(set-option :print-success false)
(set-info :smt-lib-version 2.6)
(set-option :auto_config false)
(set-option :type_check true)
(set-option :smt.case_split 3)
(set-option :smt.qi.eager_threshold 100)
(set-option :smt.delay_units true)
(set-option :smt.arith.solver 2)
(set-option :smt.mbqi false)
(set-option :model.compact false)
(set-option :model.v2 true)
(set-option :pp.bv_literals false)
; done setting options


(set-info :category "industrial")
(declare-sort |T@U| 0)
(declare-sort |T@T| 0)
(declare-fun real_pow (Real Real) Real)
(declare-fun UOrdering2 (|T@U| |T@U|) Bool)
(declare-fun UOrdering3 (|T@T| |T@U| |T@U|) Bool)
(declare-fun tickleBool (Bool) Bool)
(assert (and (tickleBool true) (tickleBool false)))
(declare-fun $generated (T@U) Int)
(declare-fun $generated@@0 (T@U) Bool)
(declare-fun $generated@@1 (T@T) Int)
(declare-fun $generated@@2 () T@T)
(declare-fun $generated@@3 () T@T)
(declare-fun $generated@@4 () T@T)
(declare-fun $generated@@5 () T@T)
(declare-fun $generated@@6 () T@T)
(declare-fun $generated@@7 () T@T)
(declare-fun $generated@@8 (Int) T@U)
(declare-fun type (T@U) T@T)
(declare-fun $generated@@9 (Real) T@U)
(declare-fun $generated@@10 (T@U) Real)
(declare-fun $generated@@11 (Bool) T@U)
(declare-fun $generated@@12 (RoundingMode) T@U)
(declare-fun $generated@@13 (T@U) RoundingMode)
(declare-fun $generated@@14 (String) T@U)
(declare-fun $generated@@15 (T@U) String)
(declare-fun $generated@@16 ((RegEx String)) T@U)
(declare-fun $generated@@17 (T@U) (RegEx String))
(declare-fun $generated@@44 () T@U)
(declare-fun $generated@@45 () T@U)
(declare-fun $generated@@46 () T@U)
(declare-fun $generated@@47 () T@U)
(declare-fun $generated@@48 () T@U)
(declare-fun $generated@@49 () T@U)
(declare-fun $generated@@50 () T@U)
(declare-fun $generated@@51 () T@U)
(declare-fun $generated@@52 () T@U)
(declare-fun $generated@@53 () T@U)
(declare-fun $generated@@54 () T@U)
(declare-fun $generated@@55 () T@U)
(declare-fun $generated@@56 () T@U)
(declare-fun $generated@@57 () T@U)
(declare-fun $generated@@58 () T@U)
(declare-fun $generated@@59 () T@U)
(declare-fun $generated@@60 () T@U)
(declare-fun $generated@@61 () T@U)
(declare-fun $generated@@62 () T@U)
(declare-fun $generated@@63 () T@U)
(declare-fun $generated@@64 () T@U)
(declare-fun $generated@@65 () T@U)
(declare-fun $generated@@66 () T@U)
(declare-fun $generated@@67 () T@U)
(declare-fun $generated@@68 () T@U)
(declare-fun $generated@@69 () T@U)
(declare-fun $generated@@70 () T@U)
(declare-fun $generated@@71 () T@U)
(declare-fun $generated@@72 () T@T)
(declare-fun $generated@@73 () T@T)
(declare-fun $generated@@74 (T@T) T@T)
(declare-fun $generated@@75 (T@T) T@T)
(declare-fun $generated@@76 () T@T)
(declare-fun $generated@@77 () T@T)
(declare-fun $generated@@78 () T@T)
(declare-fun $generated@@79 () T@T)
(declare-fun $generated@@82 (T@U) Int)
(declare-fun $generated@@83 (T@U) T@U)
(declare-fun $generated@@85 (T@U) T@U)
(declare-fun $generated@@87 (T@U T@U T@U) Bool)
(declare-fun $generated@@88 (Int) T@U)
(declare-fun $generated@@89 (T@T T@T) T@T)
(declare-fun $generated@@90 () T@T)
(declare-fun $generated@@91 () T@T)
(declare-fun $generated@@92 (T@T) T@T)
(declare-fun $generated@@93 (T@T) T@T)
(declare-fun $generated@@94 (T@U T@U) T@U)
(declare-fun $generated@@95 (T@U T@U T@U) T@U)
(declare-fun $generated@@96 (T@U T@U) T@U)
(declare-fun $generated@@97 (T@U T@U T@U) T@U)
(declare-fun $generated@@145 (T@U T@U) Bool)
(declare-fun $generated@@149 () T@U)
(declare-fun $generated@@150 () T@U)
(declare-fun $generated@@153 () T@U)
(declare-fun $generated@@156 (T@U T@U) Bool)
(declare-fun $generated@@158 (T@U) Bool)
(declare-fun $generated@@159 (T@U T@U) T@U)
(declare-fun $generated@@160 () T@T)
(declare-fun $generated@@166 (T@U T@U) Bool)
(declare-fun $generated@@167 (T@U) T@U)
(declare-fun $generated@@168 (T@U) T@U)
(declare-fun $generated@@169 () T@T)
(declare-fun $generated@@174 (T@U) T@U)
(declare-fun $generated@@175 (T@U) Bool)
(declare-fun $generated@@179 (T@U) T@U)
(declare-fun $generated@@183 () T@U)
(declare-fun $generated@@186 (T@U T@U) T@U)
(declare-fun $generated@@187 (T@U T@U) Bool)
(declare-fun $generated@@194 () T@U)
(declare-fun $generated@@195 (T@T T@U T@U) T@U)
(declare-fun $generated@@199 (T@U) Bool)
(declare-fun $generated@@202 (T@U) T@U)
(declare-fun $generated@@207 (T@U) T@U)
(declare-fun $generated@@212 (T@U) T@U)
(declare-fun $generated@@216 (T@U) Bool)
(declare-fun $generated@@217 (T@U T@U T@U) Bool)
(declare-fun $generated@@223 (T@U) T@U)
(declare-fun $generated@@229 (T@T) T@U)
(declare-fun $generated@@230 (T@U) Int)
(declare-fun $generated@@231 (T@T) T@T)
(declare-fun $generated@@232 (T@T) T@T)
(declare-fun $generated@@237 (T@U) T@U)
(declare-fun $generated@@250 (T@U) Int)
(declare-fun $generated@@251 (T@T) T@U)
(declare-fun $generated@@256 (T@U) T@U)
(declare-fun $generated@@257 (T@T T@T) T@U)
(declare-fun $generated@@258 (T@T T@T) T@T)
(declare-fun $generated@@259 (T@T) T@T)
(declare-fun $generated@@260 (T@T) T@T)
(declare-fun $generated@@274 (T@U) T@U)
(declare-fun $generated@@275 (T@T T@T) T@U)
(declare-fun $generated@@276 (T@T T@T) T@T)
(declare-fun $generated@@277 (T@T) T@T)
(declare-fun $generated@@278 (T@T) T@T)
(declare-fun $generated@@292 (T@U T@U) Bool)
(declare-fun $generated@@301 (T@T T@U) T@U)
(declare-fun $generated@@312 (T@U) T@U)
(declare-fun $generated@@323 (T@U) T@U)
(declare-fun $generated@@345 (T@U) T@U)
(declare-fun $generated@@346 (T@U) T@U)
(declare-fun $generated@@353 (T@U) T@U)
(declare-fun $generated@@354 (T@U) T@U)
(declare-fun $generated@@371 (T@U T@U) T@U)
(declare-fun $generated@@379 (T@U T@U) T@U)
(declare-fun $generated@@387 () Int)
(declare-fun $generated@@388 (T@U T@U) T@U)
(declare-fun $generated@@389 (T@U T@U) Bool)
(declare-fun $generated@@397 (T@T) T@U)
(declare-fun $generated@@418 (T@U) T@U)
(declare-fun $generated@@426 () T@T)
(declare-fun $generated@@436 (T@U) T@U)
(declare-fun $generated@@440 (T@U) T@U)
(declare-fun $generated@@446 (T@U) T@U)
(declare-fun $generated@@450 (T@U) T@U)
(declare-fun $generated@@458 (T@U) T@U)
(declare-fun $generated@@462 (T@U) T@U)
(declare-fun $generated@@470 (T@U) T@U)
(declare-fun $generated@@471 (T@U Int) T@U)
(declare-fun $generated@@480 (T@U) Int)
(declare-fun $generated@@482 (T@U) T@U)
(declare-fun $generated@@486 (T@U) T@U)
(declare-fun $generated@@490 (T@U) T@U)
(declare-fun $generated@@494 (T@U) T@U)
(declare-fun $generated@@508 (T@U) Int)
(declare-fun $generated@@509 (T@U) Int)
(declare-fun $generated@@525 (T@U T@U T@U) T@U)
(declare-fun $generated@@526 (T@U T@U T@U T@U) T@U)
(declare-fun $generated@@527 (T@T T@T) T@T)
(declare-fun $generated@@528 (T@T) T@T)
(declare-fun $generated@@529 (T@T) T@T)
(declare-fun $generated@@530 (T@U T@U T@U T@U) T@U)
(declare-fun $generated@@581 (T@U T@U T@U T@U) T@U)
(declare-fun $generated@@595 (T@U) T@U)
(declare-fun $generated@@599 (T@U) Bool)
(declare-fun $generated@@650 (T@U) Int)
(assert  (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (= ($generated@@1 $generated@@2) 0) (= ($generated@@1 $generated@@3) 1)) (= ($generated@@1 $generated@@4) 2)) (= ($generated@@1 $generated@@5) 3)) (= ($generated@@1 $generated@@6) 4)) (= ($generated@@1 $generated@@7) 5)) (forall (($generated@@18 Int) ) (! (= ($generated ($generated@@8 $generated@@18)) $generated@@18)
 :pattern ( ($generated@@8 $generated@@18))
))) (forall (($generated@@19 T@U) ) (!  (=> (= (type $generated@@19) $generated@@2) (= ($generated@@8 ($generated $generated@@19)) $generated@@19))
 :pattern ( ($generated $generated@@19))
))) (forall (($generated@@20 Int) ) (! (= (type ($generated@@8 $generated@@20)) $generated@@2)
 :pattern ( ($generated@@8 $generated@@20))
))) (forall (($generated@@21 Real) ) (! (= ($generated@@10 ($generated@@9 $generated@@21)) $generated@@21)
 :pattern ( ($generated@@9 $generated@@21))
))) (forall (($generated@@22 T@U) ) (!  (=> (= (type $generated@@22) $generated@@3) (= ($generated@@9 ($generated@@10 $generated@@22)) $generated@@22))
 :pattern ( ($generated@@10 $generated@@22))
))) (forall (($generated@@23 Real) ) (! (= (type ($generated@@9 $generated@@23)) $generated@@3)
 :pattern ( ($generated@@9 $generated@@23))
))) (forall (($generated@@24 Bool) ) (! (= ($generated@@0 ($generated@@11 $generated@@24)) $generated@@24)
 :pattern ( ($generated@@11 $generated@@24))
))) (forall (($generated@@25 T@U) ) (!  (=> (= (type $generated@@25) $generated@@4) (= ($generated@@11 ($generated@@0 $generated@@25)) $generated@@25))
 :pattern ( ($generated@@0 $generated@@25))
))) (forall (($generated@@26 Bool) ) (! (= (type ($generated@@11 $generated@@26)) $generated@@4)
 :pattern ( ($generated@@11 $generated@@26))
))) (forall (($generated@@27 RoundingMode) ) (! (= ($generated@@13 ($generated@@12 $generated@@27)) $generated@@27)
 :pattern ( ($generated@@12 $generated@@27))
))) (forall (($generated@@28 T@U) ) (!  (=> (= (type $generated@@28) $generated@@5) (= ($generated@@12 ($generated@@13 $generated@@28)) $generated@@28))
 :pattern ( ($generated@@13 $generated@@28))
))) (forall (($generated@@29 RoundingMode) ) (! (= (type ($generated@@12 $generated@@29)) $generated@@5)
 :pattern ( ($generated@@12 $generated@@29))
))) (forall (($generated@@30 String) ) (! (= ($generated@@15 ($generated@@14 $generated@@30)) $generated@@30)
 :pattern ( ($generated@@14 $generated@@30))
))) (forall (($generated@@31 T@U) ) (!  (=> (= (type $generated@@31) $generated@@6) (= ($generated@@14 ($generated@@15 $generated@@31)) $generated@@31))
 :pattern ( ($generated@@15 $generated@@31))
))) (forall (($generated@@32 String) ) (! (= (type ($generated@@14 $generated@@32)) $generated@@6)
 :pattern ( ($generated@@14 $generated@@32))
))) (forall (($generated@@33 (RegEx String)) ) (! (= ($generated@@17 ($generated@@16 $generated@@33)) $generated@@33)
 :pattern ( ($generated@@16 $generated@@33))
))) (forall (($generated@@34 T@U) ) (!  (=> (= (type $generated@@34) $generated@@7) (= ($generated@@16 ($generated@@17 $generated@@34)) $generated@@34))
 :pattern ( ($generated@@17 $generated@@34))
))) (forall (($generated@@35 (RegEx String)) ) (! (= (type ($generated@@16 $generated@@35)) $generated@@7)
 :pattern ( ($generated@@16 $generated@@35))
))))
(assert (forall (($generated@@36 T@U) ) (! (UOrdering2 $generated@@36 $generated@@36)
 :no-pattern ($generated $generated@@36)
 :no-pattern ($generated@@0 $generated@@36)
)))
(assert (forall (($generated@@37 T@U) ($generated@@38 T@U) ($generated@@39 T@U) ) (! (let (($generated@@40 (type $generated@@37)))
 (=> (and (and (= (type $generated@@38) $generated@@40) (= (type $generated@@39) $generated@@40)) (and (UOrdering2 $generated@@37 $generated@@38) (UOrdering2 $generated@@38 $generated@@39))) (UOrdering2 $generated@@37 $generated@@39)))
 :pattern ( (UOrdering2 $generated@@37 $generated@@38) (UOrdering2 $generated@@38 $generated@@39))
)))
(assert (forall (($generated@@41 T@U) ($generated@@42 T@U) ) (! (let (($generated@@43 (type $generated@@41)))
 (=> (= (type $generated@@42) $generated@@43) (=> (and (UOrdering2 $generated@@41 $generated@@42) (UOrdering2 $generated@@42 $generated@@41)) (= $generated@@41 $generated@@42))))
 :pattern ( (UOrdering2 $generated@@41 $generated@@42) (UOrdering2 $generated@@42 $generated@@41))
)))
(assert  (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (= ($generated@@1 $generated@@72) 6) (= (type $generated@@44) $generated@@72)) (= (type $generated@@45) $generated@@72)) (= (type $generated@@46) $generated@@72)) (= (type $generated@@47) $generated@@72)) (= (type $generated@@48) $generated@@72)) (= ($generated@@1 $generated@@73) 7)) (= (type $generated@@49) $generated@@73)) (= (type $generated@@50) $generated@@73)) (= (type $generated@@51) $generated@@73)) (= (type $generated@@52) $generated@@73)) (= (type $generated@@53) $generated@@73)) (= (type $generated@@54) $generated@@73)) (= (type $generated@@55) $generated@@73)) (= (type $generated@@56) $generated@@73)) (= (type $generated@@57) $generated@@73)) (= (type $generated@@58) $generated@@73)) (= (type $generated@@59) $generated@@73)) (forall (($generated@@80 T@T) ) (= ($generated@@1 ($generated@@74 $generated@@80)) 8))) (forall (($generated@@81 T@T) ) (! (= ($generated@@75 ($generated@@74 $generated@@81)) $generated@@81)
 :pattern ( ($generated@@74 $generated@@81))
))) (= (type $generated@@60) ($generated@@74 $generated@@4))) (= ($generated@@1 $generated@@76) 9)) (= (type $generated@@61) $generated@@76)) (= ($generated@@1 $generated@@77) 10)) (= (type $generated@@62) $generated@@77)) (= (type $generated@@63) $generated@@73)) (= (type $generated@@64) $generated@@73)) (= ($generated@@1 $generated@@78) 11)) (= (type $generated@@65) $generated@@78)) (= (type $generated@@66) $generated@@73)) (= (type $generated@@67) $generated@@73)) (= ($generated@@1 $generated@@79) 12)) (= (type $generated@@68) $generated@@79)) (= (type $generated@@69) $generated@@79)) (= (type $generated@@70) $generated@@79)) (= (type $generated@@71) $generated@@76)))
(assert (distinct $generated@@44 $generated@@45 $generated@@46 $generated@@47 $generated@@48 $generated@@49 $generated@@50 $generated@@51 $generated@@52 $generated@@53 $generated@@54 $generated@@55 $generated@@56 $generated@@57 $generated@@58 $generated@@59 $generated@@60 $generated@@61 $generated@@62 $generated@@63 $generated@@64 $generated@@65 $generated@@66 $generated@@67 $generated@@68 $generated@@69 $generated@@70 $generated@@71)
)
(assert (= ($generated@@82 $generated@@60) 0))
(assert (forall (($generated@@84 T@U) ) (! (= (type ($generated@@83 $generated@@84)) $generated@@73)
 :pattern ( ($generated@@83 $generated@@84))
)))
(assert (= ($generated@@83 $generated@@44) $generated@@49))
(assert (= ($generated@@83 $generated@@45) $generated@@50))
(assert (= ($generated@@83 $generated@@46) $generated@@51))
(assert (= ($generated@@83 $generated@@47) $generated@@52))
(assert (= ($generated@@83 $generated@@48) $generated@@53))
(assert (forall (($generated@@86 T@U) ) (! (= (type ($generated@@85 $generated@@86)) $generated@@76)
 :pattern ( ($generated@@85 $generated@@86))
)))
(assert (= ($generated@@85 $generated@@60) $generated@@61))
(assert  (and (and (and (and (and (and (and (and (and (and (and (and (and (forall (($generated@@98 T@T) ($generated@@99 T@T) ) (= ($generated@@1 ($generated@@89 $generated@@98 $generated@@99)) 13)) (forall (($generated@@100 T@T) ($generated@@101 T@T) ) (! (= ($generated@@92 ($generated@@89 $generated@@100 $generated@@101)) $generated@@100)
 :pattern ( ($generated@@89 $generated@@100 $generated@@101))
))) (forall (($generated@@102 T@T) ($generated@@103 T@T) ) (! (= ($generated@@93 ($generated@@89 $generated@@102 $generated@@103)) $generated@@103)
 :pattern ( ($generated@@89 $generated@@102 $generated@@103))
))) (forall (($generated@@104 T@U) ($generated@@105 T@U) ) (! (let (($generated@@106 ($generated@@93 (type $generated@@104))))
(= (type ($generated@@94 $generated@@104 $generated@@105)) $generated@@106))
 :pattern ( ($generated@@94 $generated@@104 $generated@@105))
))) (forall (($generated@@107 T@U) ($generated@@108 T@U) ($generated@@109 T@U) ) (! (let (($generated@@110 (type $generated@@109)))
(let (($generated@@111 (type $generated@@108)))
(= (type ($generated@@95 $generated@@107 $generated@@108 $generated@@109)) ($generated@@89 $generated@@111 $generated@@110))))
 :pattern ( ($generated@@95 $generated@@107 $generated@@108 $generated@@109))
))) (forall (($generated@@112 T@U) ($generated@@113 T@U) ($generated@@114 T@U) ) (! (let (($generated@@115 ($generated@@93 (type $generated@@112))))
 (=> (= (type $generated@@114) $generated@@115) (= ($generated@@94 ($generated@@95 $generated@@112 $generated@@113 $generated@@114) $generated@@113) $generated@@114)))
 :weight 0
))) (and (forall (($generated@@116 T@U) ($generated@@117 T@U) ($generated@@118 T@U) ($generated@@119 T@U) ) (!  (or (= $generated@@118 $generated@@119) (= ($generated@@94 ($generated@@95 $generated@@117 $generated@@118 $generated@@116) $generated@@119) ($generated@@94 $generated@@117 $generated@@119)))
 :weight 0
)) (forall (($generated@@120 T@U) ($generated@@121 T@U) ($generated@@122 T@U) ($generated@@123 T@U) ) (!  (or true (= ($generated@@94 ($generated@@95 $generated@@121 $generated@@122 $generated@@120) $generated@@123) ($generated@@94 $generated@@121 $generated@@123)))
 :weight 0
)))) (= ($generated@@1 $generated@@90) 14)) (forall (($generated@@124 T@U) ($generated@@125 T@U) ) (! (let (($generated@@126 ($generated@@75 (type $generated@@125))))
(= (type ($generated@@96 $generated@@124 $generated@@125)) $generated@@126))
 :pattern ( ($generated@@96 $generated@@124 $generated@@125))
))) (= ($generated@@1 $generated@@91) 15)) (forall (($generated@@127 T@U) ($generated@@128 T@U) ($generated@@129 T@U) ) (! (= (type ($generated@@97 $generated@@127 $generated@@128 $generated@@129)) $generated@@91)
 :pattern ( ($generated@@97 $generated@@127 $generated@@128 $generated@@129))
))) (forall (($generated@@130 T@U) ($generated@@131 T@U) ($generated@@132 T@U) ) (! (let (($generated@@133 ($generated@@75 (type $generated@@131))))
 (=> (= (type $generated@@132) $generated@@133) (= ($generated@@96 ($generated@@97 $generated@@130 $generated@@131 $generated@@132) $generated@@131) $generated@@132)))
 :weight 0
))) (and (forall (($generated@@134 T@U) ($generated@@135 T@U) ($generated@@136 T@U) ($generated@@137 T@U) ) (!  (or (= $generated@@136 $generated@@137) (= ($generated@@96 ($generated@@97 $generated@@135 $generated@@136 $generated@@134) $generated@@137) ($generated@@96 $generated@@135 $generated@@137)))
 :weight 0
)) (forall (($generated@@138 T@U) ($generated@@139 T@U) ($generated@@140 T@U) ($generated@@141 T@U) ) (!  (or true (= ($generated@@96 ($generated@@97 $generated@@139 $generated@@140 $generated@@138) $generated@@141) ($generated@@96 $generated@@139 $generated@@141)))
 :weight 0
)))) (forall (($generated@@142 Int) ) (! (= (type ($generated@@88 $generated@@142)) $generated@@72)
 :pattern ( ($generated@@88 $generated@@142))
))))
(assert (forall (($generated@@143 T@U) ($generated@@144 T@U) ) (!  (=> (and (= (type $generated@@143) $generated@@2) (= (type $generated@@144) ($generated@@89 $generated@@90 $generated@@91))) ($generated@@87 $generated@@143 ($generated@@88 0) $generated@@144))
 :pattern ( ($generated@@87 $generated@@143 ($generated@@88 0) $generated@@144))
)))
(assert (forall (($generated@@146 T@U) ($generated@@147 T@U) ) (!  (=> (and (and (= (type $generated@@146) ($generated@@89 $generated@@90 $generated@@91)) (= (type $generated@@147) ($generated@@89 $generated@@90 $generated@@91))) ($generated@@145 $generated@@146 $generated@@147)) (forall (($generated@@148 T@U) ) (!  (=> (and (= (type $generated@@148) $generated@@90) ($generated@@0 ($generated@@96 ($generated@@94 $generated@@146 $generated@@148) $generated@@60))) ($generated@@0 ($generated@@96 ($generated@@94 $generated@@147 $generated@@148) $generated@@60)))
 :pattern ( ($generated@@96 ($generated@@94 $generated@@147 $generated@@148) $generated@@60))
)))
 :pattern ( ($generated@@145 $generated@@146 $generated@@147))
)))
(assert  (and (= (type $generated@@149) $generated@@72) (= (type $generated@@150) $generated@@90)))
(assert (forall (($generated@@151 T@U) ($generated@@152 T@U) ) (!  (=> (and (= (type $generated@@151) $generated@@90) (= (type $generated@@152) ($generated@@89 $generated@@90 $generated@@91))) (= ($generated@@87 $generated@@151 $generated@@149 $generated@@152)  (or (= $generated@@151 $generated@@150) ($generated@@0 ($generated@@96 ($generated@@94 $generated@@152 $generated@@151) $generated@@60)))))
 :pattern ( ($generated@@87 $generated@@151 $generated@@149 $generated@@152))
)))
(assert (= (type $generated@@153) $generated@@72))
(assert (forall (($generated@@154 T@U) ($generated@@155 T@U) ) (!  (=> (and (= (type $generated@@154) $generated@@90) (= (type $generated@@155) ($generated@@89 $generated@@90 $generated@@91))) (= ($generated@@87 $generated@@154 $generated@@153 $generated@@155)  (or (= $generated@@154 $generated@@150) ($generated@@0 ($generated@@96 ($generated@@94 $generated@@155 $generated@@154) $generated@@60)))))
 :pattern ( ($generated@@87 $generated@@154 $generated@@153 $generated@@155))
)))
(assert (forall (($generated@@157 T@U) ) (!  (=> (= (type $generated@@157) $generated@@2) ($generated@@156 $generated@@157 ($generated@@88 0)))
 :pattern ( ($generated@@156 $generated@@157 ($generated@@88 0)))
)))
(assert  (and (= ($generated@@1 $generated@@160) 16) (forall (($generated@@161 T@U) ($generated@@162 T@U) ) (! (= (type ($generated@@159 $generated@@161 $generated@@162)) $generated@@72)
 :pattern ( ($generated@@159 $generated@@161 $generated@@162))
))))
(assert (forall (($generated@@163 T@U) ($generated@@164 T@U) ($generated@@165 T@U) ) (!  (=> (and (and (and (= (type $generated@@163) $generated@@72) (= (type $generated@@164) $generated@@72)) (= (type $generated@@165) $generated@@160)) ($generated@@156 $generated@@165 ($generated@@159 $generated@@163 $generated@@164))) ($generated@@158 $generated@@165))
 :pattern ( ($generated@@158 $generated@@165) ($generated@@156 $generated@@165 ($generated@@159 $generated@@163 $generated@@164)))
)))
(assert  (and (and (= ($generated@@1 $generated@@169) 17) (forall (($generated@@170 T@U) ) (! (= (type ($generated@@167 $generated@@170)) $generated@@169)
 :pattern ( ($generated@@167 $generated@@170))
))) (forall (($generated@@171 T@U) ) (! (= (type ($generated@@168 $generated@@171)) $generated@@169)
 :pattern ( ($generated@@168 $generated@@171))
))))
(assert (forall (($generated@@172 T@U) ($generated@@173 T@U) ) (!  (=> (and (and (= (type $generated@@172) $generated@@160) (= (type $generated@@173) $generated@@160)) true) (= ($generated@@166 $generated@@172 $generated@@173)  (and (= ($generated@@167 $generated@@172) ($generated@@167 $generated@@173)) (= ($generated@@168 $generated@@172) ($generated@@168 $generated@@173)))))
 :pattern ( ($generated@@166 $generated@@172 $generated@@173))
)))
(assert (forall (($generated@@176 T@U) ) (! (= (type ($generated@@174 $generated@@176)) $generated@@72)
 :pattern ( ($generated@@174 $generated@@176))
)))
(assert (forall (($generated@@177 T@U) ($generated@@178 T@U) ) (!  (=> (and (and (= (type $generated@@177) ($generated@@89 $generated@@169 $generated@@2)) (= (type $generated@@178) $generated@@72)) ($generated@@156 $generated@@177 ($generated@@174 $generated@@178))) ($generated@@175 $generated@@177))
 :pattern ( ($generated@@156 $generated@@177 ($generated@@174 $generated@@178)))
)))
(assert (forall (($generated@@180 T@U) ) (! (= (type ($generated@@179 $generated@@180)) $generated@@72)
 :pattern ( ($generated@@179 $generated@@180))
)))
(assert (forall (($generated@@181 T@U) ) (!  (=> (= (type $generated@@181) $generated@@90) (= ($generated@@156 $generated@@181 $generated@@149)  (or (= $generated@@181 $generated@@150) (= ($generated@@179 $generated@@181) $generated@@149))))
 :pattern ( ($generated@@156 $generated@@181 $generated@@149))
)))
(assert (forall (($generated@@182 T@U) ) (!  (=> (= (type $generated@@182) $generated@@90) (= ($generated@@156 $generated@@182 $generated@@153)  (or (= $generated@@182 $generated@@150) (= ($generated@@179 $generated@@182) $generated@@153))))
 :pattern ( ($generated@@156 $generated@@182 $generated@@153))
)))
(assert (= (type $generated@@183) $generated@@72))
(assert (forall (($generated@@184 T@U) ($generated@@185 T@U) ) (!  (=> (and (= (type $generated@@184) $generated@@90) (= (type $generated@@185) ($generated@@89 $generated@@90 $generated@@91))) (= ($generated@@87 $generated@@184 $generated@@183 $generated@@185) ($generated@@87 $generated@@184 $generated@@153 $generated@@185)))
 :pattern ( ($generated@@87 $generated@@184 $generated@@183 $generated@@185))
)))
(assert (forall (($generated@@188 T@U) ($generated@@189 T@U) ) (! (= (type ($generated@@186 $generated@@188 $generated@@189)) $generated@@160)
 :pattern ( ($generated@@186 $generated@@188 $generated@@189))
)))
(assert (forall (($generated@@190 T@U) ($generated@@191 T@U) ($generated@@192 T@U) ($generated@@193 T@U) ) (!  (=> (and (and (and (= (type $generated@@190) $generated@@72) (= (type $generated@@191) $generated@@72)) (= (type $generated@@192) $generated@@169)) (= (type $generated@@193) $generated@@169)) (= ($generated@@156 ($generated@@186 $generated@@192 $generated@@193) ($generated@@159 $generated@@190 $generated@@191))  (and ($generated@@187 $generated@@192 $generated@@190) ($generated@@187 $generated@@193 $generated@@191))))
 :pattern ( ($generated@@156 ($generated@@186 $generated@@192 $generated@@193) ($generated@@159 $generated@@190 $generated@@191)))
)))
(assert (= (type $generated@@194) ($generated@@74 $generated@@90)))
(assert (= ($generated@@82 $generated@@194) 0))
(assert (forall (($generated@@196 T@T) ($generated@@197 T@U) ($generated@@198 T@U) ) (! (= (type ($generated@@195 $generated@@196 $generated@@197 $generated@@198)) ($generated@@74 $generated@@196))
 :pattern ( ($generated@@195 $generated@@196 $generated@@197 $generated@@198))
)))
(assert (= ($generated@@195 $generated@@90 $generated@@65 $generated@@71) $generated@@194))
(assert  (not ($generated@@199 $generated@@194)))
(assert (forall (($generated@@200 T@U) ($generated@@201 T@U) ) (!  (=> (and (= (type $generated@@200) $generated@@160) (= (type $generated@@201) $generated@@160)) (= ($generated@@166 $generated@@200 $generated@@201) (= $generated@@200 $generated@@201)))
 :pattern ( ($generated@@166 $generated@@200 $generated@@201))
)))
(assert (forall (($generated@@203 T@U) ) (! (= (type ($generated@@202 $generated@@203)) $generated@@72)
 :pattern ( ($generated@@202 $generated@@203))
)))
(assert (forall (($generated@@204 T@U) ($generated@@205 T@U) ) (!  (=> (and (= (type $generated@@204) ($generated@@89 $generated@@169 $generated@@4)) (= (type $generated@@205) $generated@@72)) (= ($generated@@156 $generated@@204 ($generated@@202 $generated@@205)) (forall (($generated@@206 T@U) ) (!  (=> (and (= (type $generated@@206) $generated@@169) ($generated@@0 ($generated@@94 $generated@@204 $generated@@206))) ($generated@@187 $generated@@206 $generated@@205))
 :pattern ( ($generated@@94 $generated@@204 $generated@@206))
))))
 :pattern ( ($generated@@156 $generated@@204 ($generated@@202 $generated@@205)))
)))
(assert (forall (($generated@@208 T@U) ) (! (= (type ($generated@@207 $generated@@208)) $generated@@72)
 :pattern ( ($generated@@207 $generated@@208))
)))
(assert (forall (($generated@@209 T@U) ($generated@@210 T@U) ) (!  (=> (and (= (type $generated@@209) ($generated@@89 $generated@@169 $generated@@4)) (= (type $generated@@210) $generated@@72)) (= ($generated@@156 $generated@@209 ($generated@@207 $generated@@210)) (forall (($generated@@211 T@U) ) (!  (=> (and (= (type $generated@@211) $generated@@169) ($generated@@0 ($generated@@94 $generated@@209 $generated@@211))) ($generated@@187 $generated@@211 $generated@@210))
 :pattern ( ($generated@@94 $generated@@209 $generated@@211))
))))
 :pattern ( ($generated@@156 $generated@@209 ($generated@@207 $generated@@210)))
)))
(assert (forall (($generated@@213 T@U) ) (! (let (($generated@@214 (type $generated@@213)))
(= (type ($generated@@212 $generated@@213)) $generated@@214))
 :pattern ( ($generated@@212 $generated@@213))
)))
(assert (forall (($generated@@215 T@U) ) (! (= ($generated@@212 $generated@@215) $generated@@215)
 :pattern ( ($generated@@212 $generated@@215))
)))
(assert (forall (($generated@@218 T@U) ($generated@@219 T@U) ($generated@@220 T@U) ($generated@@221 T@U) ($generated@@222 T@U) ) (!  (=> (and (and (and (and (and (= (type $generated@@218) $generated@@72) (= (type $generated@@219) $generated@@72)) (= (type $generated@@220) $generated@@169)) (= (type $generated@@221) $generated@@169)) (= (type $generated@@222) ($generated@@89 $generated@@90 $generated@@91))) ($generated@@216 $generated@@222)) (= ($generated@@87 ($generated@@186 $generated@@220 $generated@@221) ($generated@@159 $generated@@218 $generated@@219) $generated@@222)  (and ($generated@@217 $generated@@220 $generated@@218 $generated@@222) ($generated@@217 $generated@@221 $generated@@219 $generated@@222))))
 :pattern ( ($generated@@87 ($generated@@186 $generated@@220 $generated@@221) ($generated@@159 $generated@@218 $generated@@219) $generated@@222))
)))
(assert (forall (($generated@@224 T@U) ) (! (= (type ($generated@@223 $generated@@224)) $generated@@77)
 :pattern ( ($generated@@223 $generated@@224))
)))
(assert (forall (($generated@@225 T@U) ) (!  (=> (= (type $generated@@225) $generated@@160) (= ($generated@@158 $generated@@225) (= ($generated@@223 $generated@@225) $generated@@62)))
 :pattern ( ($generated@@158 $generated@@225))
)))
(assert (forall (($generated@@226 T@U) ) (!  (=> (and (= (type $generated@@226) $generated@@160) ($generated@@158 $generated@@226)) (exists (($generated@@227 T@U) ($generated@@228 T@U) ) (!  (and (and (= (type $generated@@227) $generated@@169) (= (type $generated@@228) $generated@@169)) (= $generated@@226 ($generated@@186 $generated@@227 $generated@@228)))
 :no-pattern (type $generated@@227)
 :no-pattern (type $generated@@228)
 :no-pattern ($generated $generated@@227)
 :no-pattern ($generated@@0 $generated@@227)
 :no-pattern ($generated $generated@@228)
 :no-pattern ($generated@@0 $generated@@228)
)))
 :pattern ( ($generated@@158 $generated@@226))
)))
(assert  (and (and (forall (($generated@@233 T@T) ) (= ($generated@@1 ($generated@@231 $generated@@233)) 18)) (forall (($generated@@234 T@T) ) (! (= ($generated@@232 ($generated@@231 $generated@@234)) $generated@@234)
 :pattern ( ($generated@@231 $generated@@234))
))) (forall (($generated@@235 T@T) ) (! (= (type ($generated@@229 $generated@@235)) ($generated@@231 $generated@@235))
 :pattern ( ($generated@@229 $generated@@235))
))))
(assert (forall (($generated@@236 T@T) ) (! (= ($generated@@230 ($generated@@229 $generated@@236)) 0)
 :pattern ( ($generated@@229 $generated@@236))
)))
(assert ($generated@@199 $generated@@60))
(assert (forall (($generated@@238 T@U) ) (! (= (type ($generated@@237 $generated@@238)) $generated@@169)
 :pattern ( ($generated@@237 $generated@@238))
)))
(assert (forall (($generated@@239 T@U) ($generated@@240 T@U) ($generated@@241 T@U) ) (!  (=> (and (= (type $generated@@240) $generated@@72) (= (type $generated@@241) ($generated@@89 $generated@@90 $generated@@91))) (= ($generated@@217 ($generated@@237 $generated@@239) $generated@@240 $generated@@241) ($generated@@87 $generated@@239 $generated@@240 $generated@@241)))
 :pattern ( ($generated@@217 ($generated@@237 $generated@@239) $generated@@240 $generated@@241))
)))
(assert (forall (($generated@@242 T@U) ($generated@@243 T@U) ($generated@@244 T@U) ($generated@@245 T@U) ) (!  (=> (and (and (and (and (and (= (type $generated@@242) ($generated@@89 $generated@@90 $generated@@91)) (= (type $generated@@243) ($generated@@89 $generated@@90 $generated@@91))) (= (type $generated@@244) $generated@@169)) (= (type $generated@@245) $generated@@72)) ($generated@@145 $generated@@242 $generated@@243)) ($generated@@217 $generated@@244 $generated@@245 $generated@@242)) ($generated@@217 $generated@@244 $generated@@245 $generated@@243))
 :pattern ( ($generated@@145 $generated@@242 $generated@@243) ($generated@@217 $generated@@244 $generated@@245 $generated@@242))
)))
(assert (forall (($generated@@246 T@U) ($generated@@247 T@U) ($generated@@248 T@U) ($generated@@249 T@U) ) (!  (=> (and (and (and (and (= (type $generated@@246) ($generated@@89 $generated@@90 $generated@@91)) (= (type $generated@@247) ($generated@@89 $generated@@90 $generated@@91))) (= (type $generated@@249) $generated@@72)) ($generated@@145 $generated@@246 $generated@@247)) ($generated@@87 $generated@@248 $generated@@249 $generated@@246)) ($generated@@87 $generated@@248 $generated@@249 $generated@@247))
 :pattern ( ($generated@@145 $generated@@246 $generated@@247) ($generated@@87 $generated@@248 $generated@@249 $generated@@246))
)))
(assert (forall (($generated@@252 T@T) ) (! (= (type ($generated@@251 $generated@@252)) ($generated@@89 $generated@@252 $generated@@2))
 :pattern ( ($generated@@251 $generated@@252))
)))
(assert (forall (($generated@@253 T@U) ) (! (let (($generated@@254 ($generated@@92 (type $generated@@253))))
 (=> (= (type $generated@@253) ($generated@@89 $generated@@254 $generated@@2)) (and (= (= ($generated@@250 $generated@@253) 0) (= $generated@@253 ($generated@@251 $generated@@254))) (=> (not (= ($generated@@250 $generated@@253) 0)) (exists (($generated@@255 T@U) ) (!  (and (= (type $generated@@255) $generated@@254) (< 0 ($generated ($generated@@94 $generated@@253 $generated@@255))))
 :no-pattern (type $generated@@255)
 :no-pattern ($generated $generated@@255)
 :no-pattern ($generated@@0 $generated@@255)
))))))
 :pattern ( ($generated@@250 $generated@@253))
)))
(assert  (and (and (and (and (forall (($generated@@261 T@T) ($generated@@262 T@T) ) (= ($generated@@1 ($generated@@258 $generated@@261 $generated@@262)) 19)) (forall (($generated@@263 T@T) ($generated@@264 T@T) ) (! (= ($generated@@259 ($generated@@258 $generated@@263 $generated@@264)) $generated@@263)
 :pattern ( ($generated@@258 $generated@@263 $generated@@264))
))) (forall (($generated@@265 T@T) ($generated@@266 T@T) ) (! (= ($generated@@260 ($generated@@258 $generated@@265 $generated@@266)) $generated@@266)
 :pattern ( ($generated@@258 $generated@@265 $generated@@266))
))) (forall (($generated@@267 T@U) ) (! (let (($generated@@268 ($generated@@259 (type $generated@@267))))
(= (type ($generated@@256 $generated@@267)) ($generated@@89 $generated@@268 $generated@@4)))
 :pattern ( ($generated@@256 $generated@@267))
))) (forall (($generated@@269 T@T) ($generated@@270 T@T) ) (! (= (type ($generated@@257 $generated@@269 $generated@@270)) ($generated@@258 $generated@@269 $generated@@270))
 :pattern ( ($generated@@257 $generated@@269 $generated@@270))
))))
(assert (forall (($generated@@271 T@U) ($generated@@272 T@T) ) (! (let (($generated@@273 (type $generated@@271)))
 (not ($generated@@0 ($generated@@94 ($generated@@256 ($generated@@257 $generated@@273 $generated@@272)) $generated@@271))))
 :pattern ( (let (($generated@@273 (type $generated@@271)))
($generated@@94 ($generated@@256 ($generated@@257 $generated@@273 $generated@@272)) $generated@@271)))
)))
(assert  (and (and (and (and (forall (($generated@@279 T@T) ($generated@@280 T@T) ) (= ($generated@@1 ($generated@@276 $generated@@279 $generated@@280)) 20)) (forall (($generated@@281 T@T) ($generated@@282 T@T) ) (! (= ($generated@@277 ($generated@@276 $generated@@281 $generated@@282)) $generated@@281)
 :pattern ( ($generated@@276 $generated@@281 $generated@@282))
))) (forall (($generated@@283 T@T) ($generated@@284 T@T) ) (! (= ($generated@@278 ($generated@@276 $generated@@283 $generated@@284)) $generated@@284)
 :pattern ( ($generated@@276 $generated@@283 $generated@@284))
))) (forall (($generated@@285 T@U) ) (! (let (($generated@@286 ($generated@@277 (type $generated@@285))))
(= (type ($generated@@274 $generated@@285)) ($generated@@89 $generated@@286 $generated@@4)))
 :pattern ( ($generated@@274 $generated@@285))
))) (forall (($generated@@287 T@T) ($generated@@288 T@T) ) (! (= (type ($generated@@275 $generated@@287 $generated@@288)) ($generated@@276 $generated@@287 $generated@@288))
 :pattern ( ($generated@@275 $generated@@287 $generated@@288))
))))
(assert (forall (($generated@@289 T@U) ($generated@@290 T@T) ) (! (let (($generated@@291 (type $generated@@289)))
 (not ($generated@@0 ($generated@@94 ($generated@@274 ($generated@@275 $generated@@291 $generated@@290)) $generated@@289))))
 :pattern ( (let (($generated@@291 (type $generated@@289)))
($generated@@94 ($generated@@274 ($generated@@275 $generated@@291 $generated@@290)) $generated@@289)))
)))
(assert (forall (($generated@@293 T@U) ($generated@@294 T@U) ) (!  (=> (and (and (= (type $generated@@293) ($generated@@89 $generated@@90 $generated@@91)) (= (type $generated@@294) ($generated@@89 $generated@@90 $generated@@91))) ($generated@@292 $generated@@293 $generated@@294)) (and ($generated@@145 $generated@@293 $generated@@294) (forall (($generated@@295 T@U) ($generated@@296 T@U) ) (! (let (($generated@@297 ($generated@@75 (type $generated@@296))))
 (=> (and (and (= (type $generated@@295) $generated@@90) (= (type $generated@@296) ($generated@@74 $generated@@297))) (not ($generated@@199 $generated@@296))) (= ($generated@@96 ($generated@@94 $generated@@293 $generated@@295) $generated@@296) ($generated@@96 ($generated@@94 $generated@@294 $generated@@295) $generated@@296))))
 :pattern ( ($generated@@96 ($generated@@94 $generated@@294 $generated@@295) $generated@@296))
))))
 :pattern ( ($generated@@292 $generated@@293 $generated@@294))
)))
(assert (forall (($generated@@298 T@U) ) (! (let (($generated@@299 ($generated@@92 (type $generated@@298))))
 (=> (= (type $generated@@298) ($generated@@89 $generated@@299 $generated@@2)) (= ($generated@@175 $generated@@298) (forall (($generated@@300 T@U) ) (!  (=> (= (type $generated@@300) $generated@@299) (and (<= 0 ($generated ($generated@@94 $generated@@298 $generated@@300))) (<= ($generated ($generated@@94 $generated@@298 $generated@@300)) ($generated@@250 $generated@@298))))
 :pattern ( ($generated@@94 $generated@@298 $generated@@300))
)))))
 :pattern ( ($generated@@175 $generated@@298))
)))
(assert (forall (($generated@@302 T@T) ($generated@@303 T@U) ) (! (= (type ($generated@@301 $generated@@302 $generated@@303)) $generated@@302)
 :pattern ( ($generated@@301 $generated@@302 $generated@@303))
)))
(assert (forall (($generated@@304 T@U) ) (!  (=> (and (= (type $generated@@304) $generated@@169) ($generated@@187 $generated@@304 $generated@@149)) (and (= ($generated@@237 ($generated@@301 $generated@@90 $generated@@304)) $generated@@304) ($generated@@156 ($generated@@301 $generated@@90 $generated@@304) $generated@@149)))
 :pattern ( ($generated@@187 $generated@@304 $generated@@149))
)))
(assert (forall (($generated@@305 T@U) ) (!  (=> (and (= (type $generated@@305) $generated@@169) ($generated@@187 $generated@@305 $generated@@153)) (and (= ($generated@@237 ($generated@@301 $generated@@90 $generated@@305)) $generated@@305) ($generated@@156 ($generated@@301 $generated@@90 $generated@@305) $generated@@153)))
 :pattern ( ($generated@@187 $generated@@305 $generated@@153))
)))
(assert (forall (($generated@@306 T@U) ) (!  (=> (and (= (type $generated@@306) $generated@@169) ($generated@@187 $generated@@306 $generated@@183)) (and (= ($generated@@237 ($generated@@301 $generated@@90 $generated@@306)) $generated@@306) ($generated@@156 ($generated@@301 $generated@@90 $generated@@306) $generated@@183)))
 :pattern ( ($generated@@187 $generated@@306 $generated@@183))
)))
(assert (forall (($generated@@307 T@U) ) (!  (=> (= (type $generated@@307) $generated@@90) (= ($generated@@156 $generated@@307 $generated@@183)  (and ($generated@@156 $generated@@307 $generated@@153) (not (= $generated@@307 $generated@@150)))))
 :pattern ( ($generated@@156 $generated@@307 $generated@@183))
)))
(assert (forall (($generated@@308 T@U) ) (! (let (($generated@@309 ($generated@@260 (type $generated@@308))))
(let (($generated@@310 ($generated@@259 (type $generated@@308))))
 (=> (= (type $generated@@308) ($generated@@258 $generated@@310 $generated@@309)) (or (= $generated@@308 ($generated@@257 $generated@@310 $generated@@309)) (exists (($generated@@311 T@U) ) (!  (and (= (type $generated@@311) $generated@@310) ($generated@@0 ($generated@@94 ($generated@@256 $generated@@308) $generated@@311)))
 :no-pattern (type $generated@@311)
 :no-pattern ($generated $generated@@311)
 :no-pattern ($generated@@0 $generated@@311)
))))))
 :pattern ( ($generated@@256 $generated@@308))
)))
(assert (forall (($generated@@313 T@U) ) (! (let (($generated@@314 ($generated@@260 (type $generated@@313))))
(= (type ($generated@@312 $generated@@313)) ($generated@@89 $generated@@314 $generated@@4)))
 :pattern ( ($generated@@312 $generated@@313))
)))
(assert (forall (($generated@@315 T@U) ) (! (let (($generated@@316 ($generated@@260 (type $generated@@315))))
(let (($generated@@317 ($generated@@259 (type $generated@@315))))
 (=> (= (type $generated@@315) ($generated@@258 $generated@@317 $generated@@316)) (or (= $generated@@315 ($generated@@257 $generated@@317 $generated@@316)) (exists (($generated@@318 T@U) ) (!  (and (= (type $generated@@318) $generated@@316) ($generated@@0 ($generated@@94 ($generated@@312 $generated@@315) $generated@@318)))
 :no-pattern (type $generated@@318)
 :no-pattern ($generated $generated@@318)
 :no-pattern ($generated@@0 $generated@@318)
))))))
 :pattern ( ($generated@@312 $generated@@315))
)))
(assert (forall (($generated@@319 T@U) ) (! (let (($generated@@320 ($generated@@278 (type $generated@@319))))
(let (($generated@@321 ($generated@@277 (type $generated@@319))))
 (=> (= (type $generated@@319) ($generated@@276 $generated@@321 $generated@@320)) (or (= $generated@@319 ($generated@@275 $generated@@321 $generated@@320)) (exists (($generated@@322 T@U) ) (!  (and (= (type $generated@@322) $generated@@321) ($generated@@0 ($generated@@94 ($generated@@274 $generated@@319) $generated@@322)))
 :no-pattern (type $generated@@322)
 :no-pattern ($generated $generated@@322)
 :no-pattern ($generated@@0 $generated@@322)
))))))
 :pattern ( ($generated@@274 $generated@@319))
)))
(assert (forall (($generated@@324 T@U) ) (! (let (($generated@@325 ($generated@@278 (type $generated@@324))))
(= (type ($generated@@323 $generated@@324)) ($generated@@89 $generated@@325 $generated@@4)))
 :pattern ( ($generated@@323 $generated@@324))
)))
(assert (forall (($generated@@326 T@U) ) (! (let (($generated@@327 ($generated@@278 (type $generated@@326))))
(let (($generated@@328 ($generated@@277 (type $generated@@326))))
 (=> (= (type $generated@@326) ($generated@@276 $generated@@328 $generated@@327)) (or (= $generated@@326 ($generated@@275 $generated@@328 $generated@@327)) (exists (($generated@@329 T@U) ) (!  (and (= (type $generated@@329) $generated@@327) ($generated@@0 ($generated@@94 ($generated@@323 $generated@@326) $generated@@329)))
 :no-pattern (type $generated@@329)
 :no-pattern ($generated $generated@@329)
 :no-pattern ($generated@@0 $generated@@329)
))))))
 :pattern ( ($generated@@323 $generated@@326))
)))
(assert (forall (($generated@@330 T@U) ($generated@@331 T@U) ) (!  (=> (and (= (type $generated@@330) ($generated@@89 $generated@@169 $generated@@2)) (= (type $generated@@331) $generated@@72)) (= ($generated@@156 $generated@@330 ($generated@@174 $generated@@331)) (forall (($generated@@332 T@U) ) (!  (=> (and (= (type $generated@@332) $generated@@169) (< 0 ($generated ($generated@@94 $generated@@330 $generated@@332)))) ($generated@@187 $generated@@332 $generated@@331))
 :pattern ( ($generated@@94 $generated@@330 $generated@@332))
))))
 :pattern ( ($generated@@156 $generated@@330 ($generated@@174 $generated@@331)))
)))
(assert (forall (($generated@@333 T@U) ($generated@@334 T@U) ) (!  (=> (and (= (type $generated@@333) ($generated@@89 $generated@@90 $generated@@91)) (= (type $generated@@334) $generated@@90)) (=> (and (and ($generated@@216 $generated@@333) (and (not (= $generated@@334 $generated@@150)) (= ($generated@@179 $generated@@334) $generated@@153))) ($generated@@0 ($generated@@96 ($generated@@94 $generated@@333 $generated@@334) $generated@@60))) ($generated@@87 ($generated@@96 ($generated@@94 $generated@@333 $generated@@334) $generated@@194) $generated@@149 $generated@@333)))
 :pattern ( ($generated@@96 ($generated@@94 $generated@@333 $generated@@334) $generated@@194))
)))
(assert (forall (($generated@@335 T@U) ($generated@@336 T@U) ($generated@@337 T@U) ) (!  (=> (and (and (= (type $generated@@335) ($generated@@89 $generated@@169 $generated@@4)) (= (type $generated@@336) $generated@@72)) (= (type $generated@@337) ($generated@@89 $generated@@90 $generated@@91))) (= ($generated@@87 $generated@@335 ($generated@@202 $generated@@336) $generated@@337) (forall (($generated@@338 T@U) ) (!  (=> (and (= (type $generated@@338) $generated@@169) ($generated@@0 ($generated@@94 $generated@@335 $generated@@338))) ($generated@@217 $generated@@338 $generated@@336 $generated@@337))
 :pattern ( ($generated@@94 $generated@@335 $generated@@338))
))))
 :pattern ( ($generated@@87 $generated@@335 ($generated@@202 $generated@@336) $generated@@337))
)))
(assert (forall (($generated@@339 T@U) ($generated@@340 T@U) ($generated@@341 T@U) ) (!  (=> (and (and (= (type $generated@@339) ($generated@@89 $generated@@169 $generated@@4)) (= (type $generated@@340) $generated@@72)) (= (type $generated@@341) ($generated@@89 $generated@@90 $generated@@91))) (= ($generated@@87 $generated@@339 ($generated@@207 $generated@@340) $generated@@341) (forall (($generated@@342 T@U) ) (!  (=> (and (= (type $generated@@342) $generated@@169) ($generated@@0 ($generated@@94 $generated@@339 $generated@@342))) ($generated@@217 $generated@@342 $generated@@340 $generated@@341))
 :pattern ( ($generated@@94 $generated@@339 $generated@@342))
))))
 :pattern ( ($generated@@87 $generated@@339 ($generated@@207 $generated@@340) $generated@@341))
)))
(assert (forall (($generated@@343 T@U) ) (! (let (($generated@@344 (type $generated@@343)))
(= ($generated ($generated@@94 ($generated@@251 $generated@@344) $generated@@343)) 0))
 :pattern ( (let (($generated@@344 (type $generated@@343)))
($generated@@94 ($generated@@251 $generated@@344) $generated@@343)))
)))
(assert  (and (forall (($generated@@347 T@U) ) (! (= (type ($generated@@345 $generated@@347)) ($generated@@89 $generated@@169 $generated@@4))
 :pattern ( ($generated@@345 $generated@@347))
)) (forall (($generated@@348 T@U) ) (! (let (($generated@@349 ($generated@@260 (type $generated@@348))))
(let (($generated@@350 ($generated@@259 (type $generated@@348))))
(= (type ($generated@@346 $generated@@348)) ($generated@@89 $generated@@350 $generated@@349))))
 :pattern ( ($generated@@346 $generated@@348))
))))
(assert (forall (($generated@@351 T@U) ($generated@@352 T@U) ) (!  (=> (and (= (type $generated@@351) ($generated@@258 $generated@@169 $generated@@169)) (= (type $generated@@352) $generated@@169)) (= ($generated@@0 ($generated@@94 ($generated@@345 $generated@@351) $generated@@352))  (and ($generated@@0 ($generated@@94 ($generated@@256 $generated@@351) ($generated@@167 ($generated@@301 $generated@@160 $generated@@352)))) (= ($generated@@94 ($generated@@346 $generated@@351) ($generated@@167 ($generated@@301 $generated@@160 $generated@@352))) ($generated@@168 ($generated@@301 $generated@@160 $generated@@352))))))
 :pattern ( ($generated@@94 ($generated@@345 $generated@@351) $generated@@352))
)))
(assert  (and (forall (($generated@@355 T@U) ) (! (= (type ($generated@@353 $generated@@355)) ($generated@@89 $generated@@169 $generated@@4))
 :pattern ( ($generated@@353 $generated@@355))
)) (forall (($generated@@356 T@U) ) (! (let (($generated@@357 ($generated@@278 (type $generated@@356))))
(let (($generated@@358 ($generated@@277 (type $generated@@356))))
(= (type ($generated@@354 $generated@@356)) ($generated@@89 $generated@@358 $generated@@357))))
 :pattern ( ($generated@@354 $generated@@356))
))))
(assert (forall (($generated@@359 T@U) ($generated@@360 T@U) ) (!  (=> (and (= (type $generated@@359) ($generated@@276 $generated@@169 $generated@@169)) (= (type $generated@@360) $generated@@169)) (= ($generated@@0 ($generated@@94 ($generated@@353 $generated@@359) $generated@@360))  (and ($generated@@0 ($generated@@94 ($generated@@274 $generated@@359) ($generated@@167 ($generated@@301 $generated@@160 $generated@@360)))) (= ($generated@@94 ($generated@@354 $generated@@359) ($generated@@167 ($generated@@301 $generated@@160 $generated@@360))) ($generated@@168 ($generated@@301 $generated@@160 $generated@@360))))))
 :pattern ( ($generated@@94 ($generated@@353 $generated@@359) $generated@@360))
)))
(assert (forall (($generated@@361 T@U) ($generated@@362 T@U) ) (! (let (($generated@@363 (type $generated@@362)))
(let (($generated@@364 ($generated@@259 (type $generated@@361))))
 (=> (= (type $generated@@361) ($generated@@258 $generated@@364 $generated@@363)) (= ($generated@@0 ($generated@@94 ($generated@@312 $generated@@361) $generated@@362)) (exists (($generated@@365 T@U) ) (!  (and (= (type $generated@@365) $generated@@364) (and ($generated@@0 ($generated@@94 ($generated@@256 $generated@@361) $generated@@365)) (= $generated@@362 ($generated@@94 ($generated@@346 $generated@@361) $generated@@365))))
 :pattern ( ($generated@@94 ($generated@@256 $generated@@361) $generated@@365))
 :pattern ( ($generated@@94 ($generated@@346 $generated@@361) $generated@@365))
))))))
 :pattern ( ($generated@@94 ($generated@@312 $generated@@361) $generated@@362))
)))
(assert (forall (($generated@@366 T@U) ($generated@@367 T@U) ) (! (let (($generated@@368 (type $generated@@367)))
(let (($generated@@369 ($generated@@277 (type $generated@@366))))
 (=> (= (type $generated@@366) ($generated@@276 $generated@@369 $generated@@368)) (= ($generated@@0 ($generated@@94 ($generated@@323 $generated@@366) $generated@@367)) (exists (($generated@@370 T@U) ) (!  (and (= (type $generated@@370) $generated@@369) (and ($generated@@0 ($generated@@94 ($generated@@274 $generated@@366) $generated@@370)) (= $generated@@367 ($generated@@94 ($generated@@354 $generated@@366) $generated@@370))))
 :pattern ( ($generated@@94 ($generated@@274 $generated@@366) $generated@@370))
 :pattern ( ($generated@@94 ($generated@@354 $generated@@366) $generated@@370))
))))))
 :pattern ( ($generated@@94 ($generated@@323 $generated@@366) $generated@@367))
)))
(assert (forall (($generated@@372 T@U) ($generated@@373 T@U) ) (! (= (type ($generated@@371 $generated@@372 $generated@@373)) $generated@@72)
 :pattern ( ($generated@@371 $generated@@372 $generated@@373))
)))
(assert (forall (($generated@@374 T@U) ($generated@@375 T@U) ($generated@@376 T@U) ($generated@@377 T@U) ) (!  (=> (and (and (and (= (type $generated@@374) ($generated@@258 $generated@@169 $generated@@169)) (= (type $generated@@375) $generated@@72)) (= (type $generated@@376) $generated@@72)) (= (type $generated@@377) ($generated@@89 $generated@@90 $generated@@91))) (= ($generated@@87 $generated@@374 ($generated@@371 $generated@@375 $generated@@376) $generated@@377) (forall (($generated@@378 T@U) ) (!  (=> (and (= (type $generated@@378) $generated@@169) ($generated@@0 ($generated@@94 ($generated@@256 $generated@@374) $generated@@378))) (and ($generated@@217 ($generated@@94 ($generated@@346 $generated@@374) $generated@@378) $generated@@376 $generated@@377) ($generated@@217 $generated@@378 $generated@@375 $generated@@377)))
 :pattern ( ($generated@@94 ($generated@@346 $generated@@374) $generated@@378))
 :pattern ( ($generated@@94 ($generated@@256 $generated@@374) $generated@@378))
))))
 :pattern ( ($generated@@87 $generated@@374 ($generated@@371 $generated@@375 $generated@@376) $generated@@377))
)))
(assert (forall (($generated@@380 T@U) ($generated@@381 T@U) ) (! (= (type ($generated@@379 $generated@@380 $generated@@381)) $generated@@72)
 :pattern ( ($generated@@379 $generated@@380 $generated@@381))
)))
(assert (forall (($generated@@382 T@U) ($generated@@383 T@U) ($generated@@384 T@U) ($generated@@385 T@U) ) (!  (=> (and (and (and (= (type $generated@@382) ($generated@@276 $generated@@169 $generated@@169)) (= (type $generated@@383) $generated@@72)) (= (type $generated@@384) $generated@@72)) (= (type $generated@@385) ($generated@@89 $generated@@90 $generated@@91))) (= ($generated@@87 $generated@@382 ($generated@@379 $generated@@383 $generated@@384) $generated@@385) (forall (($generated@@386 T@U) ) (!  (=> (and (= (type $generated@@386) $generated@@169) ($generated@@0 ($generated@@94 ($generated@@274 $generated@@382) $generated@@386))) (and ($generated@@217 ($generated@@94 ($generated@@354 $generated@@382) $generated@@386) $generated@@384 $generated@@385) ($generated@@217 $generated@@386 $generated@@383 $generated@@385)))
 :pattern ( ($generated@@94 ($generated@@354 $generated@@382) $generated@@386))
 :pattern ( ($generated@@94 ($generated@@274 $generated@@382) $generated@@386))
))))
 :pattern ( ($generated@@87 $generated@@382 ($generated@@379 $generated@@383 $generated@@384) $generated@@385))
)))
(assert (forall (($generated@@390 T@U) ($generated@@391 T@U) ) (! (= (type ($generated@@388 $generated@@390 $generated@@391)) $generated@@90)
 :pattern ( ($generated@@388 $generated@@390 $generated@@391))
)))
(assert  (=> (<= 0 $generated@@387) (forall (($generated@@392 T@U) ($generated@@393 T@U) ) (!  (=> (and (and (= (type $generated@@392) ($generated@@89 $generated@@90 $generated@@91)) (= (type $generated@@393) $generated@@90)) (or ($generated@@389 $generated@@392 $generated@@393) (and (not (= 0 $generated@@387)) (and ($generated@@216 $generated@@392) (and (not (= $generated@@393 $generated@@150)) (and ($generated@@156 $generated@@393 $generated@@183) ($generated@@87 $generated@@393 $generated@@183 $generated@@392))))))) (= ($generated@@388 $generated@@392 $generated@@393) ($generated@@96 ($generated@@94 $generated@@392 $generated@@393) $generated@@194)))
 :pattern ( ($generated@@388 $generated@@392 $generated@@393) ($generated@@216 $generated@@392))
))))
(assert (forall (($generated@@394 T@U) ($generated@@395 T@U) ($generated@@396 T@U) ) (!  (=> (and (and (and (and (= (type $generated@@394) ($generated@@89 $generated@@90 $generated@@91)) (= (type $generated@@395) ($generated@@89 $generated@@90 $generated@@91))) (= (type $generated@@396) ($generated@@89 $generated@@90 $generated@@91))) (not (= $generated@@394 $generated@@396))) (and ($generated@@145 $generated@@394 $generated@@395) ($generated@@145 $generated@@395 $generated@@396))) ($generated@@145 $generated@@394 $generated@@396))
 :pattern ( ($generated@@145 $generated@@394 $generated@@395) ($generated@@145 $generated@@395 $generated@@396))
)))
(assert (forall (($generated@@398 T@T) ) (! (= (type ($generated@@397 $generated@@398)) ($generated@@89 $generated@@398 $generated@@4))
 :pattern ( ($generated@@397 $generated@@398))
)))
(assert (forall (($generated@@399 T@U) ) (! (let (($generated@@400 ($generated@@278 (type $generated@@399))))
(let (($generated@@401 ($generated@@277 (type $generated@@399))))
 (=> (= (type $generated@@399) ($generated@@276 $generated@@401 $generated@@400)) (= (= $generated@@399 ($generated@@275 $generated@@401 $generated@@400)) (= ($generated@@274 $generated@@399) ($generated@@397 $generated@@401))))))
 :pattern ( ($generated@@274 $generated@@399))
)))
(assert (forall (($generated@@402 T@U) ) (! (let (($generated@@403 ($generated@@278 (type $generated@@402))))
(let (($generated@@404 ($generated@@277 (type $generated@@402))))
 (=> (= (type $generated@@402) ($generated@@276 $generated@@404 $generated@@403)) (= (= $generated@@402 ($generated@@275 $generated@@404 $generated@@403)) (= ($generated@@323 $generated@@402) ($generated@@397 $generated@@403))))))
 :pattern ( ($generated@@323 $generated@@402))
)))
(assert (forall (($generated@@405 T@U) ) (! (let (($generated@@406 ($generated@@278 (type $generated@@405))))
(let (($generated@@407 ($generated@@277 (type $generated@@405))))
 (=> (= (type $generated@@405) ($generated@@276 $generated@@407 $generated@@406)) (= (= $generated@@405 ($generated@@275 $generated@@407 $generated@@406)) (= ($generated@@353 $generated@@405) ($generated@@397 $generated@@169))))))
 :pattern ( ($generated@@353 $generated@@405))
)))
(assert (forall (($generated@@408 T@U) ) (! (let (($generated@@409 ($generated@@260 (type $generated@@408))))
(let (($generated@@410 ($generated@@259 (type $generated@@408))))
 (=> (= (type $generated@@408) ($generated@@258 $generated@@410 $generated@@409)) (or (= $generated@@408 ($generated@@257 $generated@@410 $generated@@409)) (exists (($generated@@411 T@U) ($generated@@412 T@U) ) (!  (and (and (= (type $generated@@411) $generated@@169) (= (type $generated@@412) $generated@@169)) ($generated@@0 ($generated@@94 ($generated@@345 $generated@@408) ($generated@@237 ($generated@@186 $generated@@411 $generated@@412)))))
 :no-pattern (type $generated@@411)
 :no-pattern (type $generated@@412)
 :no-pattern ($generated $generated@@411)
 :no-pattern ($generated@@0 $generated@@411)
 :no-pattern ($generated $generated@@412)
 :no-pattern ($generated@@0 $generated@@412)
))))))
 :pattern ( ($generated@@345 $generated@@408))
)))
(assert (forall (($generated@@413 T@U) ) (! (let (($generated@@414 ($generated@@278 (type $generated@@413))))
(let (($generated@@415 ($generated@@277 (type $generated@@413))))
 (=> (= (type $generated@@413) ($generated@@276 $generated@@415 $generated@@414)) (or (= $generated@@413 ($generated@@275 $generated@@415 $generated@@414)) (exists (($generated@@416 T@U) ($generated@@417 T@U) ) (!  (and (and (= (type $generated@@416) $generated@@169) (= (type $generated@@417) $generated@@169)) ($generated@@0 ($generated@@94 ($generated@@353 $generated@@413) ($generated@@237 ($generated@@186 $generated@@416 $generated@@417)))))
 :no-pattern (type $generated@@416)
 :no-pattern (type $generated@@417)
 :no-pattern ($generated $generated@@416)
 :no-pattern ($generated@@0 $generated@@416)
 :no-pattern ($generated $generated@@417)
 :no-pattern ($generated@@0 $generated@@417)
))))))
 :pattern ( ($generated@@353 $generated@@413))
)))
(assert (forall (($generated@@419 T@U) ) (! (= (type ($generated@@418 $generated@@419)) $generated@@78)
 :pattern ( ($generated@@418 $generated@@419))
)))
(assert (forall (($generated@@420 T@U) ($generated@@421 T@U) ($generated@@422 T@T) ) (!  (=> (and (= (type $generated@@420) $generated@@78) (= (type $generated@@421) $generated@@76)) (and (= ($generated@@418 ($generated@@195 $generated@@422 $generated@@420 $generated@@421)) $generated@@420) (= ($generated@@85 ($generated@@195 $generated@@422 $generated@@420 $generated@@421)) $generated@@421)))
 :pattern ( ($generated@@195 $generated@@422 $generated@@420 $generated@@421))
)))
(assert (forall (($generated@@423 T@U) ) (!  (=> (and (= (type $generated@@423) $generated@@169) ($generated@@187 $generated@@423 $generated@@46)) (and (= ($generated@@237 ($generated@@301 $generated@@2 $generated@@423)) $generated@@423) ($generated@@156 ($generated@@301 $generated@@2 $generated@@423) $generated@@46)))
 :pattern ( ($generated@@187 $generated@@423 $generated@@46))
)))
(assert (forall (($generated@@424 T@U) ) (!  (=> (and (= (type $generated@@424) $generated@@169) ($generated@@187 $generated@@424 $generated@@47)) (and (= ($generated@@237 ($generated@@301 $generated@@3 $generated@@424)) $generated@@424) ($generated@@156 ($generated@@301 $generated@@3 $generated@@424) $generated@@47)))
 :pattern ( ($generated@@187 $generated@@424 $generated@@47))
)))
(assert (forall (($generated@@425 T@U) ) (!  (=> (and (= (type $generated@@425) $generated@@169) ($generated@@187 $generated@@425 $generated@@44)) (and (= ($generated@@237 ($generated@@301 $generated@@4 $generated@@425)) $generated@@425) ($generated@@156 ($generated@@301 $generated@@4 $generated@@425) $generated@@44)))
 :pattern ( ($generated@@187 $generated@@425 $generated@@44))
)))
(assert (= ($generated@@1 $generated@@426) 21))
(assert (forall (($generated@@427 T@U) ) (!  (=> (and (= (type $generated@@427) $generated@@169) ($generated@@187 $generated@@427 $generated@@45)) (and (= ($generated@@237 ($generated@@301 $generated@@426 $generated@@427)) $generated@@427) ($generated@@156 ($generated@@301 $generated@@426 $generated@@427) $generated@@45)))
 :pattern ( ($generated@@187 $generated@@427 $generated@@45))
)))
(assert (forall (($generated@@428 T@U) ($generated@@429 T@U) ) (!  (=> (= (type $generated@@429) $generated@@72) (= ($generated@@187 ($generated@@237 $generated@@428) $generated@@429) ($generated@@156 $generated@@428 $generated@@429)))
 :pattern ( ($generated@@187 ($generated@@237 $generated@@428) $generated@@429))
)))
(assert  (=> (<= 0 $generated@@387) (forall (($generated@@430 T@U) ($generated@@431 T@U) ) (!  (=> (and (and (= (type $generated@@430) ($generated@@89 $generated@@90 $generated@@91)) (= (type $generated@@431) $generated@@90)) (or ($generated@@389 $generated@@430 $generated@@431) (and (not (= 0 $generated@@387)) (and ($generated@@216 $generated@@430) (and (not (= $generated@@431 $generated@@150)) (and ($generated@@156 $generated@@431 $generated@@183) ($generated@@87 $generated@@431 $generated@@183 $generated@@430))))))) ($generated@@156 ($generated@@388 $generated@@430 $generated@@431) $generated@@149))
 :pattern ( ($generated@@388 $generated@@430 $generated@@431))
))))
(assert (forall (($generated@@432 T@U) ) (! (let (($generated@@433 ($generated@@92 (type $generated@@432))))
 (=> (= (type $generated@@432) ($generated@@89 $generated@@433 $generated@@2)) (<= 0 ($generated@@250 $generated@@432))))
 :pattern ( ($generated@@250 $generated@@432))
)))
(assert (forall (($generated@@434 T@U) ) (! (let (($generated@@435 ($generated@@232 (type $generated@@434))))
 (=> (= (type $generated@@434) ($generated@@231 $generated@@435)) (<= 0 ($generated@@230 $generated@@434))))
 :pattern ( ($generated@@230 $generated@@434))
)))
(assert (forall (($generated@@437 T@U) ) (! (= (type ($generated@@436 $generated@@437)) $generated@@72)
 :pattern ( ($generated@@436 $generated@@437))
)))
(assert (forall (($generated@@438 T@U) ($generated@@439 T@U) ) (!  (=> (and (= (type $generated@@438) $generated@@72) (= (type $generated@@439) $generated@@72)) (= ($generated@@436 ($generated@@371 $generated@@438 $generated@@439)) $generated@@438))
 :pattern ( ($generated@@371 $generated@@438 $generated@@439))
)))
(assert (forall (($generated@@441 T@U) ) (! (= (type ($generated@@440 $generated@@441)) $generated@@72)
 :pattern ( ($generated@@440 $generated@@441))
)))
(assert (forall (($generated@@442 T@U) ($generated@@443 T@U) ) (!  (=> (and (= (type $generated@@442) $generated@@72) (= (type $generated@@443) $generated@@72)) (= ($generated@@440 ($generated@@371 $generated@@442 $generated@@443)) $generated@@443))
 :pattern ( ($generated@@371 $generated@@442 $generated@@443))
)))
(assert (forall (($generated@@444 T@U) ($generated@@445 T@U) ) (!  (=> (and (= (type $generated@@444) $generated@@72) (= (type $generated@@445) $generated@@72)) (= ($generated@@83 ($generated@@371 $generated@@444 $generated@@445)) $generated@@58))
 :pattern ( ($generated@@371 $generated@@444 $generated@@445))
)))
(assert (forall (($generated@@447 T@U) ) (! (= (type ($generated@@446 $generated@@447)) $generated@@72)
 :pattern ( ($generated@@446 $generated@@447))
)))
(assert (forall (($generated@@448 T@U) ($generated@@449 T@U) ) (!  (=> (and (= (type $generated@@448) $generated@@72) (= (type $generated@@449) $generated@@72)) (= ($generated@@446 ($generated@@379 $generated@@448 $generated@@449)) $generated@@448))
 :pattern ( ($generated@@379 $generated@@448 $generated@@449))
)))
(assert (forall (($generated@@451 T@U) ) (! (= (type ($generated@@450 $generated@@451)) $generated@@72)
 :pattern ( ($generated@@450 $generated@@451))
)))
(assert (forall (($generated@@452 T@U) ($generated@@453 T@U) ) (!  (=> (and (= (type $generated@@452) $generated@@72) (= (type $generated@@453) $generated@@72)) (= ($generated@@450 ($generated@@379 $generated@@452 $generated@@453)) $generated@@453))
 :pattern ( ($generated@@379 $generated@@452 $generated@@453))
)))
(assert (forall (($generated@@454 T@U) ($generated@@455 T@U) ) (!  (=> (and (= (type $generated@@454) $generated@@72) (= (type $generated@@455) $generated@@72)) (= ($generated@@83 ($generated@@379 $generated@@454 $generated@@455)) $generated@@59))
 :pattern ( ($generated@@379 $generated@@454 $generated@@455))
)))
(assert (forall (($generated@@456 T@U) ($generated@@457 T@U) ) (!  (=> (and (= (type $generated@@456) $generated@@169) (= (type $generated@@457) $generated@@169)) (= ($generated@@223 ($generated@@186 $generated@@456 $generated@@457)) $generated@@62))
 :pattern ( ($generated@@186 $generated@@456 $generated@@457))
)))
(assert (forall (($generated@@459 T@U) ) (! (= (type ($generated@@458 $generated@@459)) $generated@@72)
 :pattern ( ($generated@@458 $generated@@459))
)))
(assert (forall (($generated@@460 T@U) ($generated@@461 T@U) ) (!  (=> (and (= (type $generated@@460) $generated@@72) (= (type $generated@@461) $generated@@72)) (= ($generated@@458 ($generated@@159 $generated@@460 $generated@@461)) $generated@@460))
 :pattern ( ($generated@@159 $generated@@460 $generated@@461))
)))
(assert (forall (($generated@@463 T@U) ) (! (= (type ($generated@@462 $generated@@463)) $generated@@72)
 :pattern ( ($generated@@462 $generated@@463))
)))
(assert (forall (($generated@@464 T@U) ($generated@@465 T@U) ) (!  (=> (and (= (type $generated@@464) $generated@@72) (= (type $generated@@465) $generated@@72)) (= ($generated@@462 ($generated@@159 $generated@@464 $generated@@465)) $generated@@465))
 :pattern ( ($generated@@159 $generated@@464 $generated@@465))
)))
(assert (forall (($generated@@466 T@U) ($generated@@467 T@U) ) (!  (=> (and (= (type $generated@@466) $generated@@169) (= (type $generated@@467) $generated@@169)) (= ($generated@@167 ($generated@@186 $generated@@466 $generated@@467)) $generated@@466))
 :pattern ( ($generated@@186 $generated@@466 $generated@@467))
)))
(assert (forall (($generated@@468 T@U) ($generated@@469 T@U) ) (!  (=> (and (= (type $generated@@468) $generated@@169) (= (type $generated@@469) $generated@@169)) (= ($generated@@168 ($generated@@186 $generated@@468 $generated@@469)) $generated@@469))
 :pattern ( ($generated@@186 $generated@@468 $generated@@469))
)))
(assert  (and (forall (($generated@@472 T@U) ) (! (= (type ($generated@@470 $generated@@472)) $generated@@72)
 :pattern ( ($generated@@470 $generated@@472))
)) (forall (($generated@@473 T@U) ($generated@@474 Int) ) (! (let (($generated@@475 ($generated@@232 (type $generated@@473))))
(= (type ($generated@@471 $generated@@473 $generated@@474)) $generated@@475))
 :pattern ( ($generated@@471 $generated@@473 $generated@@474))
))))
(assert (forall (($generated@@476 T@U) ($generated@@477 T@U) ($generated@@478 T@U) ) (!  (=> (and (and (= (type $generated@@476) ($generated@@231 $generated@@169)) (= (type $generated@@477) $generated@@72)) (= (type $generated@@478) ($generated@@89 $generated@@90 $generated@@91))) (= ($generated@@87 $generated@@476 ($generated@@470 $generated@@477) $generated@@478) (forall (($generated@@479 Int) ) (!  (=> (and (<= 0 $generated@@479) (< $generated@@479 ($generated@@230 $generated@@476))) ($generated@@217 ($generated@@471 $generated@@476 $generated@@479) $generated@@477 $generated@@478))
 :pattern ( ($generated@@471 $generated@@476 $generated@@479))
))))
 :pattern ( ($generated@@87 $generated@@476 ($generated@@470 $generated@@477) $generated@@478))
)))
(assert (forall (($generated@@481 Int) ) (! (= ($generated@@480 ($generated@@88 $generated@@481)) $generated@@481)
 :pattern ( ($generated@@88 $generated@@481))
)))
(assert (forall (($generated@@483 T@U) ) (! (= (type ($generated@@482 $generated@@483)) $generated@@72)
 :pattern ( ($generated@@482 $generated@@483))
)))
(assert (forall (($generated@@484 T@U) ) (!  (=> (= (type $generated@@484) $generated@@72) (= ($generated@@482 ($generated@@202 $generated@@484)) $generated@@484))
 :pattern ( ($generated@@202 $generated@@484))
)))
(assert (forall (($generated@@485 T@U) ) (!  (=> (= (type $generated@@485) $generated@@72) (= ($generated@@83 ($generated@@202 $generated@@485)) $generated@@54))
 :pattern ( ($generated@@202 $generated@@485))
)))
(assert (forall (($generated@@487 T@U) ) (! (= (type ($generated@@486 $generated@@487)) $generated@@72)
 :pattern ( ($generated@@486 $generated@@487))
)))
(assert (forall (($generated@@488 T@U) ) (!  (=> (= (type $generated@@488) $generated@@72) (= ($generated@@486 ($generated@@207 $generated@@488)) $generated@@488))
 :pattern ( ($generated@@207 $generated@@488))
)))
(assert (forall (($generated@@489 T@U) ) (!  (=> (= (type $generated@@489) $generated@@72) (= ($generated@@83 ($generated@@207 $generated@@489)) $generated@@55))
 :pattern ( ($generated@@207 $generated@@489))
)))
(assert (forall (($generated@@491 T@U) ) (! (= (type ($generated@@490 $generated@@491)) $generated@@72)
 :pattern ( ($generated@@490 $generated@@491))
)))
(assert (forall (($generated@@492 T@U) ) (!  (=> (= (type $generated@@492) $generated@@72) (= ($generated@@490 ($generated@@174 $generated@@492)) $generated@@492))
 :pattern ( ($generated@@174 $generated@@492))
)))
(assert (forall (($generated@@493 T@U) ) (!  (=> (= (type $generated@@493) $generated@@72) (= ($generated@@83 ($generated@@174 $generated@@493)) $generated@@56))
 :pattern ( ($generated@@174 $generated@@493))
)))
(assert (forall (($generated@@495 T@U) ) (! (= (type ($generated@@494 $generated@@495)) $generated@@72)
 :pattern ( ($generated@@494 $generated@@495))
)))
(assert (forall (($generated@@496 T@U) ) (!  (=> (= (type $generated@@496) $generated@@72) (= ($generated@@494 ($generated@@470 $generated@@496)) $generated@@496))
 :pattern ( ($generated@@470 $generated@@496))
)))
(assert (forall (($generated@@497 T@U) ) (!  (=> (= (type $generated@@497) $generated@@72) (= ($generated@@83 ($generated@@470 $generated@@497)) $generated@@57))
 :pattern ( ($generated@@470 $generated@@497))
)))
(assert (forall (($generated@@498 T@U) ) (! (let (($generated@@499 (type $generated@@498)))
(= ($generated@@301 $generated@@499 ($generated@@237 $generated@@498)) $generated@@498))
 :pattern ( ($generated@@237 $generated@@498))
)))
(assert (forall (($generated@@500 T@U) ($generated@@501 T@U) ($generated@@502 T@U) ) (!  (=> (and (and (= (type $generated@@500) ($generated@@258 $generated@@169 $generated@@169)) (= (type $generated@@501) $generated@@72)) (= (type $generated@@502) $generated@@72)) (= ($generated@@156 $generated@@500 ($generated@@371 $generated@@501 $generated@@502)) (forall (($generated@@503 T@U) ) (!  (=> (and (= (type $generated@@503) $generated@@169) ($generated@@0 ($generated@@94 ($generated@@256 $generated@@500) $generated@@503))) (and ($generated@@187 ($generated@@94 ($generated@@346 $generated@@500) $generated@@503) $generated@@502) ($generated@@187 $generated@@503 $generated@@501)))
 :pattern ( ($generated@@94 ($generated@@346 $generated@@500) $generated@@503))
 :pattern ( ($generated@@94 ($generated@@256 $generated@@500) $generated@@503))
))))
 :pattern ( ($generated@@156 $generated@@500 ($generated@@371 $generated@@501 $generated@@502)))
)))
(assert (forall (($generated@@504 T@U) ($generated@@505 T@U) ($generated@@506 T@U) ) (!  (=> (and (and (= (type $generated@@504) ($generated@@276 $generated@@169 $generated@@169)) (= (type $generated@@505) $generated@@72)) (= (type $generated@@506) $generated@@72)) (= ($generated@@156 $generated@@504 ($generated@@379 $generated@@505 $generated@@506)) (forall (($generated@@507 T@U) ) (!  (=> (and (= (type $generated@@507) $generated@@169) ($generated@@0 ($generated@@94 ($generated@@274 $generated@@504) $generated@@507))) (and ($generated@@187 ($generated@@94 ($generated@@354 $generated@@504) $generated@@507) $generated@@506) ($generated@@187 $generated@@507 $generated@@505)))
 :pattern ( ($generated@@94 ($generated@@354 $generated@@504) $generated@@507))
 :pattern ( ($generated@@94 ($generated@@274 $generated@@504) $generated@@507))
))))
 :pattern ( ($generated@@156 $generated@@504 ($generated@@379 $generated@@505 $generated@@506)))
)))
(assert (forall (($generated@@510 T@U) ($generated@@511 T@U) ) (!  (=> (and (= (type $generated@@510) $generated@@169) (= (type $generated@@511) $generated@@169)) (< ($generated@@508 $generated@@510) ($generated@@509 ($generated@@186 $generated@@510 $generated@@511))))
 :pattern ( ($generated@@186 $generated@@510 $generated@@511))
)))
(assert (forall (($generated@@512 T@U) ($generated@@513 T@U) ) (!  (=> (and (= (type $generated@@512) $generated@@169) (= (type $generated@@513) $generated@@169)) (< ($generated@@508 $generated@@513) ($generated@@509 ($generated@@186 $generated@@512 $generated@@513))))
 :pattern ( ($generated@@186 $generated@@512 $generated@@513))
)))
(assert (forall (($generated@@514 T@U) ($generated@@515 T@U) ($generated@@516 T@U) ) (!  (=> (and (and (and (= (type $generated@@514) $generated@@169) (= (type $generated@@515) $generated@@72)) (= (type $generated@@516) $generated@@72)) ($generated@@187 $generated@@514 ($generated@@371 $generated@@515 $generated@@516))) (and (= ($generated@@237 ($generated@@301 ($generated@@258 $generated@@169 $generated@@169) $generated@@514)) $generated@@514) ($generated@@156 ($generated@@301 ($generated@@258 $generated@@169 $generated@@169) $generated@@514) ($generated@@371 $generated@@515 $generated@@516))))
 :pattern ( ($generated@@187 $generated@@514 ($generated@@371 $generated@@515 $generated@@516)))
)))
(assert (forall (($generated@@517 T@U) ($generated@@518 T@U) ($generated@@519 T@U) ) (!  (=> (and (and (and (= (type $generated@@517) $generated@@169) (= (type $generated@@518) $generated@@72)) (= (type $generated@@519) $generated@@72)) ($generated@@187 $generated@@517 ($generated@@379 $generated@@518 $generated@@519))) (and (= ($generated@@237 ($generated@@301 ($generated@@276 $generated@@169 $generated@@169) $generated@@517)) $generated@@517) ($generated@@156 ($generated@@301 ($generated@@276 $generated@@169 $generated@@169) $generated@@517) ($generated@@379 $generated@@518 $generated@@519))))
 :pattern ( ($generated@@187 $generated@@517 ($generated@@379 $generated@@518 $generated@@519)))
)))
(assert (forall (($generated@@520 T@U) ($generated@@521 T@U) ($generated@@522 T@U) ) (!  (=> (and (and (and (= (type $generated@@520) $generated@@72) (= (type $generated@@521) $generated@@72)) (= (type $generated@@522) $generated@@169)) ($generated@@187 $generated@@522 ($generated@@159 $generated@@520 $generated@@521))) (and (= ($generated@@237 ($generated@@301 $generated@@160 $generated@@522)) $generated@@522) ($generated@@156 ($generated@@301 $generated@@160 $generated@@522) ($generated@@159 $generated@@520 $generated@@521))))
 :pattern ( ($generated@@187 $generated@@522 ($generated@@159 $generated@@520 $generated@@521)))
)))
(assert (forall (($generated@@523 T@U) ) (! (let (($generated@@524 (type $generated@@523)))
 (not ($generated@@0 ($generated@@94 ($generated@@397 $generated@@524) $generated@@523))))
 :pattern ( (let (($generated@@524 (type $generated@@523)))
($generated@@94 ($generated@@397 $generated@@524) $generated@@523)))
)))
(assert  (and (and (and (and (and (and (and (forall (($generated@@531 T@T) ($generated@@532 T@T) ) (= ($generated@@1 ($generated@@527 $generated@@531 $generated@@532)) 22)) (forall (($generated@@533 T@T) ($generated@@534 T@T) ) (! (= ($generated@@528 ($generated@@527 $generated@@533 $generated@@534)) $generated@@533)
 :pattern ( ($generated@@527 $generated@@533 $generated@@534))
))) (forall (($generated@@535 T@T) ($generated@@536 T@T) ) (! (= ($generated@@529 ($generated@@527 $generated@@535 $generated@@536)) $generated@@536)
 :pattern ( ($generated@@527 $generated@@535 $generated@@536))
))) (forall (($generated@@537 T@U) ($generated@@538 T@U) ($generated@@539 T@U) ) (! (let (($generated@@540 ($generated@@529 (type $generated@@537))))
(= (type ($generated@@525 $generated@@537 $generated@@538 $generated@@539)) $generated@@540))
 :pattern ( ($generated@@525 $generated@@537 $generated@@538 $generated@@539))
))) (forall (($generated@@541 T@U) ($generated@@542 T@U) ($generated@@543 T@U) ($generated@@544 T@U) ) (! (let (($generated@@545 (type $generated@@544)))
(let (($generated@@546 (type $generated@@542)))
(= (type ($generated@@530 $generated@@541 $generated@@542 $generated@@543 $generated@@544)) ($generated@@527 $generated@@546 $generated@@545))))
 :pattern ( ($generated@@530 $generated@@541 $generated@@542 $generated@@543 $generated@@544))
))) (forall (($generated@@547 T@U) ($generated@@548 T@U) ($generated@@549 T@U) ($generated@@550 T@U) ) (! (let (($generated@@551 ($generated@@529 (type $generated@@547))))
 (=> (= (type $generated@@550) $generated@@551) (= ($generated@@525 ($generated@@530 $generated@@547 $generated@@548 $generated@@549 $generated@@550) $generated@@548 $generated@@549) $generated@@550)))
 :weight 0
))) (and (and (forall (($generated@@552 T@U) ($generated@@553 T@U) ($generated@@554 T@U) ($generated@@555 T@U) ($generated@@556 T@U) ($generated@@557 T@U) ) (!  (or (= $generated@@554 $generated@@556) (= ($generated@@525 ($generated@@530 $generated@@553 $generated@@554 $generated@@555 $generated@@552) $generated@@556 $generated@@557) ($generated@@525 $generated@@553 $generated@@556 $generated@@557)))
 :weight 0
)) (forall (($generated@@558 T@U) ($generated@@559 T@U) ($generated@@560 T@U) ($generated@@561 T@U) ($generated@@562 T@U) ($generated@@563 T@U) ) (!  (or (= $generated@@561 $generated@@563) (= ($generated@@525 ($generated@@530 $generated@@559 $generated@@560 $generated@@561 $generated@@558) $generated@@562 $generated@@563) ($generated@@525 $generated@@559 $generated@@562 $generated@@563)))
 :weight 0
))) (forall (($generated@@564 T@U) ($generated@@565 T@U) ($generated@@566 T@U) ($generated@@567 T@U) ($generated@@568 T@U) ($generated@@569 T@U) ) (!  (or true (= ($generated@@525 ($generated@@530 $generated@@565 $generated@@566 $generated@@567 $generated@@564) $generated@@568 $generated@@569) ($generated@@525 $generated@@565 $generated@@568 $generated@@569)))
 :weight 0
)))) (forall (($generated@@570 T@U) ($generated@@571 T@U) ($generated@@572 T@U) ($generated@@573 T@U) ) (! (= (type ($generated@@526 $generated@@570 $generated@@571 $generated@@572 $generated@@573)) ($generated@@527 $generated@@90 $generated@@4))
 :pattern ( ($generated@@526 $generated@@570 $generated@@571 $generated@@572 $generated@@573))
))))
(assert (forall (($generated@@574 T@U) ($generated@@575 T@U) ($generated@@576 T@U) ($generated@@577 T@U) ($generated@@578 T@U) ($generated@@579 T@U) ) (! (let (($generated@@580 ($generated@@75 (type $generated@@579))))
 (=> (and (and (and (and (and (= (type $generated@@574) $generated@@90) (= (type $generated@@575) ($generated@@89 $generated@@90 $generated@@91))) (= (type $generated@@576) ($generated@@74 $generated@@4))) (= (type $generated@@577) $generated@@90)) (= (type $generated@@578) $generated@@90)) (= (type $generated@@579) ($generated@@74 $generated@@580))) (= ($generated@@0 ($generated@@525 ($generated@@526 $generated@@574 $generated@@575 $generated@@576 $generated@@577) $generated@@578 $generated@@579))  (=> (and (not (= $generated@@578 $generated@@574)) ($generated@@0 ($generated@@96 ($generated@@94 $generated@@575 $generated@@578) $generated@@576))) (= $generated@@578 $generated@@577)))))
 :pattern ( ($generated@@525 ($generated@@526 $generated@@574 $generated@@575 $generated@@576 $generated@@577) $generated@@578 $generated@@579))
)))
(assert (forall (($generated@@582 T@U) ($generated@@583 T@U) ($generated@@584 T@U) ($generated@@585 T@U) ) (! (= (type ($generated@@581 $generated@@582 $generated@@583 $generated@@584 $generated@@585)) ($generated@@527 $generated@@90 $generated@@4))
 :pattern ( ($generated@@581 $generated@@582 $generated@@583 $generated@@584 $generated@@585))
)))
(assert (forall (($generated@@586 T@U) ($generated@@587 T@U) ($generated@@588 T@U) ($generated@@589 T@U) ($generated@@590 T@U) ($generated@@591 T@U) ) (! (let (($generated@@592 ($generated@@75 (type $generated@@591))))
 (=> (and (and (and (and (and (= (type $generated@@586) $generated@@90) (= (type $generated@@587) ($generated@@89 $generated@@90 $generated@@91))) (= (type $generated@@588) ($generated@@74 $generated@@4))) (= (type $generated@@589) $generated@@90)) (= (type $generated@@590) $generated@@90)) (= (type $generated@@591) ($generated@@74 $generated@@592))) (= ($generated@@0 ($generated@@525 ($generated@@581 $generated@@586 $generated@@587 $generated@@588 $generated@@589) $generated@@590 $generated@@591))  (=> (and (not (= $generated@@590 $generated@@586)) ($generated@@0 ($generated@@96 ($generated@@94 $generated@@587 $generated@@590) $generated@@588))) (= $generated@@590 $generated@@589)))))
 :pattern ( ($generated@@525 ($generated@@581 $generated@@586 $generated@@587 $generated@@588 $generated@@589) $generated@@590 $generated@@591))
)))
(assert (forall (($generated@@593 T@U) ($generated@@594 T@U) ) (!  (=> (and (and (= (type $generated@@593) ($generated@@89 $generated@@90 $generated@@91)) (= (type $generated@@594) $generated@@90)) (and ($generated@@216 $generated@@593) (and (not (= $generated@@594 $generated@@150)) (= ($generated@@179 $generated@@594) $generated@@153)))) ($generated@@156 ($generated@@96 ($generated@@94 $generated@@593 $generated@@594) $generated@@194) $generated@@149))
 :pattern ( ($generated@@96 ($generated@@94 $generated@@593 $generated@@594) $generated@@194))
)))
(assert (forall (($generated@@596 T@U) ) (! (= (type ($generated@@595 $generated@@596)) $generated@@79)
 :pattern ( ($generated@@595 $generated@@596))
)))
(assert (forall (($generated@@597 T@U) ($generated@@598 T@U) ) (!  (=> (and (= (type $generated@@597) $generated@@72) (= (type $generated@@598) $generated@@72)) (and (= ($generated@@83 ($generated@@159 $generated@@597 $generated@@598)) $generated@@63) (= ($generated@@595 ($generated@@159 $generated@@597 $generated@@598)) $generated@@68)))
 :pattern ( ($generated@@159 $generated@@597 $generated@@598))
)))
(assert (forall (($generated@@600 T@U) ($generated@@601 T@U) ($generated@@602 T@U) ) (!  (=> (and (and (= (type $generated@@600) ($generated@@89 $generated@@90 $generated@@91)) (= (type $generated@@601) ($generated@@89 $generated@@90 $generated@@91))) (= (type $generated@@602) $generated@@90)) (=> (and (and (and ($generated@@216 $generated@@600) ($generated@@216 $generated@@601)) (and (not (= $generated@@602 $generated@@150)) ($generated@@156 $generated@@602 $generated@@183))) (and ($generated@@599 $generated@@600) ($generated@@145 $generated@@600 $generated@@601))) (=> (forall (($generated@@603 T@U) ($generated@@604 T@U) ) (! (let (($generated@@605 ($generated@@75 (type $generated@@604))))
 (=> (and (and (= (type $generated@@603) $generated@@90) (= (type $generated@@604) ($generated@@74 $generated@@605))) (and (not (= $generated@@603 $generated@@150)) (= $generated@@603 $generated@@602))) (= ($generated@@96 ($generated@@94 $generated@@600 $generated@@603) $generated@@604) ($generated@@96 ($generated@@94 $generated@@601 $generated@@603) $generated@@604))))
 :no-pattern (type $generated@@603)
 :no-pattern (type $generated@@604)
 :no-pattern ($generated $generated@@603)
 :no-pattern ($generated@@0 $generated@@603)
 :no-pattern ($generated $generated@@604)
 :no-pattern ($generated@@0 $generated@@604)
)) (= ($generated@@388 $generated@@600 $generated@@602) ($generated@@388 $generated@@601 $generated@@602)))))
 :pattern ( ($generated@@599 $generated@@600) ($generated@@145 $generated@@600 $generated@@601) ($generated@@388 $generated@@601 $generated@@602))
)))
(assert (forall (($generated@@606 T@U) ) (!  (=> (= (type $generated@@606) $generated@@160) (= ($generated@@508 ($generated@@237 $generated@@606)) ($generated@@509 $generated@@606)))
 :pattern ( ($generated@@508 ($generated@@237 $generated@@606)))
)))
(assert (forall (($generated@@607 T@U) ) (!  (=> (and (= (type $generated@@607) $generated@@169) ($generated@@187 $generated@@607 ($generated@@88 0))) (and (= ($generated@@237 ($generated@@301 $generated@@2 $generated@@607)) $generated@@607) ($generated@@156 ($generated@@301 ($generated@@89 $generated@@169 $generated@@4) $generated@@607) ($generated@@88 0))))
 :pattern ( ($generated@@187 $generated@@607 ($generated@@88 0)))
)))
(assert (forall (($generated@@608 T@U) ($generated@@609 T@U) ) (!  (=> (and (and (= (type $generated@@608) $generated@@169) (= (type $generated@@609) $generated@@72)) ($generated@@187 $generated@@608 ($generated@@202 $generated@@609))) (and (= ($generated@@237 ($generated@@301 ($generated@@89 $generated@@169 $generated@@4) $generated@@608)) $generated@@608) ($generated@@156 ($generated@@301 ($generated@@89 $generated@@169 $generated@@4) $generated@@608) ($generated@@202 $generated@@609))))
 :pattern ( ($generated@@187 $generated@@608 ($generated@@202 $generated@@609)))
)))
(assert (forall (($generated@@610 T@U) ($generated@@611 T@U) ) (!  (=> (and (and (= (type $generated@@610) $generated@@169) (= (type $generated@@611) $generated@@72)) ($generated@@187 $generated@@610 ($generated@@207 $generated@@611))) (and (= ($generated@@237 ($generated@@301 ($generated@@89 $generated@@169 $generated@@4) $generated@@610)) $generated@@610) ($generated@@156 ($generated@@301 ($generated@@89 $generated@@169 $generated@@4) $generated@@610) ($generated@@207 $generated@@611))))
 :pattern ( ($generated@@187 $generated@@610 ($generated@@207 $generated@@611)))
)))
(assert (forall (($generated@@612 T@U) ($generated@@613 T@U) ) (!  (=> (and (and (= (type $generated@@612) $generated@@169) (= (type $generated@@613) $generated@@72)) ($generated@@187 $generated@@612 ($generated@@174 $generated@@613))) (and (= ($generated@@237 ($generated@@301 ($generated@@89 $generated@@169 $generated@@2) $generated@@612)) $generated@@612) ($generated@@156 ($generated@@301 ($generated@@89 $generated@@169 $generated@@2) $generated@@612) ($generated@@174 $generated@@613))))
 :pattern ( ($generated@@187 $generated@@612 ($generated@@174 $generated@@613)))
)))
(assert (forall (($generated@@614 T@U) ($generated@@615 T@U) ) (!  (=> (and (and (= (type $generated@@614) $generated@@169) (= (type $generated@@615) $generated@@72)) ($generated@@187 $generated@@614 ($generated@@470 $generated@@615))) (and (= ($generated@@237 ($generated@@301 ($generated@@231 $generated@@169) $generated@@614)) $generated@@614) ($generated@@156 ($generated@@301 ($generated@@231 $generated@@169) $generated@@614) ($generated@@470 $generated@@615))))
 :pattern ( ($generated@@187 $generated@@614 ($generated@@470 $generated@@615)))
)))
(assert (= ($generated@@83 $generated@@149) $generated@@64))
(assert (= ($generated@@595 $generated@@149) $generated@@69))
(assert (= ($generated@@83 $generated@@153) $generated@@66))
(assert (= ($generated@@595 $generated@@153) $generated@@70))
(assert (= ($generated@@83 $generated@@183) $generated@@67))
(assert (= ($generated@@595 $generated@@183) $generated@@70))
(assert (forall (($generated@@616 T@U) ($generated@@617 T@U) ($generated@@618 T@U) ) (!  (=> (and (and (= (type $generated@@616) ($generated@@89 $generated@@169 $generated@@2)) (= (type $generated@@617) $generated@@72)) (= (type $generated@@618) ($generated@@89 $generated@@90 $generated@@91))) (= ($generated@@87 $generated@@616 ($generated@@174 $generated@@617) $generated@@618) (forall (($generated@@619 T@U) ) (!  (=> (and (= (type $generated@@619) $generated@@169) (< 0 ($generated ($generated@@94 $generated@@616 $generated@@619)))) ($generated@@217 $generated@@619 $generated@@617 $generated@@618))
 :pattern ( ($generated@@94 $generated@@616 $generated@@619))
))))
 :pattern ( ($generated@@87 $generated@@616 ($generated@@174 $generated@@617) $generated@@618))
)))
(assert (forall (($generated@@620 T@U) ($generated@@621 T@U) ($generated@@622 T@U) ) (!  (=> (and (and (and (= (type $generated@@620) $generated@@160) (= (type $generated@@621) $generated@@72)) (= (type $generated@@622) ($generated@@89 $generated@@90 $generated@@91))) (and ($generated@@216 $generated@@622) (and ($generated@@158 $generated@@620) (exists (($generated@@623 T@U) ) (!  (and (= (type $generated@@623) $generated@@72) ($generated@@87 $generated@@620 ($generated@@159 $generated@@621 $generated@@623) $generated@@622))
 :pattern ( ($generated@@87 $generated@@620 ($generated@@159 $generated@@621 $generated@@623) $generated@@622))
))))) ($generated@@217 ($generated@@167 $generated@@620) $generated@@621 $generated@@622))
 :pattern ( ($generated@@217 ($generated@@167 $generated@@620) $generated@@621 $generated@@622))
)))
(assert (forall (($generated@@624 T@U) ($generated@@625 T@U) ($generated@@626 T@U) ) (!  (=> (and (and (and (= (type $generated@@624) $generated@@160) (= (type $generated@@625) $generated@@72)) (= (type $generated@@626) ($generated@@89 $generated@@90 $generated@@91))) (and ($generated@@216 $generated@@626) (and ($generated@@158 $generated@@624) (exists (($generated@@627 T@U) ) (!  (and (= (type $generated@@627) $generated@@72) ($generated@@87 $generated@@624 ($generated@@159 $generated@@627 $generated@@625) $generated@@626))
 :pattern ( ($generated@@87 $generated@@624 ($generated@@159 $generated@@627 $generated@@625) $generated@@626))
))))) ($generated@@217 ($generated@@168 $generated@@624) $generated@@625 $generated@@626))
 :pattern ( ($generated@@217 ($generated@@168 $generated@@624) $generated@@625 $generated@@626))
)))
(assert (forall (($generated@@628 T@U) ($generated@@629 T@U) ) (!  (=> (and (= (type $generated@@628) $generated@@169) (= (type $generated@@629) $generated@@169)) (= ($generated@@186 ($generated@@212 $generated@@628) ($generated@@212 $generated@@629)) ($generated@@212 ($generated@@186 $generated@@628 $generated@@629))))
 :pattern ( ($generated@@186 ($generated@@212 $generated@@628) ($generated@@212 $generated@@629)))
)))
(assert (forall (($generated@@630 T@U) ) (! (= ($generated@@237 ($generated@@212 $generated@@630)) ($generated@@212 ($generated@@237 $generated@@630)))
 :pattern ( ($generated@@237 ($generated@@212 $generated@@630)))
)))
(assert (forall (($generated@@631 T@U) ) (! (let (($generated@@632 ($generated@@232 (type $generated@@631))))
 (=> (and (= (type $generated@@631) ($generated@@231 $generated@@632)) (= ($generated@@230 $generated@@631) 0)) (= $generated@@631 ($generated@@229 $generated@@632))))
 :pattern ( ($generated@@230 $generated@@631))
)))
(assert (forall (($generated@@633 T@U) ($generated@@634 T@U) ($generated@@635 T@U) ) (! (let (($generated@@636 (type $generated@@634)))
 (=> (and (and (= (type $generated@@633) ($generated@@89 $generated@@636 $generated@@2)) (= (type $generated@@635) $generated@@2)) (<= 0 ($generated $generated@@635))) (= ($generated@@250 ($generated@@95 $generated@@633 $generated@@634 $generated@@635)) (+ (- ($generated@@250 $generated@@633) ($generated ($generated@@94 $generated@@633 $generated@@634))) ($generated $generated@@635)))))
 :pattern ( ($generated@@250 ($generated@@95 $generated@@633 $generated@@634 $generated@@635)))
)))
(assert (forall (($generated@@637 T@U) ($generated@@638 T@U) ) (!  (=> (and (= (type $generated@@637) ($generated@@89 $generated@@90 $generated@@91)) (= (type $generated@@638) $generated@@2)) ($generated@@87 $generated@@638 $generated@@46 $generated@@637))
 :pattern ( ($generated@@87 $generated@@638 $generated@@46 $generated@@637))
)))
(assert (forall (($generated@@639 T@U) ($generated@@640 T@U) ) (!  (=> (and (= (type $generated@@639) ($generated@@89 $generated@@90 $generated@@91)) (= (type $generated@@640) $generated@@3)) ($generated@@87 $generated@@640 $generated@@47 $generated@@639))
 :pattern ( ($generated@@87 $generated@@640 $generated@@47 $generated@@639))
)))
(assert (forall (($generated@@641 T@U) ($generated@@642 T@U) ) (!  (=> (and (= (type $generated@@641) ($generated@@89 $generated@@90 $generated@@91)) (= (type $generated@@642) $generated@@4)) ($generated@@87 $generated@@642 $generated@@44 $generated@@641))
 :pattern ( ($generated@@87 $generated@@642 $generated@@44 $generated@@641))
)))
(assert (forall (($generated@@643 T@U) ($generated@@644 T@U) ) (!  (=> (and (= (type $generated@@643) ($generated@@89 $generated@@90 $generated@@91)) (= (type $generated@@644) $generated@@426)) ($generated@@87 $generated@@644 $generated@@45 $generated@@643))
 :pattern ( ($generated@@87 $generated@@644 $generated@@45 $generated@@643))
)))
(assert (forall (($generated@@645 T@U) ($generated@@646 T@U) ) (!  (=> (and (= (type $generated@@645) ($generated@@89 $generated@@90 $generated@@91)) (= (type $generated@@646) $generated@@169)) ($generated@@87 $generated@@646 $generated@@48 $generated@@645))
 :pattern ( ($generated@@87 $generated@@646 $generated@@48 $generated@@645))
)))
(assert (forall (($generated@@647 T@U) ($generated@@648 T@U) ) (!  (=> (and (= (type $generated@@647) ($generated@@231 $generated@@169)) (= (type $generated@@648) $generated@@72)) (= ($generated@@156 $generated@@647 ($generated@@470 $generated@@648)) (forall (($generated@@649 Int) ) (!  (=> (and (<= 0 $generated@@649) (< $generated@@649 ($generated@@230 $generated@@647))) ($generated@@187 ($generated@@471 $generated@@647 $generated@@649) $generated@@648))
 :pattern ( ($generated@@471 $generated@@647 $generated@@649))
))))
 :pattern ( ($generated@@156 $generated@@647 ($generated@@470 $generated@@648)))
)))
(assert (forall (($generated@@651 T@U) ($generated@@652 Int) ) (!  (=> (= (type $generated@@651) ($generated@@231 $generated@@169)) (=> (and (<= 0 $generated@@652) (< $generated@@652 ($generated@@230 $generated@@651))) (< ($generated@@509 ($generated@@301 $generated@@160 ($generated@@471 $generated@@651 $generated@@652))) ($generated@@650 $generated@@651))))
 :pattern ( ($generated@@509 ($generated@@301 $generated@@160 ($generated@@471 $generated@@651 $generated@@652))))
)))
(assert (forall (($generated@@653 T@U) ($generated@@654 T@U) ($generated@@655 T@U) ) (!  (=> (and (and (and (= (type $generated@@653) ($generated@@258 $generated@@169 $generated@@169)) (= (type $generated@@654) $generated@@72)) (= (type $generated@@655) $generated@@72)) ($generated@@156 $generated@@653 ($generated@@371 $generated@@654 $generated@@655))) (and (and ($generated@@156 ($generated@@256 $generated@@653) ($generated@@202 $generated@@654)) ($generated@@156 ($generated@@312 $generated@@653) ($generated@@202 $generated@@655))) ($generated@@156 ($generated@@345 $generated@@653) ($generated@@202 ($generated@@159 $generated@@654 $generated@@655)))))
 :pattern ( ($generated@@156 $generated@@653 ($generated@@371 $generated@@654 $generated@@655)))
)))
(assert (forall (($generated@@656 T@U) ($generated@@657 T@U) ($generated@@658 T@U) ) (!  (=> (and (and (and (= (type $generated@@656) ($generated@@276 $generated@@169 $generated@@169)) (= (type $generated@@657) $generated@@72)) (= (type $generated@@658) $generated@@72)) ($generated@@156 $generated@@656 ($generated@@379 $generated@@657 $generated@@658))) (and (and ($generated@@156 ($generated@@274 $generated@@656) ($generated@@207 $generated@@657)) ($generated@@156 ($generated@@323 $generated@@656) ($generated@@207 $generated@@658))) ($generated@@156 ($generated@@353 $generated@@656) ($generated@@207 ($generated@@159 $generated@@657 $generated@@658)))))
 :pattern ( ($generated@@156 $generated@@656 ($generated@@379 $generated@@657 $generated@@658)))
)))
(assert (forall (($generated@@659 T@U) ) (!  (=> (= (type $generated@@659) $generated@@2) ($generated@@156 $generated@@659 $generated@@46))
 :pattern ( ($generated@@156 $generated@@659 $generated@@46))
)))
(assert (forall (($generated@@660 T@U) ) (!  (=> (= (type $generated@@660) $generated@@3) ($generated@@156 $generated@@660 $generated@@47))
 :pattern ( ($generated@@156 $generated@@660 $generated@@47))
)))
(assert (forall (($generated@@661 T@U) ) (!  (=> (= (type $generated@@661) $generated@@4) ($generated@@156 $generated@@661 $generated@@44))
 :pattern ( ($generated@@156 $generated@@661 $generated@@44))
)))
(assert (forall (($generated@@662 T@U) ) (!  (=> (= (type $generated@@662) $generated@@426) ($generated@@156 $generated@@662 $generated@@45))
 :pattern ( ($generated@@156 $generated@@662 $generated@@45))
)))
(assert (forall (($generated@@663 T@U) ) (!  (=> (= (type $generated@@663) $generated@@169) ($generated@@156 $generated@@663 $generated@@48))
 :pattern ( ($generated@@156 $generated@@663 $generated@@48))
)))
(push 1)
(declare-fun ControlFlow (Int Int) Int)
(declare-fun $generated@@664 () T@U)
(declare-fun $generated@@665 () T@U)
(declare-fun $generated@@666 () T@U)
(declare-fun $generated@@667 () Bool)
(declare-fun $generated@@668 () T@U)
(assert  (and (and (and (= (type $generated@@664) ($generated@@527 $generated@@90 $generated@@4)) (= (type $generated@@665) ($generated@@89 $generated@@90 $generated@@91))) (= (type $generated@@666) $generated@@90)) (= (type $generated@@668) ($generated@@527 $generated@@90 $generated@@4))))
(set-option :timeout 0)
(set-option :rlimit 0)
(assert (not
 (=> (= (ControlFlow 0 0) 5) (let (($generated@@669  (=> (= $generated@@664 ($generated@@581 $generated@@150 $generated@@665 $generated@@60 $generated@@666)) (=> (and (and (= $generated@@667 ($generated@@0 ($generated@@525 $generated@@668 $generated@@666 $generated@@194))) (= ($generated@@388 $generated@@665 $generated@@666) ($generated@@96 ($generated@@94 $generated@@665 $generated@@666) $generated@@194))) (and ($generated@@156 ($generated@@388 $generated@@665 $generated@@666) $generated@@149) (= (ControlFlow 0 3) (- 0 2)))) $generated@@667))))
(let (($generated@@670 true))
(let (($generated@@671  (=> (= $generated@@668 ($generated@@526 $generated@@150 $generated@@665 $generated@@60 $generated@@666)) (and (=> (= (ControlFlow 0 4) 1) $generated@@670) (=> (= (ControlFlow 0 4) 3) $generated@@669)))))
(let (($generated@@672  (=> (and ($generated@@216 $generated@@665) ($generated@@599 $generated@@665)) (=> (and (and (not (= $generated@@666 $generated@@150)) (and ($generated@@156 $generated@@666 $generated@@183) ($generated@@87 $generated@@666 $generated@@183 $generated@@665))) (and (= 0 $generated@@387) (= (ControlFlow 0 5) 4))) $generated@@671))))
$generated@@672)))))
))
(check-sat)
(pop 1)
; Valid
(get-info :rlimit)
(reset)
(set-option :rlimit 0)
; did a full reset
(reset)
(set-option :print-success false)
(set-info :smt-lib-version 2.6)
(set-option :auto_config false)
(set-option :type_check true)
(set-option :smt.case_split 3)
(set-option :smt.qi.eager_threshold 100)
(set-option :smt.delay_units true)
(set-option :smt.arith.solver 2)
(set-option :smt.mbqi false)
(set-option :model.compact false)
(set-option :model.v2 true)
(set-option :pp.bv_literals false)
; done setting options


(set-info :category "industrial")
(declare-sort |T@U| 0)
(declare-sort |T@T| 0)
(declare-fun real_pow (Real Real) Real)
(declare-fun UOrdering2 (|T@U| |T@U|) Bool)
(declare-fun UOrdering3 (|T@T| |T@U| |T@U|) Bool)
(declare-fun tickleBool (Bool) Bool)
(assert (and (tickleBool true) (tickleBool false)))
(declare-fun $generated (T@U) Int)
(declare-fun $generated@@0 (T@U) Bool)
(declare-fun $generated@@1 (T@T) Int)
(declare-fun $generated@@2 () T@T)
(declare-fun $generated@@3 () T@T)
(declare-fun $generated@@4 () T@T)
(declare-fun $generated@@5 () T@T)
(declare-fun $generated@@6 () T@T)
(declare-fun $generated@@7 () T@T)
(declare-fun $generated@@8 (Int) T@U)
(declare-fun type (T@U) T@T)
(declare-fun $generated@@9 (Real) T@U)
(declare-fun $generated@@10 (T@U) Real)
(declare-fun $generated@@11 (Bool) T@U)
(declare-fun $generated@@12 (RoundingMode) T@U)
(declare-fun $generated@@13 (T@U) RoundingMode)
(declare-fun $generated@@14 (String) T@U)
(declare-fun $generated@@15 (T@U) String)
(declare-fun $generated@@16 ((RegEx String)) T@U)
(declare-fun $generated@@17 (T@U) (RegEx String))
(declare-fun $generated@@44 () T@U)
(declare-fun $generated@@45 () T@U)
(declare-fun $generated@@46 () T@U)
(declare-fun $generated@@47 () T@U)
(declare-fun $generated@@48 () T@U)
(declare-fun $generated@@49 () T@U)
(declare-fun $generated@@50 () T@U)
(declare-fun $generated@@51 () T@U)
(declare-fun $generated@@52 () T@U)
(declare-fun $generated@@53 () T@U)
(declare-fun $generated@@54 () T@U)
(declare-fun $generated@@55 () T@U)
(declare-fun $generated@@56 () T@U)
(declare-fun $generated@@57 () T@U)
(declare-fun $generated@@58 () T@U)
(declare-fun $generated@@59 () T@U)
(declare-fun $generated@@60 () T@U)
(declare-fun $generated@@61 () T@U)
(declare-fun $generated@@62 () T@U)
(declare-fun $generated@@63 () T@U)
(declare-fun $generated@@64 () T@U)
(declare-fun $generated@@65 () T@U)
(declare-fun $generated@@66 () T@U)
(declare-fun $generated@@67 () T@U)
(declare-fun $generated@@68 () T@U)
(declare-fun $generated@@69 () T@U)
(declare-fun $generated@@70 () T@T)
(declare-fun $generated@@71 () T@T)
(declare-fun $generated@@72 (T@T) T@T)
(declare-fun $generated@@73 (T@T) T@T)
(declare-fun $generated@@74 () T@T)
(declare-fun $generated@@75 () T@T)
(declare-fun $generated@@78 (T@U) T@U)
(declare-fun $generated@@80 (T@U T@U T@U) Bool)
(declare-fun $generated@@81 (Int) T@U)
(declare-fun $generated@@82 (T@T T@T) T@T)
(declare-fun $generated@@83 () T@T)
(declare-fun $generated@@84 () T@T)
(declare-fun $generated@@85 (T@T) T@T)
(declare-fun $generated@@86 (T@T) T@T)
(declare-fun $generated@@87 (T@U T@U) T@U)
(declare-fun $generated@@88 (T@U T@U T@U) T@U)
(declare-fun $generated@@89 (T@U T@U) T@U)
(declare-fun $generated@@90 (T@U T@U T@U) T@U)
(declare-fun $generated@@138 (T@U T@U) Bool)
(declare-fun $generated@@140 (T@U) Bool)
(declare-fun $generated@@141 (T@U T@U) T@U)
(declare-fun $generated@@142 () T@T)
(declare-fun $generated@@148 (T@U T@U) Bool)
(declare-fun $generated@@149 (T@U) T@U)
(declare-fun $generated@@150 (T@U) T@U)
(declare-fun $generated@@151 () T@T)
(declare-fun $generated@@156 (T@U) T@U)
(declare-fun $generated@@157 () T@U)
(declare-fun $generated@@159 (T@U) T@U)
(declare-fun $generated@@160 (T@U) Bool)
(declare-fun $generated@@164 (T@U) Bool)
(declare-fun $generated@@165 (T@U) T@U)
(declare-fun $generated@@169 (T@U T@U T@U) T@U)
(declare-fun $generated@@170 (T@U T@U T@U Bool) T@U)
(declare-fun $generated@@171 (T@T T@T) T@T)
(declare-fun $generated@@172 (T@T) T@T)
(declare-fun $generated@@173 (T@T) T@T)
(declare-fun $generated@@174 (T@U T@U T@U T@U) T@U)
(declare-fun $generated@@225 (T@U T@U T@U Bool) T@U)
(declare-fun $generated@@237 (T@U T@U) T@U)
(declare-fun $generated@@238 (T@U T@U) Bool)
(declare-fun $generated@@245 () T@U)
(declare-fun $generated@@246 (T@U) Bool)
(declare-fun $generated@@250 (T@U T@U) Bool)
(declare-fun $generated@@253 (T@U T@U) Bool)
(declare-fun $generated@@256 () Int)
(declare-fun $generated@@257 (T@U) Bool)
(declare-fun $generated@@258 (T@U) Bool)
(declare-fun $generated@@259 (T@U) T@U)
(declare-fun $generated@@260 (T@U) T@U)
(declare-fun $generated@@261 (T@U) T@U)
(declare-fun $generated@@267 (T@U) T@U)
(declare-fun $generated@@272 (T@U) T@U)
(declare-fun $generated@@278 (T@U T@U T@U) Bool)
(declare-fun $generated@@289 (T@T) T@U)
(declare-fun $generated@@290 (T@U) Int)
(declare-fun $generated@@291 (T@T) T@T)
(declare-fun $generated@@292 (T@T) T@T)
(declare-fun $generated@@297 (T@U) T@U)
(declare-fun $generated@@306 (T@U) Int)
(declare-fun $generated@@307 (T@T) T@U)
(declare-fun $generated@@312 (T@U) T@U)
(declare-fun $generated@@315 (T@U) T@U)
(declare-fun $generated@@316 (T@T T@T) T@U)
(declare-fun $generated@@317 (T@T T@T) T@T)
(declare-fun $generated@@318 (T@T) T@T)
(declare-fun $generated@@319 (T@T) T@T)
(declare-fun $generated@@333 (T@U) T@U)
(declare-fun $generated@@334 (T@T T@T) T@U)
(declare-fun $generated@@335 (T@T T@T) T@T)
(declare-fun $generated@@336 (T@T) T@T)
(declare-fun $generated@@337 (T@T) T@T)
(declare-fun $generated@@354 (T@T T@U) T@U)
(declare-fun $generated@@362 (T@U) T@U)
(declare-fun $generated@@373 (T@U) T@U)
(declare-fun $generated@@386 (T@U) Bool)
(declare-fun $generated@@387 (T@U) Bool)
(declare-fun $generated@@403 (T@U) T@U)
(declare-fun $generated@@404 (T@U) T@U)
(declare-fun $generated@@411 (T@U) T@U)
(declare-fun $generated@@412 (T@U) T@U)
(declare-fun $generated@@429 (T@U T@U) T@U)
(declare-fun $generated@@437 (T@U T@U) T@U)
(declare-fun $generated@@445 (T@T) T@U)
(declare-fun $generated@@469 () T@T)
(declare-fun $generated@@477 (T@U) T@U)
(declare-fun $generated@@481 (T@U) T@U)
(declare-fun $generated@@487 (T@U) T@U)
(declare-fun $generated@@491 (T@U) T@U)
(declare-fun $generated@@499 (T@U) T@U)
(declare-fun $generated@@503 (T@U) T@U)
(declare-fun $generated@@511 (T@U) T@U)
(declare-fun $generated@@512 (T@U Int) T@U)
(declare-fun $generated@@521 (T@U) Int)
(declare-fun $generated@@523 (T@U) T@U)
(declare-fun $generated@@527 (T@U) T@U)
(declare-fun $generated@@531 (T@U) T@U)
(declare-fun $generated@@535 (T@U) T@U)
(declare-fun $generated@@540 (T@U) T@U)
(declare-fun $generated@@556 (T@U) Int)
(declare-fun $generated@@557 (T@U) Int)
(declare-fun $generated@@632 (T@U) Int)
(assert  (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (= ($generated@@1 $generated@@2) 0) (= ($generated@@1 $generated@@3) 1)) (= ($generated@@1 $generated@@4) 2)) (= ($generated@@1 $generated@@5) 3)) (= ($generated@@1 $generated@@6) 4)) (= ($generated@@1 $generated@@7) 5)) (forall (($generated@@18 Int) ) (! (= ($generated ($generated@@8 $generated@@18)) $generated@@18)
 :pattern ( ($generated@@8 $generated@@18))
))) (forall (($generated@@19 T@U) ) (!  (=> (= (type $generated@@19) $generated@@2) (= ($generated@@8 ($generated $generated@@19)) $generated@@19))
 :pattern ( ($generated $generated@@19))
))) (forall (($generated@@20 Int) ) (! (= (type ($generated@@8 $generated@@20)) $generated@@2)
 :pattern ( ($generated@@8 $generated@@20))
))) (forall (($generated@@21 Real) ) (! (= ($generated@@10 ($generated@@9 $generated@@21)) $generated@@21)
 :pattern ( ($generated@@9 $generated@@21))
))) (forall (($generated@@22 T@U) ) (!  (=> (= (type $generated@@22) $generated@@3) (= ($generated@@9 ($generated@@10 $generated@@22)) $generated@@22))
 :pattern ( ($generated@@10 $generated@@22))
))) (forall (($generated@@23 Real) ) (! (= (type ($generated@@9 $generated@@23)) $generated@@3)
 :pattern ( ($generated@@9 $generated@@23))
))) (forall (($generated@@24 Bool) ) (! (= ($generated@@0 ($generated@@11 $generated@@24)) $generated@@24)
 :pattern ( ($generated@@11 $generated@@24))
))) (forall (($generated@@25 T@U) ) (!  (=> (= (type $generated@@25) $generated@@4) (= ($generated@@11 ($generated@@0 $generated@@25)) $generated@@25))
 :pattern ( ($generated@@0 $generated@@25))
))) (forall (($generated@@26 Bool) ) (! (= (type ($generated@@11 $generated@@26)) $generated@@4)
 :pattern ( ($generated@@11 $generated@@26))
))) (forall (($generated@@27 RoundingMode) ) (! (= ($generated@@13 ($generated@@12 $generated@@27)) $generated@@27)
 :pattern ( ($generated@@12 $generated@@27))
))) (forall (($generated@@28 T@U) ) (!  (=> (= (type $generated@@28) $generated@@5) (= ($generated@@12 ($generated@@13 $generated@@28)) $generated@@28))
 :pattern ( ($generated@@13 $generated@@28))
))) (forall (($generated@@29 RoundingMode) ) (! (= (type ($generated@@12 $generated@@29)) $generated@@5)
 :pattern ( ($generated@@12 $generated@@29))
))) (forall (($generated@@30 String) ) (! (= ($generated@@15 ($generated@@14 $generated@@30)) $generated@@30)
 :pattern ( ($generated@@14 $generated@@30))
))) (forall (($generated@@31 T@U) ) (!  (=> (= (type $generated@@31) $generated@@6) (= ($generated@@14 ($generated@@15 $generated@@31)) $generated@@31))
 :pattern ( ($generated@@15 $generated@@31))
))) (forall (($generated@@32 String) ) (! (= (type ($generated@@14 $generated@@32)) $generated@@6)
 :pattern ( ($generated@@14 $generated@@32))
))) (forall (($generated@@33 (RegEx String)) ) (! (= ($generated@@17 ($generated@@16 $generated@@33)) $generated@@33)
 :pattern ( ($generated@@16 $generated@@33))
))) (forall (($generated@@34 T@U) ) (!  (=> (= (type $generated@@34) $generated@@7) (= ($generated@@16 ($generated@@17 $generated@@34)) $generated@@34))
 :pattern ( ($generated@@17 $generated@@34))
))) (forall (($generated@@35 (RegEx String)) ) (! (= (type ($generated@@16 $generated@@35)) $generated@@7)
 :pattern ( ($generated@@16 $generated@@35))
))))
(assert (forall (($generated@@36 T@U) ) (! (UOrdering2 $generated@@36 $generated@@36)
 :no-pattern ($generated $generated@@36)
 :no-pattern ($generated@@0 $generated@@36)
)))
(assert (forall (($generated@@37 T@U) ($generated@@38 T@U) ($generated@@39 T@U) ) (! (let (($generated@@40 (type $generated@@37)))
 (=> (and (and (= (type $generated@@38) $generated@@40) (= (type $generated@@39) $generated@@40)) (and (UOrdering2 $generated@@37 $generated@@38) (UOrdering2 $generated@@38 $generated@@39))) (UOrdering2 $generated@@37 $generated@@39)))
 :pattern ( (UOrdering2 $generated@@37 $generated@@38) (UOrdering2 $generated@@38 $generated@@39))
)))
(assert (forall (($generated@@41 T@U) ($generated@@42 T@U) ) (! (let (($generated@@43 (type $generated@@41)))
 (=> (= (type $generated@@42) $generated@@43) (=> (and (UOrdering2 $generated@@41 $generated@@42) (UOrdering2 $generated@@42 $generated@@41)) (= $generated@@41 $generated@@42))))
 :pattern ( (UOrdering2 $generated@@41 $generated@@42) (UOrdering2 $generated@@42 $generated@@41))
)))
(assert  (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (= ($generated@@1 $generated@@70) 6) (= (type $generated@@44) $generated@@70)) (= (type $generated@@45) $generated@@70)) (= (type $generated@@46) $generated@@70)) (= (type $generated@@47) $generated@@70)) (= (type $generated@@48) $generated@@70)) (= ($generated@@1 $generated@@71) 7)) (= (type $generated@@49) $generated@@71)) (= (type $generated@@50) $generated@@71)) (= (type $generated@@51) $generated@@71)) (= (type $generated@@52) $generated@@71)) (= (type $generated@@53) $generated@@71)) (= (type $generated@@54) $generated@@71)) (= (type $generated@@55) $generated@@71)) (= (type $generated@@56) $generated@@71)) (= (type $generated@@57) $generated@@71)) (= (type $generated@@58) $generated@@71)) (= (type $generated@@59) $generated@@71)) (forall (($generated@@76 T@T) ) (= ($generated@@1 ($generated@@72 $generated@@76)) 8))) (forall (($generated@@77 T@T) ) (! (= ($generated@@73 ($generated@@72 $generated@@77)) $generated@@77)
 :pattern ( ($generated@@72 $generated@@77))
))) (= (type $generated@@60) ($generated@@72 $generated@@4))) (= ($generated@@1 $generated@@74) 9)) (= (type $generated@@61) $generated@@74)) (= (type $generated@@62) $generated@@71)) (= (type $generated@@63) $generated@@74)) (= (type $generated@@64) $generated@@71)) (= (type $generated@@65) $generated@@74)) (= (type $generated@@66) $generated@@71)) (= ($generated@@1 $generated@@75) 10)) (= (type $generated@@67) $generated@@75)) (= (type $generated@@68) $generated@@75)) (= (type $generated@@69) $generated@@75)))
(assert (distinct $generated@@44 $generated@@45 $generated@@46 $generated@@47 $generated@@48 $generated@@49 $generated@@50 $generated@@51 $generated@@52 $generated@@53 $generated@@54 $generated@@55 $generated@@56 $generated@@57 $generated@@58 $generated@@59 $generated@@60 $generated@@61 $generated@@62 $generated@@63 $generated@@64 $generated@@65 $generated@@66 $generated@@67 $generated@@68 $generated@@69)
)
(assert (forall (($generated@@79 T@U) ) (! (= (type ($generated@@78 $generated@@79)) $generated@@71)
 :pattern ( ($generated@@78 $generated@@79))
)))
(assert (= ($generated@@78 $generated@@44) $generated@@49))
(assert (= ($generated@@78 $generated@@45) $generated@@50))
(assert (= ($generated@@78 $generated@@46) $generated@@51))
(assert (= ($generated@@78 $generated@@47) $generated@@52))
(assert (= ($generated@@78 $generated@@48) $generated@@53))
(assert  (and (and (and (and (and (and (and (and (and (and (and (and (and (forall (($generated@@91 T@T) ($generated@@92 T@T) ) (= ($generated@@1 ($generated@@82 $generated@@91 $generated@@92)) 11)) (forall (($generated@@93 T@T) ($generated@@94 T@T) ) (! (= ($generated@@85 ($generated@@82 $generated@@93 $generated@@94)) $generated@@93)
 :pattern ( ($generated@@82 $generated@@93 $generated@@94))
))) (forall (($generated@@95 T@T) ($generated@@96 T@T) ) (! (= ($generated@@86 ($generated@@82 $generated@@95 $generated@@96)) $generated@@96)
 :pattern ( ($generated@@82 $generated@@95 $generated@@96))
))) (forall (($generated@@97 T@U) ($generated@@98 T@U) ) (! (let (($generated@@99 ($generated@@86 (type $generated@@97))))
(= (type ($generated@@87 $generated@@97 $generated@@98)) $generated@@99))
 :pattern ( ($generated@@87 $generated@@97 $generated@@98))
))) (forall (($generated@@100 T@U) ($generated@@101 T@U) ($generated@@102 T@U) ) (! (let (($generated@@103 (type $generated@@102)))
(let (($generated@@104 (type $generated@@101)))
(= (type ($generated@@88 $generated@@100 $generated@@101 $generated@@102)) ($generated@@82 $generated@@104 $generated@@103))))
 :pattern ( ($generated@@88 $generated@@100 $generated@@101 $generated@@102))
))) (forall (($generated@@105 T@U) ($generated@@106 T@U) ($generated@@107 T@U) ) (! (let (($generated@@108 ($generated@@86 (type $generated@@105))))
 (=> (= (type $generated@@107) $generated@@108) (= ($generated@@87 ($generated@@88 $generated@@105 $generated@@106 $generated@@107) $generated@@106) $generated@@107)))
 :weight 0
))) (and (forall (($generated@@109 T@U) ($generated@@110 T@U) ($generated@@111 T@U) ($generated@@112 T@U) ) (!  (or (= $generated@@111 $generated@@112) (= ($generated@@87 ($generated@@88 $generated@@110 $generated@@111 $generated@@109) $generated@@112) ($generated@@87 $generated@@110 $generated@@112)))
 :weight 0
)) (forall (($generated@@113 T@U) ($generated@@114 T@U) ($generated@@115 T@U) ($generated@@116 T@U) ) (!  (or true (= ($generated@@87 ($generated@@88 $generated@@114 $generated@@115 $generated@@113) $generated@@116) ($generated@@87 $generated@@114 $generated@@116)))
 :weight 0
)))) (= ($generated@@1 $generated@@83) 12)) (forall (($generated@@117 T@U) ($generated@@118 T@U) ) (! (let (($generated@@119 ($generated@@73 (type $generated@@118))))
(= (type ($generated@@89 $generated@@117 $generated@@118)) $generated@@119))
 :pattern ( ($generated@@89 $generated@@117 $generated@@118))
))) (= ($generated@@1 $generated@@84) 13)) (forall (($generated@@120 T@U) ($generated@@121 T@U) ($generated@@122 T@U) ) (! (= (type ($generated@@90 $generated@@120 $generated@@121 $generated@@122)) $generated@@84)
 :pattern ( ($generated@@90 $generated@@120 $generated@@121 $generated@@122))
))) (forall (($generated@@123 T@U) ($generated@@124 T@U) ($generated@@125 T@U) ) (! (let (($generated@@126 ($generated@@73 (type $generated@@124))))
 (=> (= (type $generated@@125) $generated@@126) (= ($generated@@89 ($generated@@90 $generated@@123 $generated@@124 $generated@@125) $generated@@124) $generated@@125)))
 :weight 0
))) (and (forall (($generated@@127 T@U) ($generated@@128 T@U) ($generated@@129 T@U) ($generated@@130 T@U) ) (!  (or (= $generated@@129 $generated@@130) (= ($generated@@89 ($generated@@90 $generated@@128 $generated@@129 $generated@@127) $generated@@130) ($generated@@89 $generated@@128 $generated@@130)))
 :weight 0
)) (forall (($generated@@131 T@U) ($generated@@132 T@U) ($generated@@133 T@U) ($generated@@134 T@U) ) (!  (or true (= ($generated@@89 ($generated@@90 $generated@@132 $generated@@133 $generated@@131) $generated@@134) ($generated@@89 $generated@@132 $generated@@134)))
 :weight 0
)))) (forall (($generated@@135 Int) ) (! (= (type ($generated@@81 $generated@@135)) $generated@@70)
 :pattern ( ($generated@@81 $generated@@135))
))))
(assert (forall (($generated@@136 T@U) ($generated@@137 T@U) ) (!  (=> (and (= (type $generated@@136) $generated@@2) (= (type $generated@@137) ($generated@@82 $generated@@83 $generated@@84))) ($generated@@80 $generated@@136 ($generated@@81 0) $generated@@137))
 :pattern ( ($generated@@80 $generated@@136 ($generated@@81 0) $generated@@137))
)))
(assert (forall (($generated@@139 T@U) ) (!  (=> (= (type $generated@@139) $generated@@2) ($generated@@138 $generated@@139 ($generated@@81 0)))
 :pattern ( ($generated@@138 $generated@@139 ($generated@@81 0)))
)))
(assert  (and (= ($generated@@1 $generated@@142) 14) (forall (($generated@@143 T@U) ($generated@@144 T@U) ) (! (= (type ($generated@@141 $generated@@143 $generated@@144)) $generated@@70)
 :pattern ( ($generated@@141 $generated@@143 $generated@@144))
))))
(assert (forall (($generated@@145 T@U) ($generated@@146 T@U) ($generated@@147 T@U) ) (!  (=> (and (and (and (= (type $generated@@145) $generated@@70) (= (type $generated@@146) $generated@@70)) (= (type $generated@@147) $generated@@142)) ($generated@@138 $generated@@147 ($generated@@141 $generated@@145 $generated@@146))) ($generated@@140 $generated@@147))
 :pattern ( ($generated@@140 $generated@@147) ($generated@@138 $generated@@147 ($generated@@141 $generated@@145 $generated@@146)))
)))
(assert  (and (and (= ($generated@@1 $generated@@151) 15) (forall (($generated@@152 T@U) ) (! (= (type ($generated@@149 $generated@@152)) $generated@@151)
 :pattern ( ($generated@@149 $generated@@152))
))) (forall (($generated@@153 T@U) ) (! (= (type ($generated@@150 $generated@@153)) $generated@@151)
 :pattern ( ($generated@@150 $generated@@153))
))))
(assert (forall (($generated@@154 T@U) ($generated@@155 T@U) ) (!  (=> (and (and (= (type $generated@@154) $generated@@142) (= (type $generated@@155) $generated@@142)) true) (= ($generated@@148 $generated@@154 $generated@@155)  (and (= ($generated@@149 $generated@@154) ($generated@@149 $generated@@155)) (= ($generated@@150 $generated@@154) ($generated@@150 $generated@@155)))))
 :pattern ( ($generated@@148 $generated@@154 $generated@@155))
)))
(assert  (and (forall (($generated@@158 T@U) ) (! (= (type ($generated@@156 $generated@@158)) $generated@@74)
 :pattern ( ($generated@@156 $generated@@158))
)) (= (type $generated@@157) $generated@@142)))
(assert (= ($generated@@156 $generated@@157) $generated@@65))
(assert (forall (($generated@@161 T@U) ) (! (= (type ($generated@@159 $generated@@161)) $generated@@70)
 :pattern ( ($generated@@159 $generated@@161))
)))
(assert (forall (($generated@@162 T@U) ($generated@@163 T@U) ) (!  (=> (and (and (= (type $generated@@162) ($generated@@82 $generated@@151 $generated@@2)) (= (type $generated@@163) $generated@@70)) ($generated@@138 $generated@@162 ($generated@@159 $generated@@163))) ($generated@@160 $generated@@162))
 :pattern ( ($generated@@138 $generated@@162 ($generated@@159 $generated@@163)))
)))
(assert (forall (($generated@@166 T@U) ) (! (= (type ($generated@@165 $generated@@166)) $generated@@70)
 :pattern ( ($generated@@165 $generated@@166))
)))
(assert (forall (($generated@@167 T@U) ($generated@@168 T@U) ) (!  (=> (and (and (= (type $generated@@167) $generated@@70) (= (type $generated@@168) $generated@@142)) ($generated@@138 $generated@@168 ($generated@@165 $generated@@167))) ($generated@@164 $generated@@168))
 :pattern ( ($generated@@164 $generated@@168) ($generated@@138 $generated@@168 ($generated@@165 $generated@@167)))
)))
(assert  (and (and (and (and (and (and (and (forall (($generated@@175 T@T) ($generated@@176 T@T) ) (= ($generated@@1 ($generated@@171 $generated@@175 $generated@@176)) 16)) (forall (($generated@@177 T@T) ($generated@@178 T@T) ) (! (= ($generated@@172 ($generated@@171 $generated@@177 $generated@@178)) $generated@@177)
 :pattern ( ($generated@@171 $generated@@177 $generated@@178))
))) (forall (($generated@@179 T@T) ($generated@@180 T@T) ) (! (= ($generated@@173 ($generated@@171 $generated@@179 $generated@@180)) $generated@@180)
 :pattern ( ($generated@@171 $generated@@179 $generated@@180))
))) (forall (($generated@@181 T@U) ($generated@@182 T@U) ($generated@@183 T@U) ) (! (let (($generated@@184 ($generated@@173 (type $generated@@181))))
(= (type ($generated@@169 $generated@@181 $generated@@182 $generated@@183)) $generated@@184))
 :pattern ( ($generated@@169 $generated@@181 $generated@@182 $generated@@183))
))) (forall (($generated@@185 T@U) ($generated@@186 T@U) ($generated@@187 T@U) ($generated@@188 T@U) ) (! (let (($generated@@189 (type $generated@@188)))
(let (($generated@@190 (type $generated@@186)))
(= (type ($generated@@174 $generated@@185 $generated@@186 $generated@@187 $generated@@188)) ($generated@@171 $generated@@190 $generated@@189))))
 :pattern ( ($generated@@174 $generated@@185 $generated@@186 $generated@@187 $generated@@188))
))) (forall (($generated@@191 T@U) ($generated@@192 T@U) ($generated@@193 T@U) ($generated@@194 T@U) ) (! (let (($generated@@195 ($generated@@173 (type $generated@@191))))
 (=> (= (type $generated@@194) $generated@@195) (= ($generated@@169 ($generated@@174 $generated@@191 $generated@@192 $generated@@193 $generated@@194) $generated@@192 $generated@@193) $generated@@194)))
 :weight 0
))) (and (and (forall (($generated@@196 T@U) ($generated@@197 T@U) ($generated@@198 T@U) ($generated@@199 T@U) ($generated@@200 T@U) ($generated@@201 T@U) ) (!  (or (= $generated@@198 $generated@@200) (= ($generated@@169 ($generated@@174 $generated@@197 $generated@@198 $generated@@199 $generated@@196) $generated@@200 $generated@@201) ($generated@@169 $generated@@197 $generated@@200 $generated@@201)))
 :weight 0
)) (forall (($generated@@202 T@U) ($generated@@203 T@U) ($generated@@204 T@U) ($generated@@205 T@U) ($generated@@206 T@U) ($generated@@207 T@U) ) (!  (or (= $generated@@205 $generated@@207) (= ($generated@@169 ($generated@@174 $generated@@203 $generated@@204 $generated@@205 $generated@@202) $generated@@206 $generated@@207) ($generated@@169 $generated@@203 $generated@@206 $generated@@207)))
 :weight 0
))) (forall (($generated@@208 T@U) ($generated@@209 T@U) ($generated@@210 T@U) ($generated@@211 T@U) ($generated@@212 T@U) ($generated@@213 T@U) ) (!  (or true (= ($generated@@169 ($generated@@174 $generated@@209 $generated@@210 $generated@@211 $generated@@208) $generated@@212 $generated@@213) ($generated@@169 $generated@@209 $generated@@212 $generated@@213)))
 :weight 0
)))) (forall (($generated@@214 T@U) ($generated@@215 T@U) ($generated@@216 T@U) ($generated@@217 Bool) ) (! (= (type ($generated@@170 $generated@@214 $generated@@215 $generated@@216 $generated@@217)) ($generated@@171 $generated@@83 $generated@@4))
 :pattern ( ($generated@@170 $generated@@214 $generated@@215 $generated@@216 $generated@@217))
))))
(assert (forall (($generated@@218 T@U) ($generated@@219 T@U) ($generated@@220 T@U) ($generated@@221 Bool) ($generated@@222 T@U) ($generated@@223 T@U) ) (! (let (($generated@@224 ($generated@@73 (type $generated@@223))))
 (=> (and (and (and (and (= (type $generated@@218) $generated@@83) (= (type $generated@@219) ($generated@@82 $generated@@83 $generated@@84))) (= (type $generated@@220) ($generated@@72 $generated@@4))) (= (type $generated@@222) $generated@@83)) (= (type $generated@@223) ($generated@@72 $generated@@224))) (= ($generated@@0 ($generated@@169 ($generated@@170 $generated@@218 $generated@@219 $generated@@220 $generated@@221) $generated@@222 $generated@@223))  (=> (and (not (= $generated@@222 $generated@@218)) ($generated@@0 ($generated@@89 ($generated@@87 $generated@@219 $generated@@222) $generated@@220))) $generated@@221))))
 :pattern ( ($generated@@169 ($generated@@170 $generated@@218 $generated@@219 $generated@@220 $generated@@221) $generated@@222 $generated@@223))
)))
(assert (forall (($generated@@226 T@U) ($generated@@227 T@U) ($generated@@228 T@U) ($generated@@229 Bool) ) (! (= (type ($generated@@225 $generated@@226 $generated@@227 $generated@@228 $generated@@229)) ($generated@@171 $generated@@83 $generated@@4))
 :pattern ( ($generated@@225 $generated@@226 $generated@@227 $generated@@228 $generated@@229))
)))
(assert (forall (($generated@@230 T@U) ($generated@@231 T@U) ($generated@@232 T@U) ($generated@@233 Bool) ($generated@@234 T@U) ($generated@@235 T@U) ) (! (let (($generated@@236 ($generated@@73 (type $generated@@235))))
 (=> (and (and (and (and (= (type $generated@@230) $generated@@83) (= (type $generated@@231) ($generated@@82 $generated@@83 $generated@@84))) (= (type $generated@@232) ($generated@@72 $generated@@4))) (= (type $generated@@234) $generated@@83)) (= (type $generated@@235) ($generated@@72 $generated@@236))) (= ($generated@@0 ($generated@@169 ($generated@@225 $generated@@230 $generated@@231 $generated@@232 $generated@@233) $generated@@234 $generated@@235))  (=> (and (not (= $generated@@234 $generated@@230)) ($generated@@0 ($generated@@89 ($generated@@87 $generated@@231 $generated@@234) $generated@@232))) $generated@@233))))
 :pattern ( ($generated@@169 ($generated@@225 $generated@@230 $generated@@231 $generated@@232 $generated@@233) $generated@@234 $generated@@235))
)))
(assert (forall (($generated@@239 T@U) ($generated@@240 T@U) ) (! (= (type ($generated@@237 $generated@@239 $generated@@240)) $generated@@142)
 :pattern ( ($generated@@237 $generated@@239 $generated@@240))
)))
(assert (forall (($generated@@241 T@U) ($generated@@242 T@U) ($generated@@243 T@U) ($generated@@244 T@U) ) (!  (=> (and (and (and (= (type $generated@@241) $generated@@70) (= (type $generated@@242) $generated@@70)) (= (type $generated@@243) $generated@@151)) (= (type $generated@@244) $generated@@151)) (= ($generated@@138 ($generated@@237 $generated@@243 $generated@@244) ($generated@@141 $generated@@241 $generated@@242))  (and ($generated@@238 $generated@@243 $generated@@241) ($generated@@238 $generated@@244 $generated@@242))))
 :pattern ( ($generated@@138 ($generated@@237 $generated@@243 $generated@@244) ($generated@@141 $generated@@241 $generated@@242)))
)))
(assert (= (type $generated@@245) $generated@@70))
(assert ($generated@@138 $generated@@157 $generated@@245))
(assert (forall (($generated@@247 T@U) ) (!  (=> (and (= (type $generated@@247) ($generated@@82 $generated@@83 $generated@@84)) ($generated@@246 $generated@@247)) ($generated@@80 $generated@@157 $generated@@245 $generated@@247))
 :pattern ( ($generated@@80 $generated@@157 $generated@@245 $generated@@247))
)))
(assert (forall (($generated@@248 T@U) ($generated@@249 T@U) ) (!  (=> (and (= (type $generated@@248) $generated@@142) (= (type $generated@@249) $generated@@142)) (= ($generated@@148 $generated@@248 $generated@@249) (= $generated@@248 $generated@@249)))
 :pattern ( ($generated@@148 $generated@@248 $generated@@249))
)))
(assert (forall (($generated@@251 T@U) ($generated@@252 T@U) ) (!  (=> (and (= (type $generated@@251) $generated@@142) (= (type $generated@@252) $generated@@142)) (= ($generated@@250 $generated@@251 $generated@@252) (= $generated@@251 $generated@@252)))
 :pattern ( ($generated@@250 $generated@@251 $generated@@252))
)))
(assert (forall (($generated@@254 T@U) ($generated@@255 T@U) ) (!  (=> (and (= (type $generated@@254) $generated@@142) (= (type $generated@@255) $generated@@142)) (= ($generated@@253 $generated@@254 $generated@@255) (= $generated@@254 $generated@@255)))
 :pattern ( ($generated@@253 $generated@@254 $generated@@255))
)))
(assert  (and (and (forall (($generated@@262 T@U) ) (! (= (type ($generated@@259 $generated@@262)) $generated@@142)
 :pattern ( ($generated@@259 $generated@@262))
)) (forall (($generated@@263 T@U) ) (! (= (type ($generated@@260 $generated@@263)) $generated@@151)
 :pattern ( ($generated@@260 $generated@@263))
))) (forall (($generated@@264 T@U) ) (! (let (($generated@@265 (type $generated@@264)))
(= (type ($generated@@261 $generated@@264)) $generated@@265))
 :pattern ( ($generated@@261 $generated@@264))
))))
(assert  (=> (<= 2 $generated@@256) (forall (($generated@@266 T@U) ) (!  (=> (and (= (type $generated@@266) $generated@@142) (or ($generated@@258 $generated@@266) (and (not (= 2 $generated@@256)) ($generated@@138 $generated@@266 ($generated@@165 $generated@@245))))) ($generated@@250 $generated@@266 ($generated@@259 ($generated@@260 ($generated@@261 $generated@@157)))))
 :pattern ( ($generated@@257 $generated@@266))
))))
(assert (forall (($generated@@268 T@U) ) (! (= (type ($generated@@267 $generated@@268)) $generated@@70)
 :pattern ( ($generated@@267 $generated@@268))
)))
(assert (forall (($generated@@269 T@U) ($generated@@270 T@U) ) (!  (=> (and (= (type $generated@@269) ($generated@@82 $generated@@151 $generated@@4)) (= (type $generated@@270) $generated@@70)) (= ($generated@@138 $generated@@269 ($generated@@267 $generated@@270)) (forall (($generated@@271 T@U) ) (!  (=> (and (= (type $generated@@271) $generated@@151) ($generated@@0 ($generated@@87 $generated@@269 $generated@@271))) ($generated@@238 $generated@@271 $generated@@270))
 :pattern ( ($generated@@87 $generated@@269 $generated@@271))
))))
 :pattern ( ($generated@@138 $generated@@269 ($generated@@267 $generated@@270)))
)))
(assert (forall (($generated@@273 T@U) ) (! (= (type ($generated@@272 $generated@@273)) $generated@@70)
 :pattern ( ($generated@@272 $generated@@273))
)))
(assert (forall (($generated@@274 T@U) ($generated@@275 T@U) ) (!  (=> (and (= (type $generated@@274) ($generated@@82 $generated@@151 $generated@@4)) (= (type $generated@@275) $generated@@70)) (= ($generated@@138 $generated@@274 ($generated@@272 $generated@@275)) (forall (($generated@@276 T@U) ) (!  (=> (and (= (type $generated@@276) $generated@@151) ($generated@@0 ($generated@@87 $generated@@274 $generated@@276))) ($generated@@238 $generated@@276 $generated@@275))
 :pattern ( ($generated@@87 $generated@@274 $generated@@276))
))))
 :pattern ( ($generated@@138 $generated@@274 ($generated@@272 $generated@@275)))
)))
(assert (forall (($generated@@277 T@U) ) (! (= ($generated@@261 $generated@@277) $generated@@277)
 :pattern ( ($generated@@261 $generated@@277))
)))
(assert (forall (($generated@@279 T@U) ($generated@@280 T@U) ($generated@@281 T@U) ($generated@@282 T@U) ($generated@@283 T@U) ) (!  (=> (and (and (and (and (and (= (type $generated@@279) $generated@@70) (= (type $generated@@280) $generated@@70)) (= (type $generated@@281) $generated@@151)) (= (type $generated@@282) $generated@@151)) (= (type $generated@@283) ($generated@@82 $generated@@83 $generated@@84))) ($generated@@246 $generated@@283)) (= ($generated@@80 ($generated@@237 $generated@@281 $generated@@282) ($generated@@141 $generated@@279 $generated@@280) $generated@@283)  (and ($generated@@278 $generated@@281 $generated@@279 $generated@@283) ($generated@@278 $generated@@282 $generated@@280 $generated@@283))))
 :pattern ( ($generated@@80 ($generated@@237 $generated@@281 $generated@@282) ($generated@@141 $generated@@279 $generated@@280) $generated@@283))
)))
(assert (forall (($generated@@284 T@U) ) (!  (=> (= (type $generated@@284) $generated@@142) (= ($generated@@140 $generated@@284) (= ($generated@@156 $generated@@284) $generated@@61)))
 :pattern ( ($generated@@140 $generated@@284))
)))
(assert (forall (($generated@@285 T@U) ) (!  (=> (= (type $generated@@285) $generated@@142) (= ($generated@@164 $generated@@285) (= ($generated@@156 $generated@@285) $generated@@63)))
 :pattern ( ($generated@@164 $generated@@285))
)))
(assert (forall (($generated@@286 T@U) ) (!  (=> (and (= (type $generated@@286) $generated@@142) ($generated@@140 $generated@@286)) (exists (($generated@@287 T@U) ($generated@@288 T@U) ) (!  (and (and (= (type $generated@@287) $generated@@151) (= (type $generated@@288) $generated@@151)) (= $generated@@286 ($generated@@237 $generated@@287 $generated@@288)))
 :no-pattern (type $generated@@287)
 :no-pattern (type $generated@@288)
 :no-pattern ($generated $generated@@287)
 :no-pattern ($generated@@0 $generated@@287)
 :no-pattern ($generated $generated@@288)
 :no-pattern ($generated@@0 $generated@@288)
)))
 :pattern ( ($generated@@140 $generated@@286))
)))
(assert  (and (and (forall (($generated@@293 T@T) ) (= ($generated@@1 ($generated@@291 $generated@@293)) 17)) (forall (($generated@@294 T@T) ) (! (= ($generated@@292 ($generated@@291 $generated@@294)) $generated@@294)
 :pattern ( ($generated@@291 $generated@@294))
))) (forall (($generated@@295 T@T) ) (! (= (type ($generated@@289 $generated@@295)) ($generated@@291 $generated@@295))
 :pattern ( ($generated@@289 $generated@@295))
))))
(assert (forall (($generated@@296 T@T) ) (! (= ($generated@@290 ($generated@@289 $generated@@296)) 0)
 :pattern ( ($generated@@289 $generated@@296))
)))
(assert (forall (($generated@@298 T@U) ) (! (= (type ($generated@@297 $generated@@298)) $generated@@151)
 :pattern ( ($generated@@297 $generated@@298))
)))
(assert (forall (($generated@@299 T@U) ($generated@@300 T@U) ) (!  (=> (and (and (= (type $generated@@299) $generated@@142) (= (type $generated@@300) $generated@@142)) true) (= ($generated@@250 $generated@@299 $generated@@300) (= ($generated@@297 $generated@@299) ($generated@@297 $generated@@300))))
 :pattern ( ($generated@@250 $generated@@299 $generated@@300))
)))
(assert (forall (($generated@@301 T@U) ) (!  (=> (and (= (type $generated@@301) $generated@@142) ($generated@@164 $generated@@301)) (exists (($generated@@302 T@U) ) (!  (and (= (type $generated@@302) $generated@@151) (= $generated@@301 ($generated@@259 $generated@@302)))
 :no-pattern (type $generated@@302)
 :no-pattern ($generated $generated@@302)
 :no-pattern ($generated@@0 $generated@@302)
)))
 :pattern ( ($generated@@164 $generated@@301))
)))
(assert (forall (($generated@@303 T@U) ($generated@@304 T@U) ($generated@@305 T@U) ) (!  (=> (and (= (type $generated@@304) $generated@@70) (= (type $generated@@305) ($generated@@82 $generated@@83 $generated@@84))) (= ($generated@@278 ($generated@@260 $generated@@303) $generated@@304 $generated@@305) ($generated@@80 $generated@@303 $generated@@304 $generated@@305)))
 :pattern ( ($generated@@278 ($generated@@260 $generated@@303) $generated@@304 $generated@@305))
)))
(assert (forall (($generated@@308 T@T) ) (! (= (type ($generated@@307 $generated@@308)) ($generated@@82 $generated@@308 $generated@@2))
 :pattern ( ($generated@@307 $generated@@308))
)))
(assert (forall (($generated@@309 T@U) ) (! (let (($generated@@310 ($generated@@85 (type $generated@@309))))
 (=> (= (type $generated@@309) ($generated@@82 $generated@@310 $generated@@2)) (and (= (= ($generated@@306 $generated@@309) 0) (= $generated@@309 ($generated@@307 $generated@@310))) (=> (not (= ($generated@@306 $generated@@309) 0)) (exists (($generated@@311 T@U) ) (!  (and (= (type $generated@@311) $generated@@310) (< 0 ($generated ($generated@@87 $generated@@309 $generated@@311))))
 :no-pattern (type $generated@@311)
 :no-pattern ($generated $generated@@311)
 :no-pattern ($generated@@0 $generated@@311)
))))))
 :pattern ( ($generated@@306 $generated@@309))
)))
(assert (forall (($generated@@313 T@U) ) (! (= (type ($generated@@312 $generated@@313)) $generated@@75)
 :pattern ( ($generated@@312 $generated@@313))
)))
(assert (forall (($generated@@314 T@U) ) (!  (=> (= (type $generated@@314) $generated@@70) (and (= ($generated@@78 ($generated@@165 $generated@@314)) $generated@@64) (= ($generated@@312 ($generated@@165 $generated@@314)) $generated@@68)))
 :pattern ( ($generated@@165 $generated@@314))
)))
(assert  (and (and (and (and (forall (($generated@@320 T@T) ($generated@@321 T@T) ) (= ($generated@@1 ($generated@@317 $generated@@320 $generated@@321)) 18)) (forall (($generated@@322 T@T) ($generated@@323 T@T) ) (! (= ($generated@@318 ($generated@@317 $generated@@322 $generated@@323)) $generated@@322)
 :pattern ( ($generated@@317 $generated@@322 $generated@@323))
))) (forall (($generated@@324 T@T) ($generated@@325 T@T) ) (! (= ($generated@@319 ($generated@@317 $generated@@324 $generated@@325)) $generated@@325)
 :pattern ( ($generated@@317 $generated@@324 $generated@@325))
))) (forall (($generated@@326 T@U) ) (! (let (($generated@@327 ($generated@@318 (type $generated@@326))))
(= (type ($generated@@315 $generated@@326)) ($generated@@82 $generated@@327 $generated@@4)))
 :pattern ( ($generated@@315 $generated@@326))
))) (forall (($generated@@328 T@T) ($generated@@329 T@T) ) (! (= (type ($generated@@316 $generated@@328 $generated@@329)) ($generated@@317 $generated@@328 $generated@@329))
 :pattern ( ($generated@@316 $generated@@328 $generated@@329))
))))
(assert (forall (($generated@@330 T@U) ($generated@@331 T@T) ) (! (let (($generated@@332 (type $generated@@330)))
 (not ($generated@@0 ($generated@@87 ($generated@@315 ($generated@@316 $generated@@332 $generated@@331)) $generated@@330))))
 :pattern ( (let (($generated@@332 (type $generated@@330)))
($generated@@87 ($generated@@315 ($generated@@316 $generated@@332 $generated@@331)) $generated@@330)))
)))
(assert  (and (and (and (and (forall (($generated@@338 T@T) ($generated@@339 T@T) ) (= ($generated@@1 ($generated@@335 $generated@@338 $generated@@339)) 19)) (forall (($generated@@340 T@T) ($generated@@341 T@T) ) (! (= ($generated@@336 ($generated@@335 $generated@@340 $generated@@341)) $generated@@340)
 :pattern ( ($generated@@335 $generated@@340 $generated@@341))
))) (forall (($generated@@342 T@T) ($generated@@343 T@T) ) (! (= ($generated@@337 ($generated@@335 $generated@@342 $generated@@343)) $generated@@343)
 :pattern ( ($generated@@335 $generated@@342 $generated@@343))
))) (forall (($generated@@344 T@U) ) (! (let (($generated@@345 ($generated@@336 (type $generated@@344))))
(= (type ($generated@@333 $generated@@344)) ($generated@@82 $generated@@345 $generated@@4)))
 :pattern ( ($generated@@333 $generated@@344))
))) (forall (($generated@@346 T@T) ($generated@@347 T@T) ) (! (= (type ($generated@@334 $generated@@346 $generated@@347)) ($generated@@335 $generated@@346 $generated@@347))
 :pattern ( ($generated@@334 $generated@@346 $generated@@347))
))))
(assert (forall (($generated@@348 T@U) ($generated@@349 T@T) ) (! (let (($generated@@350 (type $generated@@348)))
 (not ($generated@@0 ($generated@@87 ($generated@@333 ($generated@@334 $generated@@350 $generated@@349)) $generated@@348))))
 :pattern ( (let (($generated@@350 (type $generated@@348)))
($generated@@87 ($generated@@333 ($generated@@334 $generated@@350 $generated@@349)) $generated@@348)))
)))
(assert (forall (($generated@@351 T@U) ) (! (let (($generated@@352 ($generated@@85 (type $generated@@351))))
 (=> (= (type $generated@@351) ($generated@@82 $generated@@352 $generated@@2)) (= ($generated@@160 $generated@@351) (forall (($generated@@353 T@U) ) (!  (=> (= (type $generated@@353) $generated@@352) (and (<= 0 ($generated ($generated@@87 $generated@@351 $generated@@353))) (<= ($generated ($generated@@87 $generated@@351 $generated@@353)) ($generated@@306 $generated@@351))))
 :pattern ( ($generated@@87 $generated@@351 $generated@@353))
)))))
 :pattern ( ($generated@@160 $generated@@351))
)))
(assert (forall (($generated@@355 T@T) ($generated@@356 T@U) ) (! (= (type ($generated@@354 $generated@@355 $generated@@356)) $generated@@355)
 :pattern ( ($generated@@354 $generated@@355 $generated@@356))
)))
(assert (forall (($generated@@357 T@U) ) (!  (=> (and (= (type $generated@@357) $generated@@151) ($generated@@238 $generated@@357 $generated@@245)) (and (= ($generated@@260 ($generated@@354 $generated@@142 $generated@@357)) $generated@@357) ($generated@@138 ($generated@@354 $generated@@142 $generated@@357) $generated@@245)))
 :pattern ( ($generated@@238 $generated@@357 $generated@@245))
)))
(assert (forall (($generated@@358 T@U) ) (! (let (($generated@@359 ($generated@@319 (type $generated@@358))))
(let (($generated@@360 ($generated@@318 (type $generated@@358))))
 (=> (= (type $generated@@358) ($generated@@317 $generated@@360 $generated@@359)) (or (= $generated@@358 ($generated@@316 $generated@@360 $generated@@359)) (exists (($generated@@361 T@U) ) (!  (and (= (type $generated@@361) $generated@@360) ($generated@@0 ($generated@@87 ($generated@@315 $generated@@358) $generated@@361)))
 :no-pattern (type $generated@@361)
 :no-pattern ($generated $generated@@361)
 :no-pattern ($generated@@0 $generated@@361)
))))))
 :pattern ( ($generated@@315 $generated@@358))
)))
(assert (forall (($generated@@363 T@U) ) (! (let (($generated@@364 ($generated@@319 (type $generated@@363))))
(= (type ($generated@@362 $generated@@363)) ($generated@@82 $generated@@364 $generated@@4)))
 :pattern ( ($generated@@362 $generated@@363))
)))
(assert (forall (($generated@@365 T@U) ) (! (let (($generated@@366 ($generated@@319 (type $generated@@365))))
(let (($generated@@367 ($generated@@318 (type $generated@@365))))
 (=> (= (type $generated@@365) ($generated@@317 $generated@@367 $generated@@366)) (or (= $generated@@365 ($generated@@316 $generated@@367 $generated@@366)) (exists (($generated@@368 T@U) ) (!  (and (= (type $generated@@368) $generated@@366) ($generated@@0 ($generated@@87 ($generated@@362 $generated@@365) $generated@@368)))
 :no-pattern (type $generated@@368)
 :no-pattern ($generated $generated@@368)
 :no-pattern ($generated@@0 $generated@@368)
))))))
 :pattern ( ($generated@@362 $generated@@365))
)))
(assert (forall (($generated@@369 T@U) ) (! (let (($generated@@370 ($generated@@337 (type $generated@@369))))
(let (($generated@@371 ($generated@@336 (type $generated@@369))))
 (=> (= (type $generated@@369) ($generated@@335 $generated@@371 $generated@@370)) (or (= $generated@@369 ($generated@@334 $generated@@371 $generated@@370)) (exists (($generated@@372 T@U) ) (!  (and (= (type $generated@@372) $generated@@371) ($generated@@0 ($generated@@87 ($generated@@333 $generated@@369) $generated@@372)))
 :no-pattern (type $generated@@372)
 :no-pattern ($generated $generated@@372)
 :no-pattern ($generated@@0 $generated@@372)
))))))
 :pattern ( ($generated@@333 $generated@@369))
)))
(assert (forall (($generated@@374 T@U) ) (! (let (($generated@@375 ($generated@@337 (type $generated@@374))))
(= (type ($generated@@373 $generated@@374)) ($generated@@82 $generated@@375 $generated@@4)))
 :pattern ( ($generated@@373 $generated@@374))
)))
(assert (forall (($generated@@376 T@U) ) (! (let (($generated@@377 ($generated@@337 (type $generated@@376))))
(let (($generated@@378 ($generated@@336 (type $generated@@376))))
 (=> (= (type $generated@@376) ($generated@@335 $generated@@378 $generated@@377)) (or (= $generated@@376 ($generated@@334 $generated@@378 $generated@@377)) (exists (($generated@@379 T@U) ) (!  (and (= (type $generated@@379) $generated@@377) ($generated@@0 ($generated@@87 ($generated@@373 $generated@@376) $generated@@379)))
 :no-pattern (type $generated@@379)
 :no-pattern ($generated $generated@@379)
 :no-pattern ($generated@@0 $generated@@379)
))))))
 :pattern ( ($generated@@373 $generated@@376))
)))
(assert (forall (($generated@@380 T@U) ($generated@@381 T@U) ) (!  (=> (and (= (type $generated@@380) ($generated@@82 $generated@@151 $generated@@2)) (= (type $generated@@381) $generated@@70)) (= ($generated@@138 $generated@@380 ($generated@@159 $generated@@381)) (forall (($generated@@382 T@U) ) (!  (=> (and (= (type $generated@@382) $generated@@151) (< 0 ($generated ($generated@@87 $generated@@380 $generated@@382)))) ($generated@@238 $generated@@382 $generated@@381))
 :pattern ( ($generated@@87 $generated@@380 $generated@@382))
))))
 :pattern ( ($generated@@138 $generated@@380 ($generated@@159 $generated@@381)))
)))
(assert (forall (($generated@@383 T@U) ($generated@@384 T@U) ($generated@@385 T@U) ) (!  (=> (and (and (and (= (type $generated@@383) $generated@@70) (= (type $generated@@384) $generated@@151)) (= (type $generated@@385) ($generated@@82 $generated@@83 $generated@@84))) ($generated@@246 $generated@@385)) (= ($generated@@80 ($generated@@259 $generated@@384) ($generated@@165 $generated@@383) $generated@@385) ($generated@@278 $generated@@384 $generated@@383 $generated@@385)))
 :pattern ( ($generated@@80 ($generated@@259 $generated@@384) ($generated@@165 $generated@@383) $generated@@385))
)))
(assert  (=> (<= 2 $generated@@256) (forall (($generated@@388 T@U) ) (!  (=> (and (= (type $generated@@388) $generated@@142) (or ($generated@@258 ($generated@@261 $generated@@388)) (and (not (= 2 $generated@@256)) ($generated@@138 $generated@@388 ($generated@@165 $generated@@245))))) (and (and ($generated@@164 ($generated@@261 $generated@@388)) (let (($generated@@389 ($generated@@261 ($generated@@354 $generated@@142 ($generated@@297 ($generated@@261 $generated@@388))))))
($generated@@386 $generated@@389))) (= ($generated@@257 ($generated@@261 $generated@@388)) ($generated@@0 (let (($generated@@390 ($generated@@261 ($generated@@354 $generated@@142 ($generated@@297 ($generated@@261 $generated@@388))))))
($generated@@261 ($generated@@11 ($generated@@387 $generated@@390))))))))
 :weight 3
 :pattern ( ($generated@@257 ($generated@@261 $generated@@388)))
))))
(assert (forall (($generated@@391 T@U) ($generated@@392 T@U) ) (!  (=> (and (and (= (type $generated@@391) $generated@@142) (= (type $generated@@392) $generated@@142)) true) (= ($generated@@253 $generated@@391 $generated@@392) true))
 :pattern ( ($generated@@253 $generated@@391 $generated@@392))
)))
(assert (forall (($generated@@393 T@U) ($generated@@394 T@U) ($generated@@395 T@U) ) (!  (=> (and (and (= (type $generated@@393) ($generated@@82 $generated@@151 $generated@@4)) (= (type $generated@@394) $generated@@70)) (= (type $generated@@395) ($generated@@82 $generated@@83 $generated@@84))) (= ($generated@@80 $generated@@393 ($generated@@267 $generated@@394) $generated@@395) (forall (($generated@@396 T@U) ) (!  (=> (and (= (type $generated@@396) $generated@@151) ($generated@@0 ($generated@@87 $generated@@393 $generated@@396))) ($generated@@278 $generated@@396 $generated@@394 $generated@@395))
 :pattern ( ($generated@@87 $generated@@393 $generated@@396))
))))
 :pattern ( ($generated@@80 $generated@@393 ($generated@@267 $generated@@394) $generated@@395))
)))
(assert (forall (($generated@@397 T@U) ($generated@@398 T@U) ($generated@@399 T@U) ) (!  (=> (and (and (= (type $generated@@397) ($generated@@82 $generated@@151 $generated@@4)) (= (type $generated@@398) $generated@@70)) (= (type $generated@@399) ($generated@@82 $generated@@83 $generated@@84))) (= ($generated@@80 $generated@@397 ($generated@@272 $generated@@398) $generated@@399) (forall (($generated@@400 T@U) ) (!  (=> (and (= (type $generated@@400) $generated@@151) ($generated@@0 ($generated@@87 $generated@@397 $generated@@400))) ($generated@@278 $generated@@400 $generated@@398 $generated@@399))
 :pattern ( ($generated@@87 $generated@@397 $generated@@400))
))))
 :pattern ( ($generated@@80 $generated@@397 ($generated@@272 $generated@@398) $generated@@399))
)))
(assert (forall (($generated@@401 T@U) ) (! (let (($generated@@402 (type $generated@@401)))
(= ($generated ($generated@@87 ($generated@@307 $generated@@402) $generated@@401)) 0))
 :pattern ( (let (($generated@@402 (type $generated@@401)))
($generated@@87 ($generated@@307 $generated@@402) $generated@@401)))
)))
(assert  (and (forall (($generated@@405 T@U) ) (! (= (type ($generated@@403 $generated@@405)) ($generated@@82 $generated@@151 $generated@@4))
 :pattern ( ($generated@@403 $generated@@405))
)) (forall (($generated@@406 T@U) ) (! (let (($generated@@407 ($generated@@319 (type $generated@@406))))
(let (($generated@@408 ($generated@@318 (type $generated@@406))))
(= (type ($generated@@404 $generated@@406)) ($generated@@82 $generated@@408 $generated@@407))))
 :pattern ( ($generated@@404 $generated@@406))
))))
(assert (forall (($generated@@409 T@U) ($generated@@410 T@U) ) (!  (=> (and (= (type $generated@@409) ($generated@@317 $generated@@151 $generated@@151)) (= (type $generated@@410) $generated@@151)) (= ($generated@@0 ($generated@@87 ($generated@@403 $generated@@409) $generated@@410))  (and ($generated@@0 ($generated@@87 ($generated@@315 $generated@@409) ($generated@@149 ($generated@@354 $generated@@142 $generated@@410)))) (= ($generated@@87 ($generated@@404 $generated@@409) ($generated@@149 ($generated@@354 $generated@@142 $generated@@410))) ($generated@@150 ($generated@@354 $generated@@142 $generated@@410))))))
 :pattern ( ($generated@@87 ($generated@@403 $generated@@409) $generated@@410))
)))
(assert  (and (forall (($generated@@413 T@U) ) (! (= (type ($generated@@411 $generated@@413)) ($generated@@82 $generated@@151 $generated@@4))
 :pattern ( ($generated@@411 $generated@@413))
)) (forall (($generated@@414 T@U) ) (! (let (($generated@@415 ($generated@@337 (type $generated@@414))))
(let (($generated@@416 ($generated@@336 (type $generated@@414))))
(= (type ($generated@@412 $generated@@414)) ($generated@@82 $generated@@416 $generated@@415))))
 :pattern ( ($generated@@412 $generated@@414))
))))
(assert (forall (($generated@@417 T@U) ($generated@@418 T@U) ) (!  (=> (and (= (type $generated@@417) ($generated@@335 $generated@@151 $generated@@151)) (= (type $generated@@418) $generated@@151)) (= ($generated@@0 ($generated@@87 ($generated@@411 $generated@@417) $generated@@418))  (and ($generated@@0 ($generated@@87 ($generated@@333 $generated@@417) ($generated@@149 ($generated@@354 $generated@@142 $generated@@418)))) (= ($generated@@87 ($generated@@412 $generated@@417) ($generated@@149 ($generated@@354 $generated@@142 $generated@@418))) ($generated@@150 ($generated@@354 $generated@@142 $generated@@418))))))
 :pattern ( ($generated@@87 ($generated@@411 $generated@@417) $generated@@418))
)))
(assert (forall (($generated@@419 T@U) ($generated@@420 T@U) ) (! (let (($generated@@421 (type $generated@@420)))
(let (($generated@@422 ($generated@@318 (type $generated@@419))))
 (=> (= (type $generated@@419) ($generated@@317 $generated@@422 $generated@@421)) (= ($generated@@0 ($generated@@87 ($generated@@362 $generated@@419) $generated@@420)) (exists (($generated@@423 T@U) ) (!  (and (= (type $generated@@423) $generated@@422) (and ($generated@@0 ($generated@@87 ($generated@@315 $generated@@419) $generated@@423)) (= $generated@@420 ($generated@@87 ($generated@@404 $generated@@419) $generated@@423))))
 :pattern ( ($generated@@87 ($generated@@315 $generated@@419) $generated@@423))
 :pattern ( ($generated@@87 ($generated@@404 $generated@@419) $generated@@423))
))))))
 :pattern ( ($generated@@87 ($generated@@362 $generated@@419) $generated@@420))
)))
(assert (forall (($generated@@424 T@U) ($generated@@425 T@U) ) (! (let (($generated@@426 (type $generated@@425)))
(let (($generated@@427 ($generated@@336 (type $generated@@424))))
 (=> (= (type $generated@@424) ($generated@@335 $generated@@427 $generated@@426)) (= ($generated@@0 ($generated@@87 ($generated@@373 $generated@@424) $generated@@425)) (exists (($generated@@428 T@U) ) (!  (and (= (type $generated@@428) $generated@@427) (and ($generated@@0 ($generated@@87 ($generated@@333 $generated@@424) $generated@@428)) (= $generated@@425 ($generated@@87 ($generated@@412 $generated@@424) $generated@@428))))
 :pattern ( ($generated@@87 ($generated@@333 $generated@@424) $generated@@428))
 :pattern ( ($generated@@87 ($generated@@412 $generated@@424) $generated@@428))
))))))
 :pattern ( ($generated@@87 ($generated@@373 $generated@@424) $generated@@425))
)))
(assert (forall (($generated@@430 T@U) ($generated@@431 T@U) ) (! (= (type ($generated@@429 $generated@@430 $generated@@431)) $generated@@70)
 :pattern ( ($generated@@429 $generated@@430 $generated@@431))
)))
(assert (forall (($generated@@432 T@U) ($generated@@433 T@U) ($generated@@434 T@U) ($generated@@435 T@U) ) (!  (=> (and (and (and (= (type $generated@@432) ($generated@@317 $generated@@151 $generated@@151)) (= (type $generated@@433) $generated@@70)) (= (type $generated@@434) $generated@@70)) (= (type $generated@@435) ($generated@@82 $generated@@83 $generated@@84))) (= ($generated@@80 $generated@@432 ($generated@@429 $generated@@433 $generated@@434) $generated@@435) (forall (($generated@@436 T@U) ) (!  (=> (and (= (type $generated@@436) $generated@@151) ($generated@@0 ($generated@@87 ($generated@@315 $generated@@432) $generated@@436))) (and ($generated@@278 ($generated@@87 ($generated@@404 $generated@@432) $generated@@436) $generated@@434 $generated@@435) ($generated@@278 $generated@@436 $generated@@433 $generated@@435)))
 :pattern ( ($generated@@87 ($generated@@404 $generated@@432) $generated@@436))
 :pattern ( ($generated@@87 ($generated@@315 $generated@@432) $generated@@436))
))))
 :pattern ( ($generated@@80 $generated@@432 ($generated@@429 $generated@@433 $generated@@434) $generated@@435))
)))
(assert (forall (($generated@@438 T@U) ($generated@@439 T@U) ) (! (= (type ($generated@@437 $generated@@438 $generated@@439)) $generated@@70)
 :pattern ( ($generated@@437 $generated@@438 $generated@@439))
)))
(assert (forall (($generated@@440 T@U) ($generated@@441 T@U) ($generated@@442 T@U) ($generated@@443 T@U) ) (!  (=> (and (and (and (= (type $generated@@440) ($generated@@335 $generated@@151 $generated@@151)) (= (type $generated@@441) $generated@@70)) (= (type $generated@@442) $generated@@70)) (= (type $generated@@443) ($generated@@82 $generated@@83 $generated@@84))) (= ($generated@@80 $generated@@440 ($generated@@437 $generated@@441 $generated@@442) $generated@@443) (forall (($generated@@444 T@U) ) (!  (=> (and (= (type $generated@@444) $generated@@151) ($generated@@0 ($generated@@87 ($generated@@333 $generated@@440) $generated@@444))) (and ($generated@@278 ($generated@@87 ($generated@@412 $generated@@440) $generated@@444) $generated@@442 $generated@@443) ($generated@@278 $generated@@444 $generated@@441 $generated@@443)))
 :pattern ( ($generated@@87 ($generated@@412 $generated@@440) $generated@@444))
 :pattern ( ($generated@@87 ($generated@@333 $generated@@440) $generated@@444))
))))
 :pattern ( ($generated@@80 $generated@@440 ($generated@@437 $generated@@441 $generated@@442) $generated@@443))
)))
(assert (forall (($generated@@446 T@T) ) (! (= (type ($generated@@445 $generated@@446)) ($generated@@82 $generated@@446 $generated@@4))
 :pattern ( ($generated@@445 $generated@@446))
)))
(assert (forall (($generated@@447 T@U) ) (! (let (($generated@@448 ($generated@@337 (type $generated@@447))))
(let (($generated@@449 ($generated@@336 (type $generated@@447))))
 (=> (= (type $generated@@447) ($generated@@335 $generated@@449 $generated@@448)) (= (= $generated@@447 ($generated@@334 $generated@@449 $generated@@448)) (= ($generated@@333 $generated@@447) ($generated@@445 $generated@@449))))))
 :pattern ( ($generated@@333 $generated@@447))
)))
(assert (forall (($generated@@450 T@U) ) (! (let (($generated@@451 ($generated@@337 (type $generated@@450))))
(let (($generated@@452 ($generated@@336 (type $generated@@450))))
 (=> (= (type $generated@@450) ($generated@@335 $generated@@452 $generated@@451)) (= (= $generated@@450 ($generated@@334 $generated@@452 $generated@@451)) (= ($generated@@373 $generated@@450) ($generated@@445 $generated@@451))))))
 :pattern ( ($generated@@373 $generated@@450))
)))
(assert (forall (($generated@@453 T@U) ) (! (let (($generated@@454 ($generated@@337 (type $generated@@453))))
(let (($generated@@455 ($generated@@336 (type $generated@@453))))
 (=> (= (type $generated@@453) ($generated@@335 $generated@@455 $generated@@454)) (= (= $generated@@453 ($generated@@334 $generated@@455 $generated@@454)) (= ($generated@@411 $generated@@453) ($generated@@445 $generated@@151))))))
 :pattern ( ($generated@@411 $generated@@453))
)))
(assert (forall (($generated@@456 T@U) ) (! (let (($generated@@457 ($generated@@319 (type $generated@@456))))
(let (($generated@@458 ($generated@@318 (type $generated@@456))))
 (=> (= (type $generated@@456) ($generated@@317 $generated@@458 $generated@@457)) (or (= $generated@@456 ($generated@@316 $generated@@458 $generated@@457)) (exists (($generated@@459 T@U) ($generated@@460 T@U) ) (!  (and (and (= (type $generated@@459) $generated@@151) (= (type $generated@@460) $generated@@151)) ($generated@@0 ($generated@@87 ($generated@@403 $generated@@456) ($generated@@260 ($generated@@237 $generated@@459 $generated@@460)))))
 :no-pattern (type $generated@@459)
 :no-pattern (type $generated@@460)
 :no-pattern ($generated $generated@@459)
 :no-pattern ($generated@@0 $generated@@459)
 :no-pattern ($generated $generated@@460)
 :no-pattern ($generated@@0 $generated@@460)
))))))
 :pattern ( ($generated@@403 $generated@@456))
)))
(assert (forall (($generated@@461 T@U) ) (! (let (($generated@@462 ($generated@@337 (type $generated@@461))))
(let (($generated@@463 ($generated@@336 (type $generated@@461))))
 (=> (= (type $generated@@461) ($generated@@335 $generated@@463 $generated@@462)) (or (= $generated@@461 ($generated@@334 $generated@@463 $generated@@462)) (exists (($generated@@464 T@U) ($generated@@465 T@U) ) (!  (and (and (= (type $generated@@464) $generated@@151) (= (type $generated@@465) $generated@@151)) ($generated@@0 ($generated@@87 ($generated@@411 $generated@@461) ($generated@@260 ($generated@@237 $generated@@464 $generated@@465)))))
 :no-pattern (type $generated@@464)
 :no-pattern (type $generated@@465)
 :no-pattern ($generated $generated@@464)
 :no-pattern ($generated@@0 $generated@@464)
 :no-pattern ($generated $generated@@465)
 :no-pattern ($generated@@0 $generated@@465)
))))))
 :pattern ( ($generated@@411 $generated@@461))
)))
(assert (forall (($generated@@466 T@U) ) (!  (=> (and (= (type $generated@@466) $generated@@151) ($generated@@238 $generated@@466 $generated@@46)) (and (= ($generated@@260 ($generated@@354 $generated@@2 $generated@@466)) $generated@@466) ($generated@@138 ($generated@@354 $generated@@2 $generated@@466) $generated@@46)))
 :pattern ( ($generated@@238 $generated@@466 $generated@@46))
)))
(assert (forall (($generated@@467 T@U) ) (!  (=> (and (= (type $generated@@467) $generated@@151) ($generated@@238 $generated@@467 $generated@@47)) (and (= ($generated@@260 ($generated@@354 $generated@@3 $generated@@467)) $generated@@467) ($generated@@138 ($generated@@354 $generated@@3 $generated@@467) $generated@@47)))
 :pattern ( ($generated@@238 $generated@@467 $generated@@47))
)))
(assert (forall (($generated@@468 T@U) ) (!  (=> (and (= (type $generated@@468) $generated@@151) ($generated@@238 $generated@@468 $generated@@44)) (and (= ($generated@@260 ($generated@@354 $generated@@4 $generated@@468)) $generated@@468) ($generated@@138 ($generated@@354 $generated@@4 $generated@@468) $generated@@44)))
 :pattern ( ($generated@@238 $generated@@468 $generated@@44))
)))
(assert (= ($generated@@1 $generated@@469) 20))
(assert (forall (($generated@@470 T@U) ) (!  (=> (and (= (type $generated@@470) $generated@@151) ($generated@@238 $generated@@470 $generated@@45)) (and (= ($generated@@260 ($generated@@354 $generated@@469 $generated@@470)) $generated@@470) ($generated@@138 ($generated@@354 $generated@@469 $generated@@470) $generated@@45)))
 :pattern ( ($generated@@238 $generated@@470 $generated@@45))
)))
(assert (forall (($generated@@471 T@U) ($generated@@472 T@U) ) (!  (=> (= (type $generated@@472) $generated@@70) (= ($generated@@238 ($generated@@260 $generated@@471) $generated@@472) ($generated@@138 $generated@@471 $generated@@472)))
 :pattern ( ($generated@@238 ($generated@@260 $generated@@471) $generated@@472))
)))
(assert (forall (($generated@@473 T@U) ) (! (let (($generated@@474 ($generated@@85 (type $generated@@473))))
 (=> (= (type $generated@@473) ($generated@@82 $generated@@474 $generated@@2)) (<= 0 ($generated@@306 $generated@@473))))
 :pattern ( ($generated@@306 $generated@@473))
)))
(assert (forall (($generated@@475 T@U) ) (! (let (($generated@@476 ($generated@@292 (type $generated@@475))))
 (=> (= (type $generated@@475) ($generated@@291 $generated@@476)) (<= 0 ($generated@@290 $generated@@475))))
 :pattern ( ($generated@@290 $generated@@475))
)))
(assert (forall (($generated@@478 T@U) ) (! (= (type ($generated@@477 $generated@@478)) $generated@@70)
 :pattern ( ($generated@@477 $generated@@478))
)))
(assert (forall (($generated@@479 T@U) ($generated@@480 T@U) ) (!  (=> (and (= (type $generated@@479) $generated@@70) (= (type $generated@@480) $generated@@70)) (= ($generated@@477 ($generated@@429 $generated@@479 $generated@@480)) $generated@@479))
 :pattern ( ($generated@@429 $generated@@479 $generated@@480))
)))
(assert (forall (($generated@@482 T@U) ) (! (= (type ($generated@@481 $generated@@482)) $generated@@70)
 :pattern ( ($generated@@481 $generated@@482))
)))
(assert (forall (($generated@@483 T@U) ($generated@@484 T@U) ) (!  (=> (and (= (type $generated@@483) $generated@@70) (= (type $generated@@484) $generated@@70)) (= ($generated@@481 ($generated@@429 $generated@@483 $generated@@484)) $generated@@484))
 :pattern ( ($generated@@429 $generated@@483 $generated@@484))
)))
(assert (forall (($generated@@485 T@U) ($generated@@486 T@U) ) (!  (=> (and (= (type $generated@@485) $generated@@70) (= (type $generated@@486) $generated@@70)) (= ($generated@@78 ($generated@@429 $generated@@485 $generated@@486)) $generated@@58))
 :pattern ( ($generated@@429 $generated@@485 $generated@@486))
)))
(assert (forall (($generated@@488 T@U) ) (! (= (type ($generated@@487 $generated@@488)) $generated@@70)
 :pattern ( ($generated@@487 $generated@@488))
)))
(assert (forall (($generated@@489 T@U) ($generated@@490 T@U) ) (!  (=> (and (= (type $generated@@489) $generated@@70) (= (type $generated@@490) $generated@@70)) (= ($generated@@487 ($generated@@437 $generated@@489 $generated@@490)) $generated@@489))
 :pattern ( ($generated@@437 $generated@@489 $generated@@490))
)))
(assert (forall (($generated@@492 T@U) ) (! (= (type ($generated@@491 $generated@@492)) $generated@@70)
 :pattern ( ($generated@@491 $generated@@492))
)))
(assert (forall (($generated@@493 T@U) ($generated@@494 T@U) ) (!  (=> (and (= (type $generated@@493) $generated@@70) (= (type $generated@@494) $generated@@70)) (= ($generated@@491 ($generated@@437 $generated@@493 $generated@@494)) $generated@@494))
 :pattern ( ($generated@@437 $generated@@493 $generated@@494))
)))
(assert (forall (($generated@@495 T@U) ($generated@@496 T@U) ) (!  (=> (and (= (type $generated@@495) $generated@@70) (= (type $generated@@496) $generated@@70)) (= ($generated@@78 ($generated@@437 $generated@@495 $generated@@496)) $generated@@59))
 :pattern ( ($generated@@437 $generated@@495 $generated@@496))
)))
(assert (forall (($generated@@497 T@U) ($generated@@498 T@U) ) (!  (=> (and (= (type $generated@@497) $generated@@151) (= (type $generated@@498) $generated@@151)) (= ($generated@@156 ($generated@@237 $generated@@497 $generated@@498)) $generated@@61))
 :pattern ( ($generated@@237 $generated@@497 $generated@@498))
)))
(assert (forall (($generated@@500 T@U) ) (! (= (type ($generated@@499 $generated@@500)) $generated@@70)
 :pattern ( ($generated@@499 $generated@@500))
)))
(assert (forall (($generated@@501 T@U) ($generated@@502 T@U) ) (!  (=> (and (= (type $generated@@501) $generated@@70) (= (type $generated@@502) $generated@@70)) (= ($generated@@499 ($generated@@141 $generated@@501 $generated@@502)) $generated@@501))
 :pattern ( ($generated@@141 $generated@@501 $generated@@502))
)))
(assert (forall (($generated@@504 T@U) ) (! (= (type ($generated@@503 $generated@@504)) $generated@@70)
 :pattern ( ($generated@@503 $generated@@504))
)))
(assert (forall (($generated@@505 T@U) ($generated@@506 T@U) ) (!  (=> (and (= (type $generated@@505) $generated@@70) (= (type $generated@@506) $generated@@70)) (= ($generated@@503 ($generated@@141 $generated@@505 $generated@@506)) $generated@@506))
 :pattern ( ($generated@@141 $generated@@505 $generated@@506))
)))
(assert (forall (($generated@@507 T@U) ($generated@@508 T@U) ) (!  (=> (and (= (type $generated@@507) $generated@@151) (= (type $generated@@508) $generated@@151)) (= ($generated@@149 ($generated@@237 $generated@@507 $generated@@508)) $generated@@507))
 :pattern ( ($generated@@237 $generated@@507 $generated@@508))
)))
(assert (forall (($generated@@509 T@U) ($generated@@510 T@U) ) (!  (=> (and (= (type $generated@@509) $generated@@151) (= (type $generated@@510) $generated@@151)) (= ($generated@@150 ($generated@@237 $generated@@509 $generated@@510)) $generated@@510))
 :pattern ( ($generated@@237 $generated@@509 $generated@@510))
)))
(assert  (and (forall (($generated@@513 T@U) ) (! (= (type ($generated@@511 $generated@@513)) $generated@@70)
 :pattern ( ($generated@@511 $generated@@513))
)) (forall (($generated@@514 T@U) ($generated@@515 Int) ) (! (let (($generated@@516 ($generated@@292 (type $generated@@514))))
(= (type ($generated@@512 $generated@@514 $generated@@515)) $generated@@516))
 :pattern ( ($generated@@512 $generated@@514 $generated@@515))
))))
(assert (forall (($generated@@517 T@U) ($generated@@518 T@U) ($generated@@519 T@U) ) (!  (=> (and (and (= (type $generated@@517) ($generated@@291 $generated@@151)) (= (type $generated@@518) $generated@@70)) (= (type $generated@@519) ($generated@@82 $generated@@83 $generated@@84))) (= ($generated@@80 $generated@@517 ($generated@@511 $generated@@518) $generated@@519) (forall (($generated@@520 Int) ) (!  (=> (and (<= 0 $generated@@520) (< $generated@@520 ($generated@@290 $generated@@517))) ($generated@@278 ($generated@@512 $generated@@517 $generated@@520) $generated@@518 $generated@@519))
 :pattern ( ($generated@@512 $generated@@517 $generated@@520))
))))
 :pattern ( ($generated@@80 $generated@@517 ($generated@@511 $generated@@518) $generated@@519))
)))
(assert (forall (($generated@@522 Int) ) (! (= ($generated@@521 ($generated@@81 $generated@@522)) $generated@@522)
 :pattern ( ($generated@@81 $generated@@522))
)))
(assert (forall (($generated@@524 T@U) ) (! (= (type ($generated@@523 $generated@@524)) $generated@@70)
 :pattern ( ($generated@@523 $generated@@524))
)))
(assert (forall (($generated@@525 T@U) ) (!  (=> (= (type $generated@@525) $generated@@70) (= ($generated@@523 ($generated@@267 $generated@@525)) $generated@@525))
 :pattern ( ($generated@@267 $generated@@525))
)))
(assert (forall (($generated@@526 T@U) ) (!  (=> (= (type $generated@@526) $generated@@70) (= ($generated@@78 ($generated@@267 $generated@@526)) $generated@@54))
 :pattern ( ($generated@@267 $generated@@526))
)))
(assert (forall (($generated@@528 T@U) ) (! (= (type ($generated@@527 $generated@@528)) $generated@@70)
 :pattern ( ($generated@@527 $generated@@528))
)))
(assert (forall (($generated@@529 T@U) ) (!  (=> (= (type $generated@@529) $generated@@70) (= ($generated@@527 ($generated@@272 $generated@@529)) $generated@@529))
 :pattern ( ($generated@@272 $generated@@529))
)))
(assert (forall (($generated@@530 T@U) ) (!  (=> (= (type $generated@@530) $generated@@70) (= ($generated@@78 ($generated@@272 $generated@@530)) $generated@@55))
 :pattern ( ($generated@@272 $generated@@530))
)))
(assert (forall (($generated@@532 T@U) ) (! (= (type ($generated@@531 $generated@@532)) $generated@@70)
 :pattern ( ($generated@@531 $generated@@532))
)))
(assert (forall (($generated@@533 T@U) ) (!  (=> (= (type $generated@@533) $generated@@70) (= ($generated@@531 ($generated@@159 $generated@@533)) $generated@@533))
 :pattern ( ($generated@@159 $generated@@533))
)))
(assert (forall (($generated@@534 T@U) ) (!  (=> (= (type $generated@@534) $generated@@70) (= ($generated@@78 ($generated@@159 $generated@@534)) $generated@@56))
 :pattern ( ($generated@@159 $generated@@534))
)))
(assert (forall (($generated@@536 T@U) ) (! (= (type ($generated@@535 $generated@@536)) $generated@@70)
 :pattern ( ($generated@@535 $generated@@536))
)))
(assert (forall (($generated@@537 T@U) ) (!  (=> (= (type $generated@@537) $generated@@70) (= ($generated@@535 ($generated@@511 $generated@@537)) $generated@@537))
 :pattern ( ($generated@@511 $generated@@537))
)))
(assert (forall (($generated@@538 T@U) ) (!  (=> (= (type $generated@@538) $generated@@70) (= ($generated@@78 ($generated@@511 $generated@@538)) $generated@@57))
 :pattern ( ($generated@@511 $generated@@538))
)))
(assert (forall (($generated@@539 T@U) ) (!  (=> (= (type $generated@@539) $generated@@151) (= ($generated@@156 ($generated@@259 $generated@@539)) $generated@@63))
 :pattern ( ($generated@@259 $generated@@539))
)))
(assert (forall (($generated@@541 T@U) ) (! (= (type ($generated@@540 $generated@@541)) $generated@@70)
 :pattern ( ($generated@@540 $generated@@541))
)))
(assert (forall (($generated@@542 T@U) ) (!  (=> (= (type $generated@@542) $generated@@70) (= ($generated@@540 ($generated@@165 $generated@@542)) $generated@@542))
 :pattern ( ($generated@@165 $generated@@542))
)))
(assert (forall (($generated@@543 T@U) ) (!  (=> (= (type $generated@@543) $generated@@151) (= ($generated@@297 ($generated@@259 $generated@@543)) $generated@@543))
 :pattern ( ($generated@@259 $generated@@543))
)))
(assert (forall (($generated@@544 T@U) ) (! (let (($generated@@545 (type $generated@@544)))
(= ($generated@@354 $generated@@545 ($generated@@260 $generated@@544)) $generated@@544))
 :pattern ( ($generated@@260 $generated@@544))
)))
(assert (forall (($generated@@546 T@U) ($generated@@547 T@U) ($generated@@548 T@U) ) (!  (=> (and (and (= (type $generated@@546) ($generated@@317 $generated@@151 $generated@@151)) (= (type $generated@@547) $generated@@70)) (= (type $generated@@548) $generated@@70)) (= ($generated@@138 $generated@@546 ($generated@@429 $generated@@547 $generated@@548)) (forall (($generated@@549 T@U) ) (!  (=> (and (= (type $generated@@549) $generated@@151) ($generated@@0 ($generated@@87 ($generated@@315 $generated@@546) $generated@@549))) (and ($generated@@238 ($generated@@87 ($generated@@404 $generated@@546) $generated@@549) $generated@@548) ($generated@@238 $generated@@549 $generated@@547)))
 :pattern ( ($generated@@87 ($generated@@404 $generated@@546) $generated@@549))
 :pattern ( ($generated@@87 ($generated@@315 $generated@@546) $generated@@549))
))))
 :pattern ( ($generated@@138 $generated@@546 ($generated@@429 $generated@@547 $generated@@548)))
)))
(assert (forall (($generated@@550 T@U) ($generated@@551 T@U) ($generated@@552 T@U) ) (!  (=> (and (and (= (type $generated@@550) ($generated@@335 $generated@@151 $generated@@151)) (= (type $generated@@551) $generated@@70)) (= (type $generated@@552) $generated@@70)) (= ($generated@@138 $generated@@550 ($generated@@437 $generated@@551 $generated@@552)) (forall (($generated@@553 T@U) ) (!  (=> (and (= (type $generated@@553) $generated@@151) ($generated@@0 ($generated@@87 ($generated@@333 $generated@@550) $generated@@553))) (and ($generated@@238 ($generated@@87 ($generated@@412 $generated@@550) $generated@@553) $generated@@552) ($generated@@238 $generated@@553 $generated@@551)))
 :pattern ( ($generated@@87 ($generated@@412 $generated@@550) $generated@@553))
 :pattern ( ($generated@@87 ($generated@@333 $generated@@550) $generated@@553))
))))
 :pattern ( ($generated@@138 $generated@@550 ($generated@@437 $generated@@551 $generated@@552)))
)))
(assert (forall (($generated@@554 T@U) ($generated@@555 T@U) ) (!  (=> (and (= (type $generated@@554) $generated@@70) (= (type $generated@@555) $generated@@151)) (= ($generated@@138 ($generated@@259 $generated@@555) ($generated@@165 $generated@@554)) ($generated@@238 $generated@@555 $generated@@554)))
 :pattern ( ($generated@@138 ($generated@@259 $generated@@555) ($generated@@165 $generated@@554)))
)))
(assert (forall (($generated@@558 T@U) ($generated@@559 T@U) ) (!  (=> (and (= (type $generated@@558) $generated@@151) (= (type $generated@@559) $generated@@151)) (< ($generated@@556 $generated@@558) ($generated@@557 ($generated@@237 $generated@@558 $generated@@559))))
 :pattern ( ($generated@@237 $generated@@558 $generated@@559))
)))
(assert (forall (($generated@@560 T@U) ($generated@@561 T@U) ) (!  (=> (and (= (type $generated@@560) $generated@@151) (= (type $generated@@561) $generated@@151)) (< ($generated@@556 $generated@@561) ($generated@@557 ($generated@@237 $generated@@560 $generated@@561))))
 :pattern ( ($generated@@237 $generated@@560 $generated@@561))
)))
(assert (forall (($generated@@562 T@U) ($generated@@563 T@U) ($generated@@564 T@U) ) (!  (=> (and (and (and (= (type $generated@@562) $generated@@151) (= (type $generated@@563) $generated@@70)) (= (type $generated@@564) $generated@@70)) ($generated@@238 $generated@@562 ($generated@@429 $generated@@563 $generated@@564))) (and (= ($generated@@260 ($generated@@354 ($generated@@317 $generated@@151 $generated@@151) $generated@@562)) $generated@@562) ($generated@@138 ($generated@@354 ($generated@@317 $generated@@151 $generated@@151) $generated@@562) ($generated@@429 $generated@@563 $generated@@564))))
 :pattern ( ($generated@@238 $generated@@562 ($generated@@429 $generated@@563 $generated@@564)))
)))
(assert (forall (($generated@@565 T@U) ($generated@@566 T@U) ($generated@@567 T@U) ) (!  (=> (and (and (and (= (type $generated@@565) $generated@@151) (= (type $generated@@566) $generated@@70)) (= (type $generated@@567) $generated@@70)) ($generated@@238 $generated@@565 ($generated@@437 $generated@@566 $generated@@567))) (and (= ($generated@@260 ($generated@@354 ($generated@@335 $generated@@151 $generated@@151) $generated@@565)) $generated@@565) ($generated@@138 ($generated@@354 ($generated@@335 $generated@@151 $generated@@151) $generated@@565) ($generated@@437 $generated@@566 $generated@@567))))
 :pattern ( ($generated@@238 $generated@@565 ($generated@@437 $generated@@566 $generated@@567)))
)))
(assert (forall (($generated@@568 T@U) ($generated@@569 T@U) ($generated@@570 T@U) ) (!  (=> (and (and (and (= (type $generated@@568) $generated@@70) (= (type $generated@@569) $generated@@70)) (= (type $generated@@570) $generated@@151)) ($generated@@238 $generated@@570 ($generated@@141 $generated@@568 $generated@@569))) (and (= ($generated@@260 ($generated@@354 $generated@@142 $generated@@570)) $generated@@570) ($generated@@138 ($generated@@354 $generated@@142 $generated@@570) ($generated@@141 $generated@@568 $generated@@569))))
 :pattern ( ($generated@@238 $generated@@570 ($generated@@141 $generated@@568 $generated@@569)))
)))
(assert (forall (($generated@@571 T@U) ) (!  (=> (= (type $generated@@571) $generated@@151) (< ($generated@@556 $generated@@571) ($generated@@557 ($generated@@259 $generated@@571))))
 :pattern ( ($generated@@259 $generated@@571))
)))
(assert (forall (($generated@@572 T@U) ($generated@@573 T@U) ($generated@@574 T@U) ) (!  (=> (and (and (and (= (type $generated@@572) $generated@@142) (= (type $generated@@573) $generated@@70)) (= (type $generated@@574) ($generated@@82 $generated@@83 $generated@@84))) (and ($generated@@246 $generated@@574) (and ($generated@@164 $generated@@572) ($generated@@80 $generated@@572 ($generated@@165 $generated@@573) $generated@@574)))) ($generated@@278 ($generated@@297 $generated@@572) $generated@@573 $generated@@574))
 :pattern ( ($generated@@278 ($generated@@297 $generated@@572) $generated@@573 $generated@@574))
)))
(assert (forall (($generated@@575 T@U) ) (! (let (($generated@@576 (type $generated@@575)))
 (not ($generated@@0 ($generated@@87 ($generated@@445 $generated@@576) $generated@@575))))
 :pattern ( (let (($generated@@576 (type $generated@@575)))
($generated@@87 ($generated@@445 $generated@@576) $generated@@575)))
)))
(assert (forall (($generated@@577 T@U) ($generated@@578 T@U) ) (!  (=> (and (= (type $generated@@577) $generated@@70) (= (type $generated@@578) $generated@@70)) (and (= ($generated@@78 ($generated@@141 $generated@@577 $generated@@578)) $generated@@62) (= ($generated@@312 ($generated@@141 $generated@@577 $generated@@578)) $generated@@67)))
 :pattern ( ($generated@@141 $generated@@577 $generated@@578))
)))
(assert (forall (($generated@@579 T@U) ) (!  (=> (= (type $generated@@579) $generated@@142) (= ($generated@@556 ($generated@@260 $generated@@579)) ($generated@@557 $generated@@579)))
 :pattern ( ($generated@@556 ($generated@@260 $generated@@579)))
)))
(assert (forall (($generated@@580 T@U) ) (!  (=> (and (= (type $generated@@580) $generated@@151) ($generated@@238 $generated@@580 ($generated@@81 0))) (and (= ($generated@@260 ($generated@@354 $generated@@2 $generated@@580)) $generated@@580) ($generated@@138 ($generated@@354 ($generated@@82 $generated@@151 $generated@@4) $generated@@580) ($generated@@81 0))))
 :pattern ( ($generated@@238 $generated@@580 ($generated@@81 0)))
)))
(assert (forall (($generated@@581 T@U) ($generated@@582 T@U) ) (!  (=> (and (and (= (type $generated@@581) $generated@@151) (= (type $generated@@582) $generated@@70)) ($generated@@238 $generated@@581 ($generated@@267 $generated@@582))) (and (= ($generated@@260 ($generated@@354 ($generated@@82 $generated@@151 $generated@@4) $generated@@581)) $generated@@581) ($generated@@138 ($generated@@354 ($generated@@82 $generated@@151 $generated@@4) $generated@@581) ($generated@@267 $generated@@582))))
 :pattern ( ($generated@@238 $generated@@581 ($generated@@267 $generated@@582)))
)))
(assert (forall (($generated@@583 T@U) ($generated@@584 T@U) ) (!  (=> (and (and (= (type $generated@@583) $generated@@151) (= (type $generated@@584) $generated@@70)) ($generated@@238 $generated@@583 ($generated@@272 $generated@@584))) (and (= ($generated@@260 ($generated@@354 ($generated@@82 $generated@@151 $generated@@4) $generated@@583)) $generated@@583) ($generated@@138 ($generated@@354 ($generated@@82 $generated@@151 $generated@@4) $generated@@583) ($generated@@272 $generated@@584))))
 :pattern ( ($generated@@238 $generated@@583 ($generated@@272 $generated@@584)))
)))
(assert (forall (($generated@@585 T@U) ($generated@@586 T@U) ) (!  (=> (and (and (= (type $generated@@585) $generated@@151) (= (type $generated@@586) $generated@@70)) ($generated@@238 $generated@@585 ($generated@@159 $generated@@586))) (and (= ($generated@@260 ($generated@@354 ($generated@@82 $generated@@151 $generated@@2) $generated@@585)) $generated@@585) ($generated@@138 ($generated@@354 ($generated@@82 $generated@@151 $generated@@2) $generated@@585) ($generated@@159 $generated@@586))))
 :pattern ( ($generated@@238 $generated@@585 ($generated@@159 $generated@@586)))
)))
(assert (forall (($generated@@587 T@U) ($generated@@588 T@U) ) (!  (=> (and (and (= (type $generated@@587) $generated@@151) (= (type $generated@@588) $generated@@70)) ($generated@@238 $generated@@587 ($generated@@511 $generated@@588))) (and (= ($generated@@260 ($generated@@354 ($generated@@291 $generated@@151) $generated@@587)) $generated@@587) ($generated@@138 ($generated@@354 ($generated@@291 $generated@@151) $generated@@587) ($generated@@511 $generated@@588))))
 :pattern ( ($generated@@238 $generated@@587 ($generated@@511 $generated@@588)))
)))
(assert (forall (($generated@@589 T@U) ($generated@@590 T@U) ) (!  (=> (and (and (= (type $generated@@589) $generated@@70) (= (type $generated@@590) $generated@@151)) ($generated@@238 $generated@@590 ($generated@@165 $generated@@589))) (and (= ($generated@@260 ($generated@@354 $generated@@142 $generated@@590)) $generated@@590) ($generated@@138 ($generated@@354 $generated@@142 $generated@@590) ($generated@@165 $generated@@589))))
 :pattern ( ($generated@@238 $generated@@590 ($generated@@165 $generated@@589)))
)))
(assert  (=> (<= 1 $generated@@256) (forall (($generated@@591 T@U) ) (!  (=> (and (= (type $generated@@591) $generated@@142) (or ($generated@@386 $generated@@591) (and (not (= 1 $generated@@256)) ($generated@@138 $generated@@591 $generated@@245)))) (= ($generated@@387 $generated@@591) ($generated@@0 ($generated@@261 ($generated@@11 true)))))
 :pattern ( ($generated@@387 $generated@@591))
))))
(assert (= ($generated@@78 $generated@@245) $generated@@66))
(assert (= ($generated@@312 $generated@@245) $generated@@69))
(assert (forall (($generated@@592 T@U) ($generated@@593 T@U) ($generated@@594 T@U) ) (!  (=> (and (and (= (type $generated@@592) ($generated@@82 $generated@@151 $generated@@2)) (= (type $generated@@593) $generated@@70)) (= (type $generated@@594) ($generated@@82 $generated@@83 $generated@@84))) (= ($generated@@80 $generated@@592 ($generated@@159 $generated@@593) $generated@@594) (forall (($generated@@595 T@U) ) (!  (=> (and (= (type $generated@@595) $generated@@151) (< 0 ($generated ($generated@@87 $generated@@592 $generated@@595)))) ($generated@@278 $generated@@595 $generated@@593 $generated@@594))
 :pattern ( ($generated@@87 $generated@@592 $generated@@595))
))))
 :pattern ( ($generated@@80 $generated@@592 ($generated@@159 $generated@@593) $generated@@594))
)))
(assert (= $generated@@157 ($generated@@261 $generated@@157)))
(assert  (=> (<= 1 $generated@@256) (forall (($generated@@596 T@U) ) (!  (=> (and (= (type $generated@@596) $generated@@142) (or ($generated@@386 $generated@@596) (and (not (= 1 $generated@@256)) ($generated@@138 $generated@@596 $generated@@245)))) ($generated@@253 $generated@@596 $generated@@157))
 :pattern ( ($generated@@387 $generated@@596))
))))
(assert (forall (($generated@@597 T@U) ($generated@@598 T@U) ($generated@@599 T@U) ) (!  (=> (and (and (and (= (type $generated@@597) $generated@@142) (= (type $generated@@598) $generated@@70)) (= (type $generated@@599) ($generated@@82 $generated@@83 $generated@@84))) (and ($generated@@246 $generated@@599) (and ($generated@@140 $generated@@597) (exists (($generated@@600 T@U) ) (!  (and (= (type $generated@@600) $generated@@70) ($generated@@80 $generated@@597 ($generated@@141 $generated@@598 $generated@@600) $generated@@599))
 :pattern ( ($generated@@80 $generated@@597 ($generated@@141 $generated@@598 $generated@@600) $generated@@599))
))))) ($generated@@278 ($generated@@149 $generated@@597) $generated@@598 $generated@@599))
 :pattern ( ($generated@@278 ($generated@@149 $generated@@597) $generated@@598 $generated@@599))
)))
(assert (forall (($generated@@601 T@U) ($generated@@602 T@U) ($generated@@603 T@U) ) (!  (=> (and (and (and (= (type $generated@@601) $generated@@142) (= (type $generated@@602) $generated@@70)) (= (type $generated@@603) ($generated@@82 $generated@@83 $generated@@84))) (and ($generated@@246 $generated@@603) (and ($generated@@140 $generated@@601) (exists (($generated@@604 T@U) ) (!  (and (= (type $generated@@604) $generated@@70) ($generated@@80 $generated@@601 ($generated@@141 $generated@@604 $generated@@602) $generated@@603))
 :pattern ( ($generated@@80 $generated@@601 ($generated@@141 $generated@@604 $generated@@602) $generated@@603))
))))) ($generated@@278 ($generated@@150 $generated@@601) $generated@@602 $generated@@603))
 :pattern ( ($generated@@278 ($generated@@150 $generated@@601) $generated@@602 $generated@@603))
)))
(assert (forall (($generated@@605 T@U) ($generated@@606 T@U) ) (!  (=> (and (= (type $generated@@605) $generated@@151) (= (type $generated@@606) $generated@@151)) (= ($generated@@237 ($generated@@261 $generated@@605) ($generated@@261 $generated@@606)) ($generated@@261 ($generated@@237 $generated@@605 $generated@@606))))
 :pattern ( ($generated@@237 ($generated@@261 $generated@@605) ($generated@@261 $generated@@606)))
)))
(assert (forall (($generated@@607 T@U) ) (!  (=> (= (type $generated@@607) $generated@@151) (= ($generated@@259 ($generated@@261 $generated@@607)) ($generated@@261 ($generated@@259 $generated@@607))))
 :pattern ( ($generated@@259 ($generated@@261 $generated@@607)))
)))
(assert (forall (($generated@@608 T@U) ) (! (= ($generated@@260 ($generated@@261 $generated@@608)) ($generated@@261 ($generated@@260 $generated@@608)))
 :pattern ( ($generated@@260 ($generated@@261 $generated@@608)))
)))
(assert (forall (($generated@@609 T@U) ) (! (let (($generated@@610 ($generated@@292 (type $generated@@609))))
 (=> (and (= (type $generated@@609) ($generated@@291 $generated@@610)) (= ($generated@@290 $generated@@609) 0)) (= $generated@@609 ($generated@@289 $generated@@610))))
 :pattern ( ($generated@@290 $generated@@609))
)))
(assert (forall (($generated@@611 T@U) ($generated@@612 T@U) ($generated@@613 T@U) ) (! (let (($generated@@614 (type $generated@@612)))
 (=> (and (and (= (type $generated@@611) ($generated@@82 $generated@@614 $generated@@2)) (= (type $generated@@613) $generated@@2)) (<= 0 ($generated $generated@@613))) (= ($generated@@306 ($generated@@88 $generated@@611 $generated@@612 $generated@@613)) (+ (- ($generated@@306 $generated@@611) ($generated ($generated@@87 $generated@@611 $generated@@612))) ($generated $generated@@613)))))
 :pattern ( ($generated@@306 ($generated@@88 $generated@@611 $generated@@612 $generated@@613)))
)))
(assert  (=> (<= 1 $generated@@256) (forall (($generated@@615 T@U) ) (!  (=> (and (= (type $generated@@615) $generated@@142) (or ($generated@@386 ($generated@@261 $generated@@615)) (and (not (= 1 $generated@@256)) ($generated@@138 $generated@@615 $generated@@245)))) (= ($generated@@387 ($generated@@261 $generated@@615)) ($generated@@0 ($generated@@261 ($generated@@11 true)))))
 :weight 3
 :pattern ( ($generated@@387 ($generated@@261 $generated@@615)))
))))
(assert (forall (($generated@@616 T@U) ($generated@@617 T@U) ) (!  (=> (and (= (type $generated@@616) ($generated@@82 $generated@@83 $generated@@84)) (= (type $generated@@617) $generated@@2)) ($generated@@80 $generated@@617 $generated@@46 $generated@@616))
 :pattern ( ($generated@@80 $generated@@617 $generated@@46 $generated@@616))
)))
(assert (forall (($generated@@618 T@U) ($generated@@619 T@U) ) (!  (=> (and (= (type $generated@@618) ($generated@@82 $generated@@83 $generated@@84)) (= (type $generated@@619) $generated@@3)) ($generated@@80 $generated@@619 $generated@@47 $generated@@618))
 :pattern ( ($generated@@80 $generated@@619 $generated@@47 $generated@@618))
)))
(assert (forall (($generated@@620 T@U) ($generated@@621 T@U) ) (!  (=> (and (= (type $generated@@620) ($generated@@82 $generated@@83 $generated@@84)) (= (type $generated@@621) $generated@@4)) ($generated@@80 $generated@@621 $generated@@44 $generated@@620))
 :pattern ( ($generated@@80 $generated@@621 $generated@@44 $generated@@620))
)))
(assert (forall (($generated@@622 T@U) ($generated@@623 T@U) ) (!  (=> (and (= (type $generated@@622) ($generated@@82 $generated@@83 $generated@@84)) (= (type $generated@@623) $generated@@469)) ($generated@@80 $generated@@623 $generated@@45 $generated@@622))
 :pattern ( ($generated@@80 $generated@@623 $generated@@45 $generated@@622))
)))
(assert (forall (($generated@@624 T@U) ($generated@@625 T@U) ) (!  (=> (and (= (type $generated@@624) ($generated@@82 $generated@@83 $generated@@84)) (= (type $generated@@625) $generated@@151)) ($generated@@80 $generated@@625 $generated@@48 $generated@@624))
 :pattern ( ($generated@@80 $generated@@625 $generated@@48 $generated@@624))
)))
(assert  (=> (<= 2 $generated@@256) (forall (($generated@@626 T@U) ) (!  (=> (and (= (type $generated@@626) $generated@@142) (or ($generated@@258 $generated@@626) (and (not (= 2 $generated@@256)) ($generated@@138 $generated@@626 ($generated@@165 $generated@@245))))) (and (and ($generated@@164 $generated@@626) (let (($generated@@627 ($generated@@354 $generated@@142 ($generated@@297 $generated@@626))))
($generated@@386 $generated@@627))) (= ($generated@@257 $generated@@626) (let (($generated@@628 ($generated@@354 $generated@@142 ($generated@@297 $generated@@626))))
($generated@@387 $generated@@628)))))
 :pattern ( ($generated@@257 $generated@@626))
))))
(assert (forall (($generated@@629 T@U) ($generated@@630 T@U) ) (!  (=> (and (= (type $generated@@629) ($generated@@291 $generated@@151)) (= (type $generated@@630) $generated@@70)) (= ($generated@@138 $generated@@629 ($generated@@511 $generated@@630)) (forall (($generated@@631 Int) ) (!  (=> (and (<= 0 $generated@@631) (< $generated@@631 ($generated@@290 $generated@@629))) ($generated@@238 ($generated@@512 $generated@@629 $generated@@631) $generated@@630))
 :pattern ( ($generated@@512 $generated@@629 $generated@@631))
))))
 :pattern ( ($generated@@138 $generated@@629 ($generated@@511 $generated@@630)))
)))
(assert (forall (($generated@@633 T@U) ($generated@@634 Int) ) (!  (=> (= (type $generated@@633) ($generated@@291 $generated@@151)) (=> (and (<= 0 $generated@@634) (< $generated@@634 ($generated@@290 $generated@@633))) (< ($generated@@557 ($generated@@354 $generated@@142 ($generated@@512 $generated@@633 $generated@@634))) ($generated@@632 $generated@@633))))
 :pattern ( ($generated@@557 ($generated@@354 $generated@@142 ($generated@@512 $generated@@633 $generated@@634))))
)))
(assert (forall (($generated@@635 T@U) ($generated@@636 T@U) ($generated@@637 T@U) ) (!  (=> (and (and (and (= (type $generated@@635) ($generated@@317 $generated@@151 $generated@@151)) (= (type $generated@@636) $generated@@70)) (= (type $generated@@637) $generated@@70)) ($generated@@138 $generated@@635 ($generated@@429 $generated@@636 $generated@@637))) (and (and ($generated@@138 ($generated@@315 $generated@@635) ($generated@@267 $generated@@636)) ($generated@@138 ($generated@@362 $generated@@635) ($generated@@267 $generated@@637))) ($generated@@138 ($generated@@403 $generated@@635) ($generated@@267 ($generated@@141 $generated@@636 $generated@@637)))))
 :pattern ( ($generated@@138 $generated@@635 ($generated@@429 $generated@@636 $generated@@637)))
)))
(assert (forall (($generated@@638 T@U) ($generated@@639 T@U) ($generated@@640 T@U) ) (!  (=> (and (and (and (= (type $generated@@638) ($generated@@335 $generated@@151 $generated@@151)) (= (type $generated@@639) $generated@@70)) (= (type $generated@@640) $generated@@70)) ($generated@@138 $generated@@638 ($generated@@437 $generated@@639 $generated@@640))) (and (and ($generated@@138 ($generated@@333 $generated@@638) ($generated@@272 $generated@@639)) ($generated@@138 ($generated@@373 $generated@@638) ($generated@@272 $generated@@640))) ($generated@@138 ($generated@@411 $generated@@638) ($generated@@272 ($generated@@141 $generated@@639 $generated@@640)))))
 :pattern ( ($generated@@138 $generated@@638 ($generated@@437 $generated@@639 $generated@@640)))
)))
(assert (forall (($generated@@641 T@U) ) (!  (=> (= (type $generated@@641) $generated@@2) ($generated@@138 $generated@@641 $generated@@46))
 :pattern ( ($generated@@138 $generated@@641 $generated@@46))
)))
(assert (forall (($generated@@642 T@U) ) (!  (=> (= (type $generated@@642) $generated@@3) ($generated@@138 $generated@@642 $generated@@47))
 :pattern ( ($generated@@138 $generated@@642 $generated@@47))
)))
(assert (forall (($generated@@643 T@U) ) (!  (=> (= (type $generated@@643) $generated@@4) ($generated@@138 $generated@@643 $generated@@44))
 :pattern ( ($generated@@138 $generated@@643 $generated@@44))
)))
(assert (forall (($generated@@644 T@U) ) (!  (=> (= (type $generated@@644) $generated@@469) ($generated@@138 $generated@@644 $generated@@45))
 :pattern ( ($generated@@138 $generated@@644 $generated@@45))
)))
(assert (forall (($generated@@645 T@U) ) (!  (=> (= (type $generated@@645) $generated@@151) ($generated@@138 $generated@@645 $generated@@48))
 :pattern ( ($generated@@138 $generated@@645 $generated@@48))
)))
(push 1)
(declare-fun ControlFlow (Int Int) Int)
(declare-fun $generated@@646 () T@U)
(declare-fun $generated@@647 () T@U)
(declare-fun $generated@@648 () T@U)
(declare-fun $generated@@649 () T@U)
(declare-fun $generated@@650 () T@U)
(declare-fun $generated@@651 () T@U)
(declare-fun $generated@@652 () T@U)
(declare-fun $generated@@653 () T@U)
(declare-fun $generated@@654 (T@U) Bool)
(assert  (and (and (and (and (and (and (and (= (type $generated@@646) $generated@@142) (= (type $generated@@647) $generated@@142)) (= (type $generated@@648) $generated@@142)) (= (type $generated@@649) ($generated@@82 $generated@@83 $generated@@84))) (= (type $generated@@650) $generated@@142)) (= (type $generated@@651) ($generated@@171 $generated@@83 $generated@@4))) (= (type $generated@@652) $generated@@83)) (= (type $generated@@653) ($generated@@171 $generated@@83 $generated@@4))))
(set-option :timeout 0)
(set-option :rlimit 0)
(assert (not
 (=> (= (ControlFlow 0 0) 8) (let (($generated@@655  (=> (= (ControlFlow 0 4) (- 0 3)) ($generated@@250 $generated@@646 ($generated@@259 ($generated@@260 ($generated@@261 $generated@@157)))))))
(let (($generated@@656  (=> (and (= $generated@@646 ($generated@@259 ($generated@@260 $generated@@647))) ($generated@@138 $generated@@647 $generated@@245)) (=> (and (and ($generated@@138 $generated@@648 $generated@@245) ($generated@@80 $generated@@648 $generated@@245 $generated@@649)) (= $generated@@650 $generated@@647)) (=> (and (and (and ($generated@@138 $generated@@650 $generated@@245) (= $generated@@648 $generated@@650)) (and ($generated@@80 $generated@@648 $generated@@245 $generated@@649) ($generated@@386 $generated@@648))) (and (and (= ($generated@@257 $generated@@646) ($generated@@387 $generated@@648)) ($generated@@386 $generated@@648)) (and ($generated@@138 ($generated@@11 ($generated@@257 $generated@@646)) $generated@@44) (= (ControlFlow 0 5) 4)))) $generated@@655)))))
(let (($generated@@657 true))
(let (($generated@@658  (=> (= $generated@@651 ($generated@@225 $generated@@652 $generated@@649 $generated@@60 false)) (and (=> (= (ControlFlow 0 6) 5) $generated@@656) (=> (= (ControlFlow 0 6) 2) $generated@@657)))))
(let (($generated@@659 true))
(let (($generated@@660  (=> (= $generated@@653 ($generated@@170 $generated@@652 $generated@@649 $generated@@60 false)) (and (=> (= (ControlFlow 0 7) 1) $generated@@659) (=> (= (ControlFlow 0 7) 6) $generated@@658)))))
(let (($generated@@661  (=> (and (and (and ($generated@@246 $generated@@649) ($generated@@654 $generated@@649)) ($generated@@138 $generated@@646 ($generated@@165 $generated@@245))) (and (= 2 $generated@@256) (= (ControlFlow 0 8) 7))) $generated@@660)))
$generated@@661))))))))
))
(check-sat)
(pop 1)
; Valid
(get-info :rlimit)
(reset)
(set-option :rlimit 0)
; did a full reset
(reset)
(set-option :print-success false)
(set-info :smt-lib-version 2.6)
(set-option :auto_config false)
(set-option :type_check true)
(set-option :smt.case_split 3)
(set-option :smt.qi.eager_threshold 100)
(set-option :smt.delay_units true)
(set-option :smt.arith.solver 2)
(set-option :smt.mbqi false)
(set-option :model.compact false)
(set-option :model.v2 true)
(set-option :pp.bv_literals false)
; done setting options


(set-info :category "industrial")
(declare-sort |T@U| 0)
(declare-sort |T@T| 0)
(declare-fun real_pow (Real Real) Real)
(declare-fun UOrdering2 (|T@U| |T@U|) Bool)
(declare-fun UOrdering3 (|T@T| |T@U| |T@U|) Bool)
(declare-fun tickleBool (Bool) Bool)
(assert (and (tickleBool true) (tickleBool false)))
(declare-fun $generated (T@U) Int)
(declare-fun $generated@@0 (T@U) Bool)
(declare-fun $generated@@1 (T@T) Int)
(declare-fun $generated@@2 () T@T)
(declare-fun $generated@@3 () T@T)
(declare-fun $generated@@4 () T@T)
(declare-fun $generated@@5 () T@T)
(declare-fun $generated@@6 () T@T)
(declare-fun $generated@@7 () T@T)
(declare-fun $generated@@8 (Int) T@U)
(declare-fun type (T@U) T@T)
(declare-fun $generated@@9 (Real) T@U)
(declare-fun $generated@@10 (T@U) Real)
(declare-fun $generated@@11 (Bool) T@U)
(declare-fun $generated@@12 (RoundingMode) T@U)
(declare-fun $generated@@13 (T@U) RoundingMode)
(declare-fun $generated@@14 (String) T@U)
(declare-fun $generated@@15 (T@U) String)
(declare-fun $generated@@16 ((RegEx String)) T@U)
(declare-fun $generated@@17 (T@U) (RegEx String))
(declare-fun $generated@@44 () T@U)
(declare-fun $generated@@45 () T@U)
(declare-fun $generated@@46 () T@U)
(declare-fun $generated@@47 () T@U)
(declare-fun $generated@@48 () T@U)
(declare-fun $generated@@49 () T@U)
(declare-fun $generated@@50 () T@U)
(declare-fun $generated@@51 () T@U)
(declare-fun $generated@@52 () T@U)
(declare-fun $generated@@53 () T@U)
(declare-fun $generated@@54 () T@U)
(declare-fun $generated@@55 () T@U)
(declare-fun $generated@@56 () T@U)
(declare-fun $generated@@57 () T@U)
(declare-fun $generated@@58 () T@U)
(declare-fun $generated@@59 () T@U)
(declare-fun $generated@@60 () T@U)
(declare-fun $generated@@61 () T@U)
(declare-fun $generated@@62 () T@U)
(declare-fun $generated@@63 () T@U)
(declare-fun $generated@@64 () T@U)
(declare-fun $generated@@65 () T@U)
(declare-fun $generated@@66 () T@U)
(declare-fun $generated@@67 () T@T)
(declare-fun $generated@@68 () T@T)
(declare-fun $generated@@69 (T@T) T@T)
(declare-fun $generated@@70 (T@T) T@T)
(declare-fun $generated@@71 () T@T)
(declare-fun $generated@@72 () T@T)
(declare-fun $generated@@75 (T@U) T@U)
(declare-fun $generated@@77 (T@U T@U T@U) Bool)
(declare-fun $generated@@78 (Int) T@U)
(declare-fun $generated@@79 (T@T T@T) T@T)
(declare-fun $generated@@80 () T@T)
(declare-fun $generated@@81 () T@T)
(declare-fun $generated@@82 (T@T) T@T)
(declare-fun $generated@@83 (T@T) T@T)
(declare-fun $generated@@84 (T@U T@U) T@U)
(declare-fun $generated@@85 (T@U T@U T@U) T@U)
(declare-fun $generated@@86 (T@U T@U) T@U)
(declare-fun $generated@@87 (T@U T@U T@U) T@U)
(declare-fun $generated@@135 (T@U T@U) Bool)
(declare-fun $generated@@137 (T@U) Bool)
(declare-fun $generated@@138 (T@U T@U) T@U)
(declare-fun $generated@@139 () T@T)
(declare-fun $generated@@145 (T@U T@U) Bool)
(declare-fun $generated@@146 (T@U) T@U)
(declare-fun $generated@@147 (T@U) T@U)
(declare-fun $generated@@148 () T@T)
(declare-fun $generated@@153 (T@U) T@U)
(declare-fun $generated@@154 () T@U)
(declare-fun $generated@@156 (T@U) T@U)
(declare-fun $generated@@157 (T@U) Bool)
(declare-fun $generated@@161 (T@U T@U T@U) T@U)
(declare-fun $generated@@162 (T@U T@U T@U Bool) T@U)
(declare-fun $generated@@163 (T@T T@T) T@T)
(declare-fun $generated@@164 (T@T) T@T)
(declare-fun $generated@@165 (T@T) T@T)
(declare-fun $generated@@166 (T@U T@U T@U T@U) T@U)
(declare-fun $generated@@217 (T@U T@U T@U Bool) T@U)
(declare-fun $generated@@229 (T@U T@U) T@U)
(declare-fun $generated@@230 (T@U T@U) Bool)
(declare-fun $generated@@237 () T@U)
(declare-fun $generated@@238 (T@U) Bool)
(declare-fun $generated@@242 (T@U T@U) Bool)
(declare-fun $generated@@245 (T@U) T@U)
(declare-fun $generated@@250 (T@U) T@U)
(declare-fun $generated@@255 (T@U) T@U)
(declare-fun $generated@@259 (T@U T@U T@U) Bool)
(declare-fun $generated@@269 (T@T) T@U)
(declare-fun $generated@@270 (T@U) Int)
(declare-fun $generated@@271 (T@T) T@T)
(declare-fun $generated@@272 (T@T) T@T)
(declare-fun $generated@@277 (T@U) T@U)
(declare-fun $generated@@282 (T@U) Int)
(declare-fun $generated@@283 (T@T) T@U)
(declare-fun $generated@@288 (T@U) T@U)
(declare-fun $generated@@289 (T@T T@T) T@U)
(declare-fun $generated@@290 (T@T T@T) T@T)
(declare-fun $generated@@291 (T@T) T@T)
(declare-fun $generated@@292 (T@T) T@T)
(declare-fun $generated@@306 (T@U) T@U)
(declare-fun $generated@@307 (T@T T@T) T@U)
(declare-fun $generated@@308 (T@T T@T) T@T)
(declare-fun $generated@@309 (T@T) T@T)
(declare-fun $generated@@310 (T@T) T@T)
(declare-fun $generated@@327 (T@T T@U) T@U)
(declare-fun $generated@@335 (T@U) T@U)
(declare-fun $generated@@346 (T@U) T@U)
(declare-fun $generated@@368 (T@U) T@U)
(declare-fun $generated@@369 (T@U) T@U)
(declare-fun $generated@@376 (T@U) T@U)
(declare-fun $generated@@377 (T@U) T@U)
(declare-fun $generated@@394 (T@U T@U) T@U)
(declare-fun $generated@@402 (T@U T@U) T@U)
(declare-fun $generated@@410 (T@T) T@U)
(declare-fun $generated@@434 () T@T)
(declare-fun $generated@@442 (T@U) T@U)
(declare-fun $generated@@446 (T@U) T@U)
(declare-fun $generated@@452 (T@U) T@U)
(declare-fun $generated@@456 (T@U) T@U)
(declare-fun $generated@@464 (T@U) T@U)
(declare-fun $generated@@468 (T@U) T@U)
(declare-fun $generated@@476 (T@U) T@U)
(declare-fun $generated@@477 (T@U Int) T@U)
(declare-fun $generated@@486 (T@U) Int)
(declare-fun $generated@@488 (T@U) T@U)
(declare-fun $generated@@492 (T@U) T@U)
(declare-fun $generated@@496 (T@U) T@U)
(declare-fun $generated@@500 (T@U) T@U)
(declare-fun $generated@@514 (T@U) Int)
(declare-fun $generated@@515 (T@U) Int)
(declare-fun $generated@@531 (T@U) T@U)
(declare-fun $generated@@545 () Int)
(declare-fun $generated@@546 (T@U) Bool)
(declare-fun $generated@@547 (T@U) Bool)
(declare-fun $generated@@585 (T@U) Int)
(assert  (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (= ($generated@@1 $generated@@2) 0) (= ($generated@@1 $generated@@3) 1)) (= ($generated@@1 $generated@@4) 2)) (= ($generated@@1 $generated@@5) 3)) (= ($generated@@1 $generated@@6) 4)) (= ($generated@@1 $generated@@7) 5)) (forall (($generated@@18 Int) ) (! (= ($generated ($generated@@8 $generated@@18)) $generated@@18)
 :pattern ( ($generated@@8 $generated@@18))
))) (forall (($generated@@19 T@U) ) (!  (=> (= (type $generated@@19) $generated@@2) (= ($generated@@8 ($generated $generated@@19)) $generated@@19))
 :pattern ( ($generated $generated@@19))
))) (forall (($generated@@20 Int) ) (! (= (type ($generated@@8 $generated@@20)) $generated@@2)
 :pattern ( ($generated@@8 $generated@@20))
))) (forall (($generated@@21 Real) ) (! (= ($generated@@10 ($generated@@9 $generated@@21)) $generated@@21)
 :pattern ( ($generated@@9 $generated@@21))
))) (forall (($generated@@22 T@U) ) (!  (=> (= (type $generated@@22) $generated@@3) (= ($generated@@9 ($generated@@10 $generated@@22)) $generated@@22))
 :pattern ( ($generated@@10 $generated@@22))
))) (forall (($generated@@23 Real) ) (! (= (type ($generated@@9 $generated@@23)) $generated@@3)
 :pattern ( ($generated@@9 $generated@@23))
))) (forall (($generated@@24 Bool) ) (! (= ($generated@@0 ($generated@@11 $generated@@24)) $generated@@24)
 :pattern ( ($generated@@11 $generated@@24))
))) (forall (($generated@@25 T@U) ) (!  (=> (= (type $generated@@25) $generated@@4) (= ($generated@@11 ($generated@@0 $generated@@25)) $generated@@25))
 :pattern ( ($generated@@0 $generated@@25))
))) (forall (($generated@@26 Bool) ) (! (= (type ($generated@@11 $generated@@26)) $generated@@4)
 :pattern ( ($generated@@11 $generated@@26))
))) (forall (($generated@@27 RoundingMode) ) (! (= ($generated@@13 ($generated@@12 $generated@@27)) $generated@@27)
 :pattern ( ($generated@@12 $generated@@27))
))) (forall (($generated@@28 T@U) ) (!  (=> (= (type $generated@@28) $generated@@5) (= ($generated@@12 ($generated@@13 $generated@@28)) $generated@@28))
 :pattern ( ($generated@@13 $generated@@28))
))) (forall (($generated@@29 RoundingMode) ) (! (= (type ($generated@@12 $generated@@29)) $generated@@5)
 :pattern ( ($generated@@12 $generated@@29))
))) (forall (($generated@@30 String) ) (! (= ($generated@@15 ($generated@@14 $generated@@30)) $generated@@30)
 :pattern ( ($generated@@14 $generated@@30))
))) (forall (($generated@@31 T@U) ) (!  (=> (= (type $generated@@31) $generated@@6) (= ($generated@@14 ($generated@@15 $generated@@31)) $generated@@31))
 :pattern ( ($generated@@15 $generated@@31))
))) (forall (($generated@@32 String) ) (! (= (type ($generated@@14 $generated@@32)) $generated@@6)
 :pattern ( ($generated@@14 $generated@@32))
))) (forall (($generated@@33 (RegEx String)) ) (! (= ($generated@@17 ($generated@@16 $generated@@33)) $generated@@33)
 :pattern ( ($generated@@16 $generated@@33))
))) (forall (($generated@@34 T@U) ) (!  (=> (= (type $generated@@34) $generated@@7) (= ($generated@@16 ($generated@@17 $generated@@34)) $generated@@34))
 :pattern ( ($generated@@17 $generated@@34))
))) (forall (($generated@@35 (RegEx String)) ) (! (= (type ($generated@@16 $generated@@35)) $generated@@7)
 :pattern ( ($generated@@16 $generated@@35))
))))
(assert (forall (($generated@@36 T@U) ) (! (UOrdering2 $generated@@36 $generated@@36)
 :no-pattern ($generated $generated@@36)
 :no-pattern ($generated@@0 $generated@@36)
)))
(assert (forall (($generated@@37 T@U) ($generated@@38 T@U) ($generated@@39 T@U) ) (! (let (($generated@@40 (type $generated@@37)))
 (=> (and (and (= (type $generated@@38) $generated@@40) (= (type $generated@@39) $generated@@40)) (and (UOrdering2 $generated@@37 $generated@@38) (UOrdering2 $generated@@38 $generated@@39))) (UOrdering2 $generated@@37 $generated@@39)))
 :pattern ( (UOrdering2 $generated@@37 $generated@@38) (UOrdering2 $generated@@38 $generated@@39))
)))
(assert (forall (($generated@@41 T@U) ($generated@@42 T@U) ) (! (let (($generated@@43 (type $generated@@41)))
 (=> (= (type $generated@@42) $generated@@43) (=> (and (UOrdering2 $generated@@41 $generated@@42) (UOrdering2 $generated@@42 $generated@@41)) (= $generated@@41 $generated@@42))))
 :pattern ( (UOrdering2 $generated@@41 $generated@@42) (UOrdering2 $generated@@42 $generated@@41))
)))
(assert  (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (= ($generated@@1 $generated@@67) 6) (= (type $generated@@44) $generated@@67)) (= (type $generated@@45) $generated@@67)) (= (type $generated@@46) $generated@@67)) (= (type $generated@@47) $generated@@67)) (= (type $generated@@48) $generated@@67)) (= ($generated@@1 $generated@@68) 7)) (= (type $generated@@49) $generated@@68)) (= (type $generated@@50) $generated@@68)) (= (type $generated@@51) $generated@@68)) (= (type $generated@@52) $generated@@68)) (= (type $generated@@53) $generated@@68)) (= (type $generated@@54) $generated@@68)) (= (type $generated@@55) $generated@@68)) (= (type $generated@@56) $generated@@68)) (= (type $generated@@57) $generated@@68)) (= (type $generated@@58) $generated@@68)) (= (type $generated@@59) $generated@@68)) (forall (($generated@@73 T@T) ) (= ($generated@@1 ($generated@@69 $generated@@73)) 8))) (forall (($generated@@74 T@T) ) (! (= ($generated@@70 ($generated@@69 $generated@@74)) $generated@@74)
 :pattern ( ($generated@@69 $generated@@74))
))) (= (type $generated@@60) ($generated@@69 $generated@@4))) (= ($generated@@1 $generated@@71) 9)) (= (type $generated@@61) $generated@@71)) (= (type $generated@@62) $generated@@68)) (= (type $generated@@63) $generated@@71)) (= (type $generated@@64) $generated@@68)) (= ($generated@@1 $generated@@72) 10)) (= (type $generated@@65) $generated@@72)) (= (type $generated@@66) $generated@@72)))
(assert (distinct $generated@@44 $generated@@45 $generated@@46 $generated@@47 $generated@@48 $generated@@49 $generated@@50 $generated@@51 $generated@@52 $generated@@53 $generated@@54 $generated@@55 $generated@@56 $generated@@57 $generated@@58 $generated@@59 $generated@@60 $generated@@61 $generated@@62 $generated@@63 $generated@@64 $generated@@65 $generated@@66)
)
(assert (forall (($generated@@76 T@U) ) (! (= (type ($generated@@75 $generated@@76)) $generated@@68)
 :pattern ( ($generated@@75 $generated@@76))
)))
(assert (= ($generated@@75 $generated@@44) $generated@@49))
(assert (= ($generated@@75 $generated@@45) $generated@@50))
(assert (= ($generated@@75 $generated@@46) $generated@@51))
(assert (= ($generated@@75 $generated@@47) $generated@@52))
(assert (= ($generated@@75 $generated@@48) $generated@@53))
(assert  (and (and (and (and (and (and (and (and (and (and (and (and (and (forall (($generated@@88 T@T) ($generated@@89 T@T) ) (= ($generated@@1 ($generated@@79 $generated@@88 $generated@@89)) 11)) (forall (($generated@@90 T@T) ($generated@@91 T@T) ) (! (= ($generated@@82 ($generated@@79 $generated@@90 $generated@@91)) $generated@@90)
 :pattern ( ($generated@@79 $generated@@90 $generated@@91))
))) (forall (($generated@@92 T@T) ($generated@@93 T@T) ) (! (= ($generated@@83 ($generated@@79 $generated@@92 $generated@@93)) $generated@@93)
 :pattern ( ($generated@@79 $generated@@92 $generated@@93))
))) (forall (($generated@@94 T@U) ($generated@@95 T@U) ) (! (let (($generated@@96 ($generated@@83 (type $generated@@94))))
(= (type ($generated@@84 $generated@@94 $generated@@95)) $generated@@96))
 :pattern ( ($generated@@84 $generated@@94 $generated@@95))
))) (forall (($generated@@97 T@U) ($generated@@98 T@U) ($generated@@99 T@U) ) (! (let (($generated@@100 (type $generated@@99)))
(let (($generated@@101 (type $generated@@98)))
(= (type ($generated@@85 $generated@@97 $generated@@98 $generated@@99)) ($generated@@79 $generated@@101 $generated@@100))))
 :pattern ( ($generated@@85 $generated@@97 $generated@@98 $generated@@99))
))) (forall (($generated@@102 T@U) ($generated@@103 T@U) ($generated@@104 T@U) ) (! (let (($generated@@105 ($generated@@83 (type $generated@@102))))
 (=> (= (type $generated@@104) $generated@@105) (= ($generated@@84 ($generated@@85 $generated@@102 $generated@@103 $generated@@104) $generated@@103) $generated@@104)))
 :weight 0
))) (and (forall (($generated@@106 T@U) ($generated@@107 T@U) ($generated@@108 T@U) ($generated@@109 T@U) ) (!  (or (= $generated@@108 $generated@@109) (= ($generated@@84 ($generated@@85 $generated@@107 $generated@@108 $generated@@106) $generated@@109) ($generated@@84 $generated@@107 $generated@@109)))
 :weight 0
)) (forall (($generated@@110 T@U) ($generated@@111 T@U) ($generated@@112 T@U) ($generated@@113 T@U) ) (!  (or true (= ($generated@@84 ($generated@@85 $generated@@111 $generated@@112 $generated@@110) $generated@@113) ($generated@@84 $generated@@111 $generated@@113)))
 :weight 0
)))) (= ($generated@@1 $generated@@80) 12)) (forall (($generated@@114 T@U) ($generated@@115 T@U) ) (! (let (($generated@@116 ($generated@@70 (type $generated@@115))))
(= (type ($generated@@86 $generated@@114 $generated@@115)) $generated@@116))
 :pattern ( ($generated@@86 $generated@@114 $generated@@115))
))) (= ($generated@@1 $generated@@81) 13)) (forall (($generated@@117 T@U) ($generated@@118 T@U) ($generated@@119 T@U) ) (! (= (type ($generated@@87 $generated@@117 $generated@@118 $generated@@119)) $generated@@81)
 :pattern ( ($generated@@87 $generated@@117 $generated@@118 $generated@@119))
))) (forall (($generated@@120 T@U) ($generated@@121 T@U) ($generated@@122 T@U) ) (! (let (($generated@@123 ($generated@@70 (type $generated@@121))))
 (=> (= (type $generated@@122) $generated@@123) (= ($generated@@86 ($generated@@87 $generated@@120 $generated@@121 $generated@@122) $generated@@121) $generated@@122)))
 :weight 0
))) (and (forall (($generated@@124 T@U) ($generated@@125 T@U) ($generated@@126 T@U) ($generated@@127 T@U) ) (!  (or (= $generated@@126 $generated@@127) (= ($generated@@86 ($generated@@87 $generated@@125 $generated@@126 $generated@@124) $generated@@127) ($generated@@86 $generated@@125 $generated@@127)))
 :weight 0
)) (forall (($generated@@128 T@U) ($generated@@129 T@U) ($generated@@130 T@U) ($generated@@131 T@U) ) (!  (or true (= ($generated@@86 ($generated@@87 $generated@@129 $generated@@130 $generated@@128) $generated@@131) ($generated@@86 $generated@@129 $generated@@131)))
 :weight 0
)))) (forall (($generated@@132 Int) ) (! (= (type ($generated@@78 $generated@@132)) $generated@@67)
 :pattern ( ($generated@@78 $generated@@132))
))))
(assert (forall (($generated@@133 T@U) ($generated@@134 T@U) ) (!  (=> (and (= (type $generated@@133) $generated@@2) (= (type $generated@@134) ($generated@@79 $generated@@80 $generated@@81))) ($generated@@77 $generated@@133 ($generated@@78 0) $generated@@134))
 :pattern ( ($generated@@77 $generated@@133 ($generated@@78 0) $generated@@134))
)))
(assert (forall (($generated@@136 T@U) ) (!  (=> (= (type $generated@@136) $generated@@2) ($generated@@135 $generated@@136 ($generated@@78 0)))
 :pattern ( ($generated@@135 $generated@@136 ($generated@@78 0)))
)))
(assert  (and (= ($generated@@1 $generated@@139) 14) (forall (($generated@@140 T@U) ($generated@@141 T@U) ) (! (= (type ($generated@@138 $generated@@140 $generated@@141)) $generated@@67)
 :pattern ( ($generated@@138 $generated@@140 $generated@@141))
))))
(assert (forall (($generated@@142 T@U) ($generated@@143 T@U) ($generated@@144 T@U) ) (!  (=> (and (and (and (= (type $generated@@142) $generated@@67) (= (type $generated@@143) $generated@@67)) (= (type $generated@@144) $generated@@139)) ($generated@@135 $generated@@144 ($generated@@138 $generated@@142 $generated@@143))) ($generated@@137 $generated@@144))
 :pattern ( ($generated@@137 $generated@@144) ($generated@@135 $generated@@144 ($generated@@138 $generated@@142 $generated@@143)))
)))
(assert  (and (and (= ($generated@@1 $generated@@148) 15) (forall (($generated@@149 T@U) ) (! (= (type ($generated@@146 $generated@@149)) $generated@@148)
 :pattern ( ($generated@@146 $generated@@149))
))) (forall (($generated@@150 T@U) ) (! (= (type ($generated@@147 $generated@@150)) $generated@@148)
 :pattern ( ($generated@@147 $generated@@150))
))))
(assert (forall (($generated@@151 T@U) ($generated@@152 T@U) ) (!  (=> (and (and (= (type $generated@@151) $generated@@139) (= (type $generated@@152) $generated@@139)) true) (= ($generated@@145 $generated@@151 $generated@@152)  (and (= ($generated@@146 $generated@@151) ($generated@@146 $generated@@152)) (= ($generated@@147 $generated@@151) ($generated@@147 $generated@@152)))))
 :pattern ( ($generated@@145 $generated@@151 $generated@@152))
)))
(assert  (and (forall (($generated@@155 T@U) ) (! (= (type ($generated@@153 $generated@@155)) $generated@@71)
 :pattern ( ($generated@@153 $generated@@155))
)) (= (type $generated@@154) $generated@@139)))
(assert (= ($generated@@153 $generated@@154) $generated@@63))
(assert (forall (($generated@@158 T@U) ) (! (= (type ($generated@@156 $generated@@158)) $generated@@67)
 :pattern ( ($generated@@156 $generated@@158))
)))
(assert (forall (($generated@@159 T@U) ($generated@@160 T@U) ) (!  (=> (and (and (= (type $generated@@159) ($generated@@79 $generated@@148 $generated@@2)) (= (type $generated@@160) $generated@@67)) ($generated@@135 $generated@@159 ($generated@@156 $generated@@160))) ($generated@@157 $generated@@159))
 :pattern ( ($generated@@135 $generated@@159 ($generated@@156 $generated@@160)))
)))
(assert  (and (and (and (and (and (and (and (forall (($generated@@167 T@T) ($generated@@168 T@T) ) (= ($generated@@1 ($generated@@163 $generated@@167 $generated@@168)) 16)) (forall (($generated@@169 T@T) ($generated@@170 T@T) ) (! (= ($generated@@164 ($generated@@163 $generated@@169 $generated@@170)) $generated@@169)
 :pattern ( ($generated@@163 $generated@@169 $generated@@170))
))) (forall (($generated@@171 T@T) ($generated@@172 T@T) ) (! (= ($generated@@165 ($generated@@163 $generated@@171 $generated@@172)) $generated@@172)
 :pattern ( ($generated@@163 $generated@@171 $generated@@172))
))) (forall (($generated@@173 T@U) ($generated@@174 T@U) ($generated@@175 T@U) ) (! (let (($generated@@176 ($generated@@165 (type $generated@@173))))
(= (type ($generated@@161 $generated@@173 $generated@@174 $generated@@175)) $generated@@176))
 :pattern ( ($generated@@161 $generated@@173 $generated@@174 $generated@@175))
))) (forall (($generated@@177 T@U) ($generated@@178 T@U) ($generated@@179 T@U) ($generated@@180 T@U) ) (! (let (($generated@@181 (type $generated@@180)))
(let (($generated@@182 (type $generated@@178)))
(= (type ($generated@@166 $generated@@177 $generated@@178 $generated@@179 $generated@@180)) ($generated@@163 $generated@@182 $generated@@181))))
 :pattern ( ($generated@@166 $generated@@177 $generated@@178 $generated@@179 $generated@@180))
))) (forall (($generated@@183 T@U) ($generated@@184 T@U) ($generated@@185 T@U) ($generated@@186 T@U) ) (! (let (($generated@@187 ($generated@@165 (type $generated@@183))))
 (=> (= (type $generated@@186) $generated@@187) (= ($generated@@161 ($generated@@166 $generated@@183 $generated@@184 $generated@@185 $generated@@186) $generated@@184 $generated@@185) $generated@@186)))
 :weight 0
))) (and (and (forall (($generated@@188 T@U) ($generated@@189 T@U) ($generated@@190 T@U) ($generated@@191 T@U) ($generated@@192 T@U) ($generated@@193 T@U) ) (!  (or (= $generated@@190 $generated@@192) (= ($generated@@161 ($generated@@166 $generated@@189 $generated@@190 $generated@@191 $generated@@188) $generated@@192 $generated@@193) ($generated@@161 $generated@@189 $generated@@192 $generated@@193)))
 :weight 0
)) (forall (($generated@@194 T@U) ($generated@@195 T@U) ($generated@@196 T@U) ($generated@@197 T@U) ($generated@@198 T@U) ($generated@@199 T@U) ) (!  (or (= $generated@@197 $generated@@199) (= ($generated@@161 ($generated@@166 $generated@@195 $generated@@196 $generated@@197 $generated@@194) $generated@@198 $generated@@199) ($generated@@161 $generated@@195 $generated@@198 $generated@@199)))
 :weight 0
))) (forall (($generated@@200 T@U) ($generated@@201 T@U) ($generated@@202 T@U) ($generated@@203 T@U) ($generated@@204 T@U) ($generated@@205 T@U) ) (!  (or true (= ($generated@@161 ($generated@@166 $generated@@201 $generated@@202 $generated@@203 $generated@@200) $generated@@204 $generated@@205) ($generated@@161 $generated@@201 $generated@@204 $generated@@205)))
 :weight 0
)))) (forall (($generated@@206 T@U) ($generated@@207 T@U) ($generated@@208 T@U) ($generated@@209 Bool) ) (! (= (type ($generated@@162 $generated@@206 $generated@@207 $generated@@208 $generated@@209)) ($generated@@163 $generated@@80 $generated@@4))
 :pattern ( ($generated@@162 $generated@@206 $generated@@207 $generated@@208 $generated@@209))
))))
(assert (forall (($generated@@210 T@U) ($generated@@211 T@U) ($generated@@212 T@U) ($generated@@213 Bool) ($generated@@214 T@U) ($generated@@215 T@U) ) (! (let (($generated@@216 ($generated@@70 (type $generated@@215))))
 (=> (and (and (and (and (= (type $generated@@210) $generated@@80) (= (type $generated@@211) ($generated@@79 $generated@@80 $generated@@81))) (= (type $generated@@212) ($generated@@69 $generated@@4))) (= (type $generated@@214) $generated@@80)) (= (type $generated@@215) ($generated@@69 $generated@@216))) (= ($generated@@0 ($generated@@161 ($generated@@162 $generated@@210 $generated@@211 $generated@@212 $generated@@213) $generated@@214 $generated@@215))  (=> (and (not (= $generated@@214 $generated@@210)) ($generated@@0 ($generated@@86 ($generated@@84 $generated@@211 $generated@@214) $generated@@212))) $generated@@213))))
 :pattern ( ($generated@@161 ($generated@@162 $generated@@210 $generated@@211 $generated@@212 $generated@@213) $generated@@214 $generated@@215))
)))
(assert (forall (($generated@@218 T@U) ($generated@@219 T@U) ($generated@@220 T@U) ($generated@@221 Bool) ) (! (= (type ($generated@@217 $generated@@218 $generated@@219 $generated@@220 $generated@@221)) ($generated@@163 $generated@@80 $generated@@4))
 :pattern ( ($generated@@217 $generated@@218 $generated@@219 $generated@@220 $generated@@221))
)))
(assert (forall (($generated@@222 T@U) ($generated@@223 T@U) ($generated@@224 T@U) ($generated@@225 Bool) ($generated@@226 T@U) ($generated@@227 T@U) ) (! (let (($generated@@228 ($generated@@70 (type $generated@@227))))
 (=> (and (and (and (and (= (type $generated@@222) $generated@@80) (= (type $generated@@223) ($generated@@79 $generated@@80 $generated@@81))) (= (type $generated@@224) ($generated@@69 $generated@@4))) (= (type $generated@@226) $generated@@80)) (= (type $generated@@227) ($generated@@69 $generated@@228))) (= ($generated@@0 ($generated@@161 ($generated@@217 $generated@@222 $generated@@223 $generated@@224 $generated@@225) $generated@@226 $generated@@227))  (=> (and (not (= $generated@@226 $generated@@222)) ($generated@@0 ($generated@@86 ($generated@@84 $generated@@223 $generated@@226) $generated@@224))) $generated@@225))))
 :pattern ( ($generated@@161 ($generated@@217 $generated@@222 $generated@@223 $generated@@224 $generated@@225) $generated@@226 $generated@@227))
)))
(assert (forall (($generated@@231 T@U) ($generated@@232 T@U) ) (! (= (type ($generated@@229 $generated@@231 $generated@@232)) $generated@@139)
 :pattern ( ($generated@@229 $generated@@231 $generated@@232))
)))
(assert (forall (($generated@@233 T@U) ($generated@@234 T@U) ($generated@@235 T@U) ($generated@@236 T@U) ) (!  (=> (and (and (and (= (type $generated@@233) $generated@@67) (= (type $generated@@234) $generated@@67)) (= (type $generated@@235) $generated@@148)) (= (type $generated@@236) $generated@@148)) (= ($generated@@135 ($generated@@229 $generated@@235 $generated@@236) ($generated@@138 $generated@@233 $generated@@234))  (and ($generated@@230 $generated@@235 $generated@@233) ($generated@@230 $generated@@236 $generated@@234))))
 :pattern ( ($generated@@135 ($generated@@229 $generated@@235 $generated@@236) ($generated@@138 $generated@@233 $generated@@234)))
)))
(assert (= (type $generated@@237) $generated@@67))
(assert ($generated@@135 $generated@@154 $generated@@237))
(assert (forall (($generated@@239 T@U) ) (!  (=> (and (= (type $generated@@239) ($generated@@79 $generated@@80 $generated@@81)) ($generated@@238 $generated@@239)) ($generated@@77 $generated@@154 $generated@@237 $generated@@239))
 :pattern ( ($generated@@77 $generated@@154 $generated@@237 $generated@@239))
)))
(assert (forall (($generated@@240 T@U) ($generated@@241 T@U) ) (!  (=> (and (= (type $generated@@240) $generated@@139) (= (type $generated@@241) $generated@@139)) (= ($generated@@145 $generated@@240 $generated@@241) (= $generated@@240 $generated@@241)))
 :pattern ( ($generated@@145 $generated@@240 $generated@@241))
)))
(assert (forall (($generated@@243 T@U) ($generated@@244 T@U) ) (!  (=> (and (= (type $generated@@243) $generated@@139) (= (type $generated@@244) $generated@@139)) (= ($generated@@242 $generated@@243 $generated@@244) (= $generated@@243 $generated@@244)))
 :pattern ( ($generated@@242 $generated@@243 $generated@@244))
)))
(assert (forall (($generated@@246 T@U) ) (! (= (type ($generated@@245 $generated@@246)) $generated@@67)
 :pattern ( ($generated@@245 $generated@@246))
)))
(assert (forall (($generated@@247 T@U) ($generated@@248 T@U) ) (!  (=> (and (= (type $generated@@247) ($generated@@79 $generated@@148 $generated@@4)) (= (type $generated@@248) $generated@@67)) (= ($generated@@135 $generated@@247 ($generated@@245 $generated@@248)) (forall (($generated@@249 T@U) ) (!  (=> (and (= (type $generated@@249) $generated@@148) ($generated@@0 ($generated@@84 $generated@@247 $generated@@249))) ($generated@@230 $generated@@249 $generated@@248))
 :pattern ( ($generated@@84 $generated@@247 $generated@@249))
))))
 :pattern ( ($generated@@135 $generated@@247 ($generated@@245 $generated@@248)))
)))
(assert (forall (($generated@@251 T@U) ) (! (= (type ($generated@@250 $generated@@251)) $generated@@67)
 :pattern ( ($generated@@250 $generated@@251))
)))
(assert (forall (($generated@@252 T@U) ($generated@@253 T@U) ) (!  (=> (and (= (type $generated@@252) ($generated@@79 $generated@@148 $generated@@4)) (= (type $generated@@253) $generated@@67)) (= ($generated@@135 $generated@@252 ($generated@@250 $generated@@253)) (forall (($generated@@254 T@U) ) (!  (=> (and (= (type $generated@@254) $generated@@148) ($generated@@0 ($generated@@84 $generated@@252 $generated@@254))) ($generated@@230 $generated@@254 $generated@@253))
 :pattern ( ($generated@@84 $generated@@252 $generated@@254))
))))
 :pattern ( ($generated@@135 $generated@@252 ($generated@@250 $generated@@253)))
)))
(assert (forall (($generated@@256 T@U) ) (! (let (($generated@@257 (type $generated@@256)))
(= (type ($generated@@255 $generated@@256)) $generated@@257))
 :pattern ( ($generated@@255 $generated@@256))
)))
(assert (forall (($generated@@258 T@U) ) (! (= ($generated@@255 $generated@@258) $generated@@258)
 :pattern ( ($generated@@255 $generated@@258))
)))
(assert (forall (($generated@@260 T@U) ($generated@@261 T@U) ($generated@@262 T@U) ($generated@@263 T@U) ($generated@@264 T@U) ) (!  (=> (and (and (and (and (and (= (type $generated@@260) $generated@@67) (= (type $generated@@261) $generated@@67)) (= (type $generated@@262) $generated@@148)) (= (type $generated@@263) $generated@@148)) (= (type $generated@@264) ($generated@@79 $generated@@80 $generated@@81))) ($generated@@238 $generated@@264)) (= ($generated@@77 ($generated@@229 $generated@@262 $generated@@263) ($generated@@138 $generated@@260 $generated@@261) $generated@@264)  (and ($generated@@259 $generated@@262 $generated@@260 $generated@@264) ($generated@@259 $generated@@263 $generated@@261 $generated@@264))))
 :pattern ( ($generated@@77 ($generated@@229 $generated@@262 $generated@@263) ($generated@@138 $generated@@260 $generated@@261) $generated@@264))
)))
(assert (forall (($generated@@265 T@U) ) (!  (=> (= (type $generated@@265) $generated@@139) (= ($generated@@137 $generated@@265) (= ($generated@@153 $generated@@265) $generated@@61)))
 :pattern ( ($generated@@137 $generated@@265))
)))
(assert (forall (($generated@@266 T@U) ) (!  (=> (and (= (type $generated@@266) $generated@@139) ($generated@@137 $generated@@266)) (exists (($generated@@267 T@U) ($generated@@268 T@U) ) (!  (and (and (= (type $generated@@267) $generated@@148) (= (type $generated@@268) $generated@@148)) (= $generated@@266 ($generated@@229 $generated@@267 $generated@@268)))
 :no-pattern (type $generated@@267)
 :no-pattern (type $generated@@268)
 :no-pattern ($generated $generated@@267)
 :no-pattern ($generated@@0 $generated@@267)
 :no-pattern ($generated $generated@@268)
 :no-pattern ($generated@@0 $generated@@268)
)))
 :pattern ( ($generated@@137 $generated@@266))
)))
(assert  (and (and (forall (($generated@@273 T@T) ) (= ($generated@@1 ($generated@@271 $generated@@273)) 17)) (forall (($generated@@274 T@T) ) (! (= ($generated@@272 ($generated@@271 $generated@@274)) $generated@@274)
 :pattern ( ($generated@@271 $generated@@274))
))) (forall (($generated@@275 T@T) ) (! (= (type ($generated@@269 $generated@@275)) ($generated@@271 $generated@@275))
 :pattern ( ($generated@@269 $generated@@275))
))))
(assert (forall (($generated@@276 T@T) ) (! (= ($generated@@270 ($generated@@269 $generated@@276)) 0)
 :pattern ( ($generated@@269 $generated@@276))
)))
(assert (forall (($generated@@278 T@U) ) (! (= (type ($generated@@277 $generated@@278)) $generated@@148)
 :pattern ( ($generated@@277 $generated@@278))
)))
(assert (forall (($generated@@279 T@U) ($generated@@280 T@U) ($generated@@281 T@U) ) (!  (=> (and (= (type $generated@@280) $generated@@67) (= (type $generated@@281) ($generated@@79 $generated@@80 $generated@@81))) (= ($generated@@259 ($generated@@277 $generated@@279) $generated@@280 $generated@@281) ($generated@@77 $generated@@279 $generated@@280 $generated@@281)))
 :pattern ( ($generated@@259 ($generated@@277 $generated@@279) $generated@@280 $generated@@281))
)))
(assert (forall (($generated@@284 T@T) ) (! (= (type ($generated@@283 $generated@@284)) ($generated@@79 $generated@@284 $generated@@2))
 :pattern ( ($generated@@283 $generated@@284))
)))
(assert (forall (($generated@@285 T@U) ) (! (let (($generated@@286 ($generated@@82 (type $generated@@285))))
 (=> (= (type $generated@@285) ($generated@@79 $generated@@286 $generated@@2)) (and (= (= ($generated@@282 $generated@@285) 0) (= $generated@@285 ($generated@@283 $generated@@286))) (=> (not (= ($generated@@282 $generated@@285) 0)) (exists (($generated@@287 T@U) ) (!  (and (= (type $generated@@287) $generated@@286) (< 0 ($generated ($generated@@84 $generated@@285 $generated@@287))))
 :no-pattern (type $generated@@287)
 :no-pattern ($generated $generated@@287)
 :no-pattern ($generated@@0 $generated@@287)
))))))
 :pattern ( ($generated@@282 $generated@@285))
)))
(assert  (and (and (and (and (forall (($generated@@293 T@T) ($generated@@294 T@T) ) (= ($generated@@1 ($generated@@290 $generated@@293 $generated@@294)) 18)) (forall (($generated@@295 T@T) ($generated@@296 T@T) ) (! (= ($generated@@291 ($generated@@290 $generated@@295 $generated@@296)) $generated@@295)
 :pattern ( ($generated@@290 $generated@@295 $generated@@296))
))) (forall (($generated@@297 T@T) ($generated@@298 T@T) ) (! (= ($generated@@292 ($generated@@290 $generated@@297 $generated@@298)) $generated@@298)
 :pattern ( ($generated@@290 $generated@@297 $generated@@298))
))) (forall (($generated@@299 T@U) ) (! (let (($generated@@300 ($generated@@291 (type $generated@@299))))
(= (type ($generated@@288 $generated@@299)) ($generated@@79 $generated@@300 $generated@@4)))
 :pattern ( ($generated@@288 $generated@@299))
))) (forall (($generated@@301 T@T) ($generated@@302 T@T) ) (! (= (type ($generated@@289 $generated@@301 $generated@@302)) ($generated@@290 $generated@@301 $generated@@302))
 :pattern ( ($generated@@289 $generated@@301 $generated@@302))
))))
(assert (forall (($generated@@303 T@U) ($generated@@304 T@T) ) (! (let (($generated@@305 (type $generated@@303)))
 (not ($generated@@0 ($generated@@84 ($generated@@288 ($generated@@289 $generated@@305 $generated@@304)) $generated@@303))))
 :pattern ( (let (($generated@@305 (type $generated@@303)))
($generated@@84 ($generated@@288 ($generated@@289 $generated@@305 $generated@@304)) $generated@@303)))
)))
(assert  (and (and (and (and (forall (($generated@@311 T@T) ($generated@@312 T@T) ) (= ($generated@@1 ($generated@@308 $generated@@311 $generated@@312)) 19)) (forall (($generated@@313 T@T) ($generated@@314 T@T) ) (! (= ($generated@@309 ($generated@@308 $generated@@313 $generated@@314)) $generated@@313)
 :pattern ( ($generated@@308 $generated@@313 $generated@@314))
))) (forall (($generated@@315 T@T) ($generated@@316 T@T) ) (! (= ($generated@@310 ($generated@@308 $generated@@315 $generated@@316)) $generated@@316)
 :pattern ( ($generated@@308 $generated@@315 $generated@@316))
))) (forall (($generated@@317 T@U) ) (! (let (($generated@@318 ($generated@@309 (type $generated@@317))))
(= (type ($generated@@306 $generated@@317)) ($generated@@79 $generated@@318 $generated@@4)))
 :pattern ( ($generated@@306 $generated@@317))
))) (forall (($generated@@319 T@T) ($generated@@320 T@T) ) (! (= (type ($generated@@307 $generated@@319 $generated@@320)) ($generated@@308 $generated@@319 $generated@@320))
 :pattern ( ($generated@@307 $generated@@319 $generated@@320))
))))
(assert (forall (($generated@@321 T@U) ($generated@@322 T@T) ) (! (let (($generated@@323 (type $generated@@321)))
 (not ($generated@@0 ($generated@@84 ($generated@@306 ($generated@@307 $generated@@323 $generated@@322)) $generated@@321))))
 :pattern ( (let (($generated@@323 (type $generated@@321)))
($generated@@84 ($generated@@306 ($generated@@307 $generated@@323 $generated@@322)) $generated@@321)))
)))
(assert (forall (($generated@@324 T@U) ) (! (let (($generated@@325 ($generated@@82 (type $generated@@324))))
 (=> (= (type $generated@@324) ($generated@@79 $generated@@325 $generated@@2)) (= ($generated@@157 $generated@@324) (forall (($generated@@326 T@U) ) (!  (=> (= (type $generated@@326) $generated@@325) (and (<= 0 ($generated ($generated@@84 $generated@@324 $generated@@326))) (<= ($generated ($generated@@84 $generated@@324 $generated@@326)) ($generated@@282 $generated@@324))))
 :pattern ( ($generated@@84 $generated@@324 $generated@@326))
)))))
 :pattern ( ($generated@@157 $generated@@324))
)))
(assert (forall (($generated@@328 T@T) ($generated@@329 T@U) ) (! (= (type ($generated@@327 $generated@@328 $generated@@329)) $generated@@328)
 :pattern ( ($generated@@327 $generated@@328 $generated@@329))
)))
(assert (forall (($generated@@330 T@U) ) (!  (=> (and (= (type $generated@@330) $generated@@148) ($generated@@230 $generated@@330 $generated@@237)) (and (= ($generated@@277 ($generated@@327 $generated@@139 $generated@@330)) $generated@@330) ($generated@@135 ($generated@@327 $generated@@139 $generated@@330) $generated@@237)))
 :pattern ( ($generated@@230 $generated@@330 $generated@@237))
)))
(assert (forall (($generated@@331 T@U) ) (! (let (($generated@@332 ($generated@@292 (type $generated@@331))))
(let (($generated@@333 ($generated@@291 (type $generated@@331))))
 (=> (= (type $generated@@331) ($generated@@290 $generated@@333 $generated@@332)) (or (= $generated@@331 ($generated@@289 $generated@@333 $generated@@332)) (exists (($generated@@334 T@U) ) (!  (and (= (type $generated@@334) $generated@@333) ($generated@@0 ($generated@@84 ($generated@@288 $generated@@331) $generated@@334)))
 :no-pattern (type $generated@@334)
 :no-pattern ($generated $generated@@334)
 :no-pattern ($generated@@0 $generated@@334)
))))))
 :pattern ( ($generated@@288 $generated@@331))
)))
(assert (forall (($generated@@336 T@U) ) (! (let (($generated@@337 ($generated@@292 (type $generated@@336))))
(= (type ($generated@@335 $generated@@336)) ($generated@@79 $generated@@337 $generated@@4)))
 :pattern ( ($generated@@335 $generated@@336))
)))
(assert (forall (($generated@@338 T@U) ) (! (let (($generated@@339 ($generated@@292 (type $generated@@338))))
(let (($generated@@340 ($generated@@291 (type $generated@@338))))
 (=> (= (type $generated@@338) ($generated@@290 $generated@@340 $generated@@339)) (or (= $generated@@338 ($generated@@289 $generated@@340 $generated@@339)) (exists (($generated@@341 T@U) ) (!  (and (= (type $generated@@341) $generated@@339) ($generated@@0 ($generated@@84 ($generated@@335 $generated@@338) $generated@@341)))
 :no-pattern (type $generated@@341)
 :no-pattern ($generated $generated@@341)
 :no-pattern ($generated@@0 $generated@@341)
))))))
 :pattern ( ($generated@@335 $generated@@338))
)))
(assert (forall (($generated@@342 T@U) ) (! (let (($generated@@343 ($generated@@310 (type $generated@@342))))
(let (($generated@@344 ($generated@@309 (type $generated@@342))))
 (=> (= (type $generated@@342) ($generated@@308 $generated@@344 $generated@@343)) (or (= $generated@@342 ($generated@@307 $generated@@344 $generated@@343)) (exists (($generated@@345 T@U) ) (!  (and (= (type $generated@@345) $generated@@344) ($generated@@0 ($generated@@84 ($generated@@306 $generated@@342) $generated@@345)))
 :no-pattern (type $generated@@345)
 :no-pattern ($generated $generated@@345)
 :no-pattern ($generated@@0 $generated@@345)
))))))
 :pattern ( ($generated@@306 $generated@@342))
)))
(assert (forall (($generated@@347 T@U) ) (! (let (($generated@@348 ($generated@@310 (type $generated@@347))))
(= (type ($generated@@346 $generated@@347)) ($generated@@79 $generated@@348 $generated@@4)))
 :pattern ( ($generated@@346 $generated@@347))
)))
(assert (forall (($generated@@349 T@U) ) (! (let (($generated@@350 ($generated@@310 (type $generated@@349))))
(let (($generated@@351 ($generated@@309 (type $generated@@349))))
 (=> (= (type $generated@@349) ($generated@@308 $generated@@351 $generated@@350)) (or (= $generated@@349 ($generated@@307 $generated@@351 $generated@@350)) (exists (($generated@@352 T@U) ) (!  (and (= (type $generated@@352) $generated@@350) ($generated@@0 ($generated@@84 ($generated@@346 $generated@@349) $generated@@352)))
 :no-pattern (type $generated@@352)
 :no-pattern ($generated $generated@@352)
 :no-pattern ($generated@@0 $generated@@352)
))))))
 :pattern ( ($generated@@346 $generated@@349))
)))
(assert (forall (($generated@@353 T@U) ($generated@@354 T@U) ) (!  (=> (and (= (type $generated@@353) ($generated@@79 $generated@@148 $generated@@2)) (= (type $generated@@354) $generated@@67)) (= ($generated@@135 $generated@@353 ($generated@@156 $generated@@354)) (forall (($generated@@355 T@U) ) (!  (=> (and (= (type $generated@@355) $generated@@148) (< 0 ($generated ($generated@@84 $generated@@353 $generated@@355)))) ($generated@@230 $generated@@355 $generated@@354))
 :pattern ( ($generated@@84 $generated@@353 $generated@@355))
))))
 :pattern ( ($generated@@135 $generated@@353 ($generated@@156 $generated@@354)))
)))
(assert (forall (($generated@@356 T@U) ($generated@@357 T@U) ) (!  (=> (and (and (= (type $generated@@356) $generated@@139) (= (type $generated@@357) $generated@@139)) true) (= ($generated@@242 $generated@@356 $generated@@357) true))
 :pattern ( ($generated@@242 $generated@@356 $generated@@357))
)))
(assert (forall (($generated@@358 T@U) ($generated@@359 T@U) ($generated@@360 T@U) ) (!  (=> (and (and (= (type $generated@@358) ($generated@@79 $generated@@148 $generated@@4)) (= (type $generated@@359) $generated@@67)) (= (type $generated@@360) ($generated@@79 $generated@@80 $generated@@81))) (= ($generated@@77 $generated@@358 ($generated@@245 $generated@@359) $generated@@360) (forall (($generated@@361 T@U) ) (!  (=> (and (= (type $generated@@361) $generated@@148) ($generated@@0 ($generated@@84 $generated@@358 $generated@@361))) ($generated@@259 $generated@@361 $generated@@359 $generated@@360))
 :pattern ( ($generated@@84 $generated@@358 $generated@@361))
))))
 :pattern ( ($generated@@77 $generated@@358 ($generated@@245 $generated@@359) $generated@@360))
)))
(assert (forall (($generated@@362 T@U) ($generated@@363 T@U) ($generated@@364 T@U) ) (!  (=> (and (and (= (type $generated@@362) ($generated@@79 $generated@@148 $generated@@4)) (= (type $generated@@363) $generated@@67)) (= (type $generated@@364) ($generated@@79 $generated@@80 $generated@@81))) (= ($generated@@77 $generated@@362 ($generated@@250 $generated@@363) $generated@@364) (forall (($generated@@365 T@U) ) (!  (=> (and (= (type $generated@@365) $generated@@148) ($generated@@0 ($generated@@84 $generated@@362 $generated@@365))) ($generated@@259 $generated@@365 $generated@@363 $generated@@364))
 :pattern ( ($generated@@84 $generated@@362 $generated@@365))
))))
 :pattern ( ($generated@@77 $generated@@362 ($generated@@250 $generated@@363) $generated@@364))
)))
(assert (forall (($generated@@366 T@U) ) (! (let (($generated@@367 (type $generated@@366)))
(= ($generated ($generated@@84 ($generated@@283 $generated@@367) $generated@@366)) 0))
 :pattern ( (let (($generated@@367 (type $generated@@366)))
($generated@@84 ($generated@@283 $generated@@367) $generated@@366)))
)))
(assert  (and (forall (($generated@@370 T@U) ) (! (= (type ($generated@@368 $generated@@370)) ($generated@@79 $generated@@148 $generated@@4))
 :pattern ( ($generated@@368 $generated@@370))
)) (forall (($generated@@371 T@U) ) (! (let (($generated@@372 ($generated@@292 (type $generated@@371))))
(let (($generated@@373 ($generated@@291 (type $generated@@371))))
(= (type ($generated@@369 $generated@@371)) ($generated@@79 $generated@@373 $generated@@372))))
 :pattern ( ($generated@@369 $generated@@371))
))))
(assert (forall (($generated@@374 T@U) ($generated@@375 T@U) ) (!  (=> (and (= (type $generated@@374) ($generated@@290 $generated@@148 $generated@@148)) (= (type $generated@@375) $generated@@148)) (= ($generated@@0 ($generated@@84 ($generated@@368 $generated@@374) $generated@@375))  (and ($generated@@0 ($generated@@84 ($generated@@288 $generated@@374) ($generated@@146 ($generated@@327 $generated@@139 $generated@@375)))) (= ($generated@@84 ($generated@@369 $generated@@374) ($generated@@146 ($generated@@327 $generated@@139 $generated@@375))) ($generated@@147 ($generated@@327 $generated@@139 $generated@@375))))))
 :pattern ( ($generated@@84 ($generated@@368 $generated@@374) $generated@@375))
)))
(assert  (and (forall (($generated@@378 T@U) ) (! (= (type ($generated@@376 $generated@@378)) ($generated@@79 $generated@@148 $generated@@4))
 :pattern ( ($generated@@376 $generated@@378))
)) (forall (($generated@@379 T@U) ) (! (let (($generated@@380 ($generated@@310 (type $generated@@379))))
(let (($generated@@381 ($generated@@309 (type $generated@@379))))
(= (type ($generated@@377 $generated@@379)) ($generated@@79 $generated@@381 $generated@@380))))
 :pattern ( ($generated@@377 $generated@@379))
))))
(assert (forall (($generated@@382 T@U) ($generated@@383 T@U) ) (!  (=> (and (= (type $generated@@382) ($generated@@308 $generated@@148 $generated@@148)) (= (type $generated@@383) $generated@@148)) (= ($generated@@0 ($generated@@84 ($generated@@376 $generated@@382) $generated@@383))  (and ($generated@@0 ($generated@@84 ($generated@@306 $generated@@382) ($generated@@146 ($generated@@327 $generated@@139 $generated@@383)))) (= ($generated@@84 ($generated@@377 $generated@@382) ($generated@@146 ($generated@@327 $generated@@139 $generated@@383))) ($generated@@147 ($generated@@327 $generated@@139 $generated@@383))))))
 :pattern ( ($generated@@84 ($generated@@376 $generated@@382) $generated@@383))
)))
(assert (forall (($generated@@384 T@U) ($generated@@385 T@U) ) (! (let (($generated@@386 (type $generated@@385)))
(let (($generated@@387 ($generated@@291 (type $generated@@384))))
 (=> (= (type $generated@@384) ($generated@@290 $generated@@387 $generated@@386)) (= ($generated@@0 ($generated@@84 ($generated@@335 $generated@@384) $generated@@385)) (exists (($generated@@388 T@U) ) (!  (and (= (type $generated@@388) $generated@@387) (and ($generated@@0 ($generated@@84 ($generated@@288 $generated@@384) $generated@@388)) (= $generated@@385 ($generated@@84 ($generated@@369 $generated@@384) $generated@@388))))
 :pattern ( ($generated@@84 ($generated@@288 $generated@@384) $generated@@388))
 :pattern ( ($generated@@84 ($generated@@369 $generated@@384) $generated@@388))
))))))
 :pattern ( ($generated@@84 ($generated@@335 $generated@@384) $generated@@385))
)))
(assert (forall (($generated@@389 T@U) ($generated@@390 T@U) ) (! (let (($generated@@391 (type $generated@@390)))
(let (($generated@@392 ($generated@@309 (type $generated@@389))))
 (=> (= (type $generated@@389) ($generated@@308 $generated@@392 $generated@@391)) (= ($generated@@0 ($generated@@84 ($generated@@346 $generated@@389) $generated@@390)) (exists (($generated@@393 T@U) ) (!  (and (= (type $generated@@393) $generated@@392) (and ($generated@@0 ($generated@@84 ($generated@@306 $generated@@389) $generated@@393)) (= $generated@@390 ($generated@@84 ($generated@@377 $generated@@389) $generated@@393))))
 :pattern ( ($generated@@84 ($generated@@306 $generated@@389) $generated@@393))
 :pattern ( ($generated@@84 ($generated@@377 $generated@@389) $generated@@393))
))))))
 :pattern ( ($generated@@84 ($generated@@346 $generated@@389) $generated@@390))
)))
(assert (forall (($generated@@395 T@U) ($generated@@396 T@U) ) (! (= (type ($generated@@394 $generated@@395 $generated@@396)) $generated@@67)
 :pattern ( ($generated@@394 $generated@@395 $generated@@396))
)))
(assert (forall (($generated@@397 T@U) ($generated@@398 T@U) ($generated@@399 T@U) ($generated@@400 T@U) ) (!  (=> (and (and (and (= (type $generated@@397) ($generated@@290 $generated@@148 $generated@@148)) (= (type $generated@@398) $generated@@67)) (= (type $generated@@399) $generated@@67)) (= (type $generated@@400) ($generated@@79 $generated@@80 $generated@@81))) (= ($generated@@77 $generated@@397 ($generated@@394 $generated@@398 $generated@@399) $generated@@400) (forall (($generated@@401 T@U) ) (!  (=> (and (= (type $generated@@401) $generated@@148) ($generated@@0 ($generated@@84 ($generated@@288 $generated@@397) $generated@@401))) (and ($generated@@259 ($generated@@84 ($generated@@369 $generated@@397) $generated@@401) $generated@@399 $generated@@400) ($generated@@259 $generated@@401 $generated@@398 $generated@@400)))
 :pattern ( ($generated@@84 ($generated@@369 $generated@@397) $generated@@401))
 :pattern ( ($generated@@84 ($generated@@288 $generated@@397) $generated@@401))
))))
 :pattern ( ($generated@@77 $generated@@397 ($generated@@394 $generated@@398 $generated@@399) $generated@@400))
)))
(assert (forall (($generated@@403 T@U) ($generated@@404 T@U) ) (! (= (type ($generated@@402 $generated@@403 $generated@@404)) $generated@@67)
 :pattern ( ($generated@@402 $generated@@403 $generated@@404))
)))
(assert (forall (($generated@@405 T@U) ($generated@@406 T@U) ($generated@@407 T@U) ($generated@@408 T@U) ) (!  (=> (and (and (and (= (type $generated@@405) ($generated@@308 $generated@@148 $generated@@148)) (= (type $generated@@406) $generated@@67)) (= (type $generated@@407) $generated@@67)) (= (type $generated@@408) ($generated@@79 $generated@@80 $generated@@81))) (= ($generated@@77 $generated@@405 ($generated@@402 $generated@@406 $generated@@407) $generated@@408) (forall (($generated@@409 T@U) ) (!  (=> (and (= (type $generated@@409) $generated@@148) ($generated@@0 ($generated@@84 ($generated@@306 $generated@@405) $generated@@409))) (and ($generated@@259 ($generated@@84 ($generated@@377 $generated@@405) $generated@@409) $generated@@407 $generated@@408) ($generated@@259 $generated@@409 $generated@@406 $generated@@408)))
 :pattern ( ($generated@@84 ($generated@@377 $generated@@405) $generated@@409))
 :pattern ( ($generated@@84 ($generated@@306 $generated@@405) $generated@@409))
))))
 :pattern ( ($generated@@77 $generated@@405 ($generated@@402 $generated@@406 $generated@@407) $generated@@408))
)))
(assert (forall (($generated@@411 T@T) ) (! (= (type ($generated@@410 $generated@@411)) ($generated@@79 $generated@@411 $generated@@4))
 :pattern ( ($generated@@410 $generated@@411))
)))
(assert (forall (($generated@@412 T@U) ) (! (let (($generated@@413 ($generated@@310 (type $generated@@412))))
(let (($generated@@414 ($generated@@309 (type $generated@@412))))
 (=> (= (type $generated@@412) ($generated@@308 $generated@@414 $generated@@413)) (= (= $generated@@412 ($generated@@307 $generated@@414 $generated@@413)) (= ($generated@@306 $generated@@412) ($generated@@410 $generated@@414))))))
 :pattern ( ($generated@@306 $generated@@412))
)))
(assert (forall (($generated@@415 T@U) ) (! (let (($generated@@416 ($generated@@310 (type $generated@@415))))
(let (($generated@@417 ($generated@@309 (type $generated@@415))))
 (=> (= (type $generated@@415) ($generated@@308 $generated@@417 $generated@@416)) (= (= $generated@@415 ($generated@@307 $generated@@417 $generated@@416)) (= ($generated@@346 $generated@@415) ($generated@@410 $generated@@416))))))
 :pattern ( ($generated@@346 $generated@@415))
)))
(assert (forall (($generated@@418 T@U) ) (! (let (($generated@@419 ($generated@@310 (type $generated@@418))))
(let (($generated@@420 ($generated@@309 (type $generated@@418))))
 (=> (= (type $generated@@418) ($generated@@308 $generated@@420 $generated@@419)) (= (= $generated@@418 ($generated@@307 $generated@@420 $generated@@419)) (= ($generated@@376 $generated@@418) ($generated@@410 $generated@@148))))))
 :pattern ( ($generated@@376 $generated@@418))
)))
(assert (forall (($generated@@421 T@U) ) (! (let (($generated@@422 ($generated@@292 (type $generated@@421))))
(let (($generated@@423 ($generated@@291 (type $generated@@421))))
 (=> (= (type $generated@@421) ($generated@@290 $generated@@423 $generated@@422)) (or (= $generated@@421 ($generated@@289 $generated@@423 $generated@@422)) (exists (($generated@@424 T@U) ($generated@@425 T@U) ) (!  (and (and (= (type $generated@@424) $generated@@148) (= (type $generated@@425) $generated@@148)) ($generated@@0 ($generated@@84 ($generated@@368 $generated@@421) ($generated@@277 ($generated@@229 $generated@@424 $generated@@425)))))
 :no-pattern (type $generated@@424)
 :no-pattern (type $generated@@425)
 :no-pattern ($generated $generated@@424)
 :no-pattern ($generated@@0 $generated@@424)
 :no-pattern ($generated $generated@@425)
 :no-pattern ($generated@@0 $generated@@425)
))))))
 :pattern ( ($generated@@368 $generated@@421))
)))
(assert (forall (($generated@@426 T@U) ) (! (let (($generated@@427 ($generated@@310 (type $generated@@426))))
(let (($generated@@428 ($generated@@309 (type $generated@@426))))
 (=> (= (type $generated@@426) ($generated@@308 $generated@@428 $generated@@427)) (or (= $generated@@426 ($generated@@307 $generated@@428 $generated@@427)) (exists (($generated@@429 T@U) ($generated@@430 T@U) ) (!  (and (and (= (type $generated@@429) $generated@@148) (= (type $generated@@430) $generated@@148)) ($generated@@0 ($generated@@84 ($generated@@376 $generated@@426) ($generated@@277 ($generated@@229 $generated@@429 $generated@@430)))))
 :no-pattern (type $generated@@429)
 :no-pattern (type $generated@@430)
 :no-pattern ($generated $generated@@429)
 :no-pattern ($generated@@0 $generated@@429)
 :no-pattern ($generated $generated@@430)
 :no-pattern ($generated@@0 $generated@@430)
))))))
 :pattern ( ($generated@@376 $generated@@426))
)))
(assert (forall (($generated@@431 T@U) ) (!  (=> (and (= (type $generated@@431) $generated@@148) ($generated@@230 $generated@@431 $generated@@46)) (and (= ($generated@@277 ($generated@@327 $generated@@2 $generated@@431)) $generated@@431) ($generated@@135 ($generated@@327 $generated@@2 $generated@@431) $generated@@46)))
 :pattern ( ($generated@@230 $generated@@431 $generated@@46))
)))
(assert (forall (($generated@@432 T@U) ) (!  (=> (and (= (type $generated@@432) $generated@@148) ($generated@@230 $generated@@432 $generated@@47)) (and (= ($generated@@277 ($generated@@327 $generated@@3 $generated@@432)) $generated@@432) ($generated@@135 ($generated@@327 $generated@@3 $generated@@432) $generated@@47)))
 :pattern ( ($generated@@230 $generated@@432 $generated@@47))
)))
(assert (forall (($generated@@433 T@U) ) (!  (=> (and (= (type $generated@@433) $generated@@148) ($generated@@230 $generated@@433 $generated@@44)) (and (= ($generated@@277 ($generated@@327 $generated@@4 $generated@@433)) $generated@@433) ($generated@@135 ($generated@@327 $generated@@4 $generated@@433) $generated@@44)))
 :pattern ( ($generated@@230 $generated@@433 $generated@@44))
)))
(assert (= ($generated@@1 $generated@@434) 20))
(assert (forall (($generated@@435 T@U) ) (!  (=> (and (= (type $generated@@435) $generated@@148) ($generated@@230 $generated@@435 $generated@@45)) (and (= ($generated@@277 ($generated@@327 $generated@@434 $generated@@435)) $generated@@435) ($generated@@135 ($generated@@327 $generated@@434 $generated@@435) $generated@@45)))
 :pattern ( ($generated@@230 $generated@@435 $generated@@45))
)))
(assert (forall (($generated@@436 T@U) ($generated@@437 T@U) ) (!  (=> (= (type $generated@@437) $generated@@67) (= ($generated@@230 ($generated@@277 $generated@@436) $generated@@437) ($generated@@135 $generated@@436 $generated@@437)))
 :pattern ( ($generated@@230 ($generated@@277 $generated@@436) $generated@@437))
)))
(assert (forall (($generated@@438 T@U) ) (! (let (($generated@@439 ($generated@@82 (type $generated@@438))))
 (=> (= (type $generated@@438) ($generated@@79 $generated@@439 $generated@@2)) (<= 0 ($generated@@282 $generated@@438))))
 :pattern ( ($generated@@282 $generated@@438))
)))
(assert (forall (($generated@@440 T@U) ) (! (let (($generated@@441 ($generated@@272 (type $generated@@440))))
 (=> (= (type $generated@@440) ($generated@@271 $generated@@441)) (<= 0 ($generated@@270 $generated@@440))))
 :pattern ( ($generated@@270 $generated@@440))
)))
(assert (forall (($generated@@443 T@U) ) (! (= (type ($generated@@442 $generated@@443)) $generated@@67)
 :pattern ( ($generated@@442 $generated@@443))
)))
(assert (forall (($generated@@444 T@U) ($generated@@445 T@U) ) (!  (=> (and (= (type $generated@@444) $generated@@67) (= (type $generated@@445) $generated@@67)) (= ($generated@@442 ($generated@@394 $generated@@444 $generated@@445)) $generated@@444))
 :pattern ( ($generated@@394 $generated@@444 $generated@@445))
)))
(assert (forall (($generated@@447 T@U) ) (! (= (type ($generated@@446 $generated@@447)) $generated@@67)
 :pattern ( ($generated@@446 $generated@@447))
)))
(assert (forall (($generated@@448 T@U) ($generated@@449 T@U) ) (!  (=> (and (= (type $generated@@448) $generated@@67) (= (type $generated@@449) $generated@@67)) (= ($generated@@446 ($generated@@394 $generated@@448 $generated@@449)) $generated@@449))
 :pattern ( ($generated@@394 $generated@@448 $generated@@449))
)))
(assert (forall (($generated@@450 T@U) ($generated@@451 T@U) ) (!  (=> (and (= (type $generated@@450) $generated@@67) (= (type $generated@@451) $generated@@67)) (= ($generated@@75 ($generated@@394 $generated@@450 $generated@@451)) $generated@@58))
 :pattern ( ($generated@@394 $generated@@450 $generated@@451))
)))
(assert (forall (($generated@@453 T@U) ) (! (= (type ($generated@@452 $generated@@453)) $generated@@67)
 :pattern ( ($generated@@452 $generated@@453))
)))
(assert (forall (($generated@@454 T@U) ($generated@@455 T@U) ) (!  (=> (and (= (type $generated@@454) $generated@@67) (= (type $generated@@455) $generated@@67)) (= ($generated@@452 ($generated@@402 $generated@@454 $generated@@455)) $generated@@454))
 :pattern ( ($generated@@402 $generated@@454 $generated@@455))
)))
(assert (forall (($generated@@457 T@U) ) (! (= (type ($generated@@456 $generated@@457)) $generated@@67)
 :pattern ( ($generated@@456 $generated@@457))
)))
(assert (forall (($generated@@458 T@U) ($generated@@459 T@U) ) (!  (=> (and (= (type $generated@@458) $generated@@67) (= (type $generated@@459) $generated@@67)) (= ($generated@@456 ($generated@@402 $generated@@458 $generated@@459)) $generated@@459))
 :pattern ( ($generated@@402 $generated@@458 $generated@@459))
)))
(assert (forall (($generated@@460 T@U) ($generated@@461 T@U) ) (!  (=> (and (= (type $generated@@460) $generated@@67) (= (type $generated@@461) $generated@@67)) (= ($generated@@75 ($generated@@402 $generated@@460 $generated@@461)) $generated@@59))
 :pattern ( ($generated@@402 $generated@@460 $generated@@461))
)))
(assert (forall (($generated@@462 T@U) ($generated@@463 T@U) ) (!  (=> (and (= (type $generated@@462) $generated@@148) (= (type $generated@@463) $generated@@148)) (= ($generated@@153 ($generated@@229 $generated@@462 $generated@@463)) $generated@@61))
 :pattern ( ($generated@@229 $generated@@462 $generated@@463))
)))
(assert (forall (($generated@@465 T@U) ) (! (= (type ($generated@@464 $generated@@465)) $generated@@67)
 :pattern ( ($generated@@464 $generated@@465))
)))
(assert (forall (($generated@@466 T@U) ($generated@@467 T@U) ) (!  (=> (and (= (type $generated@@466) $generated@@67) (= (type $generated@@467) $generated@@67)) (= ($generated@@464 ($generated@@138 $generated@@466 $generated@@467)) $generated@@466))
 :pattern ( ($generated@@138 $generated@@466 $generated@@467))
)))
(assert (forall (($generated@@469 T@U) ) (! (= (type ($generated@@468 $generated@@469)) $generated@@67)
 :pattern ( ($generated@@468 $generated@@469))
)))
(assert (forall (($generated@@470 T@U) ($generated@@471 T@U) ) (!  (=> (and (= (type $generated@@470) $generated@@67) (= (type $generated@@471) $generated@@67)) (= ($generated@@468 ($generated@@138 $generated@@470 $generated@@471)) $generated@@471))
 :pattern ( ($generated@@138 $generated@@470 $generated@@471))
)))
(assert (forall (($generated@@472 T@U) ($generated@@473 T@U) ) (!  (=> (and (= (type $generated@@472) $generated@@148) (= (type $generated@@473) $generated@@148)) (= ($generated@@146 ($generated@@229 $generated@@472 $generated@@473)) $generated@@472))
 :pattern ( ($generated@@229 $generated@@472 $generated@@473))
)))
(assert (forall (($generated@@474 T@U) ($generated@@475 T@U) ) (!  (=> (and (= (type $generated@@474) $generated@@148) (= (type $generated@@475) $generated@@148)) (= ($generated@@147 ($generated@@229 $generated@@474 $generated@@475)) $generated@@475))
 :pattern ( ($generated@@229 $generated@@474 $generated@@475))
)))
(assert  (and (forall (($generated@@478 T@U) ) (! (= (type ($generated@@476 $generated@@478)) $generated@@67)
 :pattern ( ($generated@@476 $generated@@478))
)) (forall (($generated@@479 T@U) ($generated@@480 Int) ) (! (let (($generated@@481 ($generated@@272 (type $generated@@479))))
(= (type ($generated@@477 $generated@@479 $generated@@480)) $generated@@481))
 :pattern ( ($generated@@477 $generated@@479 $generated@@480))
))))
(assert (forall (($generated@@482 T@U) ($generated@@483 T@U) ($generated@@484 T@U) ) (!  (=> (and (and (= (type $generated@@482) ($generated@@271 $generated@@148)) (= (type $generated@@483) $generated@@67)) (= (type $generated@@484) ($generated@@79 $generated@@80 $generated@@81))) (= ($generated@@77 $generated@@482 ($generated@@476 $generated@@483) $generated@@484) (forall (($generated@@485 Int) ) (!  (=> (and (<= 0 $generated@@485) (< $generated@@485 ($generated@@270 $generated@@482))) ($generated@@259 ($generated@@477 $generated@@482 $generated@@485) $generated@@483 $generated@@484))
 :pattern ( ($generated@@477 $generated@@482 $generated@@485))
))))
 :pattern ( ($generated@@77 $generated@@482 ($generated@@476 $generated@@483) $generated@@484))
)))
(assert (forall (($generated@@487 Int) ) (! (= ($generated@@486 ($generated@@78 $generated@@487)) $generated@@487)
 :pattern ( ($generated@@78 $generated@@487))
)))
(assert (forall (($generated@@489 T@U) ) (! (= (type ($generated@@488 $generated@@489)) $generated@@67)
 :pattern ( ($generated@@488 $generated@@489))
)))
(assert (forall (($generated@@490 T@U) ) (!  (=> (= (type $generated@@490) $generated@@67) (= ($generated@@488 ($generated@@245 $generated@@490)) $generated@@490))
 :pattern ( ($generated@@245 $generated@@490))
)))
(assert (forall (($generated@@491 T@U) ) (!  (=> (= (type $generated@@491) $generated@@67) (= ($generated@@75 ($generated@@245 $generated@@491)) $generated@@54))
 :pattern ( ($generated@@245 $generated@@491))
)))
(assert (forall (($generated@@493 T@U) ) (! (= (type ($generated@@492 $generated@@493)) $generated@@67)
 :pattern ( ($generated@@492 $generated@@493))
)))
(assert (forall (($generated@@494 T@U) ) (!  (=> (= (type $generated@@494) $generated@@67) (= ($generated@@492 ($generated@@250 $generated@@494)) $generated@@494))
 :pattern ( ($generated@@250 $generated@@494))
)))
(assert (forall (($generated@@495 T@U) ) (!  (=> (= (type $generated@@495) $generated@@67) (= ($generated@@75 ($generated@@250 $generated@@495)) $generated@@55))
 :pattern ( ($generated@@250 $generated@@495))
)))
(assert (forall (($generated@@497 T@U) ) (! (= (type ($generated@@496 $generated@@497)) $generated@@67)
 :pattern ( ($generated@@496 $generated@@497))
)))
(assert (forall (($generated@@498 T@U) ) (!  (=> (= (type $generated@@498) $generated@@67) (= ($generated@@496 ($generated@@156 $generated@@498)) $generated@@498))
 :pattern ( ($generated@@156 $generated@@498))
)))
(assert (forall (($generated@@499 T@U) ) (!  (=> (= (type $generated@@499) $generated@@67) (= ($generated@@75 ($generated@@156 $generated@@499)) $generated@@56))
 :pattern ( ($generated@@156 $generated@@499))
)))
(assert (forall (($generated@@501 T@U) ) (! (= (type ($generated@@500 $generated@@501)) $generated@@67)
 :pattern ( ($generated@@500 $generated@@501))
)))
(assert (forall (($generated@@502 T@U) ) (!  (=> (= (type $generated@@502) $generated@@67) (= ($generated@@500 ($generated@@476 $generated@@502)) $generated@@502))
 :pattern ( ($generated@@476 $generated@@502))
)))
(assert (forall (($generated@@503 T@U) ) (!  (=> (= (type $generated@@503) $generated@@67) (= ($generated@@75 ($generated@@476 $generated@@503)) $generated@@57))
 :pattern ( ($generated@@476 $generated@@503))
)))
(assert (forall (($generated@@504 T@U) ) (! (let (($generated@@505 (type $generated@@504)))
(= ($generated@@327 $generated@@505 ($generated@@277 $generated@@504)) $generated@@504))
 :pattern ( ($generated@@277 $generated@@504))
)))
(assert (forall (($generated@@506 T@U) ($generated@@507 T@U) ($generated@@508 T@U) ) (!  (=> (and (and (= (type $generated@@506) ($generated@@290 $generated@@148 $generated@@148)) (= (type $generated@@507) $generated@@67)) (= (type $generated@@508) $generated@@67)) (= ($generated@@135 $generated@@506 ($generated@@394 $generated@@507 $generated@@508)) (forall (($generated@@509 T@U) ) (!  (=> (and (= (type $generated@@509) $generated@@148) ($generated@@0 ($generated@@84 ($generated@@288 $generated@@506) $generated@@509))) (and ($generated@@230 ($generated@@84 ($generated@@369 $generated@@506) $generated@@509) $generated@@508) ($generated@@230 $generated@@509 $generated@@507)))
 :pattern ( ($generated@@84 ($generated@@369 $generated@@506) $generated@@509))
 :pattern ( ($generated@@84 ($generated@@288 $generated@@506) $generated@@509))
))))
 :pattern ( ($generated@@135 $generated@@506 ($generated@@394 $generated@@507 $generated@@508)))
)))
(assert (forall (($generated@@510 T@U) ($generated@@511 T@U) ($generated@@512 T@U) ) (!  (=> (and (and (= (type $generated@@510) ($generated@@308 $generated@@148 $generated@@148)) (= (type $generated@@511) $generated@@67)) (= (type $generated@@512) $generated@@67)) (= ($generated@@135 $generated@@510 ($generated@@402 $generated@@511 $generated@@512)) (forall (($generated@@513 T@U) ) (!  (=> (and (= (type $generated@@513) $generated@@148) ($generated@@0 ($generated@@84 ($generated@@306 $generated@@510) $generated@@513))) (and ($generated@@230 ($generated@@84 ($generated@@377 $generated@@510) $generated@@513) $generated@@512) ($generated@@230 $generated@@513 $generated@@511)))
 :pattern ( ($generated@@84 ($generated@@377 $generated@@510) $generated@@513))
 :pattern ( ($generated@@84 ($generated@@306 $generated@@510) $generated@@513))
))))
 :pattern ( ($generated@@135 $generated@@510 ($generated@@402 $generated@@511 $generated@@512)))
)))
(assert (forall (($generated@@516 T@U) ($generated@@517 T@U) ) (!  (=> (and (= (type $generated@@516) $generated@@148) (= (type $generated@@517) $generated@@148)) (< ($generated@@514 $generated@@516) ($generated@@515 ($generated@@229 $generated@@516 $generated@@517))))
 :pattern ( ($generated@@229 $generated@@516 $generated@@517))
)))
(assert (forall (($generated@@518 T@U) ($generated@@519 T@U) ) (!  (=> (and (= (type $generated@@518) $generated@@148) (= (type $generated@@519) $generated@@148)) (< ($generated@@514 $generated@@519) ($generated@@515 ($generated@@229 $generated@@518 $generated@@519))))
 :pattern ( ($generated@@229 $generated@@518 $generated@@519))
)))
(assert (forall (($generated@@520 T@U) ($generated@@521 T@U) ($generated@@522 T@U) ) (!  (=> (and (and (and (= (type $generated@@520) $generated@@148) (= (type $generated@@521) $generated@@67)) (= (type $generated@@522) $generated@@67)) ($generated@@230 $generated@@520 ($generated@@394 $generated@@521 $generated@@522))) (and (= ($generated@@277 ($generated@@327 ($generated@@290 $generated@@148 $generated@@148) $generated@@520)) $generated@@520) ($generated@@135 ($generated@@327 ($generated@@290 $generated@@148 $generated@@148) $generated@@520) ($generated@@394 $generated@@521 $generated@@522))))
 :pattern ( ($generated@@230 $generated@@520 ($generated@@394 $generated@@521 $generated@@522)))
)))
(assert (forall (($generated@@523 T@U) ($generated@@524 T@U) ($generated@@525 T@U) ) (!  (=> (and (and (and (= (type $generated@@523) $generated@@148) (= (type $generated@@524) $generated@@67)) (= (type $generated@@525) $generated@@67)) ($generated@@230 $generated@@523 ($generated@@402 $generated@@524 $generated@@525))) (and (= ($generated@@277 ($generated@@327 ($generated@@308 $generated@@148 $generated@@148) $generated@@523)) $generated@@523) ($generated@@135 ($generated@@327 ($generated@@308 $generated@@148 $generated@@148) $generated@@523) ($generated@@402 $generated@@524 $generated@@525))))
 :pattern ( ($generated@@230 $generated@@523 ($generated@@402 $generated@@524 $generated@@525)))
)))
(assert (forall (($generated@@526 T@U) ($generated@@527 T@U) ($generated@@528 T@U) ) (!  (=> (and (and (and (= (type $generated@@526) $generated@@67) (= (type $generated@@527) $generated@@67)) (= (type $generated@@528) $generated@@148)) ($generated@@230 $generated@@528 ($generated@@138 $generated@@526 $generated@@527))) (and (= ($generated@@277 ($generated@@327 $generated@@139 $generated@@528)) $generated@@528) ($generated@@135 ($generated@@327 $generated@@139 $generated@@528) ($generated@@138 $generated@@526 $generated@@527))))
 :pattern ( ($generated@@230 $generated@@528 ($generated@@138 $generated@@526 $generated@@527)))
)))
(assert (forall (($generated@@529 T@U) ) (! (let (($generated@@530 (type $generated@@529)))
 (not ($generated@@0 ($generated@@84 ($generated@@410 $generated@@530) $generated@@529))))
 :pattern ( (let (($generated@@530 (type $generated@@529)))
($generated@@84 ($generated@@410 $generated@@530) $generated@@529)))
)))
(assert (forall (($generated@@532 T@U) ) (! (= (type ($generated@@531 $generated@@532)) $generated@@72)
 :pattern ( ($generated@@531 $generated@@532))
)))
(assert (forall (($generated@@533 T@U) ($generated@@534 T@U) ) (!  (=> (and (= (type $generated@@533) $generated@@67) (= (type $generated@@534) $generated@@67)) (and (= ($generated@@75 ($generated@@138 $generated@@533 $generated@@534)) $generated@@62) (= ($generated@@531 ($generated@@138 $generated@@533 $generated@@534)) $generated@@65)))
 :pattern ( ($generated@@138 $generated@@533 $generated@@534))
)))
(assert (forall (($generated@@535 T@U) ) (!  (=> (= (type $generated@@535) $generated@@139) (= ($generated@@514 ($generated@@277 $generated@@535)) ($generated@@515 $generated@@535)))
 :pattern ( ($generated@@514 ($generated@@277 $generated@@535)))
)))
(assert (forall (($generated@@536 T@U) ) (!  (=> (and (= (type $generated@@536) $generated@@148) ($generated@@230 $generated@@536 ($generated@@78 0))) (and (= ($generated@@277 ($generated@@327 $generated@@2 $generated@@536)) $generated@@536) ($generated@@135 ($generated@@327 ($generated@@79 $generated@@148 $generated@@4) $generated@@536) ($generated@@78 0))))
 :pattern ( ($generated@@230 $generated@@536 ($generated@@78 0)))
)))
(assert (forall (($generated@@537 T@U) ($generated@@538 T@U) ) (!  (=> (and (and (= (type $generated@@537) $generated@@148) (= (type $generated@@538) $generated@@67)) ($generated@@230 $generated@@537 ($generated@@245 $generated@@538))) (and (= ($generated@@277 ($generated@@327 ($generated@@79 $generated@@148 $generated@@4) $generated@@537)) $generated@@537) ($generated@@135 ($generated@@327 ($generated@@79 $generated@@148 $generated@@4) $generated@@537) ($generated@@245 $generated@@538))))
 :pattern ( ($generated@@230 $generated@@537 ($generated@@245 $generated@@538)))
)))
(assert (forall (($generated@@539 T@U) ($generated@@540 T@U) ) (!  (=> (and (and (= (type $generated@@539) $generated@@148) (= (type $generated@@540) $generated@@67)) ($generated@@230 $generated@@539 ($generated@@250 $generated@@540))) (and (= ($generated@@277 ($generated@@327 ($generated@@79 $generated@@148 $generated@@4) $generated@@539)) $generated@@539) ($generated@@135 ($generated@@327 ($generated@@79 $generated@@148 $generated@@4) $generated@@539) ($generated@@250 $generated@@540))))
 :pattern ( ($generated@@230 $generated@@539 ($generated@@250 $generated@@540)))
)))
(assert (forall (($generated@@541 T@U) ($generated@@542 T@U) ) (!  (=> (and (and (= (type $generated@@541) $generated@@148) (= (type $generated@@542) $generated@@67)) ($generated@@230 $generated@@541 ($generated@@156 $generated@@542))) (and (= ($generated@@277 ($generated@@327 ($generated@@79 $generated@@148 $generated@@2) $generated@@541)) $generated@@541) ($generated@@135 ($generated@@327 ($generated@@79 $generated@@148 $generated@@2) $generated@@541) ($generated@@156 $generated@@542))))
 :pattern ( ($generated@@230 $generated@@541 ($generated@@156 $generated@@542)))
)))
(assert (forall (($generated@@543 T@U) ($generated@@544 T@U) ) (!  (=> (and (and (= (type $generated@@543) $generated@@148) (= (type $generated@@544) $generated@@67)) ($generated@@230 $generated@@543 ($generated@@476 $generated@@544))) (and (= ($generated@@277 ($generated@@327 ($generated@@271 $generated@@148) $generated@@543)) $generated@@543) ($generated@@135 ($generated@@327 ($generated@@271 $generated@@148) $generated@@543) ($generated@@476 $generated@@544))))
 :pattern ( ($generated@@230 $generated@@543 ($generated@@476 $generated@@544)))
)))
(assert  (=> (<= 1 $generated@@545) (forall (($generated@@548 T@U) ) (!  (=> (and (= (type $generated@@548) $generated@@139) (or ($generated@@547 $generated@@548) (and (not (= 1 $generated@@545)) ($generated@@135 $generated@@548 $generated@@237)))) (= ($generated@@546 $generated@@548) ($generated@@0 ($generated@@255 ($generated@@11 true)))))
 :pattern ( ($generated@@546 $generated@@548))
))))
(assert (= ($generated@@75 $generated@@237) $generated@@64))
(assert (= ($generated@@531 $generated@@237) $generated@@66))
(assert (forall (($generated@@549 T@U) ($generated@@550 T@U) ($generated@@551 T@U) ) (!  (=> (and (and (= (type $generated@@549) ($generated@@79 $generated@@148 $generated@@2)) (= (type $generated@@550) $generated@@67)) (= (type $generated@@551) ($generated@@79 $generated@@80 $generated@@81))) (= ($generated@@77 $generated@@549 ($generated@@156 $generated@@550) $generated@@551) (forall (($generated@@552 T@U) ) (!  (=> (and (= (type $generated@@552) $generated@@148) (< 0 ($generated ($generated@@84 $generated@@549 $generated@@552)))) ($generated@@259 $generated@@552 $generated@@550 $generated@@551))
 :pattern ( ($generated@@84 $generated@@549 $generated@@552))
))))
 :pattern ( ($generated@@77 $generated@@549 ($generated@@156 $generated@@550) $generated@@551))
)))
(assert (= $generated@@154 ($generated@@255 $generated@@154)))
(assert  (=> (<= 1 $generated@@545) (forall (($generated@@553 T@U) ) (!  (=> (and (= (type $generated@@553) $generated@@139) (or ($generated@@547 $generated@@553) (and (not (= 1 $generated@@545)) ($generated@@135 $generated@@553 $generated@@237)))) ($generated@@242 $generated@@553 $generated@@154))
 :pattern ( ($generated@@546 $generated@@553))
))))
(assert (forall (($generated@@554 T@U) ($generated@@555 T@U) ($generated@@556 T@U) ) (!  (=> (and (and (and (= (type $generated@@554) $generated@@139) (= (type $generated@@555) $generated@@67)) (= (type $generated@@556) ($generated@@79 $generated@@80 $generated@@81))) (and ($generated@@238 $generated@@556) (and ($generated@@137 $generated@@554) (exists (($generated@@557 T@U) ) (!  (and (= (type $generated@@557) $generated@@67) ($generated@@77 $generated@@554 ($generated@@138 $generated@@555 $generated@@557) $generated@@556))
 :pattern ( ($generated@@77 $generated@@554 ($generated@@138 $generated@@555 $generated@@557) $generated@@556))
))))) ($generated@@259 ($generated@@146 $generated@@554) $generated@@555 $generated@@556))
 :pattern ( ($generated@@259 ($generated@@146 $generated@@554) $generated@@555 $generated@@556))
)))
(assert (forall (($generated@@558 T@U) ($generated@@559 T@U) ($generated@@560 T@U) ) (!  (=> (and (and (and (= (type $generated@@558) $generated@@139) (= (type $generated@@559) $generated@@67)) (= (type $generated@@560) ($generated@@79 $generated@@80 $generated@@81))) (and ($generated@@238 $generated@@560) (and ($generated@@137 $generated@@558) (exists (($generated@@561 T@U) ) (!  (and (= (type $generated@@561) $generated@@67) ($generated@@77 $generated@@558 ($generated@@138 $generated@@561 $generated@@559) $generated@@560))
 :pattern ( ($generated@@77 $generated@@558 ($generated@@138 $generated@@561 $generated@@559) $generated@@560))
))))) ($generated@@259 ($generated@@147 $generated@@558) $generated@@559 $generated@@560))
 :pattern ( ($generated@@259 ($generated@@147 $generated@@558) $generated@@559 $generated@@560))
)))
(assert (forall (($generated@@562 T@U) ($generated@@563 T@U) ) (!  (=> (and (= (type $generated@@562) $generated@@148) (= (type $generated@@563) $generated@@148)) (= ($generated@@229 ($generated@@255 $generated@@562) ($generated@@255 $generated@@563)) ($generated@@255 ($generated@@229 $generated@@562 $generated@@563))))
 :pattern ( ($generated@@229 ($generated@@255 $generated@@562) ($generated@@255 $generated@@563)))
)))
(assert (forall (($generated@@564 T@U) ) (! (= ($generated@@277 ($generated@@255 $generated@@564)) ($generated@@255 ($generated@@277 $generated@@564)))
 :pattern ( ($generated@@277 ($generated@@255 $generated@@564)))
)))
(assert (forall (($generated@@565 T@U) ) (! (let (($generated@@566 ($generated@@272 (type $generated@@565))))
 (=> (and (= (type $generated@@565) ($generated@@271 $generated@@566)) (= ($generated@@270 $generated@@565) 0)) (= $generated@@565 ($generated@@269 $generated@@566))))
 :pattern ( ($generated@@270 $generated@@565))
)))
(assert (forall (($generated@@567 T@U) ($generated@@568 T@U) ($generated@@569 T@U) ) (! (let (($generated@@570 (type $generated@@568)))
 (=> (and (and (= (type $generated@@567) ($generated@@79 $generated@@570 $generated@@2)) (= (type $generated@@569) $generated@@2)) (<= 0 ($generated $generated@@569))) (= ($generated@@282 ($generated@@85 $generated@@567 $generated@@568 $generated@@569)) (+ (- ($generated@@282 $generated@@567) ($generated ($generated@@84 $generated@@567 $generated@@568))) ($generated $generated@@569)))))
 :pattern ( ($generated@@282 ($generated@@85 $generated@@567 $generated@@568 $generated@@569)))
)))
(assert  (=> (<= 1 $generated@@545) (forall (($generated@@571 T@U) ) (!  (=> (and (= (type $generated@@571) $generated@@139) (or ($generated@@547 ($generated@@255 $generated@@571)) (and (not (= 1 $generated@@545)) ($generated@@135 $generated@@571 $generated@@237)))) (= ($generated@@546 ($generated@@255 $generated@@571)) ($generated@@0 ($generated@@255 ($generated@@11 true)))))
 :weight 3
 :pattern ( ($generated@@546 ($generated@@255 $generated@@571)))
))))
(assert (forall (($generated@@572 T@U) ($generated@@573 T@U) ) (!  (=> (and (= (type $generated@@572) ($generated@@79 $generated@@80 $generated@@81)) (= (type $generated@@573) $generated@@2)) ($generated@@77 $generated@@573 $generated@@46 $generated@@572))
 :pattern ( ($generated@@77 $generated@@573 $generated@@46 $generated@@572))
)))
(assert (forall (($generated@@574 T@U) ($generated@@575 T@U) ) (!  (=> (and (= (type $generated@@574) ($generated@@79 $generated@@80 $generated@@81)) (= (type $generated@@575) $generated@@3)) ($generated@@77 $generated@@575 $generated@@47 $generated@@574))
 :pattern ( ($generated@@77 $generated@@575 $generated@@47 $generated@@574))
)))
(assert (forall (($generated@@576 T@U) ($generated@@577 T@U) ) (!  (=> (and (= (type $generated@@576) ($generated@@79 $generated@@80 $generated@@81)) (= (type $generated@@577) $generated@@4)) ($generated@@77 $generated@@577 $generated@@44 $generated@@576))
 :pattern ( ($generated@@77 $generated@@577 $generated@@44 $generated@@576))
)))
(assert (forall (($generated@@578 T@U) ($generated@@579 T@U) ) (!  (=> (and (= (type $generated@@578) ($generated@@79 $generated@@80 $generated@@81)) (= (type $generated@@579) $generated@@434)) ($generated@@77 $generated@@579 $generated@@45 $generated@@578))
 :pattern ( ($generated@@77 $generated@@579 $generated@@45 $generated@@578))
)))
(assert (forall (($generated@@580 T@U) ($generated@@581 T@U) ) (!  (=> (and (= (type $generated@@580) ($generated@@79 $generated@@80 $generated@@81)) (= (type $generated@@581) $generated@@148)) ($generated@@77 $generated@@581 $generated@@48 $generated@@580))
 :pattern ( ($generated@@77 $generated@@581 $generated@@48 $generated@@580))
)))
(assert (forall (($generated@@582 T@U) ($generated@@583 T@U) ) (!  (=> (and (= (type $generated@@582) ($generated@@271 $generated@@148)) (= (type $generated@@583) $generated@@67)) (= ($generated@@135 $generated@@582 ($generated@@476 $generated@@583)) (forall (($generated@@584 Int) ) (!  (=> (and (<= 0 $generated@@584) (< $generated@@584 ($generated@@270 $generated@@582))) ($generated@@230 ($generated@@477 $generated@@582 $generated@@584) $generated@@583))
 :pattern ( ($generated@@477 $generated@@582 $generated@@584))
))))
 :pattern ( ($generated@@135 $generated@@582 ($generated@@476 $generated@@583)))
)))
(assert (forall (($generated@@586 T@U) ($generated@@587 Int) ) (!  (=> (= (type $generated@@586) ($generated@@271 $generated@@148)) (=> (and (<= 0 $generated@@587) (< $generated@@587 ($generated@@270 $generated@@586))) (< ($generated@@515 ($generated@@327 $generated@@139 ($generated@@477 $generated@@586 $generated@@587))) ($generated@@585 $generated@@586))))
 :pattern ( ($generated@@515 ($generated@@327 $generated@@139 ($generated@@477 $generated@@586 $generated@@587))))
)))
(assert (forall (($generated@@588 T@U) ($generated@@589 T@U) ($generated@@590 T@U) ) (!  (=> (and (and (and (= (type $generated@@588) ($generated@@290 $generated@@148 $generated@@148)) (= (type $generated@@589) $generated@@67)) (= (type $generated@@590) $generated@@67)) ($generated@@135 $generated@@588 ($generated@@394 $generated@@589 $generated@@590))) (and (and ($generated@@135 ($generated@@288 $generated@@588) ($generated@@245 $generated@@589)) ($generated@@135 ($generated@@335 $generated@@588) ($generated@@245 $generated@@590))) ($generated@@135 ($generated@@368 $generated@@588) ($generated@@245 ($generated@@138 $generated@@589 $generated@@590)))))
 :pattern ( ($generated@@135 $generated@@588 ($generated@@394 $generated@@589 $generated@@590)))
)))
(assert (forall (($generated@@591 T@U) ($generated@@592 T@U) ($generated@@593 T@U) ) (!  (=> (and (and (and (= (type $generated@@591) ($generated@@308 $generated@@148 $generated@@148)) (= (type $generated@@592) $generated@@67)) (= (type $generated@@593) $generated@@67)) ($generated@@135 $generated@@591 ($generated@@402 $generated@@592 $generated@@593))) (and (and ($generated@@135 ($generated@@306 $generated@@591) ($generated@@250 $generated@@592)) ($generated@@135 ($generated@@346 $generated@@591) ($generated@@250 $generated@@593))) ($generated@@135 ($generated@@376 $generated@@591) ($generated@@250 ($generated@@138 $generated@@592 $generated@@593)))))
 :pattern ( ($generated@@135 $generated@@591 ($generated@@402 $generated@@592 $generated@@593)))
)))
(assert (forall (($generated@@594 T@U) ) (!  (=> (= (type $generated@@594) $generated@@2) ($generated@@135 $generated@@594 $generated@@46))
 :pattern ( ($generated@@135 $generated@@594 $generated@@46))
)))
(assert (forall (($generated@@595 T@U) ) (!  (=> (= (type $generated@@595) $generated@@3) ($generated@@135 $generated@@595 $generated@@47))
 :pattern ( ($generated@@135 $generated@@595 $generated@@47))
)))
(assert (forall (($generated@@596 T@U) ) (!  (=> (= (type $generated@@596) $generated@@4) ($generated@@135 $generated@@596 $generated@@44))
 :pattern ( ($generated@@135 $generated@@596 $generated@@44))
)))
(assert (forall (($generated@@597 T@U) ) (!  (=> (= (type $generated@@597) $generated@@434) ($generated@@135 $generated@@597 $generated@@45))
 :pattern ( ($generated@@135 $generated@@597 $generated@@45))
)))
(assert (forall (($generated@@598 T@U) ) (!  (=> (= (type $generated@@598) $generated@@148) ($generated@@135 $generated@@598 $generated@@48))
 :pattern ( ($generated@@135 $generated@@598 $generated@@48))
)))
(push 1)
(declare-fun ControlFlow (Int Int) Int)
(declare-fun $generated@@599 () T@U)
(declare-fun $generated@@600 () T@U)
(declare-fun $generated@@601 () T@U)
(declare-fun $generated@@602 () T@U)
(declare-fun $generated@@603 () T@U)
(declare-fun $generated@@604 (T@U) Bool)
(assert  (and (and (and (and (= (type $generated@@599) $generated@@139) (= (type $generated@@600) ($generated@@163 $generated@@80 $generated@@4))) (= (type $generated@@601) $generated@@80)) (= (type $generated@@602) ($generated@@79 $generated@@80 $generated@@81))) (= (type $generated@@603) ($generated@@163 $generated@@80 $generated@@4))))
(set-option :timeout 0)
(set-option :rlimit 0)
(assert (not
 (=> (= (ControlFlow 0 0) 8) (let (($generated@@605  (=> (= (ControlFlow 0 4) (- 0 3)) ($generated@@242 $generated@@599 $generated@@154))))
(let (($generated@@606  (=> (and (and (= $generated@@599 $generated@@154) (= ($generated@@546 $generated@@599) ($generated@@0 ($generated@@255 ($generated@@11 true))))) (and ($generated@@135 ($generated@@11 ($generated@@546 $generated@@599)) $generated@@44) (= (ControlFlow 0 5) 4))) $generated@@605)))
(let (($generated@@607 true))
(let (($generated@@608  (=> (= $generated@@600 ($generated@@217 $generated@@601 $generated@@602 $generated@@60 false)) (and (=> (= (ControlFlow 0 6) 5) $generated@@606) (=> (= (ControlFlow 0 6) 2) $generated@@607)))))
(let (($generated@@609 true))
(let (($generated@@610  (=> (= $generated@@603 ($generated@@162 $generated@@601 $generated@@602 $generated@@60 false)) (and (=> (= (ControlFlow 0 7) 1) $generated@@609) (=> (= (ControlFlow 0 7) 6) $generated@@608)))))
(let (($generated@@611  (=> (and (and (and ($generated@@238 $generated@@602) ($generated@@604 $generated@@602)) ($generated@@135 $generated@@599 $generated@@237)) (and (= 1 $generated@@545) (= (ControlFlow 0 8) 7))) $generated@@610)))
$generated@@611))))))))
))
(check-sat)
(pop 1)
; Valid
(get-info :rlimit)
(reset)
(set-option :rlimit 0)
; did a full reset
(reset)
(set-option :print-success false)
(set-info :smt-lib-version 2.6)
(set-option :auto_config false)
(set-option :type_check true)
(set-option :smt.case_split 3)
(set-option :smt.qi.eager_threshold 100)
(set-option :smt.delay_units true)
(set-option :smt.arith.solver 2)
(set-option :smt.mbqi false)
(set-option :model.compact false)
(set-option :model.v2 true)
(set-option :pp.bv_literals false)
; done setting options


(set-info :category "industrial")
(declare-sort |T@U| 0)
(declare-sort |T@T| 0)
(declare-fun real_pow (Real Real) Real)
(declare-fun UOrdering2 (|T@U| |T@U|) Bool)
(declare-fun UOrdering3 (|T@T| |T@U| |T@U|) Bool)
(declare-fun tickleBool (Bool) Bool)
(assert (and (tickleBool true) (tickleBool false)))
(declare-fun $generated (T@U) Int)
(declare-fun $generated@@0 (T@U) Bool)
(declare-fun $generated@@1 (T@T) Int)
(declare-fun $generated@@2 () T@T)
(declare-fun $generated@@3 () T@T)
(declare-fun $generated@@4 () T@T)
(declare-fun $generated@@5 () T@T)
(declare-fun $generated@@6 () T@T)
(declare-fun $generated@@7 () T@T)
(declare-fun $generated@@8 (Int) T@U)
(declare-fun type (T@U) T@T)
(declare-fun $generated@@9 (Real) T@U)
(declare-fun $generated@@10 (T@U) Real)
(declare-fun $generated@@11 (Bool) T@U)
(declare-fun $generated@@12 (RoundingMode) T@U)
(declare-fun $generated@@13 (T@U) RoundingMode)
(declare-fun $generated@@14 (String) T@U)
(declare-fun $generated@@15 (T@U) String)
(declare-fun $generated@@16 ((RegEx String)) T@U)
(declare-fun $generated@@17 (T@U) (RegEx String))
(declare-fun $generated@@44 () T@U)
(declare-fun $generated@@45 () T@U)
(declare-fun $generated@@46 () T@U)
(declare-fun $generated@@47 () T@U)
(declare-fun $generated@@48 () T@U)
(declare-fun $generated@@49 () T@U)
(declare-fun $generated@@50 () T@U)
(declare-fun $generated@@51 () T@U)
(declare-fun $generated@@52 () T@U)
(declare-fun $generated@@53 () T@U)
(declare-fun $generated@@54 () T@U)
(declare-fun $generated@@55 () T@U)
(declare-fun $generated@@56 () T@U)
(declare-fun $generated@@57 () T@U)
(declare-fun $generated@@58 () T@U)
(declare-fun $generated@@59 () T@U)
(declare-fun $generated@@60 () T@U)
(declare-fun $generated@@61 () T@U)
(declare-fun $generated@@62 () T@U)
(declare-fun $generated@@63 () T@U)
(declare-fun $generated@@64 () T@U)
(declare-fun $generated@@65 () T@U)
(declare-fun $generated@@66 () T@U)
(declare-fun $generated@@67 () T@U)
(declare-fun $generated@@68 () T@U)
(declare-fun $generated@@69 () T@U)
(declare-fun $generated@@70 () T@U)
(declare-fun $generated@@71 () T@T)
(declare-fun $generated@@72 () T@T)
(declare-fun $generated@@73 (T@T) T@T)
(declare-fun $generated@@74 (T@T) T@T)
(declare-fun $generated@@75 () T@T)
(declare-fun $generated@@76 () T@T)
(declare-fun $generated@@79 (T@U) T@U)
(declare-fun $generated@@81 (T@U T@U T@U) Bool)
(declare-fun $generated@@82 (Int) T@U)
(declare-fun $generated@@83 (T@T T@T) T@T)
(declare-fun $generated@@84 () T@T)
(declare-fun $generated@@85 () T@T)
(declare-fun $generated@@86 (T@T) T@T)
(declare-fun $generated@@87 (T@T) T@T)
(declare-fun $generated@@88 (T@U T@U) T@U)
(declare-fun $generated@@89 (T@U T@U T@U) T@U)
(declare-fun $generated@@90 (T@U T@U) T@U)
(declare-fun $generated@@91 (T@U T@U T@U) T@U)
(declare-fun $generated@@139 (T@U) Bool)
(declare-fun $generated@@140 () T@T)
(declare-fun $generated@@141 (T@U) Bool)
(declare-fun $generated@@143 (T@U T@U) Bool)
(declare-fun $generated@@145 (T@U) Bool)
(declare-fun $generated@@146 (T@U T@U) T@U)
(declare-fun $generated@@152 (T@U T@U) Bool)
(declare-fun $generated@@153 (T@U) T@U)
(declare-fun $generated@@154 (T@U) T@U)
(declare-fun $generated@@155 () T@T)
(declare-fun $generated@@160 (T@U) T@U)
(declare-fun $generated@@161 () T@U)
(declare-fun $generated@@163 () T@U)
(declare-fun $generated@@164 (T@U) T@U)
(declare-fun $generated@@165 (T@U) Bool)
(declare-fun $generated@@169 (T@U) T@U)
(declare-fun $generated@@173 (T@U T@U T@U) T@U)
(declare-fun $generated@@174 (T@U T@U T@U Bool) T@U)
(declare-fun $generated@@175 (T@T T@T) T@T)
(declare-fun $generated@@176 (T@T) T@T)
(declare-fun $generated@@177 (T@T) T@T)
(declare-fun $generated@@178 (T@U T@U T@U T@U) T@U)
(declare-fun $generated@@229 (T@U T@U) T@U)
(declare-fun $generated@@230 (T@U T@U) Bool)
(declare-fun $generated@@237 () T@U)
(declare-fun $generated@@238 (T@U) Bool)
(declare-fun $generated@@243 (T@U T@U) Bool)
(declare-fun $generated@@246 (T@U T@U) Bool)
(declare-fun $generated@@249 (T@U) T@U)
(declare-fun $generated@@254 (T@U) T@U)
(declare-fun $generated@@259 (T@U) T@U)
(declare-fun $generated@@263 (T@U) Bool)
(declare-fun $generated@@266 (T@U) Bool)
(declare-fun $generated@@269 (T@U T@U T@U) Bool)
(declare-fun $generated@@282 (T@T) T@U)
(declare-fun $generated@@283 (T@U) Int)
(declare-fun $generated@@284 (T@T) T@T)
(declare-fun $generated@@285 (T@T) T@T)
(declare-fun $generated@@292 (T@U) T@U)
(declare-fun $generated@@296 (T@U) T@U)
(declare-fun $generated@@300 (T@U) T@U)
(declare-fun $generated@@305 (T@U) Int)
(declare-fun $generated@@306 (T@T) T@U)
(declare-fun $generated@@311 (T@U) T@U)
(declare-fun $generated@@314 (T@U) T@U)
(declare-fun $generated@@315 (T@T T@T) T@U)
(declare-fun $generated@@316 (T@T T@T) T@T)
(declare-fun $generated@@317 (T@T) T@T)
(declare-fun $generated@@318 (T@T) T@T)
(declare-fun $generated@@332 (T@U) T@U)
(declare-fun $generated@@333 (T@T T@T) T@U)
(declare-fun $generated@@334 (T@T T@T) T@T)
(declare-fun $generated@@335 (T@T) T@T)
(declare-fun $generated@@336 (T@T) T@T)
(declare-fun $generated@@353 (T@T T@U) T@U)
(declare-fun $generated@@361 (T@U) T@U)
(declare-fun $generated@@372 (T@U) T@U)
(declare-fun $generated@@385 (T@U) Bool)
(declare-fun $generated@@397 (T@U) T@U)
(declare-fun $generated@@398 (T@U) T@U)
(declare-fun $generated@@405 (T@U) T@U)
(declare-fun $generated@@406 (T@U) T@U)
(declare-fun $generated@@423 (T@U T@U) T@U)
(declare-fun $generated@@431 (T@U T@U) T@U)
(declare-fun $generated@@440 (T@T) T@U)
(declare-fun $generated@@464 () T@T)
(declare-fun $generated@@472 (T@U) T@U)
(declare-fun $generated@@476 (T@U) T@U)
(declare-fun $generated@@482 (T@U) T@U)
(declare-fun $generated@@486 (T@U) T@U)
(declare-fun $generated@@494 (T@U) T@U)
(declare-fun $generated@@498 (T@U) T@U)
(declare-fun $generated@@506 (T@U) T@U)
(declare-fun $generated@@507 (T@U Int) T@U)
(declare-fun $generated@@516 (T@U) Int)
(declare-fun $generated@@518 (T@U) T@U)
(declare-fun $generated@@522 (T@U) T@U)
(declare-fun $generated@@526 (T@U) T@U)
(declare-fun $generated@@530 (T@U) T@U)
(declare-fun $generated@@535 (T@U) T@U)
(declare-fun $generated@@551 (T@U) Int)
(declare-fun $generated@@552 (T@U) Int)
(declare-fun $generated@@621 (T@U) Int)
(assert  (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (= ($generated@@1 $generated@@2) 0) (= ($generated@@1 $generated@@3) 1)) (= ($generated@@1 $generated@@4) 2)) (= ($generated@@1 $generated@@5) 3)) (= ($generated@@1 $generated@@6) 4)) (= ($generated@@1 $generated@@7) 5)) (forall (($generated@@18 Int) ) (! (= ($generated ($generated@@8 $generated@@18)) $generated@@18)
 :pattern ( ($generated@@8 $generated@@18))
))) (forall (($generated@@19 T@U) ) (!  (=> (= (type $generated@@19) $generated@@2) (= ($generated@@8 ($generated $generated@@19)) $generated@@19))
 :pattern ( ($generated $generated@@19))
))) (forall (($generated@@20 Int) ) (! (= (type ($generated@@8 $generated@@20)) $generated@@2)
 :pattern ( ($generated@@8 $generated@@20))
))) (forall (($generated@@21 Real) ) (! (= ($generated@@10 ($generated@@9 $generated@@21)) $generated@@21)
 :pattern ( ($generated@@9 $generated@@21))
))) (forall (($generated@@22 T@U) ) (!  (=> (= (type $generated@@22) $generated@@3) (= ($generated@@9 ($generated@@10 $generated@@22)) $generated@@22))
 :pattern ( ($generated@@10 $generated@@22))
))) (forall (($generated@@23 Real) ) (! (= (type ($generated@@9 $generated@@23)) $generated@@3)
 :pattern ( ($generated@@9 $generated@@23))
))) (forall (($generated@@24 Bool) ) (! (= ($generated@@0 ($generated@@11 $generated@@24)) $generated@@24)
 :pattern ( ($generated@@11 $generated@@24))
))) (forall (($generated@@25 T@U) ) (!  (=> (= (type $generated@@25) $generated@@4) (= ($generated@@11 ($generated@@0 $generated@@25)) $generated@@25))
 :pattern ( ($generated@@0 $generated@@25))
))) (forall (($generated@@26 Bool) ) (! (= (type ($generated@@11 $generated@@26)) $generated@@4)
 :pattern ( ($generated@@11 $generated@@26))
))) (forall (($generated@@27 RoundingMode) ) (! (= ($generated@@13 ($generated@@12 $generated@@27)) $generated@@27)
 :pattern ( ($generated@@12 $generated@@27))
))) (forall (($generated@@28 T@U) ) (!  (=> (= (type $generated@@28) $generated@@5) (= ($generated@@12 ($generated@@13 $generated@@28)) $generated@@28))
 :pattern ( ($generated@@13 $generated@@28))
))) (forall (($generated@@29 RoundingMode) ) (! (= (type ($generated@@12 $generated@@29)) $generated@@5)
 :pattern ( ($generated@@12 $generated@@29))
))) (forall (($generated@@30 String) ) (! (= ($generated@@15 ($generated@@14 $generated@@30)) $generated@@30)
 :pattern ( ($generated@@14 $generated@@30))
))) (forall (($generated@@31 T@U) ) (!  (=> (= (type $generated@@31) $generated@@6) (= ($generated@@14 ($generated@@15 $generated@@31)) $generated@@31))
 :pattern ( ($generated@@15 $generated@@31))
))) (forall (($generated@@32 String) ) (! (= (type ($generated@@14 $generated@@32)) $generated@@6)
 :pattern ( ($generated@@14 $generated@@32))
))) (forall (($generated@@33 (RegEx String)) ) (! (= ($generated@@17 ($generated@@16 $generated@@33)) $generated@@33)
 :pattern ( ($generated@@16 $generated@@33))
))) (forall (($generated@@34 T@U) ) (!  (=> (= (type $generated@@34) $generated@@7) (= ($generated@@16 ($generated@@17 $generated@@34)) $generated@@34))
 :pattern ( ($generated@@17 $generated@@34))
))) (forall (($generated@@35 (RegEx String)) ) (! (= (type ($generated@@16 $generated@@35)) $generated@@7)
 :pattern ( ($generated@@16 $generated@@35))
))))
(assert (forall (($generated@@36 T@U) ) (! (UOrdering2 $generated@@36 $generated@@36)
 :no-pattern ($generated $generated@@36)
 :no-pattern ($generated@@0 $generated@@36)
)))
(assert (forall (($generated@@37 T@U) ($generated@@38 T@U) ($generated@@39 T@U) ) (! (let (($generated@@40 (type $generated@@37)))
 (=> (and (and (= (type $generated@@38) $generated@@40) (= (type $generated@@39) $generated@@40)) (and (UOrdering2 $generated@@37 $generated@@38) (UOrdering2 $generated@@38 $generated@@39))) (UOrdering2 $generated@@37 $generated@@39)))
 :pattern ( (UOrdering2 $generated@@37 $generated@@38) (UOrdering2 $generated@@38 $generated@@39))
)))
(assert (forall (($generated@@41 T@U) ($generated@@42 T@U) ) (! (let (($generated@@43 (type $generated@@41)))
 (=> (= (type $generated@@42) $generated@@43) (=> (and (UOrdering2 $generated@@41 $generated@@42) (UOrdering2 $generated@@42 $generated@@41)) (= $generated@@41 $generated@@42))))
 :pattern ( (UOrdering2 $generated@@41 $generated@@42) (UOrdering2 $generated@@42 $generated@@41))
)))
(assert  (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (= ($generated@@1 $generated@@71) 6) (= (type $generated@@44) $generated@@71)) (= (type $generated@@45) $generated@@71)) (= (type $generated@@46) $generated@@71)) (= (type $generated@@47) $generated@@71)) (= (type $generated@@48) $generated@@71)) (= ($generated@@1 $generated@@72) 7)) (= (type $generated@@49) $generated@@72)) (= (type $generated@@50) $generated@@72)) (= (type $generated@@51) $generated@@72)) (= (type $generated@@52) $generated@@72)) (= (type $generated@@53) $generated@@72)) (= (type $generated@@54) $generated@@72)) (= (type $generated@@55) $generated@@72)) (= (type $generated@@56) $generated@@72)) (= (type $generated@@57) $generated@@72)) (= (type $generated@@58) $generated@@72)) (= (type $generated@@59) $generated@@72)) (forall (($generated@@77 T@T) ) (= ($generated@@1 ($generated@@73 $generated@@77)) 8))) (forall (($generated@@78 T@T) ) (! (= ($generated@@74 ($generated@@73 $generated@@78)) $generated@@78)
 :pattern ( ($generated@@73 $generated@@78))
))) (= (type $generated@@60) ($generated@@73 $generated@@4))) (= ($generated@@1 $generated@@75) 9)) (= (type $generated@@61) $generated@@75)) (= (type $generated@@62) $generated@@72)) (= (type $generated@@63) $generated@@75)) (= (type $generated@@64) $generated@@72)) (= (type $generated@@65) $generated@@75)) (= (type $generated@@66) $generated@@72)) (= (type $generated@@67) $generated@@75)) (= ($generated@@1 $generated@@76) 10)) (= (type $generated@@68) $generated@@76)) (= (type $generated@@69) $generated@@76)) (= (type $generated@@70) $generated@@76)))
(assert (distinct $generated@@44 $generated@@45 $generated@@46 $generated@@47 $generated@@48 $generated@@49 $generated@@50 $generated@@51 $generated@@52 $generated@@53 $generated@@54 $generated@@55 $generated@@56 $generated@@57 $generated@@58 $generated@@59 $generated@@60 $generated@@61 $generated@@62 $generated@@63 $generated@@64 $generated@@65 $generated@@66 $generated@@67 $generated@@68 $generated@@69 $generated@@70)
)
(assert (forall (($generated@@80 T@U) ) (! (= (type ($generated@@79 $generated@@80)) $generated@@72)
 :pattern ( ($generated@@79 $generated@@80))
)))
(assert (= ($generated@@79 $generated@@44) $generated@@49))
(assert (= ($generated@@79 $generated@@45) $generated@@50))
(assert (= ($generated@@79 $generated@@46) $generated@@51))
(assert (= ($generated@@79 $generated@@47) $generated@@52))
(assert (= ($generated@@79 $generated@@48) $generated@@53))
(assert  (and (and (and (and (and (and (and (and (and (and (and (and (and (forall (($generated@@92 T@T) ($generated@@93 T@T) ) (= ($generated@@1 ($generated@@83 $generated@@92 $generated@@93)) 11)) (forall (($generated@@94 T@T) ($generated@@95 T@T) ) (! (= ($generated@@86 ($generated@@83 $generated@@94 $generated@@95)) $generated@@94)
 :pattern ( ($generated@@83 $generated@@94 $generated@@95))
))) (forall (($generated@@96 T@T) ($generated@@97 T@T) ) (! (= ($generated@@87 ($generated@@83 $generated@@96 $generated@@97)) $generated@@97)
 :pattern ( ($generated@@83 $generated@@96 $generated@@97))
))) (forall (($generated@@98 T@U) ($generated@@99 T@U) ) (! (let (($generated@@100 ($generated@@87 (type $generated@@98))))
(= (type ($generated@@88 $generated@@98 $generated@@99)) $generated@@100))
 :pattern ( ($generated@@88 $generated@@98 $generated@@99))
))) (forall (($generated@@101 T@U) ($generated@@102 T@U) ($generated@@103 T@U) ) (! (let (($generated@@104 (type $generated@@103)))
(let (($generated@@105 (type $generated@@102)))
(= (type ($generated@@89 $generated@@101 $generated@@102 $generated@@103)) ($generated@@83 $generated@@105 $generated@@104))))
 :pattern ( ($generated@@89 $generated@@101 $generated@@102 $generated@@103))
))) (forall (($generated@@106 T@U) ($generated@@107 T@U) ($generated@@108 T@U) ) (! (let (($generated@@109 ($generated@@87 (type $generated@@106))))
 (=> (= (type $generated@@108) $generated@@109) (= ($generated@@88 ($generated@@89 $generated@@106 $generated@@107 $generated@@108) $generated@@107) $generated@@108)))
 :weight 0
))) (and (forall (($generated@@110 T@U) ($generated@@111 T@U) ($generated@@112 T@U) ($generated@@113 T@U) ) (!  (or (= $generated@@112 $generated@@113) (= ($generated@@88 ($generated@@89 $generated@@111 $generated@@112 $generated@@110) $generated@@113) ($generated@@88 $generated@@111 $generated@@113)))
 :weight 0
)) (forall (($generated@@114 T@U) ($generated@@115 T@U) ($generated@@116 T@U) ($generated@@117 T@U) ) (!  (or true (= ($generated@@88 ($generated@@89 $generated@@115 $generated@@116 $generated@@114) $generated@@117) ($generated@@88 $generated@@115 $generated@@117)))
 :weight 0
)))) (= ($generated@@1 $generated@@84) 12)) (forall (($generated@@118 T@U) ($generated@@119 T@U) ) (! (let (($generated@@120 ($generated@@74 (type $generated@@119))))
(= (type ($generated@@90 $generated@@118 $generated@@119)) $generated@@120))
 :pattern ( ($generated@@90 $generated@@118 $generated@@119))
))) (= ($generated@@1 $generated@@85) 13)) (forall (($generated@@121 T@U) ($generated@@122 T@U) ($generated@@123 T@U) ) (! (= (type ($generated@@91 $generated@@121 $generated@@122 $generated@@123)) $generated@@85)
 :pattern ( ($generated@@91 $generated@@121 $generated@@122 $generated@@123))
))) (forall (($generated@@124 T@U) ($generated@@125 T@U) ($generated@@126 T@U) ) (! (let (($generated@@127 ($generated@@74 (type $generated@@125))))
 (=> (= (type $generated@@126) $generated@@127) (= ($generated@@90 ($generated@@91 $generated@@124 $generated@@125 $generated@@126) $generated@@125) $generated@@126)))
 :weight 0
))) (and (forall (($generated@@128 T@U) ($generated@@129 T@U) ($generated@@130 T@U) ($generated@@131 T@U) ) (!  (or (= $generated@@130 $generated@@131) (= ($generated@@90 ($generated@@91 $generated@@129 $generated@@130 $generated@@128) $generated@@131) ($generated@@90 $generated@@129 $generated@@131)))
 :weight 0
)) (forall (($generated@@132 T@U) ($generated@@133 T@U) ($generated@@134 T@U) ($generated@@135 T@U) ) (!  (or true (= ($generated@@90 ($generated@@91 $generated@@133 $generated@@134 $generated@@132) $generated@@135) ($generated@@90 $generated@@133 $generated@@135)))
 :weight 0
)))) (forall (($generated@@136 Int) ) (! (= (type ($generated@@82 $generated@@136)) $generated@@71)
 :pattern ( ($generated@@82 $generated@@136))
))))
(assert (forall (($generated@@137 T@U) ($generated@@138 T@U) ) (!  (=> (and (= (type $generated@@137) $generated@@2) (= (type $generated@@138) ($generated@@83 $generated@@84 $generated@@85))) ($generated@@81 $generated@@137 ($generated@@82 0) $generated@@138))
 :pattern ( ($generated@@81 $generated@@137 ($generated@@82 0) $generated@@138))
)))
(assert (= ($generated@@1 $generated@@140) 14))
(assert (forall (($generated@@142 T@U) ) (!  (=> (and (= (type $generated@@142) $generated@@140) ($generated@@139 $generated@@142)) ($generated@@141 $generated@@142))
 :pattern ( ($generated@@139 $generated@@142))
)))
(assert (forall (($generated@@144 T@U) ) (!  (=> (= (type $generated@@144) $generated@@2) ($generated@@143 $generated@@144 ($generated@@82 0)))
 :pattern ( ($generated@@143 $generated@@144 ($generated@@82 0)))
)))
(assert (forall (($generated@@147 T@U) ($generated@@148 T@U) ) (! (= (type ($generated@@146 $generated@@147 $generated@@148)) $generated@@71)
 :pattern ( ($generated@@146 $generated@@147 $generated@@148))
)))
(assert (forall (($generated@@149 T@U) ($generated@@150 T@U) ($generated@@151 T@U) ) (!  (=> (and (and (and (= (type $generated@@149) $generated@@71) (= (type $generated@@150) $generated@@71)) (= (type $generated@@151) $generated@@140)) ($generated@@143 $generated@@151 ($generated@@146 $generated@@149 $generated@@150))) ($generated@@145 $generated@@151))
 :pattern ( ($generated@@145 $generated@@151) ($generated@@143 $generated@@151 ($generated@@146 $generated@@149 $generated@@150)))
)))
(assert  (and (and (= ($generated@@1 $generated@@155) 15) (forall (($generated@@156 T@U) ) (! (= (type ($generated@@153 $generated@@156)) $generated@@155)
 :pattern ( ($generated@@153 $generated@@156))
))) (forall (($generated@@157 T@U) ) (! (= (type ($generated@@154 $generated@@157)) $generated@@155)
 :pattern ( ($generated@@154 $generated@@157))
))))
(assert (forall (($generated@@158 T@U) ($generated@@159 T@U) ) (!  (=> (and (and (= (type $generated@@158) $generated@@140) (= (type $generated@@159) $generated@@140)) true) (= ($generated@@152 $generated@@158 $generated@@159)  (and (= ($generated@@153 $generated@@158) ($generated@@153 $generated@@159)) (= ($generated@@154 $generated@@158) ($generated@@154 $generated@@159)))))
 :pattern ( ($generated@@152 $generated@@158 $generated@@159))
)))
(assert  (and (forall (($generated@@162 T@U) ) (! (= (type ($generated@@160 $generated@@162)) $generated@@75)
 :pattern ( ($generated@@160 $generated@@162))
)) (= (type $generated@@161) $generated@@140)))
(assert (= ($generated@@160 $generated@@161) $generated@@65))
(assert (= (type $generated@@163) $generated@@140))
(assert (= ($generated@@160 $generated@@163) $generated@@67))
(assert (forall (($generated@@166 T@U) ) (! (= (type ($generated@@164 $generated@@166)) $generated@@71)
 :pattern ( ($generated@@164 $generated@@166))
)))
(assert (forall (($generated@@167 T@U) ($generated@@168 T@U) ) (!  (=> (and (and (= (type $generated@@167) ($generated@@83 $generated@@155 $generated@@2)) (= (type $generated@@168) $generated@@71)) ($generated@@143 $generated@@167 ($generated@@164 $generated@@168))) ($generated@@165 $generated@@167))
 :pattern ( ($generated@@143 $generated@@167 ($generated@@164 $generated@@168)))
)))
(assert (forall (($generated@@170 T@U) ) (! (= (type ($generated@@169 $generated@@170)) $generated@@71)
 :pattern ( ($generated@@169 $generated@@170))
)))
(assert (forall (($generated@@171 T@U) ($generated@@172 T@U) ) (!  (=> (and (and (= (type $generated@@171) $generated@@71) (= (type $generated@@172) $generated@@140)) ($generated@@143 $generated@@172 ($generated@@169 $generated@@171))) ($generated@@141 $generated@@172))
 :pattern ( ($generated@@141 $generated@@172) ($generated@@143 $generated@@172 ($generated@@169 $generated@@171)))
)))
(assert  (and (and (and (and (and (and (and (forall (($generated@@179 T@T) ($generated@@180 T@T) ) (= ($generated@@1 ($generated@@175 $generated@@179 $generated@@180)) 16)) (forall (($generated@@181 T@T) ($generated@@182 T@T) ) (! (= ($generated@@176 ($generated@@175 $generated@@181 $generated@@182)) $generated@@181)
 :pattern ( ($generated@@175 $generated@@181 $generated@@182))
))) (forall (($generated@@183 T@T) ($generated@@184 T@T) ) (! (= ($generated@@177 ($generated@@175 $generated@@183 $generated@@184)) $generated@@184)
 :pattern ( ($generated@@175 $generated@@183 $generated@@184))
))) (forall (($generated@@185 T@U) ($generated@@186 T@U) ($generated@@187 T@U) ) (! (let (($generated@@188 ($generated@@177 (type $generated@@185))))
(= (type ($generated@@173 $generated@@185 $generated@@186 $generated@@187)) $generated@@188))
 :pattern ( ($generated@@173 $generated@@185 $generated@@186 $generated@@187))
))) (forall (($generated@@189 T@U) ($generated@@190 T@U) ($generated@@191 T@U) ($generated@@192 T@U) ) (! (let (($generated@@193 (type $generated@@192)))
(let (($generated@@194 (type $generated@@190)))
(= (type ($generated@@178 $generated@@189 $generated@@190 $generated@@191 $generated@@192)) ($generated@@175 $generated@@194 $generated@@193))))
 :pattern ( ($generated@@178 $generated@@189 $generated@@190 $generated@@191 $generated@@192))
))) (forall (($generated@@195 T@U) ($generated@@196 T@U) ($generated@@197 T@U) ($generated@@198 T@U) ) (! (let (($generated@@199 ($generated@@177 (type $generated@@195))))
 (=> (= (type $generated@@198) $generated@@199) (= ($generated@@173 ($generated@@178 $generated@@195 $generated@@196 $generated@@197 $generated@@198) $generated@@196 $generated@@197) $generated@@198)))
 :weight 0
))) (and (and (forall (($generated@@200 T@U) ($generated@@201 T@U) ($generated@@202 T@U) ($generated@@203 T@U) ($generated@@204 T@U) ($generated@@205 T@U) ) (!  (or (= $generated@@202 $generated@@204) (= ($generated@@173 ($generated@@178 $generated@@201 $generated@@202 $generated@@203 $generated@@200) $generated@@204 $generated@@205) ($generated@@173 $generated@@201 $generated@@204 $generated@@205)))
 :weight 0
)) (forall (($generated@@206 T@U) ($generated@@207 T@U) ($generated@@208 T@U) ($generated@@209 T@U) ($generated@@210 T@U) ($generated@@211 T@U) ) (!  (or (= $generated@@209 $generated@@211) (= ($generated@@173 ($generated@@178 $generated@@207 $generated@@208 $generated@@209 $generated@@206) $generated@@210 $generated@@211) ($generated@@173 $generated@@207 $generated@@210 $generated@@211)))
 :weight 0
))) (forall (($generated@@212 T@U) ($generated@@213 T@U) ($generated@@214 T@U) ($generated@@215 T@U) ($generated@@216 T@U) ($generated@@217 T@U) ) (!  (or true (= ($generated@@173 ($generated@@178 $generated@@213 $generated@@214 $generated@@215 $generated@@212) $generated@@216 $generated@@217) ($generated@@173 $generated@@213 $generated@@216 $generated@@217)))
 :weight 0
)))) (forall (($generated@@218 T@U) ($generated@@219 T@U) ($generated@@220 T@U) ($generated@@221 Bool) ) (! (= (type ($generated@@174 $generated@@218 $generated@@219 $generated@@220 $generated@@221)) ($generated@@175 $generated@@84 $generated@@4))
 :pattern ( ($generated@@174 $generated@@218 $generated@@219 $generated@@220 $generated@@221))
))))
(assert (forall (($generated@@222 T@U) ($generated@@223 T@U) ($generated@@224 T@U) ($generated@@225 Bool) ($generated@@226 T@U) ($generated@@227 T@U) ) (! (let (($generated@@228 ($generated@@74 (type $generated@@227))))
 (=> (and (and (and (and (= (type $generated@@222) $generated@@84) (= (type $generated@@223) ($generated@@83 $generated@@84 $generated@@85))) (= (type $generated@@224) ($generated@@73 $generated@@4))) (= (type $generated@@226) $generated@@84)) (= (type $generated@@227) ($generated@@73 $generated@@228))) (= ($generated@@0 ($generated@@173 ($generated@@174 $generated@@222 $generated@@223 $generated@@224 $generated@@225) $generated@@226 $generated@@227))  (=> (and (not (= $generated@@226 $generated@@222)) ($generated@@0 ($generated@@90 ($generated@@88 $generated@@223 $generated@@226) $generated@@224))) $generated@@225))))
 :pattern ( ($generated@@173 ($generated@@174 $generated@@222 $generated@@223 $generated@@224 $generated@@225) $generated@@226 $generated@@227))
)))
(assert (forall (($generated@@231 T@U) ($generated@@232 T@U) ) (! (= (type ($generated@@229 $generated@@231 $generated@@232)) $generated@@140)
 :pattern ( ($generated@@229 $generated@@231 $generated@@232))
)))
(assert (forall (($generated@@233 T@U) ($generated@@234 T@U) ($generated@@235 T@U) ($generated@@236 T@U) ) (!  (=> (and (and (and (= (type $generated@@233) $generated@@71) (= (type $generated@@234) $generated@@71)) (= (type $generated@@235) $generated@@155)) (= (type $generated@@236) $generated@@155)) (= ($generated@@143 ($generated@@229 $generated@@235 $generated@@236) ($generated@@146 $generated@@233 $generated@@234))  (and ($generated@@230 $generated@@235 $generated@@233) ($generated@@230 $generated@@236 $generated@@234))))
 :pattern ( ($generated@@143 ($generated@@229 $generated@@235 $generated@@236) ($generated@@146 $generated@@233 $generated@@234)))
)))
(assert (= (type $generated@@237) $generated@@71))
(assert ($generated@@143 $generated@@161 $generated@@237))
(assert ($generated@@143 $generated@@163 $generated@@237))
(assert (forall (($generated@@239 T@U) ) (!  (=> (and (= (type $generated@@239) ($generated@@83 $generated@@84 $generated@@85)) ($generated@@238 $generated@@239)) ($generated@@81 $generated@@161 $generated@@237 $generated@@239))
 :pattern ( ($generated@@81 $generated@@161 $generated@@237 $generated@@239))
)))
(assert (forall (($generated@@240 T@U) ) (!  (=> (and (= (type $generated@@240) ($generated@@83 $generated@@84 $generated@@85)) ($generated@@238 $generated@@240)) ($generated@@81 $generated@@163 $generated@@237 $generated@@240))
 :pattern ( ($generated@@81 $generated@@163 $generated@@237 $generated@@240))
)))
(assert (forall (($generated@@241 T@U) ($generated@@242 T@U) ) (!  (=> (and (= (type $generated@@241) $generated@@140) (= (type $generated@@242) $generated@@140)) (= ($generated@@152 $generated@@241 $generated@@242) (= $generated@@241 $generated@@242)))
 :pattern ( ($generated@@152 $generated@@241 $generated@@242))
)))
(assert (forall (($generated@@244 T@U) ($generated@@245 T@U) ) (!  (=> (and (= (type $generated@@244) $generated@@140) (= (type $generated@@245) $generated@@140)) (= ($generated@@243 $generated@@244 $generated@@245) (= $generated@@244 $generated@@245)))
 :pattern ( ($generated@@243 $generated@@244 $generated@@245))
)))
(assert (forall (($generated@@247 T@U) ($generated@@248 T@U) ) (!  (=> (and (= (type $generated@@247) $generated@@140) (= (type $generated@@248) $generated@@140)) (= ($generated@@246 $generated@@247 $generated@@248) (= $generated@@247 $generated@@248)))
 :pattern ( ($generated@@246 $generated@@247 $generated@@248))
)))
(assert (forall (($generated@@250 T@U) ) (! (= (type ($generated@@249 $generated@@250)) $generated@@71)
 :pattern ( ($generated@@249 $generated@@250))
)))
(assert (forall (($generated@@251 T@U) ($generated@@252 T@U) ) (!  (=> (and (= (type $generated@@251) ($generated@@83 $generated@@155 $generated@@4)) (= (type $generated@@252) $generated@@71)) (= ($generated@@143 $generated@@251 ($generated@@249 $generated@@252)) (forall (($generated@@253 T@U) ) (!  (=> (and (= (type $generated@@253) $generated@@155) ($generated@@0 ($generated@@88 $generated@@251 $generated@@253))) ($generated@@230 $generated@@253 $generated@@252))
 :pattern ( ($generated@@88 $generated@@251 $generated@@253))
))))
 :pattern ( ($generated@@143 $generated@@251 ($generated@@249 $generated@@252)))
)))
(assert (forall (($generated@@255 T@U) ) (! (= (type ($generated@@254 $generated@@255)) $generated@@71)
 :pattern ( ($generated@@254 $generated@@255))
)))
(assert (forall (($generated@@256 T@U) ($generated@@257 T@U) ) (!  (=> (and (= (type $generated@@256) ($generated@@83 $generated@@155 $generated@@4)) (= (type $generated@@257) $generated@@71)) (= ($generated@@143 $generated@@256 ($generated@@254 $generated@@257)) (forall (($generated@@258 T@U) ) (!  (=> (and (= (type $generated@@258) $generated@@155) ($generated@@0 ($generated@@88 $generated@@256 $generated@@258))) ($generated@@230 $generated@@258 $generated@@257))
 :pattern ( ($generated@@88 $generated@@256 $generated@@258))
))))
 :pattern ( ($generated@@143 $generated@@256 ($generated@@254 $generated@@257)))
)))
(assert (forall (($generated@@260 T@U) ) (! (let (($generated@@261 (type $generated@@260)))
(= (type ($generated@@259 $generated@@260)) $generated@@261))
 :pattern ( ($generated@@259 $generated@@260))
)))
(assert (forall (($generated@@262 T@U) ) (! (= ($generated@@259 $generated@@262) $generated@@262)
 :pattern ( ($generated@@259 $generated@@262))
)))
(assert (forall (($generated@@264 T@U) ($generated@@265 T@U) ) (!  (=> (and (and (= (type $generated@@264) $generated@@140) (= (type $generated@@265) $generated@@140)) (and ($generated@@263 $generated@@264) ($generated@@263 $generated@@265))) (= ($generated@@246 $generated@@264 $generated@@265) true))
 :pattern ( ($generated@@246 $generated@@264 $generated@@265) ($generated@@263 $generated@@264))
 :pattern ( ($generated@@246 $generated@@264 $generated@@265) ($generated@@263 $generated@@265))
)))
(assert (forall (($generated@@267 T@U) ($generated@@268 T@U) ) (!  (=> (and (and (= (type $generated@@267) $generated@@140) (= (type $generated@@268) $generated@@140)) (and ($generated@@266 $generated@@267) ($generated@@266 $generated@@268))) (= ($generated@@246 $generated@@267 $generated@@268) true))
 :pattern ( ($generated@@246 $generated@@267 $generated@@268) ($generated@@266 $generated@@267))
 :pattern ( ($generated@@246 $generated@@267 $generated@@268) ($generated@@266 $generated@@268))
)))
(assert (forall (($generated@@270 T@U) ($generated@@271 T@U) ($generated@@272 T@U) ($generated@@273 T@U) ($generated@@274 T@U) ) (!  (=> (and (and (and (and (and (= (type $generated@@270) $generated@@71) (= (type $generated@@271) $generated@@71)) (= (type $generated@@272) $generated@@155)) (= (type $generated@@273) $generated@@155)) (= (type $generated@@274) ($generated@@83 $generated@@84 $generated@@85))) ($generated@@238 $generated@@274)) (= ($generated@@81 ($generated@@229 $generated@@272 $generated@@273) ($generated@@146 $generated@@270 $generated@@271) $generated@@274)  (and ($generated@@269 $generated@@272 $generated@@270 $generated@@274) ($generated@@269 $generated@@273 $generated@@271 $generated@@274))))
 :pattern ( ($generated@@81 ($generated@@229 $generated@@272 $generated@@273) ($generated@@146 $generated@@270 $generated@@271) $generated@@274))
)))
(assert (forall (($generated@@275 T@U) ) (!  (=> (= (type $generated@@275) $generated@@140) (= ($generated@@145 $generated@@275) (= ($generated@@160 $generated@@275) $generated@@61)))
 :pattern ( ($generated@@145 $generated@@275))
)))
(assert (forall (($generated@@276 T@U) ) (!  (=> (= (type $generated@@276) $generated@@140) (= ($generated@@141 $generated@@276) (= ($generated@@160 $generated@@276) $generated@@63)))
 :pattern ( ($generated@@141 $generated@@276))
)))
(assert (forall (($generated@@277 T@U) ) (!  (=> (= (type $generated@@277) $generated@@140) (= ($generated@@263 $generated@@277) (= ($generated@@160 $generated@@277) $generated@@65)))
 :pattern ( ($generated@@263 $generated@@277))
)))
(assert (forall (($generated@@278 T@U) ) (!  (=> (= (type $generated@@278) $generated@@140) (= ($generated@@266 $generated@@278) (= ($generated@@160 $generated@@278) $generated@@67)))
 :pattern ( ($generated@@266 $generated@@278))
)))
(assert (forall (($generated@@279 T@U) ) (!  (=> (and (= (type $generated@@279) $generated@@140) ($generated@@145 $generated@@279)) (exists (($generated@@280 T@U) ($generated@@281 T@U) ) (!  (and (and (= (type $generated@@280) $generated@@155) (= (type $generated@@281) $generated@@155)) (= $generated@@279 ($generated@@229 $generated@@280 $generated@@281)))
 :no-pattern (type $generated@@280)
 :no-pattern (type $generated@@281)
 :no-pattern ($generated $generated@@280)
 :no-pattern ($generated@@0 $generated@@280)
 :no-pattern ($generated $generated@@281)
 :no-pattern ($generated@@0 $generated@@281)
)))
 :pattern ( ($generated@@145 $generated@@279))
)))
(assert  (and (and (forall (($generated@@286 T@T) ) (= ($generated@@1 ($generated@@284 $generated@@286)) 17)) (forall (($generated@@287 T@T) ) (! (= ($generated@@285 ($generated@@284 $generated@@287)) $generated@@287)
 :pattern ( ($generated@@284 $generated@@287))
))) (forall (($generated@@288 T@T) ) (! (= (type ($generated@@282 $generated@@288)) ($generated@@284 $generated@@288))
 :pattern ( ($generated@@282 $generated@@288))
))))
(assert (forall (($generated@@289 T@T) ) (! (= ($generated@@283 ($generated@@282 $generated@@289)) 0)
 :pattern ( ($generated@@282 $generated@@289))
)))
(assert (forall (($generated@@290 T@U) ) (!  (=> (and (= (type $generated@@290) $generated@@140) ($generated@@263 $generated@@290)) (= $generated@@290 $generated@@161))
 :pattern ( ($generated@@263 $generated@@290))
)))
(assert (forall (($generated@@291 T@U) ) (!  (=> (and (= (type $generated@@291) $generated@@140) ($generated@@266 $generated@@291)) (= $generated@@291 $generated@@163))
 :pattern ( ($generated@@266 $generated@@291))
)))
(assert (forall (($generated@@293 T@U) ) (! (= (type ($generated@@292 $generated@@293)) $generated@@155)
 :pattern ( ($generated@@292 $generated@@293))
)))
(assert (forall (($generated@@294 T@U) ($generated@@295 T@U) ) (!  (=> (and (and (= (type $generated@@294) $generated@@140) (= (type $generated@@295) $generated@@140)) true) (= ($generated@@243 $generated@@294 $generated@@295) (= ($generated@@292 $generated@@294) ($generated@@292 $generated@@295))))
 :pattern ( ($generated@@243 $generated@@294 $generated@@295))
)))
(assert (forall (($generated@@297 T@U) ) (! (= (type ($generated@@296 $generated@@297)) $generated@@140)
 :pattern ( ($generated@@296 $generated@@297))
)))
(assert (forall (($generated@@298 T@U) ) (!  (=> (and (= (type $generated@@298) $generated@@140) ($generated@@141 $generated@@298)) (exists (($generated@@299 T@U) ) (!  (and (= (type $generated@@299) $generated@@155) (= $generated@@298 ($generated@@296 $generated@@299)))
 :no-pattern (type $generated@@299)
 :no-pattern ($generated $generated@@299)
 :no-pattern ($generated@@0 $generated@@299)
)))
 :pattern ( ($generated@@141 $generated@@298))
)))
(assert (forall (($generated@@301 T@U) ) (! (= (type ($generated@@300 $generated@@301)) $generated@@155)
 :pattern ( ($generated@@300 $generated@@301))
)))
(assert (forall (($generated@@302 T@U) ($generated@@303 T@U) ($generated@@304 T@U) ) (!  (=> (and (= (type $generated@@303) $generated@@71) (= (type $generated@@304) ($generated@@83 $generated@@84 $generated@@85))) (= ($generated@@269 ($generated@@300 $generated@@302) $generated@@303 $generated@@304) ($generated@@81 $generated@@302 $generated@@303 $generated@@304)))
 :pattern ( ($generated@@269 ($generated@@300 $generated@@302) $generated@@303 $generated@@304))
)))
(assert (forall (($generated@@307 T@T) ) (! (= (type ($generated@@306 $generated@@307)) ($generated@@83 $generated@@307 $generated@@2))
 :pattern ( ($generated@@306 $generated@@307))
)))
(assert (forall (($generated@@308 T@U) ) (! (let (($generated@@309 ($generated@@86 (type $generated@@308))))
 (=> (= (type $generated@@308) ($generated@@83 $generated@@309 $generated@@2)) (and (= (= ($generated@@305 $generated@@308) 0) (= $generated@@308 ($generated@@306 $generated@@309))) (=> (not (= ($generated@@305 $generated@@308) 0)) (exists (($generated@@310 T@U) ) (!  (and (= (type $generated@@310) $generated@@309) (< 0 ($generated ($generated@@88 $generated@@308 $generated@@310))))
 :no-pattern (type $generated@@310)
 :no-pattern ($generated $generated@@310)
 :no-pattern ($generated@@0 $generated@@310)
))))))
 :pattern ( ($generated@@305 $generated@@308))
)))
(assert (forall (($generated@@312 T@U) ) (! (= (type ($generated@@311 $generated@@312)) $generated@@76)
 :pattern ( ($generated@@311 $generated@@312))
)))
(assert (forall (($generated@@313 T@U) ) (!  (=> (= (type $generated@@313) $generated@@71) (and (= ($generated@@79 ($generated@@169 $generated@@313)) $generated@@64) (= ($generated@@311 ($generated@@169 $generated@@313)) $generated@@69)))
 :pattern ( ($generated@@169 $generated@@313))
)))
(assert  (and (and (and (and (forall (($generated@@319 T@T) ($generated@@320 T@T) ) (= ($generated@@1 ($generated@@316 $generated@@319 $generated@@320)) 18)) (forall (($generated@@321 T@T) ($generated@@322 T@T) ) (! (= ($generated@@317 ($generated@@316 $generated@@321 $generated@@322)) $generated@@321)
 :pattern ( ($generated@@316 $generated@@321 $generated@@322))
))) (forall (($generated@@323 T@T) ($generated@@324 T@T) ) (! (= ($generated@@318 ($generated@@316 $generated@@323 $generated@@324)) $generated@@324)
 :pattern ( ($generated@@316 $generated@@323 $generated@@324))
))) (forall (($generated@@325 T@U) ) (! (let (($generated@@326 ($generated@@317 (type $generated@@325))))
(= (type ($generated@@314 $generated@@325)) ($generated@@83 $generated@@326 $generated@@4)))
 :pattern ( ($generated@@314 $generated@@325))
))) (forall (($generated@@327 T@T) ($generated@@328 T@T) ) (! (= (type ($generated@@315 $generated@@327 $generated@@328)) ($generated@@316 $generated@@327 $generated@@328))
 :pattern ( ($generated@@315 $generated@@327 $generated@@328))
))))
(assert (forall (($generated@@329 T@U) ($generated@@330 T@T) ) (! (let (($generated@@331 (type $generated@@329)))
 (not ($generated@@0 ($generated@@88 ($generated@@314 ($generated@@315 $generated@@331 $generated@@330)) $generated@@329))))
 :pattern ( (let (($generated@@331 (type $generated@@329)))
($generated@@88 ($generated@@314 ($generated@@315 $generated@@331 $generated@@330)) $generated@@329)))
)))
(assert  (and (and (and (and (forall (($generated@@337 T@T) ($generated@@338 T@T) ) (= ($generated@@1 ($generated@@334 $generated@@337 $generated@@338)) 19)) (forall (($generated@@339 T@T) ($generated@@340 T@T) ) (! (= ($generated@@335 ($generated@@334 $generated@@339 $generated@@340)) $generated@@339)
 :pattern ( ($generated@@334 $generated@@339 $generated@@340))
))) (forall (($generated@@341 T@T) ($generated@@342 T@T) ) (! (= ($generated@@336 ($generated@@334 $generated@@341 $generated@@342)) $generated@@342)
 :pattern ( ($generated@@334 $generated@@341 $generated@@342))
))) (forall (($generated@@343 T@U) ) (! (let (($generated@@344 ($generated@@335 (type $generated@@343))))
(= (type ($generated@@332 $generated@@343)) ($generated@@83 $generated@@344 $generated@@4)))
 :pattern ( ($generated@@332 $generated@@343))
))) (forall (($generated@@345 T@T) ($generated@@346 T@T) ) (! (= (type ($generated@@333 $generated@@345 $generated@@346)) ($generated@@334 $generated@@345 $generated@@346))
 :pattern ( ($generated@@333 $generated@@345 $generated@@346))
))))
(assert (forall (($generated@@347 T@U) ($generated@@348 T@T) ) (! (let (($generated@@349 (type $generated@@347)))
 (not ($generated@@0 ($generated@@88 ($generated@@332 ($generated@@333 $generated@@349 $generated@@348)) $generated@@347))))
 :pattern ( (let (($generated@@349 (type $generated@@347)))
($generated@@88 ($generated@@332 ($generated@@333 $generated@@349 $generated@@348)) $generated@@347)))
)))
(assert (forall (($generated@@350 T@U) ) (! (let (($generated@@351 ($generated@@86 (type $generated@@350))))
 (=> (= (type $generated@@350) ($generated@@83 $generated@@351 $generated@@2)) (= ($generated@@165 $generated@@350) (forall (($generated@@352 T@U) ) (!  (=> (= (type $generated@@352) $generated@@351) (and (<= 0 ($generated ($generated@@88 $generated@@350 $generated@@352))) (<= ($generated ($generated@@88 $generated@@350 $generated@@352)) ($generated@@305 $generated@@350))))
 :pattern ( ($generated@@88 $generated@@350 $generated@@352))
)))))
 :pattern ( ($generated@@165 $generated@@350))
)))
(assert (forall (($generated@@354 T@T) ($generated@@355 T@U) ) (! (= (type ($generated@@353 $generated@@354 $generated@@355)) $generated@@354)
 :pattern ( ($generated@@353 $generated@@354 $generated@@355))
)))
(assert (forall (($generated@@356 T@U) ) (!  (=> (and (= (type $generated@@356) $generated@@155) ($generated@@230 $generated@@356 $generated@@237)) (and (= ($generated@@300 ($generated@@353 $generated@@140 $generated@@356)) $generated@@356) ($generated@@143 ($generated@@353 $generated@@140 $generated@@356) $generated@@237)))
 :pattern ( ($generated@@230 $generated@@356 $generated@@237))
)))
(assert (forall (($generated@@357 T@U) ) (! (let (($generated@@358 ($generated@@318 (type $generated@@357))))
(let (($generated@@359 ($generated@@317 (type $generated@@357))))
 (=> (= (type $generated@@357) ($generated@@316 $generated@@359 $generated@@358)) (or (= $generated@@357 ($generated@@315 $generated@@359 $generated@@358)) (exists (($generated@@360 T@U) ) (!  (and (= (type $generated@@360) $generated@@359) ($generated@@0 ($generated@@88 ($generated@@314 $generated@@357) $generated@@360)))
 :no-pattern (type $generated@@360)
 :no-pattern ($generated $generated@@360)
 :no-pattern ($generated@@0 $generated@@360)
))))))
 :pattern ( ($generated@@314 $generated@@357))
)))
(assert (forall (($generated@@362 T@U) ) (! (let (($generated@@363 ($generated@@318 (type $generated@@362))))
(= (type ($generated@@361 $generated@@362)) ($generated@@83 $generated@@363 $generated@@4)))
 :pattern ( ($generated@@361 $generated@@362))
)))
(assert (forall (($generated@@364 T@U) ) (! (let (($generated@@365 ($generated@@318 (type $generated@@364))))
(let (($generated@@366 ($generated@@317 (type $generated@@364))))
 (=> (= (type $generated@@364) ($generated@@316 $generated@@366 $generated@@365)) (or (= $generated@@364 ($generated@@315 $generated@@366 $generated@@365)) (exists (($generated@@367 T@U) ) (!  (and (= (type $generated@@367) $generated@@365) ($generated@@0 ($generated@@88 ($generated@@361 $generated@@364) $generated@@367)))
 :no-pattern (type $generated@@367)
 :no-pattern ($generated $generated@@367)
 :no-pattern ($generated@@0 $generated@@367)
))))))
 :pattern ( ($generated@@361 $generated@@364))
)))
(assert (forall (($generated@@368 T@U) ) (! (let (($generated@@369 ($generated@@336 (type $generated@@368))))
(let (($generated@@370 ($generated@@335 (type $generated@@368))))
 (=> (= (type $generated@@368) ($generated@@334 $generated@@370 $generated@@369)) (or (= $generated@@368 ($generated@@333 $generated@@370 $generated@@369)) (exists (($generated@@371 T@U) ) (!  (and (= (type $generated@@371) $generated@@370) ($generated@@0 ($generated@@88 ($generated@@332 $generated@@368) $generated@@371)))
 :no-pattern (type $generated@@371)
 :no-pattern ($generated $generated@@371)
 :no-pattern ($generated@@0 $generated@@371)
))))))
 :pattern ( ($generated@@332 $generated@@368))
)))
(assert (forall (($generated@@373 T@U) ) (! (let (($generated@@374 ($generated@@336 (type $generated@@373))))
(= (type ($generated@@372 $generated@@373)) ($generated@@83 $generated@@374 $generated@@4)))
 :pattern ( ($generated@@372 $generated@@373))
)))
(assert (forall (($generated@@375 T@U) ) (! (let (($generated@@376 ($generated@@336 (type $generated@@375))))
(let (($generated@@377 ($generated@@335 (type $generated@@375))))
 (=> (= (type $generated@@375) ($generated@@334 $generated@@377 $generated@@376)) (or (= $generated@@375 ($generated@@333 $generated@@377 $generated@@376)) (exists (($generated@@378 T@U) ) (!  (and (= (type $generated@@378) $generated@@376) ($generated@@0 ($generated@@88 ($generated@@372 $generated@@375) $generated@@378)))
 :no-pattern (type $generated@@378)
 :no-pattern ($generated $generated@@378)
 :no-pattern ($generated@@0 $generated@@378)
))))))
 :pattern ( ($generated@@372 $generated@@375))
)))
(assert (forall (($generated@@379 T@U) ($generated@@380 T@U) ) (!  (=> (and (= (type $generated@@379) ($generated@@83 $generated@@155 $generated@@2)) (= (type $generated@@380) $generated@@71)) (= ($generated@@143 $generated@@379 ($generated@@164 $generated@@380)) (forall (($generated@@381 T@U) ) (!  (=> (and (= (type $generated@@381) $generated@@155) (< 0 ($generated ($generated@@88 $generated@@379 $generated@@381)))) ($generated@@230 $generated@@381 $generated@@380))
 :pattern ( ($generated@@88 $generated@@379 $generated@@381))
))))
 :pattern ( ($generated@@143 $generated@@379 ($generated@@164 $generated@@380)))
)))
(assert (forall (($generated@@382 T@U) ($generated@@383 T@U) ($generated@@384 T@U) ) (!  (=> (and (and (and (= (type $generated@@382) $generated@@71) (= (type $generated@@383) $generated@@155)) (= (type $generated@@384) ($generated@@83 $generated@@84 $generated@@85))) ($generated@@238 $generated@@384)) (= ($generated@@81 ($generated@@296 $generated@@383) ($generated@@169 $generated@@382) $generated@@384) ($generated@@269 $generated@@383 $generated@@382 $generated@@384)))
 :pattern ( ($generated@@81 ($generated@@296 $generated@@383) ($generated@@169 $generated@@382) $generated@@384))
)))
(assert (forall (($generated@@386 T@U) ) (!  (=> (and (= (type $generated@@386) $generated@@140) ($generated@@385 $generated@@386)) (or ($generated@@263 $generated@@386) ($generated@@266 $generated@@386)))
 :pattern ( ($generated@@385 $generated@@386))
)))
(assert (forall (($generated@@387 T@U) ($generated@@388 T@U) ($generated@@389 T@U) ) (!  (=> (and (and (= (type $generated@@387) ($generated@@83 $generated@@155 $generated@@4)) (= (type $generated@@388) $generated@@71)) (= (type $generated@@389) ($generated@@83 $generated@@84 $generated@@85))) (= ($generated@@81 $generated@@387 ($generated@@249 $generated@@388) $generated@@389) (forall (($generated@@390 T@U) ) (!  (=> (and (= (type $generated@@390) $generated@@155) ($generated@@0 ($generated@@88 $generated@@387 $generated@@390))) ($generated@@269 $generated@@390 $generated@@388 $generated@@389))
 :pattern ( ($generated@@88 $generated@@387 $generated@@390))
))))
 :pattern ( ($generated@@81 $generated@@387 ($generated@@249 $generated@@388) $generated@@389))
)))
(assert (forall (($generated@@391 T@U) ($generated@@392 T@U) ($generated@@393 T@U) ) (!  (=> (and (and (= (type $generated@@391) ($generated@@83 $generated@@155 $generated@@4)) (= (type $generated@@392) $generated@@71)) (= (type $generated@@393) ($generated@@83 $generated@@84 $generated@@85))) (= ($generated@@81 $generated@@391 ($generated@@254 $generated@@392) $generated@@393) (forall (($generated@@394 T@U) ) (!  (=> (and (= (type $generated@@394) $generated@@155) ($generated@@0 ($generated@@88 $generated@@391 $generated@@394))) ($generated@@269 $generated@@394 $generated@@392 $generated@@393))
 :pattern ( ($generated@@88 $generated@@391 $generated@@394))
))))
 :pattern ( ($generated@@81 $generated@@391 ($generated@@254 $generated@@392) $generated@@393))
)))
(assert (forall (($generated@@395 T@U) ) (! (let (($generated@@396 (type $generated@@395)))
(= ($generated ($generated@@88 ($generated@@306 $generated@@396) $generated@@395)) 0))
 :pattern ( (let (($generated@@396 (type $generated@@395)))
($generated@@88 ($generated@@306 $generated@@396) $generated@@395)))
)))
(assert  (and (forall (($generated@@399 T@U) ) (! (= (type ($generated@@397 $generated@@399)) ($generated@@83 $generated@@155 $generated@@4))
 :pattern ( ($generated@@397 $generated@@399))
)) (forall (($generated@@400 T@U) ) (! (let (($generated@@401 ($generated@@318 (type $generated@@400))))
(let (($generated@@402 ($generated@@317 (type $generated@@400))))
(= (type ($generated@@398 $generated@@400)) ($generated@@83 $generated@@402 $generated@@401))))
 :pattern ( ($generated@@398 $generated@@400))
))))
(assert (forall (($generated@@403 T@U) ($generated@@404 T@U) ) (!  (=> (and (= (type $generated@@403) ($generated@@316 $generated@@155 $generated@@155)) (= (type $generated@@404) $generated@@155)) (= ($generated@@0 ($generated@@88 ($generated@@397 $generated@@403) $generated@@404))  (and ($generated@@0 ($generated@@88 ($generated@@314 $generated@@403) ($generated@@153 ($generated@@353 $generated@@140 $generated@@404)))) (= ($generated@@88 ($generated@@398 $generated@@403) ($generated@@153 ($generated@@353 $generated@@140 $generated@@404))) ($generated@@154 ($generated@@353 $generated@@140 $generated@@404))))))
 :pattern ( ($generated@@88 ($generated@@397 $generated@@403) $generated@@404))
)))
(assert  (and (forall (($generated@@407 T@U) ) (! (= (type ($generated@@405 $generated@@407)) ($generated@@83 $generated@@155 $generated@@4))
 :pattern ( ($generated@@405 $generated@@407))
)) (forall (($generated@@408 T@U) ) (! (let (($generated@@409 ($generated@@336 (type $generated@@408))))
(let (($generated@@410 ($generated@@335 (type $generated@@408))))
(= (type ($generated@@406 $generated@@408)) ($generated@@83 $generated@@410 $generated@@409))))
 :pattern ( ($generated@@406 $generated@@408))
))))
(assert (forall (($generated@@411 T@U) ($generated@@412 T@U) ) (!  (=> (and (= (type $generated@@411) ($generated@@334 $generated@@155 $generated@@155)) (= (type $generated@@412) $generated@@155)) (= ($generated@@0 ($generated@@88 ($generated@@405 $generated@@411) $generated@@412))  (and ($generated@@0 ($generated@@88 ($generated@@332 $generated@@411) ($generated@@153 ($generated@@353 $generated@@140 $generated@@412)))) (= ($generated@@88 ($generated@@406 $generated@@411) ($generated@@153 ($generated@@353 $generated@@140 $generated@@412))) ($generated@@154 ($generated@@353 $generated@@140 $generated@@412))))))
 :pattern ( ($generated@@88 ($generated@@405 $generated@@411) $generated@@412))
)))
(assert (forall (($generated@@413 T@U) ($generated@@414 T@U) ) (! (let (($generated@@415 (type $generated@@414)))
(let (($generated@@416 ($generated@@317 (type $generated@@413))))
 (=> (= (type $generated@@413) ($generated@@316 $generated@@416 $generated@@415)) (= ($generated@@0 ($generated@@88 ($generated@@361 $generated@@413) $generated@@414)) (exists (($generated@@417 T@U) ) (!  (and (= (type $generated@@417) $generated@@416) (and ($generated@@0 ($generated@@88 ($generated@@314 $generated@@413) $generated@@417)) (= $generated@@414 ($generated@@88 ($generated@@398 $generated@@413) $generated@@417))))
 :pattern ( ($generated@@88 ($generated@@314 $generated@@413) $generated@@417))
 :pattern ( ($generated@@88 ($generated@@398 $generated@@413) $generated@@417))
))))))
 :pattern ( ($generated@@88 ($generated@@361 $generated@@413) $generated@@414))
)))
(assert (forall (($generated@@418 T@U) ($generated@@419 T@U) ) (! (let (($generated@@420 (type $generated@@419)))
(let (($generated@@421 ($generated@@335 (type $generated@@418))))
 (=> (= (type $generated@@418) ($generated@@334 $generated@@421 $generated@@420)) (= ($generated@@0 ($generated@@88 ($generated@@372 $generated@@418) $generated@@419)) (exists (($generated@@422 T@U) ) (!  (and (= (type $generated@@422) $generated@@421) (and ($generated@@0 ($generated@@88 ($generated@@332 $generated@@418) $generated@@422)) (= $generated@@419 ($generated@@88 ($generated@@406 $generated@@418) $generated@@422))))
 :pattern ( ($generated@@88 ($generated@@332 $generated@@418) $generated@@422))
 :pattern ( ($generated@@88 ($generated@@406 $generated@@418) $generated@@422))
))))))
 :pattern ( ($generated@@88 ($generated@@372 $generated@@418) $generated@@419))
)))
(assert (forall (($generated@@424 T@U) ($generated@@425 T@U) ) (! (= (type ($generated@@423 $generated@@424 $generated@@425)) $generated@@71)
 :pattern ( ($generated@@423 $generated@@424 $generated@@425))
)))
(assert (forall (($generated@@426 T@U) ($generated@@427 T@U) ($generated@@428 T@U) ($generated@@429 T@U) ) (!  (=> (and (and (and (= (type $generated@@426) ($generated@@316 $generated@@155 $generated@@155)) (= (type $generated@@427) $generated@@71)) (= (type $generated@@428) $generated@@71)) (= (type $generated@@429) ($generated@@83 $generated@@84 $generated@@85))) (= ($generated@@81 $generated@@426 ($generated@@423 $generated@@427 $generated@@428) $generated@@429) (forall (($generated@@430 T@U) ) (!  (=> (and (= (type $generated@@430) $generated@@155) ($generated@@0 ($generated@@88 ($generated@@314 $generated@@426) $generated@@430))) (and ($generated@@269 ($generated@@88 ($generated@@398 $generated@@426) $generated@@430) $generated@@428 $generated@@429) ($generated@@269 $generated@@430 $generated@@427 $generated@@429)))
 :pattern ( ($generated@@88 ($generated@@398 $generated@@426) $generated@@430))
 :pattern ( ($generated@@88 ($generated@@314 $generated@@426) $generated@@430))
))))
 :pattern ( ($generated@@81 $generated@@426 ($generated@@423 $generated@@427 $generated@@428) $generated@@429))
)))
(assert (forall (($generated@@432 T@U) ($generated@@433 T@U) ) (! (= (type ($generated@@431 $generated@@432 $generated@@433)) $generated@@71)
 :pattern ( ($generated@@431 $generated@@432 $generated@@433))
)))
(assert (forall (($generated@@434 T@U) ($generated@@435 T@U) ($generated@@436 T@U) ($generated@@437 T@U) ) (!  (=> (and (and (and (= (type $generated@@434) ($generated@@334 $generated@@155 $generated@@155)) (= (type $generated@@435) $generated@@71)) (= (type $generated@@436) $generated@@71)) (= (type $generated@@437) ($generated@@83 $generated@@84 $generated@@85))) (= ($generated@@81 $generated@@434 ($generated@@431 $generated@@435 $generated@@436) $generated@@437) (forall (($generated@@438 T@U) ) (!  (=> (and (= (type $generated@@438) $generated@@155) ($generated@@0 ($generated@@88 ($generated@@332 $generated@@434) $generated@@438))) (and ($generated@@269 ($generated@@88 ($generated@@406 $generated@@434) $generated@@438) $generated@@436 $generated@@437) ($generated@@269 $generated@@438 $generated@@435 $generated@@437)))
 :pattern ( ($generated@@88 ($generated@@406 $generated@@434) $generated@@438))
 :pattern ( ($generated@@88 ($generated@@332 $generated@@434) $generated@@438))
))))
 :pattern ( ($generated@@81 $generated@@434 ($generated@@431 $generated@@435 $generated@@436) $generated@@437))
)))
(assert (forall (($generated@@439 T@U) ) (!  (=> (and (= (type $generated@@439) $generated@@140) ($generated@@143 $generated@@439 $generated@@237)) (or ($generated@@263 $generated@@439) ($generated@@266 $generated@@439)))
 :pattern ( ($generated@@266 $generated@@439) ($generated@@143 $generated@@439 $generated@@237))
 :pattern ( ($generated@@263 $generated@@439) ($generated@@143 $generated@@439 $generated@@237))
)))
(assert (forall (($generated@@441 T@T) ) (! (= (type ($generated@@440 $generated@@441)) ($generated@@83 $generated@@441 $generated@@4))
 :pattern ( ($generated@@440 $generated@@441))
)))
(assert (forall (($generated@@442 T@U) ) (! (let (($generated@@443 ($generated@@336 (type $generated@@442))))
(let (($generated@@444 ($generated@@335 (type $generated@@442))))
 (=> (= (type $generated@@442) ($generated@@334 $generated@@444 $generated@@443)) (= (= $generated@@442 ($generated@@333 $generated@@444 $generated@@443)) (= ($generated@@332 $generated@@442) ($generated@@440 $generated@@444))))))
 :pattern ( ($generated@@332 $generated@@442))
)))
(assert (forall (($generated@@445 T@U) ) (! (let (($generated@@446 ($generated@@336 (type $generated@@445))))
(let (($generated@@447 ($generated@@335 (type $generated@@445))))
 (=> (= (type $generated@@445) ($generated@@334 $generated@@447 $generated@@446)) (= (= $generated@@445 ($generated@@333 $generated@@447 $generated@@446)) (= ($generated@@372 $generated@@445) ($generated@@440 $generated@@446))))))
 :pattern ( ($generated@@372 $generated@@445))
)))
(assert (forall (($generated@@448 T@U) ) (! (let (($generated@@449 ($generated@@336 (type $generated@@448))))
(let (($generated@@450 ($generated@@335 (type $generated@@448))))
 (=> (= (type $generated@@448) ($generated@@334 $generated@@450 $generated@@449)) (= (= $generated@@448 ($generated@@333 $generated@@450 $generated@@449)) (= ($generated@@405 $generated@@448) ($generated@@440 $generated@@155))))))
 :pattern ( ($generated@@405 $generated@@448))
)))
(assert (forall (($generated@@451 T@U) ) (! (let (($generated@@452 ($generated@@318 (type $generated@@451))))
(let (($generated@@453 ($generated@@317 (type $generated@@451))))
 (=> (= (type $generated@@451) ($generated@@316 $generated@@453 $generated@@452)) (or (= $generated@@451 ($generated@@315 $generated@@453 $generated@@452)) (exists (($generated@@454 T@U) ($generated@@455 T@U) ) (!  (and (and (= (type $generated@@454) $generated@@155) (= (type $generated@@455) $generated@@155)) ($generated@@0 ($generated@@88 ($generated@@397 $generated@@451) ($generated@@300 ($generated@@229 $generated@@454 $generated@@455)))))
 :no-pattern (type $generated@@454)
 :no-pattern (type $generated@@455)
 :no-pattern ($generated $generated@@454)
 :no-pattern ($generated@@0 $generated@@454)
 :no-pattern ($generated $generated@@455)
 :no-pattern ($generated@@0 $generated@@455)
))))))
 :pattern ( ($generated@@397 $generated@@451))
)))
(assert (forall (($generated@@456 T@U) ) (! (let (($generated@@457 ($generated@@336 (type $generated@@456))))
(let (($generated@@458 ($generated@@335 (type $generated@@456))))
 (=> (= (type $generated@@456) ($generated@@334 $generated@@458 $generated@@457)) (or (= $generated@@456 ($generated@@333 $generated@@458 $generated@@457)) (exists (($generated@@459 T@U) ($generated@@460 T@U) ) (!  (and (and (= (type $generated@@459) $generated@@155) (= (type $generated@@460) $generated@@155)) ($generated@@0 ($generated@@88 ($generated@@405 $generated@@456) ($generated@@300 ($generated@@229 $generated@@459 $generated@@460)))))
 :no-pattern (type $generated@@459)
 :no-pattern (type $generated@@460)
 :no-pattern ($generated $generated@@459)
 :no-pattern ($generated@@0 $generated@@459)
 :no-pattern ($generated $generated@@460)
 :no-pattern ($generated@@0 $generated@@460)
))))))
 :pattern ( ($generated@@405 $generated@@456))
)))
(assert (forall (($generated@@461 T@U) ) (!  (=> (and (= (type $generated@@461) $generated@@155) ($generated@@230 $generated@@461 $generated@@46)) (and (= ($generated@@300 ($generated@@353 $generated@@2 $generated@@461)) $generated@@461) ($generated@@143 ($generated@@353 $generated@@2 $generated@@461) $generated@@46)))
 :pattern ( ($generated@@230 $generated@@461 $generated@@46))
)))
(assert (forall (($generated@@462 T@U) ) (!  (=> (and (= (type $generated@@462) $generated@@155) ($generated@@230 $generated@@462 $generated@@47)) (and (= ($generated@@300 ($generated@@353 $generated@@3 $generated@@462)) $generated@@462) ($generated@@143 ($generated@@353 $generated@@3 $generated@@462) $generated@@47)))
 :pattern ( ($generated@@230 $generated@@462 $generated@@47))
)))
(assert (forall (($generated@@463 T@U) ) (!  (=> (and (= (type $generated@@463) $generated@@155) ($generated@@230 $generated@@463 $generated@@44)) (and (= ($generated@@300 ($generated@@353 $generated@@4 $generated@@463)) $generated@@463) ($generated@@143 ($generated@@353 $generated@@4 $generated@@463) $generated@@44)))
 :pattern ( ($generated@@230 $generated@@463 $generated@@44))
)))
(assert (= ($generated@@1 $generated@@464) 20))
(assert (forall (($generated@@465 T@U) ) (!  (=> (and (= (type $generated@@465) $generated@@155) ($generated@@230 $generated@@465 $generated@@45)) (and (= ($generated@@300 ($generated@@353 $generated@@464 $generated@@465)) $generated@@465) ($generated@@143 ($generated@@353 $generated@@464 $generated@@465) $generated@@45)))
 :pattern ( ($generated@@230 $generated@@465 $generated@@45))
)))
(assert (forall (($generated@@466 T@U) ($generated@@467 T@U) ) (!  (=> (= (type $generated@@467) $generated@@71) (= ($generated@@230 ($generated@@300 $generated@@466) $generated@@467) ($generated@@143 $generated@@466 $generated@@467)))
 :pattern ( ($generated@@230 ($generated@@300 $generated@@466) $generated@@467))
)))
(assert (forall (($generated@@468 T@U) ) (! (let (($generated@@469 ($generated@@86 (type $generated@@468))))
 (=> (= (type $generated@@468) ($generated@@83 $generated@@469 $generated@@2)) (<= 0 ($generated@@305 $generated@@468))))
 :pattern ( ($generated@@305 $generated@@468))
)))
(assert (forall (($generated@@470 T@U) ) (! (let (($generated@@471 ($generated@@285 (type $generated@@470))))
 (=> (= (type $generated@@470) ($generated@@284 $generated@@471)) (<= 0 ($generated@@283 $generated@@470))))
 :pattern ( ($generated@@283 $generated@@470))
)))
(assert (forall (($generated@@473 T@U) ) (! (= (type ($generated@@472 $generated@@473)) $generated@@71)
 :pattern ( ($generated@@472 $generated@@473))
)))
(assert (forall (($generated@@474 T@U) ($generated@@475 T@U) ) (!  (=> (and (= (type $generated@@474) $generated@@71) (= (type $generated@@475) $generated@@71)) (= ($generated@@472 ($generated@@423 $generated@@474 $generated@@475)) $generated@@474))
 :pattern ( ($generated@@423 $generated@@474 $generated@@475))
)))
(assert (forall (($generated@@477 T@U) ) (! (= (type ($generated@@476 $generated@@477)) $generated@@71)
 :pattern ( ($generated@@476 $generated@@477))
)))
(assert (forall (($generated@@478 T@U) ($generated@@479 T@U) ) (!  (=> (and (= (type $generated@@478) $generated@@71) (= (type $generated@@479) $generated@@71)) (= ($generated@@476 ($generated@@423 $generated@@478 $generated@@479)) $generated@@479))
 :pattern ( ($generated@@423 $generated@@478 $generated@@479))
)))
(assert (forall (($generated@@480 T@U) ($generated@@481 T@U) ) (!  (=> (and (= (type $generated@@480) $generated@@71) (= (type $generated@@481) $generated@@71)) (= ($generated@@79 ($generated@@423 $generated@@480 $generated@@481)) $generated@@58))
 :pattern ( ($generated@@423 $generated@@480 $generated@@481))
)))
(assert (forall (($generated@@483 T@U) ) (! (= (type ($generated@@482 $generated@@483)) $generated@@71)
 :pattern ( ($generated@@482 $generated@@483))
)))
(assert (forall (($generated@@484 T@U) ($generated@@485 T@U) ) (!  (=> (and (= (type $generated@@484) $generated@@71) (= (type $generated@@485) $generated@@71)) (= ($generated@@482 ($generated@@431 $generated@@484 $generated@@485)) $generated@@484))
 :pattern ( ($generated@@431 $generated@@484 $generated@@485))
)))
(assert (forall (($generated@@487 T@U) ) (! (= (type ($generated@@486 $generated@@487)) $generated@@71)
 :pattern ( ($generated@@486 $generated@@487))
)))
(assert (forall (($generated@@488 T@U) ($generated@@489 T@U) ) (!  (=> (and (= (type $generated@@488) $generated@@71) (= (type $generated@@489) $generated@@71)) (= ($generated@@486 ($generated@@431 $generated@@488 $generated@@489)) $generated@@489))
 :pattern ( ($generated@@431 $generated@@488 $generated@@489))
)))
(assert (forall (($generated@@490 T@U) ($generated@@491 T@U) ) (!  (=> (and (= (type $generated@@490) $generated@@71) (= (type $generated@@491) $generated@@71)) (= ($generated@@79 ($generated@@431 $generated@@490 $generated@@491)) $generated@@59))
 :pattern ( ($generated@@431 $generated@@490 $generated@@491))
)))
(assert (forall (($generated@@492 T@U) ($generated@@493 T@U) ) (!  (=> (and (= (type $generated@@492) $generated@@155) (= (type $generated@@493) $generated@@155)) (= ($generated@@160 ($generated@@229 $generated@@492 $generated@@493)) $generated@@61))
 :pattern ( ($generated@@229 $generated@@492 $generated@@493))
)))
(assert (forall (($generated@@495 T@U) ) (! (= (type ($generated@@494 $generated@@495)) $generated@@71)
 :pattern ( ($generated@@494 $generated@@495))
)))
(assert (forall (($generated@@496 T@U) ($generated@@497 T@U) ) (!  (=> (and (= (type $generated@@496) $generated@@71) (= (type $generated@@497) $generated@@71)) (= ($generated@@494 ($generated@@146 $generated@@496 $generated@@497)) $generated@@496))
 :pattern ( ($generated@@146 $generated@@496 $generated@@497))
)))
(assert (forall (($generated@@499 T@U) ) (! (= (type ($generated@@498 $generated@@499)) $generated@@71)
 :pattern ( ($generated@@498 $generated@@499))
)))
(assert (forall (($generated@@500 T@U) ($generated@@501 T@U) ) (!  (=> (and (= (type $generated@@500) $generated@@71) (= (type $generated@@501) $generated@@71)) (= ($generated@@498 ($generated@@146 $generated@@500 $generated@@501)) $generated@@501))
 :pattern ( ($generated@@146 $generated@@500 $generated@@501))
)))
(assert (forall (($generated@@502 T@U) ($generated@@503 T@U) ) (!  (=> (and (= (type $generated@@502) $generated@@155) (= (type $generated@@503) $generated@@155)) (= ($generated@@153 ($generated@@229 $generated@@502 $generated@@503)) $generated@@502))
 :pattern ( ($generated@@229 $generated@@502 $generated@@503))
)))
(assert (forall (($generated@@504 T@U) ($generated@@505 T@U) ) (!  (=> (and (= (type $generated@@504) $generated@@155) (= (type $generated@@505) $generated@@155)) (= ($generated@@154 ($generated@@229 $generated@@504 $generated@@505)) $generated@@505))
 :pattern ( ($generated@@229 $generated@@504 $generated@@505))
)))
(assert  (and (forall (($generated@@508 T@U) ) (! (= (type ($generated@@506 $generated@@508)) $generated@@71)
 :pattern ( ($generated@@506 $generated@@508))
)) (forall (($generated@@509 T@U) ($generated@@510 Int) ) (! (let (($generated@@511 ($generated@@285 (type $generated@@509))))
(= (type ($generated@@507 $generated@@509 $generated@@510)) $generated@@511))
 :pattern ( ($generated@@507 $generated@@509 $generated@@510))
))))
(assert (forall (($generated@@512 T@U) ($generated@@513 T@U) ($generated@@514 T@U) ) (!  (=> (and (and (= (type $generated@@512) ($generated@@284 $generated@@155)) (= (type $generated@@513) $generated@@71)) (= (type $generated@@514) ($generated@@83 $generated@@84 $generated@@85))) (= ($generated@@81 $generated@@512 ($generated@@506 $generated@@513) $generated@@514) (forall (($generated@@515 Int) ) (!  (=> (and (<= 0 $generated@@515) (< $generated@@515 ($generated@@283 $generated@@512))) ($generated@@269 ($generated@@507 $generated@@512 $generated@@515) $generated@@513 $generated@@514))
 :pattern ( ($generated@@507 $generated@@512 $generated@@515))
))))
 :pattern ( ($generated@@81 $generated@@512 ($generated@@506 $generated@@513) $generated@@514))
)))
(assert (forall (($generated@@517 Int) ) (! (= ($generated@@516 ($generated@@82 $generated@@517)) $generated@@517)
 :pattern ( ($generated@@82 $generated@@517))
)))
(assert (forall (($generated@@519 T@U) ) (! (= (type ($generated@@518 $generated@@519)) $generated@@71)
 :pattern ( ($generated@@518 $generated@@519))
)))
(assert (forall (($generated@@520 T@U) ) (!  (=> (= (type $generated@@520) $generated@@71) (= ($generated@@518 ($generated@@249 $generated@@520)) $generated@@520))
 :pattern ( ($generated@@249 $generated@@520))
)))
(assert (forall (($generated@@521 T@U) ) (!  (=> (= (type $generated@@521) $generated@@71) (= ($generated@@79 ($generated@@249 $generated@@521)) $generated@@54))
 :pattern ( ($generated@@249 $generated@@521))
)))
(assert (forall (($generated@@523 T@U) ) (! (= (type ($generated@@522 $generated@@523)) $generated@@71)
 :pattern ( ($generated@@522 $generated@@523))
)))
(assert (forall (($generated@@524 T@U) ) (!  (=> (= (type $generated@@524) $generated@@71) (= ($generated@@522 ($generated@@254 $generated@@524)) $generated@@524))
 :pattern ( ($generated@@254 $generated@@524))
)))
(assert (forall (($generated@@525 T@U) ) (!  (=> (= (type $generated@@525) $generated@@71) (= ($generated@@79 ($generated@@254 $generated@@525)) $generated@@55))
 :pattern ( ($generated@@254 $generated@@525))
)))
(assert (forall (($generated@@527 T@U) ) (! (= (type ($generated@@526 $generated@@527)) $generated@@71)
 :pattern ( ($generated@@526 $generated@@527))
)))
(assert (forall (($generated@@528 T@U) ) (!  (=> (= (type $generated@@528) $generated@@71) (= ($generated@@526 ($generated@@164 $generated@@528)) $generated@@528))
 :pattern ( ($generated@@164 $generated@@528))
)))
(assert (forall (($generated@@529 T@U) ) (!  (=> (= (type $generated@@529) $generated@@71) (= ($generated@@79 ($generated@@164 $generated@@529)) $generated@@56))
 :pattern ( ($generated@@164 $generated@@529))
)))
(assert (forall (($generated@@531 T@U) ) (! (= (type ($generated@@530 $generated@@531)) $generated@@71)
 :pattern ( ($generated@@530 $generated@@531))
)))
(assert (forall (($generated@@532 T@U) ) (!  (=> (= (type $generated@@532) $generated@@71) (= ($generated@@530 ($generated@@506 $generated@@532)) $generated@@532))
 :pattern ( ($generated@@506 $generated@@532))
)))
(assert (forall (($generated@@533 T@U) ) (!  (=> (= (type $generated@@533) $generated@@71) (= ($generated@@79 ($generated@@506 $generated@@533)) $generated@@57))
 :pattern ( ($generated@@506 $generated@@533))
)))
(assert (forall (($generated@@534 T@U) ) (!  (=> (= (type $generated@@534) $generated@@155) (= ($generated@@160 ($generated@@296 $generated@@534)) $generated@@63))
 :pattern ( ($generated@@296 $generated@@534))
)))
(assert (forall (($generated@@536 T@U) ) (! (= (type ($generated@@535 $generated@@536)) $generated@@71)
 :pattern ( ($generated@@535 $generated@@536))
)))
(assert (forall (($generated@@537 T@U) ) (!  (=> (= (type $generated@@537) $generated@@71) (= ($generated@@535 ($generated@@169 $generated@@537)) $generated@@537))
 :pattern ( ($generated@@169 $generated@@537))
)))
(assert (forall (($generated@@538 T@U) ) (!  (=> (= (type $generated@@538) $generated@@155) (= ($generated@@292 ($generated@@296 $generated@@538)) $generated@@538))
 :pattern ( ($generated@@296 $generated@@538))
)))
(assert (forall (($generated@@539 T@U) ) (! (let (($generated@@540 (type $generated@@539)))
(= ($generated@@353 $generated@@540 ($generated@@300 $generated@@539)) $generated@@539))
 :pattern ( ($generated@@300 $generated@@539))
)))
(assert (forall (($generated@@541 T@U) ($generated@@542 T@U) ($generated@@543 T@U) ) (!  (=> (and (and (= (type $generated@@541) ($generated@@316 $generated@@155 $generated@@155)) (= (type $generated@@542) $generated@@71)) (= (type $generated@@543) $generated@@71)) (= ($generated@@143 $generated@@541 ($generated@@423 $generated@@542 $generated@@543)) (forall (($generated@@544 T@U) ) (!  (=> (and (= (type $generated@@544) $generated@@155) ($generated@@0 ($generated@@88 ($generated@@314 $generated@@541) $generated@@544))) (and ($generated@@230 ($generated@@88 ($generated@@398 $generated@@541) $generated@@544) $generated@@543) ($generated@@230 $generated@@544 $generated@@542)))
 :pattern ( ($generated@@88 ($generated@@398 $generated@@541) $generated@@544))
 :pattern ( ($generated@@88 ($generated@@314 $generated@@541) $generated@@544))
))))
 :pattern ( ($generated@@143 $generated@@541 ($generated@@423 $generated@@542 $generated@@543)))
)))
(assert (forall (($generated@@545 T@U) ($generated@@546 T@U) ($generated@@547 T@U) ) (!  (=> (and (and (= (type $generated@@545) ($generated@@334 $generated@@155 $generated@@155)) (= (type $generated@@546) $generated@@71)) (= (type $generated@@547) $generated@@71)) (= ($generated@@143 $generated@@545 ($generated@@431 $generated@@546 $generated@@547)) (forall (($generated@@548 T@U) ) (!  (=> (and (= (type $generated@@548) $generated@@155) ($generated@@0 ($generated@@88 ($generated@@332 $generated@@545) $generated@@548))) (and ($generated@@230 ($generated@@88 ($generated@@406 $generated@@545) $generated@@548) $generated@@547) ($generated@@230 $generated@@548 $generated@@546)))
 :pattern ( ($generated@@88 ($generated@@406 $generated@@545) $generated@@548))
 :pattern ( ($generated@@88 ($generated@@332 $generated@@545) $generated@@548))
))))
 :pattern ( ($generated@@143 $generated@@545 ($generated@@431 $generated@@546 $generated@@547)))
)))
(assert (forall (($generated@@549 T@U) ($generated@@550 T@U) ) (!  (=> (and (= (type $generated@@549) $generated@@71) (= (type $generated@@550) $generated@@155)) (= ($generated@@143 ($generated@@296 $generated@@550) ($generated@@169 $generated@@549)) ($generated@@230 $generated@@550 $generated@@549)))
 :pattern ( ($generated@@143 ($generated@@296 $generated@@550) ($generated@@169 $generated@@549)))
)))
(assert (forall (($generated@@553 T@U) ($generated@@554 T@U) ) (!  (=> (and (= (type $generated@@553) $generated@@155) (= (type $generated@@554) $generated@@155)) (< ($generated@@551 $generated@@553) ($generated@@552 ($generated@@229 $generated@@553 $generated@@554))))
 :pattern ( ($generated@@229 $generated@@553 $generated@@554))
)))
(assert (forall (($generated@@555 T@U) ($generated@@556 T@U) ) (!  (=> (and (= (type $generated@@555) $generated@@155) (= (type $generated@@556) $generated@@155)) (< ($generated@@551 $generated@@556) ($generated@@552 ($generated@@229 $generated@@555 $generated@@556))))
 :pattern ( ($generated@@229 $generated@@555 $generated@@556))
)))
(assert (forall (($generated@@557 T@U) ($generated@@558 T@U) ($generated@@559 T@U) ) (!  (=> (and (and (and (= (type $generated@@557) $generated@@155) (= (type $generated@@558) $generated@@71)) (= (type $generated@@559) $generated@@71)) ($generated@@230 $generated@@557 ($generated@@423 $generated@@558 $generated@@559))) (and (= ($generated@@300 ($generated@@353 ($generated@@316 $generated@@155 $generated@@155) $generated@@557)) $generated@@557) ($generated@@143 ($generated@@353 ($generated@@316 $generated@@155 $generated@@155) $generated@@557) ($generated@@423 $generated@@558 $generated@@559))))
 :pattern ( ($generated@@230 $generated@@557 ($generated@@423 $generated@@558 $generated@@559)))
)))
(assert (forall (($generated@@560 T@U) ($generated@@561 T@U) ($generated@@562 T@U) ) (!  (=> (and (and (and (= (type $generated@@560) $generated@@155) (= (type $generated@@561) $generated@@71)) (= (type $generated@@562) $generated@@71)) ($generated@@230 $generated@@560 ($generated@@431 $generated@@561 $generated@@562))) (and (= ($generated@@300 ($generated@@353 ($generated@@334 $generated@@155 $generated@@155) $generated@@560)) $generated@@560) ($generated@@143 ($generated@@353 ($generated@@334 $generated@@155 $generated@@155) $generated@@560) ($generated@@431 $generated@@561 $generated@@562))))
 :pattern ( ($generated@@230 $generated@@560 ($generated@@431 $generated@@561 $generated@@562)))
)))
(assert (forall (($generated@@563 T@U) ($generated@@564 T@U) ($generated@@565 T@U) ) (!  (=> (and (and (and (= (type $generated@@563) $generated@@71) (= (type $generated@@564) $generated@@71)) (= (type $generated@@565) $generated@@155)) ($generated@@230 $generated@@565 ($generated@@146 $generated@@563 $generated@@564))) (and (= ($generated@@300 ($generated@@353 $generated@@140 $generated@@565)) $generated@@565) ($generated@@143 ($generated@@353 $generated@@140 $generated@@565) ($generated@@146 $generated@@563 $generated@@564))))
 :pattern ( ($generated@@230 $generated@@565 ($generated@@146 $generated@@563 $generated@@564)))
)))
(assert (forall (($generated@@566 T@U) ) (!  (=> (= (type $generated@@566) $generated@@155) (< ($generated@@551 $generated@@566) ($generated@@552 ($generated@@296 $generated@@566))))
 :pattern ( ($generated@@296 $generated@@566))
)))
(assert (forall (($generated@@567 T@U) ($generated@@568 T@U) ($generated@@569 T@U) ) (!  (=> (and (and (and (= (type $generated@@567) $generated@@140) (= (type $generated@@568) $generated@@71)) (= (type $generated@@569) ($generated@@83 $generated@@84 $generated@@85))) (and ($generated@@238 $generated@@569) (and ($generated@@141 $generated@@567) ($generated@@81 $generated@@567 ($generated@@169 $generated@@568) $generated@@569)))) ($generated@@269 ($generated@@292 $generated@@567) $generated@@568 $generated@@569))
 :pattern ( ($generated@@269 ($generated@@292 $generated@@567) $generated@@568 $generated@@569))
)))
(assert (forall (($generated@@570 T@U) ) (! (let (($generated@@571 (type $generated@@570)))
 (not ($generated@@0 ($generated@@88 ($generated@@440 $generated@@571) $generated@@570))))
 :pattern ( (let (($generated@@571 (type $generated@@570)))
($generated@@88 ($generated@@440 $generated@@571) $generated@@570)))
)))
(assert (forall (($generated@@572 T@U) ($generated@@573 T@U) ) (!  (=> (and (= (type $generated@@572) $generated@@71) (= (type $generated@@573) $generated@@71)) (and (= ($generated@@79 ($generated@@146 $generated@@572 $generated@@573)) $generated@@62) (= ($generated@@311 ($generated@@146 $generated@@572 $generated@@573)) $generated@@68)))
 :pattern ( ($generated@@146 $generated@@572 $generated@@573))
)))
(assert (forall (($generated@@574 T@U) ) (!  (=> (= (type $generated@@574) $generated@@140) (= ($generated@@551 ($generated@@300 $generated@@574)) ($generated@@552 $generated@@574)))
 :pattern ( ($generated@@551 ($generated@@300 $generated@@574)))
)))
(assert (forall (($generated@@575 T@U) ) (!  (=> (and (= (type $generated@@575) $generated@@155) ($generated@@230 $generated@@575 ($generated@@82 0))) (and (= ($generated@@300 ($generated@@353 $generated@@2 $generated@@575)) $generated@@575) ($generated@@143 ($generated@@353 ($generated@@83 $generated@@155 $generated@@4) $generated@@575) ($generated@@82 0))))
 :pattern ( ($generated@@230 $generated@@575 ($generated@@82 0)))
)))
(assert (forall (($generated@@576 T@U) ($generated@@577 T@U) ) (!  (=> (and (and (= (type $generated@@576) $generated@@155) (= (type $generated@@577) $generated@@71)) ($generated@@230 $generated@@576 ($generated@@249 $generated@@577))) (and (= ($generated@@300 ($generated@@353 ($generated@@83 $generated@@155 $generated@@4) $generated@@576)) $generated@@576) ($generated@@143 ($generated@@353 ($generated@@83 $generated@@155 $generated@@4) $generated@@576) ($generated@@249 $generated@@577))))
 :pattern ( ($generated@@230 $generated@@576 ($generated@@249 $generated@@577)))
)))
(assert (forall (($generated@@578 T@U) ($generated@@579 T@U) ) (!  (=> (and (and (= (type $generated@@578) $generated@@155) (= (type $generated@@579) $generated@@71)) ($generated@@230 $generated@@578 ($generated@@254 $generated@@579))) (and (= ($generated@@300 ($generated@@353 ($generated@@83 $generated@@155 $generated@@4) $generated@@578)) $generated@@578) ($generated@@143 ($generated@@353 ($generated@@83 $generated@@155 $generated@@4) $generated@@578) ($generated@@254 $generated@@579))))
 :pattern ( ($generated@@230 $generated@@578 ($generated@@254 $generated@@579)))
)))
(assert (forall (($generated@@580 T@U) ($generated@@581 T@U) ) (!  (=> (and (and (= (type $generated@@580) $generated@@155) (= (type $generated@@581) $generated@@71)) ($generated@@230 $generated@@580 ($generated@@164 $generated@@581))) (and (= ($generated@@300 ($generated@@353 ($generated@@83 $generated@@155 $generated@@2) $generated@@580)) $generated@@580) ($generated@@143 ($generated@@353 ($generated@@83 $generated@@155 $generated@@2) $generated@@580) ($generated@@164 $generated@@581))))
 :pattern ( ($generated@@230 $generated@@580 ($generated@@164 $generated@@581)))
)))
(assert (forall (($generated@@582 T@U) ($generated@@583 T@U) ) (!  (=> (and (and (= (type $generated@@582) $generated@@155) (= (type $generated@@583) $generated@@71)) ($generated@@230 $generated@@582 ($generated@@506 $generated@@583))) (and (= ($generated@@300 ($generated@@353 ($generated@@284 $generated@@155) $generated@@582)) $generated@@582) ($generated@@143 ($generated@@353 ($generated@@284 $generated@@155) $generated@@582) ($generated@@506 $generated@@583))))
 :pattern ( ($generated@@230 $generated@@582 ($generated@@506 $generated@@583)))
)))
(assert (forall (($generated@@584 T@U) ($generated@@585 T@U) ) (!  (=> (and (and (= (type $generated@@584) $generated@@71) (= (type $generated@@585) $generated@@155)) ($generated@@230 $generated@@585 ($generated@@169 $generated@@584))) (and (= ($generated@@300 ($generated@@353 $generated@@140 $generated@@585)) $generated@@585) ($generated@@143 ($generated@@353 $generated@@140 $generated@@585) ($generated@@169 $generated@@584))))
 :pattern ( ($generated@@230 $generated@@585 ($generated@@169 $generated@@584)))
)))
(assert (= ($generated@@79 $generated@@237) $generated@@66))
(assert (= ($generated@@311 $generated@@237) $generated@@70))
(assert (forall (($generated@@586 T@U) ($generated@@587 T@U) ($generated@@588 T@U) ) (!  (=> (and (and (= (type $generated@@586) ($generated@@83 $generated@@155 $generated@@2)) (= (type $generated@@587) $generated@@71)) (= (type $generated@@588) ($generated@@83 $generated@@84 $generated@@85))) (= ($generated@@81 $generated@@586 ($generated@@164 $generated@@587) $generated@@588) (forall (($generated@@589 T@U) ) (!  (=> (and (= (type $generated@@589) $generated@@155) (< 0 ($generated ($generated@@88 $generated@@586 $generated@@589)))) ($generated@@269 $generated@@589 $generated@@587 $generated@@588))
 :pattern ( ($generated@@88 $generated@@586 $generated@@589))
))))
 :pattern ( ($generated@@81 $generated@@586 ($generated@@164 $generated@@587) $generated@@588))
)))
(assert (= $generated@@161 ($generated@@259 $generated@@161)))
(assert (= $generated@@163 ($generated@@259 $generated@@163)))
(assert (forall (($generated@@590 T@U) ($generated@@591 T@U) ($generated@@592 T@U) ) (!  (=> (and (and (and (= (type $generated@@590) $generated@@140) (= (type $generated@@591) $generated@@71)) (= (type $generated@@592) ($generated@@83 $generated@@84 $generated@@85))) (and ($generated@@238 $generated@@592) (and ($generated@@145 $generated@@590) (exists (($generated@@593 T@U) ) (!  (and (= (type $generated@@593) $generated@@71) ($generated@@81 $generated@@590 ($generated@@146 $generated@@591 $generated@@593) $generated@@592))
 :pattern ( ($generated@@81 $generated@@590 ($generated@@146 $generated@@591 $generated@@593) $generated@@592))
))))) ($generated@@269 ($generated@@153 $generated@@590) $generated@@591 $generated@@592))
 :pattern ( ($generated@@269 ($generated@@153 $generated@@590) $generated@@591 $generated@@592))
)))
(assert (forall (($generated@@594 T@U) ($generated@@595 T@U) ($generated@@596 T@U) ) (!  (=> (and (and (and (= (type $generated@@594) $generated@@140) (= (type $generated@@595) $generated@@71)) (= (type $generated@@596) ($generated@@83 $generated@@84 $generated@@85))) (and ($generated@@238 $generated@@596) (and ($generated@@145 $generated@@594) (exists (($generated@@597 T@U) ) (!  (and (= (type $generated@@597) $generated@@71) ($generated@@81 $generated@@594 ($generated@@146 $generated@@597 $generated@@595) $generated@@596))
 :pattern ( ($generated@@81 $generated@@594 ($generated@@146 $generated@@597 $generated@@595) $generated@@596))
))))) ($generated@@269 ($generated@@154 $generated@@594) $generated@@595 $generated@@596))
 :pattern ( ($generated@@269 ($generated@@154 $generated@@594) $generated@@595 $generated@@596))
)))
(assert (forall (($generated@@598 T@U) ($generated@@599 T@U) ) (!  (=> (and (= (type $generated@@598) $generated@@155) (= (type $generated@@599) $generated@@155)) (= ($generated@@229 ($generated@@259 $generated@@598) ($generated@@259 $generated@@599)) ($generated@@259 ($generated@@229 $generated@@598 $generated@@599))))
 :pattern ( ($generated@@229 ($generated@@259 $generated@@598) ($generated@@259 $generated@@599)))
)))
(assert (forall (($generated@@600 T@U) ) (!  (=> (= (type $generated@@600) $generated@@155) (= ($generated@@296 ($generated@@259 $generated@@600)) ($generated@@259 ($generated@@296 $generated@@600))))
 :pattern ( ($generated@@296 ($generated@@259 $generated@@600)))
)))
(assert (forall (($generated@@601 T@U) ) (! (= ($generated@@300 ($generated@@259 $generated@@601)) ($generated@@259 ($generated@@300 $generated@@601)))
 :pattern ( ($generated@@300 ($generated@@259 $generated@@601)))
)))
(assert (forall (($generated@@602 T@U) ) (! (let (($generated@@603 ($generated@@285 (type $generated@@602))))
 (=> (and (= (type $generated@@602) ($generated@@284 $generated@@603)) (= ($generated@@283 $generated@@602) 0)) (= $generated@@602 ($generated@@282 $generated@@603))))
 :pattern ( ($generated@@283 $generated@@602))
)))
(assert (forall (($generated@@604 T@U) ($generated@@605 T@U) ($generated@@606 T@U) ) (! (let (($generated@@607 (type $generated@@605)))
 (=> (and (and (= (type $generated@@604) ($generated@@83 $generated@@607 $generated@@2)) (= (type $generated@@606) $generated@@2)) (<= 0 ($generated $generated@@606))) (= ($generated@@305 ($generated@@89 $generated@@604 $generated@@605 $generated@@606)) (+ (- ($generated@@305 $generated@@604) ($generated ($generated@@88 $generated@@604 $generated@@605))) ($generated $generated@@606)))))
 :pattern ( ($generated@@305 ($generated@@89 $generated@@604 $generated@@605 $generated@@606)))
)))
(assert (forall (($generated@@608 T@U) ($generated@@609 T@U) ) (!  (=> (and (= (type $generated@@608) ($generated@@83 $generated@@84 $generated@@85)) (= (type $generated@@609) $generated@@2)) ($generated@@81 $generated@@609 $generated@@46 $generated@@608))
 :pattern ( ($generated@@81 $generated@@609 $generated@@46 $generated@@608))
)))
(assert (forall (($generated@@610 T@U) ($generated@@611 T@U) ) (!  (=> (and (= (type $generated@@610) ($generated@@83 $generated@@84 $generated@@85)) (= (type $generated@@611) $generated@@3)) ($generated@@81 $generated@@611 $generated@@47 $generated@@610))
 :pattern ( ($generated@@81 $generated@@611 $generated@@47 $generated@@610))
)))
(assert (forall (($generated@@612 T@U) ($generated@@613 T@U) ) (!  (=> (and (= (type $generated@@612) ($generated@@83 $generated@@84 $generated@@85)) (= (type $generated@@613) $generated@@4)) ($generated@@81 $generated@@613 $generated@@44 $generated@@612))
 :pattern ( ($generated@@81 $generated@@613 $generated@@44 $generated@@612))
)))
(assert (forall (($generated@@614 T@U) ($generated@@615 T@U) ) (!  (=> (and (= (type $generated@@614) ($generated@@83 $generated@@84 $generated@@85)) (= (type $generated@@615) $generated@@464)) ($generated@@81 $generated@@615 $generated@@45 $generated@@614))
 :pattern ( ($generated@@81 $generated@@615 $generated@@45 $generated@@614))
)))
(assert (forall (($generated@@616 T@U) ($generated@@617 T@U) ) (!  (=> (and (= (type $generated@@616) ($generated@@83 $generated@@84 $generated@@85)) (= (type $generated@@617) $generated@@155)) ($generated@@81 $generated@@617 $generated@@48 $generated@@616))
 :pattern ( ($generated@@81 $generated@@617 $generated@@48 $generated@@616))
)))
(assert (forall (($generated@@618 T@U) ($generated@@619 T@U) ) (!  (=> (and (= (type $generated@@618) ($generated@@284 $generated@@155)) (= (type $generated@@619) $generated@@71)) (= ($generated@@143 $generated@@618 ($generated@@506 $generated@@619)) (forall (($generated@@620 Int) ) (!  (=> (and (<= 0 $generated@@620) (< $generated@@620 ($generated@@283 $generated@@618))) ($generated@@230 ($generated@@507 $generated@@618 $generated@@620) $generated@@619))
 :pattern ( ($generated@@507 $generated@@618 $generated@@620))
))))
 :pattern ( ($generated@@143 $generated@@618 ($generated@@506 $generated@@619)))
)))
(assert (forall (($generated@@622 T@U) ($generated@@623 Int) ) (!  (=> (= (type $generated@@622) ($generated@@284 $generated@@155)) (=> (and (<= 0 $generated@@623) (< $generated@@623 ($generated@@283 $generated@@622))) (< ($generated@@552 ($generated@@353 $generated@@140 ($generated@@507 $generated@@622 $generated@@623))) ($generated@@621 $generated@@622))))
 :pattern ( ($generated@@552 ($generated@@353 $generated@@140 ($generated@@507 $generated@@622 $generated@@623))))
)))
(assert (forall (($generated@@624 T@U) ($generated@@625 T@U) ($generated@@626 T@U) ) (!  (=> (and (and (and (= (type $generated@@624) ($generated@@316 $generated@@155 $generated@@155)) (= (type $generated@@625) $generated@@71)) (= (type $generated@@626) $generated@@71)) ($generated@@143 $generated@@624 ($generated@@423 $generated@@625 $generated@@626))) (and (and ($generated@@143 ($generated@@314 $generated@@624) ($generated@@249 $generated@@625)) ($generated@@143 ($generated@@361 $generated@@624) ($generated@@249 $generated@@626))) ($generated@@143 ($generated@@397 $generated@@624) ($generated@@249 ($generated@@146 $generated@@625 $generated@@626)))))
 :pattern ( ($generated@@143 $generated@@624 ($generated@@423 $generated@@625 $generated@@626)))
)))
(assert (forall (($generated@@627 T@U) ($generated@@628 T@U) ($generated@@629 T@U) ) (!  (=> (and (and (and (= (type $generated@@627) ($generated@@334 $generated@@155 $generated@@155)) (= (type $generated@@628) $generated@@71)) (= (type $generated@@629) $generated@@71)) ($generated@@143 $generated@@627 ($generated@@431 $generated@@628 $generated@@629))) (and (and ($generated@@143 ($generated@@332 $generated@@627) ($generated@@254 $generated@@628)) ($generated@@143 ($generated@@372 $generated@@627) ($generated@@254 $generated@@629))) ($generated@@143 ($generated@@405 $generated@@627) ($generated@@254 ($generated@@146 $generated@@628 $generated@@629)))))
 :pattern ( ($generated@@143 $generated@@627 ($generated@@431 $generated@@628 $generated@@629)))
)))
(assert (forall (($generated@@630 T@U) ) (!  (=> (= (type $generated@@630) $generated@@2) ($generated@@143 $generated@@630 $generated@@46))
 :pattern ( ($generated@@143 $generated@@630 $generated@@46))
)))
(assert (forall (($generated@@631 T@U) ) (!  (=> (= (type $generated@@631) $generated@@3) ($generated@@143 $generated@@631 $generated@@47))
 :pattern ( ($generated@@143 $generated@@631 $generated@@47))
)))
(assert (forall (($generated@@632 T@U) ) (!  (=> (= (type $generated@@632) $generated@@4) ($generated@@143 $generated@@632 $generated@@44))
 :pattern ( ($generated@@143 $generated@@632 $generated@@44))
)))
(assert (forall (($generated@@633 T@U) ) (!  (=> (= (type $generated@@633) $generated@@464) ($generated@@143 $generated@@633 $generated@@45))
 :pattern ( ($generated@@143 $generated@@633 $generated@@45))
)))
(assert (forall (($generated@@634 T@U) ) (!  (=> (= (type $generated@@634) $generated@@155) ($generated@@143 $generated@@634 $generated@@48))
 :pattern ( ($generated@@143 $generated@@634 $generated@@48))
)))
(push 1)
(declare-fun ControlFlow (Int Int) Int)
(declare-fun $generated@@635 () T@U)
(declare-fun $generated@@636 () T@U)
(declare-fun $generated@@637 () T@U)
(declare-fun $generated@@638 () T@U)
(declare-fun $generated@@639 () T@U)
(declare-fun $generated@@640 () T@U)
(declare-fun $generated@@641 () T@U)
(declare-fun $generated@@642 (T@U) Bool)
(declare-fun $generated@@643 () T@U)
(declare-fun $generated@@644 () T@U)
(declare-fun $generated@@645 () Int)
(assert  (and (and (and (and (and (and (and (and (= (type $generated@@635) ($generated@@175 $generated@@84 $generated@@4)) (= (type $generated@@636) $generated@@84)) (= (type $generated@@637) ($generated@@83 $generated@@84 $generated@@85))) (= (type $generated@@638) $generated@@140)) (= (type $generated@@639) $generated@@140)) (= (type $generated@@640) $generated@@140)) (= (type $generated@@641) $generated@@140)) (= (type $generated@@643) $generated@@140)) (= (type $generated@@644) $generated@@140)))
(set-option :timeout 0)
(set-option :rlimit 0)
(assert (not
 (=> (= (ControlFlow 0 0) 4) (let (($generated@@646  (=> (= $generated@@635 ($generated@@174 $generated@@636 $generated@@637 $generated@@60 false)) (=> (and (and (= $generated@@638 ($generated@@296 ($generated@@300 $generated@@639))) (= $generated@@640 ($generated@@296 ($generated@@300 $generated@@641)))) (and ($generated@@139 $generated@@638) ($generated@@139 $generated@@640))) (and (=> (= (ControlFlow 0 2) (- 0 3)) ($generated@@243 $generated@@638 $generated@@640)) (=> ($generated@@243 $generated@@638 $generated@@640) (=> (= (ControlFlow 0 2) (- 0 1)) ($generated@@246 $generated@@639 $generated@@641))))))))
(let (($generated@@647  (=> (and ($generated@@238 $generated@@637) ($generated@@642 $generated@@637)) (=> (and (and ($generated@@143 $generated@@639 $generated@@237) ($generated@@81 $generated@@639 $generated@@237 $generated@@637)) ($generated@@385 $generated@@639)) (=> (and (and (and (and ($generated@@143 $generated@@641 $generated@@237) ($generated@@81 $generated@@641 $generated@@237 $generated@@637)) ($generated@@385 $generated@@641)) (and (and ($generated@@143 $generated@@643 ($generated@@169 $generated@@237)) ($generated@@81 $generated@@643 ($generated@@169 $generated@@237) $generated@@637)) true)) (and (and (and ($generated@@143 $generated@@644 ($generated@@169 $generated@@237)) ($generated@@81 $generated@@644 ($generated@@169 $generated@@237) $generated@@637)) true) (and (= 1 $generated@@645) (= (ControlFlow 0 4) 2)))) $generated@@646)))))
$generated@@647)))
))
(check-sat)
(get-info :reason-unknown)
(assert (not (= (ControlFlow 0 2) (- 3))))
(check-sat)
(pop 1)
; Invalid
(get-info :rlimit)
(reset)
(set-option :rlimit 0)
; did a full reset
(reset)
(set-option :print-success false)
(set-info :smt-lib-version 2.6)
(set-option :auto_config false)
(set-option :type_check true)
(set-option :smt.case_split 3)
(set-option :smt.qi.eager_threshold 100)
(set-option :smt.delay_units true)
(set-option :smt.arith.solver 2)
(set-option :smt.mbqi false)
(set-option :model.compact false)
(set-option :model.v2 true)
(set-option :pp.bv_literals false)
; done setting options


(set-info :category "industrial")
(declare-sort |T@U| 0)
(declare-sort |T@T| 0)
(declare-fun real_pow (Real Real) Real)
(declare-fun UOrdering2 (|T@U| |T@U|) Bool)
(declare-fun UOrdering3 (|T@T| |T@U| |T@U|) Bool)
(declare-fun tickleBool (Bool) Bool)
(assert (and (tickleBool true) (tickleBool false)))
(declare-fun $generated (T@U) Int)
(declare-fun $generated@@0 (T@U) Bool)
(declare-fun $generated@@1 (T@T) Int)
(declare-fun $generated@@2 () T@T)
(declare-fun $generated@@3 () T@T)
(declare-fun $generated@@4 () T@T)
(declare-fun $generated@@5 () T@T)
(declare-fun $generated@@6 () T@T)
(declare-fun $generated@@7 () T@T)
(declare-fun $generated@@8 (Int) T@U)
(declare-fun type (T@U) T@T)
(declare-fun $generated@@9 (Real) T@U)
(declare-fun $generated@@10 (T@U) Real)
(declare-fun $generated@@11 (Bool) T@U)
(declare-fun $generated@@12 (RoundingMode) T@U)
(declare-fun $generated@@13 (T@U) RoundingMode)
(declare-fun $generated@@14 (String) T@U)
(declare-fun $generated@@15 (T@U) String)
(declare-fun $generated@@16 ((RegEx String)) T@U)
(declare-fun $generated@@17 (T@U) (RegEx String))
(declare-fun $generated@@44 () T@U)
(declare-fun $generated@@45 () T@U)
(declare-fun $generated@@46 () T@U)
(declare-fun $generated@@47 () T@U)
(declare-fun $generated@@48 () T@U)
(declare-fun $generated@@49 () T@U)
(declare-fun $generated@@50 () T@U)
(declare-fun $generated@@51 () T@U)
(declare-fun $generated@@52 () T@U)
(declare-fun $generated@@53 () T@U)
(declare-fun $generated@@54 () T@U)
(declare-fun $generated@@55 () T@U)
(declare-fun $generated@@56 () T@U)
(declare-fun $generated@@57 () T@U)
(declare-fun $generated@@58 () T@U)
(declare-fun $generated@@59 () T@U)
(declare-fun $generated@@60 () T@U)
(declare-fun $generated@@61 () T@U)
(declare-fun $generated@@62 () T@U)
(declare-fun $generated@@63 () T@U)
(declare-fun $generated@@64 () T@U)
(declare-fun $generated@@65 () T@U)
(declare-fun $generated@@66 () T@U)
(declare-fun $generated@@67 () T@U)
(declare-fun $generated@@68 () T@T)
(declare-fun $generated@@69 () T@T)
(declare-fun $generated@@70 (T@T) T@T)
(declare-fun $generated@@71 (T@T) T@T)
(declare-fun $generated@@72 () T@T)
(declare-fun $generated@@73 () T@T)
(declare-fun $generated@@76 (T@U) T@U)
(declare-fun $generated@@78 (T@U T@U T@U) Bool)
(declare-fun $generated@@79 (Int) T@U)
(declare-fun $generated@@80 (T@T T@T) T@T)
(declare-fun $generated@@81 () T@T)
(declare-fun $generated@@82 () T@T)
(declare-fun $generated@@83 (T@T) T@T)
(declare-fun $generated@@84 (T@T) T@T)
(declare-fun $generated@@85 (T@U T@U) T@U)
(declare-fun $generated@@86 (T@U T@U T@U) T@U)
(declare-fun $generated@@87 (T@U T@U) T@U)
(declare-fun $generated@@88 (T@U T@U T@U) T@U)
(declare-fun $generated@@136 (T@U T@U) Bool)
(declare-fun $generated@@140 (T@U T@U) Bool)
(declare-fun $generated@@142 (T@U) Bool)
(declare-fun $generated@@143 (T@U T@U) T@U)
(declare-fun $generated@@144 () T@T)
(declare-fun $generated@@150 (T@U T@U) Bool)
(declare-fun $generated@@151 (T@U) T@U)
(declare-fun $generated@@152 (T@U) T@U)
(declare-fun $generated@@153 () T@T)
(declare-fun $generated@@158 (T@U) T@U)
(declare-fun $generated@@159 () T@U)
(declare-fun $generated@@161 () T@U)
(declare-fun $generated@@162 (T@U) T@U)
(declare-fun $generated@@163 (T@U) Bool)
(declare-fun $generated@@167 (T@U T@U T@U) T@U)
(declare-fun $generated@@168 (T@U T@U T@U Bool) T@U)
(declare-fun $generated@@169 (T@T T@T) T@T)
(declare-fun $generated@@170 (T@T) T@T)
(declare-fun $generated@@171 (T@T) T@T)
(declare-fun $generated@@172 (T@U T@U T@U T@U) T@U)
(declare-fun $generated@@223 (T@U T@U) T@U)
(declare-fun $generated@@224 (T@U T@U) Bool)
(declare-fun $generated@@231 () T@U)
(declare-fun $generated@@232 (T@U) Bool)
(declare-fun $generated@@237 (T@U T@U) Bool)
(declare-fun $generated@@240 (T@U) T@U)
(declare-fun $generated@@245 (T@U) T@U)
(declare-fun $generated@@250 (T@U) T@U)
(declare-fun $generated@@254 (T@U) Bool)
(declare-fun $generated@@257 (T@U) Bool)
(declare-fun $generated@@260 (T@U T@U T@U) Bool)
(declare-fun $generated@@272 (T@T) T@U)
(declare-fun $generated@@273 (T@U) Int)
(declare-fun $generated@@274 (T@T) T@T)
(declare-fun $generated@@275 (T@T) T@T)
(declare-fun $generated@@282 (T@U) T@U)
(declare-fun $generated@@295 (T@U) Int)
(declare-fun $generated@@296 (T@T) T@U)
(declare-fun $generated@@301 (T@U) T@U)
(declare-fun $generated@@302 (T@T T@T) T@U)
(declare-fun $generated@@303 (T@T T@T) T@T)
(declare-fun $generated@@304 (T@T) T@T)
(declare-fun $generated@@305 (T@T) T@T)
(declare-fun $generated@@319 (T@U) T@U)
(declare-fun $generated@@320 (T@T T@T) T@U)
(declare-fun $generated@@321 (T@T T@T) T@T)
(declare-fun $generated@@322 (T@T) T@T)
(declare-fun $generated@@323 (T@T) T@T)
(declare-fun $generated@@340 (T@T T@U) T@U)
(declare-fun $generated@@348 (T@U) T@U)
(declare-fun $generated@@359 (T@U) T@U)
(declare-fun $generated@@369 (T@U) Bool)
(declare-fun $generated@@381 (T@U) T@U)
(declare-fun $generated@@382 (T@U) T@U)
(declare-fun $generated@@389 (T@U) T@U)
(declare-fun $generated@@390 (T@U) T@U)
(declare-fun $generated@@407 (T@U T@U) T@U)
(declare-fun $generated@@415 (T@U T@U) T@U)
(declare-fun $generated@@427 (T@T) T@U)
(declare-fun $generated@@451 () T@T)
(declare-fun $generated@@459 (T@U) T@U)
(declare-fun $generated@@463 (T@U) T@U)
(declare-fun $generated@@469 (T@U) T@U)
(declare-fun $generated@@473 (T@U) T@U)
(declare-fun $generated@@481 (T@U) T@U)
(declare-fun $generated@@485 (T@U) T@U)
(declare-fun $generated@@493 (T@U) T@U)
(declare-fun $generated@@494 (T@U Int) T@U)
(declare-fun $generated@@503 (T@U) Int)
(declare-fun $generated@@505 (T@U) T@U)
(declare-fun $generated@@509 (T@U) T@U)
(declare-fun $generated@@513 (T@U) T@U)
(declare-fun $generated@@517 (T@U) T@U)
(declare-fun $generated@@531 (T@U) Int)
(declare-fun $generated@@532 (T@U) Int)
(declare-fun $generated@@548 (T@U) T@U)
(declare-fun $generated@@596 (T@U) Int)
(assert  (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (= ($generated@@1 $generated@@2) 0) (= ($generated@@1 $generated@@3) 1)) (= ($generated@@1 $generated@@4) 2)) (= ($generated@@1 $generated@@5) 3)) (= ($generated@@1 $generated@@6) 4)) (= ($generated@@1 $generated@@7) 5)) (forall (($generated@@18 Int) ) (! (= ($generated ($generated@@8 $generated@@18)) $generated@@18)
 :pattern ( ($generated@@8 $generated@@18))
))) (forall (($generated@@19 T@U) ) (!  (=> (= (type $generated@@19) $generated@@2) (= ($generated@@8 ($generated $generated@@19)) $generated@@19))
 :pattern ( ($generated $generated@@19))
))) (forall (($generated@@20 Int) ) (! (= (type ($generated@@8 $generated@@20)) $generated@@2)
 :pattern ( ($generated@@8 $generated@@20))
))) (forall (($generated@@21 Real) ) (! (= ($generated@@10 ($generated@@9 $generated@@21)) $generated@@21)
 :pattern ( ($generated@@9 $generated@@21))
))) (forall (($generated@@22 T@U) ) (!  (=> (= (type $generated@@22) $generated@@3) (= ($generated@@9 ($generated@@10 $generated@@22)) $generated@@22))
 :pattern ( ($generated@@10 $generated@@22))
))) (forall (($generated@@23 Real) ) (! (= (type ($generated@@9 $generated@@23)) $generated@@3)
 :pattern ( ($generated@@9 $generated@@23))
))) (forall (($generated@@24 Bool) ) (! (= ($generated@@0 ($generated@@11 $generated@@24)) $generated@@24)
 :pattern ( ($generated@@11 $generated@@24))
))) (forall (($generated@@25 T@U) ) (!  (=> (= (type $generated@@25) $generated@@4) (= ($generated@@11 ($generated@@0 $generated@@25)) $generated@@25))
 :pattern ( ($generated@@0 $generated@@25))
))) (forall (($generated@@26 Bool) ) (! (= (type ($generated@@11 $generated@@26)) $generated@@4)
 :pattern ( ($generated@@11 $generated@@26))
))) (forall (($generated@@27 RoundingMode) ) (! (= ($generated@@13 ($generated@@12 $generated@@27)) $generated@@27)
 :pattern ( ($generated@@12 $generated@@27))
))) (forall (($generated@@28 T@U) ) (!  (=> (= (type $generated@@28) $generated@@5) (= ($generated@@12 ($generated@@13 $generated@@28)) $generated@@28))
 :pattern ( ($generated@@13 $generated@@28))
))) (forall (($generated@@29 RoundingMode) ) (! (= (type ($generated@@12 $generated@@29)) $generated@@5)
 :pattern ( ($generated@@12 $generated@@29))
))) (forall (($generated@@30 String) ) (! (= ($generated@@15 ($generated@@14 $generated@@30)) $generated@@30)
 :pattern ( ($generated@@14 $generated@@30))
))) (forall (($generated@@31 T@U) ) (!  (=> (= (type $generated@@31) $generated@@6) (= ($generated@@14 ($generated@@15 $generated@@31)) $generated@@31))
 :pattern ( ($generated@@15 $generated@@31))
))) (forall (($generated@@32 String) ) (! (= (type ($generated@@14 $generated@@32)) $generated@@6)
 :pattern ( ($generated@@14 $generated@@32))
))) (forall (($generated@@33 (RegEx String)) ) (! (= ($generated@@17 ($generated@@16 $generated@@33)) $generated@@33)
 :pattern ( ($generated@@16 $generated@@33))
))) (forall (($generated@@34 T@U) ) (!  (=> (= (type $generated@@34) $generated@@7) (= ($generated@@16 ($generated@@17 $generated@@34)) $generated@@34))
 :pattern ( ($generated@@17 $generated@@34))
))) (forall (($generated@@35 (RegEx String)) ) (! (= (type ($generated@@16 $generated@@35)) $generated@@7)
 :pattern ( ($generated@@16 $generated@@35))
))))
(assert (forall (($generated@@36 T@U) ) (! (UOrdering2 $generated@@36 $generated@@36)
 :no-pattern ($generated $generated@@36)
 :no-pattern ($generated@@0 $generated@@36)
)))
(assert (forall (($generated@@37 T@U) ($generated@@38 T@U) ($generated@@39 T@U) ) (! (let (($generated@@40 (type $generated@@37)))
 (=> (and (and (= (type $generated@@38) $generated@@40) (= (type $generated@@39) $generated@@40)) (and (UOrdering2 $generated@@37 $generated@@38) (UOrdering2 $generated@@38 $generated@@39))) (UOrdering2 $generated@@37 $generated@@39)))
 :pattern ( (UOrdering2 $generated@@37 $generated@@38) (UOrdering2 $generated@@38 $generated@@39))
)))
(assert (forall (($generated@@41 T@U) ($generated@@42 T@U) ) (! (let (($generated@@43 (type $generated@@41)))
 (=> (= (type $generated@@42) $generated@@43) (=> (and (UOrdering2 $generated@@41 $generated@@42) (UOrdering2 $generated@@42 $generated@@41)) (= $generated@@41 $generated@@42))))
 :pattern ( (UOrdering2 $generated@@41 $generated@@42) (UOrdering2 $generated@@42 $generated@@41))
)))
(assert  (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (= ($generated@@1 $generated@@68) 6) (= (type $generated@@44) $generated@@68)) (= (type $generated@@45) $generated@@68)) (= (type $generated@@46) $generated@@68)) (= (type $generated@@47) $generated@@68)) (= (type $generated@@48) $generated@@68)) (= ($generated@@1 $generated@@69) 7)) (= (type $generated@@49) $generated@@69)) (= (type $generated@@50) $generated@@69)) (= (type $generated@@51) $generated@@69)) (= (type $generated@@52) $generated@@69)) (= (type $generated@@53) $generated@@69)) (= (type $generated@@54) $generated@@69)) (= (type $generated@@55) $generated@@69)) (= (type $generated@@56) $generated@@69)) (= (type $generated@@57) $generated@@69)) (= (type $generated@@58) $generated@@69)) (= (type $generated@@59) $generated@@69)) (forall (($generated@@74 T@T) ) (= ($generated@@1 ($generated@@70 $generated@@74)) 8))) (forall (($generated@@75 T@T) ) (! (= ($generated@@71 ($generated@@70 $generated@@75)) $generated@@75)
 :pattern ( ($generated@@70 $generated@@75))
))) (= (type $generated@@60) ($generated@@70 $generated@@4))) (= ($generated@@1 $generated@@72) 9)) (= (type $generated@@61) $generated@@72)) (= (type $generated@@62) $generated@@69)) (= (type $generated@@63) $generated@@72)) (= (type $generated@@64) $generated@@69)) (= (type $generated@@65) $generated@@72)) (= ($generated@@1 $generated@@73) 10)) (= (type $generated@@66) $generated@@73)) (= (type $generated@@67) $generated@@73)))
(assert (distinct $generated@@44 $generated@@45 $generated@@46 $generated@@47 $generated@@48 $generated@@49 $generated@@50 $generated@@51 $generated@@52 $generated@@53 $generated@@54 $generated@@55 $generated@@56 $generated@@57 $generated@@58 $generated@@59 $generated@@60 $generated@@61 $generated@@62 $generated@@63 $generated@@64 $generated@@65 $generated@@66 $generated@@67)
)
(assert (forall (($generated@@77 T@U) ) (! (= (type ($generated@@76 $generated@@77)) $generated@@69)
 :pattern ( ($generated@@76 $generated@@77))
)))
(assert (= ($generated@@76 $generated@@44) $generated@@49))
(assert (= ($generated@@76 $generated@@45) $generated@@50))
(assert (= ($generated@@76 $generated@@46) $generated@@51))
(assert (= ($generated@@76 $generated@@47) $generated@@52))
(assert (= ($generated@@76 $generated@@48) $generated@@53))
(assert  (and (and (and (and (and (and (and (and (and (and (and (and (and (forall (($generated@@89 T@T) ($generated@@90 T@T) ) (= ($generated@@1 ($generated@@80 $generated@@89 $generated@@90)) 11)) (forall (($generated@@91 T@T) ($generated@@92 T@T) ) (! (= ($generated@@83 ($generated@@80 $generated@@91 $generated@@92)) $generated@@91)
 :pattern ( ($generated@@80 $generated@@91 $generated@@92))
))) (forall (($generated@@93 T@T) ($generated@@94 T@T) ) (! (= ($generated@@84 ($generated@@80 $generated@@93 $generated@@94)) $generated@@94)
 :pattern ( ($generated@@80 $generated@@93 $generated@@94))
))) (forall (($generated@@95 T@U) ($generated@@96 T@U) ) (! (let (($generated@@97 ($generated@@84 (type $generated@@95))))
(= (type ($generated@@85 $generated@@95 $generated@@96)) $generated@@97))
 :pattern ( ($generated@@85 $generated@@95 $generated@@96))
))) (forall (($generated@@98 T@U) ($generated@@99 T@U) ($generated@@100 T@U) ) (! (let (($generated@@101 (type $generated@@100)))
(let (($generated@@102 (type $generated@@99)))
(= (type ($generated@@86 $generated@@98 $generated@@99 $generated@@100)) ($generated@@80 $generated@@102 $generated@@101))))
 :pattern ( ($generated@@86 $generated@@98 $generated@@99 $generated@@100))
))) (forall (($generated@@103 T@U) ($generated@@104 T@U) ($generated@@105 T@U) ) (! (let (($generated@@106 ($generated@@84 (type $generated@@103))))
 (=> (= (type $generated@@105) $generated@@106) (= ($generated@@85 ($generated@@86 $generated@@103 $generated@@104 $generated@@105) $generated@@104) $generated@@105)))
 :weight 0
))) (and (forall (($generated@@107 T@U) ($generated@@108 T@U) ($generated@@109 T@U) ($generated@@110 T@U) ) (!  (or (= $generated@@109 $generated@@110) (= ($generated@@85 ($generated@@86 $generated@@108 $generated@@109 $generated@@107) $generated@@110) ($generated@@85 $generated@@108 $generated@@110)))
 :weight 0
)) (forall (($generated@@111 T@U) ($generated@@112 T@U) ($generated@@113 T@U) ($generated@@114 T@U) ) (!  (or true (= ($generated@@85 ($generated@@86 $generated@@112 $generated@@113 $generated@@111) $generated@@114) ($generated@@85 $generated@@112 $generated@@114)))
 :weight 0
)))) (= ($generated@@1 $generated@@81) 12)) (forall (($generated@@115 T@U) ($generated@@116 T@U) ) (! (let (($generated@@117 ($generated@@71 (type $generated@@116))))
(= (type ($generated@@87 $generated@@115 $generated@@116)) $generated@@117))
 :pattern ( ($generated@@87 $generated@@115 $generated@@116))
))) (= ($generated@@1 $generated@@82) 13)) (forall (($generated@@118 T@U) ($generated@@119 T@U) ($generated@@120 T@U) ) (! (= (type ($generated@@88 $generated@@118 $generated@@119 $generated@@120)) $generated@@82)
 :pattern ( ($generated@@88 $generated@@118 $generated@@119 $generated@@120))
))) (forall (($generated@@121 T@U) ($generated@@122 T@U) ($generated@@123 T@U) ) (! (let (($generated@@124 ($generated@@71 (type $generated@@122))))
 (=> (= (type $generated@@123) $generated@@124) (= ($generated@@87 ($generated@@88 $generated@@121 $generated@@122 $generated@@123) $generated@@122) $generated@@123)))
 :weight 0
))) (and (forall (($generated@@125 T@U) ($generated@@126 T@U) ($generated@@127 T@U) ($generated@@128 T@U) ) (!  (or (= $generated@@127 $generated@@128) (= ($generated@@87 ($generated@@88 $generated@@126 $generated@@127 $generated@@125) $generated@@128) ($generated@@87 $generated@@126 $generated@@128)))
 :weight 0
)) (forall (($generated@@129 T@U) ($generated@@130 T@U) ($generated@@131 T@U) ($generated@@132 T@U) ) (!  (or true (= ($generated@@87 ($generated@@88 $generated@@130 $generated@@131 $generated@@129) $generated@@132) ($generated@@87 $generated@@130 $generated@@132)))
 :weight 0
)))) (forall (($generated@@133 Int) ) (! (= (type ($generated@@79 $generated@@133)) $generated@@68)
 :pattern ( ($generated@@79 $generated@@133))
))))
(assert (forall (($generated@@134 T@U) ($generated@@135 T@U) ) (!  (=> (and (= (type $generated@@134) $generated@@2) (= (type $generated@@135) ($generated@@80 $generated@@81 $generated@@82))) ($generated@@78 $generated@@134 ($generated@@79 0) $generated@@135))
 :pattern ( ($generated@@78 $generated@@134 ($generated@@79 0) $generated@@135))
)))
(assert (forall (($generated@@137 T@U) ($generated@@138 T@U) ) (!  (=> (and (and (= (type $generated@@137) ($generated@@80 $generated@@81 $generated@@82)) (= (type $generated@@138) ($generated@@80 $generated@@81 $generated@@82))) ($generated@@136 $generated@@137 $generated@@138)) (forall (($generated@@139 T@U) ) (!  (=> (and (= (type $generated@@139) $generated@@81) ($generated@@0 ($generated@@87 ($generated@@85 $generated@@137 $generated@@139) $generated@@60))) ($generated@@0 ($generated@@87 ($generated@@85 $generated@@138 $generated@@139) $generated@@60)))
 :pattern ( ($generated@@87 ($generated@@85 $generated@@138 $generated@@139) $generated@@60))
)))
 :pattern ( ($generated@@136 $generated@@137 $generated@@138))
)))
(assert (forall (($generated@@141 T@U) ) (!  (=> (= (type $generated@@141) $generated@@2) ($generated@@140 $generated@@141 ($generated@@79 0)))
 :pattern ( ($generated@@140 $generated@@141 ($generated@@79 0)))
)))
(assert  (and (= ($generated@@1 $generated@@144) 14) (forall (($generated@@145 T@U) ($generated@@146 T@U) ) (! (= (type ($generated@@143 $generated@@145 $generated@@146)) $generated@@68)
 :pattern ( ($generated@@143 $generated@@145 $generated@@146))
))))
(assert (forall (($generated@@147 T@U) ($generated@@148 T@U) ($generated@@149 T@U) ) (!  (=> (and (and (and (= (type $generated@@147) $generated@@68) (= (type $generated@@148) $generated@@68)) (= (type $generated@@149) $generated@@144)) ($generated@@140 $generated@@149 ($generated@@143 $generated@@147 $generated@@148))) ($generated@@142 $generated@@149))
 :pattern ( ($generated@@142 $generated@@149) ($generated@@140 $generated@@149 ($generated@@143 $generated@@147 $generated@@148)))
)))
(assert  (and (and (= ($generated@@1 $generated@@153) 15) (forall (($generated@@154 T@U) ) (! (= (type ($generated@@151 $generated@@154)) $generated@@153)
 :pattern ( ($generated@@151 $generated@@154))
))) (forall (($generated@@155 T@U) ) (! (= (type ($generated@@152 $generated@@155)) $generated@@153)
 :pattern ( ($generated@@152 $generated@@155))
))))
(assert (forall (($generated@@156 T@U) ($generated@@157 T@U) ) (!  (=> (and (and (= (type $generated@@156) $generated@@144) (= (type $generated@@157) $generated@@144)) true) (= ($generated@@150 $generated@@156 $generated@@157)  (and (= ($generated@@151 $generated@@156) ($generated@@151 $generated@@157)) (= ($generated@@152 $generated@@156) ($generated@@152 $generated@@157)))))
 :pattern ( ($generated@@150 $generated@@156 $generated@@157))
)))
(assert  (and (forall (($generated@@160 T@U) ) (! (= (type ($generated@@158 $generated@@160)) $generated@@72)
 :pattern ( ($generated@@158 $generated@@160))
)) (= (type $generated@@159) $generated@@144)))
(assert (= ($generated@@158 $generated@@159) $generated@@63))
(assert (= (type $generated@@161) $generated@@144))
(assert (= ($generated@@158 $generated@@161) $generated@@65))
(assert (forall (($generated@@164 T@U) ) (! (= (type ($generated@@162 $generated@@164)) $generated@@68)
 :pattern ( ($generated@@162 $generated@@164))
)))
(assert (forall (($generated@@165 T@U) ($generated@@166 T@U) ) (!  (=> (and (and (= (type $generated@@165) ($generated@@80 $generated@@153 $generated@@2)) (= (type $generated@@166) $generated@@68)) ($generated@@140 $generated@@165 ($generated@@162 $generated@@166))) ($generated@@163 $generated@@165))
 :pattern ( ($generated@@140 $generated@@165 ($generated@@162 $generated@@166)))
)))
(assert  (and (and (and (and (and (and (and (forall (($generated@@173 T@T) ($generated@@174 T@T) ) (= ($generated@@1 ($generated@@169 $generated@@173 $generated@@174)) 16)) (forall (($generated@@175 T@T) ($generated@@176 T@T) ) (! (= ($generated@@170 ($generated@@169 $generated@@175 $generated@@176)) $generated@@175)
 :pattern ( ($generated@@169 $generated@@175 $generated@@176))
))) (forall (($generated@@177 T@T) ($generated@@178 T@T) ) (! (= ($generated@@171 ($generated@@169 $generated@@177 $generated@@178)) $generated@@178)
 :pattern ( ($generated@@169 $generated@@177 $generated@@178))
))) (forall (($generated@@179 T@U) ($generated@@180 T@U) ($generated@@181 T@U) ) (! (let (($generated@@182 ($generated@@171 (type $generated@@179))))
(= (type ($generated@@167 $generated@@179 $generated@@180 $generated@@181)) $generated@@182))
 :pattern ( ($generated@@167 $generated@@179 $generated@@180 $generated@@181))
))) (forall (($generated@@183 T@U) ($generated@@184 T@U) ($generated@@185 T@U) ($generated@@186 T@U) ) (! (let (($generated@@187 (type $generated@@186)))
(let (($generated@@188 (type $generated@@184)))
(= (type ($generated@@172 $generated@@183 $generated@@184 $generated@@185 $generated@@186)) ($generated@@169 $generated@@188 $generated@@187))))
 :pattern ( ($generated@@172 $generated@@183 $generated@@184 $generated@@185 $generated@@186))
))) (forall (($generated@@189 T@U) ($generated@@190 T@U) ($generated@@191 T@U) ($generated@@192 T@U) ) (! (let (($generated@@193 ($generated@@171 (type $generated@@189))))
 (=> (= (type $generated@@192) $generated@@193) (= ($generated@@167 ($generated@@172 $generated@@189 $generated@@190 $generated@@191 $generated@@192) $generated@@190 $generated@@191) $generated@@192)))
 :weight 0
))) (and (and (forall (($generated@@194 T@U) ($generated@@195 T@U) ($generated@@196 T@U) ($generated@@197 T@U) ($generated@@198 T@U) ($generated@@199 T@U) ) (!  (or (= $generated@@196 $generated@@198) (= ($generated@@167 ($generated@@172 $generated@@195 $generated@@196 $generated@@197 $generated@@194) $generated@@198 $generated@@199) ($generated@@167 $generated@@195 $generated@@198 $generated@@199)))
 :weight 0
)) (forall (($generated@@200 T@U) ($generated@@201 T@U) ($generated@@202 T@U) ($generated@@203 T@U) ($generated@@204 T@U) ($generated@@205 T@U) ) (!  (or (= $generated@@203 $generated@@205) (= ($generated@@167 ($generated@@172 $generated@@201 $generated@@202 $generated@@203 $generated@@200) $generated@@204 $generated@@205) ($generated@@167 $generated@@201 $generated@@204 $generated@@205)))
 :weight 0
))) (forall (($generated@@206 T@U) ($generated@@207 T@U) ($generated@@208 T@U) ($generated@@209 T@U) ($generated@@210 T@U) ($generated@@211 T@U) ) (!  (or true (= ($generated@@167 ($generated@@172 $generated@@207 $generated@@208 $generated@@209 $generated@@206) $generated@@210 $generated@@211) ($generated@@167 $generated@@207 $generated@@210 $generated@@211)))
 :weight 0
)))) (forall (($generated@@212 T@U) ($generated@@213 T@U) ($generated@@214 T@U) ($generated@@215 Bool) ) (! (= (type ($generated@@168 $generated@@212 $generated@@213 $generated@@214 $generated@@215)) ($generated@@169 $generated@@81 $generated@@4))
 :pattern ( ($generated@@168 $generated@@212 $generated@@213 $generated@@214 $generated@@215))
))))
(assert (forall (($generated@@216 T@U) ($generated@@217 T@U) ($generated@@218 T@U) ($generated@@219 Bool) ($generated@@220 T@U) ($generated@@221 T@U) ) (! (let (($generated@@222 ($generated@@71 (type $generated@@221))))
 (=> (and (and (and (and (= (type $generated@@216) $generated@@81) (= (type $generated@@217) ($generated@@80 $generated@@81 $generated@@82))) (= (type $generated@@218) ($generated@@70 $generated@@4))) (= (type $generated@@220) $generated@@81)) (= (type $generated@@221) ($generated@@70 $generated@@222))) (= ($generated@@0 ($generated@@167 ($generated@@168 $generated@@216 $generated@@217 $generated@@218 $generated@@219) $generated@@220 $generated@@221))  (=> (and (not (= $generated@@220 $generated@@216)) ($generated@@0 ($generated@@87 ($generated@@85 $generated@@217 $generated@@220) $generated@@218))) $generated@@219))))
 :pattern ( ($generated@@167 ($generated@@168 $generated@@216 $generated@@217 $generated@@218 $generated@@219) $generated@@220 $generated@@221))
)))
(assert (forall (($generated@@225 T@U) ($generated@@226 T@U) ) (! (= (type ($generated@@223 $generated@@225 $generated@@226)) $generated@@144)
 :pattern ( ($generated@@223 $generated@@225 $generated@@226))
)))
(assert (forall (($generated@@227 T@U) ($generated@@228 T@U) ($generated@@229 T@U) ($generated@@230 T@U) ) (!  (=> (and (and (and (= (type $generated@@227) $generated@@68) (= (type $generated@@228) $generated@@68)) (= (type $generated@@229) $generated@@153)) (= (type $generated@@230) $generated@@153)) (= ($generated@@140 ($generated@@223 $generated@@229 $generated@@230) ($generated@@143 $generated@@227 $generated@@228))  (and ($generated@@224 $generated@@229 $generated@@227) ($generated@@224 $generated@@230 $generated@@228))))
 :pattern ( ($generated@@140 ($generated@@223 $generated@@229 $generated@@230) ($generated@@143 $generated@@227 $generated@@228)))
)))
(assert (= (type $generated@@231) $generated@@68))
(assert ($generated@@140 $generated@@159 $generated@@231))
(assert ($generated@@140 $generated@@161 $generated@@231))
(assert (forall (($generated@@233 T@U) ) (!  (=> (and (= (type $generated@@233) ($generated@@80 $generated@@81 $generated@@82)) ($generated@@232 $generated@@233)) ($generated@@78 $generated@@159 $generated@@231 $generated@@233))
 :pattern ( ($generated@@78 $generated@@159 $generated@@231 $generated@@233))
)))
(assert (forall (($generated@@234 T@U) ) (!  (=> (and (= (type $generated@@234) ($generated@@80 $generated@@81 $generated@@82)) ($generated@@232 $generated@@234)) ($generated@@78 $generated@@161 $generated@@231 $generated@@234))
 :pattern ( ($generated@@78 $generated@@161 $generated@@231 $generated@@234))
)))
(assert (forall (($generated@@235 T@U) ($generated@@236 T@U) ) (!  (=> (and (= (type $generated@@235) $generated@@144) (= (type $generated@@236) $generated@@144)) (= ($generated@@150 $generated@@235 $generated@@236) (= $generated@@235 $generated@@236)))
 :pattern ( ($generated@@150 $generated@@235 $generated@@236))
)))
(assert (forall (($generated@@238 T@U) ($generated@@239 T@U) ) (!  (=> (and (= (type $generated@@238) $generated@@144) (= (type $generated@@239) $generated@@144)) (= ($generated@@237 $generated@@238 $generated@@239) (= $generated@@238 $generated@@239)))
 :pattern ( ($generated@@237 $generated@@238 $generated@@239))
)))
(assert (forall (($generated@@241 T@U) ) (! (= (type ($generated@@240 $generated@@241)) $generated@@68)
 :pattern ( ($generated@@240 $generated@@241))
)))
(assert (forall (($generated@@242 T@U) ($generated@@243 T@U) ) (!  (=> (and (= (type $generated@@242) ($generated@@80 $generated@@153 $generated@@4)) (= (type $generated@@243) $generated@@68)) (= ($generated@@140 $generated@@242 ($generated@@240 $generated@@243)) (forall (($generated@@244 T@U) ) (!  (=> (and (= (type $generated@@244) $generated@@153) ($generated@@0 ($generated@@85 $generated@@242 $generated@@244))) ($generated@@224 $generated@@244 $generated@@243))
 :pattern ( ($generated@@85 $generated@@242 $generated@@244))
))))
 :pattern ( ($generated@@140 $generated@@242 ($generated@@240 $generated@@243)))
)))
(assert (forall (($generated@@246 T@U) ) (! (= (type ($generated@@245 $generated@@246)) $generated@@68)
 :pattern ( ($generated@@245 $generated@@246))
)))
(assert (forall (($generated@@247 T@U) ($generated@@248 T@U) ) (!  (=> (and (= (type $generated@@247) ($generated@@80 $generated@@153 $generated@@4)) (= (type $generated@@248) $generated@@68)) (= ($generated@@140 $generated@@247 ($generated@@245 $generated@@248)) (forall (($generated@@249 T@U) ) (!  (=> (and (= (type $generated@@249) $generated@@153) ($generated@@0 ($generated@@85 $generated@@247 $generated@@249))) ($generated@@224 $generated@@249 $generated@@248))
 :pattern ( ($generated@@85 $generated@@247 $generated@@249))
))))
 :pattern ( ($generated@@140 $generated@@247 ($generated@@245 $generated@@248)))
)))
(assert (forall (($generated@@251 T@U) ) (! (let (($generated@@252 (type $generated@@251)))
(= (type ($generated@@250 $generated@@251)) $generated@@252))
 :pattern ( ($generated@@250 $generated@@251))
)))
(assert (forall (($generated@@253 T@U) ) (! (= ($generated@@250 $generated@@253) $generated@@253)
 :pattern ( ($generated@@250 $generated@@253))
)))
(assert (forall (($generated@@255 T@U) ($generated@@256 T@U) ) (!  (=> (and (and (= (type $generated@@255) $generated@@144) (= (type $generated@@256) $generated@@144)) (and ($generated@@254 $generated@@255) ($generated@@254 $generated@@256))) (= ($generated@@237 $generated@@255 $generated@@256) true))
 :pattern ( ($generated@@237 $generated@@255 $generated@@256) ($generated@@254 $generated@@255))
 :pattern ( ($generated@@237 $generated@@255 $generated@@256) ($generated@@254 $generated@@256))
)))
(assert (forall (($generated@@258 T@U) ($generated@@259 T@U) ) (!  (=> (and (and (= (type $generated@@258) $generated@@144) (= (type $generated@@259) $generated@@144)) (and ($generated@@257 $generated@@258) ($generated@@257 $generated@@259))) (= ($generated@@237 $generated@@258 $generated@@259) true))
 :pattern ( ($generated@@237 $generated@@258 $generated@@259) ($generated@@257 $generated@@258))
 :pattern ( ($generated@@237 $generated@@258 $generated@@259) ($generated@@257 $generated@@259))
)))
(assert (forall (($generated@@261 T@U) ($generated@@262 T@U) ($generated@@263 T@U) ($generated@@264 T@U) ($generated@@265 T@U) ) (!  (=> (and (and (and (and (and (= (type $generated@@261) $generated@@68) (= (type $generated@@262) $generated@@68)) (= (type $generated@@263) $generated@@153)) (= (type $generated@@264) $generated@@153)) (= (type $generated@@265) ($generated@@80 $generated@@81 $generated@@82))) ($generated@@232 $generated@@265)) (= ($generated@@78 ($generated@@223 $generated@@263 $generated@@264) ($generated@@143 $generated@@261 $generated@@262) $generated@@265)  (and ($generated@@260 $generated@@263 $generated@@261 $generated@@265) ($generated@@260 $generated@@264 $generated@@262 $generated@@265))))
 :pattern ( ($generated@@78 ($generated@@223 $generated@@263 $generated@@264) ($generated@@143 $generated@@261 $generated@@262) $generated@@265))
)))
(assert (forall (($generated@@266 T@U) ) (!  (=> (= (type $generated@@266) $generated@@144) (= ($generated@@142 $generated@@266) (= ($generated@@158 $generated@@266) $generated@@61)))
 :pattern ( ($generated@@142 $generated@@266))
)))
(assert (forall (($generated@@267 T@U) ) (!  (=> (= (type $generated@@267) $generated@@144) (= ($generated@@254 $generated@@267) (= ($generated@@158 $generated@@267) $generated@@63)))
 :pattern ( ($generated@@254 $generated@@267))
)))
(assert (forall (($generated@@268 T@U) ) (!  (=> (= (type $generated@@268) $generated@@144) (= ($generated@@257 $generated@@268) (= ($generated@@158 $generated@@268) $generated@@65)))
 :pattern ( ($generated@@257 $generated@@268))
)))
(assert (forall (($generated@@269 T@U) ) (!  (=> (and (= (type $generated@@269) $generated@@144) ($generated@@142 $generated@@269)) (exists (($generated@@270 T@U) ($generated@@271 T@U) ) (!  (and (and (= (type $generated@@270) $generated@@153) (= (type $generated@@271) $generated@@153)) (= $generated@@269 ($generated@@223 $generated@@270 $generated@@271)))
 :no-pattern (type $generated@@270)
 :no-pattern (type $generated@@271)
 :no-pattern ($generated $generated@@270)
 :no-pattern ($generated@@0 $generated@@270)
 :no-pattern ($generated $generated@@271)
 :no-pattern ($generated@@0 $generated@@271)
)))
 :pattern ( ($generated@@142 $generated@@269))
)))
(assert  (and (and (forall (($generated@@276 T@T) ) (= ($generated@@1 ($generated@@274 $generated@@276)) 17)) (forall (($generated@@277 T@T) ) (! (= ($generated@@275 ($generated@@274 $generated@@277)) $generated@@277)
 :pattern ( ($generated@@274 $generated@@277))
))) (forall (($generated@@278 T@T) ) (! (= (type ($generated@@272 $generated@@278)) ($generated@@274 $generated@@278))
 :pattern ( ($generated@@272 $generated@@278))
))))
(assert (forall (($generated@@279 T@T) ) (! (= ($generated@@273 ($generated@@272 $generated@@279)) 0)
 :pattern ( ($generated@@272 $generated@@279))
)))
(assert (forall (($generated@@280 T@U) ) (!  (=> (and (= (type $generated@@280) $generated@@144) ($generated@@254 $generated@@280)) (= $generated@@280 $generated@@159))
 :pattern ( ($generated@@254 $generated@@280))
)))
(assert (forall (($generated@@281 T@U) ) (!  (=> (and (= (type $generated@@281) $generated@@144) ($generated@@257 $generated@@281)) (= $generated@@281 $generated@@161))
 :pattern ( ($generated@@257 $generated@@281))
)))
(assert (forall (($generated@@283 T@U) ) (! (= (type ($generated@@282 $generated@@283)) $generated@@153)
 :pattern ( ($generated@@282 $generated@@283))
)))
(assert (forall (($generated@@284 T@U) ($generated@@285 T@U) ($generated@@286 T@U) ) (!  (=> (and (= (type $generated@@285) $generated@@68) (= (type $generated@@286) ($generated@@80 $generated@@81 $generated@@82))) (= ($generated@@260 ($generated@@282 $generated@@284) $generated@@285 $generated@@286) ($generated@@78 $generated@@284 $generated@@285 $generated@@286)))
 :pattern ( ($generated@@260 ($generated@@282 $generated@@284) $generated@@285 $generated@@286))
)))
(assert (forall (($generated@@287 T@U) ($generated@@288 T@U) ($generated@@289 T@U) ($generated@@290 T@U) ) (!  (=> (and (and (and (and (and (= (type $generated@@287) ($generated@@80 $generated@@81 $generated@@82)) (= (type $generated@@288) ($generated@@80 $generated@@81 $generated@@82))) (= (type $generated@@289) $generated@@153)) (= (type $generated@@290) $generated@@68)) ($generated@@136 $generated@@287 $generated@@288)) ($generated@@260 $generated@@289 $generated@@290 $generated@@287)) ($generated@@260 $generated@@289 $generated@@290 $generated@@288))
 :pattern ( ($generated@@136 $generated@@287 $generated@@288) ($generated@@260 $generated@@289 $generated@@290 $generated@@287))
)))
(assert (forall (($generated@@291 T@U) ($generated@@292 T@U) ($generated@@293 T@U) ($generated@@294 T@U) ) (!  (=> (and (and (and (and (= (type $generated@@291) ($generated@@80 $generated@@81 $generated@@82)) (= (type $generated@@292) ($generated@@80 $generated@@81 $generated@@82))) (= (type $generated@@294) $generated@@68)) ($generated@@136 $generated@@291 $generated@@292)) ($generated@@78 $generated@@293 $generated@@294 $generated@@291)) ($generated@@78 $generated@@293 $generated@@294 $generated@@292))
 :pattern ( ($generated@@136 $generated@@291 $generated@@292) ($generated@@78 $generated@@293 $generated@@294 $generated@@291))
)))
(assert (forall (($generated@@297 T@T) ) (! (= (type ($generated@@296 $generated@@297)) ($generated@@80 $generated@@297 $generated@@2))
 :pattern ( ($generated@@296 $generated@@297))
)))
(assert (forall (($generated@@298 T@U) ) (! (let (($generated@@299 ($generated@@83 (type $generated@@298))))
 (=> (= (type $generated@@298) ($generated@@80 $generated@@299 $generated@@2)) (and (= (= ($generated@@295 $generated@@298) 0) (= $generated@@298 ($generated@@296 $generated@@299))) (=> (not (= ($generated@@295 $generated@@298) 0)) (exists (($generated@@300 T@U) ) (!  (and (= (type $generated@@300) $generated@@299) (< 0 ($generated ($generated@@85 $generated@@298 $generated@@300))))
 :no-pattern (type $generated@@300)
 :no-pattern ($generated $generated@@300)
 :no-pattern ($generated@@0 $generated@@300)
))))))
 :pattern ( ($generated@@295 $generated@@298))
)))
(assert  (and (and (and (and (forall (($generated@@306 T@T) ($generated@@307 T@T) ) (= ($generated@@1 ($generated@@303 $generated@@306 $generated@@307)) 18)) (forall (($generated@@308 T@T) ($generated@@309 T@T) ) (! (= ($generated@@304 ($generated@@303 $generated@@308 $generated@@309)) $generated@@308)
 :pattern ( ($generated@@303 $generated@@308 $generated@@309))
))) (forall (($generated@@310 T@T) ($generated@@311 T@T) ) (! (= ($generated@@305 ($generated@@303 $generated@@310 $generated@@311)) $generated@@311)
 :pattern ( ($generated@@303 $generated@@310 $generated@@311))
))) (forall (($generated@@312 T@U) ) (! (let (($generated@@313 ($generated@@304 (type $generated@@312))))
(= (type ($generated@@301 $generated@@312)) ($generated@@80 $generated@@313 $generated@@4)))
 :pattern ( ($generated@@301 $generated@@312))
))) (forall (($generated@@314 T@T) ($generated@@315 T@T) ) (! (= (type ($generated@@302 $generated@@314 $generated@@315)) ($generated@@303 $generated@@314 $generated@@315))
 :pattern ( ($generated@@302 $generated@@314 $generated@@315))
))))
(assert (forall (($generated@@316 T@U) ($generated@@317 T@T) ) (! (let (($generated@@318 (type $generated@@316)))
 (not ($generated@@0 ($generated@@85 ($generated@@301 ($generated@@302 $generated@@318 $generated@@317)) $generated@@316))))
 :pattern ( (let (($generated@@318 (type $generated@@316)))
($generated@@85 ($generated@@301 ($generated@@302 $generated@@318 $generated@@317)) $generated@@316)))
)))
(assert  (and (and (and (and (forall (($generated@@324 T@T) ($generated@@325 T@T) ) (= ($generated@@1 ($generated@@321 $generated@@324 $generated@@325)) 19)) (forall (($generated@@326 T@T) ($generated@@327 T@T) ) (! (= ($generated@@322 ($generated@@321 $generated@@326 $generated@@327)) $generated@@326)
 :pattern ( ($generated@@321 $generated@@326 $generated@@327))
))) (forall (($generated@@328 T@T) ($generated@@329 T@T) ) (! (= ($generated@@323 ($generated@@321 $generated@@328 $generated@@329)) $generated@@329)
 :pattern ( ($generated@@321 $generated@@328 $generated@@329))
))) (forall (($generated@@330 T@U) ) (! (let (($generated@@331 ($generated@@322 (type $generated@@330))))
(= (type ($generated@@319 $generated@@330)) ($generated@@80 $generated@@331 $generated@@4)))
 :pattern ( ($generated@@319 $generated@@330))
))) (forall (($generated@@332 T@T) ($generated@@333 T@T) ) (! (= (type ($generated@@320 $generated@@332 $generated@@333)) ($generated@@321 $generated@@332 $generated@@333))
 :pattern ( ($generated@@320 $generated@@332 $generated@@333))
))))
(assert (forall (($generated@@334 T@U) ($generated@@335 T@T) ) (! (let (($generated@@336 (type $generated@@334)))
 (not ($generated@@0 ($generated@@85 ($generated@@319 ($generated@@320 $generated@@336 $generated@@335)) $generated@@334))))
 :pattern ( (let (($generated@@336 (type $generated@@334)))
($generated@@85 ($generated@@319 ($generated@@320 $generated@@336 $generated@@335)) $generated@@334)))
)))
(assert (forall (($generated@@337 T@U) ) (! (let (($generated@@338 ($generated@@83 (type $generated@@337))))
 (=> (= (type $generated@@337) ($generated@@80 $generated@@338 $generated@@2)) (= ($generated@@163 $generated@@337) (forall (($generated@@339 T@U) ) (!  (=> (= (type $generated@@339) $generated@@338) (and (<= 0 ($generated ($generated@@85 $generated@@337 $generated@@339))) (<= ($generated ($generated@@85 $generated@@337 $generated@@339)) ($generated@@295 $generated@@337))))
 :pattern ( ($generated@@85 $generated@@337 $generated@@339))
)))))
 :pattern ( ($generated@@163 $generated@@337))
)))
(assert (forall (($generated@@341 T@T) ($generated@@342 T@U) ) (! (= (type ($generated@@340 $generated@@341 $generated@@342)) $generated@@341)
 :pattern ( ($generated@@340 $generated@@341 $generated@@342))
)))
(assert (forall (($generated@@343 T@U) ) (!  (=> (and (= (type $generated@@343) $generated@@153) ($generated@@224 $generated@@343 $generated@@231)) (and (= ($generated@@282 ($generated@@340 $generated@@144 $generated@@343)) $generated@@343) ($generated@@140 ($generated@@340 $generated@@144 $generated@@343) $generated@@231)))
 :pattern ( ($generated@@224 $generated@@343 $generated@@231))
)))
(assert (forall (($generated@@344 T@U) ) (! (let (($generated@@345 ($generated@@305 (type $generated@@344))))
(let (($generated@@346 ($generated@@304 (type $generated@@344))))
 (=> (= (type $generated@@344) ($generated@@303 $generated@@346 $generated@@345)) (or (= $generated@@344 ($generated@@302 $generated@@346 $generated@@345)) (exists (($generated@@347 T@U) ) (!  (and (= (type $generated@@347) $generated@@346) ($generated@@0 ($generated@@85 ($generated@@301 $generated@@344) $generated@@347)))
 :no-pattern (type $generated@@347)
 :no-pattern ($generated $generated@@347)
 :no-pattern ($generated@@0 $generated@@347)
))))))
 :pattern ( ($generated@@301 $generated@@344))
)))
(assert (forall (($generated@@349 T@U) ) (! (let (($generated@@350 ($generated@@305 (type $generated@@349))))
(= (type ($generated@@348 $generated@@349)) ($generated@@80 $generated@@350 $generated@@4)))
 :pattern ( ($generated@@348 $generated@@349))
)))
(assert (forall (($generated@@351 T@U) ) (! (let (($generated@@352 ($generated@@305 (type $generated@@351))))
(let (($generated@@353 ($generated@@304 (type $generated@@351))))
 (=> (= (type $generated@@351) ($generated@@303 $generated@@353 $generated@@352)) (or (= $generated@@351 ($generated@@302 $generated@@353 $generated@@352)) (exists (($generated@@354 T@U) ) (!  (and (= (type $generated@@354) $generated@@352) ($generated@@0 ($generated@@85 ($generated@@348 $generated@@351) $generated@@354)))
 :no-pattern (type $generated@@354)
 :no-pattern ($generated $generated@@354)
 :no-pattern ($generated@@0 $generated@@354)
))))))
 :pattern ( ($generated@@348 $generated@@351))
)))
(assert (forall (($generated@@355 T@U) ) (! (let (($generated@@356 ($generated@@323 (type $generated@@355))))
(let (($generated@@357 ($generated@@322 (type $generated@@355))))
 (=> (= (type $generated@@355) ($generated@@321 $generated@@357 $generated@@356)) (or (= $generated@@355 ($generated@@320 $generated@@357 $generated@@356)) (exists (($generated@@358 T@U) ) (!  (and (= (type $generated@@358) $generated@@357) ($generated@@0 ($generated@@85 ($generated@@319 $generated@@355) $generated@@358)))
 :no-pattern (type $generated@@358)
 :no-pattern ($generated $generated@@358)
 :no-pattern ($generated@@0 $generated@@358)
))))))
 :pattern ( ($generated@@319 $generated@@355))
)))
(assert (forall (($generated@@360 T@U) ) (! (let (($generated@@361 ($generated@@323 (type $generated@@360))))
(= (type ($generated@@359 $generated@@360)) ($generated@@80 $generated@@361 $generated@@4)))
 :pattern ( ($generated@@359 $generated@@360))
)))
(assert (forall (($generated@@362 T@U) ) (! (let (($generated@@363 ($generated@@323 (type $generated@@362))))
(let (($generated@@364 ($generated@@322 (type $generated@@362))))
 (=> (= (type $generated@@362) ($generated@@321 $generated@@364 $generated@@363)) (or (= $generated@@362 ($generated@@320 $generated@@364 $generated@@363)) (exists (($generated@@365 T@U) ) (!  (and (= (type $generated@@365) $generated@@363) ($generated@@0 ($generated@@85 ($generated@@359 $generated@@362) $generated@@365)))
 :no-pattern (type $generated@@365)
 :no-pattern ($generated $generated@@365)
 :no-pattern ($generated@@0 $generated@@365)
))))))
 :pattern ( ($generated@@359 $generated@@362))
)))
(assert (forall (($generated@@366 T@U) ($generated@@367 T@U) ) (!  (=> (and (= (type $generated@@366) ($generated@@80 $generated@@153 $generated@@2)) (= (type $generated@@367) $generated@@68)) (= ($generated@@140 $generated@@366 ($generated@@162 $generated@@367)) (forall (($generated@@368 T@U) ) (!  (=> (and (= (type $generated@@368) $generated@@153) (< 0 ($generated ($generated@@85 $generated@@366 $generated@@368)))) ($generated@@224 $generated@@368 $generated@@367))
 :pattern ( ($generated@@85 $generated@@366 $generated@@368))
))))
 :pattern ( ($generated@@140 $generated@@366 ($generated@@162 $generated@@367)))
)))
(assert (forall (($generated@@370 T@U) ) (!  (=> (and (= (type $generated@@370) $generated@@144) ($generated@@369 $generated@@370)) (or ($generated@@254 $generated@@370) ($generated@@257 $generated@@370)))
 :pattern ( ($generated@@369 $generated@@370))
)))
(assert (forall (($generated@@371 T@U) ($generated@@372 T@U) ($generated@@373 T@U) ) (!  (=> (and (and (= (type $generated@@371) ($generated@@80 $generated@@153 $generated@@4)) (= (type $generated@@372) $generated@@68)) (= (type $generated@@373) ($generated@@80 $generated@@81 $generated@@82))) (= ($generated@@78 $generated@@371 ($generated@@240 $generated@@372) $generated@@373) (forall (($generated@@374 T@U) ) (!  (=> (and (= (type $generated@@374) $generated@@153) ($generated@@0 ($generated@@85 $generated@@371 $generated@@374))) ($generated@@260 $generated@@374 $generated@@372 $generated@@373))
 :pattern ( ($generated@@85 $generated@@371 $generated@@374))
))))
 :pattern ( ($generated@@78 $generated@@371 ($generated@@240 $generated@@372) $generated@@373))
)))
(assert (forall (($generated@@375 T@U) ($generated@@376 T@U) ($generated@@377 T@U) ) (!  (=> (and (and (= (type $generated@@375) ($generated@@80 $generated@@153 $generated@@4)) (= (type $generated@@376) $generated@@68)) (= (type $generated@@377) ($generated@@80 $generated@@81 $generated@@82))) (= ($generated@@78 $generated@@375 ($generated@@245 $generated@@376) $generated@@377) (forall (($generated@@378 T@U) ) (!  (=> (and (= (type $generated@@378) $generated@@153) ($generated@@0 ($generated@@85 $generated@@375 $generated@@378))) ($generated@@260 $generated@@378 $generated@@376 $generated@@377))
 :pattern ( ($generated@@85 $generated@@375 $generated@@378))
))))
 :pattern ( ($generated@@78 $generated@@375 ($generated@@245 $generated@@376) $generated@@377))
)))
(assert (forall (($generated@@379 T@U) ) (! (let (($generated@@380 (type $generated@@379)))
(= ($generated ($generated@@85 ($generated@@296 $generated@@380) $generated@@379)) 0))
 :pattern ( (let (($generated@@380 (type $generated@@379)))
($generated@@85 ($generated@@296 $generated@@380) $generated@@379)))
)))
(assert  (and (forall (($generated@@383 T@U) ) (! (= (type ($generated@@381 $generated@@383)) ($generated@@80 $generated@@153 $generated@@4))
 :pattern ( ($generated@@381 $generated@@383))
)) (forall (($generated@@384 T@U) ) (! (let (($generated@@385 ($generated@@305 (type $generated@@384))))
(let (($generated@@386 ($generated@@304 (type $generated@@384))))
(= (type ($generated@@382 $generated@@384)) ($generated@@80 $generated@@386 $generated@@385))))
 :pattern ( ($generated@@382 $generated@@384))
))))
(assert (forall (($generated@@387 T@U) ($generated@@388 T@U) ) (!  (=> (and (= (type $generated@@387) ($generated@@303 $generated@@153 $generated@@153)) (= (type $generated@@388) $generated@@153)) (= ($generated@@0 ($generated@@85 ($generated@@381 $generated@@387) $generated@@388))  (and ($generated@@0 ($generated@@85 ($generated@@301 $generated@@387) ($generated@@151 ($generated@@340 $generated@@144 $generated@@388)))) (= ($generated@@85 ($generated@@382 $generated@@387) ($generated@@151 ($generated@@340 $generated@@144 $generated@@388))) ($generated@@152 ($generated@@340 $generated@@144 $generated@@388))))))
 :pattern ( ($generated@@85 ($generated@@381 $generated@@387) $generated@@388))
)))
(assert  (and (forall (($generated@@391 T@U) ) (! (= (type ($generated@@389 $generated@@391)) ($generated@@80 $generated@@153 $generated@@4))
 :pattern ( ($generated@@389 $generated@@391))
)) (forall (($generated@@392 T@U) ) (! (let (($generated@@393 ($generated@@323 (type $generated@@392))))
(let (($generated@@394 ($generated@@322 (type $generated@@392))))
(= (type ($generated@@390 $generated@@392)) ($generated@@80 $generated@@394 $generated@@393))))
 :pattern ( ($generated@@390 $generated@@392))
))))
(assert (forall (($generated@@395 T@U) ($generated@@396 T@U) ) (!  (=> (and (= (type $generated@@395) ($generated@@321 $generated@@153 $generated@@153)) (= (type $generated@@396) $generated@@153)) (= ($generated@@0 ($generated@@85 ($generated@@389 $generated@@395) $generated@@396))  (and ($generated@@0 ($generated@@85 ($generated@@319 $generated@@395) ($generated@@151 ($generated@@340 $generated@@144 $generated@@396)))) (= ($generated@@85 ($generated@@390 $generated@@395) ($generated@@151 ($generated@@340 $generated@@144 $generated@@396))) ($generated@@152 ($generated@@340 $generated@@144 $generated@@396))))))
 :pattern ( ($generated@@85 ($generated@@389 $generated@@395) $generated@@396))
)))
(assert (forall (($generated@@397 T@U) ($generated@@398 T@U) ) (! (let (($generated@@399 (type $generated@@398)))
(let (($generated@@400 ($generated@@304 (type $generated@@397))))
 (=> (= (type $generated@@397) ($generated@@303 $generated@@400 $generated@@399)) (= ($generated@@0 ($generated@@85 ($generated@@348 $generated@@397) $generated@@398)) (exists (($generated@@401 T@U) ) (!  (and (= (type $generated@@401) $generated@@400) (and ($generated@@0 ($generated@@85 ($generated@@301 $generated@@397) $generated@@401)) (= $generated@@398 ($generated@@85 ($generated@@382 $generated@@397) $generated@@401))))
 :pattern ( ($generated@@85 ($generated@@301 $generated@@397) $generated@@401))
 :pattern ( ($generated@@85 ($generated@@382 $generated@@397) $generated@@401))
))))))
 :pattern ( ($generated@@85 ($generated@@348 $generated@@397) $generated@@398))
)))
(assert (forall (($generated@@402 T@U) ($generated@@403 T@U) ) (! (let (($generated@@404 (type $generated@@403)))
(let (($generated@@405 ($generated@@322 (type $generated@@402))))
 (=> (= (type $generated@@402) ($generated@@321 $generated@@405 $generated@@404)) (= ($generated@@0 ($generated@@85 ($generated@@359 $generated@@402) $generated@@403)) (exists (($generated@@406 T@U) ) (!  (and (= (type $generated@@406) $generated@@405) (and ($generated@@0 ($generated@@85 ($generated@@319 $generated@@402) $generated@@406)) (= $generated@@403 ($generated@@85 ($generated@@390 $generated@@402) $generated@@406))))
 :pattern ( ($generated@@85 ($generated@@319 $generated@@402) $generated@@406))
 :pattern ( ($generated@@85 ($generated@@390 $generated@@402) $generated@@406))
))))))
 :pattern ( ($generated@@85 ($generated@@359 $generated@@402) $generated@@403))
)))
(assert (forall (($generated@@408 T@U) ($generated@@409 T@U) ) (! (= (type ($generated@@407 $generated@@408 $generated@@409)) $generated@@68)
 :pattern ( ($generated@@407 $generated@@408 $generated@@409))
)))
(assert (forall (($generated@@410 T@U) ($generated@@411 T@U) ($generated@@412 T@U) ($generated@@413 T@U) ) (!  (=> (and (and (and (= (type $generated@@410) ($generated@@303 $generated@@153 $generated@@153)) (= (type $generated@@411) $generated@@68)) (= (type $generated@@412) $generated@@68)) (= (type $generated@@413) ($generated@@80 $generated@@81 $generated@@82))) (= ($generated@@78 $generated@@410 ($generated@@407 $generated@@411 $generated@@412) $generated@@413) (forall (($generated@@414 T@U) ) (!  (=> (and (= (type $generated@@414) $generated@@153) ($generated@@0 ($generated@@85 ($generated@@301 $generated@@410) $generated@@414))) (and ($generated@@260 ($generated@@85 ($generated@@382 $generated@@410) $generated@@414) $generated@@412 $generated@@413) ($generated@@260 $generated@@414 $generated@@411 $generated@@413)))
 :pattern ( ($generated@@85 ($generated@@382 $generated@@410) $generated@@414))
 :pattern ( ($generated@@85 ($generated@@301 $generated@@410) $generated@@414))
))))
 :pattern ( ($generated@@78 $generated@@410 ($generated@@407 $generated@@411 $generated@@412) $generated@@413))
)))
(assert (forall (($generated@@416 T@U) ($generated@@417 T@U) ) (! (= (type ($generated@@415 $generated@@416 $generated@@417)) $generated@@68)
 :pattern ( ($generated@@415 $generated@@416 $generated@@417))
)))
(assert (forall (($generated@@418 T@U) ($generated@@419 T@U) ($generated@@420 T@U) ($generated@@421 T@U) ) (!  (=> (and (and (and (= (type $generated@@418) ($generated@@321 $generated@@153 $generated@@153)) (= (type $generated@@419) $generated@@68)) (= (type $generated@@420) $generated@@68)) (= (type $generated@@421) ($generated@@80 $generated@@81 $generated@@82))) (= ($generated@@78 $generated@@418 ($generated@@415 $generated@@419 $generated@@420) $generated@@421) (forall (($generated@@422 T@U) ) (!  (=> (and (= (type $generated@@422) $generated@@153) ($generated@@0 ($generated@@85 ($generated@@319 $generated@@418) $generated@@422))) (and ($generated@@260 ($generated@@85 ($generated@@390 $generated@@418) $generated@@422) $generated@@420 $generated@@421) ($generated@@260 $generated@@422 $generated@@419 $generated@@421)))
 :pattern ( ($generated@@85 ($generated@@390 $generated@@418) $generated@@422))
 :pattern ( ($generated@@85 ($generated@@319 $generated@@418) $generated@@422))
))))
 :pattern ( ($generated@@78 $generated@@418 ($generated@@415 $generated@@419 $generated@@420) $generated@@421))
)))
(assert (forall (($generated@@423 T@U) ) (!  (=> (and (= (type $generated@@423) $generated@@144) ($generated@@140 $generated@@423 $generated@@231)) (or ($generated@@254 $generated@@423) ($generated@@257 $generated@@423)))
 :pattern ( ($generated@@257 $generated@@423) ($generated@@140 $generated@@423 $generated@@231))
 :pattern ( ($generated@@254 $generated@@423) ($generated@@140 $generated@@423 $generated@@231))
)))
(assert (forall (($generated@@424 T@U) ($generated@@425 T@U) ($generated@@426 T@U) ) (!  (=> (and (and (and (and (= (type $generated@@424) ($generated@@80 $generated@@81 $generated@@82)) (= (type $generated@@425) ($generated@@80 $generated@@81 $generated@@82))) (= (type $generated@@426) ($generated@@80 $generated@@81 $generated@@82))) (not (= $generated@@424 $generated@@426))) (and ($generated@@136 $generated@@424 $generated@@425) ($generated@@136 $generated@@425 $generated@@426))) ($generated@@136 $generated@@424 $generated@@426))
 :pattern ( ($generated@@136 $generated@@424 $generated@@425) ($generated@@136 $generated@@425 $generated@@426))
)))
(assert (forall (($generated@@428 T@T) ) (! (= (type ($generated@@427 $generated@@428)) ($generated@@80 $generated@@428 $generated@@4))
 :pattern ( ($generated@@427 $generated@@428))
)))
(assert (forall (($generated@@429 T@U) ) (! (let (($generated@@430 ($generated@@323 (type $generated@@429))))
(let (($generated@@431 ($generated@@322 (type $generated@@429))))
 (=> (= (type $generated@@429) ($generated@@321 $generated@@431 $generated@@430)) (= (= $generated@@429 ($generated@@320 $generated@@431 $generated@@430)) (= ($generated@@319 $generated@@429) ($generated@@427 $generated@@431))))))
 :pattern ( ($generated@@319 $generated@@429))
)))
(assert (forall (($generated@@432 T@U) ) (! (let (($generated@@433 ($generated@@323 (type $generated@@432))))
(let (($generated@@434 ($generated@@322 (type $generated@@432))))
 (=> (= (type $generated@@432) ($generated@@321 $generated@@434 $generated@@433)) (= (= $generated@@432 ($generated@@320 $generated@@434 $generated@@433)) (= ($generated@@359 $generated@@432) ($generated@@427 $generated@@433))))))
 :pattern ( ($generated@@359 $generated@@432))
)))
(assert (forall (($generated@@435 T@U) ) (! (let (($generated@@436 ($generated@@323 (type $generated@@435))))
(let (($generated@@437 ($generated@@322 (type $generated@@435))))
 (=> (= (type $generated@@435) ($generated@@321 $generated@@437 $generated@@436)) (= (= $generated@@435 ($generated@@320 $generated@@437 $generated@@436)) (= ($generated@@389 $generated@@435) ($generated@@427 $generated@@153))))))
 :pattern ( ($generated@@389 $generated@@435))
)))
(assert (forall (($generated@@438 T@U) ) (! (let (($generated@@439 ($generated@@305 (type $generated@@438))))
(let (($generated@@440 ($generated@@304 (type $generated@@438))))
 (=> (= (type $generated@@438) ($generated@@303 $generated@@440 $generated@@439)) (or (= $generated@@438 ($generated@@302 $generated@@440 $generated@@439)) (exists (($generated@@441 T@U) ($generated@@442 T@U) ) (!  (and (and (= (type $generated@@441) $generated@@153) (= (type $generated@@442) $generated@@153)) ($generated@@0 ($generated@@85 ($generated@@381 $generated@@438) ($generated@@282 ($generated@@223 $generated@@441 $generated@@442)))))
 :no-pattern (type $generated@@441)
 :no-pattern (type $generated@@442)
 :no-pattern ($generated $generated@@441)
 :no-pattern ($generated@@0 $generated@@441)
 :no-pattern ($generated $generated@@442)
 :no-pattern ($generated@@0 $generated@@442)
))))))
 :pattern ( ($generated@@381 $generated@@438))
)))
(assert (forall (($generated@@443 T@U) ) (! (let (($generated@@444 ($generated@@323 (type $generated@@443))))
(let (($generated@@445 ($generated@@322 (type $generated@@443))))
 (=> (= (type $generated@@443) ($generated@@321 $generated@@445 $generated@@444)) (or (= $generated@@443 ($generated@@320 $generated@@445 $generated@@444)) (exists (($generated@@446 T@U) ($generated@@447 T@U) ) (!  (and (and (= (type $generated@@446) $generated@@153) (= (type $generated@@447) $generated@@153)) ($generated@@0 ($generated@@85 ($generated@@389 $generated@@443) ($generated@@282 ($generated@@223 $generated@@446 $generated@@447)))))
 :no-pattern (type $generated@@446)
 :no-pattern (type $generated@@447)
 :no-pattern ($generated $generated@@446)
 :no-pattern ($generated@@0 $generated@@446)
 :no-pattern ($generated $generated@@447)
 :no-pattern ($generated@@0 $generated@@447)
))))))
 :pattern ( ($generated@@389 $generated@@443))
)))
(assert (forall (($generated@@448 T@U) ) (!  (=> (and (= (type $generated@@448) $generated@@153) ($generated@@224 $generated@@448 $generated@@46)) (and (= ($generated@@282 ($generated@@340 $generated@@2 $generated@@448)) $generated@@448) ($generated@@140 ($generated@@340 $generated@@2 $generated@@448) $generated@@46)))
 :pattern ( ($generated@@224 $generated@@448 $generated@@46))
)))
(assert (forall (($generated@@449 T@U) ) (!  (=> (and (= (type $generated@@449) $generated@@153) ($generated@@224 $generated@@449 $generated@@47)) (and (= ($generated@@282 ($generated@@340 $generated@@3 $generated@@449)) $generated@@449) ($generated@@140 ($generated@@340 $generated@@3 $generated@@449) $generated@@47)))
 :pattern ( ($generated@@224 $generated@@449 $generated@@47))
)))
(assert (forall (($generated@@450 T@U) ) (!  (=> (and (= (type $generated@@450) $generated@@153) ($generated@@224 $generated@@450 $generated@@44)) (and (= ($generated@@282 ($generated@@340 $generated@@4 $generated@@450)) $generated@@450) ($generated@@140 ($generated@@340 $generated@@4 $generated@@450) $generated@@44)))
 :pattern ( ($generated@@224 $generated@@450 $generated@@44))
)))
(assert (= ($generated@@1 $generated@@451) 20))
(assert (forall (($generated@@452 T@U) ) (!  (=> (and (= (type $generated@@452) $generated@@153) ($generated@@224 $generated@@452 $generated@@45)) (and (= ($generated@@282 ($generated@@340 $generated@@451 $generated@@452)) $generated@@452) ($generated@@140 ($generated@@340 $generated@@451 $generated@@452) $generated@@45)))
 :pattern ( ($generated@@224 $generated@@452 $generated@@45))
)))
(assert (forall (($generated@@453 T@U) ($generated@@454 T@U) ) (!  (=> (= (type $generated@@454) $generated@@68) (= ($generated@@224 ($generated@@282 $generated@@453) $generated@@454) ($generated@@140 $generated@@453 $generated@@454)))
 :pattern ( ($generated@@224 ($generated@@282 $generated@@453) $generated@@454))
)))
(assert (forall (($generated@@455 T@U) ) (! (let (($generated@@456 ($generated@@83 (type $generated@@455))))
 (=> (= (type $generated@@455) ($generated@@80 $generated@@456 $generated@@2)) (<= 0 ($generated@@295 $generated@@455))))
 :pattern ( ($generated@@295 $generated@@455))
)))
(assert (forall (($generated@@457 T@U) ) (! (let (($generated@@458 ($generated@@275 (type $generated@@457))))
 (=> (= (type $generated@@457) ($generated@@274 $generated@@458)) (<= 0 ($generated@@273 $generated@@457))))
 :pattern ( ($generated@@273 $generated@@457))
)))
(assert (forall (($generated@@460 T@U) ) (! (= (type ($generated@@459 $generated@@460)) $generated@@68)
 :pattern ( ($generated@@459 $generated@@460))
)))
(assert (forall (($generated@@461 T@U) ($generated@@462 T@U) ) (!  (=> (and (= (type $generated@@461) $generated@@68) (= (type $generated@@462) $generated@@68)) (= ($generated@@459 ($generated@@407 $generated@@461 $generated@@462)) $generated@@461))
 :pattern ( ($generated@@407 $generated@@461 $generated@@462))
)))
(assert (forall (($generated@@464 T@U) ) (! (= (type ($generated@@463 $generated@@464)) $generated@@68)
 :pattern ( ($generated@@463 $generated@@464))
)))
(assert (forall (($generated@@465 T@U) ($generated@@466 T@U) ) (!  (=> (and (= (type $generated@@465) $generated@@68) (= (type $generated@@466) $generated@@68)) (= ($generated@@463 ($generated@@407 $generated@@465 $generated@@466)) $generated@@466))
 :pattern ( ($generated@@407 $generated@@465 $generated@@466))
)))
(assert (forall (($generated@@467 T@U) ($generated@@468 T@U) ) (!  (=> (and (= (type $generated@@467) $generated@@68) (= (type $generated@@468) $generated@@68)) (= ($generated@@76 ($generated@@407 $generated@@467 $generated@@468)) $generated@@58))
 :pattern ( ($generated@@407 $generated@@467 $generated@@468))
)))
(assert (forall (($generated@@470 T@U) ) (! (= (type ($generated@@469 $generated@@470)) $generated@@68)
 :pattern ( ($generated@@469 $generated@@470))
)))
(assert (forall (($generated@@471 T@U) ($generated@@472 T@U) ) (!  (=> (and (= (type $generated@@471) $generated@@68) (= (type $generated@@472) $generated@@68)) (= ($generated@@469 ($generated@@415 $generated@@471 $generated@@472)) $generated@@471))
 :pattern ( ($generated@@415 $generated@@471 $generated@@472))
)))
(assert (forall (($generated@@474 T@U) ) (! (= (type ($generated@@473 $generated@@474)) $generated@@68)
 :pattern ( ($generated@@473 $generated@@474))
)))
(assert (forall (($generated@@475 T@U) ($generated@@476 T@U) ) (!  (=> (and (= (type $generated@@475) $generated@@68) (= (type $generated@@476) $generated@@68)) (= ($generated@@473 ($generated@@415 $generated@@475 $generated@@476)) $generated@@476))
 :pattern ( ($generated@@415 $generated@@475 $generated@@476))
)))
(assert (forall (($generated@@477 T@U) ($generated@@478 T@U) ) (!  (=> (and (= (type $generated@@477) $generated@@68) (= (type $generated@@478) $generated@@68)) (= ($generated@@76 ($generated@@415 $generated@@477 $generated@@478)) $generated@@59))
 :pattern ( ($generated@@415 $generated@@477 $generated@@478))
)))
(assert (forall (($generated@@479 T@U) ($generated@@480 T@U) ) (!  (=> (and (= (type $generated@@479) $generated@@153) (= (type $generated@@480) $generated@@153)) (= ($generated@@158 ($generated@@223 $generated@@479 $generated@@480)) $generated@@61))
 :pattern ( ($generated@@223 $generated@@479 $generated@@480))
)))
(assert (forall (($generated@@482 T@U) ) (! (= (type ($generated@@481 $generated@@482)) $generated@@68)
 :pattern ( ($generated@@481 $generated@@482))
)))
(assert (forall (($generated@@483 T@U) ($generated@@484 T@U) ) (!  (=> (and (= (type $generated@@483) $generated@@68) (= (type $generated@@484) $generated@@68)) (= ($generated@@481 ($generated@@143 $generated@@483 $generated@@484)) $generated@@483))
 :pattern ( ($generated@@143 $generated@@483 $generated@@484))
)))
(assert (forall (($generated@@486 T@U) ) (! (= (type ($generated@@485 $generated@@486)) $generated@@68)
 :pattern ( ($generated@@485 $generated@@486))
)))
(assert (forall (($generated@@487 T@U) ($generated@@488 T@U) ) (!  (=> (and (= (type $generated@@487) $generated@@68) (= (type $generated@@488) $generated@@68)) (= ($generated@@485 ($generated@@143 $generated@@487 $generated@@488)) $generated@@488))
 :pattern ( ($generated@@143 $generated@@487 $generated@@488))
)))
(assert (forall (($generated@@489 T@U) ($generated@@490 T@U) ) (!  (=> (and (= (type $generated@@489) $generated@@153) (= (type $generated@@490) $generated@@153)) (= ($generated@@151 ($generated@@223 $generated@@489 $generated@@490)) $generated@@489))
 :pattern ( ($generated@@223 $generated@@489 $generated@@490))
)))
(assert (forall (($generated@@491 T@U) ($generated@@492 T@U) ) (!  (=> (and (= (type $generated@@491) $generated@@153) (= (type $generated@@492) $generated@@153)) (= ($generated@@152 ($generated@@223 $generated@@491 $generated@@492)) $generated@@492))
 :pattern ( ($generated@@223 $generated@@491 $generated@@492))
)))
(assert  (and (forall (($generated@@495 T@U) ) (! (= (type ($generated@@493 $generated@@495)) $generated@@68)
 :pattern ( ($generated@@493 $generated@@495))
)) (forall (($generated@@496 T@U) ($generated@@497 Int) ) (! (let (($generated@@498 ($generated@@275 (type $generated@@496))))
(= (type ($generated@@494 $generated@@496 $generated@@497)) $generated@@498))
 :pattern ( ($generated@@494 $generated@@496 $generated@@497))
))))
(assert (forall (($generated@@499 T@U) ($generated@@500 T@U) ($generated@@501 T@U) ) (!  (=> (and (and (= (type $generated@@499) ($generated@@274 $generated@@153)) (= (type $generated@@500) $generated@@68)) (= (type $generated@@501) ($generated@@80 $generated@@81 $generated@@82))) (= ($generated@@78 $generated@@499 ($generated@@493 $generated@@500) $generated@@501) (forall (($generated@@502 Int) ) (!  (=> (and (<= 0 $generated@@502) (< $generated@@502 ($generated@@273 $generated@@499))) ($generated@@260 ($generated@@494 $generated@@499 $generated@@502) $generated@@500 $generated@@501))
 :pattern ( ($generated@@494 $generated@@499 $generated@@502))
))))
 :pattern ( ($generated@@78 $generated@@499 ($generated@@493 $generated@@500) $generated@@501))
)))
(assert (forall (($generated@@504 Int) ) (! (= ($generated@@503 ($generated@@79 $generated@@504)) $generated@@504)
 :pattern ( ($generated@@79 $generated@@504))
)))
(assert (forall (($generated@@506 T@U) ) (! (= (type ($generated@@505 $generated@@506)) $generated@@68)
 :pattern ( ($generated@@505 $generated@@506))
)))
(assert (forall (($generated@@507 T@U) ) (!  (=> (= (type $generated@@507) $generated@@68) (= ($generated@@505 ($generated@@240 $generated@@507)) $generated@@507))
 :pattern ( ($generated@@240 $generated@@507))
)))
(assert (forall (($generated@@508 T@U) ) (!  (=> (= (type $generated@@508) $generated@@68) (= ($generated@@76 ($generated@@240 $generated@@508)) $generated@@54))
 :pattern ( ($generated@@240 $generated@@508))
)))
(assert (forall (($generated@@510 T@U) ) (! (= (type ($generated@@509 $generated@@510)) $generated@@68)
 :pattern ( ($generated@@509 $generated@@510))
)))
(assert (forall (($generated@@511 T@U) ) (!  (=> (= (type $generated@@511) $generated@@68) (= ($generated@@509 ($generated@@245 $generated@@511)) $generated@@511))
 :pattern ( ($generated@@245 $generated@@511))
)))
(assert (forall (($generated@@512 T@U) ) (!  (=> (= (type $generated@@512) $generated@@68) (= ($generated@@76 ($generated@@245 $generated@@512)) $generated@@55))
 :pattern ( ($generated@@245 $generated@@512))
)))
(assert (forall (($generated@@514 T@U) ) (! (= (type ($generated@@513 $generated@@514)) $generated@@68)
 :pattern ( ($generated@@513 $generated@@514))
)))
(assert (forall (($generated@@515 T@U) ) (!  (=> (= (type $generated@@515) $generated@@68) (= ($generated@@513 ($generated@@162 $generated@@515)) $generated@@515))
 :pattern ( ($generated@@162 $generated@@515))
)))
(assert (forall (($generated@@516 T@U) ) (!  (=> (= (type $generated@@516) $generated@@68) (= ($generated@@76 ($generated@@162 $generated@@516)) $generated@@56))
 :pattern ( ($generated@@162 $generated@@516))
)))
(assert (forall (($generated@@518 T@U) ) (! (= (type ($generated@@517 $generated@@518)) $generated@@68)
 :pattern ( ($generated@@517 $generated@@518))
)))
(assert (forall (($generated@@519 T@U) ) (!  (=> (= (type $generated@@519) $generated@@68) (= ($generated@@517 ($generated@@493 $generated@@519)) $generated@@519))
 :pattern ( ($generated@@493 $generated@@519))
)))
(assert (forall (($generated@@520 T@U) ) (!  (=> (= (type $generated@@520) $generated@@68) (= ($generated@@76 ($generated@@493 $generated@@520)) $generated@@57))
 :pattern ( ($generated@@493 $generated@@520))
)))
(assert (forall (($generated@@521 T@U) ) (! (let (($generated@@522 (type $generated@@521)))
(= ($generated@@340 $generated@@522 ($generated@@282 $generated@@521)) $generated@@521))
 :pattern ( ($generated@@282 $generated@@521))
)))
(assert (forall (($generated@@523 T@U) ($generated@@524 T@U) ($generated@@525 T@U) ) (!  (=> (and (and (= (type $generated@@523) ($generated@@303 $generated@@153 $generated@@153)) (= (type $generated@@524) $generated@@68)) (= (type $generated@@525) $generated@@68)) (= ($generated@@140 $generated@@523 ($generated@@407 $generated@@524 $generated@@525)) (forall (($generated@@526 T@U) ) (!  (=> (and (= (type $generated@@526) $generated@@153) ($generated@@0 ($generated@@85 ($generated@@301 $generated@@523) $generated@@526))) (and ($generated@@224 ($generated@@85 ($generated@@382 $generated@@523) $generated@@526) $generated@@525) ($generated@@224 $generated@@526 $generated@@524)))
 :pattern ( ($generated@@85 ($generated@@382 $generated@@523) $generated@@526))
 :pattern ( ($generated@@85 ($generated@@301 $generated@@523) $generated@@526))
))))
 :pattern ( ($generated@@140 $generated@@523 ($generated@@407 $generated@@524 $generated@@525)))
)))
(assert (forall (($generated@@527 T@U) ($generated@@528 T@U) ($generated@@529 T@U) ) (!  (=> (and (and (= (type $generated@@527) ($generated@@321 $generated@@153 $generated@@153)) (= (type $generated@@528) $generated@@68)) (= (type $generated@@529) $generated@@68)) (= ($generated@@140 $generated@@527 ($generated@@415 $generated@@528 $generated@@529)) (forall (($generated@@530 T@U) ) (!  (=> (and (= (type $generated@@530) $generated@@153) ($generated@@0 ($generated@@85 ($generated@@319 $generated@@527) $generated@@530))) (and ($generated@@224 ($generated@@85 ($generated@@390 $generated@@527) $generated@@530) $generated@@529) ($generated@@224 $generated@@530 $generated@@528)))
 :pattern ( ($generated@@85 ($generated@@390 $generated@@527) $generated@@530))
 :pattern ( ($generated@@85 ($generated@@319 $generated@@527) $generated@@530))
))))
 :pattern ( ($generated@@140 $generated@@527 ($generated@@415 $generated@@528 $generated@@529)))
)))
(assert (forall (($generated@@533 T@U) ($generated@@534 T@U) ) (!  (=> (and (= (type $generated@@533) $generated@@153) (= (type $generated@@534) $generated@@153)) (< ($generated@@531 $generated@@533) ($generated@@532 ($generated@@223 $generated@@533 $generated@@534))))
 :pattern ( ($generated@@223 $generated@@533 $generated@@534))
)))
(assert (forall (($generated@@535 T@U) ($generated@@536 T@U) ) (!  (=> (and (= (type $generated@@535) $generated@@153) (= (type $generated@@536) $generated@@153)) (< ($generated@@531 $generated@@536) ($generated@@532 ($generated@@223 $generated@@535 $generated@@536))))
 :pattern ( ($generated@@223 $generated@@535 $generated@@536))
)))
(assert (forall (($generated@@537 T@U) ($generated@@538 T@U) ($generated@@539 T@U) ) (!  (=> (and (and (and (= (type $generated@@537) $generated@@153) (= (type $generated@@538) $generated@@68)) (= (type $generated@@539) $generated@@68)) ($generated@@224 $generated@@537 ($generated@@407 $generated@@538 $generated@@539))) (and (= ($generated@@282 ($generated@@340 ($generated@@303 $generated@@153 $generated@@153) $generated@@537)) $generated@@537) ($generated@@140 ($generated@@340 ($generated@@303 $generated@@153 $generated@@153) $generated@@537) ($generated@@407 $generated@@538 $generated@@539))))
 :pattern ( ($generated@@224 $generated@@537 ($generated@@407 $generated@@538 $generated@@539)))
)))
(assert (forall (($generated@@540 T@U) ($generated@@541 T@U) ($generated@@542 T@U) ) (!  (=> (and (and (and (= (type $generated@@540) $generated@@153) (= (type $generated@@541) $generated@@68)) (= (type $generated@@542) $generated@@68)) ($generated@@224 $generated@@540 ($generated@@415 $generated@@541 $generated@@542))) (and (= ($generated@@282 ($generated@@340 ($generated@@321 $generated@@153 $generated@@153) $generated@@540)) $generated@@540) ($generated@@140 ($generated@@340 ($generated@@321 $generated@@153 $generated@@153) $generated@@540) ($generated@@415 $generated@@541 $generated@@542))))
 :pattern ( ($generated@@224 $generated@@540 ($generated@@415 $generated@@541 $generated@@542)))
)))
(assert (forall (($generated@@543 T@U) ($generated@@544 T@U) ($generated@@545 T@U) ) (!  (=> (and (and (and (= (type $generated@@543) $generated@@68) (= (type $generated@@544) $generated@@68)) (= (type $generated@@545) $generated@@153)) ($generated@@224 $generated@@545 ($generated@@143 $generated@@543 $generated@@544))) (and (= ($generated@@282 ($generated@@340 $generated@@144 $generated@@545)) $generated@@545) ($generated@@140 ($generated@@340 $generated@@144 $generated@@545) ($generated@@143 $generated@@543 $generated@@544))))
 :pattern ( ($generated@@224 $generated@@545 ($generated@@143 $generated@@543 $generated@@544)))
)))
(assert (forall (($generated@@546 T@U) ) (! (let (($generated@@547 (type $generated@@546)))
 (not ($generated@@0 ($generated@@85 ($generated@@427 $generated@@547) $generated@@546))))
 :pattern ( (let (($generated@@547 (type $generated@@546)))
($generated@@85 ($generated@@427 $generated@@547) $generated@@546)))
)))
(assert (forall (($generated@@549 T@U) ) (! (= (type ($generated@@548 $generated@@549)) $generated@@73)
 :pattern ( ($generated@@548 $generated@@549))
)))
(assert (forall (($generated@@550 T@U) ($generated@@551 T@U) ) (!  (=> (and (= (type $generated@@550) $generated@@68) (= (type $generated@@551) $generated@@68)) (and (= ($generated@@76 ($generated@@143 $generated@@550 $generated@@551)) $generated@@62) (= ($generated@@548 ($generated@@143 $generated@@550 $generated@@551)) $generated@@66)))
 :pattern ( ($generated@@143 $generated@@550 $generated@@551))
)))
(assert (forall (($generated@@552 T@U) ) (!  (=> (= (type $generated@@552) $generated@@144) (= ($generated@@531 ($generated@@282 $generated@@552)) ($generated@@532 $generated@@552)))
 :pattern ( ($generated@@531 ($generated@@282 $generated@@552)))
)))
(assert (forall (($generated@@553 T@U) ) (!  (=> (and (= (type $generated@@553) $generated@@153) ($generated@@224 $generated@@553 ($generated@@79 0))) (and (= ($generated@@282 ($generated@@340 $generated@@2 $generated@@553)) $generated@@553) ($generated@@140 ($generated@@340 ($generated@@80 $generated@@153 $generated@@4) $generated@@553) ($generated@@79 0))))
 :pattern ( ($generated@@224 $generated@@553 ($generated@@79 0)))
)))
(assert (forall (($generated@@554 T@U) ($generated@@555 T@U) ) (!  (=> (and (and (= (type $generated@@554) $generated@@153) (= (type $generated@@555) $generated@@68)) ($generated@@224 $generated@@554 ($generated@@240 $generated@@555))) (and (= ($generated@@282 ($generated@@340 ($generated@@80 $generated@@153 $generated@@4) $generated@@554)) $generated@@554) ($generated@@140 ($generated@@340 ($generated@@80 $generated@@153 $generated@@4) $generated@@554) ($generated@@240 $generated@@555))))
 :pattern ( ($generated@@224 $generated@@554 ($generated@@240 $generated@@555)))
)))
(assert (forall (($generated@@556 T@U) ($generated@@557 T@U) ) (!  (=> (and (and (= (type $generated@@556) $generated@@153) (= (type $generated@@557) $generated@@68)) ($generated@@224 $generated@@556 ($generated@@245 $generated@@557))) (and (= ($generated@@282 ($generated@@340 ($generated@@80 $generated@@153 $generated@@4) $generated@@556)) $generated@@556) ($generated@@140 ($generated@@340 ($generated@@80 $generated@@153 $generated@@4) $generated@@556) ($generated@@245 $generated@@557))))
 :pattern ( ($generated@@224 $generated@@556 ($generated@@245 $generated@@557)))
)))
(assert (forall (($generated@@558 T@U) ($generated@@559 T@U) ) (!  (=> (and (and (= (type $generated@@558) $generated@@153) (= (type $generated@@559) $generated@@68)) ($generated@@224 $generated@@558 ($generated@@162 $generated@@559))) (and (= ($generated@@282 ($generated@@340 ($generated@@80 $generated@@153 $generated@@2) $generated@@558)) $generated@@558) ($generated@@140 ($generated@@340 ($generated@@80 $generated@@153 $generated@@2) $generated@@558) ($generated@@162 $generated@@559))))
 :pattern ( ($generated@@224 $generated@@558 ($generated@@162 $generated@@559)))
)))
(assert (forall (($generated@@560 T@U) ($generated@@561 T@U) ) (!  (=> (and (and (= (type $generated@@560) $generated@@153) (= (type $generated@@561) $generated@@68)) ($generated@@224 $generated@@560 ($generated@@493 $generated@@561))) (and (= ($generated@@282 ($generated@@340 ($generated@@274 $generated@@153) $generated@@560)) $generated@@560) ($generated@@140 ($generated@@340 ($generated@@274 $generated@@153) $generated@@560) ($generated@@493 $generated@@561))))
 :pattern ( ($generated@@224 $generated@@560 ($generated@@493 $generated@@561)))
)))
(assert (= ($generated@@76 $generated@@231) $generated@@64))
(assert (= ($generated@@548 $generated@@231) $generated@@67))
(assert (forall (($generated@@562 T@U) ($generated@@563 T@U) ($generated@@564 T@U) ) (!  (=> (and (and (= (type $generated@@562) ($generated@@80 $generated@@153 $generated@@2)) (= (type $generated@@563) $generated@@68)) (= (type $generated@@564) ($generated@@80 $generated@@81 $generated@@82))) (= ($generated@@78 $generated@@562 ($generated@@162 $generated@@563) $generated@@564) (forall (($generated@@565 T@U) ) (!  (=> (and (= (type $generated@@565) $generated@@153) (< 0 ($generated ($generated@@85 $generated@@562 $generated@@565)))) ($generated@@260 $generated@@565 $generated@@563 $generated@@564))
 :pattern ( ($generated@@85 $generated@@562 $generated@@565))
))))
 :pattern ( ($generated@@78 $generated@@562 ($generated@@162 $generated@@563) $generated@@564))
)))
(assert (= $generated@@159 ($generated@@250 $generated@@159)))
(assert (= $generated@@161 ($generated@@250 $generated@@161)))
(assert (forall (($generated@@566 T@U) ($generated@@567 T@U) ($generated@@568 T@U) ) (!  (=> (and (and (and (= (type $generated@@566) $generated@@144) (= (type $generated@@567) $generated@@68)) (= (type $generated@@568) ($generated@@80 $generated@@81 $generated@@82))) (and ($generated@@232 $generated@@568) (and ($generated@@142 $generated@@566) (exists (($generated@@569 T@U) ) (!  (and (= (type $generated@@569) $generated@@68) ($generated@@78 $generated@@566 ($generated@@143 $generated@@567 $generated@@569) $generated@@568))
 :pattern ( ($generated@@78 $generated@@566 ($generated@@143 $generated@@567 $generated@@569) $generated@@568))
))))) ($generated@@260 ($generated@@151 $generated@@566) $generated@@567 $generated@@568))
 :pattern ( ($generated@@260 ($generated@@151 $generated@@566) $generated@@567 $generated@@568))
)))
(assert (forall (($generated@@570 T@U) ($generated@@571 T@U) ($generated@@572 T@U) ) (!  (=> (and (and (and (= (type $generated@@570) $generated@@144) (= (type $generated@@571) $generated@@68)) (= (type $generated@@572) ($generated@@80 $generated@@81 $generated@@82))) (and ($generated@@232 $generated@@572) (and ($generated@@142 $generated@@570) (exists (($generated@@573 T@U) ) (!  (and (= (type $generated@@573) $generated@@68) ($generated@@78 $generated@@570 ($generated@@143 $generated@@573 $generated@@571) $generated@@572))
 :pattern ( ($generated@@78 $generated@@570 ($generated@@143 $generated@@573 $generated@@571) $generated@@572))
))))) ($generated@@260 ($generated@@152 $generated@@570) $generated@@571 $generated@@572))
 :pattern ( ($generated@@260 ($generated@@152 $generated@@570) $generated@@571 $generated@@572))
)))
(assert (forall (($generated@@574 T@U) ($generated@@575 T@U) ) (!  (=> (and (= (type $generated@@574) $generated@@153) (= (type $generated@@575) $generated@@153)) (= ($generated@@223 ($generated@@250 $generated@@574) ($generated@@250 $generated@@575)) ($generated@@250 ($generated@@223 $generated@@574 $generated@@575))))
 :pattern ( ($generated@@223 ($generated@@250 $generated@@574) ($generated@@250 $generated@@575)))
)))
(assert (forall (($generated@@576 T@U) ) (! (= ($generated@@282 ($generated@@250 $generated@@576)) ($generated@@250 ($generated@@282 $generated@@576)))
 :pattern ( ($generated@@282 ($generated@@250 $generated@@576)))
)))
(assert (forall (($generated@@577 T@U) ) (! (let (($generated@@578 ($generated@@275 (type $generated@@577))))
 (=> (and (= (type $generated@@577) ($generated@@274 $generated@@578)) (= ($generated@@273 $generated@@577) 0)) (= $generated@@577 ($generated@@272 $generated@@578))))
 :pattern ( ($generated@@273 $generated@@577))
)))
(assert (forall (($generated@@579 T@U) ($generated@@580 T@U) ($generated@@581 T@U) ) (! (let (($generated@@582 (type $generated@@580)))
 (=> (and (and (= (type $generated@@579) ($generated@@80 $generated@@582 $generated@@2)) (= (type $generated@@581) $generated@@2)) (<= 0 ($generated $generated@@581))) (= ($generated@@295 ($generated@@86 $generated@@579 $generated@@580 $generated@@581)) (+ (- ($generated@@295 $generated@@579) ($generated ($generated@@85 $generated@@579 $generated@@580))) ($generated $generated@@581)))))
 :pattern ( ($generated@@295 ($generated@@86 $generated@@579 $generated@@580 $generated@@581)))
)))
(assert (forall (($generated@@583 T@U) ($generated@@584 T@U) ) (!  (=> (and (= (type $generated@@583) ($generated@@80 $generated@@81 $generated@@82)) (= (type $generated@@584) $generated@@2)) ($generated@@78 $generated@@584 $generated@@46 $generated@@583))
 :pattern ( ($generated@@78 $generated@@584 $generated@@46 $generated@@583))
)))
(assert (forall (($generated@@585 T@U) ($generated@@586 T@U) ) (!  (=> (and (= (type $generated@@585) ($generated@@80 $generated@@81 $generated@@82)) (= (type $generated@@586) $generated@@3)) ($generated@@78 $generated@@586 $generated@@47 $generated@@585))
 :pattern ( ($generated@@78 $generated@@586 $generated@@47 $generated@@585))
)))
(assert (forall (($generated@@587 T@U) ($generated@@588 T@U) ) (!  (=> (and (= (type $generated@@587) ($generated@@80 $generated@@81 $generated@@82)) (= (type $generated@@588) $generated@@4)) ($generated@@78 $generated@@588 $generated@@44 $generated@@587))
 :pattern ( ($generated@@78 $generated@@588 $generated@@44 $generated@@587))
)))
(assert (forall (($generated@@589 T@U) ($generated@@590 T@U) ) (!  (=> (and (= (type $generated@@589) ($generated@@80 $generated@@81 $generated@@82)) (= (type $generated@@590) $generated@@451)) ($generated@@78 $generated@@590 $generated@@45 $generated@@589))
 :pattern ( ($generated@@78 $generated@@590 $generated@@45 $generated@@589))
)))
(assert (forall (($generated@@591 T@U) ($generated@@592 T@U) ) (!  (=> (and (= (type $generated@@591) ($generated@@80 $generated@@81 $generated@@82)) (= (type $generated@@592) $generated@@153)) ($generated@@78 $generated@@592 $generated@@48 $generated@@591))
 :pattern ( ($generated@@78 $generated@@592 $generated@@48 $generated@@591))
)))
(assert (forall (($generated@@593 T@U) ($generated@@594 T@U) ) (!  (=> (and (= (type $generated@@593) ($generated@@274 $generated@@153)) (= (type $generated@@594) $generated@@68)) (= ($generated@@140 $generated@@593 ($generated@@493 $generated@@594)) (forall (($generated@@595 Int) ) (!  (=> (and (<= 0 $generated@@595) (< $generated@@595 ($generated@@273 $generated@@593))) ($generated@@224 ($generated@@494 $generated@@593 $generated@@595) $generated@@594))
 :pattern ( ($generated@@494 $generated@@593 $generated@@595))
))))
 :pattern ( ($generated@@140 $generated@@593 ($generated@@493 $generated@@594)))
)))
(assert (forall (($generated@@597 T@U) ($generated@@598 Int) ) (!  (=> (= (type $generated@@597) ($generated@@274 $generated@@153)) (=> (and (<= 0 $generated@@598) (< $generated@@598 ($generated@@273 $generated@@597))) (< ($generated@@532 ($generated@@340 $generated@@144 ($generated@@494 $generated@@597 $generated@@598))) ($generated@@596 $generated@@597))))
 :pattern ( ($generated@@532 ($generated@@340 $generated@@144 ($generated@@494 $generated@@597 $generated@@598))))
)))
(assert (forall (($generated@@599 T@U) ($generated@@600 T@U) ($generated@@601 T@U) ) (!  (=> (and (and (and (= (type $generated@@599) ($generated@@303 $generated@@153 $generated@@153)) (= (type $generated@@600) $generated@@68)) (= (type $generated@@601) $generated@@68)) ($generated@@140 $generated@@599 ($generated@@407 $generated@@600 $generated@@601))) (and (and ($generated@@140 ($generated@@301 $generated@@599) ($generated@@240 $generated@@600)) ($generated@@140 ($generated@@348 $generated@@599) ($generated@@240 $generated@@601))) ($generated@@140 ($generated@@381 $generated@@599) ($generated@@240 ($generated@@143 $generated@@600 $generated@@601)))))
 :pattern ( ($generated@@140 $generated@@599 ($generated@@407 $generated@@600 $generated@@601)))
)))
(assert (forall (($generated@@602 T@U) ($generated@@603 T@U) ($generated@@604 T@U) ) (!  (=> (and (and (and (= (type $generated@@602) ($generated@@321 $generated@@153 $generated@@153)) (= (type $generated@@603) $generated@@68)) (= (type $generated@@604) $generated@@68)) ($generated@@140 $generated@@602 ($generated@@415 $generated@@603 $generated@@604))) (and (and ($generated@@140 ($generated@@319 $generated@@602) ($generated@@245 $generated@@603)) ($generated@@140 ($generated@@359 $generated@@602) ($generated@@245 $generated@@604))) ($generated@@140 ($generated@@389 $generated@@602) ($generated@@245 ($generated@@143 $generated@@603 $generated@@604)))))
 :pattern ( ($generated@@140 $generated@@602 ($generated@@415 $generated@@603 $generated@@604)))
)))
(assert (forall (($generated@@605 T@U) ) (!  (=> (= (type $generated@@605) $generated@@2) ($generated@@140 $generated@@605 $generated@@46))
 :pattern ( ($generated@@140 $generated@@605 $generated@@46))
)))
(assert (forall (($generated@@606 T@U) ) (!  (=> (= (type $generated@@606) $generated@@3) ($generated@@140 $generated@@606 $generated@@47))
 :pattern ( ($generated@@140 $generated@@606 $generated@@47))
)))
(assert (forall (($generated@@607 T@U) ) (!  (=> (= (type $generated@@607) $generated@@4) ($generated@@140 $generated@@607 $generated@@44))
 :pattern ( ($generated@@140 $generated@@607 $generated@@44))
)))
(assert (forall (($generated@@608 T@U) ) (!  (=> (= (type $generated@@608) $generated@@451) ($generated@@140 $generated@@608 $generated@@45))
 :pattern ( ($generated@@140 $generated@@608 $generated@@45))
)))
(assert (forall (($generated@@609 T@U) ) (!  (=> (= (type $generated@@609) $generated@@153) ($generated@@140 $generated@@609 $generated@@48))
 :pattern ( ($generated@@140 $generated@@609 $generated@@48))
)))
(push 1)
(declare-fun ControlFlow (Int Int) Int)
(declare-fun $generated@@610 () T@U)
(declare-fun $generated@@611 () T@U)
(declare-fun $generated@@612 () T@U)
(declare-fun $generated@@613 () T@U)
(declare-fun $generated@@614 () T@U)
(declare-fun $generated@@615 () T@U)
(declare-fun $generated@@616 (T@U) Bool)
(declare-fun $generated@@617 () Int)
(assert  (and (and (and (and (and (= (type $generated@@610) ($generated@@169 $generated@@81 $generated@@4)) (= (type $generated@@611) $generated@@81)) (= (type $generated@@612) ($generated@@80 $generated@@81 $generated@@82))) (= (type $generated@@613) $generated@@144)) (= (type $generated@@614) $generated@@144)) (= (type $generated@@615) ($generated@@80 $generated@@81 $generated@@82))))
(set-option :timeout 0)
(set-option :rlimit 0)
(assert (not
 (=> (= (ControlFlow 0 0) 3) (let (($generated@@618  (=> (= $generated@@610 ($generated@@168 $generated@@611 $generated@@612 $generated@@60 false)) (=> (and (= $generated@@613 ($generated@@250 $generated@@159)) (= $generated@@614 ($generated@@250 $generated@@161))) (=> (and (and (and ($generated@@232 $generated@@615) ($generated@@616 $generated@@615)) (and ($generated@@369 $generated@@613) ($generated@@369 $generated@@614))) (and (and ($generated@@237 $generated@@613 $generated@@614) (forall (($generated@@619 T@U) ) (!  (=> (= (type $generated@@619) $generated@@81) (=> (and (not (= $generated@@619 $generated@@611)) ($generated@@0 ($generated@@87 ($generated@@85 $generated@@612 $generated@@619) $generated@@60))) (= ($generated@@85 $generated@@615 $generated@@619) ($generated@@85 $generated@@612 $generated@@619))))
 :pattern ( ($generated@@85 $generated@@615 $generated@@619))
))) (and ($generated@@136 $generated@@612 $generated@@615) (= (ControlFlow 0 2) (- 0 1))))) ($generated@@0 ($generated@@250 ($generated@@11 false))))))))
(let (($generated@@620  (=> (and (and ($generated@@232 $generated@@612) ($generated@@616 $generated@@612)) (and (= 2 $generated@@617) (= (ControlFlow 0 3) 2))) $generated@@618)))
$generated@@620)))
))
(check-sat)
(pop 1)
; Valid
(get-info :rlimit)
(reset)
(set-option :rlimit 0)
; did a full reset
(reset)
(set-option :print-success false)
(set-info :smt-lib-version 2.6)
(set-option :auto_config false)
(set-option :type_check true)
(set-option :smt.case_split 3)
(set-option :smt.qi.eager_threshold 100)
(set-option :smt.delay_units true)
(set-option :smt.arith.solver 2)
(set-option :smt.mbqi false)
(set-option :model.compact false)
(set-option :model.v2 true)
(set-option :pp.bv_literals false)
; done setting options


(set-info :category "industrial")
(declare-sort |T@U| 0)
(declare-sort |T@T| 0)
(declare-fun real_pow (Real Real) Real)
(declare-fun UOrdering2 (|T@U| |T@U|) Bool)
(declare-fun UOrdering3 (|T@T| |T@U| |T@U|) Bool)
(declare-fun tickleBool (Bool) Bool)
(assert (and (tickleBool true) (tickleBool false)))
(declare-fun $generated (T@U) Int)
(declare-fun $generated@@0 (T@U) Bool)
(declare-fun $generated@@1 (T@T) Int)
(declare-fun $generated@@2 () T@T)
(declare-fun $generated@@3 () T@T)
(declare-fun $generated@@4 () T@T)
(declare-fun $generated@@5 () T@T)
(declare-fun $generated@@6 () T@T)
(declare-fun $generated@@7 () T@T)
(declare-fun $generated@@8 (Int) T@U)
(declare-fun type (T@U) T@T)
(declare-fun $generated@@9 (Real) T@U)
(declare-fun $generated@@10 (T@U) Real)
(declare-fun $generated@@11 (Bool) T@U)
(declare-fun $generated@@12 (RoundingMode) T@U)
(declare-fun $generated@@13 (T@U) RoundingMode)
(declare-fun $generated@@14 (String) T@U)
(declare-fun $generated@@15 (T@U) String)
(declare-fun $generated@@16 ((RegEx String)) T@U)
(declare-fun $generated@@17 (T@U) (RegEx String))
(declare-fun $generated@@44 () T@U)
(declare-fun $generated@@45 () T@U)
(declare-fun $generated@@46 () T@U)
(declare-fun $generated@@47 () T@U)
(declare-fun $generated@@48 () T@U)
(declare-fun $generated@@49 () T@U)
(declare-fun $generated@@50 () T@U)
(declare-fun $generated@@51 () T@U)
(declare-fun $generated@@52 () T@U)
(declare-fun $generated@@53 () T@U)
(declare-fun $generated@@54 () T@U)
(declare-fun $generated@@55 () T@U)
(declare-fun $generated@@56 () T@U)
(declare-fun $generated@@57 () T@U)
(declare-fun $generated@@58 () T@U)
(declare-fun $generated@@59 () T@U)
(declare-fun $generated@@60 () T@U)
(declare-fun $generated@@61 () T@U)
(declare-fun $generated@@62 () T@U)
(declare-fun $generated@@63 () T@U)
(declare-fun $generated@@64 () T@U)
(declare-fun $generated@@65 () T@U)
(declare-fun $generated@@66 () T@U)
(declare-fun $generated@@67 () T@U)
(declare-fun $generated@@68 () T@U)
(declare-fun $generated@@69 () T@U)
(declare-fun $generated@@70 () T@U)
(declare-fun $generated@@71 () T@U)
(declare-fun $generated@@72 () T@U)
(declare-fun $generated@@73 () T@U)
(declare-fun $generated@@74 () T@U)
(declare-fun $generated@@75 () T@U)
(declare-fun $generated@@76 () T@U)
(declare-fun $generated@@77 () T@U)
(declare-fun $generated@@78 () T@U)
(declare-fun $generated@@79 () T@U)
(declare-fun $generated@@80 () T@U)
(declare-fun $generated@@81 () T@U)
(declare-fun $generated@@82 () T@T)
(declare-fun $generated@@83 () T@T)
(declare-fun $generated@@84 (T@T) T@T)
(declare-fun $generated@@85 (T@T) T@T)
(declare-fun $generated@@86 () T@T)
(declare-fun $generated@@87 () T@T)
(declare-fun $generated@@88 () T@T)
(declare-fun $generated@@89 () T@T)
(declare-fun $generated@@92 (T@U) Int)
(declare-fun $generated@@93 (T@U) T@U)
(declare-fun $generated@@95 (T@U) T@U)
(declare-fun $generated@@97 (T@U T@U) Bool)
(declare-fun $generated@@98 (T@U T@U) T@U)
(declare-fun $generated@@99 () T@U)
(declare-fun $generated@@100 () T@T)
(declare-fun $generated@@101 () T@T)
(declare-fun $generated@@102 () T@U)
(declare-fun $generated@@107 () Int)
(declare-fun $generated@@108 (T@U) Int)
(declare-fun $generated@@109 (T@U) T@U)
(declare-fun $generated@@110 (T@U) Bool)
(declare-fun $generated@@111 (Int) Int)
(declare-fun $generated@@115 (T@U T@U T@U) Bool)
(declare-fun $generated@@116 (Int) T@U)
(declare-fun $generated@@117 (T@T T@T) T@T)
(declare-fun $generated@@118 () T@T)
(declare-fun $generated@@119 (T@T) T@T)
(declare-fun $generated@@120 (T@T) T@T)
(declare-fun $generated@@121 (T@U T@U) T@U)
(declare-fun $generated@@122 (T@U T@U T@U) T@U)
(declare-fun $generated@@123 (T@U T@U) T@U)
(declare-fun $generated@@124 (T@U T@U T@U) T@U)
(declare-fun $generated@@172 (T@U T@U) Bool)
(declare-fun $generated@@176 () T@U)
(declare-fun $generated@@179 () T@U)
(declare-fun $generated@@182 () T@U)
(declare-fun $generated@@183 (T@U) Bool)
(declare-fun $generated@@184 (T@U) T@U)
(declare-fun $generated@@193 (T@U) Bool)
(declare-fun $generated@@194 (T@U T@U) T@U)
(declare-fun $generated@@200 (T@U T@U) Bool)
(declare-fun $generated@@201 (T@U) T@U)
(declare-fun $generated@@202 (T@U) T@U)
(declare-fun $generated@@203 () T@T)
(declare-fun $generated@@208 (T@U T@U) Bool)
(declare-fun $generated@@209 (T@U) T@U)
(declare-fun $generated@@210 (T@U) T@U)
(declare-fun $generated@@215 (T@U) T@U)
(declare-fun $generated@@216 () T@U)
(declare-fun $generated@@218 (T@U) T@U)
(declare-fun $generated@@219 (T@U) Bool)
(declare-fun $generated@@223 (T@U) Bool)
(declare-fun $generated@@224 (T@U) T@U)
(declare-fun $generated@@230 () T@U)
(declare-fun $generated@@233 () T@U)
(declare-fun $generated@@236 (T@U T@U) T@U)
(declare-fun $generated@@237 (T@U T@U) Bool)
(declare-fun $generated@@244 (T@T T@U T@U) T@U)
(declare-fun $generated@@248 (T@U) Bool)
(declare-fun $generated@@249 () T@U)
(declare-fun $generated@@250 (T@U T@U) T@U)
(declare-fun $generated@@257 (T@U) Int)
(declare-fun $generated@@258 (T@U) Bool)
(declare-fun $generated@@262 (T@U T@U) Bool)
(declare-fun $generated@@267 (T@U) Bool)
(declare-fun $generated@@268 (T@U) T@U)
(declare-fun $generated@@269 (T@U) T@U)
(declare-fun $generated@@274 (T@U) T@U)
(declare-fun $generated@@279 (T@U) T@U)
(declare-fun $generated@@286 (T@U T@U) Int)
(declare-fun $generated@@287 (T@U T@U) Bool)
(declare-fun $generated@@290 (T@U) Bool)
(declare-fun $generated@@293 (T@U T@U T@U) Bool)
(declare-fun $generated@@313 (T@T) T@U)
(declare-fun $generated@@314 (T@U) Int)
(declare-fun $generated@@315 (T@T) T@T)
(declare-fun $generated@@316 (T@T) T@T)
(declare-fun $generated@@325 (T@U) T@U)
(declare-fun $generated@@340 (T@U) Int)
(declare-fun $generated@@341 (T@T) T@U)
(declare-fun $generated@@346 (T@U) T@U)
(declare-fun $generated@@349 (T@U) T@U)
(declare-fun $generated@@350 (T@T T@T) T@U)
(declare-fun $generated@@351 (T@T T@T) T@T)
(declare-fun $generated@@352 (T@T) T@T)
(declare-fun $generated@@353 (T@T) T@T)
(declare-fun $generated@@367 (T@U) T@U)
(declare-fun $generated@@368 (T@T T@T) T@U)
(declare-fun $generated@@369 (T@T T@T) T@T)
(declare-fun $generated@@370 (T@T) T@T)
(declare-fun $generated@@371 (T@T) T@T)
(declare-fun $generated@@385 (T@U T@U) Bool)
(declare-fun $generated@@396 (T@T T@U) T@U)
(declare-fun $generated@@410 (T@U) T@U)
(declare-fun $generated@@421 (T@U) T@U)
(declare-fun $generated@@433 (T@U) Bool)
(declare-fun $generated@@445 (T@U) T@U)
(declare-fun $generated@@446 (T@U) T@U)
(declare-fun $generated@@453 (T@U) T@U)
(declare-fun $generated@@454 (T@U) T@U)
(declare-fun $generated@@471 (T@U T@U) T@U)
(declare-fun $generated@@479 (T@U T@U) T@U)
(declare-fun $generated@@487 (Int Int) Int)
(declare-fun $generated@@490 (T@U T@U) T@U)
(declare-fun $generated@@491 (T@U T@U) Bool)
(declare-fun $generated@@500 (T@T) T@U)
(declare-fun $generated@@521 (T@U) T@U)
(declare-fun $generated@@529 () T@T)
(declare-fun $generated@@539 (T@U) T@U)
(declare-fun $generated@@543 (T@U) T@U)
(declare-fun $generated@@549 (T@U) T@U)
(declare-fun $generated@@553 (T@U) T@U)
(declare-fun $generated@@561 (T@U) T@U)
(declare-fun $generated@@565 (T@U) T@U)
(declare-fun $generated@@585 (T@U) T@U)
(declare-fun $generated@@586 (T@U Int) T@U)
(declare-fun $generated@@595 (T@U) Int)
(declare-fun $generated@@597 (T@U) T@U)
(declare-fun $generated@@601 (T@U) T@U)
(declare-fun $generated@@605 (T@U) T@U)
(declare-fun $generated@@609 (T@U) T@U)
(declare-fun $generated@@613 (T@U) T@U)
(declare-fun $generated@@626 (T@U) Int)
(declare-fun $generated@@627 (T@U) Int)
(declare-fun $generated@@659 (T@U) Bool)
(declare-fun $generated@@718 (T@U T@U T@U) T@U)
(declare-fun $generated@@719 (T@U T@U T@U T@U) T@U)
(declare-fun $generated@@720 (T@T T@T) T@T)
(declare-fun $generated@@721 (T@T) T@T)
(declare-fun $generated@@722 (T@T) T@T)
(declare-fun $generated@@723 (T@U T@U T@U T@U) T@U)
(declare-fun $generated@@787 (T@U) Int)
(assert  (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (= ($generated@@1 $generated@@2) 0) (= ($generated@@1 $generated@@3) 1)) (= ($generated@@1 $generated@@4) 2)) (= ($generated@@1 $generated@@5) 3)) (= ($generated@@1 $generated@@6) 4)) (= ($generated@@1 $generated@@7) 5)) (forall (($generated@@18 Int) ) (! (= ($generated ($generated@@8 $generated@@18)) $generated@@18)
 :pattern ( ($generated@@8 $generated@@18))
))) (forall (($generated@@19 T@U) ) (!  (=> (= (type $generated@@19) $generated@@2) (= ($generated@@8 ($generated $generated@@19)) $generated@@19))
 :pattern ( ($generated $generated@@19))
))) (forall (($generated@@20 Int) ) (! (= (type ($generated@@8 $generated@@20)) $generated@@2)
 :pattern ( ($generated@@8 $generated@@20))
))) (forall (($generated@@21 Real) ) (! (= ($generated@@10 ($generated@@9 $generated@@21)) $generated@@21)
 :pattern ( ($generated@@9 $generated@@21))
))) (forall (($generated@@22 T@U) ) (!  (=> (= (type $generated@@22) $generated@@3) (= ($generated@@9 ($generated@@10 $generated@@22)) $generated@@22))
 :pattern ( ($generated@@10 $generated@@22))
))) (forall (($generated@@23 Real) ) (! (= (type ($generated@@9 $generated@@23)) $generated@@3)
 :pattern ( ($generated@@9 $generated@@23))
))) (forall (($generated@@24 Bool) ) (! (= ($generated@@0 ($generated@@11 $generated@@24)) $generated@@24)
 :pattern ( ($generated@@11 $generated@@24))
))) (forall (($generated@@25 T@U) ) (!  (=> (= (type $generated@@25) $generated@@4) (= ($generated@@11 ($generated@@0 $generated@@25)) $generated@@25))
 :pattern ( ($generated@@0 $generated@@25))
))) (forall (($generated@@26 Bool) ) (! (= (type ($generated@@11 $generated@@26)) $generated@@4)
 :pattern ( ($generated@@11 $generated@@26))
))) (forall (($generated@@27 RoundingMode) ) (! (= ($generated@@13 ($generated@@12 $generated@@27)) $generated@@27)
 :pattern ( ($generated@@12 $generated@@27))
))) (forall (($generated@@28 T@U) ) (!  (=> (= (type $generated@@28) $generated@@5) (= ($generated@@12 ($generated@@13 $generated@@28)) $generated@@28))
 :pattern ( ($generated@@13 $generated@@28))
))) (forall (($generated@@29 RoundingMode) ) (! (= (type ($generated@@12 $generated@@29)) $generated@@5)
 :pattern ( ($generated@@12 $generated@@29))
))) (forall (($generated@@30 String) ) (! (= ($generated@@15 ($generated@@14 $generated@@30)) $generated@@30)
 :pattern ( ($generated@@14 $generated@@30))
))) (forall (($generated@@31 T@U) ) (!  (=> (= (type $generated@@31) $generated@@6) (= ($generated@@14 ($generated@@15 $generated@@31)) $generated@@31))
 :pattern ( ($generated@@15 $generated@@31))
))) (forall (($generated@@32 String) ) (! (= (type ($generated@@14 $generated@@32)) $generated@@6)
 :pattern ( ($generated@@14 $generated@@32))
))) (forall (($generated@@33 (RegEx String)) ) (! (= ($generated@@17 ($generated@@16 $generated@@33)) $generated@@33)
 :pattern ( ($generated@@16 $generated@@33))
))) (forall (($generated@@34 T@U) ) (!  (=> (= (type $generated@@34) $generated@@7) (= ($generated@@16 ($generated@@17 $generated@@34)) $generated@@34))
 :pattern ( ($generated@@17 $generated@@34))
))) (forall (($generated@@35 (RegEx String)) ) (! (= (type ($generated@@16 $generated@@35)) $generated@@7)
 :pattern ( ($generated@@16 $generated@@35))
))))
(assert (forall (($generated@@36 T@U) ) (! (UOrdering2 $generated@@36 $generated@@36)
 :no-pattern ($generated $generated@@36)
 :no-pattern ($generated@@0 $generated@@36)
)))
(assert (forall (($generated@@37 T@U) ($generated@@38 T@U) ($generated@@39 T@U) ) (! (let (($generated@@40 (type $generated@@37)))
 (=> (and (and (= (type $generated@@38) $generated@@40) (= (type $generated@@39) $generated@@40)) (and (UOrdering2 $generated@@37 $generated@@38) (UOrdering2 $generated@@38 $generated@@39))) (UOrdering2 $generated@@37 $generated@@39)))
 :pattern ( (UOrdering2 $generated@@37 $generated@@38) (UOrdering2 $generated@@38 $generated@@39))
)))
(assert (forall (($generated@@41 T@U) ($generated@@42 T@U) ) (! (let (($generated@@43 (type $generated@@41)))
 (=> (= (type $generated@@42) $generated@@43) (=> (and (UOrdering2 $generated@@41 $generated@@42) (UOrdering2 $generated@@42 $generated@@41)) (= $generated@@41 $generated@@42))))
 :pattern ( (UOrdering2 $generated@@41 $generated@@42) (UOrdering2 $generated@@42 $generated@@41))
)))
(assert  (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (= ($generated@@1 $generated@@82) 6) (= (type $generated@@44) $generated@@82)) (= (type $generated@@45) $generated@@82)) (= (type $generated@@46) $generated@@82)) (= (type $generated@@47) $generated@@82)) (= (type $generated@@48) $generated@@82)) (= ($generated@@1 $generated@@83) 7)) (= (type $generated@@49) $generated@@83)) (= (type $generated@@50) $generated@@83)) (= (type $generated@@51) $generated@@83)) (= (type $generated@@52) $generated@@83)) (= (type $generated@@53) $generated@@83)) (= (type $generated@@54) $generated@@83)) (= (type $generated@@55) $generated@@83)) (= (type $generated@@56) $generated@@83)) (= (type $generated@@57) $generated@@83)) (= (type $generated@@58) $generated@@83)) (= (type $generated@@59) $generated@@83)) (forall (($generated@@90 T@T) ) (= ($generated@@1 ($generated@@84 $generated@@90)) 8))) (forall (($generated@@91 T@T) ) (! (= ($generated@@85 ($generated@@84 $generated@@91)) $generated@@91)
 :pattern ( ($generated@@84 $generated@@91))
))) (= (type $generated@@60) ($generated@@84 $generated@@4))) (= ($generated@@1 $generated@@86) 9)) (= (type $generated@@61) $generated@@86)) (= ($generated@@1 $generated@@87) 10)) (= (type $generated@@62) $generated@@87)) (= (type $generated@@63) $generated@@83)) (= ($generated@@1 $generated@@88) 11)) (= (type $generated@@64) $generated@@88)) (= (type $generated@@65) $generated@@83)) (= (type $generated@@66) $generated@@83)) (= (type $generated@@67) $generated@@87)) (= (type $generated@@68) $generated@@83)) (= (type $generated@@69) $generated@@87)) (= (type $generated@@70) $generated@@88)) (= (type $generated@@71) $generated@@83)) (= (type $generated@@72) $generated@@83)) (= (type $generated@@73) $generated@@87)) (= (type $generated@@74) $generated@@83)) (= ($generated@@1 $generated@@89) 12)) (= (type $generated@@75) $generated@@89)) (= (type $generated@@76) $generated@@89)) (= (type $generated@@77) $generated@@89)) (= (type $generated@@78) $generated@@89)) (= (type $generated@@79) $generated@@89)) (= (type $generated@@80) $generated@@86)) (= (type $generated@@81) $generated@@86)))
(assert (distinct $generated@@44 $generated@@45 $generated@@46 $generated@@47 $generated@@48 $generated@@49 $generated@@50 $generated@@51 $generated@@52 $generated@@53 $generated@@54 $generated@@55 $generated@@56 $generated@@57 $generated@@58 $generated@@59 $generated@@60 $generated@@61 $generated@@62 $generated@@63 $generated@@64 $generated@@65 $generated@@66 $generated@@67 $generated@@68 $generated@@69 $generated@@70 $generated@@71 $generated@@72 $generated@@73 $generated@@74 $generated@@75 $generated@@76 $generated@@77 $generated@@78 $generated@@79 $generated@@80 $generated@@81)
)
(assert (= ($generated@@92 $generated@@60) 0))
(assert (forall (($generated@@94 T@U) ) (! (= (type ($generated@@93 $generated@@94)) $generated@@83)
 :pattern ( ($generated@@93 $generated@@94))
)))
(assert (= ($generated@@93 $generated@@44) $generated@@49))
(assert (= ($generated@@93 $generated@@45) $generated@@50))
(assert (= ($generated@@93 $generated@@46) $generated@@51))
(assert (= ($generated@@93 $generated@@47) $generated@@52))
(assert (= ($generated@@93 $generated@@48) $generated@@53))
(assert (forall (($generated@@96 T@U) ) (! (= (type ($generated@@95 $generated@@96)) $generated@@86)
 :pattern ( ($generated@@95 $generated@@96))
)))
(assert (= ($generated@@95 $generated@@60) $generated@@61))
(assert  (and (and (and (and (= ($generated@@1 $generated@@100) 13) (= ($generated@@1 $generated@@101) 14)) (forall (($generated@@103 T@U) ($generated@@104 T@U) ) (! (= (type ($generated@@98 $generated@@103 $generated@@104)) $generated@@101)
 :pattern ( ($generated@@98 $generated@@103 $generated@@104))
))) (= (type $generated@@99) $generated@@82)) (= (type $generated@@102) $generated@@82)))
(assert (forall (($generated@@105 T@U) ($generated@@106 T@U) ) (!  (=> (and (= (type $generated@@105) $generated@@100) (= (type $generated@@106) $generated@@101)) (= ($generated@@97 ($generated@@98 $generated@@105 $generated@@106) $generated@@99)  (and ($generated@@97 $generated@@105 $generated@@102) ($generated@@97 $generated@@106 $generated@@99))))
 :pattern ( ($generated@@97 ($generated@@98 $generated@@105 $generated@@106) $generated@@99))
)))
(assert (forall (($generated@@112 T@U) ) (! (let (($generated@@113 (type $generated@@112)))
(= (type ($generated@@109 $generated@@112)) $generated@@113))
 :pattern ( ($generated@@109 $generated@@112))
)))
(assert  (=> (<= 1 $generated@@107) (forall (($generated@@114 T@U) ) (!  (=> (and (= (type $generated@@114) $generated@@101) (or ($generated@@110 ($generated@@109 $generated@@114)) (and (not (= 1 $generated@@107)) ($generated@@97 $generated@@114 $generated@@99)))) (= ($generated@@108 ($generated@@109 $generated@@114)) ($generated@@111 12)))
 :weight 3
 :pattern ( ($generated@@108 ($generated@@109 $generated@@114)))
))))
(assert  (and (and (and (and (and (and (and (and (and (and (and (and (forall (($generated@@125 T@T) ($generated@@126 T@T) ) (= ($generated@@1 ($generated@@117 $generated@@125 $generated@@126)) 15)) (forall (($generated@@127 T@T) ($generated@@128 T@T) ) (! (= ($generated@@119 ($generated@@117 $generated@@127 $generated@@128)) $generated@@127)
 :pattern ( ($generated@@117 $generated@@127 $generated@@128))
))) (forall (($generated@@129 T@T) ($generated@@130 T@T) ) (! (= ($generated@@120 ($generated@@117 $generated@@129 $generated@@130)) $generated@@130)
 :pattern ( ($generated@@117 $generated@@129 $generated@@130))
))) (forall (($generated@@131 T@U) ($generated@@132 T@U) ) (! (let (($generated@@133 ($generated@@120 (type $generated@@131))))
(= (type ($generated@@121 $generated@@131 $generated@@132)) $generated@@133))
 :pattern ( ($generated@@121 $generated@@131 $generated@@132))
))) (forall (($generated@@134 T@U) ($generated@@135 T@U) ($generated@@136 T@U) ) (! (let (($generated@@137 (type $generated@@136)))
(let (($generated@@138 (type $generated@@135)))
(= (type ($generated@@122 $generated@@134 $generated@@135 $generated@@136)) ($generated@@117 $generated@@138 $generated@@137))))
 :pattern ( ($generated@@122 $generated@@134 $generated@@135 $generated@@136))
))) (forall (($generated@@139 T@U) ($generated@@140 T@U) ($generated@@141 T@U) ) (! (let (($generated@@142 ($generated@@120 (type $generated@@139))))
 (=> (= (type $generated@@141) $generated@@142) (= ($generated@@121 ($generated@@122 $generated@@139 $generated@@140 $generated@@141) $generated@@140) $generated@@141)))
 :weight 0
))) (and (forall (($generated@@143 T@U) ($generated@@144 T@U) ($generated@@145 T@U) ($generated@@146 T@U) ) (!  (or (= $generated@@145 $generated@@146) (= ($generated@@121 ($generated@@122 $generated@@144 $generated@@145 $generated@@143) $generated@@146) ($generated@@121 $generated@@144 $generated@@146)))
 :weight 0
)) (forall (($generated@@147 T@U) ($generated@@148 T@U) ($generated@@149 T@U) ($generated@@150 T@U) ) (!  (or true (= ($generated@@121 ($generated@@122 $generated@@148 $generated@@149 $generated@@147) $generated@@150) ($generated@@121 $generated@@148 $generated@@150)))
 :weight 0
)))) (forall (($generated@@151 T@U) ($generated@@152 T@U) ) (! (let (($generated@@153 ($generated@@85 (type $generated@@152))))
(= (type ($generated@@123 $generated@@151 $generated@@152)) $generated@@153))
 :pattern ( ($generated@@123 $generated@@151 $generated@@152))
))) (= ($generated@@1 $generated@@118) 16)) (forall (($generated@@154 T@U) ($generated@@155 T@U) ($generated@@156 T@U) ) (! (= (type ($generated@@124 $generated@@154 $generated@@155 $generated@@156)) $generated@@118)
 :pattern ( ($generated@@124 $generated@@154 $generated@@155 $generated@@156))
))) (forall (($generated@@157 T@U) ($generated@@158 T@U) ($generated@@159 T@U) ) (! (let (($generated@@160 ($generated@@85 (type $generated@@158))))
 (=> (= (type $generated@@159) $generated@@160) (= ($generated@@123 ($generated@@124 $generated@@157 $generated@@158 $generated@@159) $generated@@158) $generated@@159)))
 :weight 0
))) (and (forall (($generated@@161 T@U) ($generated@@162 T@U) ($generated@@163 T@U) ($generated@@164 T@U) ) (!  (or (= $generated@@163 $generated@@164) (= ($generated@@123 ($generated@@124 $generated@@162 $generated@@163 $generated@@161) $generated@@164) ($generated@@123 $generated@@162 $generated@@164)))
 :weight 0
)) (forall (($generated@@165 T@U) ($generated@@166 T@U) ($generated@@167 T@U) ($generated@@168 T@U) ) (!  (or true (= ($generated@@123 ($generated@@124 $generated@@166 $generated@@167 $generated@@165) $generated@@168) ($generated@@123 $generated@@166 $generated@@168)))
 :weight 0
)))) (forall (($generated@@169 Int) ) (! (= (type ($generated@@116 $generated@@169)) $generated@@82)
 :pattern ( ($generated@@116 $generated@@169))
))))
(assert (forall (($generated@@170 T@U) ($generated@@171 T@U) ) (!  (=> (and (= (type $generated@@170) $generated@@2) (= (type $generated@@171) ($generated@@117 $generated@@100 $generated@@118))) ($generated@@115 $generated@@170 ($generated@@116 0) $generated@@171))
 :pattern ( ($generated@@115 $generated@@170 ($generated@@116 0) $generated@@171))
)))
(assert (forall (($generated@@173 T@U) ($generated@@174 T@U) ) (!  (=> (and (and (= (type $generated@@173) ($generated@@117 $generated@@100 $generated@@118)) (= (type $generated@@174) ($generated@@117 $generated@@100 $generated@@118))) ($generated@@172 $generated@@173 $generated@@174)) (forall (($generated@@175 T@U) ) (!  (=> (and (= (type $generated@@175) $generated@@100) ($generated@@0 ($generated@@123 ($generated@@121 $generated@@173 $generated@@175) $generated@@60))) ($generated@@0 ($generated@@123 ($generated@@121 $generated@@174 $generated@@175) $generated@@60)))
 :pattern ( ($generated@@123 ($generated@@121 $generated@@174 $generated@@175) $generated@@60))
)))
 :pattern ( ($generated@@172 $generated@@173 $generated@@174))
)))
(assert (= (type $generated@@176) $generated@@100))
(assert (forall (($generated@@177 T@U) ($generated@@178 T@U) ) (!  (=> (and (= (type $generated@@177) $generated@@100) (= (type $generated@@178) ($generated@@117 $generated@@100 $generated@@118))) (= ($generated@@115 $generated@@177 $generated@@102 $generated@@178)  (or (= $generated@@177 $generated@@176) ($generated@@0 ($generated@@123 ($generated@@121 $generated@@178 $generated@@177) $generated@@60)))))
 :pattern ( ($generated@@115 $generated@@177 $generated@@102 $generated@@178))
)))
(assert (= (type $generated@@179) $generated@@82))
(assert (forall (($generated@@180 T@U) ($generated@@181 T@U) ) (!  (=> (and (= (type $generated@@180) $generated@@100) (= (type $generated@@181) ($generated@@117 $generated@@100 $generated@@118))) (= ($generated@@115 $generated@@180 $generated@@179 $generated@@181)  (or (= $generated@@180 $generated@@176) ($generated@@0 ($generated@@123 ($generated@@121 $generated@@181 $generated@@180) $generated@@60)))))
 :pattern ( ($generated@@115 $generated@@180 $generated@@179 $generated@@181))
)))
(assert  (and (= (type $generated@@182) ($generated@@84 $generated@@2)) (forall (($generated@@185 T@U) ) (! (= (type ($generated@@184 $generated@@185)) $generated@@82)
 :pattern ( ($generated@@184 $generated@@185))
))))
(assert (forall (($generated@@186 T@U) ($generated@@187 T@U) ) (!  (=> (and (and (= (type $generated@@186) ($generated@@117 $generated@@100 $generated@@118)) (= (type $generated@@187) $generated@@100)) (and ($generated@@183 $generated@@186) (and (not (= $generated@@187 $generated@@176)) (= ($generated@@184 $generated@@187) $generated@@102)))) ($generated@@97 ($generated@@123 ($generated@@121 $generated@@186 $generated@@187) $generated@@182) $generated@@46))
 :pattern ( ($generated@@123 ($generated@@121 $generated@@186 $generated@@187) $generated@@182))
)))
(assert (forall (($generated@@188 T@U) ) (!  (=> (= (type $generated@@188) $generated@@2) ($generated@@97 $generated@@188 ($generated@@116 0)))
 :pattern ( ($generated@@97 $generated@@188 ($generated@@116 0)))
)))
(assert  (=> (<= 1 $generated@@107) (forall (($generated@@189 T@U) ) (!  (=> (and (= (type $generated@@189) $generated@@101) (or ($generated@@110 $generated@@189) (and (not (= 1 $generated@@107)) ($generated@@97 $generated@@189 $generated@@99)))) true)
 :pattern ( ($generated@@108 $generated@@189))
))))
(assert (forall (($generated@@190 T@U) ($generated@@191 T@U) ($generated@@192 T@U) ) (!  (=> (and (and (and (= (type $generated@@190) $generated@@100) (= (type $generated@@191) $generated@@101)) (= (type $generated@@192) ($generated@@117 $generated@@100 $generated@@118))) ($generated@@183 $generated@@192)) (= ($generated@@115 ($generated@@98 $generated@@190 $generated@@191) $generated@@99 $generated@@192)  (and ($generated@@115 $generated@@190 $generated@@102 $generated@@192) ($generated@@115 $generated@@191 $generated@@99 $generated@@192))))
 :pattern ( ($generated@@115 ($generated@@98 $generated@@190 $generated@@191) $generated@@99 $generated@@192))
)))
(assert (forall (($generated@@195 T@U) ($generated@@196 T@U) ) (! (= (type ($generated@@194 $generated@@195 $generated@@196)) $generated@@82)
 :pattern ( ($generated@@194 $generated@@195 $generated@@196))
)))
(assert (forall (($generated@@197 T@U) ($generated@@198 T@U) ($generated@@199 T@U) ) (!  (=> (and (and (and (= (type $generated@@197) $generated@@82) (= (type $generated@@198) $generated@@82)) (= (type $generated@@199) $generated@@101)) ($generated@@97 $generated@@199 ($generated@@194 $generated@@197 $generated@@198))) ($generated@@193 $generated@@199))
 :pattern ( ($generated@@193 $generated@@199) ($generated@@97 $generated@@199 ($generated@@194 $generated@@197 $generated@@198)))
)))
(assert  (and (and (= ($generated@@1 $generated@@203) 17) (forall (($generated@@204 T@U) ) (! (= (type ($generated@@201 $generated@@204)) $generated@@203)
 :pattern ( ($generated@@201 $generated@@204))
))) (forall (($generated@@205 T@U) ) (! (= (type ($generated@@202 $generated@@205)) $generated@@203)
 :pattern ( ($generated@@202 $generated@@205))
))))
(assert (forall (($generated@@206 T@U) ($generated@@207 T@U) ) (!  (=> (and (and (= (type $generated@@206) $generated@@101) (= (type $generated@@207) $generated@@101)) true) (= ($generated@@200 $generated@@206 $generated@@207)  (and (= ($generated@@201 $generated@@206) ($generated@@201 $generated@@207)) (= ($generated@@202 $generated@@206) ($generated@@202 $generated@@207)))))
 :pattern ( ($generated@@200 $generated@@206 $generated@@207))
)))
(assert  (and (forall (($generated@@211 T@U) ) (! (= (type ($generated@@209 $generated@@211)) $generated@@203)
 :pattern ( ($generated@@209 $generated@@211))
)) (forall (($generated@@212 T@U) ) (! (= (type ($generated@@210 $generated@@212)) $generated@@203)
 :pattern ( ($generated@@210 $generated@@212))
))))
(assert (forall (($generated@@213 T@U) ($generated@@214 T@U) ) (!  (=> (and (and (= (type $generated@@213) $generated@@101) (= (type $generated@@214) $generated@@101)) true) (= ($generated@@208 $generated@@213 $generated@@214)  (and (= ($generated@@209 $generated@@213) ($generated@@209 $generated@@214)) (= ($generated@@210 $generated@@213) ($generated@@210 $generated@@214)))))
 :pattern ( ($generated@@208 $generated@@213 $generated@@214))
)))
(assert  (and (forall (($generated@@217 T@U) ) (! (= (type ($generated@@215 $generated@@217)) $generated@@87)
 :pattern ( ($generated@@215 $generated@@217))
)) (= (type $generated@@216) $generated@@101)))
(assert (= ($generated@@215 $generated@@216) $generated@@67))
(assert (forall (($generated@@220 T@U) ) (! (= (type ($generated@@218 $generated@@220)) $generated@@82)
 :pattern ( ($generated@@218 $generated@@220))
)))
(assert (forall (($generated@@221 T@U) ($generated@@222 T@U) ) (!  (=> (and (and (= (type $generated@@221) ($generated@@117 $generated@@203 $generated@@2)) (= (type $generated@@222) $generated@@82)) ($generated@@97 $generated@@221 ($generated@@218 $generated@@222))) ($generated@@219 $generated@@221))
 :pattern ( ($generated@@97 $generated@@221 ($generated@@218 $generated@@222)))
)))
(assert (forall (($generated@@225 T@U) ) (! (= (type ($generated@@224 $generated@@225)) $generated@@82)
 :pattern ( ($generated@@224 $generated@@225))
)))
(assert (forall (($generated@@226 T@U) ($generated@@227 T@U) ) (!  (=> (and (and (= (type $generated@@226) $generated@@82) (= (type $generated@@227) $generated@@101)) ($generated@@97 $generated@@227 ($generated@@224 $generated@@226))) ($generated@@223 $generated@@227))
 :pattern ( ($generated@@223 $generated@@227) ($generated@@97 $generated@@227 ($generated@@224 $generated@@226)))
)))
(assert (forall (($generated@@228 T@U) ) (!  (=> (= (type $generated@@228) $generated@@100) (= ($generated@@97 $generated@@228 $generated@@102)  (or (= $generated@@228 $generated@@176) (= ($generated@@184 $generated@@228) $generated@@102))))
 :pattern ( ($generated@@97 $generated@@228 $generated@@102))
)))
(assert (forall (($generated@@229 T@U) ) (!  (=> (= (type $generated@@229) $generated@@100) (= ($generated@@97 $generated@@229 $generated@@179)  (or (= $generated@@229 $generated@@176) (= ($generated@@184 $generated@@229) $generated@@179))))
 :pattern ( ($generated@@97 $generated@@229 $generated@@179))
)))
(assert (= (type $generated@@230) $generated@@82))
(assert (forall (($generated@@231 T@U) ($generated@@232 T@U) ) (!  (=> (and (= (type $generated@@231) $generated@@100) (= (type $generated@@232) ($generated@@117 $generated@@100 $generated@@118))) (= ($generated@@115 $generated@@231 $generated@@230 $generated@@232) ($generated@@115 $generated@@231 $generated@@102 $generated@@232)))
 :pattern ( ($generated@@115 $generated@@231 $generated@@230 $generated@@232))
)))
(assert (= (type $generated@@233) $generated@@82))
(assert (forall (($generated@@234 T@U) ($generated@@235 T@U) ) (!  (=> (and (= (type $generated@@234) $generated@@100) (= (type $generated@@235) ($generated@@117 $generated@@100 $generated@@118))) (= ($generated@@115 $generated@@234 $generated@@233 $generated@@235) ($generated@@115 $generated@@234 $generated@@179 $generated@@235)))
 :pattern ( ($generated@@115 $generated@@234 $generated@@233 $generated@@235))
)))
(assert (forall (($generated@@238 T@U) ($generated@@239 T@U) ) (! (= (type ($generated@@236 $generated@@238 $generated@@239)) $generated@@101)
 :pattern ( ($generated@@236 $generated@@238 $generated@@239))
)))
(assert (forall (($generated@@240 T@U) ($generated@@241 T@U) ($generated@@242 T@U) ($generated@@243 T@U) ) (!  (=> (and (and (and (= (type $generated@@240) $generated@@82) (= (type $generated@@241) $generated@@82)) (= (type $generated@@242) $generated@@203)) (= (type $generated@@243) $generated@@203)) (= ($generated@@97 ($generated@@236 $generated@@242 $generated@@243) ($generated@@194 $generated@@240 $generated@@241))  (and ($generated@@237 $generated@@242 $generated@@240) ($generated@@237 $generated@@243 $generated@@241))))
 :pattern ( ($generated@@97 ($generated@@236 $generated@@242 $generated@@243) ($generated@@194 $generated@@240 $generated@@241)))
)))
(assert ($generated@@97 $generated@@216 $generated@@99))
(assert (= ($generated@@92 $generated@@182) 0))
(assert (forall (($generated@@245 T@T) ($generated@@246 T@U) ($generated@@247 T@U) ) (! (= (type ($generated@@244 $generated@@245 $generated@@246 $generated@@247)) ($generated@@84 $generated@@245))
 :pattern ( ($generated@@244 $generated@@245 $generated@@246 $generated@@247))
)))
(assert (= ($generated@@244 $generated@@2 $generated@@64 $generated@@80) $generated@@182))
(assert  (not ($generated@@248 $generated@@182)))
(assert (= (type $generated@@249) ($generated@@84 $generated@@100)))
(assert (= ($generated@@92 $generated@@249) 0))
(assert (= ($generated@@244 $generated@@100 $generated@@70 $generated@@81) $generated@@249))
(assert  (not ($generated@@248 $generated@@249)))
(assert (forall (($generated@@251 T@U) ($generated@@252 T@U) ) (! (= (type ($generated@@250 $generated@@251 $generated@@252)) $generated@@101)
 :pattern ( ($generated@@250 $generated@@251 $generated@@252))
)))
(assert (forall (($generated@@253 T@U) ($generated@@254 T@U) ($generated@@255 T@U) ) (!  (=> (and (and (= (type $generated@@253) $generated@@82) (= (type $generated@@254) $generated@@203)) (= (type $generated@@255) $generated@@203)) (= ($generated@@97 ($generated@@250 $generated@@254 $generated@@255) ($generated@@224 $generated@@253))  (and ($generated@@237 $generated@@254 $generated@@253) ($generated@@237 $generated@@255 $generated@@253))))
 :pattern ( ($generated@@97 ($generated@@250 $generated@@254 $generated@@255) ($generated@@224 $generated@@253)))
)))
(assert (forall (($generated@@256 T@U) ) (!  (=> (and (= (type $generated@@256) ($generated@@117 $generated@@100 $generated@@118)) ($generated@@183 $generated@@256)) ($generated@@115 $generated@@216 $generated@@99 $generated@@256))
 :pattern ( ($generated@@115 $generated@@216 $generated@@99 $generated@@256))
)))
(assert  (=> (<= 0 $generated@@107) (forall (($generated@@259 T@U) ) (!  (=> (and (= (type $generated@@259) $generated@@100) (or ($generated@@258 $generated@@259) (and (not (= 0 $generated@@107)) (and (not (= $generated@@259 $generated@@176)) ($generated@@97 $generated@@259 $generated@@230))))) (= ($generated@@257 $generated@@259) ($generated@@111 5)))
 :pattern ( ($generated@@257 $generated@@259))
))))
(assert (forall (($generated@@260 T@U) ($generated@@261 T@U) ) (!  (=> (and (= (type $generated@@260) $generated@@101) (= (type $generated@@261) $generated@@101)) (= ($generated@@200 $generated@@260 $generated@@261) (= $generated@@260 $generated@@261)))
 :pattern ( ($generated@@200 $generated@@260 $generated@@261))
)))
(assert (forall (($generated@@263 T@U) ($generated@@264 T@U) ) (!  (=> (and (= (type $generated@@263) $generated@@101) (= (type $generated@@264) $generated@@101)) (= ($generated@@262 $generated@@263 $generated@@264) (= $generated@@263 $generated@@264)))
 :pattern ( ($generated@@262 $generated@@263 $generated@@264))
)))
(assert (forall (($generated@@265 T@U) ($generated@@266 T@U) ) (!  (=> (and (= (type $generated@@265) $generated@@101) (= (type $generated@@266) $generated@@101)) (= ($generated@@208 $generated@@265 $generated@@266) (= $generated@@265 $generated@@266)))
 :pattern ( ($generated@@208 $generated@@265 $generated@@266))
)))
(assert  (and (forall (($generated@@270 T@U) ) (! (= (type ($generated@@268 $generated@@270)) $generated@@100)
 :pattern ( ($generated@@268 $generated@@270))
)) (forall (($generated@@271 T@U) ) (! (= (type ($generated@@269 $generated@@271)) $generated@@101)
 :pattern ( ($generated@@269 $generated@@271))
))))
(assert (forall (($generated@@272 T@U) ($generated@@273 T@U) ) (!  (=> (and (and (= (type $generated@@272) $generated@@101) (= (type $generated@@273) $generated@@101)) (and ($generated@@267 $generated@@272) ($generated@@267 $generated@@273))) (= ($generated@@262 $generated@@272 $generated@@273)  (and (= ($generated@@268 $generated@@272) ($generated@@268 $generated@@273)) ($generated@@262 ($generated@@269 $generated@@272) ($generated@@269 $generated@@273)))))
 :pattern ( ($generated@@262 $generated@@272 $generated@@273) ($generated@@267 $generated@@272))
 :pattern ( ($generated@@262 $generated@@272 $generated@@273) ($generated@@267 $generated@@273))
)))
(assert (forall (($generated@@275 T@U) ) (! (= (type ($generated@@274 $generated@@275)) $generated@@82)
 :pattern ( ($generated@@274 $generated@@275))
)))
(assert (forall (($generated@@276 T@U) ($generated@@277 T@U) ) (!  (=> (and (= (type $generated@@276) ($generated@@117 $generated@@203 $generated@@4)) (= (type $generated@@277) $generated@@82)) (= ($generated@@97 $generated@@276 ($generated@@274 $generated@@277)) (forall (($generated@@278 T@U) ) (!  (=> (and (= (type $generated@@278) $generated@@203) ($generated@@0 ($generated@@121 $generated@@276 $generated@@278))) ($generated@@237 $generated@@278 $generated@@277))
 :pattern ( ($generated@@121 $generated@@276 $generated@@278))
))))
 :pattern ( ($generated@@97 $generated@@276 ($generated@@274 $generated@@277)))
)))
(assert (forall (($generated@@280 T@U) ) (! (= (type ($generated@@279 $generated@@280)) $generated@@82)
 :pattern ( ($generated@@279 $generated@@280))
)))
(assert (forall (($generated@@281 T@U) ($generated@@282 T@U) ) (!  (=> (and (= (type $generated@@281) ($generated@@117 $generated@@203 $generated@@4)) (= (type $generated@@282) $generated@@82)) (= ($generated@@97 $generated@@281 ($generated@@279 $generated@@282)) (forall (($generated@@283 T@U) ) (!  (=> (and (= (type $generated@@283) $generated@@203) ($generated@@0 ($generated@@121 $generated@@281 $generated@@283))) ($generated@@237 $generated@@283 $generated@@282))
 :pattern ( ($generated@@121 $generated@@281 $generated@@283))
))))
 :pattern ( ($generated@@97 $generated@@281 ($generated@@279 $generated@@282)))
)))
(assert (forall (($generated@@284 Int) ) (! (= ($generated@@111 $generated@@284) $generated@@284)
 :pattern ( ($generated@@111 $generated@@284))
)))
(assert (forall (($generated@@285 T@U) ) (! (= ($generated@@109 $generated@@285) $generated@@285)
 :pattern ( ($generated@@109 $generated@@285))
)))
(assert  (=> (<= 1 $generated@@107) (forall (($generated@@288 T@U) ($generated@@289 T@U) ) (!  (=> (and (and (= (type $generated@@288) $generated@@82) (= (type $generated@@289) $generated@@101)) (or ($generated@@287 $generated@@288 $generated@@289) (and (not (= 1 $generated@@107)) ($generated@@97 $generated@@289 ($generated@@224 $generated@@288))))) (= ($generated@@286 $generated@@288 $generated@@289) ($generated@@111 17)))
 :pattern ( ($generated@@286 $generated@@288 $generated@@289))
))))
(assert (forall (($generated@@291 T@U) ($generated@@292 T@U) ) (!  (=> (and (and (= (type $generated@@291) $generated@@101) (= (type $generated@@292) $generated@@101)) (and ($generated@@290 $generated@@291) ($generated@@290 $generated@@292))) (= ($generated@@262 $generated@@291 $generated@@292) true))
 :pattern ( ($generated@@262 $generated@@291 $generated@@292) ($generated@@290 $generated@@291))
 :pattern ( ($generated@@262 $generated@@291 $generated@@292) ($generated@@290 $generated@@292))
)))
(assert (forall (($generated@@294 T@U) ($generated@@295 T@U) ($generated@@296 T@U) ($generated@@297 T@U) ($generated@@298 T@U) ) (!  (=> (and (and (and (and (and (= (type $generated@@294) $generated@@82) (= (type $generated@@295) $generated@@82)) (= (type $generated@@296) $generated@@203)) (= (type $generated@@297) $generated@@203)) (= (type $generated@@298) ($generated@@117 $generated@@100 $generated@@118))) ($generated@@183 $generated@@298)) (= ($generated@@115 ($generated@@236 $generated@@296 $generated@@297) ($generated@@194 $generated@@294 $generated@@295) $generated@@298)  (and ($generated@@293 $generated@@296 $generated@@294 $generated@@298) ($generated@@293 $generated@@297 $generated@@295 $generated@@298))))
 :pattern ( ($generated@@115 ($generated@@236 $generated@@296 $generated@@297) ($generated@@194 $generated@@294 $generated@@295) $generated@@298))
)))
(assert (forall (($generated@@299 T@U) ) (!  (=> (= (type $generated@@299) $generated@@101) (= ($generated@@193 $generated@@299) (= ($generated@@215 $generated@@299) $generated@@62)))
 :pattern ( ($generated@@193 $generated@@299))
)))
(assert (forall (($generated@@300 T@U) ) (!  (=> (= (type $generated@@300) $generated@@101) (= ($generated@@290 $generated@@300) (= ($generated@@215 $generated@@300) $generated@@67)))
 :pattern ( ($generated@@290 $generated@@300))
)))
(assert (forall (($generated@@301 T@U) ) (!  (=> (= (type $generated@@301) $generated@@101) (= ($generated@@267 $generated@@301) (= ($generated@@215 $generated@@301) $generated@@69)))
 :pattern ( ($generated@@267 $generated@@301))
)))
(assert (forall (($generated@@302 T@U) ) (!  (=> (= (type $generated@@302) $generated@@101) (= ($generated@@223 $generated@@302) (= ($generated@@215 $generated@@302) $generated@@73)))
 :pattern ( ($generated@@223 $generated@@302))
)))
(assert  (=> (<= 0 $generated@@107) (forall (($generated@@303 T@U) ) (!  (=> (and (= (type $generated@@303) $generated@@100) (or ($generated@@258 ($generated@@109 $generated@@303)) (and (not (= 0 $generated@@107)) (and (not (= $generated@@303 $generated@@176)) ($generated@@97 $generated@@303 $generated@@230))))) (= ($generated@@257 ($generated@@109 $generated@@303)) ($generated@@111 5)))
 :weight 3
 :pattern ( ($generated@@257 ($generated@@109 $generated@@303)))
))))
(assert (forall (($generated@@304 T@U) ) (!  (=> (and (= (type $generated@@304) $generated@@101) ($generated@@193 $generated@@304)) (exists (($generated@@305 T@U) ($generated@@306 T@U) ) (!  (and (and (= (type $generated@@305) $generated@@203) (= (type $generated@@306) $generated@@203)) (= $generated@@304 ($generated@@236 $generated@@305 $generated@@306)))
 :no-pattern (type $generated@@305)
 :no-pattern (type $generated@@306)
 :no-pattern ($generated $generated@@305)
 :no-pattern ($generated@@0 $generated@@305)
 :no-pattern ($generated $generated@@306)
 :no-pattern ($generated@@0 $generated@@306)
)))
 :pattern ( ($generated@@193 $generated@@304))
)))
(assert (forall (($generated@@307 T@U) ) (!  (=> (and (= (type $generated@@307) $generated@@101) ($generated@@267 $generated@@307)) (exists (($generated@@308 T@U) ($generated@@309 T@U) ) (!  (and (and (= (type $generated@@308) $generated@@100) (= (type $generated@@309) $generated@@101)) (= $generated@@307 ($generated@@98 $generated@@308 $generated@@309)))
 :no-pattern (type $generated@@308)
 :no-pattern (type $generated@@309)
 :no-pattern ($generated $generated@@308)
 :no-pattern ($generated@@0 $generated@@308)
 :no-pattern ($generated $generated@@309)
 :no-pattern ($generated@@0 $generated@@309)
)))
 :pattern ( ($generated@@267 $generated@@307))
)))
(assert (forall (($generated@@310 T@U) ) (!  (=> (and (= (type $generated@@310) $generated@@101) ($generated@@223 $generated@@310)) (exists (($generated@@311 T@U) ($generated@@312 T@U) ) (!  (and (and (= (type $generated@@311) $generated@@203) (= (type $generated@@312) $generated@@203)) (= $generated@@310 ($generated@@250 $generated@@311 $generated@@312)))
 :no-pattern (type $generated@@311)
 :no-pattern (type $generated@@312)
 :no-pattern ($generated $generated@@311)
 :no-pattern ($generated@@0 $generated@@311)
 :no-pattern ($generated $generated@@312)
 :no-pattern ($generated@@0 $generated@@312)
)))
 :pattern ( ($generated@@223 $generated@@310))
)))
(assert  (and (and (forall (($generated@@317 T@T) ) (= ($generated@@1 ($generated@@315 $generated@@317)) 18)) (forall (($generated@@318 T@T) ) (! (= ($generated@@316 ($generated@@315 $generated@@318)) $generated@@318)
 :pattern ( ($generated@@315 $generated@@318))
))) (forall (($generated@@319 T@T) ) (! (= (type ($generated@@313 $generated@@319)) ($generated@@315 $generated@@319))
 :pattern ( ($generated@@313 $generated@@319))
))))
(assert (forall (($generated@@320 T@T) ) (! (= ($generated@@314 ($generated@@313 $generated@@320)) 0)
 :pattern ( ($generated@@313 $generated@@320))
)))
(assert (forall (($generated@@321 T@U) ) (!  (=> (and (= (type $generated@@321) $generated@@101) ($generated@@290 $generated@@321)) (= $generated@@321 $generated@@216))
 :pattern ( ($generated@@290 $generated@@321))
)))
(assert  (=> (<= 1 $generated@@107) (forall (($generated@@322 T@U) ($generated@@323 T@U) ) (!  (=> (and (and (= (type $generated@@322) $generated@@82) (= (type $generated@@323) $generated@@101)) (or ($generated@@287 $generated@@322 ($generated@@109 $generated@@323)) (and (not (= 1 $generated@@107)) ($generated@@97 $generated@@323 ($generated@@224 $generated@@322))))) (= ($generated@@286 $generated@@322 ($generated@@109 $generated@@323)) ($generated@@111 17)))
 :weight 3
 :pattern ( ($generated@@286 $generated@@322 ($generated@@109 $generated@@323)))
))))
(assert  (=> (<= 0 $generated@@107) (forall (($generated@@324 T@U) ) (!  (=> (and (= (type $generated@@324) $generated@@100) (or ($generated@@258 $generated@@324) (and (not (= 0 $generated@@107)) (and (not (= $generated@@324 $generated@@176)) ($generated@@97 $generated@@324 $generated@@230))))) true)
 :pattern ( ($generated@@257 $generated@@324))
))))
(assert ($generated@@248 $generated@@60))
(assert (forall (($generated@@326 T@U) ) (! (= (type ($generated@@325 $generated@@326)) $generated@@203)
 :pattern ( ($generated@@325 $generated@@326))
)))
(assert (forall (($generated@@327 T@U) ($generated@@328 T@U) ($generated@@329 T@U) ) (!  (=> (and (= (type $generated@@328) $generated@@82) (= (type $generated@@329) ($generated@@117 $generated@@100 $generated@@118))) (= ($generated@@293 ($generated@@325 $generated@@327) $generated@@328 $generated@@329) ($generated@@115 $generated@@327 $generated@@328 $generated@@329)))
 :pattern ( ($generated@@293 ($generated@@325 $generated@@327) $generated@@328 $generated@@329))
)))
(assert (forall (($generated@@330 T@U) ($generated@@331 T@U) ($generated@@332 T@U) ($generated@@333 T@U) ) (!  (=> (and (and (and (and (and (= (type $generated@@330) ($generated@@117 $generated@@100 $generated@@118)) (= (type $generated@@331) ($generated@@117 $generated@@100 $generated@@118))) (= (type $generated@@332) $generated@@203)) (= (type $generated@@333) $generated@@82)) ($generated@@172 $generated@@330 $generated@@331)) ($generated@@293 $generated@@332 $generated@@333 $generated@@330)) ($generated@@293 $generated@@332 $generated@@333 $generated@@331))
 :pattern ( ($generated@@172 $generated@@330 $generated@@331) ($generated@@293 $generated@@332 $generated@@333 $generated@@330))
)))
(assert (forall (($generated@@334 T@U) ($generated@@335 T@U) ($generated@@336 T@U) ($generated@@337 T@U) ) (!  (=> (and (and (and (and (= (type $generated@@334) ($generated@@117 $generated@@100 $generated@@118)) (= (type $generated@@335) ($generated@@117 $generated@@100 $generated@@118))) (= (type $generated@@337) $generated@@82)) ($generated@@172 $generated@@334 $generated@@335)) ($generated@@115 $generated@@336 $generated@@337 $generated@@334)) ($generated@@115 $generated@@336 $generated@@337 $generated@@335))
 :pattern ( ($generated@@172 $generated@@334 $generated@@335) ($generated@@115 $generated@@336 $generated@@337 $generated@@334))
)))
(assert (forall (($generated@@338 T@U) ($generated@@339 T@U) ) (!  (=> (and (= (type $generated@@338) ($generated@@117 $generated@@100 $generated@@118)) (= (type $generated@@339) $generated@@100)) (=> (and (and ($generated@@183 $generated@@338) (and (not (= $generated@@339 $generated@@176)) (= ($generated@@184 $generated@@339) $generated@@102))) ($generated@@0 ($generated@@123 ($generated@@121 $generated@@338 $generated@@339) $generated@@60))) ($generated@@115 ($generated@@123 ($generated@@121 $generated@@338 $generated@@339) $generated@@182) $generated@@46 $generated@@338)))
 :pattern ( ($generated@@123 ($generated@@121 $generated@@338 $generated@@339) $generated@@182))
)))
(assert (forall (($generated@@342 T@T) ) (! (= (type ($generated@@341 $generated@@342)) ($generated@@117 $generated@@342 $generated@@2))
 :pattern ( ($generated@@341 $generated@@342))
)))
(assert (forall (($generated@@343 T@U) ) (! (let (($generated@@344 ($generated@@119 (type $generated@@343))))
 (=> (= (type $generated@@343) ($generated@@117 $generated@@344 $generated@@2)) (and (= (= ($generated@@340 $generated@@343) 0) (= $generated@@343 ($generated@@341 $generated@@344))) (=> (not (= ($generated@@340 $generated@@343) 0)) (exists (($generated@@345 T@U) ) (!  (and (= (type $generated@@345) $generated@@344) (< 0 ($generated ($generated@@121 $generated@@343 $generated@@345))))
 :no-pattern (type $generated@@345)
 :no-pattern ($generated $generated@@345)
 :no-pattern ($generated@@0 $generated@@345)
))))))
 :pattern ( ($generated@@340 $generated@@343))
)))
(assert (forall (($generated@@347 T@U) ) (! (= (type ($generated@@346 $generated@@347)) $generated@@89)
 :pattern ( ($generated@@346 $generated@@347))
)))
(assert (forall (($generated@@348 T@U) ) (!  (=> (= (type $generated@@348) $generated@@82) (and (= ($generated@@93 ($generated@@224 $generated@@348)) $generated@@74) (= ($generated@@346 ($generated@@224 $generated@@348)) $generated@@79)))
 :pattern ( ($generated@@224 $generated@@348))
)))
(assert  (and (and (and (and (forall (($generated@@354 T@T) ($generated@@355 T@T) ) (= ($generated@@1 ($generated@@351 $generated@@354 $generated@@355)) 19)) (forall (($generated@@356 T@T) ($generated@@357 T@T) ) (! (= ($generated@@352 ($generated@@351 $generated@@356 $generated@@357)) $generated@@356)
 :pattern ( ($generated@@351 $generated@@356 $generated@@357))
))) (forall (($generated@@358 T@T) ($generated@@359 T@T) ) (! (= ($generated@@353 ($generated@@351 $generated@@358 $generated@@359)) $generated@@359)
 :pattern ( ($generated@@351 $generated@@358 $generated@@359))
))) (forall (($generated@@360 T@U) ) (! (let (($generated@@361 ($generated@@352 (type $generated@@360))))
(= (type ($generated@@349 $generated@@360)) ($generated@@117 $generated@@361 $generated@@4)))
 :pattern ( ($generated@@349 $generated@@360))
))) (forall (($generated@@362 T@T) ($generated@@363 T@T) ) (! (= (type ($generated@@350 $generated@@362 $generated@@363)) ($generated@@351 $generated@@362 $generated@@363))
 :pattern ( ($generated@@350 $generated@@362 $generated@@363))
))))
(assert (forall (($generated@@364 T@U) ($generated@@365 T@T) ) (! (let (($generated@@366 (type $generated@@364)))
 (not ($generated@@0 ($generated@@121 ($generated@@349 ($generated@@350 $generated@@366 $generated@@365)) $generated@@364))))
 :pattern ( (let (($generated@@366 (type $generated@@364)))
($generated@@121 ($generated@@349 ($generated@@350 $generated@@366 $generated@@365)) $generated@@364)))
)))
(assert  (and (and (and (and (forall (($generated@@372 T@T) ($generated@@373 T@T) ) (= ($generated@@1 ($generated@@369 $generated@@372 $generated@@373)) 20)) (forall (($generated@@374 T@T) ($generated@@375 T@T) ) (! (= ($generated@@370 ($generated@@369 $generated@@374 $generated@@375)) $generated@@374)
 :pattern ( ($generated@@369 $generated@@374 $generated@@375))
))) (forall (($generated@@376 T@T) ($generated@@377 T@T) ) (! (= ($generated@@371 ($generated@@369 $generated@@376 $generated@@377)) $generated@@377)
 :pattern ( ($generated@@369 $generated@@376 $generated@@377))
))) (forall (($generated@@378 T@U) ) (! (let (($generated@@379 ($generated@@370 (type $generated@@378))))
(= (type ($generated@@367 $generated@@378)) ($generated@@117 $generated@@379 $generated@@4)))
 :pattern ( ($generated@@367 $generated@@378))
))) (forall (($generated@@380 T@T) ($generated@@381 T@T) ) (! (= (type ($generated@@368 $generated@@380 $generated@@381)) ($generated@@369 $generated@@380 $generated@@381))
 :pattern ( ($generated@@368 $generated@@380 $generated@@381))
))))
(assert (forall (($generated@@382 T@U) ($generated@@383 T@T) ) (! (let (($generated@@384 (type $generated@@382)))
 (not ($generated@@0 ($generated@@121 ($generated@@367 ($generated@@368 $generated@@384 $generated@@383)) $generated@@382))))
 :pattern ( (let (($generated@@384 (type $generated@@382)))
($generated@@121 ($generated@@367 ($generated@@368 $generated@@384 $generated@@383)) $generated@@382)))
)))
(assert (forall (($generated@@386 T@U) ($generated@@387 T@U) ) (!  (=> (and (and (= (type $generated@@386) ($generated@@117 $generated@@100 $generated@@118)) (= (type $generated@@387) ($generated@@117 $generated@@100 $generated@@118))) ($generated@@385 $generated@@386 $generated@@387)) (and ($generated@@172 $generated@@386 $generated@@387) (forall (($generated@@388 T@U) ($generated@@389 T@U) ) (! (let (($generated@@390 ($generated@@85 (type $generated@@389))))
 (=> (and (and (= (type $generated@@388) $generated@@100) (= (type $generated@@389) ($generated@@84 $generated@@390))) (not ($generated@@248 $generated@@389))) (= ($generated@@123 ($generated@@121 $generated@@386 $generated@@388) $generated@@389) ($generated@@123 ($generated@@121 $generated@@387 $generated@@388) $generated@@389))))
 :pattern ( ($generated@@123 ($generated@@121 $generated@@387 $generated@@388) $generated@@389))
))))
 :pattern ( ($generated@@385 $generated@@386 $generated@@387))
)))
(assert  (=> (<= 1 $generated@@107) (forall (($generated@@391 T@U) ($generated@@392 T@U) ) (!  (=> (and (and (= (type $generated@@391) $generated@@82) (= (type $generated@@392) $generated@@101)) (or ($generated@@287 $generated@@391 $generated@@392) (and (not (= 1 $generated@@107)) ($generated@@97 $generated@@392 ($generated@@224 $generated@@391))))) true)
 :pattern ( ($generated@@286 $generated@@391 $generated@@392))
))))
(assert (forall (($generated@@393 T@U) ) (! (let (($generated@@394 ($generated@@119 (type $generated@@393))))
 (=> (= (type $generated@@393) ($generated@@117 $generated@@394 $generated@@2)) (= ($generated@@219 $generated@@393) (forall (($generated@@395 T@U) ) (!  (=> (= (type $generated@@395) $generated@@394) (and (<= 0 ($generated ($generated@@121 $generated@@393 $generated@@395))) (<= ($generated ($generated@@121 $generated@@393 $generated@@395)) ($generated@@340 $generated@@393))))
 :pattern ( ($generated@@121 $generated@@393 $generated@@395))
)))))
 :pattern ( ($generated@@219 $generated@@393))
)))
(assert (forall (($generated@@397 T@T) ($generated@@398 T@U) ) (! (= (type ($generated@@396 $generated@@397 $generated@@398)) $generated@@397)
 :pattern ( ($generated@@396 $generated@@397 $generated@@398))
)))
(assert (forall (($generated@@399 T@U) ) (!  (=> (and (= (type $generated@@399) $generated@@203) ($generated@@237 $generated@@399 $generated@@102)) (and (= ($generated@@325 ($generated@@396 $generated@@100 $generated@@399)) $generated@@399) ($generated@@97 ($generated@@396 $generated@@100 $generated@@399) $generated@@102)))
 :pattern ( ($generated@@237 $generated@@399 $generated@@102))
)))
(assert (forall (($generated@@400 T@U) ) (!  (=> (and (= (type $generated@@400) $generated@@203) ($generated@@237 $generated@@400 $generated@@230)) (and (= ($generated@@325 ($generated@@396 $generated@@100 $generated@@400)) $generated@@400) ($generated@@97 ($generated@@396 $generated@@100 $generated@@400) $generated@@230)))
 :pattern ( ($generated@@237 $generated@@400 $generated@@230))
)))
(assert (forall (($generated@@401 T@U) ) (!  (=> (and (= (type $generated@@401) $generated@@203) ($generated@@237 $generated@@401 $generated@@99)) (and (= ($generated@@325 ($generated@@396 $generated@@101 $generated@@401)) $generated@@401) ($generated@@97 ($generated@@396 $generated@@101 $generated@@401) $generated@@99)))
 :pattern ( ($generated@@237 $generated@@401 $generated@@99))
)))
(assert (forall (($generated@@402 T@U) ) (!  (=> (and (= (type $generated@@402) $generated@@203) ($generated@@237 $generated@@402 $generated@@179)) (and (= ($generated@@325 ($generated@@396 $generated@@100 $generated@@402)) $generated@@402) ($generated@@97 ($generated@@396 $generated@@100 $generated@@402) $generated@@179)))
 :pattern ( ($generated@@237 $generated@@402 $generated@@179))
)))
(assert (forall (($generated@@403 T@U) ) (!  (=> (and (= (type $generated@@403) $generated@@203) ($generated@@237 $generated@@403 $generated@@233)) (and (= ($generated@@325 ($generated@@396 $generated@@100 $generated@@403)) $generated@@403) ($generated@@97 ($generated@@396 $generated@@100 $generated@@403) $generated@@233)))
 :pattern ( ($generated@@237 $generated@@403 $generated@@233))
)))
(assert (forall (($generated@@404 T@U) ) (!  (=> (= (type $generated@@404) $generated@@100) (= ($generated@@97 $generated@@404 $generated@@230)  (and ($generated@@97 $generated@@404 $generated@@102) (not (= $generated@@404 $generated@@176)))))
 :pattern ( ($generated@@97 $generated@@404 $generated@@230))
)))
(assert (forall (($generated@@405 T@U) ) (!  (=> (= (type $generated@@405) $generated@@100) (= ($generated@@97 $generated@@405 $generated@@233)  (and ($generated@@97 $generated@@405 $generated@@179) (not (= $generated@@405 $generated@@176)))))
 :pattern ( ($generated@@97 $generated@@405 $generated@@233))
)))
(assert (forall (($generated@@406 T@U) ) (! (let (($generated@@407 ($generated@@353 (type $generated@@406))))
(let (($generated@@408 ($generated@@352 (type $generated@@406))))
 (=> (= (type $generated@@406) ($generated@@351 $generated@@408 $generated@@407)) (or (= $generated@@406 ($generated@@350 $generated@@408 $generated@@407)) (exists (($generated@@409 T@U) ) (!  (and (= (type $generated@@409) $generated@@408) ($generated@@0 ($generated@@121 ($generated@@349 $generated@@406) $generated@@409)))
 :no-pattern (type $generated@@409)
 :no-pattern ($generated $generated@@409)
 :no-pattern ($generated@@0 $generated@@409)
))))))
 :pattern ( ($generated@@349 $generated@@406))
)))
(assert (forall (($generated@@411 T@U) ) (! (let (($generated@@412 ($generated@@353 (type $generated@@411))))
(= (type ($generated@@410 $generated@@411)) ($generated@@117 $generated@@412 $generated@@4)))
 :pattern ( ($generated@@410 $generated@@411))
)))
(assert (forall (($generated@@413 T@U) ) (! (let (($generated@@414 ($generated@@353 (type $generated@@413))))
(let (($generated@@415 ($generated@@352 (type $generated@@413))))
 (=> (= (type $generated@@413) ($generated@@351 $generated@@415 $generated@@414)) (or (= $generated@@413 ($generated@@350 $generated@@415 $generated@@414)) (exists (($generated@@416 T@U) ) (!  (and (= (type $generated@@416) $generated@@414) ($generated@@0 ($generated@@121 ($generated@@410 $generated@@413) $generated@@416)))
 :no-pattern (type $generated@@416)
 :no-pattern ($generated $generated@@416)
 :no-pattern ($generated@@0 $generated@@416)
))))))
 :pattern ( ($generated@@410 $generated@@413))
)))
(assert (forall (($generated@@417 T@U) ) (! (let (($generated@@418 ($generated@@371 (type $generated@@417))))
(let (($generated@@419 ($generated@@370 (type $generated@@417))))
 (=> (= (type $generated@@417) ($generated@@369 $generated@@419 $generated@@418)) (or (= $generated@@417 ($generated@@368 $generated@@419 $generated@@418)) (exists (($generated@@420 T@U) ) (!  (and (= (type $generated@@420) $generated@@419) ($generated@@0 ($generated@@121 ($generated@@367 $generated@@417) $generated@@420)))
 :no-pattern (type $generated@@420)
 :no-pattern ($generated $generated@@420)
 :no-pattern ($generated@@0 $generated@@420)
))))))
 :pattern ( ($generated@@367 $generated@@417))
)))
(assert (forall (($generated@@422 T@U) ) (! (let (($generated@@423 ($generated@@371 (type $generated@@422))))
(= (type ($generated@@421 $generated@@422)) ($generated@@117 $generated@@423 $generated@@4)))
 :pattern ( ($generated@@421 $generated@@422))
)))
(assert (forall (($generated@@424 T@U) ) (! (let (($generated@@425 ($generated@@371 (type $generated@@424))))
(let (($generated@@426 ($generated@@370 (type $generated@@424))))
 (=> (= (type $generated@@424) ($generated@@369 $generated@@426 $generated@@425)) (or (= $generated@@424 ($generated@@368 $generated@@426 $generated@@425)) (exists (($generated@@427 T@U) ) (!  (and (= (type $generated@@427) $generated@@425) ($generated@@0 ($generated@@121 ($generated@@421 $generated@@424) $generated@@427)))
 :no-pattern (type $generated@@427)
 :no-pattern ($generated $generated@@427)
 :no-pattern ($generated@@0 $generated@@427)
))))))
 :pattern ( ($generated@@421 $generated@@424))
)))
(assert (forall (($generated@@428 T@U) ($generated@@429 T@U) ) (!  (=> (and (= (type $generated@@428) ($generated@@117 $generated@@203 $generated@@2)) (= (type $generated@@429) $generated@@82)) (= ($generated@@97 $generated@@428 ($generated@@218 $generated@@429)) (forall (($generated@@430 T@U) ) (!  (=> (and (= (type $generated@@430) $generated@@203) (< 0 ($generated ($generated@@121 $generated@@428 $generated@@430)))) ($generated@@237 $generated@@430 $generated@@429))
 :pattern ( ($generated@@121 $generated@@428 $generated@@430))
))))
 :pattern ( ($generated@@97 $generated@@428 ($generated@@218 $generated@@429)))
)))
(assert (forall (($generated@@431 T@U) ($generated@@432 T@U) ) (!  (=> (and (= (type $generated@@431) ($generated@@117 $generated@@100 $generated@@118)) (= (type $generated@@432) $generated@@100)) (=> (and (and ($generated@@183 $generated@@431) (and (not (= $generated@@432 $generated@@176)) (= ($generated@@184 $generated@@432) $generated@@179))) ($generated@@0 ($generated@@123 ($generated@@121 $generated@@431 $generated@@432) $generated@@60))) ($generated@@115 ($generated@@123 ($generated@@121 $generated@@431 $generated@@432) $generated@@249) $generated@@102 $generated@@431)))
 :pattern ( ($generated@@123 ($generated@@121 $generated@@431 $generated@@432) $generated@@249))
)))
(assert (forall (($generated@@434 T@U) ) (!  (=> (and (= (type $generated@@434) $generated@@101) ($generated@@433 $generated@@434)) (or ($generated@@290 $generated@@434) ($generated@@267 $generated@@434)))
 :pattern ( ($generated@@433 $generated@@434))
)))
(assert (forall (($generated@@435 T@U) ($generated@@436 T@U) ($generated@@437 T@U) ) (!  (=> (and (and (= (type $generated@@435) ($generated@@117 $generated@@203 $generated@@4)) (= (type $generated@@436) $generated@@82)) (= (type $generated@@437) ($generated@@117 $generated@@100 $generated@@118))) (= ($generated@@115 $generated@@435 ($generated@@274 $generated@@436) $generated@@437) (forall (($generated@@438 T@U) ) (!  (=> (and (= (type $generated@@438) $generated@@203) ($generated@@0 ($generated@@121 $generated@@435 $generated@@438))) ($generated@@293 $generated@@438 $generated@@436 $generated@@437))
 :pattern ( ($generated@@121 $generated@@435 $generated@@438))
))))
 :pattern ( ($generated@@115 $generated@@435 ($generated@@274 $generated@@436) $generated@@437))
)))
(assert (forall (($generated@@439 T@U) ($generated@@440 T@U) ($generated@@441 T@U) ) (!  (=> (and (and (= (type $generated@@439) ($generated@@117 $generated@@203 $generated@@4)) (= (type $generated@@440) $generated@@82)) (= (type $generated@@441) ($generated@@117 $generated@@100 $generated@@118))) (= ($generated@@115 $generated@@439 ($generated@@279 $generated@@440) $generated@@441) (forall (($generated@@442 T@U) ) (!  (=> (and (= (type $generated@@442) $generated@@203) ($generated@@0 ($generated@@121 $generated@@439 $generated@@442))) ($generated@@293 $generated@@442 $generated@@440 $generated@@441))
 :pattern ( ($generated@@121 $generated@@439 $generated@@442))
))))
 :pattern ( ($generated@@115 $generated@@439 ($generated@@279 $generated@@440) $generated@@441))
)))
(assert (forall (($generated@@443 T@U) ) (! (let (($generated@@444 (type $generated@@443)))
(= ($generated ($generated@@121 ($generated@@341 $generated@@444) $generated@@443)) 0))
 :pattern ( (let (($generated@@444 (type $generated@@443)))
($generated@@121 ($generated@@341 $generated@@444) $generated@@443)))
)))
(assert  (and (forall (($generated@@447 T@U) ) (! (= (type ($generated@@445 $generated@@447)) ($generated@@117 $generated@@203 $generated@@4))
 :pattern ( ($generated@@445 $generated@@447))
)) (forall (($generated@@448 T@U) ) (! (let (($generated@@449 ($generated@@353 (type $generated@@448))))
(let (($generated@@450 ($generated@@352 (type $generated@@448))))
(= (type ($generated@@446 $generated@@448)) ($generated@@117 $generated@@450 $generated@@449))))
 :pattern ( ($generated@@446 $generated@@448))
))))
(assert (forall (($generated@@451 T@U) ($generated@@452 T@U) ) (!  (=> (and (= (type $generated@@451) ($generated@@351 $generated@@203 $generated@@203)) (= (type $generated@@452) $generated@@203)) (= ($generated@@0 ($generated@@121 ($generated@@445 $generated@@451) $generated@@452))  (and ($generated@@0 ($generated@@121 ($generated@@349 $generated@@451) ($generated@@201 ($generated@@396 $generated@@101 $generated@@452)))) (= ($generated@@121 ($generated@@446 $generated@@451) ($generated@@201 ($generated@@396 $generated@@101 $generated@@452))) ($generated@@202 ($generated@@396 $generated@@101 $generated@@452))))))
 :pattern ( ($generated@@121 ($generated@@445 $generated@@451) $generated@@452))
)))
(assert  (and (forall (($generated@@455 T@U) ) (! (= (type ($generated@@453 $generated@@455)) ($generated@@117 $generated@@203 $generated@@4))
 :pattern ( ($generated@@453 $generated@@455))
)) (forall (($generated@@456 T@U) ) (! (let (($generated@@457 ($generated@@371 (type $generated@@456))))
(let (($generated@@458 ($generated@@370 (type $generated@@456))))
(= (type ($generated@@454 $generated@@456)) ($generated@@117 $generated@@458 $generated@@457))))
 :pattern ( ($generated@@454 $generated@@456))
))))
(assert (forall (($generated@@459 T@U) ($generated@@460 T@U) ) (!  (=> (and (= (type $generated@@459) ($generated@@369 $generated@@203 $generated@@203)) (= (type $generated@@460) $generated@@203)) (= ($generated@@0 ($generated@@121 ($generated@@453 $generated@@459) $generated@@460))  (and ($generated@@0 ($generated@@121 ($generated@@367 $generated@@459) ($generated@@201 ($generated@@396 $generated@@101 $generated@@460)))) (= ($generated@@121 ($generated@@454 $generated@@459) ($generated@@201 ($generated@@396 $generated@@101 $generated@@460))) ($generated@@202 ($generated@@396 $generated@@101 $generated@@460))))))
 :pattern ( ($generated@@121 ($generated@@453 $generated@@459) $generated@@460))
)))
(assert (forall (($generated@@461 T@U) ($generated@@462 T@U) ) (! (let (($generated@@463 (type $generated@@462)))
(let (($generated@@464 ($generated@@352 (type $generated@@461))))
 (=> (= (type $generated@@461) ($generated@@351 $generated@@464 $generated@@463)) (= ($generated@@0 ($generated@@121 ($generated@@410 $generated@@461) $generated@@462)) (exists (($generated@@465 T@U) ) (!  (and (= (type $generated@@465) $generated@@464) (and ($generated@@0 ($generated@@121 ($generated@@349 $generated@@461) $generated@@465)) (= $generated@@462 ($generated@@121 ($generated@@446 $generated@@461) $generated@@465))))
 :pattern ( ($generated@@121 ($generated@@349 $generated@@461) $generated@@465))
 :pattern ( ($generated@@121 ($generated@@446 $generated@@461) $generated@@465))
))))))
 :pattern ( ($generated@@121 ($generated@@410 $generated@@461) $generated@@462))
)))
(assert (forall (($generated@@466 T@U) ($generated@@467 T@U) ) (! (let (($generated@@468 (type $generated@@467)))
(let (($generated@@469 ($generated@@370 (type $generated@@466))))
 (=> (= (type $generated@@466) ($generated@@369 $generated@@469 $generated@@468)) (= ($generated@@0 ($generated@@121 ($generated@@421 $generated@@466) $generated@@467)) (exists (($generated@@470 T@U) ) (!  (and (= (type $generated@@470) $generated@@469) (and ($generated@@0 ($generated@@121 ($generated@@367 $generated@@466) $generated@@470)) (= $generated@@467 ($generated@@121 ($generated@@454 $generated@@466) $generated@@470))))
 :pattern ( ($generated@@121 ($generated@@367 $generated@@466) $generated@@470))
 :pattern ( ($generated@@121 ($generated@@454 $generated@@466) $generated@@470))
))))))
 :pattern ( ($generated@@121 ($generated@@421 $generated@@466) $generated@@467))
)))
(assert (forall (($generated@@472 T@U) ($generated@@473 T@U) ) (! (= (type ($generated@@471 $generated@@472 $generated@@473)) $generated@@82)
 :pattern ( ($generated@@471 $generated@@472 $generated@@473))
)))
(assert (forall (($generated@@474 T@U) ($generated@@475 T@U) ($generated@@476 T@U) ($generated@@477 T@U) ) (!  (=> (and (and (and (= (type $generated@@474) ($generated@@351 $generated@@203 $generated@@203)) (= (type $generated@@475) $generated@@82)) (= (type $generated@@476) $generated@@82)) (= (type $generated@@477) ($generated@@117 $generated@@100 $generated@@118))) (= ($generated@@115 $generated@@474 ($generated@@471 $generated@@475 $generated@@476) $generated@@477) (forall (($generated@@478 T@U) ) (!  (=> (and (= (type $generated@@478) $generated@@203) ($generated@@0 ($generated@@121 ($generated@@349 $generated@@474) $generated@@478))) (and ($generated@@293 ($generated@@121 ($generated@@446 $generated@@474) $generated@@478) $generated@@476 $generated@@477) ($generated@@293 $generated@@478 $generated@@475 $generated@@477)))
 :pattern ( ($generated@@121 ($generated@@446 $generated@@474) $generated@@478))
 :pattern ( ($generated@@121 ($generated@@349 $generated@@474) $generated@@478))
))))
 :pattern ( ($generated@@115 $generated@@474 ($generated@@471 $generated@@475 $generated@@476) $generated@@477))
)))
(assert (forall (($generated@@480 T@U) ($generated@@481 T@U) ) (! (= (type ($generated@@479 $generated@@480 $generated@@481)) $generated@@82)
 :pattern ( ($generated@@479 $generated@@480 $generated@@481))
)))
(assert (forall (($generated@@482 T@U) ($generated@@483 T@U) ($generated@@484 T@U) ($generated@@485 T@U) ) (!  (=> (and (and (and (= (type $generated@@482) ($generated@@369 $generated@@203 $generated@@203)) (= (type $generated@@483) $generated@@82)) (= (type $generated@@484) $generated@@82)) (= (type $generated@@485) ($generated@@117 $generated@@100 $generated@@118))) (= ($generated@@115 $generated@@482 ($generated@@479 $generated@@483 $generated@@484) $generated@@485) (forall (($generated@@486 T@U) ) (!  (=> (and (= (type $generated@@486) $generated@@203) ($generated@@0 ($generated@@121 ($generated@@367 $generated@@482) $generated@@486))) (and ($generated@@293 ($generated@@121 ($generated@@454 $generated@@482) $generated@@486) $generated@@484 $generated@@485) ($generated@@293 $generated@@486 $generated@@483 $generated@@485)))
 :pattern ( ($generated@@121 ($generated@@454 $generated@@482) $generated@@486))
 :pattern ( ($generated@@121 ($generated@@367 $generated@@482) $generated@@486))
))))
 :pattern ( ($generated@@115 $generated@@482 ($generated@@479 $generated@@483 $generated@@484) $generated@@485))
)))
(assert (forall (($generated@@488 Int) ($generated@@489 Int) ) (! (= ($generated@@487 $generated@@488 $generated@@489) (div $generated@@488 $generated@@489))
 :pattern ( ($generated@@487 $generated@@488 $generated@@489))
)))
(assert (forall (($generated@@492 T@U) ($generated@@493 T@U) ) (! (= (type ($generated@@490 $generated@@492 $generated@@493)) $generated@@100)
 :pattern ( ($generated@@490 $generated@@492 $generated@@493))
)))
(assert  (=> (<= 0 $generated@@107) (forall (($generated@@494 T@U) ($generated@@495 T@U) ) (!  (=> (and (and (= (type $generated@@494) ($generated@@117 $generated@@100 $generated@@118)) (= (type $generated@@495) $generated@@100)) (or ($generated@@491 $generated@@494 $generated@@495) (and (not (= 0 $generated@@107)) (and ($generated@@183 $generated@@494) (and (not (= $generated@@495 $generated@@176)) (and ($generated@@97 $generated@@495 $generated@@233) ($generated@@115 $generated@@495 $generated@@233 $generated@@494))))))) (= ($generated@@490 $generated@@494 $generated@@495) ($generated@@123 ($generated@@121 $generated@@494 $generated@@495) $generated@@249)))
 :pattern ( ($generated@@490 $generated@@494 $generated@@495) ($generated@@183 $generated@@494))
))))
(assert (forall (($generated@@496 T@U) ) (!  (=> (and (= (type $generated@@496) $generated@@101) ($generated@@97 $generated@@496 $generated@@99)) (or ($generated@@290 $generated@@496) ($generated@@267 $generated@@496)))
 :pattern ( ($generated@@267 $generated@@496) ($generated@@97 $generated@@496 $generated@@99))
 :pattern ( ($generated@@290 $generated@@496) ($generated@@97 $generated@@496 $generated@@99))
)))
(assert (forall (($generated@@497 T@U) ($generated@@498 T@U) ($generated@@499 T@U) ) (!  (=> (and (and (and (and (= (type $generated@@497) ($generated@@117 $generated@@100 $generated@@118)) (= (type $generated@@498) ($generated@@117 $generated@@100 $generated@@118))) (= (type $generated@@499) ($generated@@117 $generated@@100 $generated@@118))) (not (= $generated@@497 $generated@@499))) (and ($generated@@172 $generated@@497 $generated@@498) ($generated@@172 $generated@@498 $generated@@499))) ($generated@@172 $generated@@497 $generated@@499))
 :pattern ( ($generated@@172 $generated@@497 $generated@@498) ($generated@@172 $generated@@498 $generated@@499))
)))
(assert (forall (($generated@@501 T@T) ) (! (= (type ($generated@@500 $generated@@501)) ($generated@@117 $generated@@501 $generated@@4))
 :pattern ( ($generated@@500 $generated@@501))
)))
(assert (forall (($generated@@502 T@U) ) (! (let (($generated@@503 ($generated@@371 (type $generated@@502))))
(let (($generated@@504 ($generated@@370 (type $generated@@502))))
 (=> (= (type $generated@@502) ($generated@@369 $generated@@504 $generated@@503)) (= (= $generated@@502 ($generated@@368 $generated@@504 $generated@@503)) (= ($generated@@367 $generated@@502) ($generated@@500 $generated@@504))))))
 :pattern ( ($generated@@367 $generated@@502))
)))
(assert (forall (($generated@@505 T@U) ) (! (let (($generated@@506 ($generated@@371 (type $generated@@505))))
(let (($generated@@507 ($generated@@370 (type $generated@@505))))
 (=> (= (type $generated@@505) ($generated@@369 $generated@@507 $generated@@506)) (= (= $generated@@505 ($generated@@368 $generated@@507 $generated@@506)) (= ($generated@@421 $generated@@505) ($generated@@500 $generated@@506))))))
 :pattern ( ($generated@@421 $generated@@505))
)))
(assert (forall (($generated@@508 T@U) ) (! (let (($generated@@509 ($generated@@371 (type $generated@@508))))
(let (($generated@@510 ($generated@@370 (type $generated@@508))))
 (=> (= (type $generated@@508) ($generated@@369 $generated@@510 $generated@@509)) (= (= $generated@@508 ($generated@@368 $generated@@510 $generated@@509)) (= ($generated@@453 $generated@@508) ($generated@@500 $generated@@203))))))
 :pattern ( ($generated@@453 $generated@@508))
)))
(assert (forall (($generated@@511 T@U) ) (! (let (($generated@@512 ($generated@@353 (type $generated@@511))))
(let (($generated@@513 ($generated@@352 (type $generated@@511))))
 (=> (= (type $generated@@511) ($generated@@351 $generated@@513 $generated@@512)) (or (= $generated@@511 ($generated@@350 $generated@@513 $generated@@512)) (exists (($generated@@514 T@U) ($generated@@515 T@U) ) (!  (and (and (= (type $generated@@514) $generated@@203) (= (type $generated@@515) $generated@@203)) ($generated@@0 ($generated@@121 ($generated@@445 $generated@@511) ($generated@@325 ($generated@@236 $generated@@514 $generated@@515)))))
 :no-pattern (type $generated@@514)
 :no-pattern (type $generated@@515)
 :no-pattern ($generated $generated@@514)
 :no-pattern ($generated@@0 $generated@@514)
 :no-pattern ($generated $generated@@515)
 :no-pattern ($generated@@0 $generated@@515)
))))))
 :pattern ( ($generated@@445 $generated@@511))
)))
(assert (forall (($generated@@516 T@U) ) (! (let (($generated@@517 ($generated@@371 (type $generated@@516))))
(let (($generated@@518 ($generated@@370 (type $generated@@516))))
 (=> (= (type $generated@@516) ($generated@@369 $generated@@518 $generated@@517)) (or (= $generated@@516 ($generated@@368 $generated@@518 $generated@@517)) (exists (($generated@@519 T@U) ($generated@@520 T@U) ) (!  (and (and (= (type $generated@@519) $generated@@203) (= (type $generated@@520) $generated@@203)) ($generated@@0 ($generated@@121 ($generated@@453 $generated@@516) ($generated@@325 ($generated@@236 $generated@@519 $generated@@520)))))
 :no-pattern (type $generated@@519)
 :no-pattern (type $generated@@520)
 :no-pattern ($generated $generated@@519)
 :no-pattern ($generated@@0 $generated@@519)
 :no-pattern ($generated $generated@@520)
 :no-pattern ($generated@@0 $generated@@520)
))))))
 :pattern ( ($generated@@453 $generated@@516))
)))
(assert (forall (($generated@@522 T@U) ) (! (= (type ($generated@@521 $generated@@522)) $generated@@88)
 :pattern ( ($generated@@521 $generated@@522))
)))
(assert (forall (($generated@@523 T@U) ($generated@@524 T@U) ($generated@@525 T@T) ) (!  (=> (and (= (type $generated@@523) $generated@@88) (= (type $generated@@524) $generated@@86)) (and (= ($generated@@521 ($generated@@244 $generated@@525 $generated@@523 $generated@@524)) $generated@@523) (= ($generated@@95 ($generated@@244 $generated@@525 $generated@@523 $generated@@524)) $generated@@524)))
 :pattern ( ($generated@@244 $generated@@525 $generated@@523 $generated@@524))
)))
(assert (forall (($generated@@526 T@U) ) (!  (=> (and (= (type $generated@@526) $generated@@203) ($generated@@237 $generated@@526 $generated@@46)) (and (= ($generated@@325 ($generated@@396 $generated@@2 $generated@@526)) $generated@@526) ($generated@@97 ($generated@@396 $generated@@2 $generated@@526) $generated@@46)))
 :pattern ( ($generated@@237 $generated@@526 $generated@@46))
)))
(assert (forall (($generated@@527 T@U) ) (!  (=> (and (= (type $generated@@527) $generated@@203) ($generated@@237 $generated@@527 $generated@@47)) (and (= ($generated@@325 ($generated@@396 $generated@@3 $generated@@527)) $generated@@527) ($generated@@97 ($generated@@396 $generated@@3 $generated@@527) $generated@@47)))
 :pattern ( ($generated@@237 $generated@@527 $generated@@47))
)))
(assert (forall (($generated@@528 T@U) ) (!  (=> (and (= (type $generated@@528) $generated@@203) ($generated@@237 $generated@@528 $generated@@44)) (and (= ($generated@@325 ($generated@@396 $generated@@4 $generated@@528)) $generated@@528) ($generated@@97 ($generated@@396 $generated@@4 $generated@@528) $generated@@44)))
 :pattern ( ($generated@@237 $generated@@528 $generated@@44))
)))
(assert (= ($generated@@1 $generated@@529) 21))
(assert (forall (($generated@@530 T@U) ) (!  (=> (and (= (type $generated@@530) $generated@@203) ($generated@@237 $generated@@530 $generated@@45)) (and (= ($generated@@325 ($generated@@396 $generated@@529 $generated@@530)) $generated@@530) ($generated@@97 ($generated@@396 $generated@@529 $generated@@530) $generated@@45)))
 :pattern ( ($generated@@237 $generated@@530 $generated@@45))
)))
(assert (forall (($generated@@531 T@U) ($generated@@532 T@U) ) (!  (=> (= (type $generated@@532) $generated@@82) (= ($generated@@237 ($generated@@325 $generated@@531) $generated@@532) ($generated@@97 $generated@@531 $generated@@532)))
 :pattern ( ($generated@@237 ($generated@@325 $generated@@531) $generated@@532))
)))
(assert  (=> (<= 0 $generated@@107) (forall (($generated@@533 T@U) ($generated@@534 T@U) ) (!  (=> (and (and (= (type $generated@@533) ($generated@@117 $generated@@100 $generated@@118)) (= (type $generated@@534) $generated@@100)) (or ($generated@@491 $generated@@533 $generated@@534) (and (not (= 0 $generated@@107)) (and ($generated@@183 $generated@@533) (and (not (= $generated@@534 $generated@@176)) (and ($generated@@97 $generated@@534 $generated@@233) ($generated@@115 $generated@@534 $generated@@233 $generated@@533))))))) ($generated@@97 ($generated@@490 $generated@@533 $generated@@534) $generated@@102))
 :pattern ( ($generated@@490 $generated@@533 $generated@@534))
))))
(assert (forall (($generated@@535 T@U) ) (! (let (($generated@@536 ($generated@@119 (type $generated@@535))))
 (=> (= (type $generated@@535) ($generated@@117 $generated@@536 $generated@@2)) (<= 0 ($generated@@340 $generated@@535))))
 :pattern ( ($generated@@340 $generated@@535))
)))
(assert (forall (($generated@@537 T@U) ) (! (let (($generated@@538 ($generated@@316 (type $generated@@537))))
 (=> (= (type $generated@@537) ($generated@@315 $generated@@538)) (<= 0 ($generated@@314 $generated@@537))))
 :pattern ( ($generated@@314 $generated@@537))
)))
(assert (forall (($generated@@540 T@U) ) (! (= (type ($generated@@539 $generated@@540)) $generated@@82)
 :pattern ( ($generated@@539 $generated@@540))
)))
(assert (forall (($generated@@541 T@U) ($generated@@542 T@U) ) (!  (=> (and (= (type $generated@@541) $generated@@82) (= (type $generated@@542) $generated@@82)) (= ($generated@@539 ($generated@@471 $generated@@541 $generated@@542)) $generated@@541))
 :pattern ( ($generated@@471 $generated@@541 $generated@@542))
)))
(assert (forall (($generated@@544 T@U) ) (! (= (type ($generated@@543 $generated@@544)) $generated@@82)
 :pattern ( ($generated@@543 $generated@@544))
)))
(assert (forall (($generated@@545 T@U) ($generated@@546 T@U) ) (!  (=> (and (= (type $generated@@545) $generated@@82) (= (type $generated@@546) $generated@@82)) (= ($generated@@543 ($generated@@471 $generated@@545 $generated@@546)) $generated@@546))
 :pattern ( ($generated@@471 $generated@@545 $generated@@546))
)))
(assert (forall (($generated@@547 T@U) ($generated@@548 T@U) ) (!  (=> (and (= (type $generated@@547) $generated@@82) (= (type $generated@@548) $generated@@82)) (= ($generated@@93 ($generated@@471 $generated@@547 $generated@@548)) $generated@@58))
 :pattern ( ($generated@@471 $generated@@547 $generated@@548))
)))
(assert (forall (($generated@@550 T@U) ) (! (= (type ($generated@@549 $generated@@550)) $generated@@82)
 :pattern ( ($generated@@549 $generated@@550))
)))
(assert (forall (($generated@@551 T@U) ($generated@@552 T@U) ) (!  (=> (and (= (type $generated@@551) $generated@@82) (= (type $generated@@552) $generated@@82)) (= ($generated@@549 ($generated@@479 $generated@@551 $generated@@552)) $generated@@551))
 :pattern ( ($generated@@479 $generated@@551 $generated@@552))
)))
(assert (forall (($generated@@554 T@U) ) (! (= (type ($generated@@553 $generated@@554)) $generated@@82)
 :pattern ( ($generated@@553 $generated@@554))
)))
(assert (forall (($generated@@555 T@U) ($generated@@556 T@U) ) (!  (=> (and (= (type $generated@@555) $generated@@82) (= (type $generated@@556) $generated@@82)) (= ($generated@@553 ($generated@@479 $generated@@555 $generated@@556)) $generated@@556))
 :pattern ( ($generated@@479 $generated@@555 $generated@@556))
)))
(assert (forall (($generated@@557 T@U) ($generated@@558 T@U) ) (!  (=> (and (= (type $generated@@557) $generated@@82) (= (type $generated@@558) $generated@@82)) (= ($generated@@93 ($generated@@479 $generated@@557 $generated@@558)) $generated@@59))
 :pattern ( ($generated@@479 $generated@@557 $generated@@558))
)))
(assert (forall (($generated@@559 T@U) ($generated@@560 T@U) ) (!  (=> (and (= (type $generated@@559) $generated@@203) (= (type $generated@@560) $generated@@203)) (= ($generated@@215 ($generated@@236 $generated@@559 $generated@@560)) $generated@@62))
 :pattern ( ($generated@@236 $generated@@559 $generated@@560))
)))
(assert (forall (($generated@@562 T@U) ) (! (= (type ($generated@@561 $generated@@562)) $generated@@82)
 :pattern ( ($generated@@561 $generated@@562))
)))
(assert (forall (($generated@@563 T@U) ($generated@@564 T@U) ) (!  (=> (and (= (type $generated@@563) $generated@@82) (= (type $generated@@564) $generated@@82)) (= ($generated@@561 ($generated@@194 $generated@@563 $generated@@564)) $generated@@563))
 :pattern ( ($generated@@194 $generated@@563 $generated@@564))
)))
(assert (forall (($generated@@566 T@U) ) (! (= (type ($generated@@565 $generated@@566)) $generated@@82)
 :pattern ( ($generated@@565 $generated@@566))
)))
(assert (forall (($generated@@567 T@U) ($generated@@568 T@U) ) (!  (=> (and (= (type $generated@@567) $generated@@82) (= (type $generated@@568) $generated@@82)) (= ($generated@@565 ($generated@@194 $generated@@567 $generated@@568)) $generated@@568))
 :pattern ( ($generated@@194 $generated@@567 $generated@@568))
)))
(assert (forall (($generated@@569 T@U) ($generated@@570 T@U) ) (!  (=> (and (= (type $generated@@569) $generated@@203) (= (type $generated@@570) $generated@@203)) (= ($generated@@201 ($generated@@236 $generated@@569 $generated@@570)) $generated@@569))
 :pattern ( ($generated@@236 $generated@@569 $generated@@570))
)))
(assert (forall (($generated@@571 T@U) ($generated@@572 T@U) ) (!  (=> (and (= (type $generated@@571) $generated@@203) (= (type $generated@@572) $generated@@203)) (= ($generated@@202 ($generated@@236 $generated@@571 $generated@@572)) $generated@@572))
 :pattern ( ($generated@@236 $generated@@571 $generated@@572))
)))
(assert (forall (($generated@@573 T@U) ($generated@@574 T@U) ) (!  (=> (and (= (type $generated@@573) $generated@@100) (= (type $generated@@574) $generated@@101)) (= ($generated@@215 ($generated@@98 $generated@@573 $generated@@574)) $generated@@69))
 :pattern ( ($generated@@98 $generated@@573 $generated@@574))
)))
(assert (forall (($generated@@575 T@U) ($generated@@576 T@U) ) (!  (=> (and (= (type $generated@@575) $generated@@100) (= (type $generated@@576) $generated@@101)) (= ($generated@@268 ($generated@@98 $generated@@575 $generated@@576)) $generated@@575))
 :pattern ( ($generated@@98 $generated@@575 $generated@@576))
)))
(assert (forall (($generated@@577 T@U) ($generated@@578 T@U) ) (!  (=> (and (= (type $generated@@577) $generated@@100) (= (type $generated@@578) $generated@@101)) (= ($generated@@269 ($generated@@98 $generated@@577 $generated@@578)) $generated@@578))
 :pattern ( ($generated@@98 $generated@@577 $generated@@578))
)))
(assert (forall (($generated@@579 T@U) ($generated@@580 T@U) ) (!  (=> (and (= (type $generated@@579) $generated@@203) (= (type $generated@@580) $generated@@203)) (= ($generated@@215 ($generated@@250 $generated@@579 $generated@@580)) $generated@@73))
 :pattern ( ($generated@@250 $generated@@579 $generated@@580))
)))
(assert (forall (($generated@@581 T@U) ($generated@@582 T@U) ) (!  (=> (and (= (type $generated@@581) $generated@@203) (= (type $generated@@582) $generated@@203)) (= ($generated@@209 ($generated@@250 $generated@@581 $generated@@582)) $generated@@581))
 :pattern ( ($generated@@250 $generated@@581 $generated@@582))
)))
(assert (forall (($generated@@583 T@U) ($generated@@584 T@U) ) (!  (=> (and (= (type $generated@@583) $generated@@203) (= (type $generated@@584) $generated@@203)) (= ($generated@@210 ($generated@@250 $generated@@583 $generated@@584)) $generated@@584))
 :pattern ( ($generated@@250 $generated@@583 $generated@@584))
)))
(assert  (and (forall (($generated@@587 T@U) ) (! (= (type ($generated@@585 $generated@@587)) $generated@@82)
 :pattern ( ($generated@@585 $generated@@587))
)) (forall (($generated@@588 T@U) ($generated@@589 Int) ) (! (let (($generated@@590 ($generated@@316 (type $generated@@588))))
(= (type ($generated@@586 $generated@@588 $generated@@589)) $generated@@590))
 :pattern ( ($generated@@586 $generated@@588 $generated@@589))
))))
(assert (forall (($generated@@591 T@U) ($generated@@592 T@U) ($generated@@593 T@U) ) (!  (=> (and (and (= (type $generated@@591) ($generated@@315 $generated@@203)) (= (type $generated@@592) $generated@@82)) (= (type $generated@@593) ($generated@@117 $generated@@100 $generated@@118))) (= ($generated@@115 $generated@@591 ($generated@@585 $generated@@592) $generated@@593) (forall (($generated@@594 Int) ) (!  (=> (and (<= 0 $generated@@594) (< $generated@@594 ($generated@@314 $generated@@591))) ($generated@@293 ($generated@@586 $generated@@591 $generated@@594) $generated@@592 $generated@@593))
 :pattern ( ($generated@@586 $generated@@591 $generated@@594))
))))
 :pattern ( ($generated@@115 $generated@@591 ($generated@@585 $generated@@592) $generated@@593))
)))
(assert (forall (($generated@@596 Int) ) (! (= ($generated@@595 ($generated@@116 $generated@@596)) $generated@@596)
 :pattern ( ($generated@@116 $generated@@596))
)))
(assert (forall (($generated@@598 T@U) ) (! (= (type ($generated@@597 $generated@@598)) $generated@@82)
 :pattern ( ($generated@@597 $generated@@598))
)))
(assert (forall (($generated@@599 T@U) ) (!  (=> (= (type $generated@@599) $generated@@82) (= ($generated@@597 ($generated@@274 $generated@@599)) $generated@@599))
 :pattern ( ($generated@@274 $generated@@599))
)))
(assert (forall (($generated@@600 T@U) ) (!  (=> (= (type $generated@@600) $generated@@82) (= ($generated@@93 ($generated@@274 $generated@@600)) $generated@@54))
 :pattern ( ($generated@@274 $generated@@600))
)))
(assert (forall (($generated@@602 T@U) ) (! (= (type ($generated@@601 $generated@@602)) $generated@@82)
 :pattern ( ($generated@@601 $generated@@602))
)))
(assert (forall (($generated@@603 T@U) ) (!  (=> (= (type $generated@@603) $generated@@82) (= ($generated@@601 ($generated@@279 $generated@@603)) $generated@@603))
 :pattern ( ($generated@@279 $generated@@603))
)))
(assert (forall (($generated@@604 T@U) ) (!  (=> (= (type $generated@@604) $generated@@82) (= ($generated@@93 ($generated@@279 $generated@@604)) $generated@@55))
 :pattern ( ($generated@@279 $generated@@604))
)))
(assert (forall (($generated@@606 T@U) ) (! (= (type ($generated@@605 $generated@@606)) $generated@@82)
 :pattern ( ($generated@@605 $generated@@606))
)))
(assert (forall (($generated@@607 T@U) ) (!  (=> (= (type $generated@@607) $generated@@82) (= ($generated@@605 ($generated@@218 $generated@@607)) $generated@@607))
 :pattern ( ($generated@@218 $generated@@607))
)))
(assert (forall (($generated@@608 T@U) ) (!  (=> (= (type $generated@@608) $generated@@82) (= ($generated@@93 ($generated@@218 $generated@@608)) $generated@@56))
 :pattern ( ($generated@@218 $generated@@608))
)))
(assert (forall (($generated@@610 T@U) ) (! (= (type ($generated@@609 $generated@@610)) $generated@@82)
 :pattern ( ($generated@@609 $generated@@610))
)))
(assert (forall (($generated@@611 T@U) ) (!  (=> (= (type $generated@@611) $generated@@82) (= ($generated@@609 ($generated@@585 $generated@@611)) $generated@@611))
 :pattern ( ($generated@@585 $generated@@611))
)))
(assert (forall (($generated@@612 T@U) ) (!  (=> (= (type $generated@@612) $generated@@82) (= ($generated@@93 ($generated@@585 $generated@@612)) $generated@@57))
 :pattern ( ($generated@@585 $generated@@612))
)))
(assert (forall (($generated@@614 T@U) ) (! (= (type ($generated@@613 $generated@@614)) $generated@@82)
 :pattern ( ($generated@@613 $generated@@614))
)))
(assert (forall (($generated@@615 T@U) ) (!  (=> (= (type $generated@@615) $generated@@82) (= ($generated@@613 ($generated@@224 $generated@@615)) $generated@@615))
 :pattern ( ($generated@@224 $generated@@615))
)))
(assert (forall (($generated@@616 T@U) ) (! (let (($generated@@617 (type $generated@@616)))
(= ($generated@@396 $generated@@617 ($generated@@325 $generated@@616)) $generated@@616))
 :pattern ( ($generated@@325 $generated@@616))
)))
(assert (forall (($generated@@618 T@U) ($generated@@619 T@U) ($generated@@620 T@U) ) (!  (=> (and (and (= (type $generated@@618) ($generated@@351 $generated@@203 $generated@@203)) (= (type $generated@@619) $generated@@82)) (= (type $generated@@620) $generated@@82)) (= ($generated@@97 $generated@@618 ($generated@@471 $generated@@619 $generated@@620)) (forall (($generated@@621 T@U) ) (!  (=> (and (= (type $generated@@621) $generated@@203) ($generated@@0 ($generated@@121 ($generated@@349 $generated@@618) $generated@@621))) (and ($generated@@237 ($generated@@121 ($generated@@446 $generated@@618) $generated@@621) $generated@@620) ($generated@@237 $generated@@621 $generated@@619)))
 :pattern ( ($generated@@121 ($generated@@446 $generated@@618) $generated@@621))
 :pattern ( ($generated@@121 ($generated@@349 $generated@@618) $generated@@621))
))))
 :pattern ( ($generated@@97 $generated@@618 ($generated@@471 $generated@@619 $generated@@620)))
)))
(assert (forall (($generated@@622 T@U) ($generated@@623 T@U) ($generated@@624 T@U) ) (!  (=> (and (and (= (type $generated@@622) ($generated@@369 $generated@@203 $generated@@203)) (= (type $generated@@623) $generated@@82)) (= (type $generated@@624) $generated@@82)) (= ($generated@@97 $generated@@622 ($generated@@479 $generated@@623 $generated@@624)) (forall (($generated@@625 T@U) ) (!  (=> (and (= (type $generated@@625) $generated@@203) ($generated@@0 ($generated@@121 ($generated@@367 $generated@@622) $generated@@625))) (and ($generated@@237 ($generated@@121 ($generated@@454 $generated@@622) $generated@@625) $generated@@624) ($generated@@237 $generated@@625 $generated@@623)))
 :pattern ( ($generated@@121 ($generated@@454 $generated@@622) $generated@@625))
 :pattern ( ($generated@@121 ($generated@@367 $generated@@622) $generated@@625))
))))
 :pattern ( ($generated@@97 $generated@@622 ($generated@@479 $generated@@623 $generated@@624)))
)))
(assert (forall (($generated@@628 T@U) ($generated@@629 T@U) ) (!  (=> (and (= (type $generated@@628) $generated@@203) (= (type $generated@@629) $generated@@203)) (< ($generated@@626 $generated@@628) ($generated@@627 ($generated@@236 $generated@@628 $generated@@629))))
 :pattern ( ($generated@@236 $generated@@628 $generated@@629))
)))
(assert (forall (($generated@@630 T@U) ($generated@@631 T@U) ) (!  (=> (and (= (type $generated@@630) $generated@@203) (= (type $generated@@631) $generated@@203)) (< ($generated@@626 $generated@@631) ($generated@@627 ($generated@@236 $generated@@630 $generated@@631))))
 :pattern ( ($generated@@236 $generated@@630 $generated@@631))
)))
(assert (forall (($generated@@632 T@U) ($generated@@633 T@U) ) (!  (=> (and (= (type $generated@@632) $generated@@100) (= (type $generated@@633) $generated@@101)) (< ($generated@@627 $generated@@633) ($generated@@627 ($generated@@98 $generated@@632 $generated@@633))))
 :pattern ( ($generated@@98 $generated@@632 $generated@@633))
)))
(assert (forall (($generated@@634 T@U) ($generated@@635 T@U) ) (!  (=> (and (= (type $generated@@634) $generated@@203) (= (type $generated@@635) $generated@@203)) (< ($generated@@626 $generated@@634) ($generated@@627 ($generated@@250 $generated@@634 $generated@@635))))
 :pattern ( ($generated@@250 $generated@@634 $generated@@635))
)))
(assert (forall (($generated@@636 T@U) ($generated@@637 T@U) ) (!  (=> (and (= (type $generated@@636) $generated@@203) (= (type $generated@@637) $generated@@203)) (< ($generated@@626 $generated@@637) ($generated@@627 ($generated@@250 $generated@@636 $generated@@637))))
 :pattern ( ($generated@@250 $generated@@636 $generated@@637))
)))
(assert (forall (($generated@@638 T@U) ($generated@@639 T@U) ($generated@@640 T@U) ) (!  (=> (and (and (and (= (type $generated@@638) $generated@@203) (= (type $generated@@639) $generated@@82)) (= (type $generated@@640) $generated@@82)) ($generated@@237 $generated@@638 ($generated@@471 $generated@@639 $generated@@640))) (and (= ($generated@@325 ($generated@@396 ($generated@@351 $generated@@203 $generated@@203) $generated@@638)) $generated@@638) ($generated@@97 ($generated@@396 ($generated@@351 $generated@@203 $generated@@203) $generated@@638) ($generated@@471 $generated@@639 $generated@@640))))
 :pattern ( ($generated@@237 $generated@@638 ($generated@@471 $generated@@639 $generated@@640)))
)))
(assert (forall (($generated@@641 T@U) ($generated@@642 T@U) ($generated@@643 T@U) ) (!  (=> (and (and (and (= (type $generated@@641) $generated@@203) (= (type $generated@@642) $generated@@82)) (= (type $generated@@643) $generated@@82)) ($generated@@237 $generated@@641 ($generated@@479 $generated@@642 $generated@@643))) (and (= ($generated@@325 ($generated@@396 ($generated@@369 $generated@@203 $generated@@203) $generated@@641)) $generated@@641) ($generated@@97 ($generated@@396 ($generated@@369 $generated@@203 $generated@@203) $generated@@641) ($generated@@479 $generated@@642 $generated@@643))))
 :pattern ( ($generated@@237 $generated@@641 ($generated@@479 $generated@@642 $generated@@643)))
)))
(assert (forall (($generated@@644 T@U) ($generated@@645 T@U) ($generated@@646 T@U) ) (!  (=> (and (and (and (= (type $generated@@644) $generated@@82) (= (type $generated@@645) $generated@@82)) (= (type $generated@@646) $generated@@203)) ($generated@@237 $generated@@646 ($generated@@194 $generated@@644 $generated@@645))) (and (= ($generated@@325 ($generated@@396 $generated@@101 $generated@@646)) $generated@@646) ($generated@@97 ($generated@@396 $generated@@101 $generated@@646) ($generated@@194 $generated@@644 $generated@@645))))
 :pattern ( ($generated@@237 $generated@@646 ($generated@@194 $generated@@644 $generated@@645)))
)))
(assert (forall (($generated@@647 T@U) ($generated@@648 T@U) ($generated@@649 T@U) ) (!  (=> (and (and (and (= (type $generated@@647) $generated@@101) (= (type $generated@@648) $generated@@82)) (= (type $generated@@649) ($generated@@117 $generated@@100 $generated@@118))) (and ($generated@@183 $generated@@649) (and ($generated@@223 $generated@@647) ($generated@@115 $generated@@647 ($generated@@224 $generated@@648) $generated@@649)))) ($generated@@293 ($generated@@209 $generated@@647) $generated@@648 $generated@@649))
 :pattern ( ($generated@@293 ($generated@@209 $generated@@647) $generated@@648 $generated@@649))
)))
(assert (forall (($generated@@650 T@U) ($generated@@651 T@U) ($generated@@652 T@U) ) (!  (=> (and (and (and (= (type $generated@@650) $generated@@101) (= (type $generated@@651) $generated@@82)) (= (type $generated@@652) ($generated@@117 $generated@@100 $generated@@118))) (and ($generated@@183 $generated@@652) (and ($generated@@223 $generated@@650) ($generated@@115 $generated@@650 ($generated@@224 $generated@@651) $generated@@652)))) ($generated@@293 ($generated@@210 $generated@@650) $generated@@651 $generated@@652))
 :pattern ( ($generated@@293 ($generated@@210 $generated@@650) $generated@@651 $generated@@652))
)))
(assert (forall (($generated@@653 T@U) ) (! (let (($generated@@654 (type $generated@@653)))
 (not ($generated@@0 ($generated@@121 ($generated@@500 $generated@@654) $generated@@653))))
 :pattern ( (let (($generated@@654 (type $generated@@653)))
($generated@@121 ($generated@@500 $generated@@654) $generated@@653)))
)))
(assert (forall (($generated@@655 T@U) ($generated@@656 T@U) ) (!  (=> (and (and (= (type $generated@@655) ($generated@@117 $generated@@100 $generated@@118)) (= (type $generated@@656) $generated@@100)) (and ($generated@@183 $generated@@655) (and (not (= $generated@@656 $generated@@176)) (= ($generated@@184 $generated@@656) $generated@@179)))) ($generated@@97 ($generated@@123 ($generated@@121 $generated@@655 $generated@@656) $generated@@249) $generated@@102))
 :pattern ( ($generated@@123 ($generated@@121 $generated@@655 $generated@@656) $generated@@249))
)))
(assert (forall (($generated@@657 T@U) ($generated@@658 T@U) ) (!  (=> (and (= (type $generated@@657) $generated@@82) (= (type $generated@@658) $generated@@82)) (and (= ($generated@@93 ($generated@@194 $generated@@657 $generated@@658)) $generated@@63) (= ($generated@@346 ($generated@@194 $generated@@657 $generated@@658)) $generated@@75)))
 :pattern ( ($generated@@194 $generated@@657 $generated@@658))
)))
(assert (forall (($generated@@660 T@U) ($generated@@661 T@U) ($generated@@662 T@U) ) (!  (=> (and (and (= (type $generated@@660) ($generated@@117 $generated@@100 $generated@@118)) (= (type $generated@@661) ($generated@@117 $generated@@100 $generated@@118))) (= (type $generated@@662) $generated@@100)) (=> (and (and (and ($generated@@183 $generated@@660) ($generated@@183 $generated@@661)) (and (not (= $generated@@662 $generated@@176)) ($generated@@97 $generated@@662 $generated@@233))) (and ($generated@@659 $generated@@660) ($generated@@172 $generated@@660 $generated@@661))) (=> (forall (($generated@@663 T@U) ($generated@@664 T@U) ) (! (let (($generated@@665 ($generated@@85 (type $generated@@664))))
 (=> (and (and (= (type $generated@@663) $generated@@100) (= (type $generated@@664) ($generated@@84 $generated@@665))) (and (not (= $generated@@663 $generated@@176)) (= $generated@@663 $generated@@662))) (= ($generated@@123 ($generated@@121 $generated@@660 $generated@@663) $generated@@664) ($generated@@123 ($generated@@121 $generated@@661 $generated@@663) $generated@@664))))
 :no-pattern (type $generated@@663)
 :no-pattern (type $generated@@664)
 :no-pattern ($generated $generated@@663)
 :no-pattern ($generated@@0 $generated@@663)
 :no-pattern ($generated $generated@@664)
 :no-pattern ($generated@@0 $generated@@664)
)) (= ($generated@@490 $generated@@660 $generated@@662) ($generated@@490 $generated@@661 $generated@@662)))))
 :pattern ( ($generated@@659 $generated@@660) ($generated@@172 $generated@@660 $generated@@661) ($generated@@490 $generated@@661 $generated@@662))
)))
(assert (forall (($generated@@666 T@U) ) (!  (=> (= (type $generated@@666) $generated@@101) (= ($generated@@626 ($generated@@325 $generated@@666)) ($generated@@627 $generated@@666)))
 :pattern ( ($generated@@626 ($generated@@325 $generated@@666)))
)))
(assert (forall (($generated@@667 T@U) ) (!  (=> (and (= (type $generated@@667) $generated@@203) ($generated@@237 $generated@@667 ($generated@@116 0))) (and (= ($generated@@325 ($generated@@396 $generated@@2 $generated@@667)) $generated@@667) ($generated@@97 ($generated@@396 ($generated@@117 $generated@@203 $generated@@4) $generated@@667) ($generated@@116 0))))
 :pattern ( ($generated@@237 $generated@@667 ($generated@@116 0)))
)))
(assert (forall (($generated@@668 T@U) ($generated@@669 T@U) ) (!  (=> (and (and (= (type $generated@@668) $generated@@203) (= (type $generated@@669) $generated@@82)) ($generated@@237 $generated@@668 ($generated@@274 $generated@@669))) (and (= ($generated@@325 ($generated@@396 ($generated@@117 $generated@@203 $generated@@4) $generated@@668)) $generated@@668) ($generated@@97 ($generated@@396 ($generated@@117 $generated@@203 $generated@@4) $generated@@668) ($generated@@274 $generated@@669))))
 :pattern ( ($generated@@237 $generated@@668 ($generated@@274 $generated@@669)))
)))
(assert (forall (($generated@@670 T@U) ($generated@@671 T@U) ) (!  (=> (and (and (= (type $generated@@670) $generated@@203) (= (type $generated@@671) $generated@@82)) ($generated@@237 $generated@@670 ($generated@@279 $generated@@671))) (and (= ($generated@@325 ($generated@@396 ($generated@@117 $generated@@203 $generated@@4) $generated@@670)) $generated@@670) ($generated@@97 ($generated@@396 ($generated@@117 $generated@@203 $generated@@4) $generated@@670) ($generated@@279 $generated@@671))))
 :pattern ( ($generated@@237 $generated@@670 ($generated@@279 $generated@@671)))
)))
(assert (forall (($generated@@672 T@U) ($generated@@673 T@U) ) (!  (=> (and (and (= (type $generated@@672) $generated@@203) (= (type $generated@@673) $generated@@82)) ($generated@@237 $generated@@672 ($generated@@218 $generated@@673))) (and (= ($generated@@325 ($generated@@396 ($generated@@117 $generated@@203 $generated@@2) $generated@@672)) $generated@@672) ($generated@@97 ($generated@@396 ($generated@@117 $generated@@203 $generated@@2) $generated@@672) ($generated@@218 $generated@@673))))
 :pattern ( ($generated@@237 $generated@@672 ($generated@@218 $generated@@673)))
)))
(assert (forall (($generated@@674 T@U) ($generated@@675 T@U) ) (!  (=> (and (and (= (type $generated@@674) $generated@@203) (= (type $generated@@675) $generated@@82)) ($generated@@237 $generated@@674 ($generated@@585 $generated@@675))) (and (= ($generated@@325 ($generated@@396 ($generated@@315 $generated@@203) $generated@@674)) $generated@@674) ($generated@@97 ($generated@@396 ($generated@@315 $generated@@203) $generated@@674) ($generated@@585 $generated@@675))))
 :pattern ( ($generated@@237 $generated@@674 ($generated@@585 $generated@@675)))
)))
(assert (forall (($generated@@676 T@U) ($generated@@677 T@U) ) (!  (=> (and (and (= (type $generated@@676) $generated@@82) (= (type $generated@@677) $generated@@203)) ($generated@@237 $generated@@677 ($generated@@224 $generated@@676))) (and (= ($generated@@325 ($generated@@396 $generated@@101 $generated@@677)) $generated@@677) ($generated@@97 ($generated@@396 $generated@@101 $generated@@677) ($generated@@224 $generated@@676))))
 :pattern ( ($generated@@237 $generated@@677 ($generated@@224 $generated@@676)))
)))
(assert (forall (($generated@@678 T@U) ($generated@@679 T@U) ($generated@@680 T@U) ($generated@@681 T@U) ) (! (let (($generated@@682 (type $generated@@681)))
 (=> (and (and (and (= (type $generated@@678) ($generated@@117 $generated@@100 $generated@@118)) (= (type $generated@@679) $generated@@100)) (= (type $generated@@680) ($generated@@84 $generated@@682))) ($generated@@183 ($generated@@122 $generated@@678 $generated@@679 ($generated@@124 ($generated@@121 $generated@@678 $generated@@679) $generated@@680 $generated@@681)))) ($generated@@172 $generated@@678 ($generated@@122 $generated@@678 $generated@@679 ($generated@@124 ($generated@@121 $generated@@678 $generated@@679) $generated@@680 $generated@@681)))))
 :pattern ( ($generated@@122 $generated@@678 $generated@@679 ($generated@@124 ($generated@@121 $generated@@678 $generated@@679) $generated@@680 $generated@@681)))
)))
(assert (= ($generated@@93 $generated@@102) $generated@@65))
(assert (= ($generated@@346 $generated@@102) $generated@@76))
(assert (= ($generated@@93 $generated@@230) $generated@@66))
(assert (= ($generated@@346 $generated@@230) $generated@@76))
(assert (= ($generated@@93 $generated@@99) $generated@@68))
(assert (= ($generated@@346 $generated@@99) $generated@@77))
(assert (= ($generated@@93 $generated@@179) $generated@@71))
(assert (= ($generated@@346 $generated@@179) $generated@@78))
(assert (= ($generated@@93 $generated@@233) $generated@@72))
(assert (= ($generated@@346 $generated@@233) $generated@@78))
(assert (forall (($generated@@683 T@U) ($generated@@684 T@U) ($generated@@685 T@U) ) (!  (=> (and (and (= (type $generated@@683) ($generated@@117 $generated@@203 $generated@@2)) (= (type $generated@@684) $generated@@82)) (= (type $generated@@685) ($generated@@117 $generated@@100 $generated@@118))) (= ($generated@@115 $generated@@683 ($generated@@218 $generated@@684) $generated@@685) (forall (($generated@@686 T@U) ) (!  (=> (and (= (type $generated@@686) $generated@@203) (< 0 ($generated ($generated@@121 $generated@@683 $generated@@686)))) ($generated@@293 $generated@@686 $generated@@684 $generated@@685))
 :pattern ( ($generated@@121 $generated@@683 $generated@@686))
))))
 :pattern ( ($generated@@115 $generated@@683 ($generated@@218 $generated@@684) $generated@@685))
)))
(assert (= $generated@@216 ($generated@@109 $generated@@216)))
(assert (forall (($generated@@687 T@U) ($generated@@688 T@U) ($generated@@689 T@U) ) (!  (=> (and (and (and (= (type $generated@@687) $generated@@101) (= (type $generated@@688) $generated@@82)) (= (type $generated@@689) ($generated@@117 $generated@@100 $generated@@118))) (and ($generated@@183 $generated@@689) (and ($generated@@193 $generated@@687) (exists (($generated@@690 T@U) ) (!  (and (= (type $generated@@690) $generated@@82) ($generated@@115 $generated@@687 ($generated@@194 $generated@@688 $generated@@690) $generated@@689))
 :pattern ( ($generated@@115 $generated@@687 ($generated@@194 $generated@@688 $generated@@690) $generated@@689))
))))) ($generated@@293 ($generated@@201 $generated@@687) $generated@@688 $generated@@689))
 :pattern ( ($generated@@293 ($generated@@201 $generated@@687) $generated@@688 $generated@@689))
)))
(assert (forall (($generated@@691 T@U) ($generated@@692 T@U) ($generated@@693 T@U) ) (!  (=> (and (and (and (= (type $generated@@691) $generated@@101) (= (type $generated@@692) $generated@@82)) (= (type $generated@@693) ($generated@@117 $generated@@100 $generated@@118))) (and ($generated@@183 $generated@@693) (and ($generated@@193 $generated@@691) (exists (($generated@@694 T@U) ) (!  (and (= (type $generated@@694) $generated@@82) ($generated@@115 $generated@@691 ($generated@@194 $generated@@694 $generated@@692) $generated@@693))
 :pattern ( ($generated@@115 $generated@@691 ($generated@@194 $generated@@694 $generated@@692) $generated@@693))
))))) ($generated@@293 ($generated@@202 $generated@@691) $generated@@692 $generated@@693))
 :pattern ( ($generated@@293 ($generated@@202 $generated@@691) $generated@@692 $generated@@693))
)))
(assert (forall (($generated@@695 T@U) ($generated@@696 T@U) ) (!  (=> (and (and (= (type $generated@@695) $generated@@101) (= (type $generated@@696) ($generated@@117 $generated@@100 $generated@@118))) (and ($generated@@183 $generated@@696) (and ($generated@@267 $generated@@695) ($generated@@115 $generated@@695 $generated@@99 $generated@@696)))) ($generated@@115 ($generated@@268 $generated@@695) $generated@@102 $generated@@696))
 :pattern ( ($generated@@115 ($generated@@268 $generated@@695) $generated@@102 $generated@@696))
)))
(assert (forall (($generated@@697 T@U) ($generated@@698 T@U) ) (!  (=> (and (and (= (type $generated@@697) $generated@@101) (= (type $generated@@698) ($generated@@117 $generated@@100 $generated@@118))) (and ($generated@@183 $generated@@698) (and ($generated@@267 $generated@@697) ($generated@@115 $generated@@697 $generated@@99 $generated@@698)))) ($generated@@115 ($generated@@269 $generated@@697) $generated@@99 $generated@@698))
 :pattern ( ($generated@@115 ($generated@@269 $generated@@697) $generated@@99 $generated@@698))
)))
(assert (forall (($generated@@699 T@U) ($generated@@700 T@U) ($generated@@701 T@U) ($generated@@702 T@U) ) (!  (=> (and (and (and (and (= (type $generated@@699) $generated@@82) (= (type $generated@@700) $generated@@203)) (= (type $generated@@701) $generated@@203)) (= (type $generated@@702) ($generated@@117 $generated@@100 $generated@@118))) ($generated@@183 $generated@@702)) (= ($generated@@115 ($generated@@250 $generated@@700 $generated@@701) ($generated@@224 $generated@@699) $generated@@702)  (and ($generated@@293 $generated@@700 $generated@@699 $generated@@702) ($generated@@293 $generated@@701 $generated@@699 $generated@@702))))
 :pattern ( ($generated@@115 ($generated@@250 $generated@@700 $generated@@701) ($generated@@224 $generated@@699) $generated@@702))
)))
(assert (forall (($generated@@703 T@U) ($generated@@704 T@U) ) (!  (=> (and (= (type $generated@@703) $generated@@203) (= (type $generated@@704) $generated@@203)) (= ($generated@@236 ($generated@@109 $generated@@703) ($generated@@109 $generated@@704)) ($generated@@109 ($generated@@236 $generated@@703 $generated@@704))))
 :pattern ( ($generated@@236 ($generated@@109 $generated@@703) ($generated@@109 $generated@@704)))
)))
(assert (forall (($generated@@705 T@U) ($generated@@706 T@U) ) (!  (=> (and (= (type $generated@@705) $generated@@100) (= (type $generated@@706) $generated@@101)) (= ($generated@@98 ($generated@@109 $generated@@705) ($generated@@109 $generated@@706)) ($generated@@109 ($generated@@98 $generated@@705 $generated@@706))))
 :pattern ( ($generated@@98 ($generated@@109 $generated@@705) ($generated@@109 $generated@@706)))
)))
(assert (forall (($generated@@707 T@U) ($generated@@708 T@U) ) (!  (=> (and (= (type $generated@@707) $generated@@203) (= (type $generated@@708) $generated@@203)) (= ($generated@@250 ($generated@@109 $generated@@707) ($generated@@109 $generated@@708)) ($generated@@109 ($generated@@250 $generated@@707 $generated@@708))))
 :pattern ( ($generated@@250 ($generated@@109 $generated@@707) ($generated@@109 $generated@@708)))
)))
(assert (forall (($generated@@709 Int) ) (! (= ($generated@@325 ($generated@@8 ($generated@@111 $generated@@709))) ($generated@@109 ($generated@@325 ($generated@@8 $generated@@709))))
 :pattern ( ($generated@@325 ($generated@@8 ($generated@@111 $generated@@709))))
)))
(assert (forall (($generated@@710 T@U) ) (! (= ($generated@@325 ($generated@@109 $generated@@710)) ($generated@@109 ($generated@@325 $generated@@710)))
 :pattern ( ($generated@@325 ($generated@@109 $generated@@710)))
)))
(assert  (=> (<= 1 $generated@@107) (forall (($generated@@711 T@U) ) (!  (=> (and (= (type $generated@@711) $generated@@101) (or ($generated@@110 $generated@@711) (and (not (= 1 $generated@@107)) ($generated@@97 $generated@@711 $generated@@99)))) (= ($generated@@108 $generated@@711) ($generated@@111 12)))
 :pattern ( ($generated@@108 $generated@@711))
))))
(assert (forall (($generated@@712 T@U) ) (! (let (($generated@@713 ($generated@@316 (type $generated@@712))))
 (=> (and (= (type $generated@@712) ($generated@@315 $generated@@713)) (= ($generated@@314 $generated@@712) 0)) (= $generated@@712 ($generated@@313 $generated@@713))))
 :pattern ( ($generated@@314 $generated@@712))
)))
(assert (forall (($generated@@714 T@U) ($generated@@715 T@U) ($generated@@716 T@U) ) (! (let (($generated@@717 (type $generated@@715)))
 (=> (and (and (= (type $generated@@714) ($generated@@117 $generated@@717 $generated@@2)) (= (type $generated@@716) $generated@@2)) (<= 0 ($generated $generated@@716))) (= ($generated@@340 ($generated@@122 $generated@@714 $generated@@715 $generated@@716)) (+ (- ($generated@@340 $generated@@714) ($generated ($generated@@121 $generated@@714 $generated@@715))) ($generated $generated@@716)))))
 :pattern ( ($generated@@340 ($generated@@122 $generated@@714 $generated@@715 $generated@@716)))
)))
(assert  (and (and (and (and (and (and (and (forall (($generated@@724 T@T) ($generated@@725 T@T) ) (= ($generated@@1 ($generated@@720 $generated@@724 $generated@@725)) 22)) (forall (($generated@@726 T@T) ($generated@@727 T@T) ) (! (= ($generated@@721 ($generated@@720 $generated@@726 $generated@@727)) $generated@@726)
 :pattern ( ($generated@@720 $generated@@726 $generated@@727))
))) (forall (($generated@@728 T@T) ($generated@@729 T@T) ) (! (= ($generated@@722 ($generated@@720 $generated@@728 $generated@@729)) $generated@@729)
 :pattern ( ($generated@@720 $generated@@728 $generated@@729))
))) (forall (($generated@@730 T@U) ($generated@@731 T@U) ($generated@@732 T@U) ) (! (let (($generated@@733 ($generated@@722 (type $generated@@730))))
(= (type ($generated@@718 $generated@@730 $generated@@731 $generated@@732)) $generated@@733))
 :pattern ( ($generated@@718 $generated@@730 $generated@@731 $generated@@732))
))) (forall (($generated@@734 T@U) ($generated@@735 T@U) ($generated@@736 T@U) ($generated@@737 T@U) ) (! (let (($generated@@738 (type $generated@@737)))
(let (($generated@@739 (type $generated@@735)))
(= (type ($generated@@723 $generated@@734 $generated@@735 $generated@@736 $generated@@737)) ($generated@@720 $generated@@739 $generated@@738))))
 :pattern ( ($generated@@723 $generated@@734 $generated@@735 $generated@@736 $generated@@737))
))) (forall (($generated@@740 T@U) ($generated@@741 T@U) ($generated@@742 T@U) ($generated@@743 T@U) ) (! (let (($generated@@744 ($generated@@722 (type $generated@@740))))
 (=> (= (type $generated@@743) $generated@@744) (= ($generated@@718 ($generated@@723 $generated@@740 $generated@@741 $generated@@742 $generated@@743) $generated@@741 $generated@@742) $generated@@743)))
 :weight 0
))) (and (and (forall (($generated@@745 T@U) ($generated@@746 T@U) ($generated@@747 T@U) ($generated@@748 T@U) ($generated@@749 T@U) ($generated@@750 T@U) ) (!  (or (= $generated@@747 $generated@@749) (= ($generated@@718 ($generated@@723 $generated@@746 $generated@@747 $generated@@748 $generated@@745) $generated@@749 $generated@@750) ($generated@@718 $generated@@746 $generated@@749 $generated@@750)))
 :weight 0
)) (forall (($generated@@751 T@U) ($generated@@752 T@U) ($generated@@753 T@U) ($generated@@754 T@U) ($generated@@755 T@U) ($generated@@756 T@U) ) (!  (or (= $generated@@754 $generated@@756) (= ($generated@@718 ($generated@@723 $generated@@752 $generated@@753 $generated@@754 $generated@@751) $generated@@755 $generated@@756) ($generated@@718 $generated@@752 $generated@@755 $generated@@756)))
 :weight 0
))) (forall (($generated@@757 T@U) ($generated@@758 T@U) ($generated@@759 T@U) ($generated@@760 T@U) ($generated@@761 T@U) ($generated@@762 T@U) ) (!  (or true (= ($generated@@718 ($generated@@723 $generated@@758 $generated@@759 $generated@@760 $generated@@757) $generated@@761 $generated@@762) ($generated@@718 $generated@@758 $generated@@761 $generated@@762)))
 :weight 0
)))) (forall (($generated@@763 T@U) ($generated@@764 T@U) ($generated@@765 T@U) ($generated@@766 T@U) ) (! (= (type ($generated@@719 $generated@@763 $generated@@764 $generated@@765 $generated@@766)) ($generated@@720 $generated@@100 $generated@@4))
 :pattern ( ($generated@@719 $generated@@763 $generated@@764 $generated@@765 $generated@@766))
))))
(assert (forall (($generated@@767 T@U) ($generated@@768 T@U) ($generated@@769 T@U) ($generated@@770 T@U) ($generated@@771 T@U) ($generated@@772 T@U) ) (! (let (($generated@@773 ($generated@@85 (type $generated@@772))))
 (=> (and (and (and (and (and (= (type $generated@@767) $generated@@100) (= (type $generated@@768) ($generated@@117 $generated@@100 $generated@@118))) (= (type $generated@@769) ($generated@@84 $generated@@4))) (= (type $generated@@770) ($generated@@117 $generated@@203 $generated@@4))) (= (type $generated@@771) $generated@@100)) (= (type $generated@@772) ($generated@@84 $generated@@773))) (= ($generated@@0 ($generated@@718 ($generated@@719 $generated@@767 $generated@@768 $generated@@769 $generated@@770) $generated@@771 $generated@@772))  (=> (and (not (= $generated@@771 $generated@@767)) ($generated@@0 ($generated@@123 ($generated@@121 $generated@@768 $generated@@771) $generated@@769))) ($generated@@0 ($generated@@121 $generated@@770 ($generated@@325 $generated@@771)))))))
 :pattern ( ($generated@@718 ($generated@@719 $generated@@767 $generated@@768 $generated@@769 $generated@@770) $generated@@771 $generated@@772))
)))
(assert (forall (($generated@@774 T@U) ($generated@@775 T@U) ) (!  (=> (and (= (type $generated@@774) ($generated@@117 $generated@@100 $generated@@118)) (= (type $generated@@775) $generated@@2)) ($generated@@115 $generated@@775 $generated@@46 $generated@@774))
 :pattern ( ($generated@@115 $generated@@775 $generated@@46 $generated@@774))
)))
(assert (forall (($generated@@776 T@U) ($generated@@777 T@U) ) (!  (=> (and (= (type $generated@@776) ($generated@@117 $generated@@100 $generated@@118)) (= (type $generated@@777) $generated@@3)) ($generated@@115 $generated@@777 $generated@@47 $generated@@776))
 :pattern ( ($generated@@115 $generated@@777 $generated@@47 $generated@@776))
)))
(assert (forall (($generated@@778 T@U) ($generated@@779 T@U) ) (!  (=> (and (= (type $generated@@778) ($generated@@117 $generated@@100 $generated@@118)) (= (type $generated@@779) $generated@@4)) ($generated@@115 $generated@@779 $generated@@44 $generated@@778))
 :pattern ( ($generated@@115 $generated@@779 $generated@@44 $generated@@778))
)))
(assert (forall (($generated@@780 T@U) ($generated@@781 T@U) ) (!  (=> (and (= (type $generated@@780) ($generated@@117 $generated@@100 $generated@@118)) (= (type $generated@@781) $generated@@529)) ($generated@@115 $generated@@781 $generated@@45 $generated@@780))
 :pattern ( ($generated@@115 $generated@@781 $generated@@45 $generated@@780))
)))
(assert (forall (($generated@@782 T@U) ($generated@@783 T@U) ) (!  (=> (and (= (type $generated@@782) ($generated@@117 $generated@@100 $generated@@118)) (= (type $generated@@783) $generated@@203)) ($generated@@115 $generated@@783 $generated@@48 $generated@@782))
 :pattern ( ($generated@@115 $generated@@783 $generated@@48 $generated@@782))
)))
(assert (forall (($generated@@784 T@U) ($generated@@785 T@U) ) (!  (=> (and (= (type $generated@@784) ($generated@@315 $generated@@203)) (= (type $generated@@785) $generated@@82)) (= ($generated@@97 $generated@@784 ($generated@@585 $generated@@785)) (forall (($generated@@786 Int) ) (!  (=> (and (<= 0 $generated@@786) (< $generated@@786 ($generated@@314 $generated@@784))) ($generated@@237 ($generated@@586 $generated@@784 $generated@@786) $generated@@785))
 :pattern ( ($generated@@586 $generated@@784 $generated@@786))
))))
 :pattern ( ($generated@@97 $generated@@784 ($generated@@585 $generated@@785)))
)))
(assert (forall (($generated@@788 T@U) ($generated@@789 Int) ) (!  (=> (= (type $generated@@788) ($generated@@315 $generated@@203)) (=> (and (<= 0 $generated@@789) (< $generated@@789 ($generated@@314 $generated@@788))) (< ($generated@@627 ($generated@@396 $generated@@101 ($generated@@586 $generated@@788 $generated@@789))) ($generated@@787 $generated@@788))))
 :pattern ( ($generated@@627 ($generated@@396 $generated@@101 ($generated@@586 $generated@@788 $generated@@789))))
)))
(assert (forall (($generated@@790 T@U) ($generated@@791 T@U) ($generated@@792 T@U) ) (!  (=> (and (and (and (= (type $generated@@790) ($generated@@351 $generated@@203 $generated@@203)) (= (type $generated@@791) $generated@@82)) (= (type $generated@@792) $generated@@82)) ($generated@@97 $generated@@790 ($generated@@471 $generated@@791 $generated@@792))) (and (and ($generated@@97 ($generated@@349 $generated@@790) ($generated@@274 $generated@@791)) ($generated@@97 ($generated@@410 $generated@@790) ($generated@@274 $generated@@792))) ($generated@@97 ($generated@@445 $generated@@790) ($generated@@274 ($generated@@194 $generated@@791 $generated@@792)))))
 :pattern ( ($generated@@97 $generated@@790 ($generated@@471 $generated@@791 $generated@@792)))
)))
(assert (forall (($generated@@793 T@U) ($generated@@794 T@U) ($generated@@795 T@U) ) (!  (=> (and (and (and (= (type $generated@@793) ($generated@@369 $generated@@203 $generated@@203)) (= (type $generated@@794) $generated@@82)) (= (type $generated@@795) $generated@@82)) ($generated@@97 $generated@@793 ($generated@@479 $generated@@794 $generated@@795))) (and (and ($generated@@97 ($generated@@367 $generated@@793) ($generated@@279 $generated@@794)) ($generated@@97 ($generated@@421 $generated@@793) ($generated@@279 $generated@@795))) ($generated@@97 ($generated@@453 $generated@@793) ($generated@@279 ($generated@@194 $generated@@794 $generated@@795)))))
 :pattern ( ($generated@@97 $generated@@793 ($generated@@479 $generated@@794 $generated@@795)))
)))
(assert (forall (($generated@@796 T@U) ) (!  (=> (= (type $generated@@796) $generated@@2) ($generated@@97 $generated@@796 $generated@@46))
 :pattern ( ($generated@@97 $generated@@796 $generated@@46))
)))
(assert (forall (($generated@@797 T@U) ) (!  (=> (= (type $generated@@797) $generated@@3) ($generated@@97 $generated@@797 $generated@@47))
 :pattern ( ($generated@@97 $generated@@797 $generated@@47))
)))
(assert (forall (($generated@@798 T@U) ) (!  (=> (= (type $generated@@798) $generated@@4) ($generated@@97 $generated@@798 $generated@@44))
 :pattern ( ($generated@@97 $generated@@798 $generated@@44))
)))
(assert (forall (($generated@@799 T@U) ) (!  (=> (= (type $generated@@799) $generated@@529) ($generated@@97 $generated@@799 $generated@@45))
 :pattern ( ($generated@@97 $generated@@799 $generated@@45))
)))
(assert (forall (($generated@@800 T@U) ) (!  (=> (= (type $generated@@800) $generated@@203) ($generated@@97 $generated@@800 $generated@@48))
 :pattern ( ($generated@@97 $generated@@800 $generated@@48))
)))
(push 1)
(declare-fun ControlFlow (Int Int) Int)
(declare-fun $generated@@801 () T@U)
(declare-fun $generated@@802 () T@U)
(declare-fun $generated@@803 () T@U)
(declare-fun $generated@@804 () Int)
(declare-fun $generated@@805 () T@U)
(declare-fun $generated@@806 () T@U)
(declare-fun $generated@@807 () T@U)
(declare-fun $generated@@808 () T@U)
(declare-fun $generated@@809 () T@U)
(declare-fun $generated@@810 () T@U)
(declare-fun $generated@@811 () T@U)
(declare-fun $generated@@812 () T@U)
(declare-fun $generated@@813 () T@U)
(declare-fun $generated@@814 () T@U)
(declare-fun $generated@@815 () T@U)
(declare-fun $generated@@816 () T@U)
(declare-fun $generated@@817 () T@U)
(declare-fun $generated@@818 () T@U)
(declare-fun $generated@@819 () T@U)
(declare-fun $generated@@820 () T@U)
(declare-fun $generated@@821 () Int)
(declare-fun $generated@@822 () T@U)
(declare-fun $generated@@823 () T@U)
(declare-fun $generated@@824 () T@U)
(declare-fun $generated@@825 () T@U)
(declare-fun $generated@@826 () T@U)
(declare-fun $generated@@827 () T@U)
(declare-fun $generated@@828 () Bool)
(declare-fun $generated@@829 () T@U)
(declare-fun $generated@@830 () Bool)
(declare-fun $generated@@831 () T@U)
(declare-fun $generated@@832 () T@U)
(assert  (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (= (type $generated@@811) $generated@@100) (= (type $generated@@802) ($generated@@117 $generated@@100 $generated@@118))) (= (type $generated@@803) ($generated@@117 $generated@@203 $generated@@4))) (= (type $generated@@812) ($generated@@720 $generated@@100 $generated@@4))) (= (type $generated@@813) $generated@@100)) (= (type $generated@@805) $generated@@101)) (= (type $generated@@806) ($generated@@117 $generated@@100 $generated@@118))) (= (type $generated@@807) $generated@@101)) (= (type $generated@@808) $generated@@101)) (= (type $generated@@809) $generated@@100)) (= (type $generated@@810) $generated@@100)) (= (type $generated@@801) $generated@@100)) (= (type $generated@@814) $generated@@100)) (= (type $generated@@815) $generated@@100)) (= (type $generated@@816) ($generated@@117 $generated@@100 $generated@@118))) (= (type $generated@@817) ($generated@@117 $generated@@100 $generated@@118))) (= (type $generated@@818) $generated@@100)) (= (type $generated@@819) $generated@@100)) (= (type $generated@@822) $generated@@101)) (= (type $generated@@820) $generated@@100)) (= (type $generated@@823) $generated@@100)) (= (type $generated@@824) $generated@@101)) (= (type $generated@@825) $generated@@101)) (= (type $generated@@826) $generated@@101)) (= (type $generated@@827) $generated@@100)) (= (type $generated@@829) $generated@@100)) (= (type $generated@@831) $generated@@100)) (= (type $generated@@832) $generated@@100)))
(set-option :timeout 0)
(set-option :rlimit 0)
(assert (not
 (=> (= (ControlFlow 0 0) 56) (let (($generated@@833  (and (=> (= (ControlFlow 0 32) (- 0 34)) (not (= $generated@@801 $generated@@176))) (=> ($generated@@115 $generated@@801 $generated@@102 $generated@@802) (=> (and ($generated@@258 $generated@@801) ($generated@@258 $generated@@801)) (and (=> (= (ControlFlow 0 32) (- 0 33)) (= ($generated@@257 $generated@@801) ($generated@@111 5))) (=> (= ($generated@@257 $generated@@801) ($generated@@111 5)) (=> (= (ControlFlow 0 32) (- 0 31)) ($generated@@0 ($generated@@109 ($generated@@11 true)))))))))))
(let (($generated@@834 true))
(let (($generated@@835  (=> (and ($generated@@97 $generated@@801 $generated@@230) ($generated@@0 ($generated@@121 $generated@@803 ($generated@@325 $generated@@801)))) (and (=> (= (ControlFlow 0 35) 30) $generated@@834) (=> (= (ControlFlow 0 35) 32) $generated@@833)))))
(let (($generated@@836  (=> (= (ControlFlow 0 7) (- 0 6)) (= $generated@@804 ($generated@@111 7)))))
(let (($generated@@837  (=> (forall (($generated@@838 T@U) ) (!  (=> (and (and (= (type $generated@@838) $generated@@100) ($generated@@97 $generated@@838 $generated@@102)) (not (= $generated@@838 $generated@@176))) ($generated@@258 $generated@@838))
 :pattern ( ($generated@@257 $generated@@838))
)) (and (=> (= (ControlFlow 0 8) (- 0 12)) (forall (($generated@@839 T@U) ) (!  (=> (and (and (= (type $generated@@839) $generated@@100) ($generated@@97 $generated@@839 $generated@@102)) (not (= $generated@@839 $generated@@176))) (ite (= ($generated@@257 $generated@@839) ($generated@@111 5)) true (= ($generated@@111 ($generated@@487 10 ($generated@@111 0))) ($generated@@111 3))))
 :pattern ( ($generated@@257 $generated@@839))
))) (=> (forall (($generated@@840 T@U) ) (!  (=> (and (and (= (type $generated@@840) $generated@@100) ($generated@@97 $generated@@840 $generated@@102)) (not (= $generated@@840 $generated@@176))) (ite (= ($generated@@257 $generated@@840) ($generated@@111 5)) true (= ($generated@@111 ($generated@@487 10 ($generated@@111 0))) ($generated@@111 3))))
 :pattern ( ($generated@@257 $generated@@840))
)) (=> (and (and (= $generated@@805 ($generated@@109 $generated@@216)) ($generated@@115 $generated@@805 $generated@@99 $generated@@806)) (and ($generated@@110 ($generated@@109 $generated@@216)) ($generated@@110 ($generated@@109 $generated@@216)))) (and (=> (= (ControlFlow 0 8) (- 0 11)) (= ($generated@@111 ($generated@@108 ($generated@@109 $generated@@216))) ($generated@@111 12))) (=> (= ($generated@@111 ($generated@@108 ($generated@@109 $generated@@216))) ($generated@@111 12)) (=> (and (and (= $generated@@807 ($generated@@98 $generated@@176 ($generated@@109 $generated@@216))) ($generated@@115 $generated@@807 $generated@@99 $generated@@806)) (and ($generated@@110 ($generated@@98 $generated@@176 ($generated@@109 $generated@@216))) ($generated@@110 ($generated@@98 $generated@@176 ($generated@@109 $generated@@216))))) (and (=> (= (ControlFlow 0 8) (- 0 10)) (= ($generated@@108 ($generated@@98 $generated@@176 ($generated@@109 $generated@@216))) ($generated@@111 12))) (=> (= ($generated@@108 ($generated@@98 $generated@@176 ($generated@@109 $generated@@216))) ($generated@@111 12)) (=> (and (and (= $generated@@808 ($generated@@109 ($generated@@250 ($generated@@325 ($generated@@109 ($generated@@11 false))) ($generated@@325 ($generated@@109 ($generated@@11 true)))))) ($generated@@115 $generated@@808 ($generated@@224 $generated@@44) $generated@@806)) (and ($generated@@287 $generated@@44 ($generated@@109 ($generated@@250 ($generated@@325 ($generated@@109 ($generated@@11 false))) ($generated@@325 ($generated@@109 ($generated@@11 true)))))) ($generated@@287 $generated@@44 ($generated@@109 ($generated@@250 ($generated@@325 ($generated@@109 ($generated@@11 false))) ($generated@@325 ($generated@@109 ($generated@@11 true)))))))) (and (=> (= (ControlFlow 0 8) (- 0 9)) (= ($generated@@111 ($generated@@286 $generated@@44 ($generated@@109 ($generated@@250 ($generated@@325 ($generated@@109 ($generated@@11 false))) ($generated@@325 ($generated@@109 ($generated@@11 true))))))) ($generated@@111 17))) (=> (= ($generated@@111 ($generated@@286 $generated@@44 ($generated@@109 ($generated@@250 ($generated@@325 ($generated@@109 ($generated@@11 false))) ($generated@@325 ($generated@@109 ($generated@@11 true))))))) ($generated@@111 17)) (=> (= (ControlFlow 0 8) 7) $generated@@836)))))))))))))))
(let (($generated@@841  (=> (not (= ($generated@@257 $generated@@809) ($generated@@111 5))) (and (=> (= (ControlFlow 0 16) (- 0 17)) (not (= ($generated@@111 0) 0))) (=> (= (ControlFlow 0 16) 8) $generated@@837)))))
(let (($generated@@842  (=> (and (= ($generated@@257 $generated@@809) ($generated@@111 5)) (= (ControlFlow 0 15) 8)) $generated@@837)))
(let (($generated@@843  (=> (not (= $generated@@809 $generated@@176)) (and (=> (= (ControlFlow 0 18) (- 0 19)) (not (= $generated@@809 $generated@@176))) (=> (and ($generated@@115 $generated@@809 $generated@@102 $generated@@806) ($generated@@258 $generated@@809)) (and (=> (= (ControlFlow 0 18) 15) $generated@@842) (=> (= (ControlFlow 0 18) 16) $generated@@841)))))))
(let (($generated@@844  (=> (and (= $generated@@809 $generated@@176) (= (ControlFlow 0 14) 8)) $generated@@837)))
(let (($generated@@845  (=> (and ($generated@@97 $generated@@809 $generated@@102) ($generated@@115 $generated@@809 $generated@@102 $generated@@806)) (and (=> (= (ControlFlow 0 20) 18) $generated@@843) (=> (= (ControlFlow 0 20) 14) $generated@@844)))))
(let (($generated@@846  (=> (and (not (and ($generated@@97 $generated@@809 $generated@@102) ($generated@@115 $generated@@809 $generated@@102 $generated@@806))) (= (ControlFlow 0 13) 8)) $generated@@837)))
(let (($generated@@847  (=> (forall (($generated@@848 T@U) ) (!  (=> (and (and (= (type $generated@@848) $generated@@100) ($generated@@97 $generated@@848 $generated@@102)) (not (= $generated@@848 $generated@@176))) ($generated@@258 $generated@@848))
 :pattern ( ($generated@@257 $generated@@848))
)) (and (=> (= (ControlFlow 0 21) (- 0 22)) (forall (($generated@@849 T@U) ) (!  (=> (and (= (type $generated@@849) $generated@@100) ($generated@@97 $generated@@849 $generated@@102)) (or (= $generated@@849 $generated@@176) (= ($generated@@257 $generated@@849) ($generated@@111 5))))
 :pattern ( ($generated@@257 $generated@@849))
))) (=> (forall (($generated@@850 T@U) ) (!  (=> (and (= (type $generated@@850) $generated@@100) ($generated@@97 $generated@@850 $generated@@102)) (or (= $generated@@850 $generated@@176) (= ($generated@@257 $generated@@850) ($generated@@111 5))))
 :pattern ( ($generated@@257 $generated@@850))
)) (and (=> (= (ControlFlow 0 21) 20) $generated@@845) (=> (= (ControlFlow 0 21) 13) $generated@@846)))))))
(let (($generated@@851  (=> (and (= $generated@@810 $generated@@176) (= (ControlFlow 0 26) 21)) $generated@@847)))
(let (($generated@@852  (=> (not (= $generated@@810 $generated@@176)) (and (=> (= (ControlFlow 0 24) (- 0 25)) (not (= $generated@@810 $generated@@176))) (=> ($generated@@115 $generated@@810 $generated@@102 $generated@@806) (=> (and ($generated@@258 $generated@@810) (= (ControlFlow 0 24) 21)) $generated@@847))))))
(let (($generated@@853  (=> (and ($generated@@97 $generated@@810 $generated@@102) ($generated@@115 $generated@@810 $generated@@102 $generated@@806)) (and (=> (= (ControlFlow 0 27) 24) $generated@@852) (=> (= (ControlFlow 0 27) 26) $generated@@851)))))
(let (($generated@@854  (=> (and (not (and ($generated@@97 $generated@@810 $generated@@102) ($generated@@115 $generated@@810 $generated@@102 $generated@@806))) (= (ControlFlow 0 23) 21)) $generated@@847)))
(let (($generated@@855  (=> (and (and (and ($generated@@183 $generated@@806) ($generated@@659 $generated@@806)) ($generated@@172 $generated@@802 $generated@@806)) (and (forall (($generated@@856 T@U) ($generated@@857 T@U) ) (! (let (($generated@@858 ($generated@@85 (type $generated@@857))))
 (=> (and (= (type $generated@@856) $generated@@100) (= (type $generated@@857) ($generated@@84 $generated@@858))) (or (= ($generated@@123 ($generated@@121 $generated@@806 $generated@@856) $generated@@857) ($generated@@123 ($generated@@121 $generated@@802 $generated@@856) $generated@@857)) (exists (($generated@@859 T@U) ) (!  (and (= (type $generated@@859) $generated@@100) (and (and (and ($generated@@97 $generated@@859 $generated@@230) ($generated@@0 ($generated@@121 $generated@@803 ($generated@@325 $generated@@859)))) (= $generated@@856 $generated@@859)) (= $generated@@857 $generated@@182)))
 :no-pattern (type $generated@@859)
 :no-pattern ($generated $generated@@859)
 :no-pattern ($generated@@0 $generated@@859)
)))))
 :pattern ( ($generated@@123 ($generated@@121 $generated@@806 $generated@@856) $generated@@857))
)) (forall (($generated@@860 T@U) ) (!  (=> (= (type $generated@@860) $generated@@100) (=> (and ($generated@@97 $generated@@860 $generated@@230) (and (not (= $generated@@860 $generated@@176)) ($generated@@0 ($generated@@121 $generated@@803 ($generated@@325 $generated@@860))))) (= ($generated ($generated@@123 ($generated@@121 $generated@@806 $generated@@860) $generated@@182)) ($generated@@111 0))))
 :pattern ( ($generated@@123 ($generated@@121 $generated@@806 $generated@@860) $generated@@182))
)))) (and (=> (= (ControlFlow 0 28) 27) $generated@@853) (=> (= (ControlFlow 0 28) 23) $generated@@854)))))
(let (($generated@@861  (=> (and (and ($generated@@97 $generated@@811 $generated@@230) ($generated@@115 $generated@@811 $generated@@230 $generated@@802)) ($generated@@0 ($generated@@121 $generated@@803 ($generated@@325 $generated@@811)))) (and (=> (= (ControlFlow 0 3) (- 0 5)) (not (= $generated@@811 $generated@@176))) (and (=> (= (ControlFlow 0 3) (- 0 4)) ($generated@@0 ($generated@@718 $generated@@812 $generated@@811 $generated@@182))) (=> ($generated@@0 ($generated@@718 $generated@@812 $generated@@811 $generated@@182)) (=> (and (and (and ($generated@@97 $generated@@813 $generated@@230) ($generated@@115 $generated@@813 $generated@@230 $generated@@802)) ($generated@@0 ($generated@@121 $generated@@803 ($generated@@325 $generated@@813)))) (and (not (= $generated@@811 $generated@@813)) (= (ControlFlow 0 3) (- 0 2)))) (or (or (not (= $generated@@811 $generated@@813)) (not (= $generated@@182 $generated@@182))) (= ($generated@@111 0) ($generated@@111 0))))))))))
(let (($generated@@862  (=> (forall (($generated@@863 T@U) ) (!  (=> (= (type $generated@@863) $generated@@100) (=> (and ($generated@@97 $generated@@863 $generated@@230) ($generated@@0 ($generated@@121 $generated@@803 ($generated@@325 $generated@@863)))) ($generated@@0 ($generated@@109 ($generated@@11 true)))))
 :pattern ( ($generated@@121 $generated@@803 ($generated@@325 $generated@@863)))
)) (and (=> (= (ControlFlow 0 29) 3) $generated@@861) (=> (= (ControlFlow 0 29) 28) $generated@@855)))))
(let (($generated@@864  (=> (=> (not (= $generated@@814 $generated@@176)) ($generated@@258 $generated@@814)) (and (=> (= (ControlFlow 0 36) (- 0 37)) (=> (not (= $generated@@814 $generated@@176)) (= ($generated@@257 $generated@@814) ($generated@@111 5)))) (=> (=> (not (= $generated@@814 $generated@@176)) (= ($generated@@257 $generated@@814) ($generated@@111 5))) (and (=> (= (ControlFlow 0 36) 35) $generated@@835) (=> (= (ControlFlow 0 36) 29) $generated@@862)))))))
(let (($generated@@865  (=> (and (= $generated@@814 $generated@@176) (= (ControlFlow 0 40) 36)) $generated@@864)))
(let (($generated@@866  (=> (not (= $generated@@814 $generated@@176)) (and (=> (= (ControlFlow 0 38) (- 0 39)) (not (= $generated@@814 $generated@@176))) (=> ($generated@@115 $generated@@814 $generated@@102 $generated@@802) (=> (and ($generated@@258 $generated@@814) (= (ControlFlow 0 38) 36)) $generated@@864))))))
(let (($generated@@867  (=> (and (and (and ($generated@@97 $generated@@815 $generated@@230) ($generated@@115 $generated@@815 $generated@@230 $generated@@816)) (and ($generated@@183 $generated@@817) ($generated@@659 $generated@@817))) (and (and ($generated@@97 $generated@@818 $generated@@230) ($generated@@115 $generated@@818 $generated@@230 $generated@@817)) (and (forall (($generated@@868 T@U) ) (!  (=> (= (type $generated@@868) $generated@@100) (=> (and (not (= $generated@@868 $generated@@176)) ($generated@@0 ($generated@@123 ($generated@@121 $generated@@816 $generated@@868) $generated@@60))) (= ($generated@@121 $generated@@817 $generated@@868) ($generated@@121 $generated@@816 $generated@@868))))
 :pattern ( ($generated@@121 $generated@@817 $generated@@868))
)) ($generated@@172 $generated@@816 $generated@@817)))) (and (=> (= (ControlFlow 0 41) (- 0 46)) true) (and (=> (= (ControlFlow 0 41) (- 0 45)) (not (= $generated@@818 $generated@@176))) (=> ($generated@@115 $generated@@818 $generated@@102 $generated@@817) (=> (and ($generated@@258 $generated@@818) ($generated@@258 $generated@@818)) (and (=> (= (ControlFlow 0 41) (- 0 44)) (= ($generated@@257 $generated@@818) ($generated@@111 5))) (=> (= ($generated@@257 $generated@@818) ($generated@@111 5)) (=> (and (not (= $generated@@819 $generated@@176)) (= ($generated@@184 $generated@@819) $generated@@179)) (=> (and (and (not ($generated@@0 ($generated@@123 ($generated@@121 $generated@@817 $generated@@819) $generated@@60))) (= $generated@@802 ($generated@@122 $generated@@817 $generated@@819 ($generated@@124 ($generated@@121 $generated@@817 $generated@@819) $generated@@60 ($generated@@11 true))))) (and ($generated@@183 $generated@@802) ($generated@@659 $generated@@802))) (and (=> (= (ControlFlow 0 41) (- 0 43)) true) (and (=> (= (ControlFlow 0 41) (- 0 42)) (not (= $generated@@819 $generated@@176))) (=> (not (= $generated@@819 $generated@@176)) (=> (and (and ($generated@@115 $generated@@819 $generated@@179 $generated@@802) ($generated@@491 $generated@@802 $generated@@819)) (and ($generated@@491 $generated@@802 $generated@@819) (= $generated@@814 ($generated@@490 $generated@@802 $generated@@819)))) (and (=> (= (ControlFlow 0 41) 38) $generated@@866) (=> (= (ControlFlow 0 41) 40) $generated@@865)))))))))))))))))
(let (($generated@@869  (=> (= $generated@@820 $generated@@176) (and (=> (= (ControlFlow 0 51) (- 0 52)) ($generated@@0 ($generated@@109 ($generated@@11 false)))) (=> ($generated@@0 ($generated@@109 ($generated@@11 false))) (=> (= (ControlFlow 0 51) 41) $generated@@867))))))
(let (($generated@@870  (=> (not (= $generated@@820 $generated@@176)) (and (=> (= (ControlFlow 0 48) (- 0 50)) (not (= $generated@@820 $generated@@176))) (=> (not (= $generated@@820 $generated@@176)) (=> (and (and ($generated@@115 $generated@@820 $generated@@102 $generated@@816) ($generated@@258 $generated@@820)) (and ($generated@@258 $generated@@820) (= $generated@@821 ($generated@@257 $generated@@820)))) (and (=> (= (ControlFlow 0 48) (- 0 49)) (= $generated@@821 ($generated@@111 5))) (=> (= $generated@@821 ($generated@@111 5)) (=> (= (ControlFlow 0 48) 41) $generated@@867)))))))))
(let (($generated@@871  (=> (= $generated@@822 ($generated@@98 $generated@@823 $generated@@824)) (=> (and (and ($generated@@97 $generated@@823 $generated@@102) ($generated@@115 $generated@@823 $generated@@102 $generated@@816)) (and ($generated@@97 $generated@@824 $generated@@99) ($generated@@115 $generated@@824 $generated@@99 $generated@@816))) (=> (and (and (and (and ($generated@@97 $generated@@825 $generated@@99) ($generated@@115 $generated@@825 $generated@@99 $generated@@816)) (= $generated@@826 $generated@@824)) (and ($generated@@97 $generated@@826 $generated@@99) (= $generated@@825 $generated@@826))) (and (and (and ($generated@@97 $generated@@820 $generated@@102) ($generated@@115 $generated@@820 $generated@@102 $generated@@816)) (= $generated@@827 $generated@@823)) (and ($generated@@97 $generated@@827 $generated@@102) (= $generated@@820 $generated@@827)))) (and (=> (= (ControlFlow 0 53) 48) $generated@@870) (=> (= (ControlFlow 0 53) 51) $generated@@869)))))))
(let (($generated@@872  (=> (and (= $generated@@822 $generated@@216) (= (ControlFlow 0 47) 41)) $generated@@867)))
(let (($generated@@873 true))
(let (($generated@@874  (=> (not (= $generated@@822 $generated@@216)) (and (=> (= (ControlFlow 0 54) 53) $generated@@871) (=> (= (ControlFlow 0 54) 1) $generated@@873)))))
(let (($generated@@875  (=> (= $generated@@812 ($generated@@719 $generated@@176 $generated@@816 $generated@@60 $generated@@803)) (and (=> (= (ControlFlow 0 55) 47) $generated@@872) (=> (= (ControlFlow 0 55) 54) $generated@@874)))))
(let (($generated@@876  (=> (and ($generated@@183 $generated@@816) ($generated@@659 $generated@@816)) (=> (and (and (and (and (and ($generated@@97 $generated@@822 $generated@@99) ($generated@@115 $generated@@822 $generated@@99 $generated@@816)) ($generated@@433 $generated@@822)) (and ($generated@@97 $generated@@803 ($generated@@274 $generated@@230)) ($generated@@115 $generated@@803 ($generated@@274 $generated@@230) $generated@@816))) (and (and (=> $generated@@828 (and ($generated@@97 $generated@@829 $generated@@230) ($generated@@115 $generated@@829 $generated@@230 $generated@@816))) true) (and (=> $generated@@830 (and ($generated@@97 $generated@@831 $generated@@233) ($generated@@115 $generated@@831 $generated@@233 $generated@@816))) true))) (and (and (and ($generated@@97 $generated@@832 $generated@@102) ($generated@@115 $generated@@832 $generated@@102 $generated@@816)) true) (and (= 2 $generated@@107) (= (ControlFlow 0 56) 55)))) $generated@@875))))
$generated@@876))))))))))))))))))))))))))))))))
))
(check-sat)
(get-info :reason-unknown)
(assert (not (= (ControlFlow 0 7) (- 6))))
(check-sat)
(get-info :reason-unknown)
(assert (not (= (ControlFlow 0 51) (- 52))))
(check-sat)
(pop 1)
; Invalid
(get-info :rlimit)
(reset)
(set-option :rlimit 0)
; did a full reset
(reset)
(set-option :print-success false)
(set-info :smt-lib-version 2.6)
(set-option :auto_config false)
(set-option :type_check true)
(set-option :smt.case_split 3)
(set-option :smt.qi.eager_threshold 100)
(set-option :smt.delay_units true)
(set-option :smt.arith.solver 2)
(set-option :smt.mbqi false)
(set-option :model.compact false)
(set-option :model.v2 true)
(set-option :pp.bv_literals false)
; done setting options


(set-info :category "industrial")
(declare-sort |T@U| 0)
(declare-sort |T@T| 0)
(declare-fun real_pow (Real Real) Real)
(declare-fun UOrdering2 (|T@U| |T@U|) Bool)
(declare-fun UOrdering3 (|T@T| |T@U| |T@U|) Bool)
(declare-fun tickleBool (Bool) Bool)
(assert (and (tickleBool true) (tickleBool false)))
(declare-fun $generated (T@U) Int)
(declare-fun $generated@@0 (T@U) Bool)
(declare-fun $generated@@1 (T@T) Int)
(declare-fun $generated@@2 () T@T)
(declare-fun $generated@@3 () T@T)
(declare-fun $generated@@4 () T@T)
(declare-fun $generated@@5 () T@T)
(declare-fun $generated@@6 () T@T)
(declare-fun $generated@@7 () T@T)
(declare-fun $generated@@8 (Int) T@U)
(declare-fun type (T@U) T@T)
(declare-fun $generated@@9 (Real) T@U)
(declare-fun $generated@@10 (T@U) Real)
(declare-fun $generated@@11 (Bool) T@U)
(declare-fun $generated@@12 (RoundingMode) T@U)
(declare-fun $generated@@13 (T@U) RoundingMode)
(declare-fun $generated@@14 (String) T@U)
(declare-fun $generated@@15 (T@U) String)
(declare-fun $generated@@16 ((RegEx String)) T@U)
(declare-fun $generated@@17 (T@U) (RegEx String))
(declare-fun $generated@@44 () T@U)
(declare-fun $generated@@45 () T@U)
(declare-fun $generated@@46 () T@U)
(declare-fun $generated@@47 () T@U)
(declare-fun $generated@@48 () T@U)
(declare-fun $generated@@49 () T@U)
(declare-fun $generated@@50 () T@U)
(declare-fun $generated@@51 () T@U)
(declare-fun $generated@@52 () T@U)
(declare-fun $generated@@53 () T@U)
(declare-fun $generated@@54 () T@U)
(declare-fun $generated@@55 () T@U)
(declare-fun $generated@@56 () T@U)
(declare-fun $generated@@57 () T@U)
(declare-fun $generated@@58 () T@U)
(declare-fun $generated@@59 () T@U)
(declare-fun $generated@@60 () T@U)
(declare-fun $generated@@61 () T@U)
(declare-fun $generated@@62 () T@U)
(declare-fun $generated@@63 () T@U)
(declare-fun $generated@@64 () T@U)
(declare-fun $generated@@65 () T@U)
(declare-fun $generated@@66 () T@U)
(declare-fun $generated@@67 () T@T)
(declare-fun $generated@@68 () T@T)
(declare-fun $generated@@69 (T@T) T@T)
(declare-fun $generated@@70 (T@T) T@T)
(declare-fun $generated@@71 () T@T)
(declare-fun $generated@@72 () T@T)
(declare-fun $generated@@75 (T@U) T@U)
(declare-fun $generated@@77 (T@U T@U T@U) Bool)
(declare-fun $generated@@78 (Int) T@U)
(declare-fun $generated@@79 (T@T T@T) T@T)
(declare-fun $generated@@80 () T@T)
(declare-fun $generated@@81 () T@T)
(declare-fun $generated@@82 (T@T) T@T)
(declare-fun $generated@@83 (T@T) T@T)
(declare-fun $generated@@84 (T@U T@U) T@U)
(declare-fun $generated@@85 (T@U T@U T@U) T@U)
(declare-fun $generated@@86 (T@U T@U) T@U)
(declare-fun $generated@@87 (T@U T@U T@U) T@U)
(declare-fun $generated@@135 (T@U T@U) Bool)
(declare-fun $generated@@139 () T@U)
(declare-fun $generated@@140 () T@U)
(declare-fun $generated@@143 (T@U T@U) Bool)
(declare-fun $generated@@145 (T@U) Bool)
(declare-fun $generated@@146 (T@U T@U) T@U)
(declare-fun $generated@@147 () T@T)
(declare-fun $generated@@153 (T@U T@U) Bool)
(declare-fun $generated@@154 (T@U) T@U)
(declare-fun $generated@@155 (T@U) T@U)
(declare-fun $generated@@156 () T@T)
(declare-fun $generated@@161 (T@U) T@U)
(declare-fun $generated@@162 (T@U) Bool)
(declare-fun $generated@@166 (T@U) T@U)
(declare-fun $generated@@169 (T@U T@U T@U) T@U)
(declare-fun $generated@@170 (T@U T@U T@U Bool) T@U)
(declare-fun $generated@@171 (T@T T@T) T@T)
(declare-fun $generated@@172 (T@T) T@T)
(declare-fun $generated@@173 (T@T) T@T)
(declare-fun $generated@@174 (T@U T@U T@U T@U) T@U)
(declare-fun $generated@@225 () T@U)
(declare-fun $generated@@228 (T@U T@U) T@U)
(declare-fun $generated@@229 (T@U T@U) Bool)
(declare-fun $generated@@238 (T@U) T@U)
(declare-fun $generated@@243 (T@U) T@U)
(declare-fun $generated@@248 (T@U) T@U)
(declare-fun $generated@@252 (T@U) Bool)
(declare-fun $generated@@253 (T@U T@U T@U) Bool)
(declare-fun $generated@@259 (T@U) T@U)
(declare-fun $generated@@265 (T@T) T@U)
(declare-fun $generated@@266 (T@U) Int)
(declare-fun $generated@@267 (T@T) T@T)
(declare-fun $generated@@268 (T@T) T@T)
(declare-fun $generated@@273 (T@U) T@U)
(declare-fun $generated@@286 (T@U) Int)
(declare-fun $generated@@287 (T@T) T@U)
(declare-fun $generated@@292 (T@U) T@U)
(declare-fun $generated@@293 (T@T T@T) T@U)
(declare-fun $generated@@294 (T@T T@T) T@T)
(declare-fun $generated@@295 (T@T) T@T)
(declare-fun $generated@@296 (T@T) T@T)
(declare-fun $generated@@310 (T@U) T@U)
(declare-fun $generated@@311 (T@T T@T) T@U)
(declare-fun $generated@@312 (T@T T@T) T@T)
(declare-fun $generated@@313 (T@T) T@T)
(declare-fun $generated@@314 (T@T) T@T)
(declare-fun $generated@@331 (T@T T@U) T@U)
(declare-fun $generated@@341 (T@U) T@U)
(declare-fun $generated@@352 (T@U) T@U)
(declare-fun $generated@@372 (T@U) T@U)
(declare-fun $generated@@373 (T@U) T@U)
(declare-fun $generated@@380 (T@U) T@U)
(declare-fun $generated@@381 (T@U) T@U)
(declare-fun $generated@@398 (T@U T@U) T@U)
(declare-fun $generated@@406 (T@U T@U) T@U)
(declare-fun $generated@@417 (T@T) T@U)
(declare-fun $generated@@441 () T@T)
(declare-fun $generated@@449 (T@U) T@U)
(declare-fun $generated@@453 (T@U) T@U)
(declare-fun $generated@@459 (T@U) T@U)
(declare-fun $generated@@463 (T@U) T@U)
(declare-fun $generated@@471 (T@U) T@U)
(declare-fun $generated@@475 (T@U) T@U)
(declare-fun $generated@@483 (T@U) T@U)
(declare-fun $generated@@484 (T@U Int) T@U)
(declare-fun $generated@@493 (T@U) Int)
(declare-fun $generated@@495 (T@U) T@U)
(declare-fun $generated@@499 (T@U) T@U)
(declare-fun $generated@@503 (T@U) T@U)
(declare-fun $generated@@507 (T@U) T@U)
(declare-fun $generated@@521 (T@U) Int)
(declare-fun $generated@@522 (T@U) Int)
(declare-fun $generated@@538 (T@U) T@U)
(declare-fun $generated@@591 (T@U) Int)
(assert  (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (= ($generated@@1 $generated@@2) 0) (= ($generated@@1 $generated@@3) 1)) (= ($generated@@1 $generated@@4) 2)) (= ($generated@@1 $generated@@5) 3)) (= ($generated@@1 $generated@@6) 4)) (= ($generated@@1 $generated@@7) 5)) (forall (($generated@@18 Int) ) (! (= ($generated ($generated@@8 $generated@@18)) $generated@@18)
 :pattern ( ($generated@@8 $generated@@18))
))) (forall (($generated@@19 T@U) ) (!  (=> (= (type $generated@@19) $generated@@2) (= ($generated@@8 ($generated $generated@@19)) $generated@@19))
 :pattern ( ($generated $generated@@19))
))) (forall (($generated@@20 Int) ) (! (= (type ($generated@@8 $generated@@20)) $generated@@2)
 :pattern ( ($generated@@8 $generated@@20))
))) (forall (($generated@@21 Real) ) (! (= ($generated@@10 ($generated@@9 $generated@@21)) $generated@@21)
 :pattern ( ($generated@@9 $generated@@21))
))) (forall (($generated@@22 T@U) ) (!  (=> (= (type $generated@@22) $generated@@3) (= ($generated@@9 ($generated@@10 $generated@@22)) $generated@@22))
 :pattern ( ($generated@@10 $generated@@22))
))) (forall (($generated@@23 Real) ) (! (= (type ($generated@@9 $generated@@23)) $generated@@3)
 :pattern ( ($generated@@9 $generated@@23))
))) (forall (($generated@@24 Bool) ) (! (= ($generated@@0 ($generated@@11 $generated@@24)) $generated@@24)
 :pattern ( ($generated@@11 $generated@@24))
))) (forall (($generated@@25 T@U) ) (!  (=> (= (type $generated@@25) $generated@@4) (= ($generated@@11 ($generated@@0 $generated@@25)) $generated@@25))
 :pattern ( ($generated@@0 $generated@@25))
))) (forall (($generated@@26 Bool) ) (! (= (type ($generated@@11 $generated@@26)) $generated@@4)
 :pattern ( ($generated@@11 $generated@@26))
))) (forall (($generated@@27 RoundingMode) ) (! (= ($generated@@13 ($generated@@12 $generated@@27)) $generated@@27)
 :pattern ( ($generated@@12 $generated@@27))
))) (forall (($generated@@28 T@U) ) (!  (=> (= (type $generated@@28) $generated@@5) (= ($generated@@12 ($generated@@13 $generated@@28)) $generated@@28))
 :pattern ( ($generated@@13 $generated@@28))
))) (forall (($generated@@29 RoundingMode) ) (! (= (type ($generated@@12 $generated@@29)) $generated@@5)
 :pattern ( ($generated@@12 $generated@@29))
))) (forall (($generated@@30 String) ) (! (= ($generated@@15 ($generated@@14 $generated@@30)) $generated@@30)
 :pattern ( ($generated@@14 $generated@@30))
))) (forall (($generated@@31 T@U) ) (!  (=> (= (type $generated@@31) $generated@@6) (= ($generated@@14 ($generated@@15 $generated@@31)) $generated@@31))
 :pattern ( ($generated@@15 $generated@@31))
))) (forall (($generated@@32 String) ) (! (= (type ($generated@@14 $generated@@32)) $generated@@6)
 :pattern ( ($generated@@14 $generated@@32))
))) (forall (($generated@@33 (RegEx String)) ) (! (= ($generated@@17 ($generated@@16 $generated@@33)) $generated@@33)
 :pattern ( ($generated@@16 $generated@@33))
))) (forall (($generated@@34 T@U) ) (!  (=> (= (type $generated@@34) $generated@@7) (= ($generated@@16 ($generated@@17 $generated@@34)) $generated@@34))
 :pattern ( ($generated@@17 $generated@@34))
))) (forall (($generated@@35 (RegEx String)) ) (! (= (type ($generated@@16 $generated@@35)) $generated@@7)
 :pattern ( ($generated@@16 $generated@@35))
))))
(assert (forall (($generated@@36 T@U) ) (! (UOrdering2 $generated@@36 $generated@@36)
 :no-pattern ($generated $generated@@36)
 :no-pattern ($generated@@0 $generated@@36)
)))
(assert (forall (($generated@@37 T@U) ($generated@@38 T@U) ($generated@@39 T@U) ) (! (let (($generated@@40 (type $generated@@37)))
 (=> (and (and (= (type $generated@@38) $generated@@40) (= (type $generated@@39) $generated@@40)) (and (UOrdering2 $generated@@37 $generated@@38) (UOrdering2 $generated@@38 $generated@@39))) (UOrdering2 $generated@@37 $generated@@39)))
 :pattern ( (UOrdering2 $generated@@37 $generated@@38) (UOrdering2 $generated@@38 $generated@@39))
)))
(assert (forall (($generated@@41 T@U) ($generated@@42 T@U) ) (! (let (($generated@@43 (type $generated@@41)))
 (=> (= (type $generated@@42) $generated@@43) (=> (and (UOrdering2 $generated@@41 $generated@@42) (UOrdering2 $generated@@42 $generated@@41)) (= $generated@@41 $generated@@42))))
 :pattern ( (UOrdering2 $generated@@41 $generated@@42) (UOrdering2 $generated@@42 $generated@@41))
)))
(assert  (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (= ($generated@@1 $generated@@67) 6) (= (type $generated@@44) $generated@@67)) (= (type $generated@@45) $generated@@67)) (= (type $generated@@46) $generated@@67)) (= (type $generated@@47) $generated@@67)) (= (type $generated@@48) $generated@@67)) (= ($generated@@1 $generated@@68) 7)) (= (type $generated@@49) $generated@@68)) (= (type $generated@@50) $generated@@68)) (= (type $generated@@51) $generated@@68)) (= (type $generated@@52) $generated@@68)) (= (type $generated@@53) $generated@@68)) (= (type $generated@@54) $generated@@68)) (= (type $generated@@55) $generated@@68)) (= (type $generated@@56) $generated@@68)) (= (type $generated@@57) $generated@@68)) (= (type $generated@@58) $generated@@68)) (= (type $generated@@59) $generated@@68)) (forall (($generated@@73 T@T) ) (= ($generated@@1 ($generated@@69 $generated@@73)) 8))) (forall (($generated@@74 T@T) ) (! (= ($generated@@70 ($generated@@69 $generated@@74)) $generated@@74)
 :pattern ( ($generated@@69 $generated@@74))
))) (= (type $generated@@60) ($generated@@69 $generated@@4))) (= ($generated@@1 $generated@@71) 9)) (= (type $generated@@61) $generated@@71)) (= (type $generated@@62) $generated@@68)) (= (type $generated@@63) $generated@@68)) (= (type $generated@@64) $generated@@68)) (= ($generated@@1 $generated@@72) 10)) (= (type $generated@@65) $generated@@72)) (= (type $generated@@66) $generated@@72)))
(assert (distinct $generated@@44 $generated@@45 $generated@@46 $generated@@47 $generated@@48 $generated@@49 $generated@@50 $generated@@51 $generated@@52 $generated@@53 $generated@@54 $generated@@55 $generated@@56 $generated@@57 $generated@@58 $generated@@59 $generated@@60 $generated@@61 $generated@@62 $generated@@63 $generated@@64 $generated@@65 $generated@@66)
)
(assert (forall (($generated@@76 T@U) ) (! (= (type ($generated@@75 $generated@@76)) $generated@@68)
 :pattern ( ($generated@@75 $generated@@76))
)))
(assert (= ($generated@@75 $generated@@44) $generated@@49))
(assert (= ($generated@@75 $generated@@45) $generated@@50))
(assert (= ($generated@@75 $generated@@46) $generated@@51))
(assert (= ($generated@@75 $generated@@47) $generated@@52))
(assert (= ($generated@@75 $generated@@48) $generated@@53))
(assert  (and (and (and (and (and (and (and (and (and (and (and (and (and (forall (($generated@@88 T@T) ($generated@@89 T@T) ) (= ($generated@@1 ($generated@@79 $generated@@88 $generated@@89)) 11)) (forall (($generated@@90 T@T) ($generated@@91 T@T) ) (! (= ($generated@@82 ($generated@@79 $generated@@90 $generated@@91)) $generated@@90)
 :pattern ( ($generated@@79 $generated@@90 $generated@@91))
))) (forall (($generated@@92 T@T) ($generated@@93 T@T) ) (! (= ($generated@@83 ($generated@@79 $generated@@92 $generated@@93)) $generated@@93)
 :pattern ( ($generated@@79 $generated@@92 $generated@@93))
))) (forall (($generated@@94 T@U) ($generated@@95 T@U) ) (! (let (($generated@@96 ($generated@@83 (type $generated@@94))))
(= (type ($generated@@84 $generated@@94 $generated@@95)) $generated@@96))
 :pattern ( ($generated@@84 $generated@@94 $generated@@95))
))) (forall (($generated@@97 T@U) ($generated@@98 T@U) ($generated@@99 T@U) ) (! (let (($generated@@100 (type $generated@@99)))
(let (($generated@@101 (type $generated@@98)))
(= (type ($generated@@85 $generated@@97 $generated@@98 $generated@@99)) ($generated@@79 $generated@@101 $generated@@100))))
 :pattern ( ($generated@@85 $generated@@97 $generated@@98 $generated@@99))
))) (forall (($generated@@102 T@U) ($generated@@103 T@U) ($generated@@104 T@U) ) (! (let (($generated@@105 ($generated@@83 (type $generated@@102))))
 (=> (= (type $generated@@104) $generated@@105) (= ($generated@@84 ($generated@@85 $generated@@102 $generated@@103 $generated@@104) $generated@@103) $generated@@104)))
 :weight 0
))) (and (forall (($generated@@106 T@U) ($generated@@107 T@U) ($generated@@108 T@U) ($generated@@109 T@U) ) (!  (or (= $generated@@108 $generated@@109) (= ($generated@@84 ($generated@@85 $generated@@107 $generated@@108 $generated@@106) $generated@@109) ($generated@@84 $generated@@107 $generated@@109)))
 :weight 0
)) (forall (($generated@@110 T@U) ($generated@@111 T@U) ($generated@@112 T@U) ($generated@@113 T@U) ) (!  (or true (= ($generated@@84 ($generated@@85 $generated@@111 $generated@@112 $generated@@110) $generated@@113) ($generated@@84 $generated@@111 $generated@@113)))
 :weight 0
)))) (= ($generated@@1 $generated@@80) 12)) (forall (($generated@@114 T@U) ($generated@@115 T@U) ) (! (let (($generated@@116 ($generated@@70 (type $generated@@115))))
(= (type ($generated@@86 $generated@@114 $generated@@115)) $generated@@116))
 :pattern ( ($generated@@86 $generated@@114 $generated@@115))
))) (= ($generated@@1 $generated@@81) 13)) (forall (($generated@@117 T@U) ($generated@@118 T@U) ($generated@@119 T@U) ) (! (= (type ($generated@@87 $generated@@117 $generated@@118 $generated@@119)) $generated@@81)
 :pattern ( ($generated@@87 $generated@@117 $generated@@118 $generated@@119))
))) (forall (($generated@@120 T@U) ($generated@@121 T@U) ($generated@@122 T@U) ) (! (let (($generated@@123 ($generated@@70 (type $generated@@121))))
 (=> (= (type $generated@@122) $generated@@123) (= ($generated@@86 ($generated@@87 $generated@@120 $generated@@121 $generated@@122) $generated@@121) $generated@@122)))
 :weight 0
))) (and (forall (($generated@@124 T@U) ($generated@@125 T@U) ($generated@@126 T@U) ($generated@@127 T@U) ) (!  (or (= $generated@@126 $generated@@127) (= ($generated@@86 ($generated@@87 $generated@@125 $generated@@126 $generated@@124) $generated@@127) ($generated@@86 $generated@@125 $generated@@127)))
 :weight 0
)) (forall (($generated@@128 T@U) ($generated@@129 T@U) ($generated@@130 T@U) ($generated@@131 T@U) ) (!  (or true (= ($generated@@86 ($generated@@87 $generated@@129 $generated@@130 $generated@@128) $generated@@131) ($generated@@86 $generated@@129 $generated@@131)))
 :weight 0
)))) (forall (($generated@@132 Int) ) (! (= (type ($generated@@78 $generated@@132)) $generated@@67)
 :pattern ( ($generated@@78 $generated@@132))
))))
(assert (forall (($generated@@133 T@U) ($generated@@134 T@U) ) (!  (=> (and (= (type $generated@@133) $generated@@2) (= (type $generated@@134) ($generated@@79 $generated@@80 $generated@@81))) ($generated@@77 $generated@@133 ($generated@@78 0) $generated@@134))
 :pattern ( ($generated@@77 $generated@@133 ($generated@@78 0) $generated@@134))
)))
(assert (forall (($generated@@136 T@U) ($generated@@137 T@U) ) (!  (=> (and (and (= (type $generated@@136) ($generated@@79 $generated@@80 $generated@@81)) (= (type $generated@@137) ($generated@@79 $generated@@80 $generated@@81))) ($generated@@135 $generated@@136 $generated@@137)) (forall (($generated@@138 T@U) ) (!  (=> (and (= (type $generated@@138) $generated@@80) ($generated@@0 ($generated@@86 ($generated@@84 $generated@@136 $generated@@138) $generated@@60))) ($generated@@0 ($generated@@86 ($generated@@84 $generated@@137 $generated@@138) $generated@@60)))
 :pattern ( ($generated@@86 ($generated@@84 $generated@@137 $generated@@138) $generated@@60))
)))
 :pattern ( ($generated@@135 $generated@@136 $generated@@137))
)))
(assert  (and (= (type $generated@@139) $generated@@67) (= (type $generated@@140) $generated@@80)))
(assert (forall (($generated@@141 T@U) ($generated@@142 T@U) ) (!  (=> (and (= (type $generated@@141) $generated@@80) (= (type $generated@@142) ($generated@@79 $generated@@80 $generated@@81))) (= ($generated@@77 $generated@@141 $generated@@139 $generated@@142)  (or (= $generated@@141 $generated@@140) ($generated@@0 ($generated@@86 ($generated@@84 $generated@@142 $generated@@141) $generated@@60)))))
 :pattern ( ($generated@@77 $generated@@141 $generated@@139 $generated@@142))
)))
(assert (forall (($generated@@144 T@U) ) (!  (=> (= (type $generated@@144) $generated@@2) ($generated@@143 $generated@@144 ($generated@@78 0)))
 :pattern ( ($generated@@143 $generated@@144 ($generated@@78 0)))
)))
(assert  (and (= ($generated@@1 $generated@@147) 14) (forall (($generated@@148 T@U) ($generated@@149 T@U) ) (! (= (type ($generated@@146 $generated@@148 $generated@@149)) $generated@@67)
 :pattern ( ($generated@@146 $generated@@148 $generated@@149))
))))
(assert (forall (($generated@@150 T@U) ($generated@@151 T@U) ($generated@@152 T@U) ) (!  (=> (and (and (and (= (type $generated@@150) $generated@@67) (= (type $generated@@151) $generated@@67)) (= (type $generated@@152) $generated@@147)) ($generated@@143 $generated@@152 ($generated@@146 $generated@@150 $generated@@151))) ($generated@@145 $generated@@152))
 :pattern ( ($generated@@145 $generated@@152) ($generated@@143 $generated@@152 ($generated@@146 $generated@@150 $generated@@151)))
)))
(assert  (and (and (= ($generated@@1 $generated@@156) 15) (forall (($generated@@157 T@U) ) (! (= (type ($generated@@154 $generated@@157)) $generated@@156)
 :pattern ( ($generated@@154 $generated@@157))
))) (forall (($generated@@158 T@U) ) (! (= (type ($generated@@155 $generated@@158)) $generated@@156)
 :pattern ( ($generated@@155 $generated@@158))
))))
(assert (forall (($generated@@159 T@U) ($generated@@160 T@U) ) (!  (=> (and (and (= (type $generated@@159) $generated@@147) (= (type $generated@@160) $generated@@147)) true) (= ($generated@@153 $generated@@159 $generated@@160)  (and (= ($generated@@154 $generated@@159) ($generated@@154 $generated@@160)) (= ($generated@@155 $generated@@159) ($generated@@155 $generated@@160)))))
 :pattern ( ($generated@@153 $generated@@159 $generated@@160))
)))
(assert (forall (($generated@@163 T@U) ) (! (= (type ($generated@@161 $generated@@163)) $generated@@67)
 :pattern ( ($generated@@161 $generated@@163))
)))
(assert (forall (($generated@@164 T@U) ($generated@@165 T@U) ) (!  (=> (and (and (= (type $generated@@164) ($generated@@79 $generated@@156 $generated@@2)) (= (type $generated@@165) $generated@@67)) ($generated@@143 $generated@@164 ($generated@@161 $generated@@165))) ($generated@@162 $generated@@164))
 :pattern ( ($generated@@143 $generated@@164 ($generated@@161 $generated@@165)))
)))
(assert (forall (($generated@@167 T@U) ) (! (= (type ($generated@@166 $generated@@167)) $generated@@67)
 :pattern ( ($generated@@166 $generated@@167))
)))
(assert (forall (($generated@@168 T@U) ) (!  (=> (= (type $generated@@168) $generated@@80) (= ($generated@@143 $generated@@168 $generated@@139)  (or (= $generated@@168 $generated@@140) (= ($generated@@166 $generated@@168) $generated@@139))))
 :pattern ( ($generated@@143 $generated@@168 $generated@@139))
)))
(assert  (and (and (and (and (and (and (and (forall (($generated@@175 T@T) ($generated@@176 T@T) ) (= ($generated@@1 ($generated@@171 $generated@@175 $generated@@176)) 16)) (forall (($generated@@177 T@T) ($generated@@178 T@T) ) (! (= ($generated@@172 ($generated@@171 $generated@@177 $generated@@178)) $generated@@177)
 :pattern ( ($generated@@171 $generated@@177 $generated@@178))
))) (forall (($generated@@179 T@T) ($generated@@180 T@T) ) (! (= ($generated@@173 ($generated@@171 $generated@@179 $generated@@180)) $generated@@180)
 :pattern ( ($generated@@171 $generated@@179 $generated@@180))
))) (forall (($generated@@181 T@U) ($generated@@182 T@U) ($generated@@183 T@U) ) (! (let (($generated@@184 ($generated@@173 (type $generated@@181))))
(= (type ($generated@@169 $generated@@181 $generated@@182 $generated@@183)) $generated@@184))
 :pattern ( ($generated@@169 $generated@@181 $generated@@182 $generated@@183))
))) (forall (($generated@@185 T@U) ($generated@@186 T@U) ($generated@@187 T@U) ($generated@@188 T@U) ) (! (let (($generated@@189 (type $generated@@188)))
(let (($generated@@190 (type $generated@@186)))
(= (type ($generated@@174 $generated@@185 $generated@@186 $generated@@187 $generated@@188)) ($generated@@171 $generated@@190 $generated@@189))))
 :pattern ( ($generated@@174 $generated@@185 $generated@@186 $generated@@187 $generated@@188))
))) (forall (($generated@@191 T@U) ($generated@@192 T@U) ($generated@@193 T@U) ($generated@@194 T@U) ) (! (let (($generated@@195 ($generated@@173 (type $generated@@191))))
 (=> (= (type $generated@@194) $generated@@195) (= ($generated@@169 ($generated@@174 $generated@@191 $generated@@192 $generated@@193 $generated@@194) $generated@@192 $generated@@193) $generated@@194)))
 :weight 0
))) (and (and (forall (($generated@@196 T@U) ($generated@@197 T@U) ($generated@@198 T@U) ($generated@@199 T@U) ($generated@@200 T@U) ($generated@@201 T@U) ) (!  (or (= $generated@@198 $generated@@200) (= ($generated@@169 ($generated@@174 $generated@@197 $generated@@198 $generated@@199 $generated@@196) $generated@@200 $generated@@201) ($generated@@169 $generated@@197 $generated@@200 $generated@@201)))
 :weight 0
)) (forall (($generated@@202 T@U) ($generated@@203 T@U) ($generated@@204 T@U) ($generated@@205 T@U) ($generated@@206 T@U) ($generated@@207 T@U) ) (!  (or (= $generated@@205 $generated@@207) (= ($generated@@169 ($generated@@174 $generated@@203 $generated@@204 $generated@@205 $generated@@202) $generated@@206 $generated@@207) ($generated@@169 $generated@@203 $generated@@206 $generated@@207)))
 :weight 0
))) (forall (($generated@@208 T@U) ($generated@@209 T@U) ($generated@@210 T@U) ($generated@@211 T@U) ($generated@@212 T@U) ($generated@@213 T@U) ) (!  (or true (= ($generated@@169 ($generated@@174 $generated@@209 $generated@@210 $generated@@211 $generated@@208) $generated@@212 $generated@@213) ($generated@@169 $generated@@209 $generated@@212 $generated@@213)))
 :weight 0
)))) (forall (($generated@@214 T@U) ($generated@@215 T@U) ($generated@@216 T@U) ($generated@@217 Bool) ) (! (= (type ($generated@@170 $generated@@214 $generated@@215 $generated@@216 $generated@@217)) ($generated@@171 $generated@@80 $generated@@4))
 :pattern ( ($generated@@170 $generated@@214 $generated@@215 $generated@@216 $generated@@217))
))))
(assert (forall (($generated@@218 T@U) ($generated@@219 T@U) ($generated@@220 T@U) ($generated@@221 Bool) ($generated@@222 T@U) ($generated@@223 T@U) ) (! (let (($generated@@224 ($generated@@70 (type $generated@@223))))
 (=> (and (and (and (and (= (type $generated@@218) $generated@@80) (= (type $generated@@219) ($generated@@79 $generated@@80 $generated@@81))) (= (type $generated@@220) ($generated@@69 $generated@@4))) (= (type $generated@@222) $generated@@80)) (= (type $generated@@223) ($generated@@69 $generated@@224))) (= ($generated@@0 ($generated@@169 ($generated@@170 $generated@@218 $generated@@219 $generated@@220 $generated@@221) $generated@@222 $generated@@223))  (=> (and (not (= $generated@@222 $generated@@218)) ($generated@@0 ($generated@@86 ($generated@@84 $generated@@219 $generated@@222) $generated@@220))) $generated@@221))))
 :pattern ( ($generated@@169 ($generated@@170 $generated@@218 $generated@@219 $generated@@220 $generated@@221) $generated@@222 $generated@@223))
)))
(assert (= (type $generated@@225) $generated@@67))
(assert (forall (($generated@@226 T@U) ($generated@@227 T@U) ) (!  (=> (and (= (type $generated@@226) $generated@@80) (= (type $generated@@227) ($generated@@79 $generated@@80 $generated@@81))) (= ($generated@@77 $generated@@226 $generated@@225 $generated@@227) ($generated@@77 $generated@@226 $generated@@139 $generated@@227)))
 :pattern ( ($generated@@77 $generated@@226 $generated@@225 $generated@@227))
)))
(assert (forall (($generated@@230 T@U) ($generated@@231 T@U) ) (! (= (type ($generated@@228 $generated@@230 $generated@@231)) $generated@@147)
 :pattern ( ($generated@@228 $generated@@230 $generated@@231))
)))
(assert (forall (($generated@@232 T@U) ($generated@@233 T@U) ($generated@@234 T@U) ($generated@@235 T@U) ) (!  (=> (and (and (and (= (type $generated@@232) $generated@@67) (= (type $generated@@233) $generated@@67)) (= (type $generated@@234) $generated@@156)) (= (type $generated@@235) $generated@@156)) (= ($generated@@143 ($generated@@228 $generated@@234 $generated@@235) ($generated@@146 $generated@@232 $generated@@233))  (and ($generated@@229 $generated@@234 $generated@@232) ($generated@@229 $generated@@235 $generated@@233))))
 :pattern ( ($generated@@143 ($generated@@228 $generated@@234 $generated@@235) ($generated@@146 $generated@@232 $generated@@233)))
)))
(assert (forall (($generated@@236 T@U) ($generated@@237 T@U) ) (!  (=> (and (= (type $generated@@236) $generated@@147) (= (type $generated@@237) $generated@@147)) (= ($generated@@153 $generated@@236 $generated@@237) (= $generated@@236 $generated@@237)))
 :pattern ( ($generated@@153 $generated@@236 $generated@@237))
)))
(assert (forall (($generated@@239 T@U) ) (! (= (type ($generated@@238 $generated@@239)) $generated@@67)
 :pattern ( ($generated@@238 $generated@@239))
)))
(assert (forall (($generated@@240 T@U) ($generated@@241 T@U) ) (!  (=> (and (= (type $generated@@240) ($generated@@79 $generated@@156 $generated@@4)) (= (type $generated@@241) $generated@@67)) (= ($generated@@143 $generated@@240 ($generated@@238 $generated@@241)) (forall (($generated@@242 T@U) ) (!  (=> (and (= (type $generated@@242) $generated@@156) ($generated@@0 ($generated@@84 $generated@@240 $generated@@242))) ($generated@@229 $generated@@242 $generated@@241))
 :pattern ( ($generated@@84 $generated@@240 $generated@@242))
))))
 :pattern ( ($generated@@143 $generated@@240 ($generated@@238 $generated@@241)))
)))
(assert (forall (($generated@@244 T@U) ) (! (= (type ($generated@@243 $generated@@244)) $generated@@67)
 :pattern ( ($generated@@243 $generated@@244))
)))
(assert (forall (($generated@@245 T@U) ($generated@@246 T@U) ) (!  (=> (and (= (type $generated@@245) ($generated@@79 $generated@@156 $generated@@4)) (= (type $generated@@246) $generated@@67)) (= ($generated@@143 $generated@@245 ($generated@@243 $generated@@246)) (forall (($generated@@247 T@U) ) (!  (=> (and (= (type $generated@@247) $generated@@156) ($generated@@0 ($generated@@84 $generated@@245 $generated@@247))) ($generated@@229 $generated@@247 $generated@@246))
 :pattern ( ($generated@@84 $generated@@245 $generated@@247))
))))
 :pattern ( ($generated@@143 $generated@@245 ($generated@@243 $generated@@246)))
)))
(assert (forall (($generated@@249 T@U) ) (! (let (($generated@@250 (type $generated@@249)))
(= (type ($generated@@248 $generated@@249)) $generated@@250))
 :pattern ( ($generated@@248 $generated@@249))
)))
(assert (forall (($generated@@251 T@U) ) (! (= ($generated@@248 $generated@@251) $generated@@251)
 :pattern ( ($generated@@248 $generated@@251))
)))
(assert (forall (($generated@@254 T@U) ($generated@@255 T@U) ($generated@@256 T@U) ($generated@@257 T@U) ($generated@@258 T@U) ) (!  (=> (and (and (and (and (and (= (type $generated@@254) $generated@@67) (= (type $generated@@255) $generated@@67)) (= (type $generated@@256) $generated@@156)) (= (type $generated@@257) $generated@@156)) (= (type $generated@@258) ($generated@@79 $generated@@80 $generated@@81))) ($generated@@252 $generated@@258)) (= ($generated@@77 ($generated@@228 $generated@@256 $generated@@257) ($generated@@146 $generated@@254 $generated@@255) $generated@@258)  (and ($generated@@253 $generated@@256 $generated@@254 $generated@@258) ($generated@@253 $generated@@257 $generated@@255 $generated@@258))))
 :pattern ( ($generated@@77 ($generated@@228 $generated@@256 $generated@@257) ($generated@@146 $generated@@254 $generated@@255) $generated@@258))
)))
(assert (forall (($generated@@260 T@U) ) (! (= (type ($generated@@259 $generated@@260)) $generated@@71)
 :pattern ( ($generated@@259 $generated@@260))
)))
(assert (forall (($generated@@261 T@U) ) (!  (=> (= (type $generated@@261) $generated@@147) (= ($generated@@145 $generated@@261) (= ($generated@@259 $generated@@261) $generated@@61)))
 :pattern ( ($generated@@145 $generated@@261))
)))
(assert (forall (($generated@@262 T@U) ) (!  (=> (and (= (type $generated@@262) $generated@@147) ($generated@@145 $generated@@262)) (exists (($generated@@263 T@U) ($generated@@264 T@U) ) (!  (and (and (= (type $generated@@263) $generated@@156) (= (type $generated@@264) $generated@@156)) (= $generated@@262 ($generated@@228 $generated@@263 $generated@@264)))
 :no-pattern (type $generated@@263)
 :no-pattern (type $generated@@264)
 :no-pattern ($generated $generated@@263)
 :no-pattern ($generated@@0 $generated@@263)
 :no-pattern ($generated $generated@@264)
 :no-pattern ($generated@@0 $generated@@264)
)))
 :pattern ( ($generated@@145 $generated@@262))
)))
(assert  (and (and (forall (($generated@@269 T@T) ) (= ($generated@@1 ($generated@@267 $generated@@269)) 17)) (forall (($generated@@270 T@T) ) (! (= ($generated@@268 ($generated@@267 $generated@@270)) $generated@@270)
 :pattern ( ($generated@@267 $generated@@270))
))) (forall (($generated@@271 T@T) ) (! (= (type ($generated@@265 $generated@@271)) ($generated@@267 $generated@@271))
 :pattern ( ($generated@@265 $generated@@271))
))))
(assert (forall (($generated@@272 T@T) ) (! (= ($generated@@266 ($generated@@265 $generated@@272)) 0)
 :pattern ( ($generated@@265 $generated@@272))
)))
(assert (forall (($generated@@274 T@U) ) (! (= (type ($generated@@273 $generated@@274)) $generated@@156)
 :pattern ( ($generated@@273 $generated@@274))
)))
(assert (forall (($generated@@275 T@U) ($generated@@276 T@U) ($generated@@277 T@U) ) (!  (=> (and (= (type $generated@@276) $generated@@67) (= (type $generated@@277) ($generated@@79 $generated@@80 $generated@@81))) (= ($generated@@253 ($generated@@273 $generated@@275) $generated@@276 $generated@@277) ($generated@@77 $generated@@275 $generated@@276 $generated@@277)))
 :pattern ( ($generated@@253 ($generated@@273 $generated@@275) $generated@@276 $generated@@277))
)))
(assert (forall (($generated@@278 T@U) ($generated@@279 T@U) ($generated@@280 T@U) ($generated@@281 T@U) ) (!  (=> (and (and (and (and (and (= (type $generated@@278) ($generated@@79 $generated@@80 $generated@@81)) (= (type $generated@@279) ($generated@@79 $generated@@80 $generated@@81))) (= (type $generated@@280) $generated@@156)) (= (type $generated@@281) $generated@@67)) ($generated@@135 $generated@@278 $generated@@279)) ($generated@@253 $generated@@280 $generated@@281 $generated@@278)) ($generated@@253 $generated@@280 $generated@@281 $generated@@279))
 :pattern ( ($generated@@135 $generated@@278 $generated@@279) ($generated@@253 $generated@@280 $generated@@281 $generated@@278))
)))
(assert (forall (($generated@@282 T@U) ($generated@@283 T@U) ($generated@@284 T@U) ($generated@@285 T@U) ) (!  (=> (and (and (and (and (= (type $generated@@282) ($generated@@79 $generated@@80 $generated@@81)) (= (type $generated@@283) ($generated@@79 $generated@@80 $generated@@81))) (= (type $generated@@285) $generated@@67)) ($generated@@135 $generated@@282 $generated@@283)) ($generated@@77 $generated@@284 $generated@@285 $generated@@282)) ($generated@@77 $generated@@284 $generated@@285 $generated@@283))
 :pattern ( ($generated@@135 $generated@@282 $generated@@283) ($generated@@77 $generated@@284 $generated@@285 $generated@@282))
)))
(assert (forall (($generated@@288 T@T) ) (! (= (type ($generated@@287 $generated@@288)) ($generated@@79 $generated@@288 $generated@@2))
 :pattern ( ($generated@@287 $generated@@288))
)))
(assert (forall (($generated@@289 T@U) ) (! (let (($generated@@290 ($generated@@82 (type $generated@@289))))
 (=> (= (type $generated@@289) ($generated@@79 $generated@@290 $generated@@2)) (and (= (= ($generated@@286 $generated@@289) 0) (= $generated@@289 ($generated@@287 $generated@@290))) (=> (not (= ($generated@@286 $generated@@289) 0)) (exists (($generated@@291 T@U) ) (!  (and (= (type $generated@@291) $generated@@290) (< 0 ($generated ($generated@@84 $generated@@289 $generated@@291))))
 :no-pattern (type $generated@@291)
 :no-pattern ($generated $generated@@291)
 :no-pattern ($generated@@0 $generated@@291)
))))))
 :pattern ( ($generated@@286 $generated@@289))
)))
(assert  (and (and (and (and (forall (($generated@@297 T@T) ($generated@@298 T@T) ) (= ($generated@@1 ($generated@@294 $generated@@297 $generated@@298)) 18)) (forall (($generated@@299 T@T) ($generated@@300 T@T) ) (! (= ($generated@@295 ($generated@@294 $generated@@299 $generated@@300)) $generated@@299)
 :pattern ( ($generated@@294 $generated@@299 $generated@@300))
))) (forall (($generated@@301 T@T) ($generated@@302 T@T) ) (! (= ($generated@@296 ($generated@@294 $generated@@301 $generated@@302)) $generated@@302)
 :pattern ( ($generated@@294 $generated@@301 $generated@@302))
))) (forall (($generated@@303 T@U) ) (! (let (($generated@@304 ($generated@@295 (type $generated@@303))))
(= (type ($generated@@292 $generated@@303)) ($generated@@79 $generated@@304 $generated@@4)))
 :pattern ( ($generated@@292 $generated@@303))
))) (forall (($generated@@305 T@T) ($generated@@306 T@T) ) (! (= (type ($generated@@293 $generated@@305 $generated@@306)) ($generated@@294 $generated@@305 $generated@@306))
 :pattern ( ($generated@@293 $generated@@305 $generated@@306))
))))
(assert (forall (($generated@@307 T@U) ($generated@@308 T@T) ) (! (let (($generated@@309 (type $generated@@307)))
 (not ($generated@@0 ($generated@@84 ($generated@@292 ($generated@@293 $generated@@309 $generated@@308)) $generated@@307))))
 :pattern ( (let (($generated@@309 (type $generated@@307)))
($generated@@84 ($generated@@292 ($generated@@293 $generated@@309 $generated@@308)) $generated@@307)))
)))
(assert  (and (and (and (and (forall (($generated@@315 T@T) ($generated@@316 T@T) ) (= ($generated@@1 ($generated@@312 $generated@@315 $generated@@316)) 19)) (forall (($generated@@317 T@T) ($generated@@318 T@T) ) (! (= ($generated@@313 ($generated@@312 $generated@@317 $generated@@318)) $generated@@317)
 :pattern ( ($generated@@312 $generated@@317 $generated@@318))
))) (forall (($generated@@319 T@T) ($generated@@320 T@T) ) (! (= ($generated@@314 ($generated@@312 $generated@@319 $generated@@320)) $generated@@320)
 :pattern ( ($generated@@312 $generated@@319 $generated@@320))
))) (forall (($generated@@321 T@U) ) (! (let (($generated@@322 ($generated@@313 (type $generated@@321))))
(= (type ($generated@@310 $generated@@321)) ($generated@@79 $generated@@322 $generated@@4)))
 :pattern ( ($generated@@310 $generated@@321))
))) (forall (($generated@@323 T@T) ($generated@@324 T@T) ) (! (= (type ($generated@@311 $generated@@323 $generated@@324)) ($generated@@312 $generated@@323 $generated@@324))
 :pattern ( ($generated@@311 $generated@@323 $generated@@324))
))))
(assert (forall (($generated@@325 T@U) ($generated@@326 T@T) ) (! (let (($generated@@327 (type $generated@@325)))
 (not ($generated@@0 ($generated@@84 ($generated@@310 ($generated@@311 $generated@@327 $generated@@326)) $generated@@325))))
 :pattern ( (let (($generated@@327 (type $generated@@325)))
($generated@@84 ($generated@@310 ($generated@@311 $generated@@327 $generated@@326)) $generated@@325)))
)))
(assert (forall (($generated@@328 T@U) ) (! (let (($generated@@329 ($generated@@82 (type $generated@@328))))
 (=> (= (type $generated@@328) ($generated@@79 $generated@@329 $generated@@2)) (= ($generated@@162 $generated@@328) (forall (($generated@@330 T@U) ) (!  (=> (= (type $generated@@330) $generated@@329) (and (<= 0 ($generated ($generated@@84 $generated@@328 $generated@@330))) (<= ($generated ($generated@@84 $generated@@328 $generated@@330)) ($generated@@286 $generated@@328))))
 :pattern ( ($generated@@84 $generated@@328 $generated@@330))
)))))
 :pattern ( ($generated@@162 $generated@@328))
)))
(assert (forall (($generated@@332 T@T) ($generated@@333 T@U) ) (! (= (type ($generated@@331 $generated@@332 $generated@@333)) $generated@@332)
 :pattern ( ($generated@@331 $generated@@332 $generated@@333))
)))
(assert (forall (($generated@@334 T@U) ) (!  (=> (and (= (type $generated@@334) $generated@@156) ($generated@@229 $generated@@334 $generated@@139)) (and (= ($generated@@273 ($generated@@331 $generated@@80 $generated@@334)) $generated@@334) ($generated@@143 ($generated@@331 $generated@@80 $generated@@334) $generated@@139)))
 :pattern ( ($generated@@229 $generated@@334 $generated@@139))
)))
(assert (forall (($generated@@335 T@U) ) (!  (=> (and (= (type $generated@@335) $generated@@156) ($generated@@229 $generated@@335 $generated@@225)) (and (= ($generated@@273 ($generated@@331 $generated@@80 $generated@@335)) $generated@@335) ($generated@@143 ($generated@@331 $generated@@80 $generated@@335) $generated@@225)))
 :pattern ( ($generated@@229 $generated@@335 $generated@@225))
)))
(assert (forall (($generated@@336 T@U) ) (!  (=> (= (type $generated@@336) $generated@@80) (= ($generated@@143 $generated@@336 $generated@@225)  (and ($generated@@143 $generated@@336 $generated@@139) (not (= $generated@@336 $generated@@140)))))
 :pattern ( ($generated@@143 $generated@@336 $generated@@225))
)))
(assert (forall (($generated@@337 T@U) ) (! (let (($generated@@338 ($generated@@296 (type $generated@@337))))
(let (($generated@@339 ($generated@@295 (type $generated@@337))))
 (=> (= (type $generated@@337) ($generated@@294 $generated@@339 $generated@@338)) (or (= $generated@@337 ($generated@@293 $generated@@339 $generated@@338)) (exists (($generated@@340 T@U) ) (!  (and (= (type $generated@@340) $generated@@339) ($generated@@0 ($generated@@84 ($generated@@292 $generated@@337) $generated@@340)))
 :no-pattern (type $generated@@340)
 :no-pattern ($generated $generated@@340)
 :no-pattern ($generated@@0 $generated@@340)
))))))
 :pattern ( ($generated@@292 $generated@@337))
)))
(assert (forall (($generated@@342 T@U) ) (! (let (($generated@@343 ($generated@@296 (type $generated@@342))))
(= (type ($generated@@341 $generated@@342)) ($generated@@79 $generated@@343 $generated@@4)))
 :pattern ( ($generated@@341 $generated@@342))
)))
(assert (forall (($generated@@344 T@U) ) (! (let (($generated@@345 ($generated@@296 (type $generated@@344))))
(let (($generated@@346 ($generated@@295 (type $generated@@344))))
 (=> (= (type $generated@@344) ($generated@@294 $generated@@346 $generated@@345)) (or (= $generated@@344 ($generated@@293 $generated@@346 $generated@@345)) (exists (($generated@@347 T@U) ) (!  (and (= (type $generated@@347) $generated@@345) ($generated@@0 ($generated@@84 ($generated@@341 $generated@@344) $generated@@347)))
 :no-pattern (type $generated@@347)
 :no-pattern ($generated $generated@@347)
 :no-pattern ($generated@@0 $generated@@347)
))))))
 :pattern ( ($generated@@341 $generated@@344))
)))
(assert (forall (($generated@@348 T@U) ) (! (let (($generated@@349 ($generated@@314 (type $generated@@348))))
(let (($generated@@350 ($generated@@313 (type $generated@@348))))
 (=> (= (type $generated@@348) ($generated@@312 $generated@@350 $generated@@349)) (or (= $generated@@348 ($generated@@311 $generated@@350 $generated@@349)) (exists (($generated@@351 T@U) ) (!  (and (= (type $generated@@351) $generated@@350) ($generated@@0 ($generated@@84 ($generated@@310 $generated@@348) $generated@@351)))
 :no-pattern (type $generated@@351)
 :no-pattern ($generated $generated@@351)
 :no-pattern ($generated@@0 $generated@@351)
))))))
 :pattern ( ($generated@@310 $generated@@348))
)))
(assert (forall (($generated@@353 T@U) ) (! (let (($generated@@354 ($generated@@314 (type $generated@@353))))
(= (type ($generated@@352 $generated@@353)) ($generated@@79 $generated@@354 $generated@@4)))
 :pattern ( ($generated@@352 $generated@@353))
)))
(assert (forall (($generated@@355 T@U) ) (! (let (($generated@@356 ($generated@@314 (type $generated@@355))))
(let (($generated@@357 ($generated@@313 (type $generated@@355))))
 (=> (= (type $generated@@355) ($generated@@312 $generated@@357 $generated@@356)) (or (= $generated@@355 ($generated@@311 $generated@@357 $generated@@356)) (exists (($generated@@358 T@U) ) (!  (and (= (type $generated@@358) $generated@@356) ($generated@@0 ($generated@@84 ($generated@@352 $generated@@355) $generated@@358)))
 :no-pattern (type $generated@@358)
 :no-pattern ($generated $generated@@358)
 :no-pattern ($generated@@0 $generated@@358)
))))))
 :pattern ( ($generated@@352 $generated@@355))
)))
(assert (forall (($generated@@359 T@U) ($generated@@360 T@U) ) (!  (=> (and (= (type $generated@@359) ($generated@@79 $generated@@156 $generated@@2)) (= (type $generated@@360) $generated@@67)) (= ($generated@@143 $generated@@359 ($generated@@161 $generated@@360)) (forall (($generated@@361 T@U) ) (!  (=> (and (= (type $generated@@361) $generated@@156) (< 0 ($generated ($generated@@84 $generated@@359 $generated@@361)))) ($generated@@229 $generated@@361 $generated@@360))
 :pattern ( ($generated@@84 $generated@@359 $generated@@361))
))))
 :pattern ( ($generated@@143 $generated@@359 ($generated@@161 $generated@@360)))
)))
(assert (forall (($generated@@362 T@U) ($generated@@363 T@U) ($generated@@364 T@U) ) (!  (=> (and (and (= (type $generated@@362) ($generated@@79 $generated@@156 $generated@@4)) (= (type $generated@@363) $generated@@67)) (= (type $generated@@364) ($generated@@79 $generated@@80 $generated@@81))) (= ($generated@@77 $generated@@362 ($generated@@238 $generated@@363) $generated@@364) (forall (($generated@@365 T@U) ) (!  (=> (and (= (type $generated@@365) $generated@@156) ($generated@@0 ($generated@@84 $generated@@362 $generated@@365))) ($generated@@253 $generated@@365 $generated@@363 $generated@@364))
 :pattern ( ($generated@@84 $generated@@362 $generated@@365))
))))
 :pattern ( ($generated@@77 $generated@@362 ($generated@@238 $generated@@363) $generated@@364))
)))
(assert (forall (($generated@@366 T@U) ($generated@@367 T@U) ($generated@@368 T@U) ) (!  (=> (and (and (= (type $generated@@366) ($generated@@79 $generated@@156 $generated@@4)) (= (type $generated@@367) $generated@@67)) (= (type $generated@@368) ($generated@@79 $generated@@80 $generated@@81))) (= ($generated@@77 $generated@@366 ($generated@@243 $generated@@367) $generated@@368) (forall (($generated@@369 T@U) ) (!  (=> (and (= (type $generated@@369) $generated@@156) ($generated@@0 ($generated@@84 $generated@@366 $generated@@369))) ($generated@@253 $generated@@369 $generated@@367 $generated@@368))
 :pattern ( ($generated@@84 $generated@@366 $generated@@369))
))))
 :pattern ( ($generated@@77 $generated@@366 ($generated@@243 $generated@@367) $generated@@368))
)))
(assert (forall (($generated@@370 T@U) ) (! (let (($generated@@371 (type $generated@@370)))
(= ($generated ($generated@@84 ($generated@@287 $generated@@371) $generated@@370)) 0))
 :pattern ( (let (($generated@@371 (type $generated@@370)))
($generated@@84 ($generated@@287 $generated@@371) $generated@@370)))
)))
(assert  (and (forall (($generated@@374 T@U) ) (! (= (type ($generated@@372 $generated@@374)) ($generated@@79 $generated@@156 $generated@@4))
 :pattern ( ($generated@@372 $generated@@374))
)) (forall (($generated@@375 T@U) ) (! (let (($generated@@376 ($generated@@296 (type $generated@@375))))
(let (($generated@@377 ($generated@@295 (type $generated@@375))))
(= (type ($generated@@373 $generated@@375)) ($generated@@79 $generated@@377 $generated@@376))))
 :pattern ( ($generated@@373 $generated@@375))
))))
(assert (forall (($generated@@378 T@U) ($generated@@379 T@U) ) (!  (=> (and (= (type $generated@@378) ($generated@@294 $generated@@156 $generated@@156)) (= (type $generated@@379) $generated@@156)) (= ($generated@@0 ($generated@@84 ($generated@@372 $generated@@378) $generated@@379))  (and ($generated@@0 ($generated@@84 ($generated@@292 $generated@@378) ($generated@@154 ($generated@@331 $generated@@147 $generated@@379)))) (= ($generated@@84 ($generated@@373 $generated@@378) ($generated@@154 ($generated@@331 $generated@@147 $generated@@379))) ($generated@@155 ($generated@@331 $generated@@147 $generated@@379))))))
 :pattern ( ($generated@@84 ($generated@@372 $generated@@378) $generated@@379))
)))
(assert  (and (forall (($generated@@382 T@U) ) (! (= (type ($generated@@380 $generated@@382)) ($generated@@79 $generated@@156 $generated@@4))
 :pattern ( ($generated@@380 $generated@@382))
)) (forall (($generated@@383 T@U) ) (! (let (($generated@@384 ($generated@@314 (type $generated@@383))))
(let (($generated@@385 ($generated@@313 (type $generated@@383))))
(= (type ($generated@@381 $generated@@383)) ($generated@@79 $generated@@385 $generated@@384))))
 :pattern ( ($generated@@381 $generated@@383))
))))
(assert (forall (($generated@@386 T@U) ($generated@@387 T@U) ) (!  (=> (and (= (type $generated@@386) ($generated@@312 $generated@@156 $generated@@156)) (= (type $generated@@387) $generated@@156)) (= ($generated@@0 ($generated@@84 ($generated@@380 $generated@@386) $generated@@387))  (and ($generated@@0 ($generated@@84 ($generated@@310 $generated@@386) ($generated@@154 ($generated@@331 $generated@@147 $generated@@387)))) (= ($generated@@84 ($generated@@381 $generated@@386) ($generated@@154 ($generated@@331 $generated@@147 $generated@@387))) ($generated@@155 ($generated@@331 $generated@@147 $generated@@387))))))
 :pattern ( ($generated@@84 ($generated@@380 $generated@@386) $generated@@387))
)))
(assert (forall (($generated@@388 T@U) ($generated@@389 T@U) ) (! (let (($generated@@390 (type $generated@@389)))
(let (($generated@@391 ($generated@@295 (type $generated@@388))))
 (=> (= (type $generated@@388) ($generated@@294 $generated@@391 $generated@@390)) (= ($generated@@0 ($generated@@84 ($generated@@341 $generated@@388) $generated@@389)) (exists (($generated@@392 T@U) ) (!  (and (= (type $generated@@392) $generated@@391) (and ($generated@@0 ($generated@@84 ($generated@@292 $generated@@388) $generated@@392)) (= $generated@@389 ($generated@@84 ($generated@@373 $generated@@388) $generated@@392))))
 :pattern ( ($generated@@84 ($generated@@292 $generated@@388) $generated@@392))
 :pattern ( ($generated@@84 ($generated@@373 $generated@@388) $generated@@392))
))))))
 :pattern ( ($generated@@84 ($generated@@341 $generated@@388) $generated@@389))
)))
(assert (forall (($generated@@393 T@U) ($generated@@394 T@U) ) (! (let (($generated@@395 (type $generated@@394)))
(let (($generated@@396 ($generated@@313 (type $generated@@393))))
 (=> (= (type $generated@@393) ($generated@@312 $generated@@396 $generated@@395)) (= ($generated@@0 ($generated@@84 ($generated@@352 $generated@@393) $generated@@394)) (exists (($generated@@397 T@U) ) (!  (and (= (type $generated@@397) $generated@@396) (and ($generated@@0 ($generated@@84 ($generated@@310 $generated@@393) $generated@@397)) (= $generated@@394 ($generated@@84 ($generated@@381 $generated@@393) $generated@@397))))
 :pattern ( ($generated@@84 ($generated@@310 $generated@@393) $generated@@397))
 :pattern ( ($generated@@84 ($generated@@381 $generated@@393) $generated@@397))
))))))
 :pattern ( ($generated@@84 ($generated@@352 $generated@@393) $generated@@394))
)))
(assert (forall (($generated@@399 T@U) ($generated@@400 T@U) ) (! (= (type ($generated@@398 $generated@@399 $generated@@400)) $generated@@67)
 :pattern ( ($generated@@398 $generated@@399 $generated@@400))
)))
(assert (forall (($generated@@401 T@U) ($generated@@402 T@U) ($generated@@403 T@U) ($generated@@404 T@U) ) (!  (=> (and (and (and (= (type $generated@@401) ($generated@@294 $generated@@156 $generated@@156)) (= (type $generated@@402) $generated@@67)) (= (type $generated@@403) $generated@@67)) (= (type $generated@@404) ($generated@@79 $generated@@80 $generated@@81))) (= ($generated@@77 $generated@@401 ($generated@@398 $generated@@402 $generated@@403) $generated@@404) (forall (($generated@@405 T@U) ) (!  (=> (and (= (type $generated@@405) $generated@@156) ($generated@@0 ($generated@@84 ($generated@@292 $generated@@401) $generated@@405))) (and ($generated@@253 ($generated@@84 ($generated@@373 $generated@@401) $generated@@405) $generated@@403 $generated@@404) ($generated@@253 $generated@@405 $generated@@402 $generated@@404)))
 :pattern ( ($generated@@84 ($generated@@373 $generated@@401) $generated@@405))
 :pattern ( ($generated@@84 ($generated@@292 $generated@@401) $generated@@405))
))))
 :pattern ( ($generated@@77 $generated@@401 ($generated@@398 $generated@@402 $generated@@403) $generated@@404))
)))
(assert (forall (($generated@@407 T@U) ($generated@@408 T@U) ) (! (= (type ($generated@@406 $generated@@407 $generated@@408)) $generated@@67)
 :pattern ( ($generated@@406 $generated@@407 $generated@@408))
)))
(assert (forall (($generated@@409 T@U) ($generated@@410 T@U) ($generated@@411 T@U) ($generated@@412 T@U) ) (!  (=> (and (and (and (= (type $generated@@409) ($generated@@312 $generated@@156 $generated@@156)) (= (type $generated@@410) $generated@@67)) (= (type $generated@@411) $generated@@67)) (= (type $generated@@412) ($generated@@79 $generated@@80 $generated@@81))) (= ($generated@@77 $generated@@409 ($generated@@406 $generated@@410 $generated@@411) $generated@@412) (forall (($generated@@413 T@U) ) (!  (=> (and (= (type $generated@@413) $generated@@156) ($generated@@0 ($generated@@84 ($generated@@310 $generated@@409) $generated@@413))) (and ($generated@@253 ($generated@@84 ($generated@@381 $generated@@409) $generated@@413) $generated@@411 $generated@@412) ($generated@@253 $generated@@413 $generated@@410 $generated@@412)))
 :pattern ( ($generated@@84 ($generated@@381 $generated@@409) $generated@@413))
 :pattern ( ($generated@@84 ($generated@@310 $generated@@409) $generated@@413))
))))
 :pattern ( ($generated@@77 $generated@@409 ($generated@@406 $generated@@410 $generated@@411) $generated@@412))
)))
(assert (forall (($generated@@414 T@U) ($generated@@415 T@U) ($generated@@416 T@U) ) (!  (=> (and (and (and (and (= (type $generated@@414) ($generated@@79 $generated@@80 $generated@@81)) (= (type $generated@@415) ($generated@@79 $generated@@80 $generated@@81))) (= (type $generated@@416) ($generated@@79 $generated@@80 $generated@@81))) (not (= $generated@@414 $generated@@416))) (and ($generated@@135 $generated@@414 $generated@@415) ($generated@@135 $generated@@415 $generated@@416))) ($generated@@135 $generated@@414 $generated@@416))
 :pattern ( ($generated@@135 $generated@@414 $generated@@415) ($generated@@135 $generated@@415 $generated@@416))
)))
(assert (forall (($generated@@418 T@T) ) (! (= (type ($generated@@417 $generated@@418)) ($generated@@79 $generated@@418 $generated@@4))
 :pattern ( ($generated@@417 $generated@@418))
)))
(assert (forall (($generated@@419 T@U) ) (! (let (($generated@@420 ($generated@@314 (type $generated@@419))))
(let (($generated@@421 ($generated@@313 (type $generated@@419))))
 (=> (= (type $generated@@419) ($generated@@312 $generated@@421 $generated@@420)) (= (= $generated@@419 ($generated@@311 $generated@@421 $generated@@420)) (= ($generated@@310 $generated@@419) ($generated@@417 $generated@@421))))))
 :pattern ( ($generated@@310 $generated@@419))
)))
(assert (forall (($generated@@422 T@U) ) (! (let (($generated@@423 ($generated@@314 (type $generated@@422))))
(let (($generated@@424 ($generated@@313 (type $generated@@422))))
 (=> (= (type $generated@@422) ($generated@@312 $generated@@424 $generated@@423)) (= (= $generated@@422 ($generated@@311 $generated@@424 $generated@@423)) (= ($generated@@352 $generated@@422) ($generated@@417 $generated@@423))))))
 :pattern ( ($generated@@352 $generated@@422))
)))
(assert (forall (($generated@@425 T@U) ) (! (let (($generated@@426 ($generated@@314 (type $generated@@425))))
(let (($generated@@427 ($generated@@313 (type $generated@@425))))
 (=> (= (type $generated@@425) ($generated@@312 $generated@@427 $generated@@426)) (= (= $generated@@425 ($generated@@311 $generated@@427 $generated@@426)) (= ($generated@@380 $generated@@425) ($generated@@417 $generated@@156))))))
 :pattern ( ($generated@@380 $generated@@425))
)))
(assert (forall (($generated@@428 T@U) ) (! (let (($generated@@429 ($generated@@296 (type $generated@@428))))
(let (($generated@@430 ($generated@@295 (type $generated@@428))))
 (=> (= (type $generated@@428) ($generated@@294 $generated@@430 $generated@@429)) (or (= $generated@@428 ($generated@@293 $generated@@430 $generated@@429)) (exists (($generated@@431 T@U) ($generated@@432 T@U) ) (!  (and (and (= (type $generated@@431) $generated@@156) (= (type $generated@@432) $generated@@156)) ($generated@@0 ($generated@@84 ($generated@@372 $generated@@428) ($generated@@273 ($generated@@228 $generated@@431 $generated@@432)))))
 :no-pattern (type $generated@@431)
 :no-pattern (type $generated@@432)
 :no-pattern ($generated $generated@@431)
 :no-pattern ($generated@@0 $generated@@431)
 :no-pattern ($generated $generated@@432)
 :no-pattern ($generated@@0 $generated@@432)
))))))
 :pattern ( ($generated@@372 $generated@@428))
)))
(assert (forall (($generated@@433 T@U) ) (! (let (($generated@@434 ($generated@@314 (type $generated@@433))))
(let (($generated@@435 ($generated@@313 (type $generated@@433))))
 (=> (= (type $generated@@433) ($generated@@312 $generated@@435 $generated@@434)) (or (= $generated@@433 ($generated@@311 $generated@@435 $generated@@434)) (exists (($generated@@436 T@U) ($generated@@437 T@U) ) (!  (and (and (= (type $generated@@436) $generated@@156) (= (type $generated@@437) $generated@@156)) ($generated@@0 ($generated@@84 ($generated@@380 $generated@@433) ($generated@@273 ($generated@@228 $generated@@436 $generated@@437)))))
 :no-pattern (type $generated@@436)
 :no-pattern (type $generated@@437)
 :no-pattern ($generated $generated@@436)
 :no-pattern ($generated@@0 $generated@@436)
 :no-pattern ($generated $generated@@437)
 :no-pattern ($generated@@0 $generated@@437)
))))))
 :pattern ( ($generated@@380 $generated@@433))
)))
(assert (forall (($generated@@438 T@U) ) (!  (=> (and (= (type $generated@@438) $generated@@156) ($generated@@229 $generated@@438 $generated@@46)) (and (= ($generated@@273 ($generated@@331 $generated@@2 $generated@@438)) $generated@@438) ($generated@@143 ($generated@@331 $generated@@2 $generated@@438) $generated@@46)))
 :pattern ( ($generated@@229 $generated@@438 $generated@@46))
)))
(assert (forall (($generated@@439 T@U) ) (!  (=> (and (= (type $generated@@439) $generated@@156) ($generated@@229 $generated@@439 $generated@@47)) (and (= ($generated@@273 ($generated@@331 $generated@@3 $generated@@439)) $generated@@439) ($generated@@143 ($generated@@331 $generated@@3 $generated@@439) $generated@@47)))
 :pattern ( ($generated@@229 $generated@@439 $generated@@47))
)))
(assert (forall (($generated@@440 T@U) ) (!  (=> (and (= (type $generated@@440) $generated@@156) ($generated@@229 $generated@@440 $generated@@44)) (and (= ($generated@@273 ($generated@@331 $generated@@4 $generated@@440)) $generated@@440) ($generated@@143 ($generated@@331 $generated@@4 $generated@@440) $generated@@44)))
 :pattern ( ($generated@@229 $generated@@440 $generated@@44))
)))
(assert (= ($generated@@1 $generated@@441) 20))
(assert (forall (($generated@@442 T@U) ) (!  (=> (and (= (type $generated@@442) $generated@@156) ($generated@@229 $generated@@442 $generated@@45)) (and (= ($generated@@273 ($generated@@331 $generated@@441 $generated@@442)) $generated@@442) ($generated@@143 ($generated@@331 $generated@@441 $generated@@442) $generated@@45)))
 :pattern ( ($generated@@229 $generated@@442 $generated@@45))
)))
(assert (forall (($generated@@443 T@U) ($generated@@444 T@U) ) (!  (=> (= (type $generated@@444) $generated@@67) (= ($generated@@229 ($generated@@273 $generated@@443) $generated@@444) ($generated@@143 $generated@@443 $generated@@444)))
 :pattern ( ($generated@@229 ($generated@@273 $generated@@443) $generated@@444))
)))
(assert (forall (($generated@@445 T@U) ) (! (let (($generated@@446 ($generated@@82 (type $generated@@445))))
 (=> (= (type $generated@@445) ($generated@@79 $generated@@446 $generated@@2)) (<= 0 ($generated@@286 $generated@@445))))
 :pattern ( ($generated@@286 $generated@@445))
)))
(assert (forall (($generated@@447 T@U) ) (! (let (($generated@@448 ($generated@@268 (type $generated@@447))))
 (=> (= (type $generated@@447) ($generated@@267 $generated@@448)) (<= 0 ($generated@@266 $generated@@447))))
 :pattern ( ($generated@@266 $generated@@447))
)))
(assert (forall (($generated@@450 T@U) ) (! (= (type ($generated@@449 $generated@@450)) $generated@@67)
 :pattern ( ($generated@@449 $generated@@450))
)))
(assert (forall (($generated@@451 T@U) ($generated@@452 T@U) ) (!  (=> (and (= (type $generated@@451) $generated@@67) (= (type $generated@@452) $generated@@67)) (= ($generated@@449 ($generated@@398 $generated@@451 $generated@@452)) $generated@@451))
 :pattern ( ($generated@@398 $generated@@451 $generated@@452))
)))
(assert (forall (($generated@@454 T@U) ) (! (= (type ($generated@@453 $generated@@454)) $generated@@67)
 :pattern ( ($generated@@453 $generated@@454))
)))
(assert (forall (($generated@@455 T@U) ($generated@@456 T@U) ) (!  (=> (and (= (type $generated@@455) $generated@@67) (= (type $generated@@456) $generated@@67)) (= ($generated@@453 ($generated@@398 $generated@@455 $generated@@456)) $generated@@456))
 :pattern ( ($generated@@398 $generated@@455 $generated@@456))
)))
(assert (forall (($generated@@457 T@U) ($generated@@458 T@U) ) (!  (=> (and (= (type $generated@@457) $generated@@67) (= (type $generated@@458) $generated@@67)) (= ($generated@@75 ($generated@@398 $generated@@457 $generated@@458)) $generated@@58))
 :pattern ( ($generated@@398 $generated@@457 $generated@@458))
)))
(assert (forall (($generated@@460 T@U) ) (! (= (type ($generated@@459 $generated@@460)) $generated@@67)
 :pattern ( ($generated@@459 $generated@@460))
)))
(assert (forall (($generated@@461 T@U) ($generated@@462 T@U) ) (!  (=> (and (= (type $generated@@461) $generated@@67) (= (type $generated@@462) $generated@@67)) (= ($generated@@459 ($generated@@406 $generated@@461 $generated@@462)) $generated@@461))
 :pattern ( ($generated@@406 $generated@@461 $generated@@462))
)))
(assert (forall (($generated@@464 T@U) ) (! (= (type ($generated@@463 $generated@@464)) $generated@@67)
 :pattern ( ($generated@@463 $generated@@464))
)))
(assert (forall (($generated@@465 T@U) ($generated@@466 T@U) ) (!  (=> (and (= (type $generated@@465) $generated@@67) (= (type $generated@@466) $generated@@67)) (= ($generated@@463 ($generated@@406 $generated@@465 $generated@@466)) $generated@@466))
 :pattern ( ($generated@@406 $generated@@465 $generated@@466))
)))
(assert (forall (($generated@@467 T@U) ($generated@@468 T@U) ) (!  (=> (and (= (type $generated@@467) $generated@@67) (= (type $generated@@468) $generated@@67)) (= ($generated@@75 ($generated@@406 $generated@@467 $generated@@468)) $generated@@59))
 :pattern ( ($generated@@406 $generated@@467 $generated@@468))
)))
(assert (forall (($generated@@469 T@U) ($generated@@470 T@U) ) (!  (=> (and (= (type $generated@@469) $generated@@156) (= (type $generated@@470) $generated@@156)) (= ($generated@@259 ($generated@@228 $generated@@469 $generated@@470)) $generated@@61))
 :pattern ( ($generated@@228 $generated@@469 $generated@@470))
)))
(assert (forall (($generated@@472 T@U) ) (! (= (type ($generated@@471 $generated@@472)) $generated@@67)
 :pattern ( ($generated@@471 $generated@@472))
)))
(assert (forall (($generated@@473 T@U) ($generated@@474 T@U) ) (!  (=> (and (= (type $generated@@473) $generated@@67) (= (type $generated@@474) $generated@@67)) (= ($generated@@471 ($generated@@146 $generated@@473 $generated@@474)) $generated@@473))
 :pattern ( ($generated@@146 $generated@@473 $generated@@474))
)))
(assert (forall (($generated@@476 T@U) ) (! (= (type ($generated@@475 $generated@@476)) $generated@@67)
 :pattern ( ($generated@@475 $generated@@476))
)))
(assert (forall (($generated@@477 T@U) ($generated@@478 T@U) ) (!  (=> (and (= (type $generated@@477) $generated@@67) (= (type $generated@@478) $generated@@67)) (= ($generated@@475 ($generated@@146 $generated@@477 $generated@@478)) $generated@@478))
 :pattern ( ($generated@@146 $generated@@477 $generated@@478))
)))
(assert (forall (($generated@@479 T@U) ($generated@@480 T@U) ) (!  (=> (and (= (type $generated@@479) $generated@@156) (= (type $generated@@480) $generated@@156)) (= ($generated@@154 ($generated@@228 $generated@@479 $generated@@480)) $generated@@479))
 :pattern ( ($generated@@228 $generated@@479 $generated@@480))
)))
(assert (forall (($generated@@481 T@U) ($generated@@482 T@U) ) (!  (=> (and (= (type $generated@@481) $generated@@156) (= (type $generated@@482) $generated@@156)) (= ($generated@@155 ($generated@@228 $generated@@481 $generated@@482)) $generated@@482))
 :pattern ( ($generated@@228 $generated@@481 $generated@@482))
)))
(assert  (and (forall (($generated@@485 T@U) ) (! (= (type ($generated@@483 $generated@@485)) $generated@@67)
 :pattern ( ($generated@@483 $generated@@485))
)) (forall (($generated@@486 T@U) ($generated@@487 Int) ) (! (let (($generated@@488 ($generated@@268 (type $generated@@486))))
(= (type ($generated@@484 $generated@@486 $generated@@487)) $generated@@488))
 :pattern ( ($generated@@484 $generated@@486 $generated@@487))
))))
(assert (forall (($generated@@489 T@U) ($generated@@490 T@U) ($generated@@491 T@U) ) (!  (=> (and (and (= (type $generated@@489) ($generated@@267 $generated@@156)) (= (type $generated@@490) $generated@@67)) (= (type $generated@@491) ($generated@@79 $generated@@80 $generated@@81))) (= ($generated@@77 $generated@@489 ($generated@@483 $generated@@490) $generated@@491) (forall (($generated@@492 Int) ) (!  (=> (and (<= 0 $generated@@492) (< $generated@@492 ($generated@@266 $generated@@489))) ($generated@@253 ($generated@@484 $generated@@489 $generated@@492) $generated@@490 $generated@@491))
 :pattern ( ($generated@@484 $generated@@489 $generated@@492))
))))
 :pattern ( ($generated@@77 $generated@@489 ($generated@@483 $generated@@490) $generated@@491))
)))
(assert (forall (($generated@@494 Int) ) (! (= ($generated@@493 ($generated@@78 $generated@@494)) $generated@@494)
 :pattern ( ($generated@@78 $generated@@494))
)))
(assert (forall (($generated@@496 T@U) ) (! (= (type ($generated@@495 $generated@@496)) $generated@@67)
 :pattern ( ($generated@@495 $generated@@496))
)))
(assert (forall (($generated@@497 T@U) ) (!  (=> (= (type $generated@@497) $generated@@67) (= ($generated@@495 ($generated@@238 $generated@@497)) $generated@@497))
 :pattern ( ($generated@@238 $generated@@497))
)))
(assert (forall (($generated@@498 T@U) ) (!  (=> (= (type $generated@@498) $generated@@67) (= ($generated@@75 ($generated@@238 $generated@@498)) $generated@@54))
 :pattern ( ($generated@@238 $generated@@498))
)))
(assert (forall (($generated@@500 T@U) ) (! (= (type ($generated@@499 $generated@@500)) $generated@@67)
 :pattern ( ($generated@@499 $generated@@500))
)))
(assert (forall (($generated@@501 T@U) ) (!  (=> (= (type $generated@@501) $generated@@67) (= ($generated@@499 ($generated@@243 $generated@@501)) $generated@@501))
 :pattern ( ($generated@@243 $generated@@501))
)))
(assert (forall (($generated@@502 T@U) ) (!  (=> (= (type $generated@@502) $generated@@67) (= ($generated@@75 ($generated@@243 $generated@@502)) $generated@@55))
 :pattern ( ($generated@@243 $generated@@502))
)))
(assert (forall (($generated@@504 T@U) ) (! (= (type ($generated@@503 $generated@@504)) $generated@@67)
 :pattern ( ($generated@@503 $generated@@504))
)))
(assert (forall (($generated@@505 T@U) ) (!  (=> (= (type $generated@@505) $generated@@67) (= ($generated@@503 ($generated@@161 $generated@@505)) $generated@@505))
 :pattern ( ($generated@@161 $generated@@505))
)))
(assert (forall (($generated@@506 T@U) ) (!  (=> (= (type $generated@@506) $generated@@67) (= ($generated@@75 ($generated@@161 $generated@@506)) $generated@@56))
 :pattern ( ($generated@@161 $generated@@506))
)))
(assert (forall (($generated@@508 T@U) ) (! (= (type ($generated@@507 $generated@@508)) $generated@@67)
 :pattern ( ($generated@@507 $generated@@508))
)))
(assert (forall (($generated@@509 T@U) ) (!  (=> (= (type $generated@@509) $generated@@67) (= ($generated@@507 ($generated@@483 $generated@@509)) $generated@@509))
 :pattern ( ($generated@@483 $generated@@509))
)))
(assert (forall (($generated@@510 T@U) ) (!  (=> (= (type $generated@@510) $generated@@67) (= ($generated@@75 ($generated@@483 $generated@@510)) $generated@@57))
 :pattern ( ($generated@@483 $generated@@510))
)))
(assert (forall (($generated@@511 T@U) ) (! (let (($generated@@512 (type $generated@@511)))
(= ($generated@@331 $generated@@512 ($generated@@273 $generated@@511)) $generated@@511))
 :pattern ( ($generated@@273 $generated@@511))
)))
(assert (forall (($generated@@513 T@U) ($generated@@514 T@U) ($generated@@515 T@U) ) (!  (=> (and (and (= (type $generated@@513) ($generated@@294 $generated@@156 $generated@@156)) (= (type $generated@@514) $generated@@67)) (= (type $generated@@515) $generated@@67)) (= ($generated@@143 $generated@@513 ($generated@@398 $generated@@514 $generated@@515)) (forall (($generated@@516 T@U) ) (!  (=> (and (= (type $generated@@516) $generated@@156) ($generated@@0 ($generated@@84 ($generated@@292 $generated@@513) $generated@@516))) (and ($generated@@229 ($generated@@84 ($generated@@373 $generated@@513) $generated@@516) $generated@@515) ($generated@@229 $generated@@516 $generated@@514)))
 :pattern ( ($generated@@84 ($generated@@373 $generated@@513) $generated@@516))
 :pattern ( ($generated@@84 ($generated@@292 $generated@@513) $generated@@516))
))))
 :pattern ( ($generated@@143 $generated@@513 ($generated@@398 $generated@@514 $generated@@515)))
)))
(assert (forall (($generated@@517 T@U) ($generated@@518 T@U) ($generated@@519 T@U) ) (!  (=> (and (and (= (type $generated@@517) ($generated@@312 $generated@@156 $generated@@156)) (= (type $generated@@518) $generated@@67)) (= (type $generated@@519) $generated@@67)) (= ($generated@@143 $generated@@517 ($generated@@406 $generated@@518 $generated@@519)) (forall (($generated@@520 T@U) ) (!  (=> (and (= (type $generated@@520) $generated@@156) ($generated@@0 ($generated@@84 ($generated@@310 $generated@@517) $generated@@520))) (and ($generated@@229 ($generated@@84 ($generated@@381 $generated@@517) $generated@@520) $generated@@519) ($generated@@229 $generated@@520 $generated@@518)))
 :pattern ( ($generated@@84 ($generated@@381 $generated@@517) $generated@@520))
 :pattern ( ($generated@@84 ($generated@@310 $generated@@517) $generated@@520))
))))
 :pattern ( ($generated@@143 $generated@@517 ($generated@@406 $generated@@518 $generated@@519)))
)))
(assert (forall (($generated@@523 T@U) ($generated@@524 T@U) ) (!  (=> (and (= (type $generated@@523) $generated@@156) (= (type $generated@@524) $generated@@156)) (< ($generated@@521 $generated@@523) ($generated@@522 ($generated@@228 $generated@@523 $generated@@524))))
 :pattern ( ($generated@@228 $generated@@523 $generated@@524))
)))
(assert (forall (($generated@@525 T@U) ($generated@@526 T@U) ) (!  (=> (and (= (type $generated@@525) $generated@@156) (= (type $generated@@526) $generated@@156)) (< ($generated@@521 $generated@@526) ($generated@@522 ($generated@@228 $generated@@525 $generated@@526))))
 :pattern ( ($generated@@228 $generated@@525 $generated@@526))
)))
(assert (forall (($generated@@527 T@U) ($generated@@528 T@U) ($generated@@529 T@U) ) (!  (=> (and (and (and (= (type $generated@@527) $generated@@156) (= (type $generated@@528) $generated@@67)) (= (type $generated@@529) $generated@@67)) ($generated@@229 $generated@@527 ($generated@@398 $generated@@528 $generated@@529))) (and (= ($generated@@273 ($generated@@331 ($generated@@294 $generated@@156 $generated@@156) $generated@@527)) $generated@@527) ($generated@@143 ($generated@@331 ($generated@@294 $generated@@156 $generated@@156) $generated@@527) ($generated@@398 $generated@@528 $generated@@529))))
 :pattern ( ($generated@@229 $generated@@527 ($generated@@398 $generated@@528 $generated@@529)))
)))
(assert (forall (($generated@@530 T@U) ($generated@@531 T@U) ($generated@@532 T@U) ) (!  (=> (and (and (and (= (type $generated@@530) $generated@@156) (= (type $generated@@531) $generated@@67)) (= (type $generated@@532) $generated@@67)) ($generated@@229 $generated@@530 ($generated@@406 $generated@@531 $generated@@532))) (and (= ($generated@@273 ($generated@@331 ($generated@@312 $generated@@156 $generated@@156) $generated@@530)) $generated@@530) ($generated@@143 ($generated@@331 ($generated@@312 $generated@@156 $generated@@156) $generated@@530) ($generated@@406 $generated@@531 $generated@@532))))
 :pattern ( ($generated@@229 $generated@@530 ($generated@@406 $generated@@531 $generated@@532)))
)))
(assert (forall (($generated@@533 T@U) ($generated@@534 T@U) ($generated@@535 T@U) ) (!  (=> (and (and (and (= (type $generated@@533) $generated@@67) (= (type $generated@@534) $generated@@67)) (= (type $generated@@535) $generated@@156)) ($generated@@229 $generated@@535 ($generated@@146 $generated@@533 $generated@@534))) (and (= ($generated@@273 ($generated@@331 $generated@@147 $generated@@535)) $generated@@535) ($generated@@143 ($generated@@331 $generated@@147 $generated@@535) ($generated@@146 $generated@@533 $generated@@534))))
 :pattern ( ($generated@@229 $generated@@535 ($generated@@146 $generated@@533 $generated@@534)))
)))
(assert (forall (($generated@@536 T@U) ) (! (let (($generated@@537 (type $generated@@536)))
 (not ($generated@@0 ($generated@@84 ($generated@@417 $generated@@537) $generated@@536))))
 :pattern ( (let (($generated@@537 (type $generated@@536)))
($generated@@84 ($generated@@417 $generated@@537) $generated@@536)))
)))
(assert (forall (($generated@@539 T@U) ) (! (= (type ($generated@@538 $generated@@539)) $generated@@72)
 :pattern ( ($generated@@538 $generated@@539))
)))
(assert (forall (($generated@@540 T@U) ($generated@@541 T@U) ) (!  (=> (and (= (type $generated@@540) $generated@@67) (= (type $generated@@541) $generated@@67)) (and (= ($generated@@75 ($generated@@146 $generated@@540 $generated@@541)) $generated@@62) (= ($generated@@538 ($generated@@146 $generated@@540 $generated@@541)) $generated@@65)))
 :pattern ( ($generated@@146 $generated@@540 $generated@@541))
)))
(assert (forall (($generated@@542 T@U) ) (!  (=> (= (type $generated@@542) $generated@@147) (= ($generated@@521 ($generated@@273 $generated@@542)) ($generated@@522 $generated@@542)))
 :pattern ( ($generated@@521 ($generated@@273 $generated@@542)))
)))
(assert (forall (($generated@@543 T@U) ) (!  (=> (and (= (type $generated@@543) $generated@@156) ($generated@@229 $generated@@543 ($generated@@78 0))) (and (= ($generated@@273 ($generated@@331 $generated@@2 $generated@@543)) $generated@@543) ($generated@@143 ($generated@@331 ($generated@@79 $generated@@156 $generated@@4) $generated@@543) ($generated@@78 0))))
 :pattern ( ($generated@@229 $generated@@543 ($generated@@78 0)))
)))
(assert (forall (($generated@@544 T@U) ($generated@@545 T@U) ) (!  (=> (and (and (= (type $generated@@544) $generated@@156) (= (type $generated@@545) $generated@@67)) ($generated@@229 $generated@@544 ($generated@@238 $generated@@545))) (and (= ($generated@@273 ($generated@@331 ($generated@@79 $generated@@156 $generated@@4) $generated@@544)) $generated@@544) ($generated@@143 ($generated@@331 ($generated@@79 $generated@@156 $generated@@4) $generated@@544) ($generated@@238 $generated@@545))))
 :pattern ( ($generated@@229 $generated@@544 ($generated@@238 $generated@@545)))
)))
(assert (forall (($generated@@546 T@U) ($generated@@547 T@U) ) (!  (=> (and (and (= (type $generated@@546) $generated@@156) (= (type $generated@@547) $generated@@67)) ($generated@@229 $generated@@546 ($generated@@243 $generated@@547))) (and (= ($generated@@273 ($generated@@331 ($generated@@79 $generated@@156 $generated@@4) $generated@@546)) $generated@@546) ($generated@@143 ($generated@@331 ($generated@@79 $generated@@156 $generated@@4) $generated@@546) ($generated@@243 $generated@@547))))
 :pattern ( ($generated@@229 $generated@@546 ($generated@@243 $generated@@547)))
)))
(assert (forall (($generated@@548 T@U) ($generated@@549 T@U) ) (!  (=> (and (and (= (type $generated@@548) $generated@@156) (= (type $generated@@549) $generated@@67)) ($generated@@229 $generated@@548 ($generated@@161 $generated@@549))) (and (= ($generated@@273 ($generated@@331 ($generated@@79 $generated@@156 $generated@@2) $generated@@548)) $generated@@548) ($generated@@143 ($generated@@331 ($generated@@79 $generated@@156 $generated@@2) $generated@@548) ($generated@@161 $generated@@549))))
 :pattern ( ($generated@@229 $generated@@548 ($generated@@161 $generated@@549)))
)))
(assert (forall (($generated@@550 T@U) ($generated@@551 T@U) ) (!  (=> (and (and (= (type $generated@@550) $generated@@156) (= (type $generated@@551) $generated@@67)) ($generated@@229 $generated@@550 ($generated@@483 $generated@@551))) (and (= ($generated@@273 ($generated@@331 ($generated@@267 $generated@@156) $generated@@550)) $generated@@550) ($generated@@143 ($generated@@331 ($generated@@267 $generated@@156) $generated@@550) ($generated@@483 $generated@@551))))
 :pattern ( ($generated@@229 $generated@@550 ($generated@@483 $generated@@551)))
)))
(assert (forall (($generated@@552 T@U) ($generated@@553 T@U) ($generated@@554 T@U) ($generated@@555 T@U) ) (! (let (($generated@@556 (type $generated@@555)))
 (=> (and (and (and (= (type $generated@@552) ($generated@@79 $generated@@80 $generated@@81)) (= (type $generated@@553) $generated@@80)) (= (type $generated@@554) ($generated@@69 $generated@@556))) ($generated@@252 ($generated@@85 $generated@@552 $generated@@553 ($generated@@87 ($generated@@84 $generated@@552 $generated@@553) $generated@@554 $generated@@555)))) ($generated@@135 $generated@@552 ($generated@@85 $generated@@552 $generated@@553 ($generated@@87 ($generated@@84 $generated@@552 $generated@@553) $generated@@554 $generated@@555)))))
 :pattern ( ($generated@@85 $generated@@552 $generated@@553 ($generated@@87 ($generated@@84 $generated@@552 $generated@@553) $generated@@554 $generated@@555)))
)))
(assert (= ($generated@@75 $generated@@139) $generated@@63))
(assert (= ($generated@@538 $generated@@139) $generated@@66))
(assert (= ($generated@@75 $generated@@225) $generated@@64))
(assert (= ($generated@@538 $generated@@225) $generated@@66))
(assert (forall (($generated@@557 T@U) ($generated@@558 T@U) ($generated@@559 T@U) ) (!  (=> (and (and (= (type $generated@@557) ($generated@@79 $generated@@156 $generated@@2)) (= (type $generated@@558) $generated@@67)) (= (type $generated@@559) ($generated@@79 $generated@@80 $generated@@81))) (= ($generated@@77 $generated@@557 ($generated@@161 $generated@@558) $generated@@559) (forall (($generated@@560 T@U) ) (!  (=> (and (= (type $generated@@560) $generated@@156) (< 0 ($generated ($generated@@84 $generated@@557 $generated@@560)))) ($generated@@253 $generated@@560 $generated@@558 $generated@@559))
 :pattern ( ($generated@@84 $generated@@557 $generated@@560))
))))
 :pattern ( ($generated@@77 $generated@@557 ($generated@@161 $generated@@558) $generated@@559))
)))
(assert (forall (($generated@@561 T@U) ($generated@@562 T@U) ($generated@@563 T@U) ) (!  (=> (and (and (and (= (type $generated@@561) $generated@@147) (= (type $generated@@562) $generated@@67)) (= (type $generated@@563) ($generated@@79 $generated@@80 $generated@@81))) (and ($generated@@252 $generated@@563) (and ($generated@@145 $generated@@561) (exists (($generated@@564 T@U) ) (!  (and (= (type $generated@@564) $generated@@67) ($generated@@77 $generated@@561 ($generated@@146 $generated@@562 $generated@@564) $generated@@563))
 :pattern ( ($generated@@77 $generated@@561 ($generated@@146 $generated@@562 $generated@@564) $generated@@563))
))))) ($generated@@253 ($generated@@154 $generated@@561) $generated@@562 $generated@@563))
 :pattern ( ($generated@@253 ($generated@@154 $generated@@561) $generated@@562 $generated@@563))
)))
(assert (forall (($generated@@565 T@U) ($generated@@566 T@U) ($generated@@567 T@U) ) (!  (=> (and (and (and (= (type $generated@@565) $generated@@147) (= (type $generated@@566) $generated@@67)) (= (type $generated@@567) ($generated@@79 $generated@@80 $generated@@81))) (and ($generated@@252 $generated@@567) (and ($generated@@145 $generated@@565) (exists (($generated@@568 T@U) ) (!  (and (= (type $generated@@568) $generated@@67) ($generated@@77 $generated@@565 ($generated@@146 $generated@@568 $generated@@566) $generated@@567))
 :pattern ( ($generated@@77 $generated@@565 ($generated@@146 $generated@@568 $generated@@566) $generated@@567))
))))) ($generated@@253 ($generated@@155 $generated@@565) $generated@@566 $generated@@567))
 :pattern ( ($generated@@253 ($generated@@155 $generated@@565) $generated@@566 $generated@@567))
)))
(assert (forall (($generated@@569 T@U) ($generated@@570 T@U) ) (!  (=> (and (= (type $generated@@569) $generated@@156) (= (type $generated@@570) $generated@@156)) (= ($generated@@228 ($generated@@248 $generated@@569) ($generated@@248 $generated@@570)) ($generated@@248 ($generated@@228 $generated@@569 $generated@@570))))
 :pattern ( ($generated@@228 ($generated@@248 $generated@@569) ($generated@@248 $generated@@570)))
)))
(assert (forall (($generated@@571 T@U) ) (! (= ($generated@@273 ($generated@@248 $generated@@571)) ($generated@@248 ($generated@@273 $generated@@571)))
 :pattern ( ($generated@@273 ($generated@@248 $generated@@571)))
)))
(assert (forall (($generated@@572 T@U) ) (! (let (($generated@@573 ($generated@@268 (type $generated@@572))))
 (=> (and (= (type $generated@@572) ($generated@@267 $generated@@573)) (= ($generated@@266 $generated@@572) 0)) (= $generated@@572 ($generated@@265 $generated@@573))))
 :pattern ( ($generated@@266 $generated@@572))
)))
(assert (forall (($generated@@574 T@U) ($generated@@575 T@U) ($generated@@576 T@U) ) (! (let (($generated@@577 (type $generated@@575)))
 (=> (and (and (= (type $generated@@574) ($generated@@79 $generated@@577 $generated@@2)) (= (type $generated@@576) $generated@@2)) (<= 0 ($generated $generated@@576))) (= ($generated@@286 ($generated@@85 $generated@@574 $generated@@575 $generated@@576)) (+ (- ($generated@@286 $generated@@574) ($generated ($generated@@84 $generated@@574 $generated@@575))) ($generated $generated@@576)))))
 :pattern ( ($generated@@286 ($generated@@85 $generated@@574 $generated@@575 $generated@@576)))
)))
(assert (forall (($generated@@578 T@U) ($generated@@579 T@U) ) (!  (=> (and (= (type $generated@@578) ($generated@@79 $generated@@80 $generated@@81)) (= (type $generated@@579) $generated@@2)) ($generated@@77 $generated@@579 $generated@@46 $generated@@578))
 :pattern ( ($generated@@77 $generated@@579 $generated@@46 $generated@@578))
)))
(assert (forall (($generated@@580 T@U) ($generated@@581 T@U) ) (!  (=> (and (= (type $generated@@580) ($generated@@79 $generated@@80 $generated@@81)) (= (type $generated@@581) $generated@@3)) ($generated@@77 $generated@@581 $generated@@47 $generated@@580))
 :pattern ( ($generated@@77 $generated@@581 $generated@@47 $generated@@580))
)))
(assert (forall (($generated@@582 T@U) ($generated@@583 T@U) ) (!  (=> (and (= (type $generated@@582) ($generated@@79 $generated@@80 $generated@@81)) (= (type $generated@@583) $generated@@4)) ($generated@@77 $generated@@583 $generated@@44 $generated@@582))
 :pattern ( ($generated@@77 $generated@@583 $generated@@44 $generated@@582))
)))
(assert (forall (($generated@@584 T@U) ($generated@@585 T@U) ) (!  (=> (and (= (type $generated@@584) ($generated@@79 $generated@@80 $generated@@81)) (= (type $generated@@585) $generated@@441)) ($generated@@77 $generated@@585 $generated@@45 $generated@@584))
 :pattern ( ($generated@@77 $generated@@585 $generated@@45 $generated@@584))
)))
(assert (forall (($generated@@586 T@U) ($generated@@587 T@U) ) (!  (=> (and (= (type $generated@@586) ($generated@@79 $generated@@80 $generated@@81)) (= (type $generated@@587) $generated@@156)) ($generated@@77 $generated@@587 $generated@@48 $generated@@586))
 :pattern ( ($generated@@77 $generated@@587 $generated@@48 $generated@@586))
)))
(assert (forall (($generated@@588 T@U) ($generated@@589 T@U) ) (!  (=> (and (= (type $generated@@588) ($generated@@267 $generated@@156)) (= (type $generated@@589) $generated@@67)) (= ($generated@@143 $generated@@588 ($generated@@483 $generated@@589)) (forall (($generated@@590 Int) ) (!  (=> (and (<= 0 $generated@@590) (< $generated@@590 ($generated@@266 $generated@@588))) ($generated@@229 ($generated@@484 $generated@@588 $generated@@590) $generated@@589))
 :pattern ( ($generated@@484 $generated@@588 $generated@@590))
))))
 :pattern ( ($generated@@143 $generated@@588 ($generated@@483 $generated@@589)))
)))
(assert (forall (($generated@@592 T@U) ($generated@@593 Int) ) (!  (=> (= (type $generated@@592) ($generated@@267 $generated@@156)) (=> (and (<= 0 $generated@@593) (< $generated@@593 ($generated@@266 $generated@@592))) (< ($generated@@522 ($generated@@331 $generated@@147 ($generated@@484 $generated@@592 $generated@@593))) ($generated@@591 $generated@@592))))
 :pattern ( ($generated@@522 ($generated@@331 $generated@@147 ($generated@@484 $generated@@592 $generated@@593))))
)))
(assert (forall (($generated@@594 T@U) ($generated@@595 T@U) ($generated@@596 T@U) ) (!  (=> (and (and (and (= (type $generated@@594) ($generated@@294 $generated@@156 $generated@@156)) (= (type $generated@@595) $generated@@67)) (= (type $generated@@596) $generated@@67)) ($generated@@143 $generated@@594 ($generated@@398 $generated@@595 $generated@@596))) (and (and ($generated@@143 ($generated@@292 $generated@@594) ($generated@@238 $generated@@595)) ($generated@@143 ($generated@@341 $generated@@594) ($generated@@238 $generated@@596))) ($generated@@143 ($generated@@372 $generated@@594) ($generated@@238 ($generated@@146 $generated@@595 $generated@@596)))))
 :pattern ( ($generated@@143 $generated@@594 ($generated@@398 $generated@@595 $generated@@596)))
)))
(assert (forall (($generated@@597 T@U) ($generated@@598 T@U) ($generated@@599 T@U) ) (!  (=> (and (and (and (= (type $generated@@597) ($generated@@312 $generated@@156 $generated@@156)) (= (type $generated@@598) $generated@@67)) (= (type $generated@@599) $generated@@67)) ($generated@@143 $generated@@597 ($generated@@406 $generated@@598 $generated@@599))) (and (and ($generated@@143 ($generated@@310 $generated@@597) ($generated@@243 $generated@@598)) ($generated@@143 ($generated@@352 $generated@@597) ($generated@@243 $generated@@599))) ($generated@@143 ($generated@@380 $generated@@597) ($generated@@243 ($generated@@146 $generated@@598 $generated@@599)))))
 :pattern ( ($generated@@143 $generated@@597 ($generated@@406 $generated@@598 $generated@@599)))
)))
(assert (forall (($generated@@600 T@U) ) (!  (=> (= (type $generated@@600) $generated@@2) ($generated@@143 $generated@@600 $generated@@46))
 :pattern ( ($generated@@143 $generated@@600 $generated@@46))
)))
(assert (forall (($generated@@601 T@U) ) (!  (=> (= (type $generated@@601) $generated@@3) ($generated@@143 $generated@@601 $generated@@47))
 :pattern ( ($generated@@143 $generated@@601 $generated@@47))
)))
(assert (forall (($generated@@602 T@U) ) (!  (=> (= (type $generated@@602) $generated@@4) ($generated@@143 $generated@@602 $generated@@44))
 :pattern ( ($generated@@143 $generated@@602 $generated@@44))
)))
(assert (forall (($generated@@603 T@U) ) (!  (=> (= (type $generated@@603) $generated@@441) ($generated@@143 $generated@@603 $generated@@45))
 :pattern ( ($generated@@143 $generated@@603 $generated@@45))
)))
(assert (forall (($generated@@604 T@U) ) (!  (=> (= (type $generated@@604) $generated@@156) ($generated@@143 $generated@@604 $generated@@48))
 :pattern ( ($generated@@143 $generated@@604 $generated@@48))
)))
(push 1)
(declare-fun ControlFlow (Int Int) Int)
(declare-fun $generated@@605 () T@U)
(declare-fun $generated@@606 () T@U)
(declare-fun $generated@@607 () T@U)
(declare-fun $generated@@608 () T@U)
(declare-fun $generated@@609 (T@U) Bool)
(declare-fun $generated@@610 () Bool)
(declare-fun $generated@@611 () T@U)
(declare-fun $generated@@612 () Int)
(assert  (and (and (and (and (= (type $generated@@605) ($generated@@171 $generated@@80 $generated@@4)) (= (type $generated@@606) ($generated@@79 $generated@@80 $generated@@81))) (= (type $generated@@607) $generated@@80)) (= (type $generated@@608) ($generated@@79 $generated@@80 $generated@@81))) (= (type $generated@@611) $generated@@80)))
(set-option :timeout 0)
(set-option :rlimit 0)
(assert (not
 (=> (= (ControlFlow 0 0) 3) (let (($generated@@613  (=> (= $generated@@605 ($generated@@170 $generated@@140 $generated@@606 $generated@@60 false)) (=> (and (and (and (not (= $generated@@607 $generated@@140)) (= ($generated@@166 $generated@@607) $generated@@139)) (not ($generated@@0 ($generated@@86 ($generated@@84 $generated@@606 $generated@@607) $generated@@60)))) (and (and (= $generated@@608 ($generated@@85 $generated@@606 $generated@@607 ($generated@@87 ($generated@@84 $generated@@606 $generated@@607) $generated@@60 ($generated@@11 true)))) ($generated@@252 $generated@@608)) (and ($generated@@609 $generated@@608) (= (ControlFlow 0 2) (- 0 1))))) true))))
(let (($generated@@614  (=> (and (and (and ($generated@@252 $generated@@606) ($generated@@609 $generated@@606)) (=> $generated@@610 (and ($generated@@143 $generated@@611 $generated@@225) ($generated@@77 $generated@@611 $generated@@225 $generated@@606)))) (and (= 1 $generated@@612) (= (ControlFlow 0 3) 2))) $generated@@613)))
$generated@@614)))
))
(check-sat)
(pop 1)
; Valid
(get-info :rlimit)
