(set-logic UFLIRA)
(set-option :print-success false)
(set-info :smt-lib-version 2.6)
(set-option :auto_config false)
(set-option :type_check true)
(set-option :smt.case_split 3)
(set-option :smt.qi.eager_threshold 100)
(set-option :smt.delay_units true)
(set-option :smt.arith.solver 2)
(set-option :smt.mbqi false)
(set-option :model.compact false)
(set-option :model.v2 true)
(set-option :pp.bv_literals false)
; done setting options


(set-info :category "industrial")
(declare-sort |T@U| 0)
(declare-sort |T@T| 0)
(declare-fun real_pow (Real Real) Real)
(declare-fun UOrdering2 (|T@U| |T@U|) Bool)
(declare-fun UOrdering3 (|T@T| |T@U| |T@U|) Bool)
(declare-fun tickleBool (Bool) Bool)
(assert (and (tickleBool true) (tickleBool false)))
(declare-fun $generated (T@U) Int)
(declare-fun $generated@@0 (T@U) Bool)
(declare-fun $generated@@1 (T@T) Int)
(declare-fun $generated@@2 () T@T)
(declare-fun $generated@@3 () T@T)
(declare-fun $generated@@4 () T@T)
(declare-fun $generated@@5 () T@T)
(declare-fun $generated@@6 () T@T)
(declare-fun $generated@@7 () T@T)
(declare-fun $generated@@8 (Int) T@U)
(declare-fun type (T@U) T@T)
(declare-fun $generated@@9 (Real) T@U)
(declare-fun $generated@@10 (T@U) Real)
(declare-fun $generated@@11 (Bool) T@U)
(declare-fun $generated@@12 (RoundingMode) T@U)
(declare-fun $generated@@13 (T@U) RoundingMode)
(declare-fun $generated@@14 (String) T@U)
(declare-fun $generated@@15 (T@U) String)
(declare-fun $generated@@16 ((RegEx String)) T@U)
(declare-fun $generated@@17 (T@U) (RegEx String))
(declare-fun $generated@@44 () T@U)
(declare-fun $generated@@45 () T@U)
(declare-fun $generated@@46 () T@U)
(declare-fun $generated@@47 () T@U)
(declare-fun $generated@@48 () T@U)
(declare-fun $generated@@49 () T@U)
(declare-fun $generated@@50 () T@U)
(declare-fun $generated@@51 () T@U)
(declare-fun $generated@@52 () T@U)
(declare-fun $generated@@53 () T@U)
(declare-fun $generated@@54 () T@U)
(declare-fun $generated@@55 () T@U)
(declare-fun $generated@@56 () T@U)
(declare-fun $generated@@57 () T@U)
(declare-fun $generated@@58 () T@U)
(declare-fun $generated@@59 () T@U)
(declare-fun $generated@@60 () T@U)
(declare-fun $generated@@61 () T@U)
(declare-fun $generated@@62 () T@U)
(declare-fun $generated@@63 () T@U)
(declare-fun $generated@@64 () T@U)
(declare-fun $generated@@65 () T@U)
(declare-fun $generated@@66 () T@U)
(declare-fun $generated@@67 () T@U)
(declare-fun $generated@@68 () T@U)
(declare-fun $generated@@69 () T@U)
(declare-fun $generated@@70 () T@T)
(declare-fun $generated@@71 () T@T)
(declare-fun $generated@@72 (T@T) T@T)
(declare-fun $generated@@73 (T@T) T@T)
(declare-fun $generated@@74 () T@T)
(declare-fun $generated@@75 () T@T)
(declare-fun $generated@@78 (T@U) T@U)
(declare-fun $generated@@80 (T@U T@U T@U) Bool)
(declare-fun $generated@@81 (Int) T@U)
(declare-fun $generated@@82 (T@T T@T) T@T)
(declare-fun $generated@@83 () T@T)
(declare-fun $generated@@84 () T@T)
(declare-fun $generated@@85 (T@T) T@T)
(declare-fun $generated@@86 (T@T) T@T)
(declare-fun $generated@@87 (T@U T@U) T@U)
(declare-fun $generated@@88 (T@U T@U T@U) T@U)
(declare-fun $generated@@89 (T@U T@U) T@U)
(declare-fun $generated@@90 (T@U T@U T@U) T@U)
(declare-fun $generated@@138 (T@U T@U) Bool)
(declare-fun $generated@@140 (T@U) Bool)
(declare-fun $generated@@141 (T@U T@U) T@U)
(declare-fun $generated@@142 () T@T)
(declare-fun $generated@@148 (T@U T@U) Bool)
(declare-fun $generated@@149 (T@U) T@U)
(declare-fun $generated@@150 (T@U) T@U)
(declare-fun $generated@@151 () T@T)
(declare-fun $generated@@156 (T@U) T@U)
(declare-fun $generated@@157 () T@U)
(declare-fun $generated@@159 () T@U)
(declare-fun $generated@@160 () T@U)
(declare-fun $generated@@161 () T@U)
(declare-fun $generated@@162 (T@U) T@U)
(declare-fun $generated@@163 (T@U) Bool)
(declare-fun $generated@@167 (T@U T@U T@U) T@U)
(declare-fun $generated@@168 (T@U T@U T@U Bool) T@U)
(declare-fun $generated@@169 (T@T T@T) T@T)
(declare-fun $generated@@170 (T@T) T@T)
(declare-fun $generated@@171 (T@T) T@T)
(declare-fun $generated@@172 (T@U T@U T@U T@U) T@U)
(declare-fun $generated@@223 (T@U T@U) T@U)
(declare-fun $generated@@224 (T@U T@U) Bool)
(declare-fun $generated@@231 () T@U)
(declare-fun $generated@@232 (T@U) Bool)
(declare-fun $generated@@239 (T@U T@U) Bool)
(declare-fun $generated@@242 (T@U) T@U)
(declare-fun $generated@@247 (T@U) T@U)
(declare-fun $generated@@252 (T@U) T@U)
(declare-fun $generated@@256 (T@U) Bool)
(declare-fun $generated@@259 (T@U) Bool)
(declare-fun $generated@@262 (T@U) Bool)
(declare-fun $generated@@265 (T@U) Bool)
(declare-fun $generated@@268 (T@U T@U T@U) Bool)
(declare-fun $generated@@282 (T@T) T@U)
(declare-fun $generated@@283 (T@U) Int)
(declare-fun $generated@@284 (T@T) T@T)
(declare-fun $generated@@285 (T@T) T@T)
(declare-fun $generated@@294 (T@U) T@U)
(declare-fun $generated@@299 (T@U) Int)
(declare-fun $generated@@300 (T@T) T@U)
(declare-fun $generated@@305 (T@U) T@U)
(declare-fun $generated@@306 (T@T T@T) T@U)
(declare-fun $generated@@307 (T@T T@T) T@T)
(declare-fun $generated@@308 (T@T) T@T)
(declare-fun $generated@@309 (T@T) T@T)
(declare-fun $generated@@323 (T@U) T@U)
(declare-fun $generated@@324 (T@T T@T) T@U)
(declare-fun $generated@@325 (T@T T@T) T@T)
(declare-fun $generated@@326 (T@T) T@T)
(declare-fun $generated@@327 (T@T) T@T)
(declare-fun $generated@@344 (T@T T@U) T@U)
(declare-fun $generated@@352 (T@U) T@U)
(declare-fun $generated@@363 (T@U) T@U)
(declare-fun $generated@@383 (T@U) T@U)
(declare-fun $generated@@384 (T@U) T@U)
(declare-fun $generated@@391 (T@U) T@U)
(declare-fun $generated@@392 (T@U) T@U)
(declare-fun $generated@@409 (T@U T@U) T@U)
(declare-fun $generated@@417 (T@U T@U) T@U)
(declare-fun $generated@@425 (T@T) T@U)
(declare-fun $generated@@449 () T@T)
(declare-fun $generated@@457 (T@U) T@U)
(declare-fun $generated@@461 (T@U) T@U)
(declare-fun $generated@@467 (T@U) T@U)
(declare-fun $generated@@471 (T@U) T@U)
(declare-fun $generated@@479 (T@U) T@U)
(declare-fun $generated@@483 (T@U) T@U)
(declare-fun $generated@@491 (T@U) T@U)
(declare-fun $generated@@492 (T@U Int) T@U)
(declare-fun $generated@@501 (T@U) Int)
(declare-fun $generated@@503 (T@U) T@U)
(declare-fun $generated@@507 (T@U) T@U)
(declare-fun $generated@@511 (T@U) T@U)
(declare-fun $generated@@515 (T@U) T@U)
(declare-fun $generated@@529 (T@U) Int)
(declare-fun $generated@@530 (T@U) Int)
(declare-fun $generated@@546 (T@U) T@U)
(declare-fun $generated@@564 (T@U) Bool)
(declare-fun $generated@@597 (T@U) Int)
(assert  (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (= ($generated@@1 $generated@@2) 0) (= ($generated@@1 $generated@@3) 1)) (= ($generated@@1 $generated@@4) 2)) (= ($generated@@1 $generated@@5) 3)) (= ($generated@@1 $generated@@6) 4)) (= ($generated@@1 $generated@@7) 5)) (forall (($generated@@18 Int) ) (! (= ($generated ($generated@@8 $generated@@18)) $generated@@18)
 :pattern ( ($generated@@8 $generated@@18))
))) (forall (($generated@@19 T@U) ) (!  (=> (= (type $generated@@19) $generated@@2) (= ($generated@@8 ($generated $generated@@19)) $generated@@19))
 :pattern ( ($generated $generated@@19))
))) (forall (($generated@@20 Int) ) (! (= (type ($generated@@8 $generated@@20)) $generated@@2)
 :pattern ( ($generated@@8 $generated@@20))
))) (forall (($generated@@21 Real) ) (! (= ($generated@@10 ($generated@@9 $generated@@21)) $generated@@21)
 :pattern ( ($generated@@9 $generated@@21))
))) (forall (($generated@@22 T@U) ) (!  (=> (= (type $generated@@22) $generated@@3) (= ($generated@@9 ($generated@@10 $generated@@22)) $generated@@22))
 :pattern ( ($generated@@10 $generated@@22))
))) (forall (($generated@@23 Real) ) (! (= (type ($generated@@9 $generated@@23)) $generated@@3)
 :pattern ( ($generated@@9 $generated@@23))
))) (forall (($generated@@24 Bool) ) (! (= ($generated@@0 ($generated@@11 $generated@@24)) $generated@@24)
 :pattern ( ($generated@@11 $generated@@24))
))) (forall (($generated@@25 T@U) ) (!  (=> (= (type $generated@@25) $generated@@4) (= ($generated@@11 ($generated@@0 $generated@@25)) $generated@@25))
 :pattern ( ($generated@@0 $generated@@25))
))) (forall (($generated@@26 Bool) ) (! (= (type ($generated@@11 $generated@@26)) $generated@@4)
 :pattern ( ($generated@@11 $generated@@26))
))) (forall (($generated@@27 RoundingMode) ) (! (= ($generated@@13 ($generated@@12 $generated@@27)) $generated@@27)
 :pattern ( ($generated@@12 $generated@@27))
))) (forall (($generated@@28 T@U) ) (!  (=> (= (type $generated@@28) $generated@@5) (= ($generated@@12 ($generated@@13 $generated@@28)) $generated@@28))
 :pattern ( ($generated@@13 $generated@@28))
))) (forall (($generated@@29 RoundingMode) ) (! (= (type ($generated@@12 $generated@@29)) $generated@@5)
 :pattern ( ($generated@@12 $generated@@29))
))) (forall (($generated@@30 String) ) (! (= ($generated@@15 ($generated@@14 $generated@@30)) $generated@@30)
 :pattern ( ($generated@@14 $generated@@30))
))) (forall (($generated@@31 T@U) ) (!  (=> (= (type $generated@@31) $generated@@6) (= ($generated@@14 ($generated@@15 $generated@@31)) $generated@@31))
 :pattern ( ($generated@@15 $generated@@31))
))) (forall (($generated@@32 String) ) (! (= (type ($generated@@14 $generated@@32)) $generated@@6)
 :pattern ( ($generated@@14 $generated@@32))
))) (forall (($generated@@33 (RegEx String)) ) (! (= ($generated@@17 ($generated@@16 $generated@@33)) $generated@@33)
 :pattern ( ($generated@@16 $generated@@33))
))) (forall (($generated@@34 T@U) ) (!  (=> (= (type $generated@@34) $generated@@7) (= ($generated@@16 ($generated@@17 $generated@@34)) $generated@@34))
 :pattern ( ($generated@@17 $generated@@34))
))) (forall (($generated@@35 (RegEx String)) ) (! (= (type ($generated@@16 $generated@@35)) $generated@@7)
 :pattern ( ($generated@@16 $generated@@35))
))))
(assert (forall (($generated@@36 T@U) ) (! (UOrdering2 $generated@@36 $generated@@36)
 :no-pattern ($generated $generated@@36)
 :no-pattern ($generated@@0 $generated@@36)
)))
(assert (forall (($generated@@37 T@U) ($generated@@38 T@U) ($generated@@39 T@U) ) (! (let (($generated@@40 (type $generated@@37)))
 (=> (and (and (= (type $generated@@38) $generated@@40) (= (type $generated@@39) $generated@@40)) (and (UOrdering2 $generated@@37 $generated@@38) (UOrdering2 $generated@@38 $generated@@39))) (UOrdering2 $generated@@37 $generated@@39)))
 :pattern ( (UOrdering2 $generated@@37 $generated@@38) (UOrdering2 $generated@@38 $generated@@39))
)))
(assert (forall (($generated@@41 T@U) ($generated@@42 T@U) ) (! (let (($generated@@43 (type $generated@@41)))
 (=> (= (type $generated@@42) $generated@@43) (=> (and (UOrdering2 $generated@@41 $generated@@42) (UOrdering2 $generated@@42 $generated@@41)) (= $generated@@41 $generated@@42))))
 :pattern ( (UOrdering2 $generated@@41 $generated@@42) (UOrdering2 $generated@@42 $generated@@41))
)))
(assert  (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (= ($generated@@1 $generated@@70) 6) (= (type $generated@@44) $generated@@70)) (= (type $generated@@45) $generated@@70)) (= (type $generated@@46) $generated@@70)) (= (type $generated@@47) $generated@@70)) (= (type $generated@@48) $generated@@70)) (= ($generated@@1 $generated@@71) 7)) (= (type $generated@@49) $generated@@71)) (= (type $generated@@50) $generated@@71)) (= (type $generated@@51) $generated@@71)) (= (type $generated@@52) $generated@@71)) (= (type $generated@@53) $generated@@71)) (= (type $generated@@54) $generated@@71)) (= (type $generated@@55) $generated@@71)) (= (type $generated@@56) $generated@@71)) (= (type $generated@@57) $generated@@71)) (= (type $generated@@58) $generated@@71)) (= (type $generated@@59) $generated@@71)) (forall (($generated@@76 T@T) ) (= ($generated@@1 ($generated@@72 $generated@@76)) 8))) (forall (($generated@@77 T@T) ) (! (= ($generated@@73 ($generated@@72 $generated@@77)) $generated@@77)
 :pattern ( ($generated@@72 $generated@@77))
))) (= (type $generated@@60) ($generated@@72 $generated@@4))) (= ($generated@@1 $generated@@74) 9)) (= (type $generated@@61) $generated@@74)) (= (type $generated@@62) $generated@@71)) (= (type $generated@@63) $generated@@74)) (= (type $generated@@64) $generated@@71)) (= (type $generated@@65) $generated@@74)) (= (type $generated@@66) $generated@@74)) (= (type $generated@@67) $generated@@74)) (= ($generated@@1 $generated@@75) 10)) (= (type $generated@@68) $generated@@75)) (= (type $generated@@69) $generated@@75)))
(assert (distinct $generated@@44 $generated@@45 $generated@@46 $generated@@47 $generated@@48 $generated@@49 $generated@@50 $generated@@51 $generated@@52 $generated@@53 $generated@@54 $generated@@55 $generated@@56 $generated@@57 $generated@@58 $generated@@59 $generated@@60 $generated@@61 $generated@@62 $generated@@63 $generated@@64 $generated@@65 $generated@@66 $generated@@67 $generated@@68 $generated@@69)
)
(assert (forall (($generated@@79 T@U) ) (! (= (type ($generated@@78 $generated@@79)) $generated@@71)
 :pattern ( ($generated@@78 $generated@@79))
)))
(assert (= ($generated@@78 $generated@@44) $generated@@49))
(assert (= ($generated@@78 $generated@@45) $generated@@50))
(assert (= ($generated@@78 $generated@@46) $generated@@51))
(assert (= ($generated@@78 $generated@@47) $generated@@52))
(assert (= ($generated@@78 $generated@@48) $generated@@53))
(assert  (and (and (and (and (and (and (and (and (and (and (and (and (and (forall (($generated@@91 T@T) ($generated@@92 T@T) ) (= ($generated@@1 ($generated@@82 $generated@@91 $generated@@92)) 11)) (forall (($generated@@93 T@T) ($generated@@94 T@T) ) (! (= ($generated@@85 ($generated@@82 $generated@@93 $generated@@94)) $generated@@93)
 :pattern ( ($generated@@82 $generated@@93 $generated@@94))
))) (forall (($generated@@95 T@T) ($generated@@96 T@T) ) (! (= ($generated@@86 ($generated@@82 $generated@@95 $generated@@96)) $generated@@96)
 :pattern ( ($generated@@82 $generated@@95 $generated@@96))
))) (forall (($generated@@97 T@U) ($generated@@98 T@U) ) (! (let (($generated@@99 ($generated@@86 (type $generated@@97))))
(= (type ($generated@@87 $generated@@97 $generated@@98)) $generated@@99))
 :pattern ( ($generated@@87 $generated@@97 $generated@@98))
))) (forall (($generated@@100 T@U) ($generated@@101 T@U) ($generated@@102 T@U) ) (! (let (($generated@@103 (type $generated@@102)))
(let (($generated@@104 (type $generated@@101)))
(= (type ($generated@@88 $generated@@100 $generated@@101 $generated@@102)) ($generated@@82 $generated@@104 $generated@@103))))
 :pattern ( ($generated@@88 $generated@@100 $generated@@101 $generated@@102))
))) (forall (($generated@@105 T@U) ($generated@@106 T@U) ($generated@@107 T@U) ) (! (let (($generated@@108 ($generated@@86 (type $generated@@105))))
 (=> (= (type $generated@@107) $generated@@108) (= ($generated@@87 ($generated@@88 $generated@@105 $generated@@106 $generated@@107) $generated@@106) $generated@@107)))
 :weight 0
))) (and (forall (($generated@@109 T@U) ($generated@@110 T@U) ($generated@@111 T@U) ($generated@@112 T@U) ) (!  (or (= $generated@@111 $generated@@112) (= ($generated@@87 ($generated@@88 $generated@@110 $generated@@111 $generated@@109) $generated@@112) ($generated@@87 $generated@@110 $generated@@112)))
 :weight 0
)) (forall (($generated@@113 T@U) ($generated@@114 T@U) ($generated@@115 T@U) ($generated@@116 T@U) ) (!  (or true (= ($generated@@87 ($generated@@88 $generated@@114 $generated@@115 $generated@@113) $generated@@116) ($generated@@87 $generated@@114 $generated@@116)))
 :weight 0
)))) (= ($generated@@1 $generated@@83) 12)) (forall (($generated@@117 T@U) ($generated@@118 T@U) ) (! (let (($generated@@119 ($generated@@73 (type $generated@@118))))
(= (type ($generated@@89 $generated@@117 $generated@@118)) $generated@@119))
 :pattern ( ($generated@@89 $generated@@117 $generated@@118))
))) (= ($generated@@1 $generated@@84) 13)) (forall (($generated@@120 T@U) ($generated@@121 T@U) ($generated@@122 T@U) ) (! (= (type ($generated@@90 $generated@@120 $generated@@121 $generated@@122)) $generated@@84)
 :pattern ( ($generated@@90 $generated@@120 $generated@@121 $generated@@122))
))) (forall (($generated@@123 T@U) ($generated@@124 T@U) ($generated@@125 T@U) ) (! (let (($generated@@126 ($generated@@73 (type $generated@@124))))
 (=> (= (type $generated@@125) $generated@@126) (= ($generated@@89 ($generated@@90 $generated@@123 $generated@@124 $generated@@125) $generated@@124) $generated@@125)))
 :weight 0
))) (and (forall (($generated@@127 T@U) ($generated@@128 T@U) ($generated@@129 T@U) ($generated@@130 T@U) ) (!  (or (= $generated@@129 $generated@@130) (= ($generated@@89 ($generated@@90 $generated@@128 $generated@@129 $generated@@127) $generated@@130) ($generated@@89 $generated@@128 $generated@@130)))
 :weight 0
)) (forall (($generated@@131 T@U) ($generated@@132 T@U) ($generated@@133 T@U) ($generated@@134 T@U) ) (!  (or true (= ($generated@@89 ($generated@@90 $generated@@132 $generated@@133 $generated@@131) $generated@@134) ($generated@@89 $generated@@132 $generated@@134)))
 :weight 0
)))) (forall (($generated@@135 Int) ) (! (= (type ($generated@@81 $generated@@135)) $generated@@70)
 :pattern ( ($generated@@81 $generated@@135))
))))
(assert (forall (($generated@@136 T@U) ($generated@@137 T@U) ) (!  (=> (and (= (type $generated@@136) $generated@@2) (= (type $generated@@137) ($generated@@82 $generated@@83 $generated@@84))) ($generated@@80 $generated@@136 ($generated@@81 0) $generated@@137))
 :pattern ( ($generated@@80 $generated@@136 ($generated@@81 0) $generated@@137))
)))
(assert (forall (($generated@@139 T@U) ) (!  (=> (= (type $generated@@139) $generated@@2) ($generated@@138 $generated@@139 ($generated@@81 0)))
 :pattern ( ($generated@@138 $generated@@139 ($generated@@81 0)))
)))
(assert  (and (= ($generated@@1 $generated@@142) 14) (forall (($generated@@143 T@U) ($generated@@144 T@U) ) (! (= (type ($generated@@141 $generated@@143 $generated@@144)) $generated@@70)
 :pattern ( ($generated@@141 $generated@@143 $generated@@144))
))))
(assert (forall (($generated@@145 T@U) ($generated@@146 T@U) ($generated@@147 T@U) ) (!  (=> (and (and (and (= (type $generated@@145) $generated@@70) (= (type $generated@@146) $generated@@70)) (= (type $generated@@147) $generated@@142)) ($generated@@138 $generated@@147 ($generated@@141 $generated@@145 $generated@@146))) ($generated@@140 $generated@@147))
 :pattern ( ($generated@@140 $generated@@147) ($generated@@138 $generated@@147 ($generated@@141 $generated@@145 $generated@@146)))
)))
(assert  (and (and (= ($generated@@1 $generated@@151) 15) (forall (($generated@@152 T@U) ) (! (= (type ($generated@@149 $generated@@152)) $generated@@151)
 :pattern ( ($generated@@149 $generated@@152))
))) (forall (($generated@@153 T@U) ) (! (= (type ($generated@@150 $generated@@153)) $generated@@151)
 :pattern ( ($generated@@150 $generated@@153))
))))
(assert (forall (($generated@@154 T@U) ($generated@@155 T@U) ) (!  (=> (and (and (= (type $generated@@154) $generated@@142) (= (type $generated@@155) $generated@@142)) true) (= ($generated@@148 $generated@@154 $generated@@155)  (and (= ($generated@@149 $generated@@154) ($generated@@149 $generated@@155)) (= ($generated@@150 $generated@@154) ($generated@@150 $generated@@155)))))
 :pattern ( ($generated@@148 $generated@@154 $generated@@155))
)))
(assert  (and (forall (($generated@@158 T@U) ) (! (= (type ($generated@@156 $generated@@158)) $generated@@74)
 :pattern ( ($generated@@156 $generated@@158))
)) (= (type $generated@@157) $generated@@142)))
(assert (= ($generated@@156 $generated@@157) $generated@@63))
(assert (= (type $generated@@159) $generated@@142))
(assert (= ($generated@@156 $generated@@159) $generated@@65))
(assert (= (type $generated@@160) $generated@@142))
(assert (= ($generated@@156 $generated@@160) $generated@@66))
(assert (= (type $generated@@161) $generated@@142))
(assert (= ($generated@@156 $generated@@161) $generated@@67))
(assert (forall (($generated@@164 T@U) ) (! (= (type ($generated@@162 $generated@@164)) $generated@@70)
 :pattern ( ($generated@@162 $generated@@164))
)))
(assert (forall (($generated@@165 T@U) ($generated@@166 T@U) ) (!  (=> (and (and (= (type $generated@@165) ($generated@@82 $generated@@151 $generated@@2)) (= (type $generated@@166) $generated@@70)) ($generated@@138 $generated@@165 ($generated@@162 $generated@@166))) ($generated@@163 $generated@@165))
 :pattern ( ($generated@@138 $generated@@165 ($generated@@162 $generated@@166)))
)))
(assert  (and (and (and (and (and (and (and (forall (($generated@@173 T@T) ($generated@@174 T@T) ) (= ($generated@@1 ($generated@@169 $generated@@173 $generated@@174)) 16)) (forall (($generated@@175 T@T) ($generated@@176 T@T) ) (! (= ($generated@@170 ($generated@@169 $generated@@175 $generated@@176)) $generated@@175)
 :pattern ( ($generated@@169 $generated@@175 $generated@@176))
))) (forall (($generated@@177 T@T) ($generated@@178 T@T) ) (! (= ($generated@@171 ($generated@@169 $generated@@177 $generated@@178)) $generated@@178)
 :pattern ( ($generated@@169 $generated@@177 $generated@@178))
))) (forall (($generated@@179 T@U) ($generated@@180 T@U) ($generated@@181 T@U) ) (! (let (($generated@@182 ($generated@@171 (type $generated@@179))))
(= (type ($generated@@167 $generated@@179 $generated@@180 $generated@@181)) $generated@@182))
 :pattern ( ($generated@@167 $generated@@179 $generated@@180 $generated@@181))
))) (forall (($generated@@183 T@U) ($generated@@184 T@U) ($generated@@185 T@U) ($generated@@186 T@U) ) (! (let (($generated@@187 (type $generated@@186)))
(let (($generated@@188 (type $generated@@184)))
(= (type ($generated@@172 $generated@@183 $generated@@184 $generated@@185 $generated@@186)) ($generated@@169 $generated@@188 $generated@@187))))
 :pattern ( ($generated@@172 $generated@@183 $generated@@184 $generated@@185 $generated@@186))
))) (forall (($generated@@189 T@U) ($generated@@190 T@U) ($generated@@191 T@U) ($generated@@192 T@U) ) (! (let (($generated@@193 ($generated@@171 (type $generated@@189))))
 (=> (= (type $generated@@192) $generated@@193) (= ($generated@@167 ($generated@@172 $generated@@189 $generated@@190 $generated@@191 $generated@@192) $generated@@190 $generated@@191) $generated@@192)))
 :weight 0
))) (and (and (forall (($generated@@194 T@U) ($generated@@195 T@U) ($generated@@196 T@U) ($generated@@197 T@U) ($generated@@198 T@U) ($generated@@199 T@U) ) (!  (or (= $generated@@196 $generated@@198) (= ($generated@@167 ($generated@@172 $generated@@195 $generated@@196 $generated@@197 $generated@@194) $generated@@198 $generated@@199) ($generated@@167 $generated@@195 $generated@@198 $generated@@199)))
 :weight 0
)) (forall (($generated@@200 T@U) ($generated@@201 T@U) ($generated@@202 T@U) ($generated@@203 T@U) ($generated@@204 T@U) ($generated@@205 T@U) ) (!  (or (= $generated@@203 $generated@@205) (= ($generated@@167 ($generated@@172 $generated@@201 $generated@@202 $generated@@203 $generated@@200) $generated@@204 $generated@@205) ($generated@@167 $generated@@201 $generated@@204 $generated@@205)))
 :weight 0
))) (forall (($generated@@206 T@U) ($generated@@207 T@U) ($generated@@208 T@U) ($generated@@209 T@U) ($generated@@210 T@U) ($generated@@211 T@U) ) (!  (or true (= ($generated@@167 ($generated@@172 $generated@@207 $generated@@208 $generated@@209 $generated@@206) $generated@@210 $generated@@211) ($generated@@167 $generated@@207 $generated@@210 $generated@@211)))
 :weight 0
)))) (forall (($generated@@212 T@U) ($generated@@213 T@U) ($generated@@214 T@U) ($generated@@215 Bool) ) (! (= (type ($generated@@168 $generated@@212 $generated@@213 $generated@@214 $generated@@215)) ($generated@@169 $generated@@83 $generated@@4))
 :pattern ( ($generated@@168 $generated@@212 $generated@@213 $generated@@214 $generated@@215))
))))
(assert (forall (($generated@@216 T@U) ($generated@@217 T@U) ($generated@@218 T@U) ($generated@@219 Bool) ($generated@@220 T@U) ($generated@@221 T@U) ) (! (let (($generated@@222 ($generated@@73 (type $generated@@221))))
 (=> (and (and (and (and (= (type $generated@@216) $generated@@83) (= (type $generated@@217) ($generated@@82 $generated@@83 $generated@@84))) (= (type $generated@@218) ($generated@@72 $generated@@4))) (= (type $generated@@220) $generated@@83)) (= (type $generated@@221) ($generated@@72 $generated@@222))) (= ($generated@@0 ($generated@@167 ($generated@@168 $generated@@216 $generated@@217 $generated@@218 $generated@@219) $generated@@220 $generated@@221))  (=> (and (not (= $generated@@220 $generated@@216)) ($generated@@0 ($generated@@89 ($generated@@87 $generated@@217 $generated@@220) $generated@@218))) $generated@@219))))
 :pattern ( ($generated@@167 ($generated@@168 $generated@@216 $generated@@217 $generated@@218 $generated@@219) $generated@@220 $generated@@221))
)))
(assert (forall (($generated@@225 T@U) ($generated@@226 T@U) ) (! (= (type ($generated@@223 $generated@@225 $generated@@226)) $generated@@142)
 :pattern ( ($generated@@223 $generated@@225 $generated@@226))
)))
(assert (forall (($generated@@227 T@U) ($generated@@228 T@U) ($generated@@229 T@U) ($generated@@230 T@U) ) (!  (=> (and (and (and (= (type $generated@@227) $generated@@70) (= (type $generated@@228) $generated@@70)) (= (type $generated@@229) $generated@@151)) (= (type $generated@@230) $generated@@151)) (= ($generated@@138 ($generated@@223 $generated@@229 $generated@@230) ($generated@@141 $generated@@227 $generated@@228))  (and ($generated@@224 $generated@@229 $generated@@227) ($generated@@224 $generated@@230 $generated@@228))))
 :pattern ( ($generated@@138 ($generated@@223 $generated@@229 $generated@@230) ($generated@@141 $generated@@227 $generated@@228)))
)))
(assert (= (type $generated@@231) $generated@@70))
(assert ($generated@@138 $generated@@157 $generated@@231))
(assert ($generated@@138 $generated@@159 $generated@@231))
(assert ($generated@@138 $generated@@160 $generated@@231))
(assert ($generated@@138 $generated@@161 $generated@@231))
(assert (forall (($generated@@233 T@U) ) (!  (=> (and (= (type $generated@@233) ($generated@@82 $generated@@83 $generated@@84)) ($generated@@232 $generated@@233)) ($generated@@80 $generated@@157 $generated@@231 $generated@@233))
 :pattern ( ($generated@@80 $generated@@157 $generated@@231 $generated@@233))
)))
(assert (forall (($generated@@234 T@U) ) (!  (=> (and (= (type $generated@@234) ($generated@@82 $generated@@83 $generated@@84)) ($generated@@232 $generated@@234)) ($generated@@80 $generated@@159 $generated@@231 $generated@@234))
 :pattern ( ($generated@@80 $generated@@159 $generated@@231 $generated@@234))
)))
(assert (forall (($generated@@235 T@U) ) (!  (=> (and (= (type $generated@@235) ($generated@@82 $generated@@83 $generated@@84)) ($generated@@232 $generated@@235)) ($generated@@80 $generated@@160 $generated@@231 $generated@@235))
 :pattern ( ($generated@@80 $generated@@160 $generated@@231 $generated@@235))
)))
(assert (forall (($generated@@236 T@U) ) (!  (=> (and (= (type $generated@@236) ($generated@@82 $generated@@83 $generated@@84)) ($generated@@232 $generated@@236)) ($generated@@80 $generated@@161 $generated@@231 $generated@@236))
 :pattern ( ($generated@@80 $generated@@161 $generated@@231 $generated@@236))
)))
(assert (forall (($generated@@237 T@U) ($generated@@238 T@U) ) (!  (=> (and (= (type $generated@@237) $generated@@142) (= (type $generated@@238) $generated@@142)) (= ($generated@@148 $generated@@237 $generated@@238) (= $generated@@237 $generated@@238)))
 :pattern ( ($generated@@148 $generated@@237 $generated@@238))
)))
(assert (forall (($generated@@240 T@U) ($generated@@241 T@U) ) (!  (=> (and (= (type $generated@@240) $generated@@142) (= (type $generated@@241) $generated@@142)) (= ($generated@@239 $generated@@240 $generated@@241) (= $generated@@240 $generated@@241)))
 :pattern ( ($generated@@239 $generated@@240 $generated@@241))
)))
(assert (forall (($generated@@243 T@U) ) (! (= (type ($generated@@242 $generated@@243)) $generated@@70)
 :pattern ( ($generated@@242 $generated@@243))
)))
(assert (forall (($generated@@244 T@U) ($generated@@245 T@U) ) (!  (=> (and (= (type $generated@@244) ($generated@@82 $generated@@151 $generated@@4)) (= (type $generated@@245) $generated@@70)) (= ($generated@@138 $generated@@244 ($generated@@242 $generated@@245)) (forall (($generated@@246 T@U) ) (!  (=> (and (= (type $generated@@246) $generated@@151) ($generated@@0 ($generated@@87 $generated@@244 $generated@@246))) ($generated@@224 $generated@@246 $generated@@245))
 :pattern ( ($generated@@87 $generated@@244 $generated@@246))
))))
 :pattern ( ($generated@@138 $generated@@244 ($generated@@242 $generated@@245)))
)))
(assert (forall (($generated@@248 T@U) ) (! (= (type ($generated@@247 $generated@@248)) $generated@@70)
 :pattern ( ($generated@@247 $generated@@248))
)))
(assert (forall (($generated@@249 T@U) ($generated@@250 T@U) ) (!  (=> (and (= (type $generated@@249) ($generated@@82 $generated@@151 $generated@@4)) (= (type $generated@@250) $generated@@70)) (= ($generated@@138 $generated@@249 ($generated@@247 $generated@@250)) (forall (($generated@@251 T@U) ) (!  (=> (and (= (type $generated@@251) $generated@@151) ($generated@@0 ($generated@@87 $generated@@249 $generated@@251))) ($generated@@224 $generated@@251 $generated@@250))
 :pattern ( ($generated@@87 $generated@@249 $generated@@251))
))))
 :pattern ( ($generated@@138 $generated@@249 ($generated@@247 $generated@@250)))
)))
(assert (forall (($generated@@253 T@U) ) (! (let (($generated@@254 (type $generated@@253)))
(= (type ($generated@@252 $generated@@253)) $generated@@254))
 :pattern ( ($generated@@252 $generated@@253))
)))
(assert (forall (($generated@@255 T@U) ) (! (= ($generated@@252 $generated@@255) $generated@@255)
 :pattern ( ($generated@@252 $generated@@255))
)))
(assert (forall (($generated@@257 T@U) ($generated@@258 T@U) ) (!  (=> (and (and (= (type $generated@@257) $generated@@142) (= (type $generated@@258) $generated@@142)) (and ($generated@@256 $generated@@257) ($generated@@256 $generated@@258))) (= ($generated@@239 $generated@@257 $generated@@258) true))
 :pattern ( ($generated@@239 $generated@@257 $generated@@258) ($generated@@256 $generated@@257))
 :pattern ( ($generated@@239 $generated@@257 $generated@@258) ($generated@@256 $generated@@258))
)))
(assert (forall (($generated@@260 T@U) ($generated@@261 T@U) ) (!  (=> (and (and (= (type $generated@@260) $generated@@142) (= (type $generated@@261) $generated@@142)) (and ($generated@@259 $generated@@260) ($generated@@259 $generated@@261))) (= ($generated@@239 $generated@@260 $generated@@261) true))
 :pattern ( ($generated@@239 $generated@@260 $generated@@261) ($generated@@259 $generated@@260))
 :pattern ( ($generated@@239 $generated@@260 $generated@@261) ($generated@@259 $generated@@261))
)))
(assert (forall (($generated@@263 T@U) ($generated@@264 T@U) ) (!  (=> (and (and (= (type $generated@@263) $generated@@142) (= (type $generated@@264) $generated@@142)) (and ($generated@@262 $generated@@263) ($generated@@262 $generated@@264))) (= ($generated@@239 $generated@@263 $generated@@264) true))
 :pattern ( ($generated@@239 $generated@@263 $generated@@264) ($generated@@262 $generated@@263))
 :pattern ( ($generated@@239 $generated@@263 $generated@@264) ($generated@@262 $generated@@264))
)))
(assert (forall (($generated@@266 T@U) ($generated@@267 T@U) ) (!  (=> (and (and (= (type $generated@@266) $generated@@142) (= (type $generated@@267) $generated@@142)) (and ($generated@@265 $generated@@266) ($generated@@265 $generated@@267))) (= ($generated@@239 $generated@@266 $generated@@267) true))
 :pattern ( ($generated@@239 $generated@@266 $generated@@267) ($generated@@265 $generated@@266))
 :pattern ( ($generated@@239 $generated@@266 $generated@@267) ($generated@@265 $generated@@267))
)))
(assert (forall (($generated@@269 T@U) ($generated@@270 T@U) ($generated@@271 T@U) ($generated@@272 T@U) ($generated@@273 T@U) ) (!  (=> (and (and (and (and (and (= (type $generated@@269) $generated@@70) (= (type $generated@@270) $generated@@70)) (= (type $generated@@271) $generated@@151)) (= (type $generated@@272) $generated@@151)) (= (type $generated@@273) ($generated@@82 $generated@@83 $generated@@84))) ($generated@@232 $generated@@273)) (= ($generated@@80 ($generated@@223 $generated@@271 $generated@@272) ($generated@@141 $generated@@269 $generated@@270) $generated@@273)  (and ($generated@@268 $generated@@271 $generated@@269 $generated@@273) ($generated@@268 $generated@@272 $generated@@270 $generated@@273))))
 :pattern ( ($generated@@80 ($generated@@223 $generated@@271 $generated@@272) ($generated@@141 $generated@@269 $generated@@270) $generated@@273))
)))
(assert (forall (($generated@@274 T@U) ) (!  (=> (= (type $generated@@274) $generated@@142) (= ($generated@@140 $generated@@274) (= ($generated@@156 $generated@@274) $generated@@61)))
 :pattern ( ($generated@@140 $generated@@274))
)))
(assert (forall (($generated@@275 T@U) ) (!  (=> (= (type $generated@@275) $generated@@142) (= ($generated@@256 $generated@@275) (= ($generated@@156 $generated@@275) $generated@@63)))
 :pattern ( ($generated@@256 $generated@@275))
)))
(assert (forall (($generated@@276 T@U) ) (!  (=> (= (type $generated@@276) $generated@@142) (= ($generated@@259 $generated@@276) (= ($generated@@156 $generated@@276) $generated@@65)))
 :pattern ( ($generated@@259 $generated@@276))
)))
(assert (forall (($generated@@277 T@U) ) (!  (=> (= (type $generated@@277) $generated@@142) (= ($generated@@262 $generated@@277) (= ($generated@@156 $generated@@277) $generated@@66)))
 :pattern ( ($generated@@262 $generated@@277))
)))
(assert (forall (($generated@@278 T@U) ) (!  (=> (= (type $generated@@278) $generated@@142) (= ($generated@@265 $generated@@278) (= ($generated@@156 $generated@@278) $generated@@67)))
 :pattern ( ($generated@@265 $generated@@278))
)))
(assert (forall (($generated@@279 T@U) ) (!  (=> (and (= (type $generated@@279) $generated@@142) ($generated@@140 $generated@@279)) (exists (($generated@@280 T@U) ($generated@@281 T@U) ) (!  (and (and (= (type $generated@@280) $generated@@151) (= (type $generated@@281) $generated@@151)) (= $generated@@279 ($generated@@223 $generated@@280 $generated@@281)))
 :no-pattern (type $generated@@280)
 :no-pattern (type $generated@@281)
 :no-pattern ($generated $generated@@280)
 :no-pattern ($generated@@0 $generated@@280)
 :no-pattern ($generated $generated@@281)
 :no-pattern ($generated@@0 $generated@@281)
)))
 :pattern ( ($generated@@140 $generated@@279))
)))
(assert  (and (and (forall (($generated@@286 T@T) ) (= ($generated@@1 ($generated@@284 $generated@@286)) 17)) (forall (($generated@@287 T@T) ) (! (= ($generated@@285 ($generated@@284 $generated@@287)) $generated@@287)
 :pattern ( ($generated@@284 $generated@@287))
))) (forall (($generated@@288 T@T) ) (! (= (type ($generated@@282 $generated@@288)) ($generated@@284 $generated@@288))
 :pattern ( ($generated@@282 $generated@@288))
))))
(assert (forall (($generated@@289 T@T) ) (! (= ($generated@@283 ($generated@@282 $generated@@289)) 0)
 :pattern ( ($generated@@282 $generated@@289))
)))
(assert (forall (($generated@@290 T@U) ) (!  (=> (and (= (type $generated@@290) $generated@@142) ($generated@@256 $generated@@290)) (= $generated@@290 $generated@@157))
 :pattern ( ($generated@@256 $generated@@290))
)))
(assert (forall (($generated@@291 T@U) ) (!  (=> (and (= (type $generated@@291) $generated@@142) ($generated@@259 $generated@@291)) (= $generated@@291 $generated@@159))
 :pattern ( ($generated@@259 $generated@@291))
)))
(assert (forall (($generated@@292 T@U) ) (!  (=> (and (= (type $generated@@292) $generated@@142) ($generated@@262 $generated@@292)) (= $generated@@292 $generated@@160))
 :pattern ( ($generated@@262 $generated@@292))
)))
(assert (forall (($generated@@293 T@U) ) (!  (=> (and (= (type $generated@@293) $generated@@142) ($generated@@265 $generated@@293)) (= $generated@@293 $generated@@161))
 :pattern ( ($generated@@265 $generated@@293))
)))
(assert (forall (($generated@@295 T@U) ) (! (= (type ($generated@@294 $generated@@295)) $generated@@151)
 :pattern ( ($generated@@294 $generated@@295))
)))
(assert (forall (($generated@@296 T@U) ($generated@@297 T@U) ($generated@@298 T@U) ) (!  (=> (and (= (type $generated@@297) $generated@@70) (= (type $generated@@298) ($generated@@82 $generated@@83 $generated@@84))) (= ($generated@@268 ($generated@@294 $generated@@296) $generated@@297 $generated@@298) ($generated@@80 $generated@@296 $generated@@297 $generated@@298)))
 :pattern ( ($generated@@268 ($generated@@294 $generated@@296) $generated@@297 $generated@@298))
)))
(assert (forall (($generated@@301 T@T) ) (! (= (type ($generated@@300 $generated@@301)) ($generated@@82 $generated@@301 $generated@@2))
 :pattern ( ($generated@@300 $generated@@301))
)))
(assert (forall (($generated@@302 T@U) ) (! (let (($generated@@303 ($generated@@85 (type $generated@@302))))
 (=> (= (type $generated@@302) ($generated@@82 $generated@@303 $generated@@2)) (and (= (= ($generated@@299 $generated@@302) 0) (= $generated@@302 ($generated@@300 $generated@@303))) (=> (not (= ($generated@@299 $generated@@302) 0)) (exists (($generated@@304 T@U) ) (!  (and (= (type $generated@@304) $generated@@303) (< 0 ($generated ($generated@@87 $generated@@302 $generated@@304))))
 :no-pattern (type $generated@@304)
 :no-pattern ($generated $generated@@304)
 :no-pattern ($generated@@0 $generated@@304)
))))))
 :pattern ( ($generated@@299 $generated@@302))
)))
(assert  (and (and (and (and (forall (($generated@@310 T@T) ($generated@@311 T@T) ) (= ($generated@@1 ($generated@@307 $generated@@310 $generated@@311)) 18)) (forall (($generated@@312 T@T) ($generated@@313 T@T) ) (! (= ($generated@@308 ($generated@@307 $generated@@312 $generated@@313)) $generated@@312)
 :pattern ( ($generated@@307 $generated@@312 $generated@@313))
))) (forall (($generated@@314 T@T) ($generated@@315 T@T) ) (! (= ($generated@@309 ($generated@@307 $generated@@314 $generated@@315)) $generated@@315)
 :pattern ( ($generated@@307 $generated@@314 $generated@@315))
))) (forall (($generated@@316 T@U) ) (! (let (($generated@@317 ($generated@@308 (type $generated@@316))))
(= (type ($generated@@305 $generated@@316)) ($generated@@82 $generated@@317 $generated@@4)))
 :pattern ( ($generated@@305 $generated@@316))
))) (forall (($generated@@318 T@T) ($generated@@319 T@T) ) (! (= (type ($generated@@306 $generated@@318 $generated@@319)) ($generated@@307 $generated@@318 $generated@@319))
 :pattern ( ($generated@@306 $generated@@318 $generated@@319))
))))
(assert (forall (($generated@@320 T@U) ($generated@@321 T@T) ) (! (let (($generated@@322 (type $generated@@320)))
 (not ($generated@@0 ($generated@@87 ($generated@@305 ($generated@@306 $generated@@322 $generated@@321)) $generated@@320))))
 :pattern ( (let (($generated@@322 (type $generated@@320)))
($generated@@87 ($generated@@305 ($generated@@306 $generated@@322 $generated@@321)) $generated@@320)))
)))
(assert  (and (and (and (and (forall (($generated@@328 T@T) ($generated@@329 T@T) ) (= ($generated@@1 ($generated@@325 $generated@@328 $generated@@329)) 19)) (forall (($generated@@330 T@T) ($generated@@331 T@T) ) (! (= ($generated@@326 ($generated@@325 $generated@@330 $generated@@331)) $generated@@330)
 :pattern ( ($generated@@325 $generated@@330 $generated@@331))
))) (forall (($generated@@332 T@T) ($generated@@333 T@T) ) (! (= ($generated@@327 ($generated@@325 $generated@@332 $generated@@333)) $generated@@333)
 :pattern ( ($generated@@325 $generated@@332 $generated@@333))
))) (forall (($generated@@334 T@U) ) (! (let (($generated@@335 ($generated@@326 (type $generated@@334))))
(= (type ($generated@@323 $generated@@334)) ($generated@@82 $generated@@335 $generated@@4)))
 :pattern ( ($generated@@323 $generated@@334))
))) (forall (($generated@@336 T@T) ($generated@@337 T@T) ) (! (= (type ($generated@@324 $generated@@336 $generated@@337)) ($generated@@325 $generated@@336 $generated@@337))
 :pattern ( ($generated@@324 $generated@@336 $generated@@337))
))))
(assert (forall (($generated@@338 T@U) ($generated@@339 T@T) ) (! (let (($generated@@340 (type $generated@@338)))
 (not ($generated@@0 ($generated@@87 ($generated@@323 ($generated@@324 $generated@@340 $generated@@339)) $generated@@338))))
 :pattern ( (let (($generated@@340 (type $generated@@338)))
($generated@@87 ($generated@@323 ($generated@@324 $generated@@340 $generated@@339)) $generated@@338)))
)))
(assert (forall (($generated@@341 T@U) ) (! (let (($generated@@342 ($generated@@85 (type $generated@@341))))
 (=> (= (type $generated@@341) ($generated@@82 $generated@@342 $generated@@2)) (= ($generated@@163 $generated@@341) (forall (($generated@@343 T@U) ) (!  (=> (= (type $generated@@343) $generated@@342) (and (<= 0 ($generated ($generated@@87 $generated@@341 $generated@@343))) (<= ($generated ($generated@@87 $generated@@341 $generated@@343)) ($generated@@299 $generated@@341))))
 :pattern ( ($generated@@87 $generated@@341 $generated@@343))
)))))
 :pattern ( ($generated@@163 $generated@@341))
)))
(assert (forall (($generated@@345 T@T) ($generated@@346 T@U) ) (! (= (type ($generated@@344 $generated@@345 $generated@@346)) $generated@@345)
 :pattern ( ($generated@@344 $generated@@345 $generated@@346))
)))
(assert (forall (($generated@@347 T@U) ) (!  (=> (and (= (type $generated@@347) $generated@@151) ($generated@@224 $generated@@347 $generated@@231)) (and (= ($generated@@294 ($generated@@344 $generated@@142 $generated@@347)) $generated@@347) ($generated@@138 ($generated@@344 $generated@@142 $generated@@347) $generated@@231)))
 :pattern ( ($generated@@224 $generated@@347 $generated@@231))
)))
(assert (forall (($generated@@348 T@U) ) (! (let (($generated@@349 ($generated@@309 (type $generated@@348))))
(let (($generated@@350 ($generated@@308 (type $generated@@348))))
 (=> (= (type $generated@@348) ($generated@@307 $generated@@350 $generated@@349)) (or (= $generated@@348 ($generated@@306 $generated@@350 $generated@@349)) (exists (($generated@@351 T@U) ) (!  (and (= (type $generated@@351) $generated@@350) ($generated@@0 ($generated@@87 ($generated@@305 $generated@@348) $generated@@351)))
 :no-pattern (type $generated@@351)
 :no-pattern ($generated $generated@@351)
 :no-pattern ($generated@@0 $generated@@351)
))))))
 :pattern ( ($generated@@305 $generated@@348))
)))
(assert (forall (($generated@@353 T@U) ) (! (let (($generated@@354 ($generated@@309 (type $generated@@353))))
(= (type ($generated@@352 $generated@@353)) ($generated@@82 $generated@@354 $generated@@4)))
 :pattern ( ($generated@@352 $generated@@353))
)))
(assert (forall (($generated@@355 T@U) ) (! (let (($generated@@356 ($generated@@309 (type $generated@@355))))
(let (($generated@@357 ($generated@@308 (type $generated@@355))))
 (=> (= (type $generated@@355) ($generated@@307 $generated@@357 $generated@@356)) (or (= $generated@@355 ($generated@@306 $generated@@357 $generated@@356)) (exists (($generated@@358 T@U) ) (!  (and (= (type $generated@@358) $generated@@356) ($generated@@0 ($generated@@87 ($generated@@352 $generated@@355) $generated@@358)))
 :no-pattern (type $generated@@358)
 :no-pattern ($generated $generated@@358)
 :no-pattern ($generated@@0 $generated@@358)
))))))
 :pattern ( ($generated@@352 $generated@@355))
)))
(assert (forall (($generated@@359 T@U) ) (! (let (($generated@@360 ($generated@@327 (type $generated@@359))))
(let (($generated@@361 ($generated@@326 (type $generated@@359))))
 (=> (= (type $generated@@359) ($generated@@325 $generated@@361 $generated@@360)) (or (= $generated@@359 ($generated@@324 $generated@@361 $generated@@360)) (exists (($generated@@362 T@U) ) (!  (and (= (type $generated@@362) $generated@@361) ($generated@@0 ($generated@@87 ($generated@@323 $generated@@359) $generated@@362)))
 :no-pattern (type $generated@@362)
 :no-pattern ($generated $generated@@362)
 :no-pattern ($generated@@0 $generated@@362)
))))))
 :pattern ( ($generated@@323 $generated@@359))
)))
(assert (forall (($generated@@364 T@U) ) (! (let (($generated@@365 ($generated@@327 (type $generated@@364))))
(= (type ($generated@@363 $generated@@364)) ($generated@@82 $generated@@365 $generated@@4)))
 :pattern ( ($generated@@363 $generated@@364))
)))
(assert (forall (($generated@@366 T@U) ) (! (let (($generated@@367 ($generated@@327 (type $generated@@366))))
(let (($generated@@368 ($generated@@326 (type $generated@@366))))
 (=> (= (type $generated@@366) ($generated@@325 $generated@@368 $generated@@367)) (or (= $generated@@366 ($generated@@324 $generated@@368 $generated@@367)) (exists (($generated@@369 T@U) ) (!  (and (= (type $generated@@369) $generated@@367) ($generated@@0 ($generated@@87 ($generated@@363 $generated@@366) $generated@@369)))
 :no-pattern (type $generated@@369)
 :no-pattern ($generated $generated@@369)
 :no-pattern ($generated@@0 $generated@@369)
))))))
 :pattern ( ($generated@@363 $generated@@366))
)))
(assert (forall (($generated@@370 T@U) ($generated@@371 T@U) ) (!  (=> (and (= (type $generated@@370) ($generated@@82 $generated@@151 $generated@@2)) (= (type $generated@@371) $generated@@70)) (= ($generated@@138 $generated@@370 ($generated@@162 $generated@@371)) (forall (($generated@@372 T@U) ) (!  (=> (and (= (type $generated@@372) $generated@@151) (< 0 ($generated ($generated@@87 $generated@@370 $generated@@372)))) ($generated@@224 $generated@@372 $generated@@371))
 :pattern ( ($generated@@87 $generated@@370 $generated@@372))
))))
 :pattern ( ($generated@@138 $generated@@370 ($generated@@162 $generated@@371)))
)))
(assert (forall (($generated@@373 T@U) ($generated@@374 T@U) ($generated@@375 T@U) ) (!  (=> (and (and (= (type $generated@@373) ($generated@@82 $generated@@151 $generated@@4)) (= (type $generated@@374) $generated@@70)) (= (type $generated@@375) ($generated@@82 $generated@@83 $generated@@84))) (= ($generated@@80 $generated@@373 ($generated@@242 $generated@@374) $generated@@375) (forall (($generated@@376 T@U) ) (!  (=> (and (= (type $generated@@376) $generated@@151) ($generated@@0 ($generated@@87 $generated@@373 $generated@@376))) ($generated@@268 $generated@@376 $generated@@374 $generated@@375))
 :pattern ( ($generated@@87 $generated@@373 $generated@@376))
))))
 :pattern ( ($generated@@80 $generated@@373 ($generated@@242 $generated@@374) $generated@@375))
)))
(assert (forall (($generated@@377 T@U) ($generated@@378 T@U) ($generated@@379 T@U) ) (!  (=> (and (and (= (type $generated@@377) ($generated@@82 $generated@@151 $generated@@4)) (= (type $generated@@378) $generated@@70)) (= (type $generated@@379) ($generated@@82 $generated@@83 $generated@@84))) (= ($generated@@80 $generated@@377 ($generated@@247 $generated@@378) $generated@@379) (forall (($generated@@380 T@U) ) (!  (=> (and (= (type $generated@@380) $generated@@151) ($generated@@0 ($generated@@87 $generated@@377 $generated@@380))) ($generated@@268 $generated@@380 $generated@@378 $generated@@379))
 :pattern ( ($generated@@87 $generated@@377 $generated@@380))
))))
 :pattern ( ($generated@@80 $generated@@377 ($generated@@247 $generated@@378) $generated@@379))
)))
(assert (forall (($generated@@381 T@U) ) (! (let (($generated@@382 (type $generated@@381)))
(= ($generated ($generated@@87 ($generated@@300 $generated@@382) $generated@@381)) 0))
 :pattern ( (let (($generated@@382 (type $generated@@381)))
($generated@@87 ($generated@@300 $generated@@382) $generated@@381)))
)))
(assert  (and (forall (($generated@@385 T@U) ) (! (= (type ($generated@@383 $generated@@385)) ($generated@@82 $generated@@151 $generated@@4))
 :pattern ( ($generated@@383 $generated@@385))
)) (forall (($generated@@386 T@U) ) (! (let (($generated@@387 ($generated@@309 (type $generated@@386))))
(let (($generated@@388 ($generated@@308 (type $generated@@386))))
(= (type ($generated@@384 $generated@@386)) ($generated@@82 $generated@@388 $generated@@387))))
 :pattern ( ($generated@@384 $generated@@386))
))))
(assert (forall (($generated@@389 T@U) ($generated@@390 T@U) ) (!  (=> (and (= (type $generated@@389) ($generated@@307 $generated@@151 $generated@@151)) (= (type $generated@@390) $generated@@151)) (= ($generated@@0 ($generated@@87 ($generated@@383 $generated@@389) $generated@@390))  (and ($generated@@0 ($generated@@87 ($generated@@305 $generated@@389) ($generated@@149 ($generated@@344 $generated@@142 $generated@@390)))) (= ($generated@@87 ($generated@@384 $generated@@389) ($generated@@149 ($generated@@344 $generated@@142 $generated@@390))) ($generated@@150 ($generated@@344 $generated@@142 $generated@@390))))))
 :pattern ( ($generated@@87 ($generated@@383 $generated@@389) $generated@@390))
)))
(assert  (and (forall (($generated@@393 T@U) ) (! (= (type ($generated@@391 $generated@@393)) ($generated@@82 $generated@@151 $generated@@4))
 :pattern ( ($generated@@391 $generated@@393))
)) (forall (($generated@@394 T@U) ) (! (let (($generated@@395 ($generated@@327 (type $generated@@394))))
(let (($generated@@396 ($generated@@326 (type $generated@@394))))
(= (type ($generated@@392 $generated@@394)) ($generated@@82 $generated@@396 $generated@@395))))
 :pattern ( ($generated@@392 $generated@@394))
))))
(assert (forall (($generated@@397 T@U) ($generated@@398 T@U) ) (!  (=> (and (= (type $generated@@397) ($generated@@325 $generated@@151 $generated@@151)) (= (type $generated@@398) $generated@@151)) (= ($generated@@0 ($generated@@87 ($generated@@391 $generated@@397) $generated@@398))  (and ($generated@@0 ($generated@@87 ($generated@@323 $generated@@397) ($generated@@149 ($generated@@344 $generated@@142 $generated@@398)))) (= ($generated@@87 ($generated@@392 $generated@@397) ($generated@@149 ($generated@@344 $generated@@142 $generated@@398))) ($generated@@150 ($generated@@344 $generated@@142 $generated@@398))))))
 :pattern ( ($generated@@87 ($generated@@391 $generated@@397) $generated@@398))
)))
(assert (forall (($generated@@399 T@U) ($generated@@400 T@U) ) (! (let (($generated@@401 (type $generated@@400)))
(let (($generated@@402 ($generated@@308 (type $generated@@399))))
 (=> (= (type $generated@@399) ($generated@@307 $generated@@402 $generated@@401)) (= ($generated@@0 ($generated@@87 ($generated@@352 $generated@@399) $generated@@400)) (exists (($generated@@403 T@U) ) (!  (and (= (type $generated@@403) $generated@@402) (and ($generated@@0 ($generated@@87 ($generated@@305 $generated@@399) $generated@@403)) (= $generated@@400 ($generated@@87 ($generated@@384 $generated@@399) $generated@@403))))
 :pattern ( ($generated@@87 ($generated@@305 $generated@@399) $generated@@403))
 :pattern ( ($generated@@87 ($generated@@384 $generated@@399) $generated@@403))
))))))
 :pattern ( ($generated@@87 ($generated@@352 $generated@@399) $generated@@400))
)))
(assert (forall (($generated@@404 T@U) ($generated@@405 T@U) ) (! (let (($generated@@406 (type $generated@@405)))
(let (($generated@@407 ($generated@@326 (type $generated@@404))))
 (=> (= (type $generated@@404) ($generated@@325 $generated@@407 $generated@@406)) (= ($generated@@0 ($generated@@87 ($generated@@363 $generated@@404) $generated@@405)) (exists (($generated@@408 T@U) ) (!  (and (= (type $generated@@408) $generated@@407) (and ($generated@@0 ($generated@@87 ($generated@@323 $generated@@404) $generated@@408)) (= $generated@@405 ($generated@@87 ($generated@@392 $generated@@404) $generated@@408))))
 :pattern ( ($generated@@87 ($generated@@323 $generated@@404) $generated@@408))
 :pattern ( ($generated@@87 ($generated@@392 $generated@@404) $generated@@408))
))))))
 :pattern ( ($generated@@87 ($generated@@363 $generated@@404) $generated@@405))
)))
(assert (forall (($generated@@410 T@U) ($generated@@411 T@U) ) (! (= (type ($generated@@409 $generated@@410 $generated@@411)) $generated@@70)
 :pattern ( ($generated@@409 $generated@@410 $generated@@411))
)))
(assert (forall (($generated@@412 T@U) ($generated@@413 T@U) ($generated@@414 T@U) ($generated@@415 T@U) ) (!  (=> (and (and (and (= (type $generated@@412) ($generated@@307 $generated@@151 $generated@@151)) (= (type $generated@@413) $generated@@70)) (= (type $generated@@414) $generated@@70)) (= (type $generated@@415) ($generated@@82 $generated@@83 $generated@@84))) (= ($generated@@80 $generated@@412 ($generated@@409 $generated@@413 $generated@@414) $generated@@415) (forall (($generated@@416 T@U) ) (!  (=> (and (= (type $generated@@416) $generated@@151) ($generated@@0 ($generated@@87 ($generated@@305 $generated@@412) $generated@@416))) (and ($generated@@268 ($generated@@87 ($generated@@384 $generated@@412) $generated@@416) $generated@@414 $generated@@415) ($generated@@268 $generated@@416 $generated@@413 $generated@@415)))
 :pattern ( ($generated@@87 ($generated@@384 $generated@@412) $generated@@416))
 :pattern ( ($generated@@87 ($generated@@305 $generated@@412) $generated@@416))
))))
 :pattern ( ($generated@@80 $generated@@412 ($generated@@409 $generated@@413 $generated@@414) $generated@@415))
)))
(assert (forall (($generated@@418 T@U) ($generated@@419 T@U) ) (! (= (type ($generated@@417 $generated@@418 $generated@@419)) $generated@@70)
 :pattern ( ($generated@@417 $generated@@418 $generated@@419))
)))
(assert (forall (($generated@@420 T@U) ($generated@@421 T@U) ($generated@@422 T@U) ($generated@@423 T@U) ) (!  (=> (and (and (and (= (type $generated@@420) ($generated@@325 $generated@@151 $generated@@151)) (= (type $generated@@421) $generated@@70)) (= (type $generated@@422) $generated@@70)) (= (type $generated@@423) ($generated@@82 $generated@@83 $generated@@84))) (= ($generated@@80 $generated@@420 ($generated@@417 $generated@@421 $generated@@422) $generated@@423) (forall (($generated@@424 T@U) ) (!  (=> (and (= (type $generated@@424) $generated@@151) ($generated@@0 ($generated@@87 ($generated@@323 $generated@@420) $generated@@424))) (and ($generated@@268 ($generated@@87 ($generated@@392 $generated@@420) $generated@@424) $generated@@422 $generated@@423) ($generated@@268 $generated@@424 $generated@@421 $generated@@423)))
 :pattern ( ($generated@@87 ($generated@@392 $generated@@420) $generated@@424))
 :pattern ( ($generated@@87 ($generated@@323 $generated@@420) $generated@@424))
))))
 :pattern ( ($generated@@80 $generated@@420 ($generated@@417 $generated@@421 $generated@@422) $generated@@423))
)))
(assert (forall (($generated@@426 T@T) ) (! (= (type ($generated@@425 $generated@@426)) ($generated@@82 $generated@@426 $generated@@4))
 :pattern ( ($generated@@425 $generated@@426))
)))
(assert (forall (($generated@@427 T@U) ) (! (let (($generated@@428 ($generated@@327 (type $generated@@427))))
(let (($generated@@429 ($generated@@326 (type $generated@@427))))
 (=> (= (type $generated@@427) ($generated@@325 $generated@@429 $generated@@428)) (= (= $generated@@427 ($generated@@324 $generated@@429 $generated@@428)) (= ($generated@@323 $generated@@427) ($generated@@425 $generated@@429))))))
 :pattern ( ($generated@@323 $generated@@427))
)))
(assert (forall (($generated@@430 T@U) ) (! (let (($generated@@431 ($generated@@327 (type $generated@@430))))
(let (($generated@@432 ($generated@@326 (type $generated@@430))))
 (=> (= (type $generated@@430) ($generated@@325 $generated@@432 $generated@@431)) (= (= $generated@@430 ($generated@@324 $generated@@432 $generated@@431)) (= ($generated@@363 $generated@@430) ($generated@@425 $generated@@431))))))
 :pattern ( ($generated@@363 $generated@@430))
)))
(assert (forall (($generated@@433 T@U) ) (! (let (($generated@@434 ($generated@@327 (type $generated@@433))))
(let (($generated@@435 ($generated@@326 (type $generated@@433))))
 (=> (= (type $generated@@433) ($generated@@325 $generated@@435 $generated@@434)) (= (= $generated@@433 ($generated@@324 $generated@@435 $generated@@434)) (= ($generated@@391 $generated@@433) ($generated@@425 $generated@@151))))))
 :pattern ( ($generated@@391 $generated@@433))
)))
(assert (forall (($generated@@436 T@U) ) (! (let (($generated@@437 ($generated@@309 (type $generated@@436))))
(let (($generated@@438 ($generated@@308 (type $generated@@436))))
 (=> (= (type $generated@@436) ($generated@@307 $generated@@438 $generated@@437)) (or (= $generated@@436 ($generated@@306 $generated@@438 $generated@@437)) (exists (($generated@@439 T@U) ($generated@@440 T@U) ) (!  (and (and (= (type $generated@@439) $generated@@151) (= (type $generated@@440) $generated@@151)) ($generated@@0 ($generated@@87 ($generated@@383 $generated@@436) ($generated@@294 ($generated@@223 $generated@@439 $generated@@440)))))
 :no-pattern (type $generated@@439)
 :no-pattern (type $generated@@440)
 :no-pattern ($generated $generated@@439)
 :no-pattern ($generated@@0 $generated@@439)
 :no-pattern ($generated $generated@@440)
 :no-pattern ($generated@@0 $generated@@440)
))))))
 :pattern ( ($generated@@383 $generated@@436))
)))
(assert (forall (($generated@@441 T@U) ) (! (let (($generated@@442 ($generated@@327 (type $generated@@441))))
(let (($generated@@443 ($generated@@326 (type $generated@@441))))
 (=> (= (type $generated@@441) ($generated@@325 $generated@@443 $generated@@442)) (or (= $generated@@441 ($generated@@324 $generated@@443 $generated@@442)) (exists (($generated@@444 T@U) ($generated@@445 T@U) ) (!  (and (and (= (type $generated@@444) $generated@@151) (= (type $generated@@445) $generated@@151)) ($generated@@0 ($generated@@87 ($generated@@391 $generated@@441) ($generated@@294 ($generated@@223 $generated@@444 $generated@@445)))))
 :no-pattern (type $generated@@444)
 :no-pattern (type $generated@@445)
 :no-pattern ($generated $generated@@444)
 :no-pattern ($generated@@0 $generated@@444)
 :no-pattern ($generated $generated@@445)
 :no-pattern ($generated@@0 $generated@@445)
))))))
 :pattern ( ($generated@@391 $generated@@441))
)))
(assert (forall (($generated@@446 T@U) ) (!  (=> (and (= (type $generated@@446) $generated@@151) ($generated@@224 $generated@@446 $generated@@46)) (and (= ($generated@@294 ($generated@@344 $generated@@2 $generated@@446)) $generated@@446) ($generated@@138 ($generated@@344 $generated@@2 $generated@@446) $generated@@46)))
 :pattern ( ($generated@@224 $generated@@446 $generated@@46))
)))
(assert (forall (($generated@@447 T@U) ) (!  (=> (and (= (type $generated@@447) $generated@@151) ($generated@@224 $generated@@447 $generated@@47)) (and (= ($generated@@294 ($generated@@344 $generated@@3 $generated@@447)) $generated@@447) ($generated@@138 ($generated@@344 $generated@@3 $generated@@447) $generated@@47)))
 :pattern ( ($generated@@224 $generated@@447 $generated@@47))
)))
(assert (forall (($generated@@448 T@U) ) (!  (=> (and (= (type $generated@@448) $generated@@151) ($generated@@224 $generated@@448 $generated@@44)) (and (= ($generated@@294 ($generated@@344 $generated@@4 $generated@@448)) $generated@@448) ($generated@@138 ($generated@@344 $generated@@4 $generated@@448) $generated@@44)))
 :pattern ( ($generated@@224 $generated@@448 $generated@@44))
)))
(assert (= ($generated@@1 $generated@@449) 20))
(assert (forall (($generated@@450 T@U) ) (!  (=> (and (= (type $generated@@450) $generated@@151) ($generated@@224 $generated@@450 $generated@@45)) (and (= ($generated@@294 ($generated@@344 $generated@@449 $generated@@450)) $generated@@450) ($generated@@138 ($generated@@344 $generated@@449 $generated@@450) $generated@@45)))
 :pattern ( ($generated@@224 $generated@@450 $generated@@45))
)))
(assert (forall (($generated@@451 T@U) ($generated@@452 T@U) ) (!  (=> (= (type $generated@@452) $generated@@70) (= ($generated@@224 ($generated@@294 $generated@@451) $generated@@452) ($generated@@138 $generated@@451 $generated@@452)))
 :pattern ( ($generated@@224 ($generated@@294 $generated@@451) $generated@@452))
)))
(assert (forall (($generated@@453 T@U) ) (! (let (($generated@@454 ($generated@@85 (type $generated@@453))))
 (=> (= (type $generated@@453) ($generated@@82 $generated@@454 $generated@@2)) (<= 0 ($generated@@299 $generated@@453))))
 :pattern ( ($generated@@299 $generated@@453))
)))
(assert (forall (($generated@@455 T@U) ) (! (let (($generated@@456 ($generated@@285 (type $generated@@455))))
 (=> (= (type $generated@@455) ($generated@@284 $generated@@456)) (<= 0 ($generated@@283 $generated@@455))))
 :pattern ( ($generated@@283 $generated@@455))
)))
(assert (forall (($generated@@458 T@U) ) (! (= (type ($generated@@457 $generated@@458)) $generated@@70)
 :pattern ( ($generated@@457 $generated@@458))
)))
(assert (forall (($generated@@459 T@U) ($generated@@460 T@U) ) (!  (=> (and (= (type $generated@@459) $generated@@70) (= (type $generated@@460) $generated@@70)) (= ($generated@@457 ($generated@@409 $generated@@459 $generated@@460)) $generated@@459))
 :pattern ( ($generated@@409 $generated@@459 $generated@@460))
)))
(assert (forall (($generated@@462 T@U) ) (! (= (type ($generated@@461 $generated@@462)) $generated@@70)
 :pattern ( ($generated@@461 $generated@@462))
)))
(assert (forall (($generated@@463 T@U) ($generated@@464 T@U) ) (!  (=> (and (= (type $generated@@463) $generated@@70) (= (type $generated@@464) $generated@@70)) (= ($generated@@461 ($generated@@409 $generated@@463 $generated@@464)) $generated@@464))
 :pattern ( ($generated@@409 $generated@@463 $generated@@464))
)))
(assert (forall (($generated@@465 T@U) ($generated@@466 T@U) ) (!  (=> (and (= (type $generated@@465) $generated@@70) (= (type $generated@@466) $generated@@70)) (= ($generated@@78 ($generated@@409 $generated@@465 $generated@@466)) $generated@@58))
 :pattern ( ($generated@@409 $generated@@465 $generated@@466))
)))
(assert (forall (($generated@@468 T@U) ) (! (= (type ($generated@@467 $generated@@468)) $generated@@70)
 :pattern ( ($generated@@467 $generated@@468))
)))
(assert (forall (($generated@@469 T@U) ($generated@@470 T@U) ) (!  (=> (and (= (type $generated@@469) $generated@@70) (= (type $generated@@470) $generated@@70)) (= ($generated@@467 ($generated@@417 $generated@@469 $generated@@470)) $generated@@469))
 :pattern ( ($generated@@417 $generated@@469 $generated@@470))
)))
(assert (forall (($generated@@472 T@U) ) (! (= (type ($generated@@471 $generated@@472)) $generated@@70)
 :pattern ( ($generated@@471 $generated@@472))
)))
(assert (forall (($generated@@473 T@U) ($generated@@474 T@U) ) (!  (=> (and (= (type $generated@@473) $generated@@70) (= (type $generated@@474) $generated@@70)) (= ($generated@@471 ($generated@@417 $generated@@473 $generated@@474)) $generated@@474))
 :pattern ( ($generated@@417 $generated@@473 $generated@@474))
)))
(assert (forall (($generated@@475 T@U) ($generated@@476 T@U) ) (!  (=> (and (= (type $generated@@475) $generated@@70) (= (type $generated@@476) $generated@@70)) (= ($generated@@78 ($generated@@417 $generated@@475 $generated@@476)) $generated@@59))
 :pattern ( ($generated@@417 $generated@@475 $generated@@476))
)))
(assert (forall (($generated@@477 T@U) ($generated@@478 T@U) ) (!  (=> (and (= (type $generated@@477) $generated@@151) (= (type $generated@@478) $generated@@151)) (= ($generated@@156 ($generated@@223 $generated@@477 $generated@@478)) $generated@@61))
 :pattern ( ($generated@@223 $generated@@477 $generated@@478))
)))
(assert (forall (($generated@@480 T@U) ) (! (= (type ($generated@@479 $generated@@480)) $generated@@70)
 :pattern ( ($generated@@479 $generated@@480))
)))
(assert (forall (($generated@@481 T@U) ($generated@@482 T@U) ) (!  (=> (and (= (type $generated@@481) $generated@@70) (= (type $generated@@482) $generated@@70)) (= ($generated@@479 ($generated@@141 $generated@@481 $generated@@482)) $generated@@481))
 :pattern ( ($generated@@141 $generated@@481 $generated@@482))
)))
(assert (forall (($generated@@484 T@U) ) (! (= (type ($generated@@483 $generated@@484)) $generated@@70)
 :pattern ( ($generated@@483 $generated@@484))
)))
(assert (forall (($generated@@485 T@U) ($generated@@486 T@U) ) (!  (=> (and (= (type $generated@@485) $generated@@70) (= (type $generated@@486) $generated@@70)) (= ($generated@@483 ($generated@@141 $generated@@485 $generated@@486)) $generated@@486))
 :pattern ( ($generated@@141 $generated@@485 $generated@@486))
)))
(assert (forall (($generated@@487 T@U) ($generated@@488 T@U) ) (!  (=> (and (= (type $generated@@487) $generated@@151) (= (type $generated@@488) $generated@@151)) (= ($generated@@149 ($generated@@223 $generated@@487 $generated@@488)) $generated@@487))
 :pattern ( ($generated@@223 $generated@@487 $generated@@488))
)))
(assert (forall (($generated@@489 T@U) ($generated@@490 T@U) ) (!  (=> (and (= (type $generated@@489) $generated@@151) (= (type $generated@@490) $generated@@151)) (= ($generated@@150 ($generated@@223 $generated@@489 $generated@@490)) $generated@@490))
 :pattern ( ($generated@@223 $generated@@489 $generated@@490))
)))
(assert  (and (forall (($generated@@493 T@U) ) (! (= (type ($generated@@491 $generated@@493)) $generated@@70)
 :pattern ( ($generated@@491 $generated@@493))
)) (forall (($generated@@494 T@U) ($generated@@495 Int) ) (! (let (($generated@@496 ($generated@@285 (type $generated@@494))))
(= (type ($generated@@492 $generated@@494 $generated@@495)) $generated@@496))
 :pattern ( ($generated@@492 $generated@@494 $generated@@495))
))))
(assert (forall (($generated@@497 T@U) ($generated@@498 T@U) ($generated@@499 T@U) ) (!  (=> (and (and (= (type $generated@@497) ($generated@@284 $generated@@151)) (= (type $generated@@498) $generated@@70)) (= (type $generated@@499) ($generated@@82 $generated@@83 $generated@@84))) (= ($generated@@80 $generated@@497 ($generated@@491 $generated@@498) $generated@@499) (forall (($generated@@500 Int) ) (!  (=> (and (<= 0 $generated@@500) (< $generated@@500 ($generated@@283 $generated@@497))) ($generated@@268 ($generated@@492 $generated@@497 $generated@@500) $generated@@498 $generated@@499))
 :pattern ( ($generated@@492 $generated@@497 $generated@@500))
))))
 :pattern ( ($generated@@80 $generated@@497 ($generated@@491 $generated@@498) $generated@@499))
)))
(assert (forall (($generated@@502 Int) ) (! (= ($generated@@501 ($generated@@81 $generated@@502)) $generated@@502)
 :pattern ( ($generated@@81 $generated@@502))
)))
(assert (forall (($generated@@504 T@U) ) (! (= (type ($generated@@503 $generated@@504)) $generated@@70)
 :pattern ( ($generated@@503 $generated@@504))
)))
(assert (forall (($generated@@505 T@U) ) (!  (=> (= (type $generated@@505) $generated@@70) (= ($generated@@503 ($generated@@242 $generated@@505)) $generated@@505))
 :pattern ( ($generated@@242 $generated@@505))
)))
(assert (forall (($generated@@506 T@U) ) (!  (=> (= (type $generated@@506) $generated@@70) (= ($generated@@78 ($generated@@242 $generated@@506)) $generated@@54))
 :pattern ( ($generated@@242 $generated@@506))
)))
(assert (forall (($generated@@508 T@U) ) (! (= (type ($generated@@507 $generated@@508)) $generated@@70)
 :pattern ( ($generated@@507 $generated@@508))
)))
(assert (forall (($generated@@509 T@U) ) (!  (=> (= (type $generated@@509) $generated@@70) (= ($generated@@507 ($generated@@247 $generated@@509)) $generated@@509))
 :pattern ( ($generated@@247 $generated@@509))
)))
(assert (forall (($generated@@510 T@U) ) (!  (=> (= (type $generated@@510) $generated@@70) (= ($generated@@78 ($generated@@247 $generated@@510)) $generated@@55))
 :pattern ( ($generated@@247 $generated@@510))
)))
(assert (forall (($generated@@512 T@U) ) (! (= (type ($generated@@511 $generated@@512)) $generated@@70)
 :pattern ( ($generated@@511 $generated@@512))
)))
(assert (forall (($generated@@513 T@U) ) (!  (=> (= (type $generated@@513) $generated@@70) (= ($generated@@511 ($generated@@162 $generated@@513)) $generated@@513))
 :pattern ( ($generated@@162 $generated@@513))
)))
(assert (forall (($generated@@514 T@U) ) (!  (=> (= (type $generated@@514) $generated@@70) (= ($generated@@78 ($generated@@162 $generated@@514)) $generated@@56))
 :pattern ( ($generated@@162 $generated@@514))
)))
(assert (forall (($generated@@516 T@U) ) (! (= (type ($generated@@515 $generated@@516)) $generated@@70)
 :pattern ( ($generated@@515 $generated@@516))
)))
(assert (forall (($generated@@517 T@U) ) (!  (=> (= (type $generated@@517) $generated@@70) (= ($generated@@515 ($generated@@491 $generated@@517)) $generated@@517))
 :pattern ( ($generated@@491 $generated@@517))
)))
(assert (forall (($generated@@518 T@U) ) (!  (=> (= (type $generated@@518) $generated@@70) (= ($generated@@78 ($generated@@491 $generated@@518)) $generated@@57))
 :pattern ( ($generated@@491 $generated@@518))
)))
(assert (forall (($generated@@519 T@U) ) (! (let (($generated@@520 (type $generated@@519)))
(= ($generated@@344 $generated@@520 ($generated@@294 $generated@@519)) $generated@@519))
 :pattern ( ($generated@@294 $generated@@519))
)))
(assert (forall (($generated@@521 T@U) ($generated@@522 T@U) ($generated@@523 T@U) ) (!  (=> (and (and (= (type $generated@@521) ($generated@@307 $generated@@151 $generated@@151)) (= (type $generated@@522) $generated@@70)) (= (type $generated@@523) $generated@@70)) (= ($generated@@138 $generated@@521 ($generated@@409 $generated@@522 $generated@@523)) (forall (($generated@@524 T@U) ) (!  (=> (and (= (type $generated@@524) $generated@@151) ($generated@@0 ($generated@@87 ($generated@@305 $generated@@521) $generated@@524))) (and ($generated@@224 ($generated@@87 ($generated@@384 $generated@@521) $generated@@524) $generated@@523) ($generated@@224 $generated@@524 $generated@@522)))
 :pattern ( ($generated@@87 ($generated@@384 $generated@@521) $generated@@524))
 :pattern ( ($generated@@87 ($generated@@305 $generated@@521) $generated@@524))
))))
 :pattern ( ($generated@@138 $generated@@521 ($generated@@409 $generated@@522 $generated@@523)))
)))
(assert (forall (($generated@@525 T@U) ($generated@@526 T@U) ($generated@@527 T@U) ) (!  (=> (and (and (= (type $generated@@525) ($generated@@325 $generated@@151 $generated@@151)) (= (type $generated@@526) $generated@@70)) (= (type $generated@@527) $generated@@70)) (= ($generated@@138 $generated@@525 ($generated@@417 $generated@@526 $generated@@527)) (forall (($generated@@528 T@U) ) (!  (=> (and (= (type $generated@@528) $generated@@151) ($generated@@0 ($generated@@87 ($generated@@323 $generated@@525) $generated@@528))) (and ($generated@@224 ($generated@@87 ($generated@@392 $generated@@525) $generated@@528) $generated@@527) ($generated@@224 $generated@@528 $generated@@526)))
 :pattern ( ($generated@@87 ($generated@@392 $generated@@525) $generated@@528))
 :pattern ( ($generated@@87 ($generated@@323 $generated@@525) $generated@@528))
))))
 :pattern ( ($generated@@138 $generated@@525 ($generated@@417 $generated@@526 $generated@@527)))
)))
(assert (forall (($generated@@531 T@U) ($generated@@532 T@U) ) (!  (=> (and (= (type $generated@@531) $generated@@151) (= (type $generated@@532) $generated@@151)) (< ($generated@@529 $generated@@531) ($generated@@530 ($generated@@223 $generated@@531 $generated@@532))))
 :pattern ( ($generated@@223 $generated@@531 $generated@@532))
)))
(assert (forall (($generated@@533 T@U) ($generated@@534 T@U) ) (!  (=> (and (= (type $generated@@533) $generated@@151) (= (type $generated@@534) $generated@@151)) (< ($generated@@529 $generated@@534) ($generated@@530 ($generated@@223 $generated@@533 $generated@@534))))
 :pattern ( ($generated@@223 $generated@@533 $generated@@534))
)))
(assert (forall (($generated@@535 T@U) ($generated@@536 T@U) ($generated@@537 T@U) ) (!  (=> (and (and (and (= (type $generated@@535) $generated@@151) (= (type $generated@@536) $generated@@70)) (= (type $generated@@537) $generated@@70)) ($generated@@224 $generated@@535 ($generated@@409 $generated@@536 $generated@@537))) (and (= ($generated@@294 ($generated@@344 ($generated@@307 $generated@@151 $generated@@151) $generated@@535)) $generated@@535) ($generated@@138 ($generated@@344 ($generated@@307 $generated@@151 $generated@@151) $generated@@535) ($generated@@409 $generated@@536 $generated@@537))))
 :pattern ( ($generated@@224 $generated@@535 ($generated@@409 $generated@@536 $generated@@537)))
)))
(assert (forall (($generated@@538 T@U) ($generated@@539 T@U) ($generated@@540 T@U) ) (!  (=> (and (and (and (= (type $generated@@538) $generated@@151) (= (type $generated@@539) $generated@@70)) (= (type $generated@@540) $generated@@70)) ($generated@@224 $generated@@538 ($generated@@417 $generated@@539 $generated@@540))) (and (= ($generated@@294 ($generated@@344 ($generated@@325 $generated@@151 $generated@@151) $generated@@538)) $generated@@538) ($generated@@138 ($generated@@344 ($generated@@325 $generated@@151 $generated@@151) $generated@@538) ($generated@@417 $generated@@539 $generated@@540))))
 :pattern ( ($generated@@224 $generated@@538 ($generated@@417 $generated@@539 $generated@@540)))
)))
(assert (forall (($generated@@541 T@U) ($generated@@542 T@U) ($generated@@543 T@U) ) (!  (=> (and (and (and (= (type $generated@@541) $generated@@70) (= (type $generated@@542) $generated@@70)) (= (type $generated@@543) $generated@@151)) ($generated@@224 $generated@@543 ($generated@@141 $generated@@541 $generated@@542))) (and (= ($generated@@294 ($generated@@344 $generated@@142 $generated@@543)) $generated@@543) ($generated@@138 ($generated@@344 $generated@@142 $generated@@543) ($generated@@141 $generated@@541 $generated@@542))))
 :pattern ( ($generated@@224 $generated@@543 ($generated@@141 $generated@@541 $generated@@542)))
)))
(assert (forall (($generated@@544 T@U) ) (! (let (($generated@@545 (type $generated@@544)))
 (not ($generated@@0 ($generated@@87 ($generated@@425 $generated@@545) $generated@@544))))
 :pattern ( (let (($generated@@545 (type $generated@@544)))
($generated@@87 ($generated@@425 $generated@@545) $generated@@544)))
)))
(assert (forall (($generated@@547 T@U) ) (! (= (type ($generated@@546 $generated@@547)) $generated@@75)
 :pattern ( ($generated@@546 $generated@@547))
)))
(assert (forall (($generated@@548 T@U) ($generated@@549 T@U) ) (!  (=> (and (= (type $generated@@548) $generated@@70) (= (type $generated@@549) $generated@@70)) (and (= ($generated@@78 ($generated@@141 $generated@@548 $generated@@549)) $generated@@62) (= ($generated@@546 ($generated@@141 $generated@@548 $generated@@549)) $generated@@68)))
 :pattern ( ($generated@@141 $generated@@548 $generated@@549))
)))
(assert (forall (($generated@@550 T@U) ) (!  (=> (= (type $generated@@550) $generated@@142) (= ($generated@@529 ($generated@@294 $generated@@550)) ($generated@@530 $generated@@550)))
 :pattern ( ($generated@@529 ($generated@@294 $generated@@550)))
)))
(assert (forall (($generated@@551 T@U) ) (!  (=> (and (= (type $generated@@551) $generated@@151) ($generated@@224 $generated@@551 ($generated@@81 0))) (and (= ($generated@@294 ($generated@@344 $generated@@2 $generated@@551)) $generated@@551) ($generated@@138 ($generated@@344 ($generated@@82 $generated@@151 $generated@@4) $generated@@551) ($generated@@81 0))))
 :pattern ( ($generated@@224 $generated@@551 ($generated@@81 0)))
)))
(assert (forall (($generated@@552 T@U) ($generated@@553 T@U) ) (!  (=> (and (and (= (type $generated@@552) $generated@@151) (= (type $generated@@553) $generated@@70)) ($generated@@224 $generated@@552 ($generated@@242 $generated@@553))) (and (= ($generated@@294 ($generated@@344 ($generated@@82 $generated@@151 $generated@@4) $generated@@552)) $generated@@552) ($generated@@138 ($generated@@344 ($generated@@82 $generated@@151 $generated@@4) $generated@@552) ($generated@@242 $generated@@553))))
 :pattern ( ($generated@@224 $generated@@552 ($generated@@242 $generated@@553)))
)))
(assert (forall (($generated@@554 T@U) ($generated@@555 T@U) ) (!  (=> (and (and (= (type $generated@@554) $generated@@151) (= (type $generated@@555) $generated@@70)) ($generated@@224 $generated@@554 ($generated@@247 $generated@@555))) (and (= ($generated@@294 ($generated@@344 ($generated@@82 $generated@@151 $generated@@4) $generated@@554)) $generated@@554) ($generated@@138 ($generated@@344 ($generated@@82 $generated@@151 $generated@@4) $generated@@554) ($generated@@247 $generated@@555))))
 :pattern ( ($generated@@224 $generated@@554 ($generated@@247 $generated@@555)))
)))
(assert (forall (($generated@@556 T@U) ($generated@@557 T@U) ) (!  (=> (and (and (= (type $generated@@556) $generated@@151) (= (type $generated@@557) $generated@@70)) ($generated@@224 $generated@@556 ($generated@@162 $generated@@557))) (and (= ($generated@@294 ($generated@@344 ($generated@@82 $generated@@151 $generated@@2) $generated@@556)) $generated@@556) ($generated@@138 ($generated@@344 ($generated@@82 $generated@@151 $generated@@2) $generated@@556) ($generated@@162 $generated@@557))))
 :pattern ( ($generated@@224 $generated@@556 ($generated@@162 $generated@@557)))
)))
(assert (forall (($generated@@558 T@U) ($generated@@559 T@U) ) (!  (=> (and (and (= (type $generated@@558) $generated@@151) (= (type $generated@@559) $generated@@70)) ($generated@@224 $generated@@558 ($generated@@491 $generated@@559))) (and (= ($generated@@294 ($generated@@344 ($generated@@284 $generated@@151) $generated@@558)) $generated@@558) ($generated@@138 ($generated@@344 ($generated@@284 $generated@@151) $generated@@558) ($generated@@491 $generated@@559))))
 :pattern ( ($generated@@224 $generated@@558 ($generated@@491 $generated@@559)))
)))
(assert (= ($generated@@78 $generated@@231) $generated@@64))
(assert (= ($generated@@546 $generated@@231) $generated@@69))
(assert (forall (($generated@@560 T@U) ($generated@@561 T@U) ($generated@@562 T@U) ) (!  (=> (and (and (= (type $generated@@560) ($generated@@82 $generated@@151 $generated@@2)) (= (type $generated@@561) $generated@@70)) (= (type $generated@@562) ($generated@@82 $generated@@83 $generated@@84))) (= ($generated@@80 $generated@@560 ($generated@@162 $generated@@561) $generated@@562) (forall (($generated@@563 T@U) ) (!  (=> (and (= (type $generated@@563) $generated@@151) (< 0 ($generated ($generated@@87 $generated@@560 $generated@@563)))) ($generated@@268 $generated@@563 $generated@@561 $generated@@562))
 :pattern ( ($generated@@87 $generated@@560 $generated@@563))
))))
 :pattern ( ($generated@@80 $generated@@560 ($generated@@162 $generated@@561) $generated@@562))
)))
(assert (= $generated@@157 ($generated@@252 $generated@@157)))
(assert (= $generated@@159 ($generated@@252 $generated@@159)))
(assert (= $generated@@160 ($generated@@252 $generated@@160)))
(assert (= $generated@@161 ($generated@@252 $generated@@161)))
(assert (forall (($generated@@565 T@U) ) (!  (=> (and (= (type $generated@@565) $generated@@142) ($generated@@564 $generated@@565)) (or (or (or ($generated@@256 $generated@@565) ($generated@@259 $generated@@565)) ($generated@@262 $generated@@565)) ($generated@@265 $generated@@565)))
 :pattern ( ($generated@@564 $generated@@565))
)))
(assert (forall (($generated@@566 T@U) ($generated@@567 T@U) ($generated@@568 T@U) ) (!  (=> (and (and (and (= (type $generated@@566) $generated@@142) (= (type $generated@@567) $generated@@70)) (= (type $generated@@568) ($generated@@82 $generated@@83 $generated@@84))) (and ($generated@@232 $generated@@568) (and ($generated@@140 $generated@@566) (exists (($generated@@569 T@U) ) (!  (and (= (type $generated@@569) $generated@@70) ($generated@@80 $generated@@566 ($generated@@141 $generated@@567 $generated@@569) $generated@@568))
 :pattern ( ($generated@@80 $generated@@566 ($generated@@141 $generated@@567 $generated@@569) $generated@@568))
))))) ($generated@@268 ($generated@@149 $generated@@566) $generated@@567 $generated@@568))
 :pattern ( ($generated@@268 ($generated@@149 $generated@@566) $generated@@567 $generated@@568))
)))
(assert (forall (($generated@@570 T@U) ($generated@@571 T@U) ($generated@@572 T@U) ) (!  (=> (and (and (and (= (type $generated@@570) $generated@@142) (= (type $generated@@571) $generated@@70)) (= (type $generated@@572) ($generated@@82 $generated@@83 $generated@@84))) (and ($generated@@232 $generated@@572) (and ($generated@@140 $generated@@570) (exists (($generated@@573 T@U) ) (!  (and (= (type $generated@@573) $generated@@70) ($generated@@80 $generated@@570 ($generated@@141 $generated@@573 $generated@@571) $generated@@572))
 :pattern ( ($generated@@80 $generated@@570 ($generated@@141 $generated@@573 $generated@@571) $generated@@572))
))))) ($generated@@268 ($generated@@150 $generated@@570) $generated@@571 $generated@@572))
 :pattern ( ($generated@@268 ($generated@@150 $generated@@570) $generated@@571 $generated@@572))
)))
(assert (forall (($generated@@574 T@U) ($generated@@575 T@U) ) (!  (=> (and (= (type $generated@@574) $generated@@151) (= (type $generated@@575) $generated@@151)) (= ($generated@@223 ($generated@@252 $generated@@574) ($generated@@252 $generated@@575)) ($generated@@252 ($generated@@223 $generated@@574 $generated@@575))))
 :pattern ( ($generated@@223 ($generated@@252 $generated@@574) ($generated@@252 $generated@@575)))
)))
(assert (forall (($generated@@576 T@U) ) (! (= ($generated@@294 ($generated@@252 $generated@@576)) ($generated@@252 ($generated@@294 $generated@@576)))
 :pattern ( ($generated@@294 ($generated@@252 $generated@@576)))
)))
(assert (forall (($generated@@577 T@U) ) (! (let (($generated@@578 ($generated@@285 (type $generated@@577))))
 (=> (and (= (type $generated@@577) ($generated@@284 $generated@@578)) (= ($generated@@283 $generated@@577) 0)) (= $generated@@577 ($generated@@282 $generated@@578))))
 :pattern ( ($generated@@283 $generated@@577))
)))
(assert (forall (($generated@@579 T@U) ($generated@@580 T@U) ($generated@@581 T@U) ) (! (let (($generated@@582 (type $generated@@580)))
 (=> (and (and (= (type $generated@@579) ($generated@@82 $generated@@582 $generated@@2)) (= (type $generated@@581) $generated@@2)) (<= 0 ($generated $generated@@581))) (= ($generated@@299 ($generated@@88 $generated@@579 $generated@@580 $generated@@581)) (+ (- ($generated@@299 $generated@@579) ($generated ($generated@@87 $generated@@579 $generated@@580))) ($generated $generated@@581)))))
 :pattern ( ($generated@@299 ($generated@@88 $generated@@579 $generated@@580 $generated@@581)))
)))
(assert (forall (($generated@@583 T@U) ) (!  (=> (and (= (type $generated@@583) $generated@@142) ($generated@@138 $generated@@583 $generated@@231)) (or (or (or ($generated@@256 $generated@@583) ($generated@@259 $generated@@583)) ($generated@@262 $generated@@583)) ($generated@@265 $generated@@583)))
 :pattern ( ($generated@@265 $generated@@583) ($generated@@138 $generated@@583 $generated@@231))
 :pattern ( ($generated@@262 $generated@@583) ($generated@@138 $generated@@583 $generated@@231))
 :pattern ( ($generated@@259 $generated@@583) ($generated@@138 $generated@@583 $generated@@231))
 :pattern ( ($generated@@256 $generated@@583) ($generated@@138 $generated@@583 $generated@@231))
)))
(assert (forall (($generated@@584 T@U) ($generated@@585 T@U) ) (!  (=> (and (= (type $generated@@584) ($generated@@82 $generated@@83 $generated@@84)) (= (type $generated@@585) $generated@@2)) ($generated@@80 $generated@@585 $generated@@46 $generated@@584))
 :pattern ( ($generated@@80 $generated@@585 $generated@@46 $generated@@584))
)))
(assert (forall (($generated@@586 T@U) ($generated@@587 T@U) ) (!  (=> (and (= (type $generated@@586) ($generated@@82 $generated@@83 $generated@@84)) (= (type $generated@@587) $generated@@3)) ($generated@@80 $generated@@587 $generated@@47 $generated@@586))
 :pattern ( ($generated@@80 $generated@@587 $generated@@47 $generated@@586))
)))
(assert (forall (($generated@@588 T@U) ($generated@@589 T@U) ) (!  (=> (and (= (type $generated@@588) ($generated@@82 $generated@@83 $generated@@84)) (= (type $generated@@589) $generated@@4)) ($generated@@80 $generated@@589 $generated@@44 $generated@@588))
 :pattern ( ($generated@@80 $generated@@589 $generated@@44 $generated@@588))
)))
(assert (forall (($generated@@590 T@U) ($generated@@591 T@U) ) (!  (=> (and (= (type $generated@@590) ($generated@@82 $generated@@83 $generated@@84)) (= (type $generated@@591) $generated@@449)) ($generated@@80 $generated@@591 $generated@@45 $generated@@590))
 :pattern ( ($generated@@80 $generated@@591 $generated@@45 $generated@@590))
)))
(assert (forall (($generated@@592 T@U) ($generated@@593 T@U) ) (!  (=> (and (= (type $generated@@592) ($generated@@82 $generated@@83 $generated@@84)) (= (type $generated@@593) $generated@@151)) ($generated@@80 $generated@@593 $generated@@48 $generated@@592))
 :pattern ( ($generated@@80 $generated@@593 $generated@@48 $generated@@592))
)))
(assert (forall (($generated@@594 T@U) ($generated@@595 T@U) ) (!  (=> (and (= (type $generated@@594) ($generated@@284 $generated@@151)) (= (type $generated@@595) $generated@@70)) (= ($generated@@138 $generated@@594 ($generated@@491 $generated@@595)) (forall (($generated@@596 Int) ) (!  (=> (and (<= 0 $generated@@596) (< $generated@@596 ($generated@@283 $generated@@594))) ($generated@@224 ($generated@@492 $generated@@594 $generated@@596) $generated@@595))
 :pattern ( ($generated@@492 $generated@@594 $generated@@596))
))))
 :pattern ( ($generated@@138 $generated@@594 ($generated@@491 $generated@@595)))
)))
(assert (forall (($generated@@598 T@U) ($generated@@599 Int) ) (!  (=> (= (type $generated@@598) ($generated@@284 $generated@@151)) (=> (and (<= 0 $generated@@599) (< $generated@@599 ($generated@@283 $generated@@598))) (< ($generated@@530 ($generated@@344 $generated@@142 ($generated@@492 $generated@@598 $generated@@599))) ($generated@@597 $generated@@598))))
 :pattern ( ($generated@@530 ($generated@@344 $generated@@142 ($generated@@492 $generated@@598 $generated@@599))))
)))
(assert (forall (($generated@@600 T@U) ($generated@@601 T@U) ($generated@@602 T@U) ) (!  (=> (and (and (and (= (type $generated@@600) ($generated@@307 $generated@@151 $generated@@151)) (= (type $generated@@601) $generated@@70)) (= (type $generated@@602) $generated@@70)) ($generated@@138 $generated@@600 ($generated@@409 $generated@@601 $generated@@602))) (and (and ($generated@@138 ($generated@@305 $generated@@600) ($generated@@242 $generated@@601)) ($generated@@138 ($generated@@352 $generated@@600) ($generated@@242 $generated@@602))) ($generated@@138 ($generated@@383 $generated@@600) ($generated@@242 ($generated@@141 $generated@@601 $generated@@602)))))
 :pattern ( ($generated@@138 $generated@@600 ($generated@@409 $generated@@601 $generated@@602)))
)))
(assert (forall (($generated@@603 T@U) ($generated@@604 T@U) ($generated@@605 T@U) ) (!  (=> (and (and (and (= (type $generated@@603) ($generated@@325 $generated@@151 $generated@@151)) (= (type $generated@@604) $generated@@70)) (= (type $generated@@605) $generated@@70)) ($generated@@138 $generated@@603 ($generated@@417 $generated@@604 $generated@@605))) (and (and ($generated@@138 ($generated@@323 $generated@@603) ($generated@@247 $generated@@604)) ($generated@@138 ($generated@@363 $generated@@603) ($generated@@247 $generated@@605))) ($generated@@138 ($generated@@391 $generated@@603) ($generated@@247 ($generated@@141 $generated@@604 $generated@@605)))))
 :pattern ( ($generated@@138 $generated@@603 ($generated@@417 $generated@@604 $generated@@605)))
)))
(assert (forall (($generated@@606 T@U) ) (!  (=> (= (type $generated@@606) $generated@@2) ($generated@@138 $generated@@606 $generated@@46))
 :pattern ( ($generated@@138 $generated@@606 $generated@@46))
)))
(assert (forall (($generated@@607 T@U) ) (!  (=> (= (type $generated@@607) $generated@@3) ($generated@@138 $generated@@607 $generated@@47))
 :pattern ( ($generated@@138 $generated@@607 $generated@@47))
)))
(assert (forall (($generated@@608 T@U) ) (!  (=> (= (type $generated@@608) $generated@@4) ($generated@@138 $generated@@608 $generated@@44))
 :pattern ( ($generated@@138 $generated@@608 $generated@@44))
)))
(assert (forall (($generated@@609 T@U) ) (!  (=> (= (type $generated@@609) $generated@@449) ($generated@@138 $generated@@609 $generated@@45))
 :pattern ( ($generated@@138 $generated@@609 $generated@@45))
)))
(assert (forall (($generated@@610 T@U) ) (!  (=> (= (type $generated@@610) $generated@@151) ($generated@@138 $generated@@610 $generated@@48))
 :pattern ( ($generated@@138 $generated@@610 $generated@@48))
)))
(push 1)
(declare-fun ControlFlow (Int Int) Int)
(declare-fun $generated@@611 () T@U)
(declare-fun $generated@@612 () T@U)
(declare-fun $generated@@613 () T@U)
(declare-fun $generated@@614 () T@U)
(declare-fun $generated@@615 (T@U) Bool)
(declare-fun $generated@@616 () Int)
(assert  (and (and (and (= (type $generated@@611) $generated@@142) (= (type $generated@@612) ($generated@@169 $generated@@83 $generated@@4))) (= (type $generated@@613) $generated@@83)) (= (type $generated@@614) ($generated@@82 $generated@@83 $generated@@84))))
(set-option :timeout 0)
(set-option :rlimit 0)
(assert (not
 (=> (= (ControlFlow 0 0) 12) (let (($generated@@617 true))
(let (($generated@@618  (=> (and (= $generated@@611 $generated@@159) (= (ControlFlow 0 6) (- 0 5))) false)))
(let (($generated@@619  (=> (not (= $generated@@611 $generated@@161)) (and (=> (= (ControlFlow 0 8) 6) $generated@@618) (=> (= (ControlFlow 0 8) 7) $generated@@617)))))
(let (($generated@@620  (=> (and (= $generated@@611 $generated@@161) (= (ControlFlow 0 4) (- 0 3))) false)))
(let (($generated@@621  (=> (not (= $generated@@611 $generated@@160)) (and (=> (= (ControlFlow 0 9) 4) $generated@@620) (=> (= (ControlFlow 0 9) 8) $generated@@619)))))
(let (($generated@@622 true))
(let (($generated@@623  (=> (not (= $generated@@611 $generated@@157)) (and (=> (= (ControlFlow 0 10) 2) $generated@@622) (=> (= (ControlFlow 0 10) 9) $generated@@621)))))
(let (($generated@@624 true))
(let (($generated@@625  (=> (= $generated@@612 ($generated@@168 $generated@@613 $generated@@614 $generated@@60 false)) (and (=> (= (ControlFlow 0 11) 1) $generated@@624) (=> (= (ControlFlow 0 11) 10) $generated@@623)))))
(let (($generated@@626  (=> (and ($generated@@232 $generated@@614) ($generated@@615 $generated@@614)) (=> (and (and (and ($generated@@138 $generated@@611 $generated@@231) ($generated@@80 $generated@@611 $generated@@231 $generated@@614)) ($generated@@564 $generated@@611)) (and (= 1 $generated@@616) (= (ControlFlow 0 12) 11))) $generated@@625))))
$generated@@626)))))))))))
))
(check-sat)
(get-info :reason-unknown)
(assert (not (= (ControlFlow 0 4) (- 3))))
(check-sat)
(get-info :reason-unknown)
(assert (not (= (ControlFlow 0 6) (- 5))))
(check-sat)
(pop 1)
; Invalid
(get-info :rlimit)
(reset)
(set-option :rlimit 0)
; did a full reset
(reset)
(set-option :print-success false)
(set-info :smt-lib-version 2.6)
(set-option :auto_config false)
(set-option :type_check true)
(set-option :smt.case_split 3)
(set-option :smt.qi.eager_threshold 100)
(set-option :smt.delay_units true)
(set-option :smt.arith.solver 2)
(set-option :smt.mbqi false)
(set-option :model.compact false)
(set-option :model.v2 true)
(set-option :pp.bv_literals false)
; done setting options


(set-info :category "industrial")
(declare-sort |T@U| 0)
(declare-sort |T@T| 0)
(declare-fun real_pow (Real Real) Real)
(declare-fun UOrdering2 (|T@U| |T@U|) Bool)
(declare-fun UOrdering3 (|T@T| |T@U| |T@U|) Bool)
(declare-fun tickleBool (Bool) Bool)
(assert (and (tickleBool true) (tickleBool false)))
(declare-fun $generated (T@U) Int)
(declare-fun $generated@@0 (T@U) Bool)
(declare-fun $generated@@1 (T@T) Int)
(declare-fun $generated@@2 () T@T)
(declare-fun $generated@@3 () T@T)
(declare-fun $generated@@4 () T@T)
(declare-fun $generated@@5 () T@T)
(declare-fun $generated@@6 () T@T)
(declare-fun $generated@@7 () T@T)
(declare-fun $generated@@8 (Int) T@U)
(declare-fun type (T@U) T@T)
(declare-fun $generated@@9 (Real) T@U)
(declare-fun $generated@@10 (T@U) Real)
(declare-fun $generated@@11 (Bool) T@U)
(declare-fun $generated@@12 (RoundingMode) T@U)
(declare-fun $generated@@13 (T@U) RoundingMode)
(declare-fun $generated@@14 (String) T@U)
(declare-fun $generated@@15 (T@U) String)
(declare-fun $generated@@16 ((RegEx String)) T@U)
(declare-fun $generated@@17 (T@U) (RegEx String))
(declare-fun $generated@@44 () T@U)
(declare-fun $generated@@45 () T@U)
(declare-fun $generated@@46 () T@U)
(declare-fun $generated@@47 () T@U)
(declare-fun $generated@@48 () T@U)
(declare-fun $generated@@49 () T@U)
(declare-fun $generated@@50 () T@U)
(declare-fun $generated@@51 () T@U)
(declare-fun $generated@@52 () T@U)
(declare-fun $generated@@53 () T@U)
(declare-fun $generated@@54 () T@U)
(declare-fun $generated@@55 () T@U)
(declare-fun $generated@@56 () T@U)
(declare-fun $generated@@57 () T@U)
(declare-fun $generated@@58 () T@U)
(declare-fun $generated@@59 () T@U)
(declare-fun $generated@@60 () T@U)
(declare-fun $generated@@61 () T@U)
(declare-fun $generated@@62 () T@U)
(declare-fun $generated@@63 () T@U)
(declare-fun $generated@@64 () T@U)
(declare-fun $generated@@65 () T@U)
(declare-fun $generated@@66 () T@U)
(declare-fun $generated@@67 () T@U)
(declare-fun $generated@@68 () T@U)
(declare-fun $generated@@69 () T@U)
(declare-fun $generated@@70 () T@T)
(declare-fun $generated@@71 () T@T)
(declare-fun $generated@@72 (T@T) T@T)
(declare-fun $generated@@73 (T@T) T@T)
(declare-fun $generated@@74 () T@T)
(declare-fun $generated@@75 () T@T)
(declare-fun $generated@@78 (T@U) T@U)
(declare-fun $generated@@80 (T@U T@U T@U) Bool)
(declare-fun $generated@@81 (Int) T@U)
(declare-fun $generated@@82 (T@T T@T) T@T)
(declare-fun $generated@@83 () T@T)
(declare-fun $generated@@84 () T@T)
(declare-fun $generated@@85 (T@T) T@T)
(declare-fun $generated@@86 (T@T) T@T)
(declare-fun $generated@@87 (T@U T@U) T@U)
(declare-fun $generated@@88 (T@U T@U T@U) T@U)
(declare-fun $generated@@89 (T@U T@U) T@U)
(declare-fun $generated@@90 (T@U T@U T@U) T@U)
(declare-fun $generated@@138 (T@U T@U) Bool)
(declare-fun $generated@@140 (T@U) Bool)
(declare-fun $generated@@141 (T@U T@U) T@U)
(declare-fun $generated@@142 () T@T)
(declare-fun $generated@@148 (T@U T@U) Bool)
(declare-fun $generated@@149 (T@U) T@U)
(declare-fun $generated@@150 (T@U) T@U)
(declare-fun $generated@@151 () T@T)
(declare-fun $generated@@156 (T@U) T@U)
(declare-fun $generated@@157 () T@U)
(declare-fun $generated@@159 () T@U)
(declare-fun $generated@@160 () T@U)
(declare-fun $generated@@161 () T@U)
(declare-fun $generated@@162 (T@U) T@U)
(declare-fun $generated@@163 (T@U) Bool)
(declare-fun $generated@@167 (T@U T@U T@U) T@U)
(declare-fun $generated@@168 (T@U T@U T@U Bool) T@U)
(declare-fun $generated@@169 (T@T T@T) T@T)
(declare-fun $generated@@170 (T@T) T@T)
(declare-fun $generated@@171 (T@T) T@T)
(declare-fun $generated@@172 (T@U T@U T@U T@U) T@U)
(declare-fun $generated@@223 (T@U T@U) T@U)
(declare-fun $generated@@224 (T@U T@U) Bool)
(declare-fun $generated@@231 () T@U)
(declare-fun $generated@@232 (T@U) Bool)
(declare-fun $generated@@239 (T@U T@U) Bool)
(declare-fun $generated@@242 (T@U) T@U)
(declare-fun $generated@@247 (T@U) T@U)
(declare-fun $generated@@252 (T@U) T@U)
(declare-fun $generated@@256 (T@U) Bool)
(declare-fun $generated@@259 (T@U) Bool)
(declare-fun $generated@@262 (T@U) Bool)
(declare-fun $generated@@265 (T@U) Bool)
(declare-fun $generated@@268 (T@U T@U T@U) Bool)
(declare-fun $generated@@282 (T@T) T@U)
(declare-fun $generated@@283 (T@U) Int)
(declare-fun $generated@@284 (T@T) T@T)
(declare-fun $generated@@285 (T@T) T@T)
(declare-fun $generated@@294 (T@U) T@U)
(declare-fun $generated@@299 (T@U) Int)
(declare-fun $generated@@300 (T@T) T@U)
(declare-fun $generated@@305 (T@U) T@U)
(declare-fun $generated@@306 (T@T T@T) T@U)
(declare-fun $generated@@307 (T@T T@T) T@T)
(declare-fun $generated@@308 (T@T) T@T)
(declare-fun $generated@@309 (T@T) T@T)
(declare-fun $generated@@323 (T@U) T@U)
(declare-fun $generated@@324 (T@T T@T) T@U)
(declare-fun $generated@@325 (T@T T@T) T@T)
(declare-fun $generated@@326 (T@T) T@T)
(declare-fun $generated@@327 (T@T) T@T)
(declare-fun $generated@@344 (T@T T@U) T@U)
(declare-fun $generated@@352 (T@U) T@U)
(declare-fun $generated@@363 (T@U) T@U)
(declare-fun $generated@@383 (T@U) T@U)
(declare-fun $generated@@384 (T@U) T@U)
(declare-fun $generated@@391 (T@U) T@U)
(declare-fun $generated@@392 (T@U) T@U)
(declare-fun $generated@@409 (T@U T@U) T@U)
(declare-fun $generated@@417 (T@U T@U) T@U)
(declare-fun $generated@@425 (T@T) T@U)
(declare-fun $generated@@449 () T@T)
(declare-fun $generated@@457 (T@U) T@U)
(declare-fun $generated@@461 (T@U) T@U)
(declare-fun $generated@@467 (T@U) T@U)
(declare-fun $generated@@471 (T@U) T@U)
(declare-fun $generated@@479 (T@U) T@U)
(declare-fun $generated@@483 (T@U) T@U)
(declare-fun $generated@@491 (T@U) T@U)
(declare-fun $generated@@492 (T@U Int) T@U)
(declare-fun $generated@@501 (T@U) Int)
(declare-fun $generated@@503 (T@U) T@U)
(declare-fun $generated@@507 (T@U) T@U)
(declare-fun $generated@@511 (T@U) T@U)
(declare-fun $generated@@515 (T@U) T@U)
(declare-fun $generated@@529 (T@U) Int)
(declare-fun $generated@@530 (T@U) Int)
(declare-fun $generated@@546 (T@U) T@U)
(declare-fun $generated@@564 (T@U) Bool)
(declare-fun $generated@@597 (T@U) Int)
(assert  (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (= ($generated@@1 $generated@@2) 0) (= ($generated@@1 $generated@@3) 1)) (= ($generated@@1 $generated@@4) 2)) (= ($generated@@1 $generated@@5) 3)) (= ($generated@@1 $generated@@6) 4)) (= ($generated@@1 $generated@@7) 5)) (forall (($generated@@18 Int) ) (! (= ($generated ($generated@@8 $generated@@18)) $generated@@18)
 :pattern ( ($generated@@8 $generated@@18))
))) (forall (($generated@@19 T@U) ) (!  (=> (= (type $generated@@19) $generated@@2) (= ($generated@@8 ($generated $generated@@19)) $generated@@19))
 :pattern ( ($generated $generated@@19))
))) (forall (($generated@@20 Int) ) (! (= (type ($generated@@8 $generated@@20)) $generated@@2)
 :pattern ( ($generated@@8 $generated@@20))
))) (forall (($generated@@21 Real) ) (! (= ($generated@@10 ($generated@@9 $generated@@21)) $generated@@21)
 :pattern ( ($generated@@9 $generated@@21))
))) (forall (($generated@@22 T@U) ) (!  (=> (= (type $generated@@22) $generated@@3) (= ($generated@@9 ($generated@@10 $generated@@22)) $generated@@22))
 :pattern ( ($generated@@10 $generated@@22))
))) (forall (($generated@@23 Real) ) (! (= (type ($generated@@9 $generated@@23)) $generated@@3)
 :pattern ( ($generated@@9 $generated@@23))
))) (forall (($generated@@24 Bool) ) (! (= ($generated@@0 ($generated@@11 $generated@@24)) $generated@@24)
 :pattern ( ($generated@@11 $generated@@24))
))) (forall (($generated@@25 T@U) ) (!  (=> (= (type $generated@@25) $generated@@4) (= ($generated@@11 ($generated@@0 $generated@@25)) $generated@@25))
 :pattern ( ($generated@@0 $generated@@25))
))) (forall (($generated@@26 Bool) ) (! (= (type ($generated@@11 $generated@@26)) $generated@@4)
 :pattern ( ($generated@@11 $generated@@26))
))) (forall (($generated@@27 RoundingMode) ) (! (= ($generated@@13 ($generated@@12 $generated@@27)) $generated@@27)
 :pattern ( ($generated@@12 $generated@@27))
))) (forall (($generated@@28 T@U) ) (!  (=> (= (type $generated@@28) $generated@@5) (= ($generated@@12 ($generated@@13 $generated@@28)) $generated@@28))
 :pattern ( ($generated@@13 $generated@@28))
))) (forall (($generated@@29 RoundingMode) ) (! (= (type ($generated@@12 $generated@@29)) $generated@@5)
 :pattern ( ($generated@@12 $generated@@29))
))) (forall (($generated@@30 String) ) (! (= ($generated@@15 ($generated@@14 $generated@@30)) $generated@@30)
 :pattern ( ($generated@@14 $generated@@30))
))) (forall (($generated@@31 T@U) ) (!  (=> (= (type $generated@@31) $generated@@6) (= ($generated@@14 ($generated@@15 $generated@@31)) $generated@@31))
 :pattern ( ($generated@@15 $generated@@31))
))) (forall (($generated@@32 String) ) (! (= (type ($generated@@14 $generated@@32)) $generated@@6)
 :pattern ( ($generated@@14 $generated@@32))
))) (forall (($generated@@33 (RegEx String)) ) (! (= ($generated@@17 ($generated@@16 $generated@@33)) $generated@@33)
 :pattern ( ($generated@@16 $generated@@33))
))) (forall (($generated@@34 T@U) ) (!  (=> (= (type $generated@@34) $generated@@7) (= ($generated@@16 ($generated@@17 $generated@@34)) $generated@@34))
 :pattern ( ($generated@@17 $generated@@34))
))) (forall (($generated@@35 (RegEx String)) ) (! (= (type ($generated@@16 $generated@@35)) $generated@@7)
 :pattern ( ($generated@@16 $generated@@35))
))))
(assert (forall (($generated@@36 T@U) ) (! (UOrdering2 $generated@@36 $generated@@36)
 :no-pattern ($generated $generated@@36)
 :no-pattern ($generated@@0 $generated@@36)
)))
(assert (forall (($generated@@37 T@U) ($generated@@38 T@U) ($generated@@39 T@U) ) (! (let (($generated@@40 (type $generated@@37)))
 (=> (and (and (= (type $generated@@38) $generated@@40) (= (type $generated@@39) $generated@@40)) (and (UOrdering2 $generated@@37 $generated@@38) (UOrdering2 $generated@@38 $generated@@39))) (UOrdering2 $generated@@37 $generated@@39)))
 :pattern ( (UOrdering2 $generated@@37 $generated@@38) (UOrdering2 $generated@@38 $generated@@39))
)))
(assert (forall (($generated@@41 T@U) ($generated@@42 T@U) ) (! (let (($generated@@43 (type $generated@@41)))
 (=> (= (type $generated@@42) $generated@@43) (=> (and (UOrdering2 $generated@@41 $generated@@42) (UOrdering2 $generated@@42 $generated@@41)) (= $generated@@41 $generated@@42))))
 :pattern ( (UOrdering2 $generated@@41 $generated@@42) (UOrdering2 $generated@@42 $generated@@41))
)))
(assert  (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (= ($generated@@1 $generated@@70) 6) (= (type $generated@@44) $generated@@70)) (= (type $generated@@45) $generated@@70)) (= (type $generated@@46) $generated@@70)) (= (type $generated@@47) $generated@@70)) (= (type $generated@@48) $generated@@70)) (= ($generated@@1 $generated@@71) 7)) (= (type $generated@@49) $generated@@71)) (= (type $generated@@50) $generated@@71)) (= (type $generated@@51) $generated@@71)) (= (type $generated@@52) $generated@@71)) (= (type $generated@@53) $generated@@71)) (= (type $generated@@54) $generated@@71)) (= (type $generated@@55) $generated@@71)) (= (type $generated@@56) $generated@@71)) (= (type $generated@@57) $generated@@71)) (= (type $generated@@58) $generated@@71)) (= (type $generated@@59) $generated@@71)) (forall (($generated@@76 T@T) ) (= ($generated@@1 ($generated@@72 $generated@@76)) 8))) (forall (($generated@@77 T@T) ) (! (= ($generated@@73 ($generated@@72 $generated@@77)) $generated@@77)
 :pattern ( ($generated@@72 $generated@@77))
))) (= (type $generated@@60) ($generated@@72 $generated@@4))) (= ($generated@@1 $generated@@74) 9)) (= (type $generated@@61) $generated@@74)) (= (type $generated@@62) $generated@@71)) (= (type $generated@@63) $generated@@74)) (= (type $generated@@64) $generated@@71)) (= (type $generated@@65) $generated@@74)) (= (type $generated@@66) $generated@@74)) (= (type $generated@@67) $generated@@74)) (= ($generated@@1 $generated@@75) 10)) (= (type $generated@@68) $generated@@75)) (= (type $generated@@69) $generated@@75)))
(assert (distinct $generated@@44 $generated@@45 $generated@@46 $generated@@47 $generated@@48 $generated@@49 $generated@@50 $generated@@51 $generated@@52 $generated@@53 $generated@@54 $generated@@55 $generated@@56 $generated@@57 $generated@@58 $generated@@59 $generated@@60 $generated@@61 $generated@@62 $generated@@63 $generated@@64 $generated@@65 $generated@@66 $generated@@67 $generated@@68 $generated@@69)
)
(assert (forall (($generated@@79 T@U) ) (! (= (type ($generated@@78 $generated@@79)) $generated@@71)
 :pattern ( ($generated@@78 $generated@@79))
)))
(assert (= ($generated@@78 $generated@@44) $generated@@49))
(assert (= ($generated@@78 $generated@@45) $generated@@50))
(assert (= ($generated@@78 $generated@@46) $generated@@51))
(assert (= ($generated@@78 $generated@@47) $generated@@52))
(assert (= ($generated@@78 $generated@@48) $generated@@53))
(assert  (and (and (and (and (and (and (and (and (and (and (and (and (and (forall (($generated@@91 T@T) ($generated@@92 T@T) ) (= ($generated@@1 ($generated@@82 $generated@@91 $generated@@92)) 11)) (forall (($generated@@93 T@T) ($generated@@94 T@T) ) (! (= ($generated@@85 ($generated@@82 $generated@@93 $generated@@94)) $generated@@93)
 :pattern ( ($generated@@82 $generated@@93 $generated@@94))
))) (forall (($generated@@95 T@T) ($generated@@96 T@T) ) (! (= ($generated@@86 ($generated@@82 $generated@@95 $generated@@96)) $generated@@96)
 :pattern ( ($generated@@82 $generated@@95 $generated@@96))
))) (forall (($generated@@97 T@U) ($generated@@98 T@U) ) (! (let (($generated@@99 ($generated@@86 (type $generated@@97))))
(= (type ($generated@@87 $generated@@97 $generated@@98)) $generated@@99))
 :pattern ( ($generated@@87 $generated@@97 $generated@@98))
))) (forall (($generated@@100 T@U) ($generated@@101 T@U) ($generated@@102 T@U) ) (! (let (($generated@@103 (type $generated@@102)))
(let (($generated@@104 (type $generated@@101)))
(= (type ($generated@@88 $generated@@100 $generated@@101 $generated@@102)) ($generated@@82 $generated@@104 $generated@@103))))
 :pattern ( ($generated@@88 $generated@@100 $generated@@101 $generated@@102))
))) (forall (($generated@@105 T@U) ($generated@@106 T@U) ($generated@@107 T@U) ) (! (let (($generated@@108 ($generated@@86 (type $generated@@105))))
 (=> (= (type $generated@@107) $generated@@108) (= ($generated@@87 ($generated@@88 $generated@@105 $generated@@106 $generated@@107) $generated@@106) $generated@@107)))
 :weight 0
))) (and (forall (($generated@@109 T@U) ($generated@@110 T@U) ($generated@@111 T@U) ($generated@@112 T@U) ) (!  (or (= $generated@@111 $generated@@112) (= ($generated@@87 ($generated@@88 $generated@@110 $generated@@111 $generated@@109) $generated@@112) ($generated@@87 $generated@@110 $generated@@112)))
 :weight 0
)) (forall (($generated@@113 T@U) ($generated@@114 T@U) ($generated@@115 T@U) ($generated@@116 T@U) ) (!  (or true (= ($generated@@87 ($generated@@88 $generated@@114 $generated@@115 $generated@@113) $generated@@116) ($generated@@87 $generated@@114 $generated@@116)))
 :weight 0
)))) (= ($generated@@1 $generated@@83) 12)) (forall (($generated@@117 T@U) ($generated@@118 T@U) ) (! (let (($generated@@119 ($generated@@73 (type $generated@@118))))
(= (type ($generated@@89 $generated@@117 $generated@@118)) $generated@@119))
 :pattern ( ($generated@@89 $generated@@117 $generated@@118))
))) (= ($generated@@1 $generated@@84) 13)) (forall (($generated@@120 T@U) ($generated@@121 T@U) ($generated@@122 T@U) ) (! (= (type ($generated@@90 $generated@@120 $generated@@121 $generated@@122)) $generated@@84)
 :pattern ( ($generated@@90 $generated@@120 $generated@@121 $generated@@122))
))) (forall (($generated@@123 T@U) ($generated@@124 T@U) ($generated@@125 T@U) ) (! (let (($generated@@126 ($generated@@73 (type $generated@@124))))
 (=> (= (type $generated@@125) $generated@@126) (= ($generated@@89 ($generated@@90 $generated@@123 $generated@@124 $generated@@125) $generated@@124) $generated@@125)))
 :weight 0
))) (and (forall (($generated@@127 T@U) ($generated@@128 T@U) ($generated@@129 T@U) ($generated@@130 T@U) ) (!  (or (= $generated@@129 $generated@@130) (= ($generated@@89 ($generated@@90 $generated@@128 $generated@@129 $generated@@127) $generated@@130) ($generated@@89 $generated@@128 $generated@@130)))
 :weight 0
)) (forall (($generated@@131 T@U) ($generated@@132 T@U) ($generated@@133 T@U) ($generated@@134 T@U) ) (!  (or true (= ($generated@@89 ($generated@@90 $generated@@132 $generated@@133 $generated@@131) $generated@@134) ($generated@@89 $generated@@132 $generated@@134)))
 :weight 0
)))) (forall (($generated@@135 Int) ) (! (= (type ($generated@@81 $generated@@135)) $generated@@70)
 :pattern ( ($generated@@81 $generated@@135))
))))
(assert (forall (($generated@@136 T@U) ($generated@@137 T@U) ) (!  (=> (and (= (type $generated@@136) $generated@@2) (= (type $generated@@137) ($generated@@82 $generated@@83 $generated@@84))) ($generated@@80 $generated@@136 ($generated@@81 0) $generated@@137))
 :pattern ( ($generated@@80 $generated@@136 ($generated@@81 0) $generated@@137))
)))
(assert (forall (($generated@@139 T@U) ) (!  (=> (= (type $generated@@139) $generated@@2) ($generated@@138 $generated@@139 ($generated@@81 0)))
 :pattern ( ($generated@@138 $generated@@139 ($generated@@81 0)))
)))
(assert  (and (= ($generated@@1 $generated@@142) 14) (forall (($generated@@143 T@U) ($generated@@144 T@U) ) (! (= (type ($generated@@141 $generated@@143 $generated@@144)) $generated@@70)
 :pattern ( ($generated@@141 $generated@@143 $generated@@144))
))))
(assert (forall (($generated@@145 T@U) ($generated@@146 T@U) ($generated@@147 T@U) ) (!  (=> (and (and (and (= (type $generated@@145) $generated@@70) (= (type $generated@@146) $generated@@70)) (= (type $generated@@147) $generated@@142)) ($generated@@138 $generated@@147 ($generated@@141 $generated@@145 $generated@@146))) ($generated@@140 $generated@@147))
 :pattern ( ($generated@@140 $generated@@147) ($generated@@138 $generated@@147 ($generated@@141 $generated@@145 $generated@@146)))
)))
(assert  (and (and (= ($generated@@1 $generated@@151) 15) (forall (($generated@@152 T@U) ) (! (= (type ($generated@@149 $generated@@152)) $generated@@151)
 :pattern ( ($generated@@149 $generated@@152))
))) (forall (($generated@@153 T@U) ) (! (= (type ($generated@@150 $generated@@153)) $generated@@151)
 :pattern ( ($generated@@150 $generated@@153))
))))
(assert (forall (($generated@@154 T@U) ($generated@@155 T@U) ) (!  (=> (and (and (= (type $generated@@154) $generated@@142) (= (type $generated@@155) $generated@@142)) true) (= ($generated@@148 $generated@@154 $generated@@155)  (and (= ($generated@@149 $generated@@154) ($generated@@149 $generated@@155)) (= ($generated@@150 $generated@@154) ($generated@@150 $generated@@155)))))
 :pattern ( ($generated@@148 $generated@@154 $generated@@155))
)))
(assert  (and (forall (($generated@@158 T@U) ) (! (= (type ($generated@@156 $generated@@158)) $generated@@74)
 :pattern ( ($generated@@156 $generated@@158))
)) (= (type $generated@@157) $generated@@142)))
(assert (= ($generated@@156 $generated@@157) $generated@@63))
(assert (= (type $generated@@159) $generated@@142))
(assert (= ($generated@@156 $generated@@159) $generated@@65))
(assert (= (type $generated@@160) $generated@@142))
(assert (= ($generated@@156 $generated@@160) $generated@@66))
(assert (= (type $generated@@161) $generated@@142))
(assert (= ($generated@@156 $generated@@161) $generated@@67))
(assert (forall (($generated@@164 T@U) ) (! (= (type ($generated@@162 $generated@@164)) $generated@@70)
 :pattern ( ($generated@@162 $generated@@164))
)))
(assert (forall (($generated@@165 T@U) ($generated@@166 T@U) ) (!  (=> (and (and (= (type $generated@@165) ($generated@@82 $generated@@151 $generated@@2)) (= (type $generated@@166) $generated@@70)) ($generated@@138 $generated@@165 ($generated@@162 $generated@@166))) ($generated@@163 $generated@@165))
 :pattern ( ($generated@@138 $generated@@165 ($generated@@162 $generated@@166)))
)))
(assert  (and (and (and (and (and (and (and (forall (($generated@@173 T@T) ($generated@@174 T@T) ) (= ($generated@@1 ($generated@@169 $generated@@173 $generated@@174)) 16)) (forall (($generated@@175 T@T) ($generated@@176 T@T) ) (! (= ($generated@@170 ($generated@@169 $generated@@175 $generated@@176)) $generated@@175)
 :pattern ( ($generated@@169 $generated@@175 $generated@@176))
))) (forall (($generated@@177 T@T) ($generated@@178 T@T) ) (! (= ($generated@@171 ($generated@@169 $generated@@177 $generated@@178)) $generated@@178)
 :pattern ( ($generated@@169 $generated@@177 $generated@@178))
))) (forall (($generated@@179 T@U) ($generated@@180 T@U) ($generated@@181 T@U) ) (! (let (($generated@@182 ($generated@@171 (type $generated@@179))))
(= (type ($generated@@167 $generated@@179 $generated@@180 $generated@@181)) $generated@@182))
 :pattern ( ($generated@@167 $generated@@179 $generated@@180 $generated@@181))
))) (forall (($generated@@183 T@U) ($generated@@184 T@U) ($generated@@185 T@U) ($generated@@186 T@U) ) (! (let (($generated@@187 (type $generated@@186)))
(let (($generated@@188 (type $generated@@184)))
(= (type ($generated@@172 $generated@@183 $generated@@184 $generated@@185 $generated@@186)) ($generated@@169 $generated@@188 $generated@@187))))
 :pattern ( ($generated@@172 $generated@@183 $generated@@184 $generated@@185 $generated@@186))
))) (forall (($generated@@189 T@U) ($generated@@190 T@U) ($generated@@191 T@U) ($generated@@192 T@U) ) (! (let (($generated@@193 ($generated@@171 (type $generated@@189))))
 (=> (= (type $generated@@192) $generated@@193) (= ($generated@@167 ($generated@@172 $generated@@189 $generated@@190 $generated@@191 $generated@@192) $generated@@190 $generated@@191) $generated@@192)))
 :weight 0
))) (and (and (forall (($generated@@194 T@U) ($generated@@195 T@U) ($generated@@196 T@U) ($generated@@197 T@U) ($generated@@198 T@U) ($generated@@199 T@U) ) (!  (or (= $generated@@196 $generated@@198) (= ($generated@@167 ($generated@@172 $generated@@195 $generated@@196 $generated@@197 $generated@@194) $generated@@198 $generated@@199) ($generated@@167 $generated@@195 $generated@@198 $generated@@199)))
 :weight 0
)) (forall (($generated@@200 T@U) ($generated@@201 T@U) ($generated@@202 T@U) ($generated@@203 T@U) ($generated@@204 T@U) ($generated@@205 T@U) ) (!  (or (= $generated@@203 $generated@@205) (= ($generated@@167 ($generated@@172 $generated@@201 $generated@@202 $generated@@203 $generated@@200) $generated@@204 $generated@@205) ($generated@@167 $generated@@201 $generated@@204 $generated@@205)))
 :weight 0
))) (forall (($generated@@206 T@U) ($generated@@207 T@U) ($generated@@208 T@U) ($generated@@209 T@U) ($generated@@210 T@U) ($generated@@211 T@U) ) (!  (or true (= ($generated@@167 ($generated@@172 $generated@@207 $generated@@208 $generated@@209 $generated@@206) $generated@@210 $generated@@211) ($generated@@167 $generated@@207 $generated@@210 $generated@@211)))
 :weight 0
)))) (forall (($generated@@212 T@U) ($generated@@213 T@U) ($generated@@214 T@U) ($generated@@215 Bool) ) (! (= (type ($generated@@168 $generated@@212 $generated@@213 $generated@@214 $generated@@215)) ($generated@@169 $generated@@83 $generated@@4))
 :pattern ( ($generated@@168 $generated@@212 $generated@@213 $generated@@214 $generated@@215))
))))
(assert (forall (($generated@@216 T@U) ($generated@@217 T@U) ($generated@@218 T@U) ($generated@@219 Bool) ($generated@@220 T@U) ($generated@@221 T@U) ) (! (let (($generated@@222 ($generated@@73 (type $generated@@221))))
 (=> (and (and (and (and (= (type $generated@@216) $generated@@83) (= (type $generated@@217) ($generated@@82 $generated@@83 $generated@@84))) (= (type $generated@@218) ($generated@@72 $generated@@4))) (= (type $generated@@220) $generated@@83)) (= (type $generated@@221) ($generated@@72 $generated@@222))) (= ($generated@@0 ($generated@@167 ($generated@@168 $generated@@216 $generated@@217 $generated@@218 $generated@@219) $generated@@220 $generated@@221))  (=> (and (not (= $generated@@220 $generated@@216)) ($generated@@0 ($generated@@89 ($generated@@87 $generated@@217 $generated@@220) $generated@@218))) $generated@@219))))
 :pattern ( ($generated@@167 ($generated@@168 $generated@@216 $generated@@217 $generated@@218 $generated@@219) $generated@@220 $generated@@221))
)))
(assert (forall (($generated@@225 T@U) ($generated@@226 T@U) ) (! (= (type ($generated@@223 $generated@@225 $generated@@226)) $generated@@142)
 :pattern ( ($generated@@223 $generated@@225 $generated@@226))
)))
(assert (forall (($generated@@227 T@U) ($generated@@228 T@U) ($generated@@229 T@U) ($generated@@230 T@U) ) (!  (=> (and (and (and (= (type $generated@@227) $generated@@70) (= (type $generated@@228) $generated@@70)) (= (type $generated@@229) $generated@@151)) (= (type $generated@@230) $generated@@151)) (= ($generated@@138 ($generated@@223 $generated@@229 $generated@@230) ($generated@@141 $generated@@227 $generated@@228))  (and ($generated@@224 $generated@@229 $generated@@227) ($generated@@224 $generated@@230 $generated@@228))))
 :pattern ( ($generated@@138 ($generated@@223 $generated@@229 $generated@@230) ($generated@@141 $generated@@227 $generated@@228)))
)))
(assert (= (type $generated@@231) $generated@@70))
(assert ($generated@@138 $generated@@157 $generated@@231))
(assert ($generated@@138 $generated@@159 $generated@@231))
(assert ($generated@@138 $generated@@160 $generated@@231))
(assert ($generated@@138 $generated@@161 $generated@@231))
(assert (forall (($generated@@233 T@U) ) (!  (=> (and (= (type $generated@@233) ($generated@@82 $generated@@83 $generated@@84)) ($generated@@232 $generated@@233)) ($generated@@80 $generated@@157 $generated@@231 $generated@@233))
 :pattern ( ($generated@@80 $generated@@157 $generated@@231 $generated@@233))
)))
(assert (forall (($generated@@234 T@U) ) (!  (=> (and (= (type $generated@@234) ($generated@@82 $generated@@83 $generated@@84)) ($generated@@232 $generated@@234)) ($generated@@80 $generated@@159 $generated@@231 $generated@@234))
 :pattern ( ($generated@@80 $generated@@159 $generated@@231 $generated@@234))
)))
(assert (forall (($generated@@235 T@U) ) (!  (=> (and (= (type $generated@@235) ($generated@@82 $generated@@83 $generated@@84)) ($generated@@232 $generated@@235)) ($generated@@80 $generated@@160 $generated@@231 $generated@@235))
 :pattern ( ($generated@@80 $generated@@160 $generated@@231 $generated@@235))
)))
(assert (forall (($generated@@236 T@U) ) (!  (=> (and (= (type $generated@@236) ($generated@@82 $generated@@83 $generated@@84)) ($generated@@232 $generated@@236)) ($generated@@80 $generated@@161 $generated@@231 $generated@@236))
 :pattern ( ($generated@@80 $generated@@161 $generated@@231 $generated@@236))
)))
(assert (forall (($generated@@237 T@U) ($generated@@238 T@U) ) (!  (=> (and (= (type $generated@@237) $generated@@142) (= (type $generated@@238) $generated@@142)) (= ($generated@@148 $generated@@237 $generated@@238) (= $generated@@237 $generated@@238)))
 :pattern ( ($generated@@148 $generated@@237 $generated@@238))
)))
(assert (forall (($generated@@240 T@U) ($generated@@241 T@U) ) (!  (=> (and (= (type $generated@@240) $generated@@142) (= (type $generated@@241) $generated@@142)) (= ($generated@@239 $generated@@240 $generated@@241) (= $generated@@240 $generated@@241)))
 :pattern ( ($generated@@239 $generated@@240 $generated@@241))
)))
(assert (forall (($generated@@243 T@U) ) (! (= (type ($generated@@242 $generated@@243)) $generated@@70)
 :pattern ( ($generated@@242 $generated@@243))
)))
(assert (forall (($generated@@244 T@U) ($generated@@245 T@U) ) (!  (=> (and (= (type $generated@@244) ($generated@@82 $generated@@151 $generated@@4)) (= (type $generated@@245) $generated@@70)) (= ($generated@@138 $generated@@244 ($generated@@242 $generated@@245)) (forall (($generated@@246 T@U) ) (!  (=> (and (= (type $generated@@246) $generated@@151) ($generated@@0 ($generated@@87 $generated@@244 $generated@@246))) ($generated@@224 $generated@@246 $generated@@245))
 :pattern ( ($generated@@87 $generated@@244 $generated@@246))
))))
 :pattern ( ($generated@@138 $generated@@244 ($generated@@242 $generated@@245)))
)))
(assert (forall (($generated@@248 T@U) ) (! (= (type ($generated@@247 $generated@@248)) $generated@@70)
 :pattern ( ($generated@@247 $generated@@248))
)))
(assert (forall (($generated@@249 T@U) ($generated@@250 T@U) ) (!  (=> (and (= (type $generated@@249) ($generated@@82 $generated@@151 $generated@@4)) (= (type $generated@@250) $generated@@70)) (= ($generated@@138 $generated@@249 ($generated@@247 $generated@@250)) (forall (($generated@@251 T@U) ) (!  (=> (and (= (type $generated@@251) $generated@@151) ($generated@@0 ($generated@@87 $generated@@249 $generated@@251))) ($generated@@224 $generated@@251 $generated@@250))
 :pattern ( ($generated@@87 $generated@@249 $generated@@251))
))))
 :pattern ( ($generated@@138 $generated@@249 ($generated@@247 $generated@@250)))
)))
(assert (forall (($generated@@253 T@U) ) (! (let (($generated@@254 (type $generated@@253)))
(= (type ($generated@@252 $generated@@253)) $generated@@254))
 :pattern ( ($generated@@252 $generated@@253))
)))
(assert (forall (($generated@@255 T@U) ) (! (= ($generated@@252 $generated@@255) $generated@@255)
 :pattern ( ($generated@@252 $generated@@255))
)))
(assert (forall (($generated@@257 T@U) ($generated@@258 T@U) ) (!  (=> (and (and (= (type $generated@@257) $generated@@142) (= (type $generated@@258) $generated@@142)) (and ($generated@@256 $generated@@257) ($generated@@256 $generated@@258))) (= ($generated@@239 $generated@@257 $generated@@258) true))
 :pattern ( ($generated@@239 $generated@@257 $generated@@258) ($generated@@256 $generated@@257))
 :pattern ( ($generated@@239 $generated@@257 $generated@@258) ($generated@@256 $generated@@258))
)))
(assert (forall (($generated@@260 T@U) ($generated@@261 T@U) ) (!  (=> (and (and (= (type $generated@@260) $generated@@142) (= (type $generated@@261) $generated@@142)) (and ($generated@@259 $generated@@260) ($generated@@259 $generated@@261))) (= ($generated@@239 $generated@@260 $generated@@261) true))
 :pattern ( ($generated@@239 $generated@@260 $generated@@261) ($generated@@259 $generated@@260))
 :pattern ( ($generated@@239 $generated@@260 $generated@@261) ($generated@@259 $generated@@261))
)))
(assert (forall (($generated@@263 T@U) ($generated@@264 T@U) ) (!  (=> (and (and (= (type $generated@@263) $generated@@142) (= (type $generated@@264) $generated@@142)) (and ($generated@@262 $generated@@263) ($generated@@262 $generated@@264))) (= ($generated@@239 $generated@@263 $generated@@264) true))
 :pattern ( ($generated@@239 $generated@@263 $generated@@264) ($generated@@262 $generated@@263))
 :pattern ( ($generated@@239 $generated@@263 $generated@@264) ($generated@@262 $generated@@264))
)))
(assert (forall (($generated@@266 T@U) ($generated@@267 T@U) ) (!  (=> (and (and (= (type $generated@@266) $generated@@142) (= (type $generated@@267) $generated@@142)) (and ($generated@@265 $generated@@266) ($generated@@265 $generated@@267))) (= ($generated@@239 $generated@@266 $generated@@267) true))
 :pattern ( ($generated@@239 $generated@@266 $generated@@267) ($generated@@265 $generated@@266))
 :pattern ( ($generated@@239 $generated@@266 $generated@@267) ($generated@@265 $generated@@267))
)))
(assert (forall (($generated@@269 T@U) ($generated@@270 T@U) ($generated@@271 T@U) ($generated@@272 T@U) ($generated@@273 T@U) ) (!  (=> (and (and (and (and (and (= (type $generated@@269) $generated@@70) (= (type $generated@@270) $generated@@70)) (= (type $generated@@271) $generated@@151)) (= (type $generated@@272) $generated@@151)) (= (type $generated@@273) ($generated@@82 $generated@@83 $generated@@84))) ($generated@@232 $generated@@273)) (= ($generated@@80 ($generated@@223 $generated@@271 $generated@@272) ($generated@@141 $generated@@269 $generated@@270) $generated@@273)  (and ($generated@@268 $generated@@271 $generated@@269 $generated@@273) ($generated@@268 $generated@@272 $generated@@270 $generated@@273))))
 :pattern ( ($generated@@80 ($generated@@223 $generated@@271 $generated@@272) ($generated@@141 $generated@@269 $generated@@270) $generated@@273))
)))
(assert (forall (($generated@@274 T@U) ) (!  (=> (= (type $generated@@274) $generated@@142) (= ($generated@@140 $generated@@274) (= ($generated@@156 $generated@@274) $generated@@61)))
 :pattern ( ($generated@@140 $generated@@274))
)))
(assert (forall (($generated@@275 T@U) ) (!  (=> (= (type $generated@@275) $generated@@142) (= ($generated@@256 $generated@@275) (= ($generated@@156 $generated@@275) $generated@@63)))
 :pattern ( ($generated@@256 $generated@@275))
)))
(assert (forall (($generated@@276 T@U) ) (!  (=> (= (type $generated@@276) $generated@@142) (= ($generated@@259 $generated@@276) (= ($generated@@156 $generated@@276) $generated@@65)))
 :pattern ( ($generated@@259 $generated@@276))
)))
(assert (forall (($generated@@277 T@U) ) (!  (=> (= (type $generated@@277) $generated@@142) (= ($generated@@262 $generated@@277) (= ($generated@@156 $generated@@277) $generated@@66)))
 :pattern ( ($generated@@262 $generated@@277))
)))
(assert (forall (($generated@@278 T@U) ) (!  (=> (= (type $generated@@278) $generated@@142) (= ($generated@@265 $generated@@278) (= ($generated@@156 $generated@@278) $generated@@67)))
 :pattern ( ($generated@@265 $generated@@278))
)))
(assert (forall (($generated@@279 T@U) ) (!  (=> (and (= (type $generated@@279) $generated@@142) ($generated@@140 $generated@@279)) (exists (($generated@@280 T@U) ($generated@@281 T@U) ) (!  (and (and (= (type $generated@@280) $generated@@151) (= (type $generated@@281) $generated@@151)) (= $generated@@279 ($generated@@223 $generated@@280 $generated@@281)))
 :no-pattern (type $generated@@280)
 :no-pattern (type $generated@@281)
 :no-pattern ($generated $generated@@280)
 :no-pattern ($generated@@0 $generated@@280)
 :no-pattern ($generated $generated@@281)
 :no-pattern ($generated@@0 $generated@@281)
)))
 :pattern ( ($generated@@140 $generated@@279))
)))
(assert  (and (and (forall (($generated@@286 T@T) ) (= ($generated@@1 ($generated@@284 $generated@@286)) 17)) (forall (($generated@@287 T@T) ) (! (= ($generated@@285 ($generated@@284 $generated@@287)) $generated@@287)
 :pattern ( ($generated@@284 $generated@@287))
))) (forall (($generated@@288 T@T) ) (! (= (type ($generated@@282 $generated@@288)) ($generated@@284 $generated@@288))
 :pattern ( ($generated@@282 $generated@@288))
))))
(assert (forall (($generated@@289 T@T) ) (! (= ($generated@@283 ($generated@@282 $generated@@289)) 0)
 :pattern ( ($generated@@282 $generated@@289))
)))
(assert (forall (($generated@@290 T@U) ) (!  (=> (and (= (type $generated@@290) $generated@@142) ($generated@@256 $generated@@290)) (= $generated@@290 $generated@@157))
 :pattern ( ($generated@@256 $generated@@290))
)))
(assert (forall (($generated@@291 T@U) ) (!  (=> (and (= (type $generated@@291) $generated@@142) ($generated@@259 $generated@@291)) (= $generated@@291 $generated@@159))
 :pattern ( ($generated@@259 $generated@@291))
)))
(assert (forall (($generated@@292 T@U) ) (!  (=> (and (= (type $generated@@292) $generated@@142) ($generated@@262 $generated@@292)) (= $generated@@292 $generated@@160))
 :pattern ( ($generated@@262 $generated@@292))
)))
(assert (forall (($generated@@293 T@U) ) (!  (=> (and (= (type $generated@@293) $generated@@142) ($generated@@265 $generated@@293)) (= $generated@@293 $generated@@161))
 :pattern ( ($generated@@265 $generated@@293))
)))
(assert (forall (($generated@@295 T@U) ) (! (= (type ($generated@@294 $generated@@295)) $generated@@151)
 :pattern ( ($generated@@294 $generated@@295))
)))
(assert (forall (($generated@@296 T@U) ($generated@@297 T@U) ($generated@@298 T@U) ) (!  (=> (and (= (type $generated@@297) $generated@@70) (= (type $generated@@298) ($generated@@82 $generated@@83 $generated@@84))) (= ($generated@@268 ($generated@@294 $generated@@296) $generated@@297 $generated@@298) ($generated@@80 $generated@@296 $generated@@297 $generated@@298)))
 :pattern ( ($generated@@268 ($generated@@294 $generated@@296) $generated@@297 $generated@@298))
)))
(assert (forall (($generated@@301 T@T) ) (! (= (type ($generated@@300 $generated@@301)) ($generated@@82 $generated@@301 $generated@@2))
 :pattern ( ($generated@@300 $generated@@301))
)))
(assert (forall (($generated@@302 T@U) ) (! (let (($generated@@303 ($generated@@85 (type $generated@@302))))
 (=> (= (type $generated@@302) ($generated@@82 $generated@@303 $generated@@2)) (and (= (= ($generated@@299 $generated@@302) 0) (= $generated@@302 ($generated@@300 $generated@@303))) (=> (not (= ($generated@@299 $generated@@302) 0)) (exists (($generated@@304 T@U) ) (!  (and (= (type $generated@@304) $generated@@303) (< 0 ($generated ($generated@@87 $generated@@302 $generated@@304))))
 :no-pattern (type $generated@@304)
 :no-pattern ($generated $generated@@304)
 :no-pattern ($generated@@0 $generated@@304)
))))))
 :pattern ( ($generated@@299 $generated@@302))
)))
(assert  (and (and (and (and (forall (($generated@@310 T@T) ($generated@@311 T@T) ) (= ($generated@@1 ($generated@@307 $generated@@310 $generated@@311)) 18)) (forall (($generated@@312 T@T) ($generated@@313 T@T) ) (! (= ($generated@@308 ($generated@@307 $generated@@312 $generated@@313)) $generated@@312)
 :pattern ( ($generated@@307 $generated@@312 $generated@@313))
))) (forall (($generated@@314 T@T) ($generated@@315 T@T) ) (! (= ($generated@@309 ($generated@@307 $generated@@314 $generated@@315)) $generated@@315)
 :pattern ( ($generated@@307 $generated@@314 $generated@@315))
))) (forall (($generated@@316 T@U) ) (! (let (($generated@@317 ($generated@@308 (type $generated@@316))))
(= (type ($generated@@305 $generated@@316)) ($generated@@82 $generated@@317 $generated@@4)))
 :pattern ( ($generated@@305 $generated@@316))
))) (forall (($generated@@318 T@T) ($generated@@319 T@T) ) (! (= (type ($generated@@306 $generated@@318 $generated@@319)) ($generated@@307 $generated@@318 $generated@@319))
 :pattern ( ($generated@@306 $generated@@318 $generated@@319))
))))
(assert (forall (($generated@@320 T@U) ($generated@@321 T@T) ) (! (let (($generated@@322 (type $generated@@320)))
 (not ($generated@@0 ($generated@@87 ($generated@@305 ($generated@@306 $generated@@322 $generated@@321)) $generated@@320))))
 :pattern ( (let (($generated@@322 (type $generated@@320)))
($generated@@87 ($generated@@305 ($generated@@306 $generated@@322 $generated@@321)) $generated@@320)))
)))
(assert  (and (and (and (and (forall (($generated@@328 T@T) ($generated@@329 T@T) ) (= ($generated@@1 ($generated@@325 $generated@@328 $generated@@329)) 19)) (forall (($generated@@330 T@T) ($generated@@331 T@T) ) (! (= ($generated@@326 ($generated@@325 $generated@@330 $generated@@331)) $generated@@330)
 :pattern ( ($generated@@325 $generated@@330 $generated@@331))
))) (forall (($generated@@332 T@T) ($generated@@333 T@T) ) (! (= ($generated@@327 ($generated@@325 $generated@@332 $generated@@333)) $generated@@333)
 :pattern ( ($generated@@325 $generated@@332 $generated@@333))
))) (forall (($generated@@334 T@U) ) (! (let (($generated@@335 ($generated@@326 (type $generated@@334))))
(= (type ($generated@@323 $generated@@334)) ($generated@@82 $generated@@335 $generated@@4)))
 :pattern ( ($generated@@323 $generated@@334))
))) (forall (($generated@@336 T@T) ($generated@@337 T@T) ) (! (= (type ($generated@@324 $generated@@336 $generated@@337)) ($generated@@325 $generated@@336 $generated@@337))
 :pattern ( ($generated@@324 $generated@@336 $generated@@337))
))))
(assert (forall (($generated@@338 T@U) ($generated@@339 T@T) ) (! (let (($generated@@340 (type $generated@@338)))
 (not ($generated@@0 ($generated@@87 ($generated@@323 ($generated@@324 $generated@@340 $generated@@339)) $generated@@338))))
 :pattern ( (let (($generated@@340 (type $generated@@338)))
($generated@@87 ($generated@@323 ($generated@@324 $generated@@340 $generated@@339)) $generated@@338)))
)))
(assert (forall (($generated@@341 T@U) ) (! (let (($generated@@342 ($generated@@85 (type $generated@@341))))
 (=> (= (type $generated@@341) ($generated@@82 $generated@@342 $generated@@2)) (= ($generated@@163 $generated@@341) (forall (($generated@@343 T@U) ) (!  (=> (= (type $generated@@343) $generated@@342) (and (<= 0 ($generated ($generated@@87 $generated@@341 $generated@@343))) (<= ($generated ($generated@@87 $generated@@341 $generated@@343)) ($generated@@299 $generated@@341))))
 :pattern ( ($generated@@87 $generated@@341 $generated@@343))
)))))
 :pattern ( ($generated@@163 $generated@@341))
)))
(assert (forall (($generated@@345 T@T) ($generated@@346 T@U) ) (! (= (type ($generated@@344 $generated@@345 $generated@@346)) $generated@@345)
 :pattern ( ($generated@@344 $generated@@345 $generated@@346))
)))
(assert (forall (($generated@@347 T@U) ) (!  (=> (and (= (type $generated@@347) $generated@@151) ($generated@@224 $generated@@347 $generated@@231)) (and (= ($generated@@294 ($generated@@344 $generated@@142 $generated@@347)) $generated@@347) ($generated@@138 ($generated@@344 $generated@@142 $generated@@347) $generated@@231)))
 :pattern ( ($generated@@224 $generated@@347 $generated@@231))
)))
(assert (forall (($generated@@348 T@U) ) (! (let (($generated@@349 ($generated@@309 (type $generated@@348))))
(let (($generated@@350 ($generated@@308 (type $generated@@348))))
 (=> (= (type $generated@@348) ($generated@@307 $generated@@350 $generated@@349)) (or (= $generated@@348 ($generated@@306 $generated@@350 $generated@@349)) (exists (($generated@@351 T@U) ) (!  (and (= (type $generated@@351) $generated@@350) ($generated@@0 ($generated@@87 ($generated@@305 $generated@@348) $generated@@351)))
 :no-pattern (type $generated@@351)
 :no-pattern ($generated $generated@@351)
 :no-pattern ($generated@@0 $generated@@351)
))))))
 :pattern ( ($generated@@305 $generated@@348))
)))
(assert (forall (($generated@@353 T@U) ) (! (let (($generated@@354 ($generated@@309 (type $generated@@353))))
(= (type ($generated@@352 $generated@@353)) ($generated@@82 $generated@@354 $generated@@4)))
 :pattern ( ($generated@@352 $generated@@353))
)))
(assert (forall (($generated@@355 T@U) ) (! (let (($generated@@356 ($generated@@309 (type $generated@@355))))
(let (($generated@@357 ($generated@@308 (type $generated@@355))))
 (=> (= (type $generated@@355) ($generated@@307 $generated@@357 $generated@@356)) (or (= $generated@@355 ($generated@@306 $generated@@357 $generated@@356)) (exists (($generated@@358 T@U) ) (!  (and (= (type $generated@@358) $generated@@356) ($generated@@0 ($generated@@87 ($generated@@352 $generated@@355) $generated@@358)))
 :no-pattern (type $generated@@358)
 :no-pattern ($generated $generated@@358)
 :no-pattern ($generated@@0 $generated@@358)
))))))
 :pattern ( ($generated@@352 $generated@@355))
)))
(assert (forall (($generated@@359 T@U) ) (! (let (($generated@@360 ($generated@@327 (type $generated@@359))))
(let (($generated@@361 ($generated@@326 (type $generated@@359))))
 (=> (= (type $generated@@359) ($generated@@325 $generated@@361 $generated@@360)) (or (= $generated@@359 ($generated@@324 $generated@@361 $generated@@360)) (exists (($generated@@362 T@U) ) (!  (and (= (type $generated@@362) $generated@@361) ($generated@@0 ($generated@@87 ($generated@@323 $generated@@359) $generated@@362)))
 :no-pattern (type $generated@@362)
 :no-pattern ($generated $generated@@362)
 :no-pattern ($generated@@0 $generated@@362)
))))))
 :pattern ( ($generated@@323 $generated@@359))
)))
(assert (forall (($generated@@364 T@U) ) (! (let (($generated@@365 ($generated@@327 (type $generated@@364))))
(= (type ($generated@@363 $generated@@364)) ($generated@@82 $generated@@365 $generated@@4)))
 :pattern ( ($generated@@363 $generated@@364))
)))
(assert (forall (($generated@@366 T@U) ) (! (let (($generated@@367 ($generated@@327 (type $generated@@366))))
(let (($generated@@368 ($generated@@326 (type $generated@@366))))
 (=> (= (type $generated@@366) ($generated@@325 $generated@@368 $generated@@367)) (or (= $generated@@366 ($generated@@324 $generated@@368 $generated@@367)) (exists (($generated@@369 T@U) ) (!  (and (= (type $generated@@369) $generated@@367) ($generated@@0 ($generated@@87 ($generated@@363 $generated@@366) $generated@@369)))
 :no-pattern (type $generated@@369)
 :no-pattern ($generated $generated@@369)
 :no-pattern ($generated@@0 $generated@@369)
))))))
 :pattern ( ($generated@@363 $generated@@366))
)))
(assert (forall (($generated@@370 T@U) ($generated@@371 T@U) ) (!  (=> (and (= (type $generated@@370) ($generated@@82 $generated@@151 $generated@@2)) (= (type $generated@@371) $generated@@70)) (= ($generated@@138 $generated@@370 ($generated@@162 $generated@@371)) (forall (($generated@@372 T@U) ) (!  (=> (and (= (type $generated@@372) $generated@@151) (< 0 ($generated ($generated@@87 $generated@@370 $generated@@372)))) ($generated@@224 $generated@@372 $generated@@371))
 :pattern ( ($generated@@87 $generated@@370 $generated@@372))
))))
 :pattern ( ($generated@@138 $generated@@370 ($generated@@162 $generated@@371)))
)))
(assert (forall (($generated@@373 T@U) ($generated@@374 T@U) ($generated@@375 T@U) ) (!  (=> (and (and (= (type $generated@@373) ($generated@@82 $generated@@151 $generated@@4)) (= (type $generated@@374) $generated@@70)) (= (type $generated@@375) ($generated@@82 $generated@@83 $generated@@84))) (= ($generated@@80 $generated@@373 ($generated@@242 $generated@@374) $generated@@375) (forall (($generated@@376 T@U) ) (!  (=> (and (= (type $generated@@376) $generated@@151) ($generated@@0 ($generated@@87 $generated@@373 $generated@@376))) ($generated@@268 $generated@@376 $generated@@374 $generated@@375))
 :pattern ( ($generated@@87 $generated@@373 $generated@@376))
))))
 :pattern ( ($generated@@80 $generated@@373 ($generated@@242 $generated@@374) $generated@@375))
)))
(assert (forall (($generated@@377 T@U) ($generated@@378 T@U) ($generated@@379 T@U) ) (!  (=> (and (and (= (type $generated@@377) ($generated@@82 $generated@@151 $generated@@4)) (= (type $generated@@378) $generated@@70)) (= (type $generated@@379) ($generated@@82 $generated@@83 $generated@@84))) (= ($generated@@80 $generated@@377 ($generated@@247 $generated@@378) $generated@@379) (forall (($generated@@380 T@U) ) (!  (=> (and (= (type $generated@@380) $generated@@151) ($generated@@0 ($generated@@87 $generated@@377 $generated@@380))) ($generated@@268 $generated@@380 $generated@@378 $generated@@379))
 :pattern ( ($generated@@87 $generated@@377 $generated@@380))
))))
 :pattern ( ($generated@@80 $generated@@377 ($generated@@247 $generated@@378) $generated@@379))
)))
(assert (forall (($generated@@381 T@U) ) (! (let (($generated@@382 (type $generated@@381)))
(= ($generated ($generated@@87 ($generated@@300 $generated@@382) $generated@@381)) 0))
 :pattern ( (let (($generated@@382 (type $generated@@381)))
($generated@@87 ($generated@@300 $generated@@382) $generated@@381)))
)))
(assert  (and (forall (($generated@@385 T@U) ) (! (= (type ($generated@@383 $generated@@385)) ($generated@@82 $generated@@151 $generated@@4))
 :pattern ( ($generated@@383 $generated@@385))
)) (forall (($generated@@386 T@U) ) (! (let (($generated@@387 ($generated@@309 (type $generated@@386))))
(let (($generated@@388 ($generated@@308 (type $generated@@386))))
(= (type ($generated@@384 $generated@@386)) ($generated@@82 $generated@@388 $generated@@387))))
 :pattern ( ($generated@@384 $generated@@386))
))))
(assert (forall (($generated@@389 T@U) ($generated@@390 T@U) ) (!  (=> (and (= (type $generated@@389) ($generated@@307 $generated@@151 $generated@@151)) (= (type $generated@@390) $generated@@151)) (= ($generated@@0 ($generated@@87 ($generated@@383 $generated@@389) $generated@@390))  (and ($generated@@0 ($generated@@87 ($generated@@305 $generated@@389) ($generated@@149 ($generated@@344 $generated@@142 $generated@@390)))) (= ($generated@@87 ($generated@@384 $generated@@389) ($generated@@149 ($generated@@344 $generated@@142 $generated@@390))) ($generated@@150 ($generated@@344 $generated@@142 $generated@@390))))))
 :pattern ( ($generated@@87 ($generated@@383 $generated@@389) $generated@@390))
)))
(assert  (and (forall (($generated@@393 T@U) ) (! (= (type ($generated@@391 $generated@@393)) ($generated@@82 $generated@@151 $generated@@4))
 :pattern ( ($generated@@391 $generated@@393))
)) (forall (($generated@@394 T@U) ) (! (let (($generated@@395 ($generated@@327 (type $generated@@394))))
(let (($generated@@396 ($generated@@326 (type $generated@@394))))
(= (type ($generated@@392 $generated@@394)) ($generated@@82 $generated@@396 $generated@@395))))
 :pattern ( ($generated@@392 $generated@@394))
))))
(assert (forall (($generated@@397 T@U) ($generated@@398 T@U) ) (!  (=> (and (= (type $generated@@397) ($generated@@325 $generated@@151 $generated@@151)) (= (type $generated@@398) $generated@@151)) (= ($generated@@0 ($generated@@87 ($generated@@391 $generated@@397) $generated@@398))  (and ($generated@@0 ($generated@@87 ($generated@@323 $generated@@397) ($generated@@149 ($generated@@344 $generated@@142 $generated@@398)))) (= ($generated@@87 ($generated@@392 $generated@@397) ($generated@@149 ($generated@@344 $generated@@142 $generated@@398))) ($generated@@150 ($generated@@344 $generated@@142 $generated@@398))))))
 :pattern ( ($generated@@87 ($generated@@391 $generated@@397) $generated@@398))
)))
(assert (forall (($generated@@399 T@U) ($generated@@400 T@U) ) (! (let (($generated@@401 (type $generated@@400)))
(let (($generated@@402 ($generated@@308 (type $generated@@399))))
 (=> (= (type $generated@@399) ($generated@@307 $generated@@402 $generated@@401)) (= ($generated@@0 ($generated@@87 ($generated@@352 $generated@@399) $generated@@400)) (exists (($generated@@403 T@U) ) (!  (and (= (type $generated@@403) $generated@@402) (and ($generated@@0 ($generated@@87 ($generated@@305 $generated@@399) $generated@@403)) (= $generated@@400 ($generated@@87 ($generated@@384 $generated@@399) $generated@@403))))
 :pattern ( ($generated@@87 ($generated@@305 $generated@@399) $generated@@403))
 :pattern ( ($generated@@87 ($generated@@384 $generated@@399) $generated@@403))
))))))
 :pattern ( ($generated@@87 ($generated@@352 $generated@@399) $generated@@400))
)))
(assert (forall (($generated@@404 T@U) ($generated@@405 T@U) ) (! (let (($generated@@406 (type $generated@@405)))
(let (($generated@@407 ($generated@@326 (type $generated@@404))))
 (=> (= (type $generated@@404) ($generated@@325 $generated@@407 $generated@@406)) (= ($generated@@0 ($generated@@87 ($generated@@363 $generated@@404) $generated@@405)) (exists (($generated@@408 T@U) ) (!  (and (= (type $generated@@408) $generated@@407) (and ($generated@@0 ($generated@@87 ($generated@@323 $generated@@404) $generated@@408)) (= $generated@@405 ($generated@@87 ($generated@@392 $generated@@404) $generated@@408))))
 :pattern ( ($generated@@87 ($generated@@323 $generated@@404) $generated@@408))
 :pattern ( ($generated@@87 ($generated@@392 $generated@@404) $generated@@408))
))))))
 :pattern ( ($generated@@87 ($generated@@363 $generated@@404) $generated@@405))
)))
(assert (forall (($generated@@410 T@U) ($generated@@411 T@U) ) (! (= (type ($generated@@409 $generated@@410 $generated@@411)) $generated@@70)
 :pattern ( ($generated@@409 $generated@@410 $generated@@411))
)))
(assert (forall (($generated@@412 T@U) ($generated@@413 T@U) ($generated@@414 T@U) ($generated@@415 T@U) ) (!  (=> (and (and (and (= (type $generated@@412) ($generated@@307 $generated@@151 $generated@@151)) (= (type $generated@@413) $generated@@70)) (= (type $generated@@414) $generated@@70)) (= (type $generated@@415) ($generated@@82 $generated@@83 $generated@@84))) (= ($generated@@80 $generated@@412 ($generated@@409 $generated@@413 $generated@@414) $generated@@415) (forall (($generated@@416 T@U) ) (!  (=> (and (= (type $generated@@416) $generated@@151) ($generated@@0 ($generated@@87 ($generated@@305 $generated@@412) $generated@@416))) (and ($generated@@268 ($generated@@87 ($generated@@384 $generated@@412) $generated@@416) $generated@@414 $generated@@415) ($generated@@268 $generated@@416 $generated@@413 $generated@@415)))
 :pattern ( ($generated@@87 ($generated@@384 $generated@@412) $generated@@416))
 :pattern ( ($generated@@87 ($generated@@305 $generated@@412) $generated@@416))
))))
 :pattern ( ($generated@@80 $generated@@412 ($generated@@409 $generated@@413 $generated@@414) $generated@@415))
)))
(assert (forall (($generated@@418 T@U) ($generated@@419 T@U) ) (! (= (type ($generated@@417 $generated@@418 $generated@@419)) $generated@@70)
 :pattern ( ($generated@@417 $generated@@418 $generated@@419))
)))
(assert (forall (($generated@@420 T@U) ($generated@@421 T@U) ($generated@@422 T@U) ($generated@@423 T@U) ) (!  (=> (and (and (and (= (type $generated@@420) ($generated@@325 $generated@@151 $generated@@151)) (= (type $generated@@421) $generated@@70)) (= (type $generated@@422) $generated@@70)) (= (type $generated@@423) ($generated@@82 $generated@@83 $generated@@84))) (= ($generated@@80 $generated@@420 ($generated@@417 $generated@@421 $generated@@422) $generated@@423) (forall (($generated@@424 T@U) ) (!  (=> (and (= (type $generated@@424) $generated@@151) ($generated@@0 ($generated@@87 ($generated@@323 $generated@@420) $generated@@424))) (and ($generated@@268 ($generated@@87 ($generated@@392 $generated@@420) $generated@@424) $generated@@422 $generated@@423) ($generated@@268 $generated@@424 $generated@@421 $generated@@423)))
 :pattern ( ($generated@@87 ($generated@@392 $generated@@420) $generated@@424))
 :pattern ( ($generated@@87 ($generated@@323 $generated@@420) $generated@@424))
))))
 :pattern ( ($generated@@80 $generated@@420 ($generated@@417 $generated@@421 $generated@@422) $generated@@423))
)))
(assert (forall (($generated@@426 T@T) ) (! (= (type ($generated@@425 $generated@@426)) ($generated@@82 $generated@@426 $generated@@4))
 :pattern ( ($generated@@425 $generated@@426))
)))
(assert (forall (($generated@@427 T@U) ) (! (let (($generated@@428 ($generated@@327 (type $generated@@427))))
(let (($generated@@429 ($generated@@326 (type $generated@@427))))
 (=> (= (type $generated@@427) ($generated@@325 $generated@@429 $generated@@428)) (= (= $generated@@427 ($generated@@324 $generated@@429 $generated@@428)) (= ($generated@@323 $generated@@427) ($generated@@425 $generated@@429))))))
 :pattern ( ($generated@@323 $generated@@427))
)))
(assert (forall (($generated@@430 T@U) ) (! (let (($generated@@431 ($generated@@327 (type $generated@@430))))
(let (($generated@@432 ($generated@@326 (type $generated@@430))))
 (=> (= (type $generated@@430) ($generated@@325 $generated@@432 $generated@@431)) (= (= $generated@@430 ($generated@@324 $generated@@432 $generated@@431)) (= ($generated@@363 $generated@@430) ($generated@@425 $generated@@431))))))
 :pattern ( ($generated@@363 $generated@@430))
)))
(assert (forall (($generated@@433 T@U) ) (! (let (($generated@@434 ($generated@@327 (type $generated@@433))))
(let (($generated@@435 ($generated@@326 (type $generated@@433))))
 (=> (= (type $generated@@433) ($generated@@325 $generated@@435 $generated@@434)) (= (= $generated@@433 ($generated@@324 $generated@@435 $generated@@434)) (= ($generated@@391 $generated@@433) ($generated@@425 $generated@@151))))))
 :pattern ( ($generated@@391 $generated@@433))
)))
(assert (forall (($generated@@436 T@U) ) (! (let (($generated@@437 ($generated@@309 (type $generated@@436))))
(let (($generated@@438 ($generated@@308 (type $generated@@436))))
 (=> (= (type $generated@@436) ($generated@@307 $generated@@438 $generated@@437)) (or (= $generated@@436 ($generated@@306 $generated@@438 $generated@@437)) (exists (($generated@@439 T@U) ($generated@@440 T@U) ) (!  (and (and (= (type $generated@@439) $generated@@151) (= (type $generated@@440) $generated@@151)) ($generated@@0 ($generated@@87 ($generated@@383 $generated@@436) ($generated@@294 ($generated@@223 $generated@@439 $generated@@440)))))
 :no-pattern (type $generated@@439)
 :no-pattern (type $generated@@440)
 :no-pattern ($generated $generated@@439)
 :no-pattern ($generated@@0 $generated@@439)
 :no-pattern ($generated $generated@@440)
 :no-pattern ($generated@@0 $generated@@440)
))))))
 :pattern ( ($generated@@383 $generated@@436))
)))
(assert (forall (($generated@@441 T@U) ) (! (let (($generated@@442 ($generated@@327 (type $generated@@441))))
(let (($generated@@443 ($generated@@326 (type $generated@@441))))
 (=> (= (type $generated@@441) ($generated@@325 $generated@@443 $generated@@442)) (or (= $generated@@441 ($generated@@324 $generated@@443 $generated@@442)) (exists (($generated@@444 T@U) ($generated@@445 T@U) ) (!  (and (and (= (type $generated@@444) $generated@@151) (= (type $generated@@445) $generated@@151)) ($generated@@0 ($generated@@87 ($generated@@391 $generated@@441) ($generated@@294 ($generated@@223 $generated@@444 $generated@@445)))))
 :no-pattern (type $generated@@444)
 :no-pattern (type $generated@@445)
 :no-pattern ($generated $generated@@444)
 :no-pattern ($generated@@0 $generated@@444)
 :no-pattern ($generated $generated@@445)
 :no-pattern ($generated@@0 $generated@@445)
))))))
 :pattern ( ($generated@@391 $generated@@441))
)))
(assert (forall (($generated@@446 T@U) ) (!  (=> (and (= (type $generated@@446) $generated@@151) ($generated@@224 $generated@@446 $generated@@46)) (and (= ($generated@@294 ($generated@@344 $generated@@2 $generated@@446)) $generated@@446) ($generated@@138 ($generated@@344 $generated@@2 $generated@@446) $generated@@46)))
 :pattern ( ($generated@@224 $generated@@446 $generated@@46))
)))
(assert (forall (($generated@@447 T@U) ) (!  (=> (and (= (type $generated@@447) $generated@@151) ($generated@@224 $generated@@447 $generated@@47)) (and (= ($generated@@294 ($generated@@344 $generated@@3 $generated@@447)) $generated@@447) ($generated@@138 ($generated@@344 $generated@@3 $generated@@447) $generated@@47)))
 :pattern ( ($generated@@224 $generated@@447 $generated@@47))
)))
(assert (forall (($generated@@448 T@U) ) (!  (=> (and (= (type $generated@@448) $generated@@151) ($generated@@224 $generated@@448 $generated@@44)) (and (= ($generated@@294 ($generated@@344 $generated@@4 $generated@@448)) $generated@@448) ($generated@@138 ($generated@@344 $generated@@4 $generated@@448) $generated@@44)))
 :pattern ( ($generated@@224 $generated@@448 $generated@@44))
)))
(assert (= ($generated@@1 $generated@@449) 20))
(assert (forall (($generated@@450 T@U) ) (!  (=> (and (= (type $generated@@450) $generated@@151) ($generated@@224 $generated@@450 $generated@@45)) (and (= ($generated@@294 ($generated@@344 $generated@@449 $generated@@450)) $generated@@450) ($generated@@138 ($generated@@344 $generated@@449 $generated@@450) $generated@@45)))
 :pattern ( ($generated@@224 $generated@@450 $generated@@45))
)))
(assert (forall (($generated@@451 T@U) ($generated@@452 T@U) ) (!  (=> (= (type $generated@@452) $generated@@70) (= ($generated@@224 ($generated@@294 $generated@@451) $generated@@452) ($generated@@138 $generated@@451 $generated@@452)))
 :pattern ( ($generated@@224 ($generated@@294 $generated@@451) $generated@@452))
)))
(assert (forall (($generated@@453 T@U) ) (! (let (($generated@@454 ($generated@@85 (type $generated@@453))))
 (=> (= (type $generated@@453) ($generated@@82 $generated@@454 $generated@@2)) (<= 0 ($generated@@299 $generated@@453))))
 :pattern ( ($generated@@299 $generated@@453))
)))
(assert (forall (($generated@@455 T@U) ) (! (let (($generated@@456 ($generated@@285 (type $generated@@455))))
 (=> (= (type $generated@@455) ($generated@@284 $generated@@456)) (<= 0 ($generated@@283 $generated@@455))))
 :pattern ( ($generated@@283 $generated@@455))
)))
(assert (forall (($generated@@458 T@U) ) (! (= (type ($generated@@457 $generated@@458)) $generated@@70)
 :pattern ( ($generated@@457 $generated@@458))
)))
(assert (forall (($generated@@459 T@U) ($generated@@460 T@U) ) (!  (=> (and (= (type $generated@@459) $generated@@70) (= (type $generated@@460) $generated@@70)) (= ($generated@@457 ($generated@@409 $generated@@459 $generated@@460)) $generated@@459))
 :pattern ( ($generated@@409 $generated@@459 $generated@@460))
)))
(assert (forall (($generated@@462 T@U) ) (! (= (type ($generated@@461 $generated@@462)) $generated@@70)
 :pattern ( ($generated@@461 $generated@@462))
)))
(assert (forall (($generated@@463 T@U) ($generated@@464 T@U) ) (!  (=> (and (= (type $generated@@463) $generated@@70) (= (type $generated@@464) $generated@@70)) (= ($generated@@461 ($generated@@409 $generated@@463 $generated@@464)) $generated@@464))
 :pattern ( ($generated@@409 $generated@@463 $generated@@464))
)))
(assert (forall (($generated@@465 T@U) ($generated@@466 T@U) ) (!  (=> (and (= (type $generated@@465) $generated@@70) (= (type $generated@@466) $generated@@70)) (= ($generated@@78 ($generated@@409 $generated@@465 $generated@@466)) $generated@@58))
 :pattern ( ($generated@@409 $generated@@465 $generated@@466))
)))
(assert (forall (($generated@@468 T@U) ) (! (= (type ($generated@@467 $generated@@468)) $generated@@70)
 :pattern ( ($generated@@467 $generated@@468))
)))
(assert (forall (($generated@@469 T@U) ($generated@@470 T@U) ) (!  (=> (and (= (type $generated@@469) $generated@@70) (= (type $generated@@470) $generated@@70)) (= ($generated@@467 ($generated@@417 $generated@@469 $generated@@470)) $generated@@469))
 :pattern ( ($generated@@417 $generated@@469 $generated@@470))
)))
(assert (forall (($generated@@472 T@U) ) (! (= (type ($generated@@471 $generated@@472)) $generated@@70)
 :pattern ( ($generated@@471 $generated@@472))
)))
(assert (forall (($generated@@473 T@U) ($generated@@474 T@U) ) (!  (=> (and (= (type $generated@@473) $generated@@70) (= (type $generated@@474) $generated@@70)) (= ($generated@@471 ($generated@@417 $generated@@473 $generated@@474)) $generated@@474))
 :pattern ( ($generated@@417 $generated@@473 $generated@@474))
)))
(assert (forall (($generated@@475 T@U) ($generated@@476 T@U) ) (!  (=> (and (= (type $generated@@475) $generated@@70) (= (type $generated@@476) $generated@@70)) (= ($generated@@78 ($generated@@417 $generated@@475 $generated@@476)) $generated@@59))
 :pattern ( ($generated@@417 $generated@@475 $generated@@476))
)))
(assert (forall (($generated@@477 T@U) ($generated@@478 T@U) ) (!  (=> (and (= (type $generated@@477) $generated@@151) (= (type $generated@@478) $generated@@151)) (= ($generated@@156 ($generated@@223 $generated@@477 $generated@@478)) $generated@@61))
 :pattern ( ($generated@@223 $generated@@477 $generated@@478))
)))
(assert (forall (($generated@@480 T@U) ) (! (= (type ($generated@@479 $generated@@480)) $generated@@70)
 :pattern ( ($generated@@479 $generated@@480))
)))
(assert (forall (($generated@@481 T@U) ($generated@@482 T@U) ) (!  (=> (and (= (type $generated@@481) $generated@@70) (= (type $generated@@482) $generated@@70)) (= ($generated@@479 ($generated@@141 $generated@@481 $generated@@482)) $generated@@481))
 :pattern ( ($generated@@141 $generated@@481 $generated@@482))
)))
(assert (forall (($generated@@484 T@U) ) (! (= (type ($generated@@483 $generated@@484)) $generated@@70)
 :pattern ( ($generated@@483 $generated@@484))
)))
(assert (forall (($generated@@485 T@U) ($generated@@486 T@U) ) (!  (=> (and (= (type $generated@@485) $generated@@70) (= (type $generated@@486) $generated@@70)) (= ($generated@@483 ($generated@@141 $generated@@485 $generated@@486)) $generated@@486))
 :pattern ( ($generated@@141 $generated@@485 $generated@@486))
)))
(assert (forall (($generated@@487 T@U) ($generated@@488 T@U) ) (!  (=> (and (= (type $generated@@487) $generated@@151) (= (type $generated@@488) $generated@@151)) (= ($generated@@149 ($generated@@223 $generated@@487 $generated@@488)) $generated@@487))
 :pattern ( ($generated@@223 $generated@@487 $generated@@488))
)))
(assert (forall (($generated@@489 T@U) ($generated@@490 T@U) ) (!  (=> (and (= (type $generated@@489) $generated@@151) (= (type $generated@@490) $generated@@151)) (= ($generated@@150 ($generated@@223 $generated@@489 $generated@@490)) $generated@@490))
 :pattern ( ($generated@@223 $generated@@489 $generated@@490))
)))
(assert  (and (forall (($generated@@493 T@U) ) (! (= (type ($generated@@491 $generated@@493)) $generated@@70)
 :pattern ( ($generated@@491 $generated@@493))
)) (forall (($generated@@494 T@U) ($generated@@495 Int) ) (! (let (($generated@@496 ($generated@@285 (type $generated@@494))))
(= (type ($generated@@492 $generated@@494 $generated@@495)) $generated@@496))
 :pattern ( ($generated@@492 $generated@@494 $generated@@495))
))))
(assert (forall (($generated@@497 T@U) ($generated@@498 T@U) ($generated@@499 T@U) ) (!  (=> (and (and (= (type $generated@@497) ($generated@@284 $generated@@151)) (= (type $generated@@498) $generated@@70)) (= (type $generated@@499) ($generated@@82 $generated@@83 $generated@@84))) (= ($generated@@80 $generated@@497 ($generated@@491 $generated@@498) $generated@@499) (forall (($generated@@500 Int) ) (!  (=> (and (<= 0 $generated@@500) (< $generated@@500 ($generated@@283 $generated@@497))) ($generated@@268 ($generated@@492 $generated@@497 $generated@@500) $generated@@498 $generated@@499))
 :pattern ( ($generated@@492 $generated@@497 $generated@@500))
))))
 :pattern ( ($generated@@80 $generated@@497 ($generated@@491 $generated@@498) $generated@@499))
)))
(assert (forall (($generated@@502 Int) ) (! (= ($generated@@501 ($generated@@81 $generated@@502)) $generated@@502)
 :pattern ( ($generated@@81 $generated@@502))
)))
(assert (forall (($generated@@504 T@U) ) (! (= (type ($generated@@503 $generated@@504)) $generated@@70)
 :pattern ( ($generated@@503 $generated@@504))
)))
(assert (forall (($generated@@505 T@U) ) (!  (=> (= (type $generated@@505) $generated@@70) (= ($generated@@503 ($generated@@242 $generated@@505)) $generated@@505))
 :pattern ( ($generated@@242 $generated@@505))
)))
(assert (forall (($generated@@506 T@U) ) (!  (=> (= (type $generated@@506) $generated@@70) (= ($generated@@78 ($generated@@242 $generated@@506)) $generated@@54))
 :pattern ( ($generated@@242 $generated@@506))
)))
(assert (forall (($generated@@508 T@U) ) (! (= (type ($generated@@507 $generated@@508)) $generated@@70)
 :pattern ( ($generated@@507 $generated@@508))
)))
(assert (forall (($generated@@509 T@U) ) (!  (=> (= (type $generated@@509) $generated@@70) (= ($generated@@507 ($generated@@247 $generated@@509)) $generated@@509))
 :pattern ( ($generated@@247 $generated@@509))
)))
(assert (forall (($generated@@510 T@U) ) (!  (=> (= (type $generated@@510) $generated@@70) (= ($generated@@78 ($generated@@247 $generated@@510)) $generated@@55))
 :pattern ( ($generated@@247 $generated@@510))
)))
(assert (forall (($generated@@512 T@U) ) (! (= (type ($generated@@511 $generated@@512)) $generated@@70)
 :pattern ( ($generated@@511 $generated@@512))
)))
(assert (forall (($generated@@513 T@U) ) (!  (=> (= (type $generated@@513) $generated@@70) (= ($generated@@511 ($generated@@162 $generated@@513)) $generated@@513))
 :pattern ( ($generated@@162 $generated@@513))
)))
(assert (forall (($generated@@514 T@U) ) (!  (=> (= (type $generated@@514) $generated@@70) (= ($generated@@78 ($generated@@162 $generated@@514)) $generated@@56))
 :pattern ( ($generated@@162 $generated@@514))
)))
(assert (forall (($generated@@516 T@U) ) (! (= (type ($generated@@515 $generated@@516)) $generated@@70)
 :pattern ( ($generated@@515 $generated@@516))
)))
(assert (forall (($generated@@517 T@U) ) (!  (=> (= (type $generated@@517) $generated@@70) (= ($generated@@515 ($generated@@491 $generated@@517)) $generated@@517))
 :pattern ( ($generated@@491 $generated@@517))
)))
(assert (forall (($generated@@518 T@U) ) (!  (=> (= (type $generated@@518) $generated@@70) (= ($generated@@78 ($generated@@491 $generated@@518)) $generated@@57))
 :pattern ( ($generated@@491 $generated@@518))
)))
(assert (forall (($generated@@519 T@U) ) (! (let (($generated@@520 (type $generated@@519)))
(= ($generated@@344 $generated@@520 ($generated@@294 $generated@@519)) $generated@@519))
 :pattern ( ($generated@@294 $generated@@519))
)))
(assert (forall (($generated@@521 T@U) ($generated@@522 T@U) ($generated@@523 T@U) ) (!  (=> (and (and (= (type $generated@@521) ($generated@@307 $generated@@151 $generated@@151)) (= (type $generated@@522) $generated@@70)) (= (type $generated@@523) $generated@@70)) (= ($generated@@138 $generated@@521 ($generated@@409 $generated@@522 $generated@@523)) (forall (($generated@@524 T@U) ) (!  (=> (and (= (type $generated@@524) $generated@@151) ($generated@@0 ($generated@@87 ($generated@@305 $generated@@521) $generated@@524))) (and ($generated@@224 ($generated@@87 ($generated@@384 $generated@@521) $generated@@524) $generated@@523) ($generated@@224 $generated@@524 $generated@@522)))
 :pattern ( ($generated@@87 ($generated@@384 $generated@@521) $generated@@524))
 :pattern ( ($generated@@87 ($generated@@305 $generated@@521) $generated@@524))
))))
 :pattern ( ($generated@@138 $generated@@521 ($generated@@409 $generated@@522 $generated@@523)))
)))
(assert (forall (($generated@@525 T@U) ($generated@@526 T@U) ($generated@@527 T@U) ) (!  (=> (and (and (= (type $generated@@525) ($generated@@325 $generated@@151 $generated@@151)) (= (type $generated@@526) $generated@@70)) (= (type $generated@@527) $generated@@70)) (= ($generated@@138 $generated@@525 ($generated@@417 $generated@@526 $generated@@527)) (forall (($generated@@528 T@U) ) (!  (=> (and (= (type $generated@@528) $generated@@151) ($generated@@0 ($generated@@87 ($generated@@323 $generated@@525) $generated@@528))) (and ($generated@@224 ($generated@@87 ($generated@@392 $generated@@525) $generated@@528) $generated@@527) ($generated@@224 $generated@@528 $generated@@526)))
 :pattern ( ($generated@@87 ($generated@@392 $generated@@525) $generated@@528))
 :pattern ( ($generated@@87 ($generated@@323 $generated@@525) $generated@@528))
))))
 :pattern ( ($generated@@138 $generated@@525 ($generated@@417 $generated@@526 $generated@@527)))
)))
(assert (forall (($generated@@531 T@U) ($generated@@532 T@U) ) (!  (=> (and (= (type $generated@@531) $generated@@151) (= (type $generated@@532) $generated@@151)) (< ($generated@@529 $generated@@531) ($generated@@530 ($generated@@223 $generated@@531 $generated@@532))))
 :pattern ( ($generated@@223 $generated@@531 $generated@@532))
)))
(assert (forall (($generated@@533 T@U) ($generated@@534 T@U) ) (!  (=> (and (= (type $generated@@533) $generated@@151) (= (type $generated@@534) $generated@@151)) (< ($generated@@529 $generated@@534) ($generated@@530 ($generated@@223 $generated@@533 $generated@@534))))
 :pattern ( ($generated@@223 $generated@@533 $generated@@534))
)))
(assert (forall (($generated@@535 T@U) ($generated@@536 T@U) ($generated@@537 T@U) ) (!  (=> (and (and (and (= (type $generated@@535) $generated@@151) (= (type $generated@@536) $generated@@70)) (= (type $generated@@537) $generated@@70)) ($generated@@224 $generated@@535 ($generated@@409 $generated@@536 $generated@@537))) (and (= ($generated@@294 ($generated@@344 ($generated@@307 $generated@@151 $generated@@151) $generated@@535)) $generated@@535) ($generated@@138 ($generated@@344 ($generated@@307 $generated@@151 $generated@@151) $generated@@535) ($generated@@409 $generated@@536 $generated@@537))))
 :pattern ( ($generated@@224 $generated@@535 ($generated@@409 $generated@@536 $generated@@537)))
)))
(assert (forall (($generated@@538 T@U) ($generated@@539 T@U) ($generated@@540 T@U) ) (!  (=> (and (and (and (= (type $generated@@538) $generated@@151) (= (type $generated@@539) $generated@@70)) (= (type $generated@@540) $generated@@70)) ($generated@@224 $generated@@538 ($generated@@417 $generated@@539 $generated@@540))) (and (= ($generated@@294 ($generated@@344 ($generated@@325 $generated@@151 $generated@@151) $generated@@538)) $generated@@538) ($generated@@138 ($generated@@344 ($generated@@325 $generated@@151 $generated@@151) $generated@@538) ($generated@@417 $generated@@539 $generated@@540))))
 :pattern ( ($generated@@224 $generated@@538 ($generated@@417 $generated@@539 $generated@@540)))
)))
(assert (forall (($generated@@541 T@U) ($generated@@542 T@U) ($generated@@543 T@U) ) (!  (=> (and (and (and (= (type $generated@@541) $generated@@70) (= (type $generated@@542) $generated@@70)) (= (type $generated@@543) $generated@@151)) ($generated@@224 $generated@@543 ($generated@@141 $generated@@541 $generated@@542))) (and (= ($generated@@294 ($generated@@344 $generated@@142 $generated@@543)) $generated@@543) ($generated@@138 ($generated@@344 $generated@@142 $generated@@543) ($generated@@141 $generated@@541 $generated@@542))))
 :pattern ( ($generated@@224 $generated@@543 ($generated@@141 $generated@@541 $generated@@542)))
)))
(assert (forall (($generated@@544 T@U) ) (! (let (($generated@@545 (type $generated@@544)))
 (not ($generated@@0 ($generated@@87 ($generated@@425 $generated@@545) $generated@@544))))
 :pattern ( (let (($generated@@545 (type $generated@@544)))
($generated@@87 ($generated@@425 $generated@@545) $generated@@544)))
)))
(assert (forall (($generated@@547 T@U) ) (! (= (type ($generated@@546 $generated@@547)) $generated@@75)
 :pattern ( ($generated@@546 $generated@@547))
)))
(assert (forall (($generated@@548 T@U) ($generated@@549 T@U) ) (!  (=> (and (= (type $generated@@548) $generated@@70) (= (type $generated@@549) $generated@@70)) (and (= ($generated@@78 ($generated@@141 $generated@@548 $generated@@549)) $generated@@62) (= ($generated@@546 ($generated@@141 $generated@@548 $generated@@549)) $generated@@68)))
 :pattern ( ($generated@@141 $generated@@548 $generated@@549))
)))
(assert (forall (($generated@@550 T@U) ) (!  (=> (= (type $generated@@550) $generated@@142) (= ($generated@@529 ($generated@@294 $generated@@550)) ($generated@@530 $generated@@550)))
 :pattern ( ($generated@@529 ($generated@@294 $generated@@550)))
)))
(assert (forall (($generated@@551 T@U) ) (!  (=> (and (= (type $generated@@551) $generated@@151) ($generated@@224 $generated@@551 ($generated@@81 0))) (and (= ($generated@@294 ($generated@@344 $generated@@2 $generated@@551)) $generated@@551) ($generated@@138 ($generated@@344 ($generated@@82 $generated@@151 $generated@@4) $generated@@551) ($generated@@81 0))))
 :pattern ( ($generated@@224 $generated@@551 ($generated@@81 0)))
)))
(assert (forall (($generated@@552 T@U) ($generated@@553 T@U) ) (!  (=> (and (and (= (type $generated@@552) $generated@@151) (= (type $generated@@553) $generated@@70)) ($generated@@224 $generated@@552 ($generated@@242 $generated@@553))) (and (= ($generated@@294 ($generated@@344 ($generated@@82 $generated@@151 $generated@@4) $generated@@552)) $generated@@552) ($generated@@138 ($generated@@344 ($generated@@82 $generated@@151 $generated@@4) $generated@@552) ($generated@@242 $generated@@553))))
 :pattern ( ($generated@@224 $generated@@552 ($generated@@242 $generated@@553)))
)))
(assert (forall (($generated@@554 T@U) ($generated@@555 T@U) ) (!  (=> (and (and (= (type $generated@@554) $generated@@151) (= (type $generated@@555) $generated@@70)) ($generated@@224 $generated@@554 ($generated@@247 $generated@@555))) (and (= ($generated@@294 ($generated@@344 ($generated@@82 $generated@@151 $generated@@4) $generated@@554)) $generated@@554) ($generated@@138 ($generated@@344 ($generated@@82 $generated@@151 $generated@@4) $generated@@554) ($generated@@247 $generated@@555))))
 :pattern ( ($generated@@224 $generated@@554 ($generated@@247 $generated@@555)))
)))
(assert (forall (($generated@@556 T@U) ($generated@@557 T@U) ) (!  (=> (and (and (= (type $generated@@556) $generated@@151) (= (type $generated@@557) $generated@@70)) ($generated@@224 $generated@@556 ($generated@@162 $generated@@557))) (and (= ($generated@@294 ($generated@@344 ($generated@@82 $generated@@151 $generated@@2) $generated@@556)) $generated@@556) ($generated@@138 ($generated@@344 ($generated@@82 $generated@@151 $generated@@2) $generated@@556) ($generated@@162 $generated@@557))))
 :pattern ( ($generated@@224 $generated@@556 ($generated@@162 $generated@@557)))
)))
(assert (forall (($generated@@558 T@U) ($generated@@559 T@U) ) (!  (=> (and (and (= (type $generated@@558) $generated@@151) (= (type $generated@@559) $generated@@70)) ($generated@@224 $generated@@558 ($generated@@491 $generated@@559))) (and (= ($generated@@294 ($generated@@344 ($generated@@284 $generated@@151) $generated@@558)) $generated@@558) ($generated@@138 ($generated@@344 ($generated@@284 $generated@@151) $generated@@558) ($generated@@491 $generated@@559))))
 :pattern ( ($generated@@224 $generated@@558 ($generated@@491 $generated@@559)))
)))
(assert (= ($generated@@78 $generated@@231) $generated@@64))
(assert (= ($generated@@546 $generated@@231) $generated@@69))
(assert (forall (($generated@@560 T@U) ($generated@@561 T@U) ($generated@@562 T@U) ) (!  (=> (and (and (= (type $generated@@560) ($generated@@82 $generated@@151 $generated@@2)) (= (type $generated@@561) $generated@@70)) (= (type $generated@@562) ($generated@@82 $generated@@83 $generated@@84))) (= ($generated@@80 $generated@@560 ($generated@@162 $generated@@561) $generated@@562) (forall (($generated@@563 T@U) ) (!  (=> (and (= (type $generated@@563) $generated@@151) (< 0 ($generated ($generated@@87 $generated@@560 $generated@@563)))) ($generated@@268 $generated@@563 $generated@@561 $generated@@562))
 :pattern ( ($generated@@87 $generated@@560 $generated@@563))
))))
 :pattern ( ($generated@@80 $generated@@560 ($generated@@162 $generated@@561) $generated@@562))
)))
(assert (= $generated@@157 ($generated@@252 $generated@@157)))
(assert (= $generated@@159 ($generated@@252 $generated@@159)))
(assert (= $generated@@160 ($generated@@252 $generated@@160)))
(assert (= $generated@@161 ($generated@@252 $generated@@161)))
(assert (forall (($generated@@565 T@U) ) (!  (=> (and (= (type $generated@@565) $generated@@142) ($generated@@564 $generated@@565)) (or (or (or ($generated@@256 $generated@@565) ($generated@@259 $generated@@565)) ($generated@@262 $generated@@565)) ($generated@@265 $generated@@565)))
 :pattern ( ($generated@@564 $generated@@565))
)))
(assert (forall (($generated@@566 T@U) ($generated@@567 T@U) ($generated@@568 T@U) ) (!  (=> (and (and (and (= (type $generated@@566) $generated@@142) (= (type $generated@@567) $generated@@70)) (= (type $generated@@568) ($generated@@82 $generated@@83 $generated@@84))) (and ($generated@@232 $generated@@568) (and ($generated@@140 $generated@@566) (exists (($generated@@569 T@U) ) (!  (and (= (type $generated@@569) $generated@@70) ($generated@@80 $generated@@566 ($generated@@141 $generated@@567 $generated@@569) $generated@@568))
 :pattern ( ($generated@@80 $generated@@566 ($generated@@141 $generated@@567 $generated@@569) $generated@@568))
))))) ($generated@@268 ($generated@@149 $generated@@566) $generated@@567 $generated@@568))
 :pattern ( ($generated@@268 ($generated@@149 $generated@@566) $generated@@567 $generated@@568))
)))
(assert (forall (($generated@@570 T@U) ($generated@@571 T@U) ($generated@@572 T@U) ) (!  (=> (and (and (and (= (type $generated@@570) $generated@@142) (= (type $generated@@571) $generated@@70)) (= (type $generated@@572) ($generated@@82 $generated@@83 $generated@@84))) (and ($generated@@232 $generated@@572) (and ($generated@@140 $generated@@570) (exists (($generated@@573 T@U) ) (!  (and (= (type $generated@@573) $generated@@70) ($generated@@80 $generated@@570 ($generated@@141 $generated@@573 $generated@@571) $generated@@572))
 :pattern ( ($generated@@80 $generated@@570 ($generated@@141 $generated@@573 $generated@@571) $generated@@572))
))))) ($generated@@268 ($generated@@150 $generated@@570) $generated@@571 $generated@@572))
 :pattern ( ($generated@@268 ($generated@@150 $generated@@570) $generated@@571 $generated@@572))
)))
(assert (forall (($generated@@574 T@U) ($generated@@575 T@U) ) (!  (=> (and (= (type $generated@@574) $generated@@151) (= (type $generated@@575) $generated@@151)) (= ($generated@@223 ($generated@@252 $generated@@574) ($generated@@252 $generated@@575)) ($generated@@252 ($generated@@223 $generated@@574 $generated@@575))))
 :pattern ( ($generated@@223 ($generated@@252 $generated@@574) ($generated@@252 $generated@@575)))
)))
(assert (forall (($generated@@576 T@U) ) (! (= ($generated@@294 ($generated@@252 $generated@@576)) ($generated@@252 ($generated@@294 $generated@@576)))
 :pattern ( ($generated@@294 ($generated@@252 $generated@@576)))
)))
(assert (forall (($generated@@577 T@U) ) (! (let (($generated@@578 ($generated@@285 (type $generated@@577))))
 (=> (and (= (type $generated@@577) ($generated@@284 $generated@@578)) (= ($generated@@283 $generated@@577) 0)) (= $generated@@577 ($generated@@282 $generated@@578))))
 :pattern ( ($generated@@283 $generated@@577))
)))
(assert (forall (($generated@@579 T@U) ($generated@@580 T@U) ($generated@@581 T@U) ) (! (let (($generated@@582 (type $generated@@580)))
 (=> (and (and (= (type $generated@@579) ($generated@@82 $generated@@582 $generated@@2)) (= (type $generated@@581) $generated@@2)) (<= 0 ($generated $generated@@581))) (= ($generated@@299 ($generated@@88 $generated@@579 $generated@@580 $generated@@581)) (+ (- ($generated@@299 $generated@@579) ($generated ($generated@@87 $generated@@579 $generated@@580))) ($generated $generated@@581)))))
 :pattern ( ($generated@@299 ($generated@@88 $generated@@579 $generated@@580 $generated@@581)))
)))
(assert (forall (($generated@@583 T@U) ) (!  (=> (and (= (type $generated@@583) $generated@@142) ($generated@@138 $generated@@583 $generated@@231)) (or (or (or ($generated@@256 $generated@@583) ($generated@@259 $generated@@583)) ($generated@@262 $generated@@583)) ($generated@@265 $generated@@583)))
 :pattern ( ($generated@@265 $generated@@583) ($generated@@138 $generated@@583 $generated@@231))
 :pattern ( ($generated@@262 $generated@@583) ($generated@@138 $generated@@583 $generated@@231))
 :pattern ( ($generated@@259 $generated@@583) ($generated@@138 $generated@@583 $generated@@231))
 :pattern ( ($generated@@256 $generated@@583) ($generated@@138 $generated@@583 $generated@@231))
)))
(assert (forall (($generated@@584 T@U) ($generated@@585 T@U) ) (!  (=> (and (= (type $generated@@584) ($generated@@82 $generated@@83 $generated@@84)) (= (type $generated@@585) $generated@@2)) ($generated@@80 $generated@@585 $generated@@46 $generated@@584))
 :pattern ( ($generated@@80 $generated@@585 $generated@@46 $generated@@584))
)))
(assert (forall (($generated@@586 T@U) ($generated@@587 T@U) ) (!  (=> (and (= (type $generated@@586) ($generated@@82 $generated@@83 $generated@@84)) (= (type $generated@@587) $generated@@3)) ($generated@@80 $generated@@587 $generated@@47 $generated@@586))
 :pattern ( ($generated@@80 $generated@@587 $generated@@47 $generated@@586))
)))
(assert (forall (($generated@@588 T@U) ($generated@@589 T@U) ) (!  (=> (and (= (type $generated@@588) ($generated@@82 $generated@@83 $generated@@84)) (= (type $generated@@589) $generated@@4)) ($generated@@80 $generated@@589 $generated@@44 $generated@@588))
 :pattern ( ($generated@@80 $generated@@589 $generated@@44 $generated@@588))
)))
(assert (forall (($generated@@590 T@U) ($generated@@591 T@U) ) (!  (=> (and (= (type $generated@@590) ($generated@@82 $generated@@83 $generated@@84)) (= (type $generated@@591) $generated@@449)) ($generated@@80 $generated@@591 $generated@@45 $generated@@590))
 :pattern ( ($generated@@80 $generated@@591 $generated@@45 $generated@@590))
)))
(assert (forall (($generated@@592 T@U) ($generated@@593 T@U) ) (!  (=> (and (= (type $generated@@592) ($generated@@82 $generated@@83 $generated@@84)) (= (type $generated@@593) $generated@@151)) ($generated@@80 $generated@@593 $generated@@48 $generated@@592))
 :pattern ( ($generated@@80 $generated@@593 $generated@@48 $generated@@592))
)))
(assert (forall (($generated@@594 T@U) ($generated@@595 T@U) ) (!  (=> (and (= (type $generated@@594) ($generated@@284 $generated@@151)) (= (type $generated@@595) $generated@@70)) (= ($generated@@138 $generated@@594 ($generated@@491 $generated@@595)) (forall (($generated@@596 Int) ) (!  (=> (and (<= 0 $generated@@596) (< $generated@@596 ($generated@@283 $generated@@594))) ($generated@@224 ($generated@@492 $generated@@594 $generated@@596) $generated@@595))
 :pattern ( ($generated@@492 $generated@@594 $generated@@596))
))))
 :pattern ( ($generated@@138 $generated@@594 ($generated@@491 $generated@@595)))
)))
(assert (forall (($generated@@598 T@U) ($generated@@599 Int) ) (!  (=> (= (type $generated@@598) ($generated@@284 $generated@@151)) (=> (and (<= 0 $generated@@599) (< $generated@@599 ($generated@@283 $generated@@598))) (< ($generated@@530 ($generated@@344 $generated@@142 ($generated@@492 $generated@@598 $generated@@599))) ($generated@@597 $generated@@598))))
 :pattern ( ($generated@@530 ($generated@@344 $generated@@142 ($generated@@492 $generated@@598 $generated@@599))))
)))
(assert (forall (($generated@@600 T@U) ($generated@@601 T@U) ($generated@@602 T@U) ) (!  (=> (and (and (and (= (type $generated@@600) ($generated@@307 $generated@@151 $generated@@151)) (= (type $generated@@601) $generated@@70)) (= (type $generated@@602) $generated@@70)) ($generated@@138 $generated@@600 ($generated@@409 $generated@@601 $generated@@602))) (and (and ($generated@@138 ($generated@@305 $generated@@600) ($generated@@242 $generated@@601)) ($generated@@138 ($generated@@352 $generated@@600) ($generated@@242 $generated@@602))) ($generated@@138 ($generated@@383 $generated@@600) ($generated@@242 ($generated@@141 $generated@@601 $generated@@602)))))
 :pattern ( ($generated@@138 $generated@@600 ($generated@@409 $generated@@601 $generated@@602)))
)))
(assert (forall (($generated@@603 T@U) ($generated@@604 T@U) ($generated@@605 T@U) ) (!  (=> (and (and (and (= (type $generated@@603) ($generated@@325 $generated@@151 $generated@@151)) (= (type $generated@@604) $generated@@70)) (= (type $generated@@605) $generated@@70)) ($generated@@138 $generated@@603 ($generated@@417 $generated@@604 $generated@@605))) (and (and ($generated@@138 ($generated@@323 $generated@@603) ($generated@@247 $generated@@604)) ($generated@@138 ($generated@@363 $generated@@603) ($generated@@247 $generated@@605))) ($generated@@138 ($generated@@391 $generated@@603) ($generated@@247 ($generated@@141 $generated@@604 $generated@@605)))))
 :pattern ( ($generated@@138 $generated@@603 ($generated@@417 $generated@@604 $generated@@605)))
)))
(assert (forall (($generated@@606 T@U) ) (!  (=> (= (type $generated@@606) $generated@@2) ($generated@@138 $generated@@606 $generated@@46))
 :pattern ( ($generated@@138 $generated@@606 $generated@@46))
)))
(assert (forall (($generated@@607 T@U) ) (!  (=> (= (type $generated@@607) $generated@@3) ($generated@@138 $generated@@607 $generated@@47))
 :pattern ( ($generated@@138 $generated@@607 $generated@@47))
)))
(assert (forall (($generated@@608 T@U) ) (!  (=> (= (type $generated@@608) $generated@@4) ($generated@@138 $generated@@608 $generated@@44))
 :pattern ( ($generated@@138 $generated@@608 $generated@@44))
)))
(assert (forall (($generated@@609 T@U) ) (!  (=> (= (type $generated@@609) $generated@@449) ($generated@@138 $generated@@609 $generated@@45))
 :pattern ( ($generated@@138 $generated@@609 $generated@@45))
)))
(assert (forall (($generated@@610 T@U) ) (!  (=> (= (type $generated@@610) $generated@@151) ($generated@@138 $generated@@610 $generated@@48))
 :pattern ( ($generated@@138 $generated@@610 $generated@@48))
)))
(push 1)
(declare-fun ControlFlow (Int Int) Int)
(declare-fun $generated@@611 () T@U)
(declare-fun $generated@@612 () T@U)
(declare-fun $generated@@613 () T@U)
(declare-fun $generated@@614 () T@U)
(declare-fun $generated@@615 (T@U) Bool)
(declare-fun $generated@@616 () Int)
(assert  (and (and (and (= (type $generated@@611) $generated@@142) (= (type $generated@@612) ($generated@@169 $generated@@83 $generated@@4))) (= (type $generated@@613) $generated@@83)) (= (type $generated@@614) ($generated@@82 $generated@@83 $generated@@84))))
(set-option :timeout 0)
(set-option :rlimit 0)
(assert (not
 (=> (= (ControlFlow 0 0) 12) (let (($generated@@617 true))
(let (($generated@@618  (=> (and (= $generated@@611 $generated@@159) (= (ControlFlow 0 6) (- 0 5))) false)))
(let (($generated@@619  (=> (not (= $generated@@611 $generated@@161)) (and (=> (= (ControlFlow 0 8) 6) $generated@@618) (=> (= (ControlFlow 0 8) 7) $generated@@617)))))
(let (($generated@@620  (=> (and (= $generated@@611 $generated@@161) (= (ControlFlow 0 4) (- 0 3))) false)))
(let (($generated@@621  (=> (not (= $generated@@611 $generated@@160)) (and (=> (= (ControlFlow 0 9) 4) $generated@@620) (=> (= (ControlFlow 0 9) 8) $generated@@619)))))
(let (($generated@@622 true))
(let (($generated@@623  (=> (not (= $generated@@611 $generated@@157)) (and (=> (= (ControlFlow 0 10) 2) $generated@@622) (=> (= (ControlFlow 0 10) 9) $generated@@621)))))
(let (($generated@@624 true))
(let (($generated@@625  (=> (= $generated@@612 ($generated@@168 $generated@@613 $generated@@614 $generated@@60 false)) (and (=> (= (ControlFlow 0 11) 1) $generated@@624) (=> (= (ControlFlow 0 11) 10) $generated@@623)))))
(let (($generated@@626  (=> (and ($generated@@232 $generated@@614) ($generated@@615 $generated@@614)) (=> (and (and (and (and ($generated@@138 $generated@@611 $generated@@231) ($generated@@80 $generated@@611 $generated@@231 $generated@@614)) ($generated@@564 $generated@@611)) (= 1 $generated@@616)) (and (not ($generated@@239 $generated@@611 $generated@@159)) (= (ControlFlow 0 12) 11))) $generated@@625))))
$generated@@626)))))))))))
))
(check-sat)
(get-info :reason-unknown)
(assert (not (= (ControlFlow 0 4) (- 3))))
(check-sat)
(pop 1)
; Invalid
(get-info :rlimit)
(reset)
(set-option :rlimit 0)
; did a full reset
(reset)
(set-option :print-success false)
(set-info :smt-lib-version 2.6)
(set-option :auto_config false)
(set-option :type_check true)
(set-option :smt.case_split 3)
(set-option :smt.qi.eager_threshold 100)
(set-option :smt.delay_units true)
(set-option :smt.arith.solver 2)
(set-option :smt.mbqi false)
(set-option :model.compact false)
(set-option :model.v2 true)
(set-option :pp.bv_literals false)
; done setting options


(set-info :category "industrial")
(declare-sort |T@U| 0)
(declare-sort |T@T| 0)
(declare-fun real_pow (Real Real) Real)
(declare-fun UOrdering2 (|T@U| |T@U|) Bool)
(declare-fun UOrdering3 (|T@T| |T@U| |T@U|) Bool)
(declare-fun tickleBool (Bool) Bool)
(assert (and (tickleBool true) (tickleBool false)))
(declare-fun $generated (T@U) Int)
(declare-fun $generated@@0 (T@U) Bool)
(declare-fun $generated@@1 (T@T) Int)
(declare-fun $generated@@2 () T@T)
(declare-fun $generated@@3 () T@T)
(declare-fun $generated@@4 () T@T)
(declare-fun $generated@@5 () T@T)
(declare-fun $generated@@6 () T@T)
(declare-fun $generated@@7 () T@T)
(declare-fun $generated@@8 (Int) T@U)
(declare-fun type (T@U) T@T)
(declare-fun $generated@@9 (Real) T@U)
(declare-fun $generated@@10 (T@U) Real)
(declare-fun $generated@@11 (Bool) T@U)
(declare-fun $generated@@12 (RoundingMode) T@U)
(declare-fun $generated@@13 (T@U) RoundingMode)
(declare-fun $generated@@14 (String) T@U)
(declare-fun $generated@@15 (T@U) String)
(declare-fun $generated@@16 ((RegEx String)) T@U)
(declare-fun $generated@@17 (T@U) (RegEx String))
(declare-fun $generated@@44 () T@U)
(declare-fun $generated@@45 () T@U)
(declare-fun $generated@@46 () T@U)
(declare-fun $generated@@47 () T@U)
(declare-fun $generated@@48 () T@U)
(declare-fun $generated@@49 () T@U)
(declare-fun $generated@@50 () T@U)
(declare-fun $generated@@51 () T@U)
(declare-fun $generated@@52 () T@U)
(declare-fun $generated@@53 () T@U)
(declare-fun $generated@@54 () T@U)
(declare-fun $generated@@55 () T@U)
(declare-fun $generated@@56 () T@U)
(declare-fun $generated@@57 () T@U)
(declare-fun $generated@@58 () T@U)
(declare-fun $generated@@59 () T@U)
(declare-fun $generated@@60 () T@U)
(declare-fun $generated@@61 () T@U)
(declare-fun $generated@@62 () T@U)
(declare-fun $generated@@63 () T@U)
(declare-fun $generated@@64 () T@U)
(declare-fun $generated@@65 () T@U)
(declare-fun $generated@@66 () T@U)
(declare-fun $generated@@67 () T@U)
(declare-fun $generated@@68 () T@U)
(declare-fun $generated@@69 () T@U)
(declare-fun $generated@@70 () T@T)
(declare-fun $generated@@71 () T@T)
(declare-fun $generated@@72 (T@T) T@T)
(declare-fun $generated@@73 (T@T) T@T)
(declare-fun $generated@@74 () T@T)
(declare-fun $generated@@75 () T@T)
(declare-fun $generated@@78 (T@U) T@U)
(declare-fun $generated@@80 (T@U T@U T@U) Bool)
(declare-fun $generated@@81 (Int) T@U)
(declare-fun $generated@@82 (T@T T@T) T@T)
(declare-fun $generated@@83 () T@T)
(declare-fun $generated@@84 () T@T)
(declare-fun $generated@@85 (T@T) T@T)
(declare-fun $generated@@86 (T@T) T@T)
(declare-fun $generated@@87 (T@U T@U) T@U)
(declare-fun $generated@@88 (T@U T@U T@U) T@U)
(declare-fun $generated@@89 (T@U T@U) T@U)
(declare-fun $generated@@90 (T@U T@U T@U) T@U)
(declare-fun $generated@@138 (T@U T@U) Bool)
(declare-fun $generated@@140 (T@U) Bool)
(declare-fun $generated@@141 (T@U T@U) T@U)
(declare-fun $generated@@142 () T@T)
(declare-fun $generated@@148 (T@U T@U) Bool)
(declare-fun $generated@@149 (T@U) T@U)
(declare-fun $generated@@150 (T@U) T@U)
(declare-fun $generated@@151 () T@T)
(declare-fun $generated@@156 (T@U) T@U)
(declare-fun $generated@@157 () T@U)
(declare-fun $generated@@159 () T@U)
(declare-fun $generated@@160 () T@U)
(declare-fun $generated@@161 () T@U)
(declare-fun $generated@@162 (T@U) T@U)
(declare-fun $generated@@163 (T@U) Bool)
(declare-fun $generated@@167 (T@U T@U T@U) T@U)
(declare-fun $generated@@168 (T@U T@U T@U Bool) T@U)
(declare-fun $generated@@169 (T@T T@T) T@T)
(declare-fun $generated@@170 (T@T) T@T)
(declare-fun $generated@@171 (T@T) T@T)
(declare-fun $generated@@172 (T@U T@U T@U T@U) T@U)
(declare-fun $generated@@223 (T@U T@U) T@U)
(declare-fun $generated@@224 (T@U T@U) Bool)
(declare-fun $generated@@231 () T@U)
(declare-fun $generated@@232 (T@U) Bool)
(declare-fun $generated@@239 (T@U T@U) Bool)
(declare-fun $generated@@242 (T@U) T@U)
(declare-fun $generated@@247 (T@U) T@U)
(declare-fun $generated@@252 (T@U) T@U)
(declare-fun $generated@@256 (T@U) Bool)
(declare-fun $generated@@259 (T@U) Bool)
(declare-fun $generated@@262 (T@U) Bool)
(declare-fun $generated@@265 (T@U) Bool)
(declare-fun $generated@@268 (T@U T@U T@U) Bool)
(declare-fun $generated@@282 (T@T) T@U)
(declare-fun $generated@@283 (T@U) Int)
(declare-fun $generated@@284 (T@T) T@T)
(declare-fun $generated@@285 (T@T) T@T)
(declare-fun $generated@@294 (T@U) T@U)
(declare-fun $generated@@299 (T@U) Int)
(declare-fun $generated@@300 (T@T) T@U)
(declare-fun $generated@@305 (T@U) T@U)
(declare-fun $generated@@306 (T@T T@T) T@U)
(declare-fun $generated@@307 (T@T T@T) T@T)
(declare-fun $generated@@308 (T@T) T@T)
(declare-fun $generated@@309 (T@T) T@T)
(declare-fun $generated@@323 (T@U) T@U)
(declare-fun $generated@@324 (T@T T@T) T@U)
(declare-fun $generated@@325 (T@T T@T) T@T)
(declare-fun $generated@@326 (T@T) T@T)
(declare-fun $generated@@327 (T@T) T@T)
(declare-fun $generated@@344 (T@T T@U) T@U)
(declare-fun $generated@@352 (T@U) T@U)
(declare-fun $generated@@363 (T@U) T@U)
(declare-fun $generated@@383 (T@U) T@U)
(declare-fun $generated@@384 (T@U) T@U)
(declare-fun $generated@@391 (T@U) T@U)
(declare-fun $generated@@392 (T@U) T@U)
(declare-fun $generated@@409 (T@U T@U) T@U)
(declare-fun $generated@@417 (T@U T@U) T@U)
(declare-fun $generated@@425 (T@T) T@U)
(declare-fun $generated@@449 () T@T)
(declare-fun $generated@@457 (T@U) T@U)
(declare-fun $generated@@461 (T@U) T@U)
(declare-fun $generated@@467 (T@U) T@U)
(declare-fun $generated@@471 (T@U) T@U)
(declare-fun $generated@@479 (T@U) T@U)
(declare-fun $generated@@483 (T@U) T@U)
(declare-fun $generated@@491 (T@U) T@U)
(declare-fun $generated@@492 (T@U Int) T@U)
(declare-fun $generated@@501 (T@U) Int)
(declare-fun $generated@@503 (T@U) T@U)
(declare-fun $generated@@507 (T@U) T@U)
(declare-fun $generated@@511 (T@U) T@U)
(declare-fun $generated@@515 (T@U) T@U)
(declare-fun $generated@@529 (T@U) Int)
(declare-fun $generated@@530 (T@U) Int)
(declare-fun $generated@@546 (T@U) T@U)
(declare-fun $generated@@564 (T@U) Bool)
(declare-fun $generated@@597 (T@U) Int)
(assert  (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (= ($generated@@1 $generated@@2) 0) (= ($generated@@1 $generated@@3) 1)) (= ($generated@@1 $generated@@4) 2)) (= ($generated@@1 $generated@@5) 3)) (= ($generated@@1 $generated@@6) 4)) (= ($generated@@1 $generated@@7) 5)) (forall (($generated@@18 Int) ) (! (= ($generated ($generated@@8 $generated@@18)) $generated@@18)
 :pattern ( ($generated@@8 $generated@@18))
))) (forall (($generated@@19 T@U) ) (!  (=> (= (type $generated@@19) $generated@@2) (= ($generated@@8 ($generated $generated@@19)) $generated@@19))
 :pattern ( ($generated $generated@@19))
))) (forall (($generated@@20 Int) ) (! (= (type ($generated@@8 $generated@@20)) $generated@@2)
 :pattern ( ($generated@@8 $generated@@20))
))) (forall (($generated@@21 Real) ) (! (= ($generated@@10 ($generated@@9 $generated@@21)) $generated@@21)
 :pattern ( ($generated@@9 $generated@@21))
))) (forall (($generated@@22 T@U) ) (!  (=> (= (type $generated@@22) $generated@@3) (= ($generated@@9 ($generated@@10 $generated@@22)) $generated@@22))
 :pattern ( ($generated@@10 $generated@@22))
))) (forall (($generated@@23 Real) ) (! (= (type ($generated@@9 $generated@@23)) $generated@@3)
 :pattern ( ($generated@@9 $generated@@23))
))) (forall (($generated@@24 Bool) ) (! (= ($generated@@0 ($generated@@11 $generated@@24)) $generated@@24)
 :pattern ( ($generated@@11 $generated@@24))
))) (forall (($generated@@25 T@U) ) (!  (=> (= (type $generated@@25) $generated@@4) (= ($generated@@11 ($generated@@0 $generated@@25)) $generated@@25))
 :pattern ( ($generated@@0 $generated@@25))
))) (forall (($generated@@26 Bool) ) (! (= (type ($generated@@11 $generated@@26)) $generated@@4)
 :pattern ( ($generated@@11 $generated@@26))
))) (forall (($generated@@27 RoundingMode) ) (! (= ($generated@@13 ($generated@@12 $generated@@27)) $generated@@27)
 :pattern ( ($generated@@12 $generated@@27))
))) (forall (($generated@@28 T@U) ) (!  (=> (= (type $generated@@28) $generated@@5) (= ($generated@@12 ($generated@@13 $generated@@28)) $generated@@28))
 :pattern ( ($generated@@13 $generated@@28))
))) (forall (($generated@@29 RoundingMode) ) (! (= (type ($generated@@12 $generated@@29)) $generated@@5)
 :pattern ( ($generated@@12 $generated@@29))
))) (forall (($generated@@30 String) ) (! (= ($generated@@15 ($generated@@14 $generated@@30)) $generated@@30)
 :pattern ( ($generated@@14 $generated@@30))
))) (forall (($generated@@31 T@U) ) (!  (=> (= (type $generated@@31) $generated@@6) (= ($generated@@14 ($generated@@15 $generated@@31)) $generated@@31))
 :pattern ( ($generated@@15 $generated@@31))
))) (forall (($generated@@32 String) ) (! (= (type ($generated@@14 $generated@@32)) $generated@@6)
 :pattern ( ($generated@@14 $generated@@32))
))) (forall (($generated@@33 (RegEx String)) ) (! (= ($generated@@17 ($generated@@16 $generated@@33)) $generated@@33)
 :pattern ( ($generated@@16 $generated@@33))
))) (forall (($generated@@34 T@U) ) (!  (=> (= (type $generated@@34) $generated@@7) (= ($generated@@16 ($generated@@17 $generated@@34)) $generated@@34))
 :pattern ( ($generated@@17 $generated@@34))
))) (forall (($generated@@35 (RegEx String)) ) (! (= (type ($generated@@16 $generated@@35)) $generated@@7)
 :pattern ( ($generated@@16 $generated@@35))
))))
(assert (forall (($generated@@36 T@U) ) (! (UOrdering2 $generated@@36 $generated@@36)
 :no-pattern ($generated $generated@@36)
 :no-pattern ($generated@@0 $generated@@36)
)))
(assert (forall (($generated@@37 T@U) ($generated@@38 T@U) ($generated@@39 T@U) ) (! (let (($generated@@40 (type $generated@@37)))
 (=> (and (and (= (type $generated@@38) $generated@@40) (= (type $generated@@39) $generated@@40)) (and (UOrdering2 $generated@@37 $generated@@38) (UOrdering2 $generated@@38 $generated@@39))) (UOrdering2 $generated@@37 $generated@@39)))
 :pattern ( (UOrdering2 $generated@@37 $generated@@38) (UOrdering2 $generated@@38 $generated@@39))
)))
(assert (forall (($generated@@41 T@U) ($generated@@42 T@U) ) (! (let (($generated@@43 (type $generated@@41)))
 (=> (= (type $generated@@42) $generated@@43) (=> (and (UOrdering2 $generated@@41 $generated@@42) (UOrdering2 $generated@@42 $generated@@41)) (= $generated@@41 $generated@@42))))
 :pattern ( (UOrdering2 $generated@@41 $generated@@42) (UOrdering2 $generated@@42 $generated@@41))
)))
(assert  (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (= ($generated@@1 $generated@@70) 6) (= (type $generated@@44) $generated@@70)) (= (type $generated@@45) $generated@@70)) (= (type $generated@@46) $generated@@70)) (= (type $generated@@47) $generated@@70)) (= (type $generated@@48) $generated@@70)) (= ($generated@@1 $generated@@71) 7)) (= (type $generated@@49) $generated@@71)) (= (type $generated@@50) $generated@@71)) (= (type $generated@@51) $generated@@71)) (= (type $generated@@52) $generated@@71)) (= (type $generated@@53) $generated@@71)) (= (type $generated@@54) $generated@@71)) (= (type $generated@@55) $generated@@71)) (= (type $generated@@56) $generated@@71)) (= (type $generated@@57) $generated@@71)) (= (type $generated@@58) $generated@@71)) (= (type $generated@@59) $generated@@71)) (forall (($generated@@76 T@T) ) (= ($generated@@1 ($generated@@72 $generated@@76)) 8))) (forall (($generated@@77 T@T) ) (! (= ($generated@@73 ($generated@@72 $generated@@77)) $generated@@77)
 :pattern ( ($generated@@72 $generated@@77))
))) (= (type $generated@@60) ($generated@@72 $generated@@4))) (= ($generated@@1 $generated@@74) 9)) (= (type $generated@@61) $generated@@74)) (= (type $generated@@62) $generated@@71)) (= (type $generated@@63) $generated@@74)) (= (type $generated@@64) $generated@@71)) (= (type $generated@@65) $generated@@74)) (= (type $generated@@66) $generated@@74)) (= (type $generated@@67) $generated@@74)) (= ($generated@@1 $generated@@75) 10)) (= (type $generated@@68) $generated@@75)) (= (type $generated@@69) $generated@@75)))
(assert (distinct $generated@@44 $generated@@45 $generated@@46 $generated@@47 $generated@@48 $generated@@49 $generated@@50 $generated@@51 $generated@@52 $generated@@53 $generated@@54 $generated@@55 $generated@@56 $generated@@57 $generated@@58 $generated@@59 $generated@@60 $generated@@61 $generated@@62 $generated@@63 $generated@@64 $generated@@65 $generated@@66 $generated@@67 $generated@@68 $generated@@69)
)
(assert (forall (($generated@@79 T@U) ) (! (= (type ($generated@@78 $generated@@79)) $generated@@71)
 :pattern ( ($generated@@78 $generated@@79))
)))
(assert (= ($generated@@78 $generated@@44) $generated@@49))
(assert (= ($generated@@78 $generated@@45) $generated@@50))
(assert (= ($generated@@78 $generated@@46) $generated@@51))
(assert (= ($generated@@78 $generated@@47) $generated@@52))
(assert (= ($generated@@78 $generated@@48) $generated@@53))
(assert  (and (and (and (and (and (and (and (and (and (and (and (and (and (forall (($generated@@91 T@T) ($generated@@92 T@T) ) (= ($generated@@1 ($generated@@82 $generated@@91 $generated@@92)) 11)) (forall (($generated@@93 T@T) ($generated@@94 T@T) ) (! (= ($generated@@85 ($generated@@82 $generated@@93 $generated@@94)) $generated@@93)
 :pattern ( ($generated@@82 $generated@@93 $generated@@94))
))) (forall (($generated@@95 T@T) ($generated@@96 T@T) ) (! (= ($generated@@86 ($generated@@82 $generated@@95 $generated@@96)) $generated@@96)
 :pattern ( ($generated@@82 $generated@@95 $generated@@96))
))) (forall (($generated@@97 T@U) ($generated@@98 T@U) ) (! (let (($generated@@99 ($generated@@86 (type $generated@@97))))
(= (type ($generated@@87 $generated@@97 $generated@@98)) $generated@@99))
 :pattern ( ($generated@@87 $generated@@97 $generated@@98))
))) (forall (($generated@@100 T@U) ($generated@@101 T@U) ($generated@@102 T@U) ) (! (let (($generated@@103 (type $generated@@102)))
(let (($generated@@104 (type $generated@@101)))
(= (type ($generated@@88 $generated@@100 $generated@@101 $generated@@102)) ($generated@@82 $generated@@104 $generated@@103))))
 :pattern ( ($generated@@88 $generated@@100 $generated@@101 $generated@@102))
))) (forall (($generated@@105 T@U) ($generated@@106 T@U) ($generated@@107 T@U) ) (! (let (($generated@@108 ($generated@@86 (type $generated@@105))))
 (=> (= (type $generated@@107) $generated@@108) (= ($generated@@87 ($generated@@88 $generated@@105 $generated@@106 $generated@@107) $generated@@106) $generated@@107)))
 :weight 0
))) (and (forall (($generated@@109 T@U) ($generated@@110 T@U) ($generated@@111 T@U) ($generated@@112 T@U) ) (!  (or (= $generated@@111 $generated@@112) (= ($generated@@87 ($generated@@88 $generated@@110 $generated@@111 $generated@@109) $generated@@112) ($generated@@87 $generated@@110 $generated@@112)))
 :weight 0
)) (forall (($generated@@113 T@U) ($generated@@114 T@U) ($generated@@115 T@U) ($generated@@116 T@U) ) (!  (or true (= ($generated@@87 ($generated@@88 $generated@@114 $generated@@115 $generated@@113) $generated@@116) ($generated@@87 $generated@@114 $generated@@116)))
 :weight 0
)))) (= ($generated@@1 $generated@@83) 12)) (forall (($generated@@117 T@U) ($generated@@118 T@U) ) (! (let (($generated@@119 ($generated@@73 (type $generated@@118))))
(= (type ($generated@@89 $generated@@117 $generated@@118)) $generated@@119))
 :pattern ( ($generated@@89 $generated@@117 $generated@@118))
))) (= ($generated@@1 $generated@@84) 13)) (forall (($generated@@120 T@U) ($generated@@121 T@U) ($generated@@122 T@U) ) (! (= (type ($generated@@90 $generated@@120 $generated@@121 $generated@@122)) $generated@@84)
 :pattern ( ($generated@@90 $generated@@120 $generated@@121 $generated@@122))
))) (forall (($generated@@123 T@U) ($generated@@124 T@U) ($generated@@125 T@U) ) (! (let (($generated@@126 ($generated@@73 (type $generated@@124))))
 (=> (= (type $generated@@125) $generated@@126) (= ($generated@@89 ($generated@@90 $generated@@123 $generated@@124 $generated@@125) $generated@@124) $generated@@125)))
 :weight 0
))) (and (forall (($generated@@127 T@U) ($generated@@128 T@U) ($generated@@129 T@U) ($generated@@130 T@U) ) (!  (or (= $generated@@129 $generated@@130) (= ($generated@@89 ($generated@@90 $generated@@128 $generated@@129 $generated@@127) $generated@@130) ($generated@@89 $generated@@128 $generated@@130)))
 :weight 0
)) (forall (($generated@@131 T@U) ($generated@@132 T@U) ($generated@@133 T@U) ($generated@@134 T@U) ) (!  (or true (= ($generated@@89 ($generated@@90 $generated@@132 $generated@@133 $generated@@131) $generated@@134) ($generated@@89 $generated@@132 $generated@@134)))
 :weight 0
)))) (forall (($generated@@135 Int) ) (! (= (type ($generated@@81 $generated@@135)) $generated@@70)
 :pattern ( ($generated@@81 $generated@@135))
))))
(assert (forall (($generated@@136 T@U) ($generated@@137 T@U) ) (!  (=> (and (= (type $generated@@136) $generated@@2) (= (type $generated@@137) ($generated@@82 $generated@@83 $generated@@84))) ($generated@@80 $generated@@136 ($generated@@81 0) $generated@@137))
 :pattern ( ($generated@@80 $generated@@136 ($generated@@81 0) $generated@@137))
)))
(assert (forall (($generated@@139 T@U) ) (!  (=> (= (type $generated@@139) $generated@@2) ($generated@@138 $generated@@139 ($generated@@81 0)))
 :pattern ( ($generated@@138 $generated@@139 ($generated@@81 0)))
)))
(assert  (and (= ($generated@@1 $generated@@142) 14) (forall (($generated@@143 T@U) ($generated@@144 T@U) ) (! (= (type ($generated@@141 $generated@@143 $generated@@144)) $generated@@70)
 :pattern ( ($generated@@141 $generated@@143 $generated@@144))
))))
(assert (forall (($generated@@145 T@U) ($generated@@146 T@U) ($generated@@147 T@U) ) (!  (=> (and (and (and (= (type $generated@@145) $generated@@70) (= (type $generated@@146) $generated@@70)) (= (type $generated@@147) $generated@@142)) ($generated@@138 $generated@@147 ($generated@@141 $generated@@145 $generated@@146))) ($generated@@140 $generated@@147))
 :pattern ( ($generated@@140 $generated@@147) ($generated@@138 $generated@@147 ($generated@@141 $generated@@145 $generated@@146)))
)))
(assert  (and (and (= ($generated@@1 $generated@@151) 15) (forall (($generated@@152 T@U) ) (! (= (type ($generated@@149 $generated@@152)) $generated@@151)
 :pattern ( ($generated@@149 $generated@@152))
))) (forall (($generated@@153 T@U) ) (! (= (type ($generated@@150 $generated@@153)) $generated@@151)
 :pattern ( ($generated@@150 $generated@@153))
))))
(assert (forall (($generated@@154 T@U) ($generated@@155 T@U) ) (!  (=> (and (and (= (type $generated@@154) $generated@@142) (= (type $generated@@155) $generated@@142)) true) (= ($generated@@148 $generated@@154 $generated@@155)  (and (= ($generated@@149 $generated@@154) ($generated@@149 $generated@@155)) (= ($generated@@150 $generated@@154) ($generated@@150 $generated@@155)))))
 :pattern ( ($generated@@148 $generated@@154 $generated@@155))
)))
(assert  (and (forall (($generated@@158 T@U) ) (! (= (type ($generated@@156 $generated@@158)) $generated@@74)
 :pattern ( ($generated@@156 $generated@@158))
)) (= (type $generated@@157) $generated@@142)))
(assert (= ($generated@@156 $generated@@157) $generated@@63))
(assert (= (type $generated@@159) $generated@@142))
(assert (= ($generated@@156 $generated@@159) $generated@@65))
(assert (= (type $generated@@160) $generated@@142))
(assert (= ($generated@@156 $generated@@160) $generated@@66))
(assert (= (type $generated@@161) $generated@@142))
(assert (= ($generated@@156 $generated@@161) $generated@@67))
(assert (forall (($generated@@164 T@U) ) (! (= (type ($generated@@162 $generated@@164)) $generated@@70)
 :pattern ( ($generated@@162 $generated@@164))
)))
(assert (forall (($generated@@165 T@U) ($generated@@166 T@U) ) (!  (=> (and (and (= (type $generated@@165) ($generated@@82 $generated@@151 $generated@@2)) (= (type $generated@@166) $generated@@70)) ($generated@@138 $generated@@165 ($generated@@162 $generated@@166))) ($generated@@163 $generated@@165))
 :pattern ( ($generated@@138 $generated@@165 ($generated@@162 $generated@@166)))
)))
(assert  (and (and (and (and (and (and (and (forall (($generated@@173 T@T) ($generated@@174 T@T) ) (= ($generated@@1 ($generated@@169 $generated@@173 $generated@@174)) 16)) (forall (($generated@@175 T@T) ($generated@@176 T@T) ) (! (= ($generated@@170 ($generated@@169 $generated@@175 $generated@@176)) $generated@@175)
 :pattern ( ($generated@@169 $generated@@175 $generated@@176))
))) (forall (($generated@@177 T@T) ($generated@@178 T@T) ) (! (= ($generated@@171 ($generated@@169 $generated@@177 $generated@@178)) $generated@@178)
 :pattern ( ($generated@@169 $generated@@177 $generated@@178))
))) (forall (($generated@@179 T@U) ($generated@@180 T@U) ($generated@@181 T@U) ) (! (let (($generated@@182 ($generated@@171 (type $generated@@179))))
(= (type ($generated@@167 $generated@@179 $generated@@180 $generated@@181)) $generated@@182))
 :pattern ( ($generated@@167 $generated@@179 $generated@@180 $generated@@181))
))) (forall (($generated@@183 T@U) ($generated@@184 T@U) ($generated@@185 T@U) ($generated@@186 T@U) ) (! (let (($generated@@187 (type $generated@@186)))
(let (($generated@@188 (type $generated@@184)))
(= (type ($generated@@172 $generated@@183 $generated@@184 $generated@@185 $generated@@186)) ($generated@@169 $generated@@188 $generated@@187))))
 :pattern ( ($generated@@172 $generated@@183 $generated@@184 $generated@@185 $generated@@186))
))) (forall (($generated@@189 T@U) ($generated@@190 T@U) ($generated@@191 T@U) ($generated@@192 T@U) ) (! (let (($generated@@193 ($generated@@171 (type $generated@@189))))
 (=> (= (type $generated@@192) $generated@@193) (= ($generated@@167 ($generated@@172 $generated@@189 $generated@@190 $generated@@191 $generated@@192) $generated@@190 $generated@@191) $generated@@192)))
 :weight 0
))) (and (and (forall (($generated@@194 T@U) ($generated@@195 T@U) ($generated@@196 T@U) ($generated@@197 T@U) ($generated@@198 T@U) ($generated@@199 T@U) ) (!  (or (= $generated@@196 $generated@@198) (= ($generated@@167 ($generated@@172 $generated@@195 $generated@@196 $generated@@197 $generated@@194) $generated@@198 $generated@@199) ($generated@@167 $generated@@195 $generated@@198 $generated@@199)))
 :weight 0
)) (forall (($generated@@200 T@U) ($generated@@201 T@U) ($generated@@202 T@U) ($generated@@203 T@U) ($generated@@204 T@U) ($generated@@205 T@U) ) (!  (or (= $generated@@203 $generated@@205) (= ($generated@@167 ($generated@@172 $generated@@201 $generated@@202 $generated@@203 $generated@@200) $generated@@204 $generated@@205) ($generated@@167 $generated@@201 $generated@@204 $generated@@205)))
 :weight 0
))) (forall (($generated@@206 T@U) ($generated@@207 T@U) ($generated@@208 T@U) ($generated@@209 T@U) ($generated@@210 T@U) ($generated@@211 T@U) ) (!  (or true (= ($generated@@167 ($generated@@172 $generated@@207 $generated@@208 $generated@@209 $generated@@206) $generated@@210 $generated@@211) ($generated@@167 $generated@@207 $generated@@210 $generated@@211)))
 :weight 0
)))) (forall (($generated@@212 T@U) ($generated@@213 T@U) ($generated@@214 T@U) ($generated@@215 Bool) ) (! (= (type ($generated@@168 $generated@@212 $generated@@213 $generated@@214 $generated@@215)) ($generated@@169 $generated@@83 $generated@@4))
 :pattern ( ($generated@@168 $generated@@212 $generated@@213 $generated@@214 $generated@@215))
))))
(assert (forall (($generated@@216 T@U) ($generated@@217 T@U) ($generated@@218 T@U) ($generated@@219 Bool) ($generated@@220 T@U) ($generated@@221 T@U) ) (! (let (($generated@@222 ($generated@@73 (type $generated@@221))))
 (=> (and (and (and (and (= (type $generated@@216) $generated@@83) (= (type $generated@@217) ($generated@@82 $generated@@83 $generated@@84))) (= (type $generated@@218) ($generated@@72 $generated@@4))) (= (type $generated@@220) $generated@@83)) (= (type $generated@@221) ($generated@@72 $generated@@222))) (= ($generated@@0 ($generated@@167 ($generated@@168 $generated@@216 $generated@@217 $generated@@218 $generated@@219) $generated@@220 $generated@@221))  (=> (and (not (= $generated@@220 $generated@@216)) ($generated@@0 ($generated@@89 ($generated@@87 $generated@@217 $generated@@220) $generated@@218))) $generated@@219))))
 :pattern ( ($generated@@167 ($generated@@168 $generated@@216 $generated@@217 $generated@@218 $generated@@219) $generated@@220 $generated@@221))
)))
(assert (forall (($generated@@225 T@U) ($generated@@226 T@U) ) (! (= (type ($generated@@223 $generated@@225 $generated@@226)) $generated@@142)
 :pattern ( ($generated@@223 $generated@@225 $generated@@226))
)))
(assert (forall (($generated@@227 T@U) ($generated@@228 T@U) ($generated@@229 T@U) ($generated@@230 T@U) ) (!  (=> (and (and (and (= (type $generated@@227) $generated@@70) (= (type $generated@@228) $generated@@70)) (= (type $generated@@229) $generated@@151)) (= (type $generated@@230) $generated@@151)) (= ($generated@@138 ($generated@@223 $generated@@229 $generated@@230) ($generated@@141 $generated@@227 $generated@@228))  (and ($generated@@224 $generated@@229 $generated@@227) ($generated@@224 $generated@@230 $generated@@228))))
 :pattern ( ($generated@@138 ($generated@@223 $generated@@229 $generated@@230) ($generated@@141 $generated@@227 $generated@@228)))
)))
(assert (= (type $generated@@231) $generated@@70))
(assert ($generated@@138 $generated@@157 $generated@@231))
(assert ($generated@@138 $generated@@159 $generated@@231))
(assert ($generated@@138 $generated@@160 $generated@@231))
(assert ($generated@@138 $generated@@161 $generated@@231))
(assert (forall (($generated@@233 T@U) ) (!  (=> (and (= (type $generated@@233) ($generated@@82 $generated@@83 $generated@@84)) ($generated@@232 $generated@@233)) ($generated@@80 $generated@@157 $generated@@231 $generated@@233))
 :pattern ( ($generated@@80 $generated@@157 $generated@@231 $generated@@233))
)))
(assert (forall (($generated@@234 T@U) ) (!  (=> (and (= (type $generated@@234) ($generated@@82 $generated@@83 $generated@@84)) ($generated@@232 $generated@@234)) ($generated@@80 $generated@@159 $generated@@231 $generated@@234))
 :pattern ( ($generated@@80 $generated@@159 $generated@@231 $generated@@234))
)))
(assert (forall (($generated@@235 T@U) ) (!  (=> (and (= (type $generated@@235) ($generated@@82 $generated@@83 $generated@@84)) ($generated@@232 $generated@@235)) ($generated@@80 $generated@@160 $generated@@231 $generated@@235))
 :pattern ( ($generated@@80 $generated@@160 $generated@@231 $generated@@235))
)))
(assert (forall (($generated@@236 T@U) ) (!  (=> (and (= (type $generated@@236) ($generated@@82 $generated@@83 $generated@@84)) ($generated@@232 $generated@@236)) ($generated@@80 $generated@@161 $generated@@231 $generated@@236))
 :pattern ( ($generated@@80 $generated@@161 $generated@@231 $generated@@236))
)))
(assert (forall (($generated@@237 T@U) ($generated@@238 T@U) ) (!  (=> (and (= (type $generated@@237) $generated@@142) (= (type $generated@@238) $generated@@142)) (= ($generated@@148 $generated@@237 $generated@@238) (= $generated@@237 $generated@@238)))
 :pattern ( ($generated@@148 $generated@@237 $generated@@238))
)))
(assert (forall (($generated@@240 T@U) ($generated@@241 T@U) ) (!  (=> (and (= (type $generated@@240) $generated@@142) (= (type $generated@@241) $generated@@142)) (= ($generated@@239 $generated@@240 $generated@@241) (= $generated@@240 $generated@@241)))
 :pattern ( ($generated@@239 $generated@@240 $generated@@241))
)))
(assert (forall (($generated@@243 T@U) ) (! (= (type ($generated@@242 $generated@@243)) $generated@@70)
 :pattern ( ($generated@@242 $generated@@243))
)))
(assert (forall (($generated@@244 T@U) ($generated@@245 T@U) ) (!  (=> (and (= (type $generated@@244) ($generated@@82 $generated@@151 $generated@@4)) (= (type $generated@@245) $generated@@70)) (= ($generated@@138 $generated@@244 ($generated@@242 $generated@@245)) (forall (($generated@@246 T@U) ) (!  (=> (and (= (type $generated@@246) $generated@@151) ($generated@@0 ($generated@@87 $generated@@244 $generated@@246))) ($generated@@224 $generated@@246 $generated@@245))
 :pattern ( ($generated@@87 $generated@@244 $generated@@246))
))))
 :pattern ( ($generated@@138 $generated@@244 ($generated@@242 $generated@@245)))
)))
(assert (forall (($generated@@248 T@U) ) (! (= (type ($generated@@247 $generated@@248)) $generated@@70)
 :pattern ( ($generated@@247 $generated@@248))
)))
(assert (forall (($generated@@249 T@U) ($generated@@250 T@U) ) (!  (=> (and (= (type $generated@@249) ($generated@@82 $generated@@151 $generated@@4)) (= (type $generated@@250) $generated@@70)) (= ($generated@@138 $generated@@249 ($generated@@247 $generated@@250)) (forall (($generated@@251 T@U) ) (!  (=> (and (= (type $generated@@251) $generated@@151) ($generated@@0 ($generated@@87 $generated@@249 $generated@@251))) ($generated@@224 $generated@@251 $generated@@250))
 :pattern ( ($generated@@87 $generated@@249 $generated@@251))
))))
 :pattern ( ($generated@@138 $generated@@249 ($generated@@247 $generated@@250)))
)))
(assert (forall (($generated@@253 T@U) ) (! (let (($generated@@254 (type $generated@@253)))
(= (type ($generated@@252 $generated@@253)) $generated@@254))
 :pattern ( ($generated@@252 $generated@@253))
)))
(assert (forall (($generated@@255 T@U) ) (! (= ($generated@@252 $generated@@255) $generated@@255)
 :pattern ( ($generated@@252 $generated@@255))
)))
(assert (forall (($generated@@257 T@U) ($generated@@258 T@U) ) (!  (=> (and (and (= (type $generated@@257) $generated@@142) (= (type $generated@@258) $generated@@142)) (and ($generated@@256 $generated@@257) ($generated@@256 $generated@@258))) (= ($generated@@239 $generated@@257 $generated@@258) true))
 :pattern ( ($generated@@239 $generated@@257 $generated@@258) ($generated@@256 $generated@@257))
 :pattern ( ($generated@@239 $generated@@257 $generated@@258) ($generated@@256 $generated@@258))
)))
(assert (forall (($generated@@260 T@U) ($generated@@261 T@U) ) (!  (=> (and (and (= (type $generated@@260) $generated@@142) (= (type $generated@@261) $generated@@142)) (and ($generated@@259 $generated@@260) ($generated@@259 $generated@@261))) (= ($generated@@239 $generated@@260 $generated@@261) true))
 :pattern ( ($generated@@239 $generated@@260 $generated@@261) ($generated@@259 $generated@@260))
 :pattern ( ($generated@@239 $generated@@260 $generated@@261) ($generated@@259 $generated@@261))
)))
(assert (forall (($generated@@263 T@U) ($generated@@264 T@U) ) (!  (=> (and (and (= (type $generated@@263) $generated@@142) (= (type $generated@@264) $generated@@142)) (and ($generated@@262 $generated@@263) ($generated@@262 $generated@@264))) (= ($generated@@239 $generated@@263 $generated@@264) true))
 :pattern ( ($generated@@239 $generated@@263 $generated@@264) ($generated@@262 $generated@@263))
 :pattern ( ($generated@@239 $generated@@263 $generated@@264) ($generated@@262 $generated@@264))
)))
(assert (forall (($generated@@266 T@U) ($generated@@267 T@U) ) (!  (=> (and (and (= (type $generated@@266) $generated@@142) (= (type $generated@@267) $generated@@142)) (and ($generated@@265 $generated@@266) ($generated@@265 $generated@@267))) (= ($generated@@239 $generated@@266 $generated@@267) true))
 :pattern ( ($generated@@239 $generated@@266 $generated@@267) ($generated@@265 $generated@@266))
 :pattern ( ($generated@@239 $generated@@266 $generated@@267) ($generated@@265 $generated@@267))
)))
(assert (forall (($generated@@269 T@U) ($generated@@270 T@U) ($generated@@271 T@U) ($generated@@272 T@U) ($generated@@273 T@U) ) (!  (=> (and (and (and (and (and (= (type $generated@@269) $generated@@70) (= (type $generated@@270) $generated@@70)) (= (type $generated@@271) $generated@@151)) (= (type $generated@@272) $generated@@151)) (= (type $generated@@273) ($generated@@82 $generated@@83 $generated@@84))) ($generated@@232 $generated@@273)) (= ($generated@@80 ($generated@@223 $generated@@271 $generated@@272) ($generated@@141 $generated@@269 $generated@@270) $generated@@273)  (and ($generated@@268 $generated@@271 $generated@@269 $generated@@273) ($generated@@268 $generated@@272 $generated@@270 $generated@@273))))
 :pattern ( ($generated@@80 ($generated@@223 $generated@@271 $generated@@272) ($generated@@141 $generated@@269 $generated@@270) $generated@@273))
)))
(assert (forall (($generated@@274 T@U) ) (!  (=> (= (type $generated@@274) $generated@@142) (= ($generated@@140 $generated@@274) (= ($generated@@156 $generated@@274) $generated@@61)))
 :pattern ( ($generated@@140 $generated@@274))
)))
(assert (forall (($generated@@275 T@U) ) (!  (=> (= (type $generated@@275) $generated@@142) (= ($generated@@256 $generated@@275) (= ($generated@@156 $generated@@275) $generated@@63)))
 :pattern ( ($generated@@256 $generated@@275))
)))
(assert (forall (($generated@@276 T@U) ) (!  (=> (= (type $generated@@276) $generated@@142) (= ($generated@@259 $generated@@276) (= ($generated@@156 $generated@@276) $generated@@65)))
 :pattern ( ($generated@@259 $generated@@276))
)))
(assert (forall (($generated@@277 T@U) ) (!  (=> (= (type $generated@@277) $generated@@142) (= ($generated@@262 $generated@@277) (= ($generated@@156 $generated@@277) $generated@@66)))
 :pattern ( ($generated@@262 $generated@@277))
)))
(assert (forall (($generated@@278 T@U) ) (!  (=> (= (type $generated@@278) $generated@@142) (= ($generated@@265 $generated@@278) (= ($generated@@156 $generated@@278) $generated@@67)))
 :pattern ( ($generated@@265 $generated@@278))
)))
(assert (forall (($generated@@279 T@U) ) (!  (=> (and (= (type $generated@@279) $generated@@142) ($generated@@140 $generated@@279)) (exists (($generated@@280 T@U) ($generated@@281 T@U) ) (!  (and (and (= (type $generated@@280) $generated@@151) (= (type $generated@@281) $generated@@151)) (= $generated@@279 ($generated@@223 $generated@@280 $generated@@281)))
 :no-pattern (type $generated@@280)
 :no-pattern (type $generated@@281)
 :no-pattern ($generated $generated@@280)
 :no-pattern ($generated@@0 $generated@@280)
 :no-pattern ($generated $generated@@281)
 :no-pattern ($generated@@0 $generated@@281)
)))
 :pattern ( ($generated@@140 $generated@@279))
)))
(assert  (and (and (forall (($generated@@286 T@T) ) (= ($generated@@1 ($generated@@284 $generated@@286)) 17)) (forall (($generated@@287 T@T) ) (! (= ($generated@@285 ($generated@@284 $generated@@287)) $generated@@287)
 :pattern ( ($generated@@284 $generated@@287))
))) (forall (($generated@@288 T@T) ) (! (= (type ($generated@@282 $generated@@288)) ($generated@@284 $generated@@288))
 :pattern ( ($generated@@282 $generated@@288))
))))
(assert (forall (($generated@@289 T@T) ) (! (= ($generated@@283 ($generated@@282 $generated@@289)) 0)
 :pattern ( ($generated@@282 $generated@@289))
)))
(assert (forall (($generated@@290 T@U) ) (!  (=> (and (= (type $generated@@290) $generated@@142) ($generated@@256 $generated@@290)) (= $generated@@290 $generated@@157))
 :pattern ( ($generated@@256 $generated@@290))
)))
(assert (forall (($generated@@291 T@U) ) (!  (=> (and (= (type $generated@@291) $generated@@142) ($generated@@259 $generated@@291)) (= $generated@@291 $generated@@159))
 :pattern ( ($generated@@259 $generated@@291))
)))
(assert (forall (($generated@@292 T@U) ) (!  (=> (and (= (type $generated@@292) $generated@@142) ($generated@@262 $generated@@292)) (= $generated@@292 $generated@@160))
 :pattern ( ($generated@@262 $generated@@292))
)))
(assert (forall (($generated@@293 T@U) ) (!  (=> (and (= (type $generated@@293) $generated@@142) ($generated@@265 $generated@@293)) (= $generated@@293 $generated@@161))
 :pattern ( ($generated@@265 $generated@@293))
)))
(assert (forall (($generated@@295 T@U) ) (! (= (type ($generated@@294 $generated@@295)) $generated@@151)
 :pattern ( ($generated@@294 $generated@@295))
)))
(assert (forall (($generated@@296 T@U) ($generated@@297 T@U) ($generated@@298 T@U) ) (!  (=> (and (= (type $generated@@297) $generated@@70) (= (type $generated@@298) ($generated@@82 $generated@@83 $generated@@84))) (= ($generated@@268 ($generated@@294 $generated@@296) $generated@@297 $generated@@298) ($generated@@80 $generated@@296 $generated@@297 $generated@@298)))
 :pattern ( ($generated@@268 ($generated@@294 $generated@@296) $generated@@297 $generated@@298))
)))
(assert (forall (($generated@@301 T@T) ) (! (= (type ($generated@@300 $generated@@301)) ($generated@@82 $generated@@301 $generated@@2))
 :pattern ( ($generated@@300 $generated@@301))
)))
(assert (forall (($generated@@302 T@U) ) (! (let (($generated@@303 ($generated@@85 (type $generated@@302))))
 (=> (= (type $generated@@302) ($generated@@82 $generated@@303 $generated@@2)) (and (= (= ($generated@@299 $generated@@302) 0) (= $generated@@302 ($generated@@300 $generated@@303))) (=> (not (= ($generated@@299 $generated@@302) 0)) (exists (($generated@@304 T@U) ) (!  (and (= (type $generated@@304) $generated@@303) (< 0 ($generated ($generated@@87 $generated@@302 $generated@@304))))
 :no-pattern (type $generated@@304)
 :no-pattern ($generated $generated@@304)
 :no-pattern ($generated@@0 $generated@@304)
))))))
 :pattern ( ($generated@@299 $generated@@302))
)))
(assert  (and (and (and (and (forall (($generated@@310 T@T) ($generated@@311 T@T) ) (= ($generated@@1 ($generated@@307 $generated@@310 $generated@@311)) 18)) (forall (($generated@@312 T@T) ($generated@@313 T@T) ) (! (= ($generated@@308 ($generated@@307 $generated@@312 $generated@@313)) $generated@@312)
 :pattern ( ($generated@@307 $generated@@312 $generated@@313))
))) (forall (($generated@@314 T@T) ($generated@@315 T@T) ) (! (= ($generated@@309 ($generated@@307 $generated@@314 $generated@@315)) $generated@@315)
 :pattern ( ($generated@@307 $generated@@314 $generated@@315))
))) (forall (($generated@@316 T@U) ) (! (let (($generated@@317 ($generated@@308 (type $generated@@316))))
(= (type ($generated@@305 $generated@@316)) ($generated@@82 $generated@@317 $generated@@4)))
 :pattern ( ($generated@@305 $generated@@316))
))) (forall (($generated@@318 T@T) ($generated@@319 T@T) ) (! (= (type ($generated@@306 $generated@@318 $generated@@319)) ($generated@@307 $generated@@318 $generated@@319))
 :pattern ( ($generated@@306 $generated@@318 $generated@@319))
))))
(assert (forall (($generated@@320 T@U) ($generated@@321 T@T) ) (! (let (($generated@@322 (type $generated@@320)))
 (not ($generated@@0 ($generated@@87 ($generated@@305 ($generated@@306 $generated@@322 $generated@@321)) $generated@@320))))
 :pattern ( (let (($generated@@322 (type $generated@@320)))
($generated@@87 ($generated@@305 ($generated@@306 $generated@@322 $generated@@321)) $generated@@320)))
)))
(assert  (and (and (and (and (forall (($generated@@328 T@T) ($generated@@329 T@T) ) (= ($generated@@1 ($generated@@325 $generated@@328 $generated@@329)) 19)) (forall (($generated@@330 T@T) ($generated@@331 T@T) ) (! (= ($generated@@326 ($generated@@325 $generated@@330 $generated@@331)) $generated@@330)
 :pattern ( ($generated@@325 $generated@@330 $generated@@331))
))) (forall (($generated@@332 T@T) ($generated@@333 T@T) ) (! (= ($generated@@327 ($generated@@325 $generated@@332 $generated@@333)) $generated@@333)
 :pattern ( ($generated@@325 $generated@@332 $generated@@333))
))) (forall (($generated@@334 T@U) ) (! (let (($generated@@335 ($generated@@326 (type $generated@@334))))
(= (type ($generated@@323 $generated@@334)) ($generated@@82 $generated@@335 $generated@@4)))
 :pattern ( ($generated@@323 $generated@@334))
))) (forall (($generated@@336 T@T) ($generated@@337 T@T) ) (! (= (type ($generated@@324 $generated@@336 $generated@@337)) ($generated@@325 $generated@@336 $generated@@337))
 :pattern ( ($generated@@324 $generated@@336 $generated@@337))
))))
(assert (forall (($generated@@338 T@U) ($generated@@339 T@T) ) (! (let (($generated@@340 (type $generated@@338)))
 (not ($generated@@0 ($generated@@87 ($generated@@323 ($generated@@324 $generated@@340 $generated@@339)) $generated@@338))))
 :pattern ( (let (($generated@@340 (type $generated@@338)))
($generated@@87 ($generated@@323 ($generated@@324 $generated@@340 $generated@@339)) $generated@@338)))
)))
(assert (forall (($generated@@341 T@U) ) (! (let (($generated@@342 ($generated@@85 (type $generated@@341))))
 (=> (= (type $generated@@341) ($generated@@82 $generated@@342 $generated@@2)) (= ($generated@@163 $generated@@341) (forall (($generated@@343 T@U) ) (!  (=> (= (type $generated@@343) $generated@@342) (and (<= 0 ($generated ($generated@@87 $generated@@341 $generated@@343))) (<= ($generated ($generated@@87 $generated@@341 $generated@@343)) ($generated@@299 $generated@@341))))
 :pattern ( ($generated@@87 $generated@@341 $generated@@343))
)))))
 :pattern ( ($generated@@163 $generated@@341))
)))
(assert (forall (($generated@@345 T@T) ($generated@@346 T@U) ) (! (= (type ($generated@@344 $generated@@345 $generated@@346)) $generated@@345)
 :pattern ( ($generated@@344 $generated@@345 $generated@@346))
)))
(assert (forall (($generated@@347 T@U) ) (!  (=> (and (= (type $generated@@347) $generated@@151) ($generated@@224 $generated@@347 $generated@@231)) (and (= ($generated@@294 ($generated@@344 $generated@@142 $generated@@347)) $generated@@347) ($generated@@138 ($generated@@344 $generated@@142 $generated@@347) $generated@@231)))
 :pattern ( ($generated@@224 $generated@@347 $generated@@231))
)))
(assert (forall (($generated@@348 T@U) ) (! (let (($generated@@349 ($generated@@309 (type $generated@@348))))
(let (($generated@@350 ($generated@@308 (type $generated@@348))))
 (=> (= (type $generated@@348) ($generated@@307 $generated@@350 $generated@@349)) (or (= $generated@@348 ($generated@@306 $generated@@350 $generated@@349)) (exists (($generated@@351 T@U) ) (!  (and (= (type $generated@@351) $generated@@350) ($generated@@0 ($generated@@87 ($generated@@305 $generated@@348) $generated@@351)))
 :no-pattern (type $generated@@351)
 :no-pattern ($generated $generated@@351)
 :no-pattern ($generated@@0 $generated@@351)
))))))
 :pattern ( ($generated@@305 $generated@@348))
)))
(assert (forall (($generated@@353 T@U) ) (! (let (($generated@@354 ($generated@@309 (type $generated@@353))))
(= (type ($generated@@352 $generated@@353)) ($generated@@82 $generated@@354 $generated@@4)))
 :pattern ( ($generated@@352 $generated@@353))
)))
(assert (forall (($generated@@355 T@U) ) (! (let (($generated@@356 ($generated@@309 (type $generated@@355))))
(let (($generated@@357 ($generated@@308 (type $generated@@355))))
 (=> (= (type $generated@@355) ($generated@@307 $generated@@357 $generated@@356)) (or (= $generated@@355 ($generated@@306 $generated@@357 $generated@@356)) (exists (($generated@@358 T@U) ) (!  (and (= (type $generated@@358) $generated@@356) ($generated@@0 ($generated@@87 ($generated@@352 $generated@@355) $generated@@358)))
 :no-pattern (type $generated@@358)
 :no-pattern ($generated $generated@@358)
 :no-pattern ($generated@@0 $generated@@358)
))))))
 :pattern ( ($generated@@352 $generated@@355))
)))
(assert (forall (($generated@@359 T@U) ) (! (let (($generated@@360 ($generated@@327 (type $generated@@359))))
(let (($generated@@361 ($generated@@326 (type $generated@@359))))
 (=> (= (type $generated@@359) ($generated@@325 $generated@@361 $generated@@360)) (or (= $generated@@359 ($generated@@324 $generated@@361 $generated@@360)) (exists (($generated@@362 T@U) ) (!  (and (= (type $generated@@362) $generated@@361) ($generated@@0 ($generated@@87 ($generated@@323 $generated@@359) $generated@@362)))
 :no-pattern (type $generated@@362)
 :no-pattern ($generated $generated@@362)
 :no-pattern ($generated@@0 $generated@@362)
))))))
 :pattern ( ($generated@@323 $generated@@359))
)))
(assert (forall (($generated@@364 T@U) ) (! (let (($generated@@365 ($generated@@327 (type $generated@@364))))
(= (type ($generated@@363 $generated@@364)) ($generated@@82 $generated@@365 $generated@@4)))
 :pattern ( ($generated@@363 $generated@@364))
)))
(assert (forall (($generated@@366 T@U) ) (! (let (($generated@@367 ($generated@@327 (type $generated@@366))))
(let (($generated@@368 ($generated@@326 (type $generated@@366))))
 (=> (= (type $generated@@366) ($generated@@325 $generated@@368 $generated@@367)) (or (= $generated@@366 ($generated@@324 $generated@@368 $generated@@367)) (exists (($generated@@369 T@U) ) (!  (and (= (type $generated@@369) $generated@@367) ($generated@@0 ($generated@@87 ($generated@@363 $generated@@366) $generated@@369)))
 :no-pattern (type $generated@@369)
 :no-pattern ($generated $generated@@369)
 :no-pattern ($generated@@0 $generated@@369)
))))))
 :pattern ( ($generated@@363 $generated@@366))
)))
(assert (forall (($generated@@370 T@U) ($generated@@371 T@U) ) (!  (=> (and (= (type $generated@@370) ($generated@@82 $generated@@151 $generated@@2)) (= (type $generated@@371) $generated@@70)) (= ($generated@@138 $generated@@370 ($generated@@162 $generated@@371)) (forall (($generated@@372 T@U) ) (!  (=> (and (= (type $generated@@372) $generated@@151) (< 0 ($generated ($generated@@87 $generated@@370 $generated@@372)))) ($generated@@224 $generated@@372 $generated@@371))
 :pattern ( ($generated@@87 $generated@@370 $generated@@372))
))))
 :pattern ( ($generated@@138 $generated@@370 ($generated@@162 $generated@@371)))
)))
(assert (forall (($generated@@373 T@U) ($generated@@374 T@U) ($generated@@375 T@U) ) (!  (=> (and (and (= (type $generated@@373) ($generated@@82 $generated@@151 $generated@@4)) (= (type $generated@@374) $generated@@70)) (= (type $generated@@375) ($generated@@82 $generated@@83 $generated@@84))) (= ($generated@@80 $generated@@373 ($generated@@242 $generated@@374) $generated@@375) (forall (($generated@@376 T@U) ) (!  (=> (and (= (type $generated@@376) $generated@@151) ($generated@@0 ($generated@@87 $generated@@373 $generated@@376))) ($generated@@268 $generated@@376 $generated@@374 $generated@@375))
 :pattern ( ($generated@@87 $generated@@373 $generated@@376))
))))
 :pattern ( ($generated@@80 $generated@@373 ($generated@@242 $generated@@374) $generated@@375))
)))
(assert (forall (($generated@@377 T@U) ($generated@@378 T@U) ($generated@@379 T@U) ) (!  (=> (and (and (= (type $generated@@377) ($generated@@82 $generated@@151 $generated@@4)) (= (type $generated@@378) $generated@@70)) (= (type $generated@@379) ($generated@@82 $generated@@83 $generated@@84))) (= ($generated@@80 $generated@@377 ($generated@@247 $generated@@378) $generated@@379) (forall (($generated@@380 T@U) ) (!  (=> (and (= (type $generated@@380) $generated@@151) ($generated@@0 ($generated@@87 $generated@@377 $generated@@380))) ($generated@@268 $generated@@380 $generated@@378 $generated@@379))
 :pattern ( ($generated@@87 $generated@@377 $generated@@380))
))))
 :pattern ( ($generated@@80 $generated@@377 ($generated@@247 $generated@@378) $generated@@379))
)))
(assert (forall (($generated@@381 T@U) ) (! (let (($generated@@382 (type $generated@@381)))
(= ($generated ($generated@@87 ($generated@@300 $generated@@382) $generated@@381)) 0))
 :pattern ( (let (($generated@@382 (type $generated@@381)))
($generated@@87 ($generated@@300 $generated@@382) $generated@@381)))
)))
(assert  (and (forall (($generated@@385 T@U) ) (! (= (type ($generated@@383 $generated@@385)) ($generated@@82 $generated@@151 $generated@@4))
 :pattern ( ($generated@@383 $generated@@385))
)) (forall (($generated@@386 T@U) ) (! (let (($generated@@387 ($generated@@309 (type $generated@@386))))
(let (($generated@@388 ($generated@@308 (type $generated@@386))))
(= (type ($generated@@384 $generated@@386)) ($generated@@82 $generated@@388 $generated@@387))))
 :pattern ( ($generated@@384 $generated@@386))
))))
(assert (forall (($generated@@389 T@U) ($generated@@390 T@U) ) (!  (=> (and (= (type $generated@@389) ($generated@@307 $generated@@151 $generated@@151)) (= (type $generated@@390) $generated@@151)) (= ($generated@@0 ($generated@@87 ($generated@@383 $generated@@389) $generated@@390))  (and ($generated@@0 ($generated@@87 ($generated@@305 $generated@@389) ($generated@@149 ($generated@@344 $generated@@142 $generated@@390)))) (= ($generated@@87 ($generated@@384 $generated@@389) ($generated@@149 ($generated@@344 $generated@@142 $generated@@390))) ($generated@@150 ($generated@@344 $generated@@142 $generated@@390))))))
 :pattern ( ($generated@@87 ($generated@@383 $generated@@389) $generated@@390))
)))
(assert  (and (forall (($generated@@393 T@U) ) (! (= (type ($generated@@391 $generated@@393)) ($generated@@82 $generated@@151 $generated@@4))
 :pattern ( ($generated@@391 $generated@@393))
)) (forall (($generated@@394 T@U) ) (! (let (($generated@@395 ($generated@@327 (type $generated@@394))))
(let (($generated@@396 ($generated@@326 (type $generated@@394))))
(= (type ($generated@@392 $generated@@394)) ($generated@@82 $generated@@396 $generated@@395))))
 :pattern ( ($generated@@392 $generated@@394))
))))
(assert (forall (($generated@@397 T@U) ($generated@@398 T@U) ) (!  (=> (and (= (type $generated@@397) ($generated@@325 $generated@@151 $generated@@151)) (= (type $generated@@398) $generated@@151)) (= ($generated@@0 ($generated@@87 ($generated@@391 $generated@@397) $generated@@398))  (and ($generated@@0 ($generated@@87 ($generated@@323 $generated@@397) ($generated@@149 ($generated@@344 $generated@@142 $generated@@398)))) (= ($generated@@87 ($generated@@392 $generated@@397) ($generated@@149 ($generated@@344 $generated@@142 $generated@@398))) ($generated@@150 ($generated@@344 $generated@@142 $generated@@398))))))
 :pattern ( ($generated@@87 ($generated@@391 $generated@@397) $generated@@398))
)))
(assert (forall (($generated@@399 T@U) ($generated@@400 T@U) ) (! (let (($generated@@401 (type $generated@@400)))
(let (($generated@@402 ($generated@@308 (type $generated@@399))))
 (=> (= (type $generated@@399) ($generated@@307 $generated@@402 $generated@@401)) (= ($generated@@0 ($generated@@87 ($generated@@352 $generated@@399) $generated@@400)) (exists (($generated@@403 T@U) ) (!  (and (= (type $generated@@403) $generated@@402) (and ($generated@@0 ($generated@@87 ($generated@@305 $generated@@399) $generated@@403)) (= $generated@@400 ($generated@@87 ($generated@@384 $generated@@399) $generated@@403))))
 :pattern ( ($generated@@87 ($generated@@305 $generated@@399) $generated@@403))
 :pattern ( ($generated@@87 ($generated@@384 $generated@@399) $generated@@403))
))))))
 :pattern ( ($generated@@87 ($generated@@352 $generated@@399) $generated@@400))
)))
(assert (forall (($generated@@404 T@U) ($generated@@405 T@U) ) (! (let (($generated@@406 (type $generated@@405)))
(let (($generated@@407 ($generated@@326 (type $generated@@404))))
 (=> (= (type $generated@@404) ($generated@@325 $generated@@407 $generated@@406)) (= ($generated@@0 ($generated@@87 ($generated@@363 $generated@@404) $generated@@405)) (exists (($generated@@408 T@U) ) (!  (and (= (type $generated@@408) $generated@@407) (and ($generated@@0 ($generated@@87 ($generated@@323 $generated@@404) $generated@@408)) (= $generated@@405 ($generated@@87 ($generated@@392 $generated@@404) $generated@@408))))
 :pattern ( ($generated@@87 ($generated@@323 $generated@@404) $generated@@408))
 :pattern ( ($generated@@87 ($generated@@392 $generated@@404) $generated@@408))
))))))
 :pattern ( ($generated@@87 ($generated@@363 $generated@@404) $generated@@405))
)))
(assert (forall (($generated@@410 T@U) ($generated@@411 T@U) ) (! (= (type ($generated@@409 $generated@@410 $generated@@411)) $generated@@70)
 :pattern ( ($generated@@409 $generated@@410 $generated@@411))
)))
(assert (forall (($generated@@412 T@U) ($generated@@413 T@U) ($generated@@414 T@U) ($generated@@415 T@U) ) (!  (=> (and (and (and (= (type $generated@@412) ($generated@@307 $generated@@151 $generated@@151)) (= (type $generated@@413) $generated@@70)) (= (type $generated@@414) $generated@@70)) (= (type $generated@@415) ($generated@@82 $generated@@83 $generated@@84))) (= ($generated@@80 $generated@@412 ($generated@@409 $generated@@413 $generated@@414) $generated@@415) (forall (($generated@@416 T@U) ) (!  (=> (and (= (type $generated@@416) $generated@@151) ($generated@@0 ($generated@@87 ($generated@@305 $generated@@412) $generated@@416))) (and ($generated@@268 ($generated@@87 ($generated@@384 $generated@@412) $generated@@416) $generated@@414 $generated@@415) ($generated@@268 $generated@@416 $generated@@413 $generated@@415)))
 :pattern ( ($generated@@87 ($generated@@384 $generated@@412) $generated@@416))
 :pattern ( ($generated@@87 ($generated@@305 $generated@@412) $generated@@416))
))))
 :pattern ( ($generated@@80 $generated@@412 ($generated@@409 $generated@@413 $generated@@414) $generated@@415))
)))
(assert (forall (($generated@@418 T@U) ($generated@@419 T@U) ) (! (= (type ($generated@@417 $generated@@418 $generated@@419)) $generated@@70)
 :pattern ( ($generated@@417 $generated@@418 $generated@@419))
)))
(assert (forall (($generated@@420 T@U) ($generated@@421 T@U) ($generated@@422 T@U) ($generated@@423 T@U) ) (!  (=> (and (and (and (= (type $generated@@420) ($generated@@325 $generated@@151 $generated@@151)) (= (type $generated@@421) $generated@@70)) (= (type $generated@@422) $generated@@70)) (= (type $generated@@423) ($generated@@82 $generated@@83 $generated@@84))) (= ($generated@@80 $generated@@420 ($generated@@417 $generated@@421 $generated@@422) $generated@@423) (forall (($generated@@424 T@U) ) (!  (=> (and (= (type $generated@@424) $generated@@151) ($generated@@0 ($generated@@87 ($generated@@323 $generated@@420) $generated@@424))) (and ($generated@@268 ($generated@@87 ($generated@@392 $generated@@420) $generated@@424) $generated@@422 $generated@@423) ($generated@@268 $generated@@424 $generated@@421 $generated@@423)))
 :pattern ( ($generated@@87 ($generated@@392 $generated@@420) $generated@@424))
 :pattern ( ($generated@@87 ($generated@@323 $generated@@420) $generated@@424))
))))
 :pattern ( ($generated@@80 $generated@@420 ($generated@@417 $generated@@421 $generated@@422) $generated@@423))
)))
(assert (forall (($generated@@426 T@T) ) (! (= (type ($generated@@425 $generated@@426)) ($generated@@82 $generated@@426 $generated@@4))
 :pattern ( ($generated@@425 $generated@@426))
)))
(assert (forall (($generated@@427 T@U) ) (! (let (($generated@@428 ($generated@@327 (type $generated@@427))))
(let (($generated@@429 ($generated@@326 (type $generated@@427))))
 (=> (= (type $generated@@427) ($generated@@325 $generated@@429 $generated@@428)) (= (= $generated@@427 ($generated@@324 $generated@@429 $generated@@428)) (= ($generated@@323 $generated@@427) ($generated@@425 $generated@@429))))))
 :pattern ( ($generated@@323 $generated@@427))
)))
(assert (forall (($generated@@430 T@U) ) (! (let (($generated@@431 ($generated@@327 (type $generated@@430))))
(let (($generated@@432 ($generated@@326 (type $generated@@430))))
 (=> (= (type $generated@@430) ($generated@@325 $generated@@432 $generated@@431)) (= (= $generated@@430 ($generated@@324 $generated@@432 $generated@@431)) (= ($generated@@363 $generated@@430) ($generated@@425 $generated@@431))))))
 :pattern ( ($generated@@363 $generated@@430))
)))
(assert (forall (($generated@@433 T@U) ) (! (let (($generated@@434 ($generated@@327 (type $generated@@433))))
(let (($generated@@435 ($generated@@326 (type $generated@@433))))
 (=> (= (type $generated@@433) ($generated@@325 $generated@@435 $generated@@434)) (= (= $generated@@433 ($generated@@324 $generated@@435 $generated@@434)) (= ($generated@@391 $generated@@433) ($generated@@425 $generated@@151))))))
 :pattern ( ($generated@@391 $generated@@433))
)))
(assert (forall (($generated@@436 T@U) ) (! (let (($generated@@437 ($generated@@309 (type $generated@@436))))
(let (($generated@@438 ($generated@@308 (type $generated@@436))))
 (=> (= (type $generated@@436) ($generated@@307 $generated@@438 $generated@@437)) (or (= $generated@@436 ($generated@@306 $generated@@438 $generated@@437)) (exists (($generated@@439 T@U) ($generated@@440 T@U) ) (!  (and (and (= (type $generated@@439) $generated@@151) (= (type $generated@@440) $generated@@151)) ($generated@@0 ($generated@@87 ($generated@@383 $generated@@436) ($generated@@294 ($generated@@223 $generated@@439 $generated@@440)))))
 :no-pattern (type $generated@@439)
 :no-pattern (type $generated@@440)
 :no-pattern ($generated $generated@@439)
 :no-pattern ($generated@@0 $generated@@439)
 :no-pattern ($generated $generated@@440)
 :no-pattern ($generated@@0 $generated@@440)
))))))
 :pattern ( ($generated@@383 $generated@@436))
)))
(assert (forall (($generated@@441 T@U) ) (! (let (($generated@@442 ($generated@@327 (type $generated@@441))))
(let (($generated@@443 ($generated@@326 (type $generated@@441))))
 (=> (= (type $generated@@441) ($generated@@325 $generated@@443 $generated@@442)) (or (= $generated@@441 ($generated@@324 $generated@@443 $generated@@442)) (exists (($generated@@444 T@U) ($generated@@445 T@U) ) (!  (and (and (= (type $generated@@444) $generated@@151) (= (type $generated@@445) $generated@@151)) ($generated@@0 ($generated@@87 ($generated@@391 $generated@@441) ($generated@@294 ($generated@@223 $generated@@444 $generated@@445)))))
 :no-pattern (type $generated@@444)
 :no-pattern (type $generated@@445)
 :no-pattern ($generated $generated@@444)
 :no-pattern ($generated@@0 $generated@@444)
 :no-pattern ($generated $generated@@445)
 :no-pattern ($generated@@0 $generated@@445)
))))))
 :pattern ( ($generated@@391 $generated@@441))
)))
(assert (forall (($generated@@446 T@U) ) (!  (=> (and (= (type $generated@@446) $generated@@151) ($generated@@224 $generated@@446 $generated@@46)) (and (= ($generated@@294 ($generated@@344 $generated@@2 $generated@@446)) $generated@@446) ($generated@@138 ($generated@@344 $generated@@2 $generated@@446) $generated@@46)))
 :pattern ( ($generated@@224 $generated@@446 $generated@@46))
)))
(assert (forall (($generated@@447 T@U) ) (!  (=> (and (= (type $generated@@447) $generated@@151) ($generated@@224 $generated@@447 $generated@@47)) (and (= ($generated@@294 ($generated@@344 $generated@@3 $generated@@447)) $generated@@447) ($generated@@138 ($generated@@344 $generated@@3 $generated@@447) $generated@@47)))
 :pattern ( ($generated@@224 $generated@@447 $generated@@47))
)))
(assert (forall (($generated@@448 T@U) ) (!  (=> (and (= (type $generated@@448) $generated@@151) ($generated@@224 $generated@@448 $generated@@44)) (and (= ($generated@@294 ($generated@@344 $generated@@4 $generated@@448)) $generated@@448) ($generated@@138 ($generated@@344 $generated@@4 $generated@@448) $generated@@44)))
 :pattern ( ($generated@@224 $generated@@448 $generated@@44))
)))
(assert (= ($generated@@1 $generated@@449) 20))
(assert (forall (($generated@@450 T@U) ) (!  (=> (and (= (type $generated@@450) $generated@@151) ($generated@@224 $generated@@450 $generated@@45)) (and (= ($generated@@294 ($generated@@344 $generated@@449 $generated@@450)) $generated@@450) ($generated@@138 ($generated@@344 $generated@@449 $generated@@450) $generated@@45)))
 :pattern ( ($generated@@224 $generated@@450 $generated@@45))
)))
(assert (forall (($generated@@451 T@U) ($generated@@452 T@U) ) (!  (=> (= (type $generated@@452) $generated@@70) (= ($generated@@224 ($generated@@294 $generated@@451) $generated@@452) ($generated@@138 $generated@@451 $generated@@452)))
 :pattern ( ($generated@@224 ($generated@@294 $generated@@451) $generated@@452))
)))
(assert (forall (($generated@@453 T@U) ) (! (let (($generated@@454 ($generated@@85 (type $generated@@453))))
 (=> (= (type $generated@@453) ($generated@@82 $generated@@454 $generated@@2)) (<= 0 ($generated@@299 $generated@@453))))
 :pattern ( ($generated@@299 $generated@@453))
)))
(assert (forall (($generated@@455 T@U) ) (! (let (($generated@@456 ($generated@@285 (type $generated@@455))))
 (=> (= (type $generated@@455) ($generated@@284 $generated@@456)) (<= 0 ($generated@@283 $generated@@455))))
 :pattern ( ($generated@@283 $generated@@455))
)))
(assert (forall (($generated@@458 T@U) ) (! (= (type ($generated@@457 $generated@@458)) $generated@@70)
 :pattern ( ($generated@@457 $generated@@458))
)))
(assert (forall (($generated@@459 T@U) ($generated@@460 T@U) ) (!  (=> (and (= (type $generated@@459) $generated@@70) (= (type $generated@@460) $generated@@70)) (= ($generated@@457 ($generated@@409 $generated@@459 $generated@@460)) $generated@@459))
 :pattern ( ($generated@@409 $generated@@459 $generated@@460))
)))
(assert (forall (($generated@@462 T@U) ) (! (= (type ($generated@@461 $generated@@462)) $generated@@70)
 :pattern ( ($generated@@461 $generated@@462))
)))
(assert (forall (($generated@@463 T@U) ($generated@@464 T@U) ) (!  (=> (and (= (type $generated@@463) $generated@@70) (= (type $generated@@464) $generated@@70)) (= ($generated@@461 ($generated@@409 $generated@@463 $generated@@464)) $generated@@464))
 :pattern ( ($generated@@409 $generated@@463 $generated@@464))
)))
(assert (forall (($generated@@465 T@U) ($generated@@466 T@U) ) (!  (=> (and (= (type $generated@@465) $generated@@70) (= (type $generated@@466) $generated@@70)) (= ($generated@@78 ($generated@@409 $generated@@465 $generated@@466)) $generated@@58))
 :pattern ( ($generated@@409 $generated@@465 $generated@@466))
)))
(assert (forall (($generated@@468 T@U) ) (! (= (type ($generated@@467 $generated@@468)) $generated@@70)
 :pattern ( ($generated@@467 $generated@@468))
)))
(assert (forall (($generated@@469 T@U) ($generated@@470 T@U) ) (!  (=> (and (= (type $generated@@469) $generated@@70) (= (type $generated@@470) $generated@@70)) (= ($generated@@467 ($generated@@417 $generated@@469 $generated@@470)) $generated@@469))
 :pattern ( ($generated@@417 $generated@@469 $generated@@470))
)))
(assert (forall (($generated@@472 T@U) ) (! (= (type ($generated@@471 $generated@@472)) $generated@@70)
 :pattern ( ($generated@@471 $generated@@472))
)))
(assert (forall (($generated@@473 T@U) ($generated@@474 T@U) ) (!  (=> (and (= (type $generated@@473) $generated@@70) (= (type $generated@@474) $generated@@70)) (= ($generated@@471 ($generated@@417 $generated@@473 $generated@@474)) $generated@@474))
 :pattern ( ($generated@@417 $generated@@473 $generated@@474))
)))
(assert (forall (($generated@@475 T@U) ($generated@@476 T@U) ) (!  (=> (and (= (type $generated@@475) $generated@@70) (= (type $generated@@476) $generated@@70)) (= ($generated@@78 ($generated@@417 $generated@@475 $generated@@476)) $generated@@59))
 :pattern ( ($generated@@417 $generated@@475 $generated@@476))
)))
(assert (forall (($generated@@477 T@U) ($generated@@478 T@U) ) (!  (=> (and (= (type $generated@@477) $generated@@151) (= (type $generated@@478) $generated@@151)) (= ($generated@@156 ($generated@@223 $generated@@477 $generated@@478)) $generated@@61))
 :pattern ( ($generated@@223 $generated@@477 $generated@@478))
)))
(assert (forall (($generated@@480 T@U) ) (! (= (type ($generated@@479 $generated@@480)) $generated@@70)
 :pattern ( ($generated@@479 $generated@@480))
)))
(assert (forall (($generated@@481 T@U) ($generated@@482 T@U) ) (!  (=> (and (= (type $generated@@481) $generated@@70) (= (type $generated@@482) $generated@@70)) (= ($generated@@479 ($generated@@141 $generated@@481 $generated@@482)) $generated@@481))
 :pattern ( ($generated@@141 $generated@@481 $generated@@482))
)))
(assert (forall (($generated@@484 T@U) ) (! (= (type ($generated@@483 $generated@@484)) $generated@@70)
 :pattern ( ($generated@@483 $generated@@484))
)))
(assert (forall (($generated@@485 T@U) ($generated@@486 T@U) ) (!  (=> (and (= (type $generated@@485) $generated@@70) (= (type $generated@@486) $generated@@70)) (= ($generated@@483 ($generated@@141 $generated@@485 $generated@@486)) $generated@@486))
 :pattern ( ($generated@@141 $generated@@485 $generated@@486))
)))
(assert (forall (($generated@@487 T@U) ($generated@@488 T@U) ) (!  (=> (and (= (type $generated@@487) $generated@@151) (= (type $generated@@488) $generated@@151)) (= ($generated@@149 ($generated@@223 $generated@@487 $generated@@488)) $generated@@487))
 :pattern ( ($generated@@223 $generated@@487 $generated@@488))
)))
(assert (forall (($generated@@489 T@U) ($generated@@490 T@U) ) (!  (=> (and (= (type $generated@@489) $generated@@151) (= (type $generated@@490) $generated@@151)) (= ($generated@@150 ($generated@@223 $generated@@489 $generated@@490)) $generated@@490))
 :pattern ( ($generated@@223 $generated@@489 $generated@@490))
)))
(assert  (and (forall (($generated@@493 T@U) ) (! (= (type ($generated@@491 $generated@@493)) $generated@@70)
 :pattern ( ($generated@@491 $generated@@493))
)) (forall (($generated@@494 T@U) ($generated@@495 Int) ) (! (let (($generated@@496 ($generated@@285 (type $generated@@494))))
(= (type ($generated@@492 $generated@@494 $generated@@495)) $generated@@496))
 :pattern ( ($generated@@492 $generated@@494 $generated@@495))
))))
(assert (forall (($generated@@497 T@U) ($generated@@498 T@U) ($generated@@499 T@U) ) (!  (=> (and (and (= (type $generated@@497) ($generated@@284 $generated@@151)) (= (type $generated@@498) $generated@@70)) (= (type $generated@@499) ($generated@@82 $generated@@83 $generated@@84))) (= ($generated@@80 $generated@@497 ($generated@@491 $generated@@498) $generated@@499) (forall (($generated@@500 Int) ) (!  (=> (and (<= 0 $generated@@500) (< $generated@@500 ($generated@@283 $generated@@497))) ($generated@@268 ($generated@@492 $generated@@497 $generated@@500) $generated@@498 $generated@@499))
 :pattern ( ($generated@@492 $generated@@497 $generated@@500))
))))
 :pattern ( ($generated@@80 $generated@@497 ($generated@@491 $generated@@498) $generated@@499))
)))
(assert (forall (($generated@@502 Int) ) (! (= ($generated@@501 ($generated@@81 $generated@@502)) $generated@@502)
 :pattern ( ($generated@@81 $generated@@502))
)))
(assert (forall (($generated@@504 T@U) ) (! (= (type ($generated@@503 $generated@@504)) $generated@@70)
 :pattern ( ($generated@@503 $generated@@504))
)))
(assert (forall (($generated@@505 T@U) ) (!  (=> (= (type $generated@@505) $generated@@70) (= ($generated@@503 ($generated@@242 $generated@@505)) $generated@@505))
 :pattern ( ($generated@@242 $generated@@505))
)))
(assert (forall (($generated@@506 T@U) ) (!  (=> (= (type $generated@@506) $generated@@70) (= ($generated@@78 ($generated@@242 $generated@@506)) $generated@@54))
 :pattern ( ($generated@@242 $generated@@506))
)))
(assert (forall (($generated@@508 T@U) ) (! (= (type ($generated@@507 $generated@@508)) $generated@@70)
 :pattern ( ($generated@@507 $generated@@508))
)))
(assert (forall (($generated@@509 T@U) ) (!  (=> (= (type $generated@@509) $generated@@70) (= ($generated@@507 ($generated@@247 $generated@@509)) $generated@@509))
 :pattern ( ($generated@@247 $generated@@509))
)))
(assert (forall (($generated@@510 T@U) ) (!  (=> (= (type $generated@@510) $generated@@70) (= ($generated@@78 ($generated@@247 $generated@@510)) $generated@@55))
 :pattern ( ($generated@@247 $generated@@510))
)))
(assert (forall (($generated@@512 T@U) ) (! (= (type ($generated@@511 $generated@@512)) $generated@@70)
 :pattern ( ($generated@@511 $generated@@512))
)))
(assert (forall (($generated@@513 T@U) ) (!  (=> (= (type $generated@@513) $generated@@70) (= ($generated@@511 ($generated@@162 $generated@@513)) $generated@@513))
 :pattern ( ($generated@@162 $generated@@513))
)))
(assert (forall (($generated@@514 T@U) ) (!  (=> (= (type $generated@@514) $generated@@70) (= ($generated@@78 ($generated@@162 $generated@@514)) $generated@@56))
 :pattern ( ($generated@@162 $generated@@514))
)))
(assert (forall (($generated@@516 T@U) ) (! (= (type ($generated@@515 $generated@@516)) $generated@@70)
 :pattern ( ($generated@@515 $generated@@516))
)))
(assert (forall (($generated@@517 T@U) ) (!  (=> (= (type $generated@@517) $generated@@70) (= ($generated@@515 ($generated@@491 $generated@@517)) $generated@@517))
 :pattern ( ($generated@@491 $generated@@517))
)))
(assert (forall (($generated@@518 T@U) ) (!  (=> (= (type $generated@@518) $generated@@70) (= ($generated@@78 ($generated@@491 $generated@@518)) $generated@@57))
 :pattern ( ($generated@@491 $generated@@518))
)))
(assert (forall (($generated@@519 T@U) ) (! (let (($generated@@520 (type $generated@@519)))
(= ($generated@@344 $generated@@520 ($generated@@294 $generated@@519)) $generated@@519))
 :pattern ( ($generated@@294 $generated@@519))
)))
(assert (forall (($generated@@521 T@U) ($generated@@522 T@U) ($generated@@523 T@U) ) (!  (=> (and (and (= (type $generated@@521) ($generated@@307 $generated@@151 $generated@@151)) (= (type $generated@@522) $generated@@70)) (= (type $generated@@523) $generated@@70)) (= ($generated@@138 $generated@@521 ($generated@@409 $generated@@522 $generated@@523)) (forall (($generated@@524 T@U) ) (!  (=> (and (= (type $generated@@524) $generated@@151) ($generated@@0 ($generated@@87 ($generated@@305 $generated@@521) $generated@@524))) (and ($generated@@224 ($generated@@87 ($generated@@384 $generated@@521) $generated@@524) $generated@@523) ($generated@@224 $generated@@524 $generated@@522)))
 :pattern ( ($generated@@87 ($generated@@384 $generated@@521) $generated@@524))
 :pattern ( ($generated@@87 ($generated@@305 $generated@@521) $generated@@524))
))))
 :pattern ( ($generated@@138 $generated@@521 ($generated@@409 $generated@@522 $generated@@523)))
)))
(assert (forall (($generated@@525 T@U) ($generated@@526 T@U) ($generated@@527 T@U) ) (!  (=> (and (and (= (type $generated@@525) ($generated@@325 $generated@@151 $generated@@151)) (= (type $generated@@526) $generated@@70)) (= (type $generated@@527) $generated@@70)) (= ($generated@@138 $generated@@525 ($generated@@417 $generated@@526 $generated@@527)) (forall (($generated@@528 T@U) ) (!  (=> (and (= (type $generated@@528) $generated@@151) ($generated@@0 ($generated@@87 ($generated@@323 $generated@@525) $generated@@528))) (and ($generated@@224 ($generated@@87 ($generated@@392 $generated@@525) $generated@@528) $generated@@527) ($generated@@224 $generated@@528 $generated@@526)))
 :pattern ( ($generated@@87 ($generated@@392 $generated@@525) $generated@@528))
 :pattern ( ($generated@@87 ($generated@@323 $generated@@525) $generated@@528))
))))
 :pattern ( ($generated@@138 $generated@@525 ($generated@@417 $generated@@526 $generated@@527)))
)))
(assert (forall (($generated@@531 T@U) ($generated@@532 T@U) ) (!  (=> (and (= (type $generated@@531) $generated@@151) (= (type $generated@@532) $generated@@151)) (< ($generated@@529 $generated@@531) ($generated@@530 ($generated@@223 $generated@@531 $generated@@532))))
 :pattern ( ($generated@@223 $generated@@531 $generated@@532))
)))
(assert (forall (($generated@@533 T@U) ($generated@@534 T@U) ) (!  (=> (and (= (type $generated@@533) $generated@@151) (= (type $generated@@534) $generated@@151)) (< ($generated@@529 $generated@@534) ($generated@@530 ($generated@@223 $generated@@533 $generated@@534))))
 :pattern ( ($generated@@223 $generated@@533 $generated@@534))
)))
(assert (forall (($generated@@535 T@U) ($generated@@536 T@U) ($generated@@537 T@U) ) (!  (=> (and (and (and (= (type $generated@@535) $generated@@151) (= (type $generated@@536) $generated@@70)) (= (type $generated@@537) $generated@@70)) ($generated@@224 $generated@@535 ($generated@@409 $generated@@536 $generated@@537))) (and (= ($generated@@294 ($generated@@344 ($generated@@307 $generated@@151 $generated@@151) $generated@@535)) $generated@@535) ($generated@@138 ($generated@@344 ($generated@@307 $generated@@151 $generated@@151) $generated@@535) ($generated@@409 $generated@@536 $generated@@537))))
 :pattern ( ($generated@@224 $generated@@535 ($generated@@409 $generated@@536 $generated@@537)))
)))
(assert (forall (($generated@@538 T@U) ($generated@@539 T@U) ($generated@@540 T@U) ) (!  (=> (and (and (and (= (type $generated@@538) $generated@@151) (= (type $generated@@539) $generated@@70)) (= (type $generated@@540) $generated@@70)) ($generated@@224 $generated@@538 ($generated@@417 $generated@@539 $generated@@540))) (and (= ($generated@@294 ($generated@@344 ($generated@@325 $generated@@151 $generated@@151) $generated@@538)) $generated@@538) ($generated@@138 ($generated@@344 ($generated@@325 $generated@@151 $generated@@151) $generated@@538) ($generated@@417 $generated@@539 $generated@@540))))
 :pattern ( ($generated@@224 $generated@@538 ($generated@@417 $generated@@539 $generated@@540)))
)))
(assert (forall (($generated@@541 T@U) ($generated@@542 T@U) ($generated@@543 T@U) ) (!  (=> (and (and (and (= (type $generated@@541) $generated@@70) (= (type $generated@@542) $generated@@70)) (= (type $generated@@543) $generated@@151)) ($generated@@224 $generated@@543 ($generated@@141 $generated@@541 $generated@@542))) (and (= ($generated@@294 ($generated@@344 $generated@@142 $generated@@543)) $generated@@543) ($generated@@138 ($generated@@344 $generated@@142 $generated@@543) ($generated@@141 $generated@@541 $generated@@542))))
 :pattern ( ($generated@@224 $generated@@543 ($generated@@141 $generated@@541 $generated@@542)))
)))
(assert (forall (($generated@@544 T@U) ) (! (let (($generated@@545 (type $generated@@544)))
 (not ($generated@@0 ($generated@@87 ($generated@@425 $generated@@545) $generated@@544))))
 :pattern ( (let (($generated@@545 (type $generated@@544)))
($generated@@87 ($generated@@425 $generated@@545) $generated@@544)))
)))
(assert (forall (($generated@@547 T@U) ) (! (= (type ($generated@@546 $generated@@547)) $generated@@75)
 :pattern ( ($generated@@546 $generated@@547))
)))
(assert (forall (($generated@@548 T@U) ($generated@@549 T@U) ) (!  (=> (and (= (type $generated@@548) $generated@@70) (= (type $generated@@549) $generated@@70)) (and (= ($generated@@78 ($generated@@141 $generated@@548 $generated@@549)) $generated@@62) (= ($generated@@546 ($generated@@141 $generated@@548 $generated@@549)) $generated@@68)))
 :pattern ( ($generated@@141 $generated@@548 $generated@@549))
)))
(assert (forall (($generated@@550 T@U) ) (!  (=> (= (type $generated@@550) $generated@@142) (= ($generated@@529 ($generated@@294 $generated@@550)) ($generated@@530 $generated@@550)))
 :pattern ( ($generated@@529 ($generated@@294 $generated@@550)))
)))
(assert (forall (($generated@@551 T@U) ) (!  (=> (and (= (type $generated@@551) $generated@@151) ($generated@@224 $generated@@551 ($generated@@81 0))) (and (= ($generated@@294 ($generated@@344 $generated@@2 $generated@@551)) $generated@@551) ($generated@@138 ($generated@@344 ($generated@@82 $generated@@151 $generated@@4) $generated@@551) ($generated@@81 0))))
 :pattern ( ($generated@@224 $generated@@551 ($generated@@81 0)))
)))
(assert (forall (($generated@@552 T@U) ($generated@@553 T@U) ) (!  (=> (and (and (= (type $generated@@552) $generated@@151) (= (type $generated@@553) $generated@@70)) ($generated@@224 $generated@@552 ($generated@@242 $generated@@553))) (and (= ($generated@@294 ($generated@@344 ($generated@@82 $generated@@151 $generated@@4) $generated@@552)) $generated@@552) ($generated@@138 ($generated@@344 ($generated@@82 $generated@@151 $generated@@4) $generated@@552) ($generated@@242 $generated@@553))))
 :pattern ( ($generated@@224 $generated@@552 ($generated@@242 $generated@@553)))
)))
(assert (forall (($generated@@554 T@U) ($generated@@555 T@U) ) (!  (=> (and (and (= (type $generated@@554) $generated@@151) (= (type $generated@@555) $generated@@70)) ($generated@@224 $generated@@554 ($generated@@247 $generated@@555))) (and (= ($generated@@294 ($generated@@344 ($generated@@82 $generated@@151 $generated@@4) $generated@@554)) $generated@@554) ($generated@@138 ($generated@@344 ($generated@@82 $generated@@151 $generated@@4) $generated@@554) ($generated@@247 $generated@@555))))
 :pattern ( ($generated@@224 $generated@@554 ($generated@@247 $generated@@555)))
)))
(assert (forall (($generated@@556 T@U) ($generated@@557 T@U) ) (!  (=> (and (and (= (type $generated@@556) $generated@@151) (= (type $generated@@557) $generated@@70)) ($generated@@224 $generated@@556 ($generated@@162 $generated@@557))) (and (= ($generated@@294 ($generated@@344 ($generated@@82 $generated@@151 $generated@@2) $generated@@556)) $generated@@556) ($generated@@138 ($generated@@344 ($generated@@82 $generated@@151 $generated@@2) $generated@@556) ($generated@@162 $generated@@557))))
 :pattern ( ($generated@@224 $generated@@556 ($generated@@162 $generated@@557)))
)))
(assert (forall (($generated@@558 T@U) ($generated@@559 T@U) ) (!  (=> (and (and (= (type $generated@@558) $generated@@151) (= (type $generated@@559) $generated@@70)) ($generated@@224 $generated@@558 ($generated@@491 $generated@@559))) (and (= ($generated@@294 ($generated@@344 ($generated@@284 $generated@@151) $generated@@558)) $generated@@558) ($generated@@138 ($generated@@344 ($generated@@284 $generated@@151) $generated@@558) ($generated@@491 $generated@@559))))
 :pattern ( ($generated@@224 $generated@@558 ($generated@@491 $generated@@559)))
)))
(assert (= ($generated@@78 $generated@@231) $generated@@64))
(assert (= ($generated@@546 $generated@@231) $generated@@69))
(assert (forall (($generated@@560 T@U) ($generated@@561 T@U) ($generated@@562 T@U) ) (!  (=> (and (and (= (type $generated@@560) ($generated@@82 $generated@@151 $generated@@2)) (= (type $generated@@561) $generated@@70)) (= (type $generated@@562) ($generated@@82 $generated@@83 $generated@@84))) (= ($generated@@80 $generated@@560 ($generated@@162 $generated@@561) $generated@@562) (forall (($generated@@563 T@U) ) (!  (=> (and (= (type $generated@@563) $generated@@151) (< 0 ($generated ($generated@@87 $generated@@560 $generated@@563)))) ($generated@@268 $generated@@563 $generated@@561 $generated@@562))
 :pattern ( ($generated@@87 $generated@@560 $generated@@563))
))))
 :pattern ( ($generated@@80 $generated@@560 ($generated@@162 $generated@@561) $generated@@562))
)))
(assert (= $generated@@157 ($generated@@252 $generated@@157)))
(assert (= $generated@@159 ($generated@@252 $generated@@159)))
(assert (= $generated@@160 ($generated@@252 $generated@@160)))
(assert (= $generated@@161 ($generated@@252 $generated@@161)))
(assert (forall (($generated@@565 T@U) ) (!  (=> (and (= (type $generated@@565) $generated@@142) ($generated@@564 $generated@@565)) (or (or (or ($generated@@256 $generated@@565) ($generated@@259 $generated@@565)) ($generated@@262 $generated@@565)) ($generated@@265 $generated@@565)))
 :pattern ( ($generated@@564 $generated@@565))
)))
(assert (forall (($generated@@566 T@U) ($generated@@567 T@U) ($generated@@568 T@U) ) (!  (=> (and (and (and (= (type $generated@@566) $generated@@142) (= (type $generated@@567) $generated@@70)) (= (type $generated@@568) ($generated@@82 $generated@@83 $generated@@84))) (and ($generated@@232 $generated@@568) (and ($generated@@140 $generated@@566) (exists (($generated@@569 T@U) ) (!  (and (= (type $generated@@569) $generated@@70) ($generated@@80 $generated@@566 ($generated@@141 $generated@@567 $generated@@569) $generated@@568))
 :pattern ( ($generated@@80 $generated@@566 ($generated@@141 $generated@@567 $generated@@569) $generated@@568))
))))) ($generated@@268 ($generated@@149 $generated@@566) $generated@@567 $generated@@568))
 :pattern ( ($generated@@268 ($generated@@149 $generated@@566) $generated@@567 $generated@@568))
)))
(assert (forall (($generated@@570 T@U) ($generated@@571 T@U) ($generated@@572 T@U) ) (!  (=> (and (and (and (= (type $generated@@570) $generated@@142) (= (type $generated@@571) $generated@@70)) (= (type $generated@@572) ($generated@@82 $generated@@83 $generated@@84))) (and ($generated@@232 $generated@@572) (and ($generated@@140 $generated@@570) (exists (($generated@@573 T@U) ) (!  (and (= (type $generated@@573) $generated@@70) ($generated@@80 $generated@@570 ($generated@@141 $generated@@573 $generated@@571) $generated@@572))
 :pattern ( ($generated@@80 $generated@@570 ($generated@@141 $generated@@573 $generated@@571) $generated@@572))
))))) ($generated@@268 ($generated@@150 $generated@@570) $generated@@571 $generated@@572))
 :pattern ( ($generated@@268 ($generated@@150 $generated@@570) $generated@@571 $generated@@572))
)))
(assert (forall (($generated@@574 T@U) ($generated@@575 T@U) ) (!  (=> (and (= (type $generated@@574) $generated@@151) (= (type $generated@@575) $generated@@151)) (= ($generated@@223 ($generated@@252 $generated@@574) ($generated@@252 $generated@@575)) ($generated@@252 ($generated@@223 $generated@@574 $generated@@575))))
 :pattern ( ($generated@@223 ($generated@@252 $generated@@574) ($generated@@252 $generated@@575)))
)))
(assert (forall (($generated@@576 T@U) ) (! (= ($generated@@294 ($generated@@252 $generated@@576)) ($generated@@252 ($generated@@294 $generated@@576)))
 :pattern ( ($generated@@294 ($generated@@252 $generated@@576)))
)))
(assert (forall (($generated@@577 T@U) ) (! (let (($generated@@578 ($generated@@285 (type $generated@@577))))
 (=> (and (= (type $generated@@577) ($generated@@284 $generated@@578)) (= ($generated@@283 $generated@@577) 0)) (= $generated@@577 ($generated@@282 $generated@@578))))
 :pattern ( ($generated@@283 $generated@@577))
)))
(assert (forall (($generated@@579 T@U) ($generated@@580 T@U) ($generated@@581 T@U) ) (! (let (($generated@@582 (type $generated@@580)))
 (=> (and (and (= (type $generated@@579) ($generated@@82 $generated@@582 $generated@@2)) (= (type $generated@@581) $generated@@2)) (<= 0 ($generated $generated@@581))) (= ($generated@@299 ($generated@@88 $generated@@579 $generated@@580 $generated@@581)) (+ (- ($generated@@299 $generated@@579) ($generated ($generated@@87 $generated@@579 $generated@@580))) ($generated $generated@@581)))))
 :pattern ( ($generated@@299 ($generated@@88 $generated@@579 $generated@@580 $generated@@581)))
)))
(assert (forall (($generated@@583 T@U) ) (!  (=> (and (= (type $generated@@583) $generated@@142) ($generated@@138 $generated@@583 $generated@@231)) (or (or (or ($generated@@256 $generated@@583) ($generated@@259 $generated@@583)) ($generated@@262 $generated@@583)) ($generated@@265 $generated@@583)))
 :pattern ( ($generated@@265 $generated@@583) ($generated@@138 $generated@@583 $generated@@231))
 :pattern ( ($generated@@262 $generated@@583) ($generated@@138 $generated@@583 $generated@@231))
 :pattern ( ($generated@@259 $generated@@583) ($generated@@138 $generated@@583 $generated@@231))
 :pattern ( ($generated@@256 $generated@@583) ($generated@@138 $generated@@583 $generated@@231))
)))
(assert (forall (($generated@@584 T@U) ($generated@@585 T@U) ) (!  (=> (and (= (type $generated@@584) ($generated@@82 $generated@@83 $generated@@84)) (= (type $generated@@585) $generated@@2)) ($generated@@80 $generated@@585 $generated@@46 $generated@@584))
 :pattern ( ($generated@@80 $generated@@585 $generated@@46 $generated@@584))
)))
(assert (forall (($generated@@586 T@U) ($generated@@587 T@U) ) (!  (=> (and (= (type $generated@@586) ($generated@@82 $generated@@83 $generated@@84)) (= (type $generated@@587) $generated@@3)) ($generated@@80 $generated@@587 $generated@@47 $generated@@586))
 :pattern ( ($generated@@80 $generated@@587 $generated@@47 $generated@@586))
)))
(assert (forall (($generated@@588 T@U) ($generated@@589 T@U) ) (!  (=> (and (= (type $generated@@588) ($generated@@82 $generated@@83 $generated@@84)) (= (type $generated@@589) $generated@@4)) ($generated@@80 $generated@@589 $generated@@44 $generated@@588))
 :pattern ( ($generated@@80 $generated@@589 $generated@@44 $generated@@588))
)))
(assert (forall (($generated@@590 T@U) ($generated@@591 T@U) ) (!  (=> (and (= (type $generated@@590) ($generated@@82 $generated@@83 $generated@@84)) (= (type $generated@@591) $generated@@449)) ($generated@@80 $generated@@591 $generated@@45 $generated@@590))
 :pattern ( ($generated@@80 $generated@@591 $generated@@45 $generated@@590))
)))
(assert (forall (($generated@@592 T@U) ($generated@@593 T@U) ) (!  (=> (and (= (type $generated@@592) ($generated@@82 $generated@@83 $generated@@84)) (= (type $generated@@593) $generated@@151)) ($generated@@80 $generated@@593 $generated@@48 $generated@@592))
 :pattern ( ($generated@@80 $generated@@593 $generated@@48 $generated@@592))
)))
(assert (forall (($generated@@594 T@U) ($generated@@595 T@U) ) (!  (=> (and (= (type $generated@@594) ($generated@@284 $generated@@151)) (= (type $generated@@595) $generated@@70)) (= ($generated@@138 $generated@@594 ($generated@@491 $generated@@595)) (forall (($generated@@596 Int) ) (!  (=> (and (<= 0 $generated@@596) (< $generated@@596 ($generated@@283 $generated@@594))) ($generated@@224 ($generated@@492 $generated@@594 $generated@@596) $generated@@595))
 :pattern ( ($generated@@492 $generated@@594 $generated@@596))
))))
 :pattern ( ($generated@@138 $generated@@594 ($generated@@491 $generated@@595)))
)))
(assert (forall (($generated@@598 T@U) ($generated@@599 Int) ) (!  (=> (= (type $generated@@598) ($generated@@284 $generated@@151)) (=> (and (<= 0 $generated@@599) (< $generated@@599 ($generated@@283 $generated@@598))) (< ($generated@@530 ($generated@@344 $generated@@142 ($generated@@492 $generated@@598 $generated@@599))) ($generated@@597 $generated@@598))))
 :pattern ( ($generated@@530 ($generated@@344 $generated@@142 ($generated@@492 $generated@@598 $generated@@599))))
)))
(assert (forall (($generated@@600 T@U) ($generated@@601 T@U) ($generated@@602 T@U) ) (!  (=> (and (and (and (= (type $generated@@600) ($generated@@307 $generated@@151 $generated@@151)) (= (type $generated@@601) $generated@@70)) (= (type $generated@@602) $generated@@70)) ($generated@@138 $generated@@600 ($generated@@409 $generated@@601 $generated@@602))) (and (and ($generated@@138 ($generated@@305 $generated@@600) ($generated@@242 $generated@@601)) ($generated@@138 ($generated@@352 $generated@@600) ($generated@@242 $generated@@602))) ($generated@@138 ($generated@@383 $generated@@600) ($generated@@242 ($generated@@141 $generated@@601 $generated@@602)))))
 :pattern ( ($generated@@138 $generated@@600 ($generated@@409 $generated@@601 $generated@@602)))
)))
(assert (forall (($generated@@603 T@U) ($generated@@604 T@U) ($generated@@605 T@U) ) (!  (=> (and (and (and (= (type $generated@@603) ($generated@@325 $generated@@151 $generated@@151)) (= (type $generated@@604) $generated@@70)) (= (type $generated@@605) $generated@@70)) ($generated@@138 $generated@@603 ($generated@@417 $generated@@604 $generated@@605))) (and (and ($generated@@138 ($generated@@323 $generated@@603) ($generated@@247 $generated@@604)) ($generated@@138 ($generated@@363 $generated@@603) ($generated@@247 $generated@@605))) ($generated@@138 ($generated@@391 $generated@@603) ($generated@@247 ($generated@@141 $generated@@604 $generated@@605)))))
 :pattern ( ($generated@@138 $generated@@603 ($generated@@417 $generated@@604 $generated@@605)))
)))
(assert (forall (($generated@@606 T@U) ) (!  (=> (= (type $generated@@606) $generated@@2) ($generated@@138 $generated@@606 $generated@@46))
 :pattern ( ($generated@@138 $generated@@606 $generated@@46))
)))
(assert (forall (($generated@@607 T@U) ) (!  (=> (= (type $generated@@607) $generated@@3) ($generated@@138 $generated@@607 $generated@@47))
 :pattern ( ($generated@@138 $generated@@607 $generated@@47))
)))
(assert (forall (($generated@@608 T@U) ) (!  (=> (= (type $generated@@608) $generated@@4) ($generated@@138 $generated@@608 $generated@@44))
 :pattern ( ($generated@@138 $generated@@608 $generated@@44))
)))
(assert (forall (($generated@@609 T@U) ) (!  (=> (= (type $generated@@609) $generated@@449) ($generated@@138 $generated@@609 $generated@@45))
 :pattern ( ($generated@@138 $generated@@609 $generated@@45))
)))
(assert (forall (($generated@@610 T@U) ) (!  (=> (= (type $generated@@610) $generated@@151) ($generated@@138 $generated@@610 $generated@@48))
 :pattern ( ($generated@@138 $generated@@610 $generated@@48))
)))
(push 1)
(declare-fun ControlFlow (Int Int) Int)
(declare-fun $generated@@611 () T@U)
(declare-fun $generated@@612 () T@U)
(declare-fun $generated@@613 () T@U)
(declare-fun $generated@@614 () T@U)
(declare-fun $generated@@615 (T@U) Bool)
(declare-fun $generated@@616 () Int)
(assert  (and (and (and (= (type $generated@@611) $generated@@142) (= (type $generated@@612) ($generated@@169 $generated@@83 $generated@@4))) (= (type $generated@@613) $generated@@83)) (= (type $generated@@614) ($generated@@82 $generated@@83 $generated@@84))))
(set-option :timeout 0)
(set-option :rlimit 0)
(assert (not
 (=> (= (ControlFlow 0 0) 12) (let (($generated@@617 true))
(let (($generated@@618  (=> (and (= $generated@@611 $generated@@159) (= (ControlFlow 0 6) (- 0 5))) false)))
(let (($generated@@619  (=> (not (= $generated@@611 $generated@@161)) (and (=> (= (ControlFlow 0 8) 6) $generated@@618) (=> (= (ControlFlow 0 8) 7) $generated@@617)))))
(let (($generated@@620  (=> (and (= $generated@@611 $generated@@161) (= (ControlFlow 0 4) (- 0 3))) false)))
(let (($generated@@621  (=> (not (= $generated@@611 $generated@@160)) (and (=> (= (ControlFlow 0 9) 4) $generated@@620) (=> (= (ControlFlow 0 9) 8) $generated@@619)))))
(let (($generated@@622 true))
(let (($generated@@623  (=> (not (= $generated@@611 $generated@@157)) (and (=> (= (ControlFlow 0 10) 2) $generated@@622) (=> (= (ControlFlow 0 10) 9) $generated@@621)))))
(let (($generated@@624 true))
(let (($generated@@625  (=> (= $generated@@612 ($generated@@168 $generated@@613 $generated@@614 $generated@@60 false)) (and (=> (= (ControlFlow 0 11) 1) $generated@@624) (=> (= (ControlFlow 0 11) 10) $generated@@623)))))
(let (($generated@@626  (=> (and ($generated@@232 $generated@@614) ($generated@@615 $generated@@614)) (=> (and (and (and ($generated@@138 $generated@@611 $generated@@231) ($generated@@80 $generated@@611 $generated@@231 $generated@@614)) ($generated@@564 $generated@@611)) (and (and (= 1 $generated@@616) (not ($generated@@239 $generated@@611 $generated@@159))) (and (not ($generated@@239 $generated@@611 $generated@@161)) (= (ControlFlow 0 12) 11)))) $generated@@625))))
$generated@@626)))))))))))
))
(check-sat)
(pop 1)
; Valid
(get-info :rlimit)
(reset)
(set-option :rlimit 0)
; did a full reset
(reset)
(set-option :print-success false)
(set-info :smt-lib-version 2.6)
(set-option :auto_config false)
(set-option :type_check true)
(set-option :smt.case_split 3)
(set-option :smt.qi.eager_threshold 100)
(set-option :smt.delay_units true)
(set-option :smt.arith.solver 2)
(set-option :smt.mbqi false)
(set-option :model.compact false)
(set-option :model.v2 true)
(set-option :pp.bv_literals false)
; done setting options


(set-info :category "industrial")
(declare-sort |T@U| 0)
(declare-sort |T@T| 0)
(declare-fun real_pow (Real Real) Real)
(declare-fun UOrdering2 (|T@U| |T@U|) Bool)
(declare-fun UOrdering3 (|T@T| |T@U| |T@U|) Bool)
(declare-fun tickleBool (Bool) Bool)
(assert (and (tickleBool true) (tickleBool false)))
(declare-fun $generated (T@U) Int)
(declare-fun $generated@@0 (T@U) Bool)
(declare-fun $generated@@1 (T@T) Int)
(declare-fun $generated@@2 () T@T)
(declare-fun $generated@@3 () T@T)
(declare-fun $generated@@4 () T@T)
(declare-fun $generated@@5 () T@T)
(declare-fun $generated@@6 () T@T)
(declare-fun $generated@@7 () T@T)
(declare-fun $generated@@8 (Int) T@U)
(declare-fun type (T@U) T@T)
(declare-fun $generated@@9 (Real) T@U)
(declare-fun $generated@@10 (T@U) Real)
(declare-fun $generated@@11 (Bool) T@U)
(declare-fun $generated@@12 (RoundingMode) T@U)
(declare-fun $generated@@13 (T@U) RoundingMode)
(declare-fun $generated@@14 (String) T@U)
(declare-fun $generated@@15 (T@U) String)
(declare-fun $generated@@16 ((RegEx String)) T@U)
(declare-fun $generated@@17 (T@U) (RegEx String))
(declare-fun $generated@@44 () T@U)
(declare-fun $generated@@45 () T@U)
(declare-fun $generated@@46 () T@U)
(declare-fun $generated@@47 () T@U)
(declare-fun $generated@@48 () T@U)
(declare-fun $generated@@49 () T@U)
(declare-fun $generated@@50 () T@U)
(declare-fun $generated@@51 () T@U)
(declare-fun $generated@@52 () T@U)
(declare-fun $generated@@53 () T@U)
(declare-fun $generated@@54 () T@U)
(declare-fun $generated@@55 () T@U)
(declare-fun $generated@@56 () T@U)
(declare-fun $generated@@57 () T@U)
(declare-fun $generated@@58 () T@U)
(declare-fun $generated@@59 () T@U)
(declare-fun $generated@@60 () T@U)
(declare-fun $generated@@61 () T@U)
(declare-fun $generated@@62 () T@U)
(declare-fun $generated@@63 () T@U)
(declare-fun $generated@@64 () T@U)
(declare-fun $generated@@65 () T@U)
(declare-fun $generated@@66 () T@U)
(declare-fun $generated@@67 () T@U)
(declare-fun $generated@@68 () T@U)
(declare-fun $generated@@69 () T@U)
(declare-fun $generated@@70 () T@T)
(declare-fun $generated@@71 () T@T)
(declare-fun $generated@@72 (T@T) T@T)
(declare-fun $generated@@73 (T@T) T@T)
(declare-fun $generated@@74 () T@T)
(declare-fun $generated@@75 () T@T)
(declare-fun $generated@@78 (T@U) T@U)
(declare-fun $generated@@80 (T@U T@U T@U) Bool)
(declare-fun $generated@@81 (Int) T@U)
(declare-fun $generated@@82 (T@T T@T) T@T)
(declare-fun $generated@@83 () T@T)
(declare-fun $generated@@84 () T@T)
(declare-fun $generated@@85 (T@T) T@T)
(declare-fun $generated@@86 (T@T) T@T)
(declare-fun $generated@@87 (T@U T@U) T@U)
(declare-fun $generated@@88 (T@U T@U T@U) T@U)
(declare-fun $generated@@89 (T@U T@U) T@U)
(declare-fun $generated@@90 (T@U T@U T@U) T@U)
(declare-fun $generated@@138 (T@U T@U) Bool)
(declare-fun $generated@@140 (T@U) Bool)
(declare-fun $generated@@141 (T@U T@U) T@U)
(declare-fun $generated@@142 () T@T)
(declare-fun $generated@@148 (T@U T@U) Bool)
(declare-fun $generated@@149 (T@U) T@U)
(declare-fun $generated@@150 (T@U) T@U)
(declare-fun $generated@@151 () T@T)
(declare-fun $generated@@156 (T@U) T@U)
(declare-fun $generated@@157 () T@U)
(declare-fun $generated@@159 () T@U)
(declare-fun $generated@@160 () T@U)
(declare-fun $generated@@161 () T@U)
(declare-fun $generated@@162 (T@U) T@U)
(declare-fun $generated@@163 (T@U) Bool)
(declare-fun $generated@@167 (T@U T@U T@U) T@U)
(declare-fun $generated@@168 (T@U T@U T@U Bool) T@U)
(declare-fun $generated@@169 (T@T T@T) T@T)
(declare-fun $generated@@170 (T@T) T@T)
(declare-fun $generated@@171 (T@T) T@T)
(declare-fun $generated@@172 (T@U T@U T@U T@U) T@U)
(declare-fun $generated@@223 (T@U T@U) T@U)
(declare-fun $generated@@224 (T@U T@U) Bool)
(declare-fun $generated@@231 () T@U)
(declare-fun $generated@@232 (T@U) Bool)
(declare-fun $generated@@239 (T@U T@U) Bool)
(declare-fun $generated@@242 (T@U) T@U)
(declare-fun $generated@@247 (T@U) T@U)
(declare-fun $generated@@252 (T@U) T@U)
(declare-fun $generated@@256 (T@U) Bool)
(declare-fun $generated@@259 (T@U) Bool)
(declare-fun $generated@@262 (T@U) Bool)
(declare-fun $generated@@265 (T@U) Bool)
(declare-fun $generated@@268 (T@U T@U T@U) Bool)
(declare-fun $generated@@282 (T@T) T@U)
(declare-fun $generated@@283 (T@U) Int)
(declare-fun $generated@@284 (T@T) T@T)
(declare-fun $generated@@285 (T@T) T@T)
(declare-fun $generated@@294 (T@U) T@U)
(declare-fun $generated@@299 (T@U) Int)
(declare-fun $generated@@300 (T@T) T@U)
(declare-fun $generated@@305 (T@U) T@U)
(declare-fun $generated@@306 (T@T T@T) T@U)
(declare-fun $generated@@307 (T@T T@T) T@T)
(declare-fun $generated@@308 (T@T) T@T)
(declare-fun $generated@@309 (T@T) T@T)
(declare-fun $generated@@323 (T@U) T@U)
(declare-fun $generated@@324 (T@T T@T) T@U)
(declare-fun $generated@@325 (T@T T@T) T@T)
(declare-fun $generated@@326 (T@T) T@T)
(declare-fun $generated@@327 (T@T) T@T)
(declare-fun $generated@@344 (T@T T@U) T@U)
(declare-fun $generated@@352 (T@U) T@U)
(declare-fun $generated@@363 (T@U) T@U)
(declare-fun $generated@@383 (T@U) T@U)
(declare-fun $generated@@384 (T@U) T@U)
(declare-fun $generated@@391 (T@U) T@U)
(declare-fun $generated@@392 (T@U) T@U)
(declare-fun $generated@@409 (T@U T@U) T@U)
(declare-fun $generated@@417 (T@U T@U) T@U)
(declare-fun $generated@@425 (T@T) T@U)
(declare-fun $generated@@449 () T@T)
(declare-fun $generated@@457 (T@U) T@U)
(declare-fun $generated@@461 (T@U) T@U)
(declare-fun $generated@@467 (T@U) T@U)
(declare-fun $generated@@471 (T@U) T@U)
(declare-fun $generated@@479 (T@U) T@U)
(declare-fun $generated@@483 (T@U) T@U)
(declare-fun $generated@@491 (T@U) T@U)
(declare-fun $generated@@492 (T@U Int) T@U)
(declare-fun $generated@@501 (T@U) Int)
(declare-fun $generated@@503 (T@U) T@U)
(declare-fun $generated@@507 (T@U) T@U)
(declare-fun $generated@@511 (T@U) T@U)
(declare-fun $generated@@515 (T@U) T@U)
(declare-fun $generated@@529 (T@U) Int)
(declare-fun $generated@@530 (T@U) Int)
(declare-fun $generated@@546 (T@U) T@U)
(declare-fun $generated@@564 (T@U) Bool)
(declare-fun $generated@@597 (T@U) Int)
(assert  (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (= ($generated@@1 $generated@@2) 0) (= ($generated@@1 $generated@@3) 1)) (= ($generated@@1 $generated@@4) 2)) (= ($generated@@1 $generated@@5) 3)) (= ($generated@@1 $generated@@6) 4)) (= ($generated@@1 $generated@@7) 5)) (forall (($generated@@18 Int) ) (! (= ($generated ($generated@@8 $generated@@18)) $generated@@18)
 :pattern ( ($generated@@8 $generated@@18))
))) (forall (($generated@@19 T@U) ) (!  (=> (= (type $generated@@19) $generated@@2) (= ($generated@@8 ($generated $generated@@19)) $generated@@19))
 :pattern ( ($generated $generated@@19))
))) (forall (($generated@@20 Int) ) (! (= (type ($generated@@8 $generated@@20)) $generated@@2)
 :pattern ( ($generated@@8 $generated@@20))
))) (forall (($generated@@21 Real) ) (! (= ($generated@@10 ($generated@@9 $generated@@21)) $generated@@21)
 :pattern ( ($generated@@9 $generated@@21))
))) (forall (($generated@@22 T@U) ) (!  (=> (= (type $generated@@22) $generated@@3) (= ($generated@@9 ($generated@@10 $generated@@22)) $generated@@22))
 :pattern ( ($generated@@10 $generated@@22))
))) (forall (($generated@@23 Real) ) (! (= (type ($generated@@9 $generated@@23)) $generated@@3)
 :pattern ( ($generated@@9 $generated@@23))
))) (forall (($generated@@24 Bool) ) (! (= ($generated@@0 ($generated@@11 $generated@@24)) $generated@@24)
 :pattern ( ($generated@@11 $generated@@24))
))) (forall (($generated@@25 T@U) ) (!  (=> (= (type $generated@@25) $generated@@4) (= ($generated@@11 ($generated@@0 $generated@@25)) $generated@@25))
 :pattern ( ($generated@@0 $generated@@25))
))) (forall (($generated@@26 Bool) ) (! (= (type ($generated@@11 $generated@@26)) $generated@@4)
 :pattern ( ($generated@@11 $generated@@26))
))) (forall (($generated@@27 RoundingMode) ) (! (= ($generated@@13 ($generated@@12 $generated@@27)) $generated@@27)
 :pattern ( ($generated@@12 $generated@@27))
))) (forall (($generated@@28 T@U) ) (!  (=> (= (type $generated@@28) $generated@@5) (= ($generated@@12 ($generated@@13 $generated@@28)) $generated@@28))
 :pattern ( ($generated@@13 $generated@@28))
))) (forall (($generated@@29 RoundingMode) ) (! (= (type ($generated@@12 $generated@@29)) $generated@@5)
 :pattern ( ($generated@@12 $generated@@29))
))) (forall (($generated@@30 String) ) (! (= ($generated@@15 ($generated@@14 $generated@@30)) $generated@@30)
 :pattern ( ($generated@@14 $generated@@30))
))) (forall (($generated@@31 T@U) ) (!  (=> (= (type $generated@@31) $generated@@6) (= ($generated@@14 ($generated@@15 $generated@@31)) $generated@@31))
 :pattern ( ($generated@@15 $generated@@31))
))) (forall (($generated@@32 String) ) (! (= (type ($generated@@14 $generated@@32)) $generated@@6)
 :pattern ( ($generated@@14 $generated@@32))
))) (forall (($generated@@33 (RegEx String)) ) (! (= ($generated@@17 ($generated@@16 $generated@@33)) $generated@@33)
 :pattern ( ($generated@@16 $generated@@33))
))) (forall (($generated@@34 T@U) ) (!  (=> (= (type $generated@@34) $generated@@7) (= ($generated@@16 ($generated@@17 $generated@@34)) $generated@@34))
 :pattern ( ($generated@@17 $generated@@34))
))) (forall (($generated@@35 (RegEx String)) ) (! (= (type ($generated@@16 $generated@@35)) $generated@@7)
 :pattern ( ($generated@@16 $generated@@35))
))))
(assert (forall (($generated@@36 T@U) ) (! (UOrdering2 $generated@@36 $generated@@36)
 :no-pattern ($generated $generated@@36)
 :no-pattern ($generated@@0 $generated@@36)
)))
(assert (forall (($generated@@37 T@U) ($generated@@38 T@U) ($generated@@39 T@U) ) (! (let (($generated@@40 (type $generated@@37)))
 (=> (and (and (= (type $generated@@38) $generated@@40) (= (type $generated@@39) $generated@@40)) (and (UOrdering2 $generated@@37 $generated@@38) (UOrdering2 $generated@@38 $generated@@39))) (UOrdering2 $generated@@37 $generated@@39)))
 :pattern ( (UOrdering2 $generated@@37 $generated@@38) (UOrdering2 $generated@@38 $generated@@39))
)))
(assert (forall (($generated@@41 T@U) ($generated@@42 T@U) ) (! (let (($generated@@43 (type $generated@@41)))
 (=> (= (type $generated@@42) $generated@@43) (=> (and (UOrdering2 $generated@@41 $generated@@42) (UOrdering2 $generated@@42 $generated@@41)) (= $generated@@41 $generated@@42))))
 :pattern ( (UOrdering2 $generated@@41 $generated@@42) (UOrdering2 $generated@@42 $generated@@41))
)))
(assert  (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (= ($generated@@1 $generated@@70) 6) (= (type $generated@@44) $generated@@70)) (= (type $generated@@45) $generated@@70)) (= (type $generated@@46) $generated@@70)) (= (type $generated@@47) $generated@@70)) (= (type $generated@@48) $generated@@70)) (= ($generated@@1 $generated@@71) 7)) (= (type $generated@@49) $generated@@71)) (= (type $generated@@50) $generated@@71)) (= (type $generated@@51) $generated@@71)) (= (type $generated@@52) $generated@@71)) (= (type $generated@@53) $generated@@71)) (= (type $generated@@54) $generated@@71)) (= (type $generated@@55) $generated@@71)) (= (type $generated@@56) $generated@@71)) (= (type $generated@@57) $generated@@71)) (= (type $generated@@58) $generated@@71)) (= (type $generated@@59) $generated@@71)) (forall (($generated@@76 T@T) ) (= ($generated@@1 ($generated@@72 $generated@@76)) 8))) (forall (($generated@@77 T@T) ) (! (= ($generated@@73 ($generated@@72 $generated@@77)) $generated@@77)
 :pattern ( ($generated@@72 $generated@@77))
))) (= (type $generated@@60) ($generated@@72 $generated@@4))) (= ($generated@@1 $generated@@74) 9)) (= (type $generated@@61) $generated@@74)) (= (type $generated@@62) $generated@@71)) (= (type $generated@@63) $generated@@74)) (= (type $generated@@64) $generated@@71)) (= (type $generated@@65) $generated@@74)) (= (type $generated@@66) $generated@@74)) (= (type $generated@@67) $generated@@74)) (= ($generated@@1 $generated@@75) 10)) (= (type $generated@@68) $generated@@75)) (= (type $generated@@69) $generated@@75)))
(assert (distinct $generated@@44 $generated@@45 $generated@@46 $generated@@47 $generated@@48 $generated@@49 $generated@@50 $generated@@51 $generated@@52 $generated@@53 $generated@@54 $generated@@55 $generated@@56 $generated@@57 $generated@@58 $generated@@59 $generated@@60 $generated@@61 $generated@@62 $generated@@63 $generated@@64 $generated@@65 $generated@@66 $generated@@67 $generated@@68 $generated@@69)
)
(assert (forall (($generated@@79 T@U) ) (! (= (type ($generated@@78 $generated@@79)) $generated@@71)
 :pattern ( ($generated@@78 $generated@@79))
)))
(assert (= ($generated@@78 $generated@@44) $generated@@49))
(assert (= ($generated@@78 $generated@@45) $generated@@50))
(assert (= ($generated@@78 $generated@@46) $generated@@51))
(assert (= ($generated@@78 $generated@@47) $generated@@52))
(assert (= ($generated@@78 $generated@@48) $generated@@53))
(assert  (and (and (and (and (and (and (and (and (and (and (and (and (and (forall (($generated@@91 T@T) ($generated@@92 T@T) ) (= ($generated@@1 ($generated@@82 $generated@@91 $generated@@92)) 11)) (forall (($generated@@93 T@T) ($generated@@94 T@T) ) (! (= ($generated@@85 ($generated@@82 $generated@@93 $generated@@94)) $generated@@93)
 :pattern ( ($generated@@82 $generated@@93 $generated@@94))
))) (forall (($generated@@95 T@T) ($generated@@96 T@T) ) (! (= ($generated@@86 ($generated@@82 $generated@@95 $generated@@96)) $generated@@96)
 :pattern ( ($generated@@82 $generated@@95 $generated@@96))
))) (forall (($generated@@97 T@U) ($generated@@98 T@U) ) (! (let (($generated@@99 ($generated@@86 (type $generated@@97))))
(= (type ($generated@@87 $generated@@97 $generated@@98)) $generated@@99))
 :pattern ( ($generated@@87 $generated@@97 $generated@@98))
))) (forall (($generated@@100 T@U) ($generated@@101 T@U) ($generated@@102 T@U) ) (! (let (($generated@@103 (type $generated@@102)))
(let (($generated@@104 (type $generated@@101)))
(= (type ($generated@@88 $generated@@100 $generated@@101 $generated@@102)) ($generated@@82 $generated@@104 $generated@@103))))
 :pattern ( ($generated@@88 $generated@@100 $generated@@101 $generated@@102))
))) (forall (($generated@@105 T@U) ($generated@@106 T@U) ($generated@@107 T@U) ) (! (let (($generated@@108 ($generated@@86 (type $generated@@105))))
 (=> (= (type $generated@@107) $generated@@108) (= ($generated@@87 ($generated@@88 $generated@@105 $generated@@106 $generated@@107) $generated@@106) $generated@@107)))
 :weight 0
))) (and (forall (($generated@@109 T@U) ($generated@@110 T@U) ($generated@@111 T@U) ($generated@@112 T@U) ) (!  (or (= $generated@@111 $generated@@112) (= ($generated@@87 ($generated@@88 $generated@@110 $generated@@111 $generated@@109) $generated@@112) ($generated@@87 $generated@@110 $generated@@112)))
 :weight 0
)) (forall (($generated@@113 T@U) ($generated@@114 T@U) ($generated@@115 T@U) ($generated@@116 T@U) ) (!  (or true (= ($generated@@87 ($generated@@88 $generated@@114 $generated@@115 $generated@@113) $generated@@116) ($generated@@87 $generated@@114 $generated@@116)))
 :weight 0
)))) (= ($generated@@1 $generated@@83) 12)) (forall (($generated@@117 T@U) ($generated@@118 T@U) ) (! (let (($generated@@119 ($generated@@73 (type $generated@@118))))
(= (type ($generated@@89 $generated@@117 $generated@@118)) $generated@@119))
 :pattern ( ($generated@@89 $generated@@117 $generated@@118))
))) (= ($generated@@1 $generated@@84) 13)) (forall (($generated@@120 T@U) ($generated@@121 T@U) ($generated@@122 T@U) ) (! (= (type ($generated@@90 $generated@@120 $generated@@121 $generated@@122)) $generated@@84)
 :pattern ( ($generated@@90 $generated@@120 $generated@@121 $generated@@122))
))) (forall (($generated@@123 T@U) ($generated@@124 T@U) ($generated@@125 T@U) ) (! (let (($generated@@126 ($generated@@73 (type $generated@@124))))
 (=> (= (type $generated@@125) $generated@@126) (= ($generated@@89 ($generated@@90 $generated@@123 $generated@@124 $generated@@125) $generated@@124) $generated@@125)))
 :weight 0
))) (and (forall (($generated@@127 T@U) ($generated@@128 T@U) ($generated@@129 T@U) ($generated@@130 T@U) ) (!  (or (= $generated@@129 $generated@@130) (= ($generated@@89 ($generated@@90 $generated@@128 $generated@@129 $generated@@127) $generated@@130) ($generated@@89 $generated@@128 $generated@@130)))
 :weight 0
)) (forall (($generated@@131 T@U) ($generated@@132 T@U) ($generated@@133 T@U) ($generated@@134 T@U) ) (!  (or true (= ($generated@@89 ($generated@@90 $generated@@132 $generated@@133 $generated@@131) $generated@@134) ($generated@@89 $generated@@132 $generated@@134)))
 :weight 0
)))) (forall (($generated@@135 Int) ) (! (= (type ($generated@@81 $generated@@135)) $generated@@70)
 :pattern ( ($generated@@81 $generated@@135))
))))
(assert (forall (($generated@@136 T@U) ($generated@@137 T@U) ) (!  (=> (and (= (type $generated@@136) $generated@@2) (= (type $generated@@137) ($generated@@82 $generated@@83 $generated@@84))) ($generated@@80 $generated@@136 ($generated@@81 0) $generated@@137))
 :pattern ( ($generated@@80 $generated@@136 ($generated@@81 0) $generated@@137))
)))
(assert (forall (($generated@@139 T@U) ) (!  (=> (= (type $generated@@139) $generated@@2) ($generated@@138 $generated@@139 ($generated@@81 0)))
 :pattern ( ($generated@@138 $generated@@139 ($generated@@81 0)))
)))
(assert  (and (= ($generated@@1 $generated@@142) 14) (forall (($generated@@143 T@U) ($generated@@144 T@U) ) (! (= (type ($generated@@141 $generated@@143 $generated@@144)) $generated@@70)
 :pattern ( ($generated@@141 $generated@@143 $generated@@144))
))))
(assert (forall (($generated@@145 T@U) ($generated@@146 T@U) ($generated@@147 T@U) ) (!  (=> (and (and (and (= (type $generated@@145) $generated@@70) (= (type $generated@@146) $generated@@70)) (= (type $generated@@147) $generated@@142)) ($generated@@138 $generated@@147 ($generated@@141 $generated@@145 $generated@@146))) ($generated@@140 $generated@@147))
 :pattern ( ($generated@@140 $generated@@147) ($generated@@138 $generated@@147 ($generated@@141 $generated@@145 $generated@@146)))
)))
(assert  (and (and (= ($generated@@1 $generated@@151) 15) (forall (($generated@@152 T@U) ) (! (= (type ($generated@@149 $generated@@152)) $generated@@151)
 :pattern ( ($generated@@149 $generated@@152))
))) (forall (($generated@@153 T@U) ) (! (= (type ($generated@@150 $generated@@153)) $generated@@151)
 :pattern ( ($generated@@150 $generated@@153))
))))
(assert (forall (($generated@@154 T@U) ($generated@@155 T@U) ) (!  (=> (and (and (= (type $generated@@154) $generated@@142) (= (type $generated@@155) $generated@@142)) true) (= ($generated@@148 $generated@@154 $generated@@155)  (and (= ($generated@@149 $generated@@154) ($generated@@149 $generated@@155)) (= ($generated@@150 $generated@@154) ($generated@@150 $generated@@155)))))
 :pattern ( ($generated@@148 $generated@@154 $generated@@155))
)))
(assert  (and (forall (($generated@@158 T@U) ) (! (= (type ($generated@@156 $generated@@158)) $generated@@74)
 :pattern ( ($generated@@156 $generated@@158))
)) (= (type $generated@@157) $generated@@142)))
(assert (= ($generated@@156 $generated@@157) $generated@@63))
(assert (= (type $generated@@159) $generated@@142))
(assert (= ($generated@@156 $generated@@159) $generated@@65))
(assert (= (type $generated@@160) $generated@@142))
(assert (= ($generated@@156 $generated@@160) $generated@@66))
(assert (= (type $generated@@161) $generated@@142))
(assert (= ($generated@@156 $generated@@161) $generated@@67))
(assert (forall (($generated@@164 T@U) ) (! (= (type ($generated@@162 $generated@@164)) $generated@@70)
 :pattern ( ($generated@@162 $generated@@164))
)))
(assert (forall (($generated@@165 T@U) ($generated@@166 T@U) ) (!  (=> (and (and (= (type $generated@@165) ($generated@@82 $generated@@151 $generated@@2)) (= (type $generated@@166) $generated@@70)) ($generated@@138 $generated@@165 ($generated@@162 $generated@@166))) ($generated@@163 $generated@@165))
 :pattern ( ($generated@@138 $generated@@165 ($generated@@162 $generated@@166)))
)))
(assert  (and (and (and (and (and (and (and (forall (($generated@@173 T@T) ($generated@@174 T@T) ) (= ($generated@@1 ($generated@@169 $generated@@173 $generated@@174)) 16)) (forall (($generated@@175 T@T) ($generated@@176 T@T) ) (! (= ($generated@@170 ($generated@@169 $generated@@175 $generated@@176)) $generated@@175)
 :pattern ( ($generated@@169 $generated@@175 $generated@@176))
))) (forall (($generated@@177 T@T) ($generated@@178 T@T) ) (! (= ($generated@@171 ($generated@@169 $generated@@177 $generated@@178)) $generated@@178)
 :pattern ( ($generated@@169 $generated@@177 $generated@@178))
))) (forall (($generated@@179 T@U) ($generated@@180 T@U) ($generated@@181 T@U) ) (! (let (($generated@@182 ($generated@@171 (type $generated@@179))))
(= (type ($generated@@167 $generated@@179 $generated@@180 $generated@@181)) $generated@@182))
 :pattern ( ($generated@@167 $generated@@179 $generated@@180 $generated@@181))
))) (forall (($generated@@183 T@U) ($generated@@184 T@U) ($generated@@185 T@U) ($generated@@186 T@U) ) (! (let (($generated@@187 (type $generated@@186)))
(let (($generated@@188 (type $generated@@184)))
(= (type ($generated@@172 $generated@@183 $generated@@184 $generated@@185 $generated@@186)) ($generated@@169 $generated@@188 $generated@@187))))
 :pattern ( ($generated@@172 $generated@@183 $generated@@184 $generated@@185 $generated@@186))
))) (forall (($generated@@189 T@U) ($generated@@190 T@U) ($generated@@191 T@U) ($generated@@192 T@U) ) (! (let (($generated@@193 ($generated@@171 (type $generated@@189))))
 (=> (= (type $generated@@192) $generated@@193) (= ($generated@@167 ($generated@@172 $generated@@189 $generated@@190 $generated@@191 $generated@@192) $generated@@190 $generated@@191) $generated@@192)))
 :weight 0
))) (and (and (forall (($generated@@194 T@U) ($generated@@195 T@U) ($generated@@196 T@U) ($generated@@197 T@U) ($generated@@198 T@U) ($generated@@199 T@U) ) (!  (or (= $generated@@196 $generated@@198) (= ($generated@@167 ($generated@@172 $generated@@195 $generated@@196 $generated@@197 $generated@@194) $generated@@198 $generated@@199) ($generated@@167 $generated@@195 $generated@@198 $generated@@199)))
 :weight 0
)) (forall (($generated@@200 T@U) ($generated@@201 T@U) ($generated@@202 T@U) ($generated@@203 T@U) ($generated@@204 T@U) ($generated@@205 T@U) ) (!  (or (= $generated@@203 $generated@@205) (= ($generated@@167 ($generated@@172 $generated@@201 $generated@@202 $generated@@203 $generated@@200) $generated@@204 $generated@@205) ($generated@@167 $generated@@201 $generated@@204 $generated@@205)))
 :weight 0
))) (forall (($generated@@206 T@U) ($generated@@207 T@U) ($generated@@208 T@U) ($generated@@209 T@U) ($generated@@210 T@U) ($generated@@211 T@U) ) (!  (or true (= ($generated@@167 ($generated@@172 $generated@@207 $generated@@208 $generated@@209 $generated@@206) $generated@@210 $generated@@211) ($generated@@167 $generated@@207 $generated@@210 $generated@@211)))
 :weight 0
)))) (forall (($generated@@212 T@U) ($generated@@213 T@U) ($generated@@214 T@U) ($generated@@215 Bool) ) (! (= (type ($generated@@168 $generated@@212 $generated@@213 $generated@@214 $generated@@215)) ($generated@@169 $generated@@83 $generated@@4))
 :pattern ( ($generated@@168 $generated@@212 $generated@@213 $generated@@214 $generated@@215))
))))
(assert (forall (($generated@@216 T@U) ($generated@@217 T@U) ($generated@@218 T@U) ($generated@@219 Bool) ($generated@@220 T@U) ($generated@@221 T@U) ) (! (let (($generated@@222 ($generated@@73 (type $generated@@221))))
 (=> (and (and (and (and (= (type $generated@@216) $generated@@83) (= (type $generated@@217) ($generated@@82 $generated@@83 $generated@@84))) (= (type $generated@@218) ($generated@@72 $generated@@4))) (= (type $generated@@220) $generated@@83)) (= (type $generated@@221) ($generated@@72 $generated@@222))) (= ($generated@@0 ($generated@@167 ($generated@@168 $generated@@216 $generated@@217 $generated@@218 $generated@@219) $generated@@220 $generated@@221))  (=> (and (not (= $generated@@220 $generated@@216)) ($generated@@0 ($generated@@89 ($generated@@87 $generated@@217 $generated@@220) $generated@@218))) $generated@@219))))
 :pattern ( ($generated@@167 ($generated@@168 $generated@@216 $generated@@217 $generated@@218 $generated@@219) $generated@@220 $generated@@221))
)))
(assert (forall (($generated@@225 T@U) ($generated@@226 T@U) ) (! (= (type ($generated@@223 $generated@@225 $generated@@226)) $generated@@142)
 :pattern ( ($generated@@223 $generated@@225 $generated@@226))
)))
(assert (forall (($generated@@227 T@U) ($generated@@228 T@U) ($generated@@229 T@U) ($generated@@230 T@U) ) (!  (=> (and (and (and (= (type $generated@@227) $generated@@70) (= (type $generated@@228) $generated@@70)) (= (type $generated@@229) $generated@@151)) (= (type $generated@@230) $generated@@151)) (= ($generated@@138 ($generated@@223 $generated@@229 $generated@@230) ($generated@@141 $generated@@227 $generated@@228))  (and ($generated@@224 $generated@@229 $generated@@227) ($generated@@224 $generated@@230 $generated@@228))))
 :pattern ( ($generated@@138 ($generated@@223 $generated@@229 $generated@@230) ($generated@@141 $generated@@227 $generated@@228)))
)))
(assert (= (type $generated@@231) $generated@@70))
(assert ($generated@@138 $generated@@157 $generated@@231))
(assert ($generated@@138 $generated@@159 $generated@@231))
(assert ($generated@@138 $generated@@160 $generated@@231))
(assert ($generated@@138 $generated@@161 $generated@@231))
(assert (forall (($generated@@233 T@U) ) (!  (=> (and (= (type $generated@@233) ($generated@@82 $generated@@83 $generated@@84)) ($generated@@232 $generated@@233)) ($generated@@80 $generated@@157 $generated@@231 $generated@@233))
 :pattern ( ($generated@@80 $generated@@157 $generated@@231 $generated@@233))
)))
(assert (forall (($generated@@234 T@U) ) (!  (=> (and (= (type $generated@@234) ($generated@@82 $generated@@83 $generated@@84)) ($generated@@232 $generated@@234)) ($generated@@80 $generated@@159 $generated@@231 $generated@@234))
 :pattern ( ($generated@@80 $generated@@159 $generated@@231 $generated@@234))
)))
(assert (forall (($generated@@235 T@U) ) (!  (=> (and (= (type $generated@@235) ($generated@@82 $generated@@83 $generated@@84)) ($generated@@232 $generated@@235)) ($generated@@80 $generated@@160 $generated@@231 $generated@@235))
 :pattern ( ($generated@@80 $generated@@160 $generated@@231 $generated@@235))
)))
(assert (forall (($generated@@236 T@U) ) (!  (=> (and (= (type $generated@@236) ($generated@@82 $generated@@83 $generated@@84)) ($generated@@232 $generated@@236)) ($generated@@80 $generated@@161 $generated@@231 $generated@@236))
 :pattern ( ($generated@@80 $generated@@161 $generated@@231 $generated@@236))
)))
(assert (forall (($generated@@237 T@U) ($generated@@238 T@U) ) (!  (=> (and (= (type $generated@@237) $generated@@142) (= (type $generated@@238) $generated@@142)) (= ($generated@@148 $generated@@237 $generated@@238) (= $generated@@237 $generated@@238)))
 :pattern ( ($generated@@148 $generated@@237 $generated@@238))
)))
(assert (forall (($generated@@240 T@U) ($generated@@241 T@U) ) (!  (=> (and (= (type $generated@@240) $generated@@142) (= (type $generated@@241) $generated@@142)) (= ($generated@@239 $generated@@240 $generated@@241) (= $generated@@240 $generated@@241)))
 :pattern ( ($generated@@239 $generated@@240 $generated@@241))
)))
(assert (forall (($generated@@243 T@U) ) (! (= (type ($generated@@242 $generated@@243)) $generated@@70)
 :pattern ( ($generated@@242 $generated@@243))
)))
(assert (forall (($generated@@244 T@U) ($generated@@245 T@U) ) (!  (=> (and (= (type $generated@@244) ($generated@@82 $generated@@151 $generated@@4)) (= (type $generated@@245) $generated@@70)) (= ($generated@@138 $generated@@244 ($generated@@242 $generated@@245)) (forall (($generated@@246 T@U) ) (!  (=> (and (= (type $generated@@246) $generated@@151) ($generated@@0 ($generated@@87 $generated@@244 $generated@@246))) ($generated@@224 $generated@@246 $generated@@245))
 :pattern ( ($generated@@87 $generated@@244 $generated@@246))
))))
 :pattern ( ($generated@@138 $generated@@244 ($generated@@242 $generated@@245)))
)))
(assert (forall (($generated@@248 T@U) ) (! (= (type ($generated@@247 $generated@@248)) $generated@@70)
 :pattern ( ($generated@@247 $generated@@248))
)))
(assert (forall (($generated@@249 T@U) ($generated@@250 T@U) ) (!  (=> (and (= (type $generated@@249) ($generated@@82 $generated@@151 $generated@@4)) (= (type $generated@@250) $generated@@70)) (= ($generated@@138 $generated@@249 ($generated@@247 $generated@@250)) (forall (($generated@@251 T@U) ) (!  (=> (and (= (type $generated@@251) $generated@@151) ($generated@@0 ($generated@@87 $generated@@249 $generated@@251))) ($generated@@224 $generated@@251 $generated@@250))
 :pattern ( ($generated@@87 $generated@@249 $generated@@251))
))))
 :pattern ( ($generated@@138 $generated@@249 ($generated@@247 $generated@@250)))
)))
(assert (forall (($generated@@253 T@U) ) (! (let (($generated@@254 (type $generated@@253)))
(= (type ($generated@@252 $generated@@253)) $generated@@254))
 :pattern ( ($generated@@252 $generated@@253))
)))
(assert (forall (($generated@@255 T@U) ) (! (= ($generated@@252 $generated@@255) $generated@@255)
 :pattern ( ($generated@@252 $generated@@255))
)))
(assert (forall (($generated@@257 T@U) ($generated@@258 T@U) ) (!  (=> (and (and (= (type $generated@@257) $generated@@142) (= (type $generated@@258) $generated@@142)) (and ($generated@@256 $generated@@257) ($generated@@256 $generated@@258))) (= ($generated@@239 $generated@@257 $generated@@258) true))
 :pattern ( ($generated@@239 $generated@@257 $generated@@258) ($generated@@256 $generated@@257))
 :pattern ( ($generated@@239 $generated@@257 $generated@@258) ($generated@@256 $generated@@258))
)))
(assert (forall (($generated@@260 T@U) ($generated@@261 T@U) ) (!  (=> (and (and (= (type $generated@@260) $generated@@142) (= (type $generated@@261) $generated@@142)) (and ($generated@@259 $generated@@260) ($generated@@259 $generated@@261))) (= ($generated@@239 $generated@@260 $generated@@261) true))
 :pattern ( ($generated@@239 $generated@@260 $generated@@261) ($generated@@259 $generated@@260))
 :pattern ( ($generated@@239 $generated@@260 $generated@@261) ($generated@@259 $generated@@261))
)))
(assert (forall (($generated@@263 T@U) ($generated@@264 T@U) ) (!  (=> (and (and (= (type $generated@@263) $generated@@142) (= (type $generated@@264) $generated@@142)) (and ($generated@@262 $generated@@263) ($generated@@262 $generated@@264))) (= ($generated@@239 $generated@@263 $generated@@264) true))
 :pattern ( ($generated@@239 $generated@@263 $generated@@264) ($generated@@262 $generated@@263))
 :pattern ( ($generated@@239 $generated@@263 $generated@@264) ($generated@@262 $generated@@264))
)))
(assert (forall (($generated@@266 T@U) ($generated@@267 T@U) ) (!  (=> (and (and (= (type $generated@@266) $generated@@142) (= (type $generated@@267) $generated@@142)) (and ($generated@@265 $generated@@266) ($generated@@265 $generated@@267))) (= ($generated@@239 $generated@@266 $generated@@267) true))
 :pattern ( ($generated@@239 $generated@@266 $generated@@267) ($generated@@265 $generated@@266))
 :pattern ( ($generated@@239 $generated@@266 $generated@@267) ($generated@@265 $generated@@267))
)))
(assert (forall (($generated@@269 T@U) ($generated@@270 T@U) ($generated@@271 T@U) ($generated@@272 T@U) ($generated@@273 T@U) ) (!  (=> (and (and (and (and (and (= (type $generated@@269) $generated@@70) (= (type $generated@@270) $generated@@70)) (= (type $generated@@271) $generated@@151)) (= (type $generated@@272) $generated@@151)) (= (type $generated@@273) ($generated@@82 $generated@@83 $generated@@84))) ($generated@@232 $generated@@273)) (= ($generated@@80 ($generated@@223 $generated@@271 $generated@@272) ($generated@@141 $generated@@269 $generated@@270) $generated@@273)  (and ($generated@@268 $generated@@271 $generated@@269 $generated@@273) ($generated@@268 $generated@@272 $generated@@270 $generated@@273))))
 :pattern ( ($generated@@80 ($generated@@223 $generated@@271 $generated@@272) ($generated@@141 $generated@@269 $generated@@270) $generated@@273))
)))
(assert (forall (($generated@@274 T@U) ) (!  (=> (= (type $generated@@274) $generated@@142) (= ($generated@@140 $generated@@274) (= ($generated@@156 $generated@@274) $generated@@61)))
 :pattern ( ($generated@@140 $generated@@274))
)))
(assert (forall (($generated@@275 T@U) ) (!  (=> (= (type $generated@@275) $generated@@142) (= ($generated@@256 $generated@@275) (= ($generated@@156 $generated@@275) $generated@@63)))
 :pattern ( ($generated@@256 $generated@@275))
)))
(assert (forall (($generated@@276 T@U) ) (!  (=> (= (type $generated@@276) $generated@@142) (= ($generated@@259 $generated@@276) (= ($generated@@156 $generated@@276) $generated@@65)))
 :pattern ( ($generated@@259 $generated@@276))
)))
(assert (forall (($generated@@277 T@U) ) (!  (=> (= (type $generated@@277) $generated@@142) (= ($generated@@262 $generated@@277) (= ($generated@@156 $generated@@277) $generated@@66)))
 :pattern ( ($generated@@262 $generated@@277))
)))
(assert (forall (($generated@@278 T@U) ) (!  (=> (= (type $generated@@278) $generated@@142) (= ($generated@@265 $generated@@278) (= ($generated@@156 $generated@@278) $generated@@67)))
 :pattern ( ($generated@@265 $generated@@278))
)))
(assert (forall (($generated@@279 T@U) ) (!  (=> (and (= (type $generated@@279) $generated@@142) ($generated@@140 $generated@@279)) (exists (($generated@@280 T@U) ($generated@@281 T@U) ) (!  (and (and (= (type $generated@@280) $generated@@151) (= (type $generated@@281) $generated@@151)) (= $generated@@279 ($generated@@223 $generated@@280 $generated@@281)))
 :no-pattern (type $generated@@280)
 :no-pattern (type $generated@@281)
 :no-pattern ($generated $generated@@280)
 :no-pattern ($generated@@0 $generated@@280)
 :no-pattern ($generated $generated@@281)
 :no-pattern ($generated@@0 $generated@@281)
)))
 :pattern ( ($generated@@140 $generated@@279))
)))
(assert  (and (and (forall (($generated@@286 T@T) ) (= ($generated@@1 ($generated@@284 $generated@@286)) 17)) (forall (($generated@@287 T@T) ) (! (= ($generated@@285 ($generated@@284 $generated@@287)) $generated@@287)
 :pattern ( ($generated@@284 $generated@@287))
))) (forall (($generated@@288 T@T) ) (! (= (type ($generated@@282 $generated@@288)) ($generated@@284 $generated@@288))
 :pattern ( ($generated@@282 $generated@@288))
))))
(assert (forall (($generated@@289 T@T) ) (! (= ($generated@@283 ($generated@@282 $generated@@289)) 0)
 :pattern ( ($generated@@282 $generated@@289))
)))
(assert (forall (($generated@@290 T@U) ) (!  (=> (and (= (type $generated@@290) $generated@@142) ($generated@@256 $generated@@290)) (= $generated@@290 $generated@@157))
 :pattern ( ($generated@@256 $generated@@290))
)))
(assert (forall (($generated@@291 T@U) ) (!  (=> (and (= (type $generated@@291) $generated@@142) ($generated@@259 $generated@@291)) (= $generated@@291 $generated@@159))
 :pattern ( ($generated@@259 $generated@@291))
)))
(assert (forall (($generated@@292 T@U) ) (!  (=> (and (= (type $generated@@292) $generated@@142) ($generated@@262 $generated@@292)) (= $generated@@292 $generated@@160))
 :pattern ( ($generated@@262 $generated@@292))
)))
(assert (forall (($generated@@293 T@U) ) (!  (=> (and (= (type $generated@@293) $generated@@142) ($generated@@265 $generated@@293)) (= $generated@@293 $generated@@161))
 :pattern ( ($generated@@265 $generated@@293))
)))
(assert (forall (($generated@@295 T@U) ) (! (= (type ($generated@@294 $generated@@295)) $generated@@151)
 :pattern ( ($generated@@294 $generated@@295))
)))
(assert (forall (($generated@@296 T@U) ($generated@@297 T@U) ($generated@@298 T@U) ) (!  (=> (and (= (type $generated@@297) $generated@@70) (= (type $generated@@298) ($generated@@82 $generated@@83 $generated@@84))) (= ($generated@@268 ($generated@@294 $generated@@296) $generated@@297 $generated@@298) ($generated@@80 $generated@@296 $generated@@297 $generated@@298)))
 :pattern ( ($generated@@268 ($generated@@294 $generated@@296) $generated@@297 $generated@@298))
)))
(assert (forall (($generated@@301 T@T) ) (! (= (type ($generated@@300 $generated@@301)) ($generated@@82 $generated@@301 $generated@@2))
 :pattern ( ($generated@@300 $generated@@301))
)))
(assert (forall (($generated@@302 T@U) ) (! (let (($generated@@303 ($generated@@85 (type $generated@@302))))
 (=> (= (type $generated@@302) ($generated@@82 $generated@@303 $generated@@2)) (and (= (= ($generated@@299 $generated@@302) 0) (= $generated@@302 ($generated@@300 $generated@@303))) (=> (not (= ($generated@@299 $generated@@302) 0)) (exists (($generated@@304 T@U) ) (!  (and (= (type $generated@@304) $generated@@303) (< 0 ($generated ($generated@@87 $generated@@302 $generated@@304))))
 :no-pattern (type $generated@@304)
 :no-pattern ($generated $generated@@304)
 :no-pattern ($generated@@0 $generated@@304)
))))))
 :pattern ( ($generated@@299 $generated@@302))
)))
(assert  (and (and (and (and (forall (($generated@@310 T@T) ($generated@@311 T@T) ) (= ($generated@@1 ($generated@@307 $generated@@310 $generated@@311)) 18)) (forall (($generated@@312 T@T) ($generated@@313 T@T) ) (! (= ($generated@@308 ($generated@@307 $generated@@312 $generated@@313)) $generated@@312)
 :pattern ( ($generated@@307 $generated@@312 $generated@@313))
))) (forall (($generated@@314 T@T) ($generated@@315 T@T) ) (! (= ($generated@@309 ($generated@@307 $generated@@314 $generated@@315)) $generated@@315)
 :pattern ( ($generated@@307 $generated@@314 $generated@@315))
))) (forall (($generated@@316 T@U) ) (! (let (($generated@@317 ($generated@@308 (type $generated@@316))))
(= (type ($generated@@305 $generated@@316)) ($generated@@82 $generated@@317 $generated@@4)))
 :pattern ( ($generated@@305 $generated@@316))
))) (forall (($generated@@318 T@T) ($generated@@319 T@T) ) (! (= (type ($generated@@306 $generated@@318 $generated@@319)) ($generated@@307 $generated@@318 $generated@@319))
 :pattern ( ($generated@@306 $generated@@318 $generated@@319))
))))
(assert (forall (($generated@@320 T@U) ($generated@@321 T@T) ) (! (let (($generated@@322 (type $generated@@320)))
 (not ($generated@@0 ($generated@@87 ($generated@@305 ($generated@@306 $generated@@322 $generated@@321)) $generated@@320))))
 :pattern ( (let (($generated@@322 (type $generated@@320)))
($generated@@87 ($generated@@305 ($generated@@306 $generated@@322 $generated@@321)) $generated@@320)))
)))
(assert  (and (and (and (and (forall (($generated@@328 T@T) ($generated@@329 T@T) ) (= ($generated@@1 ($generated@@325 $generated@@328 $generated@@329)) 19)) (forall (($generated@@330 T@T) ($generated@@331 T@T) ) (! (= ($generated@@326 ($generated@@325 $generated@@330 $generated@@331)) $generated@@330)
 :pattern ( ($generated@@325 $generated@@330 $generated@@331))
))) (forall (($generated@@332 T@T) ($generated@@333 T@T) ) (! (= ($generated@@327 ($generated@@325 $generated@@332 $generated@@333)) $generated@@333)
 :pattern ( ($generated@@325 $generated@@332 $generated@@333))
))) (forall (($generated@@334 T@U) ) (! (let (($generated@@335 ($generated@@326 (type $generated@@334))))
(= (type ($generated@@323 $generated@@334)) ($generated@@82 $generated@@335 $generated@@4)))
 :pattern ( ($generated@@323 $generated@@334))
))) (forall (($generated@@336 T@T) ($generated@@337 T@T) ) (! (= (type ($generated@@324 $generated@@336 $generated@@337)) ($generated@@325 $generated@@336 $generated@@337))
 :pattern ( ($generated@@324 $generated@@336 $generated@@337))
))))
(assert (forall (($generated@@338 T@U) ($generated@@339 T@T) ) (! (let (($generated@@340 (type $generated@@338)))
 (not ($generated@@0 ($generated@@87 ($generated@@323 ($generated@@324 $generated@@340 $generated@@339)) $generated@@338))))
 :pattern ( (let (($generated@@340 (type $generated@@338)))
($generated@@87 ($generated@@323 ($generated@@324 $generated@@340 $generated@@339)) $generated@@338)))
)))
(assert (forall (($generated@@341 T@U) ) (! (let (($generated@@342 ($generated@@85 (type $generated@@341))))
 (=> (= (type $generated@@341) ($generated@@82 $generated@@342 $generated@@2)) (= ($generated@@163 $generated@@341) (forall (($generated@@343 T@U) ) (!  (=> (= (type $generated@@343) $generated@@342) (and (<= 0 ($generated ($generated@@87 $generated@@341 $generated@@343))) (<= ($generated ($generated@@87 $generated@@341 $generated@@343)) ($generated@@299 $generated@@341))))
 :pattern ( ($generated@@87 $generated@@341 $generated@@343))
)))))
 :pattern ( ($generated@@163 $generated@@341))
)))
(assert (forall (($generated@@345 T@T) ($generated@@346 T@U) ) (! (= (type ($generated@@344 $generated@@345 $generated@@346)) $generated@@345)
 :pattern ( ($generated@@344 $generated@@345 $generated@@346))
)))
(assert (forall (($generated@@347 T@U) ) (!  (=> (and (= (type $generated@@347) $generated@@151) ($generated@@224 $generated@@347 $generated@@231)) (and (= ($generated@@294 ($generated@@344 $generated@@142 $generated@@347)) $generated@@347) ($generated@@138 ($generated@@344 $generated@@142 $generated@@347) $generated@@231)))
 :pattern ( ($generated@@224 $generated@@347 $generated@@231))
)))
(assert (forall (($generated@@348 T@U) ) (! (let (($generated@@349 ($generated@@309 (type $generated@@348))))
(let (($generated@@350 ($generated@@308 (type $generated@@348))))
 (=> (= (type $generated@@348) ($generated@@307 $generated@@350 $generated@@349)) (or (= $generated@@348 ($generated@@306 $generated@@350 $generated@@349)) (exists (($generated@@351 T@U) ) (!  (and (= (type $generated@@351) $generated@@350) ($generated@@0 ($generated@@87 ($generated@@305 $generated@@348) $generated@@351)))
 :no-pattern (type $generated@@351)
 :no-pattern ($generated $generated@@351)
 :no-pattern ($generated@@0 $generated@@351)
))))))
 :pattern ( ($generated@@305 $generated@@348))
)))
(assert (forall (($generated@@353 T@U) ) (! (let (($generated@@354 ($generated@@309 (type $generated@@353))))
(= (type ($generated@@352 $generated@@353)) ($generated@@82 $generated@@354 $generated@@4)))
 :pattern ( ($generated@@352 $generated@@353))
)))
(assert (forall (($generated@@355 T@U) ) (! (let (($generated@@356 ($generated@@309 (type $generated@@355))))
(let (($generated@@357 ($generated@@308 (type $generated@@355))))
 (=> (= (type $generated@@355) ($generated@@307 $generated@@357 $generated@@356)) (or (= $generated@@355 ($generated@@306 $generated@@357 $generated@@356)) (exists (($generated@@358 T@U) ) (!  (and (= (type $generated@@358) $generated@@356) ($generated@@0 ($generated@@87 ($generated@@352 $generated@@355) $generated@@358)))
 :no-pattern (type $generated@@358)
 :no-pattern ($generated $generated@@358)
 :no-pattern ($generated@@0 $generated@@358)
))))))
 :pattern ( ($generated@@352 $generated@@355))
)))
(assert (forall (($generated@@359 T@U) ) (! (let (($generated@@360 ($generated@@327 (type $generated@@359))))
(let (($generated@@361 ($generated@@326 (type $generated@@359))))
 (=> (= (type $generated@@359) ($generated@@325 $generated@@361 $generated@@360)) (or (= $generated@@359 ($generated@@324 $generated@@361 $generated@@360)) (exists (($generated@@362 T@U) ) (!  (and (= (type $generated@@362) $generated@@361) ($generated@@0 ($generated@@87 ($generated@@323 $generated@@359) $generated@@362)))
 :no-pattern (type $generated@@362)
 :no-pattern ($generated $generated@@362)
 :no-pattern ($generated@@0 $generated@@362)
))))))
 :pattern ( ($generated@@323 $generated@@359))
)))
(assert (forall (($generated@@364 T@U) ) (! (let (($generated@@365 ($generated@@327 (type $generated@@364))))
(= (type ($generated@@363 $generated@@364)) ($generated@@82 $generated@@365 $generated@@4)))
 :pattern ( ($generated@@363 $generated@@364))
)))
(assert (forall (($generated@@366 T@U) ) (! (let (($generated@@367 ($generated@@327 (type $generated@@366))))
(let (($generated@@368 ($generated@@326 (type $generated@@366))))
 (=> (= (type $generated@@366) ($generated@@325 $generated@@368 $generated@@367)) (or (= $generated@@366 ($generated@@324 $generated@@368 $generated@@367)) (exists (($generated@@369 T@U) ) (!  (and (= (type $generated@@369) $generated@@367) ($generated@@0 ($generated@@87 ($generated@@363 $generated@@366) $generated@@369)))
 :no-pattern (type $generated@@369)
 :no-pattern ($generated $generated@@369)
 :no-pattern ($generated@@0 $generated@@369)
))))))
 :pattern ( ($generated@@363 $generated@@366))
)))
(assert (forall (($generated@@370 T@U) ($generated@@371 T@U) ) (!  (=> (and (= (type $generated@@370) ($generated@@82 $generated@@151 $generated@@2)) (= (type $generated@@371) $generated@@70)) (= ($generated@@138 $generated@@370 ($generated@@162 $generated@@371)) (forall (($generated@@372 T@U) ) (!  (=> (and (= (type $generated@@372) $generated@@151) (< 0 ($generated ($generated@@87 $generated@@370 $generated@@372)))) ($generated@@224 $generated@@372 $generated@@371))
 :pattern ( ($generated@@87 $generated@@370 $generated@@372))
))))
 :pattern ( ($generated@@138 $generated@@370 ($generated@@162 $generated@@371)))
)))
(assert (forall (($generated@@373 T@U) ($generated@@374 T@U) ($generated@@375 T@U) ) (!  (=> (and (and (= (type $generated@@373) ($generated@@82 $generated@@151 $generated@@4)) (= (type $generated@@374) $generated@@70)) (= (type $generated@@375) ($generated@@82 $generated@@83 $generated@@84))) (= ($generated@@80 $generated@@373 ($generated@@242 $generated@@374) $generated@@375) (forall (($generated@@376 T@U) ) (!  (=> (and (= (type $generated@@376) $generated@@151) ($generated@@0 ($generated@@87 $generated@@373 $generated@@376))) ($generated@@268 $generated@@376 $generated@@374 $generated@@375))
 :pattern ( ($generated@@87 $generated@@373 $generated@@376))
))))
 :pattern ( ($generated@@80 $generated@@373 ($generated@@242 $generated@@374) $generated@@375))
)))
(assert (forall (($generated@@377 T@U) ($generated@@378 T@U) ($generated@@379 T@U) ) (!  (=> (and (and (= (type $generated@@377) ($generated@@82 $generated@@151 $generated@@4)) (= (type $generated@@378) $generated@@70)) (= (type $generated@@379) ($generated@@82 $generated@@83 $generated@@84))) (= ($generated@@80 $generated@@377 ($generated@@247 $generated@@378) $generated@@379) (forall (($generated@@380 T@U) ) (!  (=> (and (= (type $generated@@380) $generated@@151) ($generated@@0 ($generated@@87 $generated@@377 $generated@@380))) ($generated@@268 $generated@@380 $generated@@378 $generated@@379))
 :pattern ( ($generated@@87 $generated@@377 $generated@@380))
))))
 :pattern ( ($generated@@80 $generated@@377 ($generated@@247 $generated@@378) $generated@@379))
)))
(assert (forall (($generated@@381 T@U) ) (! (let (($generated@@382 (type $generated@@381)))
(= ($generated ($generated@@87 ($generated@@300 $generated@@382) $generated@@381)) 0))
 :pattern ( (let (($generated@@382 (type $generated@@381)))
($generated@@87 ($generated@@300 $generated@@382) $generated@@381)))
)))
(assert  (and (forall (($generated@@385 T@U) ) (! (= (type ($generated@@383 $generated@@385)) ($generated@@82 $generated@@151 $generated@@4))
 :pattern ( ($generated@@383 $generated@@385))
)) (forall (($generated@@386 T@U) ) (! (let (($generated@@387 ($generated@@309 (type $generated@@386))))
(let (($generated@@388 ($generated@@308 (type $generated@@386))))
(= (type ($generated@@384 $generated@@386)) ($generated@@82 $generated@@388 $generated@@387))))
 :pattern ( ($generated@@384 $generated@@386))
))))
(assert (forall (($generated@@389 T@U) ($generated@@390 T@U) ) (!  (=> (and (= (type $generated@@389) ($generated@@307 $generated@@151 $generated@@151)) (= (type $generated@@390) $generated@@151)) (= ($generated@@0 ($generated@@87 ($generated@@383 $generated@@389) $generated@@390))  (and ($generated@@0 ($generated@@87 ($generated@@305 $generated@@389) ($generated@@149 ($generated@@344 $generated@@142 $generated@@390)))) (= ($generated@@87 ($generated@@384 $generated@@389) ($generated@@149 ($generated@@344 $generated@@142 $generated@@390))) ($generated@@150 ($generated@@344 $generated@@142 $generated@@390))))))
 :pattern ( ($generated@@87 ($generated@@383 $generated@@389) $generated@@390))
)))
(assert  (and (forall (($generated@@393 T@U) ) (! (= (type ($generated@@391 $generated@@393)) ($generated@@82 $generated@@151 $generated@@4))
 :pattern ( ($generated@@391 $generated@@393))
)) (forall (($generated@@394 T@U) ) (! (let (($generated@@395 ($generated@@327 (type $generated@@394))))
(let (($generated@@396 ($generated@@326 (type $generated@@394))))
(= (type ($generated@@392 $generated@@394)) ($generated@@82 $generated@@396 $generated@@395))))
 :pattern ( ($generated@@392 $generated@@394))
))))
(assert (forall (($generated@@397 T@U) ($generated@@398 T@U) ) (!  (=> (and (= (type $generated@@397) ($generated@@325 $generated@@151 $generated@@151)) (= (type $generated@@398) $generated@@151)) (= ($generated@@0 ($generated@@87 ($generated@@391 $generated@@397) $generated@@398))  (and ($generated@@0 ($generated@@87 ($generated@@323 $generated@@397) ($generated@@149 ($generated@@344 $generated@@142 $generated@@398)))) (= ($generated@@87 ($generated@@392 $generated@@397) ($generated@@149 ($generated@@344 $generated@@142 $generated@@398))) ($generated@@150 ($generated@@344 $generated@@142 $generated@@398))))))
 :pattern ( ($generated@@87 ($generated@@391 $generated@@397) $generated@@398))
)))
(assert (forall (($generated@@399 T@U) ($generated@@400 T@U) ) (! (let (($generated@@401 (type $generated@@400)))
(let (($generated@@402 ($generated@@308 (type $generated@@399))))
 (=> (= (type $generated@@399) ($generated@@307 $generated@@402 $generated@@401)) (= ($generated@@0 ($generated@@87 ($generated@@352 $generated@@399) $generated@@400)) (exists (($generated@@403 T@U) ) (!  (and (= (type $generated@@403) $generated@@402) (and ($generated@@0 ($generated@@87 ($generated@@305 $generated@@399) $generated@@403)) (= $generated@@400 ($generated@@87 ($generated@@384 $generated@@399) $generated@@403))))
 :pattern ( ($generated@@87 ($generated@@305 $generated@@399) $generated@@403))
 :pattern ( ($generated@@87 ($generated@@384 $generated@@399) $generated@@403))
))))))
 :pattern ( ($generated@@87 ($generated@@352 $generated@@399) $generated@@400))
)))
(assert (forall (($generated@@404 T@U) ($generated@@405 T@U) ) (! (let (($generated@@406 (type $generated@@405)))
(let (($generated@@407 ($generated@@326 (type $generated@@404))))
 (=> (= (type $generated@@404) ($generated@@325 $generated@@407 $generated@@406)) (= ($generated@@0 ($generated@@87 ($generated@@363 $generated@@404) $generated@@405)) (exists (($generated@@408 T@U) ) (!  (and (= (type $generated@@408) $generated@@407) (and ($generated@@0 ($generated@@87 ($generated@@323 $generated@@404) $generated@@408)) (= $generated@@405 ($generated@@87 ($generated@@392 $generated@@404) $generated@@408))))
 :pattern ( ($generated@@87 ($generated@@323 $generated@@404) $generated@@408))
 :pattern ( ($generated@@87 ($generated@@392 $generated@@404) $generated@@408))
))))))
 :pattern ( ($generated@@87 ($generated@@363 $generated@@404) $generated@@405))
)))
(assert (forall (($generated@@410 T@U) ($generated@@411 T@U) ) (! (= (type ($generated@@409 $generated@@410 $generated@@411)) $generated@@70)
 :pattern ( ($generated@@409 $generated@@410 $generated@@411))
)))
(assert (forall (($generated@@412 T@U) ($generated@@413 T@U) ($generated@@414 T@U) ($generated@@415 T@U) ) (!  (=> (and (and (and (= (type $generated@@412) ($generated@@307 $generated@@151 $generated@@151)) (= (type $generated@@413) $generated@@70)) (= (type $generated@@414) $generated@@70)) (= (type $generated@@415) ($generated@@82 $generated@@83 $generated@@84))) (= ($generated@@80 $generated@@412 ($generated@@409 $generated@@413 $generated@@414) $generated@@415) (forall (($generated@@416 T@U) ) (!  (=> (and (= (type $generated@@416) $generated@@151) ($generated@@0 ($generated@@87 ($generated@@305 $generated@@412) $generated@@416))) (and ($generated@@268 ($generated@@87 ($generated@@384 $generated@@412) $generated@@416) $generated@@414 $generated@@415) ($generated@@268 $generated@@416 $generated@@413 $generated@@415)))
 :pattern ( ($generated@@87 ($generated@@384 $generated@@412) $generated@@416))
 :pattern ( ($generated@@87 ($generated@@305 $generated@@412) $generated@@416))
))))
 :pattern ( ($generated@@80 $generated@@412 ($generated@@409 $generated@@413 $generated@@414) $generated@@415))
)))
(assert (forall (($generated@@418 T@U) ($generated@@419 T@U) ) (! (= (type ($generated@@417 $generated@@418 $generated@@419)) $generated@@70)
 :pattern ( ($generated@@417 $generated@@418 $generated@@419))
)))
(assert (forall (($generated@@420 T@U) ($generated@@421 T@U) ($generated@@422 T@U) ($generated@@423 T@U) ) (!  (=> (and (and (and (= (type $generated@@420) ($generated@@325 $generated@@151 $generated@@151)) (= (type $generated@@421) $generated@@70)) (= (type $generated@@422) $generated@@70)) (= (type $generated@@423) ($generated@@82 $generated@@83 $generated@@84))) (= ($generated@@80 $generated@@420 ($generated@@417 $generated@@421 $generated@@422) $generated@@423) (forall (($generated@@424 T@U) ) (!  (=> (and (= (type $generated@@424) $generated@@151) ($generated@@0 ($generated@@87 ($generated@@323 $generated@@420) $generated@@424))) (and ($generated@@268 ($generated@@87 ($generated@@392 $generated@@420) $generated@@424) $generated@@422 $generated@@423) ($generated@@268 $generated@@424 $generated@@421 $generated@@423)))
 :pattern ( ($generated@@87 ($generated@@392 $generated@@420) $generated@@424))
 :pattern ( ($generated@@87 ($generated@@323 $generated@@420) $generated@@424))
))))
 :pattern ( ($generated@@80 $generated@@420 ($generated@@417 $generated@@421 $generated@@422) $generated@@423))
)))
(assert (forall (($generated@@426 T@T) ) (! (= (type ($generated@@425 $generated@@426)) ($generated@@82 $generated@@426 $generated@@4))
 :pattern ( ($generated@@425 $generated@@426))
)))
(assert (forall (($generated@@427 T@U) ) (! (let (($generated@@428 ($generated@@327 (type $generated@@427))))
(let (($generated@@429 ($generated@@326 (type $generated@@427))))
 (=> (= (type $generated@@427) ($generated@@325 $generated@@429 $generated@@428)) (= (= $generated@@427 ($generated@@324 $generated@@429 $generated@@428)) (= ($generated@@323 $generated@@427) ($generated@@425 $generated@@429))))))
 :pattern ( ($generated@@323 $generated@@427))
)))
(assert (forall (($generated@@430 T@U) ) (! (let (($generated@@431 ($generated@@327 (type $generated@@430))))
(let (($generated@@432 ($generated@@326 (type $generated@@430))))
 (=> (= (type $generated@@430) ($generated@@325 $generated@@432 $generated@@431)) (= (= $generated@@430 ($generated@@324 $generated@@432 $generated@@431)) (= ($generated@@363 $generated@@430) ($generated@@425 $generated@@431))))))
 :pattern ( ($generated@@363 $generated@@430))
)))
(assert (forall (($generated@@433 T@U) ) (! (let (($generated@@434 ($generated@@327 (type $generated@@433))))
(let (($generated@@435 ($generated@@326 (type $generated@@433))))
 (=> (= (type $generated@@433) ($generated@@325 $generated@@435 $generated@@434)) (= (= $generated@@433 ($generated@@324 $generated@@435 $generated@@434)) (= ($generated@@391 $generated@@433) ($generated@@425 $generated@@151))))))
 :pattern ( ($generated@@391 $generated@@433))
)))
(assert (forall (($generated@@436 T@U) ) (! (let (($generated@@437 ($generated@@309 (type $generated@@436))))
(let (($generated@@438 ($generated@@308 (type $generated@@436))))
 (=> (= (type $generated@@436) ($generated@@307 $generated@@438 $generated@@437)) (or (= $generated@@436 ($generated@@306 $generated@@438 $generated@@437)) (exists (($generated@@439 T@U) ($generated@@440 T@U) ) (!  (and (and (= (type $generated@@439) $generated@@151) (= (type $generated@@440) $generated@@151)) ($generated@@0 ($generated@@87 ($generated@@383 $generated@@436) ($generated@@294 ($generated@@223 $generated@@439 $generated@@440)))))
 :no-pattern (type $generated@@439)
 :no-pattern (type $generated@@440)
 :no-pattern ($generated $generated@@439)
 :no-pattern ($generated@@0 $generated@@439)
 :no-pattern ($generated $generated@@440)
 :no-pattern ($generated@@0 $generated@@440)
))))))
 :pattern ( ($generated@@383 $generated@@436))
)))
(assert (forall (($generated@@441 T@U) ) (! (let (($generated@@442 ($generated@@327 (type $generated@@441))))
(let (($generated@@443 ($generated@@326 (type $generated@@441))))
 (=> (= (type $generated@@441) ($generated@@325 $generated@@443 $generated@@442)) (or (= $generated@@441 ($generated@@324 $generated@@443 $generated@@442)) (exists (($generated@@444 T@U) ($generated@@445 T@U) ) (!  (and (and (= (type $generated@@444) $generated@@151) (= (type $generated@@445) $generated@@151)) ($generated@@0 ($generated@@87 ($generated@@391 $generated@@441) ($generated@@294 ($generated@@223 $generated@@444 $generated@@445)))))
 :no-pattern (type $generated@@444)
 :no-pattern (type $generated@@445)
 :no-pattern ($generated $generated@@444)
 :no-pattern ($generated@@0 $generated@@444)
 :no-pattern ($generated $generated@@445)
 :no-pattern ($generated@@0 $generated@@445)
))))))
 :pattern ( ($generated@@391 $generated@@441))
)))
(assert (forall (($generated@@446 T@U) ) (!  (=> (and (= (type $generated@@446) $generated@@151) ($generated@@224 $generated@@446 $generated@@46)) (and (= ($generated@@294 ($generated@@344 $generated@@2 $generated@@446)) $generated@@446) ($generated@@138 ($generated@@344 $generated@@2 $generated@@446) $generated@@46)))
 :pattern ( ($generated@@224 $generated@@446 $generated@@46))
)))
(assert (forall (($generated@@447 T@U) ) (!  (=> (and (= (type $generated@@447) $generated@@151) ($generated@@224 $generated@@447 $generated@@47)) (and (= ($generated@@294 ($generated@@344 $generated@@3 $generated@@447)) $generated@@447) ($generated@@138 ($generated@@344 $generated@@3 $generated@@447) $generated@@47)))
 :pattern ( ($generated@@224 $generated@@447 $generated@@47))
)))
(assert (forall (($generated@@448 T@U) ) (!  (=> (and (= (type $generated@@448) $generated@@151) ($generated@@224 $generated@@448 $generated@@44)) (and (= ($generated@@294 ($generated@@344 $generated@@4 $generated@@448)) $generated@@448) ($generated@@138 ($generated@@344 $generated@@4 $generated@@448) $generated@@44)))
 :pattern ( ($generated@@224 $generated@@448 $generated@@44))
)))
(assert (= ($generated@@1 $generated@@449) 20))
(assert (forall (($generated@@450 T@U) ) (!  (=> (and (= (type $generated@@450) $generated@@151) ($generated@@224 $generated@@450 $generated@@45)) (and (= ($generated@@294 ($generated@@344 $generated@@449 $generated@@450)) $generated@@450) ($generated@@138 ($generated@@344 $generated@@449 $generated@@450) $generated@@45)))
 :pattern ( ($generated@@224 $generated@@450 $generated@@45))
)))
(assert (forall (($generated@@451 T@U) ($generated@@452 T@U) ) (!  (=> (= (type $generated@@452) $generated@@70) (= ($generated@@224 ($generated@@294 $generated@@451) $generated@@452) ($generated@@138 $generated@@451 $generated@@452)))
 :pattern ( ($generated@@224 ($generated@@294 $generated@@451) $generated@@452))
)))
(assert (forall (($generated@@453 T@U) ) (! (let (($generated@@454 ($generated@@85 (type $generated@@453))))
 (=> (= (type $generated@@453) ($generated@@82 $generated@@454 $generated@@2)) (<= 0 ($generated@@299 $generated@@453))))
 :pattern ( ($generated@@299 $generated@@453))
)))
(assert (forall (($generated@@455 T@U) ) (! (let (($generated@@456 ($generated@@285 (type $generated@@455))))
 (=> (= (type $generated@@455) ($generated@@284 $generated@@456)) (<= 0 ($generated@@283 $generated@@455))))
 :pattern ( ($generated@@283 $generated@@455))
)))
(assert (forall (($generated@@458 T@U) ) (! (= (type ($generated@@457 $generated@@458)) $generated@@70)
 :pattern ( ($generated@@457 $generated@@458))
)))
(assert (forall (($generated@@459 T@U) ($generated@@460 T@U) ) (!  (=> (and (= (type $generated@@459) $generated@@70) (= (type $generated@@460) $generated@@70)) (= ($generated@@457 ($generated@@409 $generated@@459 $generated@@460)) $generated@@459))
 :pattern ( ($generated@@409 $generated@@459 $generated@@460))
)))
(assert (forall (($generated@@462 T@U) ) (! (= (type ($generated@@461 $generated@@462)) $generated@@70)
 :pattern ( ($generated@@461 $generated@@462))
)))
(assert (forall (($generated@@463 T@U) ($generated@@464 T@U) ) (!  (=> (and (= (type $generated@@463) $generated@@70) (= (type $generated@@464) $generated@@70)) (= ($generated@@461 ($generated@@409 $generated@@463 $generated@@464)) $generated@@464))
 :pattern ( ($generated@@409 $generated@@463 $generated@@464))
)))
(assert (forall (($generated@@465 T@U) ($generated@@466 T@U) ) (!  (=> (and (= (type $generated@@465) $generated@@70) (= (type $generated@@466) $generated@@70)) (= ($generated@@78 ($generated@@409 $generated@@465 $generated@@466)) $generated@@58))
 :pattern ( ($generated@@409 $generated@@465 $generated@@466))
)))
(assert (forall (($generated@@468 T@U) ) (! (= (type ($generated@@467 $generated@@468)) $generated@@70)
 :pattern ( ($generated@@467 $generated@@468))
)))
(assert (forall (($generated@@469 T@U) ($generated@@470 T@U) ) (!  (=> (and (= (type $generated@@469) $generated@@70) (= (type $generated@@470) $generated@@70)) (= ($generated@@467 ($generated@@417 $generated@@469 $generated@@470)) $generated@@469))
 :pattern ( ($generated@@417 $generated@@469 $generated@@470))
)))
(assert (forall (($generated@@472 T@U) ) (! (= (type ($generated@@471 $generated@@472)) $generated@@70)
 :pattern ( ($generated@@471 $generated@@472))
)))
(assert (forall (($generated@@473 T@U) ($generated@@474 T@U) ) (!  (=> (and (= (type $generated@@473) $generated@@70) (= (type $generated@@474) $generated@@70)) (= ($generated@@471 ($generated@@417 $generated@@473 $generated@@474)) $generated@@474))
 :pattern ( ($generated@@417 $generated@@473 $generated@@474))
)))
(assert (forall (($generated@@475 T@U) ($generated@@476 T@U) ) (!  (=> (and (= (type $generated@@475) $generated@@70) (= (type $generated@@476) $generated@@70)) (= ($generated@@78 ($generated@@417 $generated@@475 $generated@@476)) $generated@@59))
 :pattern ( ($generated@@417 $generated@@475 $generated@@476))
)))
(assert (forall (($generated@@477 T@U) ($generated@@478 T@U) ) (!  (=> (and (= (type $generated@@477) $generated@@151) (= (type $generated@@478) $generated@@151)) (= ($generated@@156 ($generated@@223 $generated@@477 $generated@@478)) $generated@@61))
 :pattern ( ($generated@@223 $generated@@477 $generated@@478))
)))
(assert (forall (($generated@@480 T@U) ) (! (= (type ($generated@@479 $generated@@480)) $generated@@70)
 :pattern ( ($generated@@479 $generated@@480))
)))
(assert (forall (($generated@@481 T@U) ($generated@@482 T@U) ) (!  (=> (and (= (type $generated@@481) $generated@@70) (= (type $generated@@482) $generated@@70)) (= ($generated@@479 ($generated@@141 $generated@@481 $generated@@482)) $generated@@481))
 :pattern ( ($generated@@141 $generated@@481 $generated@@482))
)))
(assert (forall (($generated@@484 T@U) ) (! (= (type ($generated@@483 $generated@@484)) $generated@@70)
 :pattern ( ($generated@@483 $generated@@484))
)))
(assert (forall (($generated@@485 T@U) ($generated@@486 T@U) ) (!  (=> (and (= (type $generated@@485) $generated@@70) (= (type $generated@@486) $generated@@70)) (= ($generated@@483 ($generated@@141 $generated@@485 $generated@@486)) $generated@@486))
 :pattern ( ($generated@@141 $generated@@485 $generated@@486))
)))
(assert (forall (($generated@@487 T@U) ($generated@@488 T@U) ) (!  (=> (and (= (type $generated@@487) $generated@@151) (= (type $generated@@488) $generated@@151)) (= ($generated@@149 ($generated@@223 $generated@@487 $generated@@488)) $generated@@487))
 :pattern ( ($generated@@223 $generated@@487 $generated@@488))
)))
(assert (forall (($generated@@489 T@U) ($generated@@490 T@U) ) (!  (=> (and (= (type $generated@@489) $generated@@151) (= (type $generated@@490) $generated@@151)) (= ($generated@@150 ($generated@@223 $generated@@489 $generated@@490)) $generated@@490))
 :pattern ( ($generated@@223 $generated@@489 $generated@@490))
)))
(assert  (and (forall (($generated@@493 T@U) ) (! (= (type ($generated@@491 $generated@@493)) $generated@@70)
 :pattern ( ($generated@@491 $generated@@493))
)) (forall (($generated@@494 T@U) ($generated@@495 Int) ) (! (let (($generated@@496 ($generated@@285 (type $generated@@494))))
(= (type ($generated@@492 $generated@@494 $generated@@495)) $generated@@496))
 :pattern ( ($generated@@492 $generated@@494 $generated@@495))
))))
(assert (forall (($generated@@497 T@U) ($generated@@498 T@U) ($generated@@499 T@U) ) (!  (=> (and (and (= (type $generated@@497) ($generated@@284 $generated@@151)) (= (type $generated@@498) $generated@@70)) (= (type $generated@@499) ($generated@@82 $generated@@83 $generated@@84))) (= ($generated@@80 $generated@@497 ($generated@@491 $generated@@498) $generated@@499) (forall (($generated@@500 Int) ) (!  (=> (and (<= 0 $generated@@500) (< $generated@@500 ($generated@@283 $generated@@497))) ($generated@@268 ($generated@@492 $generated@@497 $generated@@500) $generated@@498 $generated@@499))
 :pattern ( ($generated@@492 $generated@@497 $generated@@500))
))))
 :pattern ( ($generated@@80 $generated@@497 ($generated@@491 $generated@@498) $generated@@499))
)))
(assert (forall (($generated@@502 Int) ) (! (= ($generated@@501 ($generated@@81 $generated@@502)) $generated@@502)
 :pattern ( ($generated@@81 $generated@@502))
)))
(assert (forall (($generated@@504 T@U) ) (! (= (type ($generated@@503 $generated@@504)) $generated@@70)
 :pattern ( ($generated@@503 $generated@@504))
)))
(assert (forall (($generated@@505 T@U) ) (!  (=> (= (type $generated@@505) $generated@@70) (= ($generated@@503 ($generated@@242 $generated@@505)) $generated@@505))
 :pattern ( ($generated@@242 $generated@@505))
)))
(assert (forall (($generated@@506 T@U) ) (!  (=> (= (type $generated@@506) $generated@@70) (= ($generated@@78 ($generated@@242 $generated@@506)) $generated@@54))
 :pattern ( ($generated@@242 $generated@@506))
)))
(assert (forall (($generated@@508 T@U) ) (! (= (type ($generated@@507 $generated@@508)) $generated@@70)
 :pattern ( ($generated@@507 $generated@@508))
)))
(assert (forall (($generated@@509 T@U) ) (!  (=> (= (type $generated@@509) $generated@@70) (= ($generated@@507 ($generated@@247 $generated@@509)) $generated@@509))
 :pattern ( ($generated@@247 $generated@@509))
)))
(assert (forall (($generated@@510 T@U) ) (!  (=> (= (type $generated@@510) $generated@@70) (= ($generated@@78 ($generated@@247 $generated@@510)) $generated@@55))
 :pattern ( ($generated@@247 $generated@@510))
)))
(assert (forall (($generated@@512 T@U) ) (! (= (type ($generated@@511 $generated@@512)) $generated@@70)
 :pattern ( ($generated@@511 $generated@@512))
)))
(assert (forall (($generated@@513 T@U) ) (!  (=> (= (type $generated@@513) $generated@@70) (= ($generated@@511 ($generated@@162 $generated@@513)) $generated@@513))
 :pattern ( ($generated@@162 $generated@@513))
)))
(assert (forall (($generated@@514 T@U) ) (!  (=> (= (type $generated@@514) $generated@@70) (= ($generated@@78 ($generated@@162 $generated@@514)) $generated@@56))
 :pattern ( ($generated@@162 $generated@@514))
)))
(assert (forall (($generated@@516 T@U) ) (! (= (type ($generated@@515 $generated@@516)) $generated@@70)
 :pattern ( ($generated@@515 $generated@@516))
)))
(assert (forall (($generated@@517 T@U) ) (!  (=> (= (type $generated@@517) $generated@@70) (= ($generated@@515 ($generated@@491 $generated@@517)) $generated@@517))
 :pattern ( ($generated@@491 $generated@@517))
)))
(assert (forall (($generated@@518 T@U) ) (!  (=> (= (type $generated@@518) $generated@@70) (= ($generated@@78 ($generated@@491 $generated@@518)) $generated@@57))
 :pattern ( ($generated@@491 $generated@@518))
)))
(assert (forall (($generated@@519 T@U) ) (! (let (($generated@@520 (type $generated@@519)))
(= ($generated@@344 $generated@@520 ($generated@@294 $generated@@519)) $generated@@519))
 :pattern ( ($generated@@294 $generated@@519))
)))
(assert (forall (($generated@@521 T@U) ($generated@@522 T@U) ($generated@@523 T@U) ) (!  (=> (and (and (= (type $generated@@521) ($generated@@307 $generated@@151 $generated@@151)) (= (type $generated@@522) $generated@@70)) (= (type $generated@@523) $generated@@70)) (= ($generated@@138 $generated@@521 ($generated@@409 $generated@@522 $generated@@523)) (forall (($generated@@524 T@U) ) (!  (=> (and (= (type $generated@@524) $generated@@151) ($generated@@0 ($generated@@87 ($generated@@305 $generated@@521) $generated@@524))) (and ($generated@@224 ($generated@@87 ($generated@@384 $generated@@521) $generated@@524) $generated@@523) ($generated@@224 $generated@@524 $generated@@522)))
 :pattern ( ($generated@@87 ($generated@@384 $generated@@521) $generated@@524))
 :pattern ( ($generated@@87 ($generated@@305 $generated@@521) $generated@@524))
))))
 :pattern ( ($generated@@138 $generated@@521 ($generated@@409 $generated@@522 $generated@@523)))
)))
(assert (forall (($generated@@525 T@U) ($generated@@526 T@U) ($generated@@527 T@U) ) (!  (=> (and (and (= (type $generated@@525) ($generated@@325 $generated@@151 $generated@@151)) (= (type $generated@@526) $generated@@70)) (= (type $generated@@527) $generated@@70)) (= ($generated@@138 $generated@@525 ($generated@@417 $generated@@526 $generated@@527)) (forall (($generated@@528 T@U) ) (!  (=> (and (= (type $generated@@528) $generated@@151) ($generated@@0 ($generated@@87 ($generated@@323 $generated@@525) $generated@@528))) (and ($generated@@224 ($generated@@87 ($generated@@392 $generated@@525) $generated@@528) $generated@@527) ($generated@@224 $generated@@528 $generated@@526)))
 :pattern ( ($generated@@87 ($generated@@392 $generated@@525) $generated@@528))
 :pattern ( ($generated@@87 ($generated@@323 $generated@@525) $generated@@528))
))))
 :pattern ( ($generated@@138 $generated@@525 ($generated@@417 $generated@@526 $generated@@527)))
)))
(assert (forall (($generated@@531 T@U) ($generated@@532 T@U) ) (!  (=> (and (= (type $generated@@531) $generated@@151) (= (type $generated@@532) $generated@@151)) (< ($generated@@529 $generated@@531) ($generated@@530 ($generated@@223 $generated@@531 $generated@@532))))
 :pattern ( ($generated@@223 $generated@@531 $generated@@532))
)))
(assert (forall (($generated@@533 T@U) ($generated@@534 T@U) ) (!  (=> (and (= (type $generated@@533) $generated@@151) (= (type $generated@@534) $generated@@151)) (< ($generated@@529 $generated@@534) ($generated@@530 ($generated@@223 $generated@@533 $generated@@534))))
 :pattern ( ($generated@@223 $generated@@533 $generated@@534))
)))
(assert (forall (($generated@@535 T@U) ($generated@@536 T@U) ($generated@@537 T@U) ) (!  (=> (and (and (and (= (type $generated@@535) $generated@@151) (= (type $generated@@536) $generated@@70)) (= (type $generated@@537) $generated@@70)) ($generated@@224 $generated@@535 ($generated@@409 $generated@@536 $generated@@537))) (and (= ($generated@@294 ($generated@@344 ($generated@@307 $generated@@151 $generated@@151) $generated@@535)) $generated@@535) ($generated@@138 ($generated@@344 ($generated@@307 $generated@@151 $generated@@151) $generated@@535) ($generated@@409 $generated@@536 $generated@@537))))
 :pattern ( ($generated@@224 $generated@@535 ($generated@@409 $generated@@536 $generated@@537)))
)))
(assert (forall (($generated@@538 T@U) ($generated@@539 T@U) ($generated@@540 T@U) ) (!  (=> (and (and (and (= (type $generated@@538) $generated@@151) (= (type $generated@@539) $generated@@70)) (= (type $generated@@540) $generated@@70)) ($generated@@224 $generated@@538 ($generated@@417 $generated@@539 $generated@@540))) (and (= ($generated@@294 ($generated@@344 ($generated@@325 $generated@@151 $generated@@151) $generated@@538)) $generated@@538) ($generated@@138 ($generated@@344 ($generated@@325 $generated@@151 $generated@@151) $generated@@538) ($generated@@417 $generated@@539 $generated@@540))))
 :pattern ( ($generated@@224 $generated@@538 ($generated@@417 $generated@@539 $generated@@540)))
)))
(assert (forall (($generated@@541 T@U) ($generated@@542 T@U) ($generated@@543 T@U) ) (!  (=> (and (and (and (= (type $generated@@541) $generated@@70) (= (type $generated@@542) $generated@@70)) (= (type $generated@@543) $generated@@151)) ($generated@@224 $generated@@543 ($generated@@141 $generated@@541 $generated@@542))) (and (= ($generated@@294 ($generated@@344 $generated@@142 $generated@@543)) $generated@@543) ($generated@@138 ($generated@@344 $generated@@142 $generated@@543) ($generated@@141 $generated@@541 $generated@@542))))
 :pattern ( ($generated@@224 $generated@@543 ($generated@@141 $generated@@541 $generated@@542)))
)))
(assert (forall (($generated@@544 T@U) ) (! (let (($generated@@545 (type $generated@@544)))
 (not ($generated@@0 ($generated@@87 ($generated@@425 $generated@@545) $generated@@544))))
 :pattern ( (let (($generated@@545 (type $generated@@544)))
($generated@@87 ($generated@@425 $generated@@545) $generated@@544)))
)))
(assert (forall (($generated@@547 T@U) ) (! (= (type ($generated@@546 $generated@@547)) $generated@@75)
 :pattern ( ($generated@@546 $generated@@547))
)))
(assert (forall (($generated@@548 T@U) ($generated@@549 T@U) ) (!  (=> (and (= (type $generated@@548) $generated@@70) (= (type $generated@@549) $generated@@70)) (and (= ($generated@@78 ($generated@@141 $generated@@548 $generated@@549)) $generated@@62) (= ($generated@@546 ($generated@@141 $generated@@548 $generated@@549)) $generated@@68)))
 :pattern ( ($generated@@141 $generated@@548 $generated@@549))
)))
(assert (forall (($generated@@550 T@U) ) (!  (=> (= (type $generated@@550) $generated@@142) (= ($generated@@529 ($generated@@294 $generated@@550)) ($generated@@530 $generated@@550)))
 :pattern ( ($generated@@529 ($generated@@294 $generated@@550)))
)))
(assert (forall (($generated@@551 T@U) ) (!  (=> (and (= (type $generated@@551) $generated@@151) ($generated@@224 $generated@@551 ($generated@@81 0))) (and (= ($generated@@294 ($generated@@344 $generated@@2 $generated@@551)) $generated@@551) ($generated@@138 ($generated@@344 ($generated@@82 $generated@@151 $generated@@4) $generated@@551) ($generated@@81 0))))
 :pattern ( ($generated@@224 $generated@@551 ($generated@@81 0)))
)))
(assert (forall (($generated@@552 T@U) ($generated@@553 T@U) ) (!  (=> (and (and (= (type $generated@@552) $generated@@151) (= (type $generated@@553) $generated@@70)) ($generated@@224 $generated@@552 ($generated@@242 $generated@@553))) (and (= ($generated@@294 ($generated@@344 ($generated@@82 $generated@@151 $generated@@4) $generated@@552)) $generated@@552) ($generated@@138 ($generated@@344 ($generated@@82 $generated@@151 $generated@@4) $generated@@552) ($generated@@242 $generated@@553))))
 :pattern ( ($generated@@224 $generated@@552 ($generated@@242 $generated@@553)))
)))
(assert (forall (($generated@@554 T@U) ($generated@@555 T@U) ) (!  (=> (and (and (= (type $generated@@554) $generated@@151) (= (type $generated@@555) $generated@@70)) ($generated@@224 $generated@@554 ($generated@@247 $generated@@555))) (and (= ($generated@@294 ($generated@@344 ($generated@@82 $generated@@151 $generated@@4) $generated@@554)) $generated@@554) ($generated@@138 ($generated@@344 ($generated@@82 $generated@@151 $generated@@4) $generated@@554) ($generated@@247 $generated@@555))))
 :pattern ( ($generated@@224 $generated@@554 ($generated@@247 $generated@@555)))
)))
(assert (forall (($generated@@556 T@U) ($generated@@557 T@U) ) (!  (=> (and (and (= (type $generated@@556) $generated@@151) (= (type $generated@@557) $generated@@70)) ($generated@@224 $generated@@556 ($generated@@162 $generated@@557))) (and (= ($generated@@294 ($generated@@344 ($generated@@82 $generated@@151 $generated@@2) $generated@@556)) $generated@@556) ($generated@@138 ($generated@@344 ($generated@@82 $generated@@151 $generated@@2) $generated@@556) ($generated@@162 $generated@@557))))
 :pattern ( ($generated@@224 $generated@@556 ($generated@@162 $generated@@557)))
)))
(assert (forall (($generated@@558 T@U) ($generated@@559 T@U) ) (!  (=> (and (and (= (type $generated@@558) $generated@@151) (= (type $generated@@559) $generated@@70)) ($generated@@224 $generated@@558 ($generated@@491 $generated@@559))) (and (= ($generated@@294 ($generated@@344 ($generated@@284 $generated@@151) $generated@@558)) $generated@@558) ($generated@@138 ($generated@@344 ($generated@@284 $generated@@151) $generated@@558) ($generated@@491 $generated@@559))))
 :pattern ( ($generated@@224 $generated@@558 ($generated@@491 $generated@@559)))
)))
(assert (= ($generated@@78 $generated@@231) $generated@@64))
(assert (= ($generated@@546 $generated@@231) $generated@@69))
(assert (forall (($generated@@560 T@U) ($generated@@561 T@U) ($generated@@562 T@U) ) (!  (=> (and (and (= (type $generated@@560) ($generated@@82 $generated@@151 $generated@@2)) (= (type $generated@@561) $generated@@70)) (= (type $generated@@562) ($generated@@82 $generated@@83 $generated@@84))) (= ($generated@@80 $generated@@560 ($generated@@162 $generated@@561) $generated@@562) (forall (($generated@@563 T@U) ) (!  (=> (and (= (type $generated@@563) $generated@@151) (< 0 ($generated ($generated@@87 $generated@@560 $generated@@563)))) ($generated@@268 $generated@@563 $generated@@561 $generated@@562))
 :pattern ( ($generated@@87 $generated@@560 $generated@@563))
))))
 :pattern ( ($generated@@80 $generated@@560 ($generated@@162 $generated@@561) $generated@@562))
)))
(assert (= $generated@@157 ($generated@@252 $generated@@157)))
(assert (= $generated@@159 ($generated@@252 $generated@@159)))
(assert (= $generated@@160 ($generated@@252 $generated@@160)))
(assert (= $generated@@161 ($generated@@252 $generated@@161)))
(assert (forall (($generated@@565 T@U) ) (!  (=> (and (= (type $generated@@565) $generated@@142) ($generated@@564 $generated@@565)) (or (or (or ($generated@@256 $generated@@565) ($generated@@259 $generated@@565)) ($generated@@262 $generated@@565)) ($generated@@265 $generated@@565)))
 :pattern ( ($generated@@564 $generated@@565))
)))
(assert (forall (($generated@@566 T@U) ($generated@@567 T@U) ($generated@@568 T@U) ) (!  (=> (and (and (and (= (type $generated@@566) $generated@@142) (= (type $generated@@567) $generated@@70)) (= (type $generated@@568) ($generated@@82 $generated@@83 $generated@@84))) (and ($generated@@232 $generated@@568) (and ($generated@@140 $generated@@566) (exists (($generated@@569 T@U) ) (!  (and (= (type $generated@@569) $generated@@70) ($generated@@80 $generated@@566 ($generated@@141 $generated@@567 $generated@@569) $generated@@568))
 :pattern ( ($generated@@80 $generated@@566 ($generated@@141 $generated@@567 $generated@@569) $generated@@568))
))))) ($generated@@268 ($generated@@149 $generated@@566) $generated@@567 $generated@@568))
 :pattern ( ($generated@@268 ($generated@@149 $generated@@566) $generated@@567 $generated@@568))
)))
(assert (forall (($generated@@570 T@U) ($generated@@571 T@U) ($generated@@572 T@U) ) (!  (=> (and (and (and (= (type $generated@@570) $generated@@142) (= (type $generated@@571) $generated@@70)) (= (type $generated@@572) ($generated@@82 $generated@@83 $generated@@84))) (and ($generated@@232 $generated@@572) (and ($generated@@140 $generated@@570) (exists (($generated@@573 T@U) ) (!  (and (= (type $generated@@573) $generated@@70) ($generated@@80 $generated@@570 ($generated@@141 $generated@@573 $generated@@571) $generated@@572))
 :pattern ( ($generated@@80 $generated@@570 ($generated@@141 $generated@@573 $generated@@571) $generated@@572))
))))) ($generated@@268 ($generated@@150 $generated@@570) $generated@@571 $generated@@572))
 :pattern ( ($generated@@268 ($generated@@150 $generated@@570) $generated@@571 $generated@@572))
)))
(assert (forall (($generated@@574 T@U) ($generated@@575 T@U) ) (!  (=> (and (= (type $generated@@574) $generated@@151) (= (type $generated@@575) $generated@@151)) (= ($generated@@223 ($generated@@252 $generated@@574) ($generated@@252 $generated@@575)) ($generated@@252 ($generated@@223 $generated@@574 $generated@@575))))
 :pattern ( ($generated@@223 ($generated@@252 $generated@@574) ($generated@@252 $generated@@575)))
)))
(assert (forall (($generated@@576 T@U) ) (! (= ($generated@@294 ($generated@@252 $generated@@576)) ($generated@@252 ($generated@@294 $generated@@576)))
 :pattern ( ($generated@@294 ($generated@@252 $generated@@576)))
)))
(assert (forall (($generated@@577 T@U) ) (! (let (($generated@@578 ($generated@@285 (type $generated@@577))))
 (=> (and (= (type $generated@@577) ($generated@@284 $generated@@578)) (= ($generated@@283 $generated@@577) 0)) (= $generated@@577 ($generated@@282 $generated@@578))))
 :pattern ( ($generated@@283 $generated@@577))
)))
(assert (forall (($generated@@579 T@U) ($generated@@580 T@U) ($generated@@581 T@U) ) (! (let (($generated@@582 (type $generated@@580)))
 (=> (and (and (= (type $generated@@579) ($generated@@82 $generated@@582 $generated@@2)) (= (type $generated@@581) $generated@@2)) (<= 0 ($generated $generated@@581))) (= ($generated@@299 ($generated@@88 $generated@@579 $generated@@580 $generated@@581)) (+ (- ($generated@@299 $generated@@579) ($generated ($generated@@87 $generated@@579 $generated@@580))) ($generated $generated@@581)))))
 :pattern ( ($generated@@299 ($generated@@88 $generated@@579 $generated@@580 $generated@@581)))
)))
(assert (forall (($generated@@583 T@U) ) (!  (=> (and (= (type $generated@@583) $generated@@142) ($generated@@138 $generated@@583 $generated@@231)) (or (or (or ($generated@@256 $generated@@583) ($generated@@259 $generated@@583)) ($generated@@262 $generated@@583)) ($generated@@265 $generated@@583)))
 :pattern ( ($generated@@265 $generated@@583) ($generated@@138 $generated@@583 $generated@@231))
 :pattern ( ($generated@@262 $generated@@583) ($generated@@138 $generated@@583 $generated@@231))
 :pattern ( ($generated@@259 $generated@@583) ($generated@@138 $generated@@583 $generated@@231))
 :pattern ( ($generated@@256 $generated@@583) ($generated@@138 $generated@@583 $generated@@231))
)))
(assert (forall (($generated@@584 T@U) ($generated@@585 T@U) ) (!  (=> (and (= (type $generated@@584) ($generated@@82 $generated@@83 $generated@@84)) (= (type $generated@@585) $generated@@2)) ($generated@@80 $generated@@585 $generated@@46 $generated@@584))
 :pattern ( ($generated@@80 $generated@@585 $generated@@46 $generated@@584))
)))
(assert (forall (($generated@@586 T@U) ($generated@@587 T@U) ) (!  (=> (and (= (type $generated@@586) ($generated@@82 $generated@@83 $generated@@84)) (= (type $generated@@587) $generated@@3)) ($generated@@80 $generated@@587 $generated@@47 $generated@@586))
 :pattern ( ($generated@@80 $generated@@587 $generated@@47 $generated@@586))
)))
(assert (forall (($generated@@588 T@U) ($generated@@589 T@U) ) (!  (=> (and (= (type $generated@@588) ($generated@@82 $generated@@83 $generated@@84)) (= (type $generated@@589) $generated@@4)) ($generated@@80 $generated@@589 $generated@@44 $generated@@588))
 :pattern ( ($generated@@80 $generated@@589 $generated@@44 $generated@@588))
)))
(assert (forall (($generated@@590 T@U) ($generated@@591 T@U) ) (!  (=> (and (= (type $generated@@590) ($generated@@82 $generated@@83 $generated@@84)) (= (type $generated@@591) $generated@@449)) ($generated@@80 $generated@@591 $generated@@45 $generated@@590))
 :pattern ( ($generated@@80 $generated@@591 $generated@@45 $generated@@590))
)))
(assert (forall (($generated@@592 T@U) ($generated@@593 T@U) ) (!  (=> (and (= (type $generated@@592) ($generated@@82 $generated@@83 $generated@@84)) (= (type $generated@@593) $generated@@151)) ($generated@@80 $generated@@593 $generated@@48 $generated@@592))
 :pattern ( ($generated@@80 $generated@@593 $generated@@48 $generated@@592))
)))
(assert (forall (($generated@@594 T@U) ($generated@@595 T@U) ) (!  (=> (and (= (type $generated@@594) ($generated@@284 $generated@@151)) (= (type $generated@@595) $generated@@70)) (= ($generated@@138 $generated@@594 ($generated@@491 $generated@@595)) (forall (($generated@@596 Int) ) (!  (=> (and (<= 0 $generated@@596) (< $generated@@596 ($generated@@283 $generated@@594))) ($generated@@224 ($generated@@492 $generated@@594 $generated@@596) $generated@@595))
 :pattern ( ($generated@@492 $generated@@594 $generated@@596))
))))
 :pattern ( ($generated@@138 $generated@@594 ($generated@@491 $generated@@595)))
)))
(assert (forall (($generated@@598 T@U) ($generated@@599 Int) ) (!  (=> (= (type $generated@@598) ($generated@@284 $generated@@151)) (=> (and (<= 0 $generated@@599) (< $generated@@599 ($generated@@283 $generated@@598))) (< ($generated@@530 ($generated@@344 $generated@@142 ($generated@@492 $generated@@598 $generated@@599))) ($generated@@597 $generated@@598))))
 :pattern ( ($generated@@530 ($generated@@344 $generated@@142 ($generated@@492 $generated@@598 $generated@@599))))
)))
(assert (forall (($generated@@600 T@U) ($generated@@601 T@U) ($generated@@602 T@U) ) (!  (=> (and (and (and (= (type $generated@@600) ($generated@@307 $generated@@151 $generated@@151)) (= (type $generated@@601) $generated@@70)) (= (type $generated@@602) $generated@@70)) ($generated@@138 $generated@@600 ($generated@@409 $generated@@601 $generated@@602))) (and (and ($generated@@138 ($generated@@305 $generated@@600) ($generated@@242 $generated@@601)) ($generated@@138 ($generated@@352 $generated@@600) ($generated@@242 $generated@@602))) ($generated@@138 ($generated@@383 $generated@@600) ($generated@@242 ($generated@@141 $generated@@601 $generated@@602)))))
 :pattern ( ($generated@@138 $generated@@600 ($generated@@409 $generated@@601 $generated@@602)))
)))
(assert (forall (($generated@@603 T@U) ($generated@@604 T@U) ($generated@@605 T@U) ) (!  (=> (and (and (and (= (type $generated@@603) ($generated@@325 $generated@@151 $generated@@151)) (= (type $generated@@604) $generated@@70)) (= (type $generated@@605) $generated@@70)) ($generated@@138 $generated@@603 ($generated@@417 $generated@@604 $generated@@605))) (and (and ($generated@@138 ($generated@@323 $generated@@603) ($generated@@247 $generated@@604)) ($generated@@138 ($generated@@363 $generated@@603) ($generated@@247 $generated@@605))) ($generated@@138 ($generated@@391 $generated@@603) ($generated@@247 ($generated@@141 $generated@@604 $generated@@605)))))
 :pattern ( ($generated@@138 $generated@@603 ($generated@@417 $generated@@604 $generated@@605)))
)))
(assert (forall (($generated@@606 T@U) ) (!  (=> (= (type $generated@@606) $generated@@2) ($generated@@138 $generated@@606 $generated@@46))
 :pattern ( ($generated@@138 $generated@@606 $generated@@46))
)))
(assert (forall (($generated@@607 T@U) ) (!  (=> (= (type $generated@@607) $generated@@3) ($generated@@138 $generated@@607 $generated@@47))
 :pattern ( ($generated@@138 $generated@@607 $generated@@47))
)))
(assert (forall (($generated@@608 T@U) ) (!  (=> (= (type $generated@@608) $generated@@4) ($generated@@138 $generated@@608 $generated@@44))
 :pattern ( ($generated@@138 $generated@@608 $generated@@44))
)))
(assert (forall (($generated@@609 T@U) ) (!  (=> (= (type $generated@@609) $generated@@449) ($generated@@138 $generated@@609 $generated@@45))
 :pattern ( ($generated@@138 $generated@@609 $generated@@45))
)))
(assert (forall (($generated@@610 T@U) ) (!  (=> (= (type $generated@@610) $generated@@151) ($generated@@138 $generated@@610 $generated@@48))
 :pattern ( ($generated@@138 $generated@@610 $generated@@48))
)))
(push 1)
(declare-fun ControlFlow (Int Int) Int)
(declare-fun $generated@@611 () T@U)
(declare-fun $generated@@612 () T@U)
(declare-fun $generated@@613 () T@U)
(declare-fun $generated@@614 () T@U)
(declare-fun $generated@@615 (T@U) Bool)
(declare-fun $generated@@616 () Int)
(assert  (and (and (and (= (type $generated@@611) $generated@@142) (= (type $generated@@612) ($generated@@169 $generated@@83 $generated@@4))) (= (type $generated@@613) $generated@@83)) (= (type $generated@@614) ($generated@@82 $generated@@83 $generated@@84))))
(set-option :timeout 0)
(set-option :rlimit 0)
(assert (not
 (=> (= (ControlFlow 0 0) 16) (let (($generated@@617 true))
(let (($generated@@618  (=> (and (= $generated@@611 $generated@@157) (= (ControlFlow 0 9) (- 0 8))) false)))
(let (($generated@@619  (=> (not (= $generated@@611 $generated@@159)) (and (=> (= (ControlFlow 0 11) 9) $generated@@618) (=> (= (ControlFlow 0 11) 10) $generated@@617)))))
(let (($generated@@620  (=> (and (= $generated@@611 $generated@@159) (= (ControlFlow 0 7) (- 0 6))) false)))
(let (($generated@@621  (=> (not (= $generated@@611 $generated@@160)) (and (=> (= (ControlFlow 0 12) 7) $generated@@620) (=> (= (ControlFlow 0 12) 11) $generated@@619)))))
(let (($generated@@622  (=> (and (= $generated@@611 $generated@@160) (= (ControlFlow 0 5) (- 0 4))) false)))
(let (($generated@@623  (=> (not (= $generated@@611 $generated@@161)) (and (=> (= (ControlFlow 0 13) 5) $generated@@622) (=> (= (ControlFlow 0 13) 12) $generated@@621)))))
(let (($generated@@624  (=> (and (= $generated@@611 $generated@@161) (= (ControlFlow 0 3) (- 0 2))) false)))
(let (($generated@@625  (=> (not ($generated@@239 $generated@@611 $generated@@157)) (and (=> (= (ControlFlow 0 14) 3) $generated@@624) (=> (= (ControlFlow 0 14) 13) $generated@@623)))))
(let (($generated@@626 true))
(let (($generated@@627  (=> (and (= $generated@@612 ($generated@@168 $generated@@613 $generated@@614 $generated@@60 false)) ($generated@@564 $generated@@611)) (and (=> (= (ControlFlow 0 15) 14) $generated@@625) (=> (= (ControlFlow 0 15) 1) $generated@@626)))))
(let (($generated@@628  (=> (and ($generated@@232 $generated@@614) ($generated@@615 $generated@@614)) (=> (and (and (and (and ($generated@@138 $generated@@611 $generated@@231) ($generated@@80 $generated@@611 $generated@@231 $generated@@614)) ($generated@@564 $generated@@611)) (= 1 $generated@@616)) (and ($generated@@239 $generated@@611 $generated@@157) (= (ControlFlow 0 16) 15))) $generated@@627))))
$generated@@628)))))))))))))
))
(check-sat)
(pop 1)
; Valid
(get-info :rlimit)
(reset)
(set-option :rlimit 0)
; did a full reset
(reset)
(set-option :print-success false)
(set-info :smt-lib-version 2.6)
(set-option :auto_config false)
(set-option :type_check true)
(set-option :smt.case_split 3)
(set-option :smt.qi.eager_threshold 100)
(set-option :smt.delay_units true)
(set-option :smt.arith.solver 2)
(set-option :smt.mbqi false)
(set-option :model.compact false)
(set-option :model.v2 true)
(set-option :pp.bv_literals false)
; done setting options


(set-info :category "industrial")
(declare-sort |T@U| 0)
(declare-sort |T@T| 0)
(declare-fun real_pow (Real Real) Real)
(declare-fun UOrdering2 (|T@U| |T@U|) Bool)
(declare-fun UOrdering3 (|T@T| |T@U| |T@U|) Bool)
(declare-fun tickleBool (Bool) Bool)
(assert (and (tickleBool true) (tickleBool false)))
(declare-fun $generated (T@U) Int)
(declare-fun $generated@@0 (T@U) Bool)
(declare-fun $generated@@1 (T@T) Int)
(declare-fun $generated@@2 () T@T)
(declare-fun $generated@@3 () T@T)
(declare-fun $generated@@4 () T@T)
(declare-fun $generated@@5 () T@T)
(declare-fun $generated@@6 () T@T)
(declare-fun $generated@@7 () T@T)
(declare-fun $generated@@8 (Int) T@U)
(declare-fun type (T@U) T@T)
(declare-fun $generated@@9 (Real) T@U)
(declare-fun $generated@@10 (T@U) Real)
(declare-fun $generated@@11 (Bool) T@U)
(declare-fun $generated@@12 (RoundingMode) T@U)
(declare-fun $generated@@13 (T@U) RoundingMode)
(declare-fun $generated@@14 (String) T@U)
(declare-fun $generated@@15 (T@U) String)
(declare-fun $generated@@16 ((RegEx String)) T@U)
(declare-fun $generated@@17 (T@U) (RegEx String))
(declare-fun $generated@@44 () T@U)
(declare-fun $generated@@45 () T@U)
(declare-fun $generated@@46 () T@U)
(declare-fun $generated@@47 () T@U)
(declare-fun $generated@@48 () T@U)
(declare-fun $generated@@49 () T@U)
(declare-fun $generated@@50 () T@U)
(declare-fun $generated@@51 () T@U)
(declare-fun $generated@@52 () T@U)
(declare-fun $generated@@53 () T@U)
(declare-fun $generated@@54 () T@U)
(declare-fun $generated@@55 () T@U)
(declare-fun $generated@@56 () T@U)
(declare-fun $generated@@57 () T@U)
(declare-fun $generated@@58 () T@U)
(declare-fun $generated@@59 () T@U)
(declare-fun $generated@@60 () T@U)
(declare-fun $generated@@61 () T@U)
(declare-fun $generated@@62 () T@U)
(declare-fun $generated@@63 () T@U)
(declare-fun $generated@@64 () T@U)
(declare-fun $generated@@65 () T@U)
(declare-fun $generated@@66 () T@U)
(declare-fun $generated@@67 () T@U)
(declare-fun $generated@@68 () T@U)
(declare-fun $generated@@69 () T@U)
(declare-fun $generated@@70 () T@T)
(declare-fun $generated@@71 () T@T)
(declare-fun $generated@@72 (T@T) T@T)
(declare-fun $generated@@73 (T@T) T@T)
(declare-fun $generated@@74 () T@T)
(declare-fun $generated@@75 () T@T)
(declare-fun $generated@@78 (T@U) T@U)
(declare-fun $generated@@80 (T@U T@U T@U) Bool)
(declare-fun $generated@@81 (Int) T@U)
(declare-fun $generated@@82 (T@T T@T) T@T)
(declare-fun $generated@@83 () T@T)
(declare-fun $generated@@84 () T@T)
(declare-fun $generated@@85 (T@T) T@T)
(declare-fun $generated@@86 (T@T) T@T)
(declare-fun $generated@@87 (T@U T@U) T@U)
(declare-fun $generated@@88 (T@U T@U T@U) T@U)
(declare-fun $generated@@89 (T@U T@U) T@U)
(declare-fun $generated@@90 (T@U T@U T@U) T@U)
(declare-fun $generated@@138 (T@U T@U) Bool)
(declare-fun $generated@@140 (T@U) Bool)
(declare-fun $generated@@141 (T@U T@U) T@U)
(declare-fun $generated@@142 () T@T)
(declare-fun $generated@@148 (T@U T@U) Bool)
(declare-fun $generated@@149 (T@U) T@U)
(declare-fun $generated@@150 (T@U) T@U)
(declare-fun $generated@@151 () T@T)
(declare-fun $generated@@156 (T@U) T@U)
(declare-fun $generated@@157 () T@U)
(declare-fun $generated@@159 () T@U)
(declare-fun $generated@@160 () T@U)
(declare-fun $generated@@161 () T@U)
(declare-fun $generated@@162 (T@U) T@U)
(declare-fun $generated@@163 (T@U) Bool)
(declare-fun $generated@@167 (T@U T@U T@U) T@U)
(declare-fun $generated@@168 (T@U T@U T@U Bool) T@U)
(declare-fun $generated@@169 (T@T T@T) T@T)
(declare-fun $generated@@170 (T@T) T@T)
(declare-fun $generated@@171 (T@T) T@T)
(declare-fun $generated@@172 (T@U T@U T@U T@U) T@U)
(declare-fun $generated@@223 (T@U T@U) T@U)
(declare-fun $generated@@224 (T@U T@U) Bool)
(declare-fun $generated@@231 () T@U)
(declare-fun $generated@@232 (T@U) Bool)
(declare-fun $generated@@239 (T@U T@U) Bool)
(declare-fun $generated@@242 (T@U) T@U)
(declare-fun $generated@@247 (T@U) T@U)
(declare-fun $generated@@252 (T@U) T@U)
(declare-fun $generated@@256 (T@U) Bool)
(declare-fun $generated@@259 (T@U) Bool)
(declare-fun $generated@@262 (T@U) Bool)
(declare-fun $generated@@265 (T@U) Bool)
(declare-fun $generated@@268 (T@U T@U T@U) Bool)
(declare-fun $generated@@282 (T@T) T@U)
(declare-fun $generated@@283 (T@U) Int)
(declare-fun $generated@@284 (T@T) T@T)
(declare-fun $generated@@285 (T@T) T@T)
(declare-fun $generated@@294 (T@U) T@U)
(declare-fun $generated@@299 (T@U) Int)
(declare-fun $generated@@300 (T@T) T@U)
(declare-fun $generated@@305 (T@U) T@U)
(declare-fun $generated@@306 (T@T T@T) T@U)
(declare-fun $generated@@307 (T@T T@T) T@T)
(declare-fun $generated@@308 (T@T) T@T)
(declare-fun $generated@@309 (T@T) T@T)
(declare-fun $generated@@323 (T@U) T@U)
(declare-fun $generated@@324 (T@T T@T) T@U)
(declare-fun $generated@@325 (T@T T@T) T@T)
(declare-fun $generated@@326 (T@T) T@T)
(declare-fun $generated@@327 (T@T) T@T)
(declare-fun $generated@@344 (T@T T@U) T@U)
(declare-fun $generated@@352 (T@U) T@U)
(declare-fun $generated@@363 (T@U) T@U)
(declare-fun $generated@@383 (T@U) T@U)
(declare-fun $generated@@384 (T@U) T@U)
(declare-fun $generated@@391 (T@U) T@U)
(declare-fun $generated@@392 (T@U) T@U)
(declare-fun $generated@@409 (T@U T@U) T@U)
(declare-fun $generated@@417 (T@U T@U) T@U)
(declare-fun $generated@@425 (T@T) T@U)
(declare-fun $generated@@449 () T@T)
(declare-fun $generated@@457 (T@U) T@U)
(declare-fun $generated@@461 (T@U) T@U)
(declare-fun $generated@@467 (T@U) T@U)
(declare-fun $generated@@471 (T@U) T@U)
(declare-fun $generated@@479 (T@U) T@U)
(declare-fun $generated@@483 (T@U) T@U)
(declare-fun $generated@@491 (T@U) T@U)
(declare-fun $generated@@492 (T@U Int) T@U)
(declare-fun $generated@@501 (T@U) Int)
(declare-fun $generated@@503 (T@U) T@U)
(declare-fun $generated@@507 (T@U) T@U)
(declare-fun $generated@@511 (T@U) T@U)
(declare-fun $generated@@515 (T@U) T@U)
(declare-fun $generated@@529 (T@U) Int)
(declare-fun $generated@@530 (T@U) Int)
(declare-fun $generated@@546 (T@U) T@U)
(declare-fun $generated@@564 (T@U) Bool)
(declare-fun $generated@@597 (T@U) Int)
(assert  (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (= ($generated@@1 $generated@@2) 0) (= ($generated@@1 $generated@@3) 1)) (= ($generated@@1 $generated@@4) 2)) (= ($generated@@1 $generated@@5) 3)) (= ($generated@@1 $generated@@6) 4)) (= ($generated@@1 $generated@@7) 5)) (forall (($generated@@18 Int) ) (! (= ($generated ($generated@@8 $generated@@18)) $generated@@18)
 :pattern ( ($generated@@8 $generated@@18))
))) (forall (($generated@@19 T@U) ) (!  (=> (= (type $generated@@19) $generated@@2) (= ($generated@@8 ($generated $generated@@19)) $generated@@19))
 :pattern ( ($generated $generated@@19))
))) (forall (($generated@@20 Int) ) (! (= (type ($generated@@8 $generated@@20)) $generated@@2)
 :pattern ( ($generated@@8 $generated@@20))
))) (forall (($generated@@21 Real) ) (! (= ($generated@@10 ($generated@@9 $generated@@21)) $generated@@21)
 :pattern ( ($generated@@9 $generated@@21))
))) (forall (($generated@@22 T@U) ) (!  (=> (= (type $generated@@22) $generated@@3) (= ($generated@@9 ($generated@@10 $generated@@22)) $generated@@22))
 :pattern ( ($generated@@10 $generated@@22))
))) (forall (($generated@@23 Real) ) (! (= (type ($generated@@9 $generated@@23)) $generated@@3)
 :pattern ( ($generated@@9 $generated@@23))
))) (forall (($generated@@24 Bool) ) (! (= ($generated@@0 ($generated@@11 $generated@@24)) $generated@@24)
 :pattern ( ($generated@@11 $generated@@24))
))) (forall (($generated@@25 T@U) ) (!  (=> (= (type $generated@@25) $generated@@4) (= ($generated@@11 ($generated@@0 $generated@@25)) $generated@@25))
 :pattern ( ($generated@@0 $generated@@25))
))) (forall (($generated@@26 Bool) ) (! (= (type ($generated@@11 $generated@@26)) $generated@@4)
 :pattern ( ($generated@@11 $generated@@26))
))) (forall (($generated@@27 RoundingMode) ) (! (= ($generated@@13 ($generated@@12 $generated@@27)) $generated@@27)
 :pattern ( ($generated@@12 $generated@@27))
))) (forall (($generated@@28 T@U) ) (!  (=> (= (type $generated@@28) $generated@@5) (= ($generated@@12 ($generated@@13 $generated@@28)) $generated@@28))
 :pattern ( ($generated@@13 $generated@@28))
))) (forall (($generated@@29 RoundingMode) ) (! (= (type ($generated@@12 $generated@@29)) $generated@@5)
 :pattern ( ($generated@@12 $generated@@29))
))) (forall (($generated@@30 String) ) (! (= ($generated@@15 ($generated@@14 $generated@@30)) $generated@@30)
 :pattern ( ($generated@@14 $generated@@30))
))) (forall (($generated@@31 T@U) ) (!  (=> (= (type $generated@@31) $generated@@6) (= ($generated@@14 ($generated@@15 $generated@@31)) $generated@@31))
 :pattern ( ($generated@@15 $generated@@31))
))) (forall (($generated@@32 String) ) (! (= (type ($generated@@14 $generated@@32)) $generated@@6)
 :pattern ( ($generated@@14 $generated@@32))
))) (forall (($generated@@33 (RegEx String)) ) (! (= ($generated@@17 ($generated@@16 $generated@@33)) $generated@@33)
 :pattern ( ($generated@@16 $generated@@33))
))) (forall (($generated@@34 T@U) ) (!  (=> (= (type $generated@@34) $generated@@7) (= ($generated@@16 ($generated@@17 $generated@@34)) $generated@@34))
 :pattern ( ($generated@@17 $generated@@34))
))) (forall (($generated@@35 (RegEx String)) ) (! (= (type ($generated@@16 $generated@@35)) $generated@@7)
 :pattern ( ($generated@@16 $generated@@35))
))))
(assert (forall (($generated@@36 T@U) ) (! (UOrdering2 $generated@@36 $generated@@36)
 :no-pattern ($generated $generated@@36)
 :no-pattern ($generated@@0 $generated@@36)
)))
(assert (forall (($generated@@37 T@U) ($generated@@38 T@U) ($generated@@39 T@U) ) (! (let (($generated@@40 (type $generated@@37)))
 (=> (and (and (= (type $generated@@38) $generated@@40) (= (type $generated@@39) $generated@@40)) (and (UOrdering2 $generated@@37 $generated@@38) (UOrdering2 $generated@@38 $generated@@39))) (UOrdering2 $generated@@37 $generated@@39)))
 :pattern ( (UOrdering2 $generated@@37 $generated@@38) (UOrdering2 $generated@@38 $generated@@39))
)))
(assert (forall (($generated@@41 T@U) ($generated@@42 T@U) ) (! (let (($generated@@43 (type $generated@@41)))
 (=> (= (type $generated@@42) $generated@@43) (=> (and (UOrdering2 $generated@@41 $generated@@42) (UOrdering2 $generated@@42 $generated@@41)) (= $generated@@41 $generated@@42))))
 :pattern ( (UOrdering2 $generated@@41 $generated@@42) (UOrdering2 $generated@@42 $generated@@41))
)))
(assert  (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (= ($generated@@1 $generated@@70) 6) (= (type $generated@@44) $generated@@70)) (= (type $generated@@45) $generated@@70)) (= (type $generated@@46) $generated@@70)) (= (type $generated@@47) $generated@@70)) (= (type $generated@@48) $generated@@70)) (= ($generated@@1 $generated@@71) 7)) (= (type $generated@@49) $generated@@71)) (= (type $generated@@50) $generated@@71)) (= (type $generated@@51) $generated@@71)) (= (type $generated@@52) $generated@@71)) (= (type $generated@@53) $generated@@71)) (= (type $generated@@54) $generated@@71)) (= (type $generated@@55) $generated@@71)) (= (type $generated@@56) $generated@@71)) (= (type $generated@@57) $generated@@71)) (= (type $generated@@58) $generated@@71)) (= (type $generated@@59) $generated@@71)) (forall (($generated@@76 T@T) ) (= ($generated@@1 ($generated@@72 $generated@@76)) 8))) (forall (($generated@@77 T@T) ) (! (= ($generated@@73 ($generated@@72 $generated@@77)) $generated@@77)
 :pattern ( ($generated@@72 $generated@@77))
))) (= (type $generated@@60) ($generated@@72 $generated@@4))) (= ($generated@@1 $generated@@74) 9)) (= (type $generated@@61) $generated@@74)) (= (type $generated@@62) $generated@@71)) (= (type $generated@@63) $generated@@74)) (= (type $generated@@64) $generated@@71)) (= (type $generated@@65) $generated@@74)) (= (type $generated@@66) $generated@@74)) (= (type $generated@@67) $generated@@74)) (= ($generated@@1 $generated@@75) 10)) (= (type $generated@@68) $generated@@75)) (= (type $generated@@69) $generated@@75)))
(assert (distinct $generated@@44 $generated@@45 $generated@@46 $generated@@47 $generated@@48 $generated@@49 $generated@@50 $generated@@51 $generated@@52 $generated@@53 $generated@@54 $generated@@55 $generated@@56 $generated@@57 $generated@@58 $generated@@59 $generated@@60 $generated@@61 $generated@@62 $generated@@63 $generated@@64 $generated@@65 $generated@@66 $generated@@67 $generated@@68 $generated@@69)
)
(assert (forall (($generated@@79 T@U) ) (! (= (type ($generated@@78 $generated@@79)) $generated@@71)
 :pattern ( ($generated@@78 $generated@@79))
)))
(assert (= ($generated@@78 $generated@@44) $generated@@49))
(assert (= ($generated@@78 $generated@@45) $generated@@50))
(assert (= ($generated@@78 $generated@@46) $generated@@51))
(assert (= ($generated@@78 $generated@@47) $generated@@52))
(assert (= ($generated@@78 $generated@@48) $generated@@53))
(assert  (and (and (and (and (and (and (and (and (and (and (and (and (and (forall (($generated@@91 T@T) ($generated@@92 T@T) ) (= ($generated@@1 ($generated@@82 $generated@@91 $generated@@92)) 11)) (forall (($generated@@93 T@T) ($generated@@94 T@T) ) (! (= ($generated@@85 ($generated@@82 $generated@@93 $generated@@94)) $generated@@93)
 :pattern ( ($generated@@82 $generated@@93 $generated@@94))
))) (forall (($generated@@95 T@T) ($generated@@96 T@T) ) (! (= ($generated@@86 ($generated@@82 $generated@@95 $generated@@96)) $generated@@96)
 :pattern ( ($generated@@82 $generated@@95 $generated@@96))
))) (forall (($generated@@97 T@U) ($generated@@98 T@U) ) (! (let (($generated@@99 ($generated@@86 (type $generated@@97))))
(= (type ($generated@@87 $generated@@97 $generated@@98)) $generated@@99))
 :pattern ( ($generated@@87 $generated@@97 $generated@@98))
))) (forall (($generated@@100 T@U) ($generated@@101 T@U) ($generated@@102 T@U) ) (! (let (($generated@@103 (type $generated@@102)))
(let (($generated@@104 (type $generated@@101)))
(= (type ($generated@@88 $generated@@100 $generated@@101 $generated@@102)) ($generated@@82 $generated@@104 $generated@@103))))
 :pattern ( ($generated@@88 $generated@@100 $generated@@101 $generated@@102))
))) (forall (($generated@@105 T@U) ($generated@@106 T@U) ($generated@@107 T@U) ) (! (let (($generated@@108 ($generated@@86 (type $generated@@105))))
 (=> (= (type $generated@@107) $generated@@108) (= ($generated@@87 ($generated@@88 $generated@@105 $generated@@106 $generated@@107) $generated@@106) $generated@@107)))
 :weight 0
))) (and (forall (($generated@@109 T@U) ($generated@@110 T@U) ($generated@@111 T@U) ($generated@@112 T@U) ) (!  (or (= $generated@@111 $generated@@112) (= ($generated@@87 ($generated@@88 $generated@@110 $generated@@111 $generated@@109) $generated@@112) ($generated@@87 $generated@@110 $generated@@112)))
 :weight 0
)) (forall (($generated@@113 T@U) ($generated@@114 T@U) ($generated@@115 T@U) ($generated@@116 T@U) ) (!  (or true (= ($generated@@87 ($generated@@88 $generated@@114 $generated@@115 $generated@@113) $generated@@116) ($generated@@87 $generated@@114 $generated@@116)))
 :weight 0
)))) (= ($generated@@1 $generated@@83) 12)) (forall (($generated@@117 T@U) ($generated@@118 T@U) ) (! (let (($generated@@119 ($generated@@73 (type $generated@@118))))
(= (type ($generated@@89 $generated@@117 $generated@@118)) $generated@@119))
 :pattern ( ($generated@@89 $generated@@117 $generated@@118))
))) (= ($generated@@1 $generated@@84) 13)) (forall (($generated@@120 T@U) ($generated@@121 T@U) ($generated@@122 T@U) ) (! (= (type ($generated@@90 $generated@@120 $generated@@121 $generated@@122)) $generated@@84)
 :pattern ( ($generated@@90 $generated@@120 $generated@@121 $generated@@122))
))) (forall (($generated@@123 T@U) ($generated@@124 T@U) ($generated@@125 T@U) ) (! (let (($generated@@126 ($generated@@73 (type $generated@@124))))
 (=> (= (type $generated@@125) $generated@@126) (= ($generated@@89 ($generated@@90 $generated@@123 $generated@@124 $generated@@125) $generated@@124) $generated@@125)))
 :weight 0
))) (and (forall (($generated@@127 T@U) ($generated@@128 T@U) ($generated@@129 T@U) ($generated@@130 T@U) ) (!  (or (= $generated@@129 $generated@@130) (= ($generated@@89 ($generated@@90 $generated@@128 $generated@@129 $generated@@127) $generated@@130) ($generated@@89 $generated@@128 $generated@@130)))
 :weight 0
)) (forall (($generated@@131 T@U) ($generated@@132 T@U) ($generated@@133 T@U) ($generated@@134 T@U) ) (!  (or true (= ($generated@@89 ($generated@@90 $generated@@132 $generated@@133 $generated@@131) $generated@@134) ($generated@@89 $generated@@132 $generated@@134)))
 :weight 0
)))) (forall (($generated@@135 Int) ) (! (= (type ($generated@@81 $generated@@135)) $generated@@70)
 :pattern ( ($generated@@81 $generated@@135))
))))
(assert (forall (($generated@@136 T@U) ($generated@@137 T@U) ) (!  (=> (and (= (type $generated@@136) $generated@@2) (= (type $generated@@137) ($generated@@82 $generated@@83 $generated@@84))) ($generated@@80 $generated@@136 ($generated@@81 0) $generated@@137))
 :pattern ( ($generated@@80 $generated@@136 ($generated@@81 0) $generated@@137))
)))
(assert (forall (($generated@@139 T@U) ) (!  (=> (= (type $generated@@139) $generated@@2) ($generated@@138 $generated@@139 ($generated@@81 0)))
 :pattern ( ($generated@@138 $generated@@139 ($generated@@81 0)))
)))
(assert  (and (= ($generated@@1 $generated@@142) 14) (forall (($generated@@143 T@U) ($generated@@144 T@U) ) (! (= (type ($generated@@141 $generated@@143 $generated@@144)) $generated@@70)
 :pattern ( ($generated@@141 $generated@@143 $generated@@144))
))))
(assert (forall (($generated@@145 T@U) ($generated@@146 T@U) ($generated@@147 T@U) ) (!  (=> (and (and (and (= (type $generated@@145) $generated@@70) (= (type $generated@@146) $generated@@70)) (= (type $generated@@147) $generated@@142)) ($generated@@138 $generated@@147 ($generated@@141 $generated@@145 $generated@@146))) ($generated@@140 $generated@@147))
 :pattern ( ($generated@@140 $generated@@147) ($generated@@138 $generated@@147 ($generated@@141 $generated@@145 $generated@@146)))
)))
(assert  (and (and (= ($generated@@1 $generated@@151) 15) (forall (($generated@@152 T@U) ) (! (= (type ($generated@@149 $generated@@152)) $generated@@151)
 :pattern ( ($generated@@149 $generated@@152))
))) (forall (($generated@@153 T@U) ) (! (= (type ($generated@@150 $generated@@153)) $generated@@151)
 :pattern ( ($generated@@150 $generated@@153))
))))
(assert (forall (($generated@@154 T@U) ($generated@@155 T@U) ) (!  (=> (and (and (= (type $generated@@154) $generated@@142) (= (type $generated@@155) $generated@@142)) true) (= ($generated@@148 $generated@@154 $generated@@155)  (and (= ($generated@@149 $generated@@154) ($generated@@149 $generated@@155)) (= ($generated@@150 $generated@@154) ($generated@@150 $generated@@155)))))
 :pattern ( ($generated@@148 $generated@@154 $generated@@155))
)))
(assert  (and (forall (($generated@@158 T@U) ) (! (= (type ($generated@@156 $generated@@158)) $generated@@74)
 :pattern ( ($generated@@156 $generated@@158))
)) (= (type $generated@@157) $generated@@142)))
(assert (= ($generated@@156 $generated@@157) $generated@@63))
(assert (= (type $generated@@159) $generated@@142))
(assert (= ($generated@@156 $generated@@159) $generated@@65))
(assert (= (type $generated@@160) $generated@@142))
(assert (= ($generated@@156 $generated@@160) $generated@@66))
(assert (= (type $generated@@161) $generated@@142))
(assert (= ($generated@@156 $generated@@161) $generated@@67))
(assert (forall (($generated@@164 T@U) ) (! (= (type ($generated@@162 $generated@@164)) $generated@@70)
 :pattern ( ($generated@@162 $generated@@164))
)))
(assert (forall (($generated@@165 T@U) ($generated@@166 T@U) ) (!  (=> (and (and (= (type $generated@@165) ($generated@@82 $generated@@151 $generated@@2)) (= (type $generated@@166) $generated@@70)) ($generated@@138 $generated@@165 ($generated@@162 $generated@@166))) ($generated@@163 $generated@@165))
 :pattern ( ($generated@@138 $generated@@165 ($generated@@162 $generated@@166)))
)))
(assert  (and (and (and (and (and (and (and (forall (($generated@@173 T@T) ($generated@@174 T@T) ) (= ($generated@@1 ($generated@@169 $generated@@173 $generated@@174)) 16)) (forall (($generated@@175 T@T) ($generated@@176 T@T) ) (! (= ($generated@@170 ($generated@@169 $generated@@175 $generated@@176)) $generated@@175)
 :pattern ( ($generated@@169 $generated@@175 $generated@@176))
))) (forall (($generated@@177 T@T) ($generated@@178 T@T) ) (! (= ($generated@@171 ($generated@@169 $generated@@177 $generated@@178)) $generated@@178)
 :pattern ( ($generated@@169 $generated@@177 $generated@@178))
))) (forall (($generated@@179 T@U) ($generated@@180 T@U) ($generated@@181 T@U) ) (! (let (($generated@@182 ($generated@@171 (type $generated@@179))))
(= (type ($generated@@167 $generated@@179 $generated@@180 $generated@@181)) $generated@@182))
 :pattern ( ($generated@@167 $generated@@179 $generated@@180 $generated@@181))
))) (forall (($generated@@183 T@U) ($generated@@184 T@U) ($generated@@185 T@U) ($generated@@186 T@U) ) (! (let (($generated@@187 (type $generated@@186)))
(let (($generated@@188 (type $generated@@184)))
(= (type ($generated@@172 $generated@@183 $generated@@184 $generated@@185 $generated@@186)) ($generated@@169 $generated@@188 $generated@@187))))
 :pattern ( ($generated@@172 $generated@@183 $generated@@184 $generated@@185 $generated@@186))
))) (forall (($generated@@189 T@U) ($generated@@190 T@U) ($generated@@191 T@U) ($generated@@192 T@U) ) (! (let (($generated@@193 ($generated@@171 (type $generated@@189))))
 (=> (= (type $generated@@192) $generated@@193) (= ($generated@@167 ($generated@@172 $generated@@189 $generated@@190 $generated@@191 $generated@@192) $generated@@190 $generated@@191) $generated@@192)))
 :weight 0
))) (and (and (forall (($generated@@194 T@U) ($generated@@195 T@U) ($generated@@196 T@U) ($generated@@197 T@U) ($generated@@198 T@U) ($generated@@199 T@U) ) (!  (or (= $generated@@196 $generated@@198) (= ($generated@@167 ($generated@@172 $generated@@195 $generated@@196 $generated@@197 $generated@@194) $generated@@198 $generated@@199) ($generated@@167 $generated@@195 $generated@@198 $generated@@199)))
 :weight 0
)) (forall (($generated@@200 T@U) ($generated@@201 T@U) ($generated@@202 T@U) ($generated@@203 T@U) ($generated@@204 T@U) ($generated@@205 T@U) ) (!  (or (= $generated@@203 $generated@@205) (= ($generated@@167 ($generated@@172 $generated@@201 $generated@@202 $generated@@203 $generated@@200) $generated@@204 $generated@@205) ($generated@@167 $generated@@201 $generated@@204 $generated@@205)))
 :weight 0
))) (forall (($generated@@206 T@U) ($generated@@207 T@U) ($generated@@208 T@U) ($generated@@209 T@U) ($generated@@210 T@U) ($generated@@211 T@U) ) (!  (or true (= ($generated@@167 ($generated@@172 $generated@@207 $generated@@208 $generated@@209 $generated@@206) $generated@@210 $generated@@211) ($generated@@167 $generated@@207 $generated@@210 $generated@@211)))
 :weight 0
)))) (forall (($generated@@212 T@U) ($generated@@213 T@U) ($generated@@214 T@U) ($generated@@215 Bool) ) (! (= (type ($generated@@168 $generated@@212 $generated@@213 $generated@@214 $generated@@215)) ($generated@@169 $generated@@83 $generated@@4))
 :pattern ( ($generated@@168 $generated@@212 $generated@@213 $generated@@214 $generated@@215))
))))
(assert (forall (($generated@@216 T@U) ($generated@@217 T@U) ($generated@@218 T@U) ($generated@@219 Bool) ($generated@@220 T@U) ($generated@@221 T@U) ) (! (let (($generated@@222 ($generated@@73 (type $generated@@221))))
 (=> (and (and (and (and (= (type $generated@@216) $generated@@83) (= (type $generated@@217) ($generated@@82 $generated@@83 $generated@@84))) (= (type $generated@@218) ($generated@@72 $generated@@4))) (= (type $generated@@220) $generated@@83)) (= (type $generated@@221) ($generated@@72 $generated@@222))) (= ($generated@@0 ($generated@@167 ($generated@@168 $generated@@216 $generated@@217 $generated@@218 $generated@@219) $generated@@220 $generated@@221))  (=> (and (not (= $generated@@220 $generated@@216)) ($generated@@0 ($generated@@89 ($generated@@87 $generated@@217 $generated@@220) $generated@@218))) $generated@@219))))
 :pattern ( ($generated@@167 ($generated@@168 $generated@@216 $generated@@217 $generated@@218 $generated@@219) $generated@@220 $generated@@221))
)))
(assert (forall (($generated@@225 T@U) ($generated@@226 T@U) ) (! (= (type ($generated@@223 $generated@@225 $generated@@226)) $generated@@142)
 :pattern ( ($generated@@223 $generated@@225 $generated@@226))
)))
(assert (forall (($generated@@227 T@U) ($generated@@228 T@U) ($generated@@229 T@U) ($generated@@230 T@U) ) (!  (=> (and (and (and (= (type $generated@@227) $generated@@70) (= (type $generated@@228) $generated@@70)) (= (type $generated@@229) $generated@@151)) (= (type $generated@@230) $generated@@151)) (= ($generated@@138 ($generated@@223 $generated@@229 $generated@@230) ($generated@@141 $generated@@227 $generated@@228))  (and ($generated@@224 $generated@@229 $generated@@227) ($generated@@224 $generated@@230 $generated@@228))))
 :pattern ( ($generated@@138 ($generated@@223 $generated@@229 $generated@@230) ($generated@@141 $generated@@227 $generated@@228)))
)))
(assert (= (type $generated@@231) $generated@@70))
(assert ($generated@@138 $generated@@157 $generated@@231))
(assert ($generated@@138 $generated@@159 $generated@@231))
(assert ($generated@@138 $generated@@160 $generated@@231))
(assert ($generated@@138 $generated@@161 $generated@@231))
(assert (forall (($generated@@233 T@U) ) (!  (=> (and (= (type $generated@@233) ($generated@@82 $generated@@83 $generated@@84)) ($generated@@232 $generated@@233)) ($generated@@80 $generated@@157 $generated@@231 $generated@@233))
 :pattern ( ($generated@@80 $generated@@157 $generated@@231 $generated@@233))
)))
(assert (forall (($generated@@234 T@U) ) (!  (=> (and (= (type $generated@@234) ($generated@@82 $generated@@83 $generated@@84)) ($generated@@232 $generated@@234)) ($generated@@80 $generated@@159 $generated@@231 $generated@@234))
 :pattern ( ($generated@@80 $generated@@159 $generated@@231 $generated@@234))
)))
(assert (forall (($generated@@235 T@U) ) (!  (=> (and (= (type $generated@@235) ($generated@@82 $generated@@83 $generated@@84)) ($generated@@232 $generated@@235)) ($generated@@80 $generated@@160 $generated@@231 $generated@@235))
 :pattern ( ($generated@@80 $generated@@160 $generated@@231 $generated@@235))
)))
(assert (forall (($generated@@236 T@U) ) (!  (=> (and (= (type $generated@@236) ($generated@@82 $generated@@83 $generated@@84)) ($generated@@232 $generated@@236)) ($generated@@80 $generated@@161 $generated@@231 $generated@@236))
 :pattern ( ($generated@@80 $generated@@161 $generated@@231 $generated@@236))
)))
(assert (forall (($generated@@237 T@U) ($generated@@238 T@U) ) (!  (=> (and (= (type $generated@@237) $generated@@142) (= (type $generated@@238) $generated@@142)) (= ($generated@@148 $generated@@237 $generated@@238) (= $generated@@237 $generated@@238)))
 :pattern ( ($generated@@148 $generated@@237 $generated@@238))
)))
(assert (forall (($generated@@240 T@U) ($generated@@241 T@U) ) (!  (=> (and (= (type $generated@@240) $generated@@142) (= (type $generated@@241) $generated@@142)) (= ($generated@@239 $generated@@240 $generated@@241) (= $generated@@240 $generated@@241)))
 :pattern ( ($generated@@239 $generated@@240 $generated@@241))
)))
(assert (forall (($generated@@243 T@U) ) (! (= (type ($generated@@242 $generated@@243)) $generated@@70)
 :pattern ( ($generated@@242 $generated@@243))
)))
(assert (forall (($generated@@244 T@U) ($generated@@245 T@U) ) (!  (=> (and (= (type $generated@@244) ($generated@@82 $generated@@151 $generated@@4)) (= (type $generated@@245) $generated@@70)) (= ($generated@@138 $generated@@244 ($generated@@242 $generated@@245)) (forall (($generated@@246 T@U) ) (!  (=> (and (= (type $generated@@246) $generated@@151) ($generated@@0 ($generated@@87 $generated@@244 $generated@@246))) ($generated@@224 $generated@@246 $generated@@245))
 :pattern ( ($generated@@87 $generated@@244 $generated@@246))
))))
 :pattern ( ($generated@@138 $generated@@244 ($generated@@242 $generated@@245)))
)))
(assert (forall (($generated@@248 T@U) ) (! (= (type ($generated@@247 $generated@@248)) $generated@@70)
 :pattern ( ($generated@@247 $generated@@248))
)))
(assert (forall (($generated@@249 T@U) ($generated@@250 T@U) ) (!  (=> (and (= (type $generated@@249) ($generated@@82 $generated@@151 $generated@@4)) (= (type $generated@@250) $generated@@70)) (= ($generated@@138 $generated@@249 ($generated@@247 $generated@@250)) (forall (($generated@@251 T@U) ) (!  (=> (and (= (type $generated@@251) $generated@@151) ($generated@@0 ($generated@@87 $generated@@249 $generated@@251))) ($generated@@224 $generated@@251 $generated@@250))
 :pattern ( ($generated@@87 $generated@@249 $generated@@251))
))))
 :pattern ( ($generated@@138 $generated@@249 ($generated@@247 $generated@@250)))
)))
(assert (forall (($generated@@253 T@U) ) (! (let (($generated@@254 (type $generated@@253)))
(= (type ($generated@@252 $generated@@253)) $generated@@254))
 :pattern ( ($generated@@252 $generated@@253))
)))
(assert (forall (($generated@@255 T@U) ) (! (= ($generated@@252 $generated@@255) $generated@@255)
 :pattern ( ($generated@@252 $generated@@255))
)))
(assert (forall (($generated@@257 T@U) ($generated@@258 T@U) ) (!  (=> (and (and (= (type $generated@@257) $generated@@142) (= (type $generated@@258) $generated@@142)) (and ($generated@@256 $generated@@257) ($generated@@256 $generated@@258))) (= ($generated@@239 $generated@@257 $generated@@258) true))
 :pattern ( ($generated@@239 $generated@@257 $generated@@258) ($generated@@256 $generated@@257))
 :pattern ( ($generated@@239 $generated@@257 $generated@@258) ($generated@@256 $generated@@258))
)))
(assert (forall (($generated@@260 T@U) ($generated@@261 T@U) ) (!  (=> (and (and (= (type $generated@@260) $generated@@142) (= (type $generated@@261) $generated@@142)) (and ($generated@@259 $generated@@260) ($generated@@259 $generated@@261))) (= ($generated@@239 $generated@@260 $generated@@261) true))
 :pattern ( ($generated@@239 $generated@@260 $generated@@261) ($generated@@259 $generated@@260))
 :pattern ( ($generated@@239 $generated@@260 $generated@@261) ($generated@@259 $generated@@261))
)))
(assert (forall (($generated@@263 T@U) ($generated@@264 T@U) ) (!  (=> (and (and (= (type $generated@@263) $generated@@142) (= (type $generated@@264) $generated@@142)) (and ($generated@@262 $generated@@263) ($generated@@262 $generated@@264))) (= ($generated@@239 $generated@@263 $generated@@264) true))
 :pattern ( ($generated@@239 $generated@@263 $generated@@264) ($generated@@262 $generated@@263))
 :pattern ( ($generated@@239 $generated@@263 $generated@@264) ($generated@@262 $generated@@264))
)))
(assert (forall (($generated@@266 T@U) ($generated@@267 T@U) ) (!  (=> (and (and (= (type $generated@@266) $generated@@142) (= (type $generated@@267) $generated@@142)) (and ($generated@@265 $generated@@266) ($generated@@265 $generated@@267))) (= ($generated@@239 $generated@@266 $generated@@267) true))
 :pattern ( ($generated@@239 $generated@@266 $generated@@267) ($generated@@265 $generated@@266))
 :pattern ( ($generated@@239 $generated@@266 $generated@@267) ($generated@@265 $generated@@267))
)))
(assert (forall (($generated@@269 T@U) ($generated@@270 T@U) ($generated@@271 T@U) ($generated@@272 T@U) ($generated@@273 T@U) ) (!  (=> (and (and (and (and (and (= (type $generated@@269) $generated@@70) (= (type $generated@@270) $generated@@70)) (= (type $generated@@271) $generated@@151)) (= (type $generated@@272) $generated@@151)) (= (type $generated@@273) ($generated@@82 $generated@@83 $generated@@84))) ($generated@@232 $generated@@273)) (= ($generated@@80 ($generated@@223 $generated@@271 $generated@@272) ($generated@@141 $generated@@269 $generated@@270) $generated@@273)  (and ($generated@@268 $generated@@271 $generated@@269 $generated@@273) ($generated@@268 $generated@@272 $generated@@270 $generated@@273))))
 :pattern ( ($generated@@80 ($generated@@223 $generated@@271 $generated@@272) ($generated@@141 $generated@@269 $generated@@270) $generated@@273))
)))
(assert (forall (($generated@@274 T@U) ) (!  (=> (= (type $generated@@274) $generated@@142) (= ($generated@@140 $generated@@274) (= ($generated@@156 $generated@@274) $generated@@61)))
 :pattern ( ($generated@@140 $generated@@274))
)))
(assert (forall (($generated@@275 T@U) ) (!  (=> (= (type $generated@@275) $generated@@142) (= ($generated@@256 $generated@@275) (= ($generated@@156 $generated@@275) $generated@@63)))
 :pattern ( ($generated@@256 $generated@@275))
)))
(assert (forall (($generated@@276 T@U) ) (!  (=> (= (type $generated@@276) $generated@@142) (= ($generated@@259 $generated@@276) (= ($generated@@156 $generated@@276) $generated@@65)))
 :pattern ( ($generated@@259 $generated@@276))
)))
(assert (forall (($generated@@277 T@U) ) (!  (=> (= (type $generated@@277) $generated@@142) (= ($generated@@262 $generated@@277) (= ($generated@@156 $generated@@277) $generated@@66)))
 :pattern ( ($generated@@262 $generated@@277))
)))
(assert (forall (($generated@@278 T@U) ) (!  (=> (= (type $generated@@278) $generated@@142) (= ($generated@@265 $generated@@278) (= ($generated@@156 $generated@@278) $generated@@67)))
 :pattern ( ($generated@@265 $generated@@278))
)))
(assert (forall (($generated@@279 T@U) ) (!  (=> (and (= (type $generated@@279) $generated@@142) ($generated@@140 $generated@@279)) (exists (($generated@@280 T@U) ($generated@@281 T@U) ) (!  (and (and (= (type $generated@@280) $generated@@151) (= (type $generated@@281) $generated@@151)) (= $generated@@279 ($generated@@223 $generated@@280 $generated@@281)))
 :no-pattern (type $generated@@280)
 :no-pattern (type $generated@@281)
 :no-pattern ($generated $generated@@280)
 :no-pattern ($generated@@0 $generated@@280)
 :no-pattern ($generated $generated@@281)
 :no-pattern ($generated@@0 $generated@@281)
)))
 :pattern ( ($generated@@140 $generated@@279))
)))
(assert  (and (and (forall (($generated@@286 T@T) ) (= ($generated@@1 ($generated@@284 $generated@@286)) 17)) (forall (($generated@@287 T@T) ) (! (= ($generated@@285 ($generated@@284 $generated@@287)) $generated@@287)
 :pattern ( ($generated@@284 $generated@@287))
))) (forall (($generated@@288 T@T) ) (! (= (type ($generated@@282 $generated@@288)) ($generated@@284 $generated@@288))
 :pattern ( ($generated@@282 $generated@@288))
))))
(assert (forall (($generated@@289 T@T) ) (! (= ($generated@@283 ($generated@@282 $generated@@289)) 0)
 :pattern ( ($generated@@282 $generated@@289))
)))
(assert (forall (($generated@@290 T@U) ) (!  (=> (and (= (type $generated@@290) $generated@@142) ($generated@@256 $generated@@290)) (= $generated@@290 $generated@@157))
 :pattern ( ($generated@@256 $generated@@290))
)))
(assert (forall (($generated@@291 T@U) ) (!  (=> (and (= (type $generated@@291) $generated@@142) ($generated@@259 $generated@@291)) (= $generated@@291 $generated@@159))
 :pattern ( ($generated@@259 $generated@@291))
)))
(assert (forall (($generated@@292 T@U) ) (!  (=> (and (= (type $generated@@292) $generated@@142) ($generated@@262 $generated@@292)) (= $generated@@292 $generated@@160))
 :pattern ( ($generated@@262 $generated@@292))
)))
(assert (forall (($generated@@293 T@U) ) (!  (=> (and (= (type $generated@@293) $generated@@142) ($generated@@265 $generated@@293)) (= $generated@@293 $generated@@161))
 :pattern ( ($generated@@265 $generated@@293))
)))
(assert (forall (($generated@@295 T@U) ) (! (= (type ($generated@@294 $generated@@295)) $generated@@151)
 :pattern ( ($generated@@294 $generated@@295))
)))
(assert (forall (($generated@@296 T@U) ($generated@@297 T@U) ($generated@@298 T@U) ) (!  (=> (and (= (type $generated@@297) $generated@@70) (= (type $generated@@298) ($generated@@82 $generated@@83 $generated@@84))) (= ($generated@@268 ($generated@@294 $generated@@296) $generated@@297 $generated@@298) ($generated@@80 $generated@@296 $generated@@297 $generated@@298)))
 :pattern ( ($generated@@268 ($generated@@294 $generated@@296) $generated@@297 $generated@@298))
)))
(assert (forall (($generated@@301 T@T) ) (! (= (type ($generated@@300 $generated@@301)) ($generated@@82 $generated@@301 $generated@@2))
 :pattern ( ($generated@@300 $generated@@301))
)))
(assert (forall (($generated@@302 T@U) ) (! (let (($generated@@303 ($generated@@85 (type $generated@@302))))
 (=> (= (type $generated@@302) ($generated@@82 $generated@@303 $generated@@2)) (and (= (= ($generated@@299 $generated@@302) 0) (= $generated@@302 ($generated@@300 $generated@@303))) (=> (not (= ($generated@@299 $generated@@302) 0)) (exists (($generated@@304 T@U) ) (!  (and (= (type $generated@@304) $generated@@303) (< 0 ($generated ($generated@@87 $generated@@302 $generated@@304))))
 :no-pattern (type $generated@@304)
 :no-pattern ($generated $generated@@304)
 :no-pattern ($generated@@0 $generated@@304)
))))))
 :pattern ( ($generated@@299 $generated@@302))
)))
(assert  (and (and (and (and (forall (($generated@@310 T@T) ($generated@@311 T@T) ) (= ($generated@@1 ($generated@@307 $generated@@310 $generated@@311)) 18)) (forall (($generated@@312 T@T) ($generated@@313 T@T) ) (! (= ($generated@@308 ($generated@@307 $generated@@312 $generated@@313)) $generated@@312)
 :pattern ( ($generated@@307 $generated@@312 $generated@@313))
))) (forall (($generated@@314 T@T) ($generated@@315 T@T) ) (! (= ($generated@@309 ($generated@@307 $generated@@314 $generated@@315)) $generated@@315)
 :pattern ( ($generated@@307 $generated@@314 $generated@@315))
))) (forall (($generated@@316 T@U) ) (! (let (($generated@@317 ($generated@@308 (type $generated@@316))))
(= (type ($generated@@305 $generated@@316)) ($generated@@82 $generated@@317 $generated@@4)))
 :pattern ( ($generated@@305 $generated@@316))
))) (forall (($generated@@318 T@T) ($generated@@319 T@T) ) (! (= (type ($generated@@306 $generated@@318 $generated@@319)) ($generated@@307 $generated@@318 $generated@@319))
 :pattern ( ($generated@@306 $generated@@318 $generated@@319))
))))
(assert (forall (($generated@@320 T@U) ($generated@@321 T@T) ) (! (let (($generated@@322 (type $generated@@320)))
 (not ($generated@@0 ($generated@@87 ($generated@@305 ($generated@@306 $generated@@322 $generated@@321)) $generated@@320))))
 :pattern ( (let (($generated@@322 (type $generated@@320)))
($generated@@87 ($generated@@305 ($generated@@306 $generated@@322 $generated@@321)) $generated@@320)))
)))
(assert  (and (and (and (and (forall (($generated@@328 T@T) ($generated@@329 T@T) ) (= ($generated@@1 ($generated@@325 $generated@@328 $generated@@329)) 19)) (forall (($generated@@330 T@T) ($generated@@331 T@T) ) (! (= ($generated@@326 ($generated@@325 $generated@@330 $generated@@331)) $generated@@330)
 :pattern ( ($generated@@325 $generated@@330 $generated@@331))
))) (forall (($generated@@332 T@T) ($generated@@333 T@T) ) (! (= ($generated@@327 ($generated@@325 $generated@@332 $generated@@333)) $generated@@333)
 :pattern ( ($generated@@325 $generated@@332 $generated@@333))
))) (forall (($generated@@334 T@U) ) (! (let (($generated@@335 ($generated@@326 (type $generated@@334))))
(= (type ($generated@@323 $generated@@334)) ($generated@@82 $generated@@335 $generated@@4)))
 :pattern ( ($generated@@323 $generated@@334))
))) (forall (($generated@@336 T@T) ($generated@@337 T@T) ) (! (= (type ($generated@@324 $generated@@336 $generated@@337)) ($generated@@325 $generated@@336 $generated@@337))
 :pattern ( ($generated@@324 $generated@@336 $generated@@337))
))))
(assert (forall (($generated@@338 T@U) ($generated@@339 T@T) ) (! (let (($generated@@340 (type $generated@@338)))
 (not ($generated@@0 ($generated@@87 ($generated@@323 ($generated@@324 $generated@@340 $generated@@339)) $generated@@338))))
 :pattern ( (let (($generated@@340 (type $generated@@338)))
($generated@@87 ($generated@@323 ($generated@@324 $generated@@340 $generated@@339)) $generated@@338)))
)))
(assert (forall (($generated@@341 T@U) ) (! (let (($generated@@342 ($generated@@85 (type $generated@@341))))
 (=> (= (type $generated@@341) ($generated@@82 $generated@@342 $generated@@2)) (= ($generated@@163 $generated@@341) (forall (($generated@@343 T@U) ) (!  (=> (= (type $generated@@343) $generated@@342) (and (<= 0 ($generated ($generated@@87 $generated@@341 $generated@@343))) (<= ($generated ($generated@@87 $generated@@341 $generated@@343)) ($generated@@299 $generated@@341))))
 :pattern ( ($generated@@87 $generated@@341 $generated@@343))
)))))
 :pattern ( ($generated@@163 $generated@@341))
)))
(assert (forall (($generated@@345 T@T) ($generated@@346 T@U) ) (! (= (type ($generated@@344 $generated@@345 $generated@@346)) $generated@@345)
 :pattern ( ($generated@@344 $generated@@345 $generated@@346))
)))
(assert (forall (($generated@@347 T@U) ) (!  (=> (and (= (type $generated@@347) $generated@@151) ($generated@@224 $generated@@347 $generated@@231)) (and (= ($generated@@294 ($generated@@344 $generated@@142 $generated@@347)) $generated@@347) ($generated@@138 ($generated@@344 $generated@@142 $generated@@347) $generated@@231)))
 :pattern ( ($generated@@224 $generated@@347 $generated@@231))
)))
(assert (forall (($generated@@348 T@U) ) (! (let (($generated@@349 ($generated@@309 (type $generated@@348))))
(let (($generated@@350 ($generated@@308 (type $generated@@348))))
 (=> (= (type $generated@@348) ($generated@@307 $generated@@350 $generated@@349)) (or (= $generated@@348 ($generated@@306 $generated@@350 $generated@@349)) (exists (($generated@@351 T@U) ) (!  (and (= (type $generated@@351) $generated@@350) ($generated@@0 ($generated@@87 ($generated@@305 $generated@@348) $generated@@351)))
 :no-pattern (type $generated@@351)
 :no-pattern ($generated $generated@@351)
 :no-pattern ($generated@@0 $generated@@351)
))))))
 :pattern ( ($generated@@305 $generated@@348))
)))
(assert (forall (($generated@@353 T@U) ) (! (let (($generated@@354 ($generated@@309 (type $generated@@353))))
(= (type ($generated@@352 $generated@@353)) ($generated@@82 $generated@@354 $generated@@4)))
 :pattern ( ($generated@@352 $generated@@353))
)))
(assert (forall (($generated@@355 T@U) ) (! (let (($generated@@356 ($generated@@309 (type $generated@@355))))
(let (($generated@@357 ($generated@@308 (type $generated@@355))))
 (=> (= (type $generated@@355) ($generated@@307 $generated@@357 $generated@@356)) (or (= $generated@@355 ($generated@@306 $generated@@357 $generated@@356)) (exists (($generated@@358 T@U) ) (!  (and (= (type $generated@@358) $generated@@356) ($generated@@0 ($generated@@87 ($generated@@352 $generated@@355) $generated@@358)))
 :no-pattern (type $generated@@358)
 :no-pattern ($generated $generated@@358)
 :no-pattern ($generated@@0 $generated@@358)
))))))
 :pattern ( ($generated@@352 $generated@@355))
)))
(assert (forall (($generated@@359 T@U) ) (! (let (($generated@@360 ($generated@@327 (type $generated@@359))))
(let (($generated@@361 ($generated@@326 (type $generated@@359))))
 (=> (= (type $generated@@359) ($generated@@325 $generated@@361 $generated@@360)) (or (= $generated@@359 ($generated@@324 $generated@@361 $generated@@360)) (exists (($generated@@362 T@U) ) (!  (and (= (type $generated@@362) $generated@@361) ($generated@@0 ($generated@@87 ($generated@@323 $generated@@359) $generated@@362)))
 :no-pattern (type $generated@@362)
 :no-pattern ($generated $generated@@362)
 :no-pattern ($generated@@0 $generated@@362)
))))))
 :pattern ( ($generated@@323 $generated@@359))
)))
(assert (forall (($generated@@364 T@U) ) (! (let (($generated@@365 ($generated@@327 (type $generated@@364))))
(= (type ($generated@@363 $generated@@364)) ($generated@@82 $generated@@365 $generated@@4)))
 :pattern ( ($generated@@363 $generated@@364))
)))
(assert (forall (($generated@@366 T@U) ) (! (let (($generated@@367 ($generated@@327 (type $generated@@366))))
(let (($generated@@368 ($generated@@326 (type $generated@@366))))
 (=> (= (type $generated@@366) ($generated@@325 $generated@@368 $generated@@367)) (or (= $generated@@366 ($generated@@324 $generated@@368 $generated@@367)) (exists (($generated@@369 T@U) ) (!  (and (= (type $generated@@369) $generated@@367) ($generated@@0 ($generated@@87 ($generated@@363 $generated@@366) $generated@@369)))
 :no-pattern (type $generated@@369)
 :no-pattern ($generated $generated@@369)
 :no-pattern ($generated@@0 $generated@@369)
))))))
 :pattern ( ($generated@@363 $generated@@366))
)))
(assert (forall (($generated@@370 T@U) ($generated@@371 T@U) ) (!  (=> (and (= (type $generated@@370) ($generated@@82 $generated@@151 $generated@@2)) (= (type $generated@@371) $generated@@70)) (= ($generated@@138 $generated@@370 ($generated@@162 $generated@@371)) (forall (($generated@@372 T@U) ) (!  (=> (and (= (type $generated@@372) $generated@@151) (< 0 ($generated ($generated@@87 $generated@@370 $generated@@372)))) ($generated@@224 $generated@@372 $generated@@371))
 :pattern ( ($generated@@87 $generated@@370 $generated@@372))
))))
 :pattern ( ($generated@@138 $generated@@370 ($generated@@162 $generated@@371)))
)))
(assert (forall (($generated@@373 T@U) ($generated@@374 T@U) ($generated@@375 T@U) ) (!  (=> (and (and (= (type $generated@@373) ($generated@@82 $generated@@151 $generated@@4)) (= (type $generated@@374) $generated@@70)) (= (type $generated@@375) ($generated@@82 $generated@@83 $generated@@84))) (= ($generated@@80 $generated@@373 ($generated@@242 $generated@@374) $generated@@375) (forall (($generated@@376 T@U) ) (!  (=> (and (= (type $generated@@376) $generated@@151) ($generated@@0 ($generated@@87 $generated@@373 $generated@@376))) ($generated@@268 $generated@@376 $generated@@374 $generated@@375))
 :pattern ( ($generated@@87 $generated@@373 $generated@@376))
))))
 :pattern ( ($generated@@80 $generated@@373 ($generated@@242 $generated@@374) $generated@@375))
)))
(assert (forall (($generated@@377 T@U) ($generated@@378 T@U) ($generated@@379 T@U) ) (!  (=> (and (and (= (type $generated@@377) ($generated@@82 $generated@@151 $generated@@4)) (= (type $generated@@378) $generated@@70)) (= (type $generated@@379) ($generated@@82 $generated@@83 $generated@@84))) (= ($generated@@80 $generated@@377 ($generated@@247 $generated@@378) $generated@@379) (forall (($generated@@380 T@U) ) (!  (=> (and (= (type $generated@@380) $generated@@151) ($generated@@0 ($generated@@87 $generated@@377 $generated@@380))) ($generated@@268 $generated@@380 $generated@@378 $generated@@379))
 :pattern ( ($generated@@87 $generated@@377 $generated@@380))
))))
 :pattern ( ($generated@@80 $generated@@377 ($generated@@247 $generated@@378) $generated@@379))
)))
(assert (forall (($generated@@381 T@U) ) (! (let (($generated@@382 (type $generated@@381)))
(= ($generated ($generated@@87 ($generated@@300 $generated@@382) $generated@@381)) 0))
 :pattern ( (let (($generated@@382 (type $generated@@381)))
($generated@@87 ($generated@@300 $generated@@382) $generated@@381)))
)))
(assert  (and (forall (($generated@@385 T@U) ) (! (= (type ($generated@@383 $generated@@385)) ($generated@@82 $generated@@151 $generated@@4))
 :pattern ( ($generated@@383 $generated@@385))
)) (forall (($generated@@386 T@U) ) (! (let (($generated@@387 ($generated@@309 (type $generated@@386))))
(let (($generated@@388 ($generated@@308 (type $generated@@386))))
(= (type ($generated@@384 $generated@@386)) ($generated@@82 $generated@@388 $generated@@387))))
 :pattern ( ($generated@@384 $generated@@386))
))))
(assert (forall (($generated@@389 T@U) ($generated@@390 T@U) ) (!  (=> (and (= (type $generated@@389) ($generated@@307 $generated@@151 $generated@@151)) (= (type $generated@@390) $generated@@151)) (= ($generated@@0 ($generated@@87 ($generated@@383 $generated@@389) $generated@@390))  (and ($generated@@0 ($generated@@87 ($generated@@305 $generated@@389) ($generated@@149 ($generated@@344 $generated@@142 $generated@@390)))) (= ($generated@@87 ($generated@@384 $generated@@389) ($generated@@149 ($generated@@344 $generated@@142 $generated@@390))) ($generated@@150 ($generated@@344 $generated@@142 $generated@@390))))))
 :pattern ( ($generated@@87 ($generated@@383 $generated@@389) $generated@@390))
)))
(assert  (and (forall (($generated@@393 T@U) ) (! (= (type ($generated@@391 $generated@@393)) ($generated@@82 $generated@@151 $generated@@4))
 :pattern ( ($generated@@391 $generated@@393))
)) (forall (($generated@@394 T@U) ) (! (let (($generated@@395 ($generated@@327 (type $generated@@394))))
(let (($generated@@396 ($generated@@326 (type $generated@@394))))
(= (type ($generated@@392 $generated@@394)) ($generated@@82 $generated@@396 $generated@@395))))
 :pattern ( ($generated@@392 $generated@@394))
))))
(assert (forall (($generated@@397 T@U) ($generated@@398 T@U) ) (!  (=> (and (= (type $generated@@397) ($generated@@325 $generated@@151 $generated@@151)) (= (type $generated@@398) $generated@@151)) (= ($generated@@0 ($generated@@87 ($generated@@391 $generated@@397) $generated@@398))  (and ($generated@@0 ($generated@@87 ($generated@@323 $generated@@397) ($generated@@149 ($generated@@344 $generated@@142 $generated@@398)))) (= ($generated@@87 ($generated@@392 $generated@@397) ($generated@@149 ($generated@@344 $generated@@142 $generated@@398))) ($generated@@150 ($generated@@344 $generated@@142 $generated@@398))))))
 :pattern ( ($generated@@87 ($generated@@391 $generated@@397) $generated@@398))
)))
(assert (forall (($generated@@399 T@U) ($generated@@400 T@U) ) (! (let (($generated@@401 (type $generated@@400)))
(let (($generated@@402 ($generated@@308 (type $generated@@399))))
 (=> (= (type $generated@@399) ($generated@@307 $generated@@402 $generated@@401)) (= ($generated@@0 ($generated@@87 ($generated@@352 $generated@@399) $generated@@400)) (exists (($generated@@403 T@U) ) (!  (and (= (type $generated@@403) $generated@@402) (and ($generated@@0 ($generated@@87 ($generated@@305 $generated@@399) $generated@@403)) (= $generated@@400 ($generated@@87 ($generated@@384 $generated@@399) $generated@@403))))
 :pattern ( ($generated@@87 ($generated@@305 $generated@@399) $generated@@403))
 :pattern ( ($generated@@87 ($generated@@384 $generated@@399) $generated@@403))
))))))
 :pattern ( ($generated@@87 ($generated@@352 $generated@@399) $generated@@400))
)))
(assert (forall (($generated@@404 T@U) ($generated@@405 T@U) ) (! (let (($generated@@406 (type $generated@@405)))
(let (($generated@@407 ($generated@@326 (type $generated@@404))))
 (=> (= (type $generated@@404) ($generated@@325 $generated@@407 $generated@@406)) (= ($generated@@0 ($generated@@87 ($generated@@363 $generated@@404) $generated@@405)) (exists (($generated@@408 T@U) ) (!  (and (= (type $generated@@408) $generated@@407) (and ($generated@@0 ($generated@@87 ($generated@@323 $generated@@404) $generated@@408)) (= $generated@@405 ($generated@@87 ($generated@@392 $generated@@404) $generated@@408))))
 :pattern ( ($generated@@87 ($generated@@323 $generated@@404) $generated@@408))
 :pattern ( ($generated@@87 ($generated@@392 $generated@@404) $generated@@408))
))))))
 :pattern ( ($generated@@87 ($generated@@363 $generated@@404) $generated@@405))
)))
(assert (forall (($generated@@410 T@U) ($generated@@411 T@U) ) (! (= (type ($generated@@409 $generated@@410 $generated@@411)) $generated@@70)
 :pattern ( ($generated@@409 $generated@@410 $generated@@411))
)))
(assert (forall (($generated@@412 T@U) ($generated@@413 T@U) ($generated@@414 T@U) ($generated@@415 T@U) ) (!  (=> (and (and (and (= (type $generated@@412) ($generated@@307 $generated@@151 $generated@@151)) (= (type $generated@@413) $generated@@70)) (= (type $generated@@414) $generated@@70)) (= (type $generated@@415) ($generated@@82 $generated@@83 $generated@@84))) (= ($generated@@80 $generated@@412 ($generated@@409 $generated@@413 $generated@@414) $generated@@415) (forall (($generated@@416 T@U) ) (!  (=> (and (= (type $generated@@416) $generated@@151) ($generated@@0 ($generated@@87 ($generated@@305 $generated@@412) $generated@@416))) (and ($generated@@268 ($generated@@87 ($generated@@384 $generated@@412) $generated@@416) $generated@@414 $generated@@415) ($generated@@268 $generated@@416 $generated@@413 $generated@@415)))
 :pattern ( ($generated@@87 ($generated@@384 $generated@@412) $generated@@416))
 :pattern ( ($generated@@87 ($generated@@305 $generated@@412) $generated@@416))
))))
 :pattern ( ($generated@@80 $generated@@412 ($generated@@409 $generated@@413 $generated@@414) $generated@@415))
)))
(assert (forall (($generated@@418 T@U) ($generated@@419 T@U) ) (! (= (type ($generated@@417 $generated@@418 $generated@@419)) $generated@@70)
 :pattern ( ($generated@@417 $generated@@418 $generated@@419))
)))
(assert (forall (($generated@@420 T@U) ($generated@@421 T@U) ($generated@@422 T@U) ($generated@@423 T@U) ) (!  (=> (and (and (and (= (type $generated@@420) ($generated@@325 $generated@@151 $generated@@151)) (= (type $generated@@421) $generated@@70)) (= (type $generated@@422) $generated@@70)) (= (type $generated@@423) ($generated@@82 $generated@@83 $generated@@84))) (= ($generated@@80 $generated@@420 ($generated@@417 $generated@@421 $generated@@422) $generated@@423) (forall (($generated@@424 T@U) ) (!  (=> (and (= (type $generated@@424) $generated@@151) ($generated@@0 ($generated@@87 ($generated@@323 $generated@@420) $generated@@424))) (and ($generated@@268 ($generated@@87 ($generated@@392 $generated@@420) $generated@@424) $generated@@422 $generated@@423) ($generated@@268 $generated@@424 $generated@@421 $generated@@423)))
 :pattern ( ($generated@@87 ($generated@@392 $generated@@420) $generated@@424))
 :pattern ( ($generated@@87 ($generated@@323 $generated@@420) $generated@@424))
))))
 :pattern ( ($generated@@80 $generated@@420 ($generated@@417 $generated@@421 $generated@@422) $generated@@423))
)))
(assert (forall (($generated@@426 T@T) ) (! (= (type ($generated@@425 $generated@@426)) ($generated@@82 $generated@@426 $generated@@4))
 :pattern ( ($generated@@425 $generated@@426))
)))
(assert (forall (($generated@@427 T@U) ) (! (let (($generated@@428 ($generated@@327 (type $generated@@427))))
(let (($generated@@429 ($generated@@326 (type $generated@@427))))
 (=> (= (type $generated@@427) ($generated@@325 $generated@@429 $generated@@428)) (= (= $generated@@427 ($generated@@324 $generated@@429 $generated@@428)) (= ($generated@@323 $generated@@427) ($generated@@425 $generated@@429))))))
 :pattern ( ($generated@@323 $generated@@427))
)))
(assert (forall (($generated@@430 T@U) ) (! (let (($generated@@431 ($generated@@327 (type $generated@@430))))
(let (($generated@@432 ($generated@@326 (type $generated@@430))))
 (=> (= (type $generated@@430) ($generated@@325 $generated@@432 $generated@@431)) (= (= $generated@@430 ($generated@@324 $generated@@432 $generated@@431)) (= ($generated@@363 $generated@@430) ($generated@@425 $generated@@431))))))
 :pattern ( ($generated@@363 $generated@@430))
)))
(assert (forall (($generated@@433 T@U) ) (! (let (($generated@@434 ($generated@@327 (type $generated@@433))))
(let (($generated@@435 ($generated@@326 (type $generated@@433))))
 (=> (= (type $generated@@433) ($generated@@325 $generated@@435 $generated@@434)) (= (= $generated@@433 ($generated@@324 $generated@@435 $generated@@434)) (= ($generated@@391 $generated@@433) ($generated@@425 $generated@@151))))))
 :pattern ( ($generated@@391 $generated@@433))
)))
(assert (forall (($generated@@436 T@U) ) (! (let (($generated@@437 ($generated@@309 (type $generated@@436))))
(let (($generated@@438 ($generated@@308 (type $generated@@436))))
 (=> (= (type $generated@@436) ($generated@@307 $generated@@438 $generated@@437)) (or (= $generated@@436 ($generated@@306 $generated@@438 $generated@@437)) (exists (($generated@@439 T@U) ($generated@@440 T@U) ) (!  (and (and (= (type $generated@@439) $generated@@151) (= (type $generated@@440) $generated@@151)) ($generated@@0 ($generated@@87 ($generated@@383 $generated@@436) ($generated@@294 ($generated@@223 $generated@@439 $generated@@440)))))
 :no-pattern (type $generated@@439)
 :no-pattern (type $generated@@440)
 :no-pattern ($generated $generated@@439)
 :no-pattern ($generated@@0 $generated@@439)
 :no-pattern ($generated $generated@@440)
 :no-pattern ($generated@@0 $generated@@440)
))))))
 :pattern ( ($generated@@383 $generated@@436))
)))
(assert (forall (($generated@@441 T@U) ) (! (let (($generated@@442 ($generated@@327 (type $generated@@441))))
(let (($generated@@443 ($generated@@326 (type $generated@@441))))
 (=> (= (type $generated@@441) ($generated@@325 $generated@@443 $generated@@442)) (or (= $generated@@441 ($generated@@324 $generated@@443 $generated@@442)) (exists (($generated@@444 T@U) ($generated@@445 T@U) ) (!  (and (and (= (type $generated@@444) $generated@@151) (= (type $generated@@445) $generated@@151)) ($generated@@0 ($generated@@87 ($generated@@391 $generated@@441) ($generated@@294 ($generated@@223 $generated@@444 $generated@@445)))))
 :no-pattern (type $generated@@444)
 :no-pattern (type $generated@@445)
 :no-pattern ($generated $generated@@444)
 :no-pattern ($generated@@0 $generated@@444)
 :no-pattern ($generated $generated@@445)
 :no-pattern ($generated@@0 $generated@@445)
))))))
 :pattern ( ($generated@@391 $generated@@441))
)))
(assert (forall (($generated@@446 T@U) ) (!  (=> (and (= (type $generated@@446) $generated@@151) ($generated@@224 $generated@@446 $generated@@46)) (and (= ($generated@@294 ($generated@@344 $generated@@2 $generated@@446)) $generated@@446) ($generated@@138 ($generated@@344 $generated@@2 $generated@@446) $generated@@46)))
 :pattern ( ($generated@@224 $generated@@446 $generated@@46))
)))
(assert (forall (($generated@@447 T@U) ) (!  (=> (and (= (type $generated@@447) $generated@@151) ($generated@@224 $generated@@447 $generated@@47)) (and (= ($generated@@294 ($generated@@344 $generated@@3 $generated@@447)) $generated@@447) ($generated@@138 ($generated@@344 $generated@@3 $generated@@447) $generated@@47)))
 :pattern ( ($generated@@224 $generated@@447 $generated@@47))
)))
(assert (forall (($generated@@448 T@U) ) (!  (=> (and (= (type $generated@@448) $generated@@151) ($generated@@224 $generated@@448 $generated@@44)) (and (= ($generated@@294 ($generated@@344 $generated@@4 $generated@@448)) $generated@@448) ($generated@@138 ($generated@@344 $generated@@4 $generated@@448) $generated@@44)))
 :pattern ( ($generated@@224 $generated@@448 $generated@@44))
)))
(assert (= ($generated@@1 $generated@@449) 20))
(assert (forall (($generated@@450 T@U) ) (!  (=> (and (= (type $generated@@450) $generated@@151) ($generated@@224 $generated@@450 $generated@@45)) (and (= ($generated@@294 ($generated@@344 $generated@@449 $generated@@450)) $generated@@450) ($generated@@138 ($generated@@344 $generated@@449 $generated@@450) $generated@@45)))
 :pattern ( ($generated@@224 $generated@@450 $generated@@45))
)))
(assert (forall (($generated@@451 T@U) ($generated@@452 T@U) ) (!  (=> (= (type $generated@@452) $generated@@70) (= ($generated@@224 ($generated@@294 $generated@@451) $generated@@452) ($generated@@138 $generated@@451 $generated@@452)))
 :pattern ( ($generated@@224 ($generated@@294 $generated@@451) $generated@@452))
)))
(assert (forall (($generated@@453 T@U) ) (! (let (($generated@@454 ($generated@@85 (type $generated@@453))))
 (=> (= (type $generated@@453) ($generated@@82 $generated@@454 $generated@@2)) (<= 0 ($generated@@299 $generated@@453))))
 :pattern ( ($generated@@299 $generated@@453))
)))
(assert (forall (($generated@@455 T@U) ) (! (let (($generated@@456 ($generated@@285 (type $generated@@455))))
 (=> (= (type $generated@@455) ($generated@@284 $generated@@456)) (<= 0 ($generated@@283 $generated@@455))))
 :pattern ( ($generated@@283 $generated@@455))
)))
(assert (forall (($generated@@458 T@U) ) (! (= (type ($generated@@457 $generated@@458)) $generated@@70)
 :pattern ( ($generated@@457 $generated@@458))
)))
(assert (forall (($generated@@459 T@U) ($generated@@460 T@U) ) (!  (=> (and (= (type $generated@@459) $generated@@70) (= (type $generated@@460) $generated@@70)) (= ($generated@@457 ($generated@@409 $generated@@459 $generated@@460)) $generated@@459))
 :pattern ( ($generated@@409 $generated@@459 $generated@@460))
)))
(assert (forall (($generated@@462 T@U) ) (! (= (type ($generated@@461 $generated@@462)) $generated@@70)
 :pattern ( ($generated@@461 $generated@@462))
)))
(assert (forall (($generated@@463 T@U) ($generated@@464 T@U) ) (!  (=> (and (= (type $generated@@463) $generated@@70) (= (type $generated@@464) $generated@@70)) (= ($generated@@461 ($generated@@409 $generated@@463 $generated@@464)) $generated@@464))
 :pattern ( ($generated@@409 $generated@@463 $generated@@464))
)))
(assert (forall (($generated@@465 T@U) ($generated@@466 T@U) ) (!  (=> (and (= (type $generated@@465) $generated@@70) (= (type $generated@@466) $generated@@70)) (= ($generated@@78 ($generated@@409 $generated@@465 $generated@@466)) $generated@@58))
 :pattern ( ($generated@@409 $generated@@465 $generated@@466))
)))
(assert (forall (($generated@@468 T@U) ) (! (= (type ($generated@@467 $generated@@468)) $generated@@70)
 :pattern ( ($generated@@467 $generated@@468))
)))
(assert (forall (($generated@@469 T@U) ($generated@@470 T@U) ) (!  (=> (and (= (type $generated@@469) $generated@@70) (= (type $generated@@470) $generated@@70)) (= ($generated@@467 ($generated@@417 $generated@@469 $generated@@470)) $generated@@469))
 :pattern ( ($generated@@417 $generated@@469 $generated@@470))
)))
(assert (forall (($generated@@472 T@U) ) (! (= (type ($generated@@471 $generated@@472)) $generated@@70)
 :pattern ( ($generated@@471 $generated@@472))
)))
(assert (forall (($generated@@473 T@U) ($generated@@474 T@U) ) (!  (=> (and (= (type $generated@@473) $generated@@70) (= (type $generated@@474) $generated@@70)) (= ($generated@@471 ($generated@@417 $generated@@473 $generated@@474)) $generated@@474))
 :pattern ( ($generated@@417 $generated@@473 $generated@@474))
)))
(assert (forall (($generated@@475 T@U) ($generated@@476 T@U) ) (!  (=> (and (= (type $generated@@475) $generated@@70) (= (type $generated@@476) $generated@@70)) (= ($generated@@78 ($generated@@417 $generated@@475 $generated@@476)) $generated@@59))
 :pattern ( ($generated@@417 $generated@@475 $generated@@476))
)))
(assert (forall (($generated@@477 T@U) ($generated@@478 T@U) ) (!  (=> (and (= (type $generated@@477) $generated@@151) (= (type $generated@@478) $generated@@151)) (= ($generated@@156 ($generated@@223 $generated@@477 $generated@@478)) $generated@@61))
 :pattern ( ($generated@@223 $generated@@477 $generated@@478))
)))
(assert (forall (($generated@@480 T@U) ) (! (= (type ($generated@@479 $generated@@480)) $generated@@70)
 :pattern ( ($generated@@479 $generated@@480))
)))
(assert (forall (($generated@@481 T@U) ($generated@@482 T@U) ) (!  (=> (and (= (type $generated@@481) $generated@@70) (= (type $generated@@482) $generated@@70)) (= ($generated@@479 ($generated@@141 $generated@@481 $generated@@482)) $generated@@481))
 :pattern ( ($generated@@141 $generated@@481 $generated@@482))
)))
(assert (forall (($generated@@484 T@U) ) (! (= (type ($generated@@483 $generated@@484)) $generated@@70)
 :pattern ( ($generated@@483 $generated@@484))
)))
(assert (forall (($generated@@485 T@U) ($generated@@486 T@U) ) (!  (=> (and (= (type $generated@@485) $generated@@70) (= (type $generated@@486) $generated@@70)) (= ($generated@@483 ($generated@@141 $generated@@485 $generated@@486)) $generated@@486))
 :pattern ( ($generated@@141 $generated@@485 $generated@@486))
)))
(assert (forall (($generated@@487 T@U) ($generated@@488 T@U) ) (!  (=> (and (= (type $generated@@487) $generated@@151) (= (type $generated@@488) $generated@@151)) (= ($generated@@149 ($generated@@223 $generated@@487 $generated@@488)) $generated@@487))
 :pattern ( ($generated@@223 $generated@@487 $generated@@488))
)))
(assert (forall (($generated@@489 T@U) ($generated@@490 T@U) ) (!  (=> (and (= (type $generated@@489) $generated@@151) (= (type $generated@@490) $generated@@151)) (= ($generated@@150 ($generated@@223 $generated@@489 $generated@@490)) $generated@@490))
 :pattern ( ($generated@@223 $generated@@489 $generated@@490))
)))
(assert  (and (forall (($generated@@493 T@U) ) (! (= (type ($generated@@491 $generated@@493)) $generated@@70)
 :pattern ( ($generated@@491 $generated@@493))
)) (forall (($generated@@494 T@U) ($generated@@495 Int) ) (! (let (($generated@@496 ($generated@@285 (type $generated@@494))))
(= (type ($generated@@492 $generated@@494 $generated@@495)) $generated@@496))
 :pattern ( ($generated@@492 $generated@@494 $generated@@495))
))))
(assert (forall (($generated@@497 T@U) ($generated@@498 T@U) ($generated@@499 T@U) ) (!  (=> (and (and (= (type $generated@@497) ($generated@@284 $generated@@151)) (= (type $generated@@498) $generated@@70)) (= (type $generated@@499) ($generated@@82 $generated@@83 $generated@@84))) (= ($generated@@80 $generated@@497 ($generated@@491 $generated@@498) $generated@@499) (forall (($generated@@500 Int) ) (!  (=> (and (<= 0 $generated@@500) (< $generated@@500 ($generated@@283 $generated@@497))) ($generated@@268 ($generated@@492 $generated@@497 $generated@@500) $generated@@498 $generated@@499))
 :pattern ( ($generated@@492 $generated@@497 $generated@@500))
))))
 :pattern ( ($generated@@80 $generated@@497 ($generated@@491 $generated@@498) $generated@@499))
)))
(assert (forall (($generated@@502 Int) ) (! (= ($generated@@501 ($generated@@81 $generated@@502)) $generated@@502)
 :pattern ( ($generated@@81 $generated@@502))
)))
(assert (forall (($generated@@504 T@U) ) (! (= (type ($generated@@503 $generated@@504)) $generated@@70)
 :pattern ( ($generated@@503 $generated@@504))
)))
(assert (forall (($generated@@505 T@U) ) (!  (=> (= (type $generated@@505) $generated@@70) (= ($generated@@503 ($generated@@242 $generated@@505)) $generated@@505))
 :pattern ( ($generated@@242 $generated@@505))
)))
(assert (forall (($generated@@506 T@U) ) (!  (=> (= (type $generated@@506) $generated@@70) (= ($generated@@78 ($generated@@242 $generated@@506)) $generated@@54))
 :pattern ( ($generated@@242 $generated@@506))
)))
(assert (forall (($generated@@508 T@U) ) (! (= (type ($generated@@507 $generated@@508)) $generated@@70)
 :pattern ( ($generated@@507 $generated@@508))
)))
(assert (forall (($generated@@509 T@U) ) (!  (=> (= (type $generated@@509) $generated@@70) (= ($generated@@507 ($generated@@247 $generated@@509)) $generated@@509))
 :pattern ( ($generated@@247 $generated@@509))
)))
(assert (forall (($generated@@510 T@U) ) (!  (=> (= (type $generated@@510) $generated@@70) (= ($generated@@78 ($generated@@247 $generated@@510)) $generated@@55))
 :pattern ( ($generated@@247 $generated@@510))
)))
(assert (forall (($generated@@512 T@U) ) (! (= (type ($generated@@511 $generated@@512)) $generated@@70)
 :pattern ( ($generated@@511 $generated@@512))
)))
(assert (forall (($generated@@513 T@U) ) (!  (=> (= (type $generated@@513) $generated@@70) (= ($generated@@511 ($generated@@162 $generated@@513)) $generated@@513))
 :pattern ( ($generated@@162 $generated@@513))
)))
(assert (forall (($generated@@514 T@U) ) (!  (=> (= (type $generated@@514) $generated@@70) (= ($generated@@78 ($generated@@162 $generated@@514)) $generated@@56))
 :pattern ( ($generated@@162 $generated@@514))
)))
(assert (forall (($generated@@516 T@U) ) (! (= (type ($generated@@515 $generated@@516)) $generated@@70)
 :pattern ( ($generated@@515 $generated@@516))
)))
(assert (forall (($generated@@517 T@U) ) (!  (=> (= (type $generated@@517) $generated@@70) (= ($generated@@515 ($generated@@491 $generated@@517)) $generated@@517))
 :pattern ( ($generated@@491 $generated@@517))
)))
(assert (forall (($generated@@518 T@U) ) (!  (=> (= (type $generated@@518) $generated@@70) (= ($generated@@78 ($generated@@491 $generated@@518)) $generated@@57))
 :pattern ( ($generated@@491 $generated@@518))
)))
(assert (forall (($generated@@519 T@U) ) (! (let (($generated@@520 (type $generated@@519)))
(= ($generated@@344 $generated@@520 ($generated@@294 $generated@@519)) $generated@@519))
 :pattern ( ($generated@@294 $generated@@519))
)))
(assert (forall (($generated@@521 T@U) ($generated@@522 T@U) ($generated@@523 T@U) ) (!  (=> (and (and (= (type $generated@@521) ($generated@@307 $generated@@151 $generated@@151)) (= (type $generated@@522) $generated@@70)) (= (type $generated@@523) $generated@@70)) (= ($generated@@138 $generated@@521 ($generated@@409 $generated@@522 $generated@@523)) (forall (($generated@@524 T@U) ) (!  (=> (and (= (type $generated@@524) $generated@@151) ($generated@@0 ($generated@@87 ($generated@@305 $generated@@521) $generated@@524))) (and ($generated@@224 ($generated@@87 ($generated@@384 $generated@@521) $generated@@524) $generated@@523) ($generated@@224 $generated@@524 $generated@@522)))
 :pattern ( ($generated@@87 ($generated@@384 $generated@@521) $generated@@524))
 :pattern ( ($generated@@87 ($generated@@305 $generated@@521) $generated@@524))
))))
 :pattern ( ($generated@@138 $generated@@521 ($generated@@409 $generated@@522 $generated@@523)))
)))
(assert (forall (($generated@@525 T@U) ($generated@@526 T@U) ($generated@@527 T@U) ) (!  (=> (and (and (= (type $generated@@525) ($generated@@325 $generated@@151 $generated@@151)) (= (type $generated@@526) $generated@@70)) (= (type $generated@@527) $generated@@70)) (= ($generated@@138 $generated@@525 ($generated@@417 $generated@@526 $generated@@527)) (forall (($generated@@528 T@U) ) (!  (=> (and (= (type $generated@@528) $generated@@151) ($generated@@0 ($generated@@87 ($generated@@323 $generated@@525) $generated@@528))) (and ($generated@@224 ($generated@@87 ($generated@@392 $generated@@525) $generated@@528) $generated@@527) ($generated@@224 $generated@@528 $generated@@526)))
 :pattern ( ($generated@@87 ($generated@@392 $generated@@525) $generated@@528))
 :pattern ( ($generated@@87 ($generated@@323 $generated@@525) $generated@@528))
))))
 :pattern ( ($generated@@138 $generated@@525 ($generated@@417 $generated@@526 $generated@@527)))
)))
(assert (forall (($generated@@531 T@U) ($generated@@532 T@U) ) (!  (=> (and (= (type $generated@@531) $generated@@151) (= (type $generated@@532) $generated@@151)) (< ($generated@@529 $generated@@531) ($generated@@530 ($generated@@223 $generated@@531 $generated@@532))))
 :pattern ( ($generated@@223 $generated@@531 $generated@@532))
)))
(assert (forall (($generated@@533 T@U) ($generated@@534 T@U) ) (!  (=> (and (= (type $generated@@533) $generated@@151) (= (type $generated@@534) $generated@@151)) (< ($generated@@529 $generated@@534) ($generated@@530 ($generated@@223 $generated@@533 $generated@@534))))
 :pattern ( ($generated@@223 $generated@@533 $generated@@534))
)))
(assert (forall (($generated@@535 T@U) ($generated@@536 T@U) ($generated@@537 T@U) ) (!  (=> (and (and (and (= (type $generated@@535) $generated@@151) (= (type $generated@@536) $generated@@70)) (= (type $generated@@537) $generated@@70)) ($generated@@224 $generated@@535 ($generated@@409 $generated@@536 $generated@@537))) (and (= ($generated@@294 ($generated@@344 ($generated@@307 $generated@@151 $generated@@151) $generated@@535)) $generated@@535) ($generated@@138 ($generated@@344 ($generated@@307 $generated@@151 $generated@@151) $generated@@535) ($generated@@409 $generated@@536 $generated@@537))))
 :pattern ( ($generated@@224 $generated@@535 ($generated@@409 $generated@@536 $generated@@537)))
)))
(assert (forall (($generated@@538 T@U) ($generated@@539 T@U) ($generated@@540 T@U) ) (!  (=> (and (and (and (= (type $generated@@538) $generated@@151) (= (type $generated@@539) $generated@@70)) (= (type $generated@@540) $generated@@70)) ($generated@@224 $generated@@538 ($generated@@417 $generated@@539 $generated@@540))) (and (= ($generated@@294 ($generated@@344 ($generated@@325 $generated@@151 $generated@@151) $generated@@538)) $generated@@538) ($generated@@138 ($generated@@344 ($generated@@325 $generated@@151 $generated@@151) $generated@@538) ($generated@@417 $generated@@539 $generated@@540))))
 :pattern ( ($generated@@224 $generated@@538 ($generated@@417 $generated@@539 $generated@@540)))
)))
(assert (forall (($generated@@541 T@U) ($generated@@542 T@U) ($generated@@543 T@U) ) (!  (=> (and (and (and (= (type $generated@@541) $generated@@70) (= (type $generated@@542) $generated@@70)) (= (type $generated@@543) $generated@@151)) ($generated@@224 $generated@@543 ($generated@@141 $generated@@541 $generated@@542))) (and (= ($generated@@294 ($generated@@344 $generated@@142 $generated@@543)) $generated@@543) ($generated@@138 ($generated@@344 $generated@@142 $generated@@543) ($generated@@141 $generated@@541 $generated@@542))))
 :pattern ( ($generated@@224 $generated@@543 ($generated@@141 $generated@@541 $generated@@542)))
)))
(assert (forall (($generated@@544 T@U) ) (! (let (($generated@@545 (type $generated@@544)))
 (not ($generated@@0 ($generated@@87 ($generated@@425 $generated@@545) $generated@@544))))
 :pattern ( (let (($generated@@545 (type $generated@@544)))
($generated@@87 ($generated@@425 $generated@@545) $generated@@544)))
)))
(assert (forall (($generated@@547 T@U) ) (! (= (type ($generated@@546 $generated@@547)) $generated@@75)
 :pattern ( ($generated@@546 $generated@@547))
)))
(assert (forall (($generated@@548 T@U) ($generated@@549 T@U) ) (!  (=> (and (= (type $generated@@548) $generated@@70) (= (type $generated@@549) $generated@@70)) (and (= ($generated@@78 ($generated@@141 $generated@@548 $generated@@549)) $generated@@62) (= ($generated@@546 ($generated@@141 $generated@@548 $generated@@549)) $generated@@68)))
 :pattern ( ($generated@@141 $generated@@548 $generated@@549))
)))
(assert (forall (($generated@@550 T@U) ) (!  (=> (= (type $generated@@550) $generated@@142) (= ($generated@@529 ($generated@@294 $generated@@550)) ($generated@@530 $generated@@550)))
 :pattern ( ($generated@@529 ($generated@@294 $generated@@550)))
)))
(assert (forall (($generated@@551 T@U) ) (!  (=> (and (= (type $generated@@551) $generated@@151) ($generated@@224 $generated@@551 ($generated@@81 0))) (and (= ($generated@@294 ($generated@@344 $generated@@2 $generated@@551)) $generated@@551) ($generated@@138 ($generated@@344 ($generated@@82 $generated@@151 $generated@@4) $generated@@551) ($generated@@81 0))))
 :pattern ( ($generated@@224 $generated@@551 ($generated@@81 0)))
)))
(assert (forall (($generated@@552 T@U) ($generated@@553 T@U) ) (!  (=> (and (and (= (type $generated@@552) $generated@@151) (= (type $generated@@553) $generated@@70)) ($generated@@224 $generated@@552 ($generated@@242 $generated@@553))) (and (= ($generated@@294 ($generated@@344 ($generated@@82 $generated@@151 $generated@@4) $generated@@552)) $generated@@552) ($generated@@138 ($generated@@344 ($generated@@82 $generated@@151 $generated@@4) $generated@@552) ($generated@@242 $generated@@553))))
 :pattern ( ($generated@@224 $generated@@552 ($generated@@242 $generated@@553)))
)))
(assert (forall (($generated@@554 T@U) ($generated@@555 T@U) ) (!  (=> (and (and (= (type $generated@@554) $generated@@151) (= (type $generated@@555) $generated@@70)) ($generated@@224 $generated@@554 ($generated@@247 $generated@@555))) (and (= ($generated@@294 ($generated@@344 ($generated@@82 $generated@@151 $generated@@4) $generated@@554)) $generated@@554) ($generated@@138 ($generated@@344 ($generated@@82 $generated@@151 $generated@@4) $generated@@554) ($generated@@247 $generated@@555))))
 :pattern ( ($generated@@224 $generated@@554 ($generated@@247 $generated@@555)))
)))
(assert (forall (($generated@@556 T@U) ($generated@@557 T@U) ) (!  (=> (and (and (= (type $generated@@556) $generated@@151) (= (type $generated@@557) $generated@@70)) ($generated@@224 $generated@@556 ($generated@@162 $generated@@557))) (and (= ($generated@@294 ($generated@@344 ($generated@@82 $generated@@151 $generated@@2) $generated@@556)) $generated@@556) ($generated@@138 ($generated@@344 ($generated@@82 $generated@@151 $generated@@2) $generated@@556) ($generated@@162 $generated@@557))))
 :pattern ( ($generated@@224 $generated@@556 ($generated@@162 $generated@@557)))
)))
(assert (forall (($generated@@558 T@U) ($generated@@559 T@U) ) (!  (=> (and (and (= (type $generated@@558) $generated@@151) (= (type $generated@@559) $generated@@70)) ($generated@@224 $generated@@558 ($generated@@491 $generated@@559))) (and (= ($generated@@294 ($generated@@344 ($generated@@284 $generated@@151) $generated@@558)) $generated@@558) ($generated@@138 ($generated@@344 ($generated@@284 $generated@@151) $generated@@558) ($generated@@491 $generated@@559))))
 :pattern ( ($generated@@224 $generated@@558 ($generated@@491 $generated@@559)))
)))
(assert (= ($generated@@78 $generated@@231) $generated@@64))
(assert (= ($generated@@546 $generated@@231) $generated@@69))
(assert (forall (($generated@@560 T@U) ($generated@@561 T@U) ($generated@@562 T@U) ) (!  (=> (and (and (= (type $generated@@560) ($generated@@82 $generated@@151 $generated@@2)) (= (type $generated@@561) $generated@@70)) (= (type $generated@@562) ($generated@@82 $generated@@83 $generated@@84))) (= ($generated@@80 $generated@@560 ($generated@@162 $generated@@561) $generated@@562) (forall (($generated@@563 T@U) ) (!  (=> (and (= (type $generated@@563) $generated@@151) (< 0 ($generated ($generated@@87 $generated@@560 $generated@@563)))) ($generated@@268 $generated@@563 $generated@@561 $generated@@562))
 :pattern ( ($generated@@87 $generated@@560 $generated@@563))
))))
 :pattern ( ($generated@@80 $generated@@560 ($generated@@162 $generated@@561) $generated@@562))
)))
(assert (= $generated@@157 ($generated@@252 $generated@@157)))
(assert (= $generated@@159 ($generated@@252 $generated@@159)))
(assert (= $generated@@160 ($generated@@252 $generated@@160)))
(assert (= $generated@@161 ($generated@@252 $generated@@161)))
(assert (forall (($generated@@565 T@U) ) (!  (=> (and (= (type $generated@@565) $generated@@142) ($generated@@564 $generated@@565)) (or (or (or ($generated@@256 $generated@@565) ($generated@@259 $generated@@565)) ($generated@@262 $generated@@565)) ($generated@@265 $generated@@565)))
 :pattern ( ($generated@@564 $generated@@565))
)))
(assert (forall (($generated@@566 T@U) ($generated@@567 T@U) ($generated@@568 T@U) ) (!  (=> (and (and (and (= (type $generated@@566) $generated@@142) (= (type $generated@@567) $generated@@70)) (= (type $generated@@568) ($generated@@82 $generated@@83 $generated@@84))) (and ($generated@@232 $generated@@568) (and ($generated@@140 $generated@@566) (exists (($generated@@569 T@U) ) (!  (and (= (type $generated@@569) $generated@@70) ($generated@@80 $generated@@566 ($generated@@141 $generated@@567 $generated@@569) $generated@@568))
 :pattern ( ($generated@@80 $generated@@566 ($generated@@141 $generated@@567 $generated@@569) $generated@@568))
))))) ($generated@@268 ($generated@@149 $generated@@566) $generated@@567 $generated@@568))
 :pattern ( ($generated@@268 ($generated@@149 $generated@@566) $generated@@567 $generated@@568))
)))
(assert (forall (($generated@@570 T@U) ($generated@@571 T@U) ($generated@@572 T@U) ) (!  (=> (and (and (and (= (type $generated@@570) $generated@@142) (= (type $generated@@571) $generated@@70)) (= (type $generated@@572) ($generated@@82 $generated@@83 $generated@@84))) (and ($generated@@232 $generated@@572) (and ($generated@@140 $generated@@570) (exists (($generated@@573 T@U) ) (!  (and (= (type $generated@@573) $generated@@70) ($generated@@80 $generated@@570 ($generated@@141 $generated@@573 $generated@@571) $generated@@572))
 :pattern ( ($generated@@80 $generated@@570 ($generated@@141 $generated@@573 $generated@@571) $generated@@572))
))))) ($generated@@268 ($generated@@150 $generated@@570) $generated@@571 $generated@@572))
 :pattern ( ($generated@@268 ($generated@@150 $generated@@570) $generated@@571 $generated@@572))
)))
(assert (forall (($generated@@574 T@U) ($generated@@575 T@U) ) (!  (=> (and (= (type $generated@@574) $generated@@151) (= (type $generated@@575) $generated@@151)) (= ($generated@@223 ($generated@@252 $generated@@574) ($generated@@252 $generated@@575)) ($generated@@252 ($generated@@223 $generated@@574 $generated@@575))))
 :pattern ( ($generated@@223 ($generated@@252 $generated@@574) ($generated@@252 $generated@@575)))
)))
(assert (forall (($generated@@576 T@U) ) (! (= ($generated@@294 ($generated@@252 $generated@@576)) ($generated@@252 ($generated@@294 $generated@@576)))
 :pattern ( ($generated@@294 ($generated@@252 $generated@@576)))
)))
(assert (forall (($generated@@577 T@U) ) (! (let (($generated@@578 ($generated@@285 (type $generated@@577))))
 (=> (and (= (type $generated@@577) ($generated@@284 $generated@@578)) (= ($generated@@283 $generated@@577) 0)) (= $generated@@577 ($generated@@282 $generated@@578))))
 :pattern ( ($generated@@283 $generated@@577))
)))
(assert (forall (($generated@@579 T@U) ($generated@@580 T@U) ($generated@@581 T@U) ) (! (let (($generated@@582 (type $generated@@580)))
 (=> (and (and (= (type $generated@@579) ($generated@@82 $generated@@582 $generated@@2)) (= (type $generated@@581) $generated@@2)) (<= 0 ($generated $generated@@581))) (= ($generated@@299 ($generated@@88 $generated@@579 $generated@@580 $generated@@581)) (+ (- ($generated@@299 $generated@@579) ($generated ($generated@@87 $generated@@579 $generated@@580))) ($generated $generated@@581)))))
 :pattern ( ($generated@@299 ($generated@@88 $generated@@579 $generated@@580 $generated@@581)))
)))
(assert (forall (($generated@@583 T@U) ) (!  (=> (and (= (type $generated@@583) $generated@@142) ($generated@@138 $generated@@583 $generated@@231)) (or (or (or ($generated@@256 $generated@@583) ($generated@@259 $generated@@583)) ($generated@@262 $generated@@583)) ($generated@@265 $generated@@583)))
 :pattern ( ($generated@@265 $generated@@583) ($generated@@138 $generated@@583 $generated@@231))
 :pattern ( ($generated@@262 $generated@@583) ($generated@@138 $generated@@583 $generated@@231))
 :pattern ( ($generated@@259 $generated@@583) ($generated@@138 $generated@@583 $generated@@231))
 :pattern ( ($generated@@256 $generated@@583) ($generated@@138 $generated@@583 $generated@@231))
)))
(assert (forall (($generated@@584 T@U) ($generated@@585 T@U) ) (!  (=> (and (= (type $generated@@584) ($generated@@82 $generated@@83 $generated@@84)) (= (type $generated@@585) $generated@@2)) ($generated@@80 $generated@@585 $generated@@46 $generated@@584))
 :pattern ( ($generated@@80 $generated@@585 $generated@@46 $generated@@584))
)))
(assert (forall (($generated@@586 T@U) ($generated@@587 T@U) ) (!  (=> (and (= (type $generated@@586) ($generated@@82 $generated@@83 $generated@@84)) (= (type $generated@@587) $generated@@3)) ($generated@@80 $generated@@587 $generated@@47 $generated@@586))
 :pattern ( ($generated@@80 $generated@@587 $generated@@47 $generated@@586))
)))
(assert (forall (($generated@@588 T@U) ($generated@@589 T@U) ) (!  (=> (and (= (type $generated@@588) ($generated@@82 $generated@@83 $generated@@84)) (= (type $generated@@589) $generated@@4)) ($generated@@80 $generated@@589 $generated@@44 $generated@@588))
 :pattern ( ($generated@@80 $generated@@589 $generated@@44 $generated@@588))
)))
(assert (forall (($generated@@590 T@U) ($generated@@591 T@U) ) (!  (=> (and (= (type $generated@@590) ($generated@@82 $generated@@83 $generated@@84)) (= (type $generated@@591) $generated@@449)) ($generated@@80 $generated@@591 $generated@@45 $generated@@590))
 :pattern ( ($generated@@80 $generated@@591 $generated@@45 $generated@@590))
)))
(assert (forall (($generated@@592 T@U) ($generated@@593 T@U) ) (!  (=> (and (= (type $generated@@592) ($generated@@82 $generated@@83 $generated@@84)) (= (type $generated@@593) $generated@@151)) ($generated@@80 $generated@@593 $generated@@48 $generated@@592))
 :pattern ( ($generated@@80 $generated@@593 $generated@@48 $generated@@592))
)))
(assert (forall (($generated@@594 T@U) ($generated@@595 T@U) ) (!  (=> (and (= (type $generated@@594) ($generated@@284 $generated@@151)) (= (type $generated@@595) $generated@@70)) (= ($generated@@138 $generated@@594 ($generated@@491 $generated@@595)) (forall (($generated@@596 Int) ) (!  (=> (and (<= 0 $generated@@596) (< $generated@@596 ($generated@@283 $generated@@594))) ($generated@@224 ($generated@@492 $generated@@594 $generated@@596) $generated@@595))
 :pattern ( ($generated@@492 $generated@@594 $generated@@596))
))))
 :pattern ( ($generated@@138 $generated@@594 ($generated@@491 $generated@@595)))
)))
(assert (forall (($generated@@598 T@U) ($generated@@599 Int) ) (!  (=> (= (type $generated@@598) ($generated@@284 $generated@@151)) (=> (and (<= 0 $generated@@599) (< $generated@@599 ($generated@@283 $generated@@598))) (< ($generated@@530 ($generated@@344 $generated@@142 ($generated@@492 $generated@@598 $generated@@599))) ($generated@@597 $generated@@598))))
 :pattern ( ($generated@@530 ($generated@@344 $generated@@142 ($generated@@492 $generated@@598 $generated@@599))))
)))
(assert (forall (($generated@@600 T@U) ($generated@@601 T@U) ($generated@@602 T@U) ) (!  (=> (and (and (and (= (type $generated@@600) ($generated@@307 $generated@@151 $generated@@151)) (= (type $generated@@601) $generated@@70)) (= (type $generated@@602) $generated@@70)) ($generated@@138 $generated@@600 ($generated@@409 $generated@@601 $generated@@602))) (and (and ($generated@@138 ($generated@@305 $generated@@600) ($generated@@242 $generated@@601)) ($generated@@138 ($generated@@352 $generated@@600) ($generated@@242 $generated@@602))) ($generated@@138 ($generated@@383 $generated@@600) ($generated@@242 ($generated@@141 $generated@@601 $generated@@602)))))
 :pattern ( ($generated@@138 $generated@@600 ($generated@@409 $generated@@601 $generated@@602)))
)))
(assert (forall (($generated@@603 T@U) ($generated@@604 T@U) ($generated@@605 T@U) ) (!  (=> (and (and (and (= (type $generated@@603) ($generated@@325 $generated@@151 $generated@@151)) (= (type $generated@@604) $generated@@70)) (= (type $generated@@605) $generated@@70)) ($generated@@138 $generated@@603 ($generated@@417 $generated@@604 $generated@@605))) (and (and ($generated@@138 ($generated@@323 $generated@@603) ($generated@@247 $generated@@604)) ($generated@@138 ($generated@@363 $generated@@603) ($generated@@247 $generated@@605))) ($generated@@138 ($generated@@391 $generated@@603) ($generated@@247 ($generated@@141 $generated@@604 $generated@@605)))))
 :pattern ( ($generated@@138 $generated@@603 ($generated@@417 $generated@@604 $generated@@605)))
)))
(assert (forall (($generated@@606 T@U) ) (!  (=> (= (type $generated@@606) $generated@@2) ($generated@@138 $generated@@606 $generated@@46))
 :pattern ( ($generated@@138 $generated@@606 $generated@@46))
)))
(assert (forall (($generated@@607 T@U) ) (!  (=> (= (type $generated@@607) $generated@@3) ($generated@@138 $generated@@607 $generated@@47))
 :pattern ( ($generated@@138 $generated@@607 $generated@@47))
)))
(assert (forall (($generated@@608 T@U) ) (!  (=> (= (type $generated@@608) $generated@@4) ($generated@@138 $generated@@608 $generated@@44))
 :pattern ( ($generated@@138 $generated@@608 $generated@@44))
)))
(assert (forall (($generated@@609 T@U) ) (!  (=> (= (type $generated@@609) $generated@@449) ($generated@@138 $generated@@609 $generated@@45))
 :pattern ( ($generated@@138 $generated@@609 $generated@@45))
)))
(assert (forall (($generated@@610 T@U) ) (!  (=> (= (type $generated@@610) $generated@@151) ($generated@@138 $generated@@610 $generated@@48))
 :pattern ( ($generated@@138 $generated@@610 $generated@@48))
)))
(push 1)
(declare-fun ControlFlow (Int Int) Int)
(declare-fun $generated@@611 () T@U)
(declare-fun $generated@@612 () T@U)
(declare-fun $generated@@613 () T@U)
(declare-fun $generated@@614 () T@U)
(declare-fun $generated@@615 (T@U) Bool)
(declare-fun $generated@@616 () Int)
(assert  (and (and (and (= (type $generated@@611) $generated@@142) (= (type $generated@@612) ($generated@@169 $generated@@83 $generated@@4))) (= (type $generated@@613) $generated@@83)) (= (type $generated@@614) ($generated@@82 $generated@@83 $generated@@84))))
(set-option :timeout 0)
(set-option :rlimit 0)
(assert (not
 (=> (= (ControlFlow 0 0) 16) (let (($generated@@617 true))
(let (($generated@@618  (=> (and (= $generated@@611 $generated@@157) (= (ControlFlow 0 9) (- 0 8))) false)))
(let (($generated@@619  (=> (not (= $generated@@611 $generated@@159)) (and (=> (= (ControlFlow 0 11) 9) $generated@@618) (=> (= (ControlFlow 0 11) 10) $generated@@617)))))
(let (($generated@@620  (=> (and (= $generated@@611 $generated@@159) (= (ControlFlow 0 7) (- 0 6))) false)))
(let (($generated@@621  (=> (not (= $generated@@611 $generated@@160)) (and (=> (= (ControlFlow 0 12) 7) $generated@@620) (=> (= (ControlFlow 0 12) 11) $generated@@619)))))
(let (($generated@@622  (=> (and (= $generated@@611 $generated@@160) (= (ControlFlow 0 5) (- 0 4))) false)))
(let (($generated@@623  (=> (not (= $generated@@611 $generated@@161)) (and (=> (= (ControlFlow 0 13) 5) $generated@@622) (=> (= (ControlFlow 0 13) 12) $generated@@621)))))
(let (($generated@@624  (=> (and (= $generated@@611 $generated@@161) (= (ControlFlow 0 3) (- 0 2))) false)))
(let (($generated@@625  (=> (not ($generated@@239 $generated@@611 $generated@@157)) (and (=> (= (ControlFlow 0 14) 3) $generated@@624) (=> (= (ControlFlow 0 14) 13) $generated@@623)))))
(let (($generated@@626 true))
(let (($generated@@627  (=> (and (= $generated@@612 ($generated@@168 $generated@@613 $generated@@614 $generated@@60 false)) ($generated@@564 $generated@@611)) (and (=> (= (ControlFlow 0 15) 14) $generated@@625) (=> (= (ControlFlow 0 15) 1) $generated@@626)))))
(let (($generated@@628  (=> (and ($generated@@232 $generated@@614) ($generated@@615 $generated@@614)) (=> (and (and (and (and ($generated@@138 $generated@@611 $generated@@231) ($generated@@80 $generated@@611 $generated@@231 $generated@@614)) ($generated@@564 $generated@@611)) (= 1 $generated@@616)) (and (or ($generated@@239 $generated@@611 $generated@@157) ($generated@@239 $generated@@611 $generated@@160)) (= (ControlFlow 0 16) 15))) $generated@@627))))
$generated@@628)))))))))))))
))
(check-sat)
(get-info :reason-unknown)
(assert (not (= (ControlFlow 0 5) (- 4))))
(check-sat)
(pop 1)
; Invalid
(get-info :rlimit)
(reset)
(set-option :rlimit 0)
; did a full reset
(reset)
(set-option :print-success false)
(set-info :smt-lib-version 2.6)
(set-option :auto_config false)
(set-option :type_check true)
(set-option :smt.case_split 3)
(set-option :smt.qi.eager_threshold 100)
(set-option :smt.delay_units true)
(set-option :smt.arith.solver 2)
(set-option :smt.mbqi false)
(set-option :model.compact false)
(set-option :model.v2 true)
(set-option :pp.bv_literals false)
; done setting options


(set-info :category "industrial")
(declare-sort |T@U| 0)
(declare-sort |T@T| 0)
(declare-fun real_pow (Real Real) Real)
(declare-fun UOrdering2 (|T@U| |T@U|) Bool)
(declare-fun UOrdering3 (|T@T| |T@U| |T@U|) Bool)
(declare-fun tickleBool (Bool) Bool)
(assert (and (tickleBool true) (tickleBool false)))
(declare-fun $generated (T@U) Int)
(declare-fun $generated@@0 (T@U) Bool)
(declare-fun $generated@@1 (T@T) Int)
(declare-fun $generated@@2 () T@T)
(declare-fun $generated@@3 () T@T)
(declare-fun $generated@@4 () T@T)
(declare-fun $generated@@5 () T@T)
(declare-fun $generated@@6 () T@T)
(declare-fun $generated@@7 () T@T)
(declare-fun $generated@@8 (Int) T@U)
(declare-fun type (T@U) T@T)
(declare-fun $generated@@9 (Real) T@U)
(declare-fun $generated@@10 (T@U) Real)
(declare-fun $generated@@11 (Bool) T@U)
(declare-fun $generated@@12 (RoundingMode) T@U)
(declare-fun $generated@@13 (T@U) RoundingMode)
(declare-fun $generated@@14 (String) T@U)
(declare-fun $generated@@15 (T@U) String)
(declare-fun $generated@@16 ((RegEx String)) T@U)
(declare-fun $generated@@17 (T@U) (RegEx String))
(declare-fun $generated@@44 () T@U)
(declare-fun $generated@@45 () T@U)
(declare-fun $generated@@46 () T@U)
(declare-fun $generated@@47 () T@U)
(declare-fun $generated@@48 () T@U)
(declare-fun $generated@@49 () T@U)
(declare-fun $generated@@50 () T@U)
(declare-fun $generated@@51 () T@U)
(declare-fun $generated@@52 () T@U)
(declare-fun $generated@@53 () T@U)
(declare-fun $generated@@54 () T@U)
(declare-fun $generated@@55 () T@U)
(declare-fun $generated@@56 () T@U)
(declare-fun $generated@@57 () T@U)
(declare-fun $generated@@58 () T@U)
(declare-fun $generated@@59 () T@U)
(declare-fun $generated@@60 () T@U)
(declare-fun $generated@@61 () T@U)
(declare-fun $generated@@62 () T@U)
(declare-fun $generated@@63 () T@U)
(declare-fun $generated@@64 () T@U)
(declare-fun $generated@@65 () T@U)
(declare-fun $generated@@66 () T@U)
(declare-fun $generated@@67 () T@U)
(declare-fun $generated@@68 () T@U)
(declare-fun $generated@@69 () T@U)
(declare-fun $generated@@70 () T@T)
(declare-fun $generated@@71 () T@T)
(declare-fun $generated@@72 (T@T) T@T)
(declare-fun $generated@@73 (T@T) T@T)
(declare-fun $generated@@74 () T@T)
(declare-fun $generated@@75 () T@T)
(declare-fun $generated@@78 () Int)
(declare-fun $generated@@79 (T@U) Int)
(declare-fun $generated@@80 (T@U) T@U)
(declare-fun $generated@@81 () T@T)
(declare-fun $generated@@82 (T@U) Bool)
(declare-fun $generated@@83 (T@U T@U) Bool)
(declare-fun $generated@@84 () T@U)
(declare-fun $generated@@85 (T@U) Bool)
(declare-fun $generated@@86 (T@U) Bool)
(declare-fun $generated@@90 (T@U) T@U)
(declare-fun $generated@@92 (T@U T@U T@U) Bool)
(declare-fun $generated@@93 (Int) T@U)
(declare-fun $generated@@94 (T@T T@T) T@T)
(declare-fun $generated@@95 () T@T)
(declare-fun $generated@@96 () T@T)
(declare-fun $generated@@97 (T@T) T@T)
(declare-fun $generated@@98 (T@T) T@T)
(declare-fun $generated@@99 (T@U T@U) T@U)
(declare-fun $generated@@100 (T@U T@U T@U) T@U)
(declare-fun $generated@@101 (T@U T@U) T@U)
(declare-fun $generated@@102 (T@U T@U T@U) T@U)
(declare-fun $generated@@152 (T@U) Bool)
(declare-fun $generated@@153 (T@U T@U) T@U)
(declare-fun $generated@@159 (T@U T@U) Bool)
(declare-fun $generated@@160 (T@U) T@U)
(declare-fun $generated@@161 (T@U) T@U)
(declare-fun $generated@@162 () T@T)
(declare-fun $generated@@167 (T@U) T@U)
(declare-fun $generated@@168 () T@U)
(declare-fun $generated@@170 () T@U)
(declare-fun $generated@@171 () T@U)
(declare-fun $generated@@172 () T@U)
(declare-fun $generated@@173 (T@U) T@U)
(declare-fun $generated@@174 (T@U) Bool)
(declare-fun $generated@@178 (T@U T@U T@U) T@U)
(declare-fun $generated@@179 (T@U T@U T@U Bool) T@U)
(declare-fun $generated@@180 (T@T T@T) T@T)
(declare-fun $generated@@181 (T@T) T@T)
(declare-fun $generated@@182 (T@T) T@T)
(declare-fun $generated@@183 (T@U T@U T@U T@U) T@U)
(declare-fun $generated@@234 (T@U T@U T@U Bool) T@U)
(declare-fun $generated@@246 (T@U T@U) T@U)
(declare-fun $generated@@247 (T@U T@U) Bool)
(declare-fun $generated@@254 (T@U) Bool)
(declare-fun $generated@@261 (T@U T@U) Bool)
(declare-fun $generated@@264 (T@U) T@U)
(declare-fun $generated@@269 (T@U) T@U)
(declare-fun $generated@@274 (Int) Int)
(declare-fun $generated@@281 (T@U) Bool)
(declare-fun $generated@@284 (T@U) Bool)
(declare-fun $generated@@287 (T@U T@U T@U) Bool)
(declare-fun $generated@@301 (T@T) T@U)
(declare-fun $generated@@302 (T@U) Int)
(declare-fun $generated@@303 (T@T) T@T)
(declare-fun $generated@@304 (T@T) T@T)
(declare-fun $generated@@313 (T@U) T@U)
(declare-fun $generated@@318 (T@U) Int)
(declare-fun $generated@@319 (T@T) T@U)
(declare-fun $generated@@324 (T@U) T@U)
(declare-fun $generated@@325 (T@T T@T) T@U)
(declare-fun $generated@@326 (T@T T@T) T@T)
(declare-fun $generated@@327 (T@T) T@T)
(declare-fun $generated@@328 (T@T) T@T)
(declare-fun $generated@@342 (T@U) T@U)
(declare-fun $generated@@343 (T@T T@T) T@U)
(declare-fun $generated@@344 (T@T T@T) T@T)
(declare-fun $generated@@345 (T@T) T@T)
(declare-fun $generated@@346 (T@T) T@T)
(declare-fun $generated@@363 (T@T T@U) T@U)
(declare-fun $generated@@371 (T@U) T@U)
(declare-fun $generated@@382 (T@U) T@U)
(declare-fun $generated@@402 (T@U) T@U)
(declare-fun $generated@@403 (T@U) T@U)
(declare-fun $generated@@410 (T@U) T@U)
(declare-fun $generated@@411 (T@U) T@U)
(declare-fun $generated@@428 (T@U T@U) T@U)
(declare-fun $generated@@436 (T@U T@U) T@U)
(declare-fun $generated@@444 (T@T) T@U)
(declare-fun $generated@@468 () T@T)
(declare-fun $generated@@476 (T@U) T@U)
(declare-fun $generated@@480 (T@U) T@U)
(declare-fun $generated@@486 (T@U) T@U)
(declare-fun $generated@@490 (T@U) T@U)
(declare-fun $generated@@498 (T@U) T@U)
(declare-fun $generated@@502 (T@U) T@U)
(declare-fun $generated@@510 (T@U) T@U)
(declare-fun $generated@@511 (T@U Int) T@U)
(declare-fun $generated@@520 (T@U) Int)
(declare-fun $generated@@522 (T@U) T@U)
(declare-fun $generated@@526 (T@U) T@U)
(declare-fun $generated@@530 (T@U) T@U)
(declare-fun $generated@@534 (T@U) T@U)
(declare-fun $generated@@548 (T@U) Int)
(declare-fun $generated@@549 (T@U) Int)
(declare-fun $generated@@565 (T@U) T@U)
(declare-fun $generated@@616 (T@U) Int)
(assert  (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (= ($generated@@1 $generated@@2) 0) (= ($generated@@1 $generated@@3) 1)) (= ($generated@@1 $generated@@4) 2)) (= ($generated@@1 $generated@@5) 3)) (= ($generated@@1 $generated@@6) 4)) (= ($generated@@1 $generated@@7) 5)) (forall (($generated@@18 Int) ) (! (= ($generated ($generated@@8 $generated@@18)) $generated@@18)
 :pattern ( ($generated@@8 $generated@@18))
))) (forall (($generated@@19 T@U) ) (!  (=> (= (type $generated@@19) $generated@@2) (= ($generated@@8 ($generated $generated@@19)) $generated@@19))
 :pattern ( ($generated $generated@@19))
))) (forall (($generated@@20 Int) ) (! (= (type ($generated@@8 $generated@@20)) $generated@@2)
 :pattern ( ($generated@@8 $generated@@20))
))) (forall (($generated@@21 Real) ) (! (= ($generated@@10 ($generated@@9 $generated@@21)) $generated@@21)
 :pattern ( ($generated@@9 $generated@@21))
))) (forall (($generated@@22 T@U) ) (!  (=> (= (type $generated@@22) $generated@@3) (= ($generated@@9 ($generated@@10 $generated@@22)) $generated@@22))
 :pattern ( ($generated@@10 $generated@@22))
))) (forall (($generated@@23 Real) ) (! (= (type ($generated@@9 $generated@@23)) $generated@@3)
 :pattern ( ($generated@@9 $generated@@23))
))) (forall (($generated@@24 Bool) ) (! (= ($generated@@0 ($generated@@11 $generated@@24)) $generated@@24)
 :pattern ( ($generated@@11 $generated@@24))
))) (forall (($generated@@25 T@U) ) (!  (=> (= (type $generated@@25) $generated@@4) (= ($generated@@11 ($generated@@0 $generated@@25)) $generated@@25))
 :pattern ( ($generated@@0 $generated@@25))
))) (forall (($generated@@26 Bool) ) (! (= (type ($generated@@11 $generated@@26)) $generated@@4)
 :pattern ( ($generated@@11 $generated@@26))
))) (forall (($generated@@27 RoundingMode) ) (! (= ($generated@@13 ($generated@@12 $generated@@27)) $generated@@27)
 :pattern ( ($generated@@12 $generated@@27))
))) (forall (($generated@@28 T@U) ) (!  (=> (= (type $generated@@28) $generated@@5) (= ($generated@@12 ($generated@@13 $generated@@28)) $generated@@28))
 :pattern ( ($generated@@13 $generated@@28))
))) (forall (($generated@@29 RoundingMode) ) (! (= (type ($generated@@12 $generated@@29)) $generated@@5)
 :pattern ( ($generated@@12 $generated@@29))
))) (forall (($generated@@30 String) ) (! (= ($generated@@15 ($generated@@14 $generated@@30)) $generated@@30)
 :pattern ( ($generated@@14 $generated@@30))
))) (forall (($generated@@31 T@U) ) (!  (=> (= (type $generated@@31) $generated@@6) (= ($generated@@14 ($generated@@15 $generated@@31)) $generated@@31))
 :pattern ( ($generated@@15 $generated@@31))
))) (forall (($generated@@32 String) ) (! (= (type ($generated@@14 $generated@@32)) $generated@@6)
 :pattern ( ($generated@@14 $generated@@32))
))) (forall (($generated@@33 (RegEx String)) ) (! (= ($generated@@17 ($generated@@16 $generated@@33)) $generated@@33)
 :pattern ( ($generated@@16 $generated@@33))
))) (forall (($generated@@34 T@U) ) (!  (=> (= (type $generated@@34) $generated@@7) (= ($generated@@16 ($generated@@17 $generated@@34)) $generated@@34))
 :pattern ( ($generated@@17 $generated@@34))
))) (forall (($generated@@35 (RegEx String)) ) (! (= (type ($generated@@16 $generated@@35)) $generated@@7)
 :pattern ( ($generated@@16 $generated@@35))
))))
(assert (forall (($generated@@36 T@U) ) (! (UOrdering2 $generated@@36 $generated@@36)
 :no-pattern ($generated $generated@@36)
 :no-pattern ($generated@@0 $generated@@36)
)))
(assert (forall (($generated@@37 T@U) ($generated@@38 T@U) ($generated@@39 T@U) ) (! (let (($generated@@40 (type $generated@@37)))
 (=> (and (and (= (type $generated@@38) $generated@@40) (= (type $generated@@39) $generated@@40)) (and (UOrdering2 $generated@@37 $generated@@38) (UOrdering2 $generated@@38 $generated@@39))) (UOrdering2 $generated@@37 $generated@@39)))
 :pattern ( (UOrdering2 $generated@@37 $generated@@38) (UOrdering2 $generated@@38 $generated@@39))
)))
(assert (forall (($generated@@41 T@U) ($generated@@42 T@U) ) (! (let (($generated@@43 (type $generated@@41)))
 (=> (= (type $generated@@42) $generated@@43) (=> (and (UOrdering2 $generated@@41 $generated@@42) (UOrdering2 $generated@@42 $generated@@41)) (= $generated@@41 $generated@@42))))
 :pattern ( (UOrdering2 $generated@@41 $generated@@42) (UOrdering2 $generated@@42 $generated@@41))
)))
(assert  (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (= ($generated@@1 $generated@@70) 6) (= (type $generated@@44) $generated@@70)) (= (type $generated@@45) $generated@@70)) (= (type $generated@@46) $generated@@70)) (= (type $generated@@47) $generated@@70)) (= (type $generated@@48) $generated@@70)) (= ($generated@@1 $generated@@71) 7)) (= (type $generated@@49) $generated@@71)) (= (type $generated@@50) $generated@@71)) (= (type $generated@@51) $generated@@71)) (= (type $generated@@52) $generated@@71)) (= (type $generated@@53) $generated@@71)) (= (type $generated@@54) $generated@@71)) (= (type $generated@@55) $generated@@71)) (= (type $generated@@56) $generated@@71)) (= (type $generated@@57) $generated@@71)) (= (type $generated@@58) $generated@@71)) (= (type $generated@@59) $generated@@71)) (forall (($generated@@76 T@T) ) (= ($generated@@1 ($generated@@72 $generated@@76)) 8))) (forall (($generated@@77 T@T) ) (! (= ($generated@@73 ($generated@@72 $generated@@77)) $generated@@77)
 :pattern ( ($generated@@72 $generated@@77))
))) (= (type $generated@@60) ($generated@@72 $generated@@4))) (= ($generated@@1 $generated@@74) 9)) (= (type $generated@@61) $generated@@74)) (= (type $generated@@62) $generated@@71)) (= (type $generated@@63) $generated@@74)) (= (type $generated@@64) $generated@@71)) (= (type $generated@@65) $generated@@74)) (= (type $generated@@66) $generated@@74)) (= (type $generated@@67) $generated@@74)) (= ($generated@@1 $generated@@75) 10)) (= (type $generated@@68) $generated@@75)) (= (type $generated@@69) $generated@@75)))
(assert (distinct $generated@@44 $generated@@45 $generated@@46 $generated@@47 $generated@@48 $generated@@49 $generated@@50 $generated@@51 $generated@@52 $generated@@53 $generated@@54 $generated@@55 $generated@@56 $generated@@57 $generated@@58 $generated@@59 $generated@@60 $generated@@61 $generated@@62 $generated@@63 $generated@@64 $generated@@65 $generated@@66 $generated@@67 $generated@@68 $generated@@69)
)
(assert  (and (and (= ($generated@@1 $generated@@81) 11) (forall (($generated@@87 T@U) ) (! (let (($generated@@88 (type $generated@@87)))
(= (type ($generated@@80 $generated@@87)) $generated@@88))
 :pattern ( ($generated@@80 $generated@@87))
))) (= (type $generated@@84) $generated@@70)))
(assert  (=> (<= 1 $generated@@78) (forall (($generated@@89 T@U) ) (!  (=> (and (= (type $generated@@89) $generated@@81) (or ($generated@@82 ($generated@@80 $generated@@89)) (and (not (= 1 $generated@@78)) ($generated@@83 $generated@@89 $generated@@84)))) (= ($generated@@79 ($generated@@80 $generated@@89)) (ite ($generated@@85 ($generated@@80 $generated@@89)) 0 (ite ($generated@@86 ($generated@@80 $generated@@89)) 2 80))))
 :weight 3
 :pattern ( ($generated@@79 ($generated@@80 $generated@@89)))
))))
(assert (forall (($generated@@91 T@U) ) (! (= (type ($generated@@90 $generated@@91)) $generated@@71)
 :pattern ( ($generated@@90 $generated@@91))
)))
(assert (= ($generated@@90 $generated@@44) $generated@@49))
(assert (= ($generated@@90 $generated@@45) $generated@@50))
(assert (= ($generated@@90 $generated@@46) $generated@@51))
(assert (= ($generated@@90 $generated@@47) $generated@@52))
(assert (= ($generated@@90 $generated@@48) $generated@@53))
(assert  (and (and (and (and (and (and (and (and (and (and (and (and (and (forall (($generated@@103 T@T) ($generated@@104 T@T) ) (= ($generated@@1 ($generated@@94 $generated@@103 $generated@@104)) 12)) (forall (($generated@@105 T@T) ($generated@@106 T@T) ) (! (= ($generated@@97 ($generated@@94 $generated@@105 $generated@@106)) $generated@@105)
 :pattern ( ($generated@@94 $generated@@105 $generated@@106))
))) (forall (($generated@@107 T@T) ($generated@@108 T@T) ) (! (= ($generated@@98 ($generated@@94 $generated@@107 $generated@@108)) $generated@@108)
 :pattern ( ($generated@@94 $generated@@107 $generated@@108))
))) (forall (($generated@@109 T@U) ($generated@@110 T@U) ) (! (let (($generated@@111 ($generated@@98 (type $generated@@109))))
(= (type ($generated@@99 $generated@@109 $generated@@110)) $generated@@111))
 :pattern ( ($generated@@99 $generated@@109 $generated@@110))
))) (forall (($generated@@112 T@U) ($generated@@113 T@U) ($generated@@114 T@U) ) (! (let (($generated@@115 (type $generated@@114)))
(let (($generated@@116 (type $generated@@113)))
(= (type ($generated@@100 $generated@@112 $generated@@113 $generated@@114)) ($generated@@94 $generated@@116 $generated@@115))))
 :pattern ( ($generated@@100 $generated@@112 $generated@@113 $generated@@114))
))) (forall (($generated@@117 T@U) ($generated@@118 T@U) ($generated@@119 T@U) ) (! (let (($generated@@120 ($generated@@98 (type $generated@@117))))
 (=> (= (type $generated@@119) $generated@@120) (= ($generated@@99 ($generated@@100 $generated@@117 $generated@@118 $generated@@119) $generated@@118) $generated@@119)))
 :weight 0
))) (and (forall (($generated@@121 T@U) ($generated@@122 T@U) ($generated@@123 T@U) ($generated@@124 T@U) ) (!  (or (= $generated@@123 $generated@@124) (= ($generated@@99 ($generated@@100 $generated@@122 $generated@@123 $generated@@121) $generated@@124) ($generated@@99 $generated@@122 $generated@@124)))
 :weight 0
)) (forall (($generated@@125 T@U) ($generated@@126 T@U) ($generated@@127 T@U) ($generated@@128 T@U) ) (!  (or true (= ($generated@@99 ($generated@@100 $generated@@126 $generated@@127 $generated@@125) $generated@@128) ($generated@@99 $generated@@126 $generated@@128)))
 :weight 0
)))) (= ($generated@@1 $generated@@95) 13)) (forall (($generated@@129 T@U) ($generated@@130 T@U) ) (! (let (($generated@@131 ($generated@@73 (type $generated@@130))))
(= (type ($generated@@101 $generated@@129 $generated@@130)) $generated@@131))
 :pattern ( ($generated@@101 $generated@@129 $generated@@130))
))) (= ($generated@@1 $generated@@96) 14)) (forall (($generated@@132 T@U) ($generated@@133 T@U) ($generated@@134 T@U) ) (! (= (type ($generated@@102 $generated@@132 $generated@@133 $generated@@134)) $generated@@96)
 :pattern ( ($generated@@102 $generated@@132 $generated@@133 $generated@@134))
))) (forall (($generated@@135 T@U) ($generated@@136 T@U) ($generated@@137 T@U) ) (! (let (($generated@@138 ($generated@@73 (type $generated@@136))))
 (=> (= (type $generated@@137) $generated@@138) (= ($generated@@101 ($generated@@102 $generated@@135 $generated@@136 $generated@@137) $generated@@136) $generated@@137)))
 :weight 0
))) (and (forall (($generated@@139 T@U) ($generated@@140 T@U) ($generated@@141 T@U) ($generated@@142 T@U) ) (!  (or (= $generated@@141 $generated@@142) (= ($generated@@101 ($generated@@102 $generated@@140 $generated@@141 $generated@@139) $generated@@142) ($generated@@101 $generated@@140 $generated@@142)))
 :weight 0
)) (forall (($generated@@143 T@U) ($generated@@144 T@U) ($generated@@145 T@U) ($generated@@146 T@U) ) (!  (or true (= ($generated@@101 ($generated@@102 $generated@@144 $generated@@145 $generated@@143) $generated@@146) ($generated@@101 $generated@@144 $generated@@146)))
 :weight 0
)))) (forall (($generated@@147 Int) ) (! (= (type ($generated@@93 $generated@@147)) $generated@@70)
 :pattern ( ($generated@@93 $generated@@147))
))))
(assert (forall (($generated@@148 T@U) ($generated@@149 T@U) ) (!  (=> (and (= (type $generated@@148) $generated@@2) (= (type $generated@@149) ($generated@@94 $generated@@95 $generated@@96))) ($generated@@92 $generated@@148 ($generated@@93 0) $generated@@149))
 :pattern ( ($generated@@92 $generated@@148 ($generated@@93 0) $generated@@149))
)))
(assert (forall (($generated@@150 T@U) ) (!  (=> (= (type $generated@@150) $generated@@2) ($generated@@83 $generated@@150 ($generated@@93 0)))
 :pattern ( ($generated@@83 $generated@@150 ($generated@@93 0)))
)))
(assert  (=> (<= 1 $generated@@78) (forall (($generated@@151 T@U) ) (!  (=> (and (= (type $generated@@151) $generated@@81) (or ($generated@@82 $generated@@151) (and (not (= 1 $generated@@78)) ($generated@@83 $generated@@151 $generated@@84)))) true)
 :pattern ( ($generated@@79 $generated@@151))
))))
(assert (forall (($generated@@154 T@U) ($generated@@155 T@U) ) (! (= (type ($generated@@153 $generated@@154 $generated@@155)) $generated@@70)
 :pattern ( ($generated@@153 $generated@@154 $generated@@155))
)))
(assert (forall (($generated@@156 T@U) ($generated@@157 T@U) ($generated@@158 T@U) ) (!  (=> (and (and (and (= (type $generated@@156) $generated@@70) (= (type $generated@@157) $generated@@70)) (= (type $generated@@158) $generated@@81)) ($generated@@83 $generated@@158 ($generated@@153 $generated@@156 $generated@@157))) ($generated@@152 $generated@@158))
 :pattern ( ($generated@@152 $generated@@158) ($generated@@83 $generated@@158 ($generated@@153 $generated@@156 $generated@@157)))
)))
(assert  (and (and (= ($generated@@1 $generated@@162) 15) (forall (($generated@@163 T@U) ) (! (= (type ($generated@@160 $generated@@163)) $generated@@162)
 :pattern ( ($generated@@160 $generated@@163))
))) (forall (($generated@@164 T@U) ) (! (= (type ($generated@@161 $generated@@164)) $generated@@162)
 :pattern ( ($generated@@161 $generated@@164))
))))
(assert (forall (($generated@@165 T@U) ($generated@@166 T@U) ) (!  (=> (and (and (= (type $generated@@165) $generated@@81) (= (type $generated@@166) $generated@@81)) true) (= ($generated@@159 $generated@@165 $generated@@166)  (and (= ($generated@@160 $generated@@165) ($generated@@160 $generated@@166)) (= ($generated@@161 $generated@@165) ($generated@@161 $generated@@166)))))
 :pattern ( ($generated@@159 $generated@@165 $generated@@166))
)))
(assert  (and (forall (($generated@@169 T@U) ) (! (= (type ($generated@@167 $generated@@169)) $generated@@74)
 :pattern ( ($generated@@167 $generated@@169))
)) (= (type $generated@@168) $generated@@81)))
(assert (= ($generated@@167 $generated@@168) $generated@@63))
(assert (= (type $generated@@170) $generated@@81))
(assert (= ($generated@@167 $generated@@170) $generated@@65))
(assert (= (type $generated@@171) $generated@@81))
(assert (= ($generated@@167 $generated@@171) $generated@@66))
(assert (= (type $generated@@172) $generated@@81))
(assert (= ($generated@@167 $generated@@172) $generated@@67))
(assert (forall (($generated@@175 T@U) ) (! (= (type ($generated@@173 $generated@@175)) $generated@@70)
 :pattern ( ($generated@@173 $generated@@175))
)))
(assert (forall (($generated@@176 T@U) ($generated@@177 T@U) ) (!  (=> (and (and (= (type $generated@@176) ($generated@@94 $generated@@162 $generated@@2)) (= (type $generated@@177) $generated@@70)) ($generated@@83 $generated@@176 ($generated@@173 $generated@@177))) ($generated@@174 $generated@@176))
 :pattern ( ($generated@@83 $generated@@176 ($generated@@173 $generated@@177)))
)))
(assert  (and (and (and (and (and (and (and (forall (($generated@@184 T@T) ($generated@@185 T@T) ) (= ($generated@@1 ($generated@@180 $generated@@184 $generated@@185)) 16)) (forall (($generated@@186 T@T) ($generated@@187 T@T) ) (! (= ($generated@@181 ($generated@@180 $generated@@186 $generated@@187)) $generated@@186)
 :pattern ( ($generated@@180 $generated@@186 $generated@@187))
))) (forall (($generated@@188 T@T) ($generated@@189 T@T) ) (! (= ($generated@@182 ($generated@@180 $generated@@188 $generated@@189)) $generated@@189)
 :pattern ( ($generated@@180 $generated@@188 $generated@@189))
))) (forall (($generated@@190 T@U) ($generated@@191 T@U) ($generated@@192 T@U) ) (! (let (($generated@@193 ($generated@@182 (type $generated@@190))))
(= (type ($generated@@178 $generated@@190 $generated@@191 $generated@@192)) $generated@@193))
 :pattern ( ($generated@@178 $generated@@190 $generated@@191 $generated@@192))
))) (forall (($generated@@194 T@U) ($generated@@195 T@U) ($generated@@196 T@U) ($generated@@197 T@U) ) (! (let (($generated@@198 (type $generated@@197)))
(let (($generated@@199 (type $generated@@195)))
(= (type ($generated@@183 $generated@@194 $generated@@195 $generated@@196 $generated@@197)) ($generated@@180 $generated@@199 $generated@@198))))
 :pattern ( ($generated@@183 $generated@@194 $generated@@195 $generated@@196 $generated@@197))
))) (forall (($generated@@200 T@U) ($generated@@201 T@U) ($generated@@202 T@U) ($generated@@203 T@U) ) (! (let (($generated@@204 ($generated@@182 (type $generated@@200))))
 (=> (= (type $generated@@203) $generated@@204) (= ($generated@@178 ($generated@@183 $generated@@200 $generated@@201 $generated@@202 $generated@@203) $generated@@201 $generated@@202) $generated@@203)))
 :weight 0
))) (and (and (forall (($generated@@205 T@U) ($generated@@206 T@U) ($generated@@207 T@U) ($generated@@208 T@U) ($generated@@209 T@U) ($generated@@210 T@U) ) (!  (or (= $generated@@207 $generated@@209) (= ($generated@@178 ($generated@@183 $generated@@206 $generated@@207 $generated@@208 $generated@@205) $generated@@209 $generated@@210) ($generated@@178 $generated@@206 $generated@@209 $generated@@210)))
 :weight 0
)) (forall (($generated@@211 T@U) ($generated@@212 T@U) ($generated@@213 T@U) ($generated@@214 T@U) ($generated@@215 T@U) ($generated@@216 T@U) ) (!  (or (= $generated@@214 $generated@@216) (= ($generated@@178 ($generated@@183 $generated@@212 $generated@@213 $generated@@214 $generated@@211) $generated@@215 $generated@@216) ($generated@@178 $generated@@212 $generated@@215 $generated@@216)))
 :weight 0
))) (forall (($generated@@217 T@U) ($generated@@218 T@U) ($generated@@219 T@U) ($generated@@220 T@U) ($generated@@221 T@U) ($generated@@222 T@U) ) (!  (or true (= ($generated@@178 ($generated@@183 $generated@@218 $generated@@219 $generated@@220 $generated@@217) $generated@@221 $generated@@222) ($generated@@178 $generated@@218 $generated@@221 $generated@@222)))
 :weight 0
)))) (forall (($generated@@223 T@U) ($generated@@224 T@U) ($generated@@225 T@U) ($generated@@226 Bool) ) (! (= (type ($generated@@179 $generated@@223 $generated@@224 $generated@@225 $generated@@226)) ($generated@@180 $generated@@95 $generated@@4))
 :pattern ( ($generated@@179 $generated@@223 $generated@@224 $generated@@225 $generated@@226))
))))
(assert (forall (($generated@@227 T@U) ($generated@@228 T@U) ($generated@@229 T@U) ($generated@@230 Bool) ($generated@@231 T@U) ($generated@@232 T@U) ) (! (let (($generated@@233 ($generated@@73 (type $generated@@232))))
 (=> (and (and (and (and (= (type $generated@@227) $generated@@95) (= (type $generated@@228) ($generated@@94 $generated@@95 $generated@@96))) (= (type $generated@@229) ($generated@@72 $generated@@4))) (= (type $generated@@231) $generated@@95)) (= (type $generated@@232) ($generated@@72 $generated@@233))) (= ($generated@@0 ($generated@@178 ($generated@@179 $generated@@227 $generated@@228 $generated@@229 $generated@@230) $generated@@231 $generated@@232))  (=> (and (not (= $generated@@231 $generated@@227)) ($generated@@0 ($generated@@101 ($generated@@99 $generated@@228 $generated@@231) $generated@@229))) $generated@@230))))
 :pattern ( ($generated@@178 ($generated@@179 $generated@@227 $generated@@228 $generated@@229 $generated@@230) $generated@@231 $generated@@232))
)))
(assert (forall (($generated@@235 T@U) ($generated@@236 T@U) ($generated@@237 T@U) ($generated@@238 Bool) ) (! (= (type ($generated@@234 $generated@@235 $generated@@236 $generated@@237 $generated@@238)) ($generated@@180 $generated@@95 $generated@@4))
 :pattern ( ($generated@@234 $generated@@235 $generated@@236 $generated@@237 $generated@@238))
)))
(assert (forall (($generated@@239 T@U) ($generated@@240 T@U) ($generated@@241 T@U) ($generated@@242 Bool) ($generated@@243 T@U) ($generated@@244 T@U) ) (! (let (($generated@@245 ($generated@@73 (type $generated@@244))))
 (=> (and (and (and (and (= (type $generated@@239) $generated@@95) (= (type $generated@@240) ($generated@@94 $generated@@95 $generated@@96))) (= (type $generated@@241) ($generated@@72 $generated@@4))) (= (type $generated@@243) $generated@@95)) (= (type $generated@@244) ($generated@@72 $generated@@245))) (= ($generated@@0 ($generated@@178 ($generated@@234 $generated@@239 $generated@@240 $generated@@241 $generated@@242) $generated@@243 $generated@@244))  (=> (and (not (= $generated@@243 $generated@@239)) ($generated@@0 ($generated@@101 ($generated@@99 $generated@@240 $generated@@243) $generated@@241))) $generated@@242))))
 :pattern ( ($generated@@178 ($generated@@234 $generated@@239 $generated@@240 $generated@@241 $generated@@242) $generated@@243 $generated@@244))
)))
(assert (forall (($generated@@248 T@U) ($generated@@249 T@U) ) (! (= (type ($generated@@246 $generated@@248 $generated@@249)) $generated@@81)
 :pattern ( ($generated@@246 $generated@@248 $generated@@249))
)))
(assert (forall (($generated@@250 T@U) ($generated@@251 T@U) ($generated@@252 T@U) ($generated@@253 T@U) ) (!  (=> (and (and (and (= (type $generated@@250) $generated@@70) (= (type $generated@@251) $generated@@70)) (= (type $generated@@252) $generated@@162)) (= (type $generated@@253) $generated@@162)) (= ($generated@@83 ($generated@@246 $generated@@252 $generated@@253) ($generated@@153 $generated@@250 $generated@@251))  (and ($generated@@247 $generated@@252 $generated@@250) ($generated@@247 $generated@@253 $generated@@251))))
 :pattern ( ($generated@@83 ($generated@@246 $generated@@252 $generated@@253) ($generated@@153 $generated@@250 $generated@@251)))
)))
(assert ($generated@@83 $generated@@168 $generated@@84))
(assert ($generated@@83 $generated@@170 $generated@@84))
(assert ($generated@@83 $generated@@171 $generated@@84))
(assert ($generated@@83 $generated@@172 $generated@@84))
(assert (forall (($generated@@255 T@U) ) (!  (=> (and (= (type $generated@@255) ($generated@@94 $generated@@95 $generated@@96)) ($generated@@254 $generated@@255)) ($generated@@92 $generated@@168 $generated@@84 $generated@@255))
 :pattern ( ($generated@@92 $generated@@168 $generated@@84 $generated@@255))
)))
(assert (forall (($generated@@256 T@U) ) (!  (=> (and (= (type $generated@@256) ($generated@@94 $generated@@95 $generated@@96)) ($generated@@254 $generated@@256)) ($generated@@92 $generated@@170 $generated@@84 $generated@@256))
 :pattern ( ($generated@@92 $generated@@170 $generated@@84 $generated@@256))
)))
(assert (forall (($generated@@257 T@U) ) (!  (=> (and (= (type $generated@@257) ($generated@@94 $generated@@95 $generated@@96)) ($generated@@254 $generated@@257)) ($generated@@92 $generated@@171 $generated@@84 $generated@@257))
 :pattern ( ($generated@@92 $generated@@171 $generated@@84 $generated@@257))
)))
(assert (forall (($generated@@258 T@U) ) (!  (=> (and (= (type $generated@@258) ($generated@@94 $generated@@95 $generated@@96)) ($generated@@254 $generated@@258)) ($generated@@92 $generated@@172 $generated@@84 $generated@@258))
 :pattern ( ($generated@@92 $generated@@172 $generated@@84 $generated@@258))
)))
(assert (forall (($generated@@259 T@U) ($generated@@260 T@U) ) (!  (=> (and (= (type $generated@@259) $generated@@81) (= (type $generated@@260) $generated@@81)) (= ($generated@@159 $generated@@259 $generated@@260) (= $generated@@259 $generated@@260)))
 :pattern ( ($generated@@159 $generated@@259 $generated@@260))
)))
(assert (forall (($generated@@262 T@U) ($generated@@263 T@U) ) (!  (=> (and (= (type $generated@@262) $generated@@81) (= (type $generated@@263) $generated@@81)) (= ($generated@@261 $generated@@262 $generated@@263) (= $generated@@262 $generated@@263)))
 :pattern ( ($generated@@261 $generated@@262 $generated@@263))
)))
(assert (forall (($generated@@265 T@U) ) (! (= (type ($generated@@264 $generated@@265)) $generated@@70)
 :pattern ( ($generated@@264 $generated@@265))
)))
(assert (forall (($generated@@266 T@U) ($generated@@267 T@U) ) (!  (=> (and (= (type $generated@@266) ($generated@@94 $generated@@162 $generated@@4)) (= (type $generated@@267) $generated@@70)) (= ($generated@@83 $generated@@266 ($generated@@264 $generated@@267)) (forall (($generated@@268 T@U) ) (!  (=> (and (= (type $generated@@268) $generated@@162) ($generated@@0 ($generated@@99 $generated@@266 $generated@@268))) ($generated@@247 $generated@@268 $generated@@267))
 :pattern ( ($generated@@99 $generated@@266 $generated@@268))
))))
 :pattern ( ($generated@@83 $generated@@266 ($generated@@264 $generated@@267)))
)))
(assert (forall (($generated@@270 T@U) ) (! (= (type ($generated@@269 $generated@@270)) $generated@@70)
 :pattern ( ($generated@@269 $generated@@270))
)))
(assert (forall (($generated@@271 T@U) ($generated@@272 T@U) ) (!  (=> (and (= (type $generated@@271) ($generated@@94 $generated@@162 $generated@@4)) (= (type $generated@@272) $generated@@70)) (= ($generated@@83 $generated@@271 ($generated@@269 $generated@@272)) (forall (($generated@@273 T@U) ) (!  (=> (and (= (type $generated@@273) $generated@@162) ($generated@@0 ($generated@@99 $generated@@271 $generated@@273))) ($generated@@247 $generated@@273 $generated@@272))
 :pattern ( ($generated@@99 $generated@@271 $generated@@273))
))))
 :pattern ( ($generated@@83 $generated@@271 ($generated@@269 $generated@@272)))
)))
(assert (forall (($generated@@275 Int) ) (! (= ($generated@@274 $generated@@275) $generated@@275)
 :pattern ( ($generated@@274 $generated@@275))
)))
(assert (forall (($generated@@276 T@U) ) (! (= ($generated@@80 $generated@@276) $generated@@276)
 :pattern ( ($generated@@80 $generated@@276))
)))
(assert (forall (($generated@@277 T@U) ($generated@@278 T@U) ) (!  (=> (and (and (= (type $generated@@277) $generated@@81) (= (type $generated@@278) $generated@@81)) (and ($generated@@85 $generated@@277) ($generated@@85 $generated@@278))) (= ($generated@@261 $generated@@277 $generated@@278) true))
 :pattern ( ($generated@@261 $generated@@277 $generated@@278) ($generated@@85 $generated@@277))
 :pattern ( ($generated@@261 $generated@@277 $generated@@278) ($generated@@85 $generated@@278))
)))
(assert (forall (($generated@@279 T@U) ($generated@@280 T@U) ) (!  (=> (and (and (= (type $generated@@279) $generated@@81) (= (type $generated@@280) $generated@@81)) (and ($generated@@86 $generated@@279) ($generated@@86 $generated@@280))) (= ($generated@@261 $generated@@279 $generated@@280) true))
 :pattern ( ($generated@@261 $generated@@279 $generated@@280) ($generated@@86 $generated@@279))
 :pattern ( ($generated@@261 $generated@@279 $generated@@280) ($generated@@86 $generated@@280))
)))
(assert (forall (($generated@@282 T@U) ($generated@@283 T@U) ) (!  (=> (and (and (= (type $generated@@282) $generated@@81) (= (type $generated@@283) $generated@@81)) (and ($generated@@281 $generated@@282) ($generated@@281 $generated@@283))) (= ($generated@@261 $generated@@282 $generated@@283) true))
 :pattern ( ($generated@@261 $generated@@282 $generated@@283) ($generated@@281 $generated@@282))
 :pattern ( ($generated@@261 $generated@@282 $generated@@283) ($generated@@281 $generated@@283))
)))
(assert (forall (($generated@@285 T@U) ($generated@@286 T@U) ) (!  (=> (and (and (= (type $generated@@285) $generated@@81) (= (type $generated@@286) $generated@@81)) (and ($generated@@284 $generated@@285) ($generated@@284 $generated@@286))) (= ($generated@@261 $generated@@285 $generated@@286) true))
 :pattern ( ($generated@@261 $generated@@285 $generated@@286) ($generated@@284 $generated@@285))
 :pattern ( ($generated@@261 $generated@@285 $generated@@286) ($generated@@284 $generated@@286))
)))
(assert (forall (($generated@@288 T@U) ($generated@@289 T@U) ($generated@@290 T@U) ($generated@@291 T@U) ($generated@@292 T@U) ) (!  (=> (and (and (and (and (and (= (type $generated@@288) $generated@@70) (= (type $generated@@289) $generated@@70)) (= (type $generated@@290) $generated@@162)) (= (type $generated@@291) $generated@@162)) (= (type $generated@@292) ($generated@@94 $generated@@95 $generated@@96))) ($generated@@254 $generated@@292)) (= ($generated@@92 ($generated@@246 $generated@@290 $generated@@291) ($generated@@153 $generated@@288 $generated@@289) $generated@@292)  (and ($generated@@287 $generated@@290 $generated@@288 $generated@@292) ($generated@@287 $generated@@291 $generated@@289 $generated@@292))))
 :pattern ( ($generated@@92 ($generated@@246 $generated@@290 $generated@@291) ($generated@@153 $generated@@288 $generated@@289) $generated@@292))
)))
(assert (forall (($generated@@293 T@U) ) (!  (=> (= (type $generated@@293) $generated@@81) (= ($generated@@152 $generated@@293) (= ($generated@@167 $generated@@293) $generated@@61)))
 :pattern ( ($generated@@152 $generated@@293))
)))
(assert (forall (($generated@@294 T@U) ) (!  (=> (= (type $generated@@294) $generated@@81) (= ($generated@@85 $generated@@294) (= ($generated@@167 $generated@@294) $generated@@63)))
 :pattern ( ($generated@@85 $generated@@294))
)))
(assert (forall (($generated@@295 T@U) ) (!  (=> (= (type $generated@@295) $generated@@81) (= ($generated@@86 $generated@@295) (= ($generated@@167 $generated@@295) $generated@@65)))
 :pattern ( ($generated@@86 $generated@@295))
)))
(assert (forall (($generated@@296 T@U) ) (!  (=> (= (type $generated@@296) $generated@@81) (= ($generated@@281 $generated@@296) (= ($generated@@167 $generated@@296) $generated@@66)))
 :pattern ( ($generated@@281 $generated@@296))
)))
(assert (forall (($generated@@297 T@U) ) (!  (=> (= (type $generated@@297) $generated@@81) (= ($generated@@284 $generated@@297) (= ($generated@@167 $generated@@297) $generated@@67)))
 :pattern ( ($generated@@284 $generated@@297))
)))
(assert (forall (($generated@@298 T@U) ) (!  (=> (and (= (type $generated@@298) $generated@@81) ($generated@@152 $generated@@298)) (exists (($generated@@299 T@U) ($generated@@300 T@U) ) (!  (and (and (= (type $generated@@299) $generated@@162) (= (type $generated@@300) $generated@@162)) (= $generated@@298 ($generated@@246 $generated@@299 $generated@@300)))
 :no-pattern (type $generated@@299)
 :no-pattern (type $generated@@300)
 :no-pattern ($generated $generated@@299)
 :no-pattern ($generated@@0 $generated@@299)
 :no-pattern ($generated $generated@@300)
 :no-pattern ($generated@@0 $generated@@300)
)))
 :pattern ( ($generated@@152 $generated@@298))
)))
(assert  (and (and (forall (($generated@@305 T@T) ) (= ($generated@@1 ($generated@@303 $generated@@305)) 17)) (forall (($generated@@306 T@T) ) (! (= ($generated@@304 ($generated@@303 $generated@@306)) $generated@@306)
 :pattern ( ($generated@@303 $generated@@306))
))) (forall (($generated@@307 T@T) ) (! (= (type ($generated@@301 $generated@@307)) ($generated@@303 $generated@@307))
 :pattern ( ($generated@@301 $generated@@307))
))))
(assert (forall (($generated@@308 T@T) ) (! (= ($generated@@302 ($generated@@301 $generated@@308)) 0)
 :pattern ( ($generated@@301 $generated@@308))
)))
(assert (forall (($generated@@309 T@U) ) (!  (=> (and (= (type $generated@@309) $generated@@81) ($generated@@85 $generated@@309)) (= $generated@@309 $generated@@168))
 :pattern ( ($generated@@85 $generated@@309))
)))
(assert (forall (($generated@@310 T@U) ) (!  (=> (and (= (type $generated@@310) $generated@@81) ($generated@@86 $generated@@310)) (= $generated@@310 $generated@@170))
 :pattern ( ($generated@@86 $generated@@310))
)))
(assert (forall (($generated@@311 T@U) ) (!  (=> (and (= (type $generated@@311) $generated@@81) ($generated@@281 $generated@@311)) (= $generated@@311 $generated@@171))
 :pattern ( ($generated@@281 $generated@@311))
)))
(assert (forall (($generated@@312 T@U) ) (!  (=> (and (= (type $generated@@312) $generated@@81) ($generated@@284 $generated@@312)) (= $generated@@312 $generated@@172))
 :pattern ( ($generated@@284 $generated@@312))
)))
(assert (forall (($generated@@314 T@U) ) (! (= (type ($generated@@313 $generated@@314)) $generated@@162)
 :pattern ( ($generated@@313 $generated@@314))
)))
(assert (forall (($generated@@315 T@U) ($generated@@316 T@U) ($generated@@317 T@U) ) (!  (=> (and (= (type $generated@@316) $generated@@70) (= (type $generated@@317) ($generated@@94 $generated@@95 $generated@@96))) (= ($generated@@287 ($generated@@313 $generated@@315) $generated@@316 $generated@@317) ($generated@@92 $generated@@315 $generated@@316 $generated@@317)))
 :pattern ( ($generated@@287 ($generated@@313 $generated@@315) $generated@@316 $generated@@317))
)))
(assert (forall (($generated@@320 T@T) ) (! (= (type ($generated@@319 $generated@@320)) ($generated@@94 $generated@@320 $generated@@2))
 :pattern ( ($generated@@319 $generated@@320))
)))
(assert (forall (($generated@@321 T@U) ) (! (let (($generated@@322 ($generated@@97 (type $generated@@321))))
 (=> (= (type $generated@@321) ($generated@@94 $generated@@322 $generated@@2)) (and (= (= ($generated@@318 $generated@@321) 0) (= $generated@@321 ($generated@@319 $generated@@322))) (=> (not (= ($generated@@318 $generated@@321) 0)) (exists (($generated@@323 T@U) ) (!  (and (= (type $generated@@323) $generated@@322) (< 0 ($generated ($generated@@99 $generated@@321 $generated@@323))))
 :no-pattern (type $generated@@323)
 :no-pattern ($generated $generated@@323)
 :no-pattern ($generated@@0 $generated@@323)
))))))
 :pattern ( ($generated@@318 $generated@@321))
)))
(assert  (and (and (and (and (forall (($generated@@329 T@T) ($generated@@330 T@T) ) (= ($generated@@1 ($generated@@326 $generated@@329 $generated@@330)) 18)) (forall (($generated@@331 T@T) ($generated@@332 T@T) ) (! (= ($generated@@327 ($generated@@326 $generated@@331 $generated@@332)) $generated@@331)
 :pattern ( ($generated@@326 $generated@@331 $generated@@332))
))) (forall (($generated@@333 T@T) ($generated@@334 T@T) ) (! (= ($generated@@328 ($generated@@326 $generated@@333 $generated@@334)) $generated@@334)
 :pattern ( ($generated@@326 $generated@@333 $generated@@334))
))) (forall (($generated@@335 T@U) ) (! (let (($generated@@336 ($generated@@327 (type $generated@@335))))
(= (type ($generated@@324 $generated@@335)) ($generated@@94 $generated@@336 $generated@@4)))
 :pattern ( ($generated@@324 $generated@@335))
))) (forall (($generated@@337 T@T) ($generated@@338 T@T) ) (! (= (type ($generated@@325 $generated@@337 $generated@@338)) ($generated@@326 $generated@@337 $generated@@338))
 :pattern ( ($generated@@325 $generated@@337 $generated@@338))
))))
(assert (forall (($generated@@339 T@U) ($generated@@340 T@T) ) (! (let (($generated@@341 (type $generated@@339)))
 (not ($generated@@0 ($generated@@99 ($generated@@324 ($generated@@325 $generated@@341 $generated@@340)) $generated@@339))))
 :pattern ( (let (($generated@@341 (type $generated@@339)))
($generated@@99 ($generated@@324 ($generated@@325 $generated@@341 $generated@@340)) $generated@@339)))
)))
(assert  (and (and (and (and (forall (($generated@@347 T@T) ($generated@@348 T@T) ) (= ($generated@@1 ($generated@@344 $generated@@347 $generated@@348)) 19)) (forall (($generated@@349 T@T) ($generated@@350 T@T) ) (! (= ($generated@@345 ($generated@@344 $generated@@349 $generated@@350)) $generated@@349)
 :pattern ( ($generated@@344 $generated@@349 $generated@@350))
))) (forall (($generated@@351 T@T) ($generated@@352 T@T) ) (! (= ($generated@@346 ($generated@@344 $generated@@351 $generated@@352)) $generated@@352)
 :pattern ( ($generated@@344 $generated@@351 $generated@@352))
))) (forall (($generated@@353 T@U) ) (! (let (($generated@@354 ($generated@@345 (type $generated@@353))))
(= (type ($generated@@342 $generated@@353)) ($generated@@94 $generated@@354 $generated@@4)))
 :pattern ( ($generated@@342 $generated@@353))
))) (forall (($generated@@355 T@T) ($generated@@356 T@T) ) (! (= (type ($generated@@343 $generated@@355 $generated@@356)) ($generated@@344 $generated@@355 $generated@@356))
 :pattern ( ($generated@@343 $generated@@355 $generated@@356))
))))
(assert (forall (($generated@@357 T@U) ($generated@@358 T@T) ) (! (let (($generated@@359 (type $generated@@357)))
 (not ($generated@@0 ($generated@@99 ($generated@@342 ($generated@@343 $generated@@359 $generated@@358)) $generated@@357))))
 :pattern ( (let (($generated@@359 (type $generated@@357)))
($generated@@99 ($generated@@342 ($generated@@343 $generated@@359 $generated@@358)) $generated@@357)))
)))
(assert (forall (($generated@@360 T@U) ) (! (let (($generated@@361 ($generated@@97 (type $generated@@360))))
 (=> (= (type $generated@@360) ($generated@@94 $generated@@361 $generated@@2)) (= ($generated@@174 $generated@@360) (forall (($generated@@362 T@U) ) (!  (=> (= (type $generated@@362) $generated@@361) (and (<= 0 ($generated ($generated@@99 $generated@@360 $generated@@362))) (<= ($generated ($generated@@99 $generated@@360 $generated@@362)) ($generated@@318 $generated@@360))))
 :pattern ( ($generated@@99 $generated@@360 $generated@@362))
)))))
 :pattern ( ($generated@@174 $generated@@360))
)))
(assert (forall (($generated@@364 T@T) ($generated@@365 T@U) ) (! (= (type ($generated@@363 $generated@@364 $generated@@365)) $generated@@364)
 :pattern ( ($generated@@363 $generated@@364 $generated@@365))
)))
(assert (forall (($generated@@366 T@U) ) (!  (=> (and (= (type $generated@@366) $generated@@162) ($generated@@247 $generated@@366 $generated@@84)) (and (= ($generated@@313 ($generated@@363 $generated@@81 $generated@@366)) $generated@@366) ($generated@@83 ($generated@@363 $generated@@81 $generated@@366) $generated@@84)))
 :pattern ( ($generated@@247 $generated@@366 $generated@@84))
)))
(assert (forall (($generated@@367 T@U) ) (! (let (($generated@@368 ($generated@@328 (type $generated@@367))))
(let (($generated@@369 ($generated@@327 (type $generated@@367))))
 (=> (= (type $generated@@367) ($generated@@326 $generated@@369 $generated@@368)) (or (= $generated@@367 ($generated@@325 $generated@@369 $generated@@368)) (exists (($generated@@370 T@U) ) (!  (and (= (type $generated@@370) $generated@@369) ($generated@@0 ($generated@@99 ($generated@@324 $generated@@367) $generated@@370)))
 :no-pattern (type $generated@@370)
 :no-pattern ($generated $generated@@370)
 :no-pattern ($generated@@0 $generated@@370)
))))))
 :pattern ( ($generated@@324 $generated@@367))
)))
(assert (forall (($generated@@372 T@U) ) (! (let (($generated@@373 ($generated@@328 (type $generated@@372))))
(= (type ($generated@@371 $generated@@372)) ($generated@@94 $generated@@373 $generated@@4)))
 :pattern ( ($generated@@371 $generated@@372))
)))
(assert (forall (($generated@@374 T@U) ) (! (let (($generated@@375 ($generated@@328 (type $generated@@374))))
(let (($generated@@376 ($generated@@327 (type $generated@@374))))
 (=> (= (type $generated@@374) ($generated@@326 $generated@@376 $generated@@375)) (or (= $generated@@374 ($generated@@325 $generated@@376 $generated@@375)) (exists (($generated@@377 T@U) ) (!  (and (= (type $generated@@377) $generated@@375) ($generated@@0 ($generated@@99 ($generated@@371 $generated@@374) $generated@@377)))
 :no-pattern (type $generated@@377)
 :no-pattern ($generated $generated@@377)
 :no-pattern ($generated@@0 $generated@@377)
))))))
 :pattern ( ($generated@@371 $generated@@374))
)))
(assert (forall (($generated@@378 T@U) ) (! (let (($generated@@379 ($generated@@346 (type $generated@@378))))
(let (($generated@@380 ($generated@@345 (type $generated@@378))))
 (=> (= (type $generated@@378) ($generated@@344 $generated@@380 $generated@@379)) (or (= $generated@@378 ($generated@@343 $generated@@380 $generated@@379)) (exists (($generated@@381 T@U) ) (!  (and (= (type $generated@@381) $generated@@380) ($generated@@0 ($generated@@99 ($generated@@342 $generated@@378) $generated@@381)))
 :no-pattern (type $generated@@381)
 :no-pattern ($generated $generated@@381)
 :no-pattern ($generated@@0 $generated@@381)
))))))
 :pattern ( ($generated@@342 $generated@@378))
)))
(assert (forall (($generated@@383 T@U) ) (! (let (($generated@@384 ($generated@@346 (type $generated@@383))))
(= (type ($generated@@382 $generated@@383)) ($generated@@94 $generated@@384 $generated@@4)))
 :pattern ( ($generated@@382 $generated@@383))
)))
(assert (forall (($generated@@385 T@U) ) (! (let (($generated@@386 ($generated@@346 (type $generated@@385))))
(let (($generated@@387 ($generated@@345 (type $generated@@385))))
 (=> (= (type $generated@@385) ($generated@@344 $generated@@387 $generated@@386)) (or (= $generated@@385 ($generated@@343 $generated@@387 $generated@@386)) (exists (($generated@@388 T@U) ) (!  (and (= (type $generated@@388) $generated@@386) ($generated@@0 ($generated@@99 ($generated@@382 $generated@@385) $generated@@388)))
 :no-pattern (type $generated@@388)
 :no-pattern ($generated $generated@@388)
 :no-pattern ($generated@@0 $generated@@388)
))))))
 :pattern ( ($generated@@382 $generated@@385))
)))
(assert (forall (($generated@@389 T@U) ($generated@@390 T@U) ) (!  (=> (and (= (type $generated@@389) ($generated@@94 $generated@@162 $generated@@2)) (= (type $generated@@390) $generated@@70)) (= ($generated@@83 $generated@@389 ($generated@@173 $generated@@390)) (forall (($generated@@391 T@U) ) (!  (=> (and (= (type $generated@@391) $generated@@162) (< 0 ($generated ($generated@@99 $generated@@389 $generated@@391)))) ($generated@@247 $generated@@391 $generated@@390))
 :pattern ( ($generated@@99 $generated@@389 $generated@@391))
))))
 :pattern ( ($generated@@83 $generated@@389 ($generated@@173 $generated@@390)))
)))
(assert (forall (($generated@@392 T@U) ($generated@@393 T@U) ($generated@@394 T@U) ) (!  (=> (and (and (= (type $generated@@392) ($generated@@94 $generated@@162 $generated@@4)) (= (type $generated@@393) $generated@@70)) (= (type $generated@@394) ($generated@@94 $generated@@95 $generated@@96))) (= ($generated@@92 $generated@@392 ($generated@@264 $generated@@393) $generated@@394) (forall (($generated@@395 T@U) ) (!  (=> (and (= (type $generated@@395) $generated@@162) ($generated@@0 ($generated@@99 $generated@@392 $generated@@395))) ($generated@@287 $generated@@395 $generated@@393 $generated@@394))
 :pattern ( ($generated@@99 $generated@@392 $generated@@395))
))))
 :pattern ( ($generated@@92 $generated@@392 ($generated@@264 $generated@@393) $generated@@394))
)))
(assert (forall (($generated@@396 T@U) ($generated@@397 T@U) ($generated@@398 T@U) ) (!  (=> (and (and (= (type $generated@@396) ($generated@@94 $generated@@162 $generated@@4)) (= (type $generated@@397) $generated@@70)) (= (type $generated@@398) ($generated@@94 $generated@@95 $generated@@96))) (= ($generated@@92 $generated@@396 ($generated@@269 $generated@@397) $generated@@398) (forall (($generated@@399 T@U) ) (!  (=> (and (= (type $generated@@399) $generated@@162) ($generated@@0 ($generated@@99 $generated@@396 $generated@@399))) ($generated@@287 $generated@@399 $generated@@397 $generated@@398))
 :pattern ( ($generated@@99 $generated@@396 $generated@@399))
))))
 :pattern ( ($generated@@92 $generated@@396 ($generated@@269 $generated@@397) $generated@@398))
)))
(assert (forall (($generated@@400 T@U) ) (! (let (($generated@@401 (type $generated@@400)))
(= ($generated ($generated@@99 ($generated@@319 $generated@@401) $generated@@400)) 0))
 :pattern ( (let (($generated@@401 (type $generated@@400)))
($generated@@99 ($generated@@319 $generated@@401) $generated@@400)))
)))
(assert  (and (forall (($generated@@404 T@U) ) (! (= (type ($generated@@402 $generated@@404)) ($generated@@94 $generated@@162 $generated@@4))
 :pattern ( ($generated@@402 $generated@@404))
)) (forall (($generated@@405 T@U) ) (! (let (($generated@@406 ($generated@@328 (type $generated@@405))))
(let (($generated@@407 ($generated@@327 (type $generated@@405))))
(= (type ($generated@@403 $generated@@405)) ($generated@@94 $generated@@407 $generated@@406))))
 :pattern ( ($generated@@403 $generated@@405))
))))
(assert (forall (($generated@@408 T@U) ($generated@@409 T@U) ) (!  (=> (and (= (type $generated@@408) ($generated@@326 $generated@@162 $generated@@162)) (= (type $generated@@409) $generated@@162)) (= ($generated@@0 ($generated@@99 ($generated@@402 $generated@@408) $generated@@409))  (and ($generated@@0 ($generated@@99 ($generated@@324 $generated@@408) ($generated@@160 ($generated@@363 $generated@@81 $generated@@409)))) (= ($generated@@99 ($generated@@403 $generated@@408) ($generated@@160 ($generated@@363 $generated@@81 $generated@@409))) ($generated@@161 ($generated@@363 $generated@@81 $generated@@409))))))
 :pattern ( ($generated@@99 ($generated@@402 $generated@@408) $generated@@409))
)))
(assert  (and (forall (($generated@@412 T@U) ) (! (= (type ($generated@@410 $generated@@412)) ($generated@@94 $generated@@162 $generated@@4))
 :pattern ( ($generated@@410 $generated@@412))
)) (forall (($generated@@413 T@U) ) (! (let (($generated@@414 ($generated@@346 (type $generated@@413))))
(let (($generated@@415 ($generated@@345 (type $generated@@413))))
(= (type ($generated@@411 $generated@@413)) ($generated@@94 $generated@@415 $generated@@414))))
 :pattern ( ($generated@@411 $generated@@413))
))))
(assert (forall (($generated@@416 T@U) ($generated@@417 T@U) ) (!  (=> (and (= (type $generated@@416) ($generated@@344 $generated@@162 $generated@@162)) (= (type $generated@@417) $generated@@162)) (= ($generated@@0 ($generated@@99 ($generated@@410 $generated@@416) $generated@@417))  (and ($generated@@0 ($generated@@99 ($generated@@342 $generated@@416) ($generated@@160 ($generated@@363 $generated@@81 $generated@@417)))) (= ($generated@@99 ($generated@@411 $generated@@416) ($generated@@160 ($generated@@363 $generated@@81 $generated@@417))) ($generated@@161 ($generated@@363 $generated@@81 $generated@@417))))))
 :pattern ( ($generated@@99 ($generated@@410 $generated@@416) $generated@@417))
)))
(assert (forall (($generated@@418 T@U) ($generated@@419 T@U) ) (! (let (($generated@@420 (type $generated@@419)))
(let (($generated@@421 ($generated@@327 (type $generated@@418))))
 (=> (= (type $generated@@418) ($generated@@326 $generated@@421 $generated@@420)) (= ($generated@@0 ($generated@@99 ($generated@@371 $generated@@418) $generated@@419)) (exists (($generated@@422 T@U) ) (!  (and (= (type $generated@@422) $generated@@421) (and ($generated@@0 ($generated@@99 ($generated@@324 $generated@@418) $generated@@422)) (= $generated@@419 ($generated@@99 ($generated@@403 $generated@@418) $generated@@422))))
 :pattern ( ($generated@@99 ($generated@@324 $generated@@418) $generated@@422))
 :pattern ( ($generated@@99 ($generated@@403 $generated@@418) $generated@@422))
))))))
 :pattern ( ($generated@@99 ($generated@@371 $generated@@418) $generated@@419))
)))
(assert (forall (($generated@@423 T@U) ($generated@@424 T@U) ) (! (let (($generated@@425 (type $generated@@424)))
(let (($generated@@426 ($generated@@345 (type $generated@@423))))
 (=> (= (type $generated@@423) ($generated@@344 $generated@@426 $generated@@425)) (= ($generated@@0 ($generated@@99 ($generated@@382 $generated@@423) $generated@@424)) (exists (($generated@@427 T@U) ) (!  (and (= (type $generated@@427) $generated@@426) (and ($generated@@0 ($generated@@99 ($generated@@342 $generated@@423) $generated@@427)) (= $generated@@424 ($generated@@99 ($generated@@411 $generated@@423) $generated@@427))))
 :pattern ( ($generated@@99 ($generated@@342 $generated@@423) $generated@@427))
 :pattern ( ($generated@@99 ($generated@@411 $generated@@423) $generated@@427))
))))))
 :pattern ( ($generated@@99 ($generated@@382 $generated@@423) $generated@@424))
)))
(assert (forall (($generated@@429 T@U) ($generated@@430 T@U) ) (! (= (type ($generated@@428 $generated@@429 $generated@@430)) $generated@@70)
 :pattern ( ($generated@@428 $generated@@429 $generated@@430))
)))
(assert (forall (($generated@@431 T@U) ($generated@@432 T@U) ($generated@@433 T@U) ($generated@@434 T@U) ) (!  (=> (and (and (and (= (type $generated@@431) ($generated@@326 $generated@@162 $generated@@162)) (= (type $generated@@432) $generated@@70)) (= (type $generated@@433) $generated@@70)) (= (type $generated@@434) ($generated@@94 $generated@@95 $generated@@96))) (= ($generated@@92 $generated@@431 ($generated@@428 $generated@@432 $generated@@433) $generated@@434) (forall (($generated@@435 T@U) ) (!  (=> (and (= (type $generated@@435) $generated@@162) ($generated@@0 ($generated@@99 ($generated@@324 $generated@@431) $generated@@435))) (and ($generated@@287 ($generated@@99 ($generated@@403 $generated@@431) $generated@@435) $generated@@433 $generated@@434) ($generated@@287 $generated@@435 $generated@@432 $generated@@434)))
 :pattern ( ($generated@@99 ($generated@@403 $generated@@431) $generated@@435))
 :pattern ( ($generated@@99 ($generated@@324 $generated@@431) $generated@@435))
))))
 :pattern ( ($generated@@92 $generated@@431 ($generated@@428 $generated@@432 $generated@@433) $generated@@434))
)))
(assert (forall (($generated@@437 T@U) ($generated@@438 T@U) ) (! (= (type ($generated@@436 $generated@@437 $generated@@438)) $generated@@70)
 :pattern ( ($generated@@436 $generated@@437 $generated@@438))
)))
(assert (forall (($generated@@439 T@U) ($generated@@440 T@U) ($generated@@441 T@U) ($generated@@442 T@U) ) (!  (=> (and (and (and (= (type $generated@@439) ($generated@@344 $generated@@162 $generated@@162)) (= (type $generated@@440) $generated@@70)) (= (type $generated@@441) $generated@@70)) (= (type $generated@@442) ($generated@@94 $generated@@95 $generated@@96))) (= ($generated@@92 $generated@@439 ($generated@@436 $generated@@440 $generated@@441) $generated@@442) (forall (($generated@@443 T@U) ) (!  (=> (and (= (type $generated@@443) $generated@@162) ($generated@@0 ($generated@@99 ($generated@@342 $generated@@439) $generated@@443))) (and ($generated@@287 ($generated@@99 ($generated@@411 $generated@@439) $generated@@443) $generated@@441 $generated@@442) ($generated@@287 $generated@@443 $generated@@440 $generated@@442)))
 :pattern ( ($generated@@99 ($generated@@411 $generated@@439) $generated@@443))
 :pattern ( ($generated@@99 ($generated@@342 $generated@@439) $generated@@443))
))))
 :pattern ( ($generated@@92 $generated@@439 ($generated@@436 $generated@@440 $generated@@441) $generated@@442))
)))
(assert (forall (($generated@@445 T@T) ) (! (= (type ($generated@@444 $generated@@445)) ($generated@@94 $generated@@445 $generated@@4))
 :pattern ( ($generated@@444 $generated@@445))
)))
(assert (forall (($generated@@446 T@U) ) (! (let (($generated@@447 ($generated@@346 (type $generated@@446))))
(let (($generated@@448 ($generated@@345 (type $generated@@446))))
 (=> (= (type $generated@@446) ($generated@@344 $generated@@448 $generated@@447)) (= (= $generated@@446 ($generated@@343 $generated@@448 $generated@@447)) (= ($generated@@342 $generated@@446) ($generated@@444 $generated@@448))))))
 :pattern ( ($generated@@342 $generated@@446))
)))
(assert (forall (($generated@@449 T@U) ) (! (let (($generated@@450 ($generated@@346 (type $generated@@449))))
(let (($generated@@451 ($generated@@345 (type $generated@@449))))
 (=> (= (type $generated@@449) ($generated@@344 $generated@@451 $generated@@450)) (= (= $generated@@449 ($generated@@343 $generated@@451 $generated@@450)) (= ($generated@@382 $generated@@449) ($generated@@444 $generated@@450))))))
 :pattern ( ($generated@@382 $generated@@449))
)))
(assert (forall (($generated@@452 T@U) ) (! (let (($generated@@453 ($generated@@346 (type $generated@@452))))
(let (($generated@@454 ($generated@@345 (type $generated@@452))))
 (=> (= (type $generated@@452) ($generated@@344 $generated@@454 $generated@@453)) (= (= $generated@@452 ($generated@@343 $generated@@454 $generated@@453)) (= ($generated@@410 $generated@@452) ($generated@@444 $generated@@162))))))
 :pattern ( ($generated@@410 $generated@@452))
)))
(assert (forall (($generated@@455 T@U) ) (! (let (($generated@@456 ($generated@@328 (type $generated@@455))))
(let (($generated@@457 ($generated@@327 (type $generated@@455))))
 (=> (= (type $generated@@455) ($generated@@326 $generated@@457 $generated@@456)) (or (= $generated@@455 ($generated@@325 $generated@@457 $generated@@456)) (exists (($generated@@458 T@U) ($generated@@459 T@U) ) (!  (and (and (= (type $generated@@458) $generated@@162) (= (type $generated@@459) $generated@@162)) ($generated@@0 ($generated@@99 ($generated@@402 $generated@@455) ($generated@@313 ($generated@@246 $generated@@458 $generated@@459)))))
 :no-pattern (type $generated@@458)
 :no-pattern (type $generated@@459)
 :no-pattern ($generated $generated@@458)
 :no-pattern ($generated@@0 $generated@@458)
 :no-pattern ($generated $generated@@459)
 :no-pattern ($generated@@0 $generated@@459)
))))))
 :pattern ( ($generated@@402 $generated@@455))
)))
(assert (forall (($generated@@460 T@U) ) (! (let (($generated@@461 ($generated@@346 (type $generated@@460))))
(let (($generated@@462 ($generated@@345 (type $generated@@460))))
 (=> (= (type $generated@@460) ($generated@@344 $generated@@462 $generated@@461)) (or (= $generated@@460 ($generated@@343 $generated@@462 $generated@@461)) (exists (($generated@@463 T@U) ($generated@@464 T@U) ) (!  (and (and (= (type $generated@@463) $generated@@162) (= (type $generated@@464) $generated@@162)) ($generated@@0 ($generated@@99 ($generated@@410 $generated@@460) ($generated@@313 ($generated@@246 $generated@@463 $generated@@464)))))
 :no-pattern (type $generated@@463)
 :no-pattern (type $generated@@464)
 :no-pattern ($generated $generated@@463)
 :no-pattern ($generated@@0 $generated@@463)
 :no-pattern ($generated $generated@@464)
 :no-pattern ($generated@@0 $generated@@464)
))))))
 :pattern ( ($generated@@410 $generated@@460))
)))
(assert (forall (($generated@@465 T@U) ) (!  (=> (and (= (type $generated@@465) $generated@@162) ($generated@@247 $generated@@465 $generated@@46)) (and (= ($generated@@313 ($generated@@363 $generated@@2 $generated@@465)) $generated@@465) ($generated@@83 ($generated@@363 $generated@@2 $generated@@465) $generated@@46)))
 :pattern ( ($generated@@247 $generated@@465 $generated@@46))
)))
(assert (forall (($generated@@466 T@U) ) (!  (=> (and (= (type $generated@@466) $generated@@162) ($generated@@247 $generated@@466 $generated@@47)) (and (= ($generated@@313 ($generated@@363 $generated@@3 $generated@@466)) $generated@@466) ($generated@@83 ($generated@@363 $generated@@3 $generated@@466) $generated@@47)))
 :pattern ( ($generated@@247 $generated@@466 $generated@@47))
)))
(assert (forall (($generated@@467 T@U) ) (!  (=> (and (= (type $generated@@467) $generated@@162) ($generated@@247 $generated@@467 $generated@@44)) (and (= ($generated@@313 ($generated@@363 $generated@@4 $generated@@467)) $generated@@467) ($generated@@83 ($generated@@363 $generated@@4 $generated@@467) $generated@@44)))
 :pattern ( ($generated@@247 $generated@@467 $generated@@44))
)))
(assert (= ($generated@@1 $generated@@468) 20))
(assert (forall (($generated@@469 T@U) ) (!  (=> (and (= (type $generated@@469) $generated@@162) ($generated@@247 $generated@@469 $generated@@45)) (and (= ($generated@@313 ($generated@@363 $generated@@468 $generated@@469)) $generated@@469) ($generated@@83 ($generated@@363 $generated@@468 $generated@@469) $generated@@45)))
 :pattern ( ($generated@@247 $generated@@469 $generated@@45))
)))
(assert (forall (($generated@@470 T@U) ($generated@@471 T@U) ) (!  (=> (= (type $generated@@471) $generated@@70) (= ($generated@@247 ($generated@@313 $generated@@470) $generated@@471) ($generated@@83 $generated@@470 $generated@@471)))
 :pattern ( ($generated@@247 ($generated@@313 $generated@@470) $generated@@471))
)))
(assert (forall (($generated@@472 T@U) ) (! (let (($generated@@473 ($generated@@97 (type $generated@@472))))
 (=> (= (type $generated@@472) ($generated@@94 $generated@@473 $generated@@2)) (<= 0 ($generated@@318 $generated@@472))))
 :pattern ( ($generated@@318 $generated@@472))
)))
(assert (forall (($generated@@474 T@U) ) (! (let (($generated@@475 ($generated@@304 (type $generated@@474))))
 (=> (= (type $generated@@474) ($generated@@303 $generated@@475)) (<= 0 ($generated@@302 $generated@@474))))
 :pattern ( ($generated@@302 $generated@@474))
)))
(assert (forall (($generated@@477 T@U) ) (! (= (type ($generated@@476 $generated@@477)) $generated@@70)
 :pattern ( ($generated@@476 $generated@@477))
)))
(assert (forall (($generated@@478 T@U) ($generated@@479 T@U) ) (!  (=> (and (= (type $generated@@478) $generated@@70) (= (type $generated@@479) $generated@@70)) (= ($generated@@476 ($generated@@428 $generated@@478 $generated@@479)) $generated@@478))
 :pattern ( ($generated@@428 $generated@@478 $generated@@479))
)))
(assert (forall (($generated@@481 T@U) ) (! (= (type ($generated@@480 $generated@@481)) $generated@@70)
 :pattern ( ($generated@@480 $generated@@481))
)))
(assert (forall (($generated@@482 T@U) ($generated@@483 T@U) ) (!  (=> (and (= (type $generated@@482) $generated@@70) (= (type $generated@@483) $generated@@70)) (= ($generated@@480 ($generated@@428 $generated@@482 $generated@@483)) $generated@@483))
 :pattern ( ($generated@@428 $generated@@482 $generated@@483))
)))
(assert (forall (($generated@@484 T@U) ($generated@@485 T@U) ) (!  (=> (and (= (type $generated@@484) $generated@@70) (= (type $generated@@485) $generated@@70)) (= ($generated@@90 ($generated@@428 $generated@@484 $generated@@485)) $generated@@58))
 :pattern ( ($generated@@428 $generated@@484 $generated@@485))
)))
(assert (forall (($generated@@487 T@U) ) (! (= (type ($generated@@486 $generated@@487)) $generated@@70)
 :pattern ( ($generated@@486 $generated@@487))
)))
(assert (forall (($generated@@488 T@U) ($generated@@489 T@U) ) (!  (=> (and (= (type $generated@@488) $generated@@70) (= (type $generated@@489) $generated@@70)) (= ($generated@@486 ($generated@@436 $generated@@488 $generated@@489)) $generated@@488))
 :pattern ( ($generated@@436 $generated@@488 $generated@@489))
)))
(assert (forall (($generated@@491 T@U) ) (! (= (type ($generated@@490 $generated@@491)) $generated@@70)
 :pattern ( ($generated@@490 $generated@@491))
)))
(assert (forall (($generated@@492 T@U) ($generated@@493 T@U) ) (!  (=> (and (= (type $generated@@492) $generated@@70) (= (type $generated@@493) $generated@@70)) (= ($generated@@490 ($generated@@436 $generated@@492 $generated@@493)) $generated@@493))
 :pattern ( ($generated@@436 $generated@@492 $generated@@493))
)))
(assert (forall (($generated@@494 T@U) ($generated@@495 T@U) ) (!  (=> (and (= (type $generated@@494) $generated@@70) (= (type $generated@@495) $generated@@70)) (= ($generated@@90 ($generated@@436 $generated@@494 $generated@@495)) $generated@@59))
 :pattern ( ($generated@@436 $generated@@494 $generated@@495))
)))
(assert (forall (($generated@@496 T@U) ($generated@@497 T@U) ) (!  (=> (and (= (type $generated@@496) $generated@@162) (= (type $generated@@497) $generated@@162)) (= ($generated@@167 ($generated@@246 $generated@@496 $generated@@497)) $generated@@61))
 :pattern ( ($generated@@246 $generated@@496 $generated@@497))
)))
(assert (forall (($generated@@499 T@U) ) (! (= (type ($generated@@498 $generated@@499)) $generated@@70)
 :pattern ( ($generated@@498 $generated@@499))
)))
(assert (forall (($generated@@500 T@U) ($generated@@501 T@U) ) (!  (=> (and (= (type $generated@@500) $generated@@70) (= (type $generated@@501) $generated@@70)) (= ($generated@@498 ($generated@@153 $generated@@500 $generated@@501)) $generated@@500))
 :pattern ( ($generated@@153 $generated@@500 $generated@@501))
)))
(assert (forall (($generated@@503 T@U) ) (! (= (type ($generated@@502 $generated@@503)) $generated@@70)
 :pattern ( ($generated@@502 $generated@@503))
)))
(assert (forall (($generated@@504 T@U) ($generated@@505 T@U) ) (!  (=> (and (= (type $generated@@504) $generated@@70) (= (type $generated@@505) $generated@@70)) (= ($generated@@502 ($generated@@153 $generated@@504 $generated@@505)) $generated@@505))
 :pattern ( ($generated@@153 $generated@@504 $generated@@505))
)))
(assert (forall (($generated@@506 T@U) ($generated@@507 T@U) ) (!  (=> (and (= (type $generated@@506) $generated@@162) (= (type $generated@@507) $generated@@162)) (= ($generated@@160 ($generated@@246 $generated@@506 $generated@@507)) $generated@@506))
 :pattern ( ($generated@@246 $generated@@506 $generated@@507))
)))
(assert (forall (($generated@@508 T@U) ($generated@@509 T@U) ) (!  (=> (and (= (type $generated@@508) $generated@@162) (= (type $generated@@509) $generated@@162)) (= ($generated@@161 ($generated@@246 $generated@@508 $generated@@509)) $generated@@509))
 :pattern ( ($generated@@246 $generated@@508 $generated@@509))
)))
(assert  (and (forall (($generated@@512 T@U) ) (! (= (type ($generated@@510 $generated@@512)) $generated@@70)
 :pattern ( ($generated@@510 $generated@@512))
)) (forall (($generated@@513 T@U) ($generated@@514 Int) ) (! (let (($generated@@515 ($generated@@304 (type $generated@@513))))
(= (type ($generated@@511 $generated@@513 $generated@@514)) $generated@@515))
 :pattern ( ($generated@@511 $generated@@513 $generated@@514))
))))
(assert (forall (($generated@@516 T@U) ($generated@@517 T@U) ($generated@@518 T@U) ) (!  (=> (and (and (= (type $generated@@516) ($generated@@303 $generated@@162)) (= (type $generated@@517) $generated@@70)) (= (type $generated@@518) ($generated@@94 $generated@@95 $generated@@96))) (= ($generated@@92 $generated@@516 ($generated@@510 $generated@@517) $generated@@518) (forall (($generated@@519 Int) ) (!  (=> (and (<= 0 $generated@@519) (< $generated@@519 ($generated@@302 $generated@@516))) ($generated@@287 ($generated@@511 $generated@@516 $generated@@519) $generated@@517 $generated@@518))
 :pattern ( ($generated@@511 $generated@@516 $generated@@519))
))))
 :pattern ( ($generated@@92 $generated@@516 ($generated@@510 $generated@@517) $generated@@518))
)))
(assert (forall (($generated@@521 Int) ) (! (= ($generated@@520 ($generated@@93 $generated@@521)) $generated@@521)
 :pattern ( ($generated@@93 $generated@@521))
)))
(assert (forall (($generated@@523 T@U) ) (! (= (type ($generated@@522 $generated@@523)) $generated@@70)
 :pattern ( ($generated@@522 $generated@@523))
)))
(assert (forall (($generated@@524 T@U) ) (!  (=> (= (type $generated@@524) $generated@@70) (= ($generated@@522 ($generated@@264 $generated@@524)) $generated@@524))
 :pattern ( ($generated@@264 $generated@@524))
)))
(assert (forall (($generated@@525 T@U) ) (!  (=> (= (type $generated@@525) $generated@@70) (= ($generated@@90 ($generated@@264 $generated@@525)) $generated@@54))
 :pattern ( ($generated@@264 $generated@@525))
)))
(assert (forall (($generated@@527 T@U) ) (! (= (type ($generated@@526 $generated@@527)) $generated@@70)
 :pattern ( ($generated@@526 $generated@@527))
)))
(assert (forall (($generated@@528 T@U) ) (!  (=> (= (type $generated@@528) $generated@@70) (= ($generated@@526 ($generated@@269 $generated@@528)) $generated@@528))
 :pattern ( ($generated@@269 $generated@@528))
)))
(assert (forall (($generated@@529 T@U) ) (!  (=> (= (type $generated@@529) $generated@@70) (= ($generated@@90 ($generated@@269 $generated@@529)) $generated@@55))
 :pattern ( ($generated@@269 $generated@@529))
)))
(assert (forall (($generated@@531 T@U) ) (! (= (type ($generated@@530 $generated@@531)) $generated@@70)
 :pattern ( ($generated@@530 $generated@@531))
)))
(assert (forall (($generated@@532 T@U) ) (!  (=> (= (type $generated@@532) $generated@@70) (= ($generated@@530 ($generated@@173 $generated@@532)) $generated@@532))
 :pattern ( ($generated@@173 $generated@@532))
)))
(assert (forall (($generated@@533 T@U) ) (!  (=> (= (type $generated@@533) $generated@@70) (= ($generated@@90 ($generated@@173 $generated@@533)) $generated@@56))
 :pattern ( ($generated@@173 $generated@@533))
)))
(assert (forall (($generated@@535 T@U) ) (! (= (type ($generated@@534 $generated@@535)) $generated@@70)
 :pattern ( ($generated@@534 $generated@@535))
)))
(assert (forall (($generated@@536 T@U) ) (!  (=> (= (type $generated@@536) $generated@@70) (= ($generated@@534 ($generated@@510 $generated@@536)) $generated@@536))
 :pattern ( ($generated@@510 $generated@@536))
)))
(assert (forall (($generated@@537 T@U) ) (!  (=> (= (type $generated@@537) $generated@@70) (= ($generated@@90 ($generated@@510 $generated@@537)) $generated@@57))
 :pattern ( ($generated@@510 $generated@@537))
)))
(assert (forall (($generated@@538 T@U) ) (! (let (($generated@@539 (type $generated@@538)))
(= ($generated@@363 $generated@@539 ($generated@@313 $generated@@538)) $generated@@538))
 :pattern ( ($generated@@313 $generated@@538))
)))
(assert (forall (($generated@@540 T@U) ($generated@@541 T@U) ($generated@@542 T@U) ) (!  (=> (and (and (= (type $generated@@540) ($generated@@326 $generated@@162 $generated@@162)) (= (type $generated@@541) $generated@@70)) (= (type $generated@@542) $generated@@70)) (= ($generated@@83 $generated@@540 ($generated@@428 $generated@@541 $generated@@542)) (forall (($generated@@543 T@U) ) (!  (=> (and (= (type $generated@@543) $generated@@162) ($generated@@0 ($generated@@99 ($generated@@324 $generated@@540) $generated@@543))) (and ($generated@@247 ($generated@@99 ($generated@@403 $generated@@540) $generated@@543) $generated@@542) ($generated@@247 $generated@@543 $generated@@541)))
 :pattern ( ($generated@@99 ($generated@@403 $generated@@540) $generated@@543))
 :pattern ( ($generated@@99 ($generated@@324 $generated@@540) $generated@@543))
))))
 :pattern ( ($generated@@83 $generated@@540 ($generated@@428 $generated@@541 $generated@@542)))
)))
(assert (forall (($generated@@544 T@U) ($generated@@545 T@U) ($generated@@546 T@U) ) (!  (=> (and (and (= (type $generated@@544) ($generated@@344 $generated@@162 $generated@@162)) (= (type $generated@@545) $generated@@70)) (= (type $generated@@546) $generated@@70)) (= ($generated@@83 $generated@@544 ($generated@@436 $generated@@545 $generated@@546)) (forall (($generated@@547 T@U) ) (!  (=> (and (= (type $generated@@547) $generated@@162) ($generated@@0 ($generated@@99 ($generated@@342 $generated@@544) $generated@@547))) (and ($generated@@247 ($generated@@99 ($generated@@411 $generated@@544) $generated@@547) $generated@@546) ($generated@@247 $generated@@547 $generated@@545)))
 :pattern ( ($generated@@99 ($generated@@411 $generated@@544) $generated@@547))
 :pattern ( ($generated@@99 ($generated@@342 $generated@@544) $generated@@547))
))))
 :pattern ( ($generated@@83 $generated@@544 ($generated@@436 $generated@@545 $generated@@546)))
)))
(assert (forall (($generated@@550 T@U) ($generated@@551 T@U) ) (!  (=> (and (= (type $generated@@550) $generated@@162) (= (type $generated@@551) $generated@@162)) (< ($generated@@548 $generated@@550) ($generated@@549 ($generated@@246 $generated@@550 $generated@@551))))
 :pattern ( ($generated@@246 $generated@@550 $generated@@551))
)))
(assert (forall (($generated@@552 T@U) ($generated@@553 T@U) ) (!  (=> (and (= (type $generated@@552) $generated@@162) (= (type $generated@@553) $generated@@162)) (< ($generated@@548 $generated@@553) ($generated@@549 ($generated@@246 $generated@@552 $generated@@553))))
 :pattern ( ($generated@@246 $generated@@552 $generated@@553))
)))
(assert (forall (($generated@@554 T@U) ($generated@@555 T@U) ($generated@@556 T@U) ) (!  (=> (and (and (and (= (type $generated@@554) $generated@@162) (= (type $generated@@555) $generated@@70)) (= (type $generated@@556) $generated@@70)) ($generated@@247 $generated@@554 ($generated@@428 $generated@@555 $generated@@556))) (and (= ($generated@@313 ($generated@@363 ($generated@@326 $generated@@162 $generated@@162) $generated@@554)) $generated@@554) ($generated@@83 ($generated@@363 ($generated@@326 $generated@@162 $generated@@162) $generated@@554) ($generated@@428 $generated@@555 $generated@@556))))
 :pattern ( ($generated@@247 $generated@@554 ($generated@@428 $generated@@555 $generated@@556)))
)))
(assert (forall (($generated@@557 T@U) ($generated@@558 T@U) ($generated@@559 T@U) ) (!  (=> (and (and (and (= (type $generated@@557) $generated@@162) (= (type $generated@@558) $generated@@70)) (= (type $generated@@559) $generated@@70)) ($generated@@247 $generated@@557 ($generated@@436 $generated@@558 $generated@@559))) (and (= ($generated@@313 ($generated@@363 ($generated@@344 $generated@@162 $generated@@162) $generated@@557)) $generated@@557) ($generated@@83 ($generated@@363 ($generated@@344 $generated@@162 $generated@@162) $generated@@557) ($generated@@436 $generated@@558 $generated@@559))))
 :pattern ( ($generated@@247 $generated@@557 ($generated@@436 $generated@@558 $generated@@559)))
)))
(assert (forall (($generated@@560 T@U) ($generated@@561 T@U) ($generated@@562 T@U) ) (!  (=> (and (and (and (= (type $generated@@560) $generated@@70) (= (type $generated@@561) $generated@@70)) (= (type $generated@@562) $generated@@162)) ($generated@@247 $generated@@562 ($generated@@153 $generated@@560 $generated@@561))) (and (= ($generated@@313 ($generated@@363 $generated@@81 $generated@@562)) $generated@@562) ($generated@@83 ($generated@@363 $generated@@81 $generated@@562) ($generated@@153 $generated@@560 $generated@@561))))
 :pattern ( ($generated@@247 $generated@@562 ($generated@@153 $generated@@560 $generated@@561)))
)))
(assert (forall (($generated@@563 T@U) ) (! (let (($generated@@564 (type $generated@@563)))
 (not ($generated@@0 ($generated@@99 ($generated@@444 $generated@@564) $generated@@563))))
 :pattern ( (let (($generated@@564 (type $generated@@563)))
($generated@@99 ($generated@@444 $generated@@564) $generated@@563)))
)))
(assert (forall (($generated@@566 T@U) ) (! (= (type ($generated@@565 $generated@@566)) $generated@@75)
 :pattern ( ($generated@@565 $generated@@566))
)))
(assert (forall (($generated@@567 T@U) ($generated@@568 T@U) ) (!  (=> (and (= (type $generated@@567) $generated@@70) (= (type $generated@@568) $generated@@70)) (and (= ($generated@@90 ($generated@@153 $generated@@567 $generated@@568)) $generated@@62) (= ($generated@@565 ($generated@@153 $generated@@567 $generated@@568)) $generated@@68)))
 :pattern ( ($generated@@153 $generated@@567 $generated@@568))
)))
(assert  (=> (<= 1 $generated@@78) (forall (($generated@@569 T@U) ) (!  (=> (and (= (type $generated@@569) $generated@@81) (or ($generated@@82 $generated@@569) (and (not (= 1 $generated@@78)) ($generated@@83 $generated@@569 $generated@@84)))) (= ($generated@@79 $generated@@569) (ite ($generated@@85 $generated@@569) 0 (ite ($generated@@86 $generated@@569) 2 80))))
 :pattern ( ($generated@@79 $generated@@569))
))))
(assert (forall (($generated@@570 T@U) ) (!  (=> (= (type $generated@@570) $generated@@81) (= ($generated@@548 ($generated@@313 $generated@@570)) ($generated@@549 $generated@@570)))
 :pattern ( ($generated@@548 ($generated@@313 $generated@@570)))
)))
(assert (forall (($generated@@571 T@U) ) (!  (=> (and (= (type $generated@@571) $generated@@162) ($generated@@247 $generated@@571 ($generated@@93 0))) (and (= ($generated@@313 ($generated@@363 $generated@@2 $generated@@571)) $generated@@571) ($generated@@83 ($generated@@363 ($generated@@94 $generated@@162 $generated@@4) $generated@@571) ($generated@@93 0))))
 :pattern ( ($generated@@247 $generated@@571 ($generated@@93 0)))
)))
(assert (forall (($generated@@572 T@U) ($generated@@573 T@U) ) (!  (=> (and (and (= (type $generated@@572) $generated@@162) (= (type $generated@@573) $generated@@70)) ($generated@@247 $generated@@572 ($generated@@264 $generated@@573))) (and (= ($generated@@313 ($generated@@363 ($generated@@94 $generated@@162 $generated@@4) $generated@@572)) $generated@@572) ($generated@@83 ($generated@@363 ($generated@@94 $generated@@162 $generated@@4) $generated@@572) ($generated@@264 $generated@@573))))
 :pattern ( ($generated@@247 $generated@@572 ($generated@@264 $generated@@573)))
)))
(assert (forall (($generated@@574 T@U) ($generated@@575 T@U) ) (!  (=> (and (and (= (type $generated@@574) $generated@@162) (= (type $generated@@575) $generated@@70)) ($generated@@247 $generated@@574 ($generated@@269 $generated@@575))) (and (= ($generated@@313 ($generated@@363 ($generated@@94 $generated@@162 $generated@@4) $generated@@574)) $generated@@574) ($generated@@83 ($generated@@363 ($generated@@94 $generated@@162 $generated@@4) $generated@@574) ($generated@@269 $generated@@575))))
 :pattern ( ($generated@@247 $generated@@574 ($generated@@269 $generated@@575)))
)))
(assert (forall (($generated@@576 T@U) ($generated@@577 T@U) ) (!  (=> (and (and (= (type $generated@@576) $generated@@162) (= (type $generated@@577) $generated@@70)) ($generated@@247 $generated@@576 ($generated@@173 $generated@@577))) (and (= ($generated@@313 ($generated@@363 ($generated@@94 $generated@@162 $generated@@2) $generated@@576)) $generated@@576) ($generated@@83 ($generated@@363 ($generated@@94 $generated@@162 $generated@@2) $generated@@576) ($generated@@173 $generated@@577))))
 :pattern ( ($generated@@247 $generated@@576 ($generated@@173 $generated@@577)))
)))
(assert (forall (($generated@@578 T@U) ($generated@@579 T@U) ) (!  (=> (and (and (= (type $generated@@578) $generated@@162) (= (type $generated@@579) $generated@@70)) ($generated@@247 $generated@@578 ($generated@@510 $generated@@579))) (and (= ($generated@@313 ($generated@@363 ($generated@@303 $generated@@162) $generated@@578)) $generated@@578) ($generated@@83 ($generated@@363 ($generated@@303 $generated@@162) $generated@@578) ($generated@@510 $generated@@579))))
 :pattern ( ($generated@@247 $generated@@578 ($generated@@510 $generated@@579)))
)))
(assert (= ($generated@@90 $generated@@84) $generated@@64))
(assert (= ($generated@@565 $generated@@84) $generated@@69))
(assert (forall (($generated@@580 T@U) ($generated@@581 T@U) ($generated@@582 T@U) ) (!  (=> (and (and (= (type $generated@@580) ($generated@@94 $generated@@162 $generated@@2)) (= (type $generated@@581) $generated@@70)) (= (type $generated@@582) ($generated@@94 $generated@@95 $generated@@96))) (= ($generated@@92 $generated@@580 ($generated@@173 $generated@@581) $generated@@582) (forall (($generated@@583 T@U) ) (!  (=> (and (= (type $generated@@583) $generated@@162) (< 0 ($generated ($generated@@99 $generated@@580 $generated@@583)))) ($generated@@287 $generated@@583 $generated@@581 $generated@@582))
 :pattern ( ($generated@@99 $generated@@580 $generated@@583))
))))
 :pattern ( ($generated@@92 $generated@@580 ($generated@@173 $generated@@581) $generated@@582))
)))
(assert (= $generated@@168 ($generated@@80 $generated@@168)))
(assert (= $generated@@170 ($generated@@80 $generated@@170)))
(assert (= $generated@@171 ($generated@@80 $generated@@171)))
(assert (= $generated@@172 ($generated@@80 $generated@@172)))
(assert (forall (($generated@@584 T@U) ($generated@@585 T@U) ($generated@@586 T@U) ) (!  (=> (and (and (and (= (type $generated@@584) $generated@@81) (= (type $generated@@585) $generated@@70)) (= (type $generated@@586) ($generated@@94 $generated@@95 $generated@@96))) (and ($generated@@254 $generated@@586) (and ($generated@@152 $generated@@584) (exists (($generated@@587 T@U) ) (!  (and (= (type $generated@@587) $generated@@70) ($generated@@92 $generated@@584 ($generated@@153 $generated@@585 $generated@@587) $generated@@586))
 :pattern ( ($generated@@92 $generated@@584 ($generated@@153 $generated@@585 $generated@@587) $generated@@586))
))))) ($generated@@287 ($generated@@160 $generated@@584) $generated@@585 $generated@@586))
 :pattern ( ($generated@@287 ($generated@@160 $generated@@584) $generated@@585 $generated@@586))
)))
(assert (forall (($generated@@588 T@U) ($generated@@589 T@U) ($generated@@590 T@U) ) (!  (=> (and (and (and (= (type $generated@@588) $generated@@81) (= (type $generated@@589) $generated@@70)) (= (type $generated@@590) ($generated@@94 $generated@@95 $generated@@96))) (and ($generated@@254 $generated@@590) (and ($generated@@152 $generated@@588) (exists (($generated@@591 T@U) ) (!  (and (= (type $generated@@591) $generated@@70) ($generated@@92 $generated@@588 ($generated@@153 $generated@@591 $generated@@589) $generated@@590))
 :pattern ( ($generated@@92 $generated@@588 ($generated@@153 $generated@@591 $generated@@589) $generated@@590))
))))) ($generated@@287 ($generated@@161 $generated@@588) $generated@@589 $generated@@590))
 :pattern ( ($generated@@287 ($generated@@161 $generated@@588) $generated@@589 $generated@@590))
)))
(assert (forall (($generated@@592 T@U) ($generated@@593 T@U) ) (!  (=> (and (= (type $generated@@592) $generated@@162) (= (type $generated@@593) $generated@@162)) (= ($generated@@246 ($generated@@80 $generated@@592) ($generated@@80 $generated@@593)) ($generated@@80 ($generated@@246 $generated@@592 $generated@@593))))
 :pattern ( ($generated@@246 ($generated@@80 $generated@@592) ($generated@@80 $generated@@593)))
)))
(assert (forall (($generated@@594 Int) ) (! (= ($generated@@313 ($generated@@8 ($generated@@274 $generated@@594))) ($generated@@80 ($generated@@313 ($generated@@8 $generated@@594))))
 :pattern ( ($generated@@313 ($generated@@8 ($generated@@274 $generated@@594))))
)))
(assert (forall (($generated@@595 T@U) ) (! (= ($generated@@313 ($generated@@80 $generated@@595)) ($generated@@80 ($generated@@313 $generated@@595)))
 :pattern ( ($generated@@313 ($generated@@80 $generated@@595)))
)))
(assert (forall (($generated@@596 T@U) ) (! (let (($generated@@597 ($generated@@304 (type $generated@@596))))
 (=> (and (= (type $generated@@596) ($generated@@303 $generated@@597)) (= ($generated@@302 $generated@@596) 0)) (= $generated@@596 ($generated@@301 $generated@@597))))
 :pattern ( ($generated@@302 $generated@@596))
)))
(assert (forall (($generated@@598 T@U) ($generated@@599 T@U) ($generated@@600 T@U) ) (! (let (($generated@@601 (type $generated@@599)))
 (=> (and (and (= (type $generated@@598) ($generated@@94 $generated@@601 $generated@@2)) (= (type $generated@@600) $generated@@2)) (<= 0 ($generated $generated@@600))) (= ($generated@@318 ($generated@@100 $generated@@598 $generated@@599 $generated@@600)) (+ (- ($generated@@318 $generated@@598) ($generated ($generated@@99 $generated@@598 $generated@@599))) ($generated $generated@@600)))))
 :pattern ( ($generated@@318 ($generated@@100 $generated@@598 $generated@@599 $generated@@600)))
)))
(assert (forall (($generated@@602 T@U) ) (!  (=> (and (= (type $generated@@602) $generated@@81) ($generated@@83 $generated@@602 $generated@@84)) (or (or (or ($generated@@85 $generated@@602) ($generated@@86 $generated@@602)) ($generated@@281 $generated@@602)) ($generated@@284 $generated@@602)))
 :pattern ( ($generated@@284 $generated@@602) ($generated@@83 $generated@@602 $generated@@84))
 :pattern ( ($generated@@281 $generated@@602) ($generated@@83 $generated@@602 $generated@@84))
 :pattern ( ($generated@@86 $generated@@602) ($generated@@83 $generated@@602 $generated@@84))
 :pattern ( ($generated@@85 $generated@@602) ($generated@@83 $generated@@602 $generated@@84))
)))
(assert (forall (($generated@@603 T@U) ($generated@@604 T@U) ) (!  (=> (and (= (type $generated@@603) ($generated@@94 $generated@@95 $generated@@96)) (= (type $generated@@604) $generated@@2)) ($generated@@92 $generated@@604 $generated@@46 $generated@@603))
 :pattern ( ($generated@@92 $generated@@604 $generated@@46 $generated@@603))
)))
(assert (forall (($generated@@605 T@U) ($generated@@606 T@U) ) (!  (=> (and (= (type $generated@@605) ($generated@@94 $generated@@95 $generated@@96)) (= (type $generated@@606) $generated@@3)) ($generated@@92 $generated@@606 $generated@@47 $generated@@605))
 :pattern ( ($generated@@92 $generated@@606 $generated@@47 $generated@@605))
)))
(assert (forall (($generated@@607 T@U) ($generated@@608 T@U) ) (!  (=> (and (= (type $generated@@607) ($generated@@94 $generated@@95 $generated@@96)) (= (type $generated@@608) $generated@@4)) ($generated@@92 $generated@@608 $generated@@44 $generated@@607))
 :pattern ( ($generated@@92 $generated@@608 $generated@@44 $generated@@607))
)))
(assert (forall (($generated@@609 T@U) ($generated@@610 T@U) ) (!  (=> (and (= (type $generated@@609) ($generated@@94 $generated@@95 $generated@@96)) (= (type $generated@@610) $generated@@468)) ($generated@@92 $generated@@610 $generated@@45 $generated@@609))
 :pattern ( ($generated@@92 $generated@@610 $generated@@45 $generated@@609))
)))
(assert (forall (($generated@@611 T@U) ($generated@@612 T@U) ) (!  (=> (and (= (type $generated@@611) ($generated@@94 $generated@@95 $generated@@96)) (= (type $generated@@612) $generated@@162)) ($generated@@92 $generated@@612 $generated@@48 $generated@@611))
 :pattern ( ($generated@@92 $generated@@612 $generated@@48 $generated@@611))
)))
(assert (forall (($generated@@613 T@U) ($generated@@614 T@U) ) (!  (=> (and (= (type $generated@@613) ($generated@@303 $generated@@162)) (= (type $generated@@614) $generated@@70)) (= ($generated@@83 $generated@@613 ($generated@@510 $generated@@614)) (forall (($generated@@615 Int) ) (!  (=> (and (<= 0 $generated@@615) (< $generated@@615 ($generated@@302 $generated@@613))) ($generated@@247 ($generated@@511 $generated@@613 $generated@@615) $generated@@614))
 :pattern ( ($generated@@511 $generated@@613 $generated@@615))
))))
 :pattern ( ($generated@@83 $generated@@613 ($generated@@510 $generated@@614)))
)))
(assert (forall (($generated@@617 T@U) ($generated@@618 Int) ) (!  (=> (= (type $generated@@617) ($generated@@303 $generated@@162)) (=> (and (<= 0 $generated@@618) (< $generated@@618 ($generated@@302 $generated@@617))) (< ($generated@@549 ($generated@@363 $generated@@81 ($generated@@511 $generated@@617 $generated@@618))) ($generated@@616 $generated@@617))))
 :pattern ( ($generated@@549 ($generated@@363 $generated@@81 ($generated@@511 $generated@@617 $generated@@618))))
)))
(assert (forall (($generated@@619 T@U) ($generated@@620 T@U) ($generated@@621 T@U) ) (!  (=> (and (and (and (= (type $generated@@619) ($generated@@326 $generated@@162 $generated@@162)) (= (type $generated@@620) $generated@@70)) (= (type $generated@@621) $generated@@70)) ($generated@@83 $generated@@619 ($generated@@428 $generated@@620 $generated@@621))) (and (and ($generated@@83 ($generated@@324 $generated@@619) ($generated@@264 $generated@@620)) ($generated@@83 ($generated@@371 $generated@@619) ($generated@@264 $generated@@621))) ($generated@@83 ($generated@@402 $generated@@619) ($generated@@264 ($generated@@153 $generated@@620 $generated@@621)))))
 :pattern ( ($generated@@83 $generated@@619 ($generated@@428 $generated@@620 $generated@@621)))
)))
(assert (forall (($generated@@622 T@U) ($generated@@623 T@U) ($generated@@624 T@U) ) (!  (=> (and (and (and (= (type $generated@@622) ($generated@@344 $generated@@162 $generated@@162)) (= (type $generated@@623) $generated@@70)) (= (type $generated@@624) $generated@@70)) ($generated@@83 $generated@@622 ($generated@@436 $generated@@623 $generated@@624))) (and (and ($generated@@83 ($generated@@342 $generated@@622) ($generated@@269 $generated@@623)) ($generated@@83 ($generated@@382 $generated@@622) ($generated@@269 $generated@@624))) ($generated@@83 ($generated@@410 $generated@@622) ($generated@@269 ($generated@@153 $generated@@623 $generated@@624)))))
 :pattern ( ($generated@@83 $generated@@622 ($generated@@436 $generated@@623 $generated@@624)))
)))
(assert (forall (($generated@@625 T@U) ) (!  (=> (= (type $generated@@625) $generated@@2) ($generated@@83 $generated@@625 $generated@@46))
 :pattern ( ($generated@@83 $generated@@625 $generated@@46))
)))
(assert (forall (($generated@@626 T@U) ) (!  (=> (= (type $generated@@626) $generated@@3) ($generated@@83 $generated@@626 $generated@@47))
 :pattern ( ($generated@@83 $generated@@626 $generated@@47))
)))
(assert (forall (($generated@@627 T@U) ) (!  (=> (= (type $generated@@627) $generated@@4) ($generated@@83 $generated@@627 $generated@@44))
 :pattern ( ($generated@@83 $generated@@627 $generated@@44))
)))
(assert (forall (($generated@@628 T@U) ) (!  (=> (= (type $generated@@628) $generated@@468) ($generated@@83 $generated@@628 $generated@@45))
 :pattern ( ($generated@@83 $generated@@628 $generated@@45))
)))
(assert (forall (($generated@@629 T@U) ) (!  (=> (= (type $generated@@629) $generated@@162) ($generated@@83 $generated@@629 $generated@@48))
 :pattern ( ($generated@@83 $generated@@629 $generated@@48))
)))
(push 1)
(declare-fun ControlFlow (Int Int) Int)
(declare-fun $generated@@630 () T@U)
(declare-fun $generated@@631 () T@U)
(declare-fun $generated@@632 () T@U)
(declare-fun $generated@@633 () T@U)
(declare-fun $generated@@634 () T@U)
(declare-fun $generated@@635 (T@U) Bool)
(assert  (and (and (and (and (= (type $generated@@630) $generated@@81) (= (type $generated@@631) ($generated@@180 $generated@@95 $generated@@4))) (= (type $generated@@632) $generated@@95)) (= (type $generated@@633) ($generated@@94 $generated@@95 $generated@@96))) (= (type $generated@@634) ($generated@@180 $generated@@95 $generated@@4))))
(set-option :timeout 0)
(set-option :rlimit 0)
(assert (not
 (=> (= (ControlFlow 0 0) 13) (let (($generated@@636 true))
(let (($generated@@637  (=> (and (= $generated@@630 $generated@@171) (= (ControlFlow 0 6) (- 0 5))) false)))
(let (($generated@@638  (=> (not (= $generated@@630 $generated@@172)) (and (=> (= (ControlFlow 0 8) 6) $generated@@637) (=> (= (ControlFlow 0 8) 7) $generated@@636)))))
(let (($generated@@639 true))
(let (($generated@@640  (=> (not (= $generated@@630 $generated@@170)) (and (=> (= (ControlFlow 0 9) 4) $generated@@639) (=> (= (ControlFlow 0 9) 8) $generated@@638)))))
(let (($generated@@641 true))
(let (($generated@@642  (=> (not (= $generated@@630 $generated@@168)) (and (=> (= (ControlFlow 0 10) 3) $generated@@641) (=> (= (ControlFlow 0 10) 9) $generated@@640)))))
(let (($generated@@643 true))
(let (($generated@@644  (=> (= $generated@@631 ($generated@@234 $generated@@632 $generated@@633 $generated@@60 false)) (and (=> (= (ControlFlow 0 11) 2) $generated@@643) (=> (= (ControlFlow 0 11) 10) $generated@@642)))))
(let (($generated@@645 true))
(let (($generated@@646  (=> (= $generated@@634 ($generated@@179 $generated@@632 $generated@@633 $generated@@60 false)) (and (=> (= (ControlFlow 0 12) 1) $generated@@645) (=> (= (ControlFlow 0 12) 11) $generated@@644)))))
(let (($generated@@647  (=> (and (and (and ($generated@@254 $generated@@633) ($generated@@635 $generated@@633)) ($generated@@83 $generated@@630 $generated@@84)) (and (= 1 $generated@@78) (= (ControlFlow 0 13) 12))) $generated@@646)))
$generated@@647)))))))))))))
))
(check-sat)
(get-info :reason-unknown)
(assert (not (= (ControlFlow 0 6) (- 5))))
(check-sat)
(pop 1)
; Invalid
(get-info :rlimit)
(reset)
(set-option :rlimit 0)
; did a full reset
(reset)
(set-option :print-success false)
(set-info :smt-lib-version 2.6)
(set-option :auto_config false)
(set-option :type_check true)
(set-option :smt.case_split 3)
(set-option :smt.qi.eager_threshold 100)
(set-option :smt.delay_units true)
(set-option :smt.arith.solver 2)
(set-option :smt.mbqi false)
(set-option :model.compact false)
(set-option :model.v2 true)
(set-option :pp.bv_literals false)
; done setting options


(set-info :category "industrial")
(declare-sort |T@U| 0)
(declare-sort |T@T| 0)
(declare-fun real_pow (Real Real) Real)
(declare-fun UOrdering2 (|T@U| |T@U|) Bool)
(declare-fun UOrdering3 (|T@T| |T@U| |T@U|) Bool)
(declare-fun tickleBool (Bool) Bool)
(assert (and (tickleBool true) (tickleBool false)))
(declare-fun $generated (T@U) Int)
(declare-fun $generated@@0 (T@U) Bool)
(declare-fun $generated@@1 (T@T) Int)
(declare-fun $generated@@2 () T@T)
(declare-fun $generated@@3 () T@T)
(declare-fun $generated@@4 () T@T)
(declare-fun $generated@@5 () T@T)
(declare-fun $generated@@6 () T@T)
(declare-fun $generated@@7 () T@T)
(declare-fun $generated@@8 (Int) T@U)
(declare-fun type (T@U) T@T)
(declare-fun $generated@@9 (Real) T@U)
(declare-fun $generated@@10 (T@U) Real)
(declare-fun $generated@@11 (Bool) T@U)
(declare-fun $generated@@12 (RoundingMode) T@U)
(declare-fun $generated@@13 (T@U) RoundingMode)
(declare-fun $generated@@14 (String) T@U)
(declare-fun $generated@@15 (T@U) String)
(declare-fun $generated@@16 ((RegEx String)) T@U)
(declare-fun $generated@@17 (T@U) (RegEx String))
(declare-fun $generated@@44 () T@U)
(declare-fun $generated@@45 () T@U)
(declare-fun $generated@@46 () T@U)
(declare-fun $generated@@47 () T@U)
(declare-fun $generated@@48 () T@U)
(declare-fun $generated@@49 () T@U)
(declare-fun $generated@@50 () T@U)
(declare-fun $generated@@51 () T@U)
(declare-fun $generated@@52 () T@U)
(declare-fun $generated@@53 () T@U)
(declare-fun $generated@@54 () T@U)
(declare-fun $generated@@55 () T@U)
(declare-fun $generated@@56 () T@U)
(declare-fun $generated@@57 () T@U)
(declare-fun $generated@@58 () T@U)
(declare-fun $generated@@59 () T@U)
(declare-fun $generated@@60 () T@U)
(declare-fun $generated@@61 () T@U)
(declare-fun $generated@@62 () T@U)
(declare-fun $generated@@63 () T@U)
(declare-fun $generated@@64 () T@U)
(declare-fun $generated@@65 () T@U)
(declare-fun $generated@@66 () T@U)
(declare-fun $generated@@67 () T@U)
(declare-fun $generated@@68 () T@U)
(declare-fun $generated@@69 () T@U)
(declare-fun $generated@@70 () T@T)
(declare-fun $generated@@71 () T@T)
(declare-fun $generated@@72 (T@T) T@T)
(declare-fun $generated@@73 (T@T) T@T)
(declare-fun $generated@@74 () T@T)
(declare-fun $generated@@75 () T@T)
(declare-fun $generated@@78 (T@U) T@U)
(declare-fun $generated@@80 (T@U T@U T@U) Bool)
(declare-fun $generated@@81 (Int) T@U)
(declare-fun $generated@@82 (T@T T@T) T@T)
(declare-fun $generated@@83 () T@T)
(declare-fun $generated@@84 () T@T)
(declare-fun $generated@@85 (T@T) T@T)
(declare-fun $generated@@86 (T@T) T@T)
(declare-fun $generated@@87 (T@U T@U) T@U)
(declare-fun $generated@@88 (T@U T@U T@U) T@U)
(declare-fun $generated@@89 (T@U T@U) T@U)
(declare-fun $generated@@90 (T@U T@U T@U) T@U)
(declare-fun $generated@@138 (T@U T@U) Bool)
(declare-fun $generated@@140 (T@U) Bool)
(declare-fun $generated@@141 (T@U T@U) T@U)
(declare-fun $generated@@142 () T@T)
(declare-fun $generated@@148 (T@U T@U) Bool)
(declare-fun $generated@@149 (T@U) T@U)
(declare-fun $generated@@150 (T@U) T@U)
(declare-fun $generated@@151 () T@T)
(declare-fun $generated@@156 (T@U) T@U)
(declare-fun $generated@@157 () T@U)
(declare-fun $generated@@159 () T@U)
(declare-fun $generated@@160 () T@U)
(declare-fun $generated@@161 () T@U)
(declare-fun $generated@@162 (T@U) T@U)
(declare-fun $generated@@163 (T@U) Bool)
(declare-fun $generated@@167 (T@U T@U T@U) T@U)
(declare-fun $generated@@168 (T@U T@U T@U Bool) T@U)
(declare-fun $generated@@169 (T@T T@T) T@T)
(declare-fun $generated@@170 (T@T) T@T)
(declare-fun $generated@@171 (T@T) T@T)
(declare-fun $generated@@172 (T@U T@U T@U T@U) T@U)
(declare-fun $generated@@223 (T@U T@U T@U Bool) T@U)
(declare-fun $generated@@235 () Int)
(declare-fun $generated@@236 (T@U Int) Int)
(declare-fun $generated@@237 (T@U Int) Bool)
(declare-fun $generated@@238 () T@U)
(declare-fun $generated@@239 (T@U T@U) Bool)
(declare-fun $generated@@240 (Int) Int)
(declare-fun $generated@@243 (T@U T@U) T@U)
(declare-fun $generated@@244 (T@U T@U) Bool)
(declare-fun $generated@@251 (T@U) Bool)
(declare-fun $generated@@260 (T@U) T@U)
(declare-fun $generated@@265 (T@U) T@U)
(declare-fun $generated@@271 (T@U) T@U)
(declare-fun $generated@@275 (T@U) Bool)
(declare-fun $generated@@278 (T@U) Bool)
(declare-fun $generated@@281 (T@U) Bool)
(declare-fun $generated@@284 (T@U) Bool)
(declare-fun $generated@@287 (T@U T@U T@U) Bool)
(declare-fun $generated@@301 (T@T) T@U)
(declare-fun $generated@@302 (T@U) Int)
(declare-fun $generated@@303 (T@T) T@T)
(declare-fun $generated@@304 (T@T) T@T)
(declare-fun $generated@@313 (T@U) T@U)
(declare-fun $generated@@318 (T@U) Int)
(declare-fun $generated@@319 (T@T) T@U)
(declare-fun $generated@@324 (T@U) T@U)
(declare-fun $generated@@325 (T@T T@T) T@U)
(declare-fun $generated@@326 (T@T T@T) T@T)
(declare-fun $generated@@327 (T@T) T@T)
(declare-fun $generated@@328 (T@T) T@T)
(declare-fun $generated@@342 (T@U) T@U)
(declare-fun $generated@@343 (T@T T@T) T@U)
(declare-fun $generated@@344 (T@T T@T) T@T)
(declare-fun $generated@@345 (T@T) T@T)
(declare-fun $generated@@346 (T@T) T@T)
(declare-fun $generated@@363 (T@T T@U) T@U)
(declare-fun $generated@@371 (T@U) T@U)
(declare-fun $generated@@382 (T@U) T@U)
(declare-fun $generated@@402 (T@U) T@U)
(declare-fun $generated@@403 (T@U) T@U)
(declare-fun $generated@@410 (T@U) T@U)
(declare-fun $generated@@411 (T@U) T@U)
(declare-fun $generated@@430 (T@U T@U) T@U)
(declare-fun $generated@@438 (T@U T@U) T@U)
(declare-fun $generated@@446 (T@T) T@U)
(declare-fun $generated@@470 () T@T)
(declare-fun $generated@@478 (T@U) T@U)
(declare-fun $generated@@482 (T@U) T@U)
(declare-fun $generated@@488 (T@U) T@U)
(declare-fun $generated@@492 (T@U) T@U)
(declare-fun $generated@@500 (T@U) T@U)
(declare-fun $generated@@504 (T@U) T@U)
(declare-fun $generated@@512 (T@U) T@U)
(declare-fun $generated@@513 (T@U Int) T@U)
(declare-fun $generated@@522 (T@U) Int)
(declare-fun $generated@@524 (T@U) T@U)
(declare-fun $generated@@528 (T@U) T@U)
(declare-fun $generated@@532 (T@U) T@U)
(declare-fun $generated@@536 (T@U) T@U)
(declare-fun $generated@@550 (T@U) Int)
(declare-fun $generated@@551 (T@U) Int)
(declare-fun $generated@@567 (T@U) T@U)
(declare-fun $generated@@619 (T@U) Int)
(assert  (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (= ($generated@@1 $generated@@2) 0) (= ($generated@@1 $generated@@3) 1)) (= ($generated@@1 $generated@@4) 2)) (= ($generated@@1 $generated@@5) 3)) (= ($generated@@1 $generated@@6) 4)) (= ($generated@@1 $generated@@7) 5)) (forall (($generated@@18 Int) ) (! (= ($generated ($generated@@8 $generated@@18)) $generated@@18)
 :pattern ( ($generated@@8 $generated@@18))
))) (forall (($generated@@19 T@U) ) (!  (=> (= (type $generated@@19) $generated@@2) (= ($generated@@8 ($generated $generated@@19)) $generated@@19))
 :pattern ( ($generated $generated@@19))
))) (forall (($generated@@20 Int) ) (! (= (type ($generated@@8 $generated@@20)) $generated@@2)
 :pattern ( ($generated@@8 $generated@@20))
))) (forall (($generated@@21 Real) ) (! (= ($generated@@10 ($generated@@9 $generated@@21)) $generated@@21)
 :pattern ( ($generated@@9 $generated@@21))
))) (forall (($generated@@22 T@U) ) (!  (=> (= (type $generated@@22) $generated@@3) (= ($generated@@9 ($generated@@10 $generated@@22)) $generated@@22))
 :pattern ( ($generated@@10 $generated@@22))
))) (forall (($generated@@23 Real) ) (! (= (type ($generated@@9 $generated@@23)) $generated@@3)
 :pattern ( ($generated@@9 $generated@@23))
))) (forall (($generated@@24 Bool) ) (! (= ($generated@@0 ($generated@@11 $generated@@24)) $generated@@24)
 :pattern ( ($generated@@11 $generated@@24))
))) (forall (($generated@@25 T@U) ) (!  (=> (= (type $generated@@25) $generated@@4) (= ($generated@@11 ($generated@@0 $generated@@25)) $generated@@25))
 :pattern ( ($generated@@0 $generated@@25))
))) (forall (($generated@@26 Bool) ) (! (= (type ($generated@@11 $generated@@26)) $generated@@4)
 :pattern ( ($generated@@11 $generated@@26))
))) (forall (($generated@@27 RoundingMode) ) (! (= ($generated@@13 ($generated@@12 $generated@@27)) $generated@@27)
 :pattern ( ($generated@@12 $generated@@27))
))) (forall (($generated@@28 T@U) ) (!  (=> (= (type $generated@@28) $generated@@5) (= ($generated@@12 ($generated@@13 $generated@@28)) $generated@@28))
 :pattern ( ($generated@@13 $generated@@28))
))) (forall (($generated@@29 RoundingMode) ) (! (= (type ($generated@@12 $generated@@29)) $generated@@5)
 :pattern ( ($generated@@12 $generated@@29))
))) (forall (($generated@@30 String) ) (! (= ($generated@@15 ($generated@@14 $generated@@30)) $generated@@30)
 :pattern ( ($generated@@14 $generated@@30))
))) (forall (($generated@@31 T@U) ) (!  (=> (= (type $generated@@31) $generated@@6) (= ($generated@@14 ($generated@@15 $generated@@31)) $generated@@31))
 :pattern ( ($generated@@15 $generated@@31))
))) (forall (($generated@@32 String) ) (! (= (type ($generated@@14 $generated@@32)) $generated@@6)
 :pattern ( ($generated@@14 $generated@@32))
))) (forall (($generated@@33 (RegEx String)) ) (! (= ($generated@@17 ($generated@@16 $generated@@33)) $generated@@33)
 :pattern ( ($generated@@16 $generated@@33))
))) (forall (($generated@@34 T@U) ) (!  (=> (= (type $generated@@34) $generated@@7) (= ($generated@@16 ($generated@@17 $generated@@34)) $generated@@34))
 :pattern ( ($generated@@17 $generated@@34))
))) (forall (($generated@@35 (RegEx String)) ) (! (= (type ($generated@@16 $generated@@35)) $generated@@7)
 :pattern ( ($generated@@16 $generated@@35))
))))
(assert (forall (($generated@@36 T@U) ) (! (UOrdering2 $generated@@36 $generated@@36)
 :no-pattern ($generated $generated@@36)
 :no-pattern ($generated@@0 $generated@@36)
)))
(assert (forall (($generated@@37 T@U) ($generated@@38 T@U) ($generated@@39 T@U) ) (! (let (($generated@@40 (type $generated@@37)))
 (=> (and (and (= (type $generated@@38) $generated@@40) (= (type $generated@@39) $generated@@40)) (and (UOrdering2 $generated@@37 $generated@@38) (UOrdering2 $generated@@38 $generated@@39))) (UOrdering2 $generated@@37 $generated@@39)))
 :pattern ( (UOrdering2 $generated@@37 $generated@@38) (UOrdering2 $generated@@38 $generated@@39))
)))
(assert (forall (($generated@@41 T@U) ($generated@@42 T@U) ) (! (let (($generated@@43 (type $generated@@41)))
 (=> (= (type $generated@@42) $generated@@43) (=> (and (UOrdering2 $generated@@41 $generated@@42) (UOrdering2 $generated@@42 $generated@@41)) (= $generated@@41 $generated@@42))))
 :pattern ( (UOrdering2 $generated@@41 $generated@@42) (UOrdering2 $generated@@42 $generated@@41))
)))
(assert  (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (= ($generated@@1 $generated@@70) 6) (= (type $generated@@44) $generated@@70)) (= (type $generated@@45) $generated@@70)) (= (type $generated@@46) $generated@@70)) (= (type $generated@@47) $generated@@70)) (= (type $generated@@48) $generated@@70)) (= ($generated@@1 $generated@@71) 7)) (= (type $generated@@49) $generated@@71)) (= (type $generated@@50) $generated@@71)) (= (type $generated@@51) $generated@@71)) (= (type $generated@@52) $generated@@71)) (= (type $generated@@53) $generated@@71)) (= (type $generated@@54) $generated@@71)) (= (type $generated@@55) $generated@@71)) (= (type $generated@@56) $generated@@71)) (= (type $generated@@57) $generated@@71)) (= (type $generated@@58) $generated@@71)) (= (type $generated@@59) $generated@@71)) (forall (($generated@@76 T@T) ) (= ($generated@@1 ($generated@@72 $generated@@76)) 8))) (forall (($generated@@77 T@T) ) (! (= ($generated@@73 ($generated@@72 $generated@@77)) $generated@@77)
 :pattern ( ($generated@@72 $generated@@77))
))) (= (type $generated@@60) ($generated@@72 $generated@@4))) (= ($generated@@1 $generated@@74) 9)) (= (type $generated@@61) $generated@@74)) (= (type $generated@@62) $generated@@71)) (= (type $generated@@63) $generated@@74)) (= (type $generated@@64) $generated@@71)) (= (type $generated@@65) $generated@@74)) (= (type $generated@@66) $generated@@74)) (= (type $generated@@67) $generated@@74)) (= ($generated@@1 $generated@@75) 10)) (= (type $generated@@68) $generated@@75)) (= (type $generated@@69) $generated@@75)))
(assert (distinct $generated@@44 $generated@@45 $generated@@46 $generated@@47 $generated@@48 $generated@@49 $generated@@50 $generated@@51 $generated@@52 $generated@@53 $generated@@54 $generated@@55 $generated@@56 $generated@@57 $generated@@58 $generated@@59 $generated@@60 $generated@@61 $generated@@62 $generated@@63 $generated@@64 $generated@@65 $generated@@66 $generated@@67 $generated@@68 $generated@@69)
)
(assert (forall (($generated@@79 T@U) ) (! (= (type ($generated@@78 $generated@@79)) $generated@@71)
 :pattern ( ($generated@@78 $generated@@79))
)))
(assert (= ($generated@@78 $generated@@44) $generated@@49))
(assert (= ($generated@@78 $generated@@45) $generated@@50))
(assert (= ($generated@@78 $generated@@46) $generated@@51))
(assert (= ($generated@@78 $generated@@47) $generated@@52))
(assert (= ($generated@@78 $generated@@48) $generated@@53))
(assert  (and (and (and (and (and (and (and (and (and (and (and (and (and (forall (($generated@@91 T@T) ($generated@@92 T@T) ) (= ($generated@@1 ($generated@@82 $generated@@91 $generated@@92)) 11)) (forall (($generated@@93 T@T) ($generated@@94 T@T) ) (! (= ($generated@@85 ($generated@@82 $generated@@93 $generated@@94)) $generated@@93)
 :pattern ( ($generated@@82 $generated@@93 $generated@@94))
))) (forall (($generated@@95 T@T) ($generated@@96 T@T) ) (! (= ($generated@@86 ($generated@@82 $generated@@95 $generated@@96)) $generated@@96)
 :pattern ( ($generated@@82 $generated@@95 $generated@@96))
))) (forall (($generated@@97 T@U) ($generated@@98 T@U) ) (! (let (($generated@@99 ($generated@@86 (type $generated@@97))))
(= (type ($generated@@87 $generated@@97 $generated@@98)) $generated@@99))
 :pattern ( ($generated@@87 $generated@@97 $generated@@98))
))) (forall (($generated@@100 T@U) ($generated@@101 T@U) ($generated@@102 T@U) ) (! (let (($generated@@103 (type $generated@@102)))
(let (($generated@@104 (type $generated@@101)))
(= (type ($generated@@88 $generated@@100 $generated@@101 $generated@@102)) ($generated@@82 $generated@@104 $generated@@103))))
 :pattern ( ($generated@@88 $generated@@100 $generated@@101 $generated@@102))
))) (forall (($generated@@105 T@U) ($generated@@106 T@U) ($generated@@107 T@U) ) (! (let (($generated@@108 ($generated@@86 (type $generated@@105))))
 (=> (= (type $generated@@107) $generated@@108) (= ($generated@@87 ($generated@@88 $generated@@105 $generated@@106 $generated@@107) $generated@@106) $generated@@107)))
 :weight 0
))) (and (forall (($generated@@109 T@U) ($generated@@110 T@U) ($generated@@111 T@U) ($generated@@112 T@U) ) (!  (or (= $generated@@111 $generated@@112) (= ($generated@@87 ($generated@@88 $generated@@110 $generated@@111 $generated@@109) $generated@@112) ($generated@@87 $generated@@110 $generated@@112)))
 :weight 0
)) (forall (($generated@@113 T@U) ($generated@@114 T@U) ($generated@@115 T@U) ($generated@@116 T@U) ) (!  (or true (= ($generated@@87 ($generated@@88 $generated@@114 $generated@@115 $generated@@113) $generated@@116) ($generated@@87 $generated@@114 $generated@@116)))
 :weight 0
)))) (= ($generated@@1 $generated@@83) 12)) (forall (($generated@@117 T@U) ($generated@@118 T@U) ) (! (let (($generated@@119 ($generated@@73 (type $generated@@118))))
(= (type ($generated@@89 $generated@@117 $generated@@118)) $generated@@119))
 :pattern ( ($generated@@89 $generated@@117 $generated@@118))
))) (= ($generated@@1 $generated@@84) 13)) (forall (($generated@@120 T@U) ($generated@@121 T@U) ($generated@@122 T@U) ) (! (= (type ($generated@@90 $generated@@120 $generated@@121 $generated@@122)) $generated@@84)
 :pattern ( ($generated@@90 $generated@@120 $generated@@121 $generated@@122))
))) (forall (($generated@@123 T@U) ($generated@@124 T@U) ($generated@@125 T@U) ) (! (let (($generated@@126 ($generated@@73 (type $generated@@124))))
 (=> (= (type $generated@@125) $generated@@126) (= ($generated@@89 ($generated@@90 $generated@@123 $generated@@124 $generated@@125) $generated@@124) $generated@@125)))
 :weight 0
))) (and (forall (($generated@@127 T@U) ($generated@@128 T@U) ($generated@@129 T@U) ($generated@@130 T@U) ) (!  (or (= $generated@@129 $generated@@130) (= ($generated@@89 ($generated@@90 $generated@@128 $generated@@129 $generated@@127) $generated@@130) ($generated@@89 $generated@@128 $generated@@130)))
 :weight 0
)) (forall (($generated@@131 T@U) ($generated@@132 T@U) ($generated@@133 T@U) ($generated@@134 T@U) ) (!  (or true (= ($generated@@89 ($generated@@90 $generated@@132 $generated@@133 $generated@@131) $generated@@134) ($generated@@89 $generated@@132 $generated@@134)))
 :weight 0
)))) (forall (($generated@@135 Int) ) (! (= (type ($generated@@81 $generated@@135)) $generated@@70)
 :pattern ( ($generated@@81 $generated@@135))
))))
(assert (forall (($generated@@136 T@U) ($generated@@137 T@U) ) (!  (=> (and (= (type $generated@@136) $generated@@2) (= (type $generated@@137) ($generated@@82 $generated@@83 $generated@@84))) ($generated@@80 $generated@@136 ($generated@@81 0) $generated@@137))
 :pattern ( ($generated@@80 $generated@@136 ($generated@@81 0) $generated@@137))
)))
(assert (forall (($generated@@139 T@U) ) (!  (=> (= (type $generated@@139) $generated@@2) ($generated@@138 $generated@@139 ($generated@@81 0)))
 :pattern ( ($generated@@138 $generated@@139 ($generated@@81 0)))
)))
(assert  (and (= ($generated@@1 $generated@@142) 14) (forall (($generated@@143 T@U) ($generated@@144 T@U) ) (! (= (type ($generated@@141 $generated@@143 $generated@@144)) $generated@@70)
 :pattern ( ($generated@@141 $generated@@143 $generated@@144))
))))
(assert (forall (($generated@@145 T@U) ($generated@@146 T@U) ($generated@@147 T@U) ) (!  (=> (and (and (and (= (type $generated@@145) $generated@@70) (= (type $generated@@146) $generated@@70)) (= (type $generated@@147) $generated@@142)) ($generated@@138 $generated@@147 ($generated@@141 $generated@@145 $generated@@146))) ($generated@@140 $generated@@147))
 :pattern ( ($generated@@140 $generated@@147) ($generated@@138 $generated@@147 ($generated@@141 $generated@@145 $generated@@146)))
)))
(assert  (and (and (= ($generated@@1 $generated@@151) 15) (forall (($generated@@152 T@U) ) (! (= (type ($generated@@149 $generated@@152)) $generated@@151)
 :pattern ( ($generated@@149 $generated@@152))
))) (forall (($generated@@153 T@U) ) (! (= (type ($generated@@150 $generated@@153)) $generated@@151)
 :pattern ( ($generated@@150 $generated@@153))
))))
(assert (forall (($generated@@154 T@U) ($generated@@155 T@U) ) (!  (=> (and (and (= (type $generated@@154) $generated@@142) (= (type $generated@@155) $generated@@142)) true) (= ($generated@@148 $generated@@154 $generated@@155)  (and (= ($generated@@149 $generated@@154) ($generated@@149 $generated@@155)) (= ($generated@@150 $generated@@154) ($generated@@150 $generated@@155)))))
 :pattern ( ($generated@@148 $generated@@154 $generated@@155))
)))
(assert  (and (forall (($generated@@158 T@U) ) (! (= (type ($generated@@156 $generated@@158)) $generated@@74)
 :pattern ( ($generated@@156 $generated@@158))
)) (= (type $generated@@157) $generated@@142)))
(assert (= ($generated@@156 $generated@@157) $generated@@63))
(assert (= (type $generated@@159) $generated@@142))
(assert (= ($generated@@156 $generated@@159) $generated@@65))
(assert (= (type $generated@@160) $generated@@142))
(assert (= ($generated@@156 $generated@@160) $generated@@66))
(assert (= (type $generated@@161) $generated@@142))
(assert (= ($generated@@156 $generated@@161) $generated@@67))
(assert (forall (($generated@@164 T@U) ) (! (= (type ($generated@@162 $generated@@164)) $generated@@70)
 :pattern ( ($generated@@162 $generated@@164))
)))
(assert (forall (($generated@@165 T@U) ($generated@@166 T@U) ) (!  (=> (and (and (= (type $generated@@165) ($generated@@82 $generated@@151 $generated@@2)) (= (type $generated@@166) $generated@@70)) ($generated@@138 $generated@@165 ($generated@@162 $generated@@166))) ($generated@@163 $generated@@165))
 :pattern ( ($generated@@138 $generated@@165 ($generated@@162 $generated@@166)))
)))
(assert  (and (and (and (and (and (and (and (forall (($generated@@173 T@T) ($generated@@174 T@T) ) (= ($generated@@1 ($generated@@169 $generated@@173 $generated@@174)) 16)) (forall (($generated@@175 T@T) ($generated@@176 T@T) ) (! (= ($generated@@170 ($generated@@169 $generated@@175 $generated@@176)) $generated@@175)
 :pattern ( ($generated@@169 $generated@@175 $generated@@176))
))) (forall (($generated@@177 T@T) ($generated@@178 T@T) ) (! (= ($generated@@171 ($generated@@169 $generated@@177 $generated@@178)) $generated@@178)
 :pattern ( ($generated@@169 $generated@@177 $generated@@178))
))) (forall (($generated@@179 T@U) ($generated@@180 T@U) ($generated@@181 T@U) ) (! (let (($generated@@182 ($generated@@171 (type $generated@@179))))
(= (type ($generated@@167 $generated@@179 $generated@@180 $generated@@181)) $generated@@182))
 :pattern ( ($generated@@167 $generated@@179 $generated@@180 $generated@@181))
))) (forall (($generated@@183 T@U) ($generated@@184 T@U) ($generated@@185 T@U) ($generated@@186 T@U) ) (! (let (($generated@@187 (type $generated@@186)))
(let (($generated@@188 (type $generated@@184)))
(= (type ($generated@@172 $generated@@183 $generated@@184 $generated@@185 $generated@@186)) ($generated@@169 $generated@@188 $generated@@187))))
 :pattern ( ($generated@@172 $generated@@183 $generated@@184 $generated@@185 $generated@@186))
))) (forall (($generated@@189 T@U) ($generated@@190 T@U) ($generated@@191 T@U) ($generated@@192 T@U) ) (! (let (($generated@@193 ($generated@@171 (type $generated@@189))))
 (=> (= (type $generated@@192) $generated@@193) (= ($generated@@167 ($generated@@172 $generated@@189 $generated@@190 $generated@@191 $generated@@192) $generated@@190 $generated@@191) $generated@@192)))
 :weight 0
))) (and (and (forall (($generated@@194 T@U) ($generated@@195 T@U) ($generated@@196 T@U) ($generated@@197 T@U) ($generated@@198 T@U) ($generated@@199 T@U) ) (!  (or (= $generated@@196 $generated@@198) (= ($generated@@167 ($generated@@172 $generated@@195 $generated@@196 $generated@@197 $generated@@194) $generated@@198 $generated@@199) ($generated@@167 $generated@@195 $generated@@198 $generated@@199)))
 :weight 0
)) (forall (($generated@@200 T@U) ($generated@@201 T@U) ($generated@@202 T@U) ($generated@@203 T@U) ($generated@@204 T@U) ($generated@@205 T@U) ) (!  (or (= $generated@@203 $generated@@205) (= ($generated@@167 ($generated@@172 $generated@@201 $generated@@202 $generated@@203 $generated@@200) $generated@@204 $generated@@205) ($generated@@167 $generated@@201 $generated@@204 $generated@@205)))
 :weight 0
))) (forall (($generated@@206 T@U) ($generated@@207 T@U) ($generated@@208 T@U) ($generated@@209 T@U) ($generated@@210 T@U) ($generated@@211 T@U) ) (!  (or true (= ($generated@@167 ($generated@@172 $generated@@207 $generated@@208 $generated@@209 $generated@@206) $generated@@210 $generated@@211) ($generated@@167 $generated@@207 $generated@@210 $generated@@211)))
 :weight 0
)))) (forall (($generated@@212 T@U) ($generated@@213 T@U) ($generated@@214 T@U) ($generated@@215 Bool) ) (! (= (type ($generated@@168 $generated@@212 $generated@@213 $generated@@214 $generated@@215)) ($generated@@169 $generated@@83 $generated@@4))
 :pattern ( ($generated@@168 $generated@@212 $generated@@213 $generated@@214 $generated@@215))
))))
(assert (forall (($generated@@216 T@U) ($generated@@217 T@U) ($generated@@218 T@U) ($generated@@219 Bool) ($generated@@220 T@U) ($generated@@221 T@U) ) (! (let (($generated@@222 ($generated@@73 (type $generated@@221))))
 (=> (and (and (and (and (= (type $generated@@216) $generated@@83) (= (type $generated@@217) ($generated@@82 $generated@@83 $generated@@84))) (= (type $generated@@218) ($generated@@72 $generated@@4))) (= (type $generated@@220) $generated@@83)) (= (type $generated@@221) ($generated@@72 $generated@@222))) (= ($generated@@0 ($generated@@167 ($generated@@168 $generated@@216 $generated@@217 $generated@@218 $generated@@219) $generated@@220 $generated@@221))  (=> (and (not (= $generated@@220 $generated@@216)) ($generated@@0 ($generated@@89 ($generated@@87 $generated@@217 $generated@@220) $generated@@218))) $generated@@219))))
 :pattern ( ($generated@@167 ($generated@@168 $generated@@216 $generated@@217 $generated@@218 $generated@@219) $generated@@220 $generated@@221))
)))
(assert (forall (($generated@@224 T@U) ($generated@@225 T@U) ($generated@@226 T@U) ($generated@@227 Bool) ) (! (= (type ($generated@@223 $generated@@224 $generated@@225 $generated@@226 $generated@@227)) ($generated@@169 $generated@@83 $generated@@4))
 :pattern ( ($generated@@223 $generated@@224 $generated@@225 $generated@@226 $generated@@227))
)))
(assert (forall (($generated@@228 T@U) ($generated@@229 T@U) ($generated@@230 T@U) ($generated@@231 Bool) ($generated@@232 T@U) ($generated@@233 T@U) ) (! (let (($generated@@234 ($generated@@73 (type $generated@@233))))
 (=> (and (and (and (and (= (type $generated@@228) $generated@@83) (= (type $generated@@229) ($generated@@82 $generated@@83 $generated@@84))) (= (type $generated@@230) ($generated@@72 $generated@@4))) (= (type $generated@@232) $generated@@83)) (= (type $generated@@233) ($generated@@72 $generated@@234))) (= ($generated@@0 ($generated@@167 ($generated@@223 $generated@@228 $generated@@229 $generated@@230 $generated@@231) $generated@@232 $generated@@233))  (=> (and (not (= $generated@@232 $generated@@228)) ($generated@@0 ($generated@@89 ($generated@@87 $generated@@229 $generated@@232) $generated@@230))) $generated@@231))))
 :pattern ( ($generated@@167 ($generated@@223 $generated@@228 $generated@@229 $generated@@230 $generated@@231) $generated@@232 $generated@@233))
)))
(assert (= (type $generated@@238) $generated@@70))
(assert  (=> (<= 1 $generated@@235) (forall (($generated@@241 T@U) ($generated@@242 Int) ) (!  (=> (and (= (type $generated@@241) $generated@@142) (or ($generated@@237 $generated@@241 $generated@@242) (and (not (= 1 $generated@@235)) (and ($generated@@138 $generated@@241 $generated@@238) (and (< $generated@@242 100) (=> ($generated@@239 $generated@@241 $generated@@160) (= $generated@@242 ($generated@@240 200)))))))) true)
 :pattern ( ($generated@@236 $generated@@241 $generated@@242))
))))
(assert (forall (($generated@@245 T@U) ($generated@@246 T@U) ) (! (= (type ($generated@@243 $generated@@245 $generated@@246)) $generated@@142)
 :pattern ( ($generated@@243 $generated@@245 $generated@@246))
)))
(assert (forall (($generated@@247 T@U) ($generated@@248 T@U) ($generated@@249 T@U) ($generated@@250 T@U) ) (!  (=> (and (and (and (= (type $generated@@247) $generated@@70) (= (type $generated@@248) $generated@@70)) (= (type $generated@@249) $generated@@151)) (= (type $generated@@250) $generated@@151)) (= ($generated@@138 ($generated@@243 $generated@@249 $generated@@250) ($generated@@141 $generated@@247 $generated@@248))  (and ($generated@@244 $generated@@249 $generated@@247) ($generated@@244 $generated@@250 $generated@@248))))
 :pattern ( ($generated@@138 ($generated@@243 $generated@@249 $generated@@250) ($generated@@141 $generated@@247 $generated@@248)))
)))
(assert ($generated@@138 $generated@@157 $generated@@238))
(assert ($generated@@138 $generated@@159 $generated@@238))
(assert ($generated@@138 $generated@@160 $generated@@238))
(assert ($generated@@138 $generated@@161 $generated@@238))
(assert (forall (($generated@@252 T@U) ) (!  (=> (and (= (type $generated@@252) ($generated@@82 $generated@@83 $generated@@84)) ($generated@@251 $generated@@252)) ($generated@@80 $generated@@157 $generated@@238 $generated@@252))
 :pattern ( ($generated@@80 $generated@@157 $generated@@238 $generated@@252))
)))
(assert (forall (($generated@@253 T@U) ) (!  (=> (and (= (type $generated@@253) ($generated@@82 $generated@@83 $generated@@84)) ($generated@@251 $generated@@253)) ($generated@@80 $generated@@159 $generated@@238 $generated@@253))
 :pattern ( ($generated@@80 $generated@@159 $generated@@238 $generated@@253))
)))
(assert (forall (($generated@@254 T@U) ) (!  (=> (and (= (type $generated@@254) ($generated@@82 $generated@@83 $generated@@84)) ($generated@@251 $generated@@254)) ($generated@@80 $generated@@160 $generated@@238 $generated@@254))
 :pattern ( ($generated@@80 $generated@@160 $generated@@238 $generated@@254))
)))
(assert (forall (($generated@@255 T@U) ) (!  (=> (and (= (type $generated@@255) ($generated@@82 $generated@@83 $generated@@84)) ($generated@@251 $generated@@255)) ($generated@@80 $generated@@161 $generated@@238 $generated@@255))
 :pattern ( ($generated@@80 $generated@@161 $generated@@238 $generated@@255))
)))
(assert (forall (($generated@@256 T@U) ($generated@@257 T@U) ) (!  (=> (and (= (type $generated@@256) $generated@@142) (= (type $generated@@257) $generated@@142)) (= ($generated@@148 $generated@@256 $generated@@257) (= $generated@@256 $generated@@257)))
 :pattern ( ($generated@@148 $generated@@256 $generated@@257))
)))
(assert (forall (($generated@@258 T@U) ($generated@@259 T@U) ) (!  (=> (and (= (type $generated@@258) $generated@@142) (= (type $generated@@259) $generated@@142)) (= ($generated@@239 $generated@@258 $generated@@259) (= $generated@@258 $generated@@259)))
 :pattern ( ($generated@@239 $generated@@258 $generated@@259))
)))
(assert (forall (($generated@@261 T@U) ) (! (= (type ($generated@@260 $generated@@261)) $generated@@70)
 :pattern ( ($generated@@260 $generated@@261))
)))
(assert (forall (($generated@@262 T@U) ($generated@@263 T@U) ) (!  (=> (and (= (type $generated@@262) ($generated@@82 $generated@@151 $generated@@4)) (= (type $generated@@263) $generated@@70)) (= ($generated@@138 $generated@@262 ($generated@@260 $generated@@263)) (forall (($generated@@264 T@U) ) (!  (=> (and (= (type $generated@@264) $generated@@151) ($generated@@0 ($generated@@87 $generated@@262 $generated@@264))) ($generated@@244 $generated@@264 $generated@@263))
 :pattern ( ($generated@@87 $generated@@262 $generated@@264))
))))
 :pattern ( ($generated@@138 $generated@@262 ($generated@@260 $generated@@263)))
)))
(assert (forall (($generated@@266 T@U) ) (! (= (type ($generated@@265 $generated@@266)) $generated@@70)
 :pattern ( ($generated@@265 $generated@@266))
)))
(assert (forall (($generated@@267 T@U) ($generated@@268 T@U) ) (!  (=> (and (= (type $generated@@267) ($generated@@82 $generated@@151 $generated@@4)) (= (type $generated@@268) $generated@@70)) (= ($generated@@138 $generated@@267 ($generated@@265 $generated@@268)) (forall (($generated@@269 T@U) ) (!  (=> (and (= (type $generated@@269) $generated@@151) ($generated@@0 ($generated@@87 $generated@@267 $generated@@269))) ($generated@@244 $generated@@269 $generated@@268))
 :pattern ( ($generated@@87 $generated@@267 $generated@@269))
))))
 :pattern ( ($generated@@138 $generated@@267 ($generated@@265 $generated@@268)))
)))
(assert (forall (($generated@@270 Int) ) (! (= ($generated@@240 $generated@@270) $generated@@270)
 :pattern ( ($generated@@240 $generated@@270))
)))
(assert (forall (($generated@@272 T@U) ) (! (let (($generated@@273 (type $generated@@272)))
(= (type ($generated@@271 $generated@@272)) $generated@@273))
 :pattern ( ($generated@@271 $generated@@272))
)))
(assert (forall (($generated@@274 T@U) ) (! (= ($generated@@271 $generated@@274) $generated@@274)
 :pattern ( ($generated@@271 $generated@@274))
)))
(assert (forall (($generated@@276 T@U) ($generated@@277 T@U) ) (!  (=> (and (and (= (type $generated@@276) $generated@@142) (= (type $generated@@277) $generated@@142)) (and ($generated@@275 $generated@@276) ($generated@@275 $generated@@277))) (= ($generated@@239 $generated@@276 $generated@@277) true))
 :pattern ( ($generated@@239 $generated@@276 $generated@@277) ($generated@@275 $generated@@276))
 :pattern ( ($generated@@239 $generated@@276 $generated@@277) ($generated@@275 $generated@@277))
)))
(assert (forall (($generated@@279 T@U) ($generated@@280 T@U) ) (!  (=> (and (and (= (type $generated@@279) $generated@@142) (= (type $generated@@280) $generated@@142)) (and ($generated@@278 $generated@@279) ($generated@@278 $generated@@280))) (= ($generated@@239 $generated@@279 $generated@@280) true))
 :pattern ( ($generated@@239 $generated@@279 $generated@@280) ($generated@@278 $generated@@279))
 :pattern ( ($generated@@239 $generated@@279 $generated@@280) ($generated@@278 $generated@@280))
)))
(assert (forall (($generated@@282 T@U) ($generated@@283 T@U) ) (!  (=> (and (and (= (type $generated@@282) $generated@@142) (= (type $generated@@283) $generated@@142)) (and ($generated@@281 $generated@@282) ($generated@@281 $generated@@283))) (= ($generated@@239 $generated@@282 $generated@@283) true))
 :pattern ( ($generated@@239 $generated@@282 $generated@@283) ($generated@@281 $generated@@282))
 :pattern ( ($generated@@239 $generated@@282 $generated@@283) ($generated@@281 $generated@@283))
)))
(assert (forall (($generated@@285 T@U) ($generated@@286 T@U) ) (!  (=> (and (and (= (type $generated@@285) $generated@@142) (= (type $generated@@286) $generated@@142)) (and ($generated@@284 $generated@@285) ($generated@@284 $generated@@286))) (= ($generated@@239 $generated@@285 $generated@@286) true))
 :pattern ( ($generated@@239 $generated@@285 $generated@@286) ($generated@@284 $generated@@285))
 :pattern ( ($generated@@239 $generated@@285 $generated@@286) ($generated@@284 $generated@@286))
)))
(assert (forall (($generated@@288 T@U) ($generated@@289 T@U) ($generated@@290 T@U) ($generated@@291 T@U) ($generated@@292 T@U) ) (!  (=> (and (and (and (and (and (= (type $generated@@288) $generated@@70) (= (type $generated@@289) $generated@@70)) (= (type $generated@@290) $generated@@151)) (= (type $generated@@291) $generated@@151)) (= (type $generated@@292) ($generated@@82 $generated@@83 $generated@@84))) ($generated@@251 $generated@@292)) (= ($generated@@80 ($generated@@243 $generated@@290 $generated@@291) ($generated@@141 $generated@@288 $generated@@289) $generated@@292)  (and ($generated@@287 $generated@@290 $generated@@288 $generated@@292) ($generated@@287 $generated@@291 $generated@@289 $generated@@292))))
 :pattern ( ($generated@@80 ($generated@@243 $generated@@290 $generated@@291) ($generated@@141 $generated@@288 $generated@@289) $generated@@292))
)))
(assert (forall (($generated@@293 T@U) ) (!  (=> (= (type $generated@@293) $generated@@142) (= ($generated@@140 $generated@@293) (= ($generated@@156 $generated@@293) $generated@@61)))
 :pattern ( ($generated@@140 $generated@@293))
)))
(assert (forall (($generated@@294 T@U) ) (!  (=> (= (type $generated@@294) $generated@@142) (= ($generated@@275 $generated@@294) (= ($generated@@156 $generated@@294) $generated@@63)))
 :pattern ( ($generated@@275 $generated@@294))
)))
(assert (forall (($generated@@295 T@U) ) (!  (=> (= (type $generated@@295) $generated@@142) (= ($generated@@278 $generated@@295) (= ($generated@@156 $generated@@295) $generated@@65)))
 :pattern ( ($generated@@278 $generated@@295))
)))
(assert (forall (($generated@@296 T@U) ) (!  (=> (= (type $generated@@296) $generated@@142) (= ($generated@@281 $generated@@296) (= ($generated@@156 $generated@@296) $generated@@66)))
 :pattern ( ($generated@@281 $generated@@296))
)))
(assert (forall (($generated@@297 T@U) ) (!  (=> (= (type $generated@@297) $generated@@142) (= ($generated@@284 $generated@@297) (= ($generated@@156 $generated@@297) $generated@@67)))
 :pattern ( ($generated@@284 $generated@@297))
)))
(assert (forall (($generated@@298 T@U) ) (!  (=> (and (= (type $generated@@298) $generated@@142) ($generated@@140 $generated@@298)) (exists (($generated@@299 T@U) ($generated@@300 T@U) ) (!  (and (and (= (type $generated@@299) $generated@@151) (= (type $generated@@300) $generated@@151)) (= $generated@@298 ($generated@@243 $generated@@299 $generated@@300)))
 :no-pattern (type $generated@@299)
 :no-pattern (type $generated@@300)
 :no-pattern ($generated $generated@@299)
 :no-pattern ($generated@@0 $generated@@299)
 :no-pattern ($generated $generated@@300)
 :no-pattern ($generated@@0 $generated@@300)
)))
 :pattern ( ($generated@@140 $generated@@298))
)))
(assert  (and (and (forall (($generated@@305 T@T) ) (= ($generated@@1 ($generated@@303 $generated@@305)) 17)) (forall (($generated@@306 T@T) ) (! (= ($generated@@304 ($generated@@303 $generated@@306)) $generated@@306)
 :pattern ( ($generated@@303 $generated@@306))
))) (forall (($generated@@307 T@T) ) (! (= (type ($generated@@301 $generated@@307)) ($generated@@303 $generated@@307))
 :pattern ( ($generated@@301 $generated@@307))
))))
(assert (forall (($generated@@308 T@T) ) (! (= ($generated@@302 ($generated@@301 $generated@@308)) 0)
 :pattern ( ($generated@@301 $generated@@308))
)))
(assert (forall (($generated@@309 T@U) ) (!  (=> (and (= (type $generated@@309) $generated@@142) ($generated@@275 $generated@@309)) (= $generated@@309 $generated@@157))
 :pattern ( ($generated@@275 $generated@@309))
)))
(assert (forall (($generated@@310 T@U) ) (!  (=> (and (= (type $generated@@310) $generated@@142) ($generated@@278 $generated@@310)) (= $generated@@310 $generated@@159))
 :pattern ( ($generated@@278 $generated@@310))
)))
(assert (forall (($generated@@311 T@U) ) (!  (=> (and (= (type $generated@@311) $generated@@142) ($generated@@281 $generated@@311)) (= $generated@@311 $generated@@160))
 :pattern ( ($generated@@281 $generated@@311))
)))
(assert (forall (($generated@@312 T@U) ) (!  (=> (and (= (type $generated@@312) $generated@@142) ($generated@@284 $generated@@312)) (= $generated@@312 $generated@@161))
 :pattern ( ($generated@@284 $generated@@312))
)))
(assert (forall (($generated@@314 T@U) ) (! (= (type ($generated@@313 $generated@@314)) $generated@@151)
 :pattern ( ($generated@@313 $generated@@314))
)))
(assert (forall (($generated@@315 T@U) ($generated@@316 T@U) ($generated@@317 T@U) ) (!  (=> (and (= (type $generated@@316) $generated@@70) (= (type $generated@@317) ($generated@@82 $generated@@83 $generated@@84))) (= ($generated@@287 ($generated@@313 $generated@@315) $generated@@316 $generated@@317) ($generated@@80 $generated@@315 $generated@@316 $generated@@317)))
 :pattern ( ($generated@@287 ($generated@@313 $generated@@315) $generated@@316 $generated@@317))
)))
(assert (forall (($generated@@320 T@T) ) (! (= (type ($generated@@319 $generated@@320)) ($generated@@82 $generated@@320 $generated@@2))
 :pattern ( ($generated@@319 $generated@@320))
)))
(assert (forall (($generated@@321 T@U) ) (! (let (($generated@@322 ($generated@@85 (type $generated@@321))))
 (=> (= (type $generated@@321) ($generated@@82 $generated@@322 $generated@@2)) (and (= (= ($generated@@318 $generated@@321) 0) (= $generated@@321 ($generated@@319 $generated@@322))) (=> (not (= ($generated@@318 $generated@@321) 0)) (exists (($generated@@323 T@U) ) (!  (and (= (type $generated@@323) $generated@@322) (< 0 ($generated ($generated@@87 $generated@@321 $generated@@323))))
 :no-pattern (type $generated@@323)
 :no-pattern ($generated $generated@@323)
 :no-pattern ($generated@@0 $generated@@323)
))))))
 :pattern ( ($generated@@318 $generated@@321))
)))
(assert  (and (and (and (and (forall (($generated@@329 T@T) ($generated@@330 T@T) ) (= ($generated@@1 ($generated@@326 $generated@@329 $generated@@330)) 18)) (forall (($generated@@331 T@T) ($generated@@332 T@T) ) (! (= ($generated@@327 ($generated@@326 $generated@@331 $generated@@332)) $generated@@331)
 :pattern ( ($generated@@326 $generated@@331 $generated@@332))
))) (forall (($generated@@333 T@T) ($generated@@334 T@T) ) (! (= ($generated@@328 ($generated@@326 $generated@@333 $generated@@334)) $generated@@334)
 :pattern ( ($generated@@326 $generated@@333 $generated@@334))
))) (forall (($generated@@335 T@U) ) (! (let (($generated@@336 ($generated@@327 (type $generated@@335))))
(= (type ($generated@@324 $generated@@335)) ($generated@@82 $generated@@336 $generated@@4)))
 :pattern ( ($generated@@324 $generated@@335))
))) (forall (($generated@@337 T@T) ($generated@@338 T@T) ) (! (= (type ($generated@@325 $generated@@337 $generated@@338)) ($generated@@326 $generated@@337 $generated@@338))
 :pattern ( ($generated@@325 $generated@@337 $generated@@338))
))))
(assert (forall (($generated@@339 T@U) ($generated@@340 T@T) ) (! (let (($generated@@341 (type $generated@@339)))
 (not ($generated@@0 ($generated@@87 ($generated@@324 ($generated@@325 $generated@@341 $generated@@340)) $generated@@339))))
 :pattern ( (let (($generated@@341 (type $generated@@339)))
($generated@@87 ($generated@@324 ($generated@@325 $generated@@341 $generated@@340)) $generated@@339)))
)))
(assert  (and (and (and (and (forall (($generated@@347 T@T) ($generated@@348 T@T) ) (= ($generated@@1 ($generated@@344 $generated@@347 $generated@@348)) 19)) (forall (($generated@@349 T@T) ($generated@@350 T@T) ) (! (= ($generated@@345 ($generated@@344 $generated@@349 $generated@@350)) $generated@@349)
 :pattern ( ($generated@@344 $generated@@349 $generated@@350))
))) (forall (($generated@@351 T@T) ($generated@@352 T@T) ) (! (= ($generated@@346 ($generated@@344 $generated@@351 $generated@@352)) $generated@@352)
 :pattern ( ($generated@@344 $generated@@351 $generated@@352))
))) (forall (($generated@@353 T@U) ) (! (let (($generated@@354 ($generated@@345 (type $generated@@353))))
(= (type ($generated@@342 $generated@@353)) ($generated@@82 $generated@@354 $generated@@4)))
 :pattern ( ($generated@@342 $generated@@353))
))) (forall (($generated@@355 T@T) ($generated@@356 T@T) ) (! (= (type ($generated@@343 $generated@@355 $generated@@356)) ($generated@@344 $generated@@355 $generated@@356))
 :pattern ( ($generated@@343 $generated@@355 $generated@@356))
))))
(assert (forall (($generated@@357 T@U) ($generated@@358 T@T) ) (! (let (($generated@@359 (type $generated@@357)))
 (not ($generated@@0 ($generated@@87 ($generated@@342 ($generated@@343 $generated@@359 $generated@@358)) $generated@@357))))
 :pattern ( (let (($generated@@359 (type $generated@@357)))
($generated@@87 ($generated@@342 ($generated@@343 $generated@@359 $generated@@358)) $generated@@357)))
)))
(assert (forall (($generated@@360 T@U) ) (! (let (($generated@@361 ($generated@@85 (type $generated@@360))))
 (=> (= (type $generated@@360) ($generated@@82 $generated@@361 $generated@@2)) (= ($generated@@163 $generated@@360) (forall (($generated@@362 T@U) ) (!  (=> (= (type $generated@@362) $generated@@361) (and (<= 0 ($generated ($generated@@87 $generated@@360 $generated@@362))) (<= ($generated ($generated@@87 $generated@@360 $generated@@362)) ($generated@@318 $generated@@360))))
 :pattern ( ($generated@@87 $generated@@360 $generated@@362))
)))))
 :pattern ( ($generated@@163 $generated@@360))
)))
(assert (forall (($generated@@364 T@T) ($generated@@365 T@U) ) (! (= (type ($generated@@363 $generated@@364 $generated@@365)) $generated@@364)
 :pattern ( ($generated@@363 $generated@@364 $generated@@365))
)))
(assert (forall (($generated@@366 T@U) ) (!  (=> (and (= (type $generated@@366) $generated@@151) ($generated@@244 $generated@@366 $generated@@238)) (and (= ($generated@@313 ($generated@@363 $generated@@142 $generated@@366)) $generated@@366) ($generated@@138 ($generated@@363 $generated@@142 $generated@@366) $generated@@238)))
 :pattern ( ($generated@@244 $generated@@366 $generated@@238))
)))
(assert (forall (($generated@@367 T@U) ) (! (let (($generated@@368 ($generated@@328 (type $generated@@367))))
(let (($generated@@369 ($generated@@327 (type $generated@@367))))
 (=> (= (type $generated@@367) ($generated@@326 $generated@@369 $generated@@368)) (or (= $generated@@367 ($generated@@325 $generated@@369 $generated@@368)) (exists (($generated@@370 T@U) ) (!  (and (= (type $generated@@370) $generated@@369) ($generated@@0 ($generated@@87 ($generated@@324 $generated@@367) $generated@@370)))
 :no-pattern (type $generated@@370)
 :no-pattern ($generated $generated@@370)
 :no-pattern ($generated@@0 $generated@@370)
))))))
 :pattern ( ($generated@@324 $generated@@367))
)))
(assert (forall (($generated@@372 T@U) ) (! (let (($generated@@373 ($generated@@328 (type $generated@@372))))
(= (type ($generated@@371 $generated@@372)) ($generated@@82 $generated@@373 $generated@@4)))
 :pattern ( ($generated@@371 $generated@@372))
)))
(assert (forall (($generated@@374 T@U) ) (! (let (($generated@@375 ($generated@@328 (type $generated@@374))))
(let (($generated@@376 ($generated@@327 (type $generated@@374))))
 (=> (= (type $generated@@374) ($generated@@326 $generated@@376 $generated@@375)) (or (= $generated@@374 ($generated@@325 $generated@@376 $generated@@375)) (exists (($generated@@377 T@U) ) (!  (and (= (type $generated@@377) $generated@@375) ($generated@@0 ($generated@@87 ($generated@@371 $generated@@374) $generated@@377)))
 :no-pattern (type $generated@@377)
 :no-pattern ($generated $generated@@377)
 :no-pattern ($generated@@0 $generated@@377)
))))))
 :pattern ( ($generated@@371 $generated@@374))
)))
(assert (forall (($generated@@378 T@U) ) (! (let (($generated@@379 ($generated@@346 (type $generated@@378))))
(let (($generated@@380 ($generated@@345 (type $generated@@378))))
 (=> (= (type $generated@@378) ($generated@@344 $generated@@380 $generated@@379)) (or (= $generated@@378 ($generated@@343 $generated@@380 $generated@@379)) (exists (($generated@@381 T@U) ) (!  (and (= (type $generated@@381) $generated@@380) ($generated@@0 ($generated@@87 ($generated@@342 $generated@@378) $generated@@381)))
 :no-pattern (type $generated@@381)
 :no-pattern ($generated $generated@@381)
 :no-pattern ($generated@@0 $generated@@381)
))))))
 :pattern ( ($generated@@342 $generated@@378))
)))
(assert (forall (($generated@@383 T@U) ) (! (let (($generated@@384 ($generated@@346 (type $generated@@383))))
(= (type ($generated@@382 $generated@@383)) ($generated@@82 $generated@@384 $generated@@4)))
 :pattern ( ($generated@@382 $generated@@383))
)))
(assert (forall (($generated@@385 T@U) ) (! (let (($generated@@386 ($generated@@346 (type $generated@@385))))
(let (($generated@@387 ($generated@@345 (type $generated@@385))))
 (=> (= (type $generated@@385) ($generated@@344 $generated@@387 $generated@@386)) (or (= $generated@@385 ($generated@@343 $generated@@387 $generated@@386)) (exists (($generated@@388 T@U) ) (!  (and (= (type $generated@@388) $generated@@386) ($generated@@0 ($generated@@87 ($generated@@382 $generated@@385) $generated@@388)))
 :no-pattern (type $generated@@388)
 :no-pattern ($generated $generated@@388)
 :no-pattern ($generated@@0 $generated@@388)
))))))
 :pattern ( ($generated@@382 $generated@@385))
)))
(assert (forall (($generated@@389 T@U) ($generated@@390 T@U) ) (!  (=> (and (= (type $generated@@389) ($generated@@82 $generated@@151 $generated@@2)) (= (type $generated@@390) $generated@@70)) (= ($generated@@138 $generated@@389 ($generated@@162 $generated@@390)) (forall (($generated@@391 T@U) ) (!  (=> (and (= (type $generated@@391) $generated@@151) (< 0 ($generated ($generated@@87 $generated@@389 $generated@@391)))) ($generated@@244 $generated@@391 $generated@@390))
 :pattern ( ($generated@@87 $generated@@389 $generated@@391))
))))
 :pattern ( ($generated@@138 $generated@@389 ($generated@@162 $generated@@390)))
)))
(assert (forall (($generated@@392 T@U) ($generated@@393 T@U) ($generated@@394 T@U) ) (!  (=> (and (and (= (type $generated@@392) ($generated@@82 $generated@@151 $generated@@4)) (= (type $generated@@393) $generated@@70)) (= (type $generated@@394) ($generated@@82 $generated@@83 $generated@@84))) (= ($generated@@80 $generated@@392 ($generated@@260 $generated@@393) $generated@@394) (forall (($generated@@395 T@U) ) (!  (=> (and (= (type $generated@@395) $generated@@151) ($generated@@0 ($generated@@87 $generated@@392 $generated@@395))) ($generated@@287 $generated@@395 $generated@@393 $generated@@394))
 :pattern ( ($generated@@87 $generated@@392 $generated@@395))
))))
 :pattern ( ($generated@@80 $generated@@392 ($generated@@260 $generated@@393) $generated@@394))
)))
(assert (forall (($generated@@396 T@U) ($generated@@397 T@U) ($generated@@398 T@U) ) (!  (=> (and (and (= (type $generated@@396) ($generated@@82 $generated@@151 $generated@@4)) (= (type $generated@@397) $generated@@70)) (= (type $generated@@398) ($generated@@82 $generated@@83 $generated@@84))) (= ($generated@@80 $generated@@396 ($generated@@265 $generated@@397) $generated@@398) (forall (($generated@@399 T@U) ) (!  (=> (and (= (type $generated@@399) $generated@@151) ($generated@@0 ($generated@@87 $generated@@396 $generated@@399))) ($generated@@287 $generated@@399 $generated@@397 $generated@@398))
 :pattern ( ($generated@@87 $generated@@396 $generated@@399))
))))
 :pattern ( ($generated@@80 $generated@@396 ($generated@@265 $generated@@397) $generated@@398))
)))
(assert (forall (($generated@@400 T@U) ) (! (let (($generated@@401 (type $generated@@400)))
(= ($generated ($generated@@87 ($generated@@319 $generated@@401) $generated@@400)) 0))
 :pattern ( (let (($generated@@401 (type $generated@@400)))
($generated@@87 ($generated@@319 $generated@@401) $generated@@400)))
)))
(assert  (and (forall (($generated@@404 T@U) ) (! (= (type ($generated@@402 $generated@@404)) ($generated@@82 $generated@@151 $generated@@4))
 :pattern ( ($generated@@402 $generated@@404))
)) (forall (($generated@@405 T@U) ) (! (let (($generated@@406 ($generated@@328 (type $generated@@405))))
(let (($generated@@407 ($generated@@327 (type $generated@@405))))
(= (type ($generated@@403 $generated@@405)) ($generated@@82 $generated@@407 $generated@@406))))
 :pattern ( ($generated@@403 $generated@@405))
))))
(assert (forall (($generated@@408 T@U) ($generated@@409 T@U) ) (!  (=> (and (= (type $generated@@408) ($generated@@326 $generated@@151 $generated@@151)) (= (type $generated@@409) $generated@@151)) (= ($generated@@0 ($generated@@87 ($generated@@402 $generated@@408) $generated@@409))  (and ($generated@@0 ($generated@@87 ($generated@@324 $generated@@408) ($generated@@149 ($generated@@363 $generated@@142 $generated@@409)))) (= ($generated@@87 ($generated@@403 $generated@@408) ($generated@@149 ($generated@@363 $generated@@142 $generated@@409))) ($generated@@150 ($generated@@363 $generated@@142 $generated@@409))))))
 :pattern ( ($generated@@87 ($generated@@402 $generated@@408) $generated@@409))
)))
(assert  (and (forall (($generated@@412 T@U) ) (! (= (type ($generated@@410 $generated@@412)) ($generated@@82 $generated@@151 $generated@@4))
 :pattern ( ($generated@@410 $generated@@412))
)) (forall (($generated@@413 T@U) ) (! (let (($generated@@414 ($generated@@346 (type $generated@@413))))
(let (($generated@@415 ($generated@@345 (type $generated@@413))))
(= (type ($generated@@411 $generated@@413)) ($generated@@82 $generated@@415 $generated@@414))))
 :pattern ( ($generated@@411 $generated@@413))
))))
(assert (forall (($generated@@416 T@U) ($generated@@417 T@U) ) (!  (=> (and (= (type $generated@@416) ($generated@@344 $generated@@151 $generated@@151)) (= (type $generated@@417) $generated@@151)) (= ($generated@@0 ($generated@@87 ($generated@@410 $generated@@416) $generated@@417))  (and ($generated@@0 ($generated@@87 ($generated@@342 $generated@@416) ($generated@@149 ($generated@@363 $generated@@142 $generated@@417)))) (= ($generated@@87 ($generated@@411 $generated@@416) ($generated@@149 ($generated@@363 $generated@@142 $generated@@417))) ($generated@@150 ($generated@@363 $generated@@142 $generated@@417))))))
 :pattern ( ($generated@@87 ($generated@@410 $generated@@416) $generated@@417))
)))
(assert (forall (($generated@@418 T@U) ($generated@@419 T@U) ) (! (let (($generated@@420 (type $generated@@419)))
(let (($generated@@421 ($generated@@327 (type $generated@@418))))
 (=> (= (type $generated@@418) ($generated@@326 $generated@@421 $generated@@420)) (= ($generated@@0 ($generated@@87 ($generated@@371 $generated@@418) $generated@@419)) (exists (($generated@@422 T@U) ) (!  (and (= (type $generated@@422) $generated@@421) (and ($generated@@0 ($generated@@87 ($generated@@324 $generated@@418) $generated@@422)) (= $generated@@419 ($generated@@87 ($generated@@403 $generated@@418) $generated@@422))))
 :pattern ( ($generated@@87 ($generated@@324 $generated@@418) $generated@@422))
 :pattern ( ($generated@@87 ($generated@@403 $generated@@418) $generated@@422))
))))))
 :pattern ( ($generated@@87 ($generated@@371 $generated@@418) $generated@@419))
)))
(assert (forall (($generated@@423 T@U) ($generated@@424 T@U) ) (! (let (($generated@@425 (type $generated@@424)))
(let (($generated@@426 ($generated@@345 (type $generated@@423))))
 (=> (= (type $generated@@423) ($generated@@344 $generated@@426 $generated@@425)) (= ($generated@@0 ($generated@@87 ($generated@@382 $generated@@423) $generated@@424)) (exists (($generated@@427 T@U) ) (!  (and (= (type $generated@@427) $generated@@426) (and ($generated@@0 ($generated@@87 ($generated@@342 $generated@@423) $generated@@427)) (= $generated@@424 ($generated@@87 ($generated@@411 $generated@@423) $generated@@427))))
 :pattern ( ($generated@@87 ($generated@@342 $generated@@423) $generated@@427))
 :pattern ( ($generated@@87 ($generated@@411 $generated@@423) $generated@@427))
))))))
 :pattern ( ($generated@@87 ($generated@@382 $generated@@423) $generated@@424))
)))
(assert  (=> (<= 1 $generated@@235) (forall (($generated@@428 T@U) ($generated@@429 Int) ) (!  (=> (and (= (type $generated@@428) $generated@@142) (or ($generated@@237 ($generated@@271 $generated@@428) ($generated@@240 $generated@@429)) (and (not (= 1 $generated@@235)) (and ($generated@@138 $generated@@428 $generated@@238) (and ($generated@@0 ($generated@@271 ($generated@@11 (< $generated@@429 100)))) (=> ($generated@@239 $generated@@428 $generated@@160) (= ($generated@@240 $generated@@429) ($generated@@240 200)))))))) (= ($generated@@236 ($generated@@271 $generated@@428) ($generated@@240 $generated@@429)) (ite ($generated@@275 ($generated@@271 $generated@@428)) 0 (ite ($generated@@278 ($generated@@271 $generated@@428)) 2 80))))
 :weight 3
 :pattern ( ($generated@@236 ($generated@@271 $generated@@428) ($generated@@240 $generated@@429)))
))))
(assert (forall (($generated@@431 T@U) ($generated@@432 T@U) ) (! (= (type ($generated@@430 $generated@@431 $generated@@432)) $generated@@70)
 :pattern ( ($generated@@430 $generated@@431 $generated@@432))
)))
(assert (forall (($generated@@433 T@U) ($generated@@434 T@U) ($generated@@435 T@U) ($generated@@436 T@U) ) (!  (=> (and (and (and (= (type $generated@@433) ($generated@@326 $generated@@151 $generated@@151)) (= (type $generated@@434) $generated@@70)) (= (type $generated@@435) $generated@@70)) (= (type $generated@@436) ($generated@@82 $generated@@83 $generated@@84))) (= ($generated@@80 $generated@@433 ($generated@@430 $generated@@434 $generated@@435) $generated@@436) (forall (($generated@@437 T@U) ) (!  (=> (and (= (type $generated@@437) $generated@@151) ($generated@@0 ($generated@@87 ($generated@@324 $generated@@433) $generated@@437))) (and ($generated@@287 ($generated@@87 ($generated@@403 $generated@@433) $generated@@437) $generated@@435 $generated@@436) ($generated@@287 $generated@@437 $generated@@434 $generated@@436)))
 :pattern ( ($generated@@87 ($generated@@403 $generated@@433) $generated@@437))
 :pattern ( ($generated@@87 ($generated@@324 $generated@@433) $generated@@437))
))))
 :pattern ( ($generated@@80 $generated@@433 ($generated@@430 $generated@@434 $generated@@435) $generated@@436))
)))
(assert (forall (($generated@@439 T@U) ($generated@@440 T@U) ) (! (= (type ($generated@@438 $generated@@439 $generated@@440)) $generated@@70)
 :pattern ( ($generated@@438 $generated@@439 $generated@@440))
)))
(assert (forall (($generated@@441 T@U) ($generated@@442 T@U) ($generated@@443 T@U) ($generated@@444 T@U) ) (!  (=> (and (and (and (= (type $generated@@441) ($generated@@344 $generated@@151 $generated@@151)) (= (type $generated@@442) $generated@@70)) (= (type $generated@@443) $generated@@70)) (= (type $generated@@444) ($generated@@82 $generated@@83 $generated@@84))) (= ($generated@@80 $generated@@441 ($generated@@438 $generated@@442 $generated@@443) $generated@@444) (forall (($generated@@445 T@U) ) (!  (=> (and (= (type $generated@@445) $generated@@151) ($generated@@0 ($generated@@87 ($generated@@342 $generated@@441) $generated@@445))) (and ($generated@@287 ($generated@@87 ($generated@@411 $generated@@441) $generated@@445) $generated@@443 $generated@@444) ($generated@@287 $generated@@445 $generated@@442 $generated@@444)))
 :pattern ( ($generated@@87 ($generated@@411 $generated@@441) $generated@@445))
 :pattern ( ($generated@@87 ($generated@@342 $generated@@441) $generated@@445))
))))
 :pattern ( ($generated@@80 $generated@@441 ($generated@@438 $generated@@442 $generated@@443) $generated@@444))
)))
(assert (forall (($generated@@447 T@T) ) (! (= (type ($generated@@446 $generated@@447)) ($generated@@82 $generated@@447 $generated@@4))
 :pattern ( ($generated@@446 $generated@@447))
)))
(assert (forall (($generated@@448 T@U) ) (! (let (($generated@@449 ($generated@@346 (type $generated@@448))))
(let (($generated@@450 ($generated@@345 (type $generated@@448))))
 (=> (= (type $generated@@448) ($generated@@344 $generated@@450 $generated@@449)) (= (= $generated@@448 ($generated@@343 $generated@@450 $generated@@449)) (= ($generated@@342 $generated@@448) ($generated@@446 $generated@@450))))))
 :pattern ( ($generated@@342 $generated@@448))
)))
(assert (forall (($generated@@451 T@U) ) (! (let (($generated@@452 ($generated@@346 (type $generated@@451))))
(let (($generated@@453 ($generated@@345 (type $generated@@451))))
 (=> (= (type $generated@@451) ($generated@@344 $generated@@453 $generated@@452)) (= (= $generated@@451 ($generated@@343 $generated@@453 $generated@@452)) (= ($generated@@382 $generated@@451) ($generated@@446 $generated@@452))))))
 :pattern ( ($generated@@382 $generated@@451))
)))
(assert (forall (($generated@@454 T@U) ) (! (let (($generated@@455 ($generated@@346 (type $generated@@454))))
(let (($generated@@456 ($generated@@345 (type $generated@@454))))
 (=> (= (type $generated@@454) ($generated@@344 $generated@@456 $generated@@455)) (= (= $generated@@454 ($generated@@343 $generated@@456 $generated@@455)) (= ($generated@@410 $generated@@454) ($generated@@446 $generated@@151))))))
 :pattern ( ($generated@@410 $generated@@454))
)))
(assert (forall (($generated@@457 T@U) ) (! (let (($generated@@458 ($generated@@328 (type $generated@@457))))
(let (($generated@@459 ($generated@@327 (type $generated@@457))))
 (=> (= (type $generated@@457) ($generated@@326 $generated@@459 $generated@@458)) (or (= $generated@@457 ($generated@@325 $generated@@459 $generated@@458)) (exists (($generated@@460 T@U) ($generated@@461 T@U) ) (!  (and (and (= (type $generated@@460) $generated@@151) (= (type $generated@@461) $generated@@151)) ($generated@@0 ($generated@@87 ($generated@@402 $generated@@457) ($generated@@313 ($generated@@243 $generated@@460 $generated@@461)))))
 :no-pattern (type $generated@@460)
 :no-pattern (type $generated@@461)
 :no-pattern ($generated $generated@@460)
 :no-pattern ($generated@@0 $generated@@460)
 :no-pattern ($generated $generated@@461)
 :no-pattern ($generated@@0 $generated@@461)
))))))
 :pattern ( ($generated@@402 $generated@@457))
)))
(assert (forall (($generated@@462 T@U) ) (! (let (($generated@@463 ($generated@@346 (type $generated@@462))))
(let (($generated@@464 ($generated@@345 (type $generated@@462))))
 (=> (= (type $generated@@462) ($generated@@344 $generated@@464 $generated@@463)) (or (= $generated@@462 ($generated@@343 $generated@@464 $generated@@463)) (exists (($generated@@465 T@U) ($generated@@466 T@U) ) (!  (and (and (= (type $generated@@465) $generated@@151) (= (type $generated@@466) $generated@@151)) ($generated@@0 ($generated@@87 ($generated@@410 $generated@@462) ($generated@@313 ($generated@@243 $generated@@465 $generated@@466)))))
 :no-pattern (type $generated@@465)
 :no-pattern (type $generated@@466)
 :no-pattern ($generated $generated@@465)
 :no-pattern ($generated@@0 $generated@@465)
 :no-pattern ($generated $generated@@466)
 :no-pattern ($generated@@0 $generated@@466)
))))))
 :pattern ( ($generated@@410 $generated@@462))
)))
(assert (forall (($generated@@467 T@U) ) (!  (=> (and (= (type $generated@@467) $generated@@151) ($generated@@244 $generated@@467 $generated@@46)) (and (= ($generated@@313 ($generated@@363 $generated@@2 $generated@@467)) $generated@@467) ($generated@@138 ($generated@@363 $generated@@2 $generated@@467) $generated@@46)))
 :pattern ( ($generated@@244 $generated@@467 $generated@@46))
)))
(assert (forall (($generated@@468 T@U) ) (!  (=> (and (= (type $generated@@468) $generated@@151) ($generated@@244 $generated@@468 $generated@@47)) (and (= ($generated@@313 ($generated@@363 $generated@@3 $generated@@468)) $generated@@468) ($generated@@138 ($generated@@363 $generated@@3 $generated@@468) $generated@@47)))
 :pattern ( ($generated@@244 $generated@@468 $generated@@47))
)))
(assert (forall (($generated@@469 T@U) ) (!  (=> (and (= (type $generated@@469) $generated@@151) ($generated@@244 $generated@@469 $generated@@44)) (and (= ($generated@@313 ($generated@@363 $generated@@4 $generated@@469)) $generated@@469) ($generated@@138 ($generated@@363 $generated@@4 $generated@@469) $generated@@44)))
 :pattern ( ($generated@@244 $generated@@469 $generated@@44))
)))
(assert (= ($generated@@1 $generated@@470) 20))
(assert (forall (($generated@@471 T@U) ) (!  (=> (and (= (type $generated@@471) $generated@@151) ($generated@@244 $generated@@471 $generated@@45)) (and (= ($generated@@313 ($generated@@363 $generated@@470 $generated@@471)) $generated@@471) ($generated@@138 ($generated@@363 $generated@@470 $generated@@471) $generated@@45)))
 :pattern ( ($generated@@244 $generated@@471 $generated@@45))
)))
(assert (forall (($generated@@472 T@U) ($generated@@473 T@U) ) (!  (=> (= (type $generated@@473) $generated@@70) (= ($generated@@244 ($generated@@313 $generated@@472) $generated@@473) ($generated@@138 $generated@@472 $generated@@473)))
 :pattern ( ($generated@@244 ($generated@@313 $generated@@472) $generated@@473))
)))
(assert (forall (($generated@@474 T@U) ) (! (let (($generated@@475 ($generated@@85 (type $generated@@474))))
 (=> (= (type $generated@@474) ($generated@@82 $generated@@475 $generated@@2)) (<= 0 ($generated@@318 $generated@@474))))
 :pattern ( ($generated@@318 $generated@@474))
)))
(assert (forall (($generated@@476 T@U) ) (! (let (($generated@@477 ($generated@@304 (type $generated@@476))))
 (=> (= (type $generated@@476) ($generated@@303 $generated@@477)) (<= 0 ($generated@@302 $generated@@476))))
 :pattern ( ($generated@@302 $generated@@476))
)))
(assert (forall (($generated@@479 T@U) ) (! (= (type ($generated@@478 $generated@@479)) $generated@@70)
 :pattern ( ($generated@@478 $generated@@479))
)))
(assert (forall (($generated@@480 T@U) ($generated@@481 T@U) ) (!  (=> (and (= (type $generated@@480) $generated@@70) (= (type $generated@@481) $generated@@70)) (= ($generated@@478 ($generated@@430 $generated@@480 $generated@@481)) $generated@@480))
 :pattern ( ($generated@@430 $generated@@480 $generated@@481))
)))
(assert (forall (($generated@@483 T@U) ) (! (= (type ($generated@@482 $generated@@483)) $generated@@70)
 :pattern ( ($generated@@482 $generated@@483))
)))
(assert (forall (($generated@@484 T@U) ($generated@@485 T@U) ) (!  (=> (and (= (type $generated@@484) $generated@@70) (= (type $generated@@485) $generated@@70)) (= ($generated@@482 ($generated@@430 $generated@@484 $generated@@485)) $generated@@485))
 :pattern ( ($generated@@430 $generated@@484 $generated@@485))
)))
(assert (forall (($generated@@486 T@U) ($generated@@487 T@U) ) (!  (=> (and (= (type $generated@@486) $generated@@70) (= (type $generated@@487) $generated@@70)) (= ($generated@@78 ($generated@@430 $generated@@486 $generated@@487)) $generated@@58))
 :pattern ( ($generated@@430 $generated@@486 $generated@@487))
)))
(assert (forall (($generated@@489 T@U) ) (! (= (type ($generated@@488 $generated@@489)) $generated@@70)
 :pattern ( ($generated@@488 $generated@@489))
)))
(assert (forall (($generated@@490 T@U) ($generated@@491 T@U) ) (!  (=> (and (= (type $generated@@490) $generated@@70) (= (type $generated@@491) $generated@@70)) (= ($generated@@488 ($generated@@438 $generated@@490 $generated@@491)) $generated@@490))
 :pattern ( ($generated@@438 $generated@@490 $generated@@491))
)))
(assert (forall (($generated@@493 T@U) ) (! (= (type ($generated@@492 $generated@@493)) $generated@@70)
 :pattern ( ($generated@@492 $generated@@493))
)))
(assert (forall (($generated@@494 T@U) ($generated@@495 T@U) ) (!  (=> (and (= (type $generated@@494) $generated@@70) (= (type $generated@@495) $generated@@70)) (= ($generated@@492 ($generated@@438 $generated@@494 $generated@@495)) $generated@@495))
 :pattern ( ($generated@@438 $generated@@494 $generated@@495))
)))
(assert (forall (($generated@@496 T@U) ($generated@@497 T@U) ) (!  (=> (and (= (type $generated@@496) $generated@@70) (= (type $generated@@497) $generated@@70)) (= ($generated@@78 ($generated@@438 $generated@@496 $generated@@497)) $generated@@59))
 :pattern ( ($generated@@438 $generated@@496 $generated@@497))
)))
(assert (forall (($generated@@498 T@U) ($generated@@499 T@U) ) (!  (=> (and (= (type $generated@@498) $generated@@151) (= (type $generated@@499) $generated@@151)) (= ($generated@@156 ($generated@@243 $generated@@498 $generated@@499)) $generated@@61))
 :pattern ( ($generated@@243 $generated@@498 $generated@@499))
)))
(assert (forall (($generated@@501 T@U) ) (! (= (type ($generated@@500 $generated@@501)) $generated@@70)
 :pattern ( ($generated@@500 $generated@@501))
)))
(assert (forall (($generated@@502 T@U) ($generated@@503 T@U) ) (!  (=> (and (= (type $generated@@502) $generated@@70) (= (type $generated@@503) $generated@@70)) (= ($generated@@500 ($generated@@141 $generated@@502 $generated@@503)) $generated@@502))
 :pattern ( ($generated@@141 $generated@@502 $generated@@503))
)))
(assert (forall (($generated@@505 T@U) ) (! (= (type ($generated@@504 $generated@@505)) $generated@@70)
 :pattern ( ($generated@@504 $generated@@505))
)))
(assert (forall (($generated@@506 T@U) ($generated@@507 T@U) ) (!  (=> (and (= (type $generated@@506) $generated@@70) (= (type $generated@@507) $generated@@70)) (= ($generated@@504 ($generated@@141 $generated@@506 $generated@@507)) $generated@@507))
 :pattern ( ($generated@@141 $generated@@506 $generated@@507))
)))
(assert (forall (($generated@@508 T@U) ($generated@@509 T@U) ) (!  (=> (and (= (type $generated@@508) $generated@@151) (= (type $generated@@509) $generated@@151)) (= ($generated@@149 ($generated@@243 $generated@@508 $generated@@509)) $generated@@508))
 :pattern ( ($generated@@243 $generated@@508 $generated@@509))
)))
(assert (forall (($generated@@510 T@U) ($generated@@511 T@U) ) (!  (=> (and (= (type $generated@@510) $generated@@151) (= (type $generated@@511) $generated@@151)) (= ($generated@@150 ($generated@@243 $generated@@510 $generated@@511)) $generated@@511))
 :pattern ( ($generated@@243 $generated@@510 $generated@@511))
)))
(assert  (and (forall (($generated@@514 T@U) ) (! (= (type ($generated@@512 $generated@@514)) $generated@@70)
 :pattern ( ($generated@@512 $generated@@514))
)) (forall (($generated@@515 T@U) ($generated@@516 Int) ) (! (let (($generated@@517 ($generated@@304 (type $generated@@515))))
(= (type ($generated@@513 $generated@@515 $generated@@516)) $generated@@517))
 :pattern ( ($generated@@513 $generated@@515 $generated@@516))
))))
(assert (forall (($generated@@518 T@U) ($generated@@519 T@U) ($generated@@520 T@U) ) (!  (=> (and (and (= (type $generated@@518) ($generated@@303 $generated@@151)) (= (type $generated@@519) $generated@@70)) (= (type $generated@@520) ($generated@@82 $generated@@83 $generated@@84))) (= ($generated@@80 $generated@@518 ($generated@@512 $generated@@519) $generated@@520) (forall (($generated@@521 Int) ) (!  (=> (and (<= 0 $generated@@521) (< $generated@@521 ($generated@@302 $generated@@518))) ($generated@@287 ($generated@@513 $generated@@518 $generated@@521) $generated@@519 $generated@@520))
 :pattern ( ($generated@@513 $generated@@518 $generated@@521))
))))
 :pattern ( ($generated@@80 $generated@@518 ($generated@@512 $generated@@519) $generated@@520))
)))
(assert (forall (($generated@@523 Int) ) (! (= ($generated@@522 ($generated@@81 $generated@@523)) $generated@@523)
 :pattern ( ($generated@@81 $generated@@523))
)))
(assert (forall (($generated@@525 T@U) ) (! (= (type ($generated@@524 $generated@@525)) $generated@@70)
 :pattern ( ($generated@@524 $generated@@525))
)))
(assert (forall (($generated@@526 T@U) ) (!  (=> (= (type $generated@@526) $generated@@70) (= ($generated@@524 ($generated@@260 $generated@@526)) $generated@@526))
 :pattern ( ($generated@@260 $generated@@526))
)))
(assert (forall (($generated@@527 T@U) ) (!  (=> (= (type $generated@@527) $generated@@70) (= ($generated@@78 ($generated@@260 $generated@@527)) $generated@@54))
 :pattern ( ($generated@@260 $generated@@527))
)))
(assert (forall (($generated@@529 T@U) ) (! (= (type ($generated@@528 $generated@@529)) $generated@@70)
 :pattern ( ($generated@@528 $generated@@529))
)))
(assert (forall (($generated@@530 T@U) ) (!  (=> (= (type $generated@@530) $generated@@70) (= ($generated@@528 ($generated@@265 $generated@@530)) $generated@@530))
 :pattern ( ($generated@@265 $generated@@530))
)))
(assert (forall (($generated@@531 T@U) ) (!  (=> (= (type $generated@@531) $generated@@70) (= ($generated@@78 ($generated@@265 $generated@@531)) $generated@@55))
 :pattern ( ($generated@@265 $generated@@531))
)))
(assert (forall (($generated@@533 T@U) ) (! (= (type ($generated@@532 $generated@@533)) $generated@@70)
 :pattern ( ($generated@@532 $generated@@533))
)))
(assert (forall (($generated@@534 T@U) ) (!  (=> (= (type $generated@@534) $generated@@70) (= ($generated@@532 ($generated@@162 $generated@@534)) $generated@@534))
 :pattern ( ($generated@@162 $generated@@534))
)))
(assert (forall (($generated@@535 T@U) ) (!  (=> (= (type $generated@@535) $generated@@70) (= ($generated@@78 ($generated@@162 $generated@@535)) $generated@@56))
 :pattern ( ($generated@@162 $generated@@535))
)))
(assert (forall (($generated@@537 T@U) ) (! (= (type ($generated@@536 $generated@@537)) $generated@@70)
 :pattern ( ($generated@@536 $generated@@537))
)))
(assert (forall (($generated@@538 T@U) ) (!  (=> (= (type $generated@@538) $generated@@70) (= ($generated@@536 ($generated@@512 $generated@@538)) $generated@@538))
 :pattern ( ($generated@@512 $generated@@538))
)))
(assert (forall (($generated@@539 T@U) ) (!  (=> (= (type $generated@@539) $generated@@70) (= ($generated@@78 ($generated@@512 $generated@@539)) $generated@@57))
 :pattern ( ($generated@@512 $generated@@539))
)))
(assert (forall (($generated@@540 T@U) ) (! (let (($generated@@541 (type $generated@@540)))
(= ($generated@@363 $generated@@541 ($generated@@313 $generated@@540)) $generated@@540))
 :pattern ( ($generated@@313 $generated@@540))
)))
(assert (forall (($generated@@542 T@U) ($generated@@543 T@U) ($generated@@544 T@U) ) (!  (=> (and (and (= (type $generated@@542) ($generated@@326 $generated@@151 $generated@@151)) (= (type $generated@@543) $generated@@70)) (= (type $generated@@544) $generated@@70)) (= ($generated@@138 $generated@@542 ($generated@@430 $generated@@543 $generated@@544)) (forall (($generated@@545 T@U) ) (!  (=> (and (= (type $generated@@545) $generated@@151) ($generated@@0 ($generated@@87 ($generated@@324 $generated@@542) $generated@@545))) (and ($generated@@244 ($generated@@87 ($generated@@403 $generated@@542) $generated@@545) $generated@@544) ($generated@@244 $generated@@545 $generated@@543)))
 :pattern ( ($generated@@87 ($generated@@403 $generated@@542) $generated@@545))
 :pattern ( ($generated@@87 ($generated@@324 $generated@@542) $generated@@545))
))))
 :pattern ( ($generated@@138 $generated@@542 ($generated@@430 $generated@@543 $generated@@544)))
)))
(assert (forall (($generated@@546 T@U) ($generated@@547 T@U) ($generated@@548 T@U) ) (!  (=> (and (and (= (type $generated@@546) ($generated@@344 $generated@@151 $generated@@151)) (= (type $generated@@547) $generated@@70)) (= (type $generated@@548) $generated@@70)) (= ($generated@@138 $generated@@546 ($generated@@438 $generated@@547 $generated@@548)) (forall (($generated@@549 T@U) ) (!  (=> (and (= (type $generated@@549) $generated@@151) ($generated@@0 ($generated@@87 ($generated@@342 $generated@@546) $generated@@549))) (and ($generated@@244 ($generated@@87 ($generated@@411 $generated@@546) $generated@@549) $generated@@548) ($generated@@244 $generated@@549 $generated@@547)))
 :pattern ( ($generated@@87 ($generated@@411 $generated@@546) $generated@@549))
 :pattern ( ($generated@@87 ($generated@@342 $generated@@546) $generated@@549))
))))
 :pattern ( ($generated@@138 $generated@@546 ($generated@@438 $generated@@547 $generated@@548)))
)))
(assert (forall (($generated@@552 T@U) ($generated@@553 T@U) ) (!  (=> (and (= (type $generated@@552) $generated@@151) (= (type $generated@@553) $generated@@151)) (< ($generated@@550 $generated@@552) ($generated@@551 ($generated@@243 $generated@@552 $generated@@553))))
 :pattern ( ($generated@@243 $generated@@552 $generated@@553))
)))
(assert (forall (($generated@@554 T@U) ($generated@@555 T@U) ) (!  (=> (and (= (type $generated@@554) $generated@@151) (= (type $generated@@555) $generated@@151)) (< ($generated@@550 $generated@@555) ($generated@@551 ($generated@@243 $generated@@554 $generated@@555))))
 :pattern ( ($generated@@243 $generated@@554 $generated@@555))
)))
(assert (forall (($generated@@556 T@U) ($generated@@557 T@U) ($generated@@558 T@U) ) (!  (=> (and (and (and (= (type $generated@@556) $generated@@151) (= (type $generated@@557) $generated@@70)) (= (type $generated@@558) $generated@@70)) ($generated@@244 $generated@@556 ($generated@@430 $generated@@557 $generated@@558))) (and (= ($generated@@313 ($generated@@363 ($generated@@326 $generated@@151 $generated@@151) $generated@@556)) $generated@@556) ($generated@@138 ($generated@@363 ($generated@@326 $generated@@151 $generated@@151) $generated@@556) ($generated@@430 $generated@@557 $generated@@558))))
 :pattern ( ($generated@@244 $generated@@556 ($generated@@430 $generated@@557 $generated@@558)))
)))
(assert (forall (($generated@@559 T@U) ($generated@@560 T@U) ($generated@@561 T@U) ) (!  (=> (and (and (and (= (type $generated@@559) $generated@@151) (= (type $generated@@560) $generated@@70)) (= (type $generated@@561) $generated@@70)) ($generated@@244 $generated@@559 ($generated@@438 $generated@@560 $generated@@561))) (and (= ($generated@@313 ($generated@@363 ($generated@@344 $generated@@151 $generated@@151) $generated@@559)) $generated@@559) ($generated@@138 ($generated@@363 ($generated@@344 $generated@@151 $generated@@151) $generated@@559) ($generated@@438 $generated@@560 $generated@@561))))
 :pattern ( ($generated@@244 $generated@@559 ($generated@@438 $generated@@560 $generated@@561)))
)))
(assert (forall (($generated@@562 T@U) ($generated@@563 T@U) ($generated@@564 T@U) ) (!  (=> (and (and (and (= (type $generated@@562) $generated@@70) (= (type $generated@@563) $generated@@70)) (= (type $generated@@564) $generated@@151)) ($generated@@244 $generated@@564 ($generated@@141 $generated@@562 $generated@@563))) (and (= ($generated@@313 ($generated@@363 $generated@@142 $generated@@564)) $generated@@564) ($generated@@138 ($generated@@363 $generated@@142 $generated@@564) ($generated@@141 $generated@@562 $generated@@563))))
 :pattern ( ($generated@@244 $generated@@564 ($generated@@141 $generated@@562 $generated@@563)))
)))
(assert (forall (($generated@@565 T@U) ) (! (let (($generated@@566 (type $generated@@565)))
 (not ($generated@@0 ($generated@@87 ($generated@@446 $generated@@566) $generated@@565))))
 :pattern ( (let (($generated@@566 (type $generated@@565)))
($generated@@87 ($generated@@446 $generated@@566) $generated@@565)))
)))
(assert (forall (($generated@@568 T@U) ) (! (= (type ($generated@@567 $generated@@568)) $generated@@75)
 :pattern ( ($generated@@567 $generated@@568))
)))
(assert (forall (($generated@@569 T@U) ($generated@@570 T@U) ) (!  (=> (and (= (type $generated@@569) $generated@@70) (= (type $generated@@570) $generated@@70)) (and (= ($generated@@78 ($generated@@141 $generated@@569 $generated@@570)) $generated@@62) (= ($generated@@567 ($generated@@141 $generated@@569 $generated@@570)) $generated@@68)))
 :pattern ( ($generated@@141 $generated@@569 $generated@@570))
)))
(assert (forall (($generated@@571 T@U) ) (!  (=> (= (type $generated@@571) $generated@@142) (= ($generated@@550 ($generated@@313 $generated@@571)) ($generated@@551 $generated@@571)))
 :pattern ( ($generated@@550 ($generated@@313 $generated@@571)))
)))
(assert (forall (($generated@@572 T@U) ) (!  (=> (and (= (type $generated@@572) $generated@@151) ($generated@@244 $generated@@572 ($generated@@81 0))) (and (= ($generated@@313 ($generated@@363 $generated@@2 $generated@@572)) $generated@@572) ($generated@@138 ($generated@@363 ($generated@@82 $generated@@151 $generated@@4) $generated@@572) ($generated@@81 0))))
 :pattern ( ($generated@@244 $generated@@572 ($generated@@81 0)))
)))
(assert (forall (($generated@@573 T@U) ($generated@@574 T@U) ) (!  (=> (and (and (= (type $generated@@573) $generated@@151) (= (type $generated@@574) $generated@@70)) ($generated@@244 $generated@@573 ($generated@@260 $generated@@574))) (and (= ($generated@@313 ($generated@@363 ($generated@@82 $generated@@151 $generated@@4) $generated@@573)) $generated@@573) ($generated@@138 ($generated@@363 ($generated@@82 $generated@@151 $generated@@4) $generated@@573) ($generated@@260 $generated@@574))))
 :pattern ( ($generated@@244 $generated@@573 ($generated@@260 $generated@@574)))
)))
(assert (forall (($generated@@575 T@U) ($generated@@576 T@U) ) (!  (=> (and (and (= (type $generated@@575) $generated@@151) (= (type $generated@@576) $generated@@70)) ($generated@@244 $generated@@575 ($generated@@265 $generated@@576))) (and (= ($generated@@313 ($generated@@363 ($generated@@82 $generated@@151 $generated@@4) $generated@@575)) $generated@@575) ($generated@@138 ($generated@@363 ($generated@@82 $generated@@151 $generated@@4) $generated@@575) ($generated@@265 $generated@@576))))
 :pattern ( ($generated@@244 $generated@@575 ($generated@@265 $generated@@576)))
)))
(assert (forall (($generated@@577 T@U) ($generated@@578 T@U) ) (!  (=> (and (and (= (type $generated@@577) $generated@@151) (= (type $generated@@578) $generated@@70)) ($generated@@244 $generated@@577 ($generated@@162 $generated@@578))) (and (= ($generated@@313 ($generated@@363 ($generated@@82 $generated@@151 $generated@@2) $generated@@577)) $generated@@577) ($generated@@138 ($generated@@363 ($generated@@82 $generated@@151 $generated@@2) $generated@@577) ($generated@@162 $generated@@578))))
 :pattern ( ($generated@@244 $generated@@577 ($generated@@162 $generated@@578)))
)))
(assert (forall (($generated@@579 T@U) ($generated@@580 T@U) ) (!  (=> (and (and (= (type $generated@@579) $generated@@151) (= (type $generated@@580) $generated@@70)) ($generated@@244 $generated@@579 ($generated@@512 $generated@@580))) (and (= ($generated@@313 ($generated@@363 ($generated@@303 $generated@@151) $generated@@579)) $generated@@579) ($generated@@138 ($generated@@363 ($generated@@303 $generated@@151) $generated@@579) ($generated@@512 $generated@@580))))
 :pattern ( ($generated@@244 $generated@@579 ($generated@@512 $generated@@580)))
)))
(assert  (=> (<= 1 $generated@@235) (forall (($generated@@581 T@U) ($generated@@582 Int) ) (!  (=> (and (= (type $generated@@581) $generated@@142) (or ($generated@@237 $generated@@581 $generated@@582) (and (not (= 1 $generated@@235)) (and ($generated@@138 $generated@@581 $generated@@238) (and (< $generated@@582 100) (=> ($generated@@239 $generated@@581 $generated@@160) (= $generated@@582 ($generated@@240 200)))))))) (= ($generated@@236 $generated@@581 $generated@@582) (ite ($generated@@275 $generated@@581) 0 (ite ($generated@@278 $generated@@581) 2 80))))
 :pattern ( ($generated@@236 $generated@@581 $generated@@582))
))))
(assert (= ($generated@@78 $generated@@238) $generated@@64))
(assert (= ($generated@@567 $generated@@238) $generated@@69))
(assert (forall (($generated@@583 T@U) ($generated@@584 T@U) ($generated@@585 T@U) ) (!  (=> (and (and (= (type $generated@@583) ($generated@@82 $generated@@151 $generated@@2)) (= (type $generated@@584) $generated@@70)) (= (type $generated@@585) ($generated@@82 $generated@@83 $generated@@84))) (= ($generated@@80 $generated@@583 ($generated@@162 $generated@@584) $generated@@585) (forall (($generated@@586 T@U) ) (!  (=> (and (= (type $generated@@586) $generated@@151) (< 0 ($generated ($generated@@87 $generated@@583 $generated@@586)))) ($generated@@287 $generated@@586 $generated@@584 $generated@@585))
 :pattern ( ($generated@@87 $generated@@583 $generated@@586))
))))
 :pattern ( ($generated@@80 $generated@@583 ($generated@@162 $generated@@584) $generated@@585))
)))
(assert (= $generated@@157 ($generated@@271 $generated@@157)))
(assert (= $generated@@159 ($generated@@271 $generated@@159)))
(assert (= $generated@@160 ($generated@@271 $generated@@160)))
(assert (= $generated@@161 ($generated@@271 $generated@@161)))
(assert (forall (($generated@@587 T@U) ($generated@@588 T@U) ($generated@@589 T@U) ) (!  (=> (and (and (and (= (type $generated@@587) $generated@@142) (= (type $generated@@588) $generated@@70)) (= (type $generated@@589) ($generated@@82 $generated@@83 $generated@@84))) (and ($generated@@251 $generated@@589) (and ($generated@@140 $generated@@587) (exists (($generated@@590 T@U) ) (!  (and (= (type $generated@@590) $generated@@70) ($generated@@80 $generated@@587 ($generated@@141 $generated@@588 $generated@@590) $generated@@589))
 :pattern ( ($generated@@80 $generated@@587 ($generated@@141 $generated@@588 $generated@@590) $generated@@589))
))))) ($generated@@287 ($generated@@149 $generated@@587) $generated@@588 $generated@@589))
 :pattern ( ($generated@@287 ($generated@@149 $generated@@587) $generated@@588 $generated@@589))
)))
(assert (forall (($generated@@591 T@U) ($generated@@592 T@U) ($generated@@593 T@U) ) (!  (=> (and (and (and (= (type $generated@@591) $generated@@142) (= (type $generated@@592) $generated@@70)) (= (type $generated@@593) ($generated@@82 $generated@@83 $generated@@84))) (and ($generated@@251 $generated@@593) (and ($generated@@140 $generated@@591) (exists (($generated@@594 T@U) ) (!  (and (= (type $generated@@594) $generated@@70) ($generated@@80 $generated@@591 ($generated@@141 $generated@@594 $generated@@592) $generated@@593))
 :pattern ( ($generated@@80 $generated@@591 ($generated@@141 $generated@@594 $generated@@592) $generated@@593))
))))) ($generated@@287 ($generated@@150 $generated@@591) $generated@@592 $generated@@593))
 :pattern ( ($generated@@287 ($generated@@150 $generated@@591) $generated@@592 $generated@@593))
)))
(assert (forall (($generated@@595 T@U) ($generated@@596 T@U) ) (!  (=> (and (= (type $generated@@595) $generated@@151) (= (type $generated@@596) $generated@@151)) (= ($generated@@243 ($generated@@271 $generated@@595) ($generated@@271 $generated@@596)) ($generated@@271 ($generated@@243 $generated@@595 $generated@@596))))
 :pattern ( ($generated@@243 ($generated@@271 $generated@@595) ($generated@@271 $generated@@596)))
)))
(assert (forall (($generated@@597 Int) ) (! (= ($generated@@313 ($generated@@8 ($generated@@240 $generated@@597))) ($generated@@271 ($generated@@313 ($generated@@8 $generated@@597))))
 :pattern ( ($generated@@313 ($generated@@8 ($generated@@240 $generated@@597))))
)))
(assert (forall (($generated@@598 T@U) ) (! (= ($generated@@313 ($generated@@271 $generated@@598)) ($generated@@271 ($generated@@313 $generated@@598)))
 :pattern ( ($generated@@313 ($generated@@271 $generated@@598)))
)))
(assert (forall (($generated@@599 T@U) ) (! (let (($generated@@600 ($generated@@304 (type $generated@@599))))
 (=> (and (= (type $generated@@599) ($generated@@303 $generated@@600)) (= ($generated@@302 $generated@@599) 0)) (= $generated@@599 ($generated@@301 $generated@@600))))
 :pattern ( ($generated@@302 $generated@@599))
)))
(assert (forall (($generated@@601 T@U) ($generated@@602 T@U) ($generated@@603 T@U) ) (! (let (($generated@@604 (type $generated@@602)))
 (=> (and (and (= (type $generated@@601) ($generated@@82 $generated@@604 $generated@@2)) (= (type $generated@@603) $generated@@2)) (<= 0 ($generated $generated@@603))) (= ($generated@@318 ($generated@@88 $generated@@601 $generated@@602 $generated@@603)) (+ (- ($generated@@318 $generated@@601) ($generated ($generated@@87 $generated@@601 $generated@@602))) ($generated $generated@@603)))))
 :pattern ( ($generated@@318 ($generated@@88 $generated@@601 $generated@@602 $generated@@603)))
)))
(assert (forall (($generated@@605 T@U) ) (!  (=> (and (= (type $generated@@605) $generated@@142) ($generated@@138 $generated@@605 $generated@@238)) (or (or (or ($generated@@275 $generated@@605) ($generated@@278 $generated@@605)) ($generated@@281 $generated@@605)) ($generated@@284 $generated@@605)))
 :pattern ( ($generated@@284 $generated@@605) ($generated@@138 $generated@@605 $generated@@238))
 :pattern ( ($generated@@281 $generated@@605) ($generated@@138 $generated@@605 $generated@@238))
 :pattern ( ($generated@@278 $generated@@605) ($generated@@138 $generated@@605 $generated@@238))
 :pattern ( ($generated@@275 $generated@@605) ($generated@@138 $generated@@605 $generated@@238))
)))
(assert (forall (($generated@@606 T@U) ($generated@@607 T@U) ) (!  (=> (and (= (type $generated@@606) ($generated@@82 $generated@@83 $generated@@84)) (= (type $generated@@607) $generated@@2)) ($generated@@80 $generated@@607 $generated@@46 $generated@@606))
 :pattern ( ($generated@@80 $generated@@607 $generated@@46 $generated@@606))
)))
(assert (forall (($generated@@608 T@U) ($generated@@609 T@U) ) (!  (=> (and (= (type $generated@@608) ($generated@@82 $generated@@83 $generated@@84)) (= (type $generated@@609) $generated@@3)) ($generated@@80 $generated@@609 $generated@@47 $generated@@608))
 :pattern ( ($generated@@80 $generated@@609 $generated@@47 $generated@@608))
)))
(assert (forall (($generated@@610 T@U) ($generated@@611 T@U) ) (!  (=> (and (= (type $generated@@610) ($generated@@82 $generated@@83 $generated@@84)) (= (type $generated@@611) $generated@@4)) ($generated@@80 $generated@@611 $generated@@44 $generated@@610))
 :pattern ( ($generated@@80 $generated@@611 $generated@@44 $generated@@610))
)))
(assert (forall (($generated@@612 T@U) ($generated@@613 T@U) ) (!  (=> (and (= (type $generated@@612) ($generated@@82 $generated@@83 $generated@@84)) (= (type $generated@@613) $generated@@470)) ($generated@@80 $generated@@613 $generated@@45 $generated@@612))
 :pattern ( ($generated@@80 $generated@@613 $generated@@45 $generated@@612))
)))
(assert (forall (($generated@@614 T@U) ($generated@@615 T@U) ) (!  (=> (and (= (type $generated@@614) ($generated@@82 $generated@@83 $generated@@84)) (= (type $generated@@615) $generated@@151)) ($generated@@80 $generated@@615 $generated@@48 $generated@@614))
 :pattern ( ($generated@@80 $generated@@615 $generated@@48 $generated@@614))
)))
(assert (forall (($generated@@616 T@U) ($generated@@617 T@U) ) (!  (=> (and (= (type $generated@@616) ($generated@@303 $generated@@151)) (= (type $generated@@617) $generated@@70)) (= ($generated@@138 $generated@@616 ($generated@@512 $generated@@617)) (forall (($generated@@618 Int) ) (!  (=> (and (<= 0 $generated@@618) (< $generated@@618 ($generated@@302 $generated@@616))) ($generated@@244 ($generated@@513 $generated@@616 $generated@@618) $generated@@617))
 :pattern ( ($generated@@513 $generated@@616 $generated@@618))
))))
 :pattern ( ($generated@@138 $generated@@616 ($generated@@512 $generated@@617)))
)))
(assert (forall (($generated@@620 T@U) ($generated@@621 Int) ) (!  (=> (= (type $generated@@620) ($generated@@303 $generated@@151)) (=> (and (<= 0 $generated@@621) (< $generated@@621 ($generated@@302 $generated@@620))) (< ($generated@@551 ($generated@@363 $generated@@142 ($generated@@513 $generated@@620 $generated@@621))) ($generated@@619 $generated@@620))))
 :pattern ( ($generated@@551 ($generated@@363 $generated@@142 ($generated@@513 $generated@@620 $generated@@621))))
)))
(assert (forall (($generated@@622 T@U) ($generated@@623 T@U) ($generated@@624 T@U) ) (!  (=> (and (and (and (= (type $generated@@622) ($generated@@326 $generated@@151 $generated@@151)) (= (type $generated@@623) $generated@@70)) (= (type $generated@@624) $generated@@70)) ($generated@@138 $generated@@622 ($generated@@430 $generated@@623 $generated@@624))) (and (and ($generated@@138 ($generated@@324 $generated@@622) ($generated@@260 $generated@@623)) ($generated@@138 ($generated@@371 $generated@@622) ($generated@@260 $generated@@624))) ($generated@@138 ($generated@@402 $generated@@622) ($generated@@260 ($generated@@141 $generated@@623 $generated@@624)))))
 :pattern ( ($generated@@138 $generated@@622 ($generated@@430 $generated@@623 $generated@@624)))
)))
(assert (forall (($generated@@625 T@U) ($generated@@626 T@U) ($generated@@627 T@U) ) (!  (=> (and (and (and (= (type $generated@@625) ($generated@@344 $generated@@151 $generated@@151)) (= (type $generated@@626) $generated@@70)) (= (type $generated@@627) $generated@@70)) ($generated@@138 $generated@@625 ($generated@@438 $generated@@626 $generated@@627))) (and (and ($generated@@138 ($generated@@342 $generated@@625) ($generated@@265 $generated@@626)) ($generated@@138 ($generated@@382 $generated@@625) ($generated@@265 $generated@@627))) ($generated@@138 ($generated@@410 $generated@@625) ($generated@@265 ($generated@@141 $generated@@626 $generated@@627)))))
 :pattern ( ($generated@@138 $generated@@625 ($generated@@438 $generated@@626 $generated@@627)))
)))
(assert (forall (($generated@@628 T@U) ) (!  (=> (= (type $generated@@628) $generated@@2) ($generated@@138 $generated@@628 $generated@@46))
 :pattern ( ($generated@@138 $generated@@628 $generated@@46))
)))
(assert (forall (($generated@@629 T@U) ) (!  (=> (= (type $generated@@629) $generated@@3) ($generated@@138 $generated@@629 $generated@@47))
 :pattern ( ($generated@@138 $generated@@629 $generated@@47))
)))
(assert (forall (($generated@@630 T@U) ) (!  (=> (= (type $generated@@630) $generated@@4) ($generated@@138 $generated@@630 $generated@@44))
 :pattern ( ($generated@@138 $generated@@630 $generated@@44))
)))
(assert (forall (($generated@@631 T@U) ) (!  (=> (= (type $generated@@631) $generated@@470) ($generated@@138 $generated@@631 $generated@@45))
 :pattern ( ($generated@@138 $generated@@631 $generated@@45))
)))
(assert (forall (($generated@@632 T@U) ) (!  (=> (= (type $generated@@632) $generated@@151) ($generated@@138 $generated@@632 $generated@@48))
 :pattern ( ($generated@@138 $generated@@632 $generated@@48))
)))
(push 1)
(declare-fun ControlFlow (Int Int) Int)
(declare-fun $generated@@633 () T@U)
(declare-fun $generated@@634 () T@U)
(declare-fun $generated@@635 () T@U)
(declare-fun $generated@@636 () T@U)
(declare-fun $generated@@637 () Int)
(declare-fun $generated@@638 () T@U)
(declare-fun $generated@@639 (T@U) Bool)
(assert  (and (and (and (and (= (type $generated@@633) $generated@@142) (= (type $generated@@634) ($generated@@169 $generated@@83 $generated@@4))) (= (type $generated@@635) $generated@@83)) (= (type $generated@@636) ($generated@@82 $generated@@83 $generated@@84))) (= (type $generated@@638) ($generated@@169 $generated@@83 $generated@@4))))
(set-option :timeout 0)
(set-option :rlimit 0)
(assert (not
 (=> (= (ControlFlow 0 0) 15) (let (($generated@@640 true))
(let (($generated@@641  (=> (and (= $generated@@633 $generated@@160) (= (ControlFlow 0 6) (- 0 5))) false)))
(let (($generated@@642  (=> (not (= $generated@@633 $generated@@161)) (and (=> (= (ControlFlow 0 8) 6) $generated@@641) (=> (= (ControlFlow 0 8) 7) $generated@@640)))))
(let (($generated@@643 true))
(let (($generated@@644  (=> (not (= $generated@@633 $generated@@159)) (and (=> (= (ControlFlow 0 9) 4) $generated@@643) (=> (= (ControlFlow 0 9) 8) $generated@@642)))))
(let (($generated@@645 true))
(let (($generated@@646  (=> (not (= $generated@@633 $generated@@157)) (and (=> (= (ControlFlow 0 10) 3) $generated@@645) (=> (= (ControlFlow 0 10) 9) $generated@@644)))))
(let (($generated@@647 true))
(let (($generated@@648  (=> (= $generated@@634 ($generated@@223 $generated@@635 $generated@@636 $generated@@60 false)) (and (=> (= (ControlFlow 0 11) 2) $generated@@647) (=> (= (ControlFlow 0 11) 10) $generated@@646)))))
(let (($generated@@649 true))
(let (($generated@@650  (=> (=> ($generated@@239 $generated@@633 $generated@@160) (= $generated@@637 ($generated@@240 200))) (and (=> (= (ControlFlow 0 13) 1) $generated@@649) (=> (= (ControlFlow 0 13) 11) $generated@@648)))))
(let (($generated@@651  (=> (and ($generated@@239 $generated@@633 $generated@@160) (= $generated@@637 ($generated@@240 200))) (and (=> (= (ControlFlow 0 12) 1) $generated@@649) (=> (= (ControlFlow 0 12) 11) $generated@@648)))))
(let (($generated@@652  (=> (and (= $generated@@638 ($generated@@168 $generated@@635 $generated@@636 $generated@@60 false)) (< $generated@@637 100)) (and (=> (= (ControlFlow 0 14) 12) $generated@@651) (=> (= (ControlFlow 0 14) 13) $generated@@650)))))
(let (($generated@@653  (=> (and (and (and ($generated@@251 $generated@@636) ($generated@@639 $generated@@636)) ($generated@@138 $generated@@633 $generated@@238)) (and (= 1 $generated@@235) (= (ControlFlow 0 15) 14))) $generated@@652)))
$generated@@653)))))))))))))))
))
(check-sat)
(pop 1)
; Valid
(get-info :rlimit)
(reset)
(set-option :rlimit 0)
; did a full reset
(reset)
(set-option :print-success false)
(set-info :smt-lib-version 2.6)
(set-option :auto_config false)
(set-option :type_check true)
(set-option :smt.case_split 3)
(set-option :smt.qi.eager_threshold 100)
(set-option :smt.delay_units true)
(set-option :smt.arith.solver 2)
(set-option :smt.mbqi false)
(set-option :model.compact false)
(set-option :model.v2 true)
(set-option :pp.bv_literals false)
; done setting options


(set-info :category "industrial")
(declare-sort |T@U| 0)
(declare-sort |T@T| 0)
(declare-fun real_pow (Real Real) Real)
(declare-fun UOrdering2 (|T@U| |T@U|) Bool)
(declare-fun UOrdering3 (|T@T| |T@U| |T@U|) Bool)
(declare-fun tickleBool (Bool) Bool)
(assert (and (tickleBool true) (tickleBool false)))
(declare-fun $generated (T@U) Int)
(declare-fun $generated@@0 (T@U) Bool)
(declare-fun $generated@@1 (T@T) Int)
(declare-fun $generated@@2 () T@T)
(declare-fun $generated@@3 () T@T)
(declare-fun $generated@@4 () T@T)
(declare-fun $generated@@5 () T@T)
(declare-fun $generated@@6 () T@T)
(declare-fun $generated@@7 () T@T)
(declare-fun $generated@@8 (Int) T@U)
(declare-fun type (T@U) T@T)
(declare-fun $generated@@9 (Real) T@U)
(declare-fun $generated@@10 (T@U) Real)
(declare-fun $generated@@11 (Bool) T@U)
(declare-fun $generated@@12 (RoundingMode) T@U)
(declare-fun $generated@@13 (T@U) RoundingMode)
(declare-fun $generated@@14 (String) T@U)
(declare-fun $generated@@15 (T@U) String)
(declare-fun $generated@@16 ((RegEx String)) T@U)
(declare-fun $generated@@17 (T@U) (RegEx String))
(declare-fun $generated@@44 (T@U T@U T@U) T@U)
(declare-fun $generated@@45 (T@U T@U T@U Bool) T@U)
(declare-fun $generated@@46 (T@T) T@T)
(declare-fun $generated@@47 () T@T)
(declare-fun $generated@@48 (T@T T@T) T@T)
(declare-fun $generated@@49 () T@T)
(declare-fun $generated@@50 (T@T) T@T)
(declare-fun $generated@@51 (T@U T@U) T@U)
(declare-fun $generated@@52 (T@U T@U) T@U)
(declare-fun $generated@@53 (T@T) T@T)
(declare-fun $generated@@54 (T@T) T@T)
(declare-fun $generated@@55 (T@U T@U T@U) T@U)
(declare-fun $generated@@56 (T@U T@U T@U) T@U)
(declare-fun $generated@@57 (T@T T@T) T@T)
(declare-fun $generated@@58 (T@T) T@T)
(declare-fun $generated@@59 (T@T) T@T)
(declare-fun $generated@@60 (T@U T@U T@U T@U) T@U)
(declare-fun $generated@@157 (Int) Int)
(declare-fun $generated@@159 (T@U) T@U)
(declare-fun $generated@@163 (T@U) T@U)
(declare-fun $generated@@164 (T@T T@U) T@U)
(declare-fun $generated@@165 () T@T)
(assert  (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (= ($generated@@1 $generated@@2) 0) (= ($generated@@1 $generated@@3) 1)) (= ($generated@@1 $generated@@4) 2)) (= ($generated@@1 $generated@@5) 3)) (= ($generated@@1 $generated@@6) 4)) (= ($generated@@1 $generated@@7) 5)) (forall (($generated@@18 Int) ) (! (= ($generated ($generated@@8 $generated@@18)) $generated@@18)
 :pattern ( ($generated@@8 $generated@@18))
))) (forall (($generated@@19 T@U) ) (!  (=> (= (type $generated@@19) $generated@@2) (= ($generated@@8 ($generated $generated@@19)) $generated@@19))
 :pattern ( ($generated $generated@@19))
))) (forall (($generated@@20 Int) ) (! (= (type ($generated@@8 $generated@@20)) $generated@@2)
 :pattern ( ($generated@@8 $generated@@20))
))) (forall (($generated@@21 Real) ) (! (= ($generated@@10 ($generated@@9 $generated@@21)) $generated@@21)
 :pattern ( ($generated@@9 $generated@@21))
))) (forall (($generated@@22 T@U) ) (!  (=> (= (type $generated@@22) $generated@@3) (= ($generated@@9 ($generated@@10 $generated@@22)) $generated@@22))
 :pattern ( ($generated@@10 $generated@@22))
))) (forall (($generated@@23 Real) ) (! (= (type ($generated@@9 $generated@@23)) $generated@@3)
 :pattern ( ($generated@@9 $generated@@23))
))) (forall (($generated@@24 Bool) ) (! (= ($generated@@0 ($generated@@11 $generated@@24)) $generated@@24)
 :pattern ( ($generated@@11 $generated@@24))
))) (forall (($generated@@25 T@U) ) (!  (=> (= (type $generated@@25) $generated@@4) (= ($generated@@11 ($generated@@0 $generated@@25)) $generated@@25))
 :pattern ( ($generated@@0 $generated@@25))
))) (forall (($generated@@26 Bool) ) (! (= (type ($generated@@11 $generated@@26)) $generated@@4)
 :pattern ( ($generated@@11 $generated@@26))
))) (forall (($generated@@27 RoundingMode) ) (! (= ($generated@@13 ($generated@@12 $generated@@27)) $generated@@27)
 :pattern ( ($generated@@12 $generated@@27))
))) (forall (($generated@@28 T@U) ) (!  (=> (= (type $generated@@28) $generated@@5) (= ($generated@@12 ($generated@@13 $generated@@28)) $generated@@28))
 :pattern ( ($generated@@13 $generated@@28))
))) (forall (($generated@@29 RoundingMode) ) (! (= (type ($generated@@12 $generated@@29)) $generated@@5)
 :pattern ( ($generated@@12 $generated@@29))
))) (forall (($generated@@30 String) ) (! (= ($generated@@15 ($generated@@14 $generated@@30)) $generated@@30)
 :pattern ( ($generated@@14 $generated@@30))
))) (forall (($generated@@31 T@U) ) (!  (=> (= (type $generated@@31) $generated@@6) (= ($generated@@14 ($generated@@15 $generated@@31)) $generated@@31))
 :pattern ( ($generated@@15 $generated@@31))
))) (forall (($generated@@32 String) ) (! (= (type ($generated@@14 $generated@@32)) $generated@@6)
 :pattern ( ($generated@@14 $generated@@32))
))) (forall (($generated@@33 (RegEx String)) ) (! (= ($generated@@17 ($generated@@16 $generated@@33)) $generated@@33)
 :pattern ( ($generated@@16 $generated@@33))
))) (forall (($generated@@34 T@U) ) (!  (=> (= (type $generated@@34) $generated@@7) (= ($generated@@16 ($generated@@17 $generated@@34)) $generated@@34))
 :pattern ( ($generated@@17 $generated@@34))
))) (forall (($generated@@35 (RegEx String)) ) (! (= (type ($generated@@16 $generated@@35)) $generated@@7)
 :pattern ( ($generated@@16 $generated@@35))
))))
(assert (forall (($generated@@36 T@U) ) (! (UOrdering2 $generated@@36 $generated@@36)
 :no-pattern ($generated $generated@@36)
 :no-pattern ($generated@@0 $generated@@36)
)))
(assert (forall (($generated@@37 T@U) ($generated@@38 T@U) ($generated@@39 T@U) ) (! (let (($generated@@40 (type $generated@@37)))
 (=> (and (and (= (type $generated@@38) $generated@@40) (= (type $generated@@39) $generated@@40)) (and (UOrdering2 $generated@@37 $generated@@38) (UOrdering2 $generated@@38 $generated@@39))) (UOrdering2 $generated@@37 $generated@@39)))
 :pattern ( (UOrdering2 $generated@@37 $generated@@38) (UOrdering2 $generated@@38 $generated@@39))
)))
(assert (forall (($generated@@41 T@U) ($generated@@42 T@U) ) (! (let (($generated@@43 (type $generated@@41)))
 (=> (= (type $generated@@42) $generated@@43) (=> (and (UOrdering2 $generated@@41 $generated@@42) (UOrdering2 $generated@@42 $generated@@41)) (= $generated@@41 $generated@@42))))
 :pattern ( (UOrdering2 $generated@@41 $generated@@42) (UOrdering2 $generated@@42 $generated@@41))
)))
(assert  (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (forall (($generated@@61 T@T) ($generated@@62 T@T) ) (= ($generated@@1 ($generated@@48 $generated@@61 $generated@@62)) 6)) (forall (($generated@@63 T@T) ($generated@@64 T@T) ) (! (= ($generated@@53 ($generated@@48 $generated@@63 $generated@@64)) $generated@@63)
 :pattern ( ($generated@@48 $generated@@63 $generated@@64))
))) (forall (($generated@@65 T@T) ($generated@@66 T@T) ) (! (= ($generated@@54 ($generated@@48 $generated@@65 $generated@@66)) $generated@@66)
 :pattern ( ($generated@@48 $generated@@65 $generated@@66))
))) (forall (($generated@@67 T@U) ($generated@@68 T@U) ) (! (let (($generated@@69 ($generated@@54 (type $generated@@67))))
(= (type ($generated@@52 $generated@@67 $generated@@68)) $generated@@69))
 :pattern ( ($generated@@52 $generated@@67 $generated@@68))
))) (forall (($generated@@70 T@U) ($generated@@71 T@U) ($generated@@72 T@U) ) (! (let (($generated@@73 (type $generated@@72)))
(let (($generated@@74 (type $generated@@71)))
(= (type ($generated@@55 $generated@@70 $generated@@71 $generated@@72)) ($generated@@48 $generated@@74 $generated@@73))))
 :pattern ( ($generated@@55 $generated@@70 $generated@@71 $generated@@72))
))) (forall (($generated@@75 T@U) ($generated@@76 T@U) ($generated@@77 T@U) ) (! (let (($generated@@78 ($generated@@54 (type $generated@@75))))
 (=> (= (type $generated@@77) $generated@@78) (= ($generated@@52 ($generated@@55 $generated@@75 $generated@@76 $generated@@77) $generated@@76) $generated@@77)))
 :weight 0
))) (and (forall (($generated@@79 T@U) ($generated@@80 T@U) ($generated@@81 T@U) ($generated@@82 T@U) ) (!  (or (= $generated@@81 $generated@@82) (= ($generated@@52 ($generated@@55 $generated@@80 $generated@@81 $generated@@79) $generated@@82) ($generated@@52 $generated@@80 $generated@@82)))
 :weight 0
)) (forall (($generated@@83 T@U) ($generated@@84 T@U) ($generated@@85 T@U) ($generated@@86 T@U) ) (!  (or true (= ($generated@@52 ($generated@@55 $generated@@84 $generated@@85 $generated@@83) $generated@@86) ($generated@@52 $generated@@84 $generated@@86)))
 :weight 0
)))) (forall (($generated@@87 T@T) ) (= ($generated@@1 ($generated@@50 $generated@@87)) 7))) (forall (($generated@@88 T@T) ) (! (= ($generated@@46 ($generated@@50 $generated@@88)) $generated@@88)
 :pattern ( ($generated@@50 $generated@@88))
))) (forall (($generated@@89 T@U) ($generated@@90 T@U) ) (! (let (($generated@@91 ($generated@@46 (type $generated@@90))))
(= (type ($generated@@51 $generated@@89 $generated@@90)) $generated@@91))
 :pattern ( ($generated@@51 $generated@@89 $generated@@90))
))) (= ($generated@@1 $generated@@49) 8)) (forall (($generated@@92 T@U) ($generated@@93 T@U) ($generated@@94 T@U) ) (! (= (type ($generated@@56 $generated@@92 $generated@@93 $generated@@94)) $generated@@49)
 :pattern ( ($generated@@56 $generated@@92 $generated@@93 $generated@@94))
))) (forall (($generated@@95 T@U) ($generated@@96 T@U) ($generated@@97 T@U) ) (! (let (($generated@@98 ($generated@@46 (type $generated@@96))))
 (=> (= (type $generated@@97) $generated@@98) (= ($generated@@51 ($generated@@56 $generated@@95 $generated@@96 $generated@@97) $generated@@96) $generated@@97)))
 :weight 0
))) (and (forall (($generated@@99 T@U) ($generated@@100 T@U) ($generated@@101 T@U) ($generated@@102 T@U) ) (!  (or (= $generated@@101 $generated@@102) (= ($generated@@51 ($generated@@56 $generated@@100 $generated@@101 $generated@@99) $generated@@102) ($generated@@51 $generated@@100 $generated@@102)))
 :weight 0
)) (forall (($generated@@103 T@U) ($generated@@104 T@U) ($generated@@105 T@U) ($generated@@106 T@U) ) (!  (or true (= ($generated@@51 ($generated@@56 $generated@@104 $generated@@105 $generated@@103) $generated@@106) ($generated@@51 $generated@@104 $generated@@106)))
 :weight 0
)))) (= ($generated@@1 $generated@@47) 9)) (forall (($generated@@107 T@T) ($generated@@108 T@T) ) (= ($generated@@1 ($generated@@57 $generated@@107 $generated@@108)) 10))) (forall (($generated@@109 T@T) ($generated@@110 T@T) ) (! (= ($generated@@58 ($generated@@57 $generated@@109 $generated@@110)) $generated@@109)
 :pattern ( ($generated@@57 $generated@@109 $generated@@110))
))) (forall (($generated@@111 T@T) ($generated@@112 T@T) ) (! (= ($generated@@59 ($generated@@57 $generated@@111 $generated@@112)) $generated@@112)
 :pattern ( ($generated@@57 $generated@@111 $generated@@112))
))) (forall (($generated@@113 T@U) ($generated@@114 T@U) ($generated@@115 T@U) ) (! (let (($generated@@116 ($generated@@59 (type $generated@@113))))
(= (type ($generated@@44 $generated@@113 $generated@@114 $generated@@115)) $generated@@116))
 :pattern ( ($generated@@44 $generated@@113 $generated@@114 $generated@@115))
))) (forall (($generated@@117 T@U) ($generated@@118 T@U) ($generated@@119 T@U) ($generated@@120 T@U) ) (! (let (($generated@@121 (type $generated@@120)))
(let (($generated@@122 (type $generated@@118)))
(= (type ($generated@@60 $generated@@117 $generated@@118 $generated@@119 $generated@@120)) ($generated@@57 $generated@@122 $generated@@121))))
 :pattern ( ($generated@@60 $generated@@117 $generated@@118 $generated@@119 $generated@@120))
))) (forall (($generated@@123 T@U) ($generated@@124 T@U) ($generated@@125 T@U) ($generated@@126 T@U) ) (! (let (($generated@@127 ($generated@@59 (type $generated@@123))))
 (=> (= (type $generated@@126) $generated@@127) (= ($generated@@44 ($generated@@60 $generated@@123 $generated@@124 $generated@@125 $generated@@126) $generated@@124 $generated@@125) $generated@@126)))
 :weight 0
))) (and (and (forall (($generated@@128 T@U) ($generated@@129 T@U) ($generated@@130 T@U) ($generated@@131 T@U) ($generated@@132 T@U) ($generated@@133 T@U) ) (!  (or (= $generated@@130 $generated@@132) (= ($generated@@44 ($generated@@60 $generated@@129 $generated@@130 $generated@@131 $generated@@128) $generated@@132 $generated@@133) ($generated@@44 $generated@@129 $generated@@132 $generated@@133)))
 :weight 0
)) (forall (($generated@@134 T@U) ($generated@@135 T@U) ($generated@@136 T@U) ($generated@@137 T@U) ($generated@@138 T@U) ($generated@@139 T@U) ) (!  (or (= $generated@@137 $generated@@139) (= ($generated@@44 ($generated@@60 $generated@@135 $generated@@136 $generated@@137 $generated@@134) $generated@@138 $generated@@139) ($generated@@44 $generated@@135 $generated@@138 $generated@@139)))
 :weight 0
))) (forall (($generated@@140 T@U) ($generated@@141 T@U) ($generated@@142 T@U) ($generated@@143 T@U) ($generated@@144 T@U) ($generated@@145 T@U) ) (!  (or true (= ($generated@@44 ($generated@@60 $generated@@141 $generated@@142 $generated@@143 $generated@@140) $generated@@144 $generated@@145) ($generated@@44 $generated@@141 $generated@@144 $generated@@145)))
 :weight 0
)))) (forall (($generated@@146 T@U) ($generated@@147 T@U) ($generated@@148 T@U) ($generated@@149 Bool) ) (! (= (type ($generated@@45 $generated@@146 $generated@@147 $generated@@148 $generated@@149)) ($generated@@57 $generated@@47 $generated@@4))
 :pattern ( ($generated@@45 $generated@@146 $generated@@147 $generated@@148 $generated@@149))
))))
(assert (forall (($generated@@150 T@U) ($generated@@151 T@U) ($generated@@152 T@U) ($generated@@153 Bool) ($generated@@154 T@U) ($generated@@155 T@U) ) (! (let (($generated@@156 ($generated@@46 (type $generated@@155))))
 (=> (and (and (and (and (= (type $generated@@150) $generated@@47) (= (type $generated@@151) ($generated@@48 $generated@@47 $generated@@49))) (= (type $generated@@152) ($generated@@50 $generated@@4))) (= (type $generated@@154) $generated@@47)) (= (type $generated@@155) ($generated@@50 $generated@@156))) (= ($generated@@0 ($generated@@44 ($generated@@45 $generated@@150 $generated@@151 $generated@@152 $generated@@153) $generated@@154 $generated@@155))  (=> (and (not (= $generated@@154 $generated@@150)) ($generated@@0 ($generated@@51 ($generated@@52 $generated@@151 $generated@@154) $generated@@152))) $generated@@153))))
 :pattern ( ($generated@@44 ($generated@@45 $generated@@150 $generated@@151 $generated@@152 $generated@@153) $generated@@154 $generated@@155))
)))
(assert (forall (($generated@@158 Int) ) (! (= ($generated@@157 $generated@@158) $generated@@158)
 :pattern ( ($generated@@157 $generated@@158))
)))
(assert (forall (($generated@@160 T@U) ) (! (let (($generated@@161 (type $generated@@160)))
(= (type ($generated@@159 $generated@@160)) $generated@@161))
 :pattern ( ($generated@@159 $generated@@160))
)))
(assert (forall (($generated@@162 T@U) ) (! (= ($generated@@159 $generated@@162) $generated@@162)
 :pattern ( ($generated@@159 $generated@@162))
)))
(assert  (and (and (= ($generated@@1 $generated@@165) 11) (forall (($generated@@166 T@U) ) (! (= (type ($generated@@163 $generated@@166)) $generated@@165)
 :pattern ( ($generated@@163 $generated@@166))
))) (forall (($generated@@167 T@T) ($generated@@168 T@U) ) (! (= (type ($generated@@164 $generated@@167 $generated@@168)) $generated@@167)
 :pattern ( ($generated@@164 $generated@@167 $generated@@168))
))))
(assert (forall (($generated@@169 T@U) ) (! (let (($generated@@170 (type $generated@@169)))
(= ($generated@@164 $generated@@170 ($generated@@163 $generated@@169)) $generated@@169))
 :pattern ( ($generated@@163 $generated@@169))
)))
(assert (forall (($generated@@171 Int) ) (! (= ($generated@@163 ($generated@@8 ($generated@@157 $generated@@171))) ($generated@@159 ($generated@@163 ($generated@@8 $generated@@171))))
 :pattern ( ($generated@@163 ($generated@@8 ($generated@@157 $generated@@171))))
)))
(assert (forall (($generated@@172 T@U) ) (! (= ($generated@@163 ($generated@@159 $generated@@172)) ($generated@@159 ($generated@@163 $generated@@172)))
 :pattern ( ($generated@@163 ($generated@@159 $generated@@172)))
)))
(push 1)
(declare-fun ControlFlow (Int Int) Int)
(declare-fun $generated@@173 () Int)
(declare-fun $generated@@174 () Int)
(declare-fun $generated@@175 () Int)
(declare-fun $generated@@176 () Int)
(declare-fun $generated@@177 () T@U)
(declare-fun $generated@@178 () T@U)
(declare-fun $generated@@179 () T@U)
(declare-fun $generated@@180 () T@U)
(declare-fun $generated@@181 (T@U) Bool)
(declare-fun $generated@@182 (T@U) Bool)
(declare-fun $generated@@183 () Int)
(assert  (and (and (and (= (type $generated@@177) ($generated@@57 $generated@@47 $generated@@4)) (= (type $generated@@178) $generated@@47)) (= (type $generated@@179) ($generated@@48 $generated@@47 $generated@@49))) (= (type $generated@@180) ($generated@@50 $generated@@4))))
(set-option :timeout 0)
(set-option :rlimit 0)
(assert (not
 (=> (= (ControlFlow 0 0) 8) (let (($generated@@184  (=> (= (ControlFlow 0 4) (- 0 3)) (<= ($generated@@157 0) $generated@@173))))
(let (($generated@@185  (=> (and (and (< 0 $generated@@174) (= $generated@@175 ($generated@@157 13))) (and (= $generated@@173 $generated@@175) (= (ControlFlow 0 6) 4))) $generated@@184)))
(let (($generated@@186  (=> (and (and (< $generated@@174 0) (= $generated@@176 ($generated@@157 12))) (and (= $generated@@173 $generated@@176) (= (ControlFlow 0 5) 4))) $generated@@184)))
(let (($generated@@187  (=> (and (and (<= 0 $generated@@174) (<= $generated@@174 0)) (= (ControlFlow 0 2) (- 0 1))) false)))
(let (($generated@@188  (=> (= $generated@@177 ($generated@@45 $generated@@178 $generated@@179 $generated@@180 false)) (and (and (=> (= (ControlFlow 0 7) 5) $generated@@186) (=> (= (ControlFlow 0 7) 6) $generated@@185)) (=> (= (ControlFlow 0 7) 2) $generated@@187)))))
(let (($generated@@189  (=> (and (and ($generated@@181 $generated@@179) ($generated@@182 $generated@@179)) (and (= 0 $generated@@183) (= (ControlFlow 0 8) 7))) $generated@@188)))
$generated@@189)))))))
))
(check-sat)
(get-info :reason-unknown)
(assert (not (= (ControlFlow 0 2) (- 1))))
(check-sat)
(pop 1)
; Invalid
(get-info :rlimit)
(reset)
(set-option :rlimit 0)
; did a full reset
(reset)
(set-option :print-success false)
(set-info :smt-lib-version 2.6)
(set-option :auto_config false)
(set-option :type_check true)
(set-option :smt.case_split 3)
(set-option :smt.qi.eager_threshold 100)
(set-option :smt.delay_units true)
(set-option :smt.arith.solver 2)
(set-option :smt.mbqi false)
(set-option :model.compact false)
(set-option :model.v2 true)
(set-option :pp.bv_literals false)
; done setting options


(set-info :category "industrial")
(declare-sort |T@U| 0)
(declare-sort |T@T| 0)
(declare-fun real_pow (Real Real) Real)
(declare-fun UOrdering2 (|T@U| |T@U|) Bool)
(declare-fun UOrdering3 (|T@T| |T@U| |T@U|) Bool)
(declare-fun tickleBool (Bool) Bool)
(assert (and (tickleBool true) (tickleBool false)))
(declare-fun $generated (T@U) Int)
(declare-fun $generated@@0 (T@U) Bool)
(declare-fun $generated@@1 (T@T) Int)
(declare-fun $generated@@2 () T@T)
(declare-fun $generated@@3 () T@T)
(declare-fun $generated@@4 () T@T)
(declare-fun $generated@@5 () T@T)
(declare-fun $generated@@6 () T@T)
(declare-fun $generated@@7 () T@T)
(declare-fun $generated@@8 (Int) T@U)
(declare-fun type (T@U) T@T)
(declare-fun $generated@@9 (Real) T@U)
(declare-fun $generated@@10 (T@U) Real)
(declare-fun $generated@@11 (Bool) T@U)
(declare-fun $generated@@12 (RoundingMode) T@U)
(declare-fun $generated@@13 (T@U) RoundingMode)
(declare-fun $generated@@14 (String) T@U)
(declare-fun $generated@@15 (T@U) String)
(declare-fun $generated@@16 ((RegEx String)) T@U)
(declare-fun $generated@@17 (T@U) (RegEx String))
(declare-fun $generated@@44 (T@U T@U T@U) T@U)
(declare-fun $generated@@45 (T@U T@U T@U Bool) T@U)
(declare-fun $generated@@46 (T@T) T@T)
(declare-fun $generated@@47 () T@T)
(declare-fun $generated@@48 (T@T T@T) T@T)
(declare-fun $generated@@49 () T@T)
(declare-fun $generated@@50 (T@T) T@T)
(declare-fun $generated@@51 (T@U T@U) T@U)
(declare-fun $generated@@52 (T@U T@U) T@U)
(declare-fun $generated@@53 (T@T) T@T)
(declare-fun $generated@@54 (T@T) T@T)
(declare-fun $generated@@55 (T@U T@U T@U) T@U)
(declare-fun $generated@@56 (T@U T@U T@U) T@U)
(declare-fun $generated@@57 (T@T T@T) T@T)
(declare-fun $generated@@58 (T@T) T@T)
(declare-fun $generated@@59 (T@T) T@T)
(declare-fun $generated@@60 (T@U T@U T@U T@U) T@U)
(declare-fun $generated@@157 (Int) Int)
(declare-fun $generated@@159 (T@U) T@U)
(declare-fun $generated@@163 (T@U) T@U)
(declare-fun $generated@@164 (T@T T@U) T@U)
(declare-fun $generated@@165 () T@T)
(assert  (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (= ($generated@@1 $generated@@2) 0) (= ($generated@@1 $generated@@3) 1)) (= ($generated@@1 $generated@@4) 2)) (= ($generated@@1 $generated@@5) 3)) (= ($generated@@1 $generated@@6) 4)) (= ($generated@@1 $generated@@7) 5)) (forall (($generated@@18 Int) ) (! (= ($generated ($generated@@8 $generated@@18)) $generated@@18)
 :pattern ( ($generated@@8 $generated@@18))
))) (forall (($generated@@19 T@U) ) (!  (=> (= (type $generated@@19) $generated@@2) (= ($generated@@8 ($generated $generated@@19)) $generated@@19))
 :pattern ( ($generated $generated@@19))
))) (forall (($generated@@20 Int) ) (! (= (type ($generated@@8 $generated@@20)) $generated@@2)
 :pattern ( ($generated@@8 $generated@@20))
))) (forall (($generated@@21 Real) ) (! (= ($generated@@10 ($generated@@9 $generated@@21)) $generated@@21)
 :pattern ( ($generated@@9 $generated@@21))
))) (forall (($generated@@22 T@U) ) (!  (=> (= (type $generated@@22) $generated@@3) (= ($generated@@9 ($generated@@10 $generated@@22)) $generated@@22))
 :pattern ( ($generated@@10 $generated@@22))
))) (forall (($generated@@23 Real) ) (! (= (type ($generated@@9 $generated@@23)) $generated@@3)
 :pattern ( ($generated@@9 $generated@@23))
))) (forall (($generated@@24 Bool) ) (! (= ($generated@@0 ($generated@@11 $generated@@24)) $generated@@24)
 :pattern ( ($generated@@11 $generated@@24))
))) (forall (($generated@@25 T@U) ) (!  (=> (= (type $generated@@25) $generated@@4) (= ($generated@@11 ($generated@@0 $generated@@25)) $generated@@25))
 :pattern ( ($generated@@0 $generated@@25))
))) (forall (($generated@@26 Bool) ) (! (= (type ($generated@@11 $generated@@26)) $generated@@4)
 :pattern ( ($generated@@11 $generated@@26))
))) (forall (($generated@@27 RoundingMode) ) (! (= ($generated@@13 ($generated@@12 $generated@@27)) $generated@@27)
 :pattern ( ($generated@@12 $generated@@27))
))) (forall (($generated@@28 T@U) ) (!  (=> (= (type $generated@@28) $generated@@5) (= ($generated@@12 ($generated@@13 $generated@@28)) $generated@@28))
 :pattern ( ($generated@@13 $generated@@28))
))) (forall (($generated@@29 RoundingMode) ) (! (= (type ($generated@@12 $generated@@29)) $generated@@5)
 :pattern ( ($generated@@12 $generated@@29))
))) (forall (($generated@@30 String) ) (! (= ($generated@@15 ($generated@@14 $generated@@30)) $generated@@30)
 :pattern ( ($generated@@14 $generated@@30))
))) (forall (($generated@@31 T@U) ) (!  (=> (= (type $generated@@31) $generated@@6) (= ($generated@@14 ($generated@@15 $generated@@31)) $generated@@31))
 :pattern ( ($generated@@15 $generated@@31))
))) (forall (($generated@@32 String) ) (! (= (type ($generated@@14 $generated@@32)) $generated@@6)
 :pattern ( ($generated@@14 $generated@@32))
))) (forall (($generated@@33 (RegEx String)) ) (! (= ($generated@@17 ($generated@@16 $generated@@33)) $generated@@33)
 :pattern ( ($generated@@16 $generated@@33))
))) (forall (($generated@@34 T@U) ) (!  (=> (= (type $generated@@34) $generated@@7) (= ($generated@@16 ($generated@@17 $generated@@34)) $generated@@34))
 :pattern ( ($generated@@17 $generated@@34))
))) (forall (($generated@@35 (RegEx String)) ) (! (= (type ($generated@@16 $generated@@35)) $generated@@7)
 :pattern ( ($generated@@16 $generated@@35))
))))
(assert (forall (($generated@@36 T@U) ) (! (UOrdering2 $generated@@36 $generated@@36)
 :no-pattern ($generated $generated@@36)
 :no-pattern ($generated@@0 $generated@@36)
)))
(assert (forall (($generated@@37 T@U) ($generated@@38 T@U) ($generated@@39 T@U) ) (! (let (($generated@@40 (type $generated@@37)))
 (=> (and (and (= (type $generated@@38) $generated@@40) (= (type $generated@@39) $generated@@40)) (and (UOrdering2 $generated@@37 $generated@@38) (UOrdering2 $generated@@38 $generated@@39))) (UOrdering2 $generated@@37 $generated@@39)))
 :pattern ( (UOrdering2 $generated@@37 $generated@@38) (UOrdering2 $generated@@38 $generated@@39))
)))
(assert (forall (($generated@@41 T@U) ($generated@@42 T@U) ) (! (let (($generated@@43 (type $generated@@41)))
 (=> (= (type $generated@@42) $generated@@43) (=> (and (UOrdering2 $generated@@41 $generated@@42) (UOrdering2 $generated@@42 $generated@@41)) (= $generated@@41 $generated@@42))))
 :pattern ( (UOrdering2 $generated@@41 $generated@@42) (UOrdering2 $generated@@42 $generated@@41))
)))
(assert  (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (forall (($generated@@61 T@T) ($generated@@62 T@T) ) (= ($generated@@1 ($generated@@48 $generated@@61 $generated@@62)) 6)) (forall (($generated@@63 T@T) ($generated@@64 T@T) ) (! (= ($generated@@53 ($generated@@48 $generated@@63 $generated@@64)) $generated@@63)
 :pattern ( ($generated@@48 $generated@@63 $generated@@64))
))) (forall (($generated@@65 T@T) ($generated@@66 T@T) ) (! (= ($generated@@54 ($generated@@48 $generated@@65 $generated@@66)) $generated@@66)
 :pattern ( ($generated@@48 $generated@@65 $generated@@66))
))) (forall (($generated@@67 T@U) ($generated@@68 T@U) ) (! (let (($generated@@69 ($generated@@54 (type $generated@@67))))
(= (type ($generated@@52 $generated@@67 $generated@@68)) $generated@@69))
 :pattern ( ($generated@@52 $generated@@67 $generated@@68))
))) (forall (($generated@@70 T@U) ($generated@@71 T@U) ($generated@@72 T@U) ) (! (let (($generated@@73 (type $generated@@72)))
(let (($generated@@74 (type $generated@@71)))
(= (type ($generated@@55 $generated@@70 $generated@@71 $generated@@72)) ($generated@@48 $generated@@74 $generated@@73))))
 :pattern ( ($generated@@55 $generated@@70 $generated@@71 $generated@@72))
))) (forall (($generated@@75 T@U) ($generated@@76 T@U) ($generated@@77 T@U) ) (! (let (($generated@@78 ($generated@@54 (type $generated@@75))))
 (=> (= (type $generated@@77) $generated@@78) (= ($generated@@52 ($generated@@55 $generated@@75 $generated@@76 $generated@@77) $generated@@76) $generated@@77)))
 :weight 0
))) (and (forall (($generated@@79 T@U) ($generated@@80 T@U) ($generated@@81 T@U) ($generated@@82 T@U) ) (!  (or (= $generated@@81 $generated@@82) (= ($generated@@52 ($generated@@55 $generated@@80 $generated@@81 $generated@@79) $generated@@82) ($generated@@52 $generated@@80 $generated@@82)))
 :weight 0
)) (forall (($generated@@83 T@U) ($generated@@84 T@U) ($generated@@85 T@U) ($generated@@86 T@U) ) (!  (or true (= ($generated@@52 ($generated@@55 $generated@@84 $generated@@85 $generated@@83) $generated@@86) ($generated@@52 $generated@@84 $generated@@86)))
 :weight 0
)))) (forall (($generated@@87 T@T) ) (= ($generated@@1 ($generated@@50 $generated@@87)) 7))) (forall (($generated@@88 T@T) ) (! (= ($generated@@46 ($generated@@50 $generated@@88)) $generated@@88)
 :pattern ( ($generated@@50 $generated@@88))
))) (forall (($generated@@89 T@U) ($generated@@90 T@U) ) (! (let (($generated@@91 ($generated@@46 (type $generated@@90))))
(= (type ($generated@@51 $generated@@89 $generated@@90)) $generated@@91))
 :pattern ( ($generated@@51 $generated@@89 $generated@@90))
))) (= ($generated@@1 $generated@@49) 8)) (forall (($generated@@92 T@U) ($generated@@93 T@U) ($generated@@94 T@U) ) (! (= (type ($generated@@56 $generated@@92 $generated@@93 $generated@@94)) $generated@@49)
 :pattern ( ($generated@@56 $generated@@92 $generated@@93 $generated@@94))
))) (forall (($generated@@95 T@U) ($generated@@96 T@U) ($generated@@97 T@U) ) (! (let (($generated@@98 ($generated@@46 (type $generated@@96))))
 (=> (= (type $generated@@97) $generated@@98) (= ($generated@@51 ($generated@@56 $generated@@95 $generated@@96 $generated@@97) $generated@@96) $generated@@97)))
 :weight 0
))) (and (forall (($generated@@99 T@U) ($generated@@100 T@U) ($generated@@101 T@U) ($generated@@102 T@U) ) (!  (or (= $generated@@101 $generated@@102) (= ($generated@@51 ($generated@@56 $generated@@100 $generated@@101 $generated@@99) $generated@@102) ($generated@@51 $generated@@100 $generated@@102)))
 :weight 0
)) (forall (($generated@@103 T@U) ($generated@@104 T@U) ($generated@@105 T@U) ($generated@@106 T@U) ) (!  (or true (= ($generated@@51 ($generated@@56 $generated@@104 $generated@@105 $generated@@103) $generated@@106) ($generated@@51 $generated@@104 $generated@@106)))
 :weight 0
)))) (= ($generated@@1 $generated@@47) 9)) (forall (($generated@@107 T@T) ($generated@@108 T@T) ) (= ($generated@@1 ($generated@@57 $generated@@107 $generated@@108)) 10))) (forall (($generated@@109 T@T) ($generated@@110 T@T) ) (! (= ($generated@@58 ($generated@@57 $generated@@109 $generated@@110)) $generated@@109)
 :pattern ( ($generated@@57 $generated@@109 $generated@@110))
))) (forall (($generated@@111 T@T) ($generated@@112 T@T) ) (! (= ($generated@@59 ($generated@@57 $generated@@111 $generated@@112)) $generated@@112)
 :pattern ( ($generated@@57 $generated@@111 $generated@@112))
))) (forall (($generated@@113 T@U) ($generated@@114 T@U) ($generated@@115 T@U) ) (! (let (($generated@@116 ($generated@@59 (type $generated@@113))))
(= (type ($generated@@44 $generated@@113 $generated@@114 $generated@@115)) $generated@@116))
 :pattern ( ($generated@@44 $generated@@113 $generated@@114 $generated@@115))
))) (forall (($generated@@117 T@U) ($generated@@118 T@U) ($generated@@119 T@U) ($generated@@120 T@U) ) (! (let (($generated@@121 (type $generated@@120)))
(let (($generated@@122 (type $generated@@118)))
(= (type ($generated@@60 $generated@@117 $generated@@118 $generated@@119 $generated@@120)) ($generated@@57 $generated@@122 $generated@@121))))
 :pattern ( ($generated@@60 $generated@@117 $generated@@118 $generated@@119 $generated@@120))
))) (forall (($generated@@123 T@U) ($generated@@124 T@U) ($generated@@125 T@U) ($generated@@126 T@U) ) (! (let (($generated@@127 ($generated@@59 (type $generated@@123))))
 (=> (= (type $generated@@126) $generated@@127) (= ($generated@@44 ($generated@@60 $generated@@123 $generated@@124 $generated@@125 $generated@@126) $generated@@124 $generated@@125) $generated@@126)))
 :weight 0
))) (and (and (forall (($generated@@128 T@U) ($generated@@129 T@U) ($generated@@130 T@U) ($generated@@131 T@U) ($generated@@132 T@U) ($generated@@133 T@U) ) (!  (or (= $generated@@130 $generated@@132) (= ($generated@@44 ($generated@@60 $generated@@129 $generated@@130 $generated@@131 $generated@@128) $generated@@132 $generated@@133) ($generated@@44 $generated@@129 $generated@@132 $generated@@133)))
 :weight 0
)) (forall (($generated@@134 T@U) ($generated@@135 T@U) ($generated@@136 T@U) ($generated@@137 T@U) ($generated@@138 T@U) ($generated@@139 T@U) ) (!  (or (= $generated@@137 $generated@@139) (= ($generated@@44 ($generated@@60 $generated@@135 $generated@@136 $generated@@137 $generated@@134) $generated@@138 $generated@@139) ($generated@@44 $generated@@135 $generated@@138 $generated@@139)))
 :weight 0
))) (forall (($generated@@140 T@U) ($generated@@141 T@U) ($generated@@142 T@U) ($generated@@143 T@U) ($generated@@144 T@U) ($generated@@145 T@U) ) (!  (or true (= ($generated@@44 ($generated@@60 $generated@@141 $generated@@142 $generated@@143 $generated@@140) $generated@@144 $generated@@145) ($generated@@44 $generated@@141 $generated@@144 $generated@@145)))
 :weight 0
)))) (forall (($generated@@146 T@U) ($generated@@147 T@U) ($generated@@148 T@U) ($generated@@149 Bool) ) (! (= (type ($generated@@45 $generated@@146 $generated@@147 $generated@@148 $generated@@149)) ($generated@@57 $generated@@47 $generated@@4))
 :pattern ( ($generated@@45 $generated@@146 $generated@@147 $generated@@148 $generated@@149))
))))
(assert (forall (($generated@@150 T@U) ($generated@@151 T@U) ($generated@@152 T@U) ($generated@@153 Bool) ($generated@@154 T@U) ($generated@@155 T@U) ) (! (let (($generated@@156 ($generated@@46 (type $generated@@155))))
 (=> (and (and (and (and (= (type $generated@@150) $generated@@47) (= (type $generated@@151) ($generated@@48 $generated@@47 $generated@@49))) (= (type $generated@@152) ($generated@@50 $generated@@4))) (= (type $generated@@154) $generated@@47)) (= (type $generated@@155) ($generated@@50 $generated@@156))) (= ($generated@@0 ($generated@@44 ($generated@@45 $generated@@150 $generated@@151 $generated@@152 $generated@@153) $generated@@154 $generated@@155))  (=> (and (not (= $generated@@154 $generated@@150)) ($generated@@0 ($generated@@51 ($generated@@52 $generated@@151 $generated@@154) $generated@@152))) $generated@@153))))
 :pattern ( ($generated@@44 ($generated@@45 $generated@@150 $generated@@151 $generated@@152 $generated@@153) $generated@@154 $generated@@155))
)))
(assert (forall (($generated@@158 Int) ) (! (= ($generated@@157 $generated@@158) $generated@@158)
 :pattern ( ($generated@@157 $generated@@158))
)))
(assert (forall (($generated@@160 T@U) ) (! (let (($generated@@161 (type $generated@@160)))
(= (type ($generated@@159 $generated@@160)) $generated@@161))
 :pattern ( ($generated@@159 $generated@@160))
)))
(assert (forall (($generated@@162 T@U) ) (! (= ($generated@@159 $generated@@162) $generated@@162)
 :pattern ( ($generated@@159 $generated@@162))
)))
(assert  (and (and (= ($generated@@1 $generated@@165) 11) (forall (($generated@@166 T@U) ) (! (= (type ($generated@@163 $generated@@166)) $generated@@165)
 :pattern ( ($generated@@163 $generated@@166))
))) (forall (($generated@@167 T@T) ($generated@@168 T@U) ) (! (= (type ($generated@@164 $generated@@167 $generated@@168)) $generated@@167)
 :pattern ( ($generated@@164 $generated@@167 $generated@@168))
))))
(assert (forall (($generated@@169 T@U) ) (! (let (($generated@@170 (type $generated@@169)))
(= ($generated@@164 $generated@@170 ($generated@@163 $generated@@169)) $generated@@169))
 :pattern ( ($generated@@163 $generated@@169))
)))
(assert (forall (($generated@@171 Int) ) (! (= ($generated@@163 ($generated@@8 ($generated@@157 $generated@@171))) ($generated@@159 ($generated@@163 ($generated@@8 $generated@@171))))
 :pattern ( ($generated@@163 ($generated@@8 ($generated@@157 $generated@@171))))
)))
(assert (forall (($generated@@172 T@U) ) (! (= ($generated@@163 ($generated@@159 $generated@@172)) ($generated@@159 ($generated@@163 $generated@@172)))
 :pattern ( ($generated@@163 ($generated@@159 $generated@@172)))
)))
(push 1)
(declare-fun ControlFlow (Int Int) Int)
(declare-fun $generated@@173 () Int)
(declare-fun $generated@@174 () Int)
(declare-fun $generated@@175 () Int)
(declare-fun $generated@@176 () Int)
(declare-fun $generated@@177 () T@U)
(declare-fun $generated@@178 () T@U)
(declare-fun $generated@@179 () T@U)
(declare-fun $generated@@180 () T@U)
(declare-fun $generated@@181 (T@U) Bool)
(declare-fun $generated@@182 (T@U) Bool)
(declare-fun $generated@@183 () Int)
(assert  (and (and (and (= (type $generated@@177) ($generated@@57 $generated@@47 $generated@@4)) (= (type $generated@@178) $generated@@47)) (= (type $generated@@179) ($generated@@48 $generated@@47 $generated@@49))) (= (type $generated@@180) ($generated@@50 $generated@@4))))
(set-option :timeout 0)
(set-option :rlimit 0)
(assert (not
 (=> (= (ControlFlow 0 0) 8) (let (($generated@@184  (=> (= (ControlFlow 0 4) (- 0 3)) (<= ($generated@@157 0) $generated@@173))))
(let (($generated@@185  (=> (and (and (<= ($generated@@157 0) $generated@@174) (= $generated@@175 ($generated@@157 13))) (and (= $generated@@173 $generated@@175) (= (ControlFlow 0 6) 4))) $generated@@184)))
(let (($generated@@186  (=> (and (and (<= $generated@@174 ($generated@@157 0)) (= $generated@@176 ($generated@@157 12))) (and (= $generated@@173 $generated@@176) (= (ControlFlow 0 5) 4))) $generated@@184)))
(let (($generated@@187  (=> (and (and (< ($generated@@157 0) $generated@@174) (< $generated@@174 ($generated@@157 0))) (= (ControlFlow 0 2) (- 0 1))) false)))
(let (($generated@@188  (=> (= $generated@@177 ($generated@@45 $generated@@178 $generated@@179 $generated@@180 false)) (and (and (=> (= (ControlFlow 0 7) 5) $generated@@186) (=> (= (ControlFlow 0 7) 6) $generated@@185)) (=> (= (ControlFlow 0 7) 2) $generated@@187)))))
(let (($generated@@189  (=> (and (and ($generated@@181 $generated@@179) ($generated@@182 $generated@@179)) (and (= 0 $generated@@183) (= (ControlFlow 0 8) 7))) $generated@@188)))
$generated@@189)))))))
))
(check-sat)
(pop 1)
; Valid
(get-info :rlimit)
(reset)
(set-option :rlimit 0)
; did a full reset
(reset)
(set-option :print-success false)
(set-info :smt-lib-version 2.6)
(set-option :auto_config false)
(set-option :type_check true)
(set-option :smt.case_split 3)
(set-option :smt.qi.eager_threshold 100)
(set-option :smt.delay_units true)
(set-option :smt.arith.solver 2)
(set-option :smt.mbqi false)
(set-option :model.compact false)
(set-option :model.v2 true)
(set-option :pp.bv_literals false)
; done setting options


(set-info :category "industrial")
(declare-sort |T@U| 0)
(declare-sort |T@T| 0)
(declare-fun real_pow (Real Real) Real)
(declare-fun UOrdering2 (|T@U| |T@U|) Bool)
(declare-fun UOrdering3 (|T@T| |T@U| |T@U|) Bool)
(declare-fun tickleBool (Bool) Bool)
(assert (and (tickleBool true) (tickleBool false)))
(declare-fun $generated (T@U) Int)
(declare-fun $generated@@0 (T@U) Bool)
(declare-fun $generated@@1 (T@T) Int)
(declare-fun $generated@@2 () T@T)
(declare-fun $generated@@3 () T@T)
(declare-fun $generated@@4 () T@T)
(declare-fun $generated@@5 () T@T)
(declare-fun $generated@@6 () T@T)
(declare-fun $generated@@7 () T@T)
(declare-fun $generated@@8 (Int) T@U)
(declare-fun type (T@U) T@T)
(declare-fun $generated@@9 (Real) T@U)
(declare-fun $generated@@10 (T@U) Real)
(declare-fun $generated@@11 (Bool) T@U)
(declare-fun $generated@@12 (RoundingMode) T@U)
(declare-fun $generated@@13 (T@U) RoundingMode)
(declare-fun $generated@@14 (String) T@U)
(declare-fun $generated@@15 (T@U) String)
(declare-fun $generated@@16 ((RegEx String)) T@U)
(declare-fun $generated@@17 (T@U) (RegEx String))
(declare-fun $generated@@44 () T@U)
(declare-fun $generated@@45 () T@U)
(declare-fun $generated@@46 () T@U)
(declare-fun $generated@@47 () T@U)
(declare-fun $generated@@48 () T@U)
(declare-fun $generated@@49 () T@U)
(declare-fun $generated@@50 () T@U)
(declare-fun $generated@@51 () T@U)
(declare-fun $generated@@52 () T@U)
(declare-fun $generated@@53 () T@U)
(declare-fun $generated@@54 () T@U)
(declare-fun $generated@@55 () T@U)
(declare-fun $generated@@56 () T@U)
(declare-fun $generated@@57 () T@U)
(declare-fun $generated@@58 () T@U)
(declare-fun $generated@@59 () T@U)
(declare-fun $generated@@60 () T@U)
(declare-fun $generated@@61 () T@U)
(declare-fun $generated@@62 () T@U)
(declare-fun $generated@@63 () T@U)
(declare-fun $generated@@64 () T@U)
(declare-fun $generated@@65 () T@U)
(declare-fun $generated@@66 () T@U)
(declare-fun $generated@@67 () T@T)
(declare-fun $generated@@68 () T@T)
(declare-fun $generated@@69 (T@T) T@T)
(declare-fun $generated@@70 (T@T) T@T)
(declare-fun $generated@@71 () T@T)
(declare-fun $generated@@72 () T@T)
(declare-fun $generated@@75 (T@U) Int)
(declare-fun $generated@@76 (T@U) T@U)
(declare-fun $generated@@78 (T@U T@U T@U) Bool)
(declare-fun $generated@@79 (Int) T@U)
(declare-fun $generated@@80 (T@T T@T) T@T)
(declare-fun $generated@@81 () T@T)
(declare-fun $generated@@82 () T@T)
(declare-fun $generated@@83 (T@T) T@T)
(declare-fun $generated@@84 (T@T) T@T)
(declare-fun $generated@@85 (T@U T@U) T@U)
(declare-fun $generated@@86 (T@U T@U T@U) T@U)
(declare-fun $generated@@87 (T@U T@U) T@U)
(declare-fun $generated@@88 (T@U T@U T@U) T@U)
(declare-fun $generated@@136 (T@U) Int)
(declare-fun $generated@@137 (T@U) T@U)
(declare-fun $generated@@138 () T@U)
(declare-fun $generated@@139 (T@U) T@U)
(declare-fun $generated@@140 (T@U T@U) Bool)
(declare-fun $generated@@145 (T@U T@U) Bool)
(declare-fun $generated@@152 (T@U) Bool)
(declare-fun $generated@@157 (T@U) T@U)
(declare-fun $generated@@162 (T@U) Bool)
(declare-fun $generated@@163 (T@U T@U) T@U)
(declare-fun $generated@@164 () T@T)
(declare-fun $generated@@170 (T@U T@U) Bool)
(declare-fun $generated@@171 (T@U) T@U)
(declare-fun $generated@@172 (T@U) T@U)
(declare-fun $generated@@173 () T@T)
(declare-fun $generated@@178 (T@U) T@U)
(declare-fun $generated@@179 (T@U) Bool)
(declare-fun $generated@@183 (T@U T@U) T@U)
(declare-fun $generated@@184 (T@U T@U) Bool)
(declare-fun $generated@@193 (T@U) T@U)
(declare-fun $generated@@198 (T@U) T@U)
(declare-fun $generated@@203 (Int) Int)
(declare-fun $generated@@205 (T@U) T@U)
(declare-fun $generated@@209 (T@U T@U T@U) Bool)
(declare-fun $generated@@215 (T@U) T@U)
(declare-fun $generated@@221 (T@T) T@U)
(declare-fun $generated@@222 (T@U) Int)
(declare-fun $generated@@223 (T@T) T@T)
(declare-fun $generated@@224 (T@T) T@T)
(declare-fun $generated@@231 (T@U) T@U)
(declare-fun $generated@@244 (T@U) Int)
(declare-fun $generated@@245 (T@T) T@U)
(declare-fun $generated@@250 (T@U) T@U)
(declare-fun $generated@@254 (T@U) T@U)
(declare-fun $generated@@255 (T@T T@T) T@U)
(declare-fun $generated@@256 (T@T T@T) T@T)
(declare-fun $generated@@257 (T@T) T@T)
(declare-fun $generated@@258 (T@T) T@T)
(declare-fun $generated@@272 (T@U) T@U)
(declare-fun $generated@@273 (T@T T@T) T@U)
(declare-fun $generated@@274 (T@T T@T) T@T)
(declare-fun $generated@@275 (T@T) T@T)
(declare-fun $generated@@276 (T@T) T@T)
(declare-fun $generated@@299 (T@U) T@U)
(declare-fun $generated@@310 (T@U) T@U)
(declare-fun $generated@@330 (T@U) T@U)
(declare-fun $generated@@331 (T@T T@U) T@U)
(declare-fun $generated@@332 (T@U) T@U)
(declare-fun $generated@@341 (T@U) T@U)
(declare-fun $generated@@342 (T@U) T@U)
(declare-fun $generated@@359 (T@U T@U) T@U)
(declare-fun $generated@@367 (T@U T@U) T@U)
(declare-fun $generated@@378 (Int) T@U)
(declare-fun $generated@@384 (T@T) T@U)
(declare-fun $generated@@408 () T@T)
(declare-fun $generated@@417 (T@U) T@U)
(declare-fun $generated@@421 (T@U) T@U)
(declare-fun $generated@@427 (T@U) T@U)
(declare-fun $generated@@431 (T@U) T@U)
(declare-fun $generated@@439 (T@U) T@U)
(declare-fun $generated@@443 (T@U) T@U)
(declare-fun $generated@@451 (T@U) T@U)
(declare-fun $generated@@452 (T@U Int) T@U)
(declare-fun $generated@@461 (T@U) Int)
(declare-fun $generated@@463 (T@U) T@U)
(declare-fun $generated@@467 (T@U) T@U)
(declare-fun $generated@@471 (T@U) T@U)
(declare-fun $generated@@475 (T@U) T@U)
(declare-fun $generated@@480 (T@U) Int)
(declare-fun $generated@@482 (T@U) T@U)
(declare-fun $generated@@485 (T@U) T@U)
(declare-fun $generated@@502 (T@U) Int)
(declare-fun $generated@@503 (T@U) Int)
(declare-fun $generated@@519 (T@U T@U T@U) T@U)
(declare-fun $generated@@520 (T@U T@U T@U T@U) T@U)
(declare-fun $generated@@521 (T@T T@T) T@T)
(declare-fun $generated@@522 (T@T) T@T)
(declare-fun $generated@@523 (T@T) T@T)
(declare-fun $generated@@524 (T@U T@U T@U T@U) T@U)
(declare-fun $generated@@626 (T@U) Int)
(assert  (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (= ($generated@@1 $generated@@2) 0) (= ($generated@@1 $generated@@3) 1)) (= ($generated@@1 $generated@@4) 2)) (= ($generated@@1 $generated@@5) 3)) (= ($generated@@1 $generated@@6) 4)) (= ($generated@@1 $generated@@7) 5)) (forall (($generated@@18 Int) ) (! (= ($generated ($generated@@8 $generated@@18)) $generated@@18)
 :pattern ( ($generated@@8 $generated@@18))
))) (forall (($generated@@19 T@U) ) (!  (=> (= (type $generated@@19) $generated@@2) (= ($generated@@8 ($generated $generated@@19)) $generated@@19))
 :pattern ( ($generated $generated@@19))
))) (forall (($generated@@20 Int) ) (! (= (type ($generated@@8 $generated@@20)) $generated@@2)
 :pattern ( ($generated@@8 $generated@@20))
))) (forall (($generated@@21 Real) ) (! (= ($generated@@10 ($generated@@9 $generated@@21)) $generated@@21)
 :pattern ( ($generated@@9 $generated@@21))
))) (forall (($generated@@22 T@U) ) (!  (=> (= (type $generated@@22) $generated@@3) (= ($generated@@9 ($generated@@10 $generated@@22)) $generated@@22))
 :pattern ( ($generated@@10 $generated@@22))
))) (forall (($generated@@23 Real) ) (! (= (type ($generated@@9 $generated@@23)) $generated@@3)
 :pattern ( ($generated@@9 $generated@@23))
))) (forall (($generated@@24 Bool) ) (! (= ($generated@@0 ($generated@@11 $generated@@24)) $generated@@24)
 :pattern ( ($generated@@11 $generated@@24))
))) (forall (($generated@@25 T@U) ) (!  (=> (= (type $generated@@25) $generated@@4) (= ($generated@@11 ($generated@@0 $generated@@25)) $generated@@25))
 :pattern ( ($generated@@0 $generated@@25))
))) (forall (($generated@@26 Bool) ) (! (= (type ($generated@@11 $generated@@26)) $generated@@4)
 :pattern ( ($generated@@11 $generated@@26))
))) (forall (($generated@@27 RoundingMode) ) (! (= ($generated@@13 ($generated@@12 $generated@@27)) $generated@@27)
 :pattern ( ($generated@@12 $generated@@27))
))) (forall (($generated@@28 T@U) ) (!  (=> (= (type $generated@@28) $generated@@5) (= ($generated@@12 ($generated@@13 $generated@@28)) $generated@@28))
 :pattern ( ($generated@@13 $generated@@28))
))) (forall (($generated@@29 RoundingMode) ) (! (= (type ($generated@@12 $generated@@29)) $generated@@5)
 :pattern ( ($generated@@12 $generated@@29))
))) (forall (($generated@@30 String) ) (! (= ($generated@@15 ($generated@@14 $generated@@30)) $generated@@30)
 :pattern ( ($generated@@14 $generated@@30))
))) (forall (($generated@@31 T@U) ) (!  (=> (= (type $generated@@31) $generated@@6) (= ($generated@@14 ($generated@@15 $generated@@31)) $generated@@31))
 :pattern ( ($generated@@15 $generated@@31))
))) (forall (($generated@@32 String) ) (! (= (type ($generated@@14 $generated@@32)) $generated@@6)
 :pattern ( ($generated@@14 $generated@@32))
))) (forall (($generated@@33 (RegEx String)) ) (! (= ($generated@@17 ($generated@@16 $generated@@33)) $generated@@33)
 :pattern ( ($generated@@16 $generated@@33))
))) (forall (($generated@@34 T@U) ) (!  (=> (= (type $generated@@34) $generated@@7) (= ($generated@@16 ($generated@@17 $generated@@34)) $generated@@34))
 :pattern ( ($generated@@17 $generated@@34))
))) (forall (($generated@@35 (RegEx String)) ) (! (= (type ($generated@@16 $generated@@35)) $generated@@7)
 :pattern ( ($generated@@16 $generated@@35))
))))
(assert (forall (($generated@@36 T@U) ) (! (UOrdering2 $generated@@36 $generated@@36)
 :no-pattern ($generated $generated@@36)
 :no-pattern ($generated@@0 $generated@@36)
)))
(assert (forall (($generated@@37 T@U) ($generated@@38 T@U) ($generated@@39 T@U) ) (! (let (($generated@@40 (type $generated@@37)))
 (=> (and (and (= (type $generated@@38) $generated@@40) (= (type $generated@@39) $generated@@40)) (and (UOrdering2 $generated@@37 $generated@@38) (UOrdering2 $generated@@38 $generated@@39))) (UOrdering2 $generated@@37 $generated@@39)))
 :pattern ( (UOrdering2 $generated@@37 $generated@@38) (UOrdering2 $generated@@38 $generated@@39))
)))
(assert (forall (($generated@@41 T@U) ($generated@@42 T@U) ) (! (let (($generated@@43 (type $generated@@41)))
 (=> (= (type $generated@@42) $generated@@43) (=> (and (UOrdering2 $generated@@41 $generated@@42) (UOrdering2 $generated@@42 $generated@@41)) (= $generated@@41 $generated@@42))))
 :pattern ( (UOrdering2 $generated@@41 $generated@@42) (UOrdering2 $generated@@42 $generated@@41))
)))
(assert  (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (= ($generated@@1 $generated@@67) 6) (= (type $generated@@44) $generated@@67)) (= (type $generated@@45) $generated@@67)) (= (type $generated@@46) $generated@@67)) (= (type $generated@@47) $generated@@67)) (= (type $generated@@48) $generated@@67)) (= ($generated@@1 $generated@@68) 7)) (= (type $generated@@49) $generated@@68)) (= (type $generated@@50) $generated@@68)) (= (type $generated@@51) $generated@@68)) (= (type $generated@@52) $generated@@68)) (= (type $generated@@53) $generated@@68)) (= (type $generated@@54) $generated@@68)) (= (type $generated@@55) $generated@@68)) (= (type $generated@@56) $generated@@68)) (= (type $generated@@57) $generated@@68)) (= (type $generated@@58) $generated@@68)) (= (type $generated@@59) $generated@@68)) (forall (($generated@@73 T@T) ) (= ($generated@@1 ($generated@@69 $generated@@73)) 8))) (forall (($generated@@74 T@T) ) (! (= ($generated@@70 ($generated@@69 $generated@@74)) $generated@@74)
 :pattern ( ($generated@@69 $generated@@74))
))) (= (type $generated@@60) ($generated@@69 $generated@@4))) (= (type $generated@@61) $generated@@68)) (= (type $generated@@62) $generated@@68)) (= ($generated@@1 $generated@@71) 9)) (= (type $generated@@63) $generated@@71)) (= (type $generated@@64) $generated@@68)) (= ($generated@@1 $generated@@72) 10)) (= (type $generated@@65) $generated@@72)) (= (type $generated@@66) $generated@@72)))
(assert (distinct $generated@@44 $generated@@45 $generated@@46 $generated@@47 $generated@@48 $generated@@49 $generated@@50 $generated@@51 $generated@@52 $generated@@53 $generated@@54 $generated@@55 $generated@@56 $generated@@57 $generated@@58 $generated@@59 $generated@@60 $generated@@61 $generated@@62 $generated@@63 $generated@@64 $generated@@65 $generated@@66)
)
(assert (= ($generated@@75 $generated@@60) 0))
(assert (forall (($generated@@77 T@U) ) (! (= (type ($generated@@76 $generated@@77)) $generated@@68)
 :pattern ( ($generated@@76 $generated@@77))
)))
(assert (= ($generated@@76 $generated@@44) $generated@@49))
(assert (= ($generated@@76 $generated@@45) $generated@@50))
(assert (= ($generated@@76 $generated@@46) $generated@@51))
(assert (= ($generated@@76 $generated@@47) $generated@@52))
(assert (= ($generated@@76 $generated@@48) $generated@@53))
(assert  (and (and (and (and (and (and (and (and (and (and (and (and (and (forall (($generated@@89 T@T) ($generated@@90 T@T) ) (= ($generated@@1 ($generated@@80 $generated@@89 $generated@@90)) 11)) (forall (($generated@@91 T@T) ($generated@@92 T@T) ) (! (= ($generated@@83 ($generated@@80 $generated@@91 $generated@@92)) $generated@@91)
 :pattern ( ($generated@@80 $generated@@91 $generated@@92))
))) (forall (($generated@@93 T@T) ($generated@@94 T@T) ) (! (= ($generated@@84 ($generated@@80 $generated@@93 $generated@@94)) $generated@@94)
 :pattern ( ($generated@@80 $generated@@93 $generated@@94))
))) (forall (($generated@@95 T@U) ($generated@@96 T@U) ) (! (let (($generated@@97 ($generated@@84 (type $generated@@95))))
(= (type ($generated@@85 $generated@@95 $generated@@96)) $generated@@97))
 :pattern ( ($generated@@85 $generated@@95 $generated@@96))
))) (forall (($generated@@98 T@U) ($generated@@99 T@U) ($generated@@100 T@U) ) (! (let (($generated@@101 (type $generated@@100)))
(let (($generated@@102 (type $generated@@99)))
(= (type ($generated@@86 $generated@@98 $generated@@99 $generated@@100)) ($generated@@80 $generated@@102 $generated@@101))))
 :pattern ( ($generated@@86 $generated@@98 $generated@@99 $generated@@100))
))) (forall (($generated@@103 T@U) ($generated@@104 T@U) ($generated@@105 T@U) ) (! (let (($generated@@106 ($generated@@84 (type $generated@@103))))
 (=> (= (type $generated@@105) $generated@@106) (= ($generated@@85 ($generated@@86 $generated@@103 $generated@@104 $generated@@105) $generated@@104) $generated@@105)))
 :weight 0
))) (and (forall (($generated@@107 T@U) ($generated@@108 T@U) ($generated@@109 T@U) ($generated@@110 T@U) ) (!  (or (= $generated@@109 $generated@@110) (= ($generated@@85 ($generated@@86 $generated@@108 $generated@@109 $generated@@107) $generated@@110) ($generated@@85 $generated@@108 $generated@@110)))
 :weight 0
)) (forall (($generated@@111 T@U) ($generated@@112 T@U) ($generated@@113 T@U) ($generated@@114 T@U) ) (!  (or true (= ($generated@@85 ($generated@@86 $generated@@112 $generated@@113 $generated@@111) $generated@@114) ($generated@@85 $generated@@112 $generated@@114)))
 :weight 0
)))) (= ($generated@@1 $generated@@81) 12)) (forall (($generated@@115 T@U) ($generated@@116 T@U) ) (! (let (($generated@@117 ($generated@@70 (type $generated@@116))))
(= (type ($generated@@87 $generated@@115 $generated@@116)) $generated@@117))
 :pattern ( ($generated@@87 $generated@@115 $generated@@116))
))) (= ($generated@@1 $generated@@82) 13)) (forall (($generated@@118 T@U) ($generated@@119 T@U) ($generated@@120 T@U) ) (! (= (type ($generated@@88 $generated@@118 $generated@@119 $generated@@120)) $generated@@82)
 :pattern ( ($generated@@88 $generated@@118 $generated@@119 $generated@@120))
))) (forall (($generated@@121 T@U) ($generated@@122 T@U) ($generated@@123 T@U) ) (! (let (($generated@@124 ($generated@@70 (type $generated@@122))))
 (=> (= (type $generated@@123) $generated@@124) (= ($generated@@87 ($generated@@88 $generated@@121 $generated@@122 $generated@@123) $generated@@122) $generated@@123)))
 :weight 0
))) (and (forall (($generated@@125 T@U) ($generated@@126 T@U) ($generated@@127 T@U) ($generated@@128 T@U) ) (!  (or (= $generated@@127 $generated@@128) (= ($generated@@87 ($generated@@88 $generated@@126 $generated@@127 $generated@@125) $generated@@128) ($generated@@87 $generated@@126 $generated@@128)))
 :weight 0
)) (forall (($generated@@129 T@U) ($generated@@130 T@U) ($generated@@131 T@U) ($generated@@132 T@U) ) (!  (or true (= ($generated@@87 ($generated@@88 $generated@@130 $generated@@131 $generated@@129) $generated@@132) ($generated@@87 $generated@@130 $generated@@132)))
 :weight 0
)))) (forall (($generated@@133 Int) ) (! (= (type ($generated@@79 $generated@@133)) $generated@@67)
 :pattern ( ($generated@@79 $generated@@133))
))))
(assert (forall (($generated@@134 T@U) ($generated@@135 T@U) ) (!  (=> (and (= (type $generated@@134) $generated@@2) (= (type $generated@@135) ($generated@@80 $generated@@81 $generated@@82))) ($generated@@78 $generated@@134 ($generated@@79 0) $generated@@135))
 :pattern ( ($generated@@78 $generated@@134 ($generated@@79 0) $generated@@135))
)))
(assert  (and (and (forall (($generated@@141 T@U) ) (! (= (type ($generated@@137 $generated@@141)) $generated@@67)
 :pattern ( ($generated@@137 $generated@@141))
)) (= (type $generated@@138) $generated@@81)) (forall (($generated@@142 T@U) ) (! (= (type ($generated@@139 $generated@@142)) $generated@@67)
 :pattern ( ($generated@@139 $generated@@142))
))))
(assert (forall (($generated@@143 T@U) ($generated@@144 T@U) ) (!  (=> (and (and (= (type $generated@@143) $generated@@67) (= (type $generated@@144) $generated@@81)) (and (not (= $generated@@144 $generated@@138)) (= ($generated@@139 $generated@@144) ($generated@@137 $generated@@143)))) ($generated@@140 ($generated@@8 ($generated@@136 $generated@@144)) $generated@@46))
 :pattern ( ($generated@@136 $generated@@144) ($generated@@137 $generated@@143))
)))
(assert (forall (($generated@@146 T@U) ($generated@@147 T@U) ) (!  (=> (and (and (= (type $generated@@146) ($generated@@80 $generated@@81 $generated@@82)) (= (type $generated@@147) ($generated@@80 $generated@@81 $generated@@82))) ($generated@@145 $generated@@146 $generated@@147)) (forall (($generated@@148 T@U) ) (!  (=> (and (= (type $generated@@148) $generated@@81) ($generated@@0 ($generated@@87 ($generated@@85 $generated@@146 $generated@@148) $generated@@60))) ($generated@@0 ($generated@@87 ($generated@@85 $generated@@147 $generated@@148) $generated@@60)))
 :pattern ( ($generated@@87 ($generated@@85 $generated@@147 $generated@@148) $generated@@60))
)))
 :pattern ( ($generated@@145 $generated@@146 $generated@@147))
)))
(assert (forall (($generated@@149 T@U) ($generated@@150 T@U) ($generated@@151 T@U) ) (!  (=> (and (and (= (type $generated@@149) $generated@@67) (= (type $generated@@150) $generated@@81)) (= (type $generated@@151) ($generated@@80 $generated@@81 $generated@@82))) (= ($generated@@78 $generated@@150 ($generated@@137 $generated@@149) $generated@@151)  (or (= $generated@@150 $generated@@138) ($generated@@0 ($generated@@87 ($generated@@85 $generated@@151 $generated@@150) $generated@@60)))))
 :pattern ( ($generated@@78 $generated@@150 ($generated@@137 $generated@@149) $generated@@151))
)))
(assert (forall (($generated@@153 T@U) ($generated@@154 T@U) ($generated@@155 T@U) ) (!  (=> (and (and (and (= (type $generated@@153) $generated@@67) (= (type $generated@@154) ($generated@@80 $generated@@81 $generated@@82))) (= (type $generated@@155) $generated@@81)) (and (and ($generated@@152 $generated@@154) (and (not (= $generated@@155 $generated@@138)) (= ($generated@@139 $generated@@155) ($generated@@137 $generated@@153)))) ($generated@@0 ($generated@@87 ($generated@@85 $generated@@154 $generated@@155) $generated@@60)))) ($generated@@78 ($generated@@8 ($generated@@136 $generated@@155)) $generated@@46 $generated@@154))
 :pattern ( ($generated@@136 $generated@@155) ($generated@@87 ($generated@@85 $generated@@154 $generated@@155) $generated@@60) ($generated@@137 $generated@@153))
)))
(assert (forall (($generated@@156 T@U) ) (!  (=> (= (type $generated@@156) $generated@@2) ($generated@@140 $generated@@156 ($generated@@79 0)))
 :pattern ( ($generated@@140 $generated@@156 ($generated@@79 0)))
)))
(assert (forall (($generated@@158 T@U) ) (! (= (type ($generated@@157 $generated@@158)) $generated@@67)
 :pattern ( ($generated@@157 $generated@@158))
)))
(assert (forall (($generated@@159 T@U) ($generated@@160 T@U) ($generated@@161 T@U) ) (!  (=> (and (and (= (type $generated@@159) $generated@@67) (= (type $generated@@160) $generated@@81)) (= (type $generated@@161) ($generated@@80 $generated@@81 $generated@@82))) (= ($generated@@78 $generated@@160 ($generated@@157 $generated@@159) $generated@@161) ($generated@@78 $generated@@160 ($generated@@137 $generated@@159) $generated@@161)))
 :pattern ( ($generated@@78 $generated@@160 ($generated@@157 $generated@@159) $generated@@161))
)))
(assert  (and (= ($generated@@1 $generated@@164) 14) (forall (($generated@@165 T@U) ($generated@@166 T@U) ) (! (= (type ($generated@@163 $generated@@165 $generated@@166)) $generated@@67)
 :pattern ( ($generated@@163 $generated@@165 $generated@@166))
))))
(assert (forall (($generated@@167 T@U) ($generated@@168 T@U) ($generated@@169 T@U) ) (!  (=> (and (and (and (= (type $generated@@167) $generated@@67) (= (type $generated@@168) $generated@@67)) (= (type $generated@@169) $generated@@164)) ($generated@@140 $generated@@169 ($generated@@163 $generated@@167 $generated@@168))) ($generated@@162 $generated@@169))
 :pattern ( ($generated@@162 $generated@@169) ($generated@@140 $generated@@169 ($generated@@163 $generated@@167 $generated@@168)))
)))
(assert  (and (and (= ($generated@@1 $generated@@173) 15) (forall (($generated@@174 T@U) ) (! (= (type ($generated@@171 $generated@@174)) $generated@@173)
 :pattern ( ($generated@@171 $generated@@174))
))) (forall (($generated@@175 T@U) ) (! (= (type ($generated@@172 $generated@@175)) $generated@@173)
 :pattern ( ($generated@@172 $generated@@175))
))))
(assert (forall (($generated@@176 T@U) ($generated@@177 T@U) ) (!  (=> (and (and (= (type $generated@@176) $generated@@164) (= (type $generated@@177) $generated@@164)) true) (= ($generated@@170 $generated@@176 $generated@@177)  (and (= ($generated@@171 $generated@@176) ($generated@@171 $generated@@177)) (= ($generated@@172 $generated@@176) ($generated@@172 $generated@@177)))))
 :pattern ( ($generated@@170 $generated@@176 $generated@@177))
)))
(assert (forall (($generated@@180 T@U) ) (! (= (type ($generated@@178 $generated@@180)) $generated@@67)
 :pattern ( ($generated@@178 $generated@@180))
)))
(assert (forall (($generated@@181 T@U) ($generated@@182 T@U) ) (!  (=> (and (and (= (type $generated@@181) ($generated@@80 $generated@@173 $generated@@2)) (= (type $generated@@182) $generated@@67)) ($generated@@140 $generated@@181 ($generated@@178 $generated@@182))) ($generated@@179 $generated@@181))
 :pattern ( ($generated@@140 $generated@@181 ($generated@@178 $generated@@182)))
)))
(assert (forall (($generated@@185 T@U) ($generated@@186 T@U) ) (! (= (type ($generated@@183 $generated@@185 $generated@@186)) $generated@@164)
 :pattern ( ($generated@@183 $generated@@185 $generated@@186))
)))
(assert (forall (($generated@@187 T@U) ($generated@@188 T@U) ($generated@@189 T@U) ($generated@@190 T@U) ) (!  (=> (and (and (and (= (type $generated@@187) $generated@@67) (= (type $generated@@188) $generated@@67)) (= (type $generated@@189) $generated@@173)) (= (type $generated@@190) $generated@@173)) (= ($generated@@140 ($generated@@183 $generated@@189 $generated@@190) ($generated@@163 $generated@@187 $generated@@188))  (and ($generated@@184 $generated@@189 $generated@@187) ($generated@@184 $generated@@190 $generated@@188))))
 :pattern ( ($generated@@140 ($generated@@183 $generated@@189 $generated@@190) ($generated@@163 $generated@@187 $generated@@188)))
)))
(assert (forall (($generated@@191 T@U) ($generated@@192 T@U) ) (!  (=> (and (= (type $generated@@191) $generated@@164) (= (type $generated@@192) $generated@@164)) (= ($generated@@170 $generated@@191 $generated@@192) (= $generated@@191 $generated@@192)))
 :pattern ( ($generated@@170 $generated@@191 $generated@@192))
)))
(assert (forall (($generated@@194 T@U) ) (! (= (type ($generated@@193 $generated@@194)) $generated@@67)
 :pattern ( ($generated@@193 $generated@@194))
)))
(assert (forall (($generated@@195 T@U) ($generated@@196 T@U) ) (!  (=> (and (= (type $generated@@195) ($generated@@80 $generated@@173 $generated@@4)) (= (type $generated@@196) $generated@@67)) (= ($generated@@140 $generated@@195 ($generated@@193 $generated@@196)) (forall (($generated@@197 T@U) ) (!  (=> (and (= (type $generated@@197) $generated@@173) ($generated@@0 ($generated@@85 $generated@@195 $generated@@197))) ($generated@@184 $generated@@197 $generated@@196))
 :pattern ( ($generated@@85 $generated@@195 $generated@@197))
))))
 :pattern ( ($generated@@140 $generated@@195 ($generated@@193 $generated@@196)))
)))
(assert (forall (($generated@@199 T@U) ) (! (= (type ($generated@@198 $generated@@199)) $generated@@67)
 :pattern ( ($generated@@198 $generated@@199))
)))
(assert (forall (($generated@@200 T@U) ($generated@@201 T@U) ) (!  (=> (and (= (type $generated@@200) ($generated@@80 $generated@@173 $generated@@4)) (= (type $generated@@201) $generated@@67)) (= ($generated@@140 $generated@@200 ($generated@@198 $generated@@201)) (forall (($generated@@202 T@U) ) (!  (=> (and (= (type $generated@@202) $generated@@173) ($generated@@0 ($generated@@85 $generated@@200 $generated@@202))) ($generated@@184 $generated@@202 $generated@@201))
 :pattern ( ($generated@@85 $generated@@200 $generated@@202))
))))
 :pattern ( ($generated@@140 $generated@@200 ($generated@@198 $generated@@201)))
)))
(assert (forall (($generated@@204 Int) ) (! (= ($generated@@203 $generated@@204) $generated@@204)
 :pattern ( ($generated@@203 $generated@@204))
)))
(assert (forall (($generated@@206 T@U) ) (! (let (($generated@@207 (type $generated@@206)))
(= (type ($generated@@205 $generated@@206)) $generated@@207))
 :pattern ( ($generated@@205 $generated@@206))
)))
(assert (forall (($generated@@208 T@U) ) (! (= ($generated@@205 $generated@@208) $generated@@208)
 :pattern ( ($generated@@205 $generated@@208))
)))
(assert (forall (($generated@@210 T@U) ($generated@@211 T@U) ($generated@@212 T@U) ($generated@@213 T@U) ($generated@@214 T@U) ) (!  (=> (and (and (and (and (and (= (type $generated@@210) $generated@@67) (= (type $generated@@211) $generated@@67)) (= (type $generated@@212) $generated@@173)) (= (type $generated@@213) $generated@@173)) (= (type $generated@@214) ($generated@@80 $generated@@81 $generated@@82))) ($generated@@152 $generated@@214)) (= ($generated@@78 ($generated@@183 $generated@@212 $generated@@213) ($generated@@163 $generated@@210 $generated@@211) $generated@@214)  (and ($generated@@209 $generated@@212 $generated@@210 $generated@@214) ($generated@@209 $generated@@213 $generated@@211 $generated@@214))))
 :pattern ( ($generated@@78 ($generated@@183 $generated@@212 $generated@@213) ($generated@@163 $generated@@210 $generated@@211) $generated@@214))
)))
(assert (forall (($generated@@216 T@U) ) (! (= (type ($generated@@215 $generated@@216)) $generated@@71)
 :pattern ( ($generated@@215 $generated@@216))
)))
(assert (forall (($generated@@217 T@U) ) (!  (=> (= (type $generated@@217) $generated@@164) (= ($generated@@162 $generated@@217) (= ($generated@@215 $generated@@217) $generated@@63)))
 :pattern ( ($generated@@162 $generated@@217))
)))
(assert (forall (($generated@@218 T@U) ) (!  (=> (and (= (type $generated@@218) $generated@@164) ($generated@@162 $generated@@218)) (exists (($generated@@219 T@U) ($generated@@220 T@U) ) (!  (and (and (= (type $generated@@219) $generated@@173) (= (type $generated@@220) $generated@@173)) (= $generated@@218 ($generated@@183 $generated@@219 $generated@@220)))
 :no-pattern (type $generated@@219)
 :no-pattern (type $generated@@220)
 :no-pattern ($generated $generated@@219)
 :no-pattern ($generated@@0 $generated@@219)
 :no-pattern ($generated $generated@@220)
 :no-pattern ($generated@@0 $generated@@220)
)))
 :pattern ( ($generated@@162 $generated@@218))
)))
(assert  (and (and (forall (($generated@@225 T@T) ) (= ($generated@@1 ($generated@@223 $generated@@225)) 16)) (forall (($generated@@226 T@T) ) (! (= ($generated@@224 ($generated@@223 $generated@@226)) $generated@@226)
 :pattern ( ($generated@@223 $generated@@226))
))) (forall (($generated@@227 T@T) ) (! (= (type ($generated@@221 $generated@@227)) ($generated@@223 $generated@@227))
 :pattern ( ($generated@@221 $generated@@227))
))))
(assert (forall (($generated@@228 T@T) ) (! (= ($generated@@222 ($generated@@221 $generated@@228)) 0)
 :pattern ( ($generated@@221 $generated@@228))
)))
(assert (forall (($generated@@229 T@U) ($generated@@230 T@U) ) (!  (=> (and (= (type $generated@@229) $generated@@67) (= (type $generated@@230) $generated@@81)) (= ($generated@@140 $generated@@230 ($generated@@157 $generated@@229))  (and ($generated@@140 $generated@@230 ($generated@@137 $generated@@229)) (not (= $generated@@230 $generated@@138)))))
 :pattern ( ($generated@@140 $generated@@230 ($generated@@157 $generated@@229)))
)))
(assert (forall (($generated@@232 T@U) ) (! (= (type ($generated@@231 $generated@@232)) $generated@@173)
 :pattern ( ($generated@@231 $generated@@232))
)))
(assert (forall (($generated@@233 T@U) ($generated@@234 T@U) ($generated@@235 T@U) ) (!  (=> (and (= (type $generated@@234) $generated@@67) (= (type $generated@@235) ($generated@@80 $generated@@81 $generated@@82))) (= ($generated@@209 ($generated@@231 $generated@@233) $generated@@234 $generated@@235) ($generated@@78 $generated@@233 $generated@@234 $generated@@235)))
 :pattern ( ($generated@@209 ($generated@@231 $generated@@233) $generated@@234 $generated@@235))
)))
(assert (forall (($generated@@236 T@U) ($generated@@237 T@U) ($generated@@238 T@U) ($generated@@239 T@U) ) (!  (=> (and (and (and (and (and (= (type $generated@@236) ($generated@@80 $generated@@81 $generated@@82)) (= (type $generated@@237) ($generated@@80 $generated@@81 $generated@@82))) (= (type $generated@@238) $generated@@173)) (= (type $generated@@239) $generated@@67)) ($generated@@145 $generated@@236 $generated@@237)) ($generated@@209 $generated@@238 $generated@@239 $generated@@236)) ($generated@@209 $generated@@238 $generated@@239 $generated@@237))
 :pattern ( ($generated@@145 $generated@@236 $generated@@237) ($generated@@209 $generated@@238 $generated@@239 $generated@@236))
)))
(assert (forall (($generated@@240 T@U) ($generated@@241 T@U) ($generated@@242 T@U) ($generated@@243 T@U) ) (!  (=> (and (and (and (and (= (type $generated@@240) ($generated@@80 $generated@@81 $generated@@82)) (= (type $generated@@241) ($generated@@80 $generated@@81 $generated@@82))) (= (type $generated@@243) $generated@@67)) ($generated@@145 $generated@@240 $generated@@241)) ($generated@@78 $generated@@242 $generated@@243 $generated@@240)) ($generated@@78 $generated@@242 $generated@@243 $generated@@241))
 :pattern ( ($generated@@145 $generated@@240 $generated@@241) ($generated@@78 $generated@@242 $generated@@243 $generated@@240))
)))
(assert (forall (($generated@@246 T@T) ) (! (= (type ($generated@@245 $generated@@246)) ($generated@@80 $generated@@246 $generated@@2))
 :pattern ( ($generated@@245 $generated@@246))
)))
(assert (forall (($generated@@247 T@U) ) (! (let (($generated@@248 ($generated@@83 (type $generated@@247))))
 (=> (= (type $generated@@247) ($generated@@80 $generated@@248 $generated@@2)) (and (= (= ($generated@@244 $generated@@247) 0) (= $generated@@247 ($generated@@245 $generated@@248))) (=> (not (= ($generated@@244 $generated@@247) 0)) (exists (($generated@@249 T@U) ) (!  (and (= (type $generated@@249) $generated@@248) (< 0 ($generated ($generated@@85 $generated@@247 $generated@@249))))
 :no-pattern (type $generated@@249)
 :no-pattern ($generated $generated@@249)
 :no-pattern ($generated@@0 $generated@@249)
))))))
 :pattern ( ($generated@@244 $generated@@247))
)))
(assert (forall (($generated@@251 T@U) ) (! (= (type ($generated@@250 $generated@@251)) $generated@@72)
 :pattern ( ($generated@@250 $generated@@251))
)))
(assert (forall (($generated@@252 T@U) ) (!  (=> (= (type $generated@@252) $generated@@67) (and (= ($generated@@76 ($generated@@137 $generated@@252)) $generated@@61) (= ($generated@@250 ($generated@@137 $generated@@252)) $generated@@65)))
 :pattern ( ($generated@@137 $generated@@252))
)))
(assert (forall (($generated@@253 T@U) ) (!  (=> (= (type $generated@@253) $generated@@67) (and (= ($generated@@76 ($generated@@157 $generated@@253)) $generated@@62) (= ($generated@@250 ($generated@@157 $generated@@253)) $generated@@65)))
 :pattern ( ($generated@@157 $generated@@253))
)))
(assert  (and (and (and (and (forall (($generated@@259 T@T) ($generated@@260 T@T) ) (= ($generated@@1 ($generated@@256 $generated@@259 $generated@@260)) 17)) (forall (($generated@@261 T@T) ($generated@@262 T@T) ) (! (= ($generated@@257 ($generated@@256 $generated@@261 $generated@@262)) $generated@@261)
 :pattern ( ($generated@@256 $generated@@261 $generated@@262))
))) (forall (($generated@@263 T@T) ($generated@@264 T@T) ) (! (= ($generated@@258 ($generated@@256 $generated@@263 $generated@@264)) $generated@@264)
 :pattern ( ($generated@@256 $generated@@263 $generated@@264))
))) (forall (($generated@@265 T@U) ) (! (let (($generated@@266 ($generated@@257 (type $generated@@265))))
(= (type ($generated@@254 $generated@@265)) ($generated@@80 $generated@@266 $generated@@4)))
 :pattern ( ($generated@@254 $generated@@265))
))) (forall (($generated@@267 T@T) ($generated@@268 T@T) ) (! (= (type ($generated@@255 $generated@@267 $generated@@268)) ($generated@@256 $generated@@267 $generated@@268))
 :pattern ( ($generated@@255 $generated@@267 $generated@@268))
))))
(assert (forall (($generated@@269 T@U) ($generated@@270 T@T) ) (! (let (($generated@@271 (type $generated@@269)))
 (not ($generated@@0 ($generated@@85 ($generated@@254 ($generated@@255 $generated@@271 $generated@@270)) $generated@@269))))
 :pattern ( (let (($generated@@271 (type $generated@@269)))
($generated@@85 ($generated@@254 ($generated@@255 $generated@@271 $generated@@270)) $generated@@269)))
)))
(assert  (and (and (and (and (forall (($generated@@277 T@T) ($generated@@278 T@T) ) (= ($generated@@1 ($generated@@274 $generated@@277 $generated@@278)) 18)) (forall (($generated@@279 T@T) ($generated@@280 T@T) ) (! (= ($generated@@275 ($generated@@274 $generated@@279 $generated@@280)) $generated@@279)
 :pattern ( ($generated@@274 $generated@@279 $generated@@280))
))) (forall (($generated@@281 T@T) ($generated@@282 T@T) ) (! (= ($generated@@276 ($generated@@274 $generated@@281 $generated@@282)) $generated@@282)
 :pattern ( ($generated@@274 $generated@@281 $generated@@282))
))) (forall (($generated@@283 T@U) ) (! (let (($generated@@284 ($generated@@275 (type $generated@@283))))
(= (type ($generated@@272 $generated@@283)) ($generated@@80 $generated@@284 $generated@@4)))
 :pattern ( ($generated@@272 $generated@@283))
))) (forall (($generated@@285 T@T) ($generated@@286 T@T) ) (! (= (type ($generated@@273 $generated@@285 $generated@@286)) ($generated@@274 $generated@@285 $generated@@286))
 :pattern ( ($generated@@273 $generated@@285 $generated@@286))
))))
(assert (forall (($generated@@287 T@U) ($generated@@288 T@T) ) (! (let (($generated@@289 (type $generated@@287)))
 (not ($generated@@0 ($generated@@85 ($generated@@272 ($generated@@273 $generated@@289 $generated@@288)) $generated@@287))))
 :pattern ( (let (($generated@@289 (type $generated@@287)))
($generated@@85 ($generated@@272 ($generated@@273 $generated@@289 $generated@@288)) $generated@@287)))
)))
(assert (forall (($generated@@290 T@U) ) (! (let (($generated@@291 ($generated@@83 (type $generated@@290))))
 (=> (= (type $generated@@290) ($generated@@80 $generated@@291 $generated@@2)) (= ($generated@@179 $generated@@290) (forall (($generated@@292 T@U) ) (!  (=> (= (type $generated@@292) $generated@@291) (and (<= 0 ($generated ($generated@@85 $generated@@290 $generated@@292))) (<= ($generated ($generated@@85 $generated@@290 $generated@@292)) ($generated@@244 $generated@@290))))
 :pattern ( ($generated@@85 $generated@@290 $generated@@292))
)))))
 :pattern ( ($generated@@179 $generated@@290))
)))
(assert (forall (($generated@@293 T@U) ($generated@@294 T@U) ) (!  (=> (and (= (type $generated@@293) $generated@@67) (= (type $generated@@294) $generated@@81)) (= ($generated@@140 $generated@@294 ($generated@@137 $generated@@293))  (or (= $generated@@294 $generated@@138) (= ($generated@@139 $generated@@294) ($generated@@137 $generated@@293)))))
 :pattern ( ($generated@@140 $generated@@294 ($generated@@137 $generated@@293)))
)))
(assert (forall (($generated@@295 T@U) ) (! (let (($generated@@296 ($generated@@258 (type $generated@@295))))
(let (($generated@@297 ($generated@@257 (type $generated@@295))))
 (=> (= (type $generated@@295) ($generated@@256 $generated@@297 $generated@@296)) (or (= $generated@@295 ($generated@@255 $generated@@297 $generated@@296)) (exists (($generated@@298 T@U) ) (!  (and (= (type $generated@@298) $generated@@297) ($generated@@0 ($generated@@85 ($generated@@254 $generated@@295) $generated@@298)))
 :no-pattern (type $generated@@298)
 :no-pattern ($generated $generated@@298)
 :no-pattern ($generated@@0 $generated@@298)
))))))
 :pattern ( ($generated@@254 $generated@@295))
)))
(assert (forall (($generated@@300 T@U) ) (! (let (($generated@@301 ($generated@@258 (type $generated@@300))))
(= (type ($generated@@299 $generated@@300)) ($generated@@80 $generated@@301 $generated@@4)))
 :pattern ( ($generated@@299 $generated@@300))
)))
(assert (forall (($generated@@302 T@U) ) (! (let (($generated@@303 ($generated@@258 (type $generated@@302))))
(let (($generated@@304 ($generated@@257 (type $generated@@302))))
 (=> (= (type $generated@@302) ($generated@@256 $generated@@304 $generated@@303)) (or (= $generated@@302 ($generated@@255 $generated@@304 $generated@@303)) (exists (($generated@@305 T@U) ) (!  (and (= (type $generated@@305) $generated@@303) ($generated@@0 ($generated@@85 ($generated@@299 $generated@@302) $generated@@305)))
 :no-pattern (type $generated@@305)
 :no-pattern ($generated $generated@@305)
 :no-pattern ($generated@@0 $generated@@305)
))))))
 :pattern ( ($generated@@299 $generated@@302))
)))
(assert (forall (($generated@@306 T@U) ) (! (let (($generated@@307 ($generated@@276 (type $generated@@306))))
(let (($generated@@308 ($generated@@275 (type $generated@@306))))
 (=> (= (type $generated@@306) ($generated@@274 $generated@@308 $generated@@307)) (or (= $generated@@306 ($generated@@273 $generated@@308 $generated@@307)) (exists (($generated@@309 T@U) ) (!  (and (= (type $generated@@309) $generated@@308) ($generated@@0 ($generated@@85 ($generated@@272 $generated@@306) $generated@@309)))
 :no-pattern (type $generated@@309)
 :no-pattern ($generated $generated@@309)
 :no-pattern ($generated@@0 $generated@@309)
))))))
 :pattern ( ($generated@@272 $generated@@306))
)))
(assert (forall (($generated@@311 T@U) ) (! (let (($generated@@312 ($generated@@276 (type $generated@@311))))
(= (type ($generated@@310 $generated@@311)) ($generated@@80 $generated@@312 $generated@@4)))
 :pattern ( ($generated@@310 $generated@@311))
)))
(assert (forall (($generated@@313 T@U) ) (! (let (($generated@@314 ($generated@@276 (type $generated@@313))))
(let (($generated@@315 ($generated@@275 (type $generated@@313))))
 (=> (= (type $generated@@313) ($generated@@274 $generated@@315 $generated@@314)) (or (= $generated@@313 ($generated@@273 $generated@@315 $generated@@314)) (exists (($generated@@316 T@U) ) (!  (and (= (type $generated@@316) $generated@@314) ($generated@@0 ($generated@@85 ($generated@@310 $generated@@313) $generated@@316)))
 :no-pattern (type $generated@@316)
 :no-pattern ($generated $generated@@316)
 :no-pattern ($generated@@0 $generated@@316)
))))))
 :pattern ( ($generated@@310 $generated@@313))
)))
(assert (forall (($generated@@317 T@U) ($generated@@318 T@U) ) (!  (=> (and (= (type $generated@@317) ($generated@@80 $generated@@173 $generated@@2)) (= (type $generated@@318) $generated@@67)) (= ($generated@@140 $generated@@317 ($generated@@178 $generated@@318)) (forall (($generated@@319 T@U) ) (!  (=> (and (= (type $generated@@319) $generated@@173) (< 0 ($generated ($generated@@85 $generated@@317 $generated@@319)))) ($generated@@184 $generated@@319 $generated@@318))
 :pattern ( ($generated@@85 $generated@@317 $generated@@319))
))))
 :pattern ( ($generated@@140 $generated@@317 ($generated@@178 $generated@@318)))
)))
(assert (forall (($generated@@320 T@U) ($generated@@321 T@U) ($generated@@322 T@U) ) (!  (=> (and (and (= (type $generated@@320) ($generated@@80 $generated@@173 $generated@@4)) (= (type $generated@@321) $generated@@67)) (= (type $generated@@322) ($generated@@80 $generated@@81 $generated@@82))) (= ($generated@@78 $generated@@320 ($generated@@193 $generated@@321) $generated@@322) (forall (($generated@@323 T@U) ) (!  (=> (and (= (type $generated@@323) $generated@@173) ($generated@@0 ($generated@@85 $generated@@320 $generated@@323))) ($generated@@209 $generated@@323 $generated@@321 $generated@@322))
 :pattern ( ($generated@@85 $generated@@320 $generated@@323))
))))
 :pattern ( ($generated@@78 $generated@@320 ($generated@@193 $generated@@321) $generated@@322))
)))
(assert (forall (($generated@@324 T@U) ($generated@@325 T@U) ($generated@@326 T@U) ) (!  (=> (and (and (= (type $generated@@324) ($generated@@80 $generated@@173 $generated@@4)) (= (type $generated@@325) $generated@@67)) (= (type $generated@@326) ($generated@@80 $generated@@81 $generated@@82))) (= ($generated@@78 $generated@@324 ($generated@@198 $generated@@325) $generated@@326) (forall (($generated@@327 T@U) ) (!  (=> (and (= (type $generated@@327) $generated@@173) ($generated@@0 ($generated@@85 $generated@@324 $generated@@327))) ($generated@@209 $generated@@327 $generated@@325 $generated@@326))
 :pattern ( ($generated@@85 $generated@@324 $generated@@327))
))))
 :pattern ( ($generated@@78 $generated@@324 ($generated@@198 $generated@@325) $generated@@326))
)))
(assert (forall (($generated@@328 T@U) ) (! (let (($generated@@329 (type $generated@@328)))
(= ($generated ($generated@@85 ($generated@@245 $generated@@329) $generated@@328)) 0))
 :pattern ( (let (($generated@@329 (type $generated@@328)))
($generated@@85 ($generated@@245 $generated@@329) $generated@@328)))
)))
(assert  (and (and (forall (($generated@@333 T@U) ) (! (= (type ($generated@@330 $generated@@333)) ($generated@@80 $generated@@173 $generated@@4))
 :pattern ( ($generated@@330 $generated@@333))
)) (forall (($generated@@334 T@T) ($generated@@335 T@U) ) (! (= (type ($generated@@331 $generated@@334 $generated@@335)) $generated@@334)
 :pattern ( ($generated@@331 $generated@@334 $generated@@335))
))) (forall (($generated@@336 T@U) ) (! (let (($generated@@337 ($generated@@258 (type $generated@@336))))
(let (($generated@@338 ($generated@@257 (type $generated@@336))))
(= (type ($generated@@332 $generated@@336)) ($generated@@80 $generated@@338 $generated@@337))))
 :pattern ( ($generated@@332 $generated@@336))
))))
(assert (forall (($generated@@339 T@U) ($generated@@340 T@U) ) (!  (=> (and (= (type $generated@@339) ($generated@@256 $generated@@173 $generated@@173)) (= (type $generated@@340) $generated@@173)) (= ($generated@@0 ($generated@@85 ($generated@@330 $generated@@339) $generated@@340))  (and ($generated@@0 ($generated@@85 ($generated@@254 $generated@@339) ($generated@@171 ($generated@@331 $generated@@164 $generated@@340)))) (= ($generated@@85 ($generated@@332 $generated@@339) ($generated@@171 ($generated@@331 $generated@@164 $generated@@340))) ($generated@@172 ($generated@@331 $generated@@164 $generated@@340))))))
 :pattern ( ($generated@@85 ($generated@@330 $generated@@339) $generated@@340))
)))
(assert  (and (forall (($generated@@343 T@U) ) (! (= (type ($generated@@341 $generated@@343)) ($generated@@80 $generated@@173 $generated@@4))
 :pattern ( ($generated@@341 $generated@@343))
)) (forall (($generated@@344 T@U) ) (! (let (($generated@@345 ($generated@@276 (type $generated@@344))))
(let (($generated@@346 ($generated@@275 (type $generated@@344))))
(= (type ($generated@@342 $generated@@344)) ($generated@@80 $generated@@346 $generated@@345))))
 :pattern ( ($generated@@342 $generated@@344))
))))
(assert (forall (($generated@@347 T@U) ($generated@@348 T@U) ) (!  (=> (and (= (type $generated@@347) ($generated@@274 $generated@@173 $generated@@173)) (= (type $generated@@348) $generated@@173)) (= ($generated@@0 ($generated@@85 ($generated@@341 $generated@@347) $generated@@348))  (and ($generated@@0 ($generated@@85 ($generated@@272 $generated@@347) ($generated@@171 ($generated@@331 $generated@@164 $generated@@348)))) (= ($generated@@85 ($generated@@342 $generated@@347) ($generated@@171 ($generated@@331 $generated@@164 $generated@@348))) ($generated@@172 ($generated@@331 $generated@@164 $generated@@348))))))
 :pattern ( ($generated@@85 ($generated@@341 $generated@@347) $generated@@348))
)))
(assert (forall (($generated@@349 T@U) ($generated@@350 T@U) ) (! (let (($generated@@351 (type $generated@@350)))
(let (($generated@@352 ($generated@@257 (type $generated@@349))))
 (=> (= (type $generated@@349) ($generated@@256 $generated@@352 $generated@@351)) (= ($generated@@0 ($generated@@85 ($generated@@299 $generated@@349) $generated@@350)) (exists (($generated@@353 T@U) ) (!  (and (= (type $generated@@353) $generated@@352) (and ($generated@@0 ($generated@@85 ($generated@@254 $generated@@349) $generated@@353)) (= $generated@@350 ($generated@@85 ($generated@@332 $generated@@349) $generated@@353))))
 :pattern ( ($generated@@85 ($generated@@254 $generated@@349) $generated@@353))
 :pattern ( ($generated@@85 ($generated@@332 $generated@@349) $generated@@353))
))))))
 :pattern ( ($generated@@85 ($generated@@299 $generated@@349) $generated@@350))
)))
(assert (forall (($generated@@354 T@U) ($generated@@355 T@U) ) (! (let (($generated@@356 (type $generated@@355)))
(let (($generated@@357 ($generated@@275 (type $generated@@354))))
 (=> (= (type $generated@@354) ($generated@@274 $generated@@357 $generated@@356)) (= ($generated@@0 ($generated@@85 ($generated@@310 $generated@@354) $generated@@355)) (exists (($generated@@358 T@U) ) (!  (and (= (type $generated@@358) $generated@@357) (and ($generated@@0 ($generated@@85 ($generated@@272 $generated@@354) $generated@@358)) (= $generated@@355 ($generated@@85 ($generated@@342 $generated@@354) $generated@@358))))
 :pattern ( ($generated@@85 ($generated@@272 $generated@@354) $generated@@358))
 :pattern ( ($generated@@85 ($generated@@342 $generated@@354) $generated@@358))
))))))
 :pattern ( ($generated@@85 ($generated@@310 $generated@@354) $generated@@355))
)))
(assert (forall (($generated@@360 T@U) ($generated@@361 T@U) ) (! (= (type ($generated@@359 $generated@@360 $generated@@361)) $generated@@67)
 :pattern ( ($generated@@359 $generated@@360 $generated@@361))
)))
(assert (forall (($generated@@362 T@U) ($generated@@363 T@U) ($generated@@364 T@U) ($generated@@365 T@U) ) (!  (=> (and (and (and (= (type $generated@@362) ($generated@@256 $generated@@173 $generated@@173)) (= (type $generated@@363) $generated@@67)) (= (type $generated@@364) $generated@@67)) (= (type $generated@@365) ($generated@@80 $generated@@81 $generated@@82))) (= ($generated@@78 $generated@@362 ($generated@@359 $generated@@363 $generated@@364) $generated@@365) (forall (($generated@@366 T@U) ) (!  (=> (and (= (type $generated@@366) $generated@@173) ($generated@@0 ($generated@@85 ($generated@@254 $generated@@362) $generated@@366))) (and ($generated@@209 ($generated@@85 ($generated@@332 $generated@@362) $generated@@366) $generated@@364 $generated@@365) ($generated@@209 $generated@@366 $generated@@363 $generated@@365)))
 :pattern ( ($generated@@85 ($generated@@332 $generated@@362) $generated@@366))
 :pattern ( ($generated@@85 ($generated@@254 $generated@@362) $generated@@366))
))))
 :pattern ( ($generated@@78 $generated@@362 ($generated@@359 $generated@@363 $generated@@364) $generated@@365))
)))
(assert (forall (($generated@@368 T@U) ($generated@@369 T@U) ) (! (= (type ($generated@@367 $generated@@368 $generated@@369)) $generated@@67)
 :pattern ( ($generated@@367 $generated@@368 $generated@@369))
)))
(assert (forall (($generated@@370 T@U) ($generated@@371 T@U) ($generated@@372 T@U) ($generated@@373 T@U) ) (!  (=> (and (and (and (= (type $generated@@370) ($generated@@274 $generated@@173 $generated@@173)) (= (type $generated@@371) $generated@@67)) (= (type $generated@@372) $generated@@67)) (= (type $generated@@373) ($generated@@80 $generated@@81 $generated@@82))) (= ($generated@@78 $generated@@370 ($generated@@367 $generated@@371 $generated@@372) $generated@@373) (forall (($generated@@374 T@U) ) (!  (=> (and (= (type $generated@@374) $generated@@173) ($generated@@0 ($generated@@85 ($generated@@272 $generated@@370) $generated@@374))) (and ($generated@@209 ($generated@@85 ($generated@@342 $generated@@370) $generated@@374) $generated@@372 $generated@@373) ($generated@@209 $generated@@374 $generated@@371 $generated@@373)))
 :pattern ( ($generated@@85 ($generated@@342 $generated@@370) $generated@@374))
 :pattern ( ($generated@@85 ($generated@@272 $generated@@370) $generated@@374))
))))
 :pattern ( ($generated@@78 $generated@@370 ($generated@@367 $generated@@371 $generated@@372) $generated@@373))
)))
(assert (forall (($generated@@375 T@U) ($generated@@376 T@U) ($generated@@377 T@U) ) (!  (=> (and (and (and (and (= (type $generated@@375) ($generated@@80 $generated@@81 $generated@@82)) (= (type $generated@@376) ($generated@@80 $generated@@81 $generated@@82))) (= (type $generated@@377) ($generated@@80 $generated@@81 $generated@@82))) (not (= $generated@@375 $generated@@377))) (and ($generated@@145 $generated@@375 $generated@@376) ($generated@@145 $generated@@376 $generated@@377))) ($generated@@145 $generated@@375 $generated@@377))
 :pattern ( ($generated@@145 $generated@@375 $generated@@376) ($generated@@145 $generated@@376 $generated@@377))
)))
(assert (forall (($generated@@379 Int) ) (! (= (type ($generated@@378 $generated@@379)) ($generated@@69 $generated@@173))
 :pattern ( ($generated@@378 $generated@@379))
)))
(assert (forall (($generated@@380 T@U) ($generated@@381 T@U) ($generated@@382 T@U) ($generated@@383 Int) ) (!  (=> (and (and (= (type $generated@@380) $generated@@67) (= (type $generated@@381) ($generated@@80 $generated@@81 $generated@@82))) (= (type $generated@@382) $generated@@81)) (=> (and (and (and ($generated@@152 $generated@@381) (and (not (= $generated@@382 $generated@@138)) (= ($generated@@139 $generated@@382) ($generated@@137 $generated@@380)))) (and (<= 0 $generated@@383) (< $generated@@383 ($generated@@136 $generated@@382)))) ($generated@@0 ($generated@@87 ($generated@@85 $generated@@381 $generated@@382) $generated@@60))) ($generated@@209 ($generated@@87 ($generated@@85 $generated@@381 $generated@@382) ($generated@@378 $generated@@383)) $generated@@380 $generated@@381)))
 :pattern ( ($generated@@87 ($generated@@85 $generated@@381 $generated@@382) ($generated@@378 $generated@@383)) ($generated@@137 $generated@@380))
)))
(assert (forall (($generated@@385 T@T) ) (! (= (type ($generated@@384 $generated@@385)) ($generated@@80 $generated@@385 $generated@@4))
 :pattern ( ($generated@@384 $generated@@385))
)))
(assert (forall (($generated@@386 T@U) ) (! (let (($generated@@387 ($generated@@276 (type $generated@@386))))
(let (($generated@@388 ($generated@@275 (type $generated@@386))))
 (=> (= (type $generated@@386) ($generated@@274 $generated@@388 $generated@@387)) (= (= $generated@@386 ($generated@@273 $generated@@388 $generated@@387)) (= ($generated@@272 $generated@@386) ($generated@@384 $generated@@388))))))
 :pattern ( ($generated@@272 $generated@@386))
)))
(assert (forall (($generated@@389 T@U) ) (! (let (($generated@@390 ($generated@@276 (type $generated@@389))))
(let (($generated@@391 ($generated@@275 (type $generated@@389))))
 (=> (= (type $generated@@389) ($generated@@274 $generated@@391 $generated@@390)) (= (= $generated@@389 ($generated@@273 $generated@@391 $generated@@390)) (= ($generated@@310 $generated@@389) ($generated@@384 $generated@@390))))))
 :pattern ( ($generated@@310 $generated@@389))
)))
(assert (forall (($generated@@392 T@U) ) (! (let (($generated@@393 ($generated@@276 (type $generated@@392))))
(let (($generated@@394 ($generated@@275 (type $generated@@392))))
 (=> (= (type $generated@@392) ($generated@@274 $generated@@394 $generated@@393)) (= (= $generated@@392 ($generated@@273 $generated@@394 $generated@@393)) (= ($generated@@341 $generated@@392) ($generated@@384 $generated@@173))))))
 :pattern ( ($generated@@341 $generated@@392))
)))
(assert (forall (($generated@@395 T@U) ) (! (let (($generated@@396 ($generated@@258 (type $generated@@395))))
(let (($generated@@397 ($generated@@257 (type $generated@@395))))
 (=> (= (type $generated@@395) ($generated@@256 $generated@@397 $generated@@396)) (or (= $generated@@395 ($generated@@255 $generated@@397 $generated@@396)) (exists (($generated@@398 T@U) ($generated@@399 T@U) ) (!  (and (and (= (type $generated@@398) $generated@@173) (= (type $generated@@399) $generated@@173)) ($generated@@0 ($generated@@85 ($generated@@330 $generated@@395) ($generated@@231 ($generated@@183 $generated@@398 $generated@@399)))))
 :no-pattern (type $generated@@398)
 :no-pattern (type $generated@@399)
 :no-pattern ($generated $generated@@398)
 :no-pattern ($generated@@0 $generated@@398)
 :no-pattern ($generated $generated@@399)
 :no-pattern ($generated@@0 $generated@@399)
))))))
 :pattern ( ($generated@@330 $generated@@395))
)))
(assert (forall (($generated@@400 T@U) ) (! (let (($generated@@401 ($generated@@276 (type $generated@@400))))
(let (($generated@@402 ($generated@@275 (type $generated@@400))))
 (=> (= (type $generated@@400) ($generated@@274 $generated@@402 $generated@@401)) (or (= $generated@@400 ($generated@@273 $generated@@402 $generated@@401)) (exists (($generated@@403 T@U) ($generated@@404 T@U) ) (!  (and (and (= (type $generated@@403) $generated@@173) (= (type $generated@@404) $generated@@173)) ($generated@@0 ($generated@@85 ($generated@@341 $generated@@400) ($generated@@231 ($generated@@183 $generated@@403 $generated@@404)))))
 :no-pattern (type $generated@@403)
 :no-pattern (type $generated@@404)
 :no-pattern ($generated $generated@@403)
 :no-pattern ($generated@@0 $generated@@403)
 :no-pattern ($generated $generated@@404)
 :no-pattern ($generated@@0 $generated@@404)
))))))
 :pattern ( ($generated@@341 $generated@@400))
)))
(assert (forall (($generated@@405 T@U) ) (!  (=> (and (= (type $generated@@405) $generated@@173) ($generated@@184 $generated@@405 $generated@@46)) (and (= ($generated@@231 ($generated@@331 $generated@@2 $generated@@405)) $generated@@405) ($generated@@140 ($generated@@331 $generated@@2 $generated@@405) $generated@@46)))
 :pattern ( ($generated@@184 $generated@@405 $generated@@46))
)))
(assert (forall (($generated@@406 T@U) ) (!  (=> (and (= (type $generated@@406) $generated@@173) ($generated@@184 $generated@@406 $generated@@47)) (and (= ($generated@@231 ($generated@@331 $generated@@3 $generated@@406)) $generated@@406) ($generated@@140 ($generated@@331 $generated@@3 $generated@@406) $generated@@47)))
 :pattern ( ($generated@@184 $generated@@406 $generated@@47))
)))
(assert (forall (($generated@@407 T@U) ) (!  (=> (and (= (type $generated@@407) $generated@@173) ($generated@@184 $generated@@407 $generated@@44)) (and (= ($generated@@231 ($generated@@331 $generated@@4 $generated@@407)) $generated@@407) ($generated@@140 ($generated@@331 $generated@@4 $generated@@407) $generated@@44)))
 :pattern ( ($generated@@184 $generated@@407 $generated@@44))
)))
(assert (= ($generated@@1 $generated@@408) 19))
(assert (forall (($generated@@409 T@U) ) (!  (=> (and (= (type $generated@@409) $generated@@173) ($generated@@184 $generated@@409 $generated@@45)) (and (= ($generated@@231 ($generated@@331 $generated@@408 $generated@@409)) $generated@@409) ($generated@@140 ($generated@@331 $generated@@408 $generated@@409) $generated@@45)))
 :pattern ( ($generated@@184 $generated@@409 $generated@@45))
)))
(assert (forall (($generated@@410 T@U) ($generated@@411 T@U) ) (!  (=> (= (type $generated@@411) $generated@@67) (= ($generated@@184 ($generated@@231 $generated@@410) $generated@@411) ($generated@@140 $generated@@410 $generated@@411)))
 :pattern ( ($generated@@184 ($generated@@231 $generated@@410) $generated@@411))
)))
(assert (forall (($generated@@412 T@U) ) (!  (=> (= (type $generated@@412) $generated@@81) (<= 0 ($generated@@136 $generated@@412)))
 :no-pattern (type $generated@@412)
 :no-pattern ($generated $generated@@412)
 :no-pattern ($generated@@0 $generated@@412)
)))
(assert (forall (($generated@@413 T@U) ) (! (let (($generated@@414 ($generated@@83 (type $generated@@413))))
 (=> (= (type $generated@@413) ($generated@@80 $generated@@414 $generated@@2)) (<= 0 ($generated@@244 $generated@@413))))
 :pattern ( ($generated@@244 $generated@@413))
)))
(assert (forall (($generated@@415 T@U) ) (! (let (($generated@@416 ($generated@@224 (type $generated@@415))))
 (=> (= (type $generated@@415) ($generated@@223 $generated@@416)) (<= 0 ($generated@@222 $generated@@415))))
 :pattern ( ($generated@@222 $generated@@415))
)))
(assert (forall (($generated@@418 T@U) ) (! (= (type ($generated@@417 $generated@@418)) $generated@@67)
 :pattern ( ($generated@@417 $generated@@418))
)))
(assert (forall (($generated@@419 T@U) ($generated@@420 T@U) ) (!  (=> (and (= (type $generated@@419) $generated@@67) (= (type $generated@@420) $generated@@67)) (= ($generated@@417 ($generated@@359 $generated@@419 $generated@@420)) $generated@@419))
 :pattern ( ($generated@@359 $generated@@419 $generated@@420))
)))
(assert (forall (($generated@@422 T@U) ) (! (= (type ($generated@@421 $generated@@422)) $generated@@67)
 :pattern ( ($generated@@421 $generated@@422))
)))
(assert (forall (($generated@@423 T@U) ($generated@@424 T@U) ) (!  (=> (and (= (type $generated@@423) $generated@@67) (= (type $generated@@424) $generated@@67)) (= ($generated@@421 ($generated@@359 $generated@@423 $generated@@424)) $generated@@424))
 :pattern ( ($generated@@359 $generated@@423 $generated@@424))
)))
(assert (forall (($generated@@425 T@U) ($generated@@426 T@U) ) (!  (=> (and (= (type $generated@@425) $generated@@67) (= (type $generated@@426) $generated@@67)) (= ($generated@@76 ($generated@@359 $generated@@425 $generated@@426)) $generated@@58))
 :pattern ( ($generated@@359 $generated@@425 $generated@@426))
)))
(assert (forall (($generated@@428 T@U) ) (! (= (type ($generated@@427 $generated@@428)) $generated@@67)
 :pattern ( ($generated@@427 $generated@@428))
)))
(assert (forall (($generated@@429 T@U) ($generated@@430 T@U) ) (!  (=> (and (= (type $generated@@429) $generated@@67) (= (type $generated@@430) $generated@@67)) (= ($generated@@427 ($generated@@367 $generated@@429 $generated@@430)) $generated@@429))
 :pattern ( ($generated@@367 $generated@@429 $generated@@430))
)))
(assert (forall (($generated@@432 T@U) ) (! (= (type ($generated@@431 $generated@@432)) $generated@@67)
 :pattern ( ($generated@@431 $generated@@432))
)))
(assert (forall (($generated@@433 T@U) ($generated@@434 T@U) ) (!  (=> (and (= (type $generated@@433) $generated@@67) (= (type $generated@@434) $generated@@67)) (= ($generated@@431 ($generated@@367 $generated@@433 $generated@@434)) $generated@@434))
 :pattern ( ($generated@@367 $generated@@433 $generated@@434))
)))
(assert (forall (($generated@@435 T@U) ($generated@@436 T@U) ) (!  (=> (and (= (type $generated@@435) $generated@@67) (= (type $generated@@436) $generated@@67)) (= ($generated@@76 ($generated@@367 $generated@@435 $generated@@436)) $generated@@59))
 :pattern ( ($generated@@367 $generated@@435 $generated@@436))
)))
(assert (forall (($generated@@437 T@U) ($generated@@438 T@U) ) (!  (=> (and (= (type $generated@@437) $generated@@173) (= (type $generated@@438) $generated@@173)) (= ($generated@@215 ($generated@@183 $generated@@437 $generated@@438)) $generated@@63))
 :pattern ( ($generated@@183 $generated@@437 $generated@@438))
)))
(assert (forall (($generated@@440 T@U) ) (! (= (type ($generated@@439 $generated@@440)) $generated@@67)
 :pattern ( ($generated@@439 $generated@@440))
)))
(assert (forall (($generated@@441 T@U) ($generated@@442 T@U) ) (!  (=> (and (= (type $generated@@441) $generated@@67) (= (type $generated@@442) $generated@@67)) (= ($generated@@439 ($generated@@163 $generated@@441 $generated@@442)) $generated@@441))
 :pattern ( ($generated@@163 $generated@@441 $generated@@442))
)))
(assert (forall (($generated@@444 T@U) ) (! (= (type ($generated@@443 $generated@@444)) $generated@@67)
 :pattern ( ($generated@@443 $generated@@444))
)))
(assert (forall (($generated@@445 T@U) ($generated@@446 T@U) ) (!  (=> (and (= (type $generated@@445) $generated@@67) (= (type $generated@@446) $generated@@67)) (= ($generated@@443 ($generated@@163 $generated@@445 $generated@@446)) $generated@@446))
 :pattern ( ($generated@@163 $generated@@445 $generated@@446))
)))
(assert (forall (($generated@@447 T@U) ($generated@@448 T@U) ) (!  (=> (and (= (type $generated@@447) $generated@@173) (= (type $generated@@448) $generated@@173)) (= ($generated@@171 ($generated@@183 $generated@@447 $generated@@448)) $generated@@447))
 :pattern ( ($generated@@183 $generated@@447 $generated@@448))
)))
(assert (forall (($generated@@449 T@U) ($generated@@450 T@U) ) (!  (=> (and (= (type $generated@@449) $generated@@173) (= (type $generated@@450) $generated@@173)) (= ($generated@@172 ($generated@@183 $generated@@449 $generated@@450)) $generated@@450))
 :pattern ( ($generated@@183 $generated@@449 $generated@@450))
)))
(assert  (and (forall (($generated@@453 T@U) ) (! (= (type ($generated@@451 $generated@@453)) $generated@@67)
 :pattern ( ($generated@@451 $generated@@453))
)) (forall (($generated@@454 T@U) ($generated@@455 Int) ) (! (let (($generated@@456 ($generated@@224 (type $generated@@454))))
(= (type ($generated@@452 $generated@@454 $generated@@455)) $generated@@456))
 :pattern ( ($generated@@452 $generated@@454 $generated@@455))
))))
(assert (forall (($generated@@457 T@U) ($generated@@458 T@U) ($generated@@459 T@U) ) (!  (=> (and (and (= (type $generated@@457) ($generated@@223 $generated@@173)) (= (type $generated@@458) $generated@@67)) (= (type $generated@@459) ($generated@@80 $generated@@81 $generated@@82))) (= ($generated@@78 $generated@@457 ($generated@@451 $generated@@458) $generated@@459) (forall (($generated@@460 Int) ) (!  (=> (and (<= 0 $generated@@460) (< $generated@@460 ($generated@@222 $generated@@457))) ($generated@@209 ($generated@@452 $generated@@457 $generated@@460) $generated@@458 $generated@@459))
 :pattern ( ($generated@@452 $generated@@457 $generated@@460))
))))
 :pattern ( ($generated@@78 $generated@@457 ($generated@@451 $generated@@458) $generated@@459))
)))
(assert (forall (($generated@@462 Int) ) (! (= ($generated@@461 ($generated@@79 $generated@@462)) $generated@@462)
 :pattern ( ($generated@@79 $generated@@462))
)))
(assert (forall (($generated@@464 T@U) ) (! (= (type ($generated@@463 $generated@@464)) $generated@@67)
 :pattern ( ($generated@@463 $generated@@464))
)))
(assert (forall (($generated@@465 T@U) ) (!  (=> (= (type $generated@@465) $generated@@67) (= ($generated@@463 ($generated@@193 $generated@@465)) $generated@@465))
 :pattern ( ($generated@@193 $generated@@465))
)))
(assert (forall (($generated@@466 T@U) ) (!  (=> (= (type $generated@@466) $generated@@67) (= ($generated@@76 ($generated@@193 $generated@@466)) $generated@@54))
 :pattern ( ($generated@@193 $generated@@466))
)))
(assert (forall (($generated@@468 T@U) ) (! (= (type ($generated@@467 $generated@@468)) $generated@@67)
 :pattern ( ($generated@@467 $generated@@468))
)))
(assert (forall (($generated@@469 T@U) ) (!  (=> (= (type $generated@@469) $generated@@67) (= ($generated@@467 ($generated@@198 $generated@@469)) $generated@@469))
 :pattern ( ($generated@@198 $generated@@469))
)))
(assert (forall (($generated@@470 T@U) ) (!  (=> (= (type $generated@@470) $generated@@67) (= ($generated@@76 ($generated@@198 $generated@@470)) $generated@@55))
 :pattern ( ($generated@@198 $generated@@470))
)))
(assert (forall (($generated@@472 T@U) ) (! (= (type ($generated@@471 $generated@@472)) $generated@@67)
 :pattern ( ($generated@@471 $generated@@472))
)))
(assert (forall (($generated@@473 T@U) ) (!  (=> (= (type $generated@@473) $generated@@67) (= ($generated@@471 ($generated@@178 $generated@@473)) $generated@@473))
 :pattern ( ($generated@@178 $generated@@473))
)))
(assert (forall (($generated@@474 T@U) ) (!  (=> (= (type $generated@@474) $generated@@67) (= ($generated@@76 ($generated@@178 $generated@@474)) $generated@@56))
 :pattern ( ($generated@@178 $generated@@474))
)))
(assert (forall (($generated@@476 T@U) ) (! (= (type ($generated@@475 $generated@@476)) $generated@@67)
 :pattern ( ($generated@@475 $generated@@476))
)))
(assert (forall (($generated@@477 T@U) ) (!  (=> (= (type $generated@@477) $generated@@67) (= ($generated@@475 ($generated@@451 $generated@@477)) $generated@@477))
 :pattern ( ($generated@@451 $generated@@477))
)))
(assert (forall (($generated@@478 T@U) ) (!  (=> (= (type $generated@@478) $generated@@67) (= ($generated@@76 ($generated@@451 $generated@@478)) $generated@@57))
 :pattern ( ($generated@@451 $generated@@478))
)))
(assert (forall (($generated@@479 Int) ) (! (= ($generated@@75 ($generated@@378 $generated@@479)) 1)
 :pattern ( ($generated@@378 $generated@@479))
)))
(assert (forall (($generated@@481 Int) ) (! (= ($generated@@480 ($generated@@378 $generated@@481)) $generated@@481)
 :pattern ( ($generated@@378 $generated@@481))
)))
(assert (forall (($generated@@483 T@U) ) (! (= (type ($generated@@482 $generated@@483)) $generated@@67)
 :pattern ( ($generated@@482 $generated@@483))
)))
(assert (forall (($generated@@484 T@U) ) (!  (=> (= (type $generated@@484) $generated@@67) (= ($generated@@482 ($generated@@137 $generated@@484)) $generated@@484))
 :pattern ( ($generated@@137 $generated@@484))
)))
(assert (forall (($generated@@486 T@U) ) (! (= (type ($generated@@485 $generated@@486)) $generated@@67)
 :pattern ( ($generated@@485 $generated@@486))
)))
(assert (forall (($generated@@487 T@U) ) (!  (=> (= (type $generated@@487) $generated@@67) (= ($generated@@485 ($generated@@157 $generated@@487)) $generated@@487))
 :pattern ( ($generated@@157 $generated@@487))
)))
(assert (forall (($generated@@488 T@U) ) (! (let (($generated@@489 (type $generated@@488)))
(= ($generated@@331 $generated@@489 ($generated@@231 $generated@@488)) $generated@@488))
 :pattern ( ($generated@@231 $generated@@488))
)))
(assert (forall (($generated@@490 T@U) ($generated@@491 T@U) ($generated@@492 T@U) ) (!  (=> (and (and (= (type $generated@@490) ($generated@@256 $generated@@173 $generated@@173)) (= (type $generated@@491) $generated@@67)) (= (type $generated@@492) $generated@@67)) (= ($generated@@140 $generated@@490 ($generated@@359 $generated@@491 $generated@@492)) (forall (($generated@@493 T@U) ) (!  (=> (and (= (type $generated@@493) $generated@@173) ($generated@@0 ($generated@@85 ($generated@@254 $generated@@490) $generated@@493))) (and ($generated@@184 ($generated@@85 ($generated@@332 $generated@@490) $generated@@493) $generated@@492) ($generated@@184 $generated@@493 $generated@@491)))
 :pattern ( ($generated@@85 ($generated@@332 $generated@@490) $generated@@493))
 :pattern ( ($generated@@85 ($generated@@254 $generated@@490) $generated@@493))
))))
 :pattern ( ($generated@@140 $generated@@490 ($generated@@359 $generated@@491 $generated@@492)))
)))
(assert (forall (($generated@@494 T@U) ($generated@@495 T@U) ($generated@@496 T@U) ) (!  (=> (and (and (= (type $generated@@494) ($generated@@274 $generated@@173 $generated@@173)) (= (type $generated@@495) $generated@@67)) (= (type $generated@@496) $generated@@67)) (= ($generated@@140 $generated@@494 ($generated@@367 $generated@@495 $generated@@496)) (forall (($generated@@497 T@U) ) (!  (=> (and (= (type $generated@@497) $generated@@173) ($generated@@0 ($generated@@85 ($generated@@272 $generated@@494) $generated@@497))) (and ($generated@@184 ($generated@@85 ($generated@@342 $generated@@494) $generated@@497) $generated@@496) ($generated@@184 $generated@@497 $generated@@495)))
 :pattern ( ($generated@@85 ($generated@@342 $generated@@494) $generated@@497))
 :pattern ( ($generated@@85 ($generated@@272 $generated@@494) $generated@@497))
))))
 :pattern ( ($generated@@140 $generated@@494 ($generated@@367 $generated@@495 $generated@@496)))
)))
(assert (forall (($generated@@498 T@U) ($generated@@499 T@U) ($generated@@500 T@U) ($generated@@501 Int) ) (!  (=> (and (and (and (= (type $generated@@498) $generated@@67) (= (type $generated@@499) ($generated@@80 $generated@@81 $generated@@82))) (= (type $generated@@500) $generated@@81)) (and (and ($generated@@152 $generated@@499) (and (not (= $generated@@500 $generated@@138)) (= ($generated@@139 $generated@@500) ($generated@@137 $generated@@498)))) (and (<= 0 $generated@@501) (< $generated@@501 ($generated@@136 $generated@@500))))) ($generated@@184 ($generated@@87 ($generated@@85 $generated@@499 $generated@@500) ($generated@@378 $generated@@501)) $generated@@498))
 :pattern ( ($generated@@87 ($generated@@85 $generated@@499 $generated@@500) ($generated@@378 $generated@@501)) ($generated@@137 $generated@@498))
)))
(assert (forall (($generated@@504 T@U) ($generated@@505 T@U) ) (!  (=> (and (= (type $generated@@504) $generated@@173) (= (type $generated@@505) $generated@@173)) (< ($generated@@502 $generated@@504) ($generated@@503 ($generated@@183 $generated@@504 $generated@@505))))
 :pattern ( ($generated@@183 $generated@@504 $generated@@505))
)))
(assert (forall (($generated@@506 T@U) ($generated@@507 T@U) ) (!  (=> (and (= (type $generated@@506) $generated@@173) (= (type $generated@@507) $generated@@173)) (< ($generated@@502 $generated@@507) ($generated@@503 ($generated@@183 $generated@@506 $generated@@507))))
 :pattern ( ($generated@@183 $generated@@506 $generated@@507))
)))
(assert (forall (($generated@@508 T@U) ($generated@@509 T@U) ($generated@@510 T@U) ) (!  (=> (and (and (and (= (type $generated@@508) $generated@@173) (= (type $generated@@509) $generated@@67)) (= (type $generated@@510) $generated@@67)) ($generated@@184 $generated@@508 ($generated@@359 $generated@@509 $generated@@510))) (and (= ($generated@@231 ($generated@@331 ($generated@@256 $generated@@173 $generated@@173) $generated@@508)) $generated@@508) ($generated@@140 ($generated@@331 ($generated@@256 $generated@@173 $generated@@173) $generated@@508) ($generated@@359 $generated@@509 $generated@@510))))
 :pattern ( ($generated@@184 $generated@@508 ($generated@@359 $generated@@509 $generated@@510)))
)))
(assert (forall (($generated@@511 T@U) ($generated@@512 T@U) ($generated@@513 T@U) ) (!  (=> (and (and (and (= (type $generated@@511) $generated@@173) (= (type $generated@@512) $generated@@67)) (= (type $generated@@513) $generated@@67)) ($generated@@184 $generated@@511 ($generated@@367 $generated@@512 $generated@@513))) (and (= ($generated@@231 ($generated@@331 ($generated@@274 $generated@@173 $generated@@173) $generated@@511)) $generated@@511) ($generated@@140 ($generated@@331 ($generated@@274 $generated@@173 $generated@@173) $generated@@511) ($generated@@367 $generated@@512 $generated@@513))))
 :pattern ( ($generated@@184 $generated@@511 ($generated@@367 $generated@@512 $generated@@513)))
)))
(assert (forall (($generated@@514 T@U) ($generated@@515 T@U) ($generated@@516 T@U) ) (!  (=> (and (and (and (= (type $generated@@514) $generated@@67) (= (type $generated@@515) $generated@@67)) (= (type $generated@@516) $generated@@173)) ($generated@@184 $generated@@516 ($generated@@163 $generated@@514 $generated@@515))) (and (= ($generated@@231 ($generated@@331 $generated@@164 $generated@@516)) $generated@@516) ($generated@@140 ($generated@@331 $generated@@164 $generated@@516) ($generated@@163 $generated@@514 $generated@@515))))
 :pattern ( ($generated@@184 $generated@@516 ($generated@@163 $generated@@514 $generated@@515)))
)))
(assert (forall (($generated@@517 T@U) ) (! (let (($generated@@518 (type $generated@@517)))
 (not ($generated@@0 ($generated@@85 ($generated@@384 $generated@@518) $generated@@517))))
 :pattern ( (let (($generated@@518 (type $generated@@517)))
($generated@@85 ($generated@@384 $generated@@518) $generated@@517)))
)))
(assert  (and (and (and (and (and (and (and (forall (($generated@@525 T@T) ($generated@@526 T@T) ) (= ($generated@@1 ($generated@@521 $generated@@525 $generated@@526)) 20)) (forall (($generated@@527 T@T) ($generated@@528 T@T) ) (! (= ($generated@@522 ($generated@@521 $generated@@527 $generated@@528)) $generated@@527)
 :pattern ( ($generated@@521 $generated@@527 $generated@@528))
))) (forall (($generated@@529 T@T) ($generated@@530 T@T) ) (! (= ($generated@@523 ($generated@@521 $generated@@529 $generated@@530)) $generated@@530)
 :pattern ( ($generated@@521 $generated@@529 $generated@@530))
))) (forall (($generated@@531 T@U) ($generated@@532 T@U) ($generated@@533 T@U) ) (! (let (($generated@@534 ($generated@@523 (type $generated@@531))))
(= (type ($generated@@519 $generated@@531 $generated@@532 $generated@@533)) $generated@@534))
 :pattern ( ($generated@@519 $generated@@531 $generated@@532 $generated@@533))
))) (forall (($generated@@535 T@U) ($generated@@536 T@U) ($generated@@537 T@U) ($generated@@538 T@U) ) (! (let (($generated@@539 (type $generated@@538)))
(let (($generated@@540 (type $generated@@536)))
(= (type ($generated@@524 $generated@@535 $generated@@536 $generated@@537 $generated@@538)) ($generated@@521 $generated@@540 $generated@@539))))
 :pattern ( ($generated@@524 $generated@@535 $generated@@536 $generated@@537 $generated@@538))
))) (forall (($generated@@541 T@U) ($generated@@542 T@U) ($generated@@543 T@U) ($generated@@544 T@U) ) (! (let (($generated@@545 ($generated@@523 (type $generated@@541))))
 (=> (= (type $generated@@544) $generated@@545) (= ($generated@@519 ($generated@@524 $generated@@541 $generated@@542 $generated@@543 $generated@@544) $generated@@542 $generated@@543) $generated@@544)))
 :weight 0
))) (and (and (forall (($generated@@546 T@U) ($generated@@547 T@U) ($generated@@548 T@U) ($generated@@549 T@U) ($generated@@550 T@U) ($generated@@551 T@U) ) (!  (or (= $generated@@548 $generated@@550) (= ($generated@@519 ($generated@@524 $generated@@547 $generated@@548 $generated@@549 $generated@@546) $generated@@550 $generated@@551) ($generated@@519 $generated@@547 $generated@@550 $generated@@551)))
 :weight 0
)) (forall (($generated@@552 T@U) ($generated@@553 T@U) ($generated@@554 T@U) ($generated@@555 T@U) ($generated@@556 T@U) ($generated@@557 T@U) ) (!  (or (= $generated@@555 $generated@@557) (= ($generated@@519 ($generated@@524 $generated@@553 $generated@@554 $generated@@555 $generated@@552) $generated@@556 $generated@@557) ($generated@@519 $generated@@553 $generated@@556 $generated@@557)))
 :weight 0
))) (forall (($generated@@558 T@U) ($generated@@559 T@U) ($generated@@560 T@U) ($generated@@561 T@U) ($generated@@562 T@U) ($generated@@563 T@U) ) (!  (or true (= ($generated@@519 ($generated@@524 $generated@@559 $generated@@560 $generated@@561 $generated@@558) $generated@@562 $generated@@563) ($generated@@519 $generated@@559 $generated@@562 $generated@@563)))
 :weight 0
)))) (forall (($generated@@564 T@U) ($generated@@565 T@U) ($generated@@566 T@U) ($generated@@567 T@U) ) (! (= (type ($generated@@520 $generated@@564 $generated@@565 $generated@@566 $generated@@567)) ($generated@@521 $generated@@81 $generated@@4))
 :pattern ( ($generated@@520 $generated@@564 $generated@@565 $generated@@566 $generated@@567))
))))
(assert (forall (($generated@@568 T@U) ($generated@@569 T@U) ($generated@@570 T@U) ($generated@@571 T@U) ($generated@@572 T@U) ($generated@@573 T@U) ) (! (let (($generated@@574 ($generated@@70 (type $generated@@573))))
 (=> (and (and (and (and (and (= (type $generated@@568) $generated@@81) (= (type $generated@@569) ($generated@@80 $generated@@81 $generated@@82))) (= (type $generated@@570) ($generated@@69 $generated@@4))) (= (type $generated@@571) $generated@@81)) (= (type $generated@@572) $generated@@81)) (= (type $generated@@573) ($generated@@69 $generated@@574))) (= ($generated@@0 ($generated@@519 ($generated@@520 $generated@@568 $generated@@569 $generated@@570 $generated@@571) $generated@@572 $generated@@573))  (=> (and (not (= $generated@@572 $generated@@568)) ($generated@@0 ($generated@@87 ($generated@@85 $generated@@569 $generated@@572) $generated@@570))) (= $generated@@572 $generated@@571)))))
 :pattern ( ($generated@@519 ($generated@@520 $generated@@568 $generated@@569 $generated@@570 $generated@@571) $generated@@572 $generated@@573))
)))
(assert (forall (($generated@@575 T@U) ($generated@@576 T@U) ) (!  (=> (and (= (type $generated@@575) $generated@@67) (= (type $generated@@576) $generated@@67)) (and (= ($generated@@76 ($generated@@163 $generated@@575 $generated@@576)) $generated@@64) (= ($generated@@250 ($generated@@163 $generated@@575 $generated@@576)) $generated@@66)))
 :pattern ( ($generated@@163 $generated@@575 $generated@@576))
)))
(assert (forall (($generated@@577 T@U) ) (!  (=> (= (type $generated@@577) $generated@@164) (= ($generated@@502 ($generated@@231 $generated@@577)) ($generated@@503 $generated@@577)))
 :pattern ( ($generated@@502 ($generated@@231 $generated@@577)))
)))
(assert (forall (($generated@@578 T@U) ) (!  (=> (and (= (type $generated@@578) $generated@@173) ($generated@@184 $generated@@578 ($generated@@79 0))) (and (= ($generated@@231 ($generated@@331 $generated@@2 $generated@@578)) $generated@@578) ($generated@@140 ($generated@@331 ($generated@@80 $generated@@173 $generated@@4) $generated@@578) ($generated@@79 0))))
 :pattern ( ($generated@@184 $generated@@578 ($generated@@79 0)))
)))
(assert (forall (($generated@@579 T@U) ($generated@@580 T@U) ) (!  (=> (and (and (= (type $generated@@579) $generated@@173) (= (type $generated@@580) $generated@@67)) ($generated@@184 $generated@@579 ($generated@@193 $generated@@580))) (and (= ($generated@@231 ($generated@@331 ($generated@@80 $generated@@173 $generated@@4) $generated@@579)) $generated@@579) ($generated@@140 ($generated@@331 ($generated@@80 $generated@@173 $generated@@4) $generated@@579) ($generated@@193 $generated@@580))))
 :pattern ( ($generated@@184 $generated@@579 ($generated@@193 $generated@@580)))
)))
(assert (forall (($generated@@581 T@U) ($generated@@582 T@U) ) (!  (=> (and (and (= (type $generated@@581) $generated@@173) (= (type $generated@@582) $generated@@67)) ($generated@@184 $generated@@581 ($generated@@198 $generated@@582))) (and (= ($generated@@231 ($generated@@331 ($generated@@80 $generated@@173 $generated@@4) $generated@@581)) $generated@@581) ($generated@@140 ($generated@@331 ($generated@@80 $generated@@173 $generated@@4) $generated@@581) ($generated@@198 $generated@@582))))
 :pattern ( ($generated@@184 $generated@@581 ($generated@@198 $generated@@582)))
)))
(assert (forall (($generated@@583 T@U) ($generated@@584 T@U) ) (!  (=> (and (and (= (type $generated@@583) $generated@@173) (= (type $generated@@584) $generated@@67)) ($generated@@184 $generated@@583 ($generated@@178 $generated@@584))) (and (= ($generated@@231 ($generated@@331 ($generated@@80 $generated@@173 $generated@@2) $generated@@583)) $generated@@583) ($generated@@140 ($generated@@331 ($generated@@80 $generated@@173 $generated@@2) $generated@@583) ($generated@@178 $generated@@584))))
 :pattern ( ($generated@@184 $generated@@583 ($generated@@178 $generated@@584)))
)))
(assert (forall (($generated@@585 T@U) ($generated@@586 T@U) ) (!  (=> (and (and (= (type $generated@@585) $generated@@173) (= (type $generated@@586) $generated@@67)) ($generated@@184 $generated@@585 ($generated@@451 $generated@@586))) (and (= ($generated@@231 ($generated@@331 ($generated@@223 $generated@@173) $generated@@585)) $generated@@585) ($generated@@140 ($generated@@331 ($generated@@223 $generated@@173) $generated@@585) ($generated@@451 $generated@@586))))
 :pattern ( ($generated@@184 $generated@@585 ($generated@@451 $generated@@586)))
)))
(assert (forall (($generated@@587 T@U) ($generated@@588 T@U) ) (!  (=> (and (and (= (type $generated@@587) $generated@@67) (= (type $generated@@588) $generated@@173)) ($generated@@184 $generated@@588 ($generated@@137 $generated@@587))) (and (= ($generated@@231 ($generated@@331 $generated@@81 $generated@@588)) $generated@@588) ($generated@@140 ($generated@@331 $generated@@81 $generated@@588) ($generated@@137 $generated@@587))))
 :pattern ( ($generated@@184 $generated@@588 ($generated@@137 $generated@@587)))
)))
(assert (forall (($generated@@589 T@U) ($generated@@590 T@U) ) (!  (=> (and (and (= (type $generated@@589) $generated@@67) (= (type $generated@@590) $generated@@173)) ($generated@@184 $generated@@590 ($generated@@157 $generated@@589))) (and (= ($generated@@231 ($generated@@331 $generated@@81 $generated@@590)) $generated@@590) ($generated@@140 ($generated@@331 $generated@@81 $generated@@590) ($generated@@157 $generated@@589))))
 :pattern ( ($generated@@184 $generated@@590 ($generated@@157 $generated@@589)))
)))
(assert (forall (($generated@@591 T@U) ($generated@@592 T@U) ($generated@@593 T@U) ) (!  (=> (and (and (= (type $generated@@591) ($generated@@80 $generated@@173 $generated@@2)) (= (type $generated@@592) $generated@@67)) (= (type $generated@@593) ($generated@@80 $generated@@81 $generated@@82))) (= ($generated@@78 $generated@@591 ($generated@@178 $generated@@592) $generated@@593) (forall (($generated@@594 T@U) ) (!  (=> (and (= (type $generated@@594) $generated@@173) (< 0 ($generated ($generated@@85 $generated@@591 $generated@@594)))) ($generated@@209 $generated@@594 $generated@@592 $generated@@593))
 :pattern ( ($generated@@85 $generated@@591 $generated@@594))
))))
 :pattern ( ($generated@@78 $generated@@591 ($generated@@178 $generated@@592) $generated@@593))
)))
(assert (forall (($generated@@595 T@U) ($generated@@596 T@U) ($generated@@597 T@U) ) (!  (=> (and (and (and (= (type $generated@@595) $generated@@164) (= (type $generated@@596) $generated@@67)) (= (type $generated@@597) ($generated@@80 $generated@@81 $generated@@82))) (and ($generated@@152 $generated@@597) (and ($generated@@162 $generated@@595) (exists (($generated@@598 T@U) ) (!  (and (= (type $generated@@598) $generated@@67) ($generated@@78 $generated@@595 ($generated@@163 $generated@@596 $generated@@598) $generated@@597))
 :pattern ( ($generated@@78 $generated@@595 ($generated@@163 $generated@@596 $generated@@598) $generated@@597))
))))) ($generated@@209 ($generated@@171 $generated@@595) $generated@@596 $generated@@597))
 :pattern ( ($generated@@209 ($generated@@171 $generated@@595) $generated@@596 $generated@@597))
)))
(assert (forall (($generated@@599 T@U) ($generated@@600 T@U) ($generated@@601 T@U) ) (!  (=> (and (and (and (= (type $generated@@599) $generated@@164) (= (type $generated@@600) $generated@@67)) (= (type $generated@@601) ($generated@@80 $generated@@81 $generated@@82))) (and ($generated@@152 $generated@@601) (and ($generated@@162 $generated@@599) (exists (($generated@@602 T@U) ) (!  (and (= (type $generated@@602) $generated@@67) ($generated@@78 $generated@@599 ($generated@@163 $generated@@602 $generated@@600) $generated@@601))
 :pattern ( ($generated@@78 $generated@@599 ($generated@@163 $generated@@602 $generated@@600) $generated@@601))
))))) ($generated@@209 ($generated@@172 $generated@@599) $generated@@600 $generated@@601))
 :pattern ( ($generated@@209 ($generated@@172 $generated@@599) $generated@@600 $generated@@601))
)))
(assert (forall (($generated@@603 T@U) ($generated@@604 T@U) ) (!  (=> (and (= (type $generated@@603) $generated@@173) (= (type $generated@@604) $generated@@173)) (= ($generated@@183 ($generated@@205 $generated@@603) ($generated@@205 $generated@@604)) ($generated@@205 ($generated@@183 $generated@@603 $generated@@604))))
 :pattern ( ($generated@@183 ($generated@@205 $generated@@603) ($generated@@205 $generated@@604)))
)))
(assert (forall (($generated@@605 Int) ) (! (= ($generated@@231 ($generated@@8 ($generated@@203 $generated@@605))) ($generated@@205 ($generated@@231 ($generated@@8 $generated@@605))))
 :pattern ( ($generated@@231 ($generated@@8 ($generated@@203 $generated@@605))))
)))
(assert (forall (($generated@@606 T@U) ) (! (= ($generated@@231 ($generated@@205 $generated@@606)) ($generated@@205 ($generated@@231 $generated@@606)))
 :pattern ( ($generated@@231 ($generated@@205 $generated@@606)))
)))
(assert (forall (($generated@@607 T@U) ) (! (let (($generated@@608 ($generated@@224 (type $generated@@607))))
 (=> (and (= (type $generated@@607) ($generated@@223 $generated@@608)) (= ($generated@@222 $generated@@607) 0)) (= $generated@@607 ($generated@@221 $generated@@608))))
 :pattern ( ($generated@@222 $generated@@607))
)))
(assert (forall (($generated@@609 T@U) ($generated@@610 T@U) ($generated@@611 T@U) ) (! (let (($generated@@612 (type $generated@@610)))
 (=> (and (and (= (type $generated@@609) ($generated@@80 $generated@@612 $generated@@2)) (= (type $generated@@611) $generated@@2)) (<= 0 ($generated $generated@@611))) (= ($generated@@244 ($generated@@86 $generated@@609 $generated@@610 $generated@@611)) (+ (- ($generated@@244 $generated@@609) ($generated ($generated@@85 $generated@@609 $generated@@610))) ($generated $generated@@611)))))
 :pattern ( ($generated@@244 ($generated@@86 $generated@@609 $generated@@610 $generated@@611)))
)))
(assert (forall (($generated@@613 T@U) ($generated@@614 T@U) ) (!  (=> (and (= (type $generated@@613) ($generated@@80 $generated@@81 $generated@@82)) (= (type $generated@@614) $generated@@2)) ($generated@@78 $generated@@614 $generated@@46 $generated@@613))
 :pattern ( ($generated@@78 $generated@@614 $generated@@46 $generated@@613))
)))
(assert (forall (($generated@@615 T@U) ($generated@@616 T@U) ) (!  (=> (and (= (type $generated@@615) ($generated@@80 $generated@@81 $generated@@82)) (= (type $generated@@616) $generated@@3)) ($generated@@78 $generated@@616 $generated@@47 $generated@@615))
 :pattern ( ($generated@@78 $generated@@616 $generated@@47 $generated@@615))
)))
(assert (forall (($generated@@617 T@U) ($generated@@618 T@U) ) (!  (=> (and (= (type $generated@@617) ($generated@@80 $generated@@81 $generated@@82)) (= (type $generated@@618) $generated@@4)) ($generated@@78 $generated@@618 $generated@@44 $generated@@617))
 :pattern ( ($generated@@78 $generated@@618 $generated@@44 $generated@@617))
)))
(assert (forall (($generated@@619 T@U) ($generated@@620 T@U) ) (!  (=> (and (= (type $generated@@619) ($generated@@80 $generated@@81 $generated@@82)) (= (type $generated@@620) $generated@@408)) ($generated@@78 $generated@@620 $generated@@45 $generated@@619))
 :pattern ( ($generated@@78 $generated@@620 $generated@@45 $generated@@619))
)))
(assert (forall (($generated@@621 T@U) ($generated@@622 T@U) ) (!  (=> (and (= (type $generated@@621) ($generated@@80 $generated@@81 $generated@@82)) (= (type $generated@@622) $generated@@173)) ($generated@@78 $generated@@622 $generated@@48 $generated@@621))
 :pattern ( ($generated@@78 $generated@@622 $generated@@48 $generated@@621))
)))
(assert (forall (($generated@@623 T@U) ($generated@@624 T@U) ) (!  (=> (and (= (type $generated@@623) ($generated@@223 $generated@@173)) (= (type $generated@@624) $generated@@67)) (= ($generated@@140 $generated@@623 ($generated@@451 $generated@@624)) (forall (($generated@@625 Int) ) (!  (=> (and (<= 0 $generated@@625) (< $generated@@625 ($generated@@222 $generated@@623))) ($generated@@184 ($generated@@452 $generated@@623 $generated@@625) $generated@@624))
 :pattern ( ($generated@@452 $generated@@623 $generated@@625))
))))
 :pattern ( ($generated@@140 $generated@@623 ($generated@@451 $generated@@624)))
)))
(assert (forall (($generated@@627 T@U) ($generated@@628 Int) ) (!  (=> (= (type $generated@@627) ($generated@@223 $generated@@173)) (=> (and (<= 0 $generated@@628) (< $generated@@628 ($generated@@222 $generated@@627))) (< ($generated@@503 ($generated@@331 $generated@@164 ($generated@@452 $generated@@627 $generated@@628))) ($generated@@626 $generated@@627))))
 :pattern ( ($generated@@503 ($generated@@331 $generated@@164 ($generated@@452 $generated@@627 $generated@@628))))
)))
(assert (forall (($generated@@629 T@U) ($generated@@630 T@U) ($generated@@631 T@U) ) (!  (=> (and (and (and (= (type $generated@@629) ($generated@@256 $generated@@173 $generated@@173)) (= (type $generated@@630) $generated@@67)) (= (type $generated@@631) $generated@@67)) ($generated@@140 $generated@@629 ($generated@@359 $generated@@630 $generated@@631))) (and (and ($generated@@140 ($generated@@254 $generated@@629) ($generated@@193 $generated@@630)) ($generated@@140 ($generated@@299 $generated@@629) ($generated@@193 $generated@@631))) ($generated@@140 ($generated@@330 $generated@@629) ($generated@@193 ($generated@@163 $generated@@630 $generated@@631)))))
 :pattern ( ($generated@@140 $generated@@629 ($generated@@359 $generated@@630 $generated@@631)))
)))
(assert (forall (($generated@@632 T@U) ($generated@@633 T@U) ($generated@@634 T@U) ) (!  (=> (and (and (and (= (type $generated@@632) ($generated@@274 $generated@@173 $generated@@173)) (= (type $generated@@633) $generated@@67)) (= (type $generated@@634) $generated@@67)) ($generated@@140 $generated@@632 ($generated@@367 $generated@@633 $generated@@634))) (and (and ($generated@@140 ($generated@@272 $generated@@632) ($generated@@198 $generated@@633)) ($generated@@140 ($generated@@310 $generated@@632) ($generated@@198 $generated@@634))) ($generated@@140 ($generated@@341 $generated@@632) ($generated@@198 ($generated@@163 $generated@@633 $generated@@634)))))
 :pattern ( ($generated@@140 $generated@@632 ($generated@@367 $generated@@633 $generated@@634)))
)))
(assert (forall (($generated@@635 T@U) ) (!  (=> (= (type $generated@@635) $generated@@2) ($generated@@140 $generated@@635 $generated@@46))
 :pattern ( ($generated@@140 $generated@@635 $generated@@46))
)))
(assert (forall (($generated@@636 T@U) ) (!  (=> (= (type $generated@@636) $generated@@3) ($generated@@140 $generated@@636 $generated@@47))
 :pattern ( ($generated@@140 $generated@@636 $generated@@47))
)))
(assert (forall (($generated@@637 T@U) ) (!  (=> (= (type $generated@@637) $generated@@4) ($generated@@140 $generated@@637 $generated@@44))
 :pattern ( ($generated@@140 $generated@@637 $generated@@44))
)))
(assert (forall (($generated@@638 T@U) ) (!  (=> (= (type $generated@@638) $generated@@408) ($generated@@140 $generated@@638 $generated@@45))
 :pattern ( ($generated@@140 $generated@@638 $generated@@45))
)))
(assert (forall (($generated@@639 T@U) ) (!  (=> (= (type $generated@@639) $generated@@173) ($generated@@140 $generated@@639 $generated@@48))
 :pattern ( ($generated@@140 $generated@@639 $generated@@48))
)))
(push 1)
(declare-fun ControlFlow (Int Int) Int)
(declare-fun $generated@@640 () Int)
(declare-fun $generated@@641 () Int)
(declare-fun $generated@@642 () Int)
(declare-fun $generated@@643 () T@U)
(declare-fun $generated@@644 () T@U)
(declare-fun $generated@@645 () Int)
(declare-fun $generated@@646 () T@U)
(declare-fun $generated@@647 () Int)
(declare-fun $generated@@648 () Int)
(declare-fun $generated@@649 () Int)
(declare-fun $generated@@650 () T@U)
(declare-fun $generated@@651 () Int)
(declare-fun $generated@@652 (T@U) Bool)
(declare-fun $generated@@653 () Int)
(assert  (and (and (and (= (type $generated@@644) $generated@@81) (= (type $generated@@643) ($generated@@80 $generated@@81 $generated@@82))) (= (type $generated@@646) ($generated@@80 $generated@@81 $generated@@82))) (= (type $generated@@650) ($generated@@521 $generated@@81 $generated@@4))))
(set-option :timeout 0)
(set-option :rlimit 0)
(assert (not
 (=> (= (ControlFlow 0 0) 26) (let (($generated@@654 true))
(let (($generated@@655  (=> (and (=> (and (<= $generated@@640 $generated@@641) (< $generated@@641 $generated@@642)) (<= ($generated ($generated@@331 $generated@@2 ($generated@@87 ($generated@@85 $generated@@643 $generated@@644) ($generated@@378 $generated@@645)))) ($generated ($generated@@331 $generated@@2 ($generated@@87 ($generated@@85 $generated@@646 $generated@@644) ($generated@@378 $generated@@641)))))) (= (ControlFlow 0 8) 1)) $generated@@654)))
(let (($generated@@656  (=> (and (<= $generated@@640 $generated@@641) (< $generated@@641 $generated@@642)) (and (=> (= (ControlFlow 0 2) (- 0 7)) (not (= $generated@@644 $generated@@138))) (=> (not (= $generated@@644 $generated@@138)) (and (=> (= (ControlFlow 0 2) (- 0 6)) ($generated@@78 $generated@@644 ($generated@@137 $generated@@46) $generated@@643)) (=> ($generated@@78 $generated@@644 ($generated@@137 $generated@@46) $generated@@643) (and (=> (= (ControlFlow 0 2) (- 0 5)) (and (<= 0 $generated@@645) (< $generated@@645 ($generated@@136 $generated@@644)))) (=> (and (<= 0 $generated@@645) (< $generated@@645 ($generated@@136 $generated@@644))) (and (=> (= (ControlFlow 0 2) (- 0 4)) (not (= $generated@@644 $generated@@138))) (=> (not (= $generated@@644 $generated@@138)) (and (=> (= (ControlFlow 0 2) (- 0 3)) (and (<= 0 $generated@@641) (< $generated@@641 ($generated@@136 $generated@@644)))) (=> (and (<= 0 $generated@@641) (< $generated@@641 ($generated@@136 $generated@@644))) (=> (and (<= ($generated ($generated@@331 $generated@@2 ($generated@@87 ($generated@@85 $generated@@643 $generated@@644) ($generated@@378 $generated@@645)))) ($generated ($generated@@331 $generated@@2 ($generated@@87 ($generated@@85 $generated@@646 $generated@@644) ($generated@@378 $generated@@641))))) (= (ControlFlow 0 2) 1)) $generated@@654))))))))))))))
(let (($generated@@657  (=> (forall (($generated@@658 Int) ) (!  (=> true (=> (and (<= $generated@@645 $generated@@658) (< $generated@@658 $generated@@640)) (<= ($generated ($generated@@331 $generated@@2 ($generated@@87 ($generated@@85 $generated@@646 $generated@@644) ($generated@@378 $generated@@658)))) ($generated ($generated@@331 $generated@@2 ($generated@@87 ($generated@@85 $generated@@643 $generated@@644) ($generated@@378 $generated@@645)))))))
 :pattern ( ($generated@@331 $generated@@2 ($generated@@87 ($generated@@85 $generated@@646 $generated@@644) ($generated@@378 $generated@@658))))
)) (and (=> (= (ControlFlow 0 9) 2) $generated@@656) (=> (= (ControlFlow 0 9) 8) $generated@@655)))))
(let (($generated@@659  (=> (and (=> (and (<= $generated@@645 $generated@@647) (< $generated@@647 $generated@@640)) (<= ($generated ($generated@@331 $generated@@2 ($generated@@87 ($generated@@85 $generated@@646 $generated@@644) ($generated@@378 $generated@@647)))) ($generated ($generated@@331 $generated@@2 ($generated@@87 ($generated@@85 $generated@@643 $generated@@644) ($generated@@378 $generated@@645)))))) (= (ControlFlow 0 16) 9)) $generated@@657)))
(let (($generated@@660  (=> (and (<= $generated@@645 $generated@@647) (< $generated@@647 $generated@@640)) (and (=> (= (ControlFlow 0 10) (- 0 15)) (not (= $generated@@644 $generated@@138))) (=> (not (= $generated@@644 $generated@@138)) (and (=> (= (ControlFlow 0 10) (- 0 14)) (and (<= 0 $generated@@647) (< $generated@@647 ($generated@@136 $generated@@644)))) (=> (and (<= 0 $generated@@647) (< $generated@@647 ($generated@@136 $generated@@644))) (and (=> (= (ControlFlow 0 10) (- 0 13)) (not (= $generated@@644 $generated@@138))) (=> (not (= $generated@@644 $generated@@138)) (and (=> (= (ControlFlow 0 10) (- 0 12)) ($generated@@78 $generated@@644 ($generated@@137 $generated@@46) $generated@@643)) (=> ($generated@@78 $generated@@644 ($generated@@137 $generated@@46) $generated@@643) (and (=> (= (ControlFlow 0 10) (- 0 11)) (and (<= 0 $generated@@645) (< $generated@@645 ($generated@@136 $generated@@644)))) (=> (and (<= 0 $generated@@645) (< $generated@@645 ($generated@@136 $generated@@644))) (=> (and (<= ($generated ($generated@@331 $generated@@2 ($generated@@87 ($generated@@85 $generated@@646 $generated@@644) ($generated@@378 $generated@@647)))) ($generated ($generated@@331 $generated@@2 ($generated@@87 ($generated@@85 $generated@@643 $generated@@644) ($generated@@378 $generated@@645))))) (= (ControlFlow 0 10) 9)) $generated@@657))))))))))))))
(let (($generated@@661  (=> (forall (($generated@@662 Int) ($generated@@663 Int) ) (!  (=> true (=> (and (and (and (<= $generated@@645 $generated@@662) (< $generated@@662 $generated@@640)) (<= $generated@@640 $generated@@663)) (< $generated@@663 $generated@@642)) (<= ($generated ($generated@@331 $generated@@2 ($generated@@87 ($generated@@85 $generated@@646 $generated@@644) ($generated@@378 $generated@@662)))) ($generated ($generated@@331 $generated@@2 ($generated@@87 ($generated@@85 $generated@@646 $generated@@644) ($generated@@378 $generated@@663)))))))
 :pattern ( ($generated@@331 $generated@@2 ($generated@@87 ($generated@@85 $generated@@646 $generated@@644) ($generated@@378 $generated@@663))) ($generated@@331 $generated@@2 ($generated@@87 ($generated@@85 $generated@@646 $generated@@644) ($generated@@378 $generated@@662))))
)) (and (=> (= (ControlFlow 0 17) 10) $generated@@660) (=> (= (ControlFlow 0 17) 16) $generated@@659)))))
(let (($generated@@664  (=> (and (=> (and (and (and (<= $generated@@645 $generated@@648) (< $generated@@648 $generated@@640)) (<= $generated@@640 $generated@@649)) (< $generated@@649 $generated@@642)) (<= ($generated ($generated@@331 $generated@@2 ($generated@@87 ($generated@@85 $generated@@646 $generated@@644) ($generated@@378 $generated@@648)))) ($generated ($generated@@331 $generated@@2 ($generated@@87 ($generated@@85 $generated@@646 $generated@@644) ($generated@@378 $generated@@649)))))) (= (ControlFlow 0 23) 17)) $generated@@661)))
(let (($generated@@665  (=> (and (and (<= $generated@@645 $generated@@648) (< $generated@@648 $generated@@640)) (and (<= $generated@@640 $generated@@649) (< $generated@@649 $generated@@642))) (and (=> (= (ControlFlow 0 18) (- 0 22)) (not (= $generated@@644 $generated@@138))) (=> (not (= $generated@@644 $generated@@138)) (and (=> (= (ControlFlow 0 18) (- 0 21)) (and (<= 0 $generated@@648) (< $generated@@648 ($generated@@136 $generated@@644)))) (=> (and (<= 0 $generated@@648) (< $generated@@648 ($generated@@136 $generated@@644))) (and (=> (= (ControlFlow 0 18) (- 0 20)) (not (= $generated@@644 $generated@@138))) (=> (not (= $generated@@644 $generated@@138)) (and (=> (= (ControlFlow 0 18) (- 0 19)) (and (<= 0 $generated@@649) (< $generated@@649 ($generated@@136 $generated@@644)))) (=> (and (<= 0 $generated@@649) (< $generated@@649 ($generated@@136 $generated@@644))) (=> (and (<= ($generated ($generated@@331 $generated@@2 ($generated@@87 ($generated@@85 $generated@@646 $generated@@644) ($generated@@378 $generated@@648)))) ($generated ($generated@@331 $generated@@2 ($generated@@87 ($generated@@85 $generated@@646 $generated@@644) ($generated@@378 $generated@@649))))) (= (ControlFlow 0 18) 17)) $generated@@661))))))))))))
(let (($generated@@666  (=> (= $generated@@650 ($generated@@520 $generated@@138 $generated@@643 $generated@@60 $generated@@644)) (and (=> (= (ControlFlow 0 24) (- 0 25)) (not (= $generated@@644 $generated@@138))) (=> (not (= $generated@@644 $generated@@138)) (=> (and (= $generated@@651 ($generated@@136 $generated@@644)) (<= ($generated@@203 0) $generated@@645)) (=> (and (and (and (<= (+ $generated@@645 2) $generated@@642) (<= $generated@@642 $generated@@651)) (and ($generated@@152 $generated@@646) ($generated@@652 $generated@@646))) (and (and (forall (($generated@@667 T@U) ) (!  (=> (= (type $generated@@667) $generated@@81) (=> (and (not (= $generated@@667 $generated@@138)) ($generated@@0 ($generated@@87 ($generated@@85 $generated@@643 $generated@@667) $generated@@60))) (or (= ($generated@@85 $generated@@646 $generated@@667) ($generated@@85 $generated@@643 $generated@@667)) (= $generated@@667 $generated@@644))))
 :pattern ( ($generated@@85 $generated@@646 $generated@@667))
)) ($generated@@145 $generated@@643 $generated@@646)) (and (<= $generated@@645 $generated@@640) (< $generated@@640 $generated@@642)))) (and (=> (= (ControlFlow 0 24) 18) $generated@@665) (=> (= (ControlFlow 0 24) 23) $generated@@664)))))))))
(let (($generated@@668  (=> (and ($generated@@152 $generated@@643) ($generated@@652 $generated@@643)) (=> (and (and ($generated@@140 $generated@@644 ($generated@@157 $generated@@46)) ($generated@@78 $generated@@644 ($generated@@157 $generated@@46) $generated@@643)) (and (= 1 $generated@@653) (= (ControlFlow 0 26) 24))) $generated@@666))))
$generated@@668))))))))))))
))
(check-sat)
(pop 1)
; Valid
(get-info :rlimit)
(reset)
(set-option :rlimit 0)
; did a full reset
(reset)
(set-option :print-success false)
(set-info :smt-lib-version 2.6)
(set-option :auto_config false)
(set-option :type_check true)
(set-option :smt.case_split 3)
(set-option :smt.qi.eager_threshold 100)
(set-option :smt.delay_units true)
(set-option :smt.arith.solver 2)
(set-option :smt.mbqi false)
(set-option :model.compact false)
(set-option :model.v2 true)
(set-option :pp.bv_literals false)
; done setting options


(set-info :category "industrial")
(declare-sort |T@U| 0)
(declare-sort |T@T| 0)
(declare-fun real_pow (Real Real) Real)
(declare-fun UOrdering2 (|T@U| |T@U|) Bool)
(declare-fun UOrdering3 (|T@T| |T@U| |T@U|) Bool)
(declare-fun tickleBool (Bool) Bool)
(assert (and (tickleBool true) (tickleBool false)))
(declare-fun $generated (T@U) Int)
(declare-fun $generated@@0 (T@U) Bool)
(declare-fun $generated@@1 (T@T) Int)
(declare-fun $generated@@2 () T@T)
(declare-fun $generated@@3 () T@T)
(declare-fun $generated@@4 () T@T)
(declare-fun $generated@@5 () T@T)
(declare-fun $generated@@6 () T@T)
(declare-fun $generated@@7 () T@T)
(declare-fun $generated@@8 (Int) T@U)
(declare-fun type (T@U) T@T)
(declare-fun $generated@@9 (Real) T@U)
(declare-fun $generated@@10 (T@U) Real)
(declare-fun $generated@@11 (Bool) T@U)
(declare-fun $generated@@12 (RoundingMode) T@U)
(declare-fun $generated@@13 (T@U) RoundingMode)
(declare-fun $generated@@14 (String) T@U)
(declare-fun $generated@@15 (T@U) String)
(declare-fun $generated@@16 ((RegEx String)) T@U)
(declare-fun $generated@@17 (T@U) (RegEx String))
(declare-fun $generated@@44 () T@U)
(declare-fun $generated@@45 () T@U)
(declare-fun $generated@@46 () T@U)
(declare-fun $generated@@47 () T@U)
(declare-fun $generated@@48 () T@U)
(declare-fun $generated@@49 () T@U)
(declare-fun $generated@@50 () T@U)
(declare-fun $generated@@51 () T@U)
(declare-fun $generated@@52 () T@U)
(declare-fun $generated@@53 () T@U)
(declare-fun $generated@@54 () T@U)
(declare-fun $generated@@55 () T@U)
(declare-fun $generated@@56 () T@U)
(declare-fun $generated@@57 () T@U)
(declare-fun $generated@@58 () T@U)
(declare-fun $generated@@59 () T@U)
(declare-fun $generated@@60 () T@U)
(declare-fun $generated@@61 () T@U)
(declare-fun $generated@@62 () T@U)
(declare-fun $generated@@63 () T@U)
(declare-fun $generated@@64 () T@U)
(declare-fun $generated@@65 () T@U)
(declare-fun $generated@@66 () T@U)
(declare-fun $generated@@67 () T@T)
(declare-fun $generated@@68 () T@T)
(declare-fun $generated@@69 (T@T) T@T)
(declare-fun $generated@@70 (T@T) T@T)
(declare-fun $generated@@71 () T@T)
(declare-fun $generated@@72 () T@T)
(declare-fun $generated@@75 (T@U) Int)
(declare-fun $generated@@76 (T@U) T@U)
(declare-fun $generated@@78 (T@U T@U T@U) Bool)
(declare-fun $generated@@79 (Int) T@U)
(declare-fun $generated@@80 (T@T T@T) T@T)
(declare-fun $generated@@81 () T@T)
(declare-fun $generated@@82 () T@T)
(declare-fun $generated@@83 (T@T) T@T)
(declare-fun $generated@@84 (T@T) T@T)
(declare-fun $generated@@85 (T@U T@U) T@U)
(declare-fun $generated@@86 (T@U T@U T@U) T@U)
(declare-fun $generated@@87 (T@U T@U) T@U)
(declare-fun $generated@@88 (T@U T@U T@U) T@U)
(declare-fun $generated@@136 (T@U) Int)
(declare-fun $generated@@137 (T@U) T@U)
(declare-fun $generated@@138 () T@U)
(declare-fun $generated@@139 (T@U) T@U)
(declare-fun $generated@@140 (T@U T@U) Bool)
(declare-fun $generated@@145 (T@U T@U) Bool)
(declare-fun $generated@@152 (T@U) Bool)
(declare-fun $generated@@157 (T@U) T@U)
(declare-fun $generated@@162 (T@U) Bool)
(declare-fun $generated@@163 (T@U T@U) T@U)
(declare-fun $generated@@164 () T@T)
(declare-fun $generated@@170 (T@U T@U) Bool)
(declare-fun $generated@@171 (T@U) T@U)
(declare-fun $generated@@172 (T@U) T@U)
(declare-fun $generated@@173 () T@T)
(declare-fun $generated@@178 (T@U) T@U)
(declare-fun $generated@@179 (T@U) Bool)
(declare-fun $generated@@183 (T@U T@U) T@U)
(declare-fun $generated@@184 (T@U T@U) Bool)
(declare-fun $generated@@193 (T@U) T@U)
(declare-fun $generated@@198 (T@U) T@U)
(declare-fun $generated@@203 (Int) Int)
(declare-fun $generated@@205 (T@U) T@U)
(declare-fun $generated@@209 (T@U T@U T@U) Bool)
(declare-fun $generated@@215 (T@U) T@U)
(declare-fun $generated@@221 (T@T) T@U)
(declare-fun $generated@@222 (T@U) Int)
(declare-fun $generated@@223 (T@T) T@T)
(declare-fun $generated@@224 (T@T) T@T)
(declare-fun $generated@@231 (T@U) T@U)
(declare-fun $generated@@244 (T@U) Int)
(declare-fun $generated@@245 (T@T) T@U)
(declare-fun $generated@@250 (T@U) T@U)
(declare-fun $generated@@254 (T@U) T@U)
(declare-fun $generated@@255 (T@T T@T) T@U)
(declare-fun $generated@@256 (T@T T@T) T@T)
(declare-fun $generated@@257 (T@T) T@T)
(declare-fun $generated@@258 (T@T) T@T)
(declare-fun $generated@@272 (T@U) T@U)
(declare-fun $generated@@273 (T@T T@T) T@U)
(declare-fun $generated@@274 (T@T T@T) T@T)
(declare-fun $generated@@275 (T@T) T@T)
(declare-fun $generated@@276 (T@T) T@T)
(declare-fun $generated@@299 (T@U) T@U)
(declare-fun $generated@@310 (T@U) T@U)
(declare-fun $generated@@330 (T@U) T@U)
(declare-fun $generated@@331 (T@T T@U) T@U)
(declare-fun $generated@@332 (T@U) T@U)
(declare-fun $generated@@341 (T@U) T@U)
(declare-fun $generated@@342 (T@U) T@U)
(declare-fun $generated@@359 (T@U T@U) T@U)
(declare-fun $generated@@367 (T@U T@U) T@U)
(declare-fun $generated@@378 (Int) T@U)
(declare-fun $generated@@384 (T@T) T@U)
(declare-fun $generated@@408 () T@T)
(declare-fun $generated@@417 (T@U) T@U)
(declare-fun $generated@@421 (T@U) T@U)
(declare-fun $generated@@427 (T@U) T@U)
(declare-fun $generated@@431 (T@U) T@U)
(declare-fun $generated@@439 (T@U) T@U)
(declare-fun $generated@@443 (T@U) T@U)
(declare-fun $generated@@451 (T@U) T@U)
(declare-fun $generated@@452 (T@U Int) T@U)
(declare-fun $generated@@461 (T@U) Int)
(declare-fun $generated@@463 (T@U) T@U)
(declare-fun $generated@@467 (T@U) T@U)
(declare-fun $generated@@471 (T@U) T@U)
(declare-fun $generated@@475 (T@U) T@U)
(declare-fun $generated@@480 (T@U) Int)
(declare-fun $generated@@482 (T@U) T@U)
(declare-fun $generated@@485 (T@U) T@U)
(declare-fun $generated@@502 (T@U) Int)
(declare-fun $generated@@503 (T@U) Int)
(declare-fun $generated@@519 (T@U T@U T@U) T@U)
(declare-fun $generated@@520 (T@U T@U T@U T@U) T@U)
(declare-fun $generated@@521 (T@T T@T) T@T)
(declare-fun $generated@@522 (T@T) T@T)
(declare-fun $generated@@523 (T@T) T@T)
(declare-fun $generated@@524 (T@U T@U T@U T@U) T@U)
(declare-fun $generated@@631 (T@U) Int)
(assert  (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (= ($generated@@1 $generated@@2) 0) (= ($generated@@1 $generated@@3) 1)) (= ($generated@@1 $generated@@4) 2)) (= ($generated@@1 $generated@@5) 3)) (= ($generated@@1 $generated@@6) 4)) (= ($generated@@1 $generated@@7) 5)) (forall (($generated@@18 Int) ) (! (= ($generated ($generated@@8 $generated@@18)) $generated@@18)
 :pattern ( ($generated@@8 $generated@@18))
))) (forall (($generated@@19 T@U) ) (!  (=> (= (type $generated@@19) $generated@@2) (= ($generated@@8 ($generated $generated@@19)) $generated@@19))
 :pattern ( ($generated $generated@@19))
))) (forall (($generated@@20 Int) ) (! (= (type ($generated@@8 $generated@@20)) $generated@@2)
 :pattern ( ($generated@@8 $generated@@20))
))) (forall (($generated@@21 Real) ) (! (= ($generated@@10 ($generated@@9 $generated@@21)) $generated@@21)
 :pattern ( ($generated@@9 $generated@@21))
))) (forall (($generated@@22 T@U) ) (!  (=> (= (type $generated@@22) $generated@@3) (= ($generated@@9 ($generated@@10 $generated@@22)) $generated@@22))
 :pattern ( ($generated@@10 $generated@@22))
))) (forall (($generated@@23 Real) ) (! (= (type ($generated@@9 $generated@@23)) $generated@@3)
 :pattern ( ($generated@@9 $generated@@23))
))) (forall (($generated@@24 Bool) ) (! (= ($generated@@0 ($generated@@11 $generated@@24)) $generated@@24)
 :pattern ( ($generated@@11 $generated@@24))
))) (forall (($generated@@25 T@U) ) (!  (=> (= (type $generated@@25) $generated@@4) (= ($generated@@11 ($generated@@0 $generated@@25)) $generated@@25))
 :pattern ( ($generated@@0 $generated@@25))
))) (forall (($generated@@26 Bool) ) (! (= (type ($generated@@11 $generated@@26)) $generated@@4)
 :pattern ( ($generated@@11 $generated@@26))
))) (forall (($generated@@27 RoundingMode) ) (! (= ($generated@@13 ($generated@@12 $generated@@27)) $generated@@27)
 :pattern ( ($generated@@12 $generated@@27))
))) (forall (($generated@@28 T@U) ) (!  (=> (= (type $generated@@28) $generated@@5) (= ($generated@@12 ($generated@@13 $generated@@28)) $generated@@28))
 :pattern ( ($generated@@13 $generated@@28))
))) (forall (($generated@@29 RoundingMode) ) (! (= (type ($generated@@12 $generated@@29)) $generated@@5)
 :pattern ( ($generated@@12 $generated@@29))
))) (forall (($generated@@30 String) ) (! (= ($generated@@15 ($generated@@14 $generated@@30)) $generated@@30)
 :pattern ( ($generated@@14 $generated@@30))
))) (forall (($generated@@31 T@U) ) (!  (=> (= (type $generated@@31) $generated@@6) (= ($generated@@14 ($generated@@15 $generated@@31)) $generated@@31))
 :pattern ( ($generated@@15 $generated@@31))
))) (forall (($generated@@32 String) ) (! (= (type ($generated@@14 $generated@@32)) $generated@@6)
 :pattern ( ($generated@@14 $generated@@32))
))) (forall (($generated@@33 (RegEx String)) ) (! (= ($generated@@17 ($generated@@16 $generated@@33)) $generated@@33)
 :pattern ( ($generated@@16 $generated@@33))
))) (forall (($generated@@34 T@U) ) (!  (=> (= (type $generated@@34) $generated@@7) (= ($generated@@16 ($generated@@17 $generated@@34)) $generated@@34))
 :pattern ( ($generated@@17 $generated@@34))
))) (forall (($generated@@35 (RegEx String)) ) (! (= (type ($generated@@16 $generated@@35)) $generated@@7)
 :pattern ( ($generated@@16 $generated@@35))
))))
(assert (forall (($generated@@36 T@U) ) (! (UOrdering2 $generated@@36 $generated@@36)
 :no-pattern ($generated $generated@@36)
 :no-pattern ($generated@@0 $generated@@36)
)))
(assert (forall (($generated@@37 T@U) ($generated@@38 T@U) ($generated@@39 T@U) ) (! (let (($generated@@40 (type $generated@@37)))
 (=> (and (and (= (type $generated@@38) $generated@@40) (= (type $generated@@39) $generated@@40)) (and (UOrdering2 $generated@@37 $generated@@38) (UOrdering2 $generated@@38 $generated@@39))) (UOrdering2 $generated@@37 $generated@@39)))
 :pattern ( (UOrdering2 $generated@@37 $generated@@38) (UOrdering2 $generated@@38 $generated@@39))
)))
(assert (forall (($generated@@41 T@U) ($generated@@42 T@U) ) (! (let (($generated@@43 (type $generated@@41)))
 (=> (= (type $generated@@42) $generated@@43) (=> (and (UOrdering2 $generated@@41 $generated@@42) (UOrdering2 $generated@@42 $generated@@41)) (= $generated@@41 $generated@@42))))
 :pattern ( (UOrdering2 $generated@@41 $generated@@42) (UOrdering2 $generated@@42 $generated@@41))
)))
(assert  (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (= ($generated@@1 $generated@@67) 6) (= (type $generated@@44) $generated@@67)) (= (type $generated@@45) $generated@@67)) (= (type $generated@@46) $generated@@67)) (= (type $generated@@47) $generated@@67)) (= (type $generated@@48) $generated@@67)) (= ($generated@@1 $generated@@68) 7)) (= (type $generated@@49) $generated@@68)) (= (type $generated@@50) $generated@@68)) (= (type $generated@@51) $generated@@68)) (= (type $generated@@52) $generated@@68)) (= (type $generated@@53) $generated@@68)) (= (type $generated@@54) $generated@@68)) (= (type $generated@@55) $generated@@68)) (= (type $generated@@56) $generated@@68)) (= (type $generated@@57) $generated@@68)) (= (type $generated@@58) $generated@@68)) (= (type $generated@@59) $generated@@68)) (forall (($generated@@73 T@T) ) (= ($generated@@1 ($generated@@69 $generated@@73)) 8))) (forall (($generated@@74 T@T) ) (! (= ($generated@@70 ($generated@@69 $generated@@74)) $generated@@74)
 :pattern ( ($generated@@69 $generated@@74))
))) (= (type $generated@@60) ($generated@@69 $generated@@4))) (= (type $generated@@61) $generated@@68)) (= (type $generated@@62) $generated@@68)) (= ($generated@@1 $generated@@71) 9)) (= (type $generated@@63) $generated@@71)) (= (type $generated@@64) $generated@@68)) (= ($generated@@1 $generated@@72) 10)) (= (type $generated@@65) $generated@@72)) (= (type $generated@@66) $generated@@72)))
(assert (distinct $generated@@44 $generated@@45 $generated@@46 $generated@@47 $generated@@48 $generated@@49 $generated@@50 $generated@@51 $generated@@52 $generated@@53 $generated@@54 $generated@@55 $generated@@56 $generated@@57 $generated@@58 $generated@@59 $generated@@60 $generated@@61 $generated@@62 $generated@@63 $generated@@64 $generated@@65 $generated@@66)
)
(assert (= ($generated@@75 $generated@@60) 0))
(assert (forall (($generated@@77 T@U) ) (! (= (type ($generated@@76 $generated@@77)) $generated@@68)
 :pattern ( ($generated@@76 $generated@@77))
)))
(assert (= ($generated@@76 $generated@@44) $generated@@49))
(assert (= ($generated@@76 $generated@@45) $generated@@50))
(assert (= ($generated@@76 $generated@@46) $generated@@51))
(assert (= ($generated@@76 $generated@@47) $generated@@52))
(assert (= ($generated@@76 $generated@@48) $generated@@53))
(assert  (and (and (and (and (and (and (and (and (and (and (and (and (and (forall (($generated@@89 T@T) ($generated@@90 T@T) ) (= ($generated@@1 ($generated@@80 $generated@@89 $generated@@90)) 11)) (forall (($generated@@91 T@T) ($generated@@92 T@T) ) (! (= ($generated@@83 ($generated@@80 $generated@@91 $generated@@92)) $generated@@91)
 :pattern ( ($generated@@80 $generated@@91 $generated@@92))
))) (forall (($generated@@93 T@T) ($generated@@94 T@T) ) (! (= ($generated@@84 ($generated@@80 $generated@@93 $generated@@94)) $generated@@94)
 :pattern ( ($generated@@80 $generated@@93 $generated@@94))
))) (forall (($generated@@95 T@U) ($generated@@96 T@U) ) (! (let (($generated@@97 ($generated@@84 (type $generated@@95))))
(= (type ($generated@@85 $generated@@95 $generated@@96)) $generated@@97))
 :pattern ( ($generated@@85 $generated@@95 $generated@@96))
))) (forall (($generated@@98 T@U) ($generated@@99 T@U) ($generated@@100 T@U) ) (! (let (($generated@@101 (type $generated@@100)))
(let (($generated@@102 (type $generated@@99)))
(= (type ($generated@@86 $generated@@98 $generated@@99 $generated@@100)) ($generated@@80 $generated@@102 $generated@@101))))
 :pattern ( ($generated@@86 $generated@@98 $generated@@99 $generated@@100))
))) (forall (($generated@@103 T@U) ($generated@@104 T@U) ($generated@@105 T@U) ) (! (let (($generated@@106 ($generated@@84 (type $generated@@103))))
 (=> (= (type $generated@@105) $generated@@106) (= ($generated@@85 ($generated@@86 $generated@@103 $generated@@104 $generated@@105) $generated@@104) $generated@@105)))
 :weight 0
))) (and (forall (($generated@@107 T@U) ($generated@@108 T@U) ($generated@@109 T@U) ($generated@@110 T@U) ) (!  (or (= $generated@@109 $generated@@110) (= ($generated@@85 ($generated@@86 $generated@@108 $generated@@109 $generated@@107) $generated@@110) ($generated@@85 $generated@@108 $generated@@110)))
 :weight 0
)) (forall (($generated@@111 T@U) ($generated@@112 T@U) ($generated@@113 T@U) ($generated@@114 T@U) ) (!  (or true (= ($generated@@85 ($generated@@86 $generated@@112 $generated@@113 $generated@@111) $generated@@114) ($generated@@85 $generated@@112 $generated@@114)))
 :weight 0
)))) (= ($generated@@1 $generated@@81) 12)) (forall (($generated@@115 T@U) ($generated@@116 T@U) ) (! (let (($generated@@117 ($generated@@70 (type $generated@@116))))
(= (type ($generated@@87 $generated@@115 $generated@@116)) $generated@@117))
 :pattern ( ($generated@@87 $generated@@115 $generated@@116))
))) (= ($generated@@1 $generated@@82) 13)) (forall (($generated@@118 T@U) ($generated@@119 T@U) ($generated@@120 T@U) ) (! (= (type ($generated@@88 $generated@@118 $generated@@119 $generated@@120)) $generated@@82)
 :pattern ( ($generated@@88 $generated@@118 $generated@@119 $generated@@120))
))) (forall (($generated@@121 T@U) ($generated@@122 T@U) ($generated@@123 T@U) ) (! (let (($generated@@124 ($generated@@70 (type $generated@@122))))
 (=> (= (type $generated@@123) $generated@@124) (= ($generated@@87 ($generated@@88 $generated@@121 $generated@@122 $generated@@123) $generated@@122) $generated@@123)))
 :weight 0
))) (and (forall (($generated@@125 T@U) ($generated@@126 T@U) ($generated@@127 T@U) ($generated@@128 T@U) ) (!  (or (= $generated@@127 $generated@@128) (= ($generated@@87 ($generated@@88 $generated@@126 $generated@@127 $generated@@125) $generated@@128) ($generated@@87 $generated@@126 $generated@@128)))
 :weight 0
)) (forall (($generated@@129 T@U) ($generated@@130 T@U) ($generated@@131 T@U) ($generated@@132 T@U) ) (!  (or true (= ($generated@@87 ($generated@@88 $generated@@130 $generated@@131 $generated@@129) $generated@@132) ($generated@@87 $generated@@130 $generated@@132)))
 :weight 0
)))) (forall (($generated@@133 Int) ) (! (= (type ($generated@@79 $generated@@133)) $generated@@67)
 :pattern ( ($generated@@79 $generated@@133))
))))
(assert (forall (($generated@@134 T@U) ($generated@@135 T@U) ) (!  (=> (and (= (type $generated@@134) $generated@@2) (= (type $generated@@135) ($generated@@80 $generated@@81 $generated@@82))) ($generated@@78 $generated@@134 ($generated@@79 0) $generated@@135))
 :pattern ( ($generated@@78 $generated@@134 ($generated@@79 0) $generated@@135))
)))
(assert  (and (and (forall (($generated@@141 T@U) ) (! (= (type ($generated@@137 $generated@@141)) $generated@@67)
 :pattern ( ($generated@@137 $generated@@141))
)) (= (type $generated@@138) $generated@@81)) (forall (($generated@@142 T@U) ) (! (= (type ($generated@@139 $generated@@142)) $generated@@67)
 :pattern ( ($generated@@139 $generated@@142))
))))
(assert (forall (($generated@@143 T@U) ($generated@@144 T@U) ) (!  (=> (and (and (= (type $generated@@143) $generated@@67) (= (type $generated@@144) $generated@@81)) (and (not (= $generated@@144 $generated@@138)) (= ($generated@@139 $generated@@144) ($generated@@137 $generated@@143)))) ($generated@@140 ($generated@@8 ($generated@@136 $generated@@144)) $generated@@46))
 :pattern ( ($generated@@136 $generated@@144) ($generated@@137 $generated@@143))
)))
(assert (forall (($generated@@146 T@U) ($generated@@147 T@U) ) (!  (=> (and (and (= (type $generated@@146) ($generated@@80 $generated@@81 $generated@@82)) (= (type $generated@@147) ($generated@@80 $generated@@81 $generated@@82))) ($generated@@145 $generated@@146 $generated@@147)) (forall (($generated@@148 T@U) ) (!  (=> (and (= (type $generated@@148) $generated@@81) ($generated@@0 ($generated@@87 ($generated@@85 $generated@@146 $generated@@148) $generated@@60))) ($generated@@0 ($generated@@87 ($generated@@85 $generated@@147 $generated@@148) $generated@@60)))
 :pattern ( ($generated@@87 ($generated@@85 $generated@@147 $generated@@148) $generated@@60))
)))
 :pattern ( ($generated@@145 $generated@@146 $generated@@147))
)))
(assert (forall (($generated@@149 T@U) ($generated@@150 T@U) ($generated@@151 T@U) ) (!  (=> (and (and (= (type $generated@@149) $generated@@67) (= (type $generated@@150) $generated@@81)) (= (type $generated@@151) ($generated@@80 $generated@@81 $generated@@82))) (= ($generated@@78 $generated@@150 ($generated@@137 $generated@@149) $generated@@151)  (or (= $generated@@150 $generated@@138) ($generated@@0 ($generated@@87 ($generated@@85 $generated@@151 $generated@@150) $generated@@60)))))
 :pattern ( ($generated@@78 $generated@@150 ($generated@@137 $generated@@149) $generated@@151))
)))
(assert (forall (($generated@@153 T@U) ($generated@@154 T@U) ($generated@@155 T@U) ) (!  (=> (and (and (and (= (type $generated@@153) $generated@@67) (= (type $generated@@154) ($generated@@80 $generated@@81 $generated@@82))) (= (type $generated@@155) $generated@@81)) (and (and ($generated@@152 $generated@@154) (and (not (= $generated@@155 $generated@@138)) (= ($generated@@139 $generated@@155) ($generated@@137 $generated@@153)))) ($generated@@0 ($generated@@87 ($generated@@85 $generated@@154 $generated@@155) $generated@@60)))) ($generated@@78 ($generated@@8 ($generated@@136 $generated@@155)) $generated@@46 $generated@@154))
 :pattern ( ($generated@@136 $generated@@155) ($generated@@87 ($generated@@85 $generated@@154 $generated@@155) $generated@@60) ($generated@@137 $generated@@153))
)))
(assert (forall (($generated@@156 T@U) ) (!  (=> (= (type $generated@@156) $generated@@2) ($generated@@140 $generated@@156 ($generated@@79 0)))
 :pattern ( ($generated@@140 $generated@@156 ($generated@@79 0)))
)))
(assert (forall (($generated@@158 T@U) ) (! (= (type ($generated@@157 $generated@@158)) $generated@@67)
 :pattern ( ($generated@@157 $generated@@158))
)))
(assert (forall (($generated@@159 T@U) ($generated@@160 T@U) ($generated@@161 T@U) ) (!  (=> (and (and (= (type $generated@@159) $generated@@67) (= (type $generated@@160) $generated@@81)) (= (type $generated@@161) ($generated@@80 $generated@@81 $generated@@82))) (= ($generated@@78 $generated@@160 ($generated@@157 $generated@@159) $generated@@161) ($generated@@78 $generated@@160 ($generated@@137 $generated@@159) $generated@@161)))
 :pattern ( ($generated@@78 $generated@@160 ($generated@@157 $generated@@159) $generated@@161))
)))
(assert  (and (= ($generated@@1 $generated@@164) 14) (forall (($generated@@165 T@U) ($generated@@166 T@U) ) (! (= (type ($generated@@163 $generated@@165 $generated@@166)) $generated@@67)
 :pattern ( ($generated@@163 $generated@@165 $generated@@166))
))))
(assert (forall (($generated@@167 T@U) ($generated@@168 T@U) ($generated@@169 T@U) ) (!  (=> (and (and (and (= (type $generated@@167) $generated@@67) (= (type $generated@@168) $generated@@67)) (= (type $generated@@169) $generated@@164)) ($generated@@140 $generated@@169 ($generated@@163 $generated@@167 $generated@@168))) ($generated@@162 $generated@@169))
 :pattern ( ($generated@@162 $generated@@169) ($generated@@140 $generated@@169 ($generated@@163 $generated@@167 $generated@@168)))
)))
(assert  (and (and (= ($generated@@1 $generated@@173) 15) (forall (($generated@@174 T@U) ) (! (= (type ($generated@@171 $generated@@174)) $generated@@173)
 :pattern ( ($generated@@171 $generated@@174))
))) (forall (($generated@@175 T@U) ) (! (= (type ($generated@@172 $generated@@175)) $generated@@173)
 :pattern ( ($generated@@172 $generated@@175))
))))
(assert (forall (($generated@@176 T@U) ($generated@@177 T@U) ) (!  (=> (and (and (= (type $generated@@176) $generated@@164) (= (type $generated@@177) $generated@@164)) true) (= ($generated@@170 $generated@@176 $generated@@177)  (and (= ($generated@@171 $generated@@176) ($generated@@171 $generated@@177)) (= ($generated@@172 $generated@@176) ($generated@@172 $generated@@177)))))
 :pattern ( ($generated@@170 $generated@@176 $generated@@177))
)))
(assert (forall (($generated@@180 T@U) ) (! (= (type ($generated@@178 $generated@@180)) $generated@@67)
 :pattern ( ($generated@@178 $generated@@180))
)))
(assert (forall (($generated@@181 T@U) ($generated@@182 T@U) ) (!  (=> (and (and (= (type $generated@@181) ($generated@@80 $generated@@173 $generated@@2)) (= (type $generated@@182) $generated@@67)) ($generated@@140 $generated@@181 ($generated@@178 $generated@@182))) ($generated@@179 $generated@@181))
 :pattern ( ($generated@@140 $generated@@181 ($generated@@178 $generated@@182)))
)))
(assert (forall (($generated@@185 T@U) ($generated@@186 T@U) ) (! (= (type ($generated@@183 $generated@@185 $generated@@186)) $generated@@164)
 :pattern ( ($generated@@183 $generated@@185 $generated@@186))
)))
(assert (forall (($generated@@187 T@U) ($generated@@188 T@U) ($generated@@189 T@U) ($generated@@190 T@U) ) (!  (=> (and (and (and (= (type $generated@@187) $generated@@67) (= (type $generated@@188) $generated@@67)) (= (type $generated@@189) $generated@@173)) (= (type $generated@@190) $generated@@173)) (= ($generated@@140 ($generated@@183 $generated@@189 $generated@@190) ($generated@@163 $generated@@187 $generated@@188))  (and ($generated@@184 $generated@@189 $generated@@187) ($generated@@184 $generated@@190 $generated@@188))))
 :pattern ( ($generated@@140 ($generated@@183 $generated@@189 $generated@@190) ($generated@@163 $generated@@187 $generated@@188)))
)))
(assert (forall (($generated@@191 T@U) ($generated@@192 T@U) ) (!  (=> (and (= (type $generated@@191) $generated@@164) (= (type $generated@@192) $generated@@164)) (= ($generated@@170 $generated@@191 $generated@@192) (= $generated@@191 $generated@@192)))
 :pattern ( ($generated@@170 $generated@@191 $generated@@192))
)))
(assert (forall (($generated@@194 T@U) ) (! (= (type ($generated@@193 $generated@@194)) $generated@@67)
 :pattern ( ($generated@@193 $generated@@194))
)))
(assert (forall (($generated@@195 T@U) ($generated@@196 T@U) ) (!  (=> (and (= (type $generated@@195) ($generated@@80 $generated@@173 $generated@@4)) (= (type $generated@@196) $generated@@67)) (= ($generated@@140 $generated@@195 ($generated@@193 $generated@@196)) (forall (($generated@@197 T@U) ) (!  (=> (and (= (type $generated@@197) $generated@@173) ($generated@@0 ($generated@@85 $generated@@195 $generated@@197))) ($generated@@184 $generated@@197 $generated@@196))
 :pattern ( ($generated@@85 $generated@@195 $generated@@197))
))))
 :pattern ( ($generated@@140 $generated@@195 ($generated@@193 $generated@@196)))
)))
(assert (forall (($generated@@199 T@U) ) (! (= (type ($generated@@198 $generated@@199)) $generated@@67)
 :pattern ( ($generated@@198 $generated@@199))
)))
(assert (forall (($generated@@200 T@U) ($generated@@201 T@U) ) (!  (=> (and (= (type $generated@@200) ($generated@@80 $generated@@173 $generated@@4)) (= (type $generated@@201) $generated@@67)) (= ($generated@@140 $generated@@200 ($generated@@198 $generated@@201)) (forall (($generated@@202 T@U) ) (!  (=> (and (= (type $generated@@202) $generated@@173) ($generated@@0 ($generated@@85 $generated@@200 $generated@@202))) ($generated@@184 $generated@@202 $generated@@201))
 :pattern ( ($generated@@85 $generated@@200 $generated@@202))
))))
 :pattern ( ($generated@@140 $generated@@200 ($generated@@198 $generated@@201)))
)))
(assert (forall (($generated@@204 Int) ) (! (= ($generated@@203 $generated@@204) $generated@@204)
 :pattern ( ($generated@@203 $generated@@204))
)))
(assert (forall (($generated@@206 T@U) ) (! (let (($generated@@207 (type $generated@@206)))
(= (type ($generated@@205 $generated@@206)) $generated@@207))
 :pattern ( ($generated@@205 $generated@@206))
)))
(assert (forall (($generated@@208 T@U) ) (! (= ($generated@@205 $generated@@208) $generated@@208)
 :pattern ( ($generated@@205 $generated@@208))
)))
(assert (forall (($generated@@210 T@U) ($generated@@211 T@U) ($generated@@212 T@U) ($generated@@213 T@U) ($generated@@214 T@U) ) (!  (=> (and (and (and (and (and (= (type $generated@@210) $generated@@67) (= (type $generated@@211) $generated@@67)) (= (type $generated@@212) $generated@@173)) (= (type $generated@@213) $generated@@173)) (= (type $generated@@214) ($generated@@80 $generated@@81 $generated@@82))) ($generated@@152 $generated@@214)) (= ($generated@@78 ($generated@@183 $generated@@212 $generated@@213) ($generated@@163 $generated@@210 $generated@@211) $generated@@214)  (and ($generated@@209 $generated@@212 $generated@@210 $generated@@214) ($generated@@209 $generated@@213 $generated@@211 $generated@@214))))
 :pattern ( ($generated@@78 ($generated@@183 $generated@@212 $generated@@213) ($generated@@163 $generated@@210 $generated@@211) $generated@@214))
)))
(assert (forall (($generated@@216 T@U) ) (! (= (type ($generated@@215 $generated@@216)) $generated@@71)
 :pattern ( ($generated@@215 $generated@@216))
)))
(assert (forall (($generated@@217 T@U) ) (!  (=> (= (type $generated@@217) $generated@@164) (= ($generated@@162 $generated@@217) (= ($generated@@215 $generated@@217) $generated@@63)))
 :pattern ( ($generated@@162 $generated@@217))
)))
(assert (forall (($generated@@218 T@U) ) (!  (=> (and (= (type $generated@@218) $generated@@164) ($generated@@162 $generated@@218)) (exists (($generated@@219 T@U) ($generated@@220 T@U) ) (!  (and (and (= (type $generated@@219) $generated@@173) (= (type $generated@@220) $generated@@173)) (= $generated@@218 ($generated@@183 $generated@@219 $generated@@220)))
 :no-pattern (type $generated@@219)
 :no-pattern (type $generated@@220)
 :no-pattern ($generated $generated@@219)
 :no-pattern ($generated@@0 $generated@@219)
 :no-pattern ($generated $generated@@220)
 :no-pattern ($generated@@0 $generated@@220)
)))
 :pattern ( ($generated@@162 $generated@@218))
)))
(assert  (and (and (forall (($generated@@225 T@T) ) (= ($generated@@1 ($generated@@223 $generated@@225)) 16)) (forall (($generated@@226 T@T) ) (! (= ($generated@@224 ($generated@@223 $generated@@226)) $generated@@226)
 :pattern ( ($generated@@223 $generated@@226))
))) (forall (($generated@@227 T@T) ) (! (= (type ($generated@@221 $generated@@227)) ($generated@@223 $generated@@227))
 :pattern ( ($generated@@221 $generated@@227))
))))
(assert (forall (($generated@@228 T@T) ) (! (= ($generated@@222 ($generated@@221 $generated@@228)) 0)
 :pattern ( ($generated@@221 $generated@@228))
)))
(assert (forall (($generated@@229 T@U) ($generated@@230 T@U) ) (!  (=> (and (= (type $generated@@229) $generated@@67) (= (type $generated@@230) $generated@@81)) (= ($generated@@140 $generated@@230 ($generated@@157 $generated@@229))  (and ($generated@@140 $generated@@230 ($generated@@137 $generated@@229)) (not (= $generated@@230 $generated@@138)))))
 :pattern ( ($generated@@140 $generated@@230 ($generated@@157 $generated@@229)))
)))
(assert (forall (($generated@@232 T@U) ) (! (= (type ($generated@@231 $generated@@232)) $generated@@173)
 :pattern ( ($generated@@231 $generated@@232))
)))
(assert (forall (($generated@@233 T@U) ($generated@@234 T@U) ($generated@@235 T@U) ) (!  (=> (and (= (type $generated@@234) $generated@@67) (= (type $generated@@235) ($generated@@80 $generated@@81 $generated@@82))) (= ($generated@@209 ($generated@@231 $generated@@233) $generated@@234 $generated@@235) ($generated@@78 $generated@@233 $generated@@234 $generated@@235)))
 :pattern ( ($generated@@209 ($generated@@231 $generated@@233) $generated@@234 $generated@@235))
)))
(assert (forall (($generated@@236 T@U) ($generated@@237 T@U) ($generated@@238 T@U) ($generated@@239 T@U) ) (!  (=> (and (and (and (and (and (= (type $generated@@236) ($generated@@80 $generated@@81 $generated@@82)) (= (type $generated@@237) ($generated@@80 $generated@@81 $generated@@82))) (= (type $generated@@238) $generated@@173)) (= (type $generated@@239) $generated@@67)) ($generated@@145 $generated@@236 $generated@@237)) ($generated@@209 $generated@@238 $generated@@239 $generated@@236)) ($generated@@209 $generated@@238 $generated@@239 $generated@@237))
 :pattern ( ($generated@@145 $generated@@236 $generated@@237) ($generated@@209 $generated@@238 $generated@@239 $generated@@236))
)))
(assert (forall (($generated@@240 T@U) ($generated@@241 T@U) ($generated@@242 T@U) ($generated@@243 T@U) ) (!  (=> (and (and (and (and (= (type $generated@@240) ($generated@@80 $generated@@81 $generated@@82)) (= (type $generated@@241) ($generated@@80 $generated@@81 $generated@@82))) (= (type $generated@@243) $generated@@67)) ($generated@@145 $generated@@240 $generated@@241)) ($generated@@78 $generated@@242 $generated@@243 $generated@@240)) ($generated@@78 $generated@@242 $generated@@243 $generated@@241))
 :pattern ( ($generated@@145 $generated@@240 $generated@@241) ($generated@@78 $generated@@242 $generated@@243 $generated@@240))
)))
(assert (forall (($generated@@246 T@T) ) (! (= (type ($generated@@245 $generated@@246)) ($generated@@80 $generated@@246 $generated@@2))
 :pattern ( ($generated@@245 $generated@@246))
)))
(assert (forall (($generated@@247 T@U) ) (! (let (($generated@@248 ($generated@@83 (type $generated@@247))))
 (=> (= (type $generated@@247) ($generated@@80 $generated@@248 $generated@@2)) (and (= (= ($generated@@244 $generated@@247) 0) (= $generated@@247 ($generated@@245 $generated@@248))) (=> (not (= ($generated@@244 $generated@@247) 0)) (exists (($generated@@249 T@U) ) (!  (and (= (type $generated@@249) $generated@@248) (< 0 ($generated ($generated@@85 $generated@@247 $generated@@249))))
 :no-pattern (type $generated@@249)
 :no-pattern ($generated $generated@@249)
 :no-pattern ($generated@@0 $generated@@249)
))))))
 :pattern ( ($generated@@244 $generated@@247))
)))
(assert (forall (($generated@@251 T@U) ) (! (= (type ($generated@@250 $generated@@251)) $generated@@72)
 :pattern ( ($generated@@250 $generated@@251))
)))
(assert (forall (($generated@@252 T@U) ) (!  (=> (= (type $generated@@252) $generated@@67) (and (= ($generated@@76 ($generated@@137 $generated@@252)) $generated@@61) (= ($generated@@250 ($generated@@137 $generated@@252)) $generated@@65)))
 :pattern ( ($generated@@137 $generated@@252))
)))
(assert (forall (($generated@@253 T@U) ) (!  (=> (= (type $generated@@253) $generated@@67) (and (= ($generated@@76 ($generated@@157 $generated@@253)) $generated@@62) (= ($generated@@250 ($generated@@157 $generated@@253)) $generated@@65)))
 :pattern ( ($generated@@157 $generated@@253))
)))
(assert  (and (and (and (and (forall (($generated@@259 T@T) ($generated@@260 T@T) ) (= ($generated@@1 ($generated@@256 $generated@@259 $generated@@260)) 17)) (forall (($generated@@261 T@T) ($generated@@262 T@T) ) (! (= ($generated@@257 ($generated@@256 $generated@@261 $generated@@262)) $generated@@261)
 :pattern ( ($generated@@256 $generated@@261 $generated@@262))
))) (forall (($generated@@263 T@T) ($generated@@264 T@T) ) (! (= ($generated@@258 ($generated@@256 $generated@@263 $generated@@264)) $generated@@264)
 :pattern ( ($generated@@256 $generated@@263 $generated@@264))
))) (forall (($generated@@265 T@U) ) (! (let (($generated@@266 ($generated@@257 (type $generated@@265))))
(= (type ($generated@@254 $generated@@265)) ($generated@@80 $generated@@266 $generated@@4)))
 :pattern ( ($generated@@254 $generated@@265))
))) (forall (($generated@@267 T@T) ($generated@@268 T@T) ) (! (= (type ($generated@@255 $generated@@267 $generated@@268)) ($generated@@256 $generated@@267 $generated@@268))
 :pattern ( ($generated@@255 $generated@@267 $generated@@268))
))))
(assert (forall (($generated@@269 T@U) ($generated@@270 T@T) ) (! (let (($generated@@271 (type $generated@@269)))
 (not ($generated@@0 ($generated@@85 ($generated@@254 ($generated@@255 $generated@@271 $generated@@270)) $generated@@269))))
 :pattern ( (let (($generated@@271 (type $generated@@269)))
($generated@@85 ($generated@@254 ($generated@@255 $generated@@271 $generated@@270)) $generated@@269)))
)))
(assert  (and (and (and (and (forall (($generated@@277 T@T) ($generated@@278 T@T) ) (= ($generated@@1 ($generated@@274 $generated@@277 $generated@@278)) 18)) (forall (($generated@@279 T@T) ($generated@@280 T@T) ) (! (= ($generated@@275 ($generated@@274 $generated@@279 $generated@@280)) $generated@@279)
 :pattern ( ($generated@@274 $generated@@279 $generated@@280))
))) (forall (($generated@@281 T@T) ($generated@@282 T@T) ) (! (= ($generated@@276 ($generated@@274 $generated@@281 $generated@@282)) $generated@@282)
 :pattern ( ($generated@@274 $generated@@281 $generated@@282))
))) (forall (($generated@@283 T@U) ) (! (let (($generated@@284 ($generated@@275 (type $generated@@283))))
(= (type ($generated@@272 $generated@@283)) ($generated@@80 $generated@@284 $generated@@4)))
 :pattern ( ($generated@@272 $generated@@283))
))) (forall (($generated@@285 T@T) ($generated@@286 T@T) ) (! (= (type ($generated@@273 $generated@@285 $generated@@286)) ($generated@@274 $generated@@285 $generated@@286))
 :pattern ( ($generated@@273 $generated@@285 $generated@@286))
))))
(assert (forall (($generated@@287 T@U) ($generated@@288 T@T) ) (! (let (($generated@@289 (type $generated@@287)))
 (not ($generated@@0 ($generated@@85 ($generated@@272 ($generated@@273 $generated@@289 $generated@@288)) $generated@@287))))
 :pattern ( (let (($generated@@289 (type $generated@@287)))
($generated@@85 ($generated@@272 ($generated@@273 $generated@@289 $generated@@288)) $generated@@287)))
)))
(assert (forall (($generated@@290 T@U) ) (! (let (($generated@@291 ($generated@@83 (type $generated@@290))))
 (=> (= (type $generated@@290) ($generated@@80 $generated@@291 $generated@@2)) (= ($generated@@179 $generated@@290) (forall (($generated@@292 T@U) ) (!  (=> (= (type $generated@@292) $generated@@291) (and (<= 0 ($generated ($generated@@85 $generated@@290 $generated@@292))) (<= ($generated ($generated@@85 $generated@@290 $generated@@292)) ($generated@@244 $generated@@290))))
 :pattern ( ($generated@@85 $generated@@290 $generated@@292))
)))))
 :pattern ( ($generated@@179 $generated@@290))
)))
(assert (forall (($generated@@293 T@U) ($generated@@294 T@U) ) (!  (=> (and (= (type $generated@@293) $generated@@67) (= (type $generated@@294) $generated@@81)) (= ($generated@@140 $generated@@294 ($generated@@137 $generated@@293))  (or (= $generated@@294 $generated@@138) (= ($generated@@139 $generated@@294) ($generated@@137 $generated@@293)))))
 :pattern ( ($generated@@140 $generated@@294 ($generated@@137 $generated@@293)))
)))
(assert (forall (($generated@@295 T@U) ) (! (let (($generated@@296 ($generated@@258 (type $generated@@295))))
(let (($generated@@297 ($generated@@257 (type $generated@@295))))
 (=> (= (type $generated@@295) ($generated@@256 $generated@@297 $generated@@296)) (or (= $generated@@295 ($generated@@255 $generated@@297 $generated@@296)) (exists (($generated@@298 T@U) ) (!  (and (= (type $generated@@298) $generated@@297) ($generated@@0 ($generated@@85 ($generated@@254 $generated@@295) $generated@@298)))
 :no-pattern (type $generated@@298)
 :no-pattern ($generated $generated@@298)
 :no-pattern ($generated@@0 $generated@@298)
))))))
 :pattern ( ($generated@@254 $generated@@295))
)))
(assert (forall (($generated@@300 T@U) ) (! (let (($generated@@301 ($generated@@258 (type $generated@@300))))
(= (type ($generated@@299 $generated@@300)) ($generated@@80 $generated@@301 $generated@@4)))
 :pattern ( ($generated@@299 $generated@@300))
)))
(assert (forall (($generated@@302 T@U) ) (! (let (($generated@@303 ($generated@@258 (type $generated@@302))))
(let (($generated@@304 ($generated@@257 (type $generated@@302))))
 (=> (= (type $generated@@302) ($generated@@256 $generated@@304 $generated@@303)) (or (= $generated@@302 ($generated@@255 $generated@@304 $generated@@303)) (exists (($generated@@305 T@U) ) (!  (and (= (type $generated@@305) $generated@@303) ($generated@@0 ($generated@@85 ($generated@@299 $generated@@302) $generated@@305)))
 :no-pattern (type $generated@@305)
 :no-pattern ($generated $generated@@305)
 :no-pattern ($generated@@0 $generated@@305)
))))))
 :pattern ( ($generated@@299 $generated@@302))
)))
(assert (forall (($generated@@306 T@U) ) (! (let (($generated@@307 ($generated@@276 (type $generated@@306))))
(let (($generated@@308 ($generated@@275 (type $generated@@306))))
 (=> (= (type $generated@@306) ($generated@@274 $generated@@308 $generated@@307)) (or (= $generated@@306 ($generated@@273 $generated@@308 $generated@@307)) (exists (($generated@@309 T@U) ) (!  (and (= (type $generated@@309) $generated@@308) ($generated@@0 ($generated@@85 ($generated@@272 $generated@@306) $generated@@309)))
 :no-pattern (type $generated@@309)
 :no-pattern ($generated $generated@@309)
 :no-pattern ($generated@@0 $generated@@309)
))))))
 :pattern ( ($generated@@272 $generated@@306))
)))
(assert (forall (($generated@@311 T@U) ) (! (let (($generated@@312 ($generated@@276 (type $generated@@311))))
(= (type ($generated@@310 $generated@@311)) ($generated@@80 $generated@@312 $generated@@4)))
 :pattern ( ($generated@@310 $generated@@311))
)))
(assert (forall (($generated@@313 T@U) ) (! (let (($generated@@314 ($generated@@276 (type $generated@@313))))
(let (($generated@@315 ($generated@@275 (type $generated@@313))))
 (=> (= (type $generated@@313) ($generated@@274 $generated@@315 $generated@@314)) (or (= $generated@@313 ($generated@@273 $generated@@315 $generated@@314)) (exists (($generated@@316 T@U) ) (!  (and (= (type $generated@@316) $generated@@314) ($generated@@0 ($generated@@85 ($generated@@310 $generated@@313) $generated@@316)))
 :no-pattern (type $generated@@316)
 :no-pattern ($generated $generated@@316)
 :no-pattern ($generated@@0 $generated@@316)
))))))
 :pattern ( ($generated@@310 $generated@@313))
)))
(assert (forall (($generated@@317 T@U) ($generated@@318 T@U) ) (!  (=> (and (= (type $generated@@317) ($generated@@80 $generated@@173 $generated@@2)) (= (type $generated@@318) $generated@@67)) (= ($generated@@140 $generated@@317 ($generated@@178 $generated@@318)) (forall (($generated@@319 T@U) ) (!  (=> (and (= (type $generated@@319) $generated@@173) (< 0 ($generated ($generated@@85 $generated@@317 $generated@@319)))) ($generated@@184 $generated@@319 $generated@@318))
 :pattern ( ($generated@@85 $generated@@317 $generated@@319))
))))
 :pattern ( ($generated@@140 $generated@@317 ($generated@@178 $generated@@318)))
)))
(assert (forall (($generated@@320 T@U) ($generated@@321 T@U) ($generated@@322 T@U) ) (!  (=> (and (and (= (type $generated@@320) ($generated@@80 $generated@@173 $generated@@4)) (= (type $generated@@321) $generated@@67)) (= (type $generated@@322) ($generated@@80 $generated@@81 $generated@@82))) (= ($generated@@78 $generated@@320 ($generated@@193 $generated@@321) $generated@@322) (forall (($generated@@323 T@U) ) (!  (=> (and (= (type $generated@@323) $generated@@173) ($generated@@0 ($generated@@85 $generated@@320 $generated@@323))) ($generated@@209 $generated@@323 $generated@@321 $generated@@322))
 :pattern ( ($generated@@85 $generated@@320 $generated@@323))
))))
 :pattern ( ($generated@@78 $generated@@320 ($generated@@193 $generated@@321) $generated@@322))
)))
(assert (forall (($generated@@324 T@U) ($generated@@325 T@U) ($generated@@326 T@U) ) (!  (=> (and (and (= (type $generated@@324) ($generated@@80 $generated@@173 $generated@@4)) (= (type $generated@@325) $generated@@67)) (= (type $generated@@326) ($generated@@80 $generated@@81 $generated@@82))) (= ($generated@@78 $generated@@324 ($generated@@198 $generated@@325) $generated@@326) (forall (($generated@@327 T@U) ) (!  (=> (and (= (type $generated@@327) $generated@@173) ($generated@@0 ($generated@@85 $generated@@324 $generated@@327))) ($generated@@209 $generated@@327 $generated@@325 $generated@@326))
 :pattern ( ($generated@@85 $generated@@324 $generated@@327))
))))
 :pattern ( ($generated@@78 $generated@@324 ($generated@@198 $generated@@325) $generated@@326))
)))
(assert (forall (($generated@@328 T@U) ) (! (let (($generated@@329 (type $generated@@328)))
(= ($generated ($generated@@85 ($generated@@245 $generated@@329) $generated@@328)) 0))
 :pattern ( (let (($generated@@329 (type $generated@@328)))
($generated@@85 ($generated@@245 $generated@@329) $generated@@328)))
)))
(assert  (and (and (forall (($generated@@333 T@U) ) (! (= (type ($generated@@330 $generated@@333)) ($generated@@80 $generated@@173 $generated@@4))
 :pattern ( ($generated@@330 $generated@@333))
)) (forall (($generated@@334 T@T) ($generated@@335 T@U) ) (! (= (type ($generated@@331 $generated@@334 $generated@@335)) $generated@@334)
 :pattern ( ($generated@@331 $generated@@334 $generated@@335))
))) (forall (($generated@@336 T@U) ) (! (let (($generated@@337 ($generated@@258 (type $generated@@336))))
(let (($generated@@338 ($generated@@257 (type $generated@@336))))
(= (type ($generated@@332 $generated@@336)) ($generated@@80 $generated@@338 $generated@@337))))
 :pattern ( ($generated@@332 $generated@@336))
))))
(assert (forall (($generated@@339 T@U) ($generated@@340 T@U) ) (!  (=> (and (= (type $generated@@339) ($generated@@256 $generated@@173 $generated@@173)) (= (type $generated@@340) $generated@@173)) (= ($generated@@0 ($generated@@85 ($generated@@330 $generated@@339) $generated@@340))  (and ($generated@@0 ($generated@@85 ($generated@@254 $generated@@339) ($generated@@171 ($generated@@331 $generated@@164 $generated@@340)))) (= ($generated@@85 ($generated@@332 $generated@@339) ($generated@@171 ($generated@@331 $generated@@164 $generated@@340))) ($generated@@172 ($generated@@331 $generated@@164 $generated@@340))))))
 :pattern ( ($generated@@85 ($generated@@330 $generated@@339) $generated@@340))
)))
(assert  (and (forall (($generated@@343 T@U) ) (! (= (type ($generated@@341 $generated@@343)) ($generated@@80 $generated@@173 $generated@@4))
 :pattern ( ($generated@@341 $generated@@343))
)) (forall (($generated@@344 T@U) ) (! (let (($generated@@345 ($generated@@276 (type $generated@@344))))
(let (($generated@@346 ($generated@@275 (type $generated@@344))))
(= (type ($generated@@342 $generated@@344)) ($generated@@80 $generated@@346 $generated@@345))))
 :pattern ( ($generated@@342 $generated@@344))
))))
(assert (forall (($generated@@347 T@U) ($generated@@348 T@U) ) (!  (=> (and (= (type $generated@@347) ($generated@@274 $generated@@173 $generated@@173)) (= (type $generated@@348) $generated@@173)) (= ($generated@@0 ($generated@@85 ($generated@@341 $generated@@347) $generated@@348))  (and ($generated@@0 ($generated@@85 ($generated@@272 $generated@@347) ($generated@@171 ($generated@@331 $generated@@164 $generated@@348)))) (= ($generated@@85 ($generated@@342 $generated@@347) ($generated@@171 ($generated@@331 $generated@@164 $generated@@348))) ($generated@@172 ($generated@@331 $generated@@164 $generated@@348))))))
 :pattern ( ($generated@@85 ($generated@@341 $generated@@347) $generated@@348))
)))
(assert (forall (($generated@@349 T@U) ($generated@@350 T@U) ) (! (let (($generated@@351 (type $generated@@350)))
(let (($generated@@352 ($generated@@257 (type $generated@@349))))
 (=> (= (type $generated@@349) ($generated@@256 $generated@@352 $generated@@351)) (= ($generated@@0 ($generated@@85 ($generated@@299 $generated@@349) $generated@@350)) (exists (($generated@@353 T@U) ) (!  (and (= (type $generated@@353) $generated@@352) (and ($generated@@0 ($generated@@85 ($generated@@254 $generated@@349) $generated@@353)) (= $generated@@350 ($generated@@85 ($generated@@332 $generated@@349) $generated@@353))))
 :pattern ( ($generated@@85 ($generated@@254 $generated@@349) $generated@@353))
 :pattern ( ($generated@@85 ($generated@@332 $generated@@349) $generated@@353))
))))))
 :pattern ( ($generated@@85 ($generated@@299 $generated@@349) $generated@@350))
)))
(assert (forall (($generated@@354 T@U) ($generated@@355 T@U) ) (! (let (($generated@@356 (type $generated@@355)))
(let (($generated@@357 ($generated@@275 (type $generated@@354))))
 (=> (= (type $generated@@354) ($generated@@274 $generated@@357 $generated@@356)) (= ($generated@@0 ($generated@@85 ($generated@@310 $generated@@354) $generated@@355)) (exists (($generated@@358 T@U) ) (!  (and (= (type $generated@@358) $generated@@357) (and ($generated@@0 ($generated@@85 ($generated@@272 $generated@@354) $generated@@358)) (= $generated@@355 ($generated@@85 ($generated@@342 $generated@@354) $generated@@358))))
 :pattern ( ($generated@@85 ($generated@@272 $generated@@354) $generated@@358))
 :pattern ( ($generated@@85 ($generated@@342 $generated@@354) $generated@@358))
))))))
 :pattern ( ($generated@@85 ($generated@@310 $generated@@354) $generated@@355))
)))
(assert (forall (($generated@@360 T@U) ($generated@@361 T@U) ) (! (= (type ($generated@@359 $generated@@360 $generated@@361)) $generated@@67)
 :pattern ( ($generated@@359 $generated@@360 $generated@@361))
)))
(assert (forall (($generated@@362 T@U) ($generated@@363 T@U) ($generated@@364 T@U) ($generated@@365 T@U) ) (!  (=> (and (and (and (= (type $generated@@362) ($generated@@256 $generated@@173 $generated@@173)) (= (type $generated@@363) $generated@@67)) (= (type $generated@@364) $generated@@67)) (= (type $generated@@365) ($generated@@80 $generated@@81 $generated@@82))) (= ($generated@@78 $generated@@362 ($generated@@359 $generated@@363 $generated@@364) $generated@@365) (forall (($generated@@366 T@U) ) (!  (=> (and (= (type $generated@@366) $generated@@173) ($generated@@0 ($generated@@85 ($generated@@254 $generated@@362) $generated@@366))) (and ($generated@@209 ($generated@@85 ($generated@@332 $generated@@362) $generated@@366) $generated@@364 $generated@@365) ($generated@@209 $generated@@366 $generated@@363 $generated@@365)))
 :pattern ( ($generated@@85 ($generated@@332 $generated@@362) $generated@@366))
 :pattern ( ($generated@@85 ($generated@@254 $generated@@362) $generated@@366))
))))
 :pattern ( ($generated@@78 $generated@@362 ($generated@@359 $generated@@363 $generated@@364) $generated@@365))
)))
(assert (forall (($generated@@368 T@U) ($generated@@369 T@U) ) (! (= (type ($generated@@367 $generated@@368 $generated@@369)) $generated@@67)
 :pattern ( ($generated@@367 $generated@@368 $generated@@369))
)))
(assert (forall (($generated@@370 T@U) ($generated@@371 T@U) ($generated@@372 T@U) ($generated@@373 T@U) ) (!  (=> (and (and (and (= (type $generated@@370) ($generated@@274 $generated@@173 $generated@@173)) (= (type $generated@@371) $generated@@67)) (= (type $generated@@372) $generated@@67)) (= (type $generated@@373) ($generated@@80 $generated@@81 $generated@@82))) (= ($generated@@78 $generated@@370 ($generated@@367 $generated@@371 $generated@@372) $generated@@373) (forall (($generated@@374 T@U) ) (!  (=> (and (= (type $generated@@374) $generated@@173) ($generated@@0 ($generated@@85 ($generated@@272 $generated@@370) $generated@@374))) (and ($generated@@209 ($generated@@85 ($generated@@342 $generated@@370) $generated@@374) $generated@@372 $generated@@373) ($generated@@209 $generated@@374 $generated@@371 $generated@@373)))
 :pattern ( ($generated@@85 ($generated@@342 $generated@@370) $generated@@374))
 :pattern ( ($generated@@85 ($generated@@272 $generated@@370) $generated@@374))
))))
 :pattern ( ($generated@@78 $generated@@370 ($generated@@367 $generated@@371 $generated@@372) $generated@@373))
)))
(assert (forall (($generated@@375 T@U) ($generated@@376 T@U) ($generated@@377 T@U) ) (!  (=> (and (and (and (and (= (type $generated@@375) ($generated@@80 $generated@@81 $generated@@82)) (= (type $generated@@376) ($generated@@80 $generated@@81 $generated@@82))) (= (type $generated@@377) ($generated@@80 $generated@@81 $generated@@82))) (not (= $generated@@375 $generated@@377))) (and ($generated@@145 $generated@@375 $generated@@376) ($generated@@145 $generated@@376 $generated@@377))) ($generated@@145 $generated@@375 $generated@@377))
 :pattern ( ($generated@@145 $generated@@375 $generated@@376) ($generated@@145 $generated@@376 $generated@@377))
)))
(assert (forall (($generated@@379 Int) ) (! (= (type ($generated@@378 $generated@@379)) ($generated@@69 $generated@@173))
 :pattern ( ($generated@@378 $generated@@379))
)))
(assert (forall (($generated@@380 T@U) ($generated@@381 T@U) ($generated@@382 T@U) ($generated@@383 Int) ) (!  (=> (and (and (= (type $generated@@380) $generated@@67) (= (type $generated@@381) ($generated@@80 $generated@@81 $generated@@82))) (= (type $generated@@382) $generated@@81)) (=> (and (and (and ($generated@@152 $generated@@381) (and (not (= $generated@@382 $generated@@138)) (= ($generated@@139 $generated@@382) ($generated@@137 $generated@@380)))) (and (<= 0 $generated@@383) (< $generated@@383 ($generated@@136 $generated@@382)))) ($generated@@0 ($generated@@87 ($generated@@85 $generated@@381 $generated@@382) $generated@@60))) ($generated@@209 ($generated@@87 ($generated@@85 $generated@@381 $generated@@382) ($generated@@378 $generated@@383)) $generated@@380 $generated@@381)))
 :pattern ( ($generated@@87 ($generated@@85 $generated@@381 $generated@@382) ($generated@@378 $generated@@383)) ($generated@@137 $generated@@380))
)))
(assert (forall (($generated@@385 T@T) ) (! (= (type ($generated@@384 $generated@@385)) ($generated@@80 $generated@@385 $generated@@4))
 :pattern ( ($generated@@384 $generated@@385))
)))
(assert (forall (($generated@@386 T@U) ) (! (let (($generated@@387 ($generated@@276 (type $generated@@386))))
(let (($generated@@388 ($generated@@275 (type $generated@@386))))
 (=> (= (type $generated@@386) ($generated@@274 $generated@@388 $generated@@387)) (= (= $generated@@386 ($generated@@273 $generated@@388 $generated@@387)) (= ($generated@@272 $generated@@386) ($generated@@384 $generated@@388))))))
 :pattern ( ($generated@@272 $generated@@386))
)))
(assert (forall (($generated@@389 T@U) ) (! (let (($generated@@390 ($generated@@276 (type $generated@@389))))
(let (($generated@@391 ($generated@@275 (type $generated@@389))))
 (=> (= (type $generated@@389) ($generated@@274 $generated@@391 $generated@@390)) (= (= $generated@@389 ($generated@@273 $generated@@391 $generated@@390)) (= ($generated@@310 $generated@@389) ($generated@@384 $generated@@390))))))
 :pattern ( ($generated@@310 $generated@@389))
)))
(assert (forall (($generated@@392 T@U) ) (! (let (($generated@@393 ($generated@@276 (type $generated@@392))))
(let (($generated@@394 ($generated@@275 (type $generated@@392))))
 (=> (= (type $generated@@392) ($generated@@274 $generated@@394 $generated@@393)) (= (= $generated@@392 ($generated@@273 $generated@@394 $generated@@393)) (= ($generated@@341 $generated@@392) ($generated@@384 $generated@@173))))))
 :pattern ( ($generated@@341 $generated@@392))
)))
(assert (forall (($generated@@395 T@U) ) (! (let (($generated@@396 ($generated@@258 (type $generated@@395))))
(let (($generated@@397 ($generated@@257 (type $generated@@395))))
 (=> (= (type $generated@@395) ($generated@@256 $generated@@397 $generated@@396)) (or (= $generated@@395 ($generated@@255 $generated@@397 $generated@@396)) (exists (($generated@@398 T@U) ($generated@@399 T@U) ) (!  (and (and (= (type $generated@@398) $generated@@173) (= (type $generated@@399) $generated@@173)) ($generated@@0 ($generated@@85 ($generated@@330 $generated@@395) ($generated@@231 ($generated@@183 $generated@@398 $generated@@399)))))
 :no-pattern (type $generated@@398)
 :no-pattern (type $generated@@399)
 :no-pattern ($generated $generated@@398)
 :no-pattern ($generated@@0 $generated@@398)
 :no-pattern ($generated $generated@@399)
 :no-pattern ($generated@@0 $generated@@399)
))))))
 :pattern ( ($generated@@330 $generated@@395))
)))
(assert (forall (($generated@@400 T@U) ) (! (let (($generated@@401 ($generated@@276 (type $generated@@400))))
(let (($generated@@402 ($generated@@275 (type $generated@@400))))
 (=> (= (type $generated@@400) ($generated@@274 $generated@@402 $generated@@401)) (or (= $generated@@400 ($generated@@273 $generated@@402 $generated@@401)) (exists (($generated@@403 T@U) ($generated@@404 T@U) ) (!  (and (and (= (type $generated@@403) $generated@@173) (= (type $generated@@404) $generated@@173)) ($generated@@0 ($generated@@85 ($generated@@341 $generated@@400) ($generated@@231 ($generated@@183 $generated@@403 $generated@@404)))))
 :no-pattern (type $generated@@403)
 :no-pattern (type $generated@@404)
 :no-pattern ($generated $generated@@403)
 :no-pattern ($generated@@0 $generated@@403)
 :no-pattern ($generated $generated@@404)
 :no-pattern ($generated@@0 $generated@@404)
))))))
 :pattern ( ($generated@@341 $generated@@400))
)))
(assert (forall (($generated@@405 T@U) ) (!  (=> (and (= (type $generated@@405) $generated@@173) ($generated@@184 $generated@@405 $generated@@46)) (and (= ($generated@@231 ($generated@@331 $generated@@2 $generated@@405)) $generated@@405) ($generated@@140 ($generated@@331 $generated@@2 $generated@@405) $generated@@46)))
 :pattern ( ($generated@@184 $generated@@405 $generated@@46))
)))
(assert (forall (($generated@@406 T@U) ) (!  (=> (and (= (type $generated@@406) $generated@@173) ($generated@@184 $generated@@406 $generated@@47)) (and (= ($generated@@231 ($generated@@331 $generated@@3 $generated@@406)) $generated@@406) ($generated@@140 ($generated@@331 $generated@@3 $generated@@406) $generated@@47)))
 :pattern ( ($generated@@184 $generated@@406 $generated@@47))
)))
(assert (forall (($generated@@407 T@U) ) (!  (=> (and (= (type $generated@@407) $generated@@173) ($generated@@184 $generated@@407 $generated@@44)) (and (= ($generated@@231 ($generated@@331 $generated@@4 $generated@@407)) $generated@@407) ($generated@@140 ($generated@@331 $generated@@4 $generated@@407) $generated@@44)))
 :pattern ( ($generated@@184 $generated@@407 $generated@@44))
)))
(assert (= ($generated@@1 $generated@@408) 19))
(assert (forall (($generated@@409 T@U) ) (!  (=> (and (= (type $generated@@409) $generated@@173) ($generated@@184 $generated@@409 $generated@@45)) (and (= ($generated@@231 ($generated@@331 $generated@@408 $generated@@409)) $generated@@409) ($generated@@140 ($generated@@331 $generated@@408 $generated@@409) $generated@@45)))
 :pattern ( ($generated@@184 $generated@@409 $generated@@45))
)))
(assert (forall (($generated@@410 T@U) ($generated@@411 T@U) ) (!  (=> (= (type $generated@@411) $generated@@67) (= ($generated@@184 ($generated@@231 $generated@@410) $generated@@411) ($generated@@140 $generated@@410 $generated@@411)))
 :pattern ( ($generated@@184 ($generated@@231 $generated@@410) $generated@@411))
)))
(assert (forall (($generated@@412 T@U) ) (!  (=> (= (type $generated@@412) $generated@@81) (<= 0 ($generated@@136 $generated@@412)))
 :no-pattern (type $generated@@412)
 :no-pattern ($generated $generated@@412)
 :no-pattern ($generated@@0 $generated@@412)
)))
(assert (forall (($generated@@413 T@U) ) (! (let (($generated@@414 ($generated@@83 (type $generated@@413))))
 (=> (= (type $generated@@413) ($generated@@80 $generated@@414 $generated@@2)) (<= 0 ($generated@@244 $generated@@413))))
 :pattern ( ($generated@@244 $generated@@413))
)))
(assert (forall (($generated@@415 T@U) ) (! (let (($generated@@416 ($generated@@224 (type $generated@@415))))
 (=> (= (type $generated@@415) ($generated@@223 $generated@@416)) (<= 0 ($generated@@222 $generated@@415))))
 :pattern ( ($generated@@222 $generated@@415))
)))
(assert (forall (($generated@@418 T@U) ) (! (= (type ($generated@@417 $generated@@418)) $generated@@67)
 :pattern ( ($generated@@417 $generated@@418))
)))
(assert (forall (($generated@@419 T@U) ($generated@@420 T@U) ) (!  (=> (and (= (type $generated@@419) $generated@@67) (= (type $generated@@420) $generated@@67)) (= ($generated@@417 ($generated@@359 $generated@@419 $generated@@420)) $generated@@419))
 :pattern ( ($generated@@359 $generated@@419 $generated@@420))
)))
(assert (forall (($generated@@422 T@U) ) (! (= (type ($generated@@421 $generated@@422)) $generated@@67)
 :pattern ( ($generated@@421 $generated@@422))
)))
(assert (forall (($generated@@423 T@U) ($generated@@424 T@U) ) (!  (=> (and (= (type $generated@@423) $generated@@67) (= (type $generated@@424) $generated@@67)) (= ($generated@@421 ($generated@@359 $generated@@423 $generated@@424)) $generated@@424))
 :pattern ( ($generated@@359 $generated@@423 $generated@@424))
)))
(assert (forall (($generated@@425 T@U) ($generated@@426 T@U) ) (!  (=> (and (= (type $generated@@425) $generated@@67) (= (type $generated@@426) $generated@@67)) (= ($generated@@76 ($generated@@359 $generated@@425 $generated@@426)) $generated@@58))
 :pattern ( ($generated@@359 $generated@@425 $generated@@426))
)))
(assert (forall (($generated@@428 T@U) ) (! (= (type ($generated@@427 $generated@@428)) $generated@@67)
 :pattern ( ($generated@@427 $generated@@428))
)))
(assert (forall (($generated@@429 T@U) ($generated@@430 T@U) ) (!  (=> (and (= (type $generated@@429) $generated@@67) (= (type $generated@@430) $generated@@67)) (= ($generated@@427 ($generated@@367 $generated@@429 $generated@@430)) $generated@@429))
 :pattern ( ($generated@@367 $generated@@429 $generated@@430))
)))
(assert (forall (($generated@@432 T@U) ) (! (= (type ($generated@@431 $generated@@432)) $generated@@67)
 :pattern ( ($generated@@431 $generated@@432))
)))
(assert (forall (($generated@@433 T@U) ($generated@@434 T@U) ) (!  (=> (and (= (type $generated@@433) $generated@@67) (= (type $generated@@434) $generated@@67)) (= ($generated@@431 ($generated@@367 $generated@@433 $generated@@434)) $generated@@434))
 :pattern ( ($generated@@367 $generated@@433 $generated@@434))
)))
(assert (forall (($generated@@435 T@U) ($generated@@436 T@U) ) (!  (=> (and (= (type $generated@@435) $generated@@67) (= (type $generated@@436) $generated@@67)) (= ($generated@@76 ($generated@@367 $generated@@435 $generated@@436)) $generated@@59))
 :pattern ( ($generated@@367 $generated@@435 $generated@@436))
)))
(assert (forall (($generated@@437 T@U) ($generated@@438 T@U) ) (!  (=> (and (= (type $generated@@437) $generated@@173) (= (type $generated@@438) $generated@@173)) (= ($generated@@215 ($generated@@183 $generated@@437 $generated@@438)) $generated@@63))
 :pattern ( ($generated@@183 $generated@@437 $generated@@438))
)))
(assert (forall (($generated@@440 T@U) ) (! (= (type ($generated@@439 $generated@@440)) $generated@@67)
 :pattern ( ($generated@@439 $generated@@440))
)))
(assert (forall (($generated@@441 T@U) ($generated@@442 T@U) ) (!  (=> (and (= (type $generated@@441) $generated@@67) (= (type $generated@@442) $generated@@67)) (= ($generated@@439 ($generated@@163 $generated@@441 $generated@@442)) $generated@@441))
 :pattern ( ($generated@@163 $generated@@441 $generated@@442))
)))
(assert (forall (($generated@@444 T@U) ) (! (= (type ($generated@@443 $generated@@444)) $generated@@67)
 :pattern ( ($generated@@443 $generated@@444))
)))
(assert (forall (($generated@@445 T@U) ($generated@@446 T@U) ) (!  (=> (and (= (type $generated@@445) $generated@@67) (= (type $generated@@446) $generated@@67)) (= ($generated@@443 ($generated@@163 $generated@@445 $generated@@446)) $generated@@446))
 :pattern ( ($generated@@163 $generated@@445 $generated@@446))
)))
(assert (forall (($generated@@447 T@U) ($generated@@448 T@U) ) (!  (=> (and (= (type $generated@@447) $generated@@173) (= (type $generated@@448) $generated@@173)) (= ($generated@@171 ($generated@@183 $generated@@447 $generated@@448)) $generated@@447))
 :pattern ( ($generated@@183 $generated@@447 $generated@@448))
)))
(assert (forall (($generated@@449 T@U) ($generated@@450 T@U) ) (!  (=> (and (= (type $generated@@449) $generated@@173) (= (type $generated@@450) $generated@@173)) (= ($generated@@172 ($generated@@183 $generated@@449 $generated@@450)) $generated@@450))
 :pattern ( ($generated@@183 $generated@@449 $generated@@450))
)))
(assert  (and (forall (($generated@@453 T@U) ) (! (= (type ($generated@@451 $generated@@453)) $generated@@67)
 :pattern ( ($generated@@451 $generated@@453))
)) (forall (($generated@@454 T@U) ($generated@@455 Int) ) (! (let (($generated@@456 ($generated@@224 (type $generated@@454))))
(= (type ($generated@@452 $generated@@454 $generated@@455)) $generated@@456))
 :pattern ( ($generated@@452 $generated@@454 $generated@@455))
))))
(assert (forall (($generated@@457 T@U) ($generated@@458 T@U) ($generated@@459 T@U) ) (!  (=> (and (and (= (type $generated@@457) ($generated@@223 $generated@@173)) (= (type $generated@@458) $generated@@67)) (= (type $generated@@459) ($generated@@80 $generated@@81 $generated@@82))) (= ($generated@@78 $generated@@457 ($generated@@451 $generated@@458) $generated@@459) (forall (($generated@@460 Int) ) (!  (=> (and (<= 0 $generated@@460) (< $generated@@460 ($generated@@222 $generated@@457))) ($generated@@209 ($generated@@452 $generated@@457 $generated@@460) $generated@@458 $generated@@459))
 :pattern ( ($generated@@452 $generated@@457 $generated@@460))
))))
 :pattern ( ($generated@@78 $generated@@457 ($generated@@451 $generated@@458) $generated@@459))
)))
(assert (forall (($generated@@462 Int) ) (! (= ($generated@@461 ($generated@@79 $generated@@462)) $generated@@462)
 :pattern ( ($generated@@79 $generated@@462))
)))
(assert (forall (($generated@@464 T@U) ) (! (= (type ($generated@@463 $generated@@464)) $generated@@67)
 :pattern ( ($generated@@463 $generated@@464))
)))
(assert (forall (($generated@@465 T@U) ) (!  (=> (= (type $generated@@465) $generated@@67) (= ($generated@@463 ($generated@@193 $generated@@465)) $generated@@465))
 :pattern ( ($generated@@193 $generated@@465))
)))
(assert (forall (($generated@@466 T@U) ) (!  (=> (= (type $generated@@466) $generated@@67) (= ($generated@@76 ($generated@@193 $generated@@466)) $generated@@54))
 :pattern ( ($generated@@193 $generated@@466))
)))
(assert (forall (($generated@@468 T@U) ) (! (= (type ($generated@@467 $generated@@468)) $generated@@67)
 :pattern ( ($generated@@467 $generated@@468))
)))
(assert (forall (($generated@@469 T@U) ) (!  (=> (= (type $generated@@469) $generated@@67) (= ($generated@@467 ($generated@@198 $generated@@469)) $generated@@469))
 :pattern ( ($generated@@198 $generated@@469))
)))
(assert (forall (($generated@@470 T@U) ) (!  (=> (= (type $generated@@470) $generated@@67) (= ($generated@@76 ($generated@@198 $generated@@470)) $generated@@55))
 :pattern ( ($generated@@198 $generated@@470))
)))
(assert (forall (($generated@@472 T@U) ) (! (= (type ($generated@@471 $generated@@472)) $generated@@67)
 :pattern ( ($generated@@471 $generated@@472))
)))
(assert (forall (($generated@@473 T@U) ) (!  (=> (= (type $generated@@473) $generated@@67) (= ($generated@@471 ($generated@@178 $generated@@473)) $generated@@473))
 :pattern ( ($generated@@178 $generated@@473))
)))
(assert (forall (($generated@@474 T@U) ) (!  (=> (= (type $generated@@474) $generated@@67) (= ($generated@@76 ($generated@@178 $generated@@474)) $generated@@56))
 :pattern ( ($generated@@178 $generated@@474))
)))
(assert (forall (($generated@@476 T@U) ) (! (= (type ($generated@@475 $generated@@476)) $generated@@67)
 :pattern ( ($generated@@475 $generated@@476))
)))
(assert (forall (($generated@@477 T@U) ) (!  (=> (= (type $generated@@477) $generated@@67) (= ($generated@@475 ($generated@@451 $generated@@477)) $generated@@477))
 :pattern ( ($generated@@451 $generated@@477))
)))
(assert (forall (($generated@@478 T@U) ) (!  (=> (= (type $generated@@478) $generated@@67) (= ($generated@@76 ($generated@@451 $generated@@478)) $generated@@57))
 :pattern ( ($generated@@451 $generated@@478))
)))
(assert (forall (($generated@@479 Int) ) (! (= ($generated@@75 ($generated@@378 $generated@@479)) 1)
 :pattern ( ($generated@@378 $generated@@479))
)))
(assert (forall (($generated@@481 Int) ) (! (= ($generated@@480 ($generated@@378 $generated@@481)) $generated@@481)
 :pattern ( ($generated@@378 $generated@@481))
)))
(assert (forall (($generated@@483 T@U) ) (! (= (type ($generated@@482 $generated@@483)) $generated@@67)
 :pattern ( ($generated@@482 $generated@@483))
)))
(assert (forall (($generated@@484 T@U) ) (!  (=> (= (type $generated@@484) $generated@@67) (= ($generated@@482 ($generated@@137 $generated@@484)) $generated@@484))
 :pattern ( ($generated@@137 $generated@@484))
)))
(assert (forall (($generated@@486 T@U) ) (! (= (type ($generated@@485 $generated@@486)) $generated@@67)
 :pattern ( ($generated@@485 $generated@@486))
)))
(assert (forall (($generated@@487 T@U) ) (!  (=> (= (type $generated@@487) $generated@@67) (= ($generated@@485 ($generated@@157 $generated@@487)) $generated@@487))
 :pattern ( ($generated@@157 $generated@@487))
)))
(assert (forall (($generated@@488 T@U) ) (! (let (($generated@@489 (type $generated@@488)))
(= ($generated@@331 $generated@@489 ($generated@@231 $generated@@488)) $generated@@488))
 :pattern ( ($generated@@231 $generated@@488))
)))
(assert (forall (($generated@@490 T@U) ($generated@@491 T@U) ($generated@@492 T@U) ) (!  (=> (and (and (= (type $generated@@490) ($generated@@256 $generated@@173 $generated@@173)) (= (type $generated@@491) $generated@@67)) (= (type $generated@@492) $generated@@67)) (= ($generated@@140 $generated@@490 ($generated@@359 $generated@@491 $generated@@492)) (forall (($generated@@493 T@U) ) (!  (=> (and (= (type $generated@@493) $generated@@173) ($generated@@0 ($generated@@85 ($generated@@254 $generated@@490) $generated@@493))) (and ($generated@@184 ($generated@@85 ($generated@@332 $generated@@490) $generated@@493) $generated@@492) ($generated@@184 $generated@@493 $generated@@491)))
 :pattern ( ($generated@@85 ($generated@@332 $generated@@490) $generated@@493))
 :pattern ( ($generated@@85 ($generated@@254 $generated@@490) $generated@@493))
))))
 :pattern ( ($generated@@140 $generated@@490 ($generated@@359 $generated@@491 $generated@@492)))
)))
(assert (forall (($generated@@494 T@U) ($generated@@495 T@U) ($generated@@496 T@U) ) (!  (=> (and (and (= (type $generated@@494) ($generated@@274 $generated@@173 $generated@@173)) (= (type $generated@@495) $generated@@67)) (= (type $generated@@496) $generated@@67)) (= ($generated@@140 $generated@@494 ($generated@@367 $generated@@495 $generated@@496)) (forall (($generated@@497 T@U) ) (!  (=> (and (= (type $generated@@497) $generated@@173) ($generated@@0 ($generated@@85 ($generated@@272 $generated@@494) $generated@@497))) (and ($generated@@184 ($generated@@85 ($generated@@342 $generated@@494) $generated@@497) $generated@@496) ($generated@@184 $generated@@497 $generated@@495)))
 :pattern ( ($generated@@85 ($generated@@342 $generated@@494) $generated@@497))
 :pattern ( ($generated@@85 ($generated@@272 $generated@@494) $generated@@497))
))))
 :pattern ( ($generated@@140 $generated@@494 ($generated@@367 $generated@@495 $generated@@496)))
)))
(assert (forall (($generated@@498 T@U) ($generated@@499 T@U) ($generated@@500 T@U) ($generated@@501 Int) ) (!  (=> (and (and (and (= (type $generated@@498) $generated@@67) (= (type $generated@@499) ($generated@@80 $generated@@81 $generated@@82))) (= (type $generated@@500) $generated@@81)) (and (and ($generated@@152 $generated@@499) (and (not (= $generated@@500 $generated@@138)) (= ($generated@@139 $generated@@500) ($generated@@137 $generated@@498)))) (and (<= 0 $generated@@501) (< $generated@@501 ($generated@@136 $generated@@500))))) ($generated@@184 ($generated@@87 ($generated@@85 $generated@@499 $generated@@500) ($generated@@378 $generated@@501)) $generated@@498))
 :pattern ( ($generated@@87 ($generated@@85 $generated@@499 $generated@@500) ($generated@@378 $generated@@501)) ($generated@@137 $generated@@498))
)))
(assert (forall (($generated@@504 T@U) ($generated@@505 T@U) ) (!  (=> (and (= (type $generated@@504) $generated@@173) (= (type $generated@@505) $generated@@173)) (< ($generated@@502 $generated@@504) ($generated@@503 ($generated@@183 $generated@@504 $generated@@505))))
 :pattern ( ($generated@@183 $generated@@504 $generated@@505))
)))
(assert (forall (($generated@@506 T@U) ($generated@@507 T@U) ) (!  (=> (and (= (type $generated@@506) $generated@@173) (= (type $generated@@507) $generated@@173)) (< ($generated@@502 $generated@@507) ($generated@@503 ($generated@@183 $generated@@506 $generated@@507))))
 :pattern ( ($generated@@183 $generated@@506 $generated@@507))
)))
(assert (forall (($generated@@508 T@U) ($generated@@509 T@U) ($generated@@510 T@U) ) (!  (=> (and (and (and (= (type $generated@@508) $generated@@173) (= (type $generated@@509) $generated@@67)) (= (type $generated@@510) $generated@@67)) ($generated@@184 $generated@@508 ($generated@@359 $generated@@509 $generated@@510))) (and (= ($generated@@231 ($generated@@331 ($generated@@256 $generated@@173 $generated@@173) $generated@@508)) $generated@@508) ($generated@@140 ($generated@@331 ($generated@@256 $generated@@173 $generated@@173) $generated@@508) ($generated@@359 $generated@@509 $generated@@510))))
 :pattern ( ($generated@@184 $generated@@508 ($generated@@359 $generated@@509 $generated@@510)))
)))
(assert (forall (($generated@@511 T@U) ($generated@@512 T@U) ($generated@@513 T@U) ) (!  (=> (and (and (and (= (type $generated@@511) $generated@@173) (= (type $generated@@512) $generated@@67)) (= (type $generated@@513) $generated@@67)) ($generated@@184 $generated@@511 ($generated@@367 $generated@@512 $generated@@513))) (and (= ($generated@@231 ($generated@@331 ($generated@@274 $generated@@173 $generated@@173) $generated@@511)) $generated@@511) ($generated@@140 ($generated@@331 ($generated@@274 $generated@@173 $generated@@173) $generated@@511) ($generated@@367 $generated@@512 $generated@@513))))
 :pattern ( ($generated@@184 $generated@@511 ($generated@@367 $generated@@512 $generated@@513)))
)))
(assert (forall (($generated@@514 T@U) ($generated@@515 T@U) ($generated@@516 T@U) ) (!  (=> (and (and (and (= (type $generated@@514) $generated@@67) (= (type $generated@@515) $generated@@67)) (= (type $generated@@516) $generated@@173)) ($generated@@184 $generated@@516 ($generated@@163 $generated@@514 $generated@@515))) (and (= ($generated@@231 ($generated@@331 $generated@@164 $generated@@516)) $generated@@516) ($generated@@140 ($generated@@331 $generated@@164 $generated@@516) ($generated@@163 $generated@@514 $generated@@515))))
 :pattern ( ($generated@@184 $generated@@516 ($generated@@163 $generated@@514 $generated@@515)))
)))
(assert (forall (($generated@@517 T@U) ) (! (let (($generated@@518 (type $generated@@517)))
 (not ($generated@@0 ($generated@@85 ($generated@@384 $generated@@518) $generated@@517))))
 :pattern ( (let (($generated@@518 (type $generated@@517)))
($generated@@85 ($generated@@384 $generated@@518) $generated@@517)))
)))
(assert  (and (and (and (and (and (and (and (forall (($generated@@525 T@T) ($generated@@526 T@T) ) (= ($generated@@1 ($generated@@521 $generated@@525 $generated@@526)) 20)) (forall (($generated@@527 T@T) ($generated@@528 T@T) ) (! (= ($generated@@522 ($generated@@521 $generated@@527 $generated@@528)) $generated@@527)
 :pattern ( ($generated@@521 $generated@@527 $generated@@528))
))) (forall (($generated@@529 T@T) ($generated@@530 T@T) ) (! (= ($generated@@523 ($generated@@521 $generated@@529 $generated@@530)) $generated@@530)
 :pattern ( ($generated@@521 $generated@@529 $generated@@530))
))) (forall (($generated@@531 T@U) ($generated@@532 T@U) ($generated@@533 T@U) ) (! (let (($generated@@534 ($generated@@523 (type $generated@@531))))
(= (type ($generated@@519 $generated@@531 $generated@@532 $generated@@533)) $generated@@534))
 :pattern ( ($generated@@519 $generated@@531 $generated@@532 $generated@@533))
))) (forall (($generated@@535 T@U) ($generated@@536 T@U) ($generated@@537 T@U) ($generated@@538 T@U) ) (! (let (($generated@@539 (type $generated@@538)))
(let (($generated@@540 (type $generated@@536)))
(= (type ($generated@@524 $generated@@535 $generated@@536 $generated@@537 $generated@@538)) ($generated@@521 $generated@@540 $generated@@539))))
 :pattern ( ($generated@@524 $generated@@535 $generated@@536 $generated@@537 $generated@@538))
))) (forall (($generated@@541 T@U) ($generated@@542 T@U) ($generated@@543 T@U) ($generated@@544 T@U) ) (! (let (($generated@@545 ($generated@@523 (type $generated@@541))))
 (=> (= (type $generated@@544) $generated@@545) (= ($generated@@519 ($generated@@524 $generated@@541 $generated@@542 $generated@@543 $generated@@544) $generated@@542 $generated@@543) $generated@@544)))
 :weight 0
))) (and (and (forall (($generated@@546 T@U) ($generated@@547 T@U) ($generated@@548 T@U) ($generated@@549 T@U) ($generated@@550 T@U) ($generated@@551 T@U) ) (!  (or (= $generated@@548 $generated@@550) (= ($generated@@519 ($generated@@524 $generated@@547 $generated@@548 $generated@@549 $generated@@546) $generated@@550 $generated@@551) ($generated@@519 $generated@@547 $generated@@550 $generated@@551)))
 :weight 0
)) (forall (($generated@@552 T@U) ($generated@@553 T@U) ($generated@@554 T@U) ($generated@@555 T@U) ($generated@@556 T@U) ($generated@@557 T@U) ) (!  (or (= $generated@@555 $generated@@557) (= ($generated@@519 ($generated@@524 $generated@@553 $generated@@554 $generated@@555 $generated@@552) $generated@@556 $generated@@557) ($generated@@519 $generated@@553 $generated@@556 $generated@@557)))
 :weight 0
))) (forall (($generated@@558 T@U) ($generated@@559 T@U) ($generated@@560 T@U) ($generated@@561 T@U) ($generated@@562 T@U) ($generated@@563 T@U) ) (!  (or true (= ($generated@@519 ($generated@@524 $generated@@559 $generated@@560 $generated@@561 $generated@@558) $generated@@562 $generated@@563) ($generated@@519 $generated@@559 $generated@@562 $generated@@563)))
 :weight 0
)))) (forall (($generated@@564 T@U) ($generated@@565 T@U) ($generated@@566 T@U) ($generated@@567 T@U) ) (! (= (type ($generated@@520 $generated@@564 $generated@@565 $generated@@566 $generated@@567)) ($generated@@521 $generated@@81 $generated@@4))
 :pattern ( ($generated@@520 $generated@@564 $generated@@565 $generated@@566 $generated@@567))
))))
(assert (forall (($generated@@568 T@U) ($generated@@569 T@U) ($generated@@570 T@U) ($generated@@571 T@U) ($generated@@572 T@U) ($generated@@573 T@U) ) (! (let (($generated@@574 ($generated@@70 (type $generated@@573))))
 (=> (and (and (and (and (and (= (type $generated@@568) $generated@@81) (= (type $generated@@569) ($generated@@80 $generated@@81 $generated@@82))) (= (type $generated@@570) ($generated@@69 $generated@@4))) (= (type $generated@@571) $generated@@81)) (= (type $generated@@572) $generated@@81)) (= (type $generated@@573) ($generated@@69 $generated@@574))) (= ($generated@@0 ($generated@@519 ($generated@@520 $generated@@568 $generated@@569 $generated@@570 $generated@@571) $generated@@572 $generated@@573))  (=> (and (not (= $generated@@572 $generated@@568)) ($generated@@0 ($generated@@87 ($generated@@85 $generated@@569 $generated@@572) $generated@@570))) (= $generated@@572 $generated@@571)))))
 :pattern ( ($generated@@519 ($generated@@520 $generated@@568 $generated@@569 $generated@@570 $generated@@571) $generated@@572 $generated@@573))
)))
(assert (forall (($generated@@575 T@U) ($generated@@576 T@U) ) (!  (=> (and (= (type $generated@@575) $generated@@67) (= (type $generated@@576) $generated@@67)) (and (= ($generated@@76 ($generated@@163 $generated@@575 $generated@@576)) $generated@@64) (= ($generated@@250 ($generated@@163 $generated@@575 $generated@@576)) $generated@@66)))
 :pattern ( ($generated@@163 $generated@@575 $generated@@576))
)))
(assert (forall (($generated@@577 T@U) ) (!  (=> (= (type $generated@@577) $generated@@164) (= ($generated@@502 ($generated@@231 $generated@@577)) ($generated@@503 $generated@@577)))
 :pattern ( ($generated@@502 ($generated@@231 $generated@@577)))
)))
(assert (forall (($generated@@578 T@U) ) (!  (=> (and (= (type $generated@@578) $generated@@173) ($generated@@184 $generated@@578 ($generated@@79 0))) (and (= ($generated@@231 ($generated@@331 $generated@@2 $generated@@578)) $generated@@578) ($generated@@140 ($generated@@331 ($generated@@80 $generated@@173 $generated@@4) $generated@@578) ($generated@@79 0))))
 :pattern ( ($generated@@184 $generated@@578 ($generated@@79 0)))
)))
(assert (forall (($generated@@579 T@U) ($generated@@580 T@U) ) (!  (=> (and (and (= (type $generated@@579) $generated@@173) (= (type $generated@@580) $generated@@67)) ($generated@@184 $generated@@579 ($generated@@193 $generated@@580))) (and (= ($generated@@231 ($generated@@331 ($generated@@80 $generated@@173 $generated@@4) $generated@@579)) $generated@@579) ($generated@@140 ($generated@@331 ($generated@@80 $generated@@173 $generated@@4) $generated@@579) ($generated@@193 $generated@@580))))
 :pattern ( ($generated@@184 $generated@@579 ($generated@@193 $generated@@580)))
)))
(assert (forall (($generated@@581 T@U) ($generated@@582 T@U) ) (!  (=> (and (and (= (type $generated@@581) $generated@@173) (= (type $generated@@582) $generated@@67)) ($generated@@184 $generated@@581 ($generated@@198 $generated@@582))) (and (= ($generated@@231 ($generated@@331 ($generated@@80 $generated@@173 $generated@@4) $generated@@581)) $generated@@581) ($generated@@140 ($generated@@331 ($generated@@80 $generated@@173 $generated@@4) $generated@@581) ($generated@@198 $generated@@582))))
 :pattern ( ($generated@@184 $generated@@581 ($generated@@198 $generated@@582)))
)))
(assert (forall (($generated@@583 T@U) ($generated@@584 T@U) ) (!  (=> (and (and (= (type $generated@@583) $generated@@173) (= (type $generated@@584) $generated@@67)) ($generated@@184 $generated@@583 ($generated@@178 $generated@@584))) (and (= ($generated@@231 ($generated@@331 ($generated@@80 $generated@@173 $generated@@2) $generated@@583)) $generated@@583) ($generated@@140 ($generated@@331 ($generated@@80 $generated@@173 $generated@@2) $generated@@583) ($generated@@178 $generated@@584))))
 :pattern ( ($generated@@184 $generated@@583 ($generated@@178 $generated@@584)))
)))
(assert (forall (($generated@@585 T@U) ($generated@@586 T@U) ) (!  (=> (and (and (= (type $generated@@585) $generated@@173) (= (type $generated@@586) $generated@@67)) ($generated@@184 $generated@@585 ($generated@@451 $generated@@586))) (and (= ($generated@@231 ($generated@@331 ($generated@@223 $generated@@173) $generated@@585)) $generated@@585) ($generated@@140 ($generated@@331 ($generated@@223 $generated@@173) $generated@@585) ($generated@@451 $generated@@586))))
 :pattern ( ($generated@@184 $generated@@585 ($generated@@451 $generated@@586)))
)))
(assert (forall (($generated@@587 T@U) ($generated@@588 T@U) ) (!  (=> (and (and (= (type $generated@@587) $generated@@67) (= (type $generated@@588) $generated@@173)) ($generated@@184 $generated@@588 ($generated@@137 $generated@@587))) (and (= ($generated@@231 ($generated@@331 $generated@@81 $generated@@588)) $generated@@588) ($generated@@140 ($generated@@331 $generated@@81 $generated@@588) ($generated@@137 $generated@@587))))
 :pattern ( ($generated@@184 $generated@@588 ($generated@@137 $generated@@587)))
)))
(assert (forall (($generated@@589 T@U) ($generated@@590 T@U) ) (!  (=> (and (and (= (type $generated@@589) $generated@@67) (= (type $generated@@590) $generated@@173)) ($generated@@184 $generated@@590 ($generated@@157 $generated@@589))) (and (= ($generated@@231 ($generated@@331 $generated@@81 $generated@@590)) $generated@@590) ($generated@@140 ($generated@@331 $generated@@81 $generated@@590) ($generated@@157 $generated@@589))))
 :pattern ( ($generated@@184 $generated@@590 ($generated@@157 $generated@@589)))
)))
(assert (forall (($generated@@591 T@U) ($generated@@592 T@U) ($generated@@593 T@U) ($generated@@594 T@U) ) (! (let (($generated@@595 (type $generated@@594)))
 (=> (and (and (and (= (type $generated@@591) ($generated@@80 $generated@@81 $generated@@82)) (= (type $generated@@592) $generated@@81)) (= (type $generated@@593) ($generated@@69 $generated@@595))) ($generated@@152 ($generated@@86 $generated@@591 $generated@@592 ($generated@@88 ($generated@@85 $generated@@591 $generated@@592) $generated@@593 $generated@@594)))) ($generated@@145 $generated@@591 ($generated@@86 $generated@@591 $generated@@592 ($generated@@88 ($generated@@85 $generated@@591 $generated@@592) $generated@@593 $generated@@594)))))
 :pattern ( ($generated@@86 $generated@@591 $generated@@592 ($generated@@88 ($generated@@85 $generated@@591 $generated@@592) $generated@@593 $generated@@594)))
)))
(assert (forall (($generated@@596 T@U) ($generated@@597 T@U) ($generated@@598 T@U) ) (!  (=> (and (and (= (type $generated@@596) ($generated@@80 $generated@@173 $generated@@2)) (= (type $generated@@597) $generated@@67)) (= (type $generated@@598) ($generated@@80 $generated@@81 $generated@@82))) (= ($generated@@78 $generated@@596 ($generated@@178 $generated@@597) $generated@@598) (forall (($generated@@599 T@U) ) (!  (=> (and (= (type $generated@@599) $generated@@173) (< 0 ($generated ($generated@@85 $generated@@596 $generated@@599)))) ($generated@@209 $generated@@599 $generated@@597 $generated@@598))
 :pattern ( ($generated@@85 $generated@@596 $generated@@599))
))))
 :pattern ( ($generated@@78 $generated@@596 ($generated@@178 $generated@@597) $generated@@598))
)))
(assert (forall (($generated@@600 T@U) ($generated@@601 T@U) ($generated@@602 T@U) ) (!  (=> (and (and (and (= (type $generated@@600) $generated@@164) (= (type $generated@@601) $generated@@67)) (= (type $generated@@602) ($generated@@80 $generated@@81 $generated@@82))) (and ($generated@@152 $generated@@602) (and ($generated@@162 $generated@@600) (exists (($generated@@603 T@U) ) (!  (and (= (type $generated@@603) $generated@@67) ($generated@@78 $generated@@600 ($generated@@163 $generated@@601 $generated@@603) $generated@@602))
 :pattern ( ($generated@@78 $generated@@600 ($generated@@163 $generated@@601 $generated@@603) $generated@@602))
))))) ($generated@@209 ($generated@@171 $generated@@600) $generated@@601 $generated@@602))
 :pattern ( ($generated@@209 ($generated@@171 $generated@@600) $generated@@601 $generated@@602))
)))
(assert (forall (($generated@@604 T@U) ($generated@@605 T@U) ($generated@@606 T@U) ) (!  (=> (and (and (and (= (type $generated@@604) $generated@@164) (= (type $generated@@605) $generated@@67)) (= (type $generated@@606) ($generated@@80 $generated@@81 $generated@@82))) (and ($generated@@152 $generated@@606) (and ($generated@@162 $generated@@604) (exists (($generated@@607 T@U) ) (!  (and (= (type $generated@@607) $generated@@67) ($generated@@78 $generated@@604 ($generated@@163 $generated@@607 $generated@@605) $generated@@606))
 :pattern ( ($generated@@78 $generated@@604 ($generated@@163 $generated@@607 $generated@@605) $generated@@606))
))))) ($generated@@209 ($generated@@172 $generated@@604) $generated@@605 $generated@@606))
 :pattern ( ($generated@@209 ($generated@@172 $generated@@604) $generated@@605 $generated@@606))
)))
(assert (forall (($generated@@608 T@U) ($generated@@609 T@U) ) (!  (=> (and (= (type $generated@@608) $generated@@173) (= (type $generated@@609) $generated@@173)) (= ($generated@@183 ($generated@@205 $generated@@608) ($generated@@205 $generated@@609)) ($generated@@205 ($generated@@183 $generated@@608 $generated@@609))))
 :pattern ( ($generated@@183 ($generated@@205 $generated@@608) ($generated@@205 $generated@@609)))
)))
(assert (forall (($generated@@610 Int) ) (! (= ($generated@@231 ($generated@@8 ($generated@@203 $generated@@610))) ($generated@@205 ($generated@@231 ($generated@@8 $generated@@610))))
 :pattern ( ($generated@@231 ($generated@@8 ($generated@@203 $generated@@610))))
)))
(assert (forall (($generated@@611 T@U) ) (! (= ($generated@@231 ($generated@@205 $generated@@611)) ($generated@@205 ($generated@@231 $generated@@611)))
 :pattern ( ($generated@@231 ($generated@@205 $generated@@611)))
)))
(assert (forall (($generated@@612 T@U) ) (! (let (($generated@@613 ($generated@@224 (type $generated@@612))))
 (=> (and (= (type $generated@@612) ($generated@@223 $generated@@613)) (= ($generated@@222 $generated@@612) 0)) (= $generated@@612 ($generated@@221 $generated@@613))))
 :pattern ( ($generated@@222 $generated@@612))
)))
(assert (forall (($generated@@614 T@U) ($generated@@615 T@U) ($generated@@616 T@U) ) (! (let (($generated@@617 (type $generated@@615)))
 (=> (and (and (= (type $generated@@614) ($generated@@80 $generated@@617 $generated@@2)) (= (type $generated@@616) $generated@@2)) (<= 0 ($generated $generated@@616))) (= ($generated@@244 ($generated@@86 $generated@@614 $generated@@615 $generated@@616)) (+ (- ($generated@@244 $generated@@614) ($generated ($generated@@85 $generated@@614 $generated@@615))) ($generated $generated@@616)))))
 :pattern ( ($generated@@244 ($generated@@86 $generated@@614 $generated@@615 $generated@@616)))
)))
(assert (forall (($generated@@618 T@U) ($generated@@619 T@U) ) (!  (=> (and (= (type $generated@@618) ($generated@@80 $generated@@81 $generated@@82)) (= (type $generated@@619) $generated@@2)) ($generated@@78 $generated@@619 $generated@@46 $generated@@618))
 :pattern ( ($generated@@78 $generated@@619 $generated@@46 $generated@@618))
)))
(assert (forall (($generated@@620 T@U) ($generated@@621 T@U) ) (!  (=> (and (= (type $generated@@620) ($generated@@80 $generated@@81 $generated@@82)) (= (type $generated@@621) $generated@@3)) ($generated@@78 $generated@@621 $generated@@47 $generated@@620))
 :pattern ( ($generated@@78 $generated@@621 $generated@@47 $generated@@620))
)))
(assert (forall (($generated@@622 T@U) ($generated@@623 T@U) ) (!  (=> (and (= (type $generated@@622) ($generated@@80 $generated@@81 $generated@@82)) (= (type $generated@@623) $generated@@4)) ($generated@@78 $generated@@623 $generated@@44 $generated@@622))
 :pattern ( ($generated@@78 $generated@@623 $generated@@44 $generated@@622))
)))
(assert (forall (($generated@@624 T@U) ($generated@@625 T@U) ) (!  (=> (and (= (type $generated@@624) ($generated@@80 $generated@@81 $generated@@82)) (= (type $generated@@625) $generated@@408)) ($generated@@78 $generated@@625 $generated@@45 $generated@@624))
 :pattern ( ($generated@@78 $generated@@625 $generated@@45 $generated@@624))
)))
(assert (forall (($generated@@626 T@U) ($generated@@627 T@U) ) (!  (=> (and (= (type $generated@@626) ($generated@@80 $generated@@81 $generated@@82)) (= (type $generated@@627) $generated@@173)) ($generated@@78 $generated@@627 $generated@@48 $generated@@626))
 :pattern ( ($generated@@78 $generated@@627 $generated@@48 $generated@@626))
)))
(assert (forall (($generated@@628 T@U) ($generated@@629 T@U) ) (!  (=> (and (= (type $generated@@628) ($generated@@223 $generated@@173)) (= (type $generated@@629) $generated@@67)) (= ($generated@@140 $generated@@628 ($generated@@451 $generated@@629)) (forall (($generated@@630 Int) ) (!  (=> (and (<= 0 $generated@@630) (< $generated@@630 ($generated@@222 $generated@@628))) ($generated@@184 ($generated@@452 $generated@@628 $generated@@630) $generated@@629))
 :pattern ( ($generated@@452 $generated@@628 $generated@@630))
))))
 :pattern ( ($generated@@140 $generated@@628 ($generated@@451 $generated@@629)))
)))
(assert (forall (($generated@@632 T@U) ($generated@@633 Int) ) (!  (=> (= (type $generated@@632) ($generated@@223 $generated@@173)) (=> (and (<= 0 $generated@@633) (< $generated@@633 ($generated@@222 $generated@@632))) (< ($generated@@503 ($generated@@331 $generated@@164 ($generated@@452 $generated@@632 $generated@@633))) ($generated@@631 $generated@@632))))
 :pattern ( ($generated@@503 ($generated@@331 $generated@@164 ($generated@@452 $generated@@632 $generated@@633))))
)))
(assert (forall (($generated@@634 T@U) ($generated@@635 T@U) ($generated@@636 T@U) ) (!  (=> (and (and (and (= (type $generated@@634) ($generated@@256 $generated@@173 $generated@@173)) (= (type $generated@@635) $generated@@67)) (= (type $generated@@636) $generated@@67)) ($generated@@140 $generated@@634 ($generated@@359 $generated@@635 $generated@@636))) (and (and ($generated@@140 ($generated@@254 $generated@@634) ($generated@@193 $generated@@635)) ($generated@@140 ($generated@@299 $generated@@634) ($generated@@193 $generated@@636))) ($generated@@140 ($generated@@330 $generated@@634) ($generated@@193 ($generated@@163 $generated@@635 $generated@@636)))))
 :pattern ( ($generated@@140 $generated@@634 ($generated@@359 $generated@@635 $generated@@636)))
)))
(assert (forall (($generated@@637 T@U) ($generated@@638 T@U) ($generated@@639 T@U) ) (!  (=> (and (and (and (= (type $generated@@637) ($generated@@274 $generated@@173 $generated@@173)) (= (type $generated@@638) $generated@@67)) (= (type $generated@@639) $generated@@67)) ($generated@@140 $generated@@637 ($generated@@367 $generated@@638 $generated@@639))) (and (and ($generated@@140 ($generated@@272 $generated@@637) ($generated@@198 $generated@@638)) ($generated@@140 ($generated@@310 $generated@@637) ($generated@@198 $generated@@639))) ($generated@@140 ($generated@@341 $generated@@637) ($generated@@198 ($generated@@163 $generated@@638 $generated@@639)))))
 :pattern ( ($generated@@140 $generated@@637 ($generated@@367 $generated@@638 $generated@@639)))
)))
(assert (forall (($generated@@640 T@U) ) (!  (=> (= (type $generated@@640) $generated@@2) ($generated@@140 $generated@@640 $generated@@46))
 :pattern ( ($generated@@140 $generated@@640 $generated@@46))
)))
(assert (forall (($generated@@641 T@U) ) (!  (=> (= (type $generated@@641) $generated@@3) ($generated@@140 $generated@@641 $generated@@47))
 :pattern ( ($generated@@140 $generated@@641 $generated@@47))
)))
(assert (forall (($generated@@642 T@U) ) (!  (=> (= (type $generated@@642) $generated@@4) ($generated@@140 $generated@@642 $generated@@44))
 :pattern ( ($generated@@140 $generated@@642 $generated@@44))
)))
(assert (forall (($generated@@643 T@U) ) (!  (=> (= (type $generated@@643) $generated@@408) ($generated@@140 $generated@@643 $generated@@45))
 :pattern ( ($generated@@140 $generated@@643 $generated@@45))
)))
(assert (forall (($generated@@644 T@U) ) (!  (=> (= (type $generated@@644) $generated@@173) ($generated@@140 $generated@@644 $generated@@48))
 :pattern ( ($generated@@140 $generated@@644 $generated@@48))
)))
(push 1)
(declare-fun ControlFlow (Int Int) Int)
(declare-fun $generated@@645 () Int)
(declare-fun $generated@@646 () Int)
(declare-fun $generated@@647 () Int)
(declare-fun $generated@@648 () T@U)
(declare-fun $generated@@649 () T@U)
(declare-fun $generated@@650 () Int)
(declare-fun $generated@@651 () Int)
(declare-fun $generated@@652 () Int)
(declare-fun $generated@@653 () Int)
(declare-fun $generated@@654 () Bool)
(declare-fun $generated@@655 () Int)
(declare-fun $generated@@656 () T@U)
(declare-fun $generated@@657 () T@U)
(declare-fun $generated@@658 () Int)
(declare-fun $generated@@659 () Int)
(declare-fun $generated@@660 () Int)
(declare-fun $generated@@661 () T@U)
(declare-fun $generated@@662 () T@U)
(declare-fun $generated@@663 () Int)
(declare-fun $generated@@664 () Int)
(declare-fun $generated@@665 () T@U)
(declare-fun $generated@@666 () T@U)
(declare-fun $generated@@667 () T@U)
(declare-fun $generated@@668 () Int)
(declare-fun $generated@@669 () Int)
(declare-fun $generated@@670 () T@U)
(declare-fun $generated@@671 () Int)
(declare-fun $generated@@672 () Int)
(declare-fun $generated@@673 (T@U) Bool)
(declare-fun $generated@@674 () T@U)
(declare-fun $generated@@675 () Int)
(declare-fun $generated@@676 () Int)
(declare-fun $generated@@677 () T@U)
(declare-fun $generated@@678 () T@U)
(declare-fun $generated@@679 () Int)
(declare-fun $generated@@680 () Int)
(declare-fun $generated@@681 () T@U)
(declare-fun $generated@@682 () Int)
(declare-fun $generated@@683 () Int)
(assert  (and (and (and (and (and (and (and (and (and (and (and (and (and (= (type $generated@@649) ($generated@@80 $generated@@81 $generated@@82)) (= (type $generated@@648) $generated@@81)) (= (type $generated@@661) ($generated@@80 $generated@@81 $generated@@82))) (= (type $generated@@662) ($generated@@80 $generated@@81 $generated@@82))) (= (type $generated@@665) ($generated@@69 $generated@@173))) (= (type $generated@@666) ($generated@@521 $generated@@81 $generated@@4))) (= (type $generated@@667) ($generated@@69 $generated@@173))) (= (type $generated@@670) ($generated@@80 $generated@@81 $generated@@82))) (= (type $generated@@656) ($generated@@80 $generated@@81 $generated@@82))) (= (type $generated@@657) ($generated@@80 $generated@@81 $generated@@82))) (= (type $generated@@674) ($generated@@80 $generated@@81 $generated@@82))) (= (type $generated@@677) ($generated@@69 $generated@@173))) (= (type $generated@@678) ($generated@@69 $generated@@173))) (= (type $generated@@681) ($generated@@80 $generated@@81 $generated@@82))))
(set-option :timeout 0)
(set-option :rlimit 0)
(assert (not
 (=> (= (ControlFlow 0 0) 100) (let (($generated@@684 true))
(let (($generated@@685  (=> (and (not (and (<= $generated@@645 $generated@@646) (< $generated@@646 $generated@@647))) (= (ControlFlow 0 61) 57)) $generated@@684)))
(let (($generated@@686  (=> (and (<= $generated@@645 $generated@@646) (< $generated@@646 $generated@@647)) (and (=> (= (ControlFlow 0 58) (- 0 60)) (not (= $generated@@648 $generated@@138))) (=> (not (= $generated@@648 $generated@@138)) (and (=> (= (ControlFlow 0 58) (- 0 59)) (and (<= 0 $generated@@646) (< $generated@@646 ($generated@@136 $generated@@648)))) (=> (= (ControlFlow 0 58) 57) $generated@@684)))))))
(let (($generated@@687  (=> (< $generated@@646 $generated@@645) (and (=> (= (ControlFlow 0 63) 58) $generated@@686) (=> (= (ControlFlow 0 63) 61) $generated@@685)))))
(let (($generated@@688  (=> (<= $generated@@645 $generated@@646) (and (=> (= (ControlFlow 0 62) 58) $generated@@686) (=> (= (ControlFlow 0 62) 61) $generated@@685)))))
(let (($generated@@689  (and (=> (= (ControlFlow 0 64) 62) $generated@@688) (=> (= (ControlFlow 0 64) 63) $generated@@687))))
(let (($generated@@690 true))
(let (($generated@@691  (=> (forall (($generated@@692 Int) ) (!  (=> true (=> (and (<= $generated@@650 $generated@@692) (< $generated@@692 $generated@@651)) (<= ($generated ($generated@@331 $generated@@2 ($generated@@87 ($generated@@85 $generated@@649 $generated@@648) ($generated@@378 $generated@@692)))) $generated@@652)))
 :pattern ( ($generated@@331 $generated@@2 ($generated@@87 ($generated@@85 $generated@@649 $generated@@648) ($generated@@378 $generated@@692))))
)) (and (=> (= (ControlFlow 0 65) 64) $generated@@689) (=> (= (ControlFlow 0 65) 56) $generated@@690)))))
(let (($generated@@693  (=> (and (not (and (<= $generated@@650 $generated@@653) (< $generated@@653 $generated@@651))) (= (ControlFlow 0 69) 65)) $generated@@691)))
(let (($generated@@694  (=> (and (<= $generated@@650 $generated@@653) (< $generated@@653 $generated@@651)) (and (=> (= (ControlFlow 0 66) (- 0 68)) (not (= $generated@@648 $generated@@138))) (=> (not (= $generated@@648 $generated@@138)) (and (=> (= (ControlFlow 0 66) (- 0 67)) (and (<= 0 $generated@@653) (< $generated@@653 ($generated@@136 $generated@@648)))) (=> (= (ControlFlow 0 66) 65) $generated@@691)))))))
(let (($generated@@695  (=> (< $generated@@653 $generated@@650) (and (=> (= (ControlFlow 0 71) 66) $generated@@694) (=> (= (ControlFlow 0 71) 69) $generated@@693)))))
(let (($generated@@696  (=> (<= $generated@@650 $generated@@653) (and (=> (= (ControlFlow 0 70) 66) $generated@@694) (=> (= (ControlFlow 0 70) 69) $generated@@693)))))
(let (($generated@@697  (and (=> (= (ControlFlow 0 72) 70) $generated@@696) (=> (= (ControlFlow 0 72) 71) $generated@@695))))
(let (($generated@@698 true))
(let (($generated@@699  (=> (and (and (<= $generated@@650 $generated@@651) (<= $generated@@651 $generated@@645)) (< $generated@@645 $generated@@647)) (and (=> (= (ControlFlow 0 73) 72) $generated@@697) (=> (= (ControlFlow 0 73) 55) $generated@@698)))))
(let (($generated@@700  (=> (and (not (and (<= $generated@@650 $generated@@651) (<= $generated@@651 $generated@@645))) (= (ControlFlow 0 75) 73)) $generated@@699)))
(let (($generated@@701  (=> (and (and (<= $generated@@650 $generated@@651) (<= $generated@@651 $generated@@645)) (= (ControlFlow 0 74) 73)) $generated@@699)))
(let (($generated@@702  (=> (< $generated@@651 $generated@@650) (and (=> (= (ControlFlow 0 77) 74) $generated@@701) (=> (= (ControlFlow 0 77) 75) $generated@@700)))))
(let (($generated@@703  (=> (<= $generated@@650 $generated@@651) (and (=> (= (ControlFlow 0 76) 74) $generated@@701) (=> (= (ControlFlow 0 76) 75) $generated@@700)))))
(let (($generated@@704  (=> (not $generated@@654) (and (=> (= (ControlFlow 0 78) 76) $generated@@703) (=> (= (ControlFlow 0 78) 77) $generated@@702)))))
(let (($generated@@705  (and (=> (= (ControlFlow 0 48) (- 0 52)) (<= $generated@@650 $generated@@655)) (=> (<= $generated@@650 $generated@@655) (and (=> (= (ControlFlow 0 48) (- 0 51)) (< $generated@@655 $generated@@647)) (=> (< $generated@@655 $generated@@647) (and (=> (= (ControlFlow 0 48) (- 0 50)) (forall (($generated@@706 Int) ($generated@@707 Int) ) (!  (=> true (=> (and (and (and (<= $generated@@650 $generated@@706) (< $generated@@706 $generated@@655)) (<= $generated@@655 $generated@@707)) (< $generated@@707 $generated@@647)) (<= ($generated ($generated@@331 $generated@@2 ($generated@@87 ($generated@@85 $generated@@656 $generated@@648) ($generated@@378 $generated@@706)))) ($generated ($generated@@331 $generated@@2 ($generated@@87 ($generated@@85 $generated@@656 $generated@@648) ($generated@@378 $generated@@707)))))))
 :pattern ( ($generated@@331 $generated@@2 ($generated@@87 ($generated@@85 $generated@@656 $generated@@648) ($generated@@378 $generated@@707))) ($generated@@331 $generated@@2 ($generated@@87 ($generated@@85 $generated@@656 $generated@@648) ($generated@@378 $generated@@706))))
))) (=> (forall (($generated@@708 Int) ($generated@@709 Int) ) (!  (=> true (=> (and (and (and (<= $generated@@650 $generated@@708) (< $generated@@708 $generated@@655)) (<= $generated@@655 $generated@@709)) (< $generated@@709 $generated@@647)) (<= ($generated ($generated@@331 $generated@@2 ($generated@@87 ($generated@@85 $generated@@656 $generated@@648) ($generated@@378 $generated@@708)))) ($generated ($generated@@331 $generated@@2 ($generated@@87 ($generated@@85 $generated@@656 $generated@@648) ($generated@@378 $generated@@709)))))))
 :pattern ( ($generated@@331 $generated@@2 ($generated@@87 ($generated@@85 $generated@@656 $generated@@648) ($generated@@378 $generated@@709))) ($generated@@331 $generated@@2 ($generated@@87 ($generated@@85 $generated@@656 $generated@@648) ($generated@@378 $generated@@708))))
)) (and (=> (= (ControlFlow 0 48) (- 0 49)) (forall (($generated@@710 Int) ) (!  (=> true (=> (and (<= $generated@@650 $generated@@710) (< $generated@@710 $generated@@655)) (<= ($generated ($generated@@331 $generated@@2 ($generated@@87 ($generated@@85 $generated@@656 $generated@@648) ($generated@@378 $generated@@710)))) ($generated ($generated@@331 $generated@@2 ($generated@@87 ($generated@@85 $generated@@657 $generated@@648) ($generated@@378 $generated@@650)))))))
 :pattern ( ($generated@@331 $generated@@2 ($generated@@87 ($generated@@85 $generated@@656 $generated@@648) ($generated@@378 $generated@@710))))
))) (=> (forall (($generated@@711 Int) ) (!  (=> true (=> (and (<= $generated@@650 $generated@@711) (< $generated@@711 $generated@@655)) (<= ($generated ($generated@@331 $generated@@2 ($generated@@87 ($generated@@85 $generated@@656 $generated@@648) ($generated@@378 $generated@@711)))) ($generated ($generated@@331 $generated@@2 ($generated@@87 ($generated@@85 $generated@@657 $generated@@648) ($generated@@378 $generated@@650)))))))
 :pattern ( ($generated@@331 $generated@@2 ($generated@@87 ($generated@@85 $generated@@656 $generated@@648) ($generated@@378 $generated@@711))))
)) (=> (= (ControlFlow 0 48) (- 0 47)) (forall (($generated@@712 Int) ) (!  (=> true (=> (and (<= $generated@@655 $generated@@712) (< $generated@@712 $generated@@647)) (<= ($generated ($generated@@331 $generated@@2 ($generated@@87 ($generated@@85 $generated@@657 $generated@@648) ($generated@@378 $generated@@650)))) ($generated ($generated@@331 $generated@@2 ($generated@@87 ($generated@@85 $generated@@656 $generated@@648) ($generated@@378 $generated@@712)))))))
 :pattern ( ($generated@@331 $generated@@2 ($generated@@87 ($generated@@85 $generated@@656 $generated@@648) ($generated@@378 $generated@@712))))
)))))))))))))
(let (($generated@@713  (=> (and (and (<= $generated@@645 $generated@@651) (= $generated@@656 $generated@@649)) (and (= $generated@@655 $generated@@651) (= (ControlFlow 0 53) 48))) $generated@@705)))
(let (($generated@@714  (and (=> (= (ControlFlow 0 5) (- 0 11)) (or (<= 0 $generated@@658) (= (- $generated@@659 $generated@@660) $generated@@658))) (=> (or (<= 0 $generated@@658) (= (- $generated@@659 $generated@@660) $generated@@658)) (and (=> (= (ControlFlow 0 5) (- 0 10)) (< (- $generated@@659 $generated@@660) $generated@@658)) (=> (< (- $generated@@659 $generated@@660) $generated@@658) (and (=> (= (ControlFlow 0 5) (- 0 9)) (=> $generated@@654 (<= $generated@@650 $generated@@660))) (=> (=> $generated@@654 (<= $generated@@650 $generated@@660)) (and (=> (= (ControlFlow 0 5) (- 0 8)) (=> $generated@@654 (<= $generated@@660 $generated@@659))) (=> (=> $generated@@654 (<= $generated@@660 $generated@@659)) (and (=> (= (ControlFlow 0 5) (- 0 7)) (=> $generated@@654 (< $generated@@659 $generated@@647))) (=> (=> $generated@@654 (< $generated@@659 $generated@@647)) (and (=> (= (ControlFlow 0 5) (- 0 6)) (=> $generated@@654 (forall (($generated@@715 Int) ) (!  (=> true (=> (and (<= $generated@@650 $generated@@715) (< $generated@@715 $generated@@660)) (<= ($generated ($generated@@331 $generated@@2 ($generated@@87 ($generated@@85 $generated@@661 $generated@@648) ($generated@@378 $generated@@715)))) $generated@@652)))
 :pattern ( ($generated@@331 $generated@@2 ($generated@@87 ($generated@@85 $generated@@661 $generated@@648) ($generated@@378 $generated@@715))))
)))) (=> (=> $generated@@654 (forall (($generated@@716 Int) ) (!  (=> true (=> (and (<= $generated@@650 $generated@@716) (< $generated@@716 $generated@@660)) (<= ($generated ($generated@@331 $generated@@2 ($generated@@87 ($generated@@85 $generated@@661 $generated@@648) ($generated@@378 $generated@@716)))) $generated@@652)))
 :pattern ( ($generated@@331 $generated@@2 ($generated@@87 ($generated@@85 $generated@@661 $generated@@648) ($generated@@378 $generated@@716))))
))) (=> (= (ControlFlow 0 5) (- 0 4)) (=> $generated@@654 (forall (($generated@@717 Int) ) (!  (=> true (=> (and (<= $generated@@659 $generated@@717) (< $generated@@717 $generated@@647)) (<= $generated@@652 ($generated ($generated@@331 $generated@@2 ($generated@@87 ($generated@@85 $generated@@661 $generated@@648) ($generated@@378 $generated@@717)))))))
 :pattern ( ($generated@@331 $generated@@2 ($generated@@87 ($generated@@85 $generated@@661 $generated@@648) ($generated@@378 $generated@@717))))
))))))))))))))))))
(let (($generated@@718  (and (=> (= (ControlFlow 0 18) (- 0 20)) (< ($generated ($generated@@331 $generated@@2 ($generated@@87 ($generated@@85 $generated@@662 $generated@@648) ($generated@@378 $generated@@651)))) $generated@@652)) (and (=> (= (ControlFlow 0 18) (- 0 19)) (< $generated@@652 ($generated ($generated@@331 $generated@@2 ($generated@@87 ($generated@@85 $generated@@662 $generated@@648) ($generated@@378 (- $generated@@645 1))))))) (=> (and (and (and (< ($generated ($generated@@331 $generated@@2 ($generated@@87 ($generated@@85 $generated@@662 $generated@@648) ($generated@@378 $generated@@651)))) $generated@@652) (< $generated@@652 ($generated ($generated@@331 $generated@@2 ($generated@@87 ($generated@@85 $generated@@662 $generated@@648) ($generated@@378 (- $generated@@645 1))))))) (and (= $generated@@663 (+ $generated@@651 1)) (= $generated@@664 (- $generated@@645 1)))) (and (and (= $generated@@660 $generated@@663) (= $generated@@659 $generated@@664)) (and (= $generated@@661 $generated@@662) (= (ControlFlow 0 18) 5)))) $generated@@714)))))
(let (($generated@@719  (=> (and (<= $generated@@652 ($generated ($generated@@331 $generated@@2 ($generated@@87 ($generated@@85 $generated@@662 $generated@@648) ($generated@@378 $generated@@651))))) (= (ControlFlow 0 24) 18)) $generated@@718)))
(let (($generated@@720  (=> (< ($generated ($generated@@331 $generated@@2 ($generated@@87 ($generated@@85 $generated@@662 $generated@@648) ($generated@@378 $generated@@651)))) $generated@@652) (and (=> (= (ControlFlow 0 21) (- 0 23)) (not (= $generated@@648 $generated@@138))) (=> (not (= $generated@@648 $generated@@138)) (and (=> (= (ControlFlow 0 21) (- 0 22)) (and (<= 0 (- $generated@@645 1)) (< (- $generated@@645 1) ($generated@@136 $generated@@648)))) (=> (= (ControlFlow 0 21) 18) $generated@@718)))))))
(let (($generated@@721  (=> (and (< ($generated ($generated@@331 $generated@@2 ($generated@@87 ($generated@@85 $generated@@649 $generated@@648) ($generated@@378 (- $generated@@645 1))))) $generated@@652) (< $generated@@652 ($generated ($generated@@331 $generated@@2 ($generated@@87 ($generated@@85 $generated@@649 $generated@@648) ($generated@@378 $generated@@651)))))) (and (=> (= (ControlFlow 0 25) (- 0 38)) (not (= $generated@@648 $generated@@138))) (=> (not (= $generated@@648 $generated@@138)) (and (=> (= (ControlFlow 0 25) (- 0 37)) (and (<= 0 (- $generated@@645 1)) (< (- $generated@@645 1) ($generated@@136 $generated@@648)))) (=> (and (<= 0 (- $generated@@645 1)) (< (- $generated@@645 1) ($generated@@136 $generated@@648))) (=> (= $generated@@665 ($generated@@378 (- $generated@@645 1))) (and (=> (= (ControlFlow 0 25) (- 0 36)) ($generated@@0 ($generated@@519 $generated@@666 $generated@@648 $generated@@665))) (=> ($generated@@0 ($generated@@519 $generated@@666 $generated@@648 $generated@@665)) (and (=> (= (ControlFlow 0 25) (- 0 35)) (not (= $generated@@648 $generated@@138))) (=> (not (= $generated@@648 $generated@@138)) (and (=> (= (ControlFlow 0 25) (- 0 34)) (and (<= 0 $generated@@651) (< $generated@@651 ($generated@@136 $generated@@648)))) (=> (and (<= 0 $generated@@651) (< $generated@@651 ($generated@@136 $generated@@648))) (=> (= $generated@@667 ($generated@@378 $generated@@651)) (and (=> (= (ControlFlow 0 25) (- 0 33)) ($generated@@0 ($generated@@519 $generated@@666 $generated@@648 $generated@@667))) (=> ($generated@@0 ($generated@@519 $generated@@666 $generated@@648 $generated@@667)) (and (=> (= (ControlFlow 0 25) (- 0 32)) (not (= $generated@@648 $generated@@138))) (=> (not (= $generated@@648 $generated@@138)) (and (=> (= (ControlFlow 0 25) (- 0 31)) (and (<= 0 $generated@@651) (< $generated@@651 ($generated@@136 $generated@@648)))) (=> (and (<= 0 $generated@@651) (< $generated@@651 ($generated@@136 $generated@@648))) (=> (= $generated@@668 ($generated ($generated@@331 $generated@@2 ($generated@@87 ($generated@@85 $generated@@649 $generated@@648) ($generated@@378 $generated@@651))))) (and (=> (= (ControlFlow 0 25) (- 0 30)) (not (= $generated@@648 $generated@@138))) (=> (not (= $generated@@648 $generated@@138)) (and (=> (= (ControlFlow 0 25) (- 0 29)) (and (<= 0 (- $generated@@645 1)) (< (- $generated@@645 1) ($generated@@136 $generated@@648)))) (=> (and (<= 0 (- $generated@@645 1)) (< (- $generated@@645 1) ($generated@@136 $generated@@648))) (=> (= $generated@@669 ($generated ($generated@@331 $generated@@2 ($generated@@87 ($generated@@85 $generated@@649 $generated@@648) ($generated@@378 (- $generated@@645 1)))))) (and (=> (= (ControlFlow 0 25) (- 0 28)) (or (or (not (= $generated@@648 $generated@@648)) (not (= $generated@@651 (- $generated@@645 1)))) (= ($generated@@231 ($generated@@8 $generated@@669)) ($generated@@231 ($generated@@8 $generated@@668))))) (=> (or (or (not (= $generated@@648 $generated@@648)) (not (= $generated@@651 (- $generated@@645 1)))) (= ($generated@@231 ($generated@@8 $generated@@669)) ($generated@@231 ($generated@@8 $generated@@668)))) (=> (and (and (= $generated@@670 ($generated@@86 $generated@@649 $generated@@648 ($generated@@88 ($generated@@85 $generated@@649 $generated@@648) $generated@@665 ($generated@@231 ($generated@@8 $generated@@668))))) ($generated@@152 $generated@@670)) (and (= $generated@@662 ($generated@@86 $generated@@670 $generated@@648 ($generated@@88 ($generated@@85 $generated@@670 $generated@@648) $generated@@667 ($generated@@231 ($generated@@8 $generated@@669))))) ($generated@@152 $generated@@662))) (and (=> (= (ControlFlow 0 25) (- 0 27)) (not (= $generated@@648 $generated@@138))) (=> (not (= $generated@@648 $generated@@138)) (and (=> (= (ControlFlow 0 25) (- 0 26)) (and (<= 0 $generated@@651) (< $generated@@651 ($generated@@136 $generated@@648)))) (and (=> (= (ControlFlow 0 25) 21) $generated@@720) (=> (= (ControlFlow 0 25) 24) $generated@@719)))))))))))))))))))))))))))))))))))
(let (($generated@@722  (=> (and (<= $generated@@652 ($generated ($generated@@331 $generated@@2 ($generated@@87 ($generated@@85 $generated@@649 $generated@@648) ($generated@@378 (- $generated@@645 1)))))) (= (ControlFlow 0 42) 25)) $generated@@721)))
(let (($generated@@723  (=> (< ($generated ($generated@@331 $generated@@2 ($generated@@87 ($generated@@85 $generated@@649 $generated@@648) ($generated@@378 (- $generated@@645 1))))) $generated@@652) (and (=> (= (ControlFlow 0 39) (- 0 41)) (not (= $generated@@648 $generated@@138))) (=> (not (= $generated@@648 $generated@@138)) (and (=> (= (ControlFlow 0 39) (- 0 40)) (and (<= 0 $generated@@651) (< $generated@@651 ($generated@@136 $generated@@648)))) (=> (and (<= 0 $generated@@651) (< $generated@@651 ($generated@@136 $generated@@648))) (=> (= (ControlFlow 0 39) 25) $generated@@721))))))))
(let (($generated@@724  (and (=> (= (ControlFlow 0 43) (- 0 45)) (not (= $generated@@648 $generated@@138))) (=> (not (= $generated@@648 $generated@@138)) (and (=> (= (ControlFlow 0 43) (- 0 44)) (and (<= 0 (- $generated@@645 1)) (< (- $generated@@645 1) ($generated@@136 $generated@@648)))) (=> (and (<= 0 (- $generated@@645 1)) (< (- $generated@@645 1) ($generated@@136 $generated@@648))) (and (=> (= (ControlFlow 0 43) 39) $generated@@723) (=> (= (ControlFlow 0 43) 42) $generated@@722))))))))
(let (($generated@@725  (and (=> (= (ControlFlow 0 15) (- 0 17)) (not (= $generated@@648 $generated@@138))) (=> (not (= $generated@@648 $generated@@138)) (and (=> (= (ControlFlow 0 15) (- 0 16)) (and (<= 0 (- $generated@@645 1)) (< (- $generated@@645 1) ($generated@@136 $generated@@648)))) (=> (and (<= 0 (- $generated@@645 1)) (< (- $generated@@645 1) ($generated@@136 $generated@@648))) (=> (and (<= $generated@@652 ($generated ($generated@@331 $generated@@2 ($generated@@87 ($generated@@85 $generated@@649 $generated@@648) ($generated@@378 (- $generated@@645 1)))))) (= $generated@@671 (- $generated@@645 1))) (=> (and (and (= $generated@@660 $generated@@651) (= $generated@@659 $generated@@671)) (and (= $generated@@661 $generated@@649) (= (ControlFlow 0 15) 5))) $generated@@714))))))))
(let (($generated@@726  (and (=> (= (ControlFlow 0 12) (- 0 14)) (not (= $generated@@648 $generated@@138))) (=> (not (= $generated@@648 $generated@@138)) (and (=> (= (ControlFlow 0 12) (- 0 13)) (and (<= 0 $generated@@651) (< $generated@@651 ($generated@@136 $generated@@648)))) (=> (and (<= 0 $generated@@651) (< $generated@@651 ($generated@@136 $generated@@648))) (=> (and (<= ($generated ($generated@@331 $generated@@2 ($generated@@87 ($generated@@85 $generated@@649 $generated@@648) ($generated@@378 $generated@@651)))) $generated@@652) (= $generated@@672 (+ $generated@@651 1))) (=> (and (and (= $generated@@660 $generated@@672) (= $generated@@659 $generated@@645)) (and (= $generated@@661 $generated@@649) (= (ControlFlow 0 12) 5))) $generated@@714))))))))
(let (($generated@@727  (=> (and (and (and (< $generated@@652 ($generated ($generated@@331 $generated@@2 ($generated@@87 ($generated@@85 $generated@@649 $generated@@648) ($generated@@378 $generated@@651))))) (< ($generated ($generated@@331 $generated@@2 ($generated@@87 ($generated@@85 $generated@@649 $generated@@648) ($generated@@378 (- $generated@@645 1))))) $generated@@652)) (not (and (< ($generated ($generated@@331 $generated@@2 ($generated@@87 ($generated@@85 $generated@@649 $generated@@648) ($generated@@378 (- $generated@@645 1))))) $generated@@652) (< $generated@@652 ($generated ($generated@@331 $generated@@2 ($generated@@87 ($generated@@85 $generated@@649 $generated@@648) ($generated@@378 $generated@@651)))))))) (= (ControlFlow 0 3) (- 0 2))) false)))
(let (($generated@@728  (=> (and (< $generated@@651 $generated@@645) (= $generated@@658 (- $generated@@645 $generated@@651))) (and (and (and (=> (= (ControlFlow 0 46) 12) $generated@@726) (=> (= (ControlFlow 0 46) 15) $generated@@725)) (=> (= (ControlFlow 0 46) 43) $generated@@724)) (=> (= (ControlFlow 0 46) 3) $generated@@727)))))
(let (($generated@@729  (=> $generated@@654 (and (=> (= (ControlFlow 0 54) 53) $generated@@713) (=> (= (ControlFlow 0 54) 46) $generated@@728)))))
(let (($generated@@730  (and (=> (= (ControlFlow 0 79) 78) $generated@@704) (=> (= (ControlFlow 0 79) 54) $generated@@729))))
(let (($generated@@731 true))
(let (($generated@@732  (=> (and ($generated@@152 $generated@@649) ($generated@@673 $generated@@649)) (=> (and (and (and (and (and (not false) (<= 0 $generated@@651)) (<= 0 $generated@@645)) (=> $generated@@654 true)) (and (and (=> $generated@@654 (<= $generated@@650 $generated@@651)) (=> $generated@@654 (<= $generated@@651 $generated@@645))) (and (=> $generated@@654 (< $generated@@645 $generated@@647)) (=> $generated@@654 true)))) (and (and (and (=> $generated@@654 (forall (($generated@@733 Int) ) (!  (=> true (=> (and (<= $generated@@650 $generated@@733) (< $generated@@733 $generated@@651)) (<= ($generated ($generated@@331 $generated@@2 ($generated@@87 ($generated@@85 $generated@@649 $generated@@648) ($generated@@378 $generated@@733)))) $generated@@652)))
 :pattern ( ($generated@@331 $generated@@2 ($generated@@87 ($generated@@85 $generated@@649 $generated@@648) ($generated@@378 $generated@@733))))
))) (=> $generated@@654 true)) (and (=> $generated@@654 (forall (($generated@@734 Int) ) (!  (=> true (=> (and (<= $generated@@645 $generated@@734) (< $generated@@734 $generated@@647)) (<= $generated@@652 ($generated ($generated@@331 $generated@@2 ($generated@@87 ($generated@@85 $generated@@649 $generated@@648) ($generated@@378 $generated@@734)))))))
 :pattern ( ($generated@@331 $generated@@2 ($generated@@87 ($generated@@85 $generated@@649 $generated@@648) ($generated@@378 $generated@@734))))
))) (forall (($generated@@735 T@U) ) (!  (=> (= (type $generated@@735) $generated@@81) (=> (and (not (= $generated@@735 $generated@@138)) ($generated@@0 ($generated@@87 ($generated@@85 $generated@@657 $generated@@735) $generated@@60))) (or (= ($generated@@85 $generated@@649 $generated@@735) ($generated@@85 $generated@@674 $generated@@735)) (= $generated@@735 $generated@@648))))
 :pattern ( ($generated@@85 $generated@@649 $generated@@735))
)))) (and (and ($generated@@145 $generated@@674 $generated@@649) (forall (($generated@@736 T@U) ($generated@@737 T@U) ) (! (let (($generated@@738 ($generated@@70 (type $generated@@737))))
 (=> (and (and (= (type $generated@@736) $generated@@81) (= (type $generated@@737) ($generated@@69 $generated@@738))) (and (not (= $generated@@736 $generated@@138)) ($generated@@0 ($generated@@87 ($generated@@85 $generated@@674 $generated@@736) $generated@@60)))) (or (= ($generated@@87 ($generated@@85 $generated@@649 $generated@@736) $generated@@737) ($generated@@87 ($generated@@85 $generated@@674 $generated@@736) $generated@@737)) ($generated@@0 ($generated@@519 $generated@@666 $generated@@736 $generated@@737)))))
 :pattern ( ($generated@@87 ($generated@@85 $generated@@649 $generated@@736) $generated@@737))
))) (and (<= (- $generated@@645 $generated@@651) $generated@@675) (=> (= (- $generated@@645 $generated@@651) $generated@@675) true))))) (and (=> (= (ControlFlow 0 80) 1) $generated@@731) (=> (= (ControlFlow 0 80) 79) $generated@@730))))))
(let (($generated@@739  (=> (= $generated@@666 ($generated@@520 $generated@@138 $generated@@657 $generated@@60 $generated@@648)) (and (=> (= (ControlFlow 0 81) (- 0 99)) (not (= $generated@@648 $generated@@138))) (=> (not (= $generated@@648 $generated@@138)) (and (=> (= (ControlFlow 0 81) (- 0 98)) (and (<= 0 $generated@@650) (< $generated@@650 ($generated@@136 $generated@@648)))) (=> (and (<= 0 $generated@@650) (< $generated@@650 ($generated@@136 $generated@@648))) (=> (and (= $generated@@652 ($generated ($generated@@331 $generated@@2 ($generated@@87 ($generated@@85 $generated@@657 $generated@@648) ($generated@@378 $generated@@650))))) (= $generated@@676 (- $generated@@647 1))) (and (=> (= (ControlFlow 0 81) (- 0 97)) (not (= $generated@@648 $generated@@138))) (=> (not (= $generated@@648 $generated@@138)) (and (=> (= (ControlFlow 0 81) (- 0 96)) (and (<= 0 $generated@@650) (< $generated@@650 ($generated@@136 $generated@@648)))) (=> (and (<= 0 $generated@@650) (< $generated@@650 ($generated@@136 $generated@@648))) (=> (= $generated@@677 ($generated@@378 $generated@@650)) (and (=> (= (ControlFlow 0 81) (- 0 95)) ($generated@@0 ($generated@@519 $generated@@666 $generated@@648 $generated@@677))) (=> ($generated@@0 ($generated@@519 $generated@@666 $generated@@648 $generated@@677)) (and (=> (= (ControlFlow 0 81) (- 0 94)) (not (= $generated@@648 $generated@@138))) (=> (not (= $generated@@648 $generated@@138)) (and (=> (= (ControlFlow 0 81) (- 0 93)) (and (<= 0 $generated@@676) (< $generated@@676 ($generated@@136 $generated@@648)))) (=> (and (<= 0 $generated@@676) (< $generated@@676 ($generated@@136 $generated@@648))) (=> (= $generated@@678 ($generated@@378 $generated@@676)) (and (=> (= (ControlFlow 0 81) (- 0 92)) ($generated@@0 ($generated@@519 $generated@@666 $generated@@648 $generated@@678))) (=> ($generated@@0 ($generated@@519 $generated@@666 $generated@@648 $generated@@678)) (and (=> (= (ControlFlow 0 81) (- 0 91)) (not (= $generated@@648 $generated@@138))) (=> (not (= $generated@@648 $generated@@138)) (and (=> (= (ControlFlow 0 81) (- 0 90)) (and (<= 0 $generated@@676) (< $generated@@676 ($generated@@136 $generated@@648)))) (=> (and (<= 0 $generated@@676) (< $generated@@676 ($generated@@136 $generated@@648))) (=> (= $generated@@679 ($generated ($generated@@331 $generated@@2 ($generated@@87 ($generated@@85 $generated@@657 $generated@@648) ($generated@@378 $generated@@676))))) (and (=> (= (ControlFlow 0 81) (- 0 89)) (not (= $generated@@648 $generated@@138))) (=> (not (= $generated@@648 $generated@@138)) (and (=> (= (ControlFlow 0 81) (- 0 88)) (and (<= 0 $generated@@650) (< $generated@@650 ($generated@@136 $generated@@648)))) (=> (and (<= 0 $generated@@650) (< $generated@@650 ($generated@@136 $generated@@648))) (=> (= $generated@@680 ($generated ($generated@@331 $generated@@2 ($generated@@87 ($generated@@85 $generated@@657 $generated@@648) ($generated@@378 $generated@@650))))) (and (=> (= (ControlFlow 0 81) (- 0 87)) (or (or (not (= $generated@@648 $generated@@648)) (not (= $generated@@676 $generated@@650))) (= ($generated@@231 ($generated@@8 $generated@@680)) ($generated@@231 ($generated@@8 $generated@@679))))) (=> (or (or (not (= $generated@@648 $generated@@648)) (not (= $generated@@676 $generated@@650))) (= ($generated@@231 ($generated@@8 $generated@@680)) ($generated@@231 ($generated@@8 $generated@@679)))) (=> (= $generated@@681 ($generated@@86 $generated@@657 $generated@@648 ($generated@@88 ($generated@@85 $generated@@657 $generated@@648) $generated@@677 ($generated@@231 ($generated@@8 $generated@@679))))) (=> (and (and ($generated@@152 $generated@@681) (= $generated@@674 ($generated@@86 $generated@@681 $generated@@648 ($generated@@88 ($generated@@85 $generated@@681 $generated@@648) $generated@@678 ($generated@@231 ($generated@@8 $generated@@680)))))) (and ($generated@@152 $generated@@674) (= $generated@@675 (- $generated@@676 $generated@@650)))) (and (=> (= (ControlFlow 0 81) (- 0 86)) (=> $generated@@654 (<= $generated@@650 $generated@@650))) (=> (=> $generated@@654 (<= $generated@@650 $generated@@650)) (and (=> (= (ControlFlow 0 81) (- 0 85)) (=> $generated@@654 (<= $generated@@650 $generated@@676))) (=> (=> $generated@@654 (<= $generated@@650 $generated@@676)) (and (=> (= (ControlFlow 0 81) (- 0 84)) (=> $generated@@654 (< $generated@@676 $generated@@647))) (=> (=> $generated@@654 (< $generated@@676 $generated@@647)) (and (=> (= (ControlFlow 0 81) (- 0 83)) (=> $generated@@654 (forall (($generated@@740 Int) ) (!  (=> true (=> (and (<= $generated@@650 $generated@@740) (< $generated@@740 $generated@@650)) (<= ($generated ($generated@@331 $generated@@2 ($generated@@87 ($generated@@85 $generated@@674 $generated@@648) ($generated@@378 $generated@@740)))) $generated@@652)))
 :pattern ( ($generated@@331 $generated@@2 ($generated@@87 ($generated@@85 $generated@@674 $generated@@648) ($generated@@378 $generated@@740))))
)))) (=> (=> $generated@@654 (forall (($generated@@741 Int) ) (!  (=> true (=> (and (<= $generated@@650 $generated@@741) (< $generated@@741 $generated@@650)) (<= ($generated ($generated@@331 $generated@@2 ($generated@@87 ($generated@@85 $generated@@674 $generated@@648) ($generated@@378 $generated@@741)))) $generated@@652)))
 :pattern ( ($generated@@331 $generated@@2 ($generated@@87 ($generated@@85 $generated@@674 $generated@@648) ($generated@@378 $generated@@741))))
))) (and (=> (= (ControlFlow 0 81) (- 0 82)) (=> $generated@@654 (forall (($generated@@742 Int) ) (!  (=> true (=> (and (<= $generated@@676 $generated@@742) (< $generated@@742 $generated@@647)) (<= $generated@@652 ($generated ($generated@@331 $generated@@2 ($generated@@87 ($generated@@85 $generated@@674 $generated@@648) ($generated@@378 $generated@@742)))))))
 :pattern ( ($generated@@331 $generated@@2 ($generated@@87 ($generated@@85 $generated@@674 $generated@@648) ($generated@@378 $generated@@742))))
)))) (=> (=> $generated@@654 (forall (($generated@@743 Int) ) (!  (=> true (=> (and (<= $generated@@676 $generated@@743) (< $generated@@743 $generated@@647)) (<= $generated@@652 ($generated ($generated@@331 $generated@@2 ($generated@@87 ($generated@@85 $generated@@674 $generated@@648) ($generated@@378 $generated@@743)))))))
 :pattern ( ($generated@@331 $generated@@2 ($generated@@87 ($generated@@85 $generated@@674 $generated@@648) ($generated@@378 $generated@@743))))
))) (=> (= (ControlFlow 0 81) 80) $generated@@732)))))))))))))))))))))))))))))))))))))))))))))))
(let (($generated@@744  (=> (and ($generated@@152 $generated@@657) ($generated@@673 $generated@@657)) (=> (and (and (and ($generated@@140 $generated@@648 ($generated@@157 $generated@@46)) ($generated@@78 $generated@@648 ($generated@@157 $generated@@46) $generated@@657)) (and (= 1 $generated@@682) (= $generated@@683 ($generated@@136 $generated@@648)))) (and (and (<= ($generated@@203 0) $generated@@650) (<= (+ $generated@@650 2) $generated@@647)) (and (<= $generated@@647 $generated@@683) (= (ControlFlow 0 100) 81)))) $generated@@739))))
$generated@@744)))))))))))))))))))))))))))))))))))))))))
))
(check-sat)
(pop 1)
; Valid
(get-info :rlimit)
(reset)
(set-option :rlimit 0)
; did a full reset
(reset)
(set-option :print-success false)
(set-info :smt-lib-version 2.6)
(set-option :auto_config false)
(set-option :type_check true)
(set-option :smt.case_split 3)
(set-option :smt.qi.eager_threshold 100)
(set-option :smt.delay_units true)
(set-option :smt.arith.solver 2)
(set-option :smt.mbqi false)
(set-option :model.compact false)
(set-option :model.v2 true)
(set-option :pp.bv_literals false)
; done setting options


(set-info :category "industrial")
(declare-sort |T@U| 0)
(declare-sort |T@T| 0)
(declare-fun real_pow (Real Real) Real)
(declare-fun UOrdering2 (|T@U| |T@U|) Bool)
(declare-fun UOrdering3 (|T@T| |T@U| |T@U|) Bool)
(declare-fun tickleBool (Bool) Bool)
(assert (and (tickleBool true) (tickleBool false)))
(declare-fun $generated (T@U) Int)
(declare-fun $generated@@0 (T@U) Bool)
(declare-fun $generated@@1 (T@T) Int)
(declare-fun $generated@@2 () T@T)
(declare-fun $generated@@3 () T@T)
(declare-fun $generated@@4 () T@T)
(declare-fun $generated@@5 () T@T)
(declare-fun $generated@@6 () T@T)
(declare-fun $generated@@7 () T@T)
(declare-fun $generated@@8 (Int) T@U)
(declare-fun type (T@U) T@T)
(declare-fun $generated@@9 (Real) T@U)
(declare-fun $generated@@10 (T@U) Real)
(declare-fun $generated@@11 (Bool) T@U)
(declare-fun $generated@@12 (RoundingMode) T@U)
(declare-fun $generated@@13 (T@U) RoundingMode)
(declare-fun $generated@@14 (String) T@U)
(declare-fun $generated@@15 (T@U) String)
(declare-fun $generated@@16 ((RegEx String)) T@U)
(declare-fun $generated@@17 (T@U) (RegEx String))
(declare-fun $generated@@44 (T@U T@U) Bool)
(declare-fun $generated@@45 (T@T T@T) T@T)
(declare-fun $generated@@46 () T@T)
(declare-fun $generated@@47 () T@T)
(declare-fun $generated@@48 (T@U T@U) T@U)
(declare-fun $generated@@49 (T@U T@U) T@U)
(declare-fun $generated@@50 () T@U)
(declare-fun $generated@@51 (T@T) T@T)
(declare-fun $generated@@52 (T@T) T@T)
(declare-fun $generated@@53 (T@U T@U T@U) T@U)
(declare-fun $generated@@54 (T@T) T@T)
(declare-fun $generated@@55 (T@T) T@T)
(declare-fun $generated@@56 (T@U T@U T@U) T@U)
(declare-fun $generated@@106 (T@U T@U T@U) T@U)
(declare-fun $generated@@107 (T@U T@U T@U Bool) T@U)
(declare-fun $generated@@108 (T@T T@T) T@T)
(declare-fun $generated@@109 (T@T) T@T)
(declare-fun $generated@@110 (T@T) T@T)
(declare-fun $generated@@111 (T@U T@U T@U T@U) T@U)
(declare-fun $generated@@162 (Int) Int)
(declare-fun $generated@@164 (T@U) T@U)
(declare-fun $generated@@171 (T@U) T@U)
(declare-fun $generated@@172 (T@T T@U) T@U)
(declare-fun $generated@@173 () T@T)
(assert  (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (= ($generated@@1 $generated@@2) 0) (= ($generated@@1 $generated@@3) 1)) (= ($generated@@1 $generated@@4) 2)) (= ($generated@@1 $generated@@5) 3)) (= ($generated@@1 $generated@@6) 4)) (= ($generated@@1 $generated@@7) 5)) (forall (($generated@@18 Int) ) (! (= ($generated ($generated@@8 $generated@@18)) $generated@@18)
 :pattern ( ($generated@@8 $generated@@18))
))) (forall (($generated@@19 T@U) ) (!  (=> (= (type $generated@@19) $generated@@2) (= ($generated@@8 ($generated $generated@@19)) $generated@@19))
 :pattern ( ($generated $generated@@19))
))) (forall (($generated@@20 Int) ) (! (= (type ($generated@@8 $generated@@20)) $generated@@2)
 :pattern ( ($generated@@8 $generated@@20))
))) (forall (($generated@@21 Real) ) (! (= ($generated@@10 ($generated@@9 $generated@@21)) $generated@@21)
 :pattern ( ($generated@@9 $generated@@21))
))) (forall (($generated@@22 T@U) ) (!  (=> (= (type $generated@@22) $generated@@3) (= ($generated@@9 ($generated@@10 $generated@@22)) $generated@@22))
 :pattern ( ($generated@@10 $generated@@22))
))) (forall (($generated@@23 Real) ) (! (= (type ($generated@@9 $generated@@23)) $generated@@3)
 :pattern ( ($generated@@9 $generated@@23))
))) (forall (($generated@@24 Bool) ) (! (= ($generated@@0 ($generated@@11 $generated@@24)) $generated@@24)
 :pattern ( ($generated@@11 $generated@@24))
))) (forall (($generated@@25 T@U) ) (!  (=> (= (type $generated@@25) $generated@@4) (= ($generated@@11 ($generated@@0 $generated@@25)) $generated@@25))
 :pattern ( ($generated@@0 $generated@@25))
))) (forall (($generated@@26 Bool) ) (! (= (type ($generated@@11 $generated@@26)) $generated@@4)
 :pattern ( ($generated@@11 $generated@@26))
))) (forall (($generated@@27 RoundingMode) ) (! (= ($generated@@13 ($generated@@12 $generated@@27)) $generated@@27)
 :pattern ( ($generated@@12 $generated@@27))
))) (forall (($generated@@28 T@U) ) (!  (=> (= (type $generated@@28) $generated@@5) (= ($generated@@12 ($generated@@13 $generated@@28)) $generated@@28))
 :pattern ( ($generated@@13 $generated@@28))
))) (forall (($generated@@29 RoundingMode) ) (! (= (type ($generated@@12 $generated@@29)) $generated@@5)
 :pattern ( ($generated@@12 $generated@@29))
))) (forall (($generated@@30 String) ) (! (= ($generated@@15 ($generated@@14 $generated@@30)) $generated@@30)
 :pattern ( ($generated@@14 $generated@@30))
))) (forall (($generated@@31 T@U) ) (!  (=> (= (type $generated@@31) $generated@@6) (= ($generated@@14 ($generated@@15 $generated@@31)) $generated@@31))
 :pattern ( ($generated@@15 $generated@@31))
))) (forall (($generated@@32 String) ) (! (= (type ($generated@@14 $generated@@32)) $generated@@6)
 :pattern ( ($generated@@14 $generated@@32))
))) (forall (($generated@@33 (RegEx String)) ) (! (= ($generated@@17 ($generated@@16 $generated@@33)) $generated@@33)
 :pattern ( ($generated@@16 $generated@@33))
))) (forall (($generated@@34 T@U) ) (!  (=> (= (type $generated@@34) $generated@@7) (= ($generated@@16 ($generated@@17 $generated@@34)) $generated@@34))
 :pattern ( ($generated@@17 $generated@@34))
))) (forall (($generated@@35 (RegEx String)) ) (! (= (type ($generated@@16 $generated@@35)) $generated@@7)
 :pattern ( ($generated@@16 $generated@@35))
))))
(assert (forall (($generated@@36 T@U) ) (! (UOrdering2 $generated@@36 $generated@@36)
 :no-pattern ($generated $generated@@36)
 :no-pattern ($generated@@0 $generated@@36)
)))
(assert (forall (($generated@@37 T@U) ($generated@@38 T@U) ($generated@@39 T@U) ) (! (let (($generated@@40 (type $generated@@37)))
 (=> (and (and (= (type $generated@@38) $generated@@40) (= (type $generated@@39) $generated@@40)) (and (UOrdering2 $generated@@37 $generated@@38) (UOrdering2 $generated@@38 $generated@@39))) (UOrdering2 $generated@@37 $generated@@39)))
 :pattern ( (UOrdering2 $generated@@37 $generated@@38) (UOrdering2 $generated@@38 $generated@@39))
)))
(assert (forall (($generated@@41 T@U) ($generated@@42 T@U) ) (! (let (($generated@@43 (type $generated@@41)))
 (=> (= (type $generated@@42) $generated@@43) (=> (and (UOrdering2 $generated@@41 $generated@@42) (UOrdering2 $generated@@42 $generated@@41)) (= $generated@@41 $generated@@42))))
 :pattern ( (UOrdering2 $generated@@41 $generated@@42) (UOrdering2 $generated@@42 $generated@@41))
)))
(assert  (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (forall (($generated@@57 T@T) ($generated@@58 T@T) ) (= ($generated@@1 ($generated@@45 $generated@@57 $generated@@58)) 6)) (forall (($generated@@59 T@T) ($generated@@60 T@T) ) (! (= ($generated@@51 ($generated@@45 $generated@@59 $generated@@60)) $generated@@59)
 :pattern ( ($generated@@45 $generated@@59 $generated@@60))
))) (forall (($generated@@61 T@T) ($generated@@62 T@T) ) (! (= ($generated@@52 ($generated@@45 $generated@@61 $generated@@62)) $generated@@62)
 :pattern ( ($generated@@45 $generated@@61 $generated@@62))
))) (forall (($generated@@63 T@U) ($generated@@64 T@U) ) (! (let (($generated@@65 ($generated@@52 (type $generated@@63))))
(= (type ($generated@@49 $generated@@63 $generated@@64)) $generated@@65))
 :pattern ( ($generated@@49 $generated@@63 $generated@@64))
))) (forall (($generated@@66 T@U) ($generated@@67 T@U) ($generated@@68 T@U) ) (! (let (($generated@@69 (type $generated@@68)))
(let (($generated@@70 (type $generated@@67)))
(= (type ($generated@@53 $generated@@66 $generated@@67 $generated@@68)) ($generated@@45 $generated@@70 $generated@@69))))
 :pattern ( ($generated@@53 $generated@@66 $generated@@67 $generated@@68))
))) (forall (($generated@@71 T@U) ($generated@@72 T@U) ($generated@@73 T@U) ) (! (let (($generated@@74 ($generated@@52 (type $generated@@71))))
 (=> (= (type $generated@@73) $generated@@74) (= ($generated@@49 ($generated@@53 $generated@@71 $generated@@72 $generated@@73) $generated@@72) $generated@@73)))
 :weight 0
))) (and (forall (($generated@@75 T@U) ($generated@@76 T@U) ($generated@@77 T@U) ($generated@@78 T@U) ) (!  (or (= $generated@@77 $generated@@78) (= ($generated@@49 ($generated@@53 $generated@@76 $generated@@77 $generated@@75) $generated@@78) ($generated@@49 $generated@@76 $generated@@78)))
 :weight 0
)) (forall (($generated@@79 T@U) ($generated@@80 T@U) ($generated@@81 T@U) ($generated@@82 T@U) ) (!  (or true (= ($generated@@49 ($generated@@53 $generated@@80 $generated@@81 $generated@@79) $generated@@82) ($generated@@49 $generated@@80 $generated@@82)))
 :weight 0
)))) (= ($generated@@1 $generated@@46) 7)) (forall (($generated@@83 T@T) ) (= ($generated@@1 ($generated@@54 $generated@@83)) 8))) (forall (($generated@@84 T@T) ) (! (= ($generated@@55 ($generated@@54 $generated@@84)) $generated@@84)
 :pattern ( ($generated@@54 $generated@@84))
))) (forall (($generated@@85 T@U) ($generated@@86 T@U) ) (! (let (($generated@@87 ($generated@@55 (type $generated@@86))))
(= (type ($generated@@48 $generated@@85 $generated@@86)) $generated@@87))
 :pattern ( ($generated@@48 $generated@@85 $generated@@86))
))) (= ($generated@@1 $generated@@47) 9)) (forall (($generated@@88 T@U) ($generated@@89 T@U) ($generated@@90 T@U) ) (! (= (type ($generated@@56 $generated@@88 $generated@@89 $generated@@90)) $generated@@47)
 :pattern ( ($generated@@56 $generated@@88 $generated@@89 $generated@@90))
))) (forall (($generated@@91 T@U) ($generated@@92 T@U) ($generated@@93 T@U) ) (! (let (($generated@@94 ($generated@@55 (type $generated@@92))))
 (=> (= (type $generated@@93) $generated@@94) (= ($generated@@48 ($generated@@56 $generated@@91 $generated@@92 $generated@@93) $generated@@92) $generated@@93)))
 :weight 0
))) (and (forall (($generated@@95 T@U) ($generated@@96 T@U) ($generated@@97 T@U) ($generated@@98 T@U) ) (!  (or (= $generated@@97 $generated@@98) (= ($generated@@48 ($generated@@56 $generated@@96 $generated@@97 $generated@@95) $generated@@98) ($generated@@48 $generated@@96 $generated@@98)))
 :weight 0
)) (forall (($generated@@99 T@U) ($generated@@100 T@U) ($generated@@101 T@U) ($generated@@102 T@U) ) (!  (or true (= ($generated@@48 ($generated@@56 $generated@@100 $generated@@101 $generated@@99) $generated@@102) ($generated@@48 $generated@@100 $generated@@102)))
 :weight 0
)))) (= (type $generated@@50) ($generated@@54 $generated@@4))))
(assert (forall (($generated@@103 T@U) ($generated@@104 T@U) ) (!  (=> (and (and (= (type $generated@@103) ($generated@@45 $generated@@46 $generated@@47)) (= (type $generated@@104) ($generated@@45 $generated@@46 $generated@@47))) ($generated@@44 $generated@@103 $generated@@104)) (forall (($generated@@105 T@U) ) (!  (=> (and (= (type $generated@@105) $generated@@46) ($generated@@0 ($generated@@48 ($generated@@49 $generated@@103 $generated@@105) $generated@@50))) ($generated@@0 ($generated@@48 ($generated@@49 $generated@@104 $generated@@105) $generated@@50)))
 :pattern ( ($generated@@48 ($generated@@49 $generated@@104 $generated@@105) $generated@@50))
)))
 :pattern ( ($generated@@44 $generated@@103 $generated@@104))
)))
(assert  (and (and (and (and (and (and (and (forall (($generated@@112 T@T) ($generated@@113 T@T) ) (= ($generated@@1 ($generated@@108 $generated@@112 $generated@@113)) 10)) (forall (($generated@@114 T@T) ($generated@@115 T@T) ) (! (= ($generated@@109 ($generated@@108 $generated@@114 $generated@@115)) $generated@@114)
 :pattern ( ($generated@@108 $generated@@114 $generated@@115))
))) (forall (($generated@@116 T@T) ($generated@@117 T@T) ) (! (= ($generated@@110 ($generated@@108 $generated@@116 $generated@@117)) $generated@@117)
 :pattern ( ($generated@@108 $generated@@116 $generated@@117))
))) (forall (($generated@@118 T@U) ($generated@@119 T@U) ($generated@@120 T@U) ) (! (let (($generated@@121 ($generated@@110 (type $generated@@118))))
(= (type ($generated@@106 $generated@@118 $generated@@119 $generated@@120)) $generated@@121))
 :pattern ( ($generated@@106 $generated@@118 $generated@@119 $generated@@120))
))) (forall (($generated@@122 T@U) ($generated@@123 T@U) ($generated@@124 T@U) ($generated@@125 T@U) ) (! (let (($generated@@126 (type $generated@@125)))
(let (($generated@@127 (type $generated@@123)))
(= (type ($generated@@111 $generated@@122 $generated@@123 $generated@@124 $generated@@125)) ($generated@@108 $generated@@127 $generated@@126))))
 :pattern ( ($generated@@111 $generated@@122 $generated@@123 $generated@@124 $generated@@125))
))) (forall (($generated@@128 T@U) ($generated@@129 T@U) ($generated@@130 T@U) ($generated@@131 T@U) ) (! (let (($generated@@132 ($generated@@110 (type $generated@@128))))
 (=> (= (type $generated@@131) $generated@@132) (= ($generated@@106 ($generated@@111 $generated@@128 $generated@@129 $generated@@130 $generated@@131) $generated@@129 $generated@@130) $generated@@131)))
 :weight 0
))) (and (and (forall (($generated@@133 T@U) ($generated@@134 T@U) ($generated@@135 T@U) ($generated@@136 T@U) ($generated@@137 T@U) ($generated@@138 T@U) ) (!  (or (= $generated@@135 $generated@@137) (= ($generated@@106 ($generated@@111 $generated@@134 $generated@@135 $generated@@136 $generated@@133) $generated@@137 $generated@@138) ($generated@@106 $generated@@134 $generated@@137 $generated@@138)))
 :weight 0
)) (forall (($generated@@139 T@U) ($generated@@140 T@U) ($generated@@141 T@U) ($generated@@142 T@U) ($generated@@143 T@U) ($generated@@144 T@U) ) (!  (or (= $generated@@142 $generated@@144) (= ($generated@@106 ($generated@@111 $generated@@140 $generated@@141 $generated@@142 $generated@@139) $generated@@143 $generated@@144) ($generated@@106 $generated@@140 $generated@@143 $generated@@144)))
 :weight 0
))) (forall (($generated@@145 T@U) ($generated@@146 T@U) ($generated@@147 T@U) ($generated@@148 T@U) ($generated@@149 T@U) ($generated@@150 T@U) ) (!  (or true (= ($generated@@106 ($generated@@111 $generated@@146 $generated@@147 $generated@@148 $generated@@145) $generated@@149 $generated@@150) ($generated@@106 $generated@@146 $generated@@149 $generated@@150)))
 :weight 0
)))) (forall (($generated@@151 T@U) ($generated@@152 T@U) ($generated@@153 T@U) ($generated@@154 Bool) ) (! (= (type ($generated@@107 $generated@@151 $generated@@152 $generated@@153 $generated@@154)) ($generated@@108 $generated@@46 $generated@@4))
 :pattern ( ($generated@@107 $generated@@151 $generated@@152 $generated@@153 $generated@@154))
))))
(assert (forall (($generated@@155 T@U) ($generated@@156 T@U) ($generated@@157 T@U) ($generated@@158 Bool) ($generated@@159 T@U) ($generated@@160 T@U) ) (! (let (($generated@@161 ($generated@@55 (type $generated@@160))))
 (=> (and (and (and (and (= (type $generated@@155) $generated@@46) (= (type $generated@@156) ($generated@@45 $generated@@46 $generated@@47))) (= (type $generated@@157) ($generated@@54 $generated@@4))) (= (type $generated@@159) $generated@@46)) (= (type $generated@@160) ($generated@@54 $generated@@161))) (= ($generated@@0 ($generated@@106 ($generated@@107 $generated@@155 $generated@@156 $generated@@157 $generated@@158) $generated@@159 $generated@@160))  (=> (and (not (= $generated@@159 $generated@@155)) ($generated@@0 ($generated@@48 ($generated@@49 $generated@@156 $generated@@159) $generated@@157))) $generated@@158))))
 :pattern ( ($generated@@106 ($generated@@107 $generated@@155 $generated@@156 $generated@@157 $generated@@158) $generated@@159 $generated@@160))
)))
(assert (forall (($generated@@163 Int) ) (! (= ($generated@@162 $generated@@163) $generated@@163)
 :pattern ( ($generated@@162 $generated@@163))
)))
(assert (forall (($generated@@165 T@U) ) (! (let (($generated@@166 (type $generated@@165)))
(= (type ($generated@@164 $generated@@165)) $generated@@166))
 :pattern ( ($generated@@164 $generated@@165))
)))
(assert (forall (($generated@@167 T@U) ) (! (= ($generated@@164 $generated@@167) $generated@@167)
 :pattern ( ($generated@@164 $generated@@167))
)))
(assert (forall (($generated@@168 T@U) ($generated@@169 T@U) ($generated@@170 T@U) ) (!  (=> (and (and (and (and (= (type $generated@@168) ($generated@@45 $generated@@46 $generated@@47)) (= (type $generated@@169) ($generated@@45 $generated@@46 $generated@@47))) (= (type $generated@@170) ($generated@@45 $generated@@46 $generated@@47))) (not (= $generated@@168 $generated@@170))) (and ($generated@@44 $generated@@168 $generated@@169) ($generated@@44 $generated@@169 $generated@@170))) ($generated@@44 $generated@@168 $generated@@170))
 :pattern ( ($generated@@44 $generated@@168 $generated@@169) ($generated@@44 $generated@@169 $generated@@170))
)))
(assert  (and (and (= ($generated@@1 $generated@@173) 11) (forall (($generated@@174 T@U) ) (! (= (type ($generated@@171 $generated@@174)) $generated@@173)
 :pattern ( ($generated@@171 $generated@@174))
))) (forall (($generated@@175 T@T) ($generated@@176 T@U) ) (! (= (type ($generated@@172 $generated@@175 $generated@@176)) $generated@@175)
 :pattern ( ($generated@@172 $generated@@175 $generated@@176))
))))
(assert (forall (($generated@@177 T@U) ) (! (let (($generated@@178 (type $generated@@177)))
(= ($generated@@172 $generated@@178 ($generated@@171 $generated@@177)) $generated@@177))
 :pattern ( ($generated@@171 $generated@@177))
)))
(assert (forall (($generated@@179 Int) ) (! (= ($generated@@171 ($generated@@8 ($generated@@162 $generated@@179))) ($generated@@164 ($generated@@171 ($generated@@8 $generated@@179))))
 :pattern ( ($generated@@171 ($generated@@8 ($generated@@162 $generated@@179))))
)))
(assert (forall (($generated@@180 T@U) ) (! (= ($generated@@171 ($generated@@164 $generated@@180)) ($generated@@164 ($generated@@171 $generated@@180)))
 :pattern ( ($generated@@171 ($generated@@164 $generated@@180)))
)))
(push 1)
(declare-fun ControlFlow (Int Int) Int)
(declare-fun $generated@@181 () Int)
(declare-fun $generated@@182 () Bool)
(declare-fun $generated@@183 () Int)
(declare-fun $generated@@184 () Int)
(declare-fun $generated@@185 () Int)
(declare-fun $generated@@186 () Int)
(declare-fun $generated@@187 () Int)
(declare-fun $generated@@188 () T@U)
(declare-fun $generated@@189 () T@U)
(declare-fun $generated@@190 () T@U)
(declare-fun $generated@@191 () Int)
(declare-fun $generated@@192 () Int)
(declare-fun $generated@@193 (T@U) Bool)
(declare-fun $generated@@194 (T@U) Bool)
(declare-fun $generated@@195 () Int)
(assert  (and (and (= (type $generated@@188) ($generated@@45 $generated@@46 $generated@@47)) (= (type $generated@@189) $generated@@46)) (= (type $generated@@190) ($generated@@108 $generated@@46 $generated@@4))))
(set-option :timeout 0)
(set-option :rlimit 0)
(assert (not
 (=> (= (ControlFlow 0 0) 20) (let (($generated@@196 true))
(let (($generated@@197  (=> (and (< $generated@@181 ($generated@@162 0)) (= (ControlFlow 0 15) 13)) $generated@@196)))
(let (($generated@@198  (=> (and (<= ($generated@@162 0) $generated@@181) (= (ControlFlow 0 14) 13)) $generated@@196)))
(let (($generated@@199  (=> (not $generated@@182) (and (=> (= (ControlFlow 0 16) 14) $generated@@198) (=> (= (ControlFlow 0 16) 15) $generated@@197)))))
(let (($generated@@200  (and (=> (= (ControlFlow 0 7) (- 0 8)) (or (<= 0 $generated@@183) (= (ite (<= ($generated@@162 0) $generated@@184) $generated@@184 (- 0 $generated@@184)) $generated@@183))) (=> (or (<= 0 $generated@@183) (= (ite (<= ($generated@@162 0) $generated@@184) $generated@@184 (- 0 $generated@@184)) $generated@@183)) (=> (= (ControlFlow 0 7) (- 0 6)) (< (ite (<= ($generated@@162 0) $generated@@184) $generated@@184 (- 0 $generated@@184)) $generated@@183))))))
(let (($generated@@201  (=> (and (and (< 0 $generated@@181) (= $generated@@185 (- $generated@@181 1))) (and (= $generated@@184 $generated@@185) (= (ControlFlow 0 10) 7))) $generated@@200)))
(let (($generated@@202  (=> (and (and (< $generated@@181 0) (= $generated@@186 (+ $generated@@181 1))) (and (= $generated@@184 $generated@@186) (= (ControlFlow 0 9) 7))) $generated@@200)))
(let (($generated@@203  (=> (= (ControlFlow 0 3) (- 0 2)) (= $generated@@187 ($generated@@162 0)))))
(let (($generated@@204  (=> (and (and (<= 0 $generated@@181) (<= $generated@@181 0)) (and (= $generated@@187 $generated@@181) (= (ControlFlow 0 5) 3))) $generated@@203)))
(let (($generated@@205  (=> (and ($generated@@0 ($generated@@164 ($generated@@11 true))) (= $generated@@183 (ite (<= ($generated@@162 0) $generated@@181) $generated@@181 (- 0 $generated@@181)))) (and (and (=> (= (ControlFlow 0 11) 9) $generated@@202) (=> (= (ControlFlow 0 11) 10) $generated@@201)) (=> (= (ControlFlow 0 11) 5) $generated@@204)))))
(let (($generated@@206  (=> (not ($generated@@0 ($generated@@164 ($generated@@11 true)))) (=> (and (= $generated@@187 $generated@@181) (= (ControlFlow 0 4) 3)) $generated@@203))))
(let (($generated@@207  (=> $generated@@182 (and (=> (= (ControlFlow 0 12) 4) $generated@@206) (=> (= (ControlFlow 0 12) 11) $generated@@205)))))
(let (($generated@@208  (and (=> (= (ControlFlow 0 17) 16) $generated@@199) (=> (= (ControlFlow 0 17) 12) $generated@@207))))
(let (($generated@@209 true))
(let (($generated@@210  (=> (and (not false) (forall (($generated@@211 T@U) ) (!  (=> (= (type $generated@@211) $generated@@46) (=> (and (not (= $generated@@211 $generated@@189)) ($generated@@0 ($generated@@48 ($generated@@49 $generated@@188 $generated@@211) $generated@@50))) (= ($generated@@49 $generated@@188 $generated@@211) ($generated@@49 $generated@@188 $generated@@211))))
 :pattern ( ($generated@@49 $generated@@188 $generated@@211))
))) (=> (and (and ($generated@@44 $generated@@188 $generated@@188) (forall (($generated@@212 T@U) ($generated@@213 T@U) ) (! (let (($generated@@214 ($generated@@55 (type $generated@@213))))
 (=> (and (and (= (type $generated@@212) $generated@@46) (= (type $generated@@213) ($generated@@54 $generated@@214))) (and (not (= $generated@@212 $generated@@189)) ($generated@@0 ($generated@@48 ($generated@@49 $generated@@188 $generated@@212) $generated@@50)))) (or (= ($generated@@48 ($generated@@49 $generated@@188 $generated@@212) $generated@@213) ($generated@@48 ($generated@@49 $generated@@188 $generated@@212) $generated@@213)) ($generated@@0 ($generated@@106 $generated@@190 $generated@@212 $generated@@213)))))
 :pattern ( ($generated@@48 ($generated@@49 $generated@@188 $generated@@212) $generated@@213))
))) (and (<= (ite (<= ($generated@@162 0) $generated@@181) $generated@@181 (- 0 $generated@@181)) $generated@@191) (=> (= (ite (<= ($generated@@162 0) $generated@@181) $generated@@181 (- 0 $generated@@181)) $generated@@191) true))) (and (=> (= (ControlFlow 0 18) 1) $generated@@209) (=> (= (ControlFlow 0 18) 17) $generated@@208))))))
(let (($generated@@215  (=> (= $generated@@190 ($generated@@107 $generated@@189 $generated@@188 $generated@@50 false)) (=> (and (= $generated@@191 (ite (<= ($generated@@162 0) $generated@@192) $generated@@192 (- 0 $generated@@192))) (= (ControlFlow 0 19) 18)) $generated@@210))))
(let (($generated@@216  (=> (and (and ($generated@@193 $generated@@188) ($generated@@194 $generated@@188)) (and (= 0 $generated@@195) (= (ControlFlow 0 20) 19))) $generated@@215)))
$generated@@216))))))))))))))))))
))
(check-sat)
(pop 1)
; Valid
(get-info :rlimit)
(reset)
(set-option :rlimit 0)
; did a full reset
(reset)
(set-option :print-success false)
(set-info :smt-lib-version 2.6)
(set-option :auto_config false)
(set-option :type_check true)
(set-option :smt.case_split 3)
(set-option :smt.qi.eager_threshold 100)
(set-option :smt.delay_units true)
(set-option :smt.arith.solver 2)
(set-option :smt.mbqi false)
(set-option :model.compact false)
(set-option :model.v2 true)
(set-option :pp.bv_literals false)
; done setting options


(set-info :category "industrial")
(declare-sort |T@U| 0)
(declare-sort |T@T| 0)
(declare-fun real_pow (Real Real) Real)
(declare-fun UOrdering2 (|T@U| |T@U|) Bool)
(declare-fun UOrdering3 (|T@T| |T@U| |T@U|) Bool)
(declare-fun tickleBool (Bool) Bool)
(assert (and (tickleBool true) (tickleBool false)))
(declare-fun $generated (T@U) Int)
(declare-fun $generated@@0 (T@U) Bool)
(declare-fun $generated@@1 (T@T) Int)
(declare-fun $generated@@2 () T@T)
(declare-fun $generated@@3 () T@T)
(declare-fun $generated@@4 () T@T)
(declare-fun $generated@@5 () T@T)
(declare-fun $generated@@6 () T@T)
(declare-fun $generated@@7 () T@T)
(declare-fun $generated@@8 (Int) T@U)
(declare-fun type (T@U) T@T)
(declare-fun $generated@@9 (Real) T@U)
(declare-fun $generated@@10 (T@U) Real)
(declare-fun $generated@@11 (Bool) T@U)
(declare-fun $generated@@12 (RoundingMode) T@U)
(declare-fun $generated@@13 (T@U) RoundingMode)
(declare-fun $generated@@14 (String) T@U)
(declare-fun $generated@@15 (T@U) String)
(declare-fun $generated@@16 ((RegEx String)) T@U)
(declare-fun $generated@@17 (T@U) (RegEx String))
(declare-fun $generated@@44 (T@U T@U) Bool)
(declare-fun $generated@@45 (T@T T@T) T@T)
(declare-fun $generated@@46 () T@T)
(declare-fun $generated@@47 () T@T)
(declare-fun $generated@@48 (T@U T@U) T@U)
(declare-fun $generated@@49 (T@U T@U) T@U)
(declare-fun $generated@@50 () T@U)
(declare-fun $generated@@51 (T@T) T@T)
(declare-fun $generated@@52 (T@T) T@T)
(declare-fun $generated@@53 (T@U T@U T@U) T@U)
(declare-fun $generated@@54 (T@T) T@T)
(declare-fun $generated@@55 (T@T) T@T)
(declare-fun $generated@@56 (T@U T@U T@U) T@U)
(declare-fun $generated@@106 (T@U T@U T@U) T@U)
(declare-fun $generated@@107 (T@U T@U T@U Bool) T@U)
(declare-fun $generated@@108 (T@T T@T) T@T)
(declare-fun $generated@@109 (T@T) T@T)
(declare-fun $generated@@110 (T@T) T@T)
(declare-fun $generated@@111 (T@U T@U T@U T@U) T@U)
(declare-fun $generated@@162 (Int) Int)
(declare-fun $generated@@164 (T@U) T@U)
(declare-fun $generated@@171 (T@U) T@U)
(declare-fun $generated@@172 (T@T T@U) T@U)
(declare-fun $generated@@173 () T@T)
(declare-fun $generated@@179 (Int Int) Int)
(assert  (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (= ($generated@@1 $generated@@2) 0) (= ($generated@@1 $generated@@3) 1)) (= ($generated@@1 $generated@@4) 2)) (= ($generated@@1 $generated@@5) 3)) (= ($generated@@1 $generated@@6) 4)) (= ($generated@@1 $generated@@7) 5)) (forall (($generated@@18 Int) ) (! (= ($generated ($generated@@8 $generated@@18)) $generated@@18)
 :pattern ( ($generated@@8 $generated@@18))
))) (forall (($generated@@19 T@U) ) (!  (=> (= (type $generated@@19) $generated@@2) (= ($generated@@8 ($generated $generated@@19)) $generated@@19))
 :pattern ( ($generated $generated@@19))
))) (forall (($generated@@20 Int) ) (! (= (type ($generated@@8 $generated@@20)) $generated@@2)
 :pattern ( ($generated@@8 $generated@@20))
))) (forall (($generated@@21 Real) ) (! (= ($generated@@10 ($generated@@9 $generated@@21)) $generated@@21)
 :pattern ( ($generated@@9 $generated@@21))
))) (forall (($generated@@22 T@U) ) (!  (=> (= (type $generated@@22) $generated@@3) (= ($generated@@9 ($generated@@10 $generated@@22)) $generated@@22))
 :pattern ( ($generated@@10 $generated@@22))
))) (forall (($generated@@23 Real) ) (! (= (type ($generated@@9 $generated@@23)) $generated@@3)
 :pattern ( ($generated@@9 $generated@@23))
))) (forall (($generated@@24 Bool) ) (! (= ($generated@@0 ($generated@@11 $generated@@24)) $generated@@24)
 :pattern ( ($generated@@11 $generated@@24))
))) (forall (($generated@@25 T@U) ) (!  (=> (= (type $generated@@25) $generated@@4) (= ($generated@@11 ($generated@@0 $generated@@25)) $generated@@25))
 :pattern ( ($generated@@0 $generated@@25))
))) (forall (($generated@@26 Bool) ) (! (= (type ($generated@@11 $generated@@26)) $generated@@4)
 :pattern ( ($generated@@11 $generated@@26))
))) (forall (($generated@@27 RoundingMode) ) (! (= ($generated@@13 ($generated@@12 $generated@@27)) $generated@@27)
 :pattern ( ($generated@@12 $generated@@27))
))) (forall (($generated@@28 T@U) ) (!  (=> (= (type $generated@@28) $generated@@5) (= ($generated@@12 ($generated@@13 $generated@@28)) $generated@@28))
 :pattern ( ($generated@@13 $generated@@28))
))) (forall (($generated@@29 RoundingMode) ) (! (= (type ($generated@@12 $generated@@29)) $generated@@5)
 :pattern ( ($generated@@12 $generated@@29))
))) (forall (($generated@@30 String) ) (! (= ($generated@@15 ($generated@@14 $generated@@30)) $generated@@30)
 :pattern ( ($generated@@14 $generated@@30))
))) (forall (($generated@@31 T@U) ) (!  (=> (= (type $generated@@31) $generated@@6) (= ($generated@@14 ($generated@@15 $generated@@31)) $generated@@31))
 :pattern ( ($generated@@15 $generated@@31))
))) (forall (($generated@@32 String) ) (! (= (type ($generated@@14 $generated@@32)) $generated@@6)
 :pattern ( ($generated@@14 $generated@@32))
))) (forall (($generated@@33 (RegEx String)) ) (! (= ($generated@@17 ($generated@@16 $generated@@33)) $generated@@33)
 :pattern ( ($generated@@16 $generated@@33))
))) (forall (($generated@@34 T@U) ) (!  (=> (= (type $generated@@34) $generated@@7) (= ($generated@@16 ($generated@@17 $generated@@34)) $generated@@34))
 :pattern ( ($generated@@17 $generated@@34))
))) (forall (($generated@@35 (RegEx String)) ) (! (= (type ($generated@@16 $generated@@35)) $generated@@7)
 :pattern ( ($generated@@16 $generated@@35))
))))
(assert (forall (($generated@@36 T@U) ) (! (UOrdering2 $generated@@36 $generated@@36)
 :no-pattern ($generated $generated@@36)
 :no-pattern ($generated@@0 $generated@@36)
)))
(assert (forall (($generated@@37 T@U) ($generated@@38 T@U) ($generated@@39 T@U) ) (! (let (($generated@@40 (type $generated@@37)))
 (=> (and (and (= (type $generated@@38) $generated@@40) (= (type $generated@@39) $generated@@40)) (and (UOrdering2 $generated@@37 $generated@@38) (UOrdering2 $generated@@38 $generated@@39))) (UOrdering2 $generated@@37 $generated@@39)))
 :pattern ( (UOrdering2 $generated@@37 $generated@@38) (UOrdering2 $generated@@38 $generated@@39))
)))
(assert (forall (($generated@@41 T@U) ($generated@@42 T@U) ) (! (let (($generated@@43 (type $generated@@41)))
 (=> (= (type $generated@@42) $generated@@43) (=> (and (UOrdering2 $generated@@41 $generated@@42) (UOrdering2 $generated@@42 $generated@@41)) (= $generated@@41 $generated@@42))))
 :pattern ( (UOrdering2 $generated@@41 $generated@@42) (UOrdering2 $generated@@42 $generated@@41))
)))
(assert  (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (forall (($generated@@57 T@T) ($generated@@58 T@T) ) (= ($generated@@1 ($generated@@45 $generated@@57 $generated@@58)) 6)) (forall (($generated@@59 T@T) ($generated@@60 T@T) ) (! (= ($generated@@51 ($generated@@45 $generated@@59 $generated@@60)) $generated@@59)
 :pattern ( ($generated@@45 $generated@@59 $generated@@60))
))) (forall (($generated@@61 T@T) ($generated@@62 T@T) ) (! (= ($generated@@52 ($generated@@45 $generated@@61 $generated@@62)) $generated@@62)
 :pattern ( ($generated@@45 $generated@@61 $generated@@62))
))) (forall (($generated@@63 T@U) ($generated@@64 T@U) ) (! (let (($generated@@65 ($generated@@52 (type $generated@@63))))
(= (type ($generated@@49 $generated@@63 $generated@@64)) $generated@@65))
 :pattern ( ($generated@@49 $generated@@63 $generated@@64))
))) (forall (($generated@@66 T@U) ($generated@@67 T@U) ($generated@@68 T@U) ) (! (let (($generated@@69 (type $generated@@68)))
(let (($generated@@70 (type $generated@@67)))
(= (type ($generated@@53 $generated@@66 $generated@@67 $generated@@68)) ($generated@@45 $generated@@70 $generated@@69))))
 :pattern ( ($generated@@53 $generated@@66 $generated@@67 $generated@@68))
))) (forall (($generated@@71 T@U) ($generated@@72 T@U) ($generated@@73 T@U) ) (! (let (($generated@@74 ($generated@@52 (type $generated@@71))))
 (=> (= (type $generated@@73) $generated@@74) (= ($generated@@49 ($generated@@53 $generated@@71 $generated@@72 $generated@@73) $generated@@72) $generated@@73)))
 :weight 0
))) (and (forall (($generated@@75 T@U) ($generated@@76 T@U) ($generated@@77 T@U) ($generated@@78 T@U) ) (!  (or (= $generated@@77 $generated@@78) (= ($generated@@49 ($generated@@53 $generated@@76 $generated@@77 $generated@@75) $generated@@78) ($generated@@49 $generated@@76 $generated@@78)))
 :weight 0
)) (forall (($generated@@79 T@U) ($generated@@80 T@U) ($generated@@81 T@U) ($generated@@82 T@U) ) (!  (or true (= ($generated@@49 ($generated@@53 $generated@@80 $generated@@81 $generated@@79) $generated@@82) ($generated@@49 $generated@@80 $generated@@82)))
 :weight 0
)))) (= ($generated@@1 $generated@@46) 7)) (forall (($generated@@83 T@T) ) (= ($generated@@1 ($generated@@54 $generated@@83)) 8))) (forall (($generated@@84 T@T) ) (! (= ($generated@@55 ($generated@@54 $generated@@84)) $generated@@84)
 :pattern ( ($generated@@54 $generated@@84))
))) (forall (($generated@@85 T@U) ($generated@@86 T@U) ) (! (let (($generated@@87 ($generated@@55 (type $generated@@86))))
(= (type ($generated@@48 $generated@@85 $generated@@86)) $generated@@87))
 :pattern ( ($generated@@48 $generated@@85 $generated@@86))
))) (= ($generated@@1 $generated@@47) 9)) (forall (($generated@@88 T@U) ($generated@@89 T@U) ($generated@@90 T@U) ) (! (= (type ($generated@@56 $generated@@88 $generated@@89 $generated@@90)) $generated@@47)
 :pattern ( ($generated@@56 $generated@@88 $generated@@89 $generated@@90))
))) (forall (($generated@@91 T@U) ($generated@@92 T@U) ($generated@@93 T@U) ) (! (let (($generated@@94 ($generated@@55 (type $generated@@92))))
 (=> (= (type $generated@@93) $generated@@94) (= ($generated@@48 ($generated@@56 $generated@@91 $generated@@92 $generated@@93) $generated@@92) $generated@@93)))
 :weight 0
))) (and (forall (($generated@@95 T@U) ($generated@@96 T@U) ($generated@@97 T@U) ($generated@@98 T@U) ) (!  (or (= $generated@@97 $generated@@98) (= ($generated@@48 ($generated@@56 $generated@@96 $generated@@97 $generated@@95) $generated@@98) ($generated@@48 $generated@@96 $generated@@98)))
 :weight 0
)) (forall (($generated@@99 T@U) ($generated@@100 T@U) ($generated@@101 T@U) ($generated@@102 T@U) ) (!  (or true (= ($generated@@48 ($generated@@56 $generated@@100 $generated@@101 $generated@@99) $generated@@102) ($generated@@48 $generated@@100 $generated@@102)))
 :weight 0
)))) (= (type $generated@@50) ($generated@@54 $generated@@4))))
(assert (forall (($generated@@103 T@U) ($generated@@104 T@U) ) (!  (=> (and (and (= (type $generated@@103) ($generated@@45 $generated@@46 $generated@@47)) (= (type $generated@@104) ($generated@@45 $generated@@46 $generated@@47))) ($generated@@44 $generated@@103 $generated@@104)) (forall (($generated@@105 T@U) ) (!  (=> (and (= (type $generated@@105) $generated@@46) ($generated@@0 ($generated@@48 ($generated@@49 $generated@@103 $generated@@105) $generated@@50))) ($generated@@0 ($generated@@48 ($generated@@49 $generated@@104 $generated@@105) $generated@@50)))
 :pattern ( ($generated@@48 ($generated@@49 $generated@@104 $generated@@105) $generated@@50))
)))
 :pattern ( ($generated@@44 $generated@@103 $generated@@104))
)))
(assert  (and (and (and (and (and (and (and (forall (($generated@@112 T@T) ($generated@@113 T@T) ) (= ($generated@@1 ($generated@@108 $generated@@112 $generated@@113)) 10)) (forall (($generated@@114 T@T) ($generated@@115 T@T) ) (! (= ($generated@@109 ($generated@@108 $generated@@114 $generated@@115)) $generated@@114)
 :pattern ( ($generated@@108 $generated@@114 $generated@@115))
))) (forall (($generated@@116 T@T) ($generated@@117 T@T) ) (! (= ($generated@@110 ($generated@@108 $generated@@116 $generated@@117)) $generated@@117)
 :pattern ( ($generated@@108 $generated@@116 $generated@@117))
))) (forall (($generated@@118 T@U) ($generated@@119 T@U) ($generated@@120 T@U) ) (! (let (($generated@@121 ($generated@@110 (type $generated@@118))))
(= (type ($generated@@106 $generated@@118 $generated@@119 $generated@@120)) $generated@@121))
 :pattern ( ($generated@@106 $generated@@118 $generated@@119 $generated@@120))
))) (forall (($generated@@122 T@U) ($generated@@123 T@U) ($generated@@124 T@U) ($generated@@125 T@U) ) (! (let (($generated@@126 (type $generated@@125)))
(let (($generated@@127 (type $generated@@123)))
(= (type ($generated@@111 $generated@@122 $generated@@123 $generated@@124 $generated@@125)) ($generated@@108 $generated@@127 $generated@@126))))
 :pattern ( ($generated@@111 $generated@@122 $generated@@123 $generated@@124 $generated@@125))
))) (forall (($generated@@128 T@U) ($generated@@129 T@U) ($generated@@130 T@U) ($generated@@131 T@U) ) (! (let (($generated@@132 ($generated@@110 (type $generated@@128))))
 (=> (= (type $generated@@131) $generated@@132) (= ($generated@@106 ($generated@@111 $generated@@128 $generated@@129 $generated@@130 $generated@@131) $generated@@129 $generated@@130) $generated@@131)))
 :weight 0
))) (and (and (forall (($generated@@133 T@U) ($generated@@134 T@U) ($generated@@135 T@U) ($generated@@136 T@U) ($generated@@137 T@U) ($generated@@138 T@U) ) (!  (or (= $generated@@135 $generated@@137) (= ($generated@@106 ($generated@@111 $generated@@134 $generated@@135 $generated@@136 $generated@@133) $generated@@137 $generated@@138) ($generated@@106 $generated@@134 $generated@@137 $generated@@138)))
 :weight 0
)) (forall (($generated@@139 T@U) ($generated@@140 T@U) ($generated@@141 T@U) ($generated@@142 T@U) ($generated@@143 T@U) ($generated@@144 T@U) ) (!  (or (= $generated@@142 $generated@@144) (= ($generated@@106 ($generated@@111 $generated@@140 $generated@@141 $generated@@142 $generated@@139) $generated@@143 $generated@@144) ($generated@@106 $generated@@140 $generated@@143 $generated@@144)))
 :weight 0
))) (forall (($generated@@145 T@U) ($generated@@146 T@U) ($generated@@147 T@U) ($generated@@148 T@U) ($generated@@149 T@U) ($generated@@150 T@U) ) (!  (or true (= ($generated@@106 ($generated@@111 $generated@@146 $generated@@147 $generated@@148 $generated@@145) $generated@@149 $generated@@150) ($generated@@106 $generated@@146 $generated@@149 $generated@@150)))
 :weight 0
)))) (forall (($generated@@151 T@U) ($generated@@152 T@U) ($generated@@153 T@U) ($generated@@154 Bool) ) (! (= (type ($generated@@107 $generated@@151 $generated@@152 $generated@@153 $generated@@154)) ($generated@@108 $generated@@46 $generated@@4))
 :pattern ( ($generated@@107 $generated@@151 $generated@@152 $generated@@153 $generated@@154))
))))
(assert (forall (($generated@@155 T@U) ($generated@@156 T@U) ($generated@@157 T@U) ($generated@@158 Bool) ($generated@@159 T@U) ($generated@@160 T@U) ) (! (let (($generated@@161 ($generated@@55 (type $generated@@160))))
 (=> (and (and (and (and (= (type $generated@@155) $generated@@46) (= (type $generated@@156) ($generated@@45 $generated@@46 $generated@@47))) (= (type $generated@@157) ($generated@@54 $generated@@4))) (= (type $generated@@159) $generated@@46)) (= (type $generated@@160) ($generated@@54 $generated@@161))) (= ($generated@@0 ($generated@@106 ($generated@@107 $generated@@155 $generated@@156 $generated@@157 $generated@@158) $generated@@159 $generated@@160))  (=> (and (not (= $generated@@159 $generated@@155)) ($generated@@0 ($generated@@48 ($generated@@49 $generated@@156 $generated@@159) $generated@@157))) $generated@@158))))
 :pattern ( ($generated@@106 ($generated@@107 $generated@@155 $generated@@156 $generated@@157 $generated@@158) $generated@@159 $generated@@160))
)))
(assert (forall (($generated@@163 Int) ) (! (= ($generated@@162 $generated@@163) $generated@@163)
 :pattern ( ($generated@@162 $generated@@163))
)))
(assert (forall (($generated@@165 T@U) ) (! (let (($generated@@166 (type $generated@@165)))
(= (type ($generated@@164 $generated@@165)) $generated@@166))
 :pattern ( ($generated@@164 $generated@@165))
)))
(assert (forall (($generated@@167 T@U) ) (! (= ($generated@@164 $generated@@167) $generated@@167)
 :pattern ( ($generated@@164 $generated@@167))
)))
(assert (forall (($generated@@168 T@U) ($generated@@169 T@U) ($generated@@170 T@U) ) (!  (=> (and (and (and (and (= (type $generated@@168) ($generated@@45 $generated@@46 $generated@@47)) (= (type $generated@@169) ($generated@@45 $generated@@46 $generated@@47))) (= (type $generated@@170) ($generated@@45 $generated@@46 $generated@@47))) (not (= $generated@@168 $generated@@170))) (and ($generated@@44 $generated@@168 $generated@@169) ($generated@@44 $generated@@169 $generated@@170))) ($generated@@44 $generated@@168 $generated@@170))
 :pattern ( ($generated@@44 $generated@@168 $generated@@169) ($generated@@44 $generated@@169 $generated@@170))
)))
(assert  (and (and (= ($generated@@1 $generated@@173) 11) (forall (($generated@@174 T@U) ) (! (= (type ($generated@@171 $generated@@174)) $generated@@173)
 :pattern ( ($generated@@171 $generated@@174))
))) (forall (($generated@@175 T@T) ($generated@@176 T@U) ) (! (= (type ($generated@@172 $generated@@175 $generated@@176)) $generated@@175)
 :pattern ( ($generated@@172 $generated@@175 $generated@@176))
))))
(assert (forall (($generated@@177 T@U) ) (! (let (($generated@@178 (type $generated@@177)))
(= ($generated@@172 $generated@@178 ($generated@@171 $generated@@177)) $generated@@177))
 :pattern ( ($generated@@171 $generated@@177))
)))
(assert (forall (($generated@@180 Int) ($generated@@181 Int) ) (! (= ($generated@@179 $generated@@180 $generated@@181) (mod $generated@@180 $generated@@181))
 :pattern ( ($generated@@179 $generated@@180 $generated@@181))
)))
(assert (forall (($generated@@182 Int) ) (! (= ($generated@@171 ($generated@@8 ($generated@@162 $generated@@182))) ($generated@@164 ($generated@@171 ($generated@@8 $generated@@182))))
 :pattern ( ($generated@@171 ($generated@@8 ($generated@@162 $generated@@182))))
)))
(assert (forall (($generated@@183 T@U) ) (! (= ($generated@@171 ($generated@@164 $generated@@183)) ($generated@@164 ($generated@@171 $generated@@183)))
 :pattern ( ($generated@@171 ($generated@@164 $generated@@183)))
)))
(push 1)
(declare-fun ControlFlow (Int Int) Int)
(declare-fun $generated@@184 () Int)
(declare-fun $generated@@185 () Int)
(declare-fun $generated@@186 () Int)
(declare-fun $generated@@187 () Int)
(declare-fun $generated@@188 () Int)
(declare-fun $generated@@189 () Int)
(declare-fun $generated@@190 () Int)
(declare-fun $generated@@191 () Int)
(declare-fun $generated@@192 () Int)
(declare-fun $generated@@193 () Int)
(declare-fun $generated@@194 () Int)
(declare-fun $generated@@195 () Int)
(declare-fun $generated@@196 () Int)
(declare-fun $generated@@197 () Int)
(declare-fun $generated@@198 () Int)
(declare-fun $generated@@199 () Int)
(declare-fun $generated@@200 () Int)
(declare-fun $generated@@201 () Int)
(declare-fun $generated@@202 () Int)
(declare-fun $generated@@203 () Int)
(declare-fun $generated@@204 () Int)
(declare-fun $generated@@205 () Int)
(declare-fun $generated@@206 () Int)
(declare-fun $generated@@207 () Int)
(declare-fun $generated@@208 () Int)
(declare-fun $generated@@209 () Int)
(declare-fun $generated@@210 () Int)
(declare-fun $generated@@211 () Int)
(declare-fun $generated@@212 () Int)
(declare-fun $generated@@213 () Int)
(declare-fun $generated@@214 () Int)
(declare-fun $generated@@215 () Int)
(declare-fun $generated@@216 () Int)
(declare-fun $generated@@217 () Int)
(declare-fun $generated@@218 () Bool)
(declare-fun $generated@@219 () Bool)
(declare-fun $generated@@220 () Bool)
(declare-fun $generated@@221 () Int)
(declare-fun $generated@@222 () T@U)
(declare-fun $generated@@223 () T@U)
(declare-fun $generated@@224 () T@U)
(declare-fun $generated@@225 () Int)
(declare-fun $generated@@226 () Int)
(declare-fun $generated@@227 () Int)
(declare-fun $generated@@228 () Int)
(declare-fun $generated@@229 () Int)
(declare-fun $generated@@230 () Int)
(declare-fun $generated@@231 () Bool)
(declare-fun $generated@@232 () Int)
(declare-fun $generated@@233 () Int)
(declare-fun $generated@@234 () Int)
(declare-fun $generated@@235 () Int)
(declare-fun $generated@@236 () Int)
(declare-fun $generated@@237 () Int)
(declare-fun $generated@@238 () Int)
(declare-fun $generated@@239 (T@U) Bool)
(declare-fun $generated@@240 (T@U) Bool)
(declare-fun $generated@@241 () Int)
(assert  (and (and (= (type $generated@@222) ($generated@@45 $generated@@46 $generated@@47)) (= (type $generated@@223) $generated@@46)) (= (type $generated@@224) ($generated@@108 $generated@@46 $generated@@4))))
(set-option :timeout 0)
(set-option :rlimit 0)
(assert (not
 (=> (= (ControlFlow 0 0) 79) (let (($generated@@242  (and (=> (= (ControlFlow 0 63) (- 0 64)) (or (<= 0 $generated@@184) (= (- 10000 $generated@@185) $generated@@184))) (=> (or (<= 0 $generated@@184) (= (- 10000 $generated@@185) $generated@@184)) (=> (= (ControlFlow 0 63) (- 0 62)) (< (- 10000 $generated@@185) $generated@@184))))))
(let (($generated@@243 true))
(let (($generated@@244 true))
(let (($generated@@245  (and (=> (= (ControlFlow 0 35) (- 0 37)) (or (or (or (<= $generated@@186 $generated@@187) (= $generated@@188 ($generated@@162 15))) (= $generated@@189 ($generated@@162 21))) (= $generated@@190 ($generated@@162 4)))) (=> (or (or (or (<= $generated@@186 $generated@@187) (= $generated@@188 ($generated@@162 15))) (= $generated@@189 ($generated@@162 21))) (= $generated@@190 ($generated@@162 4))) (=> (= $generated@@191 (+ $generated@@192 1)) (and (=> (= (ControlFlow 0 35) (- 0 36)) (or (<= 0 $generated@@193) (= (- $generated@@194 $generated@@191) $generated@@193))) (=> (or (<= 0 $generated@@193) (= (- $generated@@194 $generated@@191) $generated@@193)) (=> (= (ControlFlow 0 35) (- 0 34)) (< (- $generated@@194 $generated@@191) $generated@@193)))))))))
(let (($generated@@246  (=> (and (or (or (<= $generated@@186 $generated@@187) (= $generated@@188 ($generated@@162 15))) (= $generated@@189 ($generated@@162 21))) (= (ControlFlow 0 39) 35)) $generated@@245)))
(let (($generated@@247  (=> (and (not (or (or (<= $generated@@186 $generated@@187) (= $generated@@188 ($generated@@162 15))) (= $generated@@189 ($generated@@162 21)))) (= (ControlFlow 0 38) 35)) $generated@@245)))
(let (($generated@@248  (=> (or (<= $generated@@186 $generated@@187) (= $generated@@188 ($generated@@162 15))) (and (=> (= (ControlFlow 0 41) 38) $generated@@247) (=> (= (ControlFlow 0 41) 39) $generated@@246)))))
(let (($generated@@249  (=> (not (or (<= $generated@@186 $generated@@187) (= $generated@@188 ($generated@@162 15)))) (and (=> (= (ControlFlow 0 40) 38) $generated@@247) (=> (= (ControlFlow 0 40) 39) $generated@@246)))))
(let (($generated@@250  (=> (<= $generated@@186 $generated@@187) (and (=> (= (ControlFlow 0 43) 40) $generated@@249) (=> (= (ControlFlow 0 43) 41) $generated@@248)))))
(let (($generated@@251  (=> (< $generated@@187 $generated@@186) (and (=> (= (ControlFlow 0 42) 40) $generated@@249) (=> (= (ControlFlow 0 42) 41) $generated@@248)))))
(let (($generated@@252  (=> (and (and (= $generated@@195 ($generated@@162 4)) (= $generated@@189 $generated@@196)) (and (= $generated@@190 $generated@@195) (= $generated@@188 $generated@@197))) (and (=> (= (ControlFlow 0 47) 42) $generated@@251) (=> (= (ControlFlow 0 47) 43) $generated@@250)))))
(let (($generated@@253  (=> (and (and (= $generated@@198 ($generated@@162 21)) (= $generated@@189 $generated@@198)) (and (= $generated@@190 $generated@@199) (= $generated@@188 $generated@@197))) (and (=> (= (ControlFlow 0 46) 42) $generated@@251) (=> (= (ControlFlow 0 46) 43) $generated@@250)))))
(let (($generated@@254  (=> (and (and (= $generated@@200 ($generated@@162 15)) (= $generated@@189 $generated@@196)) (and (= $generated@@190 $generated@@199) (= $generated@@188 $generated@@200))) (and (=> (= (ControlFlow 0 45) 42) $generated@@251) (=> (= (ControlFlow 0 45) 43) $generated@@250)))))
(let (($generated@@255  (=> (and (and (<= $generated@@186 $generated@@187) (= $generated@@189 $generated@@196)) (and (= $generated@@190 $generated@@199) (= $generated@@188 $generated@@197))) (and (=> (= (ControlFlow 0 44) 42) $generated@@251) (=> (= (ControlFlow 0 44) 43) $generated@@250)))))
(let (($generated@@256  (=> (= (ControlFlow 0 26) (- 0 25)) (or (or (<= $generated@@194 $generated@@192) (= $generated@@201 ($generated@@162 12))) (= $generated@@202 ($generated@@162 37))))))
(let (($generated@@257  (=> (and (or (<= $generated@@194 $generated@@192) (= $generated@@201 ($generated@@162 12))) (= (ControlFlow 0 28) 26)) $generated@@256)))
(let (($generated@@258  (=> (and (not (or (<= $generated@@194 $generated@@192) (= $generated@@201 ($generated@@162 12)))) (= (ControlFlow 0 27) 26)) $generated@@256)))
(let (($generated@@259  (=> (<= $generated@@194 $generated@@192) (and (=> (= (ControlFlow 0 30) 27) $generated@@258) (=> (= (ControlFlow 0 30) 28) $generated@@257)))))
(let (($generated@@260  (=> (< $generated@@192 $generated@@194) (and (=> (= (ControlFlow 0 29) 27) $generated@@258) (=> (= (ControlFlow 0 29) 28) $generated@@257)))))
(let (($generated@@261  (=> (= $generated@@203 ($generated@@162 37)) (=> (and (= $generated@@201 $generated@@204) (= $generated@@202 $generated@@203)) (and (=> (= (ControlFlow 0 33) 29) $generated@@260) (=> (= (ControlFlow 0 33) 30) $generated@@259))))))
(let (($generated@@262  (=> (= $generated@@205 ($generated@@162 12)) (=> (and (= $generated@@201 $generated@@205) (= $generated@@202 $generated@@199)) (and (=> (= (ControlFlow 0 32) 29) $generated@@260) (=> (= (ControlFlow 0 32) 30) $generated@@259))))))
(let (($generated@@263  (=> (<= $generated@@194 $generated@@192) (=> (and (= $generated@@201 $generated@@204) (= $generated@@202 $generated@@206)) (and (=> (= (ControlFlow 0 31) 29) $generated@@260) (=> (= (ControlFlow 0 31) 30) $generated@@259))))))
(let (($generated@@264  (=> (= $generated@@207 (+ $generated@@208 1)) (and (=> (= (ControlFlow 0 23) (- 0 24)) (or (<= 0 $generated@@209) (= (- $generated@@210 $generated@@207) $generated@@209))) (=> (or (<= 0 $generated@@209) (= (- $generated@@210 $generated@@207) $generated@@209)) (=> (= (ControlFlow 0 23) (- 0 22)) (< (- $generated@@210 $generated@@207) $generated@@209)))))))
(let (($generated@@265  (and (=> (= (ControlFlow 0 8) (- 0 10)) (or (or (<= $generated@@210 $generated@@208) (= $generated@@211 ($generated@@162 187))) (= $generated@@212 ($generated@@162 7)))) (=> (or (or (<= $generated@@210 $generated@@208) (= $generated@@211 ($generated@@162 187))) (= $generated@@212 ($generated@@162 7))) (=> (= $generated@@213 (+ $generated@@187 1)) (and (=> (= (ControlFlow 0 8) (- 0 9)) (or (<= 0 $generated@@214) (= (- $generated@@186 $generated@@213) $generated@@214))) (=> (or (<= 0 $generated@@214) (= (- $generated@@186 $generated@@213) $generated@@214)) (=> (= (ControlFlow 0 8) (- 0 7)) (< (- $generated@@186 $generated@@213) $generated@@214)))))))))
(let (($generated@@266  (=> (and (or (<= $generated@@210 $generated@@208) (= $generated@@211 ($generated@@162 187))) (= (ControlFlow 0 12) 8)) $generated@@265)))
(let (($generated@@267  (=> (and (not (or (<= $generated@@210 $generated@@208) (= $generated@@211 ($generated@@162 187)))) (= (ControlFlow 0 11) 8)) $generated@@265)))
(let (($generated@@268  (=> (<= $generated@@210 $generated@@208) (and (=> (= (ControlFlow 0 14) 11) $generated@@267) (=> (= (ControlFlow 0 14) 12) $generated@@266)))))
(let (($generated@@269  (=> (< $generated@@208 $generated@@210) (and (=> (= (ControlFlow 0 13) 11) $generated@@267) (=> (= (ControlFlow 0 13) 12) $generated@@266)))))
(let (($generated@@270  (=> (= $generated@@215 ($generated@@162 7)) (=> (and (= $generated@@212 $generated@@215) (= $generated@@211 $generated@@216)) (and (=> (= (ControlFlow 0 21) 13) $generated@@269) (=> (= (ControlFlow 0 21) 14) $generated@@268))))))
(let (($generated@@271  (=> (< $generated@@208 $generated@@210) (and (and (and (=> (= (ControlFlow 0 48) 47) $generated@@252) (=> (= (ControlFlow 0 48) 21) $generated@@270)) (=> (= (ControlFlow 0 48) 33) $generated@@261)) (=> (= (ControlFlow 0 48) 23) $generated@@264)))))
(let (($generated@@272  (=> (and (and (and (< $generated@@208 $generated@@210) (= ($generated@@179 $generated@@208 ($generated@@162 2)) ($generated@@162 0))) (= $generated@@217 ($generated@@162 187))) (and (= $generated@@212 $generated@@199) (= $generated@@211 $generated@@217))) (and (=> (= (ControlFlow 0 17) 13) $generated@@269) (=> (= (ControlFlow 0 17) 14) $generated@@268)))))
(let (($generated@@273  (=> (and (<= $generated@@210 $generated@@208) (= (ControlFlow 0 20) 17)) $generated@@272)))
(let (($generated@@274  (=> (< $generated@@208 $generated@@210) (and (=> (= (ControlFlow 0 18) (- 0 19)) (not (= ($generated@@162 2) 0))) (=> (not (= ($generated@@162 2) 0)) (=> (= (ControlFlow 0 18) 17) $generated@@272))))))
(let (($generated@@275  (=> (and (and (not (and (< $generated@@208 $generated@@210) (= ($generated@@179 $generated@@208 ($generated@@162 2)) ($generated@@162 0)))) (<= $generated@@210 $generated@@208)) (and (= $generated@@212 $generated@@199) (= $generated@@211 $generated@@216))) (and (=> (= (ControlFlow 0 16) 13) $generated@@269) (=> (= (ControlFlow 0 16) 14) $generated@@268)))))
(let (($generated@@276  (=> (and ($generated@@0 ($generated@@164 ($generated@@11 true))) (= $generated@@209 (- $generated@@210 $generated@@208))) (and (and (and (=> (= (ControlFlow 0 49) 48) $generated@@271) (=> (= (ControlFlow 0 49) 16) $generated@@275)) (=> (= (ControlFlow 0 49) 18) $generated@@274)) (=> (= (ControlFlow 0 49) 20) $generated@@273)))))
(let (($generated@@277  (=> (not ($generated@@0 ($generated@@164 ($generated@@11 true)))) (=> (and (= $generated@@212 $generated@@199) (= $generated@@211 $generated@@216)) (and (=> (= (ControlFlow 0 15) 13) $generated@@269) (=> (= (ControlFlow 0 15) 14) $generated@@268))))))
(let (($generated@@278  (=> $generated@@218 (and (=> (= (ControlFlow 0 50) 15) $generated@@277) (=> (= (ControlFlow 0 50) 49) $generated@@276)))))
(let (($generated@@279 true))
(let (($generated@@280  (and (=> (= (ControlFlow 0 51) 6) $generated@@279) (=> (= (ControlFlow 0 51) 50) $generated@@278))))
(let (($generated@@281 true))
(let (($generated@@282  (=> (and (and (and (and (and (and (and (and (not false) (<= 0 $generated@@192)) $generated@@219) (<= 0 $generated@@187)) $generated@@220) (= $generated@@221 1998)) (<= 0 $generated@@208)) (forall (($generated@@283 T@U) ) (!  (=> (= (type $generated@@283) $generated@@46) (=> (and (not (= $generated@@283 $generated@@223)) ($generated@@0 ($generated@@48 ($generated@@49 $generated@@222 $generated@@283) $generated@@50))) (= ($generated@@49 $generated@@222 $generated@@283) ($generated@@49 $generated@@222 $generated@@283))))
 :pattern ( ($generated@@49 $generated@@222 $generated@@283))
))) (and (and ($generated@@44 $generated@@222 $generated@@222) (forall (($generated@@284 T@U) ($generated@@285 T@U) ) (! (let (($generated@@286 ($generated@@55 (type $generated@@285))))
 (=> (and (and (= (type $generated@@284) $generated@@46) (= (type $generated@@285) ($generated@@54 $generated@@286))) (and (not (= $generated@@284 $generated@@223)) ($generated@@0 ($generated@@48 ($generated@@49 $generated@@222 $generated@@284) $generated@@50)))) (or (= ($generated@@48 ($generated@@49 $generated@@222 $generated@@284) $generated@@285) ($generated@@48 ($generated@@49 $generated@@222 $generated@@284) $generated@@285)) ($generated@@0 ($generated@@106 $generated@@224 $generated@@284 $generated@@285)))))
 :pattern ( ($generated@@48 ($generated@@49 $generated@@222 $generated@@284) $generated@@285))
))) (and (<= (- $generated@@210 $generated@@208) $generated@@225) (=> (= (- $generated@@210 $generated@@208) $generated@@225) true)))) (and (=> (= (ControlFlow 0 52) 5) $generated@@281) (=> (= (ControlFlow 0 52) 51) $generated@@280)))))
(let (($generated@@287  (and (=> (= (ControlFlow 0 53) (- 0 54)) (= $generated@@221 ($generated@@162 1998))) (=> (= $generated@@221 ($generated@@162 1998)) (=> (= $generated@@226 ($generated@@162 0)) (=> (and (= $generated@@225 (- $generated@@210 $generated@@226)) (= (ControlFlow 0 53) 52)) $generated@@282))))))
(let (($generated@@288  (=> (= $generated@@227 ($generated@@162 1998)) (=> (and (= $generated@@221 $generated@@227) (= (ControlFlow 0 61) 53)) $generated@@287))))
(let (($generated@@289  (=> (= $generated@@228 ($generated@@162 1998)) (=> (and (= $generated@@221 $generated@@228) (= (ControlFlow 0 60) 53)) $generated@@287))))
(let (($generated@@290  (=> (< $generated@@229 10000) (=> (and (= $generated@@184 (- 10000 $generated@@229)) (= $generated@@185 (+ $generated@@229 3))) (and (and (=> (= (ControlFlow 0 65) 60) $generated@@289) (=> (= (ControlFlow 0 65) 61) $generated@@288)) (=> (= (ControlFlow 0 65) 63) $generated@@242))))))
(let (($generated@@291  (=> (<= 10000 $generated@@229) (and (=> (= (ControlFlow 0 58) (- 0 59)) (<= ($generated@@162 10000) $generated@@229)) (=> (<= ($generated@@162 10000) $generated@@229) (=> (= $generated@@230 ($generated@@162 1998)) (=> (and (= $generated@@221 $generated@@230) (= (ControlFlow 0 58) 53)) $generated@@287)))))))
(let (($generated@@292  (=> $generated@@231 (and (=> (= (ControlFlow 0 66) 58) $generated@@291) (=> (= (ControlFlow 0 66) 65) $generated@@290)))))
(let (($generated@@293  (and (=> (= (ControlFlow 0 67) 57) $generated@@243) (=> (= (ControlFlow 0 67) 66) $generated@@292))))
(let (($generated@@294  (=> (and (and (and (and (and (and (and (and (not false) (<= 0 $generated@@192)) $generated@@219) (<= 0 $generated@@187)) $generated@@220) (<= 2000 $generated@@229)) (= $generated@@232 8000)) (forall (($generated@@295 T@U) ) (!  (=> (= (type $generated@@295) $generated@@46) (=> (and (not (= $generated@@295 $generated@@223)) ($generated@@0 ($generated@@48 ($generated@@49 $generated@@222 $generated@@295) $generated@@50))) (= ($generated@@49 $generated@@222 $generated@@295) ($generated@@49 $generated@@222 $generated@@295))))
 :pattern ( ($generated@@49 $generated@@222 $generated@@295))
))) (and (and ($generated@@44 $generated@@222 $generated@@222) (forall (($generated@@296 T@U) ($generated@@297 T@U) ) (! (let (($generated@@298 ($generated@@55 (type $generated@@297))))
 (=> (and (and (= (type $generated@@296) $generated@@46) (= (type $generated@@297) ($generated@@54 $generated@@298))) (and (not (= $generated@@296 $generated@@223)) ($generated@@0 ($generated@@48 ($generated@@49 $generated@@222 $generated@@296) $generated@@50)))) (or (= ($generated@@48 ($generated@@49 $generated@@222 $generated@@296) $generated@@297) ($generated@@48 ($generated@@49 $generated@@222 $generated@@296) $generated@@297)) ($generated@@0 ($generated@@106 $generated@@224 $generated@@296 $generated@@297)))))
 :pattern ( ($generated@@48 ($generated@@49 $generated@@222 $generated@@296) $generated@@297))
))) (and (<= (- 10000 $generated@@229) $generated@@232) (=> (= (- 10000 $generated@@229) $generated@@232) true)))) (and (=> (= (ControlFlow 0 68) 56) $generated@@244) (=> (= (ControlFlow 0 68) 67) $generated@@293)))))
(let (($generated@@299  (=> (and (= $generated@@232 (- 10000 $generated@@233)) (= (ControlFlow 0 69) 68)) $generated@@294)))
(let (($generated@@300  (=> (= $generated@@234 (- $generated@@233 2)) (=> (and (= $generated@@221 $generated@@234) (= (ControlFlow 0 55) 53)) $generated@@287))))
(let (($generated@@301  (=> (< $generated@@187 $generated@@186) (=> (and (= $generated@@214 (- $generated@@186 $generated@@187)) (= $generated@@233 ($generated@@162 2000))) (and (and (and (and (=> (= (ControlFlow 0 70) 45) $generated@@254) (=> (= (ControlFlow 0 70) 32) $generated@@262)) (=> (= (ControlFlow 0 70) 46) $generated@@253)) (=> (= (ControlFlow 0 70) 69) $generated@@299)) (=> (= (ControlFlow 0 70) 55) $generated@@300))))))
(let (($generated@@302  (=> $generated@@220 (and (=> (= (ControlFlow 0 71) 44) $generated@@255) (=> (= (ControlFlow 0 71) 70) $generated@@301)))))
(let (($generated@@303 true))
(let (($generated@@304  (and (=> (= (ControlFlow 0 72) 4) $generated@@303) (=> (= (ControlFlow 0 72) 71) $generated@@302))))
(let (($generated@@305 true))
(let (($generated@@306  (=> (and (and (and (and (and (not false) (<= 0 $generated@@192)) $generated@@219) (<= 0 $generated@@187)) (forall (($generated@@307 T@U) ) (!  (=> (= (type $generated@@307) $generated@@46) (=> (and (not (= $generated@@307 $generated@@223)) ($generated@@0 ($generated@@48 ($generated@@49 $generated@@222 $generated@@307) $generated@@50))) (= ($generated@@49 $generated@@222 $generated@@307) ($generated@@49 $generated@@222 $generated@@307))))
 :pattern ( ($generated@@49 $generated@@222 $generated@@307))
))) (and (and ($generated@@44 $generated@@222 $generated@@222) (forall (($generated@@308 T@U) ($generated@@309 T@U) ) (! (let (($generated@@310 ($generated@@55 (type $generated@@309))))
 (=> (and (and (= (type $generated@@308) $generated@@46) (= (type $generated@@309) ($generated@@54 $generated@@310))) (and (not (= $generated@@308 $generated@@223)) ($generated@@0 ($generated@@48 ($generated@@49 $generated@@222 $generated@@308) $generated@@50)))) (or (= ($generated@@48 ($generated@@49 $generated@@222 $generated@@308) $generated@@309) ($generated@@48 ($generated@@49 $generated@@222 $generated@@308) $generated@@309)) ($generated@@0 ($generated@@106 $generated@@224 $generated@@308 $generated@@309)))))
 :pattern ( ($generated@@48 ($generated@@49 $generated@@222 $generated@@308) $generated@@309))
))) (and (<= (- $generated@@186 $generated@@187) $generated@@235) (=> (= (- $generated@@186 $generated@@187) $generated@@235) true)))) (and (=> (= (ControlFlow 0 73) 3) $generated@@305) (=> (= (ControlFlow 0 73) 72) $generated@@304)))))
(let (($generated@@311  (=> (< $generated@@192 $generated@@194) (=> (and (and (= $generated@@193 (- $generated@@194 $generated@@192)) (= $generated@@236 ($generated@@162 0))) (and (= $generated@@235 (- $generated@@186 $generated@@236)) (= (ControlFlow 0 74) 73))) $generated@@306))))
(let (($generated@@312  (=> $generated@@219 (and (=> (= (ControlFlow 0 75) 31) $generated@@263) (=> (= (ControlFlow 0 75) 74) $generated@@311)))))
(let (($generated@@313 true))
(let (($generated@@314  (and (=> (= (ControlFlow 0 76) 2) $generated@@313) (=> (= (ControlFlow 0 76) 75) $generated@@312))))
(let (($generated@@315 true))
(let (($generated@@316  (=> (and (and (and (not false) (<= 0 $generated@@192)) (forall (($generated@@317 T@U) ) (!  (=> (= (type $generated@@317) $generated@@46) (=> (and (not (= $generated@@317 $generated@@223)) ($generated@@0 ($generated@@48 ($generated@@49 $generated@@222 $generated@@317) $generated@@50))) (= ($generated@@49 $generated@@222 $generated@@317) ($generated@@49 $generated@@222 $generated@@317))))
 :pattern ( ($generated@@49 $generated@@222 $generated@@317))
))) (and (and ($generated@@44 $generated@@222 $generated@@222) (forall (($generated@@318 T@U) ($generated@@319 T@U) ) (! (let (($generated@@320 ($generated@@55 (type $generated@@319))))
 (=> (and (and (= (type $generated@@318) $generated@@46) (= (type $generated@@319) ($generated@@54 $generated@@320))) (and (not (= $generated@@318 $generated@@223)) ($generated@@0 ($generated@@48 ($generated@@49 $generated@@222 $generated@@318) $generated@@50)))) (or (= ($generated@@48 ($generated@@49 $generated@@222 $generated@@318) $generated@@319) ($generated@@48 ($generated@@49 $generated@@222 $generated@@318) $generated@@319)) ($generated@@0 ($generated@@106 $generated@@224 $generated@@318 $generated@@319)))))
 :pattern ( ($generated@@48 ($generated@@49 $generated@@222 $generated@@318) $generated@@319))
))) (and (<= (- $generated@@194 $generated@@192) $generated@@237) (=> (= (- $generated@@194 $generated@@192) $generated@@237) true)))) (and (=> (= (ControlFlow 0 77) 1) $generated@@315) (=> (= (ControlFlow 0 77) 76) $generated@@314)))))
(let (($generated@@321  (=> (and (and (= $generated@@224 ($generated@@107 $generated@@223 $generated@@222 $generated@@50 false)) (= $generated@@238 ($generated@@162 0))) (and (= $generated@@237 (- $generated@@194 $generated@@238)) (= (ControlFlow 0 78) 77))) $generated@@316)))
(let (($generated@@322  (=> (and (and ($generated@@239 $generated@@222) ($generated@@240 $generated@@222)) (and (= 0 $generated@@241) (= (ControlFlow 0 79) 78))) $generated@@321)))
$generated@@322))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))
))
(check-sat)
(pop 1)
; Valid
(get-info :rlimit)
(reset)
(set-option :rlimit 0)
; did a full reset
(reset)
(set-option :print-success false)
(set-info :smt-lib-version 2.6)
(set-option :auto_config false)
(set-option :type_check true)
(set-option :smt.case_split 3)
(set-option :smt.qi.eager_threshold 100)
(set-option :smt.delay_units true)
(set-option :smt.arith.solver 2)
(set-option :smt.mbqi false)
(set-option :model.compact false)
(set-option :model.v2 true)
(set-option :pp.bv_literals false)
; done setting options


(set-info :category "industrial")
(declare-sort |T@U| 0)
(declare-sort |T@T| 0)
(declare-fun real_pow (Real Real) Real)
(declare-fun UOrdering2 (|T@U| |T@U|) Bool)
(declare-fun UOrdering3 (|T@T| |T@U| |T@U|) Bool)
(declare-fun tickleBool (Bool) Bool)
(assert (and (tickleBool true) (tickleBool false)))
(declare-fun $generated (T@U) Int)
(declare-fun $generated@@0 (T@U) Bool)
(declare-fun $generated@@1 (T@T) Int)
(declare-fun $generated@@2 () T@T)
(declare-fun $generated@@3 () T@T)
(declare-fun $generated@@4 () T@T)
(declare-fun $generated@@5 () T@T)
(declare-fun $generated@@6 () T@T)
(declare-fun $generated@@7 () T@T)
(declare-fun $generated@@8 (Int) T@U)
(declare-fun type (T@U) T@T)
(declare-fun $generated@@9 (Real) T@U)
(declare-fun $generated@@10 (T@U) Real)
(declare-fun $generated@@11 (Bool) T@U)
(declare-fun $generated@@12 (RoundingMode) T@U)
(declare-fun $generated@@13 (T@U) RoundingMode)
(declare-fun $generated@@14 (String) T@U)
(declare-fun $generated@@15 (T@U) String)
(declare-fun $generated@@16 ((RegEx String)) T@U)
(declare-fun $generated@@17 (T@U) (RegEx String))
(declare-fun $generated@@44 (T@U T@U) Bool)
(declare-fun $generated@@45 (T@T T@T) T@T)
(declare-fun $generated@@46 () T@T)
(declare-fun $generated@@47 () T@T)
(declare-fun $generated@@48 (T@U T@U) T@U)
(declare-fun $generated@@49 (T@U T@U) T@U)
(declare-fun $generated@@50 () T@U)
(declare-fun $generated@@51 (T@T) T@T)
(declare-fun $generated@@52 (T@T) T@T)
(declare-fun $generated@@53 (T@U T@U T@U) T@U)
(declare-fun $generated@@54 (T@T) T@T)
(declare-fun $generated@@55 (T@T) T@T)
(declare-fun $generated@@56 (T@U T@U T@U) T@U)
(declare-fun $generated@@106 (T@U T@U T@U) T@U)
(declare-fun $generated@@107 (T@U T@U T@U Bool) T@U)
(declare-fun $generated@@108 (T@T T@T) T@T)
(declare-fun $generated@@109 (T@T) T@T)
(declare-fun $generated@@110 (T@T) T@T)
(declare-fun $generated@@111 (T@U T@U T@U T@U) T@U)
(declare-fun $generated@@162 (Int) Int)
(declare-fun $generated@@164 (T@U) T@U)
(declare-fun $generated@@171 (T@U) T@U)
(declare-fun $generated@@172 (T@T T@U) T@U)
(declare-fun $generated@@173 () T@T)
(declare-fun $generated@@179 (Int Int) Int)
(assert  (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (= ($generated@@1 $generated@@2) 0) (= ($generated@@1 $generated@@3) 1)) (= ($generated@@1 $generated@@4) 2)) (= ($generated@@1 $generated@@5) 3)) (= ($generated@@1 $generated@@6) 4)) (= ($generated@@1 $generated@@7) 5)) (forall (($generated@@18 Int) ) (! (= ($generated ($generated@@8 $generated@@18)) $generated@@18)
 :pattern ( ($generated@@8 $generated@@18))
))) (forall (($generated@@19 T@U) ) (!  (=> (= (type $generated@@19) $generated@@2) (= ($generated@@8 ($generated $generated@@19)) $generated@@19))
 :pattern ( ($generated $generated@@19))
))) (forall (($generated@@20 Int) ) (! (= (type ($generated@@8 $generated@@20)) $generated@@2)
 :pattern ( ($generated@@8 $generated@@20))
))) (forall (($generated@@21 Real) ) (! (= ($generated@@10 ($generated@@9 $generated@@21)) $generated@@21)
 :pattern ( ($generated@@9 $generated@@21))
))) (forall (($generated@@22 T@U) ) (!  (=> (= (type $generated@@22) $generated@@3) (= ($generated@@9 ($generated@@10 $generated@@22)) $generated@@22))
 :pattern ( ($generated@@10 $generated@@22))
))) (forall (($generated@@23 Real) ) (! (= (type ($generated@@9 $generated@@23)) $generated@@3)
 :pattern ( ($generated@@9 $generated@@23))
))) (forall (($generated@@24 Bool) ) (! (= ($generated@@0 ($generated@@11 $generated@@24)) $generated@@24)
 :pattern ( ($generated@@11 $generated@@24))
))) (forall (($generated@@25 T@U) ) (!  (=> (= (type $generated@@25) $generated@@4) (= ($generated@@11 ($generated@@0 $generated@@25)) $generated@@25))
 :pattern ( ($generated@@0 $generated@@25))
))) (forall (($generated@@26 Bool) ) (! (= (type ($generated@@11 $generated@@26)) $generated@@4)
 :pattern ( ($generated@@11 $generated@@26))
))) (forall (($generated@@27 RoundingMode) ) (! (= ($generated@@13 ($generated@@12 $generated@@27)) $generated@@27)
 :pattern ( ($generated@@12 $generated@@27))
))) (forall (($generated@@28 T@U) ) (!  (=> (= (type $generated@@28) $generated@@5) (= ($generated@@12 ($generated@@13 $generated@@28)) $generated@@28))
 :pattern ( ($generated@@13 $generated@@28))
))) (forall (($generated@@29 RoundingMode) ) (! (= (type ($generated@@12 $generated@@29)) $generated@@5)
 :pattern ( ($generated@@12 $generated@@29))
))) (forall (($generated@@30 String) ) (! (= ($generated@@15 ($generated@@14 $generated@@30)) $generated@@30)
 :pattern ( ($generated@@14 $generated@@30))
))) (forall (($generated@@31 T@U) ) (!  (=> (= (type $generated@@31) $generated@@6) (= ($generated@@14 ($generated@@15 $generated@@31)) $generated@@31))
 :pattern ( ($generated@@15 $generated@@31))
))) (forall (($generated@@32 String) ) (! (= (type ($generated@@14 $generated@@32)) $generated@@6)
 :pattern ( ($generated@@14 $generated@@32))
))) (forall (($generated@@33 (RegEx String)) ) (! (= ($generated@@17 ($generated@@16 $generated@@33)) $generated@@33)
 :pattern ( ($generated@@16 $generated@@33))
))) (forall (($generated@@34 T@U) ) (!  (=> (= (type $generated@@34) $generated@@7) (= ($generated@@16 ($generated@@17 $generated@@34)) $generated@@34))
 :pattern ( ($generated@@17 $generated@@34))
))) (forall (($generated@@35 (RegEx String)) ) (! (= (type ($generated@@16 $generated@@35)) $generated@@7)
 :pattern ( ($generated@@16 $generated@@35))
))))
(assert (forall (($generated@@36 T@U) ) (! (UOrdering2 $generated@@36 $generated@@36)
 :no-pattern ($generated $generated@@36)
 :no-pattern ($generated@@0 $generated@@36)
)))
(assert (forall (($generated@@37 T@U) ($generated@@38 T@U) ($generated@@39 T@U) ) (! (let (($generated@@40 (type $generated@@37)))
 (=> (and (and (= (type $generated@@38) $generated@@40) (= (type $generated@@39) $generated@@40)) (and (UOrdering2 $generated@@37 $generated@@38) (UOrdering2 $generated@@38 $generated@@39))) (UOrdering2 $generated@@37 $generated@@39)))
 :pattern ( (UOrdering2 $generated@@37 $generated@@38) (UOrdering2 $generated@@38 $generated@@39))
)))
(assert (forall (($generated@@41 T@U) ($generated@@42 T@U) ) (! (let (($generated@@43 (type $generated@@41)))
 (=> (= (type $generated@@42) $generated@@43) (=> (and (UOrdering2 $generated@@41 $generated@@42) (UOrdering2 $generated@@42 $generated@@41)) (= $generated@@41 $generated@@42))))
 :pattern ( (UOrdering2 $generated@@41 $generated@@42) (UOrdering2 $generated@@42 $generated@@41))
)))
(assert  (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (forall (($generated@@57 T@T) ($generated@@58 T@T) ) (= ($generated@@1 ($generated@@45 $generated@@57 $generated@@58)) 6)) (forall (($generated@@59 T@T) ($generated@@60 T@T) ) (! (= ($generated@@51 ($generated@@45 $generated@@59 $generated@@60)) $generated@@59)
 :pattern ( ($generated@@45 $generated@@59 $generated@@60))
))) (forall (($generated@@61 T@T) ($generated@@62 T@T) ) (! (= ($generated@@52 ($generated@@45 $generated@@61 $generated@@62)) $generated@@62)
 :pattern ( ($generated@@45 $generated@@61 $generated@@62))
))) (forall (($generated@@63 T@U) ($generated@@64 T@U) ) (! (let (($generated@@65 ($generated@@52 (type $generated@@63))))
(= (type ($generated@@49 $generated@@63 $generated@@64)) $generated@@65))
 :pattern ( ($generated@@49 $generated@@63 $generated@@64))
))) (forall (($generated@@66 T@U) ($generated@@67 T@U) ($generated@@68 T@U) ) (! (let (($generated@@69 (type $generated@@68)))
(let (($generated@@70 (type $generated@@67)))
(= (type ($generated@@53 $generated@@66 $generated@@67 $generated@@68)) ($generated@@45 $generated@@70 $generated@@69))))
 :pattern ( ($generated@@53 $generated@@66 $generated@@67 $generated@@68))
))) (forall (($generated@@71 T@U) ($generated@@72 T@U) ($generated@@73 T@U) ) (! (let (($generated@@74 ($generated@@52 (type $generated@@71))))
 (=> (= (type $generated@@73) $generated@@74) (= ($generated@@49 ($generated@@53 $generated@@71 $generated@@72 $generated@@73) $generated@@72) $generated@@73)))
 :weight 0
))) (and (forall (($generated@@75 T@U) ($generated@@76 T@U) ($generated@@77 T@U) ($generated@@78 T@U) ) (!  (or (= $generated@@77 $generated@@78) (= ($generated@@49 ($generated@@53 $generated@@76 $generated@@77 $generated@@75) $generated@@78) ($generated@@49 $generated@@76 $generated@@78)))
 :weight 0
)) (forall (($generated@@79 T@U) ($generated@@80 T@U) ($generated@@81 T@U) ($generated@@82 T@U) ) (!  (or true (= ($generated@@49 ($generated@@53 $generated@@80 $generated@@81 $generated@@79) $generated@@82) ($generated@@49 $generated@@80 $generated@@82)))
 :weight 0
)))) (= ($generated@@1 $generated@@46) 7)) (forall (($generated@@83 T@T) ) (= ($generated@@1 ($generated@@54 $generated@@83)) 8))) (forall (($generated@@84 T@T) ) (! (= ($generated@@55 ($generated@@54 $generated@@84)) $generated@@84)
 :pattern ( ($generated@@54 $generated@@84))
))) (forall (($generated@@85 T@U) ($generated@@86 T@U) ) (! (let (($generated@@87 ($generated@@55 (type $generated@@86))))
(= (type ($generated@@48 $generated@@85 $generated@@86)) $generated@@87))
 :pattern ( ($generated@@48 $generated@@85 $generated@@86))
))) (= ($generated@@1 $generated@@47) 9)) (forall (($generated@@88 T@U) ($generated@@89 T@U) ($generated@@90 T@U) ) (! (= (type ($generated@@56 $generated@@88 $generated@@89 $generated@@90)) $generated@@47)
 :pattern ( ($generated@@56 $generated@@88 $generated@@89 $generated@@90))
))) (forall (($generated@@91 T@U) ($generated@@92 T@U) ($generated@@93 T@U) ) (! (let (($generated@@94 ($generated@@55 (type $generated@@92))))
 (=> (= (type $generated@@93) $generated@@94) (= ($generated@@48 ($generated@@56 $generated@@91 $generated@@92 $generated@@93) $generated@@92) $generated@@93)))
 :weight 0
))) (and (forall (($generated@@95 T@U) ($generated@@96 T@U) ($generated@@97 T@U) ($generated@@98 T@U) ) (!  (or (= $generated@@97 $generated@@98) (= ($generated@@48 ($generated@@56 $generated@@96 $generated@@97 $generated@@95) $generated@@98) ($generated@@48 $generated@@96 $generated@@98)))
 :weight 0
)) (forall (($generated@@99 T@U) ($generated@@100 T@U) ($generated@@101 T@U) ($generated@@102 T@U) ) (!  (or true (= ($generated@@48 ($generated@@56 $generated@@100 $generated@@101 $generated@@99) $generated@@102) ($generated@@48 $generated@@100 $generated@@102)))
 :weight 0
)))) (= (type $generated@@50) ($generated@@54 $generated@@4))))
(assert (forall (($generated@@103 T@U) ($generated@@104 T@U) ) (!  (=> (and (and (= (type $generated@@103) ($generated@@45 $generated@@46 $generated@@47)) (= (type $generated@@104) ($generated@@45 $generated@@46 $generated@@47))) ($generated@@44 $generated@@103 $generated@@104)) (forall (($generated@@105 T@U) ) (!  (=> (and (= (type $generated@@105) $generated@@46) ($generated@@0 ($generated@@48 ($generated@@49 $generated@@103 $generated@@105) $generated@@50))) ($generated@@0 ($generated@@48 ($generated@@49 $generated@@104 $generated@@105) $generated@@50)))
 :pattern ( ($generated@@48 ($generated@@49 $generated@@104 $generated@@105) $generated@@50))
)))
 :pattern ( ($generated@@44 $generated@@103 $generated@@104))
)))
(assert  (and (and (and (and (and (and (and (forall (($generated@@112 T@T) ($generated@@113 T@T) ) (= ($generated@@1 ($generated@@108 $generated@@112 $generated@@113)) 10)) (forall (($generated@@114 T@T) ($generated@@115 T@T) ) (! (= ($generated@@109 ($generated@@108 $generated@@114 $generated@@115)) $generated@@114)
 :pattern ( ($generated@@108 $generated@@114 $generated@@115))
))) (forall (($generated@@116 T@T) ($generated@@117 T@T) ) (! (= ($generated@@110 ($generated@@108 $generated@@116 $generated@@117)) $generated@@117)
 :pattern ( ($generated@@108 $generated@@116 $generated@@117))
))) (forall (($generated@@118 T@U) ($generated@@119 T@U) ($generated@@120 T@U) ) (! (let (($generated@@121 ($generated@@110 (type $generated@@118))))
(= (type ($generated@@106 $generated@@118 $generated@@119 $generated@@120)) $generated@@121))
 :pattern ( ($generated@@106 $generated@@118 $generated@@119 $generated@@120))
))) (forall (($generated@@122 T@U) ($generated@@123 T@U) ($generated@@124 T@U) ($generated@@125 T@U) ) (! (let (($generated@@126 (type $generated@@125)))
(let (($generated@@127 (type $generated@@123)))
(= (type ($generated@@111 $generated@@122 $generated@@123 $generated@@124 $generated@@125)) ($generated@@108 $generated@@127 $generated@@126))))
 :pattern ( ($generated@@111 $generated@@122 $generated@@123 $generated@@124 $generated@@125))
))) (forall (($generated@@128 T@U) ($generated@@129 T@U) ($generated@@130 T@U) ($generated@@131 T@U) ) (! (let (($generated@@132 ($generated@@110 (type $generated@@128))))
 (=> (= (type $generated@@131) $generated@@132) (= ($generated@@106 ($generated@@111 $generated@@128 $generated@@129 $generated@@130 $generated@@131) $generated@@129 $generated@@130) $generated@@131)))
 :weight 0
))) (and (and (forall (($generated@@133 T@U) ($generated@@134 T@U) ($generated@@135 T@U) ($generated@@136 T@U) ($generated@@137 T@U) ($generated@@138 T@U) ) (!  (or (= $generated@@135 $generated@@137) (= ($generated@@106 ($generated@@111 $generated@@134 $generated@@135 $generated@@136 $generated@@133) $generated@@137 $generated@@138) ($generated@@106 $generated@@134 $generated@@137 $generated@@138)))
 :weight 0
)) (forall (($generated@@139 T@U) ($generated@@140 T@U) ($generated@@141 T@U) ($generated@@142 T@U) ($generated@@143 T@U) ($generated@@144 T@U) ) (!  (or (= $generated@@142 $generated@@144) (= ($generated@@106 ($generated@@111 $generated@@140 $generated@@141 $generated@@142 $generated@@139) $generated@@143 $generated@@144) ($generated@@106 $generated@@140 $generated@@143 $generated@@144)))
 :weight 0
))) (forall (($generated@@145 T@U) ($generated@@146 T@U) ($generated@@147 T@U) ($generated@@148 T@U) ($generated@@149 T@U) ($generated@@150 T@U) ) (!  (or true (= ($generated@@106 ($generated@@111 $generated@@146 $generated@@147 $generated@@148 $generated@@145) $generated@@149 $generated@@150) ($generated@@106 $generated@@146 $generated@@149 $generated@@150)))
 :weight 0
)))) (forall (($generated@@151 T@U) ($generated@@152 T@U) ($generated@@153 T@U) ($generated@@154 Bool) ) (! (= (type ($generated@@107 $generated@@151 $generated@@152 $generated@@153 $generated@@154)) ($generated@@108 $generated@@46 $generated@@4))
 :pattern ( ($generated@@107 $generated@@151 $generated@@152 $generated@@153 $generated@@154))
))))
(assert (forall (($generated@@155 T@U) ($generated@@156 T@U) ($generated@@157 T@U) ($generated@@158 Bool) ($generated@@159 T@U) ($generated@@160 T@U) ) (! (let (($generated@@161 ($generated@@55 (type $generated@@160))))
 (=> (and (and (and (and (= (type $generated@@155) $generated@@46) (= (type $generated@@156) ($generated@@45 $generated@@46 $generated@@47))) (= (type $generated@@157) ($generated@@54 $generated@@4))) (= (type $generated@@159) $generated@@46)) (= (type $generated@@160) ($generated@@54 $generated@@161))) (= ($generated@@0 ($generated@@106 ($generated@@107 $generated@@155 $generated@@156 $generated@@157 $generated@@158) $generated@@159 $generated@@160))  (=> (and (not (= $generated@@159 $generated@@155)) ($generated@@0 ($generated@@48 ($generated@@49 $generated@@156 $generated@@159) $generated@@157))) $generated@@158))))
 :pattern ( ($generated@@106 ($generated@@107 $generated@@155 $generated@@156 $generated@@157 $generated@@158) $generated@@159 $generated@@160))
)))
(assert (forall (($generated@@163 Int) ) (! (= ($generated@@162 $generated@@163) $generated@@163)
 :pattern ( ($generated@@162 $generated@@163))
)))
(assert (forall (($generated@@165 T@U) ) (! (let (($generated@@166 (type $generated@@165)))
(= (type ($generated@@164 $generated@@165)) $generated@@166))
 :pattern ( ($generated@@164 $generated@@165))
)))
(assert (forall (($generated@@167 T@U) ) (! (= ($generated@@164 $generated@@167) $generated@@167)
 :pattern ( ($generated@@164 $generated@@167))
)))
(assert (forall (($generated@@168 T@U) ($generated@@169 T@U) ($generated@@170 T@U) ) (!  (=> (and (and (and (and (= (type $generated@@168) ($generated@@45 $generated@@46 $generated@@47)) (= (type $generated@@169) ($generated@@45 $generated@@46 $generated@@47))) (= (type $generated@@170) ($generated@@45 $generated@@46 $generated@@47))) (not (= $generated@@168 $generated@@170))) (and ($generated@@44 $generated@@168 $generated@@169) ($generated@@44 $generated@@169 $generated@@170))) ($generated@@44 $generated@@168 $generated@@170))
 :pattern ( ($generated@@44 $generated@@168 $generated@@169) ($generated@@44 $generated@@169 $generated@@170))
)))
(assert  (and (and (= ($generated@@1 $generated@@173) 11) (forall (($generated@@174 T@U) ) (! (= (type ($generated@@171 $generated@@174)) $generated@@173)
 :pattern ( ($generated@@171 $generated@@174))
))) (forall (($generated@@175 T@T) ($generated@@176 T@U) ) (! (= (type ($generated@@172 $generated@@175 $generated@@176)) $generated@@175)
 :pattern ( ($generated@@172 $generated@@175 $generated@@176))
))))
(assert (forall (($generated@@177 T@U) ) (! (let (($generated@@178 (type $generated@@177)))
(= ($generated@@172 $generated@@178 ($generated@@171 $generated@@177)) $generated@@177))
 :pattern ( ($generated@@171 $generated@@177))
)))
(assert (forall (($generated@@180 Int) ($generated@@181 Int) ) (! (= ($generated@@179 $generated@@180 $generated@@181) (mod $generated@@180 $generated@@181))
 :pattern ( ($generated@@179 $generated@@180 $generated@@181))
)))
(assert (forall (($generated@@182 Int) ) (! (= ($generated@@171 ($generated@@8 ($generated@@162 $generated@@182))) ($generated@@164 ($generated@@171 ($generated@@8 $generated@@182))))
 :pattern ( ($generated@@171 ($generated@@8 ($generated@@162 $generated@@182))))
)))
(assert (forall (($generated@@183 T@U) ) (! (= ($generated@@171 ($generated@@164 $generated@@183)) ($generated@@164 ($generated@@171 $generated@@183)))
 :pattern ( ($generated@@171 ($generated@@164 $generated@@183)))
)))
(push 1)
(declare-fun ControlFlow (Int Int) Int)
(declare-fun $generated@@184 () Int)
(declare-fun $generated@@185 () Int)
(declare-fun $generated@@186 () Int)
(declare-fun $generated@@187 () Int)
(declare-fun $generated@@188 () Int)
(declare-fun $generated@@189 () Int)
(declare-fun $generated@@190 () Int)
(declare-fun $generated@@191 () Int)
(declare-fun $generated@@192 () Int)
(declare-fun $generated@@193 () Int)
(declare-fun $generated@@194 () Int)
(declare-fun $generated@@195 () Int)
(declare-fun $generated@@196 () Int)
(declare-fun $generated@@197 () Int)
(declare-fun $generated@@198 () Int)
(declare-fun $generated@@199 () Int)
(declare-fun $generated@@200 () Int)
(declare-fun $generated@@201 () Int)
(declare-fun $generated@@202 () Int)
(declare-fun $generated@@203 () Int)
(declare-fun $generated@@204 () Int)
(declare-fun $generated@@205 () Int)
(declare-fun $generated@@206 () Int)
(declare-fun $generated@@207 () Int)
(declare-fun $generated@@208 () Int)
(declare-fun $generated@@209 () Int)
(declare-fun $generated@@210 () Int)
(declare-fun $generated@@211 () Int)
(declare-fun $generated@@212 () Bool)
(declare-fun $generated@@213 () Bool)
(declare-fun $generated@@214 () Bool)
(declare-fun $generated@@215 () Int)
(declare-fun $generated@@216 () T@U)
(declare-fun $generated@@217 () T@U)
(declare-fun $generated@@218 () T@U)
(declare-fun $generated@@219 () Int)
(declare-fun $generated@@220 () Int)
(declare-fun $generated@@221 () Int)
(declare-fun $generated@@222 () Int)
(declare-fun $generated@@223 () Int)
(declare-fun $generated@@224 () Bool)
(declare-fun $generated@@225 () Int)
(declare-fun $generated@@226 () Int)
(declare-fun $generated@@227 () Int)
(declare-fun $generated@@228 () Int)
(declare-fun $generated@@229 () Int)
(declare-fun $generated@@230 () Int)
(declare-fun $generated@@231 () Int)
(declare-fun $generated@@232 (T@U) Bool)
(declare-fun $generated@@233 (T@U) Bool)
(declare-fun $generated@@234 () Int)
(assert  (and (and (= (type $generated@@216) ($generated@@45 $generated@@46 $generated@@47)) (= (type $generated@@217) $generated@@46)) (= (type $generated@@218) ($generated@@108 $generated@@46 $generated@@4))))
(set-option :timeout 0)
(set-option :rlimit 0)
(assert (not
 (=> (= (ControlFlow 0 0) 73) (let (($generated@@235  (and (=> (= (ControlFlow 0 57) (- 0 58)) (or (<= 0 $generated@@184) (= (- 10000 $generated@@185) $generated@@184))) (=> (or (<= 0 $generated@@184) (= (- 10000 $generated@@185) $generated@@184)) (=> (= (ControlFlow 0 57) (- 0 56)) (< (- 10000 $generated@@185) $generated@@184))))))
(let (($generated@@236 true))
(let (($generated@@237 true))
(let (($generated@@238  (and (=> (= (ControlFlow 0 31) (- 0 33)) (or (or (<= $generated@@186 $generated@@187) (= $generated@@188 ($generated@@162 21))) (= $generated@@189 ($generated@@162 4)))) (=> (or (or (<= $generated@@186 $generated@@187) (= $generated@@188 ($generated@@162 21))) (= $generated@@189 ($generated@@162 4))) (=> (= $generated@@190 (+ $generated@@191 1)) (and (=> (= (ControlFlow 0 31) (- 0 32)) (or (<= 0 $generated@@192) (= (- $generated@@193 $generated@@190) $generated@@192))) (=> (or (<= 0 $generated@@192) (= (- $generated@@193 $generated@@190) $generated@@192)) (=> (= (ControlFlow 0 31) (- 0 30)) (< (- $generated@@193 $generated@@190) $generated@@192)))))))))
(let (($generated@@239  (=> (and (or (<= $generated@@186 $generated@@187) (= $generated@@188 ($generated@@162 21))) (= (ControlFlow 0 35) 31)) $generated@@238)))
(let (($generated@@240  (=> (and (not (or (<= $generated@@186 $generated@@187) (= $generated@@188 ($generated@@162 21)))) (= (ControlFlow 0 34) 31)) $generated@@238)))
(let (($generated@@241  (=> (<= $generated@@186 $generated@@187) (and (=> (= (ControlFlow 0 37) 34) $generated@@240) (=> (= (ControlFlow 0 37) 35) $generated@@239)))))
(let (($generated@@242  (=> (< $generated@@187 $generated@@186) (and (=> (= (ControlFlow 0 36) 34) $generated@@240) (=> (= (ControlFlow 0 36) 35) $generated@@239)))))
(let (($generated@@243  (=> (= $generated@@194 ($generated@@162 4)) (=> (and (= $generated@@188 $generated@@195) (= $generated@@189 $generated@@194)) (and (=> (= (ControlFlow 0 41) 36) $generated@@242) (=> (= (ControlFlow 0 41) 37) $generated@@241))))))
(let (($generated@@244  (=> (= $generated@@196 ($generated@@162 21)) (=> (and (= $generated@@188 $generated@@196) (= $generated@@189 $generated@@197)) (and (=> (= (ControlFlow 0 40) 36) $generated@@242) (=> (= (ControlFlow 0 40) 37) $generated@@241))))))
(let (($generated@@245  (=> (= $generated@@198 ($generated@@162 15)) (=> (and (= $generated@@188 $generated@@195) (= $generated@@189 $generated@@197)) (and (=> (= (ControlFlow 0 39) 36) $generated@@242) (=> (= (ControlFlow 0 39) 37) $generated@@241))))))
(let (($generated@@246  (=> (<= $generated@@186 $generated@@187) (=> (and (= $generated@@188 $generated@@195) (= $generated@@189 $generated@@197)) (and (=> (= (ControlFlow 0 38) 36) $generated@@242) (=> (= (ControlFlow 0 38) 37) $generated@@241))))))
(let (($generated@@247  (=> (= (ControlFlow 0 24) (- 0 23)) (or (<= $generated@@193 $generated@@191) (= $generated@@199 ($generated@@162 12))))))
(let (($generated@@248  (=> (and (<= $generated@@193 $generated@@191) (= (ControlFlow 0 26) 24)) $generated@@247)))
(let (($generated@@249  (=> (and (< $generated@@191 $generated@@193) (= (ControlFlow 0 25) 24)) $generated@@247)))
(let (($generated@@250  (=> (and (= $generated@@200 ($generated@@162 37)) (= $generated@@199 $generated@@201)) (and (=> (= (ControlFlow 0 29) 25) $generated@@249) (=> (= (ControlFlow 0 29) 26) $generated@@248)))))
(let (($generated@@251  (=> (and (= $generated@@202 ($generated@@162 12)) (= $generated@@199 $generated@@202)) (and (=> (= (ControlFlow 0 28) 25) $generated@@249) (=> (= (ControlFlow 0 28) 26) $generated@@248)))))
(let (($generated@@252  (=> (and (<= $generated@@193 $generated@@191) (= $generated@@199 $generated@@201)) (and (=> (= (ControlFlow 0 27) 25) $generated@@249) (=> (= (ControlFlow 0 27) 26) $generated@@248)))))
(let (($generated@@253  (=> (= $generated@@203 (+ $generated@@204 1)) (and (=> (= (ControlFlow 0 21) (- 0 22)) (or (<= 0 $generated@@205) (= (- $generated@@206 $generated@@203) $generated@@205))) (=> (or (<= 0 $generated@@205) (= (- $generated@@206 $generated@@203) $generated@@205)) (=> (= (ControlFlow 0 21) (- 0 20)) (< (- $generated@@206 $generated@@203) $generated@@205)))))))
(let (($generated@@254  (and (=> (= (ControlFlow 0 8) (- 0 10)) (or (<= $generated@@206 $generated@@204) (= $generated@@207 ($generated@@162 7)))) (=> (or (<= $generated@@206 $generated@@204) (= $generated@@207 ($generated@@162 7))) (=> (= $generated@@208 (+ $generated@@187 1)) (and (=> (= (ControlFlow 0 8) (- 0 9)) (or (<= 0 $generated@@209) (= (- $generated@@186 $generated@@208) $generated@@209))) (=> (or (<= 0 $generated@@209) (= (- $generated@@186 $generated@@208) $generated@@209)) (=> (= (ControlFlow 0 8) (- 0 7)) (< (- $generated@@186 $generated@@208) $generated@@209)))))))))
(let (($generated@@255  (=> (and (<= $generated@@206 $generated@@204) (= (ControlFlow 0 12) 8)) $generated@@254)))
(let (($generated@@256  (=> (and (< $generated@@204 $generated@@206) (= (ControlFlow 0 11) 8)) $generated@@254)))
(let (($generated@@257  (=> (and (= $generated@@210 ($generated@@162 7)) (= $generated@@207 $generated@@210)) (and (=> (= (ControlFlow 0 19) 11) $generated@@256) (=> (= (ControlFlow 0 19) 12) $generated@@255)))))
(let (($generated@@258  (=> (< $generated@@204 $generated@@206) (and (and (and (=> (= (ControlFlow 0 42) 41) $generated@@243) (=> (= (ControlFlow 0 42) 19) $generated@@257)) (=> (= (ControlFlow 0 42) 29) $generated@@250)) (=> (= (ControlFlow 0 42) 21) $generated@@253)))))
(let (($generated@@259  (=> (and (and (< $generated@@204 $generated@@206) (= ($generated@@179 $generated@@204 ($generated@@162 2)) ($generated@@162 0))) (and (= $generated@@211 ($generated@@162 187)) (= $generated@@207 $generated@@197))) (and (=> (= (ControlFlow 0 15) 11) $generated@@256) (=> (= (ControlFlow 0 15) 12) $generated@@255)))))
(let (($generated@@260  (=> (and (<= $generated@@206 $generated@@204) (= (ControlFlow 0 18) 15)) $generated@@259)))
(let (($generated@@261  (=> (< $generated@@204 $generated@@206) (and (=> (= (ControlFlow 0 16) (- 0 17)) (not (= ($generated@@162 2) 0))) (=> (not (= ($generated@@162 2) 0)) (=> (= (ControlFlow 0 16) 15) $generated@@259))))))
(let (($generated@@262  (=> (and (and (not (and (< $generated@@204 $generated@@206) (= ($generated@@179 $generated@@204 ($generated@@162 2)) ($generated@@162 0)))) (<= $generated@@206 $generated@@204)) (= $generated@@207 $generated@@197)) (and (=> (= (ControlFlow 0 14) 11) $generated@@256) (=> (= (ControlFlow 0 14) 12) $generated@@255)))))
(let (($generated@@263  (=> (and ($generated@@0 ($generated@@164 ($generated@@11 true))) (= $generated@@205 (- $generated@@206 $generated@@204))) (and (and (and (=> (= (ControlFlow 0 43) 42) $generated@@258) (=> (= (ControlFlow 0 43) 14) $generated@@262)) (=> (= (ControlFlow 0 43) 16) $generated@@261)) (=> (= (ControlFlow 0 43) 18) $generated@@260)))))
(let (($generated@@264  (=> (and (not ($generated@@0 ($generated@@164 ($generated@@11 true)))) (= $generated@@207 $generated@@197)) (and (=> (= (ControlFlow 0 13) 11) $generated@@256) (=> (= (ControlFlow 0 13) 12) $generated@@255)))))
(let (($generated@@265  (=> $generated@@212 (and (=> (= (ControlFlow 0 44) 13) $generated@@264) (=> (= (ControlFlow 0 44) 43) $generated@@263)))))
(let (($generated@@266 true))
(let (($generated@@267  (and (=> (= (ControlFlow 0 45) 6) $generated@@266) (=> (= (ControlFlow 0 45) 44) $generated@@265))))
(let (($generated@@268 true))
(let (($generated@@269  (=> (and (and (and (and (and (and (and (and (not false) (<= 0 $generated@@191)) $generated@@213) (<= 0 $generated@@187)) $generated@@214) (= $generated@@215 1998)) (<= 0 $generated@@204)) (forall (($generated@@270 T@U) ) (!  (=> (= (type $generated@@270) $generated@@46) (=> (and (not (= $generated@@270 $generated@@217)) ($generated@@0 ($generated@@48 ($generated@@49 $generated@@216 $generated@@270) $generated@@50))) (= ($generated@@49 $generated@@216 $generated@@270) ($generated@@49 $generated@@216 $generated@@270))))
 :pattern ( ($generated@@49 $generated@@216 $generated@@270))
))) (and (and ($generated@@44 $generated@@216 $generated@@216) (forall (($generated@@271 T@U) ($generated@@272 T@U) ) (! (let (($generated@@273 ($generated@@55 (type $generated@@272))))
 (=> (and (and (= (type $generated@@271) $generated@@46) (= (type $generated@@272) ($generated@@54 $generated@@273))) (and (not (= $generated@@271 $generated@@217)) ($generated@@0 ($generated@@48 ($generated@@49 $generated@@216 $generated@@271) $generated@@50)))) (or (= ($generated@@48 ($generated@@49 $generated@@216 $generated@@271) $generated@@272) ($generated@@48 ($generated@@49 $generated@@216 $generated@@271) $generated@@272)) ($generated@@0 ($generated@@106 $generated@@218 $generated@@271 $generated@@272)))))
 :pattern ( ($generated@@48 ($generated@@49 $generated@@216 $generated@@271) $generated@@272))
))) (and (<= (- $generated@@206 $generated@@204) $generated@@219) (=> (= (- $generated@@206 $generated@@204) $generated@@219) true)))) (and (=> (= (ControlFlow 0 46) 5) $generated@@268) (=> (= (ControlFlow 0 46) 45) $generated@@267)))))
(let (($generated@@274  (and (=> (= (ControlFlow 0 47) (- 0 48)) (= $generated@@215 ($generated@@162 1998))) (=> (= $generated@@215 ($generated@@162 1998)) (=> (= $generated@@220 ($generated@@162 0)) (=> (and (= $generated@@219 (- $generated@@206 $generated@@220)) (= (ControlFlow 0 47) 46)) $generated@@269))))))
(let (($generated@@275  (=> (= $generated@@221 ($generated@@162 1998)) (=> (and (= $generated@@215 $generated@@221) (= (ControlFlow 0 55) 47)) $generated@@274))))
(let (($generated@@276  (=> (= $generated@@222 ($generated@@162 1998)) (=> (and (= $generated@@215 $generated@@222) (= (ControlFlow 0 54) 47)) $generated@@274))))
(let (($generated@@277  (=> (< $generated@@223 10000) (=> (and (= $generated@@184 (- 10000 $generated@@223)) (= $generated@@185 (+ $generated@@223 3))) (and (and (=> (= (ControlFlow 0 59) 54) $generated@@276) (=> (= (ControlFlow 0 59) 55) $generated@@275)) (=> (= (ControlFlow 0 59) 57) $generated@@235))))))
(let (($generated@@278  (=> (<= 10000 $generated@@223) (and (=> (= (ControlFlow 0 52) (- 0 53)) (< $generated@@223 2000)) (=> (< $generated@@223 2000) (=> (and (= $generated@@215 $generated@@223) (= (ControlFlow 0 52) 47)) $generated@@274))))))
(let (($generated@@279  (=> $generated@@224 (and (=> (= (ControlFlow 0 60) 52) $generated@@278) (=> (= (ControlFlow 0 60) 59) $generated@@277)))))
(let (($generated@@280  (and (=> (= (ControlFlow 0 61) 51) $generated@@236) (=> (= (ControlFlow 0 61) 60) $generated@@279))))
(let (($generated@@281  (=> (and (and (and (and (and (and (and (and (not false) (<= 0 $generated@@191)) $generated@@213) (<= 0 $generated@@187)) $generated@@214) (<= 2000 $generated@@223)) (= $generated@@225 8000)) (forall (($generated@@282 T@U) ) (!  (=> (= (type $generated@@282) $generated@@46) (=> (and (not (= $generated@@282 $generated@@217)) ($generated@@0 ($generated@@48 ($generated@@49 $generated@@216 $generated@@282) $generated@@50))) (= ($generated@@49 $generated@@216 $generated@@282) ($generated@@49 $generated@@216 $generated@@282))))
 :pattern ( ($generated@@49 $generated@@216 $generated@@282))
))) (and (and ($generated@@44 $generated@@216 $generated@@216) (forall (($generated@@283 T@U) ($generated@@284 T@U) ) (! (let (($generated@@285 ($generated@@55 (type $generated@@284))))
 (=> (and (and (= (type $generated@@283) $generated@@46) (= (type $generated@@284) ($generated@@54 $generated@@285))) (and (not (= $generated@@283 $generated@@217)) ($generated@@0 ($generated@@48 ($generated@@49 $generated@@216 $generated@@283) $generated@@50)))) (or (= ($generated@@48 ($generated@@49 $generated@@216 $generated@@283) $generated@@284) ($generated@@48 ($generated@@49 $generated@@216 $generated@@283) $generated@@284)) ($generated@@0 ($generated@@106 $generated@@218 $generated@@283 $generated@@284)))))
 :pattern ( ($generated@@48 ($generated@@49 $generated@@216 $generated@@283) $generated@@284))
))) (and (<= (- 10000 $generated@@223) $generated@@225) (=> (= (- 10000 $generated@@223) $generated@@225) true)))) (and (=> (= (ControlFlow 0 62) 50) $generated@@237) (=> (= (ControlFlow 0 62) 61) $generated@@280)))))
(let (($generated@@286  (=> (and (= $generated@@225 (- 10000 $generated@@226)) (= (ControlFlow 0 63) 62)) $generated@@281)))
(let (($generated@@287  (=> (= $generated@@227 (- $generated@@226 2)) (=> (and (= $generated@@215 $generated@@227) (= (ControlFlow 0 49) 47)) $generated@@274))))
(let (($generated@@288  (=> (< $generated@@187 $generated@@186) (=> (and (= $generated@@209 (- $generated@@186 $generated@@187)) (= $generated@@226 ($generated@@162 2000))) (and (and (and (and (=> (= (ControlFlow 0 64) 39) $generated@@245) (=> (= (ControlFlow 0 64) 28) $generated@@251)) (=> (= (ControlFlow 0 64) 40) $generated@@244)) (=> (= (ControlFlow 0 64) 63) $generated@@286)) (=> (= (ControlFlow 0 64) 49) $generated@@287))))))
(let (($generated@@289  (=> $generated@@214 (and (=> (= (ControlFlow 0 65) 38) $generated@@246) (=> (= (ControlFlow 0 65) 64) $generated@@288)))))
(let (($generated@@290 true))
(let (($generated@@291  (and (=> (= (ControlFlow 0 66) 4) $generated@@290) (=> (= (ControlFlow 0 66) 65) $generated@@289))))
(let (($generated@@292 true))
(let (($generated@@293  (=> (and (and (and (and (and (not false) (<= 0 $generated@@191)) $generated@@213) (<= 0 $generated@@187)) (forall (($generated@@294 T@U) ) (!  (=> (= (type $generated@@294) $generated@@46) (=> (and (not (= $generated@@294 $generated@@217)) ($generated@@0 ($generated@@48 ($generated@@49 $generated@@216 $generated@@294) $generated@@50))) (= ($generated@@49 $generated@@216 $generated@@294) ($generated@@49 $generated@@216 $generated@@294))))
 :pattern ( ($generated@@49 $generated@@216 $generated@@294))
))) (and (and ($generated@@44 $generated@@216 $generated@@216) (forall (($generated@@295 T@U) ($generated@@296 T@U) ) (! (let (($generated@@297 ($generated@@55 (type $generated@@296))))
 (=> (and (and (= (type $generated@@295) $generated@@46) (= (type $generated@@296) ($generated@@54 $generated@@297))) (and (not (= $generated@@295 $generated@@217)) ($generated@@0 ($generated@@48 ($generated@@49 $generated@@216 $generated@@295) $generated@@50)))) (or (= ($generated@@48 ($generated@@49 $generated@@216 $generated@@295) $generated@@296) ($generated@@48 ($generated@@49 $generated@@216 $generated@@295) $generated@@296)) ($generated@@0 ($generated@@106 $generated@@218 $generated@@295 $generated@@296)))))
 :pattern ( ($generated@@48 ($generated@@49 $generated@@216 $generated@@295) $generated@@296))
))) (and (<= (- $generated@@186 $generated@@187) $generated@@228) (=> (= (- $generated@@186 $generated@@187) $generated@@228) true)))) (and (=> (= (ControlFlow 0 67) 3) $generated@@292) (=> (= (ControlFlow 0 67) 66) $generated@@291)))))
(let (($generated@@298  (=> (< $generated@@191 $generated@@193) (=> (and (and (= $generated@@192 (- $generated@@193 $generated@@191)) (= $generated@@229 ($generated@@162 0))) (and (= $generated@@228 (- $generated@@186 $generated@@229)) (= (ControlFlow 0 68) 67))) $generated@@293))))
(let (($generated@@299  (=> $generated@@213 (and (=> (= (ControlFlow 0 69) 27) $generated@@252) (=> (= (ControlFlow 0 69) 68) $generated@@298)))))
(let (($generated@@300 true))
(let (($generated@@301  (and (=> (= (ControlFlow 0 70) 2) $generated@@300) (=> (= (ControlFlow 0 70) 69) $generated@@299))))
(let (($generated@@302 true))
(let (($generated@@303  (=> (and (and (and (not false) (<= 0 $generated@@191)) (forall (($generated@@304 T@U) ) (!  (=> (= (type $generated@@304) $generated@@46) (=> (and (not (= $generated@@304 $generated@@217)) ($generated@@0 ($generated@@48 ($generated@@49 $generated@@216 $generated@@304) $generated@@50))) (= ($generated@@49 $generated@@216 $generated@@304) ($generated@@49 $generated@@216 $generated@@304))))
 :pattern ( ($generated@@49 $generated@@216 $generated@@304))
))) (and (and ($generated@@44 $generated@@216 $generated@@216) (forall (($generated@@305 T@U) ($generated@@306 T@U) ) (! (let (($generated@@307 ($generated@@55 (type $generated@@306))))
 (=> (and (and (= (type $generated@@305) $generated@@46) (= (type $generated@@306) ($generated@@54 $generated@@307))) (and (not (= $generated@@305 $generated@@217)) ($generated@@0 ($generated@@48 ($generated@@49 $generated@@216 $generated@@305) $generated@@50)))) (or (= ($generated@@48 ($generated@@49 $generated@@216 $generated@@305) $generated@@306) ($generated@@48 ($generated@@49 $generated@@216 $generated@@305) $generated@@306)) ($generated@@0 ($generated@@106 $generated@@218 $generated@@305 $generated@@306)))))
 :pattern ( ($generated@@48 ($generated@@49 $generated@@216 $generated@@305) $generated@@306))
))) (and (<= (- $generated@@193 $generated@@191) $generated@@230) (=> (= (- $generated@@193 $generated@@191) $generated@@230) true)))) (and (=> (= (ControlFlow 0 71) 1) $generated@@302) (=> (= (ControlFlow 0 71) 70) $generated@@301)))))
(let (($generated@@308  (=> (and (and (= $generated@@218 ($generated@@107 $generated@@217 $generated@@216 $generated@@50 false)) (= $generated@@231 ($generated@@162 0))) (and (= $generated@@230 (- $generated@@193 $generated@@231)) (= (ControlFlow 0 72) 71))) $generated@@303)))
(let (($generated@@309  (=> (and (and ($generated@@232 $generated@@216) ($generated@@233 $generated@@216)) (and (= 0 $generated@@234) (= (ControlFlow 0 73) 72))) $generated@@308)))
$generated@@309))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))
))
(check-sat)
(get-info :reason-unknown)
(assert (not (= (ControlFlow 0 31) (- 33))))
(check-sat)
(get-info :reason-unknown)
(assert (not (= (ControlFlow 0 52) (- 53))))
(check-sat)
(get-info :reason-unknown)
(assert (not (= (ControlFlow 0 24) (- 23))))
(check-sat)
(get-info :reason-unknown)
(assert (not (= (ControlFlow 0 8) (- 10))))
(check-sat)
(pop 1)
; Invalid
(get-info :rlimit)
(reset)
(set-option :rlimit 0)
; did a full reset
(reset)
(set-option :print-success false)
(set-info :smt-lib-version 2.6)
(set-option :auto_config false)
(set-option :type_check true)
(set-option :smt.case_split 3)
(set-option :smt.qi.eager_threshold 100)
(set-option :smt.delay_units true)
(set-option :smt.arith.solver 2)
(set-option :smt.mbqi false)
(set-option :model.compact false)
(set-option :model.v2 true)
(set-option :pp.bv_literals false)
; done setting options


(set-info :category "industrial")
(declare-sort |T@U| 0)
(declare-sort |T@T| 0)
(declare-fun real_pow (Real Real) Real)
(declare-fun UOrdering2 (|T@U| |T@U|) Bool)
(declare-fun UOrdering3 (|T@T| |T@U| |T@U|) Bool)
(declare-fun tickleBool (Bool) Bool)
(assert (and (tickleBool true) (tickleBool false)))
(declare-fun $generated (T@U) Int)
(declare-fun $generated@@0 (T@U) Bool)
(declare-fun $generated@@1 (T@T) Int)
(declare-fun $generated@@2 () T@T)
(declare-fun $generated@@3 () T@T)
(declare-fun $generated@@4 () T@T)
(declare-fun $generated@@5 () T@T)
(declare-fun $generated@@6 () T@T)
(declare-fun $generated@@7 () T@T)
(declare-fun $generated@@8 (Int) T@U)
(declare-fun type (T@U) T@T)
(declare-fun $generated@@9 (Real) T@U)
(declare-fun $generated@@10 (T@U) Real)
(declare-fun $generated@@11 (Bool) T@U)
(declare-fun $generated@@12 (RoundingMode) T@U)
(declare-fun $generated@@13 (T@U) RoundingMode)
(declare-fun $generated@@14 (String) T@U)
(declare-fun $generated@@15 (T@U) String)
(declare-fun $generated@@16 ((RegEx String)) T@U)
(declare-fun $generated@@17 (T@U) (RegEx String))
(declare-fun $generated@@44 () T@U)
(declare-fun $generated@@45 () T@U)
(declare-fun $generated@@46 () T@U)
(declare-fun $generated@@47 () T@U)
(declare-fun $generated@@48 () T@U)
(declare-fun $generated@@49 () T@U)
(declare-fun $generated@@50 () T@U)
(declare-fun $generated@@51 () T@U)
(declare-fun $generated@@52 () T@U)
(declare-fun $generated@@53 () T@U)
(declare-fun $generated@@54 () T@U)
(declare-fun $generated@@55 () T@U)
(declare-fun $generated@@56 () T@U)
(declare-fun $generated@@57 () T@U)
(declare-fun $generated@@58 () T@U)
(declare-fun $generated@@59 () T@U)
(declare-fun $generated@@60 () T@U)
(declare-fun $generated@@61 () T@U)
(declare-fun $generated@@62 () T@U)
(declare-fun $generated@@63 () T@U)
(declare-fun $generated@@64 () T@U)
(declare-fun $generated@@65 () T@U)
(declare-fun $generated@@66 () T@U)
(declare-fun $generated@@67 () T@U)
(declare-fun $generated@@68 () T@U)
(declare-fun $generated@@69 () T@U)
(declare-fun $generated@@70 () T@T)
(declare-fun $generated@@71 () T@T)
(declare-fun $generated@@72 (T@T) T@T)
(declare-fun $generated@@73 (T@T) T@T)
(declare-fun $generated@@74 () T@T)
(declare-fun $generated@@75 () T@T)
(declare-fun $generated@@78 (T@U) T@U)
(declare-fun $generated@@80 (T@U T@U T@U) Bool)
(declare-fun $generated@@81 (Int) T@U)
(declare-fun $generated@@82 (T@T T@T) T@T)
(declare-fun $generated@@83 () T@T)
(declare-fun $generated@@84 () T@T)
(declare-fun $generated@@85 (T@T) T@T)
(declare-fun $generated@@86 (T@T) T@T)
(declare-fun $generated@@87 (T@U T@U) T@U)
(declare-fun $generated@@88 (T@U T@U T@U) T@U)
(declare-fun $generated@@89 (T@U T@U) T@U)
(declare-fun $generated@@90 (T@U T@U T@U) T@U)
(declare-fun $generated@@138 (T@U T@U) Bool)
(declare-fun $generated@@142 (T@U T@U) Bool)
(declare-fun $generated@@144 (T@U) Bool)
(declare-fun $generated@@145 (T@U T@U) T@U)
(declare-fun $generated@@146 () T@T)
(declare-fun $generated@@152 (T@U T@U) Bool)
(declare-fun $generated@@153 (T@U) T@U)
(declare-fun $generated@@154 (T@U) T@U)
(declare-fun $generated@@155 () T@T)
(declare-fun $generated@@160 (T@U) T@U)
(declare-fun $generated@@161 () T@U)
(declare-fun $generated@@163 () T@U)
(declare-fun $generated@@164 () T@U)
(declare-fun $generated@@165 () T@U)
(declare-fun $generated@@166 (T@U) T@U)
(declare-fun $generated@@167 (T@U) Bool)
(declare-fun $generated@@171 (T@U T@U T@U) T@U)
(declare-fun $generated@@172 (T@U T@U T@U Bool) T@U)
(declare-fun $generated@@173 (T@T T@T) T@T)
(declare-fun $generated@@174 (T@T) T@T)
(declare-fun $generated@@175 (T@T) T@T)
(declare-fun $generated@@176 (T@U T@U T@U T@U) T@U)
(declare-fun $generated@@227 (T@U T@U) T@U)
(declare-fun $generated@@228 (T@U T@U) Bool)
(declare-fun $generated@@235 () T@U)
(declare-fun $generated@@236 (T@U) Bool)
(declare-fun $generated@@243 (T@U T@U) Bool)
(declare-fun $generated@@246 (T@U) T@U)
(declare-fun $generated@@251 (T@U) T@U)
(declare-fun $generated@@256 (Int) Int)
(declare-fun $generated@@258 (T@U) T@U)
(declare-fun $generated@@262 (T@U) Bool)
(declare-fun $generated@@265 (T@U) Bool)
(declare-fun $generated@@268 (T@U) Bool)
(declare-fun $generated@@271 (T@U) Bool)
(declare-fun $generated@@274 (T@U T@U T@U) Bool)
(declare-fun $generated@@288 (T@T) T@U)
(declare-fun $generated@@289 (T@U) Int)
(declare-fun $generated@@290 (T@T) T@T)
(declare-fun $generated@@291 (T@T) T@T)
(declare-fun $generated@@300 (T@U) T@U)
(declare-fun $generated@@313 (T@U) Int)
(declare-fun $generated@@314 (T@T) T@U)
(declare-fun $generated@@319 (T@U) T@U)
(declare-fun $generated@@320 (T@T T@T) T@U)
(declare-fun $generated@@321 (T@T T@T) T@T)
(declare-fun $generated@@322 (T@T) T@T)
(declare-fun $generated@@323 (T@T) T@T)
(declare-fun $generated@@337 (T@U) T@U)
(declare-fun $generated@@338 (T@T T@T) T@U)
(declare-fun $generated@@339 (T@T T@T) T@T)
(declare-fun $generated@@340 (T@T) T@T)
(declare-fun $generated@@341 (T@T) T@T)
(declare-fun $generated@@358 (T@T T@U) T@U)
(declare-fun $generated@@366 (T@U) T@U)
(declare-fun $generated@@377 (T@U) T@U)
(declare-fun $generated@@397 (T@U) T@U)
(declare-fun $generated@@398 (T@U) T@U)
(declare-fun $generated@@405 (T@U) T@U)
(declare-fun $generated@@406 (T@U) T@U)
(declare-fun $generated@@423 (T@U T@U) T@U)
(declare-fun $generated@@431 (T@U T@U) T@U)
(declare-fun $generated@@442 (T@T) T@U)
(declare-fun $generated@@466 () T@T)
(declare-fun $generated@@474 (T@U) T@U)
(declare-fun $generated@@478 (T@U) T@U)
(declare-fun $generated@@484 (T@U) T@U)
(declare-fun $generated@@488 (T@U) T@U)
(declare-fun $generated@@496 (T@U) T@U)
(declare-fun $generated@@500 (T@U) T@U)
(declare-fun $generated@@508 (T@U) T@U)
(declare-fun $generated@@509 (T@U Int) T@U)
(declare-fun $generated@@518 (T@U) Int)
(declare-fun $generated@@520 (T@U) T@U)
(declare-fun $generated@@524 (T@U) T@U)
(declare-fun $generated@@528 (T@U) T@U)
(declare-fun $generated@@532 (T@U) T@U)
(declare-fun $generated@@546 (T@U) Int)
(declare-fun $generated@@547 (T@U) Int)
(declare-fun $generated@@563 (Int Int) Int)
(declare-fun $generated@@566 (T@U) T@U)
(declare-fun $generated@@584 (T@U) Bool)
(declare-fun $generated@@618 (T@U) Int)
(assert  (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (= ($generated@@1 $generated@@2) 0) (= ($generated@@1 $generated@@3) 1)) (= ($generated@@1 $generated@@4) 2)) (= ($generated@@1 $generated@@5) 3)) (= ($generated@@1 $generated@@6) 4)) (= ($generated@@1 $generated@@7) 5)) (forall (($generated@@18 Int) ) (! (= ($generated ($generated@@8 $generated@@18)) $generated@@18)
 :pattern ( ($generated@@8 $generated@@18))
))) (forall (($generated@@19 T@U) ) (!  (=> (= (type $generated@@19) $generated@@2) (= ($generated@@8 ($generated $generated@@19)) $generated@@19))
 :pattern ( ($generated $generated@@19))
))) (forall (($generated@@20 Int) ) (! (= (type ($generated@@8 $generated@@20)) $generated@@2)
 :pattern ( ($generated@@8 $generated@@20))
))) (forall (($generated@@21 Real) ) (! (= ($generated@@10 ($generated@@9 $generated@@21)) $generated@@21)
 :pattern ( ($generated@@9 $generated@@21))
))) (forall (($generated@@22 T@U) ) (!  (=> (= (type $generated@@22) $generated@@3) (= ($generated@@9 ($generated@@10 $generated@@22)) $generated@@22))
 :pattern ( ($generated@@10 $generated@@22))
))) (forall (($generated@@23 Real) ) (! (= (type ($generated@@9 $generated@@23)) $generated@@3)
 :pattern ( ($generated@@9 $generated@@23))
))) (forall (($generated@@24 Bool) ) (! (= ($generated@@0 ($generated@@11 $generated@@24)) $generated@@24)
 :pattern ( ($generated@@11 $generated@@24))
))) (forall (($generated@@25 T@U) ) (!  (=> (= (type $generated@@25) $generated@@4) (= ($generated@@11 ($generated@@0 $generated@@25)) $generated@@25))
 :pattern ( ($generated@@0 $generated@@25))
))) (forall (($generated@@26 Bool) ) (! (= (type ($generated@@11 $generated@@26)) $generated@@4)
 :pattern ( ($generated@@11 $generated@@26))
))) (forall (($generated@@27 RoundingMode) ) (! (= ($generated@@13 ($generated@@12 $generated@@27)) $generated@@27)
 :pattern ( ($generated@@12 $generated@@27))
))) (forall (($generated@@28 T@U) ) (!  (=> (= (type $generated@@28) $generated@@5) (= ($generated@@12 ($generated@@13 $generated@@28)) $generated@@28))
 :pattern ( ($generated@@13 $generated@@28))
))) (forall (($generated@@29 RoundingMode) ) (! (= (type ($generated@@12 $generated@@29)) $generated@@5)
 :pattern ( ($generated@@12 $generated@@29))
))) (forall (($generated@@30 String) ) (! (= ($generated@@15 ($generated@@14 $generated@@30)) $generated@@30)
 :pattern ( ($generated@@14 $generated@@30))
))) (forall (($generated@@31 T@U) ) (!  (=> (= (type $generated@@31) $generated@@6) (= ($generated@@14 ($generated@@15 $generated@@31)) $generated@@31))
 :pattern ( ($generated@@15 $generated@@31))
))) (forall (($generated@@32 String) ) (! (= (type ($generated@@14 $generated@@32)) $generated@@6)
 :pattern ( ($generated@@14 $generated@@32))
))) (forall (($generated@@33 (RegEx String)) ) (! (= ($generated@@17 ($generated@@16 $generated@@33)) $generated@@33)
 :pattern ( ($generated@@16 $generated@@33))
))) (forall (($generated@@34 T@U) ) (!  (=> (= (type $generated@@34) $generated@@7) (= ($generated@@16 ($generated@@17 $generated@@34)) $generated@@34))
 :pattern ( ($generated@@17 $generated@@34))
))) (forall (($generated@@35 (RegEx String)) ) (! (= (type ($generated@@16 $generated@@35)) $generated@@7)
 :pattern ( ($generated@@16 $generated@@35))
))))
(assert (forall (($generated@@36 T@U) ) (! (UOrdering2 $generated@@36 $generated@@36)
 :no-pattern ($generated $generated@@36)
 :no-pattern ($generated@@0 $generated@@36)
)))
(assert (forall (($generated@@37 T@U) ($generated@@38 T@U) ($generated@@39 T@U) ) (! (let (($generated@@40 (type $generated@@37)))
 (=> (and (and (= (type $generated@@38) $generated@@40) (= (type $generated@@39) $generated@@40)) (and (UOrdering2 $generated@@37 $generated@@38) (UOrdering2 $generated@@38 $generated@@39))) (UOrdering2 $generated@@37 $generated@@39)))
 :pattern ( (UOrdering2 $generated@@37 $generated@@38) (UOrdering2 $generated@@38 $generated@@39))
)))
(assert (forall (($generated@@41 T@U) ($generated@@42 T@U) ) (! (let (($generated@@43 (type $generated@@41)))
 (=> (= (type $generated@@42) $generated@@43) (=> (and (UOrdering2 $generated@@41 $generated@@42) (UOrdering2 $generated@@42 $generated@@41)) (= $generated@@41 $generated@@42))))
 :pattern ( (UOrdering2 $generated@@41 $generated@@42) (UOrdering2 $generated@@42 $generated@@41))
)))
(assert  (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (= ($generated@@1 $generated@@70) 6) (= (type $generated@@44) $generated@@70)) (= (type $generated@@45) $generated@@70)) (= (type $generated@@46) $generated@@70)) (= (type $generated@@47) $generated@@70)) (= (type $generated@@48) $generated@@70)) (= ($generated@@1 $generated@@71) 7)) (= (type $generated@@49) $generated@@71)) (= (type $generated@@50) $generated@@71)) (= (type $generated@@51) $generated@@71)) (= (type $generated@@52) $generated@@71)) (= (type $generated@@53) $generated@@71)) (= (type $generated@@54) $generated@@71)) (= (type $generated@@55) $generated@@71)) (= (type $generated@@56) $generated@@71)) (= (type $generated@@57) $generated@@71)) (= (type $generated@@58) $generated@@71)) (= (type $generated@@59) $generated@@71)) (forall (($generated@@76 T@T) ) (= ($generated@@1 ($generated@@72 $generated@@76)) 8))) (forall (($generated@@77 T@T) ) (! (= ($generated@@73 ($generated@@72 $generated@@77)) $generated@@77)
 :pattern ( ($generated@@72 $generated@@77))
))) (= (type $generated@@60) ($generated@@72 $generated@@4))) (= ($generated@@1 $generated@@74) 9)) (= (type $generated@@61) $generated@@74)) (= (type $generated@@62) $generated@@71)) (= (type $generated@@63) $generated@@74)) (= (type $generated@@64) $generated@@71)) (= (type $generated@@65) $generated@@74)) (= (type $generated@@66) $generated@@74)) (= (type $generated@@67) $generated@@74)) (= ($generated@@1 $generated@@75) 10)) (= (type $generated@@68) $generated@@75)) (= (type $generated@@69) $generated@@75)))
(assert (distinct $generated@@44 $generated@@45 $generated@@46 $generated@@47 $generated@@48 $generated@@49 $generated@@50 $generated@@51 $generated@@52 $generated@@53 $generated@@54 $generated@@55 $generated@@56 $generated@@57 $generated@@58 $generated@@59 $generated@@60 $generated@@61 $generated@@62 $generated@@63 $generated@@64 $generated@@65 $generated@@66 $generated@@67 $generated@@68 $generated@@69)
)
(assert (forall (($generated@@79 T@U) ) (! (= (type ($generated@@78 $generated@@79)) $generated@@71)
 :pattern ( ($generated@@78 $generated@@79))
)))
(assert (= ($generated@@78 $generated@@44) $generated@@49))
(assert (= ($generated@@78 $generated@@45) $generated@@50))
(assert (= ($generated@@78 $generated@@46) $generated@@51))
(assert (= ($generated@@78 $generated@@47) $generated@@52))
(assert (= ($generated@@78 $generated@@48) $generated@@53))
(assert  (and (and (and (and (and (and (and (and (and (and (and (and (and (forall (($generated@@91 T@T) ($generated@@92 T@T) ) (= ($generated@@1 ($generated@@82 $generated@@91 $generated@@92)) 11)) (forall (($generated@@93 T@T) ($generated@@94 T@T) ) (! (= ($generated@@85 ($generated@@82 $generated@@93 $generated@@94)) $generated@@93)
 :pattern ( ($generated@@82 $generated@@93 $generated@@94))
))) (forall (($generated@@95 T@T) ($generated@@96 T@T) ) (! (= ($generated@@86 ($generated@@82 $generated@@95 $generated@@96)) $generated@@96)
 :pattern ( ($generated@@82 $generated@@95 $generated@@96))
))) (forall (($generated@@97 T@U) ($generated@@98 T@U) ) (! (let (($generated@@99 ($generated@@86 (type $generated@@97))))
(= (type ($generated@@87 $generated@@97 $generated@@98)) $generated@@99))
 :pattern ( ($generated@@87 $generated@@97 $generated@@98))
))) (forall (($generated@@100 T@U) ($generated@@101 T@U) ($generated@@102 T@U) ) (! (let (($generated@@103 (type $generated@@102)))
(let (($generated@@104 (type $generated@@101)))
(= (type ($generated@@88 $generated@@100 $generated@@101 $generated@@102)) ($generated@@82 $generated@@104 $generated@@103))))
 :pattern ( ($generated@@88 $generated@@100 $generated@@101 $generated@@102))
))) (forall (($generated@@105 T@U) ($generated@@106 T@U) ($generated@@107 T@U) ) (! (let (($generated@@108 ($generated@@86 (type $generated@@105))))
 (=> (= (type $generated@@107) $generated@@108) (= ($generated@@87 ($generated@@88 $generated@@105 $generated@@106 $generated@@107) $generated@@106) $generated@@107)))
 :weight 0
))) (and (forall (($generated@@109 T@U) ($generated@@110 T@U) ($generated@@111 T@U) ($generated@@112 T@U) ) (!  (or (= $generated@@111 $generated@@112) (= ($generated@@87 ($generated@@88 $generated@@110 $generated@@111 $generated@@109) $generated@@112) ($generated@@87 $generated@@110 $generated@@112)))
 :weight 0
)) (forall (($generated@@113 T@U) ($generated@@114 T@U) ($generated@@115 T@U) ($generated@@116 T@U) ) (!  (or true (= ($generated@@87 ($generated@@88 $generated@@114 $generated@@115 $generated@@113) $generated@@116) ($generated@@87 $generated@@114 $generated@@116)))
 :weight 0
)))) (= ($generated@@1 $generated@@83) 12)) (forall (($generated@@117 T@U) ($generated@@118 T@U) ) (! (let (($generated@@119 ($generated@@73 (type $generated@@118))))
(= (type ($generated@@89 $generated@@117 $generated@@118)) $generated@@119))
 :pattern ( ($generated@@89 $generated@@117 $generated@@118))
))) (= ($generated@@1 $generated@@84) 13)) (forall (($generated@@120 T@U) ($generated@@121 T@U) ($generated@@122 T@U) ) (! (= (type ($generated@@90 $generated@@120 $generated@@121 $generated@@122)) $generated@@84)
 :pattern ( ($generated@@90 $generated@@120 $generated@@121 $generated@@122))
))) (forall (($generated@@123 T@U) ($generated@@124 T@U) ($generated@@125 T@U) ) (! (let (($generated@@126 ($generated@@73 (type $generated@@124))))
 (=> (= (type $generated@@125) $generated@@126) (= ($generated@@89 ($generated@@90 $generated@@123 $generated@@124 $generated@@125) $generated@@124) $generated@@125)))
 :weight 0
))) (and (forall (($generated@@127 T@U) ($generated@@128 T@U) ($generated@@129 T@U) ($generated@@130 T@U) ) (!  (or (= $generated@@129 $generated@@130) (= ($generated@@89 ($generated@@90 $generated@@128 $generated@@129 $generated@@127) $generated@@130) ($generated@@89 $generated@@128 $generated@@130)))
 :weight 0
)) (forall (($generated@@131 T@U) ($generated@@132 T@U) ($generated@@133 T@U) ($generated@@134 T@U) ) (!  (or true (= ($generated@@89 ($generated@@90 $generated@@132 $generated@@133 $generated@@131) $generated@@134) ($generated@@89 $generated@@132 $generated@@134)))
 :weight 0
)))) (forall (($generated@@135 Int) ) (! (= (type ($generated@@81 $generated@@135)) $generated@@70)
 :pattern ( ($generated@@81 $generated@@135))
))))
(assert (forall (($generated@@136 T@U) ($generated@@137 T@U) ) (!  (=> (and (= (type $generated@@136) $generated@@2) (= (type $generated@@137) ($generated@@82 $generated@@83 $generated@@84))) ($generated@@80 $generated@@136 ($generated@@81 0) $generated@@137))
 :pattern ( ($generated@@80 $generated@@136 ($generated@@81 0) $generated@@137))
)))
(assert (forall (($generated@@139 T@U) ($generated@@140 T@U) ) (!  (=> (and (and (= (type $generated@@139) ($generated@@82 $generated@@83 $generated@@84)) (= (type $generated@@140) ($generated@@82 $generated@@83 $generated@@84))) ($generated@@138 $generated@@139 $generated@@140)) (forall (($generated@@141 T@U) ) (!  (=> (and (= (type $generated@@141) $generated@@83) ($generated@@0 ($generated@@89 ($generated@@87 $generated@@139 $generated@@141) $generated@@60))) ($generated@@0 ($generated@@89 ($generated@@87 $generated@@140 $generated@@141) $generated@@60)))
 :pattern ( ($generated@@89 ($generated@@87 $generated@@140 $generated@@141) $generated@@60))
)))
 :pattern ( ($generated@@138 $generated@@139 $generated@@140))
)))
(assert (forall (($generated@@143 T@U) ) (!  (=> (= (type $generated@@143) $generated@@2) ($generated@@142 $generated@@143 ($generated@@81 0)))
 :pattern ( ($generated@@142 $generated@@143 ($generated@@81 0)))
)))
(assert  (and (= ($generated@@1 $generated@@146) 14) (forall (($generated@@147 T@U) ($generated@@148 T@U) ) (! (= (type ($generated@@145 $generated@@147 $generated@@148)) $generated@@70)
 :pattern ( ($generated@@145 $generated@@147 $generated@@148))
))))
(assert (forall (($generated@@149 T@U) ($generated@@150 T@U) ($generated@@151 T@U) ) (!  (=> (and (and (and (= (type $generated@@149) $generated@@70) (= (type $generated@@150) $generated@@70)) (= (type $generated@@151) $generated@@146)) ($generated@@142 $generated@@151 ($generated@@145 $generated@@149 $generated@@150))) ($generated@@144 $generated@@151))
 :pattern ( ($generated@@144 $generated@@151) ($generated@@142 $generated@@151 ($generated@@145 $generated@@149 $generated@@150)))
)))
(assert  (and (and (= ($generated@@1 $generated@@155) 15) (forall (($generated@@156 T@U) ) (! (= (type ($generated@@153 $generated@@156)) $generated@@155)
 :pattern ( ($generated@@153 $generated@@156))
))) (forall (($generated@@157 T@U) ) (! (= (type ($generated@@154 $generated@@157)) $generated@@155)
 :pattern ( ($generated@@154 $generated@@157))
))))
(assert (forall (($generated@@158 T@U) ($generated@@159 T@U) ) (!  (=> (and (and (= (type $generated@@158) $generated@@146) (= (type $generated@@159) $generated@@146)) true) (= ($generated@@152 $generated@@158 $generated@@159)  (and (= ($generated@@153 $generated@@158) ($generated@@153 $generated@@159)) (= ($generated@@154 $generated@@158) ($generated@@154 $generated@@159)))))
 :pattern ( ($generated@@152 $generated@@158 $generated@@159))
)))
(assert  (and (forall (($generated@@162 T@U) ) (! (= (type ($generated@@160 $generated@@162)) $generated@@74)
 :pattern ( ($generated@@160 $generated@@162))
)) (= (type $generated@@161) $generated@@146)))
(assert (= ($generated@@160 $generated@@161) $generated@@63))
(assert (= (type $generated@@163) $generated@@146))
(assert (= ($generated@@160 $generated@@163) $generated@@65))
(assert (= (type $generated@@164) $generated@@146))
(assert (= ($generated@@160 $generated@@164) $generated@@66))
(assert (= (type $generated@@165) $generated@@146))
(assert (= ($generated@@160 $generated@@165) $generated@@67))
(assert (forall (($generated@@168 T@U) ) (! (= (type ($generated@@166 $generated@@168)) $generated@@70)
 :pattern ( ($generated@@166 $generated@@168))
)))
(assert (forall (($generated@@169 T@U) ($generated@@170 T@U) ) (!  (=> (and (and (= (type $generated@@169) ($generated@@82 $generated@@155 $generated@@2)) (= (type $generated@@170) $generated@@70)) ($generated@@142 $generated@@169 ($generated@@166 $generated@@170))) ($generated@@167 $generated@@169))
 :pattern ( ($generated@@142 $generated@@169 ($generated@@166 $generated@@170)))
)))
(assert  (and (and (and (and (and (and (and (forall (($generated@@177 T@T) ($generated@@178 T@T) ) (= ($generated@@1 ($generated@@173 $generated@@177 $generated@@178)) 16)) (forall (($generated@@179 T@T) ($generated@@180 T@T) ) (! (= ($generated@@174 ($generated@@173 $generated@@179 $generated@@180)) $generated@@179)
 :pattern ( ($generated@@173 $generated@@179 $generated@@180))
))) (forall (($generated@@181 T@T) ($generated@@182 T@T) ) (! (= ($generated@@175 ($generated@@173 $generated@@181 $generated@@182)) $generated@@182)
 :pattern ( ($generated@@173 $generated@@181 $generated@@182))
))) (forall (($generated@@183 T@U) ($generated@@184 T@U) ($generated@@185 T@U) ) (! (let (($generated@@186 ($generated@@175 (type $generated@@183))))
(= (type ($generated@@171 $generated@@183 $generated@@184 $generated@@185)) $generated@@186))
 :pattern ( ($generated@@171 $generated@@183 $generated@@184 $generated@@185))
))) (forall (($generated@@187 T@U) ($generated@@188 T@U) ($generated@@189 T@U) ($generated@@190 T@U) ) (! (let (($generated@@191 (type $generated@@190)))
(let (($generated@@192 (type $generated@@188)))
(= (type ($generated@@176 $generated@@187 $generated@@188 $generated@@189 $generated@@190)) ($generated@@173 $generated@@192 $generated@@191))))
 :pattern ( ($generated@@176 $generated@@187 $generated@@188 $generated@@189 $generated@@190))
))) (forall (($generated@@193 T@U) ($generated@@194 T@U) ($generated@@195 T@U) ($generated@@196 T@U) ) (! (let (($generated@@197 ($generated@@175 (type $generated@@193))))
 (=> (= (type $generated@@196) $generated@@197) (= ($generated@@171 ($generated@@176 $generated@@193 $generated@@194 $generated@@195 $generated@@196) $generated@@194 $generated@@195) $generated@@196)))
 :weight 0
))) (and (and (forall (($generated@@198 T@U) ($generated@@199 T@U) ($generated@@200 T@U) ($generated@@201 T@U) ($generated@@202 T@U) ($generated@@203 T@U) ) (!  (or (= $generated@@200 $generated@@202) (= ($generated@@171 ($generated@@176 $generated@@199 $generated@@200 $generated@@201 $generated@@198) $generated@@202 $generated@@203) ($generated@@171 $generated@@199 $generated@@202 $generated@@203)))
 :weight 0
)) (forall (($generated@@204 T@U) ($generated@@205 T@U) ($generated@@206 T@U) ($generated@@207 T@U) ($generated@@208 T@U) ($generated@@209 T@U) ) (!  (or (= $generated@@207 $generated@@209) (= ($generated@@171 ($generated@@176 $generated@@205 $generated@@206 $generated@@207 $generated@@204) $generated@@208 $generated@@209) ($generated@@171 $generated@@205 $generated@@208 $generated@@209)))
 :weight 0
))) (forall (($generated@@210 T@U) ($generated@@211 T@U) ($generated@@212 T@U) ($generated@@213 T@U) ($generated@@214 T@U) ($generated@@215 T@U) ) (!  (or true (= ($generated@@171 ($generated@@176 $generated@@211 $generated@@212 $generated@@213 $generated@@210) $generated@@214 $generated@@215) ($generated@@171 $generated@@211 $generated@@214 $generated@@215)))
 :weight 0
)))) (forall (($generated@@216 T@U) ($generated@@217 T@U) ($generated@@218 T@U) ($generated@@219 Bool) ) (! (= (type ($generated@@172 $generated@@216 $generated@@217 $generated@@218 $generated@@219)) ($generated@@173 $generated@@83 $generated@@4))
 :pattern ( ($generated@@172 $generated@@216 $generated@@217 $generated@@218 $generated@@219))
))))
(assert (forall (($generated@@220 T@U) ($generated@@221 T@U) ($generated@@222 T@U) ($generated@@223 Bool) ($generated@@224 T@U) ($generated@@225 T@U) ) (! (let (($generated@@226 ($generated@@73 (type $generated@@225))))
 (=> (and (and (and (and (= (type $generated@@220) $generated@@83) (= (type $generated@@221) ($generated@@82 $generated@@83 $generated@@84))) (= (type $generated@@222) ($generated@@72 $generated@@4))) (= (type $generated@@224) $generated@@83)) (= (type $generated@@225) ($generated@@72 $generated@@226))) (= ($generated@@0 ($generated@@171 ($generated@@172 $generated@@220 $generated@@221 $generated@@222 $generated@@223) $generated@@224 $generated@@225))  (=> (and (not (= $generated@@224 $generated@@220)) ($generated@@0 ($generated@@89 ($generated@@87 $generated@@221 $generated@@224) $generated@@222))) $generated@@223))))
 :pattern ( ($generated@@171 ($generated@@172 $generated@@220 $generated@@221 $generated@@222 $generated@@223) $generated@@224 $generated@@225))
)))
(assert (forall (($generated@@229 T@U) ($generated@@230 T@U) ) (! (= (type ($generated@@227 $generated@@229 $generated@@230)) $generated@@146)
 :pattern ( ($generated@@227 $generated@@229 $generated@@230))
)))
(assert (forall (($generated@@231 T@U) ($generated@@232 T@U) ($generated@@233 T@U) ($generated@@234 T@U) ) (!  (=> (and (and (and (= (type $generated@@231) $generated@@70) (= (type $generated@@232) $generated@@70)) (= (type $generated@@233) $generated@@155)) (= (type $generated@@234) $generated@@155)) (= ($generated@@142 ($generated@@227 $generated@@233 $generated@@234) ($generated@@145 $generated@@231 $generated@@232))  (and ($generated@@228 $generated@@233 $generated@@231) ($generated@@228 $generated@@234 $generated@@232))))
 :pattern ( ($generated@@142 ($generated@@227 $generated@@233 $generated@@234) ($generated@@145 $generated@@231 $generated@@232)))
)))
(assert (= (type $generated@@235) $generated@@70))
(assert ($generated@@142 $generated@@161 $generated@@235))
(assert ($generated@@142 $generated@@163 $generated@@235))
(assert ($generated@@142 $generated@@164 $generated@@235))
(assert ($generated@@142 $generated@@165 $generated@@235))
(assert (forall (($generated@@237 T@U) ) (!  (=> (and (= (type $generated@@237) ($generated@@82 $generated@@83 $generated@@84)) ($generated@@236 $generated@@237)) ($generated@@80 $generated@@161 $generated@@235 $generated@@237))
 :pattern ( ($generated@@80 $generated@@161 $generated@@235 $generated@@237))
)))
(assert (forall (($generated@@238 T@U) ) (!  (=> (and (= (type $generated@@238) ($generated@@82 $generated@@83 $generated@@84)) ($generated@@236 $generated@@238)) ($generated@@80 $generated@@163 $generated@@235 $generated@@238))
 :pattern ( ($generated@@80 $generated@@163 $generated@@235 $generated@@238))
)))
(assert (forall (($generated@@239 T@U) ) (!  (=> (and (= (type $generated@@239) ($generated@@82 $generated@@83 $generated@@84)) ($generated@@236 $generated@@239)) ($generated@@80 $generated@@164 $generated@@235 $generated@@239))
 :pattern ( ($generated@@80 $generated@@164 $generated@@235 $generated@@239))
)))
(assert (forall (($generated@@240 T@U) ) (!  (=> (and (= (type $generated@@240) ($generated@@82 $generated@@83 $generated@@84)) ($generated@@236 $generated@@240)) ($generated@@80 $generated@@165 $generated@@235 $generated@@240))
 :pattern ( ($generated@@80 $generated@@165 $generated@@235 $generated@@240))
)))
(assert (forall (($generated@@241 T@U) ($generated@@242 T@U) ) (!  (=> (and (= (type $generated@@241) $generated@@146) (= (type $generated@@242) $generated@@146)) (= ($generated@@152 $generated@@241 $generated@@242) (= $generated@@241 $generated@@242)))
 :pattern ( ($generated@@152 $generated@@241 $generated@@242))
)))
(assert (forall (($generated@@244 T@U) ($generated@@245 T@U) ) (!  (=> (and (= (type $generated@@244) $generated@@146) (= (type $generated@@245) $generated@@146)) (= ($generated@@243 $generated@@244 $generated@@245) (= $generated@@244 $generated@@245)))
 :pattern ( ($generated@@243 $generated@@244 $generated@@245))
)))
(assert (forall (($generated@@247 T@U) ) (! (= (type ($generated@@246 $generated@@247)) $generated@@70)
 :pattern ( ($generated@@246 $generated@@247))
)))
(assert (forall (($generated@@248 T@U) ($generated@@249 T@U) ) (!  (=> (and (= (type $generated@@248) ($generated@@82 $generated@@155 $generated@@4)) (= (type $generated@@249) $generated@@70)) (= ($generated@@142 $generated@@248 ($generated@@246 $generated@@249)) (forall (($generated@@250 T@U) ) (!  (=> (and (= (type $generated@@250) $generated@@155) ($generated@@0 ($generated@@87 $generated@@248 $generated@@250))) ($generated@@228 $generated@@250 $generated@@249))
 :pattern ( ($generated@@87 $generated@@248 $generated@@250))
))))
 :pattern ( ($generated@@142 $generated@@248 ($generated@@246 $generated@@249)))
)))
(assert (forall (($generated@@252 T@U) ) (! (= (type ($generated@@251 $generated@@252)) $generated@@70)
 :pattern ( ($generated@@251 $generated@@252))
)))
(assert (forall (($generated@@253 T@U) ($generated@@254 T@U) ) (!  (=> (and (= (type $generated@@253) ($generated@@82 $generated@@155 $generated@@4)) (= (type $generated@@254) $generated@@70)) (= ($generated@@142 $generated@@253 ($generated@@251 $generated@@254)) (forall (($generated@@255 T@U) ) (!  (=> (and (= (type $generated@@255) $generated@@155) ($generated@@0 ($generated@@87 $generated@@253 $generated@@255))) ($generated@@228 $generated@@255 $generated@@254))
 :pattern ( ($generated@@87 $generated@@253 $generated@@255))
))))
 :pattern ( ($generated@@142 $generated@@253 ($generated@@251 $generated@@254)))
)))
(assert (forall (($generated@@257 Int) ) (! (= ($generated@@256 $generated@@257) $generated@@257)
 :pattern ( ($generated@@256 $generated@@257))
)))
(assert (forall (($generated@@259 T@U) ) (! (let (($generated@@260 (type $generated@@259)))
(= (type ($generated@@258 $generated@@259)) $generated@@260))
 :pattern ( ($generated@@258 $generated@@259))
)))
(assert (forall (($generated@@261 T@U) ) (! (= ($generated@@258 $generated@@261) $generated@@261)
 :pattern ( ($generated@@258 $generated@@261))
)))
(assert (forall (($generated@@263 T@U) ($generated@@264 T@U) ) (!  (=> (and (and (= (type $generated@@263) $generated@@146) (= (type $generated@@264) $generated@@146)) (and ($generated@@262 $generated@@263) ($generated@@262 $generated@@264))) (= ($generated@@243 $generated@@263 $generated@@264) true))
 :pattern ( ($generated@@243 $generated@@263 $generated@@264) ($generated@@262 $generated@@263))
 :pattern ( ($generated@@243 $generated@@263 $generated@@264) ($generated@@262 $generated@@264))
)))
(assert (forall (($generated@@266 T@U) ($generated@@267 T@U) ) (!  (=> (and (and (= (type $generated@@266) $generated@@146) (= (type $generated@@267) $generated@@146)) (and ($generated@@265 $generated@@266) ($generated@@265 $generated@@267))) (= ($generated@@243 $generated@@266 $generated@@267) true))
 :pattern ( ($generated@@243 $generated@@266 $generated@@267) ($generated@@265 $generated@@266))
 :pattern ( ($generated@@243 $generated@@266 $generated@@267) ($generated@@265 $generated@@267))
)))
(assert (forall (($generated@@269 T@U) ($generated@@270 T@U) ) (!  (=> (and (and (= (type $generated@@269) $generated@@146) (= (type $generated@@270) $generated@@146)) (and ($generated@@268 $generated@@269) ($generated@@268 $generated@@270))) (= ($generated@@243 $generated@@269 $generated@@270) true))
 :pattern ( ($generated@@243 $generated@@269 $generated@@270) ($generated@@268 $generated@@269))
 :pattern ( ($generated@@243 $generated@@269 $generated@@270) ($generated@@268 $generated@@270))
)))
(assert (forall (($generated@@272 T@U) ($generated@@273 T@U) ) (!  (=> (and (and (= (type $generated@@272) $generated@@146) (= (type $generated@@273) $generated@@146)) (and ($generated@@271 $generated@@272) ($generated@@271 $generated@@273))) (= ($generated@@243 $generated@@272 $generated@@273) true))
 :pattern ( ($generated@@243 $generated@@272 $generated@@273) ($generated@@271 $generated@@272))
 :pattern ( ($generated@@243 $generated@@272 $generated@@273) ($generated@@271 $generated@@273))
)))
(assert (forall (($generated@@275 T@U) ($generated@@276 T@U) ($generated@@277 T@U) ($generated@@278 T@U) ($generated@@279 T@U) ) (!  (=> (and (and (and (and (and (= (type $generated@@275) $generated@@70) (= (type $generated@@276) $generated@@70)) (= (type $generated@@277) $generated@@155)) (= (type $generated@@278) $generated@@155)) (= (type $generated@@279) ($generated@@82 $generated@@83 $generated@@84))) ($generated@@236 $generated@@279)) (= ($generated@@80 ($generated@@227 $generated@@277 $generated@@278) ($generated@@145 $generated@@275 $generated@@276) $generated@@279)  (and ($generated@@274 $generated@@277 $generated@@275 $generated@@279) ($generated@@274 $generated@@278 $generated@@276 $generated@@279))))
 :pattern ( ($generated@@80 ($generated@@227 $generated@@277 $generated@@278) ($generated@@145 $generated@@275 $generated@@276) $generated@@279))
)))
(assert (forall (($generated@@280 T@U) ) (!  (=> (= (type $generated@@280) $generated@@146) (= ($generated@@144 $generated@@280) (= ($generated@@160 $generated@@280) $generated@@61)))
 :pattern ( ($generated@@144 $generated@@280))
)))
(assert (forall (($generated@@281 T@U) ) (!  (=> (= (type $generated@@281) $generated@@146) (= ($generated@@262 $generated@@281) (= ($generated@@160 $generated@@281) $generated@@63)))
 :pattern ( ($generated@@262 $generated@@281))
)))
(assert (forall (($generated@@282 T@U) ) (!  (=> (= (type $generated@@282) $generated@@146) (= ($generated@@265 $generated@@282) (= ($generated@@160 $generated@@282) $generated@@65)))
 :pattern ( ($generated@@265 $generated@@282))
)))
(assert (forall (($generated@@283 T@U) ) (!  (=> (= (type $generated@@283) $generated@@146) (= ($generated@@268 $generated@@283) (= ($generated@@160 $generated@@283) $generated@@66)))
 :pattern ( ($generated@@268 $generated@@283))
)))
(assert (forall (($generated@@284 T@U) ) (!  (=> (= (type $generated@@284) $generated@@146) (= ($generated@@271 $generated@@284) (= ($generated@@160 $generated@@284) $generated@@67)))
 :pattern ( ($generated@@271 $generated@@284))
)))
(assert (forall (($generated@@285 T@U) ) (!  (=> (and (= (type $generated@@285) $generated@@146) ($generated@@144 $generated@@285)) (exists (($generated@@286 T@U) ($generated@@287 T@U) ) (!  (and (and (= (type $generated@@286) $generated@@155) (= (type $generated@@287) $generated@@155)) (= $generated@@285 ($generated@@227 $generated@@286 $generated@@287)))
 :no-pattern (type $generated@@286)
 :no-pattern (type $generated@@287)
 :no-pattern ($generated $generated@@286)
 :no-pattern ($generated@@0 $generated@@286)
 :no-pattern ($generated $generated@@287)
 :no-pattern ($generated@@0 $generated@@287)
)))
 :pattern ( ($generated@@144 $generated@@285))
)))
(assert  (and (and (forall (($generated@@292 T@T) ) (= ($generated@@1 ($generated@@290 $generated@@292)) 17)) (forall (($generated@@293 T@T) ) (! (= ($generated@@291 ($generated@@290 $generated@@293)) $generated@@293)
 :pattern ( ($generated@@290 $generated@@293))
))) (forall (($generated@@294 T@T) ) (! (= (type ($generated@@288 $generated@@294)) ($generated@@290 $generated@@294))
 :pattern ( ($generated@@288 $generated@@294))
))))
(assert (forall (($generated@@295 T@T) ) (! (= ($generated@@289 ($generated@@288 $generated@@295)) 0)
 :pattern ( ($generated@@288 $generated@@295))
)))
(assert (forall (($generated@@296 T@U) ) (!  (=> (and (= (type $generated@@296) $generated@@146) ($generated@@262 $generated@@296)) (= $generated@@296 $generated@@161))
 :pattern ( ($generated@@262 $generated@@296))
)))
(assert (forall (($generated@@297 T@U) ) (!  (=> (and (= (type $generated@@297) $generated@@146) ($generated@@265 $generated@@297)) (= $generated@@297 $generated@@163))
 :pattern ( ($generated@@265 $generated@@297))
)))
(assert (forall (($generated@@298 T@U) ) (!  (=> (and (= (type $generated@@298) $generated@@146) ($generated@@268 $generated@@298)) (= $generated@@298 $generated@@164))
 :pattern ( ($generated@@268 $generated@@298))
)))
(assert (forall (($generated@@299 T@U) ) (!  (=> (and (= (type $generated@@299) $generated@@146) ($generated@@271 $generated@@299)) (= $generated@@299 $generated@@165))
 :pattern ( ($generated@@271 $generated@@299))
)))
(assert (forall (($generated@@301 T@U) ) (! (= (type ($generated@@300 $generated@@301)) $generated@@155)
 :pattern ( ($generated@@300 $generated@@301))
)))
(assert (forall (($generated@@302 T@U) ($generated@@303 T@U) ($generated@@304 T@U) ) (!  (=> (and (= (type $generated@@303) $generated@@70) (= (type $generated@@304) ($generated@@82 $generated@@83 $generated@@84))) (= ($generated@@274 ($generated@@300 $generated@@302) $generated@@303 $generated@@304) ($generated@@80 $generated@@302 $generated@@303 $generated@@304)))
 :pattern ( ($generated@@274 ($generated@@300 $generated@@302) $generated@@303 $generated@@304))
)))
(assert (forall (($generated@@305 T@U) ($generated@@306 T@U) ($generated@@307 T@U) ($generated@@308 T@U) ) (!  (=> (and (and (and (and (and (= (type $generated@@305) ($generated@@82 $generated@@83 $generated@@84)) (= (type $generated@@306) ($generated@@82 $generated@@83 $generated@@84))) (= (type $generated@@307) $generated@@155)) (= (type $generated@@308) $generated@@70)) ($generated@@138 $generated@@305 $generated@@306)) ($generated@@274 $generated@@307 $generated@@308 $generated@@305)) ($generated@@274 $generated@@307 $generated@@308 $generated@@306))
 :pattern ( ($generated@@138 $generated@@305 $generated@@306) ($generated@@274 $generated@@307 $generated@@308 $generated@@305))
)))
(assert (forall (($generated@@309 T@U) ($generated@@310 T@U) ($generated@@311 T@U) ($generated@@312 T@U) ) (!  (=> (and (and (and (and (= (type $generated@@309) ($generated@@82 $generated@@83 $generated@@84)) (= (type $generated@@310) ($generated@@82 $generated@@83 $generated@@84))) (= (type $generated@@312) $generated@@70)) ($generated@@138 $generated@@309 $generated@@310)) ($generated@@80 $generated@@311 $generated@@312 $generated@@309)) ($generated@@80 $generated@@311 $generated@@312 $generated@@310))
 :pattern ( ($generated@@138 $generated@@309 $generated@@310) ($generated@@80 $generated@@311 $generated@@312 $generated@@309))
)))
(assert (forall (($generated@@315 T@T) ) (! (= (type ($generated@@314 $generated@@315)) ($generated@@82 $generated@@315 $generated@@2))
 :pattern ( ($generated@@314 $generated@@315))
)))
(assert (forall (($generated@@316 T@U) ) (! (let (($generated@@317 ($generated@@85 (type $generated@@316))))
 (=> (= (type $generated@@316) ($generated@@82 $generated@@317 $generated@@2)) (and (= (= ($generated@@313 $generated@@316) 0) (= $generated@@316 ($generated@@314 $generated@@317))) (=> (not (= ($generated@@313 $generated@@316) 0)) (exists (($generated@@318 T@U) ) (!  (and (= (type $generated@@318) $generated@@317) (< 0 ($generated ($generated@@87 $generated@@316 $generated@@318))))
 :no-pattern (type $generated@@318)
 :no-pattern ($generated $generated@@318)
 :no-pattern ($generated@@0 $generated@@318)
))))))
 :pattern ( ($generated@@313 $generated@@316))
)))
(assert  (and (and (and (and (forall (($generated@@324 T@T) ($generated@@325 T@T) ) (= ($generated@@1 ($generated@@321 $generated@@324 $generated@@325)) 18)) (forall (($generated@@326 T@T) ($generated@@327 T@T) ) (! (= ($generated@@322 ($generated@@321 $generated@@326 $generated@@327)) $generated@@326)
 :pattern ( ($generated@@321 $generated@@326 $generated@@327))
))) (forall (($generated@@328 T@T) ($generated@@329 T@T) ) (! (= ($generated@@323 ($generated@@321 $generated@@328 $generated@@329)) $generated@@329)
 :pattern ( ($generated@@321 $generated@@328 $generated@@329))
))) (forall (($generated@@330 T@U) ) (! (let (($generated@@331 ($generated@@322 (type $generated@@330))))
(= (type ($generated@@319 $generated@@330)) ($generated@@82 $generated@@331 $generated@@4)))
 :pattern ( ($generated@@319 $generated@@330))
))) (forall (($generated@@332 T@T) ($generated@@333 T@T) ) (! (= (type ($generated@@320 $generated@@332 $generated@@333)) ($generated@@321 $generated@@332 $generated@@333))
 :pattern ( ($generated@@320 $generated@@332 $generated@@333))
))))
(assert (forall (($generated@@334 T@U) ($generated@@335 T@T) ) (! (let (($generated@@336 (type $generated@@334)))
 (not ($generated@@0 ($generated@@87 ($generated@@319 ($generated@@320 $generated@@336 $generated@@335)) $generated@@334))))
 :pattern ( (let (($generated@@336 (type $generated@@334)))
($generated@@87 ($generated@@319 ($generated@@320 $generated@@336 $generated@@335)) $generated@@334)))
)))
(assert  (and (and (and (and (forall (($generated@@342 T@T) ($generated@@343 T@T) ) (= ($generated@@1 ($generated@@339 $generated@@342 $generated@@343)) 19)) (forall (($generated@@344 T@T) ($generated@@345 T@T) ) (! (= ($generated@@340 ($generated@@339 $generated@@344 $generated@@345)) $generated@@344)
 :pattern ( ($generated@@339 $generated@@344 $generated@@345))
))) (forall (($generated@@346 T@T) ($generated@@347 T@T) ) (! (= ($generated@@341 ($generated@@339 $generated@@346 $generated@@347)) $generated@@347)
 :pattern ( ($generated@@339 $generated@@346 $generated@@347))
))) (forall (($generated@@348 T@U) ) (! (let (($generated@@349 ($generated@@340 (type $generated@@348))))
(= (type ($generated@@337 $generated@@348)) ($generated@@82 $generated@@349 $generated@@4)))
 :pattern ( ($generated@@337 $generated@@348))
))) (forall (($generated@@350 T@T) ($generated@@351 T@T) ) (! (= (type ($generated@@338 $generated@@350 $generated@@351)) ($generated@@339 $generated@@350 $generated@@351))
 :pattern ( ($generated@@338 $generated@@350 $generated@@351))
))))
(assert (forall (($generated@@352 T@U) ($generated@@353 T@T) ) (! (let (($generated@@354 (type $generated@@352)))
 (not ($generated@@0 ($generated@@87 ($generated@@337 ($generated@@338 $generated@@354 $generated@@353)) $generated@@352))))
 :pattern ( (let (($generated@@354 (type $generated@@352)))
($generated@@87 ($generated@@337 ($generated@@338 $generated@@354 $generated@@353)) $generated@@352)))
)))
(assert (forall (($generated@@355 T@U) ) (! (let (($generated@@356 ($generated@@85 (type $generated@@355))))
 (=> (= (type $generated@@355) ($generated@@82 $generated@@356 $generated@@2)) (= ($generated@@167 $generated@@355) (forall (($generated@@357 T@U) ) (!  (=> (= (type $generated@@357) $generated@@356) (and (<= 0 ($generated ($generated@@87 $generated@@355 $generated@@357))) (<= ($generated ($generated@@87 $generated@@355 $generated@@357)) ($generated@@313 $generated@@355))))
 :pattern ( ($generated@@87 $generated@@355 $generated@@357))
)))))
 :pattern ( ($generated@@167 $generated@@355))
)))
(assert (forall (($generated@@359 T@T) ($generated@@360 T@U) ) (! (= (type ($generated@@358 $generated@@359 $generated@@360)) $generated@@359)
 :pattern ( ($generated@@358 $generated@@359 $generated@@360))
)))
(assert (forall (($generated@@361 T@U) ) (!  (=> (and (= (type $generated@@361) $generated@@155) ($generated@@228 $generated@@361 $generated@@235)) (and (= ($generated@@300 ($generated@@358 $generated@@146 $generated@@361)) $generated@@361) ($generated@@142 ($generated@@358 $generated@@146 $generated@@361) $generated@@235)))
 :pattern ( ($generated@@228 $generated@@361 $generated@@235))
)))
(assert (forall (($generated@@362 T@U) ) (! (let (($generated@@363 ($generated@@323 (type $generated@@362))))
(let (($generated@@364 ($generated@@322 (type $generated@@362))))
 (=> (= (type $generated@@362) ($generated@@321 $generated@@364 $generated@@363)) (or (= $generated@@362 ($generated@@320 $generated@@364 $generated@@363)) (exists (($generated@@365 T@U) ) (!  (and (= (type $generated@@365) $generated@@364) ($generated@@0 ($generated@@87 ($generated@@319 $generated@@362) $generated@@365)))
 :no-pattern (type $generated@@365)
 :no-pattern ($generated $generated@@365)
 :no-pattern ($generated@@0 $generated@@365)
))))))
 :pattern ( ($generated@@319 $generated@@362))
)))
(assert (forall (($generated@@367 T@U) ) (! (let (($generated@@368 ($generated@@323 (type $generated@@367))))
(= (type ($generated@@366 $generated@@367)) ($generated@@82 $generated@@368 $generated@@4)))
 :pattern ( ($generated@@366 $generated@@367))
)))
(assert (forall (($generated@@369 T@U) ) (! (let (($generated@@370 ($generated@@323 (type $generated@@369))))
(let (($generated@@371 ($generated@@322 (type $generated@@369))))
 (=> (= (type $generated@@369) ($generated@@321 $generated@@371 $generated@@370)) (or (= $generated@@369 ($generated@@320 $generated@@371 $generated@@370)) (exists (($generated@@372 T@U) ) (!  (and (= (type $generated@@372) $generated@@370) ($generated@@0 ($generated@@87 ($generated@@366 $generated@@369) $generated@@372)))
 :no-pattern (type $generated@@372)
 :no-pattern ($generated $generated@@372)
 :no-pattern ($generated@@0 $generated@@372)
))))))
 :pattern ( ($generated@@366 $generated@@369))
)))
(assert (forall (($generated@@373 T@U) ) (! (let (($generated@@374 ($generated@@341 (type $generated@@373))))
(let (($generated@@375 ($generated@@340 (type $generated@@373))))
 (=> (= (type $generated@@373) ($generated@@339 $generated@@375 $generated@@374)) (or (= $generated@@373 ($generated@@338 $generated@@375 $generated@@374)) (exists (($generated@@376 T@U) ) (!  (and (= (type $generated@@376) $generated@@375) ($generated@@0 ($generated@@87 ($generated@@337 $generated@@373) $generated@@376)))
 :no-pattern (type $generated@@376)
 :no-pattern ($generated $generated@@376)
 :no-pattern ($generated@@0 $generated@@376)
))))))
 :pattern ( ($generated@@337 $generated@@373))
)))
(assert (forall (($generated@@378 T@U) ) (! (let (($generated@@379 ($generated@@341 (type $generated@@378))))
(= (type ($generated@@377 $generated@@378)) ($generated@@82 $generated@@379 $generated@@4)))
 :pattern ( ($generated@@377 $generated@@378))
)))
(assert (forall (($generated@@380 T@U) ) (! (let (($generated@@381 ($generated@@341 (type $generated@@380))))
(let (($generated@@382 ($generated@@340 (type $generated@@380))))
 (=> (= (type $generated@@380) ($generated@@339 $generated@@382 $generated@@381)) (or (= $generated@@380 ($generated@@338 $generated@@382 $generated@@381)) (exists (($generated@@383 T@U) ) (!  (and (= (type $generated@@383) $generated@@381) ($generated@@0 ($generated@@87 ($generated@@377 $generated@@380) $generated@@383)))
 :no-pattern (type $generated@@383)
 :no-pattern ($generated $generated@@383)
 :no-pattern ($generated@@0 $generated@@383)
))))))
 :pattern ( ($generated@@377 $generated@@380))
)))
(assert (forall (($generated@@384 T@U) ($generated@@385 T@U) ) (!  (=> (and (= (type $generated@@384) ($generated@@82 $generated@@155 $generated@@2)) (= (type $generated@@385) $generated@@70)) (= ($generated@@142 $generated@@384 ($generated@@166 $generated@@385)) (forall (($generated@@386 T@U) ) (!  (=> (and (= (type $generated@@386) $generated@@155) (< 0 ($generated ($generated@@87 $generated@@384 $generated@@386)))) ($generated@@228 $generated@@386 $generated@@385))
 :pattern ( ($generated@@87 $generated@@384 $generated@@386))
))))
 :pattern ( ($generated@@142 $generated@@384 ($generated@@166 $generated@@385)))
)))
(assert (forall (($generated@@387 T@U) ($generated@@388 T@U) ($generated@@389 T@U) ) (!  (=> (and (and (= (type $generated@@387) ($generated@@82 $generated@@155 $generated@@4)) (= (type $generated@@388) $generated@@70)) (= (type $generated@@389) ($generated@@82 $generated@@83 $generated@@84))) (= ($generated@@80 $generated@@387 ($generated@@246 $generated@@388) $generated@@389) (forall (($generated@@390 T@U) ) (!  (=> (and (= (type $generated@@390) $generated@@155) ($generated@@0 ($generated@@87 $generated@@387 $generated@@390))) ($generated@@274 $generated@@390 $generated@@388 $generated@@389))
 :pattern ( ($generated@@87 $generated@@387 $generated@@390))
))))
 :pattern ( ($generated@@80 $generated@@387 ($generated@@246 $generated@@388) $generated@@389))
)))
(assert (forall (($generated@@391 T@U) ($generated@@392 T@U) ($generated@@393 T@U) ) (!  (=> (and (and (= (type $generated@@391) ($generated@@82 $generated@@155 $generated@@4)) (= (type $generated@@392) $generated@@70)) (= (type $generated@@393) ($generated@@82 $generated@@83 $generated@@84))) (= ($generated@@80 $generated@@391 ($generated@@251 $generated@@392) $generated@@393) (forall (($generated@@394 T@U) ) (!  (=> (and (= (type $generated@@394) $generated@@155) ($generated@@0 ($generated@@87 $generated@@391 $generated@@394))) ($generated@@274 $generated@@394 $generated@@392 $generated@@393))
 :pattern ( ($generated@@87 $generated@@391 $generated@@394))
))))
 :pattern ( ($generated@@80 $generated@@391 ($generated@@251 $generated@@392) $generated@@393))
)))
(assert (forall (($generated@@395 T@U) ) (! (let (($generated@@396 (type $generated@@395)))
(= ($generated ($generated@@87 ($generated@@314 $generated@@396) $generated@@395)) 0))
 :pattern ( (let (($generated@@396 (type $generated@@395)))
($generated@@87 ($generated@@314 $generated@@396) $generated@@395)))
)))
(assert  (and (forall (($generated@@399 T@U) ) (! (= (type ($generated@@397 $generated@@399)) ($generated@@82 $generated@@155 $generated@@4))
 :pattern ( ($generated@@397 $generated@@399))
)) (forall (($generated@@400 T@U) ) (! (let (($generated@@401 ($generated@@323 (type $generated@@400))))
(let (($generated@@402 ($generated@@322 (type $generated@@400))))
(= (type ($generated@@398 $generated@@400)) ($generated@@82 $generated@@402 $generated@@401))))
 :pattern ( ($generated@@398 $generated@@400))
))))
(assert (forall (($generated@@403 T@U) ($generated@@404 T@U) ) (!  (=> (and (= (type $generated@@403) ($generated@@321 $generated@@155 $generated@@155)) (= (type $generated@@404) $generated@@155)) (= ($generated@@0 ($generated@@87 ($generated@@397 $generated@@403) $generated@@404))  (and ($generated@@0 ($generated@@87 ($generated@@319 $generated@@403) ($generated@@153 ($generated@@358 $generated@@146 $generated@@404)))) (= ($generated@@87 ($generated@@398 $generated@@403) ($generated@@153 ($generated@@358 $generated@@146 $generated@@404))) ($generated@@154 ($generated@@358 $generated@@146 $generated@@404))))))
 :pattern ( ($generated@@87 ($generated@@397 $generated@@403) $generated@@404))
)))
(assert  (and (forall (($generated@@407 T@U) ) (! (= (type ($generated@@405 $generated@@407)) ($generated@@82 $generated@@155 $generated@@4))
 :pattern ( ($generated@@405 $generated@@407))
)) (forall (($generated@@408 T@U) ) (! (let (($generated@@409 ($generated@@341 (type $generated@@408))))
(let (($generated@@410 ($generated@@340 (type $generated@@408))))
(= (type ($generated@@406 $generated@@408)) ($generated@@82 $generated@@410 $generated@@409))))
 :pattern ( ($generated@@406 $generated@@408))
))))
(assert (forall (($generated@@411 T@U) ($generated@@412 T@U) ) (!  (=> (and (= (type $generated@@411) ($generated@@339 $generated@@155 $generated@@155)) (= (type $generated@@412) $generated@@155)) (= ($generated@@0 ($generated@@87 ($generated@@405 $generated@@411) $generated@@412))  (and ($generated@@0 ($generated@@87 ($generated@@337 $generated@@411) ($generated@@153 ($generated@@358 $generated@@146 $generated@@412)))) (= ($generated@@87 ($generated@@406 $generated@@411) ($generated@@153 ($generated@@358 $generated@@146 $generated@@412))) ($generated@@154 ($generated@@358 $generated@@146 $generated@@412))))))
 :pattern ( ($generated@@87 ($generated@@405 $generated@@411) $generated@@412))
)))
(assert (forall (($generated@@413 T@U) ($generated@@414 T@U) ) (! (let (($generated@@415 (type $generated@@414)))
(let (($generated@@416 ($generated@@322 (type $generated@@413))))
 (=> (= (type $generated@@413) ($generated@@321 $generated@@416 $generated@@415)) (= ($generated@@0 ($generated@@87 ($generated@@366 $generated@@413) $generated@@414)) (exists (($generated@@417 T@U) ) (!  (and (= (type $generated@@417) $generated@@416) (and ($generated@@0 ($generated@@87 ($generated@@319 $generated@@413) $generated@@417)) (= $generated@@414 ($generated@@87 ($generated@@398 $generated@@413) $generated@@417))))
 :pattern ( ($generated@@87 ($generated@@319 $generated@@413) $generated@@417))
 :pattern ( ($generated@@87 ($generated@@398 $generated@@413) $generated@@417))
))))))
 :pattern ( ($generated@@87 ($generated@@366 $generated@@413) $generated@@414))
)))
(assert (forall (($generated@@418 T@U) ($generated@@419 T@U) ) (! (let (($generated@@420 (type $generated@@419)))
(let (($generated@@421 ($generated@@340 (type $generated@@418))))
 (=> (= (type $generated@@418) ($generated@@339 $generated@@421 $generated@@420)) (= ($generated@@0 ($generated@@87 ($generated@@377 $generated@@418) $generated@@419)) (exists (($generated@@422 T@U) ) (!  (and (= (type $generated@@422) $generated@@421) (and ($generated@@0 ($generated@@87 ($generated@@337 $generated@@418) $generated@@422)) (= $generated@@419 ($generated@@87 ($generated@@406 $generated@@418) $generated@@422))))
 :pattern ( ($generated@@87 ($generated@@337 $generated@@418) $generated@@422))
 :pattern ( ($generated@@87 ($generated@@406 $generated@@418) $generated@@422))
))))))
 :pattern ( ($generated@@87 ($generated@@377 $generated@@418) $generated@@419))
)))
(assert (forall (($generated@@424 T@U) ($generated@@425 T@U) ) (! (= (type ($generated@@423 $generated@@424 $generated@@425)) $generated@@70)
 :pattern ( ($generated@@423 $generated@@424 $generated@@425))
)))
(assert (forall (($generated@@426 T@U) ($generated@@427 T@U) ($generated@@428 T@U) ($generated@@429 T@U) ) (!  (=> (and (and (and (= (type $generated@@426) ($generated@@321 $generated@@155 $generated@@155)) (= (type $generated@@427) $generated@@70)) (= (type $generated@@428) $generated@@70)) (= (type $generated@@429) ($generated@@82 $generated@@83 $generated@@84))) (= ($generated@@80 $generated@@426 ($generated@@423 $generated@@427 $generated@@428) $generated@@429) (forall (($generated@@430 T@U) ) (!  (=> (and (= (type $generated@@430) $generated@@155) ($generated@@0 ($generated@@87 ($generated@@319 $generated@@426) $generated@@430))) (and ($generated@@274 ($generated@@87 ($generated@@398 $generated@@426) $generated@@430) $generated@@428 $generated@@429) ($generated@@274 $generated@@430 $generated@@427 $generated@@429)))
 :pattern ( ($generated@@87 ($generated@@398 $generated@@426) $generated@@430))
 :pattern ( ($generated@@87 ($generated@@319 $generated@@426) $generated@@430))
))))
 :pattern ( ($generated@@80 $generated@@426 ($generated@@423 $generated@@427 $generated@@428) $generated@@429))
)))
(assert (forall (($generated@@432 T@U) ($generated@@433 T@U) ) (! (= (type ($generated@@431 $generated@@432 $generated@@433)) $generated@@70)
 :pattern ( ($generated@@431 $generated@@432 $generated@@433))
)))
(assert (forall (($generated@@434 T@U) ($generated@@435 T@U) ($generated@@436 T@U) ($generated@@437 T@U) ) (!  (=> (and (and (and (= (type $generated@@434) ($generated@@339 $generated@@155 $generated@@155)) (= (type $generated@@435) $generated@@70)) (= (type $generated@@436) $generated@@70)) (= (type $generated@@437) ($generated@@82 $generated@@83 $generated@@84))) (= ($generated@@80 $generated@@434 ($generated@@431 $generated@@435 $generated@@436) $generated@@437) (forall (($generated@@438 T@U) ) (!  (=> (and (= (type $generated@@438) $generated@@155) ($generated@@0 ($generated@@87 ($generated@@337 $generated@@434) $generated@@438))) (and ($generated@@274 ($generated@@87 ($generated@@406 $generated@@434) $generated@@438) $generated@@436 $generated@@437) ($generated@@274 $generated@@438 $generated@@435 $generated@@437)))
 :pattern ( ($generated@@87 ($generated@@406 $generated@@434) $generated@@438))
 :pattern ( ($generated@@87 ($generated@@337 $generated@@434) $generated@@438))
))))
 :pattern ( ($generated@@80 $generated@@434 ($generated@@431 $generated@@435 $generated@@436) $generated@@437))
)))
(assert (forall (($generated@@439 T@U) ($generated@@440 T@U) ($generated@@441 T@U) ) (!  (=> (and (and (and (and (= (type $generated@@439) ($generated@@82 $generated@@83 $generated@@84)) (= (type $generated@@440) ($generated@@82 $generated@@83 $generated@@84))) (= (type $generated@@441) ($generated@@82 $generated@@83 $generated@@84))) (not (= $generated@@439 $generated@@441))) (and ($generated@@138 $generated@@439 $generated@@440) ($generated@@138 $generated@@440 $generated@@441))) ($generated@@138 $generated@@439 $generated@@441))
 :pattern ( ($generated@@138 $generated@@439 $generated@@440) ($generated@@138 $generated@@440 $generated@@441))
)))
(assert (forall (($generated@@443 T@T) ) (! (= (type ($generated@@442 $generated@@443)) ($generated@@82 $generated@@443 $generated@@4))
 :pattern ( ($generated@@442 $generated@@443))
)))
(assert (forall (($generated@@444 T@U) ) (! (let (($generated@@445 ($generated@@341 (type $generated@@444))))
(let (($generated@@446 ($generated@@340 (type $generated@@444))))
 (=> (= (type $generated@@444) ($generated@@339 $generated@@446 $generated@@445)) (= (= $generated@@444 ($generated@@338 $generated@@446 $generated@@445)) (= ($generated@@337 $generated@@444) ($generated@@442 $generated@@446))))))
 :pattern ( ($generated@@337 $generated@@444))
)))
(assert (forall (($generated@@447 T@U) ) (! (let (($generated@@448 ($generated@@341 (type $generated@@447))))
(let (($generated@@449 ($generated@@340 (type $generated@@447))))
 (=> (= (type $generated@@447) ($generated@@339 $generated@@449 $generated@@448)) (= (= $generated@@447 ($generated@@338 $generated@@449 $generated@@448)) (= ($generated@@377 $generated@@447) ($generated@@442 $generated@@448))))))
 :pattern ( ($generated@@377 $generated@@447))
)))
(assert (forall (($generated@@450 T@U) ) (! (let (($generated@@451 ($generated@@341 (type $generated@@450))))
(let (($generated@@452 ($generated@@340 (type $generated@@450))))
 (=> (= (type $generated@@450) ($generated@@339 $generated@@452 $generated@@451)) (= (= $generated@@450 ($generated@@338 $generated@@452 $generated@@451)) (= ($generated@@405 $generated@@450) ($generated@@442 $generated@@155))))))
 :pattern ( ($generated@@405 $generated@@450))
)))
(assert (forall (($generated@@453 T@U) ) (! (let (($generated@@454 ($generated@@323 (type $generated@@453))))
(let (($generated@@455 ($generated@@322 (type $generated@@453))))
 (=> (= (type $generated@@453) ($generated@@321 $generated@@455 $generated@@454)) (or (= $generated@@453 ($generated@@320 $generated@@455 $generated@@454)) (exists (($generated@@456 T@U) ($generated@@457 T@U) ) (!  (and (and (= (type $generated@@456) $generated@@155) (= (type $generated@@457) $generated@@155)) ($generated@@0 ($generated@@87 ($generated@@397 $generated@@453) ($generated@@300 ($generated@@227 $generated@@456 $generated@@457)))))
 :no-pattern (type $generated@@456)
 :no-pattern (type $generated@@457)
 :no-pattern ($generated $generated@@456)
 :no-pattern ($generated@@0 $generated@@456)
 :no-pattern ($generated $generated@@457)
 :no-pattern ($generated@@0 $generated@@457)
))))))
 :pattern ( ($generated@@397 $generated@@453))
)))
(assert (forall (($generated@@458 T@U) ) (! (let (($generated@@459 ($generated@@341 (type $generated@@458))))
(let (($generated@@460 ($generated@@340 (type $generated@@458))))
 (=> (= (type $generated@@458) ($generated@@339 $generated@@460 $generated@@459)) (or (= $generated@@458 ($generated@@338 $generated@@460 $generated@@459)) (exists (($generated@@461 T@U) ($generated@@462 T@U) ) (!  (and (and (= (type $generated@@461) $generated@@155) (= (type $generated@@462) $generated@@155)) ($generated@@0 ($generated@@87 ($generated@@405 $generated@@458) ($generated@@300 ($generated@@227 $generated@@461 $generated@@462)))))
 :no-pattern (type $generated@@461)
 :no-pattern (type $generated@@462)
 :no-pattern ($generated $generated@@461)
 :no-pattern ($generated@@0 $generated@@461)
 :no-pattern ($generated $generated@@462)
 :no-pattern ($generated@@0 $generated@@462)
))))))
 :pattern ( ($generated@@405 $generated@@458))
)))
(assert (forall (($generated@@463 T@U) ) (!  (=> (and (= (type $generated@@463) $generated@@155) ($generated@@228 $generated@@463 $generated@@46)) (and (= ($generated@@300 ($generated@@358 $generated@@2 $generated@@463)) $generated@@463) ($generated@@142 ($generated@@358 $generated@@2 $generated@@463) $generated@@46)))
 :pattern ( ($generated@@228 $generated@@463 $generated@@46))
)))
(assert (forall (($generated@@464 T@U) ) (!  (=> (and (= (type $generated@@464) $generated@@155) ($generated@@228 $generated@@464 $generated@@47)) (and (= ($generated@@300 ($generated@@358 $generated@@3 $generated@@464)) $generated@@464) ($generated@@142 ($generated@@358 $generated@@3 $generated@@464) $generated@@47)))
 :pattern ( ($generated@@228 $generated@@464 $generated@@47))
)))
(assert (forall (($generated@@465 T@U) ) (!  (=> (and (= (type $generated@@465) $generated@@155) ($generated@@228 $generated@@465 $generated@@44)) (and (= ($generated@@300 ($generated@@358 $generated@@4 $generated@@465)) $generated@@465) ($generated@@142 ($generated@@358 $generated@@4 $generated@@465) $generated@@44)))
 :pattern ( ($generated@@228 $generated@@465 $generated@@44))
)))
(assert (= ($generated@@1 $generated@@466) 20))
(assert (forall (($generated@@467 T@U) ) (!  (=> (and (= (type $generated@@467) $generated@@155) ($generated@@228 $generated@@467 $generated@@45)) (and (= ($generated@@300 ($generated@@358 $generated@@466 $generated@@467)) $generated@@467) ($generated@@142 ($generated@@358 $generated@@466 $generated@@467) $generated@@45)))
 :pattern ( ($generated@@228 $generated@@467 $generated@@45))
)))
(assert (forall (($generated@@468 T@U) ($generated@@469 T@U) ) (!  (=> (= (type $generated@@469) $generated@@70) (= ($generated@@228 ($generated@@300 $generated@@468) $generated@@469) ($generated@@142 $generated@@468 $generated@@469)))
 :pattern ( ($generated@@228 ($generated@@300 $generated@@468) $generated@@469))
)))
(assert (forall (($generated@@470 T@U) ) (! (let (($generated@@471 ($generated@@85 (type $generated@@470))))
 (=> (= (type $generated@@470) ($generated@@82 $generated@@471 $generated@@2)) (<= 0 ($generated@@313 $generated@@470))))
 :pattern ( ($generated@@313 $generated@@470))
)))
(assert (forall (($generated@@472 T@U) ) (! (let (($generated@@473 ($generated@@291 (type $generated@@472))))
 (=> (= (type $generated@@472) ($generated@@290 $generated@@473)) (<= 0 ($generated@@289 $generated@@472))))
 :pattern ( ($generated@@289 $generated@@472))
)))
(assert (forall (($generated@@475 T@U) ) (! (= (type ($generated@@474 $generated@@475)) $generated@@70)
 :pattern ( ($generated@@474 $generated@@475))
)))
(assert (forall (($generated@@476 T@U) ($generated@@477 T@U) ) (!  (=> (and (= (type $generated@@476) $generated@@70) (= (type $generated@@477) $generated@@70)) (= ($generated@@474 ($generated@@423 $generated@@476 $generated@@477)) $generated@@476))
 :pattern ( ($generated@@423 $generated@@476 $generated@@477))
)))
(assert (forall (($generated@@479 T@U) ) (! (= (type ($generated@@478 $generated@@479)) $generated@@70)
 :pattern ( ($generated@@478 $generated@@479))
)))
(assert (forall (($generated@@480 T@U) ($generated@@481 T@U) ) (!  (=> (and (= (type $generated@@480) $generated@@70) (= (type $generated@@481) $generated@@70)) (= ($generated@@478 ($generated@@423 $generated@@480 $generated@@481)) $generated@@481))
 :pattern ( ($generated@@423 $generated@@480 $generated@@481))
)))
(assert (forall (($generated@@482 T@U) ($generated@@483 T@U) ) (!  (=> (and (= (type $generated@@482) $generated@@70) (= (type $generated@@483) $generated@@70)) (= ($generated@@78 ($generated@@423 $generated@@482 $generated@@483)) $generated@@58))
 :pattern ( ($generated@@423 $generated@@482 $generated@@483))
)))
(assert (forall (($generated@@485 T@U) ) (! (= (type ($generated@@484 $generated@@485)) $generated@@70)
 :pattern ( ($generated@@484 $generated@@485))
)))
(assert (forall (($generated@@486 T@U) ($generated@@487 T@U) ) (!  (=> (and (= (type $generated@@486) $generated@@70) (= (type $generated@@487) $generated@@70)) (= ($generated@@484 ($generated@@431 $generated@@486 $generated@@487)) $generated@@486))
 :pattern ( ($generated@@431 $generated@@486 $generated@@487))
)))
(assert (forall (($generated@@489 T@U) ) (! (= (type ($generated@@488 $generated@@489)) $generated@@70)
 :pattern ( ($generated@@488 $generated@@489))
)))
(assert (forall (($generated@@490 T@U) ($generated@@491 T@U) ) (!  (=> (and (= (type $generated@@490) $generated@@70) (= (type $generated@@491) $generated@@70)) (= ($generated@@488 ($generated@@431 $generated@@490 $generated@@491)) $generated@@491))
 :pattern ( ($generated@@431 $generated@@490 $generated@@491))
)))
(assert (forall (($generated@@492 T@U) ($generated@@493 T@U) ) (!  (=> (and (= (type $generated@@492) $generated@@70) (= (type $generated@@493) $generated@@70)) (= ($generated@@78 ($generated@@431 $generated@@492 $generated@@493)) $generated@@59))
 :pattern ( ($generated@@431 $generated@@492 $generated@@493))
)))
(assert (forall (($generated@@494 T@U) ($generated@@495 T@U) ) (!  (=> (and (= (type $generated@@494) $generated@@155) (= (type $generated@@495) $generated@@155)) (= ($generated@@160 ($generated@@227 $generated@@494 $generated@@495)) $generated@@61))
 :pattern ( ($generated@@227 $generated@@494 $generated@@495))
)))
(assert (forall (($generated@@497 T@U) ) (! (= (type ($generated@@496 $generated@@497)) $generated@@70)
 :pattern ( ($generated@@496 $generated@@497))
)))
(assert (forall (($generated@@498 T@U) ($generated@@499 T@U) ) (!  (=> (and (= (type $generated@@498) $generated@@70) (= (type $generated@@499) $generated@@70)) (= ($generated@@496 ($generated@@145 $generated@@498 $generated@@499)) $generated@@498))
 :pattern ( ($generated@@145 $generated@@498 $generated@@499))
)))
(assert (forall (($generated@@501 T@U) ) (! (= (type ($generated@@500 $generated@@501)) $generated@@70)
 :pattern ( ($generated@@500 $generated@@501))
)))
(assert (forall (($generated@@502 T@U) ($generated@@503 T@U) ) (!  (=> (and (= (type $generated@@502) $generated@@70) (= (type $generated@@503) $generated@@70)) (= ($generated@@500 ($generated@@145 $generated@@502 $generated@@503)) $generated@@503))
 :pattern ( ($generated@@145 $generated@@502 $generated@@503))
)))
(assert (forall (($generated@@504 T@U) ($generated@@505 T@U) ) (!  (=> (and (= (type $generated@@504) $generated@@155) (= (type $generated@@505) $generated@@155)) (= ($generated@@153 ($generated@@227 $generated@@504 $generated@@505)) $generated@@504))
 :pattern ( ($generated@@227 $generated@@504 $generated@@505))
)))
(assert (forall (($generated@@506 T@U) ($generated@@507 T@U) ) (!  (=> (and (= (type $generated@@506) $generated@@155) (= (type $generated@@507) $generated@@155)) (= ($generated@@154 ($generated@@227 $generated@@506 $generated@@507)) $generated@@507))
 :pattern ( ($generated@@227 $generated@@506 $generated@@507))
)))
(assert  (and (forall (($generated@@510 T@U) ) (! (= (type ($generated@@508 $generated@@510)) $generated@@70)
 :pattern ( ($generated@@508 $generated@@510))
)) (forall (($generated@@511 T@U) ($generated@@512 Int) ) (! (let (($generated@@513 ($generated@@291 (type $generated@@511))))
(= (type ($generated@@509 $generated@@511 $generated@@512)) $generated@@513))
 :pattern ( ($generated@@509 $generated@@511 $generated@@512))
))))
(assert (forall (($generated@@514 T@U) ($generated@@515 T@U) ($generated@@516 T@U) ) (!  (=> (and (and (= (type $generated@@514) ($generated@@290 $generated@@155)) (= (type $generated@@515) $generated@@70)) (= (type $generated@@516) ($generated@@82 $generated@@83 $generated@@84))) (= ($generated@@80 $generated@@514 ($generated@@508 $generated@@515) $generated@@516) (forall (($generated@@517 Int) ) (!  (=> (and (<= 0 $generated@@517) (< $generated@@517 ($generated@@289 $generated@@514))) ($generated@@274 ($generated@@509 $generated@@514 $generated@@517) $generated@@515 $generated@@516))
 :pattern ( ($generated@@509 $generated@@514 $generated@@517))
))))
 :pattern ( ($generated@@80 $generated@@514 ($generated@@508 $generated@@515) $generated@@516))
)))
(assert (forall (($generated@@519 Int) ) (! (= ($generated@@518 ($generated@@81 $generated@@519)) $generated@@519)
 :pattern ( ($generated@@81 $generated@@519))
)))
(assert (forall (($generated@@521 T@U) ) (! (= (type ($generated@@520 $generated@@521)) $generated@@70)
 :pattern ( ($generated@@520 $generated@@521))
)))
(assert (forall (($generated@@522 T@U) ) (!  (=> (= (type $generated@@522) $generated@@70) (= ($generated@@520 ($generated@@246 $generated@@522)) $generated@@522))
 :pattern ( ($generated@@246 $generated@@522))
)))
(assert (forall (($generated@@523 T@U) ) (!  (=> (= (type $generated@@523) $generated@@70) (= ($generated@@78 ($generated@@246 $generated@@523)) $generated@@54))
 :pattern ( ($generated@@246 $generated@@523))
)))
(assert (forall (($generated@@525 T@U) ) (! (= (type ($generated@@524 $generated@@525)) $generated@@70)
 :pattern ( ($generated@@524 $generated@@525))
)))
(assert (forall (($generated@@526 T@U) ) (!  (=> (= (type $generated@@526) $generated@@70) (= ($generated@@524 ($generated@@251 $generated@@526)) $generated@@526))
 :pattern ( ($generated@@251 $generated@@526))
)))
(assert (forall (($generated@@527 T@U) ) (!  (=> (= (type $generated@@527) $generated@@70) (= ($generated@@78 ($generated@@251 $generated@@527)) $generated@@55))
 :pattern ( ($generated@@251 $generated@@527))
)))
(assert (forall (($generated@@529 T@U) ) (! (= (type ($generated@@528 $generated@@529)) $generated@@70)
 :pattern ( ($generated@@528 $generated@@529))
)))
(assert (forall (($generated@@530 T@U) ) (!  (=> (= (type $generated@@530) $generated@@70) (= ($generated@@528 ($generated@@166 $generated@@530)) $generated@@530))
 :pattern ( ($generated@@166 $generated@@530))
)))
(assert (forall (($generated@@531 T@U) ) (!  (=> (= (type $generated@@531) $generated@@70) (= ($generated@@78 ($generated@@166 $generated@@531)) $generated@@56))
 :pattern ( ($generated@@166 $generated@@531))
)))
(assert (forall (($generated@@533 T@U) ) (! (= (type ($generated@@532 $generated@@533)) $generated@@70)
 :pattern ( ($generated@@532 $generated@@533))
)))
(assert (forall (($generated@@534 T@U) ) (!  (=> (= (type $generated@@534) $generated@@70) (= ($generated@@532 ($generated@@508 $generated@@534)) $generated@@534))
 :pattern ( ($generated@@508 $generated@@534))
)))
(assert (forall (($generated@@535 T@U) ) (!  (=> (= (type $generated@@535) $generated@@70) (= ($generated@@78 ($generated@@508 $generated@@535)) $generated@@57))
 :pattern ( ($generated@@508 $generated@@535))
)))
(assert (forall (($generated@@536 T@U) ) (! (let (($generated@@537 (type $generated@@536)))
(= ($generated@@358 $generated@@537 ($generated@@300 $generated@@536)) $generated@@536))
 :pattern ( ($generated@@300 $generated@@536))
)))
(assert (forall (($generated@@538 T@U) ($generated@@539 T@U) ($generated@@540 T@U) ) (!  (=> (and (and (= (type $generated@@538) ($generated@@321 $generated@@155 $generated@@155)) (= (type $generated@@539) $generated@@70)) (= (type $generated@@540) $generated@@70)) (= ($generated@@142 $generated@@538 ($generated@@423 $generated@@539 $generated@@540)) (forall (($generated@@541 T@U) ) (!  (=> (and (= (type $generated@@541) $generated@@155) ($generated@@0 ($generated@@87 ($generated@@319 $generated@@538) $generated@@541))) (and ($generated@@228 ($generated@@87 ($generated@@398 $generated@@538) $generated@@541) $generated@@540) ($generated@@228 $generated@@541 $generated@@539)))
 :pattern ( ($generated@@87 ($generated@@398 $generated@@538) $generated@@541))
 :pattern ( ($generated@@87 ($generated@@319 $generated@@538) $generated@@541))
))))
 :pattern ( ($generated@@142 $generated@@538 ($generated@@423 $generated@@539 $generated@@540)))
)))
(assert (forall (($generated@@542 T@U) ($generated@@543 T@U) ($generated@@544 T@U) ) (!  (=> (and (and (= (type $generated@@542) ($generated@@339 $generated@@155 $generated@@155)) (= (type $generated@@543) $generated@@70)) (= (type $generated@@544) $generated@@70)) (= ($generated@@142 $generated@@542 ($generated@@431 $generated@@543 $generated@@544)) (forall (($generated@@545 T@U) ) (!  (=> (and (= (type $generated@@545) $generated@@155) ($generated@@0 ($generated@@87 ($generated@@337 $generated@@542) $generated@@545))) (and ($generated@@228 ($generated@@87 ($generated@@406 $generated@@542) $generated@@545) $generated@@544) ($generated@@228 $generated@@545 $generated@@543)))
 :pattern ( ($generated@@87 ($generated@@406 $generated@@542) $generated@@545))
 :pattern ( ($generated@@87 ($generated@@337 $generated@@542) $generated@@545))
))))
 :pattern ( ($generated@@142 $generated@@542 ($generated@@431 $generated@@543 $generated@@544)))
)))
(assert (forall (($generated@@548 T@U) ($generated@@549 T@U) ) (!  (=> (and (= (type $generated@@548) $generated@@155) (= (type $generated@@549) $generated@@155)) (< ($generated@@546 $generated@@548) ($generated@@547 ($generated@@227 $generated@@548 $generated@@549))))
 :pattern ( ($generated@@227 $generated@@548 $generated@@549))
)))
(assert (forall (($generated@@550 T@U) ($generated@@551 T@U) ) (!  (=> (and (= (type $generated@@550) $generated@@155) (= (type $generated@@551) $generated@@155)) (< ($generated@@546 $generated@@551) ($generated@@547 ($generated@@227 $generated@@550 $generated@@551))))
 :pattern ( ($generated@@227 $generated@@550 $generated@@551))
)))
(assert (forall (($generated@@552 T@U) ($generated@@553 T@U) ($generated@@554 T@U) ) (!  (=> (and (and (and (= (type $generated@@552) $generated@@155) (= (type $generated@@553) $generated@@70)) (= (type $generated@@554) $generated@@70)) ($generated@@228 $generated@@552 ($generated@@423 $generated@@553 $generated@@554))) (and (= ($generated@@300 ($generated@@358 ($generated@@321 $generated@@155 $generated@@155) $generated@@552)) $generated@@552) ($generated@@142 ($generated@@358 ($generated@@321 $generated@@155 $generated@@155) $generated@@552) ($generated@@423 $generated@@553 $generated@@554))))
 :pattern ( ($generated@@228 $generated@@552 ($generated@@423 $generated@@553 $generated@@554)))
)))
(assert (forall (($generated@@555 T@U) ($generated@@556 T@U) ($generated@@557 T@U) ) (!  (=> (and (and (and (= (type $generated@@555) $generated@@155) (= (type $generated@@556) $generated@@70)) (= (type $generated@@557) $generated@@70)) ($generated@@228 $generated@@555 ($generated@@431 $generated@@556 $generated@@557))) (and (= ($generated@@300 ($generated@@358 ($generated@@339 $generated@@155 $generated@@155) $generated@@555)) $generated@@555) ($generated@@142 ($generated@@358 ($generated@@339 $generated@@155 $generated@@155) $generated@@555) ($generated@@431 $generated@@556 $generated@@557))))
 :pattern ( ($generated@@228 $generated@@555 ($generated@@431 $generated@@556 $generated@@557)))
)))
(assert (forall (($generated@@558 T@U) ($generated@@559 T@U) ($generated@@560 T@U) ) (!  (=> (and (and (and (= (type $generated@@558) $generated@@70) (= (type $generated@@559) $generated@@70)) (= (type $generated@@560) $generated@@155)) ($generated@@228 $generated@@560 ($generated@@145 $generated@@558 $generated@@559))) (and (= ($generated@@300 ($generated@@358 $generated@@146 $generated@@560)) $generated@@560) ($generated@@142 ($generated@@358 $generated@@146 $generated@@560) ($generated@@145 $generated@@558 $generated@@559))))
 :pattern ( ($generated@@228 $generated@@560 ($generated@@145 $generated@@558 $generated@@559)))
)))
(assert (forall (($generated@@561 T@U) ) (! (let (($generated@@562 (type $generated@@561)))
 (not ($generated@@0 ($generated@@87 ($generated@@442 $generated@@562) $generated@@561))))
 :pattern ( (let (($generated@@562 (type $generated@@561)))
($generated@@87 ($generated@@442 $generated@@562) $generated@@561)))
)))
(assert (forall (($generated@@564 Int) ($generated@@565 Int) ) (! (= ($generated@@563 $generated@@564 $generated@@565) (mod $generated@@564 $generated@@565))
 :pattern ( ($generated@@563 $generated@@564 $generated@@565))
)))
(assert (forall (($generated@@567 T@U) ) (! (= (type ($generated@@566 $generated@@567)) $generated@@75)
 :pattern ( ($generated@@566 $generated@@567))
)))
(assert (forall (($generated@@568 T@U) ($generated@@569 T@U) ) (!  (=> (and (= (type $generated@@568) $generated@@70) (= (type $generated@@569) $generated@@70)) (and (= ($generated@@78 ($generated@@145 $generated@@568 $generated@@569)) $generated@@62) (= ($generated@@566 ($generated@@145 $generated@@568 $generated@@569)) $generated@@68)))
 :pattern ( ($generated@@145 $generated@@568 $generated@@569))
)))
(assert (forall (($generated@@570 T@U) ) (!  (=> (= (type $generated@@570) $generated@@146) (= ($generated@@546 ($generated@@300 $generated@@570)) ($generated@@547 $generated@@570)))
 :pattern ( ($generated@@546 ($generated@@300 $generated@@570)))
)))
(assert (forall (($generated@@571 T@U) ) (!  (=> (and (= (type $generated@@571) $generated@@155) ($generated@@228 $generated@@571 ($generated@@81 0))) (and (= ($generated@@300 ($generated@@358 $generated@@2 $generated@@571)) $generated@@571) ($generated@@142 ($generated@@358 ($generated@@82 $generated@@155 $generated@@4) $generated@@571) ($generated@@81 0))))
 :pattern ( ($generated@@228 $generated@@571 ($generated@@81 0)))
)))
(assert (forall (($generated@@572 T@U) ($generated@@573 T@U) ) (!  (=> (and (and (= (type $generated@@572) $generated@@155) (= (type $generated@@573) $generated@@70)) ($generated@@228 $generated@@572 ($generated@@246 $generated@@573))) (and (= ($generated@@300 ($generated@@358 ($generated@@82 $generated@@155 $generated@@4) $generated@@572)) $generated@@572) ($generated@@142 ($generated@@358 ($generated@@82 $generated@@155 $generated@@4) $generated@@572) ($generated@@246 $generated@@573))))
 :pattern ( ($generated@@228 $generated@@572 ($generated@@246 $generated@@573)))
)))
(assert (forall (($generated@@574 T@U) ($generated@@575 T@U) ) (!  (=> (and (and (= (type $generated@@574) $generated@@155) (= (type $generated@@575) $generated@@70)) ($generated@@228 $generated@@574 ($generated@@251 $generated@@575))) (and (= ($generated@@300 ($generated@@358 ($generated@@82 $generated@@155 $generated@@4) $generated@@574)) $generated@@574) ($generated@@142 ($generated@@358 ($generated@@82 $generated@@155 $generated@@4) $generated@@574) ($generated@@251 $generated@@575))))
 :pattern ( ($generated@@228 $generated@@574 ($generated@@251 $generated@@575)))
)))
(assert (forall (($generated@@576 T@U) ($generated@@577 T@U) ) (!  (=> (and (and (= (type $generated@@576) $generated@@155) (= (type $generated@@577) $generated@@70)) ($generated@@228 $generated@@576 ($generated@@166 $generated@@577))) (and (= ($generated@@300 ($generated@@358 ($generated@@82 $generated@@155 $generated@@2) $generated@@576)) $generated@@576) ($generated@@142 ($generated@@358 ($generated@@82 $generated@@155 $generated@@2) $generated@@576) ($generated@@166 $generated@@577))))
 :pattern ( ($generated@@228 $generated@@576 ($generated@@166 $generated@@577)))
)))
(assert (forall (($generated@@578 T@U) ($generated@@579 T@U) ) (!  (=> (and (and (= (type $generated@@578) $generated@@155) (= (type $generated@@579) $generated@@70)) ($generated@@228 $generated@@578 ($generated@@508 $generated@@579))) (and (= ($generated@@300 ($generated@@358 ($generated@@290 $generated@@155) $generated@@578)) $generated@@578) ($generated@@142 ($generated@@358 ($generated@@290 $generated@@155) $generated@@578) ($generated@@508 $generated@@579))))
 :pattern ( ($generated@@228 $generated@@578 ($generated@@508 $generated@@579)))
)))
(assert (= ($generated@@78 $generated@@235) $generated@@64))
(assert (= ($generated@@566 $generated@@235) $generated@@69))
(assert (forall (($generated@@580 T@U) ($generated@@581 T@U) ($generated@@582 T@U) ) (!  (=> (and (and (= (type $generated@@580) ($generated@@82 $generated@@155 $generated@@2)) (= (type $generated@@581) $generated@@70)) (= (type $generated@@582) ($generated@@82 $generated@@83 $generated@@84))) (= ($generated@@80 $generated@@580 ($generated@@166 $generated@@581) $generated@@582) (forall (($generated@@583 T@U) ) (!  (=> (and (= (type $generated@@583) $generated@@155) (< 0 ($generated ($generated@@87 $generated@@580 $generated@@583)))) ($generated@@274 $generated@@583 $generated@@581 $generated@@582))
 :pattern ( ($generated@@87 $generated@@580 $generated@@583))
))))
 :pattern ( ($generated@@80 $generated@@580 ($generated@@166 $generated@@581) $generated@@582))
)))
(assert (= $generated@@161 ($generated@@258 $generated@@161)))
(assert (= $generated@@163 ($generated@@258 $generated@@163)))
(assert (= $generated@@164 ($generated@@258 $generated@@164)))
(assert (= $generated@@165 ($generated@@258 $generated@@165)))
(assert (forall (($generated@@585 T@U) ) (!  (=> (and (= (type $generated@@585) $generated@@146) ($generated@@584 $generated@@585)) (or (or (or ($generated@@262 $generated@@585) ($generated@@265 $generated@@585)) ($generated@@268 $generated@@585)) ($generated@@271 $generated@@585)))
 :pattern ( ($generated@@584 $generated@@585))
)))
(assert (forall (($generated@@586 T@U) ($generated@@587 T@U) ($generated@@588 T@U) ) (!  (=> (and (and (and (= (type $generated@@586) $generated@@146) (= (type $generated@@587) $generated@@70)) (= (type $generated@@588) ($generated@@82 $generated@@83 $generated@@84))) (and ($generated@@236 $generated@@588) (and ($generated@@144 $generated@@586) (exists (($generated@@589 T@U) ) (!  (and (= (type $generated@@589) $generated@@70) ($generated@@80 $generated@@586 ($generated@@145 $generated@@587 $generated@@589) $generated@@588))
 :pattern ( ($generated@@80 $generated@@586 ($generated@@145 $generated@@587 $generated@@589) $generated@@588))
))))) ($generated@@274 ($generated@@153 $generated@@586) $generated@@587 $generated@@588))
 :pattern ( ($generated@@274 ($generated@@153 $generated@@586) $generated@@587 $generated@@588))
)))
(assert (forall (($generated@@590 T@U) ($generated@@591 T@U) ($generated@@592 T@U) ) (!  (=> (and (and (and (= (type $generated@@590) $generated@@146) (= (type $generated@@591) $generated@@70)) (= (type $generated@@592) ($generated@@82 $generated@@83 $generated@@84))) (and ($generated@@236 $generated@@592) (and ($generated@@144 $generated@@590) (exists (($generated@@593 T@U) ) (!  (and (= (type $generated@@593) $generated@@70) ($generated@@80 $generated@@590 ($generated@@145 $generated@@593 $generated@@591) $generated@@592))
 :pattern ( ($generated@@80 $generated@@590 ($generated@@145 $generated@@593 $generated@@591) $generated@@592))
))))) ($generated@@274 ($generated@@154 $generated@@590) $generated@@591 $generated@@592))
 :pattern ( ($generated@@274 ($generated@@154 $generated@@590) $generated@@591 $generated@@592))
)))
(assert (forall (($generated@@594 T@U) ($generated@@595 T@U) ) (!  (=> (and (= (type $generated@@594) $generated@@155) (= (type $generated@@595) $generated@@155)) (= ($generated@@227 ($generated@@258 $generated@@594) ($generated@@258 $generated@@595)) ($generated@@258 ($generated@@227 $generated@@594 $generated@@595))))
 :pattern ( ($generated@@227 ($generated@@258 $generated@@594) ($generated@@258 $generated@@595)))
)))
(assert (forall (($generated@@596 Int) ) (! (= ($generated@@300 ($generated@@8 ($generated@@256 $generated@@596))) ($generated@@258 ($generated@@300 ($generated@@8 $generated@@596))))
 :pattern ( ($generated@@300 ($generated@@8 ($generated@@256 $generated@@596))))
)))
(assert (forall (($generated@@597 T@U) ) (! (= ($generated@@300 ($generated@@258 $generated@@597)) ($generated@@258 ($generated@@300 $generated@@597)))
 :pattern ( ($generated@@300 ($generated@@258 $generated@@597)))
)))
(assert (forall (($generated@@598 T@U) ) (! (let (($generated@@599 ($generated@@291 (type $generated@@598))))
 (=> (and (= (type $generated@@598) ($generated@@290 $generated@@599)) (= ($generated@@289 $generated@@598) 0)) (= $generated@@598 ($generated@@288 $generated@@599))))
 :pattern ( ($generated@@289 $generated@@598))
)))
(assert (forall (($generated@@600 T@U) ($generated@@601 T@U) ($generated@@602 T@U) ) (! (let (($generated@@603 (type $generated@@601)))
 (=> (and (and (= (type $generated@@600) ($generated@@82 $generated@@603 $generated@@2)) (= (type $generated@@602) $generated@@2)) (<= 0 ($generated $generated@@602))) (= ($generated@@313 ($generated@@88 $generated@@600 $generated@@601 $generated@@602)) (+ (- ($generated@@313 $generated@@600) ($generated ($generated@@87 $generated@@600 $generated@@601))) ($generated $generated@@602)))))
 :pattern ( ($generated@@313 ($generated@@88 $generated@@600 $generated@@601 $generated@@602)))
)))
(assert (forall (($generated@@604 T@U) ) (!  (=> (and (= (type $generated@@604) $generated@@146) ($generated@@142 $generated@@604 $generated@@235)) (or (or (or ($generated@@262 $generated@@604) ($generated@@265 $generated@@604)) ($generated@@268 $generated@@604)) ($generated@@271 $generated@@604)))
 :pattern ( ($generated@@271 $generated@@604) ($generated@@142 $generated@@604 $generated@@235))
 :pattern ( ($generated@@268 $generated@@604) ($generated@@142 $generated@@604 $generated@@235))
 :pattern ( ($generated@@265 $generated@@604) ($generated@@142 $generated@@604 $generated@@235))
 :pattern ( ($generated@@262 $generated@@604) ($generated@@142 $generated@@604 $generated@@235))
)))
(assert (forall (($generated@@605 T@U) ($generated@@606 T@U) ) (!  (=> (and (= (type $generated@@605) ($generated@@82 $generated@@83 $generated@@84)) (= (type $generated@@606) $generated@@2)) ($generated@@80 $generated@@606 $generated@@46 $generated@@605))
 :pattern ( ($generated@@80 $generated@@606 $generated@@46 $generated@@605))
)))
(assert (forall (($generated@@607 T@U) ($generated@@608 T@U) ) (!  (=> (and (= (type $generated@@607) ($generated@@82 $generated@@83 $generated@@84)) (= (type $generated@@608) $generated@@3)) ($generated@@80 $generated@@608 $generated@@47 $generated@@607))
 :pattern ( ($generated@@80 $generated@@608 $generated@@47 $generated@@607))
)))
(assert (forall (($generated@@609 T@U) ($generated@@610 T@U) ) (!  (=> (and (= (type $generated@@609) ($generated@@82 $generated@@83 $generated@@84)) (= (type $generated@@610) $generated@@4)) ($generated@@80 $generated@@610 $generated@@44 $generated@@609))
 :pattern ( ($generated@@80 $generated@@610 $generated@@44 $generated@@609))
)))
(assert (forall (($generated@@611 T@U) ($generated@@612 T@U) ) (!  (=> (and (= (type $generated@@611) ($generated@@82 $generated@@83 $generated@@84)) (= (type $generated@@612) $generated@@466)) ($generated@@80 $generated@@612 $generated@@45 $generated@@611))
 :pattern ( ($generated@@80 $generated@@612 $generated@@45 $generated@@611))
)))
(assert (forall (($generated@@613 T@U) ($generated@@614 T@U) ) (!  (=> (and (= (type $generated@@613) ($generated@@82 $generated@@83 $generated@@84)) (= (type $generated@@614) $generated@@155)) ($generated@@80 $generated@@614 $generated@@48 $generated@@613))
 :pattern ( ($generated@@80 $generated@@614 $generated@@48 $generated@@613))
)))
(assert (forall (($generated@@615 T@U) ($generated@@616 T@U) ) (!  (=> (and (= (type $generated@@615) ($generated@@290 $generated@@155)) (= (type $generated@@616) $generated@@70)) (= ($generated@@142 $generated@@615 ($generated@@508 $generated@@616)) (forall (($generated@@617 Int) ) (!  (=> (and (<= 0 $generated@@617) (< $generated@@617 ($generated@@289 $generated@@615))) ($generated@@228 ($generated@@509 $generated@@615 $generated@@617) $generated@@616))
 :pattern ( ($generated@@509 $generated@@615 $generated@@617))
))))
 :pattern ( ($generated@@142 $generated@@615 ($generated@@508 $generated@@616)))
)))
(assert (forall (($generated@@619 T@U) ($generated@@620 Int) ) (!  (=> (= (type $generated@@619) ($generated@@290 $generated@@155)) (=> (and (<= 0 $generated@@620) (< $generated@@620 ($generated@@289 $generated@@619))) (< ($generated@@547 ($generated@@358 $generated@@146 ($generated@@509 $generated@@619 $generated@@620))) ($generated@@618 $generated@@619))))
 :pattern ( ($generated@@547 ($generated@@358 $generated@@146 ($generated@@509 $generated@@619 $generated@@620))))
)))
(assert (forall (($generated@@621 T@U) ($generated@@622 T@U) ($generated@@623 T@U) ) (!  (=> (and (and (and (= (type $generated@@621) ($generated@@321 $generated@@155 $generated@@155)) (= (type $generated@@622) $generated@@70)) (= (type $generated@@623) $generated@@70)) ($generated@@142 $generated@@621 ($generated@@423 $generated@@622 $generated@@623))) (and (and ($generated@@142 ($generated@@319 $generated@@621) ($generated@@246 $generated@@622)) ($generated@@142 ($generated@@366 $generated@@621) ($generated@@246 $generated@@623))) ($generated@@142 ($generated@@397 $generated@@621) ($generated@@246 ($generated@@145 $generated@@622 $generated@@623)))))
 :pattern ( ($generated@@142 $generated@@621 ($generated@@423 $generated@@622 $generated@@623)))
)))
(assert (forall (($generated@@624 T@U) ($generated@@625 T@U) ($generated@@626 T@U) ) (!  (=> (and (and (and (= (type $generated@@624) ($generated@@339 $generated@@155 $generated@@155)) (= (type $generated@@625) $generated@@70)) (= (type $generated@@626) $generated@@70)) ($generated@@142 $generated@@624 ($generated@@431 $generated@@625 $generated@@626))) (and (and ($generated@@142 ($generated@@337 $generated@@624) ($generated@@251 $generated@@625)) ($generated@@142 ($generated@@377 $generated@@624) ($generated@@251 $generated@@626))) ($generated@@142 ($generated@@405 $generated@@624) ($generated@@251 ($generated@@145 $generated@@625 $generated@@626)))))
 :pattern ( ($generated@@142 $generated@@624 ($generated@@431 $generated@@625 $generated@@626)))
)))
(assert (forall (($generated@@627 T@U) ) (!  (=> (= (type $generated@@627) $generated@@2) ($generated@@142 $generated@@627 $generated@@46))
 :pattern ( ($generated@@142 $generated@@627 $generated@@46))
)))
(assert (forall (($generated@@628 T@U) ) (!  (=> (= (type $generated@@628) $generated@@3) ($generated@@142 $generated@@628 $generated@@47))
 :pattern ( ($generated@@142 $generated@@628 $generated@@47))
)))
(assert (forall (($generated@@629 T@U) ) (!  (=> (= (type $generated@@629) $generated@@4) ($generated@@142 $generated@@629 $generated@@44))
 :pattern ( ($generated@@142 $generated@@629 $generated@@44))
)))
(assert (forall (($generated@@630 T@U) ) (!  (=> (= (type $generated@@630) $generated@@466) ($generated@@142 $generated@@630 $generated@@45))
 :pattern ( ($generated@@142 $generated@@630 $generated@@45))
)))
(assert (forall (($generated@@631 T@U) ) (!  (=> (= (type $generated@@631) $generated@@155) ($generated@@142 $generated@@631 $generated@@48))
 :pattern ( ($generated@@142 $generated@@631 $generated@@48))
)))
(push 1)
(declare-fun ControlFlow (Int Int) Int)
(declare-fun $generated@@632 () Int)
(declare-fun $generated@@633 () Int)
(declare-fun $generated@@634 () Int)
(declare-fun $generated@@635 () Int)
(declare-fun $generated@@636 () Int)
(declare-fun $generated@@637 () Int)
(declare-fun $generated@@638 () Int)
(declare-fun $generated@@639 () Bool)
(declare-fun $generated@@640 () Bool)
(declare-fun $generated@@641 () Int)
(declare-fun $generated@@642 () T@U)
(declare-fun $generated@@643 () T@U)
(declare-fun $generated@@644 () T@U)
(declare-fun $generated@@645 () T@U)
(declare-fun $generated@@646 () Int)
(declare-fun $generated@@647 () Int)
(declare-fun $generated@@648 () Int)
(declare-fun $generated@@649 (T@U) Bool)
(declare-fun $generated@@650 () Int)
(assert  (and (and (and (= (type $generated@@645) $generated@@146) (= (type $generated@@642) ($generated@@82 $generated@@83 $generated@@84))) (= (type $generated@@643) $generated@@83)) (= (type $generated@@644) ($generated@@173 $generated@@83 $generated@@4))))
(set-option :timeout 0)
(set-option :rlimit 0)
(assert (not
 (=> (= (ControlFlow 0 0) 38) (let (($generated@@651  (=> (and (not (= ($generated@@563 $generated@@632 (+ $generated@@633 1)) ($generated@@256 0))) (= $generated@@634 (+ $generated@@632 1))) (and (=> (= (ControlFlow 0 20) (- 0 21)) (or (<= 0 $generated@@635) (= (- 3000 $generated@@634) $generated@@635))) (=> (or (<= 0 $generated@@635) (= (- 3000 $generated@@634) $generated@@635)) (=> (= (ControlFlow 0 20) (- 0 19)) (< (- 3000 $generated@@634) $generated@@635)))))))
(let (($generated@@652 true))
(let (($generated@@653  (=> (not (= ($generated@@563 $generated@@632 $generated@@633) ($generated@@256 0))) (and (=> (= (ControlFlow 0 22) (- 0 23)) (not (= (+ $generated@@633 1) 0))) (=> (not (= (+ $generated@@633 1) 0)) (and (=> (= (ControlFlow 0 22) 18) $generated@@652) (=> (= (ControlFlow 0 22) 20) $generated@@651)))))))
(let (($generated@@654 true))
(let (($generated@@655 true))
(let (($generated@@656  (=> (= $generated@@636 (+ $generated@@637 1)) (and (=> (= (ControlFlow 0 7) (- 0 8)) (or (<= 0 $generated@@638) (= (- $generated@@633 $generated@@636) $generated@@638))) (=> (or (<= 0 $generated@@638) (= (- $generated@@633 $generated@@636) $generated@@638)) (=> (= (ControlFlow 0 7) (- 0 6)) (< (- $generated@@633 $generated@@636) $generated@@638)))))))
(let (($generated@@657  (=> (and (= ($generated@@563 $generated@@632 $generated@@633) ($generated@@256 0)) (= (ControlFlow 0 17) 7)) $generated@@656)))
(let (($generated@@658  (=> (and (< $generated@@632 3000) (= $generated@@635 (- 3000 $generated@@632))) (and (=> (= (ControlFlow 0 24) (- 0 25)) (not (= $generated@@633 0))) (=> (not (= $generated@@633 0)) (and (=> (= (ControlFlow 0 24) 17) $generated@@657) (=> (= (ControlFlow 0 24) 22) $generated@@653)))))))
(let (($generated@@659  (=> (and (<= 3000 $generated@@632) (= (ControlFlow 0 16) 7)) $generated@@656)))
(let (($generated@@660  (=> $generated@@639 (and (=> (= (ControlFlow 0 26) 16) $generated@@659) (=> (= (ControlFlow 0 26) 24) $generated@@658)))))
(let (($generated@@661  (and (=> (= (ControlFlow 0 27) 15) $generated@@654) (=> (= (ControlFlow 0 27) 26) $generated@@660))))
(let (($generated@@662  (=> (and (and (and (and (and (and (not false) (<= 0 $generated@@637)) $generated@@640) (and (<= 63 $generated@@632) (< $generated@@632 3001))) (= $generated@@641 2937)) (forall (($generated@@663 T@U) ) (!  (=> (= (type $generated@@663) $generated@@83) (=> (and (not (= $generated@@663 $generated@@643)) ($generated@@0 ($generated@@89 ($generated@@87 $generated@@642 $generated@@663) $generated@@60))) (= ($generated@@87 $generated@@642 $generated@@663) ($generated@@87 $generated@@642 $generated@@663))))
 :pattern ( ($generated@@87 $generated@@642 $generated@@663))
))) (and (and ($generated@@138 $generated@@642 $generated@@642) (forall (($generated@@664 T@U) ($generated@@665 T@U) ) (! (let (($generated@@666 ($generated@@73 (type $generated@@665))))
 (=> (and (and (= (type $generated@@664) $generated@@83) (= (type $generated@@665) ($generated@@72 $generated@@666))) (and (not (= $generated@@664 $generated@@643)) ($generated@@0 ($generated@@89 ($generated@@87 $generated@@642 $generated@@664) $generated@@60)))) (or (= ($generated@@89 ($generated@@87 $generated@@642 $generated@@664) $generated@@665) ($generated@@89 ($generated@@87 $generated@@642 $generated@@664) $generated@@665)) ($generated@@0 ($generated@@171 $generated@@644 $generated@@664 $generated@@665)))))
 :pattern ( ($generated@@89 ($generated@@87 $generated@@642 $generated@@664) $generated@@665))
))) (and (<= (- 3000 $generated@@632) $generated@@641) (=> (= (- 3000 $generated@@632) $generated@@641) true)))) (and (=> (= (ControlFlow 0 28) 14) $generated@@655) (=> (= (ControlFlow 0 28) 27) $generated@@661)))))
(let (($generated@@667  (=> (and (and (= $generated@@645 $generated@@163) (= $generated@@646 ($generated@@256 63))) (and (= $generated@@641 (- 3000 $generated@@646)) (= (ControlFlow 0 29) 28))) $generated@@662)))
(let (($generated@@668  (=> (and (= $generated@@645 $generated@@165) (= (ControlFlow 0 11) 7)) $generated@@656)))
(let (($generated@@669  (=> (and (= $generated@@645 $generated@@164) (= (ControlFlow 0 10) 7)) $generated@@656)))
(let (($generated@@670  (=> (and (= $generated@@645 $generated@@161) (= (ControlFlow 0 9) 7)) $generated@@656)))
(let (($generated@@671 true))
(let (($generated@@672  (=> (not (= $generated@@645 $generated@@164)) (and (=> (= (ControlFlow 0 12) 11) $generated@@668) (=> (= (ControlFlow 0 12) 5) $generated@@671)))))
(let (($generated@@673  (=> (not (= $generated@@645 $generated@@163)) (and (=> (= (ControlFlow 0 13) 10) $generated@@669) (=> (= (ControlFlow 0 13) 12) $generated@@672)))))
(let (($generated@@674  (=> (not (= $generated@@645 $generated@@161)) (and (=> (= (ControlFlow 0 30) 29) $generated@@667) (=> (= (ControlFlow 0 30) 13) $generated@@673)))))
(let (($generated@@675  (=> (not (= ($generated@@563 $generated@@637 ($generated@@256 7)) ($generated@@256 3))) (and (=> (= (ControlFlow 0 31) 9) $generated@@670) (=> (= (ControlFlow 0 31) 30) $generated@@674)))))
(let (($generated@@676 true))
(let (($generated@@677  (=> (and (< $generated@@637 $generated@@633) (= $generated@@638 (- $generated@@633 $generated@@637))) (and (=> (= (ControlFlow 0 32) (- 0 33)) (not (= ($generated@@256 7) 0))) (=> (not (= ($generated@@256 7) 0)) (and (=> (= (ControlFlow 0 32) 4) $generated@@676) (=> (= (ControlFlow 0 32) 31) $generated@@675)))))))
(let (($generated@@678 true))
(let (($generated@@679  (=> $generated@@640 (and (=> (= (ControlFlow 0 34) 3) $generated@@678) (=> (= (ControlFlow 0 34) 32) $generated@@677)))))
(let (($generated@@680 true))
(let (($generated@@681  (and (=> (= (ControlFlow 0 35) 2) $generated@@680) (=> (= (ControlFlow 0 35) 34) $generated@@679))))
(let (($generated@@682 true))
(let (($generated@@683  (=> (and (and (and (not false) (<= 0 $generated@@637)) (forall (($generated@@684 T@U) ) (!  (=> (= (type $generated@@684) $generated@@83) (=> (and (not (= $generated@@684 $generated@@643)) ($generated@@0 ($generated@@89 ($generated@@87 $generated@@642 $generated@@684) $generated@@60))) (= ($generated@@87 $generated@@642 $generated@@684) ($generated@@87 $generated@@642 $generated@@684))))
 :pattern ( ($generated@@87 $generated@@642 $generated@@684))
))) (and (and ($generated@@138 $generated@@642 $generated@@642) (forall (($generated@@685 T@U) ($generated@@686 T@U) ) (! (let (($generated@@687 ($generated@@73 (type $generated@@686))))
 (=> (and (and (= (type $generated@@685) $generated@@83) (= (type $generated@@686) ($generated@@72 $generated@@687))) (and (not (= $generated@@685 $generated@@643)) ($generated@@0 ($generated@@89 ($generated@@87 $generated@@642 $generated@@685) $generated@@60)))) (or (= ($generated@@89 ($generated@@87 $generated@@642 $generated@@685) $generated@@686) ($generated@@89 ($generated@@87 $generated@@642 $generated@@685) $generated@@686)) ($generated@@0 ($generated@@171 $generated@@644 $generated@@685 $generated@@686)))))
 :pattern ( ($generated@@89 ($generated@@87 $generated@@642 $generated@@685) $generated@@686))
))) (and (<= (- $generated@@633 $generated@@637) $generated@@647) (=> (= (- $generated@@633 $generated@@637) $generated@@647) true)))) (and (=> (= (ControlFlow 0 36) 1) $generated@@682) (=> (= (ControlFlow 0 36) 35) $generated@@681)))))
(let (($generated@@688  (=> (and (and (= $generated@@644 ($generated@@172 $generated@@643 $generated@@642 $generated@@60 false)) (= $generated@@648 ($generated@@256 0))) (and (= $generated@@647 (- $generated@@633 $generated@@648)) (= (ControlFlow 0 37) 36))) $generated@@683)))
(let (($generated@@689  (=> (and ($generated@@236 $generated@@642) ($generated@@649 $generated@@642)) (=> (and (and (and (and ($generated@@142 $generated@@645 $generated@@235) ($generated@@80 $generated@@645 $generated@@235 $generated@@642)) ($generated@@584 $generated@@645)) (<= ($generated@@256 0) $generated@@633)) (and (= 1 $generated@@650) (= (ControlFlow 0 38) 37))) $generated@@688))))
$generated@@689))))))))))))))))))))))))))))))))
))
(check-sat)
(pop 1)
; Valid
(get-info :rlimit)
(reset)
(set-option :rlimit 0)
; did a full reset
(reset)
(set-option :print-success false)
(set-info :smt-lib-version 2.6)
(set-option :auto_config false)
(set-option :type_check true)
(set-option :smt.case_split 3)
(set-option :smt.qi.eager_threshold 100)
(set-option :smt.delay_units true)
(set-option :smt.arith.solver 2)
(set-option :smt.mbqi false)
(set-option :model.compact false)
(set-option :model.v2 true)
(set-option :pp.bv_literals false)
; done setting options


(set-info :category "industrial")
(declare-sort |T@U| 0)
(declare-sort |T@T| 0)
(declare-fun real_pow (Real Real) Real)
(declare-fun UOrdering2 (|T@U| |T@U|) Bool)
(declare-fun UOrdering3 (|T@T| |T@U| |T@U|) Bool)
(declare-fun tickleBool (Bool) Bool)
(assert (and (tickleBool true) (tickleBool false)))
(declare-fun $generated (T@U) Int)
(declare-fun $generated@@0 (T@U) Bool)
(declare-fun $generated@@1 (T@T) Int)
(declare-fun $generated@@2 () T@T)
(declare-fun $generated@@3 () T@T)
(declare-fun $generated@@4 () T@T)
(declare-fun $generated@@5 () T@T)
(declare-fun $generated@@6 () T@T)
(declare-fun $generated@@7 () T@T)
(declare-fun $generated@@8 (Int) T@U)
(declare-fun type (T@U) T@T)
(declare-fun $generated@@9 (Real) T@U)
(declare-fun $generated@@10 (T@U) Real)
(declare-fun $generated@@11 (Bool) T@U)
(declare-fun $generated@@12 (RoundingMode) T@U)
(declare-fun $generated@@13 (T@U) RoundingMode)
(declare-fun $generated@@14 (String) T@U)
(declare-fun $generated@@15 (T@U) String)
(declare-fun $generated@@16 ((RegEx String)) T@U)
(declare-fun $generated@@17 (T@U) (RegEx String))
(declare-fun $generated@@44 () T@U)
(declare-fun $generated@@45 () T@U)
(declare-fun $generated@@46 () T@U)
(declare-fun $generated@@47 () T@U)
(declare-fun $generated@@48 () T@U)
(declare-fun $generated@@49 () T@U)
(declare-fun $generated@@50 () T@U)
(declare-fun $generated@@51 () T@U)
(declare-fun $generated@@52 () T@U)
(declare-fun $generated@@53 () T@U)
(declare-fun $generated@@54 () T@U)
(declare-fun $generated@@55 () T@U)
(declare-fun $generated@@56 () T@U)
(declare-fun $generated@@57 () T@U)
(declare-fun $generated@@58 () T@U)
(declare-fun $generated@@59 () T@U)
(declare-fun $generated@@60 () T@U)
(declare-fun $generated@@61 () T@U)
(declare-fun $generated@@62 () T@U)
(declare-fun $generated@@63 () T@U)
(declare-fun $generated@@64 () T@U)
(declare-fun $generated@@65 () T@U)
(declare-fun $generated@@66 () T@U)
(declare-fun $generated@@67 () T@U)
(declare-fun $generated@@68 () T@U)
(declare-fun $generated@@69 () T@U)
(declare-fun $generated@@70 () T@T)
(declare-fun $generated@@71 () T@T)
(declare-fun $generated@@72 (T@T) T@T)
(declare-fun $generated@@73 (T@T) T@T)
(declare-fun $generated@@74 () T@T)
(declare-fun $generated@@75 () T@T)
(declare-fun $generated@@78 (T@U) T@U)
(declare-fun $generated@@80 (T@U T@U T@U) Bool)
(declare-fun $generated@@81 (Int) T@U)
(declare-fun $generated@@82 (T@T T@T) T@T)
(declare-fun $generated@@83 () T@T)
(declare-fun $generated@@84 () T@T)
(declare-fun $generated@@85 (T@T) T@T)
(declare-fun $generated@@86 (T@T) T@T)
(declare-fun $generated@@87 (T@U T@U) T@U)
(declare-fun $generated@@88 (T@U T@U T@U) T@U)
(declare-fun $generated@@89 (T@U T@U) T@U)
(declare-fun $generated@@90 (T@U T@U T@U) T@U)
(declare-fun $generated@@138 (T@U T@U) Bool)
(declare-fun $generated@@142 (T@U T@U) Bool)
(declare-fun $generated@@144 (T@U) Bool)
(declare-fun $generated@@145 (T@U T@U) T@U)
(declare-fun $generated@@146 () T@T)
(declare-fun $generated@@152 (T@U T@U) Bool)
(declare-fun $generated@@153 (T@U) T@U)
(declare-fun $generated@@154 (T@U) T@U)
(declare-fun $generated@@155 () T@T)
(declare-fun $generated@@160 (T@U) T@U)
(declare-fun $generated@@161 () T@U)
(declare-fun $generated@@163 () T@U)
(declare-fun $generated@@164 () T@U)
(declare-fun $generated@@165 () T@U)
(declare-fun $generated@@166 (T@U) T@U)
(declare-fun $generated@@167 (T@U) Bool)
(declare-fun $generated@@171 (T@U T@U T@U) T@U)
(declare-fun $generated@@172 (T@U T@U T@U Bool) T@U)
(declare-fun $generated@@173 (T@T T@T) T@T)
(declare-fun $generated@@174 (T@T) T@T)
(declare-fun $generated@@175 (T@T) T@T)
(declare-fun $generated@@176 (T@U T@U T@U T@U) T@U)
(declare-fun $generated@@227 (T@U T@U) T@U)
(declare-fun $generated@@234 (T@U T@U) T@U)
(declare-fun $generated@@241 (T@U T@U) T@U)
(declare-fun $generated@@242 (T@U T@U) Bool)
(declare-fun $generated@@249 () T@U)
(declare-fun $generated@@250 (T@U) Bool)
(declare-fun $generated@@255 (T@U) Int)
(declare-fun $generated@@261 (T@U T@U) Bool)
(declare-fun $generated@@264 (T@U) T@U)
(declare-fun $generated@@269 (T@U) T@U)
(declare-fun $generated@@274 (Int) Int)
(declare-fun $generated@@276 (T@U) T@U)
(declare-fun $generated@@280 (T@U) Bool)
(declare-fun $generated@@283 (T@U) Bool)
(declare-fun $generated@@286 (T@U) Bool)
(declare-fun $generated@@289 (T@U) Bool)
(declare-fun $generated@@292 (T@U T@U T@U) Bool)
(declare-fun $generated@@306 (T@T) T@U)
(declare-fun $generated@@307 (T@U) Int)
(declare-fun $generated@@308 (T@T) T@T)
(declare-fun $generated@@309 (T@T) T@T)
(declare-fun $generated@@318 (T@U) Bool)
(declare-fun $generated@@319 (T@U) T@U)
(declare-fun $generated@@332 (T@U) Int)
(declare-fun $generated@@333 (T@T) T@U)
(declare-fun $generated@@338 (T@U) T@U)
(declare-fun $generated@@339 (T@T T@T) T@U)
(declare-fun $generated@@340 (T@T T@T) T@T)
(declare-fun $generated@@341 (T@T) T@T)
(declare-fun $generated@@342 (T@T) T@T)
(declare-fun $generated@@356 (T@U) T@U)
(declare-fun $generated@@357 (T@T T@T) T@U)
(declare-fun $generated@@358 (T@T T@T) T@T)
(declare-fun $generated@@359 (T@T) T@T)
(declare-fun $generated@@360 (T@T) T@T)
(declare-fun $generated@@374 (T@U T@U) Bool)
(declare-fun $generated@@383 (T@T T@U) T@U)
(declare-fun $generated@@391 (T@U) T@U)
(declare-fun $generated@@402 (T@U) T@U)
(declare-fun $generated@@412 (T@U T@U) Bool)
(declare-fun $generated@@413 (T@U T@U) T@U)
(declare-fun $generated@@420 (T@U) Int)
(declare-fun $generated@@442 (T@U) T@U)
(declare-fun $generated@@443 (T@U) T@U)
(declare-fun $generated@@450 (T@U) T@U)
(declare-fun $generated@@451 (T@U) T@U)
(declare-fun $generated@@468 (T@U T@U) T@U)
(declare-fun $generated@@476 (T@U T@U) T@U)
(declare-fun $generated@@484 (T@U T@U) T@U)
(declare-fun $generated@@511 (T@T) T@U)
(declare-fun $generated@@535 () T@T)
(declare-fun $generated@@551 (T@U) T@U)
(declare-fun $generated@@555 (T@U) T@U)
(declare-fun $generated@@561 (T@U) T@U)
(declare-fun $generated@@565 (T@U) T@U)
(declare-fun $generated@@573 (T@U) T@U)
(declare-fun $generated@@577 (T@U) T@U)
(declare-fun $generated@@585 (T@U) T@U)
(declare-fun $generated@@586 (T@U Int) T@U)
(declare-fun $generated@@601 (T@U) Int)
(declare-fun $generated@@603 (T@U) T@U)
(declare-fun $generated@@607 (T@U) T@U)
(declare-fun $generated@@611 (T@U) T@U)
(declare-fun $generated@@615 (T@U) T@U)
(declare-fun $generated@@629 (T@U) Int)
(declare-fun $generated@@630 (T@U) Int)
(declare-fun $generated@@650 (T@T) T@U)
(declare-fun $generated@@656 (T@U) T@U)
(declare-fun $generated@@682 (T@U T@U) Bool)
(declare-fun $generated@@694 (T@U) Bool)
(declare-fun $generated@@736 (T@U) Int)
(assert  (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (= ($generated@@1 $generated@@2) 0) (= ($generated@@1 $generated@@3) 1)) (= ($generated@@1 $generated@@4) 2)) (= ($generated@@1 $generated@@5) 3)) (= ($generated@@1 $generated@@6) 4)) (= ($generated@@1 $generated@@7) 5)) (forall (($generated@@18 Int) ) (! (= ($generated ($generated@@8 $generated@@18)) $generated@@18)
 :pattern ( ($generated@@8 $generated@@18))
))) (forall (($generated@@19 T@U) ) (!  (=> (= (type $generated@@19) $generated@@2) (= ($generated@@8 ($generated $generated@@19)) $generated@@19))
 :pattern ( ($generated $generated@@19))
))) (forall (($generated@@20 Int) ) (! (= (type ($generated@@8 $generated@@20)) $generated@@2)
 :pattern ( ($generated@@8 $generated@@20))
))) (forall (($generated@@21 Real) ) (! (= ($generated@@10 ($generated@@9 $generated@@21)) $generated@@21)
 :pattern ( ($generated@@9 $generated@@21))
))) (forall (($generated@@22 T@U) ) (!  (=> (= (type $generated@@22) $generated@@3) (= ($generated@@9 ($generated@@10 $generated@@22)) $generated@@22))
 :pattern ( ($generated@@10 $generated@@22))
))) (forall (($generated@@23 Real) ) (! (= (type ($generated@@9 $generated@@23)) $generated@@3)
 :pattern ( ($generated@@9 $generated@@23))
))) (forall (($generated@@24 Bool) ) (! (= ($generated@@0 ($generated@@11 $generated@@24)) $generated@@24)
 :pattern ( ($generated@@11 $generated@@24))
))) (forall (($generated@@25 T@U) ) (!  (=> (= (type $generated@@25) $generated@@4) (= ($generated@@11 ($generated@@0 $generated@@25)) $generated@@25))
 :pattern ( ($generated@@0 $generated@@25))
))) (forall (($generated@@26 Bool) ) (! (= (type ($generated@@11 $generated@@26)) $generated@@4)
 :pattern ( ($generated@@11 $generated@@26))
))) (forall (($generated@@27 RoundingMode) ) (! (= ($generated@@13 ($generated@@12 $generated@@27)) $generated@@27)
 :pattern ( ($generated@@12 $generated@@27))
))) (forall (($generated@@28 T@U) ) (!  (=> (= (type $generated@@28) $generated@@5) (= ($generated@@12 ($generated@@13 $generated@@28)) $generated@@28))
 :pattern ( ($generated@@13 $generated@@28))
))) (forall (($generated@@29 RoundingMode) ) (! (= (type ($generated@@12 $generated@@29)) $generated@@5)
 :pattern ( ($generated@@12 $generated@@29))
))) (forall (($generated@@30 String) ) (! (= ($generated@@15 ($generated@@14 $generated@@30)) $generated@@30)
 :pattern ( ($generated@@14 $generated@@30))
))) (forall (($generated@@31 T@U) ) (!  (=> (= (type $generated@@31) $generated@@6) (= ($generated@@14 ($generated@@15 $generated@@31)) $generated@@31))
 :pattern ( ($generated@@15 $generated@@31))
))) (forall (($generated@@32 String) ) (! (= (type ($generated@@14 $generated@@32)) $generated@@6)
 :pattern ( ($generated@@14 $generated@@32))
))) (forall (($generated@@33 (RegEx String)) ) (! (= ($generated@@17 ($generated@@16 $generated@@33)) $generated@@33)
 :pattern ( ($generated@@16 $generated@@33))
))) (forall (($generated@@34 T@U) ) (!  (=> (= (type $generated@@34) $generated@@7) (= ($generated@@16 ($generated@@17 $generated@@34)) $generated@@34))
 :pattern ( ($generated@@17 $generated@@34))
))) (forall (($generated@@35 (RegEx String)) ) (! (= (type ($generated@@16 $generated@@35)) $generated@@7)
 :pattern ( ($generated@@16 $generated@@35))
))))
(assert (forall (($generated@@36 T@U) ) (! (UOrdering2 $generated@@36 $generated@@36)
 :no-pattern ($generated $generated@@36)
 :no-pattern ($generated@@0 $generated@@36)
)))
(assert (forall (($generated@@37 T@U) ($generated@@38 T@U) ($generated@@39 T@U) ) (! (let (($generated@@40 (type $generated@@37)))
 (=> (and (and (= (type $generated@@38) $generated@@40) (= (type $generated@@39) $generated@@40)) (and (UOrdering2 $generated@@37 $generated@@38) (UOrdering2 $generated@@38 $generated@@39))) (UOrdering2 $generated@@37 $generated@@39)))
 :pattern ( (UOrdering2 $generated@@37 $generated@@38) (UOrdering2 $generated@@38 $generated@@39))
)))
(assert (forall (($generated@@41 T@U) ($generated@@42 T@U) ) (! (let (($generated@@43 (type $generated@@41)))
 (=> (= (type $generated@@42) $generated@@43) (=> (and (UOrdering2 $generated@@41 $generated@@42) (UOrdering2 $generated@@42 $generated@@41)) (= $generated@@41 $generated@@42))))
 :pattern ( (UOrdering2 $generated@@41 $generated@@42) (UOrdering2 $generated@@42 $generated@@41))
)))
(assert  (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (= ($generated@@1 $generated@@70) 6) (= (type $generated@@44) $generated@@70)) (= (type $generated@@45) $generated@@70)) (= (type $generated@@46) $generated@@70)) (= (type $generated@@47) $generated@@70)) (= (type $generated@@48) $generated@@70)) (= ($generated@@1 $generated@@71) 7)) (= (type $generated@@49) $generated@@71)) (= (type $generated@@50) $generated@@71)) (= (type $generated@@51) $generated@@71)) (= (type $generated@@52) $generated@@71)) (= (type $generated@@53) $generated@@71)) (= (type $generated@@54) $generated@@71)) (= (type $generated@@55) $generated@@71)) (= (type $generated@@56) $generated@@71)) (= (type $generated@@57) $generated@@71)) (= (type $generated@@58) $generated@@71)) (= (type $generated@@59) $generated@@71)) (forall (($generated@@76 T@T) ) (= ($generated@@1 ($generated@@72 $generated@@76)) 8))) (forall (($generated@@77 T@T) ) (! (= ($generated@@73 ($generated@@72 $generated@@77)) $generated@@77)
 :pattern ( ($generated@@72 $generated@@77))
))) (= (type $generated@@60) ($generated@@72 $generated@@4))) (= ($generated@@1 $generated@@74) 9)) (= (type $generated@@61) $generated@@74)) (= (type $generated@@62) $generated@@71)) (= (type $generated@@63) $generated@@74)) (= (type $generated@@64) $generated@@71)) (= (type $generated@@65) $generated@@74)) (= (type $generated@@66) $generated@@74)) (= (type $generated@@67) $generated@@74)) (= ($generated@@1 $generated@@75) 10)) (= (type $generated@@68) $generated@@75)) (= (type $generated@@69) $generated@@75)))
(assert (distinct $generated@@44 $generated@@45 $generated@@46 $generated@@47 $generated@@48 $generated@@49 $generated@@50 $generated@@51 $generated@@52 $generated@@53 $generated@@54 $generated@@55 $generated@@56 $generated@@57 $generated@@58 $generated@@59 $generated@@60 $generated@@61 $generated@@62 $generated@@63 $generated@@64 $generated@@65 $generated@@66 $generated@@67 $generated@@68 $generated@@69)
)
(assert (forall (($generated@@79 T@U) ) (! (= (type ($generated@@78 $generated@@79)) $generated@@71)
 :pattern ( ($generated@@78 $generated@@79))
)))
(assert (= ($generated@@78 $generated@@44) $generated@@49))
(assert (= ($generated@@78 $generated@@45) $generated@@50))
(assert (= ($generated@@78 $generated@@46) $generated@@51))
(assert (= ($generated@@78 $generated@@47) $generated@@52))
(assert (= ($generated@@78 $generated@@48) $generated@@53))
(assert  (and (and (and (and (and (and (and (and (and (and (and (and (and (forall (($generated@@91 T@T) ($generated@@92 T@T) ) (= ($generated@@1 ($generated@@82 $generated@@91 $generated@@92)) 11)) (forall (($generated@@93 T@T) ($generated@@94 T@T) ) (! (= ($generated@@85 ($generated@@82 $generated@@93 $generated@@94)) $generated@@93)
 :pattern ( ($generated@@82 $generated@@93 $generated@@94))
))) (forall (($generated@@95 T@T) ($generated@@96 T@T) ) (! (= ($generated@@86 ($generated@@82 $generated@@95 $generated@@96)) $generated@@96)
 :pattern ( ($generated@@82 $generated@@95 $generated@@96))
))) (forall (($generated@@97 T@U) ($generated@@98 T@U) ) (! (let (($generated@@99 ($generated@@86 (type $generated@@97))))
(= (type ($generated@@87 $generated@@97 $generated@@98)) $generated@@99))
 :pattern ( ($generated@@87 $generated@@97 $generated@@98))
))) (forall (($generated@@100 T@U) ($generated@@101 T@U) ($generated@@102 T@U) ) (! (let (($generated@@103 (type $generated@@102)))
(let (($generated@@104 (type $generated@@101)))
(= (type ($generated@@88 $generated@@100 $generated@@101 $generated@@102)) ($generated@@82 $generated@@104 $generated@@103))))
 :pattern ( ($generated@@88 $generated@@100 $generated@@101 $generated@@102))
))) (forall (($generated@@105 T@U) ($generated@@106 T@U) ($generated@@107 T@U) ) (! (let (($generated@@108 ($generated@@86 (type $generated@@105))))
 (=> (= (type $generated@@107) $generated@@108) (= ($generated@@87 ($generated@@88 $generated@@105 $generated@@106 $generated@@107) $generated@@106) $generated@@107)))
 :weight 0
))) (and (forall (($generated@@109 T@U) ($generated@@110 T@U) ($generated@@111 T@U) ($generated@@112 T@U) ) (!  (or (= $generated@@111 $generated@@112) (= ($generated@@87 ($generated@@88 $generated@@110 $generated@@111 $generated@@109) $generated@@112) ($generated@@87 $generated@@110 $generated@@112)))
 :weight 0
)) (forall (($generated@@113 T@U) ($generated@@114 T@U) ($generated@@115 T@U) ($generated@@116 T@U) ) (!  (or true (= ($generated@@87 ($generated@@88 $generated@@114 $generated@@115 $generated@@113) $generated@@116) ($generated@@87 $generated@@114 $generated@@116)))
 :weight 0
)))) (= ($generated@@1 $generated@@83) 12)) (forall (($generated@@117 T@U) ($generated@@118 T@U) ) (! (let (($generated@@119 ($generated@@73 (type $generated@@118))))
(= (type ($generated@@89 $generated@@117 $generated@@118)) $generated@@119))
 :pattern ( ($generated@@89 $generated@@117 $generated@@118))
))) (= ($generated@@1 $generated@@84) 13)) (forall (($generated@@120 T@U) ($generated@@121 T@U) ($generated@@122 T@U) ) (! (= (type ($generated@@90 $generated@@120 $generated@@121 $generated@@122)) $generated@@84)
 :pattern ( ($generated@@90 $generated@@120 $generated@@121 $generated@@122))
))) (forall (($generated@@123 T@U) ($generated@@124 T@U) ($generated@@125 T@U) ) (! (let (($generated@@126 ($generated@@73 (type $generated@@124))))
 (=> (= (type $generated@@125) $generated@@126) (= ($generated@@89 ($generated@@90 $generated@@123 $generated@@124 $generated@@125) $generated@@124) $generated@@125)))
 :weight 0
))) (and (forall (($generated@@127 T@U) ($generated@@128 T@U) ($generated@@129 T@U) ($generated@@130 T@U) ) (!  (or (= $generated@@129 $generated@@130) (= ($generated@@89 ($generated@@90 $generated@@128 $generated@@129 $generated@@127) $generated@@130) ($generated@@89 $generated@@128 $generated@@130)))
 :weight 0
)) (forall (($generated@@131 T@U) ($generated@@132 T@U) ($generated@@133 T@U) ($generated@@134 T@U) ) (!  (or true (= ($generated@@89 ($generated@@90 $generated@@132 $generated@@133 $generated@@131) $generated@@134) ($generated@@89 $generated@@132 $generated@@134)))
 :weight 0
)))) (forall (($generated@@135 Int) ) (! (= (type ($generated@@81 $generated@@135)) $generated@@70)
 :pattern ( ($generated@@81 $generated@@135))
))))
(assert (forall (($generated@@136 T@U) ($generated@@137 T@U) ) (!  (=> (and (= (type $generated@@136) $generated@@2) (= (type $generated@@137) ($generated@@82 $generated@@83 $generated@@84))) ($generated@@80 $generated@@136 ($generated@@81 0) $generated@@137))
 :pattern ( ($generated@@80 $generated@@136 ($generated@@81 0) $generated@@137))
)))
(assert (forall (($generated@@139 T@U) ($generated@@140 T@U) ) (!  (=> (and (and (= (type $generated@@139) ($generated@@82 $generated@@83 $generated@@84)) (= (type $generated@@140) ($generated@@82 $generated@@83 $generated@@84))) ($generated@@138 $generated@@139 $generated@@140)) (forall (($generated@@141 T@U) ) (!  (=> (and (= (type $generated@@141) $generated@@83) ($generated@@0 ($generated@@89 ($generated@@87 $generated@@139 $generated@@141) $generated@@60))) ($generated@@0 ($generated@@89 ($generated@@87 $generated@@140 $generated@@141) $generated@@60)))
 :pattern ( ($generated@@89 ($generated@@87 $generated@@140 $generated@@141) $generated@@60))
)))
 :pattern ( ($generated@@138 $generated@@139 $generated@@140))
)))
(assert (forall (($generated@@143 T@U) ) (!  (=> (= (type $generated@@143) $generated@@2) ($generated@@142 $generated@@143 ($generated@@81 0)))
 :pattern ( ($generated@@142 $generated@@143 ($generated@@81 0)))
)))
(assert  (and (= ($generated@@1 $generated@@146) 14) (forall (($generated@@147 T@U) ($generated@@148 T@U) ) (! (= (type ($generated@@145 $generated@@147 $generated@@148)) $generated@@70)
 :pattern ( ($generated@@145 $generated@@147 $generated@@148))
))))
(assert (forall (($generated@@149 T@U) ($generated@@150 T@U) ($generated@@151 T@U) ) (!  (=> (and (and (and (= (type $generated@@149) $generated@@70) (= (type $generated@@150) $generated@@70)) (= (type $generated@@151) $generated@@146)) ($generated@@142 $generated@@151 ($generated@@145 $generated@@149 $generated@@150))) ($generated@@144 $generated@@151))
 :pattern ( ($generated@@144 $generated@@151) ($generated@@142 $generated@@151 ($generated@@145 $generated@@149 $generated@@150)))
)))
(assert  (and (and (= ($generated@@1 $generated@@155) 15) (forall (($generated@@156 T@U) ) (! (= (type ($generated@@153 $generated@@156)) $generated@@155)
 :pattern ( ($generated@@153 $generated@@156))
))) (forall (($generated@@157 T@U) ) (! (= (type ($generated@@154 $generated@@157)) $generated@@155)
 :pattern ( ($generated@@154 $generated@@157))
))))
(assert (forall (($generated@@158 T@U) ($generated@@159 T@U) ) (!  (=> (and (and (= (type $generated@@158) $generated@@146) (= (type $generated@@159) $generated@@146)) true) (= ($generated@@152 $generated@@158 $generated@@159)  (and (= ($generated@@153 $generated@@158) ($generated@@153 $generated@@159)) (= ($generated@@154 $generated@@158) ($generated@@154 $generated@@159)))))
 :pattern ( ($generated@@152 $generated@@158 $generated@@159))
)))
(assert  (and (forall (($generated@@162 T@U) ) (! (= (type ($generated@@160 $generated@@162)) $generated@@74)
 :pattern ( ($generated@@160 $generated@@162))
)) (= (type $generated@@161) $generated@@146)))
(assert (= ($generated@@160 $generated@@161) $generated@@63))
(assert (= (type $generated@@163) $generated@@146))
(assert (= ($generated@@160 $generated@@163) $generated@@65))
(assert (= (type $generated@@164) $generated@@146))
(assert (= ($generated@@160 $generated@@164) $generated@@66))
(assert (= (type $generated@@165) $generated@@146))
(assert (= ($generated@@160 $generated@@165) $generated@@67))
(assert (forall (($generated@@168 T@U) ) (! (= (type ($generated@@166 $generated@@168)) $generated@@70)
 :pattern ( ($generated@@166 $generated@@168))
)))
(assert (forall (($generated@@169 T@U) ($generated@@170 T@U) ) (!  (=> (and (and (= (type $generated@@169) ($generated@@82 $generated@@155 $generated@@2)) (= (type $generated@@170) $generated@@70)) ($generated@@142 $generated@@169 ($generated@@166 $generated@@170))) ($generated@@167 $generated@@169))
 :pattern ( ($generated@@142 $generated@@169 ($generated@@166 $generated@@170)))
)))
(assert  (and (and (and (and (and (and (and (forall (($generated@@177 T@T) ($generated@@178 T@T) ) (= ($generated@@1 ($generated@@173 $generated@@177 $generated@@178)) 16)) (forall (($generated@@179 T@T) ($generated@@180 T@T) ) (! (= ($generated@@174 ($generated@@173 $generated@@179 $generated@@180)) $generated@@179)
 :pattern ( ($generated@@173 $generated@@179 $generated@@180))
))) (forall (($generated@@181 T@T) ($generated@@182 T@T) ) (! (= ($generated@@175 ($generated@@173 $generated@@181 $generated@@182)) $generated@@182)
 :pattern ( ($generated@@173 $generated@@181 $generated@@182))
))) (forall (($generated@@183 T@U) ($generated@@184 T@U) ($generated@@185 T@U) ) (! (let (($generated@@186 ($generated@@175 (type $generated@@183))))
(= (type ($generated@@171 $generated@@183 $generated@@184 $generated@@185)) $generated@@186))
 :pattern ( ($generated@@171 $generated@@183 $generated@@184 $generated@@185))
))) (forall (($generated@@187 T@U) ($generated@@188 T@U) ($generated@@189 T@U) ($generated@@190 T@U) ) (! (let (($generated@@191 (type $generated@@190)))
(let (($generated@@192 (type $generated@@188)))
(= (type ($generated@@176 $generated@@187 $generated@@188 $generated@@189 $generated@@190)) ($generated@@173 $generated@@192 $generated@@191))))
 :pattern ( ($generated@@176 $generated@@187 $generated@@188 $generated@@189 $generated@@190))
))) (forall (($generated@@193 T@U) ($generated@@194 T@U) ($generated@@195 T@U) ($generated@@196 T@U) ) (! (let (($generated@@197 ($generated@@175 (type $generated@@193))))
 (=> (= (type $generated@@196) $generated@@197) (= ($generated@@171 ($generated@@176 $generated@@193 $generated@@194 $generated@@195 $generated@@196) $generated@@194 $generated@@195) $generated@@196)))
 :weight 0
))) (and (and (forall (($generated@@198 T@U) ($generated@@199 T@U) ($generated@@200 T@U) ($generated@@201 T@U) ($generated@@202 T@U) ($generated@@203 T@U) ) (!  (or (= $generated@@200 $generated@@202) (= ($generated@@171 ($generated@@176 $generated@@199 $generated@@200 $generated@@201 $generated@@198) $generated@@202 $generated@@203) ($generated@@171 $generated@@199 $generated@@202 $generated@@203)))
 :weight 0
)) (forall (($generated@@204 T@U) ($generated@@205 T@U) ($generated@@206 T@U) ($generated@@207 T@U) ($generated@@208 T@U) ($generated@@209 T@U) ) (!  (or (= $generated@@207 $generated@@209) (= ($generated@@171 ($generated@@176 $generated@@205 $generated@@206 $generated@@207 $generated@@204) $generated@@208 $generated@@209) ($generated@@171 $generated@@205 $generated@@208 $generated@@209)))
 :weight 0
))) (forall (($generated@@210 T@U) ($generated@@211 T@U) ($generated@@212 T@U) ($generated@@213 T@U) ($generated@@214 T@U) ($generated@@215 T@U) ) (!  (or true (= ($generated@@171 ($generated@@176 $generated@@211 $generated@@212 $generated@@213 $generated@@210) $generated@@214 $generated@@215) ($generated@@171 $generated@@211 $generated@@214 $generated@@215)))
 :weight 0
)))) (forall (($generated@@216 T@U) ($generated@@217 T@U) ($generated@@218 T@U) ($generated@@219 Bool) ) (! (= (type ($generated@@172 $generated@@216 $generated@@217 $generated@@218 $generated@@219)) ($generated@@173 $generated@@83 $generated@@4))
 :pattern ( ($generated@@172 $generated@@216 $generated@@217 $generated@@218 $generated@@219))
))))
(assert (forall (($generated@@220 T@U) ($generated@@221 T@U) ($generated@@222 T@U) ($generated@@223 Bool) ($generated@@224 T@U) ($generated@@225 T@U) ) (! (let (($generated@@226 ($generated@@73 (type $generated@@225))))
 (=> (and (and (and (and (= (type $generated@@220) $generated@@83) (= (type $generated@@221) ($generated@@82 $generated@@83 $generated@@84))) (= (type $generated@@222) ($generated@@72 $generated@@4))) (= (type $generated@@224) $generated@@83)) (= (type $generated@@225) ($generated@@72 $generated@@226))) (= ($generated@@0 ($generated@@171 ($generated@@172 $generated@@220 $generated@@221 $generated@@222 $generated@@223) $generated@@224 $generated@@225))  (=> (and (not (= $generated@@224 $generated@@220)) ($generated@@0 ($generated@@89 ($generated@@87 $generated@@221 $generated@@224) $generated@@222))) $generated@@223))))
 :pattern ( ($generated@@171 ($generated@@172 $generated@@220 $generated@@221 $generated@@222 $generated@@223) $generated@@224 $generated@@225))
)))
(assert (forall (($generated@@228 T@U) ($generated@@229 T@U) ) (! (let (($generated@@230 ($generated@@85 (type $generated@@228))))
(= (type ($generated@@227 $generated@@228 $generated@@229)) ($generated@@82 $generated@@230 $generated@@4)))
 :pattern ( ($generated@@227 $generated@@228 $generated@@229))
)))
(assert (forall (($generated@@231 T@U) ($generated@@232 T@U) ) (! (let (($generated@@233 ($generated@@85 (type $generated@@231))))
 (=> (and (= (type $generated@@231) ($generated@@82 $generated@@233 $generated@@4)) (= (type $generated@@232) ($generated@@82 $generated@@233 $generated@@4))) (= ($generated@@227 ($generated@@227 $generated@@231 $generated@@232) $generated@@232) ($generated@@227 $generated@@231 $generated@@232))))
 :pattern ( ($generated@@227 ($generated@@227 $generated@@231 $generated@@232) $generated@@232))
)))
(assert (forall (($generated@@235 T@U) ($generated@@236 T@U) ) (! (let (($generated@@237 ($generated@@85 (type $generated@@235))))
(= (type ($generated@@234 $generated@@235 $generated@@236)) ($generated@@82 $generated@@237 $generated@@4)))
 :pattern ( ($generated@@234 $generated@@235 $generated@@236))
)))
(assert (forall (($generated@@238 T@U) ($generated@@239 T@U) ) (! (let (($generated@@240 ($generated@@85 (type $generated@@238))))
 (=> (and (= (type $generated@@238) ($generated@@82 $generated@@240 $generated@@4)) (= (type $generated@@239) ($generated@@82 $generated@@240 $generated@@4))) (= ($generated@@234 ($generated@@234 $generated@@238 $generated@@239) $generated@@239) ($generated@@234 $generated@@238 $generated@@239))))
 :pattern ( ($generated@@234 ($generated@@234 $generated@@238 $generated@@239) $generated@@239))
)))
(assert (forall (($generated@@243 T@U) ($generated@@244 T@U) ) (! (= (type ($generated@@241 $generated@@243 $generated@@244)) $generated@@146)
 :pattern ( ($generated@@241 $generated@@243 $generated@@244))
)))
(assert (forall (($generated@@245 T@U) ($generated@@246 T@U) ($generated@@247 T@U) ($generated@@248 T@U) ) (!  (=> (and (and (and (= (type $generated@@245) $generated@@70) (= (type $generated@@246) $generated@@70)) (= (type $generated@@247) $generated@@155)) (= (type $generated@@248) $generated@@155)) (= ($generated@@142 ($generated@@241 $generated@@247 $generated@@248) ($generated@@145 $generated@@245 $generated@@246))  (and ($generated@@242 $generated@@247 $generated@@245) ($generated@@242 $generated@@248 $generated@@246))))
 :pattern ( ($generated@@142 ($generated@@241 $generated@@247 $generated@@248) ($generated@@145 $generated@@245 $generated@@246)))
)))
(assert (= (type $generated@@249) $generated@@70))
(assert ($generated@@142 $generated@@161 $generated@@249))
(assert ($generated@@142 $generated@@163 $generated@@249))
(assert ($generated@@142 $generated@@164 $generated@@249))
(assert ($generated@@142 $generated@@165 $generated@@249))
(assert (forall (($generated@@251 T@U) ) (!  (=> (and (= (type $generated@@251) ($generated@@82 $generated@@83 $generated@@84)) ($generated@@250 $generated@@251)) ($generated@@80 $generated@@161 $generated@@249 $generated@@251))
 :pattern ( ($generated@@80 $generated@@161 $generated@@249 $generated@@251))
)))
(assert (forall (($generated@@252 T@U) ) (!  (=> (and (= (type $generated@@252) ($generated@@82 $generated@@83 $generated@@84)) ($generated@@250 $generated@@252)) ($generated@@80 $generated@@163 $generated@@249 $generated@@252))
 :pattern ( ($generated@@80 $generated@@163 $generated@@249 $generated@@252))
)))
(assert (forall (($generated@@253 T@U) ) (!  (=> (and (= (type $generated@@253) ($generated@@82 $generated@@83 $generated@@84)) ($generated@@250 $generated@@253)) ($generated@@80 $generated@@164 $generated@@249 $generated@@253))
 :pattern ( ($generated@@80 $generated@@164 $generated@@249 $generated@@253))
)))
(assert (forall (($generated@@254 T@U) ) (!  (=> (and (= (type $generated@@254) ($generated@@82 $generated@@83 $generated@@84)) ($generated@@250 $generated@@254)) ($generated@@80 $generated@@165 $generated@@249 $generated@@254))
 :pattern ( ($generated@@80 $generated@@165 $generated@@249 $generated@@254))
)))
(assert (forall (($generated@@256 T@U) ($generated@@257 T@U) ) (! (let (($generated@@258 ($generated@@85 (type $generated@@256))))
 (=> (and (= (type $generated@@256) ($generated@@82 $generated@@258 $generated@@4)) (= (type $generated@@257) ($generated@@82 $generated@@258 $generated@@4))) (= (+ ($generated@@255 ($generated@@227 $generated@@256 $generated@@257)) ($generated@@255 ($generated@@234 $generated@@256 $generated@@257))) (+ ($generated@@255 $generated@@256) ($generated@@255 $generated@@257)))))
 :pattern ( ($generated@@255 ($generated@@227 $generated@@256 $generated@@257)))
 :pattern ( ($generated@@255 ($generated@@234 $generated@@256 $generated@@257)))
)))
(assert (forall (($generated@@259 T@U) ($generated@@260 T@U) ) (!  (=> (and (= (type $generated@@259) $generated@@146) (= (type $generated@@260) $generated@@146)) (= ($generated@@152 $generated@@259 $generated@@260) (= $generated@@259 $generated@@260)))
 :pattern ( ($generated@@152 $generated@@259 $generated@@260))
)))
(assert (forall (($generated@@262 T@U) ($generated@@263 T@U) ) (!  (=> (and (= (type $generated@@262) $generated@@146) (= (type $generated@@263) $generated@@146)) (= ($generated@@261 $generated@@262 $generated@@263) (= $generated@@262 $generated@@263)))
 :pattern ( ($generated@@261 $generated@@262 $generated@@263))
)))
(assert (forall (($generated@@265 T@U) ) (! (= (type ($generated@@264 $generated@@265)) $generated@@70)
 :pattern ( ($generated@@264 $generated@@265))
)))
(assert (forall (($generated@@266 T@U) ($generated@@267 T@U) ) (!  (=> (and (= (type $generated@@266) ($generated@@82 $generated@@155 $generated@@4)) (= (type $generated@@267) $generated@@70)) (= ($generated@@142 $generated@@266 ($generated@@264 $generated@@267)) (forall (($generated@@268 T@U) ) (!  (=> (and (= (type $generated@@268) $generated@@155) ($generated@@0 ($generated@@87 $generated@@266 $generated@@268))) ($generated@@242 $generated@@268 $generated@@267))
 :pattern ( ($generated@@87 $generated@@266 $generated@@268))
))))
 :pattern ( ($generated@@142 $generated@@266 ($generated@@264 $generated@@267)))
)))
(assert (forall (($generated@@270 T@U) ) (! (= (type ($generated@@269 $generated@@270)) $generated@@70)
 :pattern ( ($generated@@269 $generated@@270))
)))
(assert (forall (($generated@@271 T@U) ($generated@@272 T@U) ) (!  (=> (and (= (type $generated@@271) ($generated@@82 $generated@@155 $generated@@4)) (= (type $generated@@272) $generated@@70)) (= ($generated@@142 $generated@@271 ($generated@@269 $generated@@272)) (forall (($generated@@273 T@U) ) (!  (=> (and (= (type $generated@@273) $generated@@155) ($generated@@0 ($generated@@87 $generated@@271 $generated@@273))) ($generated@@242 $generated@@273 $generated@@272))
 :pattern ( ($generated@@87 $generated@@271 $generated@@273))
))))
 :pattern ( ($generated@@142 $generated@@271 ($generated@@269 $generated@@272)))
)))
(assert (forall (($generated@@275 Int) ) (! (= ($generated@@274 $generated@@275) $generated@@275)
 :pattern ( ($generated@@274 $generated@@275))
)))
(assert (forall (($generated@@277 T@U) ) (! (let (($generated@@278 (type $generated@@277)))
(= (type ($generated@@276 $generated@@277)) $generated@@278))
 :pattern ( ($generated@@276 $generated@@277))
)))
(assert (forall (($generated@@279 T@U) ) (! (= ($generated@@276 $generated@@279) $generated@@279)
 :pattern ( ($generated@@276 $generated@@279))
)))
(assert (forall (($generated@@281 T@U) ($generated@@282 T@U) ) (!  (=> (and (and (= (type $generated@@281) $generated@@146) (= (type $generated@@282) $generated@@146)) (and ($generated@@280 $generated@@281) ($generated@@280 $generated@@282))) (= ($generated@@261 $generated@@281 $generated@@282) true))
 :pattern ( ($generated@@261 $generated@@281 $generated@@282) ($generated@@280 $generated@@281))
 :pattern ( ($generated@@261 $generated@@281 $generated@@282) ($generated@@280 $generated@@282))
)))
(assert (forall (($generated@@284 T@U) ($generated@@285 T@U) ) (!  (=> (and (and (= (type $generated@@284) $generated@@146) (= (type $generated@@285) $generated@@146)) (and ($generated@@283 $generated@@284) ($generated@@283 $generated@@285))) (= ($generated@@261 $generated@@284 $generated@@285) true))
 :pattern ( ($generated@@261 $generated@@284 $generated@@285) ($generated@@283 $generated@@284))
 :pattern ( ($generated@@261 $generated@@284 $generated@@285) ($generated@@283 $generated@@285))
)))
(assert (forall (($generated@@287 T@U) ($generated@@288 T@U) ) (!  (=> (and (and (= (type $generated@@287) $generated@@146) (= (type $generated@@288) $generated@@146)) (and ($generated@@286 $generated@@287) ($generated@@286 $generated@@288))) (= ($generated@@261 $generated@@287 $generated@@288) true))
 :pattern ( ($generated@@261 $generated@@287 $generated@@288) ($generated@@286 $generated@@287))
 :pattern ( ($generated@@261 $generated@@287 $generated@@288) ($generated@@286 $generated@@288))
)))
(assert (forall (($generated@@290 T@U) ($generated@@291 T@U) ) (!  (=> (and (and (= (type $generated@@290) $generated@@146) (= (type $generated@@291) $generated@@146)) (and ($generated@@289 $generated@@290) ($generated@@289 $generated@@291))) (= ($generated@@261 $generated@@290 $generated@@291) true))
 :pattern ( ($generated@@261 $generated@@290 $generated@@291) ($generated@@289 $generated@@290))
 :pattern ( ($generated@@261 $generated@@290 $generated@@291) ($generated@@289 $generated@@291))
)))
(assert (forall (($generated@@293 T@U) ($generated@@294 T@U) ($generated@@295 T@U) ($generated@@296 T@U) ($generated@@297 T@U) ) (!  (=> (and (and (and (and (and (= (type $generated@@293) $generated@@70) (= (type $generated@@294) $generated@@70)) (= (type $generated@@295) $generated@@155)) (= (type $generated@@296) $generated@@155)) (= (type $generated@@297) ($generated@@82 $generated@@83 $generated@@84))) ($generated@@250 $generated@@297)) (= ($generated@@80 ($generated@@241 $generated@@295 $generated@@296) ($generated@@145 $generated@@293 $generated@@294) $generated@@297)  (and ($generated@@292 $generated@@295 $generated@@293 $generated@@297) ($generated@@292 $generated@@296 $generated@@294 $generated@@297))))
 :pattern ( ($generated@@80 ($generated@@241 $generated@@295 $generated@@296) ($generated@@145 $generated@@293 $generated@@294) $generated@@297))
)))
(assert (forall (($generated@@298 T@U) ) (!  (=> (= (type $generated@@298) $generated@@146) (= ($generated@@144 $generated@@298) (= ($generated@@160 $generated@@298) $generated@@61)))
 :pattern ( ($generated@@144 $generated@@298))
)))
(assert (forall (($generated@@299 T@U) ) (!  (=> (= (type $generated@@299) $generated@@146) (= ($generated@@280 $generated@@299) (= ($generated@@160 $generated@@299) $generated@@63)))
 :pattern ( ($generated@@280 $generated@@299))
)))
(assert (forall (($generated@@300 T@U) ) (!  (=> (= (type $generated@@300) $generated@@146) (= ($generated@@283 $generated@@300) (= ($generated@@160 $generated@@300) $generated@@65)))
 :pattern ( ($generated@@283 $generated@@300))
)))
(assert (forall (($generated@@301 T@U) ) (!  (=> (= (type $generated@@301) $generated@@146) (= ($generated@@286 $generated@@301) (= ($generated@@160 $generated@@301) $generated@@66)))
 :pattern ( ($generated@@286 $generated@@301))
)))
(assert (forall (($generated@@302 T@U) ) (!  (=> (= (type $generated@@302) $generated@@146) (= ($generated@@289 $generated@@302) (= ($generated@@160 $generated@@302) $generated@@67)))
 :pattern ( ($generated@@289 $generated@@302))
)))
(assert (forall (($generated@@303 T@U) ) (!  (=> (and (= (type $generated@@303) $generated@@146) ($generated@@144 $generated@@303)) (exists (($generated@@304 T@U) ($generated@@305 T@U) ) (!  (and (and (= (type $generated@@304) $generated@@155) (= (type $generated@@305) $generated@@155)) (= $generated@@303 ($generated@@241 $generated@@304 $generated@@305)))
 :no-pattern (type $generated@@304)
 :no-pattern (type $generated@@305)
 :no-pattern ($generated $generated@@304)
 :no-pattern ($generated@@0 $generated@@304)
 :no-pattern ($generated $generated@@305)
 :no-pattern ($generated@@0 $generated@@305)
)))
 :pattern ( ($generated@@144 $generated@@303))
)))
(assert  (and (and (forall (($generated@@310 T@T) ) (= ($generated@@1 ($generated@@308 $generated@@310)) 17)) (forall (($generated@@311 T@T) ) (! (= ($generated@@309 ($generated@@308 $generated@@311)) $generated@@311)
 :pattern ( ($generated@@308 $generated@@311))
))) (forall (($generated@@312 T@T) ) (! (= (type ($generated@@306 $generated@@312)) ($generated@@308 $generated@@312))
 :pattern ( ($generated@@306 $generated@@312))
))))
(assert (forall (($generated@@313 T@T) ) (! (= ($generated@@307 ($generated@@306 $generated@@313)) 0)
 :pattern ( ($generated@@306 $generated@@313))
)))
(assert (forall (($generated@@314 T@U) ) (!  (=> (and (= (type $generated@@314) $generated@@146) ($generated@@280 $generated@@314)) (= $generated@@314 $generated@@161))
 :pattern ( ($generated@@280 $generated@@314))
)))
(assert (forall (($generated@@315 T@U) ) (!  (=> (and (= (type $generated@@315) $generated@@146) ($generated@@283 $generated@@315)) (= $generated@@315 $generated@@163))
 :pattern ( ($generated@@283 $generated@@315))
)))
(assert (forall (($generated@@316 T@U) ) (!  (=> (and (= (type $generated@@316) $generated@@146) ($generated@@286 $generated@@316)) (= $generated@@316 $generated@@164))
 :pattern ( ($generated@@286 $generated@@316))
)))
(assert (forall (($generated@@317 T@U) ) (!  (=> (and (= (type $generated@@317) $generated@@146) ($generated@@289 $generated@@317)) (= $generated@@317 $generated@@165))
 :pattern ( ($generated@@289 $generated@@317))
)))
(assert ($generated@@318 $generated@@60))
(assert (forall (($generated@@320 T@U) ) (! (= (type ($generated@@319 $generated@@320)) $generated@@155)
 :pattern ( ($generated@@319 $generated@@320))
)))
(assert (forall (($generated@@321 T@U) ($generated@@322 T@U) ($generated@@323 T@U) ) (!  (=> (and (= (type $generated@@322) $generated@@70) (= (type $generated@@323) ($generated@@82 $generated@@83 $generated@@84))) (= ($generated@@292 ($generated@@319 $generated@@321) $generated@@322 $generated@@323) ($generated@@80 $generated@@321 $generated@@322 $generated@@323)))
 :pattern ( ($generated@@292 ($generated@@319 $generated@@321) $generated@@322 $generated@@323))
)))
(assert (forall (($generated@@324 T@U) ($generated@@325 T@U) ($generated@@326 T@U) ($generated@@327 T@U) ) (!  (=> (and (and (and (and (and (= (type $generated@@324) ($generated@@82 $generated@@83 $generated@@84)) (= (type $generated@@325) ($generated@@82 $generated@@83 $generated@@84))) (= (type $generated@@326) $generated@@155)) (= (type $generated@@327) $generated@@70)) ($generated@@138 $generated@@324 $generated@@325)) ($generated@@292 $generated@@326 $generated@@327 $generated@@324)) ($generated@@292 $generated@@326 $generated@@327 $generated@@325))
 :pattern ( ($generated@@138 $generated@@324 $generated@@325) ($generated@@292 $generated@@326 $generated@@327 $generated@@324))
)))
(assert (forall (($generated@@328 T@U) ($generated@@329 T@U) ($generated@@330 T@U) ($generated@@331 T@U) ) (!  (=> (and (and (and (and (= (type $generated@@328) ($generated@@82 $generated@@83 $generated@@84)) (= (type $generated@@329) ($generated@@82 $generated@@83 $generated@@84))) (= (type $generated@@331) $generated@@70)) ($generated@@138 $generated@@328 $generated@@329)) ($generated@@80 $generated@@330 $generated@@331 $generated@@328)) ($generated@@80 $generated@@330 $generated@@331 $generated@@329))
 :pattern ( ($generated@@138 $generated@@328 $generated@@329) ($generated@@80 $generated@@330 $generated@@331 $generated@@328))
)))
(assert (forall (($generated@@334 T@T) ) (! (= (type ($generated@@333 $generated@@334)) ($generated@@82 $generated@@334 $generated@@2))
 :pattern ( ($generated@@333 $generated@@334))
)))
(assert (forall (($generated@@335 T@U) ) (! (let (($generated@@336 ($generated@@85 (type $generated@@335))))
 (=> (= (type $generated@@335) ($generated@@82 $generated@@336 $generated@@2)) (and (= (= ($generated@@332 $generated@@335) 0) (= $generated@@335 ($generated@@333 $generated@@336))) (=> (not (= ($generated@@332 $generated@@335) 0)) (exists (($generated@@337 T@U) ) (!  (and (= (type $generated@@337) $generated@@336) (< 0 ($generated ($generated@@87 $generated@@335 $generated@@337))))
 :no-pattern (type $generated@@337)
 :no-pattern ($generated $generated@@337)
 :no-pattern ($generated@@0 $generated@@337)
))))))
 :pattern ( ($generated@@332 $generated@@335))
)))
(assert  (and (and (and (and (forall (($generated@@343 T@T) ($generated@@344 T@T) ) (= ($generated@@1 ($generated@@340 $generated@@343 $generated@@344)) 18)) (forall (($generated@@345 T@T) ($generated@@346 T@T) ) (! (= ($generated@@341 ($generated@@340 $generated@@345 $generated@@346)) $generated@@345)
 :pattern ( ($generated@@340 $generated@@345 $generated@@346))
))) (forall (($generated@@347 T@T) ($generated@@348 T@T) ) (! (= ($generated@@342 ($generated@@340 $generated@@347 $generated@@348)) $generated@@348)
 :pattern ( ($generated@@340 $generated@@347 $generated@@348))
))) (forall (($generated@@349 T@U) ) (! (let (($generated@@350 ($generated@@341 (type $generated@@349))))
(= (type ($generated@@338 $generated@@349)) ($generated@@82 $generated@@350 $generated@@4)))
 :pattern ( ($generated@@338 $generated@@349))
))) (forall (($generated@@351 T@T) ($generated@@352 T@T) ) (! (= (type ($generated@@339 $generated@@351 $generated@@352)) ($generated@@340 $generated@@351 $generated@@352))
 :pattern ( ($generated@@339 $generated@@351 $generated@@352))
))))
(assert (forall (($generated@@353 T@U) ($generated@@354 T@T) ) (! (let (($generated@@355 (type $generated@@353)))
 (not ($generated@@0 ($generated@@87 ($generated@@338 ($generated@@339 $generated@@355 $generated@@354)) $generated@@353))))
 :pattern ( (let (($generated@@355 (type $generated@@353)))
($generated@@87 ($generated@@338 ($generated@@339 $generated@@355 $generated@@354)) $generated@@353)))
)))
(assert  (and (and (and (and (forall (($generated@@361 T@T) ($generated@@362 T@T) ) (= ($generated@@1 ($generated@@358 $generated@@361 $generated@@362)) 19)) (forall (($generated@@363 T@T) ($generated@@364 T@T) ) (! (= ($generated@@359 ($generated@@358 $generated@@363 $generated@@364)) $generated@@363)
 :pattern ( ($generated@@358 $generated@@363 $generated@@364))
))) (forall (($generated@@365 T@T) ($generated@@366 T@T) ) (! (= ($generated@@360 ($generated@@358 $generated@@365 $generated@@366)) $generated@@366)
 :pattern ( ($generated@@358 $generated@@365 $generated@@366))
))) (forall (($generated@@367 T@U) ) (! (let (($generated@@368 ($generated@@359 (type $generated@@367))))
(= (type ($generated@@356 $generated@@367)) ($generated@@82 $generated@@368 $generated@@4)))
 :pattern ( ($generated@@356 $generated@@367))
))) (forall (($generated@@369 T@T) ($generated@@370 T@T) ) (! (= (type ($generated@@357 $generated@@369 $generated@@370)) ($generated@@358 $generated@@369 $generated@@370))
 :pattern ( ($generated@@357 $generated@@369 $generated@@370))
))))
(assert (forall (($generated@@371 T@U) ($generated@@372 T@T) ) (! (let (($generated@@373 (type $generated@@371)))
 (not ($generated@@0 ($generated@@87 ($generated@@356 ($generated@@357 $generated@@373 $generated@@372)) $generated@@371))))
 :pattern ( (let (($generated@@373 (type $generated@@371)))
($generated@@87 ($generated@@356 ($generated@@357 $generated@@373 $generated@@372)) $generated@@371)))
)))
(assert (forall (($generated@@375 T@U) ($generated@@376 T@U) ) (!  (=> (and (and (= (type $generated@@375) ($generated@@82 $generated@@83 $generated@@84)) (= (type $generated@@376) ($generated@@82 $generated@@83 $generated@@84))) ($generated@@374 $generated@@375 $generated@@376)) (and ($generated@@138 $generated@@375 $generated@@376) (forall (($generated@@377 T@U) ($generated@@378 T@U) ) (! (let (($generated@@379 ($generated@@73 (type $generated@@378))))
 (=> (and (and (= (type $generated@@377) $generated@@83) (= (type $generated@@378) ($generated@@72 $generated@@379))) (not ($generated@@318 $generated@@378))) (= ($generated@@89 ($generated@@87 $generated@@375 $generated@@377) $generated@@378) ($generated@@89 ($generated@@87 $generated@@376 $generated@@377) $generated@@378))))
 :pattern ( ($generated@@89 ($generated@@87 $generated@@376 $generated@@377) $generated@@378))
))))
 :pattern ( ($generated@@374 $generated@@375 $generated@@376))
)))
(assert (forall (($generated@@380 T@U) ) (! (let (($generated@@381 ($generated@@85 (type $generated@@380))))
 (=> (= (type $generated@@380) ($generated@@82 $generated@@381 $generated@@2)) (= ($generated@@167 $generated@@380) (forall (($generated@@382 T@U) ) (!  (=> (= (type $generated@@382) $generated@@381) (and (<= 0 ($generated ($generated@@87 $generated@@380 $generated@@382))) (<= ($generated ($generated@@87 $generated@@380 $generated@@382)) ($generated@@332 $generated@@380))))
 :pattern ( ($generated@@87 $generated@@380 $generated@@382))
)))))
 :pattern ( ($generated@@167 $generated@@380))
)))
(assert (forall (($generated@@384 T@T) ($generated@@385 T@U) ) (! (= (type ($generated@@383 $generated@@384 $generated@@385)) $generated@@384)
 :pattern ( ($generated@@383 $generated@@384 $generated@@385))
)))
(assert (forall (($generated@@386 T@U) ) (!  (=> (and (= (type $generated@@386) $generated@@155) ($generated@@242 $generated@@386 $generated@@249)) (and (= ($generated@@319 ($generated@@383 $generated@@146 $generated@@386)) $generated@@386) ($generated@@142 ($generated@@383 $generated@@146 $generated@@386) $generated@@249)))
 :pattern ( ($generated@@242 $generated@@386 $generated@@249))
)))
(assert (forall (($generated@@387 T@U) ) (! (let (($generated@@388 ($generated@@342 (type $generated@@387))))
(let (($generated@@389 ($generated@@341 (type $generated@@387))))
 (=> (= (type $generated@@387) ($generated@@340 $generated@@389 $generated@@388)) (or (= $generated@@387 ($generated@@339 $generated@@389 $generated@@388)) (exists (($generated@@390 T@U) ) (!  (and (= (type $generated@@390) $generated@@389) ($generated@@0 ($generated@@87 ($generated@@338 $generated@@387) $generated@@390)))
 :no-pattern (type $generated@@390)
 :no-pattern ($generated $generated@@390)
 :no-pattern ($generated@@0 $generated@@390)
))))))
 :pattern ( ($generated@@338 $generated@@387))
)))
(assert (forall (($generated@@392 T@U) ) (! (let (($generated@@393 ($generated@@342 (type $generated@@392))))
(= (type ($generated@@391 $generated@@392)) ($generated@@82 $generated@@393 $generated@@4)))
 :pattern ( ($generated@@391 $generated@@392))
)))
(assert (forall (($generated@@394 T@U) ) (! (let (($generated@@395 ($generated@@342 (type $generated@@394))))
(let (($generated@@396 ($generated@@341 (type $generated@@394))))
 (=> (= (type $generated@@394) ($generated@@340 $generated@@396 $generated@@395)) (or (= $generated@@394 ($generated@@339 $generated@@396 $generated@@395)) (exists (($generated@@397 T@U) ) (!  (and (= (type $generated@@397) $generated@@395) ($generated@@0 ($generated@@87 ($generated@@391 $generated@@394) $generated@@397)))
 :no-pattern (type $generated@@397)
 :no-pattern ($generated $generated@@397)
 :no-pattern ($generated@@0 $generated@@397)
))))))
 :pattern ( ($generated@@391 $generated@@394))
)))
(assert (forall (($generated@@398 T@U) ) (! (let (($generated@@399 ($generated@@360 (type $generated@@398))))
(let (($generated@@400 ($generated@@359 (type $generated@@398))))
 (=> (= (type $generated@@398) ($generated@@358 $generated@@400 $generated@@399)) (or (= $generated@@398 ($generated@@357 $generated@@400 $generated@@399)) (exists (($generated@@401 T@U) ) (!  (and (= (type $generated@@401) $generated@@400) ($generated@@0 ($generated@@87 ($generated@@356 $generated@@398) $generated@@401)))
 :no-pattern (type $generated@@401)
 :no-pattern ($generated $generated@@401)
 :no-pattern ($generated@@0 $generated@@401)
))))))
 :pattern ( ($generated@@356 $generated@@398))
)))
(assert (forall (($generated@@403 T@U) ) (! (let (($generated@@404 ($generated@@360 (type $generated@@403))))
(= (type ($generated@@402 $generated@@403)) ($generated@@82 $generated@@404 $generated@@4)))
 :pattern ( ($generated@@402 $generated@@403))
)))
(assert (forall (($generated@@405 T@U) ) (! (let (($generated@@406 ($generated@@360 (type $generated@@405))))
(let (($generated@@407 ($generated@@359 (type $generated@@405))))
 (=> (= (type $generated@@405) ($generated@@358 $generated@@407 $generated@@406)) (or (= $generated@@405 ($generated@@357 $generated@@407 $generated@@406)) (exists (($generated@@408 T@U) ) (!  (and (= (type $generated@@408) $generated@@406) ($generated@@0 ($generated@@87 ($generated@@402 $generated@@405) $generated@@408)))
 :no-pattern (type $generated@@408)
 :no-pattern ($generated $generated@@408)
 :no-pattern ($generated@@0 $generated@@408)
))))))
 :pattern ( ($generated@@402 $generated@@405))
)))
(assert (forall (($generated@@409 T@U) ($generated@@410 T@U) ) (!  (=> (and (= (type $generated@@409) ($generated@@82 $generated@@155 $generated@@2)) (= (type $generated@@410) $generated@@70)) (= ($generated@@142 $generated@@409 ($generated@@166 $generated@@410)) (forall (($generated@@411 T@U) ) (!  (=> (and (= (type $generated@@411) $generated@@155) (< 0 ($generated ($generated@@87 $generated@@409 $generated@@411)))) ($generated@@242 $generated@@411 $generated@@410))
 :pattern ( ($generated@@87 $generated@@409 $generated@@411))
))))
 :pattern ( ($generated@@142 $generated@@409 ($generated@@166 $generated@@410)))
)))
(assert (forall (($generated@@414 T@U) ($generated@@415 T@U) ) (! (let (($generated@@416 ($generated@@85 (type $generated@@414))))
(= (type ($generated@@413 $generated@@414 $generated@@415)) ($generated@@82 $generated@@416 $generated@@4)))
 :pattern ( ($generated@@413 $generated@@414 $generated@@415))
)))
(assert (forall (($generated@@417 T@U) ($generated@@418 T@U) ) (! (let (($generated@@419 ($generated@@85 (type $generated@@417))))
 (=> (and (and (= (type $generated@@417) ($generated@@82 $generated@@419 $generated@@4)) (= (type $generated@@418) ($generated@@82 $generated@@419 $generated@@4))) ($generated@@412 $generated@@417 $generated@@418)) (and (= ($generated@@413 ($generated@@227 $generated@@417 $generated@@418) $generated@@417) $generated@@418) (= ($generated@@413 ($generated@@227 $generated@@417 $generated@@418) $generated@@418) $generated@@417))))
 :pattern ( ($generated@@227 $generated@@417 $generated@@418))
)))
(assert (forall (($generated@@421 T@U) ) (! (let (($generated@@422 ($generated@@342 (type $generated@@421))))
(let (($generated@@423 ($generated@@341 (type $generated@@421))))
 (=> (= (type $generated@@421) ($generated@@340 $generated@@423 $generated@@422)) (= (= ($generated@@420 $generated@@421) 0) (= $generated@@421 ($generated@@339 $generated@@423 $generated@@422))))))
 :pattern ( ($generated@@420 $generated@@421))
)))
(assert (forall (($generated@@424 T@U) ($generated@@425 T@U) ($generated@@426 T@U) ) (! (let (($generated@@427 (type $generated@@426)))
 (=> (and (= (type $generated@@424) ($generated@@82 $generated@@427 $generated@@4)) (= (type $generated@@425) ($generated@@82 $generated@@427 $generated@@4))) (= ($generated@@0 ($generated@@87 ($generated@@234 $generated@@424 $generated@@425) $generated@@426))  (and ($generated@@0 ($generated@@87 $generated@@424 $generated@@426)) ($generated@@0 ($generated@@87 $generated@@425 $generated@@426))))))
 :pattern ( ($generated@@87 ($generated@@234 $generated@@424 $generated@@425) $generated@@426))
)))
(assert (forall (($generated@@428 T@U) ($generated@@429 T@U) ($generated@@430 T@U) ) (! (let (($generated@@431 (type $generated@@430)))
 (=> (and (= (type $generated@@428) ($generated@@82 $generated@@431 $generated@@4)) (= (type $generated@@429) ($generated@@82 $generated@@431 $generated@@4))) (= ($generated@@0 ($generated@@87 ($generated@@413 $generated@@428 $generated@@429) $generated@@430))  (and ($generated@@0 ($generated@@87 $generated@@428 $generated@@430)) (not ($generated@@0 ($generated@@87 $generated@@429 $generated@@430)))))))
 :pattern ( ($generated@@87 ($generated@@413 $generated@@428 $generated@@429) $generated@@430))
)))
(assert (forall (($generated@@432 T@U) ($generated@@433 T@U) ($generated@@434 T@U) ) (!  (=> (and (and (= (type $generated@@432) ($generated@@82 $generated@@155 $generated@@4)) (= (type $generated@@433) $generated@@70)) (= (type $generated@@434) ($generated@@82 $generated@@83 $generated@@84))) (= ($generated@@80 $generated@@432 ($generated@@264 $generated@@433) $generated@@434) (forall (($generated@@435 T@U) ) (!  (=> (and (= (type $generated@@435) $generated@@155) ($generated@@0 ($generated@@87 $generated@@432 $generated@@435))) ($generated@@292 $generated@@435 $generated@@433 $generated@@434))
 :pattern ( ($generated@@87 $generated@@432 $generated@@435))
))))
 :pattern ( ($generated@@80 $generated@@432 ($generated@@264 $generated@@433) $generated@@434))
)))
(assert (forall (($generated@@436 T@U) ($generated@@437 T@U) ($generated@@438 T@U) ) (!  (=> (and (and (= (type $generated@@436) ($generated@@82 $generated@@155 $generated@@4)) (= (type $generated@@437) $generated@@70)) (= (type $generated@@438) ($generated@@82 $generated@@83 $generated@@84))) (= ($generated@@80 $generated@@436 ($generated@@269 $generated@@437) $generated@@438) (forall (($generated@@439 T@U) ) (!  (=> (and (= (type $generated@@439) $generated@@155) ($generated@@0 ($generated@@87 $generated@@436 $generated@@439))) ($generated@@292 $generated@@439 $generated@@437 $generated@@438))
 :pattern ( ($generated@@87 $generated@@436 $generated@@439))
))))
 :pattern ( ($generated@@80 $generated@@436 ($generated@@269 $generated@@437) $generated@@438))
)))
(assert (forall (($generated@@440 T@U) ) (! (let (($generated@@441 (type $generated@@440)))
(= ($generated ($generated@@87 ($generated@@333 $generated@@441) $generated@@440)) 0))
 :pattern ( (let (($generated@@441 (type $generated@@440)))
($generated@@87 ($generated@@333 $generated@@441) $generated@@440)))
)))
(assert  (and (forall (($generated@@444 T@U) ) (! (= (type ($generated@@442 $generated@@444)) ($generated@@82 $generated@@155 $generated@@4))
 :pattern ( ($generated@@442 $generated@@444))
)) (forall (($generated@@445 T@U) ) (! (let (($generated@@446 ($generated@@342 (type $generated@@445))))
(let (($generated@@447 ($generated@@341 (type $generated@@445))))
(= (type ($generated@@443 $generated@@445)) ($generated@@82 $generated@@447 $generated@@446))))
 :pattern ( ($generated@@443 $generated@@445))
))))
(assert (forall (($generated@@448 T@U) ($generated@@449 T@U) ) (!  (=> (and (= (type $generated@@448) ($generated@@340 $generated@@155 $generated@@155)) (= (type $generated@@449) $generated@@155)) (= ($generated@@0 ($generated@@87 ($generated@@442 $generated@@448) $generated@@449))  (and ($generated@@0 ($generated@@87 ($generated@@338 $generated@@448) ($generated@@153 ($generated@@383 $generated@@146 $generated@@449)))) (= ($generated@@87 ($generated@@443 $generated@@448) ($generated@@153 ($generated@@383 $generated@@146 $generated@@449))) ($generated@@154 ($generated@@383 $generated@@146 $generated@@449))))))
 :pattern ( ($generated@@87 ($generated@@442 $generated@@448) $generated@@449))
)))
(assert  (and (forall (($generated@@452 T@U) ) (! (= (type ($generated@@450 $generated@@452)) ($generated@@82 $generated@@155 $generated@@4))
 :pattern ( ($generated@@450 $generated@@452))
)) (forall (($generated@@453 T@U) ) (! (let (($generated@@454 ($generated@@360 (type $generated@@453))))
(let (($generated@@455 ($generated@@359 (type $generated@@453))))
(= (type ($generated@@451 $generated@@453)) ($generated@@82 $generated@@455 $generated@@454))))
 :pattern ( ($generated@@451 $generated@@453))
))))
(assert (forall (($generated@@456 T@U) ($generated@@457 T@U) ) (!  (=> (and (= (type $generated@@456) ($generated@@358 $generated@@155 $generated@@155)) (= (type $generated@@457) $generated@@155)) (= ($generated@@0 ($generated@@87 ($generated@@450 $generated@@456) $generated@@457))  (and ($generated@@0 ($generated@@87 ($generated@@356 $generated@@456) ($generated@@153 ($generated@@383 $generated@@146 $generated@@457)))) (= ($generated@@87 ($generated@@451 $generated@@456) ($generated@@153 ($generated@@383 $generated@@146 $generated@@457))) ($generated@@154 ($generated@@383 $generated@@146 $generated@@457))))))
 :pattern ( ($generated@@87 ($generated@@450 $generated@@456) $generated@@457))
)))
(assert (forall (($generated@@458 T@U) ($generated@@459 T@U) ) (! (let (($generated@@460 (type $generated@@459)))
(let (($generated@@461 ($generated@@341 (type $generated@@458))))
 (=> (= (type $generated@@458) ($generated@@340 $generated@@461 $generated@@460)) (= ($generated@@0 ($generated@@87 ($generated@@391 $generated@@458) $generated@@459)) (exists (($generated@@462 T@U) ) (!  (and (= (type $generated@@462) $generated@@461) (and ($generated@@0 ($generated@@87 ($generated@@338 $generated@@458) $generated@@462)) (= $generated@@459 ($generated@@87 ($generated@@443 $generated@@458) $generated@@462))))
 :pattern ( ($generated@@87 ($generated@@338 $generated@@458) $generated@@462))
 :pattern ( ($generated@@87 ($generated@@443 $generated@@458) $generated@@462))
))))))
 :pattern ( ($generated@@87 ($generated@@391 $generated@@458) $generated@@459))
)))
(assert (forall (($generated@@463 T@U) ($generated@@464 T@U) ) (! (let (($generated@@465 (type $generated@@464)))
(let (($generated@@466 ($generated@@359 (type $generated@@463))))
 (=> (= (type $generated@@463) ($generated@@358 $generated@@466 $generated@@465)) (= ($generated@@0 ($generated@@87 ($generated@@402 $generated@@463) $generated@@464)) (exists (($generated@@467 T@U) ) (!  (and (= (type $generated@@467) $generated@@466) (and ($generated@@0 ($generated@@87 ($generated@@356 $generated@@463) $generated@@467)) (= $generated@@464 ($generated@@87 ($generated@@451 $generated@@463) $generated@@467))))
 :pattern ( ($generated@@87 ($generated@@356 $generated@@463) $generated@@467))
 :pattern ( ($generated@@87 ($generated@@451 $generated@@463) $generated@@467))
))))))
 :pattern ( ($generated@@87 ($generated@@402 $generated@@463) $generated@@464))
)))
(assert (forall (($generated@@469 T@U) ($generated@@470 T@U) ) (! (= (type ($generated@@468 $generated@@469 $generated@@470)) $generated@@70)
 :pattern ( ($generated@@468 $generated@@469 $generated@@470))
)))
(assert (forall (($generated@@471 T@U) ($generated@@472 T@U) ($generated@@473 T@U) ($generated@@474 T@U) ) (!  (=> (and (and (and (= (type $generated@@471) ($generated@@340 $generated@@155 $generated@@155)) (= (type $generated@@472) $generated@@70)) (= (type $generated@@473) $generated@@70)) (= (type $generated@@474) ($generated@@82 $generated@@83 $generated@@84))) (= ($generated@@80 $generated@@471 ($generated@@468 $generated@@472 $generated@@473) $generated@@474) (forall (($generated@@475 T@U) ) (!  (=> (and (= (type $generated@@475) $generated@@155) ($generated@@0 ($generated@@87 ($generated@@338 $generated@@471) $generated@@475))) (and ($generated@@292 ($generated@@87 ($generated@@443 $generated@@471) $generated@@475) $generated@@473 $generated@@474) ($generated@@292 $generated@@475 $generated@@472 $generated@@474)))
 :pattern ( ($generated@@87 ($generated@@443 $generated@@471) $generated@@475))
 :pattern ( ($generated@@87 ($generated@@338 $generated@@471) $generated@@475))
))))
 :pattern ( ($generated@@80 $generated@@471 ($generated@@468 $generated@@472 $generated@@473) $generated@@474))
)))
(assert (forall (($generated@@477 T@U) ($generated@@478 T@U) ) (! (= (type ($generated@@476 $generated@@477 $generated@@478)) $generated@@70)
 :pattern ( ($generated@@476 $generated@@477 $generated@@478))
)))
(assert (forall (($generated@@479 T@U) ($generated@@480 T@U) ($generated@@481 T@U) ($generated@@482 T@U) ) (!  (=> (and (and (and (= (type $generated@@479) ($generated@@358 $generated@@155 $generated@@155)) (= (type $generated@@480) $generated@@70)) (= (type $generated@@481) $generated@@70)) (= (type $generated@@482) ($generated@@82 $generated@@83 $generated@@84))) (= ($generated@@80 $generated@@479 ($generated@@476 $generated@@480 $generated@@481) $generated@@482) (forall (($generated@@483 T@U) ) (!  (=> (and (= (type $generated@@483) $generated@@155) ($generated@@0 ($generated@@87 ($generated@@356 $generated@@479) $generated@@483))) (and ($generated@@292 ($generated@@87 ($generated@@451 $generated@@479) $generated@@483) $generated@@481 $generated@@482) ($generated@@292 $generated@@483 $generated@@480 $generated@@482)))
 :pattern ( ($generated@@87 ($generated@@451 $generated@@479) $generated@@483))
 :pattern ( ($generated@@87 ($generated@@356 $generated@@479) $generated@@483))
))))
 :pattern ( ($generated@@80 $generated@@479 ($generated@@476 $generated@@480 $generated@@481) $generated@@482))
)))
(assert (forall (($generated@@485 T@U) ($generated@@486 T@U) ) (! (let (($generated@@487 (type $generated@@486)))
(= (type ($generated@@484 $generated@@485 $generated@@486)) ($generated@@82 $generated@@487 $generated@@4)))
 :pattern ( ($generated@@484 $generated@@485 $generated@@486))
)))
(assert (forall (($generated@@488 T@U) ($generated@@489 T@U) ($generated@@490 T@U) ) (! (let (($generated@@491 (type $generated@@489)))
 (=> (and (and (= (type $generated@@488) ($generated@@82 $generated@@491 $generated@@4)) (= (type $generated@@490) $generated@@491)) ($generated@@0 ($generated@@87 $generated@@488 $generated@@490))) ($generated@@0 ($generated@@87 ($generated@@484 $generated@@488 $generated@@489) $generated@@490))))
 :pattern ( ($generated@@484 $generated@@488 $generated@@489) ($generated@@87 $generated@@488 $generated@@490))
)))
(assert (forall (($generated@@492 T@U) ($generated@@493 T@U) ($generated@@494 T@U) ) (! (let (($generated@@495 (type $generated@@494)))
 (=> (and (and (= (type $generated@@492) ($generated@@82 $generated@@495 $generated@@4)) (= (type $generated@@493) ($generated@@82 $generated@@495 $generated@@4))) ($generated@@0 ($generated@@87 $generated@@492 $generated@@494))) ($generated@@0 ($generated@@87 ($generated@@227 $generated@@492 $generated@@493) $generated@@494))))
 :pattern ( ($generated@@227 $generated@@492 $generated@@493) ($generated@@87 $generated@@492 $generated@@494))
)))
(assert (forall (($generated@@496 T@U) ($generated@@497 T@U) ($generated@@498 T@U) ) (! (let (($generated@@499 (type $generated@@498)))
 (=> (and (and (= (type $generated@@496) ($generated@@82 $generated@@499 $generated@@4)) (= (type $generated@@497) ($generated@@82 $generated@@499 $generated@@4))) ($generated@@0 ($generated@@87 $generated@@497 $generated@@498))) ($generated@@0 ($generated@@87 ($generated@@227 $generated@@496 $generated@@497) $generated@@498))))
 :pattern ( ($generated@@227 $generated@@496 $generated@@497) ($generated@@87 $generated@@497 $generated@@498))
)))
(assert (forall (($generated@@500 T@U) ($generated@@501 T@U) ($generated@@502 T@U) ) (! (let (($generated@@503 (type $generated@@501)))
 (=> (and (= (type $generated@@500) ($generated@@82 $generated@@503 $generated@@4)) (= (type $generated@@502) $generated@@503)) (= ($generated@@0 ($generated@@87 ($generated@@484 $generated@@500 $generated@@501) $generated@@502))  (or (= $generated@@502 $generated@@501) ($generated@@0 ($generated@@87 $generated@@500 $generated@@502))))))
 :pattern ( ($generated@@87 ($generated@@484 $generated@@500 $generated@@501) $generated@@502))
)))
(assert (forall (($generated@@504 T@U) ($generated@@505 T@U) ($generated@@506 T@U) ) (!  (=> (and (and (and (and (= (type $generated@@504) ($generated@@82 $generated@@83 $generated@@84)) (= (type $generated@@505) ($generated@@82 $generated@@83 $generated@@84))) (= (type $generated@@506) ($generated@@82 $generated@@83 $generated@@84))) (not (= $generated@@504 $generated@@506))) (and ($generated@@138 $generated@@504 $generated@@505) ($generated@@138 $generated@@505 $generated@@506))) ($generated@@138 $generated@@504 $generated@@506))
 :pattern ( ($generated@@138 $generated@@504 $generated@@505) ($generated@@138 $generated@@505 $generated@@506))
)))
(assert (forall (($generated@@507 T@U) ($generated@@508 T@U) ($generated@@509 T@U) ) (! (let (($generated@@510 (type $generated@@509)))
 (=> (and (and (= (type $generated@@507) ($generated@@82 $generated@@510 $generated@@4)) (= (type $generated@@508) ($generated@@82 $generated@@510 $generated@@4))) ($generated@@0 ($generated@@87 $generated@@508 $generated@@509))) (not ($generated@@0 ($generated@@87 ($generated@@413 $generated@@507 $generated@@508) $generated@@509)))))
 :pattern ( ($generated@@413 $generated@@507 $generated@@508) ($generated@@87 $generated@@508 $generated@@509))
)))
(assert (forall (($generated@@512 T@T) ) (! (= (type ($generated@@511 $generated@@512)) ($generated@@82 $generated@@512 $generated@@4))
 :pattern ( ($generated@@511 $generated@@512))
)))
(assert (forall (($generated@@513 T@U) ) (! (let (($generated@@514 ($generated@@360 (type $generated@@513))))
(let (($generated@@515 ($generated@@359 (type $generated@@513))))
 (=> (= (type $generated@@513) ($generated@@358 $generated@@515 $generated@@514)) (= (= $generated@@513 ($generated@@357 $generated@@515 $generated@@514)) (= ($generated@@356 $generated@@513) ($generated@@511 $generated@@515))))))
 :pattern ( ($generated@@356 $generated@@513))
)))
(assert (forall (($generated@@516 T@U) ) (! (let (($generated@@517 ($generated@@360 (type $generated@@516))))
(let (($generated@@518 ($generated@@359 (type $generated@@516))))
 (=> (= (type $generated@@516) ($generated@@358 $generated@@518 $generated@@517)) (= (= $generated@@516 ($generated@@357 $generated@@518 $generated@@517)) (= ($generated@@402 $generated@@516) ($generated@@511 $generated@@517))))))
 :pattern ( ($generated@@402 $generated@@516))
)))
(assert (forall (($generated@@519 T@U) ) (! (let (($generated@@520 ($generated@@360 (type $generated@@519))))
(let (($generated@@521 ($generated@@359 (type $generated@@519))))
 (=> (= (type $generated@@519) ($generated@@358 $generated@@521 $generated@@520)) (= (= $generated@@519 ($generated@@357 $generated@@521 $generated@@520)) (= ($generated@@450 $generated@@519) ($generated@@511 $generated@@155))))))
 :pattern ( ($generated@@450 $generated@@519))
)))
(assert (forall (($generated@@522 T@U) ) (! (let (($generated@@523 ($generated@@342 (type $generated@@522))))
(let (($generated@@524 ($generated@@341 (type $generated@@522))))
 (=> (= (type $generated@@522) ($generated@@340 $generated@@524 $generated@@523)) (or (= $generated@@522 ($generated@@339 $generated@@524 $generated@@523)) (exists (($generated@@525 T@U) ($generated@@526 T@U) ) (!  (and (and (= (type $generated@@525) $generated@@155) (= (type $generated@@526) $generated@@155)) ($generated@@0 ($generated@@87 ($generated@@442 $generated@@522) ($generated@@319 ($generated@@241 $generated@@525 $generated@@526)))))
 :no-pattern (type $generated@@525)
 :no-pattern (type $generated@@526)
 :no-pattern ($generated $generated@@525)
 :no-pattern ($generated@@0 $generated@@525)
 :no-pattern ($generated $generated@@526)
 :no-pattern ($generated@@0 $generated@@526)
))))))
 :pattern ( ($generated@@442 $generated@@522))
)))
(assert (forall (($generated@@527 T@U) ) (! (let (($generated@@528 ($generated@@360 (type $generated@@527))))
(let (($generated@@529 ($generated@@359 (type $generated@@527))))
 (=> (= (type $generated@@527) ($generated@@358 $generated@@529 $generated@@528)) (or (= $generated@@527 ($generated@@357 $generated@@529 $generated@@528)) (exists (($generated@@530 T@U) ($generated@@531 T@U) ) (!  (and (and (= (type $generated@@530) $generated@@155) (= (type $generated@@531) $generated@@155)) ($generated@@0 ($generated@@87 ($generated@@450 $generated@@527) ($generated@@319 ($generated@@241 $generated@@530 $generated@@531)))))
 :no-pattern (type $generated@@530)
 :no-pattern (type $generated@@531)
 :no-pattern ($generated $generated@@530)
 :no-pattern ($generated@@0 $generated@@530)
 :no-pattern ($generated $generated@@531)
 :no-pattern ($generated@@0 $generated@@531)
))))))
 :pattern ( ($generated@@450 $generated@@527))
)))
(assert (forall (($generated@@532 T@U) ) (!  (=> (and (= (type $generated@@532) $generated@@155) ($generated@@242 $generated@@532 $generated@@46)) (and (= ($generated@@319 ($generated@@383 $generated@@2 $generated@@532)) $generated@@532) ($generated@@142 ($generated@@383 $generated@@2 $generated@@532) $generated@@46)))
 :pattern ( ($generated@@242 $generated@@532 $generated@@46))
)))
(assert (forall (($generated@@533 T@U) ) (!  (=> (and (= (type $generated@@533) $generated@@155) ($generated@@242 $generated@@533 $generated@@47)) (and (= ($generated@@319 ($generated@@383 $generated@@3 $generated@@533)) $generated@@533) ($generated@@142 ($generated@@383 $generated@@3 $generated@@533) $generated@@47)))
 :pattern ( ($generated@@242 $generated@@533 $generated@@47))
)))
(assert (forall (($generated@@534 T@U) ) (!  (=> (and (= (type $generated@@534) $generated@@155) ($generated@@242 $generated@@534 $generated@@44)) (and (= ($generated@@319 ($generated@@383 $generated@@4 $generated@@534)) $generated@@534) ($generated@@142 ($generated@@383 $generated@@4 $generated@@534) $generated@@44)))
 :pattern ( ($generated@@242 $generated@@534 $generated@@44))
)))
(assert (= ($generated@@1 $generated@@535) 20))
(assert (forall (($generated@@536 T@U) ) (!  (=> (and (= (type $generated@@536) $generated@@155) ($generated@@242 $generated@@536 $generated@@45)) (and (= ($generated@@319 ($generated@@383 $generated@@535 $generated@@536)) $generated@@536) ($generated@@142 ($generated@@383 $generated@@535 $generated@@536) $generated@@45)))
 :pattern ( ($generated@@242 $generated@@536 $generated@@45))
)))
(assert (forall (($generated@@537 T@U) ($generated@@538 T@U) ) (! (let (($generated@@539 ($generated@@85 (type $generated@@537))))
 (=> (and (= (type $generated@@537) ($generated@@82 $generated@@539 $generated@@4)) (= (type $generated@@538) ($generated@@82 $generated@@539 $generated@@4))) (and (= (+ (+ ($generated@@255 ($generated@@413 $generated@@537 $generated@@538)) ($generated@@255 ($generated@@413 $generated@@538 $generated@@537))) ($generated@@255 ($generated@@234 $generated@@537 $generated@@538))) ($generated@@255 ($generated@@227 $generated@@537 $generated@@538))) (= ($generated@@255 ($generated@@413 $generated@@537 $generated@@538)) (- ($generated@@255 $generated@@537) ($generated@@255 ($generated@@234 $generated@@537 $generated@@538)))))))
 :pattern ( ($generated@@255 ($generated@@413 $generated@@537 $generated@@538)))
)))
(assert (forall (($generated@@540 T@U) ($generated@@541 T@U) ) (!  (=> (= (type $generated@@541) $generated@@70) (= ($generated@@242 ($generated@@319 $generated@@540) $generated@@541) ($generated@@142 $generated@@540 $generated@@541)))
 :pattern ( ($generated@@242 ($generated@@319 $generated@@540) $generated@@541))
)))
(assert (forall (($generated@@542 T@U) ) (! (let (($generated@@543 ($generated@@85 (type $generated@@542))))
 (=> (= (type $generated@@542) ($generated@@82 $generated@@543 $generated@@4)) (<= 0 ($generated@@255 $generated@@542))))
 :pattern ( ($generated@@255 $generated@@542))
)))
(assert (forall (($generated@@544 T@U) ) (! (let (($generated@@545 ($generated@@85 (type $generated@@544))))
 (=> (= (type $generated@@544) ($generated@@82 $generated@@545 $generated@@2)) (<= 0 ($generated@@332 $generated@@544))))
 :pattern ( ($generated@@332 $generated@@544))
)))
(assert (forall (($generated@@546 T@U) ) (! (let (($generated@@547 ($generated@@309 (type $generated@@546))))
 (=> (= (type $generated@@546) ($generated@@308 $generated@@547)) (<= 0 ($generated@@307 $generated@@546))))
 :pattern ( ($generated@@307 $generated@@546))
)))
(assert (forall (($generated@@548 T@U) ) (! (let (($generated@@549 ($generated@@342 (type $generated@@548))))
(let (($generated@@550 ($generated@@341 (type $generated@@548))))
 (=> (= (type $generated@@548) ($generated@@340 $generated@@550 $generated@@549)) (<= 0 ($generated@@420 $generated@@548)))))
 :pattern ( ($generated@@420 $generated@@548))
)))
(assert (forall (($generated@@552 T@U) ) (! (= (type ($generated@@551 $generated@@552)) $generated@@70)
 :pattern ( ($generated@@551 $generated@@552))
)))
(assert (forall (($generated@@553 T@U) ($generated@@554 T@U) ) (!  (=> (and (= (type $generated@@553) $generated@@70) (= (type $generated@@554) $generated@@70)) (= ($generated@@551 ($generated@@468 $generated@@553 $generated@@554)) $generated@@553))
 :pattern ( ($generated@@468 $generated@@553 $generated@@554))
)))
(assert (forall (($generated@@556 T@U) ) (! (= (type ($generated@@555 $generated@@556)) $generated@@70)
 :pattern ( ($generated@@555 $generated@@556))
)))
(assert (forall (($generated@@557 T@U) ($generated@@558 T@U) ) (!  (=> (and (= (type $generated@@557) $generated@@70) (= (type $generated@@558) $generated@@70)) (= ($generated@@555 ($generated@@468 $generated@@557 $generated@@558)) $generated@@558))
 :pattern ( ($generated@@468 $generated@@557 $generated@@558))
)))
(assert (forall (($generated@@559 T@U) ($generated@@560 T@U) ) (!  (=> (and (= (type $generated@@559) $generated@@70) (= (type $generated@@560) $generated@@70)) (= ($generated@@78 ($generated@@468 $generated@@559 $generated@@560)) $generated@@58))
 :pattern ( ($generated@@468 $generated@@559 $generated@@560))
)))
(assert (forall (($generated@@562 T@U) ) (! (= (type ($generated@@561 $generated@@562)) $generated@@70)
 :pattern ( ($generated@@561 $generated@@562))
)))
(assert (forall (($generated@@563 T@U) ($generated@@564 T@U) ) (!  (=> (and (= (type $generated@@563) $generated@@70) (= (type $generated@@564) $generated@@70)) (= ($generated@@561 ($generated@@476 $generated@@563 $generated@@564)) $generated@@563))
 :pattern ( ($generated@@476 $generated@@563 $generated@@564))
)))
(assert (forall (($generated@@566 T@U) ) (! (= (type ($generated@@565 $generated@@566)) $generated@@70)
 :pattern ( ($generated@@565 $generated@@566))
)))
(assert (forall (($generated@@567 T@U) ($generated@@568 T@U) ) (!  (=> (and (= (type $generated@@567) $generated@@70) (= (type $generated@@568) $generated@@70)) (= ($generated@@565 ($generated@@476 $generated@@567 $generated@@568)) $generated@@568))
 :pattern ( ($generated@@476 $generated@@567 $generated@@568))
)))
(assert (forall (($generated@@569 T@U) ($generated@@570 T@U) ) (!  (=> (and (= (type $generated@@569) $generated@@70) (= (type $generated@@570) $generated@@70)) (= ($generated@@78 ($generated@@476 $generated@@569 $generated@@570)) $generated@@59))
 :pattern ( ($generated@@476 $generated@@569 $generated@@570))
)))
(assert (forall (($generated@@571 T@U) ($generated@@572 T@U) ) (!  (=> (and (= (type $generated@@571) $generated@@155) (= (type $generated@@572) $generated@@155)) (= ($generated@@160 ($generated@@241 $generated@@571 $generated@@572)) $generated@@61))
 :pattern ( ($generated@@241 $generated@@571 $generated@@572))
)))
(assert (forall (($generated@@574 T@U) ) (! (= (type ($generated@@573 $generated@@574)) $generated@@70)
 :pattern ( ($generated@@573 $generated@@574))
)))
(assert (forall (($generated@@575 T@U) ($generated@@576 T@U) ) (!  (=> (and (= (type $generated@@575) $generated@@70) (= (type $generated@@576) $generated@@70)) (= ($generated@@573 ($generated@@145 $generated@@575 $generated@@576)) $generated@@575))
 :pattern ( ($generated@@145 $generated@@575 $generated@@576))
)))
(assert (forall (($generated@@578 T@U) ) (! (= (type ($generated@@577 $generated@@578)) $generated@@70)
 :pattern ( ($generated@@577 $generated@@578))
)))
(assert (forall (($generated@@579 T@U) ($generated@@580 T@U) ) (!  (=> (and (= (type $generated@@579) $generated@@70) (= (type $generated@@580) $generated@@70)) (= ($generated@@577 ($generated@@145 $generated@@579 $generated@@580)) $generated@@580))
 :pattern ( ($generated@@145 $generated@@579 $generated@@580))
)))
(assert (forall (($generated@@581 T@U) ($generated@@582 T@U) ) (!  (=> (and (= (type $generated@@581) $generated@@155) (= (type $generated@@582) $generated@@155)) (= ($generated@@153 ($generated@@241 $generated@@581 $generated@@582)) $generated@@581))
 :pattern ( ($generated@@241 $generated@@581 $generated@@582))
)))
(assert (forall (($generated@@583 T@U) ($generated@@584 T@U) ) (!  (=> (and (= (type $generated@@583) $generated@@155) (= (type $generated@@584) $generated@@155)) (= ($generated@@154 ($generated@@241 $generated@@583 $generated@@584)) $generated@@584))
 :pattern ( ($generated@@241 $generated@@583 $generated@@584))
)))
(assert  (and (forall (($generated@@587 T@U) ) (! (= (type ($generated@@585 $generated@@587)) $generated@@70)
 :pattern ( ($generated@@585 $generated@@587))
)) (forall (($generated@@588 T@U) ($generated@@589 Int) ) (! (let (($generated@@590 ($generated@@309 (type $generated@@588))))
(= (type ($generated@@586 $generated@@588 $generated@@589)) $generated@@590))
 :pattern ( ($generated@@586 $generated@@588 $generated@@589))
))))
(assert (forall (($generated@@591 T@U) ($generated@@592 T@U) ($generated@@593 T@U) ) (!  (=> (and (and (= (type $generated@@591) ($generated@@308 $generated@@155)) (= (type $generated@@592) $generated@@70)) (= (type $generated@@593) ($generated@@82 $generated@@83 $generated@@84))) (= ($generated@@80 $generated@@591 ($generated@@585 $generated@@592) $generated@@593) (forall (($generated@@594 Int) ) (!  (=> (and (<= 0 $generated@@594) (< $generated@@594 ($generated@@307 $generated@@591))) ($generated@@292 ($generated@@586 $generated@@591 $generated@@594) $generated@@592 $generated@@593))
 :pattern ( ($generated@@586 $generated@@591 $generated@@594))
))))
 :pattern ( ($generated@@80 $generated@@591 ($generated@@585 $generated@@592) $generated@@593))
)))
(assert (forall (($generated@@595 T@U) ($generated@@596 T@U) ) (! (let (($generated@@597 (type $generated@@596)))
 (=> (= (type $generated@@595) ($generated@@82 $generated@@597 $generated@@4)) ($generated@@0 ($generated@@87 ($generated@@484 $generated@@595 $generated@@596) $generated@@596))))
 :pattern ( ($generated@@484 $generated@@595 $generated@@596))
)))
(assert (forall (($generated@@598 T@U) ($generated@@599 T@U) ) (! (let (($generated@@600 (type $generated@@599)))
 (=> (and (= (type $generated@@598) ($generated@@82 $generated@@600 $generated@@4)) ($generated@@0 ($generated@@87 $generated@@598 $generated@@599))) (= ($generated@@255 ($generated@@484 $generated@@598 $generated@@599)) ($generated@@255 $generated@@598))))
 :pattern ( ($generated@@255 ($generated@@484 $generated@@598 $generated@@599)))
)))
(assert (forall (($generated@@602 Int) ) (! (= ($generated@@601 ($generated@@81 $generated@@602)) $generated@@602)
 :pattern ( ($generated@@81 $generated@@602))
)))
(assert (forall (($generated@@604 T@U) ) (! (= (type ($generated@@603 $generated@@604)) $generated@@70)
 :pattern ( ($generated@@603 $generated@@604))
)))
(assert (forall (($generated@@605 T@U) ) (!  (=> (= (type $generated@@605) $generated@@70) (= ($generated@@603 ($generated@@264 $generated@@605)) $generated@@605))
 :pattern ( ($generated@@264 $generated@@605))
)))
(assert (forall (($generated@@606 T@U) ) (!  (=> (= (type $generated@@606) $generated@@70) (= ($generated@@78 ($generated@@264 $generated@@606)) $generated@@54))
 :pattern ( ($generated@@264 $generated@@606))
)))
(assert (forall (($generated@@608 T@U) ) (! (= (type ($generated@@607 $generated@@608)) $generated@@70)
 :pattern ( ($generated@@607 $generated@@608))
)))
(assert (forall (($generated@@609 T@U) ) (!  (=> (= (type $generated@@609) $generated@@70) (= ($generated@@607 ($generated@@269 $generated@@609)) $generated@@609))
 :pattern ( ($generated@@269 $generated@@609))
)))
(assert (forall (($generated@@610 T@U) ) (!  (=> (= (type $generated@@610) $generated@@70) (= ($generated@@78 ($generated@@269 $generated@@610)) $generated@@55))
 :pattern ( ($generated@@269 $generated@@610))
)))
(assert (forall (($generated@@612 T@U) ) (! (= (type ($generated@@611 $generated@@612)) $generated@@70)
 :pattern ( ($generated@@611 $generated@@612))
)))
(assert (forall (($generated@@613 T@U) ) (!  (=> (= (type $generated@@613) $generated@@70) (= ($generated@@611 ($generated@@166 $generated@@613)) $generated@@613))
 :pattern ( ($generated@@166 $generated@@613))
)))
(assert (forall (($generated@@614 T@U) ) (!  (=> (= (type $generated@@614) $generated@@70) (= ($generated@@78 ($generated@@166 $generated@@614)) $generated@@56))
 :pattern ( ($generated@@166 $generated@@614))
)))
(assert (forall (($generated@@616 T@U) ) (! (= (type ($generated@@615 $generated@@616)) $generated@@70)
 :pattern ( ($generated@@615 $generated@@616))
)))
(assert (forall (($generated@@617 T@U) ) (!  (=> (= (type $generated@@617) $generated@@70) (= ($generated@@615 ($generated@@585 $generated@@617)) $generated@@617))
 :pattern ( ($generated@@585 $generated@@617))
)))
(assert (forall (($generated@@618 T@U) ) (!  (=> (= (type $generated@@618) $generated@@70) (= ($generated@@78 ($generated@@585 $generated@@618)) $generated@@57))
 :pattern ( ($generated@@585 $generated@@618))
)))
(assert (forall (($generated@@619 T@U) ) (! (let (($generated@@620 (type $generated@@619)))
(= ($generated@@383 $generated@@620 ($generated@@319 $generated@@619)) $generated@@619))
 :pattern ( ($generated@@319 $generated@@619))
)))
(assert (forall (($generated@@621 T@U) ($generated@@622 T@U) ($generated@@623 T@U) ) (!  (=> (and (and (= (type $generated@@621) ($generated@@340 $generated@@155 $generated@@155)) (= (type $generated@@622) $generated@@70)) (= (type $generated@@623) $generated@@70)) (= ($generated@@142 $generated@@621 ($generated@@468 $generated@@622 $generated@@623)) (forall (($generated@@624 T@U) ) (!  (=> (and (= (type $generated@@624) $generated@@155) ($generated@@0 ($generated@@87 ($generated@@338 $generated@@621) $generated@@624))) (and ($generated@@242 ($generated@@87 ($generated@@443 $generated@@621) $generated@@624) $generated@@623) ($generated@@242 $generated@@624 $generated@@622)))
 :pattern ( ($generated@@87 ($generated@@443 $generated@@621) $generated@@624))
 :pattern ( ($generated@@87 ($generated@@338 $generated@@621) $generated@@624))
))))
 :pattern ( ($generated@@142 $generated@@621 ($generated@@468 $generated@@622 $generated@@623)))
)))
(assert (forall (($generated@@625 T@U) ($generated@@626 T@U) ($generated@@627 T@U) ) (!  (=> (and (and (= (type $generated@@625) ($generated@@358 $generated@@155 $generated@@155)) (= (type $generated@@626) $generated@@70)) (= (type $generated@@627) $generated@@70)) (= ($generated@@142 $generated@@625 ($generated@@476 $generated@@626 $generated@@627)) (forall (($generated@@628 T@U) ) (!  (=> (and (= (type $generated@@628) $generated@@155) ($generated@@0 ($generated@@87 ($generated@@356 $generated@@625) $generated@@628))) (and ($generated@@242 ($generated@@87 ($generated@@451 $generated@@625) $generated@@628) $generated@@627) ($generated@@242 $generated@@628 $generated@@626)))
 :pattern ( ($generated@@87 ($generated@@451 $generated@@625) $generated@@628))
 :pattern ( ($generated@@87 ($generated@@356 $generated@@625) $generated@@628))
))))
 :pattern ( ($generated@@142 $generated@@625 ($generated@@476 $generated@@626 $generated@@627)))
)))
(assert (forall (($generated@@631 T@U) ($generated@@632 T@U) ) (!  (=> (and (= (type $generated@@631) $generated@@155) (= (type $generated@@632) $generated@@155)) (< ($generated@@629 $generated@@631) ($generated@@630 ($generated@@241 $generated@@631 $generated@@632))))
 :pattern ( ($generated@@241 $generated@@631 $generated@@632))
)))
(assert (forall (($generated@@633 T@U) ($generated@@634 T@U) ) (!  (=> (and (= (type $generated@@633) $generated@@155) (= (type $generated@@634) $generated@@155)) (< ($generated@@629 $generated@@634) ($generated@@630 ($generated@@241 $generated@@633 $generated@@634))))
 :pattern ( ($generated@@241 $generated@@633 $generated@@634))
)))
(assert (forall (($generated@@635 T@U) ($generated@@636 T@U) ) (! (let (($generated@@637 ($generated@@85 (type $generated@@635))))
 (=> (and (= (type $generated@@635) ($generated@@82 $generated@@637 $generated@@4)) (= (type $generated@@636) ($generated@@82 $generated@@637 $generated@@4))) (= ($generated@@227 $generated@@635 ($generated@@227 $generated@@635 $generated@@636)) ($generated@@227 $generated@@635 $generated@@636))))
 :pattern ( ($generated@@227 $generated@@635 ($generated@@227 $generated@@635 $generated@@636)))
)))
(assert (forall (($generated@@638 T@U) ($generated@@639 T@U) ) (! (let (($generated@@640 ($generated@@85 (type $generated@@638))))
 (=> (and (= (type $generated@@638) ($generated@@82 $generated@@640 $generated@@4)) (= (type $generated@@639) ($generated@@82 $generated@@640 $generated@@4))) (= ($generated@@234 $generated@@638 ($generated@@234 $generated@@638 $generated@@639)) ($generated@@234 $generated@@638 $generated@@639))))
 :pattern ( ($generated@@234 $generated@@638 ($generated@@234 $generated@@638 $generated@@639)))
)))
(assert (forall (($generated@@641 T@U) ($generated@@642 T@U) ($generated@@643 T@U) ) (!  (=> (and (and (and (= (type $generated@@641) $generated@@155) (= (type $generated@@642) $generated@@70)) (= (type $generated@@643) $generated@@70)) ($generated@@242 $generated@@641 ($generated@@468 $generated@@642 $generated@@643))) (and (= ($generated@@319 ($generated@@383 ($generated@@340 $generated@@155 $generated@@155) $generated@@641)) $generated@@641) ($generated@@142 ($generated@@383 ($generated@@340 $generated@@155 $generated@@155) $generated@@641) ($generated@@468 $generated@@642 $generated@@643))))
 :pattern ( ($generated@@242 $generated@@641 ($generated@@468 $generated@@642 $generated@@643)))
)))
(assert (forall (($generated@@644 T@U) ($generated@@645 T@U) ($generated@@646 T@U) ) (!  (=> (and (and (and (= (type $generated@@644) $generated@@155) (= (type $generated@@645) $generated@@70)) (= (type $generated@@646) $generated@@70)) ($generated@@242 $generated@@644 ($generated@@476 $generated@@645 $generated@@646))) (and (= ($generated@@319 ($generated@@383 ($generated@@358 $generated@@155 $generated@@155) $generated@@644)) $generated@@644) ($generated@@142 ($generated@@383 ($generated@@358 $generated@@155 $generated@@155) $generated@@644) ($generated@@476 $generated@@645 $generated@@646))))
 :pattern ( ($generated@@242 $generated@@644 ($generated@@476 $generated@@645 $generated@@646)))
)))
(assert (forall (($generated@@647 T@U) ($generated@@648 T@U) ($generated@@649 T@U) ) (!  (=> (and (and (and (= (type $generated@@647) $generated@@70) (= (type $generated@@648) $generated@@70)) (= (type $generated@@649) $generated@@155)) ($generated@@242 $generated@@649 ($generated@@145 $generated@@647 $generated@@648))) (and (= ($generated@@319 ($generated@@383 $generated@@146 $generated@@649)) $generated@@649) ($generated@@142 ($generated@@383 $generated@@146 $generated@@649) ($generated@@145 $generated@@647 $generated@@648))))
 :pattern ( ($generated@@242 $generated@@649 ($generated@@145 $generated@@647 $generated@@648)))
)))
(assert (forall (($generated@@651 T@T) ) (! (= (type ($generated@@650 $generated@@651)) ($generated@@82 $generated@@651 $generated@@4))
 :pattern ( ($generated@@650 $generated@@651))
)))
(assert (forall (($generated@@652 T@U) ) (! (let (($generated@@653 (type $generated@@652)))
 (not ($generated@@0 ($generated@@87 ($generated@@650 $generated@@653) $generated@@652))))
 :pattern ( (let (($generated@@653 (type $generated@@652)))
($generated@@87 ($generated@@650 $generated@@653) $generated@@652)))
)))
(assert (forall (($generated@@654 T@U) ) (! (let (($generated@@655 (type $generated@@654)))
 (not ($generated@@0 ($generated@@87 ($generated@@511 $generated@@655) $generated@@654))))
 :pattern ( (let (($generated@@655 (type $generated@@654)))
($generated@@87 ($generated@@511 $generated@@655) $generated@@654)))
)))
(assert (forall (($generated@@657 T@U) ) (! (= (type ($generated@@656 $generated@@657)) $generated@@75)
 :pattern ( ($generated@@656 $generated@@657))
)))
(assert (forall (($generated@@658 T@U) ($generated@@659 T@U) ) (!  (=> (and (= (type $generated@@658) $generated@@70) (= (type $generated@@659) $generated@@70)) (and (= ($generated@@78 ($generated@@145 $generated@@658 $generated@@659)) $generated@@62) (= ($generated@@656 ($generated@@145 $generated@@658 $generated@@659)) $generated@@68)))
 :pattern ( ($generated@@145 $generated@@658 $generated@@659))
)))
(assert (forall (($generated@@660 T@U) ) (!  (=> (= (type $generated@@660) $generated@@146) (= ($generated@@629 ($generated@@319 $generated@@660)) ($generated@@630 $generated@@660)))
 :pattern ( ($generated@@629 ($generated@@319 $generated@@660)))
)))
(assert (forall (($generated@@661 T@U) ) (! (let (($generated@@662 ($generated@@342 (type $generated@@661))))
(let (($generated@@663 ($generated@@341 (type $generated@@661))))
 (=> (= (type $generated@@661) ($generated@@340 $generated@@663 $generated@@662)) (= ($generated@@255 ($generated@@338 $generated@@661)) ($generated@@420 $generated@@661)))))
 :pattern ( ($generated@@255 ($generated@@338 $generated@@661)))
)))
(assert (forall (($generated@@664 T@U) ) (! (let (($generated@@665 ($generated@@342 (type $generated@@664))))
(let (($generated@@666 ($generated@@341 (type $generated@@664))))
 (=> (= (type $generated@@664) ($generated@@340 $generated@@666 $generated@@665)) (= ($generated@@255 ($generated@@442 $generated@@664)) ($generated@@420 $generated@@664)))))
 :pattern ( ($generated@@255 ($generated@@442 $generated@@664)))
)))
(assert (forall (($generated@@667 T@U) ) (! (let (($generated@@668 ($generated@@342 (type $generated@@667))))
(let (($generated@@669 ($generated@@341 (type $generated@@667))))
 (=> (= (type $generated@@667) ($generated@@340 $generated@@669 $generated@@668)) (<= ($generated@@255 ($generated@@391 $generated@@667)) ($generated@@420 $generated@@667)))))
 :pattern ( ($generated@@255 ($generated@@391 $generated@@667)))
)))
(assert (forall (($generated@@670 T@U) ) (!  (=> (and (= (type $generated@@670) $generated@@155) ($generated@@242 $generated@@670 ($generated@@81 0))) (and (= ($generated@@319 ($generated@@383 $generated@@2 $generated@@670)) $generated@@670) ($generated@@142 ($generated@@383 ($generated@@82 $generated@@155 $generated@@4) $generated@@670) ($generated@@81 0))))
 :pattern ( ($generated@@242 $generated@@670 ($generated@@81 0)))
)))
(assert (forall (($generated@@671 T@U) ($generated@@672 T@U) ) (!  (=> (and (and (= (type $generated@@671) $generated@@155) (= (type $generated@@672) $generated@@70)) ($generated@@242 $generated@@671 ($generated@@264 $generated@@672))) (and (= ($generated@@319 ($generated@@383 ($generated@@82 $generated@@155 $generated@@4) $generated@@671)) $generated@@671) ($generated@@142 ($generated@@383 ($generated@@82 $generated@@155 $generated@@4) $generated@@671) ($generated@@264 $generated@@672))))
 :pattern ( ($generated@@242 $generated@@671 ($generated@@264 $generated@@672)))
)))
(assert (forall (($generated@@673 T@U) ($generated@@674 T@U) ) (!  (=> (and (and (= (type $generated@@673) $generated@@155) (= (type $generated@@674) $generated@@70)) ($generated@@242 $generated@@673 ($generated@@269 $generated@@674))) (and (= ($generated@@319 ($generated@@383 ($generated@@82 $generated@@155 $generated@@4) $generated@@673)) $generated@@673) ($generated@@142 ($generated@@383 ($generated@@82 $generated@@155 $generated@@4) $generated@@673) ($generated@@269 $generated@@674))))
 :pattern ( ($generated@@242 $generated@@673 ($generated@@269 $generated@@674)))
)))
(assert (forall (($generated@@675 T@U) ($generated@@676 T@U) ) (!  (=> (and (and (= (type $generated@@675) $generated@@155) (= (type $generated@@676) $generated@@70)) ($generated@@242 $generated@@675 ($generated@@166 $generated@@676))) (and (= ($generated@@319 ($generated@@383 ($generated@@82 $generated@@155 $generated@@2) $generated@@675)) $generated@@675) ($generated@@142 ($generated@@383 ($generated@@82 $generated@@155 $generated@@2) $generated@@675) ($generated@@166 $generated@@676))))
 :pattern ( ($generated@@242 $generated@@675 ($generated@@166 $generated@@676)))
)))
(assert (forall (($generated@@677 T@U) ($generated@@678 T@U) ) (!  (=> (and (and (= (type $generated@@677) $generated@@155) (= (type $generated@@678) $generated@@70)) ($generated@@242 $generated@@677 ($generated@@585 $generated@@678))) (and (= ($generated@@319 ($generated@@383 ($generated@@308 $generated@@155) $generated@@677)) $generated@@677) ($generated@@142 ($generated@@383 ($generated@@308 $generated@@155) $generated@@677) ($generated@@585 $generated@@678))))
 :pattern ( ($generated@@242 $generated@@677 ($generated@@585 $generated@@678)))
)))
(assert (forall (($generated@@679 T@U) ) (! (let (($generated@@680 ($generated@@85 (type $generated@@679))))
 (=> (= (type $generated@@679) ($generated@@82 $generated@@680 $generated@@4)) (and (= (= ($generated@@255 $generated@@679) 0) (= $generated@@679 ($generated@@650 $generated@@680))) (=> (not (= ($generated@@255 $generated@@679) 0)) (exists (($generated@@681 T@U) ) (!  (and (= (type $generated@@681) $generated@@680) ($generated@@0 ($generated@@87 $generated@@679 $generated@@681)))
 :no-pattern (type $generated@@681)
 :no-pattern ($generated $generated@@681)
 :no-pattern ($generated@@0 $generated@@681)
))))))
 :pattern ( ($generated@@255 $generated@@679))
)))
(assert (forall (($generated@@683 T@U) ($generated@@684 T@U) ) (! (let (($generated@@685 ($generated@@85 (type $generated@@683))))
 (=> (and (= (type $generated@@683) ($generated@@82 $generated@@685 $generated@@4)) (= (type $generated@@684) ($generated@@82 $generated@@685 $generated@@4))) (= ($generated@@682 $generated@@683 $generated@@684) (forall (($generated@@686 T@U) ) (!  (=> (and (= (type $generated@@686) $generated@@685) ($generated@@0 ($generated@@87 $generated@@683 $generated@@686))) ($generated@@0 ($generated@@87 $generated@@684 $generated@@686)))
 :pattern ( ($generated@@87 $generated@@683 $generated@@686))
 :pattern ( ($generated@@87 $generated@@684 $generated@@686))
)))))
 :pattern ( ($generated@@682 $generated@@683 $generated@@684))
)))
(assert (= ($generated@@78 $generated@@249) $generated@@64))
(assert (= ($generated@@656 $generated@@249) $generated@@69))
(assert (forall (($generated@@687 T@U) ($generated@@688 T@U) ($generated@@689 T@U) ) (!  (=> (and (and (= (type $generated@@687) ($generated@@82 $generated@@155 $generated@@2)) (= (type $generated@@688) $generated@@70)) (= (type $generated@@689) ($generated@@82 $generated@@83 $generated@@84))) (= ($generated@@80 $generated@@687 ($generated@@166 $generated@@688) $generated@@689) (forall (($generated@@690 T@U) ) (!  (=> (and (= (type $generated@@690) $generated@@155) (< 0 ($generated ($generated@@87 $generated@@687 $generated@@690)))) ($generated@@292 $generated@@690 $generated@@688 $generated@@689))
 :pattern ( ($generated@@87 $generated@@687 $generated@@690))
))))
 :pattern ( ($generated@@80 $generated@@687 ($generated@@166 $generated@@688) $generated@@689))
)))
(assert (= $generated@@161 ($generated@@276 $generated@@161)))
(assert (= $generated@@163 ($generated@@276 $generated@@163)))
(assert (= $generated@@164 ($generated@@276 $generated@@164)))
(assert (= $generated@@165 ($generated@@276 $generated@@165)))
(assert (forall (($generated@@691 T@U) ($generated@@692 T@U) ) (! (let (($generated@@693 (type $generated@@692)))
 (=> (and (= (type $generated@@691) ($generated@@82 $generated@@693 $generated@@4)) (not ($generated@@0 ($generated@@87 $generated@@691 $generated@@692)))) (= ($generated@@255 ($generated@@484 $generated@@691 $generated@@692)) (+ ($generated@@255 $generated@@691) 1))))
 :pattern ( ($generated@@255 ($generated@@484 $generated@@691 $generated@@692)))
)))
(assert (forall (($generated@@695 T@U) ) (!  (=> (and (= (type $generated@@695) $generated@@146) ($generated@@694 $generated@@695)) (or (or (or ($generated@@280 $generated@@695) ($generated@@283 $generated@@695)) ($generated@@286 $generated@@695)) ($generated@@289 $generated@@695)))
 :pattern ( ($generated@@694 $generated@@695))
)))
(assert (forall (($generated@@696 T@U) ($generated@@697 T@U) ) (! (let (($generated@@698 ($generated@@85 (type $generated@@696))))
 (=> (and (= (type $generated@@696) ($generated@@82 $generated@@698 $generated@@4)) (= (type $generated@@697) ($generated@@82 $generated@@698 $generated@@4))) (= ($generated@@412 $generated@@696 $generated@@697) (forall (($generated@@699 T@U) ) (!  (=> (= (type $generated@@699) $generated@@698) (or (not ($generated@@0 ($generated@@87 $generated@@696 $generated@@699))) (not ($generated@@0 ($generated@@87 $generated@@697 $generated@@699)))))
 :pattern ( ($generated@@87 $generated@@696 $generated@@699))
 :pattern ( ($generated@@87 $generated@@697 $generated@@699))
)))))
 :pattern ( ($generated@@412 $generated@@696 $generated@@697))
)))
(assert (forall (($generated@@700 T@U) ($generated@@701 T@U) ($generated@@702 T@U) ) (!  (=> (and (and (and (= (type $generated@@700) $generated@@146) (= (type $generated@@701) $generated@@70)) (= (type $generated@@702) ($generated@@82 $generated@@83 $generated@@84))) (and ($generated@@250 $generated@@702) (and ($generated@@144 $generated@@700) (exists (($generated@@703 T@U) ) (!  (and (= (type $generated@@703) $generated@@70) ($generated@@80 $generated@@700 ($generated@@145 $generated@@701 $generated@@703) $generated@@702))
 :pattern ( ($generated@@80 $generated@@700 ($generated@@145 $generated@@701 $generated@@703) $generated@@702))
))))) ($generated@@292 ($generated@@153 $generated@@700) $generated@@701 $generated@@702))
 :pattern ( ($generated@@292 ($generated@@153 $generated@@700) $generated@@701 $generated@@702))
)))
(assert (forall (($generated@@704 T@U) ($generated@@705 T@U) ($generated@@706 T@U) ) (!  (=> (and (and (and (= (type $generated@@704) $generated@@146) (= (type $generated@@705) $generated@@70)) (= (type $generated@@706) ($generated@@82 $generated@@83 $generated@@84))) (and ($generated@@250 $generated@@706) (and ($generated@@144 $generated@@704) (exists (($generated@@707 T@U) ) (!  (and (= (type $generated@@707) $generated@@70) ($generated@@80 $generated@@704 ($generated@@145 $generated@@707 $generated@@705) $generated@@706))
 :pattern ( ($generated@@80 $generated@@704 ($generated@@145 $generated@@707 $generated@@705) $generated@@706))
))))) ($generated@@292 ($generated@@154 $generated@@704) $generated@@705 $generated@@706))
 :pattern ( ($generated@@292 ($generated@@154 $generated@@704) $generated@@705 $generated@@706))
)))
(assert (forall (($generated@@708 T@U) ($generated@@709 T@U) ) (!  (=> (and (= (type $generated@@708) $generated@@155) (= (type $generated@@709) $generated@@155)) (= ($generated@@241 ($generated@@276 $generated@@708) ($generated@@276 $generated@@709)) ($generated@@276 ($generated@@241 $generated@@708 $generated@@709))))
 :pattern ( ($generated@@241 ($generated@@276 $generated@@708) ($generated@@276 $generated@@709)))
)))
(assert (forall (($generated@@710 Int) ) (! (= ($generated@@319 ($generated@@8 ($generated@@274 $generated@@710))) ($generated@@276 ($generated@@319 ($generated@@8 $generated@@710))))
 :pattern ( ($generated@@319 ($generated@@8 ($generated@@274 $generated@@710))))
)))
(assert (forall (($generated@@711 T@U) ) (! (= ($generated@@319 ($generated@@276 $generated@@711)) ($generated@@276 ($generated@@319 $generated@@711)))
 :pattern ( ($generated@@319 ($generated@@276 $generated@@711)))
)))
(assert (forall (($generated@@712 T@U) ) (! (let (($generated@@713 ($generated@@309 (type $generated@@712))))
 (=> (and (= (type $generated@@712) ($generated@@308 $generated@@713)) (= ($generated@@307 $generated@@712) 0)) (= $generated@@712 ($generated@@306 $generated@@713))))
 :pattern ( ($generated@@307 $generated@@712))
)))
(assert (forall (($generated@@714 T@U) ($generated@@715 T@U) ($generated@@716 T@U) ) (! (let (($generated@@717 (type $generated@@715)))
 (=> (and (and (= (type $generated@@714) ($generated@@82 $generated@@717 $generated@@2)) (= (type $generated@@716) $generated@@2)) (<= 0 ($generated $generated@@716))) (= ($generated@@332 ($generated@@88 $generated@@714 $generated@@715 $generated@@716)) (+ (- ($generated@@332 $generated@@714) ($generated ($generated@@87 $generated@@714 $generated@@715))) ($generated $generated@@716)))))
 :pattern ( ($generated@@332 ($generated@@88 $generated@@714 $generated@@715 $generated@@716)))
)))
(assert (forall (($generated@@718 T@U) ) (!  (=> (and (= (type $generated@@718) $generated@@146) ($generated@@142 $generated@@718 $generated@@249)) (or (or (or ($generated@@280 $generated@@718) ($generated@@283 $generated@@718)) ($generated@@286 $generated@@718)) ($generated@@289 $generated@@718)))
 :pattern ( ($generated@@289 $generated@@718) ($generated@@142 $generated@@718 $generated@@249))
 :pattern ( ($generated@@286 $generated@@718) ($generated@@142 $generated@@718 $generated@@249))
 :pattern ( ($generated@@283 $generated@@718) ($generated@@142 $generated@@718 $generated@@249))
 :pattern ( ($generated@@280 $generated@@718) ($generated@@142 $generated@@718 $generated@@249))
)))
(assert (forall (($generated@@719 T@U) ($generated@@720 T@U) ($generated@@721 T@U) ) (! (let (($generated@@722 (type $generated@@721)))
 (=> (and (= (type $generated@@719) ($generated@@82 $generated@@722 $generated@@4)) (= (type $generated@@720) ($generated@@82 $generated@@722 $generated@@4))) (= ($generated@@0 ($generated@@87 ($generated@@227 $generated@@719 $generated@@720) $generated@@721))  (or ($generated@@0 ($generated@@87 $generated@@719 $generated@@721)) ($generated@@0 ($generated@@87 $generated@@720 $generated@@721))))))
 :pattern ( ($generated@@87 ($generated@@227 $generated@@719 $generated@@720) $generated@@721))
)))
(assert (forall (($generated@@723 T@U) ($generated@@724 T@U) ) (!  (=> (and (= (type $generated@@723) ($generated@@82 $generated@@83 $generated@@84)) (= (type $generated@@724) $generated@@2)) ($generated@@80 $generated@@724 $generated@@46 $generated@@723))
 :pattern ( ($generated@@80 $generated@@724 $generated@@46 $generated@@723))
)))
(assert (forall (($generated@@725 T@U) ($generated@@726 T@U) ) (!  (=> (and (= (type $generated@@725) ($generated@@82 $generated@@83 $generated@@84)) (= (type $generated@@726) $generated@@3)) ($generated@@80 $generated@@726 $generated@@47 $generated@@725))
 :pattern ( ($generated@@80 $generated@@726 $generated@@47 $generated@@725))
)))
(assert (forall (($generated@@727 T@U) ($generated@@728 T@U) ) (!  (=> (and (= (type $generated@@727) ($generated@@82 $generated@@83 $generated@@84)) (= (type $generated@@728) $generated@@4)) ($generated@@80 $generated@@728 $generated@@44 $generated@@727))
 :pattern ( ($generated@@80 $generated@@728 $generated@@44 $generated@@727))
)))
(assert (forall (($generated@@729 T@U) ($generated@@730 T@U) ) (!  (=> (and (= (type $generated@@729) ($generated@@82 $generated@@83 $generated@@84)) (= (type $generated@@730) $generated@@535)) ($generated@@80 $generated@@730 $generated@@45 $generated@@729))
 :pattern ( ($generated@@80 $generated@@730 $generated@@45 $generated@@729))
)))
(assert (forall (($generated@@731 T@U) ($generated@@732 T@U) ) (!  (=> (and (= (type $generated@@731) ($generated@@82 $generated@@83 $generated@@84)) (= (type $generated@@732) $generated@@155)) ($generated@@80 $generated@@732 $generated@@48 $generated@@731))
 :pattern ( ($generated@@80 $generated@@732 $generated@@48 $generated@@731))
)))
(assert (forall (($generated@@733 T@U) ($generated@@734 T@U) ) (!  (=> (and (= (type $generated@@733) ($generated@@308 $generated@@155)) (= (type $generated@@734) $generated@@70)) (= ($generated@@142 $generated@@733 ($generated@@585 $generated@@734)) (forall (($generated@@735 Int) ) (!  (=> (and (<= 0 $generated@@735) (< $generated@@735 ($generated@@307 $generated@@733))) ($generated@@242 ($generated@@586 $generated@@733 $generated@@735) $generated@@734))
 :pattern ( ($generated@@586 $generated@@733 $generated@@735))
))))
 :pattern ( ($generated@@142 $generated@@733 ($generated@@585 $generated@@734)))
)))
(assert (forall (($generated@@737 T@U) ($generated@@738 Int) ) (!  (=> (= (type $generated@@737) ($generated@@308 $generated@@155)) (=> (and (<= 0 $generated@@738) (< $generated@@738 ($generated@@307 $generated@@737))) (< ($generated@@630 ($generated@@383 $generated@@146 ($generated@@586 $generated@@737 $generated@@738))) ($generated@@736 $generated@@737))))
 :pattern ( ($generated@@630 ($generated@@383 $generated@@146 ($generated@@586 $generated@@737 $generated@@738))))
)))
(assert (forall (($generated@@739 T@U) ($generated@@740 T@U) ($generated@@741 T@U) ) (!  (=> (and (and (and (= (type $generated@@739) ($generated@@340 $generated@@155 $generated@@155)) (= (type $generated@@740) $generated@@70)) (= (type $generated@@741) $generated@@70)) ($generated@@142 $generated@@739 ($generated@@468 $generated@@740 $generated@@741))) (and (and ($generated@@142 ($generated@@338 $generated@@739) ($generated@@264 $generated@@740)) ($generated@@142 ($generated@@391 $generated@@739) ($generated@@264 $generated@@741))) ($generated@@142 ($generated@@442 $generated@@739) ($generated@@264 ($generated@@145 $generated@@740 $generated@@741)))))
 :pattern ( ($generated@@142 $generated@@739 ($generated@@468 $generated@@740 $generated@@741)))
)))
(assert (forall (($generated@@742 T@U) ($generated@@743 T@U) ($generated@@744 T@U) ) (!  (=> (and (and (and (= (type $generated@@742) ($generated@@358 $generated@@155 $generated@@155)) (= (type $generated@@743) $generated@@70)) (= (type $generated@@744) $generated@@70)) ($generated@@142 $generated@@742 ($generated@@476 $generated@@743 $generated@@744))) (and (and ($generated@@142 ($generated@@356 $generated@@742) ($generated@@269 $generated@@743)) ($generated@@142 ($generated@@402 $generated@@742) ($generated@@269 $generated@@744))) ($generated@@142 ($generated@@450 $generated@@742) ($generated@@269 ($generated@@145 $generated@@743 $generated@@744)))))
 :pattern ( ($generated@@142 $generated@@742 ($generated@@476 $generated@@743 $generated@@744)))
)))
(assert (forall (($generated@@745 T@U) ) (!  (=> (= (type $generated@@745) $generated@@2) ($generated@@142 $generated@@745 $generated@@46))
 :pattern ( ($generated@@142 $generated@@745 $generated@@46))
)))
(assert (forall (($generated@@746 T@U) ) (!  (=> (= (type $generated@@746) $generated@@3) ($generated@@142 $generated@@746 $generated@@47))
 :pattern ( ($generated@@142 $generated@@746 $generated@@47))
)))
(assert (forall (($generated@@747 T@U) ) (!  (=> (= (type $generated@@747) $generated@@4) ($generated@@142 $generated@@747 $generated@@44))
 :pattern ( ($generated@@142 $generated@@747 $generated@@44))
)))
(assert (forall (($generated@@748 T@U) ) (!  (=> (= (type $generated@@748) $generated@@535) ($generated@@142 $generated@@748 $generated@@45))
 :pattern ( ($generated@@142 $generated@@748 $generated@@45))
)))
(assert (forall (($generated@@749 T@U) ) (!  (=> (= (type $generated@@749) $generated@@155) ($generated@@142 $generated@@749 $generated@@48))
 :pattern ( ($generated@@142 $generated@@749 $generated@@48))
)))
(push 1)
(declare-fun ControlFlow (Int Int) Int)
(declare-fun $generated@@750 () T@U)
(declare-fun $generated@@751 () Int)
(declare-fun $generated@@752 () Bool)
(declare-fun $generated@@753 () Bool)
(declare-fun $generated@@754 () Int)
(declare-fun $generated@@755 () Bool)
(declare-fun $generated@@756 () T@U)
(declare-fun $generated@@757 () T@U)
(declare-fun $generated@@758 () T@U)
(declare-fun $generated@@759 () Int)
(declare-fun $generated@@760 () Int)
(declare-fun $generated@@761 (T@U) Bool)
(declare-fun $generated@@762 () Int)
(assert  (and (and (and (= (type $generated@@750) $generated@@146) (= (type $generated@@756) ($generated@@82 $generated@@83 $generated@@84))) (= (type $generated@@757) $generated@@83)) (= (type $generated@@758) ($generated@@173 $generated@@83 $generated@@4))))
(set-option :timeout 0)
(set-option :rlimit 0)
(assert (not
 (=> (= (ControlFlow 0 0) 55) (let (($generated@@763 true))
(let (($generated@@764  (=> (and (= $generated@@750 $generated@@161) (= (ControlFlow 0 48) (- 0 47))) false)))
(let (($generated@@765  (=> (not (= $generated@@750 $generated@@163)) (and (=> (= (ControlFlow 0 50) 48) $generated@@764) (=> (= (ControlFlow 0 50) 49) $generated@@763)))))
(let (($generated@@766  (=> (and (= $generated@@750 $generated@@163) (= (ControlFlow 0 46) (- 0 45))) false)))
(let (($generated@@767  (=> (not (= $generated@@750 $generated@@164)) (and (=> (= (ControlFlow 0 51) 46) $generated@@766) (=> (= (ControlFlow 0 51) 50) $generated@@765)))))
(let (($generated@@768  (=> (and (= $generated@@750 $generated@@164) (= (ControlFlow 0 44) (- 0 43))) false)))
(let (($generated@@769  (=> (not (= $generated@@750 $generated@@165)) (and (=> (= (ControlFlow 0 52) 44) $generated@@768) (=> (= (ControlFlow 0 52) 51) $generated@@767)))))
(let (($generated@@770  (=> (and (= $generated@@750 $generated@@165) (= (ControlFlow 0 42) (- 0 41))) false)))
(let (($generated@@771  (=> (not ($generated@@261 $generated@@750 $generated@@161)) (and (=> (= (ControlFlow 0 53) 42) $generated@@770) (=> (= (ControlFlow 0 53) 52) $generated@@769)))))
(let (($generated@@772  (=> (and ($generated@@682 ($generated@@484 ($generated@@484 ($generated@@484 ($generated@@650 $generated@@155) ($generated@@319 ($generated@@8 ($generated@@274 1)))) ($generated@@319 ($generated@@8 ($generated@@274 2)))) ($generated@@319 ($generated@@8 ($generated@@274 3)))) ($generated@@484 ($generated@@484 ($generated@@650 $generated@@155) ($generated@@319 ($generated@@8 ($generated@@274 1)))) ($generated@@319 ($generated@@8 ($generated@@274 2))))) (= $generated@@751 ($generated@@255 ($generated@@413 ($generated@@484 ($generated@@484 ($generated@@650 $generated@@155) ($generated@@319 ($generated@@8 ($generated@@274 1)))) ($generated@@319 ($generated@@8 ($generated@@274 2)))) ($generated@@484 ($generated@@484 ($generated@@484 ($generated@@650 $generated@@155) ($generated@@319 ($generated@@8 ($generated@@274 1)))) ($generated@@319 ($generated@@8 ($generated@@274 2)))) ($generated@@319 ($generated@@8 ($generated@@274 3)))))))) (and (=> (= (ControlFlow 0 18) (- 0 20)) ($generated@@0 ($generated@@276 ($generated@@11 false)))) (=> ($generated@@0 ($generated@@276 ($generated@@11 false))) (and (=> (= (ControlFlow 0 18) (- 0 19)) (or (<= 0 $generated@@751) (= ($generated@@255 ($generated@@413 ($generated@@484 ($generated@@484 ($generated@@650 $generated@@155) ($generated@@319 ($generated@@8 ($generated@@274 1)))) ($generated@@319 ($generated@@8 ($generated@@274 2)))) ($generated@@484 ($generated@@484 ($generated@@484 ($generated@@650 $generated@@155) ($generated@@319 ($generated@@8 ($generated@@274 1)))) ($generated@@319 ($generated@@8 ($generated@@274 2)))) ($generated@@319 ($generated@@8 ($generated@@274 3)))))) $generated@@751))) (=> (or (<= 0 $generated@@751) (= ($generated@@255 ($generated@@413 ($generated@@484 ($generated@@484 ($generated@@650 $generated@@155) ($generated@@319 ($generated@@8 ($generated@@274 1)))) ($generated@@319 ($generated@@8 ($generated@@274 2)))) ($generated@@484 ($generated@@484 ($generated@@484 ($generated@@650 $generated@@155) ($generated@@319 ($generated@@8 ($generated@@274 1)))) ($generated@@319 ($generated@@8 ($generated@@274 2)))) ($generated@@319 ($generated@@8 ($generated@@274 3)))))) $generated@@751)) (=> (= (ControlFlow 0 18) (- 0 17)) (< ($generated@@255 ($generated@@413 ($generated@@484 ($generated@@484 ($generated@@650 $generated@@155) ($generated@@319 ($generated@@8 ($generated@@274 1)))) ($generated@@319 ($generated@@8 ($generated@@274 2)))) ($generated@@484 ($generated@@484 ($generated@@484 ($generated@@650 $generated@@155) ($generated@@319 ($generated@@8 ($generated@@274 1)))) ($generated@@319 ($generated@@8 ($generated@@274 2)))) ($generated@@319 ($generated@@8 ($generated@@274 3)))))) $generated@@751)))))))))
(let (($generated@@773 true))
(let (($generated@@774  (=> $generated@@752 (and (=> (= (ControlFlow 0 21) 16) $generated@@773) (=> (= (ControlFlow 0 21) 18) $generated@@772)))))
(let (($generated@@775 true))
(let (($generated@@776  (and (=> (= (ControlFlow 0 22) 15) $generated@@775) (=> (= (ControlFlow 0 22) 21) $generated@@774))))
(let (($generated@@777 true))
(let (($generated@@778  (=> (and (and (and (and (and (not false) $generated@@753) (= $generated@@754 1)) $generated@@755) (forall (($generated@@779 T@U) ) (!  (=> (= (type $generated@@779) $generated@@83) (=> (and (not (= $generated@@779 $generated@@757)) ($generated@@0 ($generated@@89 ($generated@@87 $generated@@756 $generated@@779) $generated@@60))) (= ($generated@@87 $generated@@756 $generated@@779) ($generated@@87 $generated@@756 $generated@@779))))
 :pattern ( ($generated@@87 $generated@@756 $generated@@779))
))) (and (and ($generated@@374 $generated@@756 $generated@@756) (forall (($generated@@780 T@U) ($generated@@781 T@U) ) (! (let (($generated@@782 ($generated@@73 (type $generated@@781))))
 (=> (and (and (= (type $generated@@780) $generated@@83) (= (type $generated@@781) ($generated@@72 $generated@@782))) (and (not (= $generated@@780 $generated@@757)) ($generated@@0 ($generated@@89 ($generated@@87 $generated@@756 $generated@@780) $generated@@60)))) (or (= ($generated@@89 ($generated@@87 $generated@@756 $generated@@780) $generated@@781) ($generated@@89 ($generated@@87 $generated@@756 $generated@@780) $generated@@781)) ($generated@@0 ($generated@@171 $generated@@758 $generated@@780 $generated@@781)))))
 :pattern ( ($generated@@89 ($generated@@87 $generated@@756 $generated@@780) $generated@@781))
))) (and (<= ($generated@@255 ($generated@@413 ($generated@@484 ($generated@@484 ($generated@@650 $generated@@155) ($generated@@319 ($generated@@8 ($generated@@274 1)))) ($generated@@319 ($generated@@8 ($generated@@274 2)))) ($generated@@484 ($generated@@484 ($generated@@484 ($generated@@650 $generated@@155) ($generated@@319 ($generated@@8 ($generated@@274 1)))) ($generated@@319 ($generated@@8 ($generated@@274 2)))) ($generated@@319 ($generated@@8 ($generated@@274 3)))))) $generated@@759) (=> (= ($generated@@255 ($generated@@413 ($generated@@484 ($generated@@484 ($generated@@650 $generated@@155) ($generated@@319 ($generated@@8 ($generated@@274 1)))) ($generated@@319 ($generated@@8 ($generated@@274 2)))) ($generated@@484 ($generated@@484 ($generated@@484 ($generated@@650 $generated@@155) ($generated@@319 ($generated@@8 ($generated@@274 1)))) ($generated@@319 ($generated@@8 ($generated@@274 2)))) ($generated@@319 ($generated@@8 ($generated@@274 3)))))) $generated@@759) true)))) (and (=> (= (ControlFlow 0 23) 14) $generated@@777) (=> (= (ControlFlow 0 23) 22) $generated@@776)))))
(let (($generated@@783  (=> ($generated@@261 $generated@@750 $generated@@161) (=> (and (= $generated@@759 ($generated@@255 ($generated@@413 ($generated@@484 ($generated@@484 ($generated@@650 $generated@@155) ($generated@@319 ($generated@@8 ($generated@@274 1)))) ($generated@@319 ($generated@@8 ($generated@@274 2)))) ($generated@@484 ($generated@@484 ($generated@@484 ($generated@@650 $generated@@155) ($generated@@319 ($generated@@8 ($generated@@274 1)))) ($generated@@319 ($generated@@8 ($generated@@274 2)))) ($generated@@319 ($generated@@8 ($generated@@274 3))))))) (= (ControlFlow 0 24) 23)) $generated@@778))))
(let (($generated@@784  (=> (and (not ($generated@@261 $generated@@750 $generated@@161)) (= $generated@@760 ($generated@@274 1))) (and (=> (= (ControlFlow 0 11) (- 0 13)) ($generated@@0 ($generated@@276 ($generated@@11 false)))) (=> ($generated@@0 ($generated@@276 ($generated@@11 false))) (and (=> (= (ControlFlow 0 11) (- 0 12)) (or (<= 0 $generated@@760) (= ($generated@@274 1) $generated@@760))) (=> (or (<= 0 $generated@@760) (= ($generated@@274 1) $generated@@760)) (=> (= (ControlFlow 0 11) (- 0 10)) (< ($generated@@274 1) $generated@@760)))))))))
(let (($generated@@785  (=> (and $generated@@755 ($generated@@694 $generated@@750)) (and (=> (= (ControlFlow 0 25) 24) $generated@@783) (=> (= (ControlFlow 0 25) 11) $generated@@784)))))
(let (($generated@@786 true))
(let (($generated@@787  (and (=> (= (ControlFlow 0 26) 9) $generated@@786) (=> (= (ControlFlow 0 26) 25) $generated@@785))))
(let (($generated@@788 true))
(let (($generated@@789  (=> (and (and (and (and (not false) $generated@@753) (= $generated@@754 1)) (forall (($generated@@790 T@U) ) (!  (=> (= (type $generated@@790) $generated@@83) (=> (and (not (= $generated@@790 $generated@@757)) ($generated@@0 ($generated@@89 ($generated@@87 $generated@@756 $generated@@790) $generated@@60))) (= ($generated@@87 $generated@@756 $generated@@790) ($generated@@87 $generated@@756 $generated@@790))))
 :pattern ( ($generated@@87 $generated@@756 $generated@@790))
))) (and (and ($generated@@374 $generated@@756 $generated@@756) (forall (($generated@@791 T@U) ($generated@@792 T@U) ) (! (let (($generated@@793 ($generated@@73 (type $generated@@792))))
 (=> (and (and (= (type $generated@@791) $generated@@83) (= (type $generated@@792) ($generated@@72 $generated@@793))) (and (not (= $generated@@791 $generated@@757)) ($generated@@0 ($generated@@89 ($generated@@87 $generated@@756 $generated@@791) $generated@@60)))) (or (= ($generated@@89 ($generated@@87 $generated@@756 $generated@@791) $generated@@792) ($generated@@89 ($generated@@87 $generated@@756 $generated@@791) $generated@@792)) ($generated@@0 ($generated@@171 $generated@@758 $generated@@791 $generated@@792)))))
 :pattern ( ($generated@@89 ($generated@@87 $generated@@756 $generated@@791) $generated@@792))
))) (and (<= ($generated@@274 1) $generated@@754) (=> (= ($generated@@274 1) $generated@@754) true)))) (and (=> (= (ControlFlow 0 27) 8) $generated@@788) (=> (= (ControlFlow 0 27) 26) $generated@@787)))))
(let (($generated@@794  (=> ($generated@@261 $generated@@750 $generated@@161) (=> (and (= $generated@@754 ($generated@@274 1)) (= (ControlFlow 0 28) 27)) $generated@@789))))
(let (($generated@@795  (=> (not ($generated@@261 $generated@@750 $generated@@161)) (and (=> (= (ControlFlow 0 6) (- 0 7)) ($generated@@0 ($generated@@276 ($generated@@11 false)))) (=> ($generated@@0 ($generated@@276 ($generated@@11 false))) (=> (= (ControlFlow 0 6) (- 0 5)) false))))))
(let (($generated@@796  (=> (and $generated@@753 ($generated@@694 $generated@@750)) (and (=> (= (ControlFlow 0 29) 28) $generated@@794) (=> (= (ControlFlow 0 29) 6) $generated@@795)))))
(let (($generated@@797 true))
(let (($generated@@798  (and (=> (= (ControlFlow 0 30) 4) $generated@@797) (=> (= (ControlFlow 0 30) 29) $generated@@796))))
(let (($generated@@799 true))
(let (($generated@@800  (=> (forall (($generated@@801 T@U) ) (!  (=> (= (type $generated@@801) $generated@@83) (=> (and (not (= $generated@@801 $generated@@757)) ($generated@@0 ($generated@@89 ($generated@@87 $generated@@756 $generated@@801) $generated@@60))) (= ($generated@@87 $generated@@756 $generated@@801) ($generated@@87 $generated@@756 $generated@@801))))
 :pattern ( ($generated@@87 $generated@@756 $generated@@801))
)) (=> (and ($generated@@374 $generated@@756 $generated@@756) (forall (($generated@@802 T@U) ($generated@@803 T@U) ) (! (let (($generated@@804 ($generated@@73 (type $generated@@803))))
 (=> (and (and (= (type $generated@@802) $generated@@83) (= (type $generated@@803) ($generated@@72 $generated@@804))) (and (not (= $generated@@802 $generated@@757)) ($generated@@0 ($generated@@89 ($generated@@87 $generated@@756 $generated@@802) $generated@@60)))) (or (= ($generated@@89 ($generated@@87 $generated@@756 $generated@@802) $generated@@803) ($generated@@89 ($generated@@87 $generated@@756 $generated@@802) $generated@@803)) ($generated@@0 ($generated@@171 $generated@@758 $generated@@802 $generated@@803)))))
 :pattern ( ($generated@@89 ($generated@@87 $generated@@756 $generated@@802) $generated@@803))
))) (and (=> (= (ControlFlow 0 31) 3) $generated@@799) (=> (= (ControlFlow 0 31) 30) $generated@@798))))))
(let (($generated@@805  (=> (and (not ($generated@@682 ($generated@@484 ($generated@@484 ($generated@@484 ($generated@@650 $generated@@155) ($generated@@319 ($generated@@8 ($generated@@274 1)))) ($generated@@319 ($generated@@8 ($generated@@274 2)))) ($generated@@319 ($generated@@8 ($generated@@274 3)))) ($generated@@484 ($generated@@484 ($generated@@650 $generated@@155) ($generated@@319 ($generated@@8 ($generated@@274 1)))) ($generated@@319 ($generated@@8 ($generated@@274 2)))))) (= (ControlFlow 0 34) 31)) $generated@@800)))
(let (($generated@@806  (=> ($generated@@682 ($generated@@484 ($generated@@484 ($generated@@484 ($generated@@650 $generated@@155) ($generated@@319 ($generated@@8 ($generated@@274 1)))) ($generated@@319 ($generated@@8 ($generated@@274 2)))) ($generated@@319 ($generated@@8 ($generated@@274 3)))) ($generated@@484 ($generated@@484 ($generated@@650 $generated@@155) ($generated@@319 ($generated@@8 ($generated@@274 1)))) ($generated@@319 ($generated@@8 ($generated@@274 2))))) (and (=> (= (ControlFlow 0 32) (- 0 33)) ($generated@@0 ($generated@@276 ($generated@@11 false)))) (=> ($generated@@0 ($generated@@276 ($generated@@11 false))) (=> (= (ControlFlow 0 32) 31) $generated@@800))))))
(let (($generated@@807  (and (=> (= (ControlFlow 0 35) 32) $generated@@806) (=> (= (ControlFlow 0 35) 34) $generated@@805))))
(let (($generated@@808  (=> ($generated@@0 ($generated@@276 ($generated@@11 true))) (and (=> (= (ControlFlow 0 38) (- 0 39)) ($generated@@0 ($generated@@276 ($generated@@11 true)))) (=> ($generated@@0 ($generated@@276 ($generated@@11 true))) (=> (= (ControlFlow 0 38) 35) $generated@@807))))))
(let (($generated@@809  (=> ($generated@@0 ($generated@@276 ($generated@@11 false))) (and (=> (= (ControlFlow 0 36) (- 0 37)) ($generated@@0 ($generated@@276 ($generated@@11 false)))) (=> ($generated@@0 ($generated@@276 ($generated@@11 false))) (=> (= (ControlFlow 0 36) 35) $generated@@807))))))
(let (($generated@@810  (=> (and (and (not ($generated@@0 ($generated@@276 ($generated@@11 false)))) (not ($generated@@0 ($generated@@276 ($generated@@11 true))))) (= (ControlFlow 0 2) (- 0 1))) false)))
(let (($generated@@811  (=> ($generated@@261 $generated@@750 $generated@@161) (and (and (=> (= (ControlFlow 0 40) 36) $generated@@809) (=> (= (ControlFlow 0 40) 38) $generated@@808)) (=> (= (ControlFlow 0 40) 2) $generated@@810)))))
(let (($generated@@812  (=> (and (= $generated@@758 ($generated@@172 $generated@@757 $generated@@756 $generated@@60 false)) ($generated@@694 $generated@@750)) (and (=> (= (ControlFlow 0 54) 53) $generated@@771) (=> (= (ControlFlow 0 54) 40) $generated@@811)))))
(let (($generated@@813  (=> (and ($generated@@250 $generated@@756) ($generated@@761 $generated@@756)) (=> (and (and (and (and ($generated@@142 $generated@@750 $generated@@249) ($generated@@80 $generated@@750 $generated@@249 $generated@@756)) ($generated@@694 $generated@@750)) (= 1 $generated@@762)) (and ($generated@@261 $generated@@750 $generated@@161) (= (ControlFlow 0 55) 54))) $generated@@812))))
$generated@@813))))))))))))))))))))))))))))))))))))))))
))
(check-sat)
(pop 1)
; Valid
(get-info :rlimit)
(reset)
(set-option :rlimit 0)
; did a full reset
(reset)
(set-option :print-success false)
(set-info :smt-lib-version 2.6)
(set-option :auto_config false)
(set-option :type_check true)
(set-option :smt.case_split 3)
(set-option :smt.qi.eager_threshold 100)
(set-option :smt.delay_units true)
(set-option :smt.arith.solver 2)
(set-option :smt.mbqi false)
(set-option :model.compact false)
(set-option :model.v2 true)
(set-option :pp.bv_literals false)
; done setting options


(set-info :category "industrial")
(declare-sort |T@U| 0)
(declare-sort |T@T| 0)
(declare-fun real_pow (Real Real) Real)
(declare-fun UOrdering2 (|T@U| |T@U|) Bool)
(declare-fun UOrdering3 (|T@T| |T@U| |T@U|) Bool)
(declare-fun tickleBool (Bool) Bool)
(assert (and (tickleBool true) (tickleBool false)))
(declare-fun $generated (T@U) Int)
(declare-fun $generated@@0 (T@U) Bool)
(declare-fun $generated@@1 (T@T) Int)
(declare-fun $generated@@2 () T@T)
(declare-fun $generated@@3 () T@T)
(declare-fun $generated@@4 () T@T)
(declare-fun $generated@@5 () T@T)
(declare-fun $generated@@6 () T@T)
(declare-fun $generated@@7 () T@T)
(declare-fun $generated@@8 (Int) T@U)
(declare-fun type (T@U) T@T)
(declare-fun $generated@@9 (Real) T@U)
(declare-fun $generated@@10 (T@U) Real)
(declare-fun $generated@@11 (Bool) T@U)
(declare-fun $generated@@12 (RoundingMode) T@U)
(declare-fun $generated@@13 (T@U) RoundingMode)
(declare-fun $generated@@14 (String) T@U)
(declare-fun $generated@@15 (T@U) String)
(declare-fun $generated@@16 ((RegEx String)) T@U)
(declare-fun $generated@@17 (T@U) (RegEx String))
(declare-fun $generated@@44 (T@U T@U) Bool)
(declare-fun $generated@@45 (T@T T@T) T@T)
(declare-fun $generated@@46 () T@T)
(declare-fun $generated@@47 () T@T)
(declare-fun $generated@@48 (T@U T@U) T@U)
(declare-fun $generated@@49 (T@U T@U) T@U)
(declare-fun $generated@@50 () T@U)
(declare-fun $generated@@51 (T@T) T@T)
(declare-fun $generated@@52 (T@T) T@T)
(declare-fun $generated@@53 (T@U T@U T@U) T@U)
(declare-fun $generated@@54 (T@T) T@T)
(declare-fun $generated@@55 (T@T) T@T)
(declare-fun $generated@@56 (T@U T@U T@U) T@U)
(declare-fun $generated@@106 (T@U T@U T@U) T@U)
(declare-fun $generated@@107 (T@U T@U T@U Bool) T@U)
(declare-fun $generated@@108 (T@T T@T) T@T)
(declare-fun $generated@@109 (T@T) T@T)
(declare-fun $generated@@110 (T@T) T@T)
(declare-fun $generated@@111 (T@U T@U T@U T@U) T@U)
(declare-fun $generated@@162 (Int) Int)
(declare-fun $generated@@164 (T@U) T@U)
(declare-fun $generated@@171 (T@U) T@U)
(declare-fun $generated@@172 (T@T T@U) T@U)
(declare-fun $generated@@173 () T@T)
(declare-fun $generated@@179 (Int Int) Int)
(assert  (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (= ($generated@@1 $generated@@2) 0) (= ($generated@@1 $generated@@3) 1)) (= ($generated@@1 $generated@@4) 2)) (= ($generated@@1 $generated@@5) 3)) (= ($generated@@1 $generated@@6) 4)) (= ($generated@@1 $generated@@7) 5)) (forall (($generated@@18 Int) ) (! (= ($generated ($generated@@8 $generated@@18)) $generated@@18)
 :pattern ( ($generated@@8 $generated@@18))
))) (forall (($generated@@19 T@U) ) (!  (=> (= (type $generated@@19) $generated@@2) (= ($generated@@8 ($generated $generated@@19)) $generated@@19))
 :pattern ( ($generated $generated@@19))
))) (forall (($generated@@20 Int) ) (! (= (type ($generated@@8 $generated@@20)) $generated@@2)
 :pattern ( ($generated@@8 $generated@@20))
))) (forall (($generated@@21 Real) ) (! (= ($generated@@10 ($generated@@9 $generated@@21)) $generated@@21)
 :pattern ( ($generated@@9 $generated@@21))
))) (forall (($generated@@22 T@U) ) (!  (=> (= (type $generated@@22) $generated@@3) (= ($generated@@9 ($generated@@10 $generated@@22)) $generated@@22))
 :pattern ( ($generated@@10 $generated@@22))
))) (forall (($generated@@23 Real) ) (! (= (type ($generated@@9 $generated@@23)) $generated@@3)
 :pattern ( ($generated@@9 $generated@@23))
))) (forall (($generated@@24 Bool) ) (! (= ($generated@@0 ($generated@@11 $generated@@24)) $generated@@24)
 :pattern ( ($generated@@11 $generated@@24))
))) (forall (($generated@@25 T@U) ) (!  (=> (= (type $generated@@25) $generated@@4) (= ($generated@@11 ($generated@@0 $generated@@25)) $generated@@25))
 :pattern ( ($generated@@0 $generated@@25))
))) (forall (($generated@@26 Bool) ) (! (= (type ($generated@@11 $generated@@26)) $generated@@4)
 :pattern ( ($generated@@11 $generated@@26))
))) (forall (($generated@@27 RoundingMode) ) (! (= ($generated@@13 ($generated@@12 $generated@@27)) $generated@@27)
 :pattern ( ($generated@@12 $generated@@27))
))) (forall (($generated@@28 T@U) ) (!  (=> (= (type $generated@@28) $generated@@5) (= ($generated@@12 ($generated@@13 $generated@@28)) $generated@@28))
 :pattern ( ($generated@@13 $generated@@28))
))) (forall (($generated@@29 RoundingMode) ) (! (= (type ($generated@@12 $generated@@29)) $generated@@5)
 :pattern ( ($generated@@12 $generated@@29))
))) (forall (($generated@@30 String) ) (! (= ($generated@@15 ($generated@@14 $generated@@30)) $generated@@30)
 :pattern ( ($generated@@14 $generated@@30))
))) (forall (($generated@@31 T@U) ) (!  (=> (= (type $generated@@31) $generated@@6) (= ($generated@@14 ($generated@@15 $generated@@31)) $generated@@31))
 :pattern ( ($generated@@15 $generated@@31))
))) (forall (($generated@@32 String) ) (! (= (type ($generated@@14 $generated@@32)) $generated@@6)
 :pattern ( ($generated@@14 $generated@@32))
))) (forall (($generated@@33 (RegEx String)) ) (! (= ($generated@@17 ($generated@@16 $generated@@33)) $generated@@33)
 :pattern ( ($generated@@16 $generated@@33))
))) (forall (($generated@@34 T@U) ) (!  (=> (= (type $generated@@34) $generated@@7) (= ($generated@@16 ($generated@@17 $generated@@34)) $generated@@34))
 :pattern ( ($generated@@17 $generated@@34))
))) (forall (($generated@@35 (RegEx String)) ) (! (= (type ($generated@@16 $generated@@35)) $generated@@7)
 :pattern ( ($generated@@16 $generated@@35))
))))
(assert (forall (($generated@@36 T@U) ) (! (UOrdering2 $generated@@36 $generated@@36)
 :no-pattern ($generated $generated@@36)
 :no-pattern ($generated@@0 $generated@@36)
)))
(assert (forall (($generated@@37 T@U) ($generated@@38 T@U) ($generated@@39 T@U) ) (! (let (($generated@@40 (type $generated@@37)))
 (=> (and (and (= (type $generated@@38) $generated@@40) (= (type $generated@@39) $generated@@40)) (and (UOrdering2 $generated@@37 $generated@@38) (UOrdering2 $generated@@38 $generated@@39))) (UOrdering2 $generated@@37 $generated@@39)))
 :pattern ( (UOrdering2 $generated@@37 $generated@@38) (UOrdering2 $generated@@38 $generated@@39))
)))
(assert (forall (($generated@@41 T@U) ($generated@@42 T@U) ) (! (let (($generated@@43 (type $generated@@41)))
 (=> (= (type $generated@@42) $generated@@43) (=> (and (UOrdering2 $generated@@41 $generated@@42) (UOrdering2 $generated@@42 $generated@@41)) (= $generated@@41 $generated@@42))))
 :pattern ( (UOrdering2 $generated@@41 $generated@@42) (UOrdering2 $generated@@42 $generated@@41))
)))
(assert  (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (forall (($generated@@57 T@T) ($generated@@58 T@T) ) (= ($generated@@1 ($generated@@45 $generated@@57 $generated@@58)) 6)) (forall (($generated@@59 T@T) ($generated@@60 T@T) ) (! (= ($generated@@51 ($generated@@45 $generated@@59 $generated@@60)) $generated@@59)
 :pattern ( ($generated@@45 $generated@@59 $generated@@60))
))) (forall (($generated@@61 T@T) ($generated@@62 T@T) ) (! (= ($generated@@52 ($generated@@45 $generated@@61 $generated@@62)) $generated@@62)
 :pattern ( ($generated@@45 $generated@@61 $generated@@62))
))) (forall (($generated@@63 T@U) ($generated@@64 T@U) ) (! (let (($generated@@65 ($generated@@52 (type $generated@@63))))
(= (type ($generated@@49 $generated@@63 $generated@@64)) $generated@@65))
 :pattern ( ($generated@@49 $generated@@63 $generated@@64))
))) (forall (($generated@@66 T@U) ($generated@@67 T@U) ($generated@@68 T@U) ) (! (let (($generated@@69 (type $generated@@68)))
(let (($generated@@70 (type $generated@@67)))
(= (type ($generated@@53 $generated@@66 $generated@@67 $generated@@68)) ($generated@@45 $generated@@70 $generated@@69))))
 :pattern ( ($generated@@53 $generated@@66 $generated@@67 $generated@@68))
))) (forall (($generated@@71 T@U) ($generated@@72 T@U) ($generated@@73 T@U) ) (! (let (($generated@@74 ($generated@@52 (type $generated@@71))))
 (=> (= (type $generated@@73) $generated@@74) (= ($generated@@49 ($generated@@53 $generated@@71 $generated@@72 $generated@@73) $generated@@72) $generated@@73)))
 :weight 0
))) (and (forall (($generated@@75 T@U) ($generated@@76 T@U) ($generated@@77 T@U) ($generated@@78 T@U) ) (!  (or (= $generated@@77 $generated@@78) (= ($generated@@49 ($generated@@53 $generated@@76 $generated@@77 $generated@@75) $generated@@78) ($generated@@49 $generated@@76 $generated@@78)))
 :weight 0
)) (forall (($generated@@79 T@U) ($generated@@80 T@U) ($generated@@81 T@U) ($generated@@82 T@U) ) (!  (or true (= ($generated@@49 ($generated@@53 $generated@@80 $generated@@81 $generated@@79) $generated@@82) ($generated@@49 $generated@@80 $generated@@82)))
 :weight 0
)))) (= ($generated@@1 $generated@@46) 7)) (forall (($generated@@83 T@T) ) (= ($generated@@1 ($generated@@54 $generated@@83)) 8))) (forall (($generated@@84 T@T) ) (! (= ($generated@@55 ($generated@@54 $generated@@84)) $generated@@84)
 :pattern ( ($generated@@54 $generated@@84))
))) (forall (($generated@@85 T@U) ($generated@@86 T@U) ) (! (let (($generated@@87 ($generated@@55 (type $generated@@86))))
(= (type ($generated@@48 $generated@@85 $generated@@86)) $generated@@87))
 :pattern ( ($generated@@48 $generated@@85 $generated@@86))
))) (= ($generated@@1 $generated@@47) 9)) (forall (($generated@@88 T@U) ($generated@@89 T@U) ($generated@@90 T@U) ) (! (= (type ($generated@@56 $generated@@88 $generated@@89 $generated@@90)) $generated@@47)
 :pattern ( ($generated@@56 $generated@@88 $generated@@89 $generated@@90))
))) (forall (($generated@@91 T@U) ($generated@@92 T@U) ($generated@@93 T@U) ) (! (let (($generated@@94 ($generated@@55 (type $generated@@92))))
 (=> (= (type $generated@@93) $generated@@94) (= ($generated@@48 ($generated@@56 $generated@@91 $generated@@92 $generated@@93) $generated@@92) $generated@@93)))
 :weight 0
))) (and (forall (($generated@@95 T@U) ($generated@@96 T@U) ($generated@@97 T@U) ($generated@@98 T@U) ) (!  (or (= $generated@@97 $generated@@98) (= ($generated@@48 ($generated@@56 $generated@@96 $generated@@97 $generated@@95) $generated@@98) ($generated@@48 $generated@@96 $generated@@98)))
 :weight 0
)) (forall (($generated@@99 T@U) ($generated@@100 T@U) ($generated@@101 T@U) ($generated@@102 T@U) ) (!  (or true (= ($generated@@48 ($generated@@56 $generated@@100 $generated@@101 $generated@@99) $generated@@102) ($generated@@48 $generated@@100 $generated@@102)))
 :weight 0
)))) (= (type $generated@@50) ($generated@@54 $generated@@4))))
(assert (forall (($generated@@103 T@U) ($generated@@104 T@U) ) (!  (=> (and (and (= (type $generated@@103) ($generated@@45 $generated@@46 $generated@@47)) (= (type $generated@@104) ($generated@@45 $generated@@46 $generated@@47))) ($generated@@44 $generated@@103 $generated@@104)) (forall (($generated@@105 T@U) ) (!  (=> (and (= (type $generated@@105) $generated@@46) ($generated@@0 ($generated@@48 ($generated@@49 $generated@@103 $generated@@105) $generated@@50))) ($generated@@0 ($generated@@48 ($generated@@49 $generated@@104 $generated@@105) $generated@@50)))
 :pattern ( ($generated@@48 ($generated@@49 $generated@@104 $generated@@105) $generated@@50))
)))
 :pattern ( ($generated@@44 $generated@@103 $generated@@104))
)))
(assert  (and (and (and (and (and (and (and (forall (($generated@@112 T@T) ($generated@@113 T@T) ) (= ($generated@@1 ($generated@@108 $generated@@112 $generated@@113)) 10)) (forall (($generated@@114 T@T) ($generated@@115 T@T) ) (! (= ($generated@@109 ($generated@@108 $generated@@114 $generated@@115)) $generated@@114)
 :pattern ( ($generated@@108 $generated@@114 $generated@@115))
))) (forall (($generated@@116 T@T) ($generated@@117 T@T) ) (! (= ($generated@@110 ($generated@@108 $generated@@116 $generated@@117)) $generated@@117)
 :pattern ( ($generated@@108 $generated@@116 $generated@@117))
))) (forall (($generated@@118 T@U) ($generated@@119 T@U) ($generated@@120 T@U) ) (! (let (($generated@@121 ($generated@@110 (type $generated@@118))))
(= (type ($generated@@106 $generated@@118 $generated@@119 $generated@@120)) $generated@@121))
 :pattern ( ($generated@@106 $generated@@118 $generated@@119 $generated@@120))
))) (forall (($generated@@122 T@U) ($generated@@123 T@U) ($generated@@124 T@U) ($generated@@125 T@U) ) (! (let (($generated@@126 (type $generated@@125)))
(let (($generated@@127 (type $generated@@123)))
(= (type ($generated@@111 $generated@@122 $generated@@123 $generated@@124 $generated@@125)) ($generated@@108 $generated@@127 $generated@@126))))
 :pattern ( ($generated@@111 $generated@@122 $generated@@123 $generated@@124 $generated@@125))
))) (forall (($generated@@128 T@U) ($generated@@129 T@U) ($generated@@130 T@U) ($generated@@131 T@U) ) (! (let (($generated@@132 ($generated@@110 (type $generated@@128))))
 (=> (= (type $generated@@131) $generated@@132) (= ($generated@@106 ($generated@@111 $generated@@128 $generated@@129 $generated@@130 $generated@@131) $generated@@129 $generated@@130) $generated@@131)))
 :weight 0
))) (and (and (forall (($generated@@133 T@U) ($generated@@134 T@U) ($generated@@135 T@U) ($generated@@136 T@U) ($generated@@137 T@U) ($generated@@138 T@U) ) (!  (or (= $generated@@135 $generated@@137) (= ($generated@@106 ($generated@@111 $generated@@134 $generated@@135 $generated@@136 $generated@@133) $generated@@137 $generated@@138) ($generated@@106 $generated@@134 $generated@@137 $generated@@138)))
 :weight 0
)) (forall (($generated@@139 T@U) ($generated@@140 T@U) ($generated@@141 T@U) ($generated@@142 T@U) ($generated@@143 T@U) ($generated@@144 T@U) ) (!  (or (= $generated@@142 $generated@@144) (= ($generated@@106 ($generated@@111 $generated@@140 $generated@@141 $generated@@142 $generated@@139) $generated@@143 $generated@@144) ($generated@@106 $generated@@140 $generated@@143 $generated@@144)))
 :weight 0
))) (forall (($generated@@145 T@U) ($generated@@146 T@U) ($generated@@147 T@U) ($generated@@148 T@U) ($generated@@149 T@U) ($generated@@150 T@U) ) (!  (or true (= ($generated@@106 ($generated@@111 $generated@@146 $generated@@147 $generated@@148 $generated@@145) $generated@@149 $generated@@150) ($generated@@106 $generated@@146 $generated@@149 $generated@@150)))
 :weight 0
)))) (forall (($generated@@151 T@U) ($generated@@152 T@U) ($generated@@153 T@U) ($generated@@154 Bool) ) (! (= (type ($generated@@107 $generated@@151 $generated@@152 $generated@@153 $generated@@154)) ($generated@@108 $generated@@46 $generated@@4))
 :pattern ( ($generated@@107 $generated@@151 $generated@@152 $generated@@153 $generated@@154))
))))
(assert (forall (($generated@@155 T@U) ($generated@@156 T@U) ($generated@@157 T@U) ($generated@@158 Bool) ($generated@@159 T@U) ($generated@@160 T@U) ) (! (let (($generated@@161 ($generated@@55 (type $generated@@160))))
 (=> (and (and (and (and (= (type $generated@@155) $generated@@46) (= (type $generated@@156) ($generated@@45 $generated@@46 $generated@@47))) (= (type $generated@@157) ($generated@@54 $generated@@4))) (= (type $generated@@159) $generated@@46)) (= (type $generated@@160) ($generated@@54 $generated@@161))) (= ($generated@@0 ($generated@@106 ($generated@@107 $generated@@155 $generated@@156 $generated@@157 $generated@@158) $generated@@159 $generated@@160))  (=> (and (not (= $generated@@159 $generated@@155)) ($generated@@0 ($generated@@48 ($generated@@49 $generated@@156 $generated@@159) $generated@@157))) $generated@@158))))
 :pattern ( ($generated@@106 ($generated@@107 $generated@@155 $generated@@156 $generated@@157 $generated@@158) $generated@@159 $generated@@160))
)))
(assert (forall (($generated@@163 Int) ) (! (= ($generated@@162 $generated@@163) $generated@@163)
 :pattern ( ($generated@@162 $generated@@163))
)))
(assert (forall (($generated@@165 T@U) ) (! (let (($generated@@166 (type $generated@@165)))
(= (type ($generated@@164 $generated@@165)) $generated@@166))
 :pattern ( ($generated@@164 $generated@@165))
)))
(assert (forall (($generated@@167 T@U) ) (! (= ($generated@@164 $generated@@167) $generated@@167)
 :pattern ( ($generated@@164 $generated@@167))
)))
(assert (forall (($generated@@168 T@U) ($generated@@169 T@U) ($generated@@170 T@U) ) (!  (=> (and (and (and (and (= (type $generated@@168) ($generated@@45 $generated@@46 $generated@@47)) (= (type $generated@@169) ($generated@@45 $generated@@46 $generated@@47))) (= (type $generated@@170) ($generated@@45 $generated@@46 $generated@@47))) (not (= $generated@@168 $generated@@170))) (and ($generated@@44 $generated@@168 $generated@@169) ($generated@@44 $generated@@169 $generated@@170))) ($generated@@44 $generated@@168 $generated@@170))
 :pattern ( ($generated@@44 $generated@@168 $generated@@169) ($generated@@44 $generated@@169 $generated@@170))
)))
(assert  (and (and (= ($generated@@1 $generated@@173) 11) (forall (($generated@@174 T@U) ) (! (= (type ($generated@@171 $generated@@174)) $generated@@173)
 :pattern ( ($generated@@171 $generated@@174))
))) (forall (($generated@@175 T@T) ($generated@@176 T@U) ) (! (= (type ($generated@@172 $generated@@175 $generated@@176)) $generated@@175)
 :pattern ( ($generated@@172 $generated@@175 $generated@@176))
))))
(assert (forall (($generated@@177 T@U) ) (! (let (($generated@@178 (type $generated@@177)))
(= ($generated@@172 $generated@@178 ($generated@@171 $generated@@177)) $generated@@177))
 :pattern ( ($generated@@171 $generated@@177))
)))
(assert (forall (($generated@@180 Int) ($generated@@181 Int) ) (! (= ($generated@@179 $generated@@180 $generated@@181) (mod $generated@@180 $generated@@181))
 :pattern ( ($generated@@179 $generated@@180 $generated@@181))
)))
(assert (forall (($generated@@182 Int) ) (! (= ($generated@@171 ($generated@@8 ($generated@@162 $generated@@182))) ($generated@@164 ($generated@@171 ($generated@@8 $generated@@182))))
 :pattern ( ($generated@@171 ($generated@@8 ($generated@@162 $generated@@182))))
)))
(assert (forall (($generated@@183 T@U) ) (! (= ($generated@@171 ($generated@@164 $generated@@183)) ($generated@@164 ($generated@@171 $generated@@183)))
 :pattern ( ($generated@@171 ($generated@@164 $generated@@183)))
)))
(push 1)
(declare-fun ControlFlow (Int Int) Int)
(declare-fun $generated@@184 () Int)
(declare-fun $generated@@185 () Int)
(declare-fun $generated@@186 () Int)
(declare-fun $generated@@187 () Int)
(declare-fun $generated@@188 () Int)
(declare-fun $generated@@189 () Int)
(declare-fun $generated@@190 () Int)
(declare-fun $generated@@191 () Int)
(declare-fun $generated@@192 () Int)
(declare-fun $generated@@193 () Int)
(declare-fun $generated@@194 () Int)
(declare-fun $generated@@195 () Int)
(declare-fun $generated@@196 () Int)
(declare-fun $generated@@197 () Int)
(declare-fun $generated@@198 () Int)
(declare-fun $generated@@199 () Int)
(declare-fun $generated@@200 () Int)
(declare-fun $generated@@201 () Int)
(declare-fun $generated@@202 () Int)
(declare-fun $generated@@203 () Int)
(declare-fun $generated@@204 () Int)
(declare-fun $generated@@205 () Int)
(declare-fun $generated@@206 () Int)
(declare-fun $generated@@207 () Int)
(declare-fun $generated@@208 () Int)
(declare-fun $generated@@209 () Int)
(declare-fun $generated@@210 () Int)
(declare-fun $generated@@211 () Int)
(declare-fun $generated@@212 () Int)
(declare-fun $generated@@213 () Int)
(declare-fun $generated@@214 () Int)
(declare-fun $generated@@215 () Int)
(declare-fun $generated@@216 () Int)
(declare-fun $generated@@217 () Int)
(declare-fun $generated@@218 () Bool)
(declare-fun $generated@@219 () Bool)
(declare-fun $generated@@220 () Bool)
(declare-fun $generated@@221 () Int)
(declare-fun $generated@@222 () T@U)
(declare-fun $generated@@223 () T@U)
(declare-fun $generated@@224 () T@U)
(declare-fun $generated@@225 () Int)
(declare-fun $generated@@226 () Int)
(declare-fun $generated@@227 () Int)
(declare-fun $generated@@228 () Int)
(declare-fun $generated@@229 () Int)
(declare-fun $generated@@230 () Int)
(declare-fun $generated@@231 () Bool)
(declare-fun $generated@@232 () Int)
(declare-fun $generated@@233 () Int)
(declare-fun $generated@@234 () Int)
(declare-fun $generated@@235 () Int)
(declare-fun $generated@@236 () Int)
(declare-fun $generated@@237 () Int)
(declare-fun $generated@@238 () Int)
(declare-fun $generated@@239 (T@U) Bool)
(declare-fun $generated@@240 (T@U) Bool)
(declare-fun $generated@@241 () Int)
(assert  (and (and (= (type $generated@@222) ($generated@@45 $generated@@46 $generated@@47)) (= (type $generated@@223) $generated@@46)) (= (type $generated@@224) ($generated@@108 $generated@@46 $generated@@4))))
(set-option :timeout 0)
(set-option :rlimit 0)
(assert (not
 (=> (= (ControlFlow 0 0) 79) (let (($generated@@242  (and (=> (= (ControlFlow 0 63) (- 0 64)) (or (<= 0 $generated@@184) (= (- 10000 $generated@@185) $generated@@184))) (=> (or (<= 0 $generated@@184) (= (- 10000 $generated@@185) $generated@@184)) (=> (= (ControlFlow 0 63) (- 0 62)) (< (- 10000 $generated@@185) $generated@@184))))))
(let (($generated@@243 true))
(let (($generated@@244 true))
(let (($generated@@245  (and (=> (= (ControlFlow 0 35) (- 0 37)) (or (or (or (<= $generated@@186 $generated@@187) (= $generated@@188 ($generated@@162 15))) (= $generated@@189 ($generated@@162 21))) (= $generated@@190 ($generated@@162 4)))) (=> (or (or (or (<= $generated@@186 $generated@@187) (= $generated@@188 ($generated@@162 15))) (= $generated@@189 ($generated@@162 21))) (= $generated@@190 ($generated@@162 4))) (=> (= $generated@@191 (+ $generated@@192 1)) (and (=> (= (ControlFlow 0 35) (- 0 36)) (or (<= 0 $generated@@193) (= (- $generated@@194 $generated@@191) $generated@@193))) (=> (or (<= 0 $generated@@193) (= (- $generated@@194 $generated@@191) $generated@@193)) (=> (= (ControlFlow 0 35) (- 0 34)) (< (- $generated@@194 $generated@@191) $generated@@193)))))))))
(let (($generated@@246  (=> (and (or (or (<= $generated@@186 $generated@@187) (= $generated@@188 ($generated@@162 15))) (= $generated@@189 ($generated@@162 21))) (= (ControlFlow 0 39) 35)) $generated@@245)))
(let (($generated@@247  (=> (and (not (or (or (<= $generated@@186 $generated@@187) (= $generated@@188 ($generated@@162 15))) (= $generated@@189 ($generated@@162 21)))) (= (ControlFlow 0 38) 35)) $generated@@245)))
(let (($generated@@248  (=> (or (<= $generated@@186 $generated@@187) (= $generated@@188 ($generated@@162 15))) (and (=> (= (ControlFlow 0 41) 38) $generated@@247) (=> (= (ControlFlow 0 41) 39) $generated@@246)))))
(let (($generated@@249  (=> (not (or (<= $generated@@186 $generated@@187) (= $generated@@188 ($generated@@162 15)))) (and (=> (= (ControlFlow 0 40) 38) $generated@@247) (=> (= (ControlFlow 0 40) 39) $generated@@246)))))
(let (($generated@@250  (=> (<= $generated@@186 $generated@@187) (and (=> (= (ControlFlow 0 43) 40) $generated@@249) (=> (= (ControlFlow 0 43) 41) $generated@@248)))))
(let (($generated@@251  (=> (< $generated@@187 $generated@@186) (and (=> (= (ControlFlow 0 42) 40) $generated@@249) (=> (= (ControlFlow 0 42) 41) $generated@@248)))))
(let (($generated@@252  (=> (and (and (= $generated@@195 ($generated@@162 4)) (= $generated@@189 $generated@@196)) (and (= $generated@@190 $generated@@195) (= $generated@@188 $generated@@197))) (and (=> (= (ControlFlow 0 47) 42) $generated@@251) (=> (= (ControlFlow 0 47) 43) $generated@@250)))))
(let (($generated@@253  (=> (and (and (= $generated@@198 ($generated@@162 21)) (= $generated@@189 $generated@@198)) (and (= $generated@@190 $generated@@199) (= $generated@@188 $generated@@197))) (and (=> (= (ControlFlow 0 46) 42) $generated@@251) (=> (= (ControlFlow 0 46) 43) $generated@@250)))))
(let (($generated@@254  (=> (and (and (= $generated@@200 ($generated@@162 15)) (= $generated@@189 $generated@@196)) (and (= $generated@@190 $generated@@199) (= $generated@@188 $generated@@200))) (and (=> (= (ControlFlow 0 45) 42) $generated@@251) (=> (= (ControlFlow 0 45) 43) $generated@@250)))))
(let (($generated@@255  (=> (and (and (<= $generated@@186 $generated@@187) (= $generated@@189 $generated@@196)) (and (= $generated@@190 $generated@@199) (= $generated@@188 $generated@@197))) (and (=> (= (ControlFlow 0 44) 42) $generated@@251) (=> (= (ControlFlow 0 44) 43) $generated@@250)))))
(let (($generated@@256  (=> (= (ControlFlow 0 26) (- 0 25)) (or (or (<= $generated@@194 $generated@@192) (= $generated@@201 ($generated@@162 12))) (= $generated@@202 ($generated@@162 37))))))
(let (($generated@@257  (=> (and (or (<= $generated@@194 $generated@@192) (= $generated@@201 ($generated@@162 12))) (= (ControlFlow 0 28) 26)) $generated@@256)))
(let (($generated@@258  (=> (and (not (or (<= $generated@@194 $generated@@192) (= $generated@@201 ($generated@@162 12)))) (= (ControlFlow 0 27) 26)) $generated@@256)))
(let (($generated@@259  (=> (<= $generated@@194 $generated@@192) (and (=> (= (ControlFlow 0 30) 27) $generated@@258) (=> (= (ControlFlow 0 30) 28) $generated@@257)))))
(let (($generated@@260  (=> (< $generated@@192 $generated@@194) (and (=> (= (ControlFlow 0 29) 27) $generated@@258) (=> (= (ControlFlow 0 29) 28) $generated@@257)))))
(let (($generated@@261  (=> (= $generated@@203 ($generated@@162 37)) (=> (and (= $generated@@201 $generated@@204) (= $generated@@202 $generated@@203)) (and (=> (= (ControlFlow 0 33) 29) $generated@@260) (=> (= (ControlFlow 0 33) 30) $generated@@259))))))
(let (($generated@@262  (=> (= $generated@@205 ($generated@@162 12)) (=> (and (= $generated@@201 $generated@@205) (= $generated@@202 $generated@@199)) (and (=> (= (ControlFlow 0 32) 29) $generated@@260) (=> (= (ControlFlow 0 32) 30) $generated@@259))))))
(let (($generated@@263  (=> (<= $generated@@194 $generated@@192) (=> (and (= $generated@@201 $generated@@204) (= $generated@@202 $generated@@206)) (and (=> (= (ControlFlow 0 31) 29) $generated@@260) (=> (= (ControlFlow 0 31) 30) $generated@@259))))))
(let (($generated@@264  (=> (= $generated@@207 (+ $generated@@208 1)) (and (=> (= (ControlFlow 0 23) (- 0 24)) (or (<= 0 $generated@@209) (= (- $generated@@210 $generated@@207) $generated@@209))) (=> (or (<= 0 $generated@@209) (= (- $generated@@210 $generated@@207) $generated@@209)) (=> (= (ControlFlow 0 23) (- 0 22)) (< (- $generated@@210 $generated@@207) $generated@@209)))))))
(let (($generated@@265  (and (=> (= (ControlFlow 0 8) (- 0 10)) (or (or (<= $generated@@210 $generated@@208) (= $generated@@211 ($generated@@162 187))) (= $generated@@212 ($generated@@162 7)))) (=> (or (or (<= $generated@@210 $generated@@208) (= $generated@@211 ($generated@@162 187))) (= $generated@@212 ($generated@@162 7))) (=> (= $generated@@213 (+ $generated@@187 1)) (and (=> (= (ControlFlow 0 8) (- 0 9)) (or (<= 0 $generated@@214) (= (- $generated@@186 $generated@@213) $generated@@214))) (=> (or (<= 0 $generated@@214) (= (- $generated@@186 $generated@@213) $generated@@214)) (=> (= (ControlFlow 0 8) (- 0 7)) (< (- $generated@@186 $generated@@213) $generated@@214)))))))))
(let (($generated@@266  (=> (and (or (<= $generated@@210 $generated@@208) (= $generated@@211 ($generated@@162 187))) (= (ControlFlow 0 12) 8)) $generated@@265)))
(let (($generated@@267  (=> (and (not (or (<= $generated@@210 $generated@@208) (= $generated@@211 ($generated@@162 187)))) (= (ControlFlow 0 11) 8)) $generated@@265)))
(let (($generated@@268  (=> (<= $generated@@210 $generated@@208) (and (=> (= (ControlFlow 0 14) 11) $generated@@267) (=> (= (ControlFlow 0 14) 12) $generated@@266)))))
(let (($generated@@269  (=> (< $generated@@208 $generated@@210) (and (=> (= (ControlFlow 0 13) 11) $generated@@267) (=> (= (ControlFlow 0 13) 12) $generated@@266)))))
(let (($generated@@270  (=> (= $generated@@215 ($generated@@162 7)) (=> (and (= $generated@@212 $generated@@215) (= $generated@@211 $generated@@216)) (and (=> (= (ControlFlow 0 21) 13) $generated@@269) (=> (= (ControlFlow 0 21) 14) $generated@@268))))))
(let (($generated@@271  (=> (< $generated@@208 $generated@@210) (and (and (and (=> (= (ControlFlow 0 48) 47) $generated@@252) (=> (= (ControlFlow 0 48) 21) $generated@@270)) (=> (= (ControlFlow 0 48) 33) $generated@@261)) (=> (= (ControlFlow 0 48) 23) $generated@@264)))))
(let (($generated@@272  (=> (and (and (and (< $generated@@208 $generated@@210) (= ($generated@@179 $generated@@208 ($generated@@162 2)) ($generated@@162 0))) (= $generated@@217 ($generated@@162 187))) (and (= $generated@@212 $generated@@199) (= $generated@@211 $generated@@217))) (and (=> (= (ControlFlow 0 17) 13) $generated@@269) (=> (= (ControlFlow 0 17) 14) $generated@@268)))))
(let (($generated@@273  (=> (and (<= $generated@@210 $generated@@208) (= (ControlFlow 0 20) 17)) $generated@@272)))
(let (($generated@@274  (=> (< $generated@@208 $generated@@210) (and (=> (= (ControlFlow 0 18) (- 0 19)) (not (= ($generated@@162 2) 0))) (=> (not (= ($generated@@162 2) 0)) (=> (= (ControlFlow 0 18) 17) $generated@@272))))))
(let (($generated@@275  (=> (and (and (not (and (< $generated@@208 $generated@@210) (= ($generated@@179 $generated@@208 ($generated@@162 2)) ($generated@@162 0)))) (<= $generated@@210 $generated@@208)) (and (= $generated@@212 $generated@@199) (= $generated@@211 $generated@@216))) (and (=> (= (ControlFlow 0 16) 13) $generated@@269) (=> (= (ControlFlow 0 16) 14) $generated@@268)))))
(let (($generated@@276  (=> (and ($generated@@0 ($generated@@164 ($generated@@11 true))) (= $generated@@209 (- $generated@@210 $generated@@208))) (and (and (and (=> (= (ControlFlow 0 49) 48) $generated@@271) (=> (= (ControlFlow 0 49) 16) $generated@@275)) (=> (= (ControlFlow 0 49) 18) $generated@@274)) (=> (= (ControlFlow 0 49) 20) $generated@@273)))))
(let (($generated@@277  (=> (not ($generated@@0 ($generated@@164 ($generated@@11 true)))) (=> (and (= $generated@@212 $generated@@199) (= $generated@@211 $generated@@216)) (and (=> (= (ControlFlow 0 15) 13) $generated@@269) (=> (= (ControlFlow 0 15) 14) $generated@@268))))))
(let (($generated@@278  (=> $generated@@218 (and (=> (= (ControlFlow 0 50) 15) $generated@@277) (=> (= (ControlFlow 0 50) 49) $generated@@276)))))
(let (($generated@@279 true))
(let (($generated@@280  (and (=> (= (ControlFlow 0 51) 6) $generated@@279) (=> (= (ControlFlow 0 51) 50) $generated@@278))))
(let (($generated@@281 true))
(let (($generated@@282  (=> (and (and (and (and (and (and (and (and (not false) (<= 0 $generated@@192)) $generated@@219) (<= 0 $generated@@187)) $generated@@220) (= $generated@@221 1998)) (<= 0 $generated@@208)) (forall (($generated@@283 T@U) ) (!  (=> (= (type $generated@@283) $generated@@46) (=> (and (not (= $generated@@283 $generated@@223)) ($generated@@0 ($generated@@48 ($generated@@49 $generated@@222 $generated@@283) $generated@@50))) (= ($generated@@49 $generated@@222 $generated@@283) ($generated@@49 $generated@@222 $generated@@283))))
 :pattern ( ($generated@@49 $generated@@222 $generated@@283))
))) (and (and ($generated@@44 $generated@@222 $generated@@222) (forall (($generated@@284 T@U) ($generated@@285 T@U) ) (! (let (($generated@@286 ($generated@@55 (type $generated@@285))))
 (=> (and (and (= (type $generated@@284) $generated@@46) (= (type $generated@@285) ($generated@@54 $generated@@286))) (and (not (= $generated@@284 $generated@@223)) ($generated@@0 ($generated@@48 ($generated@@49 $generated@@222 $generated@@284) $generated@@50)))) (or (= ($generated@@48 ($generated@@49 $generated@@222 $generated@@284) $generated@@285) ($generated@@48 ($generated@@49 $generated@@222 $generated@@284) $generated@@285)) ($generated@@0 ($generated@@106 $generated@@224 $generated@@284 $generated@@285)))))
 :pattern ( ($generated@@48 ($generated@@49 $generated@@222 $generated@@284) $generated@@285))
))) (and (<= (- $generated@@210 $generated@@208) $generated@@225) (=> (= (- $generated@@210 $generated@@208) $generated@@225) true)))) (and (=> (= (ControlFlow 0 52) 5) $generated@@281) (=> (= (ControlFlow 0 52) 51) $generated@@280)))))
(let (($generated@@287  (and (=> (= (ControlFlow 0 53) (- 0 54)) (= $generated@@221 ($generated@@162 1998))) (=> (= $generated@@221 ($generated@@162 1998)) (=> (= $generated@@226 ($generated@@162 0)) (=> (and (= $generated@@225 (- $generated@@210 $generated@@226)) (= (ControlFlow 0 53) 52)) $generated@@282))))))
(let (($generated@@288  (=> (= $generated@@227 ($generated@@162 1998)) (=> (and (= $generated@@221 $generated@@227) (= (ControlFlow 0 61) 53)) $generated@@287))))
(let (($generated@@289  (=> (= $generated@@228 ($generated@@162 1998)) (=> (and (= $generated@@221 $generated@@228) (= (ControlFlow 0 60) 53)) $generated@@287))))
(let (($generated@@290  (=> (< $generated@@229 10000) (=> (and (= $generated@@184 (- 10000 $generated@@229)) (= $generated@@185 (+ $generated@@229 3))) (and (and (=> (= (ControlFlow 0 65) 60) $generated@@289) (=> (= (ControlFlow 0 65) 61) $generated@@288)) (=> (= (ControlFlow 0 65) 63) $generated@@242))))))
(let (($generated@@291  (=> (<= 10000 $generated@@229) (and (=> (= (ControlFlow 0 58) (- 0 59)) (<= ($generated@@162 10000) $generated@@229)) (=> (<= ($generated@@162 10000) $generated@@229) (=> (= $generated@@230 ($generated@@162 1998)) (=> (and (= $generated@@221 $generated@@230) (= (ControlFlow 0 58) 53)) $generated@@287)))))))
(let (($generated@@292  (=> $generated@@231 (and (=> (= (ControlFlow 0 66) 58) $generated@@291) (=> (= (ControlFlow 0 66) 65) $generated@@290)))))
(let (($generated@@293  (and (=> (= (ControlFlow 0 67) 57) $generated@@243) (=> (= (ControlFlow 0 67) 66) $generated@@292))))
(let (($generated@@294  (=> (and (and (and (and (and (and (and (and (not false) (<= 0 $generated@@192)) $generated@@219) (<= 0 $generated@@187)) $generated@@220) (<= 2000 $generated@@229)) (= $generated@@232 8000)) (forall (($generated@@295 T@U) ) (!  (=> (= (type $generated@@295) $generated@@46) (=> (and (not (= $generated@@295 $generated@@223)) ($generated@@0 ($generated@@48 ($generated@@49 $generated@@222 $generated@@295) $generated@@50))) (= ($generated@@49 $generated@@222 $generated@@295) ($generated@@49 $generated@@222 $generated@@295))))
 :pattern ( ($generated@@49 $generated@@222 $generated@@295))
))) (and (and ($generated@@44 $generated@@222 $generated@@222) (forall (($generated@@296 T@U) ($generated@@297 T@U) ) (! (let (($generated@@298 ($generated@@55 (type $generated@@297))))
 (=> (and (and (= (type $generated@@296) $generated@@46) (= (type $generated@@297) ($generated@@54 $generated@@298))) (and (not (= $generated@@296 $generated@@223)) ($generated@@0 ($generated@@48 ($generated@@49 $generated@@222 $generated@@296) $generated@@50)))) (or (= ($generated@@48 ($generated@@49 $generated@@222 $generated@@296) $generated@@297) ($generated@@48 ($generated@@49 $generated@@222 $generated@@296) $generated@@297)) ($generated@@0 ($generated@@106 $generated@@224 $generated@@296 $generated@@297)))))
 :pattern ( ($generated@@48 ($generated@@49 $generated@@222 $generated@@296) $generated@@297))
))) (and (<= (- 10000 $generated@@229) $generated@@232) (=> (= (- 10000 $generated@@229) $generated@@232) true)))) (and (=> (= (ControlFlow 0 68) 56) $generated@@244) (=> (= (ControlFlow 0 68) 67) $generated@@293)))))
(let (($generated@@299  (=> (and (= $generated@@232 (- 10000 $generated@@233)) (= (ControlFlow 0 69) 68)) $generated@@294)))
(let (($generated@@300  (=> (= $generated@@234 (- $generated@@233 2)) (=> (and (= $generated@@221 $generated@@234) (= (ControlFlow 0 55) 53)) $generated@@287))))
(let (($generated@@301  (=> (< $generated@@187 $generated@@186) (=> (and (= $generated@@214 (- $generated@@186 $generated@@187)) (= $generated@@233 ($generated@@162 2000))) (and (and (and (and (=> (= (ControlFlow 0 70) 45) $generated@@254) (=> (= (ControlFlow 0 70) 32) $generated@@262)) (=> (= (ControlFlow 0 70) 46) $generated@@253)) (=> (= (ControlFlow 0 70) 69) $generated@@299)) (=> (= (ControlFlow 0 70) 55) $generated@@300))))))
(let (($generated@@302  (=> $generated@@220 (and (=> (= (ControlFlow 0 71) 44) $generated@@255) (=> (= (ControlFlow 0 71) 70) $generated@@301)))))
(let (($generated@@303 true))
(let (($generated@@304  (and (=> (= (ControlFlow 0 72) 4) $generated@@303) (=> (= (ControlFlow 0 72) 71) $generated@@302))))
(let (($generated@@305 true))
(let (($generated@@306  (=> (and (and (and (and (and (not false) (<= 0 $generated@@192)) $generated@@219) (<= 0 $generated@@187)) (forall (($generated@@307 T@U) ) (!  (=> (= (type $generated@@307) $generated@@46) (=> (and (not (= $generated@@307 $generated@@223)) ($generated@@0 ($generated@@48 ($generated@@49 $generated@@222 $generated@@307) $generated@@50))) (= ($generated@@49 $generated@@222 $generated@@307) ($generated@@49 $generated@@222 $generated@@307))))
 :pattern ( ($generated@@49 $generated@@222 $generated@@307))
))) (and (and ($generated@@44 $generated@@222 $generated@@222) (forall (($generated@@308 T@U) ($generated@@309 T@U) ) (! (let (($generated@@310 ($generated@@55 (type $generated@@309))))
 (=> (and (and (= (type $generated@@308) $generated@@46) (= (type $generated@@309) ($generated@@54 $generated@@310))) (and (not (= $generated@@308 $generated@@223)) ($generated@@0 ($generated@@48 ($generated@@49 $generated@@222 $generated@@308) $generated@@50)))) (or (= ($generated@@48 ($generated@@49 $generated@@222 $generated@@308) $generated@@309) ($generated@@48 ($generated@@49 $generated@@222 $generated@@308) $generated@@309)) ($generated@@0 ($generated@@106 $generated@@224 $generated@@308 $generated@@309)))))
 :pattern ( ($generated@@48 ($generated@@49 $generated@@222 $generated@@308) $generated@@309))
))) (and (<= (- $generated@@186 $generated@@187) $generated@@235) (=> (= (- $generated@@186 $generated@@187) $generated@@235) true)))) (and (=> (= (ControlFlow 0 73) 3) $generated@@305) (=> (= (ControlFlow 0 73) 72) $generated@@304)))))
(let (($generated@@311  (=> (< $generated@@192 $generated@@194) (=> (and (and (= $generated@@193 (- $generated@@194 $generated@@192)) (= $generated@@236 ($generated@@162 0))) (and (= $generated@@235 (- $generated@@186 $generated@@236)) (= (ControlFlow 0 74) 73))) $generated@@306))))
(let (($generated@@312  (=> $generated@@219 (and (=> (= (ControlFlow 0 75) 31) $generated@@263) (=> (= (ControlFlow 0 75) 74) $generated@@311)))))
(let (($generated@@313 true))
(let (($generated@@314  (and (=> (= (ControlFlow 0 76) 2) $generated@@313) (=> (= (ControlFlow 0 76) 75) $generated@@312))))
(let (($generated@@315 true))
(let (($generated@@316  (=> (and (and (and (not false) (<= 0 $generated@@192)) (forall (($generated@@317 T@U) ) (!  (=> (= (type $generated@@317) $generated@@46) (=> (and (not (= $generated@@317 $generated@@223)) ($generated@@0 ($generated@@48 ($generated@@49 $generated@@222 $generated@@317) $generated@@50))) (= ($generated@@49 $generated@@222 $generated@@317) ($generated@@49 $generated@@222 $generated@@317))))
 :pattern ( ($generated@@49 $generated@@222 $generated@@317))
))) (and (and ($generated@@44 $generated@@222 $generated@@222) (forall (($generated@@318 T@U) ($generated@@319 T@U) ) (! (let (($generated@@320 ($generated@@55 (type $generated@@319))))
 (=> (and (and (= (type $generated@@318) $generated@@46) (= (type $generated@@319) ($generated@@54 $generated@@320))) (and (not (= $generated@@318 $generated@@223)) ($generated@@0 ($generated@@48 ($generated@@49 $generated@@222 $generated@@318) $generated@@50)))) (or (= ($generated@@48 ($generated@@49 $generated@@222 $generated@@318) $generated@@319) ($generated@@48 ($generated@@49 $generated@@222 $generated@@318) $generated@@319)) ($generated@@0 ($generated@@106 $generated@@224 $generated@@318 $generated@@319)))))
 :pattern ( ($generated@@48 ($generated@@49 $generated@@222 $generated@@318) $generated@@319))
))) (and (<= (- $generated@@194 $generated@@192) $generated@@237) (=> (= (- $generated@@194 $generated@@192) $generated@@237) true)))) (and (=> (= (ControlFlow 0 77) 1) $generated@@315) (=> (= (ControlFlow 0 77) 76) $generated@@314)))))
(let (($generated@@321  (=> (and (and (= $generated@@224 ($generated@@107 $generated@@223 $generated@@222 $generated@@50 false)) (= $generated@@238 ($generated@@162 0))) (and (= $generated@@237 (- $generated@@194 $generated@@238)) (= (ControlFlow 0 78) 77))) $generated@@316)))
(let (($generated@@322  (=> (and (and ($generated@@239 $generated@@222) ($generated@@240 $generated@@222)) (and (= 0 $generated@@241) (= (ControlFlow 0 79) 78))) $generated@@321)))
$generated@@322))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))
))
(check-sat)
(pop 1)
; Valid
(get-info :rlimit)
(reset)
(set-option :rlimit 0)
; did a full reset
(reset)
(set-option :print-success false)
(set-info :smt-lib-version 2.6)
(set-option :auto_config false)
(set-option :type_check true)
(set-option :smt.case_split 3)
(set-option :smt.qi.eager_threshold 100)
(set-option :smt.delay_units true)
(set-option :smt.arith.solver 2)
(set-option :smt.mbqi false)
(set-option :model.compact false)
(set-option :model.v2 true)
(set-option :pp.bv_literals false)
; done setting options


(set-info :category "industrial")
(declare-sort |T@U| 0)
(declare-sort |T@T| 0)
(declare-fun real_pow (Real Real) Real)
(declare-fun UOrdering2 (|T@U| |T@U|) Bool)
(declare-fun UOrdering3 (|T@T| |T@U| |T@U|) Bool)
(declare-fun tickleBool (Bool) Bool)
(assert (and (tickleBool true) (tickleBool false)))
(declare-fun $generated (T@U) Int)
(declare-fun $generated@@0 (T@U) Bool)
(declare-fun $generated@@1 (T@T) Int)
(declare-fun $generated@@2 () T@T)
(declare-fun $generated@@3 () T@T)
(declare-fun $generated@@4 () T@T)
(declare-fun $generated@@5 () T@T)
(declare-fun $generated@@6 () T@T)
(declare-fun $generated@@7 () T@T)
(declare-fun $generated@@8 (Int) T@U)
(declare-fun type (T@U) T@T)
(declare-fun $generated@@9 (Real) T@U)
(declare-fun $generated@@10 (T@U) Real)
(declare-fun $generated@@11 (Bool) T@U)
(declare-fun $generated@@12 (RoundingMode) T@U)
(declare-fun $generated@@13 (T@U) RoundingMode)
(declare-fun $generated@@14 (String) T@U)
(declare-fun $generated@@15 (T@U) String)
(declare-fun $generated@@16 ((RegEx String)) T@U)
(declare-fun $generated@@17 (T@U) (RegEx String))
(declare-fun $generated@@44 (T@U T@U) Bool)
(declare-fun $generated@@45 (T@T T@T) T@T)
(declare-fun $generated@@46 () T@T)
(declare-fun $generated@@47 () T@T)
(declare-fun $generated@@48 (T@U T@U) T@U)
(declare-fun $generated@@49 (T@U T@U) T@U)
(declare-fun $generated@@50 () T@U)
(declare-fun $generated@@51 (T@T) T@T)
(declare-fun $generated@@52 (T@T) T@T)
(declare-fun $generated@@53 (T@U T@U T@U) T@U)
(declare-fun $generated@@54 (T@T) T@T)
(declare-fun $generated@@55 (T@T) T@T)
(declare-fun $generated@@56 (T@U T@U T@U) T@U)
(declare-fun $generated@@106 (T@U T@U T@U) T@U)
(declare-fun $generated@@107 (T@U T@U T@U Bool) T@U)
(declare-fun $generated@@108 (T@T T@T) T@T)
(declare-fun $generated@@109 (T@T) T@T)
(declare-fun $generated@@110 (T@T) T@T)
(declare-fun $generated@@111 (T@U T@U T@U T@U) T@U)
(declare-fun $generated@@162 (Int) Int)
(declare-fun $generated@@164 (T@U) T@U)
(declare-fun $generated@@171 (T@U) T@U)
(declare-fun $generated@@172 (T@T T@U) T@U)
(declare-fun $generated@@173 () T@T)
(assert  (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (= ($generated@@1 $generated@@2) 0) (= ($generated@@1 $generated@@3) 1)) (= ($generated@@1 $generated@@4) 2)) (= ($generated@@1 $generated@@5) 3)) (= ($generated@@1 $generated@@6) 4)) (= ($generated@@1 $generated@@7) 5)) (forall (($generated@@18 Int) ) (! (= ($generated ($generated@@8 $generated@@18)) $generated@@18)
 :pattern ( ($generated@@8 $generated@@18))
))) (forall (($generated@@19 T@U) ) (!  (=> (= (type $generated@@19) $generated@@2) (= ($generated@@8 ($generated $generated@@19)) $generated@@19))
 :pattern ( ($generated $generated@@19))
))) (forall (($generated@@20 Int) ) (! (= (type ($generated@@8 $generated@@20)) $generated@@2)
 :pattern ( ($generated@@8 $generated@@20))
))) (forall (($generated@@21 Real) ) (! (= ($generated@@10 ($generated@@9 $generated@@21)) $generated@@21)
 :pattern ( ($generated@@9 $generated@@21))
))) (forall (($generated@@22 T@U) ) (!  (=> (= (type $generated@@22) $generated@@3) (= ($generated@@9 ($generated@@10 $generated@@22)) $generated@@22))
 :pattern ( ($generated@@10 $generated@@22))
))) (forall (($generated@@23 Real) ) (! (= (type ($generated@@9 $generated@@23)) $generated@@3)
 :pattern ( ($generated@@9 $generated@@23))
))) (forall (($generated@@24 Bool) ) (! (= ($generated@@0 ($generated@@11 $generated@@24)) $generated@@24)
 :pattern ( ($generated@@11 $generated@@24))
))) (forall (($generated@@25 T@U) ) (!  (=> (= (type $generated@@25) $generated@@4) (= ($generated@@11 ($generated@@0 $generated@@25)) $generated@@25))
 :pattern ( ($generated@@0 $generated@@25))
))) (forall (($generated@@26 Bool) ) (! (= (type ($generated@@11 $generated@@26)) $generated@@4)
 :pattern ( ($generated@@11 $generated@@26))
))) (forall (($generated@@27 RoundingMode) ) (! (= ($generated@@13 ($generated@@12 $generated@@27)) $generated@@27)
 :pattern ( ($generated@@12 $generated@@27))
))) (forall (($generated@@28 T@U) ) (!  (=> (= (type $generated@@28) $generated@@5) (= ($generated@@12 ($generated@@13 $generated@@28)) $generated@@28))
 :pattern ( ($generated@@13 $generated@@28))
))) (forall (($generated@@29 RoundingMode) ) (! (= (type ($generated@@12 $generated@@29)) $generated@@5)
 :pattern ( ($generated@@12 $generated@@29))
))) (forall (($generated@@30 String) ) (! (= ($generated@@15 ($generated@@14 $generated@@30)) $generated@@30)
 :pattern ( ($generated@@14 $generated@@30))
))) (forall (($generated@@31 T@U) ) (!  (=> (= (type $generated@@31) $generated@@6) (= ($generated@@14 ($generated@@15 $generated@@31)) $generated@@31))
 :pattern ( ($generated@@15 $generated@@31))
))) (forall (($generated@@32 String) ) (! (= (type ($generated@@14 $generated@@32)) $generated@@6)
 :pattern ( ($generated@@14 $generated@@32))
))) (forall (($generated@@33 (RegEx String)) ) (! (= ($generated@@17 ($generated@@16 $generated@@33)) $generated@@33)
 :pattern ( ($generated@@16 $generated@@33))
))) (forall (($generated@@34 T@U) ) (!  (=> (= (type $generated@@34) $generated@@7) (= ($generated@@16 ($generated@@17 $generated@@34)) $generated@@34))
 :pattern ( ($generated@@17 $generated@@34))
))) (forall (($generated@@35 (RegEx String)) ) (! (= (type ($generated@@16 $generated@@35)) $generated@@7)
 :pattern ( ($generated@@16 $generated@@35))
))))
(assert (forall (($generated@@36 T@U) ) (! (UOrdering2 $generated@@36 $generated@@36)
 :no-pattern ($generated $generated@@36)
 :no-pattern ($generated@@0 $generated@@36)
)))
(assert (forall (($generated@@37 T@U) ($generated@@38 T@U) ($generated@@39 T@U) ) (! (let (($generated@@40 (type $generated@@37)))
 (=> (and (and (= (type $generated@@38) $generated@@40) (= (type $generated@@39) $generated@@40)) (and (UOrdering2 $generated@@37 $generated@@38) (UOrdering2 $generated@@38 $generated@@39))) (UOrdering2 $generated@@37 $generated@@39)))
 :pattern ( (UOrdering2 $generated@@37 $generated@@38) (UOrdering2 $generated@@38 $generated@@39))
)))
(assert (forall (($generated@@41 T@U) ($generated@@42 T@U) ) (! (let (($generated@@43 (type $generated@@41)))
 (=> (= (type $generated@@42) $generated@@43) (=> (and (UOrdering2 $generated@@41 $generated@@42) (UOrdering2 $generated@@42 $generated@@41)) (= $generated@@41 $generated@@42))))
 :pattern ( (UOrdering2 $generated@@41 $generated@@42) (UOrdering2 $generated@@42 $generated@@41))
)))
(assert  (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (forall (($generated@@57 T@T) ($generated@@58 T@T) ) (= ($generated@@1 ($generated@@45 $generated@@57 $generated@@58)) 6)) (forall (($generated@@59 T@T) ($generated@@60 T@T) ) (! (= ($generated@@51 ($generated@@45 $generated@@59 $generated@@60)) $generated@@59)
 :pattern ( ($generated@@45 $generated@@59 $generated@@60))
))) (forall (($generated@@61 T@T) ($generated@@62 T@T) ) (! (= ($generated@@52 ($generated@@45 $generated@@61 $generated@@62)) $generated@@62)
 :pattern ( ($generated@@45 $generated@@61 $generated@@62))
))) (forall (($generated@@63 T@U) ($generated@@64 T@U) ) (! (let (($generated@@65 ($generated@@52 (type $generated@@63))))
(= (type ($generated@@49 $generated@@63 $generated@@64)) $generated@@65))
 :pattern ( ($generated@@49 $generated@@63 $generated@@64))
))) (forall (($generated@@66 T@U) ($generated@@67 T@U) ($generated@@68 T@U) ) (! (let (($generated@@69 (type $generated@@68)))
(let (($generated@@70 (type $generated@@67)))
(= (type ($generated@@53 $generated@@66 $generated@@67 $generated@@68)) ($generated@@45 $generated@@70 $generated@@69))))
 :pattern ( ($generated@@53 $generated@@66 $generated@@67 $generated@@68))
))) (forall (($generated@@71 T@U) ($generated@@72 T@U) ($generated@@73 T@U) ) (! (let (($generated@@74 ($generated@@52 (type $generated@@71))))
 (=> (= (type $generated@@73) $generated@@74) (= ($generated@@49 ($generated@@53 $generated@@71 $generated@@72 $generated@@73) $generated@@72) $generated@@73)))
 :weight 0
))) (and (forall (($generated@@75 T@U) ($generated@@76 T@U) ($generated@@77 T@U) ($generated@@78 T@U) ) (!  (or (= $generated@@77 $generated@@78) (= ($generated@@49 ($generated@@53 $generated@@76 $generated@@77 $generated@@75) $generated@@78) ($generated@@49 $generated@@76 $generated@@78)))
 :weight 0
)) (forall (($generated@@79 T@U) ($generated@@80 T@U) ($generated@@81 T@U) ($generated@@82 T@U) ) (!  (or true (= ($generated@@49 ($generated@@53 $generated@@80 $generated@@81 $generated@@79) $generated@@82) ($generated@@49 $generated@@80 $generated@@82)))
 :weight 0
)))) (= ($generated@@1 $generated@@46) 7)) (forall (($generated@@83 T@T) ) (= ($generated@@1 ($generated@@54 $generated@@83)) 8))) (forall (($generated@@84 T@T) ) (! (= ($generated@@55 ($generated@@54 $generated@@84)) $generated@@84)
 :pattern ( ($generated@@54 $generated@@84))
))) (forall (($generated@@85 T@U) ($generated@@86 T@U) ) (! (let (($generated@@87 ($generated@@55 (type $generated@@86))))
(= (type ($generated@@48 $generated@@85 $generated@@86)) $generated@@87))
 :pattern ( ($generated@@48 $generated@@85 $generated@@86))
))) (= ($generated@@1 $generated@@47) 9)) (forall (($generated@@88 T@U) ($generated@@89 T@U) ($generated@@90 T@U) ) (! (= (type ($generated@@56 $generated@@88 $generated@@89 $generated@@90)) $generated@@47)
 :pattern ( ($generated@@56 $generated@@88 $generated@@89 $generated@@90))
))) (forall (($generated@@91 T@U) ($generated@@92 T@U) ($generated@@93 T@U) ) (! (let (($generated@@94 ($generated@@55 (type $generated@@92))))
 (=> (= (type $generated@@93) $generated@@94) (= ($generated@@48 ($generated@@56 $generated@@91 $generated@@92 $generated@@93) $generated@@92) $generated@@93)))
 :weight 0
))) (and (forall (($generated@@95 T@U) ($generated@@96 T@U) ($generated@@97 T@U) ($generated@@98 T@U) ) (!  (or (= $generated@@97 $generated@@98) (= ($generated@@48 ($generated@@56 $generated@@96 $generated@@97 $generated@@95) $generated@@98) ($generated@@48 $generated@@96 $generated@@98)))
 :weight 0
)) (forall (($generated@@99 T@U) ($generated@@100 T@U) ($generated@@101 T@U) ($generated@@102 T@U) ) (!  (or true (= ($generated@@48 ($generated@@56 $generated@@100 $generated@@101 $generated@@99) $generated@@102) ($generated@@48 $generated@@100 $generated@@102)))
 :weight 0
)))) (= (type $generated@@50) ($generated@@54 $generated@@4))))
(assert (forall (($generated@@103 T@U) ($generated@@104 T@U) ) (!  (=> (and (and (= (type $generated@@103) ($generated@@45 $generated@@46 $generated@@47)) (= (type $generated@@104) ($generated@@45 $generated@@46 $generated@@47))) ($generated@@44 $generated@@103 $generated@@104)) (forall (($generated@@105 T@U) ) (!  (=> (and (= (type $generated@@105) $generated@@46) ($generated@@0 ($generated@@48 ($generated@@49 $generated@@103 $generated@@105) $generated@@50))) ($generated@@0 ($generated@@48 ($generated@@49 $generated@@104 $generated@@105) $generated@@50)))
 :pattern ( ($generated@@48 ($generated@@49 $generated@@104 $generated@@105) $generated@@50))
)))
 :pattern ( ($generated@@44 $generated@@103 $generated@@104))
)))
(assert  (and (and (and (and (and (and (and (forall (($generated@@112 T@T) ($generated@@113 T@T) ) (= ($generated@@1 ($generated@@108 $generated@@112 $generated@@113)) 10)) (forall (($generated@@114 T@T) ($generated@@115 T@T) ) (! (= ($generated@@109 ($generated@@108 $generated@@114 $generated@@115)) $generated@@114)
 :pattern ( ($generated@@108 $generated@@114 $generated@@115))
))) (forall (($generated@@116 T@T) ($generated@@117 T@T) ) (! (= ($generated@@110 ($generated@@108 $generated@@116 $generated@@117)) $generated@@117)
 :pattern ( ($generated@@108 $generated@@116 $generated@@117))
))) (forall (($generated@@118 T@U) ($generated@@119 T@U) ($generated@@120 T@U) ) (! (let (($generated@@121 ($generated@@110 (type $generated@@118))))
(= (type ($generated@@106 $generated@@118 $generated@@119 $generated@@120)) $generated@@121))
 :pattern ( ($generated@@106 $generated@@118 $generated@@119 $generated@@120))
))) (forall (($generated@@122 T@U) ($generated@@123 T@U) ($generated@@124 T@U) ($generated@@125 T@U) ) (! (let (($generated@@126 (type $generated@@125)))
(let (($generated@@127 (type $generated@@123)))
(= (type ($generated@@111 $generated@@122 $generated@@123 $generated@@124 $generated@@125)) ($generated@@108 $generated@@127 $generated@@126))))
 :pattern ( ($generated@@111 $generated@@122 $generated@@123 $generated@@124 $generated@@125))
))) (forall (($generated@@128 T@U) ($generated@@129 T@U) ($generated@@130 T@U) ($generated@@131 T@U) ) (! (let (($generated@@132 ($generated@@110 (type $generated@@128))))
 (=> (= (type $generated@@131) $generated@@132) (= ($generated@@106 ($generated@@111 $generated@@128 $generated@@129 $generated@@130 $generated@@131) $generated@@129 $generated@@130) $generated@@131)))
 :weight 0
))) (and (and (forall (($generated@@133 T@U) ($generated@@134 T@U) ($generated@@135 T@U) ($generated@@136 T@U) ($generated@@137 T@U) ($generated@@138 T@U) ) (!  (or (= $generated@@135 $generated@@137) (= ($generated@@106 ($generated@@111 $generated@@134 $generated@@135 $generated@@136 $generated@@133) $generated@@137 $generated@@138) ($generated@@106 $generated@@134 $generated@@137 $generated@@138)))
 :weight 0
)) (forall (($generated@@139 T@U) ($generated@@140 T@U) ($generated@@141 T@U) ($generated@@142 T@U) ($generated@@143 T@U) ($generated@@144 T@U) ) (!  (or (= $generated@@142 $generated@@144) (= ($generated@@106 ($generated@@111 $generated@@140 $generated@@141 $generated@@142 $generated@@139) $generated@@143 $generated@@144) ($generated@@106 $generated@@140 $generated@@143 $generated@@144)))
 :weight 0
))) (forall (($generated@@145 T@U) ($generated@@146 T@U) ($generated@@147 T@U) ($generated@@148 T@U) ($generated@@149 T@U) ($generated@@150 T@U) ) (!  (or true (= ($generated@@106 ($generated@@111 $generated@@146 $generated@@147 $generated@@148 $generated@@145) $generated@@149 $generated@@150) ($generated@@106 $generated@@146 $generated@@149 $generated@@150)))
 :weight 0
)))) (forall (($generated@@151 T@U) ($generated@@152 T@U) ($generated@@153 T@U) ($generated@@154 Bool) ) (! (= (type ($generated@@107 $generated@@151 $generated@@152 $generated@@153 $generated@@154)) ($generated@@108 $generated@@46 $generated@@4))
 :pattern ( ($generated@@107 $generated@@151 $generated@@152 $generated@@153 $generated@@154))
))))
(assert (forall (($generated@@155 T@U) ($generated@@156 T@U) ($generated@@157 T@U) ($generated@@158 Bool) ($generated@@159 T@U) ($generated@@160 T@U) ) (! (let (($generated@@161 ($generated@@55 (type $generated@@160))))
 (=> (and (and (and (and (= (type $generated@@155) $generated@@46) (= (type $generated@@156) ($generated@@45 $generated@@46 $generated@@47))) (= (type $generated@@157) ($generated@@54 $generated@@4))) (= (type $generated@@159) $generated@@46)) (= (type $generated@@160) ($generated@@54 $generated@@161))) (= ($generated@@0 ($generated@@106 ($generated@@107 $generated@@155 $generated@@156 $generated@@157 $generated@@158) $generated@@159 $generated@@160))  (=> (and (not (= $generated@@159 $generated@@155)) ($generated@@0 ($generated@@48 ($generated@@49 $generated@@156 $generated@@159) $generated@@157))) $generated@@158))))
 :pattern ( ($generated@@106 ($generated@@107 $generated@@155 $generated@@156 $generated@@157 $generated@@158) $generated@@159 $generated@@160))
)))
(assert (forall (($generated@@163 Int) ) (! (= ($generated@@162 $generated@@163) $generated@@163)
 :pattern ( ($generated@@162 $generated@@163))
)))
(assert (forall (($generated@@165 T@U) ) (! (let (($generated@@166 (type $generated@@165)))
(= (type ($generated@@164 $generated@@165)) $generated@@166))
 :pattern ( ($generated@@164 $generated@@165))
)))
(assert (forall (($generated@@167 T@U) ) (! (= ($generated@@164 $generated@@167) $generated@@167)
 :pattern ( ($generated@@164 $generated@@167))
)))
(assert (forall (($generated@@168 T@U) ($generated@@169 T@U) ($generated@@170 T@U) ) (!  (=> (and (and (and (and (= (type $generated@@168) ($generated@@45 $generated@@46 $generated@@47)) (= (type $generated@@169) ($generated@@45 $generated@@46 $generated@@47))) (= (type $generated@@170) ($generated@@45 $generated@@46 $generated@@47))) (not (= $generated@@168 $generated@@170))) (and ($generated@@44 $generated@@168 $generated@@169) ($generated@@44 $generated@@169 $generated@@170))) ($generated@@44 $generated@@168 $generated@@170))
 :pattern ( ($generated@@44 $generated@@168 $generated@@169) ($generated@@44 $generated@@169 $generated@@170))
)))
(assert  (and (and (= ($generated@@1 $generated@@173) 11) (forall (($generated@@174 T@U) ) (! (= (type ($generated@@171 $generated@@174)) $generated@@173)
 :pattern ( ($generated@@171 $generated@@174))
))) (forall (($generated@@175 T@T) ($generated@@176 T@U) ) (! (= (type ($generated@@172 $generated@@175 $generated@@176)) $generated@@175)
 :pattern ( ($generated@@172 $generated@@175 $generated@@176))
))))
(assert (forall (($generated@@177 T@U) ) (! (let (($generated@@178 (type $generated@@177)))
(= ($generated@@172 $generated@@178 ($generated@@171 $generated@@177)) $generated@@177))
 :pattern ( ($generated@@171 $generated@@177))
)))
(assert (forall (($generated@@179 Int) ) (! (= ($generated@@171 ($generated@@8 ($generated@@162 $generated@@179))) ($generated@@164 ($generated@@171 ($generated@@8 $generated@@179))))
 :pattern ( ($generated@@171 ($generated@@8 ($generated@@162 $generated@@179))))
)))
(assert (forall (($generated@@180 T@U) ) (! (= ($generated@@171 ($generated@@164 $generated@@180)) ($generated@@164 ($generated@@171 $generated@@180)))
 :pattern ( ($generated@@171 ($generated@@164 $generated@@180)))
)))
(push 1)
(declare-fun ControlFlow (Int Int) Int)
(declare-fun $generated@@181 () Int)
(declare-fun $generated@@182 () Int)
(declare-fun $generated@@183 () Int)
(declare-fun $generated@@184 () Int)
(declare-fun $generated@@185 () Int)
(declare-fun $generated@@186 () Int)
(declare-fun $generated@@187 () Bool)
(declare-fun $generated@@188 () T@U)
(declare-fun $generated@@189 () T@U)
(declare-fun $generated@@190 () T@U)
(declare-fun $generated@@191 () Int)
(declare-fun $generated@@192 () Int)
(declare-fun $generated@@193 (T@U) Bool)
(declare-fun $generated@@194 (T@U) Bool)
(declare-fun $generated@@195 () Int)
(assert  (and (and (= (type $generated@@188) ($generated@@45 $generated@@46 $generated@@47)) (= (type $generated@@189) $generated@@46)) (= (type $generated@@190) ($generated@@108 $generated@@46 $generated@@4))))
(set-option :timeout 0)
(set-option :rlimit 0)
(assert (not
 (=> (= (ControlFlow 0 0) 20) (let (($generated@@196  (=> (= (ControlFlow 0 10) (- 0 9)) (or (= $generated@@181 ($generated@@162 7)) (<= $generated@@182 $generated@@181)))))
(let (($generated@@197  (=> (and (= $generated@@181 ($generated@@162 7)) (= (ControlFlow 0 12) 10)) $generated@@196)))
(let (($generated@@198  (=> (and (not (= $generated@@181 ($generated@@162 7))) (= (ControlFlow 0 11) 10)) $generated@@196)))
(let (($generated@@199  (=> (= $generated@@181 ($generated@@162 7)) (and (=> (= (ControlFlow 0 14) 11) $generated@@198) (=> (= (ControlFlow 0 14) 12) $generated@@197)))))
(let (($generated@@200  (=> (<= $generated@@182 $generated@@181) (and (=> (= (ControlFlow 0 13) 11) $generated@@198) (=> (= (ControlFlow 0 13) 12) $generated@@197)))))
(let (($generated@@201  (and (=> (= (ControlFlow 0 4) (- 0 5)) (or (<= 0 $generated@@183) (= (- $generated@@182 $generated@@184) $generated@@183))) (=> (or (<= 0 $generated@@183) (= (- $generated@@182 $generated@@184) $generated@@183)) (=> (= (ControlFlow 0 4) (- 0 3)) (< (- $generated@@182 $generated@@184) $generated@@183))))))
(let (($generated@@202  (=> (and (and (not (= $generated@@181 $generated@@185)) (= $generated@@186 (+ $generated@@181 1))) (and (= $generated@@184 $generated@@186) (= (ControlFlow 0 7) 4))) $generated@@201)))
(let (($generated@@203  (=> (= $generated@@181 $generated@@185) (=> (and (= $generated@@184 $generated@@181) (= (ControlFlow 0 6) 4)) $generated@@201))))
(let (($generated@@204  (=> (not (= $generated@@181 ($generated@@162 7))) (and (=> (= (ControlFlow 0 8) 6) $generated@@203) (=> (= (ControlFlow 0 8) 7) $generated@@202)))))
(let (($generated@@205  (=> (and (< $generated@@181 $generated@@182) (= $generated@@183 (- $generated@@182 $generated@@181))) (and (=> (= (ControlFlow 0 15) 14) $generated@@199) (=> (= (ControlFlow 0 15) 8) $generated@@204)))))
(let (($generated@@206  (=> $generated@@187 (and (=> (= (ControlFlow 0 16) 13) $generated@@200) (=> (= (ControlFlow 0 16) 15) $generated@@205)))))
(let (($generated@@207 true))
(let (($generated@@208  (and (=> (= (ControlFlow 0 17) 2) $generated@@207) (=> (= (ControlFlow 0 17) 16) $generated@@206))))
(let (($generated@@209 true))
(let (($generated@@210  (=> (and (and (and (not false) (<= 0 $generated@@181)) (forall (($generated@@211 T@U) ) (!  (=> (= (type $generated@@211) $generated@@46) (=> (and (not (= $generated@@211 $generated@@189)) ($generated@@0 ($generated@@48 ($generated@@49 $generated@@188 $generated@@211) $generated@@50))) (= ($generated@@49 $generated@@188 $generated@@211) ($generated@@49 $generated@@188 $generated@@211))))
 :pattern ( ($generated@@49 $generated@@188 $generated@@211))
))) (and (and ($generated@@44 $generated@@188 $generated@@188) (forall (($generated@@212 T@U) ($generated@@213 T@U) ) (! (let (($generated@@214 ($generated@@55 (type $generated@@213))))
 (=> (and (and (= (type $generated@@212) $generated@@46) (= (type $generated@@213) ($generated@@54 $generated@@214))) (and (not (= $generated@@212 $generated@@189)) ($generated@@0 ($generated@@48 ($generated@@49 $generated@@188 $generated@@212) $generated@@50)))) (or (= ($generated@@48 ($generated@@49 $generated@@188 $generated@@212) $generated@@213) ($generated@@48 ($generated@@49 $generated@@188 $generated@@212) $generated@@213)) ($generated@@0 ($generated@@106 $generated@@190 $generated@@212 $generated@@213)))))
 :pattern ( ($generated@@48 ($generated@@49 $generated@@188 $generated@@212) $generated@@213))
))) (and (<= (- $generated@@182 $generated@@181) $generated@@191) (=> (= (- $generated@@182 $generated@@181) $generated@@191) true)))) (and (=> (= (ControlFlow 0 18) 1) $generated@@209) (=> (= (ControlFlow 0 18) 17) $generated@@208)))))
(let (($generated@@215  (=> (and (and (= $generated@@190 ($generated@@107 $generated@@189 $generated@@188 $generated@@50 false)) (= $generated@@192 ($generated@@162 0))) (and (= $generated@@191 (- $generated@@182 $generated@@192)) (= (ControlFlow 0 19) 18))) $generated@@210)))
(let (($generated@@216  (=> (and ($generated@@193 $generated@@188) ($generated@@194 $generated@@188)) (=> (and (and (<= ($generated@@162 0) $generated@@182) (<= ($generated@@162 0) $generated@@185)) (and (= 1 $generated@@195) (= (ControlFlow 0 20) 19))) $generated@@215))))
$generated@@216))))))))))))))))))
))
(check-sat)
(get-info :reason-unknown)
(assert (not (= (ControlFlow 0 4) (- 3))))
(check-sat)
(pop 1)
; Invalid
(get-info :rlimit)
(reset)
(set-option :rlimit 0)
; did a full reset
(reset)
(set-option :print-success false)
(set-info :smt-lib-version 2.6)
(set-option :auto_config false)
(set-option :type_check true)
(set-option :smt.case_split 3)
(set-option :smt.qi.eager_threshold 100)
(set-option :smt.delay_units true)
(set-option :smt.arith.solver 2)
(set-option :smt.mbqi false)
(set-option :model.compact false)
(set-option :model.v2 true)
(set-option :pp.bv_literals false)
; done setting options


(set-info :category "industrial")
(declare-sort |T@U| 0)
(declare-sort |T@T| 0)
(declare-fun real_pow (Real Real) Real)
(declare-fun UOrdering2 (|T@U| |T@U|) Bool)
(declare-fun UOrdering3 (|T@T| |T@U| |T@U|) Bool)
(declare-fun tickleBool (Bool) Bool)
(assert (and (tickleBool true) (tickleBool false)))
(declare-fun $generated (T@U) Int)
(declare-fun $generated@@0 (T@U) Bool)
(declare-fun $generated@@1 (T@T) Int)
(declare-fun $generated@@2 () T@T)
(declare-fun $generated@@3 () T@T)
(declare-fun $generated@@4 () T@T)
(declare-fun $generated@@5 () T@T)
(declare-fun $generated@@6 () T@T)
(declare-fun $generated@@7 () T@T)
(declare-fun $generated@@8 (Int) T@U)
(declare-fun type (T@U) T@T)
(declare-fun $generated@@9 (Real) T@U)
(declare-fun $generated@@10 (T@U) Real)
(declare-fun $generated@@11 (Bool) T@U)
(declare-fun $generated@@12 (RoundingMode) T@U)
(declare-fun $generated@@13 (T@U) RoundingMode)
(declare-fun $generated@@14 (String) T@U)
(declare-fun $generated@@15 (T@U) String)
(declare-fun $generated@@16 ((RegEx String)) T@U)
(declare-fun $generated@@17 (T@U) (RegEx String))
(declare-fun $generated@@44 (T@U T@U) Bool)
(declare-fun $generated@@45 (T@T T@T) T@T)
(declare-fun $generated@@46 () T@T)
(declare-fun $generated@@47 () T@T)
(declare-fun $generated@@48 (T@U T@U) T@U)
(declare-fun $generated@@49 (T@U T@U) T@U)
(declare-fun $generated@@50 () T@U)
(declare-fun $generated@@51 (T@T) T@T)
(declare-fun $generated@@52 (T@T) T@T)
(declare-fun $generated@@53 (T@U T@U T@U) T@U)
(declare-fun $generated@@54 (T@T) T@T)
(declare-fun $generated@@55 (T@T) T@T)
(declare-fun $generated@@56 (T@U T@U T@U) T@U)
(declare-fun $generated@@106 (T@U T@U T@U) T@U)
(declare-fun $generated@@107 (T@U T@U T@U Bool) T@U)
(declare-fun $generated@@108 (T@T T@T) T@T)
(declare-fun $generated@@109 (T@T) T@T)
(declare-fun $generated@@110 (T@T) T@T)
(declare-fun $generated@@111 (T@U T@U T@U T@U) T@U)
(declare-fun $generated@@162 (Int) Int)
(declare-fun $generated@@164 (T@U) T@U)
(declare-fun $generated@@171 (T@U) T@U)
(declare-fun $generated@@172 (T@T T@U) T@U)
(declare-fun $generated@@173 () T@T)
(assert  (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (= ($generated@@1 $generated@@2) 0) (= ($generated@@1 $generated@@3) 1)) (= ($generated@@1 $generated@@4) 2)) (= ($generated@@1 $generated@@5) 3)) (= ($generated@@1 $generated@@6) 4)) (= ($generated@@1 $generated@@7) 5)) (forall (($generated@@18 Int) ) (! (= ($generated ($generated@@8 $generated@@18)) $generated@@18)
 :pattern ( ($generated@@8 $generated@@18))
))) (forall (($generated@@19 T@U) ) (!  (=> (= (type $generated@@19) $generated@@2) (= ($generated@@8 ($generated $generated@@19)) $generated@@19))
 :pattern ( ($generated $generated@@19))
))) (forall (($generated@@20 Int) ) (! (= (type ($generated@@8 $generated@@20)) $generated@@2)
 :pattern ( ($generated@@8 $generated@@20))
))) (forall (($generated@@21 Real) ) (! (= ($generated@@10 ($generated@@9 $generated@@21)) $generated@@21)
 :pattern ( ($generated@@9 $generated@@21))
))) (forall (($generated@@22 T@U) ) (!  (=> (= (type $generated@@22) $generated@@3) (= ($generated@@9 ($generated@@10 $generated@@22)) $generated@@22))
 :pattern ( ($generated@@10 $generated@@22))
))) (forall (($generated@@23 Real) ) (! (= (type ($generated@@9 $generated@@23)) $generated@@3)
 :pattern ( ($generated@@9 $generated@@23))
))) (forall (($generated@@24 Bool) ) (! (= ($generated@@0 ($generated@@11 $generated@@24)) $generated@@24)
 :pattern ( ($generated@@11 $generated@@24))
))) (forall (($generated@@25 T@U) ) (!  (=> (= (type $generated@@25) $generated@@4) (= ($generated@@11 ($generated@@0 $generated@@25)) $generated@@25))
 :pattern ( ($generated@@0 $generated@@25))
))) (forall (($generated@@26 Bool) ) (! (= (type ($generated@@11 $generated@@26)) $generated@@4)
 :pattern ( ($generated@@11 $generated@@26))
))) (forall (($generated@@27 RoundingMode) ) (! (= ($generated@@13 ($generated@@12 $generated@@27)) $generated@@27)
 :pattern ( ($generated@@12 $generated@@27))
))) (forall (($generated@@28 T@U) ) (!  (=> (= (type $generated@@28) $generated@@5) (= ($generated@@12 ($generated@@13 $generated@@28)) $generated@@28))
 :pattern ( ($generated@@13 $generated@@28))
))) (forall (($generated@@29 RoundingMode) ) (! (= (type ($generated@@12 $generated@@29)) $generated@@5)
 :pattern ( ($generated@@12 $generated@@29))
))) (forall (($generated@@30 String) ) (! (= ($generated@@15 ($generated@@14 $generated@@30)) $generated@@30)
 :pattern ( ($generated@@14 $generated@@30))
))) (forall (($generated@@31 T@U) ) (!  (=> (= (type $generated@@31) $generated@@6) (= ($generated@@14 ($generated@@15 $generated@@31)) $generated@@31))
 :pattern ( ($generated@@15 $generated@@31))
))) (forall (($generated@@32 String) ) (! (= (type ($generated@@14 $generated@@32)) $generated@@6)
 :pattern ( ($generated@@14 $generated@@32))
))) (forall (($generated@@33 (RegEx String)) ) (! (= ($generated@@17 ($generated@@16 $generated@@33)) $generated@@33)
 :pattern ( ($generated@@16 $generated@@33))
))) (forall (($generated@@34 T@U) ) (!  (=> (= (type $generated@@34) $generated@@7) (= ($generated@@16 ($generated@@17 $generated@@34)) $generated@@34))
 :pattern ( ($generated@@17 $generated@@34))
))) (forall (($generated@@35 (RegEx String)) ) (! (= (type ($generated@@16 $generated@@35)) $generated@@7)
 :pattern ( ($generated@@16 $generated@@35))
))))
(assert (forall (($generated@@36 T@U) ) (! (UOrdering2 $generated@@36 $generated@@36)
 :no-pattern ($generated $generated@@36)
 :no-pattern ($generated@@0 $generated@@36)
)))
(assert (forall (($generated@@37 T@U) ($generated@@38 T@U) ($generated@@39 T@U) ) (! (let (($generated@@40 (type $generated@@37)))
 (=> (and (and (= (type $generated@@38) $generated@@40) (= (type $generated@@39) $generated@@40)) (and (UOrdering2 $generated@@37 $generated@@38) (UOrdering2 $generated@@38 $generated@@39))) (UOrdering2 $generated@@37 $generated@@39)))
 :pattern ( (UOrdering2 $generated@@37 $generated@@38) (UOrdering2 $generated@@38 $generated@@39))
)))
(assert (forall (($generated@@41 T@U) ($generated@@42 T@U) ) (! (let (($generated@@43 (type $generated@@41)))
 (=> (= (type $generated@@42) $generated@@43) (=> (and (UOrdering2 $generated@@41 $generated@@42) (UOrdering2 $generated@@42 $generated@@41)) (= $generated@@41 $generated@@42))))
 :pattern ( (UOrdering2 $generated@@41 $generated@@42) (UOrdering2 $generated@@42 $generated@@41))
)))
(assert  (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (forall (($generated@@57 T@T) ($generated@@58 T@T) ) (= ($generated@@1 ($generated@@45 $generated@@57 $generated@@58)) 6)) (forall (($generated@@59 T@T) ($generated@@60 T@T) ) (! (= ($generated@@51 ($generated@@45 $generated@@59 $generated@@60)) $generated@@59)
 :pattern ( ($generated@@45 $generated@@59 $generated@@60))
))) (forall (($generated@@61 T@T) ($generated@@62 T@T) ) (! (= ($generated@@52 ($generated@@45 $generated@@61 $generated@@62)) $generated@@62)
 :pattern ( ($generated@@45 $generated@@61 $generated@@62))
))) (forall (($generated@@63 T@U) ($generated@@64 T@U) ) (! (let (($generated@@65 ($generated@@52 (type $generated@@63))))
(= (type ($generated@@49 $generated@@63 $generated@@64)) $generated@@65))
 :pattern ( ($generated@@49 $generated@@63 $generated@@64))
))) (forall (($generated@@66 T@U) ($generated@@67 T@U) ($generated@@68 T@U) ) (! (let (($generated@@69 (type $generated@@68)))
(let (($generated@@70 (type $generated@@67)))
(= (type ($generated@@53 $generated@@66 $generated@@67 $generated@@68)) ($generated@@45 $generated@@70 $generated@@69))))
 :pattern ( ($generated@@53 $generated@@66 $generated@@67 $generated@@68))
))) (forall (($generated@@71 T@U) ($generated@@72 T@U) ($generated@@73 T@U) ) (! (let (($generated@@74 ($generated@@52 (type $generated@@71))))
 (=> (= (type $generated@@73) $generated@@74) (= ($generated@@49 ($generated@@53 $generated@@71 $generated@@72 $generated@@73) $generated@@72) $generated@@73)))
 :weight 0
))) (and (forall (($generated@@75 T@U) ($generated@@76 T@U) ($generated@@77 T@U) ($generated@@78 T@U) ) (!  (or (= $generated@@77 $generated@@78) (= ($generated@@49 ($generated@@53 $generated@@76 $generated@@77 $generated@@75) $generated@@78) ($generated@@49 $generated@@76 $generated@@78)))
 :weight 0
)) (forall (($generated@@79 T@U) ($generated@@80 T@U) ($generated@@81 T@U) ($generated@@82 T@U) ) (!  (or true (= ($generated@@49 ($generated@@53 $generated@@80 $generated@@81 $generated@@79) $generated@@82) ($generated@@49 $generated@@80 $generated@@82)))
 :weight 0
)))) (= ($generated@@1 $generated@@46) 7)) (forall (($generated@@83 T@T) ) (= ($generated@@1 ($generated@@54 $generated@@83)) 8))) (forall (($generated@@84 T@T) ) (! (= ($generated@@55 ($generated@@54 $generated@@84)) $generated@@84)
 :pattern ( ($generated@@54 $generated@@84))
))) (forall (($generated@@85 T@U) ($generated@@86 T@U) ) (! (let (($generated@@87 ($generated@@55 (type $generated@@86))))
(= (type ($generated@@48 $generated@@85 $generated@@86)) $generated@@87))
 :pattern ( ($generated@@48 $generated@@85 $generated@@86))
))) (= ($generated@@1 $generated@@47) 9)) (forall (($generated@@88 T@U) ($generated@@89 T@U) ($generated@@90 T@U) ) (! (= (type ($generated@@56 $generated@@88 $generated@@89 $generated@@90)) $generated@@47)
 :pattern ( ($generated@@56 $generated@@88 $generated@@89 $generated@@90))
))) (forall (($generated@@91 T@U) ($generated@@92 T@U) ($generated@@93 T@U) ) (! (let (($generated@@94 ($generated@@55 (type $generated@@92))))
 (=> (= (type $generated@@93) $generated@@94) (= ($generated@@48 ($generated@@56 $generated@@91 $generated@@92 $generated@@93) $generated@@92) $generated@@93)))
 :weight 0
))) (and (forall (($generated@@95 T@U) ($generated@@96 T@U) ($generated@@97 T@U) ($generated@@98 T@U) ) (!  (or (= $generated@@97 $generated@@98) (= ($generated@@48 ($generated@@56 $generated@@96 $generated@@97 $generated@@95) $generated@@98) ($generated@@48 $generated@@96 $generated@@98)))
 :weight 0
)) (forall (($generated@@99 T@U) ($generated@@100 T@U) ($generated@@101 T@U) ($generated@@102 T@U) ) (!  (or true (= ($generated@@48 ($generated@@56 $generated@@100 $generated@@101 $generated@@99) $generated@@102) ($generated@@48 $generated@@100 $generated@@102)))
 :weight 0
)))) (= (type $generated@@50) ($generated@@54 $generated@@4))))
(assert (forall (($generated@@103 T@U) ($generated@@104 T@U) ) (!  (=> (and (and (= (type $generated@@103) ($generated@@45 $generated@@46 $generated@@47)) (= (type $generated@@104) ($generated@@45 $generated@@46 $generated@@47))) ($generated@@44 $generated@@103 $generated@@104)) (forall (($generated@@105 T@U) ) (!  (=> (and (= (type $generated@@105) $generated@@46) ($generated@@0 ($generated@@48 ($generated@@49 $generated@@103 $generated@@105) $generated@@50))) ($generated@@0 ($generated@@48 ($generated@@49 $generated@@104 $generated@@105) $generated@@50)))
 :pattern ( ($generated@@48 ($generated@@49 $generated@@104 $generated@@105) $generated@@50))
)))
 :pattern ( ($generated@@44 $generated@@103 $generated@@104))
)))
(assert  (and (and (and (and (and (and (and (forall (($generated@@112 T@T) ($generated@@113 T@T) ) (= ($generated@@1 ($generated@@108 $generated@@112 $generated@@113)) 10)) (forall (($generated@@114 T@T) ($generated@@115 T@T) ) (! (= ($generated@@109 ($generated@@108 $generated@@114 $generated@@115)) $generated@@114)
 :pattern ( ($generated@@108 $generated@@114 $generated@@115))
))) (forall (($generated@@116 T@T) ($generated@@117 T@T) ) (! (= ($generated@@110 ($generated@@108 $generated@@116 $generated@@117)) $generated@@117)
 :pattern ( ($generated@@108 $generated@@116 $generated@@117))
))) (forall (($generated@@118 T@U) ($generated@@119 T@U) ($generated@@120 T@U) ) (! (let (($generated@@121 ($generated@@110 (type $generated@@118))))
(= (type ($generated@@106 $generated@@118 $generated@@119 $generated@@120)) $generated@@121))
 :pattern ( ($generated@@106 $generated@@118 $generated@@119 $generated@@120))
))) (forall (($generated@@122 T@U) ($generated@@123 T@U) ($generated@@124 T@U) ($generated@@125 T@U) ) (! (let (($generated@@126 (type $generated@@125)))
(let (($generated@@127 (type $generated@@123)))
(= (type ($generated@@111 $generated@@122 $generated@@123 $generated@@124 $generated@@125)) ($generated@@108 $generated@@127 $generated@@126))))
 :pattern ( ($generated@@111 $generated@@122 $generated@@123 $generated@@124 $generated@@125))
))) (forall (($generated@@128 T@U) ($generated@@129 T@U) ($generated@@130 T@U) ($generated@@131 T@U) ) (! (let (($generated@@132 ($generated@@110 (type $generated@@128))))
 (=> (= (type $generated@@131) $generated@@132) (= ($generated@@106 ($generated@@111 $generated@@128 $generated@@129 $generated@@130 $generated@@131) $generated@@129 $generated@@130) $generated@@131)))
 :weight 0
))) (and (and (forall (($generated@@133 T@U) ($generated@@134 T@U) ($generated@@135 T@U) ($generated@@136 T@U) ($generated@@137 T@U) ($generated@@138 T@U) ) (!  (or (= $generated@@135 $generated@@137) (= ($generated@@106 ($generated@@111 $generated@@134 $generated@@135 $generated@@136 $generated@@133) $generated@@137 $generated@@138) ($generated@@106 $generated@@134 $generated@@137 $generated@@138)))
 :weight 0
)) (forall (($generated@@139 T@U) ($generated@@140 T@U) ($generated@@141 T@U) ($generated@@142 T@U) ($generated@@143 T@U) ($generated@@144 T@U) ) (!  (or (= $generated@@142 $generated@@144) (= ($generated@@106 ($generated@@111 $generated@@140 $generated@@141 $generated@@142 $generated@@139) $generated@@143 $generated@@144) ($generated@@106 $generated@@140 $generated@@143 $generated@@144)))
 :weight 0
))) (forall (($generated@@145 T@U) ($generated@@146 T@U) ($generated@@147 T@U) ($generated@@148 T@U) ($generated@@149 T@U) ($generated@@150 T@U) ) (!  (or true (= ($generated@@106 ($generated@@111 $generated@@146 $generated@@147 $generated@@148 $generated@@145) $generated@@149 $generated@@150) ($generated@@106 $generated@@146 $generated@@149 $generated@@150)))
 :weight 0
)))) (forall (($generated@@151 T@U) ($generated@@152 T@U) ($generated@@153 T@U) ($generated@@154 Bool) ) (! (= (type ($generated@@107 $generated@@151 $generated@@152 $generated@@153 $generated@@154)) ($generated@@108 $generated@@46 $generated@@4))
 :pattern ( ($generated@@107 $generated@@151 $generated@@152 $generated@@153 $generated@@154))
))))
(assert (forall (($generated@@155 T@U) ($generated@@156 T@U) ($generated@@157 T@U) ($generated@@158 Bool) ($generated@@159 T@U) ($generated@@160 T@U) ) (! (let (($generated@@161 ($generated@@55 (type $generated@@160))))
 (=> (and (and (and (and (= (type $generated@@155) $generated@@46) (= (type $generated@@156) ($generated@@45 $generated@@46 $generated@@47))) (= (type $generated@@157) ($generated@@54 $generated@@4))) (= (type $generated@@159) $generated@@46)) (= (type $generated@@160) ($generated@@54 $generated@@161))) (= ($generated@@0 ($generated@@106 ($generated@@107 $generated@@155 $generated@@156 $generated@@157 $generated@@158) $generated@@159 $generated@@160))  (=> (and (not (= $generated@@159 $generated@@155)) ($generated@@0 ($generated@@48 ($generated@@49 $generated@@156 $generated@@159) $generated@@157))) $generated@@158))))
 :pattern ( ($generated@@106 ($generated@@107 $generated@@155 $generated@@156 $generated@@157 $generated@@158) $generated@@159 $generated@@160))
)))
(assert (forall (($generated@@163 Int) ) (! (= ($generated@@162 $generated@@163) $generated@@163)
 :pattern ( ($generated@@162 $generated@@163))
)))
(assert (forall (($generated@@165 T@U) ) (! (let (($generated@@166 (type $generated@@165)))
(= (type ($generated@@164 $generated@@165)) $generated@@166))
 :pattern ( ($generated@@164 $generated@@165))
)))
(assert (forall (($generated@@167 T@U) ) (! (= ($generated@@164 $generated@@167) $generated@@167)
 :pattern ( ($generated@@164 $generated@@167))
)))
(assert (forall (($generated@@168 T@U) ($generated@@169 T@U) ($generated@@170 T@U) ) (!  (=> (and (and (and (and (= (type $generated@@168) ($generated@@45 $generated@@46 $generated@@47)) (= (type $generated@@169) ($generated@@45 $generated@@46 $generated@@47))) (= (type $generated@@170) ($generated@@45 $generated@@46 $generated@@47))) (not (= $generated@@168 $generated@@170))) (and ($generated@@44 $generated@@168 $generated@@169) ($generated@@44 $generated@@169 $generated@@170))) ($generated@@44 $generated@@168 $generated@@170))
 :pattern ( ($generated@@44 $generated@@168 $generated@@169) ($generated@@44 $generated@@169 $generated@@170))
)))
(assert  (and (and (= ($generated@@1 $generated@@173) 11) (forall (($generated@@174 T@U) ) (! (= (type ($generated@@171 $generated@@174)) $generated@@173)
 :pattern ( ($generated@@171 $generated@@174))
))) (forall (($generated@@175 T@T) ($generated@@176 T@U) ) (! (= (type ($generated@@172 $generated@@175 $generated@@176)) $generated@@175)
 :pattern ( ($generated@@172 $generated@@175 $generated@@176))
))))
(assert (forall (($generated@@177 T@U) ) (! (let (($generated@@178 (type $generated@@177)))
(= ($generated@@172 $generated@@178 ($generated@@171 $generated@@177)) $generated@@177))
 :pattern ( ($generated@@171 $generated@@177))
)))
(assert (forall (($generated@@179 Int) ) (! (= ($generated@@171 ($generated@@8 ($generated@@162 $generated@@179))) ($generated@@164 ($generated@@171 ($generated@@8 $generated@@179))))
 :pattern ( ($generated@@171 ($generated@@8 ($generated@@162 $generated@@179))))
)))
(assert (forall (($generated@@180 T@U) ) (! (= ($generated@@171 ($generated@@164 $generated@@180)) ($generated@@164 ($generated@@171 $generated@@180)))
 :pattern ( ($generated@@171 ($generated@@164 $generated@@180)))
)))
(push 1)
(declare-fun ControlFlow (Int Int) Int)
(declare-fun $generated@@181 () Int)
(declare-fun $generated@@182 () Int)
(declare-fun $generated@@183 () Bool)
(declare-fun $generated@@184 () Int)
(declare-fun $generated@@185 () Int)
(declare-fun $generated@@186 () Int)
(declare-fun $generated@@187 () Int)
(declare-fun $generated@@188 () Int)
(declare-fun $generated@@189 () T@U)
(declare-fun $generated@@190 () T@U)
(declare-fun $generated@@191 () T@U)
(declare-fun $generated@@192 () Int)
(declare-fun $generated@@193 () Int)
(declare-fun $generated@@194 (T@U) Bool)
(declare-fun $generated@@195 (T@U) Bool)
(declare-fun $generated@@196 () Int)
(assert  (and (and (= (type $generated@@189) ($generated@@45 $generated@@46 $generated@@47)) (= (type $generated@@190) $generated@@46)) (= (type $generated@@191) ($generated@@108 $generated@@46 $generated@@4))))
(set-option :timeout 0)
(set-option :rlimit 0)
(assert (not
 (=> (= (ControlFlow 0 0) 29) (let (($generated@@197 true))
(let (($generated@@198  (=> (and (or (and (<= $generated@@181 ($generated@@162 7)) (<= $generated@@181 $generated@@182)) (= $generated@@181 ($generated@@162 7))) (= (ControlFlow 0 19) 17)) $generated@@197)))
(let (($generated@@199  (=> (and (not (or (and (<= $generated@@181 ($generated@@162 7)) (<= $generated@@181 $generated@@182)) (= $generated@@181 ($generated@@162 7)))) (= (ControlFlow 0 18) 17)) $generated@@197)))
(let (($generated@@200  (=> (and (<= $generated@@181 ($generated@@162 7)) (<= $generated@@181 $generated@@182)) (and (=> (= (ControlFlow 0 21) 18) $generated@@199) (=> (= (ControlFlow 0 21) 19) $generated@@198)))))
(let (($generated@@201  (=> (not (and (<= $generated@@181 ($generated@@162 7)) (<= $generated@@181 $generated@@182))) (and (=> (= (ControlFlow 0 20) 18) $generated@@199) (=> (= (ControlFlow 0 20) 19) $generated@@198)))))
(let (($generated@@202  (=> (< ($generated@@162 7) $generated@@181) (and (=> (= (ControlFlow 0 23) 20) $generated@@201) (=> (= (ControlFlow 0 23) 21) $generated@@200)))))
(let (($generated@@203  (=> (<= $generated@@181 ($generated@@162 7)) (and (=> (= (ControlFlow 0 22) 20) $generated@@201) (=> (= (ControlFlow 0 22) 21) $generated@@200)))))
(let (($generated@@204  (=> (not $generated@@183) (and (=> (= (ControlFlow 0 24) 22) $generated@@203) (=> (= (ControlFlow 0 24) 23) $generated@@202)))))
(let (($generated@@205  (=> (= (ControlFlow 0 10) (- 0 9)) (or (= $generated@@181 ($generated@@162 7)) (<= $generated@@184 $generated@@181)))))
(let (($generated@@206  (=> (and (= $generated@@181 ($generated@@162 7)) (= (ControlFlow 0 12) 10)) $generated@@205)))
(let (($generated@@207  (=> (and (not (= $generated@@181 ($generated@@162 7))) (= (ControlFlow 0 11) 10)) $generated@@205)))
(let (($generated@@208  (=> (= $generated@@181 ($generated@@162 7)) (and (=> (= (ControlFlow 0 14) 11) $generated@@207) (=> (= (ControlFlow 0 14) 12) $generated@@206)))))
(let (($generated@@209  (=> (<= $generated@@184 $generated@@181) (and (=> (= (ControlFlow 0 13) 11) $generated@@207) (=> (= (ControlFlow 0 13) 12) $generated@@206)))))
(let (($generated@@210  (and (=> (= (ControlFlow 0 3) (- 0 5)) (or (<= 0 $generated@@185) (= (- $generated@@184 $generated@@186) $generated@@185))) (=> (or (<= 0 $generated@@185) (= (- $generated@@184 $generated@@186) $generated@@185)) (and (=> (= (ControlFlow 0 3) (- 0 4)) (< (- $generated@@184 $generated@@186) $generated@@185)) (=> (< (- $generated@@184 $generated@@186) $generated@@185) (=> (= (ControlFlow 0 3) (- 0 2)) (=> $generated@@183 (or (or (and (<= $generated@@186 ($generated@@162 7)) (<= $generated@@186 $generated@@182)) (= $generated@@186 ($generated@@162 7))) (< $generated@@182 7))))))))))
(let (($generated@@211  (=> (and (and (not (= $generated@@181 $generated@@182)) (= $generated@@187 (+ $generated@@181 1))) (and (= $generated@@186 $generated@@187) (= (ControlFlow 0 7) 3))) $generated@@210)))
(let (($generated@@212  (=> (and (and (= $generated@@181 $generated@@182) (= $generated@@188 ($generated@@162 8))) (and (= $generated@@186 $generated@@188) (= (ControlFlow 0 6) 3))) $generated@@210)))
(let (($generated@@213  (=> (not (= $generated@@181 ($generated@@162 7))) (and (=> (= (ControlFlow 0 8) 6) $generated@@212) (=> (= (ControlFlow 0 8) 7) $generated@@211)))))
(let (($generated@@214  (=> (and (< $generated@@181 $generated@@184) (= $generated@@185 (- $generated@@184 $generated@@181))) (and (=> (= (ControlFlow 0 15) 14) $generated@@208) (=> (= (ControlFlow 0 15) 8) $generated@@213)))))
(let (($generated@@215  (=> $generated@@183 (and (=> (= (ControlFlow 0 16) 13) $generated@@209) (=> (= (ControlFlow 0 16) 15) $generated@@214)))))
(let (($generated@@216  (and (=> (= (ControlFlow 0 25) 24) $generated@@204) (=> (= (ControlFlow 0 25) 16) $generated@@215))))
(let (($generated@@217 true))
(let (($generated@@218  (=> (and (and (and (and (not false) (<= 0 $generated@@181)) (=> $generated@@183 true)) (and (=> $generated@@183 (or (or (and (<= $generated@@181 ($generated@@162 7)) (<= $generated@@181 $generated@@182)) (= $generated@@181 ($generated@@162 7))) (< $generated@@182 7))) (forall (($generated@@219 T@U) ) (!  (=> (= (type $generated@@219) $generated@@46) (=> (and (not (= $generated@@219 $generated@@190)) ($generated@@0 ($generated@@48 ($generated@@49 $generated@@189 $generated@@219) $generated@@50))) (= ($generated@@49 $generated@@189 $generated@@219) ($generated@@49 $generated@@189 $generated@@219))))
 :pattern ( ($generated@@49 $generated@@189 $generated@@219))
)))) (and (and ($generated@@44 $generated@@189 $generated@@189) (forall (($generated@@220 T@U) ($generated@@221 T@U) ) (! (let (($generated@@222 ($generated@@55 (type $generated@@221))))
 (=> (and (and (= (type $generated@@220) $generated@@46) (= (type $generated@@221) ($generated@@54 $generated@@222))) (and (not (= $generated@@220 $generated@@190)) ($generated@@0 ($generated@@48 ($generated@@49 $generated@@189 $generated@@220) $generated@@50)))) (or (= ($generated@@48 ($generated@@49 $generated@@189 $generated@@220) $generated@@221) ($generated@@48 ($generated@@49 $generated@@189 $generated@@220) $generated@@221)) ($generated@@0 ($generated@@106 $generated@@191 $generated@@220 $generated@@221)))))
 :pattern ( ($generated@@48 ($generated@@49 $generated@@189 $generated@@220) $generated@@221))
))) (and (<= (- $generated@@184 $generated@@181) $generated@@192) (=> (= (- $generated@@184 $generated@@181) $generated@@192) true)))) (and (=> (= (ControlFlow 0 26) 1) $generated@@217) (=> (= (ControlFlow 0 26) 25) $generated@@216)))))
(let (($generated@@223  (=> (= $generated@@191 ($generated@@107 $generated@@190 $generated@@189 $generated@@50 false)) (=> (and (= $generated@@193 ($generated@@162 0)) (= $generated@@192 (- $generated@@184 $generated@@193))) (and (=> (= (ControlFlow 0 27) (- 0 28)) (=> $generated@@183 (or (or (and (<= $generated@@193 ($generated@@162 7)) (<= $generated@@193 $generated@@182)) (= $generated@@193 ($generated@@162 7))) (< $generated@@182 7)))) (=> (=> $generated@@183 (or (or (and (<= $generated@@193 ($generated@@162 7)) (<= $generated@@193 $generated@@182)) (= $generated@@193 ($generated@@162 7))) (< $generated@@182 7))) (=> (= (ControlFlow 0 27) 26) $generated@@218)))))))
(let (($generated@@224  (=> (and ($generated@@194 $generated@@189) ($generated@@195 $generated@@189)) (=> (and (and (<= ($generated@@162 0) $generated@@184) (<= ($generated@@162 0) $generated@@182)) (and (= 1 $generated@@196) (= (ControlFlow 0 29) 27))) $generated@@223))))
$generated@@224)))))))))))))))))))))))))
))
(check-sat)
(pop 1)
; Valid
(get-info :rlimit)
(reset)
(set-option :rlimit 0)
; did a full reset
(reset)
(set-option :print-success false)
(set-info :smt-lib-version 2.6)
(set-option :auto_config false)
(set-option :type_check true)
(set-option :smt.case_split 3)
(set-option :smt.qi.eager_threshold 100)
(set-option :smt.delay_units true)
(set-option :smt.arith.solver 2)
(set-option :smt.mbqi false)
(set-option :model.compact false)
(set-option :model.v2 true)
(set-option :pp.bv_literals false)
; done setting options


(set-info :category "industrial")
(declare-sort |T@U| 0)
(declare-sort |T@T| 0)
(declare-fun real_pow (Real Real) Real)
(declare-fun UOrdering2 (|T@U| |T@U|) Bool)
(declare-fun UOrdering3 (|T@T| |T@U| |T@U|) Bool)
(declare-fun tickleBool (Bool) Bool)
(assert (and (tickleBool true) (tickleBool false)))
(declare-fun $generated (T@U) Int)
(declare-fun $generated@@0 (T@U) Bool)
(declare-fun $generated@@1 (T@T) Int)
(declare-fun $generated@@2 () T@T)
(declare-fun $generated@@3 () T@T)
(declare-fun $generated@@4 () T@T)
(declare-fun $generated@@5 () T@T)
(declare-fun $generated@@6 () T@T)
(declare-fun $generated@@7 () T@T)
(declare-fun $generated@@8 (Int) T@U)
(declare-fun type (T@U) T@T)
(declare-fun $generated@@9 (Real) T@U)
(declare-fun $generated@@10 (T@U) Real)
(declare-fun $generated@@11 (Bool) T@U)
(declare-fun $generated@@12 (RoundingMode) T@U)
(declare-fun $generated@@13 (T@U) RoundingMode)
(declare-fun $generated@@14 (String) T@U)
(declare-fun $generated@@15 (T@U) String)
(declare-fun $generated@@16 ((RegEx String)) T@U)
(declare-fun $generated@@17 (T@U) (RegEx String))
(declare-fun $generated@@44 () T@U)
(declare-fun $generated@@45 () T@U)
(declare-fun $generated@@46 () T@U)
(declare-fun $generated@@47 () T@U)
(declare-fun $generated@@48 () T@U)
(declare-fun $generated@@49 () T@U)
(declare-fun $generated@@50 () T@U)
(declare-fun $generated@@51 () T@U)
(declare-fun $generated@@52 () T@U)
(declare-fun $generated@@53 () T@U)
(declare-fun $generated@@54 () T@U)
(declare-fun $generated@@55 () T@U)
(declare-fun $generated@@56 () T@U)
(declare-fun $generated@@57 () T@U)
(declare-fun $generated@@58 () T@U)
(declare-fun $generated@@59 () T@U)
(declare-fun $generated@@60 () T@U)
(declare-fun $generated@@61 () T@U)
(declare-fun $generated@@62 () T@U)
(declare-fun $generated@@63 () T@U)
(declare-fun $generated@@64 () T@U)
(declare-fun $generated@@65 () T@U)
(declare-fun $generated@@66 () T@T)
(declare-fun $generated@@67 () T@T)
(declare-fun $generated@@68 (T@T) T@T)
(declare-fun $generated@@69 (T@T) T@T)
(declare-fun $generated@@70 () T@T)
(declare-fun $generated@@71 () T@T)
(declare-fun $generated@@74 (T@U) T@U)
(declare-fun $generated@@76 (T@U T@U T@U) Bool)
(declare-fun $generated@@77 (Int) T@U)
(declare-fun $generated@@78 (T@T T@T) T@T)
(declare-fun $generated@@79 () T@T)
(declare-fun $generated@@80 () T@T)
(declare-fun $generated@@81 (T@T) T@T)
(declare-fun $generated@@82 (T@T) T@T)
(declare-fun $generated@@83 (T@U T@U) T@U)
(declare-fun $generated@@84 (T@U T@U T@U) T@U)
(declare-fun $generated@@85 (T@U T@U) T@U)
(declare-fun $generated@@86 (T@U T@U T@U) T@U)
(declare-fun $generated@@134 (T@U T@U) Bool)
(declare-fun $generated@@138 () T@U)
(declare-fun $generated@@141 (T@U T@U) Bool)
(declare-fun $generated@@143 (T@U) Bool)
(declare-fun $generated@@144 (T@U T@U) T@U)
(declare-fun $generated@@145 () T@T)
(declare-fun $generated@@151 (T@U T@U) Bool)
(declare-fun $generated@@152 (T@U) T@U)
(declare-fun $generated@@153 (T@U) T@U)
(declare-fun $generated@@154 () T@T)
(declare-fun $generated@@159 (T@U) T@U)
(declare-fun $generated@@160 (T@U) Bool)
(declare-fun $generated@@164 (T@U T@U T@U) T@U)
(declare-fun $generated@@165 (T@U T@U T@U Bool) T@U)
(declare-fun $generated@@166 (T@T T@T) T@T)
(declare-fun $generated@@167 (T@T) T@T)
(declare-fun $generated@@168 (T@T) T@T)
(declare-fun $generated@@169 (T@U T@U T@U T@U) T@U)
(declare-fun $generated@@220 (T@U T@U) T@U)
(declare-fun $generated@@221 (T@U T@U) Bool)
(declare-fun $generated@@230 (T@U) T@U)
(declare-fun $generated@@235 (T@U) T@U)
(declare-fun $generated@@240 (Int) Int)
(declare-fun $generated@@242 (T@U) T@U)
(declare-fun $generated@@246 (T@U) Bool)
(declare-fun $generated@@247 (T@U T@U T@U) Bool)
(declare-fun $generated@@253 (T@U) T@U)
(declare-fun $generated@@259 (T@T) T@U)
(declare-fun $generated@@260 (T@U) Int)
(declare-fun $generated@@261 (T@T) T@T)
(declare-fun $generated@@262 (T@T) T@T)
(declare-fun $generated@@268 (T@U) T@U)
(declare-fun $generated@@281 (T@U) Int)
(declare-fun $generated@@282 (T@T) T@U)
(declare-fun $generated@@287 (T@U) T@U)
(declare-fun $generated@@288 (T@T T@T) T@U)
(declare-fun $generated@@289 (T@T T@T) T@T)
(declare-fun $generated@@290 (T@T) T@T)
(declare-fun $generated@@291 (T@T) T@T)
(declare-fun $generated@@305 (T@U) T@U)
(declare-fun $generated@@306 (T@T T@T) T@U)
(declare-fun $generated@@307 (T@T T@T) T@T)
(declare-fun $generated@@308 (T@T) T@T)
(declare-fun $generated@@309 (T@T) T@T)
(declare-fun $generated@@326 (T@T T@U) T@U)
(declare-fun $generated@@334 (T@U) T@U)
(declare-fun $generated@@345 (T@U) T@U)
(declare-fun $generated@@365 (T@U) T@U)
(declare-fun $generated@@366 (T@U) T@U)
(declare-fun $generated@@373 (T@U) T@U)
(declare-fun $generated@@374 (T@U) T@U)
(declare-fun $generated@@391 (T@U T@U) T@U)
(declare-fun $generated@@399 (T@U T@U) T@U)
(declare-fun $generated@@410 (T@T) T@U)
(declare-fun $generated@@434 () T@T)
(declare-fun $generated@@442 (T@U) T@U)
(declare-fun $generated@@446 (T@U) T@U)
(declare-fun $generated@@452 (T@U) T@U)
(declare-fun $generated@@456 (T@U) T@U)
(declare-fun $generated@@464 (T@U) T@U)
(declare-fun $generated@@468 (T@U) T@U)
(declare-fun $generated@@476 (T@U) T@U)
(declare-fun $generated@@477 (T@U Int) T@U)
(declare-fun $generated@@486 (T@U) Int)
(declare-fun $generated@@488 (T@U) T@U)
(declare-fun $generated@@492 (T@U) T@U)
(declare-fun $generated@@496 (T@U) T@U)
(declare-fun $generated@@500 (T@U) T@U)
(declare-fun $generated@@514 (T@U) Int)
(declare-fun $generated@@515 (T@U) Int)
(declare-fun $generated@@531 (T@U) T@U)
(declare-fun $generated@@580 (T@U) Int)
(assert  (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (= ($generated@@1 $generated@@2) 0) (= ($generated@@1 $generated@@3) 1)) (= ($generated@@1 $generated@@4) 2)) (= ($generated@@1 $generated@@5) 3)) (= ($generated@@1 $generated@@6) 4)) (= ($generated@@1 $generated@@7) 5)) (forall (($generated@@18 Int) ) (! (= ($generated ($generated@@8 $generated@@18)) $generated@@18)
 :pattern ( ($generated@@8 $generated@@18))
))) (forall (($generated@@19 T@U) ) (!  (=> (= (type $generated@@19) $generated@@2) (= ($generated@@8 ($generated $generated@@19)) $generated@@19))
 :pattern ( ($generated $generated@@19))
))) (forall (($generated@@20 Int) ) (! (= (type ($generated@@8 $generated@@20)) $generated@@2)
 :pattern ( ($generated@@8 $generated@@20))
))) (forall (($generated@@21 Real) ) (! (= ($generated@@10 ($generated@@9 $generated@@21)) $generated@@21)
 :pattern ( ($generated@@9 $generated@@21))
))) (forall (($generated@@22 T@U) ) (!  (=> (= (type $generated@@22) $generated@@3) (= ($generated@@9 ($generated@@10 $generated@@22)) $generated@@22))
 :pattern ( ($generated@@10 $generated@@22))
))) (forall (($generated@@23 Real) ) (! (= (type ($generated@@9 $generated@@23)) $generated@@3)
 :pattern ( ($generated@@9 $generated@@23))
))) (forall (($generated@@24 Bool) ) (! (= ($generated@@0 ($generated@@11 $generated@@24)) $generated@@24)
 :pattern ( ($generated@@11 $generated@@24))
))) (forall (($generated@@25 T@U) ) (!  (=> (= (type $generated@@25) $generated@@4) (= ($generated@@11 ($generated@@0 $generated@@25)) $generated@@25))
 :pattern ( ($generated@@0 $generated@@25))
))) (forall (($generated@@26 Bool) ) (! (= (type ($generated@@11 $generated@@26)) $generated@@4)
 :pattern ( ($generated@@11 $generated@@26))
))) (forall (($generated@@27 RoundingMode) ) (! (= ($generated@@13 ($generated@@12 $generated@@27)) $generated@@27)
 :pattern ( ($generated@@12 $generated@@27))
))) (forall (($generated@@28 T@U) ) (!  (=> (= (type $generated@@28) $generated@@5) (= ($generated@@12 ($generated@@13 $generated@@28)) $generated@@28))
 :pattern ( ($generated@@13 $generated@@28))
))) (forall (($generated@@29 RoundingMode) ) (! (= (type ($generated@@12 $generated@@29)) $generated@@5)
 :pattern ( ($generated@@12 $generated@@29))
))) (forall (($generated@@30 String) ) (! (= ($generated@@15 ($generated@@14 $generated@@30)) $generated@@30)
 :pattern ( ($generated@@14 $generated@@30))
))) (forall (($generated@@31 T@U) ) (!  (=> (= (type $generated@@31) $generated@@6) (= ($generated@@14 ($generated@@15 $generated@@31)) $generated@@31))
 :pattern ( ($generated@@15 $generated@@31))
))) (forall (($generated@@32 String) ) (! (= (type ($generated@@14 $generated@@32)) $generated@@6)
 :pattern ( ($generated@@14 $generated@@32))
))) (forall (($generated@@33 (RegEx String)) ) (! (= ($generated@@17 ($generated@@16 $generated@@33)) $generated@@33)
 :pattern ( ($generated@@16 $generated@@33))
))) (forall (($generated@@34 T@U) ) (!  (=> (= (type $generated@@34) $generated@@7) (= ($generated@@16 ($generated@@17 $generated@@34)) $generated@@34))
 :pattern ( ($generated@@17 $generated@@34))
))) (forall (($generated@@35 (RegEx String)) ) (! (= (type ($generated@@16 $generated@@35)) $generated@@7)
 :pattern ( ($generated@@16 $generated@@35))
))))
(assert (forall (($generated@@36 T@U) ) (! (UOrdering2 $generated@@36 $generated@@36)
 :no-pattern ($generated $generated@@36)
 :no-pattern ($generated@@0 $generated@@36)
)))
(assert (forall (($generated@@37 T@U) ($generated@@38 T@U) ($generated@@39 T@U) ) (! (let (($generated@@40 (type $generated@@37)))
 (=> (and (and (= (type $generated@@38) $generated@@40) (= (type $generated@@39) $generated@@40)) (and (UOrdering2 $generated@@37 $generated@@38) (UOrdering2 $generated@@38 $generated@@39))) (UOrdering2 $generated@@37 $generated@@39)))
 :pattern ( (UOrdering2 $generated@@37 $generated@@38) (UOrdering2 $generated@@38 $generated@@39))
)))
(assert (forall (($generated@@41 T@U) ($generated@@42 T@U) ) (! (let (($generated@@43 (type $generated@@41)))
 (=> (= (type $generated@@42) $generated@@43) (=> (and (UOrdering2 $generated@@41 $generated@@42) (UOrdering2 $generated@@42 $generated@@41)) (= $generated@@41 $generated@@42))))
 :pattern ( (UOrdering2 $generated@@41 $generated@@42) (UOrdering2 $generated@@42 $generated@@41))
)))
(assert  (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (= ($generated@@1 $generated@@66) 6) (= (type $generated@@44) $generated@@66)) (= (type $generated@@45) $generated@@66)) (= (type $generated@@46) $generated@@66)) (= (type $generated@@47) $generated@@66)) (= (type $generated@@48) $generated@@66)) (= ($generated@@1 $generated@@67) 7)) (= (type $generated@@49) $generated@@67)) (= (type $generated@@50) $generated@@67)) (= (type $generated@@51) $generated@@67)) (= (type $generated@@52) $generated@@67)) (= (type $generated@@53) $generated@@67)) (= (type $generated@@54) $generated@@67)) (= (type $generated@@55) $generated@@67)) (= (type $generated@@56) $generated@@67)) (= (type $generated@@57) $generated@@67)) (= (type $generated@@58) $generated@@67)) (= (type $generated@@59) $generated@@67)) (forall (($generated@@72 T@T) ) (= ($generated@@1 ($generated@@68 $generated@@72)) 8))) (forall (($generated@@73 T@T) ) (! (= ($generated@@69 ($generated@@68 $generated@@73)) $generated@@73)
 :pattern ( ($generated@@68 $generated@@73))
))) (= (type $generated@@60) ($generated@@68 $generated@@4))) (= (type $generated@@61) $generated@@67)) (= ($generated@@1 $generated@@70) 9)) (= (type $generated@@62) $generated@@70)) (= (type $generated@@63) $generated@@67)) (= ($generated@@1 $generated@@71) 10)) (= (type $generated@@64) $generated@@71)) (= (type $generated@@65) $generated@@71)))
(assert (distinct $generated@@44 $generated@@45 $generated@@46 $generated@@47 $generated@@48 $generated@@49 $generated@@50 $generated@@51 $generated@@52 $generated@@53 $generated@@54 $generated@@55 $generated@@56 $generated@@57 $generated@@58 $generated@@59 $generated@@60 $generated@@61 $generated@@62 $generated@@63 $generated@@64 $generated@@65)
)
(assert (forall (($generated@@75 T@U) ) (! (= (type ($generated@@74 $generated@@75)) $generated@@67)
 :pattern ( ($generated@@74 $generated@@75))
)))
(assert (= ($generated@@74 $generated@@44) $generated@@49))
(assert (= ($generated@@74 $generated@@45) $generated@@50))
(assert (= ($generated@@74 $generated@@46) $generated@@51))
(assert (= ($generated@@74 $generated@@47) $generated@@52))
(assert (= ($generated@@74 $generated@@48) $generated@@53))
(assert  (and (and (and (and (and (and (and (and (and (and (and (and (and (forall (($generated@@87 T@T) ($generated@@88 T@T) ) (= ($generated@@1 ($generated@@78 $generated@@87 $generated@@88)) 11)) (forall (($generated@@89 T@T) ($generated@@90 T@T) ) (! (= ($generated@@81 ($generated@@78 $generated@@89 $generated@@90)) $generated@@89)
 :pattern ( ($generated@@78 $generated@@89 $generated@@90))
))) (forall (($generated@@91 T@T) ($generated@@92 T@T) ) (! (= ($generated@@82 ($generated@@78 $generated@@91 $generated@@92)) $generated@@92)
 :pattern ( ($generated@@78 $generated@@91 $generated@@92))
))) (forall (($generated@@93 T@U) ($generated@@94 T@U) ) (! (let (($generated@@95 ($generated@@82 (type $generated@@93))))
(= (type ($generated@@83 $generated@@93 $generated@@94)) $generated@@95))
 :pattern ( ($generated@@83 $generated@@93 $generated@@94))
))) (forall (($generated@@96 T@U) ($generated@@97 T@U) ($generated@@98 T@U) ) (! (let (($generated@@99 (type $generated@@98)))
(let (($generated@@100 (type $generated@@97)))
(= (type ($generated@@84 $generated@@96 $generated@@97 $generated@@98)) ($generated@@78 $generated@@100 $generated@@99))))
 :pattern ( ($generated@@84 $generated@@96 $generated@@97 $generated@@98))
))) (forall (($generated@@101 T@U) ($generated@@102 T@U) ($generated@@103 T@U) ) (! (let (($generated@@104 ($generated@@82 (type $generated@@101))))
 (=> (= (type $generated@@103) $generated@@104) (= ($generated@@83 ($generated@@84 $generated@@101 $generated@@102 $generated@@103) $generated@@102) $generated@@103)))
 :weight 0
))) (and (forall (($generated@@105 T@U) ($generated@@106 T@U) ($generated@@107 T@U) ($generated@@108 T@U) ) (!  (or (= $generated@@107 $generated@@108) (= ($generated@@83 ($generated@@84 $generated@@106 $generated@@107 $generated@@105) $generated@@108) ($generated@@83 $generated@@106 $generated@@108)))
 :weight 0
)) (forall (($generated@@109 T@U) ($generated@@110 T@U) ($generated@@111 T@U) ($generated@@112 T@U) ) (!  (or true (= ($generated@@83 ($generated@@84 $generated@@110 $generated@@111 $generated@@109) $generated@@112) ($generated@@83 $generated@@110 $generated@@112)))
 :weight 0
)))) (= ($generated@@1 $generated@@79) 12)) (forall (($generated@@113 T@U) ($generated@@114 T@U) ) (! (let (($generated@@115 ($generated@@69 (type $generated@@114))))
(= (type ($generated@@85 $generated@@113 $generated@@114)) $generated@@115))
 :pattern ( ($generated@@85 $generated@@113 $generated@@114))
))) (= ($generated@@1 $generated@@80) 13)) (forall (($generated@@116 T@U) ($generated@@117 T@U) ($generated@@118 T@U) ) (! (= (type ($generated@@86 $generated@@116 $generated@@117 $generated@@118)) $generated@@80)
 :pattern ( ($generated@@86 $generated@@116 $generated@@117 $generated@@118))
))) (forall (($generated@@119 T@U) ($generated@@120 T@U) ($generated@@121 T@U) ) (! (let (($generated@@122 ($generated@@69 (type $generated@@120))))
 (=> (= (type $generated@@121) $generated@@122) (= ($generated@@85 ($generated@@86 $generated@@119 $generated@@120 $generated@@121) $generated@@120) $generated@@121)))
 :weight 0
))) (and (forall (($generated@@123 T@U) ($generated@@124 T@U) ($generated@@125 T@U) ($generated@@126 T@U) ) (!  (or (= $generated@@125 $generated@@126) (= ($generated@@85 ($generated@@86 $generated@@124 $generated@@125 $generated@@123) $generated@@126) ($generated@@85 $generated@@124 $generated@@126)))
 :weight 0
)) (forall (($generated@@127 T@U) ($generated@@128 T@U) ($generated@@129 T@U) ($generated@@130 T@U) ) (!  (or true (= ($generated@@85 ($generated@@86 $generated@@128 $generated@@129 $generated@@127) $generated@@130) ($generated@@85 $generated@@128 $generated@@130)))
 :weight 0
)))) (forall (($generated@@131 Int) ) (! (= (type ($generated@@77 $generated@@131)) $generated@@66)
 :pattern ( ($generated@@77 $generated@@131))
))))
(assert (forall (($generated@@132 T@U) ($generated@@133 T@U) ) (!  (=> (and (= (type $generated@@132) $generated@@2) (= (type $generated@@133) ($generated@@78 $generated@@79 $generated@@80))) ($generated@@76 $generated@@132 ($generated@@77 0) $generated@@133))
 :pattern ( ($generated@@76 $generated@@132 ($generated@@77 0) $generated@@133))
)))
(assert (forall (($generated@@135 T@U) ($generated@@136 T@U) ) (!  (=> (and (and (= (type $generated@@135) ($generated@@78 $generated@@79 $generated@@80)) (= (type $generated@@136) ($generated@@78 $generated@@79 $generated@@80))) ($generated@@134 $generated@@135 $generated@@136)) (forall (($generated@@137 T@U) ) (!  (=> (and (= (type $generated@@137) $generated@@79) ($generated@@0 ($generated@@85 ($generated@@83 $generated@@135 $generated@@137) $generated@@60))) ($generated@@0 ($generated@@85 ($generated@@83 $generated@@136 $generated@@137) $generated@@60)))
 :pattern ( ($generated@@85 ($generated@@83 $generated@@136 $generated@@137) $generated@@60))
)))
 :pattern ( ($generated@@134 $generated@@135 $generated@@136))
)))
(assert (= (type $generated@@138) $generated@@66))
(assert (forall (($generated@@139 T@U) ($generated@@140 T@U) ) (!  (=> (and (= (type $generated@@139) $generated@@2) (= (type $generated@@140) ($generated@@78 $generated@@79 $generated@@80))) ($generated@@76 $generated@@139 $generated@@138 $generated@@140))
 :pattern ( ($generated@@76 $generated@@139 $generated@@138 $generated@@140))
)))
(assert (forall (($generated@@142 T@U) ) (!  (=> (= (type $generated@@142) $generated@@2) ($generated@@141 $generated@@142 ($generated@@77 0)))
 :pattern ( ($generated@@141 $generated@@142 ($generated@@77 0)))
)))
(assert  (and (= ($generated@@1 $generated@@145) 14) (forall (($generated@@146 T@U) ($generated@@147 T@U) ) (! (= (type ($generated@@144 $generated@@146 $generated@@147)) $generated@@66)
 :pattern ( ($generated@@144 $generated@@146 $generated@@147))
))))
(assert (forall (($generated@@148 T@U) ($generated@@149 T@U) ($generated@@150 T@U) ) (!  (=> (and (and (and (= (type $generated@@148) $generated@@66) (= (type $generated@@149) $generated@@66)) (= (type $generated@@150) $generated@@145)) ($generated@@141 $generated@@150 ($generated@@144 $generated@@148 $generated@@149))) ($generated@@143 $generated@@150))
 :pattern ( ($generated@@143 $generated@@150) ($generated@@141 $generated@@150 ($generated@@144 $generated@@148 $generated@@149)))
)))
(assert  (and (and (= ($generated@@1 $generated@@154) 15) (forall (($generated@@155 T@U) ) (! (= (type ($generated@@152 $generated@@155)) $generated@@154)
 :pattern ( ($generated@@152 $generated@@155))
))) (forall (($generated@@156 T@U) ) (! (= (type ($generated@@153 $generated@@156)) $generated@@154)
 :pattern ( ($generated@@153 $generated@@156))
))))
(assert (forall (($generated@@157 T@U) ($generated@@158 T@U) ) (!  (=> (and (and (= (type $generated@@157) $generated@@145) (= (type $generated@@158) $generated@@145)) true) (= ($generated@@151 $generated@@157 $generated@@158)  (and (= ($generated@@152 $generated@@157) ($generated@@152 $generated@@158)) (= ($generated@@153 $generated@@157) ($generated@@153 $generated@@158)))))
 :pattern ( ($generated@@151 $generated@@157 $generated@@158))
)))
(assert (forall (($generated@@161 T@U) ) (! (= (type ($generated@@159 $generated@@161)) $generated@@66)
 :pattern ( ($generated@@159 $generated@@161))
)))
(assert (forall (($generated@@162 T@U) ($generated@@163 T@U) ) (!  (=> (and (and (= (type $generated@@162) ($generated@@78 $generated@@154 $generated@@2)) (= (type $generated@@163) $generated@@66)) ($generated@@141 $generated@@162 ($generated@@159 $generated@@163))) ($generated@@160 $generated@@162))
 :pattern ( ($generated@@141 $generated@@162 ($generated@@159 $generated@@163)))
)))
(assert  (and (and (and (and (and (and (and (forall (($generated@@170 T@T) ($generated@@171 T@T) ) (= ($generated@@1 ($generated@@166 $generated@@170 $generated@@171)) 16)) (forall (($generated@@172 T@T) ($generated@@173 T@T) ) (! (= ($generated@@167 ($generated@@166 $generated@@172 $generated@@173)) $generated@@172)
 :pattern ( ($generated@@166 $generated@@172 $generated@@173))
))) (forall (($generated@@174 T@T) ($generated@@175 T@T) ) (! (= ($generated@@168 ($generated@@166 $generated@@174 $generated@@175)) $generated@@175)
 :pattern ( ($generated@@166 $generated@@174 $generated@@175))
))) (forall (($generated@@176 T@U) ($generated@@177 T@U) ($generated@@178 T@U) ) (! (let (($generated@@179 ($generated@@168 (type $generated@@176))))
(= (type ($generated@@164 $generated@@176 $generated@@177 $generated@@178)) $generated@@179))
 :pattern ( ($generated@@164 $generated@@176 $generated@@177 $generated@@178))
))) (forall (($generated@@180 T@U) ($generated@@181 T@U) ($generated@@182 T@U) ($generated@@183 T@U) ) (! (let (($generated@@184 (type $generated@@183)))
(let (($generated@@185 (type $generated@@181)))
(= (type ($generated@@169 $generated@@180 $generated@@181 $generated@@182 $generated@@183)) ($generated@@166 $generated@@185 $generated@@184))))
 :pattern ( ($generated@@169 $generated@@180 $generated@@181 $generated@@182 $generated@@183))
))) (forall (($generated@@186 T@U) ($generated@@187 T@U) ($generated@@188 T@U) ($generated@@189 T@U) ) (! (let (($generated@@190 ($generated@@168 (type $generated@@186))))
 (=> (= (type $generated@@189) $generated@@190) (= ($generated@@164 ($generated@@169 $generated@@186 $generated@@187 $generated@@188 $generated@@189) $generated@@187 $generated@@188) $generated@@189)))
 :weight 0
))) (and (and (forall (($generated@@191 T@U) ($generated@@192 T@U) ($generated@@193 T@U) ($generated@@194 T@U) ($generated@@195 T@U) ($generated@@196 T@U) ) (!  (or (= $generated@@193 $generated@@195) (= ($generated@@164 ($generated@@169 $generated@@192 $generated@@193 $generated@@194 $generated@@191) $generated@@195 $generated@@196) ($generated@@164 $generated@@192 $generated@@195 $generated@@196)))
 :weight 0
)) (forall (($generated@@197 T@U) ($generated@@198 T@U) ($generated@@199 T@U) ($generated@@200 T@U) ($generated@@201 T@U) ($generated@@202 T@U) ) (!  (or (= $generated@@200 $generated@@202) (= ($generated@@164 ($generated@@169 $generated@@198 $generated@@199 $generated@@200 $generated@@197) $generated@@201 $generated@@202) ($generated@@164 $generated@@198 $generated@@201 $generated@@202)))
 :weight 0
))) (forall (($generated@@203 T@U) ($generated@@204 T@U) ($generated@@205 T@U) ($generated@@206 T@U) ($generated@@207 T@U) ($generated@@208 T@U) ) (!  (or true (= ($generated@@164 ($generated@@169 $generated@@204 $generated@@205 $generated@@206 $generated@@203) $generated@@207 $generated@@208) ($generated@@164 $generated@@204 $generated@@207 $generated@@208)))
 :weight 0
)))) (forall (($generated@@209 T@U) ($generated@@210 T@U) ($generated@@211 T@U) ($generated@@212 Bool) ) (! (= (type ($generated@@165 $generated@@209 $generated@@210 $generated@@211 $generated@@212)) ($generated@@166 $generated@@79 $generated@@4))
 :pattern ( ($generated@@165 $generated@@209 $generated@@210 $generated@@211 $generated@@212))
))))
(assert (forall (($generated@@213 T@U) ($generated@@214 T@U) ($generated@@215 T@U) ($generated@@216 Bool) ($generated@@217 T@U) ($generated@@218 T@U) ) (! (let (($generated@@219 ($generated@@69 (type $generated@@218))))
 (=> (and (and (and (and (= (type $generated@@213) $generated@@79) (= (type $generated@@214) ($generated@@78 $generated@@79 $generated@@80))) (= (type $generated@@215) ($generated@@68 $generated@@4))) (= (type $generated@@217) $generated@@79)) (= (type $generated@@218) ($generated@@68 $generated@@219))) (= ($generated@@0 ($generated@@164 ($generated@@165 $generated@@213 $generated@@214 $generated@@215 $generated@@216) $generated@@217 $generated@@218))  (=> (and (not (= $generated@@217 $generated@@213)) ($generated@@0 ($generated@@85 ($generated@@83 $generated@@214 $generated@@217) $generated@@215))) $generated@@216))))
 :pattern ( ($generated@@164 ($generated@@165 $generated@@213 $generated@@214 $generated@@215 $generated@@216) $generated@@217 $generated@@218))
)))
(assert (forall (($generated@@222 T@U) ($generated@@223 T@U) ) (! (= (type ($generated@@220 $generated@@222 $generated@@223)) $generated@@145)
 :pattern ( ($generated@@220 $generated@@222 $generated@@223))
)))
(assert (forall (($generated@@224 T@U) ($generated@@225 T@U) ($generated@@226 T@U) ($generated@@227 T@U) ) (!  (=> (and (and (and (= (type $generated@@224) $generated@@66) (= (type $generated@@225) $generated@@66)) (= (type $generated@@226) $generated@@154)) (= (type $generated@@227) $generated@@154)) (= ($generated@@141 ($generated@@220 $generated@@226 $generated@@227) ($generated@@144 $generated@@224 $generated@@225))  (and ($generated@@221 $generated@@226 $generated@@224) ($generated@@221 $generated@@227 $generated@@225))))
 :pattern ( ($generated@@141 ($generated@@220 $generated@@226 $generated@@227) ($generated@@144 $generated@@224 $generated@@225)))
)))
(assert (forall (($generated@@228 T@U) ($generated@@229 T@U) ) (!  (=> (and (= (type $generated@@228) $generated@@145) (= (type $generated@@229) $generated@@145)) (= ($generated@@151 $generated@@228 $generated@@229) (= $generated@@228 $generated@@229)))
 :pattern ( ($generated@@151 $generated@@228 $generated@@229))
)))
(assert (forall (($generated@@231 T@U) ) (! (= (type ($generated@@230 $generated@@231)) $generated@@66)
 :pattern ( ($generated@@230 $generated@@231))
)))
(assert (forall (($generated@@232 T@U) ($generated@@233 T@U) ) (!  (=> (and (= (type $generated@@232) ($generated@@78 $generated@@154 $generated@@4)) (= (type $generated@@233) $generated@@66)) (= ($generated@@141 $generated@@232 ($generated@@230 $generated@@233)) (forall (($generated@@234 T@U) ) (!  (=> (and (= (type $generated@@234) $generated@@154) ($generated@@0 ($generated@@83 $generated@@232 $generated@@234))) ($generated@@221 $generated@@234 $generated@@233))
 :pattern ( ($generated@@83 $generated@@232 $generated@@234))
))))
 :pattern ( ($generated@@141 $generated@@232 ($generated@@230 $generated@@233)))
)))
(assert (forall (($generated@@236 T@U) ) (! (= (type ($generated@@235 $generated@@236)) $generated@@66)
 :pattern ( ($generated@@235 $generated@@236))
)))
(assert (forall (($generated@@237 T@U) ($generated@@238 T@U) ) (!  (=> (and (= (type $generated@@237) ($generated@@78 $generated@@154 $generated@@4)) (= (type $generated@@238) $generated@@66)) (= ($generated@@141 $generated@@237 ($generated@@235 $generated@@238)) (forall (($generated@@239 T@U) ) (!  (=> (and (= (type $generated@@239) $generated@@154) ($generated@@0 ($generated@@83 $generated@@237 $generated@@239))) ($generated@@221 $generated@@239 $generated@@238))
 :pattern ( ($generated@@83 $generated@@237 $generated@@239))
))))
 :pattern ( ($generated@@141 $generated@@237 ($generated@@235 $generated@@238)))
)))
(assert (forall (($generated@@241 Int) ) (! (= ($generated@@240 $generated@@241) $generated@@241)
 :pattern ( ($generated@@240 $generated@@241))
)))
(assert (forall (($generated@@243 T@U) ) (! (let (($generated@@244 (type $generated@@243)))
(= (type ($generated@@242 $generated@@243)) $generated@@244))
 :pattern ( ($generated@@242 $generated@@243))
)))
(assert (forall (($generated@@245 T@U) ) (! (= ($generated@@242 $generated@@245) $generated@@245)
 :pattern ( ($generated@@242 $generated@@245))
)))
(assert (forall (($generated@@248 T@U) ($generated@@249 T@U) ($generated@@250 T@U) ($generated@@251 T@U) ($generated@@252 T@U) ) (!  (=> (and (and (and (and (and (= (type $generated@@248) $generated@@66) (= (type $generated@@249) $generated@@66)) (= (type $generated@@250) $generated@@154)) (= (type $generated@@251) $generated@@154)) (= (type $generated@@252) ($generated@@78 $generated@@79 $generated@@80))) ($generated@@246 $generated@@252)) (= ($generated@@76 ($generated@@220 $generated@@250 $generated@@251) ($generated@@144 $generated@@248 $generated@@249) $generated@@252)  (and ($generated@@247 $generated@@250 $generated@@248 $generated@@252) ($generated@@247 $generated@@251 $generated@@249 $generated@@252))))
 :pattern ( ($generated@@76 ($generated@@220 $generated@@250 $generated@@251) ($generated@@144 $generated@@248 $generated@@249) $generated@@252))
)))
(assert (forall (($generated@@254 T@U) ) (! (= (type ($generated@@253 $generated@@254)) $generated@@70)
 :pattern ( ($generated@@253 $generated@@254))
)))
(assert (forall (($generated@@255 T@U) ) (!  (=> (= (type $generated@@255) $generated@@145) (= ($generated@@143 $generated@@255) (= ($generated@@253 $generated@@255) $generated@@62)))
 :pattern ( ($generated@@143 $generated@@255))
)))
(assert (forall (($generated@@256 T@U) ) (!  (=> (and (= (type $generated@@256) $generated@@145) ($generated@@143 $generated@@256)) (exists (($generated@@257 T@U) ($generated@@258 T@U) ) (!  (and (and (= (type $generated@@257) $generated@@154) (= (type $generated@@258) $generated@@154)) (= $generated@@256 ($generated@@220 $generated@@257 $generated@@258)))
 :no-pattern (type $generated@@257)
 :no-pattern (type $generated@@258)
 :no-pattern ($generated $generated@@257)
 :no-pattern ($generated@@0 $generated@@257)
 :no-pattern ($generated $generated@@258)
 :no-pattern ($generated@@0 $generated@@258)
)))
 :pattern ( ($generated@@143 $generated@@256))
)))
(assert  (and (and (forall (($generated@@263 T@T) ) (= ($generated@@1 ($generated@@261 $generated@@263)) 17)) (forall (($generated@@264 T@T) ) (! (= ($generated@@262 ($generated@@261 $generated@@264)) $generated@@264)
 :pattern ( ($generated@@261 $generated@@264))
))) (forall (($generated@@265 T@T) ) (! (= (type ($generated@@259 $generated@@265)) ($generated@@261 $generated@@265))
 :pattern ( ($generated@@259 $generated@@265))
))))
(assert (forall (($generated@@266 T@T) ) (! (= ($generated@@260 ($generated@@259 $generated@@266)) 0)
 :pattern ( ($generated@@259 $generated@@266))
)))
(assert (forall (($generated@@267 T@U) ) (!  (=> (= (type $generated@@267) $generated@@2) (= ($generated@@141 $generated@@267 $generated@@138) (<= ($generated@@240 0) ($generated $generated@@267))))
 :pattern ( ($generated@@141 $generated@@267 $generated@@138))
)))
(assert (forall (($generated@@269 T@U) ) (! (= (type ($generated@@268 $generated@@269)) $generated@@154)
 :pattern ( ($generated@@268 $generated@@269))
)))
(assert (forall (($generated@@270 T@U) ($generated@@271 T@U) ($generated@@272 T@U) ) (!  (=> (and (= (type $generated@@271) $generated@@66) (= (type $generated@@272) ($generated@@78 $generated@@79 $generated@@80))) (= ($generated@@247 ($generated@@268 $generated@@270) $generated@@271 $generated@@272) ($generated@@76 $generated@@270 $generated@@271 $generated@@272)))
 :pattern ( ($generated@@247 ($generated@@268 $generated@@270) $generated@@271 $generated@@272))
)))
(assert (forall (($generated@@273 T@U) ($generated@@274 T@U) ($generated@@275 T@U) ($generated@@276 T@U) ) (!  (=> (and (and (and (and (and (= (type $generated@@273) ($generated@@78 $generated@@79 $generated@@80)) (= (type $generated@@274) ($generated@@78 $generated@@79 $generated@@80))) (= (type $generated@@275) $generated@@154)) (= (type $generated@@276) $generated@@66)) ($generated@@134 $generated@@273 $generated@@274)) ($generated@@247 $generated@@275 $generated@@276 $generated@@273)) ($generated@@247 $generated@@275 $generated@@276 $generated@@274))
 :pattern ( ($generated@@134 $generated@@273 $generated@@274) ($generated@@247 $generated@@275 $generated@@276 $generated@@273))
)))
(assert (forall (($generated@@277 T@U) ($generated@@278 T@U) ($generated@@279 T@U) ($generated@@280 T@U) ) (!  (=> (and (and (and (and (= (type $generated@@277) ($generated@@78 $generated@@79 $generated@@80)) (= (type $generated@@278) ($generated@@78 $generated@@79 $generated@@80))) (= (type $generated@@280) $generated@@66)) ($generated@@134 $generated@@277 $generated@@278)) ($generated@@76 $generated@@279 $generated@@280 $generated@@277)) ($generated@@76 $generated@@279 $generated@@280 $generated@@278))
 :pattern ( ($generated@@134 $generated@@277 $generated@@278) ($generated@@76 $generated@@279 $generated@@280 $generated@@277))
)))
(assert (forall (($generated@@283 T@T) ) (! (= (type ($generated@@282 $generated@@283)) ($generated@@78 $generated@@283 $generated@@2))
 :pattern ( ($generated@@282 $generated@@283))
)))
(assert (forall (($generated@@284 T@U) ) (! (let (($generated@@285 ($generated@@81 (type $generated@@284))))
 (=> (= (type $generated@@284) ($generated@@78 $generated@@285 $generated@@2)) (and (= (= ($generated@@281 $generated@@284) 0) (= $generated@@284 ($generated@@282 $generated@@285))) (=> (not (= ($generated@@281 $generated@@284) 0)) (exists (($generated@@286 T@U) ) (!  (and (= (type $generated@@286) $generated@@285) (< 0 ($generated ($generated@@83 $generated@@284 $generated@@286))))
 :no-pattern (type $generated@@286)
 :no-pattern ($generated $generated@@286)
 :no-pattern ($generated@@0 $generated@@286)
))))))
 :pattern ( ($generated@@281 $generated@@284))
)))
(assert  (and (and (and (and (forall (($generated@@292 T@T) ($generated@@293 T@T) ) (= ($generated@@1 ($generated@@289 $generated@@292 $generated@@293)) 18)) (forall (($generated@@294 T@T) ($generated@@295 T@T) ) (! (= ($generated@@290 ($generated@@289 $generated@@294 $generated@@295)) $generated@@294)
 :pattern ( ($generated@@289 $generated@@294 $generated@@295))
))) (forall (($generated@@296 T@T) ($generated@@297 T@T) ) (! (= ($generated@@291 ($generated@@289 $generated@@296 $generated@@297)) $generated@@297)
 :pattern ( ($generated@@289 $generated@@296 $generated@@297))
))) (forall (($generated@@298 T@U) ) (! (let (($generated@@299 ($generated@@290 (type $generated@@298))))
(= (type ($generated@@287 $generated@@298)) ($generated@@78 $generated@@299 $generated@@4)))
 :pattern ( ($generated@@287 $generated@@298))
))) (forall (($generated@@300 T@T) ($generated@@301 T@T) ) (! (= (type ($generated@@288 $generated@@300 $generated@@301)) ($generated@@289 $generated@@300 $generated@@301))
 :pattern ( ($generated@@288 $generated@@300 $generated@@301))
))))
(assert (forall (($generated@@302 T@U) ($generated@@303 T@T) ) (! (let (($generated@@304 (type $generated@@302)))
 (not ($generated@@0 ($generated@@83 ($generated@@287 ($generated@@288 $generated@@304 $generated@@303)) $generated@@302))))
 :pattern ( (let (($generated@@304 (type $generated@@302)))
($generated@@83 ($generated@@287 ($generated@@288 $generated@@304 $generated@@303)) $generated@@302)))
)))
(assert  (and (and (and (and (forall (($generated@@310 T@T) ($generated@@311 T@T) ) (= ($generated@@1 ($generated@@307 $generated@@310 $generated@@311)) 19)) (forall (($generated@@312 T@T) ($generated@@313 T@T) ) (! (= ($generated@@308 ($generated@@307 $generated@@312 $generated@@313)) $generated@@312)
 :pattern ( ($generated@@307 $generated@@312 $generated@@313))
))) (forall (($generated@@314 T@T) ($generated@@315 T@T) ) (! (= ($generated@@309 ($generated@@307 $generated@@314 $generated@@315)) $generated@@315)
 :pattern ( ($generated@@307 $generated@@314 $generated@@315))
))) (forall (($generated@@316 T@U) ) (! (let (($generated@@317 ($generated@@308 (type $generated@@316))))
(= (type ($generated@@305 $generated@@316)) ($generated@@78 $generated@@317 $generated@@4)))
 :pattern ( ($generated@@305 $generated@@316))
))) (forall (($generated@@318 T@T) ($generated@@319 T@T) ) (! (= (type ($generated@@306 $generated@@318 $generated@@319)) ($generated@@307 $generated@@318 $generated@@319))
 :pattern ( ($generated@@306 $generated@@318 $generated@@319))
))))
(assert (forall (($generated@@320 T@U) ($generated@@321 T@T) ) (! (let (($generated@@322 (type $generated@@320)))
 (not ($generated@@0 ($generated@@83 ($generated@@305 ($generated@@306 $generated@@322 $generated@@321)) $generated@@320))))
 :pattern ( (let (($generated@@322 (type $generated@@320)))
($generated@@83 ($generated@@305 ($generated@@306 $generated@@322 $generated@@321)) $generated@@320)))
)))
(assert (forall (($generated@@323 T@U) ) (! (let (($generated@@324 ($generated@@81 (type $generated@@323))))
 (=> (= (type $generated@@323) ($generated@@78 $generated@@324 $generated@@2)) (= ($generated@@160 $generated@@323) (forall (($generated@@325 T@U) ) (!  (=> (= (type $generated@@325) $generated@@324) (and (<= 0 ($generated ($generated@@83 $generated@@323 $generated@@325))) (<= ($generated ($generated@@83 $generated@@323 $generated@@325)) ($generated@@281 $generated@@323))))
 :pattern ( ($generated@@83 $generated@@323 $generated@@325))
)))))
 :pattern ( ($generated@@160 $generated@@323))
)))
(assert (forall (($generated@@327 T@T) ($generated@@328 T@U) ) (! (= (type ($generated@@326 $generated@@327 $generated@@328)) $generated@@327)
 :pattern ( ($generated@@326 $generated@@327 $generated@@328))
)))
(assert (forall (($generated@@329 T@U) ) (!  (=> (and (= (type $generated@@329) $generated@@154) ($generated@@221 $generated@@329 $generated@@138)) (and (= ($generated@@268 ($generated@@326 $generated@@2 $generated@@329)) $generated@@329) ($generated@@141 ($generated@@326 $generated@@2 $generated@@329) $generated@@138)))
 :pattern ( ($generated@@221 $generated@@329 $generated@@138))
)))
(assert (forall (($generated@@330 T@U) ) (! (let (($generated@@331 ($generated@@291 (type $generated@@330))))
(let (($generated@@332 ($generated@@290 (type $generated@@330))))
 (=> (= (type $generated@@330) ($generated@@289 $generated@@332 $generated@@331)) (or (= $generated@@330 ($generated@@288 $generated@@332 $generated@@331)) (exists (($generated@@333 T@U) ) (!  (and (= (type $generated@@333) $generated@@332) ($generated@@0 ($generated@@83 ($generated@@287 $generated@@330) $generated@@333)))
 :no-pattern (type $generated@@333)
 :no-pattern ($generated $generated@@333)
 :no-pattern ($generated@@0 $generated@@333)
))))))
 :pattern ( ($generated@@287 $generated@@330))
)))
(assert (forall (($generated@@335 T@U) ) (! (let (($generated@@336 ($generated@@291 (type $generated@@335))))
(= (type ($generated@@334 $generated@@335)) ($generated@@78 $generated@@336 $generated@@4)))
 :pattern ( ($generated@@334 $generated@@335))
)))
(assert (forall (($generated@@337 T@U) ) (! (let (($generated@@338 ($generated@@291 (type $generated@@337))))
(let (($generated@@339 ($generated@@290 (type $generated@@337))))
 (=> (= (type $generated@@337) ($generated@@289 $generated@@339 $generated@@338)) (or (= $generated@@337 ($generated@@288 $generated@@339 $generated@@338)) (exists (($generated@@340 T@U) ) (!  (and (= (type $generated@@340) $generated@@338) ($generated@@0 ($generated@@83 ($generated@@334 $generated@@337) $generated@@340)))
 :no-pattern (type $generated@@340)
 :no-pattern ($generated $generated@@340)
 :no-pattern ($generated@@0 $generated@@340)
))))))
 :pattern ( ($generated@@334 $generated@@337))
)))
(assert (forall (($generated@@341 T@U) ) (! (let (($generated@@342 ($generated@@309 (type $generated@@341))))
(let (($generated@@343 ($generated@@308 (type $generated@@341))))
 (=> (= (type $generated@@341) ($generated@@307 $generated@@343 $generated@@342)) (or (= $generated@@341 ($generated@@306 $generated@@343 $generated@@342)) (exists (($generated@@344 T@U) ) (!  (and (= (type $generated@@344) $generated@@343) ($generated@@0 ($generated@@83 ($generated@@305 $generated@@341) $generated@@344)))
 :no-pattern (type $generated@@344)
 :no-pattern ($generated $generated@@344)
 :no-pattern ($generated@@0 $generated@@344)
))))))
 :pattern ( ($generated@@305 $generated@@341))
)))
(assert (forall (($generated@@346 T@U) ) (! (let (($generated@@347 ($generated@@309 (type $generated@@346))))
(= (type ($generated@@345 $generated@@346)) ($generated@@78 $generated@@347 $generated@@4)))
 :pattern ( ($generated@@345 $generated@@346))
)))
(assert (forall (($generated@@348 T@U) ) (! (let (($generated@@349 ($generated@@309 (type $generated@@348))))
(let (($generated@@350 ($generated@@308 (type $generated@@348))))
 (=> (= (type $generated@@348) ($generated@@307 $generated@@350 $generated@@349)) (or (= $generated@@348 ($generated@@306 $generated@@350 $generated@@349)) (exists (($generated@@351 T@U) ) (!  (and (= (type $generated@@351) $generated@@349) ($generated@@0 ($generated@@83 ($generated@@345 $generated@@348) $generated@@351)))
 :no-pattern (type $generated@@351)
 :no-pattern ($generated $generated@@351)
 :no-pattern ($generated@@0 $generated@@351)
))))))
 :pattern ( ($generated@@345 $generated@@348))
)))
(assert (forall (($generated@@352 T@U) ($generated@@353 T@U) ) (!  (=> (and (= (type $generated@@352) ($generated@@78 $generated@@154 $generated@@2)) (= (type $generated@@353) $generated@@66)) (= ($generated@@141 $generated@@352 ($generated@@159 $generated@@353)) (forall (($generated@@354 T@U) ) (!  (=> (and (= (type $generated@@354) $generated@@154) (< 0 ($generated ($generated@@83 $generated@@352 $generated@@354)))) ($generated@@221 $generated@@354 $generated@@353))
 :pattern ( ($generated@@83 $generated@@352 $generated@@354))
))))
 :pattern ( ($generated@@141 $generated@@352 ($generated@@159 $generated@@353)))
)))
(assert (forall (($generated@@355 T@U) ($generated@@356 T@U) ($generated@@357 T@U) ) (!  (=> (and (and (= (type $generated@@355) ($generated@@78 $generated@@154 $generated@@4)) (= (type $generated@@356) $generated@@66)) (= (type $generated@@357) ($generated@@78 $generated@@79 $generated@@80))) (= ($generated@@76 $generated@@355 ($generated@@230 $generated@@356) $generated@@357) (forall (($generated@@358 T@U) ) (!  (=> (and (= (type $generated@@358) $generated@@154) ($generated@@0 ($generated@@83 $generated@@355 $generated@@358))) ($generated@@247 $generated@@358 $generated@@356 $generated@@357))
 :pattern ( ($generated@@83 $generated@@355 $generated@@358))
))))
 :pattern ( ($generated@@76 $generated@@355 ($generated@@230 $generated@@356) $generated@@357))
)))
(assert (forall (($generated@@359 T@U) ($generated@@360 T@U) ($generated@@361 T@U) ) (!  (=> (and (and (= (type $generated@@359) ($generated@@78 $generated@@154 $generated@@4)) (= (type $generated@@360) $generated@@66)) (= (type $generated@@361) ($generated@@78 $generated@@79 $generated@@80))) (= ($generated@@76 $generated@@359 ($generated@@235 $generated@@360) $generated@@361) (forall (($generated@@362 T@U) ) (!  (=> (and (= (type $generated@@362) $generated@@154) ($generated@@0 ($generated@@83 $generated@@359 $generated@@362))) ($generated@@247 $generated@@362 $generated@@360 $generated@@361))
 :pattern ( ($generated@@83 $generated@@359 $generated@@362))
))))
 :pattern ( ($generated@@76 $generated@@359 ($generated@@235 $generated@@360) $generated@@361))
)))
(assert (forall (($generated@@363 T@U) ) (! (let (($generated@@364 (type $generated@@363)))
(= ($generated ($generated@@83 ($generated@@282 $generated@@364) $generated@@363)) 0))
 :pattern ( (let (($generated@@364 (type $generated@@363)))
($generated@@83 ($generated@@282 $generated@@364) $generated@@363)))
)))
(assert  (and (forall (($generated@@367 T@U) ) (! (= (type ($generated@@365 $generated@@367)) ($generated@@78 $generated@@154 $generated@@4))
 :pattern ( ($generated@@365 $generated@@367))
)) (forall (($generated@@368 T@U) ) (! (let (($generated@@369 ($generated@@291 (type $generated@@368))))
(let (($generated@@370 ($generated@@290 (type $generated@@368))))
(= (type ($generated@@366 $generated@@368)) ($generated@@78 $generated@@370 $generated@@369))))
 :pattern ( ($generated@@366 $generated@@368))
))))
(assert (forall (($generated@@371 T@U) ($generated@@372 T@U) ) (!  (=> (and (= (type $generated@@371) ($generated@@289 $generated@@154 $generated@@154)) (= (type $generated@@372) $generated@@154)) (= ($generated@@0 ($generated@@83 ($generated@@365 $generated@@371) $generated@@372))  (and ($generated@@0 ($generated@@83 ($generated@@287 $generated@@371) ($generated@@152 ($generated@@326 $generated@@145 $generated@@372)))) (= ($generated@@83 ($generated@@366 $generated@@371) ($generated@@152 ($generated@@326 $generated@@145 $generated@@372))) ($generated@@153 ($generated@@326 $generated@@145 $generated@@372))))))
 :pattern ( ($generated@@83 ($generated@@365 $generated@@371) $generated@@372))
)))
(assert  (and (forall (($generated@@375 T@U) ) (! (= (type ($generated@@373 $generated@@375)) ($generated@@78 $generated@@154 $generated@@4))
 :pattern ( ($generated@@373 $generated@@375))
)) (forall (($generated@@376 T@U) ) (! (let (($generated@@377 ($generated@@309 (type $generated@@376))))
(let (($generated@@378 ($generated@@308 (type $generated@@376))))
(= (type ($generated@@374 $generated@@376)) ($generated@@78 $generated@@378 $generated@@377))))
 :pattern ( ($generated@@374 $generated@@376))
))))
(assert (forall (($generated@@379 T@U) ($generated@@380 T@U) ) (!  (=> (and (= (type $generated@@379) ($generated@@307 $generated@@154 $generated@@154)) (= (type $generated@@380) $generated@@154)) (= ($generated@@0 ($generated@@83 ($generated@@373 $generated@@379) $generated@@380))  (and ($generated@@0 ($generated@@83 ($generated@@305 $generated@@379) ($generated@@152 ($generated@@326 $generated@@145 $generated@@380)))) (= ($generated@@83 ($generated@@374 $generated@@379) ($generated@@152 ($generated@@326 $generated@@145 $generated@@380))) ($generated@@153 ($generated@@326 $generated@@145 $generated@@380))))))
 :pattern ( ($generated@@83 ($generated@@373 $generated@@379) $generated@@380))
)))
(assert (forall (($generated@@381 T@U) ($generated@@382 T@U) ) (! (let (($generated@@383 (type $generated@@382)))
(let (($generated@@384 ($generated@@290 (type $generated@@381))))
 (=> (= (type $generated@@381) ($generated@@289 $generated@@384 $generated@@383)) (= ($generated@@0 ($generated@@83 ($generated@@334 $generated@@381) $generated@@382)) (exists (($generated@@385 T@U) ) (!  (and (= (type $generated@@385) $generated@@384) (and ($generated@@0 ($generated@@83 ($generated@@287 $generated@@381) $generated@@385)) (= $generated@@382 ($generated@@83 ($generated@@366 $generated@@381) $generated@@385))))
 :pattern ( ($generated@@83 ($generated@@287 $generated@@381) $generated@@385))
 :pattern ( ($generated@@83 ($generated@@366 $generated@@381) $generated@@385))
))))))
 :pattern ( ($generated@@83 ($generated@@334 $generated@@381) $generated@@382))
)))
(assert (forall (($generated@@386 T@U) ($generated@@387 T@U) ) (! (let (($generated@@388 (type $generated@@387)))
(let (($generated@@389 ($generated@@308 (type $generated@@386))))
 (=> (= (type $generated@@386) ($generated@@307 $generated@@389 $generated@@388)) (= ($generated@@0 ($generated@@83 ($generated@@345 $generated@@386) $generated@@387)) (exists (($generated@@390 T@U) ) (!  (and (= (type $generated@@390) $generated@@389) (and ($generated@@0 ($generated@@83 ($generated@@305 $generated@@386) $generated@@390)) (= $generated@@387 ($generated@@83 ($generated@@374 $generated@@386) $generated@@390))))
 :pattern ( ($generated@@83 ($generated@@305 $generated@@386) $generated@@390))
 :pattern ( ($generated@@83 ($generated@@374 $generated@@386) $generated@@390))
))))))
 :pattern ( ($generated@@83 ($generated@@345 $generated@@386) $generated@@387))
)))
(assert (forall (($generated@@392 T@U) ($generated@@393 T@U) ) (! (= (type ($generated@@391 $generated@@392 $generated@@393)) $generated@@66)
 :pattern ( ($generated@@391 $generated@@392 $generated@@393))
)))
(assert (forall (($generated@@394 T@U) ($generated@@395 T@U) ($generated@@396 T@U) ($generated@@397 T@U) ) (!  (=> (and (and (and (= (type $generated@@394) ($generated@@289 $generated@@154 $generated@@154)) (= (type $generated@@395) $generated@@66)) (= (type $generated@@396) $generated@@66)) (= (type $generated@@397) ($generated@@78 $generated@@79 $generated@@80))) (= ($generated@@76 $generated@@394 ($generated@@391 $generated@@395 $generated@@396) $generated@@397) (forall (($generated@@398 T@U) ) (!  (=> (and (= (type $generated@@398) $generated@@154) ($generated@@0 ($generated@@83 ($generated@@287 $generated@@394) $generated@@398))) (and ($generated@@247 ($generated@@83 ($generated@@366 $generated@@394) $generated@@398) $generated@@396 $generated@@397) ($generated@@247 $generated@@398 $generated@@395 $generated@@397)))
 :pattern ( ($generated@@83 ($generated@@366 $generated@@394) $generated@@398))
 :pattern ( ($generated@@83 ($generated@@287 $generated@@394) $generated@@398))
))))
 :pattern ( ($generated@@76 $generated@@394 ($generated@@391 $generated@@395 $generated@@396) $generated@@397))
)))
(assert (forall (($generated@@400 T@U) ($generated@@401 T@U) ) (! (= (type ($generated@@399 $generated@@400 $generated@@401)) $generated@@66)
 :pattern ( ($generated@@399 $generated@@400 $generated@@401))
)))
(assert (forall (($generated@@402 T@U) ($generated@@403 T@U) ($generated@@404 T@U) ($generated@@405 T@U) ) (!  (=> (and (and (and (= (type $generated@@402) ($generated@@307 $generated@@154 $generated@@154)) (= (type $generated@@403) $generated@@66)) (= (type $generated@@404) $generated@@66)) (= (type $generated@@405) ($generated@@78 $generated@@79 $generated@@80))) (= ($generated@@76 $generated@@402 ($generated@@399 $generated@@403 $generated@@404) $generated@@405) (forall (($generated@@406 T@U) ) (!  (=> (and (= (type $generated@@406) $generated@@154) ($generated@@0 ($generated@@83 ($generated@@305 $generated@@402) $generated@@406))) (and ($generated@@247 ($generated@@83 ($generated@@374 $generated@@402) $generated@@406) $generated@@404 $generated@@405) ($generated@@247 $generated@@406 $generated@@403 $generated@@405)))
 :pattern ( ($generated@@83 ($generated@@374 $generated@@402) $generated@@406))
 :pattern ( ($generated@@83 ($generated@@305 $generated@@402) $generated@@406))
))))
 :pattern ( ($generated@@76 $generated@@402 ($generated@@399 $generated@@403 $generated@@404) $generated@@405))
)))
(assert (forall (($generated@@407 T@U) ($generated@@408 T@U) ($generated@@409 T@U) ) (!  (=> (and (and (and (and (= (type $generated@@407) ($generated@@78 $generated@@79 $generated@@80)) (= (type $generated@@408) ($generated@@78 $generated@@79 $generated@@80))) (= (type $generated@@409) ($generated@@78 $generated@@79 $generated@@80))) (not (= $generated@@407 $generated@@409))) (and ($generated@@134 $generated@@407 $generated@@408) ($generated@@134 $generated@@408 $generated@@409))) ($generated@@134 $generated@@407 $generated@@409))
 :pattern ( ($generated@@134 $generated@@407 $generated@@408) ($generated@@134 $generated@@408 $generated@@409))
)))
(assert (forall (($generated@@411 T@T) ) (! (= (type ($generated@@410 $generated@@411)) ($generated@@78 $generated@@411 $generated@@4))
 :pattern ( ($generated@@410 $generated@@411))
)))
(assert (forall (($generated@@412 T@U) ) (! (let (($generated@@413 ($generated@@309 (type $generated@@412))))
(let (($generated@@414 ($generated@@308 (type $generated@@412))))
 (=> (= (type $generated@@412) ($generated@@307 $generated@@414 $generated@@413)) (= (= $generated@@412 ($generated@@306 $generated@@414 $generated@@413)) (= ($generated@@305 $generated@@412) ($generated@@410 $generated@@414))))))
 :pattern ( ($generated@@305 $generated@@412))
)))
(assert (forall (($generated@@415 T@U) ) (! (let (($generated@@416 ($generated@@309 (type $generated@@415))))
(let (($generated@@417 ($generated@@308 (type $generated@@415))))
 (=> (= (type $generated@@415) ($generated@@307 $generated@@417 $generated@@416)) (= (= $generated@@415 ($generated@@306 $generated@@417 $generated@@416)) (= ($generated@@345 $generated@@415) ($generated@@410 $generated@@416))))))
 :pattern ( ($generated@@345 $generated@@415))
)))
(assert (forall (($generated@@418 T@U) ) (! (let (($generated@@419 ($generated@@309 (type $generated@@418))))
(let (($generated@@420 ($generated@@308 (type $generated@@418))))
 (=> (= (type $generated@@418) ($generated@@307 $generated@@420 $generated@@419)) (= (= $generated@@418 ($generated@@306 $generated@@420 $generated@@419)) (= ($generated@@373 $generated@@418) ($generated@@410 $generated@@154))))))
 :pattern ( ($generated@@373 $generated@@418))
)))
(assert (forall (($generated@@421 T@U) ) (! (let (($generated@@422 ($generated@@291 (type $generated@@421))))
(let (($generated@@423 ($generated@@290 (type $generated@@421))))
 (=> (= (type $generated@@421) ($generated@@289 $generated@@423 $generated@@422)) (or (= $generated@@421 ($generated@@288 $generated@@423 $generated@@422)) (exists (($generated@@424 T@U) ($generated@@425 T@U) ) (!  (and (and (= (type $generated@@424) $generated@@154) (= (type $generated@@425) $generated@@154)) ($generated@@0 ($generated@@83 ($generated@@365 $generated@@421) ($generated@@268 ($generated@@220 $generated@@424 $generated@@425)))))
 :no-pattern (type $generated@@424)
 :no-pattern (type $generated@@425)
 :no-pattern ($generated $generated@@424)
 :no-pattern ($generated@@0 $generated@@424)
 :no-pattern ($generated $generated@@425)
 :no-pattern ($generated@@0 $generated@@425)
))))))
 :pattern ( ($generated@@365 $generated@@421))
)))
(assert (forall (($generated@@426 T@U) ) (! (let (($generated@@427 ($generated@@309 (type $generated@@426))))
(let (($generated@@428 ($generated@@308 (type $generated@@426))))
 (=> (= (type $generated@@426) ($generated@@307 $generated@@428 $generated@@427)) (or (= $generated@@426 ($generated@@306 $generated@@428 $generated@@427)) (exists (($generated@@429 T@U) ($generated@@430 T@U) ) (!  (and (and (= (type $generated@@429) $generated@@154) (= (type $generated@@430) $generated@@154)) ($generated@@0 ($generated@@83 ($generated@@373 $generated@@426) ($generated@@268 ($generated@@220 $generated@@429 $generated@@430)))))
 :no-pattern (type $generated@@429)
 :no-pattern (type $generated@@430)
 :no-pattern ($generated $generated@@429)
 :no-pattern ($generated@@0 $generated@@429)
 :no-pattern ($generated $generated@@430)
 :no-pattern ($generated@@0 $generated@@430)
))))))
 :pattern ( ($generated@@373 $generated@@426))
)))
(assert (forall (($generated@@431 T@U) ) (!  (=> (and (= (type $generated@@431) $generated@@154) ($generated@@221 $generated@@431 $generated@@46)) (and (= ($generated@@268 ($generated@@326 $generated@@2 $generated@@431)) $generated@@431) ($generated@@141 ($generated@@326 $generated@@2 $generated@@431) $generated@@46)))
 :pattern ( ($generated@@221 $generated@@431 $generated@@46))
)))
(assert (forall (($generated@@432 T@U) ) (!  (=> (and (= (type $generated@@432) $generated@@154) ($generated@@221 $generated@@432 $generated@@47)) (and (= ($generated@@268 ($generated@@326 $generated@@3 $generated@@432)) $generated@@432) ($generated@@141 ($generated@@326 $generated@@3 $generated@@432) $generated@@47)))
 :pattern ( ($generated@@221 $generated@@432 $generated@@47))
)))
(assert (forall (($generated@@433 T@U) ) (!  (=> (and (= (type $generated@@433) $generated@@154) ($generated@@221 $generated@@433 $generated@@44)) (and (= ($generated@@268 ($generated@@326 $generated@@4 $generated@@433)) $generated@@433) ($generated@@141 ($generated@@326 $generated@@4 $generated@@433) $generated@@44)))
 :pattern ( ($generated@@221 $generated@@433 $generated@@44))
)))
(assert (= ($generated@@1 $generated@@434) 20))
(assert (forall (($generated@@435 T@U) ) (!  (=> (and (= (type $generated@@435) $generated@@154) ($generated@@221 $generated@@435 $generated@@45)) (and (= ($generated@@268 ($generated@@326 $generated@@434 $generated@@435)) $generated@@435) ($generated@@141 ($generated@@326 $generated@@434 $generated@@435) $generated@@45)))
 :pattern ( ($generated@@221 $generated@@435 $generated@@45))
)))
(assert (forall (($generated@@436 T@U) ($generated@@437 T@U) ) (!  (=> (= (type $generated@@437) $generated@@66) (= ($generated@@221 ($generated@@268 $generated@@436) $generated@@437) ($generated@@141 $generated@@436 $generated@@437)))
 :pattern ( ($generated@@221 ($generated@@268 $generated@@436) $generated@@437))
)))
(assert (forall (($generated@@438 T@U) ) (! (let (($generated@@439 ($generated@@81 (type $generated@@438))))
 (=> (= (type $generated@@438) ($generated@@78 $generated@@439 $generated@@2)) (<= 0 ($generated@@281 $generated@@438))))
 :pattern ( ($generated@@281 $generated@@438))
)))
(assert (forall (($generated@@440 T@U) ) (! (let (($generated@@441 ($generated@@262 (type $generated@@440))))
 (=> (= (type $generated@@440) ($generated@@261 $generated@@441)) (<= 0 ($generated@@260 $generated@@440))))
 :pattern ( ($generated@@260 $generated@@440))
)))
(assert (forall (($generated@@443 T@U) ) (! (= (type ($generated@@442 $generated@@443)) $generated@@66)
 :pattern ( ($generated@@442 $generated@@443))
)))
(assert (forall (($generated@@444 T@U) ($generated@@445 T@U) ) (!  (=> (and (= (type $generated@@444) $generated@@66) (= (type $generated@@445) $generated@@66)) (= ($generated@@442 ($generated@@391 $generated@@444 $generated@@445)) $generated@@444))
 :pattern ( ($generated@@391 $generated@@444 $generated@@445))
)))
(assert (forall (($generated@@447 T@U) ) (! (= (type ($generated@@446 $generated@@447)) $generated@@66)
 :pattern ( ($generated@@446 $generated@@447))
)))
(assert (forall (($generated@@448 T@U) ($generated@@449 T@U) ) (!  (=> (and (= (type $generated@@448) $generated@@66) (= (type $generated@@449) $generated@@66)) (= ($generated@@446 ($generated@@391 $generated@@448 $generated@@449)) $generated@@449))
 :pattern ( ($generated@@391 $generated@@448 $generated@@449))
)))
(assert (forall (($generated@@450 T@U) ($generated@@451 T@U) ) (!  (=> (and (= (type $generated@@450) $generated@@66) (= (type $generated@@451) $generated@@66)) (= ($generated@@74 ($generated@@391 $generated@@450 $generated@@451)) $generated@@58))
 :pattern ( ($generated@@391 $generated@@450 $generated@@451))
)))
(assert (forall (($generated@@453 T@U) ) (! (= (type ($generated@@452 $generated@@453)) $generated@@66)
 :pattern ( ($generated@@452 $generated@@453))
)))
(assert (forall (($generated@@454 T@U) ($generated@@455 T@U) ) (!  (=> (and (= (type $generated@@454) $generated@@66) (= (type $generated@@455) $generated@@66)) (= ($generated@@452 ($generated@@399 $generated@@454 $generated@@455)) $generated@@454))
 :pattern ( ($generated@@399 $generated@@454 $generated@@455))
)))
(assert (forall (($generated@@457 T@U) ) (! (= (type ($generated@@456 $generated@@457)) $generated@@66)
 :pattern ( ($generated@@456 $generated@@457))
)))
(assert (forall (($generated@@458 T@U) ($generated@@459 T@U) ) (!  (=> (and (= (type $generated@@458) $generated@@66) (= (type $generated@@459) $generated@@66)) (= ($generated@@456 ($generated@@399 $generated@@458 $generated@@459)) $generated@@459))
 :pattern ( ($generated@@399 $generated@@458 $generated@@459))
)))
(assert (forall (($generated@@460 T@U) ($generated@@461 T@U) ) (!  (=> (and (= (type $generated@@460) $generated@@66) (= (type $generated@@461) $generated@@66)) (= ($generated@@74 ($generated@@399 $generated@@460 $generated@@461)) $generated@@59))
 :pattern ( ($generated@@399 $generated@@460 $generated@@461))
)))
(assert (forall (($generated@@462 T@U) ($generated@@463 T@U) ) (!  (=> (and (= (type $generated@@462) $generated@@154) (= (type $generated@@463) $generated@@154)) (= ($generated@@253 ($generated@@220 $generated@@462 $generated@@463)) $generated@@62))
 :pattern ( ($generated@@220 $generated@@462 $generated@@463))
)))
(assert (forall (($generated@@465 T@U) ) (! (= (type ($generated@@464 $generated@@465)) $generated@@66)
 :pattern ( ($generated@@464 $generated@@465))
)))
(assert (forall (($generated@@466 T@U) ($generated@@467 T@U) ) (!  (=> (and (= (type $generated@@466) $generated@@66) (= (type $generated@@467) $generated@@66)) (= ($generated@@464 ($generated@@144 $generated@@466 $generated@@467)) $generated@@466))
 :pattern ( ($generated@@144 $generated@@466 $generated@@467))
)))
(assert (forall (($generated@@469 T@U) ) (! (= (type ($generated@@468 $generated@@469)) $generated@@66)
 :pattern ( ($generated@@468 $generated@@469))
)))
(assert (forall (($generated@@470 T@U) ($generated@@471 T@U) ) (!  (=> (and (= (type $generated@@470) $generated@@66) (= (type $generated@@471) $generated@@66)) (= ($generated@@468 ($generated@@144 $generated@@470 $generated@@471)) $generated@@471))
 :pattern ( ($generated@@144 $generated@@470 $generated@@471))
)))
(assert (forall (($generated@@472 T@U) ($generated@@473 T@U) ) (!  (=> (and (= (type $generated@@472) $generated@@154) (= (type $generated@@473) $generated@@154)) (= ($generated@@152 ($generated@@220 $generated@@472 $generated@@473)) $generated@@472))
 :pattern ( ($generated@@220 $generated@@472 $generated@@473))
)))
(assert (forall (($generated@@474 T@U) ($generated@@475 T@U) ) (!  (=> (and (= (type $generated@@474) $generated@@154) (= (type $generated@@475) $generated@@154)) (= ($generated@@153 ($generated@@220 $generated@@474 $generated@@475)) $generated@@475))
 :pattern ( ($generated@@220 $generated@@474 $generated@@475))
)))
(assert  (and (forall (($generated@@478 T@U) ) (! (= (type ($generated@@476 $generated@@478)) $generated@@66)
 :pattern ( ($generated@@476 $generated@@478))
)) (forall (($generated@@479 T@U) ($generated@@480 Int) ) (! (let (($generated@@481 ($generated@@262 (type $generated@@479))))
(= (type ($generated@@477 $generated@@479 $generated@@480)) $generated@@481))
 :pattern ( ($generated@@477 $generated@@479 $generated@@480))
))))
(assert (forall (($generated@@482 T@U) ($generated@@483 T@U) ($generated@@484 T@U) ) (!  (=> (and (and (= (type $generated@@482) ($generated@@261 $generated@@154)) (= (type $generated@@483) $generated@@66)) (= (type $generated@@484) ($generated@@78 $generated@@79 $generated@@80))) (= ($generated@@76 $generated@@482 ($generated@@476 $generated@@483) $generated@@484) (forall (($generated@@485 Int) ) (!  (=> (and (<= 0 $generated@@485) (< $generated@@485 ($generated@@260 $generated@@482))) ($generated@@247 ($generated@@477 $generated@@482 $generated@@485) $generated@@483 $generated@@484))
 :pattern ( ($generated@@477 $generated@@482 $generated@@485))
))))
 :pattern ( ($generated@@76 $generated@@482 ($generated@@476 $generated@@483) $generated@@484))
)))
(assert (forall (($generated@@487 Int) ) (! (= ($generated@@486 ($generated@@77 $generated@@487)) $generated@@487)
 :pattern ( ($generated@@77 $generated@@487))
)))
(assert (forall (($generated@@489 T@U) ) (! (= (type ($generated@@488 $generated@@489)) $generated@@66)
 :pattern ( ($generated@@488 $generated@@489))
)))
(assert (forall (($generated@@490 T@U) ) (!  (=> (= (type $generated@@490) $generated@@66) (= ($generated@@488 ($generated@@230 $generated@@490)) $generated@@490))
 :pattern ( ($generated@@230 $generated@@490))
)))
(assert (forall (($generated@@491 T@U) ) (!  (=> (= (type $generated@@491) $generated@@66) (= ($generated@@74 ($generated@@230 $generated@@491)) $generated@@54))
 :pattern ( ($generated@@230 $generated@@491))
)))
(assert (forall (($generated@@493 T@U) ) (! (= (type ($generated@@492 $generated@@493)) $generated@@66)
 :pattern ( ($generated@@492 $generated@@493))
)))
(assert (forall (($generated@@494 T@U) ) (!  (=> (= (type $generated@@494) $generated@@66) (= ($generated@@492 ($generated@@235 $generated@@494)) $generated@@494))
 :pattern ( ($generated@@235 $generated@@494))
)))
(assert (forall (($generated@@495 T@U) ) (!  (=> (= (type $generated@@495) $generated@@66) (= ($generated@@74 ($generated@@235 $generated@@495)) $generated@@55))
 :pattern ( ($generated@@235 $generated@@495))
)))
(assert (forall (($generated@@497 T@U) ) (! (= (type ($generated@@496 $generated@@497)) $generated@@66)
 :pattern ( ($generated@@496 $generated@@497))
)))
(assert (forall (($generated@@498 T@U) ) (!  (=> (= (type $generated@@498) $generated@@66) (= ($generated@@496 ($generated@@159 $generated@@498)) $generated@@498))
 :pattern ( ($generated@@159 $generated@@498))
)))
(assert (forall (($generated@@499 T@U) ) (!  (=> (= (type $generated@@499) $generated@@66) (= ($generated@@74 ($generated@@159 $generated@@499)) $generated@@56))
 :pattern ( ($generated@@159 $generated@@499))
)))
(assert (forall (($generated@@501 T@U) ) (! (= (type ($generated@@500 $generated@@501)) $generated@@66)
 :pattern ( ($generated@@500 $generated@@501))
)))
(assert (forall (($generated@@502 T@U) ) (!  (=> (= (type $generated@@502) $generated@@66) (= ($generated@@500 ($generated@@476 $generated@@502)) $generated@@502))
 :pattern ( ($generated@@476 $generated@@502))
)))
(assert (forall (($generated@@503 T@U) ) (!  (=> (= (type $generated@@503) $generated@@66) (= ($generated@@74 ($generated@@476 $generated@@503)) $generated@@57))
 :pattern ( ($generated@@476 $generated@@503))
)))
(assert (forall (($generated@@504 T@U) ) (! (let (($generated@@505 (type $generated@@504)))
(= ($generated@@326 $generated@@505 ($generated@@268 $generated@@504)) $generated@@504))
 :pattern ( ($generated@@268 $generated@@504))
)))
(assert (forall (($generated@@506 T@U) ($generated@@507 T@U) ($generated@@508 T@U) ) (!  (=> (and (and (= (type $generated@@506) ($generated@@289 $generated@@154 $generated@@154)) (= (type $generated@@507) $generated@@66)) (= (type $generated@@508) $generated@@66)) (= ($generated@@141 $generated@@506 ($generated@@391 $generated@@507 $generated@@508)) (forall (($generated@@509 T@U) ) (!  (=> (and (= (type $generated@@509) $generated@@154) ($generated@@0 ($generated@@83 ($generated@@287 $generated@@506) $generated@@509))) (and ($generated@@221 ($generated@@83 ($generated@@366 $generated@@506) $generated@@509) $generated@@508) ($generated@@221 $generated@@509 $generated@@507)))
 :pattern ( ($generated@@83 ($generated@@366 $generated@@506) $generated@@509))
 :pattern ( ($generated@@83 ($generated@@287 $generated@@506) $generated@@509))
))))
 :pattern ( ($generated@@141 $generated@@506 ($generated@@391 $generated@@507 $generated@@508)))
)))
(assert (forall (($generated@@510 T@U) ($generated@@511 T@U) ($generated@@512 T@U) ) (!  (=> (and (and (= (type $generated@@510) ($generated@@307 $generated@@154 $generated@@154)) (= (type $generated@@511) $generated@@66)) (= (type $generated@@512) $generated@@66)) (= ($generated@@141 $generated@@510 ($generated@@399 $generated@@511 $generated@@512)) (forall (($generated@@513 T@U) ) (!  (=> (and (= (type $generated@@513) $generated@@154) ($generated@@0 ($generated@@83 ($generated@@305 $generated@@510) $generated@@513))) (and ($generated@@221 ($generated@@83 ($generated@@374 $generated@@510) $generated@@513) $generated@@512) ($generated@@221 $generated@@513 $generated@@511)))
 :pattern ( ($generated@@83 ($generated@@374 $generated@@510) $generated@@513))
 :pattern ( ($generated@@83 ($generated@@305 $generated@@510) $generated@@513))
))))
 :pattern ( ($generated@@141 $generated@@510 ($generated@@399 $generated@@511 $generated@@512)))
)))
(assert (forall (($generated@@516 T@U) ($generated@@517 T@U) ) (!  (=> (and (= (type $generated@@516) $generated@@154) (= (type $generated@@517) $generated@@154)) (< ($generated@@514 $generated@@516) ($generated@@515 ($generated@@220 $generated@@516 $generated@@517))))
 :pattern ( ($generated@@220 $generated@@516 $generated@@517))
)))
(assert (forall (($generated@@518 T@U) ($generated@@519 T@U) ) (!  (=> (and (= (type $generated@@518) $generated@@154) (= (type $generated@@519) $generated@@154)) (< ($generated@@514 $generated@@519) ($generated@@515 ($generated@@220 $generated@@518 $generated@@519))))
 :pattern ( ($generated@@220 $generated@@518 $generated@@519))
)))
(assert (forall (($generated@@520 T@U) ($generated@@521 T@U) ($generated@@522 T@U) ) (!  (=> (and (and (and (= (type $generated@@520) $generated@@154) (= (type $generated@@521) $generated@@66)) (= (type $generated@@522) $generated@@66)) ($generated@@221 $generated@@520 ($generated@@391 $generated@@521 $generated@@522))) (and (= ($generated@@268 ($generated@@326 ($generated@@289 $generated@@154 $generated@@154) $generated@@520)) $generated@@520) ($generated@@141 ($generated@@326 ($generated@@289 $generated@@154 $generated@@154) $generated@@520) ($generated@@391 $generated@@521 $generated@@522))))
 :pattern ( ($generated@@221 $generated@@520 ($generated@@391 $generated@@521 $generated@@522)))
)))
(assert (forall (($generated@@523 T@U) ($generated@@524 T@U) ($generated@@525 T@U) ) (!  (=> (and (and (and (= (type $generated@@523) $generated@@154) (= (type $generated@@524) $generated@@66)) (= (type $generated@@525) $generated@@66)) ($generated@@221 $generated@@523 ($generated@@399 $generated@@524 $generated@@525))) (and (= ($generated@@268 ($generated@@326 ($generated@@307 $generated@@154 $generated@@154) $generated@@523)) $generated@@523) ($generated@@141 ($generated@@326 ($generated@@307 $generated@@154 $generated@@154) $generated@@523) ($generated@@399 $generated@@524 $generated@@525))))
 :pattern ( ($generated@@221 $generated@@523 ($generated@@399 $generated@@524 $generated@@525)))
)))
(assert (forall (($generated@@526 T@U) ($generated@@527 T@U) ($generated@@528 T@U) ) (!  (=> (and (and (and (= (type $generated@@526) $generated@@66) (= (type $generated@@527) $generated@@66)) (= (type $generated@@528) $generated@@154)) ($generated@@221 $generated@@528 ($generated@@144 $generated@@526 $generated@@527))) (and (= ($generated@@268 ($generated@@326 $generated@@145 $generated@@528)) $generated@@528) ($generated@@141 ($generated@@326 $generated@@145 $generated@@528) ($generated@@144 $generated@@526 $generated@@527))))
 :pattern ( ($generated@@221 $generated@@528 ($generated@@144 $generated@@526 $generated@@527)))
)))
(assert (forall (($generated@@529 T@U) ) (! (let (($generated@@530 (type $generated@@529)))
 (not ($generated@@0 ($generated@@83 ($generated@@410 $generated@@530) $generated@@529))))
 :pattern ( (let (($generated@@530 (type $generated@@529)))
($generated@@83 ($generated@@410 $generated@@530) $generated@@529)))
)))
(assert (forall (($generated@@532 T@U) ) (! (= (type ($generated@@531 $generated@@532)) $generated@@71)
 :pattern ( ($generated@@531 $generated@@532))
)))
(assert (forall (($generated@@533 T@U) ($generated@@534 T@U) ) (!  (=> (and (= (type $generated@@533) $generated@@66) (= (type $generated@@534) $generated@@66)) (and (= ($generated@@74 ($generated@@144 $generated@@533 $generated@@534)) $generated@@63) (= ($generated@@531 ($generated@@144 $generated@@533 $generated@@534)) $generated@@65)))
 :pattern ( ($generated@@144 $generated@@533 $generated@@534))
)))
(assert (forall (($generated@@535 T@U) ) (!  (=> (= (type $generated@@535) $generated@@145) (= ($generated@@514 ($generated@@268 $generated@@535)) ($generated@@515 $generated@@535)))
 :pattern ( ($generated@@514 ($generated@@268 $generated@@535)))
)))
(assert (forall (($generated@@536 T@U) ) (!  (=> (and (= (type $generated@@536) $generated@@154) ($generated@@221 $generated@@536 ($generated@@77 0))) (and (= ($generated@@268 ($generated@@326 $generated@@2 $generated@@536)) $generated@@536) ($generated@@141 ($generated@@326 ($generated@@78 $generated@@154 $generated@@4) $generated@@536) ($generated@@77 0))))
 :pattern ( ($generated@@221 $generated@@536 ($generated@@77 0)))
)))
(assert (forall (($generated@@537 T@U) ($generated@@538 T@U) ) (!  (=> (and (and (= (type $generated@@537) $generated@@154) (= (type $generated@@538) $generated@@66)) ($generated@@221 $generated@@537 ($generated@@230 $generated@@538))) (and (= ($generated@@268 ($generated@@326 ($generated@@78 $generated@@154 $generated@@4) $generated@@537)) $generated@@537) ($generated@@141 ($generated@@326 ($generated@@78 $generated@@154 $generated@@4) $generated@@537) ($generated@@230 $generated@@538))))
 :pattern ( ($generated@@221 $generated@@537 ($generated@@230 $generated@@538)))
)))
(assert (forall (($generated@@539 T@U) ($generated@@540 T@U) ) (!  (=> (and (and (= (type $generated@@539) $generated@@154) (= (type $generated@@540) $generated@@66)) ($generated@@221 $generated@@539 ($generated@@235 $generated@@540))) (and (= ($generated@@268 ($generated@@326 ($generated@@78 $generated@@154 $generated@@4) $generated@@539)) $generated@@539) ($generated@@141 ($generated@@326 ($generated@@78 $generated@@154 $generated@@4) $generated@@539) ($generated@@235 $generated@@540))))
 :pattern ( ($generated@@221 $generated@@539 ($generated@@235 $generated@@540)))
)))
(assert (forall (($generated@@541 T@U) ($generated@@542 T@U) ) (!  (=> (and (and (= (type $generated@@541) $generated@@154) (= (type $generated@@542) $generated@@66)) ($generated@@221 $generated@@541 ($generated@@159 $generated@@542))) (and (= ($generated@@268 ($generated@@326 ($generated@@78 $generated@@154 $generated@@2) $generated@@541)) $generated@@541) ($generated@@141 ($generated@@326 ($generated@@78 $generated@@154 $generated@@2) $generated@@541) ($generated@@159 $generated@@542))))
 :pattern ( ($generated@@221 $generated@@541 ($generated@@159 $generated@@542)))
)))
(assert (forall (($generated@@543 T@U) ($generated@@544 T@U) ) (!  (=> (and (and (= (type $generated@@543) $generated@@154) (= (type $generated@@544) $generated@@66)) ($generated@@221 $generated@@543 ($generated@@476 $generated@@544))) (and (= ($generated@@268 ($generated@@326 ($generated@@261 $generated@@154) $generated@@543)) $generated@@543) ($generated@@141 ($generated@@326 ($generated@@261 $generated@@154) $generated@@543) ($generated@@476 $generated@@544))))
 :pattern ( ($generated@@221 $generated@@543 ($generated@@476 $generated@@544)))
)))
(assert (= ($generated@@74 $generated@@138) $generated@@61))
(assert (= ($generated@@531 $generated@@138) $generated@@64))
(assert (forall (($generated@@545 T@U) ($generated@@546 T@U) ($generated@@547 T@U) ) (!  (=> (and (and (= (type $generated@@545) ($generated@@78 $generated@@154 $generated@@2)) (= (type $generated@@546) $generated@@66)) (= (type $generated@@547) ($generated@@78 $generated@@79 $generated@@80))) (= ($generated@@76 $generated@@545 ($generated@@159 $generated@@546) $generated@@547) (forall (($generated@@548 T@U) ) (!  (=> (and (= (type $generated@@548) $generated@@154) (< 0 ($generated ($generated@@83 $generated@@545 $generated@@548)))) ($generated@@247 $generated@@548 $generated@@546 $generated@@547))
 :pattern ( ($generated@@83 $generated@@545 $generated@@548))
))))
 :pattern ( ($generated@@76 $generated@@545 ($generated@@159 $generated@@546) $generated@@547))
)))
(assert (forall (($generated@@549 T@U) ($generated@@550 T@U) ($generated@@551 T@U) ) (!  (=> (and (and (and (= (type $generated@@549) $generated@@145) (= (type $generated@@550) $generated@@66)) (= (type $generated@@551) ($generated@@78 $generated@@79 $generated@@80))) (and ($generated@@246 $generated@@551) (and ($generated@@143 $generated@@549) (exists (($generated@@552 T@U) ) (!  (and (= (type $generated@@552) $generated@@66) ($generated@@76 $generated@@549 ($generated@@144 $generated@@550 $generated@@552) $generated@@551))
 :pattern ( ($generated@@76 $generated@@549 ($generated@@144 $generated@@550 $generated@@552) $generated@@551))
))))) ($generated@@247 ($generated@@152 $generated@@549) $generated@@550 $generated@@551))
 :pattern ( ($generated@@247 ($generated@@152 $generated@@549) $generated@@550 $generated@@551))
)))
(assert (forall (($generated@@553 T@U) ($generated@@554 T@U) ($generated@@555 T@U) ) (!  (=> (and (and (and (= (type $generated@@553) $generated@@145) (= (type $generated@@554) $generated@@66)) (= (type $generated@@555) ($generated@@78 $generated@@79 $generated@@80))) (and ($generated@@246 $generated@@555) (and ($generated@@143 $generated@@553) (exists (($generated@@556 T@U) ) (!  (and (= (type $generated@@556) $generated@@66) ($generated@@76 $generated@@553 ($generated@@144 $generated@@556 $generated@@554) $generated@@555))
 :pattern ( ($generated@@76 $generated@@553 ($generated@@144 $generated@@556 $generated@@554) $generated@@555))
))))) ($generated@@247 ($generated@@153 $generated@@553) $generated@@554 $generated@@555))
 :pattern ( ($generated@@247 ($generated@@153 $generated@@553) $generated@@554 $generated@@555))
)))
(assert (forall (($generated@@557 T@U) ($generated@@558 T@U) ) (!  (=> (and (= (type $generated@@557) $generated@@154) (= (type $generated@@558) $generated@@154)) (= ($generated@@220 ($generated@@242 $generated@@557) ($generated@@242 $generated@@558)) ($generated@@242 ($generated@@220 $generated@@557 $generated@@558))))
 :pattern ( ($generated@@220 ($generated@@242 $generated@@557) ($generated@@242 $generated@@558)))
)))
(assert (forall (($generated@@559 Int) ) (! (= ($generated@@268 ($generated@@8 ($generated@@240 $generated@@559))) ($generated@@242 ($generated@@268 ($generated@@8 $generated@@559))))
 :pattern ( ($generated@@268 ($generated@@8 ($generated@@240 $generated@@559))))
)))
(assert (forall (($generated@@560 T@U) ) (! (= ($generated@@268 ($generated@@242 $generated@@560)) ($generated@@242 ($generated@@268 $generated@@560)))
 :pattern ( ($generated@@268 ($generated@@242 $generated@@560)))
)))
(assert (forall (($generated@@561 T@U) ) (! (let (($generated@@562 ($generated@@262 (type $generated@@561))))
 (=> (and (= (type $generated@@561) ($generated@@261 $generated@@562)) (= ($generated@@260 $generated@@561) 0)) (= $generated@@561 ($generated@@259 $generated@@562))))
 :pattern ( ($generated@@260 $generated@@561))
)))
(assert (forall (($generated@@563 T@U) ($generated@@564 T@U) ($generated@@565 T@U) ) (! (let (($generated@@566 (type $generated@@564)))
 (=> (and (and (= (type $generated@@563) ($generated@@78 $generated@@566 $generated@@2)) (= (type $generated@@565) $generated@@2)) (<= 0 ($generated $generated@@565))) (= ($generated@@281 ($generated@@84 $generated@@563 $generated@@564 $generated@@565)) (+ (- ($generated@@281 $generated@@563) ($generated ($generated@@83 $generated@@563 $generated@@564))) ($generated $generated@@565)))))
 :pattern ( ($generated@@281 ($generated@@84 $generated@@563 $generated@@564 $generated@@565)))
)))
(assert (forall (($generated@@567 T@U) ($generated@@568 T@U) ) (!  (=> (and (= (type $generated@@567) ($generated@@78 $generated@@79 $generated@@80)) (= (type $generated@@568) $generated@@2)) ($generated@@76 $generated@@568 $generated@@46 $generated@@567))
 :pattern ( ($generated@@76 $generated@@568 $generated@@46 $generated@@567))
)))
(assert (forall (($generated@@569 T@U) ($generated@@570 T@U) ) (!  (=> (and (= (type $generated@@569) ($generated@@78 $generated@@79 $generated@@80)) (= (type $generated@@570) $generated@@3)) ($generated@@76 $generated@@570 $generated@@47 $generated@@569))
 :pattern ( ($generated@@76 $generated@@570 $generated@@47 $generated@@569))
)))
(assert (forall (($generated@@571 T@U) ($generated@@572 T@U) ) (!  (=> (and (= (type $generated@@571) ($generated@@78 $generated@@79 $generated@@80)) (= (type $generated@@572) $generated@@4)) ($generated@@76 $generated@@572 $generated@@44 $generated@@571))
 :pattern ( ($generated@@76 $generated@@572 $generated@@44 $generated@@571))
)))
(assert (forall (($generated@@573 T@U) ($generated@@574 T@U) ) (!  (=> (and (= (type $generated@@573) ($generated@@78 $generated@@79 $generated@@80)) (= (type $generated@@574) $generated@@434)) ($generated@@76 $generated@@574 $generated@@45 $generated@@573))
 :pattern ( ($generated@@76 $generated@@574 $generated@@45 $generated@@573))
)))
(assert (forall (($generated@@575 T@U) ($generated@@576 T@U) ) (!  (=> (and (= (type $generated@@575) ($generated@@78 $generated@@79 $generated@@80)) (= (type $generated@@576) $generated@@154)) ($generated@@76 $generated@@576 $generated@@48 $generated@@575))
 :pattern ( ($generated@@76 $generated@@576 $generated@@48 $generated@@575))
)))
(assert (forall (($generated@@577 T@U) ($generated@@578 T@U) ) (!  (=> (and (= (type $generated@@577) ($generated@@261 $generated@@154)) (= (type $generated@@578) $generated@@66)) (= ($generated@@141 $generated@@577 ($generated@@476 $generated@@578)) (forall (($generated@@579 Int) ) (!  (=> (and (<= 0 $generated@@579) (< $generated@@579 ($generated@@260 $generated@@577))) ($generated@@221 ($generated@@477 $generated@@577 $generated@@579) $generated@@578))
 :pattern ( ($generated@@477 $generated@@577 $generated@@579))
))))
 :pattern ( ($generated@@141 $generated@@577 ($generated@@476 $generated@@578)))
)))
(assert (forall (($generated@@581 T@U) ($generated@@582 Int) ) (!  (=> (= (type $generated@@581) ($generated@@261 $generated@@154)) (=> (and (<= 0 $generated@@582) (< $generated@@582 ($generated@@260 $generated@@581))) (< ($generated@@515 ($generated@@326 $generated@@145 ($generated@@477 $generated@@581 $generated@@582))) ($generated@@580 $generated@@581))))
 :pattern ( ($generated@@515 ($generated@@326 $generated@@145 ($generated@@477 $generated@@581 $generated@@582))))
)))
(assert (forall (($generated@@583 T@U) ($generated@@584 T@U) ($generated@@585 T@U) ) (!  (=> (and (and (and (= (type $generated@@583) ($generated@@289 $generated@@154 $generated@@154)) (= (type $generated@@584) $generated@@66)) (= (type $generated@@585) $generated@@66)) ($generated@@141 $generated@@583 ($generated@@391 $generated@@584 $generated@@585))) (and (and ($generated@@141 ($generated@@287 $generated@@583) ($generated@@230 $generated@@584)) ($generated@@141 ($generated@@334 $generated@@583) ($generated@@230 $generated@@585))) ($generated@@141 ($generated@@365 $generated@@583) ($generated@@230 ($generated@@144 $generated@@584 $generated@@585)))))
 :pattern ( ($generated@@141 $generated@@583 ($generated@@391 $generated@@584 $generated@@585)))
)))
(assert (forall (($generated@@586 T@U) ($generated@@587 T@U) ($generated@@588 T@U) ) (!  (=> (and (and (and (= (type $generated@@586) ($generated@@307 $generated@@154 $generated@@154)) (= (type $generated@@587) $generated@@66)) (= (type $generated@@588) $generated@@66)) ($generated@@141 $generated@@586 ($generated@@399 $generated@@587 $generated@@588))) (and (and ($generated@@141 ($generated@@305 $generated@@586) ($generated@@235 $generated@@587)) ($generated@@141 ($generated@@345 $generated@@586) ($generated@@235 $generated@@588))) ($generated@@141 ($generated@@373 $generated@@586) ($generated@@235 ($generated@@144 $generated@@587 $generated@@588)))))
 :pattern ( ($generated@@141 $generated@@586 ($generated@@399 $generated@@587 $generated@@588)))
)))
(assert (forall (($generated@@589 T@U) ) (!  (=> (= (type $generated@@589) $generated@@2) ($generated@@141 $generated@@589 $generated@@46))
 :pattern ( ($generated@@141 $generated@@589 $generated@@46))
)))
(assert (forall (($generated@@590 T@U) ) (!  (=> (= (type $generated@@590) $generated@@3) ($generated@@141 $generated@@590 $generated@@47))
 :pattern ( ($generated@@141 $generated@@590 $generated@@47))
)))
(assert (forall (($generated@@591 T@U) ) (!  (=> (= (type $generated@@591) $generated@@4) ($generated@@141 $generated@@591 $generated@@44))
 :pattern ( ($generated@@141 $generated@@591 $generated@@44))
)))
(assert (forall (($generated@@592 T@U) ) (!  (=> (= (type $generated@@592) $generated@@434) ($generated@@141 $generated@@592 $generated@@45))
 :pattern ( ($generated@@141 $generated@@592 $generated@@45))
)))
(assert (forall (($generated@@593 T@U) ) (!  (=> (= (type $generated@@593) $generated@@154) ($generated@@141 $generated@@593 $generated@@48))
 :pattern ( ($generated@@141 $generated@@593 $generated@@48))
)))
(push 1)
(declare-fun ControlFlow (Int Int) Int)
(declare-fun $generated@@594 () Int)
(declare-fun $generated@@595 () Int)
(declare-fun $generated@@596 () Int)
(declare-fun $generated@@597 () Int)
(declare-fun $generated@@598 () Bool)
(declare-fun $generated@@599 () Int)
(declare-fun $generated@@600 () Int)
(declare-fun $generated@@601 () Int)
(declare-fun $generated@@602 () Int)
(declare-fun $generated@@603 () Int)
(declare-fun $generated@@604 () Int)
(declare-fun $generated@@605 () Int)
(declare-fun $generated@@606 () Int)
(declare-fun $generated@@607 () Bool)
(declare-fun $generated@@608 () T@U)
(declare-fun $generated@@609 () T@U)
(declare-fun $generated@@610 () T@U)
(declare-fun $generated@@611 () Int)
(declare-fun $generated@@612 () Int)
(declare-fun $generated@@613 () Int)
(declare-fun $generated@@614 (T@U) Bool)
(declare-fun $generated@@615 () Int)
(declare-fun $generated@@616 () Int)
(assert  (and (and (= (type $generated@@608) ($generated@@78 $generated@@79 $generated@@80)) (= (type $generated@@609) $generated@@79)) (= (type $generated@@610) ($generated@@166 $generated@@79 $generated@@4))))
(set-option :timeout 0)
(set-option :rlimit 0)
(assert (not
 (=> (= (ControlFlow 0 0) 39) (let (($generated@@617  (=> (= (ControlFlow 0 32) (- 0 31)) (= $generated@@594 ($generated@@240 25)))))
(let (($generated@@618  (=> (<= 25 $generated@@595) (=> (and (= $generated@@594 $generated@@595) (= (ControlFlow 0 33) 32)) $generated@@617))))
(let (($generated@@619 true))
(let (($generated@@620  (=> (and (or (and (<= $generated@@596 ($generated@@240 7)) (<= $generated@@596 $generated@@597)) (= $generated@@596 ($generated@@240 7))) (= (ControlFlow 0 21) 19)) $generated@@619)))
(let (($generated@@621  (=> (and (not (or (and (<= $generated@@596 ($generated@@240 7)) (<= $generated@@596 $generated@@597)) (= $generated@@596 ($generated@@240 7)))) (= (ControlFlow 0 20) 19)) $generated@@619)))
(let (($generated@@622  (=> (and (<= $generated@@596 ($generated@@240 7)) (<= $generated@@596 $generated@@597)) (and (=> (= (ControlFlow 0 23) 20) $generated@@621) (=> (= (ControlFlow 0 23) 21) $generated@@620)))))
(let (($generated@@623  (=> (not (and (<= $generated@@596 ($generated@@240 7)) (<= $generated@@596 $generated@@597))) (and (=> (= (ControlFlow 0 22) 20) $generated@@621) (=> (= (ControlFlow 0 22) 21) $generated@@620)))))
(let (($generated@@624  (=> (< ($generated@@240 7) $generated@@596) (and (=> (= (ControlFlow 0 25) 22) $generated@@623) (=> (= (ControlFlow 0 25) 23) $generated@@622)))))
(let (($generated@@625  (=> (<= $generated@@596 ($generated@@240 7)) (and (=> (= (ControlFlow 0 24) 22) $generated@@623) (=> (= (ControlFlow 0 24) 23) $generated@@622)))))
(let (($generated@@626  (=> (not $generated@@598) (and (=> (= (ControlFlow 0 26) 24) $generated@@625) (=> (= (ControlFlow 0 26) 25) $generated@@624)))))
(let (($generated@@627  (and (=> (= (ControlFlow 0 9) (- 0 10)) (or (<= 0 $generated@@599) (= (- 25 $generated@@600) $generated@@599))) (=> (or (<= 0 $generated@@599) (= (- 25 $generated@@600) $generated@@599)) (=> (= (ControlFlow 0 9) (- 0 8)) (< (- 25 $generated@@600) $generated@@599))))))
(let (($generated@@628  (and (=> (= (ControlFlow 0 13) (- 0 14)) ($generated@@141 ($generated@@8 (+ $generated@@595 1)) $generated@@138)) (=> ($generated@@141 ($generated@@8 (+ $generated@@595 1)) $generated@@138) (=> (= $generated@@601 (+ $generated@@595 1)) (=> (and (= $generated@@600 $generated@@601) (= (ControlFlow 0 13) 9)) $generated@@627))))))
(let (($generated@@629  (=> (and (= $generated@@596 ($generated@@240 7)) (= (ControlFlow 0 16) 13)) $generated@@628)))
(let (($generated@@630  (=> (and (<= $generated@@602 $generated@@596) (= (ControlFlow 0 15) 13)) $generated@@628)))
(let (($generated@@631  (=> (and (and (= $generated@@596 $generated@@597) (= $generated@@603 ($generated@@240 8))) (and (= $generated@@600 $generated@@595) (= (ControlFlow 0 11) 9))) $generated@@627)))
(let (($generated@@632  (=> (and (not (= $generated@@596 $generated@@597)) (= $generated@@604 (+ $generated@@596 1))) (and (=> (= (ControlFlow 0 5) (- 0 7)) (or (<= 0 $generated@@605) (= (- $generated@@602 $generated@@604) $generated@@605))) (=> (or (<= 0 $generated@@605) (= (- $generated@@602 $generated@@604) $generated@@605)) (and (=> (= (ControlFlow 0 5) (- 0 6)) (< (- $generated@@602 $generated@@604) $generated@@605)) (=> (< (- $generated@@602 $generated@@604) $generated@@605) (=> (= (ControlFlow 0 5) (- 0 4)) (=> $generated@@598 (or (or (and (<= $generated@@604 ($generated@@240 7)) (<= $generated@@604 $generated@@597)) (= $generated@@604 ($generated@@240 7))) (< $generated@@597 7)))))))))))
(let (($generated@@633  (=> (not (= $generated@@596 ($generated@@240 7))) (and (=> (= (ControlFlow 0 12) 11) $generated@@631) (=> (= (ControlFlow 0 12) 5) $generated@@632)))))
(let (($generated@@634  (=> (and (< $generated@@596 $generated@@602) (= $generated@@605 (- $generated@@602 $generated@@596))) (and (=> (= (ControlFlow 0 17) 16) $generated@@629) (=> (= (ControlFlow 0 17) 12) $generated@@633)))))
(let (($generated@@635  (=> $generated@@598 (and (=> (= (ControlFlow 0 18) 15) $generated@@630) (=> (= (ControlFlow 0 18) 17) $generated@@634)))))
(let (($generated@@636  (and (=> (= (ControlFlow 0 27) 26) $generated@@626) (=> (= (ControlFlow 0 27) 18) $generated@@635))))
(let (($generated@@637 true))
(let (($generated@@638  (=> (and (and (and (and (and (and (and (and (and (<= 0 $generated@@595) (< $generated@@595 25)) (not false)) (= $generated@@606 25)) $generated@@607) (and (<= 1 $generated@@599) (< $generated@@599 26))) (and (<= 0 $generated@@596) (< $generated@@596 8))) (=> $generated@@598 true)) (and (=> $generated@@598 (or (or (and (<= $generated@@596 ($generated@@240 7)) (<= $generated@@596 $generated@@597)) (= $generated@@596 ($generated@@240 7))) (< $generated@@597 7))) (forall (($generated@@639 T@U) ) (!  (=> (= (type $generated@@639) $generated@@79) (=> (and (not (= $generated@@639 $generated@@609)) ($generated@@0 ($generated@@85 ($generated@@83 $generated@@608 $generated@@639) $generated@@60))) (= ($generated@@83 $generated@@608 $generated@@639) ($generated@@83 $generated@@608 $generated@@639))))
 :pattern ( ($generated@@83 $generated@@608 $generated@@639))
)))) (and (and ($generated@@134 $generated@@608 $generated@@608) (forall (($generated@@640 T@U) ($generated@@641 T@U) ) (! (let (($generated@@642 ($generated@@69 (type $generated@@641))))
 (=> (and (and (= (type $generated@@640) $generated@@79) (= (type $generated@@641) ($generated@@68 $generated@@642))) (and (not (= $generated@@640 $generated@@609)) ($generated@@0 ($generated@@85 ($generated@@83 $generated@@608 $generated@@640) $generated@@60)))) (or (= ($generated@@85 ($generated@@83 $generated@@608 $generated@@640) $generated@@641) ($generated@@85 ($generated@@83 $generated@@608 $generated@@640) $generated@@641)) ($generated@@0 ($generated@@164 $generated@@610 $generated@@640 $generated@@641)))))
 :pattern ( ($generated@@85 ($generated@@83 $generated@@608 $generated@@640) $generated@@641))
))) (and (<= (- $generated@@602 $generated@@596) $generated@@611) (=> (= (- $generated@@602 $generated@@596) $generated@@611) true)))) (and (=> (= (ControlFlow 0 28) 3) $generated@@637) (=> (= (ControlFlow 0 28) 27) $generated@@636)))))
(let (($generated@@643  (=> (and (and (< $generated@@595 25) (= $generated@@599 (- 25 $generated@@595))) (and (= $generated@@612 ($generated@@240 0)) (= $generated@@611 (- $generated@@602 $generated@@612)))) (and (=> (= (ControlFlow 0 29) (- 0 30)) (=> $generated@@598 (or (or (and (<= $generated@@612 ($generated@@240 7)) (<= $generated@@612 $generated@@597)) (= $generated@@612 ($generated@@240 7))) (< $generated@@597 7)))) (=> (=> $generated@@598 (or (or (and (<= $generated@@612 ($generated@@240 7)) (<= $generated@@612 $generated@@597)) (= $generated@@612 ($generated@@240 7))) (< $generated@@597 7))) (=> (= (ControlFlow 0 29) 28) $generated@@638))))))
(let (($generated@@644  (=> $generated@@607 (and (=> (= (ControlFlow 0 34) 33) $generated@@618) (=> (= (ControlFlow 0 34) 29) $generated@@643)))))
(let (($generated@@645 true))
(let (($generated@@646  (and (=> (= (ControlFlow 0 35) 2) $generated@@645) (=> (= (ControlFlow 0 35) 34) $generated@@644))))
(let (($generated@@647 true))
(let (($generated@@648  (=> (<= ($generated@@240 0) $generated@@595) (=> (and (and (and (and (and (<= 0 $generated@@595) (< $generated@@595 26)) (not false)) (= $generated@@606 25)) (forall (($generated@@649 T@U) ) (!  (=> (= (type $generated@@649) $generated@@79) (=> (and (not (= $generated@@649 $generated@@609)) ($generated@@0 ($generated@@85 ($generated@@83 $generated@@608 $generated@@649) $generated@@60))) (= ($generated@@83 $generated@@608 $generated@@649) ($generated@@83 $generated@@608 $generated@@649))))
 :pattern ( ($generated@@83 $generated@@608 $generated@@649))
))) (and (and ($generated@@134 $generated@@608 $generated@@608) (forall (($generated@@650 T@U) ($generated@@651 T@U) ) (! (let (($generated@@652 ($generated@@69 (type $generated@@651))))
 (=> (and (and (= (type $generated@@650) $generated@@79) (= (type $generated@@651) ($generated@@68 $generated@@652))) (and (not (= $generated@@650 $generated@@609)) ($generated@@0 ($generated@@85 ($generated@@83 $generated@@608 $generated@@650) $generated@@60)))) (or (= ($generated@@85 ($generated@@83 $generated@@608 $generated@@650) $generated@@651) ($generated@@85 ($generated@@83 $generated@@608 $generated@@650) $generated@@651)) ($generated@@0 ($generated@@164 $generated@@610 $generated@@650 $generated@@651)))))
 :pattern ( ($generated@@85 ($generated@@83 $generated@@608 $generated@@650) $generated@@651))
))) (and (<= (- 25 $generated@@595) $generated@@606) (=> (= (- 25 $generated@@595) $generated@@606) true)))) (and (=> (= (ControlFlow 0 36) 1) $generated@@647) (=> (= (ControlFlow 0 36) 35) $generated@@646))))))
(let (($generated@@653  (=> (= $generated@@610 ($generated@@165 $generated@@609 $generated@@608 $generated@@60 false)) (and (=> (= (ControlFlow 0 37) (- 0 38)) ($generated@@141 ($generated@@8 ($generated@@240 0)) $generated@@138)) (=> ($generated@@141 ($generated@@8 ($generated@@240 0)) $generated@@138) (=> (= $generated@@613 ($generated@@240 0)) (=> (and (= $generated@@606 (- 25 $generated@@613)) (= (ControlFlow 0 37) 36)) $generated@@648)))))))
(let (($generated@@654  (=> (and (and (and ($generated@@246 $generated@@608) ($generated@@614 $generated@@608)) (<= ($generated@@240 0) $generated@@602)) (and (and (<= ($generated@@240 0) $generated@@597) (<= ($generated@@240 0) $generated@@615)) (and (= 1 $generated@@616) (= (ControlFlow 0 39) 37)))) $generated@@653)))
$generated@@654)))))))))))))))))))))))))))))))
))
(check-sat)
(get-info :reason-unknown)
(assert (not (= (ControlFlow 0 9) (- 8))))
(check-sat)
(pop 1)
; Invalid
(get-info :rlimit)
(reset)
(set-option :rlimit 0)
; did a full reset
(reset)
(set-option :print-success false)
(set-info :smt-lib-version 2.6)
(set-option :auto_config false)
(set-option :type_check true)
(set-option :smt.case_split 3)
(set-option :smt.qi.eager_threshold 100)
(set-option :smt.delay_units true)
(set-option :smt.arith.solver 2)
(set-option :smt.mbqi false)
(set-option :model.compact false)
(set-option :model.v2 true)
(set-option :pp.bv_literals false)
; done setting options


(set-info :category "industrial")
(declare-sort |T@U| 0)
(declare-sort |T@T| 0)
(declare-fun real_pow (Real Real) Real)
(declare-fun UOrdering2 (|T@U| |T@U|) Bool)
(declare-fun UOrdering3 (|T@T| |T@U| |T@U|) Bool)
(declare-fun tickleBool (Bool) Bool)
(assert (and (tickleBool true) (tickleBool false)))
(declare-fun $generated (T@U) Int)
(declare-fun $generated@@0 (T@U) Bool)
(declare-fun $generated@@1 (T@T) Int)
(declare-fun $generated@@2 () T@T)
(declare-fun $generated@@3 () T@T)
(declare-fun $generated@@4 () T@T)
(declare-fun $generated@@5 () T@T)
(declare-fun $generated@@6 () T@T)
(declare-fun $generated@@7 () T@T)
(declare-fun $generated@@8 (Int) T@U)
(declare-fun type (T@U) T@T)
(declare-fun $generated@@9 (Real) T@U)
(declare-fun $generated@@10 (T@U) Real)
(declare-fun $generated@@11 (Bool) T@U)
(declare-fun $generated@@12 (RoundingMode) T@U)
(declare-fun $generated@@13 (T@U) RoundingMode)
(declare-fun $generated@@14 (String) T@U)
(declare-fun $generated@@15 (T@U) String)
(declare-fun $generated@@16 ((RegEx String)) T@U)
(declare-fun $generated@@17 (T@U) (RegEx String))
(declare-fun $generated@@44 () T@U)
(declare-fun $generated@@45 () T@U)
(declare-fun $generated@@46 () T@U)
(declare-fun $generated@@47 () T@U)
(declare-fun $generated@@48 () T@U)
(declare-fun $generated@@49 () T@U)
(declare-fun $generated@@50 () T@U)
(declare-fun $generated@@51 () T@U)
(declare-fun $generated@@52 () T@U)
(declare-fun $generated@@53 () T@U)
(declare-fun $generated@@54 () T@U)
(declare-fun $generated@@55 () T@U)
(declare-fun $generated@@56 () T@U)
(declare-fun $generated@@57 () T@U)
(declare-fun $generated@@58 () T@U)
(declare-fun $generated@@59 () T@U)
(declare-fun $generated@@60 () T@U)
(declare-fun $generated@@61 () T@U)
(declare-fun $generated@@62 () T@U)
(declare-fun $generated@@63 () T@U)
(declare-fun $generated@@64 () T@U)
(declare-fun $generated@@65 () T@U)
(declare-fun $generated@@66 () T@T)
(declare-fun $generated@@67 () T@T)
(declare-fun $generated@@68 (T@T) T@T)
(declare-fun $generated@@69 (T@T) T@T)
(declare-fun $generated@@70 () T@T)
(declare-fun $generated@@71 () T@T)
(declare-fun $generated@@74 (T@U) T@U)
(declare-fun $generated@@76 (T@U T@U T@U) Bool)
(declare-fun $generated@@77 (Int) T@U)
(declare-fun $generated@@78 (T@T T@T) T@T)
(declare-fun $generated@@79 () T@T)
(declare-fun $generated@@80 () T@T)
(declare-fun $generated@@81 (T@T) T@T)
(declare-fun $generated@@82 (T@T) T@T)
(declare-fun $generated@@83 (T@U T@U) T@U)
(declare-fun $generated@@84 (T@U T@U T@U) T@U)
(declare-fun $generated@@85 (T@U T@U) T@U)
(declare-fun $generated@@86 (T@U T@U T@U) T@U)
(declare-fun $generated@@134 (T@U T@U) Bool)
(declare-fun $generated@@138 () T@U)
(declare-fun $generated@@141 (T@U T@U) Bool)
(declare-fun $generated@@143 (T@U) Bool)
(declare-fun $generated@@144 (T@U T@U) T@U)
(declare-fun $generated@@145 () T@T)
(declare-fun $generated@@151 (T@U T@U) Bool)
(declare-fun $generated@@152 (T@U) T@U)
(declare-fun $generated@@153 (T@U) T@U)
(declare-fun $generated@@154 () T@T)
(declare-fun $generated@@159 (T@U) T@U)
(declare-fun $generated@@160 (T@U) Bool)
(declare-fun $generated@@164 (T@U T@U T@U) T@U)
(declare-fun $generated@@165 (T@U T@U T@U Bool) T@U)
(declare-fun $generated@@166 (T@T T@T) T@T)
(declare-fun $generated@@167 (T@T) T@T)
(declare-fun $generated@@168 (T@T) T@T)
(declare-fun $generated@@169 (T@U T@U T@U T@U) T@U)
(declare-fun $generated@@220 (T@U T@U) T@U)
(declare-fun $generated@@221 (T@U T@U) Bool)
(declare-fun $generated@@230 (T@U) T@U)
(declare-fun $generated@@235 (T@U) T@U)
(declare-fun $generated@@240 (Int) Int)
(declare-fun $generated@@242 (T@U) T@U)
(declare-fun $generated@@246 (T@U) Bool)
(declare-fun $generated@@247 (T@U T@U T@U) Bool)
(declare-fun $generated@@253 (T@U) T@U)
(declare-fun $generated@@259 (T@T) T@U)
(declare-fun $generated@@260 (T@U) Int)
(declare-fun $generated@@261 (T@T) T@T)
(declare-fun $generated@@262 (T@T) T@T)
(declare-fun $generated@@268 (T@U) T@U)
(declare-fun $generated@@281 (T@U) Int)
(declare-fun $generated@@282 (T@T) T@U)
(declare-fun $generated@@287 (T@U) T@U)
(declare-fun $generated@@288 (T@T T@T) T@U)
(declare-fun $generated@@289 (T@T T@T) T@T)
(declare-fun $generated@@290 (T@T) T@T)
(declare-fun $generated@@291 (T@T) T@T)
(declare-fun $generated@@305 (T@U) T@U)
(declare-fun $generated@@306 (T@T T@T) T@U)
(declare-fun $generated@@307 (T@T T@T) T@T)
(declare-fun $generated@@308 (T@T) T@T)
(declare-fun $generated@@309 (T@T) T@T)
(declare-fun $generated@@326 (T@T T@U) T@U)
(declare-fun $generated@@334 (T@U) T@U)
(declare-fun $generated@@345 (T@U) T@U)
(declare-fun $generated@@365 (T@U) T@U)
(declare-fun $generated@@366 (T@U) T@U)
(declare-fun $generated@@373 (T@U) T@U)
(declare-fun $generated@@374 (T@U) T@U)
(declare-fun $generated@@391 (T@U T@U) T@U)
(declare-fun $generated@@399 (T@U T@U) T@U)
(declare-fun $generated@@410 (T@T) T@U)
(declare-fun $generated@@434 () T@T)
(declare-fun $generated@@442 (T@U) T@U)
(declare-fun $generated@@446 (T@U) T@U)
(declare-fun $generated@@452 (T@U) T@U)
(declare-fun $generated@@456 (T@U) T@U)
(declare-fun $generated@@464 (T@U) T@U)
(declare-fun $generated@@468 (T@U) T@U)
(declare-fun $generated@@476 (T@U) T@U)
(declare-fun $generated@@477 (T@U Int) T@U)
(declare-fun $generated@@486 (T@U) Int)
(declare-fun $generated@@488 (T@U) T@U)
(declare-fun $generated@@492 (T@U) T@U)
(declare-fun $generated@@496 (T@U) T@U)
(declare-fun $generated@@500 (T@U) T@U)
(declare-fun $generated@@514 (T@U) Int)
(declare-fun $generated@@515 (T@U) Int)
(declare-fun $generated@@531 (T@U) T@U)
(declare-fun $generated@@580 (T@U) Int)
(assert  (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (= ($generated@@1 $generated@@2) 0) (= ($generated@@1 $generated@@3) 1)) (= ($generated@@1 $generated@@4) 2)) (= ($generated@@1 $generated@@5) 3)) (= ($generated@@1 $generated@@6) 4)) (= ($generated@@1 $generated@@7) 5)) (forall (($generated@@18 Int) ) (! (= ($generated ($generated@@8 $generated@@18)) $generated@@18)
 :pattern ( ($generated@@8 $generated@@18))
))) (forall (($generated@@19 T@U) ) (!  (=> (= (type $generated@@19) $generated@@2) (= ($generated@@8 ($generated $generated@@19)) $generated@@19))
 :pattern ( ($generated $generated@@19))
))) (forall (($generated@@20 Int) ) (! (= (type ($generated@@8 $generated@@20)) $generated@@2)
 :pattern ( ($generated@@8 $generated@@20))
))) (forall (($generated@@21 Real) ) (! (= ($generated@@10 ($generated@@9 $generated@@21)) $generated@@21)
 :pattern ( ($generated@@9 $generated@@21))
))) (forall (($generated@@22 T@U) ) (!  (=> (= (type $generated@@22) $generated@@3) (= ($generated@@9 ($generated@@10 $generated@@22)) $generated@@22))
 :pattern ( ($generated@@10 $generated@@22))
))) (forall (($generated@@23 Real) ) (! (= (type ($generated@@9 $generated@@23)) $generated@@3)
 :pattern ( ($generated@@9 $generated@@23))
))) (forall (($generated@@24 Bool) ) (! (= ($generated@@0 ($generated@@11 $generated@@24)) $generated@@24)
 :pattern ( ($generated@@11 $generated@@24))
))) (forall (($generated@@25 T@U) ) (!  (=> (= (type $generated@@25) $generated@@4) (= ($generated@@11 ($generated@@0 $generated@@25)) $generated@@25))
 :pattern ( ($generated@@0 $generated@@25))
))) (forall (($generated@@26 Bool) ) (! (= (type ($generated@@11 $generated@@26)) $generated@@4)
 :pattern ( ($generated@@11 $generated@@26))
))) (forall (($generated@@27 RoundingMode) ) (! (= ($generated@@13 ($generated@@12 $generated@@27)) $generated@@27)
 :pattern ( ($generated@@12 $generated@@27))
))) (forall (($generated@@28 T@U) ) (!  (=> (= (type $generated@@28) $generated@@5) (= ($generated@@12 ($generated@@13 $generated@@28)) $generated@@28))
 :pattern ( ($generated@@13 $generated@@28))
))) (forall (($generated@@29 RoundingMode) ) (! (= (type ($generated@@12 $generated@@29)) $generated@@5)
 :pattern ( ($generated@@12 $generated@@29))
))) (forall (($generated@@30 String) ) (! (= ($generated@@15 ($generated@@14 $generated@@30)) $generated@@30)
 :pattern ( ($generated@@14 $generated@@30))
))) (forall (($generated@@31 T@U) ) (!  (=> (= (type $generated@@31) $generated@@6) (= ($generated@@14 ($generated@@15 $generated@@31)) $generated@@31))
 :pattern ( ($generated@@15 $generated@@31))
))) (forall (($generated@@32 String) ) (! (= (type ($generated@@14 $generated@@32)) $generated@@6)
 :pattern ( ($generated@@14 $generated@@32))
))) (forall (($generated@@33 (RegEx String)) ) (! (= ($generated@@17 ($generated@@16 $generated@@33)) $generated@@33)
 :pattern ( ($generated@@16 $generated@@33))
))) (forall (($generated@@34 T@U) ) (!  (=> (= (type $generated@@34) $generated@@7) (= ($generated@@16 ($generated@@17 $generated@@34)) $generated@@34))
 :pattern ( ($generated@@17 $generated@@34))
))) (forall (($generated@@35 (RegEx String)) ) (! (= (type ($generated@@16 $generated@@35)) $generated@@7)
 :pattern ( ($generated@@16 $generated@@35))
))))
(assert (forall (($generated@@36 T@U) ) (! (UOrdering2 $generated@@36 $generated@@36)
 :no-pattern ($generated $generated@@36)
 :no-pattern ($generated@@0 $generated@@36)
)))
(assert (forall (($generated@@37 T@U) ($generated@@38 T@U) ($generated@@39 T@U) ) (! (let (($generated@@40 (type $generated@@37)))
 (=> (and (and (= (type $generated@@38) $generated@@40) (= (type $generated@@39) $generated@@40)) (and (UOrdering2 $generated@@37 $generated@@38) (UOrdering2 $generated@@38 $generated@@39))) (UOrdering2 $generated@@37 $generated@@39)))
 :pattern ( (UOrdering2 $generated@@37 $generated@@38) (UOrdering2 $generated@@38 $generated@@39))
)))
(assert (forall (($generated@@41 T@U) ($generated@@42 T@U) ) (! (let (($generated@@43 (type $generated@@41)))
 (=> (= (type $generated@@42) $generated@@43) (=> (and (UOrdering2 $generated@@41 $generated@@42) (UOrdering2 $generated@@42 $generated@@41)) (= $generated@@41 $generated@@42))))
 :pattern ( (UOrdering2 $generated@@41 $generated@@42) (UOrdering2 $generated@@42 $generated@@41))
)))
(assert  (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (= ($generated@@1 $generated@@66) 6) (= (type $generated@@44) $generated@@66)) (= (type $generated@@45) $generated@@66)) (= (type $generated@@46) $generated@@66)) (= (type $generated@@47) $generated@@66)) (= (type $generated@@48) $generated@@66)) (= ($generated@@1 $generated@@67) 7)) (= (type $generated@@49) $generated@@67)) (= (type $generated@@50) $generated@@67)) (= (type $generated@@51) $generated@@67)) (= (type $generated@@52) $generated@@67)) (= (type $generated@@53) $generated@@67)) (= (type $generated@@54) $generated@@67)) (= (type $generated@@55) $generated@@67)) (= (type $generated@@56) $generated@@67)) (= (type $generated@@57) $generated@@67)) (= (type $generated@@58) $generated@@67)) (= (type $generated@@59) $generated@@67)) (forall (($generated@@72 T@T) ) (= ($generated@@1 ($generated@@68 $generated@@72)) 8))) (forall (($generated@@73 T@T) ) (! (= ($generated@@69 ($generated@@68 $generated@@73)) $generated@@73)
 :pattern ( ($generated@@68 $generated@@73))
))) (= (type $generated@@60) ($generated@@68 $generated@@4))) (= (type $generated@@61) $generated@@67)) (= ($generated@@1 $generated@@70) 9)) (= (type $generated@@62) $generated@@70)) (= (type $generated@@63) $generated@@67)) (= ($generated@@1 $generated@@71) 10)) (= (type $generated@@64) $generated@@71)) (= (type $generated@@65) $generated@@71)))
(assert (distinct $generated@@44 $generated@@45 $generated@@46 $generated@@47 $generated@@48 $generated@@49 $generated@@50 $generated@@51 $generated@@52 $generated@@53 $generated@@54 $generated@@55 $generated@@56 $generated@@57 $generated@@58 $generated@@59 $generated@@60 $generated@@61 $generated@@62 $generated@@63 $generated@@64 $generated@@65)
)
(assert (forall (($generated@@75 T@U) ) (! (= (type ($generated@@74 $generated@@75)) $generated@@67)
 :pattern ( ($generated@@74 $generated@@75))
)))
(assert (= ($generated@@74 $generated@@44) $generated@@49))
(assert (= ($generated@@74 $generated@@45) $generated@@50))
(assert (= ($generated@@74 $generated@@46) $generated@@51))
(assert (= ($generated@@74 $generated@@47) $generated@@52))
(assert (= ($generated@@74 $generated@@48) $generated@@53))
(assert  (and (and (and (and (and (and (and (and (and (and (and (and (and (forall (($generated@@87 T@T) ($generated@@88 T@T) ) (= ($generated@@1 ($generated@@78 $generated@@87 $generated@@88)) 11)) (forall (($generated@@89 T@T) ($generated@@90 T@T) ) (! (= ($generated@@81 ($generated@@78 $generated@@89 $generated@@90)) $generated@@89)
 :pattern ( ($generated@@78 $generated@@89 $generated@@90))
))) (forall (($generated@@91 T@T) ($generated@@92 T@T) ) (! (= ($generated@@82 ($generated@@78 $generated@@91 $generated@@92)) $generated@@92)
 :pattern ( ($generated@@78 $generated@@91 $generated@@92))
))) (forall (($generated@@93 T@U) ($generated@@94 T@U) ) (! (let (($generated@@95 ($generated@@82 (type $generated@@93))))
(= (type ($generated@@83 $generated@@93 $generated@@94)) $generated@@95))
 :pattern ( ($generated@@83 $generated@@93 $generated@@94))
))) (forall (($generated@@96 T@U) ($generated@@97 T@U) ($generated@@98 T@U) ) (! (let (($generated@@99 (type $generated@@98)))
(let (($generated@@100 (type $generated@@97)))
(= (type ($generated@@84 $generated@@96 $generated@@97 $generated@@98)) ($generated@@78 $generated@@100 $generated@@99))))
 :pattern ( ($generated@@84 $generated@@96 $generated@@97 $generated@@98))
))) (forall (($generated@@101 T@U) ($generated@@102 T@U) ($generated@@103 T@U) ) (! (let (($generated@@104 ($generated@@82 (type $generated@@101))))
 (=> (= (type $generated@@103) $generated@@104) (= ($generated@@83 ($generated@@84 $generated@@101 $generated@@102 $generated@@103) $generated@@102) $generated@@103)))
 :weight 0
))) (and (forall (($generated@@105 T@U) ($generated@@106 T@U) ($generated@@107 T@U) ($generated@@108 T@U) ) (!  (or (= $generated@@107 $generated@@108) (= ($generated@@83 ($generated@@84 $generated@@106 $generated@@107 $generated@@105) $generated@@108) ($generated@@83 $generated@@106 $generated@@108)))
 :weight 0
)) (forall (($generated@@109 T@U) ($generated@@110 T@U) ($generated@@111 T@U) ($generated@@112 T@U) ) (!  (or true (= ($generated@@83 ($generated@@84 $generated@@110 $generated@@111 $generated@@109) $generated@@112) ($generated@@83 $generated@@110 $generated@@112)))
 :weight 0
)))) (= ($generated@@1 $generated@@79) 12)) (forall (($generated@@113 T@U) ($generated@@114 T@U) ) (! (let (($generated@@115 ($generated@@69 (type $generated@@114))))
(= (type ($generated@@85 $generated@@113 $generated@@114)) $generated@@115))
 :pattern ( ($generated@@85 $generated@@113 $generated@@114))
))) (= ($generated@@1 $generated@@80) 13)) (forall (($generated@@116 T@U) ($generated@@117 T@U) ($generated@@118 T@U) ) (! (= (type ($generated@@86 $generated@@116 $generated@@117 $generated@@118)) $generated@@80)
 :pattern ( ($generated@@86 $generated@@116 $generated@@117 $generated@@118))
))) (forall (($generated@@119 T@U) ($generated@@120 T@U) ($generated@@121 T@U) ) (! (let (($generated@@122 ($generated@@69 (type $generated@@120))))
 (=> (= (type $generated@@121) $generated@@122) (= ($generated@@85 ($generated@@86 $generated@@119 $generated@@120 $generated@@121) $generated@@120) $generated@@121)))
 :weight 0
))) (and (forall (($generated@@123 T@U) ($generated@@124 T@U) ($generated@@125 T@U) ($generated@@126 T@U) ) (!  (or (= $generated@@125 $generated@@126) (= ($generated@@85 ($generated@@86 $generated@@124 $generated@@125 $generated@@123) $generated@@126) ($generated@@85 $generated@@124 $generated@@126)))
 :weight 0
)) (forall (($generated@@127 T@U) ($generated@@128 T@U) ($generated@@129 T@U) ($generated@@130 T@U) ) (!  (or true (= ($generated@@85 ($generated@@86 $generated@@128 $generated@@129 $generated@@127) $generated@@130) ($generated@@85 $generated@@128 $generated@@130)))
 :weight 0
)))) (forall (($generated@@131 Int) ) (! (= (type ($generated@@77 $generated@@131)) $generated@@66)
 :pattern ( ($generated@@77 $generated@@131))
))))
(assert (forall (($generated@@132 T@U) ($generated@@133 T@U) ) (!  (=> (and (= (type $generated@@132) $generated@@2) (= (type $generated@@133) ($generated@@78 $generated@@79 $generated@@80))) ($generated@@76 $generated@@132 ($generated@@77 0) $generated@@133))
 :pattern ( ($generated@@76 $generated@@132 ($generated@@77 0) $generated@@133))
)))
(assert (forall (($generated@@135 T@U) ($generated@@136 T@U) ) (!  (=> (and (and (= (type $generated@@135) ($generated@@78 $generated@@79 $generated@@80)) (= (type $generated@@136) ($generated@@78 $generated@@79 $generated@@80))) ($generated@@134 $generated@@135 $generated@@136)) (forall (($generated@@137 T@U) ) (!  (=> (and (= (type $generated@@137) $generated@@79) ($generated@@0 ($generated@@85 ($generated@@83 $generated@@135 $generated@@137) $generated@@60))) ($generated@@0 ($generated@@85 ($generated@@83 $generated@@136 $generated@@137) $generated@@60)))
 :pattern ( ($generated@@85 ($generated@@83 $generated@@136 $generated@@137) $generated@@60))
)))
 :pattern ( ($generated@@134 $generated@@135 $generated@@136))
)))
(assert (= (type $generated@@138) $generated@@66))
(assert (forall (($generated@@139 T@U) ($generated@@140 T@U) ) (!  (=> (and (= (type $generated@@139) $generated@@2) (= (type $generated@@140) ($generated@@78 $generated@@79 $generated@@80))) ($generated@@76 $generated@@139 $generated@@138 $generated@@140))
 :pattern ( ($generated@@76 $generated@@139 $generated@@138 $generated@@140))
)))
(assert (forall (($generated@@142 T@U) ) (!  (=> (= (type $generated@@142) $generated@@2) ($generated@@141 $generated@@142 ($generated@@77 0)))
 :pattern ( ($generated@@141 $generated@@142 ($generated@@77 0)))
)))
(assert  (and (= ($generated@@1 $generated@@145) 14) (forall (($generated@@146 T@U) ($generated@@147 T@U) ) (! (= (type ($generated@@144 $generated@@146 $generated@@147)) $generated@@66)
 :pattern ( ($generated@@144 $generated@@146 $generated@@147))
))))
(assert (forall (($generated@@148 T@U) ($generated@@149 T@U) ($generated@@150 T@U) ) (!  (=> (and (and (and (= (type $generated@@148) $generated@@66) (= (type $generated@@149) $generated@@66)) (= (type $generated@@150) $generated@@145)) ($generated@@141 $generated@@150 ($generated@@144 $generated@@148 $generated@@149))) ($generated@@143 $generated@@150))
 :pattern ( ($generated@@143 $generated@@150) ($generated@@141 $generated@@150 ($generated@@144 $generated@@148 $generated@@149)))
)))
(assert  (and (and (= ($generated@@1 $generated@@154) 15) (forall (($generated@@155 T@U) ) (! (= (type ($generated@@152 $generated@@155)) $generated@@154)
 :pattern ( ($generated@@152 $generated@@155))
))) (forall (($generated@@156 T@U) ) (! (= (type ($generated@@153 $generated@@156)) $generated@@154)
 :pattern ( ($generated@@153 $generated@@156))
))))
(assert (forall (($generated@@157 T@U) ($generated@@158 T@U) ) (!  (=> (and (and (= (type $generated@@157) $generated@@145) (= (type $generated@@158) $generated@@145)) true) (= ($generated@@151 $generated@@157 $generated@@158)  (and (= ($generated@@152 $generated@@157) ($generated@@152 $generated@@158)) (= ($generated@@153 $generated@@157) ($generated@@153 $generated@@158)))))
 :pattern ( ($generated@@151 $generated@@157 $generated@@158))
)))
(assert (forall (($generated@@161 T@U) ) (! (= (type ($generated@@159 $generated@@161)) $generated@@66)
 :pattern ( ($generated@@159 $generated@@161))
)))
(assert (forall (($generated@@162 T@U) ($generated@@163 T@U) ) (!  (=> (and (and (= (type $generated@@162) ($generated@@78 $generated@@154 $generated@@2)) (= (type $generated@@163) $generated@@66)) ($generated@@141 $generated@@162 ($generated@@159 $generated@@163))) ($generated@@160 $generated@@162))
 :pattern ( ($generated@@141 $generated@@162 ($generated@@159 $generated@@163)))
)))
(assert  (and (and (and (and (and (and (and (forall (($generated@@170 T@T) ($generated@@171 T@T) ) (= ($generated@@1 ($generated@@166 $generated@@170 $generated@@171)) 16)) (forall (($generated@@172 T@T) ($generated@@173 T@T) ) (! (= ($generated@@167 ($generated@@166 $generated@@172 $generated@@173)) $generated@@172)
 :pattern ( ($generated@@166 $generated@@172 $generated@@173))
))) (forall (($generated@@174 T@T) ($generated@@175 T@T) ) (! (= ($generated@@168 ($generated@@166 $generated@@174 $generated@@175)) $generated@@175)
 :pattern ( ($generated@@166 $generated@@174 $generated@@175))
))) (forall (($generated@@176 T@U) ($generated@@177 T@U) ($generated@@178 T@U) ) (! (let (($generated@@179 ($generated@@168 (type $generated@@176))))
(= (type ($generated@@164 $generated@@176 $generated@@177 $generated@@178)) $generated@@179))
 :pattern ( ($generated@@164 $generated@@176 $generated@@177 $generated@@178))
))) (forall (($generated@@180 T@U) ($generated@@181 T@U) ($generated@@182 T@U) ($generated@@183 T@U) ) (! (let (($generated@@184 (type $generated@@183)))
(let (($generated@@185 (type $generated@@181)))
(= (type ($generated@@169 $generated@@180 $generated@@181 $generated@@182 $generated@@183)) ($generated@@166 $generated@@185 $generated@@184))))
 :pattern ( ($generated@@169 $generated@@180 $generated@@181 $generated@@182 $generated@@183))
))) (forall (($generated@@186 T@U) ($generated@@187 T@U) ($generated@@188 T@U) ($generated@@189 T@U) ) (! (let (($generated@@190 ($generated@@168 (type $generated@@186))))
 (=> (= (type $generated@@189) $generated@@190) (= ($generated@@164 ($generated@@169 $generated@@186 $generated@@187 $generated@@188 $generated@@189) $generated@@187 $generated@@188) $generated@@189)))
 :weight 0
))) (and (and (forall (($generated@@191 T@U) ($generated@@192 T@U) ($generated@@193 T@U) ($generated@@194 T@U) ($generated@@195 T@U) ($generated@@196 T@U) ) (!  (or (= $generated@@193 $generated@@195) (= ($generated@@164 ($generated@@169 $generated@@192 $generated@@193 $generated@@194 $generated@@191) $generated@@195 $generated@@196) ($generated@@164 $generated@@192 $generated@@195 $generated@@196)))
 :weight 0
)) (forall (($generated@@197 T@U) ($generated@@198 T@U) ($generated@@199 T@U) ($generated@@200 T@U) ($generated@@201 T@U) ($generated@@202 T@U) ) (!  (or (= $generated@@200 $generated@@202) (= ($generated@@164 ($generated@@169 $generated@@198 $generated@@199 $generated@@200 $generated@@197) $generated@@201 $generated@@202) ($generated@@164 $generated@@198 $generated@@201 $generated@@202)))
 :weight 0
))) (forall (($generated@@203 T@U) ($generated@@204 T@U) ($generated@@205 T@U) ($generated@@206 T@U) ($generated@@207 T@U) ($generated@@208 T@U) ) (!  (or true (= ($generated@@164 ($generated@@169 $generated@@204 $generated@@205 $generated@@206 $generated@@203) $generated@@207 $generated@@208) ($generated@@164 $generated@@204 $generated@@207 $generated@@208)))
 :weight 0
)))) (forall (($generated@@209 T@U) ($generated@@210 T@U) ($generated@@211 T@U) ($generated@@212 Bool) ) (! (= (type ($generated@@165 $generated@@209 $generated@@210 $generated@@211 $generated@@212)) ($generated@@166 $generated@@79 $generated@@4))
 :pattern ( ($generated@@165 $generated@@209 $generated@@210 $generated@@211 $generated@@212))
))))
(assert (forall (($generated@@213 T@U) ($generated@@214 T@U) ($generated@@215 T@U) ($generated@@216 Bool) ($generated@@217 T@U) ($generated@@218 T@U) ) (! (let (($generated@@219 ($generated@@69 (type $generated@@218))))
 (=> (and (and (and (and (= (type $generated@@213) $generated@@79) (= (type $generated@@214) ($generated@@78 $generated@@79 $generated@@80))) (= (type $generated@@215) ($generated@@68 $generated@@4))) (= (type $generated@@217) $generated@@79)) (= (type $generated@@218) ($generated@@68 $generated@@219))) (= ($generated@@0 ($generated@@164 ($generated@@165 $generated@@213 $generated@@214 $generated@@215 $generated@@216) $generated@@217 $generated@@218))  (=> (and (not (= $generated@@217 $generated@@213)) ($generated@@0 ($generated@@85 ($generated@@83 $generated@@214 $generated@@217) $generated@@215))) $generated@@216))))
 :pattern ( ($generated@@164 ($generated@@165 $generated@@213 $generated@@214 $generated@@215 $generated@@216) $generated@@217 $generated@@218))
)))
(assert (forall (($generated@@222 T@U) ($generated@@223 T@U) ) (! (= (type ($generated@@220 $generated@@222 $generated@@223)) $generated@@145)
 :pattern ( ($generated@@220 $generated@@222 $generated@@223))
)))
(assert (forall (($generated@@224 T@U) ($generated@@225 T@U) ($generated@@226 T@U) ($generated@@227 T@U) ) (!  (=> (and (and (and (= (type $generated@@224) $generated@@66) (= (type $generated@@225) $generated@@66)) (= (type $generated@@226) $generated@@154)) (= (type $generated@@227) $generated@@154)) (= ($generated@@141 ($generated@@220 $generated@@226 $generated@@227) ($generated@@144 $generated@@224 $generated@@225))  (and ($generated@@221 $generated@@226 $generated@@224) ($generated@@221 $generated@@227 $generated@@225))))
 :pattern ( ($generated@@141 ($generated@@220 $generated@@226 $generated@@227) ($generated@@144 $generated@@224 $generated@@225)))
)))
(assert (forall (($generated@@228 T@U) ($generated@@229 T@U) ) (!  (=> (and (= (type $generated@@228) $generated@@145) (= (type $generated@@229) $generated@@145)) (= ($generated@@151 $generated@@228 $generated@@229) (= $generated@@228 $generated@@229)))
 :pattern ( ($generated@@151 $generated@@228 $generated@@229))
)))
(assert (forall (($generated@@231 T@U) ) (! (= (type ($generated@@230 $generated@@231)) $generated@@66)
 :pattern ( ($generated@@230 $generated@@231))
)))
(assert (forall (($generated@@232 T@U) ($generated@@233 T@U) ) (!  (=> (and (= (type $generated@@232) ($generated@@78 $generated@@154 $generated@@4)) (= (type $generated@@233) $generated@@66)) (= ($generated@@141 $generated@@232 ($generated@@230 $generated@@233)) (forall (($generated@@234 T@U) ) (!  (=> (and (= (type $generated@@234) $generated@@154) ($generated@@0 ($generated@@83 $generated@@232 $generated@@234))) ($generated@@221 $generated@@234 $generated@@233))
 :pattern ( ($generated@@83 $generated@@232 $generated@@234))
))))
 :pattern ( ($generated@@141 $generated@@232 ($generated@@230 $generated@@233)))
)))
(assert (forall (($generated@@236 T@U) ) (! (= (type ($generated@@235 $generated@@236)) $generated@@66)
 :pattern ( ($generated@@235 $generated@@236))
)))
(assert (forall (($generated@@237 T@U) ($generated@@238 T@U) ) (!  (=> (and (= (type $generated@@237) ($generated@@78 $generated@@154 $generated@@4)) (= (type $generated@@238) $generated@@66)) (= ($generated@@141 $generated@@237 ($generated@@235 $generated@@238)) (forall (($generated@@239 T@U) ) (!  (=> (and (= (type $generated@@239) $generated@@154) ($generated@@0 ($generated@@83 $generated@@237 $generated@@239))) ($generated@@221 $generated@@239 $generated@@238))
 :pattern ( ($generated@@83 $generated@@237 $generated@@239))
))))
 :pattern ( ($generated@@141 $generated@@237 ($generated@@235 $generated@@238)))
)))
(assert (forall (($generated@@241 Int) ) (! (= ($generated@@240 $generated@@241) $generated@@241)
 :pattern ( ($generated@@240 $generated@@241))
)))
(assert (forall (($generated@@243 T@U) ) (! (let (($generated@@244 (type $generated@@243)))
(= (type ($generated@@242 $generated@@243)) $generated@@244))
 :pattern ( ($generated@@242 $generated@@243))
)))
(assert (forall (($generated@@245 T@U) ) (! (= ($generated@@242 $generated@@245) $generated@@245)
 :pattern ( ($generated@@242 $generated@@245))
)))
(assert (forall (($generated@@248 T@U) ($generated@@249 T@U) ($generated@@250 T@U) ($generated@@251 T@U) ($generated@@252 T@U) ) (!  (=> (and (and (and (and (and (= (type $generated@@248) $generated@@66) (= (type $generated@@249) $generated@@66)) (= (type $generated@@250) $generated@@154)) (= (type $generated@@251) $generated@@154)) (= (type $generated@@252) ($generated@@78 $generated@@79 $generated@@80))) ($generated@@246 $generated@@252)) (= ($generated@@76 ($generated@@220 $generated@@250 $generated@@251) ($generated@@144 $generated@@248 $generated@@249) $generated@@252)  (and ($generated@@247 $generated@@250 $generated@@248 $generated@@252) ($generated@@247 $generated@@251 $generated@@249 $generated@@252))))
 :pattern ( ($generated@@76 ($generated@@220 $generated@@250 $generated@@251) ($generated@@144 $generated@@248 $generated@@249) $generated@@252))
)))
(assert (forall (($generated@@254 T@U) ) (! (= (type ($generated@@253 $generated@@254)) $generated@@70)
 :pattern ( ($generated@@253 $generated@@254))
)))
(assert (forall (($generated@@255 T@U) ) (!  (=> (= (type $generated@@255) $generated@@145) (= ($generated@@143 $generated@@255) (= ($generated@@253 $generated@@255) $generated@@62)))
 :pattern ( ($generated@@143 $generated@@255))
)))
(assert (forall (($generated@@256 T@U) ) (!  (=> (and (= (type $generated@@256) $generated@@145) ($generated@@143 $generated@@256)) (exists (($generated@@257 T@U) ($generated@@258 T@U) ) (!  (and (and (= (type $generated@@257) $generated@@154) (= (type $generated@@258) $generated@@154)) (= $generated@@256 ($generated@@220 $generated@@257 $generated@@258)))
 :no-pattern (type $generated@@257)
 :no-pattern (type $generated@@258)
 :no-pattern ($generated $generated@@257)
 :no-pattern ($generated@@0 $generated@@257)
 :no-pattern ($generated $generated@@258)
 :no-pattern ($generated@@0 $generated@@258)
)))
 :pattern ( ($generated@@143 $generated@@256))
)))
(assert  (and (and (forall (($generated@@263 T@T) ) (= ($generated@@1 ($generated@@261 $generated@@263)) 17)) (forall (($generated@@264 T@T) ) (! (= ($generated@@262 ($generated@@261 $generated@@264)) $generated@@264)
 :pattern ( ($generated@@261 $generated@@264))
))) (forall (($generated@@265 T@T) ) (! (= (type ($generated@@259 $generated@@265)) ($generated@@261 $generated@@265))
 :pattern ( ($generated@@259 $generated@@265))
))))
(assert (forall (($generated@@266 T@T) ) (! (= ($generated@@260 ($generated@@259 $generated@@266)) 0)
 :pattern ( ($generated@@259 $generated@@266))
)))
(assert (forall (($generated@@267 T@U) ) (!  (=> (= (type $generated@@267) $generated@@2) (= ($generated@@141 $generated@@267 $generated@@138) (<= ($generated@@240 0) ($generated $generated@@267))))
 :pattern ( ($generated@@141 $generated@@267 $generated@@138))
)))
(assert (forall (($generated@@269 T@U) ) (! (= (type ($generated@@268 $generated@@269)) $generated@@154)
 :pattern ( ($generated@@268 $generated@@269))
)))
(assert (forall (($generated@@270 T@U) ($generated@@271 T@U) ($generated@@272 T@U) ) (!  (=> (and (= (type $generated@@271) $generated@@66) (= (type $generated@@272) ($generated@@78 $generated@@79 $generated@@80))) (= ($generated@@247 ($generated@@268 $generated@@270) $generated@@271 $generated@@272) ($generated@@76 $generated@@270 $generated@@271 $generated@@272)))
 :pattern ( ($generated@@247 ($generated@@268 $generated@@270) $generated@@271 $generated@@272))
)))
(assert (forall (($generated@@273 T@U) ($generated@@274 T@U) ($generated@@275 T@U) ($generated@@276 T@U) ) (!  (=> (and (and (and (and (and (= (type $generated@@273) ($generated@@78 $generated@@79 $generated@@80)) (= (type $generated@@274) ($generated@@78 $generated@@79 $generated@@80))) (= (type $generated@@275) $generated@@154)) (= (type $generated@@276) $generated@@66)) ($generated@@134 $generated@@273 $generated@@274)) ($generated@@247 $generated@@275 $generated@@276 $generated@@273)) ($generated@@247 $generated@@275 $generated@@276 $generated@@274))
 :pattern ( ($generated@@134 $generated@@273 $generated@@274) ($generated@@247 $generated@@275 $generated@@276 $generated@@273))
)))
(assert (forall (($generated@@277 T@U) ($generated@@278 T@U) ($generated@@279 T@U) ($generated@@280 T@U) ) (!  (=> (and (and (and (and (= (type $generated@@277) ($generated@@78 $generated@@79 $generated@@80)) (= (type $generated@@278) ($generated@@78 $generated@@79 $generated@@80))) (= (type $generated@@280) $generated@@66)) ($generated@@134 $generated@@277 $generated@@278)) ($generated@@76 $generated@@279 $generated@@280 $generated@@277)) ($generated@@76 $generated@@279 $generated@@280 $generated@@278))
 :pattern ( ($generated@@134 $generated@@277 $generated@@278) ($generated@@76 $generated@@279 $generated@@280 $generated@@277))
)))
(assert (forall (($generated@@283 T@T) ) (! (= (type ($generated@@282 $generated@@283)) ($generated@@78 $generated@@283 $generated@@2))
 :pattern ( ($generated@@282 $generated@@283))
)))
(assert (forall (($generated@@284 T@U) ) (! (let (($generated@@285 ($generated@@81 (type $generated@@284))))
 (=> (= (type $generated@@284) ($generated@@78 $generated@@285 $generated@@2)) (and (= (= ($generated@@281 $generated@@284) 0) (= $generated@@284 ($generated@@282 $generated@@285))) (=> (not (= ($generated@@281 $generated@@284) 0)) (exists (($generated@@286 T@U) ) (!  (and (= (type $generated@@286) $generated@@285) (< 0 ($generated ($generated@@83 $generated@@284 $generated@@286))))
 :no-pattern (type $generated@@286)
 :no-pattern ($generated $generated@@286)
 :no-pattern ($generated@@0 $generated@@286)
))))))
 :pattern ( ($generated@@281 $generated@@284))
)))
(assert  (and (and (and (and (forall (($generated@@292 T@T) ($generated@@293 T@T) ) (= ($generated@@1 ($generated@@289 $generated@@292 $generated@@293)) 18)) (forall (($generated@@294 T@T) ($generated@@295 T@T) ) (! (= ($generated@@290 ($generated@@289 $generated@@294 $generated@@295)) $generated@@294)
 :pattern ( ($generated@@289 $generated@@294 $generated@@295))
))) (forall (($generated@@296 T@T) ($generated@@297 T@T) ) (! (= ($generated@@291 ($generated@@289 $generated@@296 $generated@@297)) $generated@@297)
 :pattern ( ($generated@@289 $generated@@296 $generated@@297))
))) (forall (($generated@@298 T@U) ) (! (let (($generated@@299 ($generated@@290 (type $generated@@298))))
(= (type ($generated@@287 $generated@@298)) ($generated@@78 $generated@@299 $generated@@4)))
 :pattern ( ($generated@@287 $generated@@298))
))) (forall (($generated@@300 T@T) ($generated@@301 T@T) ) (! (= (type ($generated@@288 $generated@@300 $generated@@301)) ($generated@@289 $generated@@300 $generated@@301))
 :pattern ( ($generated@@288 $generated@@300 $generated@@301))
))))
(assert (forall (($generated@@302 T@U) ($generated@@303 T@T) ) (! (let (($generated@@304 (type $generated@@302)))
 (not ($generated@@0 ($generated@@83 ($generated@@287 ($generated@@288 $generated@@304 $generated@@303)) $generated@@302))))
 :pattern ( (let (($generated@@304 (type $generated@@302)))
($generated@@83 ($generated@@287 ($generated@@288 $generated@@304 $generated@@303)) $generated@@302)))
)))
(assert  (and (and (and (and (forall (($generated@@310 T@T) ($generated@@311 T@T) ) (= ($generated@@1 ($generated@@307 $generated@@310 $generated@@311)) 19)) (forall (($generated@@312 T@T) ($generated@@313 T@T) ) (! (= ($generated@@308 ($generated@@307 $generated@@312 $generated@@313)) $generated@@312)
 :pattern ( ($generated@@307 $generated@@312 $generated@@313))
))) (forall (($generated@@314 T@T) ($generated@@315 T@T) ) (! (= ($generated@@309 ($generated@@307 $generated@@314 $generated@@315)) $generated@@315)
 :pattern ( ($generated@@307 $generated@@314 $generated@@315))
))) (forall (($generated@@316 T@U) ) (! (let (($generated@@317 ($generated@@308 (type $generated@@316))))
(= (type ($generated@@305 $generated@@316)) ($generated@@78 $generated@@317 $generated@@4)))
 :pattern ( ($generated@@305 $generated@@316))
))) (forall (($generated@@318 T@T) ($generated@@319 T@T) ) (! (= (type ($generated@@306 $generated@@318 $generated@@319)) ($generated@@307 $generated@@318 $generated@@319))
 :pattern ( ($generated@@306 $generated@@318 $generated@@319))
))))
(assert (forall (($generated@@320 T@U) ($generated@@321 T@T) ) (! (let (($generated@@322 (type $generated@@320)))
 (not ($generated@@0 ($generated@@83 ($generated@@305 ($generated@@306 $generated@@322 $generated@@321)) $generated@@320))))
 :pattern ( (let (($generated@@322 (type $generated@@320)))
($generated@@83 ($generated@@305 ($generated@@306 $generated@@322 $generated@@321)) $generated@@320)))
)))
(assert (forall (($generated@@323 T@U) ) (! (let (($generated@@324 ($generated@@81 (type $generated@@323))))
 (=> (= (type $generated@@323) ($generated@@78 $generated@@324 $generated@@2)) (= ($generated@@160 $generated@@323) (forall (($generated@@325 T@U) ) (!  (=> (= (type $generated@@325) $generated@@324) (and (<= 0 ($generated ($generated@@83 $generated@@323 $generated@@325))) (<= ($generated ($generated@@83 $generated@@323 $generated@@325)) ($generated@@281 $generated@@323))))
 :pattern ( ($generated@@83 $generated@@323 $generated@@325))
)))))
 :pattern ( ($generated@@160 $generated@@323))
)))
(assert (forall (($generated@@327 T@T) ($generated@@328 T@U) ) (! (= (type ($generated@@326 $generated@@327 $generated@@328)) $generated@@327)
 :pattern ( ($generated@@326 $generated@@327 $generated@@328))
)))
(assert (forall (($generated@@329 T@U) ) (!  (=> (and (= (type $generated@@329) $generated@@154) ($generated@@221 $generated@@329 $generated@@138)) (and (= ($generated@@268 ($generated@@326 $generated@@2 $generated@@329)) $generated@@329) ($generated@@141 ($generated@@326 $generated@@2 $generated@@329) $generated@@138)))
 :pattern ( ($generated@@221 $generated@@329 $generated@@138))
)))
(assert (forall (($generated@@330 T@U) ) (! (let (($generated@@331 ($generated@@291 (type $generated@@330))))
(let (($generated@@332 ($generated@@290 (type $generated@@330))))
 (=> (= (type $generated@@330) ($generated@@289 $generated@@332 $generated@@331)) (or (= $generated@@330 ($generated@@288 $generated@@332 $generated@@331)) (exists (($generated@@333 T@U) ) (!  (and (= (type $generated@@333) $generated@@332) ($generated@@0 ($generated@@83 ($generated@@287 $generated@@330) $generated@@333)))
 :no-pattern (type $generated@@333)
 :no-pattern ($generated $generated@@333)
 :no-pattern ($generated@@0 $generated@@333)
))))))
 :pattern ( ($generated@@287 $generated@@330))
)))
(assert (forall (($generated@@335 T@U) ) (! (let (($generated@@336 ($generated@@291 (type $generated@@335))))
(= (type ($generated@@334 $generated@@335)) ($generated@@78 $generated@@336 $generated@@4)))
 :pattern ( ($generated@@334 $generated@@335))
)))
(assert (forall (($generated@@337 T@U) ) (! (let (($generated@@338 ($generated@@291 (type $generated@@337))))
(let (($generated@@339 ($generated@@290 (type $generated@@337))))
 (=> (= (type $generated@@337) ($generated@@289 $generated@@339 $generated@@338)) (or (= $generated@@337 ($generated@@288 $generated@@339 $generated@@338)) (exists (($generated@@340 T@U) ) (!  (and (= (type $generated@@340) $generated@@338) ($generated@@0 ($generated@@83 ($generated@@334 $generated@@337) $generated@@340)))
 :no-pattern (type $generated@@340)
 :no-pattern ($generated $generated@@340)
 :no-pattern ($generated@@0 $generated@@340)
))))))
 :pattern ( ($generated@@334 $generated@@337))
)))
(assert (forall (($generated@@341 T@U) ) (! (let (($generated@@342 ($generated@@309 (type $generated@@341))))
(let (($generated@@343 ($generated@@308 (type $generated@@341))))
 (=> (= (type $generated@@341) ($generated@@307 $generated@@343 $generated@@342)) (or (= $generated@@341 ($generated@@306 $generated@@343 $generated@@342)) (exists (($generated@@344 T@U) ) (!  (and (= (type $generated@@344) $generated@@343) ($generated@@0 ($generated@@83 ($generated@@305 $generated@@341) $generated@@344)))
 :no-pattern (type $generated@@344)
 :no-pattern ($generated $generated@@344)
 :no-pattern ($generated@@0 $generated@@344)
))))))
 :pattern ( ($generated@@305 $generated@@341))
)))
(assert (forall (($generated@@346 T@U) ) (! (let (($generated@@347 ($generated@@309 (type $generated@@346))))
(= (type ($generated@@345 $generated@@346)) ($generated@@78 $generated@@347 $generated@@4)))
 :pattern ( ($generated@@345 $generated@@346))
)))
(assert (forall (($generated@@348 T@U) ) (! (let (($generated@@349 ($generated@@309 (type $generated@@348))))
(let (($generated@@350 ($generated@@308 (type $generated@@348))))
 (=> (= (type $generated@@348) ($generated@@307 $generated@@350 $generated@@349)) (or (= $generated@@348 ($generated@@306 $generated@@350 $generated@@349)) (exists (($generated@@351 T@U) ) (!  (and (= (type $generated@@351) $generated@@349) ($generated@@0 ($generated@@83 ($generated@@345 $generated@@348) $generated@@351)))
 :no-pattern (type $generated@@351)
 :no-pattern ($generated $generated@@351)
 :no-pattern ($generated@@0 $generated@@351)
))))))
 :pattern ( ($generated@@345 $generated@@348))
)))
(assert (forall (($generated@@352 T@U) ($generated@@353 T@U) ) (!  (=> (and (= (type $generated@@352) ($generated@@78 $generated@@154 $generated@@2)) (= (type $generated@@353) $generated@@66)) (= ($generated@@141 $generated@@352 ($generated@@159 $generated@@353)) (forall (($generated@@354 T@U) ) (!  (=> (and (= (type $generated@@354) $generated@@154) (< 0 ($generated ($generated@@83 $generated@@352 $generated@@354)))) ($generated@@221 $generated@@354 $generated@@353))
 :pattern ( ($generated@@83 $generated@@352 $generated@@354))
))))
 :pattern ( ($generated@@141 $generated@@352 ($generated@@159 $generated@@353)))
)))
(assert (forall (($generated@@355 T@U) ($generated@@356 T@U) ($generated@@357 T@U) ) (!  (=> (and (and (= (type $generated@@355) ($generated@@78 $generated@@154 $generated@@4)) (= (type $generated@@356) $generated@@66)) (= (type $generated@@357) ($generated@@78 $generated@@79 $generated@@80))) (= ($generated@@76 $generated@@355 ($generated@@230 $generated@@356) $generated@@357) (forall (($generated@@358 T@U) ) (!  (=> (and (= (type $generated@@358) $generated@@154) ($generated@@0 ($generated@@83 $generated@@355 $generated@@358))) ($generated@@247 $generated@@358 $generated@@356 $generated@@357))
 :pattern ( ($generated@@83 $generated@@355 $generated@@358))
))))
 :pattern ( ($generated@@76 $generated@@355 ($generated@@230 $generated@@356) $generated@@357))
)))
(assert (forall (($generated@@359 T@U) ($generated@@360 T@U) ($generated@@361 T@U) ) (!  (=> (and (and (= (type $generated@@359) ($generated@@78 $generated@@154 $generated@@4)) (= (type $generated@@360) $generated@@66)) (= (type $generated@@361) ($generated@@78 $generated@@79 $generated@@80))) (= ($generated@@76 $generated@@359 ($generated@@235 $generated@@360) $generated@@361) (forall (($generated@@362 T@U) ) (!  (=> (and (= (type $generated@@362) $generated@@154) ($generated@@0 ($generated@@83 $generated@@359 $generated@@362))) ($generated@@247 $generated@@362 $generated@@360 $generated@@361))
 :pattern ( ($generated@@83 $generated@@359 $generated@@362))
))))
 :pattern ( ($generated@@76 $generated@@359 ($generated@@235 $generated@@360) $generated@@361))
)))
(assert (forall (($generated@@363 T@U) ) (! (let (($generated@@364 (type $generated@@363)))
(= ($generated ($generated@@83 ($generated@@282 $generated@@364) $generated@@363)) 0))
 :pattern ( (let (($generated@@364 (type $generated@@363)))
($generated@@83 ($generated@@282 $generated@@364) $generated@@363)))
)))
(assert  (and (forall (($generated@@367 T@U) ) (! (= (type ($generated@@365 $generated@@367)) ($generated@@78 $generated@@154 $generated@@4))
 :pattern ( ($generated@@365 $generated@@367))
)) (forall (($generated@@368 T@U) ) (! (let (($generated@@369 ($generated@@291 (type $generated@@368))))
(let (($generated@@370 ($generated@@290 (type $generated@@368))))
(= (type ($generated@@366 $generated@@368)) ($generated@@78 $generated@@370 $generated@@369))))
 :pattern ( ($generated@@366 $generated@@368))
))))
(assert (forall (($generated@@371 T@U) ($generated@@372 T@U) ) (!  (=> (and (= (type $generated@@371) ($generated@@289 $generated@@154 $generated@@154)) (= (type $generated@@372) $generated@@154)) (= ($generated@@0 ($generated@@83 ($generated@@365 $generated@@371) $generated@@372))  (and ($generated@@0 ($generated@@83 ($generated@@287 $generated@@371) ($generated@@152 ($generated@@326 $generated@@145 $generated@@372)))) (= ($generated@@83 ($generated@@366 $generated@@371) ($generated@@152 ($generated@@326 $generated@@145 $generated@@372))) ($generated@@153 ($generated@@326 $generated@@145 $generated@@372))))))
 :pattern ( ($generated@@83 ($generated@@365 $generated@@371) $generated@@372))
)))
(assert  (and (forall (($generated@@375 T@U) ) (! (= (type ($generated@@373 $generated@@375)) ($generated@@78 $generated@@154 $generated@@4))
 :pattern ( ($generated@@373 $generated@@375))
)) (forall (($generated@@376 T@U) ) (! (let (($generated@@377 ($generated@@309 (type $generated@@376))))
(let (($generated@@378 ($generated@@308 (type $generated@@376))))
(= (type ($generated@@374 $generated@@376)) ($generated@@78 $generated@@378 $generated@@377))))
 :pattern ( ($generated@@374 $generated@@376))
))))
(assert (forall (($generated@@379 T@U) ($generated@@380 T@U) ) (!  (=> (and (= (type $generated@@379) ($generated@@307 $generated@@154 $generated@@154)) (= (type $generated@@380) $generated@@154)) (= ($generated@@0 ($generated@@83 ($generated@@373 $generated@@379) $generated@@380))  (and ($generated@@0 ($generated@@83 ($generated@@305 $generated@@379) ($generated@@152 ($generated@@326 $generated@@145 $generated@@380)))) (= ($generated@@83 ($generated@@374 $generated@@379) ($generated@@152 ($generated@@326 $generated@@145 $generated@@380))) ($generated@@153 ($generated@@326 $generated@@145 $generated@@380))))))
 :pattern ( ($generated@@83 ($generated@@373 $generated@@379) $generated@@380))
)))
(assert (forall (($generated@@381 T@U) ($generated@@382 T@U) ) (! (let (($generated@@383 (type $generated@@382)))
(let (($generated@@384 ($generated@@290 (type $generated@@381))))
 (=> (= (type $generated@@381) ($generated@@289 $generated@@384 $generated@@383)) (= ($generated@@0 ($generated@@83 ($generated@@334 $generated@@381) $generated@@382)) (exists (($generated@@385 T@U) ) (!  (and (= (type $generated@@385) $generated@@384) (and ($generated@@0 ($generated@@83 ($generated@@287 $generated@@381) $generated@@385)) (= $generated@@382 ($generated@@83 ($generated@@366 $generated@@381) $generated@@385))))
 :pattern ( ($generated@@83 ($generated@@287 $generated@@381) $generated@@385))
 :pattern ( ($generated@@83 ($generated@@366 $generated@@381) $generated@@385))
))))))
 :pattern ( ($generated@@83 ($generated@@334 $generated@@381) $generated@@382))
)))
(assert (forall (($generated@@386 T@U) ($generated@@387 T@U) ) (! (let (($generated@@388 (type $generated@@387)))
(let (($generated@@389 ($generated@@308 (type $generated@@386))))
 (=> (= (type $generated@@386) ($generated@@307 $generated@@389 $generated@@388)) (= ($generated@@0 ($generated@@83 ($generated@@345 $generated@@386) $generated@@387)) (exists (($generated@@390 T@U) ) (!  (and (= (type $generated@@390) $generated@@389) (and ($generated@@0 ($generated@@83 ($generated@@305 $generated@@386) $generated@@390)) (= $generated@@387 ($generated@@83 ($generated@@374 $generated@@386) $generated@@390))))
 :pattern ( ($generated@@83 ($generated@@305 $generated@@386) $generated@@390))
 :pattern ( ($generated@@83 ($generated@@374 $generated@@386) $generated@@390))
))))))
 :pattern ( ($generated@@83 ($generated@@345 $generated@@386) $generated@@387))
)))
(assert (forall (($generated@@392 T@U) ($generated@@393 T@U) ) (! (= (type ($generated@@391 $generated@@392 $generated@@393)) $generated@@66)
 :pattern ( ($generated@@391 $generated@@392 $generated@@393))
)))
(assert (forall (($generated@@394 T@U) ($generated@@395 T@U) ($generated@@396 T@U) ($generated@@397 T@U) ) (!  (=> (and (and (and (= (type $generated@@394) ($generated@@289 $generated@@154 $generated@@154)) (= (type $generated@@395) $generated@@66)) (= (type $generated@@396) $generated@@66)) (= (type $generated@@397) ($generated@@78 $generated@@79 $generated@@80))) (= ($generated@@76 $generated@@394 ($generated@@391 $generated@@395 $generated@@396) $generated@@397) (forall (($generated@@398 T@U) ) (!  (=> (and (= (type $generated@@398) $generated@@154) ($generated@@0 ($generated@@83 ($generated@@287 $generated@@394) $generated@@398))) (and ($generated@@247 ($generated@@83 ($generated@@366 $generated@@394) $generated@@398) $generated@@396 $generated@@397) ($generated@@247 $generated@@398 $generated@@395 $generated@@397)))
 :pattern ( ($generated@@83 ($generated@@366 $generated@@394) $generated@@398))
 :pattern ( ($generated@@83 ($generated@@287 $generated@@394) $generated@@398))
))))
 :pattern ( ($generated@@76 $generated@@394 ($generated@@391 $generated@@395 $generated@@396) $generated@@397))
)))
(assert (forall (($generated@@400 T@U) ($generated@@401 T@U) ) (! (= (type ($generated@@399 $generated@@400 $generated@@401)) $generated@@66)
 :pattern ( ($generated@@399 $generated@@400 $generated@@401))
)))
(assert (forall (($generated@@402 T@U) ($generated@@403 T@U) ($generated@@404 T@U) ($generated@@405 T@U) ) (!  (=> (and (and (and (= (type $generated@@402) ($generated@@307 $generated@@154 $generated@@154)) (= (type $generated@@403) $generated@@66)) (= (type $generated@@404) $generated@@66)) (= (type $generated@@405) ($generated@@78 $generated@@79 $generated@@80))) (= ($generated@@76 $generated@@402 ($generated@@399 $generated@@403 $generated@@404) $generated@@405) (forall (($generated@@406 T@U) ) (!  (=> (and (= (type $generated@@406) $generated@@154) ($generated@@0 ($generated@@83 ($generated@@305 $generated@@402) $generated@@406))) (and ($generated@@247 ($generated@@83 ($generated@@374 $generated@@402) $generated@@406) $generated@@404 $generated@@405) ($generated@@247 $generated@@406 $generated@@403 $generated@@405)))
 :pattern ( ($generated@@83 ($generated@@374 $generated@@402) $generated@@406))
 :pattern ( ($generated@@83 ($generated@@305 $generated@@402) $generated@@406))
))))
 :pattern ( ($generated@@76 $generated@@402 ($generated@@399 $generated@@403 $generated@@404) $generated@@405))
)))
(assert (forall (($generated@@407 T@U) ($generated@@408 T@U) ($generated@@409 T@U) ) (!  (=> (and (and (and (and (= (type $generated@@407) ($generated@@78 $generated@@79 $generated@@80)) (= (type $generated@@408) ($generated@@78 $generated@@79 $generated@@80))) (= (type $generated@@409) ($generated@@78 $generated@@79 $generated@@80))) (not (= $generated@@407 $generated@@409))) (and ($generated@@134 $generated@@407 $generated@@408) ($generated@@134 $generated@@408 $generated@@409))) ($generated@@134 $generated@@407 $generated@@409))
 :pattern ( ($generated@@134 $generated@@407 $generated@@408) ($generated@@134 $generated@@408 $generated@@409))
)))
(assert (forall (($generated@@411 T@T) ) (! (= (type ($generated@@410 $generated@@411)) ($generated@@78 $generated@@411 $generated@@4))
 :pattern ( ($generated@@410 $generated@@411))
)))
(assert (forall (($generated@@412 T@U) ) (! (let (($generated@@413 ($generated@@309 (type $generated@@412))))
(let (($generated@@414 ($generated@@308 (type $generated@@412))))
 (=> (= (type $generated@@412) ($generated@@307 $generated@@414 $generated@@413)) (= (= $generated@@412 ($generated@@306 $generated@@414 $generated@@413)) (= ($generated@@305 $generated@@412) ($generated@@410 $generated@@414))))))
 :pattern ( ($generated@@305 $generated@@412))
)))
(assert (forall (($generated@@415 T@U) ) (! (let (($generated@@416 ($generated@@309 (type $generated@@415))))
(let (($generated@@417 ($generated@@308 (type $generated@@415))))
 (=> (= (type $generated@@415) ($generated@@307 $generated@@417 $generated@@416)) (= (= $generated@@415 ($generated@@306 $generated@@417 $generated@@416)) (= ($generated@@345 $generated@@415) ($generated@@410 $generated@@416))))))
 :pattern ( ($generated@@345 $generated@@415))
)))
(assert (forall (($generated@@418 T@U) ) (! (let (($generated@@419 ($generated@@309 (type $generated@@418))))
(let (($generated@@420 ($generated@@308 (type $generated@@418))))
 (=> (= (type $generated@@418) ($generated@@307 $generated@@420 $generated@@419)) (= (= $generated@@418 ($generated@@306 $generated@@420 $generated@@419)) (= ($generated@@373 $generated@@418) ($generated@@410 $generated@@154))))))
 :pattern ( ($generated@@373 $generated@@418))
)))
(assert (forall (($generated@@421 T@U) ) (! (let (($generated@@422 ($generated@@291 (type $generated@@421))))
(let (($generated@@423 ($generated@@290 (type $generated@@421))))
 (=> (= (type $generated@@421) ($generated@@289 $generated@@423 $generated@@422)) (or (= $generated@@421 ($generated@@288 $generated@@423 $generated@@422)) (exists (($generated@@424 T@U) ($generated@@425 T@U) ) (!  (and (and (= (type $generated@@424) $generated@@154) (= (type $generated@@425) $generated@@154)) ($generated@@0 ($generated@@83 ($generated@@365 $generated@@421) ($generated@@268 ($generated@@220 $generated@@424 $generated@@425)))))
 :no-pattern (type $generated@@424)
 :no-pattern (type $generated@@425)
 :no-pattern ($generated $generated@@424)
 :no-pattern ($generated@@0 $generated@@424)
 :no-pattern ($generated $generated@@425)
 :no-pattern ($generated@@0 $generated@@425)
))))))
 :pattern ( ($generated@@365 $generated@@421))
)))
(assert (forall (($generated@@426 T@U) ) (! (let (($generated@@427 ($generated@@309 (type $generated@@426))))
(let (($generated@@428 ($generated@@308 (type $generated@@426))))
 (=> (= (type $generated@@426) ($generated@@307 $generated@@428 $generated@@427)) (or (= $generated@@426 ($generated@@306 $generated@@428 $generated@@427)) (exists (($generated@@429 T@U) ($generated@@430 T@U) ) (!  (and (and (= (type $generated@@429) $generated@@154) (= (type $generated@@430) $generated@@154)) ($generated@@0 ($generated@@83 ($generated@@373 $generated@@426) ($generated@@268 ($generated@@220 $generated@@429 $generated@@430)))))
 :no-pattern (type $generated@@429)
 :no-pattern (type $generated@@430)
 :no-pattern ($generated $generated@@429)
 :no-pattern ($generated@@0 $generated@@429)
 :no-pattern ($generated $generated@@430)
 :no-pattern ($generated@@0 $generated@@430)
))))))
 :pattern ( ($generated@@373 $generated@@426))
)))
(assert (forall (($generated@@431 T@U) ) (!  (=> (and (= (type $generated@@431) $generated@@154) ($generated@@221 $generated@@431 $generated@@46)) (and (= ($generated@@268 ($generated@@326 $generated@@2 $generated@@431)) $generated@@431) ($generated@@141 ($generated@@326 $generated@@2 $generated@@431) $generated@@46)))
 :pattern ( ($generated@@221 $generated@@431 $generated@@46))
)))
(assert (forall (($generated@@432 T@U) ) (!  (=> (and (= (type $generated@@432) $generated@@154) ($generated@@221 $generated@@432 $generated@@47)) (and (= ($generated@@268 ($generated@@326 $generated@@3 $generated@@432)) $generated@@432) ($generated@@141 ($generated@@326 $generated@@3 $generated@@432) $generated@@47)))
 :pattern ( ($generated@@221 $generated@@432 $generated@@47))
)))
(assert (forall (($generated@@433 T@U) ) (!  (=> (and (= (type $generated@@433) $generated@@154) ($generated@@221 $generated@@433 $generated@@44)) (and (= ($generated@@268 ($generated@@326 $generated@@4 $generated@@433)) $generated@@433) ($generated@@141 ($generated@@326 $generated@@4 $generated@@433) $generated@@44)))
 :pattern ( ($generated@@221 $generated@@433 $generated@@44))
)))
(assert (= ($generated@@1 $generated@@434) 20))
(assert (forall (($generated@@435 T@U) ) (!  (=> (and (= (type $generated@@435) $generated@@154) ($generated@@221 $generated@@435 $generated@@45)) (and (= ($generated@@268 ($generated@@326 $generated@@434 $generated@@435)) $generated@@435) ($generated@@141 ($generated@@326 $generated@@434 $generated@@435) $generated@@45)))
 :pattern ( ($generated@@221 $generated@@435 $generated@@45))
)))
(assert (forall (($generated@@436 T@U) ($generated@@437 T@U) ) (!  (=> (= (type $generated@@437) $generated@@66) (= ($generated@@221 ($generated@@268 $generated@@436) $generated@@437) ($generated@@141 $generated@@436 $generated@@437)))
 :pattern ( ($generated@@221 ($generated@@268 $generated@@436) $generated@@437))
)))
(assert (forall (($generated@@438 T@U) ) (! (let (($generated@@439 ($generated@@81 (type $generated@@438))))
 (=> (= (type $generated@@438) ($generated@@78 $generated@@439 $generated@@2)) (<= 0 ($generated@@281 $generated@@438))))
 :pattern ( ($generated@@281 $generated@@438))
)))
(assert (forall (($generated@@440 T@U) ) (! (let (($generated@@441 ($generated@@262 (type $generated@@440))))
 (=> (= (type $generated@@440) ($generated@@261 $generated@@441)) (<= 0 ($generated@@260 $generated@@440))))
 :pattern ( ($generated@@260 $generated@@440))
)))
(assert (forall (($generated@@443 T@U) ) (! (= (type ($generated@@442 $generated@@443)) $generated@@66)
 :pattern ( ($generated@@442 $generated@@443))
)))
(assert (forall (($generated@@444 T@U) ($generated@@445 T@U) ) (!  (=> (and (= (type $generated@@444) $generated@@66) (= (type $generated@@445) $generated@@66)) (= ($generated@@442 ($generated@@391 $generated@@444 $generated@@445)) $generated@@444))
 :pattern ( ($generated@@391 $generated@@444 $generated@@445))
)))
(assert (forall (($generated@@447 T@U) ) (! (= (type ($generated@@446 $generated@@447)) $generated@@66)
 :pattern ( ($generated@@446 $generated@@447))
)))
(assert (forall (($generated@@448 T@U) ($generated@@449 T@U) ) (!  (=> (and (= (type $generated@@448) $generated@@66) (= (type $generated@@449) $generated@@66)) (= ($generated@@446 ($generated@@391 $generated@@448 $generated@@449)) $generated@@449))
 :pattern ( ($generated@@391 $generated@@448 $generated@@449))
)))
(assert (forall (($generated@@450 T@U) ($generated@@451 T@U) ) (!  (=> (and (= (type $generated@@450) $generated@@66) (= (type $generated@@451) $generated@@66)) (= ($generated@@74 ($generated@@391 $generated@@450 $generated@@451)) $generated@@58))
 :pattern ( ($generated@@391 $generated@@450 $generated@@451))
)))
(assert (forall (($generated@@453 T@U) ) (! (= (type ($generated@@452 $generated@@453)) $generated@@66)
 :pattern ( ($generated@@452 $generated@@453))
)))
(assert (forall (($generated@@454 T@U) ($generated@@455 T@U) ) (!  (=> (and (= (type $generated@@454) $generated@@66) (= (type $generated@@455) $generated@@66)) (= ($generated@@452 ($generated@@399 $generated@@454 $generated@@455)) $generated@@454))
 :pattern ( ($generated@@399 $generated@@454 $generated@@455))
)))
(assert (forall (($generated@@457 T@U) ) (! (= (type ($generated@@456 $generated@@457)) $generated@@66)
 :pattern ( ($generated@@456 $generated@@457))
)))
(assert (forall (($generated@@458 T@U) ($generated@@459 T@U) ) (!  (=> (and (= (type $generated@@458) $generated@@66) (= (type $generated@@459) $generated@@66)) (= ($generated@@456 ($generated@@399 $generated@@458 $generated@@459)) $generated@@459))
 :pattern ( ($generated@@399 $generated@@458 $generated@@459))
)))
(assert (forall (($generated@@460 T@U) ($generated@@461 T@U) ) (!  (=> (and (= (type $generated@@460) $generated@@66) (= (type $generated@@461) $generated@@66)) (= ($generated@@74 ($generated@@399 $generated@@460 $generated@@461)) $generated@@59))
 :pattern ( ($generated@@399 $generated@@460 $generated@@461))
)))
(assert (forall (($generated@@462 T@U) ($generated@@463 T@U) ) (!  (=> (and (= (type $generated@@462) $generated@@154) (= (type $generated@@463) $generated@@154)) (= ($generated@@253 ($generated@@220 $generated@@462 $generated@@463)) $generated@@62))
 :pattern ( ($generated@@220 $generated@@462 $generated@@463))
)))
(assert (forall (($generated@@465 T@U) ) (! (= (type ($generated@@464 $generated@@465)) $generated@@66)
 :pattern ( ($generated@@464 $generated@@465))
)))
(assert (forall (($generated@@466 T@U) ($generated@@467 T@U) ) (!  (=> (and (= (type $generated@@466) $generated@@66) (= (type $generated@@467) $generated@@66)) (= ($generated@@464 ($generated@@144 $generated@@466 $generated@@467)) $generated@@466))
 :pattern ( ($generated@@144 $generated@@466 $generated@@467))
)))
(assert (forall (($generated@@469 T@U) ) (! (= (type ($generated@@468 $generated@@469)) $generated@@66)
 :pattern ( ($generated@@468 $generated@@469))
)))
(assert (forall (($generated@@470 T@U) ($generated@@471 T@U) ) (!  (=> (and (= (type $generated@@470) $generated@@66) (= (type $generated@@471) $generated@@66)) (= ($generated@@468 ($generated@@144 $generated@@470 $generated@@471)) $generated@@471))
 :pattern ( ($generated@@144 $generated@@470 $generated@@471))
)))
(assert (forall (($generated@@472 T@U) ($generated@@473 T@U) ) (!  (=> (and (= (type $generated@@472) $generated@@154) (= (type $generated@@473) $generated@@154)) (= ($generated@@152 ($generated@@220 $generated@@472 $generated@@473)) $generated@@472))
 :pattern ( ($generated@@220 $generated@@472 $generated@@473))
)))
(assert (forall (($generated@@474 T@U) ($generated@@475 T@U) ) (!  (=> (and (= (type $generated@@474) $generated@@154) (= (type $generated@@475) $generated@@154)) (= ($generated@@153 ($generated@@220 $generated@@474 $generated@@475)) $generated@@475))
 :pattern ( ($generated@@220 $generated@@474 $generated@@475))
)))
(assert  (and (forall (($generated@@478 T@U) ) (! (= (type ($generated@@476 $generated@@478)) $generated@@66)
 :pattern ( ($generated@@476 $generated@@478))
)) (forall (($generated@@479 T@U) ($generated@@480 Int) ) (! (let (($generated@@481 ($generated@@262 (type $generated@@479))))
(= (type ($generated@@477 $generated@@479 $generated@@480)) $generated@@481))
 :pattern ( ($generated@@477 $generated@@479 $generated@@480))
))))
(assert (forall (($generated@@482 T@U) ($generated@@483 T@U) ($generated@@484 T@U) ) (!  (=> (and (and (= (type $generated@@482) ($generated@@261 $generated@@154)) (= (type $generated@@483) $generated@@66)) (= (type $generated@@484) ($generated@@78 $generated@@79 $generated@@80))) (= ($generated@@76 $generated@@482 ($generated@@476 $generated@@483) $generated@@484) (forall (($generated@@485 Int) ) (!  (=> (and (<= 0 $generated@@485) (< $generated@@485 ($generated@@260 $generated@@482))) ($generated@@247 ($generated@@477 $generated@@482 $generated@@485) $generated@@483 $generated@@484))
 :pattern ( ($generated@@477 $generated@@482 $generated@@485))
))))
 :pattern ( ($generated@@76 $generated@@482 ($generated@@476 $generated@@483) $generated@@484))
)))
(assert (forall (($generated@@487 Int) ) (! (= ($generated@@486 ($generated@@77 $generated@@487)) $generated@@487)
 :pattern ( ($generated@@77 $generated@@487))
)))
(assert (forall (($generated@@489 T@U) ) (! (= (type ($generated@@488 $generated@@489)) $generated@@66)
 :pattern ( ($generated@@488 $generated@@489))
)))
(assert (forall (($generated@@490 T@U) ) (!  (=> (= (type $generated@@490) $generated@@66) (= ($generated@@488 ($generated@@230 $generated@@490)) $generated@@490))
 :pattern ( ($generated@@230 $generated@@490))
)))
(assert (forall (($generated@@491 T@U) ) (!  (=> (= (type $generated@@491) $generated@@66) (= ($generated@@74 ($generated@@230 $generated@@491)) $generated@@54))
 :pattern ( ($generated@@230 $generated@@491))
)))
(assert (forall (($generated@@493 T@U) ) (! (= (type ($generated@@492 $generated@@493)) $generated@@66)
 :pattern ( ($generated@@492 $generated@@493))
)))
(assert (forall (($generated@@494 T@U) ) (!  (=> (= (type $generated@@494) $generated@@66) (= ($generated@@492 ($generated@@235 $generated@@494)) $generated@@494))
 :pattern ( ($generated@@235 $generated@@494))
)))
(assert (forall (($generated@@495 T@U) ) (!  (=> (= (type $generated@@495) $generated@@66) (= ($generated@@74 ($generated@@235 $generated@@495)) $generated@@55))
 :pattern ( ($generated@@235 $generated@@495))
)))
(assert (forall (($generated@@497 T@U) ) (! (= (type ($generated@@496 $generated@@497)) $generated@@66)
 :pattern ( ($generated@@496 $generated@@497))
)))
(assert (forall (($generated@@498 T@U) ) (!  (=> (= (type $generated@@498) $generated@@66) (= ($generated@@496 ($generated@@159 $generated@@498)) $generated@@498))
 :pattern ( ($generated@@159 $generated@@498))
)))
(assert (forall (($generated@@499 T@U) ) (!  (=> (= (type $generated@@499) $generated@@66) (= ($generated@@74 ($generated@@159 $generated@@499)) $generated@@56))
 :pattern ( ($generated@@159 $generated@@499))
)))
(assert (forall (($generated@@501 T@U) ) (! (= (type ($generated@@500 $generated@@501)) $generated@@66)
 :pattern ( ($generated@@500 $generated@@501))
)))
(assert (forall (($generated@@502 T@U) ) (!  (=> (= (type $generated@@502) $generated@@66) (= ($generated@@500 ($generated@@476 $generated@@502)) $generated@@502))
 :pattern ( ($generated@@476 $generated@@502))
)))
(assert (forall (($generated@@503 T@U) ) (!  (=> (= (type $generated@@503) $generated@@66) (= ($generated@@74 ($generated@@476 $generated@@503)) $generated@@57))
 :pattern ( ($generated@@476 $generated@@503))
)))
(assert (forall (($generated@@504 T@U) ) (! (let (($generated@@505 (type $generated@@504)))
(= ($generated@@326 $generated@@505 ($generated@@268 $generated@@504)) $generated@@504))
 :pattern ( ($generated@@268 $generated@@504))
)))
(assert (forall (($generated@@506 T@U) ($generated@@507 T@U) ($generated@@508 T@U) ) (!  (=> (and (and (= (type $generated@@506) ($generated@@289 $generated@@154 $generated@@154)) (= (type $generated@@507) $generated@@66)) (= (type $generated@@508) $generated@@66)) (= ($generated@@141 $generated@@506 ($generated@@391 $generated@@507 $generated@@508)) (forall (($generated@@509 T@U) ) (!  (=> (and (= (type $generated@@509) $generated@@154) ($generated@@0 ($generated@@83 ($generated@@287 $generated@@506) $generated@@509))) (and ($generated@@221 ($generated@@83 ($generated@@366 $generated@@506) $generated@@509) $generated@@508) ($generated@@221 $generated@@509 $generated@@507)))
 :pattern ( ($generated@@83 ($generated@@366 $generated@@506) $generated@@509))
 :pattern ( ($generated@@83 ($generated@@287 $generated@@506) $generated@@509))
))))
 :pattern ( ($generated@@141 $generated@@506 ($generated@@391 $generated@@507 $generated@@508)))
)))
(assert (forall (($generated@@510 T@U) ($generated@@511 T@U) ($generated@@512 T@U) ) (!  (=> (and (and (= (type $generated@@510) ($generated@@307 $generated@@154 $generated@@154)) (= (type $generated@@511) $generated@@66)) (= (type $generated@@512) $generated@@66)) (= ($generated@@141 $generated@@510 ($generated@@399 $generated@@511 $generated@@512)) (forall (($generated@@513 T@U) ) (!  (=> (and (= (type $generated@@513) $generated@@154) ($generated@@0 ($generated@@83 ($generated@@305 $generated@@510) $generated@@513))) (and ($generated@@221 ($generated@@83 ($generated@@374 $generated@@510) $generated@@513) $generated@@512) ($generated@@221 $generated@@513 $generated@@511)))
 :pattern ( ($generated@@83 ($generated@@374 $generated@@510) $generated@@513))
 :pattern ( ($generated@@83 ($generated@@305 $generated@@510) $generated@@513))
))))
 :pattern ( ($generated@@141 $generated@@510 ($generated@@399 $generated@@511 $generated@@512)))
)))
(assert (forall (($generated@@516 T@U) ($generated@@517 T@U) ) (!  (=> (and (= (type $generated@@516) $generated@@154) (= (type $generated@@517) $generated@@154)) (< ($generated@@514 $generated@@516) ($generated@@515 ($generated@@220 $generated@@516 $generated@@517))))
 :pattern ( ($generated@@220 $generated@@516 $generated@@517))
)))
(assert (forall (($generated@@518 T@U) ($generated@@519 T@U) ) (!  (=> (and (= (type $generated@@518) $generated@@154) (= (type $generated@@519) $generated@@154)) (< ($generated@@514 $generated@@519) ($generated@@515 ($generated@@220 $generated@@518 $generated@@519))))
 :pattern ( ($generated@@220 $generated@@518 $generated@@519))
)))
(assert (forall (($generated@@520 T@U) ($generated@@521 T@U) ($generated@@522 T@U) ) (!  (=> (and (and (and (= (type $generated@@520) $generated@@154) (= (type $generated@@521) $generated@@66)) (= (type $generated@@522) $generated@@66)) ($generated@@221 $generated@@520 ($generated@@391 $generated@@521 $generated@@522))) (and (= ($generated@@268 ($generated@@326 ($generated@@289 $generated@@154 $generated@@154) $generated@@520)) $generated@@520) ($generated@@141 ($generated@@326 ($generated@@289 $generated@@154 $generated@@154) $generated@@520) ($generated@@391 $generated@@521 $generated@@522))))
 :pattern ( ($generated@@221 $generated@@520 ($generated@@391 $generated@@521 $generated@@522)))
)))
(assert (forall (($generated@@523 T@U) ($generated@@524 T@U) ($generated@@525 T@U) ) (!  (=> (and (and (and (= (type $generated@@523) $generated@@154) (= (type $generated@@524) $generated@@66)) (= (type $generated@@525) $generated@@66)) ($generated@@221 $generated@@523 ($generated@@399 $generated@@524 $generated@@525))) (and (= ($generated@@268 ($generated@@326 ($generated@@307 $generated@@154 $generated@@154) $generated@@523)) $generated@@523) ($generated@@141 ($generated@@326 ($generated@@307 $generated@@154 $generated@@154) $generated@@523) ($generated@@399 $generated@@524 $generated@@525))))
 :pattern ( ($generated@@221 $generated@@523 ($generated@@399 $generated@@524 $generated@@525)))
)))
(assert (forall (($generated@@526 T@U) ($generated@@527 T@U) ($generated@@528 T@U) ) (!  (=> (and (and (and (= (type $generated@@526) $generated@@66) (= (type $generated@@527) $generated@@66)) (= (type $generated@@528) $generated@@154)) ($generated@@221 $generated@@528 ($generated@@144 $generated@@526 $generated@@527))) (and (= ($generated@@268 ($generated@@326 $generated@@145 $generated@@528)) $generated@@528) ($generated@@141 ($generated@@326 $generated@@145 $generated@@528) ($generated@@144 $generated@@526 $generated@@527))))
 :pattern ( ($generated@@221 $generated@@528 ($generated@@144 $generated@@526 $generated@@527)))
)))
(assert (forall (($generated@@529 T@U) ) (! (let (($generated@@530 (type $generated@@529)))
 (not ($generated@@0 ($generated@@83 ($generated@@410 $generated@@530) $generated@@529))))
 :pattern ( (let (($generated@@530 (type $generated@@529)))
($generated@@83 ($generated@@410 $generated@@530) $generated@@529)))
)))
(assert (forall (($generated@@532 T@U) ) (! (= (type ($generated@@531 $generated@@532)) $generated@@71)
 :pattern ( ($generated@@531 $generated@@532))
)))
(assert (forall (($generated@@533 T@U) ($generated@@534 T@U) ) (!  (=> (and (= (type $generated@@533) $generated@@66) (= (type $generated@@534) $generated@@66)) (and (= ($generated@@74 ($generated@@144 $generated@@533 $generated@@534)) $generated@@63) (= ($generated@@531 ($generated@@144 $generated@@533 $generated@@534)) $generated@@65)))
 :pattern ( ($generated@@144 $generated@@533 $generated@@534))
)))
(assert (forall (($generated@@535 T@U) ) (!  (=> (= (type $generated@@535) $generated@@145) (= ($generated@@514 ($generated@@268 $generated@@535)) ($generated@@515 $generated@@535)))
 :pattern ( ($generated@@514 ($generated@@268 $generated@@535)))
)))
(assert (forall (($generated@@536 T@U) ) (!  (=> (and (= (type $generated@@536) $generated@@154) ($generated@@221 $generated@@536 ($generated@@77 0))) (and (= ($generated@@268 ($generated@@326 $generated@@2 $generated@@536)) $generated@@536) ($generated@@141 ($generated@@326 ($generated@@78 $generated@@154 $generated@@4) $generated@@536) ($generated@@77 0))))
 :pattern ( ($generated@@221 $generated@@536 ($generated@@77 0)))
)))
(assert (forall (($generated@@537 T@U) ($generated@@538 T@U) ) (!  (=> (and (and (= (type $generated@@537) $generated@@154) (= (type $generated@@538) $generated@@66)) ($generated@@221 $generated@@537 ($generated@@230 $generated@@538))) (and (= ($generated@@268 ($generated@@326 ($generated@@78 $generated@@154 $generated@@4) $generated@@537)) $generated@@537) ($generated@@141 ($generated@@326 ($generated@@78 $generated@@154 $generated@@4) $generated@@537) ($generated@@230 $generated@@538))))
 :pattern ( ($generated@@221 $generated@@537 ($generated@@230 $generated@@538)))
)))
(assert (forall (($generated@@539 T@U) ($generated@@540 T@U) ) (!  (=> (and (and (= (type $generated@@539) $generated@@154) (= (type $generated@@540) $generated@@66)) ($generated@@221 $generated@@539 ($generated@@235 $generated@@540))) (and (= ($generated@@268 ($generated@@326 ($generated@@78 $generated@@154 $generated@@4) $generated@@539)) $generated@@539) ($generated@@141 ($generated@@326 ($generated@@78 $generated@@154 $generated@@4) $generated@@539) ($generated@@235 $generated@@540))))
 :pattern ( ($generated@@221 $generated@@539 ($generated@@235 $generated@@540)))
)))
(assert (forall (($generated@@541 T@U) ($generated@@542 T@U) ) (!  (=> (and (and (= (type $generated@@541) $generated@@154) (= (type $generated@@542) $generated@@66)) ($generated@@221 $generated@@541 ($generated@@159 $generated@@542))) (and (= ($generated@@268 ($generated@@326 ($generated@@78 $generated@@154 $generated@@2) $generated@@541)) $generated@@541) ($generated@@141 ($generated@@326 ($generated@@78 $generated@@154 $generated@@2) $generated@@541) ($generated@@159 $generated@@542))))
 :pattern ( ($generated@@221 $generated@@541 ($generated@@159 $generated@@542)))
)))
(assert (forall (($generated@@543 T@U) ($generated@@544 T@U) ) (!  (=> (and (and (= (type $generated@@543) $generated@@154) (= (type $generated@@544) $generated@@66)) ($generated@@221 $generated@@543 ($generated@@476 $generated@@544))) (and (= ($generated@@268 ($generated@@326 ($generated@@261 $generated@@154) $generated@@543)) $generated@@543) ($generated@@141 ($generated@@326 ($generated@@261 $generated@@154) $generated@@543) ($generated@@476 $generated@@544))))
 :pattern ( ($generated@@221 $generated@@543 ($generated@@476 $generated@@544)))
)))
(assert (= ($generated@@74 $generated@@138) $generated@@61))
(assert (= ($generated@@531 $generated@@138) $generated@@64))
(assert (forall (($generated@@545 T@U) ($generated@@546 T@U) ($generated@@547 T@U) ) (!  (=> (and (and (= (type $generated@@545) ($generated@@78 $generated@@154 $generated@@2)) (= (type $generated@@546) $generated@@66)) (= (type $generated@@547) ($generated@@78 $generated@@79 $generated@@80))) (= ($generated@@76 $generated@@545 ($generated@@159 $generated@@546) $generated@@547) (forall (($generated@@548 T@U) ) (!  (=> (and (= (type $generated@@548) $generated@@154) (< 0 ($generated ($generated@@83 $generated@@545 $generated@@548)))) ($generated@@247 $generated@@548 $generated@@546 $generated@@547))
 :pattern ( ($generated@@83 $generated@@545 $generated@@548))
))))
 :pattern ( ($generated@@76 $generated@@545 ($generated@@159 $generated@@546) $generated@@547))
)))
(assert (forall (($generated@@549 T@U) ($generated@@550 T@U) ($generated@@551 T@U) ) (!  (=> (and (and (and (= (type $generated@@549) $generated@@145) (= (type $generated@@550) $generated@@66)) (= (type $generated@@551) ($generated@@78 $generated@@79 $generated@@80))) (and ($generated@@246 $generated@@551) (and ($generated@@143 $generated@@549) (exists (($generated@@552 T@U) ) (!  (and (= (type $generated@@552) $generated@@66) ($generated@@76 $generated@@549 ($generated@@144 $generated@@550 $generated@@552) $generated@@551))
 :pattern ( ($generated@@76 $generated@@549 ($generated@@144 $generated@@550 $generated@@552) $generated@@551))
))))) ($generated@@247 ($generated@@152 $generated@@549) $generated@@550 $generated@@551))
 :pattern ( ($generated@@247 ($generated@@152 $generated@@549) $generated@@550 $generated@@551))
)))
(assert (forall (($generated@@553 T@U) ($generated@@554 T@U) ($generated@@555 T@U) ) (!  (=> (and (and (and (= (type $generated@@553) $generated@@145) (= (type $generated@@554) $generated@@66)) (= (type $generated@@555) ($generated@@78 $generated@@79 $generated@@80))) (and ($generated@@246 $generated@@555) (and ($generated@@143 $generated@@553) (exists (($generated@@556 T@U) ) (!  (and (= (type $generated@@556) $generated@@66) ($generated@@76 $generated@@553 ($generated@@144 $generated@@556 $generated@@554) $generated@@555))
 :pattern ( ($generated@@76 $generated@@553 ($generated@@144 $generated@@556 $generated@@554) $generated@@555))
))))) ($generated@@247 ($generated@@153 $generated@@553) $generated@@554 $generated@@555))
 :pattern ( ($generated@@247 ($generated@@153 $generated@@553) $generated@@554 $generated@@555))
)))
(assert (forall (($generated@@557 T@U) ($generated@@558 T@U) ) (!  (=> (and (= (type $generated@@557) $generated@@154) (= (type $generated@@558) $generated@@154)) (= ($generated@@220 ($generated@@242 $generated@@557) ($generated@@242 $generated@@558)) ($generated@@242 ($generated@@220 $generated@@557 $generated@@558))))
 :pattern ( ($generated@@220 ($generated@@242 $generated@@557) ($generated@@242 $generated@@558)))
)))
(assert (forall (($generated@@559 Int) ) (! (= ($generated@@268 ($generated@@8 ($generated@@240 $generated@@559))) ($generated@@242 ($generated@@268 ($generated@@8 $generated@@559))))
 :pattern ( ($generated@@268 ($generated@@8 ($generated@@240 $generated@@559))))
)))
(assert (forall (($generated@@560 T@U) ) (! (= ($generated@@268 ($generated@@242 $generated@@560)) ($generated@@242 ($generated@@268 $generated@@560)))
 :pattern ( ($generated@@268 ($generated@@242 $generated@@560)))
)))
(assert (forall (($generated@@561 T@U) ) (! (let (($generated@@562 ($generated@@262 (type $generated@@561))))
 (=> (and (= (type $generated@@561) ($generated@@261 $generated@@562)) (= ($generated@@260 $generated@@561) 0)) (= $generated@@561 ($generated@@259 $generated@@562))))
 :pattern ( ($generated@@260 $generated@@561))
)))
(assert (forall (($generated@@563 T@U) ($generated@@564 T@U) ($generated@@565 T@U) ) (! (let (($generated@@566 (type $generated@@564)))
 (=> (and (and (= (type $generated@@563) ($generated@@78 $generated@@566 $generated@@2)) (= (type $generated@@565) $generated@@2)) (<= 0 ($generated $generated@@565))) (= ($generated@@281 ($generated@@84 $generated@@563 $generated@@564 $generated@@565)) (+ (- ($generated@@281 $generated@@563) ($generated ($generated@@83 $generated@@563 $generated@@564))) ($generated $generated@@565)))))
 :pattern ( ($generated@@281 ($generated@@84 $generated@@563 $generated@@564 $generated@@565)))
)))
(assert (forall (($generated@@567 T@U) ($generated@@568 T@U) ) (!  (=> (and (= (type $generated@@567) ($generated@@78 $generated@@79 $generated@@80)) (= (type $generated@@568) $generated@@2)) ($generated@@76 $generated@@568 $generated@@46 $generated@@567))
 :pattern ( ($generated@@76 $generated@@568 $generated@@46 $generated@@567))
)))
(assert (forall (($generated@@569 T@U) ($generated@@570 T@U) ) (!  (=> (and (= (type $generated@@569) ($generated@@78 $generated@@79 $generated@@80)) (= (type $generated@@570) $generated@@3)) ($generated@@76 $generated@@570 $generated@@47 $generated@@569))
 :pattern ( ($generated@@76 $generated@@570 $generated@@47 $generated@@569))
)))
(assert (forall (($generated@@571 T@U) ($generated@@572 T@U) ) (!  (=> (and (= (type $generated@@571) ($generated@@78 $generated@@79 $generated@@80)) (= (type $generated@@572) $generated@@4)) ($generated@@76 $generated@@572 $generated@@44 $generated@@571))
 :pattern ( ($generated@@76 $generated@@572 $generated@@44 $generated@@571))
)))
(assert (forall (($generated@@573 T@U) ($generated@@574 T@U) ) (!  (=> (and (= (type $generated@@573) ($generated@@78 $generated@@79 $generated@@80)) (= (type $generated@@574) $generated@@434)) ($generated@@76 $generated@@574 $generated@@45 $generated@@573))
 :pattern ( ($generated@@76 $generated@@574 $generated@@45 $generated@@573))
)))
(assert (forall (($generated@@575 T@U) ($generated@@576 T@U) ) (!  (=> (and (= (type $generated@@575) ($generated@@78 $generated@@79 $generated@@80)) (= (type $generated@@576) $generated@@154)) ($generated@@76 $generated@@576 $generated@@48 $generated@@575))
 :pattern ( ($generated@@76 $generated@@576 $generated@@48 $generated@@575))
)))
(assert (forall (($generated@@577 T@U) ($generated@@578 T@U) ) (!  (=> (and (= (type $generated@@577) ($generated@@261 $generated@@154)) (= (type $generated@@578) $generated@@66)) (= ($generated@@141 $generated@@577 ($generated@@476 $generated@@578)) (forall (($generated@@579 Int) ) (!  (=> (and (<= 0 $generated@@579) (< $generated@@579 ($generated@@260 $generated@@577))) ($generated@@221 ($generated@@477 $generated@@577 $generated@@579) $generated@@578))
 :pattern ( ($generated@@477 $generated@@577 $generated@@579))
))))
 :pattern ( ($generated@@141 $generated@@577 ($generated@@476 $generated@@578)))
)))
(assert (forall (($generated@@581 T@U) ($generated@@582 Int) ) (!  (=> (= (type $generated@@581) ($generated@@261 $generated@@154)) (=> (and (<= 0 $generated@@582) (< $generated@@582 ($generated@@260 $generated@@581))) (< ($generated@@515 ($generated@@326 $generated@@145 ($generated@@477 $generated@@581 $generated@@582))) ($generated@@580 $generated@@581))))
 :pattern ( ($generated@@515 ($generated@@326 $generated@@145 ($generated@@477 $generated@@581 $generated@@582))))
)))
(assert (forall (($generated@@583 T@U) ($generated@@584 T@U) ($generated@@585 T@U) ) (!  (=> (and (and (and (= (type $generated@@583) ($generated@@289 $generated@@154 $generated@@154)) (= (type $generated@@584) $generated@@66)) (= (type $generated@@585) $generated@@66)) ($generated@@141 $generated@@583 ($generated@@391 $generated@@584 $generated@@585))) (and (and ($generated@@141 ($generated@@287 $generated@@583) ($generated@@230 $generated@@584)) ($generated@@141 ($generated@@334 $generated@@583) ($generated@@230 $generated@@585))) ($generated@@141 ($generated@@365 $generated@@583) ($generated@@230 ($generated@@144 $generated@@584 $generated@@585)))))
 :pattern ( ($generated@@141 $generated@@583 ($generated@@391 $generated@@584 $generated@@585)))
)))
(assert (forall (($generated@@586 T@U) ($generated@@587 T@U) ($generated@@588 T@U) ) (!  (=> (and (and (and (= (type $generated@@586) ($generated@@307 $generated@@154 $generated@@154)) (= (type $generated@@587) $generated@@66)) (= (type $generated@@588) $generated@@66)) ($generated@@141 $generated@@586 ($generated@@399 $generated@@587 $generated@@588))) (and (and ($generated@@141 ($generated@@305 $generated@@586) ($generated@@235 $generated@@587)) ($generated@@141 ($generated@@345 $generated@@586) ($generated@@235 $generated@@588))) ($generated@@141 ($generated@@373 $generated@@586) ($generated@@235 ($generated@@144 $generated@@587 $generated@@588)))))
 :pattern ( ($generated@@141 $generated@@586 ($generated@@399 $generated@@587 $generated@@588)))
)))
(assert (forall (($generated@@589 T@U) ) (!  (=> (= (type $generated@@589) $generated@@2) ($generated@@141 $generated@@589 $generated@@46))
 :pattern ( ($generated@@141 $generated@@589 $generated@@46))
)))
(assert (forall (($generated@@590 T@U) ) (!  (=> (= (type $generated@@590) $generated@@3) ($generated@@141 $generated@@590 $generated@@47))
 :pattern ( ($generated@@141 $generated@@590 $generated@@47))
)))
(assert (forall (($generated@@591 T@U) ) (!  (=> (= (type $generated@@591) $generated@@4) ($generated@@141 $generated@@591 $generated@@44))
 :pattern ( ($generated@@141 $generated@@591 $generated@@44))
)))
(assert (forall (($generated@@592 T@U) ) (!  (=> (= (type $generated@@592) $generated@@434) ($generated@@141 $generated@@592 $generated@@45))
 :pattern ( ($generated@@141 $generated@@592 $generated@@45))
)))
(assert (forall (($generated@@593 T@U) ) (!  (=> (= (type $generated@@593) $generated@@154) ($generated@@141 $generated@@593 $generated@@48))
 :pattern ( ($generated@@141 $generated@@593 $generated@@48))
)))
(push 1)
(declare-fun ControlFlow (Int Int) Int)
(declare-fun $generated@@594 () Int)
(declare-fun $generated@@595 () Int)
(declare-fun $generated@@596 () Int)
(declare-fun $generated@@597 () Int)
(declare-fun $generated@@598 () Bool)
(declare-fun $generated@@599 () Int)
(declare-fun $generated@@600 () Int)
(declare-fun $generated@@601 () Int)
(declare-fun $generated@@602 () Int)
(declare-fun $generated@@603 () Int)
(declare-fun $generated@@604 () Int)
(declare-fun $generated@@605 () Int)
(declare-fun $generated@@606 () Bool)
(declare-fun $generated@@607 () T@U)
(declare-fun $generated@@608 () T@U)
(declare-fun $generated@@609 () T@U)
(declare-fun $generated@@610 () Int)
(declare-fun $generated@@611 () Int)
(declare-fun $generated@@612 () Int)
(declare-fun $generated@@613 (T@U) Bool)
(declare-fun $generated@@614 () Int)
(declare-fun $generated@@615 () Int)
(assert  (and (and (= (type $generated@@607) ($generated@@78 $generated@@79 $generated@@80)) (= (type $generated@@608) $generated@@79)) (= (type $generated@@609) ($generated@@166 $generated@@79 $generated@@4))))
(set-option :timeout 0)
(set-option :rlimit 0)
(assert (not
 (=> (= (ControlFlow 0 0) 38) (let (($generated@@616  (=> (= (ControlFlow 0 31) (- 0 30)) (= $generated@@594 ($generated@@240 25)))))
(let (($generated@@617  (=> (<= 25 $generated@@595) (=> (and (= $generated@@594 $generated@@595) (= (ControlFlow 0 32) 31)) $generated@@616))))
(let (($generated@@618 true))
(let (($generated@@619  (=> (and (or (and (<= $generated@@596 ($generated@@240 7)) (<= $generated@@596 $generated@@597)) (= $generated@@596 ($generated@@240 7))) (= (ControlFlow 0 19) 17)) $generated@@618)))
(let (($generated@@620  (=> (and (not (or (and (<= $generated@@596 ($generated@@240 7)) (<= $generated@@596 $generated@@597)) (= $generated@@596 ($generated@@240 7)))) (= (ControlFlow 0 18) 17)) $generated@@618)))
(let (($generated@@621  (=> (and (<= $generated@@596 ($generated@@240 7)) (<= $generated@@596 $generated@@597)) (and (=> (= (ControlFlow 0 21) 18) $generated@@620) (=> (= (ControlFlow 0 21) 19) $generated@@619)))))
(let (($generated@@622  (=> (not (and (<= $generated@@596 ($generated@@240 7)) (<= $generated@@596 $generated@@597))) (and (=> (= (ControlFlow 0 20) 18) $generated@@620) (=> (= (ControlFlow 0 20) 19) $generated@@619)))))
(let (($generated@@623  (=> (< ($generated@@240 7) $generated@@596) (and (=> (= (ControlFlow 0 23) 20) $generated@@622) (=> (= (ControlFlow 0 23) 21) $generated@@621)))))
(let (($generated@@624  (=> (<= $generated@@596 ($generated@@240 7)) (and (=> (= (ControlFlow 0 22) 20) $generated@@622) (=> (= (ControlFlow 0 22) 21) $generated@@621)))))
(let (($generated@@625  (=> (not $generated@@598) (and (=> (= (ControlFlow 0 24) 22) $generated@@624) (=> (= (ControlFlow 0 24) 23) $generated@@623)))))
(let (($generated@@626  (and (=> (= (ControlFlow 0 9) (- 0 10)) (or (<= 0 $generated@@599) (= (- 25 $generated@@600) $generated@@599))) (=> (or (<= 0 $generated@@599) (= (- 25 $generated@@600) $generated@@599)) (=> (= (ControlFlow 0 9) (- 0 8)) (< (- 25 $generated@@600) $generated@@599))))))
(let (($generated@@627  (=> (= $generated@@596 $generated@@597) (=> (and (= $generated@@601 ($generated@@240 8)) (= (ControlFlow 0 13) 9)) $generated@@626))))
(let (($generated@@628  (=> (and (= $generated@@596 ($generated@@240 7)) (= (ControlFlow 0 12) 9)) $generated@@626)))
(let (($generated@@629  (=> (and (<= $generated@@602 $generated@@596) (= (ControlFlow 0 11) 9)) $generated@@626)))
(let (($generated@@630  (=> (and (not (= $generated@@596 $generated@@597)) (= $generated@@603 (+ $generated@@596 1))) (and (=> (= (ControlFlow 0 5) (- 0 7)) (or (<= 0 $generated@@604) (= (- $generated@@602 $generated@@603) $generated@@604))) (=> (or (<= 0 $generated@@604) (= (- $generated@@602 $generated@@603) $generated@@604)) (and (=> (= (ControlFlow 0 5) (- 0 6)) (< (- $generated@@602 $generated@@603) $generated@@604)) (=> (< (- $generated@@602 $generated@@603) $generated@@604) (=> (= (ControlFlow 0 5) (- 0 4)) (=> $generated@@598 (or (or (and (<= $generated@@603 ($generated@@240 7)) (<= $generated@@603 $generated@@597)) (= $generated@@603 ($generated@@240 7))) (< $generated@@597 7)))))))))))
(let (($generated@@631  (=> (not (= $generated@@596 ($generated@@240 7))) (and (=> (= (ControlFlow 0 14) 13) $generated@@627) (=> (= (ControlFlow 0 14) 5) $generated@@630)))))
(let (($generated@@632  (=> (and (< $generated@@596 $generated@@602) (= $generated@@604 (- $generated@@602 $generated@@596))) (and (=> (= (ControlFlow 0 15) 12) $generated@@628) (=> (= (ControlFlow 0 15) 14) $generated@@631)))))
(let (($generated@@633  (=> $generated@@598 (and (=> (= (ControlFlow 0 16) 11) $generated@@629) (=> (= (ControlFlow 0 16) 15) $generated@@632)))))
(let (($generated@@634  (and (=> (= (ControlFlow 0 25) 24) $generated@@625) (=> (= (ControlFlow 0 25) 16) $generated@@633))))
(let (($generated@@635 true))
(let (($generated@@636  (=> (and (and (and (and (and (and (and (and (and (<= 1 $generated@@600) (< $generated@@600 26)) (not false)) (= $generated@@605 25)) $generated@@606) (and (<= 1 $generated@@599) (< $generated@@599 26))) (and (<= 0 $generated@@596) (< $generated@@596 8))) (=> $generated@@598 true)) (and (=> $generated@@598 (or (or (and (<= $generated@@596 ($generated@@240 7)) (<= $generated@@596 $generated@@597)) (= $generated@@596 ($generated@@240 7))) (< $generated@@597 7))) (forall (($generated@@637 T@U) ) (!  (=> (= (type $generated@@637) $generated@@79) (=> (and (not (= $generated@@637 $generated@@608)) ($generated@@0 ($generated@@85 ($generated@@83 $generated@@607 $generated@@637) $generated@@60))) (= ($generated@@83 $generated@@607 $generated@@637) ($generated@@83 $generated@@607 $generated@@637))))
 :pattern ( ($generated@@83 $generated@@607 $generated@@637))
)))) (and (and ($generated@@134 $generated@@607 $generated@@607) (forall (($generated@@638 T@U) ($generated@@639 T@U) ) (! (let (($generated@@640 ($generated@@69 (type $generated@@639))))
 (=> (and (and (= (type $generated@@638) $generated@@79) (= (type $generated@@639) ($generated@@68 $generated@@640))) (and (not (= $generated@@638 $generated@@608)) ($generated@@0 ($generated@@85 ($generated@@83 $generated@@607 $generated@@638) $generated@@60)))) (or (= ($generated@@85 ($generated@@83 $generated@@607 $generated@@638) $generated@@639) ($generated@@85 ($generated@@83 $generated@@607 $generated@@638) $generated@@639)) ($generated@@0 ($generated@@164 $generated@@609 $generated@@638 $generated@@639)))))
 :pattern ( ($generated@@85 ($generated@@83 $generated@@607 $generated@@638) $generated@@639))
))) (and (<= (- $generated@@602 $generated@@596) $generated@@610) (=> (= (- $generated@@602 $generated@@596) $generated@@610) true)))) (and (=> (= (ControlFlow 0 26) 3) $generated@@635) (=> (= (ControlFlow 0 26) 25) $generated@@634)))))
(let (($generated@@641  (=> (and (< $generated@@595 25) (= $generated@@599 (- 25 $generated@@595))) (and (=> (= (ControlFlow 0 27) (- 0 29)) ($generated@@141 ($generated@@8 (+ $generated@@595 1)) $generated@@138)) (=> ($generated@@141 ($generated@@8 (+ $generated@@595 1)) $generated@@138) (=> (= $generated@@600 (+ $generated@@595 1)) (=> (and (= $generated@@611 ($generated@@240 0)) (= $generated@@610 (- $generated@@602 $generated@@611))) (and (=> (= (ControlFlow 0 27) (- 0 28)) (=> $generated@@598 (or (or (and (<= $generated@@611 ($generated@@240 7)) (<= $generated@@611 $generated@@597)) (= $generated@@611 ($generated@@240 7))) (< $generated@@597 7)))) (=> (=> $generated@@598 (or (or (and (<= $generated@@611 ($generated@@240 7)) (<= $generated@@611 $generated@@597)) (= $generated@@611 ($generated@@240 7))) (< $generated@@597 7))) (=> (= (ControlFlow 0 27) 26) $generated@@636))))))))))
(let (($generated@@642  (=> $generated@@606 (and (=> (= (ControlFlow 0 33) 32) $generated@@617) (=> (= (ControlFlow 0 33) 27) $generated@@641)))))
(let (($generated@@643 true))
(let (($generated@@644  (and (=> (= (ControlFlow 0 34) 2) $generated@@643) (=> (= (ControlFlow 0 34) 33) $generated@@642))))
(let (($generated@@645 true))
(let (($generated@@646  (=> (<= ($generated@@240 0) $generated@@595) (=> (and (and (and (and (and (<= 0 $generated@@595) (< $generated@@595 26)) (not false)) (= $generated@@605 25)) (forall (($generated@@647 T@U) ) (!  (=> (= (type $generated@@647) $generated@@79) (=> (and (not (= $generated@@647 $generated@@608)) ($generated@@0 ($generated@@85 ($generated@@83 $generated@@607 $generated@@647) $generated@@60))) (= ($generated@@83 $generated@@607 $generated@@647) ($generated@@83 $generated@@607 $generated@@647))))
 :pattern ( ($generated@@83 $generated@@607 $generated@@647))
))) (and (and ($generated@@134 $generated@@607 $generated@@607) (forall (($generated@@648 T@U) ($generated@@649 T@U) ) (! (let (($generated@@650 ($generated@@69 (type $generated@@649))))
 (=> (and (and (= (type $generated@@648) $generated@@79) (= (type $generated@@649) ($generated@@68 $generated@@650))) (and (not (= $generated@@648 $generated@@608)) ($generated@@0 ($generated@@85 ($generated@@83 $generated@@607 $generated@@648) $generated@@60)))) (or (= ($generated@@85 ($generated@@83 $generated@@607 $generated@@648) $generated@@649) ($generated@@85 ($generated@@83 $generated@@607 $generated@@648) $generated@@649)) ($generated@@0 ($generated@@164 $generated@@609 $generated@@648 $generated@@649)))))
 :pattern ( ($generated@@85 ($generated@@83 $generated@@607 $generated@@648) $generated@@649))
))) (and (<= (- 25 $generated@@595) $generated@@605) (=> (= (- 25 $generated@@595) $generated@@605) true)))) (and (=> (= (ControlFlow 0 35) 1) $generated@@645) (=> (= (ControlFlow 0 35) 34) $generated@@644))))))
(let (($generated@@651  (=> (= $generated@@609 ($generated@@165 $generated@@608 $generated@@607 $generated@@60 false)) (and (=> (= (ControlFlow 0 36) (- 0 37)) ($generated@@141 ($generated@@8 ($generated@@240 0)) $generated@@138)) (=> ($generated@@141 ($generated@@8 ($generated@@240 0)) $generated@@138) (=> (= $generated@@612 ($generated@@240 0)) (=> (and (= $generated@@605 (- 25 $generated@@612)) (= (ControlFlow 0 36) 35)) $generated@@646)))))))
(let (($generated@@652  (=> (and (and (and ($generated@@246 $generated@@607) ($generated@@613 $generated@@607)) (<= ($generated@@240 0) $generated@@602)) (and (and (<= ($generated@@240 0) $generated@@597) (<= ($generated@@240 0) $generated@@614)) (and (= 1 $generated@@615) (= (ControlFlow 0 38) 36)))) $generated@@651)))
$generated@@652))))))))))))))))))))))))))))))
))
(check-sat)
(pop 1)
; Valid
(get-info :rlimit)
(reset)
(set-option :rlimit 0)
; did a full reset
(reset)
(set-option :print-success false)
(set-info :smt-lib-version 2.6)
(set-option :auto_config false)
(set-option :type_check true)
(set-option :smt.case_split 3)
(set-option :smt.qi.eager_threshold 100)
(set-option :smt.delay_units true)
(set-option :smt.arith.solver 2)
(set-option :smt.mbqi false)
(set-option :model.compact false)
(set-option :model.v2 true)
(set-option :pp.bv_literals false)
; done setting options


(set-info :category "industrial")
(declare-sort |T@U| 0)
(declare-sort |T@T| 0)
(declare-fun real_pow (Real Real) Real)
(declare-fun UOrdering2 (|T@U| |T@U|) Bool)
(declare-fun UOrdering3 (|T@T| |T@U| |T@U|) Bool)
(declare-fun tickleBool (Bool) Bool)
(assert (and (tickleBool true) (tickleBool false)))
(declare-fun $generated (T@U) Int)
(declare-fun $generated@@0 (T@U) Bool)
(declare-fun $generated@@1 (T@T) Int)
(declare-fun $generated@@2 () T@T)
(declare-fun $generated@@3 () T@T)
(declare-fun $generated@@4 () T@T)
(declare-fun $generated@@5 () T@T)
(declare-fun $generated@@6 () T@T)
(declare-fun $generated@@7 () T@T)
(declare-fun $generated@@8 (Int) T@U)
(declare-fun type (T@U) T@T)
(declare-fun $generated@@9 (Real) T@U)
(declare-fun $generated@@10 (T@U) Real)
(declare-fun $generated@@11 (Bool) T@U)
(declare-fun $generated@@12 (RoundingMode) T@U)
(declare-fun $generated@@13 (T@U) RoundingMode)
(declare-fun $generated@@14 (String) T@U)
(declare-fun $generated@@15 (T@U) String)
(declare-fun $generated@@16 ((RegEx String)) T@U)
(declare-fun $generated@@17 (T@U) (RegEx String))
(declare-fun $generated@@44 () T@U)
(declare-fun $generated@@45 () T@U)
(declare-fun $generated@@46 () T@U)
(declare-fun $generated@@47 () T@U)
(declare-fun $generated@@48 () T@U)
(declare-fun $generated@@49 () T@U)
(declare-fun $generated@@50 () T@U)
(declare-fun $generated@@51 () T@U)
(declare-fun $generated@@52 () T@U)
(declare-fun $generated@@53 () T@U)
(declare-fun $generated@@54 () T@U)
(declare-fun $generated@@55 () T@U)
(declare-fun $generated@@56 () T@U)
(declare-fun $generated@@57 () T@U)
(declare-fun $generated@@58 () T@U)
(declare-fun $generated@@59 () T@U)
(declare-fun $generated@@60 () T@U)
(declare-fun $generated@@61 () T@U)
(declare-fun $generated@@62 () T@U)
(declare-fun $generated@@63 () T@U)
(declare-fun $generated@@64 () T@U)
(declare-fun $generated@@65 () T@U)
(declare-fun $generated@@66 () T@T)
(declare-fun $generated@@67 () T@T)
(declare-fun $generated@@68 (T@T) T@T)
(declare-fun $generated@@69 (T@T) T@T)
(declare-fun $generated@@70 () T@T)
(declare-fun $generated@@71 () T@T)
(declare-fun $generated@@74 (T@U) T@U)
(declare-fun $generated@@76 (T@U T@U T@U) Bool)
(declare-fun $generated@@77 (Int) T@U)
(declare-fun $generated@@78 (T@T T@T) T@T)
(declare-fun $generated@@79 () T@T)
(declare-fun $generated@@80 () T@T)
(declare-fun $generated@@81 (T@T) T@T)
(declare-fun $generated@@82 (T@T) T@T)
(declare-fun $generated@@83 (T@U T@U) T@U)
(declare-fun $generated@@84 (T@U T@U T@U) T@U)
(declare-fun $generated@@85 (T@U T@U) T@U)
(declare-fun $generated@@86 (T@U T@U T@U) T@U)
(declare-fun $generated@@134 (T@U T@U) Bool)
(declare-fun $generated@@138 () T@U)
(declare-fun $generated@@141 (T@U T@U) Bool)
(declare-fun $generated@@143 (T@U) Bool)
(declare-fun $generated@@144 (T@U T@U) T@U)
(declare-fun $generated@@145 () T@T)
(declare-fun $generated@@151 (T@U T@U) Bool)
(declare-fun $generated@@152 (T@U) T@U)
(declare-fun $generated@@153 (T@U) T@U)
(declare-fun $generated@@154 () T@T)
(declare-fun $generated@@159 (T@U) T@U)
(declare-fun $generated@@160 (T@U) Bool)
(declare-fun $generated@@164 (T@U T@U T@U) T@U)
(declare-fun $generated@@165 (T@U T@U T@U Bool) T@U)
(declare-fun $generated@@166 (T@T T@T) T@T)
(declare-fun $generated@@167 (T@T) T@T)
(declare-fun $generated@@168 (T@T) T@T)
(declare-fun $generated@@169 (T@U T@U T@U T@U) T@U)
(declare-fun $generated@@220 (T@U T@U) T@U)
(declare-fun $generated@@221 (T@U T@U) Bool)
(declare-fun $generated@@230 (T@U) T@U)
(declare-fun $generated@@235 (T@U) T@U)
(declare-fun $generated@@240 (Int) Int)
(declare-fun $generated@@242 (T@U) T@U)
(declare-fun $generated@@246 (T@U) Bool)
(declare-fun $generated@@247 (T@U T@U T@U) Bool)
(declare-fun $generated@@253 (T@U) T@U)
(declare-fun $generated@@259 (T@T) T@U)
(declare-fun $generated@@260 (T@U) Int)
(declare-fun $generated@@261 (T@T) T@T)
(declare-fun $generated@@262 (T@T) T@T)
(declare-fun $generated@@268 (T@U) T@U)
(declare-fun $generated@@281 (T@U) Int)
(declare-fun $generated@@282 (T@T) T@U)
(declare-fun $generated@@287 (T@U) T@U)
(declare-fun $generated@@288 (T@T T@T) T@U)
(declare-fun $generated@@289 (T@T T@T) T@T)
(declare-fun $generated@@290 (T@T) T@T)
(declare-fun $generated@@291 (T@T) T@T)
(declare-fun $generated@@305 (T@U) T@U)
(declare-fun $generated@@306 (T@T T@T) T@U)
(declare-fun $generated@@307 (T@T T@T) T@T)
(declare-fun $generated@@308 (T@T) T@T)
(declare-fun $generated@@309 (T@T) T@T)
(declare-fun $generated@@326 (T@T T@U) T@U)
(declare-fun $generated@@334 (T@U) T@U)
(declare-fun $generated@@345 (T@U) T@U)
(declare-fun $generated@@365 (T@U) T@U)
(declare-fun $generated@@366 (T@U) T@U)
(declare-fun $generated@@373 (T@U) T@U)
(declare-fun $generated@@374 (T@U) T@U)
(declare-fun $generated@@391 (T@U T@U) T@U)
(declare-fun $generated@@399 (T@U T@U) T@U)
(declare-fun $generated@@410 (T@T) T@U)
(declare-fun $generated@@434 () T@T)
(declare-fun $generated@@442 (T@U) T@U)
(declare-fun $generated@@446 (T@U) T@U)
(declare-fun $generated@@452 (T@U) T@U)
(declare-fun $generated@@456 (T@U) T@U)
(declare-fun $generated@@464 (T@U) T@U)
(declare-fun $generated@@468 (T@U) T@U)
(declare-fun $generated@@476 (T@U) T@U)
(declare-fun $generated@@477 (T@U Int) T@U)
(declare-fun $generated@@486 (T@U) Int)
(declare-fun $generated@@488 (T@U) T@U)
(declare-fun $generated@@492 (T@U) T@U)
(declare-fun $generated@@496 (T@U) T@U)
(declare-fun $generated@@500 (T@U) T@U)
(declare-fun $generated@@514 (T@U) Int)
(declare-fun $generated@@515 (T@U) Int)
(declare-fun $generated@@531 (T@U) T@U)
(declare-fun $generated@@580 (T@U) Int)
(assert  (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (= ($generated@@1 $generated@@2) 0) (= ($generated@@1 $generated@@3) 1)) (= ($generated@@1 $generated@@4) 2)) (= ($generated@@1 $generated@@5) 3)) (= ($generated@@1 $generated@@6) 4)) (= ($generated@@1 $generated@@7) 5)) (forall (($generated@@18 Int) ) (! (= ($generated ($generated@@8 $generated@@18)) $generated@@18)
 :pattern ( ($generated@@8 $generated@@18))
))) (forall (($generated@@19 T@U) ) (!  (=> (= (type $generated@@19) $generated@@2) (= ($generated@@8 ($generated $generated@@19)) $generated@@19))
 :pattern ( ($generated $generated@@19))
))) (forall (($generated@@20 Int) ) (! (= (type ($generated@@8 $generated@@20)) $generated@@2)
 :pattern ( ($generated@@8 $generated@@20))
))) (forall (($generated@@21 Real) ) (! (= ($generated@@10 ($generated@@9 $generated@@21)) $generated@@21)
 :pattern ( ($generated@@9 $generated@@21))
))) (forall (($generated@@22 T@U) ) (!  (=> (= (type $generated@@22) $generated@@3) (= ($generated@@9 ($generated@@10 $generated@@22)) $generated@@22))
 :pattern ( ($generated@@10 $generated@@22))
))) (forall (($generated@@23 Real) ) (! (= (type ($generated@@9 $generated@@23)) $generated@@3)
 :pattern ( ($generated@@9 $generated@@23))
))) (forall (($generated@@24 Bool) ) (! (= ($generated@@0 ($generated@@11 $generated@@24)) $generated@@24)
 :pattern ( ($generated@@11 $generated@@24))
))) (forall (($generated@@25 T@U) ) (!  (=> (= (type $generated@@25) $generated@@4) (= ($generated@@11 ($generated@@0 $generated@@25)) $generated@@25))
 :pattern ( ($generated@@0 $generated@@25))
))) (forall (($generated@@26 Bool) ) (! (= (type ($generated@@11 $generated@@26)) $generated@@4)
 :pattern ( ($generated@@11 $generated@@26))
))) (forall (($generated@@27 RoundingMode) ) (! (= ($generated@@13 ($generated@@12 $generated@@27)) $generated@@27)
 :pattern ( ($generated@@12 $generated@@27))
))) (forall (($generated@@28 T@U) ) (!  (=> (= (type $generated@@28) $generated@@5) (= ($generated@@12 ($generated@@13 $generated@@28)) $generated@@28))
 :pattern ( ($generated@@13 $generated@@28))
))) (forall (($generated@@29 RoundingMode) ) (! (= (type ($generated@@12 $generated@@29)) $generated@@5)
 :pattern ( ($generated@@12 $generated@@29))
))) (forall (($generated@@30 String) ) (! (= ($generated@@15 ($generated@@14 $generated@@30)) $generated@@30)
 :pattern ( ($generated@@14 $generated@@30))
))) (forall (($generated@@31 T@U) ) (!  (=> (= (type $generated@@31) $generated@@6) (= ($generated@@14 ($generated@@15 $generated@@31)) $generated@@31))
 :pattern ( ($generated@@15 $generated@@31))
))) (forall (($generated@@32 String) ) (! (= (type ($generated@@14 $generated@@32)) $generated@@6)
 :pattern ( ($generated@@14 $generated@@32))
))) (forall (($generated@@33 (RegEx String)) ) (! (= ($generated@@17 ($generated@@16 $generated@@33)) $generated@@33)
 :pattern ( ($generated@@16 $generated@@33))
))) (forall (($generated@@34 T@U) ) (!  (=> (= (type $generated@@34) $generated@@7) (= ($generated@@16 ($generated@@17 $generated@@34)) $generated@@34))
 :pattern ( ($generated@@17 $generated@@34))
))) (forall (($generated@@35 (RegEx String)) ) (! (= (type ($generated@@16 $generated@@35)) $generated@@7)
 :pattern ( ($generated@@16 $generated@@35))
))))
(assert (forall (($generated@@36 T@U) ) (! (UOrdering2 $generated@@36 $generated@@36)
 :no-pattern ($generated $generated@@36)
 :no-pattern ($generated@@0 $generated@@36)
)))
(assert (forall (($generated@@37 T@U) ($generated@@38 T@U) ($generated@@39 T@U) ) (! (let (($generated@@40 (type $generated@@37)))
 (=> (and (and (= (type $generated@@38) $generated@@40) (= (type $generated@@39) $generated@@40)) (and (UOrdering2 $generated@@37 $generated@@38) (UOrdering2 $generated@@38 $generated@@39))) (UOrdering2 $generated@@37 $generated@@39)))
 :pattern ( (UOrdering2 $generated@@37 $generated@@38) (UOrdering2 $generated@@38 $generated@@39))
)))
(assert (forall (($generated@@41 T@U) ($generated@@42 T@U) ) (! (let (($generated@@43 (type $generated@@41)))
 (=> (= (type $generated@@42) $generated@@43) (=> (and (UOrdering2 $generated@@41 $generated@@42) (UOrdering2 $generated@@42 $generated@@41)) (= $generated@@41 $generated@@42))))
 :pattern ( (UOrdering2 $generated@@41 $generated@@42) (UOrdering2 $generated@@42 $generated@@41))
)))
(assert  (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (= ($generated@@1 $generated@@66) 6) (= (type $generated@@44) $generated@@66)) (= (type $generated@@45) $generated@@66)) (= (type $generated@@46) $generated@@66)) (= (type $generated@@47) $generated@@66)) (= (type $generated@@48) $generated@@66)) (= ($generated@@1 $generated@@67) 7)) (= (type $generated@@49) $generated@@67)) (= (type $generated@@50) $generated@@67)) (= (type $generated@@51) $generated@@67)) (= (type $generated@@52) $generated@@67)) (= (type $generated@@53) $generated@@67)) (= (type $generated@@54) $generated@@67)) (= (type $generated@@55) $generated@@67)) (= (type $generated@@56) $generated@@67)) (= (type $generated@@57) $generated@@67)) (= (type $generated@@58) $generated@@67)) (= (type $generated@@59) $generated@@67)) (forall (($generated@@72 T@T) ) (= ($generated@@1 ($generated@@68 $generated@@72)) 8))) (forall (($generated@@73 T@T) ) (! (= ($generated@@69 ($generated@@68 $generated@@73)) $generated@@73)
 :pattern ( ($generated@@68 $generated@@73))
))) (= (type $generated@@60) ($generated@@68 $generated@@4))) (= (type $generated@@61) $generated@@67)) (= ($generated@@1 $generated@@70) 9)) (= (type $generated@@62) $generated@@70)) (= (type $generated@@63) $generated@@67)) (= ($generated@@1 $generated@@71) 10)) (= (type $generated@@64) $generated@@71)) (= (type $generated@@65) $generated@@71)))
(assert (distinct $generated@@44 $generated@@45 $generated@@46 $generated@@47 $generated@@48 $generated@@49 $generated@@50 $generated@@51 $generated@@52 $generated@@53 $generated@@54 $generated@@55 $generated@@56 $generated@@57 $generated@@58 $generated@@59 $generated@@60 $generated@@61 $generated@@62 $generated@@63 $generated@@64 $generated@@65)
)
(assert (forall (($generated@@75 T@U) ) (! (= (type ($generated@@74 $generated@@75)) $generated@@67)
 :pattern ( ($generated@@74 $generated@@75))
)))
(assert (= ($generated@@74 $generated@@44) $generated@@49))
(assert (= ($generated@@74 $generated@@45) $generated@@50))
(assert (= ($generated@@74 $generated@@46) $generated@@51))
(assert (= ($generated@@74 $generated@@47) $generated@@52))
(assert (= ($generated@@74 $generated@@48) $generated@@53))
(assert  (and (and (and (and (and (and (and (and (and (and (and (and (and (forall (($generated@@87 T@T) ($generated@@88 T@T) ) (= ($generated@@1 ($generated@@78 $generated@@87 $generated@@88)) 11)) (forall (($generated@@89 T@T) ($generated@@90 T@T) ) (! (= ($generated@@81 ($generated@@78 $generated@@89 $generated@@90)) $generated@@89)
 :pattern ( ($generated@@78 $generated@@89 $generated@@90))
))) (forall (($generated@@91 T@T) ($generated@@92 T@T) ) (! (= ($generated@@82 ($generated@@78 $generated@@91 $generated@@92)) $generated@@92)
 :pattern ( ($generated@@78 $generated@@91 $generated@@92))
))) (forall (($generated@@93 T@U) ($generated@@94 T@U) ) (! (let (($generated@@95 ($generated@@82 (type $generated@@93))))
(= (type ($generated@@83 $generated@@93 $generated@@94)) $generated@@95))
 :pattern ( ($generated@@83 $generated@@93 $generated@@94))
))) (forall (($generated@@96 T@U) ($generated@@97 T@U) ($generated@@98 T@U) ) (! (let (($generated@@99 (type $generated@@98)))
(let (($generated@@100 (type $generated@@97)))
(= (type ($generated@@84 $generated@@96 $generated@@97 $generated@@98)) ($generated@@78 $generated@@100 $generated@@99))))
 :pattern ( ($generated@@84 $generated@@96 $generated@@97 $generated@@98))
))) (forall (($generated@@101 T@U) ($generated@@102 T@U) ($generated@@103 T@U) ) (! (let (($generated@@104 ($generated@@82 (type $generated@@101))))
 (=> (= (type $generated@@103) $generated@@104) (= ($generated@@83 ($generated@@84 $generated@@101 $generated@@102 $generated@@103) $generated@@102) $generated@@103)))
 :weight 0
))) (and (forall (($generated@@105 T@U) ($generated@@106 T@U) ($generated@@107 T@U) ($generated@@108 T@U) ) (!  (or (= $generated@@107 $generated@@108) (= ($generated@@83 ($generated@@84 $generated@@106 $generated@@107 $generated@@105) $generated@@108) ($generated@@83 $generated@@106 $generated@@108)))
 :weight 0
)) (forall (($generated@@109 T@U) ($generated@@110 T@U) ($generated@@111 T@U) ($generated@@112 T@U) ) (!  (or true (= ($generated@@83 ($generated@@84 $generated@@110 $generated@@111 $generated@@109) $generated@@112) ($generated@@83 $generated@@110 $generated@@112)))
 :weight 0
)))) (= ($generated@@1 $generated@@79) 12)) (forall (($generated@@113 T@U) ($generated@@114 T@U) ) (! (let (($generated@@115 ($generated@@69 (type $generated@@114))))
(= (type ($generated@@85 $generated@@113 $generated@@114)) $generated@@115))
 :pattern ( ($generated@@85 $generated@@113 $generated@@114))
))) (= ($generated@@1 $generated@@80) 13)) (forall (($generated@@116 T@U) ($generated@@117 T@U) ($generated@@118 T@U) ) (! (= (type ($generated@@86 $generated@@116 $generated@@117 $generated@@118)) $generated@@80)
 :pattern ( ($generated@@86 $generated@@116 $generated@@117 $generated@@118))
))) (forall (($generated@@119 T@U) ($generated@@120 T@U) ($generated@@121 T@U) ) (! (let (($generated@@122 ($generated@@69 (type $generated@@120))))
 (=> (= (type $generated@@121) $generated@@122) (= ($generated@@85 ($generated@@86 $generated@@119 $generated@@120 $generated@@121) $generated@@120) $generated@@121)))
 :weight 0
))) (and (forall (($generated@@123 T@U) ($generated@@124 T@U) ($generated@@125 T@U) ($generated@@126 T@U) ) (!  (or (= $generated@@125 $generated@@126) (= ($generated@@85 ($generated@@86 $generated@@124 $generated@@125 $generated@@123) $generated@@126) ($generated@@85 $generated@@124 $generated@@126)))
 :weight 0
)) (forall (($generated@@127 T@U) ($generated@@128 T@U) ($generated@@129 T@U) ($generated@@130 T@U) ) (!  (or true (= ($generated@@85 ($generated@@86 $generated@@128 $generated@@129 $generated@@127) $generated@@130) ($generated@@85 $generated@@128 $generated@@130)))
 :weight 0
)))) (forall (($generated@@131 Int) ) (! (= (type ($generated@@77 $generated@@131)) $generated@@66)
 :pattern ( ($generated@@77 $generated@@131))
))))
(assert (forall (($generated@@132 T@U) ($generated@@133 T@U) ) (!  (=> (and (= (type $generated@@132) $generated@@2) (= (type $generated@@133) ($generated@@78 $generated@@79 $generated@@80))) ($generated@@76 $generated@@132 ($generated@@77 0) $generated@@133))
 :pattern ( ($generated@@76 $generated@@132 ($generated@@77 0) $generated@@133))
)))
(assert (forall (($generated@@135 T@U) ($generated@@136 T@U) ) (!  (=> (and (and (= (type $generated@@135) ($generated@@78 $generated@@79 $generated@@80)) (= (type $generated@@136) ($generated@@78 $generated@@79 $generated@@80))) ($generated@@134 $generated@@135 $generated@@136)) (forall (($generated@@137 T@U) ) (!  (=> (and (= (type $generated@@137) $generated@@79) ($generated@@0 ($generated@@85 ($generated@@83 $generated@@135 $generated@@137) $generated@@60))) ($generated@@0 ($generated@@85 ($generated@@83 $generated@@136 $generated@@137) $generated@@60)))
 :pattern ( ($generated@@85 ($generated@@83 $generated@@136 $generated@@137) $generated@@60))
)))
 :pattern ( ($generated@@134 $generated@@135 $generated@@136))
)))
(assert (= (type $generated@@138) $generated@@66))
(assert (forall (($generated@@139 T@U) ($generated@@140 T@U) ) (!  (=> (and (= (type $generated@@139) $generated@@2) (= (type $generated@@140) ($generated@@78 $generated@@79 $generated@@80))) ($generated@@76 $generated@@139 $generated@@138 $generated@@140))
 :pattern ( ($generated@@76 $generated@@139 $generated@@138 $generated@@140))
)))
(assert (forall (($generated@@142 T@U) ) (!  (=> (= (type $generated@@142) $generated@@2) ($generated@@141 $generated@@142 ($generated@@77 0)))
 :pattern ( ($generated@@141 $generated@@142 ($generated@@77 0)))
)))
(assert  (and (= ($generated@@1 $generated@@145) 14) (forall (($generated@@146 T@U) ($generated@@147 T@U) ) (! (= (type ($generated@@144 $generated@@146 $generated@@147)) $generated@@66)
 :pattern ( ($generated@@144 $generated@@146 $generated@@147))
))))
(assert (forall (($generated@@148 T@U) ($generated@@149 T@U) ($generated@@150 T@U) ) (!  (=> (and (and (and (= (type $generated@@148) $generated@@66) (= (type $generated@@149) $generated@@66)) (= (type $generated@@150) $generated@@145)) ($generated@@141 $generated@@150 ($generated@@144 $generated@@148 $generated@@149))) ($generated@@143 $generated@@150))
 :pattern ( ($generated@@143 $generated@@150) ($generated@@141 $generated@@150 ($generated@@144 $generated@@148 $generated@@149)))
)))
(assert  (and (and (= ($generated@@1 $generated@@154) 15) (forall (($generated@@155 T@U) ) (! (= (type ($generated@@152 $generated@@155)) $generated@@154)
 :pattern ( ($generated@@152 $generated@@155))
))) (forall (($generated@@156 T@U) ) (! (= (type ($generated@@153 $generated@@156)) $generated@@154)
 :pattern ( ($generated@@153 $generated@@156))
))))
(assert (forall (($generated@@157 T@U) ($generated@@158 T@U) ) (!  (=> (and (and (= (type $generated@@157) $generated@@145) (= (type $generated@@158) $generated@@145)) true) (= ($generated@@151 $generated@@157 $generated@@158)  (and (= ($generated@@152 $generated@@157) ($generated@@152 $generated@@158)) (= ($generated@@153 $generated@@157) ($generated@@153 $generated@@158)))))
 :pattern ( ($generated@@151 $generated@@157 $generated@@158))
)))
(assert (forall (($generated@@161 T@U) ) (! (= (type ($generated@@159 $generated@@161)) $generated@@66)
 :pattern ( ($generated@@159 $generated@@161))
)))
(assert (forall (($generated@@162 T@U) ($generated@@163 T@U) ) (!  (=> (and (and (= (type $generated@@162) ($generated@@78 $generated@@154 $generated@@2)) (= (type $generated@@163) $generated@@66)) ($generated@@141 $generated@@162 ($generated@@159 $generated@@163))) ($generated@@160 $generated@@162))
 :pattern ( ($generated@@141 $generated@@162 ($generated@@159 $generated@@163)))
)))
(assert  (and (and (and (and (and (and (and (forall (($generated@@170 T@T) ($generated@@171 T@T) ) (= ($generated@@1 ($generated@@166 $generated@@170 $generated@@171)) 16)) (forall (($generated@@172 T@T) ($generated@@173 T@T) ) (! (= ($generated@@167 ($generated@@166 $generated@@172 $generated@@173)) $generated@@172)
 :pattern ( ($generated@@166 $generated@@172 $generated@@173))
))) (forall (($generated@@174 T@T) ($generated@@175 T@T) ) (! (= ($generated@@168 ($generated@@166 $generated@@174 $generated@@175)) $generated@@175)
 :pattern ( ($generated@@166 $generated@@174 $generated@@175))
))) (forall (($generated@@176 T@U) ($generated@@177 T@U) ($generated@@178 T@U) ) (! (let (($generated@@179 ($generated@@168 (type $generated@@176))))
(= (type ($generated@@164 $generated@@176 $generated@@177 $generated@@178)) $generated@@179))
 :pattern ( ($generated@@164 $generated@@176 $generated@@177 $generated@@178))
))) (forall (($generated@@180 T@U) ($generated@@181 T@U) ($generated@@182 T@U) ($generated@@183 T@U) ) (! (let (($generated@@184 (type $generated@@183)))
(let (($generated@@185 (type $generated@@181)))
(= (type ($generated@@169 $generated@@180 $generated@@181 $generated@@182 $generated@@183)) ($generated@@166 $generated@@185 $generated@@184))))
 :pattern ( ($generated@@169 $generated@@180 $generated@@181 $generated@@182 $generated@@183))
))) (forall (($generated@@186 T@U) ($generated@@187 T@U) ($generated@@188 T@U) ($generated@@189 T@U) ) (! (let (($generated@@190 ($generated@@168 (type $generated@@186))))
 (=> (= (type $generated@@189) $generated@@190) (= ($generated@@164 ($generated@@169 $generated@@186 $generated@@187 $generated@@188 $generated@@189) $generated@@187 $generated@@188) $generated@@189)))
 :weight 0
))) (and (and (forall (($generated@@191 T@U) ($generated@@192 T@U) ($generated@@193 T@U) ($generated@@194 T@U) ($generated@@195 T@U) ($generated@@196 T@U) ) (!  (or (= $generated@@193 $generated@@195) (= ($generated@@164 ($generated@@169 $generated@@192 $generated@@193 $generated@@194 $generated@@191) $generated@@195 $generated@@196) ($generated@@164 $generated@@192 $generated@@195 $generated@@196)))
 :weight 0
)) (forall (($generated@@197 T@U) ($generated@@198 T@U) ($generated@@199 T@U) ($generated@@200 T@U) ($generated@@201 T@U) ($generated@@202 T@U) ) (!  (or (= $generated@@200 $generated@@202) (= ($generated@@164 ($generated@@169 $generated@@198 $generated@@199 $generated@@200 $generated@@197) $generated@@201 $generated@@202) ($generated@@164 $generated@@198 $generated@@201 $generated@@202)))
 :weight 0
))) (forall (($generated@@203 T@U) ($generated@@204 T@U) ($generated@@205 T@U) ($generated@@206 T@U) ($generated@@207 T@U) ($generated@@208 T@U) ) (!  (or true (= ($generated@@164 ($generated@@169 $generated@@204 $generated@@205 $generated@@206 $generated@@203) $generated@@207 $generated@@208) ($generated@@164 $generated@@204 $generated@@207 $generated@@208)))
 :weight 0
)))) (forall (($generated@@209 T@U) ($generated@@210 T@U) ($generated@@211 T@U) ($generated@@212 Bool) ) (! (= (type ($generated@@165 $generated@@209 $generated@@210 $generated@@211 $generated@@212)) ($generated@@166 $generated@@79 $generated@@4))
 :pattern ( ($generated@@165 $generated@@209 $generated@@210 $generated@@211 $generated@@212))
))))
(assert (forall (($generated@@213 T@U) ($generated@@214 T@U) ($generated@@215 T@U) ($generated@@216 Bool) ($generated@@217 T@U) ($generated@@218 T@U) ) (! (let (($generated@@219 ($generated@@69 (type $generated@@218))))
 (=> (and (and (and (and (= (type $generated@@213) $generated@@79) (= (type $generated@@214) ($generated@@78 $generated@@79 $generated@@80))) (= (type $generated@@215) ($generated@@68 $generated@@4))) (= (type $generated@@217) $generated@@79)) (= (type $generated@@218) ($generated@@68 $generated@@219))) (= ($generated@@0 ($generated@@164 ($generated@@165 $generated@@213 $generated@@214 $generated@@215 $generated@@216) $generated@@217 $generated@@218))  (=> (and (not (= $generated@@217 $generated@@213)) ($generated@@0 ($generated@@85 ($generated@@83 $generated@@214 $generated@@217) $generated@@215))) $generated@@216))))
 :pattern ( ($generated@@164 ($generated@@165 $generated@@213 $generated@@214 $generated@@215 $generated@@216) $generated@@217 $generated@@218))
)))
(assert (forall (($generated@@222 T@U) ($generated@@223 T@U) ) (! (= (type ($generated@@220 $generated@@222 $generated@@223)) $generated@@145)
 :pattern ( ($generated@@220 $generated@@222 $generated@@223))
)))
(assert (forall (($generated@@224 T@U) ($generated@@225 T@U) ($generated@@226 T@U) ($generated@@227 T@U) ) (!  (=> (and (and (and (= (type $generated@@224) $generated@@66) (= (type $generated@@225) $generated@@66)) (= (type $generated@@226) $generated@@154)) (= (type $generated@@227) $generated@@154)) (= ($generated@@141 ($generated@@220 $generated@@226 $generated@@227) ($generated@@144 $generated@@224 $generated@@225))  (and ($generated@@221 $generated@@226 $generated@@224) ($generated@@221 $generated@@227 $generated@@225))))
 :pattern ( ($generated@@141 ($generated@@220 $generated@@226 $generated@@227) ($generated@@144 $generated@@224 $generated@@225)))
)))
(assert (forall (($generated@@228 T@U) ($generated@@229 T@U) ) (!  (=> (and (= (type $generated@@228) $generated@@145) (= (type $generated@@229) $generated@@145)) (= ($generated@@151 $generated@@228 $generated@@229) (= $generated@@228 $generated@@229)))
 :pattern ( ($generated@@151 $generated@@228 $generated@@229))
)))
(assert (forall (($generated@@231 T@U) ) (! (= (type ($generated@@230 $generated@@231)) $generated@@66)
 :pattern ( ($generated@@230 $generated@@231))
)))
(assert (forall (($generated@@232 T@U) ($generated@@233 T@U) ) (!  (=> (and (= (type $generated@@232) ($generated@@78 $generated@@154 $generated@@4)) (= (type $generated@@233) $generated@@66)) (= ($generated@@141 $generated@@232 ($generated@@230 $generated@@233)) (forall (($generated@@234 T@U) ) (!  (=> (and (= (type $generated@@234) $generated@@154) ($generated@@0 ($generated@@83 $generated@@232 $generated@@234))) ($generated@@221 $generated@@234 $generated@@233))
 :pattern ( ($generated@@83 $generated@@232 $generated@@234))
))))
 :pattern ( ($generated@@141 $generated@@232 ($generated@@230 $generated@@233)))
)))
(assert (forall (($generated@@236 T@U) ) (! (= (type ($generated@@235 $generated@@236)) $generated@@66)
 :pattern ( ($generated@@235 $generated@@236))
)))
(assert (forall (($generated@@237 T@U) ($generated@@238 T@U) ) (!  (=> (and (= (type $generated@@237) ($generated@@78 $generated@@154 $generated@@4)) (= (type $generated@@238) $generated@@66)) (= ($generated@@141 $generated@@237 ($generated@@235 $generated@@238)) (forall (($generated@@239 T@U) ) (!  (=> (and (= (type $generated@@239) $generated@@154) ($generated@@0 ($generated@@83 $generated@@237 $generated@@239))) ($generated@@221 $generated@@239 $generated@@238))
 :pattern ( ($generated@@83 $generated@@237 $generated@@239))
))))
 :pattern ( ($generated@@141 $generated@@237 ($generated@@235 $generated@@238)))
)))
(assert (forall (($generated@@241 Int) ) (! (= ($generated@@240 $generated@@241) $generated@@241)
 :pattern ( ($generated@@240 $generated@@241))
)))
(assert (forall (($generated@@243 T@U) ) (! (let (($generated@@244 (type $generated@@243)))
(= (type ($generated@@242 $generated@@243)) $generated@@244))
 :pattern ( ($generated@@242 $generated@@243))
)))
(assert (forall (($generated@@245 T@U) ) (! (= ($generated@@242 $generated@@245) $generated@@245)
 :pattern ( ($generated@@242 $generated@@245))
)))
(assert (forall (($generated@@248 T@U) ($generated@@249 T@U) ($generated@@250 T@U) ($generated@@251 T@U) ($generated@@252 T@U) ) (!  (=> (and (and (and (and (and (= (type $generated@@248) $generated@@66) (= (type $generated@@249) $generated@@66)) (= (type $generated@@250) $generated@@154)) (= (type $generated@@251) $generated@@154)) (= (type $generated@@252) ($generated@@78 $generated@@79 $generated@@80))) ($generated@@246 $generated@@252)) (= ($generated@@76 ($generated@@220 $generated@@250 $generated@@251) ($generated@@144 $generated@@248 $generated@@249) $generated@@252)  (and ($generated@@247 $generated@@250 $generated@@248 $generated@@252) ($generated@@247 $generated@@251 $generated@@249 $generated@@252))))
 :pattern ( ($generated@@76 ($generated@@220 $generated@@250 $generated@@251) ($generated@@144 $generated@@248 $generated@@249) $generated@@252))
)))
(assert (forall (($generated@@254 T@U) ) (! (= (type ($generated@@253 $generated@@254)) $generated@@70)
 :pattern ( ($generated@@253 $generated@@254))
)))
(assert (forall (($generated@@255 T@U) ) (!  (=> (= (type $generated@@255) $generated@@145) (= ($generated@@143 $generated@@255) (= ($generated@@253 $generated@@255) $generated@@62)))
 :pattern ( ($generated@@143 $generated@@255))
)))
(assert (forall (($generated@@256 T@U) ) (!  (=> (and (= (type $generated@@256) $generated@@145) ($generated@@143 $generated@@256)) (exists (($generated@@257 T@U) ($generated@@258 T@U) ) (!  (and (and (= (type $generated@@257) $generated@@154) (= (type $generated@@258) $generated@@154)) (= $generated@@256 ($generated@@220 $generated@@257 $generated@@258)))
 :no-pattern (type $generated@@257)
 :no-pattern (type $generated@@258)
 :no-pattern ($generated $generated@@257)
 :no-pattern ($generated@@0 $generated@@257)
 :no-pattern ($generated $generated@@258)
 :no-pattern ($generated@@0 $generated@@258)
)))
 :pattern ( ($generated@@143 $generated@@256))
)))
(assert  (and (and (forall (($generated@@263 T@T) ) (= ($generated@@1 ($generated@@261 $generated@@263)) 17)) (forall (($generated@@264 T@T) ) (! (= ($generated@@262 ($generated@@261 $generated@@264)) $generated@@264)
 :pattern ( ($generated@@261 $generated@@264))
))) (forall (($generated@@265 T@T) ) (! (= (type ($generated@@259 $generated@@265)) ($generated@@261 $generated@@265))
 :pattern ( ($generated@@259 $generated@@265))
))))
(assert (forall (($generated@@266 T@T) ) (! (= ($generated@@260 ($generated@@259 $generated@@266)) 0)
 :pattern ( ($generated@@259 $generated@@266))
)))
(assert (forall (($generated@@267 T@U) ) (!  (=> (= (type $generated@@267) $generated@@2) (= ($generated@@141 $generated@@267 $generated@@138) (<= ($generated@@240 0) ($generated $generated@@267))))
 :pattern ( ($generated@@141 $generated@@267 $generated@@138))
)))
(assert (forall (($generated@@269 T@U) ) (! (= (type ($generated@@268 $generated@@269)) $generated@@154)
 :pattern ( ($generated@@268 $generated@@269))
)))
(assert (forall (($generated@@270 T@U) ($generated@@271 T@U) ($generated@@272 T@U) ) (!  (=> (and (= (type $generated@@271) $generated@@66) (= (type $generated@@272) ($generated@@78 $generated@@79 $generated@@80))) (= ($generated@@247 ($generated@@268 $generated@@270) $generated@@271 $generated@@272) ($generated@@76 $generated@@270 $generated@@271 $generated@@272)))
 :pattern ( ($generated@@247 ($generated@@268 $generated@@270) $generated@@271 $generated@@272))
)))
(assert (forall (($generated@@273 T@U) ($generated@@274 T@U) ($generated@@275 T@U) ($generated@@276 T@U) ) (!  (=> (and (and (and (and (and (= (type $generated@@273) ($generated@@78 $generated@@79 $generated@@80)) (= (type $generated@@274) ($generated@@78 $generated@@79 $generated@@80))) (= (type $generated@@275) $generated@@154)) (= (type $generated@@276) $generated@@66)) ($generated@@134 $generated@@273 $generated@@274)) ($generated@@247 $generated@@275 $generated@@276 $generated@@273)) ($generated@@247 $generated@@275 $generated@@276 $generated@@274))
 :pattern ( ($generated@@134 $generated@@273 $generated@@274) ($generated@@247 $generated@@275 $generated@@276 $generated@@273))
)))
(assert (forall (($generated@@277 T@U) ($generated@@278 T@U) ($generated@@279 T@U) ($generated@@280 T@U) ) (!  (=> (and (and (and (and (= (type $generated@@277) ($generated@@78 $generated@@79 $generated@@80)) (= (type $generated@@278) ($generated@@78 $generated@@79 $generated@@80))) (= (type $generated@@280) $generated@@66)) ($generated@@134 $generated@@277 $generated@@278)) ($generated@@76 $generated@@279 $generated@@280 $generated@@277)) ($generated@@76 $generated@@279 $generated@@280 $generated@@278))
 :pattern ( ($generated@@134 $generated@@277 $generated@@278) ($generated@@76 $generated@@279 $generated@@280 $generated@@277))
)))
(assert (forall (($generated@@283 T@T) ) (! (= (type ($generated@@282 $generated@@283)) ($generated@@78 $generated@@283 $generated@@2))
 :pattern ( ($generated@@282 $generated@@283))
)))
(assert (forall (($generated@@284 T@U) ) (! (let (($generated@@285 ($generated@@81 (type $generated@@284))))
 (=> (= (type $generated@@284) ($generated@@78 $generated@@285 $generated@@2)) (and (= (= ($generated@@281 $generated@@284) 0) (= $generated@@284 ($generated@@282 $generated@@285))) (=> (not (= ($generated@@281 $generated@@284) 0)) (exists (($generated@@286 T@U) ) (!  (and (= (type $generated@@286) $generated@@285) (< 0 ($generated ($generated@@83 $generated@@284 $generated@@286))))
 :no-pattern (type $generated@@286)
 :no-pattern ($generated $generated@@286)
 :no-pattern ($generated@@0 $generated@@286)
))))))
 :pattern ( ($generated@@281 $generated@@284))
)))
(assert  (and (and (and (and (forall (($generated@@292 T@T) ($generated@@293 T@T) ) (= ($generated@@1 ($generated@@289 $generated@@292 $generated@@293)) 18)) (forall (($generated@@294 T@T) ($generated@@295 T@T) ) (! (= ($generated@@290 ($generated@@289 $generated@@294 $generated@@295)) $generated@@294)
 :pattern ( ($generated@@289 $generated@@294 $generated@@295))
))) (forall (($generated@@296 T@T) ($generated@@297 T@T) ) (! (= ($generated@@291 ($generated@@289 $generated@@296 $generated@@297)) $generated@@297)
 :pattern ( ($generated@@289 $generated@@296 $generated@@297))
))) (forall (($generated@@298 T@U) ) (! (let (($generated@@299 ($generated@@290 (type $generated@@298))))
(= (type ($generated@@287 $generated@@298)) ($generated@@78 $generated@@299 $generated@@4)))
 :pattern ( ($generated@@287 $generated@@298))
))) (forall (($generated@@300 T@T) ($generated@@301 T@T) ) (! (= (type ($generated@@288 $generated@@300 $generated@@301)) ($generated@@289 $generated@@300 $generated@@301))
 :pattern ( ($generated@@288 $generated@@300 $generated@@301))
))))
(assert (forall (($generated@@302 T@U) ($generated@@303 T@T) ) (! (let (($generated@@304 (type $generated@@302)))
 (not ($generated@@0 ($generated@@83 ($generated@@287 ($generated@@288 $generated@@304 $generated@@303)) $generated@@302))))
 :pattern ( (let (($generated@@304 (type $generated@@302)))
($generated@@83 ($generated@@287 ($generated@@288 $generated@@304 $generated@@303)) $generated@@302)))
)))
(assert  (and (and (and (and (forall (($generated@@310 T@T) ($generated@@311 T@T) ) (= ($generated@@1 ($generated@@307 $generated@@310 $generated@@311)) 19)) (forall (($generated@@312 T@T) ($generated@@313 T@T) ) (! (= ($generated@@308 ($generated@@307 $generated@@312 $generated@@313)) $generated@@312)
 :pattern ( ($generated@@307 $generated@@312 $generated@@313))
))) (forall (($generated@@314 T@T) ($generated@@315 T@T) ) (! (= ($generated@@309 ($generated@@307 $generated@@314 $generated@@315)) $generated@@315)
 :pattern ( ($generated@@307 $generated@@314 $generated@@315))
))) (forall (($generated@@316 T@U) ) (! (let (($generated@@317 ($generated@@308 (type $generated@@316))))
(= (type ($generated@@305 $generated@@316)) ($generated@@78 $generated@@317 $generated@@4)))
 :pattern ( ($generated@@305 $generated@@316))
))) (forall (($generated@@318 T@T) ($generated@@319 T@T) ) (! (= (type ($generated@@306 $generated@@318 $generated@@319)) ($generated@@307 $generated@@318 $generated@@319))
 :pattern ( ($generated@@306 $generated@@318 $generated@@319))
))))
(assert (forall (($generated@@320 T@U) ($generated@@321 T@T) ) (! (let (($generated@@322 (type $generated@@320)))
 (not ($generated@@0 ($generated@@83 ($generated@@305 ($generated@@306 $generated@@322 $generated@@321)) $generated@@320))))
 :pattern ( (let (($generated@@322 (type $generated@@320)))
($generated@@83 ($generated@@305 ($generated@@306 $generated@@322 $generated@@321)) $generated@@320)))
)))
(assert (forall (($generated@@323 T@U) ) (! (let (($generated@@324 ($generated@@81 (type $generated@@323))))
 (=> (= (type $generated@@323) ($generated@@78 $generated@@324 $generated@@2)) (= ($generated@@160 $generated@@323) (forall (($generated@@325 T@U) ) (!  (=> (= (type $generated@@325) $generated@@324) (and (<= 0 ($generated ($generated@@83 $generated@@323 $generated@@325))) (<= ($generated ($generated@@83 $generated@@323 $generated@@325)) ($generated@@281 $generated@@323))))
 :pattern ( ($generated@@83 $generated@@323 $generated@@325))
)))))
 :pattern ( ($generated@@160 $generated@@323))
)))
(assert (forall (($generated@@327 T@T) ($generated@@328 T@U) ) (! (= (type ($generated@@326 $generated@@327 $generated@@328)) $generated@@327)
 :pattern ( ($generated@@326 $generated@@327 $generated@@328))
)))
(assert (forall (($generated@@329 T@U) ) (!  (=> (and (= (type $generated@@329) $generated@@154) ($generated@@221 $generated@@329 $generated@@138)) (and (= ($generated@@268 ($generated@@326 $generated@@2 $generated@@329)) $generated@@329) ($generated@@141 ($generated@@326 $generated@@2 $generated@@329) $generated@@138)))
 :pattern ( ($generated@@221 $generated@@329 $generated@@138))
)))
(assert (forall (($generated@@330 T@U) ) (! (let (($generated@@331 ($generated@@291 (type $generated@@330))))
(let (($generated@@332 ($generated@@290 (type $generated@@330))))
 (=> (= (type $generated@@330) ($generated@@289 $generated@@332 $generated@@331)) (or (= $generated@@330 ($generated@@288 $generated@@332 $generated@@331)) (exists (($generated@@333 T@U) ) (!  (and (= (type $generated@@333) $generated@@332) ($generated@@0 ($generated@@83 ($generated@@287 $generated@@330) $generated@@333)))
 :no-pattern (type $generated@@333)
 :no-pattern ($generated $generated@@333)
 :no-pattern ($generated@@0 $generated@@333)
))))))
 :pattern ( ($generated@@287 $generated@@330))
)))
(assert (forall (($generated@@335 T@U) ) (! (let (($generated@@336 ($generated@@291 (type $generated@@335))))
(= (type ($generated@@334 $generated@@335)) ($generated@@78 $generated@@336 $generated@@4)))
 :pattern ( ($generated@@334 $generated@@335))
)))
(assert (forall (($generated@@337 T@U) ) (! (let (($generated@@338 ($generated@@291 (type $generated@@337))))
(let (($generated@@339 ($generated@@290 (type $generated@@337))))
 (=> (= (type $generated@@337) ($generated@@289 $generated@@339 $generated@@338)) (or (= $generated@@337 ($generated@@288 $generated@@339 $generated@@338)) (exists (($generated@@340 T@U) ) (!  (and (= (type $generated@@340) $generated@@338) ($generated@@0 ($generated@@83 ($generated@@334 $generated@@337) $generated@@340)))
 :no-pattern (type $generated@@340)
 :no-pattern ($generated $generated@@340)
 :no-pattern ($generated@@0 $generated@@340)
))))))
 :pattern ( ($generated@@334 $generated@@337))
)))
(assert (forall (($generated@@341 T@U) ) (! (let (($generated@@342 ($generated@@309 (type $generated@@341))))
(let (($generated@@343 ($generated@@308 (type $generated@@341))))
 (=> (= (type $generated@@341) ($generated@@307 $generated@@343 $generated@@342)) (or (= $generated@@341 ($generated@@306 $generated@@343 $generated@@342)) (exists (($generated@@344 T@U) ) (!  (and (= (type $generated@@344) $generated@@343) ($generated@@0 ($generated@@83 ($generated@@305 $generated@@341) $generated@@344)))
 :no-pattern (type $generated@@344)
 :no-pattern ($generated $generated@@344)
 :no-pattern ($generated@@0 $generated@@344)
))))))
 :pattern ( ($generated@@305 $generated@@341))
)))
(assert (forall (($generated@@346 T@U) ) (! (let (($generated@@347 ($generated@@309 (type $generated@@346))))
(= (type ($generated@@345 $generated@@346)) ($generated@@78 $generated@@347 $generated@@4)))
 :pattern ( ($generated@@345 $generated@@346))
)))
(assert (forall (($generated@@348 T@U) ) (! (let (($generated@@349 ($generated@@309 (type $generated@@348))))
(let (($generated@@350 ($generated@@308 (type $generated@@348))))
 (=> (= (type $generated@@348) ($generated@@307 $generated@@350 $generated@@349)) (or (= $generated@@348 ($generated@@306 $generated@@350 $generated@@349)) (exists (($generated@@351 T@U) ) (!  (and (= (type $generated@@351) $generated@@349) ($generated@@0 ($generated@@83 ($generated@@345 $generated@@348) $generated@@351)))
 :no-pattern (type $generated@@351)
 :no-pattern ($generated $generated@@351)
 :no-pattern ($generated@@0 $generated@@351)
))))))
 :pattern ( ($generated@@345 $generated@@348))
)))
(assert (forall (($generated@@352 T@U) ($generated@@353 T@U) ) (!  (=> (and (= (type $generated@@352) ($generated@@78 $generated@@154 $generated@@2)) (= (type $generated@@353) $generated@@66)) (= ($generated@@141 $generated@@352 ($generated@@159 $generated@@353)) (forall (($generated@@354 T@U) ) (!  (=> (and (= (type $generated@@354) $generated@@154) (< 0 ($generated ($generated@@83 $generated@@352 $generated@@354)))) ($generated@@221 $generated@@354 $generated@@353))
 :pattern ( ($generated@@83 $generated@@352 $generated@@354))
))))
 :pattern ( ($generated@@141 $generated@@352 ($generated@@159 $generated@@353)))
)))
(assert (forall (($generated@@355 T@U) ($generated@@356 T@U) ($generated@@357 T@U) ) (!  (=> (and (and (= (type $generated@@355) ($generated@@78 $generated@@154 $generated@@4)) (= (type $generated@@356) $generated@@66)) (= (type $generated@@357) ($generated@@78 $generated@@79 $generated@@80))) (= ($generated@@76 $generated@@355 ($generated@@230 $generated@@356) $generated@@357) (forall (($generated@@358 T@U) ) (!  (=> (and (= (type $generated@@358) $generated@@154) ($generated@@0 ($generated@@83 $generated@@355 $generated@@358))) ($generated@@247 $generated@@358 $generated@@356 $generated@@357))
 :pattern ( ($generated@@83 $generated@@355 $generated@@358))
))))
 :pattern ( ($generated@@76 $generated@@355 ($generated@@230 $generated@@356) $generated@@357))
)))
(assert (forall (($generated@@359 T@U) ($generated@@360 T@U) ($generated@@361 T@U) ) (!  (=> (and (and (= (type $generated@@359) ($generated@@78 $generated@@154 $generated@@4)) (= (type $generated@@360) $generated@@66)) (= (type $generated@@361) ($generated@@78 $generated@@79 $generated@@80))) (= ($generated@@76 $generated@@359 ($generated@@235 $generated@@360) $generated@@361) (forall (($generated@@362 T@U) ) (!  (=> (and (= (type $generated@@362) $generated@@154) ($generated@@0 ($generated@@83 $generated@@359 $generated@@362))) ($generated@@247 $generated@@362 $generated@@360 $generated@@361))
 :pattern ( ($generated@@83 $generated@@359 $generated@@362))
))))
 :pattern ( ($generated@@76 $generated@@359 ($generated@@235 $generated@@360) $generated@@361))
)))
(assert (forall (($generated@@363 T@U) ) (! (let (($generated@@364 (type $generated@@363)))
(= ($generated ($generated@@83 ($generated@@282 $generated@@364) $generated@@363)) 0))
 :pattern ( (let (($generated@@364 (type $generated@@363)))
($generated@@83 ($generated@@282 $generated@@364) $generated@@363)))
)))
(assert  (and (forall (($generated@@367 T@U) ) (! (= (type ($generated@@365 $generated@@367)) ($generated@@78 $generated@@154 $generated@@4))
 :pattern ( ($generated@@365 $generated@@367))
)) (forall (($generated@@368 T@U) ) (! (let (($generated@@369 ($generated@@291 (type $generated@@368))))
(let (($generated@@370 ($generated@@290 (type $generated@@368))))
(= (type ($generated@@366 $generated@@368)) ($generated@@78 $generated@@370 $generated@@369))))
 :pattern ( ($generated@@366 $generated@@368))
))))
(assert (forall (($generated@@371 T@U) ($generated@@372 T@U) ) (!  (=> (and (= (type $generated@@371) ($generated@@289 $generated@@154 $generated@@154)) (= (type $generated@@372) $generated@@154)) (= ($generated@@0 ($generated@@83 ($generated@@365 $generated@@371) $generated@@372))  (and ($generated@@0 ($generated@@83 ($generated@@287 $generated@@371) ($generated@@152 ($generated@@326 $generated@@145 $generated@@372)))) (= ($generated@@83 ($generated@@366 $generated@@371) ($generated@@152 ($generated@@326 $generated@@145 $generated@@372))) ($generated@@153 ($generated@@326 $generated@@145 $generated@@372))))))
 :pattern ( ($generated@@83 ($generated@@365 $generated@@371) $generated@@372))
)))
(assert  (and (forall (($generated@@375 T@U) ) (! (= (type ($generated@@373 $generated@@375)) ($generated@@78 $generated@@154 $generated@@4))
 :pattern ( ($generated@@373 $generated@@375))
)) (forall (($generated@@376 T@U) ) (! (let (($generated@@377 ($generated@@309 (type $generated@@376))))
(let (($generated@@378 ($generated@@308 (type $generated@@376))))
(= (type ($generated@@374 $generated@@376)) ($generated@@78 $generated@@378 $generated@@377))))
 :pattern ( ($generated@@374 $generated@@376))
))))
(assert (forall (($generated@@379 T@U) ($generated@@380 T@U) ) (!  (=> (and (= (type $generated@@379) ($generated@@307 $generated@@154 $generated@@154)) (= (type $generated@@380) $generated@@154)) (= ($generated@@0 ($generated@@83 ($generated@@373 $generated@@379) $generated@@380))  (and ($generated@@0 ($generated@@83 ($generated@@305 $generated@@379) ($generated@@152 ($generated@@326 $generated@@145 $generated@@380)))) (= ($generated@@83 ($generated@@374 $generated@@379) ($generated@@152 ($generated@@326 $generated@@145 $generated@@380))) ($generated@@153 ($generated@@326 $generated@@145 $generated@@380))))))
 :pattern ( ($generated@@83 ($generated@@373 $generated@@379) $generated@@380))
)))
(assert (forall (($generated@@381 T@U) ($generated@@382 T@U) ) (! (let (($generated@@383 (type $generated@@382)))
(let (($generated@@384 ($generated@@290 (type $generated@@381))))
 (=> (= (type $generated@@381) ($generated@@289 $generated@@384 $generated@@383)) (= ($generated@@0 ($generated@@83 ($generated@@334 $generated@@381) $generated@@382)) (exists (($generated@@385 T@U) ) (!  (and (= (type $generated@@385) $generated@@384) (and ($generated@@0 ($generated@@83 ($generated@@287 $generated@@381) $generated@@385)) (= $generated@@382 ($generated@@83 ($generated@@366 $generated@@381) $generated@@385))))
 :pattern ( ($generated@@83 ($generated@@287 $generated@@381) $generated@@385))
 :pattern ( ($generated@@83 ($generated@@366 $generated@@381) $generated@@385))
))))))
 :pattern ( ($generated@@83 ($generated@@334 $generated@@381) $generated@@382))
)))
(assert (forall (($generated@@386 T@U) ($generated@@387 T@U) ) (! (let (($generated@@388 (type $generated@@387)))
(let (($generated@@389 ($generated@@308 (type $generated@@386))))
 (=> (= (type $generated@@386) ($generated@@307 $generated@@389 $generated@@388)) (= ($generated@@0 ($generated@@83 ($generated@@345 $generated@@386) $generated@@387)) (exists (($generated@@390 T@U) ) (!  (and (= (type $generated@@390) $generated@@389) (and ($generated@@0 ($generated@@83 ($generated@@305 $generated@@386) $generated@@390)) (= $generated@@387 ($generated@@83 ($generated@@374 $generated@@386) $generated@@390))))
 :pattern ( ($generated@@83 ($generated@@305 $generated@@386) $generated@@390))
 :pattern ( ($generated@@83 ($generated@@374 $generated@@386) $generated@@390))
))))))
 :pattern ( ($generated@@83 ($generated@@345 $generated@@386) $generated@@387))
)))
(assert (forall (($generated@@392 T@U) ($generated@@393 T@U) ) (! (= (type ($generated@@391 $generated@@392 $generated@@393)) $generated@@66)
 :pattern ( ($generated@@391 $generated@@392 $generated@@393))
)))
(assert (forall (($generated@@394 T@U) ($generated@@395 T@U) ($generated@@396 T@U) ($generated@@397 T@U) ) (!  (=> (and (and (and (= (type $generated@@394) ($generated@@289 $generated@@154 $generated@@154)) (= (type $generated@@395) $generated@@66)) (= (type $generated@@396) $generated@@66)) (= (type $generated@@397) ($generated@@78 $generated@@79 $generated@@80))) (= ($generated@@76 $generated@@394 ($generated@@391 $generated@@395 $generated@@396) $generated@@397) (forall (($generated@@398 T@U) ) (!  (=> (and (= (type $generated@@398) $generated@@154) ($generated@@0 ($generated@@83 ($generated@@287 $generated@@394) $generated@@398))) (and ($generated@@247 ($generated@@83 ($generated@@366 $generated@@394) $generated@@398) $generated@@396 $generated@@397) ($generated@@247 $generated@@398 $generated@@395 $generated@@397)))
 :pattern ( ($generated@@83 ($generated@@366 $generated@@394) $generated@@398))
 :pattern ( ($generated@@83 ($generated@@287 $generated@@394) $generated@@398))
))))
 :pattern ( ($generated@@76 $generated@@394 ($generated@@391 $generated@@395 $generated@@396) $generated@@397))
)))
(assert (forall (($generated@@400 T@U) ($generated@@401 T@U) ) (! (= (type ($generated@@399 $generated@@400 $generated@@401)) $generated@@66)
 :pattern ( ($generated@@399 $generated@@400 $generated@@401))
)))
(assert (forall (($generated@@402 T@U) ($generated@@403 T@U) ($generated@@404 T@U) ($generated@@405 T@U) ) (!  (=> (and (and (and (= (type $generated@@402) ($generated@@307 $generated@@154 $generated@@154)) (= (type $generated@@403) $generated@@66)) (= (type $generated@@404) $generated@@66)) (= (type $generated@@405) ($generated@@78 $generated@@79 $generated@@80))) (= ($generated@@76 $generated@@402 ($generated@@399 $generated@@403 $generated@@404) $generated@@405) (forall (($generated@@406 T@U) ) (!  (=> (and (= (type $generated@@406) $generated@@154) ($generated@@0 ($generated@@83 ($generated@@305 $generated@@402) $generated@@406))) (and ($generated@@247 ($generated@@83 ($generated@@374 $generated@@402) $generated@@406) $generated@@404 $generated@@405) ($generated@@247 $generated@@406 $generated@@403 $generated@@405)))
 :pattern ( ($generated@@83 ($generated@@374 $generated@@402) $generated@@406))
 :pattern ( ($generated@@83 ($generated@@305 $generated@@402) $generated@@406))
))))
 :pattern ( ($generated@@76 $generated@@402 ($generated@@399 $generated@@403 $generated@@404) $generated@@405))
)))
(assert (forall (($generated@@407 T@U) ($generated@@408 T@U) ($generated@@409 T@U) ) (!  (=> (and (and (and (and (= (type $generated@@407) ($generated@@78 $generated@@79 $generated@@80)) (= (type $generated@@408) ($generated@@78 $generated@@79 $generated@@80))) (= (type $generated@@409) ($generated@@78 $generated@@79 $generated@@80))) (not (= $generated@@407 $generated@@409))) (and ($generated@@134 $generated@@407 $generated@@408) ($generated@@134 $generated@@408 $generated@@409))) ($generated@@134 $generated@@407 $generated@@409))
 :pattern ( ($generated@@134 $generated@@407 $generated@@408) ($generated@@134 $generated@@408 $generated@@409))
)))
(assert (forall (($generated@@411 T@T) ) (! (= (type ($generated@@410 $generated@@411)) ($generated@@78 $generated@@411 $generated@@4))
 :pattern ( ($generated@@410 $generated@@411))
)))
(assert (forall (($generated@@412 T@U) ) (! (let (($generated@@413 ($generated@@309 (type $generated@@412))))
(let (($generated@@414 ($generated@@308 (type $generated@@412))))
 (=> (= (type $generated@@412) ($generated@@307 $generated@@414 $generated@@413)) (= (= $generated@@412 ($generated@@306 $generated@@414 $generated@@413)) (= ($generated@@305 $generated@@412) ($generated@@410 $generated@@414))))))
 :pattern ( ($generated@@305 $generated@@412))
)))
(assert (forall (($generated@@415 T@U) ) (! (let (($generated@@416 ($generated@@309 (type $generated@@415))))
(let (($generated@@417 ($generated@@308 (type $generated@@415))))
 (=> (= (type $generated@@415) ($generated@@307 $generated@@417 $generated@@416)) (= (= $generated@@415 ($generated@@306 $generated@@417 $generated@@416)) (= ($generated@@345 $generated@@415) ($generated@@410 $generated@@416))))))
 :pattern ( ($generated@@345 $generated@@415))
)))
(assert (forall (($generated@@418 T@U) ) (! (let (($generated@@419 ($generated@@309 (type $generated@@418))))
(let (($generated@@420 ($generated@@308 (type $generated@@418))))
 (=> (= (type $generated@@418) ($generated@@307 $generated@@420 $generated@@419)) (= (= $generated@@418 ($generated@@306 $generated@@420 $generated@@419)) (= ($generated@@373 $generated@@418) ($generated@@410 $generated@@154))))))
 :pattern ( ($generated@@373 $generated@@418))
)))
(assert (forall (($generated@@421 T@U) ) (! (let (($generated@@422 ($generated@@291 (type $generated@@421))))
(let (($generated@@423 ($generated@@290 (type $generated@@421))))
 (=> (= (type $generated@@421) ($generated@@289 $generated@@423 $generated@@422)) (or (= $generated@@421 ($generated@@288 $generated@@423 $generated@@422)) (exists (($generated@@424 T@U) ($generated@@425 T@U) ) (!  (and (and (= (type $generated@@424) $generated@@154) (= (type $generated@@425) $generated@@154)) ($generated@@0 ($generated@@83 ($generated@@365 $generated@@421) ($generated@@268 ($generated@@220 $generated@@424 $generated@@425)))))
 :no-pattern (type $generated@@424)
 :no-pattern (type $generated@@425)
 :no-pattern ($generated $generated@@424)
 :no-pattern ($generated@@0 $generated@@424)
 :no-pattern ($generated $generated@@425)
 :no-pattern ($generated@@0 $generated@@425)
))))))
 :pattern ( ($generated@@365 $generated@@421))
)))
(assert (forall (($generated@@426 T@U) ) (! (let (($generated@@427 ($generated@@309 (type $generated@@426))))
(let (($generated@@428 ($generated@@308 (type $generated@@426))))
 (=> (= (type $generated@@426) ($generated@@307 $generated@@428 $generated@@427)) (or (= $generated@@426 ($generated@@306 $generated@@428 $generated@@427)) (exists (($generated@@429 T@U) ($generated@@430 T@U) ) (!  (and (and (= (type $generated@@429) $generated@@154) (= (type $generated@@430) $generated@@154)) ($generated@@0 ($generated@@83 ($generated@@373 $generated@@426) ($generated@@268 ($generated@@220 $generated@@429 $generated@@430)))))
 :no-pattern (type $generated@@429)
 :no-pattern (type $generated@@430)
 :no-pattern ($generated $generated@@429)
 :no-pattern ($generated@@0 $generated@@429)
 :no-pattern ($generated $generated@@430)
 :no-pattern ($generated@@0 $generated@@430)
))))))
 :pattern ( ($generated@@373 $generated@@426))
)))
(assert (forall (($generated@@431 T@U) ) (!  (=> (and (= (type $generated@@431) $generated@@154) ($generated@@221 $generated@@431 $generated@@46)) (and (= ($generated@@268 ($generated@@326 $generated@@2 $generated@@431)) $generated@@431) ($generated@@141 ($generated@@326 $generated@@2 $generated@@431) $generated@@46)))
 :pattern ( ($generated@@221 $generated@@431 $generated@@46))
)))
(assert (forall (($generated@@432 T@U) ) (!  (=> (and (= (type $generated@@432) $generated@@154) ($generated@@221 $generated@@432 $generated@@47)) (and (= ($generated@@268 ($generated@@326 $generated@@3 $generated@@432)) $generated@@432) ($generated@@141 ($generated@@326 $generated@@3 $generated@@432) $generated@@47)))
 :pattern ( ($generated@@221 $generated@@432 $generated@@47))
)))
(assert (forall (($generated@@433 T@U) ) (!  (=> (and (= (type $generated@@433) $generated@@154) ($generated@@221 $generated@@433 $generated@@44)) (and (= ($generated@@268 ($generated@@326 $generated@@4 $generated@@433)) $generated@@433) ($generated@@141 ($generated@@326 $generated@@4 $generated@@433) $generated@@44)))
 :pattern ( ($generated@@221 $generated@@433 $generated@@44))
)))
(assert (= ($generated@@1 $generated@@434) 20))
(assert (forall (($generated@@435 T@U) ) (!  (=> (and (= (type $generated@@435) $generated@@154) ($generated@@221 $generated@@435 $generated@@45)) (and (= ($generated@@268 ($generated@@326 $generated@@434 $generated@@435)) $generated@@435) ($generated@@141 ($generated@@326 $generated@@434 $generated@@435) $generated@@45)))
 :pattern ( ($generated@@221 $generated@@435 $generated@@45))
)))
(assert (forall (($generated@@436 T@U) ($generated@@437 T@U) ) (!  (=> (= (type $generated@@437) $generated@@66) (= ($generated@@221 ($generated@@268 $generated@@436) $generated@@437) ($generated@@141 $generated@@436 $generated@@437)))
 :pattern ( ($generated@@221 ($generated@@268 $generated@@436) $generated@@437))
)))
(assert (forall (($generated@@438 T@U) ) (! (let (($generated@@439 ($generated@@81 (type $generated@@438))))
 (=> (= (type $generated@@438) ($generated@@78 $generated@@439 $generated@@2)) (<= 0 ($generated@@281 $generated@@438))))
 :pattern ( ($generated@@281 $generated@@438))
)))
(assert (forall (($generated@@440 T@U) ) (! (let (($generated@@441 ($generated@@262 (type $generated@@440))))
 (=> (= (type $generated@@440) ($generated@@261 $generated@@441)) (<= 0 ($generated@@260 $generated@@440))))
 :pattern ( ($generated@@260 $generated@@440))
)))
(assert (forall (($generated@@443 T@U) ) (! (= (type ($generated@@442 $generated@@443)) $generated@@66)
 :pattern ( ($generated@@442 $generated@@443))
)))
(assert (forall (($generated@@444 T@U) ($generated@@445 T@U) ) (!  (=> (and (= (type $generated@@444) $generated@@66) (= (type $generated@@445) $generated@@66)) (= ($generated@@442 ($generated@@391 $generated@@444 $generated@@445)) $generated@@444))
 :pattern ( ($generated@@391 $generated@@444 $generated@@445))
)))
(assert (forall (($generated@@447 T@U) ) (! (= (type ($generated@@446 $generated@@447)) $generated@@66)
 :pattern ( ($generated@@446 $generated@@447))
)))
(assert (forall (($generated@@448 T@U) ($generated@@449 T@U) ) (!  (=> (and (= (type $generated@@448) $generated@@66) (= (type $generated@@449) $generated@@66)) (= ($generated@@446 ($generated@@391 $generated@@448 $generated@@449)) $generated@@449))
 :pattern ( ($generated@@391 $generated@@448 $generated@@449))
)))
(assert (forall (($generated@@450 T@U) ($generated@@451 T@U) ) (!  (=> (and (= (type $generated@@450) $generated@@66) (= (type $generated@@451) $generated@@66)) (= ($generated@@74 ($generated@@391 $generated@@450 $generated@@451)) $generated@@58))
 :pattern ( ($generated@@391 $generated@@450 $generated@@451))
)))
(assert (forall (($generated@@453 T@U) ) (! (= (type ($generated@@452 $generated@@453)) $generated@@66)
 :pattern ( ($generated@@452 $generated@@453))
)))
(assert (forall (($generated@@454 T@U) ($generated@@455 T@U) ) (!  (=> (and (= (type $generated@@454) $generated@@66) (= (type $generated@@455) $generated@@66)) (= ($generated@@452 ($generated@@399 $generated@@454 $generated@@455)) $generated@@454))
 :pattern ( ($generated@@399 $generated@@454 $generated@@455))
)))
(assert (forall (($generated@@457 T@U) ) (! (= (type ($generated@@456 $generated@@457)) $generated@@66)
 :pattern ( ($generated@@456 $generated@@457))
)))
(assert (forall (($generated@@458 T@U) ($generated@@459 T@U) ) (!  (=> (and (= (type $generated@@458) $generated@@66) (= (type $generated@@459) $generated@@66)) (= ($generated@@456 ($generated@@399 $generated@@458 $generated@@459)) $generated@@459))
 :pattern ( ($generated@@399 $generated@@458 $generated@@459))
)))
(assert (forall (($generated@@460 T@U) ($generated@@461 T@U) ) (!  (=> (and (= (type $generated@@460) $generated@@66) (= (type $generated@@461) $generated@@66)) (= ($generated@@74 ($generated@@399 $generated@@460 $generated@@461)) $generated@@59))
 :pattern ( ($generated@@399 $generated@@460 $generated@@461))
)))
(assert (forall (($generated@@462 T@U) ($generated@@463 T@U) ) (!  (=> (and (= (type $generated@@462) $generated@@154) (= (type $generated@@463) $generated@@154)) (= ($generated@@253 ($generated@@220 $generated@@462 $generated@@463)) $generated@@62))
 :pattern ( ($generated@@220 $generated@@462 $generated@@463))
)))
(assert (forall (($generated@@465 T@U) ) (! (= (type ($generated@@464 $generated@@465)) $generated@@66)
 :pattern ( ($generated@@464 $generated@@465))
)))
(assert (forall (($generated@@466 T@U) ($generated@@467 T@U) ) (!  (=> (and (= (type $generated@@466) $generated@@66) (= (type $generated@@467) $generated@@66)) (= ($generated@@464 ($generated@@144 $generated@@466 $generated@@467)) $generated@@466))
 :pattern ( ($generated@@144 $generated@@466 $generated@@467))
)))
(assert (forall (($generated@@469 T@U) ) (! (= (type ($generated@@468 $generated@@469)) $generated@@66)
 :pattern ( ($generated@@468 $generated@@469))
)))
(assert (forall (($generated@@470 T@U) ($generated@@471 T@U) ) (!  (=> (and (= (type $generated@@470) $generated@@66) (= (type $generated@@471) $generated@@66)) (= ($generated@@468 ($generated@@144 $generated@@470 $generated@@471)) $generated@@471))
 :pattern ( ($generated@@144 $generated@@470 $generated@@471))
)))
(assert (forall (($generated@@472 T@U) ($generated@@473 T@U) ) (!  (=> (and (= (type $generated@@472) $generated@@154) (= (type $generated@@473) $generated@@154)) (= ($generated@@152 ($generated@@220 $generated@@472 $generated@@473)) $generated@@472))
 :pattern ( ($generated@@220 $generated@@472 $generated@@473))
)))
(assert (forall (($generated@@474 T@U) ($generated@@475 T@U) ) (!  (=> (and (= (type $generated@@474) $generated@@154) (= (type $generated@@475) $generated@@154)) (= ($generated@@153 ($generated@@220 $generated@@474 $generated@@475)) $generated@@475))
 :pattern ( ($generated@@220 $generated@@474 $generated@@475))
)))
(assert  (and (forall (($generated@@478 T@U) ) (! (= (type ($generated@@476 $generated@@478)) $generated@@66)
 :pattern ( ($generated@@476 $generated@@478))
)) (forall (($generated@@479 T@U) ($generated@@480 Int) ) (! (let (($generated@@481 ($generated@@262 (type $generated@@479))))
(= (type ($generated@@477 $generated@@479 $generated@@480)) $generated@@481))
 :pattern ( ($generated@@477 $generated@@479 $generated@@480))
))))
(assert (forall (($generated@@482 T@U) ($generated@@483 T@U) ($generated@@484 T@U) ) (!  (=> (and (and (= (type $generated@@482) ($generated@@261 $generated@@154)) (= (type $generated@@483) $generated@@66)) (= (type $generated@@484) ($generated@@78 $generated@@79 $generated@@80))) (= ($generated@@76 $generated@@482 ($generated@@476 $generated@@483) $generated@@484) (forall (($generated@@485 Int) ) (!  (=> (and (<= 0 $generated@@485) (< $generated@@485 ($generated@@260 $generated@@482))) ($generated@@247 ($generated@@477 $generated@@482 $generated@@485) $generated@@483 $generated@@484))
 :pattern ( ($generated@@477 $generated@@482 $generated@@485))
))))
 :pattern ( ($generated@@76 $generated@@482 ($generated@@476 $generated@@483) $generated@@484))
)))
(assert (forall (($generated@@487 Int) ) (! (= ($generated@@486 ($generated@@77 $generated@@487)) $generated@@487)
 :pattern ( ($generated@@77 $generated@@487))
)))
(assert (forall (($generated@@489 T@U) ) (! (= (type ($generated@@488 $generated@@489)) $generated@@66)
 :pattern ( ($generated@@488 $generated@@489))
)))
(assert (forall (($generated@@490 T@U) ) (!  (=> (= (type $generated@@490) $generated@@66) (= ($generated@@488 ($generated@@230 $generated@@490)) $generated@@490))
 :pattern ( ($generated@@230 $generated@@490))
)))
(assert (forall (($generated@@491 T@U) ) (!  (=> (= (type $generated@@491) $generated@@66) (= ($generated@@74 ($generated@@230 $generated@@491)) $generated@@54))
 :pattern ( ($generated@@230 $generated@@491))
)))
(assert (forall (($generated@@493 T@U) ) (! (= (type ($generated@@492 $generated@@493)) $generated@@66)
 :pattern ( ($generated@@492 $generated@@493))
)))
(assert (forall (($generated@@494 T@U) ) (!  (=> (= (type $generated@@494) $generated@@66) (= ($generated@@492 ($generated@@235 $generated@@494)) $generated@@494))
 :pattern ( ($generated@@235 $generated@@494))
)))
(assert (forall (($generated@@495 T@U) ) (!  (=> (= (type $generated@@495) $generated@@66) (= ($generated@@74 ($generated@@235 $generated@@495)) $generated@@55))
 :pattern ( ($generated@@235 $generated@@495))
)))
(assert (forall (($generated@@497 T@U) ) (! (= (type ($generated@@496 $generated@@497)) $generated@@66)
 :pattern ( ($generated@@496 $generated@@497))
)))
(assert (forall (($generated@@498 T@U) ) (!  (=> (= (type $generated@@498) $generated@@66) (= ($generated@@496 ($generated@@159 $generated@@498)) $generated@@498))
 :pattern ( ($generated@@159 $generated@@498))
)))
(assert (forall (($generated@@499 T@U) ) (!  (=> (= (type $generated@@499) $generated@@66) (= ($generated@@74 ($generated@@159 $generated@@499)) $generated@@56))
 :pattern ( ($generated@@159 $generated@@499))
)))
(assert (forall (($generated@@501 T@U) ) (! (= (type ($generated@@500 $generated@@501)) $generated@@66)
 :pattern ( ($generated@@500 $generated@@501))
)))
(assert (forall (($generated@@502 T@U) ) (!  (=> (= (type $generated@@502) $generated@@66) (= ($generated@@500 ($generated@@476 $generated@@502)) $generated@@502))
 :pattern ( ($generated@@476 $generated@@502))
)))
(assert (forall (($generated@@503 T@U) ) (!  (=> (= (type $generated@@503) $generated@@66) (= ($generated@@74 ($generated@@476 $generated@@503)) $generated@@57))
 :pattern ( ($generated@@476 $generated@@503))
)))
(assert (forall (($generated@@504 T@U) ) (! (let (($generated@@505 (type $generated@@504)))
(= ($generated@@326 $generated@@505 ($generated@@268 $generated@@504)) $generated@@504))
 :pattern ( ($generated@@268 $generated@@504))
)))
(assert (forall (($generated@@506 T@U) ($generated@@507 T@U) ($generated@@508 T@U) ) (!  (=> (and (and (= (type $generated@@506) ($generated@@289 $generated@@154 $generated@@154)) (= (type $generated@@507) $generated@@66)) (= (type $generated@@508) $generated@@66)) (= ($generated@@141 $generated@@506 ($generated@@391 $generated@@507 $generated@@508)) (forall (($generated@@509 T@U) ) (!  (=> (and (= (type $generated@@509) $generated@@154) ($generated@@0 ($generated@@83 ($generated@@287 $generated@@506) $generated@@509))) (and ($generated@@221 ($generated@@83 ($generated@@366 $generated@@506) $generated@@509) $generated@@508) ($generated@@221 $generated@@509 $generated@@507)))
 :pattern ( ($generated@@83 ($generated@@366 $generated@@506) $generated@@509))
 :pattern ( ($generated@@83 ($generated@@287 $generated@@506) $generated@@509))
))))
 :pattern ( ($generated@@141 $generated@@506 ($generated@@391 $generated@@507 $generated@@508)))
)))
(assert (forall (($generated@@510 T@U) ($generated@@511 T@U) ($generated@@512 T@U) ) (!  (=> (and (and (= (type $generated@@510) ($generated@@307 $generated@@154 $generated@@154)) (= (type $generated@@511) $generated@@66)) (= (type $generated@@512) $generated@@66)) (= ($generated@@141 $generated@@510 ($generated@@399 $generated@@511 $generated@@512)) (forall (($generated@@513 T@U) ) (!  (=> (and (= (type $generated@@513) $generated@@154) ($generated@@0 ($generated@@83 ($generated@@305 $generated@@510) $generated@@513))) (and ($generated@@221 ($generated@@83 ($generated@@374 $generated@@510) $generated@@513) $generated@@512) ($generated@@221 $generated@@513 $generated@@511)))
 :pattern ( ($generated@@83 ($generated@@374 $generated@@510) $generated@@513))
 :pattern ( ($generated@@83 ($generated@@305 $generated@@510) $generated@@513))
))))
 :pattern ( ($generated@@141 $generated@@510 ($generated@@399 $generated@@511 $generated@@512)))
)))
(assert (forall (($generated@@516 T@U) ($generated@@517 T@U) ) (!  (=> (and (= (type $generated@@516) $generated@@154) (= (type $generated@@517) $generated@@154)) (< ($generated@@514 $generated@@516) ($generated@@515 ($generated@@220 $generated@@516 $generated@@517))))
 :pattern ( ($generated@@220 $generated@@516 $generated@@517))
)))
(assert (forall (($generated@@518 T@U) ($generated@@519 T@U) ) (!  (=> (and (= (type $generated@@518) $generated@@154) (= (type $generated@@519) $generated@@154)) (< ($generated@@514 $generated@@519) ($generated@@515 ($generated@@220 $generated@@518 $generated@@519))))
 :pattern ( ($generated@@220 $generated@@518 $generated@@519))
)))
(assert (forall (($generated@@520 T@U) ($generated@@521 T@U) ($generated@@522 T@U) ) (!  (=> (and (and (and (= (type $generated@@520) $generated@@154) (= (type $generated@@521) $generated@@66)) (= (type $generated@@522) $generated@@66)) ($generated@@221 $generated@@520 ($generated@@391 $generated@@521 $generated@@522))) (and (= ($generated@@268 ($generated@@326 ($generated@@289 $generated@@154 $generated@@154) $generated@@520)) $generated@@520) ($generated@@141 ($generated@@326 ($generated@@289 $generated@@154 $generated@@154) $generated@@520) ($generated@@391 $generated@@521 $generated@@522))))
 :pattern ( ($generated@@221 $generated@@520 ($generated@@391 $generated@@521 $generated@@522)))
)))
(assert (forall (($generated@@523 T@U) ($generated@@524 T@U) ($generated@@525 T@U) ) (!  (=> (and (and (and (= (type $generated@@523) $generated@@154) (= (type $generated@@524) $generated@@66)) (= (type $generated@@525) $generated@@66)) ($generated@@221 $generated@@523 ($generated@@399 $generated@@524 $generated@@525))) (and (= ($generated@@268 ($generated@@326 ($generated@@307 $generated@@154 $generated@@154) $generated@@523)) $generated@@523) ($generated@@141 ($generated@@326 ($generated@@307 $generated@@154 $generated@@154) $generated@@523) ($generated@@399 $generated@@524 $generated@@525))))
 :pattern ( ($generated@@221 $generated@@523 ($generated@@399 $generated@@524 $generated@@525)))
)))
(assert (forall (($generated@@526 T@U) ($generated@@527 T@U) ($generated@@528 T@U) ) (!  (=> (and (and (and (= (type $generated@@526) $generated@@66) (= (type $generated@@527) $generated@@66)) (= (type $generated@@528) $generated@@154)) ($generated@@221 $generated@@528 ($generated@@144 $generated@@526 $generated@@527))) (and (= ($generated@@268 ($generated@@326 $generated@@145 $generated@@528)) $generated@@528) ($generated@@141 ($generated@@326 $generated@@145 $generated@@528) ($generated@@144 $generated@@526 $generated@@527))))
 :pattern ( ($generated@@221 $generated@@528 ($generated@@144 $generated@@526 $generated@@527)))
)))
(assert (forall (($generated@@529 T@U) ) (! (let (($generated@@530 (type $generated@@529)))
 (not ($generated@@0 ($generated@@83 ($generated@@410 $generated@@530) $generated@@529))))
 :pattern ( (let (($generated@@530 (type $generated@@529)))
($generated@@83 ($generated@@410 $generated@@530) $generated@@529)))
)))
(assert (forall (($generated@@532 T@U) ) (! (= (type ($generated@@531 $generated@@532)) $generated@@71)
 :pattern ( ($generated@@531 $generated@@532))
)))
(assert (forall (($generated@@533 T@U) ($generated@@534 T@U) ) (!  (=> (and (= (type $generated@@533) $generated@@66) (= (type $generated@@534) $generated@@66)) (and (= ($generated@@74 ($generated@@144 $generated@@533 $generated@@534)) $generated@@63) (= ($generated@@531 ($generated@@144 $generated@@533 $generated@@534)) $generated@@65)))
 :pattern ( ($generated@@144 $generated@@533 $generated@@534))
)))
(assert (forall (($generated@@535 T@U) ) (!  (=> (= (type $generated@@535) $generated@@145) (= ($generated@@514 ($generated@@268 $generated@@535)) ($generated@@515 $generated@@535)))
 :pattern ( ($generated@@514 ($generated@@268 $generated@@535)))
)))
(assert (forall (($generated@@536 T@U) ) (!  (=> (and (= (type $generated@@536) $generated@@154) ($generated@@221 $generated@@536 ($generated@@77 0))) (and (= ($generated@@268 ($generated@@326 $generated@@2 $generated@@536)) $generated@@536) ($generated@@141 ($generated@@326 ($generated@@78 $generated@@154 $generated@@4) $generated@@536) ($generated@@77 0))))
 :pattern ( ($generated@@221 $generated@@536 ($generated@@77 0)))
)))
(assert (forall (($generated@@537 T@U) ($generated@@538 T@U) ) (!  (=> (and (and (= (type $generated@@537) $generated@@154) (= (type $generated@@538) $generated@@66)) ($generated@@221 $generated@@537 ($generated@@230 $generated@@538))) (and (= ($generated@@268 ($generated@@326 ($generated@@78 $generated@@154 $generated@@4) $generated@@537)) $generated@@537) ($generated@@141 ($generated@@326 ($generated@@78 $generated@@154 $generated@@4) $generated@@537) ($generated@@230 $generated@@538))))
 :pattern ( ($generated@@221 $generated@@537 ($generated@@230 $generated@@538)))
)))
(assert (forall (($generated@@539 T@U) ($generated@@540 T@U) ) (!  (=> (and (and (= (type $generated@@539) $generated@@154) (= (type $generated@@540) $generated@@66)) ($generated@@221 $generated@@539 ($generated@@235 $generated@@540))) (and (= ($generated@@268 ($generated@@326 ($generated@@78 $generated@@154 $generated@@4) $generated@@539)) $generated@@539) ($generated@@141 ($generated@@326 ($generated@@78 $generated@@154 $generated@@4) $generated@@539) ($generated@@235 $generated@@540))))
 :pattern ( ($generated@@221 $generated@@539 ($generated@@235 $generated@@540)))
)))
(assert (forall (($generated@@541 T@U) ($generated@@542 T@U) ) (!  (=> (and (and (= (type $generated@@541) $generated@@154) (= (type $generated@@542) $generated@@66)) ($generated@@221 $generated@@541 ($generated@@159 $generated@@542))) (and (= ($generated@@268 ($generated@@326 ($generated@@78 $generated@@154 $generated@@2) $generated@@541)) $generated@@541) ($generated@@141 ($generated@@326 ($generated@@78 $generated@@154 $generated@@2) $generated@@541) ($generated@@159 $generated@@542))))
 :pattern ( ($generated@@221 $generated@@541 ($generated@@159 $generated@@542)))
)))
(assert (forall (($generated@@543 T@U) ($generated@@544 T@U) ) (!  (=> (and (and (= (type $generated@@543) $generated@@154) (= (type $generated@@544) $generated@@66)) ($generated@@221 $generated@@543 ($generated@@476 $generated@@544))) (and (= ($generated@@268 ($generated@@326 ($generated@@261 $generated@@154) $generated@@543)) $generated@@543) ($generated@@141 ($generated@@326 ($generated@@261 $generated@@154) $generated@@543) ($generated@@476 $generated@@544))))
 :pattern ( ($generated@@221 $generated@@543 ($generated@@476 $generated@@544)))
)))
(assert (= ($generated@@74 $generated@@138) $generated@@61))
(assert (= ($generated@@531 $generated@@138) $generated@@64))
(assert (forall (($generated@@545 T@U) ($generated@@546 T@U) ($generated@@547 T@U) ) (!  (=> (and (and (= (type $generated@@545) ($generated@@78 $generated@@154 $generated@@2)) (= (type $generated@@546) $generated@@66)) (= (type $generated@@547) ($generated@@78 $generated@@79 $generated@@80))) (= ($generated@@76 $generated@@545 ($generated@@159 $generated@@546) $generated@@547) (forall (($generated@@548 T@U) ) (!  (=> (and (= (type $generated@@548) $generated@@154) (< 0 ($generated ($generated@@83 $generated@@545 $generated@@548)))) ($generated@@247 $generated@@548 $generated@@546 $generated@@547))
 :pattern ( ($generated@@83 $generated@@545 $generated@@548))
))))
 :pattern ( ($generated@@76 $generated@@545 ($generated@@159 $generated@@546) $generated@@547))
)))
(assert (forall (($generated@@549 T@U) ($generated@@550 T@U) ($generated@@551 T@U) ) (!  (=> (and (and (and (= (type $generated@@549) $generated@@145) (= (type $generated@@550) $generated@@66)) (= (type $generated@@551) ($generated@@78 $generated@@79 $generated@@80))) (and ($generated@@246 $generated@@551) (and ($generated@@143 $generated@@549) (exists (($generated@@552 T@U) ) (!  (and (= (type $generated@@552) $generated@@66) ($generated@@76 $generated@@549 ($generated@@144 $generated@@550 $generated@@552) $generated@@551))
 :pattern ( ($generated@@76 $generated@@549 ($generated@@144 $generated@@550 $generated@@552) $generated@@551))
))))) ($generated@@247 ($generated@@152 $generated@@549) $generated@@550 $generated@@551))
 :pattern ( ($generated@@247 ($generated@@152 $generated@@549) $generated@@550 $generated@@551))
)))
(assert (forall (($generated@@553 T@U) ($generated@@554 T@U) ($generated@@555 T@U) ) (!  (=> (and (and (and (= (type $generated@@553) $generated@@145) (= (type $generated@@554) $generated@@66)) (= (type $generated@@555) ($generated@@78 $generated@@79 $generated@@80))) (and ($generated@@246 $generated@@555) (and ($generated@@143 $generated@@553) (exists (($generated@@556 T@U) ) (!  (and (= (type $generated@@556) $generated@@66) ($generated@@76 $generated@@553 ($generated@@144 $generated@@556 $generated@@554) $generated@@555))
 :pattern ( ($generated@@76 $generated@@553 ($generated@@144 $generated@@556 $generated@@554) $generated@@555))
))))) ($generated@@247 ($generated@@153 $generated@@553) $generated@@554 $generated@@555))
 :pattern ( ($generated@@247 ($generated@@153 $generated@@553) $generated@@554 $generated@@555))
)))
(assert (forall (($generated@@557 T@U) ($generated@@558 T@U) ) (!  (=> (and (= (type $generated@@557) $generated@@154) (= (type $generated@@558) $generated@@154)) (= ($generated@@220 ($generated@@242 $generated@@557) ($generated@@242 $generated@@558)) ($generated@@242 ($generated@@220 $generated@@557 $generated@@558))))
 :pattern ( ($generated@@220 ($generated@@242 $generated@@557) ($generated@@242 $generated@@558)))
)))
(assert (forall (($generated@@559 Int) ) (! (= ($generated@@268 ($generated@@8 ($generated@@240 $generated@@559))) ($generated@@242 ($generated@@268 ($generated@@8 $generated@@559))))
 :pattern ( ($generated@@268 ($generated@@8 ($generated@@240 $generated@@559))))
)))
(assert (forall (($generated@@560 T@U) ) (! (= ($generated@@268 ($generated@@242 $generated@@560)) ($generated@@242 ($generated@@268 $generated@@560)))
 :pattern ( ($generated@@268 ($generated@@242 $generated@@560)))
)))
(assert (forall (($generated@@561 T@U) ) (! (let (($generated@@562 ($generated@@262 (type $generated@@561))))
 (=> (and (= (type $generated@@561) ($generated@@261 $generated@@562)) (= ($generated@@260 $generated@@561) 0)) (= $generated@@561 ($generated@@259 $generated@@562))))
 :pattern ( ($generated@@260 $generated@@561))
)))
(assert (forall (($generated@@563 T@U) ($generated@@564 T@U) ($generated@@565 T@U) ) (! (let (($generated@@566 (type $generated@@564)))
 (=> (and (and (= (type $generated@@563) ($generated@@78 $generated@@566 $generated@@2)) (= (type $generated@@565) $generated@@2)) (<= 0 ($generated $generated@@565))) (= ($generated@@281 ($generated@@84 $generated@@563 $generated@@564 $generated@@565)) (+ (- ($generated@@281 $generated@@563) ($generated ($generated@@83 $generated@@563 $generated@@564))) ($generated $generated@@565)))))
 :pattern ( ($generated@@281 ($generated@@84 $generated@@563 $generated@@564 $generated@@565)))
)))
(assert (forall (($generated@@567 T@U) ($generated@@568 T@U) ) (!  (=> (and (= (type $generated@@567) ($generated@@78 $generated@@79 $generated@@80)) (= (type $generated@@568) $generated@@2)) ($generated@@76 $generated@@568 $generated@@46 $generated@@567))
 :pattern ( ($generated@@76 $generated@@568 $generated@@46 $generated@@567))
)))
(assert (forall (($generated@@569 T@U) ($generated@@570 T@U) ) (!  (=> (and (= (type $generated@@569) ($generated@@78 $generated@@79 $generated@@80)) (= (type $generated@@570) $generated@@3)) ($generated@@76 $generated@@570 $generated@@47 $generated@@569))
 :pattern ( ($generated@@76 $generated@@570 $generated@@47 $generated@@569))
)))
(assert (forall (($generated@@571 T@U) ($generated@@572 T@U) ) (!  (=> (and (= (type $generated@@571) ($generated@@78 $generated@@79 $generated@@80)) (= (type $generated@@572) $generated@@4)) ($generated@@76 $generated@@572 $generated@@44 $generated@@571))
 :pattern ( ($generated@@76 $generated@@572 $generated@@44 $generated@@571))
)))
(assert (forall (($generated@@573 T@U) ($generated@@574 T@U) ) (!  (=> (and (= (type $generated@@573) ($generated@@78 $generated@@79 $generated@@80)) (= (type $generated@@574) $generated@@434)) ($generated@@76 $generated@@574 $generated@@45 $generated@@573))
 :pattern ( ($generated@@76 $generated@@574 $generated@@45 $generated@@573))
)))
(assert (forall (($generated@@575 T@U) ($generated@@576 T@U) ) (!  (=> (and (= (type $generated@@575) ($generated@@78 $generated@@79 $generated@@80)) (= (type $generated@@576) $generated@@154)) ($generated@@76 $generated@@576 $generated@@48 $generated@@575))
 :pattern ( ($generated@@76 $generated@@576 $generated@@48 $generated@@575))
)))
(assert (forall (($generated@@577 T@U) ($generated@@578 T@U) ) (!  (=> (and (= (type $generated@@577) ($generated@@261 $generated@@154)) (= (type $generated@@578) $generated@@66)) (= ($generated@@141 $generated@@577 ($generated@@476 $generated@@578)) (forall (($generated@@579 Int) ) (!  (=> (and (<= 0 $generated@@579) (< $generated@@579 ($generated@@260 $generated@@577))) ($generated@@221 ($generated@@477 $generated@@577 $generated@@579) $generated@@578))
 :pattern ( ($generated@@477 $generated@@577 $generated@@579))
))))
 :pattern ( ($generated@@141 $generated@@577 ($generated@@476 $generated@@578)))
)))
(assert (forall (($generated@@581 T@U) ($generated@@582 Int) ) (!  (=> (= (type $generated@@581) ($generated@@261 $generated@@154)) (=> (and (<= 0 $generated@@582) (< $generated@@582 ($generated@@260 $generated@@581))) (< ($generated@@515 ($generated@@326 $generated@@145 ($generated@@477 $generated@@581 $generated@@582))) ($generated@@580 $generated@@581))))
 :pattern ( ($generated@@515 ($generated@@326 $generated@@145 ($generated@@477 $generated@@581 $generated@@582))))
)))
(assert (forall (($generated@@583 T@U) ($generated@@584 T@U) ($generated@@585 T@U) ) (!  (=> (and (and (and (= (type $generated@@583) ($generated@@289 $generated@@154 $generated@@154)) (= (type $generated@@584) $generated@@66)) (= (type $generated@@585) $generated@@66)) ($generated@@141 $generated@@583 ($generated@@391 $generated@@584 $generated@@585))) (and (and ($generated@@141 ($generated@@287 $generated@@583) ($generated@@230 $generated@@584)) ($generated@@141 ($generated@@334 $generated@@583) ($generated@@230 $generated@@585))) ($generated@@141 ($generated@@365 $generated@@583) ($generated@@230 ($generated@@144 $generated@@584 $generated@@585)))))
 :pattern ( ($generated@@141 $generated@@583 ($generated@@391 $generated@@584 $generated@@585)))
)))
(assert (forall (($generated@@586 T@U) ($generated@@587 T@U) ($generated@@588 T@U) ) (!  (=> (and (and (and (= (type $generated@@586) ($generated@@307 $generated@@154 $generated@@154)) (= (type $generated@@587) $generated@@66)) (= (type $generated@@588) $generated@@66)) ($generated@@141 $generated@@586 ($generated@@399 $generated@@587 $generated@@588))) (and (and ($generated@@141 ($generated@@305 $generated@@586) ($generated@@235 $generated@@587)) ($generated@@141 ($generated@@345 $generated@@586) ($generated@@235 $generated@@588))) ($generated@@141 ($generated@@373 $generated@@586) ($generated@@235 ($generated@@144 $generated@@587 $generated@@588)))))
 :pattern ( ($generated@@141 $generated@@586 ($generated@@399 $generated@@587 $generated@@588)))
)))
(assert (forall (($generated@@589 T@U) ) (!  (=> (= (type $generated@@589) $generated@@2) ($generated@@141 $generated@@589 $generated@@46))
 :pattern ( ($generated@@141 $generated@@589 $generated@@46))
)))
(assert (forall (($generated@@590 T@U) ) (!  (=> (= (type $generated@@590) $generated@@3) ($generated@@141 $generated@@590 $generated@@47))
 :pattern ( ($generated@@141 $generated@@590 $generated@@47))
)))
(assert (forall (($generated@@591 T@U) ) (!  (=> (= (type $generated@@591) $generated@@4) ($generated@@141 $generated@@591 $generated@@44))
 :pattern ( ($generated@@141 $generated@@591 $generated@@44))
)))
(assert (forall (($generated@@592 T@U) ) (!  (=> (= (type $generated@@592) $generated@@434) ($generated@@141 $generated@@592 $generated@@45))
 :pattern ( ($generated@@141 $generated@@592 $generated@@45))
)))
(assert (forall (($generated@@593 T@U) ) (!  (=> (= (type $generated@@593) $generated@@154) ($generated@@141 $generated@@593 $generated@@48))
 :pattern ( ($generated@@141 $generated@@593 $generated@@48))
)))
(push 1)
(declare-fun ControlFlow (Int Int) Int)
(declare-fun $generated@@594 () Int)
(declare-fun $generated@@595 () Int)
(declare-fun $generated@@596 () Int)
(declare-fun $generated@@597 () Int)
(declare-fun $generated@@598 () Int)
(declare-fun $generated@@599 () Int)
(declare-fun $generated@@600 () Bool)
(declare-fun $generated@@601 () Int)
(declare-fun $generated@@602 () Bool)
(declare-fun $generated@@603 () Int)
(declare-fun $generated@@604 () Int)
(declare-fun $generated@@605 () Int)
(declare-fun $generated@@606 () Int)
(declare-fun $generated@@607 () Int)
(declare-fun $generated@@608 () Int)
(declare-fun $generated@@609 () T@U)
(declare-fun $generated@@610 () T@U)
(declare-fun $generated@@611 () T@U)
(declare-fun $generated@@612 () Int)
(declare-fun $generated@@613 () Int)
(declare-fun $generated@@614 () Int)
(declare-fun $generated@@615 (T@U) Bool)
(declare-fun $generated@@616 () Int)
(declare-fun $generated@@617 () Int)
(assert  (and (and (= (type $generated@@609) ($generated@@78 $generated@@79 $generated@@80)) (= (type $generated@@610) $generated@@79)) (= (type $generated@@611) ($generated@@166 $generated@@79 $generated@@4))))
(set-option :timeout 0)
(set-option :rlimit 0)
(assert (not
 (=> (= (ControlFlow 0 0) 39) (let (($generated@@618  (=> (= (ControlFlow 0 30) (- 0 29)) (= $generated@@594 ($generated@@240 25)))))
(let (($generated@@619  (=> (= $generated@@595 $generated@@596) (=> (and (= $generated@@594 $generated@@597) (= (ControlFlow 0 31) 30)) $generated@@618))))
(let (($generated@@620 true))
(let (($generated@@621  (=> (and (or (and (<= $generated@@598 ($generated@@240 7)) (<= $generated@@598 $generated@@599)) (= $generated@@598 ($generated@@240 7))) (= (ControlFlow 0 18) 16)) $generated@@620)))
(let (($generated@@622  (=> (and (not (or (and (<= $generated@@598 ($generated@@240 7)) (<= $generated@@598 $generated@@599)) (= $generated@@598 ($generated@@240 7)))) (= (ControlFlow 0 17) 16)) $generated@@620)))
(let (($generated@@623  (=> (and (<= $generated@@598 ($generated@@240 7)) (<= $generated@@598 $generated@@599)) (and (=> (= (ControlFlow 0 20) 17) $generated@@622) (=> (= (ControlFlow 0 20) 18) $generated@@621)))))
(let (($generated@@624  (=> (not (and (<= $generated@@598 ($generated@@240 7)) (<= $generated@@598 $generated@@599))) (and (=> (= (ControlFlow 0 19) 17) $generated@@622) (=> (= (ControlFlow 0 19) 18) $generated@@621)))))
(let (($generated@@625  (=> (< ($generated@@240 7) $generated@@598) (and (=> (= (ControlFlow 0 22) 19) $generated@@624) (=> (= (ControlFlow 0 22) 20) $generated@@623)))))
(let (($generated@@626  (=> (<= $generated@@598 ($generated@@240 7)) (and (=> (= (ControlFlow 0 21) 19) $generated@@624) (=> (= (ControlFlow 0 21) 20) $generated@@623)))))
(let (($generated@@627  (=> (not $generated@@600) (and (=> (= (ControlFlow 0 23) 21) $generated@@626) (=> (= (ControlFlow 0 23) 22) $generated@@625)))))
(let (($generated@@628  (=> (and (and (= $generated@@601 (+ $generated@@595 1)) (= (ControlFlow 0 9) (- 0 8))) $generated@@602) (= $generated@@603 $generated@@601))))
(let (($generated@@629  (=> (= $generated@@598 $generated@@599) (=> (and (= $generated@@604 ($generated@@240 8)) (= (ControlFlow 0 12) 9)) $generated@@628))))
(let (($generated@@630  (=> (and (= $generated@@598 ($generated@@240 7)) (= (ControlFlow 0 11) 9)) $generated@@628)))
(let (($generated@@631  (=> (and (<= $generated@@605 $generated@@598) (= (ControlFlow 0 10) 9)) $generated@@628)))
(let (($generated@@632  (=> (and (not (= $generated@@598 $generated@@599)) (= $generated@@606 (+ $generated@@598 1))) (and (=> (= (ControlFlow 0 5) (- 0 7)) (or (<= 0 $generated@@607) (= (- $generated@@605 $generated@@606) $generated@@607))) (=> (or (<= 0 $generated@@607) (= (- $generated@@605 $generated@@606) $generated@@607)) (and (=> (= (ControlFlow 0 5) (- 0 6)) (< (- $generated@@605 $generated@@606) $generated@@607)) (=> (< (- $generated@@605 $generated@@606) $generated@@607) (=> (= (ControlFlow 0 5) (- 0 4)) (=> $generated@@600 (or (or (and (<= $generated@@606 ($generated@@240 7)) (<= $generated@@606 $generated@@599)) (= $generated@@606 ($generated@@240 7))) (< $generated@@599 7)))))))))))
(let (($generated@@633  (=> (not (= $generated@@598 ($generated@@240 7))) (and (=> (= (ControlFlow 0 13) 12) $generated@@629) (=> (= (ControlFlow 0 13) 5) $generated@@632)))))
(let (($generated@@634  (=> (and (< $generated@@598 $generated@@605) (= $generated@@607 (- $generated@@605 $generated@@598))) (and (=> (= (ControlFlow 0 14) 11) $generated@@630) (=> (= (ControlFlow 0 14) 13) $generated@@633)))))
(let (($generated@@635  (=> $generated@@600 (and (=> (= (ControlFlow 0 15) 10) $generated@@631) (=> (= (ControlFlow 0 15) 14) $generated@@634)))))
(let (($generated@@636  (and (=> (= (ControlFlow 0 24) 23) $generated@@627) (=> (= (ControlFlow 0 24) 15) $generated@@635))))
(let (($generated@@637 true))
(let (($generated@@638  (=> (and (and (and (and (and (and (and (and (and (<= 1 $generated@@603) (not false)) (<= 0 $generated@@595)) (= $generated@@608 0)) (= $generated@@596 25)) $generated@@602) (and (<= 0 $generated@@598) (< $generated@@598 8))) (=> $generated@@600 true)) (and (=> $generated@@600 (or (or (and (<= $generated@@598 ($generated@@240 7)) (<= $generated@@598 $generated@@599)) (= $generated@@598 ($generated@@240 7))) (< $generated@@599 7))) (forall (($generated@@639 T@U) ) (!  (=> (= (type $generated@@639) $generated@@79) (=> (and (not (= $generated@@639 $generated@@610)) ($generated@@0 ($generated@@85 ($generated@@83 $generated@@609 $generated@@639) $generated@@60))) (= ($generated@@83 $generated@@609 $generated@@639) ($generated@@83 $generated@@609 $generated@@639))))
 :pattern ( ($generated@@83 $generated@@609 $generated@@639))
)))) (and (and ($generated@@134 $generated@@609 $generated@@609) (forall (($generated@@640 T@U) ($generated@@641 T@U) ) (! (let (($generated@@642 ($generated@@69 (type $generated@@641))))
 (=> (and (and (= (type $generated@@640) $generated@@79) (= (type $generated@@641) ($generated@@68 $generated@@642))) (and (not (= $generated@@640 $generated@@610)) ($generated@@0 ($generated@@85 ($generated@@83 $generated@@609 $generated@@640) $generated@@60)))) (or (= ($generated@@85 ($generated@@83 $generated@@609 $generated@@640) $generated@@641) ($generated@@85 ($generated@@83 $generated@@609 $generated@@640) $generated@@641)) ($generated@@0 ($generated@@164 $generated@@611 $generated@@640 $generated@@641)))))
 :pattern ( ($generated@@85 ($generated@@83 $generated@@609 $generated@@640) $generated@@641))
))) (and (<= (- $generated@@605 $generated@@598) $generated@@612) (=> (= (- $generated@@605 $generated@@598) $generated@@612) true)))) (and (=> (= (ControlFlow 0 25) 3) $generated@@637) (=> (= (ControlFlow 0 25) 24) $generated@@636)))))
(let (($generated@@643  (=> (not (= $generated@@595 $generated@@596)) (and (=> (= (ControlFlow 0 26) (- 0 28)) ($generated@@141 ($generated@@8 (+ $generated@@597 1)) $generated@@138)) (=> ($generated@@141 ($generated@@8 (+ $generated@@597 1)) $generated@@138) (=> (= $generated@@603 (+ $generated@@597 1)) (=> (and (= $generated@@613 ($generated@@240 0)) (= $generated@@612 (- $generated@@605 $generated@@613))) (and (=> (= (ControlFlow 0 26) (- 0 27)) (=> $generated@@600 (or (or (and (<= $generated@@613 ($generated@@240 7)) (<= $generated@@613 $generated@@599)) (= $generated@@613 ($generated@@240 7))) (< $generated@@599 7)))) (=> (=> $generated@@600 (or (or (and (<= $generated@@613 ($generated@@240 7)) (<= $generated@@613 $generated@@599)) (= $generated@@613 ($generated@@240 7))) (< $generated@@599 7))) (=> (= (ControlFlow 0 26) 25) $generated@@638))))))))))
(let (($generated@@644  (=> $generated@@602 (and (=> (= (ControlFlow 0 32) 31) $generated@@619) (=> (= (ControlFlow 0 32) 26) $generated@@643)))))
(let (($generated@@645 true))
(let (($generated@@646  (and (=> (= (ControlFlow 0 33) 2) $generated@@645) (=> (= (ControlFlow 0 33) 32) $generated@@644))))
(let (($generated@@647 true))
(let (($generated@@648  (=> (<= ($generated@@240 0) $generated@@597) (=> (and (and (and (and (and (<= 0 $generated@@597) (not false)) (<= 0 $generated@@595)) (= $generated@@608 0)) (= $generated@@596 25)) (and (and (and (<= $generated@@608 $generated@@595) (<= $generated@@595 $generated@@596)) (=> $generated@@602 true)) (and (and (=> $generated@@602 (= $generated@@597 $generated@@595)) (forall (($generated@@649 T@U) ) (!  (=> (= (type $generated@@649) $generated@@79) (=> (and (not (= $generated@@649 $generated@@610)) ($generated@@0 ($generated@@85 ($generated@@83 $generated@@609 $generated@@649) $generated@@60))) (= ($generated@@83 $generated@@609 $generated@@649) ($generated@@83 $generated@@609 $generated@@649))))
 :pattern ( ($generated@@83 $generated@@609 $generated@@649))
))) (and ($generated@@134 $generated@@609 $generated@@609) (forall (($generated@@650 T@U) ($generated@@651 T@U) ) (! (let (($generated@@652 ($generated@@69 (type $generated@@651))))
 (=> (and (and (= (type $generated@@650) $generated@@79) (= (type $generated@@651) ($generated@@68 $generated@@652))) (and (not (= $generated@@650 $generated@@610)) ($generated@@0 ($generated@@85 ($generated@@83 $generated@@609 $generated@@650) $generated@@60)))) (or (= ($generated@@85 ($generated@@83 $generated@@609 $generated@@650) $generated@@651) ($generated@@85 ($generated@@83 $generated@@609 $generated@@650) $generated@@651)) ($generated@@0 ($generated@@164 $generated@@611 $generated@@650 $generated@@651)))))
 :pattern ( ($generated@@85 ($generated@@83 $generated@@609 $generated@@650) $generated@@651))
)))))) (and (=> (= (ControlFlow 0 34) 1) $generated@@647) (=> (= (ControlFlow 0 34) 33) $generated@@646))))))
(let (($generated@@653  (=> (= $generated@@611 ($generated@@165 $generated@@610 $generated@@609 $generated@@60 false)) (and (=> (= (ControlFlow 0 35) (- 0 38)) ($generated@@141 ($generated@@8 ($generated@@240 0)) $generated@@138)) (=> ($generated@@141 ($generated@@8 ($generated@@240 0)) $generated@@138) (=> (= $generated@@614 ($generated@@240 0)) (=> (and (= $generated@@608 ($generated@@240 0)) (= $generated@@596 ($generated@@240 25))) (and (=> (= (ControlFlow 0 35) (- 0 37)) (<= $generated@@608 $generated@@596)) (=> (<= $generated@@608 $generated@@596) (and (=> (= (ControlFlow 0 35) (- 0 36)) (=> $generated@@602 (= $generated@@614 $generated@@608))) (=> (=> $generated@@602 (= $generated@@614 $generated@@608)) (=> (= (ControlFlow 0 35) 34) $generated@@648))))))))))))
(let (($generated@@654  (=> (and (and (and ($generated@@246 $generated@@609) ($generated@@615 $generated@@609)) (<= ($generated@@240 0) $generated@@605)) (and (and (<= ($generated@@240 0) $generated@@599) (<= ($generated@@240 0) $generated@@616)) (and (= 1 $generated@@617) (= (ControlFlow 0 39) 35)))) $generated@@653)))
$generated@@654))))))))))))))))))))))))))))))
))
(check-sat)
(pop 1)
; Valid
(get-info :rlimit)
(reset)
(set-option :rlimit 0)
; did a full reset
(reset)
(set-option :print-success false)
(set-info :smt-lib-version 2.6)
(set-option :auto_config false)
(set-option :type_check true)
(set-option :smt.case_split 3)
(set-option :smt.qi.eager_threshold 100)
(set-option :smt.delay_units true)
(set-option :smt.arith.solver 2)
(set-option :smt.mbqi false)
(set-option :model.compact false)
(set-option :model.v2 true)
(set-option :pp.bv_literals false)
; done setting options


(set-info :category "industrial")
(declare-sort |T@U| 0)
(declare-sort |T@T| 0)
(declare-fun real_pow (Real Real) Real)
(declare-fun UOrdering2 (|T@U| |T@U|) Bool)
(declare-fun UOrdering3 (|T@T| |T@U| |T@U|) Bool)
(declare-fun tickleBool (Bool) Bool)
(assert (and (tickleBool true) (tickleBool false)))
(declare-fun $generated (T@U) Int)
(declare-fun $generated@@0 (T@U) Bool)
(declare-fun $generated@@1 (T@T) Int)
(declare-fun $generated@@2 () T@T)
(declare-fun $generated@@3 () T@T)
(declare-fun $generated@@4 () T@T)
(declare-fun $generated@@5 () T@T)
(declare-fun $generated@@6 () T@T)
(declare-fun $generated@@7 () T@T)
(declare-fun $generated@@8 (Int) T@U)
(declare-fun type (T@U) T@T)
(declare-fun $generated@@9 (Real) T@U)
(declare-fun $generated@@10 (T@U) Real)
(declare-fun $generated@@11 (Bool) T@U)
(declare-fun $generated@@12 (RoundingMode) T@U)
(declare-fun $generated@@13 (T@U) RoundingMode)
(declare-fun $generated@@14 (String) T@U)
(declare-fun $generated@@15 (T@U) String)
(declare-fun $generated@@16 ((RegEx String)) T@U)
(declare-fun $generated@@17 (T@U) (RegEx String))
(declare-fun $generated@@44 () T@U)
(declare-fun $generated@@45 () T@U)
(declare-fun $generated@@46 () T@U)
(declare-fun $generated@@47 () T@U)
(declare-fun $generated@@48 () T@U)
(declare-fun $generated@@49 () T@U)
(declare-fun $generated@@50 () T@U)
(declare-fun $generated@@51 () T@U)
(declare-fun $generated@@52 () T@U)
(declare-fun $generated@@53 () T@U)
(declare-fun $generated@@54 () T@U)
(declare-fun $generated@@55 () T@U)
(declare-fun $generated@@56 () T@U)
(declare-fun $generated@@57 () T@U)
(declare-fun $generated@@58 () T@U)
(declare-fun $generated@@59 () T@U)
(declare-fun $generated@@60 () T@U)
(declare-fun $generated@@61 () T@U)
(declare-fun $generated@@62 () T@U)
(declare-fun $generated@@63 () T@U)
(declare-fun $generated@@64 () T@U)
(declare-fun $generated@@65 () T@U)
(declare-fun $generated@@66 () T@T)
(declare-fun $generated@@67 () T@T)
(declare-fun $generated@@68 (T@T) T@T)
(declare-fun $generated@@69 (T@T) T@T)
(declare-fun $generated@@70 () T@T)
(declare-fun $generated@@71 () T@T)
(declare-fun $generated@@74 (T@U) T@U)
(declare-fun $generated@@76 (T@U T@U T@U) Bool)
(declare-fun $generated@@77 (Int) T@U)
(declare-fun $generated@@78 (T@T T@T) T@T)
(declare-fun $generated@@79 () T@T)
(declare-fun $generated@@80 () T@T)
(declare-fun $generated@@81 (T@T) T@T)
(declare-fun $generated@@82 (T@T) T@T)
(declare-fun $generated@@83 (T@U T@U) T@U)
(declare-fun $generated@@84 (T@U T@U T@U) T@U)
(declare-fun $generated@@85 (T@U T@U) T@U)
(declare-fun $generated@@86 (T@U T@U T@U) T@U)
(declare-fun $generated@@134 (T@U T@U) Bool)
(declare-fun $generated@@138 () T@U)
(declare-fun $generated@@141 (T@U T@U) Bool)
(declare-fun $generated@@143 (T@U) Bool)
(declare-fun $generated@@144 (T@U T@U) T@U)
(declare-fun $generated@@145 () T@T)
(declare-fun $generated@@151 (T@U T@U) Bool)
(declare-fun $generated@@152 (T@U) T@U)
(declare-fun $generated@@153 (T@U) T@U)
(declare-fun $generated@@154 () T@T)
(declare-fun $generated@@159 (T@U) T@U)
(declare-fun $generated@@160 (T@U) Bool)
(declare-fun $generated@@164 (T@U T@U T@U) T@U)
(declare-fun $generated@@165 (T@U T@U T@U Bool) T@U)
(declare-fun $generated@@166 (T@T T@T) T@T)
(declare-fun $generated@@167 (T@T) T@T)
(declare-fun $generated@@168 (T@T) T@T)
(declare-fun $generated@@169 (T@U T@U T@U T@U) T@U)
(declare-fun $generated@@220 (T@U T@U) T@U)
(declare-fun $generated@@221 (T@U T@U) Bool)
(declare-fun $generated@@230 (T@U) T@U)
(declare-fun $generated@@235 (T@U) T@U)
(declare-fun $generated@@240 (Int) Int)
(declare-fun $generated@@242 (T@U) T@U)
(declare-fun $generated@@246 (T@U) Bool)
(declare-fun $generated@@247 (T@U T@U T@U) Bool)
(declare-fun $generated@@253 (T@U) T@U)
(declare-fun $generated@@259 (T@T) T@U)
(declare-fun $generated@@260 (T@U) Int)
(declare-fun $generated@@261 (T@T) T@T)
(declare-fun $generated@@262 (T@T) T@T)
(declare-fun $generated@@268 (T@U) T@U)
(declare-fun $generated@@281 (T@U) Int)
(declare-fun $generated@@282 (T@T) T@U)
(declare-fun $generated@@287 (T@U) T@U)
(declare-fun $generated@@288 (T@T T@T) T@U)
(declare-fun $generated@@289 (T@T T@T) T@T)
(declare-fun $generated@@290 (T@T) T@T)
(declare-fun $generated@@291 (T@T) T@T)
(declare-fun $generated@@305 (T@U) T@U)
(declare-fun $generated@@306 (T@T T@T) T@U)
(declare-fun $generated@@307 (T@T T@T) T@T)
(declare-fun $generated@@308 (T@T) T@T)
(declare-fun $generated@@309 (T@T) T@T)
(declare-fun $generated@@326 (T@T T@U) T@U)
(declare-fun $generated@@334 (T@U) T@U)
(declare-fun $generated@@345 (T@U) T@U)
(declare-fun $generated@@365 (T@U) T@U)
(declare-fun $generated@@366 (T@U) T@U)
(declare-fun $generated@@373 (T@U) T@U)
(declare-fun $generated@@374 (T@U) T@U)
(declare-fun $generated@@391 (T@U T@U) T@U)
(declare-fun $generated@@399 (T@U T@U) T@U)
(declare-fun $generated@@410 (T@T) T@U)
(declare-fun $generated@@434 () T@T)
(declare-fun $generated@@442 (T@U) T@U)
(declare-fun $generated@@446 (T@U) T@U)
(declare-fun $generated@@452 (T@U) T@U)
(declare-fun $generated@@456 (T@U) T@U)
(declare-fun $generated@@464 (T@U) T@U)
(declare-fun $generated@@468 (T@U) T@U)
(declare-fun $generated@@476 (T@U) T@U)
(declare-fun $generated@@477 (T@U Int) T@U)
(declare-fun $generated@@486 (T@U) Int)
(declare-fun $generated@@488 (T@U) T@U)
(declare-fun $generated@@492 (T@U) T@U)
(declare-fun $generated@@496 (T@U) T@U)
(declare-fun $generated@@500 (T@U) T@U)
(declare-fun $generated@@514 (T@U) Int)
(declare-fun $generated@@515 (T@U) Int)
(declare-fun $generated@@531 (T@U) T@U)
(declare-fun $generated@@580 (T@U) Int)
(assert  (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (= ($generated@@1 $generated@@2) 0) (= ($generated@@1 $generated@@3) 1)) (= ($generated@@1 $generated@@4) 2)) (= ($generated@@1 $generated@@5) 3)) (= ($generated@@1 $generated@@6) 4)) (= ($generated@@1 $generated@@7) 5)) (forall (($generated@@18 Int) ) (! (= ($generated ($generated@@8 $generated@@18)) $generated@@18)
 :pattern ( ($generated@@8 $generated@@18))
))) (forall (($generated@@19 T@U) ) (!  (=> (= (type $generated@@19) $generated@@2) (= ($generated@@8 ($generated $generated@@19)) $generated@@19))
 :pattern ( ($generated $generated@@19))
))) (forall (($generated@@20 Int) ) (! (= (type ($generated@@8 $generated@@20)) $generated@@2)
 :pattern ( ($generated@@8 $generated@@20))
))) (forall (($generated@@21 Real) ) (! (= ($generated@@10 ($generated@@9 $generated@@21)) $generated@@21)
 :pattern ( ($generated@@9 $generated@@21))
))) (forall (($generated@@22 T@U) ) (!  (=> (= (type $generated@@22) $generated@@3) (= ($generated@@9 ($generated@@10 $generated@@22)) $generated@@22))
 :pattern ( ($generated@@10 $generated@@22))
))) (forall (($generated@@23 Real) ) (! (= (type ($generated@@9 $generated@@23)) $generated@@3)
 :pattern ( ($generated@@9 $generated@@23))
))) (forall (($generated@@24 Bool) ) (! (= ($generated@@0 ($generated@@11 $generated@@24)) $generated@@24)
 :pattern ( ($generated@@11 $generated@@24))
))) (forall (($generated@@25 T@U) ) (!  (=> (= (type $generated@@25) $generated@@4) (= ($generated@@11 ($generated@@0 $generated@@25)) $generated@@25))
 :pattern ( ($generated@@0 $generated@@25))
))) (forall (($generated@@26 Bool) ) (! (= (type ($generated@@11 $generated@@26)) $generated@@4)
 :pattern ( ($generated@@11 $generated@@26))
))) (forall (($generated@@27 RoundingMode) ) (! (= ($generated@@13 ($generated@@12 $generated@@27)) $generated@@27)
 :pattern ( ($generated@@12 $generated@@27))
))) (forall (($generated@@28 T@U) ) (!  (=> (= (type $generated@@28) $generated@@5) (= ($generated@@12 ($generated@@13 $generated@@28)) $generated@@28))
 :pattern ( ($generated@@13 $generated@@28))
))) (forall (($generated@@29 RoundingMode) ) (! (= (type ($generated@@12 $generated@@29)) $generated@@5)
 :pattern ( ($generated@@12 $generated@@29))
))) (forall (($generated@@30 String) ) (! (= ($generated@@15 ($generated@@14 $generated@@30)) $generated@@30)
 :pattern ( ($generated@@14 $generated@@30))
))) (forall (($generated@@31 T@U) ) (!  (=> (= (type $generated@@31) $generated@@6) (= ($generated@@14 ($generated@@15 $generated@@31)) $generated@@31))
 :pattern ( ($generated@@15 $generated@@31))
))) (forall (($generated@@32 String) ) (! (= (type ($generated@@14 $generated@@32)) $generated@@6)
 :pattern ( ($generated@@14 $generated@@32))
))) (forall (($generated@@33 (RegEx String)) ) (! (= ($generated@@17 ($generated@@16 $generated@@33)) $generated@@33)
 :pattern ( ($generated@@16 $generated@@33))
))) (forall (($generated@@34 T@U) ) (!  (=> (= (type $generated@@34) $generated@@7) (= ($generated@@16 ($generated@@17 $generated@@34)) $generated@@34))
 :pattern ( ($generated@@17 $generated@@34))
))) (forall (($generated@@35 (RegEx String)) ) (! (= (type ($generated@@16 $generated@@35)) $generated@@7)
 :pattern ( ($generated@@16 $generated@@35))
))))
(assert (forall (($generated@@36 T@U) ) (! (UOrdering2 $generated@@36 $generated@@36)
 :no-pattern ($generated $generated@@36)
 :no-pattern ($generated@@0 $generated@@36)
)))
(assert (forall (($generated@@37 T@U) ($generated@@38 T@U) ($generated@@39 T@U) ) (! (let (($generated@@40 (type $generated@@37)))
 (=> (and (and (= (type $generated@@38) $generated@@40) (= (type $generated@@39) $generated@@40)) (and (UOrdering2 $generated@@37 $generated@@38) (UOrdering2 $generated@@38 $generated@@39))) (UOrdering2 $generated@@37 $generated@@39)))
 :pattern ( (UOrdering2 $generated@@37 $generated@@38) (UOrdering2 $generated@@38 $generated@@39))
)))
(assert (forall (($generated@@41 T@U) ($generated@@42 T@U) ) (! (let (($generated@@43 (type $generated@@41)))
 (=> (= (type $generated@@42) $generated@@43) (=> (and (UOrdering2 $generated@@41 $generated@@42) (UOrdering2 $generated@@42 $generated@@41)) (= $generated@@41 $generated@@42))))
 :pattern ( (UOrdering2 $generated@@41 $generated@@42) (UOrdering2 $generated@@42 $generated@@41))
)))
(assert  (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (= ($generated@@1 $generated@@66) 6) (= (type $generated@@44) $generated@@66)) (= (type $generated@@45) $generated@@66)) (= (type $generated@@46) $generated@@66)) (= (type $generated@@47) $generated@@66)) (= (type $generated@@48) $generated@@66)) (= ($generated@@1 $generated@@67) 7)) (= (type $generated@@49) $generated@@67)) (= (type $generated@@50) $generated@@67)) (= (type $generated@@51) $generated@@67)) (= (type $generated@@52) $generated@@67)) (= (type $generated@@53) $generated@@67)) (= (type $generated@@54) $generated@@67)) (= (type $generated@@55) $generated@@67)) (= (type $generated@@56) $generated@@67)) (= (type $generated@@57) $generated@@67)) (= (type $generated@@58) $generated@@67)) (= (type $generated@@59) $generated@@67)) (forall (($generated@@72 T@T) ) (= ($generated@@1 ($generated@@68 $generated@@72)) 8))) (forall (($generated@@73 T@T) ) (! (= ($generated@@69 ($generated@@68 $generated@@73)) $generated@@73)
 :pattern ( ($generated@@68 $generated@@73))
))) (= (type $generated@@60) ($generated@@68 $generated@@4))) (= (type $generated@@61) $generated@@67)) (= ($generated@@1 $generated@@70) 9)) (= (type $generated@@62) $generated@@70)) (= (type $generated@@63) $generated@@67)) (= ($generated@@1 $generated@@71) 10)) (= (type $generated@@64) $generated@@71)) (= (type $generated@@65) $generated@@71)))
(assert (distinct $generated@@44 $generated@@45 $generated@@46 $generated@@47 $generated@@48 $generated@@49 $generated@@50 $generated@@51 $generated@@52 $generated@@53 $generated@@54 $generated@@55 $generated@@56 $generated@@57 $generated@@58 $generated@@59 $generated@@60 $generated@@61 $generated@@62 $generated@@63 $generated@@64 $generated@@65)
)
(assert (forall (($generated@@75 T@U) ) (! (= (type ($generated@@74 $generated@@75)) $generated@@67)
 :pattern ( ($generated@@74 $generated@@75))
)))
(assert (= ($generated@@74 $generated@@44) $generated@@49))
(assert (= ($generated@@74 $generated@@45) $generated@@50))
(assert (= ($generated@@74 $generated@@46) $generated@@51))
(assert (= ($generated@@74 $generated@@47) $generated@@52))
(assert (= ($generated@@74 $generated@@48) $generated@@53))
(assert  (and (and (and (and (and (and (and (and (and (and (and (and (and (forall (($generated@@87 T@T) ($generated@@88 T@T) ) (= ($generated@@1 ($generated@@78 $generated@@87 $generated@@88)) 11)) (forall (($generated@@89 T@T) ($generated@@90 T@T) ) (! (= ($generated@@81 ($generated@@78 $generated@@89 $generated@@90)) $generated@@89)
 :pattern ( ($generated@@78 $generated@@89 $generated@@90))
))) (forall (($generated@@91 T@T) ($generated@@92 T@T) ) (! (= ($generated@@82 ($generated@@78 $generated@@91 $generated@@92)) $generated@@92)
 :pattern ( ($generated@@78 $generated@@91 $generated@@92))
))) (forall (($generated@@93 T@U) ($generated@@94 T@U) ) (! (let (($generated@@95 ($generated@@82 (type $generated@@93))))
(= (type ($generated@@83 $generated@@93 $generated@@94)) $generated@@95))
 :pattern ( ($generated@@83 $generated@@93 $generated@@94))
))) (forall (($generated@@96 T@U) ($generated@@97 T@U) ($generated@@98 T@U) ) (! (let (($generated@@99 (type $generated@@98)))
(let (($generated@@100 (type $generated@@97)))
(= (type ($generated@@84 $generated@@96 $generated@@97 $generated@@98)) ($generated@@78 $generated@@100 $generated@@99))))
 :pattern ( ($generated@@84 $generated@@96 $generated@@97 $generated@@98))
))) (forall (($generated@@101 T@U) ($generated@@102 T@U) ($generated@@103 T@U) ) (! (let (($generated@@104 ($generated@@82 (type $generated@@101))))
 (=> (= (type $generated@@103) $generated@@104) (= ($generated@@83 ($generated@@84 $generated@@101 $generated@@102 $generated@@103) $generated@@102) $generated@@103)))
 :weight 0
))) (and (forall (($generated@@105 T@U) ($generated@@106 T@U) ($generated@@107 T@U) ($generated@@108 T@U) ) (!  (or (= $generated@@107 $generated@@108) (= ($generated@@83 ($generated@@84 $generated@@106 $generated@@107 $generated@@105) $generated@@108) ($generated@@83 $generated@@106 $generated@@108)))
 :weight 0
)) (forall (($generated@@109 T@U) ($generated@@110 T@U) ($generated@@111 T@U) ($generated@@112 T@U) ) (!  (or true (= ($generated@@83 ($generated@@84 $generated@@110 $generated@@111 $generated@@109) $generated@@112) ($generated@@83 $generated@@110 $generated@@112)))
 :weight 0
)))) (= ($generated@@1 $generated@@79) 12)) (forall (($generated@@113 T@U) ($generated@@114 T@U) ) (! (let (($generated@@115 ($generated@@69 (type $generated@@114))))
(= (type ($generated@@85 $generated@@113 $generated@@114)) $generated@@115))
 :pattern ( ($generated@@85 $generated@@113 $generated@@114))
))) (= ($generated@@1 $generated@@80) 13)) (forall (($generated@@116 T@U) ($generated@@117 T@U) ($generated@@118 T@U) ) (! (= (type ($generated@@86 $generated@@116 $generated@@117 $generated@@118)) $generated@@80)
 :pattern ( ($generated@@86 $generated@@116 $generated@@117 $generated@@118))
))) (forall (($generated@@119 T@U) ($generated@@120 T@U) ($generated@@121 T@U) ) (! (let (($generated@@122 ($generated@@69 (type $generated@@120))))
 (=> (= (type $generated@@121) $generated@@122) (= ($generated@@85 ($generated@@86 $generated@@119 $generated@@120 $generated@@121) $generated@@120) $generated@@121)))
 :weight 0
))) (and (forall (($generated@@123 T@U) ($generated@@124 T@U) ($generated@@125 T@U) ($generated@@126 T@U) ) (!  (or (= $generated@@125 $generated@@126) (= ($generated@@85 ($generated@@86 $generated@@124 $generated@@125 $generated@@123) $generated@@126) ($generated@@85 $generated@@124 $generated@@126)))
 :weight 0
)) (forall (($generated@@127 T@U) ($generated@@128 T@U) ($generated@@129 T@U) ($generated@@130 T@U) ) (!  (or true (= ($generated@@85 ($generated@@86 $generated@@128 $generated@@129 $generated@@127) $generated@@130) ($generated@@85 $generated@@128 $generated@@130)))
 :weight 0
)))) (forall (($generated@@131 Int) ) (! (= (type ($generated@@77 $generated@@131)) $generated@@66)
 :pattern ( ($generated@@77 $generated@@131))
))))
(assert (forall (($generated@@132 T@U) ($generated@@133 T@U) ) (!  (=> (and (= (type $generated@@132) $generated@@2) (= (type $generated@@133) ($generated@@78 $generated@@79 $generated@@80))) ($generated@@76 $generated@@132 ($generated@@77 0) $generated@@133))
 :pattern ( ($generated@@76 $generated@@132 ($generated@@77 0) $generated@@133))
)))
(assert (forall (($generated@@135 T@U) ($generated@@136 T@U) ) (!  (=> (and (and (= (type $generated@@135) ($generated@@78 $generated@@79 $generated@@80)) (= (type $generated@@136) ($generated@@78 $generated@@79 $generated@@80))) ($generated@@134 $generated@@135 $generated@@136)) (forall (($generated@@137 T@U) ) (!  (=> (and (= (type $generated@@137) $generated@@79) ($generated@@0 ($generated@@85 ($generated@@83 $generated@@135 $generated@@137) $generated@@60))) ($generated@@0 ($generated@@85 ($generated@@83 $generated@@136 $generated@@137) $generated@@60)))
 :pattern ( ($generated@@85 ($generated@@83 $generated@@136 $generated@@137) $generated@@60))
)))
 :pattern ( ($generated@@134 $generated@@135 $generated@@136))
)))
(assert (= (type $generated@@138) $generated@@66))
(assert (forall (($generated@@139 T@U) ($generated@@140 T@U) ) (!  (=> (and (= (type $generated@@139) $generated@@2) (= (type $generated@@140) ($generated@@78 $generated@@79 $generated@@80))) ($generated@@76 $generated@@139 $generated@@138 $generated@@140))
 :pattern ( ($generated@@76 $generated@@139 $generated@@138 $generated@@140))
)))
(assert (forall (($generated@@142 T@U) ) (!  (=> (= (type $generated@@142) $generated@@2) ($generated@@141 $generated@@142 ($generated@@77 0)))
 :pattern ( ($generated@@141 $generated@@142 ($generated@@77 0)))
)))
(assert  (and (= ($generated@@1 $generated@@145) 14) (forall (($generated@@146 T@U) ($generated@@147 T@U) ) (! (= (type ($generated@@144 $generated@@146 $generated@@147)) $generated@@66)
 :pattern ( ($generated@@144 $generated@@146 $generated@@147))
))))
(assert (forall (($generated@@148 T@U) ($generated@@149 T@U) ($generated@@150 T@U) ) (!  (=> (and (and (and (= (type $generated@@148) $generated@@66) (= (type $generated@@149) $generated@@66)) (= (type $generated@@150) $generated@@145)) ($generated@@141 $generated@@150 ($generated@@144 $generated@@148 $generated@@149))) ($generated@@143 $generated@@150))
 :pattern ( ($generated@@143 $generated@@150) ($generated@@141 $generated@@150 ($generated@@144 $generated@@148 $generated@@149)))
)))
(assert  (and (and (= ($generated@@1 $generated@@154) 15) (forall (($generated@@155 T@U) ) (! (= (type ($generated@@152 $generated@@155)) $generated@@154)
 :pattern ( ($generated@@152 $generated@@155))
))) (forall (($generated@@156 T@U) ) (! (= (type ($generated@@153 $generated@@156)) $generated@@154)
 :pattern ( ($generated@@153 $generated@@156))
))))
(assert (forall (($generated@@157 T@U) ($generated@@158 T@U) ) (!  (=> (and (and (= (type $generated@@157) $generated@@145) (= (type $generated@@158) $generated@@145)) true) (= ($generated@@151 $generated@@157 $generated@@158)  (and (= ($generated@@152 $generated@@157) ($generated@@152 $generated@@158)) (= ($generated@@153 $generated@@157) ($generated@@153 $generated@@158)))))
 :pattern ( ($generated@@151 $generated@@157 $generated@@158))
)))
(assert (forall (($generated@@161 T@U) ) (! (= (type ($generated@@159 $generated@@161)) $generated@@66)
 :pattern ( ($generated@@159 $generated@@161))
)))
(assert (forall (($generated@@162 T@U) ($generated@@163 T@U) ) (!  (=> (and (and (= (type $generated@@162) ($generated@@78 $generated@@154 $generated@@2)) (= (type $generated@@163) $generated@@66)) ($generated@@141 $generated@@162 ($generated@@159 $generated@@163))) ($generated@@160 $generated@@162))
 :pattern ( ($generated@@141 $generated@@162 ($generated@@159 $generated@@163)))
)))
(assert  (and (and (and (and (and (and (and (forall (($generated@@170 T@T) ($generated@@171 T@T) ) (= ($generated@@1 ($generated@@166 $generated@@170 $generated@@171)) 16)) (forall (($generated@@172 T@T) ($generated@@173 T@T) ) (! (= ($generated@@167 ($generated@@166 $generated@@172 $generated@@173)) $generated@@172)
 :pattern ( ($generated@@166 $generated@@172 $generated@@173))
))) (forall (($generated@@174 T@T) ($generated@@175 T@T) ) (! (= ($generated@@168 ($generated@@166 $generated@@174 $generated@@175)) $generated@@175)
 :pattern ( ($generated@@166 $generated@@174 $generated@@175))
))) (forall (($generated@@176 T@U) ($generated@@177 T@U) ($generated@@178 T@U) ) (! (let (($generated@@179 ($generated@@168 (type $generated@@176))))
(= (type ($generated@@164 $generated@@176 $generated@@177 $generated@@178)) $generated@@179))
 :pattern ( ($generated@@164 $generated@@176 $generated@@177 $generated@@178))
))) (forall (($generated@@180 T@U) ($generated@@181 T@U) ($generated@@182 T@U) ($generated@@183 T@U) ) (! (let (($generated@@184 (type $generated@@183)))
(let (($generated@@185 (type $generated@@181)))
(= (type ($generated@@169 $generated@@180 $generated@@181 $generated@@182 $generated@@183)) ($generated@@166 $generated@@185 $generated@@184))))
 :pattern ( ($generated@@169 $generated@@180 $generated@@181 $generated@@182 $generated@@183))
))) (forall (($generated@@186 T@U) ($generated@@187 T@U) ($generated@@188 T@U) ($generated@@189 T@U) ) (! (let (($generated@@190 ($generated@@168 (type $generated@@186))))
 (=> (= (type $generated@@189) $generated@@190) (= ($generated@@164 ($generated@@169 $generated@@186 $generated@@187 $generated@@188 $generated@@189) $generated@@187 $generated@@188) $generated@@189)))
 :weight 0
))) (and (and (forall (($generated@@191 T@U) ($generated@@192 T@U) ($generated@@193 T@U) ($generated@@194 T@U) ($generated@@195 T@U) ($generated@@196 T@U) ) (!  (or (= $generated@@193 $generated@@195) (= ($generated@@164 ($generated@@169 $generated@@192 $generated@@193 $generated@@194 $generated@@191) $generated@@195 $generated@@196) ($generated@@164 $generated@@192 $generated@@195 $generated@@196)))
 :weight 0
)) (forall (($generated@@197 T@U) ($generated@@198 T@U) ($generated@@199 T@U) ($generated@@200 T@U) ($generated@@201 T@U) ($generated@@202 T@U) ) (!  (or (= $generated@@200 $generated@@202) (= ($generated@@164 ($generated@@169 $generated@@198 $generated@@199 $generated@@200 $generated@@197) $generated@@201 $generated@@202) ($generated@@164 $generated@@198 $generated@@201 $generated@@202)))
 :weight 0
))) (forall (($generated@@203 T@U) ($generated@@204 T@U) ($generated@@205 T@U) ($generated@@206 T@U) ($generated@@207 T@U) ($generated@@208 T@U) ) (!  (or true (= ($generated@@164 ($generated@@169 $generated@@204 $generated@@205 $generated@@206 $generated@@203) $generated@@207 $generated@@208) ($generated@@164 $generated@@204 $generated@@207 $generated@@208)))
 :weight 0
)))) (forall (($generated@@209 T@U) ($generated@@210 T@U) ($generated@@211 T@U) ($generated@@212 Bool) ) (! (= (type ($generated@@165 $generated@@209 $generated@@210 $generated@@211 $generated@@212)) ($generated@@166 $generated@@79 $generated@@4))
 :pattern ( ($generated@@165 $generated@@209 $generated@@210 $generated@@211 $generated@@212))
))))
(assert (forall (($generated@@213 T@U) ($generated@@214 T@U) ($generated@@215 T@U) ($generated@@216 Bool) ($generated@@217 T@U) ($generated@@218 T@U) ) (! (let (($generated@@219 ($generated@@69 (type $generated@@218))))
 (=> (and (and (and (and (= (type $generated@@213) $generated@@79) (= (type $generated@@214) ($generated@@78 $generated@@79 $generated@@80))) (= (type $generated@@215) ($generated@@68 $generated@@4))) (= (type $generated@@217) $generated@@79)) (= (type $generated@@218) ($generated@@68 $generated@@219))) (= ($generated@@0 ($generated@@164 ($generated@@165 $generated@@213 $generated@@214 $generated@@215 $generated@@216) $generated@@217 $generated@@218))  (=> (and (not (= $generated@@217 $generated@@213)) ($generated@@0 ($generated@@85 ($generated@@83 $generated@@214 $generated@@217) $generated@@215))) $generated@@216))))
 :pattern ( ($generated@@164 ($generated@@165 $generated@@213 $generated@@214 $generated@@215 $generated@@216) $generated@@217 $generated@@218))
)))
(assert (forall (($generated@@222 T@U) ($generated@@223 T@U) ) (! (= (type ($generated@@220 $generated@@222 $generated@@223)) $generated@@145)
 :pattern ( ($generated@@220 $generated@@222 $generated@@223))
)))
(assert (forall (($generated@@224 T@U) ($generated@@225 T@U) ($generated@@226 T@U) ($generated@@227 T@U) ) (!  (=> (and (and (and (= (type $generated@@224) $generated@@66) (= (type $generated@@225) $generated@@66)) (= (type $generated@@226) $generated@@154)) (= (type $generated@@227) $generated@@154)) (= ($generated@@141 ($generated@@220 $generated@@226 $generated@@227) ($generated@@144 $generated@@224 $generated@@225))  (and ($generated@@221 $generated@@226 $generated@@224) ($generated@@221 $generated@@227 $generated@@225))))
 :pattern ( ($generated@@141 ($generated@@220 $generated@@226 $generated@@227) ($generated@@144 $generated@@224 $generated@@225)))
)))
(assert (forall (($generated@@228 T@U) ($generated@@229 T@U) ) (!  (=> (and (= (type $generated@@228) $generated@@145) (= (type $generated@@229) $generated@@145)) (= ($generated@@151 $generated@@228 $generated@@229) (= $generated@@228 $generated@@229)))
 :pattern ( ($generated@@151 $generated@@228 $generated@@229))
)))
(assert (forall (($generated@@231 T@U) ) (! (= (type ($generated@@230 $generated@@231)) $generated@@66)
 :pattern ( ($generated@@230 $generated@@231))
)))
(assert (forall (($generated@@232 T@U) ($generated@@233 T@U) ) (!  (=> (and (= (type $generated@@232) ($generated@@78 $generated@@154 $generated@@4)) (= (type $generated@@233) $generated@@66)) (= ($generated@@141 $generated@@232 ($generated@@230 $generated@@233)) (forall (($generated@@234 T@U) ) (!  (=> (and (= (type $generated@@234) $generated@@154) ($generated@@0 ($generated@@83 $generated@@232 $generated@@234))) ($generated@@221 $generated@@234 $generated@@233))
 :pattern ( ($generated@@83 $generated@@232 $generated@@234))
))))
 :pattern ( ($generated@@141 $generated@@232 ($generated@@230 $generated@@233)))
)))
(assert (forall (($generated@@236 T@U) ) (! (= (type ($generated@@235 $generated@@236)) $generated@@66)
 :pattern ( ($generated@@235 $generated@@236))
)))
(assert (forall (($generated@@237 T@U) ($generated@@238 T@U) ) (!  (=> (and (= (type $generated@@237) ($generated@@78 $generated@@154 $generated@@4)) (= (type $generated@@238) $generated@@66)) (= ($generated@@141 $generated@@237 ($generated@@235 $generated@@238)) (forall (($generated@@239 T@U) ) (!  (=> (and (= (type $generated@@239) $generated@@154) ($generated@@0 ($generated@@83 $generated@@237 $generated@@239))) ($generated@@221 $generated@@239 $generated@@238))
 :pattern ( ($generated@@83 $generated@@237 $generated@@239))
))))
 :pattern ( ($generated@@141 $generated@@237 ($generated@@235 $generated@@238)))
)))
(assert (forall (($generated@@241 Int) ) (! (= ($generated@@240 $generated@@241) $generated@@241)
 :pattern ( ($generated@@240 $generated@@241))
)))
(assert (forall (($generated@@243 T@U) ) (! (let (($generated@@244 (type $generated@@243)))
(= (type ($generated@@242 $generated@@243)) $generated@@244))
 :pattern ( ($generated@@242 $generated@@243))
)))
(assert (forall (($generated@@245 T@U) ) (! (= ($generated@@242 $generated@@245) $generated@@245)
 :pattern ( ($generated@@242 $generated@@245))
)))
(assert (forall (($generated@@248 T@U) ($generated@@249 T@U) ($generated@@250 T@U) ($generated@@251 T@U) ($generated@@252 T@U) ) (!  (=> (and (and (and (and (and (= (type $generated@@248) $generated@@66) (= (type $generated@@249) $generated@@66)) (= (type $generated@@250) $generated@@154)) (= (type $generated@@251) $generated@@154)) (= (type $generated@@252) ($generated@@78 $generated@@79 $generated@@80))) ($generated@@246 $generated@@252)) (= ($generated@@76 ($generated@@220 $generated@@250 $generated@@251) ($generated@@144 $generated@@248 $generated@@249) $generated@@252)  (and ($generated@@247 $generated@@250 $generated@@248 $generated@@252) ($generated@@247 $generated@@251 $generated@@249 $generated@@252))))
 :pattern ( ($generated@@76 ($generated@@220 $generated@@250 $generated@@251) ($generated@@144 $generated@@248 $generated@@249) $generated@@252))
)))
(assert (forall (($generated@@254 T@U) ) (! (= (type ($generated@@253 $generated@@254)) $generated@@70)
 :pattern ( ($generated@@253 $generated@@254))
)))
(assert (forall (($generated@@255 T@U) ) (!  (=> (= (type $generated@@255) $generated@@145) (= ($generated@@143 $generated@@255) (= ($generated@@253 $generated@@255) $generated@@62)))
 :pattern ( ($generated@@143 $generated@@255))
)))
(assert (forall (($generated@@256 T@U) ) (!  (=> (and (= (type $generated@@256) $generated@@145) ($generated@@143 $generated@@256)) (exists (($generated@@257 T@U) ($generated@@258 T@U) ) (!  (and (and (= (type $generated@@257) $generated@@154) (= (type $generated@@258) $generated@@154)) (= $generated@@256 ($generated@@220 $generated@@257 $generated@@258)))
 :no-pattern (type $generated@@257)
 :no-pattern (type $generated@@258)
 :no-pattern ($generated $generated@@257)
 :no-pattern ($generated@@0 $generated@@257)
 :no-pattern ($generated $generated@@258)
 :no-pattern ($generated@@0 $generated@@258)
)))
 :pattern ( ($generated@@143 $generated@@256))
)))
(assert  (and (and (forall (($generated@@263 T@T) ) (= ($generated@@1 ($generated@@261 $generated@@263)) 17)) (forall (($generated@@264 T@T) ) (! (= ($generated@@262 ($generated@@261 $generated@@264)) $generated@@264)
 :pattern ( ($generated@@261 $generated@@264))
))) (forall (($generated@@265 T@T) ) (! (= (type ($generated@@259 $generated@@265)) ($generated@@261 $generated@@265))
 :pattern ( ($generated@@259 $generated@@265))
))))
(assert (forall (($generated@@266 T@T) ) (! (= ($generated@@260 ($generated@@259 $generated@@266)) 0)
 :pattern ( ($generated@@259 $generated@@266))
)))
(assert (forall (($generated@@267 T@U) ) (!  (=> (= (type $generated@@267) $generated@@2) (= ($generated@@141 $generated@@267 $generated@@138) (<= ($generated@@240 0) ($generated $generated@@267))))
 :pattern ( ($generated@@141 $generated@@267 $generated@@138))
)))
(assert (forall (($generated@@269 T@U) ) (! (= (type ($generated@@268 $generated@@269)) $generated@@154)
 :pattern ( ($generated@@268 $generated@@269))
)))
(assert (forall (($generated@@270 T@U) ($generated@@271 T@U) ($generated@@272 T@U) ) (!  (=> (and (= (type $generated@@271) $generated@@66) (= (type $generated@@272) ($generated@@78 $generated@@79 $generated@@80))) (= ($generated@@247 ($generated@@268 $generated@@270) $generated@@271 $generated@@272) ($generated@@76 $generated@@270 $generated@@271 $generated@@272)))
 :pattern ( ($generated@@247 ($generated@@268 $generated@@270) $generated@@271 $generated@@272))
)))
(assert (forall (($generated@@273 T@U) ($generated@@274 T@U) ($generated@@275 T@U) ($generated@@276 T@U) ) (!  (=> (and (and (and (and (and (= (type $generated@@273) ($generated@@78 $generated@@79 $generated@@80)) (= (type $generated@@274) ($generated@@78 $generated@@79 $generated@@80))) (= (type $generated@@275) $generated@@154)) (= (type $generated@@276) $generated@@66)) ($generated@@134 $generated@@273 $generated@@274)) ($generated@@247 $generated@@275 $generated@@276 $generated@@273)) ($generated@@247 $generated@@275 $generated@@276 $generated@@274))
 :pattern ( ($generated@@134 $generated@@273 $generated@@274) ($generated@@247 $generated@@275 $generated@@276 $generated@@273))
)))
(assert (forall (($generated@@277 T@U) ($generated@@278 T@U) ($generated@@279 T@U) ($generated@@280 T@U) ) (!  (=> (and (and (and (and (= (type $generated@@277) ($generated@@78 $generated@@79 $generated@@80)) (= (type $generated@@278) ($generated@@78 $generated@@79 $generated@@80))) (= (type $generated@@280) $generated@@66)) ($generated@@134 $generated@@277 $generated@@278)) ($generated@@76 $generated@@279 $generated@@280 $generated@@277)) ($generated@@76 $generated@@279 $generated@@280 $generated@@278))
 :pattern ( ($generated@@134 $generated@@277 $generated@@278) ($generated@@76 $generated@@279 $generated@@280 $generated@@277))
)))
(assert (forall (($generated@@283 T@T) ) (! (= (type ($generated@@282 $generated@@283)) ($generated@@78 $generated@@283 $generated@@2))
 :pattern ( ($generated@@282 $generated@@283))
)))
(assert (forall (($generated@@284 T@U) ) (! (let (($generated@@285 ($generated@@81 (type $generated@@284))))
 (=> (= (type $generated@@284) ($generated@@78 $generated@@285 $generated@@2)) (and (= (= ($generated@@281 $generated@@284) 0) (= $generated@@284 ($generated@@282 $generated@@285))) (=> (not (= ($generated@@281 $generated@@284) 0)) (exists (($generated@@286 T@U) ) (!  (and (= (type $generated@@286) $generated@@285) (< 0 ($generated ($generated@@83 $generated@@284 $generated@@286))))
 :no-pattern (type $generated@@286)
 :no-pattern ($generated $generated@@286)
 :no-pattern ($generated@@0 $generated@@286)
))))))
 :pattern ( ($generated@@281 $generated@@284))
)))
(assert  (and (and (and (and (forall (($generated@@292 T@T) ($generated@@293 T@T) ) (= ($generated@@1 ($generated@@289 $generated@@292 $generated@@293)) 18)) (forall (($generated@@294 T@T) ($generated@@295 T@T) ) (! (= ($generated@@290 ($generated@@289 $generated@@294 $generated@@295)) $generated@@294)
 :pattern ( ($generated@@289 $generated@@294 $generated@@295))
))) (forall (($generated@@296 T@T) ($generated@@297 T@T) ) (! (= ($generated@@291 ($generated@@289 $generated@@296 $generated@@297)) $generated@@297)
 :pattern ( ($generated@@289 $generated@@296 $generated@@297))
))) (forall (($generated@@298 T@U) ) (! (let (($generated@@299 ($generated@@290 (type $generated@@298))))
(= (type ($generated@@287 $generated@@298)) ($generated@@78 $generated@@299 $generated@@4)))
 :pattern ( ($generated@@287 $generated@@298))
))) (forall (($generated@@300 T@T) ($generated@@301 T@T) ) (! (= (type ($generated@@288 $generated@@300 $generated@@301)) ($generated@@289 $generated@@300 $generated@@301))
 :pattern ( ($generated@@288 $generated@@300 $generated@@301))
))))
(assert (forall (($generated@@302 T@U) ($generated@@303 T@T) ) (! (let (($generated@@304 (type $generated@@302)))
 (not ($generated@@0 ($generated@@83 ($generated@@287 ($generated@@288 $generated@@304 $generated@@303)) $generated@@302))))
 :pattern ( (let (($generated@@304 (type $generated@@302)))
($generated@@83 ($generated@@287 ($generated@@288 $generated@@304 $generated@@303)) $generated@@302)))
)))
(assert  (and (and (and (and (forall (($generated@@310 T@T) ($generated@@311 T@T) ) (= ($generated@@1 ($generated@@307 $generated@@310 $generated@@311)) 19)) (forall (($generated@@312 T@T) ($generated@@313 T@T) ) (! (= ($generated@@308 ($generated@@307 $generated@@312 $generated@@313)) $generated@@312)
 :pattern ( ($generated@@307 $generated@@312 $generated@@313))
))) (forall (($generated@@314 T@T) ($generated@@315 T@T) ) (! (= ($generated@@309 ($generated@@307 $generated@@314 $generated@@315)) $generated@@315)
 :pattern ( ($generated@@307 $generated@@314 $generated@@315))
))) (forall (($generated@@316 T@U) ) (! (let (($generated@@317 ($generated@@308 (type $generated@@316))))
(= (type ($generated@@305 $generated@@316)) ($generated@@78 $generated@@317 $generated@@4)))
 :pattern ( ($generated@@305 $generated@@316))
))) (forall (($generated@@318 T@T) ($generated@@319 T@T) ) (! (= (type ($generated@@306 $generated@@318 $generated@@319)) ($generated@@307 $generated@@318 $generated@@319))
 :pattern ( ($generated@@306 $generated@@318 $generated@@319))
))))
(assert (forall (($generated@@320 T@U) ($generated@@321 T@T) ) (! (let (($generated@@322 (type $generated@@320)))
 (not ($generated@@0 ($generated@@83 ($generated@@305 ($generated@@306 $generated@@322 $generated@@321)) $generated@@320))))
 :pattern ( (let (($generated@@322 (type $generated@@320)))
($generated@@83 ($generated@@305 ($generated@@306 $generated@@322 $generated@@321)) $generated@@320)))
)))
(assert (forall (($generated@@323 T@U) ) (! (let (($generated@@324 ($generated@@81 (type $generated@@323))))
 (=> (= (type $generated@@323) ($generated@@78 $generated@@324 $generated@@2)) (= ($generated@@160 $generated@@323) (forall (($generated@@325 T@U) ) (!  (=> (= (type $generated@@325) $generated@@324) (and (<= 0 ($generated ($generated@@83 $generated@@323 $generated@@325))) (<= ($generated ($generated@@83 $generated@@323 $generated@@325)) ($generated@@281 $generated@@323))))
 :pattern ( ($generated@@83 $generated@@323 $generated@@325))
)))))
 :pattern ( ($generated@@160 $generated@@323))
)))
(assert (forall (($generated@@327 T@T) ($generated@@328 T@U) ) (! (= (type ($generated@@326 $generated@@327 $generated@@328)) $generated@@327)
 :pattern ( ($generated@@326 $generated@@327 $generated@@328))
)))
(assert (forall (($generated@@329 T@U) ) (!  (=> (and (= (type $generated@@329) $generated@@154) ($generated@@221 $generated@@329 $generated@@138)) (and (= ($generated@@268 ($generated@@326 $generated@@2 $generated@@329)) $generated@@329) ($generated@@141 ($generated@@326 $generated@@2 $generated@@329) $generated@@138)))
 :pattern ( ($generated@@221 $generated@@329 $generated@@138))
)))
(assert (forall (($generated@@330 T@U) ) (! (let (($generated@@331 ($generated@@291 (type $generated@@330))))
(let (($generated@@332 ($generated@@290 (type $generated@@330))))
 (=> (= (type $generated@@330) ($generated@@289 $generated@@332 $generated@@331)) (or (= $generated@@330 ($generated@@288 $generated@@332 $generated@@331)) (exists (($generated@@333 T@U) ) (!  (and (= (type $generated@@333) $generated@@332) ($generated@@0 ($generated@@83 ($generated@@287 $generated@@330) $generated@@333)))
 :no-pattern (type $generated@@333)
 :no-pattern ($generated $generated@@333)
 :no-pattern ($generated@@0 $generated@@333)
))))))
 :pattern ( ($generated@@287 $generated@@330))
)))
(assert (forall (($generated@@335 T@U) ) (! (let (($generated@@336 ($generated@@291 (type $generated@@335))))
(= (type ($generated@@334 $generated@@335)) ($generated@@78 $generated@@336 $generated@@4)))
 :pattern ( ($generated@@334 $generated@@335))
)))
(assert (forall (($generated@@337 T@U) ) (! (let (($generated@@338 ($generated@@291 (type $generated@@337))))
(let (($generated@@339 ($generated@@290 (type $generated@@337))))
 (=> (= (type $generated@@337) ($generated@@289 $generated@@339 $generated@@338)) (or (= $generated@@337 ($generated@@288 $generated@@339 $generated@@338)) (exists (($generated@@340 T@U) ) (!  (and (= (type $generated@@340) $generated@@338) ($generated@@0 ($generated@@83 ($generated@@334 $generated@@337) $generated@@340)))
 :no-pattern (type $generated@@340)
 :no-pattern ($generated $generated@@340)
 :no-pattern ($generated@@0 $generated@@340)
))))))
 :pattern ( ($generated@@334 $generated@@337))
)))
(assert (forall (($generated@@341 T@U) ) (! (let (($generated@@342 ($generated@@309 (type $generated@@341))))
(let (($generated@@343 ($generated@@308 (type $generated@@341))))
 (=> (= (type $generated@@341) ($generated@@307 $generated@@343 $generated@@342)) (or (= $generated@@341 ($generated@@306 $generated@@343 $generated@@342)) (exists (($generated@@344 T@U) ) (!  (and (= (type $generated@@344) $generated@@343) ($generated@@0 ($generated@@83 ($generated@@305 $generated@@341) $generated@@344)))
 :no-pattern (type $generated@@344)
 :no-pattern ($generated $generated@@344)
 :no-pattern ($generated@@0 $generated@@344)
))))))
 :pattern ( ($generated@@305 $generated@@341))
)))
(assert (forall (($generated@@346 T@U) ) (! (let (($generated@@347 ($generated@@309 (type $generated@@346))))
(= (type ($generated@@345 $generated@@346)) ($generated@@78 $generated@@347 $generated@@4)))
 :pattern ( ($generated@@345 $generated@@346))
)))
(assert (forall (($generated@@348 T@U) ) (! (let (($generated@@349 ($generated@@309 (type $generated@@348))))
(let (($generated@@350 ($generated@@308 (type $generated@@348))))
 (=> (= (type $generated@@348) ($generated@@307 $generated@@350 $generated@@349)) (or (= $generated@@348 ($generated@@306 $generated@@350 $generated@@349)) (exists (($generated@@351 T@U) ) (!  (and (= (type $generated@@351) $generated@@349) ($generated@@0 ($generated@@83 ($generated@@345 $generated@@348) $generated@@351)))
 :no-pattern (type $generated@@351)
 :no-pattern ($generated $generated@@351)
 :no-pattern ($generated@@0 $generated@@351)
))))))
 :pattern ( ($generated@@345 $generated@@348))
)))
(assert (forall (($generated@@352 T@U) ($generated@@353 T@U) ) (!  (=> (and (= (type $generated@@352) ($generated@@78 $generated@@154 $generated@@2)) (= (type $generated@@353) $generated@@66)) (= ($generated@@141 $generated@@352 ($generated@@159 $generated@@353)) (forall (($generated@@354 T@U) ) (!  (=> (and (= (type $generated@@354) $generated@@154) (< 0 ($generated ($generated@@83 $generated@@352 $generated@@354)))) ($generated@@221 $generated@@354 $generated@@353))
 :pattern ( ($generated@@83 $generated@@352 $generated@@354))
))))
 :pattern ( ($generated@@141 $generated@@352 ($generated@@159 $generated@@353)))
)))
(assert (forall (($generated@@355 T@U) ($generated@@356 T@U) ($generated@@357 T@U) ) (!  (=> (and (and (= (type $generated@@355) ($generated@@78 $generated@@154 $generated@@4)) (= (type $generated@@356) $generated@@66)) (= (type $generated@@357) ($generated@@78 $generated@@79 $generated@@80))) (= ($generated@@76 $generated@@355 ($generated@@230 $generated@@356) $generated@@357) (forall (($generated@@358 T@U) ) (!  (=> (and (= (type $generated@@358) $generated@@154) ($generated@@0 ($generated@@83 $generated@@355 $generated@@358))) ($generated@@247 $generated@@358 $generated@@356 $generated@@357))
 :pattern ( ($generated@@83 $generated@@355 $generated@@358))
))))
 :pattern ( ($generated@@76 $generated@@355 ($generated@@230 $generated@@356) $generated@@357))
)))
(assert (forall (($generated@@359 T@U) ($generated@@360 T@U) ($generated@@361 T@U) ) (!  (=> (and (and (= (type $generated@@359) ($generated@@78 $generated@@154 $generated@@4)) (= (type $generated@@360) $generated@@66)) (= (type $generated@@361) ($generated@@78 $generated@@79 $generated@@80))) (= ($generated@@76 $generated@@359 ($generated@@235 $generated@@360) $generated@@361) (forall (($generated@@362 T@U) ) (!  (=> (and (= (type $generated@@362) $generated@@154) ($generated@@0 ($generated@@83 $generated@@359 $generated@@362))) ($generated@@247 $generated@@362 $generated@@360 $generated@@361))
 :pattern ( ($generated@@83 $generated@@359 $generated@@362))
))))
 :pattern ( ($generated@@76 $generated@@359 ($generated@@235 $generated@@360) $generated@@361))
)))
(assert (forall (($generated@@363 T@U) ) (! (let (($generated@@364 (type $generated@@363)))
(= ($generated ($generated@@83 ($generated@@282 $generated@@364) $generated@@363)) 0))
 :pattern ( (let (($generated@@364 (type $generated@@363)))
($generated@@83 ($generated@@282 $generated@@364) $generated@@363)))
)))
(assert  (and (forall (($generated@@367 T@U) ) (! (= (type ($generated@@365 $generated@@367)) ($generated@@78 $generated@@154 $generated@@4))
 :pattern ( ($generated@@365 $generated@@367))
)) (forall (($generated@@368 T@U) ) (! (let (($generated@@369 ($generated@@291 (type $generated@@368))))
(let (($generated@@370 ($generated@@290 (type $generated@@368))))
(= (type ($generated@@366 $generated@@368)) ($generated@@78 $generated@@370 $generated@@369))))
 :pattern ( ($generated@@366 $generated@@368))
))))
(assert (forall (($generated@@371 T@U) ($generated@@372 T@U) ) (!  (=> (and (= (type $generated@@371) ($generated@@289 $generated@@154 $generated@@154)) (= (type $generated@@372) $generated@@154)) (= ($generated@@0 ($generated@@83 ($generated@@365 $generated@@371) $generated@@372))  (and ($generated@@0 ($generated@@83 ($generated@@287 $generated@@371) ($generated@@152 ($generated@@326 $generated@@145 $generated@@372)))) (= ($generated@@83 ($generated@@366 $generated@@371) ($generated@@152 ($generated@@326 $generated@@145 $generated@@372))) ($generated@@153 ($generated@@326 $generated@@145 $generated@@372))))))
 :pattern ( ($generated@@83 ($generated@@365 $generated@@371) $generated@@372))
)))
(assert  (and (forall (($generated@@375 T@U) ) (! (= (type ($generated@@373 $generated@@375)) ($generated@@78 $generated@@154 $generated@@4))
 :pattern ( ($generated@@373 $generated@@375))
)) (forall (($generated@@376 T@U) ) (! (let (($generated@@377 ($generated@@309 (type $generated@@376))))
(let (($generated@@378 ($generated@@308 (type $generated@@376))))
(= (type ($generated@@374 $generated@@376)) ($generated@@78 $generated@@378 $generated@@377))))
 :pattern ( ($generated@@374 $generated@@376))
))))
(assert (forall (($generated@@379 T@U) ($generated@@380 T@U) ) (!  (=> (and (= (type $generated@@379) ($generated@@307 $generated@@154 $generated@@154)) (= (type $generated@@380) $generated@@154)) (= ($generated@@0 ($generated@@83 ($generated@@373 $generated@@379) $generated@@380))  (and ($generated@@0 ($generated@@83 ($generated@@305 $generated@@379) ($generated@@152 ($generated@@326 $generated@@145 $generated@@380)))) (= ($generated@@83 ($generated@@374 $generated@@379) ($generated@@152 ($generated@@326 $generated@@145 $generated@@380))) ($generated@@153 ($generated@@326 $generated@@145 $generated@@380))))))
 :pattern ( ($generated@@83 ($generated@@373 $generated@@379) $generated@@380))
)))
(assert (forall (($generated@@381 T@U) ($generated@@382 T@U) ) (! (let (($generated@@383 (type $generated@@382)))
(let (($generated@@384 ($generated@@290 (type $generated@@381))))
 (=> (= (type $generated@@381) ($generated@@289 $generated@@384 $generated@@383)) (= ($generated@@0 ($generated@@83 ($generated@@334 $generated@@381) $generated@@382)) (exists (($generated@@385 T@U) ) (!  (and (= (type $generated@@385) $generated@@384) (and ($generated@@0 ($generated@@83 ($generated@@287 $generated@@381) $generated@@385)) (= $generated@@382 ($generated@@83 ($generated@@366 $generated@@381) $generated@@385))))
 :pattern ( ($generated@@83 ($generated@@287 $generated@@381) $generated@@385))
 :pattern ( ($generated@@83 ($generated@@366 $generated@@381) $generated@@385))
))))))
 :pattern ( ($generated@@83 ($generated@@334 $generated@@381) $generated@@382))
)))
(assert (forall (($generated@@386 T@U) ($generated@@387 T@U) ) (! (let (($generated@@388 (type $generated@@387)))
(let (($generated@@389 ($generated@@308 (type $generated@@386))))
 (=> (= (type $generated@@386) ($generated@@307 $generated@@389 $generated@@388)) (= ($generated@@0 ($generated@@83 ($generated@@345 $generated@@386) $generated@@387)) (exists (($generated@@390 T@U) ) (!  (and (= (type $generated@@390) $generated@@389) (and ($generated@@0 ($generated@@83 ($generated@@305 $generated@@386) $generated@@390)) (= $generated@@387 ($generated@@83 ($generated@@374 $generated@@386) $generated@@390))))
 :pattern ( ($generated@@83 ($generated@@305 $generated@@386) $generated@@390))
 :pattern ( ($generated@@83 ($generated@@374 $generated@@386) $generated@@390))
))))))
 :pattern ( ($generated@@83 ($generated@@345 $generated@@386) $generated@@387))
)))
(assert (forall (($generated@@392 T@U) ($generated@@393 T@U) ) (! (= (type ($generated@@391 $generated@@392 $generated@@393)) $generated@@66)
 :pattern ( ($generated@@391 $generated@@392 $generated@@393))
)))
(assert (forall (($generated@@394 T@U) ($generated@@395 T@U) ($generated@@396 T@U) ($generated@@397 T@U) ) (!  (=> (and (and (and (= (type $generated@@394) ($generated@@289 $generated@@154 $generated@@154)) (= (type $generated@@395) $generated@@66)) (= (type $generated@@396) $generated@@66)) (= (type $generated@@397) ($generated@@78 $generated@@79 $generated@@80))) (= ($generated@@76 $generated@@394 ($generated@@391 $generated@@395 $generated@@396) $generated@@397) (forall (($generated@@398 T@U) ) (!  (=> (and (= (type $generated@@398) $generated@@154) ($generated@@0 ($generated@@83 ($generated@@287 $generated@@394) $generated@@398))) (and ($generated@@247 ($generated@@83 ($generated@@366 $generated@@394) $generated@@398) $generated@@396 $generated@@397) ($generated@@247 $generated@@398 $generated@@395 $generated@@397)))
 :pattern ( ($generated@@83 ($generated@@366 $generated@@394) $generated@@398))
 :pattern ( ($generated@@83 ($generated@@287 $generated@@394) $generated@@398))
))))
 :pattern ( ($generated@@76 $generated@@394 ($generated@@391 $generated@@395 $generated@@396) $generated@@397))
)))
(assert (forall (($generated@@400 T@U) ($generated@@401 T@U) ) (! (= (type ($generated@@399 $generated@@400 $generated@@401)) $generated@@66)
 :pattern ( ($generated@@399 $generated@@400 $generated@@401))
)))
(assert (forall (($generated@@402 T@U) ($generated@@403 T@U) ($generated@@404 T@U) ($generated@@405 T@U) ) (!  (=> (and (and (and (= (type $generated@@402) ($generated@@307 $generated@@154 $generated@@154)) (= (type $generated@@403) $generated@@66)) (= (type $generated@@404) $generated@@66)) (= (type $generated@@405) ($generated@@78 $generated@@79 $generated@@80))) (= ($generated@@76 $generated@@402 ($generated@@399 $generated@@403 $generated@@404) $generated@@405) (forall (($generated@@406 T@U) ) (!  (=> (and (= (type $generated@@406) $generated@@154) ($generated@@0 ($generated@@83 ($generated@@305 $generated@@402) $generated@@406))) (and ($generated@@247 ($generated@@83 ($generated@@374 $generated@@402) $generated@@406) $generated@@404 $generated@@405) ($generated@@247 $generated@@406 $generated@@403 $generated@@405)))
 :pattern ( ($generated@@83 ($generated@@374 $generated@@402) $generated@@406))
 :pattern ( ($generated@@83 ($generated@@305 $generated@@402) $generated@@406))
))))
 :pattern ( ($generated@@76 $generated@@402 ($generated@@399 $generated@@403 $generated@@404) $generated@@405))
)))
(assert (forall (($generated@@407 T@U) ($generated@@408 T@U) ($generated@@409 T@U) ) (!  (=> (and (and (and (and (= (type $generated@@407) ($generated@@78 $generated@@79 $generated@@80)) (= (type $generated@@408) ($generated@@78 $generated@@79 $generated@@80))) (= (type $generated@@409) ($generated@@78 $generated@@79 $generated@@80))) (not (= $generated@@407 $generated@@409))) (and ($generated@@134 $generated@@407 $generated@@408) ($generated@@134 $generated@@408 $generated@@409))) ($generated@@134 $generated@@407 $generated@@409))
 :pattern ( ($generated@@134 $generated@@407 $generated@@408) ($generated@@134 $generated@@408 $generated@@409))
)))
(assert (forall (($generated@@411 T@T) ) (! (= (type ($generated@@410 $generated@@411)) ($generated@@78 $generated@@411 $generated@@4))
 :pattern ( ($generated@@410 $generated@@411))
)))
(assert (forall (($generated@@412 T@U) ) (! (let (($generated@@413 ($generated@@309 (type $generated@@412))))
(let (($generated@@414 ($generated@@308 (type $generated@@412))))
 (=> (= (type $generated@@412) ($generated@@307 $generated@@414 $generated@@413)) (= (= $generated@@412 ($generated@@306 $generated@@414 $generated@@413)) (= ($generated@@305 $generated@@412) ($generated@@410 $generated@@414))))))
 :pattern ( ($generated@@305 $generated@@412))
)))
(assert (forall (($generated@@415 T@U) ) (! (let (($generated@@416 ($generated@@309 (type $generated@@415))))
(let (($generated@@417 ($generated@@308 (type $generated@@415))))
 (=> (= (type $generated@@415) ($generated@@307 $generated@@417 $generated@@416)) (= (= $generated@@415 ($generated@@306 $generated@@417 $generated@@416)) (= ($generated@@345 $generated@@415) ($generated@@410 $generated@@416))))))
 :pattern ( ($generated@@345 $generated@@415))
)))
(assert (forall (($generated@@418 T@U) ) (! (let (($generated@@419 ($generated@@309 (type $generated@@418))))
(let (($generated@@420 ($generated@@308 (type $generated@@418))))
 (=> (= (type $generated@@418) ($generated@@307 $generated@@420 $generated@@419)) (= (= $generated@@418 ($generated@@306 $generated@@420 $generated@@419)) (= ($generated@@373 $generated@@418) ($generated@@410 $generated@@154))))))
 :pattern ( ($generated@@373 $generated@@418))
)))
(assert (forall (($generated@@421 T@U) ) (! (let (($generated@@422 ($generated@@291 (type $generated@@421))))
(let (($generated@@423 ($generated@@290 (type $generated@@421))))
 (=> (= (type $generated@@421) ($generated@@289 $generated@@423 $generated@@422)) (or (= $generated@@421 ($generated@@288 $generated@@423 $generated@@422)) (exists (($generated@@424 T@U) ($generated@@425 T@U) ) (!  (and (and (= (type $generated@@424) $generated@@154) (= (type $generated@@425) $generated@@154)) ($generated@@0 ($generated@@83 ($generated@@365 $generated@@421) ($generated@@268 ($generated@@220 $generated@@424 $generated@@425)))))
 :no-pattern (type $generated@@424)
 :no-pattern (type $generated@@425)
 :no-pattern ($generated $generated@@424)
 :no-pattern ($generated@@0 $generated@@424)
 :no-pattern ($generated $generated@@425)
 :no-pattern ($generated@@0 $generated@@425)
))))))
 :pattern ( ($generated@@365 $generated@@421))
)))
(assert (forall (($generated@@426 T@U) ) (! (let (($generated@@427 ($generated@@309 (type $generated@@426))))
(let (($generated@@428 ($generated@@308 (type $generated@@426))))
 (=> (= (type $generated@@426) ($generated@@307 $generated@@428 $generated@@427)) (or (= $generated@@426 ($generated@@306 $generated@@428 $generated@@427)) (exists (($generated@@429 T@U) ($generated@@430 T@U) ) (!  (and (and (= (type $generated@@429) $generated@@154) (= (type $generated@@430) $generated@@154)) ($generated@@0 ($generated@@83 ($generated@@373 $generated@@426) ($generated@@268 ($generated@@220 $generated@@429 $generated@@430)))))
 :no-pattern (type $generated@@429)
 :no-pattern (type $generated@@430)
 :no-pattern ($generated $generated@@429)
 :no-pattern ($generated@@0 $generated@@429)
 :no-pattern ($generated $generated@@430)
 :no-pattern ($generated@@0 $generated@@430)
))))))
 :pattern ( ($generated@@373 $generated@@426))
)))
(assert (forall (($generated@@431 T@U) ) (!  (=> (and (= (type $generated@@431) $generated@@154) ($generated@@221 $generated@@431 $generated@@46)) (and (= ($generated@@268 ($generated@@326 $generated@@2 $generated@@431)) $generated@@431) ($generated@@141 ($generated@@326 $generated@@2 $generated@@431) $generated@@46)))
 :pattern ( ($generated@@221 $generated@@431 $generated@@46))
)))
(assert (forall (($generated@@432 T@U) ) (!  (=> (and (= (type $generated@@432) $generated@@154) ($generated@@221 $generated@@432 $generated@@47)) (and (= ($generated@@268 ($generated@@326 $generated@@3 $generated@@432)) $generated@@432) ($generated@@141 ($generated@@326 $generated@@3 $generated@@432) $generated@@47)))
 :pattern ( ($generated@@221 $generated@@432 $generated@@47))
)))
(assert (forall (($generated@@433 T@U) ) (!  (=> (and (= (type $generated@@433) $generated@@154) ($generated@@221 $generated@@433 $generated@@44)) (and (= ($generated@@268 ($generated@@326 $generated@@4 $generated@@433)) $generated@@433) ($generated@@141 ($generated@@326 $generated@@4 $generated@@433) $generated@@44)))
 :pattern ( ($generated@@221 $generated@@433 $generated@@44))
)))
(assert (= ($generated@@1 $generated@@434) 20))
(assert (forall (($generated@@435 T@U) ) (!  (=> (and (= (type $generated@@435) $generated@@154) ($generated@@221 $generated@@435 $generated@@45)) (and (= ($generated@@268 ($generated@@326 $generated@@434 $generated@@435)) $generated@@435) ($generated@@141 ($generated@@326 $generated@@434 $generated@@435) $generated@@45)))
 :pattern ( ($generated@@221 $generated@@435 $generated@@45))
)))
(assert (forall (($generated@@436 T@U) ($generated@@437 T@U) ) (!  (=> (= (type $generated@@437) $generated@@66) (= ($generated@@221 ($generated@@268 $generated@@436) $generated@@437) ($generated@@141 $generated@@436 $generated@@437)))
 :pattern ( ($generated@@221 ($generated@@268 $generated@@436) $generated@@437))
)))
(assert (forall (($generated@@438 T@U) ) (! (let (($generated@@439 ($generated@@81 (type $generated@@438))))
 (=> (= (type $generated@@438) ($generated@@78 $generated@@439 $generated@@2)) (<= 0 ($generated@@281 $generated@@438))))
 :pattern ( ($generated@@281 $generated@@438))
)))
(assert (forall (($generated@@440 T@U) ) (! (let (($generated@@441 ($generated@@262 (type $generated@@440))))
 (=> (= (type $generated@@440) ($generated@@261 $generated@@441)) (<= 0 ($generated@@260 $generated@@440))))
 :pattern ( ($generated@@260 $generated@@440))
)))
(assert (forall (($generated@@443 T@U) ) (! (= (type ($generated@@442 $generated@@443)) $generated@@66)
 :pattern ( ($generated@@442 $generated@@443))
)))
(assert (forall (($generated@@444 T@U) ($generated@@445 T@U) ) (!  (=> (and (= (type $generated@@444) $generated@@66) (= (type $generated@@445) $generated@@66)) (= ($generated@@442 ($generated@@391 $generated@@444 $generated@@445)) $generated@@444))
 :pattern ( ($generated@@391 $generated@@444 $generated@@445))
)))
(assert (forall (($generated@@447 T@U) ) (! (= (type ($generated@@446 $generated@@447)) $generated@@66)
 :pattern ( ($generated@@446 $generated@@447))
)))
(assert (forall (($generated@@448 T@U) ($generated@@449 T@U) ) (!  (=> (and (= (type $generated@@448) $generated@@66) (= (type $generated@@449) $generated@@66)) (= ($generated@@446 ($generated@@391 $generated@@448 $generated@@449)) $generated@@449))
 :pattern ( ($generated@@391 $generated@@448 $generated@@449))
)))
(assert (forall (($generated@@450 T@U) ($generated@@451 T@U) ) (!  (=> (and (= (type $generated@@450) $generated@@66) (= (type $generated@@451) $generated@@66)) (= ($generated@@74 ($generated@@391 $generated@@450 $generated@@451)) $generated@@58))
 :pattern ( ($generated@@391 $generated@@450 $generated@@451))
)))
(assert (forall (($generated@@453 T@U) ) (! (= (type ($generated@@452 $generated@@453)) $generated@@66)
 :pattern ( ($generated@@452 $generated@@453))
)))
(assert (forall (($generated@@454 T@U) ($generated@@455 T@U) ) (!  (=> (and (= (type $generated@@454) $generated@@66) (= (type $generated@@455) $generated@@66)) (= ($generated@@452 ($generated@@399 $generated@@454 $generated@@455)) $generated@@454))
 :pattern ( ($generated@@399 $generated@@454 $generated@@455))
)))
(assert (forall (($generated@@457 T@U) ) (! (= (type ($generated@@456 $generated@@457)) $generated@@66)
 :pattern ( ($generated@@456 $generated@@457))
)))
(assert (forall (($generated@@458 T@U) ($generated@@459 T@U) ) (!  (=> (and (= (type $generated@@458) $generated@@66) (= (type $generated@@459) $generated@@66)) (= ($generated@@456 ($generated@@399 $generated@@458 $generated@@459)) $generated@@459))
 :pattern ( ($generated@@399 $generated@@458 $generated@@459))
)))
(assert (forall (($generated@@460 T@U) ($generated@@461 T@U) ) (!  (=> (and (= (type $generated@@460) $generated@@66) (= (type $generated@@461) $generated@@66)) (= ($generated@@74 ($generated@@399 $generated@@460 $generated@@461)) $generated@@59))
 :pattern ( ($generated@@399 $generated@@460 $generated@@461))
)))
(assert (forall (($generated@@462 T@U) ($generated@@463 T@U) ) (!  (=> (and (= (type $generated@@462) $generated@@154) (= (type $generated@@463) $generated@@154)) (= ($generated@@253 ($generated@@220 $generated@@462 $generated@@463)) $generated@@62))
 :pattern ( ($generated@@220 $generated@@462 $generated@@463))
)))
(assert (forall (($generated@@465 T@U) ) (! (= (type ($generated@@464 $generated@@465)) $generated@@66)
 :pattern ( ($generated@@464 $generated@@465))
)))
(assert (forall (($generated@@466 T@U) ($generated@@467 T@U) ) (!  (=> (and (= (type $generated@@466) $generated@@66) (= (type $generated@@467) $generated@@66)) (= ($generated@@464 ($generated@@144 $generated@@466 $generated@@467)) $generated@@466))
 :pattern ( ($generated@@144 $generated@@466 $generated@@467))
)))
(assert (forall (($generated@@469 T@U) ) (! (= (type ($generated@@468 $generated@@469)) $generated@@66)
 :pattern ( ($generated@@468 $generated@@469))
)))
(assert (forall (($generated@@470 T@U) ($generated@@471 T@U) ) (!  (=> (and (= (type $generated@@470) $generated@@66) (= (type $generated@@471) $generated@@66)) (= ($generated@@468 ($generated@@144 $generated@@470 $generated@@471)) $generated@@471))
 :pattern ( ($generated@@144 $generated@@470 $generated@@471))
)))
(assert (forall (($generated@@472 T@U) ($generated@@473 T@U) ) (!  (=> (and (= (type $generated@@472) $generated@@154) (= (type $generated@@473) $generated@@154)) (= ($generated@@152 ($generated@@220 $generated@@472 $generated@@473)) $generated@@472))
 :pattern ( ($generated@@220 $generated@@472 $generated@@473))
)))
(assert (forall (($generated@@474 T@U) ($generated@@475 T@U) ) (!  (=> (and (= (type $generated@@474) $generated@@154) (= (type $generated@@475) $generated@@154)) (= ($generated@@153 ($generated@@220 $generated@@474 $generated@@475)) $generated@@475))
 :pattern ( ($generated@@220 $generated@@474 $generated@@475))
)))
(assert  (and (forall (($generated@@478 T@U) ) (! (= (type ($generated@@476 $generated@@478)) $generated@@66)
 :pattern ( ($generated@@476 $generated@@478))
)) (forall (($generated@@479 T@U) ($generated@@480 Int) ) (! (let (($generated@@481 ($generated@@262 (type $generated@@479))))
(= (type ($generated@@477 $generated@@479 $generated@@480)) $generated@@481))
 :pattern ( ($generated@@477 $generated@@479 $generated@@480))
))))
(assert (forall (($generated@@482 T@U) ($generated@@483 T@U) ($generated@@484 T@U) ) (!  (=> (and (and (= (type $generated@@482) ($generated@@261 $generated@@154)) (= (type $generated@@483) $generated@@66)) (= (type $generated@@484) ($generated@@78 $generated@@79 $generated@@80))) (= ($generated@@76 $generated@@482 ($generated@@476 $generated@@483) $generated@@484) (forall (($generated@@485 Int) ) (!  (=> (and (<= 0 $generated@@485) (< $generated@@485 ($generated@@260 $generated@@482))) ($generated@@247 ($generated@@477 $generated@@482 $generated@@485) $generated@@483 $generated@@484))
 :pattern ( ($generated@@477 $generated@@482 $generated@@485))
))))
 :pattern ( ($generated@@76 $generated@@482 ($generated@@476 $generated@@483) $generated@@484))
)))
(assert (forall (($generated@@487 Int) ) (! (= ($generated@@486 ($generated@@77 $generated@@487)) $generated@@487)
 :pattern ( ($generated@@77 $generated@@487))
)))
(assert (forall (($generated@@489 T@U) ) (! (= (type ($generated@@488 $generated@@489)) $generated@@66)
 :pattern ( ($generated@@488 $generated@@489))
)))
(assert (forall (($generated@@490 T@U) ) (!  (=> (= (type $generated@@490) $generated@@66) (= ($generated@@488 ($generated@@230 $generated@@490)) $generated@@490))
 :pattern ( ($generated@@230 $generated@@490))
)))
(assert (forall (($generated@@491 T@U) ) (!  (=> (= (type $generated@@491) $generated@@66) (= ($generated@@74 ($generated@@230 $generated@@491)) $generated@@54))
 :pattern ( ($generated@@230 $generated@@491))
)))
(assert (forall (($generated@@493 T@U) ) (! (= (type ($generated@@492 $generated@@493)) $generated@@66)
 :pattern ( ($generated@@492 $generated@@493))
)))
(assert (forall (($generated@@494 T@U) ) (!  (=> (= (type $generated@@494) $generated@@66) (= ($generated@@492 ($generated@@235 $generated@@494)) $generated@@494))
 :pattern ( ($generated@@235 $generated@@494))
)))
(assert (forall (($generated@@495 T@U) ) (!  (=> (= (type $generated@@495) $generated@@66) (= ($generated@@74 ($generated@@235 $generated@@495)) $generated@@55))
 :pattern ( ($generated@@235 $generated@@495))
)))
(assert (forall (($generated@@497 T@U) ) (! (= (type ($generated@@496 $generated@@497)) $generated@@66)
 :pattern ( ($generated@@496 $generated@@497))
)))
(assert (forall (($generated@@498 T@U) ) (!  (=> (= (type $generated@@498) $generated@@66) (= ($generated@@496 ($generated@@159 $generated@@498)) $generated@@498))
 :pattern ( ($generated@@159 $generated@@498))
)))
(assert (forall (($generated@@499 T@U) ) (!  (=> (= (type $generated@@499) $generated@@66) (= ($generated@@74 ($generated@@159 $generated@@499)) $generated@@56))
 :pattern ( ($generated@@159 $generated@@499))
)))
(assert (forall (($generated@@501 T@U) ) (! (= (type ($generated@@500 $generated@@501)) $generated@@66)
 :pattern ( ($generated@@500 $generated@@501))
)))
(assert (forall (($generated@@502 T@U) ) (!  (=> (= (type $generated@@502) $generated@@66) (= ($generated@@500 ($generated@@476 $generated@@502)) $generated@@502))
 :pattern ( ($generated@@476 $generated@@502))
)))
(assert (forall (($generated@@503 T@U) ) (!  (=> (= (type $generated@@503) $generated@@66) (= ($generated@@74 ($generated@@476 $generated@@503)) $generated@@57))
 :pattern ( ($generated@@476 $generated@@503))
)))
(assert (forall (($generated@@504 T@U) ) (! (let (($generated@@505 (type $generated@@504)))
(= ($generated@@326 $generated@@505 ($generated@@268 $generated@@504)) $generated@@504))
 :pattern ( ($generated@@268 $generated@@504))
)))
(assert (forall (($generated@@506 T@U) ($generated@@507 T@U) ($generated@@508 T@U) ) (!  (=> (and (and (= (type $generated@@506) ($generated@@289 $generated@@154 $generated@@154)) (= (type $generated@@507) $generated@@66)) (= (type $generated@@508) $generated@@66)) (= ($generated@@141 $generated@@506 ($generated@@391 $generated@@507 $generated@@508)) (forall (($generated@@509 T@U) ) (!  (=> (and (= (type $generated@@509) $generated@@154) ($generated@@0 ($generated@@83 ($generated@@287 $generated@@506) $generated@@509))) (and ($generated@@221 ($generated@@83 ($generated@@366 $generated@@506) $generated@@509) $generated@@508) ($generated@@221 $generated@@509 $generated@@507)))
 :pattern ( ($generated@@83 ($generated@@366 $generated@@506) $generated@@509))
 :pattern ( ($generated@@83 ($generated@@287 $generated@@506) $generated@@509))
))))
 :pattern ( ($generated@@141 $generated@@506 ($generated@@391 $generated@@507 $generated@@508)))
)))
(assert (forall (($generated@@510 T@U) ($generated@@511 T@U) ($generated@@512 T@U) ) (!  (=> (and (and (= (type $generated@@510) ($generated@@307 $generated@@154 $generated@@154)) (= (type $generated@@511) $generated@@66)) (= (type $generated@@512) $generated@@66)) (= ($generated@@141 $generated@@510 ($generated@@399 $generated@@511 $generated@@512)) (forall (($generated@@513 T@U) ) (!  (=> (and (= (type $generated@@513) $generated@@154) ($generated@@0 ($generated@@83 ($generated@@305 $generated@@510) $generated@@513))) (and ($generated@@221 ($generated@@83 ($generated@@374 $generated@@510) $generated@@513) $generated@@512) ($generated@@221 $generated@@513 $generated@@511)))
 :pattern ( ($generated@@83 ($generated@@374 $generated@@510) $generated@@513))
 :pattern ( ($generated@@83 ($generated@@305 $generated@@510) $generated@@513))
))))
 :pattern ( ($generated@@141 $generated@@510 ($generated@@399 $generated@@511 $generated@@512)))
)))
(assert (forall (($generated@@516 T@U) ($generated@@517 T@U) ) (!  (=> (and (= (type $generated@@516) $generated@@154) (= (type $generated@@517) $generated@@154)) (< ($generated@@514 $generated@@516) ($generated@@515 ($generated@@220 $generated@@516 $generated@@517))))
 :pattern ( ($generated@@220 $generated@@516 $generated@@517))
)))
(assert (forall (($generated@@518 T@U) ($generated@@519 T@U) ) (!  (=> (and (= (type $generated@@518) $generated@@154) (= (type $generated@@519) $generated@@154)) (< ($generated@@514 $generated@@519) ($generated@@515 ($generated@@220 $generated@@518 $generated@@519))))
 :pattern ( ($generated@@220 $generated@@518 $generated@@519))
)))
(assert (forall (($generated@@520 T@U) ($generated@@521 T@U) ($generated@@522 T@U) ) (!  (=> (and (and (and (= (type $generated@@520) $generated@@154) (= (type $generated@@521) $generated@@66)) (= (type $generated@@522) $generated@@66)) ($generated@@221 $generated@@520 ($generated@@391 $generated@@521 $generated@@522))) (and (= ($generated@@268 ($generated@@326 ($generated@@289 $generated@@154 $generated@@154) $generated@@520)) $generated@@520) ($generated@@141 ($generated@@326 ($generated@@289 $generated@@154 $generated@@154) $generated@@520) ($generated@@391 $generated@@521 $generated@@522))))
 :pattern ( ($generated@@221 $generated@@520 ($generated@@391 $generated@@521 $generated@@522)))
)))
(assert (forall (($generated@@523 T@U) ($generated@@524 T@U) ($generated@@525 T@U) ) (!  (=> (and (and (and (= (type $generated@@523) $generated@@154) (= (type $generated@@524) $generated@@66)) (= (type $generated@@525) $generated@@66)) ($generated@@221 $generated@@523 ($generated@@399 $generated@@524 $generated@@525))) (and (= ($generated@@268 ($generated@@326 ($generated@@307 $generated@@154 $generated@@154) $generated@@523)) $generated@@523) ($generated@@141 ($generated@@326 ($generated@@307 $generated@@154 $generated@@154) $generated@@523) ($generated@@399 $generated@@524 $generated@@525))))
 :pattern ( ($generated@@221 $generated@@523 ($generated@@399 $generated@@524 $generated@@525)))
)))
(assert (forall (($generated@@526 T@U) ($generated@@527 T@U) ($generated@@528 T@U) ) (!  (=> (and (and (and (= (type $generated@@526) $generated@@66) (= (type $generated@@527) $generated@@66)) (= (type $generated@@528) $generated@@154)) ($generated@@221 $generated@@528 ($generated@@144 $generated@@526 $generated@@527))) (and (= ($generated@@268 ($generated@@326 $generated@@145 $generated@@528)) $generated@@528) ($generated@@141 ($generated@@326 $generated@@145 $generated@@528) ($generated@@144 $generated@@526 $generated@@527))))
 :pattern ( ($generated@@221 $generated@@528 ($generated@@144 $generated@@526 $generated@@527)))
)))
(assert (forall (($generated@@529 T@U) ) (! (let (($generated@@530 (type $generated@@529)))
 (not ($generated@@0 ($generated@@83 ($generated@@410 $generated@@530) $generated@@529))))
 :pattern ( (let (($generated@@530 (type $generated@@529)))
($generated@@83 ($generated@@410 $generated@@530) $generated@@529)))
)))
(assert (forall (($generated@@532 T@U) ) (! (= (type ($generated@@531 $generated@@532)) $generated@@71)
 :pattern ( ($generated@@531 $generated@@532))
)))
(assert (forall (($generated@@533 T@U) ($generated@@534 T@U) ) (!  (=> (and (= (type $generated@@533) $generated@@66) (= (type $generated@@534) $generated@@66)) (and (= ($generated@@74 ($generated@@144 $generated@@533 $generated@@534)) $generated@@63) (= ($generated@@531 ($generated@@144 $generated@@533 $generated@@534)) $generated@@65)))
 :pattern ( ($generated@@144 $generated@@533 $generated@@534))
)))
(assert (forall (($generated@@535 T@U) ) (!  (=> (= (type $generated@@535) $generated@@145) (= ($generated@@514 ($generated@@268 $generated@@535)) ($generated@@515 $generated@@535)))
 :pattern ( ($generated@@514 ($generated@@268 $generated@@535)))
)))
(assert (forall (($generated@@536 T@U) ) (!  (=> (and (= (type $generated@@536) $generated@@154) ($generated@@221 $generated@@536 ($generated@@77 0))) (and (= ($generated@@268 ($generated@@326 $generated@@2 $generated@@536)) $generated@@536) ($generated@@141 ($generated@@326 ($generated@@78 $generated@@154 $generated@@4) $generated@@536) ($generated@@77 0))))
 :pattern ( ($generated@@221 $generated@@536 ($generated@@77 0)))
)))
(assert (forall (($generated@@537 T@U) ($generated@@538 T@U) ) (!  (=> (and (and (= (type $generated@@537) $generated@@154) (= (type $generated@@538) $generated@@66)) ($generated@@221 $generated@@537 ($generated@@230 $generated@@538))) (and (= ($generated@@268 ($generated@@326 ($generated@@78 $generated@@154 $generated@@4) $generated@@537)) $generated@@537) ($generated@@141 ($generated@@326 ($generated@@78 $generated@@154 $generated@@4) $generated@@537) ($generated@@230 $generated@@538))))
 :pattern ( ($generated@@221 $generated@@537 ($generated@@230 $generated@@538)))
)))
(assert (forall (($generated@@539 T@U) ($generated@@540 T@U) ) (!  (=> (and (and (= (type $generated@@539) $generated@@154) (= (type $generated@@540) $generated@@66)) ($generated@@221 $generated@@539 ($generated@@235 $generated@@540))) (and (= ($generated@@268 ($generated@@326 ($generated@@78 $generated@@154 $generated@@4) $generated@@539)) $generated@@539) ($generated@@141 ($generated@@326 ($generated@@78 $generated@@154 $generated@@4) $generated@@539) ($generated@@235 $generated@@540))))
 :pattern ( ($generated@@221 $generated@@539 ($generated@@235 $generated@@540)))
)))
(assert (forall (($generated@@541 T@U) ($generated@@542 T@U) ) (!  (=> (and (and (= (type $generated@@541) $generated@@154) (= (type $generated@@542) $generated@@66)) ($generated@@221 $generated@@541 ($generated@@159 $generated@@542))) (and (= ($generated@@268 ($generated@@326 ($generated@@78 $generated@@154 $generated@@2) $generated@@541)) $generated@@541) ($generated@@141 ($generated@@326 ($generated@@78 $generated@@154 $generated@@2) $generated@@541) ($generated@@159 $generated@@542))))
 :pattern ( ($generated@@221 $generated@@541 ($generated@@159 $generated@@542)))
)))
(assert (forall (($generated@@543 T@U) ($generated@@544 T@U) ) (!  (=> (and (and (= (type $generated@@543) $generated@@154) (= (type $generated@@544) $generated@@66)) ($generated@@221 $generated@@543 ($generated@@476 $generated@@544))) (and (= ($generated@@268 ($generated@@326 ($generated@@261 $generated@@154) $generated@@543)) $generated@@543) ($generated@@141 ($generated@@326 ($generated@@261 $generated@@154) $generated@@543) ($generated@@476 $generated@@544))))
 :pattern ( ($generated@@221 $generated@@543 ($generated@@476 $generated@@544)))
)))
(assert (= ($generated@@74 $generated@@138) $generated@@61))
(assert (= ($generated@@531 $generated@@138) $generated@@64))
(assert (forall (($generated@@545 T@U) ($generated@@546 T@U) ($generated@@547 T@U) ) (!  (=> (and (and (= (type $generated@@545) ($generated@@78 $generated@@154 $generated@@2)) (= (type $generated@@546) $generated@@66)) (= (type $generated@@547) ($generated@@78 $generated@@79 $generated@@80))) (= ($generated@@76 $generated@@545 ($generated@@159 $generated@@546) $generated@@547) (forall (($generated@@548 T@U) ) (!  (=> (and (= (type $generated@@548) $generated@@154) (< 0 ($generated ($generated@@83 $generated@@545 $generated@@548)))) ($generated@@247 $generated@@548 $generated@@546 $generated@@547))
 :pattern ( ($generated@@83 $generated@@545 $generated@@548))
))))
 :pattern ( ($generated@@76 $generated@@545 ($generated@@159 $generated@@546) $generated@@547))
)))
(assert (forall (($generated@@549 T@U) ($generated@@550 T@U) ($generated@@551 T@U) ) (!  (=> (and (and (and (= (type $generated@@549) $generated@@145) (= (type $generated@@550) $generated@@66)) (= (type $generated@@551) ($generated@@78 $generated@@79 $generated@@80))) (and ($generated@@246 $generated@@551) (and ($generated@@143 $generated@@549) (exists (($generated@@552 T@U) ) (!  (and (= (type $generated@@552) $generated@@66) ($generated@@76 $generated@@549 ($generated@@144 $generated@@550 $generated@@552) $generated@@551))
 :pattern ( ($generated@@76 $generated@@549 ($generated@@144 $generated@@550 $generated@@552) $generated@@551))
))))) ($generated@@247 ($generated@@152 $generated@@549) $generated@@550 $generated@@551))
 :pattern ( ($generated@@247 ($generated@@152 $generated@@549) $generated@@550 $generated@@551))
)))
(assert (forall (($generated@@553 T@U) ($generated@@554 T@U) ($generated@@555 T@U) ) (!  (=> (and (and (and (= (type $generated@@553) $generated@@145) (= (type $generated@@554) $generated@@66)) (= (type $generated@@555) ($generated@@78 $generated@@79 $generated@@80))) (and ($generated@@246 $generated@@555) (and ($generated@@143 $generated@@553) (exists (($generated@@556 T@U) ) (!  (and (= (type $generated@@556) $generated@@66) ($generated@@76 $generated@@553 ($generated@@144 $generated@@556 $generated@@554) $generated@@555))
 :pattern ( ($generated@@76 $generated@@553 ($generated@@144 $generated@@556 $generated@@554) $generated@@555))
))))) ($generated@@247 ($generated@@153 $generated@@553) $generated@@554 $generated@@555))
 :pattern ( ($generated@@247 ($generated@@153 $generated@@553) $generated@@554 $generated@@555))
)))
(assert (forall (($generated@@557 T@U) ($generated@@558 T@U) ) (!  (=> (and (= (type $generated@@557) $generated@@154) (= (type $generated@@558) $generated@@154)) (= ($generated@@220 ($generated@@242 $generated@@557) ($generated@@242 $generated@@558)) ($generated@@242 ($generated@@220 $generated@@557 $generated@@558))))
 :pattern ( ($generated@@220 ($generated@@242 $generated@@557) ($generated@@242 $generated@@558)))
)))
(assert (forall (($generated@@559 Int) ) (! (= ($generated@@268 ($generated@@8 ($generated@@240 $generated@@559))) ($generated@@242 ($generated@@268 ($generated@@8 $generated@@559))))
 :pattern ( ($generated@@268 ($generated@@8 ($generated@@240 $generated@@559))))
)))
(assert (forall (($generated@@560 T@U) ) (! (= ($generated@@268 ($generated@@242 $generated@@560)) ($generated@@242 ($generated@@268 $generated@@560)))
 :pattern ( ($generated@@268 ($generated@@242 $generated@@560)))
)))
(assert (forall (($generated@@561 T@U) ) (! (let (($generated@@562 ($generated@@262 (type $generated@@561))))
 (=> (and (= (type $generated@@561) ($generated@@261 $generated@@562)) (= ($generated@@260 $generated@@561) 0)) (= $generated@@561 ($generated@@259 $generated@@562))))
 :pattern ( ($generated@@260 $generated@@561))
)))
(assert (forall (($generated@@563 T@U) ($generated@@564 T@U) ($generated@@565 T@U) ) (! (let (($generated@@566 (type $generated@@564)))
 (=> (and (and (= (type $generated@@563) ($generated@@78 $generated@@566 $generated@@2)) (= (type $generated@@565) $generated@@2)) (<= 0 ($generated $generated@@565))) (= ($generated@@281 ($generated@@84 $generated@@563 $generated@@564 $generated@@565)) (+ (- ($generated@@281 $generated@@563) ($generated ($generated@@83 $generated@@563 $generated@@564))) ($generated $generated@@565)))))
 :pattern ( ($generated@@281 ($generated@@84 $generated@@563 $generated@@564 $generated@@565)))
)))
(assert (forall (($generated@@567 T@U) ($generated@@568 T@U) ) (!  (=> (and (= (type $generated@@567) ($generated@@78 $generated@@79 $generated@@80)) (= (type $generated@@568) $generated@@2)) ($generated@@76 $generated@@568 $generated@@46 $generated@@567))
 :pattern ( ($generated@@76 $generated@@568 $generated@@46 $generated@@567))
)))
(assert (forall (($generated@@569 T@U) ($generated@@570 T@U) ) (!  (=> (and (= (type $generated@@569) ($generated@@78 $generated@@79 $generated@@80)) (= (type $generated@@570) $generated@@3)) ($generated@@76 $generated@@570 $generated@@47 $generated@@569))
 :pattern ( ($generated@@76 $generated@@570 $generated@@47 $generated@@569))
)))
(assert (forall (($generated@@571 T@U) ($generated@@572 T@U) ) (!  (=> (and (= (type $generated@@571) ($generated@@78 $generated@@79 $generated@@80)) (= (type $generated@@572) $generated@@4)) ($generated@@76 $generated@@572 $generated@@44 $generated@@571))
 :pattern ( ($generated@@76 $generated@@572 $generated@@44 $generated@@571))
)))
(assert (forall (($generated@@573 T@U) ($generated@@574 T@U) ) (!  (=> (and (= (type $generated@@573) ($generated@@78 $generated@@79 $generated@@80)) (= (type $generated@@574) $generated@@434)) ($generated@@76 $generated@@574 $generated@@45 $generated@@573))
 :pattern ( ($generated@@76 $generated@@574 $generated@@45 $generated@@573))
)))
(assert (forall (($generated@@575 T@U) ($generated@@576 T@U) ) (!  (=> (and (= (type $generated@@575) ($generated@@78 $generated@@79 $generated@@80)) (= (type $generated@@576) $generated@@154)) ($generated@@76 $generated@@576 $generated@@48 $generated@@575))
 :pattern ( ($generated@@76 $generated@@576 $generated@@48 $generated@@575))
)))
(assert (forall (($generated@@577 T@U) ($generated@@578 T@U) ) (!  (=> (and (= (type $generated@@577) ($generated@@261 $generated@@154)) (= (type $generated@@578) $generated@@66)) (= ($generated@@141 $generated@@577 ($generated@@476 $generated@@578)) (forall (($generated@@579 Int) ) (!  (=> (and (<= 0 $generated@@579) (< $generated@@579 ($generated@@260 $generated@@577))) ($generated@@221 ($generated@@477 $generated@@577 $generated@@579) $generated@@578))
 :pattern ( ($generated@@477 $generated@@577 $generated@@579))
))))
 :pattern ( ($generated@@141 $generated@@577 ($generated@@476 $generated@@578)))
)))
(assert (forall (($generated@@581 T@U) ($generated@@582 Int) ) (!  (=> (= (type $generated@@581) ($generated@@261 $generated@@154)) (=> (and (<= 0 $generated@@582) (< $generated@@582 ($generated@@260 $generated@@581))) (< ($generated@@515 ($generated@@326 $generated@@145 ($generated@@477 $generated@@581 $generated@@582))) ($generated@@580 $generated@@581))))
 :pattern ( ($generated@@515 ($generated@@326 $generated@@145 ($generated@@477 $generated@@581 $generated@@582))))
)))
(assert (forall (($generated@@583 T@U) ($generated@@584 T@U) ($generated@@585 T@U) ) (!  (=> (and (and (and (= (type $generated@@583) ($generated@@289 $generated@@154 $generated@@154)) (= (type $generated@@584) $generated@@66)) (= (type $generated@@585) $generated@@66)) ($generated@@141 $generated@@583 ($generated@@391 $generated@@584 $generated@@585))) (and (and ($generated@@141 ($generated@@287 $generated@@583) ($generated@@230 $generated@@584)) ($generated@@141 ($generated@@334 $generated@@583) ($generated@@230 $generated@@585))) ($generated@@141 ($generated@@365 $generated@@583) ($generated@@230 ($generated@@144 $generated@@584 $generated@@585)))))
 :pattern ( ($generated@@141 $generated@@583 ($generated@@391 $generated@@584 $generated@@585)))
)))
(assert (forall (($generated@@586 T@U) ($generated@@587 T@U) ($generated@@588 T@U) ) (!  (=> (and (and (and (= (type $generated@@586) ($generated@@307 $generated@@154 $generated@@154)) (= (type $generated@@587) $generated@@66)) (= (type $generated@@588) $generated@@66)) ($generated@@141 $generated@@586 ($generated@@399 $generated@@587 $generated@@588))) (and (and ($generated@@141 ($generated@@305 $generated@@586) ($generated@@235 $generated@@587)) ($generated@@141 ($generated@@345 $generated@@586) ($generated@@235 $generated@@588))) ($generated@@141 ($generated@@373 $generated@@586) ($generated@@235 ($generated@@144 $generated@@587 $generated@@588)))))
 :pattern ( ($generated@@141 $generated@@586 ($generated@@399 $generated@@587 $generated@@588)))
)))
(assert (forall (($generated@@589 T@U) ) (!  (=> (= (type $generated@@589) $generated@@2) ($generated@@141 $generated@@589 $generated@@46))
 :pattern ( ($generated@@141 $generated@@589 $generated@@46))
)))
(assert (forall (($generated@@590 T@U) ) (!  (=> (= (type $generated@@590) $generated@@3) ($generated@@141 $generated@@590 $generated@@47))
 :pattern ( ($generated@@141 $generated@@590 $generated@@47))
)))
(assert (forall (($generated@@591 T@U) ) (!  (=> (= (type $generated@@591) $generated@@4) ($generated@@141 $generated@@591 $generated@@44))
 :pattern ( ($generated@@141 $generated@@591 $generated@@44))
)))
(assert (forall (($generated@@592 T@U) ) (!  (=> (= (type $generated@@592) $generated@@434) ($generated@@141 $generated@@592 $generated@@45))
 :pattern ( ($generated@@141 $generated@@592 $generated@@45))
)))
(assert (forall (($generated@@593 T@U) ) (!  (=> (= (type $generated@@593) $generated@@154) ($generated@@141 $generated@@593 $generated@@48))
 :pattern ( ($generated@@141 $generated@@593 $generated@@48))
)))
(push 1)
(declare-fun ControlFlow (Int Int) Int)
(declare-fun $generated@@594 () Int)
(declare-fun $generated@@595 () Int)
(declare-fun $generated@@596 () Int)
(declare-fun $generated@@597 () Int)
(declare-fun $generated@@598 () Int)
(declare-fun $generated@@599 () Int)
(declare-fun $generated@@600 () Bool)
(declare-fun $generated@@601 () Int)
(declare-fun $generated@@602 () Bool)
(declare-fun $generated@@603 () Int)
(declare-fun $generated@@604 () Int)
(declare-fun $generated@@605 () Int)
(declare-fun $generated@@606 () Int)
(declare-fun $generated@@607 () Int)
(declare-fun $generated@@608 () Int)
(declare-fun $generated@@609 () Int)
(declare-fun $generated@@610 () T@U)
(declare-fun $generated@@611 () T@U)
(declare-fun $generated@@612 () T@U)
(declare-fun $generated@@613 () Int)
(declare-fun $generated@@614 () Int)
(declare-fun $generated@@615 () Int)
(declare-fun $generated@@616 (T@U) Bool)
(declare-fun $generated@@617 () Int)
(declare-fun $generated@@618 () Int)
(assert  (and (and (= (type $generated@@610) ($generated@@78 $generated@@79 $generated@@80)) (= (type $generated@@611) $generated@@79)) (= (type $generated@@612) ($generated@@166 $generated@@79 $generated@@4))))
(set-option :timeout 0)
(set-option :rlimit 0)
(assert (not
 (=> (= (ControlFlow 0 0) 40) (let (($generated@@619  (=> (= (ControlFlow 0 31) (- 0 30)) (= $generated@@594 ($generated@@240 25)))))
(let (($generated@@620  (=> (= $generated@@595 $generated@@596) (=> (and (= $generated@@594 $generated@@597) (= (ControlFlow 0 32) 31)) $generated@@619))))
(let (($generated@@621 true))
(let (($generated@@622  (=> (and (or (and (<= $generated@@598 ($generated@@240 7)) (<= $generated@@598 $generated@@599)) (= $generated@@598 ($generated@@240 7))) (= (ControlFlow 0 20) 18)) $generated@@621)))
(let (($generated@@623  (=> (and (not (or (and (<= $generated@@598 ($generated@@240 7)) (<= $generated@@598 $generated@@599)) (= $generated@@598 ($generated@@240 7)))) (= (ControlFlow 0 19) 18)) $generated@@621)))
(let (($generated@@624  (=> (and (<= $generated@@598 ($generated@@240 7)) (<= $generated@@598 $generated@@599)) (and (=> (= (ControlFlow 0 22) 19) $generated@@623) (=> (= (ControlFlow 0 22) 20) $generated@@622)))))
(let (($generated@@625  (=> (not (and (<= $generated@@598 ($generated@@240 7)) (<= $generated@@598 $generated@@599))) (and (=> (= (ControlFlow 0 21) 19) $generated@@623) (=> (= (ControlFlow 0 21) 20) $generated@@622)))))
(let (($generated@@626  (=> (< ($generated@@240 7) $generated@@598) (and (=> (= (ControlFlow 0 24) 21) $generated@@625) (=> (= (ControlFlow 0 24) 22) $generated@@624)))))
(let (($generated@@627  (=> (<= $generated@@598 ($generated@@240 7)) (and (=> (= (ControlFlow 0 23) 21) $generated@@625) (=> (= (ControlFlow 0 23) 22) $generated@@624)))))
(let (($generated@@628  (=> (not $generated@@600) (and (=> (= (ControlFlow 0 25) 23) $generated@@627) (=> (= (ControlFlow 0 25) 24) $generated@@626)))))
(let (($generated@@629  (=> (and (and (= $generated@@601 (+ $generated@@595 1)) (= (ControlFlow 0 9) (- 0 8))) $generated@@602) (= $generated@@603 $generated@@601))))
(let (($generated@@630  (and (=> (= (ControlFlow 0 12) (- 0 13)) ($generated@@141 ($generated@@8 (+ $generated@@597 1)) $generated@@138)) (=> ($generated@@141 ($generated@@8 (+ $generated@@597 1)) $generated@@138) (=> (= $generated@@604 (+ $generated@@597 1)) (=> (and (= $generated@@603 $generated@@604) (= (ControlFlow 0 12) 9)) $generated@@629))))))
(let (($generated@@631  (=> (and (= $generated@@598 ($generated@@240 7)) (= (ControlFlow 0 15) 12)) $generated@@630)))
(let (($generated@@632  (=> (and (<= $generated@@605 $generated@@598) (= (ControlFlow 0 14) 12)) $generated@@630)))
(let (($generated@@633  (=> (and (and (= $generated@@598 $generated@@599) (= $generated@@606 ($generated@@240 8))) (and (= $generated@@603 $generated@@597) (= (ControlFlow 0 10) 9))) $generated@@629)))
(let (($generated@@634  (=> (and (not (= $generated@@598 $generated@@599)) (= $generated@@607 (+ $generated@@598 1))) (and (=> (= (ControlFlow 0 5) (- 0 7)) (or (<= 0 $generated@@608) (= (- $generated@@605 $generated@@607) $generated@@608))) (=> (or (<= 0 $generated@@608) (= (- $generated@@605 $generated@@607) $generated@@608)) (and (=> (= (ControlFlow 0 5) (- 0 6)) (< (- $generated@@605 $generated@@607) $generated@@608)) (=> (< (- $generated@@605 $generated@@607) $generated@@608) (=> (= (ControlFlow 0 5) (- 0 4)) (=> $generated@@600 (or (or (and (<= $generated@@607 ($generated@@240 7)) (<= $generated@@607 $generated@@599)) (= $generated@@607 ($generated@@240 7))) (< $generated@@599 7)))))))))))
(let (($generated@@635  (=> (not (= $generated@@598 ($generated@@240 7))) (and (=> (= (ControlFlow 0 11) 10) $generated@@633) (=> (= (ControlFlow 0 11) 5) $generated@@634)))))
(let (($generated@@636  (=> (and (< $generated@@598 $generated@@605) (= $generated@@608 (- $generated@@605 $generated@@598))) (and (=> (= (ControlFlow 0 16) 15) $generated@@631) (=> (= (ControlFlow 0 16) 11) $generated@@635)))))
(let (($generated@@637  (=> $generated@@600 (and (=> (= (ControlFlow 0 17) 14) $generated@@632) (=> (= (ControlFlow 0 17) 16) $generated@@636)))))
(let (($generated@@638  (and (=> (= (ControlFlow 0 26) 25) $generated@@628) (=> (= (ControlFlow 0 26) 17) $generated@@637))))
(let (($generated@@639 true))
(let (($generated@@640  (=> (and (and (and (and (and (and (and (and (and (<= 0 $generated@@597) (not false)) (<= 0 $generated@@595)) (= $generated@@609 0)) (= $generated@@596 25)) $generated@@602) (and (<= 0 $generated@@598) (< $generated@@598 8))) (=> $generated@@600 true)) (and (=> $generated@@600 (or (or (and (<= $generated@@598 ($generated@@240 7)) (<= $generated@@598 $generated@@599)) (= $generated@@598 ($generated@@240 7))) (< $generated@@599 7))) (forall (($generated@@641 T@U) ) (!  (=> (= (type $generated@@641) $generated@@79) (=> (and (not (= $generated@@641 $generated@@611)) ($generated@@0 ($generated@@85 ($generated@@83 $generated@@610 $generated@@641) $generated@@60))) (= ($generated@@83 $generated@@610 $generated@@641) ($generated@@83 $generated@@610 $generated@@641))))
 :pattern ( ($generated@@83 $generated@@610 $generated@@641))
)))) (and (and ($generated@@134 $generated@@610 $generated@@610) (forall (($generated@@642 T@U) ($generated@@643 T@U) ) (! (let (($generated@@644 ($generated@@69 (type $generated@@643))))
 (=> (and (and (= (type $generated@@642) $generated@@79) (= (type $generated@@643) ($generated@@68 $generated@@644))) (and (not (= $generated@@642 $generated@@611)) ($generated@@0 ($generated@@85 ($generated@@83 $generated@@610 $generated@@642) $generated@@60)))) (or (= ($generated@@85 ($generated@@83 $generated@@610 $generated@@642) $generated@@643) ($generated@@85 ($generated@@83 $generated@@610 $generated@@642) $generated@@643)) ($generated@@0 ($generated@@164 $generated@@612 $generated@@642 $generated@@643)))))
 :pattern ( ($generated@@85 ($generated@@83 $generated@@610 $generated@@642) $generated@@643))
))) (and (<= (- $generated@@605 $generated@@598) $generated@@613) (=> (= (- $generated@@605 $generated@@598) $generated@@613) true)))) (and (=> (= (ControlFlow 0 27) 3) $generated@@639) (=> (= (ControlFlow 0 27) 26) $generated@@638)))))
(let (($generated@@645  (=> (not (= $generated@@595 $generated@@596)) (=> (and (= $generated@@614 ($generated@@240 0)) (= $generated@@613 (- $generated@@605 $generated@@614))) (and (=> (= (ControlFlow 0 28) (- 0 29)) (=> $generated@@600 (or (or (and (<= $generated@@614 ($generated@@240 7)) (<= $generated@@614 $generated@@599)) (= $generated@@614 ($generated@@240 7))) (< $generated@@599 7)))) (=> (=> $generated@@600 (or (or (and (<= $generated@@614 ($generated@@240 7)) (<= $generated@@614 $generated@@599)) (= $generated@@614 ($generated@@240 7))) (< $generated@@599 7))) (=> (= (ControlFlow 0 28) 27) $generated@@640)))))))
(let (($generated@@646  (=> $generated@@602 (and (=> (= (ControlFlow 0 33) 32) $generated@@620) (=> (= (ControlFlow 0 33) 28) $generated@@645)))))
(let (($generated@@647 true))
(let (($generated@@648  (and (=> (= (ControlFlow 0 34) 2) $generated@@647) (=> (= (ControlFlow 0 34) 33) $generated@@646))))
(let (($generated@@649 true))
(let (($generated@@650  (=> (<= ($generated@@240 0) $generated@@597) (=> (and (and (and (and (and (<= 0 $generated@@597) (not false)) (<= 0 $generated@@595)) (= $generated@@609 0)) (= $generated@@596 25)) (and (and (and (<= $generated@@609 $generated@@595) (<= $generated@@595 $generated@@596)) (=> $generated@@602 true)) (and (and (=> $generated@@602 (= $generated@@597 $generated@@595)) (forall (($generated@@651 T@U) ) (!  (=> (= (type $generated@@651) $generated@@79) (=> (and (not (= $generated@@651 $generated@@611)) ($generated@@0 ($generated@@85 ($generated@@83 $generated@@610 $generated@@651) $generated@@60))) (= ($generated@@83 $generated@@610 $generated@@651) ($generated@@83 $generated@@610 $generated@@651))))
 :pattern ( ($generated@@83 $generated@@610 $generated@@651))
))) (and ($generated@@134 $generated@@610 $generated@@610) (forall (($generated@@652 T@U) ($generated@@653 T@U) ) (! (let (($generated@@654 ($generated@@69 (type $generated@@653))))
 (=> (and (and (= (type $generated@@652) $generated@@79) (= (type $generated@@653) ($generated@@68 $generated@@654))) (and (not (= $generated@@652 $generated@@611)) ($generated@@0 ($generated@@85 ($generated@@83 $generated@@610 $generated@@652) $generated@@60)))) (or (= ($generated@@85 ($generated@@83 $generated@@610 $generated@@652) $generated@@653) ($generated@@85 ($generated@@83 $generated@@610 $generated@@652) $generated@@653)) ($generated@@0 ($generated@@164 $generated@@612 $generated@@652 $generated@@653)))))
 :pattern ( ($generated@@85 ($generated@@83 $generated@@610 $generated@@652) $generated@@653))
)))))) (and (=> (= (ControlFlow 0 35) 1) $generated@@649) (=> (= (ControlFlow 0 35) 34) $generated@@648))))))
(let (($generated@@655  (=> (= $generated@@612 ($generated@@165 $generated@@611 $generated@@610 $generated@@60 false)) (and (=> (= (ControlFlow 0 36) (- 0 39)) ($generated@@141 ($generated@@8 ($generated@@240 0)) $generated@@138)) (=> ($generated@@141 ($generated@@8 ($generated@@240 0)) $generated@@138) (=> (= $generated@@615 ($generated@@240 0)) (=> (and (= $generated@@609 ($generated@@240 0)) (= $generated@@596 ($generated@@240 25))) (and (=> (= (ControlFlow 0 36) (- 0 38)) (<= $generated@@609 $generated@@596)) (=> (<= $generated@@609 $generated@@596) (and (=> (= (ControlFlow 0 36) (- 0 37)) (=> $generated@@602 (= $generated@@615 $generated@@609))) (=> (=> $generated@@602 (= $generated@@615 $generated@@609)) (=> (= (ControlFlow 0 36) 35) $generated@@650))))))))))))
(let (($generated@@656  (=> (and (and (and ($generated@@246 $generated@@610) ($generated@@616 $generated@@610)) (<= ($generated@@240 0) $generated@@605)) (and (and (<= ($generated@@240 0) $generated@@599) (<= ($generated@@240 0) $generated@@617)) (and (= 1 $generated@@618) (= (ControlFlow 0 40) 36)))) $generated@@655)))
$generated@@656)))))))))))))))))))))))))))))))
))
(check-sat)
(get-info :reason-unknown)
(assert (not (= (ControlFlow 0 9) (- 8))))
(check-sat)
(pop 1)
; Invalid
(get-info :rlimit)
(reset)
(set-option :rlimit 0)
; did a full reset
(reset)
(set-option :print-success false)
(set-info :smt-lib-version 2.6)
(set-option :auto_config false)
(set-option :type_check true)
(set-option :smt.case_split 3)
(set-option :smt.qi.eager_threshold 100)
(set-option :smt.delay_units true)
(set-option :smt.arith.solver 2)
(set-option :smt.mbqi false)
(set-option :model.compact false)
(set-option :model.v2 true)
(set-option :pp.bv_literals false)
; done setting options


(set-info :category "industrial")
(declare-sort |T@U| 0)
(declare-sort |T@T| 0)
(declare-fun real_pow (Real Real) Real)
(declare-fun UOrdering2 (|T@U| |T@U|) Bool)
(declare-fun UOrdering3 (|T@T| |T@U| |T@U|) Bool)
(declare-fun tickleBool (Bool) Bool)
(assert (and (tickleBool true) (tickleBool false)))
(declare-fun $generated (T@U) Int)
(declare-fun $generated@@0 (T@U) Bool)
(declare-fun $generated@@1 (T@T) Int)
(declare-fun $generated@@2 () T@T)
(declare-fun $generated@@3 () T@T)
(declare-fun $generated@@4 () T@T)
(declare-fun $generated@@5 () T@T)
(declare-fun $generated@@6 () T@T)
(declare-fun $generated@@7 () T@T)
(declare-fun $generated@@8 (Int) T@U)
(declare-fun type (T@U) T@T)
(declare-fun $generated@@9 (Real) T@U)
(declare-fun $generated@@10 (T@U) Real)
(declare-fun $generated@@11 (Bool) T@U)
(declare-fun $generated@@12 (RoundingMode) T@U)
(declare-fun $generated@@13 (T@U) RoundingMode)
(declare-fun $generated@@14 (String) T@U)
(declare-fun $generated@@15 (T@U) String)
(declare-fun $generated@@16 ((RegEx String)) T@U)
(declare-fun $generated@@17 (T@U) (RegEx String))
(declare-fun $generated@@44 () T@U)
(declare-fun $generated@@45 () T@U)
(declare-fun $generated@@46 () T@U)
(declare-fun $generated@@47 () T@U)
(declare-fun $generated@@48 () T@U)
(declare-fun $generated@@49 () T@U)
(declare-fun $generated@@50 () T@U)
(declare-fun $generated@@51 () T@U)
(declare-fun $generated@@52 () T@U)
(declare-fun $generated@@53 () T@U)
(declare-fun $generated@@54 () T@U)
(declare-fun $generated@@55 () T@U)
(declare-fun $generated@@56 () T@U)
(declare-fun $generated@@57 () T@U)
(declare-fun $generated@@58 () T@U)
(declare-fun $generated@@59 () T@U)
(declare-fun $generated@@60 () T@U)
(declare-fun $generated@@61 () T@U)
(declare-fun $generated@@62 () T@U)
(declare-fun $generated@@63 () T@U)
(declare-fun $generated@@64 () T@U)
(declare-fun $generated@@65 () T@U)
(declare-fun $generated@@66 () T@T)
(declare-fun $generated@@67 () T@T)
(declare-fun $generated@@68 (T@T) T@T)
(declare-fun $generated@@69 (T@T) T@T)
(declare-fun $generated@@70 () T@T)
(declare-fun $generated@@71 () T@T)
(declare-fun $generated@@74 (T@U) T@U)
(declare-fun $generated@@76 (T@U T@U T@U) Bool)
(declare-fun $generated@@77 (Int) T@U)
(declare-fun $generated@@78 (T@T T@T) T@T)
(declare-fun $generated@@79 () T@T)
(declare-fun $generated@@80 () T@T)
(declare-fun $generated@@81 (T@T) T@T)
(declare-fun $generated@@82 (T@T) T@T)
(declare-fun $generated@@83 (T@U T@U) T@U)
(declare-fun $generated@@84 (T@U T@U T@U) T@U)
(declare-fun $generated@@85 (T@U T@U) T@U)
(declare-fun $generated@@86 (T@U T@U T@U) T@U)
(declare-fun $generated@@134 (T@U T@U) Bool)
(declare-fun $generated@@138 () T@U)
(declare-fun $generated@@141 (T@U T@U) Bool)
(declare-fun $generated@@143 (T@U) Bool)
(declare-fun $generated@@144 (T@U T@U) T@U)
(declare-fun $generated@@145 () T@T)
(declare-fun $generated@@151 (T@U T@U) Bool)
(declare-fun $generated@@152 (T@U) T@U)
(declare-fun $generated@@153 (T@U) T@U)
(declare-fun $generated@@154 () T@T)
(declare-fun $generated@@159 (T@U) T@U)
(declare-fun $generated@@160 (T@U) Bool)
(declare-fun $generated@@164 (T@U T@U T@U) T@U)
(declare-fun $generated@@165 (T@U T@U T@U Bool) T@U)
(declare-fun $generated@@166 (T@T T@T) T@T)
(declare-fun $generated@@167 (T@T) T@T)
(declare-fun $generated@@168 (T@T) T@T)
(declare-fun $generated@@169 (T@U T@U T@U T@U) T@U)
(declare-fun $generated@@220 (T@U T@U) T@U)
(declare-fun $generated@@221 (T@U T@U) Bool)
(declare-fun $generated@@230 (T@U) T@U)
(declare-fun $generated@@235 (T@U) T@U)
(declare-fun $generated@@240 (Int) Int)
(declare-fun $generated@@242 (T@U) T@U)
(declare-fun $generated@@246 (T@U) Bool)
(declare-fun $generated@@247 (T@U T@U T@U) Bool)
(declare-fun $generated@@253 (T@U) T@U)
(declare-fun $generated@@259 (T@T) T@U)
(declare-fun $generated@@260 (T@U) Int)
(declare-fun $generated@@261 (T@T) T@T)
(declare-fun $generated@@262 (T@T) T@T)
(declare-fun $generated@@268 (T@U) T@U)
(declare-fun $generated@@281 (T@U) Int)
(declare-fun $generated@@282 (T@T) T@U)
(declare-fun $generated@@287 (T@U) T@U)
(declare-fun $generated@@288 (T@T T@T) T@U)
(declare-fun $generated@@289 (T@T T@T) T@T)
(declare-fun $generated@@290 (T@T) T@T)
(declare-fun $generated@@291 (T@T) T@T)
(declare-fun $generated@@305 (T@U) T@U)
(declare-fun $generated@@306 (T@T T@T) T@U)
(declare-fun $generated@@307 (T@T T@T) T@T)
(declare-fun $generated@@308 (T@T) T@T)
(declare-fun $generated@@309 (T@T) T@T)
(declare-fun $generated@@326 (T@T T@U) T@U)
(declare-fun $generated@@334 (T@U) T@U)
(declare-fun $generated@@345 (T@U) T@U)
(declare-fun $generated@@365 (T@U) T@U)
(declare-fun $generated@@366 (T@U) T@U)
(declare-fun $generated@@373 (T@U) T@U)
(declare-fun $generated@@374 (T@U) T@U)
(declare-fun $generated@@391 (T@U T@U) T@U)
(declare-fun $generated@@399 (T@U T@U) T@U)
(declare-fun $generated@@410 (T@T) T@U)
(declare-fun $generated@@434 () T@T)
(declare-fun $generated@@442 (T@U) T@U)
(declare-fun $generated@@446 (T@U) T@U)
(declare-fun $generated@@452 (T@U) T@U)
(declare-fun $generated@@456 (T@U) T@U)
(declare-fun $generated@@464 (T@U) T@U)
(declare-fun $generated@@468 (T@U) T@U)
(declare-fun $generated@@476 (T@U) T@U)
(declare-fun $generated@@477 (T@U Int) T@U)
(declare-fun $generated@@486 (T@U) Int)
(declare-fun $generated@@488 (T@U) T@U)
(declare-fun $generated@@492 (T@U) T@U)
(declare-fun $generated@@496 (T@U) T@U)
(declare-fun $generated@@500 (T@U) T@U)
(declare-fun $generated@@514 (T@U) Int)
(declare-fun $generated@@515 (T@U) Int)
(declare-fun $generated@@531 (T@U) T@U)
(declare-fun $generated@@580 (T@U) Int)
(assert  (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (= ($generated@@1 $generated@@2) 0) (= ($generated@@1 $generated@@3) 1)) (= ($generated@@1 $generated@@4) 2)) (= ($generated@@1 $generated@@5) 3)) (= ($generated@@1 $generated@@6) 4)) (= ($generated@@1 $generated@@7) 5)) (forall (($generated@@18 Int) ) (! (= ($generated ($generated@@8 $generated@@18)) $generated@@18)
 :pattern ( ($generated@@8 $generated@@18))
))) (forall (($generated@@19 T@U) ) (!  (=> (= (type $generated@@19) $generated@@2) (= ($generated@@8 ($generated $generated@@19)) $generated@@19))
 :pattern ( ($generated $generated@@19))
))) (forall (($generated@@20 Int) ) (! (= (type ($generated@@8 $generated@@20)) $generated@@2)
 :pattern ( ($generated@@8 $generated@@20))
))) (forall (($generated@@21 Real) ) (! (= ($generated@@10 ($generated@@9 $generated@@21)) $generated@@21)
 :pattern ( ($generated@@9 $generated@@21))
))) (forall (($generated@@22 T@U) ) (!  (=> (= (type $generated@@22) $generated@@3) (= ($generated@@9 ($generated@@10 $generated@@22)) $generated@@22))
 :pattern ( ($generated@@10 $generated@@22))
))) (forall (($generated@@23 Real) ) (! (= (type ($generated@@9 $generated@@23)) $generated@@3)
 :pattern ( ($generated@@9 $generated@@23))
))) (forall (($generated@@24 Bool) ) (! (= ($generated@@0 ($generated@@11 $generated@@24)) $generated@@24)
 :pattern ( ($generated@@11 $generated@@24))
))) (forall (($generated@@25 T@U) ) (!  (=> (= (type $generated@@25) $generated@@4) (= ($generated@@11 ($generated@@0 $generated@@25)) $generated@@25))
 :pattern ( ($generated@@0 $generated@@25))
))) (forall (($generated@@26 Bool) ) (! (= (type ($generated@@11 $generated@@26)) $generated@@4)
 :pattern ( ($generated@@11 $generated@@26))
))) (forall (($generated@@27 RoundingMode) ) (! (= ($generated@@13 ($generated@@12 $generated@@27)) $generated@@27)
 :pattern ( ($generated@@12 $generated@@27))
))) (forall (($generated@@28 T@U) ) (!  (=> (= (type $generated@@28) $generated@@5) (= ($generated@@12 ($generated@@13 $generated@@28)) $generated@@28))
 :pattern ( ($generated@@13 $generated@@28))
))) (forall (($generated@@29 RoundingMode) ) (! (= (type ($generated@@12 $generated@@29)) $generated@@5)
 :pattern ( ($generated@@12 $generated@@29))
))) (forall (($generated@@30 String) ) (! (= ($generated@@15 ($generated@@14 $generated@@30)) $generated@@30)
 :pattern ( ($generated@@14 $generated@@30))
))) (forall (($generated@@31 T@U) ) (!  (=> (= (type $generated@@31) $generated@@6) (= ($generated@@14 ($generated@@15 $generated@@31)) $generated@@31))
 :pattern ( ($generated@@15 $generated@@31))
))) (forall (($generated@@32 String) ) (! (= (type ($generated@@14 $generated@@32)) $generated@@6)
 :pattern ( ($generated@@14 $generated@@32))
))) (forall (($generated@@33 (RegEx String)) ) (! (= ($generated@@17 ($generated@@16 $generated@@33)) $generated@@33)
 :pattern ( ($generated@@16 $generated@@33))
))) (forall (($generated@@34 T@U) ) (!  (=> (= (type $generated@@34) $generated@@7) (= ($generated@@16 ($generated@@17 $generated@@34)) $generated@@34))
 :pattern ( ($generated@@17 $generated@@34))
))) (forall (($generated@@35 (RegEx String)) ) (! (= (type ($generated@@16 $generated@@35)) $generated@@7)
 :pattern ( ($generated@@16 $generated@@35))
))))
(assert (forall (($generated@@36 T@U) ) (! (UOrdering2 $generated@@36 $generated@@36)
 :no-pattern ($generated $generated@@36)
 :no-pattern ($generated@@0 $generated@@36)
)))
(assert (forall (($generated@@37 T@U) ($generated@@38 T@U) ($generated@@39 T@U) ) (! (let (($generated@@40 (type $generated@@37)))
 (=> (and (and (= (type $generated@@38) $generated@@40) (= (type $generated@@39) $generated@@40)) (and (UOrdering2 $generated@@37 $generated@@38) (UOrdering2 $generated@@38 $generated@@39))) (UOrdering2 $generated@@37 $generated@@39)))
 :pattern ( (UOrdering2 $generated@@37 $generated@@38) (UOrdering2 $generated@@38 $generated@@39))
)))
(assert (forall (($generated@@41 T@U) ($generated@@42 T@U) ) (! (let (($generated@@43 (type $generated@@41)))
 (=> (= (type $generated@@42) $generated@@43) (=> (and (UOrdering2 $generated@@41 $generated@@42) (UOrdering2 $generated@@42 $generated@@41)) (= $generated@@41 $generated@@42))))
 :pattern ( (UOrdering2 $generated@@41 $generated@@42) (UOrdering2 $generated@@42 $generated@@41))
)))
(assert  (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (= ($generated@@1 $generated@@66) 6) (= (type $generated@@44) $generated@@66)) (= (type $generated@@45) $generated@@66)) (= (type $generated@@46) $generated@@66)) (= (type $generated@@47) $generated@@66)) (= (type $generated@@48) $generated@@66)) (= ($generated@@1 $generated@@67) 7)) (= (type $generated@@49) $generated@@67)) (= (type $generated@@50) $generated@@67)) (= (type $generated@@51) $generated@@67)) (= (type $generated@@52) $generated@@67)) (= (type $generated@@53) $generated@@67)) (= (type $generated@@54) $generated@@67)) (= (type $generated@@55) $generated@@67)) (= (type $generated@@56) $generated@@67)) (= (type $generated@@57) $generated@@67)) (= (type $generated@@58) $generated@@67)) (= (type $generated@@59) $generated@@67)) (forall (($generated@@72 T@T) ) (= ($generated@@1 ($generated@@68 $generated@@72)) 8))) (forall (($generated@@73 T@T) ) (! (= ($generated@@69 ($generated@@68 $generated@@73)) $generated@@73)
 :pattern ( ($generated@@68 $generated@@73))
))) (= (type $generated@@60) ($generated@@68 $generated@@4))) (= (type $generated@@61) $generated@@67)) (= ($generated@@1 $generated@@70) 9)) (= (type $generated@@62) $generated@@70)) (= (type $generated@@63) $generated@@67)) (= ($generated@@1 $generated@@71) 10)) (= (type $generated@@64) $generated@@71)) (= (type $generated@@65) $generated@@71)))
(assert (distinct $generated@@44 $generated@@45 $generated@@46 $generated@@47 $generated@@48 $generated@@49 $generated@@50 $generated@@51 $generated@@52 $generated@@53 $generated@@54 $generated@@55 $generated@@56 $generated@@57 $generated@@58 $generated@@59 $generated@@60 $generated@@61 $generated@@62 $generated@@63 $generated@@64 $generated@@65)
)
(assert (forall (($generated@@75 T@U) ) (! (= (type ($generated@@74 $generated@@75)) $generated@@67)
 :pattern ( ($generated@@74 $generated@@75))
)))
(assert (= ($generated@@74 $generated@@44) $generated@@49))
(assert (= ($generated@@74 $generated@@45) $generated@@50))
(assert (= ($generated@@74 $generated@@46) $generated@@51))
(assert (= ($generated@@74 $generated@@47) $generated@@52))
(assert (= ($generated@@74 $generated@@48) $generated@@53))
(assert  (and (and (and (and (and (and (and (and (and (and (and (and (and (forall (($generated@@87 T@T) ($generated@@88 T@T) ) (= ($generated@@1 ($generated@@78 $generated@@87 $generated@@88)) 11)) (forall (($generated@@89 T@T) ($generated@@90 T@T) ) (! (= ($generated@@81 ($generated@@78 $generated@@89 $generated@@90)) $generated@@89)
 :pattern ( ($generated@@78 $generated@@89 $generated@@90))
))) (forall (($generated@@91 T@T) ($generated@@92 T@T) ) (! (= ($generated@@82 ($generated@@78 $generated@@91 $generated@@92)) $generated@@92)
 :pattern ( ($generated@@78 $generated@@91 $generated@@92))
))) (forall (($generated@@93 T@U) ($generated@@94 T@U) ) (! (let (($generated@@95 ($generated@@82 (type $generated@@93))))
(= (type ($generated@@83 $generated@@93 $generated@@94)) $generated@@95))
 :pattern ( ($generated@@83 $generated@@93 $generated@@94))
))) (forall (($generated@@96 T@U) ($generated@@97 T@U) ($generated@@98 T@U) ) (! (let (($generated@@99 (type $generated@@98)))
(let (($generated@@100 (type $generated@@97)))
(= (type ($generated@@84 $generated@@96 $generated@@97 $generated@@98)) ($generated@@78 $generated@@100 $generated@@99))))
 :pattern ( ($generated@@84 $generated@@96 $generated@@97 $generated@@98))
))) (forall (($generated@@101 T@U) ($generated@@102 T@U) ($generated@@103 T@U) ) (! (let (($generated@@104 ($generated@@82 (type $generated@@101))))
 (=> (= (type $generated@@103) $generated@@104) (= ($generated@@83 ($generated@@84 $generated@@101 $generated@@102 $generated@@103) $generated@@102) $generated@@103)))
 :weight 0
))) (and (forall (($generated@@105 T@U) ($generated@@106 T@U) ($generated@@107 T@U) ($generated@@108 T@U) ) (!  (or (= $generated@@107 $generated@@108) (= ($generated@@83 ($generated@@84 $generated@@106 $generated@@107 $generated@@105) $generated@@108) ($generated@@83 $generated@@106 $generated@@108)))
 :weight 0
)) (forall (($generated@@109 T@U) ($generated@@110 T@U) ($generated@@111 T@U) ($generated@@112 T@U) ) (!  (or true (= ($generated@@83 ($generated@@84 $generated@@110 $generated@@111 $generated@@109) $generated@@112) ($generated@@83 $generated@@110 $generated@@112)))
 :weight 0
)))) (= ($generated@@1 $generated@@79) 12)) (forall (($generated@@113 T@U) ($generated@@114 T@U) ) (! (let (($generated@@115 ($generated@@69 (type $generated@@114))))
(= (type ($generated@@85 $generated@@113 $generated@@114)) $generated@@115))
 :pattern ( ($generated@@85 $generated@@113 $generated@@114))
))) (= ($generated@@1 $generated@@80) 13)) (forall (($generated@@116 T@U) ($generated@@117 T@U) ($generated@@118 T@U) ) (! (= (type ($generated@@86 $generated@@116 $generated@@117 $generated@@118)) $generated@@80)
 :pattern ( ($generated@@86 $generated@@116 $generated@@117 $generated@@118))
))) (forall (($generated@@119 T@U) ($generated@@120 T@U) ($generated@@121 T@U) ) (! (let (($generated@@122 ($generated@@69 (type $generated@@120))))
 (=> (= (type $generated@@121) $generated@@122) (= ($generated@@85 ($generated@@86 $generated@@119 $generated@@120 $generated@@121) $generated@@120) $generated@@121)))
 :weight 0
))) (and (forall (($generated@@123 T@U) ($generated@@124 T@U) ($generated@@125 T@U) ($generated@@126 T@U) ) (!  (or (= $generated@@125 $generated@@126) (= ($generated@@85 ($generated@@86 $generated@@124 $generated@@125 $generated@@123) $generated@@126) ($generated@@85 $generated@@124 $generated@@126)))
 :weight 0
)) (forall (($generated@@127 T@U) ($generated@@128 T@U) ($generated@@129 T@U) ($generated@@130 T@U) ) (!  (or true (= ($generated@@85 ($generated@@86 $generated@@128 $generated@@129 $generated@@127) $generated@@130) ($generated@@85 $generated@@128 $generated@@130)))
 :weight 0
)))) (forall (($generated@@131 Int) ) (! (= (type ($generated@@77 $generated@@131)) $generated@@66)
 :pattern ( ($generated@@77 $generated@@131))
))))
(assert (forall (($generated@@132 T@U) ($generated@@133 T@U) ) (!  (=> (and (= (type $generated@@132) $generated@@2) (= (type $generated@@133) ($generated@@78 $generated@@79 $generated@@80))) ($generated@@76 $generated@@132 ($generated@@77 0) $generated@@133))
 :pattern ( ($generated@@76 $generated@@132 ($generated@@77 0) $generated@@133))
)))
(assert (forall (($generated@@135 T@U) ($generated@@136 T@U) ) (!  (=> (and (and (= (type $generated@@135) ($generated@@78 $generated@@79 $generated@@80)) (= (type $generated@@136) ($generated@@78 $generated@@79 $generated@@80))) ($generated@@134 $generated@@135 $generated@@136)) (forall (($generated@@137 T@U) ) (!  (=> (and (= (type $generated@@137) $generated@@79) ($generated@@0 ($generated@@85 ($generated@@83 $generated@@135 $generated@@137) $generated@@60))) ($generated@@0 ($generated@@85 ($generated@@83 $generated@@136 $generated@@137) $generated@@60)))
 :pattern ( ($generated@@85 ($generated@@83 $generated@@136 $generated@@137) $generated@@60))
)))
 :pattern ( ($generated@@134 $generated@@135 $generated@@136))
)))
(assert (= (type $generated@@138) $generated@@66))
(assert (forall (($generated@@139 T@U) ($generated@@140 T@U) ) (!  (=> (and (= (type $generated@@139) $generated@@2) (= (type $generated@@140) ($generated@@78 $generated@@79 $generated@@80))) ($generated@@76 $generated@@139 $generated@@138 $generated@@140))
 :pattern ( ($generated@@76 $generated@@139 $generated@@138 $generated@@140))
)))
(assert (forall (($generated@@142 T@U) ) (!  (=> (= (type $generated@@142) $generated@@2) ($generated@@141 $generated@@142 ($generated@@77 0)))
 :pattern ( ($generated@@141 $generated@@142 ($generated@@77 0)))
)))
(assert  (and (= ($generated@@1 $generated@@145) 14) (forall (($generated@@146 T@U) ($generated@@147 T@U) ) (! (= (type ($generated@@144 $generated@@146 $generated@@147)) $generated@@66)
 :pattern ( ($generated@@144 $generated@@146 $generated@@147))
))))
(assert (forall (($generated@@148 T@U) ($generated@@149 T@U) ($generated@@150 T@U) ) (!  (=> (and (and (and (= (type $generated@@148) $generated@@66) (= (type $generated@@149) $generated@@66)) (= (type $generated@@150) $generated@@145)) ($generated@@141 $generated@@150 ($generated@@144 $generated@@148 $generated@@149))) ($generated@@143 $generated@@150))
 :pattern ( ($generated@@143 $generated@@150) ($generated@@141 $generated@@150 ($generated@@144 $generated@@148 $generated@@149)))
)))
(assert  (and (and (= ($generated@@1 $generated@@154) 15) (forall (($generated@@155 T@U) ) (! (= (type ($generated@@152 $generated@@155)) $generated@@154)
 :pattern ( ($generated@@152 $generated@@155))
))) (forall (($generated@@156 T@U) ) (! (= (type ($generated@@153 $generated@@156)) $generated@@154)
 :pattern ( ($generated@@153 $generated@@156))
))))
(assert (forall (($generated@@157 T@U) ($generated@@158 T@U) ) (!  (=> (and (and (= (type $generated@@157) $generated@@145) (= (type $generated@@158) $generated@@145)) true) (= ($generated@@151 $generated@@157 $generated@@158)  (and (= ($generated@@152 $generated@@157) ($generated@@152 $generated@@158)) (= ($generated@@153 $generated@@157) ($generated@@153 $generated@@158)))))
 :pattern ( ($generated@@151 $generated@@157 $generated@@158))
)))
(assert (forall (($generated@@161 T@U) ) (! (= (type ($generated@@159 $generated@@161)) $generated@@66)
 :pattern ( ($generated@@159 $generated@@161))
)))
(assert (forall (($generated@@162 T@U) ($generated@@163 T@U) ) (!  (=> (and (and (= (type $generated@@162) ($generated@@78 $generated@@154 $generated@@2)) (= (type $generated@@163) $generated@@66)) ($generated@@141 $generated@@162 ($generated@@159 $generated@@163))) ($generated@@160 $generated@@162))
 :pattern ( ($generated@@141 $generated@@162 ($generated@@159 $generated@@163)))
)))
(assert  (and (and (and (and (and (and (and (forall (($generated@@170 T@T) ($generated@@171 T@T) ) (= ($generated@@1 ($generated@@166 $generated@@170 $generated@@171)) 16)) (forall (($generated@@172 T@T) ($generated@@173 T@T) ) (! (= ($generated@@167 ($generated@@166 $generated@@172 $generated@@173)) $generated@@172)
 :pattern ( ($generated@@166 $generated@@172 $generated@@173))
))) (forall (($generated@@174 T@T) ($generated@@175 T@T) ) (! (= ($generated@@168 ($generated@@166 $generated@@174 $generated@@175)) $generated@@175)
 :pattern ( ($generated@@166 $generated@@174 $generated@@175))
))) (forall (($generated@@176 T@U) ($generated@@177 T@U) ($generated@@178 T@U) ) (! (let (($generated@@179 ($generated@@168 (type $generated@@176))))
(= (type ($generated@@164 $generated@@176 $generated@@177 $generated@@178)) $generated@@179))
 :pattern ( ($generated@@164 $generated@@176 $generated@@177 $generated@@178))
))) (forall (($generated@@180 T@U) ($generated@@181 T@U) ($generated@@182 T@U) ($generated@@183 T@U) ) (! (let (($generated@@184 (type $generated@@183)))
(let (($generated@@185 (type $generated@@181)))
(= (type ($generated@@169 $generated@@180 $generated@@181 $generated@@182 $generated@@183)) ($generated@@166 $generated@@185 $generated@@184))))
 :pattern ( ($generated@@169 $generated@@180 $generated@@181 $generated@@182 $generated@@183))
))) (forall (($generated@@186 T@U) ($generated@@187 T@U) ($generated@@188 T@U) ($generated@@189 T@U) ) (! (let (($generated@@190 ($generated@@168 (type $generated@@186))))
 (=> (= (type $generated@@189) $generated@@190) (= ($generated@@164 ($generated@@169 $generated@@186 $generated@@187 $generated@@188 $generated@@189) $generated@@187 $generated@@188) $generated@@189)))
 :weight 0
))) (and (and (forall (($generated@@191 T@U) ($generated@@192 T@U) ($generated@@193 T@U) ($generated@@194 T@U) ($generated@@195 T@U) ($generated@@196 T@U) ) (!  (or (= $generated@@193 $generated@@195) (= ($generated@@164 ($generated@@169 $generated@@192 $generated@@193 $generated@@194 $generated@@191) $generated@@195 $generated@@196) ($generated@@164 $generated@@192 $generated@@195 $generated@@196)))
 :weight 0
)) (forall (($generated@@197 T@U) ($generated@@198 T@U) ($generated@@199 T@U) ($generated@@200 T@U) ($generated@@201 T@U) ($generated@@202 T@U) ) (!  (or (= $generated@@200 $generated@@202) (= ($generated@@164 ($generated@@169 $generated@@198 $generated@@199 $generated@@200 $generated@@197) $generated@@201 $generated@@202) ($generated@@164 $generated@@198 $generated@@201 $generated@@202)))
 :weight 0
))) (forall (($generated@@203 T@U) ($generated@@204 T@U) ($generated@@205 T@U) ($generated@@206 T@U) ($generated@@207 T@U) ($generated@@208 T@U) ) (!  (or true (= ($generated@@164 ($generated@@169 $generated@@204 $generated@@205 $generated@@206 $generated@@203) $generated@@207 $generated@@208) ($generated@@164 $generated@@204 $generated@@207 $generated@@208)))
 :weight 0
)))) (forall (($generated@@209 T@U) ($generated@@210 T@U) ($generated@@211 T@U) ($generated@@212 Bool) ) (! (= (type ($generated@@165 $generated@@209 $generated@@210 $generated@@211 $generated@@212)) ($generated@@166 $generated@@79 $generated@@4))
 :pattern ( ($generated@@165 $generated@@209 $generated@@210 $generated@@211 $generated@@212))
))))
(assert (forall (($generated@@213 T@U) ($generated@@214 T@U) ($generated@@215 T@U) ($generated@@216 Bool) ($generated@@217 T@U) ($generated@@218 T@U) ) (! (let (($generated@@219 ($generated@@69 (type $generated@@218))))
 (=> (and (and (and (and (= (type $generated@@213) $generated@@79) (= (type $generated@@214) ($generated@@78 $generated@@79 $generated@@80))) (= (type $generated@@215) ($generated@@68 $generated@@4))) (= (type $generated@@217) $generated@@79)) (= (type $generated@@218) ($generated@@68 $generated@@219))) (= ($generated@@0 ($generated@@164 ($generated@@165 $generated@@213 $generated@@214 $generated@@215 $generated@@216) $generated@@217 $generated@@218))  (=> (and (not (= $generated@@217 $generated@@213)) ($generated@@0 ($generated@@85 ($generated@@83 $generated@@214 $generated@@217) $generated@@215))) $generated@@216))))
 :pattern ( ($generated@@164 ($generated@@165 $generated@@213 $generated@@214 $generated@@215 $generated@@216) $generated@@217 $generated@@218))
)))
(assert (forall (($generated@@222 T@U) ($generated@@223 T@U) ) (! (= (type ($generated@@220 $generated@@222 $generated@@223)) $generated@@145)
 :pattern ( ($generated@@220 $generated@@222 $generated@@223))
)))
(assert (forall (($generated@@224 T@U) ($generated@@225 T@U) ($generated@@226 T@U) ($generated@@227 T@U) ) (!  (=> (and (and (and (= (type $generated@@224) $generated@@66) (= (type $generated@@225) $generated@@66)) (= (type $generated@@226) $generated@@154)) (= (type $generated@@227) $generated@@154)) (= ($generated@@141 ($generated@@220 $generated@@226 $generated@@227) ($generated@@144 $generated@@224 $generated@@225))  (and ($generated@@221 $generated@@226 $generated@@224) ($generated@@221 $generated@@227 $generated@@225))))
 :pattern ( ($generated@@141 ($generated@@220 $generated@@226 $generated@@227) ($generated@@144 $generated@@224 $generated@@225)))
)))
(assert (forall (($generated@@228 T@U) ($generated@@229 T@U) ) (!  (=> (and (= (type $generated@@228) $generated@@145) (= (type $generated@@229) $generated@@145)) (= ($generated@@151 $generated@@228 $generated@@229) (= $generated@@228 $generated@@229)))
 :pattern ( ($generated@@151 $generated@@228 $generated@@229))
)))
(assert (forall (($generated@@231 T@U) ) (! (= (type ($generated@@230 $generated@@231)) $generated@@66)
 :pattern ( ($generated@@230 $generated@@231))
)))
(assert (forall (($generated@@232 T@U) ($generated@@233 T@U) ) (!  (=> (and (= (type $generated@@232) ($generated@@78 $generated@@154 $generated@@4)) (= (type $generated@@233) $generated@@66)) (= ($generated@@141 $generated@@232 ($generated@@230 $generated@@233)) (forall (($generated@@234 T@U) ) (!  (=> (and (= (type $generated@@234) $generated@@154) ($generated@@0 ($generated@@83 $generated@@232 $generated@@234))) ($generated@@221 $generated@@234 $generated@@233))
 :pattern ( ($generated@@83 $generated@@232 $generated@@234))
))))
 :pattern ( ($generated@@141 $generated@@232 ($generated@@230 $generated@@233)))
)))
(assert (forall (($generated@@236 T@U) ) (! (= (type ($generated@@235 $generated@@236)) $generated@@66)
 :pattern ( ($generated@@235 $generated@@236))
)))
(assert (forall (($generated@@237 T@U) ($generated@@238 T@U) ) (!  (=> (and (= (type $generated@@237) ($generated@@78 $generated@@154 $generated@@4)) (= (type $generated@@238) $generated@@66)) (= ($generated@@141 $generated@@237 ($generated@@235 $generated@@238)) (forall (($generated@@239 T@U) ) (!  (=> (and (= (type $generated@@239) $generated@@154) ($generated@@0 ($generated@@83 $generated@@237 $generated@@239))) ($generated@@221 $generated@@239 $generated@@238))
 :pattern ( ($generated@@83 $generated@@237 $generated@@239))
))))
 :pattern ( ($generated@@141 $generated@@237 ($generated@@235 $generated@@238)))
)))
(assert (forall (($generated@@241 Int) ) (! (= ($generated@@240 $generated@@241) $generated@@241)
 :pattern ( ($generated@@240 $generated@@241))
)))
(assert (forall (($generated@@243 T@U) ) (! (let (($generated@@244 (type $generated@@243)))
(= (type ($generated@@242 $generated@@243)) $generated@@244))
 :pattern ( ($generated@@242 $generated@@243))
)))
(assert (forall (($generated@@245 T@U) ) (! (= ($generated@@242 $generated@@245) $generated@@245)
 :pattern ( ($generated@@242 $generated@@245))
)))
(assert (forall (($generated@@248 T@U) ($generated@@249 T@U) ($generated@@250 T@U) ($generated@@251 T@U) ($generated@@252 T@U) ) (!  (=> (and (and (and (and (and (= (type $generated@@248) $generated@@66) (= (type $generated@@249) $generated@@66)) (= (type $generated@@250) $generated@@154)) (= (type $generated@@251) $generated@@154)) (= (type $generated@@252) ($generated@@78 $generated@@79 $generated@@80))) ($generated@@246 $generated@@252)) (= ($generated@@76 ($generated@@220 $generated@@250 $generated@@251) ($generated@@144 $generated@@248 $generated@@249) $generated@@252)  (and ($generated@@247 $generated@@250 $generated@@248 $generated@@252) ($generated@@247 $generated@@251 $generated@@249 $generated@@252))))
 :pattern ( ($generated@@76 ($generated@@220 $generated@@250 $generated@@251) ($generated@@144 $generated@@248 $generated@@249) $generated@@252))
)))
(assert (forall (($generated@@254 T@U) ) (! (= (type ($generated@@253 $generated@@254)) $generated@@70)
 :pattern ( ($generated@@253 $generated@@254))
)))
(assert (forall (($generated@@255 T@U) ) (!  (=> (= (type $generated@@255) $generated@@145) (= ($generated@@143 $generated@@255) (= ($generated@@253 $generated@@255) $generated@@62)))
 :pattern ( ($generated@@143 $generated@@255))
)))
(assert (forall (($generated@@256 T@U) ) (!  (=> (and (= (type $generated@@256) $generated@@145) ($generated@@143 $generated@@256)) (exists (($generated@@257 T@U) ($generated@@258 T@U) ) (!  (and (and (= (type $generated@@257) $generated@@154) (= (type $generated@@258) $generated@@154)) (= $generated@@256 ($generated@@220 $generated@@257 $generated@@258)))
 :no-pattern (type $generated@@257)
 :no-pattern (type $generated@@258)
 :no-pattern ($generated $generated@@257)
 :no-pattern ($generated@@0 $generated@@257)
 :no-pattern ($generated $generated@@258)
 :no-pattern ($generated@@0 $generated@@258)
)))
 :pattern ( ($generated@@143 $generated@@256))
)))
(assert  (and (and (forall (($generated@@263 T@T) ) (= ($generated@@1 ($generated@@261 $generated@@263)) 17)) (forall (($generated@@264 T@T) ) (! (= ($generated@@262 ($generated@@261 $generated@@264)) $generated@@264)
 :pattern ( ($generated@@261 $generated@@264))
))) (forall (($generated@@265 T@T) ) (! (= (type ($generated@@259 $generated@@265)) ($generated@@261 $generated@@265))
 :pattern ( ($generated@@259 $generated@@265))
))))
(assert (forall (($generated@@266 T@T) ) (! (= ($generated@@260 ($generated@@259 $generated@@266)) 0)
 :pattern ( ($generated@@259 $generated@@266))
)))
(assert (forall (($generated@@267 T@U) ) (!  (=> (= (type $generated@@267) $generated@@2) (= ($generated@@141 $generated@@267 $generated@@138) (<= ($generated@@240 0) ($generated $generated@@267))))
 :pattern ( ($generated@@141 $generated@@267 $generated@@138))
)))
(assert (forall (($generated@@269 T@U) ) (! (= (type ($generated@@268 $generated@@269)) $generated@@154)
 :pattern ( ($generated@@268 $generated@@269))
)))
(assert (forall (($generated@@270 T@U) ($generated@@271 T@U) ($generated@@272 T@U) ) (!  (=> (and (= (type $generated@@271) $generated@@66) (= (type $generated@@272) ($generated@@78 $generated@@79 $generated@@80))) (= ($generated@@247 ($generated@@268 $generated@@270) $generated@@271 $generated@@272) ($generated@@76 $generated@@270 $generated@@271 $generated@@272)))
 :pattern ( ($generated@@247 ($generated@@268 $generated@@270) $generated@@271 $generated@@272))
)))
(assert (forall (($generated@@273 T@U) ($generated@@274 T@U) ($generated@@275 T@U) ($generated@@276 T@U) ) (!  (=> (and (and (and (and (and (= (type $generated@@273) ($generated@@78 $generated@@79 $generated@@80)) (= (type $generated@@274) ($generated@@78 $generated@@79 $generated@@80))) (= (type $generated@@275) $generated@@154)) (= (type $generated@@276) $generated@@66)) ($generated@@134 $generated@@273 $generated@@274)) ($generated@@247 $generated@@275 $generated@@276 $generated@@273)) ($generated@@247 $generated@@275 $generated@@276 $generated@@274))
 :pattern ( ($generated@@134 $generated@@273 $generated@@274) ($generated@@247 $generated@@275 $generated@@276 $generated@@273))
)))
(assert (forall (($generated@@277 T@U) ($generated@@278 T@U) ($generated@@279 T@U) ($generated@@280 T@U) ) (!  (=> (and (and (and (and (= (type $generated@@277) ($generated@@78 $generated@@79 $generated@@80)) (= (type $generated@@278) ($generated@@78 $generated@@79 $generated@@80))) (= (type $generated@@280) $generated@@66)) ($generated@@134 $generated@@277 $generated@@278)) ($generated@@76 $generated@@279 $generated@@280 $generated@@277)) ($generated@@76 $generated@@279 $generated@@280 $generated@@278))
 :pattern ( ($generated@@134 $generated@@277 $generated@@278) ($generated@@76 $generated@@279 $generated@@280 $generated@@277))
)))
(assert (forall (($generated@@283 T@T) ) (! (= (type ($generated@@282 $generated@@283)) ($generated@@78 $generated@@283 $generated@@2))
 :pattern ( ($generated@@282 $generated@@283))
)))
(assert (forall (($generated@@284 T@U) ) (! (let (($generated@@285 ($generated@@81 (type $generated@@284))))
 (=> (= (type $generated@@284) ($generated@@78 $generated@@285 $generated@@2)) (and (= (= ($generated@@281 $generated@@284) 0) (= $generated@@284 ($generated@@282 $generated@@285))) (=> (not (= ($generated@@281 $generated@@284) 0)) (exists (($generated@@286 T@U) ) (!  (and (= (type $generated@@286) $generated@@285) (< 0 ($generated ($generated@@83 $generated@@284 $generated@@286))))
 :no-pattern (type $generated@@286)
 :no-pattern ($generated $generated@@286)
 :no-pattern ($generated@@0 $generated@@286)
))))))
 :pattern ( ($generated@@281 $generated@@284))
)))
(assert  (and (and (and (and (forall (($generated@@292 T@T) ($generated@@293 T@T) ) (= ($generated@@1 ($generated@@289 $generated@@292 $generated@@293)) 18)) (forall (($generated@@294 T@T) ($generated@@295 T@T) ) (! (= ($generated@@290 ($generated@@289 $generated@@294 $generated@@295)) $generated@@294)
 :pattern ( ($generated@@289 $generated@@294 $generated@@295))
))) (forall (($generated@@296 T@T) ($generated@@297 T@T) ) (! (= ($generated@@291 ($generated@@289 $generated@@296 $generated@@297)) $generated@@297)
 :pattern ( ($generated@@289 $generated@@296 $generated@@297))
))) (forall (($generated@@298 T@U) ) (! (let (($generated@@299 ($generated@@290 (type $generated@@298))))
(= (type ($generated@@287 $generated@@298)) ($generated@@78 $generated@@299 $generated@@4)))
 :pattern ( ($generated@@287 $generated@@298))
))) (forall (($generated@@300 T@T) ($generated@@301 T@T) ) (! (= (type ($generated@@288 $generated@@300 $generated@@301)) ($generated@@289 $generated@@300 $generated@@301))
 :pattern ( ($generated@@288 $generated@@300 $generated@@301))
))))
(assert (forall (($generated@@302 T@U) ($generated@@303 T@T) ) (! (let (($generated@@304 (type $generated@@302)))
 (not ($generated@@0 ($generated@@83 ($generated@@287 ($generated@@288 $generated@@304 $generated@@303)) $generated@@302))))
 :pattern ( (let (($generated@@304 (type $generated@@302)))
($generated@@83 ($generated@@287 ($generated@@288 $generated@@304 $generated@@303)) $generated@@302)))
)))
(assert  (and (and (and (and (forall (($generated@@310 T@T) ($generated@@311 T@T) ) (= ($generated@@1 ($generated@@307 $generated@@310 $generated@@311)) 19)) (forall (($generated@@312 T@T) ($generated@@313 T@T) ) (! (= ($generated@@308 ($generated@@307 $generated@@312 $generated@@313)) $generated@@312)
 :pattern ( ($generated@@307 $generated@@312 $generated@@313))
))) (forall (($generated@@314 T@T) ($generated@@315 T@T) ) (! (= ($generated@@309 ($generated@@307 $generated@@314 $generated@@315)) $generated@@315)
 :pattern ( ($generated@@307 $generated@@314 $generated@@315))
))) (forall (($generated@@316 T@U) ) (! (let (($generated@@317 ($generated@@308 (type $generated@@316))))
(= (type ($generated@@305 $generated@@316)) ($generated@@78 $generated@@317 $generated@@4)))
 :pattern ( ($generated@@305 $generated@@316))
))) (forall (($generated@@318 T@T) ($generated@@319 T@T) ) (! (= (type ($generated@@306 $generated@@318 $generated@@319)) ($generated@@307 $generated@@318 $generated@@319))
 :pattern ( ($generated@@306 $generated@@318 $generated@@319))
))))
(assert (forall (($generated@@320 T@U) ($generated@@321 T@T) ) (! (let (($generated@@322 (type $generated@@320)))
 (not ($generated@@0 ($generated@@83 ($generated@@305 ($generated@@306 $generated@@322 $generated@@321)) $generated@@320))))
 :pattern ( (let (($generated@@322 (type $generated@@320)))
($generated@@83 ($generated@@305 ($generated@@306 $generated@@322 $generated@@321)) $generated@@320)))
)))
(assert (forall (($generated@@323 T@U) ) (! (let (($generated@@324 ($generated@@81 (type $generated@@323))))
 (=> (= (type $generated@@323) ($generated@@78 $generated@@324 $generated@@2)) (= ($generated@@160 $generated@@323) (forall (($generated@@325 T@U) ) (!  (=> (= (type $generated@@325) $generated@@324) (and (<= 0 ($generated ($generated@@83 $generated@@323 $generated@@325))) (<= ($generated ($generated@@83 $generated@@323 $generated@@325)) ($generated@@281 $generated@@323))))
 :pattern ( ($generated@@83 $generated@@323 $generated@@325))
)))))
 :pattern ( ($generated@@160 $generated@@323))
)))
(assert (forall (($generated@@327 T@T) ($generated@@328 T@U) ) (! (= (type ($generated@@326 $generated@@327 $generated@@328)) $generated@@327)
 :pattern ( ($generated@@326 $generated@@327 $generated@@328))
)))
(assert (forall (($generated@@329 T@U) ) (!  (=> (and (= (type $generated@@329) $generated@@154) ($generated@@221 $generated@@329 $generated@@138)) (and (= ($generated@@268 ($generated@@326 $generated@@2 $generated@@329)) $generated@@329) ($generated@@141 ($generated@@326 $generated@@2 $generated@@329) $generated@@138)))
 :pattern ( ($generated@@221 $generated@@329 $generated@@138))
)))
(assert (forall (($generated@@330 T@U) ) (! (let (($generated@@331 ($generated@@291 (type $generated@@330))))
(let (($generated@@332 ($generated@@290 (type $generated@@330))))
 (=> (= (type $generated@@330) ($generated@@289 $generated@@332 $generated@@331)) (or (= $generated@@330 ($generated@@288 $generated@@332 $generated@@331)) (exists (($generated@@333 T@U) ) (!  (and (= (type $generated@@333) $generated@@332) ($generated@@0 ($generated@@83 ($generated@@287 $generated@@330) $generated@@333)))
 :no-pattern (type $generated@@333)
 :no-pattern ($generated $generated@@333)
 :no-pattern ($generated@@0 $generated@@333)
))))))
 :pattern ( ($generated@@287 $generated@@330))
)))
(assert (forall (($generated@@335 T@U) ) (! (let (($generated@@336 ($generated@@291 (type $generated@@335))))
(= (type ($generated@@334 $generated@@335)) ($generated@@78 $generated@@336 $generated@@4)))
 :pattern ( ($generated@@334 $generated@@335))
)))
(assert (forall (($generated@@337 T@U) ) (! (let (($generated@@338 ($generated@@291 (type $generated@@337))))
(let (($generated@@339 ($generated@@290 (type $generated@@337))))
 (=> (= (type $generated@@337) ($generated@@289 $generated@@339 $generated@@338)) (or (= $generated@@337 ($generated@@288 $generated@@339 $generated@@338)) (exists (($generated@@340 T@U) ) (!  (and (= (type $generated@@340) $generated@@338) ($generated@@0 ($generated@@83 ($generated@@334 $generated@@337) $generated@@340)))
 :no-pattern (type $generated@@340)
 :no-pattern ($generated $generated@@340)
 :no-pattern ($generated@@0 $generated@@340)
))))))
 :pattern ( ($generated@@334 $generated@@337))
)))
(assert (forall (($generated@@341 T@U) ) (! (let (($generated@@342 ($generated@@309 (type $generated@@341))))
(let (($generated@@343 ($generated@@308 (type $generated@@341))))
 (=> (= (type $generated@@341) ($generated@@307 $generated@@343 $generated@@342)) (or (= $generated@@341 ($generated@@306 $generated@@343 $generated@@342)) (exists (($generated@@344 T@U) ) (!  (and (= (type $generated@@344) $generated@@343) ($generated@@0 ($generated@@83 ($generated@@305 $generated@@341) $generated@@344)))
 :no-pattern (type $generated@@344)
 :no-pattern ($generated $generated@@344)
 :no-pattern ($generated@@0 $generated@@344)
))))))
 :pattern ( ($generated@@305 $generated@@341))
)))
(assert (forall (($generated@@346 T@U) ) (! (let (($generated@@347 ($generated@@309 (type $generated@@346))))
(= (type ($generated@@345 $generated@@346)) ($generated@@78 $generated@@347 $generated@@4)))
 :pattern ( ($generated@@345 $generated@@346))
)))
(assert (forall (($generated@@348 T@U) ) (! (let (($generated@@349 ($generated@@309 (type $generated@@348))))
(let (($generated@@350 ($generated@@308 (type $generated@@348))))
 (=> (= (type $generated@@348) ($generated@@307 $generated@@350 $generated@@349)) (or (= $generated@@348 ($generated@@306 $generated@@350 $generated@@349)) (exists (($generated@@351 T@U) ) (!  (and (= (type $generated@@351) $generated@@349) ($generated@@0 ($generated@@83 ($generated@@345 $generated@@348) $generated@@351)))
 :no-pattern (type $generated@@351)
 :no-pattern ($generated $generated@@351)
 :no-pattern ($generated@@0 $generated@@351)
))))))
 :pattern ( ($generated@@345 $generated@@348))
)))
(assert (forall (($generated@@352 T@U) ($generated@@353 T@U) ) (!  (=> (and (= (type $generated@@352) ($generated@@78 $generated@@154 $generated@@2)) (= (type $generated@@353) $generated@@66)) (= ($generated@@141 $generated@@352 ($generated@@159 $generated@@353)) (forall (($generated@@354 T@U) ) (!  (=> (and (= (type $generated@@354) $generated@@154) (< 0 ($generated ($generated@@83 $generated@@352 $generated@@354)))) ($generated@@221 $generated@@354 $generated@@353))
 :pattern ( ($generated@@83 $generated@@352 $generated@@354))
))))
 :pattern ( ($generated@@141 $generated@@352 ($generated@@159 $generated@@353)))
)))
(assert (forall (($generated@@355 T@U) ($generated@@356 T@U) ($generated@@357 T@U) ) (!  (=> (and (and (= (type $generated@@355) ($generated@@78 $generated@@154 $generated@@4)) (= (type $generated@@356) $generated@@66)) (= (type $generated@@357) ($generated@@78 $generated@@79 $generated@@80))) (= ($generated@@76 $generated@@355 ($generated@@230 $generated@@356) $generated@@357) (forall (($generated@@358 T@U) ) (!  (=> (and (= (type $generated@@358) $generated@@154) ($generated@@0 ($generated@@83 $generated@@355 $generated@@358))) ($generated@@247 $generated@@358 $generated@@356 $generated@@357))
 :pattern ( ($generated@@83 $generated@@355 $generated@@358))
))))
 :pattern ( ($generated@@76 $generated@@355 ($generated@@230 $generated@@356) $generated@@357))
)))
(assert (forall (($generated@@359 T@U) ($generated@@360 T@U) ($generated@@361 T@U) ) (!  (=> (and (and (= (type $generated@@359) ($generated@@78 $generated@@154 $generated@@4)) (= (type $generated@@360) $generated@@66)) (= (type $generated@@361) ($generated@@78 $generated@@79 $generated@@80))) (= ($generated@@76 $generated@@359 ($generated@@235 $generated@@360) $generated@@361) (forall (($generated@@362 T@U) ) (!  (=> (and (= (type $generated@@362) $generated@@154) ($generated@@0 ($generated@@83 $generated@@359 $generated@@362))) ($generated@@247 $generated@@362 $generated@@360 $generated@@361))
 :pattern ( ($generated@@83 $generated@@359 $generated@@362))
))))
 :pattern ( ($generated@@76 $generated@@359 ($generated@@235 $generated@@360) $generated@@361))
)))
(assert (forall (($generated@@363 T@U) ) (! (let (($generated@@364 (type $generated@@363)))
(= ($generated ($generated@@83 ($generated@@282 $generated@@364) $generated@@363)) 0))
 :pattern ( (let (($generated@@364 (type $generated@@363)))
($generated@@83 ($generated@@282 $generated@@364) $generated@@363)))
)))
(assert  (and (forall (($generated@@367 T@U) ) (! (= (type ($generated@@365 $generated@@367)) ($generated@@78 $generated@@154 $generated@@4))
 :pattern ( ($generated@@365 $generated@@367))
)) (forall (($generated@@368 T@U) ) (! (let (($generated@@369 ($generated@@291 (type $generated@@368))))
(let (($generated@@370 ($generated@@290 (type $generated@@368))))
(= (type ($generated@@366 $generated@@368)) ($generated@@78 $generated@@370 $generated@@369))))
 :pattern ( ($generated@@366 $generated@@368))
))))
(assert (forall (($generated@@371 T@U) ($generated@@372 T@U) ) (!  (=> (and (= (type $generated@@371) ($generated@@289 $generated@@154 $generated@@154)) (= (type $generated@@372) $generated@@154)) (= ($generated@@0 ($generated@@83 ($generated@@365 $generated@@371) $generated@@372))  (and ($generated@@0 ($generated@@83 ($generated@@287 $generated@@371) ($generated@@152 ($generated@@326 $generated@@145 $generated@@372)))) (= ($generated@@83 ($generated@@366 $generated@@371) ($generated@@152 ($generated@@326 $generated@@145 $generated@@372))) ($generated@@153 ($generated@@326 $generated@@145 $generated@@372))))))
 :pattern ( ($generated@@83 ($generated@@365 $generated@@371) $generated@@372))
)))
(assert  (and (forall (($generated@@375 T@U) ) (! (= (type ($generated@@373 $generated@@375)) ($generated@@78 $generated@@154 $generated@@4))
 :pattern ( ($generated@@373 $generated@@375))
)) (forall (($generated@@376 T@U) ) (! (let (($generated@@377 ($generated@@309 (type $generated@@376))))
(let (($generated@@378 ($generated@@308 (type $generated@@376))))
(= (type ($generated@@374 $generated@@376)) ($generated@@78 $generated@@378 $generated@@377))))
 :pattern ( ($generated@@374 $generated@@376))
))))
(assert (forall (($generated@@379 T@U) ($generated@@380 T@U) ) (!  (=> (and (= (type $generated@@379) ($generated@@307 $generated@@154 $generated@@154)) (= (type $generated@@380) $generated@@154)) (= ($generated@@0 ($generated@@83 ($generated@@373 $generated@@379) $generated@@380))  (and ($generated@@0 ($generated@@83 ($generated@@305 $generated@@379) ($generated@@152 ($generated@@326 $generated@@145 $generated@@380)))) (= ($generated@@83 ($generated@@374 $generated@@379) ($generated@@152 ($generated@@326 $generated@@145 $generated@@380))) ($generated@@153 ($generated@@326 $generated@@145 $generated@@380))))))
 :pattern ( ($generated@@83 ($generated@@373 $generated@@379) $generated@@380))
)))
(assert (forall (($generated@@381 T@U) ($generated@@382 T@U) ) (! (let (($generated@@383 (type $generated@@382)))
(let (($generated@@384 ($generated@@290 (type $generated@@381))))
 (=> (= (type $generated@@381) ($generated@@289 $generated@@384 $generated@@383)) (= ($generated@@0 ($generated@@83 ($generated@@334 $generated@@381) $generated@@382)) (exists (($generated@@385 T@U) ) (!  (and (= (type $generated@@385) $generated@@384) (and ($generated@@0 ($generated@@83 ($generated@@287 $generated@@381) $generated@@385)) (= $generated@@382 ($generated@@83 ($generated@@366 $generated@@381) $generated@@385))))
 :pattern ( ($generated@@83 ($generated@@287 $generated@@381) $generated@@385))
 :pattern ( ($generated@@83 ($generated@@366 $generated@@381) $generated@@385))
))))))
 :pattern ( ($generated@@83 ($generated@@334 $generated@@381) $generated@@382))
)))
(assert (forall (($generated@@386 T@U) ($generated@@387 T@U) ) (! (let (($generated@@388 (type $generated@@387)))
(let (($generated@@389 ($generated@@308 (type $generated@@386))))
 (=> (= (type $generated@@386) ($generated@@307 $generated@@389 $generated@@388)) (= ($generated@@0 ($generated@@83 ($generated@@345 $generated@@386) $generated@@387)) (exists (($generated@@390 T@U) ) (!  (and (= (type $generated@@390) $generated@@389) (and ($generated@@0 ($generated@@83 ($generated@@305 $generated@@386) $generated@@390)) (= $generated@@387 ($generated@@83 ($generated@@374 $generated@@386) $generated@@390))))
 :pattern ( ($generated@@83 ($generated@@305 $generated@@386) $generated@@390))
 :pattern ( ($generated@@83 ($generated@@374 $generated@@386) $generated@@390))
))))))
 :pattern ( ($generated@@83 ($generated@@345 $generated@@386) $generated@@387))
)))
(assert (forall (($generated@@392 T@U) ($generated@@393 T@U) ) (! (= (type ($generated@@391 $generated@@392 $generated@@393)) $generated@@66)
 :pattern ( ($generated@@391 $generated@@392 $generated@@393))
)))
(assert (forall (($generated@@394 T@U) ($generated@@395 T@U) ($generated@@396 T@U) ($generated@@397 T@U) ) (!  (=> (and (and (and (= (type $generated@@394) ($generated@@289 $generated@@154 $generated@@154)) (= (type $generated@@395) $generated@@66)) (= (type $generated@@396) $generated@@66)) (= (type $generated@@397) ($generated@@78 $generated@@79 $generated@@80))) (= ($generated@@76 $generated@@394 ($generated@@391 $generated@@395 $generated@@396) $generated@@397) (forall (($generated@@398 T@U) ) (!  (=> (and (= (type $generated@@398) $generated@@154) ($generated@@0 ($generated@@83 ($generated@@287 $generated@@394) $generated@@398))) (and ($generated@@247 ($generated@@83 ($generated@@366 $generated@@394) $generated@@398) $generated@@396 $generated@@397) ($generated@@247 $generated@@398 $generated@@395 $generated@@397)))
 :pattern ( ($generated@@83 ($generated@@366 $generated@@394) $generated@@398))
 :pattern ( ($generated@@83 ($generated@@287 $generated@@394) $generated@@398))
))))
 :pattern ( ($generated@@76 $generated@@394 ($generated@@391 $generated@@395 $generated@@396) $generated@@397))
)))
(assert (forall (($generated@@400 T@U) ($generated@@401 T@U) ) (! (= (type ($generated@@399 $generated@@400 $generated@@401)) $generated@@66)
 :pattern ( ($generated@@399 $generated@@400 $generated@@401))
)))
(assert (forall (($generated@@402 T@U) ($generated@@403 T@U) ($generated@@404 T@U) ($generated@@405 T@U) ) (!  (=> (and (and (and (= (type $generated@@402) ($generated@@307 $generated@@154 $generated@@154)) (= (type $generated@@403) $generated@@66)) (= (type $generated@@404) $generated@@66)) (= (type $generated@@405) ($generated@@78 $generated@@79 $generated@@80))) (= ($generated@@76 $generated@@402 ($generated@@399 $generated@@403 $generated@@404) $generated@@405) (forall (($generated@@406 T@U) ) (!  (=> (and (= (type $generated@@406) $generated@@154) ($generated@@0 ($generated@@83 ($generated@@305 $generated@@402) $generated@@406))) (and ($generated@@247 ($generated@@83 ($generated@@374 $generated@@402) $generated@@406) $generated@@404 $generated@@405) ($generated@@247 $generated@@406 $generated@@403 $generated@@405)))
 :pattern ( ($generated@@83 ($generated@@374 $generated@@402) $generated@@406))
 :pattern ( ($generated@@83 ($generated@@305 $generated@@402) $generated@@406))
))))
 :pattern ( ($generated@@76 $generated@@402 ($generated@@399 $generated@@403 $generated@@404) $generated@@405))
)))
(assert (forall (($generated@@407 T@U) ($generated@@408 T@U) ($generated@@409 T@U) ) (!  (=> (and (and (and (and (= (type $generated@@407) ($generated@@78 $generated@@79 $generated@@80)) (= (type $generated@@408) ($generated@@78 $generated@@79 $generated@@80))) (= (type $generated@@409) ($generated@@78 $generated@@79 $generated@@80))) (not (= $generated@@407 $generated@@409))) (and ($generated@@134 $generated@@407 $generated@@408) ($generated@@134 $generated@@408 $generated@@409))) ($generated@@134 $generated@@407 $generated@@409))
 :pattern ( ($generated@@134 $generated@@407 $generated@@408) ($generated@@134 $generated@@408 $generated@@409))
)))
(assert (forall (($generated@@411 T@T) ) (! (= (type ($generated@@410 $generated@@411)) ($generated@@78 $generated@@411 $generated@@4))
 :pattern ( ($generated@@410 $generated@@411))
)))
(assert (forall (($generated@@412 T@U) ) (! (let (($generated@@413 ($generated@@309 (type $generated@@412))))
(let (($generated@@414 ($generated@@308 (type $generated@@412))))
 (=> (= (type $generated@@412) ($generated@@307 $generated@@414 $generated@@413)) (= (= $generated@@412 ($generated@@306 $generated@@414 $generated@@413)) (= ($generated@@305 $generated@@412) ($generated@@410 $generated@@414))))))
 :pattern ( ($generated@@305 $generated@@412))
)))
(assert (forall (($generated@@415 T@U) ) (! (let (($generated@@416 ($generated@@309 (type $generated@@415))))
(let (($generated@@417 ($generated@@308 (type $generated@@415))))
 (=> (= (type $generated@@415) ($generated@@307 $generated@@417 $generated@@416)) (= (= $generated@@415 ($generated@@306 $generated@@417 $generated@@416)) (= ($generated@@345 $generated@@415) ($generated@@410 $generated@@416))))))
 :pattern ( ($generated@@345 $generated@@415))
)))
(assert (forall (($generated@@418 T@U) ) (! (let (($generated@@419 ($generated@@309 (type $generated@@418))))
(let (($generated@@420 ($generated@@308 (type $generated@@418))))
 (=> (= (type $generated@@418) ($generated@@307 $generated@@420 $generated@@419)) (= (= $generated@@418 ($generated@@306 $generated@@420 $generated@@419)) (= ($generated@@373 $generated@@418) ($generated@@410 $generated@@154))))))
 :pattern ( ($generated@@373 $generated@@418))
)))
(assert (forall (($generated@@421 T@U) ) (! (let (($generated@@422 ($generated@@291 (type $generated@@421))))
(let (($generated@@423 ($generated@@290 (type $generated@@421))))
 (=> (= (type $generated@@421) ($generated@@289 $generated@@423 $generated@@422)) (or (= $generated@@421 ($generated@@288 $generated@@423 $generated@@422)) (exists (($generated@@424 T@U) ($generated@@425 T@U) ) (!  (and (and (= (type $generated@@424) $generated@@154) (= (type $generated@@425) $generated@@154)) ($generated@@0 ($generated@@83 ($generated@@365 $generated@@421) ($generated@@268 ($generated@@220 $generated@@424 $generated@@425)))))
 :no-pattern (type $generated@@424)
 :no-pattern (type $generated@@425)
 :no-pattern ($generated $generated@@424)
 :no-pattern ($generated@@0 $generated@@424)
 :no-pattern ($generated $generated@@425)
 :no-pattern ($generated@@0 $generated@@425)
))))))
 :pattern ( ($generated@@365 $generated@@421))
)))
(assert (forall (($generated@@426 T@U) ) (! (let (($generated@@427 ($generated@@309 (type $generated@@426))))
(let (($generated@@428 ($generated@@308 (type $generated@@426))))
 (=> (= (type $generated@@426) ($generated@@307 $generated@@428 $generated@@427)) (or (= $generated@@426 ($generated@@306 $generated@@428 $generated@@427)) (exists (($generated@@429 T@U) ($generated@@430 T@U) ) (!  (and (and (= (type $generated@@429) $generated@@154) (= (type $generated@@430) $generated@@154)) ($generated@@0 ($generated@@83 ($generated@@373 $generated@@426) ($generated@@268 ($generated@@220 $generated@@429 $generated@@430)))))
 :no-pattern (type $generated@@429)
 :no-pattern (type $generated@@430)
 :no-pattern ($generated $generated@@429)
 :no-pattern ($generated@@0 $generated@@429)
 :no-pattern ($generated $generated@@430)
 :no-pattern ($generated@@0 $generated@@430)
))))))
 :pattern ( ($generated@@373 $generated@@426))
)))
(assert (forall (($generated@@431 T@U) ) (!  (=> (and (= (type $generated@@431) $generated@@154) ($generated@@221 $generated@@431 $generated@@46)) (and (= ($generated@@268 ($generated@@326 $generated@@2 $generated@@431)) $generated@@431) ($generated@@141 ($generated@@326 $generated@@2 $generated@@431) $generated@@46)))
 :pattern ( ($generated@@221 $generated@@431 $generated@@46))
)))
(assert (forall (($generated@@432 T@U) ) (!  (=> (and (= (type $generated@@432) $generated@@154) ($generated@@221 $generated@@432 $generated@@47)) (and (= ($generated@@268 ($generated@@326 $generated@@3 $generated@@432)) $generated@@432) ($generated@@141 ($generated@@326 $generated@@3 $generated@@432) $generated@@47)))
 :pattern ( ($generated@@221 $generated@@432 $generated@@47))
)))
(assert (forall (($generated@@433 T@U) ) (!  (=> (and (= (type $generated@@433) $generated@@154) ($generated@@221 $generated@@433 $generated@@44)) (and (= ($generated@@268 ($generated@@326 $generated@@4 $generated@@433)) $generated@@433) ($generated@@141 ($generated@@326 $generated@@4 $generated@@433) $generated@@44)))
 :pattern ( ($generated@@221 $generated@@433 $generated@@44))
)))
(assert (= ($generated@@1 $generated@@434) 20))
(assert (forall (($generated@@435 T@U) ) (!  (=> (and (= (type $generated@@435) $generated@@154) ($generated@@221 $generated@@435 $generated@@45)) (and (= ($generated@@268 ($generated@@326 $generated@@434 $generated@@435)) $generated@@435) ($generated@@141 ($generated@@326 $generated@@434 $generated@@435) $generated@@45)))
 :pattern ( ($generated@@221 $generated@@435 $generated@@45))
)))
(assert (forall (($generated@@436 T@U) ($generated@@437 T@U) ) (!  (=> (= (type $generated@@437) $generated@@66) (= ($generated@@221 ($generated@@268 $generated@@436) $generated@@437) ($generated@@141 $generated@@436 $generated@@437)))
 :pattern ( ($generated@@221 ($generated@@268 $generated@@436) $generated@@437))
)))
(assert (forall (($generated@@438 T@U) ) (! (let (($generated@@439 ($generated@@81 (type $generated@@438))))
 (=> (= (type $generated@@438) ($generated@@78 $generated@@439 $generated@@2)) (<= 0 ($generated@@281 $generated@@438))))
 :pattern ( ($generated@@281 $generated@@438))
)))
(assert (forall (($generated@@440 T@U) ) (! (let (($generated@@441 ($generated@@262 (type $generated@@440))))
 (=> (= (type $generated@@440) ($generated@@261 $generated@@441)) (<= 0 ($generated@@260 $generated@@440))))
 :pattern ( ($generated@@260 $generated@@440))
)))
(assert (forall (($generated@@443 T@U) ) (! (= (type ($generated@@442 $generated@@443)) $generated@@66)
 :pattern ( ($generated@@442 $generated@@443))
)))
(assert (forall (($generated@@444 T@U) ($generated@@445 T@U) ) (!  (=> (and (= (type $generated@@444) $generated@@66) (= (type $generated@@445) $generated@@66)) (= ($generated@@442 ($generated@@391 $generated@@444 $generated@@445)) $generated@@444))
 :pattern ( ($generated@@391 $generated@@444 $generated@@445))
)))
(assert (forall (($generated@@447 T@U) ) (! (= (type ($generated@@446 $generated@@447)) $generated@@66)
 :pattern ( ($generated@@446 $generated@@447))
)))
(assert (forall (($generated@@448 T@U) ($generated@@449 T@U) ) (!  (=> (and (= (type $generated@@448) $generated@@66) (= (type $generated@@449) $generated@@66)) (= ($generated@@446 ($generated@@391 $generated@@448 $generated@@449)) $generated@@449))
 :pattern ( ($generated@@391 $generated@@448 $generated@@449))
)))
(assert (forall (($generated@@450 T@U) ($generated@@451 T@U) ) (!  (=> (and (= (type $generated@@450) $generated@@66) (= (type $generated@@451) $generated@@66)) (= ($generated@@74 ($generated@@391 $generated@@450 $generated@@451)) $generated@@58))
 :pattern ( ($generated@@391 $generated@@450 $generated@@451))
)))
(assert (forall (($generated@@453 T@U) ) (! (= (type ($generated@@452 $generated@@453)) $generated@@66)
 :pattern ( ($generated@@452 $generated@@453))
)))
(assert (forall (($generated@@454 T@U) ($generated@@455 T@U) ) (!  (=> (and (= (type $generated@@454) $generated@@66) (= (type $generated@@455) $generated@@66)) (= ($generated@@452 ($generated@@399 $generated@@454 $generated@@455)) $generated@@454))
 :pattern ( ($generated@@399 $generated@@454 $generated@@455))
)))
(assert (forall (($generated@@457 T@U) ) (! (= (type ($generated@@456 $generated@@457)) $generated@@66)
 :pattern ( ($generated@@456 $generated@@457))
)))
(assert (forall (($generated@@458 T@U) ($generated@@459 T@U) ) (!  (=> (and (= (type $generated@@458) $generated@@66) (= (type $generated@@459) $generated@@66)) (= ($generated@@456 ($generated@@399 $generated@@458 $generated@@459)) $generated@@459))
 :pattern ( ($generated@@399 $generated@@458 $generated@@459))
)))
(assert (forall (($generated@@460 T@U) ($generated@@461 T@U) ) (!  (=> (and (= (type $generated@@460) $generated@@66) (= (type $generated@@461) $generated@@66)) (= ($generated@@74 ($generated@@399 $generated@@460 $generated@@461)) $generated@@59))
 :pattern ( ($generated@@399 $generated@@460 $generated@@461))
)))
(assert (forall (($generated@@462 T@U) ($generated@@463 T@U) ) (!  (=> (and (= (type $generated@@462) $generated@@154) (= (type $generated@@463) $generated@@154)) (= ($generated@@253 ($generated@@220 $generated@@462 $generated@@463)) $generated@@62))
 :pattern ( ($generated@@220 $generated@@462 $generated@@463))
)))
(assert (forall (($generated@@465 T@U) ) (! (= (type ($generated@@464 $generated@@465)) $generated@@66)
 :pattern ( ($generated@@464 $generated@@465))
)))
(assert (forall (($generated@@466 T@U) ($generated@@467 T@U) ) (!  (=> (and (= (type $generated@@466) $generated@@66) (= (type $generated@@467) $generated@@66)) (= ($generated@@464 ($generated@@144 $generated@@466 $generated@@467)) $generated@@466))
 :pattern ( ($generated@@144 $generated@@466 $generated@@467))
)))
(assert (forall (($generated@@469 T@U) ) (! (= (type ($generated@@468 $generated@@469)) $generated@@66)
 :pattern ( ($generated@@468 $generated@@469))
)))
(assert (forall (($generated@@470 T@U) ($generated@@471 T@U) ) (!  (=> (and (= (type $generated@@470) $generated@@66) (= (type $generated@@471) $generated@@66)) (= ($generated@@468 ($generated@@144 $generated@@470 $generated@@471)) $generated@@471))
 :pattern ( ($generated@@144 $generated@@470 $generated@@471))
)))
(assert (forall (($generated@@472 T@U) ($generated@@473 T@U) ) (!  (=> (and (= (type $generated@@472) $generated@@154) (= (type $generated@@473) $generated@@154)) (= ($generated@@152 ($generated@@220 $generated@@472 $generated@@473)) $generated@@472))
 :pattern ( ($generated@@220 $generated@@472 $generated@@473))
)))
(assert (forall (($generated@@474 T@U) ($generated@@475 T@U) ) (!  (=> (and (= (type $generated@@474) $generated@@154) (= (type $generated@@475) $generated@@154)) (= ($generated@@153 ($generated@@220 $generated@@474 $generated@@475)) $generated@@475))
 :pattern ( ($generated@@220 $generated@@474 $generated@@475))
)))
(assert  (and (forall (($generated@@478 T@U) ) (! (= (type ($generated@@476 $generated@@478)) $generated@@66)
 :pattern ( ($generated@@476 $generated@@478))
)) (forall (($generated@@479 T@U) ($generated@@480 Int) ) (! (let (($generated@@481 ($generated@@262 (type $generated@@479))))
(= (type ($generated@@477 $generated@@479 $generated@@480)) $generated@@481))
 :pattern ( ($generated@@477 $generated@@479 $generated@@480))
))))
(assert (forall (($generated@@482 T@U) ($generated@@483 T@U) ($generated@@484 T@U) ) (!  (=> (and (and (= (type $generated@@482) ($generated@@261 $generated@@154)) (= (type $generated@@483) $generated@@66)) (= (type $generated@@484) ($generated@@78 $generated@@79 $generated@@80))) (= ($generated@@76 $generated@@482 ($generated@@476 $generated@@483) $generated@@484) (forall (($generated@@485 Int) ) (!  (=> (and (<= 0 $generated@@485) (< $generated@@485 ($generated@@260 $generated@@482))) ($generated@@247 ($generated@@477 $generated@@482 $generated@@485) $generated@@483 $generated@@484))
 :pattern ( ($generated@@477 $generated@@482 $generated@@485))
))))
 :pattern ( ($generated@@76 $generated@@482 ($generated@@476 $generated@@483) $generated@@484))
)))
(assert (forall (($generated@@487 Int) ) (! (= ($generated@@486 ($generated@@77 $generated@@487)) $generated@@487)
 :pattern ( ($generated@@77 $generated@@487))
)))
(assert (forall (($generated@@489 T@U) ) (! (= (type ($generated@@488 $generated@@489)) $generated@@66)
 :pattern ( ($generated@@488 $generated@@489))
)))
(assert (forall (($generated@@490 T@U) ) (!  (=> (= (type $generated@@490) $generated@@66) (= ($generated@@488 ($generated@@230 $generated@@490)) $generated@@490))
 :pattern ( ($generated@@230 $generated@@490))
)))
(assert (forall (($generated@@491 T@U) ) (!  (=> (= (type $generated@@491) $generated@@66) (= ($generated@@74 ($generated@@230 $generated@@491)) $generated@@54))
 :pattern ( ($generated@@230 $generated@@491))
)))
(assert (forall (($generated@@493 T@U) ) (! (= (type ($generated@@492 $generated@@493)) $generated@@66)
 :pattern ( ($generated@@492 $generated@@493))
)))
(assert (forall (($generated@@494 T@U) ) (!  (=> (= (type $generated@@494) $generated@@66) (= ($generated@@492 ($generated@@235 $generated@@494)) $generated@@494))
 :pattern ( ($generated@@235 $generated@@494))
)))
(assert (forall (($generated@@495 T@U) ) (!  (=> (= (type $generated@@495) $generated@@66) (= ($generated@@74 ($generated@@235 $generated@@495)) $generated@@55))
 :pattern ( ($generated@@235 $generated@@495))
)))
(assert (forall (($generated@@497 T@U) ) (! (= (type ($generated@@496 $generated@@497)) $generated@@66)
 :pattern ( ($generated@@496 $generated@@497))
)))
(assert (forall (($generated@@498 T@U) ) (!  (=> (= (type $generated@@498) $generated@@66) (= ($generated@@496 ($generated@@159 $generated@@498)) $generated@@498))
 :pattern ( ($generated@@159 $generated@@498))
)))
(assert (forall (($generated@@499 T@U) ) (!  (=> (= (type $generated@@499) $generated@@66) (= ($generated@@74 ($generated@@159 $generated@@499)) $generated@@56))
 :pattern ( ($generated@@159 $generated@@499))
)))
(assert (forall (($generated@@501 T@U) ) (! (= (type ($generated@@500 $generated@@501)) $generated@@66)
 :pattern ( ($generated@@500 $generated@@501))
)))
(assert (forall (($generated@@502 T@U) ) (!  (=> (= (type $generated@@502) $generated@@66) (= ($generated@@500 ($generated@@476 $generated@@502)) $generated@@502))
 :pattern ( ($generated@@476 $generated@@502))
)))
(assert (forall (($generated@@503 T@U) ) (!  (=> (= (type $generated@@503) $generated@@66) (= ($generated@@74 ($generated@@476 $generated@@503)) $generated@@57))
 :pattern ( ($generated@@476 $generated@@503))
)))
(assert (forall (($generated@@504 T@U) ) (! (let (($generated@@505 (type $generated@@504)))
(= ($generated@@326 $generated@@505 ($generated@@268 $generated@@504)) $generated@@504))
 :pattern ( ($generated@@268 $generated@@504))
)))
(assert (forall (($generated@@506 T@U) ($generated@@507 T@U) ($generated@@508 T@U) ) (!  (=> (and (and (= (type $generated@@506) ($generated@@289 $generated@@154 $generated@@154)) (= (type $generated@@507) $generated@@66)) (= (type $generated@@508) $generated@@66)) (= ($generated@@141 $generated@@506 ($generated@@391 $generated@@507 $generated@@508)) (forall (($generated@@509 T@U) ) (!  (=> (and (= (type $generated@@509) $generated@@154) ($generated@@0 ($generated@@83 ($generated@@287 $generated@@506) $generated@@509))) (and ($generated@@221 ($generated@@83 ($generated@@366 $generated@@506) $generated@@509) $generated@@508) ($generated@@221 $generated@@509 $generated@@507)))
 :pattern ( ($generated@@83 ($generated@@366 $generated@@506) $generated@@509))
 :pattern ( ($generated@@83 ($generated@@287 $generated@@506) $generated@@509))
))))
 :pattern ( ($generated@@141 $generated@@506 ($generated@@391 $generated@@507 $generated@@508)))
)))
(assert (forall (($generated@@510 T@U) ($generated@@511 T@U) ($generated@@512 T@U) ) (!  (=> (and (and (= (type $generated@@510) ($generated@@307 $generated@@154 $generated@@154)) (= (type $generated@@511) $generated@@66)) (= (type $generated@@512) $generated@@66)) (= ($generated@@141 $generated@@510 ($generated@@399 $generated@@511 $generated@@512)) (forall (($generated@@513 T@U) ) (!  (=> (and (= (type $generated@@513) $generated@@154) ($generated@@0 ($generated@@83 ($generated@@305 $generated@@510) $generated@@513))) (and ($generated@@221 ($generated@@83 ($generated@@374 $generated@@510) $generated@@513) $generated@@512) ($generated@@221 $generated@@513 $generated@@511)))
 :pattern ( ($generated@@83 ($generated@@374 $generated@@510) $generated@@513))
 :pattern ( ($generated@@83 ($generated@@305 $generated@@510) $generated@@513))
))))
 :pattern ( ($generated@@141 $generated@@510 ($generated@@399 $generated@@511 $generated@@512)))
)))
(assert (forall (($generated@@516 T@U) ($generated@@517 T@U) ) (!  (=> (and (= (type $generated@@516) $generated@@154) (= (type $generated@@517) $generated@@154)) (< ($generated@@514 $generated@@516) ($generated@@515 ($generated@@220 $generated@@516 $generated@@517))))
 :pattern ( ($generated@@220 $generated@@516 $generated@@517))
)))
(assert (forall (($generated@@518 T@U) ($generated@@519 T@U) ) (!  (=> (and (= (type $generated@@518) $generated@@154) (= (type $generated@@519) $generated@@154)) (< ($generated@@514 $generated@@519) ($generated@@515 ($generated@@220 $generated@@518 $generated@@519))))
 :pattern ( ($generated@@220 $generated@@518 $generated@@519))
)))
(assert (forall (($generated@@520 T@U) ($generated@@521 T@U) ($generated@@522 T@U) ) (!  (=> (and (and (and (= (type $generated@@520) $generated@@154) (= (type $generated@@521) $generated@@66)) (= (type $generated@@522) $generated@@66)) ($generated@@221 $generated@@520 ($generated@@391 $generated@@521 $generated@@522))) (and (= ($generated@@268 ($generated@@326 ($generated@@289 $generated@@154 $generated@@154) $generated@@520)) $generated@@520) ($generated@@141 ($generated@@326 ($generated@@289 $generated@@154 $generated@@154) $generated@@520) ($generated@@391 $generated@@521 $generated@@522))))
 :pattern ( ($generated@@221 $generated@@520 ($generated@@391 $generated@@521 $generated@@522)))
)))
(assert (forall (($generated@@523 T@U) ($generated@@524 T@U) ($generated@@525 T@U) ) (!  (=> (and (and (and (= (type $generated@@523) $generated@@154) (= (type $generated@@524) $generated@@66)) (= (type $generated@@525) $generated@@66)) ($generated@@221 $generated@@523 ($generated@@399 $generated@@524 $generated@@525))) (and (= ($generated@@268 ($generated@@326 ($generated@@307 $generated@@154 $generated@@154) $generated@@523)) $generated@@523) ($generated@@141 ($generated@@326 ($generated@@307 $generated@@154 $generated@@154) $generated@@523) ($generated@@399 $generated@@524 $generated@@525))))
 :pattern ( ($generated@@221 $generated@@523 ($generated@@399 $generated@@524 $generated@@525)))
)))
(assert (forall (($generated@@526 T@U) ($generated@@527 T@U) ($generated@@528 T@U) ) (!  (=> (and (and (and (= (type $generated@@526) $generated@@66) (= (type $generated@@527) $generated@@66)) (= (type $generated@@528) $generated@@154)) ($generated@@221 $generated@@528 ($generated@@144 $generated@@526 $generated@@527))) (and (= ($generated@@268 ($generated@@326 $generated@@145 $generated@@528)) $generated@@528) ($generated@@141 ($generated@@326 $generated@@145 $generated@@528) ($generated@@144 $generated@@526 $generated@@527))))
 :pattern ( ($generated@@221 $generated@@528 ($generated@@144 $generated@@526 $generated@@527)))
)))
(assert (forall (($generated@@529 T@U) ) (! (let (($generated@@530 (type $generated@@529)))
 (not ($generated@@0 ($generated@@83 ($generated@@410 $generated@@530) $generated@@529))))
 :pattern ( (let (($generated@@530 (type $generated@@529)))
($generated@@83 ($generated@@410 $generated@@530) $generated@@529)))
)))
(assert (forall (($generated@@532 T@U) ) (! (= (type ($generated@@531 $generated@@532)) $generated@@71)
 :pattern ( ($generated@@531 $generated@@532))
)))
(assert (forall (($generated@@533 T@U) ($generated@@534 T@U) ) (!  (=> (and (= (type $generated@@533) $generated@@66) (= (type $generated@@534) $generated@@66)) (and (= ($generated@@74 ($generated@@144 $generated@@533 $generated@@534)) $generated@@63) (= ($generated@@531 ($generated@@144 $generated@@533 $generated@@534)) $generated@@65)))
 :pattern ( ($generated@@144 $generated@@533 $generated@@534))
)))
(assert (forall (($generated@@535 T@U) ) (!  (=> (= (type $generated@@535) $generated@@145) (= ($generated@@514 ($generated@@268 $generated@@535)) ($generated@@515 $generated@@535)))
 :pattern ( ($generated@@514 ($generated@@268 $generated@@535)))
)))
(assert (forall (($generated@@536 T@U) ) (!  (=> (and (= (type $generated@@536) $generated@@154) ($generated@@221 $generated@@536 ($generated@@77 0))) (and (= ($generated@@268 ($generated@@326 $generated@@2 $generated@@536)) $generated@@536) ($generated@@141 ($generated@@326 ($generated@@78 $generated@@154 $generated@@4) $generated@@536) ($generated@@77 0))))
 :pattern ( ($generated@@221 $generated@@536 ($generated@@77 0)))
)))
(assert (forall (($generated@@537 T@U) ($generated@@538 T@U) ) (!  (=> (and (and (= (type $generated@@537) $generated@@154) (= (type $generated@@538) $generated@@66)) ($generated@@221 $generated@@537 ($generated@@230 $generated@@538))) (and (= ($generated@@268 ($generated@@326 ($generated@@78 $generated@@154 $generated@@4) $generated@@537)) $generated@@537) ($generated@@141 ($generated@@326 ($generated@@78 $generated@@154 $generated@@4) $generated@@537) ($generated@@230 $generated@@538))))
 :pattern ( ($generated@@221 $generated@@537 ($generated@@230 $generated@@538)))
)))
(assert (forall (($generated@@539 T@U) ($generated@@540 T@U) ) (!  (=> (and (and (= (type $generated@@539) $generated@@154) (= (type $generated@@540) $generated@@66)) ($generated@@221 $generated@@539 ($generated@@235 $generated@@540))) (and (= ($generated@@268 ($generated@@326 ($generated@@78 $generated@@154 $generated@@4) $generated@@539)) $generated@@539) ($generated@@141 ($generated@@326 ($generated@@78 $generated@@154 $generated@@4) $generated@@539) ($generated@@235 $generated@@540))))
 :pattern ( ($generated@@221 $generated@@539 ($generated@@235 $generated@@540)))
)))
(assert (forall (($generated@@541 T@U) ($generated@@542 T@U) ) (!  (=> (and (and (= (type $generated@@541) $generated@@154) (= (type $generated@@542) $generated@@66)) ($generated@@221 $generated@@541 ($generated@@159 $generated@@542))) (and (= ($generated@@268 ($generated@@326 ($generated@@78 $generated@@154 $generated@@2) $generated@@541)) $generated@@541) ($generated@@141 ($generated@@326 ($generated@@78 $generated@@154 $generated@@2) $generated@@541) ($generated@@159 $generated@@542))))
 :pattern ( ($generated@@221 $generated@@541 ($generated@@159 $generated@@542)))
)))
(assert (forall (($generated@@543 T@U) ($generated@@544 T@U) ) (!  (=> (and (and (= (type $generated@@543) $generated@@154) (= (type $generated@@544) $generated@@66)) ($generated@@221 $generated@@543 ($generated@@476 $generated@@544))) (and (= ($generated@@268 ($generated@@326 ($generated@@261 $generated@@154) $generated@@543)) $generated@@543) ($generated@@141 ($generated@@326 ($generated@@261 $generated@@154) $generated@@543) ($generated@@476 $generated@@544))))
 :pattern ( ($generated@@221 $generated@@543 ($generated@@476 $generated@@544)))
)))
(assert (= ($generated@@74 $generated@@138) $generated@@61))
(assert (= ($generated@@531 $generated@@138) $generated@@64))
(assert (forall (($generated@@545 T@U) ($generated@@546 T@U) ($generated@@547 T@U) ) (!  (=> (and (and (= (type $generated@@545) ($generated@@78 $generated@@154 $generated@@2)) (= (type $generated@@546) $generated@@66)) (= (type $generated@@547) ($generated@@78 $generated@@79 $generated@@80))) (= ($generated@@76 $generated@@545 ($generated@@159 $generated@@546) $generated@@547) (forall (($generated@@548 T@U) ) (!  (=> (and (= (type $generated@@548) $generated@@154) (< 0 ($generated ($generated@@83 $generated@@545 $generated@@548)))) ($generated@@247 $generated@@548 $generated@@546 $generated@@547))
 :pattern ( ($generated@@83 $generated@@545 $generated@@548))
))))
 :pattern ( ($generated@@76 $generated@@545 ($generated@@159 $generated@@546) $generated@@547))
)))
(assert (forall (($generated@@549 T@U) ($generated@@550 T@U) ($generated@@551 T@U) ) (!  (=> (and (and (and (= (type $generated@@549) $generated@@145) (= (type $generated@@550) $generated@@66)) (= (type $generated@@551) ($generated@@78 $generated@@79 $generated@@80))) (and ($generated@@246 $generated@@551) (and ($generated@@143 $generated@@549) (exists (($generated@@552 T@U) ) (!  (and (= (type $generated@@552) $generated@@66) ($generated@@76 $generated@@549 ($generated@@144 $generated@@550 $generated@@552) $generated@@551))
 :pattern ( ($generated@@76 $generated@@549 ($generated@@144 $generated@@550 $generated@@552) $generated@@551))
))))) ($generated@@247 ($generated@@152 $generated@@549) $generated@@550 $generated@@551))
 :pattern ( ($generated@@247 ($generated@@152 $generated@@549) $generated@@550 $generated@@551))
)))
(assert (forall (($generated@@553 T@U) ($generated@@554 T@U) ($generated@@555 T@U) ) (!  (=> (and (and (and (= (type $generated@@553) $generated@@145) (= (type $generated@@554) $generated@@66)) (= (type $generated@@555) ($generated@@78 $generated@@79 $generated@@80))) (and ($generated@@246 $generated@@555) (and ($generated@@143 $generated@@553) (exists (($generated@@556 T@U) ) (!  (and (= (type $generated@@556) $generated@@66) ($generated@@76 $generated@@553 ($generated@@144 $generated@@556 $generated@@554) $generated@@555))
 :pattern ( ($generated@@76 $generated@@553 ($generated@@144 $generated@@556 $generated@@554) $generated@@555))
))))) ($generated@@247 ($generated@@153 $generated@@553) $generated@@554 $generated@@555))
 :pattern ( ($generated@@247 ($generated@@153 $generated@@553) $generated@@554 $generated@@555))
)))
(assert (forall (($generated@@557 T@U) ($generated@@558 T@U) ) (!  (=> (and (= (type $generated@@557) $generated@@154) (= (type $generated@@558) $generated@@154)) (= ($generated@@220 ($generated@@242 $generated@@557) ($generated@@242 $generated@@558)) ($generated@@242 ($generated@@220 $generated@@557 $generated@@558))))
 :pattern ( ($generated@@220 ($generated@@242 $generated@@557) ($generated@@242 $generated@@558)))
)))
(assert (forall (($generated@@559 Int) ) (! (= ($generated@@268 ($generated@@8 ($generated@@240 $generated@@559))) ($generated@@242 ($generated@@268 ($generated@@8 $generated@@559))))
 :pattern ( ($generated@@268 ($generated@@8 ($generated@@240 $generated@@559))))
)))
(assert (forall (($generated@@560 T@U) ) (! (= ($generated@@268 ($generated@@242 $generated@@560)) ($generated@@242 ($generated@@268 $generated@@560)))
 :pattern ( ($generated@@268 ($generated@@242 $generated@@560)))
)))
(assert (forall (($generated@@561 T@U) ) (! (let (($generated@@562 ($generated@@262 (type $generated@@561))))
 (=> (and (= (type $generated@@561) ($generated@@261 $generated@@562)) (= ($generated@@260 $generated@@561) 0)) (= $generated@@561 ($generated@@259 $generated@@562))))
 :pattern ( ($generated@@260 $generated@@561))
)))
(assert (forall (($generated@@563 T@U) ($generated@@564 T@U) ($generated@@565 T@U) ) (! (let (($generated@@566 (type $generated@@564)))
 (=> (and (and (= (type $generated@@563) ($generated@@78 $generated@@566 $generated@@2)) (= (type $generated@@565) $generated@@2)) (<= 0 ($generated $generated@@565))) (= ($generated@@281 ($generated@@84 $generated@@563 $generated@@564 $generated@@565)) (+ (- ($generated@@281 $generated@@563) ($generated ($generated@@83 $generated@@563 $generated@@564))) ($generated $generated@@565)))))
 :pattern ( ($generated@@281 ($generated@@84 $generated@@563 $generated@@564 $generated@@565)))
)))
(assert (forall (($generated@@567 T@U) ($generated@@568 T@U) ) (!  (=> (and (= (type $generated@@567) ($generated@@78 $generated@@79 $generated@@80)) (= (type $generated@@568) $generated@@2)) ($generated@@76 $generated@@568 $generated@@46 $generated@@567))
 :pattern ( ($generated@@76 $generated@@568 $generated@@46 $generated@@567))
)))
(assert (forall (($generated@@569 T@U) ($generated@@570 T@U) ) (!  (=> (and (= (type $generated@@569) ($generated@@78 $generated@@79 $generated@@80)) (= (type $generated@@570) $generated@@3)) ($generated@@76 $generated@@570 $generated@@47 $generated@@569))
 :pattern ( ($generated@@76 $generated@@570 $generated@@47 $generated@@569))
)))
(assert (forall (($generated@@571 T@U) ($generated@@572 T@U) ) (!  (=> (and (= (type $generated@@571) ($generated@@78 $generated@@79 $generated@@80)) (= (type $generated@@572) $generated@@4)) ($generated@@76 $generated@@572 $generated@@44 $generated@@571))
 :pattern ( ($generated@@76 $generated@@572 $generated@@44 $generated@@571))
)))
(assert (forall (($generated@@573 T@U) ($generated@@574 T@U) ) (!  (=> (and (= (type $generated@@573) ($generated@@78 $generated@@79 $generated@@80)) (= (type $generated@@574) $generated@@434)) ($generated@@76 $generated@@574 $generated@@45 $generated@@573))
 :pattern ( ($generated@@76 $generated@@574 $generated@@45 $generated@@573))
)))
(assert (forall (($generated@@575 T@U) ($generated@@576 T@U) ) (!  (=> (and (= (type $generated@@575) ($generated@@78 $generated@@79 $generated@@80)) (= (type $generated@@576) $generated@@154)) ($generated@@76 $generated@@576 $generated@@48 $generated@@575))
 :pattern ( ($generated@@76 $generated@@576 $generated@@48 $generated@@575))
)))
(assert (forall (($generated@@577 T@U) ($generated@@578 T@U) ) (!  (=> (and (= (type $generated@@577) ($generated@@261 $generated@@154)) (= (type $generated@@578) $generated@@66)) (= ($generated@@141 $generated@@577 ($generated@@476 $generated@@578)) (forall (($generated@@579 Int) ) (!  (=> (and (<= 0 $generated@@579) (< $generated@@579 ($generated@@260 $generated@@577))) ($generated@@221 ($generated@@477 $generated@@577 $generated@@579) $generated@@578))
 :pattern ( ($generated@@477 $generated@@577 $generated@@579))
))))
 :pattern ( ($generated@@141 $generated@@577 ($generated@@476 $generated@@578)))
)))
(assert (forall (($generated@@581 T@U) ($generated@@582 Int) ) (!  (=> (= (type $generated@@581) ($generated@@261 $generated@@154)) (=> (and (<= 0 $generated@@582) (< $generated@@582 ($generated@@260 $generated@@581))) (< ($generated@@515 ($generated@@326 $generated@@145 ($generated@@477 $generated@@581 $generated@@582))) ($generated@@580 $generated@@581))))
 :pattern ( ($generated@@515 ($generated@@326 $generated@@145 ($generated@@477 $generated@@581 $generated@@582))))
)))
(assert (forall (($generated@@583 T@U) ($generated@@584 T@U) ($generated@@585 T@U) ) (!  (=> (and (and (and (= (type $generated@@583) ($generated@@289 $generated@@154 $generated@@154)) (= (type $generated@@584) $generated@@66)) (= (type $generated@@585) $generated@@66)) ($generated@@141 $generated@@583 ($generated@@391 $generated@@584 $generated@@585))) (and (and ($generated@@141 ($generated@@287 $generated@@583) ($generated@@230 $generated@@584)) ($generated@@141 ($generated@@334 $generated@@583) ($generated@@230 $generated@@585))) ($generated@@141 ($generated@@365 $generated@@583) ($generated@@230 ($generated@@144 $generated@@584 $generated@@585)))))
 :pattern ( ($generated@@141 $generated@@583 ($generated@@391 $generated@@584 $generated@@585)))
)))
(assert (forall (($generated@@586 T@U) ($generated@@587 T@U) ($generated@@588 T@U) ) (!  (=> (and (and (and (= (type $generated@@586) ($generated@@307 $generated@@154 $generated@@154)) (= (type $generated@@587) $generated@@66)) (= (type $generated@@588) $generated@@66)) ($generated@@141 $generated@@586 ($generated@@399 $generated@@587 $generated@@588))) (and (and ($generated@@141 ($generated@@305 $generated@@586) ($generated@@235 $generated@@587)) ($generated@@141 ($generated@@345 $generated@@586) ($generated@@235 $generated@@588))) ($generated@@141 ($generated@@373 $generated@@586) ($generated@@235 ($generated@@144 $generated@@587 $generated@@588)))))
 :pattern ( ($generated@@141 $generated@@586 ($generated@@399 $generated@@587 $generated@@588)))
)))
(assert (forall (($generated@@589 T@U) ) (!  (=> (= (type $generated@@589) $generated@@2) ($generated@@141 $generated@@589 $generated@@46))
 :pattern ( ($generated@@141 $generated@@589 $generated@@46))
)))
(assert (forall (($generated@@590 T@U) ) (!  (=> (= (type $generated@@590) $generated@@3) ($generated@@141 $generated@@590 $generated@@47))
 :pattern ( ($generated@@141 $generated@@590 $generated@@47))
)))
(assert (forall (($generated@@591 T@U) ) (!  (=> (= (type $generated@@591) $generated@@4) ($generated@@141 $generated@@591 $generated@@44))
 :pattern ( ($generated@@141 $generated@@591 $generated@@44))
)))
(assert (forall (($generated@@592 T@U) ) (!  (=> (= (type $generated@@592) $generated@@434) ($generated@@141 $generated@@592 $generated@@45))
 :pattern ( ($generated@@141 $generated@@592 $generated@@45))
)))
(assert (forall (($generated@@593 T@U) ) (!  (=> (= (type $generated@@593) $generated@@154) ($generated@@141 $generated@@593 $generated@@48))
 :pattern ( ($generated@@141 $generated@@593 $generated@@48))
)))
(push 1)
(declare-fun ControlFlow (Int Int) Int)
(declare-fun $generated@@594 () Int)
(declare-fun $generated@@595 () Int)
(declare-fun $generated@@596 () Int)
(declare-fun $generated@@597 () Int)
(declare-fun $generated@@598 () Int)
(declare-fun $generated@@599 () Int)
(declare-fun $generated@@600 () Bool)
(declare-fun $generated@@601 () Int)
(declare-fun $generated@@602 () Bool)
(declare-fun $generated@@603 () Int)
(declare-fun $generated@@604 () Int)
(declare-fun $generated@@605 () Int)
(declare-fun $generated@@606 () Int)
(declare-fun $generated@@607 () Int)
(declare-fun $generated@@608 () Int)
(declare-fun $generated@@609 () Int)
(declare-fun $generated@@610 () Int)
(declare-fun $generated@@611 () T@U)
(declare-fun $generated@@612 () T@U)
(declare-fun $generated@@613 () T@U)
(declare-fun $generated@@614 () Int)
(declare-fun $generated@@615 () Int)
(declare-fun $generated@@616 () Int)
(declare-fun $generated@@617 (T@U) Bool)
(declare-fun $generated@@618 () Int)
(declare-fun $generated@@619 () Int)
(assert  (and (and (= (type $generated@@611) ($generated@@78 $generated@@79 $generated@@80)) (= (type $generated@@612) $generated@@79)) (= (type $generated@@613) ($generated@@166 $generated@@79 $generated@@4))))
(set-option :timeout 0)
(set-option :rlimit 0)
(assert (not
 (=> (= (ControlFlow 0 0) 41) (let (($generated@@620  (=> (= (ControlFlow 0 32) (- 0 31)) (= $generated@@594 ($generated@@240 25)))))
(let (($generated@@621  (=> (= $generated@@595 $generated@@596) (=> (and (= $generated@@594 $generated@@597) (= (ControlFlow 0 33) 32)) $generated@@620))))
(let (($generated@@622 true))
(let (($generated@@623  (=> (and (or (and (<= $generated@@598 ($generated@@240 7)) (<= $generated@@598 $generated@@599)) (= $generated@@598 ($generated@@240 7))) (= (ControlFlow 0 21) 19)) $generated@@622)))
(let (($generated@@624  (=> (and (not (or (and (<= $generated@@598 ($generated@@240 7)) (<= $generated@@598 $generated@@599)) (= $generated@@598 ($generated@@240 7)))) (= (ControlFlow 0 20) 19)) $generated@@622)))
(let (($generated@@625  (=> (and (<= $generated@@598 ($generated@@240 7)) (<= $generated@@598 $generated@@599)) (and (=> (= (ControlFlow 0 23) 20) $generated@@624) (=> (= (ControlFlow 0 23) 21) $generated@@623)))))
(let (($generated@@626  (=> (not (and (<= $generated@@598 ($generated@@240 7)) (<= $generated@@598 $generated@@599))) (and (=> (= (ControlFlow 0 22) 20) $generated@@624) (=> (= (ControlFlow 0 22) 21) $generated@@623)))))
(let (($generated@@627  (=> (< ($generated@@240 7) $generated@@598) (and (=> (= (ControlFlow 0 25) 22) $generated@@626) (=> (= (ControlFlow 0 25) 23) $generated@@625)))))
(let (($generated@@628  (=> (<= $generated@@598 ($generated@@240 7)) (and (=> (= (ControlFlow 0 24) 22) $generated@@626) (=> (= (ControlFlow 0 24) 23) $generated@@625)))))
(let (($generated@@629  (=> (not $generated@@600) (and (=> (= (ControlFlow 0 26) 24) $generated@@628) (=> (= (ControlFlow 0 26) 25) $generated@@627)))))
(let (($generated@@630  (=> (and (and (= $generated@@601 (+ $generated@@595 1)) (= (ControlFlow 0 9) (- 0 8))) $generated@@602) (= $generated@@603 $generated@@601))))
(let (($generated@@631  (and (=> (= (ControlFlow 0 13) (- 0 14)) ($generated@@141 ($generated@@8 (+ $generated@@597 1)) $generated@@138)) (=> ($generated@@141 ($generated@@8 (+ $generated@@597 1)) $generated@@138) (=> (= $generated@@604 (+ $generated@@597 1)) (=> (and (= $generated@@603 $generated@@604) (= (ControlFlow 0 13) 9)) $generated@@630))))))
(let (($generated@@632  (=> (and (= $generated@@598 ($generated@@240 7)) (= (ControlFlow 0 16) 13)) $generated@@631)))
(let (($generated@@633  (=> (and (<= $generated@@605 $generated@@598) (= (ControlFlow 0 15) 13)) $generated@@631)))
(let (($generated@@634  (=> (and (= $generated@@598 $generated@@599) (= $generated@@606 ($generated@@240 8))) (and (=> (= (ControlFlow 0 10) (- 0 11)) ($generated@@141 ($generated@@8 (+ $generated@@597 1)) $generated@@138)) (=> ($generated@@141 ($generated@@8 (+ $generated@@597 1)) $generated@@138) (=> (= $generated@@607 (+ $generated@@597 1)) (=> (and (= $generated@@603 $generated@@607) (= (ControlFlow 0 10) 9)) $generated@@630)))))))
(let (($generated@@635  (=> (and (not (= $generated@@598 $generated@@599)) (= $generated@@608 (+ $generated@@598 1))) (and (=> (= (ControlFlow 0 5) (- 0 7)) (or (<= 0 $generated@@609) (= (- $generated@@605 $generated@@608) $generated@@609))) (=> (or (<= 0 $generated@@609) (= (- $generated@@605 $generated@@608) $generated@@609)) (and (=> (= (ControlFlow 0 5) (- 0 6)) (< (- $generated@@605 $generated@@608) $generated@@609)) (=> (< (- $generated@@605 $generated@@608) $generated@@609) (=> (= (ControlFlow 0 5) (- 0 4)) (=> $generated@@600 (or (or (and (<= $generated@@608 ($generated@@240 7)) (<= $generated@@608 $generated@@599)) (= $generated@@608 ($generated@@240 7))) (< $generated@@599 7)))))))))))
(let (($generated@@636  (=> (not (= $generated@@598 ($generated@@240 7))) (and (=> (= (ControlFlow 0 12) 10) $generated@@634) (=> (= (ControlFlow 0 12) 5) $generated@@635)))))
(let (($generated@@637  (=> (and (< $generated@@598 $generated@@605) (= $generated@@609 (- $generated@@605 $generated@@598))) (and (=> (= (ControlFlow 0 17) 16) $generated@@632) (=> (= (ControlFlow 0 17) 12) $generated@@636)))))
(let (($generated@@638  (=> $generated@@600 (and (=> (= (ControlFlow 0 18) 15) $generated@@633) (=> (= (ControlFlow 0 18) 17) $generated@@637)))))
(let (($generated@@639  (and (=> (= (ControlFlow 0 27) 26) $generated@@629) (=> (= (ControlFlow 0 27) 18) $generated@@638))))
(let (($generated@@640 true))
(let (($generated@@641  (=> (and (and (and (and (and (and (and (and (and (<= 0 $generated@@597) (not false)) (<= 0 $generated@@595)) (= $generated@@610 0)) (= $generated@@596 25)) $generated@@602) (and (<= 0 $generated@@598) (< $generated@@598 8))) (=> $generated@@600 true)) (and (=> $generated@@600 (or (or (and (<= $generated@@598 ($generated@@240 7)) (<= $generated@@598 $generated@@599)) (= $generated@@598 ($generated@@240 7))) (< $generated@@599 7))) (forall (($generated@@642 T@U) ) (!  (=> (= (type $generated@@642) $generated@@79) (=> (and (not (= $generated@@642 $generated@@612)) ($generated@@0 ($generated@@85 ($generated@@83 $generated@@611 $generated@@642) $generated@@60))) (= ($generated@@83 $generated@@611 $generated@@642) ($generated@@83 $generated@@611 $generated@@642))))
 :pattern ( ($generated@@83 $generated@@611 $generated@@642))
)))) (and (and ($generated@@134 $generated@@611 $generated@@611) (forall (($generated@@643 T@U) ($generated@@644 T@U) ) (! (let (($generated@@645 ($generated@@69 (type $generated@@644))))
 (=> (and (and (= (type $generated@@643) $generated@@79) (= (type $generated@@644) ($generated@@68 $generated@@645))) (and (not (= $generated@@643 $generated@@612)) ($generated@@0 ($generated@@85 ($generated@@83 $generated@@611 $generated@@643) $generated@@60)))) (or (= ($generated@@85 ($generated@@83 $generated@@611 $generated@@643) $generated@@644) ($generated@@85 ($generated@@83 $generated@@611 $generated@@643) $generated@@644)) ($generated@@0 ($generated@@164 $generated@@613 $generated@@643 $generated@@644)))))
 :pattern ( ($generated@@85 ($generated@@83 $generated@@611 $generated@@643) $generated@@644))
))) (and (<= (- $generated@@605 $generated@@598) $generated@@614) (=> (= (- $generated@@605 $generated@@598) $generated@@614) true)))) (and (=> (= (ControlFlow 0 28) 3) $generated@@640) (=> (= (ControlFlow 0 28) 27) $generated@@639)))))
(let (($generated@@646  (=> (not (= $generated@@595 $generated@@596)) (=> (and (= $generated@@615 ($generated@@240 0)) (= $generated@@614 (- $generated@@605 $generated@@615))) (and (=> (= (ControlFlow 0 29) (- 0 30)) (=> $generated@@600 (or (or (and (<= $generated@@615 ($generated@@240 7)) (<= $generated@@615 $generated@@599)) (= $generated@@615 ($generated@@240 7))) (< $generated@@599 7)))) (=> (=> $generated@@600 (or (or (and (<= $generated@@615 ($generated@@240 7)) (<= $generated@@615 $generated@@599)) (= $generated@@615 ($generated@@240 7))) (< $generated@@599 7))) (=> (= (ControlFlow 0 29) 28) $generated@@641)))))))
(let (($generated@@647  (=> $generated@@602 (and (=> (= (ControlFlow 0 34) 33) $generated@@621) (=> (= (ControlFlow 0 34) 29) $generated@@646)))))
(let (($generated@@648 true))
(let (($generated@@649  (and (=> (= (ControlFlow 0 35) 2) $generated@@648) (=> (= (ControlFlow 0 35) 34) $generated@@647))))
(let (($generated@@650 true))
(let (($generated@@651  (=> (<= ($generated@@240 0) $generated@@597) (=> (and (and (and (and (and (<= 0 $generated@@597) (not false)) (<= 0 $generated@@595)) (= $generated@@610 0)) (= $generated@@596 25)) (and (and (and (<= $generated@@610 $generated@@595) (<= $generated@@595 $generated@@596)) (=> $generated@@602 true)) (and (and (=> $generated@@602 (= $generated@@597 $generated@@595)) (forall (($generated@@652 T@U) ) (!  (=> (= (type $generated@@652) $generated@@79) (=> (and (not (= $generated@@652 $generated@@612)) ($generated@@0 ($generated@@85 ($generated@@83 $generated@@611 $generated@@652) $generated@@60))) (= ($generated@@83 $generated@@611 $generated@@652) ($generated@@83 $generated@@611 $generated@@652))))
 :pattern ( ($generated@@83 $generated@@611 $generated@@652))
))) (and ($generated@@134 $generated@@611 $generated@@611) (forall (($generated@@653 T@U) ($generated@@654 T@U) ) (! (let (($generated@@655 ($generated@@69 (type $generated@@654))))
 (=> (and (and (= (type $generated@@653) $generated@@79) (= (type $generated@@654) ($generated@@68 $generated@@655))) (and (not (= $generated@@653 $generated@@612)) ($generated@@0 ($generated@@85 ($generated@@83 $generated@@611 $generated@@653) $generated@@60)))) (or (= ($generated@@85 ($generated@@83 $generated@@611 $generated@@653) $generated@@654) ($generated@@85 ($generated@@83 $generated@@611 $generated@@653) $generated@@654)) ($generated@@0 ($generated@@164 $generated@@613 $generated@@653 $generated@@654)))))
 :pattern ( ($generated@@85 ($generated@@83 $generated@@611 $generated@@653) $generated@@654))
)))))) (and (=> (= (ControlFlow 0 36) 1) $generated@@650) (=> (= (ControlFlow 0 36) 35) $generated@@649))))))
(let (($generated@@656  (=> (= $generated@@613 ($generated@@165 $generated@@612 $generated@@611 $generated@@60 false)) (and (=> (= (ControlFlow 0 37) (- 0 40)) ($generated@@141 ($generated@@8 ($generated@@240 0)) $generated@@138)) (=> ($generated@@141 ($generated@@8 ($generated@@240 0)) $generated@@138) (=> (= $generated@@616 ($generated@@240 0)) (=> (and (= $generated@@610 ($generated@@240 0)) (= $generated@@596 ($generated@@240 25))) (and (=> (= (ControlFlow 0 37) (- 0 39)) (<= $generated@@610 $generated@@596)) (=> (<= $generated@@610 $generated@@596) (and (=> (= (ControlFlow 0 37) (- 0 38)) (=> $generated@@602 (= $generated@@616 $generated@@610))) (=> (=> $generated@@602 (= $generated@@616 $generated@@610)) (=> (= (ControlFlow 0 37) 36) $generated@@651))))))))))))
(let (($generated@@657  (=> (and (and (and ($generated@@246 $generated@@611) ($generated@@617 $generated@@611)) (<= ($generated@@240 0) $generated@@605)) (and (and (<= ($generated@@240 0) $generated@@599) (<= ($generated@@240 0) $generated@@618)) (and (= 1 $generated@@619) (= (ControlFlow 0 41) 37)))) $generated@@656)))
$generated@@657)))))))))))))))))))))))))))))))
))
(check-sat)
(pop 1)
; Valid
(get-info :rlimit)
(reset)
(set-option :rlimit 0)
; did a full reset
(reset)
(set-option :print-success false)
(set-info :smt-lib-version 2.6)
(set-option :auto_config false)
(set-option :type_check true)
(set-option :smt.case_split 3)
(set-option :smt.qi.eager_threshold 100)
(set-option :smt.delay_units true)
(set-option :smt.arith.solver 2)
(set-option :smt.mbqi false)
(set-option :model.compact false)
(set-option :model.v2 true)
(set-option :pp.bv_literals false)
; done setting options


(set-info :category "industrial")
(declare-sort |T@U| 0)
(declare-sort |T@T| 0)
(declare-fun real_pow (Real Real) Real)
(declare-fun UOrdering2 (|T@U| |T@U|) Bool)
(declare-fun UOrdering3 (|T@T| |T@U| |T@U|) Bool)
(declare-fun tickleBool (Bool) Bool)
(assert (and (tickleBool true) (tickleBool false)))
(declare-fun $generated (T@U) Int)
(declare-fun $generated@@0 (T@U) Bool)
(declare-fun $generated@@1 (T@T) Int)
(declare-fun $generated@@2 () T@T)
(declare-fun $generated@@3 () T@T)
(declare-fun $generated@@4 () T@T)
(declare-fun $generated@@5 () T@T)
(declare-fun $generated@@6 () T@T)
(declare-fun $generated@@7 () T@T)
(declare-fun $generated@@8 (Int) T@U)
(declare-fun type (T@U) T@T)
(declare-fun $generated@@9 (Real) T@U)
(declare-fun $generated@@10 (T@U) Real)
(declare-fun $generated@@11 (Bool) T@U)
(declare-fun $generated@@12 (RoundingMode) T@U)
(declare-fun $generated@@13 (T@U) RoundingMode)
(declare-fun $generated@@14 (String) T@U)
(declare-fun $generated@@15 (T@U) String)
(declare-fun $generated@@16 ((RegEx String)) T@U)
(declare-fun $generated@@17 (T@U) (RegEx String))
(declare-fun $generated@@44 (T@U T@U) Bool)
(declare-fun $generated@@45 (T@T T@T) T@T)
(declare-fun $generated@@46 () T@T)
(declare-fun $generated@@47 () T@T)
(declare-fun $generated@@48 (T@U T@U) T@U)
(declare-fun $generated@@49 (T@U T@U) T@U)
(declare-fun $generated@@50 () T@U)
(declare-fun $generated@@51 (T@T) T@T)
(declare-fun $generated@@52 (T@T) T@T)
(declare-fun $generated@@53 (T@U T@U T@U) T@U)
(declare-fun $generated@@54 (T@T) T@T)
(declare-fun $generated@@55 (T@T) T@T)
(declare-fun $generated@@56 (T@U T@U T@U) T@U)
(declare-fun $generated@@106 (T@U T@U T@U) T@U)
(declare-fun $generated@@107 (T@U T@U T@U Bool) T@U)
(declare-fun $generated@@108 (T@T T@T) T@T)
(declare-fun $generated@@109 (T@T) T@T)
(declare-fun $generated@@110 (T@T) T@T)
(declare-fun $generated@@111 (T@U T@U T@U T@U) T@U)
(declare-fun $generated@@162 (Int) Int)
(declare-fun $generated@@164 (T@U) T@U)
(declare-fun $generated@@171 (T@U) T@U)
(declare-fun $generated@@172 (T@T T@U) T@U)
(declare-fun $generated@@173 () T@T)
(assert  (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (= ($generated@@1 $generated@@2) 0) (= ($generated@@1 $generated@@3) 1)) (= ($generated@@1 $generated@@4) 2)) (= ($generated@@1 $generated@@5) 3)) (= ($generated@@1 $generated@@6) 4)) (= ($generated@@1 $generated@@7) 5)) (forall (($generated@@18 Int) ) (! (= ($generated ($generated@@8 $generated@@18)) $generated@@18)
 :pattern ( ($generated@@8 $generated@@18))
))) (forall (($generated@@19 T@U) ) (!  (=> (= (type $generated@@19) $generated@@2) (= ($generated@@8 ($generated $generated@@19)) $generated@@19))
 :pattern ( ($generated $generated@@19))
))) (forall (($generated@@20 Int) ) (! (= (type ($generated@@8 $generated@@20)) $generated@@2)
 :pattern ( ($generated@@8 $generated@@20))
))) (forall (($generated@@21 Real) ) (! (= ($generated@@10 ($generated@@9 $generated@@21)) $generated@@21)
 :pattern ( ($generated@@9 $generated@@21))
))) (forall (($generated@@22 T@U) ) (!  (=> (= (type $generated@@22) $generated@@3) (= ($generated@@9 ($generated@@10 $generated@@22)) $generated@@22))
 :pattern ( ($generated@@10 $generated@@22))
))) (forall (($generated@@23 Real) ) (! (= (type ($generated@@9 $generated@@23)) $generated@@3)
 :pattern ( ($generated@@9 $generated@@23))
))) (forall (($generated@@24 Bool) ) (! (= ($generated@@0 ($generated@@11 $generated@@24)) $generated@@24)
 :pattern ( ($generated@@11 $generated@@24))
))) (forall (($generated@@25 T@U) ) (!  (=> (= (type $generated@@25) $generated@@4) (= ($generated@@11 ($generated@@0 $generated@@25)) $generated@@25))
 :pattern ( ($generated@@0 $generated@@25))
))) (forall (($generated@@26 Bool) ) (! (= (type ($generated@@11 $generated@@26)) $generated@@4)
 :pattern ( ($generated@@11 $generated@@26))
))) (forall (($generated@@27 RoundingMode) ) (! (= ($generated@@13 ($generated@@12 $generated@@27)) $generated@@27)
 :pattern ( ($generated@@12 $generated@@27))
))) (forall (($generated@@28 T@U) ) (!  (=> (= (type $generated@@28) $generated@@5) (= ($generated@@12 ($generated@@13 $generated@@28)) $generated@@28))
 :pattern ( ($generated@@13 $generated@@28))
))) (forall (($generated@@29 RoundingMode) ) (! (= (type ($generated@@12 $generated@@29)) $generated@@5)
 :pattern ( ($generated@@12 $generated@@29))
))) (forall (($generated@@30 String) ) (! (= ($generated@@15 ($generated@@14 $generated@@30)) $generated@@30)
 :pattern ( ($generated@@14 $generated@@30))
))) (forall (($generated@@31 T@U) ) (!  (=> (= (type $generated@@31) $generated@@6) (= ($generated@@14 ($generated@@15 $generated@@31)) $generated@@31))
 :pattern ( ($generated@@15 $generated@@31))
))) (forall (($generated@@32 String) ) (! (= (type ($generated@@14 $generated@@32)) $generated@@6)
 :pattern ( ($generated@@14 $generated@@32))
))) (forall (($generated@@33 (RegEx String)) ) (! (= ($generated@@17 ($generated@@16 $generated@@33)) $generated@@33)
 :pattern ( ($generated@@16 $generated@@33))
))) (forall (($generated@@34 T@U) ) (!  (=> (= (type $generated@@34) $generated@@7) (= ($generated@@16 ($generated@@17 $generated@@34)) $generated@@34))
 :pattern ( ($generated@@17 $generated@@34))
))) (forall (($generated@@35 (RegEx String)) ) (! (= (type ($generated@@16 $generated@@35)) $generated@@7)
 :pattern ( ($generated@@16 $generated@@35))
))))
(assert (forall (($generated@@36 T@U) ) (! (UOrdering2 $generated@@36 $generated@@36)
 :no-pattern ($generated $generated@@36)
 :no-pattern ($generated@@0 $generated@@36)
)))
(assert (forall (($generated@@37 T@U) ($generated@@38 T@U) ($generated@@39 T@U) ) (! (let (($generated@@40 (type $generated@@37)))
 (=> (and (and (= (type $generated@@38) $generated@@40) (= (type $generated@@39) $generated@@40)) (and (UOrdering2 $generated@@37 $generated@@38) (UOrdering2 $generated@@38 $generated@@39))) (UOrdering2 $generated@@37 $generated@@39)))
 :pattern ( (UOrdering2 $generated@@37 $generated@@38) (UOrdering2 $generated@@38 $generated@@39))
)))
(assert (forall (($generated@@41 T@U) ($generated@@42 T@U) ) (! (let (($generated@@43 (type $generated@@41)))
 (=> (= (type $generated@@42) $generated@@43) (=> (and (UOrdering2 $generated@@41 $generated@@42) (UOrdering2 $generated@@42 $generated@@41)) (= $generated@@41 $generated@@42))))
 :pattern ( (UOrdering2 $generated@@41 $generated@@42) (UOrdering2 $generated@@42 $generated@@41))
)))
(assert  (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (forall (($generated@@57 T@T) ($generated@@58 T@T) ) (= ($generated@@1 ($generated@@45 $generated@@57 $generated@@58)) 6)) (forall (($generated@@59 T@T) ($generated@@60 T@T) ) (! (= ($generated@@51 ($generated@@45 $generated@@59 $generated@@60)) $generated@@59)
 :pattern ( ($generated@@45 $generated@@59 $generated@@60))
))) (forall (($generated@@61 T@T) ($generated@@62 T@T) ) (! (= ($generated@@52 ($generated@@45 $generated@@61 $generated@@62)) $generated@@62)
 :pattern ( ($generated@@45 $generated@@61 $generated@@62))
))) (forall (($generated@@63 T@U) ($generated@@64 T@U) ) (! (let (($generated@@65 ($generated@@52 (type $generated@@63))))
(= (type ($generated@@49 $generated@@63 $generated@@64)) $generated@@65))
 :pattern ( ($generated@@49 $generated@@63 $generated@@64))
))) (forall (($generated@@66 T@U) ($generated@@67 T@U) ($generated@@68 T@U) ) (! (let (($generated@@69 (type $generated@@68)))
(let (($generated@@70 (type $generated@@67)))
(= (type ($generated@@53 $generated@@66 $generated@@67 $generated@@68)) ($generated@@45 $generated@@70 $generated@@69))))
 :pattern ( ($generated@@53 $generated@@66 $generated@@67 $generated@@68))
))) (forall (($generated@@71 T@U) ($generated@@72 T@U) ($generated@@73 T@U) ) (! (let (($generated@@74 ($generated@@52 (type $generated@@71))))
 (=> (= (type $generated@@73) $generated@@74) (= ($generated@@49 ($generated@@53 $generated@@71 $generated@@72 $generated@@73) $generated@@72) $generated@@73)))
 :weight 0
))) (and (forall (($generated@@75 T@U) ($generated@@76 T@U) ($generated@@77 T@U) ($generated@@78 T@U) ) (!  (or (= $generated@@77 $generated@@78) (= ($generated@@49 ($generated@@53 $generated@@76 $generated@@77 $generated@@75) $generated@@78) ($generated@@49 $generated@@76 $generated@@78)))
 :weight 0
)) (forall (($generated@@79 T@U) ($generated@@80 T@U) ($generated@@81 T@U) ($generated@@82 T@U) ) (!  (or true (= ($generated@@49 ($generated@@53 $generated@@80 $generated@@81 $generated@@79) $generated@@82) ($generated@@49 $generated@@80 $generated@@82)))
 :weight 0
)))) (= ($generated@@1 $generated@@46) 7)) (forall (($generated@@83 T@T) ) (= ($generated@@1 ($generated@@54 $generated@@83)) 8))) (forall (($generated@@84 T@T) ) (! (= ($generated@@55 ($generated@@54 $generated@@84)) $generated@@84)
 :pattern ( ($generated@@54 $generated@@84))
))) (forall (($generated@@85 T@U) ($generated@@86 T@U) ) (! (let (($generated@@87 ($generated@@55 (type $generated@@86))))
(= (type ($generated@@48 $generated@@85 $generated@@86)) $generated@@87))
 :pattern ( ($generated@@48 $generated@@85 $generated@@86))
))) (= ($generated@@1 $generated@@47) 9)) (forall (($generated@@88 T@U) ($generated@@89 T@U) ($generated@@90 T@U) ) (! (= (type ($generated@@56 $generated@@88 $generated@@89 $generated@@90)) $generated@@47)
 :pattern ( ($generated@@56 $generated@@88 $generated@@89 $generated@@90))
))) (forall (($generated@@91 T@U) ($generated@@92 T@U) ($generated@@93 T@U) ) (! (let (($generated@@94 ($generated@@55 (type $generated@@92))))
 (=> (= (type $generated@@93) $generated@@94) (= ($generated@@48 ($generated@@56 $generated@@91 $generated@@92 $generated@@93) $generated@@92) $generated@@93)))
 :weight 0
))) (and (forall (($generated@@95 T@U) ($generated@@96 T@U) ($generated@@97 T@U) ($generated@@98 T@U) ) (!  (or (= $generated@@97 $generated@@98) (= ($generated@@48 ($generated@@56 $generated@@96 $generated@@97 $generated@@95) $generated@@98) ($generated@@48 $generated@@96 $generated@@98)))
 :weight 0
)) (forall (($generated@@99 T@U) ($generated@@100 T@U) ($generated@@101 T@U) ($generated@@102 T@U) ) (!  (or true (= ($generated@@48 ($generated@@56 $generated@@100 $generated@@101 $generated@@99) $generated@@102) ($generated@@48 $generated@@100 $generated@@102)))
 :weight 0
)))) (= (type $generated@@50) ($generated@@54 $generated@@4))))
(assert (forall (($generated@@103 T@U) ($generated@@104 T@U) ) (!  (=> (and (and (= (type $generated@@103) ($generated@@45 $generated@@46 $generated@@47)) (= (type $generated@@104) ($generated@@45 $generated@@46 $generated@@47))) ($generated@@44 $generated@@103 $generated@@104)) (forall (($generated@@105 T@U) ) (!  (=> (and (= (type $generated@@105) $generated@@46) ($generated@@0 ($generated@@48 ($generated@@49 $generated@@103 $generated@@105) $generated@@50))) ($generated@@0 ($generated@@48 ($generated@@49 $generated@@104 $generated@@105) $generated@@50)))
 :pattern ( ($generated@@48 ($generated@@49 $generated@@104 $generated@@105) $generated@@50))
)))
 :pattern ( ($generated@@44 $generated@@103 $generated@@104))
)))
(assert  (and (and (and (and (and (and (and (forall (($generated@@112 T@T) ($generated@@113 T@T) ) (= ($generated@@1 ($generated@@108 $generated@@112 $generated@@113)) 10)) (forall (($generated@@114 T@T) ($generated@@115 T@T) ) (! (= ($generated@@109 ($generated@@108 $generated@@114 $generated@@115)) $generated@@114)
 :pattern ( ($generated@@108 $generated@@114 $generated@@115))
))) (forall (($generated@@116 T@T) ($generated@@117 T@T) ) (! (= ($generated@@110 ($generated@@108 $generated@@116 $generated@@117)) $generated@@117)
 :pattern ( ($generated@@108 $generated@@116 $generated@@117))
))) (forall (($generated@@118 T@U) ($generated@@119 T@U) ($generated@@120 T@U) ) (! (let (($generated@@121 ($generated@@110 (type $generated@@118))))
(= (type ($generated@@106 $generated@@118 $generated@@119 $generated@@120)) $generated@@121))
 :pattern ( ($generated@@106 $generated@@118 $generated@@119 $generated@@120))
))) (forall (($generated@@122 T@U) ($generated@@123 T@U) ($generated@@124 T@U) ($generated@@125 T@U) ) (! (let (($generated@@126 (type $generated@@125)))
(let (($generated@@127 (type $generated@@123)))
(= (type ($generated@@111 $generated@@122 $generated@@123 $generated@@124 $generated@@125)) ($generated@@108 $generated@@127 $generated@@126))))
 :pattern ( ($generated@@111 $generated@@122 $generated@@123 $generated@@124 $generated@@125))
))) (forall (($generated@@128 T@U) ($generated@@129 T@U) ($generated@@130 T@U) ($generated@@131 T@U) ) (! (let (($generated@@132 ($generated@@110 (type $generated@@128))))
 (=> (= (type $generated@@131) $generated@@132) (= ($generated@@106 ($generated@@111 $generated@@128 $generated@@129 $generated@@130 $generated@@131) $generated@@129 $generated@@130) $generated@@131)))
 :weight 0
))) (and (and (forall (($generated@@133 T@U) ($generated@@134 T@U) ($generated@@135 T@U) ($generated@@136 T@U) ($generated@@137 T@U) ($generated@@138 T@U) ) (!  (or (= $generated@@135 $generated@@137) (= ($generated@@106 ($generated@@111 $generated@@134 $generated@@135 $generated@@136 $generated@@133) $generated@@137 $generated@@138) ($generated@@106 $generated@@134 $generated@@137 $generated@@138)))
 :weight 0
)) (forall (($generated@@139 T@U) ($generated@@140 T@U) ($generated@@141 T@U) ($generated@@142 T@U) ($generated@@143 T@U) ($generated@@144 T@U) ) (!  (or (= $generated@@142 $generated@@144) (= ($generated@@106 ($generated@@111 $generated@@140 $generated@@141 $generated@@142 $generated@@139) $generated@@143 $generated@@144) ($generated@@106 $generated@@140 $generated@@143 $generated@@144)))
 :weight 0
))) (forall (($generated@@145 T@U) ($generated@@146 T@U) ($generated@@147 T@U) ($generated@@148 T@U) ($generated@@149 T@U) ($generated@@150 T@U) ) (!  (or true (= ($generated@@106 ($generated@@111 $generated@@146 $generated@@147 $generated@@148 $generated@@145) $generated@@149 $generated@@150) ($generated@@106 $generated@@146 $generated@@149 $generated@@150)))
 :weight 0
)))) (forall (($generated@@151 T@U) ($generated@@152 T@U) ($generated@@153 T@U) ($generated@@154 Bool) ) (! (= (type ($generated@@107 $generated@@151 $generated@@152 $generated@@153 $generated@@154)) ($generated@@108 $generated@@46 $generated@@4))
 :pattern ( ($generated@@107 $generated@@151 $generated@@152 $generated@@153 $generated@@154))
))))
(assert (forall (($generated@@155 T@U) ($generated@@156 T@U) ($generated@@157 T@U) ($generated@@158 Bool) ($generated@@159 T@U) ($generated@@160 T@U) ) (! (let (($generated@@161 ($generated@@55 (type $generated@@160))))
 (=> (and (and (and (and (= (type $generated@@155) $generated@@46) (= (type $generated@@156) ($generated@@45 $generated@@46 $generated@@47))) (= (type $generated@@157) ($generated@@54 $generated@@4))) (= (type $generated@@159) $generated@@46)) (= (type $generated@@160) ($generated@@54 $generated@@161))) (= ($generated@@0 ($generated@@106 ($generated@@107 $generated@@155 $generated@@156 $generated@@157 $generated@@158) $generated@@159 $generated@@160))  (=> (and (not (= $generated@@159 $generated@@155)) ($generated@@0 ($generated@@48 ($generated@@49 $generated@@156 $generated@@159) $generated@@157))) $generated@@158))))
 :pattern ( ($generated@@106 ($generated@@107 $generated@@155 $generated@@156 $generated@@157 $generated@@158) $generated@@159 $generated@@160))
)))
(assert (forall (($generated@@163 Int) ) (! (= ($generated@@162 $generated@@163) $generated@@163)
 :pattern ( ($generated@@162 $generated@@163))
)))
(assert (forall (($generated@@165 T@U) ) (! (let (($generated@@166 (type $generated@@165)))
(= (type ($generated@@164 $generated@@165)) $generated@@166))
 :pattern ( ($generated@@164 $generated@@165))
)))
(assert (forall (($generated@@167 T@U) ) (! (= ($generated@@164 $generated@@167) $generated@@167)
 :pattern ( ($generated@@164 $generated@@167))
)))
(assert (forall (($generated@@168 T@U) ($generated@@169 T@U) ($generated@@170 T@U) ) (!  (=> (and (and (and (and (= (type $generated@@168) ($generated@@45 $generated@@46 $generated@@47)) (= (type $generated@@169) ($generated@@45 $generated@@46 $generated@@47))) (= (type $generated@@170) ($generated@@45 $generated@@46 $generated@@47))) (not (= $generated@@168 $generated@@170))) (and ($generated@@44 $generated@@168 $generated@@169) ($generated@@44 $generated@@169 $generated@@170))) ($generated@@44 $generated@@168 $generated@@170))
 :pattern ( ($generated@@44 $generated@@168 $generated@@169) ($generated@@44 $generated@@169 $generated@@170))
)))
(assert  (and (and (= ($generated@@1 $generated@@173) 11) (forall (($generated@@174 T@U) ) (! (= (type ($generated@@171 $generated@@174)) $generated@@173)
 :pattern ( ($generated@@171 $generated@@174))
))) (forall (($generated@@175 T@T) ($generated@@176 T@U) ) (! (= (type ($generated@@172 $generated@@175 $generated@@176)) $generated@@175)
 :pattern ( ($generated@@172 $generated@@175 $generated@@176))
))))
(assert (forall (($generated@@177 T@U) ) (! (let (($generated@@178 (type $generated@@177)))
(= ($generated@@172 $generated@@178 ($generated@@171 $generated@@177)) $generated@@177))
 :pattern ( ($generated@@171 $generated@@177))
)))
(assert (forall (($generated@@179 Int) ) (! (= ($generated@@171 ($generated@@8 ($generated@@162 $generated@@179))) ($generated@@164 ($generated@@171 ($generated@@8 $generated@@179))))
 :pattern ( ($generated@@171 ($generated@@8 ($generated@@162 $generated@@179))))
)))
(assert (forall (($generated@@180 T@U) ) (! (= ($generated@@171 ($generated@@164 $generated@@180)) ($generated@@164 ($generated@@171 $generated@@180)))
 :pattern ( ($generated@@171 ($generated@@164 $generated@@180)))
)))
(push 1)
(declare-fun ControlFlow (Int Int) Int)
(declare-fun $generated@@181 () Int)
(declare-fun $generated@@182 () Int)
(declare-fun $generated@@183 () Int)
(declare-fun $generated@@184 () Int)
(declare-fun $generated@@185 () Bool)
(declare-fun $generated@@186 () Int)
(declare-fun $generated@@187 () Int)
(declare-fun $generated@@188 () Int)
(declare-fun $generated@@189 () Int)
(declare-fun $generated@@190 () Bool)
(declare-fun $generated@@191 () Int)
(declare-fun $generated@@192 () T@U)
(declare-fun $generated@@193 () T@U)
(declare-fun $generated@@194 () T@U)
(declare-fun $generated@@195 (T@U) Bool)
(declare-fun $generated@@196 (T@U) Bool)
(declare-fun $generated@@197 () Int)
(assert  (and (and (= (type $generated@@192) ($generated@@45 $generated@@46 $generated@@47)) (= (type $generated@@193) $generated@@46)) (= (type $generated@@194) ($generated@@108 $generated@@46 $generated@@4))))
(set-option :timeout 0)
(set-option :rlimit 0)
(assert (not
 (=> (= (ControlFlow 0 0) 33) (let (($generated@@198 true))
(let (($generated@@199  (=> (and (= $generated@@181 $generated@@182) (= (ControlFlow 0 19) 15)) $generated@@198)))
(let (($generated@@200  (=> (= $generated@@181 $generated@@183) (and (=> (= (ControlFlow 0 16) (- 0 18)) (<= $generated@@183 $generated@@182)) (=> (<= $generated@@183 $generated@@182) (and (=> (= (ControlFlow 0 16) (- 0 17)) (<= $generated@@183 $generated@@182)) (=> (<= $generated@@183 $generated@@182) (=> (= (ControlFlow 0 16) 15) $generated@@198))))))))
(let (($generated@@201  (=> (and (and (= $generated@@184 (+ $generated@@181 1)) (= (ControlFlow 0 7) (- 0 6))) $generated@@185) (<= $generated@@184 $generated@@182))))
(let (($generated@@202  (and (=> (= (ControlFlow 0 9) (- 0 11)) (not (= $generated@@181 $generated@@186))) (and (=> (= (ControlFlow 0 9) (- 0 10)) (not (= $generated@@181 $generated@@182))) (=> (and (and (not (= $generated@@181 $generated@@186)) (not (= $generated@@181 $generated@@182))) (= (ControlFlow 0 9) 7)) $generated@@201)))))
(let (($generated@@203  (=> (and (= $generated@@181 $generated@@186) (= (ControlFlow 0 13) 9)) $generated@@202)))
(let (($generated@@204  (=> (and (not (= $generated@@181 $generated@@186)) (= (ControlFlow 0 12) 9)) $generated@@202)))
(let (($generated@@205  (=> (not (= $generated@@181 $generated@@182)) (and (=> (= (ControlFlow 0 14) 12) $generated@@204) (=> (= (ControlFlow 0 14) 13) $generated@@203)))))
(let (($generated@@206  (=> (not (= $generated@@181 $generated@@186)) (and (=> (= (ControlFlow 0 20) 19) $generated@@199) (=> (= (ControlFlow 0 20) 14) $generated@@205)))))
(let (($generated@@207  (=> (and (= $generated@@181 $generated@@186) (= (ControlFlow 0 8) 7)) $generated@@201)))
(let (($generated@@208  (=> (not (= $generated@@181 $generated@@183)) (and (=> (= (ControlFlow 0 21) 8) $generated@@207) (=> (= (ControlFlow 0 21) 20) $generated@@206)))))
(let (($generated@@209  (=> $generated@@185 (and (=> (= (ControlFlow 0 22) 16) $generated@@200) (=> (= (ControlFlow 0 22) 21) $generated@@208)))))
(let (($generated@@210 true))
(let (($generated@@211  (and (=> (= (ControlFlow 0 23) 5) $generated@@210) (=> (= (ControlFlow 0 23) 22) $generated@@209))))
(let (($generated@@212 true))
(let (($generated@@213  (=> (and (and (and (and (and (and (and (and (not false) (<= 0 $generated@@187)) (= $generated@@188 0)) (<= 0 $generated@@189)) $generated@@190) (<= 0 $generated@@181)) (= $generated@@191 0)) (<= 0 $generated@@183)) (and (and (and (<= $generated@@191 $generated@@181) (<= $generated@@181 $generated@@183)) (=> $generated@@185 true)) (and (and (=> $generated@@185 (<= $generated@@181 $generated@@182)) (forall (($generated@@214 T@U) ) (!  (=> (= (type $generated@@214) $generated@@46) (=> (and (not (= $generated@@214 $generated@@193)) ($generated@@0 ($generated@@48 ($generated@@49 $generated@@192 $generated@@214) $generated@@50))) (= ($generated@@49 $generated@@192 $generated@@214) ($generated@@49 $generated@@192 $generated@@214))))
 :pattern ( ($generated@@49 $generated@@192 $generated@@214))
))) (and ($generated@@44 $generated@@192 $generated@@192) (forall (($generated@@215 T@U) ($generated@@216 T@U) ) (! (let (($generated@@217 ($generated@@55 (type $generated@@216))))
 (=> (and (and (= (type $generated@@215) $generated@@46) (= (type $generated@@216) ($generated@@54 $generated@@217))) (and (not (= $generated@@215 $generated@@193)) ($generated@@0 ($generated@@48 ($generated@@49 $generated@@192 $generated@@215) $generated@@50)))) (or (= ($generated@@48 ($generated@@49 $generated@@192 $generated@@215) $generated@@216) ($generated@@48 ($generated@@49 $generated@@192 $generated@@215) $generated@@216)) ($generated@@0 ($generated@@106 $generated@@194 $generated@@215 $generated@@216)))))
 :pattern ( ($generated@@48 ($generated@@49 $generated@@192 $generated@@215) $generated@@216))
)))))) (and (=> (= (ControlFlow 0 24) 4) $generated@@212) (=> (= (ControlFlow 0 24) 23) $generated@@211)))))
(let (($generated@@218  (=> (and (not (= $generated@@187 $generated@@189)) (= $generated@@191 ($generated@@162 0))) (and (=> (= (ControlFlow 0 25) (- 0 27)) (<= $generated@@191 $generated@@183)) (=> (<= $generated@@191 $generated@@183) (and (=> (= (ControlFlow 0 25) (- 0 26)) (=> $generated@@185 (<= $generated@@191 $generated@@182))) (=> (=> $generated@@185 (<= $generated@@191 $generated@@182)) (=> (= (ControlFlow 0 25) 24) $generated@@213))))))))
(let (($generated@@219 true))
(let (($generated@@220  (=> $generated@@190 (and (=> (= (ControlFlow 0 28) 3) $generated@@219) (=> (= (ControlFlow 0 28) 25) $generated@@218)))))
(let (($generated@@221 true))
(let (($generated@@222  (and (=> (= (ControlFlow 0 29) 2) $generated@@221) (=> (= (ControlFlow 0 29) 28) $generated@@220))))
(let (($generated@@223 true))
(let (($generated@@224  (=> (and (and (and (and (not false) (<= 0 $generated@@187)) (= $generated@@188 0)) (<= 0 $generated@@189)) (and (and (and (<= $generated@@188 $generated@@187) (<= $generated@@187 $generated@@189)) (forall (($generated@@225 T@U) ) (!  (=> (= (type $generated@@225) $generated@@46) (=> (and (not (= $generated@@225 $generated@@193)) ($generated@@0 ($generated@@48 ($generated@@49 $generated@@192 $generated@@225) $generated@@50))) (= ($generated@@49 $generated@@192 $generated@@225) ($generated@@49 $generated@@192 $generated@@225))))
 :pattern ( ($generated@@49 $generated@@192 $generated@@225))
))) (and ($generated@@44 $generated@@192 $generated@@192) (forall (($generated@@226 T@U) ($generated@@227 T@U) ) (! (let (($generated@@228 ($generated@@55 (type $generated@@227))))
 (=> (and (and (= (type $generated@@226) $generated@@46) (= (type $generated@@227) ($generated@@54 $generated@@228))) (and (not (= $generated@@226 $generated@@193)) ($generated@@0 ($generated@@48 ($generated@@49 $generated@@192 $generated@@226) $generated@@50)))) (or (= ($generated@@48 ($generated@@49 $generated@@192 $generated@@226) $generated@@227) ($generated@@48 ($generated@@49 $generated@@192 $generated@@226) $generated@@227)) ($generated@@0 ($generated@@106 $generated@@194 $generated@@226 $generated@@227)))))
 :pattern ( ($generated@@48 ($generated@@49 $generated@@192 $generated@@226) $generated@@227))
))))) (and (=> (= (ControlFlow 0 30) 1) $generated@@223) (=> (= (ControlFlow 0 30) 29) $generated@@222)))))
(let (($generated@@229  (=> (and (= $generated@@194 ($generated@@107 $generated@@193 $generated@@192 $generated@@50 false)) (= $generated@@188 ($generated@@162 0))) (and (=> (= (ControlFlow 0 31) (- 0 32)) (<= $generated@@188 $generated@@189)) (=> (<= $generated@@188 $generated@@189) (=> (= (ControlFlow 0 31) 30) $generated@@224))))))
(let (($generated@@230  (=> (and (and (and (and ($generated@@195 $generated@@192) ($generated@@196 $generated@@192)) (<= ($generated@@162 0) $generated@@189)) (and (<= ($generated@@162 0) $generated@@183) (<= ($generated@@162 0) $generated@@186))) (and (and (<= ($generated@@162 0) $generated@@182) (= 1 $generated@@197)) (and (not (= $generated@@186 $generated@@182)) (= (ControlFlow 0 33) 31)))) $generated@@229)))
$generated@@230))))))))))))))))))))))))))
))
(check-sat)
(pop 1)
; Valid
(get-info :rlimit)
(reset)
(set-option :rlimit 0)
; did a full reset
(reset)
(set-option :print-success false)
(set-info :smt-lib-version 2.6)
(set-option :auto_config false)
(set-option :type_check true)
(set-option :smt.case_split 3)
(set-option :smt.qi.eager_threshold 100)
(set-option :smt.delay_units true)
(set-option :smt.arith.solver 2)
(set-option :smt.mbqi false)
(set-option :model.compact false)
(set-option :model.v2 true)
(set-option :pp.bv_literals false)
; done setting options


(set-info :category "industrial")
(declare-sort |T@U| 0)
(declare-sort |T@T| 0)
(declare-fun real_pow (Real Real) Real)
(declare-fun UOrdering2 (|T@U| |T@U|) Bool)
(declare-fun UOrdering3 (|T@T| |T@U| |T@U|) Bool)
(declare-fun tickleBool (Bool) Bool)
(assert (and (tickleBool true) (tickleBool false)))
(declare-fun $generated (T@U) Int)
(declare-fun $generated@@0 (T@U) Bool)
(declare-fun $generated@@1 (T@T) Int)
(declare-fun $generated@@2 () T@T)
(declare-fun $generated@@3 () T@T)
(declare-fun $generated@@4 () T@T)
(declare-fun $generated@@5 () T@T)
(declare-fun $generated@@6 () T@T)
(declare-fun $generated@@7 () T@T)
(declare-fun $generated@@8 (Int) T@U)
(declare-fun type (T@U) T@T)
(declare-fun $generated@@9 (Real) T@U)
(declare-fun $generated@@10 (T@U) Real)
(declare-fun $generated@@11 (Bool) T@U)
(declare-fun $generated@@12 (RoundingMode) T@U)
(declare-fun $generated@@13 (T@U) RoundingMode)
(declare-fun $generated@@14 (String) T@U)
(declare-fun $generated@@15 (T@U) String)
(declare-fun $generated@@16 ((RegEx String)) T@U)
(declare-fun $generated@@17 (T@U) (RegEx String))
(declare-fun $generated@@44 (T@U T@U) Bool)
(declare-fun $generated@@45 (T@T T@T) T@T)
(declare-fun $generated@@46 () T@T)
(declare-fun $generated@@47 () T@T)
(declare-fun $generated@@48 (T@U T@U) T@U)
(declare-fun $generated@@49 (T@U T@U) T@U)
(declare-fun $generated@@50 () T@U)
(declare-fun $generated@@51 (T@T) T@T)
(declare-fun $generated@@52 (T@T) T@T)
(declare-fun $generated@@53 (T@U T@U T@U) T@U)
(declare-fun $generated@@54 (T@T) T@T)
(declare-fun $generated@@55 (T@T) T@T)
(declare-fun $generated@@56 (T@U T@U T@U) T@U)
(declare-fun $generated@@106 (T@U T@U T@U) T@U)
(declare-fun $generated@@107 (T@U T@U T@U Bool) T@U)
(declare-fun $generated@@108 (T@T T@T) T@T)
(declare-fun $generated@@109 (T@T) T@T)
(declare-fun $generated@@110 (T@T) T@T)
(declare-fun $generated@@111 (T@U T@U T@U T@U) T@U)
(declare-fun $generated@@162 (Int) Int)
(declare-fun $generated@@164 (T@U) T@U)
(declare-fun $generated@@171 (T@U) T@U)
(declare-fun $generated@@172 (T@T T@U) T@U)
(declare-fun $generated@@173 () T@T)
(assert  (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (= ($generated@@1 $generated@@2) 0) (= ($generated@@1 $generated@@3) 1)) (= ($generated@@1 $generated@@4) 2)) (= ($generated@@1 $generated@@5) 3)) (= ($generated@@1 $generated@@6) 4)) (= ($generated@@1 $generated@@7) 5)) (forall (($generated@@18 Int) ) (! (= ($generated ($generated@@8 $generated@@18)) $generated@@18)
 :pattern ( ($generated@@8 $generated@@18))
))) (forall (($generated@@19 T@U) ) (!  (=> (= (type $generated@@19) $generated@@2) (= ($generated@@8 ($generated $generated@@19)) $generated@@19))
 :pattern ( ($generated $generated@@19))
))) (forall (($generated@@20 Int) ) (! (= (type ($generated@@8 $generated@@20)) $generated@@2)
 :pattern ( ($generated@@8 $generated@@20))
))) (forall (($generated@@21 Real) ) (! (= ($generated@@10 ($generated@@9 $generated@@21)) $generated@@21)
 :pattern ( ($generated@@9 $generated@@21))
))) (forall (($generated@@22 T@U) ) (!  (=> (= (type $generated@@22) $generated@@3) (= ($generated@@9 ($generated@@10 $generated@@22)) $generated@@22))
 :pattern ( ($generated@@10 $generated@@22))
))) (forall (($generated@@23 Real) ) (! (= (type ($generated@@9 $generated@@23)) $generated@@3)
 :pattern ( ($generated@@9 $generated@@23))
))) (forall (($generated@@24 Bool) ) (! (= ($generated@@0 ($generated@@11 $generated@@24)) $generated@@24)
 :pattern ( ($generated@@11 $generated@@24))
))) (forall (($generated@@25 T@U) ) (!  (=> (= (type $generated@@25) $generated@@4) (= ($generated@@11 ($generated@@0 $generated@@25)) $generated@@25))
 :pattern ( ($generated@@0 $generated@@25))
))) (forall (($generated@@26 Bool) ) (! (= (type ($generated@@11 $generated@@26)) $generated@@4)
 :pattern ( ($generated@@11 $generated@@26))
))) (forall (($generated@@27 RoundingMode) ) (! (= ($generated@@13 ($generated@@12 $generated@@27)) $generated@@27)
 :pattern ( ($generated@@12 $generated@@27))
))) (forall (($generated@@28 T@U) ) (!  (=> (= (type $generated@@28) $generated@@5) (= ($generated@@12 ($generated@@13 $generated@@28)) $generated@@28))
 :pattern ( ($generated@@13 $generated@@28))
))) (forall (($generated@@29 RoundingMode) ) (! (= (type ($generated@@12 $generated@@29)) $generated@@5)
 :pattern ( ($generated@@12 $generated@@29))
))) (forall (($generated@@30 String) ) (! (= ($generated@@15 ($generated@@14 $generated@@30)) $generated@@30)
 :pattern ( ($generated@@14 $generated@@30))
))) (forall (($generated@@31 T@U) ) (!  (=> (= (type $generated@@31) $generated@@6) (= ($generated@@14 ($generated@@15 $generated@@31)) $generated@@31))
 :pattern ( ($generated@@15 $generated@@31))
))) (forall (($generated@@32 String) ) (! (= (type ($generated@@14 $generated@@32)) $generated@@6)
 :pattern ( ($generated@@14 $generated@@32))
))) (forall (($generated@@33 (RegEx String)) ) (! (= ($generated@@17 ($generated@@16 $generated@@33)) $generated@@33)
 :pattern ( ($generated@@16 $generated@@33))
))) (forall (($generated@@34 T@U) ) (!  (=> (= (type $generated@@34) $generated@@7) (= ($generated@@16 ($generated@@17 $generated@@34)) $generated@@34))
 :pattern ( ($generated@@17 $generated@@34))
))) (forall (($generated@@35 (RegEx String)) ) (! (= (type ($generated@@16 $generated@@35)) $generated@@7)
 :pattern ( ($generated@@16 $generated@@35))
))))
(assert (forall (($generated@@36 T@U) ) (! (UOrdering2 $generated@@36 $generated@@36)
 :no-pattern ($generated $generated@@36)
 :no-pattern ($generated@@0 $generated@@36)
)))
(assert (forall (($generated@@37 T@U) ($generated@@38 T@U) ($generated@@39 T@U) ) (! (let (($generated@@40 (type $generated@@37)))
 (=> (and (and (= (type $generated@@38) $generated@@40) (= (type $generated@@39) $generated@@40)) (and (UOrdering2 $generated@@37 $generated@@38) (UOrdering2 $generated@@38 $generated@@39))) (UOrdering2 $generated@@37 $generated@@39)))
 :pattern ( (UOrdering2 $generated@@37 $generated@@38) (UOrdering2 $generated@@38 $generated@@39))
)))
(assert (forall (($generated@@41 T@U) ($generated@@42 T@U) ) (! (let (($generated@@43 (type $generated@@41)))
 (=> (= (type $generated@@42) $generated@@43) (=> (and (UOrdering2 $generated@@41 $generated@@42) (UOrdering2 $generated@@42 $generated@@41)) (= $generated@@41 $generated@@42))))
 :pattern ( (UOrdering2 $generated@@41 $generated@@42) (UOrdering2 $generated@@42 $generated@@41))
)))
(assert  (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (forall (($generated@@57 T@T) ($generated@@58 T@T) ) (= ($generated@@1 ($generated@@45 $generated@@57 $generated@@58)) 6)) (forall (($generated@@59 T@T) ($generated@@60 T@T) ) (! (= ($generated@@51 ($generated@@45 $generated@@59 $generated@@60)) $generated@@59)
 :pattern ( ($generated@@45 $generated@@59 $generated@@60))
))) (forall (($generated@@61 T@T) ($generated@@62 T@T) ) (! (= ($generated@@52 ($generated@@45 $generated@@61 $generated@@62)) $generated@@62)
 :pattern ( ($generated@@45 $generated@@61 $generated@@62))
))) (forall (($generated@@63 T@U) ($generated@@64 T@U) ) (! (let (($generated@@65 ($generated@@52 (type $generated@@63))))
(= (type ($generated@@49 $generated@@63 $generated@@64)) $generated@@65))
 :pattern ( ($generated@@49 $generated@@63 $generated@@64))
))) (forall (($generated@@66 T@U) ($generated@@67 T@U) ($generated@@68 T@U) ) (! (let (($generated@@69 (type $generated@@68)))
(let (($generated@@70 (type $generated@@67)))
(= (type ($generated@@53 $generated@@66 $generated@@67 $generated@@68)) ($generated@@45 $generated@@70 $generated@@69))))
 :pattern ( ($generated@@53 $generated@@66 $generated@@67 $generated@@68))
))) (forall (($generated@@71 T@U) ($generated@@72 T@U) ($generated@@73 T@U) ) (! (let (($generated@@74 ($generated@@52 (type $generated@@71))))
 (=> (= (type $generated@@73) $generated@@74) (= ($generated@@49 ($generated@@53 $generated@@71 $generated@@72 $generated@@73) $generated@@72) $generated@@73)))
 :weight 0
))) (and (forall (($generated@@75 T@U) ($generated@@76 T@U) ($generated@@77 T@U) ($generated@@78 T@U) ) (!  (or (= $generated@@77 $generated@@78) (= ($generated@@49 ($generated@@53 $generated@@76 $generated@@77 $generated@@75) $generated@@78) ($generated@@49 $generated@@76 $generated@@78)))
 :weight 0
)) (forall (($generated@@79 T@U) ($generated@@80 T@U) ($generated@@81 T@U) ($generated@@82 T@U) ) (!  (or true (= ($generated@@49 ($generated@@53 $generated@@80 $generated@@81 $generated@@79) $generated@@82) ($generated@@49 $generated@@80 $generated@@82)))
 :weight 0
)))) (= ($generated@@1 $generated@@46) 7)) (forall (($generated@@83 T@T) ) (= ($generated@@1 ($generated@@54 $generated@@83)) 8))) (forall (($generated@@84 T@T) ) (! (= ($generated@@55 ($generated@@54 $generated@@84)) $generated@@84)
 :pattern ( ($generated@@54 $generated@@84))
))) (forall (($generated@@85 T@U) ($generated@@86 T@U) ) (! (let (($generated@@87 ($generated@@55 (type $generated@@86))))
(= (type ($generated@@48 $generated@@85 $generated@@86)) $generated@@87))
 :pattern ( ($generated@@48 $generated@@85 $generated@@86))
))) (= ($generated@@1 $generated@@47) 9)) (forall (($generated@@88 T@U) ($generated@@89 T@U) ($generated@@90 T@U) ) (! (= (type ($generated@@56 $generated@@88 $generated@@89 $generated@@90)) $generated@@47)
 :pattern ( ($generated@@56 $generated@@88 $generated@@89 $generated@@90))
))) (forall (($generated@@91 T@U) ($generated@@92 T@U) ($generated@@93 T@U) ) (! (let (($generated@@94 ($generated@@55 (type $generated@@92))))
 (=> (= (type $generated@@93) $generated@@94) (= ($generated@@48 ($generated@@56 $generated@@91 $generated@@92 $generated@@93) $generated@@92) $generated@@93)))
 :weight 0
))) (and (forall (($generated@@95 T@U) ($generated@@96 T@U) ($generated@@97 T@U) ($generated@@98 T@U) ) (!  (or (= $generated@@97 $generated@@98) (= ($generated@@48 ($generated@@56 $generated@@96 $generated@@97 $generated@@95) $generated@@98) ($generated@@48 $generated@@96 $generated@@98)))
 :weight 0
)) (forall (($generated@@99 T@U) ($generated@@100 T@U) ($generated@@101 T@U) ($generated@@102 T@U) ) (!  (or true (= ($generated@@48 ($generated@@56 $generated@@100 $generated@@101 $generated@@99) $generated@@102) ($generated@@48 $generated@@100 $generated@@102)))
 :weight 0
)))) (= (type $generated@@50) ($generated@@54 $generated@@4))))
(assert (forall (($generated@@103 T@U) ($generated@@104 T@U) ) (!  (=> (and (and (= (type $generated@@103) ($generated@@45 $generated@@46 $generated@@47)) (= (type $generated@@104) ($generated@@45 $generated@@46 $generated@@47))) ($generated@@44 $generated@@103 $generated@@104)) (forall (($generated@@105 T@U) ) (!  (=> (and (= (type $generated@@105) $generated@@46) ($generated@@0 ($generated@@48 ($generated@@49 $generated@@103 $generated@@105) $generated@@50))) ($generated@@0 ($generated@@48 ($generated@@49 $generated@@104 $generated@@105) $generated@@50)))
 :pattern ( ($generated@@48 ($generated@@49 $generated@@104 $generated@@105) $generated@@50))
)))
 :pattern ( ($generated@@44 $generated@@103 $generated@@104))
)))
(assert  (and (and (and (and (and (and (and (forall (($generated@@112 T@T) ($generated@@113 T@T) ) (= ($generated@@1 ($generated@@108 $generated@@112 $generated@@113)) 10)) (forall (($generated@@114 T@T) ($generated@@115 T@T) ) (! (= ($generated@@109 ($generated@@108 $generated@@114 $generated@@115)) $generated@@114)
 :pattern ( ($generated@@108 $generated@@114 $generated@@115))
))) (forall (($generated@@116 T@T) ($generated@@117 T@T) ) (! (= ($generated@@110 ($generated@@108 $generated@@116 $generated@@117)) $generated@@117)
 :pattern ( ($generated@@108 $generated@@116 $generated@@117))
))) (forall (($generated@@118 T@U) ($generated@@119 T@U) ($generated@@120 T@U) ) (! (let (($generated@@121 ($generated@@110 (type $generated@@118))))
(= (type ($generated@@106 $generated@@118 $generated@@119 $generated@@120)) $generated@@121))
 :pattern ( ($generated@@106 $generated@@118 $generated@@119 $generated@@120))
))) (forall (($generated@@122 T@U) ($generated@@123 T@U) ($generated@@124 T@U) ($generated@@125 T@U) ) (! (let (($generated@@126 (type $generated@@125)))
(let (($generated@@127 (type $generated@@123)))
(= (type ($generated@@111 $generated@@122 $generated@@123 $generated@@124 $generated@@125)) ($generated@@108 $generated@@127 $generated@@126))))
 :pattern ( ($generated@@111 $generated@@122 $generated@@123 $generated@@124 $generated@@125))
))) (forall (($generated@@128 T@U) ($generated@@129 T@U) ($generated@@130 T@U) ($generated@@131 T@U) ) (! (let (($generated@@132 ($generated@@110 (type $generated@@128))))
 (=> (= (type $generated@@131) $generated@@132) (= ($generated@@106 ($generated@@111 $generated@@128 $generated@@129 $generated@@130 $generated@@131) $generated@@129 $generated@@130) $generated@@131)))
 :weight 0
))) (and (and (forall (($generated@@133 T@U) ($generated@@134 T@U) ($generated@@135 T@U) ($generated@@136 T@U) ($generated@@137 T@U) ($generated@@138 T@U) ) (!  (or (= $generated@@135 $generated@@137) (= ($generated@@106 ($generated@@111 $generated@@134 $generated@@135 $generated@@136 $generated@@133) $generated@@137 $generated@@138) ($generated@@106 $generated@@134 $generated@@137 $generated@@138)))
 :weight 0
)) (forall (($generated@@139 T@U) ($generated@@140 T@U) ($generated@@141 T@U) ($generated@@142 T@U) ($generated@@143 T@U) ($generated@@144 T@U) ) (!  (or (= $generated@@142 $generated@@144) (= ($generated@@106 ($generated@@111 $generated@@140 $generated@@141 $generated@@142 $generated@@139) $generated@@143 $generated@@144) ($generated@@106 $generated@@140 $generated@@143 $generated@@144)))
 :weight 0
))) (forall (($generated@@145 T@U) ($generated@@146 T@U) ($generated@@147 T@U) ($generated@@148 T@U) ($generated@@149 T@U) ($generated@@150 T@U) ) (!  (or true (= ($generated@@106 ($generated@@111 $generated@@146 $generated@@147 $generated@@148 $generated@@145) $generated@@149 $generated@@150) ($generated@@106 $generated@@146 $generated@@149 $generated@@150)))
 :weight 0
)))) (forall (($generated@@151 T@U) ($generated@@152 T@U) ($generated@@153 T@U) ($generated@@154 Bool) ) (! (= (type ($generated@@107 $generated@@151 $generated@@152 $generated@@153 $generated@@154)) ($generated@@108 $generated@@46 $generated@@4))
 :pattern ( ($generated@@107 $generated@@151 $generated@@152 $generated@@153 $generated@@154))
))))
(assert (forall (($generated@@155 T@U) ($generated@@156 T@U) ($generated@@157 T@U) ($generated@@158 Bool) ($generated@@159 T@U) ($generated@@160 T@U) ) (! (let (($generated@@161 ($generated@@55 (type $generated@@160))))
 (=> (and (and (and (and (= (type $generated@@155) $generated@@46) (= (type $generated@@156) ($generated@@45 $generated@@46 $generated@@47))) (= (type $generated@@157) ($generated@@54 $generated@@4))) (= (type $generated@@159) $generated@@46)) (= (type $generated@@160) ($generated@@54 $generated@@161))) (= ($generated@@0 ($generated@@106 ($generated@@107 $generated@@155 $generated@@156 $generated@@157 $generated@@158) $generated@@159 $generated@@160))  (=> (and (not (= $generated@@159 $generated@@155)) ($generated@@0 ($generated@@48 ($generated@@49 $generated@@156 $generated@@159) $generated@@157))) $generated@@158))))
 :pattern ( ($generated@@106 ($generated@@107 $generated@@155 $generated@@156 $generated@@157 $generated@@158) $generated@@159 $generated@@160))
)))
(assert (forall (($generated@@163 Int) ) (! (= ($generated@@162 $generated@@163) $generated@@163)
 :pattern ( ($generated@@162 $generated@@163))
)))
(assert (forall (($generated@@165 T@U) ) (! (let (($generated@@166 (type $generated@@165)))
(= (type ($generated@@164 $generated@@165)) $generated@@166))
 :pattern ( ($generated@@164 $generated@@165))
)))
(assert (forall (($generated@@167 T@U) ) (! (= ($generated@@164 $generated@@167) $generated@@167)
 :pattern ( ($generated@@164 $generated@@167))
)))
(assert (forall (($generated@@168 T@U) ($generated@@169 T@U) ($generated@@170 T@U) ) (!  (=> (and (and (and (and (= (type $generated@@168) ($generated@@45 $generated@@46 $generated@@47)) (= (type $generated@@169) ($generated@@45 $generated@@46 $generated@@47))) (= (type $generated@@170) ($generated@@45 $generated@@46 $generated@@47))) (not (= $generated@@168 $generated@@170))) (and ($generated@@44 $generated@@168 $generated@@169) ($generated@@44 $generated@@169 $generated@@170))) ($generated@@44 $generated@@168 $generated@@170))
 :pattern ( ($generated@@44 $generated@@168 $generated@@169) ($generated@@44 $generated@@169 $generated@@170))
)))
(assert  (and (and (= ($generated@@1 $generated@@173) 11) (forall (($generated@@174 T@U) ) (! (= (type ($generated@@171 $generated@@174)) $generated@@173)
 :pattern ( ($generated@@171 $generated@@174))
))) (forall (($generated@@175 T@T) ($generated@@176 T@U) ) (! (= (type ($generated@@172 $generated@@175 $generated@@176)) $generated@@175)
 :pattern ( ($generated@@172 $generated@@175 $generated@@176))
))))
(assert (forall (($generated@@177 T@U) ) (! (let (($generated@@178 (type $generated@@177)))
(= ($generated@@172 $generated@@178 ($generated@@171 $generated@@177)) $generated@@177))
 :pattern ( ($generated@@171 $generated@@177))
)))
(assert (forall (($generated@@179 Int) ) (! (= ($generated@@171 ($generated@@8 ($generated@@162 $generated@@179))) ($generated@@164 ($generated@@171 ($generated@@8 $generated@@179))))
 :pattern ( ($generated@@171 ($generated@@8 ($generated@@162 $generated@@179))))
)))
(assert (forall (($generated@@180 T@U) ) (! (= ($generated@@171 ($generated@@164 $generated@@180)) ($generated@@164 ($generated@@171 $generated@@180)))
 :pattern ( ($generated@@171 ($generated@@164 $generated@@180)))
)))
(push 1)
(declare-fun ControlFlow (Int Int) Int)
(declare-fun $generated@@181 () Int)
(declare-fun $generated@@182 () Int)
(declare-fun $generated@@183 () Int)
(declare-fun $generated@@184 () Int)
(declare-fun $generated@@185 () Bool)
(declare-fun $generated@@186 () Int)
(declare-fun $generated@@187 () Int)
(declare-fun $generated@@188 () Int)
(declare-fun $generated@@189 () Bool)
(declare-fun $generated@@190 () Int)
(declare-fun $generated@@191 () T@U)
(declare-fun $generated@@192 () T@U)
(declare-fun $generated@@193 () T@U)
(declare-fun $generated@@194 (T@U) Bool)
(declare-fun $generated@@195 (T@U) Bool)
(declare-fun $generated@@196 () Int)
(assert  (and (and (= (type $generated@@191) ($generated@@45 $generated@@46 $generated@@47)) (= (type $generated@@192) $generated@@46)) (= (type $generated@@193) ($generated@@108 $generated@@46 $generated@@4))))
(set-option :timeout 0)
(set-option :rlimit 0)
(assert (not
 (=> (= (ControlFlow 0 0) 29) (let (($generated@@197 true))
(let (($generated@@198  (=> (and (= $generated@@181 $generated@@182) (= (ControlFlow 0 16) 14)) $generated@@197)))
(let (($generated@@199  (=> (and (= $generated@@181 $generated@@183) (= (ControlFlow 0 15) 14)) $generated@@197)))
(let (($generated@@200 true))
(let (($generated@@201  (and (=> (= (ControlFlow 0 8) (- 0 10)) (not (= $generated@@181 $generated@@184))) (and (=> (= (ControlFlow 0 8) (- 0 9)) (not (= $generated@@181 $generated@@182))) (=> (and (and (not (= $generated@@181 $generated@@184)) (not (= $generated@@181 $generated@@182))) (= (ControlFlow 0 8) 6)) $generated@@200)))))
(let (($generated@@202  (=> (and (= $generated@@181 $generated@@184) (= (ControlFlow 0 12) 8)) $generated@@201)))
(let (($generated@@203  (=> (and (not (= $generated@@181 $generated@@184)) (= (ControlFlow 0 11) 8)) $generated@@201)))
(let (($generated@@204  (=> (not (= $generated@@181 $generated@@182)) (and (=> (= (ControlFlow 0 13) 11) $generated@@203) (=> (= (ControlFlow 0 13) 12) $generated@@202)))))
(let (($generated@@205  (=> (not (= $generated@@181 $generated@@184)) (and (=> (= (ControlFlow 0 17) 16) $generated@@198) (=> (= (ControlFlow 0 17) 13) $generated@@204)))))
(let (($generated@@206  (=> (and (= $generated@@181 $generated@@184) (= (ControlFlow 0 7) 6)) $generated@@200)))
(let (($generated@@207  (=> (not (= $generated@@181 $generated@@183)) (and (=> (= (ControlFlow 0 18) 7) $generated@@206) (=> (= (ControlFlow 0 18) 17) $generated@@205)))))
(let (($generated@@208  (=> $generated@@185 (and (=> (= (ControlFlow 0 19) 15) $generated@@199) (=> (= (ControlFlow 0 19) 18) $generated@@207)))))
(let (($generated@@209 true))
(let (($generated@@210  (and (=> (= (ControlFlow 0 20) 5) $generated@@209) (=> (= (ControlFlow 0 20) 19) $generated@@208))))
(let (($generated@@211 true))
(let (($generated@@212  (=> (and (and (and (and (and (and (and (and (not false) (<= 0 $generated@@186)) (= $generated@@187 0)) (<= 0 $generated@@188)) $generated@@189) (<= 0 $generated@@181)) (= $generated@@190 0)) (<= 0 $generated@@183)) (and (and (and (<= $generated@@190 $generated@@181) (<= $generated@@181 $generated@@183)) (forall (($generated@@213 T@U) ) (!  (=> (= (type $generated@@213) $generated@@46) (=> (and (not (= $generated@@213 $generated@@192)) ($generated@@0 ($generated@@48 ($generated@@49 $generated@@191 $generated@@213) $generated@@50))) (= ($generated@@49 $generated@@191 $generated@@213) ($generated@@49 $generated@@191 $generated@@213))))
 :pattern ( ($generated@@49 $generated@@191 $generated@@213))
))) (and ($generated@@44 $generated@@191 $generated@@191) (forall (($generated@@214 T@U) ($generated@@215 T@U) ) (! (let (($generated@@216 ($generated@@55 (type $generated@@215))))
 (=> (and (and (= (type $generated@@214) $generated@@46) (= (type $generated@@215) ($generated@@54 $generated@@216))) (and (not (= $generated@@214 $generated@@192)) ($generated@@0 ($generated@@48 ($generated@@49 $generated@@191 $generated@@214) $generated@@50)))) (or (= ($generated@@48 ($generated@@49 $generated@@191 $generated@@214) $generated@@215) ($generated@@48 ($generated@@49 $generated@@191 $generated@@214) $generated@@215)) ($generated@@0 ($generated@@106 $generated@@193 $generated@@214 $generated@@215)))))
 :pattern ( ($generated@@48 ($generated@@49 $generated@@191 $generated@@214) $generated@@215))
))))) (and (=> (= (ControlFlow 0 21) 4) $generated@@211) (=> (= (ControlFlow 0 21) 20) $generated@@210)))))
(let (($generated@@217  (=> (and (not (= $generated@@186 $generated@@188)) (= $generated@@190 ($generated@@162 0))) (and (=> (= (ControlFlow 0 22) (- 0 23)) (<= $generated@@190 $generated@@183)) (=> (<= $generated@@190 $generated@@183) (=> (= (ControlFlow 0 22) 21) $generated@@212))))))
(let (($generated@@218 true))
(let (($generated@@219  (=> $generated@@189 (and (=> (= (ControlFlow 0 24) 3) $generated@@218) (=> (= (ControlFlow 0 24) 22) $generated@@217)))))
(let (($generated@@220 true))
(let (($generated@@221  (and (=> (= (ControlFlow 0 25) 2) $generated@@220) (=> (= (ControlFlow 0 25) 24) $generated@@219))))
(let (($generated@@222 true))
(let (($generated@@223  (=> (and (and (and (and (not false) (<= 0 $generated@@186)) (= $generated@@187 0)) (<= 0 $generated@@188)) (and (and (and (<= $generated@@187 $generated@@186) (<= $generated@@186 $generated@@188)) (forall (($generated@@224 T@U) ) (!  (=> (= (type $generated@@224) $generated@@46) (=> (and (not (= $generated@@224 $generated@@192)) ($generated@@0 ($generated@@48 ($generated@@49 $generated@@191 $generated@@224) $generated@@50))) (= ($generated@@49 $generated@@191 $generated@@224) ($generated@@49 $generated@@191 $generated@@224))))
 :pattern ( ($generated@@49 $generated@@191 $generated@@224))
))) (and ($generated@@44 $generated@@191 $generated@@191) (forall (($generated@@225 T@U) ($generated@@226 T@U) ) (! (let (($generated@@227 ($generated@@55 (type $generated@@226))))
 (=> (and (and (= (type $generated@@225) $generated@@46) (= (type $generated@@226) ($generated@@54 $generated@@227))) (and (not (= $generated@@225 $generated@@192)) ($generated@@0 ($generated@@48 ($generated@@49 $generated@@191 $generated@@225) $generated@@50)))) (or (= ($generated@@48 ($generated@@49 $generated@@191 $generated@@225) $generated@@226) ($generated@@48 ($generated@@49 $generated@@191 $generated@@225) $generated@@226)) ($generated@@0 ($generated@@106 $generated@@193 $generated@@225 $generated@@226)))))
 :pattern ( ($generated@@48 ($generated@@49 $generated@@191 $generated@@225) $generated@@226))
))))) (and (=> (= (ControlFlow 0 26) 1) $generated@@222) (=> (= (ControlFlow 0 26) 25) $generated@@221)))))
(let (($generated@@228  (=> (and (= $generated@@193 ($generated@@107 $generated@@192 $generated@@191 $generated@@50 false)) (= $generated@@187 ($generated@@162 0))) (and (=> (= (ControlFlow 0 27) (- 0 28)) (<= $generated@@187 $generated@@188)) (=> (<= $generated@@187 $generated@@188) (=> (= (ControlFlow 0 27) 26) $generated@@223))))))
(let (($generated@@229  (=> (and (and (and ($generated@@194 $generated@@191) ($generated@@195 $generated@@191)) (and (<= ($generated@@162 0) $generated@@188) (<= ($generated@@162 0) $generated@@183))) (and (and (<= ($generated@@162 0) $generated@@184) (<= ($generated@@162 0) $generated@@182)) (and (= 1 $generated@@196) (= (ControlFlow 0 29) 27)))) $generated@@228)))
$generated@@229))))))))))))))))))))))))))
))
(check-sat)
(pop 1)
; Valid
(get-info :rlimit)
(reset)
(set-option :rlimit 0)
; did a full reset
(reset)
(set-option :print-success false)
(set-info :smt-lib-version 2.6)
(set-option :auto_config false)
(set-option :type_check true)
(set-option :smt.case_split 3)
(set-option :smt.qi.eager_threshold 100)
(set-option :smt.delay_units true)
(set-option :smt.arith.solver 2)
(set-option :smt.mbqi false)
(set-option :model.compact false)
(set-option :model.v2 true)
(set-option :pp.bv_literals false)
; done setting options


(set-info :category "industrial")
(declare-sort |T@U| 0)
(declare-sort |T@T| 0)
(declare-fun real_pow (Real Real) Real)
(declare-fun UOrdering2 (|T@U| |T@U|) Bool)
(declare-fun UOrdering3 (|T@T| |T@U| |T@U|) Bool)
(declare-fun tickleBool (Bool) Bool)
(assert (and (tickleBool true) (tickleBool false)))
(declare-fun $generated (T@U) Int)
(declare-fun $generated@@0 (T@U) Bool)
(declare-fun $generated@@1 (T@T) Int)
(declare-fun $generated@@2 () T@T)
(declare-fun $generated@@3 () T@T)
(declare-fun $generated@@4 () T@T)
(declare-fun $generated@@5 () T@T)
(declare-fun $generated@@6 () T@T)
(declare-fun $generated@@7 () T@T)
(declare-fun $generated@@8 (Int) T@U)
(declare-fun type (T@U) T@T)
(declare-fun $generated@@9 (Real) T@U)
(declare-fun $generated@@10 (T@U) Real)
(declare-fun $generated@@11 (Bool) T@U)
(declare-fun $generated@@12 (RoundingMode) T@U)
(declare-fun $generated@@13 (T@U) RoundingMode)
(declare-fun $generated@@14 (String) T@U)
(declare-fun $generated@@15 (T@U) String)
(declare-fun $generated@@16 ((RegEx String)) T@U)
(declare-fun $generated@@17 (T@U) (RegEx String))
(declare-fun $generated@@44 (T@U T@U) Bool)
(declare-fun $generated@@45 (T@T T@T) T@T)
(declare-fun $generated@@46 () T@T)
(declare-fun $generated@@47 () T@T)
(declare-fun $generated@@48 (T@U T@U) T@U)
(declare-fun $generated@@49 (T@U T@U) T@U)
(declare-fun $generated@@50 () T@U)
(declare-fun $generated@@51 (T@T) T@T)
(declare-fun $generated@@52 (T@T) T@T)
(declare-fun $generated@@53 (T@U T@U T@U) T@U)
(declare-fun $generated@@54 (T@T) T@T)
(declare-fun $generated@@55 (T@T) T@T)
(declare-fun $generated@@56 (T@U T@U T@U) T@U)
(declare-fun $generated@@106 (T@U T@U T@U) T@U)
(declare-fun $generated@@107 (T@U T@U T@U Bool) T@U)
(declare-fun $generated@@108 (T@T T@T) T@T)
(declare-fun $generated@@109 (T@T) T@T)
(declare-fun $generated@@110 (T@T) T@T)
(declare-fun $generated@@111 (T@U T@U T@U T@U) T@U)
(declare-fun $generated@@162 (Int) Int)
(declare-fun $generated@@164 (T@U) T@U)
(declare-fun $generated@@171 (T@U) T@U)
(declare-fun $generated@@172 (T@T T@U) T@U)
(declare-fun $generated@@173 () T@T)
(declare-fun $generated@@179 (Int Int) Int)
(assert  (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (= ($generated@@1 $generated@@2) 0) (= ($generated@@1 $generated@@3) 1)) (= ($generated@@1 $generated@@4) 2)) (= ($generated@@1 $generated@@5) 3)) (= ($generated@@1 $generated@@6) 4)) (= ($generated@@1 $generated@@7) 5)) (forall (($generated@@18 Int) ) (! (= ($generated ($generated@@8 $generated@@18)) $generated@@18)
 :pattern ( ($generated@@8 $generated@@18))
))) (forall (($generated@@19 T@U) ) (!  (=> (= (type $generated@@19) $generated@@2) (= ($generated@@8 ($generated $generated@@19)) $generated@@19))
 :pattern ( ($generated $generated@@19))
))) (forall (($generated@@20 Int) ) (! (= (type ($generated@@8 $generated@@20)) $generated@@2)
 :pattern ( ($generated@@8 $generated@@20))
))) (forall (($generated@@21 Real) ) (! (= ($generated@@10 ($generated@@9 $generated@@21)) $generated@@21)
 :pattern ( ($generated@@9 $generated@@21))
))) (forall (($generated@@22 T@U) ) (!  (=> (= (type $generated@@22) $generated@@3) (= ($generated@@9 ($generated@@10 $generated@@22)) $generated@@22))
 :pattern ( ($generated@@10 $generated@@22))
))) (forall (($generated@@23 Real) ) (! (= (type ($generated@@9 $generated@@23)) $generated@@3)
 :pattern ( ($generated@@9 $generated@@23))
))) (forall (($generated@@24 Bool) ) (! (= ($generated@@0 ($generated@@11 $generated@@24)) $generated@@24)
 :pattern ( ($generated@@11 $generated@@24))
))) (forall (($generated@@25 T@U) ) (!  (=> (= (type $generated@@25) $generated@@4) (= ($generated@@11 ($generated@@0 $generated@@25)) $generated@@25))
 :pattern ( ($generated@@0 $generated@@25))
))) (forall (($generated@@26 Bool) ) (! (= (type ($generated@@11 $generated@@26)) $generated@@4)
 :pattern ( ($generated@@11 $generated@@26))
))) (forall (($generated@@27 RoundingMode) ) (! (= ($generated@@13 ($generated@@12 $generated@@27)) $generated@@27)
 :pattern ( ($generated@@12 $generated@@27))
))) (forall (($generated@@28 T@U) ) (!  (=> (= (type $generated@@28) $generated@@5) (= ($generated@@12 ($generated@@13 $generated@@28)) $generated@@28))
 :pattern ( ($generated@@13 $generated@@28))
))) (forall (($generated@@29 RoundingMode) ) (! (= (type ($generated@@12 $generated@@29)) $generated@@5)
 :pattern ( ($generated@@12 $generated@@29))
))) (forall (($generated@@30 String) ) (! (= ($generated@@15 ($generated@@14 $generated@@30)) $generated@@30)
 :pattern ( ($generated@@14 $generated@@30))
))) (forall (($generated@@31 T@U) ) (!  (=> (= (type $generated@@31) $generated@@6) (= ($generated@@14 ($generated@@15 $generated@@31)) $generated@@31))
 :pattern ( ($generated@@15 $generated@@31))
))) (forall (($generated@@32 String) ) (! (= (type ($generated@@14 $generated@@32)) $generated@@6)
 :pattern ( ($generated@@14 $generated@@32))
))) (forall (($generated@@33 (RegEx String)) ) (! (= ($generated@@17 ($generated@@16 $generated@@33)) $generated@@33)
 :pattern ( ($generated@@16 $generated@@33))
))) (forall (($generated@@34 T@U) ) (!  (=> (= (type $generated@@34) $generated@@7) (= ($generated@@16 ($generated@@17 $generated@@34)) $generated@@34))
 :pattern ( ($generated@@17 $generated@@34))
))) (forall (($generated@@35 (RegEx String)) ) (! (= (type ($generated@@16 $generated@@35)) $generated@@7)
 :pattern ( ($generated@@16 $generated@@35))
))))
(assert (forall (($generated@@36 T@U) ) (! (UOrdering2 $generated@@36 $generated@@36)
 :no-pattern ($generated $generated@@36)
 :no-pattern ($generated@@0 $generated@@36)
)))
(assert (forall (($generated@@37 T@U) ($generated@@38 T@U) ($generated@@39 T@U) ) (! (let (($generated@@40 (type $generated@@37)))
 (=> (and (and (= (type $generated@@38) $generated@@40) (= (type $generated@@39) $generated@@40)) (and (UOrdering2 $generated@@37 $generated@@38) (UOrdering2 $generated@@38 $generated@@39))) (UOrdering2 $generated@@37 $generated@@39)))
 :pattern ( (UOrdering2 $generated@@37 $generated@@38) (UOrdering2 $generated@@38 $generated@@39))
)))
(assert (forall (($generated@@41 T@U) ($generated@@42 T@U) ) (! (let (($generated@@43 (type $generated@@41)))
 (=> (= (type $generated@@42) $generated@@43) (=> (and (UOrdering2 $generated@@41 $generated@@42) (UOrdering2 $generated@@42 $generated@@41)) (= $generated@@41 $generated@@42))))
 :pattern ( (UOrdering2 $generated@@41 $generated@@42) (UOrdering2 $generated@@42 $generated@@41))
)))
(assert  (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (forall (($generated@@57 T@T) ($generated@@58 T@T) ) (= ($generated@@1 ($generated@@45 $generated@@57 $generated@@58)) 6)) (forall (($generated@@59 T@T) ($generated@@60 T@T) ) (! (= ($generated@@51 ($generated@@45 $generated@@59 $generated@@60)) $generated@@59)
 :pattern ( ($generated@@45 $generated@@59 $generated@@60))
))) (forall (($generated@@61 T@T) ($generated@@62 T@T) ) (! (= ($generated@@52 ($generated@@45 $generated@@61 $generated@@62)) $generated@@62)
 :pattern ( ($generated@@45 $generated@@61 $generated@@62))
))) (forall (($generated@@63 T@U) ($generated@@64 T@U) ) (! (let (($generated@@65 ($generated@@52 (type $generated@@63))))
(= (type ($generated@@49 $generated@@63 $generated@@64)) $generated@@65))
 :pattern ( ($generated@@49 $generated@@63 $generated@@64))
))) (forall (($generated@@66 T@U) ($generated@@67 T@U) ($generated@@68 T@U) ) (! (let (($generated@@69 (type $generated@@68)))
(let (($generated@@70 (type $generated@@67)))
(= (type ($generated@@53 $generated@@66 $generated@@67 $generated@@68)) ($generated@@45 $generated@@70 $generated@@69))))
 :pattern ( ($generated@@53 $generated@@66 $generated@@67 $generated@@68))
))) (forall (($generated@@71 T@U) ($generated@@72 T@U) ($generated@@73 T@U) ) (! (let (($generated@@74 ($generated@@52 (type $generated@@71))))
 (=> (= (type $generated@@73) $generated@@74) (= ($generated@@49 ($generated@@53 $generated@@71 $generated@@72 $generated@@73) $generated@@72) $generated@@73)))
 :weight 0
))) (and (forall (($generated@@75 T@U) ($generated@@76 T@U) ($generated@@77 T@U) ($generated@@78 T@U) ) (!  (or (= $generated@@77 $generated@@78) (= ($generated@@49 ($generated@@53 $generated@@76 $generated@@77 $generated@@75) $generated@@78) ($generated@@49 $generated@@76 $generated@@78)))
 :weight 0
)) (forall (($generated@@79 T@U) ($generated@@80 T@U) ($generated@@81 T@U) ($generated@@82 T@U) ) (!  (or true (= ($generated@@49 ($generated@@53 $generated@@80 $generated@@81 $generated@@79) $generated@@82) ($generated@@49 $generated@@80 $generated@@82)))
 :weight 0
)))) (= ($generated@@1 $generated@@46) 7)) (forall (($generated@@83 T@T) ) (= ($generated@@1 ($generated@@54 $generated@@83)) 8))) (forall (($generated@@84 T@T) ) (! (= ($generated@@55 ($generated@@54 $generated@@84)) $generated@@84)
 :pattern ( ($generated@@54 $generated@@84))
))) (forall (($generated@@85 T@U) ($generated@@86 T@U) ) (! (let (($generated@@87 ($generated@@55 (type $generated@@86))))
(= (type ($generated@@48 $generated@@85 $generated@@86)) $generated@@87))
 :pattern ( ($generated@@48 $generated@@85 $generated@@86))
))) (= ($generated@@1 $generated@@47) 9)) (forall (($generated@@88 T@U) ($generated@@89 T@U) ($generated@@90 T@U) ) (! (= (type ($generated@@56 $generated@@88 $generated@@89 $generated@@90)) $generated@@47)
 :pattern ( ($generated@@56 $generated@@88 $generated@@89 $generated@@90))
))) (forall (($generated@@91 T@U) ($generated@@92 T@U) ($generated@@93 T@U) ) (! (let (($generated@@94 ($generated@@55 (type $generated@@92))))
 (=> (= (type $generated@@93) $generated@@94) (= ($generated@@48 ($generated@@56 $generated@@91 $generated@@92 $generated@@93) $generated@@92) $generated@@93)))
 :weight 0
))) (and (forall (($generated@@95 T@U) ($generated@@96 T@U) ($generated@@97 T@U) ($generated@@98 T@U) ) (!  (or (= $generated@@97 $generated@@98) (= ($generated@@48 ($generated@@56 $generated@@96 $generated@@97 $generated@@95) $generated@@98) ($generated@@48 $generated@@96 $generated@@98)))
 :weight 0
)) (forall (($generated@@99 T@U) ($generated@@100 T@U) ($generated@@101 T@U) ($generated@@102 T@U) ) (!  (or true (= ($generated@@48 ($generated@@56 $generated@@100 $generated@@101 $generated@@99) $generated@@102) ($generated@@48 $generated@@100 $generated@@102)))
 :weight 0
)))) (= (type $generated@@50) ($generated@@54 $generated@@4))))
(assert (forall (($generated@@103 T@U) ($generated@@104 T@U) ) (!  (=> (and (and (= (type $generated@@103) ($generated@@45 $generated@@46 $generated@@47)) (= (type $generated@@104) ($generated@@45 $generated@@46 $generated@@47))) ($generated@@44 $generated@@103 $generated@@104)) (forall (($generated@@105 T@U) ) (!  (=> (and (= (type $generated@@105) $generated@@46) ($generated@@0 ($generated@@48 ($generated@@49 $generated@@103 $generated@@105) $generated@@50))) ($generated@@0 ($generated@@48 ($generated@@49 $generated@@104 $generated@@105) $generated@@50)))
 :pattern ( ($generated@@48 ($generated@@49 $generated@@104 $generated@@105) $generated@@50))
)))
 :pattern ( ($generated@@44 $generated@@103 $generated@@104))
)))
(assert  (and (and (and (and (and (and (and (forall (($generated@@112 T@T) ($generated@@113 T@T) ) (= ($generated@@1 ($generated@@108 $generated@@112 $generated@@113)) 10)) (forall (($generated@@114 T@T) ($generated@@115 T@T) ) (! (= ($generated@@109 ($generated@@108 $generated@@114 $generated@@115)) $generated@@114)
 :pattern ( ($generated@@108 $generated@@114 $generated@@115))
))) (forall (($generated@@116 T@T) ($generated@@117 T@T) ) (! (= ($generated@@110 ($generated@@108 $generated@@116 $generated@@117)) $generated@@117)
 :pattern ( ($generated@@108 $generated@@116 $generated@@117))
))) (forall (($generated@@118 T@U) ($generated@@119 T@U) ($generated@@120 T@U) ) (! (let (($generated@@121 ($generated@@110 (type $generated@@118))))
(= (type ($generated@@106 $generated@@118 $generated@@119 $generated@@120)) $generated@@121))
 :pattern ( ($generated@@106 $generated@@118 $generated@@119 $generated@@120))
))) (forall (($generated@@122 T@U) ($generated@@123 T@U) ($generated@@124 T@U) ($generated@@125 T@U) ) (! (let (($generated@@126 (type $generated@@125)))
(let (($generated@@127 (type $generated@@123)))
(= (type ($generated@@111 $generated@@122 $generated@@123 $generated@@124 $generated@@125)) ($generated@@108 $generated@@127 $generated@@126))))
 :pattern ( ($generated@@111 $generated@@122 $generated@@123 $generated@@124 $generated@@125))
))) (forall (($generated@@128 T@U) ($generated@@129 T@U) ($generated@@130 T@U) ($generated@@131 T@U) ) (! (let (($generated@@132 ($generated@@110 (type $generated@@128))))
 (=> (= (type $generated@@131) $generated@@132) (= ($generated@@106 ($generated@@111 $generated@@128 $generated@@129 $generated@@130 $generated@@131) $generated@@129 $generated@@130) $generated@@131)))
 :weight 0
))) (and (and (forall (($generated@@133 T@U) ($generated@@134 T@U) ($generated@@135 T@U) ($generated@@136 T@U) ($generated@@137 T@U) ($generated@@138 T@U) ) (!  (or (= $generated@@135 $generated@@137) (= ($generated@@106 ($generated@@111 $generated@@134 $generated@@135 $generated@@136 $generated@@133) $generated@@137 $generated@@138) ($generated@@106 $generated@@134 $generated@@137 $generated@@138)))
 :weight 0
)) (forall (($generated@@139 T@U) ($generated@@140 T@U) ($generated@@141 T@U) ($generated@@142 T@U) ($generated@@143 T@U) ($generated@@144 T@U) ) (!  (or (= $generated@@142 $generated@@144) (= ($generated@@106 ($generated@@111 $generated@@140 $generated@@141 $generated@@142 $generated@@139) $generated@@143 $generated@@144) ($generated@@106 $generated@@140 $generated@@143 $generated@@144)))
 :weight 0
))) (forall (($generated@@145 T@U) ($generated@@146 T@U) ($generated@@147 T@U) ($generated@@148 T@U) ($generated@@149 T@U) ($generated@@150 T@U) ) (!  (or true (= ($generated@@106 ($generated@@111 $generated@@146 $generated@@147 $generated@@148 $generated@@145) $generated@@149 $generated@@150) ($generated@@106 $generated@@146 $generated@@149 $generated@@150)))
 :weight 0
)))) (forall (($generated@@151 T@U) ($generated@@152 T@U) ($generated@@153 T@U) ($generated@@154 Bool) ) (! (= (type ($generated@@107 $generated@@151 $generated@@152 $generated@@153 $generated@@154)) ($generated@@108 $generated@@46 $generated@@4))
 :pattern ( ($generated@@107 $generated@@151 $generated@@152 $generated@@153 $generated@@154))
))))
(assert (forall (($generated@@155 T@U) ($generated@@156 T@U) ($generated@@157 T@U) ($generated@@158 Bool) ($generated@@159 T@U) ($generated@@160 T@U) ) (! (let (($generated@@161 ($generated@@55 (type $generated@@160))))
 (=> (and (and (and (and (= (type $generated@@155) $generated@@46) (= (type $generated@@156) ($generated@@45 $generated@@46 $generated@@47))) (= (type $generated@@157) ($generated@@54 $generated@@4))) (= (type $generated@@159) $generated@@46)) (= (type $generated@@160) ($generated@@54 $generated@@161))) (= ($generated@@0 ($generated@@106 ($generated@@107 $generated@@155 $generated@@156 $generated@@157 $generated@@158) $generated@@159 $generated@@160))  (=> (and (not (= $generated@@159 $generated@@155)) ($generated@@0 ($generated@@48 ($generated@@49 $generated@@156 $generated@@159) $generated@@157))) $generated@@158))))
 :pattern ( ($generated@@106 ($generated@@107 $generated@@155 $generated@@156 $generated@@157 $generated@@158) $generated@@159 $generated@@160))
)))
(assert (forall (($generated@@163 Int) ) (! (= ($generated@@162 $generated@@163) $generated@@163)
 :pattern ( ($generated@@162 $generated@@163))
)))
(assert (forall (($generated@@165 T@U) ) (! (let (($generated@@166 (type $generated@@165)))
(= (type ($generated@@164 $generated@@165)) $generated@@166))
 :pattern ( ($generated@@164 $generated@@165))
)))
(assert (forall (($generated@@167 T@U) ) (! (= ($generated@@164 $generated@@167) $generated@@167)
 :pattern ( ($generated@@164 $generated@@167))
)))
(assert (forall (($generated@@168 T@U) ($generated@@169 T@U) ($generated@@170 T@U) ) (!  (=> (and (and (and (and (= (type $generated@@168) ($generated@@45 $generated@@46 $generated@@47)) (= (type $generated@@169) ($generated@@45 $generated@@46 $generated@@47))) (= (type $generated@@170) ($generated@@45 $generated@@46 $generated@@47))) (not (= $generated@@168 $generated@@170))) (and ($generated@@44 $generated@@168 $generated@@169) ($generated@@44 $generated@@169 $generated@@170))) ($generated@@44 $generated@@168 $generated@@170))
 :pattern ( ($generated@@44 $generated@@168 $generated@@169) ($generated@@44 $generated@@169 $generated@@170))
)))
(assert  (and (and (= ($generated@@1 $generated@@173) 11) (forall (($generated@@174 T@U) ) (! (= (type ($generated@@171 $generated@@174)) $generated@@173)
 :pattern ( ($generated@@171 $generated@@174))
))) (forall (($generated@@175 T@T) ($generated@@176 T@U) ) (! (= (type ($generated@@172 $generated@@175 $generated@@176)) $generated@@175)
 :pattern ( ($generated@@172 $generated@@175 $generated@@176))
))))
(assert (forall (($generated@@177 T@U) ) (! (let (($generated@@178 (type $generated@@177)))
(= ($generated@@172 $generated@@178 ($generated@@171 $generated@@177)) $generated@@177))
 :pattern ( ($generated@@171 $generated@@177))
)))
(assert (forall (($generated@@180 Int) ($generated@@181 Int) ) (! (= ($generated@@179 $generated@@180 $generated@@181) (mod $generated@@180 $generated@@181))
 :pattern ( ($generated@@179 $generated@@180 $generated@@181))
)))
(assert (forall (($generated@@182 Int) ) (! (= ($generated@@171 ($generated@@8 ($generated@@162 $generated@@182))) ($generated@@164 ($generated@@171 ($generated@@8 $generated@@182))))
 :pattern ( ($generated@@171 ($generated@@8 ($generated@@162 $generated@@182))))
)))
(assert (forall (($generated@@183 T@U) ) (! (= ($generated@@171 ($generated@@164 $generated@@183)) ($generated@@164 ($generated@@171 $generated@@183)))
 :pattern ( ($generated@@171 ($generated@@164 $generated@@183)))
)))
(push 1)
(declare-fun ControlFlow (Int Int) Int)
(declare-fun $generated@@184 () Int)
(declare-fun $generated@@185 () Int)
(declare-fun $generated@@186 () Bool)
(declare-fun $generated@@187 () Int)
(declare-fun $generated@@188 () Int)
(declare-fun $generated@@189 () Bool)
(declare-fun $generated@@190 () Int)
(declare-fun $generated@@191 () Int)
(declare-fun $generated@@192 () Int)
(declare-fun $generated@@193 () Int)
(declare-fun $generated@@194 () Int)
(declare-fun $generated@@195 () Int)
(declare-fun $generated@@196 () Int)
(declare-fun $generated@@197 () Bool)
(declare-fun $generated@@198 () T@U)
(declare-fun $generated@@199 () T@U)
(declare-fun $generated@@200 () T@U)
(declare-fun $generated@@201 () Bool)
(declare-fun $generated@@202 () Int)
(declare-fun $generated@@203 (T@U) Bool)
(declare-fun $generated@@204 (T@U) Bool)
(declare-fun $generated@@205 () Int)
(declare-fun $generated@@206 () Int)
(declare-fun $generated@@207 () Int)
(assert  (and (and (= (type $generated@@198) ($generated@@45 $generated@@46 $generated@@47)) (= (type $generated@@199) $generated@@46)) (= (type $generated@@200) ($generated@@108 $generated@@46 $generated@@4))))
(set-option :timeout 0)
(set-option :rlimit 0)
(assert (not
 (=> (= (ControlFlow 0 0) 58) (let (($generated@@208 true))
(let (($generated@@209  (=> (and (<= 0 $generated@@184) (= (ControlFlow 0 40) 38)) $generated@@208)))
(let (($generated@@210  (=> (and (< $generated@@184 0) (= (ControlFlow 0 39) 38)) $generated@@208)))
(let (($generated@@211  (=> (=> (not (= $generated@@185 0)) (not (= $generated@@184 0))) (and (=> (= (ControlFlow 0 41) 39) $generated@@210) (=> (= (ControlFlow 0 41) 40) $generated@@209)))))
(let (($generated@@212  (=> (and (= $generated@@185 0) (= (ControlFlow 0 43) 41)) $generated@@211)))
(let (($generated@@213  (=> (and (not (= $generated@@185 0)) (= (ControlFlow 0 42) 41)) $generated@@211)))
(let (($generated@@214  (=> (=> (= $generated@@185 ($generated@@162 0)) (= $generated@@184 ($generated@@162 0))) (and (=> (= (ControlFlow 0 44) 42) $generated@@213) (=> (= (ControlFlow 0 44) 43) $generated@@212)))))
(let (($generated@@215  (=> (and (not (= $generated@@185 ($generated@@162 0))) (= (ControlFlow 0 46) 44)) $generated@@214)))
(let (($generated@@216  (=> (and (= $generated@@185 ($generated@@162 0)) (= (ControlFlow 0 45) 44)) $generated@@214)))
(let (($generated@@217  (=> (not $generated@@186) (and (=> (= (ControlFlow 0 47) 45) $generated@@216) (=> (= (ControlFlow 0 47) 46) $generated@@215)))))
(let (($generated@@218  (=> (and (and (and (and (and (not (= ($generated@@179 $generated@@184 ($generated@@162 17)) ($generated@@162 0))) (not (= ($generated@@179 $generated@@184 ($generated@@162 17)) ($generated@@162 1)))) (not (= ($generated@@179 $generated@@184 ($generated@@162 17)) ($generated@@162 2)))) (not (= ($generated@@179 $generated@@184 ($generated@@162 17)) ($generated@@162 3)))) (< ($generated@@179 $generated@@184 ($generated@@162 17)) ($generated@@162 4))) (= (ControlFlow 0 34) (- 0 33))) false)))
(let (($generated@@219  (=> (= (ControlFlow 0 26) (- 0 25)) (not (= ($generated@@162 17) 0)))))
(let (($generated@@220  (=> (= (ControlFlow 0 24) (- 0 23)) (not (= ($generated@@162 17) 0)))))
(let (($generated@@221  (and (=> (= (ControlFlow 0 15) (- 0 18)) (or (or (<= 0 $generated@@187) (and (<= 0 $generated@@188) $generated@@189)) (= (ite (< $generated@@188 0) (- 0 $generated@@188) $generated@@188) $generated@@187))) (=> (or (or (<= 0 $generated@@187) (and (<= 0 $generated@@188) $generated@@189)) (= (ite (< $generated@@188 0) (- 0 $generated@@188) $generated@@188) $generated@@187)) (and (=> (= (ControlFlow 0 15) (- 0 17)) (or (and (<= 0 $generated@@188) $generated@@189) (and (= (< $generated@@188 0) $generated@@189) (< (ite (< $generated@@188 0) (- 0 $generated@@188) $generated@@188) $generated@@187)))) (=> (or (and (<= 0 $generated@@188) $generated@@189) (and (= (< $generated@@188 0) $generated@@189) (< (ite (< $generated@@188 0) (- 0 $generated@@188) $generated@@188) $generated@@187))) (and (=> (= (ControlFlow 0 15) (- 0 16)) (=> $generated@@186 (=> (= $generated@@185 ($generated@@162 0)) (= $generated@@188 ($generated@@162 0))))) (=> (=> $generated@@186 (=> (= $generated@@185 ($generated@@162 0)) (= $generated@@188 ($generated@@162 0)))) (=> (= (ControlFlow 0 15) (- 0 14)) (=> $generated@@186 (=> (not (= $generated@@185 0)) (not (= $generated@@188 0)))))))))))))
(let (($generated@@222  (and (=> (= (ControlFlow 0 31) (- 0 32)) (not (= ($generated@@162 17) 0))) (=> (not (= ($generated@@162 17) 0)) (=> (and (and (<= ($generated@@162 4) ($generated@@179 $generated@@184 ($generated@@162 17))) (= $generated@@190 ($generated@@162 58))) (and (= $generated@@188 $generated@@190) (= (ControlFlow 0 31) 15))) $generated@@221)))))
(let (($generated@@223  (=> (and (and (not (= $generated@@184 ($generated@@162 2))) (= $generated@@191 (- $generated@@184 2))) (and (= $generated@@188 $generated@@191) (= (ControlFlow 0 21) 15))) $generated@@221)))
(let (($generated@@224  (=> (and (and (= $generated@@184 ($generated@@162 8)) (= $generated@@192 ($generated@@162 5))) (and (= $generated@@188 $generated@@192) (= (ControlFlow 0 19) 15))) $generated@@221)))
(let (($generated@@225 true))
(let (($generated@@226  (and (=> (= (ControlFlow 0 29) (- 0 30)) (not (= ($generated@@162 17) 0))) (=> (not (= ($generated@@162 17) 0)) (=> (= ($generated@@179 $generated@@184 ($generated@@162 17)) ($generated@@162 3)) (=> (and (= $generated@@193 ($generated@@162 3)) (= (ControlFlow 0 29) 5)) $generated@@225))))))
(let (($generated@@227  (and (=> (= (ControlFlow 0 27) (- 0 28)) (not (= ($generated@@162 17) 0))) (=> (not (= ($generated@@162 17) 0)) (=> (and (= ($generated@@179 $generated@@184 ($generated@@162 17)) ($generated@@162 2)) (= (ControlFlow 0 27) 5)) $generated@@225)))))
(let (($generated@@228  (=> (< $generated@@184 0) (and (and (and (and (and (=> (= (ControlFlow 0 35) 24) $generated@@220) (=> (= (ControlFlow 0 35) 26) $generated@@219)) (=> (= (ControlFlow 0 35) 27) $generated@@227)) (=> (= (ControlFlow 0 35) 29) $generated@@226)) (=> (= (ControlFlow 0 35) 31) $generated@@222)) (=> (= (ControlFlow 0 35) 34) $generated@@218)))))
(let (($generated@@229  (=> (and (= $generated@@184 ($generated@@162 2)) (= (ControlFlow 0 20) 5)) $generated@@225)))
(let (($generated@@230  (=> (<= ($generated@@162 2) $generated@@184) (and (=> (= (ControlFlow 0 22) 20) $generated@@229) (=> (= (ControlFlow 0 22) 21) $generated@@223)))))
(let (($generated@@231  (and (=> (= (ControlFlow 0 6) (- 0 7)) (or (= $generated@@184 ($generated@@162 1)) (and (= $generated@@184 $generated@@185) (= $generated@@185 ($generated@@162 0))))) (=> (or (= $generated@@184 ($generated@@162 1)) (and (= $generated@@184 $generated@@185) (= $generated@@185 ($generated@@162 0)))) (=> (= (ControlFlow 0 6) 5) $generated@@225)))))
(let (($generated@@232  (=> (and (not (= $generated@@184 $generated@@185)) (= (ControlFlow 0 10) 6)) $generated@@231)))
(let (($generated@@233  (=> (and (= $generated@@184 $generated@@185) (= (ControlFlow 0 9) 6)) $generated@@231)))
(let (($generated@@234  (=> (not (= $generated@@184 ($generated@@162 1))) (and (=> (= (ControlFlow 0 11) 9) $generated@@233) (=> (= (ControlFlow 0 11) 10) $generated@@232)))))
(let (($generated@@235  (=> (and (= $generated@@184 ($generated@@162 1)) (= (ControlFlow 0 8) 6)) $generated@@231)))
(let (($generated@@236  (=> (and (and (<= 0 $generated@@184) (< $generated@@184 ($generated@@162 2))) (not (= $generated@@184 ($generated@@162 8)))) (and (=> (= (ControlFlow 0 13) 11) $generated@@234) (=> (= (ControlFlow 0 13) 8) $generated@@235)))))
(let (($generated@@237  (=> ($generated@@0 ($generated@@164 ($generated@@11 true))) (=> (and (= $generated@@189 (< $generated@@184 0)) (= $generated@@187 (ite (< $generated@@184 0) (- 0 $generated@@184) $generated@@184))) (and (and (and (=> (= (ControlFlow 0 36) 35) $generated@@228) (=> (= (ControlFlow 0 36) 22) $generated@@230)) (=> (= (ControlFlow 0 36) 19) $generated@@224)) (=> (= (ControlFlow 0 36) 13) $generated@@236))))))
(let (($generated@@238  (=> (not ($generated@@0 ($generated@@164 ($generated@@11 true)))) (and (=> (= (ControlFlow 0 12) 11) $generated@@234) (=> (= (ControlFlow 0 12) 8) $generated@@235)))))
(let (($generated@@239  (=> $generated@@186 (and (=> (= (ControlFlow 0 37) 12) $generated@@238) (=> (= (ControlFlow 0 37) 36) $generated@@237)))))
(let (($generated@@240  (and (=> (= (ControlFlow 0 48) 47) $generated@@217) (=> (= (ControlFlow 0 48) 37) $generated@@239))))
(let (($generated@@241 true))
(let (($generated@@242  (=> (and (and (and (and (and (and (not false) (<= 0 $generated@@194)) (= $generated@@195 0)) (<= 0 $generated@@196)) $generated@@197) (=> $generated@@186 true)) (and (and (and (=> $generated@@186 (=> (= $generated@@185 ($generated@@162 0)) (= $generated@@184 ($generated@@162 0)))) (=> $generated@@186 true)) (and (=> $generated@@186 (=> (not (= $generated@@185 0)) (not (= $generated@@184 0)))) (forall (($generated@@243 T@U) ) (!  (=> (= (type $generated@@243) $generated@@46) (=> (and (not (= $generated@@243 $generated@@199)) ($generated@@0 ($generated@@48 ($generated@@49 $generated@@198 $generated@@243) $generated@@50))) (= ($generated@@49 $generated@@198 $generated@@243) ($generated@@49 $generated@@198 $generated@@243))))
 :pattern ( ($generated@@49 $generated@@198 $generated@@243))
)))) (and (and ($generated@@44 $generated@@198 $generated@@198) (forall (($generated@@244 T@U) ($generated@@245 T@U) ) (! (let (($generated@@246 ($generated@@55 (type $generated@@245))))
 (=> (and (and (= (type $generated@@244) $generated@@46) (= (type $generated@@245) ($generated@@54 $generated@@246))) (and (not (= $generated@@244 $generated@@199)) ($generated@@0 ($generated@@48 ($generated@@49 $generated@@198 $generated@@244) $generated@@50)))) (or (= ($generated@@48 ($generated@@49 $generated@@198 $generated@@244) $generated@@245) ($generated@@48 ($generated@@49 $generated@@198 $generated@@244) $generated@@245)) ($generated@@0 ($generated@@106 $generated@@200 $generated@@244 $generated@@245)))))
 :pattern ( ($generated@@48 ($generated@@49 $generated@@198 $generated@@244) $generated@@245))
))) (and (=> (< $generated@@184 0) $generated@@201) (=> (= (< $generated@@184 0) $generated@@201) (and (<= (ite (< $generated@@184 0) (- 0 $generated@@184) $generated@@184) $generated@@202) (=> (= (ite (< $generated@@184 0) (- 0 $generated@@184) $generated@@184) $generated@@202) true))))))) (and (=> (= (ControlFlow 0 49) 4) $generated@@241) (=> (= (ControlFlow 0 49) 48) $generated@@240)))))
(let (($generated@@247  (=> (not (= $generated@@194 $generated@@196)) (=> (and (= $generated@@201 (< $generated@@185 0)) (= $generated@@202 (ite (< $generated@@185 0) (- 0 $generated@@185) $generated@@185))) (and (=> (= (ControlFlow 0 50) (- 0 52)) (=> $generated@@186 (=> (= $generated@@185 ($generated@@162 0)) (= $generated@@185 ($generated@@162 0))))) (=> (=> $generated@@186 (=> (= $generated@@185 ($generated@@162 0)) (= $generated@@185 ($generated@@162 0)))) (and (=> (= (ControlFlow 0 50) (- 0 51)) (=> $generated@@186 (=> (not (= $generated@@185 0)) (not (= $generated@@185 0))))) (=> (=> $generated@@186 (=> (not (= $generated@@185 0)) (not (= $generated@@185 0)))) (=> (= (ControlFlow 0 50) 49) $generated@@242)))))))))
(let (($generated@@248 true))
(let (($generated@@249  (=> $generated@@197 (and (=> (= (ControlFlow 0 53) 3) $generated@@248) (=> (= (ControlFlow 0 53) 50) $generated@@247)))))
(let (($generated@@250 true))
(let (($generated@@251  (and (=> (= (ControlFlow 0 54) 2) $generated@@250) (=> (= (ControlFlow 0 54) 53) $generated@@249))))
(let (($generated@@252 true))
(let (($generated@@253  (=> (and (and (and (and (not false) (<= 0 $generated@@194)) (= $generated@@195 0)) (<= 0 $generated@@196)) (and (and (and (<= $generated@@195 $generated@@194) (<= $generated@@194 $generated@@196)) (forall (($generated@@254 T@U) ) (!  (=> (= (type $generated@@254) $generated@@46) (=> (and (not (= $generated@@254 $generated@@199)) ($generated@@0 ($generated@@48 ($generated@@49 $generated@@198 $generated@@254) $generated@@50))) (= ($generated@@49 $generated@@198 $generated@@254) ($generated@@49 $generated@@198 $generated@@254))))
 :pattern ( ($generated@@49 $generated@@198 $generated@@254))
))) (and ($generated@@44 $generated@@198 $generated@@198) (forall (($generated@@255 T@U) ($generated@@256 T@U) ) (! (let (($generated@@257 ($generated@@55 (type $generated@@256))))
 (=> (and (and (= (type $generated@@255) $generated@@46) (= (type $generated@@256) ($generated@@54 $generated@@257))) (and (not (= $generated@@255 $generated@@199)) ($generated@@0 ($generated@@48 ($generated@@49 $generated@@198 $generated@@255) $generated@@50)))) (or (= ($generated@@48 ($generated@@49 $generated@@198 $generated@@255) $generated@@256) ($generated@@48 ($generated@@49 $generated@@198 $generated@@255) $generated@@256)) ($generated@@0 ($generated@@106 $generated@@200 $generated@@255 $generated@@256)))))
 :pattern ( ($generated@@48 ($generated@@49 $generated@@198 $generated@@255) $generated@@256))
))))) (and (=> (= (ControlFlow 0 55) 1) $generated@@252) (=> (= (ControlFlow 0 55) 54) $generated@@251)))))
(let (($generated@@258  (=> (and (= $generated@@200 ($generated@@107 $generated@@199 $generated@@198 $generated@@50 false)) (= $generated@@195 ($generated@@162 0))) (and (=> (= (ControlFlow 0 56) (- 0 57)) (<= $generated@@195 $generated@@196)) (=> (<= $generated@@195 $generated@@196) (=> (= (ControlFlow 0 56) 55) $generated@@253))))))
(let (($generated@@259  (=> (and (and (and ($generated@@203 $generated@@198) ($generated@@204 $generated@@198)) (and (<= ($generated@@162 0) $generated@@196) (<= ($generated@@162 0) $generated@@185))) (and (and (<= ($generated@@162 0) $generated@@205) (<= ($generated@@162 0) $generated@@206)) (and (= 1 $generated@@207) (= (ControlFlow 0 58) 56)))) $generated@@258)))
$generated@@259)))))))))))))))))))))))))))))))))))))))))))))
))
(check-sat)
(pop 1)
; Valid
(get-info :rlimit)
