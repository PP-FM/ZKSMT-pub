(set-logic UFLIRA)
(set-option :print-success false)
(set-info :smt-lib-version 2.6)
(set-option :auto_config false)
(set-option :type_check true)
(set-option :smt.case_split 3)
(set-option :smt.qi.eager_threshold 100)
(set-option :smt.delay_units true)
(set-option :smt.arith.solver 2)
(set-option :smt.mbqi false)
(set-option :model.compact false)
(set-option :model.v2 true)
(set-option :pp.bv_literals false)
; done setting options


(set-info :category "industrial")
(declare-sort |T@U| 0)
(declare-sort |T@T| 0)
(declare-fun real_pow (Real Real) Real)
(declare-fun UOrdering2 (|T@U| |T@U|) Bool)
(declare-fun UOrdering3 (|T@T| |T@U| |T@U|) Bool)
(declare-fun tickleBool (Bool) Bool)
(assert (and (tickleBool true) (tickleBool false)))
(declare-fun $generated (T@U) Int)
(declare-fun $generated@@0 (T@U) Bool)
(declare-fun $generated@@1 (T@T) Int)
(declare-fun $generated@@2 () T@T)
(declare-fun $generated@@3 () T@T)
(declare-fun $generated@@4 () T@T)
(declare-fun $generated@@5 () T@T)
(declare-fun $generated@@6 () T@T)
(declare-fun $generated@@7 () T@T)
(declare-fun $generated@@8 (Int) T@U)
(declare-fun type (T@U) T@T)
(declare-fun $generated@@9 (Real) T@U)
(declare-fun $generated@@10 (T@U) Real)
(declare-fun $generated@@11 (Bool) T@U)
(declare-fun $generated@@12 (RoundingMode) T@U)
(declare-fun $generated@@13 (T@U) RoundingMode)
(declare-fun $generated@@14 (String) T@U)
(declare-fun $generated@@15 (T@U) String)
(declare-fun $generated@@16 ((RegEx String)) T@U)
(declare-fun $generated@@17 (T@U) (RegEx String))
(declare-fun $generated@@44 () T@U)
(declare-fun $generated@@45 () T@U)
(declare-fun $generated@@46 () T@U)
(declare-fun $generated@@47 () T@U)
(declare-fun $generated@@48 () T@U)
(declare-fun $generated@@49 () T@U)
(declare-fun $generated@@50 () T@U)
(declare-fun $generated@@51 () T@U)
(declare-fun $generated@@52 () T@U)
(declare-fun $generated@@53 () T@U)
(declare-fun $generated@@54 () T@U)
(declare-fun $generated@@55 () T@U)
(declare-fun $generated@@56 () T@U)
(declare-fun $generated@@57 () T@U)
(declare-fun $generated@@58 () T@U)
(declare-fun $generated@@59 () T@U)
(declare-fun $generated@@60 () T@U)
(declare-fun $generated@@61 () T@U)
(declare-fun $generated@@62 () T@U)
(declare-fun $generated@@63 () T@U)
(declare-fun $generated@@64 () T@U)
(declare-fun $generated@@65 () T@U)
(declare-fun $generated@@66 () T@U)
(declare-fun $generated@@67 () T@T)
(declare-fun $generated@@68 () T@T)
(declare-fun $generated@@69 (T@T) T@T)
(declare-fun $generated@@70 (T@T) T@T)
(declare-fun $generated@@71 () T@T)
(declare-fun $generated@@72 () T@T)
(declare-fun $generated@@75 (T@U) T@U)
(declare-fun $generated@@77 (T@U T@U T@U) Bool)
(declare-fun $generated@@78 (Int) T@U)
(declare-fun $generated@@79 (T@T T@T) T@T)
(declare-fun $generated@@80 () T@T)
(declare-fun $generated@@81 () T@T)
(declare-fun $generated@@82 (T@T) T@T)
(declare-fun $generated@@83 (T@T) T@T)
(declare-fun $generated@@84 (T@U T@U) T@U)
(declare-fun $generated@@85 (T@U T@U T@U) T@U)
(declare-fun $generated@@86 (T@U T@U) T@U)
(declare-fun $generated@@87 (T@U T@U T@U) T@U)
(declare-fun $generated@@135 (T@U T@U) Bool)
(declare-fun $generated@@136 () T@T)
(declare-fun $generated@@140 (T@U T@U) Bool)
(declare-fun $generated@@142 (T@U T@U) T@U)
(declare-fun $generated@@143 (Int) T@U)
(declare-fun $generated@@144 (T@U) Int)
(declare-fun $generated@@151 (T@U) Bool)
(declare-fun $generated@@152 (T@U T@U) T@U)
(declare-fun $generated@@153 () T@T)
(declare-fun $generated@@159 (T@U T@U) Bool)
(declare-fun $generated@@160 (T@U) T@U)
(declare-fun $generated@@161 (T@U) T@U)
(declare-fun $generated@@166 () Int)
(declare-fun $generated@@167 (T@U T@U T@U T@U T@U T@U T@U T@U T@U) Bool)
(declare-fun $generated@@168 () T@T)
(declare-fun $generated@@169 () T@U)
(declare-fun $generated@@170 (T@U T@U) T@U)
(declare-fun $generated@@171 (T@U T@U) Bool)
(declare-fun $generated@@183 (T@U) T@U)
(declare-fun $generated@@184 (T@U) Bool)
(declare-fun $generated@@188 (T@U) T@U)
(declare-fun $generated@@199 (T@U T@U T@U) T@U)
(declare-fun $generated@@200 (T@U T@U T@U Bool) T@U)
(declare-fun $generated@@201 (T@T T@T) T@T)
(declare-fun $generated@@202 (T@T) T@T)
(declare-fun $generated@@203 (T@T) T@T)
(declare-fun $generated@@204 (T@U T@U T@U T@U) T@U)
(declare-fun $generated@@255 (T@U T@U) T@U)
(declare-fun $generated@@264 (T@U) T@U)
(declare-fun $generated@@269 (T@U) T@U)
(declare-fun $generated@@274 (Int) Int)
(declare-fun $generated@@276 (T@U) T@U)
(declare-fun $generated@@280 (T@U T@U T@U T@U T@U T@U T@U T@U) Bool)
(declare-fun $generated@@292 (T@U) Bool)
(declare-fun $generated@@293 (T@U T@U T@U) Bool)
(declare-fun $generated@@299 (T@U) T@U)
(declare-fun $generated@@316 (T@T) T@U)
(declare-fun $generated@@317 (T@U) Int)
(declare-fun $generated@@318 (T@T) T@T)
(declare-fun $generated@@319 (T@T) T@T)
(declare-fun $generated@@324 (T@U T@U) T@U)
(declare-fun $generated@@339 (T@U) T@U)
(declare-fun $generated@@344 (T@U) T@U)
(declare-fun $generated@@349 (T@U) Int)
(declare-fun $generated@@350 (T@T) T@U)
(declare-fun $generated@@355 (T@U) T@U)
(declare-fun $generated@@356 (T@T T@T) T@U)
(declare-fun $generated@@357 (T@T T@T) T@T)
(declare-fun $generated@@358 (T@T) T@T)
(declare-fun $generated@@359 (T@T) T@T)
(declare-fun $generated@@373 (T@U) T@U)
(declare-fun $generated@@374 (T@T T@T) T@U)
(declare-fun $generated@@375 (T@T T@T) T@T)
(declare-fun $generated@@376 (T@T) T@T)
(declare-fun $generated@@377 (T@T) T@T)
(declare-fun $generated@@395 (T@U) Bool)
(declare-fun $generated@@410 (T@U) T@U)
(declare-fun $generated@@421 (T@U) T@U)
(declare-fun $generated@@431 (T@U) T@U)
(declare-fun $generated@@432 () T@U)
(declare-fun $generated@@455 (T@U) T@U)
(declare-fun $generated@@456 (T@T T@U) T@U)
(declare-fun $generated@@457 (T@U) T@U)
(declare-fun $generated@@466 (T@U) T@U)
(declare-fun $generated@@467 (T@U) T@U)
(declare-fun $generated@@484 (T@U T@U) T@U)
(declare-fun $generated@@492 (T@U T@U) T@U)
(declare-fun $generated@@500 (T@T) T@U)
(declare-fun $generated@@524 () T@T)
(declare-fun $generated@@533 (T@U) T@U)
(declare-fun $generated@@537 (T@U) T@U)
(declare-fun $generated@@543 (T@U) T@U)
(declare-fun $generated@@547 (T@U) T@U)
(declare-fun $generated@@555 (T@U) T@U)
(declare-fun $generated@@559 (T@U) T@U)
(declare-fun $generated@@567 (T@U) T@U)
(declare-fun $generated@@571 (T@U) T@U)
(declare-fun $generated@@575 (T@U) T@U)
(declare-fun $generated@@579 (T@U) T@U)
(declare-fun $generated@@583 (T@U) T@U)
(declare-fun $generated@@584 (T@U Int) T@U)
(declare-fun $generated@@593 (T@U) Int)
(declare-fun $generated@@595 (T@U) T@U)
(declare-fun $generated@@599 (T@U) T@U)
(declare-fun $generated@@603 (T@U) T@U)
(declare-fun $generated@@607 (T@U) T@U)
(declare-fun $generated@@623 (T@U) Int)
(declare-fun $generated@@624 (T@U) Int)
(declare-fun $generated@@646 (T@U) T@U)
(declare-fun $generated@@713 (T@U) Int)
(assert  (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (= ($generated@@1 $generated@@2) 0) (= ($generated@@1 $generated@@3) 1)) (= ($generated@@1 $generated@@4) 2)) (= ($generated@@1 $generated@@5) 3)) (= ($generated@@1 $generated@@6) 4)) (= ($generated@@1 $generated@@7) 5)) (forall (($generated@@18 Int) ) (! (= ($generated ($generated@@8 $generated@@18)) $generated@@18)
 :pattern ( ($generated@@8 $generated@@18))
))) (forall (($generated@@19 T@U) ) (!  (=> (= (type $generated@@19) $generated@@2) (= ($generated@@8 ($generated $generated@@19)) $generated@@19))
 :pattern ( ($generated $generated@@19))
))) (forall (($generated@@20 Int) ) (! (= (type ($generated@@8 $generated@@20)) $generated@@2)
 :pattern ( ($generated@@8 $generated@@20))
))) (forall (($generated@@21 Real) ) (! (= ($generated@@10 ($generated@@9 $generated@@21)) $generated@@21)
 :pattern ( ($generated@@9 $generated@@21))
))) (forall (($generated@@22 T@U) ) (!  (=> (= (type $generated@@22) $generated@@3) (= ($generated@@9 ($generated@@10 $generated@@22)) $generated@@22))
 :pattern ( ($generated@@10 $generated@@22))
))) (forall (($generated@@23 Real) ) (! (= (type ($generated@@9 $generated@@23)) $generated@@3)
 :pattern ( ($generated@@9 $generated@@23))
))) (forall (($generated@@24 Bool) ) (! (= ($generated@@0 ($generated@@11 $generated@@24)) $generated@@24)
 :pattern ( ($generated@@11 $generated@@24))
))) (forall (($generated@@25 T@U) ) (!  (=> (= (type $generated@@25) $generated@@4) (= ($generated@@11 ($generated@@0 $generated@@25)) $generated@@25))
 :pattern ( ($generated@@0 $generated@@25))
))) (forall (($generated@@26 Bool) ) (! (= (type ($generated@@11 $generated@@26)) $generated@@4)
 :pattern ( ($generated@@11 $generated@@26))
))) (forall (($generated@@27 RoundingMode) ) (! (= ($generated@@13 ($generated@@12 $generated@@27)) $generated@@27)
 :pattern ( ($generated@@12 $generated@@27))
))) (forall (($generated@@28 T@U) ) (!  (=> (= (type $generated@@28) $generated@@5) (= ($generated@@12 ($generated@@13 $generated@@28)) $generated@@28))
 :pattern ( ($generated@@13 $generated@@28))
))) (forall (($generated@@29 RoundingMode) ) (! (= (type ($generated@@12 $generated@@29)) $generated@@5)
 :pattern ( ($generated@@12 $generated@@29))
))) (forall (($generated@@30 String) ) (! (= ($generated@@15 ($generated@@14 $generated@@30)) $generated@@30)
 :pattern ( ($generated@@14 $generated@@30))
))) (forall (($generated@@31 T@U) ) (!  (=> (= (type $generated@@31) $generated@@6) (= ($generated@@14 ($generated@@15 $generated@@31)) $generated@@31))
 :pattern ( ($generated@@15 $generated@@31))
))) (forall (($generated@@32 String) ) (! (= (type ($generated@@14 $generated@@32)) $generated@@6)
 :pattern ( ($generated@@14 $generated@@32))
))) (forall (($generated@@33 (RegEx String)) ) (! (= ($generated@@17 ($generated@@16 $generated@@33)) $generated@@33)
 :pattern ( ($generated@@16 $generated@@33))
))) (forall (($generated@@34 T@U) ) (!  (=> (= (type $generated@@34) $generated@@7) (= ($generated@@16 ($generated@@17 $generated@@34)) $generated@@34))
 :pattern ( ($generated@@17 $generated@@34))
))) (forall (($generated@@35 (RegEx String)) ) (! (= (type ($generated@@16 $generated@@35)) $generated@@7)
 :pattern ( ($generated@@16 $generated@@35))
))))
(assert (forall (($generated@@36 T@U) ) (! (UOrdering2 $generated@@36 $generated@@36)
 :no-pattern ($generated $generated@@36)
 :no-pattern ($generated@@0 $generated@@36)
)))
(assert (forall (($generated@@37 T@U) ($generated@@38 T@U) ($generated@@39 T@U) ) (! (let (($generated@@40 (type $generated@@37)))
 (=> (and (and (= (type $generated@@38) $generated@@40) (= (type $generated@@39) $generated@@40)) (and (UOrdering2 $generated@@37 $generated@@38) (UOrdering2 $generated@@38 $generated@@39))) (UOrdering2 $generated@@37 $generated@@39)))
 :pattern ( (UOrdering2 $generated@@37 $generated@@38) (UOrdering2 $generated@@38 $generated@@39))
)))
(assert (forall (($generated@@41 T@U) ($generated@@42 T@U) ) (! (let (($generated@@43 (type $generated@@41)))
 (=> (= (type $generated@@42) $generated@@43) (=> (and (UOrdering2 $generated@@41 $generated@@42) (UOrdering2 $generated@@42 $generated@@41)) (= $generated@@41 $generated@@42))))
 :pattern ( (UOrdering2 $generated@@41 $generated@@42) (UOrdering2 $generated@@42 $generated@@41))
)))
(assert  (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (= ($generated@@1 $generated@@67) 6) (= (type $generated@@44) $generated@@67)) (= (type $generated@@45) $generated@@67)) (= (type $generated@@46) $generated@@67)) (= (type $generated@@47) $generated@@67)) (= (type $generated@@48) $generated@@67)) (= ($generated@@1 $generated@@68) 7)) (= (type $generated@@49) $generated@@68)) (= (type $generated@@50) $generated@@68)) (= (type $generated@@51) $generated@@68)) (= (type $generated@@52) $generated@@68)) (= (type $generated@@53) $generated@@68)) (= (type $generated@@54) $generated@@68)) (= (type $generated@@55) $generated@@68)) (= (type $generated@@56) $generated@@68)) (= (type $generated@@57) $generated@@68)) (= (type $generated@@58) $generated@@68)) (= (type $generated@@59) $generated@@68)) (forall (($generated@@73 T@T) ) (= ($generated@@1 ($generated@@69 $generated@@73)) 8))) (forall (($generated@@74 T@T) ) (! (= ($generated@@70 ($generated@@69 $generated@@74)) $generated@@74)
 :pattern ( ($generated@@69 $generated@@74))
))) (= (type $generated@@60) ($generated@@69 $generated@@4))) (= ($generated@@1 $generated@@71) 9)) (= (type $generated@@61) $generated@@71)) (= (type $generated@@62) $generated@@68)) (= (type $generated@@63) $generated@@68)) (= (type $generated@@64) $generated@@68)) (= ($generated@@1 $generated@@72) 10)) (= (type $generated@@65) $generated@@72)) (= (type $generated@@66) $generated@@72)))
(assert (distinct $generated@@44 $generated@@45 $generated@@46 $generated@@47 $generated@@48 $generated@@49 $generated@@50 $generated@@51 $generated@@52 $generated@@53 $generated@@54 $generated@@55 $generated@@56 $generated@@57 $generated@@58 $generated@@59 $generated@@60 $generated@@61 $generated@@62 $generated@@63 $generated@@64 $generated@@65 $generated@@66)
)
(assert (forall (($generated@@76 T@U) ) (! (= (type ($generated@@75 $generated@@76)) $generated@@68)
 :pattern ( ($generated@@75 $generated@@76))
)))
(assert (= ($generated@@75 $generated@@44) $generated@@49))
(assert (= ($generated@@75 $generated@@45) $generated@@50))
(assert (= ($generated@@75 $generated@@46) $generated@@51))
(assert (= ($generated@@75 $generated@@47) $generated@@52))
(assert (= ($generated@@75 $generated@@48) $generated@@53))
(assert  (and (and (and (and (and (and (and (and (and (and (and (and (and (forall (($generated@@88 T@T) ($generated@@89 T@T) ) (= ($generated@@1 ($generated@@79 $generated@@88 $generated@@89)) 11)) (forall (($generated@@90 T@T) ($generated@@91 T@T) ) (! (= ($generated@@82 ($generated@@79 $generated@@90 $generated@@91)) $generated@@90)
 :pattern ( ($generated@@79 $generated@@90 $generated@@91))
))) (forall (($generated@@92 T@T) ($generated@@93 T@T) ) (! (= ($generated@@83 ($generated@@79 $generated@@92 $generated@@93)) $generated@@93)
 :pattern ( ($generated@@79 $generated@@92 $generated@@93))
))) (forall (($generated@@94 T@U) ($generated@@95 T@U) ) (! (let (($generated@@96 ($generated@@83 (type $generated@@94))))
(= (type ($generated@@84 $generated@@94 $generated@@95)) $generated@@96))
 :pattern ( ($generated@@84 $generated@@94 $generated@@95))
))) (forall (($generated@@97 T@U) ($generated@@98 T@U) ($generated@@99 T@U) ) (! (let (($generated@@100 (type $generated@@99)))
(let (($generated@@101 (type $generated@@98)))
(= (type ($generated@@85 $generated@@97 $generated@@98 $generated@@99)) ($generated@@79 $generated@@101 $generated@@100))))
 :pattern ( ($generated@@85 $generated@@97 $generated@@98 $generated@@99))
))) (forall (($generated@@102 T@U) ($generated@@103 T@U) ($generated@@104 T@U) ) (! (let (($generated@@105 ($generated@@83 (type $generated@@102))))
 (=> (= (type $generated@@104) $generated@@105) (= ($generated@@84 ($generated@@85 $generated@@102 $generated@@103 $generated@@104) $generated@@103) $generated@@104)))
 :weight 0
))) (and (forall (($generated@@106 T@U) ($generated@@107 T@U) ($generated@@108 T@U) ($generated@@109 T@U) ) (!  (or (= $generated@@108 $generated@@109) (= ($generated@@84 ($generated@@85 $generated@@107 $generated@@108 $generated@@106) $generated@@109) ($generated@@84 $generated@@107 $generated@@109)))
 :weight 0
)) (forall (($generated@@110 T@U) ($generated@@111 T@U) ($generated@@112 T@U) ($generated@@113 T@U) ) (!  (or true (= ($generated@@84 ($generated@@85 $generated@@111 $generated@@112 $generated@@110) $generated@@113) ($generated@@84 $generated@@111 $generated@@113)))
 :weight 0
)))) (= ($generated@@1 $generated@@80) 12)) (forall (($generated@@114 T@U) ($generated@@115 T@U) ) (! (let (($generated@@116 ($generated@@70 (type $generated@@115))))
(= (type ($generated@@86 $generated@@114 $generated@@115)) $generated@@116))
 :pattern ( ($generated@@86 $generated@@114 $generated@@115))
))) (= ($generated@@1 $generated@@81) 13)) (forall (($generated@@117 T@U) ($generated@@118 T@U) ($generated@@119 T@U) ) (! (= (type ($generated@@87 $generated@@117 $generated@@118 $generated@@119)) $generated@@81)
 :pattern ( ($generated@@87 $generated@@117 $generated@@118 $generated@@119))
))) (forall (($generated@@120 T@U) ($generated@@121 T@U) ($generated@@122 T@U) ) (! (let (($generated@@123 ($generated@@70 (type $generated@@121))))
 (=> (= (type $generated@@122) $generated@@123) (= ($generated@@86 ($generated@@87 $generated@@120 $generated@@121 $generated@@122) $generated@@121) $generated@@122)))
 :weight 0
))) (and (forall (($generated@@124 T@U) ($generated@@125 T@U) ($generated@@126 T@U) ($generated@@127 T@U) ) (!  (or (= $generated@@126 $generated@@127) (= ($generated@@86 ($generated@@87 $generated@@125 $generated@@126 $generated@@124) $generated@@127) ($generated@@86 $generated@@125 $generated@@127)))
 :weight 0
)) (forall (($generated@@128 T@U) ($generated@@129 T@U) ($generated@@130 T@U) ($generated@@131 T@U) ) (!  (or true (= ($generated@@86 ($generated@@87 $generated@@129 $generated@@130 $generated@@128) $generated@@131) ($generated@@86 $generated@@129 $generated@@131)))
 :weight 0
)))) (forall (($generated@@132 Int) ) (! (= (type ($generated@@78 $generated@@132)) $generated@@67)
 :pattern ( ($generated@@78 $generated@@132))
))))
(assert (forall (($generated@@133 T@U) ($generated@@134 T@U) ) (!  (=> (and (= (type $generated@@133) $generated@@2) (= (type $generated@@134) ($generated@@79 $generated@@80 $generated@@81))) ($generated@@77 $generated@@133 ($generated@@78 0) $generated@@134))
 :pattern ( ($generated@@77 $generated@@133 ($generated@@78 0) $generated@@134))
)))
(assert (= ($generated@@1 $generated@@136) 14))
(assert (forall (($generated@@137 T@U) ($generated@@138 T@U) ($generated@@139 T@U) ) (!  (=> (and (and (and (= (type $generated@@137) $generated@@136) (= (type $generated@@138) $generated@@136)) (= (type $generated@@139) $generated@@136)) (and ($generated@@135 $generated@@137 $generated@@138) ($generated@@135 $generated@@138 $generated@@139))) ($generated@@135 $generated@@137 $generated@@139))
 :pattern ( ($generated@@135 $generated@@137 $generated@@138) ($generated@@135 $generated@@138 $generated@@139))
 :pattern ( ($generated@@135 $generated@@137 $generated@@138) ($generated@@135 $generated@@137 $generated@@139))
)))
(assert (forall (($generated@@141 T@U) ) (!  (=> (= (type $generated@@141) $generated@@2) ($generated@@140 $generated@@141 ($generated@@78 0)))
 :pattern ( ($generated@@140 $generated@@141 ($generated@@78 0)))
)))
(assert  (and (forall (($generated@@145 T@U) ($generated@@146 T@U) ) (! (= (type ($generated@@142 $generated@@145 $generated@@146)) $generated@@136)
 :pattern ( ($generated@@142 $generated@@145 $generated@@146))
)) (forall (($generated@@147 Int) ) (! (= (type ($generated@@143 $generated@@147)) $generated@@136)
 :pattern ( ($generated@@143 $generated@@147))
))))
(assert (forall (($generated@@148 T@U) ($generated@@149 Int) ($generated@@150 Int) ) (!  (=> (= (type $generated@@148) $generated@@136) (=> (and (and (<= 0 $generated@@149) (<= 0 $generated@@150)) (<= (+ $generated@@149 $generated@@150) ($generated@@144 $generated@@148))) (= ($generated@@142 ($generated@@142 $generated@@148 ($generated@@143 $generated@@149)) ($generated@@143 $generated@@150)) ($generated@@142 $generated@@148 ($generated@@143 (+ $generated@@149 $generated@@150))))))
 :pattern ( ($generated@@142 ($generated@@142 $generated@@148 ($generated@@143 $generated@@149)) ($generated@@143 $generated@@150)))
)))
(assert  (and (= ($generated@@1 $generated@@153) 15) (forall (($generated@@154 T@U) ($generated@@155 T@U) ) (! (= (type ($generated@@152 $generated@@154 $generated@@155)) $generated@@67)
 :pattern ( ($generated@@152 $generated@@154 $generated@@155))
))))
(assert (forall (($generated@@156 T@U) ($generated@@157 T@U) ($generated@@158 T@U) ) (!  (=> (and (and (and (= (type $generated@@156) $generated@@67) (= (type $generated@@157) $generated@@67)) (= (type $generated@@158) $generated@@153)) ($generated@@140 $generated@@158 ($generated@@152 $generated@@156 $generated@@157))) ($generated@@151 $generated@@158))
 :pattern ( ($generated@@151 $generated@@158) ($generated@@140 $generated@@158 ($generated@@152 $generated@@156 $generated@@157)))
)))
(assert  (and (forall (($generated@@162 T@U) ) (! (= (type ($generated@@160 $generated@@162)) $generated@@136)
 :pattern ( ($generated@@160 $generated@@162))
)) (forall (($generated@@163 T@U) ) (! (= (type ($generated@@161 $generated@@163)) $generated@@136)
 :pattern ( ($generated@@161 $generated@@163))
))))
(assert (forall (($generated@@164 T@U) ($generated@@165 T@U) ) (!  (=> (and (and (= (type $generated@@164) $generated@@153) (= (type $generated@@165) $generated@@153)) true) (= ($generated@@159 $generated@@164 $generated@@165)  (and (= ($generated@@160 $generated@@164) ($generated@@160 $generated@@165)) (= ($generated@@161 $generated@@164) ($generated@@161 $generated@@165)))))
 :pattern ( ($generated@@159 $generated@@164 $generated@@165))
)))
(assert  (and (and (= ($generated@@1 $generated@@168) 16) (= (type $generated@@169) $generated@@80)) (forall (($generated@@172 T@U) ($generated@@173 T@U) ) (! (= (type ($generated@@170 $generated@@172 $generated@@173)) $generated@@67)
 :pattern ( ($generated@@170 $generated@@172 $generated@@173))
))))
(assert  (=> (<= 1 $generated@@166) (forall (($generated@@174 T@U) ($generated@@175 T@U) ($generated@@176 T@U) ($generated@@177 T@U) ($generated@@178 T@U) ($generated@@179 T@U) ($generated@@180 T@U) ($generated@@181 T@U) ($generated@@182 T@U) ) (!  (=> (and (and (and (and (and (and (and (and (and (= (type $generated@@174) $generated@@67) (= (type $generated@@175) $generated@@67)) (= (type $generated@@176) $generated@@67)) (= (type $generated@@177) $generated@@67)) (= (type $generated@@178) $generated@@168)) (= (type $generated@@179) $generated@@80)) (= (type $generated@@180) $generated@@136)) (= (type $generated@@181) $generated@@136)) (= (type $generated@@182) $generated@@136)) (and (and (and (and (not (= $generated@@179 $generated@@169)) ($generated@@140 $generated@@179 ($generated@@170 $generated@@174 $generated@@175))) ($generated@@171 $generated@@180 $generated@@176)) ($generated@@171 $generated@@181 $generated@@177)) (= $generated@@182 ($generated@@143 0)))) ($generated@@167 $generated@@174 $generated@@175 $generated@@176 $generated@@177 $generated@@178 $generated@@179 $generated@@182 $generated@@180 $generated@@181))
 :pattern ( ($generated@@167 $generated@@174 $generated@@175 $generated@@176 $generated@@177 $generated@@178 $generated@@179 $generated@@182 $generated@@180 $generated@@181))
))))
(assert (forall (($generated@@185 T@U) ) (! (= (type ($generated@@183 $generated@@185)) $generated@@67)
 :pattern ( ($generated@@183 $generated@@185))
)))
(assert (forall (($generated@@186 T@U) ($generated@@187 T@U) ) (!  (=> (and (and (= (type $generated@@186) ($generated@@79 $generated@@136 $generated@@2)) (= (type $generated@@187) $generated@@67)) ($generated@@140 $generated@@186 ($generated@@183 $generated@@187))) ($generated@@184 $generated@@186))
 :pattern ( ($generated@@140 $generated@@186 ($generated@@183 $generated@@187)))
)))
(assert (forall (($generated@@189 T@U) ) (! (= (type ($generated@@188 $generated@@189)) $generated@@168)
 :pattern ( ($generated@@188 $generated@@189))
)))
(assert (forall (($generated@@190 T@U) ($generated@@191 T@U) ($generated@@192 T@U) ($generated@@193 T@U) ($generated@@194 T@U) ($generated@@195 T@U) ($generated@@196 T@U) ($generated@@197 T@U) ($generated@@198 T@U) ) (!  (=> (and (and (and (and (and (and (and (and (= (type $generated@@190) $generated@@67) (= (type $generated@@191) $generated@@67)) (= (type $generated@@192) $generated@@67)) (= (type $generated@@193) $generated@@67)) (= (type $generated@@194) $generated@@168)) (= (type $generated@@195) $generated@@80)) (= (type $generated@@196) $generated@@136)) (= (type $generated@@197) $generated@@136)) (= (type $generated@@198) $generated@@136)) (= ($generated@@167 $generated@@190 $generated@@191 $generated@@192 $generated@@193 ($generated@@188 $generated@@194) $generated@@195 $generated@@196 $generated@@197 $generated@@198) ($generated@@167 $generated@@190 $generated@@191 $generated@@192 $generated@@193 $generated@@194 $generated@@195 $generated@@196 $generated@@197 $generated@@198)))
 :pattern ( ($generated@@167 $generated@@190 $generated@@191 $generated@@192 $generated@@193 ($generated@@188 $generated@@194) $generated@@195 $generated@@196 $generated@@197 $generated@@198))
)))
(assert  (and (and (and (and (and (and (and (forall (($generated@@205 T@T) ($generated@@206 T@T) ) (= ($generated@@1 ($generated@@201 $generated@@205 $generated@@206)) 17)) (forall (($generated@@207 T@T) ($generated@@208 T@T) ) (! (= ($generated@@202 ($generated@@201 $generated@@207 $generated@@208)) $generated@@207)
 :pattern ( ($generated@@201 $generated@@207 $generated@@208))
))) (forall (($generated@@209 T@T) ($generated@@210 T@T) ) (! (= ($generated@@203 ($generated@@201 $generated@@209 $generated@@210)) $generated@@210)
 :pattern ( ($generated@@201 $generated@@209 $generated@@210))
))) (forall (($generated@@211 T@U) ($generated@@212 T@U) ($generated@@213 T@U) ) (! (let (($generated@@214 ($generated@@203 (type $generated@@211))))
(= (type ($generated@@199 $generated@@211 $generated@@212 $generated@@213)) $generated@@214))
 :pattern ( ($generated@@199 $generated@@211 $generated@@212 $generated@@213))
))) (forall (($generated@@215 T@U) ($generated@@216 T@U) ($generated@@217 T@U) ($generated@@218 T@U) ) (! (let (($generated@@219 (type $generated@@218)))
(let (($generated@@220 (type $generated@@216)))
(= (type ($generated@@204 $generated@@215 $generated@@216 $generated@@217 $generated@@218)) ($generated@@201 $generated@@220 $generated@@219))))
 :pattern ( ($generated@@204 $generated@@215 $generated@@216 $generated@@217 $generated@@218))
))) (forall (($generated@@221 T@U) ($generated@@222 T@U) ($generated@@223 T@U) ($generated@@224 T@U) ) (! (let (($generated@@225 ($generated@@203 (type $generated@@221))))
 (=> (= (type $generated@@224) $generated@@225) (= ($generated@@199 ($generated@@204 $generated@@221 $generated@@222 $generated@@223 $generated@@224) $generated@@222 $generated@@223) $generated@@224)))
 :weight 0
))) (and (and (forall (($generated@@226 T@U) ($generated@@227 T@U) ($generated@@228 T@U) ($generated@@229 T@U) ($generated@@230 T@U) ($generated@@231 T@U) ) (!  (or (= $generated@@228 $generated@@230) (= ($generated@@199 ($generated@@204 $generated@@227 $generated@@228 $generated@@229 $generated@@226) $generated@@230 $generated@@231) ($generated@@199 $generated@@227 $generated@@230 $generated@@231)))
 :weight 0
)) (forall (($generated@@232 T@U) ($generated@@233 T@U) ($generated@@234 T@U) ($generated@@235 T@U) ($generated@@236 T@U) ($generated@@237 T@U) ) (!  (or (= $generated@@235 $generated@@237) (= ($generated@@199 ($generated@@204 $generated@@233 $generated@@234 $generated@@235 $generated@@232) $generated@@236 $generated@@237) ($generated@@199 $generated@@233 $generated@@236 $generated@@237)))
 :weight 0
))) (forall (($generated@@238 T@U) ($generated@@239 T@U) ($generated@@240 T@U) ($generated@@241 T@U) ($generated@@242 T@U) ($generated@@243 T@U) ) (!  (or true (= ($generated@@199 ($generated@@204 $generated@@239 $generated@@240 $generated@@241 $generated@@238) $generated@@242 $generated@@243) ($generated@@199 $generated@@239 $generated@@242 $generated@@243)))
 :weight 0
)))) (forall (($generated@@244 T@U) ($generated@@245 T@U) ($generated@@246 T@U) ($generated@@247 Bool) ) (! (= (type ($generated@@200 $generated@@244 $generated@@245 $generated@@246 $generated@@247)) ($generated@@201 $generated@@80 $generated@@4))
 :pattern ( ($generated@@200 $generated@@244 $generated@@245 $generated@@246 $generated@@247))
))))
(assert (forall (($generated@@248 T@U) ($generated@@249 T@U) ($generated@@250 T@U) ($generated@@251 Bool) ($generated@@252 T@U) ($generated@@253 T@U) ) (! (let (($generated@@254 ($generated@@70 (type $generated@@253))))
 (=> (and (and (and (and (= (type $generated@@248) $generated@@80) (= (type $generated@@249) ($generated@@79 $generated@@80 $generated@@81))) (= (type $generated@@250) ($generated@@69 $generated@@4))) (= (type $generated@@252) $generated@@80)) (= (type $generated@@253) ($generated@@69 $generated@@254))) (= ($generated@@0 ($generated@@199 ($generated@@200 $generated@@248 $generated@@249 $generated@@250 $generated@@251) $generated@@252 $generated@@253))  (=> (and (not (= $generated@@252 $generated@@248)) ($generated@@0 ($generated@@86 ($generated@@84 $generated@@249 $generated@@252) $generated@@250))) $generated@@251))))
 :pattern ( ($generated@@199 ($generated@@200 $generated@@248 $generated@@249 $generated@@250 $generated@@251) $generated@@252 $generated@@253))
)))
(assert (forall (($generated@@256 T@U) ($generated@@257 T@U) ) (! (= (type ($generated@@255 $generated@@256 $generated@@257)) $generated@@153)
 :pattern ( ($generated@@255 $generated@@256 $generated@@257))
)))
(assert (forall (($generated@@258 T@U) ($generated@@259 T@U) ($generated@@260 T@U) ($generated@@261 T@U) ) (!  (=> (and (and (and (= (type $generated@@258) $generated@@67) (= (type $generated@@259) $generated@@67)) (= (type $generated@@260) $generated@@136)) (= (type $generated@@261) $generated@@136)) (= ($generated@@140 ($generated@@255 $generated@@260 $generated@@261) ($generated@@152 $generated@@258 $generated@@259))  (and ($generated@@171 $generated@@260 $generated@@258) ($generated@@171 $generated@@261 $generated@@259))))
 :pattern ( ($generated@@140 ($generated@@255 $generated@@260 $generated@@261) ($generated@@152 $generated@@258 $generated@@259)))
)))
(assert (forall (($generated@@262 T@U) ($generated@@263 T@U) ) (!  (=> (and (= (type $generated@@262) $generated@@153) (= (type $generated@@263) $generated@@153)) (= ($generated@@159 $generated@@262 $generated@@263) (= $generated@@262 $generated@@263)))
 :pattern ( ($generated@@159 $generated@@262 $generated@@263))
)))
(assert (forall (($generated@@265 T@U) ) (! (= (type ($generated@@264 $generated@@265)) $generated@@67)
 :pattern ( ($generated@@264 $generated@@265))
)))
(assert (forall (($generated@@266 T@U) ($generated@@267 T@U) ) (!  (=> (and (= (type $generated@@266) ($generated@@79 $generated@@136 $generated@@4)) (= (type $generated@@267) $generated@@67)) (= ($generated@@140 $generated@@266 ($generated@@264 $generated@@267)) (forall (($generated@@268 T@U) ) (!  (=> (and (= (type $generated@@268) $generated@@136) ($generated@@0 ($generated@@84 $generated@@266 $generated@@268))) ($generated@@171 $generated@@268 $generated@@267))
 :pattern ( ($generated@@84 $generated@@266 $generated@@268))
))))
 :pattern ( ($generated@@140 $generated@@266 ($generated@@264 $generated@@267)))
)))
(assert (forall (($generated@@270 T@U) ) (! (= (type ($generated@@269 $generated@@270)) $generated@@67)
 :pattern ( ($generated@@269 $generated@@270))
)))
(assert (forall (($generated@@271 T@U) ($generated@@272 T@U) ) (!  (=> (and (= (type $generated@@271) ($generated@@79 $generated@@136 $generated@@4)) (= (type $generated@@272) $generated@@67)) (= ($generated@@140 $generated@@271 ($generated@@269 $generated@@272)) (forall (($generated@@273 T@U) ) (!  (=> (and (= (type $generated@@273) $generated@@136) ($generated@@0 ($generated@@84 $generated@@271 $generated@@273))) ($generated@@171 $generated@@273 $generated@@272))
 :pattern ( ($generated@@84 $generated@@271 $generated@@273))
))))
 :pattern ( ($generated@@140 $generated@@271 ($generated@@269 $generated@@272)))
)))
(assert (forall (($generated@@275 Int) ) (! (= ($generated@@274 $generated@@275) $generated@@275)
 :pattern ( ($generated@@274 $generated@@275))
)))
(assert (forall (($generated@@277 T@U) ) (! (let (($generated@@278 (type $generated@@277)))
(= (type ($generated@@276 $generated@@277)) $generated@@278))
 :pattern ( ($generated@@276 $generated@@277))
)))
(assert (forall (($generated@@279 T@U) ) (! (= ($generated@@276 $generated@@279) $generated@@279)
 :pattern ( ($generated@@276 $generated@@279))
)))
(assert  (=> (<= 1 $generated@@166) (forall (($generated@@281 T@U) ($generated@@282 T@U) ($generated@@283 T@U) ($generated@@284 T@U) ($generated@@285 T@U) ($generated@@286 T@U) ($generated@@287 T@U) ($generated@@288 T@U) ($generated@@289 T@U) ) (!  (=> (and (and (and (and (and (and (and (and (and (= (type $generated@@281) $generated@@67) (= (type $generated@@282) $generated@@67)) (= (type $generated@@283) $generated@@67)) (= (type $generated@@284) $generated@@67)) (= (type $generated@@285) $generated@@168)) (= (type $generated@@286) $generated@@80)) (= (type $generated@@287) $generated@@136)) (= (type $generated@@288) $generated@@136)) (= (type $generated@@289) $generated@@136)) (or ($generated@@280 $generated@@281 $generated@@282 $generated@@283 $generated@@284 $generated@@286 ($generated@@276 $generated@@287) $generated@@288 $generated@@289) (and (not (= 1 $generated@@166)) (and (and (and (not (= $generated@@286 $generated@@169)) ($generated@@140 $generated@@286 ($generated@@170 $generated@@281 $generated@@282))) ($generated@@171 $generated@@288 $generated@@283)) ($generated@@171 $generated@@289 $generated@@284))))) (and (and (=> (< 0 ($generated@@144 $generated@@287)) ($generated@@280 $generated@@281 $generated@@282 $generated@@283 $generated@@284 $generated@@286 ($generated@@142 $generated@@287 ($generated@@143 1)) $generated@@288 $generated@@289)) (=> (=> (< 0 ($generated@@144 $generated@@287)) ($generated@@167 $generated@@281 $generated@@282 $generated@@283 $generated@@284 ($generated@@188 $generated@@285) $generated@@286 ($generated@@142 $generated@@287 ($generated@@143 1)) $generated@@288 $generated@@289)) (=> (= ($generated@@274 0) ($generated@@144 $generated@@287)) (forall (($generated@@290 T@U) ) (!  (=> (and (= (type $generated@@290) $generated@@136) ($generated@@135 $generated@@290 $generated@@287)) ($generated@@280 $generated@@281 $generated@@282 $generated@@283 $generated@@284 $generated@@286 $generated@@290 $generated@@288 $generated@@289))
 :pattern ( ($generated@@167 $generated@@281 $generated@@282 $generated@@283 $generated@@284 ($generated@@188 $generated@@285) $generated@@286 $generated@@290 $generated@@288 $generated@@289))
))))) (= ($generated@@167 $generated@@281 $generated@@282 $generated@@283 $generated@@284 ($generated@@188 $generated@@285) $generated@@286 ($generated@@276 $generated@@287) $generated@@288 $generated@@289)  (and (=> (< 0 ($generated@@144 $generated@@287)) ($generated@@167 $generated@@281 $generated@@282 $generated@@283 $generated@@284 ($generated@@188 $generated@@285) $generated@@286 ($generated@@142 $generated@@287 ($generated@@143 1)) $generated@@288 $generated@@289)) (=> (= ($generated@@274 0) ($generated@@144 $generated@@287)) (forall (($generated@@291 T@U) ) (!  (=> (and (= (type $generated@@291) $generated@@136) ($generated@@135 $generated@@291 $generated@@287)) ($generated@@167 $generated@@281 $generated@@282 $generated@@283 $generated@@284 ($generated@@188 $generated@@285) $generated@@286 $generated@@291 $generated@@288 $generated@@289))
 :pattern ( ($generated@@167 $generated@@281 $generated@@282 $generated@@283 $generated@@284 ($generated@@188 $generated@@285) $generated@@286 $generated@@291 $generated@@288 $generated@@289))
)))))))
 :weight 3
 :pattern ( ($generated@@167 $generated@@281 $generated@@282 $generated@@283 $generated@@284 ($generated@@188 $generated@@285) $generated@@286 ($generated@@276 $generated@@287) $generated@@288 $generated@@289))
))))
(assert (forall (($generated@@294 T@U) ($generated@@295 T@U) ($generated@@296 T@U) ($generated@@297 T@U) ($generated@@298 T@U) ) (!  (=> (and (and (and (and (and (= (type $generated@@294) $generated@@67) (= (type $generated@@295) $generated@@67)) (= (type $generated@@296) $generated@@136)) (= (type $generated@@297) $generated@@136)) (= (type $generated@@298) ($generated@@79 $generated@@80 $generated@@81))) ($generated@@292 $generated@@298)) (= ($generated@@77 ($generated@@255 $generated@@296 $generated@@297) ($generated@@152 $generated@@294 $generated@@295) $generated@@298)  (and ($generated@@293 $generated@@296 $generated@@294 $generated@@298) ($generated@@293 $generated@@297 $generated@@295 $generated@@298))))
 :pattern ( ($generated@@77 ($generated@@255 $generated@@296 $generated@@297) ($generated@@152 $generated@@294 $generated@@295) $generated@@298))
)))
(assert (forall (($generated@@300 T@U) ) (! (= (type ($generated@@299 $generated@@300)) $generated@@71)
 :pattern ( ($generated@@299 $generated@@300))
)))
(assert (forall (($generated@@301 T@U) ) (!  (=> (= (type $generated@@301) $generated@@153) (= ($generated@@151 $generated@@301) (= ($generated@@299 $generated@@301) $generated@@61)))
 :pattern ( ($generated@@151 $generated@@301))
)))
(assert  (=> (<= 1 $generated@@166) (forall (($generated@@302 T@U) ($generated@@303 T@U) ($generated@@304 T@U) ($generated@@305 T@U) ($generated@@306 T@U) ($generated@@307 T@U) ($generated@@308 T@U) ($generated@@309 T@U) ($generated@@310 T@U) ) (!  (=> (and (and (and (and (and (and (and (and (and (= (type $generated@@302) $generated@@67) (= (type $generated@@303) $generated@@67)) (= (type $generated@@304) $generated@@67)) (= (type $generated@@305) $generated@@67)) (= (type $generated@@306) $generated@@168)) (= (type $generated@@307) $generated@@80)) (= (type $generated@@308) $generated@@136)) (= (type $generated@@309) $generated@@136)) (= (type $generated@@310) $generated@@136)) (or ($generated@@280 $generated@@302 $generated@@303 $generated@@304 $generated@@305 ($generated@@276 $generated@@307) ($generated@@276 $generated@@308) ($generated@@276 $generated@@309) ($generated@@276 $generated@@310)) (and (not (= 1 $generated@@166)) (and (and (and (not (= $generated@@307 $generated@@169)) ($generated@@140 $generated@@307 ($generated@@170 $generated@@302 $generated@@303))) ($generated@@171 $generated@@309 $generated@@304)) ($generated@@171 $generated@@310 $generated@@305))))) (and (and (=> (< 0 ($generated@@144 $generated@@308)) ($generated@@280 $generated@@302 $generated@@303 $generated@@304 $generated@@305 ($generated@@276 $generated@@307) ($generated@@142 $generated@@308 ($generated@@143 1)) $generated@@309 $generated@@310)) (=> (=> (< 0 ($generated@@144 $generated@@308)) ($generated@@167 $generated@@302 $generated@@303 $generated@@304 $generated@@305 ($generated@@188 $generated@@306) ($generated@@276 $generated@@307) ($generated@@142 $generated@@308 ($generated@@143 1)) $generated@@309 $generated@@310)) (=> (= ($generated@@274 0) ($generated@@144 $generated@@308)) (forall (($generated@@311 T@U) ) (!  (=> (and (= (type $generated@@311) $generated@@136) ($generated@@135 $generated@@311 $generated@@308)) ($generated@@280 $generated@@302 $generated@@303 $generated@@304 $generated@@305 $generated@@307 $generated@@311 $generated@@309 $generated@@310))
 :pattern ( ($generated@@167 $generated@@302 $generated@@303 $generated@@304 $generated@@305 ($generated@@188 $generated@@306) $generated@@307 $generated@@311 $generated@@309 $generated@@310))
))))) (= ($generated@@167 $generated@@302 $generated@@303 $generated@@304 $generated@@305 ($generated@@188 $generated@@306) ($generated@@276 $generated@@307) ($generated@@276 $generated@@308) ($generated@@276 $generated@@309) ($generated@@276 $generated@@310))  (and (=> (< 0 ($generated@@144 $generated@@308)) ($generated@@167 $generated@@302 $generated@@303 $generated@@304 $generated@@305 ($generated@@188 $generated@@306) ($generated@@276 $generated@@307) ($generated@@142 $generated@@308 ($generated@@143 1)) $generated@@309 $generated@@310)) (=> (= ($generated@@274 0) ($generated@@144 $generated@@308)) (forall (($generated@@312 T@U) ) (!  (=> (and (= (type $generated@@312) $generated@@136) ($generated@@135 $generated@@312 $generated@@308)) ($generated@@167 $generated@@302 $generated@@303 $generated@@304 $generated@@305 ($generated@@188 $generated@@306) $generated@@307 $generated@@312 $generated@@309 $generated@@310))
 :pattern ( ($generated@@167 $generated@@302 $generated@@303 $generated@@304 $generated@@305 ($generated@@188 $generated@@306) $generated@@307 $generated@@312 $generated@@309 $generated@@310))
)))))))
 :weight 3
 :pattern ( ($generated@@167 $generated@@302 $generated@@303 $generated@@304 $generated@@305 ($generated@@188 $generated@@306) ($generated@@276 $generated@@307) ($generated@@276 $generated@@308) ($generated@@276 $generated@@309) ($generated@@276 $generated@@310)))
))))
(assert (forall (($generated@@313 T@U) ) (!  (=> (and (= (type $generated@@313) $generated@@153) ($generated@@151 $generated@@313)) (exists (($generated@@314 T@U) ($generated@@315 T@U) ) (!  (and (and (= (type $generated@@314) $generated@@136) (= (type $generated@@315) $generated@@136)) (= $generated@@313 ($generated@@255 $generated@@314 $generated@@315)))
 :no-pattern (type $generated@@314)
 :no-pattern (type $generated@@315)
 :no-pattern ($generated $generated@@314)
 :no-pattern ($generated@@0 $generated@@314)
 :no-pattern ($generated $generated@@315)
 :no-pattern ($generated@@0 $generated@@315)
)))
 :pattern ( ($generated@@151 $generated@@313))
)))
(assert  (and (and (forall (($generated@@320 T@T) ) (= ($generated@@1 ($generated@@318 $generated@@320)) 18)) (forall (($generated@@321 T@T) ) (! (= ($generated@@319 ($generated@@318 $generated@@321)) $generated@@321)
 :pattern ( ($generated@@318 $generated@@321))
))) (forall (($generated@@322 T@T) ) (! (= (type ($generated@@316 $generated@@322)) ($generated@@318 $generated@@322))
 :pattern ( ($generated@@316 $generated@@322))
))))
(assert (forall (($generated@@323 T@T) ) (! (= ($generated@@317 ($generated@@316 $generated@@323)) 0)
 :pattern ( ($generated@@316 $generated@@323))
)))
(assert (forall (($generated@@325 T@U) ($generated@@326 T@U) ) (! (= (type ($generated@@324 $generated@@325 $generated@@326)) $generated@@67)
 :pattern ( ($generated@@324 $generated@@325 $generated@@326))
)))
(assert (forall (($generated@@327 T@U) ($generated@@328 T@U) ($generated@@329 T@U) ) (!  (=> (and (and (= (type $generated@@327) $generated@@67) (= (type $generated@@328) $generated@@67)) (= (type $generated@@329) $generated@@80)) (= ($generated@@140 $generated@@329 ($generated@@170 $generated@@327 $generated@@328))  (and ($generated@@140 $generated@@329 ($generated@@324 $generated@@327 $generated@@328)) (not (= $generated@@329 $generated@@169)))))
 :pattern ( ($generated@@140 $generated@@329 ($generated@@170 $generated@@327 $generated@@328)))
)))
(assert  (=> (<= 1 $generated@@166) (forall (($generated@@330 T@U) ($generated@@331 T@U) ($generated@@332 T@U) ($generated@@333 T@U) ($generated@@334 T@U) ($generated@@335 T@U) ($generated@@336 T@U) ($generated@@337 T@U) ($generated@@338 T@U) ) (!  (=> (and (and (and (and (and (and (and (and (and (= (type $generated@@330) $generated@@67) (= (type $generated@@331) $generated@@67)) (= (type $generated@@332) $generated@@67)) (= (type $generated@@333) $generated@@67)) (= (type $generated@@334) $generated@@168)) (= (type $generated@@335) $generated@@80)) (= (type $generated@@336) $generated@@136)) (= (type $generated@@337) $generated@@136)) (= (type $generated@@338) $generated@@136)) (or ($generated@@280 $generated@@330 $generated@@331 $generated@@332 $generated@@333 $generated@@335 $generated@@336 $generated@@337 $generated@@338) (and (not (= 1 $generated@@166)) (and (and (and (not (= $generated@@335 $generated@@169)) ($generated@@140 $generated@@335 ($generated@@170 $generated@@330 $generated@@331))) ($generated@@171 $generated@@337 $generated@@332)) ($generated@@171 $generated@@338 $generated@@333))))) true)
 :pattern ( ($generated@@167 $generated@@330 $generated@@331 $generated@@332 $generated@@333 $generated@@334 $generated@@335 $generated@@336 $generated@@337 $generated@@338))
))))
(assert (forall (($generated@@340 T@U) ) (! (= (type ($generated@@339 $generated@@340)) $generated@@136)
 :pattern ( ($generated@@339 $generated@@340))
)))
(assert (forall (($generated@@341 T@U) ($generated@@342 T@U) ($generated@@343 T@U) ) (!  (=> (and (= (type $generated@@342) $generated@@67) (= (type $generated@@343) ($generated@@79 $generated@@80 $generated@@81))) (= ($generated@@293 ($generated@@339 $generated@@341) $generated@@342 $generated@@343) ($generated@@77 $generated@@341 $generated@@342 $generated@@343)))
 :pattern ( ($generated@@293 ($generated@@339 $generated@@341) $generated@@342 $generated@@343))
)))
(assert (forall (($generated@@345 T@U) ) (! (= (type ($generated@@344 $generated@@345)) $generated@@67)
 :pattern ( ($generated@@344 $generated@@345))
)))
(assert (forall (($generated@@346 T@U) ($generated@@347 T@U) ($generated@@348 T@U) ) (!  (=> (and (and (= (type $generated@@346) $generated@@67) (= (type $generated@@347) $generated@@67)) (= (type $generated@@348) $generated@@80)) (= ($generated@@140 $generated@@348 ($generated@@324 $generated@@346 $generated@@347))  (or (= $generated@@348 $generated@@169) (= ($generated@@344 $generated@@348) ($generated@@324 $generated@@346 $generated@@347)))))
 :pattern ( ($generated@@140 $generated@@348 ($generated@@324 $generated@@346 $generated@@347)))
)))
(assert (forall (($generated@@351 T@T) ) (! (= (type ($generated@@350 $generated@@351)) ($generated@@79 $generated@@351 $generated@@2))
 :pattern ( ($generated@@350 $generated@@351))
)))
(assert (forall (($generated@@352 T@U) ) (! (let (($generated@@353 ($generated@@82 (type $generated@@352))))
 (=> (= (type $generated@@352) ($generated@@79 $generated@@353 $generated@@2)) (and (= (= ($generated@@349 $generated@@352) 0) (= $generated@@352 ($generated@@350 $generated@@353))) (=> (not (= ($generated@@349 $generated@@352) 0)) (exists (($generated@@354 T@U) ) (!  (and (= (type $generated@@354) $generated@@353) (< 0 ($generated ($generated@@84 $generated@@352 $generated@@354))))
 :no-pattern (type $generated@@354)
 :no-pattern ($generated $generated@@354)
 :no-pattern ($generated@@0 $generated@@354)
))))))
 :pattern ( ($generated@@349 $generated@@352))
)))
(assert  (and (and (and (and (forall (($generated@@360 T@T) ($generated@@361 T@T) ) (= ($generated@@1 ($generated@@357 $generated@@360 $generated@@361)) 19)) (forall (($generated@@362 T@T) ($generated@@363 T@T) ) (! (= ($generated@@358 ($generated@@357 $generated@@362 $generated@@363)) $generated@@362)
 :pattern ( ($generated@@357 $generated@@362 $generated@@363))
))) (forall (($generated@@364 T@T) ($generated@@365 T@T) ) (! (= ($generated@@359 ($generated@@357 $generated@@364 $generated@@365)) $generated@@365)
 :pattern ( ($generated@@357 $generated@@364 $generated@@365))
))) (forall (($generated@@366 T@U) ) (! (let (($generated@@367 ($generated@@358 (type $generated@@366))))
(= (type ($generated@@355 $generated@@366)) ($generated@@79 $generated@@367 $generated@@4)))
 :pattern ( ($generated@@355 $generated@@366))
))) (forall (($generated@@368 T@T) ($generated@@369 T@T) ) (! (= (type ($generated@@356 $generated@@368 $generated@@369)) ($generated@@357 $generated@@368 $generated@@369))
 :pattern ( ($generated@@356 $generated@@368 $generated@@369))
))))
(assert (forall (($generated@@370 T@U) ($generated@@371 T@T) ) (! (let (($generated@@372 (type $generated@@370)))
 (not ($generated@@0 ($generated@@84 ($generated@@355 ($generated@@356 $generated@@372 $generated@@371)) $generated@@370))))
 :pattern ( (let (($generated@@372 (type $generated@@370)))
($generated@@84 ($generated@@355 ($generated@@356 $generated@@372 $generated@@371)) $generated@@370)))
)))
(assert  (and (and (and (and (forall (($generated@@378 T@T) ($generated@@379 T@T) ) (= ($generated@@1 ($generated@@375 $generated@@378 $generated@@379)) 20)) (forall (($generated@@380 T@T) ($generated@@381 T@T) ) (! (= ($generated@@376 ($generated@@375 $generated@@380 $generated@@381)) $generated@@380)
 :pattern ( ($generated@@375 $generated@@380 $generated@@381))
))) (forall (($generated@@382 T@T) ($generated@@383 T@T) ) (! (= ($generated@@377 ($generated@@375 $generated@@382 $generated@@383)) $generated@@383)
 :pattern ( ($generated@@375 $generated@@382 $generated@@383))
))) (forall (($generated@@384 T@U) ) (! (let (($generated@@385 ($generated@@376 (type $generated@@384))))
(= (type ($generated@@373 $generated@@384)) ($generated@@79 $generated@@385 $generated@@4)))
 :pattern ( ($generated@@373 $generated@@384))
))) (forall (($generated@@386 T@T) ($generated@@387 T@T) ) (! (= (type ($generated@@374 $generated@@386 $generated@@387)) ($generated@@375 $generated@@386 $generated@@387))
 :pattern ( ($generated@@374 $generated@@386 $generated@@387))
))))
(assert (forall (($generated@@388 T@U) ($generated@@389 T@T) ) (! (let (($generated@@390 (type $generated@@388)))
 (not ($generated@@0 ($generated@@84 ($generated@@373 ($generated@@374 $generated@@390 $generated@@389)) $generated@@388))))
 :pattern ( (let (($generated@@390 (type $generated@@388)))
($generated@@84 ($generated@@373 ($generated@@374 $generated@@390 $generated@@389)) $generated@@388)))
)))
(assert (forall (($generated@@391 T@U) ($generated@@392 T@U) ($generated@@393 T@U) ($generated@@394 T@U) ) (!  (=> (and (and (and (= (type $generated@@391) $generated@@67) (= (type $generated@@392) $generated@@67)) (= (type $generated@@393) $generated@@80)) (= (type $generated@@394) ($generated@@79 $generated@@80 $generated@@81))) (= ($generated@@77 $generated@@393 ($generated@@324 $generated@@391 $generated@@392) $generated@@394)  (or (= $generated@@393 $generated@@169) ($generated@@0 ($generated@@86 ($generated@@84 $generated@@394 $generated@@393) $generated@@60)))))
 :pattern ( ($generated@@77 $generated@@393 ($generated@@324 $generated@@391 $generated@@392) $generated@@394))
)))
(assert (forall (($generated@@396 T@U) ($generated@@397 T@U) ) (!  (=> (and (and (= (type $generated@@396) $generated@@136) (= (type $generated@@397) $generated@@136)) (and ($generated@@395 $generated@@397) (<= ($generated@@144 $generated@@397) ($generated@@144 $generated@@396)))) (and (= ($generated@@395 ($generated@@142 $generated@@396 $generated@@397)) ($generated@@395 $generated@@396)) (= ($generated@@144 ($generated@@142 $generated@@396 $generated@@397)) (- ($generated@@144 $generated@@396) ($generated@@144 $generated@@397)))))
 :pattern ( ($generated@@142 $generated@@396 $generated@@397))
)))
(assert (forall (($generated@@398 Int) ) (!  (=> (<= 0 $generated@@398) (and ($generated@@395 ($generated@@143 $generated@@398)) (= ($generated@@144 ($generated@@143 $generated@@398)) $generated@@398)))
 :pattern ( ($generated@@143 $generated@@398))
)))
(assert (forall (($generated@@399 T@U) ($generated@@400 T@U) ($generated@@401 T@U) ($generated@@402 T@U) ) (!  (=> (and (and (and (= (type $generated@@399) $generated@@67) (= (type $generated@@400) $generated@@67)) (= (type $generated@@401) $generated@@80)) (= (type $generated@@402) ($generated@@79 $generated@@80 $generated@@81))) (= ($generated@@77 $generated@@401 ($generated@@170 $generated@@399 $generated@@400) $generated@@402) ($generated@@77 $generated@@401 ($generated@@324 $generated@@399 $generated@@400) $generated@@402)))
 :pattern ( ($generated@@77 $generated@@401 ($generated@@170 $generated@@399 $generated@@400) $generated@@402))
)))
(assert (forall (($generated@@403 T@U) ) (! (let (($generated@@404 ($generated@@82 (type $generated@@403))))
 (=> (= (type $generated@@403) ($generated@@79 $generated@@404 $generated@@2)) (= ($generated@@184 $generated@@403) (forall (($generated@@405 T@U) ) (!  (=> (= (type $generated@@405) $generated@@404) (and (<= 0 ($generated ($generated@@84 $generated@@403 $generated@@405))) (<= ($generated ($generated@@84 $generated@@403 $generated@@405)) ($generated@@349 $generated@@403))))
 :pattern ( ($generated@@84 $generated@@403 $generated@@405))
)))))
 :pattern ( ($generated@@184 $generated@@403))
)))
(assert (forall (($generated@@406 T@U) ) (! (let (($generated@@407 ($generated@@359 (type $generated@@406))))
(let (($generated@@408 ($generated@@358 (type $generated@@406))))
 (=> (= (type $generated@@406) ($generated@@357 $generated@@408 $generated@@407)) (or (= $generated@@406 ($generated@@356 $generated@@408 $generated@@407)) (exists (($generated@@409 T@U) ) (!  (and (= (type $generated@@409) $generated@@408) ($generated@@0 ($generated@@84 ($generated@@355 $generated@@406) $generated@@409)))
 :no-pattern (type $generated@@409)
 :no-pattern ($generated $generated@@409)
 :no-pattern ($generated@@0 $generated@@409)
))))))
 :pattern ( ($generated@@355 $generated@@406))
)))
(assert (forall (($generated@@411 T@U) ) (! (let (($generated@@412 ($generated@@359 (type $generated@@411))))
(= (type ($generated@@410 $generated@@411)) ($generated@@79 $generated@@412 $generated@@4)))
 :pattern ( ($generated@@410 $generated@@411))
)))
(assert (forall (($generated@@413 T@U) ) (! (let (($generated@@414 ($generated@@359 (type $generated@@413))))
(let (($generated@@415 ($generated@@358 (type $generated@@413))))
 (=> (= (type $generated@@413) ($generated@@357 $generated@@415 $generated@@414)) (or (= $generated@@413 ($generated@@356 $generated@@415 $generated@@414)) (exists (($generated@@416 T@U) ) (!  (and (= (type $generated@@416) $generated@@414) ($generated@@0 ($generated@@84 ($generated@@410 $generated@@413) $generated@@416)))
 :no-pattern (type $generated@@416)
 :no-pattern ($generated $generated@@416)
 :no-pattern ($generated@@0 $generated@@416)
))))))
 :pattern ( ($generated@@410 $generated@@413))
)))
(assert (forall (($generated@@417 T@U) ) (! (let (($generated@@418 ($generated@@377 (type $generated@@417))))
(let (($generated@@419 ($generated@@376 (type $generated@@417))))
 (=> (= (type $generated@@417) ($generated@@375 $generated@@419 $generated@@418)) (or (= $generated@@417 ($generated@@374 $generated@@419 $generated@@418)) (exists (($generated@@420 T@U) ) (!  (and (= (type $generated@@420) $generated@@419) ($generated@@0 ($generated@@84 ($generated@@373 $generated@@417) $generated@@420)))
 :no-pattern (type $generated@@420)
 :no-pattern ($generated $generated@@420)
 :no-pattern ($generated@@0 $generated@@420)
))))))
 :pattern ( ($generated@@373 $generated@@417))
)))
(assert (forall (($generated@@422 T@U) ) (! (let (($generated@@423 ($generated@@377 (type $generated@@422))))
(= (type ($generated@@421 $generated@@422)) ($generated@@79 $generated@@423 $generated@@4)))
 :pattern ( ($generated@@421 $generated@@422))
)))
(assert (forall (($generated@@424 T@U) ) (! (let (($generated@@425 ($generated@@377 (type $generated@@424))))
(let (($generated@@426 ($generated@@376 (type $generated@@424))))
 (=> (= (type $generated@@424) ($generated@@375 $generated@@426 $generated@@425)) (or (= $generated@@424 ($generated@@374 $generated@@426 $generated@@425)) (exists (($generated@@427 T@U) ) (!  (and (= (type $generated@@427) $generated@@425) ($generated@@0 ($generated@@84 ($generated@@421 $generated@@424) $generated@@427)))
 :no-pattern (type $generated@@427)
 :no-pattern ($generated $generated@@427)
 :no-pattern ($generated@@0 $generated@@427)
))))))
 :pattern ( ($generated@@421 $generated@@424))
)))
(assert (forall (($generated@@428 T@U) ($generated@@429 T@U) ) (!  (=> (and (= (type $generated@@428) ($generated@@79 $generated@@136 $generated@@2)) (= (type $generated@@429) $generated@@67)) (= ($generated@@140 $generated@@428 ($generated@@183 $generated@@429)) (forall (($generated@@430 T@U) ) (!  (=> (and (= (type $generated@@430) $generated@@136) (< 0 ($generated ($generated@@84 $generated@@428 $generated@@430)))) ($generated@@171 $generated@@430 $generated@@429))
 :pattern ( ($generated@@84 $generated@@428 $generated@@430))
))))
 :pattern ( ($generated@@140 $generated@@428 ($generated@@183 $generated@@429)))
)))
(assert  (and (forall (($generated@@433 T@U) ) (! (= (type ($generated@@431 $generated@@433)) $generated@@168)
 :pattern ( ($generated@@431 $generated@@433))
)) (= (type $generated@@432) $generated@@168)))
(assert (forall (($generated@@434 T@U) ($generated@@435 T@U) ($generated@@436 T@U) ($generated@@437 T@U) ($generated@@438 T@U) ($generated@@439 T@U) ($generated@@440 T@U) ($generated@@441 T@U) ($generated@@442 T@U) ) (!  (=> (and (and (and (and (and (and (and (and (= (type $generated@@434) $generated@@67) (= (type $generated@@435) $generated@@67)) (= (type $generated@@436) $generated@@67)) (= (type $generated@@437) $generated@@67)) (= (type $generated@@438) $generated@@168)) (= (type $generated@@439) $generated@@80)) (= (type $generated@@440) $generated@@136)) (= (type $generated@@441) $generated@@136)) (= (type $generated@@442) $generated@@136)) (= ($generated@@167 $generated@@434 $generated@@435 $generated@@436 $generated@@437 $generated@@438 $generated@@439 $generated@@440 $generated@@441 $generated@@442) ($generated@@167 $generated@@434 $generated@@435 $generated@@436 $generated@@437 $generated@@432 $generated@@439 $generated@@440 $generated@@441 $generated@@442)))
 :pattern ( ($generated@@167 $generated@@434 $generated@@435 $generated@@436 $generated@@437 ($generated@@431 $generated@@438) $generated@@439 $generated@@440 $generated@@441 $generated@@442))
)))
(assert (forall (($generated@@443 T@U) ($generated@@444 T@U) ) (!  (=> (and (= (type $generated@@443) $generated@@136) (= (type $generated@@444) $generated@@136)) (or (or ($generated@@135 $generated@@443 $generated@@444) (= $generated@@443 $generated@@444)) ($generated@@135 $generated@@444 $generated@@443)))
 :pattern ( ($generated@@135 $generated@@443 $generated@@444) ($generated@@135 $generated@@444 $generated@@443))
)))
(assert (forall (($generated@@445 T@U) ($generated@@446 T@U) ($generated@@447 T@U) ) (!  (=> (and (and (= (type $generated@@445) ($generated@@79 $generated@@136 $generated@@4)) (= (type $generated@@446) $generated@@67)) (= (type $generated@@447) ($generated@@79 $generated@@80 $generated@@81))) (= ($generated@@77 $generated@@445 ($generated@@264 $generated@@446) $generated@@447) (forall (($generated@@448 T@U) ) (!  (=> (and (= (type $generated@@448) $generated@@136) ($generated@@0 ($generated@@84 $generated@@445 $generated@@448))) ($generated@@293 $generated@@448 $generated@@446 $generated@@447))
 :pattern ( ($generated@@84 $generated@@445 $generated@@448))
))))
 :pattern ( ($generated@@77 $generated@@445 ($generated@@264 $generated@@446) $generated@@447))
)))
(assert (forall (($generated@@449 T@U) ($generated@@450 T@U) ($generated@@451 T@U) ) (!  (=> (and (and (= (type $generated@@449) ($generated@@79 $generated@@136 $generated@@4)) (= (type $generated@@450) $generated@@67)) (= (type $generated@@451) ($generated@@79 $generated@@80 $generated@@81))) (= ($generated@@77 $generated@@449 ($generated@@269 $generated@@450) $generated@@451) (forall (($generated@@452 T@U) ) (!  (=> (and (= (type $generated@@452) $generated@@136) ($generated@@0 ($generated@@84 $generated@@449 $generated@@452))) ($generated@@293 $generated@@452 $generated@@450 $generated@@451))
 :pattern ( ($generated@@84 $generated@@449 $generated@@452))
))))
 :pattern ( ($generated@@77 $generated@@449 ($generated@@269 $generated@@450) $generated@@451))
)))
(assert (forall (($generated@@453 T@U) ) (! (let (($generated@@454 (type $generated@@453)))
(= ($generated ($generated@@84 ($generated@@350 $generated@@454) $generated@@453)) 0))
 :pattern ( (let (($generated@@454 (type $generated@@453)))
($generated@@84 ($generated@@350 $generated@@454) $generated@@453)))
)))
(assert  (and (and (forall (($generated@@458 T@U) ) (! (= (type ($generated@@455 $generated@@458)) ($generated@@79 $generated@@136 $generated@@4))
 :pattern ( ($generated@@455 $generated@@458))
)) (forall (($generated@@459 T@T) ($generated@@460 T@U) ) (! (= (type ($generated@@456 $generated@@459 $generated@@460)) $generated@@459)
 :pattern ( ($generated@@456 $generated@@459 $generated@@460))
))) (forall (($generated@@461 T@U) ) (! (let (($generated@@462 ($generated@@359 (type $generated@@461))))
(let (($generated@@463 ($generated@@358 (type $generated@@461))))
(= (type ($generated@@457 $generated@@461)) ($generated@@79 $generated@@463 $generated@@462))))
 :pattern ( ($generated@@457 $generated@@461))
))))
(assert (forall (($generated@@464 T@U) ($generated@@465 T@U) ) (!  (=> (and (= (type $generated@@464) ($generated@@357 $generated@@136 $generated@@136)) (= (type $generated@@465) $generated@@136)) (= ($generated@@0 ($generated@@84 ($generated@@455 $generated@@464) $generated@@465))  (and ($generated@@0 ($generated@@84 ($generated@@355 $generated@@464) ($generated@@160 ($generated@@456 $generated@@153 $generated@@465)))) (= ($generated@@84 ($generated@@457 $generated@@464) ($generated@@160 ($generated@@456 $generated@@153 $generated@@465))) ($generated@@161 ($generated@@456 $generated@@153 $generated@@465))))))
 :pattern ( ($generated@@84 ($generated@@455 $generated@@464) $generated@@465))
)))
(assert  (and (forall (($generated@@468 T@U) ) (! (= (type ($generated@@466 $generated@@468)) ($generated@@79 $generated@@136 $generated@@4))
 :pattern ( ($generated@@466 $generated@@468))
)) (forall (($generated@@469 T@U) ) (! (let (($generated@@470 ($generated@@377 (type $generated@@469))))
(let (($generated@@471 ($generated@@376 (type $generated@@469))))
(= (type ($generated@@467 $generated@@469)) ($generated@@79 $generated@@471 $generated@@470))))
 :pattern ( ($generated@@467 $generated@@469))
))))
(assert (forall (($generated@@472 T@U) ($generated@@473 T@U) ) (!  (=> (and (= (type $generated@@472) ($generated@@375 $generated@@136 $generated@@136)) (= (type $generated@@473) $generated@@136)) (= ($generated@@0 ($generated@@84 ($generated@@466 $generated@@472) $generated@@473))  (and ($generated@@0 ($generated@@84 ($generated@@373 $generated@@472) ($generated@@160 ($generated@@456 $generated@@153 $generated@@473)))) (= ($generated@@84 ($generated@@467 $generated@@472) ($generated@@160 ($generated@@456 $generated@@153 $generated@@473))) ($generated@@161 ($generated@@456 $generated@@153 $generated@@473))))))
 :pattern ( ($generated@@84 ($generated@@466 $generated@@472) $generated@@473))
)))
(assert (forall (($generated@@474 T@U) ($generated@@475 T@U) ) (! (let (($generated@@476 (type $generated@@475)))
(let (($generated@@477 ($generated@@358 (type $generated@@474))))
 (=> (= (type $generated@@474) ($generated@@357 $generated@@477 $generated@@476)) (= ($generated@@0 ($generated@@84 ($generated@@410 $generated@@474) $generated@@475)) (exists (($generated@@478 T@U) ) (!  (and (= (type $generated@@478) $generated@@477) (and ($generated@@0 ($generated@@84 ($generated@@355 $generated@@474) $generated@@478)) (= $generated@@475 ($generated@@84 ($generated@@457 $generated@@474) $generated@@478))))
 :pattern ( ($generated@@84 ($generated@@355 $generated@@474) $generated@@478))
 :pattern ( ($generated@@84 ($generated@@457 $generated@@474) $generated@@478))
))))))
 :pattern ( ($generated@@84 ($generated@@410 $generated@@474) $generated@@475))
)))
(assert (forall (($generated@@479 T@U) ($generated@@480 T@U) ) (! (let (($generated@@481 (type $generated@@480)))
(let (($generated@@482 ($generated@@376 (type $generated@@479))))
 (=> (= (type $generated@@479) ($generated@@375 $generated@@482 $generated@@481)) (= ($generated@@0 ($generated@@84 ($generated@@421 $generated@@479) $generated@@480)) (exists (($generated@@483 T@U) ) (!  (and (= (type $generated@@483) $generated@@482) (and ($generated@@0 ($generated@@84 ($generated@@373 $generated@@479) $generated@@483)) (= $generated@@480 ($generated@@84 ($generated@@467 $generated@@479) $generated@@483))))
 :pattern ( ($generated@@84 ($generated@@373 $generated@@479) $generated@@483))
 :pattern ( ($generated@@84 ($generated@@467 $generated@@479) $generated@@483))
))))))
 :pattern ( ($generated@@84 ($generated@@421 $generated@@479) $generated@@480))
)))
(assert (forall (($generated@@485 T@U) ($generated@@486 T@U) ) (! (= (type ($generated@@484 $generated@@485 $generated@@486)) $generated@@67)
 :pattern ( ($generated@@484 $generated@@485 $generated@@486))
)))
(assert (forall (($generated@@487 T@U) ($generated@@488 T@U) ($generated@@489 T@U) ($generated@@490 T@U) ) (!  (=> (and (and (and (= (type $generated@@487) ($generated@@357 $generated@@136 $generated@@136)) (= (type $generated@@488) $generated@@67)) (= (type $generated@@489) $generated@@67)) (= (type $generated@@490) ($generated@@79 $generated@@80 $generated@@81))) (= ($generated@@77 $generated@@487 ($generated@@484 $generated@@488 $generated@@489) $generated@@490) (forall (($generated@@491 T@U) ) (!  (=> (and (= (type $generated@@491) $generated@@136) ($generated@@0 ($generated@@84 ($generated@@355 $generated@@487) $generated@@491))) (and ($generated@@293 ($generated@@84 ($generated@@457 $generated@@487) $generated@@491) $generated@@489 $generated@@490) ($generated@@293 $generated@@491 $generated@@488 $generated@@490)))
 :pattern ( ($generated@@84 ($generated@@457 $generated@@487) $generated@@491))
 :pattern ( ($generated@@84 ($generated@@355 $generated@@487) $generated@@491))
))))
 :pattern ( ($generated@@77 $generated@@487 ($generated@@484 $generated@@488 $generated@@489) $generated@@490))
)))
(assert (forall (($generated@@493 T@U) ($generated@@494 T@U) ) (! (= (type ($generated@@492 $generated@@493 $generated@@494)) $generated@@67)
 :pattern ( ($generated@@492 $generated@@493 $generated@@494))
)))
(assert (forall (($generated@@495 T@U) ($generated@@496 T@U) ($generated@@497 T@U) ($generated@@498 T@U) ) (!  (=> (and (and (and (= (type $generated@@495) ($generated@@375 $generated@@136 $generated@@136)) (= (type $generated@@496) $generated@@67)) (= (type $generated@@497) $generated@@67)) (= (type $generated@@498) ($generated@@79 $generated@@80 $generated@@81))) (= ($generated@@77 $generated@@495 ($generated@@492 $generated@@496 $generated@@497) $generated@@498) (forall (($generated@@499 T@U) ) (!  (=> (and (= (type $generated@@499) $generated@@136) ($generated@@0 ($generated@@84 ($generated@@373 $generated@@495) $generated@@499))) (and ($generated@@293 ($generated@@84 ($generated@@467 $generated@@495) $generated@@499) $generated@@497 $generated@@498) ($generated@@293 $generated@@499 $generated@@496 $generated@@498)))
 :pattern ( ($generated@@84 ($generated@@467 $generated@@495) $generated@@499))
 :pattern ( ($generated@@84 ($generated@@373 $generated@@495) $generated@@499))
))))
 :pattern ( ($generated@@77 $generated@@495 ($generated@@492 $generated@@496 $generated@@497) $generated@@498))
)))
(assert (forall (($generated@@501 T@T) ) (! (= (type ($generated@@500 $generated@@501)) ($generated@@79 $generated@@501 $generated@@4))
 :pattern ( ($generated@@500 $generated@@501))
)))
(assert (forall (($generated@@502 T@U) ) (! (let (($generated@@503 ($generated@@377 (type $generated@@502))))
(let (($generated@@504 ($generated@@376 (type $generated@@502))))
 (=> (= (type $generated@@502) ($generated@@375 $generated@@504 $generated@@503)) (= (= $generated@@502 ($generated@@374 $generated@@504 $generated@@503)) (= ($generated@@373 $generated@@502) ($generated@@500 $generated@@504))))))
 :pattern ( ($generated@@373 $generated@@502))
)))
(assert (forall (($generated@@505 T@U) ) (! (let (($generated@@506 ($generated@@377 (type $generated@@505))))
(let (($generated@@507 ($generated@@376 (type $generated@@505))))
 (=> (= (type $generated@@505) ($generated@@375 $generated@@507 $generated@@506)) (= (= $generated@@505 ($generated@@374 $generated@@507 $generated@@506)) (= ($generated@@421 $generated@@505) ($generated@@500 $generated@@506))))))
 :pattern ( ($generated@@421 $generated@@505))
)))
(assert (forall (($generated@@508 T@U) ) (! (let (($generated@@509 ($generated@@377 (type $generated@@508))))
(let (($generated@@510 ($generated@@376 (type $generated@@508))))
 (=> (= (type $generated@@508) ($generated@@375 $generated@@510 $generated@@509)) (= (= $generated@@508 ($generated@@374 $generated@@510 $generated@@509)) (= ($generated@@466 $generated@@508) ($generated@@500 $generated@@136))))))
 :pattern ( ($generated@@466 $generated@@508))
)))
(assert (forall (($generated@@511 T@U) ) (! (let (($generated@@512 ($generated@@359 (type $generated@@511))))
(let (($generated@@513 ($generated@@358 (type $generated@@511))))
 (=> (= (type $generated@@511) ($generated@@357 $generated@@513 $generated@@512)) (or (= $generated@@511 ($generated@@356 $generated@@513 $generated@@512)) (exists (($generated@@514 T@U) ($generated@@515 T@U) ) (!  (and (and (= (type $generated@@514) $generated@@136) (= (type $generated@@515) $generated@@136)) ($generated@@0 ($generated@@84 ($generated@@455 $generated@@511) ($generated@@339 ($generated@@255 $generated@@514 $generated@@515)))))
 :no-pattern (type $generated@@514)
 :no-pattern (type $generated@@515)
 :no-pattern ($generated $generated@@514)
 :no-pattern ($generated@@0 $generated@@514)
 :no-pattern ($generated $generated@@515)
 :no-pattern ($generated@@0 $generated@@515)
))))))
 :pattern ( ($generated@@455 $generated@@511))
)))
(assert (forall (($generated@@516 T@U) ) (! (let (($generated@@517 ($generated@@377 (type $generated@@516))))
(let (($generated@@518 ($generated@@376 (type $generated@@516))))
 (=> (= (type $generated@@516) ($generated@@375 $generated@@518 $generated@@517)) (or (= $generated@@516 ($generated@@374 $generated@@518 $generated@@517)) (exists (($generated@@519 T@U) ($generated@@520 T@U) ) (!  (and (and (= (type $generated@@519) $generated@@136) (= (type $generated@@520) $generated@@136)) ($generated@@0 ($generated@@84 ($generated@@466 $generated@@516) ($generated@@339 ($generated@@255 $generated@@519 $generated@@520)))))
 :no-pattern (type $generated@@519)
 :no-pattern (type $generated@@520)
 :no-pattern ($generated $generated@@519)
 :no-pattern ($generated@@0 $generated@@519)
 :no-pattern ($generated $generated@@520)
 :no-pattern ($generated@@0 $generated@@520)
))))))
 :pattern ( ($generated@@466 $generated@@516))
)))
(assert (forall (($generated@@521 T@U) ) (!  (=> (and (= (type $generated@@521) $generated@@136) ($generated@@171 $generated@@521 $generated@@46)) (and (= ($generated@@339 ($generated@@456 $generated@@2 $generated@@521)) $generated@@521) ($generated@@140 ($generated@@456 $generated@@2 $generated@@521) $generated@@46)))
 :pattern ( ($generated@@171 $generated@@521 $generated@@46))
)))
(assert (forall (($generated@@522 T@U) ) (!  (=> (and (= (type $generated@@522) $generated@@136) ($generated@@171 $generated@@522 $generated@@47)) (and (= ($generated@@339 ($generated@@456 $generated@@3 $generated@@522)) $generated@@522) ($generated@@140 ($generated@@456 $generated@@3 $generated@@522) $generated@@47)))
 :pattern ( ($generated@@171 $generated@@522 $generated@@47))
)))
(assert (forall (($generated@@523 T@U) ) (!  (=> (and (= (type $generated@@523) $generated@@136) ($generated@@171 $generated@@523 $generated@@44)) (and (= ($generated@@339 ($generated@@456 $generated@@4 $generated@@523)) $generated@@523) ($generated@@140 ($generated@@456 $generated@@4 $generated@@523) $generated@@44)))
 :pattern ( ($generated@@171 $generated@@523 $generated@@44))
)))
(assert (= ($generated@@1 $generated@@524) 21))
(assert (forall (($generated@@525 T@U) ) (!  (=> (and (= (type $generated@@525) $generated@@136) ($generated@@171 $generated@@525 $generated@@45)) (and (= ($generated@@339 ($generated@@456 $generated@@524 $generated@@525)) $generated@@525) ($generated@@140 ($generated@@456 $generated@@524 $generated@@525) $generated@@45)))
 :pattern ( ($generated@@171 $generated@@525 $generated@@45))
)))
(assert (forall (($generated@@526 T@U) ($generated@@527 T@U) ) (!  (=> (= (type $generated@@527) $generated@@67) (= ($generated@@171 ($generated@@339 $generated@@526) $generated@@527) ($generated@@140 $generated@@526 $generated@@527)))
 :pattern ( ($generated@@171 ($generated@@339 $generated@@526) $generated@@527))
)))
(assert (forall (($generated@@528 T@U) ) (!  (=> (= (type $generated@@528) $generated@@136) (<= 0 ($generated@@144 $generated@@528)))
 :pattern ( ($generated@@144 $generated@@528))
)))
(assert (forall (($generated@@529 T@U) ) (! (let (($generated@@530 ($generated@@82 (type $generated@@529))))
 (=> (= (type $generated@@529) ($generated@@79 $generated@@530 $generated@@2)) (<= 0 ($generated@@349 $generated@@529))))
 :pattern ( ($generated@@349 $generated@@529))
)))
(assert (forall (($generated@@531 T@U) ) (! (let (($generated@@532 ($generated@@319 (type $generated@@531))))
 (=> (= (type $generated@@531) ($generated@@318 $generated@@532)) (<= 0 ($generated@@317 $generated@@531))))
 :pattern ( ($generated@@317 $generated@@531))
)))
(assert (forall (($generated@@534 T@U) ) (! (= (type ($generated@@533 $generated@@534)) $generated@@67)
 :pattern ( ($generated@@533 $generated@@534))
)))
(assert (forall (($generated@@535 T@U) ($generated@@536 T@U) ) (!  (=> (and (= (type $generated@@535) $generated@@67) (= (type $generated@@536) $generated@@67)) (= ($generated@@533 ($generated@@484 $generated@@535 $generated@@536)) $generated@@535))
 :pattern ( ($generated@@484 $generated@@535 $generated@@536))
)))
(assert (forall (($generated@@538 T@U) ) (! (= (type ($generated@@537 $generated@@538)) $generated@@67)
 :pattern ( ($generated@@537 $generated@@538))
)))
(assert (forall (($generated@@539 T@U) ($generated@@540 T@U) ) (!  (=> (and (= (type $generated@@539) $generated@@67) (= (type $generated@@540) $generated@@67)) (= ($generated@@537 ($generated@@484 $generated@@539 $generated@@540)) $generated@@540))
 :pattern ( ($generated@@484 $generated@@539 $generated@@540))
)))
(assert (forall (($generated@@541 T@U) ($generated@@542 T@U) ) (!  (=> (and (= (type $generated@@541) $generated@@67) (= (type $generated@@542) $generated@@67)) (= ($generated@@75 ($generated@@484 $generated@@541 $generated@@542)) $generated@@58))
 :pattern ( ($generated@@484 $generated@@541 $generated@@542))
)))
(assert (forall (($generated@@544 T@U) ) (! (= (type ($generated@@543 $generated@@544)) $generated@@67)
 :pattern ( ($generated@@543 $generated@@544))
)))
(assert (forall (($generated@@545 T@U) ($generated@@546 T@U) ) (!  (=> (and (= (type $generated@@545) $generated@@67) (= (type $generated@@546) $generated@@67)) (= ($generated@@543 ($generated@@492 $generated@@545 $generated@@546)) $generated@@545))
 :pattern ( ($generated@@492 $generated@@545 $generated@@546))
)))
(assert (forall (($generated@@548 T@U) ) (! (= (type ($generated@@547 $generated@@548)) $generated@@67)
 :pattern ( ($generated@@547 $generated@@548))
)))
(assert (forall (($generated@@549 T@U) ($generated@@550 T@U) ) (!  (=> (and (= (type $generated@@549) $generated@@67) (= (type $generated@@550) $generated@@67)) (= ($generated@@547 ($generated@@492 $generated@@549 $generated@@550)) $generated@@550))
 :pattern ( ($generated@@492 $generated@@549 $generated@@550))
)))
(assert (forall (($generated@@551 T@U) ($generated@@552 T@U) ) (!  (=> (and (= (type $generated@@551) $generated@@67) (= (type $generated@@552) $generated@@67)) (= ($generated@@75 ($generated@@492 $generated@@551 $generated@@552)) $generated@@59))
 :pattern ( ($generated@@492 $generated@@551 $generated@@552))
)))
(assert (forall (($generated@@553 T@U) ($generated@@554 T@U) ) (!  (=> (and (= (type $generated@@553) $generated@@136) (= (type $generated@@554) $generated@@136)) (= ($generated@@299 ($generated@@255 $generated@@553 $generated@@554)) $generated@@61))
 :pattern ( ($generated@@255 $generated@@553 $generated@@554))
)))
(assert (forall (($generated@@556 T@U) ) (! (= (type ($generated@@555 $generated@@556)) $generated@@67)
 :pattern ( ($generated@@555 $generated@@556))
)))
(assert (forall (($generated@@557 T@U) ($generated@@558 T@U) ) (!  (=> (and (= (type $generated@@557) $generated@@67) (= (type $generated@@558) $generated@@67)) (= ($generated@@555 ($generated@@152 $generated@@557 $generated@@558)) $generated@@557))
 :pattern ( ($generated@@152 $generated@@557 $generated@@558))
)))
(assert (forall (($generated@@560 T@U) ) (! (= (type ($generated@@559 $generated@@560)) $generated@@67)
 :pattern ( ($generated@@559 $generated@@560))
)))
(assert (forall (($generated@@561 T@U) ($generated@@562 T@U) ) (!  (=> (and (= (type $generated@@561) $generated@@67) (= (type $generated@@562) $generated@@67)) (= ($generated@@559 ($generated@@152 $generated@@561 $generated@@562)) $generated@@562))
 :pattern ( ($generated@@152 $generated@@561 $generated@@562))
)))
(assert (forall (($generated@@563 T@U) ($generated@@564 T@U) ) (!  (=> (and (= (type $generated@@563) $generated@@136) (= (type $generated@@564) $generated@@136)) (= ($generated@@160 ($generated@@255 $generated@@563 $generated@@564)) $generated@@563))
 :pattern ( ($generated@@255 $generated@@563 $generated@@564))
)))
(assert (forall (($generated@@565 T@U) ($generated@@566 T@U) ) (!  (=> (and (= (type $generated@@565) $generated@@136) (= (type $generated@@566) $generated@@136)) (= ($generated@@161 ($generated@@255 $generated@@565 $generated@@566)) $generated@@566))
 :pattern ( ($generated@@255 $generated@@565 $generated@@566))
)))
(assert (forall (($generated@@568 T@U) ) (! (= (type ($generated@@567 $generated@@568)) $generated@@67)
 :pattern ( ($generated@@567 $generated@@568))
)))
(assert (forall (($generated@@569 T@U) ($generated@@570 T@U) ) (!  (=> (and (= (type $generated@@569) $generated@@67) (= (type $generated@@570) $generated@@67)) (= ($generated@@567 ($generated@@324 $generated@@569 $generated@@570)) $generated@@569))
 :pattern ( ($generated@@324 $generated@@569 $generated@@570))
)))
(assert (forall (($generated@@572 T@U) ) (! (= (type ($generated@@571 $generated@@572)) $generated@@67)
 :pattern ( ($generated@@571 $generated@@572))
)))
(assert (forall (($generated@@573 T@U) ($generated@@574 T@U) ) (!  (=> (and (= (type $generated@@573) $generated@@67) (= (type $generated@@574) $generated@@67)) (= ($generated@@571 ($generated@@324 $generated@@573 $generated@@574)) $generated@@574))
 :pattern ( ($generated@@324 $generated@@573 $generated@@574))
)))
(assert (forall (($generated@@576 T@U) ) (! (= (type ($generated@@575 $generated@@576)) $generated@@67)
 :pattern ( ($generated@@575 $generated@@576))
)))
(assert (forall (($generated@@577 T@U) ($generated@@578 T@U) ) (!  (=> (and (= (type $generated@@577) $generated@@67) (= (type $generated@@578) $generated@@67)) (= ($generated@@575 ($generated@@170 $generated@@577 $generated@@578)) $generated@@577))
 :pattern ( ($generated@@170 $generated@@577 $generated@@578))
)))
(assert (forall (($generated@@580 T@U) ) (! (= (type ($generated@@579 $generated@@580)) $generated@@67)
 :pattern ( ($generated@@579 $generated@@580))
)))
(assert (forall (($generated@@581 T@U) ($generated@@582 T@U) ) (!  (=> (and (= (type $generated@@581) $generated@@67) (= (type $generated@@582) $generated@@67)) (= ($generated@@579 ($generated@@170 $generated@@581 $generated@@582)) $generated@@582))
 :pattern ( ($generated@@170 $generated@@581 $generated@@582))
)))
(assert  (and (forall (($generated@@585 T@U) ) (! (= (type ($generated@@583 $generated@@585)) $generated@@67)
 :pattern ( ($generated@@583 $generated@@585))
)) (forall (($generated@@586 T@U) ($generated@@587 Int) ) (! (let (($generated@@588 ($generated@@319 (type $generated@@586))))
(= (type ($generated@@584 $generated@@586 $generated@@587)) $generated@@588))
 :pattern ( ($generated@@584 $generated@@586 $generated@@587))
))))
(assert (forall (($generated@@589 T@U) ($generated@@590 T@U) ($generated@@591 T@U) ) (!  (=> (and (and (= (type $generated@@589) ($generated@@318 $generated@@136)) (= (type $generated@@590) $generated@@67)) (= (type $generated@@591) ($generated@@79 $generated@@80 $generated@@81))) (= ($generated@@77 $generated@@589 ($generated@@583 $generated@@590) $generated@@591) (forall (($generated@@592 Int) ) (!  (=> (and (<= 0 $generated@@592) (< $generated@@592 ($generated@@317 $generated@@589))) ($generated@@293 ($generated@@584 $generated@@589 $generated@@592) $generated@@590 $generated@@591))
 :pattern ( ($generated@@584 $generated@@589 $generated@@592))
))))
 :pattern ( ($generated@@77 $generated@@589 ($generated@@583 $generated@@590) $generated@@591))
)))
(assert (forall (($generated@@594 Int) ) (! (= ($generated@@593 ($generated@@78 $generated@@594)) $generated@@594)
 :pattern ( ($generated@@78 $generated@@594))
)))
(assert (forall (($generated@@596 T@U) ) (! (= (type ($generated@@595 $generated@@596)) $generated@@67)
 :pattern ( ($generated@@595 $generated@@596))
)))
(assert (forall (($generated@@597 T@U) ) (!  (=> (= (type $generated@@597) $generated@@67) (= ($generated@@595 ($generated@@264 $generated@@597)) $generated@@597))
 :pattern ( ($generated@@264 $generated@@597))
)))
(assert (forall (($generated@@598 T@U) ) (!  (=> (= (type $generated@@598) $generated@@67) (= ($generated@@75 ($generated@@264 $generated@@598)) $generated@@54))
 :pattern ( ($generated@@264 $generated@@598))
)))
(assert (forall (($generated@@600 T@U) ) (! (= (type ($generated@@599 $generated@@600)) $generated@@67)
 :pattern ( ($generated@@599 $generated@@600))
)))
(assert (forall (($generated@@601 T@U) ) (!  (=> (= (type $generated@@601) $generated@@67) (= ($generated@@599 ($generated@@269 $generated@@601)) $generated@@601))
 :pattern ( ($generated@@269 $generated@@601))
)))
(assert (forall (($generated@@602 T@U) ) (!  (=> (= (type $generated@@602) $generated@@67) (= ($generated@@75 ($generated@@269 $generated@@602)) $generated@@55))
 :pattern ( ($generated@@269 $generated@@602))
)))
(assert (forall (($generated@@604 T@U) ) (! (= (type ($generated@@603 $generated@@604)) $generated@@67)
 :pattern ( ($generated@@603 $generated@@604))
)))
(assert (forall (($generated@@605 T@U) ) (!  (=> (= (type $generated@@605) $generated@@67) (= ($generated@@603 ($generated@@183 $generated@@605)) $generated@@605))
 :pattern ( ($generated@@183 $generated@@605))
)))
(assert (forall (($generated@@606 T@U) ) (!  (=> (= (type $generated@@606) $generated@@67) (= ($generated@@75 ($generated@@183 $generated@@606)) $generated@@56))
 :pattern ( ($generated@@183 $generated@@606))
)))
(assert (forall (($generated@@608 T@U) ) (! (= (type ($generated@@607 $generated@@608)) $generated@@67)
 :pattern ( ($generated@@607 $generated@@608))
)))
(assert (forall (($generated@@609 T@U) ) (!  (=> (= (type $generated@@609) $generated@@67) (= ($generated@@607 ($generated@@583 $generated@@609)) $generated@@609))
 :pattern ( ($generated@@583 $generated@@609))
)))
(assert (forall (($generated@@610 T@U) ) (!  (=> (= (type $generated@@610) $generated@@67) (= ($generated@@75 ($generated@@583 $generated@@610)) $generated@@57))
 :pattern ( ($generated@@583 $generated@@610))
)))
(assert (forall (($generated@@611 T@U) ) (! (let (($generated@@612 (type $generated@@611)))
(= ($generated@@456 $generated@@612 ($generated@@339 $generated@@611)) $generated@@611))
 :pattern ( ($generated@@339 $generated@@611))
)))
(assert (forall (($generated@@613 T@U) ($generated@@614 T@U) ($generated@@615 T@U) ) (!  (=> (and (and (= (type $generated@@613) ($generated@@357 $generated@@136 $generated@@136)) (= (type $generated@@614) $generated@@67)) (= (type $generated@@615) $generated@@67)) (= ($generated@@140 $generated@@613 ($generated@@484 $generated@@614 $generated@@615)) (forall (($generated@@616 T@U) ) (!  (=> (and (= (type $generated@@616) $generated@@136) ($generated@@0 ($generated@@84 ($generated@@355 $generated@@613) $generated@@616))) (and ($generated@@171 ($generated@@84 ($generated@@457 $generated@@613) $generated@@616) $generated@@615) ($generated@@171 $generated@@616 $generated@@614)))
 :pattern ( ($generated@@84 ($generated@@457 $generated@@613) $generated@@616))
 :pattern ( ($generated@@84 ($generated@@355 $generated@@613) $generated@@616))
))))
 :pattern ( ($generated@@140 $generated@@613 ($generated@@484 $generated@@614 $generated@@615)))
)))
(assert (forall (($generated@@617 T@U) ($generated@@618 T@U) ($generated@@619 T@U) ) (!  (=> (and (and (= (type $generated@@617) ($generated@@375 $generated@@136 $generated@@136)) (= (type $generated@@618) $generated@@67)) (= (type $generated@@619) $generated@@67)) (= ($generated@@140 $generated@@617 ($generated@@492 $generated@@618 $generated@@619)) (forall (($generated@@620 T@U) ) (!  (=> (and (= (type $generated@@620) $generated@@136) ($generated@@0 ($generated@@84 ($generated@@373 $generated@@617) $generated@@620))) (and ($generated@@171 ($generated@@84 ($generated@@467 $generated@@617) $generated@@620) $generated@@619) ($generated@@171 $generated@@620 $generated@@618)))
 :pattern ( ($generated@@84 ($generated@@467 $generated@@617) $generated@@620))
 :pattern ( ($generated@@84 ($generated@@373 $generated@@617) $generated@@620))
))))
 :pattern ( ($generated@@140 $generated@@617 ($generated@@492 $generated@@618 $generated@@619)))
)))
(assert (forall (($generated@@621 T@U) ($generated@@622 T@U) ) (!  (=> (and (= (type $generated@@621) $generated@@136) (= (type $generated@@622) $generated@@136)) (and (and (and (=> ($generated@@135 $generated@@621 $generated@@622) (not (= $generated@@621 $generated@@622))) (=> (and ($generated@@395 $generated@@621) (not ($generated@@395 $generated@@622))) ($generated@@135 $generated@@621 $generated@@622))) (=> (and ($generated@@395 $generated@@621) ($generated@@395 $generated@@622)) (= ($generated@@135 $generated@@621 $generated@@622) (< ($generated@@144 $generated@@621) ($generated@@144 $generated@@622))))) (=> (and ($generated@@135 $generated@@621 $generated@@622) ($generated@@395 $generated@@622)) ($generated@@395 $generated@@621))))
 :pattern ( ($generated@@135 $generated@@621 $generated@@622))
)))
(assert (forall (($generated@@625 T@U) ($generated@@626 T@U) ) (!  (=> (and (= (type $generated@@625) $generated@@136) (= (type $generated@@626) $generated@@136)) (< ($generated@@623 $generated@@625) ($generated@@624 ($generated@@255 $generated@@625 $generated@@626))))
 :pattern ( ($generated@@255 $generated@@625 $generated@@626))
)))
(assert (forall (($generated@@627 T@U) ($generated@@628 T@U) ) (!  (=> (and (= (type $generated@@627) $generated@@136) (= (type $generated@@628) $generated@@136)) (< ($generated@@623 $generated@@628) ($generated@@624 ($generated@@255 $generated@@627 $generated@@628))))
 :pattern ( ($generated@@255 $generated@@627 $generated@@628))
)))
(assert (forall (($generated@@629 T@U) ($generated@@630 T@U) ($generated@@631 T@U) ) (!  (=> (and (and (and (= (type $generated@@629) $generated@@136) (= (type $generated@@630) $generated@@67)) (= (type $generated@@631) $generated@@67)) ($generated@@171 $generated@@629 ($generated@@484 $generated@@630 $generated@@631))) (and (= ($generated@@339 ($generated@@456 ($generated@@357 $generated@@136 $generated@@136) $generated@@629)) $generated@@629) ($generated@@140 ($generated@@456 ($generated@@357 $generated@@136 $generated@@136) $generated@@629) ($generated@@484 $generated@@630 $generated@@631))))
 :pattern ( ($generated@@171 $generated@@629 ($generated@@484 $generated@@630 $generated@@631)))
)))
(assert (forall (($generated@@632 T@U) ($generated@@633 T@U) ($generated@@634 T@U) ) (!  (=> (and (and (and (= (type $generated@@632) $generated@@136) (= (type $generated@@633) $generated@@67)) (= (type $generated@@634) $generated@@67)) ($generated@@171 $generated@@632 ($generated@@492 $generated@@633 $generated@@634))) (and (= ($generated@@339 ($generated@@456 ($generated@@375 $generated@@136 $generated@@136) $generated@@632)) $generated@@632) ($generated@@140 ($generated@@456 ($generated@@375 $generated@@136 $generated@@136) $generated@@632) ($generated@@492 $generated@@633 $generated@@634))))
 :pattern ( ($generated@@171 $generated@@632 ($generated@@492 $generated@@633 $generated@@634)))
)))
(assert (forall (($generated@@635 T@U) ($generated@@636 T@U) ($generated@@637 T@U) ) (!  (=> (and (and (and (= (type $generated@@635) $generated@@67) (= (type $generated@@636) $generated@@67)) (= (type $generated@@637) $generated@@136)) ($generated@@171 $generated@@637 ($generated@@152 $generated@@635 $generated@@636))) (and (= ($generated@@339 ($generated@@456 $generated@@153 $generated@@637)) $generated@@637) ($generated@@140 ($generated@@456 $generated@@153 $generated@@637) ($generated@@152 $generated@@635 $generated@@636))))
 :pattern ( ($generated@@171 $generated@@637 ($generated@@152 $generated@@635 $generated@@636)))
)))
(assert (forall (($generated@@638 T@U) ($generated@@639 T@U) ($generated@@640 T@U) ) (!  (=> (and (and (and (= (type $generated@@638) $generated@@67) (= (type $generated@@639) $generated@@67)) (= (type $generated@@640) $generated@@136)) ($generated@@171 $generated@@640 ($generated@@324 $generated@@638 $generated@@639))) (and (= ($generated@@339 ($generated@@456 $generated@@80 $generated@@640)) $generated@@640) ($generated@@140 ($generated@@456 $generated@@80 $generated@@640) ($generated@@324 $generated@@638 $generated@@639))))
 :pattern ( ($generated@@171 $generated@@640 ($generated@@324 $generated@@638 $generated@@639)))
)))
(assert (forall (($generated@@641 T@U) ($generated@@642 T@U) ($generated@@643 T@U) ) (!  (=> (and (and (and (= (type $generated@@641) $generated@@67) (= (type $generated@@642) $generated@@67)) (= (type $generated@@643) $generated@@136)) ($generated@@171 $generated@@643 ($generated@@170 $generated@@641 $generated@@642))) (and (= ($generated@@339 ($generated@@456 $generated@@80 $generated@@643)) $generated@@643) ($generated@@140 ($generated@@456 $generated@@80 $generated@@643) ($generated@@170 $generated@@641 $generated@@642))))
 :pattern ( ($generated@@171 $generated@@643 ($generated@@170 $generated@@641 $generated@@642)))
)))
(assert (forall (($generated@@644 T@U) ) (! (let (($generated@@645 (type $generated@@644)))
 (not ($generated@@0 ($generated@@84 ($generated@@500 $generated@@645) $generated@@644))))
 :pattern ( (let (($generated@@645 (type $generated@@644)))
($generated@@84 ($generated@@500 $generated@@645) $generated@@644)))
)))
(assert (forall (($generated@@647 T@U) ) (! (= (type ($generated@@646 $generated@@647)) $generated@@72)
 :pattern ( ($generated@@646 $generated@@647))
)))
(assert (forall (($generated@@648 T@U) ($generated@@649 T@U) ) (!  (=> (and (= (type $generated@@648) $generated@@67) (= (type $generated@@649) $generated@@67)) (and (= ($generated@@75 ($generated@@152 $generated@@648 $generated@@649)) $generated@@62) (= ($generated@@646 ($generated@@152 $generated@@648 $generated@@649)) $generated@@65)))
 :pattern ( ($generated@@152 $generated@@648 $generated@@649))
)))
(assert (forall (($generated@@650 T@U) ($generated@@651 T@U) ) (!  (=> (and (= (type $generated@@650) $generated@@67) (= (type $generated@@651) $generated@@67)) (and (= ($generated@@75 ($generated@@324 $generated@@650 $generated@@651)) $generated@@63) (= ($generated@@646 ($generated@@324 $generated@@650 $generated@@651)) $generated@@66)))
 :pattern ( ($generated@@324 $generated@@650 $generated@@651))
)))
(assert (forall (($generated@@652 T@U) ($generated@@653 T@U) ) (!  (=> (and (= (type $generated@@652) $generated@@67) (= (type $generated@@653) $generated@@67)) (and (= ($generated@@75 ($generated@@170 $generated@@652 $generated@@653)) $generated@@64) (= ($generated@@646 ($generated@@170 $generated@@652 $generated@@653)) $generated@@66)))
 :pattern ( ($generated@@170 $generated@@652 $generated@@653))
)))
(assert (forall (($generated@@654 T@U) ) (!  (=> (= (type $generated@@654) $generated@@153) (= ($generated@@623 ($generated@@339 $generated@@654)) ($generated@@624 $generated@@654)))
 :pattern ( ($generated@@623 ($generated@@339 $generated@@654)))
)))
(assert (forall (($generated@@655 T@U) ) (!  (=> (and (= (type $generated@@655) $generated@@136) ($generated@@171 $generated@@655 ($generated@@78 0))) (and (= ($generated@@339 ($generated@@456 $generated@@2 $generated@@655)) $generated@@655) ($generated@@140 ($generated@@456 ($generated@@79 $generated@@136 $generated@@4) $generated@@655) ($generated@@78 0))))
 :pattern ( ($generated@@171 $generated@@655 ($generated@@78 0)))
)))
(assert (forall (($generated@@656 T@U) ($generated@@657 T@U) ) (!  (=> (and (and (= (type $generated@@656) $generated@@136) (= (type $generated@@657) $generated@@67)) ($generated@@171 $generated@@656 ($generated@@264 $generated@@657))) (and (= ($generated@@339 ($generated@@456 ($generated@@79 $generated@@136 $generated@@4) $generated@@656)) $generated@@656) ($generated@@140 ($generated@@456 ($generated@@79 $generated@@136 $generated@@4) $generated@@656) ($generated@@264 $generated@@657))))
 :pattern ( ($generated@@171 $generated@@656 ($generated@@264 $generated@@657)))
)))
(assert (forall (($generated@@658 T@U) ($generated@@659 T@U) ) (!  (=> (and (and (= (type $generated@@658) $generated@@136) (= (type $generated@@659) $generated@@67)) ($generated@@171 $generated@@658 ($generated@@269 $generated@@659))) (and (= ($generated@@339 ($generated@@456 ($generated@@79 $generated@@136 $generated@@4) $generated@@658)) $generated@@658) ($generated@@140 ($generated@@456 ($generated@@79 $generated@@136 $generated@@4) $generated@@658) ($generated@@269 $generated@@659))))
 :pattern ( ($generated@@171 $generated@@658 ($generated@@269 $generated@@659)))
)))
(assert (forall (($generated@@660 T@U) ($generated@@661 T@U) ) (!  (=> (and (and (= (type $generated@@660) $generated@@136) (= (type $generated@@661) $generated@@67)) ($generated@@171 $generated@@660 ($generated@@183 $generated@@661))) (and (= ($generated@@339 ($generated@@456 ($generated@@79 $generated@@136 $generated@@2) $generated@@660)) $generated@@660) ($generated@@140 ($generated@@456 ($generated@@79 $generated@@136 $generated@@2) $generated@@660) ($generated@@183 $generated@@661))))
 :pattern ( ($generated@@171 $generated@@660 ($generated@@183 $generated@@661)))
)))
(assert (forall (($generated@@662 T@U) ($generated@@663 T@U) ) (!  (=> (and (and (= (type $generated@@662) $generated@@136) (= (type $generated@@663) $generated@@67)) ($generated@@171 $generated@@662 ($generated@@583 $generated@@663))) (and (= ($generated@@339 ($generated@@456 ($generated@@318 $generated@@136) $generated@@662)) $generated@@662) ($generated@@140 ($generated@@456 ($generated@@318 $generated@@136) $generated@@662) ($generated@@583 $generated@@663))))
 :pattern ( ($generated@@171 $generated@@662 ($generated@@583 $generated@@663)))
)))
(assert (forall (($generated@@664 T@U) ) (!  (=> (and (= (type $generated@@664) $generated@@136) ($generated@@395 $generated@@664)) (= $generated@@664 ($generated@@143 ($generated@@144 $generated@@664))))
 :pattern ( ($generated@@144 $generated@@664))
 :pattern ( ($generated@@395 $generated@@664))
)))
(assert (forall (($generated@@665 T@U) ($generated@@666 T@U) ($generated@@667 T@U) ) (!  (=> (and (and (= (type $generated@@665) ($generated@@79 $generated@@136 $generated@@2)) (= (type $generated@@666) $generated@@67)) (= (type $generated@@667) ($generated@@79 $generated@@80 $generated@@81))) (= ($generated@@77 $generated@@665 ($generated@@183 $generated@@666) $generated@@667) (forall (($generated@@668 T@U) ) (!  (=> (and (= (type $generated@@668) $generated@@136) (< 0 ($generated ($generated@@84 $generated@@665 $generated@@668)))) ($generated@@293 $generated@@668 $generated@@666 $generated@@667))
 :pattern ( ($generated@@84 $generated@@665 $generated@@668))
))))
 :pattern ( ($generated@@77 $generated@@665 ($generated@@183 $generated@@666) $generated@@667))
)))
(assert (forall (($generated@@669 T@U) ($generated@@670 T@U) ) (!  (=> (and (and (= (type $generated@@669) $generated@@136) (= (type $generated@@670) $generated@@136)) (and ($generated@@395 $generated@@670) (<= ($generated@@144 $generated@@670) ($generated@@144 $generated@@669)))) (or (and (= $generated@@670 ($generated@@143 0)) (= ($generated@@142 $generated@@669 $generated@@670) $generated@@669)) (and (not (= $generated@@670 ($generated@@143 0))) ($generated@@135 ($generated@@142 $generated@@669 $generated@@670) $generated@@669))))
 :pattern ( ($generated@@142 $generated@@669 $generated@@670))
)))
(assert  (=> (<= 1 $generated@@166) (forall (($generated@@671 T@U) ($generated@@672 T@U) ($generated@@673 T@U) ($generated@@674 T@U) ($generated@@675 T@U) ($generated@@676 T@U) ($generated@@677 T@U) ($generated@@678 T@U) ($generated@@679 T@U) ) (!  (=> (and (and (and (and (and (and (and (and (and (= (type $generated@@671) $generated@@67) (= (type $generated@@672) $generated@@67)) (= (type $generated@@673) $generated@@67)) (= (type $generated@@674) $generated@@67)) (= (type $generated@@675) $generated@@168)) (= (type $generated@@676) $generated@@80)) (= (type $generated@@677) $generated@@136)) (= (type $generated@@678) $generated@@136)) (= (type $generated@@679) $generated@@136)) (or ($generated@@280 $generated@@671 $generated@@672 $generated@@673 $generated@@674 $generated@@676 $generated@@677 $generated@@678 $generated@@679) (and (not (= 1 $generated@@166)) (and (and (and (not (= $generated@@676 $generated@@169)) ($generated@@140 $generated@@676 ($generated@@170 $generated@@671 $generated@@672))) ($generated@@171 $generated@@678 $generated@@673)) ($generated@@171 $generated@@679 $generated@@674))))) (and (and (=> (< 0 ($generated@@144 $generated@@677)) ($generated@@280 $generated@@671 $generated@@672 $generated@@673 $generated@@674 $generated@@676 ($generated@@142 $generated@@677 ($generated@@143 1)) $generated@@678 $generated@@679)) (=> (=> (< 0 ($generated@@144 $generated@@677)) ($generated@@167 $generated@@671 $generated@@672 $generated@@673 $generated@@674 $generated@@675 $generated@@676 ($generated@@142 $generated@@677 ($generated@@143 1)) $generated@@678 $generated@@679)) (=> (= ($generated@@274 0) ($generated@@144 $generated@@677)) (forall (($generated@@680 T@U) ) (!  (=> (and (= (type $generated@@680) $generated@@136) ($generated@@135 $generated@@680 $generated@@677)) ($generated@@280 $generated@@671 $generated@@672 $generated@@673 $generated@@674 $generated@@676 $generated@@680 $generated@@678 $generated@@679))
 :pattern ( ($generated@@167 $generated@@671 $generated@@672 $generated@@673 $generated@@674 $generated@@675 $generated@@676 $generated@@680 $generated@@678 $generated@@679))
))))) (= ($generated@@167 $generated@@671 $generated@@672 $generated@@673 $generated@@674 ($generated@@188 $generated@@675) $generated@@676 $generated@@677 $generated@@678 $generated@@679)  (and (=> (< 0 ($generated@@144 $generated@@677)) ($generated@@167 $generated@@671 $generated@@672 $generated@@673 $generated@@674 $generated@@675 $generated@@676 ($generated@@142 $generated@@677 ($generated@@143 1)) $generated@@678 $generated@@679)) (=> (= ($generated@@274 0) ($generated@@144 $generated@@677)) (forall (($generated@@681 T@U) ) (!  (=> (and (= (type $generated@@681) $generated@@136) ($generated@@135 $generated@@681 $generated@@677)) ($generated@@167 $generated@@671 $generated@@672 $generated@@673 $generated@@674 $generated@@675 $generated@@676 $generated@@681 $generated@@678 $generated@@679))
 :pattern ( ($generated@@167 $generated@@671 $generated@@672 $generated@@673 $generated@@674 $generated@@675 $generated@@676 $generated@@681 $generated@@678 $generated@@679))
)))))))
 :pattern ( ($generated@@167 $generated@@671 $generated@@672 $generated@@673 $generated@@674 ($generated@@188 $generated@@675) $generated@@676 $generated@@677 $generated@@678 $generated@@679))
))))
(assert (forall (($generated@@682 T@U) ($generated@@683 T@U) ($generated@@684 T@U) ) (!  (=> (and (and (and (= (type $generated@@682) $generated@@153) (= (type $generated@@683) $generated@@67)) (= (type $generated@@684) ($generated@@79 $generated@@80 $generated@@81))) (and ($generated@@292 $generated@@684) (and ($generated@@151 $generated@@682) (exists (($generated@@685 T@U) ) (!  (and (= (type $generated@@685) $generated@@67) ($generated@@77 $generated@@682 ($generated@@152 $generated@@683 $generated@@685) $generated@@684))
 :pattern ( ($generated@@77 $generated@@682 ($generated@@152 $generated@@683 $generated@@685) $generated@@684))
))))) ($generated@@293 ($generated@@160 $generated@@682) $generated@@683 $generated@@684))
 :pattern ( ($generated@@293 ($generated@@160 $generated@@682) $generated@@683 $generated@@684))
)))
(assert (forall (($generated@@686 T@U) ($generated@@687 T@U) ($generated@@688 T@U) ) (!  (=> (and (and (and (= (type $generated@@686) $generated@@153) (= (type $generated@@687) $generated@@67)) (= (type $generated@@688) ($generated@@79 $generated@@80 $generated@@81))) (and ($generated@@292 $generated@@688) (and ($generated@@151 $generated@@686) (exists (($generated@@689 T@U) ) (!  (and (= (type $generated@@689) $generated@@67) ($generated@@77 $generated@@686 ($generated@@152 $generated@@689 $generated@@687) $generated@@688))
 :pattern ( ($generated@@77 $generated@@686 ($generated@@152 $generated@@689 $generated@@687) $generated@@688))
))))) ($generated@@293 ($generated@@161 $generated@@686) $generated@@687 $generated@@688))
 :pattern ( ($generated@@293 ($generated@@161 $generated@@686) $generated@@687 $generated@@688))
)))
(assert (forall (($generated@@690 T@U) ($generated@@691 T@U) ) (!  (=> (and (= (type $generated@@690) $generated@@136) (= (type $generated@@691) $generated@@136)) (= ($generated@@255 ($generated@@276 $generated@@690) ($generated@@276 $generated@@691)) ($generated@@276 ($generated@@255 $generated@@690 $generated@@691))))
 :pattern ( ($generated@@255 ($generated@@276 $generated@@690) ($generated@@276 $generated@@691)))
)))
(assert (forall (($generated@@692 Int) ) (! (= ($generated@@339 ($generated@@8 ($generated@@274 $generated@@692))) ($generated@@276 ($generated@@339 ($generated@@8 $generated@@692))))
 :pattern ( ($generated@@339 ($generated@@8 ($generated@@274 $generated@@692))))
)))
(assert (forall (($generated@@693 T@U) ) (! (= ($generated@@339 ($generated@@276 $generated@@693)) ($generated@@276 ($generated@@339 $generated@@693)))
 :pattern ( ($generated@@339 ($generated@@276 $generated@@693)))
)))
(assert (forall (($generated@@694 T@U) ) (! (let (($generated@@695 ($generated@@319 (type $generated@@694))))
 (=> (and (= (type $generated@@694) ($generated@@318 $generated@@695)) (= ($generated@@317 $generated@@694) 0)) (= $generated@@694 ($generated@@316 $generated@@695))))
 :pattern ( ($generated@@317 $generated@@694))
)))
(assert (forall (($generated@@696 T@U) ($generated@@697 T@U) ($generated@@698 T@U) ) (! (let (($generated@@699 (type $generated@@697)))
 (=> (and (and (= (type $generated@@696) ($generated@@79 $generated@@699 $generated@@2)) (= (type $generated@@698) $generated@@2)) (<= 0 ($generated $generated@@698))) (= ($generated@@349 ($generated@@85 $generated@@696 $generated@@697 $generated@@698)) (+ (- ($generated@@349 $generated@@696) ($generated ($generated@@84 $generated@@696 $generated@@697))) ($generated $generated@@698)))))
 :pattern ( ($generated@@349 ($generated@@85 $generated@@696 $generated@@697 $generated@@698)))
)))
(assert (forall (($generated@@700 T@U) ($generated@@701 T@U) ) (!  (=> (and (= (type $generated@@700) ($generated@@79 $generated@@80 $generated@@81)) (= (type $generated@@701) $generated@@2)) ($generated@@77 $generated@@701 $generated@@46 $generated@@700))
 :pattern ( ($generated@@77 $generated@@701 $generated@@46 $generated@@700))
)))
(assert (forall (($generated@@702 T@U) ($generated@@703 T@U) ) (!  (=> (and (= (type $generated@@702) ($generated@@79 $generated@@80 $generated@@81)) (= (type $generated@@703) $generated@@3)) ($generated@@77 $generated@@703 $generated@@47 $generated@@702))
 :pattern ( ($generated@@77 $generated@@703 $generated@@47 $generated@@702))
)))
(assert (forall (($generated@@704 T@U) ($generated@@705 T@U) ) (!  (=> (and (= (type $generated@@704) ($generated@@79 $generated@@80 $generated@@81)) (= (type $generated@@705) $generated@@4)) ($generated@@77 $generated@@705 $generated@@44 $generated@@704))
 :pattern ( ($generated@@77 $generated@@705 $generated@@44 $generated@@704))
)))
(assert (forall (($generated@@706 T@U) ($generated@@707 T@U) ) (!  (=> (and (= (type $generated@@706) ($generated@@79 $generated@@80 $generated@@81)) (= (type $generated@@707) $generated@@524)) ($generated@@77 $generated@@707 $generated@@45 $generated@@706))
 :pattern ( ($generated@@77 $generated@@707 $generated@@45 $generated@@706))
)))
(assert (forall (($generated@@708 T@U) ($generated@@709 T@U) ) (!  (=> (and (= (type $generated@@708) ($generated@@79 $generated@@80 $generated@@81)) (= (type $generated@@709) $generated@@136)) ($generated@@77 $generated@@709 $generated@@48 $generated@@708))
 :pattern ( ($generated@@77 $generated@@709 $generated@@48 $generated@@708))
)))
(assert (forall (($generated@@710 T@U) ($generated@@711 T@U) ) (!  (=> (and (= (type $generated@@710) ($generated@@318 $generated@@136)) (= (type $generated@@711) $generated@@67)) (= ($generated@@140 $generated@@710 ($generated@@583 $generated@@711)) (forall (($generated@@712 Int) ) (!  (=> (and (<= 0 $generated@@712) (< $generated@@712 ($generated@@317 $generated@@710))) ($generated@@171 ($generated@@584 $generated@@710 $generated@@712) $generated@@711))
 :pattern ( ($generated@@584 $generated@@710 $generated@@712))
))))
 :pattern ( ($generated@@140 $generated@@710 ($generated@@583 $generated@@711)))
)))
(assert (forall (($generated@@714 T@U) ($generated@@715 Int) ) (!  (=> (= (type $generated@@714) ($generated@@318 $generated@@136)) (=> (and (<= 0 $generated@@715) (< $generated@@715 ($generated@@317 $generated@@714))) (< ($generated@@624 ($generated@@456 $generated@@153 ($generated@@584 $generated@@714 $generated@@715))) ($generated@@713 $generated@@714))))
 :pattern ( ($generated@@624 ($generated@@456 $generated@@153 ($generated@@584 $generated@@714 $generated@@715))))
)))
(assert (forall (($generated@@716 T@U) ($generated@@717 T@U) ($generated@@718 T@U) ) (!  (=> (and (and (and (= (type $generated@@716) ($generated@@357 $generated@@136 $generated@@136)) (= (type $generated@@717) $generated@@67)) (= (type $generated@@718) $generated@@67)) ($generated@@140 $generated@@716 ($generated@@484 $generated@@717 $generated@@718))) (and (and ($generated@@140 ($generated@@355 $generated@@716) ($generated@@264 $generated@@717)) ($generated@@140 ($generated@@410 $generated@@716) ($generated@@264 $generated@@718))) ($generated@@140 ($generated@@455 $generated@@716) ($generated@@264 ($generated@@152 $generated@@717 $generated@@718)))))
 :pattern ( ($generated@@140 $generated@@716 ($generated@@484 $generated@@717 $generated@@718)))
)))
(assert (forall (($generated@@719 T@U) ($generated@@720 T@U) ($generated@@721 T@U) ) (!  (=> (and (and (and (= (type $generated@@719) ($generated@@375 $generated@@136 $generated@@136)) (= (type $generated@@720) $generated@@67)) (= (type $generated@@721) $generated@@67)) ($generated@@140 $generated@@719 ($generated@@492 $generated@@720 $generated@@721))) (and (and ($generated@@140 ($generated@@373 $generated@@719) ($generated@@269 $generated@@720)) ($generated@@140 ($generated@@421 $generated@@719) ($generated@@269 $generated@@721))) ($generated@@140 ($generated@@466 $generated@@719) ($generated@@269 ($generated@@152 $generated@@720 $generated@@721)))))
 :pattern ( ($generated@@140 $generated@@719 ($generated@@492 $generated@@720 $generated@@721)))
)))
(assert (forall (($generated@@722 T@U) ) (!  (=> (= (type $generated@@722) $generated@@2) ($generated@@140 $generated@@722 $generated@@46))
 :pattern ( ($generated@@140 $generated@@722 $generated@@46))
)))
(assert (forall (($generated@@723 T@U) ) (!  (=> (= (type $generated@@723) $generated@@3) ($generated@@140 $generated@@723 $generated@@47))
 :pattern ( ($generated@@140 $generated@@723 $generated@@47))
)))
(assert (forall (($generated@@724 T@U) ) (!  (=> (= (type $generated@@724) $generated@@4) ($generated@@140 $generated@@724 $generated@@44))
 :pattern ( ($generated@@140 $generated@@724 $generated@@44))
)))
(assert (forall (($generated@@725 T@U) ) (!  (=> (= (type $generated@@725) $generated@@524) ($generated@@140 $generated@@725 $generated@@45))
 :pattern ( ($generated@@140 $generated@@725 $generated@@45))
)))
(assert (forall (($generated@@726 T@U) ) (!  (=> (= (type $generated@@726) $generated@@136) ($generated@@140 $generated@@726 $generated@@48))
 :pattern ( ($generated@@140 $generated@@726 $generated@@48))
)))
(push 1)
(declare-fun ControlFlow (Int Int) Int)
(declare-fun $generated@@727 () T@U)
(declare-fun $generated@@728 () T@U)
(declare-fun $generated@@729 () T@U)
(declare-fun $generated@@730 () T@U)
(declare-fun $generated@@731 () T@U)
(declare-fun $generated@@732 () T@U)
(declare-fun $generated@@733 () T@U)
(declare-fun $generated@@734 () T@U)
(declare-fun $generated@@735 () T@U)
(declare-fun $generated@@736 (T@U) Bool)
(declare-fun $generated@@737 () T@U)
(declare-fun $generated@@738 () T@U)
(declare-fun $generated@@739 () T@U)
(declare-fun $generated@@740 () T@U)
(declare-fun $generated@@741 () T@U)
(assert  (and (and (and (and (and (and (and (and (and (and (and (and (and (= (type $generated@@727) $generated@@67) (= (type $generated@@728) $generated@@67)) (= (type $generated@@729) $generated@@67)) (= (type $generated@@730) $generated@@67)) (= (type $generated@@731) $generated@@80)) (= (type $generated@@732) $generated@@136)) (= (type $generated@@733) $generated@@136)) (= (type $generated@@734) $generated@@136)) (= (type $generated@@738) $generated@@136)) (= (type $generated@@739) ($generated@@79 $generated@@80 $generated@@81))) (= (type $generated@@737) ($generated@@79 $generated@@80 $generated@@81))) (= (type $generated@@735) ($generated@@79 $generated@@80 $generated@@81))) (= (type $generated@@740) ($generated@@201 $generated@@80 $generated@@4))) (= (type $generated@@741) ($generated@@79 $generated@@80 $generated@@81))))
(set-option :timeout 0)
(set-option :rlimit 0)
(assert (not
 (=> (= (ControlFlow 0 0) 9) (let (($generated@@742  (and (=> (= (ControlFlow 0 2) (- 0 3)) (=> ($generated@@280 $generated@@727 $generated@@728 $generated@@729 $generated@@730 $generated@@731 $generated@@732 $generated@@733 $generated@@734) (or ($generated@@167 $generated@@727 $generated@@728 $generated@@729 $generated@@730 ($generated@@188 $generated@@432) $generated@@731 $generated@@732 $generated@@733 $generated@@734) (=> (< 0 ($generated@@144 $generated@@732)) ($generated@@167 $generated@@727 $generated@@728 $generated@@729 $generated@@730 ($generated@@188 ($generated@@188 $generated@@432)) $generated@@731 ($generated@@142 $generated@@732 ($generated@@143 1)) $generated@@733 $generated@@734))))) (=> (=> ($generated@@280 $generated@@727 $generated@@728 $generated@@729 $generated@@730 $generated@@731 $generated@@732 $generated@@733 $generated@@734) (or ($generated@@167 $generated@@727 $generated@@728 $generated@@729 $generated@@730 ($generated@@188 $generated@@432) $generated@@731 $generated@@732 $generated@@733 $generated@@734) (=> (< 0 ($generated@@144 $generated@@732)) ($generated@@167 $generated@@727 $generated@@728 $generated@@729 $generated@@730 ($generated@@188 ($generated@@188 $generated@@432)) $generated@@731 ($generated@@142 $generated@@732 ($generated@@143 1)) $generated@@733 $generated@@734)))) (=> (= (ControlFlow 0 2) (- 0 1)) (=> ($generated@@280 $generated@@727 $generated@@728 $generated@@729 $generated@@730 $generated@@731 $generated@@732 $generated@@733 $generated@@734) (or ($generated@@167 $generated@@727 $generated@@728 $generated@@729 $generated@@730 ($generated@@188 $generated@@432) $generated@@731 $generated@@732 $generated@@733 $generated@@734) (=> (= ($generated@@274 0) ($generated@@144 $generated@@732)) (forall (($generated@@743 T@U) ) (!  (=> (and (= (type $generated@@743) $generated@@136) ($generated@@135 $generated@@743 $generated@@732)) ($generated@@167 $generated@@727 $generated@@728 $generated@@729 $generated@@730 ($generated@@188 ($generated@@188 $generated@@432)) $generated@@731 $generated@@743 $generated@@733 $generated@@734))
 :pattern ( ($generated@@167 $generated@@727 $generated@@728 $generated@@729 $generated@@730 ($generated@@188 ($generated@@188 $generated@@432)) $generated@@731 $generated@@743 $generated@@733 $generated@@734))
))))))))))
(let (($generated@@744  (=> (<= ($generated@@144 $generated@@732) 0) (=> (and (and (and ($generated@@292 $generated@@735) ($generated@@736 $generated@@735)) (= $generated@@737 $generated@@735)) (and (forall (($generated@@745 T@U) ($generated@@746 T@U) ($generated@@747 T@U) ) (!  (=> (and (and (and (= (type $generated@@745) $generated@@136) (= (type $generated@@746) $generated@@136)) (= (type $generated@@747) $generated@@136)) (and (and ($generated@@171 $generated@@746 $generated@@729) ($generated@@171 $generated@@747 $generated@@730)) ($generated@@135 $generated@@745 $generated@@732))) ($generated@@167 $generated@@727 $generated@@728 $generated@@729 $generated@@730 ($generated@@188 $generated@@432) $generated@@731 $generated@@745 $generated@@746 $generated@@747))
 :no-pattern (type $generated@@745)
 :no-pattern (type $generated@@746)
 :no-pattern (type $generated@@747)
 :no-pattern ($generated $generated@@745)
 :no-pattern ($generated@@0 $generated@@745)
 :no-pattern ($generated $generated@@746)
 :no-pattern ($generated@@0 $generated@@746)
 :no-pattern ($generated $generated@@747)
 :no-pattern ($generated@@0 $generated@@747)
)) (= (ControlFlow 0 7) 2))) $generated@@742))))
(let (($generated@@748  (=> (< 0 ($generated@@144 $generated@@732)) (and (=> (= (ControlFlow 0 4) (- 0 6)) ($generated@@395 ($generated@@276 ($generated@@143 1)))) (=> ($generated@@395 ($generated@@276 ($generated@@143 1))) (and (=> (= (ControlFlow 0 4) (- 0 5)) (<= ($generated@@144 ($generated@@276 ($generated@@143 1))) ($generated@@144 $generated@@732))) (=> (<= ($generated@@144 ($generated@@276 ($generated@@143 1))) ($generated@@144 $generated@@732)) (=> (= $generated@@738 ($generated@@142 $generated@@732 ($generated@@143 1))) (=> (and (and (and ($generated@@292 $generated@@739) ($generated@@736 $generated@@739)) ($generated@@280 $generated@@727 $generated@@728 $generated@@729 $generated@@730 $generated@@731 $generated@@738 $generated@@733 $generated@@734)) (and (and ($generated@@280 $generated@@727 $generated@@728 $generated@@729 $generated@@730 $generated@@731 $generated@@738 $generated@@733 $generated@@734) (and ($generated@@167 $generated@@727 $generated@@728 $generated@@729 $generated@@730 ($generated@@188 $generated@@432) $generated@@731 $generated@@738 $generated@@733 $generated@@734) (and (=> (< 0 ($generated@@144 $generated@@738)) ($generated@@167 $generated@@727 $generated@@728 $generated@@729 $generated@@730 ($generated@@188 $generated@@432) $generated@@731 ($generated@@142 $generated@@738 ($generated@@143 1)) $generated@@733 $generated@@734)) (=> (= ($generated@@274 0) ($generated@@144 $generated@@738)) (forall (($generated@@749 T@U) ) (!  (=> (and (= (type $generated@@749) $generated@@136) ($generated@@135 $generated@@749 $generated@@738)) ($generated@@167 $generated@@727 $generated@@728 $generated@@729 $generated@@730 ($generated@@188 $generated@@432) $generated@@731 $generated@@749 $generated@@733 $generated@@734))
 :pattern ( ($generated@@167 $generated@@727 $generated@@728 $generated@@729 $generated@@730 ($generated@@188 $generated@@432) $generated@@731 $generated@@749 $generated@@733 $generated@@734))
)))))) (and (= $generated@@737 $generated@@739) (= (ControlFlow 0 4) 2)))) $generated@@742)))))))))
(let (($generated@@750  (=> (= $generated@@740 ($generated@@200 $generated@@169 $generated@@741 $generated@@60 false)) (=> (and (and ($generated@@292 $generated@@737) ($generated@@736 $generated@@737)) (and (= $generated@@741 $generated@@737) (forall (($generated@@751 T@U) ($generated@@752 T@U) ) (!  (=> (and (= (type $generated@@751) $generated@@80) (= (type $generated@@752) $generated@@136)) (=> (and (and ($generated@@140 $generated@@751 ($generated@@170 $generated@@727 $generated@@728)) ($generated@@0 ($generated@@276 ($generated@@11 true)))) ($generated@@135 $generated@@752 $generated@@732)) ($generated@@167 $generated@@727 $generated@@728 $generated@@729 $generated@@730 ($generated@@188 $generated@@432) $generated@@751 $generated@@752 $generated@@733 $generated@@734)))
 :no-pattern (type $generated@@751)
 :no-pattern (type $generated@@752)
 :no-pattern ($generated $generated@@751)
 :no-pattern ($generated@@0 $generated@@751)
 :no-pattern ($generated $generated@@752)
 :no-pattern ($generated@@0 $generated@@752)
)))) (and (=> (= (ControlFlow 0 8) 4) $generated@@748) (=> (= (ControlFlow 0 8) 7) $generated@@744))))))
(let (($generated@@753  (=> (and ($generated@@292 $generated@@741) ($generated@@736 $generated@@741)) (=> (and (and (and (not (= $generated@@731 $generated@@169)) (and ($generated@@140 $generated@@731 ($generated@@170 $generated@@727 $generated@@728)) ($generated@@77 $generated@@731 ($generated@@170 $generated@@727 $generated@@728) $generated@@741))) (and ($generated@@171 $generated@@733 $generated@@729) ($generated@@293 $generated@@733 $generated@@729 $generated@@741))) (and (and ($generated@@171 $generated@@734 $generated@@730) ($generated@@293 $generated@@734 $generated@@730 $generated@@741)) (and (= 2 $generated@@166) (= (ControlFlow 0 9) 8)))) $generated@@750))))
$generated@@753))))))
))
(check-sat)
(pop 1)
; Valid
(get-info :rlimit)
(reset)
(set-option :rlimit 0)
; did a full reset
(reset)
(set-option :print-success false)
(set-info :smt-lib-version 2.6)
(set-option :auto_config false)
(set-option :type_check true)
(set-option :smt.case_split 3)
(set-option :smt.qi.eager_threshold 100)
(set-option :smt.delay_units true)
(set-option :smt.arith.solver 2)
(set-option :smt.mbqi false)
(set-option :model.compact false)
(set-option :model.v2 true)
(set-option :pp.bv_literals false)
; done setting options


(set-info :category "industrial")
(declare-sort |T@U| 0)
(declare-sort |T@T| 0)
(declare-fun real_pow (Real Real) Real)
(declare-fun UOrdering2 (|T@U| |T@U|) Bool)
(declare-fun UOrdering3 (|T@T| |T@U| |T@U|) Bool)
(declare-fun tickleBool (Bool) Bool)
(assert (and (tickleBool true) (tickleBool false)))
(declare-fun $generated (T@U) Int)
(declare-fun $generated@@0 (T@U) Bool)
(declare-fun $generated@@1 (T@T) Int)
(declare-fun $generated@@2 () T@T)
(declare-fun $generated@@3 () T@T)
(declare-fun $generated@@4 () T@T)
(declare-fun $generated@@5 () T@T)
(declare-fun $generated@@6 () T@T)
(declare-fun $generated@@7 () T@T)
(declare-fun $generated@@8 (Int) T@U)
(declare-fun type (T@U) T@T)
(declare-fun $generated@@9 (Real) T@U)
(declare-fun $generated@@10 (T@U) Real)
(declare-fun $generated@@11 (Bool) T@U)
(declare-fun $generated@@12 (RoundingMode) T@U)
(declare-fun $generated@@13 (T@U) RoundingMode)
(declare-fun $generated@@14 (String) T@U)
(declare-fun $generated@@15 (T@U) String)
(declare-fun $generated@@16 ((RegEx String)) T@U)
(declare-fun $generated@@17 (T@U) (RegEx String))
(declare-fun $generated@@44 () T@U)
(declare-fun $generated@@45 () T@U)
(declare-fun $generated@@46 () T@U)
(declare-fun $generated@@47 () T@U)
(declare-fun $generated@@48 () T@U)
(declare-fun $generated@@49 () T@U)
(declare-fun $generated@@50 () T@U)
(declare-fun $generated@@51 () T@U)
(declare-fun $generated@@52 () T@U)
(declare-fun $generated@@53 () T@U)
(declare-fun $generated@@54 () T@U)
(declare-fun $generated@@55 () T@U)
(declare-fun $generated@@56 () T@U)
(declare-fun $generated@@57 () T@U)
(declare-fun $generated@@58 () T@U)
(declare-fun $generated@@59 () T@U)
(declare-fun $generated@@60 () T@U)
(declare-fun $generated@@61 () T@U)
(declare-fun $generated@@62 () T@U)
(declare-fun $generated@@63 () T@U)
(declare-fun $generated@@64 () T@U)
(declare-fun $generated@@65 () T@U)
(declare-fun $generated@@66 () T@U)
(declare-fun $generated@@67 () T@T)
(declare-fun $generated@@68 () T@T)
(declare-fun $generated@@69 (T@T) T@T)
(declare-fun $generated@@70 (T@T) T@T)
(declare-fun $generated@@71 () T@T)
(declare-fun $generated@@72 () T@T)
(declare-fun $generated@@75 (T@U) T@U)
(declare-fun $generated@@77 (T@U T@U T@U) Bool)
(declare-fun $generated@@78 (Int) T@U)
(declare-fun $generated@@79 (T@T T@T) T@T)
(declare-fun $generated@@80 () T@T)
(declare-fun $generated@@81 () T@T)
(declare-fun $generated@@82 (T@T) T@T)
(declare-fun $generated@@83 (T@T) T@T)
(declare-fun $generated@@84 (T@U T@U) T@U)
(declare-fun $generated@@85 (T@U T@U T@U) T@U)
(declare-fun $generated@@86 (T@U T@U) T@U)
(declare-fun $generated@@87 (T@U T@U T@U) T@U)
(declare-fun $generated@@135 (T@U T@U) Bool)
(declare-fun $generated@@136 () T@T)
(declare-fun $generated@@140 (T@U T@U) Bool)
(declare-fun $generated@@142 (T@U T@U) T@U)
(declare-fun $generated@@143 (Int) T@U)
(declare-fun $generated@@144 (T@U) Int)
(declare-fun $generated@@151 (T@U) Bool)
(declare-fun $generated@@152 (T@U T@U) T@U)
(declare-fun $generated@@153 () T@T)
(declare-fun $generated@@159 (T@U T@U) Bool)
(declare-fun $generated@@160 (T@U) T@U)
(declare-fun $generated@@161 (T@U) T@U)
(declare-fun $generated@@166 (T@U) T@U)
(declare-fun $generated@@167 (T@U) Bool)
(declare-fun $generated@@171 (T@U T@U T@U) T@U)
(declare-fun $generated@@172 (T@U T@U T@U Bool) T@U)
(declare-fun $generated@@173 (T@T T@T) T@T)
(declare-fun $generated@@174 (T@T) T@T)
(declare-fun $generated@@175 (T@T) T@T)
(declare-fun $generated@@176 (T@U T@U T@U T@U) T@U)
(declare-fun $generated@@227 () Int)
(declare-fun $generated@@228 (T@U T@U T@U T@U T@U T@U) Bool)
(declare-fun $generated@@229 () T@T)
(declare-fun $generated@@230 (T@U T@U T@U T@U T@U) Bool)
(declare-fun $generated@@231 () T@U)
(declare-fun $generated@@232 (T@U T@U) T@U)
(declare-fun $generated@@241 (T@U T@U) T@U)
(declare-fun $generated@@242 (T@U T@U) Bool)
(declare-fun $generated@@251 (T@U) T@U)
(declare-fun $generated@@256 (T@U) T@U)
(declare-fun $generated@@261 (Int) Int)
(declare-fun $generated@@263 (T@U) T@U)
(declare-fun $generated@@267 (T@U) Bool)
(declare-fun $generated@@268 (T@U T@U T@U) Bool)
(declare-fun $generated@@274 (T@U) T@U)
(declare-fun $generated@@280 (T@T) T@U)
(declare-fun $generated@@281 (T@U) Int)
(declare-fun $generated@@282 (T@T) T@T)
(declare-fun $generated@@283 (T@T) T@T)
(declare-fun $generated@@288 (T@U T@U) T@U)
(declare-fun $generated@@294 (T@U) T@U)
(declare-fun $generated@@302 (T@U) T@U)
(declare-fun $generated@@307 (T@U) T@U)
(declare-fun $generated@@312 (T@U) Int)
(declare-fun $generated@@313 (T@T) T@U)
(declare-fun $generated@@318 (T@U) T@U)
(declare-fun $generated@@319 (T@T T@T) T@U)
(declare-fun $generated@@320 (T@T T@T) T@T)
(declare-fun $generated@@321 (T@T) T@T)
(declare-fun $generated@@322 (T@T) T@T)
(declare-fun $generated@@336 (T@U) T@U)
(declare-fun $generated@@337 (T@T T@T) T@U)
(declare-fun $generated@@338 (T@T T@T) T@T)
(declare-fun $generated@@339 (T@T) T@T)
(declare-fun $generated@@340 (T@T) T@T)
(declare-fun $generated@@358 (T@U) Bool)
(declare-fun $generated@@381 (T@U) T@U)
(declare-fun $generated@@392 (T@U) T@U)
(declare-fun $generated@@422 (T@U) T@U)
(declare-fun $generated@@423 (T@T T@U) T@U)
(declare-fun $generated@@424 (T@U) T@U)
(declare-fun $generated@@433 (T@U) T@U)
(declare-fun $generated@@434 (T@U) T@U)
(declare-fun $generated@@451 (T@U T@U) T@U)
(declare-fun $generated@@459 (T@U T@U) T@U)
(declare-fun $generated@@467 (T@T) T@U)
(declare-fun $generated@@491 () T@T)
(declare-fun $generated@@500 (T@U) T@U)
(declare-fun $generated@@504 (T@U) T@U)
(declare-fun $generated@@510 (T@U) T@U)
(declare-fun $generated@@514 (T@U) T@U)
(declare-fun $generated@@522 (T@U) T@U)
(declare-fun $generated@@526 (T@U) T@U)
(declare-fun $generated@@534 (T@U) T@U)
(declare-fun $generated@@538 (T@U) T@U)
(declare-fun $generated@@542 (T@U) T@U)
(declare-fun $generated@@546 (T@U) T@U)
(declare-fun $generated@@550 (T@U) T@U)
(declare-fun $generated@@551 (T@U Int) T@U)
(declare-fun $generated@@560 (T@U) Int)
(declare-fun $generated@@562 (T@U) T@U)
(declare-fun $generated@@566 (T@U) T@U)
(declare-fun $generated@@570 (T@U) T@U)
(declare-fun $generated@@574 (T@U) T@U)
(declare-fun $generated@@590 (T@U) Int)
(declare-fun $generated@@591 (T@U) Int)
(declare-fun $generated@@613 (T@U) T@U)
(declare-fun $generated@@670 (T@U) T@U)
(declare-fun $generated@@671 () T@U)
(declare-fun $generated@@692 (T@U) Int)
(assert  (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (= ($generated@@1 $generated@@2) 0) (= ($generated@@1 $generated@@3) 1)) (= ($generated@@1 $generated@@4) 2)) (= ($generated@@1 $generated@@5) 3)) (= ($generated@@1 $generated@@6) 4)) (= ($generated@@1 $generated@@7) 5)) (forall (($generated@@18 Int) ) (! (= ($generated ($generated@@8 $generated@@18)) $generated@@18)
 :pattern ( ($generated@@8 $generated@@18))
))) (forall (($generated@@19 T@U) ) (!  (=> (= (type $generated@@19) $generated@@2) (= ($generated@@8 ($generated $generated@@19)) $generated@@19))
 :pattern ( ($generated $generated@@19))
))) (forall (($generated@@20 Int) ) (! (= (type ($generated@@8 $generated@@20)) $generated@@2)
 :pattern ( ($generated@@8 $generated@@20))
))) (forall (($generated@@21 Real) ) (! (= ($generated@@10 ($generated@@9 $generated@@21)) $generated@@21)
 :pattern ( ($generated@@9 $generated@@21))
))) (forall (($generated@@22 T@U) ) (!  (=> (= (type $generated@@22) $generated@@3) (= ($generated@@9 ($generated@@10 $generated@@22)) $generated@@22))
 :pattern ( ($generated@@10 $generated@@22))
))) (forall (($generated@@23 Real) ) (! (= (type ($generated@@9 $generated@@23)) $generated@@3)
 :pattern ( ($generated@@9 $generated@@23))
))) (forall (($generated@@24 Bool) ) (! (= ($generated@@0 ($generated@@11 $generated@@24)) $generated@@24)
 :pattern ( ($generated@@11 $generated@@24))
))) (forall (($generated@@25 T@U) ) (!  (=> (= (type $generated@@25) $generated@@4) (= ($generated@@11 ($generated@@0 $generated@@25)) $generated@@25))
 :pattern ( ($generated@@0 $generated@@25))
))) (forall (($generated@@26 Bool) ) (! (= (type ($generated@@11 $generated@@26)) $generated@@4)
 :pattern ( ($generated@@11 $generated@@26))
))) (forall (($generated@@27 RoundingMode) ) (! (= ($generated@@13 ($generated@@12 $generated@@27)) $generated@@27)
 :pattern ( ($generated@@12 $generated@@27))
))) (forall (($generated@@28 T@U) ) (!  (=> (= (type $generated@@28) $generated@@5) (= ($generated@@12 ($generated@@13 $generated@@28)) $generated@@28))
 :pattern ( ($generated@@13 $generated@@28))
))) (forall (($generated@@29 RoundingMode) ) (! (= (type ($generated@@12 $generated@@29)) $generated@@5)
 :pattern ( ($generated@@12 $generated@@29))
))) (forall (($generated@@30 String) ) (! (= ($generated@@15 ($generated@@14 $generated@@30)) $generated@@30)
 :pattern ( ($generated@@14 $generated@@30))
))) (forall (($generated@@31 T@U) ) (!  (=> (= (type $generated@@31) $generated@@6) (= ($generated@@14 ($generated@@15 $generated@@31)) $generated@@31))
 :pattern ( ($generated@@15 $generated@@31))
))) (forall (($generated@@32 String) ) (! (= (type ($generated@@14 $generated@@32)) $generated@@6)
 :pattern ( ($generated@@14 $generated@@32))
))) (forall (($generated@@33 (RegEx String)) ) (! (= ($generated@@17 ($generated@@16 $generated@@33)) $generated@@33)
 :pattern ( ($generated@@16 $generated@@33))
))) (forall (($generated@@34 T@U) ) (!  (=> (= (type $generated@@34) $generated@@7) (= ($generated@@16 ($generated@@17 $generated@@34)) $generated@@34))
 :pattern ( ($generated@@17 $generated@@34))
))) (forall (($generated@@35 (RegEx String)) ) (! (= (type ($generated@@16 $generated@@35)) $generated@@7)
 :pattern ( ($generated@@16 $generated@@35))
))))
(assert (forall (($generated@@36 T@U) ) (! (UOrdering2 $generated@@36 $generated@@36)
 :no-pattern ($generated $generated@@36)
 :no-pattern ($generated@@0 $generated@@36)
)))
(assert (forall (($generated@@37 T@U) ($generated@@38 T@U) ($generated@@39 T@U) ) (! (let (($generated@@40 (type $generated@@37)))
 (=> (and (and (= (type $generated@@38) $generated@@40) (= (type $generated@@39) $generated@@40)) (and (UOrdering2 $generated@@37 $generated@@38) (UOrdering2 $generated@@38 $generated@@39))) (UOrdering2 $generated@@37 $generated@@39)))
 :pattern ( (UOrdering2 $generated@@37 $generated@@38) (UOrdering2 $generated@@38 $generated@@39))
)))
(assert (forall (($generated@@41 T@U) ($generated@@42 T@U) ) (! (let (($generated@@43 (type $generated@@41)))
 (=> (= (type $generated@@42) $generated@@43) (=> (and (UOrdering2 $generated@@41 $generated@@42) (UOrdering2 $generated@@42 $generated@@41)) (= $generated@@41 $generated@@42))))
 :pattern ( (UOrdering2 $generated@@41 $generated@@42) (UOrdering2 $generated@@42 $generated@@41))
)))
(assert  (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (= ($generated@@1 $generated@@67) 6) (= (type $generated@@44) $generated@@67)) (= (type $generated@@45) $generated@@67)) (= (type $generated@@46) $generated@@67)) (= (type $generated@@47) $generated@@67)) (= (type $generated@@48) $generated@@67)) (= ($generated@@1 $generated@@68) 7)) (= (type $generated@@49) $generated@@68)) (= (type $generated@@50) $generated@@68)) (= (type $generated@@51) $generated@@68)) (= (type $generated@@52) $generated@@68)) (= (type $generated@@53) $generated@@68)) (= (type $generated@@54) $generated@@68)) (= (type $generated@@55) $generated@@68)) (= (type $generated@@56) $generated@@68)) (= (type $generated@@57) $generated@@68)) (= (type $generated@@58) $generated@@68)) (= (type $generated@@59) $generated@@68)) (forall (($generated@@73 T@T) ) (= ($generated@@1 ($generated@@69 $generated@@73)) 8))) (forall (($generated@@74 T@T) ) (! (= ($generated@@70 ($generated@@69 $generated@@74)) $generated@@74)
 :pattern ( ($generated@@69 $generated@@74))
))) (= (type $generated@@60) ($generated@@69 $generated@@4))) (= ($generated@@1 $generated@@71) 9)) (= (type $generated@@61) $generated@@71)) (= (type $generated@@62) $generated@@68)) (= (type $generated@@63) $generated@@68)) (= (type $generated@@64) $generated@@68)) (= ($generated@@1 $generated@@72) 10)) (= (type $generated@@65) $generated@@72)) (= (type $generated@@66) $generated@@72)))
(assert (distinct $generated@@44 $generated@@45 $generated@@46 $generated@@47 $generated@@48 $generated@@49 $generated@@50 $generated@@51 $generated@@52 $generated@@53 $generated@@54 $generated@@55 $generated@@56 $generated@@57 $generated@@58 $generated@@59 $generated@@60 $generated@@61 $generated@@62 $generated@@63 $generated@@64 $generated@@65 $generated@@66)
)
(assert (forall (($generated@@76 T@U) ) (! (= (type ($generated@@75 $generated@@76)) $generated@@68)
 :pattern ( ($generated@@75 $generated@@76))
)))
(assert (= ($generated@@75 $generated@@44) $generated@@49))
(assert (= ($generated@@75 $generated@@45) $generated@@50))
(assert (= ($generated@@75 $generated@@46) $generated@@51))
(assert (= ($generated@@75 $generated@@47) $generated@@52))
(assert (= ($generated@@75 $generated@@48) $generated@@53))
(assert  (and (and (and (and (and (and (and (and (and (and (and (and (and (forall (($generated@@88 T@T) ($generated@@89 T@T) ) (= ($generated@@1 ($generated@@79 $generated@@88 $generated@@89)) 11)) (forall (($generated@@90 T@T) ($generated@@91 T@T) ) (! (= ($generated@@82 ($generated@@79 $generated@@90 $generated@@91)) $generated@@90)
 :pattern ( ($generated@@79 $generated@@90 $generated@@91))
))) (forall (($generated@@92 T@T) ($generated@@93 T@T) ) (! (= ($generated@@83 ($generated@@79 $generated@@92 $generated@@93)) $generated@@93)
 :pattern ( ($generated@@79 $generated@@92 $generated@@93))
))) (forall (($generated@@94 T@U) ($generated@@95 T@U) ) (! (let (($generated@@96 ($generated@@83 (type $generated@@94))))
(= (type ($generated@@84 $generated@@94 $generated@@95)) $generated@@96))
 :pattern ( ($generated@@84 $generated@@94 $generated@@95))
))) (forall (($generated@@97 T@U) ($generated@@98 T@U) ($generated@@99 T@U) ) (! (let (($generated@@100 (type $generated@@99)))
(let (($generated@@101 (type $generated@@98)))
(= (type ($generated@@85 $generated@@97 $generated@@98 $generated@@99)) ($generated@@79 $generated@@101 $generated@@100))))
 :pattern ( ($generated@@85 $generated@@97 $generated@@98 $generated@@99))
))) (forall (($generated@@102 T@U) ($generated@@103 T@U) ($generated@@104 T@U) ) (! (let (($generated@@105 ($generated@@83 (type $generated@@102))))
 (=> (= (type $generated@@104) $generated@@105) (= ($generated@@84 ($generated@@85 $generated@@102 $generated@@103 $generated@@104) $generated@@103) $generated@@104)))
 :weight 0
))) (and (forall (($generated@@106 T@U) ($generated@@107 T@U) ($generated@@108 T@U) ($generated@@109 T@U) ) (!  (or (= $generated@@108 $generated@@109) (= ($generated@@84 ($generated@@85 $generated@@107 $generated@@108 $generated@@106) $generated@@109) ($generated@@84 $generated@@107 $generated@@109)))
 :weight 0
)) (forall (($generated@@110 T@U) ($generated@@111 T@U) ($generated@@112 T@U) ($generated@@113 T@U) ) (!  (or true (= ($generated@@84 ($generated@@85 $generated@@111 $generated@@112 $generated@@110) $generated@@113) ($generated@@84 $generated@@111 $generated@@113)))
 :weight 0
)))) (= ($generated@@1 $generated@@80) 12)) (forall (($generated@@114 T@U) ($generated@@115 T@U) ) (! (let (($generated@@116 ($generated@@70 (type $generated@@115))))
(= (type ($generated@@86 $generated@@114 $generated@@115)) $generated@@116))
 :pattern ( ($generated@@86 $generated@@114 $generated@@115))
))) (= ($generated@@1 $generated@@81) 13)) (forall (($generated@@117 T@U) ($generated@@118 T@U) ($generated@@119 T@U) ) (! (= (type ($generated@@87 $generated@@117 $generated@@118 $generated@@119)) $generated@@81)
 :pattern ( ($generated@@87 $generated@@117 $generated@@118 $generated@@119))
))) (forall (($generated@@120 T@U) ($generated@@121 T@U) ($generated@@122 T@U) ) (! (let (($generated@@123 ($generated@@70 (type $generated@@121))))
 (=> (= (type $generated@@122) $generated@@123) (= ($generated@@86 ($generated@@87 $generated@@120 $generated@@121 $generated@@122) $generated@@121) $generated@@122)))
 :weight 0
))) (and (forall (($generated@@124 T@U) ($generated@@125 T@U) ($generated@@126 T@U) ($generated@@127 T@U) ) (!  (or (= $generated@@126 $generated@@127) (= ($generated@@86 ($generated@@87 $generated@@125 $generated@@126 $generated@@124) $generated@@127) ($generated@@86 $generated@@125 $generated@@127)))
 :weight 0
)) (forall (($generated@@128 T@U) ($generated@@129 T@U) ($generated@@130 T@U) ($generated@@131 T@U) ) (!  (or true (= ($generated@@86 ($generated@@87 $generated@@129 $generated@@130 $generated@@128) $generated@@131) ($generated@@86 $generated@@129 $generated@@131)))
 :weight 0
)))) (forall (($generated@@132 Int) ) (! (= (type ($generated@@78 $generated@@132)) $generated@@67)
 :pattern ( ($generated@@78 $generated@@132))
))))
(assert (forall (($generated@@133 T@U) ($generated@@134 T@U) ) (!  (=> (and (= (type $generated@@133) $generated@@2) (= (type $generated@@134) ($generated@@79 $generated@@80 $generated@@81))) ($generated@@77 $generated@@133 ($generated@@78 0) $generated@@134))
 :pattern ( ($generated@@77 $generated@@133 ($generated@@78 0) $generated@@134))
)))
(assert (= ($generated@@1 $generated@@136) 14))
(assert (forall (($generated@@137 T@U) ($generated@@138 T@U) ($generated@@139 T@U) ) (!  (=> (and (and (and (= (type $generated@@137) $generated@@136) (= (type $generated@@138) $generated@@136)) (= (type $generated@@139) $generated@@136)) (and ($generated@@135 $generated@@137 $generated@@138) ($generated@@135 $generated@@138 $generated@@139))) ($generated@@135 $generated@@137 $generated@@139))
 :pattern ( ($generated@@135 $generated@@137 $generated@@138) ($generated@@135 $generated@@138 $generated@@139))
 :pattern ( ($generated@@135 $generated@@137 $generated@@138) ($generated@@135 $generated@@137 $generated@@139))
)))
(assert (forall (($generated@@141 T@U) ) (!  (=> (= (type $generated@@141) $generated@@2) ($generated@@140 $generated@@141 ($generated@@78 0)))
 :pattern ( ($generated@@140 $generated@@141 ($generated@@78 0)))
)))
(assert  (and (forall (($generated@@145 T@U) ($generated@@146 T@U) ) (! (= (type ($generated@@142 $generated@@145 $generated@@146)) $generated@@136)
 :pattern ( ($generated@@142 $generated@@145 $generated@@146))
)) (forall (($generated@@147 Int) ) (! (= (type ($generated@@143 $generated@@147)) $generated@@136)
 :pattern ( ($generated@@143 $generated@@147))
))))
(assert (forall (($generated@@148 T@U) ($generated@@149 Int) ($generated@@150 Int) ) (!  (=> (= (type $generated@@148) $generated@@136) (=> (and (and (<= 0 $generated@@149) (<= 0 $generated@@150)) (<= (+ $generated@@149 $generated@@150) ($generated@@144 $generated@@148))) (= ($generated@@142 ($generated@@142 $generated@@148 ($generated@@143 $generated@@149)) ($generated@@143 $generated@@150)) ($generated@@142 $generated@@148 ($generated@@143 (+ $generated@@149 $generated@@150))))))
 :pattern ( ($generated@@142 ($generated@@142 $generated@@148 ($generated@@143 $generated@@149)) ($generated@@143 $generated@@150)))
)))
(assert  (and (= ($generated@@1 $generated@@153) 15) (forall (($generated@@154 T@U) ($generated@@155 T@U) ) (! (= (type ($generated@@152 $generated@@154 $generated@@155)) $generated@@67)
 :pattern ( ($generated@@152 $generated@@154 $generated@@155))
))))
(assert (forall (($generated@@156 T@U) ($generated@@157 T@U) ($generated@@158 T@U) ) (!  (=> (and (and (and (= (type $generated@@156) $generated@@67) (= (type $generated@@157) $generated@@67)) (= (type $generated@@158) $generated@@153)) ($generated@@140 $generated@@158 ($generated@@152 $generated@@156 $generated@@157))) ($generated@@151 $generated@@158))
 :pattern ( ($generated@@151 $generated@@158) ($generated@@140 $generated@@158 ($generated@@152 $generated@@156 $generated@@157)))
)))
(assert  (and (forall (($generated@@162 T@U) ) (! (= (type ($generated@@160 $generated@@162)) $generated@@136)
 :pattern ( ($generated@@160 $generated@@162))
)) (forall (($generated@@163 T@U) ) (! (= (type ($generated@@161 $generated@@163)) $generated@@136)
 :pattern ( ($generated@@161 $generated@@163))
))))
(assert (forall (($generated@@164 T@U) ($generated@@165 T@U) ) (!  (=> (and (and (= (type $generated@@164) $generated@@153) (= (type $generated@@165) $generated@@153)) true) (= ($generated@@159 $generated@@164 $generated@@165)  (and (= ($generated@@160 $generated@@164) ($generated@@160 $generated@@165)) (= ($generated@@161 $generated@@164) ($generated@@161 $generated@@165)))))
 :pattern ( ($generated@@159 $generated@@164 $generated@@165))
)))
(assert (forall (($generated@@168 T@U) ) (! (= (type ($generated@@166 $generated@@168)) $generated@@67)
 :pattern ( ($generated@@166 $generated@@168))
)))
(assert (forall (($generated@@169 T@U) ($generated@@170 T@U) ) (!  (=> (and (and (= (type $generated@@169) ($generated@@79 $generated@@136 $generated@@2)) (= (type $generated@@170) $generated@@67)) ($generated@@140 $generated@@169 ($generated@@166 $generated@@170))) ($generated@@167 $generated@@169))
 :pattern ( ($generated@@140 $generated@@169 ($generated@@166 $generated@@170)))
)))
(assert  (and (and (and (and (and (and (and (forall (($generated@@177 T@T) ($generated@@178 T@T) ) (= ($generated@@1 ($generated@@173 $generated@@177 $generated@@178)) 16)) (forall (($generated@@179 T@T) ($generated@@180 T@T) ) (! (= ($generated@@174 ($generated@@173 $generated@@179 $generated@@180)) $generated@@179)
 :pattern ( ($generated@@173 $generated@@179 $generated@@180))
))) (forall (($generated@@181 T@T) ($generated@@182 T@T) ) (! (= ($generated@@175 ($generated@@173 $generated@@181 $generated@@182)) $generated@@182)
 :pattern ( ($generated@@173 $generated@@181 $generated@@182))
))) (forall (($generated@@183 T@U) ($generated@@184 T@U) ($generated@@185 T@U) ) (! (let (($generated@@186 ($generated@@175 (type $generated@@183))))
(= (type ($generated@@171 $generated@@183 $generated@@184 $generated@@185)) $generated@@186))
 :pattern ( ($generated@@171 $generated@@183 $generated@@184 $generated@@185))
))) (forall (($generated@@187 T@U) ($generated@@188 T@U) ($generated@@189 T@U) ($generated@@190 T@U) ) (! (let (($generated@@191 (type $generated@@190)))
(let (($generated@@192 (type $generated@@188)))
(= (type ($generated@@176 $generated@@187 $generated@@188 $generated@@189 $generated@@190)) ($generated@@173 $generated@@192 $generated@@191))))
 :pattern ( ($generated@@176 $generated@@187 $generated@@188 $generated@@189 $generated@@190))
))) (forall (($generated@@193 T@U) ($generated@@194 T@U) ($generated@@195 T@U) ($generated@@196 T@U) ) (! (let (($generated@@197 ($generated@@175 (type $generated@@193))))
 (=> (= (type $generated@@196) $generated@@197) (= ($generated@@171 ($generated@@176 $generated@@193 $generated@@194 $generated@@195 $generated@@196) $generated@@194 $generated@@195) $generated@@196)))
 :weight 0
))) (and (and (forall (($generated@@198 T@U) ($generated@@199 T@U) ($generated@@200 T@U) ($generated@@201 T@U) ($generated@@202 T@U) ($generated@@203 T@U) ) (!  (or (= $generated@@200 $generated@@202) (= ($generated@@171 ($generated@@176 $generated@@199 $generated@@200 $generated@@201 $generated@@198) $generated@@202 $generated@@203) ($generated@@171 $generated@@199 $generated@@202 $generated@@203)))
 :weight 0
)) (forall (($generated@@204 T@U) ($generated@@205 T@U) ($generated@@206 T@U) ($generated@@207 T@U) ($generated@@208 T@U) ($generated@@209 T@U) ) (!  (or (= $generated@@207 $generated@@209) (= ($generated@@171 ($generated@@176 $generated@@205 $generated@@206 $generated@@207 $generated@@204) $generated@@208 $generated@@209) ($generated@@171 $generated@@205 $generated@@208 $generated@@209)))
 :weight 0
))) (forall (($generated@@210 T@U) ($generated@@211 T@U) ($generated@@212 T@U) ($generated@@213 T@U) ($generated@@214 T@U) ($generated@@215 T@U) ) (!  (or true (= ($generated@@171 ($generated@@176 $generated@@211 $generated@@212 $generated@@213 $generated@@210) $generated@@214 $generated@@215) ($generated@@171 $generated@@211 $generated@@214 $generated@@215)))
 :weight 0
)))) (forall (($generated@@216 T@U) ($generated@@217 T@U) ($generated@@218 T@U) ($generated@@219 Bool) ) (! (= (type ($generated@@172 $generated@@216 $generated@@217 $generated@@218 $generated@@219)) ($generated@@173 $generated@@80 $generated@@4))
 :pattern ( ($generated@@172 $generated@@216 $generated@@217 $generated@@218 $generated@@219))
))))
(assert (forall (($generated@@220 T@U) ($generated@@221 T@U) ($generated@@222 T@U) ($generated@@223 Bool) ($generated@@224 T@U) ($generated@@225 T@U) ) (! (let (($generated@@226 ($generated@@70 (type $generated@@225))))
 (=> (and (and (and (and (= (type $generated@@220) $generated@@80) (= (type $generated@@221) ($generated@@79 $generated@@80 $generated@@81))) (= (type $generated@@222) ($generated@@69 $generated@@4))) (= (type $generated@@224) $generated@@80)) (= (type $generated@@225) ($generated@@69 $generated@@226))) (= ($generated@@0 ($generated@@171 ($generated@@172 $generated@@220 $generated@@221 $generated@@222 $generated@@223) $generated@@224 $generated@@225))  (=> (and (not (= $generated@@224 $generated@@220)) ($generated@@0 ($generated@@86 ($generated@@84 $generated@@221 $generated@@224) $generated@@222))) $generated@@223))))
 :pattern ( ($generated@@171 ($generated@@172 $generated@@220 $generated@@221 $generated@@222 $generated@@223) $generated@@224 $generated@@225))
)))
(assert  (and (and (= ($generated@@1 $generated@@229) 17) (= (type $generated@@231) $generated@@80)) (forall (($generated@@233 T@U) ($generated@@234 T@U) ) (! (= (type ($generated@@232 $generated@@233 $generated@@234)) $generated@@67)
 :pattern ( ($generated@@232 $generated@@233 $generated@@234))
))))
(assert  (=> (<= 1 $generated@@227) (forall (($generated@@235 T@U) ($generated@@236 T@U) ($generated@@237 T@U) ($generated@@238 T@U) ($generated@@239 T@U) ($generated@@240 T@U) ) (!  (=> (and (and (and (and (and (and (= (type $generated@@235) $generated@@67) (= (type $generated@@236) $generated@@67)) (= (type $generated@@237) $generated@@67)) (= (type $generated@@238) $generated@@229)) (= (type $generated@@239) $generated@@80)) (= (type $generated@@240) $generated@@136)) (or ($generated@@230 $generated@@235 $generated@@236 $generated@@237 $generated@@239 $generated@@240) (and (not (= 1 $generated@@227)) (and (not (= $generated@@239 $generated@@231)) ($generated@@140 $generated@@239 ($generated@@232 $generated@@235 $generated@@236)))))) true)
 :pattern ( ($generated@@228 $generated@@235 $generated@@236 $generated@@237 $generated@@238 $generated@@239 $generated@@240))
))))
(assert (forall (($generated@@243 T@U) ($generated@@244 T@U) ) (! (= (type ($generated@@241 $generated@@243 $generated@@244)) $generated@@153)
 :pattern ( ($generated@@241 $generated@@243 $generated@@244))
)))
(assert (forall (($generated@@245 T@U) ($generated@@246 T@U) ($generated@@247 T@U) ($generated@@248 T@U) ) (!  (=> (and (and (and (= (type $generated@@245) $generated@@67) (= (type $generated@@246) $generated@@67)) (= (type $generated@@247) $generated@@136)) (= (type $generated@@248) $generated@@136)) (= ($generated@@140 ($generated@@241 $generated@@247 $generated@@248) ($generated@@152 $generated@@245 $generated@@246))  (and ($generated@@242 $generated@@247 $generated@@245) ($generated@@242 $generated@@248 $generated@@246))))
 :pattern ( ($generated@@140 ($generated@@241 $generated@@247 $generated@@248) ($generated@@152 $generated@@245 $generated@@246)))
)))
(assert (forall (($generated@@249 T@U) ($generated@@250 T@U) ) (!  (=> (and (= (type $generated@@249) $generated@@153) (= (type $generated@@250) $generated@@153)) (= ($generated@@159 $generated@@249 $generated@@250) (= $generated@@249 $generated@@250)))
 :pattern ( ($generated@@159 $generated@@249 $generated@@250))
)))
(assert (forall (($generated@@252 T@U) ) (! (= (type ($generated@@251 $generated@@252)) $generated@@67)
 :pattern ( ($generated@@251 $generated@@252))
)))
(assert (forall (($generated@@253 T@U) ($generated@@254 T@U) ) (!  (=> (and (= (type $generated@@253) ($generated@@79 $generated@@136 $generated@@4)) (= (type $generated@@254) $generated@@67)) (= ($generated@@140 $generated@@253 ($generated@@251 $generated@@254)) (forall (($generated@@255 T@U) ) (!  (=> (and (= (type $generated@@255) $generated@@136) ($generated@@0 ($generated@@84 $generated@@253 $generated@@255))) ($generated@@242 $generated@@255 $generated@@254))
 :pattern ( ($generated@@84 $generated@@253 $generated@@255))
))))
 :pattern ( ($generated@@140 $generated@@253 ($generated@@251 $generated@@254)))
)))
(assert (forall (($generated@@257 T@U) ) (! (= (type ($generated@@256 $generated@@257)) $generated@@67)
 :pattern ( ($generated@@256 $generated@@257))
)))
(assert (forall (($generated@@258 T@U) ($generated@@259 T@U) ) (!  (=> (and (= (type $generated@@258) ($generated@@79 $generated@@136 $generated@@4)) (= (type $generated@@259) $generated@@67)) (= ($generated@@140 $generated@@258 ($generated@@256 $generated@@259)) (forall (($generated@@260 T@U) ) (!  (=> (and (= (type $generated@@260) $generated@@136) ($generated@@0 ($generated@@84 $generated@@258 $generated@@260))) ($generated@@242 $generated@@260 $generated@@259))
 :pattern ( ($generated@@84 $generated@@258 $generated@@260))
))))
 :pattern ( ($generated@@140 $generated@@258 ($generated@@256 $generated@@259)))
)))
(assert (forall (($generated@@262 Int) ) (! (= ($generated@@261 $generated@@262) $generated@@262)
 :pattern ( ($generated@@261 $generated@@262))
)))
(assert (forall (($generated@@264 T@U) ) (! (let (($generated@@265 (type $generated@@264)))
(= (type ($generated@@263 $generated@@264)) $generated@@265))
 :pattern ( ($generated@@263 $generated@@264))
)))
(assert (forall (($generated@@266 T@U) ) (! (= ($generated@@263 $generated@@266) $generated@@266)
 :pattern ( ($generated@@263 $generated@@266))
)))
(assert (forall (($generated@@269 T@U) ($generated@@270 T@U) ($generated@@271 T@U) ($generated@@272 T@U) ($generated@@273 T@U) ) (!  (=> (and (and (and (and (and (= (type $generated@@269) $generated@@67) (= (type $generated@@270) $generated@@67)) (= (type $generated@@271) $generated@@136)) (= (type $generated@@272) $generated@@136)) (= (type $generated@@273) ($generated@@79 $generated@@80 $generated@@81))) ($generated@@267 $generated@@273)) (= ($generated@@77 ($generated@@241 $generated@@271 $generated@@272) ($generated@@152 $generated@@269 $generated@@270) $generated@@273)  (and ($generated@@268 $generated@@271 $generated@@269 $generated@@273) ($generated@@268 $generated@@272 $generated@@270 $generated@@273))))
 :pattern ( ($generated@@77 ($generated@@241 $generated@@271 $generated@@272) ($generated@@152 $generated@@269 $generated@@270) $generated@@273))
)))
(assert (forall (($generated@@275 T@U) ) (! (= (type ($generated@@274 $generated@@275)) $generated@@71)
 :pattern ( ($generated@@274 $generated@@275))
)))
(assert (forall (($generated@@276 T@U) ) (!  (=> (= (type $generated@@276) $generated@@153) (= ($generated@@151 $generated@@276) (= ($generated@@274 $generated@@276) $generated@@61)))
 :pattern ( ($generated@@151 $generated@@276))
)))
(assert (forall (($generated@@277 T@U) ) (!  (=> (and (= (type $generated@@277) $generated@@153) ($generated@@151 $generated@@277)) (exists (($generated@@278 T@U) ($generated@@279 T@U) ) (!  (and (and (= (type $generated@@278) $generated@@136) (= (type $generated@@279) $generated@@136)) (= $generated@@277 ($generated@@241 $generated@@278 $generated@@279)))
 :no-pattern (type $generated@@278)
 :no-pattern (type $generated@@279)
 :no-pattern ($generated $generated@@278)
 :no-pattern ($generated@@0 $generated@@278)
 :no-pattern ($generated $generated@@279)
 :no-pattern ($generated@@0 $generated@@279)
)))
 :pattern ( ($generated@@151 $generated@@277))
)))
(assert  (and (and (forall (($generated@@284 T@T) ) (= ($generated@@1 ($generated@@282 $generated@@284)) 18)) (forall (($generated@@285 T@T) ) (! (= ($generated@@283 ($generated@@282 $generated@@285)) $generated@@285)
 :pattern ( ($generated@@282 $generated@@285))
))) (forall (($generated@@286 T@T) ) (! (= (type ($generated@@280 $generated@@286)) ($generated@@282 $generated@@286))
 :pattern ( ($generated@@280 $generated@@286))
))))
(assert (forall (($generated@@287 T@T) ) (! (= ($generated@@281 ($generated@@280 $generated@@287)) 0)
 :pattern ( ($generated@@280 $generated@@287))
)))
(assert (forall (($generated@@289 T@U) ($generated@@290 T@U) ) (! (= (type ($generated@@288 $generated@@289 $generated@@290)) $generated@@67)
 :pattern ( ($generated@@288 $generated@@289 $generated@@290))
)))
(assert (forall (($generated@@291 T@U) ($generated@@292 T@U) ($generated@@293 T@U) ) (!  (=> (and (and (= (type $generated@@291) $generated@@67) (= (type $generated@@292) $generated@@67)) (= (type $generated@@293) $generated@@80)) (= ($generated@@140 $generated@@293 ($generated@@232 $generated@@291 $generated@@292))  (and ($generated@@140 $generated@@293 ($generated@@288 $generated@@291 $generated@@292)) (not (= $generated@@293 $generated@@231)))))
 :pattern ( ($generated@@140 $generated@@293 ($generated@@232 $generated@@291 $generated@@292)))
)))
(assert (forall (($generated@@295 T@U) ) (! (= (type ($generated@@294 $generated@@295)) $generated@@229)
 :pattern ( ($generated@@294 $generated@@295))
)))
(assert (forall (($generated@@296 T@U) ($generated@@297 T@U) ($generated@@298 T@U) ($generated@@299 T@U) ($generated@@300 T@U) ($generated@@301 T@U) ) (!  (=> (and (and (and (and (and (= (type $generated@@296) $generated@@67) (= (type $generated@@297) $generated@@67)) (= (type $generated@@298) $generated@@67)) (= (type $generated@@299) $generated@@229)) (= (type $generated@@300) $generated@@80)) (= (type $generated@@301) $generated@@136)) (= ($generated@@228 $generated@@296 $generated@@297 $generated@@298 ($generated@@294 $generated@@299) $generated@@300 $generated@@301) ($generated@@228 $generated@@296 $generated@@297 $generated@@298 $generated@@299 $generated@@300 $generated@@301)))
 :pattern ( ($generated@@228 $generated@@296 $generated@@297 $generated@@298 ($generated@@294 $generated@@299) $generated@@300 $generated@@301))
)))
(assert (forall (($generated@@303 T@U) ) (! (= (type ($generated@@302 $generated@@303)) $generated@@136)
 :pattern ( ($generated@@302 $generated@@303))
)))
(assert (forall (($generated@@304 T@U) ($generated@@305 T@U) ($generated@@306 T@U) ) (!  (=> (and (= (type $generated@@305) $generated@@67) (= (type $generated@@306) ($generated@@79 $generated@@80 $generated@@81))) (= ($generated@@268 ($generated@@302 $generated@@304) $generated@@305 $generated@@306) ($generated@@77 $generated@@304 $generated@@305 $generated@@306)))
 :pattern ( ($generated@@268 ($generated@@302 $generated@@304) $generated@@305 $generated@@306))
)))
(assert (forall (($generated@@308 T@U) ) (! (= (type ($generated@@307 $generated@@308)) $generated@@67)
 :pattern ( ($generated@@307 $generated@@308))
)))
(assert (forall (($generated@@309 T@U) ($generated@@310 T@U) ($generated@@311 T@U) ) (!  (=> (and (and (= (type $generated@@309) $generated@@67) (= (type $generated@@310) $generated@@67)) (= (type $generated@@311) $generated@@80)) (= ($generated@@140 $generated@@311 ($generated@@288 $generated@@309 $generated@@310))  (or (= $generated@@311 $generated@@231) (= ($generated@@307 $generated@@311) ($generated@@288 $generated@@309 $generated@@310)))))
 :pattern ( ($generated@@140 $generated@@311 ($generated@@288 $generated@@309 $generated@@310)))
)))
(assert (forall (($generated@@314 T@T) ) (! (= (type ($generated@@313 $generated@@314)) ($generated@@79 $generated@@314 $generated@@2))
 :pattern ( ($generated@@313 $generated@@314))
)))
(assert (forall (($generated@@315 T@U) ) (! (let (($generated@@316 ($generated@@82 (type $generated@@315))))
 (=> (= (type $generated@@315) ($generated@@79 $generated@@316 $generated@@2)) (and (= (= ($generated@@312 $generated@@315) 0) (= $generated@@315 ($generated@@313 $generated@@316))) (=> (not (= ($generated@@312 $generated@@315) 0)) (exists (($generated@@317 T@U) ) (!  (and (= (type $generated@@317) $generated@@316) (< 0 ($generated ($generated@@84 $generated@@315 $generated@@317))))
 :no-pattern (type $generated@@317)
 :no-pattern ($generated $generated@@317)
 :no-pattern ($generated@@0 $generated@@317)
))))))
 :pattern ( ($generated@@312 $generated@@315))
)))
(assert  (and (and (and (and (forall (($generated@@323 T@T) ($generated@@324 T@T) ) (= ($generated@@1 ($generated@@320 $generated@@323 $generated@@324)) 19)) (forall (($generated@@325 T@T) ($generated@@326 T@T) ) (! (= ($generated@@321 ($generated@@320 $generated@@325 $generated@@326)) $generated@@325)
 :pattern ( ($generated@@320 $generated@@325 $generated@@326))
))) (forall (($generated@@327 T@T) ($generated@@328 T@T) ) (! (= ($generated@@322 ($generated@@320 $generated@@327 $generated@@328)) $generated@@328)
 :pattern ( ($generated@@320 $generated@@327 $generated@@328))
))) (forall (($generated@@329 T@U) ) (! (let (($generated@@330 ($generated@@321 (type $generated@@329))))
(= (type ($generated@@318 $generated@@329)) ($generated@@79 $generated@@330 $generated@@4)))
 :pattern ( ($generated@@318 $generated@@329))
))) (forall (($generated@@331 T@T) ($generated@@332 T@T) ) (! (= (type ($generated@@319 $generated@@331 $generated@@332)) ($generated@@320 $generated@@331 $generated@@332))
 :pattern ( ($generated@@319 $generated@@331 $generated@@332))
))))
(assert (forall (($generated@@333 T@U) ($generated@@334 T@T) ) (! (let (($generated@@335 (type $generated@@333)))
 (not ($generated@@0 ($generated@@84 ($generated@@318 ($generated@@319 $generated@@335 $generated@@334)) $generated@@333))))
 :pattern ( (let (($generated@@335 (type $generated@@333)))
($generated@@84 ($generated@@318 ($generated@@319 $generated@@335 $generated@@334)) $generated@@333)))
)))
(assert  (and (and (and (and (forall (($generated@@341 T@T) ($generated@@342 T@T) ) (= ($generated@@1 ($generated@@338 $generated@@341 $generated@@342)) 20)) (forall (($generated@@343 T@T) ($generated@@344 T@T) ) (! (= ($generated@@339 ($generated@@338 $generated@@343 $generated@@344)) $generated@@343)
 :pattern ( ($generated@@338 $generated@@343 $generated@@344))
))) (forall (($generated@@345 T@T) ($generated@@346 T@T) ) (! (= ($generated@@340 ($generated@@338 $generated@@345 $generated@@346)) $generated@@346)
 :pattern ( ($generated@@338 $generated@@345 $generated@@346))
))) (forall (($generated@@347 T@U) ) (! (let (($generated@@348 ($generated@@339 (type $generated@@347))))
(= (type ($generated@@336 $generated@@347)) ($generated@@79 $generated@@348 $generated@@4)))
 :pattern ( ($generated@@336 $generated@@347))
))) (forall (($generated@@349 T@T) ($generated@@350 T@T) ) (! (= (type ($generated@@337 $generated@@349 $generated@@350)) ($generated@@338 $generated@@349 $generated@@350))
 :pattern ( ($generated@@337 $generated@@349 $generated@@350))
))))
(assert (forall (($generated@@351 T@U) ($generated@@352 T@T) ) (! (let (($generated@@353 (type $generated@@351)))
 (not ($generated@@0 ($generated@@84 ($generated@@336 ($generated@@337 $generated@@353 $generated@@352)) $generated@@351))))
 :pattern ( (let (($generated@@353 (type $generated@@351)))
($generated@@84 ($generated@@336 ($generated@@337 $generated@@353 $generated@@352)) $generated@@351)))
)))
(assert (forall (($generated@@354 T@U) ($generated@@355 T@U) ($generated@@356 T@U) ($generated@@357 T@U) ) (!  (=> (and (and (and (= (type $generated@@354) $generated@@67) (= (type $generated@@355) $generated@@67)) (= (type $generated@@356) $generated@@80)) (= (type $generated@@357) ($generated@@79 $generated@@80 $generated@@81))) (= ($generated@@77 $generated@@356 ($generated@@288 $generated@@354 $generated@@355) $generated@@357)  (or (= $generated@@356 $generated@@231) ($generated@@0 ($generated@@86 ($generated@@84 $generated@@357 $generated@@356) $generated@@60)))))
 :pattern ( ($generated@@77 $generated@@356 ($generated@@288 $generated@@354 $generated@@355) $generated@@357))
)))
(assert (forall (($generated@@359 T@U) ($generated@@360 T@U) ) (!  (=> (and (and (= (type $generated@@359) $generated@@136) (= (type $generated@@360) $generated@@136)) (and ($generated@@358 $generated@@360) (<= ($generated@@144 $generated@@360) ($generated@@144 $generated@@359)))) (and (= ($generated@@358 ($generated@@142 $generated@@359 $generated@@360)) ($generated@@358 $generated@@359)) (= ($generated@@144 ($generated@@142 $generated@@359 $generated@@360)) (- ($generated@@144 $generated@@359) ($generated@@144 $generated@@360)))))
 :pattern ( ($generated@@142 $generated@@359 $generated@@360))
)))
(assert (forall (($generated@@361 Int) ) (!  (=> (<= 0 $generated@@361) (and ($generated@@358 ($generated@@143 $generated@@361)) (= ($generated@@144 ($generated@@143 $generated@@361)) $generated@@361)))
 :pattern ( ($generated@@143 $generated@@361))
)))
(assert (forall (($generated@@362 T@U) ($generated@@363 T@U) ($generated@@364 T@U) ($generated@@365 T@U) ) (!  (=> (and (and (and (= (type $generated@@362) $generated@@67) (= (type $generated@@363) $generated@@67)) (= (type $generated@@364) $generated@@80)) (= (type $generated@@365) ($generated@@79 $generated@@80 $generated@@81))) (= ($generated@@77 $generated@@364 ($generated@@232 $generated@@362 $generated@@363) $generated@@365) ($generated@@77 $generated@@364 ($generated@@288 $generated@@362 $generated@@363) $generated@@365)))
 :pattern ( ($generated@@77 $generated@@364 ($generated@@232 $generated@@362 $generated@@363) $generated@@365))
)))
(assert (forall (($generated@@366 T@U) ) (! (let (($generated@@367 ($generated@@82 (type $generated@@366))))
 (=> (= (type $generated@@366) ($generated@@79 $generated@@367 $generated@@2)) (= ($generated@@167 $generated@@366) (forall (($generated@@368 T@U) ) (!  (=> (= (type $generated@@368) $generated@@367) (and (<= 0 ($generated ($generated@@84 $generated@@366 $generated@@368))) (<= ($generated ($generated@@84 $generated@@366 $generated@@368)) ($generated@@312 $generated@@366))))
 :pattern ( ($generated@@84 $generated@@366 $generated@@368))
)))))
 :pattern ( ($generated@@167 $generated@@366))
)))
(assert  (=> (<= 1 $generated@@227) (forall (($generated@@369 T@U) ($generated@@370 T@U) ($generated@@371 T@U) ($generated@@372 T@U) ($generated@@373 T@U) ($generated@@374 T@U) ) (!  (=> (and (and (and (and (and (and (= (type $generated@@369) $generated@@67) (= (type $generated@@370) $generated@@67)) (= (type $generated@@371) $generated@@67)) (= (type $generated@@372) $generated@@229)) (= (type $generated@@373) $generated@@80)) (= (type $generated@@374) $generated@@136)) (or ($generated@@230 $generated@@369 $generated@@370 $generated@@371 $generated@@373 ($generated@@263 $generated@@374)) (and (not (= 1 $generated@@227)) (and (not (= $generated@@373 $generated@@231)) ($generated@@140 $generated@@373 ($generated@@232 $generated@@369 $generated@@370)))))) (and (and (=> (< 0 ($generated@@144 $generated@@374)) ($generated@@230 $generated@@369 $generated@@370 $generated@@371 $generated@@373 ($generated@@142 $generated@@374 ($generated@@143 1)))) (=> (=> (< 0 ($generated@@144 $generated@@374)) ($generated@@228 $generated@@369 $generated@@370 $generated@@371 ($generated@@294 $generated@@372) $generated@@373 ($generated@@142 $generated@@374 ($generated@@143 1)))) (=> (= ($generated@@261 0) ($generated@@144 $generated@@374)) (forall (($generated@@375 T@U) ) (!  (=> (and (= (type $generated@@375) $generated@@136) ($generated@@135 $generated@@375 $generated@@374)) ($generated@@230 $generated@@369 $generated@@370 $generated@@371 $generated@@373 $generated@@375))
 :pattern ( ($generated@@228 $generated@@369 $generated@@370 $generated@@371 ($generated@@294 $generated@@372) $generated@@373 $generated@@375))
))))) (= ($generated@@228 $generated@@369 $generated@@370 $generated@@371 ($generated@@294 $generated@@372) $generated@@373 ($generated@@263 $generated@@374))  (and (=> (< 0 ($generated@@144 $generated@@374)) ($generated@@228 $generated@@369 $generated@@370 $generated@@371 ($generated@@294 $generated@@372) $generated@@373 ($generated@@142 $generated@@374 ($generated@@143 1)))) (=> (= ($generated@@261 0) ($generated@@144 $generated@@374)) (forall (($generated@@376 T@U) ) (!  (=> (and (= (type $generated@@376) $generated@@136) ($generated@@135 $generated@@376 $generated@@374)) ($generated@@228 $generated@@369 $generated@@370 $generated@@371 ($generated@@294 $generated@@372) $generated@@373 $generated@@376))
 :pattern ( ($generated@@228 $generated@@369 $generated@@370 $generated@@371 ($generated@@294 $generated@@372) $generated@@373 $generated@@376))
)))))))
 :weight 3
 :pattern ( ($generated@@228 $generated@@369 $generated@@370 $generated@@371 ($generated@@294 $generated@@372) $generated@@373 ($generated@@263 $generated@@374)))
))))
(assert (forall (($generated@@377 T@U) ) (! (let (($generated@@378 ($generated@@322 (type $generated@@377))))
(let (($generated@@379 ($generated@@321 (type $generated@@377))))
 (=> (= (type $generated@@377) ($generated@@320 $generated@@379 $generated@@378)) (or (= $generated@@377 ($generated@@319 $generated@@379 $generated@@378)) (exists (($generated@@380 T@U) ) (!  (and (= (type $generated@@380) $generated@@379) ($generated@@0 ($generated@@84 ($generated@@318 $generated@@377) $generated@@380)))
 :no-pattern (type $generated@@380)
 :no-pattern ($generated $generated@@380)
 :no-pattern ($generated@@0 $generated@@380)
))))))
 :pattern ( ($generated@@318 $generated@@377))
)))
(assert (forall (($generated@@382 T@U) ) (! (let (($generated@@383 ($generated@@322 (type $generated@@382))))
(= (type ($generated@@381 $generated@@382)) ($generated@@79 $generated@@383 $generated@@4)))
 :pattern ( ($generated@@381 $generated@@382))
)))
(assert (forall (($generated@@384 T@U) ) (! (let (($generated@@385 ($generated@@322 (type $generated@@384))))
(let (($generated@@386 ($generated@@321 (type $generated@@384))))
 (=> (= (type $generated@@384) ($generated@@320 $generated@@386 $generated@@385)) (or (= $generated@@384 ($generated@@319 $generated@@386 $generated@@385)) (exists (($generated@@387 T@U) ) (!  (and (= (type $generated@@387) $generated@@385) ($generated@@0 ($generated@@84 ($generated@@381 $generated@@384) $generated@@387)))
 :no-pattern (type $generated@@387)
 :no-pattern ($generated $generated@@387)
 :no-pattern ($generated@@0 $generated@@387)
))))))
 :pattern ( ($generated@@381 $generated@@384))
)))
(assert (forall (($generated@@388 T@U) ) (! (let (($generated@@389 ($generated@@340 (type $generated@@388))))
(let (($generated@@390 ($generated@@339 (type $generated@@388))))
 (=> (= (type $generated@@388) ($generated@@338 $generated@@390 $generated@@389)) (or (= $generated@@388 ($generated@@337 $generated@@390 $generated@@389)) (exists (($generated@@391 T@U) ) (!  (and (= (type $generated@@391) $generated@@390) ($generated@@0 ($generated@@84 ($generated@@336 $generated@@388) $generated@@391)))
 :no-pattern (type $generated@@391)
 :no-pattern ($generated $generated@@391)
 :no-pattern ($generated@@0 $generated@@391)
))))))
 :pattern ( ($generated@@336 $generated@@388))
)))
(assert (forall (($generated@@393 T@U) ) (! (let (($generated@@394 ($generated@@340 (type $generated@@393))))
(= (type ($generated@@392 $generated@@393)) ($generated@@79 $generated@@394 $generated@@4)))
 :pattern ( ($generated@@392 $generated@@393))
)))
(assert (forall (($generated@@395 T@U) ) (! (let (($generated@@396 ($generated@@340 (type $generated@@395))))
(let (($generated@@397 ($generated@@339 (type $generated@@395))))
 (=> (= (type $generated@@395) ($generated@@338 $generated@@397 $generated@@396)) (or (= $generated@@395 ($generated@@337 $generated@@397 $generated@@396)) (exists (($generated@@398 T@U) ) (!  (and (= (type $generated@@398) $generated@@396) ($generated@@0 ($generated@@84 ($generated@@392 $generated@@395) $generated@@398)))
 :no-pattern (type $generated@@398)
 :no-pattern ($generated $generated@@398)
 :no-pattern ($generated@@0 $generated@@398)
))))))
 :pattern ( ($generated@@392 $generated@@395))
)))
(assert  (=> (<= 1 $generated@@227) (forall (($generated@@399 T@U) ($generated@@400 T@U) ($generated@@401 T@U) ($generated@@402 T@U) ($generated@@403 T@U) ($generated@@404 T@U) ) (!  (=> (and (and (and (and (and (and (= (type $generated@@399) $generated@@67) (= (type $generated@@400) $generated@@67)) (= (type $generated@@401) $generated@@67)) (= (type $generated@@402) $generated@@229)) (= (type $generated@@403) $generated@@80)) (= (type $generated@@404) $generated@@136)) (or ($generated@@230 $generated@@399 $generated@@400 $generated@@401 $generated@@403 $generated@@404) (and (not (= 1 $generated@@227)) (and (not (= $generated@@403 $generated@@231)) ($generated@@140 $generated@@403 ($generated@@232 $generated@@399 $generated@@400)))))) (and (and (=> (< 0 ($generated@@144 $generated@@404)) ($generated@@230 $generated@@399 $generated@@400 $generated@@401 $generated@@403 ($generated@@142 $generated@@404 ($generated@@143 1)))) (=> (=> (< 0 ($generated@@144 $generated@@404)) ($generated@@228 $generated@@399 $generated@@400 $generated@@401 $generated@@402 $generated@@403 ($generated@@142 $generated@@404 ($generated@@143 1)))) (=> (= ($generated@@261 0) ($generated@@144 $generated@@404)) (forall (($generated@@405 T@U) ) (!  (=> (and (= (type $generated@@405) $generated@@136) ($generated@@135 $generated@@405 $generated@@404)) ($generated@@230 $generated@@399 $generated@@400 $generated@@401 $generated@@403 $generated@@405))
 :pattern ( ($generated@@228 $generated@@399 $generated@@400 $generated@@401 $generated@@402 $generated@@403 $generated@@405))
))))) (= ($generated@@228 $generated@@399 $generated@@400 $generated@@401 ($generated@@294 $generated@@402) $generated@@403 $generated@@404)  (and (=> (< 0 ($generated@@144 $generated@@404)) ($generated@@228 $generated@@399 $generated@@400 $generated@@401 $generated@@402 $generated@@403 ($generated@@142 $generated@@404 ($generated@@143 1)))) (=> (= ($generated@@261 0) ($generated@@144 $generated@@404)) (forall (($generated@@406 T@U) ) (!  (=> (and (= (type $generated@@406) $generated@@136) ($generated@@135 $generated@@406 $generated@@404)) ($generated@@228 $generated@@399 $generated@@400 $generated@@401 $generated@@402 $generated@@403 $generated@@406))
 :pattern ( ($generated@@228 $generated@@399 $generated@@400 $generated@@401 $generated@@402 $generated@@403 $generated@@406))
)))))))
 :pattern ( ($generated@@228 $generated@@399 $generated@@400 $generated@@401 ($generated@@294 $generated@@402) $generated@@403 $generated@@404))
))))
(assert (forall (($generated@@407 T@U) ($generated@@408 T@U) ) (!  (=> (and (= (type $generated@@407) ($generated@@79 $generated@@136 $generated@@2)) (= (type $generated@@408) $generated@@67)) (= ($generated@@140 $generated@@407 ($generated@@166 $generated@@408)) (forall (($generated@@409 T@U) ) (!  (=> (and (= (type $generated@@409) $generated@@136) (< 0 ($generated ($generated@@84 $generated@@407 $generated@@409)))) ($generated@@242 $generated@@409 $generated@@408))
 :pattern ( ($generated@@84 $generated@@407 $generated@@409))
))))
 :pattern ( ($generated@@140 $generated@@407 ($generated@@166 $generated@@408)))
)))
(assert (forall (($generated@@410 T@U) ($generated@@411 T@U) ) (!  (=> (and (= (type $generated@@410) $generated@@136) (= (type $generated@@411) $generated@@136)) (or (or ($generated@@135 $generated@@410 $generated@@411) (= $generated@@410 $generated@@411)) ($generated@@135 $generated@@411 $generated@@410)))
 :pattern ( ($generated@@135 $generated@@410 $generated@@411) ($generated@@135 $generated@@411 $generated@@410))
)))
(assert (forall (($generated@@412 T@U) ($generated@@413 T@U) ($generated@@414 T@U) ) (!  (=> (and (and (= (type $generated@@412) ($generated@@79 $generated@@136 $generated@@4)) (= (type $generated@@413) $generated@@67)) (= (type $generated@@414) ($generated@@79 $generated@@80 $generated@@81))) (= ($generated@@77 $generated@@412 ($generated@@251 $generated@@413) $generated@@414) (forall (($generated@@415 T@U) ) (!  (=> (and (= (type $generated@@415) $generated@@136) ($generated@@0 ($generated@@84 $generated@@412 $generated@@415))) ($generated@@268 $generated@@415 $generated@@413 $generated@@414))
 :pattern ( ($generated@@84 $generated@@412 $generated@@415))
))))
 :pattern ( ($generated@@77 $generated@@412 ($generated@@251 $generated@@413) $generated@@414))
)))
(assert (forall (($generated@@416 T@U) ($generated@@417 T@U) ($generated@@418 T@U) ) (!  (=> (and (and (= (type $generated@@416) ($generated@@79 $generated@@136 $generated@@4)) (= (type $generated@@417) $generated@@67)) (= (type $generated@@418) ($generated@@79 $generated@@80 $generated@@81))) (= ($generated@@77 $generated@@416 ($generated@@256 $generated@@417) $generated@@418) (forall (($generated@@419 T@U) ) (!  (=> (and (= (type $generated@@419) $generated@@136) ($generated@@0 ($generated@@84 $generated@@416 $generated@@419))) ($generated@@268 $generated@@419 $generated@@417 $generated@@418))
 :pattern ( ($generated@@84 $generated@@416 $generated@@419))
))))
 :pattern ( ($generated@@77 $generated@@416 ($generated@@256 $generated@@417) $generated@@418))
)))
(assert (forall (($generated@@420 T@U) ) (! (let (($generated@@421 (type $generated@@420)))
(= ($generated ($generated@@84 ($generated@@313 $generated@@421) $generated@@420)) 0))
 :pattern ( (let (($generated@@421 (type $generated@@420)))
($generated@@84 ($generated@@313 $generated@@421) $generated@@420)))
)))
(assert  (and (and (forall (($generated@@425 T@U) ) (! (= (type ($generated@@422 $generated@@425)) ($generated@@79 $generated@@136 $generated@@4))
 :pattern ( ($generated@@422 $generated@@425))
)) (forall (($generated@@426 T@T) ($generated@@427 T@U) ) (! (= (type ($generated@@423 $generated@@426 $generated@@427)) $generated@@426)
 :pattern ( ($generated@@423 $generated@@426 $generated@@427))
))) (forall (($generated@@428 T@U) ) (! (let (($generated@@429 ($generated@@322 (type $generated@@428))))
(let (($generated@@430 ($generated@@321 (type $generated@@428))))
(= (type ($generated@@424 $generated@@428)) ($generated@@79 $generated@@430 $generated@@429))))
 :pattern ( ($generated@@424 $generated@@428))
))))
(assert (forall (($generated@@431 T@U) ($generated@@432 T@U) ) (!  (=> (and (= (type $generated@@431) ($generated@@320 $generated@@136 $generated@@136)) (= (type $generated@@432) $generated@@136)) (= ($generated@@0 ($generated@@84 ($generated@@422 $generated@@431) $generated@@432))  (and ($generated@@0 ($generated@@84 ($generated@@318 $generated@@431) ($generated@@160 ($generated@@423 $generated@@153 $generated@@432)))) (= ($generated@@84 ($generated@@424 $generated@@431) ($generated@@160 ($generated@@423 $generated@@153 $generated@@432))) ($generated@@161 ($generated@@423 $generated@@153 $generated@@432))))))
 :pattern ( ($generated@@84 ($generated@@422 $generated@@431) $generated@@432))
)))
(assert  (and (forall (($generated@@435 T@U) ) (! (= (type ($generated@@433 $generated@@435)) ($generated@@79 $generated@@136 $generated@@4))
 :pattern ( ($generated@@433 $generated@@435))
)) (forall (($generated@@436 T@U) ) (! (let (($generated@@437 ($generated@@340 (type $generated@@436))))
(let (($generated@@438 ($generated@@339 (type $generated@@436))))
(= (type ($generated@@434 $generated@@436)) ($generated@@79 $generated@@438 $generated@@437))))
 :pattern ( ($generated@@434 $generated@@436))
))))
(assert (forall (($generated@@439 T@U) ($generated@@440 T@U) ) (!  (=> (and (= (type $generated@@439) ($generated@@338 $generated@@136 $generated@@136)) (= (type $generated@@440) $generated@@136)) (= ($generated@@0 ($generated@@84 ($generated@@433 $generated@@439) $generated@@440))  (and ($generated@@0 ($generated@@84 ($generated@@336 $generated@@439) ($generated@@160 ($generated@@423 $generated@@153 $generated@@440)))) (= ($generated@@84 ($generated@@434 $generated@@439) ($generated@@160 ($generated@@423 $generated@@153 $generated@@440))) ($generated@@161 ($generated@@423 $generated@@153 $generated@@440))))))
 :pattern ( ($generated@@84 ($generated@@433 $generated@@439) $generated@@440))
)))
(assert (forall (($generated@@441 T@U) ($generated@@442 T@U) ) (! (let (($generated@@443 (type $generated@@442)))
(let (($generated@@444 ($generated@@321 (type $generated@@441))))
 (=> (= (type $generated@@441) ($generated@@320 $generated@@444 $generated@@443)) (= ($generated@@0 ($generated@@84 ($generated@@381 $generated@@441) $generated@@442)) (exists (($generated@@445 T@U) ) (!  (and (= (type $generated@@445) $generated@@444) (and ($generated@@0 ($generated@@84 ($generated@@318 $generated@@441) $generated@@445)) (= $generated@@442 ($generated@@84 ($generated@@424 $generated@@441) $generated@@445))))
 :pattern ( ($generated@@84 ($generated@@318 $generated@@441) $generated@@445))
 :pattern ( ($generated@@84 ($generated@@424 $generated@@441) $generated@@445))
))))))
 :pattern ( ($generated@@84 ($generated@@381 $generated@@441) $generated@@442))
)))
(assert (forall (($generated@@446 T@U) ($generated@@447 T@U) ) (! (let (($generated@@448 (type $generated@@447)))
(let (($generated@@449 ($generated@@339 (type $generated@@446))))
 (=> (= (type $generated@@446) ($generated@@338 $generated@@449 $generated@@448)) (= ($generated@@0 ($generated@@84 ($generated@@392 $generated@@446) $generated@@447)) (exists (($generated@@450 T@U) ) (!  (and (= (type $generated@@450) $generated@@449) (and ($generated@@0 ($generated@@84 ($generated@@336 $generated@@446) $generated@@450)) (= $generated@@447 ($generated@@84 ($generated@@434 $generated@@446) $generated@@450))))
 :pattern ( ($generated@@84 ($generated@@336 $generated@@446) $generated@@450))
 :pattern ( ($generated@@84 ($generated@@434 $generated@@446) $generated@@450))
))))))
 :pattern ( ($generated@@84 ($generated@@392 $generated@@446) $generated@@447))
)))
(assert (forall (($generated@@452 T@U) ($generated@@453 T@U) ) (! (= (type ($generated@@451 $generated@@452 $generated@@453)) $generated@@67)
 :pattern ( ($generated@@451 $generated@@452 $generated@@453))
)))
(assert (forall (($generated@@454 T@U) ($generated@@455 T@U) ($generated@@456 T@U) ($generated@@457 T@U) ) (!  (=> (and (and (and (= (type $generated@@454) ($generated@@320 $generated@@136 $generated@@136)) (= (type $generated@@455) $generated@@67)) (= (type $generated@@456) $generated@@67)) (= (type $generated@@457) ($generated@@79 $generated@@80 $generated@@81))) (= ($generated@@77 $generated@@454 ($generated@@451 $generated@@455 $generated@@456) $generated@@457) (forall (($generated@@458 T@U) ) (!  (=> (and (= (type $generated@@458) $generated@@136) ($generated@@0 ($generated@@84 ($generated@@318 $generated@@454) $generated@@458))) (and ($generated@@268 ($generated@@84 ($generated@@424 $generated@@454) $generated@@458) $generated@@456 $generated@@457) ($generated@@268 $generated@@458 $generated@@455 $generated@@457)))
 :pattern ( ($generated@@84 ($generated@@424 $generated@@454) $generated@@458))
 :pattern ( ($generated@@84 ($generated@@318 $generated@@454) $generated@@458))
))))
 :pattern ( ($generated@@77 $generated@@454 ($generated@@451 $generated@@455 $generated@@456) $generated@@457))
)))
(assert (forall (($generated@@460 T@U) ($generated@@461 T@U) ) (! (= (type ($generated@@459 $generated@@460 $generated@@461)) $generated@@67)
 :pattern ( ($generated@@459 $generated@@460 $generated@@461))
)))
(assert (forall (($generated@@462 T@U) ($generated@@463 T@U) ($generated@@464 T@U) ($generated@@465 T@U) ) (!  (=> (and (and (and (= (type $generated@@462) ($generated@@338 $generated@@136 $generated@@136)) (= (type $generated@@463) $generated@@67)) (= (type $generated@@464) $generated@@67)) (= (type $generated@@465) ($generated@@79 $generated@@80 $generated@@81))) (= ($generated@@77 $generated@@462 ($generated@@459 $generated@@463 $generated@@464) $generated@@465) (forall (($generated@@466 T@U) ) (!  (=> (and (= (type $generated@@466) $generated@@136) ($generated@@0 ($generated@@84 ($generated@@336 $generated@@462) $generated@@466))) (and ($generated@@268 ($generated@@84 ($generated@@434 $generated@@462) $generated@@466) $generated@@464 $generated@@465) ($generated@@268 $generated@@466 $generated@@463 $generated@@465)))
 :pattern ( ($generated@@84 ($generated@@434 $generated@@462) $generated@@466))
 :pattern ( ($generated@@84 ($generated@@336 $generated@@462) $generated@@466))
))))
 :pattern ( ($generated@@77 $generated@@462 ($generated@@459 $generated@@463 $generated@@464) $generated@@465))
)))
(assert (forall (($generated@@468 T@T) ) (! (= (type ($generated@@467 $generated@@468)) ($generated@@79 $generated@@468 $generated@@4))
 :pattern ( ($generated@@467 $generated@@468))
)))
(assert (forall (($generated@@469 T@U) ) (! (let (($generated@@470 ($generated@@340 (type $generated@@469))))
(let (($generated@@471 ($generated@@339 (type $generated@@469))))
 (=> (= (type $generated@@469) ($generated@@338 $generated@@471 $generated@@470)) (= (= $generated@@469 ($generated@@337 $generated@@471 $generated@@470)) (= ($generated@@336 $generated@@469) ($generated@@467 $generated@@471))))))
 :pattern ( ($generated@@336 $generated@@469))
)))
(assert (forall (($generated@@472 T@U) ) (! (let (($generated@@473 ($generated@@340 (type $generated@@472))))
(let (($generated@@474 ($generated@@339 (type $generated@@472))))
 (=> (= (type $generated@@472) ($generated@@338 $generated@@474 $generated@@473)) (= (= $generated@@472 ($generated@@337 $generated@@474 $generated@@473)) (= ($generated@@392 $generated@@472) ($generated@@467 $generated@@473))))))
 :pattern ( ($generated@@392 $generated@@472))
)))
(assert (forall (($generated@@475 T@U) ) (! (let (($generated@@476 ($generated@@340 (type $generated@@475))))
(let (($generated@@477 ($generated@@339 (type $generated@@475))))
 (=> (= (type $generated@@475) ($generated@@338 $generated@@477 $generated@@476)) (= (= $generated@@475 ($generated@@337 $generated@@477 $generated@@476)) (= ($generated@@433 $generated@@475) ($generated@@467 $generated@@136))))))
 :pattern ( ($generated@@433 $generated@@475))
)))
(assert (forall (($generated@@478 T@U) ) (! (let (($generated@@479 ($generated@@322 (type $generated@@478))))
(let (($generated@@480 ($generated@@321 (type $generated@@478))))
 (=> (= (type $generated@@478) ($generated@@320 $generated@@480 $generated@@479)) (or (= $generated@@478 ($generated@@319 $generated@@480 $generated@@479)) (exists (($generated@@481 T@U) ($generated@@482 T@U) ) (!  (and (and (= (type $generated@@481) $generated@@136) (= (type $generated@@482) $generated@@136)) ($generated@@0 ($generated@@84 ($generated@@422 $generated@@478) ($generated@@302 ($generated@@241 $generated@@481 $generated@@482)))))
 :no-pattern (type $generated@@481)
 :no-pattern (type $generated@@482)
 :no-pattern ($generated $generated@@481)
 :no-pattern ($generated@@0 $generated@@481)
 :no-pattern ($generated $generated@@482)
 :no-pattern ($generated@@0 $generated@@482)
))))))
 :pattern ( ($generated@@422 $generated@@478))
)))
(assert (forall (($generated@@483 T@U) ) (! (let (($generated@@484 ($generated@@340 (type $generated@@483))))
(let (($generated@@485 ($generated@@339 (type $generated@@483))))
 (=> (= (type $generated@@483) ($generated@@338 $generated@@485 $generated@@484)) (or (= $generated@@483 ($generated@@337 $generated@@485 $generated@@484)) (exists (($generated@@486 T@U) ($generated@@487 T@U) ) (!  (and (and (= (type $generated@@486) $generated@@136) (= (type $generated@@487) $generated@@136)) ($generated@@0 ($generated@@84 ($generated@@433 $generated@@483) ($generated@@302 ($generated@@241 $generated@@486 $generated@@487)))))
 :no-pattern (type $generated@@486)
 :no-pattern (type $generated@@487)
 :no-pattern ($generated $generated@@486)
 :no-pattern ($generated@@0 $generated@@486)
 :no-pattern ($generated $generated@@487)
 :no-pattern ($generated@@0 $generated@@487)
))))))
 :pattern ( ($generated@@433 $generated@@483))
)))
(assert (forall (($generated@@488 T@U) ) (!  (=> (and (= (type $generated@@488) $generated@@136) ($generated@@242 $generated@@488 $generated@@46)) (and (= ($generated@@302 ($generated@@423 $generated@@2 $generated@@488)) $generated@@488) ($generated@@140 ($generated@@423 $generated@@2 $generated@@488) $generated@@46)))
 :pattern ( ($generated@@242 $generated@@488 $generated@@46))
)))
(assert (forall (($generated@@489 T@U) ) (!  (=> (and (= (type $generated@@489) $generated@@136) ($generated@@242 $generated@@489 $generated@@47)) (and (= ($generated@@302 ($generated@@423 $generated@@3 $generated@@489)) $generated@@489) ($generated@@140 ($generated@@423 $generated@@3 $generated@@489) $generated@@47)))
 :pattern ( ($generated@@242 $generated@@489 $generated@@47))
)))
(assert (forall (($generated@@490 T@U) ) (!  (=> (and (= (type $generated@@490) $generated@@136) ($generated@@242 $generated@@490 $generated@@44)) (and (= ($generated@@302 ($generated@@423 $generated@@4 $generated@@490)) $generated@@490) ($generated@@140 ($generated@@423 $generated@@4 $generated@@490) $generated@@44)))
 :pattern ( ($generated@@242 $generated@@490 $generated@@44))
)))
(assert (= ($generated@@1 $generated@@491) 21))
(assert (forall (($generated@@492 T@U) ) (!  (=> (and (= (type $generated@@492) $generated@@136) ($generated@@242 $generated@@492 $generated@@45)) (and (= ($generated@@302 ($generated@@423 $generated@@491 $generated@@492)) $generated@@492) ($generated@@140 ($generated@@423 $generated@@491 $generated@@492) $generated@@45)))
 :pattern ( ($generated@@242 $generated@@492 $generated@@45))
)))
(assert (forall (($generated@@493 T@U) ($generated@@494 T@U) ) (!  (=> (= (type $generated@@494) $generated@@67) (= ($generated@@242 ($generated@@302 $generated@@493) $generated@@494) ($generated@@140 $generated@@493 $generated@@494)))
 :pattern ( ($generated@@242 ($generated@@302 $generated@@493) $generated@@494))
)))
(assert (forall (($generated@@495 T@U) ) (!  (=> (= (type $generated@@495) $generated@@136) (<= 0 ($generated@@144 $generated@@495)))
 :pattern ( ($generated@@144 $generated@@495))
)))
(assert (forall (($generated@@496 T@U) ) (! (let (($generated@@497 ($generated@@82 (type $generated@@496))))
 (=> (= (type $generated@@496) ($generated@@79 $generated@@497 $generated@@2)) (<= 0 ($generated@@312 $generated@@496))))
 :pattern ( ($generated@@312 $generated@@496))
)))
(assert (forall (($generated@@498 T@U) ) (! (let (($generated@@499 ($generated@@283 (type $generated@@498))))
 (=> (= (type $generated@@498) ($generated@@282 $generated@@499)) (<= 0 ($generated@@281 $generated@@498))))
 :pattern ( ($generated@@281 $generated@@498))
)))
(assert (forall (($generated@@501 T@U) ) (! (= (type ($generated@@500 $generated@@501)) $generated@@67)
 :pattern ( ($generated@@500 $generated@@501))
)))
(assert (forall (($generated@@502 T@U) ($generated@@503 T@U) ) (!  (=> (and (= (type $generated@@502) $generated@@67) (= (type $generated@@503) $generated@@67)) (= ($generated@@500 ($generated@@451 $generated@@502 $generated@@503)) $generated@@502))
 :pattern ( ($generated@@451 $generated@@502 $generated@@503))
)))
(assert (forall (($generated@@505 T@U) ) (! (= (type ($generated@@504 $generated@@505)) $generated@@67)
 :pattern ( ($generated@@504 $generated@@505))
)))
(assert (forall (($generated@@506 T@U) ($generated@@507 T@U) ) (!  (=> (and (= (type $generated@@506) $generated@@67) (= (type $generated@@507) $generated@@67)) (= ($generated@@504 ($generated@@451 $generated@@506 $generated@@507)) $generated@@507))
 :pattern ( ($generated@@451 $generated@@506 $generated@@507))
)))
(assert (forall (($generated@@508 T@U) ($generated@@509 T@U) ) (!  (=> (and (= (type $generated@@508) $generated@@67) (= (type $generated@@509) $generated@@67)) (= ($generated@@75 ($generated@@451 $generated@@508 $generated@@509)) $generated@@58))
 :pattern ( ($generated@@451 $generated@@508 $generated@@509))
)))
(assert (forall (($generated@@511 T@U) ) (! (= (type ($generated@@510 $generated@@511)) $generated@@67)
 :pattern ( ($generated@@510 $generated@@511))
)))
(assert (forall (($generated@@512 T@U) ($generated@@513 T@U) ) (!  (=> (and (= (type $generated@@512) $generated@@67) (= (type $generated@@513) $generated@@67)) (= ($generated@@510 ($generated@@459 $generated@@512 $generated@@513)) $generated@@512))
 :pattern ( ($generated@@459 $generated@@512 $generated@@513))
)))
(assert (forall (($generated@@515 T@U) ) (! (= (type ($generated@@514 $generated@@515)) $generated@@67)
 :pattern ( ($generated@@514 $generated@@515))
)))
(assert (forall (($generated@@516 T@U) ($generated@@517 T@U) ) (!  (=> (and (= (type $generated@@516) $generated@@67) (= (type $generated@@517) $generated@@67)) (= ($generated@@514 ($generated@@459 $generated@@516 $generated@@517)) $generated@@517))
 :pattern ( ($generated@@459 $generated@@516 $generated@@517))
)))
(assert (forall (($generated@@518 T@U) ($generated@@519 T@U) ) (!  (=> (and (= (type $generated@@518) $generated@@67) (= (type $generated@@519) $generated@@67)) (= ($generated@@75 ($generated@@459 $generated@@518 $generated@@519)) $generated@@59))
 :pattern ( ($generated@@459 $generated@@518 $generated@@519))
)))
(assert (forall (($generated@@520 T@U) ($generated@@521 T@U) ) (!  (=> (and (= (type $generated@@520) $generated@@136) (= (type $generated@@521) $generated@@136)) (= ($generated@@274 ($generated@@241 $generated@@520 $generated@@521)) $generated@@61))
 :pattern ( ($generated@@241 $generated@@520 $generated@@521))
)))
(assert (forall (($generated@@523 T@U) ) (! (= (type ($generated@@522 $generated@@523)) $generated@@67)
 :pattern ( ($generated@@522 $generated@@523))
)))
(assert (forall (($generated@@524 T@U) ($generated@@525 T@U) ) (!  (=> (and (= (type $generated@@524) $generated@@67) (= (type $generated@@525) $generated@@67)) (= ($generated@@522 ($generated@@152 $generated@@524 $generated@@525)) $generated@@524))
 :pattern ( ($generated@@152 $generated@@524 $generated@@525))
)))
(assert (forall (($generated@@527 T@U) ) (! (= (type ($generated@@526 $generated@@527)) $generated@@67)
 :pattern ( ($generated@@526 $generated@@527))
)))
(assert (forall (($generated@@528 T@U) ($generated@@529 T@U) ) (!  (=> (and (= (type $generated@@528) $generated@@67) (= (type $generated@@529) $generated@@67)) (= ($generated@@526 ($generated@@152 $generated@@528 $generated@@529)) $generated@@529))
 :pattern ( ($generated@@152 $generated@@528 $generated@@529))
)))
(assert (forall (($generated@@530 T@U) ($generated@@531 T@U) ) (!  (=> (and (= (type $generated@@530) $generated@@136) (= (type $generated@@531) $generated@@136)) (= ($generated@@160 ($generated@@241 $generated@@530 $generated@@531)) $generated@@530))
 :pattern ( ($generated@@241 $generated@@530 $generated@@531))
)))
(assert (forall (($generated@@532 T@U) ($generated@@533 T@U) ) (!  (=> (and (= (type $generated@@532) $generated@@136) (= (type $generated@@533) $generated@@136)) (= ($generated@@161 ($generated@@241 $generated@@532 $generated@@533)) $generated@@533))
 :pattern ( ($generated@@241 $generated@@532 $generated@@533))
)))
(assert (forall (($generated@@535 T@U) ) (! (= (type ($generated@@534 $generated@@535)) $generated@@67)
 :pattern ( ($generated@@534 $generated@@535))
)))
(assert (forall (($generated@@536 T@U) ($generated@@537 T@U) ) (!  (=> (and (= (type $generated@@536) $generated@@67) (= (type $generated@@537) $generated@@67)) (= ($generated@@534 ($generated@@288 $generated@@536 $generated@@537)) $generated@@536))
 :pattern ( ($generated@@288 $generated@@536 $generated@@537))
)))
(assert (forall (($generated@@539 T@U) ) (! (= (type ($generated@@538 $generated@@539)) $generated@@67)
 :pattern ( ($generated@@538 $generated@@539))
)))
(assert (forall (($generated@@540 T@U) ($generated@@541 T@U) ) (!  (=> (and (= (type $generated@@540) $generated@@67) (= (type $generated@@541) $generated@@67)) (= ($generated@@538 ($generated@@288 $generated@@540 $generated@@541)) $generated@@541))
 :pattern ( ($generated@@288 $generated@@540 $generated@@541))
)))
(assert (forall (($generated@@543 T@U) ) (! (= (type ($generated@@542 $generated@@543)) $generated@@67)
 :pattern ( ($generated@@542 $generated@@543))
)))
(assert (forall (($generated@@544 T@U) ($generated@@545 T@U) ) (!  (=> (and (= (type $generated@@544) $generated@@67) (= (type $generated@@545) $generated@@67)) (= ($generated@@542 ($generated@@232 $generated@@544 $generated@@545)) $generated@@544))
 :pattern ( ($generated@@232 $generated@@544 $generated@@545))
)))
(assert (forall (($generated@@547 T@U) ) (! (= (type ($generated@@546 $generated@@547)) $generated@@67)
 :pattern ( ($generated@@546 $generated@@547))
)))
(assert (forall (($generated@@548 T@U) ($generated@@549 T@U) ) (!  (=> (and (= (type $generated@@548) $generated@@67) (= (type $generated@@549) $generated@@67)) (= ($generated@@546 ($generated@@232 $generated@@548 $generated@@549)) $generated@@549))
 :pattern ( ($generated@@232 $generated@@548 $generated@@549))
)))
(assert  (and (forall (($generated@@552 T@U) ) (! (= (type ($generated@@550 $generated@@552)) $generated@@67)
 :pattern ( ($generated@@550 $generated@@552))
)) (forall (($generated@@553 T@U) ($generated@@554 Int) ) (! (let (($generated@@555 ($generated@@283 (type $generated@@553))))
(= (type ($generated@@551 $generated@@553 $generated@@554)) $generated@@555))
 :pattern ( ($generated@@551 $generated@@553 $generated@@554))
))))
(assert (forall (($generated@@556 T@U) ($generated@@557 T@U) ($generated@@558 T@U) ) (!  (=> (and (and (= (type $generated@@556) ($generated@@282 $generated@@136)) (= (type $generated@@557) $generated@@67)) (= (type $generated@@558) ($generated@@79 $generated@@80 $generated@@81))) (= ($generated@@77 $generated@@556 ($generated@@550 $generated@@557) $generated@@558) (forall (($generated@@559 Int) ) (!  (=> (and (<= 0 $generated@@559) (< $generated@@559 ($generated@@281 $generated@@556))) ($generated@@268 ($generated@@551 $generated@@556 $generated@@559) $generated@@557 $generated@@558))
 :pattern ( ($generated@@551 $generated@@556 $generated@@559))
))))
 :pattern ( ($generated@@77 $generated@@556 ($generated@@550 $generated@@557) $generated@@558))
)))
(assert (forall (($generated@@561 Int) ) (! (= ($generated@@560 ($generated@@78 $generated@@561)) $generated@@561)
 :pattern ( ($generated@@78 $generated@@561))
)))
(assert (forall (($generated@@563 T@U) ) (! (= (type ($generated@@562 $generated@@563)) $generated@@67)
 :pattern ( ($generated@@562 $generated@@563))
)))
(assert (forall (($generated@@564 T@U) ) (!  (=> (= (type $generated@@564) $generated@@67) (= ($generated@@562 ($generated@@251 $generated@@564)) $generated@@564))
 :pattern ( ($generated@@251 $generated@@564))
)))
(assert (forall (($generated@@565 T@U) ) (!  (=> (= (type $generated@@565) $generated@@67) (= ($generated@@75 ($generated@@251 $generated@@565)) $generated@@54))
 :pattern ( ($generated@@251 $generated@@565))
)))
(assert (forall (($generated@@567 T@U) ) (! (= (type ($generated@@566 $generated@@567)) $generated@@67)
 :pattern ( ($generated@@566 $generated@@567))
)))
(assert (forall (($generated@@568 T@U) ) (!  (=> (= (type $generated@@568) $generated@@67) (= ($generated@@566 ($generated@@256 $generated@@568)) $generated@@568))
 :pattern ( ($generated@@256 $generated@@568))
)))
(assert (forall (($generated@@569 T@U) ) (!  (=> (= (type $generated@@569) $generated@@67) (= ($generated@@75 ($generated@@256 $generated@@569)) $generated@@55))
 :pattern ( ($generated@@256 $generated@@569))
)))
(assert (forall (($generated@@571 T@U) ) (! (= (type ($generated@@570 $generated@@571)) $generated@@67)
 :pattern ( ($generated@@570 $generated@@571))
)))
(assert (forall (($generated@@572 T@U) ) (!  (=> (= (type $generated@@572) $generated@@67) (= ($generated@@570 ($generated@@166 $generated@@572)) $generated@@572))
 :pattern ( ($generated@@166 $generated@@572))
)))
(assert (forall (($generated@@573 T@U) ) (!  (=> (= (type $generated@@573) $generated@@67) (= ($generated@@75 ($generated@@166 $generated@@573)) $generated@@56))
 :pattern ( ($generated@@166 $generated@@573))
)))
(assert (forall (($generated@@575 T@U) ) (! (= (type ($generated@@574 $generated@@575)) $generated@@67)
 :pattern ( ($generated@@574 $generated@@575))
)))
(assert (forall (($generated@@576 T@U) ) (!  (=> (= (type $generated@@576) $generated@@67) (= ($generated@@574 ($generated@@550 $generated@@576)) $generated@@576))
 :pattern ( ($generated@@550 $generated@@576))
)))
(assert (forall (($generated@@577 T@U) ) (!  (=> (= (type $generated@@577) $generated@@67) (= ($generated@@75 ($generated@@550 $generated@@577)) $generated@@57))
 :pattern ( ($generated@@550 $generated@@577))
)))
(assert (forall (($generated@@578 T@U) ) (! (let (($generated@@579 (type $generated@@578)))
(= ($generated@@423 $generated@@579 ($generated@@302 $generated@@578)) $generated@@578))
 :pattern ( ($generated@@302 $generated@@578))
)))
(assert (forall (($generated@@580 T@U) ($generated@@581 T@U) ($generated@@582 T@U) ) (!  (=> (and (and (= (type $generated@@580) ($generated@@320 $generated@@136 $generated@@136)) (= (type $generated@@581) $generated@@67)) (= (type $generated@@582) $generated@@67)) (= ($generated@@140 $generated@@580 ($generated@@451 $generated@@581 $generated@@582)) (forall (($generated@@583 T@U) ) (!  (=> (and (= (type $generated@@583) $generated@@136) ($generated@@0 ($generated@@84 ($generated@@318 $generated@@580) $generated@@583))) (and ($generated@@242 ($generated@@84 ($generated@@424 $generated@@580) $generated@@583) $generated@@582) ($generated@@242 $generated@@583 $generated@@581)))
 :pattern ( ($generated@@84 ($generated@@424 $generated@@580) $generated@@583))
 :pattern ( ($generated@@84 ($generated@@318 $generated@@580) $generated@@583))
))))
 :pattern ( ($generated@@140 $generated@@580 ($generated@@451 $generated@@581 $generated@@582)))
)))
(assert (forall (($generated@@584 T@U) ($generated@@585 T@U) ($generated@@586 T@U) ) (!  (=> (and (and (= (type $generated@@584) ($generated@@338 $generated@@136 $generated@@136)) (= (type $generated@@585) $generated@@67)) (= (type $generated@@586) $generated@@67)) (= ($generated@@140 $generated@@584 ($generated@@459 $generated@@585 $generated@@586)) (forall (($generated@@587 T@U) ) (!  (=> (and (= (type $generated@@587) $generated@@136) ($generated@@0 ($generated@@84 ($generated@@336 $generated@@584) $generated@@587))) (and ($generated@@242 ($generated@@84 ($generated@@434 $generated@@584) $generated@@587) $generated@@586) ($generated@@242 $generated@@587 $generated@@585)))
 :pattern ( ($generated@@84 ($generated@@434 $generated@@584) $generated@@587))
 :pattern ( ($generated@@84 ($generated@@336 $generated@@584) $generated@@587))
))))
 :pattern ( ($generated@@140 $generated@@584 ($generated@@459 $generated@@585 $generated@@586)))
)))
(assert (forall (($generated@@588 T@U) ($generated@@589 T@U) ) (!  (=> (and (= (type $generated@@588) $generated@@136) (= (type $generated@@589) $generated@@136)) (and (and (and (=> ($generated@@135 $generated@@588 $generated@@589) (not (= $generated@@588 $generated@@589))) (=> (and ($generated@@358 $generated@@588) (not ($generated@@358 $generated@@589))) ($generated@@135 $generated@@588 $generated@@589))) (=> (and ($generated@@358 $generated@@588) ($generated@@358 $generated@@589)) (= ($generated@@135 $generated@@588 $generated@@589) (< ($generated@@144 $generated@@588) ($generated@@144 $generated@@589))))) (=> (and ($generated@@135 $generated@@588 $generated@@589) ($generated@@358 $generated@@589)) ($generated@@358 $generated@@588))))
 :pattern ( ($generated@@135 $generated@@588 $generated@@589))
)))
(assert (forall (($generated@@592 T@U) ($generated@@593 T@U) ) (!  (=> (and (= (type $generated@@592) $generated@@136) (= (type $generated@@593) $generated@@136)) (< ($generated@@590 $generated@@592) ($generated@@591 ($generated@@241 $generated@@592 $generated@@593))))
 :pattern ( ($generated@@241 $generated@@592 $generated@@593))
)))
(assert (forall (($generated@@594 T@U) ($generated@@595 T@U) ) (!  (=> (and (= (type $generated@@594) $generated@@136) (= (type $generated@@595) $generated@@136)) (< ($generated@@590 $generated@@595) ($generated@@591 ($generated@@241 $generated@@594 $generated@@595))))
 :pattern ( ($generated@@241 $generated@@594 $generated@@595))
)))
(assert (forall (($generated@@596 T@U) ($generated@@597 T@U) ($generated@@598 T@U) ) (!  (=> (and (and (and (= (type $generated@@596) $generated@@136) (= (type $generated@@597) $generated@@67)) (= (type $generated@@598) $generated@@67)) ($generated@@242 $generated@@596 ($generated@@451 $generated@@597 $generated@@598))) (and (= ($generated@@302 ($generated@@423 ($generated@@320 $generated@@136 $generated@@136) $generated@@596)) $generated@@596) ($generated@@140 ($generated@@423 ($generated@@320 $generated@@136 $generated@@136) $generated@@596) ($generated@@451 $generated@@597 $generated@@598))))
 :pattern ( ($generated@@242 $generated@@596 ($generated@@451 $generated@@597 $generated@@598)))
)))
(assert (forall (($generated@@599 T@U) ($generated@@600 T@U) ($generated@@601 T@U) ) (!  (=> (and (and (and (= (type $generated@@599) $generated@@136) (= (type $generated@@600) $generated@@67)) (= (type $generated@@601) $generated@@67)) ($generated@@242 $generated@@599 ($generated@@459 $generated@@600 $generated@@601))) (and (= ($generated@@302 ($generated@@423 ($generated@@338 $generated@@136 $generated@@136) $generated@@599)) $generated@@599) ($generated@@140 ($generated@@423 ($generated@@338 $generated@@136 $generated@@136) $generated@@599) ($generated@@459 $generated@@600 $generated@@601))))
 :pattern ( ($generated@@242 $generated@@599 ($generated@@459 $generated@@600 $generated@@601)))
)))
(assert (forall (($generated@@602 T@U) ($generated@@603 T@U) ($generated@@604 T@U) ) (!  (=> (and (and (and (= (type $generated@@602) $generated@@67) (= (type $generated@@603) $generated@@67)) (= (type $generated@@604) $generated@@136)) ($generated@@242 $generated@@604 ($generated@@152 $generated@@602 $generated@@603))) (and (= ($generated@@302 ($generated@@423 $generated@@153 $generated@@604)) $generated@@604) ($generated@@140 ($generated@@423 $generated@@153 $generated@@604) ($generated@@152 $generated@@602 $generated@@603))))
 :pattern ( ($generated@@242 $generated@@604 ($generated@@152 $generated@@602 $generated@@603)))
)))
(assert (forall (($generated@@605 T@U) ($generated@@606 T@U) ($generated@@607 T@U) ) (!  (=> (and (and (and (= (type $generated@@605) $generated@@67) (= (type $generated@@606) $generated@@67)) (= (type $generated@@607) $generated@@136)) ($generated@@242 $generated@@607 ($generated@@288 $generated@@605 $generated@@606))) (and (= ($generated@@302 ($generated@@423 $generated@@80 $generated@@607)) $generated@@607) ($generated@@140 ($generated@@423 $generated@@80 $generated@@607) ($generated@@288 $generated@@605 $generated@@606))))
 :pattern ( ($generated@@242 $generated@@607 ($generated@@288 $generated@@605 $generated@@606)))
)))
(assert (forall (($generated@@608 T@U) ($generated@@609 T@U) ($generated@@610 T@U) ) (!  (=> (and (and (and (= (type $generated@@608) $generated@@67) (= (type $generated@@609) $generated@@67)) (= (type $generated@@610) $generated@@136)) ($generated@@242 $generated@@610 ($generated@@232 $generated@@608 $generated@@609))) (and (= ($generated@@302 ($generated@@423 $generated@@80 $generated@@610)) $generated@@610) ($generated@@140 ($generated@@423 $generated@@80 $generated@@610) ($generated@@232 $generated@@608 $generated@@609))))
 :pattern ( ($generated@@242 $generated@@610 ($generated@@232 $generated@@608 $generated@@609)))
)))
(assert (forall (($generated@@611 T@U) ) (! (let (($generated@@612 (type $generated@@611)))
 (not ($generated@@0 ($generated@@84 ($generated@@467 $generated@@612) $generated@@611))))
 :pattern ( (let (($generated@@612 (type $generated@@611)))
($generated@@84 ($generated@@467 $generated@@612) $generated@@611)))
)))
(assert (forall (($generated@@614 T@U) ) (! (= (type ($generated@@613 $generated@@614)) $generated@@72)
 :pattern ( ($generated@@613 $generated@@614))
)))
(assert (forall (($generated@@615 T@U) ($generated@@616 T@U) ) (!  (=> (and (= (type $generated@@615) $generated@@67) (= (type $generated@@616) $generated@@67)) (and (= ($generated@@75 ($generated@@152 $generated@@615 $generated@@616)) $generated@@62) (= ($generated@@613 ($generated@@152 $generated@@615 $generated@@616)) $generated@@65)))
 :pattern ( ($generated@@152 $generated@@615 $generated@@616))
)))
(assert (forall (($generated@@617 T@U) ($generated@@618 T@U) ) (!  (=> (and (= (type $generated@@617) $generated@@67) (= (type $generated@@618) $generated@@67)) (and (= ($generated@@75 ($generated@@288 $generated@@617 $generated@@618)) $generated@@63) (= ($generated@@613 ($generated@@288 $generated@@617 $generated@@618)) $generated@@66)))
 :pattern ( ($generated@@288 $generated@@617 $generated@@618))
)))
(assert (forall (($generated@@619 T@U) ($generated@@620 T@U) ) (!  (=> (and (= (type $generated@@619) $generated@@67) (= (type $generated@@620) $generated@@67)) (and (= ($generated@@75 ($generated@@232 $generated@@619 $generated@@620)) $generated@@64) (= ($generated@@613 ($generated@@232 $generated@@619 $generated@@620)) $generated@@66)))
 :pattern ( ($generated@@232 $generated@@619 $generated@@620))
)))
(assert (forall (($generated@@621 T@U) ) (!  (=> (= (type $generated@@621) $generated@@153) (= ($generated@@590 ($generated@@302 $generated@@621)) ($generated@@591 $generated@@621)))
 :pattern ( ($generated@@590 ($generated@@302 $generated@@621)))
)))
(assert (forall (($generated@@622 T@U) ) (!  (=> (and (= (type $generated@@622) $generated@@136) ($generated@@242 $generated@@622 ($generated@@78 0))) (and (= ($generated@@302 ($generated@@423 $generated@@2 $generated@@622)) $generated@@622) ($generated@@140 ($generated@@423 ($generated@@79 $generated@@136 $generated@@4) $generated@@622) ($generated@@78 0))))
 :pattern ( ($generated@@242 $generated@@622 ($generated@@78 0)))
)))
(assert (forall (($generated@@623 T@U) ($generated@@624 T@U) ) (!  (=> (and (and (= (type $generated@@623) $generated@@136) (= (type $generated@@624) $generated@@67)) ($generated@@242 $generated@@623 ($generated@@251 $generated@@624))) (and (= ($generated@@302 ($generated@@423 ($generated@@79 $generated@@136 $generated@@4) $generated@@623)) $generated@@623) ($generated@@140 ($generated@@423 ($generated@@79 $generated@@136 $generated@@4) $generated@@623) ($generated@@251 $generated@@624))))
 :pattern ( ($generated@@242 $generated@@623 ($generated@@251 $generated@@624)))
)))
(assert (forall (($generated@@625 T@U) ($generated@@626 T@U) ) (!  (=> (and (and (= (type $generated@@625) $generated@@136) (= (type $generated@@626) $generated@@67)) ($generated@@242 $generated@@625 ($generated@@256 $generated@@626))) (and (= ($generated@@302 ($generated@@423 ($generated@@79 $generated@@136 $generated@@4) $generated@@625)) $generated@@625) ($generated@@140 ($generated@@423 ($generated@@79 $generated@@136 $generated@@4) $generated@@625) ($generated@@256 $generated@@626))))
 :pattern ( ($generated@@242 $generated@@625 ($generated@@256 $generated@@626)))
)))
(assert (forall (($generated@@627 T@U) ($generated@@628 T@U) ) (!  (=> (and (and (= (type $generated@@627) $generated@@136) (= (type $generated@@628) $generated@@67)) ($generated@@242 $generated@@627 ($generated@@166 $generated@@628))) (and (= ($generated@@302 ($generated@@423 ($generated@@79 $generated@@136 $generated@@2) $generated@@627)) $generated@@627) ($generated@@140 ($generated@@423 ($generated@@79 $generated@@136 $generated@@2) $generated@@627) ($generated@@166 $generated@@628))))
 :pattern ( ($generated@@242 $generated@@627 ($generated@@166 $generated@@628)))
)))
(assert (forall (($generated@@629 T@U) ($generated@@630 T@U) ) (!  (=> (and (and (= (type $generated@@629) $generated@@136) (= (type $generated@@630) $generated@@67)) ($generated@@242 $generated@@629 ($generated@@550 $generated@@630))) (and (= ($generated@@302 ($generated@@423 ($generated@@282 $generated@@136) $generated@@629)) $generated@@629) ($generated@@140 ($generated@@423 ($generated@@282 $generated@@136) $generated@@629) ($generated@@550 $generated@@630))))
 :pattern ( ($generated@@242 $generated@@629 ($generated@@550 $generated@@630)))
)))
(assert (forall (($generated@@631 T@U) ) (!  (=> (and (= (type $generated@@631) $generated@@136) ($generated@@358 $generated@@631)) (= $generated@@631 ($generated@@143 ($generated@@144 $generated@@631))))
 :pattern ( ($generated@@144 $generated@@631))
 :pattern ( ($generated@@358 $generated@@631))
)))
(assert  (=> (<= 1 $generated@@227) (forall (($generated@@632 T@U) ($generated@@633 T@U) ($generated@@634 T@U) ($generated@@635 T@U) ($generated@@636 T@U) ($generated@@637 T@U) ) (!  (=> (and (and (and (and (and (and (= (type $generated@@632) $generated@@67) (= (type $generated@@633) $generated@@67)) (= (type $generated@@634) $generated@@67)) (= (type $generated@@635) $generated@@229)) (= (type $generated@@636) $generated@@80)) (= (type $generated@@637) $generated@@136)) (or ($generated@@230 $generated@@632 $generated@@633 $generated@@634 ($generated@@263 $generated@@636) ($generated@@263 $generated@@637)) (and (not (= 1 $generated@@227)) (and (not (= $generated@@636 $generated@@231)) ($generated@@140 $generated@@636 ($generated@@232 $generated@@632 $generated@@633)))))) (and (and (=> (< 0 ($generated@@144 $generated@@637)) ($generated@@230 $generated@@632 $generated@@633 $generated@@634 ($generated@@263 $generated@@636) ($generated@@142 $generated@@637 ($generated@@143 1)))) (=> (=> (< 0 ($generated@@144 $generated@@637)) ($generated@@228 $generated@@632 $generated@@633 $generated@@634 ($generated@@294 $generated@@635) ($generated@@263 $generated@@636) ($generated@@142 $generated@@637 ($generated@@143 1)))) (=> (= ($generated@@261 0) ($generated@@144 $generated@@637)) (forall (($generated@@638 T@U) ) (!  (=> (and (= (type $generated@@638) $generated@@136) ($generated@@135 $generated@@638 $generated@@637)) ($generated@@230 $generated@@632 $generated@@633 $generated@@634 $generated@@636 $generated@@638))
 :pattern ( ($generated@@228 $generated@@632 $generated@@633 $generated@@634 ($generated@@294 $generated@@635) $generated@@636 $generated@@638))
))))) (= ($generated@@228 $generated@@632 $generated@@633 $generated@@634 ($generated@@294 $generated@@635) ($generated@@263 $generated@@636) ($generated@@263 $generated@@637))  (and (=> (< 0 ($generated@@144 $generated@@637)) ($generated@@228 $generated@@632 $generated@@633 $generated@@634 ($generated@@294 $generated@@635) ($generated@@263 $generated@@636) ($generated@@142 $generated@@637 ($generated@@143 1)))) (=> (= ($generated@@261 0) ($generated@@144 $generated@@637)) (forall (($generated@@639 T@U) ) (!  (=> (and (= (type $generated@@639) $generated@@136) ($generated@@135 $generated@@639 $generated@@637)) ($generated@@228 $generated@@632 $generated@@633 $generated@@634 ($generated@@294 $generated@@635) $generated@@636 $generated@@639))
 :pattern ( ($generated@@228 $generated@@632 $generated@@633 $generated@@634 ($generated@@294 $generated@@635) $generated@@636 $generated@@639))
)))))))
 :weight 3
 :pattern ( ($generated@@228 $generated@@632 $generated@@633 $generated@@634 ($generated@@294 $generated@@635) ($generated@@263 $generated@@636) ($generated@@263 $generated@@637)))
))))
(assert (forall (($generated@@640 T@U) ($generated@@641 T@U) ($generated@@642 T@U) ) (!  (=> (and (and (= (type $generated@@640) ($generated@@79 $generated@@136 $generated@@2)) (= (type $generated@@641) $generated@@67)) (= (type $generated@@642) ($generated@@79 $generated@@80 $generated@@81))) (= ($generated@@77 $generated@@640 ($generated@@166 $generated@@641) $generated@@642) (forall (($generated@@643 T@U) ) (!  (=> (and (= (type $generated@@643) $generated@@136) (< 0 ($generated ($generated@@84 $generated@@640 $generated@@643)))) ($generated@@268 $generated@@643 $generated@@641 $generated@@642))
 :pattern ( ($generated@@84 $generated@@640 $generated@@643))
))))
 :pattern ( ($generated@@77 $generated@@640 ($generated@@166 $generated@@641) $generated@@642))
)))
(assert (forall (($generated@@644 T@U) ($generated@@645 T@U) ) (!  (=> (and (and (= (type $generated@@644) $generated@@136) (= (type $generated@@645) $generated@@136)) (and ($generated@@358 $generated@@645) (<= ($generated@@144 $generated@@645) ($generated@@144 $generated@@644)))) (or (and (= $generated@@645 ($generated@@143 0)) (= ($generated@@142 $generated@@644 $generated@@645) $generated@@644)) (and (not (= $generated@@645 ($generated@@143 0))) ($generated@@135 ($generated@@142 $generated@@644 $generated@@645) $generated@@644))))
 :pattern ( ($generated@@142 $generated@@644 $generated@@645))
)))
(assert (forall (($generated@@646 T@U) ($generated@@647 T@U) ($generated@@648 T@U) ) (!  (=> (and (and (and (= (type $generated@@646) $generated@@153) (= (type $generated@@647) $generated@@67)) (= (type $generated@@648) ($generated@@79 $generated@@80 $generated@@81))) (and ($generated@@267 $generated@@648) (and ($generated@@151 $generated@@646) (exists (($generated@@649 T@U) ) (!  (and (= (type $generated@@649) $generated@@67) ($generated@@77 $generated@@646 ($generated@@152 $generated@@647 $generated@@649) $generated@@648))
 :pattern ( ($generated@@77 $generated@@646 ($generated@@152 $generated@@647 $generated@@649) $generated@@648))
))))) ($generated@@268 ($generated@@160 $generated@@646) $generated@@647 $generated@@648))
 :pattern ( ($generated@@268 ($generated@@160 $generated@@646) $generated@@647 $generated@@648))
)))
(assert (forall (($generated@@650 T@U) ($generated@@651 T@U) ($generated@@652 T@U) ) (!  (=> (and (and (and (= (type $generated@@650) $generated@@153) (= (type $generated@@651) $generated@@67)) (= (type $generated@@652) ($generated@@79 $generated@@80 $generated@@81))) (and ($generated@@267 $generated@@652) (and ($generated@@151 $generated@@650) (exists (($generated@@653 T@U) ) (!  (and (= (type $generated@@653) $generated@@67) ($generated@@77 $generated@@650 ($generated@@152 $generated@@653 $generated@@651) $generated@@652))
 :pattern ( ($generated@@77 $generated@@650 ($generated@@152 $generated@@653 $generated@@651) $generated@@652))
))))) ($generated@@268 ($generated@@161 $generated@@650) $generated@@651 $generated@@652))
 :pattern ( ($generated@@268 ($generated@@161 $generated@@650) $generated@@651 $generated@@652))
)))
(assert (forall (($generated@@654 T@U) ($generated@@655 T@U) ) (!  (=> (and (= (type $generated@@654) $generated@@136) (= (type $generated@@655) $generated@@136)) (= ($generated@@241 ($generated@@263 $generated@@654) ($generated@@263 $generated@@655)) ($generated@@263 ($generated@@241 $generated@@654 $generated@@655))))
 :pattern ( ($generated@@241 ($generated@@263 $generated@@654) ($generated@@263 $generated@@655)))
)))
(assert  (=> (<= 1 $generated@@227) (forall (($generated@@656 T@U) ($generated@@657 T@U) ($generated@@658 T@U) ($generated@@659 T@U) ($generated@@660 T@U) ($generated@@661 T@U) ) (!  (=> (and (and (and (and (and (and (= (type $generated@@656) $generated@@67) (= (type $generated@@657) $generated@@67)) (= (type $generated@@658) $generated@@67)) (= (type $generated@@659) $generated@@229)) (= (type $generated@@660) $generated@@80)) (= (type $generated@@661) $generated@@136)) (and (and (not (= $generated@@660 $generated@@231)) ($generated@@140 $generated@@660 ($generated@@232 $generated@@656 $generated@@657))) (= $generated@@661 ($generated@@143 0)))) ($generated@@228 $generated@@656 $generated@@657 $generated@@658 $generated@@659 $generated@@660 $generated@@661))
 :pattern ( ($generated@@228 $generated@@656 $generated@@657 $generated@@658 $generated@@659 $generated@@660 $generated@@661))
))))
(assert (forall (($generated@@662 Int) ) (! (= ($generated@@302 ($generated@@8 ($generated@@261 $generated@@662))) ($generated@@263 ($generated@@302 ($generated@@8 $generated@@662))))
 :pattern ( ($generated@@302 ($generated@@8 ($generated@@261 $generated@@662))))
)))
(assert (forall (($generated@@663 T@U) ) (! (= ($generated@@302 ($generated@@263 $generated@@663)) ($generated@@263 ($generated@@302 $generated@@663)))
 :pattern ( ($generated@@302 ($generated@@263 $generated@@663)))
)))
(assert (forall (($generated@@664 T@U) ) (! (let (($generated@@665 ($generated@@283 (type $generated@@664))))
 (=> (and (= (type $generated@@664) ($generated@@282 $generated@@665)) (= ($generated@@281 $generated@@664) 0)) (= $generated@@664 ($generated@@280 $generated@@665))))
 :pattern ( ($generated@@281 $generated@@664))
)))
(assert (forall (($generated@@666 T@U) ($generated@@667 T@U) ($generated@@668 T@U) ) (! (let (($generated@@669 (type $generated@@667)))
 (=> (and (and (= (type $generated@@666) ($generated@@79 $generated@@669 $generated@@2)) (= (type $generated@@668) $generated@@2)) (<= 0 ($generated $generated@@668))) (= ($generated@@312 ($generated@@85 $generated@@666 $generated@@667 $generated@@668)) (+ (- ($generated@@312 $generated@@666) ($generated ($generated@@84 $generated@@666 $generated@@667))) ($generated $generated@@668)))))
 :pattern ( ($generated@@312 ($generated@@85 $generated@@666 $generated@@667 $generated@@668)))
)))
(assert  (and (forall (($generated@@672 T@U) ) (! (= (type ($generated@@670 $generated@@672)) $generated@@229)
 :pattern ( ($generated@@670 $generated@@672))
)) (= (type $generated@@671) $generated@@229)))
(assert (forall (($generated@@673 T@U) ($generated@@674 T@U) ($generated@@675 T@U) ($generated@@676 T@U) ($generated@@677 T@U) ($generated@@678 T@U) ) (!  (=> (and (and (and (and (and (= (type $generated@@673) $generated@@67) (= (type $generated@@674) $generated@@67)) (= (type $generated@@675) $generated@@67)) (= (type $generated@@676) $generated@@229)) (= (type $generated@@677) $generated@@80)) (= (type $generated@@678) $generated@@136)) (= ($generated@@228 $generated@@673 $generated@@674 $generated@@675 $generated@@676 $generated@@677 $generated@@678) ($generated@@228 $generated@@673 $generated@@674 $generated@@675 $generated@@671 $generated@@677 $generated@@678)))
 :pattern ( ($generated@@228 $generated@@673 $generated@@674 $generated@@675 ($generated@@670 $generated@@676) $generated@@677 $generated@@678))
)))
(assert (forall (($generated@@679 T@U) ($generated@@680 T@U) ) (!  (=> (and (= (type $generated@@679) ($generated@@79 $generated@@80 $generated@@81)) (= (type $generated@@680) $generated@@2)) ($generated@@77 $generated@@680 $generated@@46 $generated@@679))
 :pattern ( ($generated@@77 $generated@@680 $generated@@46 $generated@@679))
)))
(assert (forall (($generated@@681 T@U) ($generated@@682 T@U) ) (!  (=> (and (= (type $generated@@681) ($generated@@79 $generated@@80 $generated@@81)) (= (type $generated@@682) $generated@@3)) ($generated@@77 $generated@@682 $generated@@47 $generated@@681))
 :pattern ( ($generated@@77 $generated@@682 $generated@@47 $generated@@681))
)))
(assert (forall (($generated@@683 T@U) ($generated@@684 T@U) ) (!  (=> (and (= (type $generated@@683) ($generated@@79 $generated@@80 $generated@@81)) (= (type $generated@@684) $generated@@4)) ($generated@@77 $generated@@684 $generated@@44 $generated@@683))
 :pattern ( ($generated@@77 $generated@@684 $generated@@44 $generated@@683))
)))
(assert (forall (($generated@@685 T@U) ($generated@@686 T@U) ) (!  (=> (and (= (type $generated@@685) ($generated@@79 $generated@@80 $generated@@81)) (= (type $generated@@686) $generated@@491)) ($generated@@77 $generated@@686 $generated@@45 $generated@@685))
 :pattern ( ($generated@@77 $generated@@686 $generated@@45 $generated@@685))
)))
(assert (forall (($generated@@687 T@U) ($generated@@688 T@U) ) (!  (=> (and (= (type $generated@@687) ($generated@@79 $generated@@80 $generated@@81)) (= (type $generated@@688) $generated@@136)) ($generated@@77 $generated@@688 $generated@@48 $generated@@687))
 :pattern ( ($generated@@77 $generated@@688 $generated@@48 $generated@@687))
)))
(assert (forall (($generated@@689 T@U) ($generated@@690 T@U) ) (!  (=> (and (= (type $generated@@689) ($generated@@282 $generated@@136)) (= (type $generated@@690) $generated@@67)) (= ($generated@@140 $generated@@689 ($generated@@550 $generated@@690)) (forall (($generated@@691 Int) ) (!  (=> (and (<= 0 $generated@@691) (< $generated@@691 ($generated@@281 $generated@@689))) ($generated@@242 ($generated@@551 $generated@@689 $generated@@691) $generated@@690))
 :pattern ( ($generated@@551 $generated@@689 $generated@@691))
))))
 :pattern ( ($generated@@140 $generated@@689 ($generated@@550 $generated@@690)))
)))
(assert (forall (($generated@@693 T@U) ($generated@@694 Int) ) (!  (=> (= (type $generated@@693) ($generated@@282 $generated@@136)) (=> (and (<= 0 $generated@@694) (< $generated@@694 ($generated@@281 $generated@@693))) (< ($generated@@591 ($generated@@423 $generated@@153 ($generated@@551 $generated@@693 $generated@@694))) ($generated@@692 $generated@@693))))
 :pattern ( ($generated@@591 ($generated@@423 $generated@@153 ($generated@@551 $generated@@693 $generated@@694))))
)))
(assert (forall (($generated@@695 T@U) ($generated@@696 T@U) ($generated@@697 T@U) ) (!  (=> (and (and (and (= (type $generated@@695) ($generated@@320 $generated@@136 $generated@@136)) (= (type $generated@@696) $generated@@67)) (= (type $generated@@697) $generated@@67)) ($generated@@140 $generated@@695 ($generated@@451 $generated@@696 $generated@@697))) (and (and ($generated@@140 ($generated@@318 $generated@@695) ($generated@@251 $generated@@696)) ($generated@@140 ($generated@@381 $generated@@695) ($generated@@251 $generated@@697))) ($generated@@140 ($generated@@422 $generated@@695) ($generated@@251 ($generated@@152 $generated@@696 $generated@@697)))))
 :pattern ( ($generated@@140 $generated@@695 ($generated@@451 $generated@@696 $generated@@697)))
)))
(assert (forall (($generated@@698 T@U) ($generated@@699 T@U) ($generated@@700 T@U) ) (!  (=> (and (and (and (= (type $generated@@698) ($generated@@338 $generated@@136 $generated@@136)) (= (type $generated@@699) $generated@@67)) (= (type $generated@@700) $generated@@67)) ($generated@@140 $generated@@698 ($generated@@459 $generated@@699 $generated@@700))) (and (and ($generated@@140 ($generated@@336 $generated@@698) ($generated@@256 $generated@@699)) ($generated@@140 ($generated@@392 $generated@@698) ($generated@@256 $generated@@700))) ($generated@@140 ($generated@@433 $generated@@698) ($generated@@256 ($generated@@152 $generated@@699 $generated@@700)))))
 :pattern ( ($generated@@140 $generated@@698 ($generated@@459 $generated@@699 $generated@@700)))
)))
(assert (forall (($generated@@701 T@U) ) (!  (=> (= (type $generated@@701) $generated@@2) ($generated@@140 $generated@@701 $generated@@46))
 :pattern ( ($generated@@140 $generated@@701 $generated@@46))
)))
(assert (forall (($generated@@702 T@U) ) (!  (=> (= (type $generated@@702) $generated@@3) ($generated@@140 $generated@@702 $generated@@47))
 :pattern ( ($generated@@140 $generated@@702 $generated@@47))
)))
(assert (forall (($generated@@703 T@U) ) (!  (=> (= (type $generated@@703) $generated@@4) ($generated@@140 $generated@@703 $generated@@44))
 :pattern ( ($generated@@140 $generated@@703 $generated@@44))
)))
(assert (forall (($generated@@704 T@U) ) (!  (=> (= (type $generated@@704) $generated@@491) ($generated@@140 $generated@@704 $generated@@45))
 :pattern ( ($generated@@140 $generated@@704 $generated@@45))
)))
(assert (forall (($generated@@705 T@U) ) (!  (=> (= (type $generated@@705) $generated@@136) ($generated@@140 $generated@@705 $generated@@48))
 :pattern ( ($generated@@140 $generated@@705 $generated@@48))
)))
(push 1)
(declare-fun ControlFlow (Int Int) Int)
(declare-fun $generated@@706 () T@U)
(declare-fun $generated@@707 () T@U)
(declare-fun $generated@@708 () T@U)
(declare-fun $generated@@709 () T@U)
(declare-fun $generated@@710 () T@U)
(declare-fun $generated@@711 (T@U) Bool)
(declare-fun $generated@@712 () T@U)
(declare-fun $generated@@713 () T@U)
(declare-fun $generated@@714 () T@U)
(declare-fun $generated@@715 () T@U)
(declare-fun $generated@@716 () T@U)
(declare-fun $generated@@717 () T@U)
(assert  (and (and (and (and (and (and (and (and (and (and (= (type $generated@@706) $generated@@67) (= (type $generated@@707) $generated@@67)) (= (type $generated@@708) $generated@@80)) (= (type $generated@@709) $generated@@136)) (= (type $generated@@713) $generated@@136)) (= (type $generated@@714) ($generated@@79 $generated@@80 $generated@@81))) (= (type $generated@@712) ($generated@@79 $generated@@80 $generated@@81))) (= (type $generated@@715) $generated@@136)) (= (type $generated@@710) ($generated@@79 $generated@@80 $generated@@81))) (= (type $generated@@716) ($generated@@173 $generated@@80 $generated@@4))) (= (type $generated@@717) ($generated@@79 $generated@@80 $generated@@81))))
(set-option :timeout 0)
(set-option :rlimit 0)
(assert (not
 (=> (= (ControlFlow 0 0) 13) (let (($generated@@718  (and (=> (= (ControlFlow 0 2) (- 0 3)) (=> ($generated@@230 $generated@@706 $generated@@707 $generated@@45 $generated@@708 $generated@@709) (or ($generated@@228 $generated@@706 $generated@@707 $generated@@45 ($generated@@294 $generated@@671) $generated@@708 $generated@@709) (=> (< 0 ($generated@@144 $generated@@709)) ($generated@@228 $generated@@706 $generated@@707 $generated@@45 ($generated@@294 ($generated@@294 $generated@@671)) $generated@@708 ($generated@@142 $generated@@709 ($generated@@143 1))))))) (=> (=> ($generated@@230 $generated@@706 $generated@@707 $generated@@45 $generated@@708 $generated@@709) (or ($generated@@228 $generated@@706 $generated@@707 $generated@@45 ($generated@@294 $generated@@671) $generated@@708 $generated@@709) (=> (< 0 ($generated@@144 $generated@@709)) ($generated@@228 $generated@@706 $generated@@707 $generated@@45 ($generated@@294 ($generated@@294 $generated@@671)) $generated@@708 ($generated@@142 $generated@@709 ($generated@@143 1)))))) (=> (= (ControlFlow 0 2) (- 0 1)) (=> ($generated@@230 $generated@@706 $generated@@707 $generated@@45 $generated@@708 $generated@@709) (or ($generated@@228 $generated@@706 $generated@@707 $generated@@45 ($generated@@294 $generated@@671) $generated@@708 $generated@@709) (=> (= ($generated@@261 0) ($generated@@144 $generated@@709)) (forall (($generated@@719 T@U) ) (!  (=> (and (= (type $generated@@719) $generated@@136) ($generated@@135 $generated@@719 $generated@@709)) ($generated@@228 $generated@@706 $generated@@707 $generated@@45 ($generated@@294 ($generated@@294 $generated@@671)) $generated@@708 $generated@@719))
 :pattern ( ($generated@@228 $generated@@706 $generated@@707 $generated@@45 ($generated@@294 ($generated@@294 $generated@@671)) $generated@@708 $generated@@719))
))))))))))
(let (($generated@@720  (=> (<= ($generated@@144 $generated@@709) 0) (=> (and (and (and ($generated@@267 $generated@@710) ($generated@@711 $generated@@710)) (= $generated@@712 $generated@@710)) (and (forall (($generated@@721 T@U) ) (!  (=> (and (= (type $generated@@721) $generated@@136) ($generated@@135 $generated@@721 $generated@@709)) ($generated@@228 $generated@@706 $generated@@707 $generated@@45 ($generated@@294 $generated@@671) $generated@@708 $generated@@721))
 :no-pattern (type $generated@@721)
 :no-pattern ($generated $generated@@721)
 :no-pattern ($generated@@0 $generated@@721)
)) (= (ControlFlow 0 11) 2))) $generated@@718))))
(let (($generated@@722  (=> (< 0 ($generated@@144 $generated@@709)) (and (=> (= (ControlFlow 0 4) (- 0 10)) ($generated@@358 ($generated@@263 ($generated@@143 1)))) (=> ($generated@@358 ($generated@@263 ($generated@@143 1))) (and (=> (= (ControlFlow 0 4) (- 0 9)) (<= ($generated@@144 ($generated@@263 ($generated@@143 1))) ($generated@@144 $generated@@709))) (=> (<= ($generated@@144 ($generated@@263 ($generated@@143 1))) ($generated@@144 $generated@@709)) (=> (= $generated@@713 ($generated@@142 $generated@@709 ($generated@@143 1))) (=> (and (and (and ($generated@@267 $generated@@714) ($generated@@711 $generated@@714)) ($generated@@230 $generated@@706 $generated@@707 $generated@@45 $generated@@708 $generated@@713)) (and (and ($generated@@230 $generated@@706 $generated@@707 $generated@@45 $generated@@708 $generated@@713) (and ($generated@@228 $generated@@706 $generated@@707 $generated@@45 ($generated@@294 $generated@@671) $generated@@708 $generated@@713) (and (=> (< 0 ($generated@@144 $generated@@713)) ($generated@@228 $generated@@706 $generated@@707 $generated@@45 ($generated@@294 $generated@@671) $generated@@708 ($generated@@142 $generated@@713 ($generated@@143 1)))) (=> (= ($generated@@261 0) ($generated@@144 $generated@@713)) (forall (($generated@@723 T@U) ) (!  (=> (and (= (type $generated@@723) $generated@@136) ($generated@@135 $generated@@723 $generated@@713)) ($generated@@228 $generated@@706 $generated@@707 $generated@@45 ($generated@@294 $generated@@671) $generated@@708 $generated@@723))
 :pattern ( ($generated@@228 $generated@@706 $generated@@707 $generated@@45 ($generated@@294 $generated@@671) $generated@@708 $generated@@723))
)))))) (and (= $generated@@712 $generated@@714) ($generated@@77 $generated@@708 ($generated@@288 $generated@@706 $generated@@707) $generated@@714)))) (and (=> (= (ControlFlow 0 4) (- 0 8)) ($generated@@358 ($generated@@263 ($generated@@143 1)))) (=> ($generated@@358 ($generated@@263 ($generated@@143 1))) (and (=> (= (ControlFlow 0 4) (- 0 7)) (<= ($generated@@144 ($generated@@263 ($generated@@143 1))) ($generated@@144 $generated@@709))) (=> (<= ($generated@@144 ($generated@@263 ($generated@@143 1))) ($generated@@144 $generated@@709)) (=> (and (and (= $generated@@715 ($generated@@142 $generated@@709 ($generated@@143 1))) ($generated@@77 $generated@@715 $generated@@48 $generated@@714)) (and ($generated@@230 $generated@@706 $generated@@707 $generated@@45 $generated@@708 ($generated@@142 $generated@@709 ($generated@@143 1))) ($generated@@230 $generated@@706 $generated@@707 $generated@@45 $generated@@708 ($generated@@142 $generated@@709 ($generated@@143 1))))) (and (=> (= (ControlFlow 0 4) (- 0 6)) (=> ($generated@@230 $generated@@706 $generated@@707 $generated@@45 $generated@@708 ($generated@@142 $generated@@709 ($generated@@143 1))) (or ($generated@@228 $generated@@706 $generated@@707 $generated@@45 ($generated@@294 $generated@@671) $generated@@708 ($generated@@142 $generated@@709 ($generated@@143 1))) (=> (< 0 ($generated@@144 ($generated@@142 $generated@@709 ($generated@@143 1)))) ($generated@@228 $generated@@706 $generated@@707 $generated@@45 ($generated@@294 ($generated@@294 $generated@@671)) $generated@@708 ($generated@@142 ($generated@@142 $generated@@709 ($generated@@143 1)) ($generated@@143 1))))))) (and (=> (= (ControlFlow 0 4) (- 0 5)) (=> ($generated@@230 $generated@@706 $generated@@707 $generated@@45 $generated@@708 ($generated@@142 $generated@@709 ($generated@@143 1))) (or ($generated@@228 $generated@@706 $generated@@707 $generated@@45 ($generated@@294 $generated@@671) $generated@@708 ($generated@@142 $generated@@709 ($generated@@143 1))) (=> (= ($generated@@261 0) ($generated@@144 ($generated@@142 $generated@@709 ($generated@@143 1)))) (forall (($generated@@724 T@U) ) (!  (=> (and (= (type $generated@@724) $generated@@136) ($generated@@135 $generated@@724 ($generated@@142 $generated@@709 ($generated@@143 1)))) ($generated@@228 $generated@@706 $generated@@707 $generated@@45 ($generated@@294 ($generated@@294 $generated@@671)) $generated@@708 $generated@@724))
 :pattern ( ($generated@@228 $generated@@706 $generated@@707 $generated@@45 ($generated@@294 ($generated@@294 $generated@@671)) $generated@@708 $generated@@724))
)))))) (=> (and ($generated@@228 $generated@@706 $generated@@707 $generated@@45 ($generated@@294 $generated@@671) $generated@@708 ($generated@@142 $generated@@709 ($generated@@143 1))) (= (ControlFlow 0 4) 2)) $generated@@718)))))))))))))))))
(let (($generated@@725  (=> (= $generated@@716 ($generated@@172 $generated@@231 $generated@@717 $generated@@60 false)) (=> (and (and ($generated@@267 $generated@@712) ($generated@@711 $generated@@712)) (and (= $generated@@717 $generated@@712) (forall (($generated@@726 T@U) ($generated@@727 T@U) ) (!  (=> (and (= (type $generated@@726) $generated@@80) (= (type $generated@@727) $generated@@136)) (=> (and (and ($generated@@140 $generated@@726 ($generated@@232 $generated@@706 $generated@@707)) ($generated@@0 ($generated@@263 ($generated@@11 true)))) ($generated@@135 $generated@@727 $generated@@709)) ($generated@@228 $generated@@706 $generated@@707 $generated@@45 ($generated@@294 $generated@@671) $generated@@726 $generated@@727)))
 :no-pattern (type $generated@@726)
 :no-pattern (type $generated@@727)
 :no-pattern ($generated $generated@@726)
 :no-pattern ($generated@@0 $generated@@726)
 :no-pattern ($generated $generated@@727)
 :no-pattern ($generated@@0 $generated@@727)
)))) (and (=> (= (ControlFlow 0 12) 4) $generated@@722) (=> (= (ControlFlow 0 12) 11) $generated@@720))))))
(let (($generated@@728  (=> (and ($generated@@267 $generated@@717) ($generated@@711 $generated@@717)) (=> (and (and (not (= $generated@@708 $generated@@231)) (and ($generated@@140 $generated@@708 ($generated@@232 $generated@@706 $generated@@707)) ($generated@@77 $generated@@708 ($generated@@232 $generated@@706 $generated@@707) $generated@@717))) (and (= 3 $generated@@227) (= (ControlFlow 0 13) 12))) $generated@@725))))
$generated@@728))))))
))
(check-sat)
(pop 1)
; Valid
(get-info :rlimit)
(reset)
(set-option :rlimit 0)
; did a full reset
(reset)
(set-option :print-success false)
(set-info :smt-lib-version 2.6)
(set-option :auto_config false)
(set-option :type_check true)
(set-option :smt.case_split 3)
(set-option :smt.qi.eager_threshold 100)
(set-option :smt.delay_units true)
(set-option :smt.arith.solver 2)
(set-option :smt.mbqi false)
(set-option :model.compact false)
(set-option :model.v2 true)
(set-option :pp.bv_literals false)
; done setting options


(set-info :category "industrial")
(declare-sort |T@U| 0)
(declare-sort |T@T| 0)
(declare-fun real_pow (Real Real) Real)
(declare-fun UOrdering2 (|T@U| |T@U|) Bool)
(declare-fun UOrdering3 (|T@T| |T@U| |T@U|) Bool)
(declare-fun tickleBool (Bool) Bool)
(assert (and (tickleBool true) (tickleBool false)))
(declare-fun $generated (T@U) Int)
(declare-fun $generated@@0 (T@U) Bool)
(declare-fun $generated@@1 (T@T) Int)
(declare-fun $generated@@2 () T@T)
(declare-fun $generated@@3 () T@T)
(declare-fun $generated@@4 () T@T)
(declare-fun $generated@@5 () T@T)
(declare-fun $generated@@6 () T@T)
(declare-fun $generated@@7 () T@T)
(declare-fun $generated@@8 (Int) T@U)
(declare-fun type (T@U) T@T)
(declare-fun $generated@@9 (Real) T@U)
(declare-fun $generated@@10 (T@U) Real)
(declare-fun $generated@@11 (Bool) T@U)
(declare-fun $generated@@12 (RoundingMode) T@U)
(declare-fun $generated@@13 (T@U) RoundingMode)
(declare-fun $generated@@14 (String) T@U)
(declare-fun $generated@@15 (T@U) String)
(declare-fun $generated@@16 ((RegEx String)) T@U)
(declare-fun $generated@@17 (T@U) (RegEx String))
(declare-fun $generated@@44 () T@U)
(declare-fun $generated@@45 () T@U)
(declare-fun $generated@@46 () T@U)
(declare-fun $generated@@47 () T@U)
(declare-fun $generated@@48 () T@U)
(declare-fun $generated@@49 () T@U)
(declare-fun $generated@@50 () T@U)
(declare-fun $generated@@51 () T@U)
(declare-fun $generated@@52 () T@U)
(declare-fun $generated@@53 () T@U)
(declare-fun $generated@@54 () T@U)
(declare-fun $generated@@55 () T@U)
(declare-fun $generated@@56 () T@U)
(declare-fun $generated@@57 () T@U)
(declare-fun $generated@@58 () T@U)
(declare-fun $generated@@59 () T@U)
(declare-fun $generated@@60 () T@U)
(declare-fun $generated@@61 () T@U)
(declare-fun $generated@@62 () T@U)
(declare-fun $generated@@63 () T@U)
(declare-fun $generated@@64 () T@U)
(declare-fun $generated@@65 () T@U)
(declare-fun $generated@@66 () T@U)
(declare-fun $generated@@67 () T@T)
(declare-fun $generated@@68 () T@T)
(declare-fun $generated@@69 (T@T) T@T)
(declare-fun $generated@@70 (T@T) T@T)
(declare-fun $generated@@71 () T@T)
(declare-fun $generated@@72 () T@T)
(declare-fun $generated@@75 (T@U) T@U)
(declare-fun $generated@@77 (T@U T@U T@U) Bool)
(declare-fun $generated@@78 (Int) T@U)
(declare-fun $generated@@79 (T@T T@T) T@T)
(declare-fun $generated@@80 () T@T)
(declare-fun $generated@@81 () T@T)
(declare-fun $generated@@82 (T@T) T@T)
(declare-fun $generated@@83 (T@T) T@T)
(declare-fun $generated@@84 (T@U T@U) T@U)
(declare-fun $generated@@85 (T@U T@U T@U) T@U)
(declare-fun $generated@@86 (T@U T@U) T@U)
(declare-fun $generated@@87 (T@U T@U T@U) T@U)
(declare-fun $generated@@135 (T@U T@U) Bool)
(declare-fun $generated@@136 () T@T)
(declare-fun $generated@@140 (T@U T@U) Bool)
(declare-fun $generated@@142 (T@U T@U) T@U)
(declare-fun $generated@@143 (Int) T@U)
(declare-fun $generated@@144 (T@U) Int)
(declare-fun $generated@@151 (T@U) Bool)
(declare-fun $generated@@152 (T@U T@U) T@U)
(declare-fun $generated@@153 () T@T)
(declare-fun $generated@@159 (T@U T@U) Bool)
(declare-fun $generated@@160 (T@U) T@U)
(declare-fun $generated@@161 (T@U) T@U)
(declare-fun $generated@@166 (T@U) T@U)
(declare-fun $generated@@167 (T@U) Bool)
(declare-fun $generated@@171 (T@U T@U T@U) T@U)
(declare-fun $generated@@172 (T@U T@U T@U Bool) T@U)
(declare-fun $generated@@173 (T@T T@T) T@T)
(declare-fun $generated@@174 (T@T) T@T)
(declare-fun $generated@@175 (T@T) T@T)
(declare-fun $generated@@176 (T@U T@U T@U T@U) T@U)
(declare-fun $generated@@227 () Int)
(declare-fun $generated@@228 (T@U T@U T@U T@U T@U T@U) Bool)
(declare-fun $generated@@229 () T@T)
(declare-fun $generated@@230 (T@U T@U T@U T@U T@U) Bool)
(declare-fun $generated@@231 () T@U)
(declare-fun $generated@@232 (T@U T@U) T@U)
(declare-fun $generated@@241 (T@U T@U T@U T@U T@U) Bool)
(declare-fun $generated@@242 (T@U) T@U)
(declare-fun $generated@@250 (T@U T@U) T@U)
(declare-fun $generated@@251 (T@U T@U) Bool)
(declare-fun $generated@@260 (T@U) T@U)
(declare-fun $generated@@265 (T@U) T@U)
(declare-fun $generated@@270 (Int) Int)
(declare-fun $generated@@272 (T@U) T@U)
(declare-fun $generated@@276 (T@U) Bool)
(declare-fun $generated@@277 (T@U T@U T@U) Bool)
(declare-fun $generated@@283 (T@U) T@U)
(declare-fun $generated@@289 (T@T) T@U)
(declare-fun $generated@@290 (T@U) Int)
(declare-fun $generated@@291 (T@T) T@T)
(declare-fun $generated@@292 (T@T) T@T)
(declare-fun $generated@@297 (T@U T@U) T@U)
(declare-fun $generated@@309 (T@U) T@U)
(declare-fun $generated@@314 (T@U) T@U)
(declare-fun $generated@@319 (T@U) Int)
(declare-fun $generated@@320 (T@T) T@U)
(declare-fun $generated@@325 (T@U) T@U)
(declare-fun $generated@@326 (T@T T@T) T@U)
(declare-fun $generated@@327 (T@T T@T) T@T)
(declare-fun $generated@@328 (T@T) T@T)
(declare-fun $generated@@329 (T@T) T@T)
(declare-fun $generated@@343 (T@U) T@U)
(declare-fun $generated@@344 (T@T T@T) T@U)
(declare-fun $generated@@345 (T@T T@T) T@T)
(declare-fun $generated@@346 (T@T) T@T)
(declare-fun $generated@@347 (T@T) T@T)
(declare-fun $generated@@365 (T@U) Bool)
(declare-fun $generated@@368 (T@U) T@U)
(declare-fun $generated@@369 () T@U)
(declare-fun $generated@@396 (T@U) T@U)
(declare-fun $generated@@407 (T@U) T@U)
(declare-fun $generated@@448 (T@U) T@U)
(declare-fun $generated@@449 (T@T T@U) T@U)
(declare-fun $generated@@450 (T@U) T@U)
(declare-fun $generated@@459 (T@U) T@U)
(declare-fun $generated@@460 (T@U) T@U)
(declare-fun $generated@@477 (T@U T@U) T@U)
(declare-fun $generated@@485 (T@U T@U) T@U)
(declare-fun $generated@@493 (T@T) T@U)
(declare-fun $generated@@517 () T@T)
(declare-fun $generated@@526 (T@U) T@U)
(declare-fun $generated@@530 (T@U) T@U)
(declare-fun $generated@@536 (T@U) T@U)
(declare-fun $generated@@540 (T@U) T@U)
(declare-fun $generated@@548 (T@U) T@U)
(declare-fun $generated@@552 (T@U) T@U)
(declare-fun $generated@@560 (T@U) T@U)
(declare-fun $generated@@564 (T@U) T@U)
(declare-fun $generated@@568 (T@U) T@U)
(declare-fun $generated@@572 (T@U) T@U)
(declare-fun $generated@@576 (T@U) T@U)
(declare-fun $generated@@577 (T@U Int) T@U)
(declare-fun $generated@@586 (T@U) Int)
(declare-fun $generated@@588 (T@U) T@U)
(declare-fun $generated@@592 (T@U) T@U)
(declare-fun $generated@@596 (T@U) T@U)
(declare-fun $generated@@600 (T@U) T@U)
(declare-fun $generated@@616 (T@U) Int)
(declare-fun $generated@@617 (T@U) Int)
(declare-fun $generated@@639 (T@U) T@U)
(declare-fun $generated@@648 (T@U T@U T@U T@U) Bool)
(declare-fun $generated@@726 (T@U) Int)
(assert  (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (= ($generated@@1 $generated@@2) 0) (= ($generated@@1 $generated@@3) 1)) (= ($generated@@1 $generated@@4) 2)) (= ($generated@@1 $generated@@5) 3)) (= ($generated@@1 $generated@@6) 4)) (= ($generated@@1 $generated@@7) 5)) (forall (($generated@@18 Int) ) (! (= ($generated ($generated@@8 $generated@@18)) $generated@@18)
 :pattern ( ($generated@@8 $generated@@18))
))) (forall (($generated@@19 T@U) ) (!  (=> (= (type $generated@@19) $generated@@2) (= ($generated@@8 ($generated $generated@@19)) $generated@@19))
 :pattern ( ($generated $generated@@19))
))) (forall (($generated@@20 Int) ) (! (= (type ($generated@@8 $generated@@20)) $generated@@2)
 :pattern ( ($generated@@8 $generated@@20))
))) (forall (($generated@@21 Real) ) (! (= ($generated@@10 ($generated@@9 $generated@@21)) $generated@@21)
 :pattern ( ($generated@@9 $generated@@21))
))) (forall (($generated@@22 T@U) ) (!  (=> (= (type $generated@@22) $generated@@3) (= ($generated@@9 ($generated@@10 $generated@@22)) $generated@@22))
 :pattern ( ($generated@@10 $generated@@22))
))) (forall (($generated@@23 Real) ) (! (= (type ($generated@@9 $generated@@23)) $generated@@3)
 :pattern ( ($generated@@9 $generated@@23))
))) (forall (($generated@@24 Bool) ) (! (= ($generated@@0 ($generated@@11 $generated@@24)) $generated@@24)
 :pattern ( ($generated@@11 $generated@@24))
))) (forall (($generated@@25 T@U) ) (!  (=> (= (type $generated@@25) $generated@@4) (= ($generated@@11 ($generated@@0 $generated@@25)) $generated@@25))
 :pattern ( ($generated@@0 $generated@@25))
))) (forall (($generated@@26 Bool) ) (! (= (type ($generated@@11 $generated@@26)) $generated@@4)
 :pattern ( ($generated@@11 $generated@@26))
))) (forall (($generated@@27 RoundingMode) ) (! (= ($generated@@13 ($generated@@12 $generated@@27)) $generated@@27)
 :pattern ( ($generated@@12 $generated@@27))
))) (forall (($generated@@28 T@U) ) (!  (=> (= (type $generated@@28) $generated@@5) (= ($generated@@12 ($generated@@13 $generated@@28)) $generated@@28))
 :pattern ( ($generated@@13 $generated@@28))
))) (forall (($generated@@29 RoundingMode) ) (! (= (type ($generated@@12 $generated@@29)) $generated@@5)
 :pattern ( ($generated@@12 $generated@@29))
))) (forall (($generated@@30 String) ) (! (= ($generated@@15 ($generated@@14 $generated@@30)) $generated@@30)
 :pattern ( ($generated@@14 $generated@@30))
))) (forall (($generated@@31 T@U) ) (!  (=> (= (type $generated@@31) $generated@@6) (= ($generated@@14 ($generated@@15 $generated@@31)) $generated@@31))
 :pattern ( ($generated@@15 $generated@@31))
))) (forall (($generated@@32 String) ) (! (= (type ($generated@@14 $generated@@32)) $generated@@6)
 :pattern ( ($generated@@14 $generated@@32))
))) (forall (($generated@@33 (RegEx String)) ) (! (= ($generated@@17 ($generated@@16 $generated@@33)) $generated@@33)
 :pattern ( ($generated@@16 $generated@@33))
))) (forall (($generated@@34 T@U) ) (!  (=> (= (type $generated@@34) $generated@@7) (= ($generated@@16 ($generated@@17 $generated@@34)) $generated@@34))
 :pattern ( ($generated@@17 $generated@@34))
))) (forall (($generated@@35 (RegEx String)) ) (! (= (type ($generated@@16 $generated@@35)) $generated@@7)
 :pattern ( ($generated@@16 $generated@@35))
))))
(assert (forall (($generated@@36 T@U) ) (! (UOrdering2 $generated@@36 $generated@@36)
 :no-pattern ($generated $generated@@36)
 :no-pattern ($generated@@0 $generated@@36)
)))
(assert (forall (($generated@@37 T@U) ($generated@@38 T@U) ($generated@@39 T@U) ) (! (let (($generated@@40 (type $generated@@37)))
 (=> (and (and (= (type $generated@@38) $generated@@40) (= (type $generated@@39) $generated@@40)) (and (UOrdering2 $generated@@37 $generated@@38) (UOrdering2 $generated@@38 $generated@@39))) (UOrdering2 $generated@@37 $generated@@39)))
 :pattern ( (UOrdering2 $generated@@37 $generated@@38) (UOrdering2 $generated@@38 $generated@@39))
)))
(assert (forall (($generated@@41 T@U) ($generated@@42 T@U) ) (! (let (($generated@@43 (type $generated@@41)))
 (=> (= (type $generated@@42) $generated@@43) (=> (and (UOrdering2 $generated@@41 $generated@@42) (UOrdering2 $generated@@42 $generated@@41)) (= $generated@@41 $generated@@42))))
 :pattern ( (UOrdering2 $generated@@41 $generated@@42) (UOrdering2 $generated@@42 $generated@@41))
)))
(assert  (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (= ($generated@@1 $generated@@67) 6) (= (type $generated@@44) $generated@@67)) (= (type $generated@@45) $generated@@67)) (= (type $generated@@46) $generated@@67)) (= (type $generated@@47) $generated@@67)) (= (type $generated@@48) $generated@@67)) (= ($generated@@1 $generated@@68) 7)) (= (type $generated@@49) $generated@@68)) (= (type $generated@@50) $generated@@68)) (= (type $generated@@51) $generated@@68)) (= (type $generated@@52) $generated@@68)) (= (type $generated@@53) $generated@@68)) (= (type $generated@@54) $generated@@68)) (= (type $generated@@55) $generated@@68)) (= (type $generated@@56) $generated@@68)) (= (type $generated@@57) $generated@@68)) (= (type $generated@@58) $generated@@68)) (= (type $generated@@59) $generated@@68)) (forall (($generated@@73 T@T) ) (= ($generated@@1 ($generated@@69 $generated@@73)) 8))) (forall (($generated@@74 T@T) ) (! (= ($generated@@70 ($generated@@69 $generated@@74)) $generated@@74)
 :pattern ( ($generated@@69 $generated@@74))
))) (= (type $generated@@60) ($generated@@69 $generated@@4))) (= ($generated@@1 $generated@@71) 9)) (= (type $generated@@61) $generated@@71)) (= (type $generated@@62) $generated@@68)) (= (type $generated@@63) $generated@@68)) (= (type $generated@@64) $generated@@68)) (= ($generated@@1 $generated@@72) 10)) (= (type $generated@@65) $generated@@72)) (= (type $generated@@66) $generated@@72)))
(assert (distinct $generated@@44 $generated@@45 $generated@@46 $generated@@47 $generated@@48 $generated@@49 $generated@@50 $generated@@51 $generated@@52 $generated@@53 $generated@@54 $generated@@55 $generated@@56 $generated@@57 $generated@@58 $generated@@59 $generated@@60 $generated@@61 $generated@@62 $generated@@63 $generated@@64 $generated@@65 $generated@@66)
)
(assert (forall (($generated@@76 T@U) ) (! (= (type ($generated@@75 $generated@@76)) $generated@@68)
 :pattern ( ($generated@@75 $generated@@76))
)))
(assert (= ($generated@@75 $generated@@44) $generated@@49))
(assert (= ($generated@@75 $generated@@45) $generated@@50))
(assert (= ($generated@@75 $generated@@46) $generated@@51))
(assert (= ($generated@@75 $generated@@47) $generated@@52))
(assert (= ($generated@@75 $generated@@48) $generated@@53))
(assert  (and (and (and (and (and (and (and (and (and (and (and (and (and (forall (($generated@@88 T@T) ($generated@@89 T@T) ) (= ($generated@@1 ($generated@@79 $generated@@88 $generated@@89)) 11)) (forall (($generated@@90 T@T) ($generated@@91 T@T) ) (! (= ($generated@@82 ($generated@@79 $generated@@90 $generated@@91)) $generated@@90)
 :pattern ( ($generated@@79 $generated@@90 $generated@@91))
))) (forall (($generated@@92 T@T) ($generated@@93 T@T) ) (! (= ($generated@@83 ($generated@@79 $generated@@92 $generated@@93)) $generated@@93)
 :pattern ( ($generated@@79 $generated@@92 $generated@@93))
))) (forall (($generated@@94 T@U) ($generated@@95 T@U) ) (! (let (($generated@@96 ($generated@@83 (type $generated@@94))))
(= (type ($generated@@84 $generated@@94 $generated@@95)) $generated@@96))
 :pattern ( ($generated@@84 $generated@@94 $generated@@95))
))) (forall (($generated@@97 T@U) ($generated@@98 T@U) ($generated@@99 T@U) ) (! (let (($generated@@100 (type $generated@@99)))
(let (($generated@@101 (type $generated@@98)))
(= (type ($generated@@85 $generated@@97 $generated@@98 $generated@@99)) ($generated@@79 $generated@@101 $generated@@100))))
 :pattern ( ($generated@@85 $generated@@97 $generated@@98 $generated@@99))
))) (forall (($generated@@102 T@U) ($generated@@103 T@U) ($generated@@104 T@U) ) (! (let (($generated@@105 ($generated@@83 (type $generated@@102))))
 (=> (= (type $generated@@104) $generated@@105) (= ($generated@@84 ($generated@@85 $generated@@102 $generated@@103 $generated@@104) $generated@@103) $generated@@104)))
 :weight 0
))) (and (forall (($generated@@106 T@U) ($generated@@107 T@U) ($generated@@108 T@U) ($generated@@109 T@U) ) (!  (or (= $generated@@108 $generated@@109) (= ($generated@@84 ($generated@@85 $generated@@107 $generated@@108 $generated@@106) $generated@@109) ($generated@@84 $generated@@107 $generated@@109)))
 :weight 0
)) (forall (($generated@@110 T@U) ($generated@@111 T@U) ($generated@@112 T@U) ($generated@@113 T@U) ) (!  (or true (= ($generated@@84 ($generated@@85 $generated@@111 $generated@@112 $generated@@110) $generated@@113) ($generated@@84 $generated@@111 $generated@@113)))
 :weight 0
)))) (= ($generated@@1 $generated@@80) 12)) (forall (($generated@@114 T@U) ($generated@@115 T@U) ) (! (let (($generated@@116 ($generated@@70 (type $generated@@115))))
(= (type ($generated@@86 $generated@@114 $generated@@115)) $generated@@116))
 :pattern ( ($generated@@86 $generated@@114 $generated@@115))
))) (= ($generated@@1 $generated@@81) 13)) (forall (($generated@@117 T@U) ($generated@@118 T@U) ($generated@@119 T@U) ) (! (= (type ($generated@@87 $generated@@117 $generated@@118 $generated@@119)) $generated@@81)
 :pattern ( ($generated@@87 $generated@@117 $generated@@118 $generated@@119))
))) (forall (($generated@@120 T@U) ($generated@@121 T@U) ($generated@@122 T@U) ) (! (let (($generated@@123 ($generated@@70 (type $generated@@121))))
 (=> (= (type $generated@@122) $generated@@123) (= ($generated@@86 ($generated@@87 $generated@@120 $generated@@121 $generated@@122) $generated@@121) $generated@@122)))
 :weight 0
))) (and (forall (($generated@@124 T@U) ($generated@@125 T@U) ($generated@@126 T@U) ($generated@@127 T@U) ) (!  (or (= $generated@@126 $generated@@127) (= ($generated@@86 ($generated@@87 $generated@@125 $generated@@126 $generated@@124) $generated@@127) ($generated@@86 $generated@@125 $generated@@127)))
 :weight 0
)) (forall (($generated@@128 T@U) ($generated@@129 T@U) ($generated@@130 T@U) ($generated@@131 T@U) ) (!  (or true (= ($generated@@86 ($generated@@87 $generated@@129 $generated@@130 $generated@@128) $generated@@131) ($generated@@86 $generated@@129 $generated@@131)))
 :weight 0
)))) (forall (($generated@@132 Int) ) (! (= (type ($generated@@78 $generated@@132)) $generated@@67)
 :pattern ( ($generated@@78 $generated@@132))
))))
(assert (forall (($generated@@133 T@U) ($generated@@134 T@U) ) (!  (=> (and (= (type $generated@@133) $generated@@2) (= (type $generated@@134) ($generated@@79 $generated@@80 $generated@@81))) ($generated@@77 $generated@@133 ($generated@@78 0) $generated@@134))
 :pattern ( ($generated@@77 $generated@@133 ($generated@@78 0) $generated@@134))
)))
(assert (= ($generated@@1 $generated@@136) 14))
(assert (forall (($generated@@137 T@U) ($generated@@138 T@U) ($generated@@139 T@U) ) (!  (=> (and (and (and (= (type $generated@@137) $generated@@136) (= (type $generated@@138) $generated@@136)) (= (type $generated@@139) $generated@@136)) (and ($generated@@135 $generated@@137 $generated@@138) ($generated@@135 $generated@@138 $generated@@139))) ($generated@@135 $generated@@137 $generated@@139))
 :pattern ( ($generated@@135 $generated@@137 $generated@@138) ($generated@@135 $generated@@138 $generated@@139))
 :pattern ( ($generated@@135 $generated@@137 $generated@@138) ($generated@@135 $generated@@137 $generated@@139))
)))
(assert (forall (($generated@@141 T@U) ) (!  (=> (= (type $generated@@141) $generated@@2) ($generated@@140 $generated@@141 ($generated@@78 0)))
 :pattern ( ($generated@@140 $generated@@141 ($generated@@78 0)))
)))
(assert  (and (forall (($generated@@145 T@U) ($generated@@146 T@U) ) (! (= (type ($generated@@142 $generated@@145 $generated@@146)) $generated@@136)
 :pattern ( ($generated@@142 $generated@@145 $generated@@146))
)) (forall (($generated@@147 Int) ) (! (= (type ($generated@@143 $generated@@147)) $generated@@136)
 :pattern ( ($generated@@143 $generated@@147))
))))
(assert (forall (($generated@@148 T@U) ($generated@@149 Int) ($generated@@150 Int) ) (!  (=> (= (type $generated@@148) $generated@@136) (=> (and (and (<= 0 $generated@@149) (<= 0 $generated@@150)) (<= (+ $generated@@149 $generated@@150) ($generated@@144 $generated@@148))) (= ($generated@@142 ($generated@@142 $generated@@148 ($generated@@143 $generated@@149)) ($generated@@143 $generated@@150)) ($generated@@142 $generated@@148 ($generated@@143 (+ $generated@@149 $generated@@150))))))
 :pattern ( ($generated@@142 ($generated@@142 $generated@@148 ($generated@@143 $generated@@149)) ($generated@@143 $generated@@150)))
)))
(assert  (and (= ($generated@@1 $generated@@153) 15) (forall (($generated@@154 T@U) ($generated@@155 T@U) ) (! (= (type ($generated@@152 $generated@@154 $generated@@155)) $generated@@67)
 :pattern ( ($generated@@152 $generated@@154 $generated@@155))
))))
(assert (forall (($generated@@156 T@U) ($generated@@157 T@U) ($generated@@158 T@U) ) (!  (=> (and (and (and (= (type $generated@@156) $generated@@67) (= (type $generated@@157) $generated@@67)) (= (type $generated@@158) $generated@@153)) ($generated@@140 $generated@@158 ($generated@@152 $generated@@156 $generated@@157))) ($generated@@151 $generated@@158))
 :pattern ( ($generated@@151 $generated@@158) ($generated@@140 $generated@@158 ($generated@@152 $generated@@156 $generated@@157)))
)))
(assert  (and (forall (($generated@@162 T@U) ) (! (= (type ($generated@@160 $generated@@162)) $generated@@136)
 :pattern ( ($generated@@160 $generated@@162))
)) (forall (($generated@@163 T@U) ) (! (= (type ($generated@@161 $generated@@163)) $generated@@136)
 :pattern ( ($generated@@161 $generated@@163))
))))
(assert (forall (($generated@@164 T@U) ($generated@@165 T@U) ) (!  (=> (and (and (= (type $generated@@164) $generated@@153) (= (type $generated@@165) $generated@@153)) true) (= ($generated@@159 $generated@@164 $generated@@165)  (and (= ($generated@@160 $generated@@164) ($generated@@160 $generated@@165)) (= ($generated@@161 $generated@@164) ($generated@@161 $generated@@165)))))
 :pattern ( ($generated@@159 $generated@@164 $generated@@165))
)))
(assert (forall (($generated@@168 T@U) ) (! (= (type ($generated@@166 $generated@@168)) $generated@@67)
 :pattern ( ($generated@@166 $generated@@168))
)))
(assert (forall (($generated@@169 T@U) ($generated@@170 T@U) ) (!  (=> (and (and (= (type $generated@@169) ($generated@@79 $generated@@136 $generated@@2)) (= (type $generated@@170) $generated@@67)) ($generated@@140 $generated@@169 ($generated@@166 $generated@@170))) ($generated@@167 $generated@@169))
 :pattern ( ($generated@@140 $generated@@169 ($generated@@166 $generated@@170)))
)))
(assert  (and (and (and (and (and (and (and (forall (($generated@@177 T@T) ($generated@@178 T@T) ) (= ($generated@@1 ($generated@@173 $generated@@177 $generated@@178)) 16)) (forall (($generated@@179 T@T) ($generated@@180 T@T) ) (! (= ($generated@@174 ($generated@@173 $generated@@179 $generated@@180)) $generated@@179)
 :pattern ( ($generated@@173 $generated@@179 $generated@@180))
))) (forall (($generated@@181 T@T) ($generated@@182 T@T) ) (! (= ($generated@@175 ($generated@@173 $generated@@181 $generated@@182)) $generated@@182)
 :pattern ( ($generated@@173 $generated@@181 $generated@@182))
))) (forall (($generated@@183 T@U) ($generated@@184 T@U) ($generated@@185 T@U) ) (! (let (($generated@@186 ($generated@@175 (type $generated@@183))))
(= (type ($generated@@171 $generated@@183 $generated@@184 $generated@@185)) $generated@@186))
 :pattern ( ($generated@@171 $generated@@183 $generated@@184 $generated@@185))
))) (forall (($generated@@187 T@U) ($generated@@188 T@U) ($generated@@189 T@U) ($generated@@190 T@U) ) (! (let (($generated@@191 (type $generated@@190)))
(let (($generated@@192 (type $generated@@188)))
(= (type ($generated@@176 $generated@@187 $generated@@188 $generated@@189 $generated@@190)) ($generated@@173 $generated@@192 $generated@@191))))
 :pattern ( ($generated@@176 $generated@@187 $generated@@188 $generated@@189 $generated@@190))
))) (forall (($generated@@193 T@U) ($generated@@194 T@U) ($generated@@195 T@U) ($generated@@196 T@U) ) (! (let (($generated@@197 ($generated@@175 (type $generated@@193))))
 (=> (= (type $generated@@196) $generated@@197) (= ($generated@@171 ($generated@@176 $generated@@193 $generated@@194 $generated@@195 $generated@@196) $generated@@194 $generated@@195) $generated@@196)))
 :weight 0
))) (and (and (forall (($generated@@198 T@U) ($generated@@199 T@U) ($generated@@200 T@U) ($generated@@201 T@U) ($generated@@202 T@U) ($generated@@203 T@U) ) (!  (or (= $generated@@200 $generated@@202) (= ($generated@@171 ($generated@@176 $generated@@199 $generated@@200 $generated@@201 $generated@@198) $generated@@202 $generated@@203) ($generated@@171 $generated@@199 $generated@@202 $generated@@203)))
 :weight 0
)) (forall (($generated@@204 T@U) ($generated@@205 T@U) ($generated@@206 T@U) ($generated@@207 T@U) ($generated@@208 T@U) ($generated@@209 T@U) ) (!  (or (= $generated@@207 $generated@@209) (= ($generated@@171 ($generated@@176 $generated@@205 $generated@@206 $generated@@207 $generated@@204) $generated@@208 $generated@@209) ($generated@@171 $generated@@205 $generated@@208 $generated@@209)))
 :weight 0
))) (forall (($generated@@210 T@U) ($generated@@211 T@U) ($generated@@212 T@U) ($generated@@213 T@U) ($generated@@214 T@U) ($generated@@215 T@U) ) (!  (or true (= ($generated@@171 ($generated@@176 $generated@@211 $generated@@212 $generated@@213 $generated@@210) $generated@@214 $generated@@215) ($generated@@171 $generated@@211 $generated@@214 $generated@@215)))
 :weight 0
)))) (forall (($generated@@216 T@U) ($generated@@217 T@U) ($generated@@218 T@U) ($generated@@219 Bool) ) (! (= (type ($generated@@172 $generated@@216 $generated@@217 $generated@@218 $generated@@219)) ($generated@@173 $generated@@80 $generated@@4))
 :pattern ( ($generated@@172 $generated@@216 $generated@@217 $generated@@218 $generated@@219))
))))
(assert (forall (($generated@@220 T@U) ($generated@@221 T@U) ($generated@@222 T@U) ($generated@@223 Bool) ($generated@@224 T@U) ($generated@@225 T@U) ) (! (let (($generated@@226 ($generated@@70 (type $generated@@225))))
 (=> (and (and (and (and (= (type $generated@@220) $generated@@80) (= (type $generated@@221) ($generated@@79 $generated@@80 $generated@@81))) (= (type $generated@@222) ($generated@@69 $generated@@4))) (= (type $generated@@224) $generated@@80)) (= (type $generated@@225) ($generated@@69 $generated@@226))) (= ($generated@@0 ($generated@@171 ($generated@@172 $generated@@220 $generated@@221 $generated@@222 $generated@@223) $generated@@224 $generated@@225))  (=> (and (not (= $generated@@224 $generated@@220)) ($generated@@0 ($generated@@86 ($generated@@84 $generated@@221 $generated@@224) $generated@@222))) $generated@@223))))
 :pattern ( ($generated@@171 ($generated@@172 $generated@@220 $generated@@221 $generated@@222 $generated@@223) $generated@@224 $generated@@225))
)))
(assert  (and (and (= ($generated@@1 $generated@@229) 17) (= (type $generated@@231) $generated@@80)) (forall (($generated@@233 T@U) ($generated@@234 T@U) ) (! (= (type ($generated@@232 $generated@@233 $generated@@234)) $generated@@67)
 :pattern ( ($generated@@232 $generated@@233 $generated@@234))
))))
(assert  (=> (<= 1 $generated@@227) (forall (($generated@@235 T@U) ($generated@@236 T@U) ($generated@@237 T@U) ($generated@@238 T@U) ($generated@@239 T@U) ($generated@@240 T@U) ) (!  (=> (and (and (and (and (and (and (= (type $generated@@235) $generated@@67) (= (type $generated@@236) $generated@@67)) (= (type $generated@@237) $generated@@67)) (= (type $generated@@238) $generated@@229)) (= (type $generated@@239) $generated@@80)) (= (type $generated@@240) $generated@@136)) (or ($generated@@230 $generated@@235 $generated@@236 $generated@@237 $generated@@239 $generated@@240) (and (not (= 1 $generated@@227)) (and (not (= $generated@@239 $generated@@231)) ($generated@@140 $generated@@239 ($generated@@232 $generated@@235 $generated@@236)))))) true)
 :pattern ( ($generated@@228 $generated@@235 $generated@@236 $generated@@237 $generated@@238 $generated@@239 $generated@@240))
))))
(assert (forall (($generated@@243 T@U) ) (! (= (type ($generated@@242 $generated@@243)) $generated@@229)
 :pattern ( ($generated@@242 $generated@@243))
)))
(assert  (=> (<= 1 $generated@@227) (forall (($generated@@244 T@U) ($generated@@245 T@U) ($generated@@246 T@U) ($generated@@247 T@U) ($generated@@248 T@U) ) (!  (=> (and (and (and (and (and (= (type $generated@@244) $generated@@67) (= (type $generated@@245) $generated@@67)) (= (type $generated@@246) $generated@@67)) (= (type $generated@@247) $generated@@229)) (= (type $generated@@248) $generated@@80)) (and (and (not (= $generated@@248 $generated@@231)) ($generated@@140 $generated@@248 ($generated@@232 $generated@@244 $generated@@245))) (forall (($generated@@249 T@U) ) (!  (=> (= (type $generated@@249) $generated@@136) ($generated@@228 $generated@@244 $generated@@245 $generated@@246 ($generated@@242 $generated@@247) $generated@@248 $generated@@249))
 :pattern ( ($generated@@228 $generated@@244 $generated@@245 $generated@@246 ($generated@@242 $generated@@247) $generated@@248 $generated@@249))
)))) ($generated@@241 $generated@@244 $generated@@245 $generated@@246 ($generated@@242 $generated@@247) $generated@@248))
 :pattern ( ($generated@@241 $generated@@244 $generated@@245 $generated@@246 ($generated@@242 $generated@@247) $generated@@248))
))))
(assert (forall (($generated@@252 T@U) ($generated@@253 T@U) ) (! (= (type ($generated@@250 $generated@@252 $generated@@253)) $generated@@153)
 :pattern ( ($generated@@250 $generated@@252 $generated@@253))
)))
(assert (forall (($generated@@254 T@U) ($generated@@255 T@U) ($generated@@256 T@U) ($generated@@257 T@U) ) (!  (=> (and (and (and (= (type $generated@@254) $generated@@67) (= (type $generated@@255) $generated@@67)) (= (type $generated@@256) $generated@@136)) (= (type $generated@@257) $generated@@136)) (= ($generated@@140 ($generated@@250 $generated@@256 $generated@@257) ($generated@@152 $generated@@254 $generated@@255))  (and ($generated@@251 $generated@@256 $generated@@254) ($generated@@251 $generated@@257 $generated@@255))))
 :pattern ( ($generated@@140 ($generated@@250 $generated@@256 $generated@@257) ($generated@@152 $generated@@254 $generated@@255)))
)))
(assert (forall (($generated@@258 T@U) ($generated@@259 T@U) ) (!  (=> (and (= (type $generated@@258) $generated@@153) (= (type $generated@@259) $generated@@153)) (= ($generated@@159 $generated@@258 $generated@@259) (= $generated@@258 $generated@@259)))
 :pattern ( ($generated@@159 $generated@@258 $generated@@259))
)))
(assert (forall (($generated@@261 T@U) ) (! (= (type ($generated@@260 $generated@@261)) $generated@@67)
 :pattern ( ($generated@@260 $generated@@261))
)))
(assert (forall (($generated@@262 T@U) ($generated@@263 T@U) ) (!  (=> (and (= (type $generated@@262) ($generated@@79 $generated@@136 $generated@@4)) (= (type $generated@@263) $generated@@67)) (= ($generated@@140 $generated@@262 ($generated@@260 $generated@@263)) (forall (($generated@@264 T@U) ) (!  (=> (and (= (type $generated@@264) $generated@@136) ($generated@@0 ($generated@@84 $generated@@262 $generated@@264))) ($generated@@251 $generated@@264 $generated@@263))
 :pattern ( ($generated@@84 $generated@@262 $generated@@264))
))))
 :pattern ( ($generated@@140 $generated@@262 ($generated@@260 $generated@@263)))
)))
(assert (forall (($generated@@266 T@U) ) (! (= (type ($generated@@265 $generated@@266)) $generated@@67)
 :pattern ( ($generated@@265 $generated@@266))
)))
(assert (forall (($generated@@267 T@U) ($generated@@268 T@U) ) (!  (=> (and (= (type $generated@@267) ($generated@@79 $generated@@136 $generated@@4)) (= (type $generated@@268) $generated@@67)) (= ($generated@@140 $generated@@267 ($generated@@265 $generated@@268)) (forall (($generated@@269 T@U) ) (!  (=> (and (= (type $generated@@269) $generated@@136) ($generated@@0 ($generated@@84 $generated@@267 $generated@@269))) ($generated@@251 $generated@@269 $generated@@268))
 :pattern ( ($generated@@84 $generated@@267 $generated@@269))
))))
 :pattern ( ($generated@@140 $generated@@267 ($generated@@265 $generated@@268)))
)))
(assert (forall (($generated@@271 Int) ) (! (= ($generated@@270 $generated@@271) $generated@@271)
 :pattern ( ($generated@@270 $generated@@271))
)))
(assert (forall (($generated@@273 T@U) ) (! (let (($generated@@274 (type $generated@@273)))
(= (type ($generated@@272 $generated@@273)) $generated@@274))
 :pattern ( ($generated@@272 $generated@@273))
)))
(assert (forall (($generated@@275 T@U) ) (! (= ($generated@@272 $generated@@275) $generated@@275)
 :pattern ( ($generated@@272 $generated@@275))
)))
(assert (forall (($generated@@278 T@U) ($generated@@279 T@U) ($generated@@280 T@U) ($generated@@281 T@U) ($generated@@282 T@U) ) (!  (=> (and (and (and (and (and (= (type $generated@@278) $generated@@67) (= (type $generated@@279) $generated@@67)) (= (type $generated@@280) $generated@@136)) (= (type $generated@@281) $generated@@136)) (= (type $generated@@282) ($generated@@79 $generated@@80 $generated@@81))) ($generated@@276 $generated@@282)) (= ($generated@@77 ($generated@@250 $generated@@280 $generated@@281) ($generated@@152 $generated@@278 $generated@@279) $generated@@282)  (and ($generated@@277 $generated@@280 $generated@@278 $generated@@282) ($generated@@277 $generated@@281 $generated@@279 $generated@@282))))
 :pattern ( ($generated@@77 ($generated@@250 $generated@@280 $generated@@281) ($generated@@152 $generated@@278 $generated@@279) $generated@@282))
)))
(assert (forall (($generated@@284 T@U) ) (! (= (type ($generated@@283 $generated@@284)) $generated@@71)
 :pattern ( ($generated@@283 $generated@@284))
)))
(assert (forall (($generated@@285 T@U) ) (!  (=> (= (type $generated@@285) $generated@@153) (= ($generated@@151 $generated@@285) (= ($generated@@283 $generated@@285) $generated@@61)))
 :pattern ( ($generated@@151 $generated@@285))
)))
(assert (forall (($generated@@286 T@U) ) (!  (=> (and (= (type $generated@@286) $generated@@153) ($generated@@151 $generated@@286)) (exists (($generated@@287 T@U) ($generated@@288 T@U) ) (!  (and (and (= (type $generated@@287) $generated@@136) (= (type $generated@@288) $generated@@136)) (= $generated@@286 ($generated@@250 $generated@@287 $generated@@288)))
 :no-pattern (type $generated@@287)
 :no-pattern (type $generated@@288)
 :no-pattern ($generated $generated@@287)
 :no-pattern ($generated@@0 $generated@@287)
 :no-pattern ($generated $generated@@288)
 :no-pattern ($generated@@0 $generated@@288)
)))
 :pattern ( ($generated@@151 $generated@@286))
)))
(assert  (and (and (forall (($generated@@293 T@T) ) (= ($generated@@1 ($generated@@291 $generated@@293)) 18)) (forall (($generated@@294 T@T) ) (! (= ($generated@@292 ($generated@@291 $generated@@294)) $generated@@294)
 :pattern ( ($generated@@291 $generated@@294))
))) (forall (($generated@@295 T@T) ) (! (= (type ($generated@@289 $generated@@295)) ($generated@@291 $generated@@295))
 :pattern ( ($generated@@289 $generated@@295))
))))
(assert (forall (($generated@@296 T@T) ) (! (= ($generated@@290 ($generated@@289 $generated@@296)) 0)
 :pattern ( ($generated@@289 $generated@@296))
)))
(assert (forall (($generated@@298 T@U) ($generated@@299 T@U) ) (! (= (type ($generated@@297 $generated@@298 $generated@@299)) $generated@@67)
 :pattern ( ($generated@@297 $generated@@298 $generated@@299))
)))
(assert (forall (($generated@@300 T@U) ($generated@@301 T@U) ($generated@@302 T@U) ) (!  (=> (and (and (= (type $generated@@300) $generated@@67) (= (type $generated@@301) $generated@@67)) (= (type $generated@@302) $generated@@80)) (= ($generated@@140 $generated@@302 ($generated@@232 $generated@@300 $generated@@301))  (and ($generated@@140 $generated@@302 ($generated@@297 $generated@@300 $generated@@301)) (not (= $generated@@302 $generated@@231)))))
 :pattern ( ($generated@@140 $generated@@302 ($generated@@232 $generated@@300 $generated@@301)))
)))
(assert (forall (($generated@@303 T@U) ($generated@@304 T@U) ($generated@@305 T@U) ($generated@@306 T@U) ($generated@@307 T@U) ($generated@@308 T@U) ) (!  (=> (and (and (and (and (and (= (type $generated@@303) $generated@@67) (= (type $generated@@304) $generated@@67)) (= (type $generated@@305) $generated@@67)) (= (type $generated@@306) $generated@@229)) (= (type $generated@@307) $generated@@80)) (= (type $generated@@308) $generated@@136)) (= ($generated@@228 $generated@@303 $generated@@304 $generated@@305 ($generated@@242 $generated@@306) $generated@@307 $generated@@308) ($generated@@228 $generated@@303 $generated@@304 $generated@@305 $generated@@306 $generated@@307 $generated@@308)))
 :pattern ( ($generated@@228 $generated@@303 $generated@@304 $generated@@305 ($generated@@242 $generated@@306) $generated@@307 $generated@@308))
)))
(assert (forall (($generated@@310 T@U) ) (! (= (type ($generated@@309 $generated@@310)) $generated@@136)
 :pattern ( ($generated@@309 $generated@@310))
)))
(assert (forall (($generated@@311 T@U) ($generated@@312 T@U) ($generated@@313 T@U) ) (!  (=> (and (= (type $generated@@312) $generated@@67) (= (type $generated@@313) ($generated@@79 $generated@@80 $generated@@81))) (= ($generated@@277 ($generated@@309 $generated@@311) $generated@@312 $generated@@313) ($generated@@77 $generated@@311 $generated@@312 $generated@@313)))
 :pattern ( ($generated@@277 ($generated@@309 $generated@@311) $generated@@312 $generated@@313))
)))
(assert (forall (($generated@@315 T@U) ) (! (= (type ($generated@@314 $generated@@315)) $generated@@67)
 :pattern ( ($generated@@314 $generated@@315))
)))
(assert (forall (($generated@@316 T@U) ($generated@@317 T@U) ($generated@@318 T@U) ) (!  (=> (and (and (= (type $generated@@316) $generated@@67) (= (type $generated@@317) $generated@@67)) (= (type $generated@@318) $generated@@80)) (= ($generated@@140 $generated@@318 ($generated@@297 $generated@@316 $generated@@317))  (or (= $generated@@318 $generated@@231) (= ($generated@@314 $generated@@318) ($generated@@297 $generated@@316 $generated@@317)))))
 :pattern ( ($generated@@140 $generated@@318 ($generated@@297 $generated@@316 $generated@@317)))
)))
(assert (forall (($generated@@321 T@T) ) (! (= (type ($generated@@320 $generated@@321)) ($generated@@79 $generated@@321 $generated@@2))
 :pattern ( ($generated@@320 $generated@@321))
)))
(assert (forall (($generated@@322 T@U) ) (! (let (($generated@@323 ($generated@@82 (type $generated@@322))))
 (=> (= (type $generated@@322) ($generated@@79 $generated@@323 $generated@@2)) (and (= (= ($generated@@319 $generated@@322) 0) (= $generated@@322 ($generated@@320 $generated@@323))) (=> (not (= ($generated@@319 $generated@@322) 0)) (exists (($generated@@324 T@U) ) (!  (and (= (type $generated@@324) $generated@@323) (< 0 ($generated ($generated@@84 $generated@@322 $generated@@324))))
 :no-pattern (type $generated@@324)
 :no-pattern ($generated $generated@@324)
 :no-pattern ($generated@@0 $generated@@324)
))))))
 :pattern ( ($generated@@319 $generated@@322))
)))
(assert  (and (and (and (and (forall (($generated@@330 T@T) ($generated@@331 T@T) ) (= ($generated@@1 ($generated@@327 $generated@@330 $generated@@331)) 19)) (forall (($generated@@332 T@T) ($generated@@333 T@T) ) (! (= ($generated@@328 ($generated@@327 $generated@@332 $generated@@333)) $generated@@332)
 :pattern ( ($generated@@327 $generated@@332 $generated@@333))
))) (forall (($generated@@334 T@T) ($generated@@335 T@T) ) (! (= ($generated@@329 ($generated@@327 $generated@@334 $generated@@335)) $generated@@335)
 :pattern ( ($generated@@327 $generated@@334 $generated@@335))
))) (forall (($generated@@336 T@U) ) (! (let (($generated@@337 ($generated@@328 (type $generated@@336))))
(= (type ($generated@@325 $generated@@336)) ($generated@@79 $generated@@337 $generated@@4)))
 :pattern ( ($generated@@325 $generated@@336))
))) (forall (($generated@@338 T@T) ($generated@@339 T@T) ) (! (= (type ($generated@@326 $generated@@338 $generated@@339)) ($generated@@327 $generated@@338 $generated@@339))
 :pattern ( ($generated@@326 $generated@@338 $generated@@339))
))))
(assert (forall (($generated@@340 T@U) ($generated@@341 T@T) ) (! (let (($generated@@342 (type $generated@@340)))
 (not ($generated@@0 ($generated@@84 ($generated@@325 ($generated@@326 $generated@@342 $generated@@341)) $generated@@340))))
 :pattern ( (let (($generated@@342 (type $generated@@340)))
($generated@@84 ($generated@@325 ($generated@@326 $generated@@342 $generated@@341)) $generated@@340)))
)))
(assert  (and (and (and (and (forall (($generated@@348 T@T) ($generated@@349 T@T) ) (= ($generated@@1 ($generated@@345 $generated@@348 $generated@@349)) 20)) (forall (($generated@@350 T@T) ($generated@@351 T@T) ) (! (= ($generated@@346 ($generated@@345 $generated@@350 $generated@@351)) $generated@@350)
 :pattern ( ($generated@@345 $generated@@350 $generated@@351))
))) (forall (($generated@@352 T@T) ($generated@@353 T@T) ) (! (= ($generated@@347 ($generated@@345 $generated@@352 $generated@@353)) $generated@@353)
 :pattern ( ($generated@@345 $generated@@352 $generated@@353))
))) (forall (($generated@@354 T@U) ) (! (let (($generated@@355 ($generated@@346 (type $generated@@354))))
(= (type ($generated@@343 $generated@@354)) ($generated@@79 $generated@@355 $generated@@4)))
 :pattern ( ($generated@@343 $generated@@354))
))) (forall (($generated@@356 T@T) ($generated@@357 T@T) ) (! (= (type ($generated@@344 $generated@@356 $generated@@357)) ($generated@@345 $generated@@356 $generated@@357))
 :pattern ( ($generated@@344 $generated@@356 $generated@@357))
))))
(assert (forall (($generated@@358 T@U) ($generated@@359 T@T) ) (! (let (($generated@@360 (type $generated@@358)))
 (not ($generated@@0 ($generated@@84 ($generated@@343 ($generated@@344 $generated@@360 $generated@@359)) $generated@@358))))
 :pattern ( (let (($generated@@360 (type $generated@@358)))
($generated@@84 ($generated@@343 ($generated@@344 $generated@@360 $generated@@359)) $generated@@358)))
)))
(assert (forall (($generated@@361 T@U) ($generated@@362 T@U) ($generated@@363 T@U) ($generated@@364 T@U) ) (!  (=> (and (and (and (= (type $generated@@361) $generated@@67) (= (type $generated@@362) $generated@@67)) (= (type $generated@@363) $generated@@80)) (= (type $generated@@364) ($generated@@79 $generated@@80 $generated@@81))) (= ($generated@@77 $generated@@363 ($generated@@297 $generated@@361 $generated@@362) $generated@@364)  (or (= $generated@@363 $generated@@231) ($generated@@0 ($generated@@86 ($generated@@84 $generated@@364 $generated@@363) $generated@@60)))))
 :pattern ( ($generated@@77 $generated@@363 ($generated@@297 $generated@@361 $generated@@362) $generated@@364))
)))
(assert (forall (($generated@@366 T@U) ($generated@@367 T@U) ) (!  (=> (and (and (= (type $generated@@366) $generated@@136) (= (type $generated@@367) $generated@@136)) (and ($generated@@365 $generated@@367) (<= ($generated@@144 $generated@@367) ($generated@@144 $generated@@366)))) (and (= ($generated@@365 ($generated@@142 $generated@@366 $generated@@367)) ($generated@@365 $generated@@366)) (= ($generated@@144 ($generated@@142 $generated@@366 $generated@@367)) (- ($generated@@144 $generated@@366) ($generated@@144 $generated@@367)))))
 :pattern ( ($generated@@142 $generated@@366 $generated@@367))
)))
(assert  (and (forall (($generated@@370 T@U) ) (! (= (type ($generated@@368 $generated@@370)) $generated@@229)
 :pattern ( ($generated@@368 $generated@@370))
)) (= (type $generated@@369) $generated@@229)))
(assert (forall (($generated@@371 T@U) ($generated@@372 T@U) ($generated@@373 T@U) ($generated@@374 T@U) ($generated@@375 T@U) ) (!  (=> (and (and (and (and (= (type $generated@@371) $generated@@67) (= (type $generated@@372) $generated@@67)) (= (type $generated@@373) $generated@@67)) (= (type $generated@@374) $generated@@229)) (= (type $generated@@375) $generated@@80)) (= ($generated@@241 $generated@@371 $generated@@372 $generated@@373 $generated@@374 $generated@@375) ($generated@@241 $generated@@371 $generated@@372 $generated@@373 $generated@@369 $generated@@375)))
 :pattern ( ($generated@@241 $generated@@371 $generated@@372 $generated@@373 ($generated@@368 $generated@@374) $generated@@375))
)))
(assert (forall (($generated@@376 Int) ) (!  (=> (<= 0 $generated@@376) (and ($generated@@365 ($generated@@143 $generated@@376)) (= ($generated@@144 ($generated@@143 $generated@@376)) $generated@@376)))
 :pattern ( ($generated@@143 $generated@@376))
)))
(assert (forall (($generated@@377 T@U) ($generated@@378 T@U) ($generated@@379 T@U) ($generated@@380 T@U) ) (!  (=> (and (and (and (= (type $generated@@377) $generated@@67) (= (type $generated@@378) $generated@@67)) (= (type $generated@@379) $generated@@80)) (= (type $generated@@380) ($generated@@79 $generated@@80 $generated@@81))) (= ($generated@@77 $generated@@379 ($generated@@232 $generated@@377 $generated@@378) $generated@@380) ($generated@@77 $generated@@379 ($generated@@297 $generated@@377 $generated@@378) $generated@@380)))
 :pattern ( ($generated@@77 $generated@@379 ($generated@@232 $generated@@377 $generated@@378) $generated@@380))
)))
(assert (forall (($generated@@381 T@U) ) (! (let (($generated@@382 ($generated@@82 (type $generated@@381))))
 (=> (= (type $generated@@381) ($generated@@79 $generated@@382 $generated@@2)) (= ($generated@@167 $generated@@381) (forall (($generated@@383 T@U) ) (!  (=> (= (type $generated@@383) $generated@@382) (and (<= 0 ($generated ($generated@@84 $generated@@381 $generated@@383))) (<= ($generated ($generated@@84 $generated@@381 $generated@@383)) ($generated@@319 $generated@@381))))
 :pattern ( ($generated@@84 $generated@@381 $generated@@383))
)))))
 :pattern ( ($generated@@167 $generated@@381))
)))
(assert  (=> (<= 1 $generated@@227) (forall (($generated@@384 T@U) ($generated@@385 T@U) ($generated@@386 T@U) ($generated@@387 T@U) ($generated@@388 T@U) ($generated@@389 T@U) ) (!  (=> (and (and (and (and (and (and (= (type $generated@@384) $generated@@67) (= (type $generated@@385) $generated@@67)) (= (type $generated@@386) $generated@@67)) (= (type $generated@@387) $generated@@229)) (= (type $generated@@388) $generated@@80)) (= (type $generated@@389) $generated@@136)) (or ($generated@@230 $generated@@384 $generated@@385 $generated@@386 $generated@@388 ($generated@@272 $generated@@389)) (and (not (= 1 $generated@@227)) (and (not (= $generated@@388 $generated@@231)) ($generated@@140 $generated@@388 ($generated@@232 $generated@@384 $generated@@385)))))) (and (and (=> (< 0 ($generated@@144 $generated@@389)) ($generated@@230 $generated@@384 $generated@@385 $generated@@386 $generated@@388 ($generated@@142 $generated@@389 ($generated@@143 1)))) (=> (=> (< 0 ($generated@@144 $generated@@389)) ($generated@@228 $generated@@384 $generated@@385 $generated@@386 ($generated@@242 $generated@@387) $generated@@388 ($generated@@142 $generated@@389 ($generated@@143 1)))) (=> (= ($generated@@270 0) ($generated@@144 $generated@@389)) (forall (($generated@@390 T@U) ) (!  (=> (and (= (type $generated@@390) $generated@@136) ($generated@@135 $generated@@390 $generated@@389)) ($generated@@230 $generated@@384 $generated@@385 $generated@@386 $generated@@388 $generated@@390))
 :pattern ( ($generated@@228 $generated@@384 $generated@@385 $generated@@386 ($generated@@242 $generated@@387) $generated@@388 $generated@@390))
))))) (= ($generated@@228 $generated@@384 $generated@@385 $generated@@386 ($generated@@242 $generated@@387) $generated@@388 ($generated@@272 $generated@@389))  (and (=> (< 0 ($generated@@144 $generated@@389)) ($generated@@228 $generated@@384 $generated@@385 $generated@@386 ($generated@@242 $generated@@387) $generated@@388 ($generated@@142 $generated@@389 ($generated@@143 1)))) (=> (= ($generated@@270 0) ($generated@@144 $generated@@389)) (forall (($generated@@391 T@U) ) (!  (=> (and (= (type $generated@@391) $generated@@136) ($generated@@135 $generated@@391 $generated@@389)) ($generated@@228 $generated@@384 $generated@@385 $generated@@386 ($generated@@242 $generated@@387) $generated@@388 $generated@@391))
 :pattern ( ($generated@@228 $generated@@384 $generated@@385 $generated@@386 ($generated@@242 $generated@@387) $generated@@388 $generated@@391))
)))))))
 :weight 3
 :pattern ( ($generated@@228 $generated@@384 $generated@@385 $generated@@386 ($generated@@242 $generated@@387) $generated@@388 ($generated@@272 $generated@@389)))
))))
(assert (forall (($generated@@392 T@U) ) (! (let (($generated@@393 ($generated@@329 (type $generated@@392))))
(let (($generated@@394 ($generated@@328 (type $generated@@392))))
 (=> (= (type $generated@@392) ($generated@@327 $generated@@394 $generated@@393)) (or (= $generated@@392 ($generated@@326 $generated@@394 $generated@@393)) (exists (($generated@@395 T@U) ) (!  (and (= (type $generated@@395) $generated@@394) ($generated@@0 ($generated@@84 ($generated@@325 $generated@@392) $generated@@395)))
 :no-pattern (type $generated@@395)
 :no-pattern ($generated $generated@@395)
 :no-pattern ($generated@@0 $generated@@395)
))))))
 :pattern ( ($generated@@325 $generated@@392))
)))
(assert (forall (($generated@@397 T@U) ) (! (let (($generated@@398 ($generated@@329 (type $generated@@397))))
(= (type ($generated@@396 $generated@@397)) ($generated@@79 $generated@@398 $generated@@4)))
 :pattern ( ($generated@@396 $generated@@397))
)))
(assert (forall (($generated@@399 T@U) ) (! (let (($generated@@400 ($generated@@329 (type $generated@@399))))
(let (($generated@@401 ($generated@@328 (type $generated@@399))))
 (=> (= (type $generated@@399) ($generated@@327 $generated@@401 $generated@@400)) (or (= $generated@@399 ($generated@@326 $generated@@401 $generated@@400)) (exists (($generated@@402 T@U) ) (!  (and (= (type $generated@@402) $generated@@400) ($generated@@0 ($generated@@84 ($generated@@396 $generated@@399) $generated@@402)))
 :no-pattern (type $generated@@402)
 :no-pattern ($generated $generated@@402)
 :no-pattern ($generated@@0 $generated@@402)
))))))
 :pattern ( ($generated@@396 $generated@@399))
)))
(assert (forall (($generated@@403 T@U) ) (! (let (($generated@@404 ($generated@@347 (type $generated@@403))))
(let (($generated@@405 ($generated@@346 (type $generated@@403))))
 (=> (= (type $generated@@403) ($generated@@345 $generated@@405 $generated@@404)) (or (= $generated@@403 ($generated@@344 $generated@@405 $generated@@404)) (exists (($generated@@406 T@U) ) (!  (and (= (type $generated@@406) $generated@@405) ($generated@@0 ($generated@@84 ($generated@@343 $generated@@403) $generated@@406)))
 :no-pattern (type $generated@@406)
 :no-pattern ($generated $generated@@406)
 :no-pattern ($generated@@0 $generated@@406)
))))))
 :pattern ( ($generated@@343 $generated@@403))
)))
(assert (forall (($generated@@408 T@U) ) (! (let (($generated@@409 ($generated@@347 (type $generated@@408))))
(= (type ($generated@@407 $generated@@408)) ($generated@@79 $generated@@409 $generated@@4)))
 :pattern ( ($generated@@407 $generated@@408))
)))
(assert (forall (($generated@@410 T@U) ) (! (let (($generated@@411 ($generated@@347 (type $generated@@410))))
(let (($generated@@412 ($generated@@346 (type $generated@@410))))
 (=> (= (type $generated@@410) ($generated@@345 $generated@@412 $generated@@411)) (or (= $generated@@410 ($generated@@344 $generated@@412 $generated@@411)) (exists (($generated@@413 T@U) ) (!  (and (= (type $generated@@413) $generated@@411) ($generated@@0 ($generated@@84 ($generated@@407 $generated@@410) $generated@@413)))
 :no-pattern (type $generated@@413)
 :no-pattern ($generated $generated@@413)
 :no-pattern ($generated@@0 $generated@@413)
))))))
 :pattern ( ($generated@@407 $generated@@410))
)))
(assert  (=> (<= 1 $generated@@227) (forall (($generated@@414 T@U) ($generated@@415 T@U) ($generated@@416 T@U) ($generated@@417 T@U) ($generated@@418 T@U) ($generated@@419 T@U) ) (!  (=> (and (and (and (and (and (and (= (type $generated@@414) $generated@@67) (= (type $generated@@415) $generated@@67)) (= (type $generated@@416) $generated@@67)) (= (type $generated@@417) $generated@@229)) (= (type $generated@@418) $generated@@80)) (= (type $generated@@419) $generated@@136)) (or ($generated@@230 $generated@@414 $generated@@415 $generated@@416 $generated@@418 $generated@@419) (and (not (= 1 $generated@@227)) (and (not (= $generated@@418 $generated@@231)) ($generated@@140 $generated@@418 ($generated@@232 $generated@@414 $generated@@415)))))) (and (and (=> (< 0 ($generated@@144 $generated@@419)) ($generated@@230 $generated@@414 $generated@@415 $generated@@416 $generated@@418 ($generated@@142 $generated@@419 ($generated@@143 1)))) (=> (=> (< 0 ($generated@@144 $generated@@419)) ($generated@@228 $generated@@414 $generated@@415 $generated@@416 $generated@@417 $generated@@418 ($generated@@142 $generated@@419 ($generated@@143 1)))) (=> (= ($generated@@270 0) ($generated@@144 $generated@@419)) (forall (($generated@@420 T@U) ) (!  (=> (and (= (type $generated@@420) $generated@@136) ($generated@@135 $generated@@420 $generated@@419)) ($generated@@230 $generated@@414 $generated@@415 $generated@@416 $generated@@418 $generated@@420))
 :pattern ( ($generated@@228 $generated@@414 $generated@@415 $generated@@416 $generated@@417 $generated@@418 $generated@@420))
))))) (= ($generated@@228 $generated@@414 $generated@@415 $generated@@416 ($generated@@242 $generated@@417) $generated@@418 $generated@@419)  (and (=> (< 0 ($generated@@144 $generated@@419)) ($generated@@228 $generated@@414 $generated@@415 $generated@@416 $generated@@417 $generated@@418 ($generated@@142 $generated@@419 ($generated@@143 1)))) (=> (= ($generated@@270 0) ($generated@@144 $generated@@419)) (forall (($generated@@421 T@U) ) (!  (=> (and (= (type $generated@@421) $generated@@136) ($generated@@135 $generated@@421 $generated@@419)) ($generated@@228 $generated@@414 $generated@@415 $generated@@416 $generated@@417 $generated@@418 $generated@@421))
 :pattern ( ($generated@@228 $generated@@414 $generated@@415 $generated@@416 $generated@@417 $generated@@418 $generated@@421))
)))))))
 :pattern ( ($generated@@228 $generated@@414 $generated@@415 $generated@@416 ($generated@@242 $generated@@417) $generated@@418 $generated@@419))
))))
(assert (forall (($generated@@422 T@U) ($generated@@423 T@U) ($generated@@424 T@U) ($generated@@425 T@U) ($generated@@426 T@U) ) (!  (=> (and (and (and (and (= (type $generated@@422) $generated@@67) (= (type $generated@@423) $generated@@67)) (= (type $generated@@424) $generated@@67)) (= (type $generated@@425) $generated@@229)) (= (type $generated@@426) $generated@@80)) (= ($generated@@241 $generated@@422 $generated@@423 $generated@@424 ($generated@@242 $generated@@425) $generated@@426) ($generated@@241 $generated@@422 $generated@@423 $generated@@424 $generated@@425 $generated@@426)))
 :pattern ( ($generated@@241 $generated@@422 $generated@@423 $generated@@424 ($generated@@242 $generated@@425) $generated@@426))
)))
(assert (forall (($generated@@427 T@U) ($generated@@428 T@U) ) (!  (=> (and (= (type $generated@@427) ($generated@@79 $generated@@136 $generated@@2)) (= (type $generated@@428) $generated@@67)) (= ($generated@@140 $generated@@427 ($generated@@166 $generated@@428)) (forall (($generated@@429 T@U) ) (!  (=> (and (= (type $generated@@429) $generated@@136) (< 0 ($generated ($generated@@84 $generated@@427 $generated@@429)))) ($generated@@251 $generated@@429 $generated@@428))
 :pattern ( ($generated@@84 $generated@@427 $generated@@429))
))))
 :pattern ( ($generated@@140 $generated@@427 ($generated@@166 $generated@@428)))
)))
(assert  (=> (<= 1 $generated@@227) (forall (($generated@@430 T@U) ($generated@@431 T@U) ($generated@@432 T@U) ($generated@@433 T@U) ($generated@@434 T@U) ) (!  (=> (and (and (and (and (and (= (type $generated@@430) $generated@@67) (= (type $generated@@431) $generated@@67)) (= (type $generated@@432) $generated@@67)) (= (type $generated@@433) $generated@@229)) (= (type $generated@@434) $generated@@80)) (and (and (not (= $generated@@434 $generated@@231)) ($generated@@140 $generated@@434 ($generated@@232 $generated@@430 $generated@@431))) ($generated@@241 $generated@@430 $generated@@431 $generated@@432 ($generated@@242 $generated@@433) $generated@@434))) (forall (($generated@@435 T@U) ) (!  (=> (= (type $generated@@435) $generated@@136) ($generated@@228 $generated@@430 $generated@@431 $generated@@432 ($generated@@242 $generated@@433) $generated@@434 $generated@@435))
 :pattern ( ($generated@@228 $generated@@430 $generated@@431 $generated@@432 ($generated@@242 $generated@@433) $generated@@434 $generated@@435))
)))
 :pattern ( ($generated@@241 $generated@@430 $generated@@431 $generated@@432 ($generated@@242 $generated@@433) $generated@@434))
))))
(assert (forall (($generated@@436 T@U) ($generated@@437 T@U) ) (!  (=> (and (= (type $generated@@436) $generated@@136) (= (type $generated@@437) $generated@@136)) (or (or ($generated@@135 $generated@@436 $generated@@437) (= $generated@@436 $generated@@437)) ($generated@@135 $generated@@437 $generated@@436)))
 :pattern ( ($generated@@135 $generated@@436 $generated@@437) ($generated@@135 $generated@@437 $generated@@436))
)))
(assert (forall (($generated@@438 T@U) ($generated@@439 T@U) ($generated@@440 T@U) ) (!  (=> (and (and (= (type $generated@@438) ($generated@@79 $generated@@136 $generated@@4)) (= (type $generated@@439) $generated@@67)) (= (type $generated@@440) ($generated@@79 $generated@@80 $generated@@81))) (= ($generated@@77 $generated@@438 ($generated@@260 $generated@@439) $generated@@440) (forall (($generated@@441 T@U) ) (!  (=> (and (= (type $generated@@441) $generated@@136) ($generated@@0 ($generated@@84 $generated@@438 $generated@@441))) ($generated@@277 $generated@@441 $generated@@439 $generated@@440))
 :pattern ( ($generated@@84 $generated@@438 $generated@@441))
))))
 :pattern ( ($generated@@77 $generated@@438 ($generated@@260 $generated@@439) $generated@@440))
)))
(assert (forall (($generated@@442 T@U) ($generated@@443 T@U) ($generated@@444 T@U) ) (!  (=> (and (and (= (type $generated@@442) ($generated@@79 $generated@@136 $generated@@4)) (= (type $generated@@443) $generated@@67)) (= (type $generated@@444) ($generated@@79 $generated@@80 $generated@@81))) (= ($generated@@77 $generated@@442 ($generated@@265 $generated@@443) $generated@@444) (forall (($generated@@445 T@U) ) (!  (=> (and (= (type $generated@@445) $generated@@136) ($generated@@0 ($generated@@84 $generated@@442 $generated@@445))) ($generated@@277 $generated@@445 $generated@@443 $generated@@444))
 :pattern ( ($generated@@84 $generated@@442 $generated@@445))
))))
 :pattern ( ($generated@@77 $generated@@442 ($generated@@265 $generated@@443) $generated@@444))
)))
(assert (forall (($generated@@446 T@U) ) (! (let (($generated@@447 (type $generated@@446)))
(= ($generated ($generated@@84 ($generated@@320 $generated@@447) $generated@@446)) 0))
 :pattern ( (let (($generated@@447 (type $generated@@446)))
($generated@@84 ($generated@@320 $generated@@447) $generated@@446)))
)))
(assert  (and (and (forall (($generated@@451 T@U) ) (! (= (type ($generated@@448 $generated@@451)) ($generated@@79 $generated@@136 $generated@@4))
 :pattern ( ($generated@@448 $generated@@451))
)) (forall (($generated@@452 T@T) ($generated@@453 T@U) ) (! (= (type ($generated@@449 $generated@@452 $generated@@453)) $generated@@452)
 :pattern ( ($generated@@449 $generated@@452 $generated@@453))
))) (forall (($generated@@454 T@U) ) (! (let (($generated@@455 ($generated@@329 (type $generated@@454))))
(let (($generated@@456 ($generated@@328 (type $generated@@454))))
(= (type ($generated@@450 $generated@@454)) ($generated@@79 $generated@@456 $generated@@455))))
 :pattern ( ($generated@@450 $generated@@454))
))))
(assert (forall (($generated@@457 T@U) ($generated@@458 T@U) ) (!  (=> (and (= (type $generated@@457) ($generated@@327 $generated@@136 $generated@@136)) (= (type $generated@@458) $generated@@136)) (= ($generated@@0 ($generated@@84 ($generated@@448 $generated@@457) $generated@@458))  (and ($generated@@0 ($generated@@84 ($generated@@325 $generated@@457) ($generated@@160 ($generated@@449 $generated@@153 $generated@@458)))) (= ($generated@@84 ($generated@@450 $generated@@457) ($generated@@160 ($generated@@449 $generated@@153 $generated@@458))) ($generated@@161 ($generated@@449 $generated@@153 $generated@@458))))))
 :pattern ( ($generated@@84 ($generated@@448 $generated@@457) $generated@@458))
)))
(assert  (and (forall (($generated@@461 T@U) ) (! (= (type ($generated@@459 $generated@@461)) ($generated@@79 $generated@@136 $generated@@4))
 :pattern ( ($generated@@459 $generated@@461))
)) (forall (($generated@@462 T@U) ) (! (let (($generated@@463 ($generated@@347 (type $generated@@462))))
(let (($generated@@464 ($generated@@346 (type $generated@@462))))
(= (type ($generated@@460 $generated@@462)) ($generated@@79 $generated@@464 $generated@@463))))
 :pattern ( ($generated@@460 $generated@@462))
))))
(assert (forall (($generated@@465 T@U) ($generated@@466 T@U) ) (!  (=> (and (= (type $generated@@465) ($generated@@345 $generated@@136 $generated@@136)) (= (type $generated@@466) $generated@@136)) (= ($generated@@0 ($generated@@84 ($generated@@459 $generated@@465) $generated@@466))  (and ($generated@@0 ($generated@@84 ($generated@@343 $generated@@465) ($generated@@160 ($generated@@449 $generated@@153 $generated@@466)))) (= ($generated@@84 ($generated@@460 $generated@@465) ($generated@@160 ($generated@@449 $generated@@153 $generated@@466))) ($generated@@161 ($generated@@449 $generated@@153 $generated@@466))))))
 :pattern ( ($generated@@84 ($generated@@459 $generated@@465) $generated@@466))
)))
(assert (forall (($generated@@467 T@U) ($generated@@468 T@U) ) (! (let (($generated@@469 (type $generated@@468)))
(let (($generated@@470 ($generated@@328 (type $generated@@467))))
 (=> (= (type $generated@@467) ($generated@@327 $generated@@470 $generated@@469)) (= ($generated@@0 ($generated@@84 ($generated@@396 $generated@@467) $generated@@468)) (exists (($generated@@471 T@U) ) (!  (and (= (type $generated@@471) $generated@@470) (and ($generated@@0 ($generated@@84 ($generated@@325 $generated@@467) $generated@@471)) (= $generated@@468 ($generated@@84 ($generated@@450 $generated@@467) $generated@@471))))
 :pattern ( ($generated@@84 ($generated@@325 $generated@@467) $generated@@471))
 :pattern ( ($generated@@84 ($generated@@450 $generated@@467) $generated@@471))
))))))
 :pattern ( ($generated@@84 ($generated@@396 $generated@@467) $generated@@468))
)))
(assert (forall (($generated@@472 T@U) ($generated@@473 T@U) ) (! (let (($generated@@474 (type $generated@@473)))
(let (($generated@@475 ($generated@@346 (type $generated@@472))))
 (=> (= (type $generated@@472) ($generated@@345 $generated@@475 $generated@@474)) (= ($generated@@0 ($generated@@84 ($generated@@407 $generated@@472) $generated@@473)) (exists (($generated@@476 T@U) ) (!  (and (= (type $generated@@476) $generated@@475) (and ($generated@@0 ($generated@@84 ($generated@@343 $generated@@472) $generated@@476)) (= $generated@@473 ($generated@@84 ($generated@@460 $generated@@472) $generated@@476))))
 :pattern ( ($generated@@84 ($generated@@343 $generated@@472) $generated@@476))
 :pattern ( ($generated@@84 ($generated@@460 $generated@@472) $generated@@476))
))))))
 :pattern ( ($generated@@84 ($generated@@407 $generated@@472) $generated@@473))
)))
(assert (forall (($generated@@478 T@U) ($generated@@479 T@U) ) (! (= (type ($generated@@477 $generated@@478 $generated@@479)) $generated@@67)
 :pattern ( ($generated@@477 $generated@@478 $generated@@479))
)))
(assert (forall (($generated@@480 T@U) ($generated@@481 T@U) ($generated@@482 T@U) ($generated@@483 T@U) ) (!  (=> (and (and (and (= (type $generated@@480) ($generated@@327 $generated@@136 $generated@@136)) (= (type $generated@@481) $generated@@67)) (= (type $generated@@482) $generated@@67)) (= (type $generated@@483) ($generated@@79 $generated@@80 $generated@@81))) (= ($generated@@77 $generated@@480 ($generated@@477 $generated@@481 $generated@@482) $generated@@483) (forall (($generated@@484 T@U) ) (!  (=> (and (= (type $generated@@484) $generated@@136) ($generated@@0 ($generated@@84 ($generated@@325 $generated@@480) $generated@@484))) (and ($generated@@277 ($generated@@84 ($generated@@450 $generated@@480) $generated@@484) $generated@@482 $generated@@483) ($generated@@277 $generated@@484 $generated@@481 $generated@@483)))
 :pattern ( ($generated@@84 ($generated@@450 $generated@@480) $generated@@484))
 :pattern ( ($generated@@84 ($generated@@325 $generated@@480) $generated@@484))
))))
 :pattern ( ($generated@@77 $generated@@480 ($generated@@477 $generated@@481 $generated@@482) $generated@@483))
)))
(assert (forall (($generated@@486 T@U) ($generated@@487 T@U) ) (! (= (type ($generated@@485 $generated@@486 $generated@@487)) $generated@@67)
 :pattern ( ($generated@@485 $generated@@486 $generated@@487))
)))
(assert (forall (($generated@@488 T@U) ($generated@@489 T@U) ($generated@@490 T@U) ($generated@@491 T@U) ) (!  (=> (and (and (and (= (type $generated@@488) ($generated@@345 $generated@@136 $generated@@136)) (= (type $generated@@489) $generated@@67)) (= (type $generated@@490) $generated@@67)) (= (type $generated@@491) ($generated@@79 $generated@@80 $generated@@81))) (= ($generated@@77 $generated@@488 ($generated@@485 $generated@@489 $generated@@490) $generated@@491) (forall (($generated@@492 T@U) ) (!  (=> (and (= (type $generated@@492) $generated@@136) ($generated@@0 ($generated@@84 ($generated@@343 $generated@@488) $generated@@492))) (and ($generated@@277 ($generated@@84 ($generated@@460 $generated@@488) $generated@@492) $generated@@490 $generated@@491) ($generated@@277 $generated@@492 $generated@@489 $generated@@491)))
 :pattern ( ($generated@@84 ($generated@@460 $generated@@488) $generated@@492))
 :pattern ( ($generated@@84 ($generated@@343 $generated@@488) $generated@@492))
))))
 :pattern ( ($generated@@77 $generated@@488 ($generated@@485 $generated@@489 $generated@@490) $generated@@491))
)))
(assert (forall (($generated@@494 T@T) ) (! (= (type ($generated@@493 $generated@@494)) ($generated@@79 $generated@@494 $generated@@4))
 :pattern ( ($generated@@493 $generated@@494))
)))
(assert (forall (($generated@@495 T@U) ) (! (let (($generated@@496 ($generated@@347 (type $generated@@495))))
(let (($generated@@497 ($generated@@346 (type $generated@@495))))
 (=> (= (type $generated@@495) ($generated@@345 $generated@@497 $generated@@496)) (= (= $generated@@495 ($generated@@344 $generated@@497 $generated@@496)) (= ($generated@@343 $generated@@495) ($generated@@493 $generated@@497))))))
 :pattern ( ($generated@@343 $generated@@495))
)))
(assert (forall (($generated@@498 T@U) ) (! (let (($generated@@499 ($generated@@347 (type $generated@@498))))
(let (($generated@@500 ($generated@@346 (type $generated@@498))))
 (=> (= (type $generated@@498) ($generated@@345 $generated@@500 $generated@@499)) (= (= $generated@@498 ($generated@@344 $generated@@500 $generated@@499)) (= ($generated@@407 $generated@@498) ($generated@@493 $generated@@499))))))
 :pattern ( ($generated@@407 $generated@@498))
)))
(assert (forall (($generated@@501 T@U) ) (! (let (($generated@@502 ($generated@@347 (type $generated@@501))))
(let (($generated@@503 ($generated@@346 (type $generated@@501))))
 (=> (= (type $generated@@501) ($generated@@345 $generated@@503 $generated@@502)) (= (= $generated@@501 ($generated@@344 $generated@@503 $generated@@502)) (= ($generated@@459 $generated@@501) ($generated@@493 $generated@@136))))))
 :pattern ( ($generated@@459 $generated@@501))
)))
(assert (forall (($generated@@504 T@U) ) (! (let (($generated@@505 ($generated@@329 (type $generated@@504))))
(let (($generated@@506 ($generated@@328 (type $generated@@504))))
 (=> (= (type $generated@@504) ($generated@@327 $generated@@506 $generated@@505)) (or (= $generated@@504 ($generated@@326 $generated@@506 $generated@@505)) (exists (($generated@@507 T@U) ($generated@@508 T@U) ) (!  (and (and (= (type $generated@@507) $generated@@136) (= (type $generated@@508) $generated@@136)) ($generated@@0 ($generated@@84 ($generated@@448 $generated@@504) ($generated@@309 ($generated@@250 $generated@@507 $generated@@508)))))
 :no-pattern (type $generated@@507)
 :no-pattern (type $generated@@508)
 :no-pattern ($generated $generated@@507)
 :no-pattern ($generated@@0 $generated@@507)
 :no-pattern ($generated $generated@@508)
 :no-pattern ($generated@@0 $generated@@508)
))))))
 :pattern ( ($generated@@448 $generated@@504))
)))
(assert (forall (($generated@@509 T@U) ) (! (let (($generated@@510 ($generated@@347 (type $generated@@509))))
(let (($generated@@511 ($generated@@346 (type $generated@@509))))
 (=> (= (type $generated@@509) ($generated@@345 $generated@@511 $generated@@510)) (or (= $generated@@509 ($generated@@344 $generated@@511 $generated@@510)) (exists (($generated@@512 T@U) ($generated@@513 T@U) ) (!  (and (and (= (type $generated@@512) $generated@@136) (= (type $generated@@513) $generated@@136)) ($generated@@0 ($generated@@84 ($generated@@459 $generated@@509) ($generated@@309 ($generated@@250 $generated@@512 $generated@@513)))))
 :no-pattern (type $generated@@512)
 :no-pattern (type $generated@@513)
 :no-pattern ($generated $generated@@512)
 :no-pattern ($generated@@0 $generated@@512)
 :no-pattern ($generated $generated@@513)
 :no-pattern ($generated@@0 $generated@@513)
))))))
 :pattern ( ($generated@@459 $generated@@509))
)))
(assert (forall (($generated@@514 T@U) ) (!  (=> (and (= (type $generated@@514) $generated@@136) ($generated@@251 $generated@@514 $generated@@46)) (and (= ($generated@@309 ($generated@@449 $generated@@2 $generated@@514)) $generated@@514) ($generated@@140 ($generated@@449 $generated@@2 $generated@@514) $generated@@46)))
 :pattern ( ($generated@@251 $generated@@514 $generated@@46))
)))
(assert (forall (($generated@@515 T@U) ) (!  (=> (and (= (type $generated@@515) $generated@@136) ($generated@@251 $generated@@515 $generated@@47)) (and (= ($generated@@309 ($generated@@449 $generated@@3 $generated@@515)) $generated@@515) ($generated@@140 ($generated@@449 $generated@@3 $generated@@515) $generated@@47)))
 :pattern ( ($generated@@251 $generated@@515 $generated@@47))
)))
(assert (forall (($generated@@516 T@U) ) (!  (=> (and (= (type $generated@@516) $generated@@136) ($generated@@251 $generated@@516 $generated@@44)) (and (= ($generated@@309 ($generated@@449 $generated@@4 $generated@@516)) $generated@@516) ($generated@@140 ($generated@@449 $generated@@4 $generated@@516) $generated@@44)))
 :pattern ( ($generated@@251 $generated@@516 $generated@@44))
)))
(assert (= ($generated@@1 $generated@@517) 21))
(assert (forall (($generated@@518 T@U) ) (!  (=> (and (= (type $generated@@518) $generated@@136) ($generated@@251 $generated@@518 $generated@@45)) (and (= ($generated@@309 ($generated@@449 $generated@@517 $generated@@518)) $generated@@518) ($generated@@140 ($generated@@449 $generated@@517 $generated@@518) $generated@@45)))
 :pattern ( ($generated@@251 $generated@@518 $generated@@45))
)))
(assert (forall (($generated@@519 T@U) ($generated@@520 T@U) ) (!  (=> (= (type $generated@@520) $generated@@67) (= ($generated@@251 ($generated@@309 $generated@@519) $generated@@520) ($generated@@140 $generated@@519 $generated@@520)))
 :pattern ( ($generated@@251 ($generated@@309 $generated@@519) $generated@@520))
)))
(assert (forall (($generated@@521 T@U) ) (!  (=> (= (type $generated@@521) $generated@@136) (<= 0 ($generated@@144 $generated@@521)))
 :pattern ( ($generated@@144 $generated@@521))
)))
(assert (forall (($generated@@522 T@U) ) (! (let (($generated@@523 ($generated@@82 (type $generated@@522))))
 (=> (= (type $generated@@522) ($generated@@79 $generated@@523 $generated@@2)) (<= 0 ($generated@@319 $generated@@522))))
 :pattern ( ($generated@@319 $generated@@522))
)))
(assert (forall (($generated@@524 T@U) ) (! (let (($generated@@525 ($generated@@292 (type $generated@@524))))
 (=> (= (type $generated@@524) ($generated@@291 $generated@@525)) (<= 0 ($generated@@290 $generated@@524))))
 :pattern ( ($generated@@290 $generated@@524))
)))
(assert (forall (($generated@@527 T@U) ) (! (= (type ($generated@@526 $generated@@527)) $generated@@67)
 :pattern ( ($generated@@526 $generated@@527))
)))
(assert (forall (($generated@@528 T@U) ($generated@@529 T@U) ) (!  (=> (and (= (type $generated@@528) $generated@@67) (= (type $generated@@529) $generated@@67)) (= ($generated@@526 ($generated@@477 $generated@@528 $generated@@529)) $generated@@528))
 :pattern ( ($generated@@477 $generated@@528 $generated@@529))
)))
(assert (forall (($generated@@531 T@U) ) (! (= (type ($generated@@530 $generated@@531)) $generated@@67)
 :pattern ( ($generated@@530 $generated@@531))
)))
(assert (forall (($generated@@532 T@U) ($generated@@533 T@U) ) (!  (=> (and (= (type $generated@@532) $generated@@67) (= (type $generated@@533) $generated@@67)) (= ($generated@@530 ($generated@@477 $generated@@532 $generated@@533)) $generated@@533))
 :pattern ( ($generated@@477 $generated@@532 $generated@@533))
)))
(assert (forall (($generated@@534 T@U) ($generated@@535 T@U) ) (!  (=> (and (= (type $generated@@534) $generated@@67) (= (type $generated@@535) $generated@@67)) (= ($generated@@75 ($generated@@477 $generated@@534 $generated@@535)) $generated@@58))
 :pattern ( ($generated@@477 $generated@@534 $generated@@535))
)))
(assert (forall (($generated@@537 T@U) ) (! (= (type ($generated@@536 $generated@@537)) $generated@@67)
 :pattern ( ($generated@@536 $generated@@537))
)))
(assert (forall (($generated@@538 T@U) ($generated@@539 T@U) ) (!  (=> (and (= (type $generated@@538) $generated@@67) (= (type $generated@@539) $generated@@67)) (= ($generated@@536 ($generated@@485 $generated@@538 $generated@@539)) $generated@@538))
 :pattern ( ($generated@@485 $generated@@538 $generated@@539))
)))
(assert (forall (($generated@@541 T@U) ) (! (= (type ($generated@@540 $generated@@541)) $generated@@67)
 :pattern ( ($generated@@540 $generated@@541))
)))
(assert (forall (($generated@@542 T@U) ($generated@@543 T@U) ) (!  (=> (and (= (type $generated@@542) $generated@@67) (= (type $generated@@543) $generated@@67)) (= ($generated@@540 ($generated@@485 $generated@@542 $generated@@543)) $generated@@543))
 :pattern ( ($generated@@485 $generated@@542 $generated@@543))
)))
(assert (forall (($generated@@544 T@U) ($generated@@545 T@U) ) (!  (=> (and (= (type $generated@@544) $generated@@67) (= (type $generated@@545) $generated@@67)) (= ($generated@@75 ($generated@@485 $generated@@544 $generated@@545)) $generated@@59))
 :pattern ( ($generated@@485 $generated@@544 $generated@@545))
)))
(assert (forall (($generated@@546 T@U) ($generated@@547 T@U) ) (!  (=> (and (= (type $generated@@546) $generated@@136) (= (type $generated@@547) $generated@@136)) (= ($generated@@283 ($generated@@250 $generated@@546 $generated@@547)) $generated@@61))
 :pattern ( ($generated@@250 $generated@@546 $generated@@547))
)))
(assert (forall (($generated@@549 T@U) ) (! (= (type ($generated@@548 $generated@@549)) $generated@@67)
 :pattern ( ($generated@@548 $generated@@549))
)))
(assert (forall (($generated@@550 T@U) ($generated@@551 T@U) ) (!  (=> (and (= (type $generated@@550) $generated@@67) (= (type $generated@@551) $generated@@67)) (= ($generated@@548 ($generated@@152 $generated@@550 $generated@@551)) $generated@@550))
 :pattern ( ($generated@@152 $generated@@550 $generated@@551))
)))
(assert (forall (($generated@@553 T@U) ) (! (= (type ($generated@@552 $generated@@553)) $generated@@67)
 :pattern ( ($generated@@552 $generated@@553))
)))
(assert (forall (($generated@@554 T@U) ($generated@@555 T@U) ) (!  (=> (and (= (type $generated@@554) $generated@@67) (= (type $generated@@555) $generated@@67)) (= ($generated@@552 ($generated@@152 $generated@@554 $generated@@555)) $generated@@555))
 :pattern ( ($generated@@152 $generated@@554 $generated@@555))
)))
(assert (forall (($generated@@556 T@U) ($generated@@557 T@U) ) (!  (=> (and (= (type $generated@@556) $generated@@136) (= (type $generated@@557) $generated@@136)) (= ($generated@@160 ($generated@@250 $generated@@556 $generated@@557)) $generated@@556))
 :pattern ( ($generated@@250 $generated@@556 $generated@@557))
)))
(assert (forall (($generated@@558 T@U) ($generated@@559 T@U) ) (!  (=> (and (= (type $generated@@558) $generated@@136) (= (type $generated@@559) $generated@@136)) (= ($generated@@161 ($generated@@250 $generated@@558 $generated@@559)) $generated@@559))
 :pattern ( ($generated@@250 $generated@@558 $generated@@559))
)))
(assert (forall (($generated@@561 T@U) ) (! (= (type ($generated@@560 $generated@@561)) $generated@@67)
 :pattern ( ($generated@@560 $generated@@561))
)))
(assert (forall (($generated@@562 T@U) ($generated@@563 T@U) ) (!  (=> (and (= (type $generated@@562) $generated@@67) (= (type $generated@@563) $generated@@67)) (= ($generated@@560 ($generated@@297 $generated@@562 $generated@@563)) $generated@@562))
 :pattern ( ($generated@@297 $generated@@562 $generated@@563))
)))
(assert (forall (($generated@@565 T@U) ) (! (= (type ($generated@@564 $generated@@565)) $generated@@67)
 :pattern ( ($generated@@564 $generated@@565))
)))
(assert (forall (($generated@@566 T@U) ($generated@@567 T@U) ) (!  (=> (and (= (type $generated@@566) $generated@@67) (= (type $generated@@567) $generated@@67)) (= ($generated@@564 ($generated@@297 $generated@@566 $generated@@567)) $generated@@567))
 :pattern ( ($generated@@297 $generated@@566 $generated@@567))
)))
(assert (forall (($generated@@569 T@U) ) (! (= (type ($generated@@568 $generated@@569)) $generated@@67)
 :pattern ( ($generated@@568 $generated@@569))
)))
(assert (forall (($generated@@570 T@U) ($generated@@571 T@U) ) (!  (=> (and (= (type $generated@@570) $generated@@67) (= (type $generated@@571) $generated@@67)) (= ($generated@@568 ($generated@@232 $generated@@570 $generated@@571)) $generated@@570))
 :pattern ( ($generated@@232 $generated@@570 $generated@@571))
)))
(assert (forall (($generated@@573 T@U) ) (! (= (type ($generated@@572 $generated@@573)) $generated@@67)
 :pattern ( ($generated@@572 $generated@@573))
)))
(assert (forall (($generated@@574 T@U) ($generated@@575 T@U) ) (!  (=> (and (= (type $generated@@574) $generated@@67) (= (type $generated@@575) $generated@@67)) (= ($generated@@572 ($generated@@232 $generated@@574 $generated@@575)) $generated@@575))
 :pattern ( ($generated@@232 $generated@@574 $generated@@575))
)))
(assert  (and (forall (($generated@@578 T@U) ) (! (= (type ($generated@@576 $generated@@578)) $generated@@67)
 :pattern ( ($generated@@576 $generated@@578))
)) (forall (($generated@@579 T@U) ($generated@@580 Int) ) (! (let (($generated@@581 ($generated@@292 (type $generated@@579))))
(= (type ($generated@@577 $generated@@579 $generated@@580)) $generated@@581))
 :pattern ( ($generated@@577 $generated@@579 $generated@@580))
))))
(assert (forall (($generated@@582 T@U) ($generated@@583 T@U) ($generated@@584 T@U) ) (!  (=> (and (and (= (type $generated@@582) ($generated@@291 $generated@@136)) (= (type $generated@@583) $generated@@67)) (= (type $generated@@584) ($generated@@79 $generated@@80 $generated@@81))) (= ($generated@@77 $generated@@582 ($generated@@576 $generated@@583) $generated@@584) (forall (($generated@@585 Int) ) (!  (=> (and (<= 0 $generated@@585) (< $generated@@585 ($generated@@290 $generated@@582))) ($generated@@277 ($generated@@577 $generated@@582 $generated@@585) $generated@@583 $generated@@584))
 :pattern ( ($generated@@577 $generated@@582 $generated@@585))
))))
 :pattern ( ($generated@@77 $generated@@582 ($generated@@576 $generated@@583) $generated@@584))
)))
(assert (forall (($generated@@587 Int) ) (! (= ($generated@@586 ($generated@@78 $generated@@587)) $generated@@587)
 :pattern ( ($generated@@78 $generated@@587))
)))
(assert (forall (($generated@@589 T@U) ) (! (= (type ($generated@@588 $generated@@589)) $generated@@67)
 :pattern ( ($generated@@588 $generated@@589))
)))
(assert (forall (($generated@@590 T@U) ) (!  (=> (= (type $generated@@590) $generated@@67) (= ($generated@@588 ($generated@@260 $generated@@590)) $generated@@590))
 :pattern ( ($generated@@260 $generated@@590))
)))
(assert (forall (($generated@@591 T@U) ) (!  (=> (= (type $generated@@591) $generated@@67) (= ($generated@@75 ($generated@@260 $generated@@591)) $generated@@54))
 :pattern ( ($generated@@260 $generated@@591))
)))
(assert (forall (($generated@@593 T@U) ) (! (= (type ($generated@@592 $generated@@593)) $generated@@67)
 :pattern ( ($generated@@592 $generated@@593))
)))
(assert (forall (($generated@@594 T@U) ) (!  (=> (= (type $generated@@594) $generated@@67) (= ($generated@@592 ($generated@@265 $generated@@594)) $generated@@594))
 :pattern ( ($generated@@265 $generated@@594))
)))
(assert (forall (($generated@@595 T@U) ) (!  (=> (= (type $generated@@595) $generated@@67) (= ($generated@@75 ($generated@@265 $generated@@595)) $generated@@55))
 :pattern ( ($generated@@265 $generated@@595))
)))
(assert (forall (($generated@@597 T@U) ) (! (= (type ($generated@@596 $generated@@597)) $generated@@67)
 :pattern ( ($generated@@596 $generated@@597))
)))
(assert (forall (($generated@@598 T@U) ) (!  (=> (= (type $generated@@598) $generated@@67) (= ($generated@@596 ($generated@@166 $generated@@598)) $generated@@598))
 :pattern ( ($generated@@166 $generated@@598))
)))
(assert (forall (($generated@@599 T@U) ) (!  (=> (= (type $generated@@599) $generated@@67) (= ($generated@@75 ($generated@@166 $generated@@599)) $generated@@56))
 :pattern ( ($generated@@166 $generated@@599))
)))
(assert (forall (($generated@@601 T@U) ) (! (= (type ($generated@@600 $generated@@601)) $generated@@67)
 :pattern ( ($generated@@600 $generated@@601))
)))
(assert (forall (($generated@@602 T@U) ) (!  (=> (= (type $generated@@602) $generated@@67) (= ($generated@@600 ($generated@@576 $generated@@602)) $generated@@602))
 :pattern ( ($generated@@576 $generated@@602))
)))
(assert (forall (($generated@@603 T@U) ) (!  (=> (= (type $generated@@603) $generated@@67) (= ($generated@@75 ($generated@@576 $generated@@603)) $generated@@57))
 :pattern ( ($generated@@576 $generated@@603))
)))
(assert (forall (($generated@@604 T@U) ) (! (let (($generated@@605 (type $generated@@604)))
(= ($generated@@449 $generated@@605 ($generated@@309 $generated@@604)) $generated@@604))
 :pattern ( ($generated@@309 $generated@@604))
)))
(assert (forall (($generated@@606 T@U) ($generated@@607 T@U) ($generated@@608 T@U) ) (!  (=> (and (and (= (type $generated@@606) ($generated@@327 $generated@@136 $generated@@136)) (= (type $generated@@607) $generated@@67)) (= (type $generated@@608) $generated@@67)) (= ($generated@@140 $generated@@606 ($generated@@477 $generated@@607 $generated@@608)) (forall (($generated@@609 T@U) ) (!  (=> (and (= (type $generated@@609) $generated@@136) ($generated@@0 ($generated@@84 ($generated@@325 $generated@@606) $generated@@609))) (and ($generated@@251 ($generated@@84 ($generated@@450 $generated@@606) $generated@@609) $generated@@608) ($generated@@251 $generated@@609 $generated@@607)))
 :pattern ( ($generated@@84 ($generated@@450 $generated@@606) $generated@@609))
 :pattern ( ($generated@@84 ($generated@@325 $generated@@606) $generated@@609))
))))
 :pattern ( ($generated@@140 $generated@@606 ($generated@@477 $generated@@607 $generated@@608)))
)))
(assert (forall (($generated@@610 T@U) ($generated@@611 T@U) ($generated@@612 T@U) ) (!  (=> (and (and (= (type $generated@@610) ($generated@@345 $generated@@136 $generated@@136)) (= (type $generated@@611) $generated@@67)) (= (type $generated@@612) $generated@@67)) (= ($generated@@140 $generated@@610 ($generated@@485 $generated@@611 $generated@@612)) (forall (($generated@@613 T@U) ) (!  (=> (and (= (type $generated@@613) $generated@@136) ($generated@@0 ($generated@@84 ($generated@@343 $generated@@610) $generated@@613))) (and ($generated@@251 ($generated@@84 ($generated@@460 $generated@@610) $generated@@613) $generated@@612) ($generated@@251 $generated@@613 $generated@@611)))
 :pattern ( ($generated@@84 ($generated@@460 $generated@@610) $generated@@613))
 :pattern ( ($generated@@84 ($generated@@343 $generated@@610) $generated@@613))
))))
 :pattern ( ($generated@@140 $generated@@610 ($generated@@485 $generated@@611 $generated@@612)))
)))
(assert (forall (($generated@@614 T@U) ($generated@@615 T@U) ) (!  (=> (and (= (type $generated@@614) $generated@@136) (= (type $generated@@615) $generated@@136)) (and (and (and (=> ($generated@@135 $generated@@614 $generated@@615) (not (= $generated@@614 $generated@@615))) (=> (and ($generated@@365 $generated@@614) (not ($generated@@365 $generated@@615))) ($generated@@135 $generated@@614 $generated@@615))) (=> (and ($generated@@365 $generated@@614) ($generated@@365 $generated@@615)) (= ($generated@@135 $generated@@614 $generated@@615) (< ($generated@@144 $generated@@614) ($generated@@144 $generated@@615))))) (=> (and ($generated@@135 $generated@@614 $generated@@615) ($generated@@365 $generated@@615)) ($generated@@365 $generated@@614))))
 :pattern ( ($generated@@135 $generated@@614 $generated@@615))
)))
(assert (forall (($generated@@618 T@U) ($generated@@619 T@U) ) (!  (=> (and (= (type $generated@@618) $generated@@136) (= (type $generated@@619) $generated@@136)) (< ($generated@@616 $generated@@618) ($generated@@617 ($generated@@250 $generated@@618 $generated@@619))))
 :pattern ( ($generated@@250 $generated@@618 $generated@@619))
)))
(assert (forall (($generated@@620 T@U) ($generated@@621 T@U) ) (!  (=> (and (= (type $generated@@620) $generated@@136) (= (type $generated@@621) $generated@@136)) (< ($generated@@616 $generated@@621) ($generated@@617 ($generated@@250 $generated@@620 $generated@@621))))
 :pattern ( ($generated@@250 $generated@@620 $generated@@621))
)))
(assert (forall (($generated@@622 T@U) ($generated@@623 T@U) ($generated@@624 T@U) ) (!  (=> (and (and (and (= (type $generated@@622) $generated@@136) (= (type $generated@@623) $generated@@67)) (= (type $generated@@624) $generated@@67)) ($generated@@251 $generated@@622 ($generated@@477 $generated@@623 $generated@@624))) (and (= ($generated@@309 ($generated@@449 ($generated@@327 $generated@@136 $generated@@136) $generated@@622)) $generated@@622) ($generated@@140 ($generated@@449 ($generated@@327 $generated@@136 $generated@@136) $generated@@622) ($generated@@477 $generated@@623 $generated@@624))))
 :pattern ( ($generated@@251 $generated@@622 ($generated@@477 $generated@@623 $generated@@624)))
)))
(assert (forall (($generated@@625 T@U) ($generated@@626 T@U) ($generated@@627 T@U) ) (!  (=> (and (and (and (= (type $generated@@625) $generated@@136) (= (type $generated@@626) $generated@@67)) (= (type $generated@@627) $generated@@67)) ($generated@@251 $generated@@625 ($generated@@485 $generated@@626 $generated@@627))) (and (= ($generated@@309 ($generated@@449 ($generated@@345 $generated@@136 $generated@@136) $generated@@625)) $generated@@625) ($generated@@140 ($generated@@449 ($generated@@345 $generated@@136 $generated@@136) $generated@@625) ($generated@@485 $generated@@626 $generated@@627))))
 :pattern ( ($generated@@251 $generated@@625 ($generated@@485 $generated@@626 $generated@@627)))
)))
(assert (forall (($generated@@628 T@U) ($generated@@629 T@U) ($generated@@630 T@U) ) (!  (=> (and (and (and (= (type $generated@@628) $generated@@67) (= (type $generated@@629) $generated@@67)) (= (type $generated@@630) $generated@@136)) ($generated@@251 $generated@@630 ($generated@@152 $generated@@628 $generated@@629))) (and (= ($generated@@309 ($generated@@449 $generated@@153 $generated@@630)) $generated@@630) ($generated@@140 ($generated@@449 $generated@@153 $generated@@630) ($generated@@152 $generated@@628 $generated@@629))))
 :pattern ( ($generated@@251 $generated@@630 ($generated@@152 $generated@@628 $generated@@629)))
)))
(assert (forall (($generated@@631 T@U) ($generated@@632 T@U) ($generated@@633 T@U) ) (!  (=> (and (and (and (= (type $generated@@631) $generated@@67) (= (type $generated@@632) $generated@@67)) (= (type $generated@@633) $generated@@136)) ($generated@@251 $generated@@633 ($generated@@297 $generated@@631 $generated@@632))) (and (= ($generated@@309 ($generated@@449 $generated@@80 $generated@@633)) $generated@@633) ($generated@@140 ($generated@@449 $generated@@80 $generated@@633) ($generated@@297 $generated@@631 $generated@@632))))
 :pattern ( ($generated@@251 $generated@@633 ($generated@@297 $generated@@631 $generated@@632)))
)))
(assert (forall (($generated@@634 T@U) ($generated@@635 T@U) ($generated@@636 T@U) ) (!  (=> (and (and (and (= (type $generated@@634) $generated@@67) (= (type $generated@@635) $generated@@67)) (= (type $generated@@636) $generated@@136)) ($generated@@251 $generated@@636 ($generated@@232 $generated@@634 $generated@@635))) (and (= ($generated@@309 ($generated@@449 $generated@@80 $generated@@636)) $generated@@636) ($generated@@140 ($generated@@449 $generated@@80 $generated@@636) ($generated@@232 $generated@@634 $generated@@635))))
 :pattern ( ($generated@@251 $generated@@636 ($generated@@232 $generated@@634 $generated@@635)))
)))
(assert (forall (($generated@@637 T@U) ) (! (let (($generated@@638 (type $generated@@637)))
 (not ($generated@@0 ($generated@@84 ($generated@@493 $generated@@638) $generated@@637))))
 :pattern ( (let (($generated@@638 (type $generated@@637)))
($generated@@84 ($generated@@493 $generated@@638) $generated@@637)))
)))
(assert (forall (($generated@@640 T@U) ) (! (= (type ($generated@@639 $generated@@640)) $generated@@72)
 :pattern ( ($generated@@639 $generated@@640))
)))
(assert (forall (($generated@@641 T@U) ($generated@@642 T@U) ) (!  (=> (and (= (type $generated@@641) $generated@@67) (= (type $generated@@642) $generated@@67)) (and (= ($generated@@75 ($generated@@152 $generated@@641 $generated@@642)) $generated@@62) (= ($generated@@639 ($generated@@152 $generated@@641 $generated@@642)) $generated@@65)))
 :pattern ( ($generated@@152 $generated@@641 $generated@@642))
)))
(assert (forall (($generated@@643 T@U) ($generated@@644 T@U) ) (!  (=> (and (= (type $generated@@643) $generated@@67) (= (type $generated@@644) $generated@@67)) (and (= ($generated@@75 ($generated@@297 $generated@@643 $generated@@644)) $generated@@63) (= ($generated@@639 ($generated@@297 $generated@@643 $generated@@644)) $generated@@66)))
 :pattern ( ($generated@@297 $generated@@643 $generated@@644))
)))
(assert (forall (($generated@@645 T@U) ($generated@@646 T@U) ) (!  (=> (and (= (type $generated@@645) $generated@@67) (= (type $generated@@646) $generated@@67)) (and (= ($generated@@75 ($generated@@232 $generated@@645 $generated@@646)) $generated@@64) (= ($generated@@639 ($generated@@232 $generated@@645 $generated@@646)) $generated@@66)))
 :pattern ( ($generated@@232 $generated@@645 $generated@@646))
)))
(assert (forall (($generated@@647 T@U) ) (!  (=> (= (type $generated@@647) $generated@@153) (= ($generated@@616 ($generated@@309 $generated@@647)) ($generated@@617 $generated@@647)))
 :pattern ( ($generated@@616 ($generated@@309 $generated@@647)))
)))
(assert  (=> (<= 0 $generated@@227) (forall (($generated@@649 T@U) ($generated@@650 T@U) ($generated@@651 T@U) ($generated@@652 T@U) ($generated@@653 T@U) ) (!  (=> (and (and (and (and (and (= (type $generated@@649) $generated@@67) (= (type $generated@@650) $generated@@67)) (= (type $generated@@651) $generated@@67)) (= (type $generated@@652) $generated@@229)) (= (type $generated@@653) $generated@@80)) (or ($generated@@648 $generated@@649 $generated@@650 $generated@@651 $generated@@653) (and (not (= 0 $generated@@227)) (and (not (= $generated@@653 $generated@@231)) ($generated@@140 $generated@@653 ($generated@@232 $generated@@649 $generated@@650)))))) (and ($generated@@648 $generated@@649 $generated@@650 $generated@@651 $generated@@653) (= ($generated@@241 $generated@@649 $generated@@650 $generated@@651 ($generated@@242 $generated@@652) $generated@@653) ($generated@@241 $generated@@649 $generated@@650 $generated@@651 $generated@@652 $generated@@653))))
 :pattern ( ($generated@@241 $generated@@649 $generated@@650 $generated@@651 ($generated@@242 $generated@@652) $generated@@653))
))))
(assert (forall (($generated@@654 T@U) ) (!  (=> (and (= (type $generated@@654) $generated@@136) ($generated@@251 $generated@@654 ($generated@@78 0))) (and (= ($generated@@309 ($generated@@449 $generated@@2 $generated@@654)) $generated@@654) ($generated@@140 ($generated@@449 ($generated@@79 $generated@@136 $generated@@4) $generated@@654) ($generated@@78 0))))
 :pattern ( ($generated@@251 $generated@@654 ($generated@@78 0)))
)))
(assert (forall (($generated@@655 T@U) ($generated@@656 T@U) ) (!  (=> (and (and (= (type $generated@@655) $generated@@136) (= (type $generated@@656) $generated@@67)) ($generated@@251 $generated@@655 ($generated@@260 $generated@@656))) (and (= ($generated@@309 ($generated@@449 ($generated@@79 $generated@@136 $generated@@4) $generated@@655)) $generated@@655) ($generated@@140 ($generated@@449 ($generated@@79 $generated@@136 $generated@@4) $generated@@655) ($generated@@260 $generated@@656))))
 :pattern ( ($generated@@251 $generated@@655 ($generated@@260 $generated@@656)))
)))
(assert (forall (($generated@@657 T@U) ($generated@@658 T@U) ) (!  (=> (and (and (= (type $generated@@657) $generated@@136) (= (type $generated@@658) $generated@@67)) ($generated@@251 $generated@@657 ($generated@@265 $generated@@658))) (and (= ($generated@@309 ($generated@@449 ($generated@@79 $generated@@136 $generated@@4) $generated@@657)) $generated@@657) ($generated@@140 ($generated@@449 ($generated@@79 $generated@@136 $generated@@4) $generated@@657) ($generated@@265 $generated@@658))))
 :pattern ( ($generated@@251 $generated@@657 ($generated@@265 $generated@@658)))
)))
(assert (forall (($generated@@659 T@U) ($generated@@660 T@U) ) (!  (=> (and (and (= (type $generated@@659) $generated@@136) (= (type $generated@@660) $generated@@67)) ($generated@@251 $generated@@659 ($generated@@166 $generated@@660))) (and (= ($generated@@309 ($generated@@449 ($generated@@79 $generated@@136 $generated@@2) $generated@@659)) $generated@@659) ($generated@@140 ($generated@@449 ($generated@@79 $generated@@136 $generated@@2) $generated@@659) ($generated@@166 $generated@@660))))
 :pattern ( ($generated@@251 $generated@@659 ($generated@@166 $generated@@660)))
)))
(assert (forall (($generated@@661 T@U) ($generated@@662 T@U) ) (!  (=> (and (and (= (type $generated@@661) $generated@@136) (= (type $generated@@662) $generated@@67)) ($generated@@251 $generated@@661 ($generated@@576 $generated@@662))) (and (= ($generated@@309 ($generated@@449 ($generated@@291 $generated@@136) $generated@@661)) $generated@@661) ($generated@@140 ($generated@@449 ($generated@@291 $generated@@136) $generated@@661) ($generated@@576 $generated@@662))))
 :pattern ( ($generated@@251 $generated@@661 ($generated@@576 $generated@@662)))
)))
(assert (forall (($generated@@663 T@U) ) (!  (=> (and (= (type $generated@@663) $generated@@136) ($generated@@365 $generated@@663)) (= $generated@@663 ($generated@@143 ($generated@@144 $generated@@663))))
 :pattern ( ($generated@@144 $generated@@663))
 :pattern ( ($generated@@365 $generated@@663))
)))
(assert  (=> (<= 0 $generated@@227) (forall (($generated@@664 T@U) ($generated@@665 T@U) ($generated@@666 T@U) ($generated@@667 T@U) ($generated@@668 T@U) ) (!  (=> (and (and (and (and (and (= (type $generated@@664) $generated@@67) (= (type $generated@@665) $generated@@67)) (= (type $generated@@666) $generated@@67)) (= (type $generated@@667) $generated@@229)) (= (type $generated@@668) $generated@@80)) (or ($generated@@648 $generated@@664 $generated@@665 $generated@@666 $generated@@668) (and (not (= 0 $generated@@227)) (and (not (= $generated@@668 $generated@@231)) ($generated@@140 $generated@@668 ($generated@@232 $generated@@664 $generated@@665)))))) true)
 :pattern ( ($generated@@241 $generated@@664 $generated@@665 $generated@@666 $generated@@667 $generated@@668))
))))
(assert  (=> (<= 1 $generated@@227) (forall (($generated@@669 T@U) ($generated@@670 T@U) ($generated@@671 T@U) ($generated@@672 T@U) ($generated@@673 T@U) ($generated@@674 T@U) ) (!  (=> (and (and (and (and (and (and (= (type $generated@@669) $generated@@67) (= (type $generated@@670) $generated@@67)) (= (type $generated@@671) $generated@@67)) (= (type $generated@@672) $generated@@229)) (= (type $generated@@673) $generated@@80)) (= (type $generated@@674) $generated@@136)) (or ($generated@@230 $generated@@669 $generated@@670 $generated@@671 ($generated@@272 $generated@@673) ($generated@@272 $generated@@674)) (and (not (= 1 $generated@@227)) (and (not (= $generated@@673 $generated@@231)) ($generated@@140 $generated@@673 ($generated@@232 $generated@@669 $generated@@670)))))) (and (and (=> (< 0 ($generated@@144 $generated@@674)) ($generated@@230 $generated@@669 $generated@@670 $generated@@671 ($generated@@272 $generated@@673) ($generated@@142 $generated@@674 ($generated@@143 1)))) (=> (=> (< 0 ($generated@@144 $generated@@674)) ($generated@@228 $generated@@669 $generated@@670 $generated@@671 ($generated@@242 $generated@@672) ($generated@@272 $generated@@673) ($generated@@142 $generated@@674 ($generated@@143 1)))) (=> (= ($generated@@270 0) ($generated@@144 $generated@@674)) (forall (($generated@@675 T@U) ) (!  (=> (and (= (type $generated@@675) $generated@@136) ($generated@@135 $generated@@675 $generated@@674)) ($generated@@230 $generated@@669 $generated@@670 $generated@@671 $generated@@673 $generated@@675))
 :pattern ( ($generated@@228 $generated@@669 $generated@@670 $generated@@671 ($generated@@242 $generated@@672) $generated@@673 $generated@@675))
))))) (= ($generated@@228 $generated@@669 $generated@@670 $generated@@671 ($generated@@242 $generated@@672) ($generated@@272 $generated@@673) ($generated@@272 $generated@@674))  (and (=> (< 0 ($generated@@144 $generated@@674)) ($generated@@228 $generated@@669 $generated@@670 $generated@@671 ($generated@@242 $generated@@672) ($generated@@272 $generated@@673) ($generated@@142 $generated@@674 ($generated@@143 1)))) (=> (= ($generated@@270 0) ($generated@@144 $generated@@674)) (forall (($generated@@676 T@U) ) (!  (=> (and (= (type $generated@@676) $generated@@136) ($generated@@135 $generated@@676 $generated@@674)) ($generated@@228 $generated@@669 $generated@@670 $generated@@671 ($generated@@242 $generated@@672) $generated@@673 $generated@@676))
 :pattern ( ($generated@@228 $generated@@669 $generated@@670 $generated@@671 ($generated@@242 $generated@@672) $generated@@673 $generated@@676))
)))))))
 :weight 3
 :pattern ( ($generated@@228 $generated@@669 $generated@@670 $generated@@671 ($generated@@242 $generated@@672) ($generated@@272 $generated@@673) ($generated@@272 $generated@@674)))
))))
(assert (forall (($generated@@677 T@U) ($generated@@678 T@U) ($generated@@679 T@U) ) (!  (=> (and (and (= (type $generated@@677) ($generated@@79 $generated@@136 $generated@@2)) (= (type $generated@@678) $generated@@67)) (= (type $generated@@679) ($generated@@79 $generated@@80 $generated@@81))) (= ($generated@@77 $generated@@677 ($generated@@166 $generated@@678) $generated@@679) (forall (($generated@@680 T@U) ) (!  (=> (and (= (type $generated@@680) $generated@@136) (< 0 ($generated ($generated@@84 $generated@@677 $generated@@680)))) ($generated@@277 $generated@@680 $generated@@678 $generated@@679))
 :pattern ( ($generated@@84 $generated@@677 $generated@@680))
))))
 :pattern ( ($generated@@77 $generated@@677 ($generated@@166 $generated@@678) $generated@@679))
)))
(assert (forall (($generated@@681 T@U) ($generated@@682 T@U) ) (!  (=> (and (and (= (type $generated@@681) $generated@@136) (= (type $generated@@682) $generated@@136)) (and ($generated@@365 $generated@@682) (<= ($generated@@144 $generated@@682) ($generated@@144 $generated@@681)))) (or (and (= $generated@@682 ($generated@@143 0)) (= ($generated@@142 $generated@@681 $generated@@682) $generated@@681)) (and (not (= $generated@@682 ($generated@@143 0))) ($generated@@135 ($generated@@142 $generated@@681 $generated@@682) $generated@@681))))
 :pattern ( ($generated@@142 $generated@@681 $generated@@682))
)))
(assert (forall (($generated@@683 T@U) ($generated@@684 T@U) ($generated@@685 T@U) ) (!  (=> (and (and (and (= (type $generated@@683) $generated@@153) (= (type $generated@@684) $generated@@67)) (= (type $generated@@685) ($generated@@79 $generated@@80 $generated@@81))) (and ($generated@@276 $generated@@685) (and ($generated@@151 $generated@@683) (exists (($generated@@686 T@U) ) (!  (and (= (type $generated@@686) $generated@@67) ($generated@@77 $generated@@683 ($generated@@152 $generated@@684 $generated@@686) $generated@@685))
 :pattern ( ($generated@@77 $generated@@683 ($generated@@152 $generated@@684 $generated@@686) $generated@@685))
))))) ($generated@@277 ($generated@@160 $generated@@683) $generated@@684 $generated@@685))
 :pattern ( ($generated@@277 ($generated@@160 $generated@@683) $generated@@684 $generated@@685))
)))
(assert (forall (($generated@@687 T@U) ($generated@@688 T@U) ($generated@@689 T@U) ) (!  (=> (and (and (and (= (type $generated@@687) $generated@@153) (= (type $generated@@688) $generated@@67)) (= (type $generated@@689) ($generated@@79 $generated@@80 $generated@@81))) (and ($generated@@276 $generated@@689) (and ($generated@@151 $generated@@687) (exists (($generated@@690 T@U) ) (!  (and (= (type $generated@@690) $generated@@67) ($generated@@77 $generated@@687 ($generated@@152 $generated@@690 $generated@@688) $generated@@689))
 :pattern ( ($generated@@77 $generated@@687 ($generated@@152 $generated@@690 $generated@@688) $generated@@689))
))))) ($generated@@277 ($generated@@161 $generated@@687) $generated@@688 $generated@@689))
 :pattern ( ($generated@@277 ($generated@@161 $generated@@687) $generated@@688 $generated@@689))
)))
(assert (forall (($generated@@691 T@U) ($generated@@692 T@U) ) (!  (=> (and (= (type $generated@@691) $generated@@136) (= (type $generated@@692) $generated@@136)) (= ($generated@@250 ($generated@@272 $generated@@691) ($generated@@272 $generated@@692)) ($generated@@272 ($generated@@250 $generated@@691 $generated@@692))))
 :pattern ( ($generated@@250 ($generated@@272 $generated@@691) ($generated@@272 $generated@@692)))
)))
(assert  (=> (<= 1 $generated@@227) (forall (($generated@@693 T@U) ($generated@@694 T@U) ($generated@@695 T@U) ($generated@@696 T@U) ($generated@@697 T@U) ($generated@@698 T@U) ) (!  (=> (and (and (and (and (and (and (= (type $generated@@693) $generated@@67) (= (type $generated@@694) $generated@@67)) (= (type $generated@@695) $generated@@67)) (= (type $generated@@696) $generated@@229)) (= (type $generated@@697) $generated@@80)) (= (type $generated@@698) $generated@@136)) (and (and (not (= $generated@@697 $generated@@231)) ($generated@@140 $generated@@697 ($generated@@232 $generated@@693 $generated@@694))) (= $generated@@698 ($generated@@143 0)))) ($generated@@228 $generated@@693 $generated@@694 $generated@@695 $generated@@696 $generated@@697 $generated@@698))
 :pattern ( ($generated@@228 $generated@@693 $generated@@694 $generated@@695 $generated@@696 $generated@@697 $generated@@698))
))))
(assert (forall (($generated@@699 Int) ) (! (= ($generated@@309 ($generated@@8 ($generated@@270 $generated@@699))) ($generated@@272 ($generated@@309 ($generated@@8 $generated@@699))))
 :pattern ( ($generated@@309 ($generated@@8 ($generated@@270 $generated@@699))))
)))
(assert (forall (($generated@@700 T@U) ) (! (= ($generated@@309 ($generated@@272 $generated@@700)) ($generated@@272 ($generated@@309 $generated@@700)))
 :pattern ( ($generated@@309 ($generated@@272 $generated@@700)))
)))
(assert (forall (($generated@@701 T@U) ) (! (let (($generated@@702 ($generated@@292 (type $generated@@701))))
 (=> (and (= (type $generated@@701) ($generated@@291 $generated@@702)) (= ($generated@@290 $generated@@701) 0)) (= $generated@@701 ($generated@@289 $generated@@702))))
 :pattern ( ($generated@@290 $generated@@701))
)))
(assert (forall (($generated@@703 T@U) ($generated@@704 T@U) ($generated@@705 T@U) ) (! (let (($generated@@706 (type $generated@@704)))
 (=> (and (and (= (type $generated@@703) ($generated@@79 $generated@@706 $generated@@2)) (= (type $generated@@705) $generated@@2)) (<= 0 ($generated $generated@@705))) (= ($generated@@319 ($generated@@85 $generated@@703 $generated@@704 $generated@@705)) (+ (- ($generated@@319 $generated@@703) ($generated ($generated@@84 $generated@@703 $generated@@704))) ($generated $generated@@705)))))
 :pattern ( ($generated@@319 ($generated@@85 $generated@@703 $generated@@704 $generated@@705)))
)))
(assert (forall (($generated@@707 T@U) ($generated@@708 T@U) ($generated@@709 T@U) ($generated@@710 T@U) ($generated@@711 T@U) ($generated@@712 T@U) ) (!  (=> (and (and (and (and (and (= (type $generated@@707) $generated@@67) (= (type $generated@@708) $generated@@67)) (= (type $generated@@709) $generated@@67)) (= (type $generated@@710) $generated@@229)) (= (type $generated@@711) $generated@@80)) (= (type $generated@@712) $generated@@136)) (= ($generated@@228 $generated@@707 $generated@@708 $generated@@709 $generated@@710 $generated@@711 $generated@@712) ($generated@@228 $generated@@707 $generated@@708 $generated@@709 $generated@@369 $generated@@711 $generated@@712)))
 :pattern ( ($generated@@228 $generated@@707 $generated@@708 $generated@@709 ($generated@@368 $generated@@710) $generated@@711 $generated@@712))
)))
(assert (forall (($generated@@713 T@U) ($generated@@714 T@U) ) (!  (=> (and (= (type $generated@@713) ($generated@@79 $generated@@80 $generated@@81)) (= (type $generated@@714) $generated@@2)) ($generated@@77 $generated@@714 $generated@@46 $generated@@713))
 :pattern ( ($generated@@77 $generated@@714 $generated@@46 $generated@@713))
)))
(assert (forall (($generated@@715 T@U) ($generated@@716 T@U) ) (!  (=> (and (= (type $generated@@715) ($generated@@79 $generated@@80 $generated@@81)) (= (type $generated@@716) $generated@@3)) ($generated@@77 $generated@@716 $generated@@47 $generated@@715))
 :pattern ( ($generated@@77 $generated@@716 $generated@@47 $generated@@715))
)))
(assert (forall (($generated@@717 T@U) ($generated@@718 T@U) ) (!  (=> (and (= (type $generated@@717) ($generated@@79 $generated@@80 $generated@@81)) (= (type $generated@@718) $generated@@4)) ($generated@@77 $generated@@718 $generated@@44 $generated@@717))
 :pattern ( ($generated@@77 $generated@@718 $generated@@44 $generated@@717))
)))
(assert (forall (($generated@@719 T@U) ($generated@@720 T@U) ) (!  (=> (and (= (type $generated@@719) ($generated@@79 $generated@@80 $generated@@81)) (= (type $generated@@720) $generated@@517)) ($generated@@77 $generated@@720 $generated@@45 $generated@@719))
 :pattern ( ($generated@@77 $generated@@720 $generated@@45 $generated@@719))
)))
(assert (forall (($generated@@721 T@U) ($generated@@722 T@U) ) (!  (=> (and (= (type $generated@@721) ($generated@@79 $generated@@80 $generated@@81)) (= (type $generated@@722) $generated@@136)) ($generated@@77 $generated@@722 $generated@@48 $generated@@721))
 :pattern ( ($generated@@77 $generated@@722 $generated@@48 $generated@@721))
)))
(assert (forall (($generated@@723 T@U) ($generated@@724 T@U) ) (!  (=> (and (= (type $generated@@723) ($generated@@291 $generated@@136)) (= (type $generated@@724) $generated@@67)) (= ($generated@@140 $generated@@723 ($generated@@576 $generated@@724)) (forall (($generated@@725 Int) ) (!  (=> (and (<= 0 $generated@@725) (< $generated@@725 ($generated@@290 $generated@@723))) ($generated@@251 ($generated@@577 $generated@@723 $generated@@725) $generated@@724))
 :pattern ( ($generated@@577 $generated@@723 $generated@@725))
))))
 :pattern ( ($generated@@140 $generated@@723 ($generated@@576 $generated@@724)))
)))
(assert (forall (($generated@@727 T@U) ($generated@@728 Int) ) (!  (=> (= (type $generated@@727) ($generated@@291 $generated@@136)) (=> (and (<= 0 $generated@@728) (< $generated@@728 ($generated@@290 $generated@@727))) (< ($generated@@617 ($generated@@449 $generated@@153 ($generated@@577 $generated@@727 $generated@@728))) ($generated@@726 $generated@@727))))
 :pattern ( ($generated@@617 ($generated@@449 $generated@@153 ($generated@@577 $generated@@727 $generated@@728))))
)))
(assert (forall (($generated@@729 T@U) ($generated@@730 T@U) ($generated@@731 T@U) ) (!  (=> (and (and (and (= (type $generated@@729) ($generated@@327 $generated@@136 $generated@@136)) (= (type $generated@@730) $generated@@67)) (= (type $generated@@731) $generated@@67)) ($generated@@140 $generated@@729 ($generated@@477 $generated@@730 $generated@@731))) (and (and ($generated@@140 ($generated@@325 $generated@@729) ($generated@@260 $generated@@730)) ($generated@@140 ($generated@@396 $generated@@729) ($generated@@260 $generated@@731))) ($generated@@140 ($generated@@448 $generated@@729) ($generated@@260 ($generated@@152 $generated@@730 $generated@@731)))))
 :pattern ( ($generated@@140 $generated@@729 ($generated@@477 $generated@@730 $generated@@731)))
)))
(assert (forall (($generated@@732 T@U) ($generated@@733 T@U) ($generated@@734 T@U) ) (!  (=> (and (and (and (= (type $generated@@732) ($generated@@345 $generated@@136 $generated@@136)) (= (type $generated@@733) $generated@@67)) (= (type $generated@@734) $generated@@67)) ($generated@@140 $generated@@732 ($generated@@485 $generated@@733 $generated@@734))) (and (and ($generated@@140 ($generated@@343 $generated@@732) ($generated@@265 $generated@@733)) ($generated@@140 ($generated@@407 $generated@@732) ($generated@@265 $generated@@734))) ($generated@@140 ($generated@@459 $generated@@732) ($generated@@265 ($generated@@152 $generated@@733 $generated@@734)))))
 :pattern ( ($generated@@140 $generated@@732 ($generated@@485 $generated@@733 $generated@@734)))
)))
(assert (forall (($generated@@735 T@U) ) (!  (=> (= (type $generated@@735) $generated@@2) ($generated@@140 $generated@@735 $generated@@46))
 :pattern ( ($generated@@140 $generated@@735 $generated@@46))
)))
(assert (forall (($generated@@736 T@U) ) (!  (=> (= (type $generated@@736) $generated@@3) ($generated@@140 $generated@@736 $generated@@47))
 :pattern ( ($generated@@140 $generated@@736 $generated@@47))
)))
(assert (forall (($generated@@737 T@U) ) (!  (=> (= (type $generated@@737) $generated@@4) ($generated@@140 $generated@@737 $generated@@44))
 :pattern ( ($generated@@140 $generated@@737 $generated@@44))
)))
(assert (forall (($generated@@738 T@U) ) (!  (=> (= (type $generated@@738) $generated@@517) ($generated@@140 $generated@@738 $generated@@45))
 :pattern ( ($generated@@140 $generated@@738 $generated@@45))
)))
(assert (forall (($generated@@739 T@U) ) (!  (=> (= (type $generated@@739) $generated@@136) ($generated@@140 $generated@@739 $generated@@48))
 :pattern ( ($generated@@140 $generated@@739 $generated@@48))
)))
(push 1)
(declare-fun ControlFlow (Int Int) Int)
(declare-fun $generated@@740 () T@U)
(declare-fun $generated@@741 () T@U)
(declare-fun $generated@@742 () T@U)
(declare-fun $generated@@743 (T@U) Bool)
(declare-fun $generated@@744 () T@U)
(declare-fun $generated@@745 () T@U)
(declare-fun $generated@@746 () T@U)
(assert  (and (and (and (and (and (= (type $generated@@740) ($generated@@173 $generated@@80 $generated@@4)) (= (type $generated@@741) ($generated@@79 $generated@@80 $generated@@81))) (= (type $generated@@742) ($generated@@79 $generated@@80 $generated@@81))) (= (type $generated@@744) $generated@@80)) (= (type $generated@@745) $generated@@67)) (= (type $generated@@746) $generated@@67)))
(set-option :timeout 0)
(set-option :rlimit 0)
(assert (not
 (=> (= (ControlFlow 0 0) 3) (let (($generated@@747  (=> (= $generated@@740 ($generated@@172 $generated@@231 $generated@@741 $generated@@60 false)) (=> (and (and ($generated@@276 $generated@@742) ($generated@@743 $generated@@742)) (and (= $generated@@741 $generated@@742) (= (ControlFlow 0 2) (- 0 1)))) (not (= $generated@@744 $generated@@231))))))
(let (($generated@@748  (=> (and ($generated@@276 $generated@@741) ($generated@@743 $generated@@741)) (=> (and (and ($generated@@140 $generated@@744 ($generated@@232 $generated@@745 $generated@@746)) ($generated@@77 $generated@@744 ($generated@@232 $generated@@745 $generated@@746) $generated@@741)) (and (= 1 $generated@@227) (= (ControlFlow 0 3) 2))) $generated@@747))))
$generated@@748)))
))
(check-sat)
(pop 1)
; Valid
(get-info :rlimit)
(reset)
(set-option :rlimit 0)
; did a full reset
(reset)
(set-option :print-success false)
(set-info :smt-lib-version 2.6)
(set-option :auto_config false)
(set-option :type_check true)
(set-option :smt.case_split 3)
(set-option :smt.qi.eager_threshold 100)
(set-option :smt.delay_units true)
(set-option :smt.arith.solver 2)
(set-option :smt.mbqi false)
(set-option :model.compact false)
(set-option :model.v2 true)
(set-option :pp.bv_literals false)
; done setting options


(set-info :category "industrial")
(declare-sort |T@U| 0)
(declare-sort |T@T| 0)
(declare-fun real_pow (Real Real) Real)
(declare-fun UOrdering2 (|T@U| |T@U|) Bool)
(declare-fun UOrdering3 (|T@T| |T@U| |T@U|) Bool)
(declare-fun tickleBool (Bool) Bool)
(assert (and (tickleBool true) (tickleBool false)))
(declare-fun $generated (T@U) Int)
(declare-fun $generated@@0 (T@U) Bool)
(declare-fun $generated@@1 (T@T) Int)
(declare-fun $generated@@2 () T@T)
(declare-fun $generated@@3 () T@T)
(declare-fun $generated@@4 () T@T)
(declare-fun $generated@@5 () T@T)
(declare-fun $generated@@6 () T@T)
(declare-fun $generated@@7 () T@T)
(declare-fun $generated@@8 (Int) T@U)
(declare-fun type (T@U) T@T)
(declare-fun $generated@@9 (Real) T@U)
(declare-fun $generated@@10 (T@U) Real)
(declare-fun $generated@@11 (Bool) T@U)
(declare-fun $generated@@12 (RoundingMode) T@U)
(declare-fun $generated@@13 (T@U) RoundingMode)
(declare-fun $generated@@14 (String) T@U)
(declare-fun $generated@@15 (T@U) String)
(declare-fun $generated@@16 ((RegEx String)) T@U)
(declare-fun $generated@@17 (T@U) (RegEx String))
(declare-fun $generated@@44 () T@U)
(declare-fun $generated@@45 () T@U)
(declare-fun $generated@@46 () T@U)
(declare-fun $generated@@47 () T@U)
(declare-fun $generated@@48 () T@U)
(declare-fun $generated@@49 () T@U)
(declare-fun $generated@@50 () T@U)
(declare-fun $generated@@51 () T@U)
(declare-fun $generated@@52 () T@U)
(declare-fun $generated@@53 () T@U)
(declare-fun $generated@@54 () T@U)
(declare-fun $generated@@55 () T@U)
(declare-fun $generated@@56 () T@U)
(declare-fun $generated@@57 () T@U)
(declare-fun $generated@@58 () T@U)
(declare-fun $generated@@59 () T@U)
(declare-fun $generated@@60 () T@U)
(declare-fun $generated@@61 () T@U)
(declare-fun $generated@@62 () T@U)
(declare-fun $generated@@63 () T@U)
(declare-fun $generated@@64 () T@U)
(declare-fun $generated@@65 () T@U)
(declare-fun $generated@@66 () T@U)
(declare-fun $generated@@67 () T@T)
(declare-fun $generated@@68 () T@T)
(declare-fun $generated@@69 (T@T) T@T)
(declare-fun $generated@@70 (T@T) T@T)
(declare-fun $generated@@71 () T@T)
(declare-fun $generated@@72 () T@T)
(declare-fun $generated@@75 (T@U) T@U)
(declare-fun $generated@@77 (T@U T@U T@U) Bool)
(declare-fun $generated@@78 (Int) T@U)
(declare-fun $generated@@79 (T@T T@T) T@T)
(declare-fun $generated@@80 () T@T)
(declare-fun $generated@@81 () T@T)
(declare-fun $generated@@82 (T@T) T@T)
(declare-fun $generated@@83 (T@T) T@T)
(declare-fun $generated@@84 (T@U T@U) T@U)
(declare-fun $generated@@85 (T@U T@U T@U) T@U)
(declare-fun $generated@@86 (T@U T@U) T@U)
(declare-fun $generated@@87 (T@U T@U T@U) T@U)
(declare-fun $generated@@135 (T@U T@U) Bool)
(declare-fun $generated@@136 () T@T)
(declare-fun $generated@@140 (T@U T@U) Bool)
(declare-fun $generated@@142 (T@U T@U) T@U)
(declare-fun $generated@@143 (Int) T@U)
(declare-fun $generated@@144 (T@U) Int)
(declare-fun $generated@@151 (T@U) Bool)
(declare-fun $generated@@152 (T@U T@U) T@U)
(declare-fun $generated@@153 () T@T)
(declare-fun $generated@@159 (T@U T@U) Bool)
(declare-fun $generated@@160 (T@U) T@U)
(declare-fun $generated@@161 (T@U) T@U)
(declare-fun $generated@@166 (T@U) T@U)
(declare-fun $generated@@167 (T@U) Bool)
(declare-fun $generated@@171 (T@U T@U T@U) T@U)
(declare-fun $generated@@172 (T@U T@U T@U Bool) T@U)
(declare-fun $generated@@173 (T@T T@T) T@T)
(declare-fun $generated@@174 (T@T) T@T)
(declare-fun $generated@@175 (T@T) T@T)
(declare-fun $generated@@176 (T@U T@U T@U T@U) T@U)
(declare-fun $generated@@227 () Int)
(declare-fun $generated@@228 (T@U T@U T@U T@U T@U T@U) Bool)
(declare-fun $generated@@229 () T@T)
(declare-fun $generated@@230 (T@U T@U T@U T@U T@U) Bool)
(declare-fun $generated@@231 () T@U)
(declare-fun $generated@@232 (T@U T@U) T@U)
(declare-fun $generated@@241 (T@U T@U) T@U)
(declare-fun $generated@@242 (T@U T@U) Bool)
(declare-fun $generated@@251 (T@U) T@U)
(declare-fun $generated@@256 (T@U) T@U)
(declare-fun $generated@@261 (Int) Int)
(declare-fun $generated@@263 (T@U) T@U)
(declare-fun $generated@@267 (T@U) Bool)
(declare-fun $generated@@268 (T@U T@U T@U) Bool)
(declare-fun $generated@@274 (T@U) T@U)
(declare-fun $generated@@280 (T@T) T@U)
(declare-fun $generated@@281 (T@U) Int)
(declare-fun $generated@@282 (T@T) T@T)
(declare-fun $generated@@283 (T@T) T@T)
(declare-fun $generated@@288 (T@U T@U) T@U)
(declare-fun $generated@@294 (T@U) T@U)
(declare-fun $generated@@302 (T@U) T@U)
(declare-fun $generated@@307 (T@U) T@U)
(declare-fun $generated@@312 (T@U) Int)
(declare-fun $generated@@313 (T@T) T@U)
(declare-fun $generated@@318 (T@U) T@U)
(declare-fun $generated@@319 (T@T T@T) T@U)
(declare-fun $generated@@320 (T@T T@T) T@T)
(declare-fun $generated@@321 (T@T) T@T)
(declare-fun $generated@@322 (T@T) T@T)
(declare-fun $generated@@336 (T@U) T@U)
(declare-fun $generated@@337 (T@T T@T) T@U)
(declare-fun $generated@@338 (T@T T@T) T@T)
(declare-fun $generated@@339 (T@T) T@T)
(declare-fun $generated@@340 (T@T) T@T)
(declare-fun $generated@@358 (T@U) Bool)
(declare-fun $generated@@381 (T@U) T@U)
(declare-fun $generated@@392 (T@U) T@U)
(declare-fun $generated@@422 (T@U) T@U)
(declare-fun $generated@@423 (T@T T@U) T@U)
(declare-fun $generated@@424 (T@U) T@U)
(declare-fun $generated@@433 (T@U) T@U)
(declare-fun $generated@@434 (T@U) T@U)
(declare-fun $generated@@451 (T@U T@U) T@U)
(declare-fun $generated@@459 (T@U T@U) T@U)
(declare-fun $generated@@467 (T@T) T@U)
(declare-fun $generated@@491 () T@T)
(declare-fun $generated@@500 (T@U) T@U)
(declare-fun $generated@@504 (T@U) T@U)
(declare-fun $generated@@510 (T@U) T@U)
(declare-fun $generated@@514 (T@U) T@U)
(declare-fun $generated@@522 (T@U) T@U)
(declare-fun $generated@@526 (T@U) T@U)
(declare-fun $generated@@534 (T@U) T@U)
(declare-fun $generated@@538 (T@U) T@U)
(declare-fun $generated@@542 (T@U) T@U)
(declare-fun $generated@@546 (T@U) T@U)
(declare-fun $generated@@550 (T@U) T@U)
(declare-fun $generated@@551 (T@U Int) T@U)
(declare-fun $generated@@560 (T@U) Int)
(declare-fun $generated@@562 (T@U) T@U)
(declare-fun $generated@@566 (T@U) T@U)
(declare-fun $generated@@570 (T@U) T@U)
(declare-fun $generated@@574 (T@U) T@U)
(declare-fun $generated@@590 (T@U) Int)
(declare-fun $generated@@591 (T@U) Int)
(declare-fun $generated@@613 (T@U) T@U)
(declare-fun $generated@@670 (T@U) T@U)
(declare-fun $generated@@671 () T@U)
(declare-fun $generated@@692 (T@U) Int)
(assert  (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (= ($generated@@1 $generated@@2) 0) (= ($generated@@1 $generated@@3) 1)) (= ($generated@@1 $generated@@4) 2)) (= ($generated@@1 $generated@@5) 3)) (= ($generated@@1 $generated@@6) 4)) (= ($generated@@1 $generated@@7) 5)) (forall (($generated@@18 Int) ) (! (= ($generated ($generated@@8 $generated@@18)) $generated@@18)
 :pattern ( ($generated@@8 $generated@@18))
))) (forall (($generated@@19 T@U) ) (!  (=> (= (type $generated@@19) $generated@@2) (= ($generated@@8 ($generated $generated@@19)) $generated@@19))
 :pattern ( ($generated $generated@@19))
))) (forall (($generated@@20 Int) ) (! (= (type ($generated@@8 $generated@@20)) $generated@@2)
 :pattern ( ($generated@@8 $generated@@20))
))) (forall (($generated@@21 Real) ) (! (= ($generated@@10 ($generated@@9 $generated@@21)) $generated@@21)
 :pattern ( ($generated@@9 $generated@@21))
))) (forall (($generated@@22 T@U) ) (!  (=> (= (type $generated@@22) $generated@@3) (= ($generated@@9 ($generated@@10 $generated@@22)) $generated@@22))
 :pattern ( ($generated@@10 $generated@@22))
))) (forall (($generated@@23 Real) ) (! (= (type ($generated@@9 $generated@@23)) $generated@@3)
 :pattern ( ($generated@@9 $generated@@23))
))) (forall (($generated@@24 Bool) ) (! (= ($generated@@0 ($generated@@11 $generated@@24)) $generated@@24)
 :pattern ( ($generated@@11 $generated@@24))
))) (forall (($generated@@25 T@U) ) (!  (=> (= (type $generated@@25) $generated@@4) (= ($generated@@11 ($generated@@0 $generated@@25)) $generated@@25))
 :pattern ( ($generated@@0 $generated@@25))
))) (forall (($generated@@26 Bool) ) (! (= (type ($generated@@11 $generated@@26)) $generated@@4)
 :pattern ( ($generated@@11 $generated@@26))
))) (forall (($generated@@27 RoundingMode) ) (! (= ($generated@@13 ($generated@@12 $generated@@27)) $generated@@27)
 :pattern ( ($generated@@12 $generated@@27))
))) (forall (($generated@@28 T@U) ) (!  (=> (= (type $generated@@28) $generated@@5) (= ($generated@@12 ($generated@@13 $generated@@28)) $generated@@28))
 :pattern ( ($generated@@13 $generated@@28))
))) (forall (($generated@@29 RoundingMode) ) (! (= (type ($generated@@12 $generated@@29)) $generated@@5)
 :pattern ( ($generated@@12 $generated@@29))
))) (forall (($generated@@30 String) ) (! (= ($generated@@15 ($generated@@14 $generated@@30)) $generated@@30)
 :pattern ( ($generated@@14 $generated@@30))
))) (forall (($generated@@31 T@U) ) (!  (=> (= (type $generated@@31) $generated@@6) (= ($generated@@14 ($generated@@15 $generated@@31)) $generated@@31))
 :pattern ( ($generated@@15 $generated@@31))
))) (forall (($generated@@32 String) ) (! (= (type ($generated@@14 $generated@@32)) $generated@@6)
 :pattern ( ($generated@@14 $generated@@32))
))) (forall (($generated@@33 (RegEx String)) ) (! (= ($generated@@17 ($generated@@16 $generated@@33)) $generated@@33)
 :pattern ( ($generated@@16 $generated@@33))
))) (forall (($generated@@34 T@U) ) (!  (=> (= (type $generated@@34) $generated@@7) (= ($generated@@16 ($generated@@17 $generated@@34)) $generated@@34))
 :pattern ( ($generated@@17 $generated@@34))
))) (forall (($generated@@35 (RegEx String)) ) (! (= (type ($generated@@16 $generated@@35)) $generated@@7)
 :pattern ( ($generated@@16 $generated@@35))
))))
(assert (forall (($generated@@36 T@U) ) (! (UOrdering2 $generated@@36 $generated@@36)
 :no-pattern ($generated $generated@@36)
 :no-pattern ($generated@@0 $generated@@36)
)))
(assert (forall (($generated@@37 T@U) ($generated@@38 T@U) ($generated@@39 T@U) ) (! (let (($generated@@40 (type $generated@@37)))
 (=> (and (and (= (type $generated@@38) $generated@@40) (= (type $generated@@39) $generated@@40)) (and (UOrdering2 $generated@@37 $generated@@38) (UOrdering2 $generated@@38 $generated@@39))) (UOrdering2 $generated@@37 $generated@@39)))
 :pattern ( (UOrdering2 $generated@@37 $generated@@38) (UOrdering2 $generated@@38 $generated@@39))
)))
(assert (forall (($generated@@41 T@U) ($generated@@42 T@U) ) (! (let (($generated@@43 (type $generated@@41)))
 (=> (= (type $generated@@42) $generated@@43) (=> (and (UOrdering2 $generated@@41 $generated@@42) (UOrdering2 $generated@@42 $generated@@41)) (= $generated@@41 $generated@@42))))
 :pattern ( (UOrdering2 $generated@@41 $generated@@42) (UOrdering2 $generated@@42 $generated@@41))
)))
(assert  (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (= ($generated@@1 $generated@@67) 6) (= (type $generated@@44) $generated@@67)) (= (type $generated@@45) $generated@@67)) (= (type $generated@@46) $generated@@67)) (= (type $generated@@47) $generated@@67)) (= (type $generated@@48) $generated@@67)) (= ($generated@@1 $generated@@68) 7)) (= (type $generated@@49) $generated@@68)) (= (type $generated@@50) $generated@@68)) (= (type $generated@@51) $generated@@68)) (= (type $generated@@52) $generated@@68)) (= (type $generated@@53) $generated@@68)) (= (type $generated@@54) $generated@@68)) (= (type $generated@@55) $generated@@68)) (= (type $generated@@56) $generated@@68)) (= (type $generated@@57) $generated@@68)) (= (type $generated@@58) $generated@@68)) (= (type $generated@@59) $generated@@68)) (forall (($generated@@73 T@T) ) (= ($generated@@1 ($generated@@69 $generated@@73)) 8))) (forall (($generated@@74 T@T) ) (! (= ($generated@@70 ($generated@@69 $generated@@74)) $generated@@74)
 :pattern ( ($generated@@69 $generated@@74))
))) (= (type $generated@@60) ($generated@@69 $generated@@4))) (= ($generated@@1 $generated@@71) 9)) (= (type $generated@@61) $generated@@71)) (= (type $generated@@62) $generated@@68)) (= (type $generated@@63) $generated@@68)) (= (type $generated@@64) $generated@@68)) (= ($generated@@1 $generated@@72) 10)) (= (type $generated@@65) $generated@@72)) (= (type $generated@@66) $generated@@72)))
(assert (distinct $generated@@44 $generated@@45 $generated@@46 $generated@@47 $generated@@48 $generated@@49 $generated@@50 $generated@@51 $generated@@52 $generated@@53 $generated@@54 $generated@@55 $generated@@56 $generated@@57 $generated@@58 $generated@@59 $generated@@60 $generated@@61 $generated@@62 $generated@@63 $generated@@64 $generated@@65 $generated@@66)
)
(assert (forall (($generated@@76 T@U) ) (! (= (type ($generated@@75 $generated@@76)) $generated@@68)
 :pattern ( ($generated@@75 $generated@@76))
)))
(assert (= ($generated@@75 $generated@@44) $generated@@49))
(assert (= ($generated@@75 $generated@@45) $generated@@50))
(assert (= ($generated@@75 $generated@@46) $generated@@51))
(assert (= ($generated@@75 $generated@@47) $generated@@52))
(assert (= ($generated@@75 $generated@@48) $generated@@53))
(assert  (and (and (and (and (and (and (and (and (and (and (and (and (and (forall (($generated@@88 T@T) ($generated@@89 T@T) ) (= ($generated@@1 ($generated@@79 $generated@@88 $generated@@89)) 11)) (forall (($generated@@90 T@T) ($generated@@91 T@T) ) (! (= ($generated@@82 ($generated@@79 $generated@@90 $generated@@91)) $generated@@90)
 :pattern ( ($generated@@79 $generated@@90 $generated@@91))
))) (forall (($generated@@92 T@T) ($generated@@93 T@T) ) (! (= ($generated@@83 ($generated@@79 $generated@@92 $generated@@93)) $generated@@93)
 :pattern ( ($generated@@79 $generated@@92 $generated@@93))
))) (forall (($generated@@94 T@U) ($generated@@95 T@U) ) (! (let (($generated@@96 ($generated@@83 (type $generated@@94))))
(= (type ($generated@@84 $generated@@94 $generated@@95)) $generated@@96))
 :pattern ( ($generated@@84 $generated@@94 $generated@@95))
))) (forall (($generated@@97 T@U) ($generated@@98 T@U) ($generated@@99 T@U) ) (! (let (($generated@@100 (type $generated@@99)))
(let (($generated@@101 (type $generated@@98)))
(= (type ($generated@@85 $generated@@97 $generated@@98 $generated@@99)) ($generated@@79 $generated@@101 $generated@@100))))
 :pattern ( ($generated@@85 $generated@@97 $generated@@98 $generated@@99))
))) (forall (($generated@@102 T@U) ($generated@@103 T@U) ($generated@@104 T@U) ) (! (let (($generated@@105 ($generated@@83 (type $generated@@102))))
 (=> (= (type $generated@@104) $generated@@105) (= ($generated@@84 ($generated@@85 $generated@@102 $generated@@103 $generated@@104) $generated@@103) $generated@@104)))
 :weight 0
))) (and (forall (($generated@@106 T@U) ($generated@@107 T@U) ($generated@@108 T@U) ($generated@@109 T@U) ) (!  (or (= $generated@@108 $generated@@109) (= ($generated@@84 ($generated@@85 $generated@@107 $generated@@108 $generated@@106) $generated@@109) ($generated@@84 $generated@@107 $generated@@109)))
 :weight 0
)) (forall (($generated@@110 T@U) ($generated@@111 T@U) ($generated@@112 T@U) ($generated@@113 T@U) ) (!  (or true (= ($generated@@84 ($generated@@85 $generated@@111 $generated@@112 $generated@@110) $generated@@113) ($generated@@84 $generated@@111 $generated@@113)))
 :weight 0
)))) (= ($generated@@1 $generated@@80) 12)) (forall (($generated@@114 T@U) ($generated@@115 T@U) ) (! (let (($generated@@116 ($generated@@70 (type $generated@@115))))
(= (type ($generated@@86 $generated@@114 $generated@@115)) $generated@@116))
 :pattern ( ($generated@@86 $generated@@114 $generated@@115))
))) (= ($generated@@1 $generated@@81) 13)) (forall (($generated@@117 T@U) ($generated@@118 T@U) ($generated@@119 T@U) ) (! (= (type ($generated@@87 $generated@@117 $generated@@118 $generated@@119)) $generated@@81)
 :pattern ( ($generated@@87 $generated@@117 $generated@@118 $generated@@119))
))) (forall (($generated@@120 T@U) ($generated@@121 T@U) ($generated@@122 T@U) ) (! (let (($generated@@123 ($generated@@70 (type $generated@@121))))
 (=> (= (type $generated@@122) $generated@@123) (= ($generated@@86 ($generated@@87 $generated@@120 $generated@@121 $generated@@122) $generated@@121) $generated@@122)))
 :weight 0
))) (and (forall (($generated@@124 T@U) ($generated@@125 T@U) ($generated@@126 T@U) ($generated@@127 T@U) ) (!  (or (= $generated@@126 $generated@@127) (= ($generated@@86 ($generated@@87 $generated@@125 $generated@@126 $generated@@124) $generated@@127) ($generated@@86 $generated@@125 $generated@@127)))
 :weight 0
)) (forall (($generated@@128 T@U) ($generated@@129 T@U) ($generated@@130 T@U) ($generated@@131 T@U) ) (!  (or true (= ($generated@@86 ($generated@@87 $generated@@129 $generated@@130 $generated@@128) $generated@@131) ($generated@@86 $generated@@129 $generated@@131)))
 :weight 0
)))) (forall (($generated@@132 Int) ) (! (= (type ($generated@@78 $generated@@132)) $generated@@67)
 :pattern ( ($generated@@78 $generated@@132))
))))
(assert (forall (($generated@@133 T@U) ($generated@@134 T@U) ) (!  (=> (and (= (type $generated@@133) $generated@@2) (= (type $generated@@134) ($generated@@79 $generated@@80 $generated@@81))) ($generated@@77 $generated@@133 ($generated@@78 0) $generated@@134))
 :pattern ( ($generated@@77 $generated@@133 ($generated@@78 0) $generated@@134))
)))
(assert (= ($generated@@1 $generated@@136) 14))
(assert (forall (($generated@@137 T@U) ($generated@@138 T@U) ($generated@@139 T@U) ) (!  (=> (and (and (and (= (type $generated@@137) $generated@@136) (= (type $generated@@138) $generated@@136)) (= (type $generated@@139) $generated@@136)) (and ($generated@@135 $generated@@137 $generated@@138) ($generated@@135 $generated@@138 $generated@@139))) ($generated@@135 $generated@@137 $generated@@139))
 :pattern ( ($generated@@135 $generated@@137 $generated@@138) ($generated@@135 $generated@@138 $generated@@139))
 :pattern ( ($generated@@135 $generated@@137 $generated@@138) ($generated@@135 $generated@@137 $generated@@139))
)))
(assert (forall (($generated@@141 T@U) ) (!  (=> (= (type $generated@@141) $generated@@2) ($generated@@140 $generated@@141 ($generated@@78 0)))
 :pattern ( ($generated@@140 $generated@@141 ($generated@@78 0)))
)))
(assert  (and (forall (($generated@@145 T@U) ($generated@@146 T@U) ) (! (= (type ($generated@@142 $generated@@145 $generated@@146)) $generated@@136)
 :pattern ( ($generated@@142 $generated@@145 $generated@@146))
)) (forall (($generated@@147 Int) ) (! (= (type ($generated@@143 $generated@@147)) $generated@@136)
 :pattern ( ($generated@@143 $generated@@147))
))))
(assert (forall (($generated@@148 T@U) ($generated@@149 Int) ($generated@@150 Int) ) (!  (=> (= (type $generated@@148) $generated@@136) (=> (and (and (<= 0 $generated@@149) (<= 0 $generated@@150)) (<= (+ $generated@@149 $generated@@150) ($generated@@144 $generated@@148))) (= ($generated@@142 ($generated@@142 $generated@@148 ($generated@@143 $generated@@149)) ($generated@@143 $generated@@150)) ($generated@@142 $generated@@148 ($generated@@143 (+ $generated@@149 $generated@@150))))))
 :pattern ( ($generated@@142 ($generated@@142 $generated@@148 ($generated@@143 $generated@@149)) ($generated@@143 $generated@@150)))
)))
(assert  (and (= ($generated@@1 $generated@@153) 15) (forall (($generated@@154 T@U) ($generated@@155 T@U) ) (! (= (type ($generated@@152 $generated@@154 $generated@@155)) $generated@@67)
 :pattern ( ($generated@@152 $generated@@154 $generated@@155))
))))
(assert (forall (($generated@@156 T@U) ($generated@@157 T@U) ($generated@@158 T@U) ) (!  (=> (and (and (and (= (type $generated@@156) $generated@@67) (= (type $generated@@157) $generated@@67)) (= (type $generated@@158) $generated@@153)) ($generated@@140 $generated@@158 ($generated@@152 $generated@@156 $generated@@157))) ($generated@@151 $generated@@158))
 :pattern ( ($generated@@151 $generated@@158) ($generated@@140 $generated@@158 ($generated@@152 $generated@@156 $generated@@157)))
)))
(assert  (and (forall (($generated@@162 T@U) ) (! (= (type ($generated@@160 $generated@@162)) $generated@@136)
 :pattern ( ($generated@@160 $generated@@162))
)) (forall (($generated@@163 T@U) ) (! (= (type ($generated@@161 $generated@@163)) $generated@@136)
 :pattern ( ($generated@@161 $generated@@163))
))))
(assert (forall (($generated@@164 T@U) ($generated@@165 T@U) ) (!  (=> (and (and (= (type $generated@@164) $generated@@153) (= (type $generated@@165) $generated@@153)) true) (= ($generated@@159 $generated@@164 $generated@@165)  (and (= ($generated@@160 $generated@@164) ($generated@@160 $generated@@165)) (= ($generated@@161 $generated@@164) ($generated@@161 $generated@@165)))))
 :pattern ( ($generated@@159 $generated@@164 $generated@@165))
)))
(assert (forall (($generated@@168 T@U) ) (! (= (type ($generated@@166 $generated@@168)) $generated@@67)
 :pattern ( ($generated@@166 $generated@@168))
)))
(assert (forall (($generated@@169 T@U) ($generated@@170 T@U) ) (!  (=> (and (and (= (type $generated@@169) ($generated@@79 $generated@@136 $generated@@2)) (= (type $generated@@170) $generated@@67)) ($generated@@140 $generated@@169 ($generated@@166 $generated@@170))) ($generated@@167 $generated@@169))
 :pattern ( ($generated@@140 $generated@@169 ($generated@@166 $generated@@170)))
)))
(assert  (and (and (and (and (and (and (and (forall (($generated@@177 T@T) ($generated@@178 T@T) ) (= ($generated@@1 ($generated@@173 $generated@@177 $generated@@178)) 16)) (forall (($generated@@179 T@T) ($generated@@180 T@T) ) (! (= ($generated@@174 ($generated@@173 $generated@@179 $generated@@180)) $generated@@179)
 :pattern ( ($generated@@173 $generated@@179 $generated@@180))
))) (forall (($generated@@181 T@T) ($generated@@182 T@T) ) (! (= ($generated@@175 ($generated@@173 $generated@@181 $generated@@182)) $generated@@182)
 :pattern ( ($generated@@173 $generated@@181 $generated@@182))
))) (forall (($generated@@183 T@U) ($generated@@184 T@U) ($generated@@185 T@U) ) (! (let (($generated@@186 ($generated@@175 (type $generated@@183))))
(= (type ($generated@@171 $generated@@183 $generated@@184 $generated@@185)) $generated@@186))
 :pattern ( ($generated@@171 $generated@@183 $generated@@184 $generated@@185))
))) (forall (($generated@@187 T@U) ($generated@@188 T@U) ($generated@@189 T@U) ($generated@@190 T@U) ) (! (let (($generated@@191 (type $generated@@190)))
(let (($generated@@192 (type $generated@@188)))
(= (type ($generated@@176 $generated@@187 $generated@@188 $generated@@189 $generated@@190)) ($generated@@173 $generated@@192 $generated@@191))))
 :pattern ( ($generated@@176 $generated@@187 $generated@@188 $generated@@189 $generated@@190))
))) (forall (($generated@@193 T@U) ($generated@@194 T@U) ($generated@@195 T@U) ($generated@@196 T@U) ) (! (let (($generated@@197 ($generated@@175 (type $generated@@193))))
 (=> (= (type $generated@@196) $generated@@197) (= ($generated@@171 ($generated@@176 $generated@@193 $generated@@194 $generated@@195 $generated@@196) $generated@@194 $generated@@195) $generated@@196)))
 :weight 0
))) (and (and (forall (($generated@@198 T@U) ($generated@@199 T@U) ($generated@@200 T@U) ($generated@@201 T@U) ($generated@@202 T@U) ($generated@@203 T@U) ) (!  (or (= $generated@@200 $generated@@202) (= ($generated@@171 ($generated@@176 $generated@@199 $generated@@200 $generated@@201 $generated@@198) $generated@@202 $generated@@203) ($generated@@171 $generated@@199 $generated@@202 $generated@@203)))
 :weight 0
)) (forall (($generated@@204 T@U) ($generated@@205 T@U) ($generated@@206 T@U) ($generated@@207 T@U) ($generated@@208 T@U) ($generated@@209 T@U) ) (!  (or (= $generated@@207 $generated@@209) (= ($generated@@171 ($generated@@176 $generated@@205 $generated@@206 $generated@@207 $generated@@204) $generated@@208 $generated@@209) ($generated@@171 $generated@@205 $generated@@208 $generated@@209)))
 :weight 0
))) (forall (($generated@@210 T@U) ($generated@@211 T@U) ($generated@@212 T@U) ($generated@@213 T@U) ($generated@@214 T@U) ($generated@@215 T@U) ) (!  (or true (= ($generated@@171 ($generated@@176 $generated@@211 $generated@@212 $generated@@213 $generated@@210) $generated@@214 $generated@@215) ($generated@@171 $generated@@211 $generated@@214 $generated@@215)))
 :weight 0
)))) (forall (($generated@@216 T@U) ($generated@@217 T@U) ($generated@@218 T@U) ($generated@@219 Bool) ) (! (= (type ($generated@@172 $generated@@216 $generated@@217 $generated@@218 $generated@@219)) ($generated@@173 $generated@@80 $generated@@4))
 :pattern ( ($generated@@172 $generated@@216 $generated@@217 $generated@@218 $generated@@219))
))))
(assert (forall (($generated@@220 T@U) ($generated@@221 T@U) ($generated@@222 T@U) ($generated@@223 Bool) ($generated@@224 T@U) ($generated@@225 T@U) ) (! (let (($generated@@226 ($generated@@70 (type $generated@@225))))
 (=> (and (and (and (and (= (type $generated@@220) $generated@@80) (= (type $generated@@221) ($generated@@79 $generated@@80 $generated@@81))) (= (type $generated@@222) ($generated@@69 $generated@@4))) (= (type $generated@@224) $generated@@80)) (= (type $generated@@225) ($generated@@69 $generated@@226))) (= ($generated@@0 ($generated@@171 ($generated@@172 $generated@@220 $generated@@221 $generated@@222 $generated@@223) $generated@@224 $generated@@225))  (=> (and (not (= $generated@@224 $generated@@220)) ($generated@@0 ($generated@@86 ($generated@@84 $generated@@221 $generated@@224) $generated@@222))) $generated@@223))))
 :pattern ( ($generated@@171 ($generated@@172 $generated@@220 $generated@@221 $generated@@222 $generated@@223) $generated@@224 $generated@@225))
)))
(assert  (and (and (= ($generated@@1 $generated@@229) 17) (= (type $generated@@231) $generated@@80)) (forall (($generated@@233 T@U) ($generated@@234 T@U) ) (! (= (type ($generated@@232 $generated@@233 $generated@@234)) $generated@@67)
 :pattern ( ($generated@@232 $generated@@233 $generated@@234))
))))
(assert  (=> (<= 1 $generated@@227) (forall (($generated@@235 T@U) ($generated@@236 T@U) ($generated@@237 T@U) ($generated@@238 T@U) ($generated@@239 T@U) ($generated@@240 T@U) ) (!  (=> (and (and (and (and (and (and (= (type $generated@@235) $generated@@67) (= (type $generated@@236) $generated@@67)) (= (type $generated@@237) $generated@@67)) (= (type $generated@@238) $generated@@229)) (= (type $generated@@239) $generated@@80)) (= (type $generated@@240) $generated@@136)) (or ($generated@@230 $generated@@235 $generated@@236 $generated@@237 $generated@@239 $generated@@240) (and (not (= 1 $generated@@227)) (and (not (= $generated@@239 $generated@@231)) ($generated@@140 $generated@@239 ($generated@@232 $generated@@235 $generated@@236)))))) true)
 :pattern ( ($generated@@228 $generated@@235 $generated@@236 $generated@@237 $generated@@238 $generated@@239 $generated@@240))
))))
(assert (forall (($generated@@243 T@U) ($generated@@244 T@U) ) (! (= (type ($generated@@241 $generated@@243 $generated@@244)) $generated@@153)
 :pattern ( ($generated@@241 $generated@@243 $generated@@244))
)))
(assert (forall (($generated@@245 T@U) ($generated@@246 T@U) ($generated@@247 T@U) ($generated@@248 T@U) ) (!  (=> (and (and (and (= (type $generated@@245) $generated@@67) (= (type $generated@@246) $generated@@67)) (= (type $generated@@247) $generated@@136)) (= (type $generated@@248) $generated@@136)) (= ($generated@@140 ($generated@@241 $generated@@247 $generated@@248) ($generated@@152 $generated@@245 $generated@@246))  (and ($generated@@242 $generated@@247 $generated@@245) ($generated@@242 $generated@@248 $generated@@246))))
 :pattern ( ($generated@@140 ($generated@@241 $generated@@247 $generated@@248) ($generated@@152 $generated@@245 $generated@@246)))
)))
(assert (forall (($generated@@249 T@U) ($generated@@250 T@U) ) (!  (=> (and (= (type $generated@@249) $generated@@153) (= (type $generated@@250) $generated@@153)) (= ($generated@@159 $generated@@249 $generated@@250) (= $generated@@249 $generated@@250)))
 :pattern ( ($generated@@159 $generated@@249 $generated@@250))
)))
(assert (forall (($generated@@252 T@U) ) (! (= (type ($generated@@251 $generated@@252)) $generated@@67)
 :pattern ( ($generated@@251 $generated@@252))
)))
(assert (forall (($generated@@253 T@U) ($generated@@254 T@U) ) (!  (=> (and (= (type $generated@@253) ($generated@@79 $generated@@136 $generated@@4)) (= (type $generated@@254) $generated@@67)) (= ($generated@@140 $generated@@253 ($generated@@251 $generated@@254)) (forall (($generated@@255 T@U) ) (!  (=> (and (= (type $generated@@255) $generated@@136) ($generated@@0 ($generated@@84 $generated@@253 $generated@@255))) ($generated@@242 $generated@@255 $generated@@254))
 :pattern ( ($generated@@84 $generated@@253 $generated@@255))
))))
 :pattern ( ($generated@@140 $generated@@253 ($generated@@251 $generated@@254)))
)))
(assert (forall (($generated@@257 T@U) ) (! (= (type ($generated@@256 $generated@@257)) $generated@@67)
 :pattern ( ($generated@@256 $generated@@257))
)))
(assert (forall (($generated@@258 T@U) ($generated@@259 T@U) ) (!  (=> (and (= (type $generated@@258) ($generated@@79 $generated@@136 $generated@@4)) (= (type $generated@@259) $generated@@67)) (= ($generated@@140 $generated@@258 ($generated@@256 $generated@@259)) (forall (($generated@@260 T@U) ) (!  (=> (and (= (type $generated@@260) $generated@@136) ($generated@@0 ($generated@@84 $generated@@258 $generated@@260))) ($generated@@242 $generated@@260 $generated@@259))
 :pattern ( ($generated@@84 $generated@@258 $generated@@260))
))))
 :pattern ( ($generated@@140 $generated@@258 ($generated@@256 $generated@@259)))
)))
(assert (forall (($generated@@262 Int) ) (! (= ($generated@@261 $generated@@262) $generated@@262)
 :pattern ( ($generated@@261 $generated@@262))
)))
(assert (forall (($generated@@264 T@U) ) (! (let (($generated@@265 (type $generated@@264)))
(= (type ($generated@@263 $generated@@264)) $generated@@265))
 :pattern ( ($generated@@263 $generated@@264))
)))
(assert (forall (($generated@@266 T@U) ) (! (= ($generated@@263 $generated@@266) $generated@@266)
 :pattern ( ($generated@@263 $generated@@266))
)))
(assert (forall (($generated@@269 T@U) ($generated@@270 T@U) ($generated@@271 T@U) ($generated@@272 T@U) ($generated@@273 T@U) ) (!  (=> (and (and (and (and (and (= (type $generated@@269) $generated@@67) (= (type $generated@@270) $generated@@67)) (= (type $generated@@271) $generated@@136)) (= (type $generated@@272) $generated@@136)) (= (type $generated@@273) ($generated@@79 $generated@@80 $generated@@81))) ($generated@@267 $generated@@273)) (= ($generated@@77 ($generated@@241 $generated@@271 $generated@@272) ($generated@@152 $generated@@269 $generated@@270) $generated@@273)  (and ($generated@@268 $generated@@271 $generated@@269 $generated@@273) ($generated@@268 $generated@@272 $generated@@270 $generated@@273))))
 :pattern ( ($generated@@77 ($generated@@241 $generated@@271 $generated@@272) ($generated@@152 $generated@@269 $generated@@270) $generated@@273))
)))
(assert (forall (($generated@@275 T@U) ) (! (= (type ($generated@@274 $generated@@275)) $generated@@71)
 :pattern ( ($generated@@274 $generated@@275))
)))
(assert (forall (($generated@@276 T@U) ) (!  (=> (= (type $generated@@276) $generated@@153) (= ($generated@@151 $generated@@276) (= ($generated@@274 $generated@@276) $generated@@61)))
 :pattern ( ($generated@@151 $generated@@276))
)))
(assert (forall (($generated@@277 T@U) ) (!  (=> (and (= (type $generated@@277) $generated@@153) ($generated@@151 $generated@@277)) (exists (($generated@@278 T@U) ($generated@@279 T@U) ) (!  (and (and (= (type $generated@@278) $generated@@136) (= (type $generated@@279) $generated@@136)) (= $generated@@277 ($generated@@241 $generated@@278 $generated@@279)))
 :no-pattern (type $generated@@278)
 :no-pattern (type $generated@@279)
 :no-pattern ($generated $generated@@278)
 :no-pattern ($generated@@0 $generated@@278)
 :no-pattern ($generated $generated@@279)
 :no-pattern ($generated@@0 $generated@@279)
)))
 :pattern ( ($generated@@151 $generated@@277))
)))
(assert  (and (and (forall (($generated@@284 T@T) ) (= ($generated@@1 ($generated@@282 $generated@@284)) 18)) (forall (($generated@@285 T@T) ) (! (= ($generated@@283 ($generated@@282 $generated@@285)) $generated@@285)
 :pattern ( ($generated@@282 $generated@@285))
))) (forall (($generated@@286 T@T) ) (! (= (type ($generated@@280 $generated@@286)) ($generated@@282 $generated@@286))
 :pattern ( ($generated@@280 $generated@@286))
))))
(assert (forall (($generated@@287 T@T) ) (! (= ($generated@@281 ($generated@@280 $generated@@287)) 0)
 :pattern ( ($generated@@280 $generated@@287))
)))
(assert (forall (($generated@@289 T@U) ($generated@@290 T@U) ) (! (= (type ($generated@@288 $generated@@289 $generated@@290)) $generated@@67)
 :pattern ( ($generated@@288 $generated@@289 $generated@@290))
)))
(assert (forall (($generated@@291 T@U) ($generated@@292 T@U) ($generated@@293 T@U) ) (!  (=> (and (and (= (type $generated@@291) $generated@@67) (= (type $generated@@292) $generated@@67)) (= (type $generated@@293) $generated@@80)) (= ($generated@@140 $generated@@293 ($generated@@232 $generated@@291 $generated@@292))  (and ($generated@@140 $generated@@293 ($generated@@288 $generated@@291 $generated@@292)) (not (= $generated@@293 $generated@@231)))))
 :pattern ( ($generated@@140 $generated@@293 ($generated@@232 $generated@@291 $generated@@292)))
)))
(assert (forall (($generated@@295 T@U) ) (! (= (type ($generated@@294 $generated@@295)) $generated@@229)
 :pattern ( ($generated@@294 $generated@@295))
)))
(assert (forall (($generated@@296 T@U) ($generated@@297 T@U) ($generated@@298 T@U) ($generated@@299 T@U) ($generated@@300 T@U) ($generated@@301 T@U) ) (!  (=> (and (and (and (and (and (= (type $generated@@296) $generated@@67) (= (type $generated@@297) $generated@@67)) (= (type $generated@@298) $generated@@67)) (= (type $generated@@299) $generated@@229)) (= (type $generated@@300) $generated@@80)) (= (type $generated@@301) $generated@@136)) (= ($generated@@228 $generated@@296 $generated@@297 $generated@@298 ($generated@@294 $generated@@299) $generated@@300 $generated@@301) ($generated@@228 $generated@@296 $generated@@297 $generated@@298 $generated@@299 $generated@@300 $generated@@301)))
 :pattern ( ($generated@@228 $generated@@296 $generated@@297 $generated@@298 ($generated@@294 $generated@@299) $generated@@300 $generated@@301))
)))
(assert (forall (($generated@@303 T@U) ) (! (= (type ($generated@@302 $generated@@303)) $generated@@136)
 :pattern ( ($generated@@302 $generated@@303))
)))
(assert (forall (($generated@@304 T@U) ($generated@@305 T@U) ($generated@@306 T@U) ) (!  (=> (and (= (type $generated@@305) $generated@@67) (= (type $generated@@306) ($generated@@79 $generated@@80 $generated@@81))) (= ($generated@@268 ($generated@@302 $generated@@304) $generated@@305 $generated@@306) ($generated@@77 $generated@@304 $generated@@305 $generated@@306)))
 :pattern ( ($generated@@268 ($generated@@302 $generated@@304) $generated@@305 $generated@@306))
)))
(assert (forall (($generated@@308 T@U) ) (! (= (type ($generated@@307 $generated@@308)) $generated@@67)
 :pattern ( ($generated@@307 $generated@@308))
)))
(assert (forall (($generated@@309 T@U) ($generated@@310 T@U) ($generated@@311 T@U) ) (!  (=> (and (and (= (type $generated@@309) $generated@@67) (= (type $generated@@310) $generated@@67)) (= (type $generated@@311) $generated@@80)) (= ($generated@@140 $generated@@311 ($generated@@288 $generated@@309 $generated@@310))  (or (= $generated@@311 $generated@@231) (= ($generated@@307 $generated@@311) ($generated@@288 $generated@@309 $generated@@310)))))
 :pattern ( ($generated@@140 $generated@@311 ($generated@@288 $generated@@309 $generated@@310)))
)))
(assert (forall (($generated@@314 T@T) ) (! (= (type ($generated@@313 $generated@@314)) ($generated@@79 $generated@@314 $generated@@2))
 :pattern ( ($generated@@313 $generated@@314))
)))
(assert (forall (($generated@@315 T@U) ) (! (let (($generated@@316 ($generated@@82 (type $generated@@315))))
 (=> (= (type $generated@@315) ($generated@@79 $generated@@316 $generated@@2)) (and (= (= ($generated@@312 $generated@@315) 0) (= $generated@@315 ($generated@@313 $generated@@316))) (=> (not (= ($generated@@312 $generated@@315) 0)) (exists (($generated@@317 T@U) ) (!  (and (= (type $generated@@317) $generated@@316) (< 0 ($generated ($generated@@84 $generated@@315 $generated@@317))))
 :no-pattern (type $generated@@317)
 :no-pattern ($generated $generated@@317)
 :no-pattern ($generated@@0 $generated@@317)
))))))
 :pattern ( ($generated@@312 $generated@@315))
)))
(assert  (and (and (and (and (forall (($generated@@323 T@T) ($generated@@324 T@T) ) (= ($generated@@1 ($generated@@320 $generated@@323 $generated@@324)) 19)) (forall (($generated@@325 T@T) ($generated@@326 T@T) ) (! (= ($generated@@321 ($generated@@320 $generated@@325 $generated@@326)) $generated@@325)
 :pattern ( ($generated@@320 $generated@@325 $generated@@326))
))) (forall (($generated@@327 T@T) ($generated@@328 T@T) ) (! (= ($generated@@322 ($generated@@320 $generated@@327 $generated@@328)) $generated@@328)
 :pattern ( ($generated@@320 $generated@@327 $generated@@328))
))) (forall (($generated@@329 T@U) ) (! (let (($generated@@330 ($generated@@321 (type $generated@@329))))
(= (type ($generated@@318 $generated@@329)) ($generated@@79 $generated@@330 $generated@@4)))
 :pattern ( ($generated@@318 $generated@@329))
))) (forall (($generated@@331 T@T) ($generated@@332 T@T) ) (! (= (type ($generated@@319 $generated@@331 $generated@@332)) ($generated@@320 $generated@@331 $generated@@332))
 :pattern ( ($generated@@319 $generated@@331 $generated@@332))
))))
(assert (forall (($generated@@333 T@U) ($generated@@334 T@T) ) (! (let (($generated@@335 (type $generated@@333)))
 (not ($generated@@0 ($generated@@84 ($generated@@318 ($generated@@319 $generated@@335 $generated@@334)) $generated@@333))))
 :pattern ( (let (($generated@@335 (type $generated@@333)))
($generated@@84 ($generated@@318 ($generated@@319 $generated@@335 $generated@@334)) $generated@@333)))
)))
(assert  (and (and (and (and (forall (($generated@@341 T@T) ($generated@@342 T@T) ) (= ($generated@@1 ($generated@@338 $generated@@341 $generated@@342)) 20)) (forall (($generated@@343 T@T) ($generated@@344 T@T) ) (! (= ($generated@@339 ($generated@@338 $generated@@343 $generated@@344)) $generated@@343)
 :pattern ( ($generated@@338 $generated@@343 $generated@@344))
))) (forall (($generated@@345 T@T) ($generated@@346 T@T) ) (! (= ($generated@@340 ($generated@@338 $generated@@345 $generated@@346)) $generated@@346)
 :pattern ( ($generated@@338 $generated@@345 $generated@@346))
))) (forall (($generated@@347 T@U) ) (! (let (($generated@@348 ($generated@@339 (type $generated@@347))))
(= (type ($generated@@336 $generated@@347)) ($generated@@79 $generated@@348 $generated@@4)))
 :pattern ( ($generated@@336 $generated@@347))
))) (forall (($generated@@349 T@T) ($generated@@350 T@T) ) (! (= (type ($generated@@337 $generated@@349 $generated@@350)) ($generated@@338 $generated@@349 $generated@@350))
 :pattern ( ($generated@@337 $generated@@349 $generated@@350))
))))
(assert (forall (($generated@@351 T@U) ($generated@@352 T@T) ) (! (let (($generated@@353 (type $generated@@351)))
 (not ($generated@@0 ($generated@@84 ($generated@@336 ($generated@@337 $generated@@353 $generated@@352)) $generated@@351))))
 :pattern ( (let (($generated@@353 (type $generated@@351)))
($generated@@84 ($generated@@336 ($generated@@337 $generated@@353 $generated@@352)) $generated@@351)))
)))
(assert (forall (($generated@@354 T@U) ($generated@@355 T@U) ($generated@@356 T@U) ($generated@@357 T@U) ) (!  (=> (and (and (and (= (type $generated@@354) $generated@@67) (= (type $generated@@355) $generated@@67)) (= (type $generated@@356) $generated@@80)) (= (type $generated@@357) ($generated@@79 $generated@@80 $generated@@81))) (= ($generated@@77 $generated@@356 ($generated@@288 $generated@@354 $generated@@355) $generated@@357)  (or (= $generated@@356 $generated@@231) ($generated@@0 ($generated@@86 ($generated@@84 $generated@@357 $generated@@356) $generated@@60)))))
 :pattern ( ($generated@@77 $generated@@356 ($generated@@288 $generated@@354 $generated@@355) $generated@@357))
)))
(assert (forall (($generated@@359 T@U) ($generated@@360 T@U) ) (!  (=> (and (and (= (type $generated@@359) $generated@@136) (= (type $generated@@360) $generated@@136)) (and ($generated@@358 $generated@@360) (<= ($generated@@144 $generated@@360) ($generated@@144 $generated@@359)))) (and (= ($generated@@358 ($generated@@142 $generated@@359 $generated@@360)) ($generated@@358 $generated@@359)) (= ($generated@@144 ($generated@@142 $generated@@359 $generated@@360)) (- ($generated@@144 $generated@@359) ($generated@@144 $generated@@360)))))
 :pattern ( ($generated@@142 $generated@@359 $generated@@360))
)))
(assert (forall (($generated@@361 Int) ) (!  (=> (<= 0 $generated@@361) (and ($generated@@358 ($generated@@143 $generated@@361)) (= ($generated@@144 ($generated@@143 $generated@@361)) $generated@@361)))
 :pattern ( ($generated@@143 $generated@@361))
)))
(assert (forall (($generated@@362 T@U) ($generated@@363 T@U) ($generated@@364 T@U) ($generated@@365 T@U) ) (!  (=> (and (and (and (= (type $generated@@362) $generated@@67) (= (type $generated@@363) $generated@@67)) (= (type $generated@@364) $generated@@80)) (= (type $generated@@365) ($generated@@79 $generated@@80 $generated@@81))) (= ($generated@@77 $generated@@364 ($generated@@232 $generated@@362 $generated@@363) $generated@@365) ($generated@@77 $generated@@364 ($generated@@288 $generated@@362 $generated@@363) $generated@@365)))
 :pattern ( ($generated@@77 $generated@@364 ($generated@@232 $generated@@362 $generated@@363) $generated@@365))
)))
(assert (forall (($generated@@366 T@U) ) (! (let (($generated@@367 ($generated@@82 (type $generated@@366))))
 (=> (= (type $generated@@366) ($generated@@79 $generated@@367 $generated@@2)) (= ($generated@@167 $generated@@366) (forall (($generated@@368 T@U) ) (!  (=> (= (type $generated@@368) $generated@@367) (and (<= 0 ($generated ($generated@@84 $generated@@366 $generated@@368))) (<= ($generated ($generated@@84 $generated@@366 $generated@@368)) ($generated@@312 $generated@@366))))
 :pattern ( ($generated@@84 $generated@@366 $generated@@368))
)))))
 :pattern ( ($generated@@167 $generated@@366))
)))
(assert  (=> (<= 1 $generated@@227) (forall (($generated@@369 T@U) ($generated@@370 T@U) ($generated@@371 T@U) ($generated@@372 T@U) ($generated@@373 T@U) ($generated@@374 T@U) ) (!  (=> (and (and (and (and (and (and (= (type $generated@@369) $generated@@67) (= (type $generated@@370) $generated@@67)) (= (type $generated@@371) $generated@@67)) (= (type $generated@@372) $generated@@229)) (= (type $generated@@373) $generated@@80)) (= (type $generated@@374) $generated@@136)) (or ($generated@@230 $generated@@369 $generated@@370 $generated@@371 $generated@@373 ($generated@@263 $generated@@374)) (and (not (= 1 $generated@@227)) (and (not (= $generated@@373 $generated@@231)) ($generated@@140 $generated@@373 ($generated@@232 $generated@@369 $generated@@370)))))) (and (and (=> (< 0 ($generated@@144 $generated@@374)) ($generated@@230 $generated@@369 $generated@@370 $generated@@371 $generated@@373 ($generated@@142 $generated@@374 ($generated@@143 1)))) (=> (=> (< 0 ($generated@@144 $generated@@374)) ($generated@@228 $generated@@369 $generated@@370 $generated@@371 ($generated@@294 $generated@@372) $generated@@373 ($generated@@142 $generated@@374 ($generated@@143 1)))) (=> (= ($generated@@261 0) ($generated@@144 $generated@@374)) (forall (($generated@@375 T@U) ) (!  (=> (and (= (type $generated@@375) $generated@@136) ($generated@@135 $generated@@375 $generated@@374)) ($generated@@230 $generated@@369 $generated@@370 $generated@@371 $generated@@373 $generated@@375))
 :pattern ( ($generated@@228 $generated@@369 $generated@@370 $generated@@371 ($generated@@294 $generated@@372) $generated@@373 $generated@@375))
))))) (= ($generated@@228 $generated@@369 $generated@@370 $generated@@371 ($generated@@294 $generated@@372) $generated@@373 ($generated@@263 $generated@@374))  (and (=> (< 0 ($generated@@144 $generated@@374)) ($generated@@228 $generated@@369 $generated@@370 $generated@@371 ($generated@@294 $generated@@372) $generated@@373 ($generated@@142 $generated@@374 ($generated@@143 1)))) (=> (= ($generated@@261 0) ($generated@@144 $generated@@374)) (forall (($generated@@376 T@U) ) (!  (=> (and (= (type $generated@@376) $generated@@136) ($generated@@135 $generated@@376 $generated@@374)) ($generated@@228 $generated@@369 $generated@@370 $generated@@371 ($generated@@294 $generated@@372) $generated@@373 $generated@@376))
 :pattern ( ($generated@@228 $generated@@369 $generated@@370 $generated@@371 ($generated@@294 $generated@@372) $generated@@373 $generated@@376))
)))))))
 :weight 3
 :pattern ( ($generated@@228 $generated@@369 $generated@@370 $generated@@371 ($generated@@294 $generated@@372) $generated@@373 ($generated@@263 $generated@@374)))
))))
(assert (forall (($generated@@377 T@U) ) (! (let (($generated@@378 ($generated@@322 (type $generated@@377))))
(let (($generated@@379 ($generated@@321 (type $generated@@377))))
 (=> (= (type $generated@@377) ($generated@@320 $generated@@379 $generated@@378)) (or (= $generated@@377 ($generated@@319 $generated@@379 $generated@@378)) (exists (($generated@@380 T@U) ) (!  (and (= (type $generated@@380) $generated@@379) ($generated@@0 ($generated@@84 ($generated@@318 $generated@@377) $generated@@380)))
 :no-pattern (type $generated@@380)
 :no-pattern ($generated $generated@@380)
 :no-pattern ($generated@@0 $generated@@380)
))))))
 :pattern ( ($generated@@318 $generated@@377))
)))
(assert (forall (($generated@@382 T@U) ) (! (let (($generated@@383 ($generated@@322 (type $generated@@382))))
(= (type ($generated@@381 $generated@@382)) ($generated@@79 $generated@@383 $generated@@4)))
 :pattern ( ($generated@@381 $generated@@382))
)))
(assert (forall (($generated@@384 T@U) ) (! (let (($generated@@385 ($generated@@322 (type $generated@@384))))
(let (($generated@@386 ($generated@@321 (type $generated@@384))))
 (=> (= (type $generated@@384) ($generated@@320 $generated@@386 $generated@@385)) (or (= $generated@@384 ($generated@@319 $generated@@386 $generated@@385)) (exists (($generated@@387 T@U) ) (!  (and (= (type $generated@@387) $generated@@385) ($generated@@0 ($generated@@84 ($generated@@381 $generated@@384) $generated@@387)))
 :no-pattern (type $generated@@387)
 :no-pattern ($generated $generated@@387)
 :no-pattern ($generated@@0 $generated@@387)
))))))
 :pattern ( ($generated@@381 $generated@@384))
)))
(assert (forall (($generated@@388 T@U) ) (! (let (($generated@@389 ($generated@@340 (type $generated@@388))))
(let (($generated@@390 ($generated@@339 (type $generated@@388))))
 (=> (= (type $generated@@388) ($generated@@338 $generated@@390 $generated@@389)) (or (= $generated@@388 ($generated@@337 $generated@@390 $generated@@389)) (exists (($generated@@391 T@U) ) (!  (and (= (type $generated@@391) $generated@@390) ($generated@@0 ($generated@@84 ($generated@@336 $generated@@388) $generated@@391)))
 :no-pattern (type $generated@@391)
 :no-pattern ($generated $generated@@391)
 :no-pattern ($generated@@0 $generated@@391)
))))))
 :pattern ( ($generated@@336 $generated@@388))
)))
(assert (forall (($generated@@393 T@U) ) (! (let (($generated@@394 ($generated@@340 (type $generated@@393))))
(= (type ($generated@@392 $generated@@393)) ($generated@@79 $generated@@394 $generated@@4)))
 :pattern ( ($generated@@392 $generated@@393))
)))
(assert (forall (($generated@@395 T@U) ) (! (let (($generated@@396 ($generated@@340 (type $generated@@395))))
(let (($generated@@397 ($generated@@339 (type $generated@@395))))
 (=> (= (type $generated@@395) ($generated@@338 $generated@@397 $generated@@396)) (or (= $generated@@395 ($generated@@337 $generated@@397 $generated@@396)) (exists (($generated@@398 T@U) ) (!  (and (= (type $generated@@398) $generated@@396) ($generated@@0 ($generated@@84 ($generated@@392 $generated@@395) $generated@@398)))
 :no-pattern (type $generated@@398)
 :no-pattern ($generated $generated@@398)
 :no-pattern ($generated@@0 $generated@@398)
))))))
 :pattern ( ($generated@@392 $generated@@395))
)))
(assert  (=> (<= 1 $generated@@227) (forall (($generated@@399 T@U) ($generated@@400 T@U) ($generated@@401 T@U) ($generated@@402 T@U) ($generated@@403 T@U) ($generated@@404 T@U) ) (!  (=> (and (and (and (and (and (and (= (type $generated@@399) $generated@@67) (= (type $generated@@400) $generated@@67)) (= (type $generated@@401) $generated@@67)) (= (type $generated@@402) $generated@@229)) (= (type $generated@@403) $generated@@80)) (= (type $generated@@404) $generated@@136)) (or ($generated@@230 $generated@@399 $generated@@400 $generated@@401 $generated@@403 $generated@@404) (and (not (= 1 $generated@@227)) (and (not (= $generated@@403 $generated@@231)) ($generated@@140 $generated@@403 ($generated@@232 $generated@@399 $generated@@400)))))) (and (and (=> (< 0 ($generated@@144 $generated@@404)) ($generated@@230 $generated@@399 $generated@@400 $generated@@401 $generated@@403 ($generated@@142 $generated@@404 ($generated@@143 1)))) (=> (=> (< 0 ($generated@@144 $generated@@404)) ($generated@@228 $generated@@399 $generated@@400 $generated@@401 $generated@@402 $generated@@403 ($generated@@142 $generated@@404 ($generated@@143 1)))) (=> (= ($generated@@261 0) ($generated@@144 $generated@@404)) (forall (($generated@@405 T@U) ) (!  (=> (and (= (type $generated@@405) $generated@@136) ($generated@@135 $generated@@405 $generated@@404)) ($generated@@230 $generated@@399 $generated@@400 $generated@@401 $generated@@403 $generated@@405))
 :pattern ( ($generated@@228 $generated@@399 $generated@@400 $generated@@401 $generated@@402 $generated@@403 $generated@@405))
))))) (= ($generated@@228 $generated@@399 $generated@@400 $generated@@401 ($generated@@294 $generated@@402) $generated@@403 $generated@@404)  (and (=> (< 0 ($generated@@144 $generated@@404)) ($generated@@228 $generated@@399 $generated@@400 $generated@@401 $generated@@402 $generated@@403 ($generated@@142 $generated@@404 ($generated@@143 1)))) (=> (= ($generated@@261 0) ($generated@@144 $generated@@404)) (forall (($generated@@406 T@U) ) (!  (=> (and (= (type $generated@@406) $generated@@136) ($generated@@135 $generated@@406 $generated@@404)) ($generated@@228 $generated@@399 $generated@@400 $generated@@401 $generated@@402 $generated@@403 $generated@@406))
 :pattern ( ($generated@@228 $generated@@399 $generated@@400 $generated@@401 $generated@@402 $generated@@403 $generated@@406))
)))))))
 :pattern ( ($generated@@228 $generated@@399 $generated@@400 $generated@@401 ($generated@@294 $generated@@402) $generated@@403 $generated@@404))
))))
(assert (forall (($generated@@407 T@U) ($generated@@408 T@U) ) (!  (=> (and (= (type $generated@@407) ($generated@@79 $generated@@136 $generated@@2)) (= (type $generated@@408) $generated@@67)) (= ($generated@@140 $generated@@407 ($generated@@166 $generated@@408)) (forall (($generated@@409 T@U) ) (!  (=> (and (= (type $generated@@409) $generated@@136) (< 0 ($generated ($generated@@84 $generated@@407 $generated@@409)))) ($generated@@242 $generated@@409 $generated@@408))
 :pattern ( ($generated@@84 $generated@@407 $generated@@409))
))))
 :pattern ( ($generated@@140 $generated@@407 ($generated@@166 $generated@@408)))
)))
(assert (forall (($generated@@410 T@U) ($generated@@411 T@U) ) (!  (=> (and (= (type $generated@@410) $generated@@136) (= (type $generated@@411) $generated@@136)) (or (or ($generated@@135 $generated@@410 $generated@@411) (= $generated@@410 $generated@@411)) ($generated@@135 $generated@@411 $generated@@410)))
 :pattern ( ($generated@@135 $generated@@410 $generated@@411) ($generated@@135 $generated@@411 $generated@@410))
)))
(assert (forall (($generated@@412 T@U) ($generated@@413 T@U) ($generated@@414 T@U) ) (!  (=> (and (and (= (type $generated@@412) ($generated@@79 $generated@@136 $generated@@4)) (= (type $generated@@413) $generated@@67)) (= (type $generated@@414) ($generated@@79 $generated@@80 $generated@@81))) (= ($generated@@77 $generated@@412 ($generated@@251 $generated@@413) $generated@@414) (forall (($generated@@415 T@U) ) (!  (=> (and (= (type $generated@@415) $generated@@136) ($generated@@0 ($generated@@84 $generated@@412 $generated@@415))) ($generated@@268 $generated@@415 $generated@@413 $generated@@414))
 :pattern ( ($generated@@84 $generated@@412 $generated@@415))
))))
 :pattern ( ($generated@@77 $generated@@412 ($generated@@251 $generated@@413) $generated@@414))
)))
(assert (forall (($generated@@416 T@U) ($generated@@417 T@U) ($generated@@418 T@U) ) (!  (=> (and (and (= (type $generated@@416) ($generated@@79 $generated@@136 $generated@@4)) (= (type $generated@@417) $generated@@67)) (= (type $generated@@418) ($generated@@79 $generated@@80 $generated@@81))) (= ($generated@@77 $generated@@416 ($generated@@256 $generated@@417) $generated@@418) (forall (($generated@@419 T@U) ) (!  (=> (and (= (type $generated@@419) $generated@@136) ($generated@@0 ($generated@@84 $generated@@416 $generated@@419))) ($generated@@268 $generated@@419 $generated@@417 $generated@@418))
 :pattern ( ($generated@@84 $generated@@416 $generated@@419))
))))
 :pattern ( ($generated@@77 $generated@@416 ($generated@@256 $generated@@417) $generated@@418))
)))
(assert (forall (($generated@@420 T@U) ) (! (let (($generated@@421 (type $generated@@420)))
(= ($generated ($generated@@84 ($generated@@313 $generated@@421) $generated@@420)) 0))
 :pattern ( (let (($generated@@421 (type $generated@@420)))
($generated@@84 ($generated@@313 $generated@@421) $generated@@420)))
)))
(assert  (and (and (forall (($generated@@425 T@U) ) (! (= (type ($generated@@422 $generated@@425)) ($generated@@79 $generated@@136 $generated@@4))
 :pattern ( ($generated@@422 $generated@@425))
)) (forall (($generated@@426 T@T) ($generated@@427 T@U) ) (! (= (type ($generated@@423 $generated@@426 $generated@@427)) $generated@@426)
 :pattern ( ($generated@@423 $generated@@426 $generated@@427))
))) (forall (($generated@@428 T@U) ) (! (let (($generated@@429 ($generated@@322 (type $generated@@428))))
(let (($generated@@430 ($generated@@321 (type $generated@@428))))
(= (type ($generated@@424 $generated@@428)) ($generated@@79 $generated@@430 $generated@@429))))
 :pattern ( ($generated@@424 $generated@@428))
))))
(assert (forall (($generated@@431 T@U) ($generated@@432 T@U) ) (!  (=> (and (= (type $generated@@431) ($generated@@320 $generated@@136 $generated@@136)) (= (type $generated@@432) $generated@@136)) (= ($generated@@0 ($generated@@84 ($generated@@422 $generated@@431) $generated@@432))  (and ($generated@@0 ($generated@@84 ($generated@@318 $generated@@431) ($generated@@160 ($generated@@423 $generated@@153 $generated@@432)))) (= ($generated@@84 ($generated@@424 $generated@@431) ($generated@@160 ($generated@@423 $generated@@153 $generated@@432))) ($generated@@161 ($generated@@423 $generated@@153 $generated@@432))))))
 :pattern ( ($generated@@84 ($generated@@422 $generated@@431) $generated@@432))
)))
(assert  (and (forall (($generated@@435 T@U) ) (! (= (type ($generated@@433 $generated@@435)) ($generated@@79 $generated@@136 $generated@@4))
 :pattern ( ($generated@@433 $generated@@435))
)) (forall (($generated@@436 T@U) ) (! (let (($generated@@437 ($generated@@340 (type $generated@@436))))
(let (($generated@@438 ($generated@@339 (type $generated@@436))))
(= (type ($generated@@434 $generated@@436)) ($generated@@79 $generated@@438 $generated@@437))))
 :pattern ( ($generated@@434 $generated@@436))
))))
(assert (forall (($generated@@439 T@U) ($generated@@440 T@U) ) (!  (=> (and (= (type $generated@@439) ($generated@@338 $generated@@136 $generated@@136)) (= (type $generated@@440) $generated@@136)) (= ($generated@@0 ($generated@@84 ($generated@@433 $generated@@439) $generated@@440))  (and ($generated@@0 ($generated@@84 ($generated@@336 $generated@@439) ($generated@@160 ($generated@@423 $generated@@153 $generated@@440)))) (= ($generated@@84 ($generated@@434 $generated@@439) ($generated@@160 ($generated@@423 $generated@@153 $generated@@440))) ($generated@@161 ($generated@@423 $generated@@153 $generated@@440))))))
 :pattern ( ($generated@@84 ($generated@@433 $generated@@439) $generated@@440))
)))
(assert (forall (($generated@@441 T@U) ($generated@@442 T@U) ) (! (let (($generated@@443 (type $generated@@442)))
(let (($generated@@444 ($generated@@321 (type $generated@@441))))
 (=> (= (type $generated@@441) ($generated@@320 $generated@@444 $generated@@443)) (= ($generated@@0 ($generated@@84 ($generated@@381 $generated@@441) $generated@@442)) (exists (($generated@@445 T@U) ) (!  (and (= (type $generated@@445) $generated@@444) (and ($generated@@0 ($generated@@84 ($generated@@318 $generated@@441) $generated@@445)) (= $generated@@442 ($generated@@84 ($generated@@424 $generated@@441) $generated@@445))))
 :pattern ( ($generated@@84 ($generated@@318 $generated@@441) $generated@@445))
 :pattern ( ($generated@@84 ($generated@@424 $generated@@441) $generated@@445))
))))))
 :pattern ( ($generated@@84 ($generated@@381 $generated@@441) $generated@@442))
)))
(assert (forall (($generated@@446 T@U) ($generated@@447 T@U) ) (! (let (($generated@@448 (type $generated@@447)))
(let (($generated@@449 ($generated@@339 (type $generated@@446))))
 (=> (= (type $generated@@446) ($generated@@338 $generated@@449 $generated@@448)) (= ($generated@@0 ($generated@@84 ($generated@@392 $generated@@446) $generated@@447)) (exists (($generated@@450 T@U) ) (!  (and (= (type $generated@@450) $generated@@449) (and ($generated@@0 ($generated@@84 ($generated@@336 $generated@@446) $generated@@450)) (= $generated@@447 ($generated@@84 ($generated@@434 $generated@@446) $generated@@450))))
 :pattern ( ($generated@@84 ($generated@@336 $generated@@446) $generated@@450))
 :pattern ( ($generated@@84 ($generated@@434 $generated@@446) $generated@@450))
))))))
 :pattern ( ($generated@@84 ($generated@@392 $generated@@446) $generated@@447))
)))
(assert (forall (($generated@@452 T@U) ($generated@@453 T@U) ) (! (= (type ($generated@@451 $generated@@452 $generated@@453)) $generated@@67)
 :pattern ( ($generated@@451 $generated@@452 $generated@@453))
)))
(assert (forall (($generated@@454 T@U) ($generated@@455 T@U) ($generated@@456 T@U) ($generated@@457 T@U) ) (!  (=> (and (and (and (= (type $generated@@454) ($generated@@320 $generated@@136 $generated@@136)) (= (type $generated@@455) $generated@@67)) (= (type $generated@@456) $generated@@67)) (= (type $generated@@457) ($generated@@79 $generated@@80 $generated@@81))) (= ($generated@@77 $generated@@454 ($generated@@451 $generated@@455 $generated@@456) $generated@@457) (forall (($generated@@458 T@U) ) (!  (=> (and (= (type $generated@@458) $generated@@136) ($generated@@0 ($generated@@84 ($generated@@318 $generated@@454) $generated@@458))) (and ($generated@@268 ($generated@@84 ($generated@@424 $generated@@454) $generated@@458) $generated@@456 $generated@@457) ($generated@@268 $generated@@458 $generated@@455 $generated@@457)))
 :pattern ( ($generated@@84 ($generated@@424 $generated@@454) $generated@@458))
 :pattern ( ($generated@@84 ($generated@@318 $generated@@454) $generated@@458))
))))
 :pattern ( ($generated@@77 $generated@@454 ($generated@@451 $generated@@455 $generated@@456) $generated@@457))
)))
(assert (forall (($generated@@460 T@U) ($generated@@461 T@U) ) (! (= (type ($generated@@459 $generated@@460 $generated@@461)) $generated@@67)
 :pattern ( ($generated@@459 $generated@@460 $generated@@461))
)))
(assert (forall (($generated@@462 T@U) ($generated@@463 T@U) ($generated@@464 T@U) ($generated@@465 T@U) ) (!  (=> (and (and (and (= (type $generated@@462) ($generated@@338 $generated@@136 $generated@@136)) (= (type $generated@@463) $generated@@67)) (= (type $generated@@464) $generated@@67)) (= (type $generated@@465) ($generated@@79 $generated@@80 $generated@@81))) (= ($generated@@77 $generated@@462 ($generated@@459 $generated@@463 $generated@@464) $generated@@465) (forall (($generated@@466 T@U) ) (!  (=> (and (= (type $generated@@466) $generated@@136) ($generated@@0 ($generated@@84 ($generated@@336 $generated@@462) $generated@@466))) (and ($generated@@268 ($generated@@84 ($generated@@434 $generated@@462) $generated@@466) $generated@@464 $generated@@465) ($generated@@268 $generated@@466 $generated@@463 $generated@@465)))
 :pattern ( ($generated@@84 ($generated@@434 $generated@@462) $generated@@466))
 :pattern ( ($generated@@84 ($generated@@336 $generated@@462) $generated@@466))
))))
 :pattern ( ($generated@@77 $generated@@462 ($generated@@459 $generated@@463 $generated@@464) $generated@@465))
)))
(assert (forall (($generated@@468 T@T) ) (! (= (type ($generated@@467 $generated@@468)) ($generated@@79 $generated@@468 $generated@@4))
 :pattern ( ($generated@@467 $generated@@468))
)))
(assert (forall (($generated@@469 T@U) ) (! (let (($generated@@470 ($generated@@340 (type $generated@@469))))
(let (($generated@@471 ($generated@@339 (type $generated@@469))))
 (=> (= (type $generated@@469) ($generated@@338 $generated@@471 $generated@@470)) (= (= $generated@@469 ($generated@@337 $generated@@471 $generated@@470)) (= ($generated@@336 $generated@@469) ($generated@@467 $generated@@471))))))
 :pattern ( ($generated@@336 $generated@@469))
)))
(assert (forall (($generated@@472 T@U) ) (! (let (($generated@@473 ($generated@@340 (type $generated@@472))))
(let (($generated@@474 ($generated@@339 (type $generated@@472))))
 (=> (= (type $generated@@472) ($generated@@338 $generated@@474 $generated@@473)) (= (= $generated@@472 ($generated@@337 $generated@@474 $generated@@473)) (= ($generated@@392 $generated@@472) ($generated@@467 $generated@@473))))))
 :pattern ( ($generated@@392 $generated@@472))
)))
(assert (forall (($generated@@475 T@U) ) (! (let (($generated@@476 ($generated@@340 (type $generated@@475))))
(let (($generated@@477 ($generated@@339 (type $generated@@475))))
 (=> (= (type $generated@@475) ($generated@@338 $generated@@477 $generated@@476)) (= (= $generated@@475 ($generated@@337 $generated@@477 $generated@@476)) (= ($generated@@433 $generated@@475) ($generated@@467 $generated@@136))))))
 :pattern ( ($generated@@433 $generated@@475))
)))
(assert (forall (($generated@@478 T@U) ) (! (let (($generated@@479 ($generated@@322 (type $generated@@478))))
(let (($generated@@480 ($generated@@321 (type $generated@@478))))
 (=> (= (type $generated@@478) ($generated@@320 $generated@@480 $generated@@479)) (or (= $generated@@478 ($generated@@319 $generated@@480 $generated@@479)) (exists (($generated@@481 T@U) ($generated@@482 T@U) ) (!  (and (and (= (type $generated@@481) $generated@@136) (= (type $generated@@482) $generated@@136)) ($generated@@0 ($generated@@84 ($generated@@422 $generated@@478) ($generated@@302 ($generated@@241 $generated@@481 $generated@@482)))))
 :no-pattern (type $generated@@481)
 :no-pattern (type $generated@@482)
 :no-pattern ($generated $generated@@481)
 :no-pattern ($generated@@0 $generated@@481)
 :no-pattern ($generated $generated@@482)
 :no-pattern ($generated@@0 $generated@@482)
))))))
 :pattern ( ($generated@@422 $generated@@478))
)))
(assert (forall (($generated@@483 T@U) ) (! (let (($generated@@484 ($generated@@340 (type $generated@@483))))
(let (($generated@@485 ($generated@@339 (type $generated@@483))))
 (=> (= (type $generated@@483) ($generated@@338 $generated@@485 $generated@@484)) (or (= $generated@@483 ($generated@@337 $generated@@485 $generated@@484)) (exists (($generated@@486 T@U) ($generated@@487 T@U) ) (!  (and (and (= (type $generated@@486) $generated@@136) (= (type $generated@@487) $generated@@136)) ($generated@@0 ($generated@@84 ($generated@@433 $generated@@483) ($generated@@302 ($generated@@241 $generated@@486 $generated@@487)))))
 :no-pattern (type $generated@@486)
 :no-pattern (type $generated@@487)
 :no-pattern ($generated $generated@@486)
 :no-pattern ($generated@@0 $generated@@486)
 :no-pattern ($generated $generated@@487)
 :no-pattern ($generated@@0 $generated@@487)
))))))
 :pattern ( ($generated@@433 $generated@@483))
)))
(assert (forall (($generated@@488 T@U) ) (!  (=> (and (= (type $generated@@488) $generated@@136) ($generated@@242 $generated@@488 $generated@@46)) (and (= ($generated@@302 ($generated@@423 $generated@@2 $generated@@488)) $generated@@488) ($generated@@140 ($generated@@423 $generated@@2 $generated@@488) $generated@@46)))
 :pattern ( ($generated@@242 $generated@@488 $generated@@46))
)))
(assert (forall (($generated@@489 T@U) ) (!  (=> (and (= (type $generated@@489) $generated@@136) ($generated@@242 $generated@@489 $generated@@47)) (and (= ($generated@@302 ($generated@@423 $generated@@3 $generated@@489)) $generated@@489) ($generated@@140 ($generated@@423 $generated@@3 $generated@@489) $generated@@47)))
 :pattern ( ($generated@@242 $generated@@489 $generated@@47))
)))
(assert (forall (($generated@@490 T@U) ) (!  (=> (and (= (type $generated@@490) $generated@@136) ($generated@@242 $generated@@490 $generated@@44)) (and (= ($generated@@302 ($generated@@423 $generated@@4 $generated@@490)) $generated@@490) ($generated@@140 ($generated@@423 $generated@@4 $generated@@490) $generated@@44)))
 :pattern ( ($generated@@242 $generated@@490 $generated@@44))
)))
(assert (= ($generated@@1 $generated@@491) 21))
(assert (forall (($generated@@492 T@U) ) (!  (=> (and (= (type $generated@@492) $generated@@136) ($generated@@242 $generated@@492 $generated@@45)) (and (= ($generated@@302 ($generated@@423 $generated@@491 $generated@@492)) $generated@@492) ($generated@@140 ($generated@@423 $generated@@491 $generated@@492) $generated@@45)))
 :pattern ( ($generated@@242 $generated@@492 $generated@@45))
)))
(assert (forall (($generated@@493 T@U) ($generated@@494 T@U) ) (!  (=> (= (type $generated@@494) $generated@@67) (= ($generated@@242 ($generated@@302 $generated@@493) $generated@@494) ($generated@@140 $generated@@493 $generated@@494)))
 :pattern ( ($generated@@242 ($generated@@302 $generated@@493) $generated@@494))
)))
(assert (forall (($generated@@495 T@U) ) (!  (=> (= (type $generated@@495) $generated@@136) (<= 0 ($generated@@144 $generated@@495)))
 :pattern ( ($generated@@144 $generated@@495))
)))
(assert (forall (($generated@@496 T@U) ) (! (let (($generated@@497 ($generated@@82 (type $generated@@496))))
 (=> (= (type $generated@@496) ($generated@@79 $generated@@497 $generated@@2)) (<= 0 ($generated@@312 $generated@@496))))
 :pattern ( ($generated@@312 $generated@@496))
)))
(assert (forall (($generated@@498 T@U) ) (! (let (($generated@@499 ($generated@@283 (type $generated@@498))))
 (=> (= (type $generated@@498) ($generated@@282 $generated@@499)) (<= 0 ($generated@@281 $generated@@498))))
 :pattern ( ($generated@@281 $generated@@498))
)))
(assert (forall (($generated@@501 T@U) ) (! (= (type ($generated@@500 $generated@@501)) $generated@@67)
 :pattern ( ($generated@@500 $generated@@501))
)))
(assert (forall (($generated@@502 T@U) ($generated@@503 T@U) ) (!  (=> (and (= (type $generated@@502) $generated@@67) (= (type $generated@@503) $generated@@67)) (= ($generated@@500 ($generated@@451 $generated@@502 $generated@@503)) $generated@@502))
 :pattern ( ($generated@@451 $generated@@502 $generated@@503))
)))
(assert (forall (($generated@@505 T@U) ) (! (= (type ($generated@@504 $generated@@505)) $generated@@67)
 :pattern ( ($generated@@504 $generated@@505))
)))
(assert (forall (($generated@@506 T@U) ($generated@@507 T@U) ) (!  (=> (and (= (type $generated@@506) $generated@@67) (= (type $generated@@507) $generated@@67)) (= ($generated@@504 ($generated@@451 $generated@@506 $generated@@507)) $generated@@507))
 :pattern ( ($generated@@451 $generated@@506 $generated@@507))
)))
(assert (forall (($generated@@508 T@U) ($generated@@509 T@U) ) (!  (=> (and (= (type $generated@@508) $generated@@67) (= (type $generated@@509) $generated@@67)) (= ($generated@@75 ($generated@@451 $generated@@508 $generated@@509)) $generated@@58))
 :pattern ( ($generated@@451 $generated@@508 $generated@@509))
)))
(assert (forall (($generated@@511 T@U) ) (! (= (type ($generated@@510 $generated@@511)) $generated@@67)
 :pattern ( ($generated@@510 $generated@@511))
)))
(assert (forall (($generated@@512 T@U) ($generated@@513 T@U) ) (!  (=> (and (= (type $generated@@512) $generated@@67) (= (type $generated@@513) $generated@@67)) (= ($generated@@510 ($generated@@459 $generated@@512 $generated@@513)) $generated@@512))
 :pattern ( ($generated@@459 $generated@@512 $generated@@513))
)))
(assert (forall (($generated@@515 T@U) ) (! (= (type ($generated@@514 $generated@@515)) $generated@@67)
 :pattern ( ($generated@@514 $generated@@515))
)))
(assert (forall (($generated@@516 T@U) ($generated@@517 T@U) ) (!  (=> (and (= (type $generated@@516) $generated@@67) (= (type $generated@@517) $generated@@67)) (= ($generated@@514 ($generated@@459 $generated@@516 $generated@@517)) $generated@@517))
 :pattern ( ($generated@@459 $generated@@516 $generated@@517))
)))
(assert (forall (($generated@@518 T@U) ($generated@@519 T@U) ) (!  (=> (and (= (type $generated@@518) $generated@@67) (= (type $generated@@519) $generated@@67)) (= ($generated@@75 ($generated@@459 $generated@@518 $generated@@519)) $generated@@59))
 :pattern ( ($generated@@459 $generated@@518 $generated@@519))
)))
(assert (forall (($generated@@520 T@U) ($generated@@521 T@U) ) (!  (=> (and (= (type $generated@@520) $generated@@136) (= (type $generated@@521) $generated@@136)) (= ($generated@@274 ($generated@@241 $generated@@520 $generated@@521)) $generated@@61))
 :pattern ( ($generated@@241 $generated@@520 $generated@@521))
)))
(assert (forall (($generated@@523 T@U) ) (! (= (type ($generated@@522 $generated@@523)) $generated@@67)
 :pattern ( ($generated@@522 $generated@@523))
)))
(assert (forall (($generated@@524 T@U) ($generated@@525 T@U) ) (!  (=> (and (= (type $generated@@524) $generated@@67) (= (type $generated@@525) $generated@@67)) (= ($generated@@522 ($generated@@152 $generated@@524 $generated@@525)) $generated@@524))
 :pattern ( ($generated@@152 $generated@@524 $generated@@525))
)))
(assert (forall (($generated@@527 T@U) ) (! (= (type ($generated@@526 $generated@@527)) $generated@@67)
 :pattern ( ($generated@@526 $generated@@527))
)))
(assert (forall (($generated@@528 T@U) ($generated@@529 T@U) ) (!  (=> (and (= (type $generated@@528) $generated@@67) (= (type $generated@@529) $generated@@67)) (= ($generated@@526 ($generated@@152 $generated@@528 $generated@@529)) $generated@@529))
 :pattern ( ($generated@@152 $generated@@528 $generated@@529))
)))
(assert (forall (($generated@@530 T@U) ($generated@@531 T@U) ) (!  (=> (and (= (type $generated@@530) $generated@@136) (= (type $generated@@531) $generated@@136)) (= ($generated@@160 ($generated@@241 $generated@@530 $generated@@531)) $generated@@530))
 :pattern ( ($generated@@241 $generated@@530 $generated@@531))
)))
(assert (forall (($generated@@532 T@U) ($generated@@533 T@U) ) (!  (=> (and (= (type $generated@@532) $generated@@136) (= (type $generated@@533) $generated@@136)) (= ($generated@@161 ($generated@@241 $generated@@532 $generated@@533)) $generated@@533))
 :pattern ( ($generated@@241 $generated@@532 $generated@@533))
)))
(assert (forall (($generated@@535 T@U) ) (! (= (type ($generated@@534 $generated@@535)) $generated@@67)
 :pattern ( ($generated@@534 $generated@@535))
)))
(assert (forall (($generated@@536 T@U) ($generated@@537 T@U) ) (!  (=> (and (= (type $generated@@536) $generated@@67) (= (type $generated@@537) $generated@@67)) (= ($generated@@534 ($generated@@288 $generated@@536 $generated@@537)) $generated@@536))
 :pattern ( ($generated@@288 $generated@@536 $generated@@537))
)))
(assert (forall (($generated@@539 T@U) ) (! (= (type ($generated@@538 $generated@@539)) $generated@@67)
 :pattern ( ($generated@@538 $generated@@539))
)))
(assert (forall (($generated@@540 T@U) ($generated@@541 T@U) ) (!  (=> (and (= (type $generated@@540) $generated@@67) (= (type $generated@@541) $generated@@67)) (= ($generated@@538 ($generated@@288 $generated@@540 $generated@@541)) $generated@@541))
 :pattern ( ($generated@@288 $generated@@540 $generated@@541))
)))
(assert (forall (($generated@@543 T@U) ) (! (= (type ($generated@@542 $generated@@543)) $generated@@67)
 :pattern ( ($generated@@542 $generated@@543))
)))
(assert (forall (($generated@@544 T@U) ($generated@@545 T@U) ) (!  (=> (and (= (type $generated@@544) $generated@@67) (= (type $generated@@545) $generated@@67)) (= ($generated@@542 ($generated@@232 $generated@@544 $generated@@545)) $generated@@544))
 :pattern ( ($generated@@232 $generated@@544 $generated@@545))
)))
(assert (forall (($generated@@547 T@U) ) (! (= (type ($generated@@546 $generated@@547)) $generated@@67)
 :pattern ( ($generated@@546 $generated@@547))
)))
(assert (forall (($generated@@548 T@U) ($generated@@549 T@U) ) (!  (=> (and (= (type $generated@@548) $generated@@67) (= (type $generated@@549) $generated@@67)) (= ($generated@@546 ($generated@@232 $generated@@548 $generated@@549)) $generated@@549))
 :pattern ( ($generated@@232 $generated@@548 $generated@@549))
)))
(assert  (and (forall (($generated@@552 T@U) ) (! (= (type ($generated@@550 $generated@@552)) $generated@@67)
 :pattern ( ($generated@@550 $generated@@552))
)) (forall (($generated@@553 T@U) ($generated@@554 Int) ) (! (let (($generated@@555 ($generated@@283 (type $generated@@553))))
(= (type ($generated@@551 $generated@@553 $generated@@554)) $generated@@555))
 :pattern ( ($generated@@551 $generated@@553 $generated@@554))
))))
(assert (forall (($generated@@556 T@U) ($generated@@557 T@U) ($generated@@558 T@U) ) (!  (=> (and (and (= (type $generated@@556) ($generated@@282 $generated@@136)) (= (type $generated@@557) $generated@@67)) (= (type $generated@@558) ($generated@@79 $generated@@80 $generated@@81))) (= ($generated@@77 $generated@@556 ($generated@@550 $generated@@557) $generated@@558) (forall (($generated@@559 Int) ) (!  (=> (and (<= 0 $generated@@559) (< $generated@@559 ($generated@@281 $generated@@556))) ($generated@@268 ($generated@@551 $generated@@556 $generated@@559) $generated@@557 $generated@@558))
 :pattern ( ($generated@@551 $generated@@556 $generated@@559))
))))
 :pattern ( ($generated@@77 $generated@@556 ($generated@@550 $generated@@557) $generated@@558))
)))
(assert (forall (($generated@@561 Int) ) (! (= ($generated@@560 ($generated@@78 $generated@@561)) $generated@@561)
 :pattern ( ($generated@@78 $generated@@561))
)))
(assert (forall (($generated@@563 T@U) ) (! (= (type ($generated@@562 $generated@@563)) $generated@@67)
 :pattern ( ($generated@@562 $generated@@563))
)))
(assert (forall (($generated@@564 T@U) ) (!  (=> (= (type $generated@@564) $generated@@67) (= ($generated@@562 ($generated@@251 $generated@@564)) $generated@@564))
 :pattern ( ($generated@@251 $generated@@564))
)))
(assert (forall (($generated@@565 T@U) ) (!  (=> (= (type $generated@@565) $generated@@67) (= ($generated@@75 ($generated@@251 $generated@@565)) $generated@@54))
 :pattern ( ($generated@@251 $generated@@565))
)))
(assert (forall (($generated@@567 T@U) ) (! (= (type ($generated@@566 $generated@@567)) $generated@@67)
 :pattern ( ($generated@@566 $generated@@567))
)))
(assert (forall (($generated@@568 T@U) ) (!  (=> (= (type $generated@@568) $generated@@67) (= ($generated@@566 ($generated@@256 $generated@@568)) $generated@@568))
 :pattern ( ($generated@@256 $generated@@568))
)))
(assert (forall (($generated@@569 T@U) ) (!  (=> (= (type $generated@@569) $generated@@67) (= ($generated@@75 ($generated@@256 $generated@@569)) $generated@@55))
 :pattern ( ($generated@@256 $generated@@569))
)))
(assert (forall (($generated@@571 T@U) ) (! (= (type ($generated@@570 $generated@@571)) $generated@@67)
 :pattern ( ($generated@@570 $generated@@571))
)))
(assert (forall (($generated@@572 T@U) ) (!  (=> (= (type $generated@@572) $generated@@67) (= ($generated@@570 ($generated@@166 $generated@@572)) $generated@@572))
 :pattern ( ($generated@@166 $generated@@572))
)))
(assert (forall (($generated@@573 T@U) ) (!  (=> (= (type $generated@@573) $generated@@67) (= ($generated@@75 ($generated@@166 $generated@@573)) $generated@@56))
 :pattern ( ($generated@@166 $generated@@573))
)))
(assert (forall (($generated@@575 T@U) ) (! (= (type ($generated@@574 $generated@@575)) $generated@@67)
 :pattern ( ($generated@@574 $generated@@575))
)))
(assert (forall (($generated@@576 T@U) ) (!  (=> (= (type $generated@@576) $generated@@67) (= ($generated@@574 ($generated@@550 $generated@@576)) $generated@@576))
 :pattern ( ($generated@@550 $generated@@576))
)))
(assert (forall (($generated@@577 T@U) ) (!  (=> (= (type $generated@@577) $generated@@67) (= ($generated@@75 ($generated@@550 $generated@@577)) $generated@@57))
 :pattern ( ($generated@@550 $generated@@577))
)))
(assert (forall (($generated@@578 T@U) ) (! (let (($generated@@579 (type $generated@@578)))
(= ($generated@@423 $generated@@579 ($generated@@302 $generated@@578)) $generated@@578))
 :pattern ( ($generated@@302 $generated@@578))
)))
(assert (forall (($generated@@580 T@U) ($generated@@581 T@U) ($generated@@582 T@U) ) (!  (=> (and (and (= (type $generated@@580) ($generated@@320 $generated@@136 $generated@@136)) (= (type $generated@@581) $generated@@67)) (= (type $generated@@582) $generated@@67)) (= ($generated@@140 $generated@@580 ($generated@@451 $generated@@581 $generated@@582)) (forall (($generated@@583 T@U) ) (!  (=> (and (= (type $generated@@583) $generated@@136) ($generated@@0 ($generated@@84 ($generated@@318 $generated@@580) $generated@@583))) (and ($generated@@242 ($generated@@84 ($generated@@424 $generated@@580) $generated@@583) $generated@@582) ($generated@@242 $generated@@583 $generated@@581)))
 :pattern ( ($generated@@84 ($generated@@424 $generated@@580) $generated@@583))
 :pattern ( ($generated@@84 ($generated@@318 $generated@@580) $generated@@583))
))))
 :pattern ( ($generated@@140 $generated@@580 ($generated@@451 $generated@@581 $generated@@582)))
)))
(assert (forall (($generated@@584 T@U) ($generated@@585 T@U) ($generated@@586 T@U) ) (!  (=> (and (and (= (type $generated@@584) ($generated@@338 $generated@@136 $generated@@136)) (= (type $generated@@585) $generated@@67)) (= (type $generated@@586) $generated@@67)) (= ($generated@@140 $generated@@584 ($generated@@459 $generated@@585 $generated@@586)) (forall (($generated@@587 T@U) ) (!  (=> (and (= (type $generated@@587) $generated@@136) ($generated@@0 ($generated@@84 ($generated@@336 $generated@@584) $generated@@587))) (and ($generated@@242 ($generated@@84 ($generated@@434 $generated@@584) $generated@@587) $generated@@586) ($generated@@242 $generated@@587 $generated@@585)))
 :pattern ( ($generated@@84 ($generated@@434 $generated@@584) $generated@@587))
 :pattern ( ($generated@@84 ($generated@@336 $generated@@584) $generated@@587))
))))
 :pattern ( ($generated@@140 $generated@@584 ($generated@@459 $generated@@585 $generated@@586)))
)))
(assert (forall (($generated@@588 T@U) ($generated@@589 T@U) ) (!  (=> (and (= (type $generated@@588) $generated@@136) (= (type $generated@@589) $generated@@136)) (and (and (and (=> ($generated@@135 $generated@@588 $generated@@589) (not (= $generated@@588 $generated@@589))) (=> (and ($generated@@358 $generated@@588) (not ($generated@@358 $generated@@589))) ($generated@@135 $generated@@588 $generated@@589))) (=> (and ($generated@@358 $generated@@588) ($generated@@358 $generated@@589)) (= ($generated@@135 $generated@@588 $generated@@589) (< ($generated@@144 $generated@@588) ($generated@@144 $generated@@589))))) (=> (and ($generated@@135 $generated@@588 $generated@@589) ($generated@@358 $generated@@589)) ($generated@@358 $generated@@588))))
 :pattern ( ($generated@@135 $generated@@588 $generated@@589))
)))
(assert (forall (($generated@@592 T@U) ($generated@@593 T@U) ) (!  (=> (and (= (type $generated@@592) $generated@@136) (= (type $generated@@593) $generated@@136)) (< ($generated@@590 $generated@@592) ($generated@@591 ($generated@@241 $generated@@592 $generated@@593))))
 :pattern ( ($generated@@241 $generated@@592 $generated@@593))
)))
(assert (forall (($generated@@594 T@U) ($generated@@595 T@U) ) (!  (=> (and (= (type $generated@@594) $generated@@136) (= (type $generated@@595) $generated@@136)) (< ($generated@@590 $generated@@595) ($generated@@591 ($generated@@241 $generated@@594 $generated@@595))))
 :pattern ( ($generated@@241 $generated@@594 $generated@@595))
)))
(assert (forall (($generated@@596 T@U) ($generated@@597 T@U) ($generated@@598 T@U) ) (!  (=> (and (and (and (= (type $generated@@596) $generated@@136) (= (type $generated@@597) $generated@@67)) (= (type $generated@@598) $generated@@67)) ($generated@@242 $generated@@596 ($generated@@451 $generated@@597 $generated@@598))) (and (= ($generated@@302 ($generated@@423 ($generated@@320 $generated@@136 $generated@@136) $generated@@596)) $generated@@596) ($generated@@140 ($generated@@423 ($generated@@320 $generated@@136 $generated@@136) $generated@@596) ($generated@@451 $generated@@597 $generated@@598))))
 :pattern ( ($generated@@242 $generated@@596 ($generated@@451 $generated@@597 $generated@@598)))
)))
(assert (forall (($generated@@599 T@U) ($generated@@600 T@U) ($generated@@601 T@U) ) (!  (=> (and (and (and (= (type $generated@@599) $generated@@136) (= (type $generated@@600) $generated@@67)) (= (type $generated@@601) $generated@@67)) ($generated@@242 $generated@@599 ($generated@@459 $generated@@600 $generated@@601))) (and (= ($generated@@302 ($generated@@423 ($generated@@338 $generated@@136 $generated@@136) $generated@@599)) $generated@@599) ($generated@@140 ($generated@@423 ($generated@@338 $generated@@136 $generated@@136) $generated@@599) ($generated@@459 $generated@@600 $generated@@601))))
 :pattern ( ($generated@@242 $generated@@599 ($generated@@459 $generated@@600 $generated@@601)))
)))
(assert (forall (($generated@@602 T@U) ($generated@@603 T@U) ($generated@@604 T@U) ) (!  (=> (and (and (and (= (type $generated@@602) $generated@@67) (= (type $generated@@603) $generated@@67)) (= (type $generated@@604) $generated@@136)) ($generated@@242 $generated@@604 ($generated@@152 $generated@@602 $generated@@603))) (and (= ($generated@@302 ($generated@@423 $generated@@153 $generated@@604)) $generated@@604) ($generated@@140 ($generated@@423 $generated@@153 $generated@@604) ($generated@@152 $generated@@602 $generated@@603))))
 :pattern ( ($generated@@242 $generated@@604 ($generated@@152 $generated@@602 $generated@@603)))
)))
(assert (forall (($generated@@605 T@U) ($generated@@606 T@U) ($generated@@607 T@U) ) (!  (=> (and (and (and (= (type $generated@@605) $generated@@67) (= (type $generated@@606) $generated@@67)) (= (type $generated@@607) $generated@@136)) ($generated@@242 $generated@@607 ($generated@@288 $generated@@605 $generated@@606))) (and (= ($generated@@302 ($generated@@423 $generated@@80 $generated@@607)) $generated@@607) ($generated@@140 ($generated@@423 $generated@@80 $generated@@607) ($generated@@288 $generated@@605 $generated@@606))))
 :pattern ( ($generated@@242 $generated@@607 ($generated@@288 $generated@@605 $generated@@606)))
)))
(assert (forall (($generated@@608 T@U) ($generated@@609 T@U) ($generated@@610 T@U) ) (!  (=> (and (and (and (= (type $generated@@608) $generated@@67) (= (type $generated@@609) $generated@@67)) (= (type $generated@@610) $generated@@136)) ($generated@@242 $generated@@610 ($generated@@232 $generated@@608 $generated@@609))) (and (= ($generated@@302 ($generated@@423 $generated@@80 $generated@@610)) $generated@@610) ($generated@@140 ($generated@@423 $generated@@80 $generated@@610) ($generated@@232 $generated@@608 $generated@@609))))
 :pattern ( ($generated@@242 $generated@@610 ($generated@@232 $generated@@608 $generated@@609)))
)))
(assert (forall (($generated@@611 T@U) ) (! (let (($generated@@612 (type $generated@@611)))
 (not ($generated@@0 ($generated@@84 ($generated@@467 $generated@@612) $generated@@611))))
 :pattern ( (let (($generated@@612 (type $generated@@611)))
($generated@@84 ($generated@@467 $generated@@612) $generated@@611)))
)))
(assert (forall (($generated@@614 T@U) ) (! (= (type ($generated@@613 $generated@@614)) $generated@@72)
 :pattern ( ($generated@@613 $generated@@614))
)))
(assert (forall (($generated@@615 T@U) ($generated@@616 T@U) ) (!  (=> (and (= (type $generated@@615) $generated@@67) (= (type $generated@@616) $generated@@67)) (and (= ($generated@@75 ($generated@@152 $generated@@615 $generated@@616)) $generated@@62) (= ($generated@@613 ($generated@@152 $generated@@615 $generated@@616)) $generated@@65)))
 :pattern ( ($generated@@152 $generated@@615 $generated@@616))
)))
(assert (forall (($generated@@617 T@U) ($generated@@618 T@U) ) (!  (=> (and (= (type $generated@@617) $generated@@67) (= (type $generated@@618) $generated@@67)) (and (= ($generated@@75 ($generated@@288 $generated@@617 $generated@@618)) $generated@@63) (= ($generated@@613 ($generated@@288 $generated@@617 $generated@@618)) $generated@@66)))
 :pattern ( ($generated@@288 $generated@@617 $generated@@618))
)))
(assert (forall (($generated@@619 T@U) ($generated@@620 T@U) ) (!  (=> (and (= (type $generated@@619) $generated@@67) (= (type $generated@@620) $generated@@67)) (and (= ($generated@@75 ($generated@@232 $generated@@619 $generated@@620)) $generated@@64) (= ($generated@@613 ($generated@@232 $generated@@619 $generated@@620)) $generated@@66)))
 :pattern ( ($generated@@232 $generated@@619 $generated@@620))
)))
(assert (forall (($generated@@621 T@U) ) (!  (=> (= (type $generated@@621) $generated@@153) (= ($generated@@590 ($generated@@302 $generated@@621)) ($generated@@591 $generated@@621)))
 :pattern ( ($generated@@590 ($generated@@302 $generated@@621)))
)))
(assert (forall (($generated@@622 T@U) ) (!  (=> (and (= (type $generated@@622) $generated@@136) ($generated@@242 $generated@@622 ($generated@@78 0))) (and (= ($generated@@302 ($generated@@423 $generated@@2 $generated@@622)) $generated@@622) ($generated@@140 ($generated@@423 ($generated@@79 $generated@@136 $generated@@4) $generated@@622) ($generated@@78 0))))
 :pattern ( ($generated@@242 $generated@@622 ($generated@@78 0)))
)))
(assert (forall (($generated@@623 T@U) ($generated@@624 T@U) ) (!  (=> (and (and (= (type $generated@@623) $generated@@136) (= (type $generated@@624) $generated@@67)) ($generated@@242 $generated@@623 ($generated@@251 $generated@@624))) (and (= ($generated@@302 ($generated@@423 ($generated@@79 $generated@@136 $generated@@4) $generated@@623)) $generated@@623) ($generated@@140 ($generated@@423 ($generated@@79 $generated@@136 $generated@@4) $generated@@623) ($generated@@251 $generated@@624))))
 :pattern ( ($generated@@242 $generated@@623 ($generated@@251 $generated@@624)))
)))
(assert (forall (($generated@@625 T@U) ($generated@@626 T@U) ) (!  (=> (and (and (= (type $generated@@625) $generated@@136) (= (type $generated@@626) $generated@@67)) ($generated@@242 $generated@@625 ($generated@@256 $generated@@626))) (and (= ($generated@@302 ($generated@@423 ($generated@@79 $generated@@136 $generated@@4) $generated@@625)) $generated@@625) ($generated@@140 ($generated@@423 ($generated@@79 $generated@@136 $generated@@4) $generated@@625) ($generated@@256 $generated@@626))))
 :pattern ( ($generated@@242 $generated@@625 ($generated@@256 $generated@@626)))
)))
(assert (forall (($generated@@627 T@U) ($generated@@628 T@U) ) (!  (=> (and (and (= (type $generated@@627) $generated@@136) (= (type $generated@@628) $generated@@67)) ($generated@@242 $generated@@627 ($generated@@166 $generated@@628))) (and (= ($generated@@302 ($generated@@423 ($generated@@79 $generated@@136 $generated@@2) $generated@@627)) $generated@@627) ($generated@@140 ($generated@@423 ($generated@@79 $generated@@136 $generated@@2) $generated@@627) ($generated@@166 $generated@@628))))
 :pattern ( ($generated@@242 $generated@@627 ($generated@@166 $generated@@628)))
)))
(assert (forall (($generated@@629 T@U) ($generated@@630 T@U) ) (!  (=> (and (and (= (type $generated@@629) $generated@@136) (= (type $generated@@630) $generated@@67)) ($generated@@242 $generated@@629 ($generated@@550 $generated@@630))) (and (= ($generated@@302 ($generated@@423 ($generated@@282 $generated@@136) $generated@@629)) $generated@@629) ($generated@@140 ($generated@@423 ($generated@@282 $generated@@136) $generated@@629) ($generated@@550 $generated@@630))))
 :pattern ( ($generated@@242 $generated@@629 ($generated@@550 $generated@@630)))
)))
(assert (forall (($generated@@631 T@U) ) (!  (=> (and (= (type $generated@@631) $generated@@136) ($generated@@358 $generated@@631)) (= $generated@@631 ($generated@@143 ($generated@@144 $generated@@631))))
 :pattern ( ($generated@@144 $generated@@631))
 :pattern ( ($generated@@358 $generated@@631))
)))
(assert  (=> (<= 1 $generated@@227) (forall (($generated@@632 T@U) ($generated@@633 T@U) ($generated@@634 T@U) ($generated@@635 T@U) ($generated@@636 T@U) ($generated@@637 T@U) ) (!  (=> (and (and (and (and (and (and (= (type $generated@@632) $generated@@67) (= (type $generated@@633) $generated@@67)) (= (type $generated@@634) $generated@@67)) (= (type $generated@@635) $generated@@229)) (= (type $generated@@636) $generated@@80)) (= (type $generated@@637) $generated@@136)) (or ($generated@@230 $generated@@632 $generated@@633 $generated@@634 ($generated@@263 $generated@@636) ($generated@@263 $generated@@637)) (and (not (= 1 $generated@@227)) (and (not (= $generated@@636 $generated@@231)) ($generated@@140 $generated@@636 ($generated@@232 $generated@@632 $generated@@633)))))) (and (and (=> (< 0 ($generated@@144 $generated@@637)) ($generated@@230 $generated@@632 $generated@@633 $generated@@634 ($generated@@263 $generated@@636) ($generated@@142 $generated@@637 ($generated@@143 1)))) (=> (=> (< 0 ($generated@@144 $generated@@637)) ($generated@@228 $generated@@632 $generated@@633 $generated@@634 ($generated@@294 $generated@@635) ($generated@@263 $generated@@636) ($generated@@142 $generated@@637 ($generated@@143 1)))) (=> (= ($generated@@261 0) ($generated@@144 $generated@@637)) (forall (($generated@@638 T@U) ) (!  (=> (and (= (type $generated@@638) $generated@@136) ($generated@@135 $generated@@638 $generated@@637)) ($generated@@230 $generated@@632 $generated@@633 $generated@@634 $generated@@636 $generated@@638))
 :pattern ( ($generated@@228 $generated@@632 $generated@@633 $generated@@634 ($generated@@294 $generated@@635) $generated@@636 $generated@@638))
))))) (= ($generated@@228 $generated@@632 $generated@@633 $generated@@634 ($generated@@294 $generated@@635) ($generated@@263 $generated@@636) ($generated@@263 $generated@@637))  (and (=> (< 0 ($generated@@144 $generated@@637)) ($generated@@228 $generated@@632 $generated@@633 $generated@@634 ($generated@@294 $generated@@635) ($generated@@263 $generated@@636) ($generated@@142 $generated@@637 ($generated@@143 1)))) (=> (= ($generated@@261 0) ($generated@@144 $generated@@637)) (forall (($generated@@639 T@U) ) (!  (=> (and (= (type $generated@@639) $generated@@136) ($generated@@135 $generated@@639 $generated@@637)) ($generated@@228 $generated@@632 $generated@@633 $generated@@634 ($generated@@294 $generated@@635) $generated@@636 $generated@@639))
 :pattern ( ($generated@@228 $generated@@632 $generated@@633 $generated@@634 ($generated@@294 $generated@@635) $generated@@636 $generated@@639))
)))))))
 :weight 3
 :pattern ( ($generated@@228 $generated@@632 $generated@@633 $generated@@634 ($generated@@294 $generated@@635) ($generated@@263 $generated@@636) ($generated@@263 $generated@@637)))
))))
(assert (forall (($generated@@640 T@U) ($generated@@641 T@U) ($generated@@642 T@U) ) (!  (=> (and (and (= (type $generated@@640) ($generated@@79 $generated@@136 $generated@@2)) (= (type $generated@@641) $generated@@67)) (= (type $generated@@642) ($generated@@79 $generated@@80 $generated@@81))) (= ($generated@@77 $generated@@640 ($generated@@166 $generated@@641) $generated@@642) (forall (($generated@@643 T@U) ) (!  (=> (and (= (type $generated@@643) $generated@@136) (< 0 ($generated ($generated@@84 $generated@@640 $generated@@643)))) ($generated@@268 $generated@@643 $generated@@641 $generated@@642))
 :pattern ( ($generated@@84 $generated@@640 $generated@@643))
))))
 :pattern ( ($generated@@77 $generated@@640 ($generated@@166 $generated@@641) $generated@@642))
)))
(assert (forall (($generated@@644 T@U) ($generated@@645 T@U) ) (!  (=> (and (and (= (type $generated@@644) $generated@@136) (= (type $generated@@645) $generated@@136)) (and ($generated@@358 $generated@@645) (<= ($generated@@144 $generated@@645) ($generated@@144 $generated@@644)))) (or (and (= $generated@@645 ($generated@@143 0)) (= ($generated@@142 $generated@@644 $generated@@645) $generated@@644)) (and (not (= $generated@@645 ($generated@@143 0))) ($generated@@135 ($generated@@142 $generated@@644 $generated@@645) $generated@@644))))
 :pattern ( ($generated@@142 $generated@@644 $generated@@645))
)))
(assert (forall (($generated@@646 T@U) ($generated@@647 T@U) ($generated@@648 T@U) ) (!  (=> (and (and (and (= (type $generated@@646) $generated@@153) (= (type $generated@@647) $generated@@67)) (= (type $generated@@648) ($generated@@79 $generated@@80 $generated@@81))) (and ($generated@@267 $generated@@648) (and ($generated@@151 $generated@@646) (exists (($generated@@649 T@U) ) (!  (and (= (type $generated@@649) $generated@@67) ($generated@@77 $generated@@646 ($generated@@152 $generated@@647 $generated@@649) $generated@@648))
 :pattern ( ($generated@@77 $generated@@646 ($generated@@152 $generated@@647 $generated@@649) $generated@@648))
))))) ($generated@@268 ($generated@@160 $generated@@646) $generated@@647 $generated@@648))
 :pattern ( ($generated@@268 ($generated@@160 $generated@@646) $generated@@647 $generated@@648))
)))
(assert (forall (($generated@@650 T@U) ($generated@@651 T@U) ($generated@@652 T@U) ) (!  (=> (and (and (and (= (type $generated@@650) $generated@@153) (= (type $generated@@651) $generated@@67)) (= (type $generated@@652) ($generated@@79 $generated@@80 $generated@@81))) (and ($generated@@267 $generated@@652) (and ($generated@@151 $generated@@650) (exists (($generated@@653 T@U) ) (!  (and (= (type $generated@@653) $generated@@67) ($generated@@77 $generated@@650 ($generated@@152 $generated@@653 $generated@@651) $generated@@652))
 :pattern ( ($generated@@77 $generated@@650 ($generated@@152 $generated@@653 $generated@@651) $generated@@652))
))))) ($generated@@268 ($generated@@161 $generated@@650) $generated@@651 $generated@@652))
 :pattern ( ($generated@@268 ($generated@@161 $generated@@650) $generated@@651 $generated@@652))
)))
(assert (forall (($generated@@654 T@U) ($generated@@655 T@U) ) (!  (=> (and (= (type $generated@@654) $generated@@136) (= (type $generated@@655) $generated@@136)) (= ($generated@@241 ($generated@@263 $generated@@654) ($generated@@263 $generated@@655)) ($generated@@263 ($generated@@241 $generated@@654 $generated@@655))))
 :pattern ( ($generated@@241 ($generated@@263 $generated@@654) ($generated@@263 $generated@@655)))
)))
(assert  (=> (<= 1 $generated@@227) (forall (($generated@@656 T@U) ($generated@@657 T@U) ($generated@@658 T@U) ($generated@@659 T@U) ($generated@@660 T@U) ($generated@@661 T@U) ) (!  (=> (and (and (and (and (and (and (= (type $generated@@656) $generated@@67) (= (type $generated@@657) $generated@@67)) (= (type $generated@@658) $generated@@67)) (= (type $generated@@659) $generated@@229)) (= (type $generated@@660) $generated@@80)) (= (type $generated@@661) $generated@@136)) (and (and (not (= $generated@@660 $generated@@231)) ($generated@@140 $generated@@660 ($generated@@232 $generated@@656 $generated@@657))) (= $generated@@661 ($generated@@143 0)))) ($generated@@228 $generated@@656 $generated@@657 $generated@@658 $generated@@659 $generated@@660 $generated@@661))
 :pattern ( ($generated@@228 $generated@@656 $generated@@657 $generated@@658 $generated@@659 $generated@@660 $generated@@661))
))))
(assert (forall (($generated@@662 Int) ) (! (= ($generated@@302 ($generated@@8 ($generated@@261 $generated@@662))) ($generated@@263 ($generated@@302 ($generated@@8 $generated@@662))))
 :pattern ( ($generated@@302 ($generated@@8 ($generated@@261 $generated@@662))))
)))
(assert (forall (($generated@@663 T@U) ) (! (= ($generated@@302 ($generated@@263 $generated@@663)) ($generated@@263 ($generated@@302 $generated@@663)))
 :pattern ( ($generated@@302 ($generated@@263 $generated@@663)))
)))
(assert (forall (($generated@@664 T@U) ) (! (let (($generated@@665 ($generated@@283 (type $generated@@664))))
 (=> (and (= (type $generated@@664) ($generated@@282 $generated@@665)) (= ($generated@@281 $generated@@664) 0)) (= $generated@@664 ($generated@@280 $generated@@665))))
 :pattern ( ($generated@@281 $generated@@664))
)))
(assert (forall (($generated@@666 T@U) ($generated@@667 T@U) ($generated@@668 T@U) ) (! (let (($generated@@669 (type $generated@@667)))
 (=> (and (and (= (type $generated@@666) ($generated@@79 $generated@@669 $generated@@2)) (= (type $generated@@668) $generated@@2)) (<= 0 ($generated $generated@@668))) (= ($generated@@312 ($generated@@85 $generated@@666 $generated@@667 $generated@@668)) (+ (- ($generated@@312 $generated@@666) ($generated ($generated@@84 $generated@@666 $generated@@667))) ($generated $generated@@668)))))
 :pattern ( ($generated@@312 ($generated@@85 $generated@@666 $generated@@667 $generated@@668)))
)))
(assert  (and (forall (($generated@@672 T@U) ) (! (= (type ($generated@@670 $generated@@672)) $generated@@229)
 :pattern ( ($generated@@670 $generated@@672))
)) (= (type $generated@@671) $generated@@229)))
(assert (forall (($generated@@673 T@U) ($generated@@674 T@U) ($generated@@675 T@U) ($generated@@676 T@U) ($generated@@677 T@U) ($generated@@678 T@U) ) (!  (=> (and (and (and (and (and (= (type $generated@@673) $generated@@67) (= (type $generated@@674) $generated@@67)) (= (type $generated@@675) $generated@@67)) (= (type $generated@@676) $generated@@229)) (= (type $generated@@677) $generated@@80)) (= (type $generated@@678) $generated@@136)) (= ($generated@@228 $generated@@673 $generated@@674 $generated@@675 $generated@@676 $generated@@677 $generated@@678) ($generated@@228 $generated@@673 $generated@@674 $generated@@675 $generated@@671 $generated@@677 $generated@@678)))
 :pattern ( ($generated@@228 $generated@@673 $generated@@674 $generated@@675 ($generated@@670 $generated@@676) $generated@@677 $generated@@678))
)))
(assert (forall (($generated@@679 T@U) ($generated@@680 T@U) ) (!  (=> (and (= (type $generated@@679) ($generated@@79 $generated@@80 $generated@@81)) (= (type $generated@@680) $generated@@2)) ($generated@@77 $generated@@680 $generated@@46 $generated@@679))
 :pattern ( ($generated@@77 $generated@@680 $generated@@46 $generated@@679))
)))
(assert (forall (($generated@@681 T@U) ($generated@@682 T@U) ) (!  (=> (and (= (type $generated@@681) ($generated@@79 $generated@@80 $generated@@81)) (= (type $generated@@682) $generated@@3)) ($generated@@77 $generated@@682 $generated@@47 $generated@@681))
 :pattern ( ($generated@@77 $generated@@682 $generated@@47 $generated@@681))
)))
(assert (forall (($generated@@683 T@U) ($generated@@684 T@U) ) (!  (=> (and (= (type $generated@@683) ($generated@@79 $generated@@80 $generated@@81)) (= (type $generated@@684) $generated@@4)) ($generated@@77 $generated@@684 $generated@@44 $generated@@683))
 :pattern ( ($generated@@77 $generated@@684 $generated@@44 $generated@@683))
)))
(assert (forall (($generated@@685 T@U) ($generated@@686 T@U) ) (!  (=> (and (= (type $generated@@685) ($generated@@79 $generated@@80 $generated@@81)) (= (type $generated@@686) $generated@@491)) ($generated@@77 $generated@@686 $generated@@45 $generated@@685))
 :pattern ( ($generated@@77 $generated@@686 $generated@@45 $generated@@685))
)))
(assert (forall (($generated@@687 T@U) ($generated@@688 T@U) ) (!  (=> (and (= (type $generated@@687) ($generated@@79 $generated@@80 $generated@@81)) (= (type $generated@@688) $generated@@136)) ($generated@@77 $generated@@688 $generated@@48 $generated@@687))
 :pattern ( ($generated@@77 $generated@@688 $generated@@48 $generated@@687))
)))
(assert (forall (($generated@@689 T@U) ($generated@@690 T@U) ) (!  (=> (and (= (type $generated@@689) ($generated@@282 $generated@@136)) (= (type $generated@@690) $generated@@67)) (= ($generated@@140 $generated@@689 ($generated@@550 $generated@@690)) (forall (($generated@@691 Int) ) (!  (=> (and (<= 0 $generated@@691) (< $generated@@691 ($generated@@281 $generated@@689))) ($generated@@242 ($generated@@551 $generated@@689 $generated@@691) $generated@@690))
 :pattern ( ($generated@@551 $generated@@689 $generated@@691))
))))
 :pattern ( ($generated@@140 $generated@@689 ($generated@@550 $generated@@690)))
)))
(assert (forall (($generated@@693 T@U) ($generated@@694 Int) ) (!  (=> (= (type $generated@@693) ($generated@@282 $generated@@136)) (=> (and (<= 0 $generated@@694) (< $generated@@694 ($generated@@281 $generated@@693))) (< ($generated@@591 ($generated@@423 $generated@@153 ($generated@@551 $generated@@693 $generated@@694))) ($generated@@692 $generated@@693))))
 :pattern ( ($generated@@591 ($generated@@423 $generated@@153 ($generated@@551 $generated@@693 $generated@@694))))
)))
(assert (forall (($generated@@695 T@U) ($generated@@696 T@U) ($generated@@697 T@U) ) (!  (=> (and (and (and (= (type $generated@@695) ($generated@@320 $generated@@136 $generated@@136)) (= (type $generated@@696) $generated@@67)) (= (type $generated@@697) $generated@@67)) ($generated@@140 $generated@@695 ($generated@@451 $generated@@696 $generated@@697))) (and (and ($generated@@140 ($generated@@318 $generated@@695) ($generated@@251 $generated@@696)) ($generated@@140 ($generated@@381 $generated@@695) ($generated@@251 $generated@@697))) ($generated@@140 ($generated@@422 $generated@@695) ($generated@@251 ($generated@@152 $generated@@696 $generated@@697)))))
 :pattern ( ($generated@@140 $generated@@695 ($generated@@451 $generated@@696 $generated@@697)))
)))
(assert (forall (($generated@@698 T@U) ($generated@@699 T@U) ($generated@@700 T@U) ) (!  (=> (and (and (and (= (type $generated@@698) ($generated@@338 $generated@@136 $generated@@136)) (= (type $generated@@699) $generated@@67)) (= (type $generated@@700) $generated@@67)) ($generated@@140 $generated@@698 ($generated@@459 $generated@@699 $generated@@700))) (and (and ($generated@@140 ($generated@@336 $generated@@698) ($generated@@256 $generated@@699)) ($generated@@140 ($generated@@392 $generated@@698) ($generated@@256 $generated@@700))) ($generated@@140 ($generated@@433 $generated@@698) ($generated@@256 ($generated@@152 $generated@@699 $generated@@700)))))
 :pattern ( ($generated@@140 $generated@@698 ($generated@@459 $generated@@699 $generated@@700)))
)))
(assert (forall (($generated@@701 T@U) ) (!  (=> (= (type $generated@@701) $generated@@2) ($generated@@140 $generated@@701 $generated@@46))
 :pattern ( ($generated@@140 $generated@@701 $generated@@46))
)))
(assert (forall (($generated@@702 T@U) ) (!  (=> (= (type $generated@@702) $generated@@3) ($generated@@140 $generated@@702 $generated@@47))
 :pattern ( ($generated@@140 $generated@@702 $generated@@47))
)))
(assert (forall (($generated@@703 T@U) ) (!  (=> (= (type $generated@@703) $generated@@4) ($generated@@140 $generated@@703 $generated@@44))
 :pattern ( ($generated@@140 $generated@@703 $generated@@44))
)))
(assert (forall (($generated@@704 T@U) ) (!  (=> (= (type $generated@@704) $generated@@491) ($generated@@140 $generated@@704 $generated@@45))
 :pattern ( ($generated@@140 $generated@@704 $generated@@45))
)))
(assert (forall (($generated@@705 T@U) ) (!  (=> (= (type $generated@@705) $generated@@136) ($generated@@140 $generated@@705 $generated@@48))
 :pattern ( ($generated@@140 $generated@@705 $generated@@48))
)))
(push 1)
(declare-fun ControlFlow (Int Int) Int)
(declare-fun $generated@@706 () T@U)
(declare-fun $generated@@707 () T@U)
(declare-fun $generated@@708 () T@U)
(declare-fun $generated@@709 () T@U)
(declare-fun $generated@@710 () T@U)
(declare-fun $generated@@711 () T@U)
(declare-fun $generated@@712 (T@U) Bool)
(declare-fun $generated@@713 () T@U)
(declare-fun $generated@@714 () T@U)
(declare-fun $generated@@715 () T@U)
(declare-fun $generated@@716 () T@U)
(declare-fun $generated@@717 () T@U)
(assert  (and (and (and (and (and (and (and (and (and (and (= (type $generated@@706) $generated@@67) (= (type $generated@@707) $generated@@67)) (= (type $generated@@708) $generated@@67)) (= (type $generated@@709) $generated@@80)) (= (type $generated@@710) $generated@@136)) (= (type $generated@@714) $generated@@136)) (= (type $generated@@715) ($generated@@79 $generated@@80 $generated@@81))) (= (type $generated@@713) ($generated@@79 $generated@@80 $generated@@81))) (= (type $generated@@711) ($generated@@79 $generated@@80 $generated@@81))) (= (type $generated@@716) ($generated@@173 $generated@@80 $generated@@4))) (= (type $generated@@717) ($generated@@79 $generated@@80 $generated@@81))))
(set-option :timeout 0)
(set-option :rlimit 0)
(assert (not
 (=> (= (ControlFlow 0 0) 9) (let (($generated@@718  (and (=> (= (ControlFlow 0 2) (- 0 3)) (=> ($generated@@230 $generated@@706 $generated@@707 $generated@@708 $generated@@709 $generated@@710) (or ($generated@@228 $generated@@706 $generated@@707 $generated@@708 ($generated@@294 $generated@@671) $generated@@709 $generated@@710) (=> (< 0 ($generated@@144 $generated@@710)) ($generated@@228 $generated@@706 $generated@@707 $generated@@708 ($generated@@294 ($generated@@294 $generated@@671)) $generated@@709 ($generated@@142 $generated@@710 ($generated@@143 1))))))) (=> (=> ($generated@@230 $generated@@706 $generated@@707 $generated@@708 $generated@@709 $generated@@710) (or ($generated@@228 $generated@@706 $generated@@707 $generated@@708 ($generated@@294 $generated@@671) $generated@@709 $generated@@710) (=> (< 0 ($generated@@144 $generated@@710)) ($generated@@228 $generated@@706 $generated@@707 $generated@@708 ($generated@@294 ($generated@@294 $generated@@671)) $generated@@709 ($generated@@142 $generated@@710 ($generated@@143 1)))))) (=> (= (ControlFlow 0 2) (- 0 1)) (=> ($generated@@230 $generated@@706 $generated@@707 $generated@@708 $generated@@709 $generated@@710) (or ($generated@@228 $generated@@706 $generated@@707 $generated@@708 ($generated@@294 $generated@@671) $generated@@709 $generated@@710) (=> (= ($generated@@261 0) ($generated@@144 $generated@@710)) (forall (($generated@@719 T@U) ) (!  (=> (and (= (type $generated@@719) $generated@@136) ($generated@@135 $generated@@719 $generated@@710)) ($generated@@228 $generated@@706 $generated@@707 $generated@@708 ($generated@@294 ($generated@@294 $generated@@671)) $generated@@709 $generated@@719))
 :pattern ( ($generated@@228 $generated@@706 $generated@@707 $generated@@708 ($generated@@294 ($generated@@294 $generated@@671)) $generated@@709 $generated@@719))
))))))))))
(let (($generated@@720  (=> (<= ($generated@@144 $generated@@710) 0) (=> (and (and (and ($generated@@267 $generated@@711) ($generated@@712 $generated@@711)) (= $generated@@713 $generated@@711)) (and (forall (($generated@@721 T@U) ($generated@@722 T@U) ) (!  (=> (and (and (= (type $generated@@721) $generated@@136) (= (type $generated@@722) $generated@@80)) (and ($generated@@140 $generated@@722 ($generated@@232 $generated@@706 $generated@@707)) ($generated@@135 $generated@@721 $generated@@710))) ($generated@@228 $generated@@706 $generated@@707 $generated@@708 ($generated@@294 $generated@@671) $generated@@722 $generated@@721))
 :no-pattern (type $generated@@721)
 :no-pattern (type $generated@@722)
 :no-pattern ($generated $generated@@721)
 :no-pattern ($generated@@0 $generated@@721)
 :no-pattern ($generated $generated@@722)
 :no-pattern ($generated@@0 $generated@@722)
)) (= (ControlFlow 0 7) 2))) $generated@@718))))
(let (($generated@@723  (=> (< 0 ($generated@@144 $generated@@710)) (and (=> (= (ControlFlow 0 4) (- 0 6)) ($generated@@358 ($generated@@263 ($generated@@143 1)))) (=> ($generated@@358 ($generated@@263 ($generated@@143 1))) (and (=> (= (ControlFlow 0 4) (- 0 5)) (<= ($generated@@144 ($generated@@263 ($generated@@143 1))) ($generated@@144 $generated@@710))) (=> (<= ($generated@@144 ($generated@@263 ($generated@@143 1))) ($generated@@144 $generated@@710)) (=> (= $generated@@714 ($generated@@142 $generated@@710 ($generated@@143 1))) (=> (and (and (and ($generated@@267 $generated@@715) ($generated@@712 $generated@@715)) ($generated@@230 $generated@@706 $generated@@707 $generated@@708 $generated@@709 $generated@@714)) (and (and ($generated@@230 $generated@@706 $generated@@707 $generated@@708 $generated@@709 $generated@@714) (and ($generated@@228 $generated@@706 $generated@@707 $generated@@708 ($generated@@294 $generated@@671) $generated@@709 $generated@@714) (and (=> (< 0 ($generated@@144 $generated@@714)) ($generated@@228 $generated@@706 $generated@@707 $generated@@708 ($generated@@294 $generated@@671) $generated@@709 ($generated@@142 $generated@@714 ($generated@@143 1)))) (=> (= ($generated@@261 0) ($generated@@144 $generated@@714)) (forall (($generated@@724 T@U) ) (!  (=> (and (= (type $generated@@724) $generated@@136) ($generated@@135 $generated@@724 $generated@@714)) ($generated@@228 $generated@@706 $generated@@707 $generated@@708 ($generated@@294 $generated@@671) $generated@@709 $generated@@724))
 :pattern ( ($generated@@228 $generated@@706 $generated@@707 $generated@@708 ($generated@@294 $generated@@671) $generated@@709 $generated@@724))
)))))) (and (= $generated@@713 $generated@@715) (= (ControlFlow 0 4) 2)))) $generated@@718)))))))))
(let (($generated@@725  (=> (= $generated@@716 ($generated@@172 $generated@@231 $generated@@717 $generated@@60 false)) (=> (and (and ($generated@@267 $generated@@713) ($generated@@712 $generated@@713)) (and (= $generated@@717 $generated@@713) (forall (($generated@@726 T@U) ) (!  (=> (= (type $generated@@726) $generated@@136) (=> (and ($generated@@0 ($generated@@263 ($generated@@11 true))) (or ($generated@@135 $generated@@726 $generated@@710) (and (= $generated@@726 $generated@@710) (and (= $generated@@709 $generated@@231) (not (= $generated@@709 $generated@@231)))))) ($generated@@228 $generated@@706 $generated@@707 $generated@@708 ($generated@@294 $generated@@671) $generated@@709 $generated@@726)))
 :no-pattern (type $generated@@726)
 :no-pattern ($generated $generated@@726)
 :no-pattern ($generated@@0 $generated@@726)
)))) (and (=> (= (ControlFlow 0 8) 4) $generated@@723) (=> (= (ControlFlow 0 8) 7) $generated@@720))))))
(let (($generated@@727  (=> (and ($generated@@267 $generated@@717) ($generated@@712 $generated@@717)) (=> (and (and ($generated@@140 $generated@@709 ($generated@@232 $generated@@706 $generated@@707)) ($generated@@77 $generated@@709 ($generated@@232 $generated@@706 $generated@@707) $generated@@717)) (and (= 2 $generated@@227) (= (ControlFlow 0 9) 8))) $generated@@725))))
$generated@@727))))))
))
(check-sat)
(pop 1)
; Valid
(get-info :rlimit)
(reset)
(set-option :rlimit 0)
; did a full reset
(reset)
(set-option :print-success false)
(set-info :smt-lib-version 2.6)
(set-option :auto_config false)
(set-option :type_check true)
(set-option :smt.case_split 3)
(set-option :smt.qi.eager_threshold 100)
(set-option :smt.delay_units true)
(set-option :smt.arith.solver 2)
(set-option :smt.mbqi false)
(set-option :model.compact false)
(set-option :model.v2 true)
(set-option :pp.bv_literals false)
; done setting options


(set-info :category "industrial")
(declare-sort |T@U| 0)
(declare-sort |T@T| 0)
(declare-fun real_pow (Real Real) Real)
(declare-fun UOrdering2 (|T@U| |T@U|) Bool)
(declare-fun UOrdering3 (|T@T| |T@U| |T@U|) Bool)
(declare-fun tickleBool (Bool) Bool)
(assert (and (tickleBool true) (tickleBool false)))
(declare-fun $generated (T@U) Int)
(declare-fun $generated@@0 (T@U) Bool)
(declare-fun $generated@@1 (T@T) Int)
(declare-fun $generated@@2 () T@T)
(declare-fun $generated@@3 () T@T)
(declare-fun $generated@@4 () T@T)
(declare-fun $generated@@5 () T@T)
(declare-fun $generated@@6 () T@T)
(declare-fun $generated@@7 () T@T)
(declare-fun $generated@@8 (Int) T@U)
(declare-fun type (T@U) T@T)
(declare-fun $generated@@9 (Real) T@U)
(declare-fun $generated@@10 (T@U) Real)
(declare-fun $generated@@11 (Bool) T@U)
(declare-fun $generated@@12 (RoundingMode) T@U)
(declare-fun $generated@@13 (T@U) RoundingMode)
(declare-fun $generated@@14 (String) T@U)
(declare-fun $generated@@15 (T@U) String)
(declare-fun $generated@@16 ((RegEx String)) T@U)
(declare-fun $generated@@17 (T@U) (RegEx String))
(declare-fun $generated@@44 () Int)
(declare-fun $generated@@45 (T@U T@U T@U T@U T@U) Bool)
(declare-fun $generated@@46 (T@U) T@U)
(declare-fun $generated@@47 () T@T)
(declare-fun $generated@@48 () T@T)
(declare-fun $generated@@49 () T@T)
(declare-fun $generated@@50 (T@U T@U T@U T@U) Bool)
(declare-fun $generated@@51 (T@U) Int)
(declare-fun $generated@@52 (T@U T@U) T@U)
(declare-fun $generated@@53 (Int) T@U)
(declare-fun $generated@@54 (Int) Int)
(declare-fun $generated@@55 (T@U T@U) Bool)
(declare-fun $generated@@73 (T@U T@U T@U) T@U)
(declare-fun $generated@@74 (T@U T@U T@U Bool) T@U)
(declare-fun $generated@@75 (T@T) T@T)
(declare-fun $generated@@76 () T@T)
(declare-fun $generated@@77 (T@T T@T) T@T)
(declare-fun $generated@@78 () T@T)
(declare-fun $generated@@79 (T@T) T@T)
(declare-fun $generated@@80 (T@U T@U) T@U)
(declare-fun $generated@@81 (T@U T@U) T@U)
(declare-fun $generated@@82 (T@T) T@T)
(declare-fun $generated@@83 (T@T) T@T)
(declare-fun $generated@@84 (T@U T@U T@U) T@U)
(declare-fun $generated@@85 (T@U T@U T@U) T@U)
(declare-fun $generated@@86 (T@T T@T) T@T)
(declare-fun $generated@@87 (T@T) T@T)
(declare-fun $generated@@88 (T@T) T@T)
(declare-fun $generated@@89 (T@U T@U T@U T@U) T@U)
(declare-fun $generated@@187 (T@U) T@U)
(declare-fun $generated@@191 (T@U) Bool)
(declare-fun $generated@@194 (T@U) T@U)
(declare-fun $generated@@195 () T@U)
(declare-fun $generated@@223 (T@U) T@U)
(declare-fun $generated@@224 (T@T T@U) T@U)
(assert  (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (= ($generated@@1 $generated@@2) 0) (= ($generated@@1 $generated@@3) 1)) (= ($generated@@1 $generated@@4) 2)) (= ($generated@@1 $generated@@5) 3)) (= ($generated@@1 $generated@@6) 4)) (= ($generated@@1 $generated@@7) 5)) (forall (($generated@@18 Int) ) (! (= ($generated ($generated@@8 $generated@@18)) $generated@@18)
 :pattern ( ($generated@@8 $generated@@18))
))) (forall (($generated@@19 T@U) ) (!  (=> (= (type $generated@@19) $generated@@2) (= ($generated@@8 ($generated $generated@@19)) $generated@@19))
 :pattern ( ($generated $generated@@19))
))) (forall (($generated@@20 Int) ) (! (= (type ($generated@@8 $generated@@20)) $generated@@2)
 :pattern ( ($generated@@8 $generated@@20))
))) (forall (($generated@@21 Real) ) (! (= ($generated@@10 ($generated@@9 $generated@@21)) $generated@@21)
 :pattern ( ($generated@@9 $generated@@21))
))) (forall (($generated@@22 T@U) ) (!  (=> (= (type $generated@@22) $generated@@3) (= ($generated@@9 ($generated@@10 $generated@@22)) $generated@@22))
 :pattern ( ($generated@@10 $generated@@22))
))) (forall (($generated@@23 Real) ) (! (= (type ($generated@@9 $generated@@23)) $generated@@3)
 :pattern ( ($generated@@9 $generated@@23))
))) (forall (($generated@@24 Bool) ) (! (= ($generated@@0 ($generated@@11 $generated@@24)) $generated@@24)
 :pattern ( ($generated@@11 $generated@@24))
))) (forall (($generated@@25 T@U) ) (!  (=> (= (type $generated@@25) $generated@@4) (= ($generated@@11 ($generated@@0 $generated@@25)) $generated@@25))
 :pattern ( ($generated@@0 $generated@@25))
))) (forall (($generated@@26 Bool) ) (! (= (type ($generated@@11 $generated@@26)) $generated@@4)
 :pattern ( ($generated@@11 $generated@@26))
))) (forall (($generated@@27 RoundingMode) ) (! (= ($generated@@13 ($generated@@12 $generated@@27)) $generated@@27)
 :pattern ( ($generated@@12 $generated@@27))
))) (forall (($generated@@28 T@U) ) (!  (=> (= (type $generated@@28) $generated@@5) (= ($generated@@12 ($generated@@13 $generated@@28)) $generated@@28))
 :pattern ( ($generated@@13 $generated@@28))
))) (forall (($generated@@29 RoundingMode) ) (! (= (type ($generated@@12 $generated@@29)) $generated@@5)
 :pattern ( ($generated@@12 $generated@@29))
))) (forall (($generated@@30 String) ) (! (= ($generated@@15 ($generated@@14 $generated@@30)) $generated@@30)
 :pattern ( ($generated@@14 $generated@@30))
))) (forall (($generated@@31 T@U) ) (!  (=> (= (type $generated@@31) $generated@@6) (= ($generated@@14 ($generated@@15 $generated@@31)) $generated@@31))
 :pattern ( ($generated@@15 $generated@@31))
))) (forall (($generated@@32 String) ) (! (= (type ($generated@@14 $generated@@32)) $generated@@6)
 :pattern ( ($generated@@14 $generated@@32))
))) (forall (($generated@@33 (RegEx String)) ) (! (= ($generated@@17 ($generated@@16 $generated@@33)) $generated@@33)
 :pattern ( ($generated@@16 $generated@@33))
))) (forall (($generated@@34 T@U) ) (!  (=> (= (type $generated@@34) $generated@@7) (= ($generated@@16 ($generated@@17 $generated@@34)) $generated@@34))
 :pattern ( ($generated@@17 $generated@@34))
))) (forall (($generated@@35 (RegEx String)) ) (! (= (type ($generated@@16 $generated@@35)) $generated@@7)
 :pattern ( ($generated@@16 $generated@@35))
))))
(assert (forall (($generated@@36 T@U) ) (! (UOrdering2 $generated@@36 $generated@@36)
 :no-pattern ($generated $generated@@36)
 :no-pattern ($generated@@0 $generated@@36)
)))
(assert (forall (($generated@@37 T@U) ($generated@@38 T@U) ($generated@@39 T@U) ) (! (let (($generated@@40 (type $generated@@37)))
 (=> (and (and (= (type $generated@@38) $generated@@40) (= (type $generated@@39) $generated@@40)) (and (UOrdering2 $generated@@37 $generated@@38) (UOrdering2 $generated@@38 $generated@@39))) (UOrdering2 $generated@@37 $generated@@39)))
 :pattern ( (UOrdering2 $generated@@37 $generated@@38) (UOrdering2 $generated@@38 $generated@@39))
)))
(assert (forall (($generated@@41 T@U) ($generated@@42 T@U) ) (! (let (($generated@@43 (type $generated@@41)))
 (=> (= (type $generated@@42) $generated@@43) (=> (and (UOrdering2 $generated@@41 $generated@@42) (UOrdering2 $generated@@42 $generated@@41)) (= $generated@@41 $generated@@42))))
 :pattern ( (UOrdering2 $generated@@41 $generated@@42) (UOrdering2 $generated@@42 $generated@@41))
)))
(assert  (and (and (and (and (and (= ($generated@@1 $generated@@47) 6) (= ($generated@@1 $generated@@48) 7)) (= ($generated@@1 $generated@@49) 8)) (forall (($generated@@56 T@U) ) (! (= (type ($generated@@46 $generated@@56)) $generated@@48)
 :pattern ( ($generated@@46 $generated@@56))
))) (forall (($generated@@57 T@U) ($generated@@58 T@U) ) (! (= (type ($generated@@52 $generated@@57 $generated@@58)) $generated@@49)
 :pattern ( ($generated@@52 $generated@@57 $generated@@58))
))) (forall (($generated@@59 Int) ) (! (= (type ($generated@@53 $generated@@59)) $generated@@49)
 :pattern ( ($generated@@53 $generated@@59))
))))
(assert  (=> (<= 1 $generated@@44) (forall (($generated@@60 T@U) ($generated@@61 T@U) ($generated@@62 T@U) ($generated@@63 T@U) ($generated@@64 T@U) ) (!  (=> (and (and (and (and (and (= (type $generated@@60) $generated@@47) (= (type $generated@@61) $generated@@47)) (= (type $generated@@62) $generated@@47)) (= (type $generated@@63) $generated@@48)) (= (type $generated@@64) $generated@@49)) (or ($generated@@50 $generated@@60 $generated@@61 $generated@@62 $generated@@64) (not (= 1 $generated@@44)))) (and (and (=> (< 0 ($generated@@51 $generated@@64)) ($generated@@50 $generated@@60 $generated@@61 $generated@@62 ($generated@@52 $generated@@64 ($generated@@53 1)))) (=> (=> (< 0 ($generated@@51 $generated@@64)) ($generated@@45 $generated@@60 $generated@@61 $generated@@62 $generated@@63 ($generated@@52 $generated@@64 ($generated@@53 1)))) (=> (= ($generated@@54 0) ($generated@@51 $generated@@64)) (forall (($generated@@65 T@U) ) (!  (=> (and (= (type $generated@@65) $generated@@49) ($generated@@55 $generated@@65 $generated@@64)) ($generated@@50 $generated@@60 $generated@@61 $generated@@62 $generated@@65))
 :pattern ( ($generated@@45 $generated@@60 $generated@@61 $generated@@62 $generated@@63 $generated@@65))
))))) (= ($generated@@45 $generated@@60 $generated@@61 $generated@@62 ($generated@@46 $generated@@63) $generated@@64)  (and (=> (< 0 ($generated@@51 $generated@@64)) ($generated@@45 $generated@@60 $generated@@61 $generated@@62 $generated@@63 ($generated@@52 $generated@@64 ($generated@@53 1)))) (=> (= ($generated@@54 0) ($generated@@51 $generated@@64)) (forall (($generated@@66 T@U) ) (!  (=> (and (= (type $generated@@66) $generated@@49) ($generated@@55 $generated@@66 $generated@@64)) ($generated@@45 $generated@@60 $generated@@61 $generated@@62 $generated@@63 $generated@@66))
 :pattern ( ($generated@@45 $generated@@60 $generated@@61 $generated@@62 $generated@@63 $generated@@66))
)))))))
 :pattern ( ($generated@@45 $generated@@60 $generated@@61 $generated@@62 ($generated@@46 $generated@@63) $generated@@64))
))))
(assert (forall (($generated@@67 T@U) ($generated@@68 T@U) ($generated@@69 T@U) ) (!  (=> (and (and (and (= (type $generated@@67) $generated@@49) (= (type $generated@@68) $generated@@49)) (= (type $generated@@69) $generated@@49)) (and ($generated@@55 $generated@@67 $generated@@68) ($generated@@55 $generated@@68 $generated@@69))) ($generated@@55 $generated@@67 $generated@@69))
 :pattern ( ($generated@@55 $generated@@67 $generated@@68) ($generated@@55 $generated@@68 $generated@@69))
 :pattern ( ($generated@@55 $generated@@67 $generated@@68) ($generated@@55 $generated@@67 $generated@@69))
)))
(assert (forall (($generated@@70 T@U) ($generated@@71 Int) ($generated@@72 Int) ) (!  (=> (= (type $generated@@70) $generated@@49) (=> (and (and (<= 0 $generated@@71) (<= 0 $generated@@72)) (<= (+ $generated@@71 $generated@@72) ($generated@@51 $generated@@70))) (= ($generated@@52 ($generated@@52 $generated@@70 ($generated@@53 $generated@@71)) ($generated@@53 $generated@@72)) ($generated@@52 $generated@@70 ($generated@@53 (+ $generated@@71 $generated@@72))))))
 :pattern ( ($generated@@52 ($generated@@52 $generated@@70 ($generated@@53 $generated@@71)) ($generated@@53 $generated@@72)))
)))
(assert  (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (forall (($generated@@90 T@T) ($generated@@91 T@T) ) (= ($generated@@1 ($generated@@77 $generated@@90 $generated@@91)) 9)) (forall (($generated@@92 T@T) ($generated@@93 T@T) ) (! (= ($generated@@82 ($generated@@77 $generated@@92 $generated@@93)) $generated@@92)
 :pattern ( ($generated@@77 $generated@@92 $generated@@93))
))) (forall (($generated@@94 T@T) ($generated@@95 T@T) ) (! (= ($generated@@83 ($generated@@77 $generated@@94 $generated@@95)) $generated@@95)
 :pattern ( ($generated@@77 $generated@@94 $generated@@95))
))) (forall (($generated@@96 T@U) ($generated@@97 T@U) ) (! (let (($generated@@98 ($generated@@83 (type $generated@@96))))
(= (type ($generated@@81 $generated@@96 $generated@@97)) $generated@@98))
 :pattern ( ($generated@@81 $generated@@96 $generated@@97))
))) (forall (($generated@@99 T@U) ($generated@@100 T@U) ($generated@@101 T@U) ) (! (let (($generated@@102 (type $generated@@101)))
(let (($generated@@103 (type $generated@@100)))
(= (type ($generated@@84 $generated@@99 $generated@@100 $generated@@101)) ($generated@@77 $generated@@103 $generated@@102))))
 :pattern ( ($generated@@84 $generated@@99 $generated@@100 $generated@@101))
))) (forall (($generated@@104 T@U) ($generated@@105 T@U) ($generated@@106 T@U) ) (! (let (($generated@@107 ($generated@@83 (type $generated@@104))))
 (=> (= (type $generated@@106) $generated@@107) (= ($generated@@81 ($generated@@84 $generated@@104 $generated@@105 $generated@@106) $generated@@105) $generated@@106)))
 :weight 0
))) (and (forall (($generated@@108 T@U) ($generated@@109 T@U) ($generated@@110 T@U) ($generated@@111 T@U) ) (!  (or (= $generated@@110 $generated@@111) (= ($generated@@81 ($generated@@84 $generated@@109 $generated@@110 $generated@@108) $generated@@111) ($generated@@81 $generated@@109 $generated@@111)))
 :weight 0
)) (forall (($generated@@112 T@U) ($generated@@113 T@U) ($generated@@114 T@U) ($generated@@115 T@U) ) (!  (or true (= ($generated@@81 ($generated@@84 $generated@@113 $generated@@114 $generated@@112) $generated@@115) ($generated@@81 $generated@@113 $generated@@115)))
 :weight 0
)))) (forall (($generated@@116 T@T) ) (= ($generated@@1 ($generated@@79 $generated@@116)) 10))) (forall (($generated@@117 T@T) ) (! (= ($generated@@75 ($generated@@79 $generated@@117)) $generated@@117)
 :pattern ( ($generated@@79 $generated@@117))
))) (forall (($generated@@118 T@U) ($generated@@119 T@U) ) (! (let (($generated@@120 ($generated@@75 (type $generated@@119))))
(= (type ($generated@@80 $generated@@118 $generated@@119)) $generated@@120))
 :pattern ( ($generated@@80 $generated@@118 $generated@@119))
))) (= ($generated@@1 $generated@@78) 11)) (forall (($generated@@121 T@U) ($generated@@122 T@U) ($generated@@123 T@U) ) (! (= (type ($generated@@85 $generated@@121 $generated@@122 $generated@@123)) $generated@@78)
 :pattern ( ($generated@@85 $generated@@121 $generated@@122 $generated@@123))
))) (forall (($generated@@124 T@U) ($generated@@125 T@U) ($generated@@126 T@U) ) (! (let (($generated@@127 ($generated@@75 (type $generated@@125))))
 (=> (= (type $generated@@126) $generated@@127) (= ($generated@@80 ($generated@@85 $generated@@124 $generated@@125 $generated@@126) $generated@@125) $generated@@126)))
 :weight 0
))) (and (forall (($generated@@128 T@U) ($generated@@129 T@U) ($generated@@130 T@U) ($generated@@131 T@U) ) (!  (or (= $generated@@130 $generated@@131) (= ($generated@@80 ($generated@@85 $generated@@129 $generated@@130 $generated@@128) $generated@@131) ($generated@@80 $generated@@129 $generated@@131)))
 :weight 0
)) (forall (($generated@@132 T@U) ($generated@@133 T@U) ($generated@@134 T@U) ($generated@@135 T@U) ) (!  (or true (= ($generated@@80 ($generated@@85 $generated@@133 $generated@@134 $generated@@132) $generated@@135) ($generated@@80 $generated@@133 $generated@@135)))
 :weight 0
)))) (= ($generated@@1 $generated@@76) 12)) (forall (($generated@@136 T@T) ($generated@@137 T@T) ) (= ($generated@@1 ($generated@@86 $generated@@136 $generated@@137)) 13))) (forall (($generated@@138 T@T) ($generated@@139 T@T) ) (! (= ($generated@@87 ($generated@@86 $generated@@138 $generated@@139)) $generated@@138)
 :pattern ( ($generated@@86 $generated@@138 $generated@@139))
))) (forall (($generated@@140 T@T) ($generated@@141 T@T) ) (! (= ($generated@@88 ($generated@@86 $generated@@140 $generated@@141)) $generated@@141)
 :pattern ( ($generated@@86 $generated@@140 $generated@@141))
))) (forall (($generated@@142 T@U) ($generated@@143 T@U) ($generated@@144 T@U) ) (! (let (($generated@@145 ($generated@@88 (type $generated@@142))))
(= (type ($generated@@73 $generated@@142 $generated@@143 $generated@@144)) $generated@@145))
 :pattern ( ($generated@@73 $generated@@142 $generated@@143 $generated@@144))
))) (forall (($generated@@146 T@U) ($generated@@147 T@U) ($generated@@148 T@U) ($generated@@149 T@U) ) (! (let (($generated@@150 (type $generated@@149)))
(let (($generated@@151 (type $generated@@147)))
(= (type ($generated@@89 $generated@@146 $generated@@147 $generated@@148 $generated@@149)) ($generated@@86 $generated@@151 $generated@@150))))
 :pattern ( ($generated@@89 $generated@@146 $generated@@147 $generated@@148 $generated@@149))
))) (forall (($generated@@152 T@U) ($generated@@153 T@U) ($generated@@154 T@U) ($generated@@155 T@U) ) (! (let (($generated@@156 ($generated@@88 (type $generated@@152))))
 (=> (= (type $generated@@155) $generated@@156) (= ($generated@@73 ($generated@@89 $generated@@152 $generated@@153 $generated@@154 $generated@@155) $generated@@153 $generated@@154) $generated@@155)))
 :weight 0
))) (and (and (forall (($generated@@157 T@U) ($generated@@158 T@U) ($generated@@159 T@U) ($generated@@160 T@U) ($generated@@161 T@U) ($generated@@162 T@U) ) (!  (or (= $generated@@159 $generated@@161) (= ($generated@@73 ($generated@@89 $generated@@158 $generated@@159 $generated@@160 $generated@@157) $generated@@161 $generated@@162) ($generated@@73 $generated@@158 $generated@@161 $generated@@162)))
 :weight 0
)) (forall (($generated@@163 T@U) ($generated@@164 T@U) ($generated@@165 T@U) ($generated@@166 T@U) ($generated@@167 T@U) ($generated@@168 T@U) ) (!  (or (= $generated@@166 $generated@@168) (= ($generated@@73 ($generated@@89 $generated@@164 $generated@@165 $generated@@166 $generated@@163) $generated@@167 $generated@@168) ($generated@@73 $generated@@164 $generated@@167 $generated@@168)))
 :weight 0
))) (forall (($generated@@169 T@U) ($generated@@170 T@U) ($generated@@171 T@U) ($generated@@172 T@U) ($generated@@173 T@U) ($generated@@174 T@U) ) (!  (or true (= ($generated@@73 ($generated@@89 $generated@@170 $generated@@171 $generated@@172 $generated@@169) $generated@@173 $generated@@174) ($generated@@73 $generated@@170 $generated@@173 $generated@@174)))
 :weight 0
)))) (forall (($generated@@175 T@U) ($generated@@176 T@U) ($generated@@177 T@U) ($generated@@178 Bool) ) (! (= (type ($generated@@74 $generated@@175 $generated@@176 $generated@@177 $generated@@178)) ($generated@@86 $generated@@76 $generated@@4))
 :pattern ( ($generated@@74 $generated@@175 $generated@@176 $generated@@177 $generated@@178))
))))
(assert (forall (($generated@@179 T@U) ($generated@@180 T@U) ($generated@@181 T@U) ($generated@@182 Bool) ($generated@@183 T@U) ($generated@@184 T@U) ) (! (let (($generated@@185 ($generated@@75 (type $generated@@184))))
 (=> (and (and (and (and (= (type $generated@@179) $generated@@76) (= (type $generated@@180) ($generated@@77 $generated@@76 $generated@@78))) (= (type $generated@@181) ($generated@@79 $generated@@4))) (= (type $generated@@183) $generated@@76)) (= (type $generated@@184) ($generated@@79 $generated@@185))) (= ($generated@@0 ($generated@@73 ($generated@@74 $generated@@179 $generated@@180 $generated@@181 $generated@@182) $generated@@183 $generated@@184))  (=> (and (not (= $generated@@183 $generated@@179)) ($generated@@0 ($generated@@80 ($generated@@81 $generated@@180 $generated@@183) $generated@@181))) $generated@@182))))
 :pattern ( ($generated@@73 ($generated@@74 $generated@@179 $generated@@180 $generated@@181 $generated@@182) $generated@@183 $generated@@184))
)))
(assert (forall (($generated@@186 Int) ) (! (= ($generated@@54 $generated@@186) $generated@@186)
 :pattern ( ($generated@@54 $generated@@186))
)))
(assert (forall (($generated@@188 T@U) ) (! (let (($generated@@189 (type $generated@@188)))
(= (type ($generated@@187 $generated@@188)) $generated@@189))
 :pattern ( ($generated@@187 $generated@@188))
)))
(assert (forall (($generated@@190 T@U) ) (! (= ($generated@@187 $generated@@190) $generated@@190)
 :pattern ( ($generated@@187 $generated@@190))
)))
(assert (forall (($generated@@192 T@U) ($generated@@193 T@U) ) (!  (=> (and (and (= (type $generated@@192) $generated@@49) (= (type $generated@@193) $generated@@49)) (and ($generated@@191 $generated@@193) (<= ($generated@@51 $generated@@193) ($generated@@51 $generated@@192)))) (and (= ($generated@@191 ($generated@@52 $generated@@192 $generated@@193)) ($generated@@191 $generated@@192)) (= ($generated@@51 ($generated@@52 $generated@@192 $generated@@193)) (- ($generated@@51 $generated@@192) ($generated@@51 $generated@@193)))))
 :pattern ( ($generated@@52 $generated@@192 $generated@@193))
)))
(assert  (and (forall (($generated@@196 T@U) ) (! (= (type ($generated@@194 $generated@@196)) $generated@@48)
 :pattern ( ($generated@@194 $generated@@196))
)) (= (type $generated@@195) $generated@@48)))
(assert (forall (($generated@@197 T@U) ($generated@@198 T@U) ($generated@@199 T@U) ($generated@@200 T@U) ($generated@@201 T@U) ) (!  (=> (and (and (and (and (= (type $generated@@197) $generated@@47) (= (type $generated@@198) $generated@@47)) (= (type $generated@@199) $generated@@47)) (= (type $generated@@200) $generated@@48)) (= (type $generated@@201) $generated@@49)) (= ($generated@@45 $generated@@197 $generated@@198 $generated@@199 $generated@@200 $generated@@201) ($generated@@45 $generated@@197 $generated@@198 $generated@@199 $generated@@195 $generated@@201)))
 :pattern ( ($generated@@45 $generated@@197 $generated@@198 $generated@@199 ($generated@@194 $generated@@200) $generated@@201))
)))
(assert (forall (($generated@@202 Int) ) (!  (=> (<= 0 $generated@@202) (and ($generated@@191 ($generated@@53 $generated@@202)) (= ($generated@@51 ($generated@@53 $generated@@202)) $generated@@202)))
 :pattern ( ($generated@@53 $generated@@202))
)))
(assert (forall (($generated@@203 T@U) ($generated@@204 T@U) ($generated@@205 T@U) ($generated@@206 T@U) ($generated@@207 T@U) ) (!  (=> (and (and (and (and (= (type $generated@@203) $generated@@47) (= (type $generated@@204) $generated@@47)) (= (type $generated@@205) $generated@@47)) (= (type $generated@@206) $generated@@48)) (= (type $generated@@207) $generated@@49)) (= ($generated@@45 $generated@@203 $generated@@204 $generated@@205 ($generated@@46 $generated@@206) $generated@@207) ($generated@@45 $generated@@203 $generated@@204 $generated@@205 $generated@@206 $generated@@207)))
 :pattern ( ($generated@@45 $generated@@203 $generated@@204 $generated@@205 ($generated@@46 $generated@@206) $generated@@207))
)))
(assert  (=> (<= 1 $generated@@44) (forall (($generated@@208 T@U) ($generated@@209 T@U) ($generated@@210 T@U) ($generated@@211 T@U) ($generated@@212 T@U) ) (!  (=> (and (and (and (and (and (= (type $generated@@208) $generated@@47) (= (type $generated@@209) $generated@@47)) (= (type $generated@@210) $generated@@47)) (= (type $generated@@211) $generated@@48)) (= (type $generated@@212) $generated@@49)) (= $generated@@212 ($generated@@53 0))) ($generated@@45 $generated@@208 $generated@@209 $generated@@210 $generated@@211 $generated@@212))
 :pattern ( ($generated@@45 $generated@@208 $generated@@209 $generated@@210 $generated@@211 $generated@@212))
))))
(assert (forall (($generated@@213 T@U) ($generated@@214 T@U) ) (!  (=> (and (= (type $generated@@213) $generated@@49) (= (type $generated@@214) $generated@@49)) (or (or ($generated@@55 $generated@@213 $generated@@214) (= $generated@@213 $generated@@214)) ($generated@@55 $generated@@214 $generated@@213)))
 :pattern ( ($generated@@55 $generated@@213 $generated@@214) ($generated@@55 $generated@@214 $generated@@213))
)))
(assert (forall (($generated@@215 T@U) ) (!  (=> (= (type $generated@@215) $generated@@49) (<= 0 ($generated@@51 $generated@@215)))
 :pattern ( ($generated@@51 $generated@@215))
)))
(assert  (=> (<= 1 $generated@@44) (forall (($generated@@216 T@U) ($generated@@217 T@U) ($generated@@218 T@U) ($generated@@219 T@U) ($generated@@220 T@U) ) (!  (=> (and (and (and (and (and (= (type $generated@@216) $generated@@47) (= (type $generated@@217) $generated@@47)) (= (type $generated@@218) $generated@@47)) (= (type $generated@@219) $generated@@48)) (= (type $generated@@220) $generated@@49)) (or ($generated@@50 $generated@@216 $generated@@217 $generated@@218 ($generated@@187 $generated@@220)) (not (= 1 $generated@@44)))) (and (and (=> (< 0 ($generated@@51 $generated@@220)) ($generated@@50 $generated@@216 $generated@@217 $generated@@218 ($generated@@52 $generated@@220 ($generated@@53 1)))) (=> (=> (< 0 ($generated@@51 $generated@@220)) ($generated@@45 $generated@@216 $generated@@217 $generated@@218 ($generated@@46 $generated@@219) ($generated@@52 $generated@@220 ($generated@@53 1)))) (=> (= ($generated@@54 0) ($generated@@51 $generated@@220)) (forall (($generated@@221 T@U) ) (!  (=> (and (= (type $generated@@221) $generated@@49) ($generated@@55 $generated@@221 $generated@@220)) ($generated@@50 $generated@@216 $generated@@217 $generated@@218 $generated@@221))
 :pattern ( ($generated@@45 $generated@@216 $generated@@217 $generated@@218 ($generated@@46 $generated@@219) $generated@@221))
))))) (= ($generated@@45 $generated@@216 $generated@@217 $generated@@218 ($generated@@46 $generated@@219) ($generated@@187 $generated@@220))  (and (=> (< 0 ($generated@@51 $generated@@220)) ($generated@@45 $generated@@216 $generated@@217 $generated@@218 ($generated@@46 $generated@@219) ($generated@@52 $generated@@220 ($generated@@53 1)))) (=> (= ($generated@@54 0) ($generated@@51 $generated@@220)) (forall (($generated@@222 T@U) ) (!  (=> (and (= (type $generated@@222) $generated@@49) ($generated@@55 $generated@@222 $generated@@220)) ($generated@@45 $generated@@216 $generated@@217 $generated@@218 ($generated@@46 $generated@@219) $generated@@222))
 :pattern ( ($generated@@45 $generated@@216 $generated@@217 $generated@@218 ($generated@@46 $generated@@219) $generated@@222))
)))))))
 :weight 3
 :pattern ( ($generated@@45 $generated@@216 $generated@@217 $generated@@218 ($generated@@46 $generated@@219) ($generated@@187 $generated@@220)))
))))
(assert  (and (forall (($generated@@225 T@U) ) (! (= (type ($generated@@223 $generated@@225)) $generated@@49)
 :pattern ( ($generated@@223 $generated@@225))
)) (forall (($generated@@226 T@T) ($generated@@227 T@U) ) (! (= (type ($generated@@224 $generated@@226 $generated@@227)) $generated@@226)
 :pattern ( ($generated@@224 $generated@@226 $generated@@227))
))))
(assert (forall (($generated@@228 T@U) ) (! (let (($generated@@229 (type $generated@@228)))
(= ($generated@@224 $generated@@229 ($generated@@223 $generated@@228)) $generated@@228))
 :pattern ( ($generated@@223 $generated@@228))
)))
(assert (forall (($generated@@230 T@U) ($generated@@231 T@U) ) (!  (=> (and (= (type $generated@@230) $generated@@49) (= (type $generated@@231) $generated@@49)) (and (and (and (=> ($generated@@55 $generated@@230 $generated@@231) (not (= $generated@@230 $generated@@231))) (=> (and ($generated@@191 $generated@@230) (not ($generated@@191 $generated@@231))) ($generated@@55 $generated@@230 $generated@@231))) (=> (and ($generated@@191 $generated@@230) ($generated@@191 $generated@@231)) (= ($generated@@55 $generated@@230 $generated@@231) (< ($generated@@51 $generated@@230) ($generated@@51 $generated@@231))))) (=> (and ($generated@@55 $generated@@230 $generated@@231) ($generated@@191 $generated@@231)) ($generated@@191 $generated@@230))))
 :pattern ( ($generated@@55 $generated@@230 $generated@@231))
)))
(assert  (=> (<= 1 $generated@@44) (forall (($generated@@232 T@U) ($generated@@233 T@U) ($generated@@234 T@U) ($generated@@235 T@U) ($generated@@236 T@U) ) (!  (=> (and (and (and (and (and (= (type $generated@@232) $generated@@47) (= (type $generated@@233) $generated@@47)) (= (type $generated@@234) $generated@@47)) (= (type $generated@@235) $generated@@48)) (= (type $generated@@236) $generated@@49)) (or ($generated@@50 $generated@@232 $generated@@233 $generated@@234 $generated@@236) (not (= 1 $generated@@44)))) true)
 :pattern ( ($generated@@45 $generated@@232 $generated@@233 $generated@@234 $generated@@235 $generated@@236))
))))
(assert (forall (($generated@@237 T@U) ) (!  (=> (and (= (type $generated@@237) $generated@@49) ($generated@@191 $generated@@237)) (= $generated@@237 ($generated@@53 ($generated@@51 $generated@@237))))
 :pattern ( ($generated@@51 $generated@@237))
 :pattern ( ($generated@@191 $generated@@237))
)))
(assert (forall (($generated@@238 T@U) ($generated@@239 T@U) ) (!  (=> (and (and (= (type $generated@@238) $generated@@49) (= (type $generated@@239) $generated@@49)) (and ($generated@@191 $generated@@239) (<= ($generated@@51 $generated@@239) ($generated@@51 $generated@@238)))) (or (and (= $generated@@239 ($generated@@53 0)) (= ($generated@@52 $generated@@238 $generated@@239) $generated@@238)) (and (not (= $generated@@239 ($generated@@53 0))) ($generated@@55 ($generated@@52 $generated@@238 $generated@@239) $generated@@238))))
 :pattern ( ($generated@@52 $generated@@238 $generated@@239))
)))
(assert (forall (($generated@@240 Int) ) (! (= ($generated@@223 ($generated@@8 ($generated@@54 $generated@@240))) ($generated@@187 ($generated@@223 ($generated@@8 $generated@@240))))
 :pattern ( ($generated@@223 ($generated@@8 ($generated@@54 $generated@@240))))
)))
(assert (forall (($generated@@241 T@U) ) (! (= ($generated@@223 ($generated@@187 $generated@@241)) ($generated@@187 ($generated@@223 $generated@@241)))
 :pattern ( ($generated@@223 ($generated@@187 $generated@@241)))
)))
(push 1)
(declare-fun ControlFlow (Int Int) Int)
(declare-fun $generated@@242 () T@U)
(declare-fun $generated@@243 () T@U)
(declare-fun $generated@@244 () T@U)
(declare-fun $generated@@245 () T@U)
(declare-fun $generated@@246 (T@U) Bool)
(declare-fun $generated@@247 () T@U)
(declare-fun $generated@@248 (T@U) Bool)
(declare-fun $generated@@249 () T@U)
(declare-fun $generated@@250 () T@U)
(declare-fun $generated@@251 () T@U)
(declare-fun $generated@@252 () T@U)
(declare-fun $generated@@253 () T@U)
(declare-fun $generated@@254 () T@U)
(declare-fun $generated@@255 () T@U)
(assert  (and (and (and (and (and (and (and (and (and (and (and (= (type $generated@@242) $generated@@47) (= (type $generated@@243) $generated@@47)) (= (type $generated@@244) $generated@@47)) (= (type $generated@@245) $generated@@49)) (= (type $generated@@250) $generated@@49)) (= (type $generated@@251) ($generated@@77 $generated@@76 $generated@@78))) (= (type $generated@@249) ($generated@@77 $generated@@76 $generated@@78))) (= (type $generated@@247) ($generated@@77 $generated@@76 $generated@@78))) (= (type $generated@@252) ($generated@@86 $generated@@76 $generated@@4))) (= (type $generated@@253) $generated@@76)) (= (type $generated@@254) ($generated@@77 $generated@@76 $generated@@78))) (= (type $generated@@255) ($generated@@79 $generated@@4))))
(set-option :timeout 0)
(set-option :rlimit 0)
(assert (not
 (=> (= (ControlFlow 0 0) 9) (let (($generated@@256  (and (=> (= (ControlFlow 0 2) (- 0 3)) (=> ($generated@@50 $generated@@242 $generated@@243 $generated@@244 $generated@@245) (or ($generated@@45 $generated@@242 $generated@@243 $generated@@244 ($generated@@46 $generated@@195) $generated@@245) (=> (< 0 ($generated@@51 $generated@@245)) ($generated@@45 $generated@@242 $generated@@243 $generated@@244 ($generated@@46 ($generated@@46 $generated@@195)) ($generated@@52 $generated@@245 ($generated@@53 1))))))) (=> (=> ($generated@@50 $generated@@242 $generated@@243 $generated@@244 $generated@@245) (or ($generated@@45 $generated@@242 $generated@@243 $generated@@244 ($generated@@46 $generated@@195) $generated@@245) (=> (< 0 ($generated@@51 $generated@@245)) ($generated@@45 $generated@@242 $generated@@243 $generated@@244 ($generated@@46 ($generated@@46 $generated@@195)) ($generated@@52 $generated@@245 ($generated@@53 1)))))) (=> (= (ControlFlow 0 2) (- 0 1)) (=> ($generated@@50 $generated@@242 $generated@@243 $generated@@244 $generated@@245) (or ($generated@@45 $generated@@242 $generated@@243 $generated@@244 ($generated@@46 $generated@@195) $generated@@245) (=> (= ($generated@@54 0) ($generated@@51 $generated@@245)) (forall (($generated@@257 T@U) ) (!  (=> (and (= (type $generated@@257) $generated@@49) ($generated@@55 $generated@@257 $generated@@245)) ($generated@@45 $generated@@242 $generated@@243 $generated@@244 ($generated@@46 ($generated@@46 $generated@@195)) $generated@@257))
 :pattern ( ($generated@@45 $generated@@242 $generated@@243 $generated@@244 ($generated@@46 ($generated@@46 $generated@@195)) $generated@@257))
))))))))))
(let (($generated@@258  (=> (<= ($generated@@51 $generated@@245) 0) (=> (and (and (and ($generated@@246 $generated@@247) ($generated@@248 $generated@@247)) (= $generated@@249 $generated@@247)) (and (forall (($generated@@259 T@U) ) (!  (=> (and (= (type $generated@@259) $generated@@49) ($generated@@55 $generated@@259 $generated@@245)) ($generated@@45 $generated@@242 $generated@@243 $generated@@244 ($generated@@46 $generated@@195) $generated@@259))
 :no-pattern (type $generated@@259)
 :no-pattern ($generated $generated@@259)
 :no-pattern ($generated@@0 $generated@@259)
)) (= (ControlFlow 0 7) 2))) $generated@@256))))
(let (($generated@@260  (=> (< 0 ($generated@@51 $generated@@245)) (and (=> (= (ControlFlow 0 4) (- 0 6)) ($generated@@191 ($generated@@187 ($generated@@53 1)))) (=> ($generated@@191 ($generated@@187 ($generated@@53 1))) (and (=> (= (ControlFlow 0 4) (- 0 5)) (<= ($generated@@51 ($generated@@187 ($generated@@53 1))) ($generated@@51 $generated@@245))) (=> (<= ($generated@@51 ($generated@@187 ($generated@@53 1))) ($generated@@51 $generated@@245)) (=> (= $generated@@250 ($generated@@52 $generated@@245 ($generated@@53 1))) (=> (and (and (and ($generated@@246 $generated@@251) ($generated@@248 $generated@@251)) ($generated@@50 $generated@@242 $generated@@243 $generated@@244 $generated@@250)) (and (and ($generated@@50 $generated@@242 $generated@@243 $generated@@244 $generated@@250) (and ($generated@@45 $generated@@242 $generated@@243 $generated@@244 ($generated@@46 $generated@@195) $generated@@250) (and (=> (< 0 ($generated@@51 $generated@@250)) ($generated@@45 $generated@@242 $generated@@243 $generated@@244 ($generated@@46 $generated@@195) ($generated@@52 $generated@@250 ($generated@@53 1)))) (=> (= ($generated@@54 0) ($generated@@51 $generated@@250)) (forall (($generated@@261 T@U) ) (!  (=> (and (= (type $generated@@261) $generated@@49) ($generated@@55 $generated@@261 $generated@@250)) ($generated@@45 $generated@@242 $generated@@243 $generated@@244 ($generated@@46 $generated@@195) $generated@@261))
 :pattern ( ($generated@@45 $generated@@242 $generated@@243 $generated@@244 ($generated@@46 $generated@@195) $generated@@261))
)))))) (and (= $generated@@249 $generated@@251) (= (ControlFlow 0 4) 2)))) $generated@@256)))))))))
(let (($generated@@262  (=> (= $generated@@252 ($generated@@74 $generated@@253 $generated@@254 $generated@@255 false)) (=> (and (and ($generated@@246 $generated@@249) ($generated@@248 $generated@@249)) (and (= $generated@@254 $generated@@249) (forall (($generated@@263 T@U) ) (!  (=> (= (type $generated@@263) $generated@@49) (=> (and ($generated@@0 ($generated@@187 ($generated@@11 true))) ($generated@@55 $generated@@263 $generated@@245)) ($generated@@45 $generated@@242 $generated@@243 $generated@@244 ($generated@@46 $generated@@195) $generated@@263)))
 :no-pattern (type $generated@@263)
 :no-pattern ($generated $generated@@263)
 :no-pattern ($generated@@0 $generated@@263)
)))) (and (=> (= (ControlFlow 0 8) 4) $generated@@260) (=> (= (ControlFlow 0 8) 7) $generated@@258))))))
(let (($generated@@264  (=> (and (and ($generated@@246 $generated@@254) ($generated@@248 $generated@@254)) (and (= 2 $generated@@44) (= (ControlFlow 0 9) 8))) $generated@@262)))
$generated@@264))))))
))
(check-sat)
(pop 1)
; Valid
(get-info :rlimit)
(reset)
(set-option :rlimit 0)
; did a full reset
(reset)
(set-option :print-success false)
(set-info :smt-lib-version 2.6)
(set-option :auto_config false)
(set-option :type_check true)
(set-option :smt.case_split 3)
(set-option :smt.qi.eager_threshold 100)
(set-option :smt.delay_units true)
(set-option :smt.arith.solver 2)
(set-option :smt.mbqi false)
(set-option :model.compact false)
(set-option :model.v2 true)
(set-option :pp.bv_literals false)
; done setting options


(set-info :category "industrial")
(declare-sort |T@U| 0)
(declare-sort |T@T| 0)
(declare-fun real_pow (Real Real) Real)
(declare-fun UOrdering2 (|T@U| |T@U|) Bool)
(declare-fun UOrdering3 (|T@T| |T@U| |T@U|) Bool)
(declare-fun tickleBool (Bool) Bool)
(assert (and (tickleBool true) (tickleBool false)))
(declare-fun $generated (T@U) Int)
(declare-fun $generated@@0 (T@U) Bool)
(declare-fun $generated@@1 (T@T) Int)
(declare-fun $generated@@2 () T@T)
(declare-fun $generated@@3 () T@T)
(declare-fun $generated@@4 () T@T)
(declare-fun $generated@@5 () T@T)
(declare-fun $generated@@6 () T@T)
(declare-fun $generated@@7 () T@T)
(declare-fun $generated@@8 (Int) T@U)
(declare-fun type (T@U) T@T)
(declare-fun $generated@@9 (Real) T@U)
(declare-fun $generated@@10 (T@U) Real)
(declare-fun $generated@@11 (Bool) T@U)
(declare-fun $generated@@12 (RoundingMode) T@U)
(declare-fun $generated@@13 (T@U) RoundingMode)
(declare-fun $generated@@14 (String) T@U)
(declare-fun $generated@@15 (T@U) String)
(declare-fun $generated@@16 ((RegEx String)) T@U)
(declare-fun $generated@@17 (T@U) (RegEx String))
(declare-fun $generated@@44 () T@U)
(declare-fun $generated@@45 () T@U)
(declare-fun $generated@@46 () T@U)
(declare-fun $generated@@47 () T@U)
(declare-fun $generated@@48 () T@U)
(declare-fun $generated@@49 () T@T)
(declare-fun $generated@@50 () T@T)
(declare-fun $generated@@51 (T@T) T@T)
(declare-fun $generated@@52 (T@T) T@T)
(declare-fun $generated@@55 (T@U) T@U)
(declare-fun $generated@@57 () Int)
(declare-fun $generated@@58 (T@U T@U T@U T@U T@U) Bool)
(declare-fun $generated@@59 (T@U) T@U)
(declare-fun $generated@@60 () T@T)
(declare-fun $generated@@61 () T@T)
(declare-fun $generated@@62 (T@U T@U T@U T@U) Bool)
(declare-fun $generated@@63 (T@U) Int)
(declare-fun $generated@@64 (T@U T@U) T@U)
(declare-fun $generated@@65 (Int) T@U)
(declare-fun $generated@@66 (Int) Int)
(declare-fun $generated@@67 (T@U T@U) Bool)
(declare-fun $generated@@85 (T@U T@U T@U) T@U)
(declare-fun $generated@@86 (T@U T@U T@U Bool) T@U)
(declare-fun $generated@@87 () T@T)
(declare-fun $generated@@88 (T@T T@T) T@T)
(declare-fun $generated@@89 () T@T)
(declare-fun $generated@@90 (T@U T@U) T@U)
(declare-fun $generated@@91 (T@U T@U) T@U)
(declare-fun $generated@@92 (T@T) T@T)
(declare-fun $generated@@93 (T@T) T@T)
(declare-fun $generated@@94 (T@U T@U T@U) T@U)
(declare-fun $generated@@95 (T@U T@U T@U) T@U)
(declare-fun $generated@@96 (T@T T@T) T@T)
(declare-fun $generated@@97 (T@T) T@T)
(declare-fun $generated@@98 (T@T) T@T)
(declare-fun $generated@@99 (T@U T@U T@U T@U) T@U)
(declare-fun $generated@@195 (T@U) T@U)
(declare-fun $generated@@199 (T@U) Bool)
(declare-fun $generated@@202 (T@U) T@U)
(declare-fun $generated@@203 () T@U)
(declare-fun $generated@@231 (T@U) T@U)
(declare-fun $generated@@232 (T@T T@U) T@U)
(assert  (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (= ($generated@@1 $generated@@2) 0) (= ($generated@@1 $generated@@3) 1)) (= ($generated@@1 $generated@@4) 2)) (= ($generated@@1 $generated@@5) 3)) (= ($generated@@1 $generated@@6) 4)) (= ($generated@@1 $generated@@7) 5)) (forall (($generated@@18 Int) ) (! (= ($generated ($generated@@8 $generated@@18)) $generated@@18)
 :pattern ( ($generated@@8 $generated@@18))
))) (forall (($generated@@19 T@U) ) (!  (=> (= (type $generated@@19) $generated@@2) (= ($generated@@8 ($generated $generated@@19)) $generated@@19))
 :pattern ( ($generated $generated@@19))
))) (forall (($generated@@20 Int) ) (! (= (type ($generated@@8 $generated@@20)) $generated@@2)
 :pattern ( ($generated@@8 $generated@@20))
))) (forall (($generated@@21 Real) ) (! (= ($generated@@10 ($generated@@9 $generated@@21)) $generated@@21)
 :pattern ( ($generated@@9 $generated@@21))
))) (forall (($generated@@22 T@U) ) (!  (=> (= (type $generated@@22) $generated@@3) (= ($generated@@9 ($generated@@10 $generated@@22)) $generated@@22))
 :pattern ( ($generated@@10 $generated@@22))
))) (forall (($generated@@23 Real) ) (! (= (type ($generated@@9 $generated@@23)) $generated@@3)
 :pattern ( ($generated@@9 $generated@@23))
))) (forall (($generated@@24 Bool) ) (! (= ($generated@@0 ($generated@@11 $generated@@24)) $generated@@24)
 :pattern ( ($generated@@11 $generated@@24))
))) (forall (($generated@@25 T@U) ) (!  (=> (= (type $generated@@25) $generated@@4) (= ($generated@@11 ($generated@@0 $generated@@25)) $generated@@25))
 :pattern ( ($generated@@0 $generated@@25))
))) (forall (($generated@@26 Bool) ) (! (= (type ($generated@@11 $generated@@26)) $generated@@4)
 :pattern ( ($generated@@11 $generated@@26))
))) (forall (($generated@@27 RoundingMode) ) (! (= ($generated@@13 ($generated@@12 $generated@@27)) $generated@@27)
 :pattern ( ($generated@@12 $generated@@27))
))) (forall (($generated@@28 T@U) ) (!  (=> (= (type $generated@@28) $generated@@5) (= ($generated@@12 ($generated@@13 $generated@@28)) $generated@@28))
 :pattern ( ($generated@@13 $generated@@28))
))) (forall (($generated@@29 RoundingMode) ) (! (= (type ($generated@@12 $generated@@29)) $generated@@5)
 :pattern ( ($generated@@12 $generated@@29))
))) (forall (($generated@@30 String) ) (! (= ($generated@@15 ($generated@@14 $generated@@30)) $generated@@30)
 :pattern ( ($generated@@14 $generated@@30))
))) (forall (($generated@@31 T@U) ) (!  (=> (= (type $generated@@31) $generated@@6) (= ($generated@@14 ($generated@@15 $generated@@31)) $generated@@31))
 :pattern ( ($generated@@15 $generated@@31))
))) (forall (($generated@@32 String) ) (! (= (type ($generated@@14 $generated@@32)) $generated@@6)
 :pattern ( ($generated@@14 $generated@@32))
))) (forall (($generated@@33 (RegEx String)) ) (! (= ($generated@@17 ($generated@@16 $generated@@33)) $generated@@33)
 :pattern ( ($generated@@16 $generated@@33))
))) (forall (($generated@@34 T@U) ) (!  (=> (= (type $generated@@34) $generated@@7) (= ($generated@@16 ($generated@@17 $generated@@34)) $generated@@34))
 :pattern ( ($generated@@17 $generated@@34))
))) (forall (($generated@@35 (RegEx String)) ) (! (= (type ($generated@@16 $generated@@35)) $generated@@7)
 :pattern ( ($generated@@16 $generated@@35))
))))
(assert (forall (($generated@@36 T@U) ) (! (UOrdering2 $generated@@36 $generated@@36)
 :no-pattern ($generated $generated@@36)
 :no-pattern ($generated@@0 $generated@@36)
)))
(assert (forall (($generated@@37 T@U) ($generated@@38 T@U) ($generated@@39 T@U) ) (! (let (($generated@@40 (type $generated@@37)))
 (=> (and (and (= (type $generated@@38) $generated@@40) (= (type $generated@@39) $generated@@40)) (and (UOrdering2 $generated@@37 $generated@@38) (UOrdering2 $generated@@38 $generated@@39))) (UOrdering2 $generated@@37 $generated@@39)))
 :pattern ( (UOrdering2 $generated@@37 $generated@@38) (UOrdering2 $generated@@38 $generated@@39))
)))
(assert (forall (($generated@@41 T@U) ($generated@@42 T@U) ) (! (let (($generated@@43 (type $generated@@41)))
 (=> (= (type $generated@@42) $generated@@43) (=> (and (UOrdering2 $generated@@41 $generated@@42) (UOrdering2 $generated@@42 $generated@@41)) (= $generated@@41 $generated@@42))))
 :pattern ( (UOrdering2 $generated@@41 $generated@@42) (UOrdering2 $generated@@42 $generated@@41))
)))
(assert  (and (and (and (and (and (and (and (and (= ($generated@@1 $generated@@49) 6) (= (type $generated@@44) $generated@@49)) (= (type $generated@@45) $generated@@49)) (= ($generated@@1 $generated@@50) 7)) (= (type $generated@@46) $generated@@50)) (= (type $generated@@47) $generated@@50)) (forall (($generated@@53 T@T) ) (= ($generated@@1 ($generated@@51 $generated@@53)) 8))) (forall (($generated@@54 T@T) ) (! (= ($generated@@52 ($generated@@51 $generated@@54)) $generated@@54)
 :pattern ( ($generated@@51 $generated@@54))
))) (= (type $generated@@48) ($generated@@51 $generated@@4))))
(assert (distinct $generated@@44 $generated@@45 $generated@@46 $generated@@47 $generated@@48)
)
(assert (forall (($generated@@56 T@U) ) (! (= (type ($generated@@55 $generated@@56)) $generated@@50)
 :pattern ( ($generated@@55 $generated@@56))
)))
(assert (= ($generated@@55 $generated@@44) $generated@@46))
(assert (= ($generated@@55 $generated@@45) $generated@@47))
(assert  (and (and (and (and (= ($generated@@1 $generated@@60) 9) (= ($generated@@1 $generated@@61) 10)) (forall (($generated@@68 T@U) ) (! (= (type ($generated@@59 $generated@@68)) $generated@@60)
 :pattern ( ($generated@@59 $generated@@68))
))) (forall (($generated@@69 T@U) ($generated@@70 T@U) ) (! (= (type ($generated@@64 $generated@@69 $generated@@70)) $generated@@61)
 :pattern ( ($generated@@64 $generated@@69 $generated@@70))
))) (forall (($generated@@71 Int) ) (! (= (type ($generated@@65 $generated@@71)) $generated@@61)
 :pattern ( ($generated@@65 $generated@@71))
))))
(assert  (=> (<= 1 $generated@@57) (forall (($generated@@72 T@U) ($generated@@73 T@U) ($generated@@74 T@U) ($generated@@75 T@U) ($generated@@76 T@U) ) (!  (=> (and (and (and (and (and (= (type $generated@@72) $generated@@49) (= (type $generated@@73) $generated@@49)) (= (type $generated@@74) $generated@@49)) (= (type $generated@@75) $generated@@60)) (= (type $generated@@76) $generated@@61)) (or ($generated@@62 $generated@@72 $generated@@73 $generated@@74 $generated@@76) (not (= 1 $generated@@57)))) (and (and (=> (< 0 ($generated@@63 $generated@@76)) ($generated@@62 $generated@@73 $generated@@72 $generated@@74 ($generated@@64 $generated@@76 ($generated@@65 1)))) (=> (=> (< 0 ($generated@@63 $generated@@76)) ($generated@@58 $generated@@73 $generated@@72 $generated@@74 $generated@@75 ($generated@@64 $generated@@76 ($generated@@65 1)))) (=> (= ($generated@@66 0) ($generated@@63 $generated@@76)) (forall (($generated@@77 T@U) ) (!  (=> (and (= (type $generated@@77) $generated@@61) ($generated@@67 $generated@@77 $generated@@76)) ($generated@@62 $generated@@72 $generated@@73 $generated@@74 $generated@@77))
 :pattern ( ($generated@@58 $generated@@72 $generated@@73 $generated@@74 $generated@@75 $generated@@77))
))))) (= ($generated@@58 $generated@@72 $generated@@73 $generated@@74 ($generated@@59 $generated@@75) $generated@@76)  (and (=> (< 0 ($generated@@63 $generated@@76)) ($generated@@58 $generated@@73 $generated@@72 $generated@@74 $generated@@75 ($generated@@64 $generated@@76 ($generated@@65 1)))) (=> (= ($generated@@66 0) ($generated@@63 $generated@@76)) (forall (($generated@@78 T@U) ) (!  (=> (and (= (type $generated@@78) $generated@@61) ($generated@@67 $generated@@78 $generated@@76)) ($generated@@58 $generated@@72 $generated@@73 $generated@@74 $generated@@75 $generated@@78))
 :pattern ( ($generated@@58 $generated@@72 $generated@@73 $generated@@74 $generated@@75 $generated@@78))
)))))))
 :pattern ( ($generated@@58 $generated@@72 $generated@@73 $generated@@74 ($generated@@59 $generated@@75) $generated@@76))
))))
(assert (forall (($generated@@79 T@U) ($generated@@80 T@U) ($generated@@81 T@U) ) (!  (=> (and (and (and (= (type $generated@@79) $generated@@61) (= (type $generated@@80) $generated@@61)) (= (type $generated@@81) $generated@@61)) (and ($generated@@67 $generated@@79 $generated@@80) ($generated@@67 $generated@@80 $generated@@81))) ($generated@@67 $generated@@79 $generated@@81))
 :pattern ( ($generated@@67 $generated@@79 $generated@@80) ($generated@@67 $generated@@80 $generated@@81))
 :pattern ( ($generated@@67 $generated@@79 $generated@@80) ($generated@@67 $generated@@79 $generated@@81))
)))
(assert (forall (($generated@@82 T@U) ($generated@@83 Int) ($generated@@84 Int) ) (!  (=> (= (type $generated@@82) $generated@@61) (=> (and (and (<= 0 $generated@@83) (<= 0 $generated@@84)) (<= (+ $generated@@83 $generated@@84) ($generated@@63 $generated@@82))) (= ($generated@@64 ($generated@@64 $generated@@82 ($generated@@65 $generated@@83)) ($generated@@65 $generated@@84)) ($generated@@64 $generated@@82 ($generated@@65 (+ $generated@@83 $generated@@84))))))
 :pattern ( ($generated@@64 ($generated@@64 $generated@@82 ($generated@@65 $generated@@83)) ($generated@@65 $generated@@84)))
)))
(assert  (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (forall (($generated@@100 T@T) ($generated@@101 T@T) ) (= ($generated@@1 ($generated@@88 $generated@@100 $generated@@101)) 11)) (forall (($generated@@102 T@T) ($generated@@103 T@T) ) (! (= ($generated@@92 ($generated@@88 $generated@@102 $generated@@103)) $generated@@102)
 :pattern ( ($generated@@88 $generated@@102 $generated@@103))
))) (forall (($generated@@104 T@T) ($generated@@105 T@T) ) (! (= ($generated@@93 ($generated@@88 $generated@@104 $generated@@105)) $generated@@105)
 :pattern ( ($generated@@88 $generated@@104 $generated@@105))
))) (forall (($generated@@106 T@U) ($generated@@107 T@U) ) (! (let (($generated@@108 ($generated@@93 (type $generated@@106))))
(= (type ($generated@@91 $generated@@106 $generated@@107)) $generated@@108))
 :pattern ( ($generated@@91 $generated@@106 $generated@@107))
))) (forall (($generated@@109 T@U) ($generated@@110 T@U) ($generated@@111 T@U) ) (! (let (($generated@@112 (type $generated@@111)))
(let (($generated@@113 (type $generated@@110)))
(= (type ($generated@@94 $generated@@109 $generated@@110 $generated@@111)) ($generated@@88 $generated@@113 $generated@@112))))
 :pattern ( ($generated@@94 $generated@@109 $generated@@110 $generated@@111))
))) (forall (($generated@@114 T@U) ($generated@@115 T@U) ($generated@@116 T@U) ) (! (let (($generated@@117 ($generated@@93 (type $generated@@114))))
 (=> (= (type $generated@@116) $generated@@117) (= ($generated@@91 ($generated@@94 $generated@@114 $generated@@115 $generated@@116) $generated@@115) $generated@@116)))
 :weight 0
))) (and (forall (($generated@@118 T@U) ($generated@@119 T@U) ($generated@@120 T@U) ($generated@@121 T@U) ) (!  (or (= $generated@@120 $generated@@121) (= ($generated@@91 ($generated@@94 $generated@@119 $generated@@120 $generated@@118) $generated@@121) ($generated@@91 $generated@@119 $generated@@121)))
 :weight 0
)) (forall (($generated@@122 T@U) ($generated@@123 T@U) ($generated@@124 T@U) ($generated@@125 T@U) ) (!  (or true (= ($generated@@91 ($generated@@94 $generated@@123 $generated@@124 $generated@@122) $generated@@125) ($generated@@91 $generated@@123 $generated@@125)))
 :weight 0
)))) (forall (($generated@@126 T@U) ($generated@@127 T@U) ) (! (let (($generated@@128 ($generated@@52 (type $generated@@127))))
(= (type ($generated@@90 $generated@@126 $generated@@127)) $generated@@128))
 :pattern ( ($generated@@90 $generated@@126 $generated@@127))
))) (= ($generated@@1 $generated@@89) 12)) (forall (($generated@@129 T@U) ($generated@@130 T@U) ($generated@@131 T@U) ) (! (= (type ($generated@@95 $generated@@129 $generated@@130 $generated@@131)) $generated@@89)
 :pattern ( ($generated@@95 $generated@@129 $generated@@130 $generated@@131))
))) (forall (($generated@@132 T@U) ($generated@@133 T@U) ($generated@@134 T@U) ) (! (let (($generated@@135 ($generated@@52 (type $generated@@133))))
 (=> (= (type $generated@@134) $generated@@135) (= ($generated@@90 ($generated@@95 $generated@@132 $generated@@133 $generated@@134) $generated@@133) $generated@@134)))
 :weight 0
))) (and (forall (($generated@@136 T@U) ($generated@@137 T@U) ($generated@@138 T@U) ($generated@@139 T@U) ) (!  (or (= $generated@@138 $generated@@139) (= ($generated@@90 ($generated@@95 $generated@@137 $generated@@138 $generated@@136) $generated@@139) ($generated@@90 $generated@@137 $generated@@139)))
 :weight 0
)) (forall (($generated@@140 T@U) ($generated@@141 T@U) ($generated@@142 T@U) ($generated@@143 T@U) ) (!  (or true (= ($generated@@90 ($generated@@95 $generated@@141 $generated@@142 $generated@@140) $generated@@143) ($generated@@90 $generated@@141 $generated@@143)))
 :weight 0
)))) (= ($generated@@1 $generated@@87) 13)) (forall (($generated@@144 T@T) ($generated@@145 T@T) ) (= ($generated@@1 ($generated@@96 $generated@@144 $generated@@145)) 14))) (forall (($generated@@146 T@T) ($generated@@147 T@T) ) (! (= ($generated@@97 ($generated@@96 $generated@@146 $generated@@147)) $generated@@146)
 :pattern ( ($generated@@96 $generated@@146 $generated@@147))
))) (forall (($generated@@148 T@T) ($generated@@149 T@T) ) (! (= ($generated@@98 ($generated@@96 $generated@@148 $generated@@149)) $generated@@149)
 :pattern ( ($generated@@96 $generated@@148 $generated@@149))
))) (forall (($generated@@150 T@U) ($generated@@151 T@U) ($generated@@152 T@U) ) (! (let (($generated@@153 ($generated@@98 (type $generated@@150))))
(= (type ($generated@@85 $generated@@150 $generated@@151 $generated@@152)) $generated@@153))
 :pattern ( ($generated@@85 $generated@@150 $generated@@151 $generated@@152))
))) (forall (($generated@@154 T@U) ($generated@@155 T@U) ($generated@@156 T@U) ($generated@@157 T@U) ) (! (let (($generated@@158 (type $generated@@157)))
(let (($generated@@159 (type $generated@@155)))
(= (type ($generated@@99 $generated@@154 $generated@@155 $generated@@156 $generated@@157)) ($generated@@96 $generated@@159 $generated@@158))))
 :pattern ( ($generated@@99 $generated@@154 $generated@@155 $generated@@156 $generated@@157))
))) (forall (($generated@@160 T@U) ($generated@@161 T@U) ($generated@@162 T@U) ($generated@@163 T@U) ) (! (let (($generated@@164 ($generated@@98 (type $generated@@160))))
 (=> (= (type $generated@@163) $generated@@164) (= ($generated@@85 ($generated@@99 $generated@@160 $generated@@161 $generated@@162 $generated@@163) $generated@@161 $generated@@162) $generated@@163)))
 :weight 0
))) (and (and (forall (($generated@@165 T@U) ($generated@@166 T@U) ($generated@@167 T@U) ($generated@@168 T@U) ($generated@@169 T@U) ($generated@@170 T@U) ) (!  (or (= $generated@@167 $generated@@169) (= ($generated@@85 ($generated@@99 $generated@@166 $generated@@167 $generated@@168 $generated@@165) $generated@@169 $generated@@170) ($generated@@85 $generated@@166 $generated@@169 $generated@@170)))
 :weight 0
)) (forall (($generated@@171 T@U) ($generated@@172 T@U) ($generated@@173 T@U) ($generated@@174 T@U) ($generated@@175 T@U) ($generated@@176 T@U) ) (!  (or (= $generated@@174 $generated@@176) (= ($generated@@85 ($generated@@99 $generated@@172 $generated@@173 $generated@@174 $generated@@171) $generated@@175 $generated@@176) ($generated@@85 $generated@@172 $generated@@175 $generated@@176)))
 :weight 0
))) (forall (($generated@@177 T@U) ($generated@@178 T@U) ($generated@@179 T@U) ($generated@@180 T@U) ($generated@@181 T@U) ($generated@@182 T@U) ) (!  (or true (= ($generated@@85 ($generated@@99 $generated@@178 $generated@@179 $generated@@180 $generated@@177) $generated@@181 $generated@@182) ($generated@@85 $generated@@178 $generated@@181 $generated@@182)))
 :weight 0
)))) (forall (($generated@@183 T@U) ($generated@@184 T@U) ($generated@@185 T@U) ($generated@@186 Bool) ) (! (= (type ($generated@@86 $generated@@183 $generated@@184 $generated@@185 $generated@@186)) ($generated@@96 $generated@@87 $generated@@4))
 :pattern ( ($generated@@86 $generated@@183 $generated@@184 $generated@@185 $generated@@186))
))))
(assert (forall (($generated@@187 T@U) ($generated@@188 T@U) ($generated@@189 T@U) ($generated@@190 Bool) ($generated@@191 T@U) ($generated@@192 T@U) ) (! (let (($generated@@193 ($generated@@52 (type $generated@@192))))
 (=> (and (and (and (and (= (type $generated@@187) $generated@@87) (= (type $generated@@188) ($generated@@88 $generated@@87 $generated@@89))) (= (type $generated@@189) ($generated@@51 $generated@@4))) (= (type $generated@@191) $generated@@87)) (= (type $generated@@192) ($generated@@51 $generated@@193))) (= ($generated@@0 ($generated@@85 ($generated@@86 $generated@@187 $generated@@188 $generated@@189 $generated@@190) $generated@@191 $generated@@192))  (=> (and (not (= $generated@@191 $generated@@187)) ($generated@@0 ($generated@@90 ($generated@@91 $generated@@188 $generated@@191) $generated@@189))) $generated@@190))))
 :pattern ( ($generated@@85 ($generated@@86 $generated@@187 $generated@@188 $generated@@189 $generated@@190) $generated@@191 $generated@@192))
)))
(assert (forall (($generated@@194 Int) ) (! (= ($generated@@66 $generated@@194) $generated@@194)
 :pattern ( ($generated@@66 $generated@@194))
)))
(assert (forall (($generated@@196 T@U) ) (! (let (($generated@@197 (type $generated@@196)))
(= (type ($generated@@195 $generated@@196)) $generated@@197))
 :pattern ( ($generated@@195 $generated@@196))
)))
(assert (forall (($generated@@198 T@U) ) (! (= ($generated@@195 $generated@@198) $generated@@198)
 :pattern ( ($generated@@195 $generated@@198))
)))
(assert (forall (($generated@@200 T@U) ($generated@@201 T@U) ) (!  (=> (and (and (= (type $generated@@200) $generated@@61) (= (type $generated@@201) $generated@@61)) (and ($generated@@199 $generated@@201) (<= ($generated@@63 $generated@@201) ($generated@@63 $generated@@200)))) (and (= ($generated@@199 ($generated@@64 $generated@@200 $generated@@201)) ($generated@@199 $generated@@200)) (= ($generated@@63 ($generated@@64 $generated@@200 $generated@@201)) (- ($generated@@63 $generated@@200) ($generated@@63 $generated@@201)))))
 :pattern ( ($generated@@64 $generated@@200 $generated@@201))
)))
(assert  (and (forall (($generated@@204 T@U) ) (! (= (type ($generated@@202 $generated@@204)) $generated@@60)
 :pattern ( ($generated@@202 $generated@@204))
)) (= (type $generated@@203) $generated@@60)))
(assert (forall (($generated@@205 T@U) ($generated@@206 T@U) ($generated@@207 T@U) ($generated@@208 T@U) ($generated@@209 T@U) ) (!  (=> (and (and (and (and (= (type $generated@@205) $generated@@49) (= (type $generated@@206) $generated@@49)) (= (type $generated@@207) $generated@@49)) (= (type $generated@@208) $generated@@60)) (= (type $generated@@209) $generated@@61)) (= ($generated@@58 $generated@@205 $generated@@206 $generated@@207 $generated@@208 $generated@@209) ($generated@@58 $generated@@205 $generated@@206 $generated@@207 $generated@@203 $generated@@209)))
 :pattern ( ($generated@@58 $generated@@205 $generated@@206 $generated@@207 ($generated@@202 $generated@@208) $generated@@209))
)))
(assert (forall (($generated@@210 Int) ) (!  (=> (<= 0 $generated@@210) (and ($generated@@199 ($generated@@65 $generated@@210)) (= ($generated@@63 ($generated@@65 $generated@@210)) $generated@@210)))
 :pattern ( ($generated@@65 $generated@@210))
)))
(assert (forall (($generated@@211 T@U) ($generated@@212 T@U) ($generated@@213 T@U) ($generated@@214 T@U) ($generated@@215 T@U) ) (!  (=> (and (and (and (and (= (type $generated@@211) $generated@@49) (= (type $generated@@212) $generated@@49)) (= (type $generated@@213) $generated@@49)) (= (type $generated@@214) $generated@@60)) (= (type $generated@@215) $generated@@61)) (= ($generated@@58 $generated@@211 $generated@@212 $generated@@213 ($generated@@59 $generated@@214) $generated@@215) ($generated@@58 $generated@@211 $generated@@212 $generated@@213 $generated@@214 $generated@@215)))
 :pattern ( ($generated@@58 $generated@@211 $generated@@212 $generated@@213 ($generated@@59 $generated@@214) $generated@@215))
)))
(assert  (=> (<= 1 $generated@@57) (forall (($generated@@216 T@U) ($generated@@217 T@U) ($generated@@218 T@U) ($generated@@219 T@U) ($generated@@220 T@U) ) (!  (=> (and (and (and (and (and (= (type $generated@@216) $generated@@49) (= (type $generated@@217) $generated@@49)) (= (type $generated@@218) $generated@@49)) (= (type $generated@@219) $generated@@60)) (= (type $generated@@220) $generated@@61)) (= $generated@@220 ($generated@@65 0))) ($generated@@58 $generated@@216 $generated@@217 $generated@@218 $generated@@219 $generated@@220))
 :pattern ( ($generated@@58 $generated@@216 $generated@@217 $generated@@218 $generated@@219 $generated@@220))
))))
(assert (forall (($generated@@221 T@U) ($generated@@222 T@U) ) (!  (=> (and (= (type $generated@@221) $generated@@61) (= (type $generated@@222) $generated@@61)) (or (or ($generated@@67 $generated@@221 $generated@@222) (= $generated@@221 $generated@@222)) ($generated@@67 $generated@@222 $generated@@221)))
 :pattern ( ($generated@@67 $generated@@221 $generated@@222) ($generated@@67 $generated@@222 $generated@@221))
)))
(assert (forall (($generated@@223 T@U) ) (!  (=> (= (type $generated@@223) $generated@@61) (<= 0 ($generated@@63 $generated@@223)))
 :pattern ( ($generated@@63 $generated@@223))
)))
(assert  (=> (<= 1 $generated@@57) (forall (($generated@@224 T@U) ($generated@@225 T@U) ($generated@@226 T@U) ($generated@@227 T@U) ($generated@@228 T@U) ) (!  (=> (and (and (and (and (and (= (type $generated@@224) $generated@@49) (= (type $generated@@225) $generated@@49)) (= (type $generated@@226) $generated@@49)) (= (type $generated@@227) $generated@@60)) (= (type $generated@@228) $generated@@61)) (or ($generated@@62 $generated@@224 $generated@@225 $generated@@226 ($generated@@195 $generated@@228)) (not (= 1 $generated@@57)))) (and (and (=> (< 0 ($generated@@63 $generated@@228)) ($generated@@62 $generated@@225 $generated@@224 $generated@@226 ($generated@@64 $generated@@228 ($generated@@65 1)))) (=> (=> (< 0 ($generated@@63 $generated@@228)) ($generated@@58 $generated@@225 $generated@@224 $generated@@226 ($generated@@59 $generated@@227) ($generated@@64 $generated@@228 ($generated@@65 1)))) (=> (= ($generated@@66 0) ($generated@@63 $generated@@228)) (forall (($generated@@229 T@U) ) (!  (=> (and (= (type $generated@@229) $generated@@61) ($generated@@67 $generated@@229 $generated@@228)) ($generated@@62 $generated@@224 $generated@@225 $generated@@226 $generated@@229))
 :pattern ( ($generated@@58 $generated@@224 $generated@@225 $generated@@226 ($generated@@59 $generated@@227) $generated@@229))
))))) (= ($generated@@58 $generated@@224 $generated@@225 $generated@@226 ($generated@@59 $generated@@227) ($generated@@195 $generated@@228))  (and (=> (< 0 ($generated@@63 $generated@@228)) ($generated@@58 $generated@@225 $generated@@224 $generated@@226 ($generated@@59 $generated@@227) ($generated@@64 $generated@@228 ($generated@@65 1)))) (=> (= ($generated@@66 0) ($generated@@63 $generated@@228)) (forall (($generated@@230 T@U) ) (!  (=> (and (= (type $generated@@230) $generated@@61) ($generated@@67 $generated@@230 $generated@@228)) ($generated@@58 $generated@@224 $generated@@225 $generated@@226 ($generated@@59 $generated@@227) $generated@@230))
 :pattern ( ($generated@@58 $generated@@224 $generated@@225 $generated@@226 ($generated@@59 $generated@@227) $generated@@230))
)))))))
 :weight 3
 :pattern ( ($generated@@58 $generated@@224 $generated@@225 $generated@@226 ($generated@@59 $generated@@227) ($generated@@195 $generated@@228)))
))))
(assert  (and (forall (($generated@@233 T@U) ) (! (= (type ($generated@@231 $generated@@233)) $generated@@61)
 :pattern ( ($generated@@231 $generated@@233))
)) (forall (($generated@@234 T@T) ($generated@@235 T@U) ) (! (= (type ($generated@@232 $generated@@234 $generated@@235)) $generated@@234)
 :pattern ( ($generated@@232 $generated@@234 $generated@@235))
))))
(assert (forall (($generated@@236 T@U) ) (! (let (($generated@@237 (type $generated@@236)))
(= ($generated@@232 $generated@@237 ($generated@@231 $generated@@236)) $generated@@236))
 :pattern ( ($generated@@231 $generated@@236))
)))
(assert (forall (($generated@@238 T@U) ($generated@@239 T@U) ) (!  (=> (and (= (type $generated@@238) $generated@@61) (= (type $generated@@239) $generated@@61)) (and (and (and (=> ($generated@@67 $generated@@238 $generated@@239) (not (= $generated@@238 $generated@@239))) (=> (and ($generated@@199 $generated@@238) (not ($generated@@199 $generated@@239))) ($generated@@67 $generated@@238 $generated@@239))) (=> (and ($generated@@199 $generated@@238) ($generated@@199 $generated@@239)) (= ($generated@@67 $generated@@238 $generated@@239) (< ($generated@@63 $generated@@238) ($generated@@63 $generated@@239))))) (=> (and ($generated@@67 $generated@@238 $generated@@239) ($generated@@199 $generated@@239)) ($generated@@199 $generated@@238))))
 :pattern ( ($generated@@67 $generated@@238 $generated@@239))
)))
(assert  (=> (<= 1 $generated@@57) (forall (($generated@@240 T@U) ($generated@@241 T@U) ($generated@@242 T@U) ($generated@@243 T@U) ($generated@@244 T@U) ) (!  (=> (and (and (and (and (and (= (type $generated@@240) $generated@@49) (= (type $generated@@241) $generated@@49)) (= (type $generated@@242) $generated@@49)) (= (type $generated@@243) $generated@@60)) (= (type $generated@@244) $generated@@61)) (or ($generated@@62 $generated@@240 $generated@@241 $generated@@242 $generated@@244) (not (= 1 $generated@@57)))) true)
 :pattern ( ($generated@@58 $generated@@240 $generated@@241 $generated@@242 $generated@@243 $generated@@244))
))))
(assert (forall (($generated@@245 T@U) ) (!  (=> (and (= (type $generated@@245) $generated@@61) ($generated@@199 $generated@@245)) (= $generated@@245 ($generated@@65 ($generated@@63 $generated@@245))))
 :pattern ( ($generated@@63 $generated@@245))
 :pattern ( ($generated@@199 $generated@@245))
)))
(assert (forall (($generated@@246 T@U) ($generated@@247 T@U) ) (!  (=> (and (and (= (type $generated@@246) $generated@@61) (= (type $generated@@247) $generated@@61)) (and ($generated@@199 $generated@@247) (<= ($generated@@63 $generated@@247) ($generated@@63 $generated@@246)))) (or (and (= $generated@@247 ($generated@@65 0)) (= ($generated@@64 $generated@@246 $generated@@247) $generated@@246)) (and (not (= $generated@@247 ($generated@@65 0))) ($generated@@67 ($generated@@64 $generated@@246 $generated@@247) $generated@@246))))
 :pattern ( ($generated@@64 $generated@@246 $generated@@247))
)))
(assert (forall (($generated@@248 Int) ) (! (= ($generated@@231 ($generated@@8 ($generated@@66 $generated@@248))) ($generated@@195 ($generated@@231 ($generated@@8 $generated@@248))))
 :pattern ( ($generated@@231 ($generated@@8 ($generated@@66 $generated@@248))))
)))
(assert (forall (($generated@@249 T@U) ) (! (= ($generated@@231 ($generated@@195 $generated@@249)) ($generated@@195 ($generated@@231 $generated@@249)))
 :pattern ( ($generated@@231 ($generated@@195 $generated@@249)))
)))
(push 1)
(declare-fun ControlFlow (Int Int) Int)
(declare-fun $generated@@250 () T@U)
(declare-fun $generated@@251 () T@U)
(declare-fun $generated@@252 () T@U)
(declare-fun $generated@@253 (T@U) Bool)
(declare-fun $generated@@254 () T@U)
(declare-fun $generated@@255 (T@U) Bool)
(declare-fun $generated@@256 () T@U)
(declare-fun $generated@@257 () T@U)
(declare-fun $generated@@258 () T@U)
(declare-fun $generated@@259 () T@U)
(declare-fun $generated@@260 () T@U)
(assert  (and (and (and (and (and (and (and (and (= (type $generated@@250) $generated@@49) (= (type $generated@@251) $generated@@49)) (= (type $generated@@252) $generated@@61)) (= (type $generated@@257) $generated@@61)) (= (type $generated@@258) ($generated@@88 $generated@@87 $generated@@89))) (= (type $generated@@256) ($generated@@88 $generated@@87 $generated@@89))) (= (type $generated@@254) ($generated@@88 $generated@@87 $generated@@89))) (= (type $generated@@259) ($generated@@96 $generated@@87 $generated@@4))) (= (type $generated@@260) $generated@@87)))
(set-option :timeout 0)
(set-option :rlimit 0)
(assert (not
 (=> (= (ControlFlow 0 0) 9) (let (($generated@@261  (and (=> (= (ControlFlow 0 2) (- 0 3)) (=> ($generated@@62 $generated@@250 $generated@@44 $generated@@251 $generated@@252) (or ($generated@@58 $generated@@250 $generated@@44 $generated@@251 ($generated@@59 $generated@@203) $generated@@252) (=> (< 0 ($generated@@63 $generated@@252)) ($generated@@58 $generated@@44 $generated@@250 $generated@@251 ($generated@@59 ($generated@@59 $generated@@203)) ($generated@@64 $generated@@252 ($generated@@65 1))))))) (=> (=> ($generated@@62 $generated@@250 $generated@@44 $generated@@251 $generated@@252) (or ($generated@@58 $generated@@250 $generated@@44 $generated@@251 ($generated@@59 $generated@@203) $generated@@252) (=> (< 0 ($generated@@63 $generated@@252)) ($generated@@58 $generated@@44 $generated@@250 $generated@@251 ($generated@@59 ($generated@@59 $generated@@203)) ($generated@@64 $generated@@252 ($generated@@65 1)))))) (=> (= (ControlFlow 0 2) (- 0 1)) (=> ($generated@@62 $generated@@250 $generated@@44 $generated@@251 $generated@@252) (or ($generated@@58 $generated@@250 $generated@@44 $generated@@251 ($generated@@59 $generated@@203) $generated@@252) (=> (= ($generated@@66 0) ($generated@@63 $generated@@252)) (forall (($generated@@262 T@U) ) (!  (=> (and (= (type $generated@@262) $generated@@61) ($generated@@67 $generated@@262 $generated@@252)) ($generated@@58 $generated@@250 $generated@@44 $generated@@251 ($generated@@59 ($generated@@59 $generated@@203)) $generated@@262))
 :pattern ( ($generated@@58 $generated@@250 $generated@@44 $generated@@251 ($generated@@59 ($generated@@59 $generated@@203)) $generated@@262))
))))))))))
(let (($generated@@263  (=> (<= ($generated@@63 $generated@@252) 0) (=> (and (and (and ($generated@@253 $generated@@254) ($generated@@255 $generated@@254)) (= $generated@@256 $generated@@254)) (and (forall (($generated@@264 T@U) ) (!  (=> (and (= (type $generated@@264) $generated@@61) ($generated@@67 $generated@@264 $generated@@252)) ($generated@@58 $generated@@250 $generated@@44 $generated@@251 ($generated@@59 $generated@@203) $generated@@264))
 :no-pattern (type $generated@@264)
 :no-pattern ($generated $generated@@264)
 :no-pattern ($generated@@0 $generated@@264)
)) (= (ControlFlow 0 7) 2))) $generated@@261))))
(let (($generated@@265  (=> (< 0 ($generated@@63 $generated@@252)) (and (=> (= (ControlFlow 0 4) (- 0 6)) ($generated@@199 ($generated@@195 ($generated@@65 1)))) (=> ($generated@@199 ($generated@@195 ($generated@@65 1))) (and (=> (= (ControlFlow 0 4) (- 0 5)) (<= ($generated@@63 ($generated@@195 ($generated@@65 1))) ($generated@@63 $generated@@252))) (=> (<= ($generated@@63 ($generated@@195 ($generated@@65 1))) ($generated@@63 $generated@@252)) (=> (= $generated@@257 ($generated@@64 $generated@@252 ($generated@@65 1))) (=> (and (and (and ($generated@@253 $generated@@258) ($generated@@255 $generated@@258)) ($generated@@62 $generated@@45 $generated@@44 $generated@@251 $generated@@257)) (and (and ($generated@@62 $generated@@45 $generated@@44 $generated@@251 $generated@@257) (and ($generated@@58 $generated@@45 $generated@@44 $generated@@251 ($generated@@59 $generated@@203) $generated@@257) (and (=> (< 0 ($generated@@63 $generated@@257)) ($generated@@58 $generated@@44 $generated@@45 $generated@@251 ($generated@@59 $generated@@203) ($generated@@64 $generated@@257 ($generated@@65 1)))) (=> (= ($generated@@66 0) ($generated@@63 $generated@@257)) (forall (($generated@@266 T@U) ) (!  (=> (and (= (type $generated@@266) $generated@@61) ($generated@@67 $generated@@266 $generated@@257)) ($generated@@58 $generated@@45 $generated@@44 $generated@@251 ($generated@@59 $generated@@203) $generated@@266))
 :pattern ( ($generated@@58 $generated@@45 $generated@@44 $generated@@251 ($generated@@59 $generated@@203) $generated@@266))
)))))) (and (= $generated@@256 $generated@@258) (= (ControlFlow 0 4) 2)))) $generated@@261)))))))))
(let (($generated@@267  (=> (= $generated@@259 ($generated@@86 $generated@@260 $generated@@256 $generated@@48 false)) (and (=> (= (ControlFlow 0 8) 4) $generated@@265) (=> (= (ControlFlow 0 8) 7) $generated@@263)))))
(let (($generated@@268  (=> (and (and ($generated@@253 $generated@@256) ($generated@@255 $generated@@256)) (and (= 2 $generated@@57) (= (ControlFlow 0 9) 8))) $generated@@267)))
$generated@@268))))))
))
(check-sat)
(get-info :reason-unknown)
(assert (not (= (ControlFlow 0 2) (- 3))))
(check-sat)
(pop 1)
; Invalid
(get-info :rlimit)
(reset)
(set-option :rlimit 0)
; did a full reset
(reset)
(set-option :print-success false)
(set-info :smt-lib-version 2.6)
(set-option :auto_config false)
(set-option :type_check true)
(set-option :smt.case_split 3)
(set-option :smt.qi.eager_threshold 100)
(set-option :smt.delay_units true)
(set-option :smt.arith.solver 2)
(set-option :smt.mbqi false)
(set-option :model.compact false)
(set-option :model.v2 true)
(set-option :pp.bv_literals false)
; done setting options


(set-info :category "industrial")
(declare-sort |T@U| 0)
(declare-sort |T@T| 0)
(declare-fun real_pow (Real Real) Real)
(declare-fun UOrdering2 (|T@U| |T@U|) Bool)
(declare-fun UOrdering3 (|T@T| |T@U| |T@U|) Bool)
(declare-fun tickleBool (Bool) Bool)
(assert (and (tickleBool true) (tickleBool false)))
(declare-fun $generated (T@U) Int)
(declare-fun $generated@@0 (T@U) Bool)
(declare-fun $generated@@1 (T@T) Int)
(declare-fun $generated@@2 () T@T)
(declare-fun $generated@@3 () T@T)
(declare-fun $generated@@4 () T@T)
(declare-fun $generated@@5 () T@T)
(declare-fun $generated@@6 () T@T)
(declare-fun $generated@@7 () T@T)
(declare-fun $generated@@8 (Int) T@U)
(declare-fun type (T@U) T@T)
(declare-fun $generated@@9 (Real) T@U)
(declare-fun $generated@@10 (T@U) Real)
(declare-fun $generated@@11 (Bool) T@U)
(declare-fun $generated@@12 (RoundingMode) T@U)
(declare-fun $generated@@13 (T@U) RoundingMode)
(declare-fun $generated@@14 (String) T@U)
(declare-fun $generated@@15 (T@U) String)
(declare-fun $generated@@16 ((RegEx String)) T@U)
(declare-fun $generated@@17 (T@U) (RegEx String))
(declare-fun $generated@@44 () T@U)
(declare-fun $generated@@45 () T@U)
(declare-fun $generated@@46 () T@U)
(declare-fun $generated@@47 () T@U)
(declare-fun $generated@@48 () T@U)
(declare-fun $generated@@49 () T@T)
(declare-fun $generated@@50 () T@T)
(declare-fun $generated@@51 (T@T) T@T)
(declare-fun $generated@@52 (T@T) T@T)
(declare-fun $generated@@55 (T@U) T@U)
(declare-fun $generated@@57 () Int)
(declare-fun $generated@@58 (T@U T@U T@U T@U T@U) Bool)
(declare-fun $generated@@59 (T@U) T@U)
(declare-fun $generated@@60 () T@T)
(declare-fun $generated@@61 () T@T)
(declare-fun $generated@@62 (T@U T@U T@U T@U) Bool)
(declare-fun $generated@@63 (T@U) Int)
(declare-fun $generated@@64 (T@U T@U) T@U)
(declare-fun $generated@@65 (Int) T@U)
(declare-fun $generated@@66 (Int) Int)
(declare-fun $generated@@67 (T@U T@U) Bool)
(declare-fun $generated@@85 (T@U T@U T@U) T@U)
(declare-fun $generated@@86 (T@U T@U T@U Bool) T@U)
(declare-fun $generated@@87 () T@T)
(declare-fun $generated@@88 (T@T T@T) T@T)
(declare-fun $generated@@89 () T@T)
(declare-fun $generated@@90 (T@U T@U) T@U)
(declare-fun $generated@@91 (T@U T@U) T@U)
(declare-fun $generated@@92 (T@T) T@T)
(declare-fun $generated@@93 (T@T) T@T)
(declare-fun $generated@@94 (T@U T@U T@U) T@U)
(declare-fun $generated@@95 (T@U T@U T@U) T@U)
(declare-fun $generated@@96 (T@T T@T) T@T)
(declare-fun $generated@@97 (T@T) T@T)
(declare-fun $generated@@98 (T@T) T@T)
(declare-fun $generated@@99 (T@U T@U T@U T@U) T@U)
(declare-fun $generated@@195 (T@U) T@U)
(declare-fun $generated@@199 (T@U) Bool)
(declare-fun $generated@@202 (T@U) T@U)
(declare-fun $generated@@203 () T@U)
(declare-fun $generated@@231 (T@U) T@U)
(declare-fun $generated@@232 (T@T T@U) T@U)
(assert  (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (= ($generated@@1 $generated@@2) 0) (= ($generated@@1 $generated@@3) 1)) (= ($generated@@1 $generated@@4) 2)) (= ($generated@@1 $generated@@5) 3)) (= ($generated@@1 $generated@@6) 4)) (= ($generated@@1 $generated@@7) 5)) (forall (($generated@@18 Int) ) (! (= ($generated ($generated@@8 $generated@@18)) $generated@@18)
 :pattern ( ($generated@@8 $generated@@18))
))) (forall (($generated@@19 T@U) ) (!  (=> (= (type $generated@@19) $generated@@2) (= ($generated@@8 ($generated $generated@@19)) $generated@@19))
 :pattern ( ($generated $generated@@19))
))) (forall (($generated@@20 Int) ) (! (= (type ($generated@@8 $generated@@20)) $generated@@2)
 :pattern ( ($generated@@8 $generated@@20))
))) (forall (($generated@@21 Real) ) (! (= ($generated@@10 ($generated@@9 $generated@@21)) $generated@@21)
 :pattern ( ($generated@@9 $generated@@21))
))) (forall (($generated@@22 T@U) ) (!  (=> (= (type $generated@@22) $generated@@3) (= ($generated@@9 ($generated@@10 $generated@@22)) $generated@@22))
 :pattern ( ($generated@@10 $generated@@22))
))) (forall (($generated@@23 Real) ) (! (= (type ($generated@@9 $generated@@23)) $generated@@3)
 :pattern ( ($generated@@9 $generated@@23))
))) (forall (($generated@@24 Bool) ) (! (= ($generated@@0 ($generated@@11 $generated@@24)) $generated@@24)
 :pattern ( ($generated@@11 $generated@@24))
))) (forall (($generated@@25 T@U) ) (!  (=> (= (type $generated@@25) $generated@@4) (= ($generated@@11 ($generated@@0 $generated@@25)) $generated@@25))
 :pattern ( ($generated@@0 $generated@@25))
))) (forall (($generated@@26 Bool) ) (! (= (type ($generated@@11 $generated@@26)) $generated@@4)
 :pattern ( ($generated@@11 $generated@@26))
))) (forall (($generated@@27 RoundingMode) ) (! (= ($generated@@13 ($generated@@12 $generated@@27)) $generated@@27)
 :pattern ( ($generated@@12 $generated@@27))
))) (forall (($generated@@28 T@U) ) (!  (=> (= (type $generated@@28) $generated@@5) (= ($generated@@12 ($generated@@13 $generated@@28)) $generated@@28))
 :pattern ( ($generated@@13 $generated@@28))
))) (forall (($generated@@29 RoundingMode) ) (! (= (type ($generated@@12 $generated@@29)) $generated@@5)
 :pattern ( ($generated@@12 $generated@@29))
))) (forall (($generated@@30 String) ) (! (= ($generated@@15 ($generated@@14 $generated@@30)) $generated@@30)
 :pattern ( ($generated@@14 $generated@@30))
))) (forall (($generated@@31 T@U) ) (!  (=> (= (type $generated@@31) $generated@@6) (= ($generated@@14 ($generated@@15 $generated@@31)) $generated@@31))
 :pattern ( ($generated@@15 $generated@@31))
))) (forall (($generated@@32 String) ) (! (= (type ($generated@@14 $generated@@32)) $generated@@6)
 :pattern ( ($generated@@14 $generated@@32))
))) (forall (($generated@@33 (RegEx String)) ) (! (= ($generated@@17 ($generated@@16 $generated@@33)) $generated@@33)
 :pattern ( ($generated@@16 $generated@@33))
))) (forall (($generated@@34 T@U) ) (!  (=> (= (type $generated@@34) $generated@@7) (= ($generated@@16 ($generated@@17 $generated@@34)) $generated@@34))
 :pattern ( ($generated@@17 $generated@@34))
))) (forall (($generated@@35 (RegEx String)) ) (! (= (type ($generated@@16 $generated@@35)) $generated@@7)
 :pattern ( ($generated@@16 $generated@@35))
))))
(assert (forall (($generated@@36 T@U) ) (! (UOrdering2 $generated@@36 $generated@@36)
 :no-pattern ($generated $generated@@36)
 :no-pattern ($generated@@0 $generated@@36)
)))
(assert (forall (($generated@@37 T@U) ($generated@@38 T@U) ($generated@@39 T@U) ) (! (let (($generated@@40 (type $generated@@37)))
 (=> (and (and (= (type $generated@@38) $generated@@40) (= (type $generated@@39) $generated@@40)) (and (UOrdering2 $generated@@37 $generated@@38) (UOrdering2 $generated@@38 $generated@@39))) (UOrdering2 $generated@@37 $generated@@39)))
 :pattern ( (UOrdering2 $generated@@37 $generated@@38) (UOrdering2 $generated@@38 $generated@@39))
)))
(assert (forall (($generated@@41 T@U) ($generated@@42 T@U) ) (! (let (($generated@@43 (type $generated@@41)))
 (=> (= (type $generated@@42) $generated@@43) (=> (and (UOrdering2 $generated@@41 $generated@@42) (UOrdering2 $generated@@42 $generated@@41)) (= $generated@@41 $generated@@42))))
 :pattern ( (UOrdering2 $generated@@41 $generated@@42) (UOrdering2 $generated@@42 $generated@@41))
)))
(assert  (and (and (and (and (and (and (and (and (= ($generated@@1 $generated@@49) 6) (= (type $generated@@44) $generated@@49)) (= (type $generated@@45) $generated@@49)) (= ($generated@@1 $generated@@50) 7)) (= (type $generated@@46) $generated@@50)) (= (type $generated@@47) $generated@@50)) (forall (($generated@@53 T@T) ) (= ($generated@@1 ($generated@@51 $generated@@53)) 8))) (forall (($generated@@54 T@T) ) (! (= ($generated@@52 ($generated@@51 $generated@@54)) $generated@@54)
 :pattern ( ($generated@@51 $generated@@54))
))) (= (type $generated@@48) ($generated@@51 $generated@@4))))
(assert (distinct $generated@@44 $generated@@45 $generated@@46 $generated@@47 $generated@@48)
)
(assert (forall (($generated@@56 T@U) ) (! (= (type ($generated@@55 $generated@@56)) $generated@@50)
 :pattern ( ($generated@@55 $generated@@56))
)))
(assert (= ($generated@@55 $generated@@44) $generated@@46))
(assert (= ($generated@@55 $generated@@45) $generated@@47))
(assert  (and (and (and (and (= ($generated@@1 $generated@@60) 9) (= ($generated@@1 $generated@@61) 10)) (forall (($generated@@68 T@U) ) (! (= (type ($generated@@59 $generated@@68)) $generated@@60)
 :pattern ( ($generated@@59 $generated@@68))
))) (forall (($generated@@69 T@U) ($generated@@70 T@U) ) (! (= (type ($generated@@64 $generated@@69 $generated@@70)) $generated@@61)
 :pattern ( ($generated@@64 $generated@@69 $generated@@70))
))) (forall (($generated@@71 Int) ) (! (= (type ($generated@@65 $generated@@71)) $generated@@61)
 :pattern ( ($generated@@65 $generated@@71))
))))
(assert  (=> (<= 1 $generated@@57) (forall (($generated@@72 T@U) ($generated@@73 T@U) ($generated@@74 T@U) ($generated@@75 T@U) ($generated@@76 T@U) ) (!  (=> (and (and (and (and (and (= (type $generated@@72) $generated@@49) (= (type $generated@@73) $generated@@49)) (= (type $generated@@74) $generated@@49)) (= (type $generated@@75) $generated@@60)) (= (type $generated@@76) $generated@@61)) (or ($generated@@62 $generated@@72 $generated@@73 $generated@@74 $generated@@76) (not (= 1 $generated@@57)))) (and (and (=> (< 0 ($generated@@63 $generated@@76)) ($generated@@62 $generated@@73 $generated@@72 $generated@@74 ($generated@@64 $generated@@76 ($generated@@65 1)))) (=> (=> (< 0 ($generated@@63 $generated@@76)) ($generated@@58 $generated@@73 $generated@@72 $generated@@74 $generated@@75 ($generated@@64 $generated@@76 ($generated@@65 1)))) (=> (= ($generated@@66 0) ($generated@@63 $generated@@76)) (forall (($generated@@77 T@U) ) (!  (=> (and (= (type $generated@@77) $generated@@61) ($generated@@67 $generated@@77 $generated@@76)) ($generated@@62 $generated@@72 $generated@@73 $generated@@74 $generated@@77))
 :pattern ( ($generated@@58 $generated@@72 $generated@@73 $generated@@74 $generated@@75 $generated@@77))
))))) (= ($generated@@58 $generated@@72 $generated@@73 $generated@@74 ($generated@@59 $generated@@75) $generated@@76)  (and (=> (< 0 ($generated@@63 $generated@@76)) ($generated@@58 $generated@@73 $generated@@72 $generated@@74 $generated@@75 ($generated@@64 $generated@@76 ($generated@@65 1)))) (=> (= ($generated@@66 0) ($generated@@63 $generated@@76)) (forall (($generated@@78 T@U) ) (!  (=> (and (= (type $generated@@78) $generated@@61) ($generated@@67 $generated@@78 $generated@@76)) ($generated@@58 $generated@@72 $generated@@73 $generated@@74 $generated@@75 $generated@@78))
 :pattern ( ($generated@@58 $generated@@72 $generated@@73 $generated@@74 $generated@@75 $generated@@78))
)))))))
 :pattern ( ($generated@@58 $generated@@72 $generated@@73 $generated@@74 ($generated@@59 $generated@@75) $generated@@76))
))))
(assert (forall (($generated@@79 T@U) ($generated@@80 T@U) ($generated@@81 T@U) ) (!  (=> (and (and (and (= (type $generated@@79) $generated@@61) (= (type $generated@@80) $generated@@61)) (= (type $generated@@81) $generated@@61)) (and ($generated@@67 $generated@@79 $generated@@80) ($generated@@67 $generated@@80 $generated@@81))) ($generated@@67 $generated@@79 $generated@@81))
 :pattern ( ($generated@@67 $generated@@79 $generated@@80) ($generated@@67 $generated@@80 $generated@@81))
 :pattern ( ($generated@@67 $generated@@79 $generated@@80) ($generated@@67 $generated@@79 $generated@@81))
)))
(assert (forall (($generated@@82 T@U) ($generated@@83 Int) ($generated@@84 Int) ) (!  (=> (= (type $generated@@82) $generated@@61) (=> (and (and (<= 0 $generated@@83) (<= 0 $generated@@84)) (<= (+ $generated@@83 $generated@@84) ($generated@@63 $generated@@82))) (= ($generated@@64 ($generated@@64 $generated@@82 ($generated@@65 $generated@@83)) ($generated@@65 $generated@@84)) ($generated@@64 $generated@@82 ($generated@@65 (+ $generated@@83 $generated@@84))))))
 :pattern ( ($generated@@64 ($generated@@64 $generated@@82 ($generated@@65 $generated@@83)) ($generated@@65 $generated@@84)))
)))
(assert  (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (forall (($generated@@100 T@T) ($generated@@101 T@T) ) (= ($generated@@1 ($generated@@88 $generated@@100 $generated@@101)) 11)) (forall (($generated@@102 T@T) ($generated@@103 T@T) ) (! (= ($generated@@92 ($generated@@88 $generated@@102 $generated@@103)) $generated@@102)
 :pattern ( ($generated@@88 $generated@@102 $generated@@103))
))) (forall (($generated@@104 T@T) ($generated@@105 T@T) ) (! (= ($generated@@93 ($generated@@88 $generated@@104 $generated@@105)) $generated@@105)
 :pattern ( ($generated@@88 $generated@@104 $generated@@105))
))) (forall (($generated@@106 T@U) ($generated@@107 T@U) ) (! (let (($generated@@108 ($generated@@93 (type $generated@@106))))
(= (type ($generated@@91 $generated@@106 $generated@@107)) $generated@@108))
 :pattern ( ($generated@@91 $generated@@106 $generated@@107))
))) (forall (($generated@@109 T@U) ($generated@@110 T@U) ($generated@@111 T@U) ) (! (let (($generated@@112 (type $generated@@111)))
(let (($generated@@113 (type $generated@@110)))
(= (type ($generated@@94 $generated@@109 $generated@@110 $generated@@111)) ($generated@@88 $generated@@113 $generated@@112))))
 :pattern ( ($generated@@94 $generated@@109 $generated@@110 $generated@@111))
))) (forall (($generated@@114 T@U) ($generated@@115 T@U) ($generated@@116 T@U) ) (! (let (($generated@@117 ($generated@@93 (type $generated@@114))))
 (=> (= (type $generated@@116) $generated@@117) (= ($generated@@91 ($generated@@94 $generated@@114 $generated@@115 $generated@@116) $generated@@115) $generated@@116)))
 :weight 0
))) (and (forall (($generated@@118 T@U) ($generated@@119 T@U) ($generated@@120 T@U) ($generated@@121 T@U) ) (!  (or (= $generated@@120 $generated@@121) (= ($generated@@91 ($generated@@94 $generated@@119 $generated@@120 $generated@@118) $generated@@121) ($generated@@91 $generated@@119 $generated@@121)))
 :weight 0
)) (forall (($generated@@122 T@U) ($generated@@123 T@U) ($generated@@124 T@U) ($generated@@125 T@U) ) (!  (or true (= ($generated@@91 ($generated@@94 $generated@@123 $generated@@124 $generated@@122) $generated@@125) ($generated@@91 $generated@@123 $generated@@125)))
 :weight 0
)))) (forall (($generated@@126 T@U) ($generated@@127 T@U) ) (! (let (($generated@@128 ($generated@@52 (type $generated@@127))))
(= (type ($generated@@90 $generated@@126 $generated@@127)) $generated@@128))
 :pattern ( ($generated@@90 $generated@@126 $generated@@127))
))) (= ($generated@@1 $generated@@89) 12)) (forall (($generated@@129 T@U) ($generated@@130 T@U) ($generated@@131 T@U) ) (! (= (type ($generated@@95 $generated@@129 $generated@@130 $generated@@131)) $generated@@89)
 :pattern ( ($generated@@95 $generated@@129 $generated@@130 $generated@@131))
))) (forall (($generated@@132 T@U) ($generated@@133 T@U) ($generated@@134 T@U) ) (! (let (($generated@@135 ($generated@@52 (type $generated@@133))))
 (=> (= (type $generated@@134) $generated@@135) (= ($generated@@90 ($generated@@95 $generated@@132 $generated@@133 $generated@@134) $generated@@133) $generated@@134)))
 :weight 0
))) (and (forall (($generated@@136 T@U) ($generated@@137 T@U) ($generated@@138 T@U) ($generated@@139 T@U) ) (!  (or (= $generated@@138 $generated@@139) (= ($generated@@90 ($generated@@95 $generated@@137 $generated@@138 $generated@@136) $generated@@139) ($generated@@90 $generated@@137 $generated@@139)))
 :weight 0
)) (forall (($generated@@140 T@U) ($generated@@141 T@U) ($generated@@142 T@U) ($generated@@143 T@U) ) (!  (or true (= ($generated@@90 ($generated@@95 $generated@@141 $generated@@142 $generated@@140) $generated@@143) ($generated@@90 $generated@@141 $generated@@143)))
 :weight 0
)))) (= ($generated@@1 $generated@@87) 13)) (forall (($generated@@144 T@T) ($generated@@145 T@T) ) (= ($generated@@1 ($generated@@96 $generated@@144 $generated@@145)) 14))) (forall (($generated@@146 T@T) ($generated@@147 T@T) ) (! (= ($generated@@97 ($generated@@96 $generated@@146 $generated@@147)) $generated@@146)
 :pattern ( ($generated@@96 $generated@@146 $generated@@147))
))) (forall (($generated@@148 T@T) ($generated@@149 T@T) ) (! (= ($generated@@98 ($generated@@96 $generated@@148 $generated@@149)) $generated@@149)
 :pattern ( ($generated@@96 $generated@@148 $generated@@149))
))) (forall (($generated@@150 T@U) ($generated@@151 T@U) ($generated@@152 T@U) ) (! (let (($generated@@153 ($generated@@98 (type $generated@@150))))
(= (type ($generated@@85 $generated@@150 $generated@@151 $generated@@152)) $generated@@153))
 :pattern ( ($generated@@85 $generated@@150 $generated@@151 $generated@@152))
))) (forall (($generated@@154 T@U) ($generated@@155 T@U) ($generated@@156 T@U) ($generated@@157 T@U) ) (! (let (($generated@@158 (type $generated@@157)))
(let (($generated@@159 (type $generated@@155)))
(= (type ($generated@@99 $generated@@154 $generated@@155 $generated@@156 $generated@@157)) ($generated@@96 $generated@@159 $generated@@158))))
 :pattern ( ($generated@@99 $generated@@154 $generated@@155 $generated@@156 $generated@@157))
))) (forall (($generated@@160 T@U) ($generated@@161 T@U) ($generated@@162 T@U) ($generated@@163 T@U) ) (! (let (($generated@@164 ($generated@@98 (type $generated@@160))))
 (=> (= (type $generated@@163) $generated@@164) (= ($generated@@85 ($generated@@99 $generated@@160 $generated@@161 $generated@@162 $generated@@163) $generated@@161 $generated@@162) $generated@@163)))
 :weight 0
))) (and (and (forall (($generated@@165 T@U) ($generated@@166 T@U) ($generated@@167 T@U) ($generated@@168 T@U) ($generated@@169 T@U) ($generated@@170 T@U) ) (!  (or (= $generated@@167 $generated@@169) (= ($generated@@85 ($generated@@99 $generated@@166 $generated@@167 $generated@@168 $generated@@165) $generated@@169 $generated@@170) ($generated@@85 $generated@@166 $generated@@169 $generated@@170)))
 :weight 0
)) (forall (($generated@@171 T@U) ($generated@@172 T@U) ($generated@@173 T@U) ($generated@@174 T@U) ($generated@@175 T@U) ($generated@@176 T@U) ) (!  (or (= $generated@@174 $generated@@176) (= ($generated@@85 ($generated@@99 $generated@@172 $generated@@173 $generated@@174 $generated@@171) $generated@@175 $generated@@176) ($generated@@85 $generated@@172 $generated@@175 $generated@@176)))
 :weight 0
))) (forall (($generated@@177 T@U) ($generated@@178 T@U) ($generated@@179 T@U) ($generated@@180 T@U) ($generated@@181 T@U) ($generated@@182 T@U) ) (!  (or true (= ($generated@@85 ($generated@@99 $generated@@178 $generated@@179 $generated@@180 $generated@@177) $generated@@181 $generated@@182) ($generated@@85 $generated@@178 $generated@@181 $generated@@182)))
 :weight 0
)))) (forall (($generated@@183 T@U) ($generated@@184 T@U) ($generated@@185 T@U) ($generated@@186 Bool) ) (! (= (type ($generated@@86 $generated@@183 $generated@@184 $generated@@185 $generated@@186)) ($generated@@96 $generated@@87 $generated@@4))
 :pattern ( ($generated@@86 $generated@@183 $generated@@184 $generated@@185 $generated@@186))
))))
(assert (forall (($generated@@187 T@U) ($generated@@188 T@U) ($generated@@189 T@U) ($generated@@190 Bool) ($generated@@191 T@U) ($generated@@192 T@U) ) (! (let (($generated@@193 ($generated@@52 (type $generated@@192))))
 (=> (and (and (and (and (= (type $generated@@187) $generated@@87) (= (type $generated@@188) ($generated@@88 $generated@@87 $generated@@89))) (= (type $generated@@189) ($generated@@51 $generated@@4))) (= (type $generated@@191) $generated@@87)) (= (type $generated@@192) ($generated@@51 $generated@@193))) (= ($generated@@0 ($generated@@85 ($generated@@86 $generated@@187 $generated@@188 $generated@@189 $generated@@190) $generated@@191 $generated@@192))  (=> (and (not (= $generated@@191 $generated@@187)) ($generated@@0 ($generated@@90 ($generated@@91 $generated@@188 $generated@@191) $generated@@189))) $generated@@190))))
 :pattern ( ($generated@@85 ($generated@@86 $generated@@187 $generated@@188 $generated@@189 $generated@@190) $generated@@191 $generated@@192))
)))
(assert (forall (($generated@@194 Int) ) (! (= ($generated@@66 $generated@@194) $generated@@194)
 :pattern ( ($generated@@66 $generated@@194))
)))
(assert (forall (($generated@@196 T@U) ) (! (let (($generated@@197 (type $generated@@196)))
(= (type ($generated@@195 $generated@@196)) $generated@@197))
 :pattern ( ($generated@@195 $generated@@196))
)))
(assert (forall (($generated@@198 T@U) ) (! (= ($generated@@195 $generated@@198) $generated@@198)
 :pattern ( ($generated@@195 $generated@@198))
)))
(assert (forall (($generated@@200 T@U) ($generated@@201 T@U) ) (!  (=> (and (and (= (type $generated@@200) $generated@@61) (= (type $generated@@201) $generated@@61)) (and ($generated@@199 $generated@@201) (<= ($generated@@63 $generated@@201) ($generated@@63 $generated@@200)))) (and (= ($generated@@199 ($generated@@64 $generated@@200 $generated@@201)) ($generated@@199 $generated@@200)) (= ($generated@@63 ($generated@@64 $generated@@200 $generated@@201)) (- ($generated@@63 $generated@@200) ($generated@@63 $generated@@201)))))
 :pattern ( ($generated@@64 $generated@@200 $generated@@201))
)))
(assert  (and (forall (($generated@@204 T@U) ) (! (= (type ($generated@@202 $generated@@204)) $generated@@60)
 :pattern ( ($generated@@202 $generated@@204))
)) (= (type $generated@@203) $generated@@60)))
(assert (forall (($generated@@205 T@U) ($generated@@206 T@U) ($generated@@207 T@U) ($generated@@208 T@U) ($generated@@209 T@U) ) (!  (=> (and (and (and (and (= (type $generated@@205) $generated@@49) (= (type $generated@@206) $generated@@49)) (= (type $generated@@207) $generated@@49)) (= (type $generated@@208) $generated@@60)) (= (type $generated@@209) $generated@@61)) (= ($generated@@58 $generated@@205 $generated@@206 $generated@@207 $generated@@208 $generated@@209) ($generated@@58 $generated@@205 $generated@@206 $generated@@207 $generated@@203 $generated@@209)))
 :pattern ( ($generated@@58 $generated@@205 $generated@@206 $generated@@207 ($generated@@202 $generated@@208) $generated@@209))
)))
(assert (forall (($generated@@210 Int) ) (!  (=> (<= 0 $generated@@210) (and ($generated@@199 ($generated@@65 $generated@@210)) (= ($generated@@63 ($generated@@65 $generated@@210)) $generated@@210)))
 :pattern ( ($generated@@65 $generated@@210))
)))
(assert (forall (($generated@@211 T@U) ($generated@@212 T@U) ($generated@@213 T@U) ($generated@@214 T@U) ($generated@@215 T@U) ) (!  (=> (and (and (and (and (= (type $generated@@211) $generated@@49) (= (type $generated@@212) $generated@@49)) (= (type $generated@@213) $generated@@49)) (= (type $generated@@214) $generated@@60)) (= (type $generated@@215) $generated@@61)) (= ($generated@@58 $generated@@211 $generated@@212 $generated@@213 ($generated@@59 $generated@@214) $generated@@215) ($generated@@58 $generated@@211 $generated@@212 $generated@@213 $generated@@214 $generated@@215)))
 :pattern ( ($generated@@58 $generated@@211 $generated@@212 $generated@@213 ($generated@@59 $generated@@214) $generated@@215))
)))
(assert  (=> (<= 1 $generated@@57) (forall (($generated@@216 T@U) ($generated@@217 T@U) ($generated@@218 T@U) ($generated@@219 T@U) ($generated@@220 T@U) ) (!  (=> (and (and (and (and (and (= (type $generated@@216) $generated@@49) (= (type $generated@@217) $generated@@49)) (= (type $generated@@218) $generated@@49)) (= (type $generated@@219) $generated@@60)) (= (type $generated@@220) $generated@@61)) (= $generated@@220 ($generated@@65 0))) ($generated@@58 $generated@@216 $generated@@217 $generated@@218 $generated@@219 $generated@@220))
 :pattern ( ($generated@@58 $generated@@216 $generated@@217 $generated@@218 $generated@@219 $generated@@220))
))))
(assert (forall (($generated@@221 T@U) ($generated@@222 T@U) ) (!  (=> (and (= (type $generated@@221) $generated@@61) (= (type $generated@@222) $generated@@61)) (or (or ($generated@@67 $generated@@221 $generated@@222) (= $generated@@221 $generated@@222)) ($generated@@67 $generated@@222 $generated@@221)))
 :pattern ( ($generated@@67 $generated@@221 $generated@@222) ($generated@@67 $generated@@222 $generated@@221))
)))
(assert (forall (($generated@@223 T@U) ) (!  (=> (= (type $generated@@223) $generated@@61) (<= 0 ($generated@@63 $generated@@223)))
 :pattern ( ($generated@@63 $generated@@223))
)))
(assert  (=> (<= 1 $generated@@57) (forall (($generated@@224 T@U) ($generated@@225 T@U) ($generated@@226 T@U) ($generated@@227 T@U) ($generated@@228 T@U) ) (!  (=> (and (and (and (and (and (= (type $generated@@224) $generated@@49) (= (type $generated@@225) $generated@@49)) (= (type $generated@@226) $generated@@49)) (= (type $generated@@227) $generated@@60)) (= (type $generated@@228) $generated@@61)) (or ($generated@@62 $generated@@224 $generated@@225 $generated@@226 ($generated@@195 $generated@@228)) (not (= 1 $generated@@57)))) (and (and (=> (< 0 ($generated@@63 $generated@@228)) ($generated@@62 $generated@@225 $generated@@224 $generated@@226 ($generated@@64 $generated@@228 ($generated@@65 1)))) (=> (=> (< 0 ($generated@@63 $generated@@228)) ($generated@@58 $generated@@225 $generated@@224 $generated@@226 ($generated@@59 $generated@@227) ($generated@@64 $generated@@228 ($generated@@65 1)))) (=> (= ($generated@@66 0) ($generated@@63 $generated@@228)) (forall (($generated@@229 T@U) ) (!  (=> (and (= (type $generated@@229) $generated@@61) ($generated@@67 $generated@@229 $generated@@228)) ($generated@@62 $generated@@224 $generated@@225 $generated@@226 $generated@@229))
 :pattern ( ($generated@@58 $generated@@224 $generated@@225 $generated@@226 ($generated@@59 $generated@@227) $generated@@229))
))))) (= ($generated@@58 $generated@@224 $generated@@225 $generated@@226 ($generated@@59 $generated@@227) ($generated@@195 $generated@@228))  (and (=> (< 0 ($generated@@63 $generated@@228)) ($generated@@58 $generated@@225 $generated@@224 $generated@@226 ($generated@@59 $generated@@227) ($generated@@64 $generated@@228 ($generated@@65 1)))) (=> (= ($generated@@66 0) ($generated@@63 $generated@@228)) (forall (($generated@@230 T@U) ) (!  (=> (and (= (type $generated@@230) $generated@@61) ($generated@@67 $generated@@230 $generated@@228)) ($generated@@58 $generated@@224 $generated@@225 $generated@@226 ($generated@@59 $generated@@227) $generated@@230))
 :pattern ( ($generated@@58 $generated@@224 $generated@@225 $generated@@226 ($generated@@59 $generated@@227) $generated@@230))
)))))))
 :weight 3
 :pattern ( ($generated@@58 $generated@@224 $generated@@225 $generated@@226 ($generated@@59 $generated@@227) ($generated@@195 $generated@@228)))
))))
(assert  (and (forall (($generated@@233 T@U) ) (! (= (type ($generated@@231 $generated@@233)) $generated@@61)
 :pattern ( ($generated@@231 $generated@@233))
)) (forall (($generated@@234 T@T) ($generated@@235 T@U) ) (! (= (type ($generated@@232 $generated@@234 $generated@@235)) $generated@@234)
 :pattern ( ($generated@@232 $generated@@234 $generated@@235))
))))
(assert (forall (($generated@@236 T@U) ) (! (let (($generated@@237 (type $generated@@236)))
(= ($generated@@232 $generated@@237 ($generated@@231 $generated@@236)) $generated@@236))
 :pattern ( ($generated@@231 $generated@@236))
)))
(assert (forall (($generated@@238 T@U) ($generated@@239 T@U) ) (!  (=> (and (= (type $generated@@238) $generated@@61) (= (type $generated@@239) $generated@@61)) (and (and (and (=> ($generated@@67 $generated@@238 $generated@@239) (not (= $generated@@238 $generated@@239))) (=> (and ($generated@@199 $generated@@238) (not ($generated@@199 $generated@@239))) ($generated@@67 $generated@@238 $generated@@239))) (=> (and ($generated@@199 $generated@@238) ($generated@@199 $generated@@239)) (= ($generated@@67 $generated@@238 $generated@@239) (< ($generated@@63 $generated@@238) ($generated@@63 $generated@@239))))) (=> (and ($generated@@67 $generated@@238 $generated@@239) ($generated@@199 $generated@@239)) ($generated@@199 $generated@@238))))
 :pattern ( ($generated@@67 $generated@@238 $generated@@239))
)))
(assert  (=> (<= 1 $generated@@57) (forall (($generated@@240 T@U) ($generated@@241 T@U) ($generated@@242 T@U) ($generated@@243 T@U) ($generated@@244 T@U) ) (!  (=> (and (and (and (and (and (= (type $generated@@240) $generated@@49) (= (type $generated@@241) $generated@@49)) (= (type $generated@@242) $generated@@49)) (= (type $generated@@243) $generated@@60)) (= (type $generated@@244) $generated@@61)) (or ($generated@@62 $generated@@240 $generated@@241 $generated@@242 $generated@@244) (not (= 1 $generated@@57)))) true)
 :pattern ( ($generated@@58 $generated@@240 $generated@@241 $generated@@242 $generated@@243 $generated@@244))
))))
(assert (forall (($generated@@245 T@U) ) (!  (=> (and (= (type $generated@@245) $generated@@61) ($generated@@199 $generated@@245)) (= $generated@@245 ($generated@@65 ($generated@@63 $generated@@245))))
 :pattern ( ($generated@@63 $generated@@245))
 :pattern ( ($generated@@199 $generated@@245))
)))
(assert (forall (($generated@@246 T@U) ($generated@@247 T@U) ) (!  (=> (and (and (= (type $generated@@246) $generated@@61) (= (type $generated@@247) $generated@@61)) (and ($generated@@199 $generated@@247) (<= ($generated@@63 $generated@@247) ($generated@@63 $generated@@246)))) (or (and (= $generated@@247 ($generated@@65 0)) (= ($generated@@64 $generated@@246 $generated@@247) $generated@@246)) (and (not (= $generated@@247 ($generated@@65 0))) ($generated@@67 ($generated@@64 $generated@@246 $generated@@247) $generated@@246))))
 :pattern ( ($generated@@64 $generated@@246 $generated@@247))
)))
(assert (forall (($generated@@248 Int) ) (! (= ($generated@@231 ($generated@@8 ($generated@@66 $generated@@248))) ($generated@@195 ($generated@@231 ($generated@@8 $generated@@248))))
 :pattern ( ($generated@@231 ($generated@@8 ($generated@@66 $generated@@248))))
)))
(assert (forall (($generated@@249 T@U) ) (! (= ($generated@@231 ($generated@@195 $generated@@249)) ($generated@@195 ($generated@@231 $generated@@249)))
 :pattern ( ($generated@@231 ($generated@@195 $generated@@249)))
)))
(push 1)
(declare-fun ControlFlow (Int Int) Int)
(declare-fun $generated@@250 () T@U)
(declare-fun $generated@@251 () T@U)
(declare-fun $generated@@252 () T@U)
(declare-fun $generated@@253 (T@U) Bool)
(declare-fun $generated@@254 () T@U)
(declare-fun $generated@@255 (T@U) Bool)
(declare-fun $generated@@256 () T@U)
(declare-fun $generated@@257 () T@U)
(declare-fun $generated@@258 () T@U)
(declare-fun $generated@@259 () T@U)
(declare-fun $generated@@260 () T@U)
(assert  (and (and (and (and (and (and (and (and (= (type $generated@@250) $generated@@49) (= (type $generated@@251) $generated@@49)) (= (type $generated@@252) $generated@@61)) (= (type $generated@@257) $generated@@61)) (= (type $generated@@258) ($generated@@88 $generated@@87 $generated@@89))) (= (type $generated@@256) ($generated@@88 $generated@@87 $generated@@89))) (= (type $generated@@254) ($generated@@88 $generated@@87 $generated@@89))) (= (type $generated@@259) ($generated@@96 $generated@@87 $generated@@4))) (= (type $generated@@260) $generated@@87)))
(set-option :timeout 0)
(set-option :rlimit 0)
(assert (not
 (=> (= (ControlFlow 0 0) 9) (let (($generated@@261  (and (=> (= (ControlFlow 0 2) (- 0 3)) (=> ($generated@@62 $generated@@250 $generated@@44 $generated@@251 $generated@@252) (or ($generated@@58 $generated@@250 $generated@@44 $generated@@251 ($generated@@59 $generated@@203) $generated@@252) (=> (< 0 ($generated@@63 $generated@@252)) ($generated@@58 $generated@@44 $generated@@250 $generated@@251 ($generated@@59 ($generated@@59 $generated@@203)) ($generated@@64 $generated@@252 ($generated@@65 1))))))) (=> (=> ($generated@@62 $generated@@250 $generated@@44 $generated@@251 $generated@@252) (or ($generated@@58 $generated@@250 $generated@@44 $generated@@251 ($generated@@59 $generated@@203) $generated@@252) (=> (< 0 ($generated@@63 $generated@@252)) ($generated@@58 $generated@@44 $generated@@250 $generated@@251 ($generated@@59 ($generated@@59 $generated@@203)) ($generated@@64 $generated@@252 ($generated@@65 1)))))) (=> (= (ControlFlow 0 2) (- 0 1)) (=> ($generated@@62 $generated@@250 $generated@@44 $generated@@251 $generated@@252) (or ($generated@@58 $generated@@250 $generated@@44 $generated@@251 ($generated@@59 $generated@@203) $generated@@252) (=> (= ($generated@@66 0) ($generated@@63 $generated@@252)) (forall (($generated@@262 T@U) ) (!  (=> (and (= (type $generated@@262) $generated@@61) ($generated@@67 $generated@@262 $generated@@252)) ($generated@@58 $generated@@250 $generated@@44 $generated@@251 ($generated@@59 ($generated@@59 $generated@@203)) $generated@@262))
 :pattern ( ($generated@@58 $generated@@250 $generated@@44 $generated@@251 ($generated@@59 ($generated@@59 $generated@@203)) $generated@@262))
))))))))))
(let (($generated@@263  (=> (<= ($generated@@63 $generated@@252) 0) (=> (and (and (and ($generated@@253 $generated@@254) ($generated@@255 $generated@@254)) (= $generated@@256 $generated@@254)) (and (forall (($generated@@264 T@U) ) (!  (=> (and (= (type $generated@@264) $generated@@61) ($generated@@67 $generated@@264 $generated@@252)) ($generated@@58 $generated@@250 $generated@@44 $generated@@251 ($generated@@59 $generated@@203) $generated@@264))
 :no-pattern (type $generated@@264)
 :no-pattern ($generated $generated@@264)
 :no-pattern ($generated@@0 $generated@@264)
)) (= (ControlFlow 0 7) 2))) $generated@@261))))
(let (($generated@@265  (=> (< 0 ($generated@@63 $generated@@252)) (and (=> (= (ControlFlow 0 4) (- 0 6)) ($generated@@199 ($generated@@195 ($generated@@65 1)))) (=> ($generated@@199 ($generated@@195 ($generated@@65 1))) (and (=> (= (ControlFlow 0 4) (- 0 5)) (<= ($generated@@63 ($generated@@195 ($generated@@65 1))) ($generated@@63 $generated@@252))) (=> (<= ($generated@@63 ($generated@@195 ($generated@@65 1))) ($generated@@63 $generated@@252)) (=> (= $generated@@257 ($generated@@64 $generated@@252 ($generated@@65 1))) (=> (and (and (and ($generated@@253 $generated@@258) ($generated@@255 $generated@@258)) ($generated@@62 $generated@@45 $generated@@44 $generated@@45 $generated@@257)) (and (and ($generated@@62 $generated@@45 $generated@@44 $generated@@45 $generated@@257) (and ($generated@@58 $generated@@45 $generated@@44 $generated@@45 ($generated@@59 $generated@@203) $generated@@257) (and (=> (< 0 ($generated@@63 $generated@@257)) ($generated@@58 $generated@@44 $generated@@45 $generated@@45 ($generated@@59 $generated@@203) ($generated@@64 $generated@@257 ($generated@@65 1)))) (=> (= ($generated@@66 0) ($generated@@63 $generated@@257)) (forall (($generated@@266 T@U) ) (!  (=> (and (= (type $generated@@266) $generated@@61) ($generated@@67 $generated@@266 $generated@@257)) ($generated@@58 $generated@@45 $generated@@44 $generated@@45 ($generated@@59 $generated@@203) $generated@@266))
 :pattern ( ($generated@@58 $generated@@45 $generated@@44 $generated@@45 ($generated@@59 $generated@@203) $generated@@266))
)))))) (and (= $generated@@256 $generated@@258) (= (ControlFlow 0 4) 2)))) $generated@@261)))))))))
(let (($generated@@267  (=> (= $generated@@259 ($generated@@86 $generated@@260 $generated@@256 $generated@@48 false)) (and (=> (= (ControlFlow 0 8) 4) $generated@@265) (=> (= (ControlFlow 0 8) 7) $generated@@263)))))
(let (($generated@@268  (=> (and (and ($generated@@253 $generated@@256) ($generated@@255 $generated@@256)) (and (= 2 $generated@@57) (= (ControlFlow 0 9) 8))) $generated@@267)))
$generated@@268))))))
))
(check-sat)
(get-info :reason-unknown)
(assert (not (= (ControlFlow 0 2) (- 3))))
(check-sat)
(pop 1)
; Invalid
(get-info :rlimit)
(reset)
(set-option :rlimit 0)
; did a full reset
(reset)
(set-option :print-success false)
(set-info :smt-lib-version 2.6)
(set-option :auto_config false)
(set-option :type_check true)
(set-option :smt.case_split 3)
(set-option :smt.qi.eager_threshold 100)
(set-option :smt.delay_units true)
(set-option :smt.arith.solver 2)
(set-option :smt.mbqi false)
(set-option :model.compact false)
(set-option :model.v2 true)
(set-option :pp.bv_literals false)
; done setting options


(set-info :category "industrial")
(declare-sort |T@U| 0)
(declare-sort |T@T| 0)
(declare-fun real_pow (Real Real) Real)
(declare-fun UOrdering2 (|T@U| |T@U|) Bool)
(declare-fun UOrdering3 (|T@T| |T@U| |T@U|) Bool)
(declare-fun tickleBool (Bool) Bool)
(assert (and (tickleBool true) (tickleBool false)))
(declare-fun $generated (T@U) Int)
(declare-fun $generated@@0 (T@U) Bool)
(declare-fun $generated@@1 (T@T) Int)
(declare-fun $generated@@2 () T@T)
(declare-fun $generated@@3 () T@T)
(declare-fun $generated@@4 () T@T)
(declare-fun $generated@@5 () T@T)
(declare-fun $generated@@6 () T@T)
(declare-fun $generated@@7 () T@T)
(declare-fun $generated@@8 (Int) T@U)
(declare-fun type (T@U) T@T)
(declare-fun $generated@@9 (Real) T@U)
(declare-fun $generated@@10 (T@U) Real)
(declare-fun $generated@@11 (Bool) T@U)
(declare-fun $generated@@12 (RoundingMode) T@U)
(declare-fun $generated@@13 (T@U) RoundingMode)
(declare-fun $generated@@14 (String) T@U)
(declare-fun $generated@@15 (T@U) String)
(declare-fun $generated@@16 ((RegEx String)) T@U)
(declare-fun $generated@@17 (T@U) (RegEx String))
(declare-fun $generated@@44 () T@U)
(declare-fun $generated@@45 () T@U)
(declare-fun $generated@@46 () T@U)
(declare-fun $generated@@47 () T@T)
(declare-fun $generated@@48 () T@T)
(declare-fun $generated@@49 (T@T) T@T)
(declare-fun $generated@@50 (T@T) T@T)
(declare-fun $generated@@53 (T@U) T@U)
(declare-fun $generated@@55 () Int)
(declare-fun $generated@@56 (T@U T@U T@U T@U T@U) Bool)
(declare-fun $generated@@57 (T@U) T@U)
(declare-fun $generated@@58 () T@T)
(declare-fun $generated@@59 () T@T)
(declare-fun $generated@@60 (T@U T@U T@U T@U) Bool)
(declare-fun $generated@@61 (T@U) Int)
(declare-fun $generated@@62 (T@U T@U) T@U)
(declare-fun $generated@@63 (Int) T@U)
(declare-fun $generated@@64 (Int) Int)
(declare-fun $generated@@65 (T@U T@U) Bool)
(declare-fun $generated@@83 (T@U T@U T@U) T@U)
(declare-fun $generated@@84 (T@U T@U T@U Bool) T@U)
(declare-fun $generated@@85 () T@T)
(declare-fun $generated@@86 (T@T T@T) T@T)
(declare-fun $generated@@87 () T@T)
(declare-fun $generated@@88 (T@U T@U) T@U)
(declare-fun $generated@@89 (T@U T@U) T@U)
(declare-fun $generated@@90 (T@T) T@T)
(declare-fun $generated@@91 (T@T) T@T)
(declare-fun $generated@@92 (T@U T@U T@U) T@U)
(declare-fun $generated@@93 (T@U T@U T@U) T@U)
(declare-fun $generated@@94 (T@T T@T) T@T)
(declare-fun $generated@@95 (T@T) T@T)
(declare-fun $generated@@96 (T@T) T@T)
(declare-fun $generated@@97 (T@U T@U T@U T@U) T@U)
(declare-fun $generated@@193 (T@U) T@U)
(declare-fun $generated@@197 (T@U) Bool)
(declare-fun $generated@@200 (T@U) T@U)
(declare-fun $generated@@201 () T@U)
(declare-fun $generated@@229 (T@U) T@U)
(declare-fun $generated@@230 (T@T T@U) T@U)
(assert  (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (= ($generated@@1 $generated@@2) 0) (= ($generated@@1 $generated@@3) 1)) (= ($generated@@1 $generated@@4) 2)) (= ($generated@@1 $generated@@5) 3)) (= ($generated@@1 $generated@@6) 4)) (= ($generated@@1 $generated@@7) 5)) (forall (($generated@@18 Int) ) (! (= ($generated ($generated@@8 $generated@@18)) $generated@@18)
 :pattern ( ($generated@@8 $generated@@18))
))) (forall (($generated@@19 T@U) ) (!  (=> (= (type $generated@@19) $generated@@2) (= ($generated@@8 ($generated $generated@@19)) $generated@@19))
 :pattern ( ($generated $generated@@19))
))) (forall (($generated@@20 Int) ) (! (= (type ($generated@@8 $generated@@20)) $generated@@2)
 :pattern ( ($generated@@8 $generated@@20))
))) (forall (($generated@@21 Real) ) (! (= ($generated@@10 ($generated@@9 $generated@@21)) $generated@@21)
 :pattern ( ($generated@@9 $generated@@21))
))) (forall (($generated@@22 T@U) ) (!  (=> (= (type $generated@@22) $generated@@3) (= ($generated@@9 ($generated@@10 $generated@@22)) $generated@@22))
 :pattern ( ($generated@@10 $generated@@22))
))) (forall (($generated@@23 Real) ) (! (= (type ($generated@@9 $generated@@23)) $generated@@3)
 :pattern ( ($generated@@9 $generated@@23))
))) (forall (($generated@@24 Bool) ) (! (= ($generated@@0 ($generated@@11 $generated@@24)) $generated@@24)
 :pattern ( ($generated@@11 $generated@@24))
))) (forall (($generated@@25 T@U) ) (!  (=> (= (type $generated@@25) $generated@@4) (= ($generated@@11 ($generated@@0 $generated@@25)) $generated@@25))
 :pattern ( ($generated@@0 $generated@@25))
))) (forall (($generated@@26 Bool) ) (! (= (type ($generated@@11 $generated@@26)) $generated@@4)
 :pattern ( ($generated@@11 $generated@@26))
))) (forall (($generated@@27 RoundingMode) ) (! (= ($generated@@13 ($generated@@12 $generated@@27)) $generated@@27)
 :pattern ( ($generated@@12 $generated@@27))
))) (forall (($generated@@28 T@U) ) (!  (=> (= (type $generated@@28) $generated@@5) (= ($generated@@12 ($generated@@13 $generated@@28)) $generated@@28))
 :pattern ( ($generated@@13 $generated@@28))
))) (forall (($generated@@29 RoundingMode) ) (! (= (type ($generated@@12 $generated@@29)) $generated@@5)
 :pattern ( ($generated@@12 $generated@@29))
))) (forall (($generated@@30 String) ) (! (= ($generated@@15 ($generated@@14 $generated@@30)) $generated@@30)
 :pattern ( ($generated@@14 $generated@@30))
))) (forall (($generated@@31 T@U) ) (!  (=> (= (type $generated@@31) $generated@@6) (= ($generated@@14 ($generated@@15 $generated@@31)) $generated@@31))
 :pattern ( ($generated@@15 $generated@@31))
))) (forall (($generated@@32 String) ) (! (= (type ($generated@@14 $generated@@32)) $generated@@6)
 :pattern ( ($generated@@14 $generated@@32))
))) (forall (($generated@@33 (RegEx String)) ) (! (= ($generated@@17 ($generated@@16 $generated@@33)) $generated@@33)
 :pattern ( ($generated@@16 $generated@@33))
))) (forall (($generated@@34 T@U) ) (!  (=> (= (type $generated@@34) $generated@@7) (= ($generated@@16 ($generated@@17 $generated@@34)) $generated@@34))
 :pattern ( ($generated@@17 $generated@@34))
))) (forall (($generated@@35 (RegEx String)) ) (! (= (type ($generated@@16 $generated@@35)) $generated@@7)
 :pattern ( ($generated@@16 $generated@@35))
))))
(assert (forall (($generated@@36 T@U) ) (! (UOrdering2 $generated@@36 $generated@@36)
 :no-pattern ($generated $generated@@36)
 :no-pattern ($generated@@0 $generated@@36)
)))
(assert (forall (($generated@@37 T@U) ($generated@@38 T@U) ($generated@@39 T@U) ) (! (let (($generated@@40 (type $generated@@37)))
 (=> (and (and (= (type $generated@@38) $generated@@40) (= (type $generated@@39) $generated@@40)) (and (UOrdering2 $generated@@37 $generated@@38) (UOrdering2 $generated@@38 $generated@@39))) (UOrdering2 $generated@@37 $generated@@39)))
 :pattern ( (UOrdering2 $generated@@37 $generated@@38) (UOrdering2 $generated@@38 $generated@@39))
)))
(assert (forall (($generated@@41 T@U) ($generated@@42 T@U) ) (! (let (($generated@@43 (type $generated@@41)))
 (=> (= (type $generated@@42) $generated@@43) (=> (and (UOrdering2 $generated@@41 $generated@@42) (UOrdering2 $generated@@42 $generated@@41)) (= $generated@@41 $generated@@42))))
 :pattern ( (UOrdering2 $generated@@41 $generated@@42) (UOrdering2 $generated@@42 $generated@@41))
)))
(assert  (and (and (and (and (and (and (= ($generated@@1 $generated@@47) 6) (= (type $generated@@44) $generated@@47)) (= ($generated@@1 $generated@@48) 7)) (= (type $generated@@45) $generated@@48)) (forall (($generated@@51 T@T) ) (= ($generated@@1 ($generated@@49 $generated@@51)) 8))) (forall (($generated@@52 T@T) ) (! (= ($generated@@50 ($generated@@49 $generated@@52)) $generated@@52)
 :pattern ( ($generated@@49 $generated@@52))
))) (= (type $generated@@46) ($generated@@49 $generated@@4))))
(assert (distinct $generated@@44 $generated@@45 $generated@@46)
)
(assert (forall (($generated@@54 T@U) ) (! (= (type ($generated@@53 $generated@@54)) $generated@@48)
 :pattern ( ($generated@@53 $generated@@54))
)))
(assert (= ($generated@@53 $generated@@44) $generated@@45))
(assert  (and (and (and (and (= ($generated@@1 $generated@@58) 9) (= ($generated@@1 $generated@@59) 10)) (forall (($generated@@66 T@U) ) (! (= (type ($generated@@57 $generated@@66)) $generated@@58)
 :pattern ( ($generated@@57 $generated@@66))
))) (forall (($generated@@67 T@U) ($generated@@68 T@U) ) (! (= (type ($generated@@62 $generated@@67 $generated@@68)) $generated@@59)
 :pattern ( ($generated@@62 $generated@@67 $generated@@68))
))) (forall (($generated@@69 Int) ) (! (= (type ($generated@@63 $generated@@69)) $generated@@59)
 :pattern ( ($generated@@63 $generated@@69))
))))
(assert  (=> (<= 1 $generated@@55) (forall (($generated@@70 T@U) ($generated@@71 T@U) ($generated@@72 T@U) ($generated@@73 T@U) ($generated@@74 T@U) ) (!  (=> (and (and (and (and (and (= (type $generated@@70) $generated@@47) (= (type $generated@@71) $generated@@47)) (= (type $generated@@72) $generated@@47)) (= (type $generated@@73) $generated@@58)) (= (type $generated@@74) $generated@@59)) (or ($generated@@60 $generated@@70 $generated@@71 $generated@@72 $generated@@74) (not (= 1 $generated@@55)))) (and (and (=> (< 0 ($generated@@61 $generated@@74)) ($generated@@60 $generated@@71 $generated@@70 $generated@@72 ($generated@@62 $generated@@74 ($generated@@63 1)))) (=> (=> (< 0 ($generated@@61 $generated@@74)) ($generated@@56 $generated@@71 $generated@@70 $generated@@72 $generated@@73 ($generated@@62 $generated@@74 ($generated@@63 1)))) (=> (= ($generated@@64 0) ($generated@@61 $generated@@74)) (forall (($generated@@75 T@U) ) (!  (=> (and (= (type $generated@@75) $generated@@59) ($generated@@65 $generated@@75 $generated@@74)) ($generated@@60 $generated@@70 $generated@@71 $generated@@72 $generated@@75))
 :pattern ( ($generated@@56 $generated@@70 $generated@@71 $generated@@72 $generated@@73 $generated@@75))
))))) (= ($generated@@56 $generated@@70 $generated@@71 $generated@@72 ($generated@@57 $generated@@73) $generated@@74)  (and (=> (< 0 ($generated@@61 $generated@@74)) ($generated@@56 $generated@@71 $generated@@70 $generated@@72 $generated@@73 ($generated@@62 $generated@@74 ($generated@@63 1)))) (=> (= ($generated@@64 0) ($generated@@61 $generated@@74)) (forall (($generated@@76 T@U) ) (!  (=> (and (= (type $generated@@76) $generated@@59) ($generated@@65 $generated@@76 $generated@@74)) ($generated@@56 $generated@@70 $generated@@71 $generated@@72 $generated@@73 $generated@@76))
 :pattern ( ($generated@@56 $generated@@70 $generated@@71 $generated@@72 $generated@@73 $generated@@76))
)))))))
 :pattern ( ($generated@@56 $generated@@70 $generated@@71 $generated@@72 ($generated@@57 $generated@@73) $generated@@74))
))))
(assert (forall (($generated@@77 T@U) ($generated@@78 T@U) ($generated@@79 T@U) ) (!  (=> (and (and (and (= (type $generated@@77) $generated@@59) (= (type $generated@@78) $generated@@59)) (= (type $generated@@79) $generated@@59)) (and ($generated@@65 $generated@@77 $generated@@78) ($generated@@65 $generated@@78 $generated@@79))) ($generated@@65 $generated@@77 $generated@@79))
 :pattern ( ($generated@@65 $generated@@77 $generated@@78) ($generated@@65 $generated@@78 $generated@@79))
 :pattern ( ($generated@@65 $generated@@77 $generated@@78) ($generated@@65 $generated@@77 $generated@@79))
)))
(assert (forall (($generated@@80 T@U) ($generated@@81 Int) ($generated@@82 Int) ) (!  (=> (= (type $generated@@80) $generated@@59) (=> (and (and (<= 0 $generated@@81) (<= 0 $generated@@82)) (<= (+ $generated@@81 $generated@@82) ($generated@@61 $generated@@80))) (= ($generated@@62 ($generated@@62 $generated@@80 ($generated@@63 $generated@@81)) ($generated@@63 $generated@@82)) ($generated@@62 $generated@@80 ($generated@@63 (+ $generated@@81 $generated@@82))))))
 :pattern ( ($generated@@62 ($generated@@62 $generated@@80 ($generated@@63 $generated@@81)) ($generated@@63 $generated@@82)))
)))
(assert  (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (forall (($generated@@98 T@T) ($generated@@99 T@T) ) (= ($generated@@1 ($generated@@86 $generated@@98 $generated@@99)) 11)) (forall (($generated@@100 T@T) ($generated@@101 T@T) ) (! (= ($generated@@90 ($generated@@86 $generated@@100 $generated@@101)) $generated@@100)
 :pattern ( ($generated@@86 $generated@@100 $generated@@101))
))) (forall (($generated@@102 T@T) ($generated@@103 T@T) ) (! (= ($generated@@91 ($generated@@86 $generated@@102 $generated@@103)) $generated@@103)
 :pattern ( ($generated@@86 $generated@@102 $generated@@103))
))) (forall (($generated@@104 T@U) ($generated@@105 T@U) ) (! (let (($generated@@106 ($generated@@91 (type $generated@@104))))
(= (type ($generated@@89 $generated@@104 $generated@@105)) $generated@@106))
 :pattern ( ($generated@@89 $generated@@104 $generated@@105))
))) (forall (($generated@@107 T@U) ($generated@@108 T@U) ($generated@@109 T@U) ) (! (let (($generated@@110 (type $generated@@109)))
(let (($generated@@111 (type $generated@@108)))
(= (type ($generated@@92 $generated@@107 $generated@@108 $generated@@109)) ($generated@@86 $generated@@111 $generated@@110))))
 :pattern ( ($generated@@92 $generated@@107 $generated@@108 $generated@@109))
))) (forall (($generated@@112 T@U) ($generated@@113 T@U) ($generated@@114 T@U) ) (! (let (($generated@@115 ($generated@@91 (type $generated@@112))))
 (=> (= (type $generated@@114) $generated@@115) (= ($generated@@89 ($generated@@92 $generated@@112 $generated@@113 $generated@@114) $generated@@113) $generated@@114)))
 :weight 0
))) (and (forall (($generated@@116 T@U) ($generated@@117 T@U) ($generated@@118 T@U) ($generated@@119 T@U) ) (!  (or (= $generated@@118 $generated@@119) (= ($generated@@89 ($generated@@92 $generated@@117 $generated@@118 $generated@@116) $generated@@119) ($generated@@89 $generated@@117 $generated@@119)))
 :weight 0
)) (forall (($generated@@120 T@U) ($generated@@121 T@U) ($generated@@122 T@U) ($generated@@123 T@U) ) (!  (or true (= ($generated@@89 ($generated@@92 $generated@@121 $generated@@122 $generated@@120) $generated@@123) ($generated@@89 $generated@@121 $generated@@123)))
 :weight 0
)))) (forall (($generated@@124 T@U) ($generated@@125 T@U) ) (! (let (($generated@@126 ($generated@@50 (type $generated@@125))))
(= (type ($generated@@88 $generated@@124 $generated@@125)) $generated@@126))
 :pattern ( ($generated@@88 $generated@@124 $generated@@125))
))) (= ($generated@@1 $generated@@87) 12)) (forall (($generated@@127 T@U) ($generated@@128 T@U) ($generated@@129 T@U) ) (! (= (type ($generated@@93 $generated@@127 $generated@@128 $generated@@129)) $generated@@87)
 :pattern ( ($generated@@93 $generated@@127 $generated@@128 $generated@@129))
))) (forall (($generated@@130 T@U) ($generated@@131 T@U) ($generated@@132 T@U) ) (! (let (($generated@@133 ($generated@@50 (type $generated@@131))))
 (=> (= (type $generated@@132) $generated@@133) (= ($generated@@88 ($generated@@93 $generated@@130 $generated@@131 $generated@@132) $generated@@131) $generated@@132)))
 :weight 0
))) (and (forall (($generated@@134 T@U) ($generated@@135 T@U) ($generated@@136 T@U) ($generated@@137 T@U) ) (!  (or (= $generated@@136 $generated@@137) (= ($generated@@88 ($generated@@93 $generated@@135 $generated@@136 $generated@@134) $generated@@137) ($generated@@88 $generated@@135 $generated@@137)))
 :weight 0
)) (forall (($generated@@138 T@U) ($generated@@139 T@U) ($generated@@140 T@U) ($generated@@141 T@U) ) (!  (or true (= ($generated@@88 ($generated@@93 $generated@@139 $generated@@140 $generated@@138) $generated@@141) ($generated@@88 $generated@@139 $generated@@141)))
 :weight 0
)))) (= ($generated@@1 $generated@@85) 13)) (forall (($generated@@142 T@T) ($generated@@143 T@T) ) (= ($generated@@1 ($generated@@94 $generated@@142 $generated@@143)) 14))) (forall (($generated@@144 T@T) ($generated@@145 T@T) ) (! (= ($generated@@95 ($generated@@94 $generated@@144 $generated@@145)) $generated@@144)
 :pattern ( ($generated@@94 $generated@@144 $generated@@145))
))) (forall (($generated@@146 T@T) ($generated@@147 T@T) ) (! (= ($generated@@96 ($generated@@94 $generated@@146 $generated@@147)) $generated@@147)
 :pattern ( ($generated@@94 $generated@@146 $generated@@147))
))) (forall (($generated@@148 T@U) ($generated@@149 T@U) ($generated@@150 T@U) ) (! (let (($generated@@151 ($generated@@96 (type $generated@@148))))
(= (type ($generated@@83 $generated@@148 $generated@@149 $generated@@150)) $generated@@151))
 :pattern ( ($generated@@83 $generated@@148 $generated@@149 $generated@@150))
))) (forall (($generated@@152 T@U) ($generated@@153 T@U) ($generated@@154 T@U) ($generated@@155 T@U) ) (! (let (($generated@@156 (type $generated@@155)))
(let (($generated@@157 (type $generated@@153)))
(= (type ($generated@@97 $generated@@152 $generated@@153 $generated@@154 $generated@@155)) ($generated@@94 $generated@@157 $generated@@156))))
 :pattern ( ($generated@@97 $generated@@152 $generated@@153 $generated@@154 $generated@@155))
))) (forall (($generated@@158 T@U) ($generated@@159 T@U) ($generated@@160 T@U) ($generated@@161 T@U) ) (! (let (($generated@@162 ($generated@@96 (type $generated@@158))))
 (=> (= (type $generated@@161) $generated@@162) (= ($generated@@83 ($generated@@97 $generated@@158 $generated@@159 $generated@@160 $generated@@161) $generated@@159 $generated@@160) $generated@@161)))
 :weight 0
))) (and (and (forall (($generated@@163 T@U) ($generated@@164 T@U) ($generated@@165 T@U) ($generated@@166 T@U) ($generated@@167 T@U) ($generated@@168 T@U) ) (!  (or (= $generated@@165 $generated@@167) (= ($generated@@83 ($generated@@97 $generated@@164 $generated@@165 $generated@@166 $generated@@163) $generated@@167 $generated@@168) ($generated@@83 $generated@@164 $generated@@167 $generated@@168)))
 :weight 0
)) (forall (($generated@@169 T@U) ($generated@@170 T@U) ($generated@@171 T@U) ($generated@@172 T@U) ($generated@@173 T@U) ($generated@@174 T@U) ) (!  (or (= $generated@@172 $generated@@174) (= ($generated@@83 ($generated@@97 $generated@@170 $generated@@171 $generated@@172 $generated@@169) $generated@@173 $generated@@174) ($generated@@83 $generated@@170 $generated@@173 $generated@@174)))
 :weight 0
))) (forall (($generated@@175 T@U) ($generated@@176 T@U) ($generated@@177 T@U) ($generated@@178 T@U) ($generated@@179 T@U) ($generated@@180 T@U) ) (!  (or true (= ($generated@@83 ($generated@@97 $generated@@176 $generated@@177 $generated@@178 $generated@@175) $generated@@179 $generated@@180) ($generated@@83 $generated@@176 $generated@@179 $generated@@180)))
 :weight 0
)))) (forall (($generated@@181 T@U) ($generated@@182 T@U) ($generated@@183 T@U) ($generated@@184 Bool) ) (! (= (type ($generated@@84 $generated@@181 $generated@@182 $generated@@183 $generated@@184)) ($generated@@94 $generated@@85 $generated@@4))
 :pattern ( ($generated@@84 $generated@@181 $generated@@182 $generated@@183 $generated@@184))
))))
(assert (forall (($generated@@185 T@U) ($generated@@186 T@U) ($generated@@187 T@U) ($generated@@188 Bool) ($generated@@189 T@U) ($generated@@190 T@U) ) (! (let (($generated@@191 ($generated@@50 (type $generated@@190))))
 (=> (and (and (and (and (= (type $generated@@185) $generated@@85) (= (type $generated@@186) ($generated@@86 $generated@@85 $generated@@87))) (= (type $generated@@187) ($generated@@49 $generated@@4))) (= (type $generated@@189) $generated@@85)) (= (type $generated@@190) ($generated@@49 $generated@@191))) (= ($generated@@0 ($generated@@83 ($generated@@84 $generated@@185 $generated@@186 $generated@@187 $generated@@188) $generated@@189 $generated@@190))  (=> (and (not (= $generated@@189 $generated@@185)) ($generated@@0 ($generated@@88 ($generated@@89 $generated@@186 $generated@@189) $generated@@187))) $generated@@188))))
 :pattern ( ($generated@@83 ($generated@@84 $generated@@185 $generated@@186 $generated@@187 $generated@@188) $generated@@189 $generated@@190))
)))
(assert (forall (($generated@@192 Int) ) (! (= ($generated@@64 $generated@@192) $generated@@192)
 :pattern ( ($generated@@64 $generated@@192))
)))
(assert (forall (($generated@@194 T@U) ) (! (let (($generated@@195 (type $generated@@194)))
(= (type ($generated@@193 $generated@@194)) $generated@@195))
 :pattern ( ($generated@@193 $generated@@194))
)))
(assert (forall (($generated@@196 T@U) ) (! (= ($generated@@193 $generated@@196) $generated@@196)
 :pattern ( ($generated@@193 $generated@@196))
)))
(assert (forall (($generated@@198 T@U) ($generated@@199 T@U) ) (!  (=> (and (and (= (type $generated@@198) $generated@@59) (= (type $generated@@199) $generated@@59)) (and ($generated@@197 $generated@@199) (<= ($generated@@61 $generated@@199) ($generated@@61 $generated@@198)))) (and (= ($generated@@197 ($generated@@62 $generated@@198 $generated@@199)) ($generated@@197 $generated@@198)) (= ($generated@@61 ($generated@@62 $generated@@198 $generated@@199)) (- ($generated@@61 $generated@@198) ($generated@@61 $generated@@199)))))
 :pattern ( ($generated@@62 $generated@@198 $generated@@199))
)))
(assert  (and (forall (($generated@@202 T@U) ) (! (= (type ($generated@@200 $generated@@202)) $generated@@58)
 :pattern ( ($generated@@200 $generated@@202))
)) (= (type $generated@@201) $generated@@58)))
(assert (forall (($generated@@203 T@U) ($generated@@204 T@U) ($generated@@205 T@U) ($generated@@206 T@U) ($generated@@207 T@U) ) (!  (=> (and (and (and (and (= (type $generated@@203) $generated@@47) (= (type $generated@@204) $generated@@47)) (= (type $generated@@205) $generated@@47)) (= (type $generated@@206) $generated@@58)) (= (type $generated@@207) $generated@@59)) (= ($generated@@56 $generated@@203 $generated@@204 $generated@@205 $generated@@206 $generated@@207) ($generated@@56 $generated@@203 $generated@@204 $generated@@205 $generated@@201 $generated@@207)))
 :pattern ( ($generated@@56 $generated@@203 $generated@@204 $generated@@205 ($generated@@200 $generated@@206) $generated@@207))
)))
(assert (forall (($generated@@208 Int) ) (!  (=> (<= 0 $generated@@208) (and ($generated@@197 ($generated@@63 $generated@@208)) (= ($generated@@61 ($generated@@63 $generated@@208)) $generated@@208)))
 :pattern ( ($generated@@63 $generated@@208))
)))
(assert (forall (($generated@@209 T@U) ($generated@@210 T@U) ($generated@@211 T@U) ($generated@@212 T@U) ($generated@@213 T@U) ) (!  (=> (and (and (and (and (= (type $generated@@209) $generated@@47) (= (type $generated@@210) $generated@@47)) (= (type $generated@@211) $generated@@47)) (= (type $generated@@212) $generated@@58)) (= (type $generated@@213) $generated@@59)) (= ($generated@@56 $generated@@209 $generated@@210 $generated@@211 ($generated@@57 $generated@@212) $generated@@213) ($generated@@56 $generated@@209 $generated@@210 $generated@@211 $generated@@212 $generated@@213)))
 :pattern ( ($generated@@56 $generated@@209 $generated@@210 $generated@@211 ($generated@@57 $generated@@212) $generated@@213))
)))
(assert  (=> (<= 1 $generated@@55) (forall (($generated@@214 T@U) ($generated@@215 T@U) ($generated@@216 T@U) ($generated@@217 T@U) ($generated@@218 T@U) ) (!  (=> (and (and (and (and (and (= (type $generated@@214) $generated@@47) (= (type $generated@@215) $generated@@47)) (= (type $generated@@216) $generated@@47)) (= (type $generated@@217) $generated@@58)) (= (type $generated@@218) $generated@@59)) (= $generated@@218 ($generated@@63 0))) ($generated@@56 $generated@@214 $generated@@215 $generated@@216 $generated@@217 $generated@@218))
 :pattern ( ($generated@@56 $generated@@214 $generated@@215 $generated@@216 $generated@@217 $generated@@218))
))))
(assert (forall (($generated@@219 T@U) ($generated@@220 T@U) ) (!  (=> (and (= (type $generated@@219) $generated@@59) (= (type $generated@@220) $generated@@59)) (or (or ($generated@@65 $generated@@219 $generated@@220) (= $generated@@219 $generated@@220)) ($generated@@65 $generated@@220 $generated@@219)))
 :pattern ( ($generated@@65 $generated@@219 $generated@@220) ($generated@@65 $generated@@220 $generated@@219))
)))
(assert (forall (($generated@@221 T@U) ) (!  (=> (= (type $generated@@221) $generated@@59) (<= 0 ($generated@@61 $generated@@221)))
 :pattern ( ($generated@@61 $generated@@221))
)))
(assert  (=> (<= 1 $generated@@55) (forall (($generated@@222 T@U) ($generated@@223 T@U) ($generated@@224 T@U) ($generated@@225 T@U) ($generated@@226 T@U) ) (!  (=> (and (and (and (and (and (= (type $generated@@222) $generated@@47) (= (type $generated@@223) $generated@@47)) (= (type $generated@@224) $generated@@47)) (= (type $generated@@225) $generated@@58)) (= (type $generated@@226) $generated@@59)) (or ($generated@@60 $generated@@222 $generated@@223 $generated@@224 ($generated@@193 $generated@@226)) (not (= 1 $generated@@55)))) (and (and (=> (< 0 ($generated@@61 $generated@@226)) ($generated@@60 $generated@@223 $generated@@222 $generated@@224 ($generated@@62 $generated@@226 ($generated@@63 1)))) (=> (=> (< 0 ($generated@@61 $generated@@226)) ($generated@@56 $generated@@223 $generated@@222 $generated@@224 ($generated@@57 $generated@@225) ($generated@@62 $generated@@226 ($generated@@63 1)))) (=> (= ($generated@@64 0) ($generated@@61 $generated@@226)) (forall (($generated@@227 T@U) ) (!  (=> (and (= (type $generated@@227) $generated@@59) ($generated@@65 $generated@@227 $generated@@226)) ($generated@@60 $generated@@222 $generated@@223 $generated@@224 $generated@@227))
 :pattern ( ($generated@@56 $generated@@222 $generated@@223 $generated@@224 ($generated@@57 $generated@@225) $generated@@227))
))))) (= ($generated@@56 $generated@@222 $generated@@223 $generated@@224 ($generated@@57 $generated@@225) ($generated@@193 $generated@@226))  (and (=> (< 0 ($generated@@61 $generated@@226)) ($generated@@56 $generated@@223 $generated@@222 $generated@@224 ($generated@@57 $generated@@225) ($generated@@62 $generated@@226 ($generated@@63 1)))) (=> (= ($generated@@64 0) ($generated@@61 $generated@@226)) (forall (($generated@@228 T@U) ) (!  (=> (and (= (type $generated@@228) $generated@@59) ($generated@@65 $generated@@228 $generated@@226)) ($generated@@56 $generated@@222 $generated@@223 $generated@@224 ($generated@@57 $generated@@225) $generated@@228))
 :pattern ( ($generated@@56 $generated@@222 $generated@@223 $generated@@224 ($generated@@57 $generated@@225) $generated@@228))
)))))))
 :weight 3
 :pattern ( ($generated@@56 $generated@@222 $generated@@223 $generated@@224 ($generated@@57 $generated@@225) ($generated@@193 $generated@@226)))
))))
(assert  (and (forall (($generated@@231 T@U) ) (! (= (type ($generated@@229 $generated@@231)) $generated@@59)
 :pattern ( ($generated@@229 $generated@@231))
)) (forall (($generated@@232 T@T) ($generated@@233 T@U) ) (! (= (type ($generated@@230 $generated@@232 $generated@@233)) $generated@@232)
 :pattern ( ($generated@@230 $generated@@232 $generated@@233))
))))
(assert (forall (($generated@@234 T@U) ) (! (let (($generated@@235 (type $generated@@234)))
(= ($generated@@230 $generated@@235 ($generated@@229 $generated@@234)) $generated@@234))
 :pattern ( ($generated@@229 $generated@@234))
)))
(assert (forall (($generated@@236 T@U) ($generated@@237 T@U) ) (!  (=> (and (= (type $generated@@236) $generated@@59) (= (type $generated@@237) $generated@@59)) (and (and (and (=> ($generated@@65 $generated@@236 $generated@@237) (not (= $generated@@236 $generated@@237))) (=> (and ($generated@@197 $generated@@236) (not ($generated@@197 $generated@@237))) ($generated@@65 $generated@@236 $generated@@237))) (=> (and ($generated@@197 $generated@@236) ($generated@@197 $generated@@237)) (= ($generated@@65 $generated@@236 $generated@@237) (< ($generated@@61 $generated@@236) ($generated@@61 $generated@@237))))) (=> (and ($generated@@65 $generated@@236 $generated@@237) ($generated@@197 $generated@@237)) ($generated@@197 $generated@@236))))
 :pattern ( ($generated@@65 $generated@@236 $generated@@237))
)))
(assert  (=> (<= 1 $generated@@55) (forall (($generated@@238 T@U) ($generated@@239 T@U) ($generated@@240 T@U) ($generated@@241 T@U) ($generated@@242 T@U) ) (!  (=> (and (and (and (and (and (= (type $generated@@238) $generated@@47) (= (type $generated@@239) $generated@@47)) (= (type $generated@@240) $generated@@47)) (= (type $generated@@241) $generated@@58)) (= (type $generated@@242) $generated@@59)) (or ($generated@@60 $generated@@238 $generated@@239 $generated@@240 $generated@@242) (not (= 1 $generated@@55)))) true)
 :pattern ( ($generated@@56 $generated@@238 $generated@@239 $generated@@240 $generated@@241 $generated@@242))
))))
(assert (forall (($generated@@243 T@U) ) (!  (=> (and (= (type $generated@@243) $generated@@59) ($generated@@197 $generated@@243)) (= $generated@@243 ($generated@@63 ($generated@@61 $generated@@243))))
 :pattern ( ($generated@@61 $generated@@243))
 :pattern ( ($generated@@197 $generated@@243))
)))
(assert (forall (($generated@@244 T@U) ($generated@@245 T@U) ) (!  (=> (and (and (= (type $generated@@244) $generated@@59) (= (type $generated@@245) $generated@@59)) (and ($generated@@197 $generated@@245) (<= ($generated@@61 $generated@@245) ($generated@@61 $generated@@244)))) (or (and (= $generated@@245 ($generated@@63 0)) (= ($generated@@62 $generated@@244 $generated@@245) $generated@@244)) (and (not (= $generated@@245 ($generated@@63 0))) ($generated@@65 ($generated@@62 $generated@@244 $generated@@245) $generated@@244))))
 :pattern ( ($generated@@62 $generated@@244 $generated@@245))
)))
(assert (forall (($generated@@246 Int) ) (! (= ($generated@@229 ($generated@@8 ($generated@@64 $generated@@246))) ($generated@@193 ($generated@@229 ($generated@@8 $generated@@246))))
 :pattern ( ($generated@@229 ($generated@@8 ($generated@@64 $generated@@246))))
)))
(assert (forall (($generated@@247 T@U) ) (! (= ($generated@@229 ($generated@@193 $generated@@247)) ($generated@@193 ($generated@@229 $generated@@247)))
 :pattern ( ($generated@@229 ($generated@@193 $generated@@247)))
)))
(push 1)
(declare-fun ControlFlow (Int Int) Int)
(declare-fun $generated@@248 () T@U)
(declare-fun $generated@@249 () T@U)
(declare-fun $generated@@250 () T@U)
(declare-fun $generated@@251 (T@U) Bool)
(declare-fun $generated@@252 () T@U)
(declare-fun $generated@@253 (T@U) Bool)
(declare-fun $generated@@254 () T@U)
(declare-fun $generated@@255 () T@U)
(declare-fun $generated@@256 () T@U)
(declare-fun $generated@@257 () T@U)
(declare-fun $generated@@258 () T@U)
(assert  (and (and (and (and (and (and (and (and (= (type $generated@@248) $generated@@47) (= (type $generated@@249) $generated@@47)) (= (type $generated@@250) $generated@@59)) (= (type $generated@@255) $generated@@59)) (= (type $generated@@256) ($generated@@86 $generated@@85 $generated@@87))) (= (type $generated@@254) ($generated@@86 $generated@@85 $generated@@87))) (= (type $generated@@252) ($generated@@86 $generated@@85 $generated@@87))) (= (type $generated@@257) ($generated@@94 $generated@@85 $generated@@4))) (= (type $generated@@258) $generated@@85)))
(set-option :timeout 0)
(set-option :rlimit 0)
(assert (not
 (=> (= (ControlFlow 0 0) 9) (let (($generated@@259  (and (=> (= (ControlFlow 0 2) (- 0 3)) (=> ($generated@@60 $generated@@248 $generated@@44 $generated@@249 $generated@@250) (or ($generated@@56 $generated@@248 $generated@@44 $generated@@249 ($generated@@57 $generated@@201) $generated@@250) (=> (< 0 ($generated@@61 $generated@@250)) ($generated@@56 $generated@@44 $generated@@248 $generated@@249 ($generated@@57 ($generated@@57 $generated@@201)) ($generated@@62 $generated@@250 ($generated@@63 1))))))) (=> (=> ($generated@@60 $generated@@248 $generated@@44 $generated@@249 $generated@@250) (or ($generated@@56 $generated@@248 $generated@@44 $generated@@249 ($generated@@57 $generated@@201) $generated@@250) (=> (< 0 ($generated@@61 $generated@@250)) ($generated@@56 $generated@@44 $generated@@248 $generated@@249 ($generated@@57 ($generated@@57 $generated@@201)) ($generated@@62 $generated@@250 ($generated@@63 1)))))) (=> (= (ControlFlow 0 2) (- 0 1)) (=> ($generated@@60 $generated@@248 $generated@@44 $generated@@249 $generated@@250) (or ($generated@@56 $generated@@248 $generated@@44 $generated@@249 ($generated@@57 $generated@@201) $generated@@250) (=> (= ($generated@@64 0) ($generated@@61 $generated@@250)) (forall (($generated@@260 T@U) ) (!  (=> (and (= (type $generated@@260) $generated@@59) ($generated@@65 $generated@@260 $generated@@250)) ($generated@@56 $generated@@248 $generated@@44 $generated@@249 ($generated@@57 ($generated@@57 $generated@@201)) $generated@@260))
 :pattern ( ($generated@@56 $generated@@248 $generated@@44 $generated@@249 ($generated@@57 ($generated@@57 $generated@@201)) $generated@@260))
))))))))))
(let (($generated@@261  (=> (<= ($generated@@61 $generated@@250) 0) (=> (and (and (and ($generated@@251 $generated@@252) ($generated@@253 $generated@@252)) (= $generated@@254 $generated@@252)) (and (forall (($generated@@262 T@U) ) (!  (=> (and (= (type $generated@@262) $generated@@59) ($generated@@65 $generated@@262 $generated@@250)) ($generated@@56 $generated@@248 $generated@@44 $generated@@249 ($generated@@57 $generated@@201) $generated@@262))
 :no-pattern (type $generated@@262)
 :no-pattern ($generated $generated@@262)
 :no-pattern ($generated@@0 $generated@@262)
)) (= (ControlFlow 0 7) 2))) $generated@@259))))
(let (($generated@@263  (=> (< 0 ($generated@@61 $generated@@250)) (and (=> (= (ControlFlow 0 4) (- 0 6)) ($generated@@197 ($generated@@193 ($generated@@63 1)))) (=> ($generated@@197 ($generated@@193 ($generated@@63 1))) (and (=> (= (ControlFlow 0 4) (- 0 5)) (<= ($generated@@61 ($generated@@193 ($generated@@63 1))) ($generated@@61 $generated@@250))) (=> (<= ($generated@@61 ($generated@@193 ($generated@@63 1))) ($generated@@61 $generated@@250)) (=> (= $generated@@255 ($generated@@62 $generated@@250 ($generated@@63 1))) (=> (and (and (and ($generated@@251 $generated@@256) ($generated@@253 $generated@@256)) ($generated@@60 $generated@@248 $generated@@44 $generated@@249 $generated@@255)) (and (and ($generated@@60 $generated@@248 $generated@@44 $generated@@249 $generated@@255) (and ($generated@@56 $generated@@248 $generated@@44 $generated@@249 ($generated@@57 $generated@@201) $generated@@255) (and (=> (< 0 ($generated@@61 $generated@@255)) ($generated@@56 $generated@@44 $generated@@248 $generated@@249 ($generated@@57 $generated@@201) ($generated@@62 $generated@@255 ($generated@@63 1)))) (=> (= ($generated@@64 0) ($generated@@61 $generated@@255)) (forall (($generated@@264 T@U) ) (!  (=> (and (= (type $generated@@264) $generated@@59) ($generated@@65 $generated@@264 $generated@@255)) ($generated@@56 $generated@@248 $generated@@44 $generated@@249 ($generated@@57 $generated@@201) $generated@@264))
 :pattern ( ($generated@@56 $generated@@248 $generated@@44 $generated@@249 ($generated@@57 $generated@@201) $generated@@264))
)))))) (and (= $generated@@254 $generated@@256) (= (ControlFlow 0 4) 2)))) $generated@@259)))))))))
(let (($generated@@265  (=> (= $generated@@257 ($generated@@84 $generated@@258 $generated@@254 $generated@@46 false)) (and (=> (= (ControlFlow 0 8) 4) $generated@@263) (=> (= (ControlFlow 0 8) 7) $generated@@261)))))
(let (($generated@@266  (=> (and (and ($generated@@251 $generated@@254) ($generated@@253 $generated@@254)) (and (= 2 $generated@@55) (= (ControlFlow 0 9) 8))) $generated@@265)))
$generated@@266))))))
))
(check-sat)
(get-info :reason-unknown)
(assert (not (= (ControlFlow 0 2) (- 3))))
(check-sat)
(pop 1)
; Invalid
(get-info :rlimit)
(reset)
(set-option :rlimit 0)
; did a full reset
(reset)
(set-option :print-success false)
(set-info :smt-lib-version 2.6)
(set-option :auto_config false)
(set-option :type_check true)
(set-option :smt.case_split 3)
(set-option :smt.qi.eager_threshold 100)
(set-option :smt.delay_units true)
(set-option :smt.arith.solver 2)
(set-option :smt.mbqi false)
(set-option :model.compact false)
(set-option :model.v2 true)
(set-option :pp.bv_literals false)
; done setting options


(set-info :category "industrial")
(declare-sort |T@U| 0)
(declare-sort |T@T| 0)
(declare-fun real_pow (Real Real) Real)
(declare-fun UOrdering2 (|T@U| |T@U|) Bool)
(declare-fun UOrdering3 (|T@T| |T@U| |T@U|) Bool)
(declare-fun tickleBool (Bool) Bool)
(assert (and (tickleBool true) (tickleBool false)))
(declare-fun $generated (T@U) Int)
(declare-fun $generated@@0 (T@U) Bool)
(declare-fun $generated@@1 (T@T) Int)
(declare-fun $generated@@2 () T@T)
(declare-fun $generated@@3 () T@T)
(declare-fun $generated@@4 () T@T)
(declare-fun $generated@@5 () T@T)
(declare-fun $generated@@6 () T@T)
(declare-fun $generated@@7 () T@T)
(declare-fun $generated@@8 (Int) T@U)
(declare-fun type (T@U) T@T)
(declare-fun $generated@@9 (Real) T@U)
(declare-fun $generated@@10 (T@U) Real)
(declare-fun $generated@@11 (Bool) T@U)
(declare-fun $generated@@12 (RoundingMode) T@U)
(declare-fun $generated@@13 (T@U) RoundingMode)
(declare-fun $generated@@14 (String) T@U)
(declare-fun $generated@@15 (T@U) String)
(declare-fun $generated@@16 ((RegEx String)) T@U)
(declare-fun $generated@@17 (T@U) (RegEx String))
(declare-fun $generated@@44 () Int)
(declare-fun $generated@@45 (T@U T@U T@U T@U T@U) Bool)
(declare-fun $generated@@46 (T@U) T@U)
(declare-fun $generated@@47 () T@T)
(declare-fun $generated@@48 () T@T)
(declare-fun $generated@@49 () T@T)
(declare-fun $generated@@50 (T@U T@U T@U T@U) Bool)
(declare-fun $generated@@51 (T@U) Int)
(declare-fun $generated@@52 (T@U T@U) T@U)
(declare-fun $generated@@53 (Int) T@U)
(declare-fun $generated@@54 (Int) Int)
(declare-fun $generated@@55 (T@U T@U) Bool)
(declare-fun $generated@@73 (T@U T@U T@U) T@U)
(declare-fun $generated@@74 (T@U T@U T@U Bool) T@U)
(declare-fun $generated@@75 (T@T) T@T)
(declare-fun $generated@@76 () T@T)
(declare-fun $generated@@77 (T@T T@T) T@T)
(declare-fun $generated@@78 () T@T)
(declare-fun $generated@@79 (T@T) T@T)
(declare-fun $generated@@80 (T@U T@U) T@U)
(declare-fun $generated@@81 (T@U T@U) T@U)
(declare-fun $generated@@82 (T@T) T@T)
(declare-fun $generated@@83 (T@T) T@T)
(declare-fun $generated@@84 (T@U T@U T@U) T@U)
(declare-fun $generated@@85 (T@U T@U T@U) T@U)
(declare-fun $generated@@86 (T@T T@T) T@T)
(declare-fun $generated@@87 (T@T) T@T)
(declare-fun $generated@@88 (T@T) T@T)
(declare-fun $generated@@89 (T@U T@U T@U T@U) T@U)
(declare-fun $generated@@187 (T@U) T@U)
(declare-fun $generated@@191 (T@U) Bool)
(declare-fun $generated@@194 (T@U) T@U)
(declare-fun $generated@@195 () T@U)
(declare-fun $generated@@223 (T@U) T@U)
(declare-fun $generated@@224 (T@T T@U) T@U)
(assert  (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (= ($generated@@1 $generated@@2) 0) (= ($generated@@1 $generated@@3) 1)) (= ($generated@@1 $generated@@4) 2)) (= ($generated@@1 $generated@@5) 3)) (= ($generated@@1 $generated@@6) 4)) (= ($generated@@1 $generated@@7) 5)) (forall (($generated@@18 Int) ) (! (= ($generated ($generated@@8 $generated@@18)) $generated@@18)
 :pattern ( ($generated@@8 $generated@@18))
))) (forall (($generated@@19 T@U) ) (!  (=> (= (type $generated@@19) $generated@@2) (= ($generated@@8 ($generated $generated@@19)) $generated@@19))
 :pattern ( ($generated $generated@@19))
))) (forall (($generated@@20 Int) ) (! (= (type ($generated@@8 $generated@@20)) $generated@@2)
 :pattern ( ($generated@@8 $generated@@20))
))) (forall (($generated@@21 Real) ) (! (= ($generated@@10 ($generated@@9 $generated@@21)) $generated@@21)
 :pattern ( ($generated@@9 $generated@@21))
))) (forall (($generated@@22 T@U) ) (!  (=> (= (type $generated@@22) $generated@@3) (= ($generated@@9 ($generated@@10 $generated@@22)) $generated@@22))
 :pattern ( ($generated@@10 $generated@@22))
))) (forall (($generated@@23 Real) ) (! (= (type ($generated@@9 $generated@@23)) $generated@@3)
 :pattern ( ($generated@@9 $generated@@23))
))) (forall (($generated@@24 Bool) ) (! (= ($generated@@0 ($generated@@11 $generated@@24)) $generated@@24)
 :pattern ( ($generated@@11 $generated@@24))
))) (forall (($generated@@25 T@U) ) (!  (=> (= (type $generated@@25) $generated@@4) (= ($generated@@11 ($generated@@0 $generated@@25)) $generated@@25))
 :pattern ( ($generated@@0 $generated@@25))
))) (forall (($generated@@26 Bool) ) (! (= (type ($generated@@11 $generated@@26)) $generated@@4)
 :pattern ( ($generated@@11 $generated@@26))
))) (forall (($generated@@27 RoundingMode) ) (! (= ($generated@@13 ($generated@@12 $generated@@27)) $generated@@27)
 :pattern ( ($generated@@12 $generated@@27))
))) (forall (($generated@@28 T@U) ) (!  (=> (= (type $generated@@28) $generated@@5) (= ($generated@@12 ($generated@@13 $generated@@28)) $generated@@28))
 :pattern ( ($generated@@13 $generated@@28))
))) (forall (($generated@@29 RoundingMode) ) (! (= (type ($generated@@12 $generated@@29)) $generated@@5)
 :pattern ( ($generated@@12 $generated@@29))
))) (forall (($generated@@30 String) ) (! (= ($generated@@15 ($generated@@14 $generated@@30)) $generated@@30)
 :pattern ( ($generated@@14 $generated@@30))
))) (forall (($generated@@31 T@U) ) (!  (=> (= (type $generated@@31) $generated@@6) (= ($generated@@14 ($generated@@15 $generated@@31)) $generated@@31))
 :pattern ( ($generated@@15 $generated@@31))
))) (forall (($generated@@32 String) ) (! (= (type ($generated@@14 $generated@@32)) $generated@@6)
 :pattern ( ($generated@@14 $generated@@32))
))) (forall (($generated@@33 (RegEx String)) ) (! (= ($generated@@17 ($generated@@16 $generated@@33)) $generated@@33)
 :pattern ( ($generated@@16 $generated@@33))
))) (forall (($generated@@34 T@U) ) (!  (=> (= (type $generated@@34) $generated@@7) (= ($generated@@16 ($generated@@17 $generated@@34)) $generated@@34))
 :pattern ( ($generated@@17 $generated@@34))
))) (forall (($generated@@35 (RegEx String)) ) (! (= (type ($generated@@16 $generated@@35)) $generated@@7)
 :pattern ( ($generated@@16 $generated@@35))
))))
(assert (forall (($generated@@36 T@U) ) (! (UOrdering2 $generated@@36 $generated@@36)
 :no-pattern ($generated $generated@@36)
 :no-pattern ($generated@@0 $generated@@36)
)))
(assert (forall (($generated@@37 T@U) ($generated@@38 T@U) ($generated@@39 T@U) ) (! (let (($generated@@40 (type $generated@@37)))
 (=> (and (and (= (type $generated@@38) $generated@@40) (= (type $generated@@39) $generated@@40)) (and (UOrdering2 $generated@@37 $generated@@38) (UOrdering2 $generated@@38 $generated@@39))) (UOrdering2 $generated@@37 $generated@@39)))
 :pattern ( (UOrdering2 $generated@@37 $generated@@38) (UOrdering2 $generated@@38 $generated@@39))
)))
(assert (forall (($generated@@41 T@U) ($generated@@42 T@U) ) (! (let (($generated@@43 (type $generated@@41)))
 (=> (= (type $generated@@42) $generated@@43) (=> (and (UOrdering2 $generated@@41 $generated@@42) (UOrdering2 $generated@@42 $generated@@41)) (= $generated@@41 $generated@@42))))
 :pattern ( (UOrdering2 $generated@@41 $generated@@42) (UOrdering2 $generated@@42 $generated@@41))
)))
(assert  (and (and (and (and (and (= ($generated@@1 $generated@@47) 6) (= ($generated@@1 $generated@@48) 7)) (= ($generated@@1 $generated@@49) 8)) (forall (($generated@@56 T@U) ) (! (= (type ($generated@@46 $generated@@56)) $generated@@48)
 :pattern ( ($generated@@46 $generated@@56))
))) (forall (($generated@@57 T@U) ($generated@@58 T@U) ) (! (= (type ($generated@@52 $generated@@57 $generated@@58)) $generated@@49)
 :pattern ( ($generated@@52 $generated@@57 $generated@@58))
))) (forall (($generated@@59 Int) ) (! (= (type ($generated@@53 $generated@@59)) $generated@@49)
 :pattern ( ($generated@@53 $generated@@59))
))))
(assert  (=> (<= 1 $generated@@44) (forall (($generated@@60 T@U) ($generated@@61 T@U) ($generated@@62 T@U) ($generated@@63 T@U) ($generated@@64 T@U) ) (!  (=> (and (and (and (and (and (= (type $generated@@60) $generated@@47) (= (type $generated@@61) $generated@@47)) (= (type $generated@@62) $generated@@47)) (= (type $generated@@63) $generated@@48)) (= (type $generated@@64) $generated@@49)) (or ($generated@@50 $generated@@60 $generated@@61 $generated@@62 $generated@@64) (not (= 1 $generated@@44)))) (and (and (=> (< 0 ($generated@@51 $generated@@64)) ($generated@@50 $generated@@61 $generated@@60 $generated@@62 ($generated@@52 $generated@@64 ($generated@@53 1)))) (=> (=> (< 0 ($generated@@51 $generated@@64)) ($generated@@45 $generated@@61 $generated@@60 $generated@@62 $generated@@63 ($generated@@52 $generated@@64 ($generated@@53 1)))) (=> (= ($generated@@54 0) ($generated@@51 $generated@@64)) (forall (($generated@@65 T@U) ) (!  (=> (and (= (type $generated@@65) $generated@@49) ($generated@@55 $generated@@65 $generated@@64)) ($generated@@50 $generated@@60 $generated@@61 $generated@@62 $generated@@65))
 :pattern ( ($generated@@45 $generated@@60 $generated@@61 $generated@@62 $generated@@63 $generated@@65))
))))) (= ($generated@@45 $generated@@60 $generated@@61 $generated@@62 ($generated@@46 $generated@@63) $generated@@64)  (and (=> (< 0 ($generated@@51 $generated@@64)) ($generated@@45 $generated@@61 $generated@@60 $generated@@62 $generated@@63 ($generated@@52 $generated@@64 ($generated@@53 1)))) (=> (= ($generated@@54 0) ($generated@@51 $generated@@64)) (forall (($generated@@66 T@U) ) (!  (=> (and (= (type $generated@@66) $generated@@49) ($generated@@55 $generated@@66 $generated@@64)) ($generated@@45 $generated@@60 $generated@@61 $generated@@62 $generated@@63 $generated@@66))
 :pattern ( ($generated@@45 $generated@@60 $generated@@61 $generated@@62 $generated@@63 $generated@@66))
)))))))
 :pattern ( ($generated@@45 $generated@@60 $generated@@61 $generated@@62 ($generated@@46 $generated@@63) $generated@@64))
))))
(assert (forall (($generated@@67 T@U) ($generated@@68 T@U) ($generated@@69 T@U) ) (!  (=> (and (and (and (= (type $generated@@67) $generated@@49) (= (type $generated@@68) $generated@@49)) (= (type $generated@@69) $generated@@49)) (and ($generated@@55 $generated@@67 $generated@@68) ($generated@@55 $generated@@68 $generated@@69))) ($generated@@55 $generated@@67 $generated@@69))
 :pattern ( ($generated@@55 $generated@@67 $generated@@68) ($generated@@55 $generated@@68 $generated@@69))
 :pattern ( ($generated@@55 $generated@@67 $generated@@68) ($generated@@55 $generated@@67 $generated@@69))
)))
(assert (forall (($generated@@70 T@U) ($generated@@71 Int) ($generated@@72 Int) ) (!  (=> (= (type $generated@@70) $generated@@49) (=> (and (and (<= 0 $generated@@71) (<= 0 $generated@@72)) (<= (+ $generated@@71 $generated@@72) ($generated@@51 $generated@@70))) (= ($generated@@52 ($generated@@52 $generated@@70 ($generated@@53 $generated@@71)) ($generated@@53 $generated@@72)) ($generated@@52 $generated@@70 ($generated@@53 (+ $generated@@71 $generated@@72))))))
 :pattern ( ($generated@@52 ($generated@@52 $generated@@70 ($generated@@53 $generated@@71)) ($generated@@53 $generated@@72)))
)))
(assert  (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (forall (($generated@@90 T@T) ($generated@@91 T@T) ) (= ($generated@@1 ($generated@@77 $generated@@90 $generated@@91)) 9)) (forall (($generated@@92 T@T) ($generated@@93 T@T) ) (! (= ($generated@@82 ($generated@@77 $generated@@92 $generated@@93)) $generated@@92)
 :pattern ( ($generated@@77 $generated@@92 $generated@@93))
))) (forall (($generated@@94 T@T) ($generated@@95 T@T) ) (! (= ($generated@@83 ($generated@@77 $generated@@94 $generated@@95)) $generated@@95)
 :pattern ( ($generated@@77 $generated@@94 $generated@@95))
))) (forall (($generated@@96 T@U) ($generated@@97 T@U) ) (! (let (($generated@@98 ($generated@@83 (type $generated@@96))))
(= (type ($generated@@81 $generated@@96 $generated@@97)) $generated@@98))
 :pattern ( ($generated@@81 $generated@@96 $generated@@97))
))) (forall (($generated@@99 T@U) ($generated@@100 T@U) ($generated@@101 T@U) ) (! (let (($generated@@102 (type $generated@@101)))
(let (($generated@@103 (type $generated@@100)))
(= (type ($generated@@84 $generated@@99 $generated@@100 $generated@@101)) ($generated@@77 $generated@@103 $generated@@102))))
 :pattern ( ($generated@@84 $generated@@99 $generated@@100 $generated@@101))
))) (forall (($generated@@104 T@U) ($generated@@105 T@U) ($generated@@106 T@U) ) (! (let (($generated@@107 ($generated@@83 (type $generated@@104))))
 (=> (= (type $generated@@106) $generated@@107) (= ($generated@@81 ($generated@@84 $generated@@104 $generated@@105 $generated@@106) $generated@@105) $generated@@106)))
 :weight 0
))) (and (forall (($generated@@108 T@U) ($generated@@109 T@U) ($generated@@110 T@U) ($generated@@111 T@U) ) (!  (or (= $generated@@110 $generated@@111) (= ($generated@@81 ($generated@@84 $generated@@109 $generated@@110 $generated@@108) $generated@@111) ($generated@@81 $generated@@109 $generated@@111)))
 :weight 0
)) (forall (($generated@@112 T@U) ($generated@@113 T@U) ($generated@@114 T@U) ($generated@@115 T@U) ) (!  (or true (= ($generated@@81 ($generated@@84 $generated@@113 $generated@@114 $generated@@112) $generated@@115) ($generated@@81 $generated@@113 $generated@@115)))
 :weight 0
)))) (forall (($generated@@116 T@T) ) (= ($generated@@1 ($generated@@79 $generated@@116)) 10))) (forall (($generated@@117 T@T) ) (! (= ($generated@@75 ($generated@@79 $generated@@117)) $generated@@117)
 :pattern ( ($generated@@79 $generated@@117))
))) (forall (($generated@@118 T@U) ($generated@@119 T@U) ) (! (let (($generated@@120 ($generated@@75 (type $generated@@119))))
(= (type ($generated@@80 $generated@@118 $generated@@119)) $generated@@120))
 :pattern ( ($generated@@80 $generated@@118 $generated@@119))
))) (= ($generated@@1 $generated@@78) 11)) (forall (($generated@@121 T@U) ($generated@@122 T@U) ($generated@@123 T@U) ) (! (= (type ($generated@@85 $generated@@121 $generated@@122 $generated@@123)) $generated@@78)
 :pattern ( ($generated@@85 $generated@@121 $generated@@122 $generated@@123))
))) (forall (($generated@@124 T@U) ($generated@@125 T@U) ($generated@@126 T@U) ) (! (let (($generated@@127 ($generated@@75 (type $generated@@125))))
 (=> (= (type $generated@@126) $generated@@127) (= ($generated@@80 ($generated@@85 $generated@@124 $generated@@125 $generated@@126) $generated@@125) $generated@@126)))
 :weight 0
))) (and (forall (($generated@@128 T@U) ($generated@@129 T@U) ($generated@@130 T@U) ($generated@@131 T@U) ) (!  (or (= $generated@@130 $generated@@131) (= ($generated@@80 ($generated@@85 $generated@@129 $generated@@130 $generated@@128) $generated@@131) ($generated@@80 $generated@@129 $generated@@131)))
 :weight 0
)) (forall (($generated@@132 T@U) ($generated@@133 T@U) ($generated@@134 T@U) ($generated@@135 T@U) ) (!  (or true (= ($generated@@80 ($generated@@85 $generated@@133 $generated@@134 $generated@@132) $generated@@135) ($generated@@80 $generated@@133 $generated@@135)))
 :weight 0
)))) (= ($generated@@1 $generated@@76) 12)) (forall (($generated@@136 T@T) ($generated@@137 T@T) ) (= ($generated@@1 ($generated@@86 $generated@@136 $generated@@137)) 13))) (forall (($generated@@138 T@T) ($generated@@139 T@T) ) (! (= ($generated@@87 ($generated@@86 $generated@@138 $generated@@139)) $generated@@138)
 :pattern ( ($generated@@86 $generated@@138 $generated@@139))
))) (forall (($generated@@140 T@T) ($generated@@141 T@T) ) (! (= ($generated@@88 ($generated@@86 $generated@@140 $generated@@141)) $generated@@141)
 :pattern ( ($generated@@86 $generated@@140 $generated@@141))
))) (forall (($generated@@142 T@U) ($generated@@143 T@U) ($generated@@144 T@U) ) (! (let (($generated@@145 ($generated@@88 (type $generated@@142))))
(= (type ($generated@@73 $generated@@142 $generated@@143 $generated@@144)) $generated@@145))
 :pattern ( ($generated@@73 $generated@@142 $generated@@143 $generated@@144))
))) (forall (($generated@@146 T@U) ($generated@@147 T@U) ($generated@@148 T@U) ($generated@@149 T@U) ) (! (let (($generated@@150 (type $generated@@149)))
(let (($generated@@151 (type $generated@@147)))
(= (type ($generated@@89 $generated@@146 $generated@@147 $generated@@148 $generated@@149)) ($generated@@86 $generated@@151 $generated@@150))))
 :pattern ( ($generated@@89 $generated@@146 $generated@@147 $generated@@148 $generated@@149))
))) (forall (($generated@@152 T@U) ($generated@@153 T@U) ($generated@@154 T@U) ($generated@@155 T@U) ) (! (let (($generated@@156 ($generated@@88 (type $generated@@152))))
 (=> (= (type $generated@@155) $generated@@156) (= ($generated@@73 ($generated@@89 $generated@@152 $generated@@153 $generated@@154 $generated@@155) $generated@@153 $generated@@154) $generated@@155)))
 :weight 0
))) (and (and (forall (($generated@@157 T@U) ($generated@@158 T@U) ($generated@@159 T@U) ($generated@@160 T@U) ($generated@@161 T@U) ($generated@@162 T@U) ) (!  (or (= $generated@@159 $generated@@161) (= ($generated@@73 ($generated@@89 $generated@@158 $generated@@159 $generated@@160 $generated@@157) $generated@@161 $generated@@162) ($generated@@73 $generated@@158 $generated@@161 $generated@@162)))
 :weight 0
)) (forall (($generated@@163 T@U) ($generated@@164 T@U) ($generated@@165 T@U) ($generated@@166 T@U) ($generated@@167 T@U) ($generated@@168 T@U) ) (!  (or (= $generated@@166 $generated@@168) (= ($generated@@73 ($generated@@89 $generated@@164 $generated@@165 $generated@@166 $generated@@163) $generated@@167 $generated@@168) ($generated@@73 $generated@@164 $generated@@167 $generated@@168)))
 :weight 0
))) (forall (($generated@@169 T@U) ($generated@@170 T@U) ($generated@@171 T@U) ($generated@@172 T@U) ($generated@@173 T@U) ($generated@@174 T@U) ) (!  (or true (= ($generated@@73 ($generated@@89 $generated@@170 $generated@@171 $generated@@172 $generated@@169) $generated@@173 $generated@@174) ($generated@@73 $generated@@170 $generated@@173 $generated@@174)))
 :weight 0
)))) (forall (($generated@@175 T@U) ($generated@@176 T@U) ($generated@@177 T@U) ($generated@@178 Bool) ) (! (= (type ($generated@@74 $generated@@175 $generated@@176 $generated@@177 $generated@@178)) ($generated@@86 $generated@@76 $generated@@4))
 :pattern ( ($generated@@74 $generated@@175 $generated@@176 $generated@@177 $generated@@178))
))))
(assert (forall (($generated@@179 T@U) ($generated@@180 T@U) ($generated@@181 T@U) ($generated@@182 Bool) ($generated@@183 T@U) ($generated@@184 T@U) ) (! (let (($generated@@185 ($generated@@75 (type $generated@@184))))
 (=> (and (and (and (and (= (type $generated@@179) $generated@@76) (= (type $generated@@180) ($generated@@77 $generated@@76 $generated@@78))) (= (type $generated@@181) ($generated@@79 $generated@@4))) (= (type $generated@@183) $generated@@76)) (= (type $generated@@184) ($generated@@79 $generated@@185))) (= ($generated@@0 ($generated@@73 ($generated@@74 $generated@@179 $generated@@180 $generated@@181 $generated@@182) $generated@@183 $generated@@184))  (=> (and (not (= $generated@@183 $generated@@179)) ($generated@@0 ($generated@@80 ($generated@@81 $generated@@180 $generated@@183) $generated@@181))) $generated@@182))))
 :pattern ( ($generated@@73 ($generated@@74 $generated@@179 $generated@@180 $generated@@181 $generated@@182) $generated@@183 $generated@@184))
)))
(assert (forall (($generated@@186 Int) ) (! (= ($generated@@54 $generated@@186) $generated@@186)
 :pattern ( ($generated@@54 $generated@@186))
)))
(assert (forall (($generated@@188 T@U) ) (! (let (($generated@@189 (type $generated@@188)))
(= (type ($generated@@187 $generated@@188)) $generated@@189))
 :pattern ( ($generated@@187 $generated@@188))
)))
(assert (forall (($generated@@190 T@U) ) (! (= ($generated@@187 $generated@@190) $generated@@190)
 :pattern ( ($generated@@187 $generated@@190))
)))
(assert (forall (($generated@@192 T@U) ($generated@@193 T@U) ) (!  (=> (and (and (= (type $generated@@192) $generated@@49) (= (type $generated@@193) $generated@@49)) (and ($generated@@191 $generated@@193) (<= ($generated@@51 $generated@@193) ($generated@@51 $generated@@192)))) (and (= ($generated@@191 ($generated@@52 $generated@@192 $generated@@193)) ($generated@@191 $generated@@192)) (= ($generated@@51 ($generated@@52 $generated@@192 $generated@@193)) (- ($generated@@51 $generated@@192) ($generated@@51 $generated@@193)))))
 :pattern ( ($generated@@52 $generated@@192 $generated@@193))
)))
(assert  (and (forall (($generated@@196 T@U) ) (! (= (type ($generated@@194 $generated@@196)) $generated@@48)
 :pattern ( ($generated@@194 $generated@@196))
)) (= (type $generated@@195) $generated@@48)))
(assert (forall (($generated@@197 T@U) ($generated@@198 T@U) ($generated@@199 T@U) ($generated@@200 T@U) ($generated@@201 T@U) ) (!  (=> (and (and (and (and (= (type $generated@@197) $generated@@47) (= (type $generated@@198) $generated@@47)) (= (type $generated@@199) $generated@@47)) (= (type $generated@@200) $generated@@48)) (= (type $generated@@201) $generated@@49)) (= ($generated@@45 $generated@@197 $generated@@198 $generated@@199 $generated@@200 $generated@@201) ($generated@@45 $generated@@197 $generated@@198 $generated@@199 $generated@@195 $generated@@201)))
 :pattern ( ($generated@@45 $generated@@197 $generated@@198 $generated@@199 ($generated@@194 $generated@@200) $generated@@201))
)))
(assert (forall (($generated@@202 Int) ) (!  (=> (<= 0 $generated@@202) (and ($generated@@191 ($generated@@53 $generated@@202)) (= ($generated@@51 ($generated@@53 $generated@@202)) $generated@@202)))
 :pattern ( ($generated@@53 $generated@@202))
)))
(assert (forall (($generated@@203 T@U) ($generated@@204 T@U) ($generated@@205 T@U) ($generated@@206 T@U) ($generated@@207 T@U) ) (!  (=> (and (and (and (and (= (type $generated@@203) $generated@@47) (= (type $generated@@204) $generated@@47)) (= (type $generated@@205) $generated@@47)) (= (type $generated@@206) $generated@@48)) (= (type $generated@@207) $generated@@49)) (= ($generated@@45 $generated@@203 $generated@@204 $generated@@205 ($generated@@46 $generated@@206) $generated@@207) ($generated@@45 $generated@@203 $generated@@204 $generated@@205 $generated@@206 $generated@@207)))
 :pattern ( ($generated@@45 $generated@@203 $generated@@204 $generated@@205 ($generated@@46 $generated@@206) $generated@@207))
)))
(assert  (=> (<= 1 $generated@@44) (forall (($generated@@208 T@U) ($generated@@209 T@U) ($generated@@210 T@U) ($generated@@211 T@U) ($generated@@212 T@U) ) (!  (=> (and (and (and (and (and (= (type $generated@@208) $generated@@47) (= (type $generated@@209) $generated@@47)) (= (type $generated@@210) $generated@@47)) (= (type $generated@@211) $generated@@48)) (= (type $generated@@212) $generated@@49)) (= $generated@@212 ($generated@@53 0))) ($generated@@45 $generated@@208 $generated@@209 $generated@@210 $generated@@211 $generated@@212))
 :pattern ( ($generated@@45 $generated@@208 $generated@@209 $generated@@210 $generated@@211 $generated@@212))
))))
(assert (forall (($generated@@213 T@U) ($generated@@214 T@U) ) (!  (=> (and (= (type $generated@@213) $generated@@49) (= (type $generated@@214) $generated@@49)) (or (or ($generated@@55 $generated@@213 $generated@@214) (= $generated@@213 $generated@@214)) ($generated@@55 $generated@@214 $generated@@213)))
 :pattern ( ($generated@@55 $generated@@213 $generated@@214) ($generated@@55 $generated@@214 $generated@@213))
)))
(assert (forall (($generated@@215 T@U) ) (!  (=> (= (type $generated@@215) $generated@@49) (<= 0 ($generated@@51 $generated@@215)))
 :pattern ( ($generated@@51 $generated@@215))
)))
(assert  (=> (<= 1 $generated@@44) (forall (($generated@@216 T@U) ($generated@@217 T@U) ($generated@@218 T@U) ($generated@@219 T@U) ($generated@@220 T@U) ) (!  (=> (and (and (and (and (and (= (type $generated@@216) $generated@@47) (= (type $generated@@217) $generated@@47)) (= (type $generated@@218) $generated@@47)) (= (type $generated@@219) $generated@@48)) (= (type $generated@@220) $generated@@49)) (or ($generated@@50 $generated@@216 $generated@@217 $generated@@218 ($generated@@187 $generated@@220)) (not (= 1 $generated@@44)))) (and (and (=> (< 0 ($generated@@51 $generated@@220)) ($generated@@50 $generated@@217 $generated@@216 $generated@@218 ($generated@@52 $generated@@220 ($generated@@53 1)))) (=> (=> (< 0 ($generated@@51 $generated@@220)) ($generated@@45 $generated@@217 $generated@@216 $generated@@218 ($generated@@46 $generated@@219) ($generated@@52 $generated@@220 ($generated@@53 1)))) (=> (= ($generated@@54 0) ($generated@@51 $generated@@220)) (forall (($generated@@221 T@U) ) (!  (=> (and (= (type $generated@@221) $generated@@49) ($generated@@55 $generated@@221 $generated@@220)) ($generated@@50 $generated@@216 $generated@@217 $generated@@218 $generated@@221))
 :pattern ( ($generated@@45 $generated@@216 $generated@@217 $generated@@218 ($generated@@46 $generated@@219) $generated@@221))
))))) (= ($generated@@45 $generated@@216 $generated@@217 $generated@@218 ($generated@@46 $generated@@219) ($generated@@187 $generated@@220))  (and (=> (< 0 ($generated@@51 $generated@@220)) ($generated@@45 $generated@@217 $generated@@216 $generated@@218 ($generated@@46 $generated@@219) ($generated@@52 $generated@@220 ($generated@@53 1)))) (=> (= ($generated@@54 0) ($generated@@51 $generated@@220)) (forall (($generated@@222 T@U) ) (!  (=> (and (= (type $generated@@222) $generated@@49) ($generated@@55 $generated@@222 $generated@@220)) ($generated@@45 $generated@@216 $generated@@217 $generated@@218 ($generated@@46 $generated@@219) $generated@@222))
 :pattern ( ($generated@@45 $generated@@216 $generated@@217 $generated@@218 ($generated@@46 $generated@@219) $generated@@222))
)))))))
 :weight 3
 :pattern ( ($generated@@45 $generated@@216 $generated@@217 $generated@@218 ($generated@@46 $generated@@219) ($generated@@187 $generated@@220)))
))))
(assert  (and (forall (($generated@@225 T@U) ) (! (= (type ($generated@@223 $generated@@225)) $generated@@49)
 :pattern ( ($generated@@223 $generated@@225))
)) (forall (($generated@@226 T@T) ($generated@@227 T@U) ) (! (= (type ($generated@@224 $generated@@226 $generated@@227)) $generated@@226)
 :pattern ( ($generated@@224 $generated@@226 $generated@@227))
))))
(assert (forall (($generated@@228 T@U) ) (! (let (($generated@@229 (type $generated@@228)))
(= ($generated@@224 $generated@@229 ($generated@@223 $generated@@228)) $generated@@228))
 :pattern ( ($generated@@223 $generated@@228))
)))
(assert (forall (($generated@@230 T@U) ($generated@@231 T@U) ) (!  (=> (and (= (type $generated@@230) $generated@@49) (= (type $generated@@231) $generated@@49)) (and (and (and (=> ($generated@@55 $generated@@230 $generated@@231) (not (= $generated@@230 $generated@@231))) (=> (and ($generated@@191 $generated@@230) (not ($generated@@191 $generated@@231))) ($generated@@55 $generated@@230 $generated@@231))) (=> (and ($generated@@191 $generated@@230) ($generated@@191 $generated@@231)) (= ($generated@@55 $generated@@230 $generated@@231) (< ($generated@@51 $generated@@230) ($generated@@51 $generated@@231))))) (=> (and ($generated@@55 $generated@@230 $generated@@231) ($generated@@191 $generated@@231)) ($generated@@191 $generated@@230))))
 :pattern ( ($generated@@55 $generated@@230 $generated@@231))
)))
(assert  (=> (<= 1 $generated@@44) (forall (($generated@@232 T@U) ($generated@@233 T@U) ($generated@@234 T@U) ($generated@@235 T@U) ($generated@@236 T@U) ) (!  (=> (and (and (and (and (and (= (type $generated@@232) $generated@@47) (= (type $generated@@233) $generated@@47)) (= (type $generated@@234) $generated@@47)) (= (type $generated@@235) $generated@@48)) (= (type $generated@@236) $generated@@49)) (or ($generated@@50 $generated@@232 $generated@@233 $generated@@234 $generated@@236) (not (= 1 $generated@@44)))) true)
 :pattern ( ($generated@@45 $generated@@232 $generated@@233 $generated@@234 $generated@@235 $generated@@236))
))))
(assert (forall (($generated@@237 T@U) ) (!  (=> (and (= (type $generated@@237) $generated@@49) ($generated@@191 $generated@@237)) (= $generated@@237 ($generated@@53 ($generated@@51 $generated@@237))))
 :pattern ( ($generated@@51 $generated@@237))
 :pattern ( ($generated@@191 $generated@@237))
)))
(assert (forall (($generated@@238 T@U) ($generated@@239 T@U) ) (!  (=> (and (and (= (type $generated@@238) $generated@@49) (= (type $generated@@239) $generated@@49)) (and ($generated@@191 $generated@@239) (<= ($generated@@51 $generated@@239) ($generated@@51 $generated@@238)))) (or (and (= $generated@@239 ($generated@@53 0)) (= ($generated@@52 $generated@@238 $generated@@239) $generated@@238)) (and (not (= $generated@@239 ($generated@@53 0))) ($generated@@55 ($generated@@52 $generated@@238 $generated@@239) $generated@@238))))
 :pattern ( ($generated@@52 $generated@@238 $generated@@239))
)))
(assert (forall (($generated@@240 Int) ) (! (= ($generated@@223 ($generated@@8 ($generated@@54 $generated@@240))) ($generated@@187 ($generated@@223 ($generated@@8 $generated@@240))))
 :pattern ( ($generated@@223 ($generated@@8 ($generated@@54 $generated@@240))))
)))
(assert (forall (($generated@@241 T@U) ) (! (= ($generated@@223 ($generated@@187 $generated@@241)) ($generated@@187 ($generated@@223 $generated@@241)))
 :pattern ( ($generated@@223 ($generated@@187 $generated@@241)))
)))
(push 1)
(declare-fun ControlFlow (Int Int) Int)
(declare-fun $generated@@242 () T@U)
(declare-fun $generated@@243 () T@U)
(declare-fun $generated@@244 () T@U)
(declare-fun $generated@@245 () T@U)
(declare-fun $generated@@246 (T@U) Bool)
(declare-fun $generated@@247 () T@U)
(declare-fun $generated@@248 (T@U) Bool)
(declare-fun $generated@@249 () T@U)
(declare-fun $generated@@250 () T@U)
(declare-fun $generated@@251 () T@U)
(declare-fun $generated@@252 () T@U)
(declare-fun $generated@@253 () T@U)
(declare-fun $generated@@254 () T@U)
(assert  (and (and (and (and (and (and (and (and (and (and (= (type $generated@@242) $generated@@47) (= (type $generated@@243) $generated@@47)) (= (type $generated@@244) $generated@@47)) (= (type $generated@@245) $generated@@49)) (= (type $generated@@250) $generated@@49)) (= (type $generated@@251) ($generated@@77 $generated@@76 $generated@@78))) (= (type $generated@@249) ($generated@@77 $generated@@76 $generated@@78))) (= (type $generated@@247) ($generated@@77 $generated@@76 $generated@@78))) (= (type $generated@@252) ($generated@@86 $generated@@76 $generated@@4))) (= (type $generated@@253) $generated@@76)) (= (type $generated@@254) ($generated@@79 $generated@@4))))
(set-option :timeout 0)
(set-option :rlimit 0)
(assert (not
 (=> (= (ControlFlow 0 0) 9) (let (($generated@@255  (and (=> (= (ControlFlow 0 2) (- 0 3)) (=> ($generated@@50 $generated@@242 $generated@@243 $generated@@244 $generated@@245) (or ($generated@@45 $generated@@242 $generated@@243 $generated@@244 ($generated@@46 $generated@@195) $generated@@245) (=> (< 0 ($generated@@51 $generated@@245)) ($generated@@45 $generated@@243 $generated@@242 $generated@@244 ($generated@@46 ($generated@@46 $generated@@195)) ($generated@@52 $generated@@245 ($generated@@53 1))))))) (=> (=> ($generated@@50 $generated@@242 $generated@@243 $generated@@244 $generated@@245) (or ($generated@@45 $generated@@242 $generated@@243 $generated@@244 ($generated@@46 $generated@@195) $generated@@245) (=> (< 0 ($generated@@51 $generated@@245)) ($generated@@45 $generated@@243 $generated@@242 $generated@@244 ($generated@@46 ($generated@@46 $generated@@195)) ($generated@@52 $generated@@245 ($generated@@53 1)))))) (=> (= (ControlFlow 0 2) (- 0 1)) (=> ($generated@@50 $generated@@242 $generated@@243 $generated@@244 $generated@@245) (or ($generated@@45 $generated@@242 $generated@@243 $generated@@244 ($generated@@46 $generated@@195) $generated@@245) (=> (= ($generated@@54 0) ($generated@@51 $generated@@245)) (forall (($generated@@256 T@U) ) (!  (=> (and (= (type $generated@@256) $generated@@49) ($generated@@55 $generated@@256 $generated@@245)) ($generated@@45 $generated@@242 $generated@@243 $generated@@244 ($generated@@46 ($generated@@46 $generated@@195)) $generated@@256))
 :pattern ( ($generated@@45 $generated@@242 $generated@@243 $generated@@244 ($generated@@46 ($generated@@46 $generated@@195)) $generated@@256))
))))))))))
(let (($generated@@257  (=> (<= ($generated@@51 $generated@@245) 0) (=> (and (and (and ($generated@@246 $generated@@247) ($generated@@248 $generated@@247)) (= $generated@@249 $generated@@247)) (and (forall (($generated@@258 T@U) ) (!  (=> (and (= (type $generated@@258) $generated@@49) ($generated@@55 $generated@@258 $generated@@245)) ($generated@@45 $generated@@242 $generated@@243 $generated@@244 ($generated@@46 $generated@@195) $generated@@258))
 :no-pattern (type $generated@@258)
 :no-pattern ($generated $generated@@258)
 :no-pattern ($generated@@0 $generated@@258)
)) (= (ControlFlow 0 7) 2))) $generated@@255))))
(let (($generated@@259  (=> (< 0 ($generated@@51 $generated@@245)) (and (=> (= (ControlFlow 0 4) (- 0 6)) ($generated@@191 ($generated@@187 ($generated@@53 1)))) (=> ($generated@@191 ($generated@@187 ($generated@@53 1))) (and (=> (= (ControlFlow 0 4) (- 0 5)) (<= ($generated@@51 ($generated@@187 ($generated@@53 1))) ($generated@@51 $generated@@245))) (=> (<= ($generated@@51 ($generated@@187 ($generated@@53 1))) ($generated@@51 $generated@@245)) (=> (= $generated@@250 ($generated@@52 $generated@@245 ($generated@@53 1))) (=> (and (and (and ($generated@@246 $generated@@251) ($generated@@248 $generated@@251)) ($generated@@50 $generated@@242 $generated@@243 $generated@@244 $generated@@250)) (and (and ($generated@@50 $generated@@242 $generated@@243 $generated@@244 $generated@@250) (and ($generated@@45 $generated@@242 $generated@@243 $generated@@244 ($generated@@46 $generated@@195) $generated@@250) (and (=> (< 0 ($generated@@51 $generated@@250)) ($generated@@45 $generated@@243 $generated@@242 $generated@@244 ($generated@@46 $generated@@195) ($generated@@52 $generated@@250 ($generated@@53 1)))) (=> (= ($generated@@54 0) ($generated@@51 $generated@@250)) (forall (($generated@@260 T@U) ) (!  (=> (and (= (type $generated@@260) $generated@@49) ($generated@@55 $generated@@260 $generated@@250)) ($generated@@45 $generated@@242 $generated@@243 $generated@@244 ($generated@@46 $generated@@195) $generated@@260))
 :pattern ( ($generated@@45 $generated@@242 $generated@@243 $generated@@244 ($generated@@46 $generated@@195) $generated@@260))
)))))) (and (= $generated@@249 $generated@@251) (= (ControlFlow 0 4) 2)))) $generated@@255)))))))))
(let (($generated@@261  (=> (= $generated@@252 ($generated@@74 $generated@@253 $generated@@249 $generated@@254 false)) (and (=> (= (ControlFlow 0 8) 4) $generated@@259) (=> (= (ControlFlow 0 8) 7) $generated@@257)))))
(let (($generated@@262  (=> (and (and ($generated@@246 $generated@@249) ($generated@@248 $generated@@249)) (and (= 2 $generated@@44) (= (ControlFlow 0 9) 8))) $generated@@261)))
$generated@@262))))))
))
(check-sat)
(get-info :reason-unknown)
(assert (not (= (ControlFlow 0 2) (- 3))))
(check-sat)
(pop 1)
; Invalid
(get-info :rlimit)
(reset)
(set-option :rlimit 0)
; did a full reset
(reset)
(set-option :print-success false)
(set-info :smt-lib-version 2.6)
(set-option :auto_config false)
(set-option :type_check true)
(set-option :smt.case_split 3)
(set-option :smt.qi.eager_threshold 100)
(set-option :smt.delay_units true)
(set-option :smt.arith.solver 2)
(set-option :smt.mbqi false)
(set-option :model.compact false)
(set-option :model.v2 true)
(set-option :pp.bv_literals false)
; done setting options


(set-info :category "industrial")
(declare-sort |T@U| 0)
(declare-sort |T@T| 0)
(declare-fun real_pow (Real Real) Real)
(declare-fun UOrdering2 (|T@U| |T@U|) Bool)
(declare-fun UOrdering3 (|T@T| |T@U| |T@U|) Bool)
(declare-fun tickleBool (Bool) Bool)
(assert (and (tickleBool true) (tickleBool false)))
(declare-fun $generated (T@U) Int)
(declare-fun $generated@@0 (T@U) Bool)
(declare-fun $generated@@1 (T@T) Int)
(declare-fun $generated@@2 () T@T)
(declare-fun $generated@@3 () T@T)
(declare-fun $generated@@4 () T@T)
(declare-fun $generated@@5 () T@T)
(declare-fun $generated@@6 () T@T)
(declare-fun $generated@@7 () T@T)
(declare-fun $generated@@8 (Int) T@U)
(declare-fun type (T@U) T@T)
(declare-fun $generated@@9 (Real) T@U)
(declare-fun $generated@@10 (T@U) Real)
(declare-fun $generated@@11 (Bool) T@U)
(declare-fun $generated@@12 (RoundingMode) T@U)
(declare-fun $generated@@13 (T@U) RoundingMode)
(declare-fun $generated@@14 (String) T@U)
(declare-fun $generated@@15 (T@U) String)
(declare-fun $generated@@16 ((RegEx String)) T@U)
(declare-fun $generated@@17 (T@U) (RegEx String))
(declare-fun $generated@@44 () Int)
(declare-fun $generated@@45 (T@U T@U T@U T@U T@U) Bool)
(declare-fun $generated@@46 (T@U) T@U)
(declare-fun $generated@@47 () T@T)
(declare-fun $generated@@48 () T@T)
(declare-fun $generated@@49 () T@T)
(declare-fun $generated@@50 (T@U T@U T@U T@U) Bool)
(declare-fun $generated@@51 (T@U) Int)
(declare-fun $generated@@52 (T@U T@U) T@U)
(declare-fun $generated@@53 (Int) T@U)
(declare-fun $generated@@54 (Int) Int)
(declare-fun $generated@@55 (T@U T@U) Bool)
(declare-fun $generated@@73 (T@U T@U T@U) T@U)
(declare-fun $generated@@74 (T@U T@U T@U Bool) T@U)
(declare-fun $generated@@75 (T@T) T@T)
(declare-fun $generated@@76 () T@T)
(declare-fun $generated@@77 (T@T T@T) T@T)
(declare-fun $generated@@78 () T@T)
(declare-fun $generated@@79 (T@T) T@T)
(declare-fun $generated@@80 (T@U T@U) T@U)
(declare-fun $generated@@81 (T@U T@U) T@U)
(declare-fun $generated@@82 (T@T) T@T)
(declare-fun $generated@@83 (T@T) T@T)
(declare-fun $generated@@84 (T@U T@U T@U) T@U)
(declare-fun $generated@@85 (T@U T@U T@U) T@U)
(declare-fun $generated@@86 (T@T T@T) T@T)
(declare-fun $generated@@87 (T@T) T@T)
(declare-fun $generated@@88 (T@T) T@T)
(declare-fun $generated@@89 (T@U T@U T@U T@U) T@U)
(declare-fun $generated@@187 (T@U) T@U)
(declare-fun $generated@@191 (T@U) Bool)
(declare-fun $generated@@194 (T@U) T@U)
(declare-fun $generated@@195 () T@U)
(declare-fun $generated@@223 (T@U) T@U)
(declare-fun $generated@@224 (T@T T@U) T@U)
(assert  (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (= ($generated@@1 $generated@@2) 0) (= ($generated@@1 $generated@@3) 1)) (= ($generated@@1 $generated@@4) 2)) (= ($generated@@1 $generated@@5) 3)) (= ($generated@@1 $generated@@6) 4)) (= ($generated@@1 $generated@@7) 5)) (forall (($generated@@18 Int) ) (! (= ($generated ($generated@@8 $generated@@18)) $generated@@18)
 :pattern ( ($generated@@8 $generated@@18))
))) (forall (($generated@@19 T@U) ) (!  (=> (= (type $generated@@19) $generated@@2) (= ($generated@@8 ($generated $generated@@19)) $generated@@19))
 :pattern ( ($generated $generated@@19))
))) (forall (($generated@@20 Int) ) (! (= (type ($generated@@8 $generated@@20)) $generated@@2)
 :pattern ( ($generated@@8 $generated@@20))
))) (forall (($generated@@21 Real) ) (! (= ($generated@@10 ($generated@@9 $generated@@21)) $generated@@21)
 :pattern ( ($generated@@9 $generated@@21))
))) (forall (($generated@@22 T@U) ) (!  (=> (= (type $generated@@22) $generated@@3) (= ($generated@@9 ($generated@@10 $generated@@22)) $generated@@22))
 :pattern ( ($generated@@10 $generated@@22))
))) (forall (($generated@@23 Real) ) (! (= (type ($generated@@9 $generated@@23)) $generated@@3)
 :pattern ( ($generated@@9 $generated@@23))
))) (forall (($generated@@24 Bool) ) (! (= ($generated@@0 ($generated@@11 $generated@@24)) $generated@@24)
 :pattern ( ($generated@@11 $generated@@24))
))) (forall (($generated@@25 T@U) ) (!  (=> (= (type $generated@@25) $generated@@4) (= ($generated@@11 ($generated@@0 $generated@@25)) $generated@@25))
 :pattern ( ($generated@@0 $generated@@25))
))) (forall (($generated@@26 Bool) ) (! (= (type ($generated@@11 $generated@@26)) $generated@@4)
 :pattern ( ($generated@@11 $generated@@26))
))) (forall (($generated@@27 RoundingMode) ) (! (= ($generated@@13 ($generated@@12 $generated@@27)) $generated@@27)
 :pattern ( ($generated@@12 $generated@@27))
))) (forall (($generated@@28 T@U) ) (!  (=> (= (type $generated@@28) $generated@@5) (= ($generated@@12 ($generated@@13 $generated@@28)) $generated@@28))
 :pattern ( ($generated@@13 $generated@@28))
))) (forall (($generated@@29 RoundingMode) ) (! (= (type ($generated@@12 $generated@@29)) $generated@@5)
 :pattern ( ($generated@@12 $generated@@29))
))) (forall (($generated@@30 String) ) (! (= ($generated@@15 ($generated@@14 $generated@@30)) $generated@@30)
 :pattern ( ($generated@@14 $generated@@30))
))) (forall (($generated@@31 T@U) ) (!  (=> (= (type $generated@@31) $generated@@6) (= ($generated@@14 ($generated@@15 $generated@@31)) $generated@@31))
 :pattern ( ($generated@@15 $generated@@31))
))) (forall (($generated@@32 String) ) (! (= (type ($generated@@14 $generated@@32)) $generated@@6)
 :pattern ( ($generated@@14 $generated@@32))
))) (forall (($generated@@33 (RegEx String)) ) (! (= ($generated@@17 ($generated@@16 $generated@@33)) $generated@@33)
 :pattern ( ($generated@@16 $generated@@33))
))) (forall (($generated@@34 T@U) ) (!  (=> (= (type $generated@@34) $generated@@7) (= ($generated@@16 ($generated@@17 $generated@@34)) $generated@@34))
 :pattern ( ($generated@@17 $generated@@34))
))) (forall (($generated@@35 (RegEx String)) ) (! (= (type ($generated@@16 $generated@@35)) $generated@@7)
 :pattern ( ($generated@@16 $generated@@35))
))))
(assert (forall (($generated@@36 T@U) ) (! (UOrdering2 $generated@@36 $generated@@36)
 :no-pattern ($generated $generated@@36)
 :no-pattern ($generated@@0 $generated@@36)
)))
(assert (forall (($generated@@37 T@U) ($generated@@38 T@U) ($generated@@39 T@U) ) (! (let (($generated@@40 (type $generated@@37)))
 (=> (and (and (= (type $generated@@38) $generated@@40) (= (type $generated@@39) $generated@@40)) (and (UOrdering2 $generated@@37 $generated@@38) (UOrdering2 $generated@@38 $generated@@39))) (UOrdering2 $generated@@37 $generated@@39)))
 :pattern ( (UOrdering2 $generated@@37 $generated@@38) (UOrdering2 $generated@@38 $generated@@39))
)))
(assert (forall (($generated@@41 T@U) ($generated@@42 T@U) ) (! (let (($generated@@43 (type $generated@@41)))
 (=> (= (type $generated@@42) $generated@@43) (=> (and (UOrdering2 $generated@@41 $generated@@42) (UOrdering2 $generated@@42 $generated@@41)) (= $generated@@41 $generated@@42))))
 :pattern ( (UOrdering2 $generated@@41 $generated@@42) (UOrdering2 $generated@@42 $generated@@41))
)))
(assert  (and (and (and (and (and (= ($generated@@1 $generated@@47) 6) (= ($generated@@1 $generated@@48) 7)) (= ($generated@@1 $generated@@49) 8)) (forall (($generated@@56 T@U) ) (! (= (type ($generated@@46 $generated@@56)) $generated@@48)
 :pattern ( ($generated@@46 $generated@@56))
))) (forall (($generated@@57 T@U) ($generated@@58 T@U) ) (! (= (type ($generated@@52 $generated@@57 $generated@@58)) $generated@@49)
 :pattern ( ($generated@@52 $generated@@57 $generated@@58))
))) (forall (($generated@@59 Int) ) (! (= (type ($generated@@53 $generated@@59)) $generated@@49)
 :pattern ( ($generated@@53 $generated@@59))
))))
(assert  (=> (<= 1 $generated@@44) (forall (($generated@@60 T@U) ($generated@@61 T@U) ($generated@@62 T@U) ($generated@@63 T@U) ($generated@@64 T@U) ) (!  (=> (and (and (and (and (and (= (type $generated@@60) $generated@@47) (= (type $generated@@61) $generated@@47)) (= (type $generated@@62) $generated@@47)) (= (type $generated@@63) $generated@@48)) (= (type $generated@@64) $generated@@49)) (or ($generated@@50 $generated@@60 $generated@@61 $generated@@62 $generated@@64) (not (= 1 $generated@@44)))) (and (and (=> (< 0 ($generated@@51 $generated@@64)) ($generated@@50 $generated@@61 $generated@@60 $generated@@62 ($generated@@52 $generated@@64 ($generated@@53 1)))) (=> (=> (< 0 ($generated@@51 $generated@@64)) ($generated@@45 $generated@@61 $generated@@60 $generated@@62 $generated@@63 ($generated@@52 $generated@@64 ($generated@@53 1)))) (=> (= ($generated@@54 0) ($generated@@51 $generated@@64)) (forall (($generated@@65 T@U) ) (!  (=> (and (= (type $generated@@65) $generated@@49) ($generated@@55 $generated@@65 $generated@@64)) ($generated@@50 $generated@@60 $generated@@61 $generated@@62 $generated@@65))
 :pattern ( ($generated@@45 $generated@@60 $generated@@61 $generated@@62 $generated@@63 $generated@@65))
))))) (= ($generated@@45 $generated@@60 $generated@@61 $generated@@62 ($generated@@46 $generated@@63) $generated@@64)  (and (=> (< 0 ($generated@@51 $generated@@64)) ($generated@@45 $generated@@61 $generated@@60 $generated@@62 $generated@@63 ($generated@@52 $generated@@64 ($generated@@53 1)))) (=> (= ($generated@@54 0) ($generated@@51 $generated@@64)) (forall (($generated@@66 T@U) ) (!  (=> (and (= (type $generated@@66) $generated@@49) ($generated@@55 $generated@@66 $generated@@64)) ($generated@@45 $generated@@60 $generated@@61 $generated@@62 $generated@@63 $generated@@66))
 :pattern ( ($generated@@45 $generated@@60 $generated@@61 $generated@@62 $generated@@63 $generated@@66))
)))))))
 :pattern ( ($generated@@45 $generated@@60 $generated@@61 $generated@@62 ($generated@@46 $generated@@63) $generated@@64))
))))
(assert (forall (($generated@@67 T@U) ($generated@@68 T@U) ($generated@@69 T@U) ) (!  (=> (and (and (and (= (type $generated@@67) $generated@@49) (= (type $generated@@68) $generated@@49)) (= (type $generated@@69) $generated@@49)) (and ($generated@@55 $generated@@67 $generated@@68) ($generated@@55 $generated@@68 $generated@@69))) ($generated@@55 $generated@@67 $generated@@69))
 :pattern ( ($generated@@55 $generated@@67 $generated@@68) ($generated@@55 $generated@@68 $generated@@69))
 :pattern ( ($generated@@55 $generated@@67 $generated@@68) ($generated@@55 $generated@@67 $generated@@69))
)))
(assert (forall (($generated@@70 T@U) ($generated@@71 Int) ($generated@@72 Int) ) (!  (=> (= (type $generated@@70) $generated@@49) (=> (and (and (<= 0 $generated@@71) (<= 0 $generated@@72)) (<= (+ $generated@@71 $generated@@72) ($generated@@51 $generated@@70))) (= ($generated@@52 ($generated@@52 $generated@@70 ($generated@@53 $generated@@71)) ($generated@@53 $generated@@72)) ($generated@@52 $generated@@70 ($generated@@53 (+ $generated@@71 $generated@@72))))))
 :pattern ( ($generated@@52 ($generated@@52 $generated@@70 ($generated@@53 $generated@@71)) ($generated@@53 $generated@@72)))
)))
(assert  (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (forall (($generated@@90 T@T) ($generated@@91 T@T) ) (= ($generated@@1 ($generated@@77 $generated@@90 $generated@@91)) 9)) (forall (($generated@@92 T@T) ($generated@@93 T@T) ) (! (= ($generated@@82 ($generated@@77 $generated@@92 $generated@@93)) $generated@@92)
 :pattern ( ($generated@@77 $generated@@92 $generated@@93))
))) (forall (($generated@@94 T@T) ($generated@@95 T@T) ) (! (= ($generated@@83 ($generated@@77 $generated@@94 $generated@@95)) $generated@@95)
 :pattern ( ($generated@@77 $generated@@94 $generated@@95))
))) (forall (($generated@@96 T@U) ($generated@@97 T@U) ) (! (let (($generated@@98 ($generated@@83 (type $generated@@96))))
(= (type ($generated@@81 $generated@@96 $generated@@97)) $generated@@98))
 :pattern ( ($generated@@81 $generated@@96 $generated@@97))
))) (forall (($generated@@99 T@U) ($generated@@100 T@U) ($generated@@101 T@U) ) (! (let (($generated@@102 (type $generated@@101)))
(let (($generated@@103 (type $generated@@100)))
(= (type ($generated@@84 $generated@@99 $generated@@100 $generated@@101)) ($generated@@77 $generated@@103 $generated@@102))))
 :pattern ( ($generated@@84 $generated@@99 $generated@@100 $generated@@101))
))) (forall (($generated@@104 T@U) ($generated@@105 T@U) ($generated@@106 T@U) ) (! (let (($generated@@107 ($generated@@83 (type $generated@@104))))
 (=> (= (type $generated@@106) $generated@@107) (= ($generated@@81 ($generated@@84 $generated@@104 $generated@@105 $generated@@106) $generated@@105) $generated@@106)))
 :weight 0
))) (and (forall (($generated@@108 T@U) ($generated@@109 T@U) ($generated@@110 T@U) ($generated@@111 T@U) ) (!  (or (= $generated@@110 $generated@@111) (= ($generated@@81 ($generated@@84 $generated@@109 $generated@@110 $generated@@108) $generated@@111) ($generated@@81 $generated@@109 $generated@@111)))
 :weight 0
)) (forall (($generated@@112 T@U) ($generated@@113 T@U) ($generated@@114 T@U) ($generated@@115 T@U) ) (!  (or true (= ($generated@@81 ($generated@@84 $generated@@113 $generated@@114 $generated@@112) $generated@@115) ($generated@@81 $generated@@113 $generated@@115)))
 :weight 0
)))) (forall (($generated@@116 T@T) ) (= ($generated@@1 ($generated@@79 $generated@@116)) 10))) (forall (($generated@@117 T@T) ) (! (= ($generated@@75 ($generated@@79 $generated@@117)) $generated@@117)
 :pattern ( ($generated@@79 $generated@@117))
))) (forall (($generated@@118 T@U) ($generated@@119 T@U) ) (! (let (($generated@@120 ($generated@@75 (type $generated@@119))))
(= (type ($generated@@80 $generated@@118 $generated@@119)) $generated@@120))
 :pattern ( ($generated@@80 $generated@@118 $generated@@119))
))) (= ($generated@@1 $generated@@78) 11)) (forall (($generated@@121 T@U) ($generated@@122 T@U) ($generated@@123 T@U) ) (! (= (type ($generated@@85 $generated@@121 $generated@@122 $generated@@123)) $generated@@78)
 :pattern ( ($generated@@85 $generated@@121 $generated@@122 $generated@@123))
))) (forall (($generated@@124 T@U) ($generated@@125 T@U) ($generated@@126 T@U) ) (! (let (($generated@@127 ($generated@@75 (type $generated@@125))))
 (=> (= (type $generated@@126) $generated@@127) (= ($generated@@80 ($generated@@85 $generated@@124 $generated@@125 $generated@@126) $generated@@125) $generated@@126)))
 :weight 0
))) (and (forall (($generated@@128 T@U) ($generated@@129 T@U) ($generated@@130 T@U) ($generated@@131 T@U) ) (!  (or (= $generated@@130 $generated@@131) (= ($generated@@80 ($generated@@85 $generated@@129 $generated@@130 $generated@@128) $generated@@131) ($generated@@80 $generated@@129 $generated@@131)))
 :weight 0
)) (forall (($generated@@132 T@U) ($generated@@133 T@U) ($generated@@134 T@U) ($generated@@135 T@U) ) (!  (or true (= ($generated@@80 ($generated@@85 $generated@@133 $generated@@134 $generated@@132) $generated@@135) ($generated@@80 $generated@@133 $generated@@135)))
 :weight 0
)))) (= ($generated@@1 $generated@@76) 12)) (forall (($generated@@136 T@T) ($generated@@137 T@T) ) (= ($generated@@1 ($generated@@86 $generated@@136 $generated@@137)) 13))) (forall (($generated@@138 T@T) ($generated@@139 T@T) ) (! (= ($generated@@87 ($generated@@86 $generated@@138 $generated@@139)) $generated@@138)
 :pattern ( ($generated@@86 $generated@@138 $generated@@139))
))) (forall (($generated@@140 T@T) ($generated@@141 T@T) ) (! (= ($generated@@88 ($generated@@86 $generated@@140 $generated@@141)) $generated@@141)
 :pattern ( ($generated@@86 $generated@@140 $generated@@141))
))) (forall (($generated@@142 T@U) ($generated@@143 T@U) ($generated@@144 T@U) ) (! (let (($generated@@145 ($generated@@88 (type $generated@@142))))
(= (type ($generated@@73 $generated@@142 $generated@@143 $generated@@144)) $generated@@145))
 :pattern ( ($generated@@73 $generated@@142 $generated@@143 $generated@@144))
))) (forall (($generated@@146 T@U) ($generated@@147 T@U) ($generated@@148 T@U) ($generated@@149 T@U) ) (! (let (($generated@@150 (type $generated@@149)))
(let (($generated@@151 (type $generated@@147)))
(= (type ($generated@@89 $generated@@146 $generated@@147 $generated@@148 $generated@@149)) ($generated@@86 $generated@@151 $generated@@150))))
 :pattern ( ($generated@@89 $generated@@146 $generated@@147 $generated@@148 $generated@@149))
))) (forall (($generated@@152 T@U) ($generated@@153 T@U) ($generated@@154 T@U) ($generated@@155 T@U) ) (! (let (($generated@@156 ($generated@@88 (type $generated@@152))))
 (=> (= (type $generated@@155) $generated@@156) (= ($generated@@73 ($generated@@89 $generated@@152 $generated@@153 $generated@@154 $generated@@155) $generated@@153 $generated@@154) $generated@@155)))
 :weight 0
))) (and (and (forall (($generated@@157 T@U) ($generated@@158 T@U) ($generated@@159 T@U) ($generated@@160 T@U) ($generated@@161 T@U) ($generated@@162 T@U) ) (!  (or (= $generated@@159 $generated@@161) (= ($generated@@73 ($generated@@89 $generated@@158 $generated@@159 $generated@@160 $generated@@157) $generated@@161 $generated@@162) ($generated@@73 $generated@@158 $generated@@161 $generated@@162)))
 :weight 0
)) (forall (($generated@@163 T@U) ($generated@@164 T@U) ($generated@@165 T@U) ($generated@@166 T@U) ($generated@@167 T@U) ($generated@@168 T@U) ) (!  (or (= $generated@@166 $generated@@168) (= ($generated@@73 ($generated@@89 $generated@@164 $generated@@165 $generated@@166 $generated@@163) $generated@@167 $generated@@168) ($generated@@73 $generated@@164 $generated@@167 $generated@@168)))
 :weight 0
))) (forall (($generated@@169 T@U) ($generated@@170 T@U) ($generated@@171 T@U) ($generated@@172 T@U) ($generated@@173 T@U) ($generated@@174 T@U) ) (!  (or true (= ($generated@@73 ($generated@@89 $generated@@170 $generated@@171 $generated@@172 $generated@@169) $generated@@173 $generated@@174) ($generated@@73 $generated@@170 $generated@@173 $generated@@174)))
 :weight 0
)))) (forall (($generated@@175 T@U) ($generated@@176 T@U) ($generated@@177 T@U) ($generated@@178 Bool) ) (! (= (type ($generated@@74 $generated@@175 $generated@@176 $generated@@177 $generated@@178)) ($generated@@86 $generated@@76 $generated@@4))
 :pattern ( ($generated@@74 $generated@@175 $generated@@176 $generated@@177 $generated@@178))
))))
(assert (forall (($generated@@179 T@U) ($generated@@180 T@U) ($generated@@181 T@U) ($generated@@182 Bool) ($generated@@183 T@U) ($generated@@184 T@U) ) (! (let (($generated@@185 ($generated@@75 (type $generated@@184))))
 (=> (and (and (and (and (= (type $generated@@179) $generated@@76) (= (type $generated@@180) ($generated@@77 $generated@@76 $generated@@78))) (= (type $generated@@181) ($generated@@79 $generated@@4))) (= (type $generated@@183) $generated@@76)) (= (type $generated@@184) ($generated@@79 $generated@@185))) (= ($generated@@0 ($generated@@73 ($generated@@74 $generated@@179 $generated@@180 $generated@@181 $generated@@182) $generated@@183 $generated@@184))  (=> (and (not (= $generated@@183 $generated@@179)) ($generated@@0 ($generated@@80 ($generated@@81 $generated@@180 $generated@@183) $generated@@181))) $generated@@182))))
 :pattern ( ($generated@@73 ($generated@@74 $generated@@179 $generated@@180 $generated@@181 $generated@@182) $generated@@183 $generated@@184))
)))
(assert (forall (($generated@@186 Int) ) (! (= ($generated@@54 $generated@@186) $generated@@186)
 :pattern ( ($generated@@54 $generated@@186))
)))
(assert (forall (($generated@@188 T@U) ) (! (let (($generated@@189 (type $generated@@188)))
(= (type ($generated@@187 $generated@@188)) $generated@@189))
 :pattern ( ($generated@@187 $generated@@188))
)))
(assert (forall (($generated@@190 T@U) ) (! (= ($generated@@187 $generated@@190) $generated@@190)
 :pattern ( ($generated@@187 $generated@@190))
)))
(assert (forall (($generated@@192 T@U) ($generated@@193 T@U) ) (!  (=> (and (and (= (type $generated@@192) $generated@@49) (= (type $generated@@193) $generated@@49)) (and ($generated@@191 $generated@@193) (<= ($generated@@51 $generated@@193) ($generated@@51 $generated@@192)))) (and (= ($generated@@191 ($generated@@52 $generated@@192 $generated@@193)) ($generated@@191 $generated@@192)) (= ($generated@@51 ($generated@@52 $generated@@192 $generated@@193)) (- ($generated@@51 $generated@@192) ($generated@@51 $generated@@193)))))
 :pattern ( ($generated@@52 $generated@@192 $generated@@193))
)))
(assert  (and (forall (($generated@@196 T@U) ) (! (= (type ($generated@@194 $generated@@196)) $generated@@48)
 :pattern ( ($generated@@194 $generated@@196))
)) (= (type $generated@@195) $generated@@48)))
(assert (forall (($generated@@197 T@U) ($generated@@198 T@U) ($generated@@199 T@U) ($generated@@200 T@U) ($generated@@201 T@U) ) (!  (=> (and (and (and (and (= (type $generated@@197) $generated@@47) (= (type $generated@@198) $generated@@47)) (= (type $generated@@199) $generated@@47)) (= (type $generated@@200) $generated@@48)) (= (type $generated@@201) $generated@@49)) (= ($generated@@45 $generated@@197 $generated@@198 $generated@@199 $generated@@200 $generated@@201) ($generated@@45 $generated@@197 $generated@@198 $generated@@199 $generated@@195 $generated@@201)))
 :pattern ( ($generated@@45 $generated@@197 $generated@@198 $generated@@199 ($generated@@194 $generated@@200) $generated@@201))
)))
(assert (forall (($generated@@202 Int) ) (!  (=> (<= 0 $generated@@202) (and ($generated@@191 ($generated@@53 $generated@@202)) (= ($generated@@51 ($generated@@53 $generated@@202)) $generated@@202)))
 :pattern ( ($generated@@53 $generated@@202))
)))
(assert (forall (($generated@@203 T@U) ($generated@@204 T@U) ($generated@@205 T@U) ($generated@@206 T@U) ($generated@@207 T@U) ) (!  (=> (and (and (and (and (= (type $generated@@203) $generated@@47) (= (type $generated@@204) $generated@@47)) (= (type $generated@@205) $generated@@47)) (= (type $generated@@206) $generated@@48)) (= (type $generated@@207) $generated@@49)) (= ($generated@@45 $generated@@203 $generated@@204 $generated@@205 ($generated@@46 $generated@@206) $generated@@207) ($generated@@45 $generated@@203 $generated@@204 $generated@@205 $generated@@206 $generated@@207)))
 :pattern ( ($generated@@45 $generated@@203 $generated@@204 $generated@@205 ($generated@@46 $generated@@206) $generated@@207))
)))
(assert  (=> (<= 1 $generated@@44) (forall (($generated@@208 T@U) ($generated@@209 T@U) ($generated@@210 T@U) ($generated@@211 T@U) ($generated@@212 T@U) ) (!  (=> (and (and (and (and (and (= (type $generated@@208) $generated@@47) (= (type $generated@@209) $generated@@47)) (= (type $generated@@210) $generated@@47)) (= (type $generated@@211) $generated@@48)) (= (type $generated@@212) $generated@@49)) (= $generated@@212 ($generated@@53 0))) ($generated@@45 $generated@@208 $generated@@209 $generated@@210 $generated@@211 $generated@@212))
 :pattern ( ($generated@@45 $generated@@208 $generated@@209 $generated@@210 $generated@@211 $generated@@212))
))))
(assert (forall (($generated@@213 T@U) ($generated@@214 T@U) ) (!  (=> (and (= (type $generated@@213) $generated@@49) (= (type $generated@@214) $generated@@49)) (or (or ($generated@@55 $generated@@213 $generated@@214) (= $generated@@213 $generated@@214)) ($generated@@55 $generated@@214 $generated@@213)))
 :pattern ( ($generated@@55 $generated@@213 $generated@@214) ($generated@@55 $generated@@214 $generated@@213))
)))
(assert (forall (($generated@@215 T@U) ) (!  (=> (= (type $generated@@215) $generated@@49) (<= 0 ($generated@@51 $generated@@215)))
 :pattern ( ($generated@@51 $generated@@215))
)))
(assert  (=> (<= 1 $generated@@44) (forall (($generated@@216 T@U) ($generated@@217 T@U) ($generated@@218 T@U) ($generated@@219 T@U) ($generated@@220 T@U) ) (!  (=> (and (and (and (and (and (= (type $generated@@216) $generated@@47) (= (type $generated@@217) $generated@@47)) (= (type $generated@@218) $generated@@47)) (= (type $generated@@219) $generated@@48)) (= (type $generated@@220) $generated@@49)) (or ($generated@@50 $generated@@216 $generated@@217 $generated@@218 ($generated@@187 $generated@@220)) (not (= 1 $generated@@44)))) (and (and (=> (< 0 ($generated@@51 $generated@@220)) ($generated@@50 $generated@@217 $generated@@216 $generated@@218 ($generated@@52 $generated@@220 ($generated@@53 1)))) (=> (=> (< 0 ($generated@@51 $generated@@220)) ($generated@@45 $generated@@217 $generated@@216 $generated@@218 ($generated@@46 $generated@@219) ($generated@@52 $generated@@220 ($generated@@53 1)))) (=> (= ($generated@@54 0) ($generated@@51 $generated@@220)) (forall (($generated@@221 T@U) ) (!  (=> (and (= (type $generated@@221) $generated@@49) ($generated@@55 $generated@@221 $generated@@220)) ($generated@@50 $generated@@216 $generated@@217 $generated@@218 $generated@@221))
 :pattern ( ($generated@@45 $generated@@216 $generated@@217 $generated@@218 ($generated@@46 $generated@@219) $generated@@221))
))))) (= ($generated@@45 $generated@@216 $generated@@217 $generated@@218 ($generated@@46 $generated@@219) ($generated@@187 $generated@@220))  (and (=> (< 0 ($generated@@51 $generated@@220)) ($generated@@45 $generated@@217 $generated@@216 $generated@@218 ($generated@@46 $generated@@219) ($generated@@52 $generated@@220 ($generated@@53 1)))) (=> (= ($generated@@54 0) ($generated@@51 $generated@@220)) (forall (($generated@@222 T@U) ) (!  (=> (and (= (type $generated@@222) $generated@@49) ($generated@@55 $generated@@222 $generated@@220)) ($generated@@45 $generated@@216 $generated@@217 $generated@@218 ($generated@@46 $generated@@219) $generated@@222))
 :pattern ( ($generated@@45 $generated@@216 $generated@@217 $generated@@218 ($generated@@46 $generated@@219) $generated@@222))
)))))))
 :weight 3
 :pattern ( ($generated@@45 $generated@@216 $generated@@217 $generated@@218 ($generated@@46 $generated@@219) ($generated@@187 $generated@@220)))
))))
(assert  (and (forall (($generated@@225 T@U) ) (! (= (type ($generated@@223 $generated@@225)) $generated@@49)
 :pattern ( ($generated@@223 $generated@@225))
)) (forall (($generated@@226 T@T) ($generated@@227 T@U) ) (! (= (type ($generated@@224 $generated@@226 $generated@@227)) $generated@@226)
 :pattern ( ($generated@@224 $generated@@226 $generated@@227))
))))
(assert (forall (($generated@@228 T@U) ) (! (let (($generated@@229 (type $generated@@228)))
(= ($generated@@224 $generated@@229 ($generated@@223 $generated@@228)) $generated@@228))
 :pattern ( ($generated@@223 $generated@@228))
)))
(assert (forall (($generated@@230 T@U) ($generated@@231 T@U) ) (!  (=> (and (= (type $generated@@230) $generated@@49) (= (type $generated@@231) $generated@@49)) (and (and (and (=> ($generated@@55 $generated@@230 $generated@@231) (not (= $generated@@230 $generated@@231))) (=> (and ($generated@@191 $generated@@230) (not ($generated@@191 $generated@@231))) ($generated@@55 $generated@@230 $generated@@231))) (=> (and ($generated@@191 $generated@@230) ($generated@@191 $generated@@231)) (= ($generated@@55 $generated@@230 $generated@@231) (< ($generated@@51 $generated@@230) ($generated@@51 $generated@@231))))) (=> (and ($generated@@55 $generated@@230 $generated@@231) ($generated@@191 $generated@@231)) ($generated@@191 $generated@@230))))
 :pattern ( ($generated@@55 $generated@@230 $generated@@231))
)))
(assert  (=> (<= 1 $generated@@44) (forall (($generated@@232 T@U) ($generated@@233 T@U) ($generated@@234 T@U) ($generated@@235 T@U) ($generated@@236 T@U) ) (!  (=> (and (and (and (and (and (= (type $generated@@232) $generated@@47) (= (type $generated@@233) $generated@@47)) (= (type $generated@@234) $generated@@47)) (= (type $generated@@235) $generated@@48)) (= (type $generated@@236) $generated@@49)) (or ($generated@@50 $generated@@232 $generated@@233 $generated@@234 $generated@@236) (not (= 1 $generated@@44)))) true)
 :pattern ( ($generated@@45 $generated@@232 $generated@@233 $generated@@234 $generated@@235 $generated@@236))
))))
(assert (forall (($generated@@237 T@U) ) (!  (=> (and (= (type $generated@@237) $generated@@49) ($generated@@191 $generated@@237)) (= $generated@@237 ($generated@@53 ($generated@@51 $generated@@237))))
 :pattern ( ($generated@@51 $generated@@237))
 :pattern ( ($generated@@191 $generated@@237))
)))
(assert (forall (($generated@@238 T@U) ($generated@@239 T@U) ) (!  (=> (and (and (= (type $generated@@238) $generated@@49) (= (type $generated@@239) $generated@@49)) (and ($generated@@191 $generated@@239) (<= ($generated@@51 $generated@@239) ($generated@@51 $generated@@238)))) (or (and (= $generated@@239 ($generated@@53 0)) (= ($generated@@52 $generated@@238 $generated@@239) $generated@@238)) (and (not (= $generated@@239 ($generated@@53 0))) ($generated@@55 ($generated@@52 $generated@@238 $generated@@239) $generated@@238))))
 :pattern ( ($generated@@52 $generated@@238 $generated@@239))
)))
(assert (forall (($generated@@240 Int) ) (! (= ($generated@@223 ($generated@@8 ($generated@@54 $generated@@240))) ($generated@@187 ($generated@@223 ($generated@@8 $generated@@240))))
 :pattern ( ($generated@@223 ($generated@@8 ($generated@@54 $generated@@240))))
)))
(assert (forall (($generated@@241 T@U) ) (! (= ($generated@@223 ($generated@@187 $generated@@241)) ($generated@@187 ($generated@@223 $generated@@241)))
 :pattern ( ($generated@@223 ($generated@@187 $generated@@241)))
)))
(push 1)
(declare-fun ControlFlow (Int Int) Int)
(declare-fun $generated@@242 () T@U)
(declare-fun $generated@@243 () T@U)
(declare-fun $generated@@244 () T@U)
(declare-fun $generated@@245 () T@U)
(declare-fun $generated@@246 (T@U) Bool)
(declare-fun $generated@@247 () T@U)
(declare-fun $generated@@248 (T@U) Bool)
(declare-fun $generated@@249 () T@U)
(declare-fun $generated@@250 () T@U)
(declare-fun $generated@@251 () T@U)
(declare-fun $generated@@252 () T@U)
(declare-fun $generated@@253 () T@U)
(declare-fun $generated@@254 () T@U)
(assert  (and (and (and (and (and (and (and (and (and (and (= (type $generated@@242) $generated@@47) (= (type $generated@@243) $generated@@47)) (= (type $generated@@244) $generated@@47)) (= (type $generated@@245) $generated@@49)) (= (type $generated@@250) $generated@@49)) (= (type $generated@@251) ($generated@@77 $generated@@76 $generated@@78))) (= (type $generated@@249) ($generated@@77 $generated@@76 $generated@@78))) (= (type $generated@@247) ($generated@@77 $generated@@76 $generated@@78))) (= (type $generated@@252) ($generated@@86 $generated@@76 $generated@@4))) (= (type $generated@@253) $generated@@76)) (= (type $generated@@254) ($generated@@79 $generated@@4))))
(set-option :timeout 0)
(set-option :rlimit 0)
(assert (not
 (=> (= (ControlFlow 0 0) 9) (let (($generated@@255  (and (=> (= (ControlFlow 0 2) (- 0 3)) (=> ($generated@@50 $generated@@242 $generated@@243 $generated@@244 $generated@@245) (or ($generated@@45 $generated@@242 $generated@@243 $generated@@244 ($generated@@46 $generated@@195) $generated@@245) (=> (< 0 ($generated@@51 $generated@@245)) ($generated@@45 $generated@@243 $generated@@242 $generated@@244 ($generated@@46 ($generated@@46 $generated@@195)) ($generated@@52 $generated@@245 ($generated@@53 1))))))) (=> (=> ($generated@@50 $generated@@242 $generated@@243 $generated@@244 $generated@@245) (or ($generated@@45 $generated@@242 $generated@@243 $generated@@244 ($generated@@46 $generated@@195) $generated@@245) (=> (< 0 ($generated@@51 $generated@@245)) ($generated@@45 $generated@@243 $generated@@242 $generated@@244 ($generated@@46 ($generated@@46 $generated@@195)) ($generated@@52 $generated@@245 ($generated@@53 1)))))) (=> (= (ControlFlow 0 2) (- 0 1)) (=> ($generated@@50 $generated@@242 $generated@@243 $generated@@244 $generated@@245) (or ($generated@@45 $generated@@242 $generated@@243 $generated@@244 ($generated@@46 $generated@@195) $generated@@245) (=> (= ($generated@@54 0) ($generated@@51 $generated@@245)) (forall (($generated@@256 T@U) ) (!  (=> (and (= (type $generated@@256) $generated@@49) ($generated@@55 $generated@@256 $generated@@245)) ($generated@@45 $generated@@242 $generated@@243 $generated@@244 ($generated@@46 ($generated@@46 $generated@@195)) $generated@@256))
 :pattern ( ($generated@@45 $generated@@242 $generated@@243 $generated@@244 ($generated@@46 ($generated@@46 $generated@@195)) $generated@@256))
))))))))))
(let (($generated@@257  (=> (<= ($generated@@51 $generated@@245) 0) (=> (and (and (and ($generated@@246 $generated@@247) ($generated@@248 $generated@@247)) (= $generated@@249 $generated@@247)) (and (forall (($generated@@258 T@U) ) (!  (=> (and (= (type $generated@@258) $generated@@49) ($generated@@55 $generated@@258 $generated@@245)) ($generated@@45 $generated@@242 $generated@@243 $generated@@244 ($generated@@46 $generated@@195) $generated@@258))
 :no-pattern (type $generated@@258)
 :no-pattern ($generated $generated@@258)
 :no-pattern ($generated@@0 $generated@@258)
)) (= (ControlFlow 0 7) 2))) $generated@@255))))
(let (($generated@@259  (=> (< 0 ($generated@@51 $generated@@245)) (and (=> (= (ControlFlow 0 4) (- 0 6)) ($generated@@191 ($generated@@187 ($generated@@53 1)))) (=> ($generated@@191 ($generated@@187 ($generated@@53 1))) (and (=> (= (ControlFlow 0 4) (- 0 5)) (<= ($generated@@51 ($generated@@187 ($generated@@53 1))) ($generated@@51 $generated@@245))) (=> (<= ($generated@@51 ($generated@@187 ($generated@@53 1))) ($generated@@51 $generated@@245)) (=> (= $generated@@250 ($generated@@52 $generated@@245 ($generated@@53 1))) (=> (and (and (and ($generated@@246 $generated@@251) ($generated@@248 $generated@@251)) ($generated@@50 $generated@@243 $generated@@242 $generated@@244 $generated@@250)) (and (and ($generated@@50 $generated@@243 $generated@@242 $generated@@244 $generated@@250) (and ($generated@@45 $generated@@243 $generated@@242 $generated@@244 ($generated@@46 $generated@@195) $generated@@250) (and (=> (< 0 ($generated@@51 $generated@@250)) ($generated@@45 $generated@@242 $generated@@243 $generated@@244 ($generated@@46 $generated@@195) ($generated@@52 $generated@@250 ($generated@@53 1)))) (=> (= ($generated@@54 0) ($generated@@51 $generated@@250)) (forall (($generated@@260 T@U) ) (!  (=> (and (= (type $generated@@260) $generated@@49) ($generated@@55 $generated@@260 $generated@@250)) ($generated@@45 $generated@@243 $generated@@242 $generated@@244 ($generated@@46 $generated@@195) $generated@@260))
 :pattern ( ($generated@@45 $generated@@243 $generated@@242 $generated@@244 ($generated@@46 $generated@@195) $generated@@260))
)))))) (and (= $generated@@249 $generated@@251) (= (ControlFlow 0 4) 2)))) $generated@@255)))))))))
(let (($generated@@261  (=> (= $generated@@252 ($generated@@74 $generated@@253 $generated@@249 $generated@@254 false)) (and (=> (= (ControlFlow 0 8) 4) $generated@@259) (=> (= (ControlFlow 0 8) 7) $generated@@257)))))
(let (($generated@@262  (=> (and (and ($generated@@246 $generated@@249) ($generated@@248 $generated@@249)) (and (= 2 $generated@@44) (= (ControlFlow 0 9) 8))) $generated@@261)))
$generated@@262))))))
))
(check-sat)
(pop 1)
; Valid
(get-info :rlimit)
(reset)
(set-option :rlimit 0)
; did a full reset
(reset)
(set-option :print-success false)
(set-info :smt-lib-version 2.6)
(set-option :auto_config false)
(set-option :type_check true)
(set-option :smt.case_split 3)
(set-option :smt.qi.eager_threshold 100)
(set-option :smt.delay_units true)
(set-option :smt.arith.solver 2)
(set-option :smt.mbqi false)
(set-option :model.compact false)
(set-option :model.v2 true)
(set-option :pp.bv_literals false)
; done setting options


(set-info :category "industrial")
(declare-sort |T@U| 0)
(declare-sort |T@T| 0)
(declare-fun real_pow (Real Real) Real)
(declare-fun UOrdering2 (|T@U| |T@U|) Bool)
(declare-fun UOrdering3 (|T@T| |T@U| |T@U|) Bool)
(declare-fun tickleBool (Bool) Bool)
(assert (and (tickleBool true) (tickleBool false)))
(declare-fun $generated (T@U) Int)
(declare-fun $generated@@0 (T@U) Bool)
(declare-fun $generated@@1 (T@T) Int)
(declare-fun $generated@@2 () T@T)
(declare-fun $generated@@3 () T@T)
(declare-fun $generated@@4 () T@T)
(declare-fun $generated@@5 () T@T)
(declare-fun $generated@@6 () T@T)
(declare-fun $generated@@7 () T@T)
(declare-fun $generated@@8 (Int) T@U)
(declare-fun type (T@U) T@T)
(declare-fun $generated@@9 (Real) T@U)
(declare-fun $generated@@10 (T@U) Real)
(declare-fun $generated@@11 (Bool) T@U)
(declare-fun $generated@@12 (RoundingMode) T@U)
(declare-fun $generated@@13 (T@U) RoundingMode)
(declare-fun $generated@@14 (String) T@U)
(declare-fun $generated@@15 (T@U) String)
(declare-fun $generated@@16 ((RegEx String)) T@U)
(declare-fun $generated@@17 (T@U) (RegEx String))
(declare-fun $generated@@44 () T@U)
(declare-fun $generated@@45 () T@U)
(declare-fun $generated@@46 () T@U)
(declare-fun $generated@@47 () T@T)
(declare-fun $generated@@48 () T@T)
(declare-fun $generated@@49 (T@T) T@T)
(declare-fun $generated@@50 (T@T) T@T)
(declare-fun $generated@@53 (T@U) T@U)
(declare-fun $generated@@55 () Int)
(declare-fun $generated@@56 (T@U T@U T@U T@U T@U) Bool)
(declare-fun $generated@@57 (T@U) T@U)
(declare-fun $generated@@58 () T@T)
(declare-fun $generated@@59 () T@T)
(declare-fun $generated@@60 (T@U T@U T@U T@U) Bool)
(declare-fun $generated@@61 (T@U) Int)
(declare-fun $generated@@62 (T@U T@U) T@U)
(declare-fun $generated@@63 (Int) T@U)
(declare-fun $generated@@64 (Int) Int)
(declare-fun $generated@@65 (T@U T@U) Bool)
(declare-fun $generated@@83 (T@U T@U T@U) T@U)
(declare-fun $generated@@84 (T@U T@U T@U Bool) T@U)
(declare-fun $generated@@85 () T@T)
(declare-fun $generated@@86 (T@T T@T) T@T)
(declare-fun $generated@@87 () T@T)
(declare-fun $generated@@88 (T@U T@U) T@U)
(declare-fun $generated@@89 (T@U T@U) T@U)
(declare-fun $generated@@90 (T@T) T@T)
(declare-fun $generated@@91 (T@T) T@T)
(declare-fun $generated@@92 (T@U T@U T@U) T@U)
(declare-fun $generated@@93 (T@U T@U T@U) T@U)
(declare-fun $generated@@94 (T@T T@T) T@T)
(declare-fun $generated@@95 (T@T) T@T)
(declare-fun $generated@@96 (T@T) T@T)
(declare-fun $generated@@97 (T@U T@U T@U T@U) T@U)
(declare-fun $generated@@193 (T@U) T@U)
(declare-fun $generated@@197 (T@U) Bool)
(declare-fun $generated@@200 (T@U) T@U)
(declare-fun $generated@@201 () T@U)
(declare-fun $generated@@229 (T@U) T@U)
(declare-fun $generated@@230 (T@T T@U) T@U)
(assert  (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (= ($generated@@1 $generated@@2) 0) (= ($generated@@1 $generated@@3) 1)) (= ($generated@@1 $generated@@4) 2)) (= ($generated@@1 $generated@@5) 3)) (= ($generated@@1 $generated@@6) 4)) (= ($generated@@1 $generated@@7) 5)) (forall (($generated@@18 Int) ) (! (= ($generated ($generated@@8 $generated@@18)) $generated@@18)
 :pattern ( ($generated@@8 $generated@@18))
))) (forall (($generated@@19 T@U) ) (!  (=> (= (type $generated@@19) $generated@@2) (= ($generated@@8 ($generated $generated@@19)) $generated@@19))
 :pattern ( ($generated $generated@@19))
))) (forall (($generated@@20 Int) ) (! (= (type ($generated@@8 $generated@@20)) $generated@@2)
 :pattern ( ($generated@@8 $generated@@20))
))) (forall (($generated@@21 Real) ) (! (= ($generated@@10 ($generated@@9 $generated@@21)) $generated@@21)
 :pattern ( ($generated@@9 $generated@@21))
))) (forall (($generated@@22 T@U) ) (!  (=> (= (type $generated@@22) $generated@@3) (= ($generated@@9 ($generated@@10 $generated@@22)) $generated@@22))
 :pattern ( ($generated@@10 $generated@@22))
))) (forall (($generated@@23 Real) ) (! (= (type ($generated@@9 $generated@@23)) $generated@@3)
 :pattern ( ($generated@@9 $generated@@23))
))) (forall (($generated@@24 Bool) ) (! (= ($generated@@0 ($generated@@11 $generated@@24)) $generated@@24)
 :pattern ( ($generated@@11 $generated@@24))
))) (forall (($generated@@25 T@U) ) (!  (=> (= (type $generated@@25) $generated@@4) (= ($generated@@11 ($generated@@0 $generated@@25)) $generated@@25))
 :pattern ( ($generated@@0 $generated@@25))
))) (forall (($generated@@26 Bool) ) (! (= (type ($generated@@11 $generated@@26)) $generated@@4)
 :pattern ( ($generated@@11 $generated@@26))
))) (forall (($generated@@27 RoundingMode) ) (! (= ($generated@@13 ($generated@@12 $generated@@27)) $generated@@27)
 :pattern ( ($generated@@12 $generated@@27))
))) (forall (($generated@@28 T@U) ) (!  (=> (= (type $generated@@28) $generated@@5) (= ($generated@@12 ($generated@@13 $generated@@28)) $generated@@28))
 :pattern ( ($generated@@13 $generated@@28))
))) (forall (($generated@@29 RoundingMode) ) (! (= (type ($generated@@12 $generated@@29)) $generated@@5)
 :pattern ( ($generated@@12 $generated@@29))
))) (forall (($generated@@30 String) ) (! (= ($generated@@15 ($generated@@14 $generated@@30)) $generated@@30)
 :pattern ( ($generated@@14 $generated@@30))
))) (forall (($generated@@31 T@U) ) (!  (=> (= (type $generated@@31) $generated@@6) (= ($generated@@14 ($generated@@15 $generated@@31)) $generated@@31))
 :pattern ( ($generated@@15 $generated@@31))
))) (forall (($generated@@32 String) ) (! (= (type ($generated@@14 $generated@@32)) $generated@@6)
 :pattern ( ($generated@@14 $generated@@32))
))) (forall (($generated@@33 (RegEx String)) ) (! (= ($generated@@17 ($generated@@16 $generated@@33)) $generated@@33)
 :pattern ( ($generated@@16 $generated@@33))
))) (forall (($generated@@34 T@U) ) (!  (=> (= (type $generated@@34) $generated@@7) (= ($generated@@16 ($generated@@17 $generated@@34)) $generated@@34))
 :pattern ( ($generated@@17 $generated@@34))
))) (forall (($generated@@35 (RegEx String)) ) (! (= (type ($generated@@16 $generated@@35)) $generated@@7)
 :pattern ( ($generated@@16 $generated@@35))
))))
(assert (forall (($generated@@36 T@U) ) (! (UOrdering2 $generated@@36 $generated@@36)
 :no-pattern ($generated $generated@@36)
 :no-pattern ($generated@@0 $generated@@36)
)))
(assert (forall (($generated@@37 T@U) ($generated@@38 T@U) ($generated@@39 T@U) ) (! (let (($generated@@40 (type $generated@@37)))
 (=> (and (and (= (type $generated@@38) $generated@@40) (= (type $generated@@39) $generated@@40)) (and (UOrdering2 $generated@@37 $generated@@38) (UOrdering2 $generated@@38 $generated@@39))) (UOrdering2 $generated@@37 $generated@@39)))
 :pattern ( (UOrdering2 $generated@@37 $generated@@38) (UOrdering2 $generated@@38 $generated@@39))
)))
(assert (forall (($generated@@41 T@U) ($generated@@42 T@U) ) (! (let (($generated@@43 (type $generated@@41)))
 (=> (= (type $generated@@42) $generated@@43) (=> (and (UOrdering2 $generated@@41 $generated@@42) (UOrdering2 $generated@@42 $generated@@41)) (= $generated@@41 $generated@@42))))
 :pattern ( (UOrdering2 $generated@@41 $generated@@42) (UOrdering2 $generated@@42 $generated@@41))
)))
(assert  (and (and (and (and (and (and (= ($generated@@1 $generated@@47) 6) (= (type $generated@@44) $generated@@47)) (= ($generated@@1 $generated@@48) 7)) (= (type $generated@@45) $generated@@48)) (forall (($generated@@51 T@T) ) (= ($generated@@1 ($generated@@49 $generated@@51)) 8))) (forall (($generated@@52 T@T) ) (! (= ($generated@@50 ($generated@@49 $generated@@52)) $generated@@52)
 :pattern ( ($generated@@49 $generated@@52))
))) (= (type $generated@@46) ($generated@@49 $generated@@4))))
(assert (distinct $generated@@44 $generated@@45 $generated@@46)
)
(assert (forall (($generated@@54 T@U) ) (! (= (type ($generated@@53 $generated@@54)) $generated@@48)
 :pattern ( ($generated@@53 $generated@@54))
)))
(assert (= ($generated@@53 $generated@@44) $generated@@45))
(assert  (and (and (and (and (= ($generated@@1 $generated@@58) 9) (= ($generated@@1 $generated@@59) 10)) (forall (($generated@@66 T@U) ) (! (= (type ($generated@@57 $generated@@66)) $generated@@58)
 :pattern ( ($generated@@57 $generated@@66))
))) (forall (($generated@@67 T@U) ($generated@@68 T@U) ) (! (= (type ($generated@@62 $generated@@67 $generated@@68)) $generated@@59)
 :pattern ( ($generated@@62 $generated@@67 $generated@@68))
))) (forall (($generated@@69 Int) ) (! (= (type ($generated@@63 $generated@@69)) $generated@@59)
 :pattern ( ($generated@@63 $generated@@69))
))))
(assert  (=> (<= 1 $generated@@55) (forall (($generated@@70 T@U) ($generated@@71 T@U) ($generated@@72 T@U) ($generated@@73 T@U) ($generated@@74 T@U) ) (!  (=> (and (and (and (and (and (= (type $generated@@70) $generated@@47) (= (type $generated@@71) $generated@@47)) (= (type $generated@@72) $generated@@47)) (= (type $generated@@73) $generated@@58)) (= (type $generated@@74) $generated@@59)) (or ($generated@@60 $generated@@70 $generated@@71 $generated@@72 $generated@@74) (not (= 1 $generated@@55)))) (and (and (=> (< 0 ($generated@@61 $generated@@74)) ($generated@@60 $generated@@71 $generated@@70 $generated@@72 ($generated@@62 $generated@@74 ($generated@@63 1)))) (=> (=> (< 0 ($generated@@61 $generated@@74)) ($generated@@56 $generated@@71 $generated@@70 $generated@@72 $generated@@73 ($generated@@62 $generated@@74 ($generated@@63 1)))) (=> (= ($generated@@64 0) ($generated@@61 $generated@@74)) (forall (($generated@@75 T@U) ) (!  (=> (and (= (type $generated@@75) $generated@@59) ($generated@@65 $generated@@75 $generated@@74)) ($generated@@60 $generated@@70 $generated@@71 $generated@@72 $generated@@75))
 :pattern ( ($generated@@56 $generated@@70 $generated@@71 $generated@@72 $generated@@73 $generated@@75))
))))) (= ($generated@@56 $generated@@70 $generated@@71 $generated@@72 ($generated@@57 $generated@@73) $generated@@74)  (and (=> (< 0 ($generated@@61 $generated@@74)) ($generated@@56 $generated@@71 $generated@@70 $generated@@72 $generated@@73 ($generated@@62 $generated@@74 ($generated@@63 1)))) (=> (= ($generated@@64 0) ($generated@@61 $generated@@74)) (forall (($generated@@76 T@U) ) (!  (=> (and (= (type $generated@@76) $generated@@59) ($generated@@65 $generated@@76 $generated@@74)) ($generated@@56 $generated@@70 $generated@@71 $generated@@72 $generated@@73 $generated@@76))
 :pattern ( ($generated@@56 $generated@@70 $generated@@71 $generated@@72 $generated@@73 $generated@@76))
)))))))
 :pattern ( ($generated@@56 $generated@@70 $generated@@71 $generated@@72 ($generated@@57 $generated@@73) $generated@@74))
))))
(assert (forall (($generated@@77 T@U) ($generated@@78 T@U) ($generated@@79 T@U) ) (!  (=> (and (and (and (= (type $generated@@77) $generated@@59) (= (type $generated@@78) $generated@@59)) (= (type $generated@@79) $generated@@59)) (and ($generated@@65 $generated@@77 $generated@@78) ($generated@@65 $generated@@78 $generated@@79))) ($generated@@65 $generated@@77 $generated@@79))
 :pattern ( ($generated@@65 $generated@@77 $generated@@78) ($generated@@65 $generated@@78 $generated@@79))
 :pattern ( ($generated@@65 $generated@@77 $generated@@78) ($generated@@65 $generated@@77 $generated@@79))
)))
(assert (forall (($generated@@80 T@U) ($generated@@81 Int) ($generated@@82 Int) ) (!  (=> (= (type $generated@@80) $generated@@59) (=> (and (and (<= 0 $generated@@81) (<= 0 $generated@@82)) (<= (+ $generated@@81 $generated@@82) ($generated@@61 $generated@@80))) (= ($generated@@62 ($generated@@62 $generated@@80 ($generated@@63 $generated@@81)) ($generated@@63 $generated@@82)) ($generated@@62 $generated@@80 ($generated@@63 (+ $generated@@81 $generated@@82))))))
 :pattern ( ($generated@@62 ($generated@@62 $generated@@80 ($generated@@63 $generated@@81)) ($generated@@63 $generated@@82)))
)))
(assert  (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (forall (($generated@@98 T@T) ($generated@@99 T@T) ) (= ($generated@@1 ($generated@@86 $generated@@98 $generated@@99)) 11)) (forall (($generated@@100 T@T) ($generated@@101 T@T) ) (! (= ($generated@@90 ($generated@@86 $generated@@100 $generated@@101)) $generated@@100)
 :pattern ( ($generated@@86 $generated@@100 $generated@@101))
))) (forall (($generated@@102 T@T) ($generated@@103 T@T) ) (! (= ($generated@@91 ($generated@@86 $generated@@102 $generated@@103)) $generated@@103)
 :pattern ( ($generated@@86 $generated@@102 $generated@@103))
))) (forall (($generated@@104 T@U) ($generated@@105 T@U) ) (! (let (($generated@@106 ($generated@@91 (type $generated@@104))))
(= (type ($generated@@89 $generated@@104 $generated@@105)) $generated@@106))
 :pattern ( ($generated@@89 $generated@@104 $generated@@105))
))) (forall (($generated@@107 T@U) ($generated@@108 T@U) ($generated@@109 T@U) ) (! (let (($generated@@110 (type $generated@@109)))
(let (($generated@@111 (type $generated@@108)))
(= (type ($generated@@92 $generated@@107 $generated@@108 $generated@@109)) ($generated@@86 $generated@@111 $generated@@110))))
 :pattern ( ($generated@@92 $generated@@107 $generated@@108 $generated@@109))
))) (forall (($generated@@112 T@U) ($generated@@113 T@U) ($generated@@114 T@U) ) (! (let (($generated@@115 ($generated@@91 (type $generated@@112))))
 (=> (= (type $generated@@114) $generated@@115) (= ($generated@@89 ($generated@@92 $generated@@112 $generated@@113 $generated@@114) $generated@@113) $generated@@114)))
 :weight 0
))) (and (forall (($generated@@116 T@U) ($generated@@117 T@U) ($generated@@118 T@U) ($generated@@119 T@U) ) (!  (or (= $generated@@118 $generated@@119) (= ($generated@@89 ($generated@@92 $generated@@117 $generated@@118 $generated@@116) $generated@@119) ($generated@@89 $generated@@117 $generated@@119)))
 :weight 0
)) (forall (($generated@@120 T@U) ($generated@@121 T@U) ($generated@@122 T@U) ($generated@@123 T@U) ) (!  (or true (= ($generated@@89 ($generated@@92 $generated@@121 $generated@@122 $generated@@120) $generated@@123) ($generated@@89 $generated@@121 $generated@@123)))
 :weight 0
)))) (forall (($generated@@124 T@U) ($generated@@125 T@U) ) (! (let (($generated@@126 ($generated@@50 (type $generated@@125))))
(= (type ($generated@@88 $generated@@124 $generated@@125)) $generated@@126))
 :pattern ( ($generated@@88 $generated@@124 $generated@@125))
))) (= ($generated@@1 $generated@@87) 12)) (forall (($generated@@127 T@U) ($generated@@128 T@U) ($generated@@129 T@U) ) (! (= (type ($generated@@93 $generated@@127 $generated@@128 $generated@@129)) $generated@@87)
 :pattern ( ($generated@@93 $generated@@127 $generated@@128 $generated@@129))
))) (forall (($generated@@130 T@U) ($generated@@131 T@U) ($generated@@132 T@U) ) (! (let (($generated@@133 ($generated@@50 (type $generated@@131))))
 (=> (= (type $generated@@132) $generated@@133) (= ($generated@@88 ($generated@@93 $generated@@130 $generated@@131 $generated@@132) $generated@@131) $generated@@132)))
 :weight 0
))) (and (forall (($generated@@134 T@U) ($generated@@135 T@U) ($generated@@136 T@U) ($generated@@137 T@U) ) (!  (or (= $generated@@136 $generated@@137) (= ($generated@@88 ($generated@@93 $generated@@135 $generated@@136 $generated@@134) $generated@@137) ($generated@@88 $generated@@135 $generated@@137)))
 :weight 0
)) (forall (($generated@@138 T@U) ($generated@@139 T@U) ($generated@@140 T@U) ($generated@@141 T@U) ) (!  (or true (= ($generated@@88 ($generated@@93 $generated@@139 $generated@@140 $generated@@138) $generated@@141) ($generated@@88 $generated@@139 $generated@@141)))
 :weight 0
)))) (= ($generated@@1 $generated@@85) 13)) (forall (($generated@@142 T@T) ($generated@@143 T@T) ) (= ($generated@@1 ($generated@@94 $generated@@142 $generated@@143)) 14))) (forall (($generated@@144 T@T) ($generated@@145 T@T) ) (! (= ($generated@@95 ($generated@@94 $generated@@144 $generated@@145)) $generated@@144)
 :pattern ( ($generated@@94 $generated@@144 $generated@@145))
))) (forall (($generated@@146 T@T) ($generated@@147 T@T) ) (! (= ($generated@@96 ($generated@@94 $generated@@146 $generated@@147)) $generated@@147)
 :pattern ( ($generated@@94 $generated@@146 $generated@@147))
))) (forall (($generated@@148 T@U) ($generated@@149 T@U) ($generated@@150 T@U) ) (! (let (($generated@@151 ($generated@@96 (type $generated@@148))))
(= (type ($generated@@83 $generated@@148 $generated@@149 $generated@@150)) $generated@@151))
 :pattern ( ($generated@@83 $generated@@148 $generated@@149 $generated@@150))
))) (forall (($generated@@152 T@U) ($generated@@153 T@U) ($generated@@154 T@U) ($generated@@155 T@U) ) (! (let (($generated@@156 (type $generated@@155)))
(let (($generated@@157 (type $generated@@153)))
(= (type ($generated@@97 $generated@@152 $generated@@153 $generated@@154 $generated@@155)) ($generated@@94 $generated@@157 $generated@@156))))
 :pattern ( ($generated@@97 $generated@@152 $generated@@153 $generated@@154 $generated@@155))
))) (forall (($generated@@158 T@U) ($generated@@159 T@U) ($generated@@160 T@U) ($generated@@161 T@U) ) (! (let (($generated@@162 ($generated@@96 (type $generated@@158))))
 (=> (= (type $generated@@161) $generated@@162) (= ($generated@@83 ($generated@@97 $generated@@158 $generated@@159 $generated@@160 $generated@@161) $generated@@159 $generated@@160) $generated@@161)))
 :weight 0
))) (and (and (forall (($generated@@163 T@U) ($generated@@164 T@U) ($generated@@165 T@U) ($generated@@166 T@U) ($generated@@167 T@U) ($generated@@168 T@U) ) (!  (or (= $generated@@165 $generated@@167) (= ($generated@@83 ($generated@@97 $generated@@164 $generated@@165 $generated@@166 $generated@@163) $generated@@167 $generated@@168) ($generated@@83 $generated@@164 $generated@@167 $generated@@168)))
 :weight 0
)) (forall (($generated@@169 T@U) ($generated@@170 T@U) ($generated@@171 T@U) ($generated@@172 T@U) ($generated@@173 T@U) ($generated@@174 T@U) ) (!  (or (= $generated@@172 $generated@@174) (= ($generated@@83 ($generated@@97 $generated@@170 $generated@@171 $generated@@172 $generated@@169) $generated@@173 $generated@@174) ($generated@@83 $generated@@170 $generated@@173 $generated@@174)))
 :weight 0
))) (forall (($generated@@175 T@U) ($generated@@176 T@U) ($generated@@177 T@U) ($generated@@178 T@U) ($generated@@179 T@U) ($generated@@180 T@U) ) (!  (or true (= ($generated@@83 ($generated@@97 $generated@@176 $generated@@177 $generated@@178 $generated@@175) $generated@@179 $generated@@180) ($generated@@83 $generated@@176 $generated@@179 $generated@@180)))
 :weight 0
)))) (forall (($generated@@181 T@U) ($generated@@182 T@U) ($generated@@183 T@U) ($generated@@184 Bool) ) (! (= (type ($generated@@84 $generated@@181 $generated@@182 $generated@@183 $generated@@184)) ($generated@@94 $generated@@85 $generated@@4))
 :pattern ( ($generated@@84 $generated@@181 $generated@@182 $generated@@183 $generated@@184))
))))
(assert (forall (($generated@@185 T@U) ($generated@@186 T@U) ($generated@@187 T@U) ($generated@@188 Bool) ($generated@@189 T@U) ($generated@@190 T@U) ) (! (let (($generated@@191 ($generated@@50 (type $generated@@190))))
 (=> (and (and (and (and (= (type $generated@@185) $generated@@85) (= (type $generated@@186) ($generated@@86 $generated@@85 $generated@@87))) (= (type $generated@@187) ($generated@@49 $generated@@4))) (= (type $generated@@189) $generated@@85)) (= (type $generated@@190) ($generated@@49 $generated@@191))) (= ($generated@@0 ($generated@@83 ($generated@@84 $generated@@185 $generated@@186 $generated@@187 $generated@@188) $generated@@189 $generated@@190))  (=> (and (not (= $generated@@189 $generated@@185)) ($generated@@0 ($generated@@88 ($generated@@89 $generated@@186 $generated@@189) $generated@@187))) $generated@@188))))
 :pattern ( ($generated@@83 ($generated@@84 $generated@@185 $generated@@186 $generated@@187 $generated@@188) $generated@@189 $generated@@190))
)))
(assert (forall (($generated@@192 Int) ) (! (= ($generated@@64 $generated@@192) $generated@@192)
 :pattern ( ($generated@@64 $generated@@192))
)))
(assert (forall (($generated@@194 T@U) ) (! (let (($generated@@195 (type $generated@@194)))
(= (type ($generated@@193 $generated@@194)) $generated@@195))
 :pattern ( ($generated@@193 $generated@@194))
)))
(assert (forall (($generated@@196 T@U) ) (! (= ($generated@@193 $generated@@196) $generated@@196)
 :pattern ( ($generated@@193 $generated@@196))
)))
(assert (forall (($generated@@198 T@U) ($generated@@199 T@U) ) (!  (=> (and (and (= (type $generated@@198) $generated@@59) (= (type $generated@@199) $generated@@59)) (and ($generated@@197 $generated@@199) (<= ($generated@@61 $generated@@199) ($generated@@61 $generated@@198)))) (and (= ($generated@@197 ($generated@@62 $generated@@198 $generated@@199)) ($generated@@197 $generated@@198)) (= ($generated@@61 ($generated@@62 $generated@@198 $generated@@199)) (- ($generated@@61 $generated@@198) ($generated@@61 $generated@@199)))))
 :pattern ( ($generated@@62 $generated@@198 $generated@@199))
)))
(assert  (and (forall (($generated@@202 T@U) ) (! (= (type ($generated@@200 $generated@@202)) $generated@@58)
 :pattern ( ($generated@@200 $generated@@202))
)) (= (type $generated@@201) $generated@@58)))
(assert (forall (($generated@@203 T@U) ($generated@@204 T@U) ($generated@@205 T@U) ($generated@@206 T@U) ($generated@@207 T@U) ) (!  (=> (and (and (and (and (= (type $generated@@203) $generated@@47) (= (type $generated@@204) $generated@@47)) (= (type $generated@@205) $generated@@47)) (= (type $generated@@206) $generated@@58)) (= (type $generated@@207) $generated@@59)) (= ($generated@@56 $generated@@203 $generated@@204 $generated@@205 $generated@@206 $generated@@207) ($generated@@56 $generated@@203 $generated@@204 $generated@@205 $generated@@201 $generated@@207)))
 :pattern ( ($generated@@56 $generated@@203 $generated@@204 $generated@@205 ($generated@@200 $generated@@206) $generated@@207))
)))
(assert (forall (($generated@@208 Int) ) (!  (=> (<= 0 $generated@@208) (and ($generated@@197 ($generated@@63 $generated@@208)) (= ($generated@@61 ($generated@@63 $generated@@208)) $generated@@208)))
 :pattern ( ($generated@@63 $generated@@208))
)))
(assert (forall (($generated@@209 T@U) ($generated@@210 T@U) ($generated@@211 T@U) ($generated@@212 T@U) ($generated@@213 T@U) ) (!  (=> (and (and (and (and (= (type $generated@@209) $generated@@47) (= (type $generated@@210) $generated@@47)) (= (type $generated@@211) $generated@@47)) (= (type $generated@@212) $generated@@58)) (= (type $generated@@213) $generated@@59)) (= ($generated@@56 $generated@@209 $generated@@210 $generated@@211 ($generated@@57 $generated@@212) $generated@@213) ($generated@@56 $generated@@209 $generated@@210 $generated@@211 $generated@@212 $generated@@213)))
 :pattern ( ($generated@@56 $generated@@209 $generated@@210 $generated@@211 ($generated@@57 $generated@@212) $generated@@213))
)))
(assert  (=> (<= 1 $generated@@55) (forall (($generated@@214 T@U) ($generated@@215 T@U) ($generated@@216 T@U) ($generated@@217 T@U) ($generated@@218 T@U) ) (!  (=> (and (and (and (and (and (= (type $generated@@214) $generated@@47) (= (type $generated@@215) $generated@@47)) (= (type $generated@@216) $generated@@47)) (= (type $generated@@217) $generated@@58)) (= (type $generated@@218) $generated@@59)) (= $generated@@218 ($generated@@63 0))) ($generated@@56 $generated@@214 $generated@@215 $generated@@216 $generated@@217 $generated@@218))
 :pattern ( ($generated@@56 $generated@@214 $generated@@215 $generated@@216 $generated@@217 $generated@@218))
))))
(assert (forall (($generated@@219 T@U) ($generated@@220 T@U) ) (!  (=> (and (= (type $generated@@219) $generated@@59) (= (type $generated@@220) $generated@@59)) (or (or ($generated@@65 $generated@@219 $generated@@220) (= $generated@@219 $generated@@220)) ($generated@@65 $generated@@220 $generated@@219)))
 :pattern ( ($generated@@65 $generated@@219 $generated@@220) ($generated@@65 $generated@@220 $generated@@219))
)))
(assert (forall (($generated@@221 T@U) ) (!  (=> (= (type $generated@@221) $generated@@59) (<= 0 ($generated@@61 $generated@@221)))
 :pattern ( ($generated@@61 $generated@@221))
)))
(assert  (=> (<= 1 $generated@@55) (forall (($generated@@222 T@U) ($generated@@223 T@U) ($generated@@224 T@U) ($generated@@225 T@U) ($generated@@226 T@U) ) (!  (=> (and (and (and (and (and (= (type $generated@@222) $generated@@47) (= (type $generated@@223) $generated@@47)) (= (type $generated@@224) $generated@@47)) (= (type $generated@@225) $generated@@58)) (= (type $generated@@226) $generated@@59)) (or ($generated@@60 $generated@@222 $generated@@223 $generated@@224 ($generated@@193 $generated@@226)) (not (= 1 $generated@@55)))) (and (and (=> (< 0 ($generated@@61 $generated@@226)) ($generated@@60 $generated@@223 $generated@@222 $generated@@224 ($generated@@62 $generated@@226 ($generated@@63 1)))) (=> (=> (< 0 ($generated@@61 $generated@@226)) ($generated@@56 $generated@@223 $generated@@222 $generated@@224 ($generated@@57 $generated@@225) ($generated@@62 $generated@@226 ($generated@@63 1)))) (=> (= ($generated@@64 0) ($generated@@61 $generated@@226)) (forall (($generated@@227 T@U) ) (!  (=> (and (= (type $generated@@227) $generated@@59) ($generated@@65 $generated@@227 $generated@@226)) ($generated@@60 $generated@@222 $generated@@223 $generated@@224 $generated@@227))
 :pattern ( ($generated@@56 $generated@@222 $generated@@223 $generated@@224 ($generated@@57 $generated@@225) $generated@@227))
))))) (= ($generated@@56 $generated@@222 $generated@@223 $generated@@224 ($generated@@57 $generated@@225) ($generated@@193 $generated@@226))  (and (=> (< 0 ($generated@@61 $generated@@226)) ($generated@@56 $generated@@223 $generated@@222 $generated@@224 ($generated@@57 $generated@@225) ($generated@@62 $generated@@226 ($generated@@63 1)))) (=> (= ($generated@@64 0) ($generated@@61 $generated@@226)) (forall (($generated@@228 T@U) ) (!  (=> (and (= (type $generated@@228) $generated@@59) ($generated@@65 $generated@@228 $generated@@226)) ($generated@@56 $generated@@222 $generated@@223 $generated@@224 ($generated@@57 $generated@@225) $generated@@228))
 :pattern ( ($generated@@56 $generated@@222 $generated@@223 $generated@@224 ($generated@@57 $generated@@225) $generated@@228))
)))))))
 :weight 3
 :pattern ( ($generated@@56 $generated@@222 $generated@@223 $generated@@224 ($generated@@57 $generated@@225) ($generated@@193 $generated@@226)))
))))
(assert  (and (forall (($generated@@231 T@U) ) (! (= (type ($generated@@229 $generated@@231)) $generated@@59)
 :pattern ( ($generated@@229 $generated@@231))
)) (forall (($generated@@232 T@T) ($generated@@233 T@U) ) (! (= (type ($generated@@230 $generated@@232 $generated@@233)) $generated@@232)
 :pattern ( ($generated@@230 $generated@@232 $generated@@233))
))))
(assert (forall (($generated@@234 T@U) ) (! (let (($generated@@235 (type $generated@@234)))
(= ($generated@@230 $generated@@235 ($generated@@229 $generated@@234)) $generated@@234))
 :pattern ( ($generated@@229 $generated@@234))
)))
(assert (forall (($generated@@236 T@U) ($generated@@237 T@U) ) (!  (=> (and (= (type $generated@@236) $generated@@59) (= (type $generated@@237) $generated@@59)) (and (and (and (=> ($generated@@65 $generated@@236 $generated@@237) (not (= $generated@@236 $generated@@237))) (=> (and ($generated@@197 $generated@@236) (not ($generated@@197 $generated@@237))) ($generated@@65 $generated@@236 $generated@@237))) (=> (and ($generated@@197 $generated@@236) ($generated@@197 $generated@@237)) (= ($generated@@65 $generated@@236 $generated@@237) (< ($generated@@61 $generated@@236) ($generated@@61 $generated@@237))))) (=> (and ($generated@@65 $generated@@236 $generated@@237) ($generated@@197 $generated@@237)) ($generated@@197 $generated@@236))))
 :pattern ( ($generated@@65 $generated@@236 $generated@@237))
)))
(assert  (=> (<= 1 $generated@@55) (forall (($generated@@238 T@U) ($generated@@239 T@U) ($generated@@240 T@U) ($generated@@241 T@U) ($generated@@242 T@U) ) (!  (=> (and (and (and (and (and (= (type $generated@@238) $generated@@47) (= (type $generated@@239) $generated@@47)) (= (type $generated@@240) $generated@@47)) (= (type $generated@@241) $generated@@58)) (= (type $generated@@242) $generated@@59)) (or ($generated@@60 $generated@@238 $generated@@239 $generated@@240 $generated@@242) (not (= 1 $generated@@55)))) true)
 :pattern ( ($generated@@56 $generated@@238 $generated@@239 $generated@@240 $generated@@241 $generated@@242))
))))
(assert (forall (($generated@@243 T@U) ) (!  (=> (and (= (type $generated@@243) $generated@@59) ($generated@@197 $generated@@243)) (= $generated@@243 ($generated@@63 ($generated@@61 $generated@@243))))
 :pattern ( ($generated@@61 $generated@@243))
 :pattern ( ($generated@@197 $generated@@243))
)))
(assert (forall (($generated@@244 T@U) ($generated@@245 T@U) ) (!  (=> (and (and (= (type $generated@@244) $generated@@59) (= (type $generated@@245) $generated@@59)) (and ($generated@@197 $generated@@245) (<= ($generated@@61 $generated@@245) ($generated@@61 $generated@@244)))) (or (and (= $generated@@245 ($generated@@63 0)) (= ($generated@@62 $generated@@244 $generated@@245) $generated@@244)) (and (not (= $generated@@245 ($generated@@63 0))) ($generated@@65 ($generated@@62 $generated@@244 $generated@@245) $generated@@244))))
 :pattern ( ($generated@@62 $generated@@244 $generated@@245))
)))
(assert (forall (($generated@@246 Int) ) (! (= ($generated@@229 ($generated@@8 ($generated@@64 $generated@@246))) ($generated@@193 ($generated@@229 ($generated@@8 $generated@@246))))
 :pattern ( ($generated@@229 ($generated@@8 ($generated@@64 $generated@@246))))
)))
(assert (forall (($generated@@247 T@U) ) (! (= ($generated@@229 ($generated@@193 $generated@@247)) ($generated@@193 ($generated@@229 $generated@@247)))
 :pattern ( ($generated@@229 ($generated@@193 $generated@@247)))
)))
(push 1)
(declare-fun ControlFlow (Int Int) Int)
(declare-fun $generated@@248 () T@U)
(declare-fun $generated@@249 () T@U)
(declare-fun $generated@@250 () T@U)
(declare-fun $generated@@251 () T@U)
(declare-fun $generated@@252 (T@U) Bool)
(declare-fun $generated@@253 () T@U)
(declare-fun $generated@@254 (T@U) Bool)
(declare-fun $generated@@255 () T@U)
(declare-fun $generated@@256 () T@U)
(declare-fun $generated@@257 () T@U)
(declare-fun $generated@@258 () T@U)
(assert  (and (and (and (and (and (and (and (and (= (type $generated@@248) $generated@@47) (= (type $generated@@249) $generated@@47)) (= (type $generated@@250) $generated@@59)) (= (type $generated@@256) ($generated@@86 $generated@@85 $generated@@87))) (= (type $generated@@255) ($generated@@86 $generated@@85 $generated@@87))) (= (type $generated@@251) $generated@@59)) (= (type $generated@@253) ($generated@@86 $generated@@85 $generated@@87))) (= (type $generated@@257) ($generated@@94 $generated@@85 $generated@@4))) (= (type $generated@@258) $generated@@85)))
(set-option :timeout 0)
(set-option :rlimit 0)
(assert (not
 (=> (= (ControlFlow 0 0) 13) (let (($generated@@259  (and (=> (= (ControlFlow 0 2) (- 0 3)) (=> ($generated@@60 $generated@@248 $generated@@44 $generated@@249 $generated@@250) (or ($generated@@56 $generated@@248 $generated@@44 $generated@@249 ($generated@@57 $generated@@201) $generated@@250) (=> (< 0 ($generated@@61 $generated@@250)) ($generated@@56 $generated@@44 $generated@@248 $generated@@249 ($generated@@57 ($generated@@57 $generated@@201)) ($generated@@62 $generated@@250 ($generated@@63 1))))))) (=> (=> ($generated@@60 $generated@@248 $generated@@44 $generated@@249 $generated@@250) (or ($generated@@56 $generated@@248 $generated@@44 $generated@@249 ($generated@@57 $generated@@201) $generated@@250) (=> (< 0 ($generated@@61 $generated@@250)) ($generated@@56 $generated@@44 $generated@@248 $generated@@249 ($generated@@57 ($generated@@57 $generated@@201)) ($generated@@62 $generated@@250 ($generated@@63 1)))))) (=> (= (ControlFlow 0 2) (- 0 1)) (=> ($generated@@60 $generated@@248 $generated@@44 $generated@@249 $generated@@250) (or ($generated@@56 $generated@@248 $generated@@44 $generated@@249 ($generated@@57 $generated@@201) $generated@@250) (=> (= ($generated@@64 0) ($generated@@61 $generated@@250)) (forall (($generated@@260 T@U) ) (!  (=> (and (= (type $generated@@260) $generated@@59) ($generated@@65 $generated@@260 $generated@@250)) ($generated@@56 $generated@@248 $generated@@44 $generated@@249 ($generated@@57 ($generated@@57 $generated@@201)) $generated@@260))
 :pattern ( ($generated@@56 $generated@@248 $generated@@44 $generated@@249 ($generated@@57 ($generated@@57 $generated@@201)) $generated@@260))
))))))))))
(let (($generated@@261  (=> (< ($generated@@61 $generated@@250) ($generated@@64 2)) (and (=> (= (ControlFlow 0 9) (- 0 10)) (= ($generated@@61 $generated@@250) ($generated@@64 1))) (=> (= ($generated@@61 $generated@@250) ($generated@@64 1)) (=> (= (ControlFlow 0 9) 2) $generated@@259))))))
(let (($generated@@262  (=> (<= ($generated@@64 2) ($generated@@61 $generated@@250)) (and (=> (= (ControlFlow 0 5) (- 0 8)) ($generated@@197 ($generated@@193 ($generated@@63 2)))) (=> ($generated@@197 ($generated@@193 ($generated@@63 2))) (and (=> (= (ControlFlow 0 5) (- 0 7)) (<= ($generated@@61 ($generated@@193 ($generated@@63 2))) ($generated@@61 $generated@@250))) (=> (<= ($generated@@61 ($generated@@193 ($generated@@63 2))) ($generated@@61 $generated@@250)) (=> (= $generated@@251 ($generated@@62 $generated@@250 ($generated@@63 2))) (and (=> (= (ControlFlow 0 5) (- 0 6)) ($generated@@65 $generated@@251 $generated@@250)) (=> ($generated@@65 $generated@@251 $generated@@250) (=> (and (and (and ($generated@@252 $generated@@253) ($generated@@254 $generated@@253)) ($generated@@60 $generated@@248 $generated@@44 $generated@@249 $generated@@251)) (and (and ($generated@@60 $generated@@248 $generated@@44 $generated@@249 $generated@@251) (and ($generated@@56 $generated@@248 $generated@@44 $generated@@249 ($generated@@57 $generated@@201) $generated@@251) (and (=> (< 0 ($generated@@61 $generated@@251)) ($generated@@56 $generated@@44 $generated@@248 $generated@@249 ($generated@@57 $generated@@201) ($generated@@62 $generated@@251 ($generated@@63 1)))) (=> (= ($generated@@64 0) ($generated@@61 $generated@@251)) (forall (($generated@@263 T@U) ) (!  (=> (and (= (type $generated@@263) $generated@@59) ($generated@@65 $generated@@263 $generated@@251)) ($generated@@56 $generated@@248 $generated@@44 $generated@@249 ($generated@@57 $generated@@201) $generated@@263))
 :pattern ( ($generated@@56 $generated@@248 $generated@@44 $generated@@249 ($generated@@57 $generated@@201) $generated@@263))
)))))) (and (= $generated@@255 $generated@@253) (= (ControlFlow 0 5) 2)))) $generated@@259)))))))))))
(let (($generated@@264  (=> (< 0 ($generated@@61 $generated@@250)) (and (=> (= (ControlFlow 0 11) 5) $generated@@262) (=> (= (ControlFlow 0 11) 9) $generated@@261)))))
(let (($generated@@265  (=> (<= ($generated@@61 $generated@@250) 0) (=> (and (and (and ($generated@@252 $generated@@256) ($generated@@254 $generated@@256)) (= $generated@@255 $generated@@256)) (and (forall (($generated@@266 T@U) ) (!  (=> (and (= (type $generated@@266) $generated@@59) ($generated@@65 $generated@@266 $generated@@250)) ($generated@@56 $generated@@248 $generated@@44 $generated@@249 ($generated@@57 $generated@@201) $generated@@266))
 :no-pattern (type $generated@@266)
 :no-pattern ($generated $generated@@266)
 :no-pattern ($generated@@0 $generated@@266)
)) (= (ControlFlow 0 4) 2))) $generated@@259))))
(let (($generated@@267  (=> (= $generated@@257 ($generated@@84 $generated@@258 $generated@@255 $generated@@46 false)) (and (=> (= (ControlFlow 0 12) 11) $generated@@264) (=> (= (ControlFlow 0 12) 4) $generated@@265)))))
(let (($generated@@268  (=> (and (and ($generated@@252 $generated@@255) ($generated@@254 $generated@@255)) (and (= 2 $generated@@55) (= (ControlFlow 0 13) 12))) $generated@@267)))
$generated@@268))))))))
))
(check-sat)
(get-info :reason-unknown)
(assert (not (= (ControlFlow 0 2) (- 3))))
(check-sat)
(pop 1)
; Invalid
(get-info :rlimit)
(reset)
(set-option :rlimit 0)
; did a full reset
(reset)
(set-option :print-success false)
(set-info :smt-lib-version 2.6)
(set-option :auto_config false)
(set-option :type_check true)
(set-option :smt.case_split 3)
(set-option :smt.qi.eager_threshold 100)
(set-option :smt.delay_units true)
(set-option :smt.arith.solver 2)
(set-option :smt.mbqi false)
(set-option :model.compact false)
(set-option :model.v2 true)
(set-option :pp.bv_literals false)
; done setting options


(set-info :category "industrial")
(declare-sort |T@U| 0)
(declare-sort |T@T| 0)
(declare-fun real_pow (Real Real) Real)
(declare-fun UOrdering2 (|T@U| |T@U|) Bool)
(declare-fun UOrdering3 (|T@T| |T@U| |T@U|) Bool)
(declare-fun tickleBool (Bool) Bool)
(assert (and (tickleBool true) (tickleBool false)))
(declare-fun $generated (T@U) Int)
(declare-fun $generated@@0 (T@U) Bool)
(declare-fun $generated@@1 (T@T) Int)
(declare-fun $generated@@2 () T@T)
(declare-fun $generated@@3 () T@T)
(declare-fun $generated@@4 () T@T)
(declare-fun $generated@@5 () T@T)
(declare-fun $generated@@6 () T@T)
(declare-fun $generated@@7 () T@T)
(declare-fun $generated@@8 (Int) T@U)
(declare-fun type (T@U) T@T)
(declare-fun $generated@@9 (Real) T@U)
(declare-fun $generated@@10 (T@U) Real)
(declare-fun $generated@@11 (Bool) T@U)
(declare-fun $generated@@12 (RoundingMode) T@U)
(declare-fun $generated@@13 (T@U) RoundingMode)
(declare-fun $generated@@14 (String) T@U)
(declare-fun $generated@@15 (T@U) String)
(declare-fun $generated@@16 ((RegEx String)) T@U)
(declare-fun $generated@@17 (T@U) (RegEx String))
(declare-fun $generated@@44 () Int)
(declare-fun $generated@@45 (T@U T@U T@U T@U T@U) Bool)
(declare-fun $generated@@46 (T@U) T@U)
(declare-fun $generated@@47 () T@T)
(declare-fun $generated@@48 () T@T)
(declare-fun $generated@@49 () T@T)
(declare-fun $generated@@50 (T@U T@U T@U T@U) Bool)
(declare-fun $generated@@51 (T@U) Int)
(declare-fun $generated@@52 (T@U T@U) T@U)
(declare-fun $generated@@53 (Int) T@U)
(declare-fun $generated@@54 (Int) Int)
(declare-fun $generated@@55 (T@U T@U) Bool)
(declare-fun $generated@@73 (T@U T@U T@U) T@U)
(declare-fun $generated@@74 (T@U T@U T@U Bool) T@U)
(declare-fun $generated@@75 (T@T) T@T)
(declare-fun $generated@@76 () T@T)
(declare-fun $generated@@77 (T@T T@T) T@T)
(declare-fun $generated@@78 () T@T)
(declare-fun $generated@@79 (T@T) T@T)
(declare-fun $generated@@80 (T@U T@U) T@U)
(declare-fun $generated@@81 (T@U T@U) T@U)
(declare-fun $generated@@82 (T@T) T@T)
(declare-fun $generated@@83 (T@T) T@T)
(declare-fun $generated@@84 (T@U T@U T@U) T@U)
(declare-fun $generated@@85 (T@U T@U T@U) T@U)
(declare-fun $generated@@86 (T@T T@T) T@T)
(declare-fun $generated@@87 (T@T) T@T)
(declare-fun $generated@@88 (T@T) T@T)
(declare-fun $generated@@89 (T@U T@U T@U T@U) T@U)
(declare-fun $generated@@187 (T@U) T@U)
(declare-fun $generated@@191 (T@U) Bool)
(declare-fun $generated@@194 (T@U) T@U)
(declare-fun $generated@@195 () T@U)
(declare-fun $generated@@223 (T@U) T@U)
(declare-fun $generated@@224 (T@T T@U) T@U)
(assert  (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (= ($generated@@1 $generated@@2) 0) (= ($generated@@1 $generated@@3) 1)) (= ($generated@@1 $generated@@4) 2)) (= ($generated@@1 $generated@@5) 3)) (= ($generated@@1 $generated@@6) 4)) (= ($generated@@1 $generated@@7) 5)) (forall (($generated@@18 Int) ) (! (= ($generated ($generated@@8 $generated@@18)) $generated@@18)
 :pattern ( ($generated@@8 $generated@@18))
))) (forall (($generated@@19 T@U) ) (!  (=> (= (type $generated@@19) $generated@@2) (= ($generated@@8 ($generated $generated@@19)) $generated@@19))
 :pattern ( ($generated $generated@@19))
))) (forall (($generated@@20 Int) ) (! (= (type ($generated@@8 $generated@@20)) $generated@@2)
 :pattern ( ($generated@@8 $generated@@20))
))) (forall (($generated@@21 Real) ) (! (= ($generated@@10 ($generated@@9 $generated@@21)) $generated@@21)
 :pattern ( ($generated@@9 $generated@@21))
))) (forall (($generated@@22 T@U) ) (!  (=> (= (type $generated@@22) $generated@@3) (= ($generated@@9 ($generated@@10 $generated@@22)) $generated@@22))
 :pattern ( ($generated@@10 $generated@@22))
))) (forall (($generated@@23 Real) ) (! (= (type ($generated@@9 $generated@@23)) $generated@@3)
 :pattern ( ($generated@@9 $generated@@23))
))) (forall (($generated@@24 Bool) ) (! (= ($generated@@0 ($generated@@11 $generated@@24)) $generated@@24)
 :pattern ( ($generated@@11 $generated@@24))
))) (forall (($generated@@25 T@U) ) (!  (=> (= (type $generated@@25) $generated@@4) (= ($generated@@11 ($generated@@0 $generated@@25)) $generated@@25))
 :pattern ( ($generated@@0 $generated@@25))
))) (forall (($generated@@26 Bool) ) (! (= (type ($generated@@11 $generated@@26)) $generated@@4)
 :pattern ( ($generated@@11 $generated@@26))
))) (forall (($generated@@27 RoundingMode) ) (! (= ($generated@@13 ($generated@@12 $generated@@27)) $generated@@27)
 :pattern ( ($generated@@12 $generated@@27))
))) (forall (($generated@@28 T@U) ) (!  (=> (= (type $generated@@28) $generated@@5) (= ($generated@@12 ($generated@@13 $generated@@28)) $generated@@28))
 :pattern ( ($generated@@13 $generated@@28))
))) (forall (($generated@@29 RoundingMode) ) (! (= (type ($generated@@12 $generated@@29)) $generated@@5)
 :pattern ( ($generated@@12 $generated@@29))
))) (forall (($generated@@30 String) ) (! (= ($generated@@15 ($generated@@14 $generated@@30)) $generated@@30)
 :pattern ( ($generated@@14 $generated@@30))
))) (forall (($generated@@31 T@U) ) (!  (=> (= (type $generated@@31) $generated@@6) (= ($generated@@14 ($generated@@15 $generated@@31)) $generated@@31))
 :pattern ( ($generated@@15 $generated@@31))
))) (forall (($generated@@32 String) ) (! (= (type ($generated@@14 $generated@@32)) $generated@@6)
 :pattern ( ($generated@@14 $generated@@32))
))) (forall (($generated@@33 (RegEx String)) ) (! (= ($generated@@17 ($generated@@16 $generated@@33)) $generated@@33)
 :pattern ( ($generated@@16 $generated@@33))
))) (forall (($generated@@34 T@U) ) (!  (=> (= (type $generated@@34) $generated@@7) (= ($generated@@16 ($generated@@17 $generated@@34)) $generated@@34))
 :pattern ( ($generated@@17 $generated@@34))
))) (forall (($generated@@35 (RegEx String)) ) (! (= (type ($generated@@16 $generated@@35)) $generated@@7)
 :pattern ( ($generated@@16 $generated@@35))
))))
(assert (forall (($generated@@36 T@U) ) (! (UOrdering2 $generated@@36 $generated@@36)
 :no-pattern ($generated $generated@@36)
 :no-pattern ($generated@@0 $generated@@36)
)))
(assert (forall (($generated@@37 T@U) ($generated@@38 T@U) ($generated@@39 T@U) ) (! (let (($generated@@40 (type $generated@@37)))
 (=> (and (and (= (type $generated@@38) $generated@@40) (= (type $generated@@39) $generated@@40)) (and (UOrdering2 $generated@@37 $generated@@38) (UOrdering2 $generated@@38 $generated@@39))) (UOrdering2 $generated@@37 $generated@@39)))
 :pattern ( (UOrdering2 $generated@@37 $generated@@38) (UOrdering2 $generated@@38 $generated@@39))
)))
(assert (forall (($generated@@41 T@U) ($generated@@42 T@U) ) (! (let (($generated@@43 (type $generated@@41)))
 (=> (= (type $generated@@42) $generated@@43) (=> (and (UOrdering2 $generated@@41 $generated@@42) (UOrdering2 $generated@@42 $generated@@41)) (= $generated@@41 $generated@@42))))
 :pattern ( (UOrdering2 $generated@@41 $generated@@42) (UOrdering2 $generated@@42 $generated@@41))
)))
(assert  (and (and (and (and (and (= ($generated@@1 $generated@@47) 6) (= ($generated@@1 $generated@@48) 7)) (= ($generated@@1 $generated@@49) 8)) (forall (($generated@@56 T@U) ) (! (= (type ($generated@@46 $generated@@56)) $generated@@48)
 :pattern ( ($generated@@46 $generated@@56))
))) (forall (($generated@@57 T@U) ($generated@@58 T@U) ) (! (= (type ($generated@@52 $generated@@57 $generated@@58)) $generated@@49)
 :pattern ( ($generated@@52 $generated@@57 $generated@@58))
))) (forall (($generated@@59 Int) ) (! (= (type ($generated@@53 $generated@@59)) $generated@@49)
 :pattern ( ($generated@@53 $generated@@59))
))))
(assert  (=> (<= 1 $generated@@44) (forall (($generated@@60 T@U) ($generated@@61 T@U) ($generated@@62 T@U) ($generated@@63 T@U) ($generated@@64 T@U) ) (!  (=> (and (and (and (and (and (= (type $generated@@60) $generated@@47) (= (type $generated@@61) $generated@@47)) (= (type $generated@@62) $generated@@47)) (= (type $generated@@63) $generated@@48)) (= (type $generated@@64) $generated@@49)) (or ($generated@@50 $generated@@60 $generated@@61 $generated@@62 $generated@@64) (not (= 1 $generated@@44)))) (and (and (=> (< 0 ($generated@@51 $generated@@64)) ($generated@@50 $generated@@61 $generated@@60 $generated@@62 ($generated@@52 $generated@@64 ($generated@@53 1)))) (=> (=> (< 0 ($generated@@51 $generated@@64)) ($generated@@45 $generated@@61 $generated@@60 $generated@@62 $generated@@63 ($generated@@52 $generated@@64 ($generated@@53 1)))) (=> (= ($generated@@54 0) ($generated@@51 $generated@@64)) (forall (($generated@@65 T@U) ) (!  (=> (and (= (type $generated@@65) $generated@@49) ($generated@@55 $generated@@65 $generated@@64)) ($generated@@50 $generated@@60 $generated@@61 $generated@@62 $generated@@65))
 :pattern ( ($generated@@45 $generated@@60 $generated@@61 $generated@@62 $generated@@63 $generated@@65))
))))) (= ($generated@@45 $generated@@60 $generated@@61 $generated@@62 ($generated@@46 $generated@@63) $generated@@64)  (and (=> (< 0 ($generated@@51 $generated@@64)) ($generated@@45 $generated@@61 $generated@@60 $generated@@62 $generated@@63 ($generated@@52 $generated@@64 ($generated@@53 1)))) (=> (= ($generated@@54 0) ($generated@@51 $generated@@64)) (forall (($generated@@66 T@U) ) (!  (=> (and (= (type $generated@@66) $generated@@49) ($generated@@55 $generated@@66 $generated@@64)) ($generated@@45 $generated@@60 $generated@@61 $generated@@62 $generated@@63 $generated@@66))
 :pattern ( ($generated@@45 $generated@@60 $generated@@61 $generated@@62 $generated@@63 $generated@@66))
)))))))
 :pattern ( ($generated@@45 $generated@@60 $generated@@61 $generated@@62 ($generated@@46 $generated@@63) $generated@@64))
))))
(assert (forall (($generated@@67 T@U) ($generated@@68 T@U) ($generated@@69 T@U) ) (!  (=> (and (and (and (= (type $generated@@67) $generated@@49) (= (type $generated@@68) $generated@@49)) (= (type $generated@@69) $generated@@49)) (and ($generated@@55 $generated@@67 $generated@@68) ($generated@@55 $generated@@68 $generated@@69))) ($generated@@55 $generated@@67 $generated@@69))
 :pattern ( ($generated@@55 $generated@@67 $generated@@68) ($generated@@55 $generated@@68 $generated@@69))
 :pattern ( ($generated@@55 $generated@@67 $generated@@68) ($generated@@55 $generated@@67 $generated@@69))
)))
(assert (forall (($generated@@70 T@U) ($generated@@71 Int) ($generated@@72 Int) ) (!  (=> (= (type $generated@@70) $generated@@49) (=> (and (and (<= 0 $generated@@71) (<= 0 $generated@@72)) (<= (+ $generated@@71 $generated@@72) ($generated@@51 $generated@@70))) (= ($generated@@52 ($generated@@52 $generated@@70 ($generated@@53 $generated@@71)) ($generated@@53 $generated@@72)) ($generated@@52 $generated@@70 ($generated@@53 (+ $generated@@71 $generated@@72))))))
 :pattern ( ($generated@@52 ($generated@@52 $generated@@70 ($generated@@53 $generated@@71)) ($generated@@53 $generated@@72)))
)))
(assert  (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (forall (($generated@@90 T@T) ($generated@@91 T@T) ) (= ($generated@@1 ($generated@@77 $generated@@90 $generated@@91)) 9)) (forall (($generated@@92 T@T) ($generated@@93 T@T) ) (! (= ($generated@@82 ($generated@@77 $generated@@92 $generated@@93)) $generated@@92)
 :pattern ( ($generated@@77 $generated@@92 $generated@@93))
))) (forall (($generated@@94 T@T) ($generated@@95 T@T) ) (! (= ($generated@@83 ($generated@@77 $generated@@94 $generated@@95)) $generated@@95)
 :pattern ( ($generated@@77 $generated@@94 $generated@@95))
))) (forall (($generated@@96 T@U) ($generated@@97 T@U) ) (! (let (($generated@@98 ($generated@@83 (type $generated@@96))))
(= (type ($generated@@81 $generated@@96 $generated@@97)) $generated@@98))
 :pattern ( ($generated@@81 $generated@@96 $generated@@97))
))) (forall (($generated@@99 T@U) ($generated@@100 T@U) ($generated@@101 T@U) ) (! (let (($generated@@102 (type $generated@@101)))
(let (($generated@@103 (type $generated@@100)))
(= (type ($generated@@84 $generated@@99 $generated@@100 $generated@@101)) ($generated@@77 $generated@@103 $generated@@102))))
 :pattern ( ($generated@@84 $generated@@99 $generated@@100 $generated@@101))
))) (forall (($generated@@104 T@U) ($generated@@105 T@U) ($generated@@106 T@U) ) (! (let (($generated@@107 ($generated@@83 (type $generated@@104))))
 (=> (= (type $generated@@106) $generated@@107) (= ($generated@@81 ($generated@@84 $generated@@104 $generated@@105 $generated@@106) $generated@@105) $generated@@106)))
 :weight 0
))) (and (forall (($generated@@108 T@U) ($generated@@109 T@U) ($generated@@110 T@U) ($generated@@111 T@U) ) (!  (or (= $generated@@110 $generated@@111) (= ($generated@@81 ($generated@@84 $generated@@109 $generated@@110 $generated@@108) $generated@@111) ($generated@@81 $generated@@109 $generated@@111)))
 :weight 0
)) (forall (($generated@@112 T@U) ($generated@@113 T@U) ($generated@@114 T@U) ($generated@@115 T@U) ) (!  (or true (= ($generated@@81 ($generated@@84 $generated@@113 $generated@@114 $generated@@112) $generated@@115) ($generated@@81 $generated@@113 $generated@@115)))
 :weight 0
)))) (forall (($generated@@116 T@T) ) (= ($generated@@1 ($generated@@79 $generated@@116)) 10))) (forall (($generated@@117 T@T) ) (! (= ($generated@@75 ($generated@@79 $generated@@117)) $generated@@117)
 :pattern ( ($generated@@79 $generated@@117))
))) (forall (($generated@@118 T@U) ($generated@@119 T@U) ) (! (let (($generated@@120 ($generated@@75 (type $generated@@119))))
(= (type ($generated@@80 $generated@@118 $generated@@119)) $generated@@120))
 :pattern ( ($generated@@80 $generated@@118 $generated@@119))
))) (= ($generated@@1 $generated@@78) 11)) (forall (($generated@@121 T@U) ($generated@@122 T@U) ($generated@@123 T@U) ) (! (= (type ($generated@@85 $generated@@121 $generated@@122 $generated@@123)) $generated@@78)
 :pattern ( ($generated@@85 $generated@@121 $generated@@122 $generated@@123))
))) (forall (($generated@@124 T@U) ($generated@@125 T@U) ($generated@@126 T@U) ) (! (let (($generated@@127 ($generated@@75 (type $generated@@125))))
 (=> (= (type $generated@@126) $generated@@127) (= ($generated@@80 ($generated@@85 $generated@@124 $generated@@125 $generated@@126) $generated@@125) $generated@@126)))
 :weight 0
))) (and (forall (($generated@@128 T@U) ($generated@@129 T@U) ($generated@@130 T@U) ($generated@@131 T@U) ) (!  (or (= $generated@@130 $generated@@131) (= ($generated@@80 ($generated@@85 $generated@@129 $generated@@130 $generated@@128) $generated@@131) ($generated@@80 $generated@@129 $generated@@131)))
 :weight 0
)) (forall (($generated@@132 T@U) ($generated@@133 T@U) ($generated@@134 T@U) ($generated@@135 T@U) ) (!  (or true (= ($generated@@80 ($generated@@85 $generated@@133 $generated@@134 $generated@@132) $generated@@135) ($generated@@80 $generated@@133 $generated@@135)))
 :weight 0
)))) (= ($generated@@1 $generated@@76) 12)) (forall (($generated@@136 T@T) ($generated@@137 T@T) ) (= ($generated@@1 ($generated@@86 $generated@@136 $generated@@137)) 13))) (forall (($generated@@138 T@T) ($generated@@139 T@T) ) (! (= ($generated@@87 ($generated@@86 $generated@@138 $generated@@139)) $generated@@138)
 :pattern ( ($generated@@86 $generated@@138 $generated@@139))
))) (forall (($generated@@140 T@T) ($generated@@141 T@T) ) (! (= ($generated@@88 ($generated@@86 $generated@@140 $generated@@141)) $generated@@141)
 :pattern ( ($generated@@86 $generated@@140 $generated@@141))
))) (forall (($generated@@142 T@U) ($generated@@143 T@U) ($generated@@144 T@U) ) (! (let (($generated@@145 ($generated@@88 (type $generated@@142))))
(= (type ($generated@@73 $generated@@142 $generated@@143 $generated@@144)) $generated@@145))
 :pattern ( ($generated@@73 $generated@@142 $generated@@143 $generated@@144))
))) (forall (($generated@@146 T@U) ($generated@@147 T@U) ($generated@@148 T@U) ($generated@@149 T@U) ) (! (let (($generated@@150 (type $generated@@149)))
(let (($generated@@151 (type $generated@@147)))
(= (type ($generated@@89 $generated@@146 $generated@@147 $generated@@148 $generated@@149)) ($generated@@86 $generated@@151 $generated@@150))))
 :pattern ( ($generated@@89 $generated@@146 $generated@@147 $generated@@148 $generated@@149))
))) (forall (($generated@@152 T@U) ($generated@@153 T@U) ($generated@@154 T@U) ($generated@@155 T@U) ) (! (let (($generated@@156 ($generated@@88 (type $generated@@152))))
 (=> (= (type $generated@@155) $generated@@156) (= ($generated@@73 ($generated@@89 $generated@@152 $generated@@153 $generated@@154 $generated@@155) $generated@@153 $generated@@154) $generated@@155)))
 :weight 0
))) (and (and (forall (($generated@@157 T@U) ($generated@@158 T@U) ($generated@@159 T@U) ($generated@@160 T@U) ($generated@@161 T@U) ($generated@@162 T@U) ) (!  (or (= $generated@@159 $generated@@161) (= ($generated@@73 ($generated@@89 $generated@@158 $generated@@159 $generated@@160 $generated@@157) $generated@@161 $generated@@162) ($generated@@73 $generated@@158 $generated@@161 $generated@@162)))
 :weight 0
)) (forall (($generated@@163 T@U) ($generated@@164 T@U) ($generated@@165 T@U) ($generated@@166 T@U) ($generated@@167 T@U) ($generated@@168 T@U) ) (!  (or (= $generated@@166 $generated@@168) (= ($generated@@73 ($generated@@89 $generated@@164 $generated@@165 $generated@@166 $generated@@163) $generated@@167 $generated@@168) ($generated@@73 $generated@@164 $generated@@167 $generated@@168)))
 :weight 0
))) (forall (($generated@@169 T@U) ($generated@@170 T@U) ($generated@@171 T@U) ($generated@@172 T@U) ($generated@@173 T@U) ($generated@@174 T@U) ) (!  (or true (= ($generated@@73 ($generated@@89 $generated@@170 $generated@@171 $generated@@172 $generated@@169) $generated@@173 $generated@@174) ($generated@@73 $generated@@170 $generated@@173 $generated@@174)))
 :weight 0
)))) (forall (($generated@@175 T@U) ($generated@@176 T@U) ($generated@@177 T@U) ($generated@@178 Bool) ) (! (= (type ($generated@@74 $generated@@175 $generated@@176 $generated@@177 $generated@@178)) ($generated@@86 $generated@@76 $generated@@4))
 :pattern ( ($generated@@74 $generated@@175 $generated@@176 $generated@@177 $generated@@178))
))))
(assert (forall (($generated@@179 T@U) ($generated@@180 T@U) ($generated@@181 T@U) ($generated@@182 Bool) ($generated@@183 T@U) ($generated@@184 T@U) ) (! (let (($generated@@185 ($generated@@75 (type $generated@@184))))
 (=> (and (and (and (and (= (type $generated@@179) $generated@@76) (= (type $generated@@180) ($generated@@77 $generated@@76 $generated@@78))) (= (type $generated@@181) ($generated@@79 $generated@@4))) (= (type $generated@@183) $generated@@76)) (= (type $generated@@184) ($generated@@79 $generated@@185))) (= ($generated@@0 ($generated@@73 ($generated@@74 $generated@@179 $generated@@180 $generated@@181 $generated@@182) $generated@@183 $generated@@184))  (=> (and (not (= $generated@@183 $generated@@179)) ($generated@@0 ($generated@@80 ($generated@@81 $generated@@180 $generated@@183) $generated@@181))) $generated@@182))))
 :pattern ( ($generated@@73 ($generated@@74 $generated@@179 $generated@@180 $generated@@181 $generated@@182) $generated@@183 $generated@@184))
)))
(assert (forall (($generated@@186 Int) ) (! (= ($generated@@54 $generated@@186) $generated@@186)
 :pattern ( ($generated@@54 $generated@@186))
)))
(assert (forall (($generated@@188 T@U) ) (! (let (($generated@@189 (type $generated@@188)))
(= (type ($generated@@187 $generated@@188)) $generated@@189))
 :pattern ( ($generated@@187 $generated@@188))
)))
(assert (forall (($generated@@190 T@U) ) (! (= ($generated@@187 $generated@@190) $generated@@190)
 :pattern ( ($generated@@187 $generated@@190))
)))
(assert (forall (($generated@@192 T@U) ($generated@@193 T@U) ) (!  (=> (and (and (= (type $generated@@192) $generated@@49) (= (type $generated@@193) $generated@@49)) (and ($generated@@191 $generated@@193) (<= ($generated@@51 $generated@@193) ($generated@@51 $generated@@192)))) (and (= ($generated@@191 ($generated@@52 $generated@@192 $generated@@193)) ($generated@@191 $generated@@192)) (= ($generated@@51 ($generated@@52 $generated@@192 $generated@@193)) (- ($generated@@51 $generated@@192) ($generated@@51 $generated@@193)))))
 :pattern ( ($generated@@52 $generated@@192 $generated@@193))
)))
(assert  (and (forall (($generated@@196 T@U) ) (! (= (type ($generated@@194 $generated@@196)) $generated@@48)
 :pattern ( ($generated@@194 $generated@@196))
)) (= (type $generated@@195) $generated@@48)))
(assert (forall (($generated@@197 T@U) ($generated@@198 T@U) ($generated@@199 T@U) ($generated@@200 T@U) ($generated@@201 T@U) ) (!  (=> (and (and (and (and (= (type $generated@@197) $generated@@47) (= (type $generated@@198) $generated@@47)) (= (type $generated@@199) $generated@@47)) (= (type $generated@@200) $generated@@48)) (= (type $generated@@201) $generated@@49)) (= ($generated@@45 $generated@@197 $generated@@198 $generated@@199 $generated@@200 $generated@@201) ($generated@@45 $generated@@197 $generated@@198 $generated@@199 $generated@@195 $generated@@201)))
 :pattern ( ($generated@@45 $generated@@197 $generated@@198 $generated@@199 ($generated@@194 $generated@@200) $generated@@201))
)))
(assert (forall (($generated@@202 Int) ) (!  (=> (<= 0 $generated@@202) (and ($generated@@191 ($generated@@53 $generated@@202)) (= ($generated@@51 ($generated@@53 $generated@@202)) $generated@@202)))
 :pattern ( ($generated@@53 $generated@@202))
)))
(assert (forall (($generated@@203 T@U) ($generated@@204 T@U) ($generated@@205 T@U) ($generated@@206 T@U) ($generated@@207 T@U) ) (!  (=> (and (and (and (and (= (type $generated@@203) $generated@@47) (= (type $generated@@204) $generated@@47)) (= (type $generated@@205) $generated@@47)) (= (type $generated@@206) $generated@@48)) (= (type $generated@@207) $generated@@49)) (= ($generated@@45 $generated@@203 $generated@@204 $generated@@205 ($generated@@46 $generated@@206) $generated@@207) ($generated@@45 $generated@@203 $generated@@204 $generated@@205 $generated@@206 $generated@@207)))
 :pattern ( ($generated@@45 $generated@@203 $generated@@204 $generated@@205 ($generated@@46 $generated@@206) $generated@@207))
)))
(assert  (=> (<= 1 $generated@@44) (forall (($generated@@208 T@U) ($generated@@209 T@U) ($generated@@210 T@U) ($generated@@211 T@U) ($generated@@212 T@U) ) (!  (=> (and (and (and (and (and (= (type $generated@@208) $generated@@47) (= (type $generated@@209) $generated@@47)) (= (type $generated@@210) $generated@@47)) (= (type $generated@@211) $generated@@48)) (= (type $generated@@212) $generated@@49)) (= $generated@@212 ($generated@@53 0))) ($generated@@45 $generated@@208 $generated@@209 $generated@@210 $generated@@211 $generated@@212))
 :pattern ( ($generated@@45 $generated@@208 $generated@@209 $generated@@210 $generated@@211 $generated@@212))
))))
(assert (forall (($generated@@213 T@U) ($generated@@214 T@U) ) (!  (=> (and (= (type $generated@@213) $generated@@49) (= (type $generated@@214) $generated@@49)) (or (or ($generated@@55 $generated@@213 $generated@@214) (= $generated@@213 $generated@@214)) ($generated@@55 $generated@@214 $generated@@213)))
 :pattern ( ($generated@@55 $generated@@213 $generated@@214) ($generated@@55 $generated@@214 $generated@@213))
)))
(assert (forall (($generated@@215 T@U) ) (!  (=> (= (type $generated@@215) $generated@@49) (<= 0 ($generated@@51 $generated@@215)))
 :pattern ( ($generated@@51 $generated@@215))
)))
(assert  (=> (<= 1 $generated@@44) (forall (($generated@@216 T@U) ($generated@@217 T@U) ($generated@@218 T@U) ($generated@@219 T@U) ($generated@@220 T@U) ) (!  (=> (and (and (and (and (and (= (type $generated@@216) $generated@@47) (= (type $generated@@217) $generated@@47)) (= (type $generated@@218) $generated@@47)) (= (type $generated@@219) $generated@@48)) (= (type $generated@@220) $generated@@49)) (or ($generated@@50 $generated@@216 $generated@@217 $generated@@218 ($generated@@187 $generated@@220)) (not (= 1 $generated@@44)))) (and (and (=> (< 0 ($generated@@51 $generated@@220)) ($generated@@50 $generated@@217 $generated@@216 $generated@@218 ($generated@@52 $generated@@220 ($generated@@53 1)))) (=> (=> (< 0 ($generated@@51 $generated@@220)) ($generated@@45 $generated@@217 $generated@@216 $generated@@218 ($generated@@46 $generated@@219) ($generated@@52 $generated@@220 ($generated@@53 1)))) (=> (= ($generated@@54 0) ($generated@@51 $generated@@220)) (forall (($generated@@221 T@U) ) (!  (=> (and (= (type $generated@@221) $generated@@49) ($generated@@55 $generated@@221 $generated@@220)) ($generated@@50 $generated@@216 $generated@@217 $generated@@218 $generated@@221))
 :pattern ( ($generated@@45 $generated@@216 $generated@@217 $generated@@218 ($generated@@46 $generated@@219) $generated@@221))
))))) (= ($generated@@45 $generated@@216 $generated@@217 $generated@@218 ($generated@@46 $generated@@219) ($generated@@187 $generated@@220))  (and (=> (< 0 ($generated@@51 $generated@@220)) ($generated@@45 $generated@@217 $generated@@216 $generated@@218 ($generated@@46 $generated@@219) ($generated@@52 $generated@@220 ($generated@@53 1)))) (=> (= ($generated@@54 0) ($generated@@51 $generated@@220)) (forall (($generated@@222 T@U) ) (!  (=> (and (= (type $generated@@222) $generated@@49) ($generated@@55 $generated@@222 $generated@@220)) ($generated@@45 $generated@@216 $generated@@217 $generated@@218 ($generated@@46 $generated@@219) $generated@@222))
 :pattern ( ($generated@@45 $generated@@216 $generated@@217 $generated@@218 ($generated@@46 $generated@@219) $generated@@222))
)))))))
 :weight 3
 :pattern ( ($generated@@45 $generated@@216 $generated@@217 $generated@@218 ($generated@@46 $generated@@219) ($generated@@187 $generated@@220)))
))))
(assert  (and (forall (($generated@@225 T@U) ) (! (= (type ($generated@@223 $generated@@225)) $generated@@49)
 :pattern ( ($generated@@223 $generated@@225))
)) (forall (($generated@@226 T@T) ($generated@@227 T@U) ) (! (= (type ($generated@@224 $generated@@226 $generated@@227)) $generated@@226)
 :pattern ( ($generated@@224 $generated@@226 $generated@@227))
))))
(assert (forall (($generated@@228 T@U) ) (! (let (($generated@@229 (type $generated@@228)))
(= ($generated@@224 $generated@@229 ($generated@@223 $generated@@228)) $generated@@228))
 :pattern ( ($generated@@223 $generated@@228))
)))
(assert (forall (($generated@@230 T@U) ($generated@@231 T@U) ) (!  (=> (and (= (type $generated@@230) $generated@@49) (= (type $generated@@231) $generated@@49)) (and (and (and (=> ($generated@@55 $generated@@230 $generated@@231) (not (= $generated@@230 $generated@@231))) (=> (and ($generated@@191 $generated@@230) (not ($generated@@191 $generated@@231))) ($generated@@55 $generated@@230 $generated@@231))) (=> (and ($generated@@191 $generated@@230) ($generated@@191 $generated@@231)) (= ($generated@@55 $generated@@230 $generated@@231) (< ($generated@@51 $generated@@230) ($generated@@51 $generated@@231))))) (=> (and ($generated@@55 $generated@@230 $generated@@231) ($generated@@191 $generated@@231)) ($generated@@191 $generated@@230))))
 :pattern ( ($generated@@55 $generated@@230 $generated@@231))
)))
(assert  (=> (<= 1 $generated@@44) (forall (($generated@@232 T@U) ($generated@@233 T@U) ($generated@@234 T@U) ($generated@@235 T@U) ($generated@@236 T@U) ) (!  (=> (and (and (and (and (and (= (type $generated@@232) $generated@@47) (= (type $generated@@233) $generated@@47)) (= (type $generated@@234) $generated@@47)) (= (type $generated@@235) $generated@@48)) (= (type $generated@@236) $generated@@49)) (or ($generated@@50 $generated@@232 $generated@@233 $generated@@234 $generated@@236) (not (= 1 $generated@@44)))) true)
 :pattern ( ($generated@@45 $generated@@232 $generated@@233 $generated@@234 $generated@@235 $generated@@236))
))))
(assert (forall (($generated@@237 T@U) ) (!  (=> (and (= (type $generated@@237) $generated@@49) ($generated@@191 $generated@@237)) (= $generated@@237 ($generated@@53 ($generated@@51 $generated@@237))))
 :pattern ( ($generated@@51 $generated@@237))
 :pattern ( ($generated@@191 $generated@@237))
)))
(assert (forall (($generated@@238 T@U) ($generated@@239 T@U) ) (!  (=> (and (and (= (type $generated@@238) $generated@@49) (= (type $generated@@239) $generated@@49)) (and ($generated@@191 $generated@@239) (<= ($generated@@51 $generated@@239) ($generated@@51 $generated@@238)))) (or (and (= $generated@@239 ($generated@@53 0)) (= ($generated@@52 $generated@@238 $generated@@239) $generated@@238)) (and (not (= $generated@@239 ($generated@@53 0))) ($generated@@55 ($generated@@52 $generated@@238 $generated@@239) $generated@@238))))
 :pattern ( ($generated@@52 $generated@@238 $generated@@239))
)))
(assert (forall (($generated@@240 Int) ) (! (= ($generated@@223 ($generated@@8 ($generated@@54 $generated@@240))) ($generated@@187 ($generated@@223 ($generated@@8 $generated@@240))))
 :pattern ( ($generated@@223 ($generated@@8 ($generated@@54 $generated@@240))))
)))
(assert (forall (($generated@@241 T@U) ) (! (= ($generated@@223 ($generated@@187 $generated@@241)) ($generated@@187 ($generated@@223 $generated@@241)))
 :pattern ( ($generated@@223 ($generated@@187 $generated@@241)))
)))
(push 1)
(declare-fun ControlFlow (Int Int) Int)
(declare-fun $generated@@242 () T@U)
(declare-fun $generated@@243 () T@U)
(declare-fun $generated@@244 () T@U)
(declare-fun $generated@@245 () T@U)
(declare-fun $generated@@246 () T@U)
(declare-fun $generated@@247 (T@U) Bool)
(declare-fun $generated@@248 () T@U)
(declare-fun $generated@@249 (T@U) Bool)
(declare-fun $generated@@250 () T@U)
(declare-fun $generated@@251 () T@U)
(declare-fun $generated@@252 () T@U)
(declare-fun $generated@@253 () T@U)
(declare-fun $generated@@254 () T@U)
(declare-fun $generated@@255 () T@U)
(declare-fun $generated@@256 () T@U)
(assert  (and (and (and (and (and (and (and (and (and (and (and (and (= (type $generated@@243) $generated@@47) (= (type $generated@@244) $generated@@47)) (= (type $generated@@245) $generated@@47)) (= (type $generated@@242) $generated@@49)) (= (type $generated@@253) ($generated@@77 $generated@@76 $generated@@78))) (= (type $generated@@250) ($generated@@77 $generated@@76 $generated@@78))) (= (type $generated@@251) $generated@@49)) (= (type $generated@@252) ($generated@@77 $generated@@76 $generated@@78))) (= (type $generated@@246) $generated@@49)) (= (type $generated@@248) ($generated@@77 $generated@@76 $generated@@78))) (= (type $generated@@254) ($generated@@86 $generated@@76 $generated@@4))) (= (type $generated@@255) $generated@@76)) (= (type $generated@@256) ($generated@@79 $generated@@4))))
(set-option :timeout 0)
(set-option :rlimit 0)
(assert (not
 (=> (= (ControlFlow 0 0) 17) (let (($generated@@257  (=> (and (and (not ($generated@@0 ($generated@@187 ($generated@@11 true)))) (< ($generated@@51 $generated@@242) ($generated@@54 2))) (= (ControlFlow 0 14) (- 0 13))) false)))
(let (($generated@@258  (and (=> (= (ControlFlow 0 2) (- 0 3)) (=> ($generated@@50 $generated@@243 $generated@@244 $generated@@245 $generated@@242) (or ($generated@@45 $generated@@243 $generated@@244 $generated@@245 ($generated@@46 $generated@@195) $generated@@242) (=> (< 0 ($generated@@51 $generated@@242)) ($generated@@45 $generated@@244 $generated@@243 $generated@@245 ($generated@@46 ($generated@@46 $generated@@195)) ($generated@@52 $generated@@242 ($generated@@53 1))))))) (=> (=> ($generated@@50 $generated@@243 $generated@@244 $generated@@245 $generated@@242) (or ($generated@@45 $generated@@243 $generated@@244 $generated@@245 ($generated@@46 $generated@@195) $generated@@242) (=> (< 0 ($generated@@51 $generated@@242)) ($generated@@45 $generated@@244 $generated@@243 $generated@@245 ($generated@@46 ($generated@@46 $generated@@195)) ($generated@@52 $generated@@242 ($generated@@53 1)))))) (=> (= (ControlFlow 0 2) (- 0 1)) (=> ($generated@@50 $generated@@243 $generated@@244 $generated@@245 $generated@@242) (or ($generated@@45 $generated@@243 $generated@@244 $generated@@245 ($generated@@46 $generated@@195) $generated@@242) (=> (= ($generated@@54 0) ($generated@@51 $generated@@242)) (forall (($generated@@259 T@U) ) (!  (=> (and (= (type $generated@@259) $generated@@49) ($generated@@55 $generated@@259 $generated@@242)) ($generated@@45 $generated@@243 $generated@@244 $generated@@245 ($generated@@46 ($generated@@46 $generated@@195)) $generated@@259))
 :pattern ( ($generated@@45 $generated@@243 $generated@@244 $generated@@245 ($generated@@46 ($generated@@46 $generated@@195)) $generated@@259))
))))))))))
(let (($generated@@260  (=> (<= ($generated@@54 2) ($generated@@51 $generated@@242)) (and (=> (= (ControlFlow 0 9) (- 0 12)) ($generated@@191 ($generated@@187 ($generated@@53 2)))) (=> ($generated@@191 ($generated@@187 ($generated@@53 2))) (and (=> (= (ControlFlow 0 9) (- 0 11)) (<= ($generated@@51 ($generated@@187 ($generated@@53 2))) ($generated@@51 $generated@@242))) (=> (<= ($generated@@51 ($generated@@187 ($generated@@53 2))) ($generated@@51 $generated@@242)) (=> (= $generated@@246 ($generated@@52 $generated@@242 ($generated@@53 2))) (and (=> (= (ControlFlow 0 9) (- 0 10)) ($generated@@55 $generated@@246 $generated@@242)) (=> ($generated@@55 $generated@@246 $generated@@242) (=> (and (and (and ($generated@@247 $generated@@248) ($generated@@249 $generated@@248)) ($generated@@50 $generated@@243 $generated@@244 $generated@@245 $generated@@246)) (and (and ($generated@@50 $generated@@243 $generated@@244 $generated@@245 $generated@@246) (and ($generated@@45 $generated@@243 $generated@@244 $generated@@245 ($generated@@46 $generated@@195) $generated@@246) (and (=> (< 0 ($generated@@51 $generated@@246)) ($generated@@45 $generated@@244 $generated@@243 $generated@@245 ($generated@@46 $generated@@195) ($generated@@52 $generated@@246 ($generated@@53 1)))) (=> (= ($generated@@54 0) ($generated@@51 $generated@@246)) (forall (($generated@@261 T@U) ) (!  (=> (and (= (type $generated@@261) $generated@@49) ($generated@@55 $generated@@261 $generated@@246)) ($generated@@45 $generated@@243 $generated@@244 $generated@@245 ($generated@@46 $generated@@195) $generated@@261))
 :pattern ( ($generated@@45 $generated@@243 $generated@@244 $generated@@245 ($generated@@46 $generated@@195) $generated@@261))
)))))) (and (= $generated@@250 $generated@@248) (= (ControlFlow 0 9) 2)))) $generated@@258)))))))))))
(let (($generated@@262  (=> ($generated@@0 ($generated@@187 ($generated@@11 true))) (and (=> (= (ControlFlow 0 5) (- 0 8)) ($generated@@191 ($generated@@187 ($generated@@53 1)))) (=> ($generated@@191 ($generated@@187 ($generated@@53 1))) (and (=> (= (ControlFlow 0 5) (- 0 7)) (<= ($generated@@51 ($generated@@187 ($generated@@53 1))) ($generated@@51 $generated@@242))) (=> (<= ($generated@@51 ($generated@@187 ($generated@@53 1))) ($generated@@51 $generated@@242)) (=> (= $generated@@251 ($generated@@52 $generated@@242 ($generated@@53 1))) (and (=> (= (ControlFlow 0 5) (- 0 6)) ($generated@@55 $generated@@251 $generated@@242)) (=> ($generated@@55 $generated@@251 $generated@@242) (=> (and (and (and ($generated@@247 $generated@@252) ($generated@@249 $generated@@252)) ($generated@@50 $generated@@244 $generated@@243 $generated@@245 $generated@@251)) (and (and ($generated@@50 $generated@@244 $generated@@243 $generated@@245 $generated@@251) (and ($generated@@45 $generated@@244 $generated@@243 $generated@@245 ($generated@@46 $generated@@195) $generated@@251) (and (=> (< 0 ($generated@@51 $generated@@251)) ($generated@@45 $generated@@243 $generated@@244 $generated@@245 ($generated@@46 $generated@@195) ($generated@@52 $generated@@251 ($generated@@53 1)))) (=> (= ($generated@@54 0) ($generated@@51 $generated@@251)) (forall (($generated@@263 T@U) ) (!  (=> (and (= (type $generated@@263) $generated@@49) ($generated@@55 $generated@@263 $generated@@251)) ($generated@@45 $generated@@244 $generated@@243 $generated@@245 ($generated@@46 $generated@@195) $generated@@263))
 :pattern ( ($generated@@45 $generated@@244 $generated@@243 $generated@@245 ($generated@@46 $generated@@195) $generated@@263))
)))))) (and (= $generated@@250 $generated@@252) (= (ControlFlow 0 5) 2)))) $generated@@258)))))))))))
(let (($generated@@264  (=> (< 0 ($generated@@51 $generated@@242)) (and (and (=> (= (ControlFlow 0 15) 5) $generated@@262) (=> (= (ControlFlow 0 15) 9) $generated@@260)) (=> (= (ControlFlow 0 15) 14) $generated@@257)))))
(let (($generated@@265  (=> (<= ($generated@@51 $generated@@242) 0) (=> (and (and (and ($generated@@247 $generated@@253) ($generated@@249 $generated@@253)) (= $generated@@250 $generated@@253)) (and (forall (($generated@@266 T@U) ) (!  (=> (and (= (type $generated@@266) $generated@@49) ($generated@@55 $generated@@266 $generated@@242)) ($generated@@45 $generated@@243 $generated@@244 $generated@@245 ($generated@@46 $generated@@195) $generated@@266))
 :no-pattern (type $generated@@266)
 :no-pattern ($generated $generated@@266)
 :no-pattern ($generated@@0 $generated@@266)
)) (= (ControlFlow 0 4) 2))) $generated@@258))))
(let (($generated@@267  (=> (= $generated@@254 ($generated@@74 $generated@@255 $generated@@250 $generated@@256 false)) (and (=> (= (ControlFlow 0 16) 15) $generated@@264) (=> (= (ControlFlow 0 16) 4) $generated@@265)))))
(let (($generated@@268  (=> (and (and ($generated@@247 $generated@@250) ($generated@@249 $generated@@250)) (and (= 2 $generated@@44) (= (ControlFlow 0 17) 16))) $generated@@267)))
$generated@@268)))))))))
))
(check-sat)
(pop 1)
; Valid
(get-info :rlimit)
(reset)
(set-option :rlimit 0)
; did a full reset
(reset)
(set-option :print-success false)
(set-info :smt-lib-version 2.6)
(set-option :auto_config false)
(set-option :type_check true)
(set-option :smt.case_split 3)
(set-option :smt.qi.eager_threshold 100)
(set-option :smt.delay_units true)
(set-option :smt.arith.solver 2)
(set-option :smt.mbqi false)
(set-option :model.compact false)
(set-option :model.v2 true)
(set-option :pp.bv_literals false)
; done setting options


(set-info :category "industrial")
(declare-sort |T@U| 0)
(declare-sort |T@T| 0)
(declare-fun real_pow (Real Real) Real)
(declare-fun UOrdering2 (|T@U| |T@U|) Bool)
(declare-fun UOrdering3 (|T@T| |T@U| |T@U|) Bool)
(declare-fun tickleBool (Bool) Bool)
(assert (and (tickleBool true) (tickleBool false)))
(declare-fun $generated (T@U) Int)
(declare-fun $generated@@0 (T@U) Bool)
(declare-fun $generated@@1 (T@T) Int)
(declare-fun $generated@@2 () T@T)
(declare-fun $generated@@3 () T@T)
(declare-fun $generated@@4 () T@T)
(declare-fun $generated@@5 () T@T)
(declare-fun $generated@@6 () T@T)
(declare-fun $generated@@7 () T@T)
(declare-fun $generated@@8 (Int) T@U)
(declare-fun type (T@U) T@T)
(declare-fun $generated@@9 (Real) T@U)
(declare-fun $generated@@10 (T@U) Real)
(declare-fun $generated@@11 (Bool) T@U)
(declare-fun $generated@@12 (RoundingMode) T@U)
(declare-fun $generated@@13 (T@U) RoundingMode)
(declare-fun $generated@@14 (String) T@U)
(declare-fun $generated@@15 (T@U) String)
(declare-fun $generated@@16 ((RegEx String)) T@U)
(declare-fun $generated@@17 (T@U) (RegEx String))
(declare-fun $generated@@44 () Int)
(declare-fun $generated@@45 (T@U T@U T@U T@U) Bool)
(declare-fun $generated@@46 (T@U) T@U)
(declare-fun $generated@@47 () T@T)
(declare-fun $generated@@48 () T@T)
(declare-fun $generated@@49 (T@U T@U T@U T@U T@U) Bool)
(declare-fun $generated@@50 () T@T)
(declare-fun $generated@@57 (T@U T@U T@U T@U) Bool)
(declare-fun $generated@@58 (T@U) Int)
(declare-fun $generated@@59 (T@U T@U) T@U)
(declare-fun $generated@@60 (Int) T@U)
(declare-fun $generated@@61 (Int) Int)
(declare-fun $generated@@62 (T@U T@U) Bool)
(declare-fun $generated@@79 (T@U T@U T@U) T@U)
(declare-fun $generated@@80 (T@U T@U T@U Bool) T@U)
(declare-fun $generated@@81 (T@T) T@T)
(declare-fun $generated@@82 () T@T)
(declare-fun $generated@@83 (T@T T@T) T@T)
(declare-fun $generated@@84 () T@T)
(declare-fun $generated@@85 (T@T) T@T)
(declare-fun $generated@@86 (T@U T@U) T@U)
(declare-fun $generated@@87 (T@U T@U) T@U)
(declare-fun $generated@@88 (T@T) T@T)
(declare-fun $generated@@89 (T@T) T@T)
(declare-fun $generated@@90 (T@U T@U T@U) T@U)
(declare-fun $generated@@91 (T@U T@U T@U) T@U)
(declare-fun $generated@@92 (T@T T@T) T@T)
(declare-fun $generated@@93 (T@T) T@T)
(declare-fun $generated@@94 (T@T) T@T)
(declare-fun $generated@@95 (T@U T@U T@U T@U) T@U)
(declare-fun $generated@@193 (T@U) T@U)
(declare-fun $generated@@197 (T@U) T@U)
(declare-fun $generated@@198 () T@U)
(declare-fun $generated@@213 (T@U) Bool)
(declare-fun $generated@@234 (T@U T@U T@U) Bool)
(declare-fun $generated@@251 (T@U) T@U)
(declare-fun $generated@@252 (T@T T@U) T@U)
(assert  (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (= ($generated@@1 $generated@@2) 0) (= ($generated@@1 $generated@@3) 1)) (= ($generated@@1 $generated@@4) 2)) (= ($generated@@1 $generated@@5) 3)) (= ($generated@@1 $generated@@6) 4)) (= ($generated@@1 $generated@@7) 5)) (forall (($generated@@18 Int) ) (! (= ($generated ($generated@@8 $generated@@18)) $generated@@18)
 :pattern ( ($generated@@8 $generated@@18))
))) (forall (($generated@@19 T@U) ) (!  (=> (= (type $generated@@19) $generated@@2) (= ($generated@@8 ($generated $generated@@19)) $generated@@19))
 :pattern ( ($generated $generated@@19))
))) (forall (($generated@@20 Int) ) (! (= (type ($generated@@8 $generated@@20)) $generated@@2)
 :pattern ( ($generated@@8 $generated@@20))
))) (forall (($generated@@21 Real) ) (! (= ($generated@@10 ($generated@@9 $generated@@21)) $generated@@21)
 :pattern ( ($generated@@9 $generated@@21))
))) (forall (($generated@@22 T@U) ) (!  (=> (= (type $generated@@22) $generated@@3) (= ($generated@@9 ($generated@@10 $generated@@22)) $generated@@22))
 :pattern ( ($generated@@10 $generated@@22))
))) (forall (($generated@@23 Real) ) (! (= (type ($generated@@9 $generated@@23)) $generated@@3)
 :pattern ( ($generated@@9 $generated@@23))
))) (forall (($generated@@24 Bool) ) (! (= ($generated@@0 ($generated@@11 $generated@@24)) $generated@@24)
 :pattern ( ($generated@@11 $generated@@24))
))) (forall (($generated@@25 T@U) ) (!  (=> (= (type $generated@@25) $generated@@4) (= ($generated@@11 ($generated@@0 $generated@@25)) $generated@@25))
 :pattern ( ($generated@@0 $generated@@25))
))) (forall (($generated@@26 Bool) ) (! (= (type ($generated@@11 $generated@@26)) $generated@@4)
 :pattern ( ($generated@@11 $generated@@26))
))) (forall (($generated@@27 RoundingMode) ) (! (= ($generated@@13 ($generated@@12 $generated@@27)) $generated@@27)
 :pattern ( ($generated@@12 $generated@@27))
))) (forall (($generated@@28 T@U) ) (!  (=> (= (type $generated@@28) $generated@@5) (= ($generated@@12 ($generated@@13 $generated@@28)) $generated@@28))
 :pattern ( ($generated@@13 $generated@@28))
))) (forall (($generated@@29 RoundingMode) ) (! (= (type ($generated@@12 $generated@@29)) $generated@@5)
 :pattern ( ($generated@@12 $generated@@29))
))) (forall (($generated@@30 String) ) (! (= ($generated@@15 ($generated@@14 $generated@@30)) $generated@@30)
 :pattern ( ($generated@@14 $generated@@30))
))) (forall (($generated@@31 T@U) ) (!  (=> (= (type $generated@@31) $generated@@6) (= ($generated@@14 ($generated@@15 $generated@@31)) $generated@@31))
 :pattern ( ($generated@@15 $generated@@31))
))) (forall (($generated@@32 String) ) (! (= (type ($generated@@14 $generated@@32)) $generated@@6)
 :pattern ( ($generated@@14 $generated@@32))
))) (forall (($generated@@33 (RegEx String)) ) (! (= ($generated@@17 ($generated@@16 $generated@@33)) $generated@@33)
 :pattern ( ($generated@@16 $generated@@33))
))) (forall (($generated@@34 T@U) ) (!  (=> (= (type $generated@@34) $generated@@7) (= ($generated@@16 ($generated@@17 $generated@@34)) $generated@@34))
 :pattern ( ($generated@@17 $generated@@34))
))) (forall (($generated@@35 (RegEx String)) ) (! (= (type ($generated@@16 $generated@@35)) $generated@@7)
 :pattern ( ($generated@@16 $generated@@35))
))))
(assert (forall (($generated@@36 T@U) ) (! (UOrdering2 $generated@@36 $generated@@36)
 :no-pattern ($generated $generated@@36)
 :no-pattern ($generated@@0 $generated@@36)
)))
(assert (forall (($generated@@37 T@U) ($generated@@38 T@U) ($generated@@39 T@U) ) (! (let (($generated@@40 (type $generated@@37)))
 (=> (and (and (= (type $generated@@38) $generated@@40) (= (type $generated@@39) $generated@@40)) (and (UOrdering2 $generated@@37 $generated@@38) (UOrdering2 $generated@@38 $generated@@39))) (UOrdering2 $generated@@37 $generated@@39)))
 :pattern ( (UOrdering2 $generated@@37 $generated@@38) (UOrdering2 $generated@@38 $generated@@39))
)))
(assert (forall (($generated@@41 T@U) ($generated@@42 T@U) ) (! (let (($generated@@43 (type $generated@@41)))
 (=> (= (type $generated@@42) $generated@@43) (=> (and (UOrdering2 $generated@@41 $generated@@42) (UOrdering2 $generated@@42 $generated@@41)) (= $generated@@41 $generated@@42))))
 :pattern ( (UOrdering2 $generated@@41 $generated@@42) (UOrdering2 $generated@@42 $generated@@41))
)))
(assert  (and (and (and (= ($generated@@1 $generated@@47) 6) (= ($generated@@1 $generated@@48) 7)) (forall (($generated@@51 T@U) ) (! (= (type ($generated@@46 $generated@@51)) $generated@@48)
 :pattern ( ($generated@@46 $generated@@51))
))) (= ($generated@@1 $generated@@50) 8)))
(assert  (=> (<= 1 $generated@@44) (forall (($generated@@52 T@U) ($generated@@53 T@U) ($generated@@54 T@U) ($generated@@55 T@U) ) (!  (=> (and (and (and (and (= (type $generated@@52) $generated@@47) (= (type $generated@@53) $generated@@47)) (= (type $generated@@54) $generated@@47)) (= (type $generated@@55) $generated@@48)) ($generated@@45 $generated@@52 $generated@@53 $generated@@54 ($generated@@46 $generated@@55))) (forall (($generated@@56 T@U) ) (!  (=> (= (type $generated@@56) $generated@@50) ($generated@@49 $generated@@52 $generated@@53 $generated@@54 ($generated@@46 $generated@@55) $generated@@56))
 :pattern ( ($generated@@49 $generated@@52 $generated@@53 $generated@@54 ($generated@@46 $generated@@55) $generated@@56))
)))
 :pattern ( ($generated@@45 $generated@@52 $generated@@53 $generated@@54 ($generated@@46 $generated@@55)))
))))
(assert  (and (forall (($generated@@63 T@U) ($generated@@64 T@U) ) (! (= (type ($generated@@59 $generated@@63 $generated@@64)) $generated@@50)
 :pattern ( ($generated@@59 $generated@@63 $generated@@64))
)) (forall (($generated@@65 Int) ) (! (= (type ($generated@@60 $generated@@65)) $generated@@50)
 :pattern ( ($generated@@60 $generated@@65))
))))
(assert  (=> (<= 1 $generated@@44) (forall (($generated@@66 T@U) ($generated@@67 T@U) ($generated@@68 T@U) ($generated@@69 T@U) ($generated@@70 T@U) ) (!  (=> (and (and (and (and (and (= (type $generated@@66) $generated@@47) (= (type $generated@@67) $generated@@47)) (= (type $generated@@68) $generated@@47)) (= (type $generated@@69) $generated@@48)) (= (type $generated@@70) $generated@@50)) (or ($generated@@57 $generated@@66 $generated@@67 $generated@@68 $generated@@70) (not (= 1 $generated@@44)))) (and (and (=> (< 0 ($generated@@58 $generated@@70)) ($generated@@57 $generated@@67 $generated@@66 $generated@@68 ($generated@@59 $generated@@70 ($generated@@60 1)))) (=> (=> (< 0 ($generated@@58 $generated@@70)) ($generated@@49 $generated@@67 $generated@@66 $generated@@68 $generated@@69 ($generated@@59 $generated@@70 ($generated@@60 1)))) (=> (= ($generated@@61 0) ($generated@@58 $generated@@70)) (forall (($generated@@71 T@U) ) (!  (=> (and (= (type $generated@@71) $generated@@50) ($generated@@62 $generated@@71 $generated@@70)) ($generated@@57 $generated@@66 $generated@@67 $generated@@68 $generated@@71))
 :pattern ( ($generated@@49 $generated@@66 $generated@@67 $generated@@68 $generated@@69 $generated@@71))
))))) (= ($generated@@49 $generated@@66 $generated@@67 $generated@@68 ($generated@@46 $generated@@69) $generated@@70)  (and (=> (< 0 ($generated@@58 $generated@@70)) ($generated@@49 $generated@@67 $generated@@66 $generated@@68 $generated@@69 ($generated@@59 $generated@@70 ($generated@@60 1)))) (=> (= ($generated@@61 0) ($generated@@58 $generated@@70)) (forall (($generated@@72 T@U) ) (!  (=> (and (= (type $generated@@72) $generated@@50) ($generated@@62 $generated@@72 $generated@@70)) ($generated@@49 $generated@@66 $generated@@67 $generated@@68 $generated@@69 $generated@@72))
 :pattern ( ($generated@@49 $generated@@66 $generated@@67 $generated@@68 $generated@@69 $generated@@72))
)))))))
 :pattern ( ($generated@@49 $generated@@66 $generated@@67 $generated@@68 ($generated@@46 $generated@@69) $generated@@70))
))))
(assert (forall (($generated@@73 T@U) ($generated@@74 T@U) ($generated@@75 T@U) ) (!  (=> (and (and (and (= (type $generated@@73) $generated@@50) (= (type $generated@@74) $generated@@50)) (= (type $generated@@75) $generated@@50)) (and ($generated@@62 $generated@@73 $generated@@74) ($generated@@62 $generated@@74 $generated@@75))) ($generated@@62 $generated@@73 $generated@@75))
 :pattern ( ($generated@@62 $generated@@73 $generated@@74) ($generated@@62 $generated@@74 $generated@@75))
 :pattern ( ($generated@@62 $generated@@73 $generated@@74) ($generated@@62 $generated@@73 $generated@@75))
)))
(assert (forall (($generated@@76 T@U) ($generated@@77 Int) ($generated@@78 Int) ) (!  (=> (= (type $generated@@76) $generated@@50) (=> (and (and (<= 0 $generated@@77) (<= 0 $generated@@78)) (<= (+ $generated@@77 $generated@@78) ($generated@@58 $generated@@76))) (= ($generated@@59 ($generated@@59 $generated@@76 ($generated@@60 $generated@@77)) ($generated@@60 $generated@@78)) ($generated@@59 $generated@@76 ($generated@@60 (+ $generated@@77 $generated@@78))))))
 :pattern ( ($generated@@59 ($generated@@59 $generated@@76 ($generated@@60 $generated@@77)) ($generated@@60 $generated@@78)))
)))
(assert  (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (forall (($generated@@96 T@T) ($generated@@97 T@T) ) (= ($generated@@1 ($generated@@83 $generated@@96 $generated@@97)) 9)) (forall (($generated@@98 T@T) ($generated@@99 T@T) ) (! (= ($generated@@88 ($generated@@83 $generated@@98 $generated@@99)) $generated@@98)
 :pattern ( ($generated@@83 $generated@@98 $generated@@99))
))) (forall (($generated@@100 T@T) ($generated@@101 T@T) ) (! (= ($generated@@89 ($generated@@83 $generated@@100 $generated@@101)) $generated@@101)
 :pattern ( ($generated@@83 $generated@@100 $generated@@101))
))) (forall (($generated@@102 T@U) ($generated@@103 T@U) ) (! (let (($generated@@104 ($generated@@89 (type $generated@@102))))
(= (type ($generated@@87 $generated@@102 $generated@@103)) $generated@@104))
 :pattern ( ($generated@@87 $generated@@102 $generated@@103))
))) (forall (($generated@@105 T@U) ($generated@@106 T@U) ($generated@@107 T@U) ) (! (let (($generated@@108 (type $generated@@107)))
(let (($generated@@109 (type $generated@@106)))
(= (type ($generated@@90 $generated@@105 $generated@@106 $generated@@107)) ($generated@@83 $generated@@109 $generated@@108))))
 :pattern ( ($generated@@90 $generated@@105 $generated@@106 $generated@@107))
))) (forall (($generated@@110 T@U) ($generated@@111 T@U) ($generated@@112 T@U) ) (! (let (($generated@@113 ($generated@@89 (type $generated@@110))))
 (=> (= (type $generated@@112) $generated@@113) (= ($generated@@87 ($generated@@90 $generated@@110 $generated@@111 $generated@@112) $generated@@111) $generated@@112)))
 :weight 0
))) (and (forall (($generated@@114 T@U) ($generated@@115 T@U) ($generated@@116 T@U) ($generated@@117 T@U) ) (!  (or (= $generated@@116 $generated@@117) (= ($generated@@87 ($generated@@90 $generated@@115 $generated@@116 $generated@@114) $generated@@117) ($generated@@87 $generated@@115 $generated@@117)))
 :weight 0
)) (forall (($generated@@118 T@U) ($generated@@119 T@U) ($generated@@120 T@U) ($generated@@121 T@U) ) (!  (or true (= ($generated@@87 ($generated@@90 $generated@@119 $generated@@120 $generated@@118) $generated@@121) ($generated@@87 $generated@@119 $generated@@121)))
 :weight 0
)))) (forall (($generated@@122 T@T) ) (= ($generated@@1 ($generated@@85 $generated@@122)) 10))) (forall (($generated@@123 T@T) ) (! (= ($generated@@81 ($generated@@85 $generated@@123)) $generated@@123)
 :pattern ( ($generated@@85 $generated@@123))
))) (forall (($generated@@124 T@U) ($generated@@125 T@U) ) (! (let (($generated@@126 ($generated@@81 (type $generated@@125))))
(= (type ($generated@@86 $generated@@124 $generated@@125)) $generated@@126))
 :pattern ( ($generated@@86 $generated@@124 $generated@@125))
))) (= ($generated@@1 $generated@@84) 11)) (forall (($generated@@127 T@U) ($generated@@128 T@U) ($generated@@129 T@U) ) (! (= (type ($generated@@91 $generated@@127 $generated@@128 $generated@@129)) $generated@@84)
 :pattern ( ($generated@@91 $generated@@127 $generated@@128 $generated@@129))
))) (forall (($generated@@130 T@U) ($generated@@131 T@U) ($generated@@132 T@U) ) (! (let (($generated@@133 ($generated@@81 (type $generated@@131))))
 (=> (= (type $generated@@132) $generated@@133) (= ($generated@@86 ($generated@@91 $generated@@130 $generated@@131 $generated@@132) $generated@@131) $generated@@132)))
 :weight 0
))) (and (forall (($generated@@134 T@U) ($generated@@135 T@U) ($generated@@136 T@U) ($generated@@137 T@U) ) (!  (or (= $generated@@136 $generated@@137) (= ($generated@@86 ($generated@@91 $generated@@135 $generated@@136 $generated@@134) $generated@@137) ($generated@@86 $generated@@135 $generated@@137)))
 :weight 0
)) (forall (($generated@@138 T@U) ($generated@@139 T@U) ($generated@@140 T@U) ($generated@@141 T@U) ) (!  (or true (= ($generated@@86 ($generated@@91 $generated@@139 $generated@@140 $generated@@138) $generated@@141) ($generated@@86 $generated@@139 $generated@@141)))
 :weight 0
)))) (= ($generated@@1 $generated@@82) 12)) (forall (($generated@@142 T@T) ($generated@@143 T@T) ) (= ($generated@@1 ($generated@@92 $generated@@142 $generated@@143)) 13))) (forall (($generated@@144 T@T) ($generated@@145 T@T) ) (! (= ($generated@@93 ($generated@@92 $generated@@144 $generated@@145)) $generated@@144)
 :pattern ( ($generated@@92 $generated@@144 $generated@@145))
))) (forall (($generated@@146 T@T) ($generated@@147 T@T) ) (! (= ($generated@@94 ($generated@@92 $generated@@146 $generated@@147)) $generated@@147)
 :pattern ( ($generated@@92 $generated@@146 $generated@@147))
))) (forall (($generated@@148 T@U) ($generated@@149 T@U) ($generated@@150 T@U) ) (! (let (($generated@@151 ($generated@@94 (type $generated@@148))))
(= (type ($generated@@79 $generated@@148 $generated@@149 $generated@@150)) $generated@@151))
 :pattern ( ($generated@@79 $generated@@148 $generated@@149 $generated@@150))
))) (forall (($generated@@152 T@U) ($generated@@153 T@U) ($generated@@154 T@U) ($generated@@155 T@U) ) (! (let (($generated@@156 (type $generated@@155)))
(let (($generated@@157 (type $generated@@153)))
(= (type ($generated@@95 $generated@@152 $generated@@153 $generated@@154 $generated@@155)) ($generated@@92 $generated@@157 $generated@@156))))
 :pattern ( ($generated@@95 $generated@@152 $generated@@153 $generated@@154 $generated@@155))
))) (forall (($generated@@158 T@U) ($generated@@159 T@U) ($generated@@160 T@U) ($generated@@161 T@U) ) (! (let (($generated@@162 ($generated@@94 (type $generated@@158))))
 (=> (= (type $generated@@161) $generated@@162) (= ($generated@@79 ($generated@@95 $generated@@158 $generated@@159 $generated@@160 $generated@@161) $generated@@159 $generated@@160) $generated@@161)))
 :weight 0
))) (and (and (forall (($generated@@163 T@U) ($generated@@164 T@U) ($generated@@165 T@U) ($generated@@166 T@U) ($generated@@167 T@U) ($generated@@168 T@U) ) (!  (or (= $generated@@165 $generated@@167) (= ($generated@@79 ($generated@@95 $generated@@164 $generated@@165 $generated@@166 $generated@@163) $generated@@167 $generated@@168) ($generated@@79 $generated@@164 $generated@@167 $generated@@168)))
 :weight 0
)) (forall (($generated@@169 T@U) ($generated@@170 T@U) ($generated@@171 T@U) ($generated@@172 T@U) ($generated@@173 T@U) ($generated@@174 T@U) ) (!  (or (= $generated@@172 $generated@@174) (= ($generated@@79 ($generated@@95 $generated@@170 $generated@@171 $generated@@172 $generated@@169) $generated@@173 $generated@@174) ($generated@@79 $generated@@170 $generated@@173 $generated@@174)))
 :weight 0
))) (forall (($generated@@175 T@U) ($generated@@176 T@U) ($generated@@177 T@U) ($generated@@178 T@U) ($generated@@179 T@U) ($generated@@180 T@U) ) (!  (or true (= ($generated@@79 ($generated@@95 $generated@@176 $generated@@177 $generated@@178 $generated@@175) $generated@@179 $generated@@180) ($generated@@79 $generated@@176 $generated@@179 $generated@@180)))
 :weight 0
)))) (forall (($generated@@181 T@U) ($generated@@182 T@U) ($generated@@183 T@U) ($generated@@184 Bool) ) (! (= (type ($generated@@80 $generated@@181 $generated@@182 $generated@@183 $generated@@184)) ($generated@@92 $generated@@82 $generated@@4))
 :pattern ( ($generated@@80 $generated@@181 $generated@@182 $generated@@183 $generated@@184))
))))
(assert (forall (($generated@@185 T@U) ($generated@@186 T@U) ($generated@@187 T@U) ($generated@@188 Bool) ($generated@@189 T@U) ($generated@@190 T@U) ) (! (let (($generated@@191 ($generated@@81 (type $generated@@190))))
 (=> (and (and (and (and (= (type $generated@@185) $generated@@82) (= (type $generated@@186) ($generated@@83 $generated@@82 $generated@@84))) (= (type $generated@@187) ($generated@@85 $generated@@4))) (= (type $generated@@189) $generated@@82)) (= (type $generated@@190) ($generated@@85 $generated@@191))) (= ($generated@@0 ($generated@@79 ($generated@@80 $generated@@185 $generated@@186 $generated@@187 $generated@@188) $generated@@189 $generated@@190))  (=> (and (not (= $generated@@189 $generated@@185)) ($generated@@0 ($generated@@86 ($generated@@87 $generated@@186 $generated@@189) $generated@@187))) $generated@@188))))
 :pattern ( ($generated@@79 ($generated@@80 $generated@@185 $generated@@186 $generated@@187 $generated@@188) $generated@@189 $generated@@190))
)))
(assert (forall (($generated@@192 Int) ) (! (= ($generated@@61 $generated@@192) $generated@@192)
 :pattern ( ($generated@@61 $generated@@192))
)))
(assert (forall (($generated@@194 T@U) ) (! (let (($generated@@195 (type $generated@@194)))
(= (type ($generated@@193 $generated@@194)) $generated@@195))
 :pattern ( ($generated@@193 $generated@@194))
)))
(assert (forall (($generated@@196 T@U) ) (! (= ($generated@@193 $generated@@196) $generated@@196)
 :pattern ( ($generated@@193 $generated@@196))
)))
(assert  (and (forall (($generated@@199 T@U) ) (! (= (type ($generated@@197 $generated@@199)) $generated@@48)
 :pattern ( ($generated@@197 $generated@@199))
)) (= (type $generated@@198) $generated@@48)))
(assert (forall (($generated@@200 T@U) ($generated@@201 T@U) ($generated@@202 T@U) ($generated@@203 T@U) ) (!  (=> (and (and (and (= (type $generated@@200) $generated@@47) (= (type $generated@@201) $generated@@47)) (= (type $generated@@202) $generated@@47)) (= (type $generated@@203) $generated@@48)) (= ($generated@@45 $generated@@200 $generated@@201 $generated@@202 $generated@@203) ($generated@@45 $generated@@200 $generated@@201 $generated@@202 $generated@@198)))
 :pattern ( ($generated@@45 $generated@@200 $generated@@201 $generated@@202 ($generated@@197 $generated@@203)))
)))
(assert (forall (($generated@@204 T@U) ($generated@@205 T@U) ($generated@@206 T@U) ($generated@@207 T@U) ) (!  (=> (and (and (and (= (type $generated@@204) $generated@@47) (= (type $generated@@205) $generated@@47)) (= (type $generated@@206) $generated@@47)) (= (type $generated@@207) $generated@@48)) (= ($generated@@45 $generated@@204 $generated@@205 $generated@@206 ($generated@@46 $generated@@207)) ($generated@@45 $generated@@204 $generated@@205 $generated@@206 $generated@@207)))
 :pattern ( ($generated@@45 $generated@@204 $generated@@205 $generated@@206 ($generated@@46 $generated@@207)))
)))
(assert  (=> (<= 1 $generated@@44) (forall (($generated@@208 T@U) ($generated@@209 T@U) ($generated@@210 T@U) ($generated@@211 T@U) ) (!  (=> (and (and (and (and (= (type $generated@@208) $generated@@47) (= (type $generated@@209) $generated@@47)) (= (type $generated@@210) $generated@@47)) (= (type $generated@@211) $generated@@48)) (forall (($generated@@212 T@U) ) (!  (=> (= (type $generated@@212) $generated@@50) ($generated@@49 $generated@@208 $generated@@209 $generated@@210 ($generated@@46 $generated@@211) $generated@@212))
 :pattern ( ($generated@@49 $generated@@208 $generated@@209 $generated@@210 ($generated@@46 $generated@@211) $generated@@212))
))) ($generated@@45 $generated@@208 $generated@@209 $generated@@210 ($generated@@46 $generated@@211)))
 :pattern ( ($generated@@45 $generated@@208 $generated@@209 $generated@@210 ($generated@@46 $generated@@211)))
))))
(assert (forall (($generated@@214 T@U) ($generated@@215 T@U) ) (!  (=> (and (and (= (type $generated@@214) $generated@@50) (= (type $generated@@215) $generated@@50)) (and ($generated@@213 $generated@@215) (<= ($generated@@58 $generated@@215) ($generated@@58 $generated@@214)))) (and (= ($generated@@213 ($generated@@59 $generated@@214 $generated@@215)) ($generated@@213 $generated@@214)) (= ($generated@@58 ($generated@@59 $generated@@214 $generated@@215)) (- ($generated@@58 $generated@@214) ($generated@@58 $generated@@215)))))
 :pattern ( ($generated@@59 $generated@@214 $generated@@215))
)))
(assert (forall (($generated@@216 T@U) ($generated@@217 T@U) ($generated@@218 T@U) ($generated@@219 T@U) ($generated@@220 T@U) ) (!  (=> (and (and (and (and (= (type $generated@@216) $generated@@47) (= (type $generated@@217) $generated@@47)) (= (type $generated@@218) $generated@@47)) (= (type $generated@@219) $generated@@48)) (= (type $generated@@220) $generated@@50)) (= ($generated@@49 $generated@@216 $generated@@217 $generated@@218 $generated@@219 $generated@@220) ($generated@@49 $generated@@216 $generated@@217 $generated@@218 $generated@@198 $generated@@220)))
 :pattern ( ($generated@@49 $generated@@216 $generated@@217 $generated@@218 ($generated@@197 $generated@@219) $generated@@220))
)))
(assert (forall (($generated@@221 Int) ) (!  (=> (<= 0 $generated@@221) (and ($generated@@213 ($generated@@60 $generated@@221)) (= ($generated@@58 ($generated@@60 $generated@@221)) $generated@@221)))
 :pattern ( ($generated@@60 $generated@@221))
)))
(assert (forall (($generated@@222 T@U) ($generated@@223 T@U) ($generated@@224 T@U) ($generated@@225 T@U) ($generated@@226 T@U) ) (!  (=> (and (and (and (and (= (type $generated@@222) $generated@@47) (= (type $generated@@223) $generated@@47)) (= (type $generated@@224) $generated@@47)) (= (type $generated@@225) $generated@@48)) (= (type $generated@@226) $generated@@50)) (= ($generated@@49 $generated@@222 $generated@@223 $generated@@224 ($generated@@46 $generated@@225) $generated@@226) ($generated@@49 $generated@@222 $generated@@223 $generated@@224 $generated@@225 $generated@@226)))
 :pattern ( ($generated@@49 $generated@@222 $generated@@223 $generated@@224 ($generated@@46 $generated@@225) $generated@@226))
)))
(assert  (=> (<= 1 $generated@@44) (forall (($generated@@227 T@U) ($generated@@228 T@U) ($generated@@229 T@U) ($generated@@230 T@U) ($generated@@231 T@U) ) (!  (=> (and (and (and (and (and (= (type $generated@@227) $generated@@47) (= (type $generated@@228) $generated@@47)) (= (type $generated@@229) $generated@@47)) (= (type $generated@@230) $generated@@48)) (= (type $generated@@231) $generated@@50)) (= $generated@@231 ($generated@@60 0))) ($generated@@49 $generated@@227 $generated@@228 $generated@@229 $generated@@230 $generated@@231))
 :pattern ( ($generated@@49 $generated@@227 $generated@@228 $generated@@229 $generated@@230 $generated@@231))
))))
(assert (forall (($generated@@232 T@U) ($generated@@233 T@U) ) (!  (=> (and (= (type $generated@@232) $generated@@50) (= (type $generated@@233) $generated@@50)) (or (or ($generated@@62 $generated@@232 $generated@@233) (= $generated@@232 $generated@@233)) ($generated@@62 $generated@@233 $generated@@232)))
 :pattern ( ($generated@@62 $generated@@232 $generated@@233) ($generated@@62 $generated@@233 $generated@@232))
)))
(assert  (=> (<= 0 $generated@@44) (forall (($generated@@235 T@U) ($generated@@236 T@U) ($generated@@237 T@U) ($generated@@238 T@U) ) (!  (=> (and (and (and (and (= (type $generated@@235) $generated@@47) (= (type $generated@@236) $generated@@47)) (= (type $generated@@237) $generated@@47)) (= (type $generated@@238) $generated@@48)) (or ($generated@@234 $generated@@235 $generated@@236 $generated@@237) (not (= 0 $generated@@44)))) true)
 :pattern ( ($generated@@45 $generated@@235 $generated@@236 $generated@@237 $generated@@238))
))))
(assert  (=> (<= 0 $generated@@44) (forall (($generated@@239 T@U) ($generated@@240 T@U) ($generated@@241 T@U) ($generated@@242 T@U) ) (!  (=> (and (and (and (and (= (type $generated@@239) $generated@@47) (= (type $generated@@240) $generated@@47)) (= (type $generated@@241) $generated@@47)) (= (type $generated@@242) $generated@@48)) (or ($generated@@234 $generated@@239 $generated@@240 $generated@@241) (not (= 0 $generated@@44)))) (and ($generated@@234 $generated@@240 $generated@@239 $generated@@241) (= ($generated@@45 $generated@@239 $generated@@240 $generated@@241 ($generated@@46 $generated@@242)) ($generated@@0 ($generated@@193 ($generated@@11 ($generated@@45 $generated@@240 $generated@@239 $generated@@241 $generated@@242)))))))
 :pattern ( ($generated@@45 $generated@@239 $generated@@240 $generated@@241 ($generated@@46 $generated@@242)))
))))
(assert (forall (($generated@@243 T@U) ) (!  (=> (= (type $generated@@243) $generated@@50) (<= 0 ($generated@@58 $generated@@243)))
 :pattern ( ($generated@@58 $generated@@243))
)))
(assert  (=> (<= 1 $generated@@44) (forall (($generated@@244 T@U) ($generated@@245 T@U) ($generated@@246 T@U) ($generated@@247 T@U) ($generated@@248 T@U) ) (!  (=> (and (and (and (and (and (= (type $generated@@244) $generated@@47) (= (type $generated@@245) $generated@@47)) (= (type $generated@@246) $generated@@47)) (= (type $generated@@247) $generated@@48)) (= (type $generated@@248) $generated@@50)) (or ($generated@@57 $generated@@244 $generated@@245 $generated@@246 ($generated@@193 $generated@@248)) (not (= 1 $generated@@44)))) (and (and (=> (< 0 ($generated@@58 $generated@@248)) ($generated@@57 $generated@@245 $generated@@244 $generated@@246 ($generated@@59 $generated@@248 ($generated@@60 1)))) (=> (=> (< 0 ($generated@@58 $generated@@248)) ($generated@@49 $generated@@245 $generated@@244 $generated@@246 ($generated@@46 $generated@@247) ($generated@@59 $generated@@248 ($generated@@60 1)))) (=> (= ($generated@@61 0) ($generated@@58 $generated@@248)) (forall (($generated@@249 T@U) ) (!  (=> (and (= (type $generated@@249) $generated@@50) ($generated@@62 $generated@@249 $generated@@248)) ($generated@@57 $generated@@244 $generated@@245 $generated@@246 $generated@@249))
 :pattern ( ($generated@@49 $generated@@244 $generated@@245 $generated@@246 ($generated@@46 $generated@@247) $generated@@249))
))))) (= ($generated@@49 $generated@@244 $generated@@245 $generated@@246 ($generated@@46 $generated@@247) ($generated@@193 $generated@@248))  (and (=> (< 0 ($generated@@58 $generated@@248)) ($generated@@49 $generated@@245 $generated@@244 $generated@@246 ($generated@@46 $generated@@247) ($generated@@59 $generated@@248 ($generated@@60 1)))) (=> (= ($generated@@61 0) ($generated@@58 $generated@@248)) (forall (($generated@@250 T@U) ) (!  (=> (and (= (type $generated@@250) $generated@@50) ($generated@@62 $generated@@250 $generated@@248)) ($generated@@49 $generated@@244 $generated@@245 $generated@@246 ($generated@@46 $generated@@247) $generated@@250))
 :pattern ( ($generated@@49 $generated@@244 $generated@@245 $generated@@246 ($generated@@46 $generated@@247) $generated@@250))
)))))))
 :weight 3
 :pattern ( ($generated@@49 $generated@@244 $generated@@245 $generated@@246 ($generated@@46 $generated@@247) ($generated@@193 $generated@@248)))
))))
(assert  (and (forall (($generated@@253 T@U) ) (! (= (type ($generated@@251 $generated@@253)) $generated@@50)
 :pattern ( ($generated@@251 $generated@@253))
)) (forall (($generated@@254 T@T) ($generated@@255 T@U) ) (! (= (type ($generated@@252 $generated@@254 $generated@@255)) $generated@@254)
 :pattern ( ($generated@@252 $generated@@254 $generated@@255))
))))
(assert (forall (($generated@@256 T@U) ) (! (let (($generated@@257 (type $generated@@256)))
(= ($generated@@252 $generated@@257 ($generated@@251 $generated@@256)) $generated@@256))
 :pattern ( ($generated@@251 $generated@@256))
)))
(assert (forall (($generated@@258 T@U) ($generated@@259 T@U) ) (!  (=> (and (= (type $generated@@258) $generated@@50) (= (type $generated@@259) $generated@@50)) (and (and (and (=> ($generated@@62 $generated@@258 $generated@@259) (not (= $generated@@258 $generated@@259))) (=> (and ($generated@@213 $generated@@258) (not ($generated@@213 $generated@@259))) ($generated@@62 $generated@@258 $generated@@259))) (=> (and ($generated@@213 $generated@@258) ($generated@@213 $generated@@259)) (= ($generated@@62 $generated@@258 $generated@@259) (< ($generated@@58 $generated@@258) ($generated@@58 $generated@@259))))) (=> (and ($generated@@62 $generated@@258 $generated@@259) ($generated@@213 $generated@@259)) ($generated@@213 $generated@@258))))
 :pattern ( ($generated@@62 $generated@@258 $generated@@259))
)))
(assert  (=> (<= 1 $generated@@44) (forall (($generated@@260 T@U) ($generated@@261 T@U) ($generated@@262 T@U) ($generated@@263 T@U) ($generated@@264 T@U) ) (!  (=> (and (and (and (and (and (= (type $generated@@260) $generated@@47) (= (type $generated@@261) $generated@@47)) (= (type $generated@@262) $generated@@47)) (= (type $generated@@263) $generated@@48)) (= (type $generated@@264) $generated@@50)) (or ($generated@@57 $generated@@260 $generated@@261 $generated@@262 $generated@@264) (not (= 1 $generated@@44)))) true)
 :pattern ( ($generated@@49 $generated@@260 $generated@@261 $generated@@262 $generated@@263 $generated@@264))
))))
(assert (forall (($generated@@265 T@U) ) (!  (=> (and (= (type $generated@@265) $generated@@50) ($generated@@213 $generated@@265)) (= $generated@@265 ($generated@@60 ($generated@@58 $generated@@265))))
 :pattern ( ($generated@@58 $generated@@265))
 :pattern ( ($generated@@213 $generated@@265))
)))
(assert (forall (($generated@@266 T@U) ($generated@@267 T@U) ) (!  (=> (and (and (= (type $generated@@266) $generated@@50) (= (type $generated@@267) $generated@@50)) (and ($generated@@213 $generated@@267) (<= ($generated@@58 $generated@@267) ($generated@@58 $generated@@266)))) (or (and (= $generated@@267 ($generated@@60 0)) (= ($generated@@59 $generated@@266 $generated@@267) $generated@@266)) (and (not (= $generated@@267 ($generated@@60 0))) ($generated@@62 ($generated@@59 $generated@@266 $generated@@267) $generated@@266))))
 :pattern ( ($generated@@59 $generated@@266 $generated@@267))
)))
(assert (forall (($generated@@268 Int) ) (! (= ($generated@@251 ($generated@@8 ($generated@@61 $generated@@268))) ($generated@@193 ($generated@@251 ($generated@@8 $generated@@268))))
 :pattern ( ($generated@@251 ($generated@@8 ($generated@@61 $generated@@268))))
)))
(assert (forall (($generated@@269 T@U) ) (! (= ($generated@@251 ($generated@@193 $generated@@269)) ($generated@@193 ($generated@@251 $generated@@269)))
 :pattern ( ($generated@@251 ($generated@@193 $generated@@269)))
)))
(push 1)
(declare-fun ControlFlow (Int Int) Int)
(declare-fun $generated@@270 () T@U)
(declare-fun $generated@@271 () T@U)
(declare-fun $generated@@272 () T@U)
(declare-fun $generated@@273 () T@U)
(declare-fun $generated@@274 (T@U) Bool)
(declare-fun $generated@@275 () T@U)
(declare-fun $generated@@276 (T@U) Bool)
(declare-fun $generated@@277 () T@U)
(declare-fun $generated@@278 () T@U)
(declare-fun $generated@@279 () T@U)
(declare-fun $generated@@280 () T@U)
(declare-fun $generated@@281 () T@U)
(declare-fun $generated@@282 () T@U)
(assert  (and (and (and (and (and (and (and (and (and (and (= (type $generated@@270) $generated@@47) (= (type $generated@@271) $generated@@47)) (= (type $generated@@272) $generated@@47)) (= (type $generated@@273) $generated@@50)) (= (type $generated@@278) ($generated@@83 $generated@@82 $generated@@84))) (= (type $generated@@277) ($generated@@83 $generated@@82 $generated@@84))) (= (type $generated@@275) ($generated@@83 $generated@@82 $generated@@84))) (= (type $generated@@279) ($generated@@92 $generated@@82 $generated@@4))) (= (type $generated@@280) $generated@@82)) (= (type $generated@@281) ($generated@@83 $generated@@82 $generated@@84))) (= (type $generated@@282) ($generated@@85 $generated@@4))))
(set-option :timeout 0)
(set-option :rlimit 0)
(assert (not
 (=> (= (ControlFlow 0 0) 12) (let (($generated@@283  (and (=> (= (ControlFlow 0 2) (- 0 3)) (=> ($generated@@57 $generated@@270 $generated@@271 $generated@@272 $generated@@273) (or ($generated@@49 $generated@@270 $generated@@271 $generated@@272 ($generated@@46 $generated@@198) $generated@@273) (=> (< 0 ($generated@@58 $generated@@273)) ($generated@@49 $generated@@271 $generated@@270 $generated@@272 ($generated@@46 ($generated@@46 $generated@@198)) ($generated@@59 $generated@@273 ($generated@@60 1))))))) (=> (=> ($generated@@57 $generated@@270 $generated@@271 $generated@@272 $generated@@273) (or ($generated@@49 $generated@@270 $generated@@271 $generated@@272 ($generated@@46 $generated@@198) $generated@@273) (=> (< 0 ($generated@@58 $generated@@273)) ($generated@@49 $generated@@271 $generated@@270 $generated@@272 ($generated@@46 ($generated@@46 $generated@@198)) ($generated@@59 $generated@@273 ($generated@@60 1)))))) (=> (= (ControlFlow 0 2) (- 0 1)) (=> ($generated@@57 $generated@@270 $generated@@271 $generated@@272 $generated@@273) (or ($generated@@49 $generated@@270 $generated@@271 $generated@@272 ($generated@@46 $generated@@198) $generated@@273) (=> (= ($generated@@61 0) ($generated@@58 $generated@@273)) (forall (($generated@@284 T@U) ) (!  (=> (and (= (type $generated@@284) $generated@@50) ($generated@@62 $generated@@284 $generated@@273)) ($generated@@49 $generated@@270 $generated@@271 $generated@@272 ($generated@@46 ($generated@@46 $generated@@198)) $generated@@284))
 :pattern ( ($generated@@49 $generated@@270 $generated@@271 $generated@@272 ($generated@@46 ($generated@@46 $generated@@198)) $generated@@284))
))))))))))
(let (($generated@@285  (=> (and (not (and (not (= $generated@@273 ($generated@@60 1))) (= ($generated@@58 $generated@@273) ($generated@@61 1)))) (= (ControlFlow 0 6) 2)) $generated@@283)))
(let (($generated@@286  (=> (and (not (= $generated@@273 ($generated@@60 1))) (= ($generated@@58 $generated@@273) ($generated@@61 1))) (=> (and (and (and ($generated@@274 $generated@@275) ($generated@@276 $generated@@275)) ($generated@@234 $generated@@271 $generated@@270 $generated@@272)) (and (and ($generated@@234 $generated@@271 $generated@@270 $generated@@272) (and ($generated@@0 ($generated@@193 ($generated@@11 ($generated@@45 $generated@@271 $generated@@270 $generated@@272 ($generated@@46 $generated@@198))))) ($generated@@0 ($generated@@193 ($generated@@11 ($generated@@45 $generated@@270 $generated@@271 $generated@@272 ($generated@@46 $generated@@198))))))) (and (= $generated@@277 $generated@@275) (= (ControlFlow 0 5) 2)))) $generated@@283))))
(let (($generated@@287  (and (=> (= (ControlFlow 0 7) 5) $generated@@286) (=> (= (ControlFlow 0 7) 6) $generated@@285))))
(let (($generated@@288  (=> (and (= $generated@@273 ($generated@@60 1)) (= (ControlFlow 0 9) 7)) $generated@@287)))
(let (($generated@@289  (=> (and (not (= $generated@@273 ($generated@@60 1))) (= (ControlFlow 0 8) 7)) $generated@@287)))
(let (($generated@@290  (=> (< 0 ($generated@@58 $generated@@273)) (and (=> (= (ControlFlow 0 10) 8) $generated@@289) (=> (= (ControlFlow 0 10) 9) $generated@@288)))))
(let (($generated@@291  (=> (<= ($generated@@58 $generated@@273) 0) (=> (and (and (and ($generated@@274 $generated@@278) ($generated@@276 $generated@@278)) (= $generated@@277 $generated@@278)) (and (forall (($generated@@292 T@U) ) (!  (=> (and (= (type $generated@@292) $generated@@50) ($generated@@62 $generated@@292 $generated@@273)) ($generated@@49 $generated@@270 $generated@@271 $generated@@272 ($generated@@46 $generated@@198) $generated@@292))
 :no-pattern (type $generated@@292)
 :no-pattern ($generated $generated@@292)
 :no-pattern ($generated@@0 $generated@@292)
)) (= (ControlFlow 0 4) 2))) $generated@@283))))
(let (($generated@@293  (=> (= $generated@@279 ($generated@@80 $generated@@280 $generated@@281 $generated@@282 false)) (=> (and (and ($generated@@274 $generated@@277) ($generated@@276 $generated@@277)) (and (= $generated@@281 $generated@@277) (forall (($generated@@294 T@U) ) (!  (=> (= (type $generated@@294) $generated@@50) (=> (and ($generated@@0 ($generated@@193 ($generated@@11 true))) ($generated@@62 $generated@@294 $generated@@273)) ($generated@@49 $generated@@270 $generated@@271 $generated@@272 ($generated@@46 $generated@@198) $generated@@294)))
 :no-pattern (type $generated@@294)
 :no-pattern ($generated $generated@@294)
 :no-pattern ($generated@@0 $generated@@294)
)))) (and (=> (= (ControlFlow 0 11) 10) $generated@@290) (=> (= (ControlFlow 0 11) 4) $generated@@291))))))
(let (($generated@@295  (=> (and (and ($generated@@274 $generated@@281) ($generated@@276 $generated@@281)) (and (= 4 $generated@@44) (= (ControlFlow 0 12) 11))) $generated@@293)))
$generated@@295)))))))))))
))
(check-sat)
(pop 1)
; Valid
(get-info :rlimit)
(reset)
(set-option :rlimit 0)
; did a full reset
(reset)
(set-option :print-success false)
(set-info :smt-lib-version 2.6)
(set-option :auto_config false)
(set-option :type_check true)
(set-option :smt.case_split 3)
(set-option :smt.qi.eager_threshold 100)
(set-option :smt.delay_units true)
(set-option :smt.arith.solver 2)
(set-option :smt.mbqi false)
(set-option :model.compact false)
(set-option :model.v2 true)
(set-option :pp.bv_literals false)
; done setting options


(set-info :category "industrial")
(declare-sort |T@U| 0)
(declare-sort |T@T| 0)
(declare-fun real_pow (Real Real) Real)
(declare-fun UOrdering2 (|T@U| |T@U|) Bool)
(declare-fun UOrdering3 (|T@T| |T@U| |T@U|) Bool)
(declare-fun tickleBool (Bool) Bool)
(assert (and (tickleBool true) (tickleBool false)))
(declare-fun $generated (T@U) Int)
(declare-fun $generated@@0 (T@U) Bool)
(declare-fun $generated@@1 (T@T) Int)
(declare-fun $generated@@2 () T@T)
(declare-fun $generated@@3 () T@T)
(declare-fun $generated@@4 () T@T)
(declare-fun $generated@@5 () T@T)
(declare-fun $generated@@6 () T@T)
(declare-fun $generated@@7 () T@T)
(declare-fun $generated@@8 (Int) T@U)
(declare-fun type (T@U) T@T)
(declare-fun $generated@@9 (Real) T@U)
(declare-fun $generated@@10 (T@U) Real)
(declare-fun $generated@@11 (Bool) T@U)
(declare-fun $generated@@12 (RoundingMode) T@U)
(declare-fun $generated@@13 (T@U) RoundingMode)
(declare-fun $generated@@14 (String) T@U)
(declare-fun $generated@@15 (T@U) String)
(declare-fun $generated@@16 ((RegEx String)) T@U)
(declare-fun $generated@@17 (T@U) (RegEx String))
(declare-fun $generated@@44 () T@U)
(declare-fun $generated@@45 () T@U)
(declare-fun $generated@@46 () T@U)
(declare-fun $generated@@47 () T@U)
(declare-fun $generated@@48 () T@U)
(declare-fun $generated@@49 () T@U)
(declare-fun $generated@@50 () T@U)
(declare-fun $generated@@51 () T@U)
(declare-fun $generated@@52 () T@U)
(declare-fun $generated@@53 () T@U)
(declare-fun $generated@@54 () T@U)
(declare-fun $generated@@55 () T@U)
(declare-fun $generated@@56 () T@U)
(declare-fun $generated@@57 () T@U)
(declare-fun $generated@@58 () T@U)
(declare-fun $generated@@59 () T@U)
(declare-fun $generated@@60 () T@U)
(declare-fun $generated@@61 () T@U)
(declare-fun $generated@@62 () T@U)
(declare-fun $generated@@63 () T@U)
(declare-fun $generated@@64 () T@U)
(declare-fun $generated@@65 () T@U)
(declare-fun $generated@@66 () T@T)
(declare-fun $generated@@67 () T@T)
(declare-fun $generated@@68 (T@T) T@T)
(declare-fun $generated@@69 (T@T) T@T)
(declare-fun $generated@@70 () T@T)
(declare-fun $generated@@71 () T@T)
(declare-fun $generated@@74 (T@U) T@U)
(declare-fun $generated@@76 (T@U T@U T@U) Bool)
(declare-fun $generated@@77 (Int) T@U)
(declare-fun $generated@@78 (T@T T@T) T@T)
(declare-fun $generated@@79 () T@T)
(declare-fun $generated@@80 () T@T)
(declare-fun $generated@@81 (T@T) T@T)
(declare-fun $generated@@82 (T@T) T@T)
(declare-fun $generated@@83 (T@U T@U) T@U)
(declare-fun $generated@@84 (T@U T@U T@U) T@U)
(declare-fun $generated@@85 (T@U T@U) T@U)
(declare-fun $generated@@86 (T@U T@U T@U) T@U)
(declare-fun $generated@@134 () T@U)
(declare-fun $generated@@137 (T@U T@U) Bool)
(declare-fun $generated@@139 (T@U) Bool)
(declare-fun $generated@@140 (T@U T@U) T@U)
(declare-fun $generated@@141 () T@T)
(declare-fun $generated@@147 (T@U T@U) Bool)
(declare-fun $generated@@148 (T@U) T@U)
(declare-fun $generated@@149 (T@U) T@U)
(declare-fun $generated@@150 () T@T)
(declare-fun $generated@@155 (T@U) T@U)
(declare-fun $generated@@156 (T@U) Bool)
(declare-fun $generated@@160 () Int)
(declare-fun $generated@@161 (T@U T@U T@U T@U Int) Bool)
(declare-fun $generated@@162 () T@T)
(declare-fun $generated@@163 (T@U T@U T@U Int) Bool)
(declare-fun $generated@@164 (Int) Int)
(declare-fun $generated@@170 (T@U T@U T@U) T@U)
(declare-fun $generated@@171 (T@U T@U T@U Bool) T@U)
(declare-fun $generated@@172 (T@T T@T) T@T)
(declare-fun $generated@@173 (T@T) T@T)
(declare-fun $generated@@174 (T@T) T@T)
(declare-fun $generated@@175 (T@U T@U T@U T@U) T@U)
(declare-fun $generated@@226 (T@U) T@U)
(declare-fun $generated@@233 (T@U T@U) T@U)
(declare-fun $generated@@234 (T@U T@U) Bool)
(declare-fun $generated@@243 (T@U) T@U)
(declare-fun $generated@@248 (T@U) T@U)
(declare-fun $generated@@254 (T@U) T@U)
(declare-fun $generated@@258 (T@U) Bool)
(declare-fun $generated@@259 (T@U T@U T@U) Bool)
(declare-fun $generated@@265 (T@U) T@U)
(declare-fun $generated@@276 (T@T) T@U)
(declare-fun $generated@@277 (T@U) Int)
(declare-fun $generated@@278 (T@T) T@T)
(declare-fun $generated@@279 (T@T) T@T)
(declare-fun $generated@@285 (T@U) T@U)
(declare-fun $generated@@290 (T@U) Int)
(declare-fun $generated@@291 (T@T) T@U)
(declare-fun $generated@@296 (T@U) T@U)
(declare-fun $generated@@297 (T@T T@T) T@U)
(declare-fun $generated@@298 (T@T T@T) T@T)
(declare-fun $generated@@299 (T@T) T@T)
(declare-fun $generated@@300 (T@T) T@T)
(declare-fun $generated@@314 (T@U) T@U)
(declare-fun $generated@@315 (T@T T@T) T@U)
(declare-fun $generated@@316 (T@T T@T) T@T)
(declare-fun $generated@@317 (T@T) T@T)
(declare-fun $generated@@318 (T@T) T@T)
(declare-fun $generated@@332 (T@U) T@U)
(declare-fun $generated@@333 () T@U)
(declare-fun $generated@@348 (T@T T@U) T@U)
(declare-fun $generated@@356 (T@U) T@U)
(declare-fun $generated@@367 (T@U) T@U)
(declare-fun $generated@@392 (T@U) T@U)
(declare-fun $generated@@393 (T@U) T@U)
(declare-fun $generated@@400 (T@U) T@U)
(declare-fun $generated@@401 (T@U) T@U)
(declare-fun $generated@@418 (T@U T@U) T@U)
(declare-fun $generated@@426 (T@U T@U) T@U)
(declare-fun $generated@@434 (T@T) T@U)
(declare-fun $generated@@458 () T@T)
(declare-fun $generated@@466 (T@U) T@U)
(declare-fun $generated@@470 (T@U) T@U)
(declare-fun $generated@@476 (T@U) T@U)
(declare-fun $generated@@480 (T@U) T@U)
(declare-fun $generated@@488 (T@U) T@U)
(declare-fun $generated@@492 (T@U) T@U)
(declare-fun $generated@@500 (T@U) T@U)
(declare-fun $generated@@501 (T@U Int) T@U)
(declare-fun $generated@@510 (T@U) Int)
(declare-fun $generated@@512 (T@U) T@U)
(declare-fun $generated@@516 (T@U) T@U)
(declare-fun $generated@@520 (T@U) T@U)
(declare-fun $generated@@524 (T@U) T@U)
(declare-fun $generated@@538 (T@U) Int)
(declare-fun $generated@@539 (T@U) Int)
(declare-fun $generated@@555 (T@U) T@U)
(declare-fun $generated@@604 (T@U) Int)
(assert  (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (= ($generated@@1 $generated@@2) 0) (= ($generated@@1 $generated@@3) 1)) (= ($generated@@1 $generated@@4) 2)) (= ($generated@@1 $generated@@5) 3)) (= ($generated@@1 $generated@@6) 4)) (= ($generated@@1 $generated@@7) 5)) (forall (($generated@@18 Int) ) (! (= ($generated ($generated@@8 $generated@@18)) $generated@@18)
 :pattern ( ($generated@@8 $generated@@18))
))) (forall (($generated@@19 T@U) ) (!  (=> (= (type $generated@@19) $generated@@2) (= ($generated@@8 ($generated $generated@@19)) $generated@@19))
 :pattern ( ($generated $generated@@19))
))) (forall (($generated@@20 Int) ) (! (= (type ($generated@@8 $generated@@20)) $generated@@2)
 :pattern ( ($generated@@8 $generated@@20))
))) (forall (($generated@@21 Real) ) (! (= ($generated@@10 ($generated@@9 $generated@@21)) $generated@@21)
 :pattern ( ($generated@@9 $generated@@21))
))) (forall (($generated@@22 T@U) ) (!  (=> (= (type $generated@@22) $generated@@3) (= ($generated@@9 ($generated@@10 $generated@@22)) $generated@@22))
 :pattern ( ($generated@@10 $generated@@22))
))) (forall (($generated@@23 Real) ) (! (= (type ($generated@@9 $generated@@23)) $generated@@3)
 :pattern ( ($generated@@9 $generated@@23))
))) (forall (($generated@@24 Bool) ) (! (= ($generated@@0 ($generated@@11 $generated@@24)) $generated@@24)
 :pattern ( ($generated@@11 $generated@@24))
))) (forall (($generated@@25 T@U) ) (!  (=> (= (type $generated@@25) $generated@@4) (= ($generated@@11 ($generated@@0 $generated@@25)) $generated@@25))
 :pattern ( ($generated@@0 $generated@@25))
))) (forall (($generated@@26 Bool) ) (! (= (type ($generated@@11 $generated@@26)) $generated@@4)
 :pattern ( ($generated@@11 $generated@@26))
))) (forall (($generated@@27 RoundingMode) ) (! (= ($generated@@13 ($generated@@12 $generated@@27)) $generated@@27)
 :pattern ( ($generated@@12 $generated@@27))
))) (forall (($generated@@28 T@U) ) (!  (=> (= (type $generated@@28) $generated@@5) (= ($generated@@12 ($generated@@13 $generated@@28)) $generated@@28))
 :pattern ( ($generated@@13 $generated@@28))
))) (forall (($generated@@29 RoundingMode) ) (! (= (type ($generated@@12 $generated@@29)) $generated@@5)
 :pattern ( ($generated@@12 $generated@@29))
))) (forall (($generated@@30 String) ) (! (= ($generated@@15 ($generated@@14 $generated@@30)) $generated@@30)
 :pattern ( ($generated@@14 $generated@@30))
))) (forall (($generated@@31 T@U) ) (!  (=> (= (type $generated@@31) $generated@@6) (= ($generated@@14 ($generated@@15 $generated@@31)) $generated@@31))
 :pattern ( ($generated@@15 $generated@@31))
))) (forall (($generated@@32 String) ) (! (= (type ($generated@@14 $generated@@32)) $generated@@6)
 :pattern ( ($generated@@14 $generated@@32))
))) (forall (($generated@@33 (RegEx String)) ) (! (= ($generated@@17 ($generated@@16 $generated@@33)) $generated@@33)
 :pattern ( ($generated@@16 $generated@@33))
))) (forall (($generated@@34 T@U) ) (!  (=> (= (type $generated@@34) $generated@@7) (= ($generated@@16 ($generated@@17 $generated@@34)) $generated@@34))
 :pattern ( ($generated@@17 $generated@@34))
))) (forall (($generated@@35 (RegEx String)) ) (! (= (type ($generated@@16 $generated@@35)) $generated@@7)
 :pattern ( ($generated@@16 $generated@@35))
))))
(assert (forall (($generated@@36 T@U) ) (! (UOrdering2 $generated@@36 $generated@@36)
 :no-pattern ($generated $generated@@36)
 :no-pattern ($generated@@0 $generated@@36)
)))
(assert (forall (($generated@@37 T@U) ($generated@@38 T@U) ($generated@@39 T@U) ) (! (let (($generated@@40 (type $generated@@37)))
 (=> (and (and (= (type $generated@@38) $generated@@40) (= (type $generated@@39) $generated@@40)) (and (UOrdering2 $generated@@37 $generated@@38) (UOrdering2 $generated@@38 $generated@@39))) (UOrdering2 $generated@@37 $generated@@39)))
 :pattern ( (UOrdering2 $generated@@37 $generated@@38) (UOrdering2 $generated@@38 $generated@@39))
)))
(assert (forall (($generated@@41 T@U) ($generated@@42 T@U) ) (! (let (($generated@@43 (type $generated@@41)))
 (=> (= (type $generated@@42) $generated@@43) (=> (and (UOrdering2 $generated@@41 $generated@@42) (UOrdering2 $generated@@42 $generated@@41)) (= $generated@@41 $generated@@42))))
 :pattern ( (UOrdering2 $generated@@41 $generated@@42) (UOrdering2 $generated@@42 $generated@@41))
)))
(assert  (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (= ($generated@@1 $generated@@66) 6) (= (type $generated@@44) $generated@@66)) (= (type $generated@@45) $generated@@66)) (= (type $generated@@46) $generated@@66)) (= (type $generated@@47) $generated@@66)) (= (type $generated@@48) $generated@@66)) (= ($generated@@1 $generated@@67) 7)) (= (type $generated@@49) $generated@@67)) (= (type $generated@@50) $generated@@67)) (= (type $generated@@51) $generated@@67)) (= (type $generated@@52) $generated@@67)) (= (type $generated@@53) $generated@@67)) (= (type $generated@@54) $generated@@67)) (= (type $generated@@55) $generated@@67)) (= (type $generated@@56) $generated@@67)) (= (type $generated@@57) $generated@@67)) (= (type $generated@@58) $generated@@67)) (= (type $generated@@59) $generated@@67)) (forall (($generated@@72 T@T) ) (= ($generated@@1 ($generated@@68 $generated@@72)) 8))) (forall (($generated@@73 T@T) ) (! (= ($generated@@69 ($generated@@68 $generated@@73)) $generated@@73)
 :pattern ( ($generated@@68 $generated@@73))
))) (= (type $generated@@60) ($generated@@68 $generated@@4))) (= (type $generated@@61) $generated@@67)) (= ($generated@@1 $generated@@70) 9)) (= (type $generated@@62) $generated@@70)) (= (type $generated@@63) $generated@@67)) (= ($generated@@1 $generated@@71) 10)) (= (type $generated@@64) $generated@@71)) (= (type $generated@@65) $generated@@71)))
(assert (distinct $generated@@44 $generated@@45 $generated@@46 $generated@@47 $generated@@48 $generated@@49 $generated@@50 $generated@@51 $generated@@52 $generated@@53 $generated@@54 $generated@@55 $generated@@56 $generated@@57 $generated@@58 $generated@@59 $generated@@60 $generated@@61 $generated@@62 $generated@@63 $generated@@64 $generated@@65)
)
(assert (forall (($generated@@75 T@U) ) (! (= (type ($generated@@74 $generated@@75)) $generated@@67)
 :pattern ( ($generated@@74 $generated@@75))
)))
(assert (= ($generated@@74 $generated@@44) $generated@@49))
(assert (= ($generated@@74 $generated@@45) $generated@@50))
(assert (= ($generated@@74 $generated@@46) $generated@@51))
(assert (= ($generated@@74 $generated@@47) $generated@@52))
(assert (= ($generated@@74 $generated@@48) $generated@@53))
(assert  (and (and (and (and (and (and (and (and (and (and (and (and (and (forall (($generated@@87 T@T) ($generated@@88 T@T) ) (= ($generated@@1 ($generated@@78 $generated@@87 $generated@@88)) 11)) (forall (($generated@@89 T@T) ($generated@@90 T@T) ) (! (= ($generated@@81 ($generated@@78 $generated@@89 $generated@@90)) $generated@@89)
 :pattern ( ($generated@@78 $generated@@89 $generated@@90))
))) (forall (($generated@@91 T@T) ($generated@@92 T@T) ) (! (= ($generated@@82 ($generated@@78 $generated@@91 $generated@@92)) $generated@@92)
 :pattern ( ($generated@@78 $generated@@91 $generated@@92))
))) (forall (($generated@@93 T@U) ($generated@@94 T@U) ) (! (let (($generated@@95 ($generated@@82 (type $generated@@93))))
(= (type ($generated@@83 $generated@@93 $generated@@94)) $generated@@95))
 :pattern ( ($generated@@83 $generated@@93 $generated@@94))
))) (forall (($generated@@96 T@U) ($generated@@97 T@U) ($generated@@98 T@U) ) (! (let (($generated@@99 (type $generated@@98)))
(let (($generated@@100 (type $generated@@97)))
(= (type ($generated@@84 $generated@@96 $generated@@97 $generated@@98)) ($generated@@78 $generated@@100 $generated@@99))))
 :pattern ( ($generated@@84 $generated@@96 $generated@@97 $generated@@98))
))) (forall (($generated@@101 T@U) ($generated@@102 T@U) ($generated@@103 T@U) ) (! (let (($generated@@104 ($generated@@82 (type $generated@@101))))
 (=> (= (type $generated@@103) $generated@@104) (= ($generated@@83 ($generated@@84 $generated@@101 $generated@@102 $generated@@103) $generated@@102) $generated@@103)))
 :weight 0
))) (and (forall (($generated@@105 T@U) ($generated@@106 T@U) ($generated@@107 T@U) ($generated@@108 T@U) ) (!  (or (= $generated@@107 $generated@@108) (= ($generated@@83 ($generated@@84 $generated@@106 $generated@@107 $generated@@105) $generated@@108) ($generated@@83 $generated@@106 $generated@@108)))
 :weight 0
)) (forall (($generated@@109 T@U) ($generated@@110 T@U) ($generated@@111 T@U) ($generated@@112 T@U) ) (!  (or true (= ($generated@@83 ($generated@@84 $generated@@110 $generated@@111 $generated@@109) $generated@@112) ($generated@@83 $generated@@110 $generated@@112)))
 :weight 0
)))) (= ($generated@@1 $generated@@79) 12)) (forall (($generated@@113 T@U) ($generated@@114 T@U) ) (! (let (($generated@@115 ($generated@@69 (type $generated@@114))))
(= (type ($generated@@85 $generated@@113 $generated@@114)) $generated@@115))
 :pattern ( ($generated@@85 $generated@@113 $generated@@114))
))) (= ($generated@@1 $generated@@80) 13)) (forall (($generated@@116 T@U) ($generated@@117 T@U) ($generated@@118 T@U) ) (! (= (type ($generated@@86 $generated@@116 $generated@@117 $generated@@118)) $generated@@80)
 :pattern ( ($generated@@86 $generated@@116 $generated@@117 $generated@@118))
))) (forall (($generated@@119 T@U) ($generated@@120 T@U) ($generated@@121 T@U) ) (! (let (($generated@@122 ($generated@@69 (type $generated@@120))))
 (=> (= (type $generated@@121) $generated@@122) (= ($generated@@85 ($generated@@86 $generated@@119 $generated@@120 $generated@@121) $generated@@120) $generated@@121)))
 :weight 0
))) (and (forall (($generated@@123 T@U) ($generated@@124 T@U) ($generated@@125 T@U) ($generated@@126 T@U) ) (!  (or (= $generated@@125 $generated@@126) (= ($generated@@85 ($generated@@86 $generated@@124 $generated@@125 $generated@@123) $generated@@126) ($generated@@85 $generated@@124 $generated@@126)))
 :weight 0
)) (forall (($generated@@127 T@U) ($generated@@128 T@U) ($generated@@129 T@U) ($generated@@130 T@U) ) (!  (or true (= ($generated@@85 ($generated@@86 $generated@@128 $generated@@129 $generated@@127) $generated@@130) ($generated@@85 $generated@@128 $generated@@130)))
 :weight 0
)))) (forall (($generated@@131 Int) ) (! (= (type ($generated@@77 $generated@@131)) $generated@@66)
 :pattern ( ($generated@@77 $generated@@131))
))))
(assert (forall (($generated@@132 T@U) ($generated@@133 T@U) ) (!  (=> (and (= (type $generated@@132) $generated@@2) (= (type $generated@@133) ($generated@@78 $generated@@79 $generated@@80))) ($generated@@76 $generated@@132 ($generated@@77 0) $generated@@133))
 :pattern ( ($generated@@76 $generated@@132 ($generated@@77 0) $generated@@133))
)))
(assert (= (type $generated@@134) $generated@@66))
(assert (forall (($generated@@135 T@U) ($generated@@136 T@U) ) (!  (=> (and (= (type $generated@@135) $generated@@2) (= (type $generated@@136) ($generated@@78 $generated@@79 $generated@@80))) ($generated@@76 $generated@@135 $generated@@134 $generated@@136))
 :pattern ( ($generated@@76 $generated@@135 $generated@@134 $generated@@136))
)))
(assert (forall (($generated@@138 T@U) ) (!  (=> (= (type $generated@@138) $generated@@2) ($generated@@137 $generated@@138 ($generated@@77 0)))
 :pattern ( ($generated@@137 $generated@@138 ($generated@@77 0)))
)))
(assert  (and (= ($generated@@1 $generated@@141) 14) (forall (($generated@@142 T@U) ($generated@@143 T@U) ) (! (= (type ($generated@@140 $generated@@142 $generated@@143)) $generated@@66)
 :pattern ( ($generated@@140 $generated@@142 $generated@@143))
))))
(assert (forall (($generated@@144 T@U) ($generated@@145 T@U) ($generated@@146 T@U) ) (!  (=> (and (and (and (= (type $generated@@144) $generated@@66) (= (type $generated@@145) $generated@@66)) (= (type $generated@@146) $generated@@141)) ($generated@@137 $generated@@146 ($generated@@140 $generated@@144 $generated@@145))) ($generated@@139 $generated@@146))
 :pattern ( ($generated@@139 $generated@@146) ($generated@@137 $generated@@146 ($generated@@140 $generated@@144 $generated@@145)))
)))
(assert  (and (and (= ($generated@@1 $generated@@150) 15) (forall (($generated@@151 T@U) ) (! (= (type ($generated@@148 $generated@@151)) $generated@@150)
 :pattern ( ($generated@@148 $generated@@151))
))) (forall (($generated@@152 T@U) ) (! (= (type ($generated@@149 $generated@@152)) $generated@@150)
 :pattern ( ($generated@@149 $generated@@152))
))))
(assert (forall (($generated@@153 T@U) ($generated@@154 T@U) ) (!  (=> (and (and (= (type $generated@@153) $generated@@141) (= (type $generated@@154) $generated@@141)) true) (= ($generated@@147 $generated@@153 $generated@@154)  (and (= ($generated@@148 $generated@@153) ($generated@@148 $generated@@154)) (= ($generated@@149 $generated@@153) ($generated@@149 $generated@@154)))))
 :pattern ( ($generated@@147 $generated@@153 $generated@@154))
)))
(assert (forall (($generated@@157 T@U) ) (! (= (type ($generated@@155 $generated@@157)) $generated@@66)
 :pattern ( ($generated@@155 $generated@@157))
)))
(assert (forall (($generated@@158 T@U) ($generated@@159 T@U) ) (!  (=> (and (and (= (type $generated@@158) ($generated@@78 $generated@@150 $generated@@2)) (= (type $generated@@159) $generated@@66)) ($generated@@137 $generated@@158 ($generated@@155 $generated@@159))) ($generated@@156 $generated@@158))
 :pattern ( ($generated@@137 $generated@@158 ($generated@@155 $generated@@159)))
)))
(assert (= ($generated@@1 $generated@@162) 16))
(assert  (=> (<= 1 $generated@@160) (forall (($generated@@165 T@U) ($generated@@166 T@U) ($generated@@167 T@U) ($generated@@168 T@U) ($generated@@169 Int) ) (!  (=> (and (and (and (and (= (type $generated@@165) $generated@@66) (= (type $generated@@166) $generated@@66)) (= (type $generated@@167) $generated@@66)) (= (type $generated@@168) $generated@@162)) (or ($generated@@163 $generated@@165 $generated@@166 $generated@@167 $generated@@169) (and (not (= 1 $generated@@160)) (<= ($generated@@164 0) $generated@@169)))) true)
 :pattern ( ($generated@@161 $generated@@165 $generated@@166 $generated@@167 $generated@@168 $generated@@169))
))))
(assert  (and (and (and (and (and (and (and (forall (($generated@@176 T@T) ($generated@@177 T@T) ) (= ($generated@@1 ($generated@@172 $generated@@176 $generated@@177)) 17)) (forall (($generated@@178 T@T) ($generated@@179 T@T) ) (! (= ($generated@@173 ($generated@@172 $generated@@178 $generated@@179)) $generated@@178)
 :pattern ( ($generated@@172 $generated@@178 $generated@@179))
))) (forall (($generated@@180 T@T) ($generated@@181 T@T) ) (! (= ($generated@@174 ($generated@@172 $generated@@180 $generated@@181)) $generated@@181)
 :pattern ( ($generated@@172 $generated@@180 $generated@@181))
))) (forall (($generated@@182 T@U) ($generated@@183 T@U) ($generated@@184 T@U) ) (! (let (($generated@@185 ($generated@@174 (type $generated@@182))))
(= (type ($generated@@170 $generated@@182 $generated@@183 $generated@@184)) $generated@@185))
 :pattern ( ($generated@@170 $generated@@182 $generated@@183 $generated@@184))
))) (forall (($generated@@186 T@U) ($generated@@187 T@U) ($generated@@188 T@U) ($generated@@189 T@U) ) (! (let (($generated@@190 (type $generated@@189)))
(let (($generated@@191 (type $generated@@187)))
(= (type ($generated@@175 $generated@@186 $generated@@187 $generated@@188 $generated@@189)) ($generated@@172 $generated@@191 $generated@@190))))
 :pattern ( ($generated@@175 $generated@@186 $generated@@187 $generated@@188 $generated@@189))
))) (forall (($generated@@192 T@U) ($generated@@193 T@U) ($generated@@194 T@U) ($generated@@195 T@U) ) (! (let (($generated@@196 ($generated@@174 (type $generated@@192))))
 (=> (= (type $generated@@195) $generated@@196) (= ($generated@@170 ($generated@@175 $generated@@192 $generated@@193 $generated@@194 $generated@@195) $generated@@193 $generated@@194) $generated@@195)))
 :weight 0
))) (and (and (forall (($generated@@197 T@U) ($generated@@198 T@U) ($generated@@199 T@U) ($generated@@200 T@U) ($generated@@201 T@U) ($generated@@202 T@U) ) (!  (or (= $generated@@199 $generated@@201) (= ($generated@@170 ($generated@@175 $generated@@198 $generated@@199 $generated@@200 $generated@@197) $generated@@201 $generated@@202) ($generated@@170 $generated@@198 $generated@@201 $generated@@202)))
 :weight 0
)) (forall (($generated@@203 T@U) ($generated@@204 T@U) ($generated@@205 T@U) ($generated@@206 T@U) ($generated@@207 T@U) ($generated@@208 T@U) ) (!  (or (= $generated@@206 $generated@@208) (= ($generated@@170 ($generated@@175 $generated@@204 $generated@@205 $generated@@206 $generated@@203) $generated@@207 $generated@@208) ($generated@@170 $generated@@204 $generated@@207 $generated@@208)))
 :weight 0
))) (forall (($generated@@209 T@U) ($generated@@210 T@U) ($generated@@211 T@U) ($generated@@212 T@U) ($generated@@213 T@U) ($generated@@214 T@U) ) (!  (or true (= ($generated@@170 ($generated@@175 $generated@@210 $generated@@211 $generated@@212 $generated@@209) $generated@@213 $generated@@214) ($generated@@170 $generated@@210 $generated@@213 $generated@@214)))
 :weight 0
)))) (forall (($generated@@215 T@U) ($generated@@216 T@U) ($generated@@217 T@U) ($generated@@218 Bool) ) (! (= (type ($generated@@171 $generated@@215 $generated@@216 $generated@@217 $generated@@218)) ($generated@@172 $generated@@79 $generated@@4))
 :pattern ( ($generated@@171 $generated@@215 $generated@@216 $generated@@217 $generated@@218))
))))
(assert (forall (($generated@@219 T@U) ($generated@@220 T@U) ($generated@@221 T@U) ($generated@@222 Bool) ($generated@@223 T@U) ($generated@@224 T@U) ) (! (let (($generated@@225 ($generated@@69 (type $generated@@224))))
 (=> (and (and (and (and (= (type $generated@@219) $generated@@79) (= (type $generated@@220) ($generated@@78 $generated@@79 $generated@@80))) (= (type $generated@@221) ($generated@@68 $generated@@4))) (= (type $generated@@223) $generated@@79)) (= (type $generated@@224) ($generated@@68 $generated@@225))) (= ($generated@@0 ($generated@@170 ($generated@@171 $generated@@219 $generated@@220 $generated@@221 $generated@@222) $generated@@223 $generated@@224))  (=> (and (not (= $generated@@223 $generated@@219)) ($generated@@0 ($generated@@85 ($generated@@83 $generated@@220 $generated@@223) $generated@@221))) $generated@@222))))
 :pattern ( ($generated@@170 ($generated@@171 $generated@@219 $generated@@220 $generated@@221 $generated@@222) $generated@@223 $generated@@224))
)))
(assert (forall (($generated@@227 T@U) ) (! (= (type ($generated@@226 $generated@@227)) $generated@@162)
 :pattern ( ($generated@@226 $generated@@227))
)))
(assert  (=> (<= 1 $generated@@160) (forall (($generated@@228 T@U) ($generated@@229 T@U) ($generated@@230 T@U) ($generated@@231 T@U) ($generated@@232 Int) ) (!  (=> (and (and (and (and (= (type $generated@@228) $generated@@66) (= (type $generated@@229) $generated@@66)) (= (type $generated@@230) $generated@@66)) (= (type $generated@@231) $generated@@162)) (or ($generated@@163 $generated@@228 $generated@@229 $generated@@230 $generated@@232) (and (not (= 1 $generated@@160)) (<= ($generated@@164 0) $generated@@232)))) (and (=> (< 0 $generated@@232) ($generated@@163 $generated@@229 $generated@@228 $generated@@230 (- $generated@@232 1))) (= ($generated@@161 $generated@@228 $generated@@229 $generated@@230 ($generated@@226 $generated@@231) $generated@@232)  (=> (< 0 $generated@@232) ($generated@@161 $generated@@229 $generated@@228 $generated@@230 $generated@@231 (- $generated@@232 1))))))
 :pattern ( ($generated@@161 $generated@@228 $generated@@229 $generated@@230 ($generated@@226 $generated@@231) $generated@@232))
))))
(assert (forall (($generated@@235 T@U) ($generated@@236 T@U) ) (! (= (type ($generated@@233 $generated@@235 $generated@@236)) $generated@@141)
 :pattern ( ($generated@@233 $generated@@235 $generated@@236))
)))
(assert (forall (($generated@@237 T@U) ($generated@@238 T@U) ($generated@@239 T@U) ($generated@@240 T@U) ) (!  (=> (and (and (and (= (type $generated@@237) $generated@@66) (= (type $generated@@238) $generated@@66)) (= (type $generated@@239) $generated@@150)) (= (type $generated@@240) $generated@@150)) (= ($generated@@137 ($generated@@233 $generated@@239 $generated@@240) ($generated@@140 $generated@@237 $generated@@238))  (and ($generated@@234 $generated@@239 $generated@@237) ($generated@@234 $generated@@240 $generated@@238))))
 :pattern ( ($generated@@137 ($generated@@233 $generated@@239 $generated@@240) ($generated@@140 $generated@@237 $generated@@238)))
)))
(assert (forall (($generated@@241 T@U) ($generated@@242 T@U) ) (!  (=> (and (= (type $generated@@241) $generated@@141) (= (type $generated@@242) $generated@@141)) (= ($generated@@147 $generated@@241 $generated@@242) (= $generated@@241 $generated@@242)))
 :pattern ( ($generated@@147 $generated@@241 $generated@@242))
)))
(assert (forall (($generated@@244 T@U) ) (! (= (type ($generated@@243 $generated@@244)) $generated@@66)
 :pattern ( ($generated@@243 $generated@@244))
)))
(assert (forall (($generated@@245 T@U) ($generated@@246 T@U) ) (!  (=> (and (= (type $generated@@245) ($generated@@78 $generated@@150 $generated@@4)) (= (type $generated@@246) $generated@@66)) (= ($generated@@137 $generated@@245 ($generated@@243 $generated@@246)) (forall (($generated@@247 T@U) ) (!  (=> (and (= (type $generated@@247) $generated@@150) ($generated@@0 ($generated@@83 $generated@@245 $generated@@247))) ($generated@@234 $generated@@247 $generated@@246))
 :pattern ( ($generated@@83 $generated@@245 $generated@@247))
))))
 :pattern ( ($generated@@137 $generated@@245 ($generated@@243 $generated@@246)))
)))
(assert (forall (($generated@@249 T@U) ) (! (= (type ($generated@@248 $generated@@249)) $generated@@66)
 :pattern ( ($generated@@248 $generated@@249))
)))
(assert (forall (($generated@@250 T@U) ($generated@@251 T@U) ) (!  (=> (and (= (type $generated@@250) ($generated@@78 $generated@@150 $generated@@4)) (= (type $generated@@251) $generated@@66)) (= ($generated@@137 $generated@@250 ($generated@@248 $generated@@251)) (forall (($generated@@252 T@U) ) (!  (=> (and (= (type $generated@@252) $generated@@150) ($generated@@0 ($generated@@83 $generated@@250 $generated@@252))) ($generated@@234 $generated@@252 $generated@@251))
 :pattern ( ($generated@@83 $generated@@250 $generated@@252))
))))
 :pattern ( ($generated@@137 $generated@@250 ($generated@@248 $generated@@251)))
)))
(assert (forall (($generated@@253 Int) ) (! (= ($generated@@164 $generated@@253) $generated@@253)
 :pattern ( ($generated@@164 $generated@@253))
)))
(assert (forall (($generated@@255 T@U) ) (! (let (($generated@@256 (type $generated@@255)))
(= (type ($generated@@254 $generated@@255)) $generated@@256))
 :pattern ( ($generated@@254 $generated@@255))
)))
(assert (forall (($generated@@257 T@U) ) (! (= ($generated@@254 $generated@@257) $generated@@257)
 :pattern ( ($generated@@254 $generated@@257))
)))
(assert (forall (($generated@@260 T@U) ($generated@@261 T@U) ($generated@@262 T@U) ($generated@@263 T@U) ($generated@@264 T@U) ) (!  (=> (and (and (and (and (and (= (type $generated@@260) $generated@@66) (= (type $generated@@261) $generated@@66)) (= (type $generated@@262) $generated@@150)) (= (type $generated@@263) $generated@@150)) (= (type $generated@@264) ($generated@@78 $generated@@79 $generated@@80))) ($generated@@258 $generated@@264)) (= ($generated@@76 ($generated@@233 $generated@@262 $generated@@263) ($generated@@140 $generated@@260 $generated@@261) $generated@@264)  (and ($generated@@259 $generated@@262 $generated@@260 $generated@@264) ($generated@@259 $generated@@263 $generated@@261 $generated@@264))))
 :pattern ( ($generated@@76 ($generated@@233 $generated@@262 $generated@@263) ($generated@@140 $generated@@260 $generated@@261) $generated@@264))
)))
(assert (forall (($generated@@266 T@U) ) (! (= (type ($generated@@265 $generated@@266)) $generated@@70)
 :pattern ( ($generated@@265 $generated@@266))
)))
(assert (forall (($generated@@267 T@U) ) (!  (=> (= (type $generated@@267) $generated@@141) (= ($generated@@139 $generated@@267) (= ($generated@@265 $generated@@267) $generated@@62)))
 :pattern ( ($generated@@139 $generated@@267))
)))
(assert  (=> (<= 1 $generated@@160) (forall (($generated@@268 T@U) ($generated@@269 T@U) ($generated@@270 T@U) ($generated@@271 T@U) ($generated@@272 Int) ) (!  (=> (and (and (and (and (= (type $generated@@268) $generated@@66) (= (type $generated@@269) $generated@@66)) (= (type $generated@@270) $generated@@66)) (= (type $generated@@271) $generated@@162)) (or ($generated@@163 $generated@@268 $generated@@269 $generated@@270 ($generated@@164 $generated@@272)) (and (not (= 1 $generated@@160)) (<= ($generated@@164 0) $generated@@272)))) (and (=> (< 0 $generated@@272) ($generated@@163 $generated@@269 $generated@@268 $generated@@270 (- $generated@@272 1))) (= ($generated@@161 $generated@@268 $generated@@269 $generated@@270 ($generated@@226 $generated@@271) ($generated@@164 $generated@@272))  (=> (< 0 $generated@@272) ($generated@@161 $generated@@269 $generated@@268 $generated@@270 ($generated@@226 $generated@@271) (- $generated@@272 1))))))
 :weight 3
 :pattern ( ($generated@@161 $generated@@268 $generated@@269 $generated@@270 ($generated@@226 $generated@@271) ($generated@@164 $generated@@272)))
))))
(assert (forall (($generated@@273 T@U) ) (!  (=> (and (= (type $generated@@273) $generated@@141) ($generated@@139 $generated@@273)) (exists (($generated@@274 T@U) ($generated@@275 T@U) ) (!  (and (and (= (type $generated@@274) $generated@@150) (= (type $generated@@275) $generated@@150)) (= $generated@@273 ($generated@@233 $generated@@274 $generated@@275)))
 :no-pattern (type $generated@@274)
 :no-pattern (type $generated@@275)
 :no-pattern ($generated $generated@@274)
 :no-pattern ($generated@@0 $generated@@274)
 :no-pattern ($generated $generated@@275)
 :no-pattern ($generated@@0 $generated@@275)
)))
 :pattern ( ($generated@@139 $generated@@273))
)))
(assert  (and (and (forall (($generated@@280 T@T) ) (= ($generated@@1 ($generated@@278 $generated@@280)) 18)) (forall (($generated@@281 T@T) ) (! (= ($generated@@279 ($generated@@278 $generated@@281)) $generated@@281)
 :pattern ( ($generated@@278 $generated@@281))
))) (forall (($generated@@282 T@T) ) (! (= (type ($generated@@276 $generated@@282)) ($generated@@278 $generated@@282))
 :pattern ( ($generated@@276 $generated@@282))
))))
(assert (forall (($generated@@283 T@T) ) (! (= ($generated@@277 ($generated@@276 $generated@@283)) 0)
 :pattern ( ($generated@@276 $generated@@283))
)))
(assert (forall (($generated@@284 T@U) ) (!  (=> (= (type $generated@@284) $generated@@2) (= ($generated@@137 $generated@@284 $generated@@134) (<= ($generated@@164 0) ($generated $generated@@284))))
 :pattern ( ($generated@@137 $generated@@284 $generated@@134))
)))
(assert (forall (($generated@@286 T@U) ) (! (= (type ($generated@@285 $generated@@286)) $generated@@150)
 :pattern ( ($generated@@285 $generated@@286))
)))
(assert (forall (($generated@@287 T@U) ($generated@@288 T@U) ($generated@@289 T@U) ) (!  (=> (and (= (type $generated@@288) $generated@@66) (= (type $generated@@289) ($generated@@78 $generated@@79 $generated@@80))) (= ($generated@@259 ($generated@@285 $generated@@287) $generated@@288 $generated@@289) ($generated@@76 $generated@@287 $generated@@288 $generated@@289)))
 :pattern ( ($generated@@259 ($generated@@285 $generated@@287) $generated@@288 $generated@@289))
)))
(assert (forall (($generated@@292 T@T) ) (! (= (type ($generated@@291 $generated@@292)) ($generated@@78 $generated@@292 $generated@@2))
 :pattern ( ($generated@@291 $generated@@292))
)))
(assert (forall (($generated@@293 T@U) ) (! (let (($generated@@294 ($generated@@81 (type $generated@@293))))
 (=> (= (type $generated@@293) ($generated@@78 $generated@@294 $generated@@2)) (and (= (= ($generated@@290 $generated@@293) 0) (= $generated@@293 ($generated@@291 $generated@@294))) (=> (not (= ($generated@@290 $generated@@293) 0)) (exists (($generated@@295 T@U) ) (!  (and (= (type $generated@@295) $generated@@294) (< 0 ($generated ($generated@@83 $generated@@293 $generated@@295))))
 :no-pattern (type $generated@@295)
 :no-pattern ($generated $generated@@295)
 :no-pattern ($generated@@0 $generated@@295)
))))))
 :pattern ( ($generated@@290 $generated@@293))
)))
(assert  (and (and (and (and (forall (($generated@@301 T@T) ($generated@@302 T@T) ) (= ($generated@@1 ($generated@@298 $generated@@301 $generated@@302)) 19)) (forall (($generated@@303 T@T) ($generated@@304 T@T) ) (! (= ($generated@@299 ($generated@@298 $generated@@303 $generated@@304)) $generated@@303)
 :pattern ( ($generated@@298 $generated@@303 $generated@@304))
))) (forall (($generated@@305 T@T) ($generated@@306 T@T) ) (! (= ($generated@@300 ($generated@@298 $generated@@305 $generated@@306)) $generated@@306)
 :pattern ( ($generated@@298 $generated@@305 $generated@@306))
))) (forall (($generated@@307 T@U) ) (! (let (($generated@@308 ($generated@@299 (type $generated@@307))))
(= (type ($generated@@296 $generated@@307)) ($generated@@78 $generated@@308 $generated@@4)))
 :pattern ( ($generated@@296 $generated@@307))
))) (forall (($generated@@309 T@T) ($generated@@310 T@T) ) (! (= (type ($generated@@297 $generated@@309 $generated@@310)) ($generated@@298 $generated@@309 $generated@@310))
 :pattern ( ($generated@@297 $generated@@309 $generated@@310))
))))
(assert (forall (($generated@@311 T@U) ($generated@@312 T@T) ) (! (let (($generated@@313 (type $generated@@311)))
 (not ($generated@@0 ($generated@@83 ($generated@@296 ($generated@@297 $generated@@313 $generated@@312)) $generated@@311))))
 :pattern ( (let (($generated@@313 (type $generated@@311)))
($generated@@83 ($generated@@296 ($generated@@297 $generated@@313 $generated@@312)) $generated@@311)))
)))
(assert  (and (and (and (and (forall (($generated@@319 T@T) ($generated@@320 T@T) ) (= ($generated@@1 ($generated@@316 $generated@@319 $generated@@320)) 20)) (forall (($generated@@321 T@T) ($generated@@322 T@T) ) (! (= ($generated@@317 ($generated@@316 $generated@@321 $generated@@322)) $generated@@321)
 :pattern ( ($generated@@316 $generated@@321 $generated@@322))
))) (forall (($generated@@323 T@T) ($generated@@324 T@T) ) (! (= ($generated@@318 ($generated@@316 $generated@@323 $generated@@324)) $generated@@324)
 :pattern ( ($generated@@316 $generated@@323 $generated@@324))
))) (forall (($generated@@325 T@U) ) (! (let (($generated@@326 ($generated@@317 (type $generated@@325))))
(= (type ($generated@@314 $generated@@325)) ($generated@@78 $generated@@326 $generated@@4)))
 :pattern ( ($generated@@314 $generated@@325))
))) (forall (($generated@@327 T@T) ($generated@@328 T@T) ) (! (= (type ($generated@@315 $generated@@327 $generated@@328)) ($generated@@316 $generated@@327 $generated@@328))
 :pattern ( ($generated@@315 $generated@@327 $generated@@328))
))))
(assert (forall (($generated@@329 T@U) ($generated@@330 T@T) ) (! (let (($generated@@331 (type $generated@@329)))
 (not ($generated@@0 ($generated@@83 ($generated@@314 ($generated@@315 $generated@@331 $generated@@330)) $generated@@329))))
 :pattern ( (let (($generated@@331 (type $generated@@329)))
($generated@@83 ($generated@@314 ($generated@@315 $generated@@331 $generated@@330)) $generated@@329)))
)))
(assert  (and (forall (($generated@@334 T@U) ) (! (= (type ($generated@@332 $generated@@334)) $generated@@162)
 :pattern ( ($generated@@332 $generated@@334))
)) (= (type $generated@@333) $generated@@162)))
(assert (forall (($generated@@335 T@U) ($generated@@336 T@U) ($generated@@337 T@U) ($generated@@338 T@U) ($generated@@339 Int) ) (!  (=> (and (and (and (= (type $generated@@335) $generated@@66) (= (type $generated@@336) $generated@@66)) (= (type $generated@@337) $generated@@66)) (= (type $generated@@338) $generated@@162)) (= ($generated@@161 $generated@@335 $generated@@336 $generated@@337 $generated@@338 $generated@@339) ($generated@@161 $generated@@335 $generated@@336 $generated@@337 $generated@@333 $generated@@339)))
 :pattern ( ($generated@@161 $generated@@335 $generated@@336 $generated@@337 ($generated@@332 $generated@@338) $generated@@339))
)))
(assert (forall (($generated@@340 T@U) ) (! (let (($generated@@341 ($generated@@81 (type $generated@@340))))
 (=> (= (type $generated@@340) ($generated@@78 $generated@@341 $generated@@2)) (= ($generated@@156 $generated@@340) (forall (($generated@@342 T@U) ) (!  (=> (= (type $generated@@342) $generated@@341) (and (<= 0 ($generated ($generated@@83 $generated@@340 $generated@@342))) (<= ($generated ($generated@@83 $generated@@340 $generated@@342)) ($generated@@290 $generated@@340))))
 :pattern ( ($generated@@83 $generated@@340 $generated@@342))
)))))
 :pattern ( ($generated@@156 $generated@@340))
)))
(assert  (=> (<= 1 $generated@@160) (forall (($generated@@343 T@U) ($generated@@344 T@U) ($generated@@345 T@U) ($generated@@346 T@U) ($generated@@347 Int) ) (!  (=> (and (and (and (and (= (type $generated@@343) $generated@@66) (= (type $generated@@344) $generated@@66)) (= (type $generated@@345) $generated@@66)) (= (type $generated@@346) $generated@@162)) (= $generated@@347 0)) ($generated@@161 $generated@@343 $generated@@344 $generated@@345 $generated@@346 $generated@@347))
 :pattern ( ($generated@@161 $generated@@343 $generated@@344 $generated@@345 $generated@@346 $generated@@347))
))))
(assert (forall (($generated@@349 T@T) ($generated@@350 T@U) ) (! (= (type ($generated@@348 $generated@@349 $generated@@350)) $generated@@349)
 :pattern ( ($generated@@348 $generated@@349 $generated@@350))
)))
(assert (forall (($generated@@351 T@U) ) (!  (=> (and (= (type $generated@@351) $generated@@150) ($generated@@234 $generated@@351 $generated@@134)) (and (= ($generated@@285 ($generated@@348 $generated@@2 $generated@@351)) $generated@@351) ($generated@@137 ($generated@@348 $generated@@2 $generated@@351) $generated@@134)))
 :pattern ( ($generated@@234 $generated@@351 $generated@@134))
)))
(assert (forall (($generated@@352 T@U) ) (! (let (($generated@@353 ($generated@@300 (type $generated@@352))))
(let (($generated@@354 ($generated@@299 (type $generated@@352))))
 (=> (= (type $generated@@352) ($generated@@298 $generated@@354 $generated@@353)) (or (= $generated@@352 ($generated@@297 $generated@@354 $generated@@353)) (exists (($generated@@355 T@U) ) (!  (and (= (type $generated@@355) $generated@@354) ($generated@@0 ($generated@@83 ($generated@@296 $generated@@352) $generated@@355)))
 :no-pattern (type $generated@@355)
 :no-pattern ($generated $generated@@355)
 :no-pattern ($generated@@0 $generated@@355)
))))))
 :pattern ( ($generated@@296 $generated@@352))
)))
(assert (forall (($generated@@357 T@U) ) (! (let (($generated@@358 ($generated@@300 (type $generated@@357))))
(= (type ($generated@@356 $generated@@357)) ($generated@@78 $generated@@358 $generated@@4)))
 :pattern ( ($generated@@356 $generated@@357))
)))
(assert (forall (($generated@@359 T@U) ) (! (let (($generated@@360 ($generated@@300 (type $generated@@359))))
(let (($generated@@361 ($generated@@299 (type $generated@@359))))
 (=> (= (type $generated@@359) ($generated@@298 $generated@@361 $generated@@360)) (or (= $generated@@359 ($generated@@297 $generated@@361 $generated@@360)) (exists (($generated@@362 T@U) ) (!  (and (= (type $generated@@362) $generated@@360) ($generated@@0 ($generated@@83 ($generated@@356 $generated@@359) $generated@@362)))
 :no-pattern (type $generated@@362)
 :no-pattern ($generated $generated@@362)
 :no-pattern ($generated@@0 $generated@@362)
))))))
 :pattern ( ($generated@@356 $generated@@359))
)))
(assert (forall (($generated@@363 T@U) ) (! (let (($generated@@364 ($generated@@318 (type $generated@@363))))
(let (($generated@@365 ($generated@@317 (type $generated@@363))))
 (=> (= (type $generated@@363) ($generated@@316 $generated@@365 $generated@@364)) (or (= $generated@@363 ($generated@@315 $generated@@365 $generated@@364)) (exists (($generated@@366 T@U) ) (!  (and (= (type $generated@@366) $generated@@365) ($generated@@0 ($generated@@83 ($generated@@314 $generated@@363) $generated@@366)))
 :no-pattern (type $generated@@366)
 :no-pattern ($generated $generated@@366)
 :no-pattern ($generated@@0 $generated@@366)
))))))
 :pattern ( ($generated@@314 $generated@@363))
)))
(assert (forall (($generated@@368 T@U) ) (! (let (($generated@@369 ($generated@@318 (type $generated@@368))))
(= (type ($generated@@367 $generated@@368)) ($generated@@78 $generated@@369 $generated@@4)))
 :pattern ( ($generated@@367 $generated@@368))
)))
(assert (forall (($generated@@370 T@U) ) (! (let (($generated@@371 ($generated@@318 (type $generated@@370))))
(let (($generated@@372 ($generated@@317 (type $generated@@370))))
 (=> (= (type $generated@@370) ($generated@@316 $generated@@372 $generated@@371)) (or (= $generated@@370 ($generated@@315 $generated@@372 $generated@@371)) (exists (($generated@@373 T@U) ) (!  (and (= (type $generated@@373) $generated@@371) ($generated@@0 ($generated@@83 ($generated@@367 $generated@@370) $generated@@373)))
 :no-pattern (type $generated@@373)
 :no-pattern ($generated $generated@@373)
 :no-pattern ($generated@@0 $generated@@373)
))))))
 :pattern ( ($generated@@367 $generated@@370))
)))
(assert (forall (($generated@@374 T@U) ($generated@@375 T@U) ($generated@@376 T@U) ($generated@@377 T@U) ($generated@@378 Int) ) (!  (=> (and (and (and (= (type $generated@@374) $generated@@66) (= (type $generated@@375) $generated@@66)) (= (type $generated@@376) $generated@@66)) (= (type $generated@@377) $generated@@162)) (= ($generated@@161 $generated@@374 $generated@@375 $generated@@376 ($generated@@226 $generated@@377) $generated@@378) ($generated@@161 $generated@@374 $generated@@375 $generated@@376 $generated@@377 $generated@@378)))
 :pattern ( ($generated@@161 $generated@@374 $generated@@375 $generated@@376 ($generated@@226 $generated@@377) $generated@@378))
)))
(assert (forall (($generated@@379 T@U) ($generated@@380 T@U) ) (!  (=> (and (= (type $generated@@379) ($generated@@78 $generated@@150 $generated@@2)) (= (type $generated@@380) $generated@@66)) (= ($generated@@137 $generated@@379 ($generated@@155 $generated@@380)) (forall (($generated@@381 T@U) ) (!  (=> (and (= (type $generated@@381) $generated@@150) (< 0 ($generated ($generated@@83 $generated@@379 $generated@@381)))) ($generated@@234 $generated@@381 $generated@@380))
 :pattern ( ($generated@@83 $generated@@379 $generated@@381))
))))
 :pattern ( ($generated@@137 $generated@@379 ($generated@@155 $generated@@380)))
)))
(assert (forall (($generated@@382 T@U) ($generated@@383 T@U) ($generated@@384 T@U) ) (!  (=> (and (and (= (type $generated@@382) ($generated@@78 $generated@@150 $generated@@4)) (= (type $generated@@383) $generated@@66)) (= (type $generated@@384) ($generated@@78 $generated@@79 $generated@@80))) (= ($generated@@76 $generated@@382 ($generated@@243 $generated@@383) $generated@@384) (forall (($generated@@385 T@U) ) (!  (=> (and (= (type $generated@@385) $generated@@150) ($generated@@0 ($generated@@83 $generated@@382 $generated@@385))) ($generated@@259 $generated@@385 $generated@@383 $generated@@384))
 :pattern ( ($generated@@83 $generated@@382 $generated@@385))
))))
 :pattern ( ($generated@@76 $generated@@382 ($generated@@243 $generated@@383) $generated@@384))
)))
(assert (forall (($generated@@386 T@U) ($generated@@387 T@U) ($generated@@388 T@U) ) (!  (=> (and (and (= (type $generated@@386) ($generated@@78 $generated@@150 $generated@@4)) (= (type $generated@@387) $generated@@66)) (= (type $generated@@388) ($generated@@78 $generated@@79 $generated@@80))) (= ($generated@@76 $generated@@386 ($generated@@248 $generated@@387) $generated@@388) (forall (($generated@@389 T@U) ) (!  (=> (and (= (type $generated@@389) $generated@@150) ($generated@@0 ($generated@@83 $generated@@386 $generated@@389))) ($generated@@259 $generated@@389 $generated@@387 $generated@@388))
 :pattern ( ($generated@@83 $generated@@386 $generated@@389))
))))
 :pattern ( ($generated@@76 $generated@@386 ($generated@@248 $generated@@387) $generated@@388))
)))
(assert (forall (($generated@@390 T@U) ) (! (let (($generated@@391 (type $generated@@390)))
(= ($generated ($generated@@83 ($generated@@291 $generated@@391) $generated@@390)) 0))
 :pattern ( (let (($generated@@391 (type $generated@@390)))
($generated@@83 ($generated@@291 $generated@@391) $generated@@390)))
)))
(assert  (and (forall (($generated@@394 T@U) ) (! (= (type ($generated@@392 $generated@@394)) ($generated@@78 $generated@@150 $generated@@4))
 :pattern ( ($generated@@392 $generated@@394))
)) (forall (($generated@@395 T@U) ) (! (let (($generated@@396 ($generated@@300 (type $generated@@395))))
(let (($generated@@397 ($generated@@299 (type $generated@@395))))
(= (type ($generated@@393 $generated@@395)) ($generated@@78 $generated@@397 $generated@@396))))
 :pattern ( ($generated@@393 $generated@@395))
))))
(assert (forall (($generated@@398 T@U) ($generated@@399 T@U) ) (!  (=> (and (= (type $generated@@398) ($generated@@298 $generated@@150 $generated@@150)) (= (type $generated@@399) $generated@@150)) (= ($generated@@0 ($generated@@83 ($generated@@392 $generated@@398) $generated@@399))  (and ($generated@@0 ($generated@@83 ($generated@@296 $generated@@398) ($generated@@148 ($generated@@348 $generated@@141 $generated@@399)))) (= ($generated@@83 ($generated@@393 $generated@@398) ($generated@@148 ($generated@@348 $generated@@141 $generated@@399))) ($generated@@149 ($generated@@348 $generated@@141 $generated@@399))))))
 :pattern ( ($generated@@83 ($generated@@392 $generated@@398) $generated@@399))
)))
(assert  (and (forall (($generated@@402 T@U) ) (! (= (type ($generated@@400 $generated@@402)) ($generated@@78 $generated@@150 $generated@@4))
 :pattern ( ($generated@@400 $generated@@402))
)) (forall (($generated@@403 T@U) ) (! (let (($generated@@404 ($generated@@318 (type $generated@@403))))
(let (($generated@@405 ($generated@@317 (type $generated@@403))))
(= (type ($generated@@401 $generated@@403)) ($generated@@78 $generated@@405 $generated@@404))))
 :pattern ( ($generated@@401 $generated@@403))
))))
(assert (forall (($generated@@406 T@U) ($generated@@407 T@U) ) (!  (=> (and (= (type $generated@@406) ($generated@@316 $generated@@150 $generated@@150)) (= (type $generated@@407) $generated@@150)) (= ($generated@@0 ($generated@@83 ($generated@@400 $generated@@406) $generated@@407))  (and ($generated@@0 ($generated@@83 ($generated@@314 $generated@@406) ($generated@@148 ($generated@@348 $generated@@141 $generated@@407)))) (= ($generated@@83 ($generated@@401 $generated@@406) ($generated@@148 ($generated@@348 $generated@@141 $generated@@407))) ($generated@@149 ($generated@@348 $generated@@141 $generated@@407))))))
 :pattern ( ($generated@@83 ($generated@@400 $generated@@406) $generated@@407))
)))
(assert (forall (($generated@@408 T@U) ($generated@@409 T@U) ) (! (let (($generated@@410 (type $generated@@409)))
(let (($generated@@411 ($generated@@299 (type $generated@@408))))
 (=> (= (type $generated@@408) ($generated@@298 $generated@@411 $generated@@410)) (= ($generated@@0 ($generated@@83 ($generated@@356 $generated@@408) $generated@@409)) (exists (($generated@@412 T@U) ) (!  (and (= (type $generated@@412) $generated@@411) (and ($generated@@0 ($generated@@83 ($generated@@296 $generated@@408) $generated@@412)) (= $generated@@409 ($generated@@83 ($generated@@393 $generated@@408) $generated@@412))))
 :pattern ( ($generated@@83 ($generated@@296 $generated@@408) $generated@@412))
 :pattern ( ($generated@@83 ($generated@@393 $generated@@408) $generated@@412))
))))))
 :pattern ( ($generated@@83 ($generated@@356 $generated@@408) $generated@@409))
)))
(assert (forall (($generated@@413 T@U) ($generated@@414 T@U) ) (! (let (($generated@@415 (type $generated@@414)))
(let (($generated@@416 ($generated@@317 (type $generated@@413))))
 (=> (= (type $generated@@413) ($generated@@316 $generated@@416 $generated@@415)) (= ($generated@@0 ($generated@@83 ($generated@@367 $generated@@413) $generated@@414)) (exists (($generated@@417 T@U) ) (!  (and (= (type $generated@@417) $generated@@416) (and ($generated@@0 ($generated@@83 ($generated@@314 $generated@@413) $generated@@417)) (= $generated@@414 ($generated@@83 ($generated@@401 $generated@@413) $generated@@417))))
 :pattern ( ($generated@@83 ($generated@@314 $generated@@413) $generated@@417))
 :pattern ( ($generated@@83 ($generated@@401 $generated@@413) $generated@@417))
))))))
 :pattern ( ($generated@@83 ($generated@@367 $generated@@413) $generated@@414))
)))
(assert (forall (($generated@@419 T@U) ($generated@@420 T@U) ) (! (= (type ($generated@@418 $generated@@419 $generated@@420)) $generated@@66)
 :pattern ( ($generated@@418 $generated@@419 $generated@@420))
)))
(assert (forall (($generated@@421 T@U) ($generated@@422 T@U) ($generated@@423 T@U) ($generated@@424 T@U) ) (!  (=> (and (and (and (= (type $generated@@421) ($generated@@298 $generated@@150 $generated@@150)) (= (type $generated@@422) $generated@@66)) (= (type $generated@@423) $generated@@66)) (= (type $generated@@424) ($generated@@78 $generated@@79 $generated@@80))) (= ($generated@@76 $generated@@421 ($generated@@418 $generated@@422 $generated@@423) $generated@@424) (forall (($generated@@425 T@U) ) (!  (=> (and (= (type $generated@@425) $generated@@150) ($generated@@0 ($generated@@83 ($generated@@296 $generated@@421) $generated@@425))) (and ($generated@@259 ($generated@@83 ($generated@@393 $generated@@421) $generated@@425) $generated@@423 $generated@@424) ($generated@@259 $generated@@425 $generated@@422 $generated@@424)))
 :pattern ( ($generated@@83 ($generated@@393 $generated@@421) $generated@@425))
 :pattern ( ($generated@@83 ($generated@@296 $generated@@421) $generated@@425))
))))
 :pattern ( ($generated@@76 $generated@@421 ($generated@@418 $generated@@422 $generated@@423) $generated@@424))
)))
(assert (forall (($generated@@427 T@U) ($generated@@428 T@U) ) (! (= (type ($generated@@426 $generated@@427 $generated@@428)) $generated@@66)
 :pattern ( ($generated@@426 $generated@@427 $generated@@428))
)))
(assert (forall (($generated@@429 T@U) ($generated@@430 T@U) ($generated@@431 T@U) ($generated@@432 T@U) ) (!  (=> (and (and (and (= (type $generated@@429) ($generated@@316 $generated@@150 $generated@@150)) (= (type $generated@@430) $generated@@66)) (= (type $generated@@431) $generated@@66)) (= (type $generated@@432) ($generated@@78 $generated@@79 $generated@@80))) (= ($generated@@76 $generated@@429 ($generated@@426 $generated@@430 $generated@@431) $generated@@432) (forall (($generated@@433 T@U) ) (!  (=> (and (= (type $generated@@433) $generated@@150) ($generated@@0 ($generated@@83 ($generated@@314 $generated@@429) $generated@@433))) (and ($generated@@259 ($generated@@83 ($generated@@401 $generated@@429) $generated@@433) $generated@@431 $generated@@432) ($generated@@259 $generated@@433 $generated@@430 $generated@@432)))
 :pattern ( ($generated@@83 ($generated@@401 $generated@@429) $generated@@433))
 :pattern ( ($generated@@83 ($generated@@314 $generated@@429) $generated@@433))
))))
 :pattern ( ($generated@@76 $generated@@429 ($generated@@426 $generated@@430 $generated@@431) $generated@@432))
)))
(assert (forall (($generated@@435 T@T) ) (! (= (type ($generated@@434 $generated@@435)) ($generated@@78 $generated@@435 $generated@@4))
 :pattern ( ($generated@@434 $generated@@435))
)))
(assert (forall (($generated@@436 T@U) ) (! (let (($generated@@437 ($generated@@318 (type $generated@@436))))
(let (($generated@@438 ($generated@@317 (type $generated@@436))))
 (=> (= (type $generated@@436) ($generated@@316 $generated@@438 $generated@@437)) (= (= $generated@@436 ($generated@@315 $generated@@438 $generated@@437)) (= ($generated@@314 $generated@@436) ($generated@@434 $generated@@438))))))
 :pattern ( ($generated@@314 $generated@@436))
)))
(assert (forall (($generated@@439 T@U) ) (! (let (($generated@@440 ($generated@@318 (type $generated@@439))))
(let (($generated@@441 ($generated@@317 (type $generated@@439))))
 (=> (= (type $generated@@439) ($generated@@316 $generated@@441 $generated@@440)) (= (= $generated@@439 ($generated@@315 $generated@@441 $generated@@440)) (= ($generated@@367 $generated@@439) ($generated@@434 $generated@@440))))))
 :pattern ( ($generated@@367 $generated@@439))
)))
(assert (forall (($generated@@442 T@U) ) (! (let (($generated@@443 ($generated@@318 (type $generated@@442))))
(let (($generated@@444 ($generated@@317 (type $generated@@442))))
 (=> (= (type $generated@@442) ($generated@@316 $generated@@444 $generated@@443)) (= (= $generated@@442 ($generated@@315 $generated@@444 $generated@@443)) (= ($generated@@400 $generated@@442) ($generated@@434 $generated@@150))))))
 :pattern ( ($generated@@400 $generated@@442))
)))
(assert (forall (($generated@@445 T@U) ) (! (let (($generated@@446 ($generated@@300 (type $generated@@445))))
(let (($generated@@447 ($generated@@299 (type $generated@@445))))
 (=> (= (type $generated@@445) ($generated@@298 $generated@@447 $generated@@446)) (or (= $generated@@445 ($generated@@297 $generated@@447 $generated@@446)) (exists (($generated@@448 T@U) ($generated@@449 T@U) ) (!  (and (and (= (type $generated@@448) $generated@@150) (= (type $generated@@449) $generated@@150)) ($generated@@0 ($generated@@83 ($generated@@392 $generated@@445) ($generated@@285 ($generated@@233 $generated@@448 $generated@@449)))))
 :no-pattern (type $generated@@448)
 :no-pattern (type $generated@@449)
 :no-pattern ($generated $generated@@448)
 :no-pattern ($generated@@0 $generated@@448)
 :no-pattern ($generated $generated@@449)
 :no-pattern ($generated@@0 $generated@@449)
))))))
 :pattern ( ($generated@@392 $generated@@445))
)))
(assert (forall (($generated@@450 T@U) ) (! (let (($generated@@451 ($generated@@318 (type $generated@@450))))
(let (($generated@@452 ($generated@@317 (type $generated@@450))))
 (=> (= (type $generated@@450) ($generated@@316 $generated@@452 $generated@@451)) (or (= $generated@@450 ($generated@@315 $generated@@452 $generated@@451)) (exists (($generated@@453 T@U) ($generated@@454 T@U) ) (!  (and (and (= (type $generated@@453) $generated@@150) (= (type $generated@@454) $generated@@150)) ($generated@@0 ($generated@@83 ($generated@@400 $generated@@450) ($generated@@285 ($generated@@233 $generated@@453 $generated@@454)))))
 :no-pattern (type $generated@@453)
 :no-pattern (type $generated@@454)
 :no-pattern ($generated $generated@@453)
 :no-pattern ($generated@@0 $generated@@453)
 :no-pattern ($generated $generated@@454)
 :no-pattern ($generated@@0 $generated@@454)
))))))
 :pattern ( ($generated@@400 $generated@@450))
)))
(assert (forall (($generated@@455 T@U) ) (!  (=> (and (= (type $generated@@455) $generated@@150) ($generated@@234 $generated@@455 $generated@@46)) (and (= ($generated@@285 ($generated@@348 $generated@@2 $generated@@455)) $generated@@455) ($generated@@137 ($generated@@348 $generated@@2 $generated@@455) $generated@@46)))
 :pattern ( ($generated@@234 $generated@@455 $generated@@46))
)))
(assert (forall (($generated@@456 T@U) ) (!  (=> (and (= (type $generated@@456) $generated@@150) ($generated@@234 $generated@@456 $generated@@47)) (and (= ($generated@@285 ($generated@@348 $generated@@3 $generated@@456)) $generated@@456) ($generated@@137 ($generated@@348 $generated@@3 $generated@@456) $generated@@47)))
 :pattern ( ($generated@@234 $generated@@456 $generated@@47))
)))
(assert (forall (($generated@@457 T@U) ) (!  (=> (and (= (type $generated@@457) $generated@@150) ($generated@@234 $generated@@457 $generated@@44)) (and (= ($generated@@285 ($generated@@348 $generated@@4 $generated@@457)) $generated@@457) ($generated@@137 ($generated@@348 $generated@@4 $generated@@457) $generated@@44)))
 :pattern ( ($generated@@234 $generated@@457 $generated@@44))
)))
(assert (= ($generated@@1 $generated@@458) 21))
(assert (forall (($generated@@459 T@U) ) (!  (=> (and (= (type $generated@@459) $generated@@150) ($generated@@234 $generated@@459 $generated@@45)) (and (= ($generated@@285 ($generated@@348 $generated@@458 $generated@@459)) $generated@@459) ($generated@@137 ($generated@@348 $generated@@458 $generated@@459) $generated@@45)))
 :pattern ( ($generated@@234 $generated@@459 $generated@@45))
)))
(assert (forall (($generated@@460 T@U) ($generated@@461 T@U) ) (!  (=> (= (type $generated@@461) $generated@@66) (= ($generated@@234 ($generated@@285 $generated@@460) $generated@@461) ($generated@@137 $generated@@460 $generated@@461)))
 :pattern ( ($generated@@234 ($generated@@285 $generated@@460) $generated@@461))
)))
(assert (forall (($generated@@462 T@U) ) (! (let (($generated@@463 ($generated@@81 (type $generated@@462))))
 (=> (= (type $generated@@462) ($generated@@78 $generated@@463 $generated@@2)) (<= 0 ($generated@@290 $generated@@462))))
 :pattern ( ($generated@@290 $generated@@462))
)))
(assert (forall (($generated@@464 T@U) ) (! (let (($generated@@465 ($generated@@279 (type $generated@@464))))
 (=> (= (type $generated@@464) ($generated@@278 $generated@@465)) (<= 0 ($generated@@277 $generated@@464))))
 :pattern ( ($generated@@277 $generated@@464))
)))
(assert (forall (($generated@@467 T@U) ) (! (= (type ($generated@@466 $generated@@467)) $generated@@66)
 :pattern ( ($generated@@466 $generated@@467))
)))
(assert (forall (($generated@@468 T@U) ($generated@@469 T@U) ) (!  (=> (and (= (type $generated@@468) $generated@@66) (= (type $generated@@469) $generated@@66)) (= ($generated@@466 ($generated@@418 $generated@@468 $generated@@469)) $generated@@468))
 :pattern ( ($generated@@418 $generated@@468 $generated@@469))
)))
(assert (forall (($generated@@471 T@U) ) (! (= (type ($generated@@470 $generated@@471)) $generated@@66)
 :pattern ( ($generated@@470 $generated@@471))
)))
(assert (forall (($generated@@472 T@U) ($generated@@473 T@U) ) (!  (=> (and (= (type $generated@@472) $generated@@66) (= (type $generated@@473) $generated@@66)) (= ($generated@@470 ($generated@@418 $generated@@472 $generated@@473)) $generated@@473))
 :pattern ( ($generated@@418 $generated@@472 $generated@@473))
)))
(assert (forall (($generated@@474 T@U) ($generated@@475 T@U) ) (!  (=> (and (= (type $generated@@474) $generated@@66) (= (type $generated@@475) $generated@@66)) (= ($generated@@74 ($generated@@418 $generated@@474 $generated@@475)) $generated@@58))
 :pattern ( ($generated@@418 $generated@@474 $generated@@475))
)))
(assert (forall (($generated@@477 T@U) ) (! (= (type ($generated@@476 $generated@@477)) $generated@@66)
 :pattern ( ($generated@@476 $generated@@477))
)))
(assert (forall (($generated@@478 T@U) ($generated@@479 T@U) ) (!  (=> (and (= (type $generated@@478) $generated@@66) (= (type $generated@@479) $generated@@66)) (= ($generated@@476 ($generated@@426 $generated@@478 $generated@@479)) $generated@@478))
 :pattern ( ($generated@@426 $generated@@478 $generated@@479))
)))
(assert (forall (($generated@@481 T@U) ) (! (= (type ($generated@@480 $generated@@481)) $generated@@66)
 :pattern ( ($generated@@480 $generated@@481))
)))
(assert (forall (($generated@@482 T@U) ($generated@@483 T@U) ) (!  (=> (and (= (type $generated@@482) $generated@@66) (= (type $generated@@483) $generated@@66)) (= ($generated@@480 ($generated@@426 $generated@@482 $generated@@483)) $generated@@483))
 :pattern ( ($generated@@426 $generated@@482 $generated@@483))
)))
(assert (forall (($generated@@484 T@U) ($generated@@485 T@U) ) (!  (=> (and (= (type $generated@@484) $generated@@66) (= (type $generated@@485) $generated@@66)) (= ($generated@@74 ($generated@@426 $generated@@484 $generated@@485)) $generated@@59))
 :pattern ( ($generated@@426 $generated@@484 $generated@@485))
)))
(assert (forall (($generated@@486 T@U) ($generated@@487 T@U) ) (!  (=> (and (= (type $generated@@486) $generated@@150) (= (type $generated@@487) $generated@@150)) (= ($generated@@265 ($generated@@233 $generated@@486 $generated@@487)) $generated@@62))
 :pattern ( ($generated@@233 $generated@@486 $generated@@487))
)))
(assert (forall (($generated@@489 T@U) ) (! (= (type ($generated@@488 $generated@@489)) $generated@@66)
 :pattern ( ($generated@@488 $generated@@489))
)))
(assert (forall (($generated@@490 T@U) ($generated@@491 T@U) ) (!  (=> (and (= (type $generated@@490) $generated@@66) (= (type $generated@@491) $generated@@66)) (= ($generated@@488 ($generated@@140 $generated@@490 $generated@@491)) $generated@@490))
 :pattern ( ($generated@@140 $generated@@490 $generated@@491))
)))
(assert (forall (($generated@@493 T@U) ) (! (= (type ($generated@@492 $generated@@493)) $generated@@66)
 :pattern ( ($generated@@492 $generated@@493))
)))
(assert (forall (($generated@@494 T@U) ($generated@@495 T@U) ) (!  (=> (and (= (type $generated@@494) $generated@@66) (= (type $generated@@495) $generated@@66)) (= ($generated@@492 ($generated@@140 $generated@@494 $generated@@495)) $generated@@495))
 :pattern ( ($generated@@140 $generated@@494 $generated@@495))
)))
(assert (forall (($generated@@496 T@U) ($generated@@497 T@U) ) (!  (=> (and (= (type $generated@@496) $generated@@150) (= (type $generated@@497) $generated@@150)) (= ($generated@@148 ($generated@@233 $generated@@496 $generated@@497)) $generated@@496))
 :pattern ( ($generated@@233 $generated@@496 $generated@@497))
)))
(assert (forall (($generated@@498 T@U) ($generated@@499 T@U) ) (!  (=> (and (= (type $generated@@498) $generated@@150) (= (type $generated@@499) $generated@@150)) (= ($generated@@149 ($generated@@233 $generated@@498 $generated@@499)) $generated@@499))
 :pattern ( ($generated@@233 $generated@@498 $generated@@499))
)))
(assert  (and (forall (($generated@@502 T@U) ) (! (= (type ($generated@@500 $generated@@502)) $generated@@66)
 :pattern ( ($generated@@500 $generated@@502))
)) (forall (($generated@@503 T@U) ($generated@@504 Int) ) (! (let (($generated@@505 ($generated@@279 (type $generated@@503))))
(= (type ($generated@@501 $generated@@503 $generated@@504)) $generated@@505))
 :pattern ( ($generated@@501 $generated@@503 $generated@@504))
))))
(assert (forall (($generated@@506 T@U) ($generated@@507 T@U) ($generated@@508 T@U) ) (!  (=> (and (and (= (type $generated@@506) ($generated@@278 $generated@@150)) (= (type $generated@@507) $generated@@66)) (= (type $generated@@508) ($generated@@78 $generated@@79 $generated@@80))) (= ($generated@@76 $generated@@506 ($generated@@500 $generated@@507) $generated@@508) (forall (($generated@@509 Int) ) (!  (=> (and (<= 0 $generated@@509) (< $generated@@509 ($generated@@277 $generated@@506))) ($generated@@259 ($generated@@501 $generated@@506 $generated@@509) $generated@@507 $generated@@508))
 :pattern ( ($generated@@501 $generated@@506 $generated@@509))
))))
 :pattern ( ($generated@@76 $generated@@506 ($generated@@500 $generated@@507) $generated@@508))
)))
(assert (forall (($generated@@511 Int) ) (! (= ($generated@@510 ($generated@@77 $generated@@511)) $generated@@511)
 :pattern ( ($generated@@77 $generated@@511))
)))
(assert (forall (($generated@@513 T@U) ) (! (= (type ($generated@@512 $generated@@513)) $generated@@66)
 :pattern ( ($generated@@512 $generated@@513))
)))
(assert (forall (($generated@@514 T@U) ) (!  (=> (= (type $generated@@514) $generated@@66) (= ($generated@@512 ($generated@@243 $generated@@514)) $generated@@514))
 :pattern ( ($generated@@243 $generated@@514))
)))
(assert (forall (($generated@@515 T@U) ) (!  (=> (= (type $generated@@515) $generated@@66) (= ($generated@@74 ($generated@@243 $generated@@515)) $generated@@54))
 :pattern ( ($generated@@243 $generated@@515))
)))
(assert (forall (($generated@@517 T@U) ) (! (= (type ($generated@@516 $generated@@517)) $generated@@66)
 :pattern ( ($generated@@516 $generated@@517))
)))
(assert (forall (($generated@@518 T@U) ) (!  (=> (= (type $generated@@518) $generated@@66) (= ($generated@@516 ($generated@@248 $generated@@518)) $generated@@518))
 :pattern ( ($generated@@248 $generated@@518))
)))
(assert (forall (($generated@@519 T@U) ) (!  (=> (= (type $generated@@519) $generated@@66) (= ($generated@@74 ($generated@@248 $generated@@519)) $generated@@55))
 :pattern ( ($generated@@248 $generated@@519))
)))
(assert (forall (($generated@@521 T@U) ) (! (= (type ($generated@@520 $generated@@521)) $generated@@66)
 :pattern ( ($generated@@520 $generated@@521))
)))
(assert (forall (($generated@@522 T@U) ) (!  (=> (= (type $generated@@522) $generated@@66) (= ($generated@@520 ($generated@@155 $generated@@522)) $generated@@522))
 :pattern ( ($generated@@155 $generated@@522))
)))
(assert (forall (($generated@@523 T@U) ) (!  (=> (= (type $generated@@523) $generated@@66) (= ($generated@@74 ($generated@@155 $generated@@523)) $generated@@56))
 :pattern ( ($generated@@155 $generated@@523))
)))
(assert (forall (($generated@@525 T@U) ) (! (= (type ($generated@@524 $generated@@525)) $generated@@66)
 :pattern ( ($generated@@524 $generated@@525))
)))
(assert (forall (($generated@@526 T@U) ) (!  (=> (= (type $generated@@526) $generated@@66) (= ($generated@@524 ($generated@@500 $generated@@526)) $generated@@526))
 :pattern ( ($generated@@500 $generated@@526))
)))
(assert (forall (($generated@@527 T@U) ) (!  (=> (= (type $generated@@527) $generated@@66) (= ($generated@@74 ($generated@@500 $generated@@527)) $generated@@57))
 :pattern ( ($generated@@500 $generated@@527))
)))
(assert (forall (($generated@@528 T@U) ) (! (let (($generated@@529 (type $generated@@528)))
(= ($generated@@348 $generated@@529 ($generated@@285 $generated@@528)) $generated@@528))
 :pattern ( ($generated@@285 $generated@@528))
)))
(assert (forall (($generated@@530 T@U) ($generated@@531 T@U) ($generated@@532 T@U) ) (!  (=> (and (and (= (type $generated@@530) ($generated@@298 $generated@@150 $generated@@150)) (= (type $generated@@531) $generated@@66)) (= (type $generated@@532) $generated@@66)) (= ($generated@@137 $generated@@530 ($generated@@418 $generated@@531 $generated@@532)) (forall (($generated@@533 T@U) ) (!  (=> (and (= (type $generated@@533) $generated@@150) ($generated@@0 ($generated@@83 ($generated@@296 $generated@@530) $generated@@533))) (and ($generated@@234 ($generated@@83 ($generated@@393 $generated@@530) $generated@@533) $generated@@532) ($generated@@234 $generated@@533 $generated@@531)))
 :pattern ( ($generated@@83 ($generated@@393 $generated@@530) $generated@@533))
 :pattern ( ($generated@@83 ($generated@@296 $generated@@530) $generated@@533))
))))
 :pattern ( ($generated@@137 $generated@@530 ($generated@@418 $generated@@531 $generated@@532)))
)))
(assert (forall (($generated@@534 T@U) ($generated@@535 T@U) ($generated@@536 T@U) ) (!  (=> (and (and (= (type $generated@@534) ($generated@@316 $generated@@150 $generated@@150)) (= (type $generated@@535) $generated@@66)) (= (type $generated@@536) $generated@@66)) (= ($generated@@137 $generated@@534 ($generated@@426 $generated@@535 $generated@@536)) (forall (($generated@@537 T@U) ) (!  (=> (and (= (type $generated@@537) $generated@@150) ($generated@@0 ($generated@@83 ($generated@@314 $generated@@534) $generated@@537))) (and ($generated@@234 ($generated@@83 ($generated@@401 $generated@@534) $generated@@537) $generated@@536) ($generated@@234 $generated@@537 $generated@@535)))
 :pattern ( ($generated@@83 ($generated@@401 $generated@@534) $generated@@537))
 :pattern ( ($generated@@83 ($generated@@314 $generated@@534) $generated@@537))
))))
 :pattern ( ($generated@@137 $generated@@534 ($generated@@426 $generated@@535 $generated@@536)))
)))
(assert (forall (($generated@@540 T@U) ($generated@@541 T@U) ) (!  (=> (and (= (type $generated@@540) $generated@@150) (= (type $generated@@541) $generated@@150)) (< ($generated@@538 $generated@@540) ($generated@@539 ($generated@@233 $generated@@540 $generated@@541))))
 :pattern ( ($generated@@233 $generated@@540 $generated@@541))
)))
(assert (forall (($generated@@542 T@U) ($generated@@543 T@U) ) (!  (=> (and (= (type $generated@@542) $generated@@150) (= (type $generated@@543) $generated@@150)) (< ($generated@@538 $generated@@543) ($generated@@539 ($generated@@233 $generated@@542 $generated@@543))))
 :pattern ( ($generated@@233 $generated@@542 $generated@@543))
)))
(assert (forall (($generated@@544 T@U) ($generated@@545 T@U) ($generated@@546 T@U) ) (!  (=> (and (and (and (= (type $generated@@544) $generated@@150) (= (type $generated@@545) $generated@@66)) (= (type $generated@@546) $generated@@66)) ($generated@@234 $generated@@544 ($generated@@418 $generated@@545 $generated@@546))) (and (= ($generated@@285 ($generated@@348 ($generated@@298 $generated@@150 $generated@@150) $generated@@544)) $generated@@544) ($generated@@137 ($generated@@348 ($generated@@298 $generated@@150 $generated@@150) $generated@@544) ($generated@@418 $generated@@545 $generated@@546))))
 :pattern ( ($generated@@234 $generated@@544 ($generated@@418 $generated@@545 $generated@@546)))
)))
(assert (forall (($generated@@547 T@U) ($generated@@548 T@U) ($generated@@549 T@U) ) (!  (=> (and (and (and (= (type $generated@@547) $generated@@150) (= (type $generated@@548) $generated@@66)) (= (type $generated@@549) $generated@@66)) ($generated@@234 $generated@@547 ($generated@@426 $generated@@548 $generated@@549))) (and (= ($generated@@285 ($generated@@348 ($generated@@316 $generated@@150 $generated@@150) $generated@@547)) $generated@@547) ($generated@@137 ($generated@@348 ($generated@@316 $generated@@150 $generated@@150) $generated@@547) ($generated@@426 $generated@@548 $generated@@549))))
 :pattern ( ($generated@@234 $generated@@547 ($generated@@426 $generated@@548 $generated@@549)))
)))
(assert (forall (($generated@@550 T@U) ($generated@@551 T@U) ($generated@@552 T@U) ) (!  (=> (and (and (and (= (type $generated@@550) $generated@@66) (= (type $generated@@551) $generated@@66)) (= (type $generated@@552) $generated@@150)) ($generated@@234 $generated@@552 ($generated@@140 $generated@@550 $generated@@551))) (and (= ($generated@@285 ($generated@@348 $generated@@141 $generated@@552)) $generated@@552) ($generated@@137 ($generated@@348 $generated@@141 $generated@@552) ($generated@@140 $generated@@550 $generated@@551))))
 :pattern ( ($generated@@234 $generated@@552 ($generated@@140 $generated@@550 $generated@@551)))
)))
(assert (forall (($generated@@553 T@U) ) (! (let (($generated@@554 (type $generated@@553)))
 (not ($generated@@0 ($generated@@83 ($generated@@434 $generated@@554) $generated@@553))))
 :pattern ( (let (($generated@@554 (type $generated@@553)))
($generated@@83 ($generated@@434 $generated@@554) $generated@@553)))
)))
(assert (forall (($generated@@556 T@U) ) (! (= (type ($generated@@555 $generated@@556)) $generated@@71)
 :pattern ( ($generated@@555 $generated@@556))
)))
(assert (forall (($generated@@557 T@U) ($generated@@558 T@U) ) (!  (=> (and (= (type $generated@@557) $generated@@66) (= (type $generated@@558) $generated@@66)) (and (= ($generated@@74 ($generated@@140 $generated@@557 $generated@@558)) $generated@@63) (= ($generated@@555 ($generated@@140 $generated@@557 $generated@@558)) $generated@@65)))
 :pattern ( ($generated@@140 $generated@@557 $generated@@558))
)))
(assert (forall (($generated@@559 T@U) ) (!  (=> (= (type $generated@@559) $generated@@141) (= ($generated@@538 ($generated@@285 $generated@@559)) ($generated@@539 $generated@@559)))
 :pattern ( ($generated@@538 ($generated@@285 $generated@@559)))
)))
(assert (forall (($generated@@560 T@U) ) (!  (=> (and (= (type $generated@@560) $generated@@150) ($generated@@234 $generated@@560 ($generated@@77 0))) (and (= ($generated@@285 ($generated@@348 $generated@@2 $generated@@560)) $generated@@560) ($generated@@137 ($generated@@348 ($generated@@78 $generated@@150 $generated@@4) $generated@@560) ($generated@@77 0))))
 :pattern ( ($generated@@234 $generated@@560 ($generated@@77 0)))
)))
(assert (forall (($generated@@561 T@U) ($generated@@562 T@U) ) (!  (=> (and (and (= (type $generated@@561) $generated@@150) (= (type $generated@@562) $generated@@66)) ($generated@@234 $generated@@561 ($generated@@243 $generated@@562))) (and (= ($generated@@285 ($generated@@348 ($generated@@78 $generated@@150 $generated@@4) $generated@@561)) $generated@@561) ($generated@@137 ($generated@@348 ($generated@@78 $generated@@150 $generated@@4) $generated@@561) ($generated@@243 $generated@@562))))
 :pattern ( ($generated@@234 $generated@@561 ($generated@@243 $generated@@562)))
)))
(assert (forall (($generated@@563 T@U) ($generated@@564 T@U) ) (!  (=> (and (and (= (type $generated@@563) $generated@@150) (= (type $generated@@564) $generated@@66)) ($generated@@234 $generated@@563 ($generated@@248 $generated@@564))) (and (= ($generated@@285 ($generated@@348 ($generated@@78 $generated@@150 $generated@@4) $generated@@563)) $generated@@563) ($generated@@137 ($generated@@348 ($generated@@78 $generated@@150 $generated@@4) $generated@@563) ($generated@@248 $generated@@564))))
 :pattern ( ($generated@@234 $generated@@563 ($generated@@248 $generated@@564)))
)))
(assert (forall (($generated@@565 T@U) ($generated@@566 T@U) ) (!  (=> (and (and (= (type $generated@@565) $generated@@150) (= (type $generated@@566) $generated@@66)) ($generated@@234 $generated@@565 ($generated@@155 $generated@@566))) (and (= ($generated@@285 ($generated@@348 ($generated@@78 $generated@@150 $generated@@2) $generated@@565)) $generated@@565) ($generated@@137 ($generated@@348 ($generated@@78 $generated@@150 $generated@@2) $generated@@565) ($generated@@155 $generated@@566))))
 :pattern ( ($generated@@234 $generated@@565 ($generated@@155 $generated@@566)))
)))
(assert (forall (($generated@@567 T@U) ($generated@@568 T@U) ) (!  (=> (and (and (= (type $generated@@567) $generated@@150) (= (type $generated@@568) $generated@@66)) ($generated@@234 $generated@@567 ($generated@@500 $generated@@568))) (and (= ($generated@@285 ($generated@@348 ($generated@@278 $generated@@150) $generated@@567)) $generated@@567) ($generated@@137 ($generated@@348 ($generated@@278 $generated@@150) $generated@@567) ($generated@@500 $generated@@568))))
 :pattern ( ($generated@@234 $generated@@567 ($generated@@500 $generated@@568)))
)))
(assert (= ($generated@@74 $generated@@134) $generated@@61))
(assert (= ($generated@@555 $generated@@134) $generated@@64))
(assert (forall (($generated@@569 T@U) ($generated@@570 T@U) ($generated@@571 T@U) ) (!  (=> (and (and (= (type $generated@@569) ($generated@@78 $generated@@150 $generated@@2)) (= (type $generated@@570) $generated@@66)) (= (type $generated@@571) ($generated@@78 $generated@@79 $generated@@80))) (= ($generated@@76 $generated@@569 ($generated@@155 $generated@@570) $generated@@571) (forall (($generated@@572 T@U) ) (!  (=> (and (= (type $generated@@572) $generated@@150) (< 0 ($generated ($generated@@83 $generated@@569 $generated@@572)))) ($generated@@259 $generated@@572 $generated@@570 $generated@@571))
 :pattern ( ($generated@@83 $generated@@569 $generated@@572))
))))
 :pattern ( ($generated@@76 $generated@@569 ($generated@@155 $generated@@570) $generated@@571))
)))
(assert (forall (($generated@@573 T@U) ($generated@@574 T@U) ($generated@@575 T@U) ) (!  (=> (and (and (and (= (type $generated@@573) $generated@@141) (= (type $generated@@574) $generated@@66)) (= (type $generated@@575) ($generated@@78 $generated@@79 $generated@@80))) (and ($generated@@258 $generated@@575) (and ($generated@@139 $generated@@573) (exists (($generated@@576 T@U) ) (!  (and (= (type $generated@@576) $generated@@66) ($generated@@76 $generated@@573 ($generated@@140 $generated@@574 $generated@@576) $generated@@575))
 :pattern ( ($generated@@76 $generated@@573 ($generated@@140 $generated@@574 $generated@@576) $generated@@575))
))))) ($generated@@259 ($generated@@148 $generated@@573) $generated@@574 $generated@@575))
 :pattern ( ($generated@@259 ($generated@@148 $generated@@573) $generated@@574 $generated@@575))
)))
(assert (forall (($generated@@577 T@U) ($generated@@578 T@U) ($generated@@579 T@U) ) (!  (=> (and (and (and (= (type $generated@@577) $generated@@141) (= (type $generated@@578) $generated@@66)) (= (type $generated@@579) ($generated@@78 $generated@@79 $generated@@80))) (and ($generated@@258 $generated@@579) (and ($generated@@139 $generated@@577) (exists (($generated@@580 T@U) ) (!  (and (= (type $generated@@580) $generated@@66) ($generated@@76 $generated@@577 ($generated@@140 $generated@@580 $generated@@578) $generated@@579))
 :pattern ( ($generated@@76 $generated@@577 ($generated@@140 $generated@@580 $generated@@578) $generated@@579))
))))) ($generated@@259 ($generated@@149 $generated@@577) $generated@@578 $generated@@579))
 :pattern ( ($generated@@259 ($generated@@149 $generated@@577) $generated@@578 $generated@@579))
)))
(assert (forall (($generated@@581 T@U) ($generated@@582 T@U) ) (!  (=> (and (= (type $generated@@581) $generated@@150) (= (type $generated@@582) $generated@@150)) (= ($generated@@233 ($generated@@254 $generated@@581) ($generated@@254 $generated@@582)) ($generated@@254 ($generated@@233 $generated@@581 $generated@@582))))
 :pattern ( ($generated@@233 ($generated@@254 $generated@@581) ($generated@@254 $generated@@582)))
)))
(assert (forall (($generated@@583 Int) ) (! (= ($generated@@285 ($generated@@8 ($generated@@164 $generated@@583))) ($generated@@254 ($generated@@285 ($generated@@8 $generated@@583))))
 :pattern ( ($generated@@285 ($generated@@8 ($generated@@164 $generated@@583))))
)))
(assert (forall (($generated@@584 T@U) ) (! (= ($generated@@285 ($generated@@254 $generated@@584)) ($generated@@254 ($generated@@285 $generated@@584)))
 :pattern ( ($generated@@285 ($generated@@254 $generated@@584)))
)))
(assert (forall (($generated@@585 T@U) ) (! (let (($generated@@586 ($generated@@279 (type $generated@@585))))
 (=> (and (= (type $generated@@585) ($generated@@278 $generated@@586)) (= ($generated@@277 $generated@@585) 0)) (= $generated@@585 ($generated@@276 $generated@@586))))
 :pattern ( ($generated@@277 $generated@@585))
)))
(assert (forall (($generated@@587 T@U) ($generated@@588 T@U) ($generated@@589 T@U) ) (! (let (($generated@@590 (type $generated@@588)))
 (=> (and (and (= (type $generated@@587) ($generated@@78 $generated@@590 $generated@@2)) (= (type $generated@@589) $generated@@2)) (<= 0 ($generated $generated@@589))) (= ($generated@@290 ($generated@@84 $generated@@587 $generated@@588 $generated@@589)) (+ (- ($generated@@290 $generated@@587) ($generated ($generated@@83 $generated@@587 $generated@@588))) ($generated $generated@@589)))))
 :pattern ( ($generated@@290 ($generated@@84 $generated@@587 $generated@@588 $generated@@589)))
)))
(assert (forall (($generated@@591 T@U) ($generated@@592 T@U) ) (!  (=> (and (= (type $generated@@591) ($generated@@78 $generated@@79 $generated@@80)) (= (type $generated@@592) $generated@@2)) ($generated@@76 $generated@@592 $generated@@46 $generated@@591))
 :pattern ( ($generated@@76 $generated@@592 $generated@@46 $generated@@591))
)))
(assert (forall (($generated@@593 T@U) ($generated@@594 T@U) ) (!  (=> (and (= (type $generated@@593) ($generated@@78 $generated@@79 $generated@@80)) (= (type $generated@@594) $generated@@3)) ($generated@@76 $generated@@594 $generated@@47 $generated@@593))
 :pattern ( ($generated@@76 $generated@@594 $generated@@47 $generated@@593))
)))
(assert (forall (($generated@@595 T@U) ($generated@@596 T@U) ) (!  (=> (and (= (type $generated@@595) ($generated@@78 $generated@@79 $generated@@80)) (= (type $generated@@596) $generated@@4)) ($generated@@76 $generated@@596 $generated@@44 $generated@@595))
 :pattern ( ($generated@@76 $generated@@596 $generated@@44 $generated@@595))
)))
(assert (forall (($generated@@597 T@U) ($generated@@598 T@U) ) (!  (=> (and (= (type $generated@@597) ($generated@@78 $generated@@79 $generated@@80)) (= (type $generated@@598) $generated@@458)) ($generated@@76 $generated@@598 $generated@@45 $generated@@597))
 :pattern ( ($generated@@76 $generated@@598 $generated@@45 $generated@@597))
)))
(assert (forall (($generated@@599 T@U) ($generated@@600 T@U) ) (!  (=> (and (= (type $generated@@599) ($generated@@78 $generated@@79 $generated@@80)) (= (type $generated@@600) $generated@@150)) ($generated@@76 $generated@@600 $generated@@48 $generated@@599))
 :pattern ( ($generated@@76 $generated@@600 $generated@@48 $generated@@599))
)))
(assert (forall (($generated@@601 T@U) ($generated@@602 T@U) ) (!  (=> (and (= (type $generated@@601) ($generated@@278 $generated@@150)) (= (type $generated@@602) $generated@@66)) (= ($generated@@137 $generated@@601 ($generated@@500 $generated@@602)) (forall (($generated@@603 Int) ) (!  (=> (and (<= 0 $generated@@603) (< $generated@@603 ($generated@@277 $generated@@601))) ($generated@@234 ($generated@@501 $generated@@601 $generated@@603) $generated@@602))
 :pattern ( ($generated@@501 $generated@@601 $generated@@603))
))))
 :pattern ( ($generated@@137 $generated@@601 ($generated@@500 $generated@@602)))
)))
(assert (forall (($generated@@605 T@U) ($generated@@606 Int) ) (!  (=> (= (type $generated@@605) ($generated@@278 $generated@@150)) (=> (and (<= 0 $generated@@606) (< $generated@@606 ($generated@@277 $generated@@605))) (< ($generated@@539 ($generated@@348 $generated@@141 ($generated@@501 $generated@@605 $generated@@606))) ($generated@@604 $generated@@605))))
 :pattern ( ($generated@@539 ($generated@@348 $generated@@141 ($generated@@501 $generated@@605 $generated@@606))))
)))
(assert (forall (($generated@@607 T@U) ($generated@@608 T@U) ($generated@@609 T@U) ) (!  (=> (and (and (and (= (type $generated@@607) ($generated@@298 $generated@@150 $generated@@150)) (= (type $generated@@608) $generated@@66)) (= (type $generated@@609) $generated@@66)) ($generated@@137 $generated@@607 ($generated@@418 $generated@@608 $generated@@609))) (and (and ($generated@@137 ($generated@@296 $generated@@607) ($generated@@243 $generated@@608)) ($generated@@137 ($generated@@356 $generated@@607) ($generated@@243 $generated@@609))) ($generated@@137 ($generated@@392 $generated@@607) ($generated@@243 ($generated@@140 $generated@@608 $generated@@609)))))
 :pattern ( ($generated@@137 $generated@@607 ($generated@@418 $generated@@608 $generated@@609)))
)))
(assert (forall (($generated@@610 T@U) ($generated@@611 T@U) ($generated@@612 T@U) ) (!  (=> (and (and (and (= (type $generated@@610) ($generated@@316 $generated@@150 $generated@@150)) (= (type $generated@@611) $generated@@66)) (= (type $generated@@612) $generated@@66)) ($generated@@137 $generated@@610 ($generated@@426 $generated@@611 $generated@@612))) (and (and ($generated@@137 ($generated@@314 $generated@@610) ($generated@@248 $generated@@611)) ($generated@@137 ($generated@@367 $generated@@610) ($generated@@248 $generated@@612))) ($generated@@137 ($generated@@400 $generated@@610) ($generated@@248 ($generated@@140 $generated@@611 $generated@@612)))))
 :pattern ( ($generated@@137 $generated@@610 ($generated@@426 $generated@@611 $generated@@612)))
)))
(assert (forall (($generated@@613 T@U) ) (!  (=> (= (type $generated@@613) $generated@@2) ($generated@@137 $generated@@613 $generated@@46))
 :pattern ( ($generated@@137 $generated@@613 $generated@@46))
)))
(assert (forall (($generated@@614 T@U) ) (!  (=> (= (type $generated@@614) $generated@@3) ($generated@@137 $generated@@614 $generated@@47))
 :pattern ( ($generated@@137 $generated@@614 $generated@@47))
)))
(assert (forall (($generated@@615 T@U) ) (!  (=> (= (type $generated@@615) $generated@@4) ($generated@@137 $generated@@615 $generated@@44))
 :pattern ( ($generated@@137 $generated@@615 $generated@@44))
)))
(assert (forall (($generated@@616 T@U) ) (!  (=> (= (type $generated@@616) $generated@@458) ($generated@@137 $generated@@616 $generated@@45))
 :pattern ( ($generated@@137 $generated@@616 $generated@@45))
)))
(assert (forall (($generated@@617 T@U) ) (!  (=> (= (type $generated@@617) $generated@@150) ($generated@@137 $generated@@617 $generated@@48))
 :pattern ( ($generated@@137 $generated@@617 $generated@@48))
)))
(push 1)
(declare-fun ControlFlow (Int Int) Int)
(declare-fun $generated@@618 () T@U)
(declare-fun $generated@@619 () T@U)
(declare-fun $generated@@620 () Int)
(declare-fun $generated@@621 () Int)
(declare-fun $generated@@622 () T@U)
(declare-fun $generated@@623 (T@U) Bool)
(declare-fun $generated@@624 () T@U)
(declare-fun $generated@@625 () T@U)
(declare-fun $generated@@626 () T@U)
(assert  (and (and (and (and (and (= (type $generated@@618) $generated@@66) (= (type $generated@@619) $generated@@66)) (= (type $generated@@622) ($generated@@78 $generated@@79 $generated@@80))) (= (type $generated@@624) ($generated@@78 $generated@@79 $generated@@80))) (= (type $generated@@625) ($generated@@172 $generated@@79 $generated@@4))) (= (type $generated@@626) $generated@@79)))
(set-option :timeout 0)
(set-option :rlimit 0)
(assert (not
 (=> (= (ControlFlow 0 0) 11) (let (($generated@@627  (=> (= (ControlFlow 0 2) (- 0 1)) (=> ($generated@@163 $generated@@618 $generated@@45 $generated@@619 $generated@@620) (or ($generated@@161 $generated@@618 $generated@@45 $generated@@619 ($generated@@226 $generated@@333) $generated@@620) (=> (< 0 $generated@@620) ($generated@@161 $generated@@45 $generated@@618 $generated@@619 ($generated@@226 ($generated@@226 $generated@@333)) (- $generated@@620 1))))))))
(let (($generated@@628  (=> (and (< $generated@@620 ($generated@@164 2)) (= (ControlFlow 0 8) 2)) $generated@@627)))
(let (($generated@@629  (=> (<= ($generated@@164 2) $generated@@620) (and (=> (= (ControlFlow 0 4) (- 0 7)) ($generated@@137 ($generated@@8 (- $generated@@620 2)) $generated@@134)) (=> ($generated@@137 ($generated@@8 (- $generated@@620 2)) $generated@@134) (=> (= $generated@@621 (- $generated@@620 2)) (and (=> (= (ControlFlow 0 4) (- 0 6)) (or (<= 0 $generated@@620) (= $generated@@621 $generated@@620))) (=> (or (<= 0 $generated@@620) (= $generated@@621 $generated@@620)) (and (=> (= (ControlFlow 0 4) (- 0 5)) (< $generated@@621 $generated@@620)) (=> (< $generated@@621 $generated@@620) (=> (and (and (and ($generated@@258 $generated@@622) ($generated@@623 $generated@@622)) ($generated@@163 $generated@@618 $generated@@45 $generated@@619 $generated@@621)) (and (and ($generated@@163 $generated@@618 $generated@@45 $generated@@619 $generated@@621) (and ($generated@@161 $generated@@618 $generated@@45 $generated@@619 ($generated@@226 $generated@@333) $generated@@621) (=> (< 0 $generated@@621) ($generated@@161 $generated@@45 $generated@@618 $generated@@619 ($generated@@226 $generated@@333) (- $generated@@621 1))))) (and (= $generated@@624 $generated@@622) (= (ControlFlow 0 4) 2)))) $generated@@627)))))))))))
(let (($generated@@630  (=> (< 0 $generated@@620) (and (=> (= (ControlFlow 0 9) 4) $generated@@629) (=> (= (ControlFlow 0 9) 8) $generated@@628)))))
(let (($generated@@631  (=> (and (<= $generated@@620 0) (= (ControlFlow 0 3) 2)) $generated@@627)))
(let (($generated@@632  (=> (= $generated@@625 ($generated@@171 $generated@@626 $generated@@624 $generated@@60 false)) (and (=> (= (ControlFlow 0 10) 9) $generated@@630) (=> (= (ControlFlow 0 10) 3) $generated@@631)))))
(let (($generated@@633  (=> (and (and (and ($generated@@258 $generated@@624) ($generated@@623 $generated@@624)) (<= ($generated@@164 0) $generated@@620)) (and (= 2 $generated@@160) (= (ControlFlow 0 11) 10))) $generated@@632)))
$generated@@633))))))))
))
(check-sat)
(pop 1)
; Valid
(get-info :rlimit)
(reset)
(set-option :rlimit 0)
; did a full reset
(reset)
(set-option :print-success false)
(set-info :smt-lib-version 2.6)
(set-option :auto_config false)
(set-option :type_check true)
(set-option :smt.case_split 3)
(set-option :smt.qi.eager_threshold 100)
(set-option :smt.delay_units true)
(set-option :smt.arith.solver 2)
(set-option :smt.mbqi false)
(set-option :model.compact false)
(set-option :model.v2 true)
(set-option :pp.bv_literals false)
; done setting options


(set-info :category "industrial")
(declare-sort |T@U| 0)
(declare-sort |T@T| 0)
(declare-fun real_pow (Real Real) Real)
(declare-fun UOrdering2 (|T@U| |T@U|) Bool)
(declare-fun UOrdering3 (|T@T| |T@U| |T@U|) Bool)
(declare-fun tickleBool (Bool) Bool)
(assert (and (tickleBool true) (tickleBool false)))
(declare-fun $generated (T@U) Int)
(declare-fun $generated@@0 (T@U) Bool)
(declare-fun $generated@@1 (T@T) Int)
(declare-fun $generated@@2 () T@T)
(declare-fun $generated@@3 () T@T)
(declare-fun $generated@@4 () T@T)
(declare-fun $generated@@5 () T@T)
(declare-fun $generated@@6 () T@T)
(declare-fun $generated@@7 () T@T)
(declare-fun $generated@@8 (Int) T@U)
(declare-fun type (T@U) T@T)
(declare-fun $generated@@9 (Real) T@U)
(declare-fun $generated@@10 (T@U) Real)
(declare-fun $generated@@11 (Bool) T@U)
(declare-fun $generated@@12 (RoundingMode) T@U)
(declare-fun $generated@@13 (T@U) RoundingMode)
(declare-fun $generated@@14 (String) T@U)
(declare-fun $generated@@15 (T@U) String)
(declare-fun $generated@@16 ((RegEx String)) T@U)
(declare-fun $generated@@17 (T@U) (RegEx String))
(declare-fun $generated@@44 () T@U)
(declare-fun $generated@@45 () T@U)
(declare-fun $generated@@46 () T@U)
(declare-fun $generated@@47 () T@U)
(declare-fun $generated@@48 () T@U)
(declare-fun $generated@@49 () T@U)
(declare-fun $generated@@50 () T@U)
(declare-fun $generated@@51 () T@U)
(declare-fun $generated@@52 () T@U)
(declare-fun $generated@@53 () T@U)
(declare-fun $generated@@54 () T@U)
(declare-fun $generated@@55 () T@U)
(declare-fun $generated@@56 () T@U)
(declare-fun $generated@@57 () T@U)
(declare-fun $generated@@58 () T@U)
(declare-fun $generated@@59 () T@U)
(declare-fun $generated@@60 () T@U)
(declare-fun $generated@@61 () T@U)
(declare-fun $generated@@62 () T@U)
(declare-fun $generated@@63 () T@U)
(declare-fun $generated@@64 () T@U)
(declare-fun $generated@@65 () T@U)
(declare-fun $generated@@66 () T@T)
(declare-fun $generated@@67 () T@T)
(declare-fun $generated@@68 (T@T) T@T)
(declare-fun $generated@@69 (T@T) T@T)
(declare-fun $generated@@70 () T@T)
(declare-fun $generated@@71 () T@T)
(declare-fun $generated@@74 (T@U) T@U)
(declare-fun $generated@@76 (T@U T@U T@U) Bool)
(declare-fun $generated@@77 (Int) T@U)
(declare-fun $generated@@78 (T@T T@T) T@T)
(declare-fun $generated@@79 () T@T)
(declare-fun $generated@@80 () T@T)
(declare-fun $generated@@81 (T@T) T@T)
(declare-fun $generated@@82 (T@T) T@T)
(declare-fun $generated@@83 (T@U T@U) T@U)
(declare-fun $generated@@84 (T@U T@U T@U) T@U)
(declare-fun $generated@@85 (T@U T@U) T@U)
(declare-fun $generated@@86 (T@U T@U T@U) T@U)
(declare-fun $generated@@134 () T@U)
(declare-fun $generated@@137 (T@U T@U) Bool)
(declare-fun $generated@@139 (T@U) Bool)
(declare-fun $generated@@140 (T@U T@U) T@U)
(declare-fun $generated@@141 () T@T)
(declare-fun $generated@@147 (T@U T@U) Bool)
(declare-fun $generated@@148 (T@U) T@U)
(declare-fun $generated@@149 (T@U) T@U)
(declare-fun $generated@@150 () T@T)
(declare-fun $generated@@155 (T@U) T@U)
(declare-fun $generated@@156 (T@U) Bool)
(declare-fun $generated@@160 () Int)
(declare-fun $generated@@161 (T@U T@U T@U T@U Int) Bool)
(declare-fun $generated@@162 () T@T)
(declare-fun $generated@@163 (T@U T@U T@U Int) Bool)
(declare-fun $generated@@164 (Int) Int)
(declare-fun $generated@@170 (T@U T@U T@U) T@U)
(declare-fun $generated@@171 (T@U T@U T@U Bool) T@U)
(declare-fun $generated@@172 (T@T T@T) T@T)
(declare-fun $generated@@173 (T@T) T@T)
(declare-fun $generated@@174 (T@T) T@T)
(declare-fun $generated@@175 (T@U T@U T@U T@U) T@U)
(declare-fun $generated@@226 (T@U) T@U)
(declare-fun $generated@@233 (T@U T@U) T@U)
(declare-fun $generated@@234 (T@U T@U) Bool)
(declare-fun $generated@@243 (T@U) T@U)
(declare-fun $generated@@248 (T@U) T@U)
(declare-fun $generated@@254 (T@U) T@U)
(declare-fun $generated@@258 (T@U) Bool)
(declare-fun $generated@@259 (T@U T@U T@U) Bool)
(declare-fun $generated@@265 (T@U) T@U)
(declare-fun $generated@@276 (T@T) T@U)
(declare-fun $generated@@277 (T@U) Int)
(declare-fun $generated@@278 (T@T) T@T)
(declare-fun $generated@@279 (T@T) T@T)
(declare-fun $generated@@285 (T@U) T@U)
(declare-fun $generated@@290 (T@U) Int)
(declare-fun $generated@@291 (T@T) T@U)
(declare-fun $generated@@296 (T@U) T@U)
(declare-fun $generated@@297 (T@T T@T) T@U)
(declare-fun $generated@@298 (T@T T@T) T@T)
(declare-fun $generated@@299 (T@T) T@T)
(declare-fun $generated@@300 (T@T) T@T)
(declare-fun $generated@@314 (T@U) T@U)
(declare-fun $generated@@315 (T@T T@T) T@U)
(declare-fun $generated@@316 (T@T T@T) T@T)
(declare-fun $generated@@317 (T@T) T@T)
(declare-fun $generated@@318 (T@T) T@T)
(declare-fun $generated@@332 (T@U) T@U)
(declare-fun $generated@@333 () T@U)
(declare-fun $generated@@348 (T@T T@U) T@U)
(declare-fun $generated@@356 (T@U) T@U)
(declare-fun $generated@@367 (T@U) T@U)
(declare-fun $generated@@392 (T@U) T@U)
(declare-fun $generated@@393 (T@U) T@U)
(declare-fun $generated@@400 (T@U) T@U)
(declare-fun $generated@@401 (T@U) T@U)
(declare-fun $generated@@418 (T@U T@U) T@U)
(declare-fun $generated@@426 (T@U T@U) T@U)
(declare-fun $generated@@434 (T@T) T@U)
(declare-fun $generated@@458 () T@T)
(declare-fun $generated@@466 (T@U) T@U)
(declare-fun $generated@@470 (T@U) T@U)
(declare-fun $generated@@476 (T@U) T@U)
(declare-fun $generated@@480 (T@U) T@U)
(declare-fun $generated@@488 (T@U) T@U)
(declare-fun $generated@@492 (T@U) T@U)
(declare-fun $generated@@500 (T@U) T@U)
(declare-fun $generated@@501 (T@U Int) T@U)
(declare-fun $generated@@510 (T@U) Int)
(declare-fun $generated@@512 (T@U) T@U)
(declare-fun $generated@@516 (T@U) T@U)
(declare-fun $generated@@520 (T@U) T@U)
(declare-fun $generated@@524 (T@U) T@U)
(declare-fun $generated@@538 (T@U) Int)
(declare-fun $generated@@539 (T@U) Int)
(declare-fun $generated@@555 (T@U) T@U)
(declare-fun $generated@@604 (T@U) Int)
(assert  (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (= ($generated@@1 $generated@@2) 0) (= ($generated@@1 $generated@@3) 1)) (= ($generated@@1 $generated@@4) 2)) (= ($generated@@1 $generated@@5) 3)) (= ($generated@@1 $generated@@6) 4)) (= ($generated@@1 $generated@@7) 5)) (forall (($generated@@18 Int) ) (! (= ($generated ($generated@@8 $generated@@18)) $generated@@18)
 :pattern ( ($generated@@8 $generated@@18))
))) (forall (($generated@@19 T@U) ) (!  (=> (= (type $generated@@19) $generated@@2) (= ($generated@@8 ($generated $generated@@19)) $generated@@19))
 :pattern ( ($generated $generated@@19))
))) (forall (($generated@@20 Int) ) (! (= (type ($generated@@8 $generated@@20)) $generated@@2)
 :pattern ( ($generated@@8 $generated@@20))
))) (forall (($generated@@21 Real) ) (! (= ($generated@@10 ($generated@@9 $generated@@21)) $generated@@21)
 :pattern ( ($generated@@9 $generated@@21))
))) (forall (($generated@@22 T@U) ) (!  (=> (= (type $generated@@22) $generated@@3) (= ($generated@@9 ($generated@@10 $generated@@22)) $generated@@22))
 :pattern ( ($generated@@10 $generated@@22))
))) (forall (($generated@@23 Real) ) (! (= (type ($generated@@9 $generated@@23)) $generated@@3)
 :pattern ( ($generated@@9 $generated@@23))
))) (forall (($generated@@24 Bool) ) (! (= ($generated@@0 ($generated@@11 $generated@@24)) $generated@@24)
 :pattern ( ($generated@@11 $generated@@24))
))) (forall (($generated@@25 T@U) ) (!  (=> (= (type $generated@@25) $generated@@4) (= ($generated@@11 ($generated@@0 $generated@@25)) $generated@@25))
 :pattern ( ($generated@@0 $generated@@25))
))) (forall (($generated@@26 Bool) ) (! (= (type ($generated@@11 $generated@@26)) $generated@@4)
 :pattern ( ($generated@@11 $generated@@26))
))) (forall (($generated@@27 RoundingMode) ) (! (= ($generated@@13 ($generated@@12 $generated@@27)) $generated@@27)
 :pattern ( ($generated@@12 $generated@@27))
))) (forall (($generated@@28 T@U) ) (!  (=> (= (type $generated@@28) $generated@@5) (= ($generated@@12 ($generated@@13 $generated@@28)) $generated@@28))
 :pattern ( ($generated@@13 $generated@@28))
))) (forall (($generated@@29 RoundingMode) ) (! (= (type ($generated@@12 $generated@@29)) $generated@@5)
 :pattern ( ($generated@@12 $generated@@29))
))) (forall (($generated@@30 String) ) (! (= ($generated@@15 ($generated@@14 $generated@@30)) $generated@@30)
 :pattern ( ($generated@@14 $generated@@30))
))) (forall (($generated@@31 T@U) ) (!  (=> (= (type $generated@@31) $generated@@6) (= ($generated@@14 ($generated@@15 $generated@@31)) $generated@@31))
 :pattern ( ($generated@@15 $generated@@31))
))) (forall (($generated@@32 String) ) (! (= (type ($generated@@14 $generated@@32)) $generated@@6)
 :pattern ( ($generated@@14 $generated@@32))
))) (forall (($generated@@33 (RegEx String)) ) (! (= ($generated@@17 ($generated@@16 $generated@@33)) $generated@@33)
 :pattern ( ($generated@@16 $generated@@33))
))) (forall (($generated@@34 T@U) ) (!  (=> (= (type $generated@@34) $generated@@7) (= ($generated@@16 ($generated@@17 $generated@@34)) $generated@@34))
 :pattern ( ($generated@@17 $generated@@34))
))) (forall (($generated@@35 (RegEx String)) ) (! (= (type ($generated@@16 $generated@@35)) $generated@@7)
 :pattern ( ($generated@@16 $generated@@35))
))))
(assert (forall (($generated@@36 T@U) ) (! (UOrdering2 $generated@@36 $generated@@36)
 :no-pattern ($generated $generated@@36)
 :no-pattern ($generated@@0 $generated@@36)
)))
(assert (forall (($generated@@37 T@U) ($generated@@38 T@U) ($generated@@39 T@U) ) (! (let (($generated@@40 (type $generated@@37)))
 (=> (and (and (= (type $generated@@38) $generated@@40) (= (type $generated@@39) $generated@@40)) (and (UOrdering2 $generated@@37 $generated@@38) (UOrdering2 $generated@@38 $generated@@39))) (UOrdering2 $generated@@37 $generated@@39)))
 :pattern ( (UOrdering2 $generated@@37 $generated@@38) (UOrdering2 $generated@@38 $generated@@39))
)))
(assert (forall (($generated@@41 T@U) ($generated@@42 T@U) ) (! (let (($generated@@43 (type $generated@@41)))
 (=> (= (type $generated@@42) $generated@@43) (=> (and (UOrdering2 $generated@@41 $generated@@42) (UOrdering2 $generated@@42 $generated@@41)) (= $generated@@41 $generated@@42))))
 :pattern ( (UOrdering2 $generated@@41 $generated@@42) (UOrdering2 $generated@@42 $generated@@41))
)))
(assert  (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (= ($generated@@1 $generated@@66) 6) (= (type $generated@@44) $generated@@66)) (= (type $generated@@45) $generated@@66)) (= (type $generated@@46) $generated@@66)) (= (type $generated@@47) $generated@@66)) (= (type $generated@@48) $generated@@66)) (= ($generated@@1 $generated@@67) 7)) (= (type $generated@@49) $generated@@67)) (= (type $generated@@50) $generated@@67)) (= (type $generated@@51) $generated@@67)) (= (type $generated@@52) $generated@@67)) (= (type $generated@@53) $generated@@67)) (= (type $generated@@54) $generated@@67)) (= (type $generated@@55) $generated@@67)) (= (type $generated@@56) $generated@@67)) (= (type $generated@@57) $generated@@67)) (= (type $generated@@58) $generated@@67)) (= (type $generated@@59) $generated@@67)) (forall (($generated@@72 T@T) ) (= ($generated@@1 ($generated@@68 $generated@@72)) 8))) (forall (($generated@@73 T@T) ) (! (= ($generated@@69 ($generated@@68 $generated@@73)) $generated@@73)
 :pattern ( ($generated@@68 $generated@@73))
))) (= (type $generated@@60) ($generated@@68 $generated@@4))) (= (type $generated@@61) $generated@@67)) (= ($generated@@1 $generated@@70) 9)) (= (type $generated@@62) $generated@@70)) (= (type $generated@@63) $generated@@67)) (= ($generated@@1 $generated@@71) 10)) (= (type $generated@@64) $generated@@71)) (= (type $generated@@65) $generated@@71)))
(assert (distinct $generated@@44 $generated@@45 $generated@@46 $generated@@47 $generated@@48 $generated@@49 $generated@@50 $generated@@51 $generated@@52 $generated@@53 $generated@@54 $generated@@55 $generated@@56 $generated@@57 $generated@@58 $generated@@59 $generated@@60 $generated@@61 $generated@@62 $generated@@63 $generated@@64 $generated@@65)
)
(assert (forall (($generated@@75 T@U) ) (! (= (type ($generated@@74 $generated@@75)) $generated@@67)
 :pattern ( ($generated@@74 $generated@@75))
)))
(assert (= ($generated@@74 $generated@@44) $generated@@49))
(assert (= ($generated@@74 $generated@@45) $generated@@50))
(assert (= ($generated@@74 $generated@@46) $generated@@51))
(assert (= ($generated@@74 $generated@@47) $generated@@52))
(assert (= ($generated@@74 $generated@@48) $generated@@53))
(assert  (and (and (and (and (and (and (and (and (and (and (and (and (and (forall (($generated@@87 T@T) ($generated@@88 T@T) ) (= ($generated@@1 ($generated@@78 $generated@@87 $generated@@88)) 11)) (forall (($generated@@89 T@T) ($generated@@90 T@T) ) (! (= ($generated@@81 ($generated@@78 $generated@@89 $generated@@90)) $generated@@89)
 :pattern ( ($generated@@78 $generated@@89 $generated@@90))
))) (forall (($generated@@91 T@T) ($generated@@92 T@T) ) (! (= ($generated@@82 ($generated@@78 $generated@@91 $generated@@92)) $generated@@92)
 :pattern ( ($generated@@78 $generated@@91 $generated@@92))
))) (forall (($generated@@93 T@U) ($generated@@94 T@U) ) (! (let (($generated@@95 ($generated@@82 (type $generated@@93))))
(= (type ($generated@@83 $generated@@93 $generated@@94)) $generated@@95))
 :pattern ( ($generated@@83 $generated@@93 $generated@@94))
))) (forall (($generated@@96 T@U) ($generated@@97 T@U) ($generated@@98 T@U) ) (! (let (($generated@@99 (type $generated@@98)))
(let (($generated@@100 (type $generated@@97)))
(= (type ($generated@@84 $generated@@96 $generated@@97 $generated@@98)) ($generated@@78 $generated@@100 $generated@@99))))
 :pattern ( ($generated@@84 $generated@@96 $generated@@97 $generated@@98))
))) (forall (($generated@@101 T@U) ($generated@@102 T@U) ($generated@@103 T@U) ) (! (let (($generated@@104 ($generated@@82 (type $generated@@101))))
 (=> (= (type $generated@@103) $generated@@104) (= ($generated@@83 ($generated@@84 $generated@@101 $generated@@102 $generated@@103) $generated@@102) $generated@@103)))
 :weight 0
))) (and (forall (($generated@@105 T@U) ($generated@@106 T@U) ($generated@@107 T@U) ($generated@@108 T@U) ) (!  (or (= $generated@@107 $generated@@108) (= ($generated@@83 ($generated@@84 $generated@@106 $generated@@107 $generated@@105) $generated@@108) ($generated@@83 $generated@@106 $generated@@108)))
 :weight 0
)) (forall (($generated@@109 T@U) ($generated@@110 T@U) ($generated@@111 T@U) ($generated@@112 T@U) ) (!  (or true (= ($generated@@83 ($generated@@84 $generated@@110 $generated@@111 $generated@@109) $generated@@112) ($generated@@83 $generated@@110 $generated@@112)))
 :weight 0
)))) (= ($generated@@1 $generated@@79) 12)) (forall (($generated@@113 T@U) ($generated@@114 T@U) ) (! (let (($generated@@115 ($generated@@69 (type $generated@@114))))
(= (type ($generated@@85 $generated@@113 $generated@@114)) $generated@@115))
 :pattern ( ($generated@@85 $generated@@113 $generated@@114))
))) (= ($generated@@1 $generated@@80) 13)) (forall (($generated@@116 T@U) ($generated@@117 T@U) ($generated@@118 T@U) ) (! (= (type ($generated@@86 $generated@@116 $generated@@117 $generated@@118)) $generated@@80)
 :pattern ( ($generated@@86 $generated@@116 $generated@@117 $generated@@118))
))) (forall (($generated@@119 T@U) ($generated@@120 T@U) ($generated@@121 T@U) ) (! (let (($generated@@122 ($generated@@69 (type $generated@@120))))
 (=> (= (type $generated@@121) $generated@@122) (= ($generated@@85 ($generated@@86 $generated@@119 $generated@@120 $generated@@121) $generated@@120) $generated@@121)))
 :weight 0
))) (and (forall (($generated@@123 T@U) ($generated@@124 T@U) ($generated@@125 T@U) ($generated@@126 T@U) ) (!  (or (= $generated@@125 $generated@@126) (= ($generated@@85 ($generated@@86 $generated@@124 $generated@@125 $generated@@123) $generated@@126) ($generated@@85 $generated@@124 $generated@@126)))
 :weight 0
)) (forall (($generated@@127 T@U) ($generated@@128 T@U) ($generated@@129 T@U) ($generated@@130 T@U) ) (!  (or true (= ($generated@@85 ($generated@@86 $generated@@128 $generated@@129 $generated@@127) $generated@@130) ($generated@@85 $generated@@128 $generated@@130)))
 :weight 0
)))) (forall (($generated@@131 Int) ) (! (= (type ($generated@@77 $generated@@131)) $generated@@66)
 :pattern ( ($generated@@77 $generated@@131))
))))
(assert (forall (($generated@@132 T@U) ($generated@@133 T@U) ) (!  (=> (and (= (type $generated@@132) $generated@@2) (= (type $generated@@133) ($generated@@78 $generated@@79 $generated@@80))) ($generated@@76 $generated@@132 ($generated@@77 0) $generated@@133))
 :pattern ( ($generated@@76 $generated@@132 ($generated@@77 0) $generated@@133))
)))
(assert (= (type $generated@@134) $generated@@66))
(assert (forall (($generated@@135 T@U) ($generated@@136 T@U) ) (!  (=> (and (= (type $generated@@135) $generated@@2) (= (type $generated@@136) ($generated@@78 $generated@@79 $generated@@80))) ($generated@@76 $generated@@135 $generated@@134 $generated@@136))
 :pattern ( ($generated@@76 $generated@@135 $generated@@134 $generated@@136))
)))
(assert (forall (($generated@@138 T@U) ) (!  (=> (= (type $generated@@138) $generated@@2) ($generated@@137 $generated@@138 ($generated@@77 0)))
 :pattern ( ($generated@@137 $generated@@138 ($generated@@77 0)))
)))
(assert  (and (= ($generated@@1 $generated@@141) 14) (forall (($generated@@142 T@U) ($generated@@143 T@U) ) (! (= (type ($generated@@140 $generated@@142 $generated@@143)) $generated@@66)
 :pattern ( ($generated@@140 $generated@@142 $generated@@143))
))))
(assert (forall (($generated@@144 T@U) ($generated@@145 T@U) ($generated@@146 T@U) ) (!  (=> (and (and (and (= (type $generated@@144) $generated@@66) (= (type $generated@@145) $generated@@66)) (= (type $generated@@146) $generated@@141)) ($generated@@137 $generated@@146 ($generated@@140 $generated@@144 $generated@@145))) ($generated@@139 $generated@@146))
 :pattern ( ($generated@@139 $generated@@146) ($generated@@137 $generated@@146 ($generated@@140 $generated@@144 $generated@@145)))
)))
(assert  (and (and (= ($generated@@1 $generated@@150) 15) (forall (($generated@@151 T@U) ) (! (= (type ($generated@@148 $generated@@151)) $generated@@150)
 :pattern ( ($generated@@148 $generated@@151))
))) (forall (($generated@@152 T@U) ) (! (= (type ($generated@@149 $generated@@152)) $generated@@150)
 :pattern ( ($generated@@149 $generated@@152))
))))
(assert (forall (($generated@@153 T@U) ($generated@@154 T@U) ) (!  (=> (and (and (= (type $generated@@153) $generated@@141) (= (type $generated@@154) $generated@@141)) true) (= ($generated@@147 $generated@@153 $generated@@154)  (and (= ($generated@@148 $generated@@153) ($generated@@148 $generated@@154)) (= ($generated@@149 $generated@@153) ($generated@@149 $generated@@154)))))
 :pattern ( ($generated@@147 $generated@@153 $generated@@154))
)))
(assert (forall (($generated@@157 T@U) ) (! (= (type ($generated@@155 $generated@@157)) $generated@@66)
 :pattern ( ($generated@@155 $generated@@157))
)))
(assert (forall (($generated@@158 T@U) ($generated@@159 T@U) ) (!  (=> (and (and (= (type $generated@@158) ($generated@@78 $generated@@150 $generated@@2)) (= (type $generated@@159) $generated@@66)) ($generated@@137 $generated@@158 ($generated@@155 $generated@@159))) ($generated@@156 $generated@@158))
 :pattern ( ($generated@@137 $generated@@158 ($generated@@155 $generated@@159)))
)))
(assert (= ($generated@@1 $generated@@162) 16))
(assert  (=> (<= 1 $generated@@160) (forall (($generated@@165 T@U) ($generated@@166 T@U) ($generated@@167 T@U) ($generated@@168 T@U) ($generated@@169 Int) ) (!  (=> (and (and (and (and (= (type $generated@@165) $generated@@66) (= (type $generated@@166) $generated@@66)) (= (type $generated@@167) $generated@@66)) (= (type $generated@@168) $generated@@162)) (or ($generated@@163 $generated@@165 $generated@@166 $generated@@167 $generated@@169) (and (not (= 1 $generated@@160)) (<= ($generated@@164 0) $generated@@169)))) true)
 :pattern ( ($generated@@161 $generated@@165 $generated@@166 $generated@@167 $generated@@168 $generated@@169))
))))
(assert  (and (and (and (and (and (and (and (forall (($generated@@176 T@T) ($generated@@177 T@T) ) (= ($generated@@1 ($generated@@172 $generated@@176 $generated@@177)) 17)) (forall (($generated@@178 T@T) ($generated@@179 T@T) ) (! (= ($generated@@173 ($generated@@172 $generated@@178 $generated@@179)) $generated@@178)
 :pattern ( ($generated@@172 $generated@@178 $generated@@179))
))) (forall (($generated@@180 T@T) ($generated@@181 T@T) ) (! (= ($generated@@174 ($generated@@172 $generated@@180 $generated@@181)) $generated@@181)
 :pattern ( ($generated@@172 $generated@@180 $generated@@181))
))) (forall (($generated@@182 T@U) ($generated@@183 T@U) ($generated@@184 T@U) ) (! (let (($generated@@185 ($generated@@174 (type $generated@@182))))
(= (type ($generated@@170 $generated@@182 $generated@@183 $generated@@184)) $generated@@185))
 :pattern ( ($generated@@170 $generated@@182 $generated@@183 $generated@@184))
))) (forall (($generated@@186 T@U) ($generated@@187 T@U) ($generated@@188 T@U) ($generated@@189 T@U) ) (! (let (($generated@@190 (type $generated@@189)))
(let (($generated@@191 (type $generated@@187)))
(= (type ($generated@@175 $generated@@186 $generated@@187 $generated@@188 $generated@@189)) ($generated@@172 $generated@@191 $generated@@190))))
 :pattern ( ($generated@@175 $generated@@186 $generated@@187 $generated@@188 $generated@@189))
))) (forall (($generated@@192 T@U) ($generated@@193 T@U) ($generated@@194 T@U) ($generated@@195 T@U) ) (! (let (($generated@@196 ($generated@@174 (type $generated@@192))))
 (=> (= (type $generated@@195) $generated@@196) (= ($generated@@170 ($generated@@175 $generated@@192 $generated@@193 $generated@@194 $generated@@195) $generated@@193 $generated@@194) $generated@@195)))
 :weight 0
))) (and (and (forall (($generated@@197 T@U) ($generated@@198 T@U) ($generated@@199 T@U) ($generated@@200 T@U) ($generated@@201 T@U) ($generated@@202 T@U) ) (!  (or (= $generated@@199 $generated@@201) (= ($generated@@170 ($generated@@175 $generated@@198 $generated@@199 $generated@@200 $generated@@197) $generated@@201 $generated@@202) ($generated@@170 $generated@@198 $generated@@201 $generated@@202)))
 :weight 0
)) (forall (($generated@@203 T@U) ($generated@@204 T@U) ($generated@@205 T@U) ($generated@@206 T@U) ($generated@@207 T@U) ($generated@@208 T@U) ) (!  (or (= $generated@@206 $generated@@208) (= ($generated@@170 ($generated@@175 $generated@@204 $generated@@205 $generated@@206 $generated@@203) $generated@@207 $generated@@208) ($generated@@170 $generated@@204 $generated@@207 $generated@@208)))
 :weight 0
))) (forall (($generated@@209 T@U) ($generated@@210 T@U) ($generated@@211 T@U) ($generated@@212 T@U) ($generated@@213 T@U) ($generated@@214 T@U) ) (!  (or true (= ($generated@@170 ($generated@@175 $generated@@210 $generated@@211 $generated@@212 $generated@@209) $generated@@213 $generated@@214) ($generated@@170 $generated@@210 $generated@@213 $generated@@214)))
 :weight 0
)))) (forall (($generated@@215 T@U) ($generated@@216 T@U) ($generated@@217 T@U) ($generated@@218 Bool) ) (! (= (type ($generated@@171 $generated@@215 $generated@@216 $generated@@217 $generated@@218)) ($generated@@172 $generated@@79 $generated@@4))
 :pattern ( ($generated@@171 $generated@@215 $generated@@216 $generated@@217 $generated@@218))
))))
(assert (forall (($generated@@219 T@U) ($generated@@220 T@U) ($generated@@221 T@U) ($generated@@222 Bool) ($generated@@223 T@U) ($generated@@224 T@U) ) (! (let (($generated@@225 ($generated@@69 (type $generated@@224))))
 (=> (and (and (and (and (= (type $generated@@219) $generated@@79) (= (type $generated@@220) ($generated@@78 $generated@@79 $generated@@80))) (= (type $generated@@221) ($generated@@68 $generated@@4))) (= (type $generated@@223) $generated@@79)) (= (type $generated@@224) ($generated@@68 $generated@@225))) (= ($generated@@0 ($generated@@170 ($generated@@171 $generated@@219 $generated@@220 $generated@@221 $generated@@222) $generated@@223 $generated@@224))  (=> (and (not (= $generated@@223 $generated@@219)) ($generated@@0 ($generated@@85 ($generated@@83 $generated@@220 $generated@@223) $generated@@221))) $generated@@222))))
 :pattern ( ($generated@@170 ($generated@@171 $generated@@219 $generated@@220 $generated@@221 $generated@@222) $generated@@223 $generated@@224))
)))
(assert (forall (($generated@@227 T@U) ) (! (= (type ($generated@@226 $generated@@227)) $generated@@162)
 :pattern ( ($generated@@226 $generated@@227))
)))
(assert  (=> (<= 1 $generated@@160) (forall (($generated@@228 T@U) ($generated@@229 T@U) ($generated@@230 T@U) ($generated@@231 T@U) ($generated@@232 Int) ) (!  (=> (and (and (and (and (= (type $generated@@228) $generated@@66) (= (type $generated@@229) $generated@@66)) (= (type $generated@@230) $generated@@66)) (= (type $generated@@231) $generated@@162)) (or ($generated@@163 $generated@@228 $generated@@229 $generated@@230 $generated@@232) (and (not (= 1 $generated@@160)) (<= ($generated@@164 0) $generated@@232)))) (and (=> (< 0 $generated@@232) ($generated@@163 $generated@@229 $generated@@228 $generated@@230 (- $generated@@232 1))) (= ($generated@@161 $generated@@228 $generated@@229 $generated@@230 ($generated@@226 $generated@@231) $generated@@232)  (=> (< 0 $generated@@232) ($generated@@161 $generated@@229 $generated@@228 $generated@@230 $generated@@231 (- $generated@@232 1))))))
 :pattern ( ($generated@@161 $generated@@228 $generated@@229 $generated@@230 ($generated@@226 $generated@@231) $generated@@232))
))))
(assert (forall (($generated@@235 T@U) ($generated@@236 T@U) ) (! (= (type ($generated@@233 $generated@@235 $generated@@236)) $generated@@141)
 :pattern ( ($generated@@233 $generated@@235 $generated@@236))
)))
(assert (forall (($generated@@237 T@U) ($generated@@238 T@U) ($generated@@239 T@U) ($generated@@240 T@U) ) (!  (=> (and (and (and (= (type $generated@@237) $generated@@66) (= (type $generated@@238) $generated@@66)) (= (type $generated@@239) $generated@@150)) (= (type $generated@@240) $generated@@150)) (= ($generated@@137 ($generated@@233 $generated@@239 $generated@@240) ($generated@@140 $generated@@237 $generated@@238))  (and ($generated@@234 $generated@@239 $generated@@237) ($generated@@234 $generated@@240 $generated@@238))))
 :pattern ( ($generated@@137 ($generated@@233 $generated@@239 $generated@@240) ($generated@@140 $generated@@237 $generated@@238)))
)))
(assert (forall (($generated@@241 T@U) ($generated@@242 T@U) ) (!  (=> (and (= (type $generated@@241) $generated@@141) (= (type $generated@@242) $generated@@141)) (= ($generated@@147 $generated@@241 $generated@@242) (= $generated@@241 $generated@@242)))
 :pattern ( ($generated@@147 $generated@@241 $generated@@242))
)))
(assert (forall (($generated@@244 T@U) ) (! (= (type ($generated@@243 $generated@@244)) $generated@@66)
 :pattern ( ($generated@@243 $generated@@244))
)))
(assert (forall (($generated@@245 T@U) ($generated@@246 T@U) ) (!  (=> (and (= (type $generated@@245) ($generated@@78 $generated@@150 $generated@@4)) (= (type $generated@@246) $generated@@66)) (= ($generated@@137 $generated@@245 ($generated@@243 $generated@@246)) (forall (($generated@@247 T@U) ) (!  (=> (and (= (type $generated@@247) $generated@@150) ($generated@@0 ($generated@@83 $generated@@245 $generated@@247))) ($generated@@234 $generated@@247 $generated@@246))
 :pattern ( ($generated@@83 $generated@@245 $generated@@247))
))))
 :pattern ( ($generated@@137 $generated@@245 ($generated@@243 $generated@@246)))
)))
(assert (forall (($generated@@249 T@U) ) (! (= (type ($generated@@248 $generated@@249)) $generated@@66)
 :pattern ( ($generated@@248 $generated@@249))
)))
(assert (forall (($generated@@250 T@U) ($generated@@251 T@U) ) (!  (=> (and (= (type $generated@@250) ($generated@@78 $generated@@150 $generated@@4)) (= (type $generated@@251) $generated@@66)) (= ($generated@@137 $generated@@250 ($generated@@248 $generated@@251)) (forall (($generated@@252 T@U) ) (!  (=> (and (= (type $generated@@252) $generated@@150) ($generated@@0 ($generated@@83 $generated@@250 $generated@@252))) ($generated@@234 $generated@@252 $generated@@251))
 :pattern ( ($generated@@83 $generated@@250 $generated@@252))
))))
 :pattern ( ($generated@@137 $generated@@250 ($generated@@248 $generated@@251)))
)))
(assert (forall (($generated@@253 Int) ) (! (= ($generated@@164 $generated@@253) $generated@@253)
 :pattern ( ($generated@@164 $generated@@253))
)))
(assert (forall (($generated@@255 T@U) ) (! (let (($generated@@256 (type $generated@@255)))
(= (type ($generated@@254 $generated@@255)) $generated@@256))
 :pattern ( ($generated@@254 $generated@@255))
)))
(assert (forall (($generated@@257 T@U) ) (! (= ($generated@@254 $generated@@257) $generated@@257)
 :pattern ( ($generated@@254 $generated@@257))
)))
(assert (forall (($generated@@260 T@U) ($generated@@261 T@U) ($generated@@262 T@U) ($generated@@263 T@U) ($generated@@264 T@U) ) (!  (=> (and (and (and (and (and (= (type $generated@@260) $generated@@66) (= (type $generated@@261) $generated@@66)) (= (type $generated@@262) $generated@@150)) (= (type $generated@@263) $generated@@150)) (= (type $generated@@264) ($generated@@78 $generated@@79 $generated@@80))) ($generated@@258 $generated@@264)) (= ($generated@@76 ($generated@@233 $generated@@262 $generated@@263) ($generated@@140 $generated@@260 $generated@@261) $generated@@264)  (and ($generated@@259 $generated@@262 $generated@@260 $generated@@264) ($generated@@259 $generated@@263 $generated@@261 $generated@@264))))
 :pattern ( ($generated@@76 ($generated@@233 $generated@@262 $generated@@263) ($generated@@140 $generated@@260 $generated@@261) $generated@@264))
)))
(assert (forall (($generated@@266 T@U) ) (! (= (type ($generated@@265 $generated@@266)) $generated@@70)
 :pattern ( ($generated@@265 $generated@@266))
)))
(assert (forall (($generated@@267 T@U) ) (!  (=> (= (type $generated@@267) $generated@@141) (= ($generated@@139 $generated@@267) (= ($generated@@265 $generated@@267) $generated@@62)))
 :pattern ( ($generated@@139 $generated@@267))
)))
(assert  (=> (<= 1 $generated@@160) (forall (($generated@@268 T@U) ($generated@@269 T@U) ($generated@@270 T@U) ($generated@@271 T@U) ($generated@@272 Int) ) (!  (=> (and (and (and (and (= (type $generated@@268) $generated@@66) (= (type $generated@@269) $generated@@66)) (= (type $generated@@270) $generated@@66)) (= (type $generated@@271) $generated@@162)) (or ($generated@@163 $generated@@268 $generated@@269 $generated@@270 ($generated@@164 $generated@@272)) (and (not (= 1 $generated@@160)) (<= ($generated@@164 0) $generated@@272)))) (and (=> (< 0 $generated@@272) ($generated@@163 $generated@@269 $generated@@268 $generated@@270 (- $generated@@272 1))) (= ($generated@@161 $generated@@268 $generated@@269 $generated@@270 ($generated@@226 $generated@@271) ($generated@@164 $generated@@272))  (=> (< 0 $generated@@272) ($generated@@161 $generated@@269 $generated@@268 $generated@@270 ($generated@@226 $generated@@271) (- $generated@@272 1))))))
 :weight 3
 :pattern ( ($generated@@161 $generated@@268 $generated@@269 $generated@@270 ($generated@@226 $generated@@271) ($generated@@164 $generated@@272)))
))))
(assert (forall (($generated@@273 T@U) ) (!  (=> (and (= (type $generated@@273) $generated@@141) ($generated@@139 $generated@@273)) (exists (($generated@@274 T@U) ($generated@@275 T@U) ) (!  (and (and (= (type $generated@@274) $generated@@150) (= (type $generated@@275) $generated@@150)) (= $generated@@273 ($generated@@233 $generated@@274 $generated@@275)))
 :no-pattern (type $generated@@274)
 :no-pattern (type $generated@@275)
 :no-pattern ($generated $generated@@274)
 :no-pattern ($generated@@0 $generated@@274)
 :no-pattern ($generated $generated@@275)
 :no-pattern ($generated@@0 $generated@@275)
)))
 :pattern ( ($generated@@139 $generated@@273))
)))
(assert  (and (and (forall (($generated@@280 T@T) ) (= ($generated@@1 ($generated@@278 $generated@@280)) 18)) (forall (($generated@@281 T@T) ) (! (= ($generated@@279 ($generated@@278 $generated@@281)) $generated@@281)
 :pattern ( ($generated@@278 $generated@@281))
))) (forall (($generated@@282 T@T) ) (! (= (type ($generated@@276 $generated@@282)) ($generated@@278 $generated@@282))
 :pattern ( ($generated@@276 $generated@@282))
))))
(assert (forall (($generated@@283 T@T) ) (! (= ($generated@@277 ($generated@@276 $generated@@283)) 0)
 :pattern ( ($generated@@276 $generated@@283))
)))
(assert (forall (($generated@@284 T@U) ) (!  (=> (= (type $generated@@284) $generated@@2) (= ($generated@@137 $generated@@284 $generated@@134) (<= ($generated@@164 0) ($generated $generated@@284))))
 :pattern ( ($generated@@137 $generated@@284 $generated@@134))
)))
(assert (forall (($generated@@286 T@U) ) (! (= (type ($generated@@285 $generated@@286)) $generated@@150)
 :pattern ( ($generated@@285 $generated@@286))
)))
(assert (forall (($generated@@287 T@U) ($generated@@288 T@U) ($generated@@289 T@U) ) (!  (=> (and (= (type $generated@@288) $generated@@66) (= (type $generated@@289) ($generated@@78 $generated@@79 $generated@@80))) (= ($generated@@259 ($generated@@285 $generated@@287) $generated@@288 $generated@@289) ($generated@@76 $generated@@287 $generated@@288 $generated@@289)))
 :pattern ( ($generated@@259 ($generated@@285 $generated@@287) $generated@@288 $generated@@289))
)))
(assert (forall (($generated@@292 T@T) ) (! (= (type ($generated@@291 $generated@@292)) ($generated@@78 $generated@@292 $generated@@2))
 :pattern ( ($generated@@291 $generated@@292))
)))
(assert (forall (($generated@@293 T@U) ) (! (let (($generated@@294 ($generated@@81 (type $generated@@293))))
 (=> (= (type $generated@@293) ($generated@@78 $generated@@294 $generated@@2)) (and (= (= ($generated@@290 $generated@@293) 0) (= $generated@@293 ($generated@@291 $generated@@294))) (=> (not (= ($generated@@290 $generated@@293) 0)) (exists (($generated@@295 T@U) ) (!  (and (= (type $generated@@295) $generated@@294) (< 0 ($generated ($generated@@83 $generated@@293 $generated@@295))))
 :no-pattern (type $generated@@295)
 :no-pattern ($generated $generated@@295)
 :no-pattern ($generated@@0 $generated@@295)
))))))
 :pattern ( ($generated@@290 $generated@@293))
)))
(assert  (and (and (and (and (forall (($generated@@301 T@T) ($generated@@302 T@T) ) (= ($generated@@1 ($generated@@298 $generated@@301 $generated@@302)) 19)) (forall (($generated@@303 T@T) ($generated@@304 T@T) ) (! (= ($generated@@299 ($generated@@298 $generated@@303 $generated@@304)) $generated@@303)
 :pattern ( ($generated@@298 $generated@@303 $generated@@304))
))) (forall (($generated@@305 T@T) ($generated@@306 T@T) ) (! (= ($generated@@300 ($generated@@298 $generated@@305 $generated@@306)) $generated@@306)
 :pattern ( ($generated@@298 $generated@@305 $generated@@306))
))) (forall (($generated@@307 T@U) ) (! (let (($generated@@308 ($generated@@299 (type $generated@@307))))
(= (type ($generated@@296 $generated@@307)) ($generated@@78 $generated@@308 $generated@@4)))
 :pattern ( ($generated@@296 $generated@@307))
))) (forall (($generated@@309 T@T) ($generated@@310 T@T) ) (! (= (type ($generated@@297 $generated@@309 $generated@@310)) ($generated@@298 $generated@@309 $generated@@310))
 :pattern ( ($generated@@297 $generated@@309 $generated@@310))
))))
(assert (forall (($generated@@311 T@U) ($generated@@312 T@T) ) (! (let (($generated@@313 (type $generated@@311)))
 (not ($generated@@0 ($generated@@83 ($generated@@296 ($generated@@297 $generated@@313 $generated@@312)) $generated@@311))))
 :pattern ( (let (($generated@@313 (type $generated@@311)))
($generated@@83 ($generated@@296 ($generated@@297 $generated@@313 $generated@@312)) $generated@@311)))
)))
(assert  (and (and (and (and (forall (($generated@@319 T@T) ($generated@@320 T@T) ) (= ($generated@@1 ($generated@@316 $generated@@319 $generated@@320)) 20)) (forall (($generated@@321 T@T) ($generated@@322 T@T) ) (! (= ($generated@@317 ($generated@@316 $generated@@321 $generated@@322)) $generated@@321)
 :pattern ( ($generated@@316 $generated@@321 $generated@@322))
))) (forall (($generated@@323 T@T) ($generated@@324 T@T) ) (! (= ($generated@@318 ($generated@@316 $generated@@323 $generated@@324)) $generated@@324)
 :pattern ( ($generated@@316 $generated@@323 $generated@@324))
))) (forall (($generated@@325 T@U) ) (! (let (($generated@@326 ($generated@@317 (type $generated@@325))))
(= (type ($generated@@314 $generated@@325)) ($generated@@78 $generated@@326 $generated@@4)))
 :pattern ( ($generated@@314 $generated@@325))
))) (forall (($generated@@327 T@T) ($generated@@328 T@T) ) (! (= (type ($generated@@315 $generated@@327 $generated@@328)) ($generated@@316 $generated@@327 $generated@@328))
 :pattern ( ($generated@@315 $generated@@327 $generated@@328))
))))
(assert (forall (($generated@@329 T@U) ($generated@@330 T@T) ) (! (let (($generated@@331 (type $generated@@329)))
 (not ($generated@@0 ($generated@@83 ($generated@@314 ($generated@@315 $generated@@331 $generated@@330)) $generated@@329))))
 :pattern ( (let (($generated@@331 (type $generated@@329)))
($generated@@83 ($generated@@314 ($generated@@315 $generated@@331 $generated@@330)) $generated@@329)))
)))
(assert  (and (forall (($generated@@334 T@U) ) (! (= (type ($generated@@332 $generated@@334)) $generated@@162)
 :pattern ( ($generated@@332 $generated@@334))
)) (= (type $generated@@333) $generated@@162)))
(assert (forall (($generated@@335 T@U) ($generated@@336 T@U) ($generated@@337 T@U) ($generated@@338 T@U) ($generated@@339 Int) ) (!  (=> (and (and (and (= (type $generated@@335) $generated@@66) (= (type $generated@@336) $generated@@66)) (= (type $generated@@337) $generated@@66)) (= (type $generated@@338) $generated@@162)) (= ($generated@@161 $generated@@335 $generated@@336 $generated@@337 $generated@@338 $generated@@339) ($generated@@161 $generated@@335 $generated@@336 $generated@@337 $generated@@333 $generated@@339)))
 :pattern ( ($generated@@161 $generated@@335 $generated@@336 $generated@@337 ($generated@@332 $generated@@338) $generated@@339))
)))
(assert (forall (($generated@@340 T@U) ) (! (let (($generated@@341 ($generated@@81 (type $generated@@340))))
 (=> (= (type $generated@@340) ($generated@@78 $generated@@341 $generated@@2)) (= ($generated@@156 $generated@@340) (forall (($generated@@342 T@U) ) (!  (=> (= (type $generated@@342) $generated@@341) (and (<= 0 ($generated ($generated@@83 $generated@@340 $generated@@342))) (<= ($generated ($generated@@83 $generated@@340 $generated@@342)) ($generated@@290 $generated@@340))))
 :pattern ( ($generated@@83 $generated@@340 $generated@@342))
)))))
 :pattern ( ($generated@@156 $generated@@340))
)))
(assert  (=> (<= 1 $generated@@160) (forall (($generated@@343 T@U) ($generated@@344 T@U) ($generated@@345 T@U) ($generated@@346 T@U) ($generated@@347 Int) ) (!  (=> (and (and (and (and (= (type $generated@@343) $generated@@66) (= (type $generated@@344) $generated@@66)) (= (type $generated@@345) $generated@@66)) (= (type $generated@@346) $generated@@162)) (= $generated@@347 0)) ($generated@@161 $generated@@343 $generated@@344 $generated@@345 $generated@@346 $generated@@347))
 :pattern ( ($generated@@161 $generated@@343 $generated@@344 $generated@@345 $generated@@346 $generated@@347))
))))
(assert (forall (($generated@@349 T@T) ($generated@@350 T@U) ) (! (= (type ($generated@@348 $generated@@349 $generated@@350)) $generated@@349)
 :pattern ( ($generated@@348 $generated@@349 $generated@@350))
)))
(assert (forall (($generated@@351 T@U) ) (!  (=> (and (= (type $generated@@351) $generated@@150) ($generated@@234 $generated@@351 $generated@@134)) (and (= ($generated@@285 ($generated@@348 $generated@@2 $generated@@351)) $generated@@351) ($generated@@137 ($generated@@348 $generated@@2 $generated@@351) $generated@@134)))
 :pattern ( ($generated@@234 $generated@@351 $generated@@134))
)))
(assert (forall (($generated@@352 T@U) ) (! (let (($generated@@353 ($generated@@300 (type $generated@@352))))
(let (($generated@@354 ($generated@@299 (type $generated@@352))))
 (=> (= (type $generated@@352) ($generated@@298 $generated@@354 $generated@@353)) (or (= $generated@@352 ($generated@@297 $generated@@354 $generated@@353)) (exists (($generated@@355 T@U) ) (!  (and (= (type $generated@@355) $generated@@354) ($generated@@0 ($generated@@83 ($generated@@296 $generated@@352) $generated@@355)))
 :no-pattern (type $generated@@355)
 :no-pattern ($generated $generated@@355)
 :no-pattern ($generated@@0 $generated@@355)
))))))
 :pattern ( ($generated@@296 $generated@@352))
)))
(assert (forall (($generated@@357 T@U) ) (! (let (($generated@@358 ($generated@@300 (type $generated@@357))))
(= (type ($generated@@356 $generated@@357)) ($generated@@78 $generated@@358 $generated@@4)))
 :pattern ( ($generated@@356 $generated@@357))
)))
(assert (forall (($generated@@359 T@U) ) (! (let (($generated@@360 ($generated@@300 (type $generated@@359))))
(let (($generated@@361 ($generated@@299 (type $generated@@359))))
 (=> (= (type $generated@@359) ($generated@@298 $generated@@361 $generated@@360)) (or (= $generated@@359 ($generated@@297 $generated@@361 $generated@@360)) (exists (($generated@@362 T@U) ) (!  (and (= (type $generated@@362) $generated@@360) ($generated@@0 ($generated@@83 ($generated@@356 $generated@@359) $generated@@362)))
 :no-pattern (type $generated@@362)
 :no-pattern ($generated $generated@@362)
 :no-pattern ($generated@@0 $generated@@362)
))))))
 :pattern ( ($generated@@356 $generated@@359))
)))
(assert (forall (($generated@@363 T@U) ) (! (let (($generated@@364 ($generated@@318 (type $generated@@363))))
(let (($generated@@365 ($generated@@317 (type $generated@@363))))
 (=> (= (type $generated@@363) ($generated@@316 $generated@@365 $generated@@364)) (or (= $generated@@363 ($generated@@315 $generated@@365 $generated@@364)) (exists (($generated@@366 T@U) ) (!  (and (= (type $generated@@366) $generated@@365) ($generated@@0 ($generated@@83 ($generated@@314 $generated@@363) $generated@@366)))
 :no-pattern (type $generated@@366)
 :no-pattern ($generated $generated@@366)
 :no-pattern ($generated@@0 $generated@@366)
))))))
 :pattern ( ($generated@@314 $generated@@363))
)))
(assert (forall (($generated@@368 T@U) ) (! (let (($generated@@369 ($generated@@318 (type $generated@@368))))
(= (type ($generated@@367 $generated@@368)) ($generated@@78 $generated@@369 $generated@@4)))
 :pattern ( ($generated@@367 $generated@@368))
)))
(assert (forall (($generated@@370 T@U) ) (! (let (($generated@@371 ($generated@@318 (type $generated@@370))))
(let (($generated@@372 ($generated@@317 (type $generated@@370))))
 (=> (= (type $generated@@370) ($generated@@316 $generated@@372 $generated@@371)) (or (= $generated@@370 ($generated@@315 $generated@@372 $generated@@371)) (exists (($generated@@373 T@U) ) (!  (and (= (type $generated@@373) $generated@@371) ($generated@@0 ($generated@@83 ($generated@@367 $generated@@370) $generated@@373)))
 :no-pattern (type $generated@@373)
 :no-pattern ($generated $generated@@373)
 :no-pattern ($generated@@0 $generated@@373)
))))))
 :pattern ( ($generated@@367 $generated@@370))
)))
(assert (forall (($generated@@374 T@U) ($generated@@375 T@U) ($generated@@376 T@U) ($generated@@377 T@U) ($generated@@378 Int) ) (!  (=> (and (and (and (= (type $generated@@374) $generated@@66) (= (type $generated@@375) $generated@@66)) (= (type $generated@@376) $generated@@66)) (= (type $generated@@377) $generated@@162)) (= ($generated@@161 $generated@@374 $generated@@375 $generated@@376 ($generated@@226 $generated@@377) $generated@@378) ($generated@@161 $generated@@374 $generated@@375 $generated@@376 $generated@@377 $generated@@378)))
 :pattern ( ($generated@@161 $generated@@374 $generated@@375 $generated@@376 ($generated@@226 $generated@@377) $generated@@378))
)))
(assert (forall (($generated@@379 T@U) ($generated@@380 T@U) ) (!  (=> (and (= (type $generated@@379) ($generated@@78 $generated@@150 $generated@@2)) (= (type $generated@@380) $generated@@66)) (= ($generated@@137 $generated@@379 ($generated@@155 $generated@@380)) (forall (($generated@@381 T@U) ) (!  (=> (and (= (type $generated@@381) $generated@@150) (< 0 ($generated ($generated@@83 $generated@@379 $generated@@381)))) ($generated@@234 $generated@@381 $generated@@380))
 :pattern ( ($generated@@83 $generated@@379 $generated@@381))
))))
 :pattern ( ($generated@@137 $generated@@379 ($generated@@155 $generated@@380)))
)))
(assert (forall (($generated@@382 T@U) ($generated@@383 T@U) ($generated@@384 T@U) ) (!  (=> (and (and (= (type $generated@@382) ($generated@@78 $generated@@150 $generated@@4)) (= (type $generated@@383) $generated@@66)) (= (type $generated@@384) ($generated@@78 $generated@@79 $generated@@80))) (= ($generated@@76 $generated@@382 ($generated@@243 $generated@@383) $generated@@384) (forall (($generated@@385 T@U) ) (!  (=> (and (= (type $generated@@385) $generated@@150) ($generated@@0 ($generated@@83 $generated@@382 $generated@@385))) ($generated@@259 $generated@@385 $generated@@383 $generated@@384))
 :pattern ( ($generated@@83 $generated@@382 $generated@@385))
))))
 :pattern ( ($generated@@76 $generated@@382 ($generated@@243 $generated@@383) $generated@@384))
)))
(assert (forall (($generated@@386 T@U) ($generated@@387 T@U) ($generated@@388 T@U) ) (!  (=> (and (and (= (type $generated@@386) ($generated@@78 $generated@@150 $generated@@4)) (= (type $generated@@387) $generated@@66)) (= (type $generated@@388) ($generated@@78 $generated@@79 $generated@@80))) (= ($generated@@76 $generated@@386 ($generated@@248 $generated@@387) $generated@@388) (forall (($generated@@389 T@U) ) (!  (=> (and (= (type $generated@@389) $generated@@150) ($generated@@0 ($generated@@83 $generated@@386 $generated@@389))) ($generated@@259 $generated@@389 $generated@@387 $generated@@388))
 :pattern ( ($generated@@83 $generated@@386 $generated@@389))
))))
 :pattern ( ($generated@@76 $generated@@386 ($generated@@248 $generated@@387) $generated@@388))
)))
(assert (forall (($generated@@390 T@U) ) (! (let (($generated@@391 (type $generated@@390)))
(= ($generated ($generated@@83 ($generated@@291 $generated@@391) $generated@@390)) 0))
 :pattern ( (let (($generated@@391 (type $generated@@390)))
($generated@@83 ($generated@@291 $generated@@391) $generated@@390)))
)))
(assert  (and (forall (($generated@@394 T@U) ) (! (= (type ($generated@@392 $generated@@394)) ($generated@@78 $generated@@150 $generated@@4))
 :pattern ( ($generated@@392 $generated@@394))
)) (forall (($generated@@395 T@U) ) (! (let (($generated@@396 ($generated@@300 (type $generated@@395))))
(let (($generated@@397 ($generated@@299 (type $generated@@395))))
(= (type ($generated@@393 $generated@@395)) ($generated@@78 $generated@@397 $generated@@396))))
 :pattern ( ($generated@@393 $generated@@395))
))))
(assert (forall (($generated@@398 T@U) ($generated@@399 T@U) ) (!  (=> (and (= (type $generated@@398) ($generated@@298 $generated@@150 $generated@@150)) (= (type $generated@@399) $generated@@150)) (= ($generated@@0 ($generated@@83 ($generated@@392 $generated@@398) $generated@@399))  (and ($generated@@0 ($generated@@83 ($generated@@296 $generated@@398) ($generated@@148 ($generated@@348 $generated@@141 $generated@@399)))) (= ($generated@@83 ($generated@@393 $generated@@398) ($generated@@148 ($generated@@348 $generated@@141 $generated@@399))) ($generated@@149 ($generated@@348 $generated@@141 $generated@@399))))))
 :pattern ( ($generated@@83 ($generated@@392 $generated@@398) $generated@@399))
)))
(assert  (and (forall (($generated@@402 T@U) ) (! (= (type ($generated@@400 $generated@@402)) ($generated@@78 $generated@@150 $generated@@4))
 :pattern ( ($generated@@400 $generated@@402))
)) (forall (($generated@@403 T@U) ) (! (let (($generated@@404 ($generated@@318 (type $generated@@403))))
(let (($generated@@405 ($generated@@317 (type $generated@@403))))
(= (type ($generated@@401 $generated@@403)) ($generated@@78 $generated@@405 $generated@@404))))
 :pattern ( ($generated@@401 $generated@@403))
))))
(assert (forall (($generated@@406 T@U) ($generated@@407 T@U) ) (!  (=> (and (= (type $generated@@406) ($generated@@316 $generated@@150 $generated@@150)) (= (type $generated@@407) $generated@@150)) (= ($generated@@0 ($generated@@83 ($generated@@400 $generated@@406) $generated@@407))  (and ($generated@@0 ($generated@@83 ($generated@@314 $generated@@406) ($generated@@148 ($generated@@348 $generated@@141 $generated@@407)))) (= ($generated@@83 ($generated@@401 $generated@@406) ($generated@@148 ($generated@@348 $generated@@141 $generated@@407))) ($generated@@149 ($generated@@348 $generated@@141 $generated@@407))))))
 :pattern ( ($generated@@83 ($generated@@400 $generated@@406) $generated@@407))
)))
(assert (forall (($generated@@408 T@U) ($generated@@409 T@U) ) (! (let (($generated@@410 (type $generated@@409)))
(let (($generated@@411 ($generated@@299 (type $generated@@408))))
 (=> (= (type $generated@@408) ($generated@@298 $generated@@411 $generated@@410)) (= ($generated@@0 ($generated@@83 ($generated@@356 $generated@@408) $generated@@409)) (exists (($generated@@412 T@U) ) (!  (and (= (type $generated@@412) $generated@@411) (and ($generated@@0 ($generated@@83 ($generated@@296 $generated@@408) $generated@@412)) (= $generated@@409 ($generated@@83 ($generated@@393 $generated@@408) $generated@@412))))
 :pattern ( ($generated@@83 ($generated@@296 $generated@@408) $generated@@412))
 :pattern ( ($generated@@83 ($generated@@393 $generated@@408) $generated@@412))
))))))
 :pattern ( ($generated@@83 ($generated@@356 $generated@@408) $generated@@409))
)))
(assert (forall (($generated@@413 T@U) ($generated@@414 T@U) ) (! (let (($generated@@415 (type $generated@@414)))
(let (($generated@@416 ($generated@@317 (type $generated@@413))))
 (=> (= (type $generated@@413) ($generated@@316 $generated@@416 $generated@@415)) (= ($generated@@0 ($generated@@83 ($generated@@367 $generated@@413) $generated@@414)) (exists (($generated@@417 T@U) ) (!  (and (= (type $generated@@417) $generated@@416) (and ($generated@@0 ($generated@@83 ($generated@@314 $generated@@413) $generated@@417)) (= $generated@@414 ($generated@@83 ($generated@@401 $generated@@413) $generated@@417))))
 :pattern ( ($generated@@83 ($generated@@314 $generated@@413) $generated@@417))
 :pattern ( ($generated@@83 ($generated@@401 $generated@@413) $generated@@417))
))))))
 :pattern ( ($generated@@83 ($generated@@367 $generated@@413) $generated@@414))
)))
(assert (forall (($generated@@419 T@U) ($generated@@420 T@U) ) (! (= (type ($generated@@418 $generated@@419 $generated@@420)) $generated@@66)
 :pattern ( ($generated@@418 $generated@@419 $generated@@420))
)))
(assert (forall (($generated@@421 T@U) ($generated@@422 T@U) ($generated@@423 T@U) ($generated@@424 T@U) ) (!  (=> (and (and (and (= (type $generated@@421) ($generated@@298 $generated@@150 $generated@@150)) (= (type $generated@@422) $generated@@66)) (= (type $generated@@423) $generated@@66)) (= (type $generated@@424) ($generated@@78 $generated@@79 $generated@@80))) (= ($generated@@76 $generated@@421 ($generated@@418 $generated@@422 $generated@@423) $generated@@424) (forall (($generated@@425 T@U) ) (!  (=> (and (= (type $generated@@425) $generated@@150) ($generated@@0 ($generated@@83 ($generated@@296 $generated@@421) $generated@@425))) (and ($generated@@259 ($generated@@83 ($generated@@393 $generated@@421) $generated@@425) $generated@@423 $generated@@424) ($generated@@259 $generated@@425 $generated@@422 $generated@@424)))
 :pattern ( ($generated@@83 ($generated@@393 $generated@@421) $generated@@425))
 :pattern ( ($generated@@83 ($generated@@296 $generated@@421) $generated@@425))
))))
 :pattern ( ($generated@@76 $generated@@421 ($generated@@418 $generated@@422 $generated@@423) $generated@@424))
)))
(assert (forall (($generated@@427 T@U) ($generated@@428 T@U) ) (! (= (type ($generated@@426 $generated@@427 $generated@@428)) $generated@@66)
 :pattern ( ($generated@@426 $generated@@427 $generated@@428))
)))
(assert (forall (($generated@@429 T@U) ($generated@@430 T@U) ($generated@@431 T@U) ($generated@@432 T@U) ) (!  (=> (and (and (and (= (type $generated@@429) ($generated@@316 $generated@@150 $generated@@150)) (= (type $generated@@430) $generated@@66)) (= (type $generated@@431) $generated@@66)) (= (type $generated@@432) ($generated@@78 $generated@@79 $generated@@80))) (= ($generated@@76 $generated@@429 ($generated@@426 $generated@@430 $generated@@431) $generated@@432) (forall (($generated@@433 T@U) ) (!  (=> (and (= (type $generated@@433) $generated@@150) ($generated@@0 ($generated@@83 ($generated@@314 $generated@@429) $generated@@433))) (and ($generated@@259 ($generated@@83 ($generated@@401 $generated@@429) $generated@@433) $generated@@431 $generated@@432) ($generated@@259 $generated@@433 $generated@@430 $generated@@432)))
 :pattern ( ($generated@@83 ($generated@@401 $generated@@429) $generated@@433))
 :pattern ( ($generated@@83 ($generated@@314 $generated@@429) $generated@@433))
))))
 :pattern ( ($generated@@76 $generated@@429 ($generated@@426 $generated@@430 $generated@@431) $generated@@432))
)))
(assert (forall (($generated@@435 T@T) ) (! (= (type ($generated@@434 $generated@@435)) ($generated@@78 $generated@@435 $generated@@4))
 :pattern ( ($generated@@434 $generated@@435))
)))
(assert (forall (($generated@@436 T@U) ) (! (let (($generated@@437 ($generated@@318 (type $generated@@436))))
(let (($generated@@438 ($generated@@317 (type $generated@@436))))
 (=> (= (type $generated@@436) ($generated@@316 $generated@@438 $generated@@437)) (= (= $generated@@436 ($generated@@315 $generated@@438 $generated@@437)) (= ($generated@@314 $generated@@436) ($generated@@434 $generated@@438))))))
 :pattern ( ($generated@@314 $generated@@436))
)))
(assert (forall (($generated@@439 T@U) ) (! (let (($generated@@440 ($generated@@318 (type $generated@@439))))
(let (($generated@@441 ($generated@@317 (type $generated@@439))))
 (=> (= (type $generated@@439) ($generated@@316 $generated@@441 $generated@@440)) (= (= $generated@@439 ($generated@@315 $generated@@441 $generated@@440)) (= ($generated@@367 $generated@@439) ($generated@@434 $generated@@440))))))
 :pattern ( ($generated@@367 $generated@@439))
)))
(assert (forall (($generated@@442 T@U) ) (! (let (($generated@@443 ($generated@@318 (type $generated@@442))))
(let (($generated@@444 ($generated@@317 (type $generated@@442))))
 (=> (= (type $generated@@442) ($generated@@316 $generated@@444 $generated@@443)) (= (= $generated@@442 ($generated@@315 $generated@@444 $generated@@443)) (= ($generated@@400 $generated@@442) ($generated@@434 $generated@@150))))))
 :pattern ( ($generated@@400 $generated@@442))
)))
(assert (forall (($generated@@445 T@U) ) (! (let (($generated@@446 ($generated@@300 (type $generated@@445))))
(let (($generated@@447 ($generated@@299 (type $generated@@445))))
 (=> (= (type $generated@@445) ($generated@@298 $generated@@447 $generated@@446)) (or (= $generated@@445 ($generated@@297 $generated@@447 $generated@@446)) (exists (($generated@@448 T@U) ($generated@@449 T@U) ) (!  (and (and (= (type $generated@@448) $generated@@150) (= (type $generated@@449) $generated@@150)) ($generated@@0 ($generated@@83 ($generated@@392 $generated@@445) ($generated@@285 ($generated@@233 $generated@@448 $generated@@449)))))
 :no-pattern (type $generated@@448)
 :no-pattern (type $generated@@449)
 :no-pattern ($generated $generated@@448)
 :no-pattern ($generated@@0 $generated@@448)
 :no-pattern ($generated $generated@@449)
 :no-pattern ($generated@@0 $generated@@449)
))))))
 :pattern ( ($generated@@392 $generated@@445))
)))
(assert (forall (($generated@@450 T@U) ) (! (let (($generated@@451 ($generated@@318 (type $generated@@450))))
(let (($generated@@452 ($generated@@317 (type $generated@@450))))
 (=> (= (type $generated@@450) ($generated@@316 $generated@@452 $generated@@451)) (or (= $generated@@450 ($generated@@315 $generated@@452 $generated@@451)) (exists (($generated@@453 T@U) ($generated@@454 T@U) ) (!  (and (and (= (type $generated@@453) $generated@@150) (= (type $generated@@454) $generated@@150)) ($generated@@0 ($generated@@83 ($generated@@400 $generated@@450) ($generated@@285 ($generated@@233 $generated@@453 $generated@@454)))))
 :no-pattern (type $generated@@453)
 :no-pattern (type $generated@@454)
 :no-pattern ($generated $generated@@453)
 :no-pattern ($generated@@0 $generated@@453)
 :no-pattern ($generated $generated@@454)
 :no-pattern ($generated@@0 $generated@@454)
))))))
 :pattern ( ($generated@@400 $generated@@450))
)))
(assert (forall (($generated@@455 T@U) ) (!  (=> (and (= (type $generated@@455) $generated@@150) ($generated@@234 $generated@@455 $generated@@46)) (and (= ($generated@@285 ($generated@@348 $generated@@2 $generated@@455)) $generated@@455) ($generated@@137 ($generated@@348 $generated@@2 $generated@@455) $generated@@46)))
 :pattern ( ($generated@@234 $generated@@455 $generated@@46))
)))
(assert (forall (($generated@@456 T@U) ) (!  (=> (and (= (type $generated@@456) $generated@@150) ($generated@@234 $generated@@456 $generated@@47)) (and (= ($generated@@285 ($generated@@348 $generated@@3 $generated@@456)) $generated@@456) ($generated@@137 ($generated@@348 $generated@@3 $generated@@456) $generated@@47)))
 :pattern ( ($generated@@234 $generated@@456 $generated@@47))
)))
(assert (forall (($generated@@457 T@U) ) (!  (=> (and (= (type $generated@@457) $generated@@150) ($generated@@234 $generated@@457 $generated@@44)) (and (= ($generated@@285 ($generated@@348 $generated@@4 $generated@@457)) $generated@@457) ($generated@@137 ($generated@@348 $generated@@4 $generated@@457) $generated@@44)))
 :pattern ( ($generated@@234 $generated@@457 $generated@@44))
)))
(assert (= ($generated@@1 $generated@@458) 21))
(assert (forall (($generated@@459 T@U) ) (!  (=> (and (= (type $generated@@459) $generated@@150) ($generated@@234 $generated@@459 $generated@@45)) (and (= ($generated@@285 ($generated@@348 $generated@@458 $generated@@459)) $generated@@459) ($generated@@137 ($generated@@348 $generated@@458 $generated@@459) $generated@@45)))
 :pattern ( ($generated@@234 $generated@@459 $generated@@45))
)))
(assert (forall (($generated@@460 T@U) ($generated@@461 T@U) ) (!  (=> (= (type $generated@@461) $generated@@66) (= ($generated@@234 ($generated@@285 $generated@@460) $generated@@461) ($generated@@137 $generated@@460 $generated@@461)))
 :pattern ( ($generated@@234 ($generated@@285 $generated@@460) $generated@@461))
)))
(assert (forall (($generated@@462 T@U) ) (! (let (($generated@@463 ($generated@@81 (type $generated@@462))))
 (=> (= (type $generated@@462) ($generated@@78 $generated@@463 $generated@@2)) (<= 0 ($generated@@290 $generated@@462))))
 :pattern ( ($generated@@290 $generated@@462))
)))
(assert (forall (($generated@@464 T@U) ) (! (let (($generated@@465 ($generated@@279 (type $generated@@464))))
 (=> (= (type $generated@@464) ($generated@@278 $generated@@465)) (<= 0 ($generated@@277 $generated@@464))))
 :pattern ( ($generated@@277 $generated@@464))
)))
(assert (forall (($generated@@467 T@U) ) (! (= (type ($generated@@466 $generated@@467)) $generated@@66)
 :pattern ( ($generated@@466 $generated@@467))
)))
(assert (forall (($generated@@468 T@U) ($generated@@469 T@U) ) (!  (=> (and (= (type $generated@@468) $generated@@66) (= (type $generated@@469) $generated@@66)) (= ($generated@@466 ($generated@@418 $generated@@468 $generated@@469)) $generated@@468))
 :pattern ( ($generated@@418 $generated@@468 $generated@@469))
)))
(assert (forall (($generated@@471 T@U) ) (! (= (type ($generated@@470 $generated@@471)) $generated@@66)
 :pattern ( ($generated@@470 $generated@@471))
)))
(assert (forall (($generated@@472 T@U) ($generated@@473 T@U) ) (!  (=> (and (= (type $generated@@472) $generated@@66) (= (type $generated@@473) $generated@@66)) (= ($generated@@470 ($generated@@418 $generated@@472 $generated@@473)) $generated@@473))
 :pattern ( ($generated@@418 $generated@@472 $generated@@473))
)))
(assert (forall (($generated@@474 T@U) ($generated@@475 T@U) ) (!  (=> (and (= (type $generated@@474) $generated@@66) (= (type $generated@@475) $generated@@66)) (= ($generated@@74 ($generated@@418 $generated@@474 $generated@@475)) $generated@@58))
 :pattern ( ($generated@@418 $generated@@474 $generated@@475))
)))
(assert (forall (($generated@@477 T@U) ) (! (= (type ($generated@@476 $generated@@477)) $generated@@66)
 :pattern ( ($generated@@476 $generated@@477))
)))
(assert (forall (($generated@@478 T@U) ($generated@@479 T@U) ) (!  (=> (and (= (type $generated@@478) $generated@@66) (= (type $generated@@479) $generated@@66)) (= ($generated@@476 ($generated@@426 $generated@@478 $generated@@479)) $generated@@478))
 :pattern ( ($generated@@426 $generated@@478 $generated@@479))
)))
(assert (forall (($generated@@481 T@U) ) (! (= (type ($generated@@480 $generated@@481)) $generated@@66)
 :pattern ( ($generated@@480 $generated@@481))
)))
(assert (forall (($generated@@482 T@U) ($generated@@483 T@U) ) (!  (=> (and (= (type $generated@@482) $generated@@66) (= (type $generated@@483) $generated@@66)) (= ($generated@@480 ($generated@@426 $generated@@482 $generated@@483)) $generated@@483))
 :pattern ( ($generated@@426 $generated@@482 $generated@@483))
)))
(assert (forall (($generated@@484 T@U) ($generated@@485 T@U) ) (!  (=> (and (= (type $generated@@484) $generated@@66) (= (type $generated@@485) $generated@@66)) (= ($generated@@74 ($generated@@426 $generated@@484 $generated@@485)) $generated@@59))
 :pattern ( ($generated@@426 $generated@@484 $generated@@485))
)))
(assert (forall (($generated@@486 T@U) ($generated@@487 T@U) ) (!  (=> (and (= (type $generated@@486) $generated@@150) (= (type $generated@@487) $generated@@150)) (= ($generated@@265 ($generated@@233 $generated@@486 $generated@@487)) $generated@@62))
 :pattern ( ($generated@@233 $generated@@486 $generated@@487))
)))
(assert (forall (($generated@@489 T@U) ) (! (= (type ($generated@@488 $generated@@489)) $generated@@66)
 :pattern ( ($generated@@488 $generated@@489))
)))
(assert (forall (($generated@@490 T@U) ($generated@@491 T@U) ) (!  (=> (and (= (type $generated@@490) $generated@@66) (= (type $generated@@491) $generated@@66)) (= ($generated@@488 ($generated@@140 $generated@@490 $generated@@491)) $generated@@490))
 :pattern ( ($generated@@140 $generated@@490 $generated@@491))
)))
(assert (forall (($generated@@493 T@U) ) (! (= (type ($generated@@492 $generated@@493)) $generated@@66)
 :pattern ( ($generated@@492 $generated@@493))
)))
(assert (forall (($generated@@494 T@U) ($generated@@495 T@U) ) (!  (=> (and (= (type $generated@@494) $generated@@66) (= (type $generated@@495) $generated@@66)) (= ($generated@@492 ($generated@@140 $generated@@494 $generated@@495)) $generated@@495))
 :pattern ( ($generated@@140 $generated@@494 $generated@@495))
)))
(assert (forall (($generated@@496 T@U) ($generated@@497 T@U) ) (!  (=> (and (= (type $generated@@496) $generated@@150) (= (type $generated@@497) $generated@@150)) (= ($generated@@148 ($generated@@233 $generated@@496 $generated@@497)) $generated@@496))
 :pattern ( ($generated@@233 $generated@@496 $generated@@497))
)))
(assert (forall (($generated@@498 T@U) ($generated@@499 T@U) ) (!  (=> (and (= (type $generated@@498) $generated@@150) (= (type $generated@@499) $generated@@150)) (= ($generated@@149 ($generated@@233 $generated@@498 $generated@@499)) $generated@@499))
 :pattern ( ($generated@@233 $generated@@498 $generated@@499))
)))
(assert  (and (forall (($generated@@502 T@U) ) (! (= (type ($generated@@500 $generated@@502)) $generated@@66)
 :pattern ( ($generated@@500 $generated@@502))
)) (forall (($generated@@503 T@U) ($generated@@504 Int) ) (! (let (($generated@@505 ($generated@@279 (type $generated@@503))))
(= (type ($generated@@501 $generated@@503 $generated@@504)) $generated@@505))
 :pattern ( ($generated@@501 $generated@@503 $generated@@504))
))))
(assert (forall (($generated@@506 T@U) ($generated@@507 T@U) ($generated@@508 T@U) ) (!  (=> (and (and (= (type $generated@@506) ($generated@@278 $generated@@150)) (= (type $generated@@507) $generated@@66)) (= (type $generated@@508) ($generated@@78 $generated@@79 $generated@@80))) (= ($generated@@76 $generated@@506 ($generated@@500 $generated@@507) $generated@@508) (forall (($generated@@509 Int) ) (!  (=> (and (<= 0 $generated@@509) (< $generated@@509 ($generated@@277 $generated@@506))) ($generated@@259 ($generated@@501 $generated@@506 $generated@@509) $generated@@507 $generated@@508))
 :pattern ( ($generated@@501 $generated@@506 $generated@@509))
))))
 :pattern ( ($generated@@76 $generated@@506 ($generated@@500 $generated@@507) $generated@@508))
)))
(assert (forall (($generated@@511 Int) ) (! (= ($generated@@510 ($generated@@77 $generated@@511)) $generated@@511)
 :pattern ( ($generated@@77 $generated@@511))
)))
(assert (forall (($generated@@513 T@U) ) (! (= (type ($generated@@512 $generated@@513)) $generated@@66)
 :pattern ( ($generated@@512 $generated@@513))
)))
(assert (forall (($generated@@514 T@U) ) (!  (=> (= (type $generated@@514) $generated@@66) (= ($generated@@512 ($generated@@243 $generated@@514)) $generated@@514))
 :pattern ( ($generated@@243 $generated@@514))
)))
(assert (forall (($generated@@515 T@U) ) (!  (=> (= (type $generated@@515) $generated@@66) (= ($generated@@74 ($generated@@243 $generated@@515)) $generated@@54))
 :pattern ( ($generated@@243 $generated@@515))
)))
(assert (forall (($generated@@517 T@U) ) (! (= (type ($generated@@516 $generated@@517)) $generated@@66)
 :pattern ( ($generated@@516 $generated@@517))
)))
(assert (forall (($generated@@518 T@U) ) (!  (=> (= (type $generated@@518) $generated@@66) (= ($generated@@516 ($generated@@248 $generated@@518)) $generated@@518))
 :pattern ( ($generated@@248 $generated@@518))
)))
(assert (forall (($generated@@519 T@U) ) (!  (=> (= (type $generated@@519) $generated@@66) (= ($generated@@74 ($generated@@248 $generated@@519)) $generated@@55))
 :pattern ( ($generated@@248 $generated@@519))
)))
(assert (forall (($generated@@521 T@U) ) (! (= (type ($generated@@520 $generated@@521)) $generated@@66)
 :pattern ( ($generated@@520 $generated@@521))
)))
(assert (forall (($generated@@522 T@U) ) (!  (=> (= (type $generated@@522) $generated@@66) (= ($generated@@520 ($generated@@155 $generated@@522)) $generated@@522))
 :pattern ( ($generated@@155 $generated@@522))
)))
(assert (forall (($generated@@523 T@U) ) (!  (=> (= (type $generated@@523) $generated@@66) (= ($generated@@74 ($generated@@155 $generated@@523)) $generated@@56))
 :pattern ( ($generated@@155 $generated@@523))
)))
(assert (forall (($generated@@525 T@U) ) (! (= (type ($generated@@524 $generated@@525)) $generated@@66)
 :pattern ( ($generated@@524 $generated@@525))
)))
(assert (forall (($generated@@526 T@U) ) (!  (=> (= (type $generated@@526) $generated@@66) (= ($generated@@524 ($generated@@500 $generated@@526)) $generated@@526))
 :pattern ( ($generated@@500 $generated@@526))
)))
(assert (forall (($generated@@527 T@U) ) (!  (=> (= (type $generated@@527) $generated@@66) (= ($generated@@74 ($generated@@500 $generated@@527)) $generated@@57))
 :pattern ( ($generated@@500 $generated@@527))
)))
(assert (forall (($generated@@528 T@U) ) (! (let (($generated@@529 (type $generated@@528)))
(= ($generated@@348 $generated@@529 ($generated@@285 $generated@@528)) $generated@@528))
 :pattern ( ($generated@@285 $generated@@528))
)))
(assert (forall (($generated@@530 T@U) ($generated@@531 T@U) ($generated@@532 T@U) ) (!  (=> (and (and (= (type $generated@@530) ($generated@@298 $generated@@150 $generated@@150)) (= (type $generated@@531) $generated@@66)) (= (type $generated@@532) $generated@@66)) (= ($generated@@137 $generated@@530 ($generated@@418 $generated@@531 $generated@@532)) (forall (($generated@@533 T@U) ) (!  (=> (and (= (type $generated@@533) $generated@@150) ($generated@@0 ($generated@@83 ($generated@@296 $generated@@530) $generated@@533))) (and ($generated@@234 ($generated@@83 ($generated@@393 $generated@@530) $generated@@533) $generated@@532) ($generated@@234 $generated@@533 $generated@@531)))
 :pattern ( ($generated@@83 ($generated@@393 $generated@@530) $generated@@533))
 :pattern ( ($generated@@83 ($generated@@296 $generated@@530) $generated@@533))
))))
 :pattern ( ($generated@@137 $generated@@530 ($generated@@418 $generated@@531 $generated@@532)))
)))
(assert (forall (($generated@@534 T@U) ($generated@@535 T@U) ($generated@@536 T@U) ) (!  (=> (and (and (= (type $generated@@534) ($generated@@316 $generated@@150 $generated@@150)) (= (type $generated@@535) $generated@@66)) (= (type $generated@@536) $generated@@66)) (= ($generated@@137 $generated@@534 ($generated@@426 $generated@@535 $generated@@536)) (forall (($generated@@537 T@U) ) (!  (=> (and (= (type $generated@@537) $generated@@150) ($generated@@0 ($generated@@83 ($generated@@314 $generated@@534) $generated@@537))) (and ($generated@@234 ($generated@@83 ($generated@@401 $generated@@534) $generated@@537) $generated@@536) ($generated@@234 $generated@@537 $generated@@535)))
 :pattern ( ($generated@@83 ($generated@@401 $generated@@534) $generated@@537))
 :pattern ( ($generated@@83 ($generated@@314 $generated@@534) $generated@@537))
))))
 :pattern ( ($generated@@137 $generated@@534 ($generated@@426 $generated@@535 $generated@@536)))
)))
(assert (forall (($generated@@540 T@U) ($generated@@541 T@U) ) (!  (=> (and (= (type $generated@@540) $generated@@150) (= (type $generated@@541) $generated@@150)) (< ($generated@@538 $generated@@540) ($generated@@539 ($generated@@233 $generated@@540 $generated@@541))))
 :pattern ( ($generated@@233 $generated@@540 $generated@@541))
)))
(assert (forall (($generated@@542 T@U) ($generated@@543 T@U) ) (!  (=> (and (= (type $generated@@542) $generated@@150) (= (type $generated@@543) $generated@@150)) (< ($generated@@538 $generated@@543) ($generated@@539 ($generated@@233 $generated@@542 $generated@@543))))
 :pattern ( ($generated@@233 $generated@@542 $generated@@543))
)))
(assert (forall (($generated@@544 T@U) ($generated@@545 T@U) ($generated@@546 T@U) ) (!  (=> (and (and (and (= (type $generated@@544) $generated@@150) (= (type $generated@@545) $generated@@66)) (= (type $generated@@546) $generated@@66)) ($generated@@234 $generated@@544 ($generated@@418 $generated@@545 $generated@@546))) (and (= ($generated@@285 ($generated@@348 ($generated@@298 $generated@@150 $generated@@150) $generated@@544)) $generated@@544) ($generated@@137 ($generated@@348 ($generated@@298 $generated@@150 $generated@@150) $generated@@544) ($generated@@418 $generated@@545 $generated@@546))))
 :pattern ( ($generated@@234 $generated@@544 ($generated@@418 $generated@@545 $generated@@546)))
)))
(assert (forall (($generated@@547 T@U) ($generated@@548 T@U) ($generated@@549 T@U) ) (!  (=> (and (and (and (= (type $generated@@547) $generated@@150) (= (type $generated@@548) $generated@@66)) (= (type $generated@@549) $generated@@66)) ($generated@@234 $generated@@547 ($generated@@426 $generated@@548 $generated@@549))) (and (= ($generated@@285 ($generated@@348 ($generated@@316 $generated@@150 $generated@@150) $generated@@547)) $generated@@547) ($generated@@137 ($generated@@348 ($generated@@316 $generated@@150 $generated@@150) $generated@@547) ($generated@@426 $generated@@548 $generated@@549))))
 :pattern ( ($generated@@234 $generated@@547 ($generated@@426 $generated@@548 $generated@@549)))
)))
(assert (forall (($generated@@550 T@U) ($generated@@551 T@U) ($generated@@552 T@U) ) (!  (=> (and (and (and (= (type $generated@@550) $generated@@66) (= (type $generated@@551) $generated@@66)) (= (type $generated@@552) $generated@@150)) ($generated@@234 $generated@@552 ($generated@@140 $generated@@550 $generated@@551))) (and (= ($generated@@285 ($generated@@348 $generated@@141 $generated@@552)) $generated@@552) ($generated@@137 ($generated@@348 $generated@@141 $generated@@552) ($generated@@140 $generated@@550 $generated@@551))))
 :pattern ( ($generated@@234 $generated@@552 ($generated@@140 $generated@@550 $generated@@551)))
)))
(assert (forall (($generated@@553 T@U) ) (! (let (($generated@@554 (type $generated@@553)))
 (not ($generated@@0 ($generated@@83 ($generated@@434 $generated@@554) $generated@@553))))
 :pattern ( (let (($generated@@554 (type $generated@@553)))
($generated@@83 ($generated@@434 $generated@@554) $generated@@553)))
)))
(assert (forall (($generated@@556 T@U) ) (! (= (type ($generated@@555 $generated@@556)) $generated@@71)
 :pattern ( ($generated@@555 $generated@@556))
)))
(assert (forall (($generated@@557 T@U) ($generated@@558 T@U) ) (!  (=> (and (= (type $generated@@557) $generated@@66) (= (type $generated@@558) $generated@@66)) (and (= ($generated@@74 ($generated@@140 $generated@@557 $generated@@558)) $generated@@63) (= ($generated@@555 ($generated@@140 $generated@@557 $generated@@558)) $generated@@65)))
 :pattern ( ($generated@@140 $generated@@557 $generated@@558))
)))
(assert (forall (($generated@@559 T@U) ) (!  (=> (= (type $generated@@559) $generated@@141) (= ($generated@@538 ($generated@@285 $generated@@559)) ($generated@@539 $generated@@559)))
 :pattern ( ($generated@@538 ($generated@@285 $generated@@559)))
)))
(assert (forall (($generated@@560 T@U) ) (!  (=> (and (= (type $generated@@560) $generated@@150) ($generated@@234 $generated@@560 ($generated@@77 0))) (and (= ($generated@@285 ($generated@@348 $generated@@2 $generated@@560)) $generated@@560) ($generated@@137 ($generated@@348 ($generated@@78 $generated@@150 $generated@@4) $generated@@560) ($generated@@77 0))))
 :pattern ( ($generated@@234 $generated@@560 ($generated@@77 0)))
)))
(assert (forall (($generated@@561 T@U) ($generated@@562 T@U) ) (!  (=> (and (and (= (type $generated@@561) $generated@@150) (= (type $generated@@562) $generated@@66)) ($generated@@234 $generated@@561 ($generated@@243 $generated@@562))) (and (= ($generated@@285 ($generated@@348 ($generated@@78 $generated@@150 $generated@@4) $generated@@561)) $generated@@561) ($generated@@137 ($generated@@348 ($generated@@78 $generated@@150 $generated@@4) $generated@@561) ($generated@@243 $generated@@562))))
 :pattern ( ($generated@@234 $generated@@561 ($generated@@243 $generated@@562)))
)))
(assert (forall (($generated@@563 T@U) ($generated@@564 T@U) ) (!  (=> (and (and (= (type $generated@@563) $generated@@150) (= (type $generated@@564) $generated@@66)) ($generated@@234 $generated@@563 ($generated@@248 $generated@@564))) (and (= ($generated@@285 ($generated@@348 ($generated@@78 $generated@@150 $generated@@4) $generated@@563)) $generated@@563) ($generated@@137 ($generated@@348 ($generated@@78 $generated@@150 $generated@@4) $generated@@563) ($generated@@248 $generated@@564))))
 :pattern ( ($generated@@234 $generated@@563 ($generated@@248 $generated@@564)))
)))
(assert (forall (($generated@@565 T@U) ($generated@@566 T@U) ) (!  (=> (and (and (= (type $generated@@565) $generated@@150) (= (type $generated@@566) $generated@@66)) ($generated@@234 $generated@@565 ($generated@@155 $generated@@566))) (and (= ($generated@@285 ($generated@@348 ($generated@@78 $generated@@150 $generated@@2) $generated@@565)) $generated@@565) ($generated@@137 ($generated@@348 ($generated@@78 $generated@@150 $generated@@2) $generated@@565) ($generated@@155 $generated@@566))))
 :pattern ( ($generated@@234 $generated@@565 ($generated@@155 $generated@@566)))
)))
(assert (forall (($generated@@567 T@U) ($generated@@568 T@U) ) (!  (=> (and (and (= (type $generated@@567) $generated@@150) (= (type $generated@@568) $generated@@66)) ($generated@@234 $generated@@567 ($generated@@500 $generated@@568))) (and (= ($generated@@285 ($generated@@348 ($generated@@278 $generated@@150) $generated@@567)) $generated@@567) ($generated@@137 ($generated@@348 ($generated@@278 $generated@@150) $generated@@567) ($generated@@500 $generated@@568))))
 :pattern ( ($generated@@234 $generated@@567 ($generated@@500 $generated@@568)))
)))
(assert (= ($generated@@74 $generated@@134) $generated@@61))
(assert (= ($generated@@555 $generated@@134) $generated@@64))
(assert (forall (($generated@@569 T@U) ($generated@@570 T@U) ($generated@@571 T@U) ) (!  (=> (and (and (= (type $generated@@569) ($generated@@78 $generated@@150 $generated@@2)) (= (type $generated@@570) $generated@@66)) (= (type $generated@@571) ($generated@@78 $generated@@79 $generated@@80))) (= ($generated@@76 $generated@@569 ($generated@@155 $generated@@570) $generated@@571) (forall (($generated@@572 T@U) ) (!  (=> (and (= (type $generated@@572) $generated@@150) (< 0 ($generated ($generated@@83 $generated@@569 $generated@@572)))) ($generated@@259 $generated@@572 $generated@@570 $generated@@571))
 :pattern ( ($generated@@83 $generated@@569 $generated@@572))
))))
 :pattern ( ($generated@@76 $generated@@569 ($generated@@155 $generated@@570) $generated@@571))
)))
(assert (forall (($generated@@573 T@U) ($generated@@574 T@U) ($generated@@575 T@U) ) (!  (=> (and (and (and (= (type $generated@@573) $generated@@141) (= (type $generated@@574) $generated@@66)) (= (type $generated@@575) ($generated@@78 $generated@@79 $generated@@80))) (and ($generated@@258 $generated@@575) (and ($generated@@139 $generated@@573) (exists (($generated@@576 T@U) ) (!  (and (= (type $generated@@576) $generated@@66) ($generated@@76 $generated@@573 ($generated@@140 $generated@@574 $generated@@576) $generated@@575))
 :pattern ( ($generated@@76 $generated@@573 ($generated@@140 $generated@@574 $generated@@576) $generated@@575))
))))) ($generated@@259 ($generated@@148 $generated@@573) $generated@@574 $generated@@575))
 :pattern ( ($generated@@259 ($generated@@148 $generated@@573) $generated@@574 $generated@@575))
)))
(assert (forall (($generated@@577 T@U) ($generated@@578 T@U) ($generated@@579 T@U) ) (!  (=> (and (and (and (= (type $generated@@577) $generated@@141) (= (type $generated@@578) $generated@@66)) (= (type $generated@@579) ($generated@@78 $generated@@79 $generated@@80))) (and ($generated@@258 $generated@@579) (and ($generated@@139 $generated@@577) (exists (($generated@@580 T@U) ) (!  (and (= (type $generated@@580) $generated@@66) ($generated@@76 $generated@@577 ($generated@@140 $generated@@580 $generated@@578) $generated@@579))
 :pattern ( ($generated@@76 $generated@@577 ($generated@@140 $generated@@580 $generated@@578) $generated@@579))
))))) ($generated@@259 ($generated@@149 $generated@@577) $generated@@578 $generated@@579))
 :pattern ( ($generated@@259 ($generated@@149 $generated@@577) $generated@@578 $generated@@579))
)))
(assert (forall (($generated@@581 T@U) ($generated@@582 T@U) ) (!  (=> (and (= (type $generated@@581) $generated@@150) (= (type $generated@@582) $generated@@150)) (= ($generated@@233 ($generated@@254 $generated@@581) ($generated@@254 $generated@@582)) ($generated@@254 ($generated@@233 $generated@@581 $generated@@582))))
 :pattern ( ($generated@@233 ($generated@@254 $generated@@581) ($generated@@254 $generated@@582)))
)))
(assert (forall (($generated@@583 Int) ) (! (= ($generated@@285 ($generated@@8 ($generated@@164 $generated@@583))) ($generated@@254 ($generated@@285 ($generated@@8 $generated@@583))))
 :pattern ( ($generated@@285 ($generated@@8 ($generated@@164 $generated@@583))))
)))
(assert (forall (($generated@@584 T@U) ) (! (= ($generated@@285 ($generated@@254 $generated@@584)) ($generated@@254 ($generated@@285 $generated@@584)))
 :pattern ( ($generated@@285 ($generated@@254 $generated@@584)))
)))
(assert (forall (($generated@@585 T@U) ) (! (let (($generated@@586 ($generated@@279 (type $generated@@585))))
 (=> (and (= (type $generated@@585) ($generated@@278 $generated@@586)) (= ($generated@@277 $generated@@585) 0)) (= $generated@@585 ($generated@@276 $generated@@586))))
 :pattern ( ($generated@@277 $generated@@585))
)))
(assert (forall (($generated@@587 T@U) ($generated@@588 T@U) ($generated@@589 T@U) ) (! (let (($generated@@590 (type $generated@@588)))
 (=> (and (and (= (type $generated@@587) ($generated@@78 $generated@@590 $generated@@2)) (= (type $generated@@589) $generated@@2)) (<= 0 ($generated $generated@@589))) (= ($generated@@290 ($generated@@84 $generated@@587 $generated@@588 $generated@@589)) (+ (- ($generated@@290 $generated@@587) ($generated ($generated@@83 $generated@@587 $generated@@588))) ($generated $generated@@589)))))
 :pattern ( ($generated@@290 ($generated@@84 $generated@@587 $generated@@588 $generated@@589)))
)))
(assert (forall (($generated@@591 T@U) ($generated@@592 T@U) ) (!  (=> (and (= (type $generated@@591) ($generated@@78 $generated@@79 $generated@@80)) (= (type $generated@@592) $generated@@2)) ($generated@@76 $generated@@592 $generated@@46 $generated@@591))
 :pattern ( ($generated@@76 $generated@@592 $generated@@46 $generated@@591))
)))
(assert (forall (($generated@@593 T@U) ($generated@@594 T@U) ) (!  (=> (and (= (type $generated@@593) ($generated@@78 $generated@@79 $generated@@80)) (= (type $generated@@594) $generated@@3)) ($generated@@76 $generated@@594 $generated@@47 $generated@@593))
 :pattern ( ($generated@@76 $generated@@594 $generated@@47 $generated@@593))
)))
(assert (forall (($generated@@595 T@U) ($generated@@596 T@U) ) (!  (=> (and (= (type $generated@@595) ($generated@@78 $generated@@79 $generated@@80)) (= (type $generated@@596) $generated@@4)) ($generated@@76 $generated@@596 $generated@@44 $generated@@595))
 :pattern ( ($generated@@76 $generated@@596 $generated@@44 $generated@@595))
)))
(assert (forall (($generated@@597 T@U) ($generated@@598 T@U) ) (!  (=> (and (= (type $generated@@597) ($generated@@78 $generated@@79 $generated@@80)) (= (type $generated@@598) $generated@@458)) ($generated@@76 $generated@@598 $generated@@45 $generated@@597))
 :pattern ( ($generated@@76 $generated@@598 $generated@@45 $generated@@597))
)))
(assert (forall (($generated@@599 T@U) ($generated@@600 T@U) ) (!  (=> (and (= (type $generated@@599) ($generated@@78 $generated@@79 $generated@@80)) (= (type $generated@@600) $generated@@150)) ($generated@@76 $generated@@600 $generated@@48 $generated@@599))
 :pattern ( ($generated@@76 $generated@@600 $generated@@48 $generated@@599))
)))
(assert (forall (($generated@@601 T@U) ($generated@@602 T@U) ) (!  (=> (and (= (type $generated@@601) ($generated@@278 $generated@@150)) (= (type $generated@@602) $generated@@66)) (= ($generated@@137 $generated@@601 ($generated@@500 $generated@@602)) (forall (($generated@@603 Int) ) (!  (=> (and (<= 0 $generated@@603) (< $generated@@603 ($generated@@277 $generated@@601))) ($generated@@234 ($generated@@501 $generated@@601 $generated@@603) $generated@@602))
 :pattern ( ($generated@@501 $generated@@601 $generated@@603))
))))
 :pattern ( ($generated@@137 $generated@@601 ($generated@@500 $generated@@602)))
)))
(assert (forall (($generated@@605 T@U) ($generated@@606 Int) ) (!  (=> (= (type $generated@@605) ($generated@@278 $generated@@150)) (=> (and (<= 0 $generated@@606) (< $generated@@606 ($generated@@277 $generated@@605))) (< ($generated@@539 ($generated@@348 $generated@@141 ($generated@@501 $generated@@605 $generated@@606))) ($generated@@604 $generated@@605))))
 :pattern ( ($generated@@539 ($generated@@348 $generated@@141 ($generated@@501 $generated@@605 $generated@@606))))
)))
(assert (forall (($generated@@607 T@U) ($generated@@608 T@U) ($generated@@609 T@U) ) (!  (=> (and (and (and (= (type $generated@@607) ($generated@@298 $generated@@150 $generated@@150)) (= (type $generated@@608) $generated@@66)) (= (type $generated@@609) $generated@@66)) ($generated@@137 $generated@@607 ($generated@@418 $generated@@608 $generated@@609))) (and (and ($generated@@137 ($generated@@296 $generated@@607) ($generated@@243 $generated@@608)) ($generated@@137 ($generated@@356 $generated@@607) ($generated@@243 $generated@@609))) ($generated@@137 ($generated@@392 $generated@@607) ($generated@@243 ($generated@@140 $generated@@608 $generated@@609)))))
 :pattern ( ($generated@@137 $generated@@607 ($generated@@418 $generated@@608 $generated@@609)))
)))
(assert (forall (($generated@@610 T@U) ($generated@@611 T@U) ($generated@@612 T@U) ) (!  (=> (and (and (and (= (type $generated@@610) ($generated@@316 $generated@@150 $generated@@150)) (= (type $generated@@611) $generated@@66)) (= (type $generated@@612) $generated@@66)) ($generated@@137 $generated@@610 ($generated@@426 $generated@@611 $generated@@612))) (and (and ($generated@@137 ($generated@@314 $generated@@610) ($generated@@248 $generated@@611)) ($generated@@137 ($generated@@367 $generated@@610) ($generated@@248 $generated@@612))) ($generated@@137 ($generated@@400 $generated@@610) ($generated@@248 ($generated@@140 $generated@@611 $generated@@612)))))
 :pattern ( ($generated@@137 $generated@@610 ($generated@@426 $generated@@611 $generated@@612)))
)))
(assert (forall (($generated@@613 T@U) ) (!  (=> (= (type $generated@@613) $generated@@2) ($generated@@137 $generated@@613 $generated@@46))
 :pattern ( ($generated@@137 $generated@@613 $generated@@46))
)))
(assert (forall (($generated@@614 T@U) ) (!  (=> (= (type $generated@@614) $generated@@3) ($generated@@137 $generated@@614 $generated@@47))
 :pattern ( ($generated@@137 $generated@@614 $generated@@47))
)))
(assert (forall (($generated@@615 T@U) ) (!  (=> (= (type $generated@@615) $generated@@4) ($generated@@137 $generated@@615 $generated@@44))
 :pattern ( ($generated@@137 $generated@@615 $generated@@44))
)))
(assert (forall (($generated@@616 T@U) ) (!  (=> (= (type $generated@@616) $generated@@458) ($generated@@137 $generated@@616 $generated@@45))
 :pattern ( ($generated@@137 $generated@@616 $generated@@45))
)))
(assert (forall (($generated@@617 T@U) ) (!  (=> (= (type $generated@@617) $generated@@150) ($generated@@137 $generated@@617 $generated@@48))
 :pattern ( ($generated@@137 $generated@@617 $generated@@48))
)))
(push 1)
(declare-fun ControlFlow (Int Int) Int)
(declare-fun $generated@@618 () T@U)
(declare-fun $generated@@619 () T@U)
(declare-fun $generated@@620 () T@U)
(declare-fun $generated@@621 () Int)
(declare-fun $generated@@622 () Int)
(declare-fun $generated@@623 () T@U)
(declare-fun $generated@@624 (T@U) Bool)
(declare-fun $generated@@625 () T@U)
(declare-fun $generated@@626 () T@U)
(declare-fun $generated@@627 () T@U)
(assert  (and (and (and (and (and (and (= (type $generated@@618) $generated@@66) (= (type $generated@@619) $generated@@66)) (= (type $generated@@620) $generated@@66)) (= (type $generated@@623) ($generated@@78 $generated@@79 $generated@@80))) (= (type $generated@@625) ($generated@@78 $generated@@79 $generated@@80))) (= (type $generated@@626) ($generated@@172 $generated@@79 $generated@@4))) (= (type $generated@@627) $generated@@79)))
(set-option :timeout 0)
(set-option :rlimit 0)
(assert (not
 (=> (= (ControlFlow 0 0) 11) (let (($generated@@628  (=> (= (ControlFlow 0 2) (- 0 1)) (=> ($generated@@163 $generated@@618 $generated@@619 $generated@@620 $generated@@621) (or ($generated@@161 $generated@@618 $generated@@619 $generated@@620 ($generated@@226 $generated@@333) $generated@@621) (=> (< 0 $generated@@621) ($generated@@161 $generated@@619 $generated@@618 $generated@@620 ($generated@@226 ($generated@@226 $generated@@333)) (- $generated@@621 1))))))))
(let (($generated@@629  (=> (and (< $generated@@621 ($generated@@164 2)) (= (ControlFlow 0 8) 2)) $generated@@628)))
(let (($generated@@630  (=> (<= ($generated@@164 2) $generated@@621) (and (=> (= (ControlFlow 0 4) (- 0 7)) ($generated@@137 ($generated@@8 (- $generated@@621 2)) $generated@@134)) (=> ($generated@@137 ($generated@@8 (- $generated@@621 2)) $generated@@134) (=> (= $generated@@622 (- $generated@@621 2)) (and (=> (= (ControlFlow 0 4) (- 0 6)) (or (<= 0 $generated@@621) (= $generated@@622 $generated@@621))) (=> (or (<= 0 $generated@@621) (= $generated@@622 $generated@@621)) (and (=> (= (ControlFlow 0 4) (- 0 5)) (< $generated@@622 $generated@@621)) (=> (< $generated@@622 $generated@@621) (=> (and (and (and ($generated@@258 $generated@@623) ($generated@@624 $generated@@623)) ($generated@@163 $generated@@618 $generated@@619 $generated@@620 $generated@@622)) (and (and ($generated@@163 $generated@@618 $generated@@619 $generated@@620 $generated@@622) (and ($generated@@161 $generated@@618 $generated@@619 $generated@@620 ($generated@@226 $generated@@333) $generated@@622) (=> (< 0 $generated@@622) ($generated@@161 $generated@@619 $generated@@618 $generated@@620 ($generated@@226 $generated@@333) (- $generated@@622 1))))) (and (= $generated@@625 $generated@@623) (= (ControlFlow 0 4) 2)))) $generated@@628)))))))))))
(let (($generated@@631  (=> (< 0 $generated@@621) (and (=> (= (ControlFlow 0 9) 4) $generated@@630) (=> (= (ControlFlow 0 9) 8) $generated@@629)))))
(let (($generated@@632  (=> (and (<= $generated@@621 0) (= (ControlFlow 0 3) 2)) $generated@@628)))
(let (($generated@@633  (=> (= $generated@@626 ($generated@@171 $generated@@627 $generated@@625 $generated@@60 false)) (and (=> (= (ControlFlow 0 10) 9) $generated@@631) (=> (= (ControlFlow 0 10) 3) $generated@@632)))))
(let (($generated@@634  (=> (and (and (and ($generated@@258 $generated@@625) ($generated@@624 $generated@@625)) (<= ($generated@@164 0) $generated@@621)) (and (= 2 $generated@@160) (= (ControlFlow 0 11) 10))) $generated@@633)))
$generated@@634))))))))
))
(check-sat)
(pop 1)
; Valid
(get-info :rlimit)
(reset)
(set-option :rlimit 0)
; did a full reset
(reset)
(set-option :print-success false)
(set-info :smt-lib-version 2.6)
(set-option :auto_config false)
(set-option :type_check true)
(set-option :smt.case_split 3)
(set-option :smt.qi.eager_threshold 100)
(set-option :smt.delay_units true)
(set-option :smt.arith.solver 2)
(set-option :smt.mbqi false)
(set-option :model.compact false)
(set-option :model.v2 true)
(set-option :pp.bv_literals false)
; done setting options


(set-info :category "industrial")
(declare-sort |T@U| 0)
(declare-sort |T@T| 0)
(declare-fun real_pow (Real Real) Real)
(declare-fun UOrdering2 (|T@U| |T@U|) Bool)
(declare-fun UOrdering3 (|T@T| |T@U| |T@U|) Bool)
(declare-fun tickleBool (Bool) Bool)
(assert (and (tickleBool true) (tickleBool false)))
(declare-fun $generated (T@U) Int)
(declare-fun $generated@@0 (T@U) Bool)
(declare-fun $generated@@1 (T@T) Int)
(declare-fun $generated@@2 () T@T)
(declare-fun $generated@@3 () T@T)
(declare-fun $generated@@4 () T@T)
(declare-fun $generated@@5 () T@T)
(declare-fun $generated@@6 () T@T)
(declare-fun $generated@@7 () T@T)
(declare-fun $generated@@8 (Int) T@U)
(declare-fun type (T@U) T@T)
(declare-fun $generated@@9 (Real) T@U)
(declare-fun $generated@@10 (T@U) Real)
(declare-fun $generated@@11 (Bool) T@U)
(declare-fun $generated@@12 (RoundingMode) T@U)
(declare-fun $generated@@13 (T@U) RoundingMode)
(declare-fun $generated@@14 (String) T@U)
(declare-fun $generated@@15 (T@U) String)
(declare-fun $generated@@16 ((RegEx String)) T@U)
(declare-fun $generated@@17 (T@U) (RegEx String))
(declare-fun $generated@@44 () Int)
(declare-fun $generated@@45 (T@U T@U T@U T@U Int) Bool)
(declare-fun $generated@@46 () T@T)
(declare-fun $generated@@47 () T@T)
(declare-fun $generated@@48 (T@U T@U T@U Int) Bool)
(declare-fun $generated@@49 (Int) Int)
(declare-fun $generated@@55 (T@U T@U T@U) T@U)
(declare-fun $generated@@56 (T@U T@U T@U Bool) T@U)
(declare-fun $generated@@57 (T@T) T@T)
(declare-fun $generated@@58 () T@T)
(declare-fun $generated@@59 (T@T T@T) T@T)
(declare-fun $generated@@60 () T@T)
(declare-fun $generated@@61 (T@T) T@T)
(declare-fun $generated@@62 (T@U T@U) T@U)
(declare-fun $generated@@63 (T@U T@U) T@U)
(declare-fun $generated@@64 (T@T) T@T)
(declare-fun $generated@@65 (T@T) T@T)
(declare-fun $generated@@66 (T@U T@U T@U) T@U)
(declare-fun $generated@@67 (T@U T@U T@U) T@U)
(declare-fun $generated@@68 (T@T T@T) T@T)
(declare-fun $generated@@69 (T@T) T@T)
(declare-fun $generated@@70 (T@T) T@T)
(declare-fun $generated@@71 (T@U T@U T@U T@U) T@U)
(declare-fun $generated@@168 (T@U) T@U)
(declare-fun $generated@@176 (T@U) T@U)
(declare-fun $generated@@185 (T@U) T@U)
(declare-fun $generated@@186 () T@U)
(declare-fun $generated@@203 (T@U) T@U)
(declare-fun $generated@@204 (T@T T@U) T@U)
(declare-fun $generated@@205 () T@T)
(assert  (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (= ($generated@@1 $generated@@2) 0) (= ($generated@@1 $generated@@3) 1)) (= ($generated@@1 $generated@@4) 2)) (= ($generated@@1 $generated@@5) 3)) (= ($generated@@1 $generated@@6) 4)) (= ($generated@@1 $generated@@7) 5)) (forall (($generated@@18 Int) ) (! (= ($generated ($generated@@8 $generated@@18)) $generated@@18)
 :pattern ( ($generated@@8 $generated@@18))
))) (forall (($generated@@19 T@U) ) (!  (=> (= (type $generated@@19) $generated@@2) (= ($generated@@8 ($generated $generated@@19)) $generated@@19))
 :pattern ( ($generated $generated@@19))
))) (forall (($generated@@20 Int) ) (! (= (type ($generated@@8 $generated@@20)) $generated@@2)
 :pattern ( ($generated@@8 $generated@@20))
))) (forall (($generated@@21 Real) ) (! (= ($generated@@10 ($generated@@9 $generated@@21)) $generated@@21)
 :pattern ( ($generated@@9 $generated@@21))
))) (forall (($generated@@22 T@U) ) (!  (=> (= (type $generated@@22) $generated@@3) (= ($generated@@9 ($generated@@10 $generated@@22)) $generated@@22))
 :pattern ( ($generated@@10 $generated@@22))
))) (forall (($generated@@23 Real) ) (! (= (type ($generated@@9 $generated@@23)) $generated@@3)
 :pattern ( ($generated@@9 $generated@@23))
))) (forall (($generated@@24 Bool) ) (! (= ($generated@@0 ($generated@@11 $generated@@24)) $generated@@24)
 :pattern ( ($generated@@11 $generated@@24))
))) (forall (($generated@@25 T@U) ) (!  (=> (= (type $generated@@25) $generated@@4) (= ($generated@@11 ($generated@@0 $generated@@25)) $generated@@25))
 :pattern ( ($generated@@0 $generated@@25))
))) (forall (($generated@@26 Bool) ) (! (= (type ($generated@@11 $generated@@26)) $generated@@4)
 :pattern ( ($generated@@11 $generated@@26))
))) (forall (($generated@@27 RoundingMode) ) (! (= ($generated@@13 ($generated@@12 $generated@@27)) $generated@@27)
 :pattern ( ($generated@@12 $generated@@27))
))) (forall (($generated@@28 T@U) ) (!  (=> (= (type $generated@@28) $generated@@5) (= ($generated@@12 ($generated@@13 $generated@@28)) $generated@@28))
 :pattern ( ($generated@@13 $generated@@28))
))) (forall (($generated@@29 RoundingMode) ) (! (= (type ($generated@@12 $generated@@29)) $generated@@5)
 :pattern ( ($generated@@12 $generated@@29))
))) (forall (($generated@@30 String) ) (! (= ($generated@@15 ($generated@@14 $generated@@30)) $generated@@30)
 :pattern ( ($generated@@14 $generated@@30))
))) (forall (($generated@@31 T@U) ) (!  (=> (= (type $generated@@31) $generated@@6) (= ($generated@@14 ($generated@@15 $generated@@31)) $generated@@31))
 :pattern ( ($generated@@15 $generated@@31))
))) (forall (($generated@@32 String) ) (! (= (type ($generated@@14 $generated@@32)) $generated@@6)
 :pattern ( ($generated@@14 $generated@@32))
))) (forall (($generated@@33 (RegEx String)) ) (! (= ($generated@@17 ($generated@@16 $generated@@33)) $generated@@33)
 :pattern ( ($generated@@16 $generated@@33))
))) (forall (($generated@@34 T@U) ) (!  (=> (= (type $generated@@34) $generated@@7) (= ($generated@@16 ($generated@@17 $generated@@34)) $generated@@34))
 :pattern ( ($generated@@17 $generated@@34))
))) (forall (($generated@@35 (RegEx String)) ) (! (= (type ($generated@@16 $generated@@35)) $generated@@7)
 :pattern ( ($generated@@16 $generated@@35))
))))
(assert (forall (($generated@@36 T@U) ) (! (UOrdering2 $generated@@36 $generated@@36)
 :no-pattern ($generated $generated@@36)
 :no-pattern ($generated@@0 $generated@@36)
)))
(assert (forall (($generated@@37 T@U) ($generated@@38 T@U) ($generated@@39 T@U) ) (! (let (($generated@@40 (type $generated@@37)))
 (=> (and (and (= (type $generated@@38) $generated@@40) (= (type $generated@@39) $generated@@40)) (and (UOrdering2 $generated@@37 $generated@@38) (UOrdering2 $generated@@38 $generated@@39))) (UOrdering2 $generated@@37 $generated@@39)))
 :pattern ( (UOrdering2 $generated@@37 $generated@@38) (UOrdering2 $generated@@38 $generated@@39))
)))
(assert (forall (($generated@@41 T@U) ($generated@@42 T@U) ) (! (let (($generated@@43 (type $generated@@41)))
 (=> (= (type $generated@@42) $generated@@43) (=> (and (UOrdering2 $generated@@41 $generated@@42) (UOrdering2 $generated@@42 $generated@@41)) (= $generated@@41 $generated@@42))))
 :pattern ( (UOrdering2 $generated@@41 $generated@@42) (UOrdering2 $generated@@42 $generated@@41))
)))
(assert  (and (= ($generated@@1 $generated@@46) 6) (= ($generated@@1 $generated@@47) 7)))
(assert  (=> (<= 1 $generated@@44) (forall (($generated@@50 T@U) ($generated@@51 T@U) ($generated@@52 T@U) ($generated@@53 T@U) ($generated@@54 Int) ) (!  (=> (and (and (and (and (= (type $generated@@50) $generated@@46) (= (type $generated@@51) $generated@@46)) (= (type $generated@@52) $generated@@46)) (= (type $generated@@53) $generated@@47)) (or ($generated@@48 $generated@@50 $generated@@51 $generated@@52 $generated@@54) (and (not (= 1 $generated@@44)) (<= ($generated@@49 0) $generated@@54)))) true)
 :pattern ( ($generated@@45 $generated@@50 $generated@@51 $generated@@52 $generated@@53 $generated@@54))
))))
(assert  (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (forall (($generated@@72 T@T) ($generated@@73 T@T) ) (= ($generated@@1 ($generated@@59 $generated@@72 $generated@@73)) 8)) (forall (($generated@@74 T@T) ($generated@@75 T@T) ) (! (= ($generated@@64 ($generated@@59 $generated@@74 $generated@@75)) $generated@@74)
 :pattern ( ($generated@@59 $generated@@74 $generated@@75))
))) (forall (($generated@@76 T@T) ($generated@@77 T@T) ) (! (= ($generated@@65 ($generated@@59 $generated@@76 $generated@@77)) $generated@@77)
 :pattern ( ($generated@@59 $generated@@76 $generated@@77))
))) (forall (($generated@@78 T@U) ($generated@@79 T@U) ) (! (let (($generated@@80 ($generated@@65 (type $generated@@78))))
(= (type ($generated@@63 $generated@@78 $generated@@79)) $generated@@80))
 :pattern ( ($generated@@63 $generated@@78 $generated@@79))
))) (forall (($generated@@81 T@U) ($generated@@82 T@U) ($generated@@83 T@U) ) (! (let (($generated@@84 (type $generated@@83)))
(let (($generated@@85 (type $generated@@82)))
(= (type ($generated@@66 $generated@@81 $generated@@82 $generated@@83)) ($generated@@59 $generated@@85 $generated@@84))))
 :pattern ( ($generated@@66 $generated@@81 $generated@@82 $generated@@83))
))) (forall (($generated@@86 T@U) ($generated@@87 T@U) ($generated@@88 T@U) ) (! (let (($generated@@89 ($generated@@65 (type $generated@@86))))
 (=> (= (type $generated@@88) $generated@@89) (= ($generated@@63 ($generated@@66 $generated@@86 $generated@@87 $generated@@88) $generated@@87) $generated@@88)))
 :weight 0
))) (and (forall (($generated@@90 T@U) ($generated@@91 T@U) ($generated@@92 T@U) ($generated@@93 T@U) ) (!  (or (= $generated@@92 $generated@@93) (= ($generated@@63 ($generated@@66 $generated@@91 $generated@@92 $generated@@90) $generated@@93) ($generated@@63 $generated@@91 $generated@@93)))
 :weight 0
)) (forall (($generated@@94 T@U) ($generated@@95 T@U) ($generated@@96 T@U) ($generated@@97 T@U) ) (!  (or true (= ($generated@@63 ($generated@@66 $generated@@95 $generated@@96 $generated@@94) $generated@@97) ($generated@@63 $generated@@95 $generated@@97)))
 :weight 0
)))) (forall (($generated@@98 T@T) ) (= ($generated@@1 ($generated@@61 $generated@@98)) 9))) (forall (($generated@@99 T@T) ) (! (= ($generated@@57 ($generated@@61 $generated@@99)) $generated@@99)
 :pattern ( ($generated@@61 $generated@@99))
))) (forall (($generated@@100 T@U) ($generated@@101 T@U) ) (! (let (($generated@@102 ($generated@@57 (type $generated@@101))))
(= (type ($generated@@62 $generated@@100 $generated@@101)) $generated@@102))
 :pattern ( ($generated@@62 $generated@@100 $generated@@101))
))) (= ($generated@@1 $generated@@60) 10)) (forall (($generated@@103 T@U) ($generated@@104 T@U) ($generated@@105 T@U) ) (! (= (type ($generated@@67 $generated@@103 $generated@@104 $generated@@105)) $generated@@60)
 :pattern ( ($generated@@67 $generated@@103 $generated@@104 $generated@@105))
))) (forall (($generated@@106 T@U) ($generated@@107 T@U) ($generated@@108 T@U) ) (! (let (($generated@@109 ($generated@@57 (type $generated@@107))))
 (=> (= (type $generated@@108) $generated@@109) (= ($generated@@62 ($generated@@67 $generated@@106 $generated@@107 $generated@@108) $generated@@107) $generated@@108)))
 :weight 0
))) (and (forall (($generated@@110 T@U) ($generated@@111 T@U) ($generated@@112 T@U) ($generated@@113 T@U) ) (!  (or (= $generated@@112 $generated@@113) (= ($generated@@62 ($generated@@67 $generated@@111 $generated@@112 $generated@@110) $generated@@113) ($generated@@62 $generated@@111 $generated@@113)))
 :weight 0
)) (forall (($generated@@114 T@U) ($generated@@115 T@U) ($generated@@116 T@U) ($generated@@117 T@U) ) (!  (or true (= ($generated@@62 ($generated@@67 $generated@@115 $generated@@116 $generated@@114) $generated@@117) ($generated@@62 $generated@@115 $generated@@117)))
 :weight 0
)))) (= ($generated@@1 $generated@@58) 11)) (forall (($generated@@118 T@T) ($generated@@119 T@T) ) (= ($generated@@1 ($generated@@68 $generated@@118 $generated@@119)) 12))) (forall (($generated@@120 T@T) ($generated@@121 T@T) ) (! (= ($generated@@69 ($generated@@68 $generated@@120 $generated@@121)) $generated@@120)
 :pattern ( ($generated@@68 $generated@@120 $generated@@121))
))) (forall (($generated@@122 T@T) ($generated@@123 T@T) ) (! (= ($generated@@70 ($generated@@68 $generated@@122 $generated@@123)) $generated@@123)
 :pattern ( ($generated@@68 $generated@@122 $generated@@123))
))) (forall (($generated@@124 T@U) ($generated@@125 T@U) ($generated@@126 T@U) ) (! (let (($generated@@127 ($generated@@70 (type $generated@@124))))
(= (type ($generated@@55 $generated@@124 $generated@@125 $generated@@126)) $generated@@127))
 :pattern ( ($generated@@55 $generated@@124 $generated@@125 $generated@@126))
))) (forall (($generated@@128 T@U) ($generated@@129 T@U) ($generated@@130 T@U) ($generated@@131 T@U) ) (! (let (($generated@@132 (type $generated@@131)))
(let (($generated@@133 (type $generated@@129)))
(= (type ($generated@@71 $generated@@128 $generated@@129 $generated@@130 $generated@@131)) ($generated@@68 $generated@@133 $generated@@132))))
 :pattern ( ($generated@@71 $generated@@128 $generated@@129 $generated@@130 $generated@@131))
))) (forall (($generated@@134 T@U) ($generated@@135 T@U) ($generated@@136 T@U) ($generated@@137 T@U) ) (! (let (($generated@@138 ($generated@@70 (type $generated@@134))))
 (=> (= (type $generated@@137) $generated@@138) (= ($generated@@55 ($generated@@71 $generated@@134 $generated@@135 $generated@@136 $generated@@137) $generated@@135 $generated@@136) $generated@@137)))
 :weight 0
))) (and (and (forall (($generated@@139 T@U) ($generated@@140 T@U) ($generated@@141 T@U) ($generated@@142 T@U) ($generated@@143 T@U) ($generated@@144 T@U) ) (!  (or (= $generated@@141 $generated@@143) (= ($generated@@55 ($generated@@71 $generated@@140 $generated@@141 $generated@@142 $generated@@139) $generated@@143 $generated@@144) ($generated@@55 $generated@@140 $generated@@143 $generated@@144)))
 :weight 0
)) (forall (($generated@@145 T@U) ($generated@@146 T@U) ($generated@@147 T@U) ($generated@@148 T@U) ($generated@@149 T@U) ($generated@@150 T@U) ) (!  (or (= $generated@@148 $generated@@150) (= ($generated@@55 ($generated@@71 $generated@@146 $generated@@147 $generated@@148 $generated@@145) $generated@@149 $generated@@150) ($generated@@55 $generated@@146 $generated@@149 $generated@@150)))
 :weight 0
))) (forall (($generated@@151 T@U) ($generated@@152 T@U) ($generated@@153 T@U) ($generated@@154 T@U) ($generated@@155 T@U) ($generated@@156 T@U) ) (!  (or true (= ($generated@@55 ($generated@@71 $generated@@152 $generated@@153 $generated@@154 $generated@@151) $generated@@155 $generated@@156) ($generated@@55 $generated@@152 $generated@@155 $generated@@156)))
 :weight 0
)))) (forall (($generated@@157 T@U) ($generated@@158 T@U) ($generated@@159 T@U) ($generated@@160 Bool) ) (! (= (type ($generated@@56 $generated@@157 $generated@@158 $generated@@159 $generated@@160)) ($generated@@68 $generated@@58 $generated@@4))
 :pattern ( ($generated@@56 $generated@@157 $generated@@158 $generated@@159 $generated@@160))
))))
(assert (forall (($generated@@161 T@U) ($generated@@162 T@U) ($generated@@163 T@U) ($generated@@164 Bool) ($generated@@165 T@U) ($generated@@166 T@U) ) (! (let (($generated@@167 ($generated@@57 (type $generated@@166))))
 (=> (and (and (and (and (= (type $generated@@161) $generated@@58) (= (type $generated@@162) ($generated@@59 $generated@@58 $generated@@60))) (= (type $generated@@163) ($generated@@61 $generated@@4))) (= (type $generated@@165) $generated@@58)) (= (type $generated@@166) ($generated@@61 $generated@@167))) (= ($generated@@0 ($generated@@55 ($generated@@56 $generated@@161 $generated@@162 $generated@@163 $generated@@164) $generated@@165 $generated@@166))  (=> (and (not (= $generated@@165 $generated@@161)) ($generated@@0 ($generated@@62 ($generated@@63 $generated@@162 $generated@@165) $generated@@163))) $generated@@164))))
 :pattern ( ($generated@@55 ($generated@@56 $generated@@161 $generated@@162 $generated@@163 $generated@@164) $generated@@165 $generated@@166))
)))
(assert (forall (($generated@@169 T@U) ) (! (= (type ($generated@@168 $generated@@169)) $generated@@47)
 :pattern ( ($generated@@168 $generated@@169))
)))
(assert  (=> (<= 1 $generated@@44) (forall (($generated@@170 T@U) ($generated@@171 T@U) ($generated@@172 T@U) ($generated@@173 T@U) ($generated@@174 Int) ) (!  (=> (and (and (and (and (= (type $generated@@170) $generated@@46) (= (type $generated@@171) $generated@@46)) (= (type $generated@@172) $generated@@46)) (= (type $generated@@173) $generated@@47)) (or ($generated@@48 $generated@@170 $generated@@171 $generated@@172 $generated@@174) (and (not (= 1 $generated@@44)) (<= ($generated@@49 0) $generated@@174)))) (and (=> (< 0 $generated@@174) ($generated@@48 $generated@@171 $generated@@170 $generated@@172 (- $generated@@174 1))) (= ($generated@@45 $generated@@170 $generated@@171 $generated@@172 ($generated@@168 $generated@@173) $generated@@174)  (=> (< 0 $generated@@174) ($generated@@45 $generated@@171 $generated@@170 $generated@@172 $generated@@173 (- $generated@@174 1))))))
 :pattern ( ($generated@@45 $generated@@170 $generated@@171 $generated@@172 ($generated@@168 $generated@@173) $generated@@174))
))))
(assert (forall (($generated@@175 Int) ) (! (= ($generated@@49 $generated@@175) $generated@@175)
 :pattern ( ($generated@@49 $generated@@175))
)))
(assert (forall (($generated@@177 T@U) ) (! (let (($generated@@178 (type $generated@@177)))
(= (type ($generated@@176 $generated@@177)) $generated@@178))
 :pattern ( ($generated@@176 $generated@@177))
)))
(assert (forall (($generated@@179 T@U) ) (! (= ($generated@@176 $generated@@179) $generated@@179)
 :pattern ( ($generated@@176 $generated@@179))
)))
(assert  (=> (<= 1 $generated@@44) (forall (($generated@@180 T@U) ($generated@@181 T@U) ($generated@@182 T@U) ($generated@@183 T@U) ($generated@@184 Int) ) (!  (=> (and (and (and (and (= (type $generated@@180) $generated@@46) (= (type $generated@@181) $generated@@46)) (= (type $generated@@182) $generated@@46)) (= (type $generated@@183) $generated@@47)) (or ($generated@@48 $generated@@180 $generated@@181 $generated@@182 ($generated@@49 $generated@@184)) (and (not (= 1 $generated@@44)) (<= ($generated@@49 0) $generated@@184)))) (and (=> (< 0 $generated@@184) ($generated@@48 $generated@@181 $generated@@180 $generated@@182 (- $generated@@184 1))) (= ($generated@@45 $generated@@180 $generated@@181 $generated@@182 ($generated@@168 $generated@@183) ($generated@@49 $generated@@184))  (=> (< 0 $generated@@184) ($generated@@45 $generated@@181 $generated@@180 $generated@@182 ($generated@@168 $generated@@183) (- $generated@@184 1))))))
 :weight 3
 :pattern ( ($generated@@45 $generated@@180 $generated@@181 $generated@@182 ($generated@@168 $generated@@183) ($generated@@49 $generated@@184)))
))))
(assert  (and (forall (($generated@@187 T@U) ) (! (= (type ($generated@@185 $generated@@187)) $generated@@47)
 :pattern ( ($generated@@185 $generated@@187))
)) (= (type $generated@@186) $generated@@47)))
(assert (forall (($generated@@188 T@U) ($generated@@189 T@U) ($generated@@190 T@U) ($generated@@191 T@U) ($generated@@192 Int) ) (!  (=> (and (and (and (= (type $generated@@188) $generated@@46) (= (type $generated@@189) $generated@@46)) (= (type $generated@@190) $generated@@46)) (= (type $generated@@191) $generated@@47)) (= ($generated@@45 $generated@@188 $generated@@189 $generated@@190 $generated@@191 $generated@@192) ($generated@@45 $generated@@188 $generated@@189 $generated@@190 $generated@@186 $generated@@192)))
 :pattern ( ($generated@@45 $generated@@188 $generated@@189 $generated@@190 ($generated@@185 $generated@@191) $generated@@192))
)))
(assert  (=> (<= 1 $generated@@44) (forall (($generated@@193 T@U) ($generated@@194 T@U) ($generated@@195 T@U) ($generated@@196 T@U) ($generated@@197 Int) ) (!  (=> (and (and (and (and (= (type $generated@@193) $generated@@46) (= (type $generated@@194) $generated@@46)) (= (type $generated@@195) $generated@@46)) (= (type $generated@@196) $generated@@47)) (= $generated@@197 0)) ($generated@@45 $generated@@193 $generated@@194 $generated@@195 $generated@@196 $generated@@197))
 :pattern ( ($generated@@45 $generated@@193 $generated@@194 $generated@@195 $generated@@196 $generated@@197))
))))
(assert (forall (($generated@@198 T@U) ($generated@@199 T@U) ($generated@@200 T@U) ($generated@@201 T@U) ($generated@@202 Int) ) (!  (=> (and (and (and (= (type $generated@@198) $generated@@46) (= (type $generated@@199) $generated@@46)) (= (type $generated@@200) $generated@@46)) (= (type $generated@@201) $generated@@47)) (= ($generated@@45 $generated@@198 $generated@@199 $generated@@200 ($generated@@168 $generated@@201) $generated@@202) ($generated@@45 $generated@@198 $generated@@199 $generated@@200 $generated@@201 $generated@@202)))
 :pattern ( ($generated@@45 $generated@@198 $generated@@199 $generated@@200 ($generated@@168 $generated@@201) $generated@@202))
)))
(assert  (and (and (= ($generated@@1 $generated@@205) 13) (forall (($generated@@206 T@U) ) (! (= (type ($generated@@203 $generated@@206)) $generated@@205)
 :pattern ( ($generated@@203 $generated@@206))
))) (forall (($generated@@207 T@T) ($generated@@208 T@U) ) (! (= (type ($generated@@204 $generated@@207 $generated@@208)) $generated@@207)
 :pattern ( ($generated@@204 $generated@@207 $generated@@208))
))))
(assert (forall (($generated@@209 T@U) ) (! (let (($generated@@210 (type $generated@@209)))
(= ($generated@@204 $generated@@210 ($generated@@203 $generated@@209)) $generated@@209))
 :pattern ( ($generated@@203 $generated@@209))
)))
(assert (forall (($generated@@211 Int) ) (! (= ($generated@@203 ($generated@@8 ($generated@@49 $generated@@211))) ($generated@@176 ($generated@@203 ($generated@@8 $generated@@211))))
 :pattern ( ($generated@@203 ($generated@@8 ($generated@@49 $generated@@211))))
)))
(assert (forall (($generated@@212 T@U) ) (! (= ($generated@@203 ($generated@@176 $generated@@212)) ($generated@@176 ($generated@@203 $generated@@212)))
 :pattern ( ($generated@@203 ($generated@@176 $generated@@212)))
)))
(push 1)
(declare-fun ControlFlow (Int Int) Int)
(declare-fun $generated@@213 () T@U)
(declare-fun $generated@@214 () T@U)
(declare-fun $generated@@215 () T@U)
(declare-fun $generated@@216 () Int)
(declare-fun $generated@@217 () T@U)
(declare-fun $generated@@218 () T@U)
(declare-fun $generated@@219 () T@U)
(declare-fun $generated@@220 () T@U)
(declare-fun $generated@@221 (T@U) Bool)
(declare-fun $generated@@222 () T@U)
(declare-fun $generated@@223 (T@U) Bool)
(assert  (and (and (and (and (and (and (and (= (type $generated@@213) $generated@@46) (= (type $generated@@214) $generated@@46)) (= (type $generated@@215) $generated@@46)) (= (type $generated@@217) ($generated@@68 $generated@@58 $generated@@4))) (= (type $generated@@218) $generated@@58)) (= (type $generated@@219) ($generated@@59 $generated@@58 $generated@@60))) (= (type $generated@@220) ($generated@@61 $generated@@4))) (= (type $generated@@222) ($generated@@59 $generated@@58 $generated@@60))))
(set-option :timeout 0)
(set-option :rlimit 0)
(assert (not
 (=> (= (ControlFlow 0 0) 6) (let (($generated@@224  (=> (= (ControlFlow 0 2) (- 0 1)) (=> ($generated@@48 $generated@@213 $generated@@214 $generated@@215 $generated@@216) (or ($generated@@45 $generated@@213 $generated@@214 $generated@@215 ($generated@@168 $generated@@186) $generated@@216) (=> (< 0 $generated@@216) ($generated@@45 $generated@@214 $generated@@213 $generated@@215 ($generated@@168 ($generated@@168 $generated@@186)) (- $generated@@216 1))))))))
(let (($generated@@225  (=> (and (<= $generated@@216 0) (= (ControlFlow 0 4) 2)) $generated@@224)))
(let (($generated@@226  (=> (and (< 0 $generated@@216) (= (ControlFlow 0 3) 2)) $generated@@224)))
(let (($generated@@227  (=> (= $generated@@217 ($generated@@56 $generated@@218 $generated@@219 $generated@@220 false)) (=> (and (and ($generated@@221 $generated@@222) ($generated@@223 $generated@@222)) (and (= $generated@@219 $generated@@222) (forall (($generated@@228 Int) )  (=> (and (and (<= ($generated@@49 0) $generated@@228) ($generated@@0 ($generated@@176 ($generated@@11 true)))) (and (<= 0 $generated@@228) (< $generated@@228 $generated@@216))) ($generated@@45 $generated@@213 $generated@@214 $generated@@215 ($generated@@168 $generated@@186) $generated@@228))))) (and (=> (= (ControlFlow 0 5) 3) $generated@@226) (=> (= (ControlFlow 0 5) 4) $generated@@225))))))
(let (($generated@@229  (=> (and (and (and ($generated@@221 $generated@@219) ($generated@@223 $generated@@219)) (<= ($generated@@49 0) $generated@@216)) (and (= 2 $generated@@44) (= (ControlFlow 0 6) 5))) $generated@@227)))
$generated@@229))))))
))
(check-sat)
(pop 1)
; Valid
(get-info :rlimit)
