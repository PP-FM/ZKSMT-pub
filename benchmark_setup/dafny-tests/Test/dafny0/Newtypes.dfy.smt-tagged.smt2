(set-logic UFNIRA)
(set-option :print-success false)
(set-info :smt-lib-version 2.6)
(set-option :auto_config false)
(set-option :type_check true)
(set-option :smt.case_split 3)
(set-option :smt.qi.eager_threshold 100)
(set-option :smt.delay_units true)
(set-option :smt.arith.solver 2)
(set-option :smt.mbqi false)
(set-option :model.compact false)
(set-option :model.v2 true)
(set-option :pp.bv_literals false)
; done setting options


(set-info :category "industrial")
(declare-sort |T@U| 0)
(declare-sort |T@T| 0)
(declare-fun real_pow (Real Real) Real)
(declare-fun UOrdering2 (|T@U| |T@U|) Bool)
(declare-fun UOrdering3 (|T@T| |T@U| |T@U|) Bool)
(declare-fun tickleBool (Bool) Bool)
(assert (and (tickleBool true) (tickleBool false)))
(declare-fun $generated (T@U) Int)
(declare-fun $generated@@0 (T@U) Bool)
(declare-fun $generated@@1 (T@T) Int)
(declare-fun $generated@@2 () T@T)
(declare-fun $generated@@3 () T@T)
(declare-fun $generated@@4 () T@T)
(declare-fun $generated@@5 () T@T)
(declare-fun $generated@@6 () T@T)
(declare-fun $generated@@7 () T@T)
(declare-fun $generated@@8 (Int) T@U)
(declare-fun type (T@U) T@T)
(declare-fun $generated@@9 (Real) T@U)
(declare-fun $generated@@10 (T@U) Real)
(declare-fun $generated@@11 (Bool) T@U)
(declare-fun $generated@@12 (RoundingMode) T@U)
(declare-fun $generated@@13 (T@U) RoundingMode)
(declare-fun $generated@@14 (String) T@U)
(declare-fun $generated@@15 (T@U) String)
(declare-fun $generated@@16 ((RegEx String)) T@U)
(declare-fun $generated@@17 (T@U) (RegEx String))
(declare-fun $generated@@44 (T@U T@U T@U) T@U)
(declare-fun $generated@@45 (T@U T@U T@U Bool) T@U)
(declare-fun $generated@@46 (T@T) T@T)
(declare-fun $generated@@47 () T@T)
(declare-fun $generated@@48 (T@T T@T) T@T)
(declare-fun $generated@@49 () T@T)
(declare-fun $generated@@50 (T@T) T@T)
(declare-fun $generated@@51 (T@U T@U) T@U)
(declare-fun $generated@@52 (T@U T@U) T@U)
(declare-fun $generated@@53 (T@T) T@T)
(declare-fun $generated@@54 (T@T) T@T)
(declare-fun $generated@@55 (T@U T@U T@U) T@U)
(declare-fun $generated@@56 (T@U T@U T@U) T@U)
(declare-fun $generated@@57 (T@T T@T) T@T)
(declare-fun $generated@@58 (T@T) T@T)
(declare-fun $generated@@59 (T@T) T@T)
(declare-fun $generated@@60 (T@U T@U T@U T@U) T@U)
(declare-fun $generated@@157 (Int) Int)
(declare-fun $generated@@159 (T@U) T@U)
(declare-fun $generated@@163 (T@U) T@U)
(declare-fun $generated@@164 (T@T T@U) T@U)
(declare-fun $generated@@165 () T@T)
(declare-fun $generated@@171 (Int Int) Int)
(assert  (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (= ($generated@@1 $generated@@2) 0) (= ($generated@@1 $generated@@3) 1)) (= ($generated@@1 $generated@@4) 2)) (= ($generated@@1 $generated@@5) 3)) (= ($generated@@1 $generated@@6) 4)) (= ($generated@@1 $generated@@7) 5)) (forall (($generated@@18 Int) ) (! (= ($generated ($generated@@8 $generated@@18)) $generated@@18)
 :pattern ( ($generated@@8 $generated@@18))
))) (forall (($generated@@19 T@U) ) (!  (=> (= (type $generated@@19) $generated@@2) (= ($generated@@8 ($generated $generated@@19)) $generated@@19))
 :pattern ( ($generated $generated@@19))
))) (forall (($generated@@20 Int) ) (! (= (type ($generated@@8 $generated@@20)) $generated@@2)
 :pattern ( ($generated@@8 $generated@@20))
))) (forall (($generated@@21 Real) ) (! (= ($generated@@10 ($generated@@9 $generated@@21)) $generated@@21)
 :pattern ( ($generated@@9 $generated@@21))
))) (forall (($generated@@22 T@U) ) (!  (=> (= (type $generated@@22) $generated@@3) (= ($generated@@9 ($generated@@10 $generated@@22)) $generated@@22))
 :pattern ( ($generated@@10 $generated@@22))
))) (forall (($generated@@23 Real) ) (! (= (type ($generated@@9 $generated@@23)) $generated@@3)
 :pattern ( ($generated@@9 $generated@@23))
))) (forall (($generated@@24 Bool) ) (! (= ($generated@@0 ($generated@@11 $generated@@24)) $generated@@24)
 :pattern ( ($generated@@11 $generated@@24))
))) (forall (($generated@@25 T@U) ) (!  (=> (= (type $generated@@25) $generated@@4) (= ($generated@@11 ($generated@@0 $generated@@25)) $generated@@25))
 :pattern ( ($generated@@0 $generated@@25))
))) (forall (($generated@@26 Bool) ) (! (= (type ($generated@@11 $generated@@26)) $generated@@4)
 :pattern ( ($generated@@11 $generated@@26))
))) (forall (($generated@@27 RoundingMode) ) (! (= ($generated@@13 ($generated@@12 $generated@@27)) $generated@@27)
 :pattern ( ($generated@@12 $generated@@27))
))) (forall (($generated@@28 T@U) ) (!  (=> (= (type $generated@@28) $generated@@5) (= ($generated@@12 ($generated@@13 $generated@@28)) $generated@@28))
 :pattern ( ($generated@@13 $generated@@28))
))) (forall (($generated@@29 RoundingMode) ) (! (= (type ($generated@@12 $generated@@29)) $generated@@5)
 :pattern ( ($generated@@12 $generated@@29))
))) (forall (($generated@@30 String) ) (! (= ($generated@@15 ($generated@@14 $generated@@30)) $generated@@30)
 :pattern ( ($generated@@14 $generated@@30))
))) (forall (($generated@@31 T@U) ) (!  (=> (= (type $generated@@31) $generated@@6) (= ($generated@@14 ($generated@@15 $generated@@31)) $generated@@31))
 :pattern ( ($generated@@15 $generated@@31))
))) (forall (($generated@@32 String) ) (! (= (type ($generated@@14 $generated@@32)) $generated@@6)
 :pattern ( ($generated@@14 $generated@@32))
))) (forall (($generated@@33 (RegEx String)) ) (! (= ($generated@@17 ($generated@@16 $generated@@33)) $generated@@33)
 :pattern ( ($generated@@16 $generated@@33))
))) (forall (($generated@@34 T@U) ) (!  (=> (= (type $generated@@34) $generated@@7) (= ($generated@@16 ($generated@@17 $generated@@34)) $generated@@34))
 :pattern ( ($generated@@17 $generated@@34))
))) (forall (($generated@@35 (RegEx String)) ) (! (= (type ($generated@@16 $generated@@35)) $generated@@7)
 :pattern ( ($generated@@16 $generated@@35))
))))
(assert (forall (($generated@@36 T@U) ) (! (UOrdering2 $generated@@36 $generated@@36)
 :no-pattern ($generated $generated@@36)
 :no-pattern ($generated@@0 $generated@@36)
)))
(assert (forall (($generated@@37 T@U) ($generated@@38 T@U) ($generated@@39 T@U) ) (! (let (($generated@@40 (type $generated@@37)))
 (=> (and (and (= (type $generated@@38) $generated@@40) (= (type $generated@@39) $generated@@40)) (and (UOrdering2 $generated@@37 $generated@@38) (UOrdering2 $generated@@38 $generated@@39))) (UOrdering2 $generated@@37 $generated@@39)))
 :pattern ( (UOrdering2 $generated@@37 $generated@@38) (UOrdering2 $generated@@38 $generated@@39))
)))
(assert (forall (($generated@@41 T@U) ($generated@@42 T@U) ) (! (let (($generated@@43 (type $generated@@41)))
 (=> (= (type $generated@@42) $generated@@43) (=> (and (UOrdering2 $generated@@41 $generated@@42) (UOrdering2 $generated@@42 $generated@@41)) (= $generated@@41 $generated@@42))))
 :pattern ( (UOrdering2 $generated@@41 $generated@@42) (UOrdering2 $generated@@42 $generated@@41))
)))
(assert  (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (forall (($generated@@61 T@T) ($generated@@62 T@T) ) (= ($generated@@1 ($generated@@48 $generated@@61 $generated@@62)) 6)) (forall (($generated@@63 T@T) ($generated@@64 T@T) ) (! (= ($generated@@53 ($generated@@48 $generated@@63 $generated@@64)) $generated@@63)
 :pattern ( ($generated@@48 $generated@@63 $generated@@64))
))) (forall (($generated@@65 T@T) ($generated@@66 T@T) ) (! (= ($generated@@54 ($generated@@48 $generated@@65 $generated@@66)) $generated@@66)
 :pattern ( ($generated@@48 $generated@@65 $generated@@66))
))) (forall (($generated@@67 T@U) ($generated@@68 T@U) ) (! (let (($generated@@69 ($generated@@54 (type $generated@@67))))
(= (type ($generated@@52 $generated@@67 $generated@@68)) $generated@@69))
 :pattern ( ($generated@@52 $generated@@67 $generated@@68))
))) (forall (($generated@@70 T@U) ($generated@@71 T@U) ($generated@@72 T@U) ) (! (let (($generated@@73 (type $generated@@72)))
(let (($generated@@74 (type $generated@@71)))
(= (type ($generated@@55 $generated@@70 $generated@@71 $generated@@72)) ($generated@@48 $generated@@74 $generated@@73))))
 :pattern ( ($generated@@55 $generated@@70 $generated@@71 $generated@@72))
))) (forall (($generated@@75 T@U) ($generated@@76 T@U) ($generated@@77 T@U) ) (! (let (($generated@@78 ($generated@@54 (type $generated@@75))))
 (=> (= (type $generated@@77) $generated@@78) (= ($generated@@52 ($generated@@55 $generated@@75 $generated@@76 $generated@@77) $generated@@76) $generated@@77)))
 :weight 0
))) (and (forall (($generated@@79 T@U) ($generated@@80 T@U) ($generated@@81 T@U) ($generated@@82 T@U) ) (!  (or (= $generated@@81 $generated@@82) (= ($generated@@52 ($generated@@55 $generated@@80 $generated@@81 $generated@@79) $generated@@82) ($generated@@52 $generated@@80 $generated@@82)))
 :weight 0
)) (forall (($generated@@83 T@U) ($generated@@84 T@U) ($generated@@85 T@U) ($generated@@86 T@U) ) (!  (or true (= ($generated@@52 ($generated@@55 $generated@@84 $generated@@85 $generated@@83) $generated@@86) ($generated@@52 $generated@@84 $generated@@86)))
 :weight 0
)))) (forall (($generated@@87 T@T) ) (= ($generated@@1 ($generated@@50 $generated@@87)) 7))) (forall (($generated@@88 T@T) ) (! (= ($generated@@46 ($generated@@50 $generated@@88)) $generated@@88)
 :pattern ( ($generated@@50 $generated@@88))
))) (forall (($generated@@89 T@U) ($generated@@90 T@U) ) (! (let (($generated@@91 ($generated@@46 (type $generated@@90))))
(= (type ($generated@@51 $generated@@89 $generated@@90)) $generated@@91))
 :pattern ( ($generated@@51 $generated@@89 $generated@@90))
))) (= ($generated@@1 $generated@@49) 8)) (forall (($generated@@92 T@U) ($generated@@93 T@U) ($generated@@94 T@U) ) (! (= (type ($generated@@56 $generated@@92 $generated@@93 $generated@@94)) $generated@@49)
 :pattern ( ($generated@@56 $generated@@92 $generated@@93 $generated@@94))
))) (forall (($generated@@95 T@U) ($generated@@96 T@U) ($generated@@97 T@U) ) (! (let (($generated@@98 ($generated@@46 (type $generated@@96))))
 (=> (= (type $generated@@97) $generated@@98) (= ($generated@@51 ($generated@@56 $generated@@95 $generated@@96 $generated@@97) $generated@@96) $generated@@97)))
 :weight 0
))) (and (forall (($generated@@99 T@U) ($generated@@100 T@U) ($generated@@101 T@U) ($generated@@102 T@U) ) (!  (or (= $generated@@101 $generated@@102) (= ($generated@@51 ($generated@@56 $generated@@100 $generated@@101 $generated@@99) $generated@@102) ($generated@@51 $generated@@100 $generated@@102)))
 :weight 0
)) (forall (($generated@@103 T@U) ($generated@@104 T@U) ($generated@@105 T@U) ($generated@@106 T@U) ) (!  (or true (= ($generated@@51 ($generated@@56 $generated@@104 $generated@@105 $generated@@103) $generated@@106) ($generated@@51 $generated@@104 $generated@@106)))
 :weight 0
)))) (= ($generated@@1 $generated@@47) 9)) (forall (($generated@@107 T@T) ($generated@@108 T@T) ) (= ($generated@@1 ($generated@@57 $generated@@107 $generated@@108)) 10))) (forall (($generated@@109 T@T) ($generated@@110 T@T) ) (! (= ($generated@@58 ($generated@@57 $generated@@109 $generated@@110)) $generated@@109)
 :pattern ( ($generated@@57 $generated@@109 $generated@@110))
))) (forall (($generated@@111 T@T) ($generated@@112 T@T) ) (! (= ($generated@@59 ($generated@@57 $generated@@111 $generated@@112)) $generated@@112)
 :pattern ( ($generated@@57 $generated@@111 $generated@@112))
))) (forall (($generated@@113 T@U) ($generated@@114 T@U) ($generated@@115 T@U) ) (! (let (($generated@@116 ($generated@@59 (type $generated@@113))))
(= (type ($generated@@44 $generated@@113 $generated@@114 $generated@@115)) $generated@@116))
 :pattern ( ($generated@@44 $generated@@113 $generated@@114 $generated@@115))
))) (forall (($generated@@117 T@U) ($generated@@118 T@U) ($generated@@119 T@U) ($generated@@120 T@U) ) (! (let (($generated@@121 (type $generated@@120)))
(let (($generated@@122 (type $generated@@118)))
(= (type ($generated@@60 $generated@@117 $generated@@118 $generated@@119 $generated@@120)) ($generated@@57 $generated@@122 $generated@@121))))
 :pattern ( ($generated@@60 $generated@@117 $generated@@118 $generated@@119 $generated@@120))
))) (forall (($generated@@123 T@U) ($generated@@124 T@U) ($generated@@125 T@U) ($generated@@126 T@U) ) (! (let (($generated@@127 ($generated@@59 (type $generated@@123))))
 (=> (= (type $generated@@126) $generated@@127) (= ($generated@@44 ($generated@@60 $generated@@123 $generated@@124 $generated@@125 $generated@@126) $generated@@124 $generated@@125) $generated@@126)))
 :weight 0
))) (and (and (forall (($generated@@128 T@U) ($generated@@129 T@U) ($generated@@130 T@U) ($generated@@131 T@U) ($generated@@132 T@U) ($generated@@133 T@U) ) (!  (or (= $generated@@130 $generated@@132) (= ($generated@@44 ($generated@@60 $generated@@129 $generated@@130 $generated@@131 $generated@@128) $generated@@132 $generated@@133) ($generated@@44 $generated@@129 $generated@@132 $generated@@133)))
 :weight 0
)) (forall (($generated@@134 T@U) ($generated@@135 T@U) ($generated@@136 T@U) ($generated@@137 T@U) ($generated@@138 T@U) ($generated@@139 T@U) ) (!  (or (= $generated@@137 $generated@@139) (= ($generated@@44 ($generated@@60 $generated@@135 $generated@@136 $generated@@137 $generated@@134) $generated@@138 $generated@@139) ($generated@@44 $generated@@135 $generated@@138 $generated@@139)))
 :weight 0
))) (forall (($generated@@140 T@U) ($generated@@141 T@U) ($generated@@142 T@U) ($generated@@143 T@U) ($generated@@144 T@U) ($generated@@145 T@U) ) (!  (or true (= ($generated@@44 ($generated@@60 $generated@@141 $generated@@142 $generated@@143 $generated@@140) $generated@@144 $generated@@145) ($generated@@44 $generated@@141 $generated@@144 $generated@@145)))
 :weight 0
)))) (forall (($generated@@146 T@U) ($generated@@147 T@U) ($generated@@148 T@U) ($generated@@149 Bool) ) (! (= (type ($generated@@45 $generated@@146 $generated@@147 $generated@@148 $generated@@149)) ($generated@@57 $generated@@47 $generated@@4))
 :pattern ( ($generated@@45 $generated@@146 $generated@@147 $generated@@148 $generated@@149))
))))
(assert (forall (($generated@@150 T@U) ($generated@@151 T@U) ($generated@@152 T@U) ($generated@@153 Bool) ($generated@@154 T@U) ($generated@@155 T@U) ) (! (let (($generated@@156 ($generated@@46 (type $generated@@155))))
 (=> (and (and (and (and (= (type $generated@@150) $generated@@47) (= (type $generated@@151) ($generated@@48 $generated@@47 $generated@@49))) (= (type $generated@@152) ($generated@@50 $generated@@4))) (= (type $generated@@154) $generated@@47)) (= (type $generated@@155) ($generated@@50 $generated@@156))) (= ($generated@@0 ($generated@@44 ($generated@@45 $generated@@150 $generated@@151 $generated@@152 $generated@@153) $generated@@154 $generated@@155))  (=> (and (not (= $generated@@154 $generated@@150)) ($generated@@0 ($generated@@51 ($generated@@52 $generated@@151 $generated@@154) $generated@@152))) $generated@@153))))
 :pattern ( ($generated@@44 ($generated@@45 $generated@@150 $generated@@151 $generated@@152 $generated@@153) $generated@@154 $generated@@155))
)))
(assert (forall (($generated@@158 Int) ) (! (= ($generated@@157 $generated@@158) $generated@@158)
 :pattern ( ($generated@@157 $generated@@158))
)))
(assert (forall (($generated@@160 T@U) ) (! (let (($generated@@161 (type $generated@@160)))
(= (type ($generated@@159 $generated@@160)) $generated@@161))
 :pattern ( ($generated@@159 $generated@@160))
)))
(assert (forall (($generated@@162 T@U) ) (! (= ($generated@@159 $generated@@162) $generated@@162)
 :pattern ( ($generated@@159 $generated@@162))
)))
(assert  (and (and (= ($generated@@1 $generated@@165) 11) (forall (($generated@@166 T@U) ) (! (= (type ($generated@@163 $generated@@166)) $generated@@165)
 :pattern ( ($generated@@163 $generated@@166))
))) (forall (($generated@@167 T@T) ($generated@@168 T@U) ) (! (= (type ($generated@@164 $generated@@167 $generated@@168)) $generated@@167)
 :pattern ( ($generated@@164 $generated@@167 $generated@@168))
))))
(assert (forall (($generated@@169 T@U) ) (! (let (($generated@@170 (type $generated@@169)))
(= ($generated@@164 $generated@@170 ($generated@@163 $generated@@169)) $generated@@169))
 :pattern ( ($generated@@163 $generated@@169))
)))
(assert (forall (($generated@@172 Int) ($generated@@173 Int) ) (! (= ($generated@@171 $generated@@172 $generated@@173) (mod $generated@@172 $generated@@173))
 :pattern ( ($generated@@171 $generated@@172 $generated@@173))
)))
(assert (forall (($generated@@174 Int) ) (! (= ($generated@@163 ($generated@@8 ($generated@@157 $generated@@174))) ($generated@@159 ($generated@@163 ($generated@@8 $generated@@174))))
 :pattern ( ($generated@@163 ($generated@@8 ($generated@@157 $generated@@174))))
)))
(assert (forall (($generated@@175 T@U) ) (! (= ($generated@@163 ($generated@@159 $generated@@175)) ($generated@@159 ($generated@@163 $generated@@175)))
 :pattern ( ($generated@@163 ($generated@@159 $generated@@175)))
)))
(push 1)
(declare-fun ControlFlow (Int Int) Int)
(declare-fun $generated@@176 () T@U)
(declare-fun $generated@@177 () T@U)
(declare-fun $generated@@178 () T@U)
(declare-fun $generated@@179 () T@U)
(declare-fun $generated@@180 (T@U) Bool)
(declare-fun $generated@@181 (T@U) Bool)
(declare-fun $generated@@182 () Int)
(assert  (and (and (and (= (type $generated@@176) ($generated@@57 $generated@@47 $generated@@4)) (= (type $generated@@177) $generated@@47)) (= (type $generated@@178) ($generated@@48 $generated@@47 $generated@@49))) (= (type $generated@@179) ($generated@@50 $generated@@4))))
(set-option :timeout 0)
(set-option :rlimit 0)
(assert (not
 (=> (= (ControlFlow 0 0) 6) (let (($generated@@183  (=> (= (ControlFlow 0 4) (- 0 3)) (= ($generated@@157 ($generated@@171 0 ($generated@@157 2))) ($generated@@157 0)))))
(let (($generated@@184  (=> (= (ControlFlow 0 2) (- 0 1)) (not (= ($generated@@157 2) 0)))))
(let (($generated@@185  (=> (= $generated@@176 ($generated@@45 $generated@@177 $generated@@178 $generated@@179 false)) (and (=> (= (ControlFlow 0 5) 2) $generated@@184) (=> (= (ControlFlow 0 5) 4) $generated@@183)))))
(let (($generated@@186  (=> (and (and ($generated@@180 $generated@@178) ($generated@@181 $generated@@178)) (and (= 0 $generated@@182) (= (ControlFlow 0 6) 5))) $generated@@185)))
$generated@@186)))))
))
(check-sat)
(pop 1)
; Valid
(get-info :rlimit)
(reset)
(set-option :rlimit 0)
; did a full reset
(reset)
(set-option :print-success false)
(set-info :smt-lib-version 2.6)
(set-option :auto_config false)
(set-option :type_check true)
(set-option :smt.case_split 3)
(set-option :smt.qi.eager_threshold 100)
(set-option :smt.delay_units true)
(set-option :smt.arith.solver 2)
(set-option :smt.mbqi false)
(set-option :model.compact false)
(set-option :model.v2 true)
(set-option :pp.bv_literals false)
; done setting options


(set-info :category "industrial")
(declare-sort |T@U| 0)
(declare-sort |T@T| 0)
(declare-fun real_pow (Real Real) Real)
(declare-fun UOrdering2 (|T@U| |T@U|) Bool)
(declare-fun UOrdering3 (|T@T| |T@U| |T@U|) Bool)
(declare-fun tickleBool (Bool) Bool)
(assert (and (tickleBool true) (tickleBool false)))
(declare-fun $generated (T@U) Int)
(declare-fun $generated@@0 (T@U) Bool)
(declare-fun $generated@@1 (T@T) Int)
(declare-fun $generated@@2 () T@T)
(declare-fun $generated@@3 () T@T)
(declare-fun $generated@@4 () T@T)
(declare-fun $generated@@5 () T@T)
(declare-fun $generated@@6 () T@T)
(declare-fun $generated@@7 () T@T)
(declare-fun $generated@@8 (Int) T@U)
(declare-fun type (T@U) T@T)
(declare-fun $generated@@9 (Real) T@U)
(declare-fun $generated@@10 (T@U) Real)
(declare-fun $generated@@11 (Bool) T@U)
(declare-fun $generated@@12 (RoundingMode) T@U)
(declare-fun $generated@@13 (T@U) RoundingMode)
(declare-fun $generated@@14 (String) T@U)
(declare-fun $generated@@15 (T@U) String)
(declare-fun $generated@@16 ((RegEx String)) T@U)
(declare-fun $generated@@17 (T@U) (RegEx String))
(declare-fun $generated@@44 (T@U T@U T@U) T@U)
(declare-fun $generated@@45 (T@U T@U T@U Bool) T@U)
(declare-fun $generated@@46 (T@T) T@T)
(declare-fun $generated@@47 () T@T)
(declare-fun $generated@@48 (T@T T@T) T@T)
(declare-fun $generated@@49 () T@T)
(declare-fun $generated@@50 (T@T) T@T)
(declare-fun $generated@@51 (T@U T@U) T@U)
(declare-fun $generated@@52 (T@U T@U) T@U)
(declare-fun $generated@@53 (T@T) T@T)
(declare-fun $generated@@54 (T@T) T@T)
(declare-fun $generated@@55 (T@U T@U T@U) T@U)
(declare-fun $generated@@56 (T@U T@U T@U) T@U)
(declare-fun $generated@@57 (T@T T@T) T@T)
(declare-fun $generated@@58 (T@T) T@T)
(declare-fun $generated@@59 (T@T) T@T)
(declare-fun $generated@@60 (T@U T@U T@U T@U) T@U)
(declare-fun $generated@@157 (Int) Int)
(declare-fun $generated@@159 (T@U) T@U)
(declare-fun $generated@@163 (T@U) T@U)
(declare-fun $generated@@164 (T@T T@U) T@U)
(declare-fun $generated@@165 () T@T)
(assert  (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (= ($generated@@1 $generated@@2) 0) (= ($generated@@1 $generated@@3) 1)) (= ($generated@@1 $generated@@4) 2)) (= ($generated@@1 $generated@@5) 3)) (= ($generated@@1 $generated@@6) 4)) (= ($generated@@1 $generated@@7) 5)) (forall (($generated@@18 Int) ) (! (= ($generated ($generated@@8 $generated@@18)) $generated@@18)
 :pattern ( ($generated@@8 $generated@@18))
))) (forall (($generated@@19 T@U) ) (!  (=> (= (type $generated@@19) $generated@@2) (= ($generated@@8 ($generated $generated@@19)) $generated@@19))
 :pattern ( ($generated $generated@@19))
))) (forall (($generated@@20 Int) ) (! (= (type ($generated@@8 $generated@@20)) $generated@@2)
 :pattern ( ($generated@@8 $generated@@20))
))) (forall (($generated@@21 Real) ) (! (= ($generated@@10 ($generated@@9 $generated@@21)) $generated@@21)
 :pattern ( ($generated@@9 $generated@@21))
))) (forall (($generated@@22 T@U) ) (!  (=> (= (type $generated@@22) $generated@@3) (= ($generated@@9 ($generated@@10 $generated@@22)) $generated@@22))
 :pattern ( ($generated@@10 $generated@@22))
))) (forall (($generated@@23 Real) ) (! (= (type ($generated@@9 $generated@@23)) $generated@@3)
 :pattern ( ($generated@@9 $generated@@23))
))) (forall (($generated@@24 Bool) ) (! (= ($generated@@0 ($generated@@11 $generated@@24)) $generated@@24)
 :pattern ( ($generated@@11 $generated@@24))
))) (forall (($generated@@25 T@U) ) (!  (=> (= (type $generated@@25) $generated@@4) (= ($generated@@11 ($generated@@0 $generated@@25)) $generated@@25))
 :pattern ( ($generated@@0 $generated@@25))
))) (forall (($generated@@26 Bool) ) (! (= (type ($generated@@11 $generated@@26)) $generated@@4)
 :pattern ( ($generated@@11 $generated@@26))
))) (forall (($generated@@27 RoundingMode) ) (! (= ($generated@@13 ($generated@@12 $generated@@27)) $generated@@27)
 :pattern ( ($generated@@12 $generated@@27))
))) (forall (($generated@@28 T@U) ) (!  (=> (= (type $generated@@28) $generated@@5) (= ($generated@@12 ($generated@@13 $generated@@28)) $generated@@28))
 :pattern ( ($generated@@13 $generated@@28))
))) (forall (($generated@@29 RoundingMode) ) (! (= (type ($generated@@12 $generated@@29)) $generated@@5)
 :pattern ( ($generated@@12 $generated@@29))
))) (forall (($generated@@30 String) ) (! (= ($generated@@15 ($generated@@14 $generated@@30)) $generated@@30)
 :pattern ( ($generated@@14 $generated@@30))
))) (forall (($generated@@31 T@U) ) (!  (=> (= (type $generated@@31) $generated@@6) (= ($generated@@14 ($generated@@15 $generated@@31)) $generated@@31))
 :pattern ( ($generated@@15 $generated@@31))
))) (forall (($generated@@32 String) ) (! (= (type ($generated@@14 $generated@@32)) $generated@@6)
 :pattern ( ($generated@@14 $generated@@32))
))) (forall (($generated@@33 (RegEx String)) ) (! (= ($generated@@17 ($generated@@16 $generated@@33)) $generated@@33)
 :pattern ( ($generated@@16 $generated@@33))
))) (forall (($generated@@34 T@U) ) (!  (=> (= (type $generated@@34) $generated@@7) (= ($generated@@16 ($generated@@17 $generated@@34)) $generated@@34))
 :pattern ( ($generated@@17 $generated@@34))
))) (forall (($generated@@35 (RegEx String)) ) (! (= (type ($generated@@16 $generated@@35)) $generated@@7)
 :pattern ( ($generated@@16 $generated@@35))
))))
(assert (forall (($generated@@36 T@U) ) (! (UOrdering2 $generated@@36 $generated@@36)
 :no-pattern ($generated $generated@@36)
 :no-pattern ($generated@@0 $generated@@36)
)))
(assert (forall (($generated@@37 T@U) ($generated@@38 T@U) ($generated@@39 T@U) ) (! (let (($generated@@40 (type $generated@@37)))
 (=> (and (and (= (type $generated@@38) $generated@@40) (= (type $generated@@39) $generated@@40)) (and (UOrdering2 $generated@@37 $generated@@38) (UOrdering2 $generated@@38 $generated@@39))) (UOrdering2 $generated@@37 $generated@@39)))
 :pattern ( (UOrdering2 $generated@@37 $generated@@38) (UOrdering2 $generated@@38 $generated@@39))
)))
(assert (forall (($generated@@41 T@U) ($generated@@42 T@U) ) (! (let (($generated@@43 (type $generated@@41)))
 (=> (= (type $generated@@42) $generated@@43) (=> (and (UOrdering2 $generated@@41 $generated@@42) (UOrdering2 $generated@@42 $generated@@41)) (= $generated@@41 $generated@@42))))
 :pattern ( (UOrdering2 $generated@@41 $generated@@42) (UOrdering2 $generated@@42 $generated@@41))
)))
(assert  (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (forall (($generated@@61 T@T) ($generated@@62 T@T) ) (= ($generated@@1 ($generated@@48 $generated@@61 $generated@@62)) 6)) (forall (($generated@@63 T@T) ($generated@@64 T@T) ) (! (= ($generated@@53 ($generated@@48 $generated@@63 $generated@@64)) $generated@@63)
 :pattern ( ($generated@@48 $generated@@63 $generated@@64))
))) (forall (($generated@@65 T@T) ($generated@@66 T@T) ) (! (= ($generated@@54 ($generated@@48 $generated@@65 $generated@@66)) $generated@@66)
 :pattern ( ($generated@@48 $generated@@65 $generated@@66))
))) (forall (($generated@@67 T@U) ($generated@@68 T@U) ) (! (let (($generated@@69 ($generated@@54 (type $generated@@67))))
(= (type ($generated@@52 $generated@@67 $generated@@68)) $generated@@69))
 :pattern ( ($generated@@52 $generated@@67 $generated@@68))
))) (forall (($generated@@70 T@U) ($generated@@71 T@U) ($generated@@72 T@U) ) (! (let (($generated@@73 (type $generated@@72)))
(let (($generated@@74 (type $generated@@71)))
(= (type ($generated@@55 $generated@@70 $generated@@71 $generated@@72)) ($generated@@48 $generated@@74 $generated@@73))))
 :pattern ( ($generated@@55 $generated@@70 $generated@@71 $generated@@72))
))) (forall (($generated@@75 T@U) ($generated@@76 T@U) ($generated@@77 T@U) ) (! (let (($generated@@78 ($generated@@54 (type $generated@@75))))
 (=> (= (type $generated@@77) $generated@@78) (= ($generated@@52 ($generated@@55 $generated@@75 $generated@@76 $generated@@77) $generated@@76) $generated@@77)))
 :weight 0
))) (and (forall (($generated@@79 T@U) ($generated@@80 T@U) ($generated@@81 T@U) ($generated@@82 T@U) ) (!  (or (= $generated@@81 $generated@@82) (= ($generated@@52 ($generated@@55 $generated@@80 $generated@@81 $generated@@79) $generated@@82) ($generated@@52 $generated@@80 $generated@@82)))
 :weight 0
)) (forall (($generated@@83 T@U) ($generated@@84 T@U) ($generated@@85 T@U) ($generated@@86 T@U) ) (!  (or true (= ($generated@@52 ($generated@@55 $generated@@84 $generated@@85 $generated@@83) $generated@@86) ($generated@@52 $generated@@84 $generated@@86)))
 :weight 0
)))) (forall (($generated@@87 T@T) ) (= ($generated@@1 ($generated@@50 $generated@@87)) 7))) (forall (($generated@@88 T@T) ) (! (= ($generated@@46 ($generated@@50 $generated@@88)) $generated@@88)
 :pattern ( ($generated@@50 $generated@@88))
))) (forall (($generated@@89 T@U) ($generated@@90 T@U) ) (! (let (($generated@@91 ($generated@@46 (type $generated@@90))))
(= (type ($generated@@51 $generated@@89 $generated@@90)) $generated@@91))
 :pattern ( ($generated@@51 $generated@@89 $generated@@90))
))) (= ($generated@@1 $generated@@49) 8)) (forall (($generated@@92 T@U) ($generated@@93 T@U) ($generated@@94 T@U) ) (! (= (type ($generated@@56 $generated@@92 $generated@@93 $generated@@94)) $generated@@49)
 :pattern ( ($generated@@56 $generated@@92 $generated@@93 $generated@@94))
))) (forall (($generated@@95 T@U) ($generated@@96 T@U) ($generated@@97 T@U) ) (! (let (($generated@@98 ($generated@@46 (type $generated@@96))))
 (=> (= (type $generated@@97) $generated@@98) (= ($generated@@51 ($generated@@56 $generated@@95 $generated@@96 $generated@@97) $generated@@96) $generated@@97)))
 :weight 0
))) (and (forall (($generated@@99 T@U) ($generated@@100 T@U) ($generated@@101 T@U) ($generated@@102 T@U) ) (!  (or (= $generated@@101 $generated@@102) (= ($generated@@51 ($generated@@56 $generated@@100 $generated@@101 $generated@@99) $generated@@102) ($generated@@51 $generated@@100 $generated@@102)))
 :weight 0
)) (forall (($generated@@103 T@U) ($generated@@104 T@U) ($generated@@105 T@U) ($generated@@106 T@U) ) (!  (or true (= ($generated@@51 ($generated@@56 $generated@@104 $generated@@105 $generated@@103) $generated@@106) ($generated@@51 $generated@@104 $generated@@106)))
 :weight 0
)))) (= ($generated@@1 $generated@@47) 9)) (forall (($generated@@107 T@T) ($generated@@108 T@T) ) (= ($generated@@1 ($generated@@57 $generated@@107 $generated@@108)) 10))) (forall (($generated@@109 T@T) ($generated@@110 T@T) ) (! (= ($generated@@58 ($generated@@57 $generated@@109 $generated@@110)) $generated@@109)
 :pattern ( ($generated@@57 $generated@@109 $generated@@110))
))) (forall (($generated@@111 T@T) ($generated@@112 T@T) ) (! (= ($generated@@59 ($generated@@57 $generated@@111 $generated@@112)) $generated@@112)
 :pattern ( ($generated@@57 $generated@@111 $generated@@112))
))) (forall (($generated@@113 T@U) ($generated@@114 T@U) ($generated@@115 T@U) ) (! (let (($generated@@116 ($generated@@59 (type $generated@@113))))
(= (type ($generated@@44 $generated@@113 $generated@@114 $generated@@115)) $generated@@116))
 :pattern ( ($generated@@44 $generated@@113 $generated@@114 $generated@@115))
))) (forall (($generated@@117 T@U) ($generated@@118 T@U) ($generated@@119 T@U) ($generated@@120 T@U) ) (! (let (($generated@@121 (type $generated@@120)))
(let (($generated@@122 (type $generated@@118)))
(= (type ($generated@@60 $generated@@117 $generated@@118 $generated@@119 $generated@@120)) ($generated@@57 $generated@@122 $generated@@121))))
 :pattern ( ($generated@@60 $generated@@117 $generated@@118 $generated@@119 $generated@@120))
))) (forall (($generated@@123 T@U) ($generated@@124 T@U) ($generated@@125 T@U) ($generated@@126 T@U) ) (! (let (($generated@@127 ($generated@@59 (type $generated@@123))))
 (=> (= (type $generated@@126) $generated@@127) (= ($generated@@44 ($generated@@60 $generated@@123 $generated@@124 $generated@@125 $generated@@126) $generated@@124 $generated@@125) $generated@@126)))
 :weight 0
))) (and (and (forall (($generated@@128 T@U) ($generated@@129 T@U) ($generated@@130 T@U) ($generated@@131 T@U) ($generated@@132 T@U) ($generated@@133 T@U) ) (!  (or (= $generated@@130 $generated@@132) (= ($generated@@44 ($generated@@60 $generated@@129 $generated@@130 $generated@@131 $generated@@128) $generated@@132 $generated@@133) ($generated@@44 $generated@@129 $generated@@132 $generated@@133)))
 :weight 0
)) (forall (($generated@@134 T@U) ($generated@@135 T@U) ($generated@@136 T@U) ($generated@@137 T@U) ($generated@@138 T@U) ($generated@@139 T@U) ) (!  (or (= $generated@@137 $generated@@139) (= ($generated@@44 ($generated@@60 $generated@@135 $generated@@136 $generated@@137 $generated@@134) $generated@@138 $generated@@139) ($generated@@44 $generated@@135 $generated@@138 $generated@@139)))
 :weight 0
))) (forall (($generated@@140 T@U) ($generated@@141 T@U) ($generated@@142 T@U) ($generated@@143 T@U) ($generated@@144 T@U) ($generated@@145 T@U) ) (!  (or true (= ($generated@@44 ($generated@@60 $generated@@141 $generated@@142 $generated@@143 $generated@@140) $generated@@144 $generated@@145) ($generated@@44 $generated@@141 $generated@@144 $generated@@145)))
 :weight 0
)))) (forall (($generated@@146 T@U) ($generated@@147 T@U) ($generated@@148 T@U) ($generated@@149 Bool) ) (! (= (type ($generated@@45 $generated@@146 $generated@@147 $generated@@148 $generated@@149)) ($generated@@57 $generated@@47 $generated@@4))
 :pattern ( ($generated@@45 $generated@@146 $generated@@147 $generated@@148 $generated@@149))
))))
(assert (forall (($generated@@150 T@U) ($generated@@151 T@U) ($generated@@152 T@U) ($generated@@153 Bool) ($generated@@154 T@U) ($generated@@155 T@U) ) (! (let (($generated@@156 ($generated@@46 (type $generated@@155))))
 (=> (and (and (and (and (= (type $generated@@150) $generated@@47) (= (type $generated@@151) ($generated@@48 $generated@@47 $generated@@49))) (= (type $generated@@152) ($generated@@50 $generated@@4))) (= (type $generated@@154) $generated@@47)) (= (type $generated@@155) ($generated@@50 $generated@@156))) (= ($generated@@0 ($generated@@44 ($generated@@45 $generated@@150 $generated@@151 $generated@@152 $generated@@153) $generated@@154 $generated@@155))  (=> (and (not (= $generated@@154 $generated@@150)) ($generated@@0 ($generated@@51 ($generated@@52 $generated@@151 $generated@@154) $generated@@152))) $generated@@153))))
 :pattern ( ($generated@@44 ($generated@@45 $generated@@150 $generated@@151 $generated@@152 $generated@@153) $generated@@154 $generated@@155))
)))
(assert (forall (($generated@@158 Int) ) (! (= ($generated@@157 $generated@@158) $generated@@158)
 :pattern ( ($generated@@157 $generated@@158))
)))
(assert (forall (($generated@@160 T@U) ) (! (let (($generated@@161 (type $generated@@160)))
(= (type ($generated@@159 $generated@@160)) $generated@@161))
 :pattern ( ($generated@@159 $generated@@160))
)))
(assert (forall (($generated@@162 T@U) ) (! (= ($generated@@159 $generated@@162) $generated@@162)
 :pattern ( ($generated@@159 $generated@@162))
)))
(assert  (and (and (= ($generated@@1 $generated@@165) 11) (forall (($generated@@166 T@U) ) (! (= (type ($generated@@163 $generated@@166)) $generated@@165)
 :pattern ( ($generated@@163 $generated@@166))
))) (forall (($generated@@167 T@T) ($generated@@168 T@U) ) (! (= (type ($generated@@164 $generated@@167 $generated@@168)) $generated@@167)
 :pattern ( ($generated@@164 $generated@@167 $generated@@168))
))))
(assert (forall (($generated@@169 T@U) ) (! (let (($generated@@170 (type $generated@@169)))
(= ($generated@@164 $generated@@170 ($generated@@163 $generated@@169)) $generated@@169))
 :pattern ( ($generated@@163 $generated@@169))
)))
(assert (forall (($generated@@171 Int) ) (! (= ($generated@@163 ($generated@@8 ($generated@@157 $generated@@171))) ($generated@@159 ($generated@@163 ($generated@@8 $generated@@171))))
 :pattern ( ($generated@@163 ($generated@@8 ($generated@@157 $generated@@171))))
)))
(assert (forall (($generated@@172 T@U) ) (! (= ($generated@@163 ($generated@@159 $generated@@172)) ($generated@@159 ($generated@@163 $generated@@172)))
 :pattern ( ($generated@@163 ($generated@@159 $generated@@172)))
)))
(push 1)
(declare-fun ControlFlow (Int Int) Int)
(declare-fun $generated@@173 () Int)
(declare-fun $generated@@174 () T@U)
(declare-fun $generated@@175 () T@U)
(declare-fun $generated@@176 () T@U)
(declare-fun $generated@@177 () T@U)
(declare-fun $generated@@178 (T@U) Bool)
(declare-fun $generated@@179 (T@U) Bool)
(declare-fun $generated@@180 () Int)
(assert  (and (and (and (= (type $generated@@174) ($generated@@57 $generated@@47 $generated@@4)) (= (type $generated@@175) $generated@@47)) (= (type $generated@@176) ($generated@@48 $generated@@47 $generated@@49))) (= (type $generated@@177) ($generated@@50 $generated@@4))))
(set-option :timeout 0)
(set-option :rlimit 0)
(assert (not
 (=> (= (ControlFlow 0 0) 8) (let (($generated@@181 true))
(let (($generated@@182  (=> (and (< $generated@@173 ($generated@@157 0)) (= (ControlFlow 0 6) 4)) $generated@@181)))
(let (($generated@@183  (=> (and (<= ($generated@@157 0) $generated@@173) (= (ControlFlow 0 5) 4)) $generated@@181)))
(let (($generated@@184  (and (=> (= (ControlFlow 0 2) (- 0 3)) (<= ($generated@@157 0) ($generated@@157 0))) (=> (= (ControlFlow 0 2) (- 0 1)) ($generated@@0 ($generated@@159 ($generated@@11 (< 0 256))))))))
(let (($generated@@185  (=> (= $generated@@174 ($generated@@45 $generated@@175 $generated@@176 $generated@@177 false)) (and (and (=> (= (ControlFlow 0 7) 2) $generated@@184) (=> (= (ControlFlow 0 7) 5) $generated@@183)) (=> (= (ControlFlow 0 7) 6) $generated@@182)))))
(let (($generated@@186  (=> (and (and ($generated@@178 $generated@@176) ($generated@@179 $generated@@176)) (and (= 0 $generated@@180) (= (ControlFlow 0 8) 7))) $generated@@185)))
$generated@@186)))))))
))
(check-sat)
(pop 1)
; Valid
(get-info :rlimit)
(reset)
(set-option :rlimit 0)
; did a full reset
(reset)
(set-option :print-success false)
(set-info :smt-lib-version 2.6)
(set-option :auto_config false)
(set-option :type_check true)
(set-option :smt.case_split 3)
(set-option :smt.qi.eager_threshold 100)
(set-option :smt.delay_units true)
(set-option :smt.arith.solver 2)
(set-option :smt.mbqi false)
(set-option :model.compact false)
(set-option :model.v2 true)
(set-option :pp.bv_literals false)
; done setting options


(set-info :category "industrial")
(declare-sort |T@U| 0)
(declare-sort |T@T| 0)
(declare-fun real_pow (Real Real) Real)
(declare-fun UOrdering2 (|T@U| |T@U|) Bool)
(declare-fun UOrdering3 (|T@T| |T@U| |T@U|) Bool)
(declare-fun tickleBool (Bool) Bool)
(assert (and (tickleBool true) (tickleBool false)))
(declare-fun $generated (T@U) Int)
(declare-fun $generated@@0 (T@U) Bool)
(declare-fun $generated@@1 (T@T) Int)
(declare-fun $generated@@2 () T@T)
(declare-fun $generated@@3 () T@T)
(declare-fun $generated@@4 () T@T)
(declare-fun $generated@@5 () T@T)
(declare-fun $generated@@6 () T@T)
(declare-fun $generated@@7 () T@T)
(declare-fun $generated@@8 (Int) T@U)
(declare-fun type (T@U) T@T)
(declare-fun $generated@@9 (Real) T@U)
(declare-fun $generated@@10 (T@U) Real)
(declare-fun $generated@@11 (Bool) T@U)
(declare-fun $generated@@12 (RoundingMode) T@U)
(declare-fun $generated@@13 (T@U) RoundingMode)
(declare-fun $generated@@14 (String) T@U)
(declare-fun $generated@@15 (T@U) String)
(declare-fun $generated@@16 ((RegEx String)) T@U)
(declare-fun $generated@@17 (T@U) (RegEx String))
(declare-fun $generated@@44 () T@U)
(declare-fun $generated@@45 () T@U)
(declare-fun $generated@@46 () T@U)
(declare-fun $generated@@47 () T@U)
(declare-fun $generated@@48 () T@U)
(declare-fun $generated@@49 () T@U)
(declare-fun $generated@@50 () T@U)
(declare-fun $generated@@51 () T@U)
(declare-fun $generated@@52 () T@U)
(declare-fun $generated@@53 () T@U)
(declare-fun $generated@@54 () T@U)
(declare-fun $generated@@55 () T@U)
(declare-fun $generated@@56 () T@U)
(declare-fun $generated@@57 () T@U)
(declare-fun $generated@@58 () T@U)
(declare-fun $generated@@59 () T@U)
(declare-fun $generated@@60 () T@U)
(declare-fun $generated@@61 () T@U)
(declare-fun $generated@@62 () T@U)
(declare-fun $generated@@63 () T@U)
(declare-fun $generated@@64 () T@U)
(declare-fun $generated@@65 () T@U)
(declare-fun $generated@@66 () T@U)
(declare-fun $generated@@67 () T@U)
(declare-fun $generated@@68 () T@U)
(declare-fun $generated@@69 () T@U)
(declare-fun $generated@@70 () T@U)
(declare-fun $generated@@71 () T@U)
(declare-fun $generated@@72 () T@U)
(declare-fun $generated@@73 () T@T)
(declare-fun $generated@@74 () T@T)
(declare-fun $generated@@75 (T@T) T@T)
(declare-fun $generated@@76 (T@T) T@T)
(declare-fun $generated@@77 () T@T)
(declare-fun $generated@@78 () T@T)
(declare-fun $generated@@81 (T@U) T@U)
(declare-fun $generated@@83 (T@U T@U T@U) Bool)
(declare-fun $generated@@84 (Int) T@U)
(declare-fun $generated@@85 (T@T T@T) T@T)
(declare-fun $generated@@86 () T@T)
(declare-fun $generated@@87 () T@T)
(declare-fun $generated@@88 (T@T) T@T)
(declare-fun $generated@@89 (T@T) T@T)
(declare-fun $generated@@90 (T@U T@U) T@U)
(declare-fun $generated@@91 (T@U T@U T@U) T@U)
(declare-fun $generated@@92 (T@U T@U) T@U)
(declare-fun $generated@@93 (T@U T@U T@U) T@U)
(declare-fun $generated@@141 (T@U) Int)
(declare-fun $generated@@142 (T@U) T@U)
(declare-fun $generated@@143 () T@U)
(declare-fun $generated@@144 (T@U) T@U)
(declare-fun $generated@@145 (T@U T@U) Bool)
(declare-fun $generated@@150 (T@U T@U) Bool)
(declare-fun $generated@@157 () T@U)
(declare-fun $generated@@160 (T@U) Bool)
(declare-fun $generated@@165 (T@U) T@U)
(declare-fun $generated@@170 (T@U) Bool)
(declare-fun $generated@@171 (T@U T@U) T@U)
(declare-fun $generated@@172 () T@T)
(declare-fun $generated@@178 (T@U T@U) Bool)
(declare-fun $generated@@179 (T@U) T@U)
(declare-fun $generated@@180 (T@U) T@U)
(declare-fun $generated@@181 () T@T)
(declare-fun $generated@@186 (T@U) T@U)
(declare-fun $generated@@187 (T@U) Bool)
(declare-fun $generated@@191 (T@U T@U T@U) T@U)
(declare-fun $generated@@192 (T@U T@U T@U Bool) T@U)
(declare-fun $generated@@193 (T@T T@T) T@T)
(declare-fun $generated@@194 (T@T) T@T)
(declare-fun $generated@@195 (T@T) T@T)
(declare-fun $generated@@196 (T@U T@U T@U T@U) T@U)
(declare-fun $generated@@247 (T@U T@U) T@U)
(declare-fun $generated@@248 (T@U T@U) Bool)
(declare-fun $generated@@257 (T@U) T@U)
(declare-fun $generated@@262 (T@U) T@U)
(declare-fun $generated@@267 (Real) Int)
(declare-fun $generated@@269 (Int) Int)
(declare-fun $generated@@271 (Real) Real)
(declare-fun $generated@@273 (T@U) T@U)
(declare-fun $generated@@277 (T@U T@U T@U) Bool)
(declare-fun $generated@@283 (T@U) T@U)
(declare-fun $generated@@289 (T@T) T@U)
(declare-fun $generated@@290 (T@U) Int)
(declare-fun $generated@@291 (T@T) T@T)
(declare-fun $generated@@292 (T@T) T@T)
(declare-fun $generated@@300 (T@U) T@U)
(declare-fun $generated@@313 (T@U) Int)
(declare-fun $generated@@314 (T@T) T@U)
(declare-fun $generated@@319 (T@U) T@U)
(declare-fun $generated@@323 (T@U) T@U)
(declare-fun $generated@@324 (T@T T@T) T@U)
(declare-fun $generated@@325 (T@T T@T) T@T)
(declare-fun $generated@@326 (T@T) T@T)
(declare-fun $generated@@327 (T@T) T@T)
(declare-fun $generated@@341 (T@U) T@U)
(declare-fun $generated@@342 (T@T T@T) T@U)
(declare-fun $generated@@343 (T@T T@T) T@T)
(declare-fun $generated@@344 (T@T) T@T)
(declare-fun $generated@@345 (T@T) T@T)
(declare-fun $generated@@362 (T@T T@U) T@U)
(declare-fun $generated@@366 () T@U)
(declare-fun $generated@@368 () T@U)
(declare-fun $generated@@376 (T@U) T@U)
(declare-fun $generated@@387 (T@U) T@U)
(declare-fun $generated@@407 (T@U) T@U)
(declare-fun $generated@@408 (T@U) T@U)
(declare-fun $generated@@415 (T@U) T@U)
(declare-fun $generated@@416 (T@U) T@U)
(declare-fun $generated@@433 (T@U T@U) T@U)
(declare-fun $generated@@441 (T@U T@U) T@U)
(declare-fun $generated@@449 (Int Int) Int)
(declare-fun $generated@@452 (T@U T@U) T@U)
(declare-fun $generated@@460 (Int) Real)
(declare-fun $generated@@469 (T@T) T@U)
(declare-fun $generated@@493 () T@T)
(declare-fun $generated@@502 (T@U) T@U)
(declare-fun $generated@@506 (T@U) T@U)
(declare-fun $generated@@512 (T@U) T@U)
(declare-fun $generated@@516 (T@U) T@U)
(declare-fun $generated@@524 (T@U) T@U)
(declare-fun $generated@@528 (T@U) T@U)
(declare-fun $generated@@536 (T@U) T@U)
(declare-fun $generated@@537 (T@U Int) T@U)
(declare-fun $generated@@549 (T@U) Int)
(declare-fun $generated@@551 (T@U) T@U)
(declare-fun $generated@@555 (T@U) T@U)
(declare-fun $generated@@559 (T@U) T@U)
(declare-fun $generated@@563 (T@U) T@U)
(declare-fun $generated@@568 (T@U) T@U)
(declare-fun $generated@@571 (T@U) T@U)
(declare-fun $generated@@584 (T@U) Int)
(declare-fun $generated@@585 (T@U) Int)
(declare-fun $generated@@599 (T@T) T@U)
(declare-fun $generated@@607 (Int Int) Int)
(declare-fun $generated@@665 (T@U) Int)
(assert  (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (= ($generated@@1 $generated@@2) 0) (= ($generated@@1 $generated@@3) 1)) (= ($generated@@1 $generated@@4) 2)) (= ($generated@@1 $generated@@5) 3)) (= ($generated@@1 $generated@@6) 4)) (= ($generated@@1 $generated@@7) 5)) (forall (($generated@@18 Int) ) (! (= ($generated ($generated@@8 $generated@@18)) $generated@@18)
 :pattern ( ($generated@@8 $generated@@18))
))) (forall (($generated@@19 T@U) ) (!  (=> (= (type $generated@@19) $generated@@2) (= ($generated@@8 ($generated $generated@@19)) $generated@@19))
 :pattern ( ($generated $generated@@19))
))) (forall (($generated@@20 Int) ) (! (= (type ($generated@@8 $generated@@20)) $generated@@2)
 :pattern ( ($generated@@8 $generated@@20))
))) (forall (($generated@@21 Real) ) (! (= ($generated@@10 ($generated@@9 $generated@@21)) $generated@@21)
 :pattern ( ($generated@@9 $generated@@21))
))) (forall (($generated@@22 T@U) ) (!  (=> (= (type $generated@@22) $generated@@3) (= ($generated@@9 ($generated@@10 $generated@@22)) $generated@@22))
 :pattern ( ($generated@@10 $generated@@22))
))) (forall (($generated@@23 Real) ) (! (= (type ($generated@@9 $generated@@23)) $generated@@3)
 :pattern ( ($generated@@9 $generated@@23))
))) (forall (($generated@@24 Bool) ) (! (= ($generated@@0 ($generated@@11 $generated@@24)) $generated@@24)
 :pattern ( ($generated@@11 $generated@@24))
))) (forall (($generated@@25 T@U) ) (!  (=> (= (type $generated@@25) $generated@@4) (= ($generated@@11 ($generated@@0 $generated@@25)) $generated@@25))
 :pattern ( ($generated@@0 $generated@@25))
))) (forall (($generated@@26 Bool) ) (! (= (type ($generated@@11 $generated@@26)) $generated@@4)
 :pattern ( ($generated@@11 $generated@@26))
))) (forall (($generated@@27 RoundingMode) ) (! (= ($generated@@13 ($generated@@12 $generated@@27)) $generated@@27)
 :pattern ( ($generated@@12 $generated@@27))
))) (forall (($generated@@28 T@U) ) (!  (=> (= (type $generated@@28) $generated@@5) (= ($generated@@12 ($generated@@13 $generated@@28)) $generated@@28))
 :pattern ( ($generated@@13 $generated@@28))
))) (forall (($generated@@29 RoundingMode) ) (! (= (type ($generated@@12 $generated@@29)) $generated@@5)
 :pattern ( ($generated@@12 $generated@@29))
))) (forall (($generated@@30 String) ) (! (= ($generated@@15 ($generated@@14 $generated@@30)) $generated@@30)
 :pattern ( ($generated@@14 $generated@@30))
))) (forall (($generated@@31 T@U) ) (!  (=> (= (type $generated@@31) $generated@@6) (= ($generated@@14 ($generated@@15 $generated@@31)) $generated@@31))
 :pattern ( ($generated@@15 $generated@@31))
))) (forall (($generated@@32 String) ) (! (= (type ($generated@@14 $generated@@32)) $generated@@6)
 :pattern ( ($generated@@14 $generated@@32))
))) (forall (($generated@@33 (RegEx String)) ) (! (= ($generated@@17 ($generated@@16 $generated@@33)) $generated@@33)
 :pattern ( ($generated@@16 $generated@@33))
))) (forall (($generated@@34 T@U) ) (!  (=> (= (type $generated@@34) $generated@@7) (= ($generated@@16 ($generated@@17 $generated@@34)) $generated@@34))
 :pattern ( ($generated@@17 $generated@@34))
))) (forall (($generated@@35 (RegEx String)) ) (! (= (type ($generated@@16 $generated@@35)) $generated@@7)
 :pattern ( ($generated@@16 $generated@@35))
))))
(assert (forall (($generated@@36 T@U) ) (! (UOrdering2 $generated@@36 $generated@@36)
 :no-pattern ($generated $generated@@36)
 :no-pattern ($generated@@0 $generated@@36)
)))
(assert (forall (($generated@@37 T@U) ($generated@@38 T@U) ($generated@@39 T@U) ) (! (let (($generated@@40 (type $generated@@37)))
 (=> (and (and (= (type $generated@@38) $generated@@40) (= (type $generated@@39) $generated@@40)) (and (UOrdering2 $generated@@37 $generated@@38) (UOrdering2 $generated@@38 $generated@@39))) (UOrdering2 $generated@@37 $generated@@39)))
 :pattern ( (UOrdering2 $generated@@37 $generated@@38) (UOrdering2 $generated@@38 $generated@@39))
)))
(assert (forall (($generated@@41 T@U) ($generated@@42 T@U) ) (! (let (($generated@@43 (type $generated@@41)))
 (=> (= (type $generated@@42) $generated@@43) (=> (and (UOrdering2 $generated@@41 $generated@@42) (UOrdering2 $generated@@42 $generated@@41)) (= $generated@@41 $generated@@42))))
 :pattern ( (UOrdering2 $generated@@41 $generated@@42) (UOrdering2 $generated@@42 $generated@@41))
)))
(assert  (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (= ($generated@@1 $generated@@73) 6) (= (type $generated@@44) $generated@@73)) (= (type $generated@@45) $generated@@73)) (= (type $generated@@46) $generated@@73)) (= (type $generated@@47) $generated@@73)) (= (type $generated@@48) $generated@@73)) (= ($generated@@1 $generated@@74) 7)) (= (type $generated@@49) $generated@@74)) (= (type $generated@@50) $generated@@74)) (= (type $generated@@51) $generated@@74)) (= (type $generated@@52) $generated@@74)) (= (type $generated@@53) $generated@@74)) (= (type $generated@@54) $generated@@74)) (= (type $generated@@55) $generated@@74)) (= (type $generated@@56) $generated@@74)) (= (type $generated@@57) $generated@@74)) (= (type $generated@@58) $generated@@74)) (= (type $generated@@59) $generated@@74)) (forall (($generated@@79 T@T) ) (= ($generated@@1 ($generated@@75 $generated@@79)) 8))) (forall (($generated@@80 T@T) ) (! (= ($generated@@76 ($generated@@75 $generated@@80)) $generated@@80)
 :pattern ( ($generated@@75 $generated@@80))
))) (= (type $generated@@60) ($generated@@75 $generated@@4))) (= (type $generated@@61) $generated@@74)) (= (type $generated@@62) $generated@@74)) (= (type $generated@@63) $generated@@74)) (= ($generated@@1 $generated@@77) 9)) (= (type $generated@@64) $generated@@77)) (= (type $generated@@65) $generated@@74)) (= (type $generated@@66) $generated@@74)) (= (type $generated@@67) $generated@@74)) (= ($generated@@1 $generated@@78) 10)) (= (type $generated@@68) $generated@@78)) (= (type $generated@@69) $generated@@78)) (= (type $generated@@70) $generated@@78)) (= (type $generated@@71) $generated@@78)) (= (type $generated@@72) $generated@@78)))
(assert (distinct $generated@@44 $generated@@45 $generated@@46 $generated@@47 $generated@@48 $generated@@49 $generated@@50 $generated@@51 $generated@@52 $generated@@53 $generated@@54 $generated@@55 $generated@@56 $generated@@57 $generated@@58 $generated@@59 $generated@@60 $generated@@61 $generated@@62 $generated@@63 $generated@@64 $generated@@65 $generated@@66 $generated@@67 $generated@@68 $generated@@69 $generated@@70 $generated@@71 $generated@@72)
)
(assert (forall (($generated@@82 T@U) ) (! (= (type ($generated@@81 $generated@@82)) $generated@@74)
 :pattern ( ($generated@@81 $generated@@82))
)))
(assert (= ($generated@@81 $generated@@44) $generated@@49))
(assert (= ($generated@@81 $generated@@45) $generated@@50))
(assert (= ($generated@@81 $generated@@46) $generated@@51))
(assert (= ($generated@@81 $generated@@47) $generated@@52))
(assert (= ($generated@@81 $generated@@48) $generated@@53))
(assert  (and (and (and (and (and (and (and (and (and (and (and (and (and (forall (($generated@@94 T@T) ($generated@@95 T@T) ) (= ($generated@@1 ($generated@@85 $generated@@94 $generated@@95)) 11)) (forall (($generated@@96 T@T) ($generated@@97 T@T) ) (! (= ($generated@@88 ($generated@@85 $generated@@96 $generated@@97)) $generated@@96)
 :pattern ( ($generated@@85 $generated@@96 $generated@@97))
))) (forall (($generated@@98 T@T) ($generated@@99 T@T) ) (! (= ($generated@@89 ($generated@@85 $generated@@98 $generated@@99)) $generated@@99)
 :pattern ( ($generated@@85 $generated@@98 $generated@@99))
))) (forall (($generated@@100 T@U) ($generated@@101 T@U) ) (! (let (($generated@@102 ($generated@@89 (type $generated@@100))))
(= (type ($generated@@90 $generated@@100 $generated@@101)) $generated@@102))
 :pattern ( ($generated@@90 $generated@@100 $generated@@101))
))) (forall (($generated@@103 T@U) ($generated@@104 T@U) ($generated@@105 T@U) ) (! (let (($generated@@106 (type $generated@@105)))
(let (($generated@@107 (type $generated@@104)))
(= (type ($generated@@91 $generated@@103 $generated@@104 $generated@@105)) ($generated@@85 $generated@@107 $generated@@106))))
 :pattern ( ($generated@@91 $generated@@103 $generated@@104 $generated@@105))
))) (forall (($generated@@108 T@U) ($generated@@109 T@U) ($generated@@110 T@U) ) (! (let (($generated@@111 ($generated@@89 (type $generated@@108))))
 (=> (= (type $generated@@110) $generated@@111) (= ($generated@@90 ($generated@@91 $generated@@108 $generated@@109 $generated@@110) $generated@@109) $generated@@110)))
 :weight 0
))) (and (forall (($generated@@112 T@U) ($generated@@113 T@U) ($generated@@114 T@U) ($generated@@115 T@U) ) (!  (or (= $generated@@114 $generated@@115) (= ($generated@@90 ($generated@@91 $generated@@113 $generated@@114 $generated@@112) $generated@@115) ($generated@@90 $generated@@113 $generated@@115)))
 :weight 0
)) (forall (($generated@@116 T@U) ($generated@@117 T@U) ($generated@@118 T@U) ($generated@@119 T@U) ) (!  (or true (= ($generated@@90 ($generated@@91 $generated@@117 $generated@@118 $generated@@116) $generated@@119) ($generated@@90 $generated@@117 $generated@@119)))
 :weight 0
)))) (= ($generated@@1 $generated@@86) 12)) (forall (($generated@@120 T@U) ($generated@@121 T@U) ) (! (let (($generated@@122 ($generated@@76 (type $generated@@121))))
(= (type ($generated@@92 $generated@@120 $generated@@121)) $generated@@122))
 :pattern ( ($generated@@92 $generated@@120 $generated@@121))
))) (= ($generated@@1 $generated@@87) 13)) (forall (($generated@@123 T@U) ($generated@@124 T@U) ($generated@@125 T@U) ) (! (= (type ($generated@@93 $generated@@123 $generated@@124 $generated@@125)) $generated@@87)
 :pattern ( ($generated@@93 $generated@@123 $generated@@124 $generated@@125))
))) (forall (($generated@@126 T@U) ($generated@@127 T@U) ($generated@@128 T@U) ) (! (let (($generated@@129 ($generated@@76 (type $generated@@127))))
 (=> (= (type $generated@@128) $generated@@129) (= ($generated@@92 ($generated@@93 $generated@@126 $generated@@127 $generated@@128) $generated@@127) $generated@@128)))
 :weight 0
))) (and (forall (($generated@@130 T@U) ($generated@@131 T@U) ($generated@@132 T@U) ($generated@@133 T@U) ) (!  (or (= $generated@@132 $generated@@133) (= ($generated@@92 ($generated@@93 $generated@@131 $generated@@132 $generated@@130) $generated@@133) ($generated@@92 $generated@@131 $generated@@133)))
 :weight 0
)) (forall (($generated@@134 T@U) ($generated@@135 T@U) ($generated@@136 T@U) ($generated@@137 T@U) ) (!  (or true (= ($generated@@92 ($generated@@93 $generated@@135 $generated@@136 $generated@@134) $generated@@137) ($generated@@92 $generated@@135 $generated@@137)))
 :weight 0
)))) (forall (($generated@@138 Int) ) (! (= (type ($generated@@84 $generated@@138)) $generated@@73)
 :pattern ( ($generated@@84 $generated@@138))
))))
(assert (forall (($generated@@139 T@U) ($generated@@140 T@U) ) (!  (=> (and (= (type $generated@@139) $generated@@2) (= (type $generated@@140) ($generated@@85 $generated@@86 $generated@@87))) ($generated@@83 $generated@@139 ($generated@@84 0) $generated@@140))
 :pattern ( ($generated@@83 $generated@@139 ($generated@@84 0) $generated@@140))
)))
(assert  (and (and (forall (($generated@@146 T@U) ) (! (= (type ($generated@@142 $generated@@146)) $generated@@73)
 :pattern ( ($generated@@142 $generated@@146))
)) (= (type $generated@@143) $generated@@86)) (forall (($generated@@147 T@U) ) (! (= (type ($generated@@144 $generated@@147)) $generated@@73)
 :pattern ( ($generated@@144 $generated@@147))
))))
(assert (forall (($generated@@148 T@U) ($generated@@149 T@U) ) (!  (=> (and (and (= (type $generated@@148) $generated@@73) (= (type $generated@@149) $generated@@86)) (and (not (= $generated@@149 $generated@@143)) (= ($generated@@144 $generated@@149) ($generated@@142 $generated@@148)))) ($generated@@145 ($generated@@8 ($generated@@141 $generated@@149)) $generated@@46))
 :pattern ( ($generated@@141 $generated@@149) ($generated@@142 $generated@@148))
)))
(assert (forall (($generated@@151 T@U) ($generated@@152 T@U) ) (!  (=> (and (and (= (type $generated@@151) ($generated@@85 $generated@@86 $generated@@87)) (= (type $generated@@152) ($generated@@85 $generated@@86 $generated@@87))) ($generated@@150 $generated@@151 $generated@@152)) (forall (($generated@@153 T@U) ) (!  (=> (and (= (type $generated@@153) $generated@@86) ($generated@@0 ($generated@@92 ($generated@@90 $generated@@151 $generated@@153) $generated@@60))) ($generated@@0 ($generated@@92 ($generated@@90 $generated@@152 $generated@@153) $generated@@60)))
 :pattern ( ($generated@@92 ($generated@@90 $generated@@152 $generated@@153) $generated@@60))
)))
 :pattern ( ($generated@@150 $generated@@151 $generated@@152))
)))
(assert (forall (($generated@@154 T@U) ($generated@@155 T@U) ($generated@@156 T@U) ) (!  (=> (and (and (= (type $generated@@154) $generated@@73) (= (type $generated@@155) $generated@@86)) (= (type $generated@@156) ($generated@@85 $generated@@86 $generated@@87))) (= ($generated@@83 $generated@@155 ($generated@@142 $generated@@154) $generated@@156)  (or (= $generated@@155 $generated@@143) ($generated@@0 ($generated@@92 ($generated@@90 $generated@@156 $generated@@155) $generated@@60)))))
 :pattern ( ($generated@@83 $generated@@155 ($generated@@142 $generated@@154) $generated@@156))
)))
(assert (= (type $generated@@157) $generated@@73))
(assert (forall (($generated@@158 T@U) ($generated@@159 T@U) ) (!  (=> (and (= (type $generated@@158) $generated@@2) (= (type $generated@@159) ($generated@@85 $generated@@86 $generated@@87))) ($generated@@83 $generated@@158 $generated@@157 $generated@@159))
 :pattern ( ($generated@@83 $generated@@158 $generated@@157 $generated@@159))
)))
(assert (forall (($generated@@161 T@U) ($generated@@162 T@U) ($generated@@163 T@U) ) (!  (=> (and (and (and (= (type $generated@@161) $generated@@73) (= (type $generated@@162) ($generated@@85 $generated@@86 $generated@@87))) (= (type $generated@@163) $generated@@86)) (and (and ($generated@@160 $generated@@162) (and (not (= $generated@@163 $generated@@143)) (= ($generated@@144 $generated@@163) ($generated@@142 $generated@@161)))) ($generated@@0 ($generated@@92 ($generated@@90 $generated@@162 $generated@@163) $generated@@60)))) ($generated@@83 ($generated@@8 ($generated@@141 $generated@@163)) $generated@@46 $generated@@162))
 :pattern ( ($generated@@141 $generated@@163) ($generated@@92 ($generated@@90 $generated@@162 $generated@@163) $generated@@60) ($generated@@142 $generated@@161))
)))
(assert (forall (($generated@@164 T@U) ) (!  (=> (= (type $generated@@164) $generated@@2) ($generated@@145 $generated@@164 ($generated@@84 0)))
 :pattern ( ($generated@@145 $generated@@164 ($generated@@84 0)))
)))
(assert (forall (($generated@@166 T@U) ) (! (= (type ($generated@@165 $generated@@166)) $generated@@73)
 :pattern ( ($generated@@165 $generated@@166))
)))
(assert (forall (($generated@@167 T@U) ($generated@@168 T@U) ($generated@@169 T@U) ) (!  (=> (and (and (= (type $generated@@167) $generated@@73) (= (type $generated@@168) $generated@@86)) (= (type $generated@@169) ($generated@@85 $generated@@86 $generated@@87))) (= ($generated@@83 $generated@@168 ($generated@@165 $generated@@167) $generated@@169) ($generated@@83 $generated@@168 ($generated@@142 $generated@@167) $generated@@169)))
 :pattern ( ($generated@@83 $generated@@168 ($generated@@165 $generated@@167) $generated@@169))
)))
(assert  (and (= ($generated@@1 $generated@@172) 14) (forall (($generated@@173 T@U) ($generated@@174 T@U) ) (! (= (type ($generated@@171 $generated@@173 $generated@@174)) $generated@@73)
 :pattern ( ($generated@@171 $generated@@173 $generated@@174))
))))
(assert (forall (($generated@@175 T@U) ($generated@@176 T@U) ($generated@@177 T@U) ) (!  (=> (and (and (and (= (type $generated@@175) $generated@@73) (= (type $generated@@176) $generated@@73)) (= (type $generated@@177) $generated@@172)) ($generated@@145 $generated@@177 ($generated@@171 $generated@@175 $generated@@176))) ($generated@@170 $generated@@177))
 :pattern ( ($generated@@170 $generated@@177) ($generated@@145 $generated@@177 ($generated@@171 $generated@@175 $generated@@176)))
)))
(assert  (and (and (= ($generated@@1 $generated@@181) 15) (forall (($generated@@182 T@U) ) (! (= (type ($generated@@179 $generated@@182)) $generated@@181)
 :pattern ( ($generated@@179 $generated@@182))
))) (forall (($generated@@183 T@U) ) (! (= (type ($generated@@180 $generated@@183)) $generated@@181)
 :pattern ( ($generated@@180 $generated@@183))
))))
(assert (forall (($generated@@184 T@U) ($generated@@185 T@U) ) (!  (=> (and (and (= (type $generated@@184) $generated@@172) (= (type $generated@@185) $generated@@172)) true) (= ($generated@@178 $generated@@184 $generated@@185)  (and (= ($generated@@179 $generated@@184) ($generated@@179 $generated@@185)) (= ($generated@@180 $generated@@184) ($generated@@180 $generated@@185)))))
 :pattern ( ($generated@@178 $generated@@184 $generated@@185))
)))
(assert (forall (($generated@@188 T@U) ) (! (= (type ($generated@@186 $generated@@188)) $generated@@73)
 :pattern ( ($generated@@186 $generated@@188))
)))
(assert (forall (($generated@@189 T@U) ($generated@@190 T@U) ) (!  (=> (and (and (= (type $generated@@189) ($generated@@85 $generated@@181 $generated@@2)) (= (type $generated@@190) $generated@@73)) ($generated@@145 $generated@@189 ($generated@@186 $generated@@190))) ($generated@@187 $generated@@189))
 :pattern ( ($generated@@145 $generated@@189 ($generated@@186 $generated@@190)))
)))
(assert  (and (and (and (and (and (and (and (forall (($generated@@197 T@T) ($generated@@198 T@T) ) (= ($generated@@1 ($generated@@193 $generated@@197 $generated@@198)) 16)) (forall (($generated@@199 T@T) ($generated@@200 T@T) ) (! (= ($generated@@194 ($generated@@193 $generated@@199 $generated@@200)) $generated@@199)
 :pattern ( ($generated@@193 $generated@@199 $generated@@200))
))) (forall (($generated@@201 T@T) ($generated@@202 T@T) ) (! (= ($generated@@195 ($generated@@193 $generated@@201 $generated@@202)) $generated@@202)
 :pattern ( ($generated@@193 $generated@@201 $generated@@202))
))) (forall (($generated@@203 T@U) ($generated@@204 T@U) ($generated@@205 T@U) ) (! (let (($generated@@206 ($generated@@195 (type $generated@@203))))
(= (type ($generated@@191 $generated@@203 $generated@@204 $generated@@205)) $generated@@206))
 :pattern ( ($generated@@191 $generated@@203 $generated@@204 $generated@@205))
))) (forall (($generated@@207 T@U) ($generated@@208 T@U) ($generated@@209 T@U) ($generated@@210 T@U) ) (! (let (($generated@@211 (type $generated@@210)))
(let (($generated@@212 (type $generated@@208)))
(= (type ($generated@@196 $generated@@207 $generated@@208 $generated@@209 $generated@@210)) ($generated@@193 $generated@@212 $generated@@211))))
 :pattern ( ($generated@@196 $generated@@207 $generated@@208 $generated@@209 $generated@@210))
))) (forall (($generated@@213 T@U) ($generated@@214 T@U) ($generated@@215 T@U) ($generated@@216 T@U) ) (! (let (($generated@@217 ($generated@@195 (type $generated@@213))))
 (=> (= (type $generated@@216) $generated@@217) (= ($generated@@191 ($generated@@196 $generated@@213 $generated@@214 $generated@@215 $generated@@216) $generated@@214 $generated@@215) $generated@@216)))
 :weight 0
))) (and (and (forall (($generated@@218 T@U) ($generated@@219 T@U) ($generated@@220 T@U) ($generated@@221 T@U) ($generated@@222 T@U) ($generated@@223 T@U) ) (!  (or (= $generated@@220 $generated@@222) (= ($generated@@191 ($generated@@196 $generated@@219 $generated@@220 $generated@@221 $generated@@218) $generated@@222 $generated@@223) ($generated@@191 $generated@@219 $generated@@222 $generated@@223)))
 :weight 0
)) (forall (($generated@@224 T@U) ($generated@@225 T@U) ($generated@@226 T@U) ($generated@@227 T@U) ($generated@@228 T@U) ($generated@@229 T@U) ) (!  (or (= $generated@@227 $generated@@229) (= ($generated@@191 ($generated@@196 $generated@@225 $generated@@226 $generated@@227 $generated@@224) $generated@@228 $generated@@229) ($generated@@191 $generated@@225 $generated@@228 $generated@@229)))
 :weight 0
))) (forall (($generated@@230 T@U) ($generated@@231 T@U) ($generated@@232 T@U) ($generated@@233 T@U) ($generated@@234 T@U) ($generated@@235 T@U) ) (!  (or true (= ($generated@@191 ($generated@@196 $generated@@231 $generated@@232 $generated@@233 $generated@@230) $generated@@234 $generated@@235) ($generated@@191 $generated@@231 $generated@@234 $generated@@235)))
 :weight 0
)))) (forall (($generated@@236 T@U) ($generated@@237 T@U) ($generated@@238 T@U) ($generated@@239 Bool) ) (! (= (type ($generated@@192 $generated@@236 $generated@@237 $generated@@238 $generated@@239)) ($generated@@193 $generated@@86 $generated@@4))
 :pattern ( ($generated@@192 $generated@@236 $generated@@237 $generated@@238 $generated@@239))
))))
(assert (forall (($generated@@240 T@U) ($generated@@241 T@U) ($generated@@242 T@U) ($generated@@243 Bool) ($generated@@244 T@U) ($generated@@245 T@U) ) (! (let (($generated@@246 ($generated@@76 (type $generated@@245))))
 (=> (and (and (and (and (= (type $generated@@240) $generated@@86) (= (type $generated@@241) ($generated@@85 $generated@@86 $generated@@87))) (= (type $generated@@242) ($generated@@75 $generated@@4))) (= (type $generated@@244) $generated@@86)) (= (type $generated@@245) ($generated@@75 $generated@@246))) (= ($generated@@0 ($generated@@191 ($generated@@192 $generated@@240 $generated@@241 $generated@@242 $generated@@243) $generated@@244 $generated@@245))  (=> (and (not (= $generated@@244 $generated@@240)) ($generated@@0 ($generated@@92 ($generated@@90 $generated@@241 $generated@@244) $generated@@242))) $generated@@243))))
 :pattern ( ($generated@@191 ($generated@@192 $generated@@240 $generated@@241 $generated@@242 $generated@@243) $generated@@244 $generated@@245))
)))
(assert (forall (($generated@@249 T@U) ($generated@@250 T@U) ) (! (= (type ($generated@@247 $generated@@249 $generated@@250)) $generated@@172)
 :pattern ( ($generated@@247 $generated@@249 $generated@@250))
)))
(assert (forall (($generated@@251 T@U) ($generated@@252 T@U) ($generated@@253 T@U) ($generated@@254 T@U) ) (!  (=> (and (and (and (= (type $generated@@251) $generated@@73) (= (type $generated@@252) $generated@@73)) (= (type $generated@@253) $generated@@181)) (= (type $generated@@254) $generated@@181)) (= ($generated@@145 ($generated@@247 $generated@@253 $generated@@254) ($generated@@171 $generated@@251 $generated@@252))  (and ($generated@@248 $generated@@253 $generated@@251) ($generated@@248 $generated@@254 $generated@@252))))
 :pattern ( ($generated@@145 ($generated@@247 $generated@@253 $generated@@254) ($generated@@171 $generated@@251 $generated@@252)))
)))
(assert (forall (($generated@@255 T@U) ($generated@@256 T@U) ) (!  (=> (and (= (type $generated@@255) $generated@@172) (= (type $generated@@256) $generated@@172)) (= ($generated@@178 $generated@@255 $generated@@256) (= $generated@@255 $generated@@256)))
 :pattern ( ($generated@@178 $generated@@255 $generated@@256))
)))
(assert (forall (($generated@@258 T@U) ) (! (= (type ($generated@@257 $generated@@258)) $generated@@73)
 :pattern ( ($generated@@257 $generated@@258))
)))
(assert (forall (($generated@@259 T@U) ($generated@@260 T@U) ) (!  (=> (and (= (type $generated@@259) ($generated@@85 $generated@@181 $generated@@4)) (= (type $generated@@260) $generated@@73)) (= ($generated@@145 $generated@@259 ($generated@@257 $generated@@260)) (forall (($generated@@261 T@U) ) (!  (=> (and (= (type $generated@@261) $generated@@181) ($generated@@0 ($generated@@90 $generated@@259 $generated@@261))) ($generated@@248 $generated@@261 $generated@@260))
 :pattern ( ($generated@@90 $generated@@259 $generated@@261))
))))
 :pattern ( ($generated@@145 $generated@@259 ($generated@@257 $generated@@260)))
)))
(assert (forall (($generated@@263 T@U) ) (! (= (type ($generated@@262 $generated@@263)) $generated@@73)
 :pattern ( ($generated@@262 $generated@@263))
)))
(assert (forall (($generated@@264 T@U) ($generated@@265 T@U) ) (!  (=> (and (= (type $generated@@264) ($generated@@85 $generated@@181 $generated@@4)) (= (type $generated@@265) $generated@@73)) (= ($generated@@145 $generated@@264 ($generated@@262 $generated@@265)) (forall (($generated@@266 T@U) ) (!  (=> (and (= (type $generated@@266) $generated@@181) ($generated@@0 ($generated@@90 $generated@@264 $generated@@266))) ($generated@@248 $generated@@266 $generated@@265))
 :pattern ( ($generated@@90 $generated@@264 $generated@@266))
))))
 :pattern ( ($generated@@145 $generated@@264 ($generated@@262 $generated@@265)))
)))
(assert (forall (($generated@@268 Real) ) (! (= ($generated@@267 $generated@@268) (to_int $generated@@268))
 :pattern ( ($generated@@267 $generated@@268))
)))
(assert (forall (($generated@@270 Int) ) (! (= ($generated@@269 $generated@@270) $generated@@270)
 :pattern ( ($generated@@269 $generated@@270))
)))
(assert (forall (($generated@@272 Real) ) (! (= ($generated@@271 $generated@@272) $generated@@272)
 :pattern ( ($generated@@271 $generated@@272))
)))
(assert (forall (($generated@@274 T@U) ) (! (let (($generated@@275 (type $generated@@274)))
(= (type ($generated@@273 $generated@@274)) $generated@@275))
 :pattern ( ($generated@@273 $generated@@274))
)))
(assert (forall (($generated@@276 T@U) ) (! (= ($generated@@273 $generated@@276) $generated@@276)
 :pattern ( ($generated@@273 $generated@@276))
)))
(assert (forall (($generated@@278 T@U) ($generated@@279 T@U) ($generated@@280 T@U) ($generated@@281 T@U) ($generated@@282 T@U) ) (!  (=> (and (and (and (and (and (= (type $generated@@278) $generated@@73) (= (type $generated@@279) $generated@@73)) (= (type $generated@@280) $generated@@181)) (= (type $generated@@281) $generated@@181)) (= (type $generated@@282) ($generated@@85 $generated@@86 $generated@@87))) ($generated@@160 $generated@@282)) (= ($generated@@83 ($generated@@247 $generated@@280 $generated@@281) ($generated@@171 $generated@@278 $generated@@279) $generated@@282)  (and ($generated@@277 $generated@@280 $generated@@278 $generated@@282) ($generated@@277 $generated@@281 $generated@@279 $generated@@282))))
 :pattern ( ($generated@@83 ($generated@@247 $generated@@280 $generated@@281) ($generated@@171 $generated@@278 $generated@@279) $generated@@282))
)))
(assert (forall (($generated@@284 T@U) ) (! (= (type ($generated@@283 $generated@@284)) $generated@@77)
 :pattern ( ($generated@@283 $generated@@284))
)))
(assert (forall (($generated@@285 T@U) ) (!  (=> (= (type $generated@@285) $generated@@172) (= ($generated@@170 $generated@@285) (= ($generated@@283 $generated@@285) $generated@@64)))
 :pattern ( ($generated@@170 $generated@@285))
)))
(assert (forall (($generated@@286 T@U) ) (!  (=> (and (= (type $generated@@286) $generated@@172) ($generated@@170 $generated@@286)) (exists (($generated@@287 T@U) ($generated@@288 T@U) ) (!  (and (and (= (type $generated@@287) $generated@@181) (= (type $generated@@288) $generated@@181)) (= $generated@@286 ($generated@@247 $generated@@287 $generated@@288)))
 :no-pattern (type $generated@@287)
 :no-pattern (type $generated@@288)
 :no-pattern ($generated $generated@@287)
 :no-pattern ($generated@@0 $generated@@287)
 :no-pattern ($generated $generated@@288)
 :no-pattern ($generated@@0 $generated@@288)
)))
 :pattern ( ($generated@@170 $generated@@286))
)))
(assert  (and (and (forall (($generated@@293 T@T) ) (= ($generated@@1 ($generated@@291 $generated@@293)) 17)) (forall (($generated@@294 T@T) ) (! (= ($generated@@292 ($generated@@291 $generated@@294)) $generated@@294)
 :pattern ( ($generated@@291 $generated@@294))
))) (forall (($generated@@295 T@T) ) (! (= (type ($generated@@289 $generated@@295)) ($generated@@291 $generated@@295))
 :pattern ( ($generated@@289 $generated@@295))
))))
(assert (forall (($generated@@296 T@T) ) (! (= ($generated@@290 ($generated@@289 $generated@@296)) 0)
 :pattern ( ($generated@@289 $generated@@296))
)))
(assert (forall (($generated@@297 T@U) ) (!  (=> (= (type $generated@@297) $generated@@2) (= ($generated@@145 $generated@@297 $generated@@157) (<= ($generated@@269 0) ($generated $generated@@297))))
 :pattern ( ($generated@@145 $generated@@297 $generated@@157))
)))
(assert (forall (($generated@@298 T@U) ($generated@@299 T@U) ) (!  (=> (and (= (type $generated@@298) $generated@@73) (= (type $generated@@299) $generated@@86)) (= ($generated@@145 $generated@@299 ($generated@@165 $generated@@298))  (and ($generated@@145 $generated@@299 ($generated@@142 $generated@@298)) (not (= $generated@@299 $generated@@143)))))
 :pattern ( ($generated@@145 $generated@@299 ($generated@@165 $generated@@298)))
)))
(assert (forall (($generated@@301 T@U) ) (! (= (type ($generated@@300 $generated@@301)) $generated@@181)
 :pattern ( ($generated@@300 $generated@@301))
)))
(assert (forall (($generated@@302 T@U) ($generated@@303 T@U) ($generated@@304 T@U) ) (!  (=> (and (= (type $generated@@303) $generated@@73) (= (type $generated@@304) ($generated@@85 $generated@@86 $generated@@87))) (= ($generated@@277 ($generated@@300 $generated@@302) $generated@@303 $generated@@304) ($generated@@83 $generated@@302 $generated@@303 $generated@@304)))
 :pattern ( ($generated@@277 ($generated@@300 $generated@@302) $generated@@303 $generated@@304))
)))
(assert (forall (($generated@@305 T@U) ($generated@@306 T@U) ($generated@@307 T@U) ($generated@@308 T@U) ) (!  (=> (and (and (and (and (and (= (type $generated@@305) ($generated@@85 $generated@@86 $generated@@87)) (= (type $generated@@306) ($generated@@85 $generated@@86 $generated@@87))) (= (type $generated@@307) $generated@@181)) (= (type $generated@@308) $generated@@73)) ($generated@@150 $generated@@305 $generated@@306)) ($generated@@277 $generated@@307 $generated@@308 $generated@@305)) ($generated@@277 $generated@@307 $generated@@308 $generated@@306))
 :pattern ( ($generated@@150 $generated@@305 $generated@@306) ($generated@@277 $generated@@307 $generated@@308 $generated@@305))
)))
(assert (forall (($generated@@309 T@U) ($generated@@310 T@U) ($generated@@311 T@U) ($generated@@312 T@U) ) (!  (=> (and (and (and (and (= (type $generated@@309) ($generated@@85 $generated@@86 $generated@@87)) (= (type $generated@@310) ($generated@@85 $generated@@86 $generated@@87))) (= (type $generated@@312) $generated@@73)) ($generated@@150 $generated@@309 $generated@@310)) ($generated@@83 $generated@@311 $generated@@312 $generated@@309)) ($generated@@83 $generated@@311 $generated@@312 $generated@@310))
 :pattern ( ($generated@@150 $generated@@309 $generated@@310) ($generated@@83 $generated@@311 $generated@@312 $generated@@309))
)))
(assert (forall (($generated@@315 T@T) ) (! (= (type ($generated@@314 $generated@@315)) ($generated@@85 $generated@@315 $generated@@2))
 :pattern ( ($generated@@314 $generated@@315))
)))
(assert (forall (($generated@@316 T@U) ) (! (let (($generated@@317 ($generated@@88 (type $generated@@316))))
 (=> (= (type $generated@@316) ($generated@@85 $generated@@317 $generated@@2)) (and (= (= ($generated@@313 $generated@@316) 0) (= $generated@@316 ($generated@@314 $generated@@317))) (=> (not (= ($generated@@313 $generated@@316) 0)) (exists (($generated@@318 T@U) ) (!  (and (= (type $generated@@318) $generated@@317) (< 0 ($generated ($generated@@90 $generated@@316 $generated@@318))))
 :no-pattern (type $generated@@318)
 :no-pattern ($generated $generated@@318)
 :no-pattern ($generated@@0 $generated@@318)
))))))
 :pattern ( ($generated@@313 $generated@@316))
)))
(assert (forall (($generated@@320 T@U) ) (! (= (type ($generated@@319 $generated@@320)) $generated@@78)
 :pattern ( ($generated@@319 $generated@@320))
)))
(assert (forall (($generated@@321 T@U) ) (!  (=> (= (type $generated@@321) $generated@@73) (and (= ($generated@@81 ($generated@@142 $generated@@321)) $generated@@62) (= ($generated@@319 ($generated@@142 $generated@@321)) $generated@@69)))
 :pattern ( ($generated@@142 $generated@@321))
)))
(assert (forall (($generated@@322 T@U) ) (!  (=> (= (type $generated@@322) $generated@@73) (and (= ($generated@@81 ($generated@@165 $generated@@322)) $generated@@63) (= ($generated@@319 ($generated@@165 $generated@@322)) $generated@@69)))
 :pattern ( ($generated@@165 $generated@@322))
)))
(assert  (and (and (and (and (forall (($generated@@328 T@T) ($generated@@329 T@T) ) (= ($generated@@1 ($generated@@325 $generated@@328 $generated@@329)) 18)) (forall (($generated@@330 T@T) ($generated@@331 T@T) ) (! (= ($generated@@326 ($generated@@325 $generated@@330 $generated@@331)) $generated@@330)
 :pattern ( ($generated@@325 $generated@@330 $generated@@331))
))) (forall (($generated@@332 T@T) ($generated@@333 T@T) ) (! (= ($generated@@327 ($generated@@325 $generated@@332 $generated@@333)) $generated@@333)
 :pattern ( ($generated@@325 $generated@@332 $generated@@333))
))) (forall (($generated@@334 T@U) ) (! (let (($generated@@335 ($generated@@326 (type $generated@@334))))
(= (type ($generated@@323 $generated@@334)) ($generated@@85 $generated@@335 $generated@@4)))
 :pattern ( ($generated@@323 $generated@@334))
))) (forall (($generated@@336 T@T) ($generated@@337 T@T) ) (! (= (type ($generated@@324 $generated@@336 $generated@@337)) ($generated@@325 $generated@@336 $generated@@337))
 :pattern ( ($generated@@324 $generated@@336 $generated@@337))
))))
(assert (forall (($generated@@338 T@U) ($generated@@339 T@T) ) (! (let (($generated@@340 (type $generated@@338)))
 (not ($generated@@0 ($generated@@90 ($generated@@323 ($generated@@324 $generated@@340 $generated@@339)) $generated@@338))))
 :pattern ( (let (($generated@@340 (type $generated@@338)))
($generated@@90 ($generated@@323 ($generated@@324 $generated@@340 $generated@@339)) $generated@@338)))
)))
(assert  (and (and (and (and (forall (($generated@@346 T@T) ($generated@@347 T@T) ) (= ($generated@@1 ($generated@@343 $generated@@346 $generated@@347)) 19)) (forall (($generated@@348 T@T) ($generated@@349 T@T) ) (! (= ($generated@@344 ($generated@@343 $generated@@348 $generated@@349)) $generated@@348)
 :pattern ( ($generated@@343 $generated@@348 $generated@@349))
))) (forall (($generated@@350 T@T) ($generated@@351 T@T) ) (! (= ($generated@@345 ($generated@@343 $generated@@350 $generated@@351)) $generated@@351)
 :pattern ( ($generated@@343 $generated@@350 $generated@@351))
))) (forall (($generated@@352 T@U) ) (! (let (($generated@@353 ($generated@@344 (type $generated@@352))))
(= (type ($generated@@341 $generated@@352)) ($generated@@85 $generated@@353 $generated@@4)))
 :pattern ( ($generated@@341 $generated@@352))
))) (forall (($generated@@354 T@T) ($generated@@355 T@T) ) (! (= (type ($generated@@342 $generated@@354 $generated@@355)) ($generated@@343 $generated@@354 $generated@@355))
 :pattern ( ($generated@@342 $generated@@354 $generated@@355))
))))
(assert (forall (($generated@@356 T@U) ($generated@@357 T@T) ) (! (let (($generated@@358 (type $generated@@356)))
 (not ($generated@@0 ($generated@@90 ($generated@@341 ($generated@@342 $generated@@358 $generated@@357)) $generated@@356))))
 :pattern ( (let (($generated@@358 (type $generated@@356)))
($generated@@90 ($generated@@341 ($generated@@342 $generated@@358 $generated@@357)) $generated@@356)))
)))
(assert (forall (($generated@@359 T@U) ) (! (let (($generated@@360 ($generated@@88 (type $generated@@359))))
 (=> (= (type $generated@@359) ($generated@@85 $generated@@360 $generated@@2)) (= ($generated@@187 $generated@@359) (forall (($generated@@361 T@U) ) (!  (=> (= (type $generated@@361) $generated@@360) (and (<= 0 ($generated ($generated@@90 $generated@@359 $generated@@361))) (<= ($generated ($generated@@90 $generated@@359 $generated@@361)) ($generated@@313 $generated@@359))))
 :pattern ( ($generated@@90 $generated@@359 $generated@@361))
)))))
 :pattern ( ($generated@@187 $generated@@359))
)))
(assert (forall (($generated@@363 T@T) ($generated@@364 T@U) ) (! (= (type ($generated@@362 $generated@@363 $generated@@364)) $generated@@363)
 :pattern ( ($generated@@362 $generated@@363 $generated@@364))
)))
(assert (forall (($generated@@365 T@U) ) (!  (=> (and (= (type $generated@@365) $generated@@181) ($generated@@248 $generated@@365 $generated@@157)) (and (= ($generated@@300 ($generated@@362 $generated@@2 $generated@@365)) $generated@@365) ($generated@@145 ($generated@@362 $generated@@2 $generated@@365) $generated@@157)))
 :pattern ( ($generated@@248 $generated@@365 $generated@@157))
)))
(assert (= (type $generated@@366) $generated@@73))
(assert (forall (($generated@@367 T@U) ) (!  (=> (and (= (type $generated@@367) $generated@@181) ($generated@@248 $generated@@367 $generated@@366)) (and (= ($generated@@300 ($generated@@362 $generated@@2 $generated@@367)) $generated@@367) ($generated@@145 ($generated@@362 $generated@@2 $generated@@367) $generated@@366)))
 :pattern ( ($generated@@248 $generated@@367 $generated@@366))
)))
(assert (= (type $generated@@368) $generated@@73))
(assert (forall (($generated@@369 T@U) ) (!  (=> (and (= (type $generated@@369) $generated@@181) ($generated@@248 $generated@@369 $generated@@368)) (and (= ($generated@@300 ($generated@@362 $generated@@2 $generated@@369)) $generated@@369) ($generated@@145 ($generated@@362 $generated@@2 $generated@@369) $generated@@368)))
 :pattern ( ($generated@@248 $generated@@369 $generated@@368))
)))
(assert (forall (($generated@@370 T@U) ($generated@@371 T@U) ) (!  (=> (and (= (type $generated@@370) $generated@@73) (= (type $generated@@371) $generated@@86)) (= ($generated@@145 $generated@@371 ($generated@@142 $generated@@370))  (or (= $generated@@371 $generated@@143) (= ($generated@@144 $generated@@371) ($generated@@142 $generated@@370)))))
 :pattern ( ($generated@@145 $generated@@371 ($generated@@142 $generated@@370)))
)))
(assert (forall (($generated@@372 T@U) ) (! (let (($generated@@373 ($generated@@327 (type $generated@@372))))
(let (($generated@@374 ($generated@@326 (type $generated@@372))))
 (=> (= (type $generated@@372) ($generated@@325 $generated@@374 $generated@@373)) (or (= $generated@@372 ($generated@@324 $generated@@374 $generated@@373)) (exists (($generated@@375 T@U) ) (!  (and (= (type $generated@@375) $generated@@374) ($generated@@0 ($generated@@90 ($generated@@323 $generated@@372) $generated@@375)))
 :no-pattern (type $generated@@375)
 :no-pattern ($generated $generated@@375)
 :no-pattern ($generated@@0 $generated@@375)
))))))
 :pattern ( ($generated@@323 $generated@@372))
)))
(assert (forall (($generated@@377 T@U) ) (! (let (($generated@@378 ($generated@@327 (type $generated@@377))))
(= (type ($generated@@376 $generated@@377)) ($generated@@85 $generated@@378 $generated@@4)))
 :pattern ( ($generated@@376 $generated@@377))
)))
(assert (forall (($generated@@379 T@U) ) (! (let (($generated@@380 ($generated@@327 (type $generated@@379))))
(let (($generated@@381 ($generated@@326 (type $generated@@379))))
 (=> (= (type $generated@@379) ($generated@@325 $generated@@381 $generated@@380)) (or (= $generated@@379 ($generated@@324 $generated@@381 $generated@@380)) (exists (($generated@@382 T@U) ) (!  (and (= (type $generated@@382) $generated@@380) ($generated@@0 ($generated@@90 ($generated@@376 $generated@@379) $generated@@382)))
 :no-pattern (type $generated@@382)
 :no-pattern ($generated $generated@@382)
 :no-pattern ($generated@@0 $generated@@382)
))))))
 :pattern ( ($generated@@376 $generated@@379))
)))
(assert (forall (($generated@@383 T@U) ) (! (let (($generated@@384 ($generated@@345 (type $generated@@383))))
(let (($generated@@385 ($generated@@344 (type $generated@@383))))
 (=> (= (type $generated@@383) ($generated@@343 $generated@@385 $generated@@384)) (or (= $generated@@383 ($generated@@342 $generated@@385 $generated@@384)) (exists (($generated@@386 T@U) ) (!  (and (= (type $generated@@386) $generated@@385) ($generated@@0 ($generated@@90 ($generated@@341 $generated@@383) $generated@@386)))
 :no-pattern (type $generated@@386)
 :no-pattern ($generated $generated@@386)
 :no-pattern ($generated@@0 $generated@@386)
))))))
 :pattern ( ($generated@@341 $generated@@383))
)))
(assert (forall (($generated@@388 T@U) ) (! (let (($generated@@389 ($generated@@345 (type $generated@@388))))
(= (type ($generated@@387 $generated@@388)) ($generated@@85 $generated@@389 $generated@@4)))
 :pattern ( ($generated@@387 $generated@@388))
)))
(assert (forall (($generated@@390 T@U) ) (! (let (($generated@@391 ($generated@@345 (type $generated@@390))))
(let (($generated@@392 ($generated@@344 (type $generated@@390))))
 (=> (= (type $generated@@390) ($generated@@343 $generated@@392 $generated@@391)) (or (= $generated@@390 ($generated@@342 $generated@@392 $generated@@391)) (exists (($generated@@393 T@U) ) (!  (and (= (type $generated@@393) $generated@@391) ($generated@@0 ($generated@@90 ($generated@@387 $generated@@390) $generated@@393)))
 :no-pattern (type $generated@@393)
 :no-pattern ($generated $generated@@393)
 :no-pattern ($generated@@0 $generated@@393)
))))))
 :pattern ( ($generated@@387 $generated@@390))
)))
(assert (forall (($generated@@394 T@U) ($generated@@395 T@U) ) (!  (=> (and (= (type $generated@@394) ($generated@@85 $generated@@181 $generated@@2)) (= (type $generated@@395) $generated@@73)) (= ($generated@@145 $generated@@394 ($generated@@186 $generated@@395)) (forall (($generated@@396 T@U) ) (!  (=> (and (= (type $generated@@396) $generated@@181) (< 0 ($generated ($generated@@90 $generated@@394 $generated@@396)))) ($generated@@248 $generated@@396 $generated@@395))
 :pattern ( ($generated@@90 $generated@@394 $generated@@396))
))))
 :pattern ( ($generated@@145 $generated@@394 ($generated@@186 $generated@@395)))
)))
(assert (forall (($generated@@397 T@U) ($generated@@398 T@U) ($generated@@399 T@U) ) (!  (=> (and (and (= (type $generated@@397) ($generated@@85 $generated@@181 $generated@@4)) (= (type $generated@@398) $generated@@73)) (= (type $generated@@399) ($generated@@85 $generated@@86 $generated@@87))) (= ($generated@@83 $generated@@397 ($generated@@257 $generated@@398) $generated@@399) (forall (($generated@@400 T@U) ) (!  (=> (and (= (type $generated@@400) $generated@@181) ($generated@@0 ($generated@@90 $generated@@397 $generated@@400))) ($generated@@277 $generated@@400 $generated@@398 $generated@@399))
 :pattern ( ($generated@@90 $generated@@397 $generated@@400))
))))
 :pattern ( ($generated@@83 $generated@@397 ($generated@@257 $generated@@398) $generated@@399))
)))
(assert (forall (($generated@@401 T@U) ($generated@@402 T@U) ($generated@@403 T@U) ) (!  (=> (and (and (= (type $generated@@401) ($generated@@85 $generated@@181 $generated@@4)) (= (type $generated@@402) $generated@@73)) (= (type $generated@@403) ($generated@@85 $generated@@86 $generated@@87))) (= ($generated@@83 $generated@@401 ($generated@@262 $generated@@402) $generated@@403) (forall (($generated@@404 T@U) ) (!  (=> (and (= (type $generated@@404) $generated@@181) ($generated@@0 ($generated@@90 $generated@@401 $generated@@404))) ($generated@@277 $generated@@404 $generated@@402 $generated@@403))
 :pattern ( ($generated@@90 $generated@@401 $generated@@404))
))))
 :pattern ( ($generated@@83 $generated@@401 ($generated@@262 $generated@@402) $generated@@403))
)))
(assert (forall (($generated@@405 T@U) ) (! (let (($generated@@406 (type $generated@@405)))
(= ($generated ($generated@@90 ($generated@@314 $generated@@406) $generated@@405)) 0))
 :pattern ( (let (($generated@@406 (type $generated@@405)))
($generated@@90 ($generated@@314 $generated@@406) $generated@@405)))
)))
(assert  (and (forall (($generated@@409 T@U) ) (! (= (type ($generated@@407 $generated@@409)) ($generated@@85 $generated@@181 $generated@@4))
 :pattern ( ($generated@@407 $generated@@409))
)) (forall (($generated@@410 T@U) ) (! (let (($generated@@411 ($generated@@327 (type $generated@@410))))
(let (($generated@@412 ($generated@@326 (type $generated@@410))))
(= (type ($generated@@408 $generated@@410)) ($generated@@85 $generated@@412 $generated@@411))))
 :pattern ( ($generated@@408 $generated@@410))
))))
(assert (forall (($generated@@413 T@U) ($generated@@414 T@U) ) (!  (=> (and (= (type $generated@@413) ($generated@@325 $generated@@181 $generated@@181)) (= (type $generated@@414) $generated@@181)) (= ($generated@@0 ($generated@@90 ($generated@@407 $generated@@413) $generated@@414))  (and ($generated@@0 ($generated@@90 ($generated@@323 $generated@@413) ($generated@@179 ($generated@@362 $generated@@172 $generated@@414)))) (= ($generated@@90 ($generated@@408 $generated@@413) ($generated@@179 ($generated@@362 $generated@@172 $generated@@414))) ($generated@@180 ($generated@@362 $generated@@172 $generated@@414))))))
 :pattern ( ($generated@@90 ($generated@@407 $generated@@413) $generated@@414))
)))
(assert  (and (forall (($generated@@417 T@U) ) (! (= (type ($generated@@415 $generated@@417)) ($generated@@85 $generated@@181 $generated@@4))
 :pattern ( ($generated@@415 $generated@@417))
)) (forall (($generated@@418 T@U) ) (! (let (($generated@@419 ($generated@@345 (type $generated@@418))))
(let (($generated@@420 ($generated@@344 (type $generated@@418))))
(= (type ($generated@@416 $generated@@418)) ($generated@@85 $generated@@420 $generated@@419))))
 :pattern ( ($generated@@416 $generated@@418))
))))
(assert (forall (($generated@@421 T@U) ($generated@@422 T@U) ) (!  (=> (and (= (type $generated@@421) ($generated@@343 $generated@@181 $generated@@181)) (= (type $generated@@422) $generated@@181)) (= ($generated@@0 ($generated@@90 ($generated@@415 $generated@@421) $generated@@422))  (and ($generated@@0 ($generated@@90 ($generated@@341 $generated@@421) ($generated@@179 ($generated@@362 $generated@@172 $generated@@422)))) (= ($generated@@90 ($generated@@416 $generated@@421) ($generated@@179 ($generated@@362 $generated@@172 $generated@@422))) ($generated@@180 ($generated@@362 $generated@@172 $generated@@422))))))
 :pattern ( ($generated@@90 ($generated@@415 $generated@@421) $generated@@422))
)))
(assert (forall (($generated@@423 T@U) ($generated@@424 T@U) ) (! (let (($generated@@425 (type $generated@@424)))
(let (($generated@@426 ($generated@@326 (type $generated@@423))))
 (=> (= (type $generated@@423) ($generated@@325 $generated@@426 $generated@@425)) (= ($generated@@0 ($generated@@90 ($generated@@376 $generated@@423) $generated@@424)) (exists (($generated@@427 T@U) ) (!  (and (= (type $generated@@427) $generated@@426) (and ($generated@@0 ($generated@@90 ($generated@@323 $generated@@423) $generated@@427)) (= $generated@@424 ($generated@@90 ($generated@@408 $generated@@423) $generated@@427))))
 :pattern ( ($generated@@90 ($generated@@323 $generated@@423) $generated@@427))
 :pattern ( ($generated@@90 ($generated@@408 $generated@@423) $generated@@427))
))))))
 :pattern ( ($generated@@90 ($generated@@376 $generated@@423) $generated@@424))
)))
(assert (forall (($generated@@428 T@U) ($generated@@429 T@U) ) (! (let (($generated@@430 (type $generated@@429)))
(let (($generated@@431 ($generated@@344 (type $generated@@428))))
 (=> (= (type $generated@@428) ($generated@@343 $generated@@431 $generated@@430)) (= ($generated@@0 ($generated@@90 ($generated@@387 $generated@@428) $generated@@429)) (exists (($generated@@432 T@U) ) (!  (and (= (type $generated@@432) $generated@@431) (and ($generated@@0 ($generated@@90 ($generated@@341 $generated@@428) $generated@@432)) (= $generated@@429 ($generated@@90 ($generated@@416 $generated@@428) $generated@@432))))
 :pattern ( ($generated@@90 ($generated@@341 $generated@@428) $generated@@432))
 :pattern ( ($generated@@90 ($generated@@416 $generated@@428) $generated@@432))
))))))
 :pattern ( ($generated@@90 ($generated@@387 $generated@@428) $generated@@429))
)))
(assert (forall (($generated@@434 T@U) ($generated@@435 T@U) ) (! (= (type ($generated@@433 $generated@@434 $generated@@435)) $generated@@73)
 :pattern ( ($generated@@433 $generated@@434 $generated@@435))
)))
(assert (forall (($generated@@436 T@U) ($generated@@437 T@U) ($generated@@438 T@U) ($generated@@439 T@U) ) (!  (=> (and (and (and (= (type $generated@@436) ($generated@@325 $generated@@181 $generated@@181)) (= (type $generated@@437) $generated@@73)) (= (type $generated@@438) $generated@@73)) (= (type $generated@@439) ($generated@@85 $generated@@86 $generated@@87))) (= ($generated@@83 $generated@@436 ($generated@@433 $generated@@437 $generated@@438) $generated@@439) (forall (($generated@@440 T@U) ) (!  (=> (and (= (type $generated@@440) $generated@@181) ($generated@@0 ($generated@@90 ($generated@@323 $generated@@436) $generated@@440))) (and ($generated@@277 ($generated@@90 ($generated@@408 $generated@@436) $generated@@440) $generated@@438 $generated@@439) ($generated@@277 $generated@@440 $generated@@437 $generated@@439)))
 :pattern ( ($generated@@90 ($generated@@408 $generated@@436) $generated@@440))
 :pattern ( ($generated@@90 ($generated@@323 $generated@@436) $generated@@440))
))))
 :pattern ( ($generated@@83 $generated@@436 ($generated@@433 $generated@@437 $generated@@438) $generated@@439))
)))
(assert (forall (($generated@@442 T@U) ($generated@@443 T@U) ) (! (= (type ($generated@@441 $generated@@442 $generated@@443)) $generated@@73)
 :pattern ( ($generated@@441 $generated@@442 $generated@@443))
)))
(assert (forall (($generated@@444 T@U) ($generated@@445 T@U) ($generated@@446 T@U) ($generated@@447 T@U) ) (!  (=> (and (and (and (= (type $generated@@444) ($generated@@343 $generated@@181 $generated@@181)) (= (type $generated@@445) $generated@@73)) (= (type $generated@@446) $generated@@73)) (= (type $generated@@447) ($generated@@85 $generated@@86 $generated@@87))) (= ($generated@@83 $generated@@444 ($generated@@441 $generated@@445 $generated@@446) $generated@@447) (forall (($generated@@448 T@U) ) (!  (=> (and (= (type $generated@@448) $generated@@181) ($generated@@0 ($generated@@90 ($generated@@341 $generated@@444) $generated@@448))) (and ($generated@@277 ($generated@@90 ($generated@@416 $generated@@444) $generated@@448) $generated@@446 $generated@@447) ($generated@@277 $generated@@448 $generated@@445 $generated@@447)))
 :pattern ( ($generated@@90 ($generated@@416 $generated@@444) $generated@@448))
 :pattern ( ($generated@@90 ($generated@@341 $generated@@444) $generated@@448))
))))
 :pattern ( ($generated@@83 $generated@@444 ($generated@@441 $generated@@445 $generated@@446) $generated@@447))
)))
(assert (forall (($generated@@450 Int) ($generated@@451 Int) ) (! (= ($generated@@449 $generated@@450 $generated@@451) (div $generated@@450 $generated@@451))
 :pattern ( ($generated@@449 $generated@@450 $generated@@451))
)))
(assert (forall (($generated@@453 T@U) ($generated@@454 T@U) ) (! (let (($generated@@455 (type $generated@@454)))
(= (type ($generated@@452 $generated@@453 $generated@@454)) ($generated@@85 $generated@@455 $generated@@4)))
 :pattern ( ($generated@@452 $generated@@453 $generated@@454))
)))
(assert (forall (($generated@@456 T@U) ($generated@@457 T@U) ($generated@@458 T@U) ) (! (let (($generated@@459 (type $generated@@457)))
 (=> (and (and (= (type $generated@@456) ($generated@@85 $generated@@459 $generated@@4)) (= (type $generated@@458) $generated@@459)) ($generated@@0 ($generated@@90 $generated@@456 $generated@@458))) ($generated@@0 ($generated@@90 ($generated@@452 $generated@@456 $generated@@457) $generated@@458))))
 :pattern ( ($generated@@452 $generated@@456 $generated@@457) ($generated@@90 $generated@@456 $generated@@458))
)))
(assert (forall (($generated@@461 Int) ) (! (= ($generated@@460 $generated@@461) (to_real $generated@@461))
 :pattern ( ($generated@@460 $generated@@461))
)))
(assert (forall (($generated@@462 T@U) ($generated@@463 T@U) ($generated@@464 T@U) ) (! (let (($generated@@465 (type $generated@@463)))
 (=> (and (= (type $generated@@462) ($generated@@85 $generated@@465 $generated@@4)) (= (type $generated@@464) $generated@@465)) (= ($generated@@0 ($generated@@90 ($generated@@452 $generated@@462 $generated@@463) $generated@@464))  (or (= $generated@@464 $generated@@463) ($generated@@0 ($generated@@90 $generated@@462 $generated@@464))))))
 :pattern ( ($generated@@90 ($generated@@452 $generated@@462 $generated@@463) $generated@@464))
)))
(assert (forall (($generated@@466 T@U) ($generated@@467 T@U) ($generated@@468 T@U) ) (!  (=> (and (and (and (and (= (type $generated@@466) ($generated@@85 $generated@@86 $generated@@87)) (= (type $generated@@467) ($generated@@85 $generated@@86 $generated@@87))) (= (type $generated@@468) ($generated@@85 $generated@@86 $generated@@87))) (not (= $generated@@466 $generated@@468))) (and ($generated@@150 $generated@@466 $generated@@467) ($generated@@150 $generated@@467 $generated@@468))) ($generated@@150 $generated@@466 $generated@@468))
 :pattern ( ($generated@@150 $generated@@466 $generated@@467) ($generated@@150 $generated@@467 $generated@@468))
)))
(assert (forall (($generated@@470 T@T) ) (! (= (type ($generated@@469 $generated@@470)) ($generated@@85 $generated@@470 $generated@@4))
 :pattern ( ($generated@@469 $generated@@470))
)))
(assert (forall (($generated@@471 T@U) ) (! (let (($generated@@472 ($generated@@345 (type $generated@@471))))
(let (($generated@@473 ($generated@@344 (type $generated@@471))))
 (=> (= (type $generated@@471) ($generated@@343 $generated@@473 $generated@@472)) (= (= $generated@@471 ($generated@@342 $generated@@473 $generated@@472)) (= ($generated@@341 $generated@@471) ($generated@@469 $generated@@473))))))
 :pattern ( ($generated@@341 $generated@@471))
)))
(assert (forall (($generated@@474 T@U) ) (! (let (($generated@@475 ($generated@@345 (type $generated@@474))))
(let (($generated@@476 ($generated@@344 (type $generated@@474))))
 (=> (= (type $generated@@474) ($generated@@343 $generated@@476 $generated@@475)) (= (= $generated@@474 ($generated@@342 $generated@@476 $generated@@475)) (= ($generated@@387 $generated@@474) ($generated@@469 $generated@@475))))))
 :pattern ( ($generated@@387 $generated@@474))
)))
(assert (forall (($generated@@477 T@U) ) (! (let (($generated@@478 ($generated@@345 (type $generated@@477))))
(let (($generated@@479 ($generated@@344 (type $generated@@477))))
 (=> (= (type $generated@@477) ($generated@@343 $generated@@479 $generated@@478)) (= (= $generated@@477 ($generated@@342 $generated@@479 $generated@@478)) (= ($generated@@415 $generated@@477) ($generated@@469 $generated@@181))))))
 :pattern ( ($generated@@415 $generated@@477))
)))
(assert (forall (($generated@@480 T@U) ) (! (let (($generated@@481 ($generated@@327 (type $generated@@480))))
(let (($generated@@482 ($generated@@326 (type $generated@@480))))
 (=> (= (type $generated@@480) ($generated@@325 $generated@@482 $generated@@481)) (or (= $generated@@480 ($generated@@324 $generated@@482 $generated@@481)) (exists (($generated@@483 T@U) ($generated@@484 T@U) ) (!  (and (and (= (type $generated@@483) $generated@@181) (= (type $generated@@484) $generated@@181)) ($generated@@0 ($generated@@90 ($generated@@407 $generated@@480) ($generated@@300 ($generated@@247 $generated@@483 $generated@@484)))))
 :no-pattern (type $generated@@483)
 :no-pattern (type $generated@@484)
 :no-pattern ($generated $generated@@483)
 :no-pattern ($generated@@0 $generated@@483)
 :no-pattern ($generated $generated@@484)
 :no-pattern ($generated@@0 $generated@@484)
))))))
 :pattern ( ($generated@@407 $generated@@480))
)))
(assert (forall (($generated@@485 T@U) ) (! (let (($generated@@486 ($generated@@345 (type $generated@@485))))
(let (($generated@@487 ($generated@@344 (type $generated@@485))))
 (=> (= (type $generated@@485) ($generated@@343 $generated@@487 $generated@@486)) (or (= $generated@@485 ($generated@@342 $generated@@487 $generated@@486)) (exists (($generated@@488 T@U) ($generated@@489 T@U) ) (!  (and (and (= (type $generated@@488) $generated@@181) (= (type $generated@@489) $generated@@181)) ($generated@@0 ($generated@@90 ($generated@@415 $generated@@485) ($generated@@300 ($generated@@247 $generated@@488 $generated@@489)))))
 :no-pattern (type $generated@@488)
 :no-pattern (type $generated@@489)
 :no-pattern ($generated $generated@@488)
 :no-pattern ($generated@@0 $generated@@488)
 :no-pattern ($generated $generated@@489)
 :no-pattern ($generated@@0 $generated@@489)
))))))
 :pattern ( ($generated@@415 $generated@@485))
)))
(assert (forall (($generated@@490 T@U) ) (!  (=> (and (= (type $generated@@490) $generated@@181) ($generated@@248 $generated@@490 $generated@@46)) (and (= ($generated@@300 ($generated@@362 $generated@@2 $generated@@490)) $generated@@490) ($generated@@145 ($generated@@362 $generated@@2 $generated@@490) $generated@@46)))
 :pattern ( ($generated@@248 $generated@@490 $generated@@46))
)))
(assert (forall (($generated@@491 T@U) ) (!  (=> (and (= (type $generated@@491) $generated@@181) ($generated@@248 $generated@@491 $generated@@47)) (and (= ($generated@@300 ($generated@@362 $generated@@3 $generated@@491)) $generated@@491) ($generated@@145 ($generated@@362 $generated@@3 $generated@@491) $generated@@47)))
 :pattern ( ($generated@@248 $generated@@491 $generated@@47))
)))
(assert (forall (($generated@@492 T@U) ) (!  (=> (and (= (type $generated@@492) $generated@@181) ($generated@@248 $generated@@492 $generated@@44)) (and (= ($generated@@300 ($generated@@362 $generated@@4 $generated@@492)) $generated@@492) ($generated@@145 ($generated@@362 $generated@@4 $generated@@492) $generated@@44)))
 :pattern ( ($generated@@248 $generated@@492 $generated@@44))
)))
(assert (= ($generated@@1 $generated@@493) 20))
(assert (forall (($generated@@494 T@U) ) (!  (=> (and (= (type $generated@@494) $generated@@181) ($generated@@248 $generated@@494 $generated@@45)) (and (= ($generated@@300 ($generated@@362 $generated@@493 $generated@@494)) $generated@@494) ($generated@@145 ($generated@@362 $generated@@493 $generated@@494) $generated@@45)))
 :pattern ( ($generated@@248 $generated@@494 $generated@@45))
)))
(assert (forall (($generated@@495 T@U) ($generated@@496 T@U) ) (!  (=> (= (type $generated@@496) $generated@@73) (= ($generated@@248 ($generated@@300 $generated@@495) $generated@@496) ($generated@@145 $generated@@495 $generated@@496)))
 :pattern ( ($generated@@248 ($generated@@300 $generated@@495) $generated@@496))
)))
(assert (forall (($generated@@497 T@U) ) (!  (=> (= (type $generated@@497) $generated@@86) (<= 0 ($generated@@141 $generated@@497)))
 :no-pattern (type $generated@@497)
 :no-pattern ($generated $generated@@497)
 :no-pattern ($generated@@0 $generated@@497)
)))
(assert (forall (($generated@@498 T@U) ) (! (let (($generated@@499 ($generated@@88 (type $generated@@498))))
 (=> (= (type $generated@@498) ($generated@@85 $generated@@499 $generated@@2)) (<= 0 ($generated@@313 $generated@@498))))
 :pattern ( ($generated@@313 $generated@@498))
)))
(assert (forall (($generated@@500 T@U) ) (! (let (($generated@@501 ($generated@@292 (type $generated@@500))))
 (=> (= (type $generated@@500) ($generated@@291 $generated@@501)) (<= 0 ($generated@@290 $generated@@500))))
 :pattern ( ($generated@@290 $generated@@500))
)))
(assert (forall (($generated@@503 T@U) ) (! (= (type ($generated@@502 $generated@@503)) $generated@@73)
 :pattern ( ($generated@@502 $generated@@503))
)))
(assert (forall (($generated@@504 T@U) ($generated@@505 T@U) ) (!  (=> (and (= (type $generated@@504) $generated@@73) (= (type $generated@@505) $generated@@73)) (= ($generated@@502 ($generated@@433 $generated@@504 $generated@@505)) $generated@@504))
 :pattern ( ($generated@@433 $generated@@504 $generated@@505))
)))
(assert (forall (($generated@@507 T@U) ) (! (= (type ($generated@@506 $generated@@507)) $generated@@73)
 :pattern ( ($generated@@506 $generated@@507))
)))
(assert (forall (($generated@@508 T@U) ($generated@@509 T@U) ) (!  (=> (and (= (type $generated@@508) $generated@@73) (= (type $generated@@509) $generated@@73)) (= ($generated@@506 ($generated@@433 $generated@@508 $generated@@509)) $generated@@509))
 :pattern ( ($generated@@433 $generated@@508 $generated@@509))
)))
(assert (forall (($generated@@510 T@U) ($generated@@511 T@U) ) (!  (=> (and (= (type $generated@@510) $generated@@73) (= (type $generated@@511) $generated@@73)) (= ($generated@@81 ($generated@@433 $generated@@510 $generated@@511)) $generated@@58))
 :pattern ( ($generated@@433 $generated@@510 $generated@@511))
)))
(assert (forall (($generated@@513 T@U) ) (! (= (type ($generated@@512 $generated@@513)) $generated@@73)
 :pattern ( ($generated@@512 $generated@@513))
)))
(assert (forall (($generated@@514 T@U) ($generated@@515 T@U) ) (!  (=> (and (= (type $generated@@514) $generated@@73) (= (type $generated@@515) $generated@@73)) (= ($generated@@512 ($generated@@441 $generated@@514 $generated@@515)) $generated@@514))
 :pattern ( ($generated@@441 $generated@@514 $generated@@515))
)))
(assert (forall (($generated@@517 T@U) ) (! (= (type ($generated@@516 $generated@@517)) $generated@@73)
 :pattern ( ($generated@@516 $generated@@517))
)))
(assert (forall (($generated@@518 T@U) ($generated@@519 T@U) ) (!  (=> (and (= (type $generated@@518) $generated@@73) (= (type $generated@@519) $generated@@73)) (= ($generated@@516 ($generated@@441 $generated@@518 $generated@@519)) $generated@@519))
 :pattern ( ($generated@@441 $generated@@518 $generated@@519))
)))
(assert (forall (($generated@@520 T@U) ($generated@@521 T@U) ) (!  (=> (and (= (type $generated@@520) $generated@@73) (= (type $generated@@521) $generated@@73)) (= ($generated@@81 ($generated@@441 $generated@@520 $generated@@521)) $generated@@59))
 :pattern ( ($generated@@441 $generated@@520 $generated@@521))
)))
(assert (forall (($generated@@522 T@U) ($generated@@523 T@U) ) (!  (=> (and (= (type $generated@@522) $generated@@181) (= (type $generated@@523) $generated@@181)) (= ($generated@@283 ($generated@@247 $generated@@522 $generated@@523)) $generated@@64))
 :pattern ( ($generated@@247 $generated@@522 $generated@@523))
)))
(assert (forall (($generated@@525 T@U) ) (! (= (type ($generated@@524 $generated@@525)) $generated@@73)
 :pattern ( ($generated@@524 $generated@@525))
)))
(assert (forall (($generated@@526 T@U) ($generated@@527 T@U) ) (!  (=> (and (= (type $generated@@526) $generated@@73) (= (type $generated@@527) $generated@@73)) (= ($generated@@524 ($generated@@171 $generated@@526 $generated@@527)) $generated@@526))
 :pattern ( ($generated@@171 $generated@@526 $generated@@527))
)))
(assert (forall (($generated@@529 T@U) ) (! (= (type ($generated@@528 $generated@@529)) $generated@@73)
 :pattern ( ($generated@@528 $generated@@529))
)))
(assert (forall (($generated@@530 T@U) ($generated@@531 T@U) ) (!  (=> (and (= (type $generated@@530) $generated@@73) (= (type $generated@@531) $generated@@73)) (= ($generated@@528 ($generated@@171 $generated@@530 $generated@@531)) $generated@@531))
 :pattern ( ($generated@@171 $generated@@530 $generated@@531))
)))
(assert (forall (($generated@@532 T@U) ($generated@@533 T@U) ) (!  (=> (and (= (type $generated@@532) $generated@@181) (= (type $generated@@533) $generated@@181)) (= ($generated@@179 ($generated@@247 $generated@@532 $generated@@533)) $generated@@532))
 :pattern ( ($generated@@247 $generated@@532 $generated@@533))
)))
(assert (forall (($generated@@534 T@U) ($generated@@535 T@U) ) (!  (=> (and (= (type $generated@@534) $generated@@181) (= (type $generated@@535) $generated@@181)) (= ($generated@@180 ($generated@@247 $generated@@534 $generated@@535)) $generated@@535))
 :pattern ( ($generated@@247 $generated@@534 $generated@@535))
)))
(assert  (and (forall (($generated@@538 T@U) ) (! (= (type ($generated@@536 $generated@@538)) $generated@@73)
 :pattern ( ($generated@@536 $generated@@538))
)) (forall (($generated@@539 T@U) ($generated@@540 Int) ) (! (let (($generated@@541 ($generated@@292 (type $generated@@539))))
(= (type ($generated@@537 $generated@@539 $generated@@540)) $generated@@541))
 :pattern ( ($generated@@537 $generated@@539 $generated@@540))
))))
(assert (forall (($generated@@542 T@U) ($generated@@543 T@U) ($generated@@544 T@U) ) (!  (=> (and (and (= (type $generated@@542) ($generated@@291 $generated@@181)) (= (type $generated@@543) $generated@@73)) (= (type $generated@@544) ($generated@@85 $generated@@86 $generated@@87))) (= ($generated@@83 $generated@@542 ($generated@@536 $generated@@543) $generated@@544) (forall (($generated@@545 Int) ) (!  (=> (and (<= 0 $generated@@545) (< $generated@@545 ($generated@@290 $generated@@542))) ($generated@@277 ($generated@@537 $generated@@542 $generated@@545) $generated@@543 $generated@@544))
 :pattern ( ($generated@@537 $generated@@542 $generated@@545))
))))
 :pattern ( ($generated@@83 $generated@@542 ($generated@@536 $generated@@543) $generated@@544))
)))
(assert (forall (($generated@@546 T@U) ($generated@@547 T@U) ) (! (let (($generated@@548 (type $generated@@547)))
 (=> (= (type $generated@@546) ($generated@@85 $generated@@548 $generated@@4)) ($generated@@0 ($generated@@90 ($generated@@452 $generated@@546 $generated@@547) $generated@@547))))
 :pattern ( ($generated@@452 $generated@@546 $generated@@547))
)))
(assert (forall (($generated@@550 Int) ) (! (= ($generated@@549 ($generated@@84 $generated@@550)) $generated@@550)
 :pattern ( ($generated@@84 $generated@@550))
)))
(assert (forall (($generated@@552 T@U) ) (! (= (type ($generated@@551 $generated@@552)) $generated@@73)
 :pattern ( ($generated@@551 $generated@@552))
)))
(assert (forall (($generated@@553 T@U) ) (!  (=> (= (type $generated@@553) $generated@@73) (= ($generated@@551 ($generated@@257 $generated@@553)) $generated@@553))
 :pattern ( ($generated@@257 $generated@@553))
)))
(assert (forall (($generated@@554 T@U) ) (!  (=> (= (type $generated@@554) $generated@@73) (= ($generated@@81 ($generated@@257 $generated@@554)) $generated@@54))
 :pattern ( ($generated@@257 $generated@@554))
)))
(assert (forall (($generated@@556 T@U) ) (! (= (type ($generated@@555 $generated@@556)) $generated@@73)
 :pattern ( ($generated@@555 $generated@@556))
)))
(assert (forall (($generated@@557 T@U) ) (!  (=> (= (type $generated@@557) $generated@@73) (= ($generated@@555 ($generated@@262 $generated@@557)) $generated@@557))
 :pattern ( ($generated@@262 $generated@@557))
)))
(assert (forall (($generated@@558 T@U) ) (!  (=> (= (type $generated@@558) $generated@@73) (= ($generated@@81 ($generated@@262 $generated@@558)) $generated@@55))
 :pattern ( ($generated@@262 $generated@@558))
)))
(assert (forall (($generated@@560 T@U) ) (! (= (type ($generated@@559 $generated@@560)) $generated@@73)
 :pattern ( ($generated@@559 $generated@@560))
)))
(assert (forall (($generated@@561 T@U) ) (!  (=> (= (type $generated@@561) $generated@@73) (= ($generated@@559 ($generated@@186 $generated@@561)) $generated@@561))
 :pattern ( ($generated@@186 $generated@@561))
)))
(assert (forall (($generated@@562 T@U) ) (!  (=> (= (type $generated@@562) $generated@@73) (= ($generated@@81 ($generated@@186 $generated@@562)) $generated@@56))
 :pattern ( ($generated@@186 $generated@@562))
)))
(assert (forall (($generated@@564 T@U) ) (! (= (type ($generated@@563 $generated@@564)) $generated@@73)
 :pattern ( ($generated@@563 $generated@@564))
)))
(assert (forall (($generated@@565 T@U) ) (!  (=> (= (type $generated@@565) $generated@@73) (= ($generated@@563 ($generated@@536 $generated@@565)) $generated@@565))
 :pattern ( ($generated@@536 $generated@@565))
)))
(assert (forall (($generated@@566 T@U) ) (!  (=> (= (type $generated@@566) $generated@@73) (= ($generated@@81 ($generated@@536 $generated@@566)) $generated@@57))
 :pattern ( ($generated@@536 $generated@@566))
)))
(assert (forall (($generated@@567 Int) ) (! (= ($generated@@267 ($generated@@460 $generated@@567)) $generated@@567)
 :pattern ( ($generated@@267 ($generated@@460 $generated@@567)))
)))
(assert (forall (($generated@@569 T@U) ) (! (= (type ($generated@@568 $generated@@569)) $generated@@73)
 :pattern ( ($generated@@568 $generated@@569))
)))
(assert (forall (($generated@@570 T@U) ) (!  (=> (= (type $generated@@570) $generated@@73) (= ($generated@@568 ($generated@@142 $generated@@570)) $generated@@570))
 :pattern ( ($generated@@142 $generated@@570))
)))
(assert (forall (($generated@@572 T@U) ) (! (= (type ($generated@@571 $generated@@572)) $generated@@73)
 :pattern ( ($generated@@571 $generated@@572))
)))
(assert (forall (($generated@@573 T@U) ) (!  (=> (= (type $generated@@573) $generated@@73) (= ($generated@@571 ($generated@@165 $generated@@573)) $generated@@573))
 :pattern ( ($generated@@165 $generated@@573))
)))
(assert (forall (($generated@@574 T@U) ) (! (let (($generated@@575 (type $generated@@574)))
(= ($generated@@362 $generated@@575 ($generated@@300 $generated@@574)) $generated@@574))
 :pattern ( ($generated@@300 $generated@@574))
)))
(assert (forall (($generated@@576 T@U) ($generated@@577 T@U) ($generated@@578 T@U) ) (!  (=> (and (and (= (type $generated@@576) ($generated@@325 $generated@@181 $generated@@181)) (= (type $generated@@577) $generated@@73)) (= (type $generated@@578) $generated@@73)) (= ($generated@@145 $generated@@576 ($generated@@433 $generated@@577 $generated@@578)) (forall (($generated@@579 T@U) ) (!  (=> (and (= (type $generated@@579) $generated@@181) ($generated@@0 ($generated@@90 ($generated@@323 $generated@@576) $generated@@579))) (and ($generated@@248 ($generated@@90 ($generated@@408 $generated@@576) $generated@@579) $generated@@578) ($generated@@248 $generated@@579 $generated@@577)))
 :pattern ( ($generated@@90 ($generated@@408 $generated@@576) $generated@@579))
 :pattern ( ($generated@@90 ($generated@@323 $generated@@576) $generated@@579))
))))
 :pattern ( ($generated@@145 $generated@@576 ($generated@@433 $generated@@577 $generated@@578)))
)))
(assert (forall (($generated@@580 T@U) ($generated@@581 T@U) ($generated@@582 T@U) ) (!  (=> (and (and (= (type $generated@@580) ($generated@@343 $generated@@181 $generated@@181)) (= (type $generated@@581) $generated@@73)) (= (type $generated@@582) $generated@@73)) (= ($generated@@145 $generated@@580 ($generated@@441 $generated@@581 $generated@@582)) (forall (($generated@@583 T@U) ) (!  (=> (and (= (type $generated@@583) $generated@@181) ($generated@@0 ($generated@@90 ($generated@@341 $generated@@580) $generated@@583))) (and ($generated@@248 ($generated@@90 ($generated@@416 $generated@@580) $generated@@583) $generated@@582) ($generated@@248 $generated@@583 $generated@@581)))
 :pattern ( ($generated@@90 ($generated@@416 $generated@@580) $generated@@583))
 :pattern ( ($generated@@90 ($generated@@341 $generated@@580) $generated@@583))
))))
 :pattern ( ($generated@@145 $generated@@580 ($generated@@441 $generated@@581 $generated@@582)))
)))
(assert (forall (($generated@@586 T@U) ($generated@@587 T@U) ) (!  (=> (and (= (type $generated@@586) $generated@@181) (= (type $generated@@587) $generated@@181)) (< ($generated@@584 $generated@@586) ($generated@@585 ($generated@@247 $generated@@586 $generated@@587))))
 :pattern ( ($generated@@247 $generated@@586 $generated@@587))
)))
(assert (forall (($generated@@588 T@U) ($generated@@589 T@U) ) (!  (=> (and (= (type $generated@@588) $generated@@181) (= (type $generated@@589) $generated@@181)) (< ($generated@@584 $generated@@589) ($generated@@585 ($generated@@247 $generated@@588 $generated@@589))))
 :pattern ( ($generated@@247 $generated@@588 $generated@@589))
)))
(assert (forall (($generated@@590 T@U) ($generated@@591 T@U) ($generated@@592 T@U) ) (!  (=> (and (and (and (= (type $generated@@590) $generated@@181) (= (type $generated@@591) $generated@@73)) (= (type $generated@@592) $generated@@73)) ($generated@@248 $generated@@590 ($generated@@433 $generated@@591 $generated@@592))) (and (= ($generated@@300 ($generated@@362 ($generated@@325 $generated@@181 $generated@@181) $generated@@590)) $generated@@590) ($generated@@145 ($generated@@362 ($generated@@325 $generated@@181 $generated@@181) $generated@@590) ($generated@@433 $generated@@591 $generated@@592))))
 :pattern ( ($generated@@248 $generated@@590 ($generated@@433 $generated@@591 $generated@@592)))
)))
(assert (forall (($generated@@593 T@U) ($generated@@594 T@U) ($generated@@595 T@U) ) (!  (=> (and (and (and (= (type $generated@@593) $generated@@181) (= (type $generated@@594) $generated@@73)) (= (type $generated@@595) $generated@@73)) ($generated@@248 $generated@@593 ($generated@@441 $generated@@594 $generated@@595))) (and (= ($generated@@300 ($generated@@362 ($generated@@343 $generated@@181 $generated@@181) $generated@@593)) $generated@@593) ($generated@@145 ($generated@@362 ($generated@@343 $generated@@181 $generated@@181) $generated@@593) ($generated@@441 $generated@@594 $generated@@595))))
 :pattern ( ($generated@@248 $generated@@593 ($generated@@441 $generated@@594 $generated@@595)))
)))
(assert (forall (($generated@@596 T@U) ($generated@@597 T@U) ($generated@@598 T@U) ) (!  (=> (and (and (and (= (type $generated@@596) $generated@@73) (= (type $generated@@597) $generated@@73)) (= (type $generated@@598) $generated@@181)) ($generated@@248 $generated@@598 ($generated@@171 $generated@@596 $generated@@597))) (and (= ($generated@@300 ($generated@@362 $generated@@172 $generated@@598)) $generated@@598) ($generated@@145 ($generated@@362 $generated@@172 $generated@@598) ($generated@@171 $generated@@596 $generated@@597))))
 :pattern ( ($generated@@248 $generated@@598 ($generated@@171 $generated@@596 $generated@@597)))
)))
(assert (forall (($generated@@600 T@T) ) (! (= (type ($generated@@599 $generated@@600)) ($generated@@85 $generated@@600 $generated@@4))
 :pattern ( ($generated@@599 $generated@@600))
)))
(assert (forall (($generated@@601 T@U) ) (! (let (($generated@@602 (type $generated@@601)))
 (not ($generated@@0 ($generated@@90 ($generated@@599 $generated@@602) $generated@@601))))
 :pattern ( (let (($generated@@602 (type $generated@@601)))
($generated@@90 ($generated@@599 $generated@@602) $generated@@601)))
)))
(assert (forall (($generated@@603 T@U) ) (! (let (($generated@@604 (type $generated@@603)))
 (not ($generated@@0 ($generated@@90 ($generated@@469 $generated@@604) $generated@@603))))
 :pattern ( (let (($generated@@604 (type $generated@@603)))
($generated@@90 ($generated@@469 $generated@@604) $generated@@603)))
)))
(assert (forall (($generated@@605 T@U) ($generated@@606 T@U) ) (!  (=> (and (= (type $generated@@605) $generated@@73) (= (type $generated@@606) $generated@@73)) (and (= ($generated@@81 ($generated@@171 $generated@@605 $generated@@606)) $generated@@65) (= ($generated@@319 ($generated@@171 $generated@@605 $generated@@606)) $generated@@70)))
 :pattern ( ($generated@@171 $generated@@605 $generated@@606))
)))
(assert (forall (($generated@@608 Int) ($generated@@609 Int) ) (! (= ($generated@@607 $generated@@608 $generated@@609) (* $generated@@608 $generated@@609))
 :pattern ( ($generated@@607 $generated@@608 $generated@@609))
)))
(assert (forall (($generated@@610 T@U) ) (!  (=> (= (type $generated@@610) $generated@@172) (= ($generated@@584 ($generated@@300 $generated@@610)) ($generated@@585 $generated@@610)))
 :pattern ( ($generated@@584 ($generated@@300 $generated@@610)))
)))
(assert (forall (($generated@@611 T@U) ) (!  (=> (and (= (type $generated@@611) $generated@@181) ($generated@@248 $generated@@611 ($generated@@84 0))) (and (= ($generated@@300 ($generated@@362 $generated@@2 $generated@@611)) $generated@@611) ($generated@@145 ($generated@@362 ($generated@@85 $generated@@181 $generated@@4) $generated@@611) ($generated@@84 0))))
 :pattern ( ($generated@@248 $generated@@611 ($generated@@84 0)))
)))
(assert (forall (($generated@@612 T@U) ($generated@@613 T@U) ) (!  (=> (and (and (= (type $generated@@612) $generated@@181) (= (type $generated@@613) $generated@@73)) ($generated@@248 $generated@@612 ($generated@@257 $generated@@613))) (and (= ($generated@@300 ($generated@@362 ($generated@@85 $generated@@181 $generated@@4) $generated@@612)) $generated@@612) ($generated@@145 ($generated@@362 ($generated@@85 $generated@@181 $generated@@4) $generated@@612) ($generated@@257 $generated@@613))))
 :pattern ( ($generated@@248 $generated@@612 ($generated@@257 $generated@@613)))
)))
(assert (forall (($generated@@614 T@U) ($generated@@615 T@U) ) (!  (=> (and (and (= (type $generated@@614) $generated@@181) (= (type $generated@@615) $generated@@73)) ($generated@@248 $generated@@614 ($generated@@262 $generated@@615))) (and (= ($generated@@300 ($generated@@362 ($generated@@85 $generated@@181 $generated@@4) $generated@@614)) $generated@@614) ($generated@@145 ($generated@@362 ($generated@@85 $generated@@181 $generated@@4) $generated@@614) ($generated@@262 $generated@@615))))
 :pattern ( ($generated@@248 $generated@@614 ($generated@@262 $generated@@615)))
)))
(assert (forall (($generated@@616 T@U) ($generated@@617 T@U) ) (!  (=> (and (and (= (type $generated@@616) $generated@@181) (= (type $generated@@617) $generated@@73)) ($generated@@248 $generated@@616 ($generated@@186 $generated@@617))) (and (= ($generated@@300 ($generated@@362 ($generated@@85 $generated@@181 $generated@@2) $generated@@616)) $generated@@616) ($generated@@145 ($generated@@362 ($generated@@85 $generated@@181 $generated@@2) $generated@@616) ($generated@@186 $generated@@617))))
 :pattern ( ($generated@@248 $generated@@616 ($generated@@186 $generated@@617)))
)))
(assert (forall (($generated@@618 T@U) ($generated@@619 T@U) ) (!  (=> (and (and (= (type $generated@@618) $generated@@181) (= (type $generated@@619) $generated@@73)) ($generated@@248 $generated@@618 ($generated@@536 $generated@@619))) (and (= ($generated@@300 ($generated@@362 ($generated@@291 $generated@@181) $generated@@618)) $generated@@618) ($generated@@145 ($generated@@362 ($generated@@291 $generated@@181) $generated@@618) ($generated@@536 $generated@@619))))
 :pattern ( ($generated@@248 $generated@@618 ($generated@@536 $generated@@619)))
)))
(assert (forall (($generated@@620 T@U) ($generated@@621 T@U) ) (!  (=> (and (and (= (type $generated@@620) $generated@@73) (= (type $generated@@621) $generated@@181)) ($generated@@248 $generated@@621 ($generated@@142 $generated@@620))) (and (= ($generated@@300 ($generated@@362 $generated@@86 $generated@@621)) $generated@@621) ($generated@@145 ($generated@@362 $generated@@86 $generated@@621) ($generated@@142 $generated@@620))))
 :pattern ( ($generated@@248 $generated@@621 ($generated@@142 $generated@@620)))
)))
(assert (forall (($generated@@622 T@U) ($generated@@623 T@U) ) (!  (=> (and (and (= (type $generated@@622) $generated@@73) (= (type $generated@@623) $generated@@181)) ($generated@@248 $generated@@623 ($generated@@165 $generated@@622))) (and (= ($generated@@300 ($generated@@362 $generated@@86 $generated@@623)) $generated@@623) ($generated@@145 ($generated@@362 $generated@@86 $generated@@623) ($generated@@165 $generated@@622))))
 :pattern ( ($generated@@248 $generated@@623 ($generated@@165 $generated@@622)))
)))
(assert (forall (($generated@@624 T@U) ($generated@@625 T@U) ($generated@@626 T@U) ($generated@@627 T@U) ) (! (let (($generated@@628 (type $generated@@627)))
 (=> (and (and (and (= (type $generated@@624) ($generated@@85 $generated@@86 $generated@@87)) (= (type $generated@@625) $generated@@86)) (= (type $generated@@626) ($generated@@75 $generated@@628))) ($generated@@160 ($generated@@91 $generated@@624 $generated@@625 ($generated@@93 ($generated@@90 $generated@@624 $generated@@625) $generated@@626 $generated@@627)))) ($generated@@150 $generated@@624 ($generated@@91 $generated@@624 $generated@@625 ($generated@@93 ($generated@@90 $generated@@624 $generated@@625) $generated@@626 $generated@@627)))))
 :pattern ( ($generated@@91 $generated@@624 $generated@@625 ($generated@@93 ($generated@@90 $generated@@624 $generated@@625) $generated@@626 $generated@@627)))
)))
(assert (= ($generated@@81 $generated@@157) $generated@@61))
(assert (= ($generated@@319 $generated@@157) $generated@@68))
(assert (= ($generated@@81 $generated@@366) $generated@@66))
(assert (= ($generated@@319 $generated@@366) $generated@@71))
(assert (= ($generated@@81 $generated@@368) $generated@@67))
(assert (= ($generated@@319 $generated@@368) $generated@@72))
(assert (forall (($generated@@629 T@U) ($generated@@630 T@U) ($generated@@631 T@U) ) (!  (=> (and (and (= (type $generated@@629) ($generated@@85 $generated@@181 $generated@@2)) (= (type $generated@@630) $generated@@73)) (= (type $generated@@631) ($generated@@85 $generated@@86 $generated@@87))) (= ($generated@@83 $generated@@629 ($generated@@186 $generated@@630) $generated@@631) (forall (($generated@@632 T@U) ) (!  (=> (and (= (type $generated@@632) $generated@@181) (< 0 ($generated ($generated@@90 $generated@@629 $generated@@632)))) ($generated@@277 $generated@@632 $generated@@630 $generated@@631))
 :pattern ( ($generated@@90 $generated@@629 $generated@@632))
))))
 :pattern ( ($generated@@83 $generated@@629 ($generated@@186 $generated@@630) $generated@@631))
)))
(assert (forall (($generated@@633 T@U) ($generated@@634 T@U) ($generated@@635 T@U) ) (!  (=> (and (and (and (= (type $generated@@633) $generated@@172) (= (type $generated@@634) $generated@@73)) (= (type $generated@@635) ($generated@@85 $generated@@86 $generated@@87))) (and ($generated@@160 $generated@@635) (and ($generated@@170 $generated@@633) (exists (($generated@@636 T@U) ) (!  (and (= (type $generated@@636) $generated@@73) ($generated@@83 $generated@@633 ($generated@@171 $generated@@634 $generated@@636) $generated@@635))
 :pattern ( ($generated@@83 $generated@@633 ($generated@@171 $generated@@634 $generated@@636) $generated@@635))
))))) ($generated@@277 ($generated@@179 $generated@@633) $generated@@634 $generated@@635))
 :pattern ( ($generated@@277 ($generated@@179 $generated@@633) $generated@@634 $generated@@635))
)))
(assert (forall (($generated@@637 T@U) ($generated@@638 T@U) ($generated@@639 T@U) ) (!  (=> (and (and (and (= (type $generated@@637) $generated@@172) (= (type $generated@@638) $generated@@73)) (= (type $generated@@639) ($generated@@85 $generated@@86 $generated@@87))) (and ($generated@@160 $generated@@639) (and ($generated@@170 $generated@@637) (exists (($generated@@640 T@U) ) (!  (and (= (type $generated@@640) $generated@@73) ($generated@@83 $generated@@637 ($generated@@171 $generated@@640 $generated@@638) $generated@@639))
 :pattern ( ($generated@@83 $generated@@637 ($generated@@171 $generated@@640 $generated@@638) $generated@@639))
))))) ($generated@@277 ($generated@@180 $generated@@637) $generated@@638 $generated@@639))
 :pattern ( ($generated@@277 ($generated@@180 $generated@@637) $generated@@638 $generated@@639))
)))
(assert (forall (($generated@@641 T@U) ($generated@@642 T@U) ) (!  (=> (and (= (type $generated@@641) $generated@@181) (= (type $generated@@642) $generated@@181)) (= ($generated@@247 ($generated@@273 $generated@@641) ($generated@@273 $generated@@642)) ($generated@@273 ($generated@@247 $generated@@641 $generated@@642))))
 :pattern ( ($generated@@247 ($generated@@273 $generated@@641) ($generated@@273 $generated@@642)))
)))
(assert (forall (($generated@@643 Int) ) (! (= ($generated@@300 ($generated@@8 ($generated@@269 $generated@@643))) ($generated@@273 ($generated@@300 ($generated@@8 $generated@@643))))
 :pattern ( ($generated@@300 ($generated@@8 ($generated@@269 $generated@@643))))
)))
(assert (forall (($generated@@644 Real) ) (! (= ($generated@@300 ($generated@@9 ($generated@@271 $generated@@644))) ($generated@@273 ($generated@@300 ($generated@@9 $generated@@644))))
 :pattern ( ($generated@@300 ($generated@@9 ($generated@@271 $generated@@644))))
)))
(assert (forall (($generated@@645 T@U) ) (! (= ($generated@@300 ($generated@@273 $generated@@645)) ($generated@@273 ($generated@@300 $generated@@645)))
 :pattern ( ($generated@@300 ($generated@@273 $generated@@645)))
)))
(assert (forall (($generated@@646 T@U) ) (! (let (($generated@@647 ($generated@@292 (type $generated@@646))))
 (=> (and (= (type $generated@@646) ($generated@@291 $generated@@647)) (= ($generated@@290 $generated@@646) 0)) (= $generated@@646 ($generated@@289 $generated@@647))))
 :pattern ( ($generated@@290 $generated@@646))
)))
(assert (forall (($generated@@648 T@U) ($generated@@649 T@U) ($generated@@650 T@U) ) (! (let (($generated@@651 (type $generated@@649)))
 (=> (and (and (= (type $generated@@648) ($generated@@85 $generated@@651 $generated@@2)) (= (type $generated@@650) $generated@@2)) (<= 0 ($generated $generated@@650))) (= ($generated@@313 ($generated@@91 $generated@@648 $generated@@649 $generated@@650)) (+ (- ($generated@@313 $generated@@648) ($generated ($generated@@90 $generated@@648 $generated@@649))) ($generated $generated@@650)))))
 :pattern ( ($generated@@313 ($generated@@91 $generated@@648 $generated@@649 $generated@@650)))
)))
(assert (forall (($generated@@652 T@U) ($generated@@653 T@U) ) (!  (=> (and (= (type $generated@@652) ($generated@@85 $generated@@86 $generated@@87)) (= (type $generated@@653) $generated@@2)) ($generated@@83 $generated@@653 $generated@@46 $generated@@652))
 :pattern ( ($generated@@83 $generated@@653 $generated@@46 $generated@@652))
)))
(assert (forall (($generated@@654 T@U) ($generated@@655 T@U) ) (!  (=> (and (= (type $generated@@654) ($generated@@85 $generated@@86 $generated@@87)) (= (type $generated@@655) $generated@@3)) ($generated@@83 $generated@@655 $generated@@47 $generated@@654))
 :pattern ( ($generated@@83 $generated@@655 $generated@@47 $generated@@654))
)))
(assert (forall (($generated@@656 T@U) ($generated@@657 T@U) ) (!  (=> (and (= (type $generated@@656) ($generated@@85 $generated@@86 $generated@@87)) (= (type $generated@@657) $generated@@4)) ($generated@@83 $generated@@657 $generated@@44 $generated@@656))
 :pattern ( ($generated@@83 $generated@@657 $generated@@44 $generated@@656))
)))
(assert (forall (($generated@@658 T@U) ($generated@@659 T@U) ) (!  (=> (and (= (type $generated@@658) ($generated@@85 $generated@@86 $generated@@87)) (= (type $generated@@659) $generated@@493)) ($generated@@83 $generated@@659 $generated@@45 $generated@@658))
 :pattern ( ($generated@@83 $generated@@659 $generated@@45 $generated@@658))
)))
(assert (forall (($generated@@660 T@U) ($generated@@661 T@U) ) (!  (=> (and (= (type $generated@@660) ($generated@@85 $generated@@86 $generated@@87)) (= (type $generated@@661) $generated@@181)) ($generated@@83 $generated@@661 $generated@@48 $generated@@660))
 :pattern ( ($generated@@83 $generated@@661 $generated@@48 $generated@@660))
)))
(assert (forall (($generated@@662 T@U) ($generated@@663 T@U) ) (!  (=> (and (= (type $generated@@662) ($generated@@291 $generated@@181)) (= (type $generated@@663) $generated@@73)) (= ($generated@@145 $generated@@662 ($generated@@536 $generated@@663)) (forall (($generated@@664 Int) ) (!  (=> (and (<= 0 $generated@@664) (< $generated@@664 ($generated@@290 $generated@@662))) ($generated@@248 ($generated@@537 $generated@@662 $generated@@664) $generated@@663))
 :pattern ( ($generated@@537 $generated@@662 $generated@@664))
))))
 :pattern ( ($generated@@145 $generated@@662 ($generated@@536 $generated@@663)))
)))
(assert (forall (($generated@@666 T@U) ($generated@@667 Int) ) (!  (=> (= (type $generated@@666) ($generated@@291 $generated@@181)) (=> (and (<= 0 $generated@@667) (< $generated@@667 ($generated@@290 $generated@@666))) (< ($generated@@585 ($generated@@362 $generated@@172 ($generated@@537 $generated@@666 $generated@@667))) ($generated@@665 $generated@@666))))
 :pattern ( ($generated@@585 ($generated@@362 $generated@@172 ($generated@@537 $generated@@666 $generated@@667))))
)))
(assert (forall (($generated@@668 T@U) ($generated@@669 T@U) ($generated@@670 T@U) ) (!  (=> (and (and (and (= (type $generated@@668) ($generated@@325 $generated@@181 $generated@@181)) (= (type $generated@@669) $generated@@73)) (= (type $generated@@670) $generated@@73)) ($generated@@145 $generated@@668 ($generated@@433 $generated@@669 $generated@@670))) (and (and ($generated@@145 ($generated@@323 $generated@@668) ($generated@@257 $generated@@669)) ($generated@@145 ($generated@@376 $generated@@668) ($generated@@257 $generated@@670))) ($generated@@145 ($generated@@407 $generated@@668) ($generated@@257 ($generated@@171 $generated@@669 $generated@@670)))))
 :pattern ( ($generated@@145 $generated@@668 ($generated@@433 $generated@@669 $generated@@670)))
)))
(assert (forall (($generated@@671 T@U) ($generated@@672 T@U) ($generated@@673 T@U) ) (!  (=> (and (and (and (= (type $generated@@671) ($generated@@343 $generated@@181 $generated@@181)) (= (type $generated@@672) $generated@@73)) (= (type $generated@@673) $generated@@73)) ($generated@@145 $generated@@671 ($generated@@441 $generated@@672 $generated@@673))) (and (and ($generated@@145 ($generated@@341 $generated@@671) ($generated@@262 $generated@@672)) ($generated@@145 ($generated@@387 $generated@@671) ($generated@@262 $generated@@673))) ($generated@@145 ($generated@@415 $generated@@671) ($generated@@262 ($generated@@171 $generated@@672 $generated@@673)))))
 :pattern ( ($generated@@145 $generated@@671 ($generated@@441 $generated@@672 $generated@@673)))
)))
(assert (forall (($generated@@674 T@U) ) (!  (=> (= (type $generated@@674) $generated@@2) ($generated@@145 $generated@@674 $generated@@46))
 :pattern ( ($generated@@145 $generated@@674 $generated@@46))
)))
(assert (forall (($generated@@675 T@U) ) (!  (=> (= (type $generated@@675) $generated@@3) ($generated@@145 $generated@@675 $generated@@47))
 :pattern ( ($generated@@145 $generated@@675 $generated@@47))
)))
(assert (forall (($generated@@676 T@U) ) (!  (=> (= (type $generated@@676) $generated@@4) ($generated@@145 $generated@@676 $generated@@44))
 :pattern ( ($generated@@145 $generated@@676 $generated@@44))
)))
(assert (forall (($generated@@677 T@U) ) (!  (=> (= (type $generated@@677) $generated@@493) ($generated@@145 $generated@@677 $generated@@45))
 :pattern ( ($generated@@145 $generated@@677 $generated@@45))
)))
(assert (forall (($generated@@678 T@U) ) (!  (=> (= (type $generated@@678) $generated@@181) ($generated@@145 $generated@@678 $generated@@48))
 :pattern ( ($generated@@145 $generated@@678 $generated@@48))
)))
(push 1)
(declare-fun ControlFlow (Int Int) Int)
(declare-fun $generated@@679 () Real)
(declare-fun $generated@@680 () Int)
(declare-fun $generated@@681 () Real)
(declare-fun $generated@@682 () Int)
(declare-fun $generated@@683 () Real)
(declare-fun $generated@@684 () Real)
(declare-fun $generated@@685 () Real)
(declare-fun $generated@@686 () Int)
(declare-fun $generated@@687 () Int)
(declare-fun $generated@@688 () Int)
(declare-fun $generated@@689 () Int)
(declare-fun $generated@@690 () Int)
(declare-fun $generated@@691 () Int)
(declare-fun $generated@@692 () Int)
(declare-fun $generated@@693 () Int)
(declare-fun $generated@@694 () Int)
(declare-fun $generated@@695 () Int)
(declare-fun $generated@@696 () Real)
(declare-fun $generated@@697 () Real)
(declare-fun $generated@@698 () Real)
(declare-fun $generated@@699 () Real)
(declare-fun $generated@@700 () Real)
(declare-fun $generated@@701 () Real)
(declare-fun $generated@@702 () Real)
(declare-fun $generated@@703 () Real)
(declare-fun $generated@@704 () Real)
(declare-fun $generated@@705 () Real)
(declare-fun $generated@@706 () T@U)
(declare-fun $generated@@707 () T@U)
(declare-fun $generated@@708 () T@U)
(declare-fun $generated@@709 () T@U)
(declare-fun $generated@@710 (T@U) Bool)
(declare-fun $generated@@711 () T@U)
(declare-fun $generated@@712 () Real)
(declare-fun $generated@@713 () Real)
(declare-fun $generated@@714 () Int)
(declare-fun $generated@@715 () T@U)
(declare-fun $generated@@716 () Int)
(declare-fun $generated@@717 () Int)
(declare-fun $generated@@718 () T@U)
(declare-fun $generated@@719 () Real)
(declare-fun $generated@@720 () Int)
(declare-fun $generated@@721 () Real)
(declare-fun $generated@@722 () T@U)
(declare-fun $generated@@723 () T@U)
(declare-fun $generated@@724 () Int)
(declare-fun $generated@@725 () Int)
(assert  (and (and (and (and (and (and (and (and (= (type $generated@@706) ($generated@@193 $generated@@86 $generated@@4)) (= (type $generated@@707) ($generated@@85 $generated@@86 $generated@@87))) (= (type $generated@@708) $generated@@86)) (= (type $generated@@709) ($generated@@85 $generated@@86 $generated@@87))) (= (type $generated@@711) ($generated@@85 $generated@@181 $generated@@4))) (= (type $generated@@715) ($generated@@85 $generated@@181 $generated@@4))) (= (type $generated@@718) ($generated@@85 $generated@@181 $generated@@4))) (= (type $generated@@722) $generated@@86)) (= (type $generated@@723) ($generated@@85 $generated@@181 $generated@@4))))
(set-option :timeout 0)
(set-option :rlimit 0)
(assert (not
 (=> (= (ControlFlow 0 0) 23) (let (($generated@@726 true))
(let (($generated@@727  (=> (and (= $generated@@679 ($generated@@271 0.3)) (= $generated@@680 (+ ($generated@@267 $generated@@681) ($generated@@267 $generated@@681)))) (and (=> (= (ControlFlow 0 2) (- 0 3)) (= $generated@@680 ($generated@@269 (+ 5 5)))) (=> (= $generated@@680 ($generated@@269 (+ 5 5))) (=> (and (= $generated@@682 ($generated@@267 (+ $generated@@681 0.5))) (= (ControlFlow 0 2) (- 0 1))) (= $generated@@682 ($generated@@269 6))))))))
(let (($generated@@728  (and (=> (= (ControlFlow 0 5) (- 0 16)) (=> (= $generated@@679 ($generated@@271 0.0)) (= $generated@@683 ($generated@@271 10.6)))) (=> (=> (= $generated@@679 ($generated@@271 0.0)) (= $generated@@683 ($generated@@271 10.6))) (and (=> (= (ControlFlow 0 5) (- 0 15)) (= $generated@@681 $generated@@681)) (=> (= $generated@@681 $generated@@681) (=> (and (= $generated@@684 ($generated@@271 2.0)) (= $generated@@685 (* 2.0 $generated@@681))) (and (=> (= (ControlFlow 0 5) (- 0 14)) (= (* 2.0 $generated@@681) (* 2.0 $generated@@681))) (=> (= (* 2.0 $generated@@681) (* 2.0 $generated@@681)) (and (=> (= (ControlFlow 0 5) (- 0 13)) (= ($generated@@460 $generated@@686) ($generated@@460 $generated@@686))) (=> (= ($generated@@460 $generated@@686) ($generated@@460 $generated@@686)) (=> (and (= $generated@@687 ($generated@@269 2)) (= $generated@@688 ($generated@@607 ($generated@@269 2) $generated@@686))) (and (=> (= (ControlFlow 0 5) (- 0 12)) (= ($generated@@607 ($generated@@269 2) $generated@@686) ($generated@@607 ($generated@@269 2) $generated@@686))) (=> (= ($generated@@607 ($generated@@269 2) $generated@@686) ($generated@@607 ($generated@@269 2) $generated@@686)) (=> (= $generated@@689 ($generated@@269 2)) (and (=> (= (ControlFlow 0 5) (- 0 11)) (not (= ($generated@@269 2) 0))) (=> (not (= ($generated@@269 2) 0)) (=> (and (= $generated@@690 ($generated@@449 $generated@@686 ($generated@@269 2))) (= $generated@@691 ($generated@@269 24))) (and (=> (= (ControlFlow 0 5) (- 0 10)) (not (= $generated@@686 0))) (=> (not (= $generated@@686 0)) (=> (and (and (= $generated@@692 ($generated@@449 24 $generated@@686)) (= $generated@@693 (+ ($generated@@449 $generated@@686 ($generated@@269 2)) ($generated@@449 24 $generated@@686)))) (and (= $generated@@694 (+ ($generated@@449 $generated@@686 ($generated@@269 2)) ($generated@@449 24 $generated@@686))) (= $generated@@695 ($generated@@269 8)))) (and (=> (= (ControlFlow 0 5) (- 0 9)) (= $generated@@694 ($generated@@269 8))) (=> (= $generated@@694 ($generated@@269 8)) (=> (= $generated@@696 ($generated@@271 60.0)) (=> (and (= $generated@@697 ($generated@@271 60.0)) (= $generated@@698 ($generated@@271 2.0))) (and (=> (= (ControlFlow 0 5) (- 0 8)) (not (= ($generated@@271 2.0) 0.0))) (=> (not (= ($generated@@271 2.0) 0.0)) (=> (and (= $generated@@699 (/ $generated@@697 2.0)) (= $generated@@700 ($generated@@271 120.0))) (and (=> (= (ControlFlow 0 5) (- 0 7)) (not (= $generated@@697 0.0))) (=> (not (= $generated@@697 0.0)) (=> (and (and (= $generated@@701 (/ 120.0 $generated@@697)) (= $generated@@702 (+ (/ $generated@@697 2.0) (/ 120.0 $generated@@697)))) (and (= $generated@@703 (+ (/ $generated@@697 2.0) (/ 120.0 $generated@@697))) (= $generated@@704 ($generated@@271 32.0)))) (and (=> (= (ControlFlow 0 5) (- 0 6)) (= $generated@@703 ($generated@@271 32.0))) (=> (= $generated@@703 ($generated@@271 32.0)) (=> (= $generated@@705 ($generated@@271 0.3)) (and (=> (= (ControlFlow 0 5) 2) $generated@@727) (=> (= (ControlFlow 0 5) 4) $generated@@726))))))))))))))))))))))))))))))))))))
(let (($generated@@729  (=> (and (not (= $generated@@679 ($generated@@271 0.0))) (= (ControlFlow 0 18) 5)) $generated@@728)))
(let (($generated@@730  (=> (and (= $generated@@679 ($generated@@271 0.0)) (= (ControlFlow 0 17) 5)) $generated@@728)))
(let (($generated@@731  (=> (= $generated@@706 ($generated@@192 $generated@@143 $generated@@707 $generated@@60 false)) (and (=> (= (ControlFlow 0 19) (- 0 22)) (<= 0 ($generated@@269 100))) (=> (<= 0 ($generated@@269 100)) (=> (and (and (and (not (= $generated@@708 $generated@@143)) (= ($generated@@144 $generated@@708) ($generated@@142 $generated@@366))) (not ($generated@@0 ($generated@@92 ($generated@@90 $generated@@707 $generated@@708) $generated@@60)))) (and (and (= ($generated@@141 $generated@@708) ($generated@@269 100)) (= $generated@@709 ($generated@@91 $generated@@707 $generated@@708 ($generated@@93 ($generated@@90 $generated@@707 $generated@@708) $generated@@60 ($generated@@11 true))))) (and ($generated@@160 $generated@@709) ($generated@@710 $generated@@709)))) (=> (and (and (and (and ($generated@@145 $generated@@711 ($generated@@257 $generated@@368)) ($generated@@83 $generated@@711 ($generated@@257 $generated@@368) $generated@@709)) (and ($generated@@0 ($generated@@273 ($generated@@11 true))) ($generated@@0 ($generated@@273 ($generated@@11 true))))) (and (and ($generated@@0 ($generated@@273 ($generated@@11 true))) (= $generated@@712 ($generated@@271 5.3))) (and (= $generated@@713 ($generated@@271 5.3)) (= $generated@@714 ($generated@@269 12))))) (and (and (and (= $generated@@686 ($generated@@269 12)) (= $generated@@715 ($generated@@273 ($generated@@599 $generated@@181)))) (and (= $generated@@716 ($generated@@269 40)) (= $generated@@717 ($generated@@269 20)))) (and (and (= $generated@@718 ($generated@@273 ($generated@@452 ($generated@@452 ($generated@@599 $generated@@181) ($generated@@300 ($generated@@8 ($generated@@269 40)))) ($generated@@300 ($generated@@8 ($generated@@269 20)))))) (= $generated@@719 (+ $generated@@713 $generated@@679))) (and (= $generated@@681 (+ $generated@@713 $generated@@679)) (= $generated@@683 (* 2.0 $generated@@681)))))) (and (=> (= (ControlFlow 0 19) (- 0 21)) ($generated@@145 ($generated@@8 ($generated@@607 ($generated@@269 2) $generated@@686)) $generated@@157)) (=> ($generated@@145 ($generated@@8 ($generated@@607 ($generated@@269 2) $generated@@686)) $generated@@157) (=> (= $generated@@720 ($generated@@607 ($generated@@269 2) $generated@@686)) (and (=> (= (ControlFlow 0 19) (- 0 20)) (= $generated@@720 ($generated@@269 24))) (=> (= $generated@@720 ($generated@@269 24)) (=> (= $generated@@721 ($generated@@271 0.0)) (and (=> (= (ControlFlow 0 19) 17) $generated@@730) (=> (= (ControlFlow 0 19) 18) $generated@@729)))))))))))))))
(let (($generated@@732  (=> (and ($generated@@160 $generated@@707) ($generated@@710 $generated@@707)) (=> (and (and (and ($generated@@145 $generated@@722 ($generated@@165 $generated@@366)) ($generated@@83 $generated@@722 ($generated@@165 $generated@@366) $generated@@707)) true) (and (and ($generated@@145 $generated@@723 ($generated@@257 $generated@@368)) ($generated@@83 $generated@@723 ($generated@@257 $generated@@368) $generated@@707)) true)) (=> (and (and (and (and ($generated@@0 ($generated@@273 ($generated@@11 true))) true) (and ($generated@@0 ($generated@@273 ($generated@@11 true))) true)) (and (and ($generated@@0 ($generated@@273 ($generated@@11 true))) true) (and ($generated@@0 ($generated@@273 ($generated@@11 true))) true))) (and (and (and (<= ($generated@@269 0) $generated@@724) true) (and ($generated@@0 ($generated@@273 ($generated@@11 true))) true)) (and (and ($generated@@0 ($generated@@273 ($generated@@11 true))) true) (and (= 2 $generated@@725) (= (ControlFlow 0 23) 19))))) $generated@@731)))))
$generated@@732))))))))
))
(check-sat)
(pop 1)
; Valid
(get-info :rlimit)
(reset)
(set-option :rlimit 0)
; did a full reset
(reset)
(set-option :print-success false)
(set-info :smt-lib-version 2.6)
(set-option :auto_config false)
(set-option :type_check true)
(set-option :smt.case_split 3)
(set-option :smt.qi.eager_threshold 100)
(set-option :smt.delay_units true)
(set-option :smt.arith.solver 2)
(set-option :smt.mbqi false)
(set-option :model.compact false)
(set-option :model.v2 true)
(set-option :pp.bv_literals false)
; done setting options


(set-info :category "industrial")
(declare-sort |T@U| 0)
(declare-sort |T@T| 0)
(declare-fun real_pow (Real Real) Real)
(declare-fun UOrdering2 (|T@U| |T@U|) Bool)
(declare-fun UOrdering3 (|T@T| |T@U| |T@U|) Bool)
(declare-fun tickleBool (Bool) Bool)
(assert (and (tickleBool true) (tickleBool false)))
(declare-fun $generated (T@U) Int)
(declare-fun $generated@@0 (T@U) Bool)
(declare-fun $generated@@1 (T@T) Int)
(declare-fun $generated@@2 () T@T)
(declare-fun $generated@@3 () T@T)
(declare-fun $generated@@4 () T@T)
(declare-fun $generated@@5 () T@T)
(declare-fun $generated@@6 () T@T)
(declare-fun $generated@@7 () T@T)
(declare-fun $generated@@8 (Int) T@U)
(declare-fun type (T@U) T@T)
(declare-fun $generated@@9 (Real) T@U)
(declare-fun $generated@@10 (T@U) Real)
(declare-fun $generated@@11 (Bool) T@U)
(declare-fun $generated@@12 (RoundingMode) T@U)
(declare-fun $generated@@13 (T@U) RoundingMode)
(declare-fun $generated@@14 (String) T@U)
(declare-fun $generated@@15 (T@U) String)
(declare-fun $generated@@16 ((RegEx String)) T@U)
(declare-fun $generated@@17 (T@U) (RegEx String))
(declare-fun $generated@@44 (T@U T@U T@U) T@U)
(declare-fun $generated@@45 (T@U T@U T@U Bool) T@U)
(declare-fun $generated@@46 (T@T) T@T)
(declare-fun $generated@@47 () T@T)
(declare-fun $generated@@48 (T@T T@T) T@T)
(declare-fun $generated@@49 () T@T)
(declare-fun $generated@@50 (T@T) T@T)
(declare-fun $generated@@51 (T@U T@U) T@U)
(declare-fun $generated@@52 (T@U T@U) T@U)
(declare-fun $generated@@53 (T@T) T@T)
(declare-fun $generated@@54 (T@T) T@T)
(declare-fun $generated@@55 (T@U T@U T@U) T@U)
(declare-fun $generated@@56 (T@U T@U T@U) T@U)
(declare-fun $generated@@57 (T@T T@T) T@T)
(declare-fun $generated@@58 (T@T) T@T)
(declare-fun $generated@@59 (T@T) T@T)
(declare-fun $generated@@60 (T@U T@U T@U T@U) T@U)
(declare-fun $generated@@157 (Int) Int)
(declare-fun $generated@@159 (T@U) T@U)
(declare-fun $generated@@163 (T@U) T@U)
(declare-fun $generated@@164 (T@T T@U) T@U)
(declare-fun $generated@@165 () T@T)
(assert  (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (= ($generated@@1 $generated@@2) 0) (= ($generated@@1 $generated@@3) 1)) (= ($generated@@1 $generated@@4) 2)) (= ($generated@@1 $generated@@5) 3)) (= ($generated@@1 $generated@@6) 4)) (= ($generated@@1 $generated@@7) 5)) (forall (($generated@@18 Int) ) (! (= ($generated ($generated@@8 $generated@@18)) $generated@@18)
 :pattern ( ($generated@@8 $generated@@18))
))) (forall (($generated@@19 T@U) ) (!  (=> (= (type $generated@@19) $generated@@2) (= ($generated@@8 ($generated $generated@@19)) $generated@@19))
 :pattern ( ($generated $generated@@19))
))) (forall (($generated@@20 Int) ) (! (= (type ($generated@@8 $generated@@20)) $generated@@2)
 :pattern ( ($generated@@8 $generated@@20))
))) (forall (($generated@@21 Real) ) (! (= ($generated@@10 ($generated@@9 $generated@@21)) $generated@@21)
 :pattern ( ($generated@@9 $generated@@21))
))) (forall (($generated@@22 T@U) ) (!  (=> (= (type $generated@@22) $generated@@3) (= ($generated@@9 ($generated@@10 $generated@@22)) $generated@@22))
 :pattern ( ($generated@@10 $generated@@22))
))) (forall (($generated@@23 Real) ) (! (= (type ($generated@@9 $generated@@23)) $generated@@3)
 :pattern ( ($generated@@9 $generated@@23))
))) (forall (($generated@@24 Bool) ) (! (= ($generated@@0 ($generated@@11 $generated@@24)) $generated@@24)
 :pattern ( ($generated@@11 $generated@@24))
))) (forall (($generated@@25 T@U) ) (!  (=> (= (type $generated@@25) $generated@@4) (= ($generated@@11 ($generated@@0 $generated@@25)) $generated@@25))
 :pattern ( ($generated@@0 $generated@@25))
))) (forall (($generated@@26 Bool) ) (! (= (type ($generated@@11 $generated@@26)) $generated@@4)
 :pattern ( ($generated@@11 $generated@@26))
))) (forall (($generated@@27 RoundingMode) ) (! (= ($generated@@13 ($generated@@12 $generated@@27)) $generated@@27)
 :pattern ( ($generated@@12 $generated@@27))
))) (forall (($generated@@28 T@U) ) (!  (=> (= (type $generated@@28) $generated@@5) (= ($generated@@12 ($generated@@13 $generated@@28)) $generated@@28))
 :pattern ( ($generated@@13 $generated@@28))
))) (forall (($generated@@29 RoundingMode) ) (! (= (type ($generated@@12 $generated@@29)) $generated@@5)
 :pattern ( ($generated@@12 $generated@@29))
))) (forall (($generated@@30 String) ) (! (= ($generated@@15 ($generated@@14 $generated@@30)) $generated@@30)
 :pattern ( ($generated@@14 $generated@@30))
))) (forall (($generated@@31 T@U) ) (!  (=> (= (type $generated@@31) $generated@@6) (= ($generated@@14 ($generated@@15 $generated@@31)) $generated@@31))
 :pattern ( ($generated@@15 $generated@@31))
))) (forall (($generated@@32 String) ) (! (= (type ($generated@@14 $generated@@32)) $generated@@6)
 :pattern ( ($generated@@14 $generated@@32))
))) (forall (($generated@@33 (RegEx String)) ) (! (= ($generated@@17 ($generated@@16 $generated@@33)) $generated@@33)
 :pattern ( ($generated@@16 $generated@@33))
))) (forall (($generated@@34 T@U) ) (!  (=> (= (type $generated@@34) $generated@@7) (= ($generated@@16 ($generated@@17 $generated@@34)) $generated@@34))
 :pattern ( ($generated@@17 $generated@@34))
))) (forall (($generated@@35 (RegEx String)) ) (! (= (type ($generated@@16 $generated@@35)) $generated@@7)
 :pattern ( ($generated@@16 $generated@@35))
))))
(assert (forall (($generated@@36 T@U) ) (! (UOrdering2 $generated@@36 $generated@@36)
 :no-pattern ($generated $generated@@36)
 :no-pattern ($generated@@0 $generated@@36)
)))
(assert (forall (($generated@@37 T@U) ($generated@@38 T@U) ($generated@@39 T@U) ) (! (let (($generated@@40 (type $generated@@37)))
 (=> (and (and (= (type $generated@@38) $generated@@40) (= (type $generated@@39) $generated@@40)) (and (UOrdering2 $generated@@37 $generated@@38) (UOrdering2 $generated@@38 $generated@@39))) (UOrdering2 $generated@@37 $generated@@39)))
 :pattern ( (UOrdering2 $generated@@37 $generated@@38) (UOrdering2 $generated@@38 $generated@@39))
)))
(assert (forall (($generated@@41 T@U) ($generated@@42 T@U) ) (! (let (($generated@@43 (type $generated@@41)))
 (=> (= (type $generated@@42) $generated@@43) (=> (and (UOrdering2 $generated@@41 $generated@@42) (UOrdering2 $generated@@42 $generated@@41)) (= $generated@@41 $generated@@42))))
 :pattern ( (UOrdering2 $generated@@41 $generated@@42) (UOrdering2 $generated@@42 $generated@@41))
)))
(assert  (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (forall (($generated@@61 T@T) ($generated@@62 T@T) ) (= ($generated@@1 ($generated@@48 $generated@@61 $generated@@62)) 6)) (forall (($generated@@63 T@T) ($generated@@64 T@T) ) (! (= ($generated@@53 ($generated@@48 $generated@@63 $generated@@64)) $generated@@63)
 :pattern ( ($generated@@48 $generated@@63 $generated@@64))
))) (forall (($generated@@65 T@T) ($generated@@66 T@T) ) (! (= ($generated@@54 ($generated@@48 $generated@@65 $generated@@66)) $generated@@66)
 :pattern ( ($generated@@48 $generated@@65 $generated@@66))
))) (forall (($generated@@67 T@U) ($generated@@68 T@U) ) (! (let (($generated@@69 ($generated@@54 (type $generated@@67))))
(= (type ($generated@@52 $generated@@67 $generated@@68)) $generated@@69))
 :pattern ( ($generated@@52 $generated@@67 $generated@@68))
))) (forall (($generated@@70 T@U) ($generated@@71 T@U) ($generated@@72 T@U) ) (! (let (($generated@@73 (type $generated@@72)))
(let (($generated@@74 (type $generated@@71)))
(= (type ($generated@@55 $generated@@70 $generated@@71 $generated@@72)) ($generated@@48 $generated@@74 $generated@@73))))
 :pattern ( ($generated@@55 $generated@@70 $generated@@71 $generated@@72))
))) (forall (($generated@@75 T@U) ($generated@@76 T@U) ($generated@@77 T@U) ) (! (let (($generated@@78 ($generated@@54 (type $generated@@75))))
 (=> (= (type $generated@@77) $generated@@78) (= ($generated@@52 ($generated@@55 $generated@@75 $generated@@76 $generated@@77) $generated@@76) $generated@@77)))
 :weight 0
))) (and (forall (($generated@@79 T@U) ($generated@@80 T@U) ($generated@@81 T@U) ($generated@@82 T@U) ) (!  (or (= $generated@@81 $generated@@82) (= ($generated@@52 ($generated@@55 $generated@@80 $generated@@81 $generated@@79) $generated@@82) ($generated@@52 $generated@@80 $generated@@82)))
 :weight 0
)) (forall (($generated@@83 T@U) ($generated@@84 T@U) ($generated@@85 T@U) ($generated@@86 T@U) ) (!  (or true (= ($generated@@52 ($generated@@55 $generated@@84 $generated@@85 $generated@@83) $generated@@86) ($generated@@52 $generated@@84 $generated@@86)))
 :weight 0
)))) (forall (($generated@@87 T@T) ) (= ($generated@@1 ($generated@@50 $generated@@87)) 7))) (forall (($generated@@88 T@T) ) (! (= ($generated@@46 ($generated@@50 $generated@@88)) $generated@@88)
 :pattern ( ($generated@@50 $generated@@88))
))) (forall (($generated@@89 T@U) ($generated@@90 T@U) ) (! (let (($generated@@91 ($generated@@46 (type $generated@@90))))
(= (type ($generated@@51 $generated@@89 $generated@@90)) $generated@@91))
 :pattern ( ($generated@@51 $generated@@89 $generated@@90))
))) (= ($generated@@1 $generated@@49) 8)) (forall (($generated@@92 T@U) ($generated@@93 T@U) ($generated@@94 T@U) ) (! (= (type ($generated@@56 $generated@@92 $generated@@93 $generated@@94)) $generated@@49)
 :pattern ( ($generated@@56 $generated@@92 $generated@@93 $generated@@94))
))) (forall (($generated@@95 T@U) ($generated@@96 T@U) ($generated@@97 T@U) ) (! (let (($generated@@98 ($generated@@46 (type $generated@@96))))
 (=> (= (type $generated@@97) $generated@@98) (= ($generated@@51 ($generated@@56 $generated@@95 $generated@@96 $generated@@97) $generated@@96) $generated@@97)))
 :weight 0
))) (and (forall (($generated@@99 T@U) ($generated@@100 T@U) ($generated@@101 T@U) ($generated@@102 T@U) ) (!  (or (= $generated@@101 $generated@@102) (= ($generated@@51 ($generated@@56 $generated@@100 $generated@@101 $generated@@99) $generated@@102) ($generated@@51 $generated@@100 $generated@@102)))
 :weight 0
)) (forall (($generated@@103 T@U) ($generated@@104 T@U) ($generated@@105 T@U) ($generated@@106 T@U) ) (!  (or true (= ($generated@@51 ($generated@@56 $generated@@104 $generated@@105 $generated@@103) $generated@@106) ($generated@@51 $generated@@104 $generated@@106)))
 :weight 0
)))) (= ($generated@@1 $generated@@47) 9)) (forall (($generated@@107 T@T) ($generated@@108 T@T) ) (= ($generated@@1 ($generated@@57 $generated@@107 $generated@@108)) 10))) (forall (($generated@@109 T@T) ($generated@@110 T@T) ) (! (= ($generated@@58 ($generated@@57 $generated@@109 $generated@@110)) $generated@@109)
 :pattern ( ($generated@@57 $generated@@109 $generated@@110))
))) (forall (($generated@@111 T@T) ($generated@@112 T@T) ) (! (= ($generated@@59 ($generated@@57 $generated@@111 $generated@@112)) $generated@@112)
 :pattern ( ($generated@@57 $generated@@111 $generated@@112))
))) (forall (($generated@@113 T@U) ($generated@@114 T@U) ($generated@@115 T@U) ) (! (let (($generated@@116 ($generated@@59 (type $generated@@113))))
(= (type ($generated@@44 $generated@@113 $generated@@114 $generated@@115)) $generated@@116))
 :pattern ( ($generated@@44 $generated@@113 $generated@@114 $generated@@115))
))) (forall (($generated@@117 T@U) ($generated@@118 T@U) ($generated@@119 T@U) ($generated@@120 T@U) ) (! (let (($generated@@121 (type $generated@@120)))
(let (($generated@@122 (type $generated@@118)))
(= (type ($generated@@60 $generated@@117 $generated@@118 $generated@@119 $generated@@120)) ($generated@@57 $generated@@122 $generated@@121))))
 :pattern ( ($generated@@60 $generated@@117 $generated@@118 $generated@@119 $generated@@120))
))) (forall (($generated@@123 T@U) ($generated@@124 T@U) ($generated@@125 T@U) ($generated@@126 T@U) ) (! (let (($generated@@127 ($generated@@59 (type $generated@@123))))
 (=> (= (type $generated@@126) $generated@@127) (= ($generated@@44 ($generated@@60 $generated@@123 $generated@@124 $generated@@125 $generated@@126) $generated@@124 $generated@@125) $generated@@126)))
 :weight 0
))) (and (and (forall (($generated@@128 T@U) ($generated@@129 T@U) ($generated@@130 T@U) ($generated@@131 T@U) ($generated@@132 T@U) ($generated@@133 T@U) ) (!  (or (= $generated@@130 $generated@@132) (= ($generated@@44 ($generated@@60 $generated@@129 $generated@@130 $generated@@131 $generated@@128) $generated@@132 $generated@@133) ($generated@@44 $generated@@129 $generated@@132 $generated@@133)))
 :weight 0
)) (forall (($generated@@134 T@U) ($generated@@135 T@U) ($generated@@136 T@U) ($generated@@137 T@U) ($generated@@138 T@U) ($generated@@139 T@U) ) (!  (or (= $generated@@137 $generated@@139) (= ($generated@@44 ($generated@@60 $generated@@135 $generated@@136 $generated@@137 $generated@@134) $generated@@138 $generated@@139) ($generated@@44 $generated@@135 $generated@@138 $generated@@139)))
 :weight 0
))) (forall (($generated@@140 T@U) ($generated@@141 T@U) ($generated@@142 T@U) ($generated@@143 T@U) ($generated@@144 T@U) ($generated@@145 T@U) ) (!  (or true (= ($generated@@44 ($generated@@60 $generated@@141 $generated@@142 $generated@@143 $generated@@140) $generated@@144 $generated@@145) ($generated@@44 $generated@@141 $generated@@144 $generated@@145)))
 :weight 0
)))) (forall (($generated@@146 T@U) ($generated@@147 T@U) ($generated@@148 T@U) ($generated@@149 Bool) ) (! (= (type ($generated@@45 $generated@@146 $generated@@147 $generated@@148 $generated@@149)) ($generated@@57 $generated@@47 $generated@@4))
 :pattern ( ($generated@@45 $generated@@146 $generated@@147 $generated@@148 $generated@@149))
))))
(assert (forall (($generated@@150 T@U) ($generated@@151 T@U) ($generated@@152 T@U) ($generated@@153 Bool) ($generated@@154 T@U) ($generated@@155 T@U) ) (! (let (($generated@@156 ($generated@@46 (type $generated@@155))))
 (=> (and (and (and (and (= (type $generated@@150) $generated@@47) (= (type $generated@@151) ($generated@@48 $generated@@47 $generated@@49))) (= (type $generated@@152) ($generated@@50 $generated@@4))) (= (type $generated@@154) $generated@@47)) (= (type $generated@@155) ($generated@@50 $generated@@156))) (= ($generated@@0 ($generated@@44 ($generated@@45 $generated@@150 $generated@@151 $generated@@152 $generated@@153) $generated@@154 $generated@@155))  (=> (and (not (= $generated@@154 $generated@@150)) ($generated@@0 ($generated@@51 ($generated@@52 $generated@@151 $generated@@154) $generated@@152))) $generated@@153))))
 :pattern ( ($generated@@44 ($generated@@45 $generated@@150 $generated@@151 $generated@@152 $generated@@153) $generated@@154 $generated@@155))
)))
(assert (forall (($generated@@158 Int) ) (! (= ($generated@@157 $generated@@158) $generated@@158)
 :pattern ( ($generated@@157 $generated@@158))
)))
(assert (forall (($generated@@160 T@U) ) (! (let (($generated@@161 (type $generated@@160)))
(= (type ($generated@@159 $generated@@160)) $generated@@161))
 :pattern ( ($generated@@159 $generated@@160))
)))
(assert (forall (($generated@@162 T@U) ) (! (= ($generated@@159 $generated@@162) $generated@@162)
 :pattern ( ($generated@@159 $generated@@162))
)))
(assert  (and (and (= ($generated@@1 $generated@@165) 11) (forall (($generated@@166 T@U) ) (! (= (type ($generated@@163 $generated@@166)) $generated@@165)
 :pattern ( ($generated@@163 $generated@@166))
))) (forall (($generated@@167 T@T) ($generated@@168 T@U) ) (! (= (type ($generated@@164 $generated@@167 $generated@@168)) $generated@@167)
 :pattern ( ($generated@@164 $generated@@167 $generated@@168))
))))
(assert (forall (($generated@@169 T@U) ) (! (let (($generated@@170 (type $generated@@169)))
(= ($generated@@164 $generated@@170 ($generated@@163 $generated@@169)) $generated@@169))
 :pattern ( ($generated@@163 $generated@@169))
)))
(assert (forall (($generated@@171 Int) ) (! (= ($generated@@163 ($generated@@8 ($generated@@157 $generated@@171))) ($generated@@159 ($generated@@163 ($generated@@8 $generated@@171))))
 :pattern ( ($generated@@163 ($generated@@8 ($generated@@157 $generated@@171))))
)))
(assert (forall (($generated@@172 T@U) ) (! (= ($generated@@163 ($generated@@159 $generated@@172)) ($generated@@159 ($generated@@163 $generated@@172)))
 :pattern ( ($generated@@163 ($generated@@159 $generated@@172)))
)))
(push 1)
(declare-fun ControlFlow (Int Int) Int)
(declare-fun $generated@@173 () Int)
(declare-fun $generated@@174 () T@U)
(declare-fun $generated@@175 () T@U)
(declare-fun $generated@@176 () T@U)
(declare-fun $generated@@177 () T@U)
(declare-fun $generated@@178 (T@U) Bool)
(declare-fun $generated@@179 (T@U) Bool)
(declare-fun $generated@@180 () Int)
(assert  (and (and (and (= (type $generated@@174) ($generated@@57 $generated@@47 $generated@@4)) (= (type $generated@@175) $generated@@47)) (= (type $generated@@176) ($generated@@48 $generated@@47 $generated@@49))) (= (type $generated@@177) ($generated@@50 $generated@@4))))
(set-option :timeout 0)
(set-option :rlimit 0)
(assert (not
 (=> (= (ControlFlow 0 0) 8) (let (($generated@@181 true))
(let (($generated@@182  (=> (and (< $generated@@173 ($generated@@157 0)) (= (ControlFlow 0 6) 4)) $generated@@181)))
(let (($generated@@183  (=> (and (<= ($generated@@157 0) $generated@@173) (= (ControlFlow 0 5) 4)) $generated@@181)))
(let (($generated@@184  (and (=> (= (ControlFlow 0 2) (- 0 3)) (<= ($generated@@157 0) ($generated@@157 0))) (=> (= (ControlFlow 0 2) (- 0 1)) ($generated@@0 ($generated@@159 ($generated@@11 (< 0 100))))))))
(let (($generated@@185  (=> (= $generated@@174 ($generated@@45 $generated@@175 $generated@@176 $generated@@177 false)) (and (and (=> (= (ControlFlow 0 7) 2) $generated@@184) (=> (= (ControlFlow 0 7) 5) $generated@@183)) (=> (= (ControlFlow 0 7) 6) $generated@@182)))))
(let (($generated@@186  (=> (and (and ($generated@@178 $generated@@176) ($generated@@179 $generated@@176)) (and (= 0 $generated@@180) (= (ControlFlow 0 8) 7))) $generated@@185)))
$generated@@186)))))))
))
(check-sat)
(pop 1)
; Valid
(get-info :rlimit)
(reset)
(set-option :rlimit 0)
; did a full reset
(reset)
(set-option :print-success false)
(set-info :smt-lib-version 2.6)
(set-option :auto_config false)
(set-option :type_check true)
(set-option :smt.case_split 3)
(set-option :smt.qi.eager_threshold 100)
(set-option :smt.delay_units true)
(set-option :smt.arith.solver 2)
(set-option :smt.mbqi false)
(set-option :model.compact false)
(set-option :model.v2 true)
(set-option :pp.bv_literals false)
; done setting options


(set-info :category "industrial")
(declare-sort |T@U| 0)
(declare-sort |T@T| 0)
(declare-fun real_pow (Real Real) Real)
(declare-fun UOrdering2 (|T@U| |T@U|) Bool)
(declare-fun UOrdering3 (|T@T| |T@U| |T@U|) Bool)
(declare-fun tickleBool (Bool) Bool)
(assert (and (tickleBool true) (tickleBool false)))
(declare-fun $generated (T@U) Int)
(declare-fun $generated@@0 (T@U) Bool)
(declare-fun $generated@@1 (T@T) Int)
(declare-fun $generated@@2 () T@T)
(declare-fun $generated@@3 () T@T)
(declare-fun $generated@@4 () T@T)
(declare-fun $generated@@5 () T@T)
(declare-fun $generated@@6 () T@T)
(declare-fun $generated@@7 () T@T)
(declare-fun $generated@@8 (Int) T@U)
(declare-fun type (T@U) T@T)
(declare-fun $generated@@9 (Real) T@U)
(declare-fun $generated@@10 (T@U) Real)
(declare-fun $generated@@11 (Bool) T@U)
(declare-fun $generated@@12 (RoundingMode) T@U)
(declare-fun $generated@@13 (T@U) RoundingMode)
(declare-fun $generated@@14 (String) T@U)
(declare-fun $generated@@15 (T@U) String)
(declare-fun $generated@@16 ((RegEx String)) T@U)
(declare-fun $generated@@17 (T@U) (RegEx String))
(declare-fun $generated@@44 (T@U T@U T@U) T@U)
(declare-fun $generated@@45 (T@U T@U T@U Bool) T@U)
(declare-fun $generated@@46 (T@T) T@T)
(declare-fun $generated@@47 () T@T)
(declare-fun $generated@@48 (T@T T@T) T@T)
(declare-fun $generated@@49 () T@T)
(declare-fun $generated@@50 (T@T) T@T)
(declare-fun $generated@@51 (T@U T@U) T@U)
(declare-fun $generated@@52 (T@U T@U) T@U)
(declare-fun $generated@@53 (T@T) T@T)
(declare-fun $generated@@54 (T@T) T@T)
(declare-fun $generated@@55 (T@U T@U T@U) T@U)
(declare-fun $generated@@56 (T@U T@U T@U) T@U)
(declare-fun $generated@@57 (T@T T@T) T@T)
(declare-fun $generated@@58 (T@T) T@T)
(declare-fun $generated@@59 (T@T) T@T)
(declare-fun $generated@@60 (T@U T@U T@U T@U) T@U)
(declare-fun $generated@@157 (Int) Int)
(declare-fun $generated@@159 (T@U) T@U)
(declare-fun $generated@@163 (T@U) T@U)
(declare-fun $generated@@164 (T@T T@U) T@U)
(declare-fun $generated@@165 () T@T)
(assert  (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (= ($generated@@1 $generated@@2) 0) (= ($generated@@1 $generated@@3) 1)) (= ($generated@@1 $generated@@4) 2)) (= ($generated@@1 $generated@@5) 3)) (= ($generated@@1 $generated@@6) 4)) (= ($generated@@1 $generated@@7) 5)) (forall (($generated@@18 Int) ) (! (= ($generated ($generated@@8 $generated@@18)) $generated@@18)
 :pattern ( ($generated@@8 $generated@@18))
))) (forall (($generated@@19 T@U) ) (!  (=> (= (type $generated@@19) $generated@@2) (= ($generated@@8 ($generated $generated@@19)) $generated@@19))
 :pattern ( ($generated $generated@@19))
))) (forall (($generated@@20 Int) ) (! (= (type ($generated@@8 $generated@@20)) $generated@@2)
 :pattern ( ($generated@@8 $generated@@20))
))) (forall (($generated@@21 Real) ) (! (= ($generated@@10 ($generated@@9 $generated@@21)) $generated@@21)
 :pattern ( ($generated@@9 $generated@@21))
))) (forall (($generated@@22 T@U) ) (!  (=> (= (type $generated@@22) $generated@@3) (= ($generated@@9 ($generated@@10 $generated@@22)) $generated@@22))
 :pattern ( ($generated@@10 $generated@@22))
))) (forall (($generated@@23 Real) ) (! (= (type ($generated@@9 $generated@@23)) $generated@@3)
 :pattern ( ($generated@@9 $generated@@23))
))) (forall (($generated@@24 Bool) ) (! (= ($generated@@0 ($generated@@11 $generated@@24)) $generated@@24)
 :pattern ( ($generated@@11 $generated@@24))
))) (forall (($generated@@25 T@U) ) (!  (=> (= (type $generated@@25) $generated@@4) (= ($generated@@11 ($generated@@0 $generated@@25)) $generated@@25))
 :pattern ( ($generated@@0 $generated@@25))
))) (forall (($generated@@26 Bool) ) (! (= (type ($generated@@11 $generated@@26)) $generated@@4)
 :pattern ( ($generated@@11 $generated@@26))
))) (forall (($generated@@27 RoundingMode) ) (! (= ($generated@@13 ($generated@@12 $generated@@27)) $generated@@27)
 :pattern ( ($generated@@12 $generated@@27))
))) (forall (($generated@@28 T@U) ) (!  (=> (= (type $generated@@28) $generated@@5) (= ($generated@@12 ($generated@@13 $generated@@28)) $generated@@28))
 :pattern ( ($generated@@13 $generated@@28))
))) (forall (($generated@@29 RoundingMode) ) (! (= (type ($generated@@12 $generated@@29)) $generated@@5)
 :pattern ( ($generated@@12 $generated@@29))
))) (forall (($generated@@30 String) ) (! (= ($generated@@15 ($generated@@14 $generated@@30)) $generated@@30)
 :pattern ( ($generated@@14 $generated@@30))
))) (forall (($generated@@31 T@U) ) (!  (=> (= (type $generated@@31) $generated@@6) (= ($generated@@14 ($generated@@15 $generated@@31)) $generated@@31))
 :pattern ( ($generated@@15 $generated@@31))
))) (forall (($generated@@32 String) ) (! (= (type ($generated@@14 $generated@@32)) $generated@@6)
 :pattern ( ($generated@@14 $generated@@32))
))) (forall (($generated@@33 (RegEx String)) ) (! (= ($generated@@17 ($generated@@16 $generated@@33)) $generated@@33)
 :pattern ( ($generated@@16 $generated@@33))
))) (forall (($generated@@34 T@U) ) (!  (=> (= (type $generated@@34) $generated@@7) (= ($generated@@16 ($generated@@17 $generated@@34)) $generated@@34))
 :pattern ( ($generated@@17 $generated@@34))
))) (forall (($generated@@35 (RegEx String)) ) (! (= (type ($generated@@16 $generated@@35)) $generated@@7)
 :pattern ( ($generated@@16 $generated@@35))
))))
(assert (forall (($generated@@36 T@U) ) (! (UOrdering2 $generated@@36 $generated@@36)
 :no-pattern ($generated $generated@@36)
 :no-pattern ($generated@@0 $generated@@36)
)))
(assert (forall (($generated@@37 T@U) ($generated@@38 T@U) ($generated@@39 T@U) ) (! (let (($generated@@40 (type $generated@@37)))
 (=> (and (and (= (type $generated@@38) $generated@@40) (= (type $generated@@39) $generated@@40)) (and (UOrdering2 $generated@@37 $generated@@38) (UOrdering2 $generated@@38 $generated@@39))) (UOrdering2 $generated@@37 $generated@@39)))
 :pattern ( (UOrdering2 $generated@@37 $generated@@38) (UOrdering2 $generated@@38 $generated@@39))
)))
(assert (forall (($generated@@41 T@U) ($generated@@42 T@U) ) (! (let (($generated@@43 (type $generated@@41)))
 (=> (= (type $generated@@42) $generated@@43) (=> (and (UOrdering2 $generated@@41 $generated@@42) (UOrdering2 $generated@@42 $generated@@41)) (= $generated@@41 $generated@@42))))
 :pattern ( (UOrdering2 $generated@@41 $generated@@42) (UOrdering2 $generated@@42 $generated@@41))
)))
(assert  (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (forall (($generated@@61 T@T) ($generated@@62 T@T) ) (= ($generated@@1 ($generated@@48 $generated@@61 $generated@@62)) 6)) (forall (($generated@@63 T@T) ($generated@@64 T@T) ) (! (= ($generated@@53 ($generated@@48 $generated@@63 $generated@@64)) $generated@@63)
 :pattern ( ($generated@@48 $generated@@63 $generated@@64))
))) (forall (($generated@@65 T@T) ($generated@@66 T@T) ) (! (= ($generated@@54 ($generated@@48 $generated@@65 $generated@@66)) $generated@@66)
 :pattern ( ($generated@@48 $generated@@65 $generated@@66))
))) (forall (($generated@@67 T@U) ($generated@@68 T@U) ) (! (let (($generated@@69 ($generated@@54 (type $generated@@67))))
(= (type ($generated@@52 $generated@@67 $generated@@68)) $generated@@69))
 :pattern ( ($generated@@52 $generated@@67 $generated@@68))
))) (forall (($generated@@70 T@U) ($generated@@71 T@U) ($generated@@72 T@U) ) (! (let (($generated@@73 (type $generated@@72)))
(let (($generated@@74 (type $generated@@71)))
(= (type ($generated@@55 $generated@@70 $generated@@71 $generated@@72)) ($generated@@48 $generated@@74 $generated@@73))))
 :pattern ( ($generated@@55 $generated@@70 $generated@@71 $generated@@72))
))) (forall (($generated@@75 T@U) ($generated@@76 T@U) ($generated@@77 T@U) ) (! (let (($generated@@78 ($generated@@54 (type $generated@@75))))
 (=> (= (type $generated@@77) $generated@@78) (= ($generated@@52 ($generated@@55 $generated@@75 $generated@@76 $generated@@77) $generated@@76) $generated@@77)))
 :weight 0
))) (and (forall (($generated@@79 T@U) ($generated@@80 T@U) ($generated@@81 T@U) ($generated@@82 T@U) ) (!  (or (= $generated@@81 $generated@@82) (= ($generated@@52 ($generated@@55 $generated@@80 $generated@@81 $generated@@79) $generated@@82) ($generated@@52 $generated@@80 $generated@@82)))
 :weight 0
)) (forall (($generated@@83 T@U) ($generated@@84 T@U) ($generated@@85 T@U) ($generated@@86 T@U) ) (!  (or true (= ($generated@@52 ($generated@@55 $generated@@84 $generated@@85 $generated@@83) $generated@@86) ($generated@@52 $generated@@84 $generated@@86)))
 :weight 0
)))) (forall (($generated@@87 T@T) ) (= ($generated@@1 ($generated@@50 $generated@@87)) 7))) (forall (($generated@@88 T@T) ) (! (= ($generated@@46 ($generated@@50 $generated@@88)) $generated@@88)
 :pattern ( ($generated@@50 $generated@@88))
))) (forall (($generated@@89 T@U) ($generated@@90 T@U) ) (! (let (($generated@@91 ($generated@@46 (type $generated@@90))))
(= (type ($generated@@51 $generated@@89 $generated@@90)) $generated@@91))
 :pattern ( ($generated@@51 $generated@@89 $generated@@90))
))) (= ($generated@@1 $generated@@49) 8)) (forall (($generated@@92 T@U) ($generated@@93 T@U) ($generated@@94 T@U) ) (! (= (type ($generated@@56 $generated@@92 $generated@@93 $generated@@94)) $generated@@49)
 :pattern ( ($generated@@56 $generated@@92 $generated@@93 $generated@@94))
))) (forall (($generated@@95 T@U) ($generated@@96 T@U) ($generated@@97 T@U) ) (! (let (($generated@@98 ($generated@@46 (type $generated@@96))))
 (=> (= (type $generated@@97) $generated@@98) (= ($generated@@51 ($generated@@56 $generated@@95 $generated@@96 $generated@@97) $generated@@96) $generated@@97)))
 :weight 0
))) (and (forall (($generated@@99 T@U) ($generated@@100 T@U) ($generated@@101 T@U) ($generated@@102 T@U) ) (!  (or (= $generated@@101 $generated@@102) (= ($generated@@51 ($generated@@56 $generated@@100 $generated@@101 $generated@@99) $generated@@102) ($generated@@51 $generated@@100 $generated@@102)))
 :weight 0
)) (forall (($generated@@103 T@U) ($generated@@104 T@U) ($generated@@105 T@U) ($generated@@106 T@U) ) (!  (or true (= ($generated@@51 ($generated@@56 $generated@@104 $generated@@105 $generated@@103) $generated@@106) ($generated@@51 $generated@@104 $generated@@106)))
 :weight 0
)))) (= ($generated@@1 $generated@@47) 9)) (forall (($generated@@107 T@T) ($generated@@108 T@T) ) (= ($generated@@1 ($generated@@57 $generated@@107 $generated@@108)) 10))) (forall (($generated@@109 T@T) ($generated@@110 T@T) ) (! (= ($generated@@58 ($generated@@57 $generated@@109 $generated@@110)) $generated@@109)
 :pattern ( ($generated@@57 $generated@@109 $generated@@110))
))) (forall (($generated@@111 T@T) ($generated@@112 T@T) ) (! (= ($generated@@59 ($generated@@57 $generated@@111 $generated@@112)) $generated@@112)
 :pattern ( ($generated@@57 $generated@@111 $generated@@112))
))) (forall (($generated@@113 T@U) ($generated@@114 T@U) ($generated@@115 T@U) ) (! (let (($generated@@116 ($generated@@59 (type $generated@@113))))
(= (type ($generated@@44 $generated@@113 $generated@@114 $generated@@115)) $generated@@116))
 :pattern ( ($generated@@44 $generated@@113 $generated@@114 $generated@@115))
))) (forall (($generated@@117 T@U) ($generated@@118 T@U) ($generated@@119 T@U) ($generated@@120 T@U) ) (! (let (($generated@@121 (type $generated@@120)))
(let (($generated@@122 (type $generated@@118)))
(= (type ($generated@@60 $generated@@117 $generated@@118 $generated@@119 $generated@@120)) ($generated@@57 $generated@@122 $generated@@121))))
 :pattern ( ($generated@@60 $generated@@117 $generated@@118 $generated@@119 $generated@@120))
))) (forall (($generated@@123 T@U) ($generated@@124 T@U) ($generated@@125 T@U) ($generated@@126 T@U) ) (! (let (($generated@@127 ($generated@@59 (type $generated@@123))))
 (=> (= (type $generated@@126) $generated@@127) (= ($generated@@44 ($generated@@60 $generated@@123 $generated@@124 $generated@@125 $generated@@126) $generated@@124 $generated@@125) $generated@@126)))
 :weight 0
))) (and (and (forall (($generated@@128 T@U) ($generated@@129 T@U) ($generated@@130 T@U) ($generated@@131 T@U) ($generated@@132 T@U) ($generated@@133 T@U) ) (!  (or (= $generated@@130 $generated@@132) (= ($generated@@44 ($generated@@60 $generated@@129 $generated@@130 $generated@@131 $generated@@128) $generated@@132 $generated@@133) ($generated@@44 $generated@@129 $generated@@132 $generated@@133)))
 :weight 0
)) (forall (($generated@@134 T@U) ($generated@@135 T@U) ($generated@@136 T@U) ($generated@@137 T@U) ($generated@@138 T@U) ($generated@@139 T@U) ) (!  (or (= $generated@@137 $generated@@139) (= ($generated@@44 ($generated@@60 $generated@@135 $generated@@136 $generated@@137 $generated@@134) $generated@@138 $generated@@139) ($generated@@44 $generated@@135 $generated@@138 $generated@@139)))
 :weight 0
))) (forall (($generated@@140 T@U) ($generated@@141 T@U) ($generated@@142 T@U) ($generated@@143 T@U) ($generated@@144 T@U) ($generated@@145 T@U) ) (!  (or true (= ($generated@@44 ($generated@@60 $generated@@141 $generated@@142 $generated@@143 $generated@@140) $generated@@144 $generated@@145) ($generated@@44 $generated@@141 $generated@@144 $generated@@145)))
 :weight 0
)))) (forall (($generated@@146 T@U) ($generated@@147 T@U) ($generated@@148 T@U) ($generated@@149 Bool) ) (! (= (type ($generated@@45 $generated@@146 $generated@@147 $generated@@148 $generated@@149)) ($generated@@57 $generated@@47 $generated@@4))
 :pattern ( ($generated@@45 $generated@@146 $generated@@147 $generated@@148 $generated@@149))
))))
(assert (forall (($generated@@150 T@U) ($generated@@151 T@U) ($generated@@152 T@U) ($generated@@153 Bool) ($generated@@154 T@U) ($generated@@155 T@U) ) (! (let (($generated@@156 ($generated@@46 (type $generated@@155))))
 (=> (and (and (and (and (= (type $generated@@150) $generated@@47) (= (type $generated@@151) ($generated@@48 $generated@@47 $generated@@49))) (= (type $generated@@152) ($generated@@50 $generated@@4))) (= (type $generated@@154) $generated@@47)) (= (type $generated@@155) ($generated@@50 $generated@@156))) (= ($generated@@0 ($generated@@44 ($generated@@45 $generated@@150 $generated@@151 $generated@@152 $generated@@153) $generated@@154 $generated@@155))  (=> (and (not (= $generated@@154 $generated@@150)) ($generated@@0 ($generated@@51 ($generated@@52 $generated@@151 $generated@@154) $generated@@152))) $generated@@153))))
 :pattern ( ($generated@@44 ($generated@@45 $generated@@150 $generated@@151 $generated@@152 $generated@@153) $generated@@154 $generated@@155))
)))
(assert (forall (($generated@@158 Int) ) (! (= ($generated@@157 $generated@@158) $generated@@158)
 :pattern ( ($generated@@157 $generated@@158))
)))
(assert (forall (($generated@@160 T@U) ) (! (let (($generated@@161 (type $generated@@160)))
(= (type ($generated@@159 $generated@@160)) $generated@@161))
 :pattern ( ($generated@@159 $generated@@160))
)))
(assert (forall (($generated@@162 T@U) ) (! (= ($generated@@159 $generated@@162) $generated@@162)
 :pattern ( ($generated@@159 $generated@@162))
)))
(assert  (and (and (= ($generated@@1 $generated@@165) 11) (forall (($generated@@166 T@U) ) (! (= (type ($generated@@163 $generated@@166)) $generated@@165)
 :pattern ( ($generated@@163 $generated@@166))
))) (forall (($generated@@167 T@T) ($generated@@168 T@U) ) (! (= (type ($generated@@164 $generated@@167 $generated@@168)) $generated@@167)
 :pattern ( ($generated@@164 $generated@@167 $generated@@168))
))))
(assert (forall (($generated@@169 T@U) ) (! (let (($generated@@170 (type $generated@@169)))
(= ($generated@@164 $generated@@170 ($generated@@163 $generated@@169)) $generated@@169))
 :pattern ( ($generated@@163 $generated@@169))
)))
(assert (forall (($generated@@171 Int) ) (! (= ($generated@@163 ($generated@@8 ($generated@@157 $generated@@171))) ($generated@@159 ($generated@@163 ($generated@@8 $generated@@171))))
 :pattern ( ($generated@@163 ($generated@@8 ($generated@@157 $generated@@171))))
)))
(assert (forall (($generated@@172 T@U) ) (! (= ($generated@@163 ($generated@@159 $generated@@172)) ($generated@@159 ($generated@@163 $generated@@172)))
 :pattern ( ($generated@@163 ($generated@@159 $generated@@172)))
)))
(push 1)
(declare-fun ControlFlow (Int Int) Int)
(declare-fun $generated@@173 () Int)
(declare-fun $generated@@174 () T@U)
(declare-fun $generated@@175 () T@U)
(declare-fun $generated@@176 () T@U)
(declare-fun $generated@@177 () T@U)
(declare-fun $generated@@178 (T@U) Bool)
(declare-fun $generated@@179 (T@U) Bool)
(declare-fun $generated@@180 () Int)
(assert  (and (and (and (= (type $generated@@174) ($generated@@57 $generated@@47 $generated@@4)) (= (type $generated@@175) $generated@@47)) (= (type $generated@@176) ($generated@@48 $generated@@47 $generated@@49))) (= (type $generated@@177) ($generated@@50 $generated@@4))))
(set-option :timeout 0)
(set-option :rlimit 0)
(assert (not
 (=> (= (ControlFlow 0 0) 8) (let (($generated@@181 true))
(let (($generated@@182  (=> (and (< $generated@@173 ($generated@@157 0)) (= (ControlFlow 0 6) 4)) $generated@@181)))
(let (($generated@@183  (=> (and (<= ($generated@@157 0) $generated@@173) (= (ControlFlow 0 5) 4)) $generated@@181)))
(let (($generated@@184  (and (=> (= (ControlFlow 0 2) (- 0 3)) (<= ($generated@@157 0) ($generated@@157 0))) (=> (= (ControlFlow 0 2) (- 0 1)) ($generated@@0 ($generated@@159 ($generated@@11 (< 0 100))))))))
(let (($generated@@185  (=> (= $generated@@174 ($generated@@45 $generated@@175 $generated@@176 $generated@@177 false)) (and (and (=> (= (ControlFlow 0 7) 2) $generated@@184) (=> (= (ControlFlow 0 7) 5) $generated@@183)) (=> (= (ControlFlow 0 7) 6) $generated@@182)))))
(let (($generated@@186  (=> (and (and ($generated@@178 $generated@@176) ($generated@@179 $generated@@176)) (and (= 0 $generated@@180) (= (ControlFlow 0 8) 7))) $generated@@185)))
$generated@@186)))))))
))
(check-sat)
(pop 1)
; Valid
(get-info :rlimit)
(reset)
(set-option :rlimit 0)
; did a full reset
(reset)
(set-option :print-success false)
(set-info :smt-lib-version 2.6)
(set-option :auto_config false)
(set-option :type_check true)
(set-option :smt.case_split 3)
(set-option :smt.qi.eager_threshold 100)
(set-option :smt.delay_units true)
(set-option :smt.arith.solver 2)
(set-option :smt.mbqi false)
(set-option :model.compact false)
(set-option :model.v2 true)
(set-option :pp.bv_literals false)
; done setting options


(set-info :category "industrial")
(declare-sort |T@U| 0)
(declare-sort |T@T| 0)
(declare-fun real_pow (Real Real) Real)
(declare-fun UOrdering2 (|T@U| |T@U|) Bool)
(declare-fun UOrdering3 (|T@T| |T@U| |T@U|) Bool)
(declare-fun tickleBool (Bool) Bool)
(assert (and (tickleBool true) (tickleBool false)))
(declare-fun $generated (T@U) Int)
(declare-fun $generated@@0 (T@U) Bool)
(declare-fun $generated@@1 (T@T) Int)
(declare-fun $generated@@2 () T@T)
(declare-fun $generated@@3 () T@T)
(declare-fun $generated@@4 () T@T)
(declare-fun $generated@@5 () T@T)
(declare-fun $generated@@6 () T@T)
(declare-fun $generated@@7 () T@T)
(declare-fun $generated@@8 (Int) T@U)
(declare-fun type (T@U) T@T)
(declare-fun $generated@@9 (Real) T@U)
(declare-fun $generated@@10 (T@U) Real)
(declare-fun $generated@@11 (Bool) T@U)
(declare-fun $generated@@12 (RoundingMode) T@U)
(declare-fun $generated@@13 (T@U) RoundingMode)
(declare-fun $generated@@14 (String) T@U)
(declare-fun $generated@@15 (T@U) String)
(declare-fun $generated@@16 ((RegEx String)) T@U)
(declare-fun $generated@@17 (T@U) (RegEx String))
(declare-fun $generated@@44 (T@U T@U T@U) T@U)
(declare-fun $generated@@45 (T@U T@U T@U Bool) T@U)
(declare-fun $generated@@46 (T@T) T@T)
(declare-fun $generated@@47 () T@T)
(declare-fun $generated@@48 (T@T T@T) T@T)
(declare-fun $generated@@49 () T@T)
(declare-fun $generated@@50 (T@T) T@T)
(declare-fun $generated@@51 (T@U T@U) T@U)
(declare-fun $generated@@52 (T@U T@U) T@U)
(declare-fun $generated@@53 (T@T) T@T)
(declare-fun $generated@@54 (T@T) T@T)
(declare-fun $generated@@55 (T@U T@U T@U) T@U)
(declare-fun $generated@@56 (T@U T@U T@U) T@U)
(declare-fun $generated@@57 (T@T T@T) T@T)
(declare-fun $generated@@58 (T@T) T@T)
(declare-fun $generated@@59 (T@T) T@T)
(declare-fun $generated@@60 (T@U T@U T@U T@U) T@U)
(declare-fun $generated@@157 (Int) Int)
(declare-fun $generated@@159 (T@U) T@U)
(declare-fun $generated@@163 (T@U) T@U)
(declare-fun $generated@@164 (T@T T@U) T@U)
(declare-fun $generated@@165 () T@T)
(assert  (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (= ($generated@@1 $generated@@2) 0) (= ($generated@@1 $generated@@3) 1)) (= ($generated@@1 $generated@@4) 2)) (= ($generated@@1 $generated@@5) 3)) (= ($generated@@1 $generated@@6) 4)) (= ($generated@@1 $generated@@7) 5)) (forall (($generated@@18 Int) ) (! (= ($generated ($generated@@8 $generated@@18)) $generated@@18)
 :pattern ( ($generated@@8 $generated@@18))
))) (forall (($generated@@19 T@U) ) (!  (=> (= (type $generated@@19) $generated@@2) (= ($generated@@8 ($generated $generated@@19)) $generated@@19))
 :pattern ( ($generated $generated@@19))
))) (forall (($generated@@20 Int) ) (! (= (type ($generated@@8 $generated@@20)) $generated@@2)
 :pattern ( ($generated@@8 $generated@@20))
))) (forall (($generated@@21 Real) ) (! (= ($generated@@10 ($generated@@9 $generated@@21)) $generated@@21)
 :pattern ( ($generated@@9 $generated@@21))
))) (forall (($generated@@22 T@U) ) (!  (=> (= (type $generated@@22) $generated@@3) (= ($generated@@9 ($generated@@10 $generated@@22)) $generated@@22))
 :pattern ( ($generated@@10 $generated@@22))
))) (forall (($generated@@23 Real) ) (! (= (type ($generated@@9 $generated@@23)) $generated@@3)
 :pattern ( ($generated@@9 $generated@@23))
))) (forall (($generated@@24 Bool) ) (! (= ($generated@@0 ($generated@@11 $generated@@24)) $generated@@24)
 :pattern ( ($generated@@11 $generated@@24))
))) (forall (($generated@@25 T@U) ) (!  (=> (= (type $generated@@25) $generated@@4) (= ($generated@@11 ($generated@@0 $generated@@25)) $generated@@25))
 :pattern ( ($generated@@0 $generated@@25))
))) (forall (($generated@@26 Bool) ) (! (= (type ($generated@@11 $generated@@26)) $generated@@4)
 :pattern ( ($generated@@11 $generated@@26))
))) (forall (($generated@@27 RoundingMode) ) (! (= ($generated@@13 ($generated@@12 $generated@@27)) $generated@@27)
 :pattern ( ($generated@@12 $generated@@27))
))) (forall (($generated@@28 T@U) ) (!  (=> (= (type $generated@@28) $generated@@5) (= ($generated@@12 ($generated@@13 $generated@@28)) $generated@@28))
 :pattern ( ($generated@@13 $generated@@28))
))) (forall (($generated@@29 RoundingMode) ) (! (= (type ($generated@@12 $generated@@29)) $generated@@5)
 :pattern ( ($generated@@12 $generated@@29))
))) (forall (($generated@@30 String) ) (! (= ($generated@@15 ($generated@@14 $generated@@30)) $generated@@30)
 :pattern ( ($generated@@14 $generated@@30))
))) (forall (($generated@@31 T@U) ) (!  (=> (= (type $generated@@31) $generated@@6) (= ($generated@@14 ($generated@@15 $generated@@31)) $generated@@31))
 :pattern ( ($generated@@15 $generated@@31))
))) (forall (($generated@@32 String) ) (! (= (type ($generated@@14 $generated@@32)) $generated@@6)
 :pattern ( ($generated@@14 $generated@@32))
))) (forall (($generated@@33 (RegEx String)) ) (! (= ($generated@@17 ($generated@@16 $generated@@33)) $generated@@33)
 :pattern ( ($generated@@16 $generated@@33))
))) (forall (($generated@@34 T@U) ) (!  (=> (= (type $generated@@34) $generated@@7) (= ($generated@@16 ($generated@@17 $generated@@34)) $generated@@34))
 :pattern ( ($generated@@17 $generated@@34))
))) (forall (($generated@@35 (RegEx String)) ) (! (= (type ($generated@@16 $generated@@35)) $generated@@7)
 :pattern ( ($generated@@16 $generated@@35))
))))
(assert (forall (($generated@@36 T@U) ) (! (UOrdering2 $generated@@36 $generated@@36)
 :no-pattern ($generated $generated@@36)
 :no-pattern ($generated@@0 $generated@@36)
)))
(assert (forall (($generated@@37 T@U) ($generated@@38 T@U) ($generated@@39 T@U) ) (! (let (($generated@@40 (type $generated@@37)))
 (=> (and (and (= (type $generated@@38) $generated@@40) (= (type $generated@@39) $generated@@40)) (and (UOrdering2 $generated@@37 $generated@@38) (UOrdering2 $generated@@38 $generated@@39))) (UOrdering2 $generated@@37 $generated@@39)))
 :pattern ( (UOrdering2 $generated@@37 $generated@@38) (UOrdering2 $generated@@38 $generated@@39))
)))
(assert (forall (($generated@@41 T@U) ($generated@@42 T@U) ) (! (let (($generated@@43 (type $generated@@41)))
 (=> (= (type $generated@@42) $generated@@43) (=> (and (UOrdering2 $generated@@41 $generated@@42) (UOrdering2 $generated@@42 $generated@@41)) (= $generated@@41 $generated@@42))))
 :pattern ( (UOrdering2 $generated@@41 $generated@@42) (UOrdering2 $generated@@42 $generated@@41))
)))
(assert  (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (forall (($generated@@61 T@T) ($generated@@62 T@T) ) (= ($generated@@1 ($generated@@48 $generated@@61 $generated@@62)) 6)) (forall (($generated@@63 T@T) ($generated@@64 T@T) ) (! (= ($generated@@53 ($generated@@48 $generated@@63 $generated@@64)) $generated@@63)
 :pattern ( ($generated@@48 $generated@@63 $generated@@64))
))) (forall (($generated@@65 T@T) ($generated@@66 T@T) ) (! (= ($generated@@54 ($generated@@48 $generated@@65 $generated@@66)) $generated@@66)
 :pattern ( ($generated@@48 $generated@@65 $generated@@66))
))) (forall (($generated@@67 T@U) ($generated@@68 T@U) ) (! (let (($generated@@69 ($generated@@54 (type $generated@@67))))
(= (type ($generated@@52 $generated@@67 $generated@@68)) $generated@@69))
 :pattern ( ($generated@@52 $generated@@67 $generated@@68))
))) (forall (($generated@@70 T@U) ($generated@@71 T@U) ($generated@@72 T@U) ) (! (let (($generated@@73 (type $generated@@72)))
(let (($generated@@74 (type $generated@@71)))
(= (type ($generated@@55 $generated@@70 $generated@@71 $generated@@72)) ($generated@@48 $generated@@74 $generated@@73))))
 :pattern ( ($generated@@55 $generated@@70 $generated@@71 $generated@@72))
))) (forall (($generated@@75 T@U) ($generated@@76 T@U) ($generated@@77 T@U) ) (! (let (($generated@@78 ($generated@@54 (type $generated@@75))))
 (=> (= (type $generated@@77) $generated@@78) (= ($generated@@52 ($generated@@55 $generated@@75 $generated@@76 $generated@@77) $generated@@76) $generated@@77)))
 :weight 0
))) (and (forall (($generated@@79 T@U) ($generated@@80 T@U) ($generated@@81 T@U) ($generated@@82 T@U) ) (!  (or (= $generated@@81 $generated@@82) (= ($generated@@52 ($generated@@55 $generated@@80 $generated@@81 $generated@@79) $generated@@82) ($generated@@52 $generated@@80 $generated@@82)))
 :weight 0
)) (forall (($generated@@83 T@U) ($generated@@84 T@U) ($generated@@85 T@U) ($generated@@86 T@U) ) (!  (or true (= ($generated@@52 ($generated@@55 $generated@@84 $generated@@85 $generated@@83) $generated@@86) ($generated@@52 $generated@@84 $generated@@86)))
 :weight 0
)))) (forall (($generated@@87 T@T) ) (= ($generated@@1 ($generated@@50 $generated@@87)) 7))) (forall (($generated@@88 T@T) ) (! (= ($generated@@46 ($generated@@50 $generated@@88)) $generated@@88)
 :pattern ( ($generated@@50 $generated@@88))
))) (forall (($generated@@89 T@U) ($generated@@90 T@U) ) (! (let (($generated@@91 ($generated@@46 (type $generated@@90))))
(= (type ($generated@@51 $generated@@89 $generated@@90)) $generated@@91))
 :pattern ( ($generated@@51 $generated@@89 $generated@@90))
))) (= ($generated@@1 $generated@@49) 8)) (forall (($generated@@92 T@U) ($generated@@93 T@U) ($generated@@94 T@U) ) (! (= (type ($generated@@56 $generated@@92 $generated@@93 $generated@@94)) $generated@@49)
 :pattern ( ($generated@@56 $generated@@92 $generated@@93 $generated@@94))
))) (forall (($generated@@95 T@U) ($generated@@96 T@U) ($generated@@97 T@U) ) (! (let (($generated@@98 ($generated@@46 (type $generated@@96))))
 (=> (= (type $generated@@97) $generated@@98) (= ($generated@@51 ($generated@@56 $generated@@95 $generated@@96 $generated@@97) $generated@@96) $generated@@97)))
 :weight 0
))) (and (forall (($generated@@99 T@U) ($generated@@100 T@U) ($generated@@101 T@U) ($generated@@102 T@U) ) (!  (or (= $generated@@101 $generated@@102) (= ($generated@@51 ($generated@@56 $generated@@100 $generated@@101 $generated@@99) $generated@@102) ($generated@@51 $generated@@100 $generated@@102)))
 :weight 0
)) (forall (($generated@@103 T@U) ($generated@@104 T@U) ($generated@@105 T@U) ($generated@@106 T@U) ) (!  (or true (= ($generated@@51 ($generated@@56 $generated@@104 $generated@@105 $generated@@103) $generated@@106) ($generated@@51 $generated@@104 $generated@@106)))
 :weight 0
)))) (= ($generated@@1 $generated@@47) 9)) (forall (($generated@@107 T@T) ($generated@@108 T@T) ) (= ($generated@@1 ($generated@@57 $generated@@107 $generated@@108)) 10))) (forall (($generated@@109 T@T) ($generated@@110 T@T) ) (! (= ($generated@@58 ($generated@@57 $generated@@109 $generated@@110)) $generated@@109)
 :pattern ( ($generated@@57 $generated@@109 $generated@@110))
))) (forall (($generated@@111 T@T) ($generated@@112 T@T) ) (! (= ($generated@@59 ($generated@@57 $generated@@111 $generated@@112)) $generated@@112)
 :pattern ( ($generated@@57 $generated@@111 $generated@@112))
))) (forall (($generated@@113 T@U) ($generated@@114 T@U) ($generated@@115 T@U) ) (! (let (($generated@@116 ($generated@@59 (type $generated@@113))))
(= (type ($generated@@44 $generated@@113 $generated@@114 $generated@@115)) $generated@@116))
 :pattern ( ($generated@@44 $generated@@113 $generated@@114 $generated@@115))
))) (forall (($generated@@117 T@U) ($generated@@118 T@U) ($generated@@119 T@U) ($generated@@120 T@U) ) (! (let (($generated@@121 (type $generated@@120)))
(let (($generated@@122 (type $generated@@118)))
(= (type ($generated@@60 $generated@@117 $generated@@118 $generated@@119 $generated@@120)) ($generated@@57 $generated@@122 $generated@@121))))
 :pattern ( ($generated@@60 $generated@@117 $generated@@118 $generated@@119 $generated@@120))
))) (forall (($generated@@123 T@U) ($generated@@124 T@U) ($generated@@125 T@U) ($generated@@126 T@U) ) (! (let (($generated@@127 ($generated@@59 (type $generated@@123))))
 (=> (= (type $generated@@126) $generated@@127) (= ($generated@@44 ($generated@@60 $generated@@123 $generated@@124 $generated@@125 $generated@@126) $generated@@124 $generated@@125) $generated@@126)))
 :weight 0
))) (and (and (forall (($generated@@128 T@U) ($generated@@129 T@U) ($generated@@130 T@U) ($generated@@131 T@U) ($generated@@132 T@U) ($generated@@133 T@U) ) (!  (or (= $generated@@130 $generated@@132) (= ($generated@@44 ($generated@@60 $generated@@129 $generated@@130 $generated@@131 $generated@@128) $generated@@132 $generated@@133) ($generated@@44 $generated@@129 $generated@@132 $generated@@133)))
 :weight 0
)) (forall (($generated@@134 T@U) ($generated@@135 T@U) ($generated@@136 T@U) ($generated@@137 T@U) ($generated@@138 T@U) ($generated@@139 T@U) ) (!  (or (= $generated@@137 $generated@@139) (= ($generated@@44 ($generated@@60 $generated@@135 $generated@@136 $generated@@137 $generated@@134) $generated@@138 $generated@@139) ($generated@@44 $generated@@135 $generated@@138 $generated@@139)))
 :weight 0
))) (forall (($generated@@140 T@U) ($generated@@141 T@U) ($generated@@142 T@U) ($generated@@143 T@U) ($generated@@144 T@U) ($generated@@145 T@U) ) (!  (or true (= ($generated@@44 ($generated@@60 $generated@@141 $generated@@142 $generated@@143 $generated@@140) $generated@@144 $generated@@145) ($generated@@44 $generated@@141 $generated@@144 $generated@@145)))
 :weight 0
)))) (forall (($generated@@146 T@U) ($generated@@147 T@U) ($generated@@148 T@U) ($generated@@149 Bool) ) (! (= (type ($generated@@45 $generated@@146 $generated@@147 $generated@@148 $generated@@149)) ($generated@@57 $generated@@47 $generated@@4))
 :pattern ( ($generated@@45 $generated@@146 $generated@@147 $generated@@148 $generated@@149))
))))
(assert (forall (($generated@@150 T@U) ($generated@@151 T@U) ($generated@@152 T@U) ($generated@@153 Bool) ($generated@@154 T@U) ($generated@@155 T@U) ) (! (let (($generated@@156 ($generated@@46 (type $generated@@155))))
 (=> (and (and (and (and (= (type $generated@@150) $generated@@47) (= (type $generated@@151) ($generated@@48 $generated@@47 $generated@@49))) (= (type $generated@@152) ($generated@@50 $generated@@4))) (= (type $generated@@154) $generated@@47)) (= (type $generated@@155) ($generated@@50 $generated@@156))) (= ($generated@@0 ($generated@@44 ($generated@@45 $generated@@150 $generated@@151 $generated@@152 $generated@@153) $generated@@154 $generated@@155))  (=> (and (not (= $generated@@154 $generated@@150)) ($generated@@0 ($generated@@51 ($generated@@52 $generated@@151 $generated@@154) $generated@@152))) $generated@@153))))
 :pattern ( ($generated@@44 ($generated@@45 $generated@@150 $generated@@151 $generated@@152 $generated@@153) $generated@@154 $generated@@155))
)))
(assert (forall (($generated@@158 Int) ) (! (= ($generated@@157 $generated@@158) $generated@@158)
 :pattern ( ($generated@@157 $generated@@158))
)))
(assert (forall (($generated@@160 T@U) ) (! (let (($generated@@161 (type $generated@@160)))
(= (type ($generated@@159 $generated@@160)) $generated@@161))
 :pattern ( ($generated@@159 $generated@@160))
)))
(assert (forall (($generated@@162 T@U) ) (! (= ($generated@@159 $generated@@162) $generated@@162)
 :pattern ( ($generated@@159 $generated@@162))
)))
(assert  (and (and (= ($generated@@1 $generated@@165) 11) (forall (($generated@@166 T@U) ) (! (= (type ($generated@@163 $generated@@166)) $generated@@165)
 :pattern ( ($generated@@163 $generated@@166))
))) (forall (($generated@@167 T@T) ($generated@@168 T@U) ) (! (= (type ($generated@@164 $generated@@167 $generated@@168)) $generated@@167)
 :pattern ( ($generated@@164 $generated@@167 $generated@@168))
))))
(assert (forall (($generated@@169 T@U) ) (! (let (($generated@@170 (type $generated@@169)))
(= ($generated@@164 $generated@@170 ($generated@@163 $generated@@169)) $generated@@169))
 :pattern ( ($generated@@163 $generated@@169))
)))
(assert (forall (($generated@@171 Int) ) (! (= ($generated@@163 ($generated@@8 ($generated@@157 $generated@@171))) ($generated@@159 ($generated@@163 ($generated@@8 $generated@@171))))
 :pattern ( ($generated@@163 ($generated@@8 ($generated@@157 $generated@@171))))
)))
(assert (forall (($generated@@172 T@U) ) (! (= ($generated@@163 ($generated@@159 $generated@@172)) ($generated@@159 ($generated@@163 $generated@@172)))
 :pattern ( ($generated@@163 ($generated@@159 $generated@@172)))
)))
(push 1)
(declare-fun ControlFlow (Int Int) Int)
(declare-fun $generated@@173 () T@U)
(declare-fun $generated@@174 () T@U)
(declare-fun $generated@@175 () T@U)
(declare-fun $generated@@176 () T@U)
(declare-fun $generated@@177 (T@U) Bool)
(declare-fun $generated@@178 (T@U) Bool)
(declare-fun $generated@@179 () Int)
(assert  (and (and (and (= (type $generated@@173) ($generated@@57 $generated@@47 $generated@@4)) (= (type $generated@@174) $generated@@47)) (= (type $generated@@175) ($generated@@48 $generated@@47 $generated@@49))) (= (type $generated@@176) ($generated@@50 $generated@@4))))
(set-option :timeout 0)
(set-option :rlimit 0)
(assert (not
 (=> (= (ControlFlow 0 0) 7) (let (($generated@@180 true))
(let (($generated@@181 true))
(let (($generated@@182 true))
(let (($generated@@183  (=> (= (ControlFlow 0 2) (- 0 1)) (or (or (= ($generated@@157 0) ($generated@@157 0)) (= ($generated@@157 0) ($generated@@157 3))) (= ($generated@@157 0) ($generated@@157 7))))))
(let (($generated@@184  (=> (= $generated@@173 ($generated@@45 $generated@@174 $generated@@175 $generated@@176 false)) (and (and (and (=> (= (ControlFlow 0 6) 2) $generated@@183) (=> (= (ControlFlow 0 6) 3) $generated@@182)) (=> (= (ControlFlow 0 6) 4) $generated@@181)) (=> (= (ControlFlow 0 6) 5) $generated@@180)))))
(let (($generated@@185  (=> (and (and ($generated@@177 $generated@@175) ($generated@@178 $generated@@175)) (and (= 0 $generated@@179) (= (ControlFlow 0 7) 6))) $generated@@184)))
$generated@@185)))))))
))
(check-sat)
(pop 1)
; Valid
(get-info :rlimit)
(reset)
(set-option :rlimit 0)
; did a full reset
(reset)
(set-option :print-success false)
(set-info :smt-lib-version 2.6)
(set-option :auto_config false)
(set-option :type_check true)
(set-option :smt.case_split 3)
(set-option :smt.qi.eager_threshold 100)
(set-option :smt.delay_units true)
(set-option :smt.arith.solver 2)
(set-option :smt.mbqi false)
(set-option :model.compact false)
(set-option :model.v2 true)
(set-option :pp.bv_literals false)
; done setting options


(set-info :category "industrial")
(declare-sort |T@U| 0)
(declare-sort |T@T| 0)
(declare-fun real_pow (Real Real) Real)
(declare-fun UOrdering2 (|T@U| |T@U|) Bool)
(declare-fun UOrdering3 (|T@T| |T@U| |T@U|) Bool)
(declare-fun tickleBool (Bool) Bool)
(assert (and (tickleBool true) (tickleBool false)))
(declare-fun $generated (T@U) Int)
(declare-fun $generated@@0 (T@U) Bool)
(declare-fun $generated@@1 (T@T) Int)
(declare-fun $generated@@2 () T@T)
(declare-fun $generated@@3 () T@T)
(declare-fun $generated@@4 () T@T)
(declare-fun $generated@@5 () T@T)
(declare-fun $generated@@6 () T@T)
(declare-fun $generated@@7 () T@T)
(declare-fun $generated@@8 (Int) T@U)
(declare-fun type (T@U) T@T)
(declare-fun $generated@@9 (Real) T@U)
(declare-fun $generated@@10 (T@U) Real)
(declare-fun $generated@@11 (Bool) T@U)
(declare-fun $generated@@12 (RoundingMode) T@U)
(declare-fun $generated@@13 (T@U) RoundingMode)
(declare-fun $generated@@14 (String) T@U)
(declare-fun $generated@@15 (T@U) String)
(declare-fun $generated@@16 ((RegEx String)) T@U)
(declare-fun $generated@@17 (T@U) (RegEx String))
(declare-fun $generated@@44 (T@U T@U) Bool)
(declare-fun $generated@@45 (T@T T@T) T@T)
(declare-fun $generated@@46 () T@T)
(declare-fun $generated@@47 () T@T)
(declare-fun $generated@@48 (T@U T@U) T@U)
(declare-fun $generated@@49 (T@U T@U) T@U)
(declare-fun $generated@@50 () T@U)
(declare-fun $generated@@51 (T@T) T@T)
(declare-fun $generated@@52 (T@T) T@T)
(declare-fun $generated@@53 (T@U T@U T@U) T@U)
(declare-fun $generated@@54 (T@T) T@T)
(declare-fun $generated@@55 (T@T) T@T)
(declare-fun $generated@@56 (T@U T@U T@U) T@U)
(declare-fun $generated@@106 (T@U T@U T@U) T@U)
(declare-fun $generated@@107 (T@U T@U T@U Bool) T@U)
(declare-fun $generated@@108 (T@T T@T) T@T)
(declare-fun $generated@@109 (T@T) T@T)
(declare-fun $generated@@110 (T@T) T@T)
(declare-fun $generated@@111 (T@U T@U T@U T@U) T@U)
(declare-fun $generated@@162 (Int) Int)
(declare-fun $generated@@164 (T@U) T@U)
(declare-fun $generated@@171 (T@U) T@U)
(declare-fun $generated@@172 (T@T T@U) T@U)
(declare-fun $generated@@173 () T@T)
(declare-fun $generated@@179 (Int Int) Int)
(assert  (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (= ($generated@@1 $generated@@2) 0) (= ($generated@@1 $generated@@3) 1)) (= ($generated@@1 $generated@@4) 2)) (= ($generated@@1 $generated@@5) 3)) (= ($generated@@1 $generated@@6) 4)) (= ($generated@@1 $generated@@7) 5)) (forall (($generated@@18 Int) ) (! (= ($generated ($generated@@8 $generated@@18)) $generated@@18)
 :pattern ( ($generated@@8 $generated@@18))
))) (forall (($generated@@19 T@U) ) (!  (=> (= (type $generated@@19) $generated@@2) (= ($generated@@8 ($generated $generated@@19)) $generated@@19))
 :pattern ( ($generated $generated@@19))
))) (forall (($generated@@20 Int) ) (! (= (type ($generated@@8 $generated@@20)) $generated@@2)
 :pattern ( ($generated@@8 $generated@@20))
))) (forall (($generated@@21 Real) ) (! (= ($generated@@10 ($generated@@9 $generated@@21)) $generated@@21)
 :pattern ( ($generated@@9 $generated@@21))
))) (forall (($generated@@22 T@U) ) (!  (=> (= (type $generated@@22) $generated@@3) (= ($generated@@9 ($generated@@10 $generated@@22)) $generated@@22))
 :pattern ( ($generated@@10 $generated@@22))
))) (forall (($generated@@23 Real) ) (! (= (type ($generated@@9 $generated@@23)) $generated@@3)
 :pattern ( ($generated@@9 $generated@@23))
))) (forall (($generated@@24 Bool) ) (! (= ($generated@@0 ($generated@@11 $generated@@24)) $generated@@24)
 :pattern ( ($generated@@11 $generated@@24))
))) (forall (($generated@@25 T@U) ) (!  (=> (= (type $generated@@25) $generated@@4) (= ($generated@@11 ($generated@@0 $generated@@25)) $generated@@25))
 :pattern ( ($generated@@0 $generated@@25))
))) (forall (($generated@@26 Bool) ) (! (= (type ($generated@@11 $generated@@26)) $generated@@4)
 :pattern ( ($generated@@11 $generated@@26))
))) (forall (($generated@@27 RoundingMode) ) (! (= ($generated@@13 ($generated@@12 $generated@@27)) $generated@@27)
 :pattern ( ($generated@@12 $generated@@27))
))) (forall (($generated@@28 T@U) ) (!  (=> (= (type $generated@@28) $generated@@5) (= ($generated@@12 ($generated@@13 $generated@@28)) $generated@@28))
 :pattern ( ($generated@@13 $generated@@28))
))) (forall (($generated@@29 RoundingMode) ) (! (= (type ($generated@@12 $generated@@29)) $generated@@5)
 :pattern ( ($generated@@12 $generated@@29))
))) (forall (($generated@@30 String) ) (! (= ($generated@@15 ($generated@@14 $generated@@30)) $generated@@30)
 :pattern ( ($generated@@14 $generated@@30))
))) (forall (($generated@@31 T@U) ) (!  (=> (= (type $generated@@31) $generated@@6) (= ($generated@@14 ($generated@@15 $generated@@31)) $generated@@31))
 :pattern ( ($generated@@15 $generated@@31))
))) (forall (($generated@@32 String) ) (! (= (type ($generated@@14 $generated@@32)) $generated@@6)
 :pattern ( ($generated@@14 $generated@@32))
))) (forall (($generated@@33 (RegEx String)) ) (! (= ($generated@@17 ($generated@@16 $generated@@33)) $generated@@33)
 :pattern ( ($generated@@16 $generated@@33))
))) (forall (($generated@@34 T@U) ) (!  (=> (= (type $generated@@34) $generated@@7) (= ($generated@@16 ($generated@@17 $generated@@34)) $generated@@34))
 :pattern ( ($generated@@17 $generated@@34))
))) (forall (($generated@@35 (RegEx String)) ) (! (= (type ($generated@@16 $generated@@35)) $generated@@7)
 :pattern ( ($generated@@16 $generated@@35))
))))
(assert (forall (($generated@@36 T@U) ) (! (UOrdering2 $generated@@36 $generated@@36)
 :no-pattern ($generated $generated@@36)
 :no-pattern ($generated@@0 $generated@@36)
)))
(assert (forall (($generated@@37 T@U) ($generated@@38 T@U) ($generated@@39 T@U) ) (! (let (($generated@@40 (type $generated@@37)))
 (=> (and (and (= (type $generated@@38) $generated@@40) (= (type $generated@@39) $generated@@40)) (and (UOrdering2 $generated@@37 $generated@@38) (UOrdering2 $generated@@38 $generated@@39))) (UOrdering2 $generated@@37 $generated@@39)))
 :pattern ( (UOrdering2 $generated@@37 $generated@@38) (UOrdering2 $generated@@38 $generated@@39))
)))
(assert (forall (($generated@@41 T@U) ($generated@@42 T@U) ) (! (let (($generated@@43 (type $generated@@41)))
 (=> (= (type $generated@@42) $generated@@43) (=> (and (UOrdering2 $generated@@41 $generated@@42) (UOrdering2 $generated@@42 $generated@@41)) (= $generated@@41 $generated@@42))))
 :pattern ( (UOrdering2 $generated@@41 $generated@@42) (UOrdering2 $generated@@42 $generated@@41))
)))
(assert  (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (forall (($generated@@57 T@T) ($generated@@58 T@T) ) (= ($generated@@1 ($generated@@45 $generated@@57 $generated@@58)) 6)) (forall (($generated@@59 T@T) ($generated@@60 T@T) ) (! (= ($generated@@51 ($generated@@45 $generated@@59 $generated@@60)) $generated@@59)
 :pattern ( ($generated@@45 $generated@@59 $generated@@60))
))) (forall (($generated@@61 T@T) ($generated@@62 T@T) ) (! (= ($generated@@52 ($generated@@45 $generated@@61 $generated@@62)) $generated@@62)
 :pattern ( ($generated@@45 $generated@@61 $generated@@62))
))) (forall (($generated@@63 T@U) ($generated@@64 T@U) ) (! (let (($generated@@65 ($generated@@52 (type $generated@@63))))
(= (type ($generated@@49 $generated@@63 $generated@@64)) $generated@@65))
 :pattern ( ($generated@@49 $generated@@63 $generated@@64))
))) (forall (($generated@@66 T@U) ($generated@@67 T@U) ($generated@@68 T@U) ) (! (let (($generated@@69 (type $generated@@68)))
(let (($generated@@70 (type $generated@@67)))
(= (type ($generated@@53 $generated@@66 $generated@@67 $generated@@68)) ($generated@@45 $generated@@70 $generated@@69))))
 :pattern ( ($generated@@53 $generated@@66 $generated@@67 $generated@@68))
))) (forall (($generated@@71 T@U) ($generated@@72 T@U) ($generated@@73 T@U) ) (! (let (($generated@@74 ($generated@@52 (type $generated@@71))))
 (=> (= (type $generated@@73) $generated@@74) (= ($generated@@49 ($generated@@53 $generated@@71 $generated@@72 $generated@@73) $generated@@72) $generated@@73)))
 :weight 0
))) (and (forall (($generated@@75 T@U) ($generated@@76 T@U) ($generated@@77 T@U) ($generated@@78 T@U) ) (!  (or (= $generated@@77 $generated@@78) (= ($generated@@49 ($generated@@53 $generated@@76 $generated@@77 $generated@@75) $generated@@78) ($generated@@49 $generated@@76 $generated@@78)))
 :weight 0
)) (forall (($generated@@79 T@U) ($generated@@80 T@U) ($generated@@81 T@U) ($generated@@82 T@U) ) (!  (or true (= ($generated@@49 ($generated@@53 $generated@@80 $generated@@81 $generated@@79) $generated@@82) ($generated@@49 $generated@@80 $generated@@82)))
 :weight 0
)))) (= ($generated@@1 $generated@@46) 7)) (forall (($generated@@83 T@T) ) (= ($generated@@1 ($generated@@54 $generated@@83)) 8))) (forall (($generated@@84 T@T) ) (! (= ($generated@@55 ($generated@@54 $generated@@84)) $generated@@84)
 :pattern ( ($generated@@54 $generated@@84))
))) (forall (($generated@@85 T@U) ($generated@@86 T@U) ) (! (let (($generated@@87 ($generated@@55 (type $generated@@86))))
(= (type ($generated@@48 $generated@@85 $generated@@86)) $generated@@87))
 :pattern ( ($generated@@48 $generated@@85 $generated@@86))
))) (= ($generated@@1 $generated@@47) 9)) (forall (($generated@@88 T@U) ($generated@@89 T@U) ($generated@@90 T@U) ) (! (= (type ($generated@@56 $generated@@88 $generated@@89 $generated@@90)) $generated@@47)
 :pattern ( ($generated@@56 $generated@@88 $generated@@89 $generated@@90))
))) (forall (($generated@@91 T@U) ($generated@@92 T@U) ($generated@@93 T@U) ) (! (let (($generated@@94 ($generated@@55 (type $generated@@92))))
 (=> (= (type $generated@@93) $generated@@94) (= ($generated@@48 ($generated@@56 $generated@@91 $generated@@92 $generated@@93) $generated@@92) $generated@@93)))
 :weight 0
))) (and (forall (($generated@@95 T@U) ($generated@@96 T@U) ($generated@@97 T@U) ($generated@@98 T@U) ) (!  (or (= $generated@@97 $generated@@98) (= ($generated@@48 ($generated@@56 $generated@@96 $generated@@97 $generated@@95) $generated@@98) ($generated@@48 $generated@@96 $generated@@98)))
 :weight 0
)) (forall (($generated@@99 T@U) ($generated@@100 T@U) ($generated@@101 T@U) ($generated@@102 T@U) ) (!  (or true (= ($generated@@48 ($generated@@56 $generated@@100 $generated@@101 $generated@@99) $generated@@102) ($generated@@48 $generated@@100 $generated@@102)))
 :weight 0
)))) (= (type $generated@@50) ($generated@@54 $generated@@4))))
(assert (forall (($generated@@103 T@U) ($generated@@104 T@U) ) (!  (=> (and (and (= (type $generated@@103) ($generated@@45 $generated@@46 $generated@@47)) (= (type $generated@@104) ($generated@@45 $generated@@46 $generated@@47))) ($generated@@44 $generated@@103 $generated@@104)) (forall (($generated@@105 T@U) ) (!  (=> (and (= (type $generated@@105) $generated@@46) ($generated@@0 ($generated@@48 ($generated@@49 $generated@@103 $generated@@105) $generated@@50))) ($generated@@0 ($generated@@48 ($generated@@49 $generated@@104 $generated@@105) $generated@@50)))
 :pattern ( ($generated@@48 ($generated@@49 $generated@@104 $generated@@105) $generated@@50))
)))
 :pattern ( ($generated@@44 $generated@@103 $generated@@104))
)))
(assert  (and (and (and (and (and (and (and (forall (($generated@@112 T@T) ($generated@@113 T@T) ) (= ($generated@@1 ($generated@@108 $generated@@112 $generated@@113)) 10)) (forall (($generated@@114 T@T) ($generated@@115 T@T) ) (! (= ($generated@@109 ($generated@@108 $generated@@114 $generated@@115)) $generated@@114)
 :pattern ( ($generated@@108 $generated@@114 $generated@@115))
))) (forall (($generated@@116 T@T) ($generated@@117 T@T) ) (! (= ($generated@@110 ($generated@@108 $generated@@116 $generated@@117)) $generated@@117)
 :pattern ( ($generated@@108 $generated@@116 $generated@@117))
))) (forall (($generated@@118 T@U) ($generated@@119 T@U) ($generated@@120 T@U) ) (! (let (($generated@@121 ($generated@@110 (type $generated@@118))))
(= (type ($generated@@106 $generated@@118 $generated@@119 $generated@@120)) $generated@@121))
 :pattern ( ($generated@@106 $generated@@118 $generated@@119 $generated@@120))
))) (forall (($generated@@122 T@U) ($generated@@123 T@U) ($generated@@124 T@U) ($generated@@125 T@U) ) (! (let (($generated@@126 (type $generated@@125)))
(let (($generated@@127 (type $generated@@123)))
(= (type ($generated@@111 $generated@@122 $generated@@123 $generated@@124 $generated@@125)) ($generated@@108 $generated@@127 $generated@@126))))
 :pattern ( ($generated@@111 $generated@@122 $generated@@123 $generated@@124 $generated@@125))
))) (forall (($generated@@128 T@U) ($generated@@129 T@U) ($generated@@130 T@U) ($generated@@131 T@U) ) (! (let (($generated@@132 ($generated@@110 (type $generated@@128))))
 (=> (= (type $generated@@131) $generated@@132) (= ($generated@@106 ($generated@@111 $generated@@128 $generated@@129 $generated@@130 $generated@@131) $generated@@129 $generated@@130) $generated@@131)))
 :weight 0
))) (and (and (forall (($generated@@133 T@U) ($generated@@134 T@U) ($generated@@135 T@U) ($generated@@136 T@U) ($generated@@137 T@U) ($generated@@138 T@U) ) (!  (or (= $generated@@135 $generated@@137) (= ($generated@@106 ($generated@@111 $generated@@134 $generated@@135 $generated@@136 $generated@@133) $generated@@137 $generated@@138) ($generated@@106 $generated@@134 $generated@@137 $generated@@138)))
 :weight 0
)) (forall (($generated@@139 T@U) ($generated@@140 T@U) ($generated@@141 T@U) ($generated@@142 T@U) ($generated@@143 T@U) ($generated@@144 T@U) ) (!  (or (= $generated@@142 $generated@@144) (= ($generated@@106 ($generated@@111 $generated@@140 $generated@@141 $generated@@142 $generated@@139) $generated@@143 $generated@@144) ($generated@@106 $generated@@140 $generated@@143 $generated@@144)))
 :weight 0
))) (forall (($generated@@145 T@U) ($generated@@146 T@U) ($generated@@147 T@U) ($generated@@148 T@U) ($generated@@149 T@U) ($generated@@150 T@U) ) (!  (or true (= ($generated@@106 ($generated@@111 $generated@@146 $generated@@147 $generated@@148 $generated@@145) $generated@@149 $generated@@150) ($generated@@106 $generated@@146 $generated@@149 $generated@@150)))
 :weight 0
)))) (forall (($generated@@151 T@U) ($generated@@152 T@U) ($generated@@153 T@U) ($generated@@154 Bool) ) (! (= (type ($generated@@107 $generated@@151 $generated@@152 $generated@@153 $generated@@154)) ($generated@@108 $generated@@46 $generated@@4))
 :pattern ( ($generated@@107 $generated@@151 $generated@@152 $generated@@153 $generated@@154))
))))
(assert (forall (($generated@@155 T@U) ($generated@@156 T@U) ($generated@@157 T@U) ($generated@@158 Bool) ($generated@@159 T@U) ($generated@@160 T@U) ) (! (let (($generated@@161 ($generated@@55 (type $generated@@160))))
 (=> (and (and (and (and (= (type $generated@@155) $generated@@46) (= (type $generated@@156) ($generated@@45 $generated@@46 $generated@@47))) (= (type $generated@@157) ($generated@@54 $generated@@4))) (= (type $generated@@159) $generated@@46)) (= (type $generated@@160) ($generated@@54 $generated@@161))) (= ($generated@@0 ($generated@@106 ($generated@@107 $generated@@155 $generated@@156 $generated@@157 $generated@@158) $generated@@159 $generated@@160))  (=> (and (not (= $generated@@159 $generated@@155)) ($generated@@0 ($generated@@48 ($generated@@49 $generated@@156 $generated@@159) $generated@@157))) $generated@@158))))
 :pattern ( ($generated@@106 ($generated@@107 $generated@@155 $generated@@156 $generated@@157 $generated@@158) $generated@@159 $generated@@160))
)))
(assert (forall (($generated@@163 Int) ) (! (= ($generated@@162 $generated@@163) $generated@@163)
 :pattern ( ($generated@@162 $generated@@163))
)))
(assert (forall (($generated@@165 T@U) ) (! (let (($generated@@166 (type $generated@@165)))
(= (type ($generated@@164 $generated@@165)) $generated@@166))
 :pattern ( ($generated@@164 $generated@@165))
)))
(assert (forall (($generated@@167 T@U) ) (! (= ($generated@@164 $generated@@167) $generated@@167)
 :pattern ( ($generated@@164 $generated@@167))
)))
(assert (forall (($generated@@168 T@U) ($generated@@169 T@U) ($generated@@170 T@U) ) (!  (=> (and (and (and (and (= (type $generated@@168) ($generated@@45 $generated@@46 $generated@@47)) (= (type $generated@@169) ($generated@@45 $generated@@46 $generated@@47))) (= (type $generated@@170) ($generated@@45 $generated@@46 $generated@@47))) (not (= $generated@@168 $generated@@170))) (and ($generated@@44 $generated@@168 $generated@@169) ($generated@@44 $generated@@169 $generated@@170))) ($generated@@44 $generated@@168 $generated@@170))
 :pattern ( ($generated@@44 $generated@@168 $generated@@169) ($generated@@44 $generated@@169 $generated@@170))
)))
(assert  (and (and (= ($generated@@1 $generated@@173) 11) (forall (($generated@@174 T@U) ) (! (= (type ($generated@@171 $generated@@174)) $generated@@173)
 :pattern ( ($generated@@171 $generated@@174))
))) (forall (($generated@@175 T@T) ($generated@@176 T@U) ) (! (= (type ($generated@@172 $generated@@175 $generated@@176)) $generated@@175)
 :pattern ( ($generated@@172 $generated@@175 $generated@@176))
))))
(assert (forall (($generated@@177 T@U) ) (! (let (($generated@@178 (type $generated@@177)))
(= ($generated@@172 $generated@@178 ($generated@@171 $generated@@177)) $generated@@177))
 :pattern ( ($generated@@171 $generated@@177))
)))
(assert (forall (($generated@@180 Int) ($generated@@181 Int) ) (! (= ($generated@@179 $generated@@180 $generated@@181) (mod $generated@@180 $generated@@181))
 :pattern ( ($generated@@179 $generated@@180 $generated@@181))
)))
(assert (forall (($generated@@182 Int) ) (! (= ($generated@@171 ($generated@@8 ($generated@@162 $generated@@182))) ($generated@@164 ($generated@@171 ($generated@@8 $generated@@182))))
 :pattern ( ($generated@@171 ($generated@@8 ($generated@@162 $generated@@182))))
)))
(assert (forall (($generated@@183 T@U) ) (! (= ($generated@@171 ($generated@@164 $generated@@183)) ($generated@@164 ($generated@@171 $generated@@183)))
 :pattern ( ($generated@@171 ($generated@@164 $generated@@183)))
)))
(push 1)
(declare-fun ControlFlow (Int Int) Int)
(declare-fun $generated@@184 () T@U)
(declare-fun $generated@@185 () T@U)
(declare-fun $generated@@186 () T@U)
(declare-fun $generated@@187 () Int)
(declare-fun $generated@@188 (T@U) Bool)
(declare-fun $generated@@189 (T@U) Bool)
(declare-fun $generated@@190 () Int)
(declare-fun $generated@@191 () Int)
(assert  (and (and (= (type $generated@@184) ($generated@@108 $generated@@46 $generated@@4)) (= (type $generated@@185) $generated@@46)) (= (type $generated@@186) ($generated@@45 $generated@@46 $generated@@47))))
(set-option :timeout 0)
(set-option :rlimit 0)
(assert (not
 (=> (= (ControlFlow 0 0) 3) (let (($generated@@192  (=> (= $generated@@184 ($generated@@107 $generated@@185 $generated@@186 $generated@@50 false)) (=> (and (= $generated@@187 ($generated@@162 1)) (= (ControlFlow 0 2) (- 0 1))) (= ($generated@@179 $generated@@187 ($generated@@162 2)) ($generated@@162 0))))))
(let (($generated@@193  (=> (and (and (and ($generated@@188 $generated@@186) ($generated@@189 $generated@@186)) (= ($generated@@179 $generated@@190 ($generated@@162 2)) ($generated@@162 0))) (and (= 1 $generated@@191) (= (ControlFlow 0 3) 2))) $generated@@192)))
$generated@@193)))
))
(check-sat)
(get-info :reason-unknown)
(assert (not (= (ControlFlow 0 2) (- 1))))
(check-sat)
(pop 1)
; Invalid
(get-info :rlimit)
(reset)
(set-option :rlimit 0)
; did a full reset
(reset)
(set-option :print-success false)
(set-info :smt-lib-version 2.6)
(set-option :auto_config false)
(set-option :type_check true)
(set-option :smt.case_split 3)
(set-option :smt.qi.eager_threshold 100)
(set-option :smt.delay_units true)
(set-option :smt.arith.solver 2)
(set-option :smt.mbqi false)
(set-option :model.compact false)
(set-option :model.v2 true)
(set-option :pp.bv_literals false)
; done setting options


(set-info :category "industrial")
(declare-sort |T@U| 0)
(declare-sort |T@T| 0)
(declare-fun real_pow (Real Real) Real)
(declare-fun UOrdering2 (|T@U| |T@U|) Bool)
(declare-fun UOrdering3 (|T@T| |T@U| |T@U|) Bool)
(declare-fun tickleBool (Bool) Bool)
(assert (and (tickleBool true) (tickleBool false)))
(declare-fun $generated (T@U) Int)
(declare-fun $generated@@0 (T@U) Bool)
(declare-fun $generated@@1 (T@T) Int)
(declare-fun $generated@@2 () T@T)
(declare-fun $generated@@3 () T@T)
(declare-fun $generated@@4 () T@T)
(declare-fun $generated@@5 () T@T)
(declare-fun $generated@@6 () T@T)
(declare-fun $generated@@7 () T@T)
(declare-fun $generated@@8 (Int) T@U)
(declare-fun type (T@U) T@T)
(declare-fun $generated@@9 (Real) T@U)
(declare-fun $generated@@10 (T@U) Real)
(declare-fun $generated@@11 (Bool) T@U)
(declare-fun $generated@@12 (RoundingMode) T@U)
(declare-fun $generated@@13 (T@U) RoundingMode)
(declare-fun $generated@@14 (String) T@U)
(declare-fun $generated@@15 (T@U) String)
(declare-fun $generated@@16 ((RegEx String)) T@U)
(declare-fun $generated@@17 (T@U) (RegEx String))
(declare-fun $generated@@44 (T@U T@U T@U) T@U)
(declare-fun $generated@@45 (T@U T@U T@U Bool) T@U)
(declare-fun $generated@@46 (T@T) T@T)
(declare-fun $generated@@47 () T@T)
(declare-fun $generated@@48 (T@T T@T) T@T)
(declare-fun $generated@@49 () T@T)
(declare-fun $generated@@50 (T@T) T@T)
(declare-fun $generated@@51 (T@U T@U) T@U)
(declare-fun $generated@@52 (T@U T@U) T@U)
(declare-fun $generated@@53 (T@T) T@T)
(declare-fun $generated@@54 (T@T) T@T)
(declare-fun $generated@@55 (T@U T@U T@U) T@U)
(declare-fun $generated@@56 (T@U T@U T@U) T@U)
(declare-fun $generated@@57 (T@T T@T) T@T)
(declare-fun $generated@@58 (T@T) T@T)
(declare-fun $generated@@59 (T@T) T@T)
(declare-fun $generated@@60 (T@U T@U T@U T@U) T@U)
(declare-fun $generated@@157 (Int) Int)
(declare-fun $generated@@159 (T@U) T@U)
(declare-fun $generated@@163 (T@U) T@U)
(declare-fun $generated@@164 (T@T T@U) T@U)
(declare-fun $generated@@165 () T@T)
(assert  (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (= ($generated@@1 $generated@@2) 0) (= ($generated@@1 $generated@@3) 1)) (= ($generated@@1 $generated@@4) 2)) (= ($generated@@1 $generated@@5) 3)) (= ($generated@@1 $generated@@6) 4)) (= ($generated@@1 $generated@@7) 5)) (forall (($generated@@18 Int) ) (! (= ($generated ($generated@@8 $generated@@18)) $generated@@18)
 :pattern ( ($generated@@8 $generated@@18))
))) (forall (($generated@@19 T@U) ) (!  (=> (= (type $generated@@19) $generated@@2) (= ($generated@@8 ($generated $generated@@19)) $generated@@19))
 :pattern ( ($generated $generated@@19))
))) (forall (($generated@@20 Int) ) (! (= (type ($generated@@8 $generated@@20)) $generated@@2)
 :pattern ( ($generated@@8 $generated@@20))
))) (forall (($generated@@21 Real) ) (! (= ($generated@@10 ($generated@@9 $generated@@21)) $generated@@21)
 :pattern ( ($generated@@9 $generated@@21))
))) (forall (($generated@@22 T@U) ) (!  (=> (= (type $generated@@22) $generated@@3) (= ($generated@@9 ($generated@@10 $generated@@22)) $generated@@22))
 :pattern ( ($generated@@10 $generated@@22))
))) (forall (($generated@@23 Real) ) (! (= (type ($generated@@9 $generated@@23)) $generated@@3)
 :pattern ( ($generated@@9 $generated@@23))
))) (forall (($generated@@24 Bool) ) (! (= ($generated@@0 ($generated@@11 $generated@@24)) $generated@@24)
 :pattern ( ($generated@@11 $generated@@24))
))) (forall (($generated@@25 T@U) ) (!  (=> (= (type $generated@@25) $generated@@4) (= ($generated@@11 ($generated@@0 $generated@@25)) $generated@@25))
 :pattern ( ($generated@@0 $generated@@25))
))) (forall (($generated@@26 Bool) ) (! (= (type ($generated@@11 $generated@@26)) $generated@@4)
 :pattern ( ($generated@@11 $generated@@26))
))) (forall (($generated@@27 RoundingMode) ) (! (= ($generated@@13 ($generated@@12 $generated@@27)) $generated@@27)
 :pattern ( ($generated@@12 $generated@@27))
))) (forall (($generated@@28 T@U) ) (!  (=> (= (type $generated@@28) $generated@@5) (= ($generated@@12 ($generated@@13 $generated@@28)) $generated@@28))
 :pattern ( ($generated@@13 $generated@@28))
))) (forall (($generated@@29 RoundingMode) ) (! (= (type ($generated@@12 $generated@@29)) $generated@@5)
 :pattern ( ($generated@@12 $generated@@29))
))) (forall (($generated@@30 String) ) (! (= ($generated@@15 ($generated@@14 $generated@@30)) $generated@@30)
 :pattern ( ($generated@@14 $generated@@30))
))) (forall (($generated@@31 T@U) ) (!  (=> (= (type $generated@@31) $generated@@6) (= ($generated@@14 ($generated@@15 $generated@@31)) $generated@@31))
 :pattern ( ($generated@@15 $generated@@31))
))) (forall (($generated@@32 String) ) (! (= (type ($generated@@14 $generated@@32)) $generated@@6)
 :pattern ( ($generated@@14 $generated@@32))
))) (forall (($generated@@33 (RegEx String)) ) (! (= ($generated@@17 ($generated@@16 $generated@@33)) $generated@@33)
 :pattern ( ($generated@@16 $generated@@33))
))) (forall (($generated@@34 T@U) ) (!  (=> (= (type $generated@@34) $generated@@7) (= ($generated@@16 ($generated@@17 $generated@@34)) $generated@@34))
 :pattern ( ($generated@@17 $generated@@34))
))) (forall (($generated@@35 (RegEx String)) ) (! (= (type ($generated@@16 $generated@@35)) $generated@@7)
 :pattern ( ($generated@@16 $generated@@35))
))))
(assert (forall (($generated@@36 T@U) ) (! (UOrdering2 $generated@@36 $generated@@36)
 :no-pattern ($generated $generated@@36)
 :no-pattern ($generated@@0 $generated@@36)
)))
(assert (forall (($generated@@37 T@U) ($generated@@38 T@U) ($generated@@39 T@U) ) (! (let (($generated@@40 (type $generated@@37)))
 (=> (and (and (= (type $generated@@38) $generated@@40) (= (type $generated@@39) $generated@@40)) (and (UOrdering2 $generated@@37 $generated@@38) (UOrdering2 $generated@@38 $generated@@39))) (UOrdering2 $generated@@37 $generated@@39)))
 :pattern ( (UOrdering2 $generated@@37 $generated@@38) (UOrdering2 $generated@@38 $generated@@39))
)))
(assert (forall (($generated@@41 T@U) ($generated@@42 T@U) ) (! (let (($generated@@43 (type $generated@@41)))
 (=> (= (type $generated@@42) $generated@@43) (=> (and (UOrdering2 $generated@@41 $generated@@42) (UOrdering2 $generated@@42 $generated@@41)) (= $generated@@41 $generated@@42))))
 :pattern ( (UOrdering2 $generated@@41 $generated@@42) (UOrdering2 $generated@@42 $generated@@41))
)))
(assert  (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (forall (($generated@@61 T@T) ($generated@@62 T@T) ) (= ($generated@@1 ($generated@@48 $generated@@61 $generated@@62)) 6)) (forall (($generated@@63 T@T) ($generated@@64 T@T) ) (! (= ($generated@@53 ($generated@@48 $generated@@63 $generated@@64)) $generated@@63)
 :pattern ( ($generated@@48 $generated@@63 $generated@@64))
))) (forall (($generated@@65 T@T) ($generated@@66 T@T) ) (! (= ($generated@@54 ($generated@@48 $generated@@65 $generated@@66)) $generated@@66)
 :pattern ( ($generated@@48 $generated@@65 $generated@@66))
))) (forall (($generated@@67 T@U) ($generated@@68 T@U) ) (! (let (($generated@@69 ($generated@@54 (type $generated@@67))))
(= (type ($generated@@52 $generated@@67 $generated@@68)) $generated@@69))
 :pattern ( ($generated@@52 $generated@@67 $generated@@68))
))) (forall (($generated@@70 T@U) ($generated@@71 T@U) ($generated@@72 T@U) ) (! (let (($generated@@73 (type $generated@@72)))
(let (($generated@@74 (type $generated@@71)))
(= (type ($generated@@55 $generated@@70 $generated@@71 $generated@@72)) ($generated@@48 $generated@@74 $generated@@73))))
 :pattern ( ($generated@@55 $generated@@70 $generated@@71 $generated@@72))
))) (forall (($generated@@75 T@U) ($generated@@76 T@U) ($generated@@77 T@U) ) (! (let (($generated@@78 ($generated@@54 (type $generated@@75))))
 (=> (= (type $generated@@77) $generated@@78) (= ($generated@@52 ($generated@@55 $generated@@75 $generated@@76 $generated@@77) $generated@@76) $generated@@77)))
 :weight 0
))) (and (forall (($generated@@79 T@U) ($generated@@80 T@U) ($generated@@81 T@U) ($generated@@82 T@U) ) (!  (or (= $generated@@81 $generated@@82) (= ($generated@@52 ($generated@@55 $generated@@80 $generated@@81 $generated@@79) $generated@@82) ($generated@@52 $generated@@80 $generated@@82)))
 :weight 0
)) (forall (($generated@@83 T@U) ($generated@@84 T@U) ($generated@@85 T@U) ($generated@@86 T@U) ) (!  (or true (= ($generated@@52 ($generated@@55 $generated@@84 $generated@@85 $generated@@83) $generated@@86) ($generated@@52 $generated@@84 $generated@@86)))
 :weight 0
)))) (forall (($generated@@87 T@T) ) (= ($generated@@1 ($generated@@50 $generated@@87)) 7))) (forall (($generated@@88 T@T) ) (! (= ($generated@@46 ($generated@@50 $generated@@88)) $generated@@88)
 :pattern ( ($generated@@50 $generated@@88))
))) (forall (($generated@@89 T@U) ($generated@@90 T@U) ) (! (let (($generated@@91 ($generated@@46 (type $generated@@90))))
(= (type ($generated@@51 $generated@@89 $generated@@90)) $generated@@91))
 :pattern ( ($generated@@51 $generated@@89 $generated@@90))
))) (= ($generated@@1 $generated@@49) 8)) (forall (($generated@@92 T@U) ($generated@@93 T@U) ($generated@@94 T@U) ) (! (= (type ($generated@@56 $generated@@92 $generated@@93 $generated@@94)) $generated@@49)
 :pattern ( ($generated@@56 $generated@@92 $generated@@93 $generated@@94))
))) (forall (($generated@@95 T@U) ($generated@@96 T@U) ($generated@@97 T@U) ) (! (let (($generated@@98 ($generated@@46 (type $generated@@96))))
 (=> (= (type $generated@@97) $generated@@98) (= ($generated@@51 ($generated@@56 $generated@@95 $generated@@96 $generated@@97) $generated@@96) $generated@@97)))
 :weight 0
))) (and (forall (($generated@@99 T@U) ($generated@@100 T@U) ($generated@@101 T@U) ($generated@@102 T@U) ) (!  (or (= $generated@@101 $generated@@102) (= ($generated@@51 ($generated@@56 $generated@@100 $generated@@101 $generated@@99) $generated@@102) ($generated@@51 $generated@@100 $generated@@102)))
 :weight 0
)) (forall (($generated@@103 T@U) ($generated@@104 T@U) ($generated@@105 T@U) ($generated@@106 T@U) ) (!  (or true (= ($generated@@51 ($generated@@56 $generated@@104 $generated@@105 $generated@@103) $generated@@106) ($generated@@51 $generated@@104 $generated@@106)))
 :weight 0
)))) (= ($generated@@1 $generated@@47) 9)) (forall (($generated@@107 T@T) ($generated@@108 T@T) ) (= ($generated@@1 ($generated@@57 $generated@@107 $generated@@108)) 10))) (forall (($generated@@109 T@T) ($generated@@110 T@T) ) (! (= ($generated@@58 ($generated@@57 $generated@@109 $generated@@110)) $generated@@109)
 :pattern ( ($generated@@57 $generated@@109 $generated@@110))
))) (forall (($generated@@111 T@T) ($generated@@112 T@T) ) (! (= ($generated@@59 ($generated@@57 $generated@@111 $generated@@112)) $generated@@112)
 :pattern ( ($generated@@57 $generated@@111 $generated@@112))
))) (forall (($generated@@113 T@U) ($generated@@114 T@U) ($generated@@115 T@U) ) (! (let (($generated@@116 ($generated@@59 (type $generated@@113))))
(= (type ($generated@@44 $generated@@113 $generated@@114 $generated@@115)) $generated@@116))
 :pattern ( ($generated@@44 $generated@@113 $generated@@114 $generated@@115))
))) (forall (($generated@@117 T@U) ($generated@@118 T@U) ($generated@@119 T@U) ($generated@@120 T@U) ) (! (let (($generated@@121 (type $generated@@120)))
(let (($generated@@122 (type $generated@@118)))
(= (type ($generated@@60 $generated@@117 $generated@@118 $generated@@119 $generated@@120)) ($generated@@57 $generated@@122 $generated@@121))))
 :pattern ( ($generated@@60 $generated@@117 $generated@@118 $generated@@119 $generated@@120))
))) (forall (($generated@@123 T@U) ($generated@@124 T@U) ($generated@@125 T@U) ($generated@@126 T@U) ) (! (let (($generated@@127 ($generated@@59 (type $generated@@123))))
 (=> (= (type $generated@@126) $generated@@127) (= ($generated@@44 ($generated@@60 $generated@@123 $generated@@124 $generated@@125 $generated@@126) $generated@@124 $generated@@125) $generated@@126)))
 :weight 0
))) (and (and (forall (($generated@@128 T@U) ($generated@@129 T@U) ($generated@@130 T@U) ($generated@@131 T@U) ($generated@@132 T@U) ($generated@@133 T@U) ) (!  (or (= $generated@@130 $generated@@132) (= ($generated@@44 ($generated@@60 $generated@@129 $generated@@130 $generated@@131 $generated@@128) $generated@@132 $generated@@133) ($generated@@44 $generated@@129 $generated@@132 $generated@@133)))
 :weight 0
)) (forall (($generated@@134 T@U) ($generated@@135 T@U) ($generated@@136 T@U) ($generated@@137 T@U) ($generated@@138 T@U) ($generated@@139 T@U) ) (!  (or (= $generated@@137 $generated@@139) (= ($generated@@44 ($generated@@60 $generated@@135 $generated@@136 $generated@@137 $generated@@134) $generated@@138 $generated@@139) ($generated@@44 $generated@@135 $generated@@138 $generated@@139)))
 :weight 0
))) (forall (($generated@@140 T@U) ($generated@@141 T@U) ($generated@@142 T@U) ($generated@@143 T@U) ($generated@@144 T@U) ($generated@@145 T@U) ) (!  (or true (= ($generated@@44 ($generated@@60 $generated@@141 $generated@@142 $generated@@143 $generated@@140) $generated@@144 $generated@@145) ($generated@@44 $generated@@141 $generated@@144 $generated@@145)))
 :weight 0
)))) (forall (($generated@@146 T@U) ($generated@@147 T@U) ($generated@@148 T@U) ($generated@@149 Bool) ) (! (= (type ($generated@@45 $generated@@146 $generated@@147 $generated@@148 $generated@@149)) ($generated@@57 $generated@@47 $generated@@4))
 :pattern ( ($generated@@45 $generated@@146 $generated@@147 $generated@@148 $generated@@149))
))))
(assert (forall (($generated@@150 T@U) ($generated@@151 T@U) ($generated@@152 T@U) ($generated@@153 Bool) ($generated@@154 T@U) ($generated@@155 T@U) ) (! (let (($generated@@156 ($generated@@46 (type $generated@@155))))
 (=> (and (and (and (and (= (type $generated@@150) $generated@@47) (= (type $generated@@151) ($generated@@48 $generated@@47 $generated@@49))) (= (type $generated@@152) ($generated@@50 $generated@@4))) (= (type $generated@@154) $generated@@47)) (= (type $generated@@155) ($generated@@50 $generated@@156))) (= ($generated@@0 ($generated@@44 ($generated@@45 $generated@@150 $generated@@151 $generated@@152 $generated@@153) $generated@@154 $generated@@155))  (=> (and (not (= $generated@@154 $generated@@150)) ($generated@@0 ($generated@@51 ($generated@@52 $generated@@151 $generated@@154) $generated@@152))) $generated@@153))))
 :pattern ( ($generated@@44 ($generated@@45 $generated@@150 $generated@@151 $generated@@152 $generated@@153) $generated@@154 $generated@@155))
)))
(assert (forall (($generated@@158 Int) ) (! (= ($generated@@157 $generated@@158) $generated@@158)
 :pattern ( ($generated@@157 $generated@@158))
)))
(assert (forall (($generated@@160 T@U) ) (! (let (($generated@@161 (type $generated@@160)))
(= (type ($generated@@159 $generated@@160)) $generated@@161))
 :pattern ( ($generated@@159 $generated@@160))
)))
(assert (forall (($generated@@162 T@U) ) (! (= ($generated@@159 $generated@@162) $generated@@162)
 :pattern ( ($generated@@159 $generated@@162))
)))
(assert  (and (and (= ($generated@@1 $generated@@165) 11) (forall (($generated@@166 T@U) ) (! (= (type ($generated@@163 $generated@@166)) $generated@@165)
 :pattern ( ($generated@@163 $generated@@166))
))) (forall (($generated@@167 T@T) ($generated@@168 T@U) ) (! (= (type ($generated@@164 $generated@@167 $generated@@168)) $generated@@167)
 :pattern ( ($generated@@164 $generated@@167 $generated@@168))
))))
(assert (forall (($generated@@169 T@U) ) (! (let (($generated@@170 (type $generated@@169)))
(= ($generated@@164 $generated@@170 ($generated@@163 $generated@@169)) $generated@@169))
 :pattern ( ($generated@@163 $generated@@169))
)))
(assert (forall (($generated@@171 Int) ) (! (= ($generated@@163 ($generated@@8 ($generated@@157 $generated@@171))) ($generated@@159 ($generated@@163 ($generated@@8 $generated@@171))))
 :pattern ( ($generated@@163 ($generated@@8 ($generated@@157 $generated@@171))))
)))
(assert (forall (($generated@@172 T@U) ) (! (= ($generated@@163 ($generated@@159 $generated@@172)) ($generated@@159 ($generated@@163 $generated@@172)))
 :pattern ( ($generated@@163 ($generated@@159 $generated@@172)))
)))
(push 1)
(declare-fun ControlFlow (Int Int) Int)
(declare-fun $generated@@173 () Int)
(declare-fun $generated@@174 () T@U)
(declare-fun $generated@@175 () T@U)
(declare-fun $generated@@176 () T@U)
(declare-fun $generated@@177 () T@U)
(declare-fun $generated@@178 (T@U) Bool)
(declare-fun $generated@@179 (T@U) Bool)
(declare-fun $generated@@180 () Int)
(assert  (and (and (and (= (type $generated@@174) ($generated@@57 $generated@@47 $generated@@4)) (= (type $generated@@175) $generated@@47)) (= (type $generated@@176) ($generated@@48 $generated@@47 $generated@@49))) (= (type $generated@@177) ($generated@@50 $generated@@4))))
(set-option :timeout 0)
(set-option :rlimit 0)
(assert (not
 (=> (= (ControlFlow 0 0) 8) (let (($generated@@181 true))
(let (($generated@@182  (=> (and (< $generated@@173 ($generated@@157 0)) (= (ControlFlow 0 6) 4)) $generated@@181)))
(let (($generated@@183  (=> (and (<= ($generated@@157 0) $generated@@173) (= (ControlFlow 0 5) 4)) $generated@@181)))
(let (($generated@@184  (and (=> (= (ControlFlow 0 2) (- 0 3)) (<= ($generated@@157 0) ($generated@@157 0))) (=> (= (ControlFlow 0 2) (- 0 1)) ($generated@@0 ($generated@@159 ($generated@@11 (< 0 100))))))))
(let (($generated@@185  (=> (= $generated@@174 ($generated@@45 $generated@@175 $generated@@176 $generated@@177 false)) (and (and (=> (= (ControlFlow 0 7) 2) $generated@@184) (=> (= (ControlFlow 0 7) 5) $generated@@183)) (=> (= (ControlFlow 0 7) 6) $generated@@182)))))
(let (($generated@@186  (=> (and (and ($generated@@178 $generated@@176) ($generated@@179 $generated@@176)) (and (= 0 $generated@@180) (= (ControlFlow 0 8) 7))) $generated@@185)))
$generated@@186)))))))
))
(check-sat)
(pop 1)
; Valid
(get-info :rlimit)
(reset)
(set-option :rlimit 0)
; did a full reset
(reset)
(set-option :print-success false)
(set-info :smt-lib-version 2.6)
(set-option :auto_config false)
(set-option :type_check true)
(set-option :smt.case_split 3)
(set-option :smt.qi.eager_threshold 100)
(set-option :smt.delay_units true)
(set-option :smt.arith.solver 2)
(set-option :smt.mbqi false)
(set-option :model.compact false)
(set-option :model.v2 true)
(set-option :pp.bv_literals false)
; done setting options


(set-info :category "industrial")
(declare-sort |T@U| 0)
(declare-sort |T@T| 0)
(declare-fun real_pow (Real Real) Real)
(declare-fun UOrdering2 (|T@U| |T@U|) Bool)
(declare-fun UOrdering3 (|T@T| |T@U| |T@U|) Bool)
(declare-fun tickleBool (Bool) Bool)
(assert (and (tickleBool true) (tickleBool false)))
(declare-fun $generated (T@U) Int)
(declare-fun $generated@@0 (T@U) Bool)
(declare-fun $generated@@1 (T@T) Int)
(declare-fun $generated@@2 () T@T)
(declare-fun $generated@@3 () T@T)
(declare-fun $generated@@4 () T@T)
(declare-fun $generated@@5 () T@T)
(declare-fun $generated@@6 () T@T)
(declare-fun $generated@@7 () T@T)
(declare-fun $generated@@8 (Int) T@U)
(declare-fun type (T@U) T@T)
(declare-fun $generated@@9 (Real) T@U)
(declare-fun $generated@@10 (T@U) Real)
(declare-fun $generated@@11 (Bool) T@U)
(declare-fun $generated@@12 (RoundingMode) T@U)
(declare-fun $generated@@13 (T@U) RoundingMode)
(declare-fun $generated@@14 (String) T@U)
(declare-fun $generated@@15 (T@U) String)
(declare-fun $generated@@16 ((RegEx String)) T@U)
(declare-fun $generated@@17 (T@U) (RegEx String))
(declare-fun $generated@@44 (T@U T@U T@U) T@U)
(declare-fun $generated@@45 (T@U T@U T@U Bool) T@U)
(declare-fun $generated@@46 (T@T) T@T)
(declare-fun $generated@@47 () T@T)
(declare-fun $generated@@48 (T@T T@T) T@T)
(declare-fun $generated@@49 () T@T)
(declare-fun $generated@@50 (T@T) T@T)
(declare-fun $generated@@51 (T@U T@U) T@U)
(declare-fun $generated@@52 (T@U T@U) T@U)
(declare-fun $generated@@53 (T@T) T@T)
(declare-fun $generated@@54 (T@T) T@T)
(declare-fun $generated@@55 (T@U T@U T@U) T@U)
(declare-fun $generated@@56 (T@U T@U T@U) T@U)
(declare-fun $generated@@57 (T@T T@T) T@T)
(declare-fun $generated@@58 (T@T) T@T)
(declare-fun $generated@@59 (T@T) T@T)
(declare-fun $generated@@60 (T@U T@U T@U T@U) T@U)
(declare-fun $generated@@157 (Int) Int)
(declare-fun $generated@@159 (T@U) T@U)
(declare-fun $generated@@163 (T@U) T@U)
(declare-fun $generated@@164 (T@T T@U) T@U)
(declare-fun $generated@@165 () T@T)
(assert  (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (= ($generated@@1 $generated@@2) 0) (= ($generated@@1 $generated@@3) 1)) (= ($generated@@1 $generated@@4) 2)) (= ($generated@@1 $generated@@5) 3)) (= ($generated@@1 $generated@@6) 4)) (= ($generated@@1 $generated@@7) 5)) (forall (($generated@@18 Int) ) (! (= ($generated ($generated@@8 $generated@@18)) $generated@@18)
 :pattern ( ($generated@@8 $generated@@18))
))) (forall (($generated@@19 T@U) ) (!  (=> (= (type $generated@@19) $generated@@2) (= ($generated@@8 ($generated $generated@@19)) $generated@@19))
 :pattern ( ($generated $generated@@19))
))) (forall (($generated@@20 Int) ) (! (= (type ($generated@@8 $generated@@20)) $generated@@2)
 :pattern ( ($generated@@8 $generated@@20))
))) (forall (($generated@@21 Real) ) (! (= ($generated@@10 ($generated@@9 $generated@@21)) $generated@@21)
 :pattern ( ($generated@@9 $generated@@21))
))) (forall (($generated@@22 T@U) ) (!  (=> (= (type $generated@@22) $generated@@3) (= ($generated@@9 ($generated@@10 $generated@@22)) $generated@@22))
 :pattern ( ($generated@@10 $generated@@22))
))) (forall (($generated@@23 Real) ) (! (= (type ($generated@@9 $generated@@23)) $generated@@3)
 :pattern ( ($generated@@9 $generated@@23))
))) (forall (($generated@@24 Bool) ) (! (= ($generated@@0 ($generated@@11 $generated@@24)) $generated@@24)
 :pattern ( ($generated@@11 $generated@@24))
))) (forall (($generated@@25 T@U) ) (!  (=> (= (type $generated@@25) $generated@@4) (= ($generated@@11 ($generated@@0 $generated@@25)) $generated@@25))
 :pattern ( ($generated@@0 $generated@@25))
))) (forall (($generated@@26 Bool) ) (! (= (type ($generated@@11 $generated@@26)) $generated@@4)
 :pattern ( ($generated@@11 $generated@@26))
))) (forall (($generated@@27 RoundingMode) ) (! (= ($generated@@13 ($generated@@12 $generated@@27)) $generated@@27)
 :pattern ( ($generated@@12 $generated@@27))
))) (forall (($generated@@28 T@U) ) (!  (=> (= (type $generated@@28) $generated@@5) (= ($generated@@12 ($generated@@13 $generated@@28)) $generated@@28))
 :pattern ( ($generated@@13 $generated@@28))
))) (forall (($generated@@29 RoundingMode) ) (! (= (type ($generated@@12 $generated@@29)) $generated@@5)
 :pattern ( ($generated@@12 $generated@@29))
))) (forall (($generated@@30 String) ) (! (= ($generated@@15 ($generated@@14 $generated@@30)) $generated@@30)
 :pattern ( ($generated@@14 $generated@@30))
))) (forall (($generated@@31 T@U) ) (!  (=> (= (type $generated@@31) $generated@@6) (= ($generated@@14 ($generated@@15 $generated@@31)) $generated@@31))
 :pattern ( ($generated@@15 $generated@@31))
))) (forall (($generated@@32 String) ) (! (= (type ($generated@@14 $generated@@32)) $generated@@6)
 :pattern ( ($generated@@14 $generated@@32))
))) (forall (($generated@@33 (RegEx String)) ) (! (= ($generated@@17 ($generated@@16 $generated@@33)) $generated@@33)
 :pattern ( ($generated@@16 $generated@@33))
))) (forall (($generated@@34 T@U) ) (!  (=> (= (type $generated@@34) $generated@@7) (= ($generated@@16 ($generated@@17 $generated@@34)) $generated@@34))
 :pattern ( ($generated@@17 $generated@@34))
))) (forall (($generated@@35 (RegEx String)) ) (! (= (type ($generated@@16 $generated@@35)) $generated@@7)
 :pattern ( ($generated@@16 $generated@@35))
))))
(assert (forall (($generated@@36 T@U) ) (! (UOrdering2 $generated@@36 $generated@@36)
 :no-pattern ($generated $generated@@36)
 :no-pattern ($generated@@0 $generated@@36)
)))
(assert (forall (($generated@@37 T@U) ($generated@@38 T@U) ($generated@@39 T@U) ) (! (let (($generated@@40 (type $generated@@37)))
 (=> (and (and (= (type $generated@@38) $generated@@40) (= (type $generated@@39) $generated@@40)) (and (UOrdering2 $generated@@37 $generated@@38) (UOrdering2 $generated@@38 $generated@@39))) (UOrdering2 $generated@@37 $generated@@39)))
 :pattern ( (UOrdering2 $generated@@37 $generated@@38) (UOrdering2 $generated@@38 $generated@@39))
)))
(assert (forall (($generated@@41 T@U) ($generated@@42 T@U) ) (! (let (($generated@@43 (type $generated@@41)))
 (=> (= (type $generated@@42) $generated@@43) (=> (and (UOrdering2 $generated@@41 $generated@@42) (UOrdering2 $generated@@42 $generated@@41)) (= $generated@@41 $generated@@42))))
 :pattern ( (UOrdering2 $generated@@41 $generated@@42) (UOrdering2 $generated@@42 $generated@@41))
)))
(assert  (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (forall (($generated@@61 T@T) ($generated@@62 T@T) ) (= ($generated@@1 ($generated@@48 $generated@@61 $generated@@62)) 6)) (forall (($generated@@63 T@T) ($generated@@64 T@T) ) (! (= ($generated@@53 ($generated@@48 $generated@@63 $generated@@64)) $generated@@63)
 :pattern ( ($generated@@48 $generated@@63 $generated@@64))
))) (forall (($generated@@65 T@T) ($generated@@66 T@T) ) (! (= ($generated@@54 ($generated@@48 $generated@@65 $generated@@66)) $generated@@66)
 :pattern ( ($generated@@48 $generated@@65 $generated@@66))
))) (forall (($generated@@67 T@U) ($generated@@68 T@U) ) (! (let (($generated@@69 ($generated@@54 (type $generated@@67))))
(= (type ($generated@@52 $generated@@67 $generated@@68)) $generated@@69))
 :pattern ( ($generated@@52 $generated@@67 $generated@@68))
))) (forall (($generated@@70 T@U) ($generated@@71 T@U) ($generated@@72 T@U) ) (! (let (($generated@@73 (type $generated@@72)))
(let (($generated@@74 (type $generated@@71)))
(= (type ($generated@@55 $generated@@70 $generated@@71 $generated@@72)) ($generated@@48 $generated@@74 $generated@@73))))
 :pattern ( ($generated@@55 $generated@@70 $generated@@71 $generated@@72))
))) (forall (($generated@@75 T@U) ($generated@@76 T@U) ($generated@@77 T@U) ) (! (let (($generated@@78 ($generated@@54 (type $generated@@75))))
 (=> (= (type $generated@@77) $generated@@78) (= ($generated@@52 ($generated@@55 $generated@@75 $generated@@76 $generated@@77) $generated@@76) $generated@@77)))
 :weight 0
))) (and (forall (($generated@@79 T@U) ($generated@@80 T@U) ($generated@@81 T@U) ($generated@@82 T@U) ) (!  (or (= $generated@@81 $generated@@82) (= ($generated@@52 ($generated@@55 $generated@@80 $generated@@81 $generated@@79) $generated@@82) ($generated@@52 $generated@@80 $generated@@82)))
 :weight 0
)) (forall (($generated@@83 T@U) ($generated@@84 T@U) ($generated@@85 T@U) ($generated@@86 T@U) ) (!  (or true (= ($generated@@52 ($generated@@55 $generated@@84 $generated@@85 $generated@@83) $generated@@86) ($generated@@52 $generated@@84 $generated@@86)))
 :weight 0
)))) (forall (($generated@@87 T@T) ) (= ($generated@@1 ($generated@@50 $generated@@87)) 7))) (forall (($generated@@88 T@T) ) (! (= ($generated@@46 ($generated@@50 $generated@@88)) $generated@@88)
 :pattern ( ($generated@@50 $generated@@88))
))) (forall (($generated@@89 T@U) ($generated@@90 T@U) ) (! (let (($generated@@91 ($generated@@46 (type $generated@@90))))
(= (type ($generated@@51 $generated@@89 $generated@@90)) $generated@@91))
 :pattern ( ($generated@@51 $generated@@89 $generated@@90))
))) (= ($generated@@1 $generated@@49) 8)) (forall (($generated@@92 T@U) ($generated@@93 T@U) ($generated@@94 T@U) ) (! (= (type ($generated@@56 $generated@@92 $generated@@93 $generated@@94)) $generated@@49)
 :pattern ( ($generated@@56 $generated@@92 $generated@@93 $generated@@94))
))) (forall (($generated@@95 T@U) ($generated@@96 T@U) ($generated@@97 T@U) ) (! (let (($generated@@98 ($generated@@46 (type $generated@@96))))
 (=> (= (type $generated@@97) $generated@@98) (= ($generated@@51 ($generated@@56 $generated@@95 $generated@@96 $generated@@97) $generated@@96) $generated@@97)))
 :weight 0
))) (and (forall (($generated@@99 T@U) ($generated@@100 T@U) ($generated@@101 T@U) ($generated@@102 T@U) ) (!  (or (= $generated@@101 $generated@@102) (= ($generated@@51 ($generated@@56 $generated@@100 $generated@@101 $generated@@99) $generated@@102) ($generated@@51 $generated@@100 $generated@@102)))
 :weight 0
)) (forall (($generated@@103 T@U) ($generated@@104 T@U) ($generated@@105 T@U) ($generated@@106 T@U) ) (!  (or true (= ($generated@@51 ($generated@@56 $generated@@104 $generated@@105 $generated@@103) $generated@@106) ($generated@@51 $generated@@104 $generated@@106)))
 :weight 0
)))) (= ($generated@@1 $generated@@47) 9)) (forall (($generated@@107 T@T) ($generated@@108 T@T) ) (= ($generated@@1 ($generated@@57 $generated@@107 $generated@@108)) 10))) (forall (($generated@@109 T@T) ($generated@@110 T@T) ) (! (= ($generated@@58 ($generated@@57 $generated@@109 $generated@@110)) $generated@@109)
 :pattern ( ($generated@@57 $generated@@109 $generated@@110))
))) (forall (($generated@@111 T@T) ($generated@@112 T@T) ) (! (= ($generated@@59 ($generated@@57 $generated@@111 $generated@@112)) $generated@@112)
 :pattern ( ($generated@@57 $generated@@111 $generated@@112))
))) (forall (($generated@@113 T@U) ($generated@@114 T@U) ($generated@@115 T@U) ) (! (let (($generated@@116 ($generated@@59 (type $generated@@113))))
(= (type ($generated@@44 $generated@@113 $generated@@114 $generated@@115)) $generated@@116))
 :pattern ( ($generated@@44 $generated@@113 $generated@@114 $generated@@115))
))) (forall (($generated@@117 T@U) ($generated@@118 T@U) ($generated@@119 T@U) ($generated@@120 T@U) ) (! (let (($generated@@121 (type $generated@@120)))
(let (($generated@@122 (type $generated@@118)))
(= (type ($generated@@60 $generated@@117 $generated@@118 $generated@@119 $generated@@120)) ($generated@@57 $generated@@122 $generated@@121))))
 :pattern ( ($generated@@60 $generated@@117 $generated@@118 $generated@@119 $generated@@120))
))) (forall (($generated@@123 T@U) ($generated@@124 T@U) ($generated@@125 T@U) ($generated@@126 T@U) ) (! (let (($generated@@127 ($generated@@59 (type $generated@@123))))
 (=> (= (type $generated@@126) $generated@@127) (= ($generated@@44 ($generated@@60 $generated@@123 $generated@@124 $generated@@125 $generated@@126) $generated@@124 $generated@@125) $generated@@126)))
 :weight 0
))) (and (and (forall (($generated@@128 T@U) ($generated@@129 T@U) ($generated@@130 T@U) ($generated@@131 T@U) ($generated@@132 T@U) ($generated@@133 T@U) ) (!  (or (= $generated@@130 $generated@@132) (= ($generated@@44 ($generated@@60 $generated@@129 $generated@@130 $generated@@131 $generated@@128) $generated@@132 $generated@@133) ($generated@@44 $generated@@129 $generated@@132 $generated@@133)))
 :weight 0
)) (forall (($generated@@134 T@U) ($generated@@135 T@U) ($generated@@136 T@U) ($generated@@137 T@U) ($generated@@138 T@U) ($generated@@139 T@U) ) (!  (or (= $generated@@137 $generated@@139) (= ($generated@@44 ($generated@@60 $generated@@135 $generated@@136 $generated@@137 $generated@@134) $generated@@138 $generated@@139) ($generated@@44 $generated@@135 $generated@@138 $generated@@139)))
 :weight 0
))) (forall (($generated@@140 T@U) ($generated@@141 T@U) ($generated@@142 T@U) ($generated@@143 T@U) ($generated@@144 T@U) ($generated@@145 T@U) ) (!  (or true (= ($generated@@44 ($generated@@60 $generated@@141 $generated@@142 $generated@@143 $generated@@140) $generated@@144 $generated@@145) ($generated@@44 $generated@@141 $generated@@144 $generated@@145)))
 :weight 0
)))) (forall (($generated@@146 T@U) ($generated@@147 T@U) ($generated@@148 T@U) ($generated@@149 Bool) ) (! (= (type ($generated@@45 $generated@@146 $generated@@147 $generated@@148 $generated@@149)) ($generated@@57 $generated@@47 $generated@@4))
 :pattern ( ($generated@@45 $generated@@146 $generated@@147 $generated@@148 $generated@@149))
))))
(assert (forall (($generated@@150 T@U) ($generated@@151 T@U) ($generated@@152 T@U) ($generated@@153 Bool) ($generated@@154 T@U) ($generated@@155 T@U) ) (! (let (($generated@@156 ($generated@@46 (type $generated@@155))))
 (=> (and (and (and (and (= (type $generated@@150) $generated@@47) (= (type $generated@@151) ($generated@@48 $generated@@47 $generated@@49))) (= (type $generated@@152) ($generated@@50 $generated@@4))) (= (type $generated@@154) $generated@@47)) (= (type $generated@@155) ($generated@@50 $generated@@156))) (= ($generated@@0 ($generated@@44 ($generated@@45 $generated@@150 $generated@@151 $generated@@152 $generated@@153) $generated@@154 $generated@@155))  (=> (and (not (= $generated@@154 $generated@@150)) ($generated@@0 ($generated@@51 ($generated@@52 $generated@@151 $generated@@154) $generated@@152))) $generated@@153))))
 :pattern ( ($generated@@44 ($generated@@45 $generated@@150 $generated@@151 $generated@@152 $generated@@153) $generated@@154 $generated@@155))
)))
(assert (forall (($generated@@158 Int) ) (! (= ($generated@@157 $generated@@158) $generated@@158)
 :pattern ( ($generated@@157 $generated@@158))
)))
(assert (forall (($generated@@160 T@U) ) (! (let (($generated@@161 (type $generated@@160)))
(= (type ($generated@@159 $generated@@160)) $generated@@161))
 :pattern ( ($generated@@159 $generated@@160))
)))
(assert (forall (($generated@@162 T@U) ) (! (= ($generated@@159 $generated@@162) $generated@@162)
 :pattern ( ($generated@@159 $generated@@162))
)))
(assert  (and (and (= ($generated@@1 $generated@@165) 11) (forall (($generated@@166 T@U) ) (! (= (type ($generated@@163 $generated@@166)) $generated@@165)
 :pattern ( ($generated@@163 $generated@@166))
))) (forall (($generated@@167 T@T) ($generated@@168 T@U) ) (! (= (type ($generated@@164 $generated@@167 $generated@@168)) $generated@@167)
 :pattern ( ($generated@@164 $generated@@167 $generated@@168))
))))
(assert (forall (($generated@@169 T@U) ) (! (let (($generated@@170 (type $generated@@169)))
(= ($generated@@164 $generated@@170 ($generated@@163 $generated@@169)) $generated@@169))
 :pattern ( ($generated@@163 $generated@@169))
)))
(assert (forall (($generated@@171 Int) ) (! (= ($generated@@163 ($generated@@8 ($generated@@157 $generated@@171))) ($generated@@159 ($generated@@163 ($generated@@8 $generated@@171))))
 :pattern ( ($generated@@163 ($generated@@8 ($generated@@157 $generated@@171))))
)))
(assert (forall (($generated@@172 T@U) ) (! (= ($generated@@163 ($generated@@159 $generated@@172)) ($generated@@159 ($generated@@163 $generated@@172)))
 :pattern ( ($generated@@163 ($generated@@159 $generated@@172)))
)))
(push 1)
(declare-fun ControlFlow (Int Int) Int)
(declare-fun $generated@@173 () T@U)
(declare-fun $generated@@174 () T@U)
(declare-fun $generated@@175 () T@U)
(declare-fun $generated@@176 () T@U)
(declare-fun $generated@@177 () Int)
(declare-fun $generated@@178 () Int)
(declare-fun $generated@@179 () Int)
(declare-fun $generated@@180 () Int)
(declare-fun $generated@@181 () Int)
(declare-fun $generated@@182 () Int)
(declare-fun $generated@@183 () Int)
(declare-fun $generated@@184 () Int)
(declare-fun $generated@@185 () Int)
(declare-fun $generated@@186 () Int)
(declare-fun $generated@@187 () Int)
(declare-fun $generated@@188 () Int)
(declare-fun $generated@@189 () Int)
(declare-fun $generated@@190 (T@U) Bool)
(declare-fun $generated@@191 (T@U) Bool)
(declare-fun $generated@@192 () Int)
(declare-fun $generated@@193 () Int)
(declare-fun $generated@@194 () Int)
(declare-fun $generated@@195 () Int)
(assert  (and (and (and (= (type $generated@@173) ($generated@@57 $generated@@47 $generated@@4)) (= (type $generated@@174) $generated@@47)) (= (type $generated@@175) ($generated@@48 $generated@@47 $generated@@49))) (= (type $generated@@176) ($generated@@50 $generated@@4))))
(set-option :timeout 0)
(set-option :rlimit 0)
(assert (not
 (=> (= (ControlFlow 0 0) 13) (let (($generated@@196  (=> (and (= $generated@@173 ($generated@@45 $generated@@174 $generated@@175 $generated@@176 false)) (= $generated@@177 ($generated@@157 85))) (and (=> (= (ControlFlow 0 2) (- 0 12)) (and (<= ($generated@@157 0) $generated@@177) (< $generated@@177 256))) (=> (and (<= ($generated@@157 0) $generated@@177) (< $generated@@177 256)) (=> (and (= $generated@@178 ($generated@@157 85)) (= $generated@@179 ($generated@@157 86))) (and (=> (= (ControlFlow 0 2) (- 0 11)) (and (<= ($generated@@157 0) $generated@@179) (< $generated@@179 256))) (=> (and (<= ($generated@@157 0) $generated@@179) (< $generated@@179 256)) (=> (and (= $generated@@180 ($generated@@157 86)) (= $generated@@181 (+ $generated@@178 $generated@@180))) (and (=> (= (ControlFlow 0 2) (- 0 10)) (and (<= ($generated@@157 0) $generated@@181) (< $generated@@181 256))) (=> (and (<= ($generated@@157 0) $generated@@181) (< $generated@@181 256)) (=> (= $generated@@182 (- (+ $generated@@178 $generated@@180) $generated@@180)) (and (=> (= (ControlFlow 0 2) (- 0 9)) (and (<= ($generated@@157 0) $generated@@182) (< $generated@@182 256))) (=> (and (<= ($generated@@157 0) $generated@@182) (< $generated@@182 256)) (=> (= $generated@@183 (+ (- (+ $generated@@178 $generated@@180) $generated@@180) $generated@@178)) (and (=> (= (ControlFlow 0 2) (- 0 8)) (and (<= ($generated@@157 0) $generated@@183) (< $generated@@183 256))) (=> (and (<= ($generated@@157 0) $generated@@183) (< $generated@@183 256)) (=> (and (= $generated@@184 (+ (- (+ $generated@@178 $generated@@180) $generated@@180) $generated@@178)) (= $generated@@185 (+ $generated@@184 $generated@@178))) (and (=> (= (ControlFlow 0 2) (- 0 7)) (and (<= ($generated@@157 0) $generated@@185) (< $generated@@185 256))) (=> (and (<= ($generated@@157 0) $generated@@185) (< $generated@@185 256)) (=> (= $generated@@186 ($generated@@157 255)) (and (=> (= (ControlFlow 0 2) (- 0 6)) (and (<= ($generated@@157 0) $generated@@186) (< $generated@@186 256))) (=> (and (<= ($generated@@157 0) $generated@@186) (< $generated@@186 256)) (and (=> (= (ControlFlow 0 2) (- 0 5)) (= (+ $generated@@184 $generated@@178) ($generated@@157 255))) (=> (= (+ $generated@@184 $generated@@178) ($generated@@157 255)) (=> (= $generated@@187 (+ $generated@@184 $generated@@180)) (and (=> (= (ControlFlow 0 2) (- 0 4)) (and (<= ($generated@@157 0) $generated@@187) (< $generated@@187 256))) (=> (and (<= ($generated@@157 0) $generated@@187) (< $generated@@187 256)) (=> (= $generated@@188 ($generated@@157 3)) (and (=> (= (ControlFlow 0 2) (- 0 3)) (and (<= ($generated@@157 0) $generated@@188) (< $generated@@188 256))) (=> (and (<= ($generated@@157 0) $generated@@188) (< $generated@@188 256)) (=> (and (= $generated@@189 (- (+ $generated@@184 $generated@@180) 3)) (= (ControlFlow 0 2) (- 0 1))) (and (<= ($generated@@157 0) $generated@@189) (< $generated@@189 256))))))))))))))))))))))))))))))))))
(let (($generated@@197  (=> (and ($generated@@190 $generated@@175) ($generated@@191 $generated@@175)) (=> (and (and (and (and (<= ($generated@@157 0) $generated@@192) (< $generated@@192 256)) true) (and (and (<= ($generated@@157 0) $generated@@193) (< $generated@@193 256)) true)) (and (and (and (<= ($generated@@157 0) $generated@@194) (< $generated@@194 256)) true) (and (= 1 $generated@@195) (= (ControlFlow 0 13) 2)))) $generated@@196))))
$generated@@197)))
))
(check-sat)
(get-info :reason-unknown)
(assert (not (= (ControlFlow 0 2) (- 4))))
(check-sat)
(pop 1)
; Invalid
(get-info :rlimit)
(reset)
(set-option :rlimit 0)
; did a full reset
(reset)
(set-option :print-success false)
(set-info :smt-lib-version 2.6)
(set-option :auto_config false)
(set-option :type_check true)
(set-option :smt.case_split 3)
(set-option :smt.qi.eager_threshold 100)
(set-option :smt.delay_units true)
(set-option :smt.arith.solver 2)
(set-option :smt.mbqi false)
(set-option :model.compact false)
(set-option :model.v2 true)
(set-option :pp.bv_literals false)
; done setting options


(set-info :category "industrial")
(declare-sort |T@U| 0)
(declare-sort |T@T| 0)
(declare-fun real_pow (Real Real) Real)
(declare-fun UOrdering2 (|T@U| |T@U|) Bool)
(declare-fun UOrdering3 (|T@T| |T@U| |T@U|) Bool)
(declare-fun tickleBool (Bool) Bool)
(assert (and (tickleBool true) (tickleBool false)))
(declare-fun $generated (T@U) Int)
(declare-fun $generated@@0 (T@U) Bool)
(declare-fun $generated@@1 (T@T) Int)
(declare-fun $generated@@2 () T@T)
(declare-fun $generated@@3 () T@T)
(declare-fun $generated@@4 () T@T)
(declare-fun $generated@@5 () T@T)
(declare-fun $generated@@6 () T@T)
(declare-fun $generated@@7 () T@T)
(declare-fun $generated@@8 (Int) T@U)
(declare-fun type (T@U) T@T)
(declare-fun $generated@@9 (Real) T@U)
(declare-fun $generated@@10 (T@U) Real)
(declare-fun $generated@@11 (Bool) T@U)
(declare-fun $generated@@12 (RoundingMode) T@U)
(declare-fun $generated@@13 (T@U) RoundingMode)
(declare-fun $generated@@14 (String) T@U)
(declare-fun $generated@@15 (T@U) String)
(declare-fun $generated@@16 ((RegEx String)) T@U)
(declare-fun $generated@@17 (T@U) (RegEx String))
(declare-fun $generated@@44 (T@U T@U T@U) T@U)
(declare-fun $generated@@45 (T@U T@U T@U Bool) T@U)
(declare-fun $generated@@46 (T@T) T@T)
(declare-fun $generated@@47 () T@T)
(declare-fun $generated@@48 (T@T T@T) T@T)
(declare-fun $generated@@49 () T@T)
(declare-fun $generated@@50 (T@T) T@T)
(declare-fun $generated@@51 (T@U T@U) T@U)
(declare-fun $generated@@52 (T@U T@U) T@U)
(declare-fun $generated@@53 (T@T) T@T)
(declare-fun $generated@@54 (T@T) T@T)
(declare-fun $generated@@55 (T@U T@U T@U) T@U)
(declare-fun $generated@@56 (T@U T@U T@U) T@U)
(declare-fun $generated@@57 (T@T T@T) T@T)
(declare-fun $generated@@58 (T@T) T@T)
(declare-fun $generated@@59 (T@T) T@T)
(declare-fun $generated@@60 (T@U T@U T@U T@U) T@U)
(declare-fun $generated@@157 (Real) Real)
(declare-fun $generated@@159 (T@U) T@U)
(declare-fun $generated@@163 (T@U) T@U)
(declare-fun $generated@@164 (T@T T@U) T@U)
(declare-fun $generated@@165 () T@T)
(assert  (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (= ($generated@@1 $generated@@2) 0) (= ($generated@@1 $generated@@3) 1)) (= ($generated@@1 $generated@@4) 2)) (= ($generated@@1 $generated@@5) 3)) (= ($generated@@1 $generated@@6) 4)) (= ($generated@@1 $generated@@7) 5)) (forall (($generated@@18 Int) ) (! (= ($generated ($generated@@8 $generated@@18)) $generated@@18)
 :pattern ( ($generated@@8 $generated@@18))
))) (forall (($generated@@19 T@U) ) (!  (=> (= (type $generated@@19) $generated@@2) (= ($generated@@8 ($generated $generated@@19)) $generated@@19))
 :pattern ( ($generated $generated@@19))
))) (forall (($generated@@20 Int) ) (! (= (type ($generated@@8 $generated@@20)) $generated@@2)
 :pattern ( ($generated@@8 $generated@@20))
))) (forall (($generated@@21 Real) ) (! (= ($generated@@10 ($generated@@9 $generated@@21)) $generated@@21)
 :pattern ( ($generated@@9 $generated@@21))
))) (forall (($generated@@22 T@U) ) (!  (=> (= (type $generated@@22) $generated@@3) (= ($generated@@9 ($generated@@10 $generated@@22)) $generated@@22))
 :pattern ( ($generated@@10 $generated@@22))
))) (forall (($generated@@23 Real) ) (! (= (type ($generated@@9 $generated@@23)) $generated@@3)
 :pattern ( ($generated@@9 $generated@@23))
))) (forall (($generated@@24 Bool) ) (! (= ($generated@@0 ($generated@@11 $generated@@24)) $generated@@24)
 :pattern ( ($generated@@11 $generated@@24))
))) (forall (($generated@@25 T@U) ) (!  (=> (= (type $generated@@25) $generated@@4) (= ($generated@@11 ($generated@@0 $generated@@25)) $generated@@25))
 :pattern ( ($generated@@0 $generated@@25))
))) (forall (($generated@@26 Bool) ) (! (= (type ($generated@@11 $generated@@26)) $generated@@4)
 :pattern ( ($generated@@11 $generated@@26))
))) (forall (($generated@@27 RoundingMode) ) (! (= ($generated@@13 ($generated@@12 $generated@@27)) $generated@@27)
 :pattern ( ($generated@@12 $generated@@27))
))) (forall (($generated@@28 T@U) ) (!  (=> (= (type $generated@@28) $generated@@5) (= ($generated@@12 ($generated@@13 $generated@@28)) $generated@@28))
 :pattern ( ($generated@@13 $generated@@28))
))) (forall (($generated@@29 RoundingMode) ) (! (= (type ($generated@@12 $generated@@29)) $generated@@5)
 :pattern ( ($generated@@12 $generated@@29))
))) (forall (($generated@@30 String) ) (! (= ($generated@@15 ($generated@@14 $generated@@30)) $generated@@30)
 :pattern ( ($generated@@14 $generated@@30))
))) (forall (($generated@@31 T@U) ) (!  (=> (= (type $generated@@31) $generated@@6) (= ($generated@@14 ($generated@@15 $generated@@31)) $generated@@31))
 :pattern ( ($generated@@15 $generated@@31))
))) (forall (($generated@@32 String) ) (! (= (type ($generated@@14 $generated@@32)) $generated@@6)
 :pattern ( ($generated@@14 $generated@@32))
))) (forall (($generated@@33 (RegEx String)) ) (! (= ($generated@@17 ($generated@@16 $generated@@33)) $generated@@33)
 :pattern ( ($generated@@16 $generated@@33))
))) (forall (($generated@@34 T@U) ) (!  (=> (= (type $generated@@34) $generated@@7) (= ($generated@@16 ($generated@@17 $generated@@34)) $generated@@34))
 :pattern ( ($generated@@17 $generated@@34))
))) (forall (($generated@@35 (RegEx String)) ) (! (= (type ($generated@@16 $generated@@35)) $generated@@7)
 :pattern ( ($generated@@16 $generated@@35))
))))
(assert (forall (($generated@@36 T@U) ) (! (UOrdering2 $generated@@36 $generated@@36)
 :no-pattern ($generated $generated@@36)
 :no-pattern ($generated@@0 $generated@@36)
)))
(assert (forall (($generated@@37 T@U) ($generated@@38 T@U) ($generated@@39 T@U) ) (! (let (($generated@@40 (type $generated@@37)))
 (=> (and (and (= (type $generated@@38) $generated@@40) (= (type $generated@@39) $generated@@40)) (and (UOrdering2 $generated@@37 $generated@@38) (UOrdering2 $generated@@38 $generated@@39))) (UOrdering2 $generated@@37 $generated@@39)))
 :pattern ( (UOrdering2 $generated@@37 $generated@@38) (UOrdering2 $generated@@38 $generated@@39))
)))
(assert (forall (($generated@@41 T@U) ($generated@@42 T@U) ) (! (let (($generated@@43 (type $generated@@41)))
 (=> (= (type $generated@@42) $generated@@43) (=> (and (UOrdering2 $generated@@41 $generated@@42) (UOrdering2 $generated@@42 $generated@@41)) (= $generated@@41 $generated@@42))))
 :pattern ( (UOrdering2 $generated@@41 $generated@@42) (UOrdering2 $generated@@42 $generated@@41))
)))
(assert  (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (forall (($generated@@61 T@T) ($generated@@62 T@T) ) (= ($generated@@1 ($generated@@48 $generated@@61 $generated@@62)) 6)) (forall (($generated@@63 T@T) ($generated@@64 T@T) ) (! (= ($generated@@53 ($generated@@48 $generated@@63 $generated@@64)) $generated@@63)
 :pattern ( ($generated@@48 $generated@@63 $generated@@64))
))) (forall (($generated@@65 T@T) ($generated@@66 T@T) ) (! (= ($generated@@54 ($generated@@48 $generated@@65 $generated@@66)) $generated@@66)
 :pattern ( ($generated@@48 $generated@@65 $generated@@66))
))) (forall (($generated@@67 T@U) ($generated@@68 T@U) ) (! (let (($generated@@69 ($generated@@54 (type $generated@@67))))
(= (type ($generated@@52 $generated@@67 $generated@@68)) $generated@@69))
 :pattern ( ($generated@@52 $generated@@67 $generated@@68))
))) (forall (($generated@@70 T@U) ($generated@@71 T@U) ($generated@@72 T@U) ) (! (let (($generated@@73 (type $generated@@72)))
(let (($generated@@74 (type $generated@@71)))
(= (type ($generated@@55 $generated@@70 $generated@@71 $generated@@72)) ($generated@@48 $generated@@74 $generated@@73))))
 :pattern ( ($generated@@55 $generated@@70 $generated@@71 $generated@@72))
))) (forall (($generated@@75 T@U) ($generated@@76 T@U) ($generated@@77 T@U) ) (! (let (($generated@@78 ($generated@@54 (type $generated@@75))))
 (=> (= (type $generated@@77) $generated@@78) (= ($generated@@52 ($generated@@55 $generated@@75 $generated@@76 $generated@@77) $generated@@76) $generated@@77)))
 :weight 0
))) (and (forall (($generated@@79 T@U) ($generated@@80 T@U) ($generated@@81 T@U) ($generated@@82 T@U) ) (!  (or (= $generated@@81 $generated@@82) (= ($generated@@52 ($generated@@55 $generated@@80 $generated@@81 $generated@@79) $generated@@82) ($generated@@52 $generated@@80 $generated@@82)))
 :weight 0
)) (forall (($generated@@83 T@U) ($generated@@84 T@U) ($generated@@85 T@U) ($generated@@86 T@U) ) (!  (or true (= ($generated@@52 ($generated@@55 $generated@@84 $generated@@85 $generated@@83) $generated@@86) ($generated@@52 $generated@@84 $generated@@86)))
 :weight 0
)))) (forall (($generated@@87 T@T) ) (= ($generated@@1 ($generated@@50 $generated@@87)) 7))) (forall (($generated@@88 T@T) ) (! (= ($generated@@46 ($generated@@50 $generated@@88)) $generated@@88)
 :pattern ( ($generated@@50 $generated@@88))
))) (forall (($generated@@89 T@U) ($generated@@90 T@U) ) (! (let (($generated@@91 ($generated@@46 (type $generated@@90))))
(= (type ($generated@@51 $generated@@89 $generated@@90)) $generated@@91))
 :pattern ( ($generated@@51 $generated@@89 $generated@@90))
))) (= ($generated@@1 $generated@@49) 8)) (forall (($generated@@92 T@U) ($generated@@93 T@U) ($generated@@94 T@U) ) (! (= (type ($generated@@56 $generated@@92 $generated@@93 $generated@@94)) $generated@@49)
 :pattern ( ($generated@@56 $generated@@92 $generated@@93 $generated@@94))
))) (forall (($generated@@95 T@U) ($generated@@96 T@U) ($generated@@97 T@U) ) (! (let (($generated@@98 ($generated@@46 (type $generated@@96))))
 (=> (= (type $generated@@97) $generated@@98) (= ($generated@@51 ($generated@@56 $generated@@95 $generated@@96 $generated@@97) $generated@@96) $generated@@97)))
 :weight 0
))) (and (forall (($generated@@99 T@U) ($generated@@100 T@U) ($generated@@101 T@U) ($generated@@102 T@U) ) (!  (or (= $generated@@101 $generated@@102) (= ($generated@@51 ($generated@@56 $generated@@100 $generated@@101 $generated@@99) $generated@@102) ($generated@@51 $generated@@100 $generated@@102)))
 :weight 0
)) (forall (($generated@@103 T@U) ($generated@@104 T@U) ($generated@@105 T@U) ($generated@@106 T@U) ) (!  (or true (= ($generated@@51 ($generated@@56 $generated@@104 $generated@@105 $generated@@103) $generated@@106) ($generated@@51 $generated@@104 $generated@@106)))
 :weight 0
)))) (= ($generated@@1 $generated@@47) 9)) (forall (($generated@@107 T@T) ($generated@@108 T@T) ) (= ($generated@@1 ($generated@@57 $generated@@107 $generated@@108)) 10))) (forall (($generated@@109 T@T) ($generated@@110 T@T) ) (! (= ($generated@@58 ($generated@@57 $generated@@109 $generated@@110)) $generated@@109)
 :pattern ( ($generated@@57 $generated@@109 $generated@@110))
))) (forall (($generated@@111 T@T) ($generated@@112 T@T) ) (! (= ($generated@@59 ($generated@@57 $generated@@111 $generated@@112)) $generated@@112)
 :pattern ( ($generated@@57 $generated@@111 $generated@@112))
))) (forall (($generated@@113 T@U) ($generated@@114 T@U) ($generated@@115 T@U) ) (! (let (($generated@@116 ($generated@@59 (type $generated@@113))))
(= (type ($generated@@44 $generated@@113 $generated@@114 $generated@@115)) $generated@@116))
 :pattern ( ($generated@@44 $generated@@113 $generated@@114 $generated@@115))
))) (forall (($generated@@117 T@U) ($generated@@118 T@U) ($generated@@119 T@U) ($generated@@120 T@U) ) (! (let (($generated@@121 (type $generated@@120)))
(let (($generated@@122 (type $generated@@118)))
(= (type ($generated@@60 $generated@@117 $generated@@118 $generated@@119 $generated@@120)) ($generated@@57 $generated@@122 $generated@@121))))
 :pattern ( ($generated@@60 $generated@@117 $generated@@118 $generated@@119 $generated@@120))
))) (forall (($generated@@123 T@U) ($generated@@124 T@U) ($generated@@125 T@U) ($generated@@126 T@U) ) (! (let (($generated@@127 ($generated@@59 (type $generated@@123))))
 (=> (= (type $generated@@126) $generated@@127) (= ($generated@@44 ($generated@@60 $generated@@123 $generated@@124 $generated@@125 $generated@@126) $generated@@124 $generated@@125) $generated@@126)))
 :weight 0
))) (and (and (forall (($generated@@128 T@U) ($generated@@129 T@U) ($generated@@130 T@U) ($generated@@131 T@U) ($generated@@132 T@U) ($generated@@133 T@U) ) (!  (or (= $generated@@130 $generated@@132) (= ($generated@@44 ($generated@@60 $generated@@129 $generated@@130 $generated@@131 $generated@@128) $generated@@132 $generated@@133) ($generated@@44 $generated@@129 $generated@@132 $generated@@133)))
 :weight 0
)) (forall (($generated@@134 T@U) ($generated@@135 T@U) ($generated@@136 T@U) ($generated@@137 T@U) ($generated@@138 T@U) ($generated@@139 T@U) ) (!  (or (= $generated@@137 $generated@@139) (= ($generated@@44 ($generated@@60 $generated@@135 $generated@@136 $generated@@137 $generated@@134) $generated@@138 $generated@@139) ($generated@@44 $generated@@135 $generated@@138 $generated@@139)))
 :weight 0
))) (forall (($generated@@140 T@U) ($generated@@141 T@U) ($generated@@142 T@U) ($generated@@143 T@U) ($generated@@144 T@U) ($generated@@145 T@U) ) (!  (or true (= ($generated@@44 ($generated@@60 $generated@@141 $generated@@142 $generated@@143 $generated@@140) $generated@@144 $generated@@145) ($generated@@44 $generated@@141 $generated@@144 $generated@@145)))
 :weight 0
)))) (forall (($generated@@146 T@U) ($generated@@147 T@U) ($generated@@148 T@U) ($generated@@149 Bool) ) (! (= (type ($generated@@45 $generated@@146 $generated@@147 $generated@@148 $generated@@149)) ($generated@@57 $generated@@47 $generated@@4))
 :pattern ( ($generated@@45 $generated@@146 $generated@@147 $generated@@148 $generated@@149))
))))
(assert (forall (($generated@@150 T@U) ($generated@@151 T@U) ($generated@@152 T@U) ($generated@@153 Bool) ($generated@@154 T@U) ($generated@@155 T@U) ) (! (let (($generated@@156 ($generated@@46 (type $generated@@155))))
 (=> (and (and (and (and (= (type $generated@@150) $generated@@47) (= (type $generated@@151) ($generated@@48 $generated@@47 $generated@@49))) (= (type $generated@@152) ($generated@@50 $generated@@4))) (= (type $generated@@154) $generated@@47)) (= (type $generated@@155) ($generated@@50 $generated@@156))) (= ($generated@@0 ($generated@@44 ($generated@@45 $generated@@150 $generated@@151 $generated@@152 $generated@@153) $generated@@154 $generated@@155))  (=> (and (not (= $generated@@154 $generated@@150)) ($generated@@0 ($generated@@51 ($generated@@52 $generated@@151 $generated@@154) $generated@@152))) $generated@@153))))
 :pattern ( ($generated@@44 ($generated@@45 $generated@@150 $generated@@151 $generated@@152 $generated@@153) $generated@@154 $generated@@155))
)))
(assert (forall (($generated@@158 Real) ) (! (= ($generated@@157 $generated@@158) $generated@@158)
 :pattern ( ($generated@@157 $generated@@158))
)))
(assert (forall (($generated@@160 T@U) ) (! (let (($generated@@161 (type $generated@@160)))
(= (type ($generated@@159 $generated@@160)) $generated@@161))
 :pattern ( ($generated@@159 $generated@@160))
)))
(assert (forall (($generated@@162 T@U) ) (! (= ($generated@@159 $generated@@162) $generated@@162)
 :pattern ( ($generated@@159 $generated@@162))
)))
(assert  (and (and (= ($generated@@1 $generated@@165) 11) (forall (($generated@@166 T@U) ) (! (= (type ($generated@@163 $generated@@166)) $generated@@165)
 :pattern ( ($generated@@163 $generated@@166))
))) (forall (($generated@@167 T@T) ($generated@@168 T@U) ) (! (= (type ($generated@@164 $generated@@167 $generated@@168)) $generated@@167)
 :pattern ( ($generated@@164 $generated@@167 $generated@@168))
))))
(assert (forall (($generated@@169 T@U) ) (! (let (($generated@@170 (type $generated@@169)))
(= ($generated@@164 $generated@@170 ($generated@@163 $generated@@169)) $generated@@169))
 :pattern ( ($generated@@163 $generated@@169))
)))
(assert (forall (($generated@@171 Real) ) (! (= ($generated@@163 ($generated@@9 ($generated@@157 $generated@@171))) ($generated@@159 ($generated@@163 ($generated@@9 $generated@@171))))
 :pattern ( ($generated@@163 ($generated@@9 ($generated@@157 $generated@@171))))
)))
(assert (forall (($generated@@172 T@U) ) (! (= ($generated@@163 ($generated@@159 $generated@@172)) ($generated@@159 ($generated@@163 $generated@@172)))
 :pattern ( ($generated@@163 ($generated@@159 $generated@@172)))
)))
(push 1)
(declare-fun ControlFlow (Int Int) Int)
(declare-fun $generated@@173 () Real)
(declare-fun $generated@@174 () T@U)
(declare-fun $generated@@175 () T@U)
(declare-fun $generated@@176 () T@U)
(declare-fun $generated@@177 () T@U)
(declare-fun $generated@@178 (T@U) Bool)
(declare-fun $generated@@179 (T@U) Bool)
(declare-fun $generated@@180 () Int)
(assert  (and (and (and (= (type $generated@@174) ($generated@@57 $generated@@47 $generated@@4)) (= (type $generated@@175) $generated@@47)) (= (type $generated@@176) ($generated@@48 $generated@@47 $generated@@49))) (= (type $generated@@177) ($generated@@50 $generated@@4))))
(set-option :timeout 0)
(set-option :rlimit 0)
(assert (not
 (=> (= (ControlFlow 0 0) 9) (let (($generated@@181 true))
(let (($generated@@182  (=> (and (< $generated@@173 ($generated@@157 10.0)) (= (ControlFlow 0 6) 4)) $generated@@181)))
(let (($generated@@183  (=> (and (<= ($generated@@157 10.0) $generated@@173) (= (ControlFlow 0 5) 4)) $generated@@181)))
(let (($generated@@184  (=> (not (= $generated@@173 ($generated@@157 0.0))) (and (=> (= (ControlFlow 0 7) 5) $generated@@183) (=> (= (ControlFlow 0 7) 6) $generated@@182)))))
(let (($generated@@185 true))
(let (($generated@@186  (=> (= (ControlFlow 0 2) (- 0 1)) (or (= ($generated@@157 0.0) ($generated@@157 0.0)) (and (<= ($generated@@157 10.0) ($generated@@157 0.0)) (<= ($generated@@157 0.0) ($generated@@157 20.0)))))))
(let (($generated@@187  (=> (= $generated@@174 ($generated@@45 $generated@@175 $generated@@176 $generated@@177 false)) (and (and (=> (= (ControlFlow 0 8) 2) $generated@@186) (=> (= (ControlFlow 0 8) 3) $generated@@185)) (=> (= (ControlFlow 0 8) 7) $generated@@184)))))
(let (($generated@@188  (=> (and (and ($generated@@178 $generated@@176) ($generated@@179 $generated@@176)) (and (= 0 $generated@@180) (= (ControlFlow 0 9) 8))) $generated@@187)))
$generated@@188)))))))))
))
(check-sat)
(pop 1)
; Valid
(get-info :rlimit)
(reset)
(set-option :rlimit 0)
; did a full reset
(reset)
(set-option :print-success false)
(set-info :smt-lib-version 2.6)
(set-option :auto_config false)
(set-option :type_check true)
(set-option :smt.case_split 3)
(set-option :smt.qi.eager_threshold 100)
(set-option :smt.delay_units true)
(set-option :smt.arith.solver 2)
(set-option :smt.mbqi false)
(set-option :model.compact false)
(set-option :model.v2 true)
(set-option :pp.bv_literals false)
; done setting options


(set-info :category "industrial")
(declare-sort |T@U| 0)
(declare-sort |T@T| 0)
(declare-fun real_pow (Real Real) Real)
(declare-fun UOrdering2 (|T@U| |T@U|) Bool)
(declare-fun UOrdering3 (|T@T| |T@U| |T@U|) Bool)
(declare-fun tickleBool (Bool) Bool)
(assert (and (tickleBool true) (tickleBool false)))
(declare-fun $generated (T@U) Int)
(declare-fun $generated@@0 (T@U) Bool)
(declare-fun $generated@@1 (T@T) Int)
(declare-fun $generated@@2 () T@T)
(declare-fun $generated@@3 () T@T)
(declare-fun $generated@@4 () T@T)
(declare-fun $generated@@5 () T@T)
(declare-fun $generated@@6 () T@T)
(declare-fun $generated@@7 () T@T)
(declare-fun $generated@@8 (Int) T@U)
(declare-fun type (T@U) T@T)
(declare-fun $generated@@9 (Real) T@U)
(declare-fun $generated@@10 (T@U) Real)
(declare-fun $generated@@11 (Bool) T@U)
(declare-fun $generated@@12 (RoundingMode) T@U)
(declare-fun $generated@@13 (T@U) RoundingMode)
(declare-fun $generated@@14 (String) T@U)
(declare-fun $generated@@15 (T@U) String)
(declare-fun $generated@@16 ((RegEx String)) T@U)
(declare-fun $generated@@17 (T@U) (RegEx String))
(declare-fun $generated@@44 (T@U T@U T@U) T@U)
(declare-fun $generated@@45 (T@U T@U T@U Bool) T@U)
(declare-fun $generated@@46 (T@T) T@T)
(declare-fun $generated@@47 () T@T)
(declare-fun $generated@@48 (T@T T@T) T@T)
(declare-fun $generated@@49 () T@T)
(declare-fun $generated@@50 (T@T) T@T)
(declare-fun $generated@@51 (T@U T@U) T@U)
(declare-fun $generated@@52 (T@U T@U) T@U)
(declare-fun $generated@@53 (T@T) T@T)
(declare-fun $generated@@54 (T@T) T@T)
(declare-fun $generated@@55 (T@U T@U T@U) T@U)
(declare-fun $generated@@56 (T@U T@U T@U) T@U)
(declare-fun $generated@@57 (T@T T@T) T@T)
(declare-fun $generated@@58 (T@T) T@T)
(declare-fun $generated@@59 (T@T) T@T)
(declare-fun $generated@@60 (T@U T@U T@U T@U) T@U)
(declare-fun $generated@@157 (Int) Int)
(declare-fun $generated@@159 (T@U) T@U)
(declare-fun $generated@@163 (T@U) T@U)
(declare-fun $generated@@164 (T@T T@U) T@U)
(declare-fun $generated@@165 () T@T)
(assert  (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (= ($generated@@1 $generated@@2) 0) (= ($generated@@1 $generated@@3) 1)) (= ($generated@@1 $generated@@4) 2)) (= ($generated@@1 $generated@@5) 3)) (= ($generated@@1 $generated@@6) 4)) (= ($generated@@1 $generated@@7) 5)) (forall (($generated@@18 Int) ) (! (= ($generated ($generated@@8 $generated@@18)) $generated@@18)
 :pattern ( ($generated@@8 $generated@@18))
))) (forall (($generated@@19 T@U) ) (!  (=> (= (type $generated@@19) $generated@@2) (= ($generated@@8 ($generated $generated@@19)) $generated@@19))
 :pattern ( ($generated $generated@@19))
))) (forall (($generated@@20 Int) ) (! (= (type ($generated@@8 $generated@@20)) $generated@@2)
 :pattern ( ($generated@@8 $generated@@20))
))) (forall (($generated@@21 Real) ) (! (= ($generated@@10 ($generated@@9 $generated@@21)) $generated@@21)
 :pattern ( ($generated@@9 $generated@@21))
))) (forall (($generated@@22 T@U) ) (!  (=> (= (type $generated@@22) $generated@@3) (= ($generated@@9 ($generated@@10 $generated@@22)) $generated@@22))
 :pattern ( ($generated@@10 $generated@@22))
))) (forall (($generated@@23 Real) ) (! (= (type ($generated@@9 $generated@@23)) $generated@@3)
 :pattern ( ($generated@@9 $generated@@23))
))) (forall (($generated@@24 Bool) ) (! (= ($generated@@0 ($generated@@11 $generated@@24)) $generated@@24)
 :pattern ( ($generated@@11 $generated@@24))
))) (forall (($generated@@25 T@U) ) (!  (=> (= (type $generated@@25) $generated@@4) (= ($generated@@11 ($generated@@0 $generated@@25)) $generated@@25))
 :pattern ( ($generated@@0 $generated@@25))
))) (forall (($generated@@26 Bool) ) (! (= (type ($generated@@11 $generated@@26)) $generated@@4)
 :pattern ( ($generated@@11 $generated@@26))
))) (forall (($generated@@27 RoundingMode) ) (! (= ($generated@@13 ($generated@@12 $generated@@27)) $generated@@27)
 :pattern ( ($generated@@12 $generated@@27))
))) (forall (($generated@@28 T@U) ) (!  (=> (= (type $generated@@28) $generated@@5) (= ($generated@@12 ($generated@@13 $generated@@28)) $generated@@28))
 :pattern ( ($generated@@13 $generated@@28))
))) (forall (($generated@@29 RoundingMode) ) (! (= (type ($generated@@12 $generated@@29)) $generated@@5)
 :pattern ( ($generated@@12 $generated@@29))
))) (forall (($generated@@30 String) ) (! (= ($generated@@15 ($generated@@14 $generated@@30)) $generated@@30)
 :pattern ( ($generated@@14 $generated@@30))
))) (forall (($generated@@31 T@U) ) (!  (=> (= (type $generated@@31) $generated@@6) (= ($generated@@14 ($generated@@15 $generated@@31)) $generated@@31))
 :pattern ( ($generated@@15 $generated@@31))
))) (forall (($generated@@32 String) ) (! (= (type ($generated@@14 $generated@@32)) $generated@@6)
 :pattern ( ($generated@@14 $generated@@32))
))) (forall (($generated@@33 (RegEx String)) ) (! (= ($generated@@17 ($generated@@16 $generated@@33)) $generated@@33)
 :pattern ( ($generated@@16 $generated@@33))
))) (forall (($generated@@34 T@U) ) (!  (=> (= (type $generated@@34) $generated@@7) (= ($generated@@16 ($generated@@17 $generated@@34)) $generated@@34))
 :pattern ( ($generated@@17 $generated@@34))
))) (forall (($generated@@35 (RegEx String)) ) (! (= (type ($generated@@16 $generated@@35)) $generated@@7)
 :pattern ( ($generated@@16 $generated@@35))
))))
(assert (forall (($generated@@36 T@U) ) (! (UOrdering2 $generated@@36 $generated@@36)
 :no-pattern ($generated $generated@@36)
 :no-pattern ($generated@@0 $generated@@36)
)))
(assert (forall (($generated@@37 T@U) ($generated@@38 T@U) ($generated@@39 T@U) ) (! (let (($generated@@40 (type $generated@@37)))
 (=> (and (and (= (type $generated@@38) $generated@@40) (= (type $generated@@39) $generated@@40)) (and (UOrdering2 $generated@@37 $generated@@38) (UOrdering2 $generated@@38 $generated@@39))) (UOrdering2 $generated@@37 $generated@@39)))
 :pattern ( (UOrdering2 $generated@@37 $generated@@38) (UOrdering2 $generated@@38 $generated@@39))
)))
(assert (forall (($generated@@41 T@U) ($generated@@42 T@U) ) (! (let (($generated@@43 (type $generated@@41)))
 (=> (= (type $generated@@42) $generated@@43) (=> (and (UOrdering2 $generated@@41 $generated@@42) (UOrdering2 $generated@@42 $generated@@41)) (= $generated@@41 $generated@@42))))
 :pattern ( (UOrdering2 $generated@@41 $generated@@42) (UOrdering2 $generated@@42 $generated@@41))
)))
(assert  (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (forall (($generated@@61 T@T) ($generated@@62 T@T) ) (= ($generated@@1 ($generated@@48 $generated@@61 $generated@@62)) 6)) (forall (($generated@@63 T@T) ($generated@@64 T@T) ) (! (= ($generated@@53 ($generated@@48 $generated@@63 $generated@@64)) $generated@@63)
 :pattern ( ($generated@@48 $generated@@63 $generated@@64))
))) (forall (($generated@@65 T@T) ($generated@@66 T@T) ) (! (= ($generated@@54 ($generated@@48 $generated@@65 $generated@@66)) $generated@@66)
 :pattern ( ($generated@@48 $generated@@65 $generated@@66))
))) (forall (($generated@@67 T@U) ($generated@@68 T@U) ) (! (let (($generated@@69 ($generated@@54 (type $generated@@67))))
(= (type ($generated@@52 $generated@@67 $generated@@68)) $generated@@69))
 :pattern ( ($generated@@52 $generated@@67 $generated@@68))
))) (forall (($generated@@70 T@U) ($generated@@71 T@U) ($generated@@72 T@U) ) (! (let (($generated@@73 (type $generated@@72)))
(let (($generated@@74 (type $generated@@71)))
(= (type ($generated@@55 $generated@@70 $generated@@71 $generated@@72)) ($generated@@48 $generated@@74 $generated@@73))))
 :pattern ( ($generated@@55 $generated@@70 $generated@@71 $generated@@72))
))) (forall (($generated@@75 T@U) ($generated@@76 T@U) ($generated@@77 T@U) ) (! (let (($generated@@78 ($generated@@54 (type $generated@@75))))
 (=> (= (type $generated@@77) $generated@@78) (= ($generated@@52 ($generated@@55 $generated@@75 $generated@@76 $generated@@77) $generated@@76) $generated@@77)))
 :weight 0
))) (and (forall (($generated@@79 T@U) ($generated@@80 T@U) ($generated@@81 T@U) ($generated@@82 T@U) ) (!  (or (= $generated@@81 $generated@@82) (= ($generated@@52 ($generated@@55 $generated@@80 $generated@@81 $generated@@79) $generated@@82) ($generated@@52 $generated@@80 $generated@@82)))
 :weight 0
)) (forall (($generated@@83 T@U) ($generated@@84 T@U) ($generated@@85 T@U) ($generated@@86 T@U) ) (!  (or true (= ($generated@@52 ($generated@@55 $generated@@84 $generated@@85 $generated@@83) $generated@@86) ($generated@@52 $generated@@84 $generated@@86)))
 :weight 0
)))) (forall (($generated@@87 T@T) ) (= ($generated@@1 ($generated@@50 $generated@@87)) 7))) (forall (($generated@@88 T@T) ) (! (= ($generated@@46 ($generated@@50 $generated@@88)) $generated@@88)
 :pattern ( ($generated@@50 $generated@@88))
))) (forall (($generated@@89 T@U) ($generated@@90 T@U) ) (! (let (($generated@@91 ($generated@@46 (type $generated@@90))))
(= (type ($generated@@51 $generated@@89 $generated@@90)) $generated@@91))
 :pattern ( ($generated@@51 $generated@@89 $generated@@90))
))) (= ($generated@@1 $generated@@49) 8)) (forall (($generated@@92 T@U) ($generated@@93 T@U) ($generated@@94 T@U) ) (! (= (type ($generated@@56 $generated@@92 $generated@@93 $generated@@94)) $generated@@49)
 :pattern ( ($generated@@56 $generated@@92 $generated@@93 $generated@@94))
))) (forall (($generated@@95 T@U) ($generated@@96 T@U) ($generated@@97 T@U) ) (! (let (($generated@@98 ($generated@@46 (type $generated@@96))))
 (=> (= (type $generated@@97) $generated@@98) (= ($generated@@51 ($generated@@56 $generated@@95 $generated@@96 $generated@@97) $generated@@96) $generated@@97)))
 :weight 0
))) (and (forall (($generated@@99 T@U) ($generated@@100 T@U) ($generated@@101 T@U) ($generated@@102 T@U) ) (!  (or (= $generated@@101 $generated@@102) (= ($generated@@51 ($generated@@56 $generated@@100 $generated@@101 $generated@@99) $generated@@102) ($generated@@51 $generated@@100 $generated@@102)))
 :weight 0
)) (forall (($generated@@103 T@U) ($generated@@104 T@U) ($generated@@105 T@U) ($generated@@106 T@U) ) (!  (or true (= ($generated@@51 ($generated@@56 $generated@@104 $generated@@105 $generated@@103) $generated@@106) ($generated@@51 $generated@@104 $generated@@106)))
 :weight 0
)))) (= ($generated@@1 $generated@@47) 9)) (forall (($generated@@107 T@T) ($generated@@108 T@T) ) (= ($generated@@1 ($generated@@57 $generated@@107 $generated@@108)) 10))) (forall (($generated@@109 T@T) ($generated@@110 T@T) ) (! (= ($generated@@58 ($generated@@57 $generated@@109 $generated@@110)) $generated@@109)
 :pattern ( ($generated@@57 $generated@@109 $generated@@110))
))) (forall (($generated@@111 T@T) ($generated@@112 T@T) ) (! (= ($generated@@59 ($generated@@57 $generated@@111 $generated@@112)) $generated@@112)
 :pattern ( ($generated@@57 $generated@@111 $generated@@112))
))) (forall (($generated@@113 T@U) ($generated@@114 T@U) ($generated@@115 T@U) ) (! (let (($generated@@116 ($generated@@59 (type $generated@@113))))
(= (type ($generated@@44 $generated@@113 $generated@@114 $generated@@115)) $generated@@116))
 :pattern ( ($generated@@44 $generated@@113 $generated@@114 $generated@@115))
))) (forall (($generated@@117 T@U) ($generated@@118 T@U) ($generated@@119 T@U) ($generated@@120 T@U) ) (! (let (($generated@@121 (type $generated@@120)))
(let (($generated@@122 (type $generated@@118)))
(= (type ($generated@@60 $generated@@117 $generated@@118 $generated@@119 $generated@@120)) ($generated@@57 $generated@@122 $generated@@121))))
 :pattern ( ($generated@@60 $generated@@117 $generated@@118 $generated@@119 $generated@@120))
))) (forall (($generated@@123 T@U) ($generated@@124 T@U) ($generated@@125 T@U) ($generated@@126 T@U) ) (! (let (($generated@@127 ($generated@@59 (type $generated@@123))))
 (=> (= (type $generated@@126) $generated@@127) (= ($generated@@44 ($generated@@60 $generated@@123 $generated@@124 $generated@@125 $generated@@126) $generated@@124 $generated@@125) $generated@@126)))
 :weight 0
))) (and (and (forall (($generated@@128 T@U) ($generated@@129 T@U) ($generated@@130 T@U) ($generated@@131 T@U) ($generated@@132 T@U) ($generated@@133 T@U) ) (!  (or (= $generated@@130 $generated@@132) (= ($generated@@44 ($generated@@60 $generated@@129 $generated@@130 $generated@@131 $generated@@128) $generated@@132 $generated@@133) ($generated@@44 $generated@@129 $generated@@132 $generated@@133)))
 :weight 0
)) (forall (($generated@@134 T@U) ($generated@@135 T@U) ($generated@@136 T@U) ($generated@@137 T@U) ($generated@@138 T@U) ($generated@@139 T@U) ) (!  (or (= $generated@@137 $generated@@139) (= ($generated@@44 ($generated@@60 $generated@@135 $generated@@136 $generated@@137 $generated@@134) $generated@@138 $generated@@139) ($generated@@44 $generated@@135 $generated@@138 $generated@@139)))
 :weight 0
))) (forall (($generated@@140 T@U) ($generated@@141 T@U) ($generated@@142 T@U) ($generated@@143 T@U) ($generated@@144 T@U) ($generated@@145 T@U) ) (!  (or true (= ($generated@@44 ($generated@@60 $generated@@141 $generated@@142 $generated@@143 $generated@@140) $generated@@144 $generated@@145) ($generated@@44 $generated@@141 $generated@@144 $generated@@145)))
 :weight 0
)))) (forall (($generated@@146 T@U) ($generated@@147 T@U) ($generated@@148 T@U) ($generated@@149 Bool) ) (! (= (type ($generated@@45 $generated@@146 $generated@@147 $generated@@148 $generated@@149)) ($generated@@57 $generated@@47 $generated@@4))
 :pattern ( ($generated@@45 $generated@@146 $generated@@147 $generated@@148 $generated@@149))
))))
(assert (forall (($generated@@150 T@U) ($generated@@151 T@U) ($generated@@152 T@U) ($generated@@153 Bool) ($generated@@154 T@U) ($generated@@155 T@U) ) (! (let (($generated@@156 ($generated@@46 (type $generated@@155))))
 (=> (and (and (and (and (= (type $generated@@150) $generated@@47) (= (type $generated@@151) ($generated@@48 $generated@@47 $generated@@49))) (= (type $generated@@152) ($generated@@50 $generated@@4))) (= (type $generated@@154) $generated@@47)) (= (type $generated@@155) ($generated@@50 $generated@@156))) (= ($generated@@0 ($generated@@44 ($generated@@45 $generated@@150 $generated@@151 $generated@@152 $generated@@153) $generated@@154 $generated@@155))  (=> (and (not (= $generated@@154 $generated@@150)) ($generated@@0 ($generated@@51 ($generated@@52 $generated@@151 $generated@@154) $generated@@152))) $generated@@153))))
 :pattern ( ($generated@@44 ($generated@@45 $generated@@150 $generated@@151 $generated@@152 $generated@@153) $generated@@154 $generated@@155))
)))
(assert (forall (($generated@@158 Int) ) (! (= ($generated@@157 $generated@@158) $generated@@158)
 :pattern ( ($generated@@157 $generated@@158))
)))
(assert (forall (($generated@@160 T@U) ) (! (let (($generated@@161 (type $generated@@160)))
(= (type ($generated@@159 $generated@@160)) $generated@@161))
 :pattern ( ($generated@@159 $generated@@160))
)))
(assert (forall (($generated@@162 T@U) ) (! (= ($generated@@159 $generated@@162) $generated@@162)
 :pattern ( ($generated@@159 $generated@@162))
)))
(assert  (and (and (= ($generated@@1 $generated@@165) 11) (forall (($generated@@166 T@U) ) (! (= (type ($generated@@163 $generated@@166)) $generated@@165)
 :pattern ( ($generated@@163 $generated@@166))
))) (forall (($generated@@167 T@T) ($generated@@168 T@U) ) (! (= (type ($generated@@164 $generated@@167 $generated@@168)) $generated@@167)
 :pattern ( ($generated@@164 $generated@@167 $generated@@168))
))))
(assert (forall (($generated@@169 T@U) ) (! (let (($generated@@170 (type $generated@@169)))
(= ($generated@@164 $generated@@170 ($generated@@163 $generated@@169)) $generated@@169))
 :pattern ( ($generated@@163 $generated@@169))
)))
(assert (forall (($generated@@171 Int) ) (! (= ($generated@@163 ($generated@@8 ($generated@@157 $generated@@171))) ($generated@@159 ($generated@@163 ($generated@@8 $generated@@171))))
 :pattern ( ($generated@@163 ($generated@@8 ($generated@@157 $generated@@171))))
)))
(assert (forall (($generated@@172 T@U) ) (! (= ($generated@@163 ($generated@@159 $generated@@172)) ($generated@@159 ($generated@@163 $generated@@172)))
 :pattern ( ($generated@@163 ($generated@@159 $generated@@172)))
)))
(push 1)
(declare-fun ControlFlow (Int Int) Int)
(declare-fun $generated@@173 () T@U)
(declare-fun $generated@@174 () T@U)
(declare-fun $generated@@175 () T@U)
(declare-fun $generated@@176 () T@U)
(declare-fun $generated@@177 (T@U) Bool)
(declare-fun $generated@@178 (T@U) Bool)
(declare-fun $generated@@179 () Int)
(assert  (and (and (and (= (type $generated@@173) ($generated@@57 $generated@@47 $generated@@4)) (= (type $generated@@174) $generated@@47)) (= (type $generated@@175) ($generated@@48 $generated@@47 $generated@@49))) (= (type $generated@@176) ($generated@@50 $generated@@4))))
(set-option :timeout 0)
(set-option :rlimit 0)
(assert (not
 (=> (= (ControlFlow 0 0) 5) (let (($generated@@180  (=> (= (ControlFlow 0 3) (- 0 2)) (<= ($generated@@157 0) ($generated@@157 0)))))
(let (($generated@@181 true))
(let (($generated@@182  (=> (= $generated@@173 ($generated@@45 $generated@@174 $generated@@175 $generated@@176 false)) (and (=> (= (ControlFlow 0 4) 1) $generated@@181) (=> (= (ControlFlow 0 4) 3) $generated@@180)))))
(let (($generated@@183  (=> (and (and ($generated@@177 $generated@@175) ($generated@@178 $generated@@175)) (and (= 0 $generated@@179) (= (ControlFlow 0 5) 4))) $generated@@182)))
$generated@@183)))))
))
(check-sat)
(pop 1)
; Valid
(get-info :rlimit)
(reset)
(set-option :rlimit 0)
; did a full reset
(reset)
(set-option :print-success false)
(set-info :smt-lib-version 2.6)
(set-option :auto_config false)
(set-option :type_check true)
(set-option :smt.case_split 3)
(set-option :smt.qi.eager_threshold 100)
(set-option :smt.delay_units true)
(set-option :smt.arith.solver 2)
(set-option :smt.mbqi false)
(set-option :model.compact false)
(set-option :model.v2 true)
(set-option :pp.bv_literals false)
; done setting options


(set-info :category "industrial")
(declare-sort |T@U| 0)
(declare-sort |T@T| 0)
(declare-fun real_pow (Real Real) Real)
(declare-fun UOrdering2 (|T@U| |T@U|) Bool)
(declare-fun UOrdering3 (|T@T| |T@U| |T@U|) Bool)
(declare-fun tickleBool (Bool) Bool)
(assert (and (tickleBool true) (tickleBool false)))
(declare-fun $generated (T@U) Int)
(declare-fun $generated@@0 (T@U) Bool)
(declare-fun $generated@@1 (T@T) Int)
(declare-fun $generated@@2 () T@T)
(declare-fun $generated@@3 () T@T)
(declare-fun $generated@@4 () T@T)
(declare-fun $generated@@5 () T@T)
(declare-fun $generated@@6 () T@T)
(declare-fun $generated@@7 () T@T)
(declare-fun $generated@@8 (Int) T@U)
(declare-fun type (T@U) T@T)
(declare-fun $generated@@9 (Real) T@U)
(declare-fun $generated@@10 (T@U) Real)
(declare-fun $generated@@11 (Bool) T@U)
(declare-fun $generated@@12 (RoundingMode) T@U)
(declare-fun $generated@@13 (T@U) RoundingMode)
(declare-fun $generated@@14 (String) T@U)
(declare-fun $generated@@15 (T@U) String)
(declare-fun $generated@@16 ((RegEx String)) T@U)
(declare-fun $generated@@17 (T@U) (RegEx String))
(declare-fun $generated@@44 (T@U T@U T@U) T@U)
(declare-fun $generated@@45 (T@U T@U T@U Bool) T@U)
(declare-fun $generated@@46 (T@T) T@T)
(declare-fun $generated@@47 () T@T)
(declare-fun $generated@@48 (T@T T@T) T@T)
(declare-fun $generated@@49 () T@T)
(declare-fun $generated@@50 (T@T) T@T)
(declare-fun $generated@@51 (T@U T@U) T@U)
(declare-fun $generated@@52 (T@U T@U) T@U)
(declare-fun $generated@@53 (T@T) T@T)
(declare-fun $generated@@54 (T@T) T@T)
(declare-fun $generated@@55 (T@U T@U T@U) T@U)
(declare-fun $generated@@56 (T@U T@U T@U) T@U)
(declare-fun $generated@@57 (T@T T@T) T@T)
(declare-fun $generated@@58 (T@T) T@T)
(declare-fun $generated@@59 (T@T) T@T)
(declare-fun $generated@@60 (T@U T@U T@U T@U) T@U)
(declare-fun $generated@@157 (Int) Int)
(declare-fun $generated@@159 (T@U) T@U)
(declare-fun $generated@@163 (Int Int) Int)
(declare-fun $generated@@166 (T@U) T@U)
(declare-fun $generated@@167 (T@T T@U) T@U)
(declare-fun $generated@@168 () T@T)
(assert  (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (= ($generated@@1 $generated@@2) 0) (= ($generated@@1 $generated@@3) 1)) (= ($generated@@1 $generated@@4) 2)) (= ($generated@@1 $generated@@5) 3)) (= ($generated@@1 $generated@@6) 4)) (= ($generated@@1 $generated@@7) 5)) (forall (($generated@@18 Int) ) (! (= ($generated ($generated@@8 $generated@@18)) $generated@@18)
 :pattern ( ($generated@@8 $generated@@18))
))) (forall (($generated@@19 T@U) ) (!  (=> (= (type $generated@@19) $generated@@2) (= ($generated@@8 ($generated $generated@@19)) $generated@@19))
 :pattern ( ($generated $generated@@19))
))) (forall (($generated@@20 Int) ) (! (= (type ($generated@@8 $generated@@20)) $generated@@2)
 :pattern ( ($generated@@8 $generated@@20))
))) (forall (($generated@@21 Real) ) (! (= ($generated@@10 ($generated@@9 $generated@@21)) $generated@@21)
 :pattern ( ($generated@@9 $generated@@21))
))) (forall (($generated@@22 T@U) ) (!  (=> (= (type $generated@@22) $generated@@3) (= ($generated@@9 ($generated@@10 $generated@@22)) $generated@@22))
 :pattern ( ($generated@@10 $generated@@22))
))) (forall (($generated@@23 Real) ) (! (= (type ($generated@@9 $generated@@23)) $generated@@3)
 :pattern ( ($generated@@9 $generated@@23))
))) (forall (($generated@@24 Bool) ) (! (= ($generated@@0 ($generated@@11 $generated@@24)) $generated@@24)
 :pattern ( ($generated@@11 $generated@@24))
))) (forall (($generated@@25 T@U) ) (!  (=> (= (type $generated@@25) $generated@@4) (= ($generated@@11 ($generated@@0 $generated@@25)) $generated@@25))
 :pattern ( ($generated@@0 $generated@@25))
))) (forall (($generated@@26 Bool) ) (! (= (type ($generated@@11 $generated@@26)) $generated@@4)
 :pattern ( ($generated@@11 $generated@@26))
))) (forall (($generated@@27 RoundingMode) ) (! (= ($generated@@13 ($generated@@12 $generated@@27)) $generated@@27)
 :pattern ( ($generated@@12 $generated@@27))
))) (forall (($generated@@28 T@U) ) (!  (=> (= (type $generated@@28) $generated@@5) (= ($generated@@12 ($generated@@13 $generated@@28)) $generated@@28))
 :pattern ( ($generated@@13 $generated@@28))
))) (forall (($generated@@29 RoundingMode) ) (! (= (type ($generated@@12 $generated@@29)) $generated@@5)
 :pattern ( ($generated@@12 $generated@@29))
))) (forall (($generated@@30 String) ) (! (= ($generated@@15 ($generated@@14 $generated@@30)) $generated@@30)
 :pattern ( ($generated@@14 $generated@@30))
))) (forall (($generated@@31 T@U) ) (!  (=> (= (type $generated@@31) $generated@@6) (= ($generated@@14 ($generated@@15 $generated@@31)) $generated@@31))
 :pattern ( ($generated@@15 $generated@@31))
))) (forall (($generated@@32 String) ) (! (= (type ($generated@@14 $generated@@32)) $generated@@6)
 :pattern ( ($generated@@14 $generated@@32))
))) (forall (($generated@@33 (RegEx String)) ) (! (= ($generated@@17 ($generated@@16 $generated@@33)) $generated@@33)
 :pattern ( ($generated@@16 $generated@@33))
))) (forall (($generated@@34 T@U) ) (!  (=> (= (type $generated@@34) $generated@@7) (= ($generated@@16 ($generated@@17 $generated@@34)) $generated@@34))
 :pattern ( ($generated@@17 $generated@@34))
))) (forall (($generated@@35 (RegEx String)) ) (! (= (type ($generated@@16 $generated@@35)) $generated@@7)
 :pattern ( ($generated@@16 $generated@@35))
))))
(assert (forall (($generated@@36 T@U) ) (! (UOrdering2 $generated@@36 $generated@@36)
 :no-pattern ($generated $generated@@36)
 :no-pattern ($generated@@0 $generated@@36)
)))
(assert (forall (($generated@@37 T@U) ($generated@@38 T@U) ($generated@@39 T@U) ) (! (let (($generated@@40 (type $generated@@37)))
 (=> (and (and (= (type $generated@@38) $generated@@40) (= (type $generated@@39) $generated@@40)) (and (UOrdering2 $generated@@37 $generated@@38) (UOrdering2 $generated@@38 $generated@@39))) (UOrdering2 $generated@@37 $generated@@39)))
 :pattern ( (UOrdering2 $generated@@37 $generated@@38) (UOrdering2 $generated@@38 $generated@@39))
)))
(assert (forall (($generated@@41 T@U) ($generated@@42 T@U) ) (! (let (($generated@@43 (type $generated@@41)))
 (=> (= (type $generated@@42) $generated@@43) (=> (and (UOrdering2 $generated@@41 $generated@@42) (UOrdering2 $generated@@42 $generated@@41)) (= $generated@@41 $generated@@42))))
 :pattern ( (UOrdering2 $generated@@41 $generated@@42) (UOrdering2 $generated@@42 $generated@@41))
)))
(assert  (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (forall (($generated@@61 T@T) ($generated@@62 T@T) ) (= ($generated@@1 ($generated@@48 $generated@@61 $generated@@62)) 6)) (forall (($generated@@63 T@T) ($generated@@64 T@T) ) (! (= ($generated@@53 ($generated@@48 $generated@@63 $generated@@64)) $generated@@63)
 :pattern ( ($generated@@48 $generated@@63 $generated@@64))
))) (forall (($generated@@65 T@T) ($generated@@66 T@T) ) (! (= ($generated@@54 ($generated@@48 $generated@@65 $generated@@66)) $generated@@66)
 :pattern ( ($generated@@48 $generated@@65 $generated@@66))
))) (forall (($generated@@67 T@U) ($generated@@68 T@U) ) (! (let (($generated@@69 ($generated@@54 (type $generated@@67))))
(= (type ($generated@@52 $generated@@67 $generated@@68)) $generated@@69))
 :pattern ( ($generated@@52 $generated@@67 $generated@@68))
))) (forall (($generated@@70 T@U) ($generated@@71 T@U) ($generated@@72 T@U) ) (! (let (($generated@@73 (type $generated@@72)))
(let (($generated@@74 (type $generated@@71)))
(= (type ($generated@@55 $generated@@70 $generated@@71 $generated@@72)) ($generated@@48 $generated@@74 $generated@@73))))
 :pattern ( ($generated@@55 $generated@@70 $generated@@71 $generated@@72))
))) (forall (($generated@@75 T@U) ($generated@@76 T@U) ($generated@@77 T@U) ) (! (let (($generated@@78 ($generated@@54 (type $generated@@75))))
 (=> (= (type $generated@@77) $generated@@78) (= ($generated@@52 ($generated@@55 $generated@@75 $generated@@76 $generated@@77) $generated@@76) $generated@@77)))
 :weight 0
))) (and (forall (($generated@@79 T@U) ($generated@@80 T@U) ($generated@@81 T@U) ($generated@@82 T@U) ) (!  (or (= $generated@@81 $generated@@82) (= ($generated@@52 ($generated@@55 $generated@@80 $generated@@81 $generated@@79) $generated@@82) ($generated@@52 $generated@@80 $generated@@82)))
 :weight 0
)) (forall (($generated@@83 T@U) ($generated@@84 T@U) ($generated@@85 T@U) ($generated@@86 T@U) ) (!  (or true (= ($generated@@52 ($generated@@55 $generated@@84 $generated@@85 $generated@@83) $generated@@86) ($generated@@52 $generated@@84 $generated@@86)))
 :weight 0
)))) (forall (($generated@@87 T@T) ) (= ($generated@@1 ($generated@@50 $generated@@87)) 7))) (forall (($generated@@88 T@T) ) (! (= ($generated@@46 ($generated@@50 $generated@@88)) $generated@@88)
 :pattern ( ($generated@@50 $generated@@88))
))) (forall (($generated@@89 T@U) ($generated@@90 T@U) ) (! (let (($generated@@91 ($generated@@46 (type $generated@@90))))
(= (type ($generated@@51 $generated@@89 $generated@@90)) $generated@@91))
 :pattern ( ($generated@@51 $generated@@89 $generated@@90))
))) (= ($generated@@1 $generated@@49) 8)) (forall (($generated@@92 T@U) ($generated@@93 T@U) ($generated@@94 T@U) ) (! (= (type ($generated@@56 $generated@@92 $generated@@93 $generated@@94)) $generated@@49)
 :pattern ( ($generated@@56 $generated@@92 $generated@@93 $generated@@94))
))) (forall (($generated@@95 T@U) ($generated@@96 T@U) ($generated@@97 T@U) ) (! (let (($generated@@98 ($generated@@46 (type $generated@@96))))
 (=> (= (type $generated@@97) $generated@@98) (= ($generated@@51 ($generated@@56 $generated@@95 $generated@@96 $generated@@97) $generated@@96) $generated@@97)))
 :weight 0
))) (and (forall (($generated@@99 T@U) ($generated@@100 T@U) ($generated@@101 T@U) ($generated@@102 T@U) ) (!  (or (= $generated@@101 $generated@@102) (= ($generated@@51 ($generated@@56 $generated@@100 $generated@@101 $generated@@99) $generated@@102) ($generated@@51 $generated@@100 $generated@@102)))
 :weight 0
)) (forall (($generated@@103 T@U) ($generated@@104 T@U) ($generated@@105 T@U) ($generated@@106 T@U) ) (!  (or true (= ($generated@@51 ($generated@@56 $generated@@104 $generated@@105 $generated@@103) $generated@@106) ($generated@@51 $generated@@104 $generated@@106)))
 :weight 0
)))) (= ($generated@@1 $generated@@47) 9)) (forall (($generated@@107 T@T) ($generated@@108 T@T) ) (= ($generated@@1 ($generated@@57 $generated@@107 $generated@@108)) 10))) (forall (($generated@@109 T@T) ($generated@@110 T@T) ) (! (= ($generated@@58 ($generated@@57 $generated@@109 $generated@@110)) $generated@@109)
 :pattern ( ($generated@@57 $generated@@109 $generated@@110))
))) (forall (($generated@@111 T@T) ($generated@@112 T@T) ) (! (= ($generated@@59 ($generated@@57 $generated@@111 $generated@@112)) $generated@@112)
 :pattern ( ($generated@@57 $generated@@111 $generated@@112))
))) (forall (($generated@@113 T@U) ($generated@@114 T@U) ($generated@@115 T@U) ) (! (let (($generated@@116 ($generated@@59 (type $generated@@113))))
(= (type ($generated@@44 $generated@@113 $generated@@114 $generated@@115)) $generated@@116))
 :pattern ( ($generated@@44 $generated@@113 $generated@@114 $generated@@115))
))) (forall (($generated@@117 T@U) ($generated@@118 T@U) ($generated@@119 T@U) ($generated@@120 T@U) ) (! (let (($generated@@121 (type $generated@@120)))
(let (($generated@@122 (type $generated@@118)))
(= (type ($generated@@60 $generated@@117 $generated@@118 $generated@@119 $generated@@120)) ($generated@@57 $generated@@122 $generated@@121))))
 :pattern ( ($generated@@60 $generated@@117 $generated@@118 $generated@@119 $generated@@120))
))) (forall (($generated@@123 T@U) ($generated@@124 T@U) ($generated@@125 T@U) ($generated@@126 T@U) ) (! (let (($generated@@127 ($generated@@59 (type $generated@@123))))
 (=> (= (type $generated@@126) $generated@@127) (= ($generated@@44 ($generated@@60 $generated@@123 $generated@@124 $generated@@125 $generated@@126) $generated@@124 $generated@@125) $generated@@126)))
 :weight 0
))) (and (and (forall (($generated@@128 T@U) ($generated@@129 T@U) ($generated@@130 T@U) ($generated@@131 T@U) ($generated@@132 T@U) ($generated@@133 T@U) ) (!  (or (= $generated@@130 $generated@@132) (= ($generated@@44 ($generated@@60 $generated@@129 $generated@@130 $generated@@131 $generated@@128) $generated@@132 $generated@@133) ($generated@@44 $generated@@129 $generated@@132 $generated@@133)))
 :weight 0
)) (forall (($generated@@134 T@U) ($generated@@135 T@U) ($generated@@136 T@U) ($generated@@137 T@U) ($generated@@138 T@U) ($generated@@139 T@U) ) (!  (or (= $generated@@137 $generated@@139) (= ($generated@@44 ($generated@@60 $generated@@135 $generated@@136 $generated@@137 $generated@@134) $generated@@138 $generated@@139) ($generated@@44 $generated@@135 $generated@@138 $generated@@139)))
 :weight 0
))) (forall (($generated@@140 T@U) ($generated@@141 T@U) ($generated@@142 T@U) ($generated@@143 T@U) ($generated@@144 T@U) ($generated@@145 T@U) ) (!  (or true (= ($generated@@44 ($generated@@60 $generated@@141 $generated@@142 $generated@@143 $generated@@140) $generated@@144 $generated@@145) ($generated@@44 $generated@@141 $generated@@144 $generated@@145)))
 :weight 0
)))) (forall (($generated@@146 T@U) ($generated@@147 T@U) ($generated@@148 T@U) ($generated@@149 Bool) ) (! (= (type ($generated@@45 $generated@@146 $generated@@147 $generated@@148 $generated@@149)) ($generated@@57 $generated@@47 $generated@@4))
 :pattern ( ($generated@@45 $generated@@146 $generated@@147 $generated@@148 $generated@@149))
))))
(assert (forall (($generated@@150 T@U) ($generated@@151 T@U) ($generated@@152 T@U) ($generated@@153 Bool) ($generated@@154 T@U) ($generated@@155 T@U) ) (! (let (($generated@@156 ($generated@@46 (type $generated@@155))))
 (=> (and (and (and (and (= (type $generated@@150) $generated@@47) (= (type $generated@@151) ($generated@@48 $generated@@47 $generated@@49))) (= (type $generated@@152) ($generated@@50 $generated@@4))) (= (type $generated@@154) $generated@@47)) (= (type $generated@@155) ($generated@@50 $generated@@156))) (= ($generated@@0 ($generated@@44 ($generated@@45 $generated@@150 $generated@@151 $generated@@152 $generated@@153) $generated@@154 $generated@@155))  (=> (and (not (= $generated@@154 $generated@@150)) ($generated@@0 ($generated@@51 ($generated@@52 $generated@@151 $generated@@154) $generated@@152))) $generated@@153))))
 :pattern ( ($generated@@44 ($generated@@45 $generated@@150 $generated@@151 $generated@@152 $generated@@153) $generated@@154 $generated@@155))
)))
(assert (forall (($generated@@158 Int) ) (! (= ($generated@@157 $generated@@158) $generated@@158)
 :pattern ( ($generated@@157 $generated@@158))
)))
(assert (forall (($generated@@160 T@U) ) (! (let (($generated@@161 (type $generated@@160)))
(= (type ($generated@@159 $generated@@160)) $generated@@161))
 :pattern ( ($generated@@159 $generated@@160))
)))
(assert (forall (($generated@@162 T@U) ) (! (= ($generated@@159 $generated@@162) $generated@@162)
 :pattern ( ($generated@@159 $generated@@162))
)))
(assert (forall (($generated@@164 Int) ($generated@@165 Int) ) (! (= ($generated@@163 $generated@@164 $generated@@165) (div $generated@@164 $generated@@165))
 :pattern ( ($generated@@163 $generated@@164 $generated@@165))
)))
(assert  (and (and (= ($generated@@1 $generated@@168) 11) (forall (($generated@@169 T@U) ) (! (= (type ($generated@@166 $generated@@169)) $generated@@168)
 :pattern ( ($generated@@166 $generated@@169))
))) (forall (($generated@@170 T@T) ($generated@@171 T@U) ) (! (= (type ($generated@@167 $generated@@170 $generated@@171)) $generated@@170)
 :pattern ( ($generated@@167 $generated@@170 $generated@@171))
))))
(assert (forall (($generated@@172 T@U) ) (! (let (($generated@@173 (type $generated@@172)))
(= ($generated@@167 $generated@@173 ($generated@@166 $generated@@172)) $generated@@172))
 :pattern ( ($generated@@166 $generated@@172))
)))
(assert (forall (($generated@@174 Int) ) (! (= ($generated@@166 ($generated@@8 ($generated@@157 $generated@@174))) ($generated@@159 ($generated@@166 ($generated@@8 $generated@@174))))
 :pattern ( ($generated@@166 ($generated@@8 ($generated@@157 $generated@@174))))
)))
(assert (forall (($generated@@175 T@U) ) (! (= ($generated@@166 ($generated@@159 $generated@@175)) ($generated@@159 ($generated@@166 $generated@@175)))
 :pattern ( ($generated@@166 ($generated@@159 $generated@@175)))
)))
(push 1)
(declare-fun ControlFlow (Int Int) Int)
(declare-fun $generated@@176 () Int)
(declare-fun $generated@@177 () Int)
(declare-fun $generated@@178 () Int)
(declare-fun $generated@@179 () Int)
(declare-fun $generated@@180 () Int)
(declare-fun $generated@@181 () Int)
(declare-fun $generated@@182 () Int)
(declare-fun $generated@@183 () Int)
(declare-fun $generated@@184 () Int)
(declare-fun $generated@@185 () Int)
(declare-fun $generated@@186 () T@U)
(declare-fun $generated@@187 () T@U)
(declare-fun $generated@@188 () T@U)
(declare-fun $generated@@189 () T@U)
(declare-fun $generated@@190 (T@U) Bool)
(declare-fun $generated@@191 (T@U) Bool)
(declare-fun $generated@@192 () Int)
(declare-fun $generated@@193 () Int)
(assert  (and (and (and (= (type $generated@@186) ($generated@@57 $generated@@47 $generated@@4)) (= (type $generated@@187) $generated@@47)) (= (type $generated@@188) ($generated@@48 $generated@@47 $generated@@49))) (= (type $generated@@189) ($generated@@50 $generated@@4))))
(set-option :timeout 0)
(set-option :rlimit 0)
(assert (not
 (=> (= (ControlFlow 0 0) 12) (let (($generated@@194  (=> (= $generated@@176 ($generated@@157 1)) (and (=> (= (ControlFlow 0 9) (- 0 10)) (and (<= ($generated@@157 0) $generated@@176) (< $generated@@176 256))) (=> (and (<= ($generated@@157 0) $generated@@176) (< $generated@@176 256)) (=> (and (= $generated@@177 (+ $generated@@178 1)) (= (ControlFlow 0 9) (- 0 8))) (and (<= ($generated@@157 0) $generated@@177) (< $generated@@177 256))))))))
(let (($generated@@195  (=> (= $generated@@179 ($generated@@157 2)) (and (=> (= (ControlFlow 0 2) (- 0 7)) (and (<= ($generated@@157 0) $generated@@179) (< $generated@@179 256))) (=> (and (<= ($generated@@157 0) $generated@@179) (< $generated@@179 256)) (and (=> (= (ControlFlow 0 2) (- 0 6)) (not (= ($generated@@157 2) 0))) (=> (not (= ($generated@@157 2) 0)) (=> (= $generated@@180 ($generated@@163 $generated@@178 ($generated@@157 2))) (and (=> (= (ControlFlow 0 2) (- 0 5)) (and (<= ($generated@@157 0) $generated@@180) (< $generated@@180 256))) (=> (and (<= ($generated@@157 0) $generated@@180) (< $generated@@180 256)) (=> (and (= $generated@@181 ($generated@@163 $generated@@178 ($generated@@157 2))) (= $generated@@182 ($generated@@157 1))) (and (=> (= (ControlFlow 0 2) (- 0 4)) (and (<= ($generated@@157 0) $generated@@182) (< $generated@@182 256))) (=> (and (<= ($generated@@157 0) $generated@@182) (< $generated@@182 256)) (=> (= $generated@@183 (+ $generated@@181 1)) (and (=> (= (ControlFlow 0 2) (- 0 3)) (and (<= ($generated@@157 0) $generated@@183) (< $generated@@183 256))) (=> (and (<= ($generated@@157 0) $generated@@183) (< $generated@@183 256)) (=> (= $generated@@184 (+ $generated@@181 1)) (=> (and (= $generated@@185 ($generated@@157 300)) (= (ControlFlow 0 2) (- 0 1))) (and (<= ($generated@@157 0) $generated@@185) (< $generated@@185 256))))))))))))))))))))
(let (($generated@@196  (=> (= $generated@@186 ($generated@@45 $generated@@187 $generated@@188 $generated@@189 false)) (=> (and (<= ($generated@@157 0) $generated@@178) (< $generated@@178 256)) (and (=> (= (ControlFlow 0 11) 2) $generated@@195) (=> (= (ControlFlow 0 11) 9) $generated@@194))))))
(let (($generated@@197  (=> (and ($generated@@190 $generated@@188) ($generated@@191 $generated@@188)) (=> (and (and (and (<= ($generated@@157 0) $generated@@192) (< $generated@@192 256)) true) (and (= 1 $generated@@193) (= (ControlFlow 0 12) 11))) $generated@@196))))
$generated@@197)))))
))
(check-sat)
(get-info :reason-unknown)
(assert (not (= (ControlFlow 0 2) (- 1))))
(check-sat)
(get-info :reason-unknown)
(assert (not (= (ControlFlow 0 9) (- 8))))
(check-sat)
(pop 1)
; Invalid
(get-info :rlimit)
(reset)
(set-option :rlimit 0)
; did a full reset
(reset)
(set-option :print-success false)
(set-info :smt-lib-version 2.6)
(set-option :auto_config false)
(set-option :type_check true)
(set-option :smt.case_split 3)
(set-option :smt.qi.eager_threshold 100)
(set-option :smt.delay_units true)
(set-option :smt.arith.solver 2)
(set-option :smt.mbqi false)
(set-option :model.compact false)
(set-option :model.v2 true)
(set-option :pp.bv_literals false)
; done setting options


(set-info :category "industrial")
(declare-sort |T@U| 0)
(declare-sort |T@T| 0)
(declare-fun real_pow (Real Real) Real)
(declare-fun UOrdering2 (|T@U| |T@U|) Bool)
(declare-fun UOrdering3 (|T@T| |T@U| |T@U|) Bool)
(declare-fun tickleBool (Bool) Bool)
(assert (and (tickleBool true) (tickleBool false)))
(declare-fun $generated (T@U) Int)
(declare-fun $generated@@0 (T@U) Bool)
(declare-fun $generated@@1 (T@T) Int)
(declare-fun $generated@@2 () T@T)
(declare-fun $generated@@3 () T@T)
(declare-fun $generated@@4 () T@T)
(declare-fun $generated@@5 () T@T)
(declare-fun $generated@@6 () T@T)
(declare-fun $generated@@7 () T@T)
(declare-fun $generated@@8 (Int) T@U)
(declare-fun type (T@U) T@T)
(declare-fun $generated@@9 (Real) T@U)
(declare-fun $generated@@10 (T@U) Real)
(declare-fun $generated@@11 (Bool) T@U)
(declare-fun $generated@@12 (RoundingMode) T@U)
(declare-fun $generated@@13 (T@U) RoundingMode)
(declare-fun $generated@@14 (String) T@U)
(declare-fun $generated@@15 (T@U) String)
(declare-fun $generated@@16 ((RegEx String)) T@U)
(declare-fun $generated@@17 (T@U) (RegEx String))
(declare-fun $generated@@44 (T@U T@U T@U) T@U)
(declare-fun $generated@@45 (T@U T@U T@U Bool) T@U)
(declare-fun $generated@@46 (T@T) T@T)
(declare-fun $generated@@47 () T@T)
(declare-fun $generated@@48 (T@T T@T) T@T)
(declare-fun $generated@@49 () T@T)
(declare-fun $generated@@50 (T@T) T@T)
(declare-fun $generated@@51 (T@U T@U) T@U)
(declare-fun $generated@@52 (T@U T@U) T@U)
(declare-fun $generated@@53 (T@T) T@T)
(declare-fun $generated@@54 (T@T) T@T)
(declare-fun $generated@@55 (T@U T@U T@U) T@U)
(declare-fun $generated@@56 (T@U T@U T@U) T@U)
(declare-fun $generated@@57 (T@T T@T) T@T)
(declare-fun $generated@@58 (T@T) T@T)
(declare-fun $generated@@59 (T@T) T@T)
(declare-fun $generated@@60 (T@U T@U T@U T@U) T@U)
(declare-fun $generated@@157 (Int) Int)
(declare-fun $generated@@159 (T@U) T@U)
(declare-fun $generated@@163 (T@U) T@U)
(declare-fun $generated@@164 (T@T T@U) T@U)
(declare-fun $generated@@165 () T@T)
(assert  (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (= ($generated@@1 $generated@@2) 0) (= ($generated@@1 $generated@@3) 1)) (= ($generated@@1 $generated@@4) 2)) (= ($generated@@1 $generated@@5) 3)) (= ($generated@@1 $generated@@6) 4)) (= ($generated@@1 $generated@@7) 5)) (forall (($generated@@18 Int) ) (! (= ($generated ($generated@@8 $generated@@18)) $generated@@18)
 :pattern ( ($generated@@8 $generated@@18))
))) (forall (($generated@@19 T@U) ) (!  (=> (= (type $generated@@19) $generated@@2) (= ($generated@@8 ($generated $generated@@19)) $generated@@19))
 :pattern ( ($generated $generated@@19))
))) (forall (($generated@@20 Int) ) (! (= (type ($generated@@8 $generated@@20)) $generated@@2)
 :pattern ( ($generated@@8 $generated@@20))
))) (forall (($generated@@21 Real) ) (! (= ($generated@@10 ($generated@@9 $generated@@21)) $generated@@21)
 :pattern ( ($generated@@9 $generated@@21))
))) (forall (($generated@@22 T@U) ) (!  (=> (= (type $generated@@22) $generated@@3) (= ($generated@@9 ($generated@@10 $generated@@22)) $generated@@22))
 :pattern ( ($generated@@10 $generated@@22))
))) (forall (($generated@@23 Real) ) (! (= (type ($generated@@9 $generated@@23)) $generated@@3)
 :pattern ( ($generated@@9 $generated@@23))
))) (forall (($generated@@24 Bool) ) (! (= ($generated@@0 ($generated@@11 $generated@@24)) $generated@@24)
 :pattern ( ($generated@@11 $generated@@24))
))) (forall (($generated@@25 T@U) ) (!  (=> (= (type $generated@@25) $generated@@4) (= ($generated@@11 ($generated@@0 $generated@@25)) $generated@@25))
 :pattern ( ($generated@@0 $generated@@25))
))) (forall (($generated@@26 Bool) ) (! (= (type ($generated@@11 $generated@@26)) $generated@@4)
 :pattern ( ($generated@@11 $generated@@26))
))) (forall (($generated@@27 RoundingMode) ) (! (= ($generated@@13 ($generated@@12 $generated@@27)) $generated@@27)
 :pattern ( ($generated@@12 $generated@@27))
))) (forall (($generated@@28 T@U) ) (!  (=> (= (type $generated@@28) $generated@@5) (= ($generated@@12 ($generated@@13 $generated@@28)) $generated@@28))
 :pattern ( ($generated@@13 $generated@@28))
))) (forall (($generated@@29 RoundingMode) ) (! (= (type ($generated@@12 $generated@@29)) $generated@@5)
 :pattern ( ($generated@@12 $generated@@29))
))) (forall (($generated@@30 String) ) (! (= ($generated@@15 ($generated@@14 $generated@@30)) $generated@@30)
 :pattern ( ($generated@@14 $generated@@30))
))) (forall (($generated@@31 T@U) ) (!  (=> (= (type $generated@@31) $generated@@6) (= ($generated@@14 ($generated@@15 $generated@@31)) $generated@@31))
 :pattern ( ($generated@@15 $generated@@31))
))) (forall (($generated@@32 String) ) (! (= (type ($generated@@14 $generated@@32)) $generated@@6)
 :pattern ( ($generated@@14 $generated@@32))
))) (forall (($generated@@33 (RegEx String)) ) (! (= ($generated@@17 ($generated@@16 $generated@@33)) $generated@@33)
 :pattern ( ($generated@@16 $generated@@33))
))) (forall (($generated@@34 T@U) ) (!  (=> (= (type $generated@@34) $generated@@7) (= ($generated@@16 ($generated@@17 $generated@@34)) $generated@@34))
 :pattern ( ($generated@@17 $generated@@34))
))) (forall (($generated@@35 (RegEx String)) ) (! (= (type ($generated@@16 $generated@@35)) $generated@@7)
 :pattern ( ($generated@@16 $generated@@35))
))))
(assert (forall (($generated@@36 T@U) ) (! (UOrdering2 $generated@@36 $generated@@36)
 :no-pattern ($generated $generated@@36)
 :no-pattern ($generated@@0 $generated@@36)
)))
(assert (forall (($generated@@37 T@U) ($generated@@38 T@U) ($generated@@39 T@U) ) (! (let (($generated@@40 (type $generated@@37)))
 (=> (and (and (= (type $generated@@38) $generated@@40) (= (type $generated@@39) $generated@@40)) (and (UOrdering2 $generated@@37 $generated@@38) (UOrdering2 $generated@@38 $generated@@39))) (UOrdering2 $generated@@37 $generated@@39)))
 :pattern ( (UOrdering2 $generated@@37 $generated@@38) (UOrdering2 $generated@@38 $generated@@39))
)))
(assert (forall (($generated@@41 T@U) ($generated@@42 T@U) ) (! (let (($generated@@43 (type $generated@@41)))
 (=> (= (type $generated@@42) $generated@@43) (=> (and (UOrdering2 $generated@@41 $generated@@42) (UOrdering2 $generated@@42 $generated@@41)) (= $generated@@41 $generated@@42))))
 :pattern ( (UOrdering2 $generated@@41 $generated@@42) (UOrdering2 $generated@@42 $generated@@41))
)))
(assert  (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (forall (($generated@@61 T@T) ($generated@@62 T@T) ) (= ($generated@@1 ($generated@@48 $generated@@61 $generated@@62)) 6)) (forall (($generated@@63 T@T) ($generated@@64 T@T) ) (! (= ($generated@@53 ($generated@@48 $generated@@63 $generated@@64)) $generated@@63)
 :pattern ( ($generated@@48 $generated@@63 $generated@@64))
))) (forall (($generated@@65 T@T) ($generated@@66 T@T) ) (! (= ($generated@@54 ($generated@@48 $generated@@65 $generated@@66)) $generated@@66)
 :pattern ( ($generated@@48 $generated@@65 $generated@@66))
))) (forall (($generated@@67 T@U) ($generated@@68 T@U) ) (! (let (($generated@@69 ($generated@@54 (type $generated@@67))))
(= (type ($generated@@52 $generated@@67 $generated@@68)) $generated@@69))
 :pattern ( ($generated@@52 $generated@@67 $generated@@68))
))) (forall (($generated@@70 T@U) ($generated@@71 T@U) ($generated@@72 T@U) ) (! (let (($generated@@73 (type $generated@@72)))
(let (($generated@@74 (type $generated@@71)))
(= (type ($generated@@55 $generated@@70 $generated@@71 $generated@@72)) ($generated@@48 $generated@@74 $generated@@73))))
 :pattern ( ($generated@@55 $generated@@70 $generated@@71 $generated@@72))
))) (forall (($generated@@75 T@U) ($generated@@76 T@U) ($generated@@77 T@U) ) (! (let (($generated@@78 ($generated@@54 (type $generated@@75))))
 (=> (= (type $generated@@77) $generated@@78) (= ($generated@@52 ($generated@@55 $generated@@75 $generated@@76 $generated@@77) $generated@@76) $generated@@77)))
 :weight 0
))) (and (forall (($generated@@79 T@U) ($generated@@80 T@U) ($generated@@81 T@U) ($generated@@82 T@U) ) (!  (or (= $generated@@81 $generated@@82) (= ($generated@@52 ($generated@@55 $generated@@80 $generated@@81 $generated@@79) $generated@@82) ($generated@@52 $generated@@80 $generated@@82)))
 :weight 0
)) (forall (($generated@@83 T@U) ($generated@@84 T@U) ($generated@@85 T@U) ($generated@@86 T@U) ) (!  (or true (= ($generated@@52 ($generated@@55 $generated@@84 $generated@@85 $generated@@83) $generated@@86) ($generated@@52 $generated@@84 $generated@@86)))
 :weight 0
)))) (forall (($generated@@87 T@T) ) (= ($generated@@1 ($generated@@50 $generated@@87)) 7))) (forall (($generated@@88 T@T) ) (! (= ($generated@@46 ($generated@@50 $generated@@88)) $generated@@88)
 :pattern ( ($generated@@50 $generated@@88))
))) (forall (($generated@@89 T@U) ($generated@@90 T@U) ) (! (let (($generated@@91 ($generated@@46 (type $generated@@90))))
(= (type ($generated@@51 $generated@@89 $generated@@90)) $generated@@91))
 :pattern ( ($generated@@51 $generated@@89 $generated@@90))
))) (= ($generated@@1 $generated@@49) 8)) (forall (($generated@@92 T@U) ($generated@@93 T@U) ($generated@@94 T@U) ) (! (= (type ($generated@@56 $generated@@92 $generated@@93 $generated@@94)) $generated@@49)
 :pattern ( ($generated@@56 $generated@@92 $generated@@93 $generated@@94))
))) (forall (($generated@@95 T@U) ($generated@@96 T@U) ($generated@@97 T@U) ) (! (let (($generated@@98 ($generated@@46 (type $generated@@96))))
 (=> (= (type $generated@@97) $generated@@98) (= ($generated@@51 ($generated@@56 $generated@@95 $generated@@96 $generated@@97) $generated@@96) $generated@@97)))
 :weight 0
))) (and (forall (($generated@@99 T@U) ($generated@@100 T@U) ($generated@@101 T@U) ($generated@@102 T@U) ) (!  (or (= $generated@@101 $generated@@102) (= ($generated@@51 ($generated@@56 $generated@@100 $generated@@101 $generated@@99) $generated@@102) ($generated@@51 $generated@@100 $generated@@102)))
 :weight 0
)) (forall (($generated@@103 T@U) ($generated@@104 T@U) ($generated@@105 T@U) ($generated@@106 T@U) ) (!  (or true (= ($generated@@51 ($generated@@56 $generated@@104 $generated@@105 $generated@@103) $generated@@106) ($generated@@51 $generated@@104 $generated@@106)))
 :weight 0
)))) (= ($generated@@1 $generated@@47) 9)) (forall (($generated@@107 T@T) ($generated@@108 T@T) ) (= ($generated@@1 ($generated@@57 $generated@@107 $generated@@108)) 10))) (forall (($generated@@109 T@T) ($generated@@110 T@T) ) (! (= ($generated@@58 ($generated@@57 $generated@@109 $generated@@110)) $generated@@109)
 :pattern ( ($generated@@57 $generated@@109 $generated@@110))
))) (forall (($generated@@111 T@T) ($generated@@112 T@T) ) (! (= ($generated@@59 ($generated@@57 $generated@@111 $generated@@112)) $generated@@112)
 :pattern ( ($generated@@57 $generated@@111 $generated@@112))
))) (forall (($generated@@113 T@U) ($generated@@114 T@U) ($generated@@115 T@U) ) (! (let (($generated@@116 ($generated@@59 (type $generated@@113))))
(= (type ($generated@@44 $generated@@113 $generated@@114 $generated@@115)) $generated@@116))
 :pattern ( ($generated@@44 $generated@@113 $generated@@114 $generated@@115))
))) (forall (($generated@@117 T@U) ($generated@@118 T@U) ($generated@@119 T@U) ($generated@@120 T@U) ) (! (let (($generated@@121 (type $generated@@120)))
(let (($generated@@122 (type $generated@@118)))
(= (type ($generated@@60 $generated@@117 $generated@@118 $generated@@119 $generated@@120)) ($generated@@57 $generated@@122 $generated@@121))))
 :pattern ( ($generated@@60 $generated@@117 $generated@@118 $generated@@119 $generated@@120))
))) (forall (($generated@@123 T@U) ($generated@@124 T@U) ($generated@@125 T@U) ($generated@@126 T@U) ) (! (let (($generated@@127 ($generated@@59 (type $generated@@123))))
 (=> (= (type $generated@@126) $generated@@127) (= ($generated@@44 ($generated@@60 $generated@@123 $generated@@124 $generated@@125 $generated@@126) $generated@@124 $generated@@125) $generated@@126)))
 :weight 0
))) (and (and (forall (($generated@@128 T@U) ($generated@@129 T@U) ($generated@@130 T@U) ($generated@@131 T@U) ($generated@@132 T@U) ($generated@@133 T@U) ) (!  (or (= $generated@@130 $generated@@132) (= ($generated@@44 ($generated@@60 $generated@@129 $generated@@130 $generated@@131 $generated@@128) $generated@@132 $generated@@133) ($generated@@44 $generated@@129 $generated@@132 $generated@@133)))
 :weight 0
)) (forall (($generated@@134 T@U) ($generated@@135 T@U) ($generated@@136 T@U) ($generated@@137 T@U) ($generated@@138 T@U) ($generated@@139 T@U) ) (!  (or (= $generated@@137 $generated@@139) (= ($generated@@44 ($generated@@60 $generated@@135 $generated@@136 $generated@@137 $generated@@134) $generated@@138 $generated@@139) ($generated@@44 $generated@@135 $generated@@138 $generated@@139)))
 :weight 0
))) (forall (($generated@@140 T@U) ($generated@@141 T@U) ($generated@@142 T@U) ($generated@@143 T@U) ($generated@@144 T@U) ($generated@@145 T@U) ) (!  (or true (= ($generated@@44 ($generated@@60 $generated@@141 $generated@@142 $generated@@143 $generated@@140) $generated@@144 $generated@@145) ($generated@@44 $generated@@141 $generated@@144 $generated@@145)))
 :weight 0
)))) (forall (($generated@@146 T@U) ($generated@@147 T@U) ($generated@@148 T@U) ($generated@@149 Bool) ) (! (= (type ($generated@@45 $generated@@146 $generated@@147 $generated@@148 $generated@@149)) ($generated@@57 $generated@@47 $generated@@4))
 :pattern ( ($generated@@45 $generated@@146 $generated@@147 $generated@@148 $generated@@149))
))))
(assert (forall (($generated@@150 T@U) ($generated@@151 T@U) ($generated@@152 T@U) ($generated@@153 Bool) ($generated@@154 T@U) ($generated@@155 T@U) ) (! (let (($generated@@156 ($generated@@46 (type $generated@@155))))
 (=> (and (and (and (and (= (type $generated@@150) $generated@@47) (= (type $generated@@151) ($generated@@48 $generated@@47 $generated@@49))) (= (type $generated@@152) ($generated@@50 $generated@@4))) (= (type $generated@@154) $generated@@47)) (= (type $generated@@155) ($generated@@50 $generated@@156))) (= ($generated@@0 ($generated@@44 ($generated@@45 $generated@@150 $generated@@151 $generated@@152 $generated@@153) $generated@@154 $generated@@155))  (=> (and (not (= $generated@@154 $generated@@150)) ($generated@@0 ($generated@@51 ($generated@@52 $generated@@151 $generated@@154) $generated@@152))) $generated@@153))))
 :pattern ( ($generated@@44 ($generated@@45 $generated@@150 $generated@@151 $generated@@152 $generated@@153) $generated@@154 $generated@@155))
)))
(assert (forall (($generated@@158 Int) ) (! (= ($generated@@157 $generated@@158) $generated@@158)
 :pattern ( ($generated@@157 $generated@@158))
)))
(assert (forall (($generated@@160 T@U) ) (! (let (($generated@@161 (type $generated@@160)))
(= (type ($generated@@159 $generated@@160)) $generated@@161))
 :pattern ( ($generated@@159 $generated@@160))
)))
(assert (forall (($generated@@162 T@U) ) (! (= ($generated@@159 $generated@@162) $generated@@162)
 :pattern ( ($generated@@159 $generated@@162))
)))
(assert  (and (and (= ($generated@@1 $generated@@165) 11) (forall (($generated@@166 T@U) ) (! (= (type ($generated@@163 $generated@@166)) $generated@@165)
 :pattern ( ($generated@@163 $generated@@166))
))) (forall (($generated@@167 T@T) ($generated@@168 T@U) ) (! (= (type ($generated@@164 $generated@@167 $generated@@168)) $generated@@167)
 :pattern ( ($generated@@164 $generated@@167 $generated@@168))
))))
(assert (forall (($generated@@169 T@U) ) (! (let (($generated@@170 (type $generated@@169)))
(= ($generated@@164 $generated@@170 ($generated@@163 $generated@@169)) $generated@@169))
 :pattern ( ($generated@@163 $generated@@169))
)))
(assert (forall (($generated@@171 Int) ) (! (= ($generated@@163 ($generated@@8 ($generated@@157 $generated@@171))) ($generated@@159 ($generated@@163 ($generated@@8 $generated@@171))))
 :pattern ( ($generated@@163 ($generated@@8 ($generated@@157 $generated@@171))))
)))
(assert (forall (($generated@@172 T@U) ) (! (= ($generated@@163 ($generated@@159 $generated@@172)) ($generated@@159 ($generated@@163 $generated@@172)))
 :pattern ( ($generated@@163 ($generated@@159 $generated@@172)))
)))
(push 1)
(declare-fun ControlFlow (Int Int) Int)
(declare-fun $generated@@173 () Int)
(declare-fun $generated@@174 () Int)
(declare-fun $generated@@175 () T@U)
(declare-fun $generated@@176 () T@U)
(declare-fun $generated@@177 () T@U)
(declare-fun $generated@@178 () T@U)
(declare-fun $generated@@179 (T@U) Bool)
(declare-fun $generated@@180 (T@U) Bool)
(declare-fun $generated@@181 () Int)
(declare-fun $generated@@182 () Int)
(assert  (and (and (and (= (type $generated@@175) ($generated@@57 $generated@@47 $generated@@4)) (= (type $generated@@176) $generated@@47)) (= (type $generated@@177) ($generated@@48 $generated@@47 $generated@@49))) (= (type $generated@@178) ($generated@@50 $generated@@4))))
(set-option :timeout 0)
(set-option :rlimit 0)
(assert (not
 (=> (= (ControlFlow 0 0) 7) (let (($generated@@183  (=> (= $generated@@173 ($generated@@157 0)) (and (=> (= (ControlFlow 0 4) (- 0 5)) (<= ($generated@@157 0) $generated@@173)) (=> (<= ($generated@@157 0) $generated@@173) (=> (= (ControlFlow 0 4) (- 0 3)) ($generated@@0 ($generated@@159 ($generated@@11 (< 0 100))))))))))
(let (($generated@@184  (=> (and (= $generated@@174 ($generated@@157 100)) (= (ControlFlow 0 2) (- 0 1))) (<= ($generated@@157 0) $generated@@174))))
(let (($generated@@185  (=> (= $generated@@175 ($generated@@45 $generated@@176 $generated@@177 $generated@@178 false)) (and (=> (= (ControlFlow 0 6) 2) $generated@@184) (=> (= (ControlFlow 0 6) 4) $generated@@183)))))
(let (($generated@@186  (=> (and (and (and ($generated@@179 $generated@@177) ($generated@@180 $generated@@177)) (<= ($generated@@157 0) $generated@@181)) (and (= 1 $generated@@182) (= (ControlFlow 0 7) 6))) $generated@@185)))
$generated@@186)))))
))
(check-sat)
(pop 1)
; Valid
(get-info :rlimit)
(reset)
(set-option :rlimit 0)
; did a full reset
(reset)
(set-option :print-success false)
(set-info :smt-lib-version 2.6)
(set-option :auto_config false)
(set-option :type_check true)
(set-option :smt.case_split 3)
(set-option :smt.qi.eager_threshold 100)
(set-option :smt.delay_units true)
(set-option :smt.arith.solver 2)
(set-option :smt.mbqi false)
(set-option :model.compact false)
(set-option :model.v2 true)
(set-option :pp.bv_literals false)
; done setting options


(set-info :category "industrial")
(declare-sort |T@U| 0)
(declare-sort |T@T| 0)
(declare-fun real_pow (Real Real) Real)
(declare-fun UOrdering2 (|T@U| |T@U|) Bool)
(declare-fun UOrdering3 (|T@T| |T@U| |T@U|) Bool)
(declare-fun tickleBool (Bool) Bool)
(assert (and (tickleBool true) (tickleBool false)))
(declare-fun $generated (T@U) Int)
(declare-fun $generated@@0 (T@U) Bool)
(declare-fun $generated@@1 (T@T) Int)
(declare-fun $generated@@2 () T@T)
(declare-fun $generated@@3 () T@T)
(declare-fun $generated@@4 () T@T)
(declare-fun $generated@@5 () T@T)
(declare-fun $generated@@6 () T@T)
(declare-fun $generated@@7 () T@T)
(declare-fun $generated@@8 (Int) T@U)
(declare-fun type (T@U) T@T)
(declare-fun $generated@@9 (Real) T@U)
(declare-fun $generated@@10 (T@U) Real)
(declare-fun $generated@@11 (Bool) T@U)
(declare-fun $generated@@12 (RoundingMode) T@U)
(declare-fun $generated@@13 (T@U) RoundingMode)
(declare-fun $generated@@14 (String) T@U)
(declare-fun $generated@@15 (T@U) String)
(declare-fun $generated@@16 ((RegEx String)) T@U)
(declare-fun $generated@@17 (T@U) (RegEx String))
(declare-fun $generated@@44 (T@U T@U) Bool)
(declare-fun $generated@@45 (T@T T@T) T@T)
(declare-fun $generated@@46 () T@T)
(declare-fun $generated@@47 () T@T)
(declare-fun $generated@@48 (T@U T@U) T@U)
(declare-fun $generated@@49 (T@U T@U) T@U)
(declare-fun $generated@@50 () T@U)
(declare-fun $generated@@51 (T@T) T@T)
(declare-fun $generated@@52 (T@T) T@T)
(declare-fun $generated@@53 (T@U T@U T@U) T@U)
(declare-fun $generated@@54 (T@T) T@T)
(declare-fun $generated@@55 (T@T) T@T)
(declare-fun $generated@@56 (T@U T@U T@U) T@U)
(declare-fun $generated@@106 (T@U T@U T@U) T@U)
(declare-fun $generated@@107 (T@U T@U T@U Bool) T@U)
(declare-fun $generated@@108 (T@T T@T) T@T)
(declare-fun $generated@@109 (T@T) T@T)
(declare-fun $generated@@110 (T@T) T@T)
(declare-fun $generated@@111 (T@U T@U T@U T@U) T@U)
(declare-fun $generated@@162 (Int) Int)
(declare-fun $generated@@164 (T@U) T@U)
(declare-fun $generated@@171 (T@U) T@U)
(declare-fun $generated@@172 (T@T T@U) T@U)
(declare-fun $generated@@173 () T@T)
(assert  (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (= ($generated@@1 $generated@@2) 0) (= ($generated@@1 $generated@@3) 1)) (= ($generated@@1 $generated@@4) 2)) (= ($generated@@1 $generated@@5) 3)) (= ($generated@@1 $generated@@6) 4)) (= ($generated@@1 $generated@@7) 5)) (forall (($generated@@18 Int) ) (! (= ($generated ($generated@@8 $generated@@18)) $generated@@18)
 :pattern ( ($generated@@8 $generated@@18))
))) (forall (($generated@@19 T@U) ) (!  (=> (= (type $generated@@19) $generated@@2) (= ($generated@@8 ($generated $generated@@19)) $generated@@19))
 :pattern ( ($generated $generated@@19))
))) (forall (($generated@@20 Int) ) (! (= (type ($generated@@8 $generated@@20)) $generated@@2)
 :pattern ( ($generated@@8 $generated@@20))
))) (forall (($generated@@21 Real) ) (! (= ($generated@@10 ($generated@@9 $generated@@21)) $generated@@21)
 :pattern ( ($generated@@9 $generated@@21))
))) (forall (($generated@@22 T@U) ) (!  (=> (= (type $generated@@22) $generated@@3) (= ($generated@@9 ($generated@@10 $generated@@22)) $generated@@22))
 :pattern ( ($generated@@10 $generated@@22))
))) (forall (($generated@@23 Real) ) (! (= (type ($generated@@9 $generated@@23)) $generated@@3)
 :pattern ( ($generated@@9 $generated@@23))
))) (forall (($generated@@24 Bool) ) (! (= ($generated@@0 ($generated@@11 $generated@@24)) $generated@@24)
 :pattern ( ($generated@@11 $generated@@24))
))) (forall (($generated@@25 T@U) ) (!  (=> (= (type $generated@@25) $generated@@4) (= ($generated@@11 ($generated@@0 $generated@@25)) $generated@@25))
 :pattern ( ($generated@@0 $generated@@25))
))) (forall (($generated@@26 Bool) ) (! (= (type ($generated@@11 $generated@@26)) $generated@@4)
 :pattern ( ($generated@@11 $generated@@26))
))) (forall (($generated@@27 RoundingMode) ) (! (= ($generated@@13 ($generated@@12 $generated@@27)) $generated@@27)
 :pattern ( ($generated@@12 $generated@@27))
))) (forall (($generated@@28 T@U) ) (!  (=> (= (type $generated@@28) $generated@@5) (= ($generated@@12 ($generated@@13 $generated@@28)) $generated@@28))
 :pattern ( ($generated@@13 $generated@@28))
))) (forall (($generated@@29 RoundingMode) ) (! (= (type ($generated@@12 $generated@@29)) $generated@@5)
 :pattern ( ($generated@@12 $generated@@29))
))) (forall (($generated@@30 String) ) (! (= ($generated@@15 ($generated@@14 $generated@@30)) $generated@@30)
 :pattern ( ($generated@@14 $generated@@30))
))) (forall (($generated@@31 T@U) ) (!  (=> (= (type $generated@@31) $generated@@6) (= ($generated@@14 ($generated@@15 $generated@@31)) $generated@@31))
 :pattern ( ($generated@@15 $generated@@31))
))) (forall (($generated@@32 String) ) (! (= (type ($generated@@14 $generated@@32)) $generated@@6)
 :pattern ( ($generated@@14 $generated@@32))
))) (forall (($generated@@33 (RegEx String)) ) (! (= ($generated@@17 ($generated@@16 $generated@@33)) $generated@@33)
 :pattern ( ($generated@@16 $generated@@33))
))) (forall (($generated@@34 T@U) ) (!  (=> (= (type $generated@@34) $generated@@7) (= ($generated@@16 ($generated@@17 $generated@@34)) $generated@@34))
 :pattern ( ($generated@@17 $generated@@34))
))) (forall (($generated@@35 (RegEx String)) ) (! (= (type ($generated@@16 $generated@@35)) $generated@@7)
 :pattern ( ($generated@@16 $generated@@35))
))))
(assert (forall (($generated@@36 T@U) ) (! (UOrdering2 $generated@@36 $generated@@36)
 :no-pattern ($generated $generated@@36)
 :no-pattern ($generated@@0 $generated@@36)
)))
(assert (forall (($generated@@37 T@U) ($generated@@38 T@U) ($generated@@39 T@U) ) (! (let (($generated@@40 (type $generated@@37)))
 (=> (and (and (= (type $generated@@38) $generated@@40) (= (type $generated@@39) $generated@@40)) (and (UOrdering2 $generated@@37 $generated@@38) (UOrdering2 $generated@@38 $generated@@39))) (UOrdering2 $generated@@37 $generated@@39)))
 :pattern ( (UOrdering2 $generated@@37 $generated@@38) (UOrdering2 $generated@@38 $generated@@39))
)))
(assert (forall (($generated@@41 T@U) ($generated@@42 T@U) ) (! (let (($generated@@43 (type $generated@@41)))
 (=> (= (type $generated@@42) $generated@@43) (=> (and (UOrdering2 $generated@@41 $generated@@42) (UOrdering2 $generated@@42 $generated@@41)) (= $generated@@41 $generated@@42))))
 :pattern ( (UOrdering2 $generated@@41 $generated@@42) (UOrdering2 $generated@@42 $generated@@41))
)))
(assert  (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (forall (($generated@@57 T@T) ($generated@@58 T@T) ) (= ($generated@@1 ($generated@@45 $generated@@57 $generated@@58)) 6)) (forall (($generated@@59 T@T) ($generated@@60 T@T) ) (! (= ($generated@@51 ($generated@@45 $generated@@59 $generated@@60)) $generated@@59)
 :pattern ( ($generated@@45 $generated@@59 $generated@@60))
))) (forall (($generated@@61 T@T) ($generated@@62 T@T) ) (! (= ($generated@@52 ($generated@@45 $generated@@61 $generated@@62)) $generated@@62)
 :pattern ( ($generated@@45 $generated@@61 $generated@@62))
))) (forall (($generated@@63 T@U) ($generated@@64 T@U) ) (! (let (($generated@@65 ($generated@@52 (type $generated@@63))))
(= (type ($generated@@49 $generated@@63 $generated@@64)) $generated@@65))
 :pattern ( ($generated@@49 $generated@@63 $generated@@64))
))) (forall (($generated@@66 T@U) ($generated@@67 T@U) ($generated@@68 T@U) ) (! (let (($generated@@69 (type $generated@@68)))
(let (($generated@@70 (type $generated@@67)))
(= (type ($generated@@53 $generated@@66 $generated@@67 $generated@@68)) ($generated@@45 $generated@@70 $generated@@69))))
 :pattern ( ($generated@@53 $generated@@66 $generated@@67 $generated@@68))
))) (forall (($generated@@71 T@U) ($generated@@72 T@U) ($generated@@73 T@U) ) (! (let (($generated@@74 ($generated@@52 (type $generated@@71))))
 (=> (= (type $generated@@73) $generated@@74) (= ($generated@@49 ($generated@@53 $generated@@71 $generated@@72 $generated@@73) $generated@@72) $generated@@73)))
 :weight 0
))) (and (forall (($generated@@75 T@U) ($generated@@76 T@U) ($generated@@77 T@U) ($generated@@78 T@U) ) (!  (or (= $generated@@77 $generated@@78) (= ($generated@@49 ($generated@@53 $generated@@76 $generated@@77 $generated@@75) $generated@@78) ($generated@@49 $generated@@76 $generated@@78)))
 :weight 0
)) (forall (($generated@@79 T@U) ($generated@@80 T@U) ($generated@@81 T@U) ($generated@@82 T@U) ) (!  (or true (= ($generated@@49 ($generated@@53 $generated@@80 $generated@@81 $generated@@79) $generated@@82) ($generated@@49 $generated@@80 $generated@@82)))
 :weight 0
)))) (= ($generated@@1 $generated@@46) 7)) (forall (($generated@@83 T@T) ) (= ($generated@@1 ($generated@@54 $generated@@83)) 8))) (forall (($generated@@84 T@T) ) (! (= ($generated@@55 ($generated@@54 $generated@@84)) $generated@@84)
 :pattern ( ($generated@@54 $generated@@84))
))) (forall (($generated@@85 T@U) ($generated@@86 T@U) ) (! (let (($generated@@87 ($generated@@55 (type $generated@@86))))
(= (type ($generated@@48 $generated@@85 $generated@@86)) $generated@@87))
 :pattern ( ($generated@@48 $generated@@85 $generated@@86))
))) (= ($generated@@1 $generated@@47) 9)) (forall (($generated@@88 T@U) ($generated@@89 T@U) ($generated@@90 T@U) ) (! (= (type ($generated@@56 $generated@@88 $generated@@89 $generated@@90)) $generated@@47)
 :pattern ( ($generated@@56 $generated@@88 $generated@@89 $generated@@90))
))) (forall (($generated@@91 T@U) ($generated@@92 T@U) ($generated@@93 T@U) ) (! (let (($generated@@94 ($generated@@55 (type $generated@@92))))
 (=> (= (type $generated@@93) $generated@@94) (= ($generated@@48 ($generated@@56 $generated@@91 $generated@@92 $generated@@93) $generated@@92) $generated@@93)))
 :weight 0
))) (and (forall (($generated@@95 T@U) ($generated@@96 T@U) ($generated@@97 T@U) ($generated@@98 T@U) ) (!  (or (= $generated@@97 $generated@@98) (= ($generated@@48 ($generated@@56 $generated@@96 $generated@@97 $generated@@95) $generated@@98) ($generated@@48 $generated@@96 $generated@@98)))
 :weight 0
)) (forall (($generated@@99 T@U) ($generated@@100 T@U) ($generated@@101 T@U) ($generated@@102 T@U) ) (!  (or true (= ($generated@@48 ($generated@@56 $generated@@100 $generated@@101 $generated@@99) $generated@@102) ($generated@@48 $generated@@100 $generated@@102)))
 :weight 0
)))) (= (type $generated@@50) ($generated@@54 $generated@@4))))
(assert (forall (($generated@@103 T@U) ($generated@@104 T@U) ) (!  (=> (and (and (= (type $generated@@103) ($generated@@45 $generated@@46 $generated@@47)) (= (type $generated@@104) ($generated@@45 $generated@@46 $generated@@47))) ($generated@@44 $generated@@103 $generated@@104)) (forall (($generated@@105 T@U) ) (!  (=> (and (= (type $generated@@105) $generated@@46) ($generated@@0 ($generated@@48 ($generated@@49 $generated@@103 $generated@@105) $generated@@50))) ($generated@@0 ($generated@@48 ($generated@@49 $generated@@104 $generated@@105) $generated@@50)))
 :pattern ( ($generated@@48 ($generated@@49 $generated@@104 $generated@@105) $generated@@50))
)))
 :pattern ( ($generated@@44 $generated@@103 $generated@@104))
)))
(assert  (and (and (and (and (and (and (and (forall (($generated@@112 T@T) ($generated@@113 T@T) ) (= ($generated@@1 ($generated@@108 $generated@@112 $generated@@113)) 10)) (forall (($generated@@114 T@T) ($generated@@115 T@T) ) (! (= ($generated@@109 ($generated@@108 $generated@@114 $generated@@115)) $generated@@114)
 :pattern ( ($generated@@108 $generated@@114 $generated@@115))
))) (forall (($generated@@116 T@T) ($generated@@117 T@T) ) (! (= ($generated@@110 ($generated@@108 $generated@@116 $generated@@117)) $generated@@117)
 :pattern ( ($generated@@108 $generated@@116 $generated@@117))
))) (forall (($generated@@118 T@U) ($generated@@119 T@U) ($generated@@120 T@U) ) (! (let (($generated@@121 ($generated@@110 (type $generated@@118))))
(= (type ($generated@@106 $generated@@118 $generated@@119 $generated@@120)) $generated@@121))
 :pattern ( ($generated@@106 $generated@@118 $generated@@119 $generated@@120))
))) (forall (($generated@@122 T@U) ($generated@@123 T@U) ($generated@@124 T@U) ($generated@@125 T@U) ) (! (let (($generated@@126 (type $generated@@125)))
(let (($generated@@127 (type $generated@@123)))
(= (type ($generated@@111 $generated@@122 $generated@@123 $generated@@124 $generated@@125)) ($generated@@108 $generated@@127 $generated@@126))))
 :pattern ( ($generated@@111 $generated@@122 $generated@@123 $generated@@124 $generated@@125))
))) (forall (($generated@@128 T@U) ($generated@@129 T@U) ($generated@@130 T@U) ($generated@@131 T@U) ) (! (let (($generated@@132 ($generated@@110 (type $generated@@128))))
 (=> (= (type $generated@@131) $generated@@132) (= ($generated@@106 ($generated@@111 $generated@@128 $generated@@129 $generated@@130 $generated@@131) $generated@@129 $generated@@130) $generated@@131)))
 :weight 0
))) (and (and (forall (($generated@@133 T@U) ($generated@@134 T@U) ($generated@@135 T@U) ($generated@@136 T@U) ($generated@@137 T@U) ($generated@@138 T@U) ) (!  (or (= $generated@@135 $generated@@137) (= ($generated@@106 ($generated@@111 $generated@@134 $generated@@135 $generated@@136 $generated@@133) $generated@@137 $generated@@138) ($generated@@106 $generated@@134 $generated@@137 $generated@@138)))
 :weight 0
)) (forall (($generated@@139 T@U) ($generated@@140 T@U) ($generated@@141 T@U) ($generated@@142 T@U) ($generated@@143 T@U) ($generated@@144 T@U) ) (!  (or (= $generated@@142 $generated@@144) (= ($generated@@106 ($generated@@111 $generated@@140 $generated@@141 $generated@@142 $generated@@139) $generated@@143 $generated@@144) ($generated@@106 $generated@@140 $generated@@143 $generated@@144)))
 :weight 0
))) (forall (($generated@@145 T@U) ($generated@@146 T@U) ($generated@@147 T@U) ($generated@@148 T@U) ($generated@@149 T@U) ($generated@@150 T@U) ) (!  (or true (= ($generated@@106 ($generated@@111 $generated@@146 $generated@@147 $generated@@148 $generated@@145) $generated@@149 $generated@@150) ($generated@@106 $generated@@146 $generated@@149 $generated@@150)))
 :weight 0
)))) (forall (($generated@@151 T@U) ($generated@@152 T@U) ($generated@@153 T@U) ($generated@@154 Bool) ) (! (= (type ($generated@@107 $generated@@151 $generated@@152 $generated@@153 $generated@@154)) ($generated@@108 $generated@@46 $generated@@4))
 :pattern ( ($generated@@107 $generated@@151 $generated@@152 $generated@@153 $generated@@154))
))))
(assert (forall (($generated@@155 T@U) ($generated@@156 T@U) ($generated@@157 T@U) ($generated@@158 Bool) ($generated@@159 T@U) ($generated@@160 T@U) ) (! (let (($generated@@161 ($generated@@55 (type $generated@@160))))
 (=> (and (and (and (and (= (type $generated@@155) $generated@@46) (= (type $generated@@156) ($generated@@45 $generated@@46 $generated@@47))) (= (type $generated@@157) ($generated@@54 $generated@@4))) (= (type $generated@@159) $generated@@46)) (= (type $generated@@160) ($generated@@54 $generated@@161))) (= ($generated@@0 ($generated@@106 ($generated@@107 $generated@@155 $generated@@156 $generated@@157 $generated@@158) $generated@@159 $generated@@160))  (=> (and (not (= $generated@@159 $generated@@155)) ($generated@@0 ($generated@@48 ($generated@@49 $generated@@156 $generated@@159) $generated@@157))) $generated@@158))))
 :pattern ( ($generated@@106 ($generated@@107 $generated@@155 $generated@@156 $generated@@157 $generated@@158) $generated@@159 $generated@@160))
)))
(assert (forall (($generated@@163 Int) ) (! (= ($generated@@162 $generated@@163) $generated@@163)
 :pattern ( ($generated@@162 $generated@@163))
)))
(assert (forall (($generated@@165 T@U) ) (! (let (($generated@@166 (type $generated@@165)))
(= (type ($generated@@164 $generated@@165)) $generated@@166))
 :pattern ( ($generated@@164 $generated@@165))
)))
(assert (forall (($generated@@167 T@U) ) (! (= ($generated@@164 $generated@@167) $generated@@167)
 :pattern ( ($generated@@164 $generated@@167))
)))
(assert (forall (($generated@@168 T@U) ($generated@@169 T@U) ($generated@@170 T@U) ) (!  (=> (and (and (and (and (= (type $generated@@168) ($generated@@45 $generated@@46 $generated@@47)) (= (type $generated@@169) ($generated@@45 $generated@@46 $generated@@47))) (= (type $generated@@170) ($generated@@45 $generated@@46 $generated@@47))) (not (= $generated@@168 $generated@@170))) (and ($generated@@44 $generated@@168 $generated@@169) ($generated@@44 $generated@@169 $generated@@170))) ($generated@@44 $generated@@168 $generated@@170))
 :pattern ( ($generated@@44 $generated@@168 $generated@@169) ($generated@@44 $generated@@169 $generated@@170))
)))
(assert  (and (and (= ($generated@@1 $generated@@173) 11) (forall (($generated@@174 T@U) ) (! (= (type ($generated@@171 $generated@@174)) $generated@@173)
 :pattern ( ($generated@@171 $generated@@174))
))) (forall (($generated@@175 T@T) ($generated@@176 T@U) ) (! (= (type ($generated@@172 $generated@@175 $generated@@176)) $generated@@175)
 :pattern ( ($generated@@172 $generated@@175 $generated@@176))
))))
(assert (forall (($generated@@177 T@U) ) (! (let (($generated@@178 (type $generated@@177)))
(= ($generated@@172 $generated@@178 ($generated@@171 $generated@@177)) $generated@@177))
 :pattern ( ($generated@@171 $generated@@177))
)))
(assert (forall (($generated@@179 Int) ) (! (= ($generated@@171 ($generated@@8 ($generated@@162 $generated@@179))) ($generated@@164 ($generated@@171 ($generated@@8 $generated@@179))))
 :pattern ( ($generated@@171 ($generated@@8 ($generated@@162 $generated@@179))))
)))
(assert (forall (($generated@@180 T@U) ) (! (= ($generated@@171 ($generated@@164 $generated@@180)) ($generated@@164 ($generated@@171 $generated@@180)))
 :pattern ( ($generated@@171 ($generated@@164 $generated@@180)))
)))
(push 1)
(declare-fun ControlFlow (Int Int) Int)
(declare-fun $generated@@181 () Int)
(declare-fun $generated@@182 () Int)
(declare-fun $generated@@183 () Int)
(declare-fun $generated@@184 () Int)
(declare-fun $generated@@185 () Int)
(declare-fun $generated@@186 () Int)
(declare-fun $generated@@187 () Int)
(declare-fun $generated@@188 () Int)
(declare-fun $generated@@189 () Int)
(declare-fun $generated@@190 () Int)
(declare-fun $generated@@191 () Bool)
(declare-fun $generated@@192 () Int)
(declare-fun $generated@@193 () T@U)
(declare-fun $generated@@194 () T@U)
(declare-fun $generated@@195 () T@U)
(declare-fun $generated@@196 () Int)
(declare-fun $generated@@197 () Int)
(declare-fun $generated@@198 () Int)
(declare-fun $generated@@199 (T@U) Bool)
(declare-fun $generated@@200 (T@U) Bool)
(declare-fun $generated@@201 () Int)
(declare-fun $generated@@202 () Int)
(declare-fun $generated@@203 () Int)
(assert  (and (and (= (type $generated@@193) ($generated@@45 $generated@@46 $generated@@47)) (= (type $generated@@194) $generated@@46)) (= (type $generated@@195) ($generated@@108 $generated@@46 $generated@@4))))
(set-option :timeout 0)
(set-option :rlimit 0)
(assert (not
 (=> (= (ControlFlow 0 0) 18) (let (($generated@@204  (and (=> (= (ControlFlow 0 6) (- 0 7)) (or (<= 0 $generated@@181) (= (- $generated@@182 $generated@@183) $generated@@181))) (=> (or (<= 0 $generated@@181) (= (- $generated@@182 $generated@@183) $generated@@181)) (=> (= (ControlFlow 0 6) (- 0 5)) (< (- $generated@@182 $generated@@183) $generated@@181))))))
(let (($generated@@205  (=> (and (<= $generated@@184 3) (= $generated@@185 ($generated@@162 3))) (and (=> (= (ControlFlow 0 10) (- 0 11)) (or (or (= $generated@@185 ($generated@@162 0)) (= $generated@@185 ($generated@@162 3))) (= $generated@@185 ($generated@@162 7)))) (=> (or (or (= $generated@@185 ($generated@@162 0)) (= $generated@@185 ($generated@@162 3))) (= $generated@@185 ($generated@@162 7))) (=> (and (and (= $generated@@186 ($generated@@162 3)) (= $generated@@183 $generated@@186)) (and (= $generated@@182 $generated@@184) (= (ControlFlow 0 10) 6))) $generated@@204))))))
(let (($generated@@206  (=> (and (< 3 $generated@@184) (= $generated@@187 ($generated@@162 3))) (and (=> (= (ControlFlow 0 8) (- 0 9)) (or (or (= $generated@@187 ($generated@@162 0)) (= $generated@@187 ($generated@@162 3))) (= $generated@@187 ($generated@@162 7)))) (=> (or (or (= $generated@@187 ($generated@@162 0)) (= $generated@@187 ($generated@@162 3))) (= $generated@@187 ($generated@@162 7))) (=> (and (and (= $generated@@188 ($generated@@162 3)) (= $generated@@183 $generated@@189)) (and (= $generated@@182 $generated@@188) (= (ControlFlow 0 8) 6))) $generated@@204))))))
(let (($generated@@207  (=> (< $generated@@189 $generated@@184) (=> (and (= $generated@@181 (- $generated@@184 $generated@@189)) (= $generated@@190 ($generated@@162 3))) (and (=> (= (ControlFlow 0 12) (- 0 13)) (or (or (= $generated@@190 ($generated@@162 0)) (= $generated@@190 ($generated@@162 3))) (= $generated@@190 ($generated@@162 7)))) (=> (or (or (= $generated@@190 ($generated@@162 0)) (= $generated@@190 ($generated@@162 3))) (= $generated@@190 ($generated@@162 7))) (and (=> (= (ControlFlow 0 12) 8) $generated@@206) (=> (= (ControlFlow 0 12) 10) $generated@@205))))))))
(let (($generated@@208 true))
(let (($generated@@209  (=> $generated@@191 (and (=> (= (ControlFlow 0 14) 4) $generated@@208) (=> (= (ControlFlow 0 14) 12) $generated@@207)))))
(let (($generated@@210  (=> (not $generated@@191) (=> (and (= $generated@@192 (- $generated@@184 $generated@@189)) (= (ControlFlow 0 3) (- 0 2))) (or (or (= $generated@@192 ($generated@@162 0)) (= $generated@@192 ($generated@@162 3))) (= $generated@@192 ($generated@@162 7)))))))
(let (($generated@@211  (and (=> (= (ControlFlow 0 15) 3) $generated@@210) (=> (= (ControlFlow 0 15) 14) $generated@@209))))
(let (($generated@@212 true))
(let (($generated@@213  (=> (and (and (and (or (or (= $generated@@189 ($generated@@162 0)) (= $generated@@189 ($generated@@162 3))) (= $generated@@189 ($generated@@162 7))) (or (or (= $generated@@184 ($generated@@162 0)) (= $generated@@184 ($generated@@162 3))) (= $generated@@184 ($generated@@162 7)))) (and (not false) (forall (($generated@@214 T@U) ) (!  (=> (= (type $generated@@214) $generated@@46) (=> (and (not (= $generated@@214 $generated@@194)) ($generated@@0 ($generated@@48 ($generated@@49 $generated@@193 $generated@@214) $generated@@50))) (= ($generated@@49 $generated@@193 $generated@@214) ($generated@@49 $generated@@193 $generated@@214))))
 :pattern ( ($generated@@49 $generated@@193 $generated@@214))
)))) (and (and ($generated@@44 $generated@@193 $generated@@193) (forall (($generated@@215 T@U) ($generated@@216 T@U) ) (! (let (($generated@@217 ($generated@@55 (type $generated@@216))))
 (=> (and (and (= (type $generated@@215) $generated@@46) (= (type $generated@@216) ($generated@@54 $generated@@217))) (and (not (= $generated@@215 $generated@@194)) ($generated@@0 ($generated@@48 ($generated@@49 $generated@@193 $generated@@215) $generated@@50)))) (or (= ($generated@@48 ($generated@@49 $generated@@193 $generated@@215) $generated@@216) ($generated@@48 ($generated@@49 $generated@@193 $generated@@215) $generated@@216)) ($generated@@0 ($generated@@106 $generated@@195 $generated@@215 $generated@@216)))))
 :pattern ( ($generated@@48 ($generated@@49 $generated@@193 $generated@@215) $generated@@216))
))) (and (<= (- $generated@@184 $generated@@189) $generated@@196) (=> (= (- $generated@@184 $generated@@189) $generated@@196) true)))) (and (=> (= (ControlFlow 0 16) 1) $generated@@212) (=> (= (ControlFlow 0 16) 15) $generated@@211)))))
(let (($generated@@218  (=> (= $generated@@195 ($generated@@107 $generated@@194 $generated@@193 $generated@@50 false)) (=> (and (and (or (or (= $generated@@197 ($generated@@162 0)) (= $generated@@197 ($generated@@162 3))) (= $generated@@197 ($generated@@162 7))) (or (or (= $generated@@198 ($generated@@162 0)) (= $generated@@198 ($generated@@162 3))) (= $generated@@198 ($generated@@162 7)))) (and (= $generated@@196 (- $generated@@198 $generated@@197)) (= (ControlFlow 0 17) 16))) $generated@@213))))
(let (($generated@@219  (=> (and (and (and ($generated@@199 $generated@@193) ($generated@@200 $generated@@193)) (and (or (or (= $generated@@201 ($generated@@162 0)) (= $generated@@201 ($generated@@162 3))) (= $generated@@201 ($generated@@162 7))) true)) (and (and (or (or (= $generated@@202 ($generated@@162 0)) (= $generated@@202 ($generated@@162 3))) (= $generated@@202 ($generated@@162 7))) true) (and (= 1 $generated@@203) (= (ControlFlow 0 18) 17)))) $generated@@218)))
$generated@@219)))))))))))))
))
(check-sat)
(get-info :reason-unknown)
(assert (not (= (ControlFlow 0 3) (- 2))))
(check-sat)
(pop 1)
; Invalid
(get-info :rlimit)
(reset)
(set-option :rlimit 0)
; did a full reset
(reset)
(set-option :print-success false)
(set-info :smt-lib-version 2.6)
(set-option :auto_config false)
(set-option :type_check true)
(set-option :smt.case_split 3)
(set-option :smt.qi.eager_threshold 100)
(set-option :smt.delay_units true)
(set-option :smt.arith.solver 2)
(set-option :smt.mbqi false)
(set-option :model.compact false)
(set-option :model.v2 true)
(set-option :pp.bv_literals false)
; done setting options


(set-info :category "industrial")
(declare-sort |T@U| 0)
(declare-sort |T@T| 0)
(declare-fun real_pow (Real Real) Real)
(declare-fun UOrdering2 (|T@U| |T@U|) Bool)
(declare-fun UOrdering3 (|T@T| |T@U| |T@U|) Bool)
(declare-fun tickleBool (Bool) Bool)
(assert (and (tickleBool true) (tickleBool false)))
(declare-fun $generated (T@U) Int)
(declare-fun $generated@@0 (T@U) Bool)
(declare-fun $generated@@1 (T@T) Int)
(declare-fun $generated@@2 () T@T)
(declare-fun $generated@@3 () T@T)
(declare-fun $generated@@4 () T@T)
(declare-fun $generated@@5 () T@T)
(declare-fun $generated@@6 () T@T)
(declare-fun $generated@@7 () T@T)
(declare-fun $generated@@8 (Int) T@U)
(declare-fun type (T@U) T@T)
(declare-fun $generated@@9 (Real) T@U)
(declare-fun $generated@@10 (T@U) Real)
(declare-fun $generated@@11 (Bool) T@U)
(declare-fun $generated@@12 (RoundingMode) T@U)
(declare-fun $generated@@13 (T@U) RoundingMode)
(declare-fun $generated@@14 (String) T@U)
(declare-fun $generated@@15 (T@U) String)
(declare-fun $generated@@16 ((RegEx String)) T@U)
(declare-fun $generated@@17 (T@U) (RegEx String))
(declare-fun $generated@@44 (T@U T@U T@U) T@U)
(declare-fun $generated@@45 (T@U T@U T@U Bool) T@U)
(declare-fun $generated@@46 (T@T) T@T)
(declare-fun $generated@@47 () T@T)
(declare-fun $generated@@48 (T@T T@T) T@T)
(declare-fun $generated@@49 () T@T)
(declare-fun $generated@@50 (T@T) T@T)
(declare-fun $generated@@51 (T@U T@U) T@U)
(declare-fun $generated@@52 (T@U T@U) T@U)
(declare-fun $generated@@53 (T@T) T@T)
(declare-fun $generated@@54 (T@T) T@T)
(declare-fun $generated@@55 (T@U T@U T@U) T@U)
(declare-fun $generated@@56 (T@U T@U T@U) T@U)
(declare-fun $generated@@57 (T@T T@T) T@T)
(declare-fun $generated@@58 (T@T) T@T)
(declare-fun $generated@@59 (T@T) T@T)
(declare-fun $generated@@60 (T@U T@U T@U T@U) T@U)
(declare-fun $generated@@157 (Int) Int)
(declare-fun $generated@@159 (T@U) T@U)
(declare-fun $generated@@163 (Int Int) Int)
(declare-fun $generated@@166 (T@U) T@U)
(declare-fun $generated@@167 (T@T T@U) T@U)
(declare-fun $generated@@168 () T@T)
(assert  (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (= ($generated@@1 $generated@@2) 0) (= ($generated@@1 $generated@@3) 1)) (= ($generated@@1 $generated@@4) 2)) (= ($generated@@1 $generated@@5) 3)) (= ($generated@@1 $generated@@6) 4)) (= ($generated@@1 $generated@@7) 5)) (forall (($generated@@18 Int) ) (! (= ($generated ($generated@@8 $generated@@18)) $generated@@18)
 :pattern ( ($generated@@8 $generated@@18))
))) (forall (($generated@@19 T@U) ) (!  (=> (= (type $generated@@19) $generated@@2) (= ($generated@@8 ($generated $generated@@19)) $generated@@19))
 :pattern ( ($generated $generated@@19))
))) (forall (($generated@@20 Int) ) (! (= (type ($generated@@8 $generated@@20)) $generated@@2)
 :pattern ( ($generated@@8 $generated@@20))
))) (forall (($generated@@21 Real) ) (! (= ($generated@@10 ($generated@@9 $generated@@21)) $generated@@21)
 :pattern ( ($generated@@9 $generated@@21))
))) (forall (($generated@@22 T@U) ) (!  (=> (= (type $generated@@22) $generated@@3) (= ($generated@@9 ($generated@@10 $generated@@22)) $generated@@22))
 :pattern ( ($generated@@10 $generated@@22))
))) (forall (($generated@@23 Real) ) (! (= (type ($generated@@9 $generated@@23)) $generated@@3)
 :pattern ( ($generated@@9 $generated@@23))
))) (forall (($generated@@24 Bool) ) (! (= ($generated@@0 ($generated@@11 $generated@@24)) $generated@@24)
 :pattern ( ($generated@@11 $generated@@24))
))) (forall (($generated@@25 T@U) ) (!  (=> (= (type $generated@@25) $generated@@4) (= ($generated@@11 ($generated@@0 $generated@@25)) $generated@@25))
 :pattern ( ($generated@@0 $generated@@25))
))) (forall (($generated@@26 Bool) ) (! (= (type ($generated@@11 $generated@@26)) $generated@@4)
 :pattern ( ($generated@@11 $generated@@26))
))) (forall (($generated@@27 RoundingMode) ) (! (= ($generated@@13 ($generated@@12 $generated@@27)) $generated@@27)
 :pattern ( ($generated@@12 $generated@@27))
))) (forall (($generated@@28 T@U) ) (!  (=> (= (type $generated@@28) $generated@@5) (= ($generated@@12 ($generated@@13 $generated@@28)) $generated@@28))
 :pattern ( ($generated@@13 $generated@@28))
))) (forall (($generated@@29 RoundingMode) ) (! (= (type ($generated@@12 $generated@@29)) $generated@@5)
 :pattern ( ($generated@@12 $generated@@29))
))) (forall (($generated@@30 String) ) (! (= ($generated@@15 ($generated@@14 $generated@@30)) $generated@@30)
 :pattern ( ($generated@@14 $generated@@30))
))) (forall (($generated@@31 T@U) ) (!  (=> (= (type $generated@@31) $generated@@6) (= ($generated@@14 ($generated@@15 $generated@@31)) $generated@@31))
 :pattern ( ($generated@@15 $generated@@31))
))) (forall (($generated@@32 String) ) (! (= (type ($generated@@14 $generated@@32)) $generated@@6)
 :pattern ( ($generated@@14 $generated@@32))
))) (forall (($generated@@33 (RegEx String)) ) (! (= ($generated@@17 ($generated@@16 $generated@@33)) $generated@@33)
 :pattern ( ($generated@@16 $generated@@33))
))) (forall (($generated@@34 T@U) ) (!  (=> (= (type $generated@@34) $generated@@7) (= ($generated@@16 ($generated@@17 $generated@@34)) $generated@@34))
 :pattern ( ($generated@@17 $generated@@34))
))) (forall (($generated@@35 (RegEx String)) ) (! (= (type ($generated@@16 $generated@@35)) $generated@@7)
 :pattern ( ($generated@@16 $generated@@35))
))))
(assert (forall (($generated@@36 T@U) ) (! (UOrdering2 $generated@@36 $generated@@36)
 :no-pattern ($generated $generated@@36)
 :no-pattern ($generated@@0 $generated@@36)
)))
(assert (forall (($generated@@37 T@U) ($generated@@38 T@U) ($generated@@39 T@U) ) (! (let (($generated@@40 (type $generated@@37)))
 (=> (and (and (= (type $generated@@38) $generated@@40) (= (type $generated@@39) $generated@@40)) (and (UOrdering2 $generated@@37 $generated@@38) (UOrdering2 $generated@@38 $generated@@39))) (UOrdering2 $generated@@37 $generated@@39)))
 :pattern ( (UOrdering2 $generated@@37 $generated@@38) (UOrdering2 $generated@@38 $generated@@39))
)))
(assert (forall (($generated@@41 T@U) ($generated@@42 T@U) ) (! (let (($generated@@43 (type $generated@@41)))
 (=> (= (type $generated@@42) $generated@@43) (=> (and (UOrdering2 $generated@@41 $generated@@42) (UOrdering2 $generated@@42 $generated@@41)) (= $generated@@41 $generated@@42))))
 :pattern ( (UOrdering2 $generated@@41 $generated@@42) (UOrdering2 $generated@@42 $generated@@41))
)))
(assert  (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (forall (($generated@@61 T@T) ($generated@@62 T@T) ) (= ($generated@@1 ($generated@@48 $generated@@61 $generated@@62)) 6)) (forall (($generated@@63 T@T) ($generated@@64 T@T) ) (! (= ($generated@@53 ($generated@@48 $generated@@63 $generated@@64)) $generated@@63)
 :pattern ( ($generated@@48 $generated@@63 $generated@@64))
))) (forall (($generated@@65 T@T) ($generated@@66 T@T) ) (! (= ($generated@@54 ($generated@@48 $generated@@65 $generated@@66)) $generated@@66)
 :pattern ( ($generated@@48 $generated@@65 $generated@@66))
))) (forall (($generated@@67 T@U) ($generated@@68 T@U) ) (! (let (($generated@@69 ($generated@@54 (type $generated@@67))))
(= (type ($generated@@52 $generated@@67 $generated@@68)) $generated@@69))
 :pattern ( ($generated@@52 $generated@@67 $generated@@68))
))) (forall (($generated@@70 T@U) ($generated@@71 T@U) ($generated@@72 T@U) ) (! (let (($generated@@73 (type $generated@@72)))
(let (($generated@@74 (type $generated@@71)))
(= (type ($generated@@55 $generated@@70 $generated@@71 $generated@@72)) ($generated@@48 $generated@@74 $generated@@73))))
 :pattern ( ($generated@@55 $generated@@70 $generated@@71 $generated@@72))
))) (forall (($generated@@75 T@U) ($generated@@76 T@U) ($generated@@77 T@U) ) (! (let (($generated@@78 ($generated@@54 (type $generated@@75))))
 (=> (= (type $generated@@77) $generated@@78) (= ($generated@@52 ($generated@@55 $generated@@75 $generated@@76 $generated@@77) $generated@@76) $generated@@77)))
 :weight 0
))) (and (forall (($generated@@79 T@U) ($generated@@80 T@U) ($generated@@81 T@U) ($generated@@82 T@U) ) (!  (or (= $generated@@81 $generated@@82) (= ($generated@@52 ($generated@@55 $generated@@80 $generated@@81 $generated@@79) $generated@@82) ($generated@@52 $generated@@80 $generated@@82)))
 :weight 0
)) (forall (($generated@@83 T@U) ($generated@@84 T@U) ($generated@@85 T@U) ($generated@@86 T@U) ) (!  (or true (= ($generated@@52 ($generated@@55 $generated@@84 $generated@@85 $generated@@83) $generated@@86) ($generated@@52 $generated@@84 $generated@@86)))
 :weight 0
)))) (forall (($generated@@87 T@T) ) (= ($generated@@1 ($generated@@50 $generated@@87)) 7))) (forall (($generated@@88 T@T) ) (! (= ($generated@@46 ($generated@@50 $generated@@88)) $generated@@88)
 :pattern ( ($generated@@50 $generated@@88))
))) (forall (($generated@@89 T@U) ($generated@@90 T@U) ) (! (let (($generated@@91 ($generated@@46 (type $generated@@90))))
(= (type ($generated@@51 $generated@@89 $generated@@90)) $generated@@91))
 :pattern ( ($generated@@51 $generated@@89 $generated@@90))
))) (= ($generated@@1 $generated@@49) 8)) (forall (($generated@@92 T@U) ($generated@@93 T@U) ($generated@@94 T@U) ) (! (= (type ($generated@@56 $generated@@92 $generated@@93 $generated@@94)) $generated@@49)
 :pattern ( ($generated@@56 $generated@@92 $generated@@93 $generated@@94))
))) (forall (($generated@@95 T@U) ($generated@@96 T@U) ($generated@@97 T@U) ) (! (let (($generated@@98 ($generated@@46 (type $generated@@96))))
 (=> (= (type $generated@@97) $generated@@98) (= ($generated@@51 ($generated@@56 $generated@@95 $generated@@96 $generated@@97) $generated@@96) $generated@@97)))
 :weight 0
))) (and (forall (($generated@@99 T@U) ($generated@@100 T@U) ($generated@@101 T@U) ($generated@@102 T@U) ) (!  (or (= $generated@@101 $generated@@102) (= ($generated@@51 ($generated@@56 $generated@@100 $generated@@101 $generated@@99) $generated@@102) ($generated@@51 $generated@@100 $generated@@102)))
 :weight 0
)) (forall (($generated@@103 T@U) ($generated@@104 T@U) ($generated@@105 T@U) ($generated@@106 T@U) ) (!  (or true (= ($generated@@51 ($generated@@56 $generated@@104 $generated@@105 $generated@@103) $generated@@106) ($generated@@51 $generated@@104 $generated@@106)))
 :weight 0
)))) (= ($generated@@1 $generated@@47) 9)) (forall (($generated@@107 T@T) ($generated@@108 T@T) ) (= ($generated@@1 ($generated@@57 $generated@@107 $generated@@108)) 10))) (forall (($generated@@109 T@T) ($generated@@110 T@T) ) (! (= ($generated@@58 ($generated@@57 $generated@@109 $generated@@110)) $generated@@109)
 :pattern ( ($generated@@57 $generated@@109 $generated@@110))
))) (forall (($generated@@111 T@T) ($generated@@112 T@T) ) (! (= ($generated@@59 ($generated@@57 $generated@@111 $generated@@112)) $generated@@112)
 :pattern ( ($generated@@57 $generated@@111 $generated@@112))
))) (forall (($generated@@113 T@U) ($generated@@114 T@U) ($generated@@115 T@U) ) (! (let (($generated@@116 ($generated@@59 (type $generated@@113))))
(= (type ($generated@@44 $generated@@113 $generated@@114 $generated@@115)) $generated@@116))
 :pattern ( ($generated@@44 $generated@@113 $generated@@114 $generated@@115))
))) (forall (($generated@@117 T@U) ($generated@@118 T@U) ($generated@@119 T@U) ($generated@@120 T@U) ) (! (let (($generated@@121 (type $generated@@120)))
(let (($generated@@122 (type $generated@@118)))
(= (type ($generated@@60 $generated@@117 $generated@@118 $generated@@119 $generated@@120)) ($generated@@57 $generated@@122 $generated@@121))))
 :pattern ( ($generated@@60 $generated@@117 $generated@@118 $generated@@119 $generated@@120))
))) (forall (($generated@@123 T@U) ($generated@@124 T@U) ($generated@@125 T@U) ($generated@@126 T@U) ) (! (let (($generated@@127 ($generated@@59 (type $generated@@123))))
 (=> (= (type $generated@@126) $generated@@127) (= ($generated@@44 ($generated@@60 $generated@@123 $generated@@124 $generated@@125 $generated@@126) $generated@@124 $generated@@125) $generated@@126)))
 :weight 0
))) (and (and (forall (($generated@@128 T@U) ($generated@@129 T@U) ($generated@@130 T@U) ($generated@@131 T@U) ($generated@@132 T@U) ($generated@@133 T@U) ) (!  (or (= $generated@@130 $generated@@132) (= ($generated@@44 ($generated@@60 $generated@@129 $generated@@130 $generated@@131 $generated@@128) $generated@@132 $generated@@133) ($generated@@44 $generated@@129 $generated@@132 $generated@@133)))
 :weight 0
)) (forall (($generated@@134 T@U) ($generated@@135 T@U) ($generated@@136 T@U) ($generated@@137 T@U) ($generated@@138 T@U) ($generated@@139 T@U) ) (!  (or (= $generated@@137 $generated@@139) (= ($generated@@44 ($generated@@60 $generated@@135 $generated@@136 $generated@@137 $generated@@134) $generated@@138 $generated@@139) ($generated@@44 $generated@@135 $generated@@138 $generated@@139)))
 :weight 0
))) (forall (($generated@@140 T@U) ($generated@@141 T@U) ($generated@@142 T@U) ($generated@@143 T@U) ($generated@@144 T@U) ($generated@@145 T@U) ) (!  (or true (= ($generated@@44 ($generated@@60 $generated@@141 $generated@@142 $generated@@143 $generated@@140) $generated@@144 $generated@@145) ($generated@@44 $generated@@141 $generated@@144 $generated@@145)))
 :weight 0
)))) (forall (($generated@@146 T@U) ($generated@@147 T@U) ($generated@@148 T@U) ($generated@@149 Bool) ) (! (= (type ($generated@@45 $generated@@146 $generated@@147 $generated@@148 $generated@@149)) ($generated@@57 $generated@@47 $generated@@4))
 :pattern ( ($generated@@45 $generated@@146 $generated@@147 $generated@@148 $generated@@149))
))))
(assert (forall (($generated@@150 T@U) ($generated@@151 T@U) ($generated@@152 T@U) ($generated@@153 Bool) ($generated@@154 T@U) ($generated@@155 T@U) ) (! (let (($generated@@156 ($generated@@46 (type $generated@@155))))
 (=> (and (and (and (and (= (type $generated@@150) $generated@@47) (= (type $generated@@151) ($generated@@48 $generated@@47 $generated@@49))) (= (type $generated@@152) ($generated@@50 $generated@@4))) (= (type $generated@@154) $generated@@47)) (= (type $generated@@155) ($generated@@50 $generated@@156))) (= ($generated@@0 ($generated@@44 ($generated@@45 $generated@@150 $generated@@151 $generated@@152 $generated@@153) $generated@@154 $generated@@155))  (=> (and (not (= $generated@@154 $generated@@150)) ($generated@@0 ($generated@@51 ($generated@@52 $generated@@151 $generated@@154) $generated@@152))) $generated@@153))))
 :pattern ( ($generated@@44 ($generated@@45 $generated@@150 $generated@@151 $generated@@152 $generated@@153) $generated@@154 $generated@@155))
)))
(assert (forall (($generated@@158 Int) ) (! (= ($generated@@157 $generated@@158) $generated@@158)
 :pattern ( ($generated@@157 $generated@@158))
)))
(assert (forall (($generated@@160 T@U) ) (! (let (($generated@@161 (type $generated@@160)))
(= (type ($generated@@159 $generated@@160)) $generated@@161))
 :pattern ( ($generated@@159 $generated@@160))
)))
(assert (forall (($generated@@162 T@U) ) (! (= ($generated@@159 $generated@@162) $generated@@162)
 :pattern ( ($generated@@159 $generated@@162))
)))
(assert (forall (($generated@@164 Int) ($generated@@165 Int) ) (! (= ($generated@@163 $generated@@164 $generated@@165) (div $generated@@164 $generated@@165))
 :pattern ( ($generated@@163 $generated@@164 $generated@@165))
)))
(assert  (and (and (= ($generated@@1 $generated@@168) 11) (forall (($generated@@169 T@U) ) (! (= (type ($generated@@166 $generated@@169)) $generated@@168)
 :pattern ( ($generated@@166 $generated@@169))
))) (forall (($generated@@170 T@T) ($generated@@171 T@U) ) (! (= (type ($generated@@167 $generated@@170 $generated@@171)) $generated@@170)
 :pattern ( ($generated@@167 $generated@@170 $generated@@171))
))))
(assert (forall (($generated@@172 T@U) ) (! (let (($generated@@173 (type $generated@@172)))
(= ($generated@@167 $generated@@173 ($generated@@166 $generated@@172)) $generated@@172))
 :pattern ( ($generated@@166 $generated@@172))
)))
(assert (forall (($generated@@174 Int) ) (! (= ($generated@@166 ($generated@@8 ($generated@@157 $generated@@174))) ($generated@@159 ($generated@@166 ($generated@@8 $generated@@174))))
 :pattern ( ($generated@@166 ($generated@@8 ($generated@@157 $generated@@174))))
)))
(assert (forall (($generated@@175 T@U) ) (! (= ($generated@@166 ($generated@@159 $generated@@175)) ($generated@@159 ($generated@@166 $generated@@175)))
 :pattern ( ($generated@@166 ($generated@@159 $generated@@175)))
)))
(push 1)
(declare-fun ControlFlow (Int Int) Int)
(declare-fun $generated@@176 () T@U)
(declare-fun $generated@@177 () T@U)
(declare-fun $generated@@178 () T@U)
(declare-fun $generated@@179 () T@U)
(declare-fun $generated@@180 () Int)
(declare-fun $generated@@181 () Int)
(declare-fun $generated@@182 () Int)
(declare-fun $generated@@183 () Int)
(declare-fun $generated@@184 () Int)
(declare-fun $generated@@185 (T@U) Bool)
(declare-fun $generated@@186 (T@U) Bool)
(declare-fun $generated@@187 () Int)
(declare-fun $generated@@188 () Int)
(assert  (and (and (and (= (type $generated@@176) ($generated@@57 $generated@@47 $generated@@4)) (= (type $generated@@177) $generated@@47)) (= (type $generated@@178) ($generated@@48 $generated@@47 $generated@@49))) (= (type $generated@@179) ($generated@@50 $generated@@4))))
(set-option :timeout 0)
(set-option :rlimit 0)
(assert (not
 (=> (= (ControlFlow 0 0) 6) (let (($generated@@189  (=> (and (= $generated@@176 ($generated@@45 $generated@@177 $generated@@178 $generated@@179 false)) (= $generated@@180 (+ $generated@@181 $generated@@182))) (and (=> (= (ControlFlow 0 2) (- 0 5)) (and (<= ($generated@@157 0) $generated@@180) (< $generated@@180 256))) (=> (and (<= ($generated@@157 0) $generated@@180) (< $generated@@180 256)) (=> (= $generated@@183 ($generated@@157 2)) (and (=> (= (ControlFlow 0 2) (- 0 4)) (and (<= ($generated@@157 0) $generated@@183) (< $generated@@183 256))) (=> (and (<= ($generated@@157 0) $generated@@183) (< $generated@@183 256)) (and (=> (= (ControlFlow 0 2) (- 0 3)) (not (= ($generated@@157 2) 0))) (=> (not (= ($generated@@157 2) 0)) (=> (and (= $generated@@184 ($generated@@163 (+ $generated@@181 $generated@@182) ($generated@@157 2))) (= (ControlFlow 0 2) (- 0 1))) (and (<= ($generated@@157 0) $generated@@184) (< $generated@@184 256)))))))))))))
(let (($generated@@190  (=> (and ($generated@@185 $generated@@178) ($generated@@186 $generated@@178)) (=> (and (and (<= ($generated@@157 0) $generated@@181) (< $generated@@181 256)) (and (<= ($generated@@157 0) $generated@@182) (< $generated@@182 256))) (=> (and (and (and (<= ($generated@@157 0) $generated@@187) (< $generated@@187 256)) (= 1 $generated@@188)) (and (<= $generated@@181 $generated@@182) (= (ControlFlow 0 6) 2))) $generated@@189)))))
$generated@@190)))
))
(check-sat)
(get-info :reason-unknown)
(assert (not (= (ControlFlow 0 2) (- 5))))
(check-sat)
(pop 1)
; Invalid
(get-info :rlimit)
(reset)
(set-option :rlimit 0)
; did a full reset
(reset)
(set-option :print-success false)
(set-info :smt-lib-version 2.6)
(set-option :auto_config false)
(set-option :type_check true)
(set-option :smt.case_split 3)
(set-option :smt.qi.eager_threshold 100)
(set-option :smt.delay_units true)
(set-option :smt.arith.solver 2)
(set-option :smt.mbqi false)
(set-option :model.compact false)
(set-option :model.v2 true)
(set-option :pp.bv_literals false)
; done setting options


(set-info :category "industrial")
(declare-sort |T@U| 0)
(declare-sort |T@T| 0)
(declare-fun real_pow (Real Real) Real)
(declare-fun UOrdering2 (|T@U| |T@U|) Bool)
(declare-fun UOrdering3 (|T@T| |T@U| |T@U|) Bool)
(declare-fun tickleBool (Bool) Bool)
(assert (and (tickleBool true) (tickleBool false)))
(declare-fun $generated (T@U) Int)
(declare-fun $generated@@0 (T@U) Bool)
(declare-fun $generated@@1 (T@T) Int)
(declare-fun $generated@@2 () T@T)
(declare-fun $generated@@3 () T@T)
(declare-fun $generated@@4 () T@T)
(declare-fun $generated@@5 () T@T)
(declare-fun $generated@@6 () T@T)
(declare-fun $generated@@7 () T@T)
(declare-fun $generated@@8 (Int) T@U)
(declare-fun type (T@U) T@T)
(declare-fun $generated@@9 (Real) T@U)
(declare-fun $generated@@10 (T@U) Real)
(declare-fun $generated@@11 (Bool) T@U)
(declare-fun $generated@@12 (RoundingMode) T@U)
(declare-fun $generated@@13 (T@U) RoundingMode)
(declare-fun $generated@@14 (String) T@U)
(declare-fun $generated@@15 (T@U) String)
(declare-fun $generated@@16 ((RegEx String)) T@U)
(declare-fun $generated@@17 (T@U) (RegEx String))
(declare-fun $generated@@44 (T@U T@U) Bool)
(declare-fun $generated@@45 (T@T T@T) T@T)
(declare-fun $generated@@46 () T@T)
(declare-fun $generated@@47 () T@T)
(declare-fun $generated@@48 (T@U T@U) T@U)
(declare-fun $generated@@49 (T@U T@U) T@U)
(declare-fun $generated@@50 () T@U)
(declare-fun $generated@@51 (T@T) T@T)
(declare-fun $generated@@52 (T@T) T@T)
(declare-fun $generated@@53 (T@U T@U T@U) T@U)
(declare-fun $generated@@54 (T@T) T@T)
(declare-fun $generated@@55 (T@T) T@T)
(declare-fun $generated@@56 (T@U T@U T@U) T@U)
(declare-fun $generated@@106 (T@U T@U T@U) T@U)
(declare-fun $generated@@107 (T@U T@U T@U Bool) T@U)
(declare-fun $generated@@108 (T@T T@T) T@T)
(declare-fun $generated@@109 (T@T) T@T)
(declare-fun $generated@@110 (T@T) T@T)
(declare-fun $generated@@111 (T@U T@U T@U T@U) T@U)
(declare-fun $generated@@162 (Int) Int)
(declare-fun $generated@@164 (T@U) T@U)
(declare-fun $generated@@171 (T@U) T@U)
(declare-fun $generated@@172 (T@T T@U) T@U)
(declare-fun $generated@@173 () T@T)
(assert  (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (= ($generated@@1 $generated@@2) 0) (= ($generated@@1 $generated@@3) 1)) (= ($generated@@1 $generated@@4) 2)) (= ($generated@@1 $generated@@5) 3)) (= ($generated@@1 $generated@@6) 4)) (= ($generated@@1 $generated@@7) 5)) (forall (($generated@@18 Int) ) (! (= ($generated ($generated@@8 $generated@@18)) $generated@@18)
 :pattern ( ($generated@@8 $generated@@18))
))) (forall (($generated@@19 T@U) ) (!  (=> (= (type $generated@@19) $generated@@2) (= ($generated@@8 ($generated $generated@@19)) $generated@@19))
 :pattern ( ($generated $generated@@19))
))) (forall (($generated@@20 Int) ) (! (= (type ($generated@@8 $generated@@20)) $generated@@2)
 :pattern ( ($generated@@8 $generated@@20))
))) (forall (($generated@@21 Real) ) (! (= ($generated@@10 ($generated@@9 $generated@@21)) $generated@@21)
 :pattern ( ($generated@@9 $generated@@21))
))) (forall (($generated@@22 T@U) ) (!  (=> (= (type $generated@@22) $generated@@3) (= ($generated@@9 ($generated@@10 $generated@@22)) $generated@@22))
 :pattern ( ($generated@@10 $generated@@22))
))) (forall (($generated@@23 Real) ) (! (= (type ($generated@@9 $generated@@23)) $generated@@3)
 :pattern ( ($generated@@9 $generated@@23))
))) (forall (($generated@@24 Bool) ) (! (= ($generated@@0 ($generated@@11 $generated@@24)) $generated@@24)
 :pattern ( ($generated@@11 $generated@@24))
))) (forall (($generated@@25 T@U) ) (!  (=> (= (type $generated@@25) $generated@@4) (= ($generated@@11 ($generated@@0 $generated@@25)) $generated@@25))
 :pattern ( ($generated@@0 $generated@@25))
))) (forall (($generated@@26 Bool) ) (! (= (type ($generated@@11 $generated@@26)) $generated@@4)
 :pattern ( ($generated@@11 $generated@@26))
))) (forall (($generated@@27 RoundingMode) ) (! (= ($generated@@13 ($generated@@12 $generated@@27)) $generated@@27)
 :pattern ( ($generated@@12 $generated@@27))
))) (forall (($generated@@28 T@U) ) (!  (=> (= (type $generated@@28) $generated@@5) (= ($generated@@12 ($generated@@13 $generated@@28)) $generated@@28))
 :pattern ( ($generated@@13 $generated@@28))
))) (forall (($generated@@29 RoundingMode) ) (! (= (type ($generated@@12 $generated@@29)) $generated@@5)
 :pattern ( ($generated@@12 $generated@@29))
))) (forall (($generated@@30 String) ) (! (= ($generated@@15 ($generated@@14 $generated@@30)) $generated@@30)
 :pattern ( ($generated@@14 $generated@@30))
))) (forall (($generated@@31 T@U) ) (!  (=> (= (type $generated@@31) $generated@@6) (= ($generated@@14 ($generated@@15 $generated@@31)) $generated@@31))
 :pattern ( ($generated@@15 $generated@@31))
))) (forall (($generated@@32 String) ) (! (= (type ($generated@@14 $generated@@32)) $generated@@6)
 :pattern ( ($generated@@14 $generated@@32))
))) (forall (($generated@@33 (RegEx String)) ) (! (= ($generated@@17 ($generated@@16 $generated@@33)) $generated@@33)
 :pattern ( ($generated@@16 $generated@@33))
))) (forall (($generated@@34 T@U) ) (!  (=> (= (type $generated@@34) $generated@@7) (= ($generated@@16 ($generated@@17 $generated@@34)) $generated@@34))
 :pattern ( ($generated@@17 $generated@@34))
))) (forall (($generated@@35 (RegEx String)) ) (! (= (type ($generated@@16 $generated@@35)) $generated@@7)
 :pattern ( ($generated@@16 $generated@@35))
))))
(assert (forall (($generated@@36 T@U) ) (! (UOrdering2 $generated@@36 $generated@@36)
 :no-pattern ($generated $generated@@36)
 :no-pattern ($generated@@0 $generated@@36)
)))
(assert (forall (($generated@@37 T@U) ($generated@@38 T@U) ($generated@@39 T@U) ) (! (let (($generated@@40 (type $generated@@37)))
 (=> (and (and (= (type $generated@@38) $generated@@40) (= (type $generated@@39) $generated@@40)) (and (UOrdering2 $generated@@37 $generated@@38) (UOrdering2 $generated@@38 $generated@@39))) (UOrdering2 $generated@@37 $generated@@39)))
 :pattern ( (UOrdering2 $generated@@37 $generated@@38) (UOrdering2 $generated@@38 $generated@@39))
)))
(assert (forall (($generated@@41 T@U) ($generated@@42 T@U) ) (! (let (($generated@@43 (type $generated@@41)))
 (=> (= (type $generated@@42) $generated@@43) (=> (and (UOrdering2 $generated@@41 $generated@@42) (UOrdering2 $generated@@42 $generated@@41)) (= $generated@@41 $generated@@42))))
 :pattern ( (UOrdering2 $generated@@41 $generated@@42) (UOrdering2 $generated@@42 $generated@@41))
)))
(assert  (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (forall (($generated@@57 T@T) ($generated@@58 T@T) ) (= ($generated@@1 ($generated@@45 $generated@@57 $generated@@58)) 6)) (forall (($generated@@59 T@T) ($generated@@60 T@T) ) (! (= ($generated@@51 ($generated@@45 $generated@@59 $generated@@60)) $generated@@59)
 :pattern ( ($generated@@45 $generated@@59 $generated@@60))
))) (forall (($generated@@61 T@T) ($generated@@62 T@T) ) (! (= ($generated@@52 ($generated@@45 $generated@@61 $generated@@62)) $generated@@62)
 :pattern ( ($generated@@45 $generated@@61 $generated@@62))
))) (forall (($generated@@63 T@U) ($generated@@64 T@U) ) (! (let (($generated@@65 ($generated@@52 (type $generated@@63))))
(= (type ($generated@@49 $generated@@63 $generated@@64)) $generated@@65))
 :pattern ( ($generated@@49 $generated@@63 $generated@@64))
))) (forall (($generated@@66 T@U) ($generated@@67 T@U) ($generated@@68 T@U) ) (! (let (($generated@@69 (type $generated@@68)))
(let (($generated@@70 (type $generated@@67)))
(= (type ($generated@@53 $generated@@66 $generated@@67 $generated@@68)) ($generated@@45 $generated@@70 $generated@@69))))
 :pattern ( ($generated@@53 $generated@@66 $generated@@67 $generated@@68))
))) (forall (($generated@@71 T@U) ($generated@@72 T@U) ($generated@@73 T@U) ) (! (let (($generated@@74 ($generated@@52 (type $generated@@71))))
 (=> (= (type $generated@@73) $generated@@74) (= ($generated@@49 ($generated@@53 $generated@@71 $generated@@72 $generated@@73) $generated@@72) $generated@@73)))
 :weight 0
))) (and (forall (($generated@@75 T@U) ($generated@@76 T@U) ($generated@@77 T@U) ($generated@@78 T@U) ) (!  (or (= $generated@@77 $generated@@78) (= ($generated@@49 ($generated@@53 $generated@@76 $generated@@77 $generated@@75) $generated@@78) ($generated@@49 $generated@@76 $generated@@78)))
 :weight 0
)) (forall (($generated@@79 T@U) ($generated@@80 T@U) ($generated@@81 T@U) ($generated@@82 T@U) ) (!  (or true (= ($generated@@49 ($generated@@53 $generated@@80 $generated@@81 $generated@@79) $generated@@82) ($generated@@49 $generated@@80 $generated@@82)))
 :weight 0
)))) (= ($generated@@1 $generated@@46) 7)) (forall (($generated@@83 T@T) ) (= ($generated@@1 ($generated@@54 $generated@@83)) 8))) (forall (($generated@@84 T@T) ) (! (= ($generated@@55 ($generated@@54 $generated@@84)) $generated@@84)
 :pattern ( ($generated@@54 $generated@@84))
))) (forall (($generated@@85 T@U) ($generated@@86 T@U) ) (! (let (($generated@@87 ($generated@@55 (type $generated@@86))))
(= (type ($generated@@48 $generated@@85 $generated@@86)) $generated@@87))
 :pattern ( ($generated@@48 $generated@@85 $generated@@86))
))) (= ($generated@@1 $generated@@47) 9)) (forall (($generated@@88 T@U) ($generated@@89 T@U) ($generated@@90 T@U) ) (! (= (type ($generated@@56 $generated@@88 $generated@@89 $generated@@90)) $generated@@47)
 :pattern ( ($generated@@56 $generated@@88 $generated@@89 $generated@@90))
))) (forall (($generated@@91 T@U) ($generated@@92 T@U) ($generated@@93 T@U) ) (! (let (($generated@@94 ($generated@@55 (type $generated@@92))))
 (=> (= (type $generated@@93) $generated@@94) (= ($generated@@48 ($generated@@56 $generated@@91 $generated@@92 $generated@@93) $generated@@92) $generated@@93)))
 :weight 0
))) (and (forall (($generated@@95 T@U) ($generated@@96 T@U) ($generated@@97 T@U) ($generated@@98 T@U) ) (!  (or (= $generated@@97 $generated@@98) (= ($generated@@48 ($generated@@56 $generated@@96 $generated@@97 $generated@@95) $generated@@98) ($generated@@48 $generated@@96 $generated@@98)))
 :weight 0
)) (forall (($generated@@99 T@U) ($generated@@100 T@U) ($generated@@101 T@U) ($generated@@102 T@U) ) (!  (or true (= ($generated@@48 ($generated@@56 $generated@@100 $generated@@101 $generated@@99) $generated@@102) ($generated@@48 $generated@@100 $generated@@102)))
 :weight 0
)))) (= (type $generated@@50) ($generated@@54 $generated@@4))))
(assert (forall (($generated@@103 T@U) ($generated@@104 T@U) ) (!  (=> (and (and (= (type $generated@@103) ($generated@@45 $generated@@46 $generated@@47)) (= (type $generated@@104) ($generated@@45 $generated@@46 $generated@@47))) ($generated@@44 $generated@@103 $generated@@104)) (forall (($generated@@105 T@U) ) (!  (=> (and (= (type $generated@@105) $generated@@46) ($generated@@0 ($generated@@48 ($generated@@49 $generated@@103 $generated@@105) $generated@@50))) ($generated@@0 ($generated@@48 ($generated@@49 $generated@@104 $generated@@105) $generated@@50)))
 :pattern ( ($generated@@48 ($generated@@49 $generated@@104 $generated@@105) $generated@@50))
)))
 :pattern ( ($generated@@44 $generated@@103 $generated@@104))
)))
(assert  (and (and (and (and (and (and (and (forall (($generated@@112 T@T) ($generated@@113 T@T) ) (= ($generated@@1 ($generated@@108 $generated@@112 $generated@@113)) 10)) (forall (($generated@@114 T@T) ($generated@@115 T@T) ) (! (= ($generated@@109 ($generated@@108 $generated@@114 $generated@@115)) $generated@@114)
 :pattern ( ($generated@@108 $generated@@114 $generated@@115))
))) (forall (($generated@@116 T@T) ($generated@@117 T@T) ) (! (= ($generated@@110 ($generated@@108 $generated@@116 $generated@@117)) $generated@@117)
 :pattern ( ($generated@@108 $generated@@116 $generated@@117))
))) (forall (($generated@@118 T@U) ($generated@@119 T@U) ($generated@@120 T@U) ) (! (let (($generated@@121 ($generated@@110 (type $generated@@118))))
(= (type ($generated@@106 $generated@@118 $generated@@119 $generated@@120)) $generated@@121))
 :pattern ( ($generated@@106 $generated@@118 $generated@@119 $generated@@120))
))) (forall (($generated@@122 T@U) ($generated@@123 T@U) ($generated@@124 T@U) ($generated@@125 T@U) ) (! (let (($generated@@126 (type $generated@@125)))
(let (($generated@@127 (type $generated@@123)))
(= (type ($generated@@111 $generated@@122 $generated@@123 $generated@@124 $generated@@125)) ($generated@@108 $generated@@127 $generated@@126))))
 :pattern ( ($generated@@111 $generated@@122 $generated@@123 $generated@@124 $generated@@125))
))) (forall (($generated@@128 T@U) ($generated@@129 T@U) ($generated@@130 T@U) ($generated@@131 T@U) ) (! (let (($generated@@132 ($generated@@110 (type $generated@@128))))
 (=> (= (type $generated@@131) $generated@@132) (= ($generated@@106 ($generated@@111 $generated@@128 $generated@@129 $generated@@130 $generated@@131) $generated@@129 $generated@@130) $generated@@131)))
 :weight 0
))) (and (and (forall (($generated@@133 T@U) ($generated@@134 T@U) ($generated@@135 T@U) ($generated@@136 T@U) ($generated@@137 T@U) ($generated@@138 T@U) ) (!  (or (= $generated@@135 $generated@@137) (= ($generated@@106 ($generated@@111 $generated@@134 $generated@@135 $generated@@136 $generated@@133) $generated@@137 $generated@@138) ($generated@@106 $generated@@134 $generated@@137 $generated@@138)))
 :weight 0
)) (forall (($generated@@139 T@U) ($generated@@140 T@U) ($generated@@141 T@U) ($generated@@142 T@U) ($generated@@143 T@U) ($generated@@144 T@U) ) (!  (or (= $generated@@142 $generated@@144) (= ($generated@@106 ($generated@@111 $generated@@140 $generated@@141 $generated@@142 $generated@@139) $generated@@143 $generated@@144) ($generated@@106 $generated@@140 $generated@@143 $generated@@144)))
 :weight 0
))) (forall (($generated@@145 T@U) ($generated@@146 T@U) ($generated@@147 T@U) ($generated@@148 T@U) ($generated@@149 T@U) ($generated@@150 T@U) ) (!  (or true (= ($generated@@106 ($generated@@111 $generated@@146 $generated@@147 $generated@@148 $generated@@145) $generated@@149 $generated@@150) ($generated@@106 $generated@@146 $generated@@149 $generated@@150)))
 :weight 0
)))) (forall (($generated@@151 T@U) ($generated@@152 T@U) ($generated@@153 T@U) ($generated@@154 Bool) ) (! (= (type ($generated@@107 $generated@@151 $generated@@152 $generated@@153 $generated@@154)) ($generated@@108 $generated@@46 $generated@@4))
 :pattern ( ($generated@@107 $generated@@151 $generated@@152 $generated@@153 $generated@@154))
))))
(assert (forall (($generated@@155 T@U) ($generated@@156 T@U) ($generated@@157 T@U) ($generated@@158 Bool) ($generated@@159 T@U) ($generated@@160 T@U) ) (! (let (($generated@@161 ($generated@@55 (type $generated@@160))))
 (=> (and (and (and (and (= (type $generated@@155) $generated@@46) (= (type $generated@@156) ($generated@@45 $generated@@46 $generated@@47))) (= (type $generated@@157) ($generated@@54 $generated@@4))) (= (type $generated@@159) $generated@@46)) (= (type $generated@@160) ($generated@@54 $generated@@161))) (= ($generated@@0 ($generated@@106 ($generated@@107 $generated@@155 $generated@@156 $generated@@157 $generated@@158) $generated@@159 $generated@@160))  (=> (and (not (= $generated@@159 $generated@@155)) ($generated@@0 ($generated@@48 ($generated@@49 $generated@@156 $generated@@159) $generated@@157))) $generated@@158))))
 :pattern ( ($generated@@106 ($generated@@107 $generated@@155 $generated@@156 $generated@@157 $generated@@158) $generated@@159 $generated@@160))
)))
(assert (forall (($generated@@163 Int) ) (! (= ($generated@@162 $generated@@163) $generated@@163)
 :pattern ( ($generated@@162 $generated@@163))
)))
(assert (forall (($generated@@165 T@U) ) (! (let (($generated@@166 (type $generated@@165)))
(= (type ($generated@@164 $generated@@165)) $generated@@166))
 :pattern ( ($generated@@164 $generated@@165))
)))
(assert (forall (($generated@@167 T@U) ) (! (= ($generated@@164 $generated@@167) $generated@@167)
 :pattern ( ($generated@@164 $generated@@167))
)))
(assert (forall (($generated@@168 T@U) ($generated@@169 T@U) ($generated@@170 T@U) ) (!  (=> (and (and (and (and (= (type $generated@@168) ($generated@@45 $generated@@46 $generated@@47)) (= (type $generated@@169) ($generated@@45 $generated@@46 $generated@@47))) (= (type $generated@@170) ($generated@@45 $generated@@46 $generated@@47))) (not (= $generated@@168 $generated@@170))) (and ($generated@@44 $generated@@168 $generated@@169) ($generated@@44 $generated@@169 $generated@@170))) ($generated@@44 $generated@@168 $generated@@170))
 :pattern ( ($generated@@44 $generated@@168 $generated@@169) ($generated@@44 $generated@@169 $generated@@170))
)))
(assert  (and (and (= ($generated@@1 $generated@@173) 11) (forall (($generated@@174 T@U) ) (! (= (type ($generated@@171 $generated@@174)) $generated@@173)
 :pattern ( ($generated@@171 $generated@@174))
))) (forall (($generated@@175 T@T) ($generated@@176 T@U) ) (! (= (type ($generated@@172 $generated@@175 $generated@@176)) $generated@@175)
 :pattern ( ($generated@@172 $generated@@175 $generated@@176))
))))
(assert (forall (($generated@@177 T@U) ) (! (let (($generated@@178 (type $generated@@177)))
(= ($generated@@172 $generated@@178 ($generated@@171 $generated@@177)) $generated@@177))
 :pattern ( ($generated@@171 $generated@@177))
)))
(assert (forall (($generated@@179 Int) ) (! (= ($generated@@171 ($generated@@8 ($generated@@162 $generated@@179))) ($generated@@164 ($generated@@171 ($generated@@8 $generated@@179))))
 :pattern ( ($generated@@171 ($generated@@8 ($generated@@162 $generated@@179))))
)))
(assert (forall (($generated@@180 T@U) ) (! (= ($generated@@171 ($generated@@164 $generated@@180)) ($generated@@164 ($generated@@171 $generated@@180)))
 :pattern ( ($generated@@171 ($generated@@164 $generated@@180)))
)))
(push 1)
(declare-fun ControlFlow (Int Int) Int)
(declare-fun $generated@@181 () Int)
(declare-fun $generated@@182 () Int)
(declare-fun $generated@@183 () Int)
(declare-fun $generated@@184 () Int)
(declare-fun $generated@@185 () Int)
(declare-fun $generated@@186 () Int)
(declare-fun $generated@@187 () Int)
(declare-fun $generated@@188 () Int)
(declare-fun $generated@@189 () Int)
(declare-fun $generated@@190 () Int)
(declare-fun $generated@@191 () Bool)
(declare-fun $generated@@192 () T@U)
(declare-fun $generated@@193 () T@U)
(declare-fun $generated@@194 () T@U)
(declare-fun $generated@@195 () Int)
(declare-fun $generated@@196 () Int)
(declare-fun $generated@@197 () Int)
(declare-fun $generated@@198 (T@U) Bool)
(declare-fun $generated@@199 (T@U) Bool)
(declare-fun $generated@@200 () Int)
(declare-fun $generated@@201 () Int)
(declare-fun $generated@@202 () Int)
(assert  (and (and (= (type $generated@@192) ($generated@@45 $generated@@46 $generated@@47)) (= (type $generated@@193) $generated@@46)) (= (type $generated@@194) ($generated@@108 $generated@@46 $generated@@4))))
(set-option :timeout 0)
(set-option :rlimit 0)
(assert (not
 (=> (= (ControlFlow 0 0) 17) (let (($generated@@203  (and (=> (= (ControlFlow 0 5) (- 0 6)) (or (<= 0 $generated@@181) (= (- $generated@@182 $generated@@183) $generated@@181))) (=> (or (<= 0 $generated@@181) (= (- $generated@@182 $generated@@183) $generated@@181)) (=> (= (ControlFlow 0 5) (- 0 4)) (< (- $generated@@182 $generated@@183) $generated@@181))))))
(let (($generated@@204  (=> (and (<= $generated@@184 3) (= $generated@@185 ($generated@@162 3))) (and (=> (= (ControlFlow 0 9) (- 0 10)) (or (or (= $generated@@185 ($generated@@162 0)) (= $generated@@185 ($generated@@162 3))) (= $generated@@185 ($generated@@162 7)))) (=> (or (or (= $generated@@185 ($generated@@162 0)) (= $generated@@185 ($generated@@162 3))) (= $generated@@185 ($generated@@162 7))) (=> (and (and (= $generated@@186 ($generated@@162 3)) (= $generated@@183 $generated@@186)) (and (= $generated@@182 $generated@@184) (= (ControlFlow 0 9) 5))) $generated@@203))))))
(let (($generated@@205  (=> (and (< 3 $generated@@184) (= $generated@@187 ($generated@@162 3))) (and (=> (= (ControlFlow 0 7) (- 0 8)) (or (or (= $generated@@187 ($generated@@162 0)) (= $generated@@187 ($generated@@162 3))) (= $generated@@187 ($generated@@162 7)))) (=> (or (or (= $generated@@187 ($generated@@162 0)) (= $generated@@187 ($generated@@162 3))) (= $generated@@187 ($generated@@162 7))) (=> (and (and (= $generated@@188 ($generated@@162 3)) (= $generated@@183 $generated@@189)) (and (= $generated@@182 $generated@@188) (= (ControlFlow 0 7) 5))) $generated@@203))))))
(let (($generated@@206  (=> (< $generated@@189 $generated@@184) (=> (and (= $generated@@181 (- $generated@@184 $generated@@189)) (= $generated@@190 ($generated@@162 3))) (and (=> (= (ControlFlow 0 11) (- 0 12)) (or (or (= $generated@@190 ($generated@@162 0)) (= $generated@@190 ($generated@@162 3))) (= $generated@@190 ($generated@@162 7)))) (=> (or (or (= $generated@@190 ($generated@@162 0)) (= $generated@@190 ($generated@@162 3))) (= $generated@@190 ($generated@@162 7))) (and (=> (= (ControlFlow 0 11) 7) $generated@@205) (=> (= (ControlFlow 0 11) 9) $generated@@204))))))))
(let (($generated@@207 true))
(let (($generated@@208  (=> $generated@@191 (and (=> (= (ControlFlow 0 13) 3) $generated@@207) (=> (= (ControlFlow 0 13) 11) $generated@@206)))))
(let (($generated@@209 true))
(let (($generated@@210  (and (=> (= (ControlFlow 0 14) 2) $generated@@209) (=> (= (ControlFlow 0 14) 13) $generated@@208))))
(let (($generated@@211 true))
(let (($generated@@212  (=> (and (and (and (or (or (= $generated@@189 ($generated@@162 0)) (= $generated@@189 ($generated@@162 3))) (= $generated@@189 ($generated@@162 7))) (or (or (= $generated@@184 ($generated@@162 0)) (= $generated@@184 ($generated@@162 3))) (= $generated@@184 ($generated@@162 7)))) (and (not false) (forall (($generated@@213 T@U) ) (!  (=> (= (type $generated@@213) $generated@@46) (=> (and (not (= $generated@@213 $generated@@193)) ($generated@@0 ($generated@@48 ($generated@@49 $generated@@192 $generated@@213) $generated@@50))) (= ($generated@@49 $generated@@192 $generated@@213) ($generated@@49 $generated@@192 $generated@@213))))
 :pattern ( ($generated@@49 $generated@@192 $generated@@213))
)))) (and (and ($generated@@44 $generated@@192 $generated@@192) (forall (($generated@@214 T@U) ($generated@@215 T@U) ) (! (let (($generated@@216 ($generated@@55 (type $generated@@215))))
 (=> (and (and (= (type $generated@@214) $generated@@46) (= (type $generated@@215) ($generated@@54 $generated@@216))) (and (not (= $generated@@214 $generated@@193)) ($generated@@0 ($generated@@48 ($generated@@49 $generated@@192 $generated@@214) $generated@@50)))) (or (= ($generated@@48 ($generated@@49 $generated@@192 $generated@@214) $generated@@215) ($generated@@48 ($generated@@49 $generated@@192 $generated@@214) $generated@@215)) ($generated@@0 ($generated@@106 $generated@@194 $generated@@214 $generated@@215)))))
 :pattern ( ($generated@@48 ($generated@@49 $generated@@192 $generated@@214) $generated@@215))
))) (and (<= (- $generated@@184 $generated@@189) $generated@@195) (=> (= (- $generated@@184 $generated@@189) $generated@@195) true)))) (and (=> (= (ControlFlow 0 15) 1) $generated@@211) (=> (= (ControlFlow 0 15) 14) $generated@@210)))))
(let (($generated@@217  (=> (= $generated@@194 ($generated@@107 $generated@@193 $generated@@192 $generated@@50 false)) (=> (and (and (or (or (= $generated@@196 ($generated@@162 0)) (= $generated@@196 ($generated@@162 3))) (= $generated@@196 ($generated@@162 7))) (or (or (= $generated@@197 ($generated@@162 0)) (= $generated@@197 ($generated@@162 3))) (= $generated@@197 ($generated@@162 7)))) (and (= $generated@@195 (- $generated@@197 $generated@@196)) (= (ControlFlow 0 16) 15))) $generated@@212))))
(let (($generated@@218  (=> (and (and (and ($generated@@198 $generated@@192) ($generated@@199 $generated@@192)) (and (or (or (= $generated@@200 ($generated@@162 0)) (= $generated@@200 ($generated@@162 3))) (= $generated@@200 ($generated@@162 7))) true)) (and (and (or (or (= $generated@@201 ($generated@@162 0)) (= $generated@@201 ($generated@@162 3))) (= $generated@@201 ($generated@@162 7))) true) (and (= 1 $generated@@202) (= (ControlFlow 0 17) 16)))) $generated@@217)))
$generated@@218)))))))))))))
))
(check-sat)
(pop 1)
; Valid
(get-info :rlimit)
(reset)
(set-option :rlimit 0)
; did a full reset
(reset)
(set-option :print-success false)
(set-info :smt-lib-version 2.6)
(set-option :auto_config false)
(set-option :type_check true)
(set-option :smt.case_split 3)
(set-option :smt.qi.eager_threshold 100)
(set-option :smt.delay_units true)
(set-option :smt.arith.solver 2)
(set-option :smt.mbqi false)
(set-option :model.compact false)
(set-option :model.v2 true)
(set-option :pp.bv_literals false)
; done setting options


(set-info :category "industrial")
(declare-sort |T@U| 0)
(declare-sort |T@T| 0)
(declare-fun real_pow (Real Real) Real)
(declare-fun UOrdering2 (|T@U| |T@U|) Bool)
(declare-fun UOrdering3 (|T@T| |T@U| |T@U|) Bool)
(declare-fun tickleBool (Bool) Bool)
(assert (and (tickleBool true) (tickleBool false)))
(declare-fun $generated (T@U) Int)
(declare-fun $generated@@0 (T@U) Bool)
(declare-fun $generated@@1 (T@T) Int)
(declare-fun $generated@@2 () T@T)
(declare-fun $generated@@3 () T@T)
(declare-fun $generated@@4 () T@T)
(declare-fun $generated@@5 () T@T)
(declare-fun $generated@@6 () T@T)
(declare-fun $generated@@7 () T@T)
(declare-fun $generated@@8 (Int) T@U)
(declare-fun type (T@U) T@T)
(declare-fun $generated@@9 (Real) T@U)
(declare-fun $generated@@10 (T@U) Real)
(declare-fun $generated@@11 (Bool) T@U)
(declare-fun $generated@@12 (RoundingMode) T@U)
(declare-fun $generated@@13 (T@U) RoundingMode)
(declare-fun $generated@@14 (String) T@U)
(declare-fun $generated@@15 (T@U) String)
(declare-fun $generated@@16 ((RegEx String)) T@U)
(declare-fun $generated@@17 (T@U) (RegEx String))
(declare-fun $generated@@44 (T@U T@U T@U) T@U)
(declare-fun $generated@@45 (T@U T@U T@U Bool) T@U)
(declare-fun $generated@@46 (T@T) T@T)
(declare-fun $generated@@47 () T@T)
(declare-fun $generated@@48 (T@T T@T) T@T)
(declare-fun $generated@@49 () T@T)
(declare-fun $generated@@50 (T@T) T@T)
(declare-fun $generated@@51 (T@U T@U) T@U)
(declare-fun $generated@@52 (T@U T@U) T@U)
(declare-fun $generated@@53 (T@T) T@T)
(declare-fun $generated@@54 (T@T) T@T)
(declare-fun $generated@@55 (T@U T@U T@U) T@U)
(declare-fun $generated@@56 (T@U T@U T@U) T@U)
(declare-fun $generated@@57 (T@T T@T) T@T)
(declare-fun $generated@@58 (T@T) T@T)
(declare-fun $generated@@59 (T@T) T@T)
(declare-fun $generated@@60 (T@U T@U T@U T@U) T@U)
(declare-fun $generated@@157 (Real) Real)
(declare-fun $generated@@159 (T@U) T@U)
(declare-fun $generated@@163 (T@U) T@U)
(declare-fun $generated@@164 (T@T T@U) T@U)
(declare-fun $generated@@165 () T@T)
(assert  (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (= ($generated@@1 $generated@@2) 0) (= ($generated@@1 $generated@@3) 1)) (= ($generated@@1 $generated@@4) 2)) (= ($generated@@1 $generated@@5) 3)) (= ($generated@@1 $generated@@6) 4)) (= ($generated@@1 $generated@@7) 5)) (forall (($generated@@18 Int) ) (! (= ($generated ($generated@@8 $generated@@18)) $generated@@18)
 :pattern ( ($generated@@8 $generated@@18))
))) (forall (($generated@@19 T@U) ) (!  (=> (= (type $generated@@19) $generated@@2) (= ($generated@@8 ($generated $generated@@19)) $generated@@19))
 :pattern ( ($generated $generated@@19))
))) (forall (($generated@@20 Int) ) (! (= (type ($generated@@8 $generated@@20)) $generated@@2)
 :pattern ( ($generated@@8 $generated@@20))
))) (forall (($generated@@21 Real) ) (! (= ($generated@@10 ($generated@@9 $generated@@21)) $generated@@21)
 :pattern ( ($generated@@9 $generated@@21))
))) (forall (($generated@@22 T@U) ) (!  (=> (= (type $generated@@22) $generated@@3) (= ($generated@@9 ($generated@@10 $generated@@22)) $generated@@22))
 :pattern ( ($generated@@10 $generated@@22))
))) (forall (($generated@@23 Real) ) (! (= (type ($generated@@9 $generated@@23)) $generated@@3)
 :pattern ( ($generated@@9 $generated@@23))
))) (forall (($generated@@24 Bool) ) (! (= ($generated@@0 ($generated@@11 $generated@@24)) $generated@@24)
 :pattern ( ($generated@@11 $generated@@24))
))) (forall (($generated@@25 T@U) ) (!  (=> (= (type $generated@@25) $generated@@4) (= ($generated@@11 ($generated@@0 $generated@@25)) $generated@@25))
 :pattern ( ($generated@@0 $generated@@25))
))) (forall (($generated@@26 Bool) ) (! (= (type ($generated@@11 $generated@@26)) $generated@@4)
 :pattern ( ($generated@@11 $generated@@26))
))) (forall (($generated@@27 RoundingMode) ) (! (= ($generated@@13 ($generated@@12 $generated@@27)) $generated@@27)
 :pattern ( ($generated@@12 $generated@@27))
))) (forall (($generated@@28 T@U) ) (!  (=> (= (type $generated@@28) $generated@@5) (= ($generated@@12 ($generated@@13 $generated@@28)) $generated@@28))
 :pattern ( ($generated@@13 $generated@@28))
))) (forall (($generated@@29 RoundingMode) ) (! (= (type ($generated@@12 $generated@@29)) $generated@@5)
 :pattern ( ($generated@@12 $generated@@29))
))) (forall (($generated@@30 String) ) (! (= ($generated@@15 ($generated@@14 $generated@@30)) $generated@@30)
 :pattern ( ($generated@@14 $generated@@30))
))) (forall (($generated@@31 T@U) ) (!  (=> (= (type $generated@@31) $generated@@6) (= ($generated@@14 ($generated@@15 $generated@@31)) $generated@@31))
 :pattern ( ($generated@@15 $generated@@31))
))) (forall (($generated@@32 String) ) (! (= (type ($generated@@14 $generated@@32)) $generated@@6)
 :pattern ( ($generated@@14 $generated@@32))
))) (forall (($generated@@33 (RegEx String)) ) (! (= ($generated@@17 ($generated@@16 $generated@@33)) $generated@@33)
 :pattern ( ($generated@@16 $generated@@33))
))) (forall (($generated@@34 T@U) ) (!  (=> (= (type $generated@@34) $generated@@7) (= ($generated@@16 ($generated@@17 $generated@@34)) $generated@@34))
 :pattern ( ($generated@@17 $generated@@34))
))) (forall (($generated@@35 (RegEx String)) ) (! (= (type ($generated@@16 $generated@@35)) $generated@@7)
 :pattern ( ($generated@@16 $generated@@35))
))))
(assert (forall (($generated@@36 T@U) ) (! (UOrdering2 $generated@@36 $generated@@36)
 :no-pattern ($generated $generated@@36)
 :no-pattern ($generated@@0 $generated@@36)
)))
(assert (forall (($generated@@37 T@U) ($generated@@38 T@U) ($generated@@39 T@U) ) (! (let (($generated@@40 (type $generated@@37)))
 (=> (and (and (= (type $generated@@38) $generated@@40) (= (type $generated@@39) $generated@@40)) (and (UOrdering2 $generated@@37 $generated@@38) (UOrdering2 $generated@@38 $generated@@39))) (UOrdering2 $generated@@37 $generated@@39)))
 :pattern ( (UOrdering2 $generated@@37 $generated@@38) (UOrdering2 $generated@@38 $generated@@39))
)))
(assert (forall (($generated@@41 T@U) ($generated@@42 T@U) ) (! (let (($generated@@43 (type $generated@@41)))
 (=> (= (type $generated@@42) $generated@@43) (=> (and (UOrdering2 $generated@@41 $generated@@42) (UOrdering2 $generated@@42 $generated@@41)) (= $generated@@41 $generated@@42))))
 :pattern ( (UOrdering2 $generated@@41 $generated@@42) (UOrdering2 $generated@@42 $generated@@41))
)))
(assert  (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (forall (($generated@@61 T@T) ($generated@@62 T@T) ) (= ($generated@@1 ($generated@@48 $generated@@61 $generated@@62)) 6)) (forall (($generated@@63 T@T) ($generated@@64 T@T) ) (! (= ($generated@@53 ($generated@@48 $generated@@63 $generated@@64)) $generated@@63)
 :pattern ( ($generated@@48 $generated@@63 $generated@@64))
))) (forall (($generated@@65 T@T) ($generated@@66 T@T) ) (! (= ($generated@@54 ($generated@@48 $generated@@65 $generated@@66)) $generated@@66)
 :pattern ( ($generated@@48 $generated@@65 $generated@@66))
))) (forall (($generated@@67 T@U) ($generated@@68 T@U) ) (! (let (($generated@@69 ($generated@@54 (type $generated@@67))))
(= (type ($generated@@52 $generated@@67 $generated@@68)) $generated@@69))
 :pattern ( ($generated@@52 $generated@@67 $generated@@68))
))) (forall (($generated@@70 T@U) ($generated@@71 T@U) ($generated@@72 T@U) ) (! (let (($generated@@73 (type $generated@@72)))
(let (($generated@@74 (type $generated@@71)))
(= (type ($generated@@55 $generated@@70 $generated@@71 $generated@@72)) ($generated@@48 $generated@@74 $generated@@73))))
 :pattern ( ($generated@@55 $generated@@70 $generated@@71 $generated@@72))
))) (forall (($generated@@75 T@U) ($generated@@76 T@U) ($generated@@77 T@U) ) (! (let (($generated@@78 ($generated@@54 (type $generated@@75))))
 (=> (= (type $generated@@77) $generated@@78) (= ($generated@@52 ($generated@@55 $generated@@75 $generated@@76 $generated@@77) $generated@@76) $generated@@77)))
 :weight 0
))) (and (forall (($generated@@79 T@U) ($generated@@80 T@U) ($generated@@81 T@U) ($generated@@82 T@U) ) (!  (or (= $generated@@81 $generated@@82) (= ($generated@@52 ($generated@@55 $generated@@80 $generated@@81 $generated@@79) $generated@@82) ($generated@@52 $generated@@80 $generated@@82)))
 :weight 0
)) (forall (($generated@@83 T@U) ($generated@@84 T@U) ($generated@@85 T@U) ($generated@@86 T@U) ) (!  (or true (= ($generated@@52 ($generated@@55 $generated@@84 $generated@@85 $generated@@83) $generated@@86) ($generated@@52 $generated@@84 $generated@@86)))
 :weight 0
)))) (forall (($generated@@87 T@T) ) (= ($generated@@1 ($generated@@50 $generated@@87)) 7))) (forall (($generated@@88 T@T) ) (! (= ($generated@@46 ($generated@@50 $generated@@88)) $generated@@88)
 :pattern ( ($generated@@50 $generated@@88))
))) (forall (($generated@@89 T@U) ($generated@@90 T@U) ) (! (let (($generated@@91 ($generated@@46 (type $generated@@90))))
(= (type ($generated@@51 $generated@@89 $generated@@90)) $generated@@91))
 :pattern ( ($generated@@51 $generated@@89 $generated@@90))
))) (= ($generated@@1 $generated@@49) 8)) (forall (($generated@@92 T@U) ($generated@@93 T@U) ($generated@@94 T@U) ) (! (= (type ($generated@@56 $generated@@92 $generated@@93 $generated@@94)) $generated@@49)
 :pattern ( ($generated@@56 $generated@@92 $generated@@93 $generated@@94))
))) (forall (($generated@@95 T@U) ($generated@@96 T@U) ($generated@@97 T@U) ) (! (let (($generated@@98 ($generated@@46 (type $generated@@96))))
 (=> (= (type $generated@@97) $generated@@98) (= ($generated@@51 ($generated@@56 $generated@@95 $generated@@96 $generated@@97) $generated@@96) $generated@@97)))
 :weight 0
))) (and (forall (($generated@@99 T@U) ($generated@@100 T@U) ($generated@@101 T@U) ($generated@@102 T@U) ) (!  (or (= $generated@@101 $generated@@102) (= ($generated@@51 ($generated@@56 $generated@@100 $generated@@101 $generated@@99) $generated@@102) ($generated@@51 $generated@@100 $generated@@102)))
 :weight 0
)) (forall (($generated@@103 T@U) ($generated@@104 T@U) ($generated@@105 T@U) ($generated@@106 T@U) ) (!  (or true (= ($generated@@51 ($generated@@56 $generated@@104 $generated@@105 $generated@@103) $generated@@106) ($generated@@51 $generated@@104 $generated@@106)))
 :weight 0
)))) (= ($generated@@1 $generated@@47) 9)) (forall (($generated@@107 T@T) ($generated@@108 T@T) ) (= ($generated@@1 ($generated@@57 $generated@@107 $generated@@108)) 10))) (forall (($generated@@109 T@T) ($generated@@110 T@T) ) (! (= ($generated@@58 ($generated@@57 $generated@@109 $generated@@110)) $generated@@109)
 :pattern ( ($generated@@57 $generated@@109 $generated@@110))
))) (forall (($generated@@111 T@T) ($generated@@112 T@T) ) (! (= ($generated@@59 ($generated@@57 $generated@@111 $generated@@112)) $generated@@112)
 :pattern ( ($generated@@57 $generated@@111 $generated@@112))
))) (forall (($generated@@113 T@U) ($generated@@114 T@U) ($generated@@115 T@U) ) (! (let (($generated@@116 ($generated@@59 (type $generated@@113))))
(= (type ($generated@@44 $generated@@113 $generated@@114 $generated@@115)) $generated@@116))
 :pattern ( ($generated@@44 $generated@@113 $generated@@114 $generated@@115))
))) (forall (($generated@@117 T@U) ($generated@@118 T@U) ($generated@@119 T@U) ($generated@@120 T@U) ) (! (let (($generated@@121 (type $generated@@120)))
(let (($generated@@122 (type $generated@@118)))
(= (type ($generated@@60 $generated@@117 $generated@@118 $generated@@119 $generated@@120)) ($generated@@57 $generated@@122 $generated@@121))))
 :pattern ( ($generated@@60 $generated@@117 $generated@@118 $generated@@119 $generated@@120))
))) (forall (($generated@@123 T@U) ($generated@@124 T@U) ($generated@@125 T@U) ($generated@@126 T@U) ) (! (let (($generated@@127 ($generated@@59 (type $generated@@123))))
 (=> (= (type $generated@@126) $generated@@127) (= ($generated@@44 ($generated@@60 $generated@@123 $generated@@124 $generated@@125 $generated@@126) $generated@@124 $generated@@125) $generated@@126)))
 :weight 0
))) (and (and (forall (($generated@@128 T@U) ($generated@@129 T@U) ($generated@@130 T@U) ($generated@@131 T@U) ($generated@@132 T@U) ($generated@@133 T@U) ) (!  (or (= $generated@@130 $generated@@132) (= ($generated@@44 ($generated@@60 $generated@@129 $generated@@130 $generated@@131 $generated@@128) $generated@@132 $generated@@133) ($generated@@44 $generated@@129 $generated@@132 $generated@@133)))
 :weight 0
)) (forall (($generated@@134 T@U) ($generated@@135 T@U) ($generated@@136 T@U) ($generated@@137 T@U) ($generated@@138 T@U) ($generated@@139 T@U) ) (!  (or (= $generated@@137 $generated@@139) (= ($generated@@44 ($generated@@60 $generated@@135 $generated@@136 $generated@@137 $generated@@134) $generated@@138 $generated@@139) ($generated@@44 $generated@@135 $generated@@138 $generated@@139)))
 :weight 0
))) (forall (($generated@@140 T@U) ($generated@@141 T@U) ($generated@@142 T@U) ($generated@@143 T@U) ($generated@@144 T@U) ($generated@@145 T@U) ) (!  (or true (= ($generated@@44 ($generated@@60 $generated@@141 $generated@@142 $generated@@143 $generated@@140) $generated@@144 $generated@@145) ($generated@@44 $generated@@141 $generated@@144 $generated@@145)))
 :weight 0
)))) (forall (($generated@@146 T@U) ($generated@@147 T@U) ($generated@@148 T@U) ($generated@@149 Bool) ) (! (= (type ($generated@@45 $generated@@146 $generated@@147 $generated@@148 $generated@@149)) ($generated@@57 $generated@@47 $generated@@4))
 :pattern ( ($generated@@45 $generated@@146 $generated@@147 $generated@@148 $generated@@149))
))))
(assert (forall (($generated@@150 T@U) ($generated@@151 T@U) ($generated@@152 T@U) ($generated@@153 Bool) ($generated@@154 T@U) ($generated@@155 T@U) ) (! (let (($generated@@156 ($generated@@46 (type $generated@@155))))
 (=> (and (and (and (and (= (type $generated@@150) $generated@@47) (= (type $generated@@151) ($generated@@48 $generated@@47 $generated@@49))) (= (type $generated@@152) ($generated@@50 $generated@@4))) (= (type $generated@@154) $generated@@47)) (= (type $generated@@155) ($generated@@50 $generated@@156))) (= ($generated@@0 ($generated@@44 ($generated@@45 $generated@@150 $generated@@151 $generated@@152 $generated@@153) $generated@@154 $generated@@155))  (=> (and (not (= $generated@@154 $generated@@150)) ($generated@@0 ($generated@@51 ($generated@@52 $generated@@151 $generated@@154) $generated@@152))) $generated@@153))))
 :pattern ( ($generated@@44 ($generated@@45 $generated@@150 $generated@@151 $generated@@152 $generated@@153) $generated@@154 $generated@@155))
)))
(assert (forall (($generated@@158 Real) ) (! (= ($generated@@157 $generated@@158) $generated@@158)
 :pattern ( ($generated@@157 $generated@@158))
)))
(assert (forall (($generated@@160 T@U) ) (! (let (($generated@@161 (type $generated@@160)))
(= (type ($generated@@159 $generated@@160)) $generated@@161))
 :pattern ( ($generated@@159 $generated@@160))
)))
(assert (forall (($generated@@162 T@U) ) (! (= ($generated@@159 $generated@@162) $generated@@162)
 :pattern ( ($generated@@159 $generated@@162))
)))
(assert  (and (and (= ($generated@@1 $generated@@165) 11) (forall (($generated@@166 T@U) ) (! (= (type ($generated@@163 $generated@@166)) $generated@@165)
 :pattern ( ($generated@@163 $generated@@166))
))) (forall (($generated@@167 T@T) ($generated@@168 T@U) ) (! (= (type ($generated@@164 $generated@@167 $generated@@168)) $generated@@167)
 :pattern ( ($generated@@164 $generated@@167 $generated@@168))
))))
(assert (forall (($generated@@169 T@U) ) (! (let (($generated@@170 (type $generated@@169)))
(= ($generated@@164 $generated@@170 ($generated@@163 $generated@@169)) $generated@@169))
 :pattern ( ($generated@@163 $generated@@169))
)))
(assert (forall (($generated@@171 Real) ) (! (= ($generated@@163 ($generated@@9 ($generated@@157 $generated@@171))) ($generated@@159 ($generated@@163 ($generated@@9 $generated@@171))))
 :pattern ( ($generated@@163 ($generated@@9 ($generated@@157 $generated@@171))))
)))
(assert (forall (($generated@@172 T@U) ) (! (= ($generated@@163 ($generated@@159 $generated@@172)) ($generated@@159 ($generated@@163 $generated@@172)))
 :pattern ( ($generated@@163 ($generated@@159 $generated@@172)))
)))
(push 1)
(declare-fun ControlFlow (Int Int) Int)
(declare-fun $generated@@173 () Real)
(declare-fun $generated@@174 () T@U)
(declare-fun $generated@@175 () T@U)
(declare-fun $generated@@176 () T@U)
(declare-fun $generated@@177 () T@U)
(declare-fun $generated@@178 (T@U) Bool)
(declare-fun $generated@@179 (T@U) Bool)
(declare-fun $generated@@180 () Int)
(assert  (and (and (and (= (type $generated@@174) ($generated@@57 $generated@@47 $generated@@4)) (= (type $generated@@175) $generated@@47)) (= (type $generated@@176) ($generated@@48 $generated@@47 $generated@@49))) (= (type $generated@@177) ($generated@@50 $generated@@4))))
(set-option :timeout 0)
(set-option :rlimit 0)
(assert (not
 (=> (= (ControlFlow 0 0) 8) (let (($generated@@181 true))
(let (($generated@@182  (=> (and (< $generated@@173 ($generated@@157 0.0)) (= (ControlFlow 0 6) 4)) $generated@@181)))
(let (($generated@@183  (=> (and (<= ($generated@@157 0.0) $generated@@173) (= (ControlFlow 0 5) 4)) $generated@@181)))
(let (($generated@@184  (and (=> (= (ControlFlow 0 2) (- 0 3)) (<= ($generated@@157 0.0) ($generated@@157 0.0))) (=> (= (ControlFlow 0 2) (- 0 1)) (<= ($generated@@157 0.0) ($generated@@157 100.0))))))
(let (($generated@@185  (=> (= $generated@@174 ($generated@@45 $generated@@175 $generated@@176 $generated@@177 false)) (and (and (=> (= (ControlFlow 0 7) 2) $generated@@184) (=> (= (ControlFlow 0 7) 5) $generated@@183)) (=> (= (ControlFlow 0 7) 6) $generated@@182)))))
(let (($generated@@186  (=> (and (and ($generated@@178 $generated@@176) ($generated@@179 $generated@@176)) (and (= 0 $generated@@180) (= (ControlFlow 0 8) 7))) $generated@@185)))
$generated@@186)))))))
))
(check-sat)
(pop 1)
; Valid
(get-info :rlimit)
(reset)
(set-option :rlimit 0)
; did a full reset
(reset)
(set-option :print-success false)
(set-info :smt-lib-version 2.6)
(set-option :auto_config false)
(set-option :type_check true)
(set-option :smt.case_split 3)
(set-option :smt.qi.eager_threshold 100)
(set-option :smt.delay_units true)
(set-option :smt.arith.solver 2)
(set-option :smt.mbqi false)
(set-option :model.compact false)
(set-option :model.v2 true)
(set-option :pp.bv_literals false)
; done setting options


(set-info :category "industrial")
(declare-sort |T@U| 0)
(declare-sort |T@T| 0)
(declare-fun real_pow (Real Real) Real)
(declare-fun UOrdering2 (|T@U| |T@U|) Bool)
(declare-fun UOrdering3 (|T@T| |T@U| |T@U|) Bool)
(declare-fun tickleBool (Bool) Bool)
(assert (and (tickleBool true) (tickleBool false)))
(declare-fun $generated (T@U) Int)
(declare-fun $generated@@0 (T@U) Bool)
(declare-fun $generated@@1 (T@T) Int)
(declare-fun $generated@@2 () T@T)
(declare-fun $generated@@3 () T@T)
(declare-fun $generated@@4 () T@T)
(declare-fun $generated@@5 () T@T)
(declare-fun $generated@@6 () T@T)
(declare-fun $generated@@7 () T@T)
(declare-fun $generated@@8 (Int) T@U)
(declare-fun type (T@U) T@T)
(declare-fun $generated@@9 (Real) T@U)
(declare-fun $generated@@10 (T@U) Real)
(declare-fun $generated@@11 (Bool) T@U)
(declare-fun $generated@@12 (RoundingMode) T@U)
(declare-fun $generated@@13 (T@U) RoundingMode)
(declare-fun $generated@@14 (String) T@U)
(declare-fun $generated@@15 (T@U) String)
(declare-fun $generated@@16 ((RegEx String)) T@U)
(declare-fun $generated@@17 (T@U) (RegEx String))
(declare-fun $generated@@44 () T@U)
(declare-fun $generated@@45 () T@U)
(declare-fun $generated@@46 () T@U)
(declare-fun $generated@@47 () T@U)
(declare-fun $generated@@48 () T@U)
(declare-fun $generated@@49 () T@U)
(declare-fun $generated@@50 () T@U)
(declare-fun $generated@@51 () T@U)
(declare-fun $generated@@52 () T@U)
(declare-fun $generated@@53 () T@U)
(declare-fun $generated@@54 () T@U)
(declare-fun $generated@@55 () T@U)
(declare-fun $generated@@56 () T@U)
(declare-fun $generated@@57 () T@U)
(declare-fun $generated@@58 () T@U)
(declare-fun $generated@@59 () T@U)
(declare-fun $generated@@60 () T@U)
(declare-fun $generated@@61 () T@T)
(declare-fun $generated@@62 () T@T)
(declare-fun $generated@@63 (T@T) T@T)
(declare-fun $generated@@64 (T@T) T@T)
(declare-fun $generated@@67 (T@U) T@U)
(declare-fun $generated@@69 (T@U T@U T@U) Bool)
(declare-fun $generated@@70 (Int) T@U)
(declare-fun $generated@@71 (T@T T@T) T@T)
(declare-fun $generated@@72 () T@T)
(declare-fun $generated@@73 () T@T)
(declare-fun $generated@@74 (T@T) T@T)
(declare-fun $generated@@75 (T@T) T@T)
(declare-fun $generated@@76 (T@U T@U) T@U)
(declare-fun $generated@@77 (T@U T@U T@U) T@U)
(declare-fun $generated@@78 (T@U T@U) T@U)
(declare-fun $generated@@79 (T@U T@U T@U) T@U)
(declare-fun $generated@@127 (T@U T@U T@U) T@U)
(declare-fun $generated@@128 (T@U T@U T@U Bool) T@U)
(declare-fun $generated@@129 (T@T T@T) T@T)
(declare-fun $generated@@130 (T@T) T@T)
(declare-fun $generated@@131 (T@T) T@T)
(declare-fun $generated@@132 (T@U T@U T@U T@U) T@U)
(declare-fun $generated@@183 (Int) Int)
(declare-fun $generated@@185 (T@U) T@U)
(declare-fun $generated@@189 () Int)
(declare-fun $generated@@190 (Int) Bool)
(declare-fun $generated@@191 (Int) Bool)
(declare-fun $generated@@193 (T@T) T@U)
(declare-fun $generated@@194 (T@U) Int)
(declare-fun $generated@@195 (T@T) T@T)
(declare-fun $generated@@196 (T@T) T@T)
(declare-fun $generated@@201 (T@U T@U T@U) Bool)
(declare-fun $generated@@202 (T@U) T@U)
(declare-fun $generated@@203 () T@T)
(declare-fun $generated@@208 (T@U) T@U)
(declare-fun $generated@@209 (T@T T@T) T@U)
(declare-fun $generated@@210 (T@T T@T) T@T)
(declare-fun $generated@@211 (T@T) T@T)
(declare-fun $generated@@212 (T@T) T@T)
(declare-fun $generated@@226 (T@U) T@U)
(declare-fun $generated@@227 (T@T T@T) T@U)
(declare-fun $generated@@228 (T@T T@T) T@T)
(declare-fun $generated@@229 (T@T) T@T)
(declare-fun $generated@@230 (T@T) T@T)
(declare-fun $generated@@252 (T@U) T@U)
(declare-fun $generated@@258 (T@U) T@U)
(declare-fun $generated@@264 (T@U T@U) T@U)
(declare-fun $generated@@265 (T@U) T@U)
(declare-fun $generated@@276 (T@U T@U) T@U)
(declare-fun $generated@@277 (T@U) T@U)
(declare-fun $generated@@288 (T@T) T@U)
(declare-fun $generated@@295 (T@U) T@U)
(declare-fun $generated@@299 (T@U) T@U)
(declare-fun $generated@@305 (T@U) T@U)
(declare-fun $generated@@309 (T@U) T@U)
(declare-fun $generated@@315 (T@U) T@U)
(declare-fun $generated@@316 (T@U Int) T@U)
(declare-fun $generated@@325 (T@U) Int)
(declare-fun $generated@@327 (T@U) T@U)
(declare-fun $generated@@331 (T@U) T@U)
(declare-fun $generated@@335 (T@U) T@U)
(declare-fun $generated@@336 (T@U) T@U)
(declare-fun $generated@@341 (T@U) T@U)
(declare-fun $generated@@345 (T@T T@U) T@U)
(declare-fun $generated@@352 (Int Int) Int)
(declare-fun $generated@@371 () T@T)
(assert  (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (= ($generated@@1 $generated@@2) 0) (= ($generated@@1 $generated@@3) 1)) (= ($generated@@1 $generated@@4) 2)) (= ($generated@@1 $generated@@5) 3)) (= ($generated@@1 $generated@@6) 4)) (= ($generated@@1 $generated@@7) 5)) (forall (($generated@@18 Int) ) (! (= ($generated ($generated@@8 $generated@@18)) $generated@@18)
 :pattern ( ($generated@@8 $generated@@18))
))) (forall (($generated@@19 T@U) ) (!  (=> (= (type $generated@@19) $generated@@2) (= ($generated@@8 ($generated $generated@@19)) $generated@@19))
 :pattern ( ($generated $generated@@19))
))) (forall (($generated@@20 Int) ) (! (= (type ($generated@@8 $generated@@20)) $generated@@2)
 :pattern ( ($generated@@8 $generated@@20))
))) (forall (($generated@@21 Real) ) (! (= ($generated@@10 ($generated@@9 $generated@@21)) $generated@@21)
 :pattern ( ($generated@@9 $generated@@21))
))) (forall (($generated@@22 T@U) ) (!  (=> (= (type $generated@@22) $generated@@3) (= ($generated@@9 ($generated@@10 $generated@@22)) $generated@@22))
 :pattern ( ($generated@@10 $generated@@22))
))) (forall (($generated@@23 Real) ) (! (= (type ($generated@@9 $generated@@23)) $generated@@3)
 :pattern ( ($generated@@9 $generated@@23))
))) (forall (($generated@@24 Bool) ) (! (= ($generated@@0 ($generated@@11 $generated@@24)) $generated@@24)
 :pattern ( ($generated@@11 $generated@@24))
))) (forall (($generated@@25 T@U) ) (!  (=> (= (type $generated@@25) $generated@@4) (= ($generated@@11 ($generated@@0 $generated@@25)) $generated@@25))
 :pattern ( ($generated@@0 $generated@@25))
))) (forall (($generated@@26 Bool) ) (! (= (type ($generated@@11 $generated@@26)) $generated@@4)
 :pattern ( ($generated@@11 $generated@@26))
))) (forall (($generated@@27 RoundingMode) ) (! (= ($generated@@13 ($generated@@12 $generated@@27)) $generated@@27)
 :pattern ( ($generated@@12 $generated@@27))
))) (forall (($generated@@28 T@U) ) (!  (=> (= (type $generated@@28) $generated@@5) (= ($generated@@12 ($generated@@13 $generated@@28)) $generated@@28))
 :pattern ( ($generated@@13 $generated@@28))
))) (forall (($generated@@29 RoundingMode) ) (! (= (type ($generated@@12 $generated@@29)) $generated@@5)
 :pattern ( ($generated@@12 $generated@@29))
))) (forall (($generated@@30 String) ) (! (= ($generated@@15 ($generated@@14 $generated@@30)) $generated@@30)
 :pattern ( ($generated@@14 $generated@@30))
))) (forall (($generated@@31 T@U) ) (!  (=> (= (type $generated@@31) $generated@@6) (= ($generated@@14 ($generated@@15 $generated@@31)) $generated@@31))
 :pattern ( ($generated@@15 $generated@@31))
))) (forall (($generated@@32 String) ) (! (= (type ($generated@@14 $generated@@32)) $generated@@6)
 :pattern ( ($generated@@14 $generated@@32))
))) (forall (($generated@@33 (RegEx String)) ) (! (= ($generated@@17 ($generated@@16 $generated@@33)) $generated@@33)
 :pattern ( ($generated@@16 $generated@@33))
))) (forall (($generated@@34 T@U) ) (!  (=> (= (type $generated@@34) $generated@@7) (= ($generated@@16 ($generated@@17 $generated@@34)) $generated@@34))
 :pattern ( ($generated@@17 $generated@@34))
))) (forall (($generated@@35 (RegEx String)) ) (! (= (type ($generated@@16 $generated@@35)) $generated@@7)
 :pattern ( ($generated@@16 $generated@@35))
))))
(assert (forall (($generated@@36 T@U) ) (! (UOrdering2 $generated@@36 $generated@@36)
 :no-pattern ($generated $generated@@36)
 :no-pattern ($generated@@0 $generated@@36)
)))
(assert (forall (($generated@@37 T@U) ($generated@@38 T@U) ($generated@@39 T@U) ) (! (let (($generated@@40 (type $generated@@37)))
 (=> (and (and (= (type $generated@@38) $generated@@40) (= (type $generated@@39) $generated@@40)) (and (UOrdering2 $generated@@37 $generated@@38) (UOrdering2 $generated@@38 $generated@@39))) (UOrdering2 $generated@@37 $generated@@39)))
 :pattern ( (UOrdering2 $generated@@37 $generated@@38) (UOrdering2 $generated@@38 $generated@@39))
)))
(assert (forall (($generated@@41 T@U) ($generated@@42 T@U) ) (! (let (($generated@@43 (type $generated@@41)))
 (=> (= (type $generated@@42) $generated@@43) (=> (and (UOrdering2 $generated@@41 $generated@@42) (UOrdering2 $generated@@42 $generated@@41)) (= $generated@@41 $generated@@42))))
 :pattern ( (UOrdering2 $generated@@41 $generated@@42) (UOrdering2 $generated@@42 $generated@@41))
)))
(assert  (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (= ($generated@@1 $generated@@61) 6) (= (type $generated@@44) $generated@@61)) (= (type $generated@@45) $generated@@61)) (= (type $generated@@46) $generated@@61)) (= (type $generated@@47) $generated@@61)) (= (type $generated@@48) $generated@@61)) (= ($generated@@1 $generated@@62) 7)) (= (type $generated@@49) $generated@@62)) (= (type $generated@@50) $generated@@62)) (= (type $generated@@51) $generated@@62)) (= (type $generated@@52) $generated@@62)) (= (type $generated@@53) $generated@@62)) (= (type $generated@@54) $generated@@62)) (= (type $generated@@55) $generated@@62)) (= (type $generated@@56) $generated@@62)) (= (type $generated@@57) $generated@@62)) (= (type $generated@@58) $generated@@62)) (= (type $generated@@59) $generated@@62)) (forall (($generated@@65 T@T) ) (= ($generated@@1 ($generated@@63 $generated@@65)) 8))) (forall (($generated@@66 T@T) ) (! (= ($generated@@64 ($generated@@63 $generated@@66)) $generated@@66)
 :pattern ( ($generated@@63 $generated@@66))
))) (= (type $generated@@60) ($generated@@63 $generated@@4))))
(assert (distinct $generated@@44 $generated@@45 $generated@@46 $generated@@47 $generated@@48 $generated@@49 $generated@@50 $generated@@51 $generated@@52 $generated@@53 $generated@@54 $generated@@55 $generated@@56 $generated@@57 $generated@@58 $generated@@59 $generated@@60)
)
(assert (forall (($generated@@68 T@U) ) (! (= (type ($generated@@67 $generated@@68)) $generated@@62)
 :pattern ( ($generated@@67 $generated@@68))
)))
(assert (= ($generated@@67 $generated@@44) $generated@@49))
(assert (= ($generated@@67 $generated@@45) $generated@@50))
(assert (= ($generated@@67 $generated@@46) $generated@@51))
(assert (= ($generated@@67 $generated@@47) $generated@@52))
(assert (= ($generated@@67 $generated@@48) $generated@@53))
(assert  (and (and (and (and (and (and (and (and (and (and (and (and (and (forall (($generated@@80 T@T) ($generated@@81 T@T) ) (= ($generated@@1 ($generated@@71 $generated@@80 $generated@@81)) 9)) (forall (($generated@@82 T@T) ($generated@@83 T@T) ) (! (= ($generated@@74 ($generated@@71 $generated@@82 $generated@@83)) $generated@@82)
 :pattern ( ($generated@@71 $generated@@82 $generated@@83))
))) (forall (($generated@@84 T@T) ($generated@@85 T@T) ) (! (= ($generated@@75 ($generated@@71 $generated@@84 $generated@@85)) $generated@@85)
 :pattern ( ($generated@@71 $generated@@84 $generated@@85))
))) (forall (($generated@@86 T@U) ($generated@@87 T@U) ) (! (let (($generated@@88 ($generated@@75 (type $generated@@86))))
(= (type ($generated@@76 $generated@@86 $generated@@87)) $generated@@88))
 :pattern ( ($generated@@76 $generated@@86 $generated@@87))
))) (forall (($generated@@89 T@U) ($generated@@90 T@U) ($generated@@91 T@U) ) (! (let (($generated@@92 (type $generated@@91)))
(let (($generated@@93 (type $generated@@90)))
(= (type ($generated@@77 $generated@@89 $generated@@90 $generated@@91)) ($generated@@71 $generated@@93 $generated@@92))))
 :pattern ( ($generated@@77 $generated@@89 $generated@@90 $generated@@91))
))) (forall (($generated@@94 T@U) ($generated@@95 T@U) ($generated@@96 T@U) ) (! (let (($generated@@97 ($generated@@75 (type $generated@@94))))
 (=> (= (type $generated@@96) $generated@@97) (= ($generated@@76 ($generated@@77 $generated@@94 $generated@@95 $generated@@96) $generated@@95) $generated@@96)))
 :weight 0
))) (and (forall (($generated@@98 T@U) ($generated@@99 T@U) ($generated@@100 T@U) ($generated@@101 T@U) ) (!  (or (= $generated@@100 $generated@@101) (= ($generated@@76 ($generated@@77 $generated@@99 $generated@@100 $generated@@98) $generated@@101) ($generated@@76 $generated@@99 $generated@@101)))
 :weight 0
)) (forall (($generated@@102 T@U) ($generated@@103 T@U) ($generated@@104 T@U) ($generated@@105 T@U) ) (!  (or true (= ($generated@@76 ($generated@@77 $generated@@103 $generated@@104 $generated@@102) $generated@@105) ($generated@@76 $generated@@103 $generated@@105)))
 :weight 0
)))) (= ($generated@@1 $generated@@72) 10)) (forall (($generated@@106 T@U) ($generated@@107 T@U) ) (! (let (($generated@@108 ($generated@@64 (type $generated@@107))))
(= (type ($generated@@78 $generated@@106 $generated@@107)) $generated@@108))
 :pattern ( ($generated@@78 $generated@@106 $generated@@107))
))) (= ($generated@@1 $generated@@73) 11)) (forall (($generated@@109 T@U) ($generated@@110 T@U) ($generated@@111 T@U) ) (! (= (type ($generated@@79 $generated@@109 $generated@@110 $generated@@111)) $generated@@73)
 :pattern ( ($generated@@79 $generated@@109 $generated@@110 $generated@@111))
))) (forall (($generated@@112 T@U) ($generated@@113 T@U) ($generated@@114 T@U) ) (! (let (($generated@@115 ($generated@@64 (type $generated@@113))))
 (=> (= (type $generated@@114) $generated@@115) (= ($generated@@78 ($generated@@79 $generated@@112 $generated@@113 $generated@@114) $generated@@113) $generated@@114)))
 :weight 0
))) (and (forall (($generated@@116 T@U) ($generated@@117 T@U) ($generated@@118 T@U) ($generated@@119 T@U) ) (!  (or (= $generated@@118 $generated@@119) (= ($generated@@78 ($generated@@79 $generated@@117 $generated@@118 $generated@@116) $generated@@119) ($generated@@78 $generated@@117 $generated@@119)))
 :weight 0
)) (forall (($generated@@120 T@U) ($generated@@121 T@U) ($generated@@122 T@U) ($generated@@123 T@U) ) (!  (or true (= ($generated@@78 ($generated@@79 $generated@@121 $generated@@122 $generated@@120) $generated@@123) ($generated@@78 $generated@@121 $generated@@123)))
 :weight 0
)))) (forall (($generated@@124 Int) ) (! (= (type ($generated@@70 $generated@@124)) $generated@@61)
 :pattern ( ($generated@@70 $generated@@124))
))))
(assert (forall (($generated@@125 T@U) ($generated@@126 T@U) ) (!  (=> (and (= (type $generated@@125) $generated@@2) (= (type $generated@@126) ($generated@@71 $generated@@72 $generated@@73))) ($generated@@69 $generated@@125 ($generated@@70 0) $generated@@126))
 :pattern ( ($generated@@69 $generated@@125 ($generated@@70 0) $generated@@126))
)))
(assert  (and (and (and (and (and (and (and (forall (($generated@@133 T@T) ($generated@@134 T@T) ) (= ($generated@@1 ($generated@@129 $generated@@133 $generated@@134)) 12)) (forall (($generated@@135 T@T) ($generated@@136 T@T) ) (! (= ($generated@@130 ($generated@@129 $generated@@135 $generated@@136)) $generated@@135)
 :pattern ( ($generated@@129 $generated@@135 $generated@@136))
))) (forall (($generated@@137 T@T) ($generated@@138 T@T) ) (! (= ($generated@@131 ($generated@@129 $generated@@137 $generated@@138)) $generated@@138)
 :pattern ( ($generated@@129 $generated@@137 $generated@@138))
))) (forall (($generated@@139 T@U) ($generated@@140 T@U) ($generated@@141 T@U) ) (! (let (($generated@@142 ($generated@@131 (type $generated@@139))))
(= (type ($generated@@127 $generated@@139 $generated@@140 $generated@@141)) $generated@@142))
 :pattern ( ($generated@@127 $generated@@139 $generated@@140 $generated@@141))
))) (forall (($generated@@143 T@U) ($generated@@144 T@U) ($generated@@145 T@U) ($generated@@146 T@U) ) (! (let (($generated@@147 (type $generated@@146)))
(let (($generated@@148 (type $generated@@144)))
(= (type ($generated@@132 $generated@@143 $generated@@144 $generated@@145 $generated@@146)) ($generated@@129 $generated@@148 $generated@@147))))
 :pattern ( ($generated@@132 $generated@@143 $generated@@144 $generated@@145 $generated@@146))
))) (forall (($generated@@149 T@U) ($generated@@150 T@U) ($generated@@151 T@U) ($generated@@152 T@U) ) (! (let (($generated@@153 ($generated@@131 (type $generated@@149))))
 (=> (= (type $generated@@152) $generated@@153) (= ($generated@@127 ($generated@@132 $generated@@149 $generated@@150 $generated@@151 $generated@@152) $generated@@150 $generated@@151) $generated@@152)))
 :weight 0
))) (and (and (forall (($generated@@154 T@U) ($generated@@155 T@U) ($generated@@156 T@U) ($generated@@157 T@U) ($generated@@158 T@U) ($generated@@159 T@U) ) (!  (or (= $generated@@156 $generated@@158) (= ($generated@@127 ($generated@@132 $generated@@155 $generated@@156 $generated@@157 $generated@@154) $generated@@158 $generated@@159) ($generated@@127 $generated@@155 $generated@@158 $generated@@159)))
 :weight 0
)) (forall (($generated@@160 T@U) ($generated@@161 T@U) ($generated@@162 T@U) ($generated@@163 T@U) ($generated@@164 T@U) ($generated@@165 T@U) ) (!  (or (= $generated@@163 $generated@@165) (= ($generated@@127 ($generated@@132 $generated@@161 $generated@@162 $generated@@163 $generated@@160) $generated@@164 $generated@@165) ($generated@@127 $generated@@161 $generated@@164 $generated@@165)))
 :weight 0
))) (forall (($generated@@166 T@U) ($generated@@167 T@U) ($generated@@168 T@U) ($generated@@169 T@U) ($generated@@170 T@U) ($generated@@171 T@U) ) (!  (or true (= ($generated@@127 ($generated@@132 $generated@@167 $generated@@168 $generated@@169 $generated@@166) $generated@@170 $generated@@171) ($generated@@127 $generated@@167 $generated@@170 $generated@@171)))
 :weight 0
)))) (forall (($generated@@172 T@U) ($generated@@173 T@U) ($generated@@174 T@U) ($generated@@175 Bool) ) (! (= (type ($generated@@128 $generated@@172 $generated@@173 $generated@@174 $generated@@175)) ($generated@@129 $generated@@72 $generated@@4))
 :pattern ( ($generated@@128 $generated@@172 $generated@@173 $generated@@174 $generated@@175))
))))
(assert (forall (($generated@@176 T@U) ($generated@@177 T@U) ($generated@@178 T@U) ($generated@@179 Bool) ($generated@@180 T@U) ($generated@@181 T@U) ) (! (let (($generated@@182 ($generated@@64 (type $generated@@181))))
 (=> (and (and (and (and (= (type $generated@@176) $generated@@72) (= (type $generated@@177) ($generated@@71 $generated@@72 $generated@@73))) (= (type $generated@@178) ($generated@@63 $generated@@4))) (= (type $generated@@180) $generated@@72)) (= (type $generated@@181) ($generated@@63 $generated@@182))) (= ($generated@@0 ($generated@@127 ($generated@@128 $generated@@176 $generated@@177 $generated@@178 $generated@@179) $generated@@180 $generated@@181))  (=> (and (not (= $generated@@180 $generated@@176)) ($generated@@0 ($generated@@78 ($generated@@76 $generated@@177 $generated@@180) $generated@@178))) $generated@@179))))
 :pattern ( ($generated@@127 ($generated@@128 $generated@@176 $generated@@177 $generated@@178 $generated@@179) $generated@@180 $generated@@181))
)))
(assert (forall (($generated@@184 Int) ) (! (= ($generated@@183 $generated@@184) $generated@@184)
 :pattern ( ($generated@@183 $generated@@184))
)))
(assert (forall (($generated@@186 T@U) ) (! (let (($generated@@187 (type $generated@@186)))
(= (type ($generated@@185 $generated@@186)) $generated@@187))
 :pattern ( ($generated@@185 $generated@@186))
)))
(assert (forall (($generated@@188 T@U) ) (! (= ($generated@@185 $generated@@188) $generated@@188)
 :pattern ( ($generated@@185 $generated@@188))
)))
(assert  (=> (<= 0 $generated@@189) (forall (($generated@@192 Int) ) (!  (=> (or ($generated@@191 $generated@@192) (not (= 0 $generated@@189))) true)
 :pattern ( ($generated@@190 $generated@@192))
))))
(assert  (and (and (forall (($generated@@197 T@T) ) (= ($generated@@1 ($generated@@195 $generated@@197)) 13)) (forall (($generated@@198 T@T) ) (! (= ($generated@@196 ($generated@@195 $generated@@198)) $generated@@198)
 :pattern ( ($generated@@195 $generated@@198))
))) (forall (($generated@@199 T@T) ) (! (= (type ($generated@@193 $generated@@199)) ($generated@@195 $generated@@199))
 :pattern ( ($generated@@193 $generated@@199))
))))
(assert (forall (($generated@@200 T@T) ) (! (= ($generated@@194 ($generated@@193 $generated@@200)) 0)
 :pattern ( ($generated@@193 $generated@@200))
)))
(assert  (and (= ($generated@@1 $generated@@203) 14) (forall (($generated@@204 T@U) ) (! (= (type ($generated@@202 $generated@@204)) $generated@@203)
 :pattern ( ($generated@@202 $generated@@204))
))))
(assert (forall (($generated@@205 T@U) ($generated@@206 T@U) ($generated@@207 T@U) ) (!  (=> (and (= (type $generated@@206) $generated@@61) (= (type $generated@@207) ($generated@@71 $generated@@72 $generated@@73))) (= ($generated@@201 ($generated@@202 $generated@@205) $generated@@206 $generated@@207) ($generated@@69 $generated@@205 $generated@@206 $generated@@207)))
 :pattern ( ($generated@@201 ($generated@@202 $generated@@205) $generated@@206 $generated@@207))
)))
(assert  (and (and (and (and (forall (($generated@@213 T@T) ($generated@@214 T@T) ) (= ($generated@@1 ($generated@@210 $generated@@213 $generated@@214)) 15)) (forall (($generated@@215 T@T) ($generated@@216 T@T) ) (! (= ($generated@@211 ($generated@@210 $generated@@215 $generated@@216)) $generated@@215)
 :pattern ( ($generated@@210 $generated@@215 $generated@@216))
))) (forall (($generated@@217 T@T) ($generated@@218 T@T) ) (! (= ($generated@@212 ($generated@@210 $generated@@217 $generated@@218)) $generated@@218)
 :pattern ( ($generated@@210 $generated@@217 $generated@@218))
))) (forall (($generated@@219 T@U) ) (! (let (($generated@@220 ($generated@@211 (type $generated@@219))))
(= (type ($generated@@208 $generated@@219)) ($generated@@71 $generated@@220 $generated@@4)))
 :pattern ( ($generated@@208 $generated@@219))
))) (forall (($generated@@221 T@T) ($generated@@222 T@T) ) (! (= (type ($generated@@209 $generated@@221 $generated@@222)) ($generated@@210 $generated@@221 $generated@@222))
 :pattern ( ($generated@@209 $generated@@221 $generated@@222))
))))
(assert (forall (($generated@@223 T@U) ($generated@@224 T@T) ) (! (let (($generated@@225 (type $generated@@223)))
 (not ($generated@@0 ($generated@@76 ($generated@@208 ($generated@@209 $generated@@225 $generated@@224)) $generated@@223))))
 :pattern ( (let (($generated@@225 (type $generated@@223)))
($generated@@76 ($generated@@208 ($generated@@209 $generated@@225 $generated@@224)) $generated@@223)))
)))
(assert  (and (and (and (and (forall (($generated@@231 T@T) ($generated@@232 T@T) ) (= ($generated@@1 ($generated@@228 $generated@@231 $generated@@232)) 16)) (forall (($generated@@233 T@T) ($generated@@234 T@T) ) (! (= ($generated@@229 ($generated@@228 $generated@@233 $generated@@234)) $generated@@233)
 :pattern ( ($generated@@228 $generated@@233 $generated@@234))
))) (forall (($generated@@235 T@T) ($generated@@236 T@T) ) (! (= ($generated@@230 ($generated@@228 $generated@@235 $generated@@236)) $generated@@236)
 :pattern ( ($generated@@228 $generated@@235 $generated@@236))
))) (forall (($generated@@237 T@U) ) (! (let (($generated@@238 ($generated@@229 (type $generated@@237))))
(= (type ($generated@@226 $generated@@237)) ($generated@@71 $generated@@238 $generated@@4)))
 :pattern ( ($generated@@226 $generated@@237))
))) (forall (($generated@@239 T@T) ($generated@@240 T@T) ) (! (= (type ($generated@@227 $generated@@239 $generated@@240)) ($generated@@228 $generated@@239 $generated@@240))
 :pattern ( ($generated@@227 $generated@@239 $generated@@240))
))))
(assert (forall (($generated@@241 T@U) ($generated@@242 T@T) ) (! (let (($generated@@243 (type $generated@@241)))
 (not ($generated@@0 ($generated@@76 ($generated@@226 ($generated@@227 $generated@@243 $generated@@242)) $generated@@241))))
 :pattern ( (let (($generated@@243 (type $generated@@241)))
($generated@@76 ($generated@@226 ($generated@@227 $generated@@243 $generated@@242)) $generated@@241)))
)))
(assert (forall (($generated@@244 T@U) ) (! (let (($generated@@245 ($generated@@212 (type $generated@@244))))
(let (($generated@@246 ($generated@@211 (type $generated@@244))))
 (=> (= (type $generated@@244) ($generated@@210 $generated@@246 $generated@@245)) (or (= $generated@@244 ($generated@@209 $generated@@246 $generated@@245)) (exists (($generated@@247 T@U) ) (!  (and (= (type $generated@@247) $generated@@246) ($generated@@0 ($generated@@76 ($generated@@208 $generated@@244) $generated@@247)))
 :no-pattern (type $generated@@247)
 :no-pattern ($generated $generated@@247)
 :no-pattern ($generated@@0 $generated@@247)
))))))
 :pattern ( ($generated@@208 $generated@@244))
)))
(assert (forall (($generated@@248 T@U) ) (! (let (($generated@@249 ($generated@@230 (type $generated@@248))))
(let (($generated@@250 ($generated@@229 (type $generated@@248))))
 (=> (= (type $generated@@248) ($generated@@228 $generated@@250 $generated@@249)) (or (= $generated@@248 ($generated@@227 $generated@@250 $generated@@249)) (exists (($generated@@251 T@U) ) (!  (and (= (type $generated@@251) $generated@@250) ($generated@@0 ($generated@@76 ($generated@@226 $generated@@248) $generated@@251)))
 :no-pattern (type $generated@@251)
 :no-pattern ($generated $generated@@251)
 :no-pattern ($generated@@0 $generated@@251)
))))))
 :pattern ( ($generated@@226 $generated@@248))
)))
(assert (forall (($generated@@253 T@U) ) (! (= (type ($generated@@252 $generated@@253)) $generated@@61)
 :pattern ( ($generated@@252 $generated@@253))
)))
(assert (forall (($generated@@254 T@U) ($generated@@255 T@U) ($generated@@256 T@U) ) (!  (=> (and (and (= (type $generated@@254) ($generated@@71 $generated@@203 $generated@@4)) (= (type $generated@@255) $generated@@61)) (= (type $generated@@256) ($generated@@71 $generated@@72 $generated@@73))) (= ($generated@@69 $generated@@254 ($generated@@252 $generated@@255) $generated@@256) (forall (($generated@@257 T@U) ) (!  (=> (and (= (type $generated@@257) $generated@@203) ($generated@@0 ($generated@@76 $generated@@254 $generated@@257))) ($generated@@201 $generated@@257 $generated@@255 $generated@@256))
 :pattern ( ($generated@@76 $generated@@254 $generated@@257))
))))
 :pattern ( ($generated@@69 $generated@@254 ($generated@@252 $generated@@255) $generated@@256))
)))
(assert (forall (($generated@@259 T@U) ) (! (= (type ($generated@@258 $generated@@259)) $generated@@61)
 :pattern ( ($generated@@258 $generated@@259))
)))
(assert (forall (($generated@@260 T@U) ($generated@@261 T@U) ($generated@@262 T@U) ) (!  (=> (and (and (= (type $generated@@260) ($generated@@71 $generated@@203 $generated@@4)) (= (type $generated@@261) $generated@@61)) (= (type $generated@@262) ($generated@@71 $generated@@72 $generated@@73))) (= ($generated@@69 $generated@@260 ($generated@@258 $generated@@261) $generated@@262) (forall (($generated@@263 T@U) ) (!  (=> (and (= (type $generated@@263) $generated@@203) ($generated@@0 ($generated@@76 $generated@@260 $generated@@263))) ($generated@@201 $generated@@263 $generated@@261 $generated@@262))
 :pattern ( ($generated@@76 $generated@@260 $generated@@263))
))))
 :pattern ( ($generated@@69 $generated@@260 ($generated@@258 $generated@@261) $generated@@262))
)))
(assert  (and (forall (($generated@@266 T@U) ($generated@@267 T@U) ) (! (= (type ($generated@@264 $generated@@266 $generated@@267)) $generated@@61)
 :pattern ( ($generated@@264 $generated@@266 $generated@@267))
)) (forall (($generated@@268 T@U) ) (! (let (($generated@@269 ($generated@@212 (type $generated@@268))))
(let (($generated@@270 ($generated@@211 (type $generated@@268))))
(= (type ($generated@@265 $generated@@268)) ($generated@@71 $generated@@270 $generated@@269))))
 :pattern ( ($generated@@265 $generated@@268))
))))
(assert (forall (($generated@@271 T@U) ($generated@@272 T@U) ($generated@@273 T@U) ($generated@@274 T@U) ) (!  (=> (and (and (and (= (type $generated@@271) ($generated@@210 $generated@@203 $generated@@203)) (= (type $generated@@272) $generated@@61)) (= (type $generated@@273) $generated@@61)) (= (type $generated@@274) ($generated@@71 $generated@@72 $generated@@73))) (= ($generated@@69 $generated@@271 ($generated@@264 $generated@@272 $generated@@273) $generated@@274) (forall (($generated@@275 T@U) ) (!  (=> (and (= (type $generated@@275) $generated@@203) ($generated@@0 ($generated@@76 ($generated@@208 $generated@@271) $generated@@275))) (and ($generated@@201 ($generated@@76 ($generated@@265 $generated@@271) $generated@@275) $generated@@273 $generated@@274) ($generated@@201 $generated@@275 $generated@@272 $generated@@274)))
 :pattern ( ($generated@@76 ($generated@@265 $generated@@271) $generated@@275))
 :pattern ( ($generated@@76 ($generated@@208 $generated@@271) $generated@@275))
))))
 :pattern ( ($generated@@69 $generated@@271 ($generated@@264 $generated@@272 $generated@@273) $generated@@274))
)))
(assert  (and (forall (($generated@@278 T@U) ($generated@@279 T@U) ) (! (= (type ($generated@@276 $generated@@278 $generated@@279)) $generated@@61)
 :pattern ( ($generated@@276 $generated@@278 $generated@@279))
)) (forall (($generated@@280 T@U) ) (! (let (($generated@@281 ($generated@@230 (type $generated@@280))))
(let (($generated@@282 ($generated@@229 (type $generated@@280))))
(= (type ($generated@@277 $generated@@280)) ($generated@@71 $generated@@282 $generated@@281))))
 :pattern ( ($generated@@277 $generated@@280))
))))
(assert (forall (($generated@@283 T@U) ($generated@@284 T@U) ($generated@@285 T@U) ($generated@@286 T@U) ) (!  (=> (and (and (and (= (type $generated@@283) ($generated@@228 $generated@@203 $generated@@203)) (= (type $generated@@284) $generated@@61)) (= (type $generated@@285) $generated@@61)) (= (type $generated@@286) ($generated@@71 $generated@@72 $generated@@73))) (= ($generated@@69 $generated@@283 ($generated@@276 $generated@@284 $generated@@285) $generated@@286) (forall (($generated@@287 T@U) ) (!  (=> (and (= (type $generated@@287) $generated@@203) ($generated@@0 ($generated@@76 ($generated@@226 $generated@@283) $generated@@287))) (and ($generated@@201 ($generated@@76 ($generated@@277 $generated@@283) $generated@@287) $generated@@285 $generated@@286) ($generated@@201 $generated@@287 $generated@@284 $generated@@286)))
 :pattern ( ($generated@@76 ($generated@@277 $generated@@283) $generated@@287))
 :pattern ( ($generated@@76 ($generated@@226 $generated@@283) $generated@@287))
))))
 :pattern ( ($generated@@69 $generated@@283 ($generated@@276 $generated@@284 $generated@@285) $generated@@286))
)))
(assert (forall (($generated@@289 T@T) ) (! (= (type ($generated@@288 $generated@@289)) ($generated@@71 $generated@@289 $generated@@4))
 :pattern ( ($generated@@288 $generated@@289))
)))
(assert (forall (($generated@@290 T@U) ) (! (let (($generated@@291 ($generated@@230 (type $generated@@290))))
(let (($generated@@292 ($generated@@229 (type $generated@@290))))
 (=> (= (type $generated@@290) ($generated@@228 $generated@@292 $generated@@291)) (= (= $generated@@290 ($generated@@227 $generated@@292 $generated@@291)) (= ($generated@@226 $generated@@290) ($generated@@288 $generated@@292))))))
 :pattern ( ($generated@@226 $generated@@290))
)))
(assert (forall (($generated@@293 T@U) ) (! (let (($generated@@294 ($generated@@196 (type $generated@@293))))
 (=> (= (type $generated@@293) ($generated@@195 $generated@@294)) (<= 0 ($generated@@194 $generated@@293))))
 :pattern ( ($generated@@194 $generated@@293))
)))
(assert (forall (($generated@@296 T@U) ) (! (= (type ($generated@@295 $generated@@296)) $generated@@61)
 :pattern ( ($generated@@295 $generated@@296))
)))
(assert (forall (($generated@@297 T@U) ($generated@@298 T@U) ) (!  (=> (and (= (type $generated@@297) $generated@@61) (= (type $generated@@298) $generated@@61)) (= ($generated@@295 ($generated@@264 $generated@@297 $generated@@298)) $generated@@297))
 :pattern ( ($generated@@264 $generated@@297 $generated@@298))
)))
(assert (forall (($generated@@300 T@U) ) (! (= (type ($generated@@299 $generated@@300)) $generated@@61)
 :pattern ( ($generated@@299 $generated@@300))
)))
(assert (forall (($generated@@301 T@U) ($generated@@302 T@U) ) (!  (=> (and (= (type $generated@@301) $generated@@61) (= (type $generated@@302) $generated@@61)) (= ($generated@@299 ($generated@@264 $generated@@301 $generated@@302)) $generated@@302))
 :pattern ( ($generated@@264 $generated@@301 $generated@@302))
)))
(assert (forall (($generated@@303 T@U) ($generated@@304 T@U) ) (!  (=> (and (= (type $generated@@303) $generated@@61) (= (type $generated@@304) $generated@@61)) (= ($generated@@67 ($generated@@264 $generated@@303 $generated@@304)) $generated@@58))
 :pattern ( ($generated@@264 $generated@@303 $generated@@304))
)))
(assert (forall (($generated@@306 T@U) ) (! (= (type ($generated@@305 $generated@@306)) $generated@@61)
 :pattern ( ($generated@@305 $generated@@306))
)))
(assert (forall (($generated@@307 T@U) ($generated@@308 T@U) ) (!  (=> (and (= (type $generated@@307) $generated@@61) (= (type $generated@@308) $generated@@61)) (= ($generated@@305 ($generated@@276 $generated@@307 $generated@@308)) $generated@@307))
 :pattern ( ($generated@@276 $generated@@307 $generated@@308))
)))
(assert (forall (($generated@@310 T@U) ) (! (= (type ($generated@@309 $generated@@310)) $generated@@61)
 :pattern ( ($generated@@309 $generated@@310))
)))
(assert (forall (($generated@@311 T@U) ($generated@@312 T@U) ) (!  (=> (and (= (type $generated@@311) $generated@@61) (= (type $generated@@312) $generated@@61)) (= ($generated@@309 ($generated@@276 $generated@@311 $generated@@312)) $generated@@312))
 :pattern ( ($generated@@276 $generated@@311 $generated@@312))
)))
(assert (forall (($generated@@313 T@U) ($generated@@314 T@U) ) (!  (=> (and (= (type $generated@@313) $generated@@61) (= (type $generated@@314) $generated@@61)) (= ($generated@@67 ($generated@@276 $generated@@313 $generated@@314)) $generated@@59))
 :pattern ( ($generated@@276 $generated@@313 $generated@@314))
)))
(assert  (and (forall (($generated@@317 T@U) ) (! (= (type ($generated@@315 $generated@@317)) $generated@@61)
 :pattern ( ($generated@@315 $generated@@317))
)) (forall (($generated@@318 T@U) ($generated@@319 Int) ) (! (let (($generated@@320 ($generated@@196 (type $generated@@318))))
(= (type ($generated@@316 $generated@@318 $generated@@319)) $generated@@320))
 :pattern ( ($generated@@316 $generated@@318 $generated@@319))
))))
(assert (forall (($generated@@321 T@U) ($generated@@322 T@U) ($generated@@323 T@U) ) (!  (=> (and (and (= (type $generated@@321) ($generated@@195 $generated@@203)) (= (type $generated@@322) $generated@@61)) (= (type $generated@@323) ($generated@@71 $generated@@72 $generated@@73))) (= ($generated@@69 $generated@@321 ($generated@@315 $generated@@322) $generated@@323) (forall (($generated@@324 Int) ) (!  (=> (and (<= 0 $generated@@324) (< $generated@@324 ($generated@@194 $generated@@321))) ($generated@@201 ($generated@@316 $generated@@321 $generated@@324) $generated@@322 $generated@@323))
 :pattern ( ($generated@@316 $generated@@321 $generated@@324))
))))
 :pattern ( ($generated@@69 $generated@@321 ($generated@@315 $generated@@322) $generated@@323))
)))
(assert (forall (($generated@@326 Int) ) (! (= ($generated@@325 ($generated@@70 $generated@@326)) $generated@@326)
 :pattern ( ($generated@@70 $generated@@326))
)))
(assert (forall (($generated@@328 T@U) ) (! (= (type ($generated@@327 $generated@@328)) $generated@@61)
 :pattern ( ($generated@@327 $generated@@328))
)))
(assert (forall (($generated@@329 T@U) ) (!  (=> (= (type $generated@@329) $generated@@61) (= ($generated@@327 ($generated@@252 $generated@@329)) $generated@@329))
 :pattern ( ($generated@@252 $generated@@329))
)))
(assert (forall (($generated@@330 T@U) ) (!  (=> (= (type $generated@@330) $generated@@61) (= ($generated@@67 ($generated@@252 $generated@@330)) $generated@@54))
 :pattern ( ($generated@@252 $generated@@330))
)))
(assert (forall (($generated@@332 T@U) ) (! (= (type ($generated@@331 $generated@@332)) $generated@@61)
 :pattern ( ($generated@@331 $generated@@332))
)))
(assert (forall (($generated@@333 T@U) ) (!  (=> (= (type $generated@@333) $generated@@61) (= ($generated@@331 ($generated@@258 $generated@@333)) $generated@@333))
 :pattern ( ($generated@@258 $generated@@333))
)))
(assert (forall (($generated@@334 T@U) ) (!  (=> (= (type $generated@@334) $generated@@61) (= ($generated@@67 ($generated@@258 $generated@@334)) $generated@@55))
 :pattern ( ($generated@@258 $generated@@334))
)))
(assert  (and (forall (($generated@@337 T@U) ) (! (= (type ($generated@@335 $generated@@337)) $generated@@61)
 :pattern ( ($generated@@335 $generated@@337))
)) (forall (($generated@@338 T@U) ) (! (= (type ($generated@@336 $generated@@338)) $generated@@61)
 :pattern ( ($generated@@336 $generated@@338))
))))
(assert (forall (($generated@@339 T@U) ) (!  (=> (= (type $generated@@339) $generated@@61) (= ($generated@@336 ($generated@@335 $generated@@339)) $generated@@339))
 :pattern ( ($generated@@335 $generated@@339))
)))
(assert (forall (($generated@@340 T@U) ) (!  (=> (= (type $generated@@340) $generated@@61) (= ($generated@@67 ($generated@@335 $generated@@340)) $generated@@56))
 :pattern ( ($generated@@335 $generated@@340))
)))
(assert (forall (($generated@@342 T@U) ) (! (= (type ($generated@@341 $generated@@342)) $generated@@61)
 :pattern ( ($generated@@341 $generated@@342))
)))
(assert (forall (($generated@@343 T@U) ) (!  (=> (= (type $generated@@343) $generated@@61) (= ($generated@@341 ($generated@@315 $generated@@343)) $generated@@343))
 :pattern ( ($generated@@315 $generated@@343))
)))
(assert (forall (($generated@@344 T@U) ) (!  (=> (= (type $generated@@344) $generated@@61) (= ($generated@@67 ($generated@@315 $generated@@344)) $generated@@57))
 :pattern ( ($generated@@315 $generated@@344))
)))
(assert (forall (($generated@@346 T@T) ($generated@@347 T@U) ) (! (= (type ($generated@@345 $generated@@346 $generated@@347)) $generated@@346)
 :pattern ( ($generated@@345 $generated@@346 $generated@@347))
)))
(assert (forall (($generated@@348 T@U) ) (! (let (($generated@@349 (type $generated@@348)))
(= ($generated@@345 $generated@@349 ($generated@@202 $generated@@348)) $generated@@348))
 :pattern ( ($generated@@202 $generated@@348))
)))
(assert (forall (($generated@@350 T@U) ) (! (let (($generated@@351 (type $generated@@350)))
 (not ($generated@@0 ($generated@@76 ($generated@@288 $generated@@351) $generated@@350))))
 :pattern ( (let (($generated@@351 (type $generated@@350)))
($generated@@76 ($generated@@288 $generated@@351) $generated@@350)))
)))
(assert  (=> (<= 0 $generated@@189) (forall (($generated@@353 Int) ) (!  (=> (or ($generated@@191 $generated@@353) (not (= 0 $generated@@189))) (= ($generated@@190 $generated@@353) (= ($generated@@352 $generated@@353 ($generated@@183 2)) ($generated@@183 0))))
 :pattern ( ($generated@@190 $generated@@353))
))))
(assert (forall (($generated@@354 Int) ($generated@@355 Int) ) (! (= ($generated@@352 $generated@@354 $generated@@355) (mod $generated@@354 $generated@@355))
 :pattern ( ($generated@@352 $generated@@354 $generated@@355))
)))
(assert (forall (($generated@@356 T@U) ($generated@@357 T@U) ($generated@@358 T@U) ) (!  (=> (and (and (= (type $generated@@356) ($generated@@71 $generated@@203 $generated@@2)) (= (type $generated@@357) $generated@@61)) (= (type $generated@@358) ($generated@@71 $generated@@72 $generated@@73))) (= ($generated@@69 $generated@@356 ($generated@@335 $generated@@357) $generated@@358) (forall (($generated@@359 T@U) ) (!  (=> (and (= (type $generated@@359) $generated@@203) (< 0 ($generated ($generated@@76 $generated@@356 $generated@@359)))) ($generated@@201 $generated@@359 $generated@@357 $generated@@358))
 :pattern ( ($generated@@76 $generated@@356 $generated@@359))
))))
 :pattern ( ($generated@@69 $generated@@356 ($generated@@335 $generated@@357) $generated@@358))
)))
(assert (forall (($generated@@360 Int) ) (! (= ($generated@@202 ($generated@@8 ($generated@@183 $generated@@360))) ($generated@@185 ($generated@@202 ($generated@@8 $generated@@360))))
 :pattern ( ($generated@@202 ($generated@@8 ($generated@@183 $generated@@360))))
)))
(assert (forall (($generated@@361 T@U) ) (! (= ($generated@@202 ($generated@@185 $generated@@361)) ($generated@@185 ($generated@@202 $generated@@361)))
 :pattern ( ($generated@@202 ($generated@@185 $generated@@361)))
)))
(assert (forall (($generated@@362 T@U) ) (! (let (($generated@@363 ($generated@@196 (type $generated@@362))))
 (=> (and (= (type $generated@@362) ($generated@@195 $generated@@363)) (= ($generated@@194 $generated@@362) 0)) (= $generated@@362 ($generated@@193 $generated@@363))))
 :pattern ( ($generated@@194 $generated@@362))
)))
(assert  (=> (<= 0 $generated@@189) (forall (($generated@@364 Int) ) (!  (=> (or ($generated@@191 ($generated@@183 $generated@@364)) (not (= 0 $generated@@189))) (= ($generated@@190 ($generated@@183 $generated@@364)) (= ($generated@@183 ($generated@@352 $generated@@364 ($generated@@183 2))) ($generated@@183 0))))
 :weight 3
 :pattern ( ($generated@@190 ($generated@@183 $generated@@364)))
))))
(assert (forall (($generated@@365 T@U) ($generated@@366 T@U) ) (!  (=> (and (= (type $generated@@365) ($generated@@71 $generated@@72 $generated@@73)) (= (type $generated@@366) $generated@@2)) ($generated@@69 $generated@@366 $generated@@46 $generated@@365))
 :pattern ( ($generated@@69 $generated@@366 $generated@@46 $generated@@365))
)))
(assert (forall (($generated@@367 T@U) ($generated@@368 T@U) ) (!  (=> (and (= (type $generated@@367) ($generated@@71 $generated@@72 $generated@@73)) (= (type $generated@@368) $generated@@3)) ($generated@@69 $generated@@368 $generated@@47 $generated@@367))
 :pattern ( ($generated@@69 $generated@@368 $generated@@47 $generated@@367))
)))
(assert (forall (($generated@@369 T@U) ($generated@@370 T@U) ) (!  (=> (and (= (type $generated@@369) ($generated@@71 $generated@@72 $generated@@73)) (= (type $generated@@370) $generated@@4)) ($generated@@69 $generated@@370 $generated@@44 $generated@@369))
 :pattern ( ($generated@@69 $generated@@370 $generated@@44 $generated@@369))
)))
(assert (= ($generated@@1 $generated@@371) 17))
(assert (forall (($generated@@372 T@U) ($generated@@373 T@U) ) (!  (=> (and (= (type $generated@@372) ($generated@@71 $generated@@72 $generated@@73)) (= (type $generated@@373) $generated@@371)) ($generated@@69 $generated@@373 $generated@@45 $generated@@372))
 :pattern ( ($generated@@69 $generated@@373 $generated@@45 $generated@@372))
)))
(assert (forall (($generated@@374 T@U) ($generated@@375 T@U) ) (!  (=> (and (= (type $generated@@374) ($generated@@71 $generated@@72 $generated@@73)) (= (type $generated@@375) $generated@@203)) ($generated@@69 $generated@@375 $generated@@48 $generated@@374))
 :pattern ( ($generated@@69 $generated@@375 $generated@@48 $generated@@374))
)))
(push 1)
(declare-fun ControlFlow (Int Int) Int)
(declare-fun $generated@@376 () T@U)
(declare-fun $generated@@377 () T@U)
(declare-fun $generated@@378 () T@U)
(declare-fun $generated@@379 (T@U) Bool)
(declare-fun $generated@@380 (T@U) Bool)
(assert  (and (and (= (type $generated@@376) ($generated@@129 $generated@@72 $generated@@4)) (= (type $generated@@377) $generated@@72)) (= (type $generated@@378) ($generated@@71 $generated@@72 $generated@@73))))
(set-option :timeout 0)
(set-option :rlimit 0)
(assert (not
 (=> (= (ControlFlow 0 0) 5) (let (($generated@@381  (=> (and (and ($generated@@191 ($generated@@183 0)) (= (ControlFlow 0 3) (- 0 2))) ($generated@@191 ($generated@@183 0))) (or ($generated@@0 ($generated@@185 ($generated@@11 ($generated@@190 ($generated@@183 0))))) (= ($generated@@183 ($generated@@352 0 ($generated@@183 2))) ($generated@@183 0))))))
(let (($generated@@382 true))
(let (($generated@@383  (=> (= $generated@@376 ($generated@@128 $generated@@377 $generated@@378 $generated@@60 false)) (and (=> (= (ControlFlow 0 4) 1) $generated@@382) (=> (= (ControlFlow 0 4) 3) $generated@@381)))))
(let (($generated@@384  (=> (and (and ($generated@@379 $generated@@378) ($generated@@380 $generated@@378)) (and (= 1 $generated@@189) (= (ControlFlow 0 5) 4))) $generated@@383)))
$generated@@384)))))
))
(check-sat)
(pop 1)
; Valid
(get-info :rlimit)
(reset)
(set-option :rlimit 0)
; did a full reset
(reset)
(set-option :print-success false)
(set-info :smt-lib-version 2.6)
(set-option :auto_config false)
(set-option :type_check true)
(set-option :smt.case_split 3)
(set-option :smt.qi.eager_threshold 100)
(set-option :smt.delay_units true)
(set-option :smt.arith.solver 2)
(set-option :smt.mbqi false)
(set-option :model.compact false)
(set-option :model.v2 true)
(set-option :pp.bv_literals false)
; done setting options


(set-info :category "industrial")
(declare-sort |T@U| 0)
(declare-sort |T@T| 0)
(declare-fun real_pow (Real Real) Real)
(declare-fun UOrdering2 (|T@U| |T@U|) Bool)
(declare-fun UOrdering3 (|T@T| |T@U| |T@U|) Bool)
(declare-fun tickleBool (Bool) Bool)
(assert (and (tickleBool true) (tickleBool false)))
(declare-fun $generated (T@U) Int)
(declare-fun $generated@@0 (T@U) Bool)
(declare-fun $generated@@1 (T@T) Int)
(declare-fun $generated@@2 () T@T)
(declare-fun $generated@@3 () T@T)
(declare-fun $generated@@4 () T@T)
(declare-fun $generated@@5 () T@T)
(declare-fun $generated@@6 () T@T)
(declare-fun $generated@@7 () T@T)
(declare-fun $generated@@8 (Int) T@U)
(declare-fun type (T@U) T@T)
(declare-fun $generated@@9 (Real) T@U)
(declare-fun $generated@@10 (T@U) Real)
(declare-fun $generated@@11 (Bool) T@U)
(declare-fun $generated@@12 (RoundingMode) T@U)
(declare-fun $generated@@13 (T@U) RoundingMode)
(declare-fun $generated@@14 (String) T@U)
(declare-fun $generated@@15 (T@U) String)
(declare-fun $generated@@16 ((RegEx String)) T@U)
(declare-fun $generated@@17 (T@U) (RegEx String))
(declare-fun $generated@@44 (T@U T@U T@U) T@U)
(declare-fun $generated@@45 (T@U T@U T@U Bool) T@U)
(declare-fun $generated@@46 (T@T) T@T)
(declare-fun $generated@@47 () T@T)
(declare-fun $generated@@48 (T@T T@T) T@T)
(declare-fun $generated@@49 () T@T)
(declare-fun $generated@@50 (T@T) T@T)
(declare-fun $generated@@51 (T@U T@U) T@U)
(declare-fun $generated@@52 (T@U T@U) T@U)
(declare-fun $generated@@53 (T@T) T@T)
(declare-fun $generated@@54 (T@T) T@T)
(declare-fun $generated@@55 (T@U T@U T@U) T@U)
(declare-fun $generated@@56 (T@U T@U T@U) T@U)
(declare-fun $generated@@57 (T@T T@T) T@T)
(declare-fun $generated@@58 (T@T) T@T)
(declare-fun $generated@@59 (T@T) T@T)
(declare-fun $generated@@60 (T@U T@U T@U T@U) T@U)
(declare-fun $generated@@157 (Int) Int)
(declare-fun $generated@@159 (T@U) T@U)
(declare-fun $generated@@163 (Int Int) Int)
(declare-fun $generated@@166 (T@U) T@U)
(declare-fun $generated@@167 (T@T T@U) T@U)
(declare-fun $generated@@168 () T@T)
(assert  (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (= ($generated@@1 $generated@@2) 0) (= ($generated@@1 $generated@@3) 1)) (= ($generated@@1 $generated@@4) 2)) (= ($generated@@1 $generated@@5) 3)) (= ($generated@@1 $generated@@6) 4)) (= ($generated@@1 $generated@@7) 5)) (forall (($generated@@18 Int) ) (! (= ($generated ($generated@@8 $generated@@18)) $generated@@18)
 :pattern ( ($generated@@8 $generated@@18))
))) (forall (($generated@@19 T@U) ) (!  (=> (= (type $generated@@19) $generated@@2) (= ($generated@@8 ($generated $generated@@19)) $generated@@19))
 :pattern ( ($generated $generated@@19))
))) (forall (($generated@@20 Int) ) (! (= (type ($generated@@8 $generated@@20)) $generated@@2)
 :pattern ( ($generated@@8 $generated@@20))
))) (forall (($generated@@21 Real) ) (! (= ($generated@@10 ($generated@@9 $generated@@21)) $generated@@21)
 :pattern ( ($generated@@9 $generated@@21))
))) (forall (($generated@@22 T@U) ) (!  (=> (= (type $generated@@22) $generated@@3) (= ($generated@@9 ($generated@@10 $generated@@22)) $generated@@22))
 :pattern ( ($generated@@10 $generated@@22))
))) (forall (($generated@@23 Real) ) (! (= (type ($generated@@9 $generated@@23)) $generated@@3)
 :pattern ( ($generated@@9 $generated@@23))
))) (forall (($generated@@24 Bool) ) (! (= ($generated@@0 ($generated@@11 $generated@@24)) $generated@@24)
 :pattern ( ($generated@@11 $generated@@24))
))) (forall (($generated@@25 T@U) ) (!  (=> (= (type $generated@@25) $generated@@4) (= ($generated@@11 ($generated@@0 $generated@@25)) $generated@@25))
 :pattern ( ($generated@@0 $generated@@25))
))) (forall (($generated@@26 Bool) ) (! (= (type ($generated@@11 $generated@@26)) $generated@@4)
 :pattern ( ($generated@@11 $generated@@26))
))) (forall (($generated@@27 RoundingMode) ) (! (= ($generated@@13 ($generated@@12 $generated@@27)) $generated@@27)
 :pattern ( ($generated@@12 $generated@@27))
))) (forall (($generated@@28 T@U) ) (!  (=> (= (type $generated@@28) $generated@@5) (= ($generated@@12 ($generated@@13 $generated@@28)) $generated@@28))
 :pattern ( ($generated@@13 $generated@@28))
))) (forall (($generated@@29 RoundingMode) ) (! (= (type ($generated@@12 $generated@@29)) $generated@@5)
 :pattern ( ($generated@@12 $generated@@29))
))) (forall (($generated@@30 String) ) (! (= ($generated@@15 ($generated@@14 $generated@@30)) $generated@@30)
 :pattern ( ($generated@@14 $generated@@30))
))) (forall (($generated@@31 T@U) ) (!  (=> (= (type $generated@@31) $generated@@6) (= ($generated@@14 ($generated@@15 $generated@@31)) $generated@@31))
 :pattern ( ($generated@@15 $generated@@31))
))) (forall (($generated@@32 String) ) (! (= (type ($generated@@14 $generated@@32)) $generated@@6)
 :pattern ( ($generated@@14 $generated@@32))
))) (forall (($generated@@33 (RegEx String)) ) (! (= ($generated@@17 ($generated@@16 $generated@@33)) $generated@@33)
 :pattern ( ($generated@@16 $generated@@33))
))) (forall (($generated@@34 T@U) ) (!  (=> (= (type $generated@@34) $generated@@7) (= ($generated@@16 ($generated@@17 $generated@@34)) $generated@@34))
 :pattern ( ($generated@@17 $generated@@34))
))) (forall (($generated@@35 (RegEx String)) ) (! (= (type ($generated@@16 $generated@@35)) $generated@@7)
 :pattern ( ($generated@@16 $generated@@35))
))))
(assert (forall (($generated@@36 T@U) ) (! (UOrdering2 $generated@@36 $generated@@36)
 :no-pattern ($generated $generated@@36)
 :no-pattern ($generated@@0 $generated@@36)
)))
(assert (forall (($generated@@37 T@U) ($generated@@38 T@U) ($generated@@39 T@U) ) (! (let (($generated@@40 (type $generated@@37)))
 (=> (and (and (= (type $generated@@38) $generated@@40) (= (type $generated@@39) $generated@@40)) (and (UOrdering2 $generated@@37 $generated@@38) (UOrdering2 $generated@@38 $generated@@39))) (UOrdering2 $generated@@37 $generated@@39)))
 :pattern ( (UOrdering2 $generated@@37 $generated@@38) (UOrdering2 $generated@@38 $generated@@39))
)))
(assert (forall (($generated@@41 T@U) ($generated@@42 T@U) ) (! (let (($generated@@43 (type $generated@@41)))
 (=> (= (type $generated@@42) $generated@@43) (=> (and (UOrdering2 $generated@@41 $generated@@42) (UOrdering2 $generated@@42 $generated@@41)) (= $generated@@41 $generated@@42))))
 :pattern ( (UOrdering2 $generated@@41 $generated@@42) (UOrdering2 $generated@@42 $generated@@41))
)))
(assert  (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (forall (($generated@@61 T@T) ($generated@@62 T@T) ) (= ($generated@@1 ($generated@@48 $generated@@61 $generated@@62)) 6)) (forall (($generated@@63 T@T) ($generated@@64 T@T) ) (! (= ($generated@@53 ($generated@@48 $generated@@63 $generated@@64)) $generated@@63)
 :pattern ( ($generated@@48 $generated@@63 $generated@@64))
))) (forall (($generated@@65 T@T) ($generated@@66 T@T) ) (! (= ($generated@@54 ($generated@@48 $generated@@65 $generated@@66)) $generated@@66)
 :pattern ( ($generated@@48 $generated@@65 $generated@@66))
))) (forall (($generated@@67 T@U) ($generated@@68 T@U) ) (! (let (($generated@@69 ($generated@@54 (type $generated@@67))))
(= (type ($generated@@52 $generated@@67 $generated@@68)) $generated@@69))
 :pattern ( ($generated@@52 $generated@@67 $generated@@68))
))) (forall (($generated@@70 T@U) ($generated@@71 T@U) ($generated@@72 T@U) ) (! (let (($generated@@73 (type $generated@@72)))
(let (($generated@@74 (type $generated@@71)))
(= (type ($generated@@55 $generated@@70 $generated@@71 $generated@@72)) ($generated@@48 $generated@@74 $generated@@73))))
 :pattern ( ($generated@@55 $generated@@70 $generated@@71 $generated@@72))
))) (forall (($generated@@75 T@U) ($generated@@76 T@U) ($generated@@77 T@U) ) (! (let (($generated@@78 ($generated@@54 (type $generated@@75))))
 (=> (= (type $generated@@77) $generated@@78) (= ($generated@@52 ($generated@@55 $generated@@75 $generated@@76 $generated@@77) $generated@@76) $generated@@77)))
 :weight 0
))) (and (forall (($generated@@79 T@U) ($generated@@80 T@U) ($generated@@81 T@U) ($generated@@82 T@U) ) (!  (or (= $generated@@81 $generated@@82) (= ($generated@@52 ($generated@@55 $generated@@80 $generated@@81 $generated@@79) $generated@@82) ($generated@@52 $generated@@80 $generated@@82)))
 :weight 0
)) (forall (($generated@@83 T@U) ($generated@@84 T@U) ($generated@@85 T@U) ($generated@@86 T@U) ) (!  (or true (= ($generated@@52 ($generated@@55 $generated@@84 $generated@@85 $generated@@83) $generated@@86) ($generated@@52 $generated@@84 $generated@@86)))
 :weight 0
)))) (forall (($generated@@87 T@T) ) (= ($generated@@1 ($generated@@50 $generated@@87)) 7))) (forall (($generated@@88 T@T) ) (! (= ($generated@@46 ($generated@@50 $generated@@88)) $generated@@88)
 :pattern ( ($generated@@50 $generated@@88))
))) (forall (($generated@@89 T@U) ($generated@@90 T@U) ) (! (let (($generated@@91 ($generated@@46 (type $generated@@90))))
(= (type ($generated@@51 $generated@@89 $generated@@90)) $generated@@91))
 :pattern ( ($generated@@51 $generated@@89 $generated@@90))
))) (= ($generated@@1 $generated@@49) 8)) (forall (($generated@@92 T@U) ($generated@@93 T@U) ($generated@@94 T@U) ) (! (= (type ($generated@@56 $generated@@92 $generated@@93 $generated@@94)) $generated@@49)
 :pattern ( ($generated@@56 $generated@@92 $generated@@93 $generated@@94))
))) (forall (($generated@@95 T@U) ($generated@@96 T@U) ($generated@@97 T@U) ) (! (let (($generated@@98 ($generated@@46 (type $generated@@96))))
 (=> (= (type $generated@@97) $generated@@98) (= ($generated@@51 ($generated@@56 $generated@@95 $generated@@96 $generated@@97) $generated@@96) $generated@@97)))
 :weight 0
))) (and (forall (($generated@@99 T@U) ($generated@@100 T@U) ($generated@@101 T@U) ($generated@@102 T@U) ) (!  (or (= $generated@@101 $generated@@102) (= ($generated@@51 ($generated@@56 $generated@@100 $generated@@101 $generated@@99) $generated@@102) ($generated@@51 $generated@@100 $generated@@102)))
 :weight 0
)) (forall (($generated@@103 T@U) ($generated@@104 T@U) ($generated@@105 T@U) ($generated@@106 T@U) ) (!  (or true (= ($generated@@51 ($generated@@56 $generated@@104 $generated@@105 $generated@@103) $generated@@106) ($generated@@51 $generated@@104 $generated@@106)))
 :weight 0
)))) (= ($generated@@1 $generated@@47) 9)) (forall (($generated@@107 T@T) ($generated@@108 T@T) ) (= ($generated@@1 ($generated@@57 $generated@@107 $generated@@108)) 10))) (forall (($generated@@109 T@T) ($generated@@110 T@T) ) (! (= ($generated@@58 ($generated@@57 $generated@@109 $generated@@110)) $generated@@109)
 :pattern ( ($generated@@57 $generated@@109 $generated@@110))
))) (forall (($generated@@111 T@T) ($generated@@112 T@T) ) (! (= ($generated@@59 ($generated@@57 $generated@@111 $generated@@112)) $generated@@112)
 :pattern ( ($generated@@57 $generated@@111 $generated@@112))
))) (forall (($generated@@113 T@U) ($generated@@114 T@U) ($generated@@115 T@U) ) (! (let (($generated@@116 ($generated@@59 (type $generated@@113))))
(= (type ($generated@@44 $generated@@113 $generated@@114 $generated@@115)) $generated@@116))
 :pattern ( ($generated@@44 $generated@@113 $generated@@114 $generated@@115))
))) (forall (($generated@@117 T@U) ($generated@@118 T@U) ($generated@@119 T@U) ($generated@@120 T@U) ) (! (let (($generated@@121 (type $generated@@120)))
(let (($generated@@122 (type $generated@@118)))
(= (type ($generated@@60 $generated@@117 $generated@@118 $generated@@119 $generated@@120)) ($generated@@57 $generated@@122 $generated@@121))))
 :pattern ( ($generated@@60 $generated@@117 $generated@@118 $generated@@119 $generated@@120))
))) (forall (($generated@@123 T@U) ($generated@@124 T@U) ($generated@@125 T@U) ($generated@@126 T@U) ) (! (let (($generated@@127 ($generated@@59 (type $generated@@123))))
 (=> (= (type $generated@@126) $generated@@127) (= ($generated@@44 ($generated@@60 $generated@@123 $generated@@124 $generated@@125 $generated@@126) $generated@@124 $generated@@125) $generated@@126)))
 :weight 0
))) (and (and (forall (($generated@@128 T@U) ($generated@@129 T@U) ($generated@@130 T@U) ($generated@@131 T@U) ($generated@@132 T@U) ($generated@@133 T@U) ) (!  (or (= $generated@@130 $generated@@132) (= ($generated@@44 ($generated@@60 $generated@@129 $generated@@130 $generated@@131 $generated@@128) $generated@@132 $generated@@133) ($generated@@44 $generated@@129 $generated@@132 $generated@@133)))
 :weight 0
)) (forall (($generated@@134 T@U) ($generated@@135 T@U) ($generated@@136 T@U) ($generated@@137 T@U) ($generated@@138 T@U) ($generated@@139 T@U) ) (!  (or (= $generated@@137 $generated@@139) (= ($generated@@44 ($generated@@60 $generated@@135 $generated@@136 $generated@@137 $generated@@134) $generated@@138 $generated@@139) ($generated@@44 $generated@@135 $generated@@138 $generated@@139)))
 :weight 0
))) (forall (($generated@@140 T@U) ($generated@@141 T@U) ($generated@@142 T@U) ($generated@@143 T@U) ($generated@@144 T@U) ($generated@@145 T@U) ) (!  (or true (= ($generated@@44 ($generated@@60 $generated@@141 $generated@@142 $generated@@143 $generated@@140) $generated@@144 $generated@@145) ($generated@@44 $generated@@141 $generated@@144 $generated@@145)))
 :weight 0
)))) (forall (($generated@@146 T@U) ($generated@@147 T@U) ($generated@@148 T@U) ($generated@@149 Bool) ) (! (= (type ($generated@@45 $generated@@146 $generated@@147 $generated@@148 $generated@@149)) ($generated@@57 $generated@@47 $generated@@4))
 :pattern ( ($generated@@45 $generated@@146 $generated@@147 $generated@@148 $generated@@149))
))))
(assert (forall (($generated@@150 T@U) ($generated@@151 T@U) ($generated@@152 T@U) ($generated@@153 Bool) ($generated@@154 T@U) ($generated@@155 T@U) ) (! (let (($generated@@156 ($generated@@46 (type $generated@@155))))
 (=> (and (and (and (and (= (type $generated@@150) $generated@@47) (= (type $generated@@151) ($generated@@48 $generated@@47 $generated@@49))) (= (type $generated@@152) ($generated@@50 $generated@@4))) (= (type $generated@@154) $generated@@47)) (= (type $generated@@155) ($generated@@50 $generated@@156))) (= ($generated@@0 ($generated@@44 ($generated@@45 $generated@@150 $generated@@151 $generated@@152 $generated@@153) $generated@@154 $generated@@155))  (=> (and (not (= $generated@@154 $generated@@150)) ($generated@@0 ($generated@@51 ($generated@@52 $generated@@151 $generated@@154) $generated@@152))) $generated@@153))))
 :pattern ( ($generated@@44 ($generated@@45 $generated@@150 $generated@@151 $generated@@152 $generated@@153) $generated@@154 $generated@@155))
)))
(assert (forall (($generated@@158 Int) ) (! (= ($generated@@157 $generated@@158) $generated@@158)
 :pattern ( ($generated@@157 $generated@@158))
)))
(assert (forall (($generated@@160 T@U) ) (! (let (($generated@@161 (type $generated@@160)))
(= (type ($generated@@159 $generated@@160)) $generated@@161))
 :pattern ( ($generated@@159 $generated@@160))
)))
(assert (forall (($generated@@162 T@U) ) (! (= ($generated@@159 $generated@@162) $generated@@162)
 :pattern ( ($generated@@159 $generated@@162))
)))
(assert (forall (($generated@@164 Int) ($generated@@165 Int) ) (! (= ($generated@@163 $generated@@164 $generated@@165) (div $generated@@164 $generated@@165))
 :pattern ( ($generated@@163 $generated@@164 $generated@@165))
)))
(assert  (and (and (= ($generated@@1 $generated@@168) 11) (forall (($generated@@169 T@U) ) (! (= (type ($generated@@166 $generated@@169)) $generated@@168)
 :pattern ( ($generated@@166 $generated@@169))
))) (forall (($generated@@170 T@T) ($generated@@171 T@U) ) (! (= (type ($generated@@167 $generated@@170 $generated@@171)) $generated@@170)
 :pattern ( ($generated@@167 $generated@@170 $generated@@171))
))))
(assert (forall (($generated@@172 T@U) ) (! (let (($generated@@173 (type $generated@@172)))
(= ($generated@@167 $generated@@173 ($generated@@166 $generated@@172)) $generated@@172))
 :pattern ( ($generated@@166 $generated@@172))
)))
(assert (forall (($generated@@174 Int) ) (! (= ($generated@@166 ($generated@@8 ($generated@@157 $generated@@174))) ($generated@@159 ($generated@@166 ($generated@@8 $generated@@174))))
 :pattern ( ($generated@@166 ($generated@@8 ($generated@@157 $generated@@174))))
)))
(assert (forall (($generated@@175 T@U) ) (! (= ($generated@@166 ($generated@@159 $generated@@175)) ($generated@@159 ($generated@@166 $generated@@175)))
 :pattern ( ($generated@@166 ($generated@@159 $generated@@175)))
)))
(push 1)
(declare-fun ControlFlow (Int Int) Int)
(declare-fun $generated@@176 () T@U)
(declare-fun $generated@@177 () T@U)
(declare-fun $generated@@178 () T@U)
(declare-fun $generated@@179 () T@U)
(declare-fun $generated@@180 () Int)
(declare-fun $generated@@181 () Int)
(declare-fun $generated@@182 () Int)
(declare-fun $generated@@183 () Int)
(declare-fun $generated@@184 () Int)
(declare-fun $generated@@185 () Int)
(declare-fun $generated@@186 (T@U) Bool)
(declare-fun $generated@@187 (T@U) Bool)
(declare-fun $generated@@188 () Int)
(declare-fun $generated@@189 () Int)
(assert  (and (and (and (= (type $generated@@176) ($generated@@57 $generated@@47 $generated@@4)) (= (type $generated@@177) $generated@@47)) (= (type $generated@@178) ($generated@@48 $generated@@47 $generated@@49))) (= (type $generated@@179) ($generated@@50 $generated@@4))))
(set-option :timeout 0)
(set-option :rlimit 0)
(assert (not
 (=> (= (ControlFlow 0 0) 7) (let (($generated@@190  (=> (and (= $generated@@176 ($generated@@45 $generated@@177 $generated@@178 $generated@@179 false)) (= $generated@@180 (- $generated@@181 $generated@@182))) (and (=> (= (ControlFlow 0 2) (- 0 6)) (and (<= ($generated@@157 0) $generated@@180) (< $generated@@180 256))) (=> (and (<= ($generated@@157 0) $generated@@180) (< $generated@@180 256)) (=> (= $generated@@183 ($generated@@157 2)) (and (=> (= (ControlFlow 0 2) (- 0 5)) (and (<= ($generated@@157 0) $generated@@183) (< $generated@@183 256))) (=> (and (<= ($generated@@157 0) $generated@@183) (< $generated@@183 256)) (and (=> (= (ControlFlow 0 2) (- 0 4)) (not (= ($generated@@157 2) 0))) (=> (not (= ($generated@@157 2) 0)) (=> (= $generated@@184 ($generated@@163 (- $generated@@181 $generated@@182) ($generated@@157 2))) (and (=> (= (ControlFlow 0 2) (- 0 3)) (and (<= ($generated@@157 0) $generated@@184) (< $generated@@184 256))) (=> (and (<= ($generated@@157 0) $generated@@184) (< $generated@@184 256)) (=> (and (= $generated@@185 (+ $generated@@182 ($generated@@163 (- $generated@@181 $generated@@182) ($generated@@157 2)))) (= (ControlFlow 0 2) (- 0 1))) (and (<= ($generated@@157 0) $generated@@185) (< $generated@@185 256))))))))))))))))
(let (($generated@@191  (=> (and ($generated@@186 $generated@@178) ($generated@@187 $generated@@178)) (=> (and (and (<= ($generated@@157 0) $generated@@182) (< $generated@@182 256)) (and (<= ($generated@@157 0) $generated@@181) (< $generated@@181 256))) (=> (and (and (and (<= ($generated@@157 0) $generated@@188) (< $generated@@188 256)) (= 1 $generated@@189)) (and (<= $generated@@182 $generated@@181) (= (ControlFlow 0 7) 2))) $generated@@190)))))
$generated@@191)))
))
(check-sat)
(pop 1)
; Valid
(get-info :rlimit)
(reset)
(set-option :rlimit 0)
; did a full reset
(reset)
(set-option :print-success false)
(set-info :smt-lib-version 2.6)
(set-option :auto_config false)
(set-option :type_check true)
(set-option :smt.case_split 3)
(set-option :smt.qi.eager_threshold 100)
(set-option :smt.delay_units true)
(set-option :smt.arith.solver 2)
(set-option :smt.mbqi false)
(set-option :model.compact false)
(set-option :model.v2 true)
(set-option :pp.bv_literals false)
; done setting options


(set-info :category "industrial")
(declare-sort |T@U| 0)
(declare-sort |T@T| 0)
(declare-fun real_pow (Real Real) Real)
(declare-fun UOrdering2 (|T@U| |T@U|) Bool)
(declare-fun UOrdering3 (|T@T| |T@U| |T@U|) Bool)
(declare-fun tickleBool (Bool) Bool)
(assert (and (tickleBool true) (tickleBool false)))
(declare-fun $generated (T@U) Int)
(declare-fun $generated@@0 (T@U) Bool)
(declare-fun $generated@@1 (T@T) Int)
(declare-fun $generated@@2 () T@T)
(declare-fun $generated@@3 () T@T)
(declare-fun $generated@@4 () T@T)
(declare-fun $generated@@5 () T@T)
(declare-fun $generated@@6 () T@T)
(declare-fun $generated@@7 () T@T)
(declare-fun $generated@@8 (Int) T@U)
(declare-fun type (T@U) T@T)
(declare-fun $generated@@9 (Real) T@U)
(declare-fun $generated@@10 (T@U) Real)
(declare-fun $generated@@11 (Bool) T@U)
(declare-fun $generated@@12 (RoundingMode) T@U)
(declare-fun $generated@@13 (T@U) RoundingMode)
(declare-fun $generated@@14 (String) T@U)
(declare-fun $generated@@15 (T@U) String)
(declare-fun $generated@@16 ((RegEx String)) T@U)
(declare-fun $generated@@17 (T@U) (RegEx String))
(declare-fun $generated@@44 (T@U T@U) Bool)
(declare-fun $generated@@45 (T@T T@T) T@T)
(declare-fun $generated@@46 () T@T)
(declare-fun $generated@@47 () T@T)
(declare-fun $generated@@48 (T@U T@U) T@U)
(declare-fun $generated@@49 (T@U T@U) T@U)
(declare-fun $generated@@50 () T@U)
(declare-fun $generated@@51 (T@T) T@T)
(declare-fun $generated@@52 (T@T) T@T)
(declare-fun $generated@@53 (T@U T@U T@U) T@U)
(declare-fun $generated@@54 (T@T) T@T)
(declare-fun $generated@@55 (T@T) T@T)
(declare-fun $generated@@56 (T@U T@U T@U) T@U)
(declare-fun $generated@@106 (T@U T@U T@U) T@U)
(declare-fun $generated@@107 (T@U T@U T@U Bool) T@U)
(declare-fun $generated@@108 (T@T T@T) T@T)
(declare-fun $generated@@109 (T@T) T@T)
(declare-fun $generated@@110 (T@T) T@T)
(declare-fun $generated@@111 (T@U T@U T@U T@U) T@U)
(declare-fun $generated@@162 (Int) Int)
(declare-fun $generated@@164 (T@U) T@U)
(declare-fun $generated@@171 (T@U) T@U)
(declare-fun $generated@@172 (T@T T@U) T@U)
(declare-fun $generated@@173 () T@T)
(assert  (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (= ($generated@@1 $generated@@2) 0) (= ($generated@@1 $generated@@3) 1)) (= ($generated@@1 $generated@@4) 2)) (= ($generated@@1 $generated@@5) 3)) (= ($generated@@1 $generated@@6) 4)) (= ($generated@@1 $generated@@7) 5)) (forall (($generated@@18 Int) ) (! (= ($generated ($generated@@8 $generated@@18)) $generated@@18)
 :pattern ( ($generated@@8 $generated@@18))
))) (forall (($generated@@19 T@U) ) (!  (=> (= (type $generated@@19) $generated@@2) (= ($generated@@8 ($generated $generated@@19)) $generated@@19))
 :pattern ( ($generated $generated@@19))
))) (forall (($generated@@20 Int) ) (! (= (type ($generated@@8 $generated@@20)) $generated@@2)
 :pattern ( ($generated@@8 $generated@@20))
))) (forall (($generated@@21 Real) ) (! (= ($generated@@10 ($generated@@9 $generated@@21)) $generated@@21)
 :pattern ( ($generated@@9 $generated@@21))
))) (forall (($generated@@22 T@U) ) (!  (=> (= (type $generated@@22) $generated@@3) (= ($generated@@9 ($generated@@10 $generated@@22)) $generated@@22))
 :pattern ( ($generated@@10 $generated@@22))
))) (forall (($generated@@23 Real) ) (! (= (type ($generated@@9 $generated@@23)) $generated@@3)
 :pattern ( ($generated@@9 $generated@@23))
))) (forall (($generated@@24 Bool) ) (! (= ($generated@@0 ($generated@@11 $generated@@24)) $generated@@24)
 :pattern ( ($generated@@11 $generated@@24))
))) (forall (($generated@@25 T@U) ) (!  (=> (= (type $generated@@25) $generated@@4) (= ($generated@@11 ($generated@@0 $generated@@25)) $generated@@25))
 :pattern ( ($generated@@0 $generated@@25))
))) (forall (($generated@@26 Bool) ) (! (= (type ($generated@@11 $generated@@26)) $generated@@4)
 :pattern ( ($generated@@11 $generated@@26))
))) (forall (($generated@@27 RoundingMode) ) (! (= ($generated@@13 ($generated@@12 $generated@@27)) $generated@@27)
 :pattern ( ($generated@@12 $generated@@27))
))) (forall (($generated@@28 T@U) ) (!  (=> (= (type $generated@@28) $generated@@5) (= ($generated@@12 ($generated@@13 $generated@@28)) $generated@@28))
 :pattern ( ($generated@@13 $generated@@28))
))) (forall (($generated@@29 RoundingMode) ) (! (= (type ($generated@@12 $generated@@29)) $generated@@5)
 :pattern ( ($generated@@12 $generated@@29))
))) (forall (($generated@@30 String) ) (! (= ($generated@@15 ($generated@@14 $generated@@30)) $generated@@30)
 :pattern ( ($generated@@14 $generated@@30))
))) (forall (($generated@@31 T@U) ) (!  (=> (= (type $generated@@31) $generated@@6) (= ($generated@@14 ($generated@@15 $generated@@31)) $generated@@31))
 :pattern ( ($generated@@15 $generated@@31))
))) (forall (($generated@@32 String) ) (! (= (type ($generated@@14 $generated@@32)) $generated@@6)
 :pattern ( ($generated@@14 $generated@@32))
))) (forall (($generated@@33 (RegEx String)) ) (! (= ($generated@@17 ($generated@@16 $generated@@33)) $generated@@33)
 :pattern ( ($generated@@16 $generated@@33))
))) (forall (($generated@@34 T@U) ) (!  (=> (= (type $generated@@34) $generated@@7) (= ($generated@@16 ($generated@@17 $generated@@34)) $generated@@34))
 :pattern ( ($generated@@17 $generated@@34))
))) (forall (($generated@@35 (RegEx String)) ) (! (= (type ($generated@@16 $generated@@35)) $generated@@7)
 :pattern ( ($generated@@16 $generated@@35))
))))
(assert (forall (($generated@@36 T@U) ) (! (UOrdering2 $generated@@36 $generated@@36)
 :no-pattern ($generated $generated@@36)
 :no-pattern ($generated@@0 $generated@@36)
)))
(assert (forall (($generated@@37 T@U) ($generated@@38 T@U) ($generated@@39 T@U) ) (! (let (($generated@@40 (type $generated@@37)))
 (=> (and (and (= (type $generated@@38) $generated@@40) (= (type $generated@@39) $generated@@40)) (and (UOrdering2 $generated@@37 $generated@@38) (UOrdering2 $generated@@38 $generated@@39))) (UOrdering2 $generated@@37 $generated@@39)))
 :pattern ( (UOrdering2 $generated@@37 $generated@@38) (UOrdering2 $generated@@38 $generated@@39))
)))
(assert (forall (($generated@@41 T@U) ($generated@@42 T@U) ) (! (let (($generated@@43 (type $generated@@41)))
 (=> (= (type $generated@@42) $generated@@43) (=> (and (UOrdering2 $generated@@41 $generated@@42) (UOrdering2 $generated@@42 $generated@@41)) (= $generated@@41 $generated@@42))))
 :pattern ( (UOrdering2 $generated@@41 $generated@@42) (UOrdering2 $generated@@42 $generated@@41))
)))
(assert  (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (forall (($generated@@57 T@T) ($generated@@58 T@T) ) (= ($generated@@1 ($generated@@45 $generated@@57 $generated@@58)) 6)) (forall (($generated@@59 T@T) ($generated@@60 T@T) ) (! (= ($generated@@51 ($generated@@45 $generated@@59 $generated@@60)) $generated@@59)
 :pattern ( ($generated@@45 $generated@@59 $generated@@60))
))) (forall (($generated@@61 T@T) ($generated@@62 T@T) ) (! (= ($generated@@52 ($generated@@45 $generated@@61 $generated@@62)) $generated@@62)
 :pattern ( ($generated@@45 $generated@@61 $generated@@62))
))) (forall (($generated@@63 T@U) ($generated@@64 T@U) ) (! (let (($generated@@65 ($generated@@52 (type $generated@@63))))
(= (type ($generated@@49 $generated@@63 $generated@@64)) $generated@@65))
 :pattern ( ($generated@@49 $generated@@63 $generated@@64))
))) (forall (($generated@@66 T@U) ($generated@@67 T@U) ($generated@@68 T@U) ) (! (let (($generated@@69 (type $generated@@68)))
(let (($generated@@70 (type $generated@@67)))
(= (type ($generated@@53 $generated@@66 $generated@@67 $generated@@68)) ($generated@@45 $generated@@70 $generated@@69))))
 :pattern ( ($generated@@53 $generated@@66 $generated@@67 $generated@@68))
))) (forall (($generated@@71 T@U) ($generated@@72 T@U) ($generated@@73 T@U) ) (! (let (($generated@@74 ($generated@@52 (type $generated@@71))))
 (=> (= (type $generated@@73) $generated@@74) (= ($generated@@49 ($generated@@53 $generated@@71 $generated@@72 $generated@@73) $generated@@72) $generated@@73)))
 :weight 0
))) (and (forall (($generated@@75 T@U) ($generated@@76 T@U) ($generated@@77 T@U) ($generated@@78 T@U) ) (!  (or (= $generated@@77 $generated@@78) (= ($generated@@49 ($generated@@53 $generated@@76 $generated@@77 $generated@@75) $generated@@78) ($generated@@49 $generated@@76 $generated@@78)))
 :weight 0
)) (forall (($generated@@79 T@U) ($generated@@80 T@U) ($generated@@81 T@U) ($generated@@82 T@U) ) (!  (or true (= ($generated@@49 ($generated@@53 $generated@@80 $generated@@81 $generated@@79) $generated@@82) ($generated@@49 $generated@@80 $generated@@82)))
 :weight 0
)))) (= ($generated@@1 $generated@@46) 7)) (forall (($generated@@83 T@T) ) (= ($generated@@1 ($generated@@54 $generated@@83)) 8))) (forall (($generated@@84 T@T) ) (! (= ($generated@@55 ($generated@@54 $generated@@84)) $generated@@84)
 :pattern ( ($generated@@54 $generated@@84))
))) (forall (($generated@@85 T@U) ($generated@@86 T@U) ) (! (let (($generated@@87 ($generated@@55 (type $generated@@86))))
(= (type ($generated@@48 $generated@@85 $generated@@86)) $generated@@87))
 :pattern ( ($generated@@48 $generated@@85 $generated@@86))
))) (= ($generated@@1 $generated@@47) 9)) (forall (($generated@@88 T@U) ($generated@@89 T@U) ($generated@@90 T@U) ) (! (= (type ($generated@@56 $generated@@88 $generated@@89 $generated@@90)) $generated@@47)
 :pattern ( ($generated@@56 $generated@@88 $generated@@89 $generated@@90))
))) (forall (($generated@@91 T@U) ($generated@@92 T@U) ($generated@@93 T@U) ) (! (let (($generated@@94 ($generated@@55 (type $generated@@92))))
 (=> (= (type $generated@@93) $generated@@94) (= ($generated@@48 ($generated@@56 $generated@@91 $generated@@92 $generated@@93) $generated@@92) $generated@@93)))
 :weight 0
))) (and (forall (($generated@@95 T@U) ($generated@@96 T@U) ($generated@@97 T@U) ($generated@@98 T@U) ) (!  (or (= $generated@@97 $generated@@98) (= ($generated@@48 ($generated@@56 $generated@@96 $generated@@97 $generated@@95) $generated@@98) ($generated@@48 $generated@@96 $generated@@98)))
 :weight 0
)) (forall (($generated@@99 T@U) ($generated@@100 T@U) ($generated@@101 T@U) ($generated@@102 T@U) ) (!  (or true (= ($generated@@48 ($generated@@56 $generated@@100 $generated@@101 $generated@@99) $generated@@102) ($generated@@48 $generated@@100 $generated@@102)))
 :weight 0
)))) (= (type $generated@@50) ($generated@@54 $generated@@4))))
(assert (forall (($generated@@103 T@U) ($generated@@104 T@U) ) (!  (=> (and (and (= (type $generated@@103) ($generated@@45 $generated@@46 $generated@@47)) (= (type $generated@@104) ($generated@@45 $generated@@46 $generated@@47))) ($generated@@44 $generated@@103 $generated@@104)) (forall (($generated@@105 T@U) ) (!  (=> (and (= (type $generated@@105) $generated@@46) ($generated@@0 ($generated@@48 ($generated@@49 $generated@@103 $generated@@105) $generated@@50))) ($generated@@0 ($generated@@48 ($generated@@49 $generated@@104 $generated@@105) $generated@@50)))
 :pattern ( ($generated@@48 ($generated@@49 $generated@@104 $generated@@105) $generated@@50))
)))
 :pattern ( ($generated@@44 $generated@@103 $generated@@104))
)))
(assert  (and (and (and (and (and (and (and (forall (($generated@@112 T@T) ($generated@@113 T@T) ) (= ($generated@@1 ($generated@@108 $generated@@112 $generated@@113)) 10)) (forall (($generated@@114 T@T) ($generated@@115 T@T) ) (! (= ($generated@@109 ($generated@@108 $generated@@114 $generated@@115)) $generated@@114)
 :pattern ( ($generated@@108 $generated@@114 $generated@@115))
))) (forall (($generated@@116 T@T) ($generated@@117 T@T) ) (! (= ($generated@@110 ($generated@@108 $generated@@116 $generated@@117)) $generated@@117)
 :pattern ( ($generated@@108 $generated@@116 $generated@@117))
))) (forall (($generated@@118 T@U) ($generated@@119 T@U) ($generated@@120 T@U) ) (! (let (($generated@@121 ($generated@@110 (type $generated@@118))))
(= (type ($generated@@106 $generated@@118 $generated@@119 $generated@@120)) $generated@@121))
 :pattern ( ($generated@@106 $generated@@118 $generated@@119 $generated@@120))
))) (forall (($generated@@122 T@U) ($generated@@123 T@U) ($generated@@124 T@U) ($generated@@125 T@U) ) (! (let (($generated@@126 (type $generated@@125)))
(let (($generated@@127 (type $generated@@123)))
(= (type ($generated@@111 $generated@@122 $generated@@123 $generated@@124 $generated@@125)) ($generated@@108 $generated@@127 $generated@@126))))
 :pattern ( ($generated@@111 $generated@@122 $generated@@123 $generated@@124 $generated@@125))
))) (forall (($generated@@128 T@U) ($generated@@129 T@U) ($generated@@130 T@U) ($generated@@131 T@U) ) (! (let (($generated@@132 ($generated@@110 (type $generated@@128))))
 (=> (= (type $generated@@131) $generated@@132) (= ($generated@@106 ($generated@@111 $generated@@128 $generated@@129 $generated@@130 $generated@@131) $generated@@129 $generated@@130) $generated@@131)))
 :weight 0
))) (and (and (forall (($generated@@133 T@U) ($generated@@134 T@U) ($generated@@135 T@U) ($generated@@136 T@U) ($generated@@137 T@U) ($generated@@138 T@U) ) (!  (or (= $generated@@135 $generated@@137) (= ($generated@@106 ($generated@@111 $generated@@134 $generated@@135 $generated@@136 $generated@@133) $generated@@137 $generated@@138) ($generated@@106 $generated@@134 $generated@@137 $generated@@138)))
 :weight 0
)) (forall (($generated@@139 T@U) ($generated@@140 T@U) ($generated@@141 T@U) ($generated@@142 T@U) ($generated@@143 T@U) ($generated@@144 T@U) ) (!  (or (= $generated@@142 $generated@@144) (= ($generated@@106 ($generated@@111 $generated@@140 $generated@@141 $generated@@142 $generated@@139) $generated@@143 $generated@@144) ($generated@@106 $generated@@140 $generated@@143 $generated@@144)))
 :weight 0
))) (forall (($generated@@145 T@U) ($generated@@146 T@U) ($generated@@147 T@U) ($generated@@148 T@U) ($generated@@149 T@U) ($generated@@150 T@U) ) (!  (or true (= ($generated@@106 ($generated@@111 $generated@@146 $generated@@147 $generated@@148 $generated@@145) $generated@@149 $generated@@150) ($generated@@106 $generated@@146 $generated@@149 $generated@@150)))
 :weight 0
)))) (forall (($generated@@151 T@U) ($generated@@152 T@U) ($generated@@153 T@U) ($generated@@154 Bool) ) (! (= (type ($generated@@107 $generated@@151 $generated@@152 $generated@@153 $generated@@154)) ($generated@@108 $generated@@46 $generated@@4))
 :pattern ( ($generated@@107 $generated@@151 $generated@@152 $generated@@153 $generated@@154))
))))
(assert (forall (($generated@@155 T@U) ($generated@@156 T@U) ($generated@@157 T@U) ($generated@@158 Bool) ($generated@@159 T@U) ($generated@@160 T@U) ) (! (let (($generated@@161 ($generated@@55 (type $generated@@160))))
 (=> (and (and (and (and (= (type $generated@@155) $generated@@46) (= (type $generated@@156) ($generated@@45 $generated@@46 $generated@@47))) (= (type $generated@@157) ($generated@@54 $generated@@4))) (= (type $generated@@159) $generated@@46)) (= (type $generated@@160) ($generated@@54 $generated@@161))) (= ($generated@@0 ($generated@@106 ($generated@@107 $generated@@155 $generated@@156 $generated@@157 $generated@@158) $generated@@159 $generated@@160))  (=> (and (not (= $generated@@159 $generated@@155)) ($generated@@0 ($generated@@48 ($generated@@49 $generated@@156 $generated@@159) $generated@@157))) $generated@@158))))
 :pattern ( ($generated@@106 ($generated@@107 $generated@@155 $generated@@156 $generated@@157 $generated@@158) $generated@@159 $generated@@160))
)))
(assert (forall (($generated@@163 Int) ) (! (= ($generated@@162 $generated@@163) $generated@@163)
 :pattern ( ($generated@@162 $generated@@163))
)))
(assert (forall (($generated@@165 T@U) ) (! (let (($generated@@166 (type $generated@@165)))
(= (type ($generated@@164 $generated@@165)) $generated@@166))
 :pattern ( ($generated@@164 $generated@@165))
)))
(assert (forall (($generated@@167 T@U) ) (! (= ($generated@@164 $generated@@167) $generated@@167)
 :pattern ( ($generated@@164 $generated@@167))
)))
(assert (forall (($generated@@168 T@U) ($generated@@169 T@U) ($generated@@170 T@U) ) (!  (=> (and (and (and (and (= (type $generated@@168) ($generated@@45 $generated@@46 $generated@@47)) (= (type $generated@@169) ($generated@@45 $generated@@46 $generated@@47))) (= (type $generated@@170) ($generated@@45 $generated@@46 $generated@@47))) (not (= $generated@@168 $generated@@170))) (and ($generated@@44 $generated@@168 $generated@@169) ($generated@@44 $generated@@169 $generated@@170))) ($generated@@44 $generated@@168 $generated@@170))
 :pattern ( ($generated@@44 $generated@@168 $generated@@169) ($generated@@44 $generated@@169 $generated@@170))
)))
(assert  (and (and (= ($generated@@1 $generated@@173) 11) (forall (($generated@@174 T@U) ) (! (= (type ($generated@@171 $generated@@174)) $generated@@173)
 :pattern ( ($generated@@171 $generated@@174))
))) (forall (($generated@@175 T@T) ($generated@@176 T@U) ) (! (= (type ($generated@@172 $generated@@175 $generated@@176)) $generated@@175)
 :pattern ( ($generated@@172 $generated@@175 $generated@@176))
))))
(assert (forall (($generated@@177 T@U) ) (! (let (($generated@@178 (type $generated@@177)))
(= ($generated@@172 $generated@@178 ($generated@@171 $generated@@177)) $generated@@177))
 :pattern ( ($generated@@171 $generated@@177))
)))
(assert (forall (($generated@@179 Int) ) (! (= ($generated@@171 ($generated@@8 ($generated@@162 $generated@@179))) ($generated@@164 ($generated@@171 ($generated@@8 $generated@@179))))
 :pattern ( ($generated@@171 ($generated@@8 ($generated@@162 $generated@@179))))
)))
(assert (forall (($generated@@180 T@U) ) (! (= ($generated@@171 ($generated@@164 $generated@@180)) ($generated@@164 ($generated@@171 $generated@@180)))
 :pattern ( ($generated@@171 ($generated@@164 $generated@@180)))
)))
(push 1)
(declare-fun ControlFlow (Int Int) Int)
(declare-fun $generated@@181 () Int)
(declare-fun $generated@@182 () Int)
(declare-fun $generated@@183 () Int)
(declare-fun $generated@@184 () Int)
(declare-fun $generated@@185 () Int)
(declare-fun $generated@@186 () Int)
(declare-fun $generated@@187 () Int)
(declare-fun $generated@@188 () Int)
(declare-fun $generated@@189 () Int)
(declare-fun $generated@@190 () Int)
(declare-fun $generated@@191 () Bool)
(declare-fun $generated@@192 () T@U)
(declare-fun $generated@@193 () T@U)
(declare-fun $generated@@194 () T@U)
(declare-fun $generated@@195 () Int)
(declare-fun $generated@@196 () Int)
(declare-fun $generated@@197 () Int)
(declare-fun $generated@@198 (T@U) Bool)
(declare-fun $generated@@199 (T@U) Bool)
(declare-fun $generated@@200 () Int)
(declare-fun $generated@@201 () Int)
(declare-fun $generated@@202 () Int)
(assert  (and (and (= (type $generated@@192) ($generated@@45 $generated@@46 $generated@@47)) (= (type $generated@@193) $generated@@46)) (= (type $generated@@194) ($generated@@108 $generated@@46 $generated@@4))))
(set-option :timeout 0)
(set-option :rlimit 0)
(assert (not
 (=> (= (ControlFlow 0 0) 17) (let (($generated@@203  (and (=> (= (ControlFlow 0 5) (- 0 6)) (or (<= 0 $generated@@181) (= (- $generated@@182 $generated@@183) $generated@@181))) (=> (or (<= 0 $generated@@181) (= (- $generated@@182 $generated@@183) $generated@@181)) (=> (= (ControlFlow 0 5) (- 0 4)) (< (- $generated@@182 $generated@@183) $generated@@181))))))
(let (($generated@@204  (=> (and (<= $generated@@184 3) (= $generated@@185 ($generated@@162 3))) (and (=> (= (ControlFlow 0 9) (- 0 10)) (or (or (= $generated@@185 ($generated@@162 0)) (= $generated@@185 ($generated@@162 3))) (= $generated@@185 ($generated@@162 7)))) (=> (or (or (= $generated@@185 ($generated@@162 0)) (= $generated@@185 ($generated@@162 3))) (= $generated@@185 ($generated@@162 7))) (=> (and (and (= $generated@@186 ($generated@@162 3)) (= $generated@@183 $generated@@186)) (and (= $generated@@182 $generated@@184) (= (ControlFlow 0 9) 5))) $generated@@203))))))
(let (($generated@@205  (=> (and (< 3 $generated@@184) (= $generated@@187 ($generated@@162 3))) (and (=> (= (ControlFlow 0 7) (- 0 8)) (or (or (= $generated@@187 ($generated@@162 0)) (= $generated@@187 ($generated@@162 3))) (= $generated@@187 ($generated@@162 7)))) (=> (or (or (= $generated@@187 ($generated@@162 0)) (= $generated@@187 ($generated@@162 3))) (= $generated@@187 ($generated@@162 7))) (=> (and (and (= $generated@@188 ($generated@@162 3)) (= $generated@@183 $generated@@189)) (and (= $generated@@182 $generated@@188) (= (ControlFlow 0 7) 5))) $generated@@203))))))
(let (($generated@@206  (=> (< $generated@@189 $generated@@184) (=> (and (= $generated@@181 (- $generated@@184 $generated@@189)) (= $generated@@190 ($generated@@162 3))) (and (=> (= (ControlFlow 0 11) (- 0 12)) (or (or (= $generated@@190 ($generated@@162 0)) (= $generated@@190 ($generated@@162 3))) (= $generated@@190 ($generated@@162 7)))) (=> (or (or (= $generated@@190 ($generated@@162 0)) (= $generated@@190 ($generated@@162 3))) (= $generated@@190 ($generated@@162 7))) (and (=> (= (ControlFlow 0 11) 7) $generated@@205) (=> (= (ControlFlow 0 11) 9) $generated@@204))))))))
(let (($generated@@207 true))
(let (($generated@@208  (=> $generated@@191 (and (=> (= (ControlFlow 0 13) 3) $generated@@207) (=> (= (ControlFlow 0 13) 11) $generated@@206)))))
(let (($generated@@209 true))
(let (($generated@@210  (and (=> (= (ControlFlow 0 14) 2) $generated@@209) (=> (= (ControlFlow 0 14) 13) $generated@@208))))
(let (($generated@@211 true))
(let (($generated@@212  (=> (and (and (and (or (or (= $generated@@189 ($generated@@162 0)) (= $generated@@189 ($generated@@162 3))) (= $generated@@189 ($generated@@162 7))) (or (or (= $generated@@184 ($generated@@162 0)) (= $generated@@184 ($generated@@162 3))) (= $generated@@184 ($generated@@162 7)))) (and (not false) (forall (($generated@@213 T@U) ) (!  (=> (= (type $generated@@213) $generated@@46) (=> (and (not (= $generated@@213 $generated@@193)) ($generated@@0 ($generated@@48 ($generated@@49 $generated@@192 $generated@@213) $generated@@50))) (= ($generated@@49 $generated@@192 $generated@@213) ($generated@@49 $generated@@192 $generated@@213))))
 :pattern ( ($generated@@49 $generated@@192 $generated@@213))
)))) (and (and ($generated@@44 $generated@@192 $generated@@192) (forall (($generated@@214 T@U) ($generated@@215 T@U) ) (! (let (($generated@@216 ($generated@@55 (type $generated@@215))))
 (=> (and (and (= (type $generated@@214) $generated@@46) (= (type $generated@@215) ($generated@@54 $generated@@216))) (and (not (= $generated@@214 $generated@@193)) ($generated@@0 ($generated@@48 ($generated@@49 $generated@@192 $generated@@214) $generated@@50)))) (or (= ($generated@@48 ($generated@@49 $generated@@192 $generated@@214) $generated@@215) ($generated@@48 ($generated@@49 $generated@@192 $generated@@214) $generated@@215)) ($generated@@0 ($generated@@106 $generated@@194 $generated@@214 $generated@@215)))))
 :pattern ( ($generated@@48 ($generated@@49 $generated@@192 $generated@@214) $generated@@215))
))) (and (<= (- $generated@@184 $generated@@189) $generated@@195) (=> (= (- $generated@@184 $generated@@189) $generated@@195) true)))) (and (=> (= (ControlFlow 0 15) 1) $generated@@211) (=> (= (ControlFlow 0 15) 14) $generated@@210)))))
(let (($generated@@217  (=> (= $generated@@194 ($generated@@107 $generated@@193 $generated@@192 $generated@@50 false)) (=> (and (and (or (or (= $generated@@196 ($generated@@162 0)) (= $generated@@196 ($generated@@162 3))) (= $generated@@196 ($generated@@162 7))) (or (or (= $generated@@197 ($generated@@162 0)) (= $generated@@197 ($generated@@162 3))) (= $generated@@197 ($generated@@162 7)))) (and (= $generated@@195 (- $generated@@197 $generated@@196)) (= (ControlFlow 0 16) 15))) $generated@@212))))
(let (($generated@@218  (=> (and (and (and ($generated@@198 $generated@@192) ($generated@@199 $generated@@192)) (and (or (or (= $generated@@200 ($generated@@162 0)) (= $generated@@200 ($generated@@162 3))) (= $generated@@200 ($generated@@162 7))) true)) (and (and (or (or (= $generated@@201 ($generated@@162 0)) (= $generated@@201 ($generated@@162 3))) (= $generated@@201 ($generated@@162 7))) true) (and (= 1 $generated@@202) (= (ControlFlow 0 17) 16)))) $generated@@217)))
$generated@@218)))))))))))))
))
(check-sat)
(pop 1)
; Valid
(get-info :rlimit)
(reset)
(set-option :rlimit 0)
; did a full reset
(reset)
(set-option :print-success false)
(set-info :smt-lib-version 2.6)
(set-option :auto_config false)
(set-option :type_check true)
(set-option :smt.case_split 3)
(set-option :smt.qi.eager_threshold 100)
(set-option :smt.delay_units true)
(set-option :smt.arith.solver 2)
(set-option :smt.mbqi false)
(set-option :model.compact false)
(set-option :model.v2 true)
(set-option :pp.bv_literals false)
; done setting options


(set-info :category "industrial")
(declare-sort |T@U| 0)
(declare-sort |T@T| 0)
(declare-fun real_pow (Real Real) Real)
(declare-fun UOrdering2 (|T@U| |T@U|) Bool)
(declare-fun UOrdering3 (|T@T| |T@U| |T@U|) Bool)
(declare-fun tickleBool (Bool) Bool)
(assert (and (tickleBool true) (tickleBool false)))
(declare-fun $generated (T@U) Int)
(declare-fun $generated@@0 (T@U) Bool)
(declare-fun $generated@@1 (T@T) Int)
(declare-fun $generated@@2 () T@T)
(declare-fun $generated@@3 () T@T)
(declare-fun $generated@@4 () T@T)
(declare-fun $generated@@5 () T@T)
(declare-fun $generated@@6 () T@T)
(declare-fun $generated@@7 () T@T)
(declare-fun $generated@@8 (Int) T@U)
(declare-fun type (T@U) T@T)
(declare-fun $generated@@9 (Real) T@U)
(declare-fun $generated@@10 (T@U) Real)
(declare-fun $generated@@11 (Bool) T@U)
(declare-fun $generated@@12 (RoundingMode) T@U)
(declare-fun $generated@@13 (T@U) RoundingMode)
(declare-fun $generated@@14 (String) T@U)
(declare-fun $generated@@15 (T@U) String)
(declare-fun $generated@@16 ((RegEx String)) T@U)
(declare-fun $generated@@17 (T@U) (RegEx String))
(declare-fun $generated@@44 (T@U T@U T@U) T@U)
(declare-fun $generated@@45 (T@U T@U T@U Bool) T@U)
(declare-fun $generated@@46 (T@T) T@T)
(declare-fun $generated@@47 () T@T)
(declare-fun $generated@@48 (T@T T@T) T@T)
(declare-fun $generated@@49 () T@T)
(declare-fun $generated@@50 (T@T) T@T)
(declare-fun $generated@@51 (T@U T@U) T@U)
(declare-fun $generated@@52 (T@U T@U) T@U)
(declare-fun $generated@@53 (T@T) T@T)
(declare-fun $generated@@54 (T@T) T@T)
(declare-fun $generated@@55 (T@U T@U T@U) T@U)
(declare-fun $generated@@56 (T@U T@U T@U) T@U)
(declare-fun $generated@@57 (T@T T@T) T@T)
(declare-fun $generated@@58 (T@T) T@T)
(declare-fun $generated@@59 (T@T) T@T)
(declare-fun $generated@@60 (T@U T@U T@U T@U) T@U)
(declare-fun $generated@@157 (Int) Int)
(declare-fun $generated@@159 (Real) Real)
(declare-fun $generated@@161 (T@U) T@U)
(declare-fun $generated@@165 (T@U) T@U)
(declare-fun $generated@@166 (T@T T@U) T@U)
(declare-fun $generated@@167 () T@T)
(assert  (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (= ($generated@@1 $generated@@2) 0) (= ($generated@@1 $generated@@3) 1)) (= ($generated@@1 $generated@@4) 2)) (= ($generated@@1 $generated@@5) 3)) (= ($generated@@1 $generated@@6) 4)) (= ($generated@@1 $generated@@7) 5)) (forall (($generated@@18 Int) ) (! (= ($generated ($generated@@8 $generated@@18)) $generated@@18)
 :pattern ( ($generated@@8 $generated@@18))
))) (forall (($generated@@19 T@U) ) (!  (=> (= (type $generated@@19) $generated@@2) (= ($generated@@8 ($generated $generated@@19)) $generated@@19))
 :pattern ( ($generated $generated@@19))
))) (forall (($generated@@20 Int) ) (! (= (type ($generated@@8 $generated@@20)) $generated@@2)
 :pattern ( ($generated@@8 $generated@@20))
))) (forall (($generated@@21 Real) ) (! (= ($generated@@10 ($generated@@9 $generated@@21)) $generated@@21)
 :pattern ( ($generated@@9 $generated@@21))
))) (forall (($generated@@22 T@U) ) (!  (=> (= (type $generated@@22) $generated@@3) (= ($generated@@9 ($generated@@10 $generated@@22)) $generated@@22))
 :pattern ( ($generated@@10 $generated@@22))
))) (forall (($generated@@23 Real) ) (! (= (type ($generated@@9 $generated@@23)) $generated@@3)
 :pattern ( ($generated@@9 $generated@@23))
))) (forall (($generated@@24 Bool) ) (! (= ($generated@@0 ($generated@@11 $generated@@24)) $generated@@24)
 :pattern ( ($generated@@11 $generated@@24))
))) (forall (($generated@@25 T@U) ) (!  (=> (= (type $generated@@25) $generated@@4) (= ($generated@@11 ($generated@@0 $generated@@25)) $generated@@25))
 :pattern ( ($generated@@0 $generated@@25))
))) (forall (($generated@@26 Bool) ) (! (= (type ($generated@@11 $generated@@26)) $generated@@4)
 :pattern ( ($generated@@11 $generated@@26))
))) (forall (($generated@@27 RoundingMode) ) (! (= ($generated@@13 ($generated@@12 $generated@@27)) $generated@@27)
 :pattern ( ($generated@@12 $generated@@27))
))) (forall (($generated@@28 T@U) ) (!  (=> (= (type $generated@@28) $generated@@5) (= ($generated@@12 ($generated@@13 $generated@@28)) $generated@@28))
 :pattern ( ($generated@@13 $generated@@28))
))) (forall (($generated@@29 RoundingMode) ) (! (= (type ($generated@@12 $generated@@29)) $generated@@5)
 :pattern ( ($generated@@12 $generated@@29))
))) (forall (($generated@@30 String) ) (! (= ($generated@@15 ($generated@@14 $generated@@30)) $generated@@30)
 :pattern ( ($generated@@14 $generated@@30))
))) (forall (($generated@@31 T@U) ) (!  (=> (= (type $generated@@31) $generated@@6) (= ($generated@@14 ($generated@@15 $generated@@31)) $generated@@31))
 :pattern ( ($generated@@15 $generated@@31))
))) (forall (($generated@@32 String) ) (! (= (type ($generated@@14 $generated@@32)) $generated@@6)
 :pattern ( ($generated@@14 $generated@@32))
))) (forall (($generated@@33 (RegEx String)) ) (! (= ($generated@@17 ($generated@@16 $generated@@33)) $generated@@33)
 :pattern ( ($generated@@16 $generated@@33))
))) (forall (($generated@@34 T@U) ) (!  (=> (= (type $generated@@34) $generated@@7) (= ($generated@@16 ($generated@@17 $generated@@34)) $generated@@34))
 :pattern ( ($generated@@17 $generated@@34))
))) (forall (($generated@@35 (RegEx String)) ) (! (= (type ($generated@@16 $generated@@35)) $generated@@7)
 :pattern ( ($generated@@16 $generated@@35))
))))
(assert (forall (($generated@@36 T@U) ) (! (UOrdering2 $generated@@36 $generated@@36)
 :no-pattern ($generated $generated@@36)
 :no-pattern ($generated@@0 $generated@@36)
)))
(assert (forall (($generated@@37 T@U) ($generated@@38 T@U) ($generated@@39 T@U) ) (! (let (($generated@@40 (type $generated@@37)))
 (=> (and (and (= (type $generated@@38) $generated@@40) (= (type $generated@@39) $generated@@40)) (and (UOrdering2 $generated@@37 $generated@@38) (UOrdering2 $generated@@38 $generated@@39))) (UOrdering2 $generated@@37 $generated@@39)))
 :pattern ( (UOrdering2 $generated@@37 $generated@@38) (UOrdering2 $generated@@38 $generated@@39))
)))
(assert (forall (($generated@@41 T@U) ($generated@@42 T@U) ) (! (let (($generated@@43 (type $generated@@41)))
 (=> (= (type $generated@@42) $generated@@43) (=> (and (UOrdering2 $generated@@41 $generated@@42) (UOrdering2 $generated@@42 $generated@@41)) (= $generated@@41 $generated@@42))))
 :pattern ( (UOrdering2 $generated@@41 $generated@@42) (UOrdering2 $generated@@42 $generated@@41))
)))
(assert  (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (forall (($generated@@61 T@T) ($generated@@62 T@T) ) (= ($generated@@1 ($generated@@48 $generated@@61 $generated@@62)) 6)) (forall (($generated@@63 T@T) ($generated@@64 T@T) ) (! (= ($generated@@53 ($generated@@48 $generated@@63 $generated@@64)) $generated@@63)
 :pattern ( ($generated@@48 $generated@@63 $generated@@64))
))) (forall (($generated@@65 T@T) ($generated@@66 T@T) ) (! (= ($generated@@54 ($generated@@48 $generated@@65 $generated@@66)) $generated@@66)
 :pattern ( ($generated@@48 $generated@@65 $generated@@66))
))) (forall (($generated@@67 T@U) ($generated@@68 T@U) ) (! (let (($generated@@69 ($generated@@54 (type $generated@@67))))
(= (type ($generated@@52 $generated@@67 $generated@@68)) $generated@@69))
 :pattern ( ($generated@@52 $generated@@67 $generated@@68))
))) (forall (($generated@@70 T@U) ($generated@@71 T@U) ($generated@@72 T@U) ) (! (let (($generated@@73 (type $generated@@72)))
(let (($generated@@74 (type $generated@@71)))
(= (type ($generated@@55 $generated@@70 $generated@@71 $generated@@72)) ($generated@@48 $generated@@74 $generated@@73))))
 :pattern ( ($generated@@55 $generated@@70 $generated@@71 $generated@@72))
))) (forall (($generated@@75 T@U) ($generated@@76 T@U) ($generated@@77 T@U) ) (! (let (($generated@@78 ($generated@@54 (type $generated@@75))))
 (=> (= (type $generated@@77) $generated@@78) (= ($generated@@52 ($generated@@55 $generated@@75 $generated@@76 $generated@@77) $generated@@76) $generated@@77)))
 :weight 0
))) (and (forall (($generated@@79 T@U) ($generated@@80 T@U) ($generated@@81 T@U) ($generated@@82 T@U) ) (!  (or (= $generated@@81 $generated@@82) (= ($generated@@52 ($generated@@55 $generated@@80 $generated@@81 $generated@@79) $generated@@82) ($generated@@52 $generated@@80 $generated@@82)))
 :weight 0
)) (forall (($generated@@83 T@U) ($generated@@84 T@U) ($generated@@85 T@U) ($generated@@86 T@U) ) (!  (or true (= ($generated@@52 ($generated@@55 $generated@@84 $generated@@85 $generated@@83) $generated@@86) ($generated@@52 $generated@@84 $generated@@86)))
 :weight 0
)))) (forall (($generated@@87 T@T) ) (= ($generated@@1 ($generated@@50 $generated@@87)) 7))) (forall (($generated@@88 T@T) ) (! (= ($generated@@46 ($generated@@50 $generated@@88)) $generated@@88)
 :pattern ( ($generated@@50 $generated@@88))
))) (forall (($generated@@89 T@U) ($generated@@90 T@U) ) (! (let (($generated@@91 ($generated@@46 (type $generated@@90))))
(= (type ($generated@@51 $generated@@89 $generated@@90)) $generated@@91))
 :pattern ( ($generated@@51 $generated@@89 $generated@@90))
))) (= ($generated@@1 $generated@@49) 8)) (forall (($generated@@92 T@U) ($generated@@93 T@U) ($generated@@94 T@U) ) (! (= (type ($generated@@56 $generated@@92 $generated@@93 $generated@@94)) $generated@@49)
 :pattern ( ($generated@@56 $generated@@92 $generated@@93 $generated@@94))
))) (forall (($generated@@95 T@U) ($generated@@96 T@U) ($generated@@97 T@U) ) (! (let (($generated@@98 ($generated@@46 (type $generated@@96))))
 (=> (= (type $generated@@97) $generated@@98) (= ($generated@@51 ($generated@@56 $generated@@95 $generated@@96 $generated@@97) $generated@@96) $generated@@97)))
 :weight 0
))) (and (forall (($generated@@99 T@U) ($generated@@100 T@U) ($generated@@101 T@U) ($generated@@102 T@U) ) (!  (or (= $generated@@101 $generated@@102) (= ($generated@@51 ($generated@@56 $generated@@100 $generated@@101 $generated@@99) $generated@@102) ($generated@@51 $generated@@100 $generated@@102)))
 :weight 0
)) (forall (($generated@@103 T@U) ($generated@@104 T@U) ($generated@@105 T@U) ($generated@@106 T@U) ) (!  (or true (= ($generated@@51 ($generated@@56 $generated@@104 $generated@@105 $generated@@103) $generated@@106) ($generated@@51 $generated@@104 $generated@@106)))
 :weight 0
)))) (= ($generated@@1 $generated@@47) 9)) (forall (($generated@@107 T@T) ($generated@@108 T@T) ) (= ($generated@@1 ($generated@@57 $generated@@107 $generated@@108)) 10))) (forall (($generated@@109 T@T) ($generated@@110 T@T) ) (! (= ($generated@@58 ($generated@@57 $generated@@109 $generated@@110)) $generated@@109)
 :pattern ( ($generated@@57 $generated@@109 $generated@@110))
))) (forall (($generated@@111 T@T) ($generated@@112 T@T) ) (! (= ($generated@@59 ($generated@@57 $generated@@111 $generated@@112)) $generated@@112)
 :pattern ( ($generated@@57 $generated@@111 $generated@@112))
))) (forall (($generated@@113 T@U) ($generated@@114 T@U) ($generated@@115 T@U) ) (! (let (($generated@@116 ($generated@@59 (type $generated@@113))))
(= (type ($generated@@44 $generated@@113 $generated@@114 $generated@@115)) $generated@@116))
 :pattern ( ($generated@@44 $generated@@113 $generated@@114 $generated@@115))
))) (forall (($generated@@117 T@U) ($generated@@118 T@U) ($generated@@119 T@U) ($generated@@120 T@U) ) (! (let (($generated@@121 (type $generated@@120)))
(let (($generated@@122 (type $generated@@118)))
(= (type ($generated@@60 $generated@@117 $generated@@118 $generated@@119 $generated@@120)) ($generated@@57 $generated@@122 $generated@@121))))
 :pattern ( ($generated@@60 $generated@@117 $generated@@118 $generated@@119 $generated@@120))
))) (forall (($generated@@123 T@U) ($generated@@124 T@U) ($generated@@125 T@U) ($generated@@126 T@U) ) (! (let (($generated@@127 ($generated@@59 (type $generated@@123))))
 (=> (= (type $generated@@126) $generated@@127) (= ($generated@@44 ($generated@@60 $generated@@123 $generated@@124 $generated@@125 $generated@@126) $generated@@124 $generated@@125) $generated@@126)))
 :weight 0
))) (and (and (forall (($generated@@128 T@U) ($generated@@129 T@U) ($generated@@130 T@U) ($generated@@131 T@U) ($generated@@132 T@U) ($generated@@133 T@U) ) (!  (or (= $generated@@130 $generated@@132) (= ($generated@@44 ($generated@@60 $generated@@129 $generated@@130 $generated@@131 $generated@@128) $generated@@132 $generated@@133) ($generated@@44 $generated@@129 $generated@@132 $generated@@133)))
 :weight 0
)) (forall (($generated@@134 T@U) ($generated@@135 T@U) ($generated@@136 T@U) ($generated@@137 T@U) ($generated@@138 T@U) ($generated@@139 T@U) ) (!  (or (= $generated@@137 $generated@@139) (= ($generated@@44 ($generated@@60 $generated@@135 $generated@@136 $generated@@137 $generated@@134) $generated@@138 $generated@@139) ($generated@@44 $generated@@135 $generated@@138 $generated@@139)))
 :weight 0
))) (forall (($generated@@140 T@U) ($generated@@141 T@U) ($generated@@142 T@U) ($generated@@143 T@U) ($generated@@144 T@U) ($generated@@145 T@U) ) (!  (or true (= ($generated@@44 ($generated@@60 $generated@@141 $generated@@142 $generated@@143 $generated@@140) $generated@@144 $generated@@145) ($generated@@44 $generated@@141 $generated@@144 $generated@@145)))
 :weight 0
)))) (forall (($generated@@146 T@U) ($generated@@147 T@U) ($generated@@148 T@U) ($generated@@149 Bool) ) (! (= (type ($generated@@45 $generated@@146 $generated@@147 $generated@@148 $generated@@149)) ($generated@@57 $generated@@47 $generated@@4))
 :pattern ( ($generated@@45 $generated@@146 $generated@@147 $generated@@148 $generated@@149))
))))
(assert (forall (($generated@@150 T@U) ($generated@@151 T@U) ($generated@@152 T@U) ($generated@@153 Bool) ($generated@@154 T@U) ($generated@@155 T@U) ) (! (let (($generated@@156 ($generated@@46 (type $generated@@155))))
 (=> (and (and (and (and (= (type $generated@@150) $generated@@47) (= (type $generated@@151) ($generated@@48 $generated@@47 $generated@@49))) (= (type $generated@@152) ($generated@@50 $generated@@4))) (= (type $generated@@154) $generated@@47)) (= (type $generated@@155) ($generated@@50 $generated@@156))) (= ($generated@@0 ($generated@@44 ($generated@@45 $generated@@150 $generated@@151 $generated@@152 $generated@@153) $generated@@154 $generated@@155))  (=> (and (not (= $generated@@154 $generated@@150)) ($generated@@0 ($generated@@51 ($generated@@52 $generated@@151 $generated@@154) $generated@@152))) $generated@@153))))
 :pattern ( ($generated@@44 ($generated@@45 $generated@@150 $generated@@151 $generated@@152 $generated@@153) $generated@@154 $generated@@155))
)))
(assert (forall (($generated@@158 Int) ) (! (= ($generated@@157 $generated@@158) $generated@@158)
 :pattern ( ($generated@@157 $generated@@158))
)))
(assert (forall (($generated@@160 Real) ) (! (= ($generated@@159 $generated@@160) $generated@@160)
 :pattern ( ($generated@@159 $generated@@160))
)))
(assert (forall (($generated@@162 T@U) ) (! (let (($generated@@163 (type $generated@@162)))
(= (type ($generated@@161 $generated@@162)) $generated@@163))
 :pattern ( ($generated@@161 $generated@@162))
)))
(assert (forall (($generated@@164 T@U) ) (! (= ($generated@@161 $generated@@164) $generated@@164)
 :pattern ( ($generated@@161 $generated@@164))
)))
(assert  (and (and (= ($generated@@1 $generated@@167) 11) (forall (($generated@@168 T@U) ) (! (= (type ($generated@@165 $generated@@168)) $generated@@167)
 :pattern ( ($generated@@165 $generated@@168))
))) (forall (($generated@@169 T@T) ($generated@@170 T@U) ) (! (= (type ($generated@@166 $generated@@169 $generated@@170)) $generated@@169)
 :pattern ( ($generated@@166 $generated@@169 $generated@@170))
))))
(assert (forall (($generated@@171 T@U) ) (! (let (($generated@@172 (type $generated@@171)))
(= ($generated@@166 $generated@@172 ($generated@@165 $generated@@171)) $generated@@171))
 :pattern ( ($generated@@165 $generated@@171))
)))
(assert (forall (($generated@@173 Int) ) (! (= ($generated@@165 ($generated@@8 ($generated@@157 $generated@@173))) ($generated@@161 ($generated@@165 ($generated@@8 $generated@@173))))
 :pattern ( ($generated@@165 ($generated@@8 ($generated@@157 $generated@@173))))
)))
(assert (forall (($generated@@174 Real) ) (! (= ($generated@@165 ($generated@@9 ($generated@@159 $generated@@174))) ($generated@@161 ($generated@@165 ($generated@@9 $generated@@174))))
 :pattern ( ($generated@@165 ($generated@@9 ($generated@@159 $generated@@174))))
)))
(assert (forall (($generated@@175 T@U) ) (! (= ($generated@@165 ($generated@@161 $generated@@175)) ($generated@@161 ($generated@@165 $generated@@175)))
 :pattern ( ($generated@@165 ($generated@@161 $generated@@175)))
)))
(push 1)
(declare-fun ControlFlow (Int Int) Int)
(declare-fun $generated@@176 () T@U)
(declare-fun $generated@@177 () T@U)
(declare-fun $generated@@178 () T@U)
(declare-fun $generated@@179 () T@U)
(declare-fun $generated@@180 () Int)
(declare-fun $generated@@181 () Int)
(declare-fun $generated@@182 () Real)
(declare-fun $generated@@183 (T@U) Bool)
(declare-fun $generated@@184 (T@U) Bool)
(declare-fun $generated@@185 () Int)
(declare-fun $generated@@186 () Real)
(declare-fun $generated@@187 () Int)
(assert  (and (and (and (= (type $generated@@176) ($generated@@57 $generated@@47 $generated@@4)) (= (type $generated@@177) $generated@@47)) (= (type $generated@@178) ($generated@@48 $generated@@47 $generated@@49))) (= (type $generated@@179) ($generated@@50 $generated@@4))))
(set-option :timeout 0)
(set-option :rlimit 0)
(assert (not
 (=> (= (ControlFlow 0 0) 4) (let (($generated@@188  (=> (and (= $generated@@176 ($generated@@45 $generated@@177 $generated@@178 $generated@@179 false)) (= $generated@@180 ($generated@@157 4))) (and (=> (= (ControlFlow 0 2) (- 0 3)) (and (<= ($generated@@157 0) $generated@@180) (< $generated@@180 100))) (=> (and (<= ($generated@@157 0) $generated@@180) (< $generated@@180 100)) (=> (= $generated@@181 ($generated@@157 4)) (=> (and (= $generated@@182 ($generated@@159 4.0)) (= (ControlFlow 0 2) (- 0 1))) (and (<= ($generated@@159 0.0) $generated@@182) (<= $generated@@182 ($generated@@159 100.0))))))))))
(let (($generated@@189  (=> (and (and (and ($generated@@183 $generated@@178) ($generated@@184 $generated@@178)) (and (<= ($generated@@157 0) $generated@@185) (< $generated@@185 100))) (and (and (<= ($generated@@159 0.0) $generated@@186) (<= $generated@@186 ($generated@@159 100.0))) (and (= 1 $generated@@187) (= (ControlFlow 0 4) 2)))) $generated@@188)))
$generated@@189)))
))
(check-sat)
(pop 1)
; Valid
(get-info :rlimit)
(reset)
(set-option :rlimit 0)
; did a full reset
(reset)
(set-option :print-success false)
(set-info :smt-lib-version 2.6)
(set-option :auto_config false)
(set-option :type_check true)
(set-option :smt.case_split 3)
(set-option :smt.qi.eager_threshold 100)
(set-option :smt.delay_units true)
(set-option :smt.arith.solver 2)
(set-option :smt.mbqi false)
(set-option :model.compact false)
(set-option :model.v2 true)
(set-option :pp.bv_literals false)
; done setting options


(set-info :category "industrial")
(declare-sort |T@U| 0)
(declare-sort |T@T| 0)
(declare-fun real_pow (Real Real) Real)
(declare-fun UOrdering2 (|T@U| |T@U|) Bool)
(declare-fun UOrdering3 (|T@T| |T@U| |T@U|) Bool)
(declare-fun tickleBool (Bool) Bool)
(assert (and (tickleBool true) (tickleBool false)))
(declare-fun $generated (T@U) Int)
(declare-fun $generated@@0 (T@U) Bool)
(declare-fun $generated@@1 (T@T) Int)
(declare-fun $generated@@2 () T@T)
(declare-fun $generated@@3 () T@T)
(declare-fun $generated@@4 () T@T)
(declare-fun $generated@@5 () T@T)
(declare-fun $generated@@6 () T@T)
(declare-fun $generated@@7 () T@T)
(declare-fun $generated@@8 (Int) T@U)
(declare-fun type (T@U) T@T)
(declare-fun $generated@@9 (Real) T@U)
(declare-fun $generated@@10 (T@U) Real)
(declare-fun $generated@@11 (Bool) T@U)
(declare-fun $generated@@12 (RoundingMode) T@U)
(declare-fun $generated@@13 (T@U) RoundingMode)
(declare-fun $generated@@14 (String) T@U)
(declare-fun $generated@@15 (T@U) String)
(declare-fun $generated@@16 ((RegEx String)) T@U)
(declare-fun $generated@@17 (T@U) (RegEx String))
(declare-fun $generated@@44 () T@U)
(declare-fun $generated@@45 () T@U)
(declare-fun $generated@@46 () T@U)
(declare-fun $generated@@47 () T@U)
(declare-fun $generated@@48 () T@U)
(declare-fun $generated@@49 () T@U)
(declare-fun $generated@@50 () T@U)
(declare-fun $generated@@51 () T@U)
(declare-fun $generated@@52 () T@U)
(declare-fun $generated@@53 () T@U)
(declare-fun $generated@@54 () T@U)
(declare-fun $generated@@55 () T@U)
(declare-fun $generated@@56 () T@U)
(declare-fun $generated@@57 () T@U)
(declare-fun $generated@@58 () T@U)
(declare-fun $generated@@59 () T@U)
(declare-fun $generated@@60 () T@U)
(declare-fun $generated@@61 () T@U)
(declare-fun $generated@@62 () T@U)
(declare-fun $generated@@63 () T@U)
(declare-fun $generated@@64 () T@T)
(declare-fun $generated@@65 () T@T)
(declare-fun $generated@@66 (T@T) T@T)
(declare-fun $generated@@67 (T@T) T@T)
(declare-fun $generated@@68 () T@T)
(declare-fun $generated@@69 () T@T)
(declare-fun $generated@@72 (T@U) T@U)
(declare-fun $generated@@74 (T@U T@U T@U) Bool)
(declare-fun $generated@@75 (Int) T@U)
(declare-fun $generated@@76 (T@T T@T) T@T)
(declare-fun $generated@@77 () T@T)
(declare-fun $generated@@78 () T@T)
(declare-fun $generated@@79 (T@T) T@T)
(declare-fun $generated@@80 (T@T) T@T)
(declare-fun $generated@@81 (T@U T@U) T@U)
(declare-fun $generated@@82 (T@U T@U T@U) T@U)
(declare-fun $generated@@83 (T@U T@U) T@U)
(declare-fun $generated@@84 (T@U T@U T@U) T@U)
(declare-fun $generated@@132 (T@U T@U) Bool)
(declare-fun $generated@@134 (T@U) Bool)
(declare-fun $generated@@135 (T@U T@U) T@U)
(declare-fun $generated@@136 () T@T)
(declare-fun $generated@@142 (T@U T@U) Bool)
(declare-fun $generated@@143 (T@U) T@U)
(declare-fun $generated@@144 (T@U) T@U)
(declare-fun $generated@@145 () T@T)
(declare-fun $generated@@150 (T@U) T@U)
(declare-fun $generated@@151 (T@U) Bool)
(declare-fun $generated@@155 (T@U T@U T@U) T@U)
(declare-fun $generated@@156 (T@U T@U T@U Bool) T@U)
(declare-fun $generated@@157 (T@T T@T) T@T)
(declare-fun $generated@@158 (T@T) T@T)
(declare-fun $generated@@159 (T@T) T@T)
(declare-fun $generated@@160 (T@U T@U T@U T@U) T@U)
(declare-fun $generated@@211 (T@U T@U) T@U)
(declare-fun $generated@@212 (T@U T@U) Bool)
(declare-fun $generated@@221 (T@U) T@U)
(declare-fun $generated@@226 (T@U) T@U)
(declare-fun $generated@@231 (Int) Int)
(declare-fun $generated@@233 (T@U) T@U)
(declare-fun $generated@@237 (T@U) Bool)
(declare-fun $generated@@238 (T@U T@U T@U) Bool)
(declare-fun $generated@@244 (T@U) T@U)
(declare-fun $generated@@250 (T@T) T@U)
(declare-fun $generated@@251 (T@U) Int)
(declare-fun $generated@@252 (T@T) T@T)
(declare-fun $generated@@253 (T@T) T@T)
(declare-fun $generated@@258 (T@U) T@U)
(declare-fun $generated@@263 (T@U) Int)
(declare-fun $generated@@264 (T@T) T@U)
(declare-fun $generated@@269 (T@U) T@U)
(declare-fun $generated@@270 (T@T T@T) T@U)
(declare-fun $generated@@271 (T@T T@T) T@T)
(declare-fun $generated@@272 (T@T) T@T)
(declare-fun $generated@@273 (T@T) T@T)
(declare-fun $generated@@287 (T@U) T@U)
(declare-fun $generated@@288 (T@T T@T) T@U)
(declare-fun $generated@@289 (T@T T@T) T@T)
(declare-fun $generated@@290 (T@T) T@T)
(declare-fun $generated@@291 (T@T) T@T)
(declare-fun $generated@@312 (T@U) T@U)
(declare-fun $generated@@323 (T@U) T@U)
(declare-fun $generated@@343 (T@U) T@U)
(declare-fun $generated@@344 (T@T T@U) T@U)
(declare-fun $generated@@345 (T@U) T@U)
(declare-fun $generated@@354 (T@U) T@U)
(declare-fun $generated@@355 (T@U) T@U)
(declare-fun $generated@@372 (T@U T@U) T@U)
(declare-fun $generated@@380 (T@U T@U) T@U)
(declare-fun $generated@@388 (T@T) T@U)
(declare-fun $generated@@412 () T@T)
(declare-fun $generated@@420 (T@U) T@U)
(declare-fun $generated@@424 (T@U) T@U)
(declare-fun $generated@@430 (T@U) T@U)
(declare-fun $generated@@434 (T@U) T@U)
(declare-fun $generated@@442 (T@U) T@U)
(declare-fun $generated@@446 (T@U) T@U)
(declare-fun $generated@@454 (T@U) T@U)
(declare-fun $generated@@455 (T@U Int) T@U)
(declare-fun $generated@@464 (T@U) Int)
(declare-fun $generated@@466 (T@U) T@U)
(declare-fun $generated@@470 (T@U) T@U)
(declare-fun $generated@@474 (T@U) T@U)
(declare-fun $generated@@478 (T@U) T@U)
(declare-fun $generated@@492 (T@U) Int)
(declare-fun $generated@@493 (T@U) Int)
(declare-fun $generated@@509 (T@U) T@U)
(declare-fun $generated@@558 (T@U) Int)
(assert  (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (= ($generated@@1 $generated@@2) 0) (= ($generated@@1 $generated@@3) 1)) (= ($generated@@1 $generated@@4) 2)) (= ($generated@@1 $generated@@5) 3)) (= ($generated@@1 $generated@@6) 4)) (= ($generated@@1 $generated@@7) 5)) (forall (($generated@@18 Int) ) (! (= ($generated ($generated@@8 $generated@@18)) $generated@@18)
 :pattern ( ($generated@@8 $generated@@18))
))) (forall (($generated@@19 T@U) ) (!  (=> (= (type $generated@@19) $generated@@2) (= ($generated@@8 ($generated $generated@@19)) $generated@@19))
 :pattern ( ($generated $generated@@19))
))) (forall (($generated@@20 Int) ) (! (= (type ($generated@@8 $generated@@20)) $generated@@2)
 :pattern ( ($generated@@8 $generated@@20))
))) (forall (($generated@@21 Real) ) (! (= ($generated@@10 ($generated@@9 $generated@@21)) $generated@@21)
 :pattern ( ($generated@@9 $generated@@21))
))) (forall (($generated@@22 T@U) ) (!  (=> (= (type $generated@@22) $generated@@3) (= ($generated@@9 ($generated@@10 $generated@@22)) $generated@@22))
 :pattern ( ($generated@@10 $generated@@22))
))) (forall (($generated@@23 Real) ) (! (= (type ($generated@@9 $generated@@23)) $generated@@3)
 :pattern ( ($generated@@9 $generated@@23))
))) (forall (($generated@@24 Bool) ) (! (= ($generated@@0 ($generated@@11 $generated@@24)) $generated@@24)
 :pattern ( ($generated@@11 $generated@@24))
))) (forall (($generated@@25 T@U) ) (!  (=> (= (type $generated@@25) $generated@@4) (= ($generated@@11 ($generated@@0 $generated@@25)) $generated@@25))
 :pattern ( ($generated@@0 $generated@@25))
))) (forall (($generated@@26 Bool) ) (! (= (type ($generated@@11 $generated@@26)) $generated@@4)
 :pattern ( ($generated@@11 $generated@@26))
))) (forall (($generated@@27 RoundingMode) ) (! (= ($generated@@13 ($generated@@12 $generated@@27)) $generated@@27)
 :pattern ( ($generated@@12 $generated@@27))
))) (forall (($generated@@28 T@U) ) (!  (=> (= (type $generated@@28) $generated@@5) (= ($generated@@12 ($generated@@13 $generated@@28)) $generated@@28))
 :pattern ( ($generated@@13 $generated@@28))
))) (forall (($generated@@29 RoundingMode) ) (! (= (type ($generated@@12 $generated@@29)) $generated@@5)
 :pattern ( ($generated@@12 $generated@@29))
))) (forall (($generated@@30 String) ) (! (= ($generated@@15 ($generated@@14 $generated@@30)) $generated@@30)
 :pattern ( ($generated@@14 $generated@@30))
))) (forall (($generated@@31 T@U) ) (!  (=> (= (type $generated@@31) $generated@@6) (= ($generated@@14 ($generated@@15 $generated@@31)) $generated@@31))
 :pattern ( ($generated@@15 $generated@@31))
))) (forall (($generated@@32 String) ) (! (= (type ($generated@@14 $generated@@32)) $generated@@6)
 :pattern ( ($generated@@14 $generated@@32))
))) (forall (($generated@@33 (RegEx String)) ) (! (= ($generated@@17 ($generated@@16 $generated@@33)) $generated@@33)
 :pattern ( ($generated@@16 $generated@@33))
))) (forall (($generated@@34 T@U) ) (!  (=> (= (type $generated@@34) $generated@@7) (= ($generated@@16 ($generated@@17 $generated@@34)) $generated@@34))
 :pattern ( ($generated@@17 $generated@@34))
))) (forall (($generated@@35 (RegEx String)) ) (! (= (type ($generated@@16 $generated@@35)) $generated@@7)
 :pattern ( ($generated@@16 $generated@@35))
))))
(assert (forall (($generated@@36 T@U) ) (! (UOrdering2 $generated@@36 $generated@@36)
 :no-pattern ($generated $generated@@36)
 :no-pattern ($generated@@0 $generated@@36)
)))
(assert (forall (($generated@@37 T@U) ($generated@@38 T@U) ($generated@@39 T@U) ) (! (let (($generated@@40 (type $generated@@37)))
 (=> (and (and (= (type $generated@@38) $generated@@40) (= (type $generated@@39) $generated@@40)) (and (UOrdering2 $generated@@37 $generated@@38) (UOrdering2 $generated@@38 $generated@@39))) (UOrdering2 $generated@@37 $generated@@39)))
 :pattern ( (UOrdering2 $generated@@37 $generated@@38) (UOrdering2 $generated@@38 $generated@@39))
)))
(assert (forall (($generated@@41 T@U) ($generated@@42 T@U) ) (! (let (($generated@@43 (type $generated@@41)))
 (=> (= (type $generated@@42) $generated@@43) (=> (and (UOrdering2 $generated@@41 $generated@@42) (UOrdering2 $generated@@42 $generated@@41)) (= $generated@@41 $generated@@42))))
 :pattern ( (UOrdering2 $generated@@41 $generated@@42) (UOrdering2 $generated@@42 $generated@@41))
)))
(assert  (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (= ($generated@@1 $generated@@64) 6) (= (type $generated@@44) $generated@@64)) (= (type $generated@@45) $generated@@64)) (= (type $generated@@46) $generated@@64)) (= (type $generated@@47) $generated@@64)) (= (type $generated@@48) $generated@@64)) (= ($generated@@1 $generated@@65) 7)) (= (type $generated@@49) $generated@@65)) (= (type $generated@@50) $generated@@65)) (= (type $generated@@51) $generated@@65)) (= (type $generated@@52) $generated@@65)) (= (type $generated@@53) $generated@@65)) (= (type $generated@@54) $generated@@65)) (= (type $generated@@55) $generated@@65)) (= (type $generated@@56) $generated@@65)) (= (type $generated@@57) $generated@@65)) (= (type $generated@@58) $generated@@65)) (= (type $generated@@59) $generated@@65)) (forall (($generated@@70 T@T) ) (= ($generated@@1 ($generated@@66 $generated@@70)) 8))) (forall (($generated@@71 T@T) ) (! (= ($generated@@67 ($generated@@66 $generated@@71)) $generated@@71)
 :pattern ( ($generated@@66 $generated@@71))
))) (= (type $generated@@60) ($generated@@66 $generated@@4))) (= ($generated@@1 $generated@@68) 9)) (= (type $generated@@61) $generated@@68)) (= (type $generated@@62) $generated@@65)) (= ($generated@@1 $generated@@69) 10)) (= (type $generated@@63) $generated@@69)))
(assert (distinct $generated@@44 $generated@@45 $generated@@46 $generated@@47 $generated@@48 $generated@@49 $generated@@50 $generated@@51 $generated@@52 $generated@@53 $generated@@54 $generated@@55 $generated@@56 $generated@@57 $generated@@58 $generated@@59 $generated@@60 $generated@@61 $generated@@62 $generated@@63)
)
(assert (forall (($generated@@73 T@U) ) (! (= (type ($generated@@72 $generated@@73)) $generated@@65)
 :pattern ( ($generated@@72 $generated@@73))
)))
(assert (= ($generated@@72 $generated@@44) $generated@@49))
(assert (= ($generated@@72 $generated@@45) $generated@@50))
(assert (= ($generated@@72 $generated@@46) $generated@@51))
(assert (= ($generated@@72 $generated@@47) $generated@@52))
(assert (= ($generated@@72 $generated@@48) $generated@@53))
(assert  (and (and (and (and (and (and (and (and (and (and (and (and (and (forall (($generated@@85 T@T) ($generated@@86 T@T) ) (= ($generated@@1 ($generated@@76 $generated@@85 $generated@@86)) 11)) (forall (($generated@@87 T@T) ($generated@@88 T@T) ) (! (= ($generated@@79 ($generated@@76 $generated@@87 $generated@@88)) $generated@@87)
 :pattern ( ($generated@@76 $generated@@87 $generated@@88))
))) (forall (($generated@@89 T@T) ($generated@@90 T@T) ) (! (= ($generated@@80 ($generated@@76 $generated@@89 $generated@@90)) $generated@@90)
 :pattern ( ($generated@@76 $generated@@89 $generated@@90))
))) (forall (($generated@@91 T@U) ($generated@@92 T@U) ) (! (let (($generated@@93 ($generated@@80 (type $generated@@91))))
(= (type ($generated@@81 $generated@@91 $generated@@92)) $generated@@93))
 :pattern ( ($generated@@81 $generated@@91 $generated@@92))
))) (forall (($generated@@94 T@U) ($generated@@95 T@U) ($generated@@96 T@U) ) (! (let (($generated@@97 (type $generated@@96)))
(let (($generated@@98 (type $generated@@95)))
(= (type ($generated@@82 $generated@@94 $generated@@95 $generated@@96)) ($generated@@76 $generated@@98 $generated@@97))))
 :pattern ( ($generated@@82 $generated@@94 $generated@@95 $generated@@96))
))) (forall (($generated@@99 T@U) ($generated@@100 T@U) ($generated@@101 T@U) ) (! (let (($generated@@102 ($generated@@80 (type $generated@@99))))
 (=> (= (type $generated@@101) $generated@@102) (= ($generated@@81 ($generated@@82 $generated@@99 $generated@@100 $generated@@101) $generated@@100) $generated@@101)))
 :weight 0
))) (and (forall (($generated@@103 T@U) ($generated@@104 T@U) ($generated@@105 T@U) ($generated@@106 T@U) ) (!  (or (= $generated@@105 $generated@@106) (= ($generated@@81 ($generated@@82 $generated@@104 $generated@@105 $generated@@103) $generated@@106) ($generated@@81 $generated@@104 $generated@@106)))
 :weight 0
)) (forall (($generated@@107 T@U) ($generated@@108 T@U) ($generated@@109 T@U) ($generated@@110 T@U) ) (!  (or true (= ($generated@@81 ($generated@@82 $generated@@108 $generated@@109 $generated@@107) $generated@@110) ($generated@@81 $generated@@108 $generated@@110)))
 :weight 0
)))) (= ($generated@@1 $generated@@77) 12)) (forall (($generated@@111 T@U) ($generated@@112 T@U) ) (! (let (($generated@@113 ($generated@@67 (type $generated@@112))))
(= (type ($generated@@83 $generated@@111 $generated@@112)) $generated@@113))
 :pattern ( ($generated@@83 $generated@@111 $generated@@112))
))) (= ($generated@@1 $generated@@78) 13)) (forall (($generated@@114 T@U) ($generated@@115 T@U) ($generated@@116 T@U) ) (! (= (type ($generated@@84 $generated@@114 $generated@@115 $generated@@116)) $generated@@78)
 :pattern ( ($generated@@84 $generated@@114 $generated@@115 $generated@@116))
))) (forall (($generated@@117 T@U) ($generated@@118 T@U) ($generated@@119 T@U) ) (! (let (($generated@@120 ($generated@@67 (type $generated@@118))))
 (=> (= (type $generated@@119) $generated@@120) (= ($generated@@83 ($generated@@84 $generated@@117 $generated@@118 $generated@@119) $generated@@118) $generated@@119)))
 :weight 0
))) (and (forall (($generated@@121 T@U) ($generated@@122 T@U) ($generated@@123 T@U) ($generated@@124 T@U) ) (!  (or (= $generated@@123 $generated@@124) (= ($generated@@83 ($generated@@84 $generated@@122 $generated@@123 $generated@@121) $generated@@124) ($generated@@83 $generated@@122 $generated@@124)))
 :weight 0
)) (forall (($generated@@125 T@U) ($generated@@126 T@U) ($generated@@127 T@U) ($generated@@128 T@U) ) (!  (or true (= ($generated@@83 ($generated@@84 $generated@@126 $generated@@127 $generated@@125) $generated@@128) ($generated@@83 $generated@@126 $generated@@128)))
 :weight 0
)))) (forall (($generated@@129 Int) ) (! (= (type ($generated@@75 $generated@@129)) $generated@@64)
 :pattern ( ($generated@@75 $generated@@129))
))))
(assert (forall (($generated@@130 T@U) ($generated@@131 T@U) ) (!  (=> (and (= (type $generated@@130) $generated@@2) (= (type $generated@@131) ($generated@@76 $generated@@77 $generated@@78))) ($generated@@74 $generated@@130 ($generated@@75 0) $generated@@131))
 :pattern ( ($generated@@74 $generated@@130 ($generated@@75 0) $generated@@131))
)))
(assert (forall (($generated@@133 T@U) ) (!  (=> (= (type $generated@@133) $generated@@2) ($generated@@132 $generated@@133 ($generated@@75 0)))
 :pattern ( ($generated@@132 $generated@@133 ($generated@@75 0)))
)))
(assert  (and (= ($generated@@1 $generated@@136) 14) (forall (($generated@@137 T@U) ($generated@@138 T@U) ) (! (= (type ($generated@@135 $generated@@137 $generated@@138)) $generated@@64)
 :pattern ( ($generated@@135 $generated@@137 $generated@@138))
))))
(assert (forall (($generated@@139 T@U) ($generated@@140 T@U) ($generated@@141 T@U) ) (!  (=> (and (and (and (= (type $generated@@139) $generated@@64) (= (type $generated@@140) $generated@@64)) (= (type $generated@@141) $generated@@136)) ($generated@@132 $generated@@141 ($generated@@135 $generated@@139 $generated@@140))) ($generated@@134 $generated@@141))
 :pattern ( ($generated@@134 $generated@@141) ($generated@@132 $generated@@141 ($generated@@135 $generated@@139 $generated@@140)))
)))
(assert  (and (and (= ($generated@@1 $generated@@145) 15) (forall (($generated@@146 T@U) ) (! (= (type ($generated@@143 $generated@@146)) $generated@@145)
 :pattern ( ($generated@@143 $generated@@146))
))) (forall (($generated@@147 T@U) ) (! (= (type ($generated@@144 $generated@@147)) $generated@@145)
 :pattern ( ($generated@@144 $generated@@147))
))))
(assert (forall (($generated@@148 T@U) ($generated@@149 T@U) ) (!  (=> (and (and (= (type $generated@@148) $generated@@136) (= (type $generated@@149) $generated@@136)) true) (= ($generated@@142 $generated@@148 $generated@@149)  (and (= ($generated@@143 $generated@@148) ($generated@@143 $generated@@149)) (= ($generated@@144 $generated@@148) ($generated@@144 $generated@@149)))))
 :pattern ( ($generated@@142 $generated@@148 $generated@@149))
)))
(assert (forall (($generated@@152 T@U) ) (! (= (type ($generated@@150 $generated@@152)) $generated@@64)
 :pattern ( ($generated@@150 $generated@@152))
)))
(assert (forall (($generated@@153 T@U) ($generated@@154 T@U) ) (!  (=> (and (and (= (type $generated@@153) ($generated@@76 $generated@@145 $generated@@2)) (= (type $generated@@154) $generated@@64)) ($generated@@132 $generated@@153 ($generated@@150 $generated@@154))) ($generated@@151 $generated@@153))
 :pattern ( ($generated@@132 $generated@@153 ($generated@@150 $generated@@154)))
)))
(assert  (and (and (and (and (and (and (and (forall (($generated@@161 T@T) ($generated@@162 T@T) ) (= ($generated@@1 ($generated@@157 $generated@@161 $generated@@162)) 16)) (forall (($generated@@163 T@T) ($generated@@164 T@T) ) (! (= ($generated@@158 ($generated@@157 $generated@@163 $generated@@164)) $generated@@163)
 :pattern ( ($generated@@157 $generated@@163 $generated@@164))
))) (forall (($generated@@165 T@T) ($generated@@166 T@T) ) (! (= ($generated@@159 ($generated@@157 $generated@@165 $generated@@166)) $generated@@166)
 :pattern ( ($generated@@157 $generated@@165 $generated@@166))
))) (forall (($generated@@167 T@U) ($generated@@168 T@U) ($generated@@169 T@U) ) (! (let (($generated@@170 ($generated@@159 (type $generated@@167))))
(= (type ($generated@@155 $generated@@167 $generated@@168 $generated@@169)) $generated@@170))
 :pattern ( ($generated@@155 $generated@@167 $generated@@168 $generated@@169))
))) (forall (($generated@@171 T@U) ($generated@@172 T@U) ($generated@@173 T@U) ($generated@@174 T@U) ) (! (let (($generated@@175 (type $generated@@174)))
(let (($generated@@176 (type $generated@@172)))
(= (type ($generated@@160 $generated@@171 $generated@@172 $generated@@173 $generated@@174)) ($generated@@157 $generated@@176 $generated@@175))))
 :pattern ( ($generated@@160 $generated@@171 $generated@@172 $generated@@173 $generated@@174))
))) (forall (($generated@@177 T@U) ($generated@@178 T@U) ($generated@@179 T@U) ($generated@@180 T@U) ) (! (let (($generated@@181 ($generated@@159 (type $generated@@177))))
 (=> (= (type $generated@@180) $generated@@181) (= ($generated@@155 ($generated@@160 $generated@@177 $generated@@178 $generated@@179 $generated@@180) $generated@@178 $generated@@179) $generated@@180)))
 :weight 0
))) (and (and (forall (($generated@@182 T@U) ($generated@@183 T@U) ($generated@@184 T@U) ($generated@@185 T@U) ($generated@@186 T@U) ($generated@@187 T@U) ) (!  (or (= $generated@@184 $generated@@186) (= ($generated@@155 ($generated@@160 $generated@@183 $generated@@184 $generated@@185 $generated@@182) $generated@@186 $generated@@187) ($generated@@155 $generated@@183 $generated@@186 $generated@@187)))
 :weight 0
)) (forall (($generated@@188 T@U) ($generated@@189 T@U) ($generated@@190 T@U) ($generated@@191 T@U) ($generated@@192 T@U) ($generated@@193 T@U) ) (!  (or (= $generated@@191 $generated@@193) (= ($generated@@155 ($generated@@160 $generated@@189 $generated@@190 $generated@@191 $generated@@188) $generated@@192 $generated@@193) ($generated@@155 $generated@@189 $generated@@192 $generated@@193)))
 :weight 0
))) (forall (($generated@@194 T@U) ($generated@@195 T@U) ($generated@@196 T@U) ($generated@@197 T@U) ($generated@@198 T@U) ($generated@@199 T@U) ) (!  (or true (= ($generated@@155 ($generated@@160 $generated@@195 $generated@@196 $generated@@197 $generated@@194) $generated@@198 $generated@@199) ($generated@@155 $generated@@195 $generated@@198 $generated@@199)))
 :weight 0
)))) (forall (($generated@@200 T@U) ($generated@@201 T@U) ($generated@@202 T@U) ($generated@@203 Bool) ) (! (= (type ($generated@@156 $generated@@200 $generated@@201 $generated@@202 $generated@@203)) ($generated@@157 $generated@@77 $generated@@4))
 :pattern ( ($generated@@156 $generated@@200 $generated@@201 $generated@@202 $generated@@203))
))))
(assert (forall (($generated@@204 T@U) ($generated@@205 T@U) ($generated@@206 T@U) ($generated@@207 Bool) ($generated@@208 T@U) ($generated@@209 T@U) ) (! (let (($generated@@210 ($generated@@67 (type $generated@@209))))
 (=> (and (and (and (and (= (type $generated@@204) $generated@@77) (= (type $generated@@205) ($generated@@76 $generated@@77 $generated@@78))) (= (type $generated@@206) ($generated@@66 $generated@@4))) (= (type $generated@@208) $generated@@77)) (= (type $generated@@209) ($generated@@66 $generated@@210))) (= ($generated@@0 ($generated@@155 ($generated@@156 $generated@@204 $generated@@205 $generated@@206 $generated@@207) $generated@@208 $generated@@209))  (=> (and (not (= $generated@@208 $generated@@204)) ($generated@@0 ($generated@@83 ($generated@@81 $generated@@205 $generated@@208) $generated@@206))) $generated@@207))))
 :pattern ( ($generated@@155 ($generated@@156 $generated@@204 $generated@@205 $generated@@206 $generated@@207) $generated@@208 $generated@@209))
)))
(assert (forall (($generated@@213 T@U) ($generated@@214 T@U) ) (! (= (type ($generated@@211 $generated@@213 $generated@@214)) $generated@@136)
 :pattern ( ($generated@@211 $generated@@213 $generated@@214))
)))
(assert (forall (($generated@@215 T@U) ($generated@@216 T@U) ($generated@@217 T@U) ($generated@@218 T@U) ) (!  (=> (and (and (and (= (type $generated@@215) $generated@@64) (= (type $generated@@216) $generated@@64)) (= (type $generated@@217) $generated@@145)) (= (type $generated@@218) $generated@@145)) (= ($generated@@132 ($generated@@211 $generated@@217 $generated@@218) ($generated@@135 $generated@@215 $generated@@216))  (and ($generated@@212 $generated@@217 $generated@@215) ($generated@@212 $generated@@218 $generated@@216))))
 :pattern ( ($generated@@132 ($generated@@211 $generated@@217 $generated@@218) ($generated@@135 $generated@@215 $generated@@216)))
)))
(assert (forall (($generated@@219 T@U) ($generated@@220 T@U) ) (!  (=> (and (= (type $generated@@219) $generated@@136) (= (type $generated@@220) $generated@@136)) (= ($generated@@142 $generated@@219 $generated@@220) (= $generated@@219 $generated@@220)))
 :pattern ( ($generated@@142 $generated@@219 $generated@@220))
)))
(assert (forall (($generated@@222 T@U) ) (! (= (type ($generated@@221 $generated@@222)) $generated@@64)
 :pattern ( ($generated@@221 $generated@@222))
)))
(assert (forall (($generated@@223 T@U) ($generated@@224 T@U) ) (!  (=> (and (= (type $generated@@223) ($generated@@76 $generated@@145 $generated@@4)) (= (type $generated@@224) $generated@@64)) (= ($generated@@132 $generated@@223 ($generated@@221 $generated@@224)) (forall (($generated@@225 T@U) ) (!  (=> (and (= (type $generated@@225) $generated@@145) ($generated@@0 ($generated@@81 $generated@@223 $generated@@225))) ($generated@@212 $generated@@225 $generated@@224))
 :pattern ( ($generated@@81 $generated@@223 $generated@@225))
))))
 :pattern ( ($generated@@132 $generated@@223 ($generated@@221 $generated@@224)))
)))
(assert (forall (($generated@@227 T@U) ) (! (= (type ($generated@@226 $generated@@227)) $generated@@64)
 :pattern ( ($generated@@226 $generated@@227))
)))
(assert (forall (($generated@@228 T@U) ($generated@@229 T@U) ) (!  (=> (and (= (type $generated@@228) ($generated@@76 $generated@@145 $generated@@4)) (= (type $generated@@229) $generated@@64)) (= ($generated@@132 $generated@@228 ($generated@@226 $generated@@229)) (forall (($generated@@230 T@U) ) (!  (=> (and (= (type $generated@@230) $generated@@145) ($generated@@0 ($generated@@81 $generated@@228 $generated@@230))) ($generated@@212 $generated@@230 $generated@@229))
 :pattern ( ($generated@@81 $generated@@228 $generated@@230))
))))
 :pattern ( ($generated@@132 $generated@@228 ($generated@@226 $generated@@229)))
)))
(assert (forall (($generated@@232 Int) ) (! (= ($generated@@231 $generated@@232) $generated@@232)
 :pattern ( ($generated@@231 $generated@@232))
)))
(assert (forall (($generated@@234 T@U) ) (! (let (($generated@@235 (type $generated@@234)))
(= (type ($generated@@233 $generated@@234)) $generated@@235))
 :pattern ( ($generated@@233 $generated@@234))
)))
(assert (forall (($generated@@236 T@U) ) (! (= ($generated@@233 $generated@@236) $generated@@236)
 :pattern ( ($generated@@233 $generated@@236))
)))
(assert (forall (($generated@@239 T@U) ($generated@@240 T@U) ($generated@@241 T@U) ($generated@@242 T@U) ($generated@@243 T@U) ) (!  (=> (and (and (and (and (and (= (type $generated@@239) $generated@@64) (= (type $generated@@240) $generated@@64)) (= (type $generated@@241) $generated@@145)) (= (type $generated@@242) $generated@@145)) (= (type $generated@@243) ($generated@@76 $generated@@77 $generated@@78))) ($generated@@237 $generated@@243)) (= ($generated@@74 ($generated@@211 $generated@@241 $generated@@242) ($generated@@135 $generated@@239 $generated@@240) $generated@@243)  (and ($generated@@238 $generated@@241 $generated@@239 $generated@@243) ($generated@@238 $generated@@242 $generated@@240 $generated@@243))))
 :pattern ( ($generated@@74 ($generated@@211 $generated@@241 $generated@@242) ($generated@@135 $generated@@239 $generated@@240) $generated@@243))
)))
(assert (forall (($generated@@245 T@U) ) (! (= (type ($generated@@244 $generated@@245)) $generated@@68)
 :pattern ( ($generated@@244 $generated@@245))
)))
(assert (forall (($generated@@246 T@U) ) (!  (=> (= (type $generated@@246) $generated@@136) (= ($generated@@134 $generated@@246) (= ($generated@@244 $generated@@246) $generated@@61)))
 :pattern ( ($generated@@134 $generated@@246))
)))
(assert (forall (($generated@@247 T@U) ) (!  (=> (and (= (type $generated@@247) $generated@@136) ($generated@@134 $generated@@247)) (exists (($generated@@248 T@U) ($generated@@249 T@U) ) (!  (and (and (= (type $generated@@248) $generated@@145) (= (type $generated@@249) $generated@@145)) (= $generated@@247 ($generated@@211 $generated@@248 $generated@@249)))
 :no-pattern (type $generated@@248)
 :no-pattern (type $generated@@249)
 :no-pattern ($generated $generated@@248)
 :no-pattern ($generated@@0 $generated@@248)
 :no-pattern ($generated $generated@@249)
 :no-pattern ($generated@@0 $generated@@249)
)))
 :pattern ( ($generated@@134 $generated@@247))
)))
(assert  (and (and (forall (($generated@@254 T@T) ) (= ($generated@@1 ($generated@@252 $generated@@254)) 17)) (forall (($generated@@255 T@T) ) (! (= ($generated@@253 ($generated@@252 $generated@@255)) $generated@@255)
 :pattern ( ($generated@@252 $generated@@255))
))) (forall (($generated@@256 T@T) ) (! (= (type ($generated@@250 $generated@@256)) ($generated@@252 $generated@@256))
 :pattern ( ($generated@@250 $generated@@256))
))))
(assert (forall (($generated@@257 T@T) ) (! (= ($generated@@251 ($generated@@250 $generated@@257)) 0)
 :pattern ( ($generated@@250 $generated@@257))
)))
(assert (forall (($generated@@259 T@U) ) (! (= (type ($generated@@258 $generated@@259)) $generated@@145)
 :pattern ( ($generated@@258 $generated@@259))
)))
(assert (forall (($generated@@260 T@U) ($generated@@261 T@U) ($generated@@262 T@U) ) (!  (=> (and (= (type $generated@@261) $generated@@64) (= (type $generated@@262) ($generated@@76 $generated@@77 $generated@@78))) (= ($generated@@238 ($generated@@258 $generated@@260) $generated@@261 $generated@@262) ($generated@@74 $generated@@260 $generated@@261 $generated@@262)))
 :pattern ( ($generated@@238 ($generated@@258 $generated@@260) $generated@@261 $generated@@262))
)))
(assert (forall (($generated@@265 T@T) ) (! (= (type ($generated@@264 $generated@@265)) ($generated@@76 $generated@@265 $generated@@2))
 :pattern ( ($generated@@264 $generated@@265))
)))
(assert (forall (($generated@@266 T@U) ) (! (let (($generated@@267 ($generated@@79 (type $generated@@266))))
 (=> (= (type $generated@@266) ($generated@@76 $generated@@267 $generated@@2)) (and (= (= ($generated@@263 $generated@@266) 0) (= $generated@@266 ($generated@@264 $generated@@267))) (=> (not (= ($generated@@263 $generated@@266) 0)) (exists (($generated@@268 T@U) ) (!  (and (= (type $generated@@268) $generated@@267) (< 0 ($generated ($generated@@81 $generated@@266 $generated@@268))))
 :no-pattern (type $generated@@268)
 :no-pattern ($generated $generated@@268)
 :no-pattern ($generated@@0 $generated@@268)
))))))
 :pattern ( ($generated@@263 $generated@@266))
)))
(assert  (and (and (and (and (forall (($generated@@274 T@T) ($generated@@275 T@T) ) (= ($generated@@1 ($generated@@271 $generated@@274 $generated@@275)) 18)) (forall (($generated@@276 T@T) ($generated@@277 T@T) ) (! (= ($generated@@272 ($generated@@271 $generated@@276 $generated@@277)) $generated@@276)
 :pattern ( ($generated@@271 $generated@@276 $generated@@277))
))) (forall (($generated@@278 T@T) ($generated@@279 T@T) ) (! (= ($generated@@273 ($generated@@271 $generated@@278 $generated@@279)) $generated@@279)
 :pattern ( ($generated@@271 $generated@@278 $generated@@279))
))) (forall (($generated@@280 T@U) ) (! (let (($generated@@281 ($generated@@272 (type $generated@@280))))
(= (type ($generated@@269 $generated@@280)) ($generated@@76 $generated@@281 $generated@@4)))
 :pattern ( ($generated@@269 $generated@@280))
))) (forall (($generated@@282 T@T) ($generated@@283 T@T) ) (! (= (type ($generated@@270 $generated@@282 $generated@@283)) ($generated@@271 $generated@@282 $generated@@283))
 :pattern ( ($generated@@270 $generated@@282 $generated@@283))
))))
(assert (forall (($generated@@284 T@U) ($generated@@285 T@T) ) (! (let (($generated@@286 (type $generated@@284)))
 (not ($generated@@0 ($generated@@81 ($generated@@269 ($generated@@270 $generated@@286 $generated@@285)) $generated@@284))))
 :pattern ( (let (($generated@@286 (type $generated@@284)))
($generated@@81 ($generated@@269 ($generated@@270 $generated@@286 $generated@@285)) $generated@@284)))
)))
(assert  (and (and (and (and (forall (($generated@@292 T@T) ($generated@@293 T@T) ) (= ($generated@@1 ($generated@@289 $generated@@292 $generated@@293)) 19)) (forall (($generated@@294 T@T) ($generated@@295 T@T) ) (! (= ($generated@@290 ($generated@@289 $generated@@294 $generated@@295)) $generated@@294)
 :pattern ( ($generated@@289 $generated@@294 $generated@@295))
))) (forall (($generated@@296 T@T) ($generated@@297 T@T) ) (! (= ($generated@@291 ($generated@@289 $generated@@296 $generated@@297)) $generated@@297)
 :pattern ( ($generated@@289 $generated@@296 $generated@@297))
))) (forall (($generated@@298 T@U) ) (! (let (($generated@@299 ($generated@@290 (type $generated@@298))))
(= (type ($generated@@287 $generated@@298)) ($generated@@76 $generated@@299 $generated@@4)))
 :pattern ( ($generated@@287 $generated@@298))
))) (forall (($generated@@300 T@T) ($generated@@301 T@T) ) (! (= (type ($generated@@288 $generated@@300 $generated@@301)) ($generated@@289 $generated@@300 $generated@@301))
 :pattern ( ($generated@@288 $generated@@300 $generated@@301))
))))
(assert (forall (($generated@@302 T@U) ($generated@@303 T@T) ) (! (let (($generated@@304 (type $generated@@302)))
 (not ($generated@@0 ($generated@@81 ($generated@@287 ($generated@@288 $generated@@304 $generated@@303)) $generated@@302))))
 :pattern ( (let (($generated@@304 (type $generated@@302)))
($generated@@81 ($generated@@287 ($generated@@288 $generated@@304 $generated@@303)) $generated@@302)))
)))
(assert (forall (($generated@@305 T@U) ) (! (let (($generated@@306 ($generated@@79 (type $generated@@305))))
 (=> (= (type $generated@@305) ($generated@@76 $generated@@306 $generated@@2)) (= ($generated@@151 $generated@@305) (forall (($generated@@307 T@U) ) (!  (=> (= (type $generated@@307) $generated@@306) (and (<= 0 ($generated ($generated@@81 $generated@@305 $generated@@307))) (<= ($generated ($generated@@81 $generated@@305 $generated@@307)) ($generated@@263 $generated@@305))))
 :pattern ( ($generated@@81 $generated@@305 $generated@@307))
)))))
 :pattern ( ($generated@@151 $generated@@305))
)))
(assert (forall (($generated@@308 T@U) ) (! (let (($generated@@309 ($generated@@273 (type $generated@@308))))
(let (($generated@@310 ($generated@@272 (type $generated@@308))))
 (=> (= (type $generated@@308) ($generated@@271 $generated@@310 $generated@@309)) (or (= $generated@@308 ($generated@@270 $generated@@310 $generated@@309)) (exists (($generated@@311 T@U) ) (!  (and (= (type $generated@@311) $generated@@310) ($generated@@0 ($generated@@81 ($generated@@269 $generated@@308) $generated@@311)))
 :no-pattern (type $generated@@311)
 :no-pattern ($generated $generated@@311)
 :no-pattern ($generated@@0 $generated@@311)
))))))
 :pattern ( ($generated@@269 $generated@@308))
)))
(assert (forall (($generated@@313 T@U) ) (! (let (($generated@@314 ($generated@@273 (type $generated@@313))))
(= (type ($generated@@312 $generated@@313)) ($generated@@76 $generated@@314 $generated@@4)))
 :pattern ( ($generated@@312 $generated@@313))
)))
(assert (forall (($generated@@315 T@U) ) (! (let (($generated@@316 ($generated@@273 (type $generated@@315))))
(let (($generated@@317 ($generated@@272 (type $generated@@315))))
 (=> (= (type $generated@@315) ($generated@@271 $generated@@317 $generated@@316)) (or (= $generated@@315 ($generated@@270 $generated@@317 $generated@@316)) (exists (($generated@@318 T@U) ) (!  (and (= (type $generated@@318) $generated@@316) ($generated@@0 ($generated@@81 ($generated@@312 $generated@@315) $generated@@318)))
 :no-pattern (type $generated@@318)
 :no-pattern ($generated $generated@@318)
 :no-pattern ($generated@@0 $generated@@318)
))))))
 :pattern ( ($generated@@312 $generated@@315))
)))
(assert (forall (($generated@@319 T@U) ) (! (let (($generated@@320 ($generated@@291 (type $generated@@319))))
(let (($generated@@321 ($generated@@290 (type $generated@@319))))
 (=> (= (type $generated@@319) ($generated@@289 $generated@@321 $generated@@320)) (or (= $generated@@319 ($generated@@288 $generated@@321 $generated@@320)) (exists (($generated@@322 T@U) ) (!  (and (= (type $generated@@322) $generated@@321) ($generated@@0 ($generated@@81 ($generated@@287 $generated@@319) $generated@@322)))
 :no-pattern (type $generated@@322)
 :no-pattern ($generated $generated@@322)
 :no-pattern ($generated@@0 $generated@@322)
))))))
 :pattern ( ($generated@@287 $generated@@319))
)))
(assert (forall (($generated@@324 T@U) ) (! (let (($generated@@325 ($generated@@291 (type $generated@@324))))
(= (type ($generated@@323 $generated@@324)) ($generated@@76 $generated@@325 $generated@@4)))
 :pattern ( ($generated@@323 $generated@@324))
)))
(assert (forall (($generated@@326 T@U) ) (! (let (($generated@@327 ($generated@@291 (type $generated@@326))))
(let (($generated@@328 ($generated@@290 (type $generated@@326))))
 (=> (= (type $generated@@326) ($generated@@289 $generated@@328 $generated@@327)) (or (= $generated@@326 ($generated@@288 $generated@@328 $generated@@327)) (exists (($generated@@329 T@U) ) (!  (and (= (type $generated@@329) $generated@@327) ($generated@@0 ($generated@@81 ($generated@@323 $generated@@326) $generated@@329)))
 :no-pattern (type $generated@@329)
 :no-pattern ($generated $generated@@329)
 :no-pattern ($generated@@0 $generated@@329)
))))))
 :pattern ( ($generated@@323 $generated@@326))
)))
(assert (forall (($generated@@330 T@U) ($generated@@331 T@U) ) (!  (=> (and (= (type $generated@@330) ($generated@@76 $generated@@145 $generated@@2)) (= (type $generated@@331) $generated@@64)) (= ($generated@@132 $generated@@330 ($generated@@150 $generated@@331)) (forall (($generated@@332 T@U) ) (!  (=> (and (= (type $generated@@332) $generated@@145) (< 0 ($generated ($generated@@81 $generated@@330 $generated@@332)))) ($generated@@212 $generated@@332 $generated@@331))
 :pattern ( ($generated@@81 $generated@@330 $generated@@332))
))))
 :pattern ( ($generated@@132 $generated@@330 ($generated@@150 $generated@@331)))
)))
(assert (forall (($generated@@333 T@U) ($generated@@334 T@U) ($generated@@335 T@U) ) (!  (=> (and (and (= (type $generated@@333) ($generated@@76 $generated@@145 $generated@@4)) (= (type $generated@@334) $generated@@64)) (= (type $generated@@335) ($generated@@76 $generated@@77 $generated@@78))) (= ($generated@@74 $generated@@333 ($generated@@221 $generated@@334) $generated@@335) (forall (($generated@@336 T@U) ) (!  (=> (and (= (type $generated@@336) $generated@@145) ($generated@@0 ($generated@@81 $generated@@333 $generated@@336))) ($generated@@238 $generated@@336 $generated@@334 $generated@@335))
 :pattern ( ($generated@@81 $generated@@333 $generated@@336))
))))
 :pattern ( ($generated@@74 $generated@@333 ($generated@@221 $generated@@334) $generated@@335))
)))
(assert (forall (($generated@@337 T@U) ($generated@@338 T@U) ($generated@@339 T@U) ) (!  (=> (and (and (= (type $generated@@337) ($generated@@76 $generated@@145 $generated@@4)) (= (type $generated@@338) $generated@@64)) (= (type $generated@@339) ($generated@@76 $generated@@77 $generated@@78))) (= ($generated@@74 $generated@@337 ($generated@@226 $generated@@338) $generated@@339) (forall (($generated@@340 T@U) ) (!  (=> (and (= (type $generated@@340) $generated@@145) ($generated@@0 ($generated@@81 $generated@@337 $generated@@340))) ($generated@@238 $generated@@340 $generated@@338 $generated@@339))
 :pattern ( ($generated@@81 $generated@@337 $generated@@340))
))))
 :pattern ( ($generated@@74 $generated@@337 ($generated@@226 $generated@@338) $generated@@339))
)))
(assert (forall (($generated@@341 T@U) ) (! (let (($generated@@342 (type $generated@@341)))
(= ($generated ($generated@@81 ($generated@@264 $generated@@342) $generated@@341)) 0))
 :pattern ( (let (($generated@@342 (type $generated@@341)))
($generated@@81 ($generated@@264 $generated@@342) $generated@@341)))
)))
(assert  (and (and (forall (($generated@@346 T@U) ) (! (= (type ($generated@@343 $generated@@346)) ($generated@@76 $generated@@145 $generated@@4))
 :pattern ( ($generated@@343 $generated@@346))
)) (forall (($generated@@347 T@T) ($generated@@348 T@U) ) (! (= (type ($generated@@344 $generated@@347 $generated@@348)) $generated@@347)
 :pattern ( ($generated@@344 $generated@@347 $generated@@348))
))) (forall (($generated@@349 T@U) ) (! (let (($generated@@350 ($generated@@273 (type $generated@@349))))
(let (($generated@@351 ($generated@@272 (type $generated@@349))))
(= (type ($generated@@345 $generated@@349)) ($generated@@76 $generated@@351 $generated@@350))))
 :pattern ( ($generated@@345 $generated@@349))
))))
(assert (forall (($generated@@352 T@U) ($generated@@353 T@U) ) (!  (=> (and (= (type $generated@@352) ($generated@@271 $generated@@145 $generated@@145)) (= (type $generated@@353) $generated@@145)) (= ($generated@@0 ($generated@@81 ($generated@@343 $generated@@352) $generated@@353))  (and ($generated@@0 ($generated@@81 ($generated@@269 $generated@@352) ($generated@@143 ($generated@@344 $generated@@136 $generated@@353)))) (= ($generated@@81 ($generated@@345 $generated@@352) ($generated@@143 ($generated@@344 $generated@@136 $generated@@353))) ($generated@@144 ($generated@@344 $generated@@136 $generated@@353))))))
 :pattern ( ($generated@@81 ($generated@@343 $generated@@352) $generated@@353))
)))
(assert  (and (forall (($generated@@356 T@U) ) (! (= (type ($generated@@354 $generated@@356)) ($generated@@76 $generated@@145 $generated@@4))
 :pattern ( ($generated@@354 $generated@@356))
)) (forall (($generated@@357 T@U) ) (! (let (($generated@@358 ($generated@@291 (type $generated@@357))))
(let (($generated@@359 ($generated@@290 (type $generated@@357))))
(= (type ($generated@@355 $generated@@357)) ($generated@@76 $generated@@359 $generated@@358))))
 :pattern ( ($generated@@355 $generated@@357))
))))
(assert (forall (($generated@@360 T@U) ($generated@@361 T@U) ) (!  (=> (and (= (type $generated@@360) ($generated@@289 $generated@@145 $generated@@145)) (= (type $generated@@361) $generated@@145)) (= ($generated@@0 ($generated@@81 ($generated@@354 $generated@@360) $generated@@361))  (and ($generated@@0 ($generated@@81 ($generated@@287 $generated@@360) ($generated@@143 ($generated@@344 $generated@@136 $generated@@361)))) (= ($generated@@81 ($generated@@355 $generated@@360) ($generated@@143 ($generated@@344 $generated@@136 $generated@@361))) ($generated@@144 ($generated@@344 $generated@@136 $generated@@361))))))
 :pattern ( ($generated@@81 ($generated@@354 $generated@@360) $generated@@361))
)))
(assert (forall (($generated@@362 T@U) ($generated@@363 T@U) ) (! (let (($generated@@364 (type $generated@@363)))
(let (($generated@@365 ($generated@@272 (type $generated@@362))))
 (=> (= (type $generated@@362) ($generated@@271 $generated@@365 $generated@@364)) (= ($generated@@0 ($generated@@81 ($generated@@312 $generated@@362) $generated@@363)) (exists (($generated@@366 T@U) ) (!  (and (= (type $generated@@366) $generated@@365) (and ($generated@@0 ($generated@@81 ($generated@@269 $generated@@362) $generated@@366)) (= $generated@@363 ($generated@@81 ($generated@@345 $generated@@362) $generated@@366))))
 :pattern ( ($generated@@81 ($generated@@269 $generated@@362) $generated@@366))
 :pattern ( ($generated@@81 ($generated@@345 $generated@@362) $generated@@366))
))))))
 :pattern ( ($generated@@81 ($generated@@312 $generated@@362) $generated@@363))
)))
(assert (forall (($generated@@367 T@U) ($generated@@368 T@U) ) (! (let (($generated@@369 (type $generated@@368)))
(let (($generated@@370 ($generated@@290 (type $generated@@367))))
 (=> (= (type $generated@@367) ($generated@@289 $generated@@370 $generated@@369)) (= ($generated@@0 ($generated@@81 ($generated@@323 $generated@@367) $generated@@368)) (exists (($generated@@371 T@U) ) (!  (and (= (type $generated@@371) $generated@@370) (and ($generated@@0 ($generated@@81 ($generated@@287 $generated@@367) $generated@@371)) (= $generated@@368 ($generated@@81 ($generated@@355 $generated@@367) $generated@@371))))
 :pattern ( ($generated@@81 ($generated@@287 $generated@@367) $generated@@371))
 :pattern ( ($generated@@81 ($generated@@355 $generated@@367) $generated@@371))
))))))
 :pattern ( ($generated@@81 ($generated@@323 $generated@@367) $generated@@368))
)))
(assert (forall (($generated@@373 T@U) ($generated@@374 T@U) ) (! (= (type ($generated@@372 $generated@@373 $generated@@374)) $generated@@64)
 :pattern ( ($generated@@372 $generated@@373 $generated@@374))
)))
(assert (forall (($generated@@375 T@U) ($generated@@376 T@U) ($generated@@377 T@U) ($generated@@378 T@U) ) (!  (=> (and (and (and (= (type $generated@@375) ($generated@@271 $generated@@145 $generated@@145)) (= (type $generated@@376) $generated@@64)) (= (type $generated@@377) $generated@@64)) (= (type $generated@@378) ($generated@@76 $generated@@77 $generated@@78))) (= ($generated@@74 $generated@@375 ($generated@@372 $generated@@376 $generated@@377) $generated@@378) (forall (($generated@@379 T@U) ) (!  (=> (and (= (type $generated@@379) $generated@@145) ($generated@@0 ($generated@@81 ($generated@@269 $generated@@375) $generated@@379))) (and ($generated@@238 ($generated@@81 ($generated@@345 $generated@@375) $generated@@379) $generated@@377 $generated@@378) ($generated@@238 $generated@@379 $generated@@376 $generated@@378)))
 :pattern ( ($generated@@81 ($generated@@345 $generated@@375) $generated@@379))
 :pattern ( ($generated@@81 ($generated@@269 $generated@@375) $generated@@379))
))))
 :pattern ( ($generated@@74 $generated@@375 ($generated@@372 $generated@@376 $generated@@377) $generated@@378))
)))
(assert (forall (($generated@@381 T@U) ($generated@@382 T@U) ) (! (= (type ($generated@@380 $generated@@381 $generated@@382)) $generated@@64)
 :pattern ( ($generated@@380 $generated@@381 $generated@@382))
)))
(assert (forall (($generated@@383 T@U) ($generated@@384 T@U) ($generated@@385 T@U) ($generated@@386 T@U) ) (!  (=> (and (and (and (= (type $generated@@383) ($generated@@289 $generated@@145 $generated@@145)) (= (type $generated@@384) $generated@@64)) (= (type $generated@@385) $generated@@64)) (= (type $generated@@386) ($generated@@76 $generated@@77 $generated@@78))) (= ($generated@@74 $generated@@383 ($generated@@380 $generated@@384 $generated@@385) $generated@@386) (forall (($generated@@387 T@U) ) (!  (=> (and (= (type $generated@@387) $generated@@145) ($generated@@0 ($generated@@81 ($generated@@287 $generated@@383) $generated@@387))) (and ($generated@@238 ($generated@@81 ($generated@@355 $generated@@383) $generated@@387) $generated@@385 $generated@@386) ($generated@@238 $generated@@387 $generated@@384 $generated@@386)))
 :pattern ( ($generated@@81 ($generated@@355 $generated@@383) $generated@@387))
 :pattern ( ($generated@@81 ($generated@@287 $generated@@383) $generated@@387))
))))
 :pattern ( ($generated@@74 $generated@@383 ($generated@@380 $generated@@384 $generated@@385) $generated@@386))
)))
(assert (forall (($generated@@389 T@T) ) (! (= (type ($generated@@388 $generated@@389)) ($generated@@76 $generated@@389 $generated@@4))
 :pattern ( ($generated@@388 $generated@@389))
)))
(assert (forall (($generated@@390 T@U) ) (! (let (($generated@@391 ($generated@@291 (type $generated@@390))))
(let (($generated@@392 ($generated@@290 (type $generated@@390))))
 (=> (= (type $generated@@390) ($generated@@289 $generated@@392 $generated@@391)) (= (= $generated@@390 ($generated@@288 $generated@@392 $generated@@391)) (= ($generated@@287 $generated@@390) ($generated@@388 $generated@@392))))))
 :pattern ( ($generated@@287 $generated@@390))
)))
(assert (forall (($generated@@393 T@U) ) (! (let (($generated@@394 ($generated@@291 (type $generated@@393))))
(let (($generated@@395 ($generated@@290 (type $generated@@393))))
 (=> (= (type $generated@@393) ($generated@@289 $generated@@395 $generated@@394)) (= (= $generated@@393 ($generated@@288 $generated@@395 $generated@@394)) (= ($generated@@323 $generated@@393) ($generated@@388 $generated@@394))))))
 :pattern ( ($generated@@323 $generated@@393))
)))
(assert (forall (($generated@@396 T@U) ) (! (let (($generated@@397 ($generated@@291 (type $generated@@396))))
(let (($generated@@398 ($generated@@290 (type $generated@@396))))
 (=> (= (type $generated@@396) ($generated@@289 $generated@@398 $generated@@397)) (= (= $generated@@396 ($generated@@288 $generated@@398 $generated@@397)) (= ($generated@@354 $generated@@396) ($generated@@388 $generated@@145))))))
 :pattern ( ($generated@@354 $generated@@396))
)))
(assert (forall (($generated@@399 T@U) ) (! (let (($generated@@400 ($generated@@273 (type $generated@@399))))
(let (($generated@@401 ($generated@@272 (type $generated@@399))))
 (=> (= (type $generated@@399) ($generated@@271 $generated@@401 $generated@@400)) (or (= $generated@@399 ($generated@@270 $generated@@401 $generated@@400)) (exists (($generated@@402 T@U) ($generated@@403 T@U) ) (!  (and (and (= (type $generated@@402) $generated@@145) (= (type $generated@@403) $generated@@145)) ($generated@@0 ($generated@@81 ($generated@@343 $generated@@399) ($generated@@258 ($generated@@211 $generated@@402 $generated@@403)))))
 :no-pattern (type $generated@@402)
 :no-pattern (type $generated@@403)
 :no-pattern ($generated $generated@@402)
 :no-pattern ($generated@@0 $generated@@402)
 :no-pattern ($generated $generated@@403)
 :no-pattern ($generated@@0 $generated@@403)
))))))
 :pattern ( ($generated@@343 $generated@@399))
)))
(assert (forall (($generated@@404 T@U) ) (! (let (($generated@@405 ($generated@@291 (type $generated@@404))))
(let (($generated@@406 ($generated@@290 (type $generated@@404))))
 (=> (= (type $generated@@404) ($generated@@289 $generated@@406 $generated@@405)) (or (= $generated@@404 ($generated@@288 $generated@@406 $generated@@405)) (exists (($generated@@407 T@U) ($generated@@408 T@U) ) (!  (and (and (= (type $generated@@407) $generated@@145) (= (type $generated@@408) $generated@@145)) ($generated@@0 ($generated@@81 ($generated@@354 $generated@@404) ($generated@@258 ($generated@@211 $generated@@407 $generated@@408)))))
 :no-pattern (type $generated@@407)
 :no-pattern (type $generated@@408)
 :no-pattern ($generated $generated@@407)
 :no-pattern ($generated@@0 $generated@@407)
 :no-pattern ($generated $generated@@408)
 :no-pattern ($generated@@0 $generated@@408)
))))))
 :pattern ( ($generated@@354 $generated@@404))
)))
(assert (forall (($generated@@409 T@U) ) (!  (=> (and (= (type $generated@@409) $generated@@145) ($generated@@212 $generated@@409 $generated@@46)) (and (= ($generated@@258 ($generated@@344 $generated@@2 $generated@@409)) $generated@@409) ($generated@@132 ($generated@@344 $generated@@2 $generated@@409) $generated@@46)))
 :pattern ( ($generated@@212 $generated@@409 $generated@@46))
)))
(assert (forall (($generated@@410 T@U) ) (!  (=> (and (= (type $generated@@410) $generated@@145) ($generated@@212 $generated@@410 $generated@@47)) (and (= ($generated@@258 ($generated@@344 $generated@@3 $generated@@410)) $generated@@410) ($generated@@132 ($generated@@344 $generated@@3 $generated@@410) $generated@@47)))
 :pattern ( ($generated@@212 $generated@@410 $generated@@47))
)))
(assert (forall (($generated@@411 T@U) ) (!  (=> (and (= (type $generated@@411) $generated@@145) ($generated@@212 $generated@@411 $generated@@44)) (and (= ($generated@@258 ($generated@@344 $generated@@4 $generated@@411)) $generated@@411) ($generated@@132 ($generated@@344 $generated@@4 $generated@@411) $generated@@44)))
 :pattern ( ($generated@@212 $generated@@411 $generated@@44))
)))
(assert (= ($generated@@1 $generated@@412) 20))
(assert (forall (($generated@@413 T@U) ) (!  (=> (and (= (type $generated@@413) $generated@@145) ($generated@@212 $generated@@413 $generated@@45)) (and (= ($generated@@258 ($generated@@344 $generated@@412 $generated@@413)) $generated@@413) ($generated@@132 ($generated@@344 $generated@@412 $generated@@413) $generated@@45)))
 :pattern ( ($generated@@212 $generated@@413 $generated@@45))
)))
(assert (forall (($generated@@414 T@U) ($generated@@415 T@U) ) (!  (=> (= (type $generated@@415) $generated@@64) (= ($generated@@212 ($generated@@258 $generated@@414) $generated@@415) ($generated@@132 $generated@@414 $generated@@415)))
 :pattern ( ($generated@@212 ($generated@@258 $generated@@414) $generated@@415))
)))
(assert (forall (($generated@@416 T@U) ) (! (let (($generated@@417 ($generated@@79 (type $generated@@416))))
 (=> (= (type $generated@@416) ($generated@@76 $generated@@417 $generated@@2)) (<= 0 ($generated@@263 $generated@@416))))
 :pattern ( ($generated@@263 $generated@@416))
)))
(assert (forall (($generated@@418 T@U) ) (! (let (($generated@@419 ($generated@@253 (type $generated@@418))))
 (=> (= (type $generated@@418) ($generated@@252 $generated@@419)) (<= 0 ($generated@@251 $generated@@418))))
 :pattern ( ($generated@@251 $generated@@418))
)))
(assert (forall (($generated@@421 T@U) ) (! (= (type ($generated@@420 $generated@@421)) $generated@@64)
 :pattern ( ($generated@@420 $generated@@421))
)))
(assert (forall (($generated@@422 T@U) ($generated@@423 T@U) ) (!  (=> (and (= (type $generated@@422) $generated@@64) (= (type $generated@@423) $generated@@64)) (= ($generated@@420 ($generated@@372 $generated@@422 $generated@@423)) $generated@@422))
 :pattern ( ($generated@@372 $generated@@422 $generated@@423))
)))
(assert (forall (($generated@@425 T@U) ) (! (= (type ($generated@@424 $generated@@425)) $generated@@64)
 :pattern ( ($generated@@424 $generated@@425))
)))
(assert (forall (($generated@@426 T@U) ($generated@@427 T@U) ) (!  (=> (and (= (type $generated@@426) $generated@@64) (= (type $generated@@427) $generated@@64)) (= ($generated@@424 ($generated@@372 $generated@@426 $generated@@427)) $generated@@427))
 :pattern ( ($generated@@372 $generated@@426 $generated@@427))
)))
(assert (forall (($generated@@428 T@U) ($generated@@429 T@U) ) (!  (=> (and (= (type $generated@@428) $generated@@64) (= (type $generated@@429) $generated@@64)) (= ($generated@@72 ($generated@@372 $generated@@428 $generated@@429)) $generated@@58))
 :pattern ( ($generated@@372 $generated@@428 $generated@@429))
)))
(assert (forall (($generated@@431 T@U) ) (! (= (type ($generated@@430 $generated@@431)) $generated@@64)
 :pattern ( ($generated@@430 $generated@@431))
)))
(assert (forall (($generated@@432 T@U) ($generated@@433 T@U) ) (!  (=> (and (= (type $generated@@432) $generated@@64) (= (type $generated@@433) $generated@@64)) (= ($generated@@430 ($generated@@380 $generated@@432 $generated@@433)) $generated@@432))
 :pattern ( ($generated@@380 $generated@@432 $generated@@433))
)))
(assert (forall (($generated@@435 T@U) ) (! (= (type ($generated@@434 $generated@@435)) $generated@@64)
 :pattern ( ($generated@@434 $generated@@435))
)))
(assert (forall (($generated@@436 T@U) ($generated@@437 T@U) ) (!  (=> (and (= (type $generated@@436) $generated@@64) (= (type $generated@@437) $generated@@64)) (= ($generated@@434 ($generated@@380 $generated@@436 $generated@@437)) $generated@@437))
 :pattern ( ($generated@@380 $generated@@436 $generated@@437))
)))
(assert (forall (($generated@@438 T@U) ($generated@@439 T@U) ) (!  (=> (and (= (type $generated@@438) $generated@@64) (= (type $generated@@439) $generated@@64)) (= ($generated@@72 ($generated@@380 $generated@@438 $generated@@439)) $generated@@59))
 :pattern ( ($generated@@380 $generated@@438 $generated@@439))
)))
(assert (forall (($generated@@440 T@U) ($generated@@441 T@U) ) (!  (=> (and (= (type $generated@@440) $generated@@145) (= (type $generated@@441) $generated@@145)) (= ($generated@@244 ($generated@@211 $generated@@440 $generated@@441)) $generated@@61))
 :pattern ( ($generated@@211 $generated@@440 $generated@@441))
)))
(assert (forall (($generated@@443 T@U) ) (! (= (type ($generated@@442 $generated@@443)) $generated@@64)
 :pattern ( ($generated@@442 $generated@@443))
)))
(assert (forall (($generated@@444 T@U) ($generated@@445 T@U) ) (!  (=> (and (= (type $generated@@444) $generated@@64) (= (type $generated@@445) $generated@@64)) (= ($generated@@442 ($generated@@135 $generated@@444 $generated@@445)) $generated@@444))
 :pattern ( ($generated@@135 $generated@@444 $generated@@445))
)))
(assert (forall (($generated@@447 T@U) ) (! (= (type ($generated@@446 $generated@@447)) $generated@@64)
 :pattern ( ($generated@@446 $generated@@447))
)))
(assert (forall (($generated@@448 T@U) ($generated@@449 T@U) ) (!  (=> (and (= (type $generated@@448) $generated@@64) (= (type $generated@@449) $generated@@64)) (= ($generated@@446 ($generated@@135 $generated@@448 $generated@@449)) $generated@@449))
 :pattern ( ($generated@@135 $generated@@448 $generated@@449))
)))
(assert (forall (($generated@@450 T@U) ($generated@@451 T@U) ) (!  (=> (and (= (type $generated@@450) $generated@@145) (= (type $generated@@451) $generated@@145)) (= ($generated@@143 ($generated@@211 $generated@@450 $generated@@451)) $generated@@450))
 :pattern ( ($generated@@211 $generated@@450 $generated@@451))
)))
(assert (forall (($generated@@452 T@U) ($generated@@453 T@U) ) (!  (=> (and (= (type $generated@@452) $generated@@145) (= (type $generated@@453) $generated@@145)) (= ($generated@@144 ($generated@@211 $generated@@452 $generated@@453)) $generated@@453))
 :pattern ( ($generated@@211 $generated@@452 $generated@@453))
)))
(assert  (and (forall (($generated@@456 T@U) ) (! (= (type ($generated@@454 $generated@@456)) $generated@@64)
 :pattern ( ($generated@@454 $generated@@456))
)) (forall (($generated@@457 T@U) ($generated@@458 Int) ) (! (let (($generated@@459 ($generated@@253 (type $generated@@457))))
(= (type ($generated@@455 $generated@@457 $generated@@458)) $generated@@459))
 :pattern ( ($generated@@455 $generated@@457 $generated@@458))
))))
(assert (forall (($generated@@460 T@U) ($generated@@461 T@U) ($generated@@462 T@U) ) (!  (=> (and (and (= (type $generated@@460) ($generated@@252 $generated@@145)) (= (type $generated@@461) $generated@@64)) (= (type $generated@@462) ($generated@@76 $generated@@77 $generated@@78))) (= ($generated@@74 $generated@@460 ($generated@@454 $generated@@461) $generated@@462) (forall (($generated@@463 Int) ) (!  (=> (and (<= 0 $generated@@463) (< $generated@@463 ($generated@@251 $generated@@460))) ($generated@@238 ($generated@@455 $generated@@460 $generated@@463) $generated@@461 $generated@@462))
 :pattern ( ($generated@@455 $generated@@460 $generated@@463))
))))
 :pattern ( ($generated@@74 $generated@@460 ($generated@@454 $generated@@461) $generated@@462))
)))
(assert (forall (($generated@@465 Int) ) (! (= ($generated@@464 ($generated@@75 $generated@@465)) $generated@@465)
 :pattern ( ($generated@@75 $generated@@465))
)))
(assert (forall (($generated@@467 T@U) ) (! (= (type ($generated@@466 $generated@@467)) $generated@@64)
 :pattern ( ($generated@@466 $generated@@467))
)))
(assert (forall (($generated@@468 T@U) ) (!  (=> (= (type $generated@@468) $generated@@64) (= ($generated@@466 ($generated@@221 $generated@@468)) $generated@@468))
 :pattern ( ($generated@@221 $generated@@468))
)))
(assert (forall (($generated@@469 T@U) ) (!  (=> (= (type $generated@@469) $generated@@64) (= ($generated@@72 ($generated@@221 $generated@@469)) $generated@@54))
 :pattern ( ($generated@@221 $generated@@469))
)))
(assert (forall (($generated@@471 T@U) ) (! (= (type ($generated@@470 $generated@@471)) $generated@@64)
 :pattern ( ($generated@@470 $generated@@471))
)))
(assert (forall (($generated@@472 T@U) ) (!  (=> (= (type $generated@@472) $generated@@64) (= ($generated@@470 ($generated@@226 $generated@@472)) $generated@@472))
 :pattern ( ($generated@@226 $generated@@472))
)))
(assert (forall (($generated@@473 T@U) ) (!  (=> (= (type $generated@@473) $generated@@64) (= ($generated@@72 ($generated@@226 $generated@@473)) $generated@@55))
 :pattern ( ($generated@@226 $generated@@473))
)))
(assert (forall (($generated@@475 T@U) ) (! (= (type ($generated@@474 $generated@@475)) $generated@@64)
 :pattern ( ($generated@@474 $generated@@475))
)))
(assert (forall (($generated@@476 T@U) ) (!  (=> (= (type $generated@@476) $generated@@64) (= ($generated@@474 ($generated@@150 $generated@@476)) $generated@@476))
 :pattern ( ($generated@@150 $generated@@476))
)))
(assert (forall (($generated@@477 T@U) ) (!  (=> (= (type $generated@@477) $generated@@64) (= ($generated@@72 ($generated@@150 $generated@@477)) $generated@@56))
 :pattern ( ($generated@@150 $generated@@477))
)))
(assert (forall (($generated@@479 T@U) ) (! (= (type ($generated@@478 $generated@@479)) $generated@@64)
 :pattern ( ($generated@@478 $generated@@479))
)))
(assert (forall (($generated@@480 T@U) ) (!  (=> (= (type $generated@@480) $generated@@64) (= ($generated@@478 ($generated@@454 $generated@@480)) $generated@@480))
 :pattern ( ($generated@@454 $generated@@480))
)))
(assert (forall (($generated@@481 T@U) ) (!  (=> (= (type $generated@@481) $generated@@64) (= ($generated@@72 ($generated@@454 $generated@@481)) $generated@@57))
 :pattern ( ($generated@@454 $generated@@481))
)))
(assert (forall (($generated@@482 T@U) ) (! (let (($generated@@483 (type $generated@@482)))
(= ($generated@@344 $generated@@483 ($generated@@258 $generated@@482)) $generated@@482))
 :pattern ( ($generated@@258 $generated@@482))
)))
(assert (forall (($generated@@484 T@U) ($generated@@485 T@U) ($generated@@486 T@U) ) (!  (=> (and (and (= (type $generated@@484) ($generated@@271 $generated@@145 $generated@@145)) (= (type $generated@@485) $generated@@64)) (= (type $generated@@486) $generated@@64)) (= ($generated@@132 $generated@@484 ($generated@@372 $generated@@485 $generated@@486)) (forall (($generated@@487 T@U) ) (!  (=> (and (= (type $generated@@487) $generated@@145) ($generated@@0 ($generated@@81 ($generated@@269 $generated@@484) $generated@@487))) (and ($generated@@212 ($generated@@81 ($generated@@345 $generated@@484) $generated@@487) $generated@@486) ($generated@@212 $generated@@487 $generated@@485)))
 :pattern ( ($generated@@81 ($generated@@345 $generated@@484) $generated@@487))
 :pattern ( ($generated@@81 ($generated@@269 $generated@@484) $generated@@487))
))))
 :pattern ( ($generated@@132 $generated@@484 ($generated@@372 $generated@@485 $generated@@486)))
)))
(assert (forall (($generated@@488 T@U) ($generated@@489 T@U) ($generated@@490 T@U) ) (!  (=> (and (and (= (type $generated@@488) ($generated@@289 $generated@@145 $generated@@145)) (= (type $generated@@489) $generated@@64)) (= (type $generated@@490) $generated@@64)) (= ($generated@@132 $generated@@488 ($generated@@380 $generated@@489 $generated@@490)) (forall (($generated@@491 T@U) ) (!  (=> (and (= (type $generated@@491) $generated@@145) ($generated@@0 ($generated@@81 ($generated@@287 $generated@@488) $generated@@491))) (and ($generated@@212 ($generated@@81 ($generated@@355 $generated@@488) $generated@@491) $generated@@490) ($generated@@212 $generated@@491 $generated@@489)))
 :pattern ( ($generated@@81 ($generated@@355 $generated@@488) $generated@@491))
 :pattern ( ($generated@@81 ($generated@@287 $generated@@488) $generated@@491))
))))
 :pattern ( ($generated@@132 $generated@@488 ($generated@@380 $generated@@489 $generated@@490)))
)))
(assert (forall (($generated@@494 T@U) ($generated@@495 T@U) ) (!  (=> (and (= (type $generated@@494) $generated@@145) (= (type $generated@@495) $generated@@145)) (< ($generated@@492 $generated@@494) ($generated@@493 ($generated@@211 $generated@@494 $generated@@495))))
 :pattern ( ($generated@@211 $generated@@494 $generated@@495))
)))
(assert (forall (($generated@@496 T@U) ($generated@@497 T@U) ) (!  (=> (and (= (type $generated@@496) $generated@@145) (= (type $generated@@497) $generated@@145)) (< ($generated@@492 $generated@@497) ($generated@@493 ($generated@@211 $generated@@496 $generated@@497))))
 :pattern ( ($generated@@211 $generated@@496 $generated@@497))
)))
(assert (forall (($generated@@498 T@U) ($generated@@499 T@U) ($generated@@500 T@U) ) (!  (=> (and (and (and (= (type $generated@@498) $generated@@145) (= (type $generated@@499) $generated@@64)) (= (type $generated@@500) $generated@@64)) ($generated@@212 $generated@@498 ($generated@@372 $generated@@499 $generated@@500))) (and (= ($generated@@258 ($generated@@344 ($generated@@271 $generated@@145 $generated@@145) $generated@@498)) $generated@@498) ($generated@@132 ($generated@@344 ($generated@@271 $generated@@145 $generated@@145) $generated@@498) ($generated@@372 $generated@@499 $generated@@500))))
 :pattern ( ($generated@@212 $generated@@498 ($generated@@372 $generated@@499 $generated@@500)))
)))
(assert (forall (($generated@@501 T@U) ($generated@@502 T@U) ($generated@@503 T@U) ) (!  (=> (and (and (and (= (type $generated@@501) $generated@@145) (= (type $generated@@502) $generated@@64)) (= (type $generated@@503) $generated@@64)) ($generated@@212 $generated@@501 ($generated@@380 $generated@@502 $generated@@503))) (and (= ($generated@@258 ($generated@@344 ($generated@@289 $generated@@145 $generated@@145) $generated@@501)) $generated@@501) ($generated@@132 ($generated@@344 ($generated@@289 $generated@@145 $generated@@145) $generated@@501) ($generated@@380 $generated@@502 $generated@@503))))
 :pattern ( ($generated@@212 $generated@@501 ($generated@@380 $generated@@502 $generated@@503)))
)))
(assert (forall (($generated@@504 T@U) ($generated@@505 T@U) ($generated@@506 T@U) ) (!  (=> (and (and (and (= (type $generated@@504) $generated@@64) (= (type $generated@@505) $generated@@64)) (= (type $generated@@506) $generated@@145)) ($generated@@212 $generated@@506 ($generated@@135 $generated@@504 $generated@@505))) (and (= ($generated@@258 ($generated@@344 $generated@@136 $generated@@506)) $generated@@506) ($generated@@132 ($generated@@344 $generated@@136 $generated@@506) ($generated@@135 $generated@@504 $generated@@505))))
 :pattern ( ($generated@@212 $generated@@506 ($generated@@135 $generated@@504 $generated@@505)))
)))
(assert (forall (($generated@@507 T@U) ) (! (let (($generated@@508 (type $generated@@507)))
 (not ($generated@@0 ($generated@@81 ($generated@@388 $generated@@508) $generated@@507))))
 :pattern ( (let (($generated@@508 (type $generated@@507)))
($generated@@81 ($generated@@388 $generated@@508) $generated@@507)))
)))
(assert (forall (($generated@@510 T@U) ) (! (= (type ($generated@@509 $generated@@510)) $generated@@69)
 :pattern ( ($generated@@509 $generated@@510))
)))
(assert (forall (($generated@@511 T@U) ($generated@@512 T@U) ) (!  (=> (and (= (type $generated@@511) $generated@@64) (= (type $generated@@512) $generated@@64)) (and (= ($generated@@72 ($generated@@135 $generated@@511 $generated@@512)) $generated@@62) (= ($generated@@509 ($generated@@135 $generated@@511 $generated@@512)) $generated@@63)))
 :pattern ( ($generated@@135 $generated@@511 $generated@@512))
)))
(assert (forall (($generated@@513 T@U) ) (!  (=> (= (type $generated@@513) $generated@@136) (= ($generated@@492 ($generated@@258 $generated@@513)) ($generated@@493 $generated@@513)))
 :pattern ( ($generated@@492 ($generated@@258 $generated@@513)))
)))
(assert (forall (($generated@@514 T@U) ) (!  (=> (and (= (type $generated@@514) $generated@@145) ($generated@@212 $generated@@514 ($generated@@75 0))) (and (= ($generated@@258 ($generated@@344 $generated@@2 $generated@@514)) $generated@@514) ($generated@@132 ($generated@@344 ($generated@@76 $generated@@145 $generated@@4) $generated@@514) ($generated@@75 0))))
 :pattern ( ($generated@@212 $generated@@514 ($generated@@75 0)))
)))
(assert (forall (($generated@@515 T@U) ($generated@@516 T@U) ) (!  (=> (and (and (= (type $generated@@515) $generated@@145) (= (type $generated@@516) $generated@@64)) ($generated@@212 $generated@@515 ($generated@@221 $generated@@516))) (and (= ($generated@@258 ($generated@@344 ($generated@@76 $generated@@145 $generated@@4) $generated@@515)) $generated@@515) ($generated@@132 ($generated@@344 ($generated@@76 $generated@@145 $generated@@4) $generated@@515) ($generated@@221 $generated@@516))))
 :pattern ( ($generated@@212 $generated@@515 ($generated@@221 $generated@@516)))
)))
(assert (forall (($generated@@517 T@U) ($generated@@518 T@U) ) (!  (=> (and (and (= (type $generated@@517) $generated@@145) (= (type $generated@@518) $generated@@64)) ($generated@@212 $generated@@517 ($generated@@226 $generated@@518))) (and (= ($generated@@258 ($generated@@344 ($generated@@76 $generated@@145 $generated@@4) $generated@@517)) $generated@@517) ($generated@@132 ($generated@@344 ($generated@@76 $generated@@145 $generated@@4) $generated@@517) ($generated@@226 $generated@@518))))
 :pattern ( ($generated@@212 $generated@@517 ($generated@@226 $generated@@518)))
)))
(assert (forall (($generated@@519 T@U) ($generated@@520 T@U) ) (!  (=> (and (and (= (type $generated@@519) $generated@@145) (= (type $generated@@520) $generated@@64)) ($generated@@212 $generated@@519 ($generated@@150 $generated@@520))) (and (= ($generated@@258 ($generated@@344 ($generated@@76 $generated@@145 $generated@@2) $generated@@519)) $generated@@519) ($generated@@132 ($generated@@344 ($generated@@76 $generated@@145 $generated@@2) $generated@@519) ($generated@@150 $generated@@520))))
 :pattern ( ($generated@@212 $generated@@519 ($generated@@150 $generated@@520)))
)))
(assert (forall (($generated@@521 T@U) ($generated@@522 T@U) ) (!  (=> (and (and (= (type $generated@@521) $generated@@145) (= (type $generated@@522) $generated@@64)) ($generated@@212 $generated@@521 ($generated@@454 $generated@@522))) (and (= ($generated@@258 ($generated@@344 ($generated@@252 $generated@@145) $generated@@521)) $generated@@521) ($generated@@132 ($generated@@344 ($generated@@252 $generated@@145) $generated@@521) ($generated@@454 $generated@@522))))
 :pattern ( ($generated@@212 $generated@@521 ($generated@@454 $generated@@522)))
)))
(assert (forall (($generated@@523 T@U) ($generated@@524 T@U) ($generated@@525 T@U) ) (!  (=> (and (and (= (type $generated@@523) ($generated@@76 $generated@@145 $generated@@2)) (= (type $generated@@524) $generated@@64)) (= (type $generated@@525) ($generated@@76 $generated@@77 $generated@@78))) (= ($generated@@74 $generated@@523 ($generated@@150 $generated@@524) $generated@@525) (forall (($generated@@526 T@U) ) (!  (=> (and (= (type $generated@@526) $generated@@145) (< 0 ($generated ($generated@@81 $generated@@523 $generated@@526)))) ($generated@@238 $generated@@526 $generated@@524 $generated@@525))
 :pattern ( ($generated@@81 $generated@@523 $generated@@526))
))))
 :pattern ( ($generated@@74 $generated@@523 ($generated@@150 $generated@@524) $generated@@525))
)))
(assert (forall (($generated@@527 T@U) ($generated@@528 T@U) ($generated@@529 T@U) ) (!  (=> (and (and (and (= (type $generated@@527) $generated@@136) (= (type $generated@@528) $generated@@64)) (= (type $generated@@529) ($generated@@76 $generated@@77 $generated@@78))) (and ($generated@@237 $generated@@529) (and ($generated@@134 $generated@@527) (exists (($generated@@530 T@U) ) (!  (and (= (type $generated@@530) $generated@@64) ($generated@@74 $generated@@527 ($generated@@135 $generated@@528 $generated@@530) $generated@@529))
 :pattern ( ($generated@@74 $generated@@527 ($generated@@135 $generated@@528 $generated@@530) $generated@@529))
))))) ($generated@@238 ($generated@@143 $generated@@527) $generated@@528 $generated@@529))
 :pattern ( ($generated@@238 ($generated@@143 $generated@@527) $generated@@528 $generated@@529))
)))
(assert (forall (($generated@@531 T@U) ($generated@@532 T@U) ($generated@@533 T@U) ) (!  (=> (and (and (and (= (type $generated@@531) $generated@@136) (= (type $generated@@532) $generated@@64)) (= (type $generated@@533) ($generated@@76 $generated@@77 $generated@@78))) (and ($generated@@237 $generated@@533) (and ($generated@@134 $generated@@531) (exists (($generated@@534 T@U) ) (!  (and (= (type $generated@@534) $generated@@64) ($generated@@74 $generated@@531 ($generated@@135 $generated@@534 $generated@@532) $generated@@533))
 :pattern ( ($generated@@74 $generated@@531 ($generated@@135 $generated@@534 $generated@@532) $generated@@533))
))))) ($generated@@238 ($generated@@144 $generated@@531) $generated@@532 $generated@@533))
 :pattern ( ($generated@@238 ($generated@@144 $generated@@531) $generated@@532 $generated@@533))
)))
(assert (forall (($generated@@535 T@U) ($generated@@536 T@U) ) (!  (=> (and (= (type $generated@@535) $generated@@145) (= (type $generated@@536) $generated@@145)) (= ($generated@@211 ($generated@@233 $generated@@535) ($generated@@233 $generated@@536)) ($generated@@233 ($generated@@211 $generated@@535 $generated@@536))))
 :pattern ( ($generated@@211 ($generated@@233 $generated@@535) ($generated@@233 $generated@@536)))
)))
(assert (forall (($generated@@537 Int) ) (! (= ($generated@@258 ($generated@@8 ($generated@@231 $generated@@537))) ($generated@@233 ($generated@@258 ($generated@@8 $generated@@537))))
 :pattern ( ($generated@@258 ($generated@@8 ($generated@@231 $generated@@537))))
)))
(assert (forall (($generated@@538 T@U) ) (! (= ($generated@@258 ($generated@@233 $generated@@538)) ($generated@@233 ($generated@@258 $generated@@538)))
 :pattern ( ($generated@@258 ($generated@@233 $generated@@538)))
)))
(assert (forall (($generated@@539 T@U) ) (! (let (($generated@@540 ($generated@@253 (type $generated@@539))))
 (=> (and (= (type $generated@@539) ($generated@@252 $generated@@540)) (= ($generated@@251 $generated@@539) 0)) (= $generated@@539 ($generated@@250 $generated@@540))))
 :pattern ( ($generated@@251 $generated@@539))
)))
(assert (forall (($generated@@541 T@U) ($generated@@542 T@U) ($generated@@543 T@U) ) (! (let (($generated@@544 (type $generated@@542)))
 (=> (and (and (= (type $generated@@541) ($generated@@76 $generated@@544 $generated@@2)) (= (type $generated@@543) $generated@@2)) (<= 0 ($generated $generated@@543))) (= ($generated@@263 ($generated@@82 $generated@@541 $generated@@542 $generated@@543)) (+ (- ($generated@@263 $generated@@541) ($generated ($generated@@81 $generated@@541 $generated@@542))) ($generated $generated@@543)))))
 :pattern ( ($generated@@263 ($generated@@82 $generated@@541 $generated@@542 $generated@@543)))
)))
(assert (forall (($generated@@545 T@U) ($generated@@546 T@U) ) (!  (=> (and (= (type $generated@@545) ($generated@@76 $generated@@77 $generated@@78)) (= (type $generated@@546) $generated@@2)) ($generated@@74 $generated@@546 $generated@@46 $generated@@545))
 :pattern ( ($generated@@74 $generated@@546 $generated@@46 $generated@@545))
)))
(assert (forall (($generated@@547 T@U) ($generated@@548 T@U) ) (!  (=> (and (= (type $generated@@547) ($generated@@76 $generated@@77 $generated@@78)) (= (type $generated@@548) $generated@@3)) ($generated@@74 $generated@@548 $generated@@47 $generated@@547))
 :pattern ( ($generated@@74 $generated@@548 $generated@@47 $generated@@547))
)))
(assert (forall (($generated@@549 T@U) ($generated@@550 T@U) ) (!  (=> (and (= (type $generated@@549) ($generated@@76 $generated@@77 $generated@@78)) (= (type $generated@@550) $generated@@4)) ($generated@@74 $generated@@550 $generated@@44 $generated@@549))
 :pattern ( ($generated@@74 $generated@@550 $generated@@44 $generated@@549))
)))
(assert (forall (($generated@@551 T@U) ($generated@@552 T@U) ) (!  (=> (and (= (type $generated@@551) ($generated@@76 $generated@@77 $generated@@78)) (= (type $generated@@552) $generated@@412)) ($generated@@74 $generated@@552 $generated@@45 $generated@@551))
 :pattern ( ($generated@@74 $generated@@552 $generated@@45 $generated@@551))
)))
(assert (forall (($generated@@553 T@U) ($generated@@554 T@U) ) (!  (=> (and (= (type $generated@@553) ($generated@@76 $generated@@77 $generated@@78)) (= (type $generated@@554) $generated@@145)) ($generated@@74 $generated@@554 $generated@@48 $generated@@553))
 :pattern ( ($generated@@74 $generated@@554 $generated@@48 $generated@@553))
)))
(assert (forall (($generated@@555 T@U) ($generated@@556 T@U) ) (!  (=> (and (= (type $generated@@555) ($generated@@252 $generated@@145)) (= (type $generated@@556) $generated@@64)) (= ($generated@@132 $generated@@555 ($generated@@454 $generated@@556)) (forall (($generated@@557 Int) ) (!  (=> (and (<= 0 $generated@@557) (< $generated@@557 ($generated@@251 $generated@@555))) ($generated@@212 ($generated@@455 $generated@@555 $generated@@557) $generated@@556))
 :pattern ( ($generated@@455 $generated@@555 $generated@@557))
))))
 :pattern ( ($generated@@132 $generated@@555 ($generated@@454 $generated@@556)))
)))
(assert (forall (($generated@@559 T@U) ($generated@@560 Int) ) (!  (=> (= (type $generated@@559) ($generated@@252 $generated@@145)) (=> (and (<= 0 $generated@@560) (< $generated@@560 ($generated@@251 $generated@@559))) (< ($generated@@493 ($generated@@344 $generated@@136 ($generated@@455 $generated@@559 $generated@@560))) ($generated@@558 $generated@@559))))
 :pattern ( ($generated@@493 ($generated@@344 $generated@@136 ($generated@@455 $generated@@559 $generated@@560))))
)))
(assert (forall (($generated@@561 T@U) ($generated@@562 T@U) ($generated@@563 T@U) ) (!  (=> (and (and (and (= (type $generated@@561) ($generated@@271 $generated@@145 $generated@@145)) (= (type $generated@@562) $generated@@64)) (= (type $generated@@563) $generated@@64)) ($generated@@132 $generated@@561 ($generated@@372 $generated@@562 $generated@@563))) (and (and ($generated@@132 ($generated@@269 $generated@@561) ($generated@@221 $generated@@562)) ($generated@@132 ($generated@@312 $generated@@561) ($generated@@221 $generated@@563))) ($generated@@132 ($generated@@343 $generated@@561) ($generated@@221 ($generated@@135 $generated@@562 $generated@@563)))))
 :pattern ( ($generated@@132 $generated@@561 ($generated@@372 $generated@@562 $generated@@563)))
)))
(assert (forall (($generated@@564 T@U) ($generated@@565 T@U) ($generated@@566 T@U) ) (!  (=> (and (and (and (= (type $generated@@564) ($generated@@289 $generated@@145 $generated@@145)) (= (type $generated@@565) $generated@@64)) (= (type $generated@@566) $generated@@64)) ($generated@@132 $generated@@564 ($generated@@380 $generated@@565 $generated@@566))) (and (and ($generated@@132 ($generated@@287 $generated@@564) ($generated@@226 $generated@@565)) ($generated@@132 ($generated@@323 $generated@@564) ($generated@@226 $generated@@566))) ($generated@@132 ($generated@@354 $generated@@564) ($generated@@226 ($generated@@135 $generated@@565 $generated@@566)))))
 :pattern ( ($generated@@132 $generated@@564 ($generated@@380 $generated@@565 $generated@@566)))
)))
(assert (forall (($generated@@567 T@U) ) (!  (=> (= (type $generated@@567) $generated@@2) ($generated@@132 $generated@@567 $generated@@46))
 :pattern ( ($generated@@132 $generated@@567 $generated@@46))
)))
(assert (forall (($generated@@568 T@U) ) (!  (=> (= (type $generated@@568) $generated@@3) ($generated@@132 $generated@@568 $generated@@47))
 :pattern ( ($generated@@132 $generated@@568 $generated@@47))
)))
(assert (forall (($generated@@569 T@U) ) (!  (=> (= (type $generated@@569) $generated@@4) ($generated@@132 $generated@@569 $generated@@44))
 :pattern ( ($generated@@132 $generated@@569 $generated@@44))
)))
(assert (forall (($generated@@570 T@U) ) (!  (=> (= (type $generated@@570) $generated@@412) ($generated@@132 $generated@@570 $generated@@45))
 :pattern ( ($generated@@132 $generated@@570 $generated@@45))
)))
(assert (forall (($generated@@571 T@U) ) (!  (=> (= (type $generated@@571) $generated@@145) ($generated@@132 $generated@@571 $generated@@48))
 :pattern ( ($generated@@132 $generated@@571 $generated@@48))
)))
(push 1)
(declare-fun ControlFlow (Int Int) Int)
(declare-fun $generated@@572 () Int)
(declare-fun $generated@@573 () Int)
(declare-fun $generated@@574 () Int)
(declare-fun $generated@@575 () T@U)
(declare-fun $generated@@576 () T@U)
(declare-fun $generated@@577 () T@U)
(declare-fun $generated@@578 (T@U) Bool)
(declare-fun $generated@@579 () Int)
(assert  (and (and (= (type $generated@@575) ($generated@@157 $generated@@77 $generated@@4)) (= (type $generated@@576) $generated@@77)) (= (type $generated@@577) ($generated@@76 $generated@@77 $generated@@78))))
(set-option :timeout 0)
(set-option :rlimit 0)
(assert (not
 (=> (= (ControlFlow 0 0) 9) (let (($generated@@580 true))
(let (($generated@@581  (=> (and (< $generated@@572 10) (= (ControlFlow 0 5) 3)) $generated@@580)))
(let (($generated@@582  (=> (and (<= 10 $generated@@572) (= (ControlFlow 0 4) 3)) $generated@@580)))
(let (($generated@@583  (=> (= $generated@@573 $generated@@574) (=> (and ($generated@@132 ($generated@@8 $generated@@573) $generated@@46) (= $generated@@572 $generated@@573)) (and (=> (= (ControlFlow 0 6) (- 0 7)) (<= $generated@@572 $generated@@574)) (=> (<= $generated@@572 $generated@@574) (and (=> (= (ControlFlow 0 6) 4) $generated@@582) (=> (= (ControlFlow 0 6) 5) $generated@@581))))))))
(let (($generated@@584  (=> (= (ControlFlow 0 2) (- 0 1)) (let (($generated@@585 ($generated@@231 0)))
 (=> (<= $generated@@585 ($generated@@231 0)) (or (< $generated@@585 10) (<= ($generated@@231 10) ($generated@@231 0))))))))
(let (($generated@@586  (=> (= $generated@@575 ($generated@@156 $generated@@576 $generated@@577 $generated@@60 false)) (and (=> (= (ControlFlow 0 8) 6) $generated@@583) (=> (= (ControlFlow 0 8) 2) $generated@@584)))))
(let (($generated@@587  (=> (and (and ($generated@@237 $generated@@577) ($generated@@578 $generated@@577)) (and (= 0 $generated@@579) (= (ControlFlow 0 9) 8))) $generated@@586)))
$generated@@587))))))))
))
(check-sat)
(pop 1)
; Valid
(get-info :rlimit)
(reset)
(set-option :rlimit 0)
; did a full reset
(reset)
(set-option :print-success false)
(set-info :smt-lib-version 2.6)
(set-option :auto_config false)
(set-option :type_check true)
(set-option :smt.case_split 3)
(set-option :smt.qi.eager_threshold 100)
(set-option :smt.delay_units true)
(set-option :smt.arith.solver 2)
(set-option :smt.mbqi false)
(set-option :model.compact false)
(set-option :model.v2 true)
(set-option :pp.bv_literals false)
; done setting options


(set-info :category "industrial")
(declare-sort |T@U| 0)
(declare-sort |T@T| 0)
(declare-fun real_pow (Real Real) Real)
(declare-fun UOrdering2 (|T@U| |T@U|) Bool)
(declare-fun UOrdering3 (|T@T| |T@U| |T@U|) Bool)
(declare-fun tickleBool (Bool) Bool)
(assert (and (tickleBool true) (tickleBool false)))
(declare-fun $generated (T@U) Int)
(declare-fun $generated@@0 (T@U) Bool)
(declare-fun $generated@@1 (T@T) Int)
(declare-fun $generated@@2 () T@T)
(declare-fun $generated@@3 () T@T)
(declare-fun $generated@@4 () T@T)
(declare-fun $generated@@5 () T@T)
(declare-fun $generated@@6 () T@T)
(declare-fun $generated@@7 () T@T)
(declare-fun $generated@@8 (Int) T@U)
(declare-fun type (T@U) T@T)
(declare-fun $generated@@9 (Real) T@U)
(declare-fun $generated@@10 (T@U) Real)
(declare-fun $generated@@11 (Bool) T@U)
(declare-fun $generated@@12 (RoundingMode) T@U)
(declare-fun $generated@@13 (T@U) RoundingMode)
(declare-fun $generated@@14 (String) T@U)
(declare-fun $generated@@15 (T@U) String)
(declare-fun $generated@@16 ((RegEx String)) T@U)
(declare-fun $generated@@17 (T@U) (RegEx String))
(declare-fun $generated@@44 (T@U T@U T@U) T@U)
(declare-fun $generated@@45 (T@U T@U T@U Bool) T@U)
(declare-fun $generated@@46 (T@T) T@T)
(declare-fun $generated@@47 () T@T)
(declare-fun $generated@@48 (T@T T@T) T@T)
(declare-fun $generated@@49 () T@T)
(declare-fun $generated@@50 (T@T) T@T)
(declare-fun $generated@@51 (T@U T@U) T@U)
(declare-fun $generated@@52 (T@U T@U) T@U)
(declare-fun $generated@@53 (T@T) T@T)
(declare-fun $generated@@54 (T@T) T@T)
(declare-fun $generated@@55 (T@U T@U T@U) T@U)
(declare-fun $generated@@56 (T@U T@U T@U) T@U)
(declare-fun $generated@@57 (T@T T@T) T@T)
(declare-fun $generated@@58 (T@T) T@T)
(declare-fun $generated@@59 (T@T) T@T)
(declare-fun $generated@@60 (T@U T@U T@U T@U) T@U)
(declare-fun $generated@@157 (Int) Int)
(declare-fun $generated@@159 (T@U) T@U)
(declare-fun $generated@@163 (Int Int) Int)
(declare-fun $generated@@166 (T@U) T@U)
(declare-fun $generated@@167 (T@T T@U) T@U)
(declare-fun $generated@@168 () T@T)
(assert  (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (= ($generated@@1 $generated@@2) 0) (= ($generated@@1 $generated@@3) 1)) (= ($generated@@1 $generated@@4) 2)) (= ($generated@@1 $generated@@5) 3)) (= ($generated@@1 $generated@@6) 4)) (= ($generated@@1 $generated@@7) 5)) (forall (($generated@@18 Int) ) (! (= ($generated ($generated@@8 $generated@@18)) $generated@@18)
 :pattern ( ($generated@@8 $generated@@18))
))) (forall (($generated@@19 T@U) ) (!  (=> (= (type $generated@@19) $generated@@2) (= ($generated@@8 ($generated $generated@@19)) $generated@@19))
 :pattern ( ($generated $generated@@19))
))) (forall (($generated@@20 Int) ) (! (= (type ($generated@@8 $generated@@20)) $generated@@2)
 :pattern ( ($generated@@8 $generated@@20))
))) (forall (($generated@@21 Real) ) (! (= ($generated@@10 ($generated@@9 $generated@@21)) $generated@@21)
 :pattern ( ($generated@@9 $generated@@21))
))) (forall (($generated@@22 T@U) ) (!  (=> (= (type $generated@@22) $generated@@3) (= ($generated@@9 ($generated@@10 $generated@@22)) $generated@@22))
 :pattern ( ($generated@@10 $generated@@22))
))) (forall (($generated@@23 Real) ) (! (= (type ($generated@@9 $generated@@23)) $generated@@3)
 :pattern ( ($generated@@9 $generated@@23))
))) (forall (($generated@@24 Bool) ) (! (= ($generated@@0 ($generated@@11 $generated@@24)) $generated@@24)
 :pattern ( ($generated@@11 $generated@@24))
))) (forall (($generated@@25 T@U) ) (!  (=> (= (type $generated@@25) $generated@@4) (= ($generated@@11 ($generated@@0 $generated@@25)) $generated@@25))
 :pattern ( ($generated@@0 $generated@@25))
))) (forall (($generated@@26 Bool) ) (! (= (type ($generated@@11 $generated@@26)) $generated@@4)
 :pattern ( ($generated@@11 $generated@@26))
))) (forall (($generated@@27 RoundingMode) ) (! (= ($generated@@13 ($generated@@12 $generated@@27)) $generated@@27)
 :pattern ( ($generated@@12 $generated@@27))
))) (forall (($generated@@28 T@U) ) (!  (=> (= (type $generated@@28) $generated@@5) (= ($generated@@12 ($generated@@13 $generated@@28)) $generated@@28))
 :pattern ( ($generated@@13 $generated@@28))
))) (forall (($generated@@29 RoundingMode) ) (! (= (type ($generated@@12 $generated@@29)) $generated@@5)
 :pattern ( ($generated@@12 $generated@@29))
))) (forall (($generated@@30 String) ) (! (= ($generated@@15 ($generated@@14 $generated@@30)) $generated@@30)
 :pattern ( ($generated@@14 $generated@@30))
))) (forall (($generated@@31 T@U) ) (!  (=> (= (type $generated@@31) $generated@@6) (= ($generated@@14 ($generated@@15 $generated@@31)) $generated@@31))
 :pattern ( ($generated@@15 $generated@@31))
))) (forall (($generated@@32 String) ) (! (= (type ($generated@@14 $generated@@32)) $generated@@6)
 :pattern ( ($generated@@14 $generated@@32))
))) (forall (($generated@@33 (RegEx String)) ) (! (= ($generated@@17 ($generated@@16 $generated@@33)) $generated@@33)
 :pattern ( ($generated@@16 $generated@@33))
))) (forall (($generated@@34 T@U) ) (!  (=> (= (type $generated@@34) $generated@@7) (= ($generated@@16 ($generated@@17 $generated@@34)) $generated@@34))
 :pattern ( ($generated@@17 $generated@@34))
))) (forall (($generated@@35 (RegEx String)) ) (! (= (type ($generated@@16 $generated@@35)) $generated@@7)
 :pattern ( ($generated@@16 $generated@@35))
))))
(assert (forall (($generated@@36 T@U) ) (! (UOrdering2 $generated@@36 $generated@@36)
 :no-pattern ($generated $generated@@36)
 :no-pattern ($generated@@0 $generated@@36)
)))
(assert (forall (($generated@@37 T@U) ($generated@@38 T@U) ($generated@@39 T@U) ) (! (let (($generated@@40 (type $generated@@37)))
 (=> (and (and (= (type $generated@@38) $generated@@40) (= (type $generated@@39) $generated@@40)) (and (UOrdering2 $generated@@37 $generated@@38) (UOrdering2 $generated@@38 $generated@@39))) (UOrdering2 $generated@@37 $generated@@39)))
 :pattern ( (UOrdering2 $generated@@37 $generated@@38) (UOrdering2 $generated@@38 $generated@@39))
)))
(assert (forall (($generated@@41 T@U) ($generated@@42 T@U) ) (! (let (($generated@@43 (type $generated@@41)))
 (=> (= (type $generated@@42) $generated@@43) (=> (and (UOrdering2 $generated@@41 $generated@@42) (UOrdering2 $generated@@42 $generated@@41)) (= $generated@@41 $generated@@42))))
 :pattern ( (UOrdering2 $generated@@41 $generated@@42) (UOrdering2 $generated@@42 $generated@@41))
)))
(assert  (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (forall (($generated@@61 T@T) ($generated@@62 T@T) ) (= ($generated@@1 ($generated@@48 $generated@@61 $generated@@62)) 6)) (forall (($generated@@63 T@T) ($generated@@64 T@T) ) (! (= ($generated@@53 ($generated@@48 $generated@@63 $generated@@64)) $generated@@63)
 :pattern ( ($generated@@48 $generated@@63 $generated@@64))
))) (forall (($generated@@65 T@T) ($generated@@66 T@T) ) (! (= ($generated@@54 ($generated@@48 $generated@@65 $generated@@66)) $generated@@66)
 :pattern ( ($generated@@48 $generated@@65 $generated@@66))
))) (forall (($generated@@67 T@U) ($generated@@68 T@U) ) (! (let (($generated@@69 ($generated@@54 (type $generated@@67))))
(= (type ($generated@@52 $generated@@67 $generated@@68)) $generated@@69))
 :pattern ( ($generated@@52 $generated@@67 $generated@@68))
))) (forall (($generated@@70 T@U) ($generated@@71 T@U) ($generated@@72 T@U) ) (! (let (($generated@@73 (type $generated@@72)))
(let (($generated@@74 (type $generated@@71)))
(= (type ($generated@@55 $generated@@70 $generated@@71 $generated@@72)) ($generated@@48 $generated@@74 $generated@@73))))
 :pattern ( ($generated@@55 $generated@@70 $generated@@71 $generated@@72))
))) (forall (($generated@@75 T@U) ($generated@@76 T@U) ($generated@@77 T@U) ) (! (let (($generated@@78 ($generated@@54 (type $generated@@75))))
 (=> (= (type $generated@@77) $generated@@78) (= ($generated@@52 ($generated@@55 $generated@@75 $generated@@76 $generated@@77) $generated@@76) $generated@@77)))
 :weight 0
))) (and (forall (($generated@@79 T@U) ($generated@@80 T@U) ($generated@@81 T@U) ($generated@@82 T@U) ) (!  (or (= $generated@@81 $generated@@82) (= ($generated@@52 ($generated@@55 $generated@@80 $generated@@81 $generated@@79) $generated@@82) ($generated@@52 $generated@@80 $generated@@82)))
 :weight 0
)) (forall (($generated@@83 T@U) ($generated@@84 T@U) ($generated@@85 T@U) ($generated@@86 T@U) ) (!  (or true (= ($generated@@52 ($generated@@55 $generated@@84 $generated@@85 $generated@@83) $generated@@86) ($generated@@52 $generated@@84 $generated@@86)))
 :weight 0
)))) (forall (($generated@@87 T@T) ) (= ($generated@@1 ($generated@@50 $generated@@87)) 7))) (forall (($generated@@88 T@T) ) (! (= ($generated@@46 ($generated@@50 $generated@@88)) $generated@@88)
 :pattern ( ($generated@@50 $generated@@88))
))) (forall (($generated@@89 T@U) ($generated@@90 T@U) ) (! (let (($generated@@91 ($generated@@46 (type $generated@@90))))
(= (type ($generated@@51 $generated@@89 $generated@@90)) $generated@@91))
 :pattern ( ($generated@@51 $generated@@89 $generated@@90))
))) (= ($generated@@1 $generated@@49) 8)) (forall (($generated@@92 T@U) ($generated@@93 T@U) ($generated@@94 T@U) ) (! (= (type ($generated@@56 $generated@@92 $generated@@93 $generated@@94)) $generated@@49)
 :pattern ( ($generated@@56 $generated@@92 $generated@@93 $generated@@94))
))) (forall (($generated@@95 T@U) ($generated@@96 T@U) ($generated@@97 T@U) ) (! (let (($generated@@98 ($generated@@46 (type $generated@@96))))
 (=> (= (type $generated@@97) $generated@@98) (= ($generated@@51 ($generated@@56 $generated@@95 $generated@@96 $generated@@97) $generated@@96) $generated@@97)))
 :weight 0
))) (and (forall (($generated@@99 T@U) ($generated@@100 T@U) ($generated@@101 T@U) ($generated@@102 T@U) ) (!  (or (= $generated@@101 $generated@@102) (= ($generated@@51 ($generated@@56 $generated@@100 $generated@@101 $generated@@99) $generated@@102) ($generated@@51 $generated@@100 $generated@@102)))
 :weight 0
)) (forall (($generated@@103 T@U) ($generated@@104 T@U) ($generated@@105 T@U) ($generated@@106 T@U) ) (!  (or true (= ($generated@@51 ($generated@@56 $generated@@104 $generated@@105 $generated@@103) $generated@@106) ($generated@@51 $generated@@104 $generated@@106)))
 :weight 0
)))) (= ($generated@@1 $generated@@47) 9)) (forall (($generated@@107 T@T) ($generated@@108 T@T) ) (= ($generated@@1 ($generated@@57 $generated@@107 $generated@@108)) 10))) (forall (($generated@@109 T@T) ($generated@@110 T@T) ) (! (= ($generated@@58 ($generated@@57 $generated@@109 $generated@@110)) $generated@@109)
 :pattern ( ($generated@@57 $generated@@109 $generated@@110))
))) (forall (($generated@@111 T@T) ($generated@@112 T@T) ) (! (= ($generated@@59 ($generated@@57 $generated@@111 $generated@@112)) $generated@@112)
 :pattern ( ($generated@@57 $generated@@111 $generated@@112))
))) (forall (($generated@@113 T@U) ($generated@@114 T@U) ($generated@@115 T@U) ) (! (let (($generated@@116 ($generated@@59 (type $generated@@113))))
(= (type ($generated@@44 $generated@@113 $generated@@114 $generated@@115)) $generated@@116))
 :pattern ( ($generated@@44 $generated@@113 $generated@@114 $generated@@115))
))) (forall (($generated@@117 T@U) ($generated@@118 T@U) ($generated@@119 T@U) ($generated@@120 T@U) ) (! (let (($generated@@121 (type $generated@@120)))
(let (($generated@@122 (type $generated@@118)))
(= (type ($generated@@60 $generated@@117 $generated@@118 $generated@@119 $generated@@120)) ($generated@@57 $generated@@122 $generated@@121))))
 :pattern ( ($generated@@60 $generated@@117 $generated@@118 $generated@@119 $generated@@120))
))) (forall (($generated@@123 T@U) ($generated@@124 T@U) ($generated@@125 T@U) ($generated@@126 T@U) ) (! (let (($generated@@127 ($generated@@59 (type $generated@@123))))
 (=> (= (type $generated@@126) $generated@@127) (= ($generated@@44 ($generated@@60 $generated@@123 $generated@@124 $generated@@125 $generated@@126) $generated@@124 $generated@@125) $generated@@126)))
 :weight 0
))) (and (and (forall (($generated@@128 T@U) ($generated@@129 T@U) ($generated@@130 T@U) ($generated@@131 T@U) ($generated@@132 T@U) ($generated@@133 T@U) ) (!  (or (= $generated@@130 $generated@@132) (= ($generated@@44 ($generated@@60 $generated@@129 $generated@@130 $generated@@131 $generated@@128) $generated@@132 $generated@@133) ($generated@@44 $generated@@129 $generated@@132 $generated@@133)))
 :weight 0
)) (forall (($generated@@134 T@U) ($generated@@135 T@U) ($generated@@136 T@U) ($generated@@137 T@U) ($generated@@138 T@U) ($generated@@139 T@U) ) (!  (or (= $generated@@137 $generated@@139) (= ($generated@@44 ($generated@@60 $generated@@135 $generated@@136 $generated@@137 $generated@@134) $generated@@138 $generated@@139) ($generated@@44 $generated@@135 $generated@@138 $generated@@139)))
 :weight 0
))) (forall (($generated@@140 T@U) ($generated@@141 T@U) ($generated@@142 T@U) ($generated@@143 T@U) ($generated@@144 T@U) ($generated@@145 T@U) ) (!  (or true (= ($generated@@44 ($generated@@60 $generated@@141 $generated@@142 $generated@@143 $generated@@140) $generated@@144 $generated@@145) ($generated@@44 $generated@@141 $generated@@144 $generated@@145)))
 :weight 0
)))) (forall (($generated@@146 T@U) ($generated@@147 T@U) ($generated@@148 T@U) ($generated@@149 Bool) ) (! (= (type ($generated@@45 $generated@@146 $generated@@147 $generated@@148 $generated@@149)) ($generated@@57 $generated@@47 $generated@@4))
 :pattern ( ($generated@@45 $generated@@146 $generated@@147 $generated@@148 $generated@@149))
))))
(assert (forall (($generated@@150 T@U) ($generated@@151 T@U) ($generated@@152 T@U) ($generated@@153 Bool) ($generated@@154 T@U) ($generated@@155 T@U) ) (! (let (($generated@@156 ($generated@@46 (type $generated@@155))))
 (=> (and (and (and (and (= (type $generated@@150) $generated@@47) (= (type $generated@@151) ($generated@@48 $generated@@47 $generated@@49))) (= (type $generated@@152) ($generated@@50 $generated@@4))) (= (type $generated@@154) $generated@@47)) (= (type $generated@@155) ($generated@@50 $generated@@156))) (= ($generated@@0 ($generated@@44 ($generated@@45 $generated@@150 $generated@@151 $generated@@152 $generated@@153) $generated@@154 $generated@@155))  (=> (and (not (= $generated@@154 $generated@@150)) ($generated@@0 ($generated@@51 ($generated@@52 $generated@@151 $generated@@154) $generated@@152))) $generated@@153))))
 :pattern ( ($generated@@44 ($generated@@45 $generated@@150 $generated@@151 $generated@@152 $generated@@153) $generated@@154 $generated@@155))
)))
(assert (forall (($generated@@158 Int) ) (! (= ($generated@@157 $generated@@158) $generated@@158)
 :pattern ( ($generated@@157 $generated@@158))
)))
(assert (forall (($generated@@160 T@U) ) (! (let (($generated@@161 (type $generated@@160)))
(= (type ($generated@@159 $generated@@160)) $generated@@161))
 :pattern ( ($generated@@159 $generated@@160))
)))
(assert (forall (($generated@@162 T@U) ) (! (= ($generated@@159 $generated@@162) $generated@@162)
 :pattern ( ($generated@@159 $generated@@162))
)))
(assert (forall (($generated@@164 Int) ($generated@@165 Int) ) (! (= ($generated@@163 $generated@@164 $generated@@165) (div $generated@@164 $generated@@165))
 :pattern ( ($generated@@163 $generated@@164 $generated@@165))
)))
(assert  (and (and (= ($generated@@1 $generated@@168) 11) (forall (($generated@@169 T@U) ) (! (= (type ($generated@@166 $generated@@169)) $generated@@168)
 :pattern ( ($generated@@166 $generated@@169))
))) (forall (($generated@@170 T@T) ($generated@@171 T@U) ) (! (= (type ($generated@@167 $generated@@170 $generated@@171)) $generated@@170)
 :pattern ( ($generated@@167 $generated@@170 $generated@@171))
))))
(assert (forall (($generated@@172 T@U) ) (! (let (($generated@@173 (type $generated@@172)))
(= ($generated@@167 $generated@@173 ($generated@@166 $generated@@172)) $generated@@172))
 :pattern ( ($generated@@166 $generated@@172))
)))
(assert (forall (($generated@@174 Int) ) (! (= ($generated@@166 ($generated@@8 ($generated@@157 $generated@@174))) ($generated@@159 ($generated@@166 ($generated@@8 $generated@@174))))
 :pattern ( ($generated@@166 ($generated@@8 ($generated@@157 $generated@@174))))
)))
(assert (forall (($generated@@175 T@U) ) (! (= ($generated@@166 ($generated@@159 $generated@@175)) ($generated@@159 ($generated@@166 $generated@@175)))
 :pattern ( ($generated@@166 ($generated@@159 $generated@@175)))
)))
(push 1)
(declare-fun ControlFlow (Int Int) Int)
(declare-fun $generated@@176 () T@U)
(declare-fun $generated@@177 () T@U)
(declare-fun $generated@@178 () T@U)
(declare-fun $generated@@179 () T@U)
(declare-fun $generated@@180 () Int)
(declare-fun $generated@@181 () Int)
(declare-fun $generated@@182 () Int)
(declare-fun $generated@@183 (T@U) Bool)
(declare-fun $generated@@184 (T@U) Bool)
(declare-fun $generated@@185 () Int)
(declare-fun $generated@@186 () Int)
(assert  (and (and (and (= (type $generated@@176) ($generated@@57 $generated@@47 $generated@@4)) (= (type $generated@@177) $generated@@47)) (= (type $generated@@178) ($generated@@48 $generated@@47 $generated@@49))) (= (type $generated@@179) ($generated@@50 $generated@@4))))
(set-option :timeout 0)
(set-option :rlimit 0)
(assert (not
 (=> (= (ControlFlow 0 0) 4) (let (($generated@@187  (=> (= $generated@@176 ($generated@@45 $generated@@177 $generated@@178 $generated@@179 false)) (and (=> (= (ControlFlow 0 2) (- 0 3)) (not (= ($generated@@157 2) 0))) (=> (not (= ($generated@@157 2) 0)) (=> (and (= $generated@@180 ($generated@@163 (+ $generated@@181 $generated@@182) ($generated@@157 2))) (= (ControlFlow 0 2) (- 0 1))) (and (<= ($generated@@157 0) $generated@@180) (< $generated@@180 256))))))))
(let (($generated@@188  (=> (and ($generated@@183 $generated@@178) ($generated@@184 $generated@@178)) (=> (and (and (<= ($generated@@157 0) $generated@@181) (< $generated@@181 256)) (and (<= ($generated@@157 0) $generated@@182) (< $generated@@182 256))) (=> (and (and (and (<= ($generated@@157 0) $generated@@185) (< $generated@@185 256)) (= 1 $generated@@186)) (and (<= $generated@@181 $generated@@182) (= (ControlFlow 0 4) 2))) $generated@@187)))))
$generated@@188)))
))
(check-sat)
(pop 1)
; Valid
(get-info :rlimit)
(reset)
(set-option :rlimit 0)
; did a full reset
(reset)
(set-option :print-success false)
(set-info :smt-lib-version 2.6)
(set-option :auto_config false)
(set-option :type_check true)
(set-option :smt.case_split 3)
(set-option :smt.qi.eager_threshold 100)
(set-option :smt.delay_units true)
(set-option :smt.arith.solver 2)
(set-option :smt.mbqi false)
(set-option :model.compact false)
(set-option :model.v2 true)
(set-option :pp.bv_literals false)
; done setting options


(set-info :category "industrial")
(declare-sort |T@U| 0)
(declare-sort |T@T| 0)
(declare-fun real_pow (Real Real) Real)
(declare-fun UOrdering2 (|T@U| |T@U|) Bool)
(declare-fun UOrdering3 (|T@T| |T@U| |T@U|) Bool)
(declare-fun tickleBool (Bool) Bool)
(assert (and (tickleBool true) (tickleBool false)))
(declare-fun $generated (T@U) Int)
(declare-fun $generated@@0 (T@U) Bool)
(declare-fun $generated@@1 (T@T) Int)
(declare-fun $generated@@2 () T@T)
(declare-fun $generated@@3 () T@T)
(declare-fun $generated@@4 () T@T)
(declare-fun $generated@@5 () T@T)
(declare-fun $generated@@6 () T@T)
(declare-fun $generated@@7 () T@T)
(declare-fun $generated@@8 (Int) T@U)
(declare-fun type (T@U) T@T)
(declare-fun $generated@@9 (Real) T@U)
(declare-fun $generated@@10 (T@U) Real)
(declare-fun $generated@@11 (Bool) T@U)
(declare-fun $generated@@12 (RoundingMode) T@U)
(declare-fun $generated@@13 (T@U) RoundingMode)
(declare-fun $generated@@14 (String) T@U)
(declare-fun $generated@@15 (T@U) String)
(declare-fun $generated@@16 ((RegEx String)) T@U)
(declare-fun $generated@@17 (T@U) (RegEx String))
(declare-fun $generated@@44 (T@U T@U) Bool)
(declare-fun $generated@@45 (T@T T@T) T@T)
(declare-fun $generated@@46 () T@T)
(declare-fun $generated@@47 () T@T)
(declare-fun $generated@@48 (T@U T@U) T@U)
(declare-fun $generated@@49 (T@U T@U) T@U)
(declare-fun $generated@@50 () T@U)
(declare-fun $generated@@51 (T@T) T@T)
(declare-fun $generated@@52 (T@T) T@T)
(declare-fun $generated@@53 (T@U T@U T@U) T@U)
(declare-fun $generated@@54 (T@T) T@T)
(declare-fun $generated@@55 (T@T) T@T)
(declare-fun $generated@@56 (T@U T@U T@U) T@U)
(declare-fun $generated@@106 (T@U T@U T@U) T@U)
(declare-fun $generated@@107 (T@U T@U T@U Bool) T@U)
(declare-fun $generated@@108 (T@T T@T) T@T)
(declare-fun $generated@@109 (T@T) T@T)
(declare-fun $generated@@110 (T@T) T@T)
(declare-fun $generated@@111 (T@U T@U T@U T@U) T@U)
(declare-fun $generated@@162 (Real) Real)
(declare-fun $generated@@164 (T@U) T@U)
(declare-fun $generated@@171 (T@U) T@U)
(declare-fun $generated@@172 (T@T T@U) T@U)
(declare-fun $generated@@173 () T@T)
(assert  (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (= ($generated@@1 $generated@@2) 0) (= ($generated@@1 $generated@@3) 1)) (= ($generated@@1 $generated@@4) 2)) (= ($generated@@1 $generated@@5) 3)) (= ($generated@@1 $generated@@6) 4)) (= ($generated@@1 $generated@@7) 5)) (forall (($generated@@18 Int) ) (! (= ($generated ($generated@@8 $generated@@18)) $generated@@18)
 :pattern ( ($generated@@8 $generated@@18))
))) (forall (($generated@@19 T@U) ) (!  (=> (= (type $generated@@19) $generated@@2) (= ($generated@@8 ($generated $generated@@19)) $generated@@19))
 :pattern ( ($generated $generated@@19))
))) (forall (($generated@@20 Int) ) (! (= (type ($generated@@8 $generated@@20)) $generated@@2)
 :pattern ( ($generated@@8 $generated@@20))
))) (forall (($generated@@21 Real) ) (! (= ($generated@@10 ($generated@@9 $generated@@21)) $generated@@21)
 :pattern ( ($generated@@9 $generated@@21))
))) (forall (($generated@@22 T@U) ) (!  (=> (= (type $generated@@22) $generated@@3) (= ($generated@@9 ($generated@@10 $generated@@22)) $generated@@22))
 :pattern ( ($generated@@10 $generated@@22))
))) (forall (($generated@@23 Real) ) (! (= (type ($generated@@9 $generated@@23)) $generated@@3)
 :pattern ( ($generated@@9 $generated@@23))
))) (forall (($generated@@24 Bool) ) (! (= ($generated@@0 ($generated@@11 $generated@@24)) $generated@@24)
 :pattern ( ($generated@@11 $generated@@24))
))) (forall (($generated@@25 T@U) ) (!  (=> (= (type $generated@@25) $generated@@4) (= ($generated@@11 ($generated@@0 $generated@@25)) $generated@@25))
 :pattern ( ($generated@@0 $generated@@25))
))) (forall (($generated@@26 Bool) ) (! (= (type ($generated@@11 $generated@@26)) $generated@@4)
 :pattern ( ($generated@@11 $generated@@26))
))) (forall (($generated@@27 RoundingMode) ) (! (= ($generated@@13 ($generated@@12 $generated@@27)) $generated@@27)
 :pattern ( ($generated@@12 $generated@@27))
))) (forall (($generated@@28 T@U) ) (!  (=> (= (type $generated@@28) $generated@@5) (= ($generated@@12 ($generated@@13 $generated@@28)) $generated@@28))
 :pattern ( ($generated@@13 $generated@@28))
))) (forall (($generated@@29 RoundingMode) ) (! (= (type ($generated@@12 $generated@@29)) $generated@@5)
 :pattern ( ($generated@@12 $generated@@29))
))) (forall (($generated@@30 String) ) (! (= ($generated@@15 ($generated@@14 $generated@@30)) $generated@@30)
 :pattern ( ($generated@@14 $generated@@30))
))) (forall (($generated@@31 T@U) ) (!  (=> (= (type $generated@@31) $generated@@6) (= ($generated@@14 ($generated@@15 $generated@@31)) $generated@@31))
 :pattern ( ($generated@@15 $generated@@31))
))) (forall (($generated@@32 String) ) (! (= (type ($generated@@14 $generated@@32)) $generated@@6)
 :pattern ( ($generated@@14 $generated@@32))
))) (forall (($generated@@33 (RegEx String)) ) (! (= ($generated@@17 ($generated@@16 $generated@@33)) $generated@@33)
 :pattern ( ($generated@@16 $generated@@33))
))) (forall (($generated@@34 T@U) ) (!  (=> (= (type $generated@@34) $generated@@7) (= ($generated@@16 ($generated@@17 $generated@@34)) $generated@@34))
 :pattern ( ($generated@@17 $generated@@34))
))) (forall (($generated@@35 (RegEx String)) ) (! (= (type ($generated@@16 $generated@@35)) $generated@@7)
 :pattern ( ($generated@@16 $generated@@35))
))))
(assert (forall (($generated@@36 T@U) ) (! (UOrdering2 $generated@@36 $generated@@36)
 :no-pattern ($generated $generated@@36)
 :no-pattern ($generated@@0 $generated@@36)
)))
(assert (forall (($generated@@37 T@U) ($generated@@38 T@U) ($generated@@39 T@U) ) (! (let (($generated@@40 (type $generated@@37)))
 (=> (and (and (= (type $generated@@38) $generated@@40) (= (type $generated@@39) $generated@@40)) (and (UOrdering2 $generated@@37 $generated@@38) (UOrdering2 $generated@@38 $generated@@39))) (UOrdering2 $generated@@37 $generated@@39)))
 :pattern ( (UOrdering2 $generated@@37 $generated@@38) (UOrdering2 $generated@@38 $generated@@39))
)))
(assert (forall (($generated@@41 T@U) ($generated@@42 T@U) ) (! (let (($generated@@43 (type $generated@@41)))
 (=> (= (type $generated@@42) $generated@@43) (=> (and (UOrdering2 $generated@@41 $generated@@42) (UOrdering2 $generated@@42 $generated@@41)) (= $generated@@41 $generated@@42))))
 :pattern ( (UOrdering2 $generated@@41 $generated@@42) (UOrdering2 $generated@@42 $generated@@41))
)))
(assert  (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (forall (($generated@@57 T@T) ($generated@@58 T@T) ) (= ($generated@@1 ($generated@@45 $generated@@57 $generated@@58)) 6)) (forall (($generated@@59 T@T) ($generated@@60 T@T) ) (! (= ($generated@@51 ($generated@@45 $generated@@59 $generated@@60)) $generated@@59)
 :pattern ( ($generated@@45 $generated@@59 $generated@@60))
))) (forall (($generated@@61 T@T) ($generated@@62 T@T) ) (! (= ($generated@@52 ($generated@@45 $generated@@61 $generated@@62)) $generated@@62)
 :pattern ( ($generated@@45 $generated@@61 $generated@@62))
))) (forall (($generated@@63 T@U) ($generated@@64 T@U) ) (! (let (($generated@@65 ($generated@@52 (type $generated@@63))))
(= (type ($generated@@49 $generated@@63 $generated@@64)) $generated@@65))
 :pattern ( ($generated@@49 $generated@@63 $generated@@64))
))) (forall (($generated@@66 T@U) ($generated@@67 T@U) ($generated@@68 T@U) ) (! (let (($generated@@69 (type $generated@@68)))
(let (($generated@@70 (type $generated@@67)))
(= (type ($generated@@53 $generated@@66 $generated@@67 $generated@@68)) ($generated@@45 $generated@@70 $generated@@69))))
 :pattern ( ($generated@@53 $generated@@66 $generated@@67 $generated@@68))
))) (forall (($generated@@71 T@U) ($generated@@72 T@U) ($generated@@73 T@U) ) (! (let (($generated@@74 ($generated@@52 (type $generated@@71))))
 (=> (= (type $generated@@73) $generated@@74) (= ($generated@@49 ($generated@@53 $generated@@71 $generated@@72 $generated@@73) $generated@@72) $generated@@73)))
 :weight 0
))) (and (forall (($generated@@75 T@U) ($generated@@76 T@U) ($generated@@77 T@U) ($generated@@78 T@U) ) (!  (or (= $generated@@77 $generated@@78) (= ($generated@@49 ($generated@@53 $generated@@76 $generated@@77 $generated@@75) $generated@@78) ($generated@@49 $generated@@76 $generated@@78)))
 :weight 0
)) (forall (($generated@@79 T@U) ($generated@@80 T@U) ($generated@@81 T@U) ($generated@@82 T@U) ) (!  (or true (= ($generated@@49 ($generated@@53 $generated@@80 $generated@@81 $generated@@79) $generated@@82) ($generated@@49 $generated@@80 $generated@@82)))
 :weight 0
)))) (= ($generated@@1 $generated@@46) 7)) (forall (($generated@@83 T@T) ) (= ($generated@@1 ($generated@@54 $generated@@83)) 8))) (forall (($generated@@84 T@T) ) (! (= ($generated@@55 ($generated@@54 $generated@@84)) $generated@@84)
 :pattern ( ($generated@@54 $generated@@84))
))) (forall (($generated@@85 T@U) ($generated@@86 T@U) ) (! (let (($generated@@87 ($generated@@55 (type $generated@@86))))
(= (type ($generated@@48 $generated@@85 $generated@@86)) $generated@@87))
 :pattern ( ($generated@@48 $generated@@85 $generated@@86))
))) (= ($generated@@1 $generated@@47) 9)) (forall (($generated@@88 T@U) ($generated@@89 T@U) ($generated@@90 T@U) ) (! (= (type ($generated@@56 $generated@@88 $generated@@89 $generated@@90)) $generated@@47)
 :pattern ( ($generated@@56 $generated@@88 $generated@@89 $generated@@90))
))) (forall (($generated@@91 T@U) ($generated@@92 T@U) ($generated@@93 T@U) ) (! (let (($generated@@94 ($generated@@55 (type $generated@@92))))
 (=> (= (type $generated@@93) $generated@@94) (= ($generated@@48 ($generated@@56 $generated@@91 $generated@@92 $generated@@93) $generated@@92) $generated@@93)))
 :weight 0
))) (and (forall (($generated@@95 T@U) ($generated@@96 T@U) ($generated@@97 T@U) ($generated@@98 T@U) ) (!  (or (= $generated@@97 $generated@@98) (= ($generated@@48 ($generated@@56 $generated@@96 $generated@@97 $generated@@95) $generated@@98) ($generated@@48 $generated@@96 $generated@@98)))
 :weight 0
)) (forall (($generated@@99 T@U) ($generated@@100 T@U) ($generated@@101 T@U) ($generated@@102 T@U) ) (!  (or true (= ($generated@@48 ($generated@@56 $generated@@100 $generated@@101 $generated@@99) $generated@@102) ($generated@@48 $generated@@100 $generated@@102)))
 :weight 0
)))) (= (type $generated@@50) ($generated@@54 $generated@@4))))
(assert (forall (($generated@@103 T@U) ($generated@@104 T@U) ) (!  (=> (and (and (= (type $generated@@103) ($generated@@45 $generated@@46 $generated@@47)) (= (type $generated@@104) ($generated@@45 $generated@@46 $generated@@47))) ($generated@@44 $generated@@103 $generated@@104)) (forall (($generated@@105 T@U) ) (!  (=> (and (= (type $generated@@105) $generated@@46) ($generated@@0 ($generated@@48 ($generated@@49 $generated@@103 $generated@@105) $generated@@50))) ($generated@@0 ($generated@@48 ($generated@@49 $generated@@104 $generated@@105) $generated@@50)))
 :pattern ( ($generated@@48 ($generated@@49 $generated@@104 $generated@@105) $generated@@50))
)))
 :pattern ( ($generated@@44 $generated@@103 $generated@@104))
)))
(assert  (and (and (and (and (and (and (and (forall (($generated@@112 T@T) ($generated@@113 T@T) ) (= ($generated@@1 ($generated@@108 $generated@@112 $generated@@113)) 10)) (forall (($generated@@114 T@T) ($generated@@115 T@T) ) (! (= ($generated@@109 ($generated@@108 $generated@@114 $generated@@115)) $generated@@114)
 :pattern ( ($generated@@108 $generated@@114 $generated@@115))
))) (forall (($generated@@116 T@T) ($generated@@117 T@T) ) (! (= ($generated@@110 ($generated@@108 $generated@@116 $generated@@117)) $generated@@117)
 :pattern ( ($generated@@108 $generated@@116 $generated@@117))
))) (forall (($generated@@118 T@U) ($generated@@119 T@U) ($generated@@120 T@U) ) (! (let (($generated@@121 ($generated@@110 (type $generated@@118))))
(= (type ($generated@@106 $generated@@118 $generated@@119 $generated@@120)) $generated@@121))
 :pattern ( ($generated@@106 $generated@@118 $generated@@119 $generated@@120))
))) (forall (($generated@@122 T@U) ($generated@@123 T@U) ($generated@@124 T@U) ($generated@@125 T@U) ) (! (let (($generated@@126 (type $generated@@125)))
(let (($generated@@127 (type $generated@@123)))
(= (type ($generated@@111 $generated@@122 $generated@@123 $generated@@124 $generated@@125)) ($generated@@108 $generated@@127 $generated@@126))))
 :pattern ( ($generated@@111 $generated@@122 $generated@@123 $generated@@124 $generated@@125))
))) (forall (($generated@@128 T@U) ($generated@@129 T@U) ($generated@@130 T@U) ($generated@@131 T@U) ) (! (let (($generated@@132 ($generated@@110 (type $generated@@128))))
 (=> (= (type $generated@@131) $generated@@132) (= ($generated@@106 ($generated@@111 $generated@@128 $generated@@129 $generated@@130 $generated@@131) $generated@@129 $generated@@130) $generated@@131)))
 :weight 0
))) (and (and (forall (($generated@@133 T@U) ($generated@@134 T@U) ($generated@@135 T@U) ($generated@@136 T@U) ($generated@@137 T@U) ($generated@@138 T@U) ) (!  (or (= $generated@@135 $generated@@137) (= ($generated@@106 ($generated@@111 $generated@@134 $generated@@135 $generated@@136 $generated@@133) $generated@@137 $generated@@138) ($generated@@106 $generated@@134 $generated@@137 $generated@@138)))
 :weight 0
)) (forall (($generated@@139 T@U) ($generated@@140 T@U) ($generated@@141 T@U) ($generated@@142 T@U) ($generated@@143 T@U) ($generated@@144 T@U) ) (!  (or (= $generated@@142 $generated@@144) (= ($generated@@106 ($generated@@111 $generated@@140 $generated@@141 $generated@@142 $generated@@139) $generated@@143 $generated@@144) ($generated@@106 $generated@@140 $generated@@143 $generated@@144)))
 :weight 0
))) (forall (($generated@@145 T@U) ($generated@@146 T@U) ($generated@@147 T@U) ($generated@@148 T@U) ($generated@@149 T@U) ($generated@@150 T@U) ) (!  (or true (= ($generated@@106 ($generated@@111 $generated@@146 $generated@@147 $generated@@148 $generated@@145) $generated@@149 $generated@@150) ($generated@@106 $generated@@146 $generated@@149 $generated@@150)))
 :weight 0
)))) (forall (($generated@@151 T@U) ($generated@@152 T@U) ($generated@@153 T@U) ($generated@@154 Bool) ) (! (= (type ($generated@@107 $generated@@151 $generated@@152 $generated@@153 $generated@@154)) ($generated@@108 $generated@@46 $generated@@4))
 :pattern ( ($generated@@107 $generated@@151 $generated@@152 $generated@@153 $generated@@154))
))))
(assert (forall (($generated@@155 T@U) ($generated@@156 T@U) ($generated@@157 T@U) ($generated@@158 Bool) ($generated@@159 T@U) ($generated@@160 T@U) ) (! (let (($generated@@161 ($generated@@55 (type $generated@@160))))
 (=> (and (and (and (and (= (type $generated@@155) $generated@@46) (= (type $generated@@156) ($generated@@45 $generated@@46 $generated@@47))) (= (type $generated@@157) ($generated@@54 $generated@@4))) (= (type $generated@@159) $generated@@46)) (= (type $generated@@160) ($generated@@54 $generated@@161))) (= ($generated@@0 ($generated@@106 ($generated@@107 $generated@@155 $generated@@156 $generated@@157 $generated@@158) $generated@@159 $generated@@160))  (=> (and (not (= $generated@@159 $generated@@155)) ($generated@@0 ($generated@@48 ($generated@@49 $generated@@156 $generated@@159) $generated@@157))) $generated@@158))))
 :pattern ( ($generated@@106 ($generated@@107 $generated@@155 $generated@@156 $generated@@157 $generated@@158) $generated@@159 $generated@@160))
)))
(assert (forall (($generated@@163 Real) ) (! (= ($generated@@162 $generated@@163) $generated@@163)
 :pattern ( ($generated@@162 $generated@@163))
)))
(assert (forall (($generated@@165 T@U) ) (! (let (($generated@@166 (type $generated@@165)))
(= (type ($generated@@164 $generated@@165)) $generated@@166))
 :pattern ( ($generated@@164 $generated@@165))
)))
(assert (forall (($generated@@167 T@U) ) (! (= ($generated@@164 $generated@@167) $generated@@167)
 :pattern ( ($generated@@164 $generated@@167))
)))
(assert (forall (($generated@@168 T@U) ($generated@@169 T@U) ($generated@@170 T@U) ) (!  (=> (and (and (and (and (= (type $generated@@168) ($generated@@45 $generated@@46 $generated@@47)) (= (type $generated@@169) ($generated@@45 $generated@@46 $generated@@47))) (= (type $generated@@170) ($generated@@45 $generated@@46 $generated@@47))) (not (= $generated@@168 $generated@@170))) (and ($generated@@44 $generated@@168 $generated@@169) ($generated@@44 $generated@@169 $generated@@170))) ($generated@@44 $generated@@168 $generated@@170))
 :pattern ( ($generated@@44 $generated@@168 $generated@@169) ($generated@@44 $generated@@169 $generated@@170))
)))
(assert  (and (and (= ($generated@@1 $generated@@173) 11) (forall (($generated@@174 T@U) ) (! (= (type ($generated@@171 $generated@@174)) $generated@@173)
 :pattern ( ($generated@@171 $generated@@174))
))) (forall (($generated@@175 T@T) ($generated@@176 T@U) ) (! (= (type ($generated@@172 $generated@@175 $generated@@176)) $generated@@175)
 :pattern ( ($generated@@172 $generated@@175 $generated@@176))
))))
(assert (forall (($generated@@177 T@U) ) (! (let (($generated@@178 (type $generated@@177)))
(= ($generated@@172 $generated@@178 ($generated@@171 $generated@@177)) $generated@@177))
 :pattern ( ($generated@@171 $generated@@177))
)))
(assert (forall (($generated@@179 Real) ) (! (= ($generated@@171 ($generated@@9 ($generated@@162 $generated@@179))) ($generated@@164 ($generated@@171 ($generated@@9 $generated@@179))))
 :pattern ( ($generated@@171 ($generated@@9 ($generated@@162 $generated@@179))))
)))
(assert (forall (($generated@@180 T@U) ) (! (= ($generated@@171 ($generated@@164 $generated@@180)) ($generated@@164 ($generated@@171 $generated@@180)))
 :pattern ( ($generated@@171 ($generated@@164 $generated@@180)))
)))
(push 1)
(declare-fun ControlFlow (Int Int) Int)
(declare-fun $generated@@181 () Real)
(declare-fun $generated@@182 () Real)
(declare-fun $generated@@183 () Real)
(declare-fun $generated@@184 () Real)
(declare-fun $generated@@185 () Real)
(declare-fun $generated@@186 () Real)
(declare-fun $generated@@187 () Real)
(declare-fun $generated@@188 () Real)
(declare-fun $generated@@189 () Real)
(declare-fun $generated@@190 () Real)
(declare-fun $generated@@191 () Bool)
(declare-fun $generated@@192 () Real)
(declare-fun $generated@@193 () T@U)
(declare-fun $generated@@194 () T@U)
(declare-fun $generated@@195 () T@U)
(declare-fun $generated@@196 () Real)
(declare-fun $generated@@197 () Real)
(declare-fun $generated@@198 () Real)
(declare-fun $generated@@199 (T@U) Bool)
(declare-fun $generated@@200 (T@U) Bool)
(declare-fun $generated@@201 () Real)
(declare-fun $generated@@202 () Real)
(declare-fun $generated@@203 () Int)
(assert  (and (and (= (type $generated@@193) ($generated@@45 $generated@@46 $generated@@47)) (= (type $generated@@194) $generated@@46)) (= (type $generated@@195) ($generated@@108 $generated@@46 $generated@@4))))
(set-option :timeout 0)
(set-option :rlimit 0)
(assert (not
 (=> (= (ControlFlow 0 0) 18) (let (($generated@@204  (and (=> (= (ControlFlow 0 6) (- 0 7)) (or (<= 0.0 $generated@@181) (= (- $generated@@182 $generated@@183) $generated@@181))) (=> (or (<= 0.0 $generated@@181) (= (- $generated@@182 $generated@@183) $generated@@181)) (=> (= (ControlFlow 0 6) (- 0 5)) (<= (- $generated@@182 $generated@@183) (- $generated@@181 1.0)))))))
(let (($generated@@205  (=> (and (<= $generated@@184 12.0) (= $generated@@185 ($generated@@162 14.2))) (and (=> (= (ControlFlow 0 10) (- 0 11)) (or (= $generated@@185 ($generated@@162 0.0)) (and (<= ($generated@@162 10.0) $generated@@185) (<= $generated@@185 ($generated@@162 20.0))))) (=> (or (= $generated@@185 ($generated@@162 0.0)) (and (<= ($generated@@162 10.0) $generated@@185) (<= $generated@@185 ($generated@@162 20.0)))) (=> (and (and (= $generated@@186 ($generated@@162 14.2)) (= $generated@@183 $generated@@186)) (and (= $generated@@182 $generated@@184) (= (ControlFlow 0 10) 6))) $generated@@204))))))
(let (($generated@@206  (=> (and (< 12.0 $generated@@184) (= $generated@@187 ($generated@@162 10.0))) (and (=> (= (ControlFlow 0 8) (- 0 9)) (or (= $generated@@187 ($generated@@162 0.0)) (and (<= ($generated@@162 10.0) $generated@@187) (<= $generated@@187 ($generated@@162 20.0))))) (=> (or (= $generated@@187 ($generated@@162 0.0)) (and (<= ($generated@@162 10.0) $generated@@187) (<= $generated@@187 ($generated@@162 20.0)))) (=> (and (and (= $generated@@188 ($generated@@162 10.0)) (= $generated@@183 $generated@@189)) (and (= $generated@@182 $generated@@188) (= (ControlFlow 0 8) 6))) $generated@@204))))))
(let (($generated@@207  (=> (< $generated@@189 $generated@@184) (=> (and (= $generated@@181 (- $generated@@184 $generated@@189)) (= $generated@@190 ($generated@@162 12.0))) (and (=> (= (ControlFlow 0 12) (- 0 13)) (or (= $generated@@190 ($generated@@162 0.0)) (and (<= ($generated@@162 10.0) $generated@@190) (<= $generated@@190 ($generated@@162 20.0))))) (=> (or (= $generated@@190 ($generated@@162 0.0)) (and (<= ($generated@@162 10.0) $generated@@190) (<= $generated@@190 ($generated@@162 20.0)))) (and (=> (= (ControlFlow 0 12) 8) $generated@@206) (=> (= (ControlFlow 0 12) 10) $generated@@205))))))))
(let (($generated@@208 true))
(let (($generated@@209  (=> $generated@@191 (and (=> (= (ControlFlow 0 14) 4) $generated@@208) (=> (= (ControlFlow 0 14) 12) $generated@@207)))))
(let (($generated@@210  (=> (not $generated@@191) (=> (and (= $generated@@192 (- $generated@@184 $generated@@189)) (= (ControlFlow 0 3) (- 0 2))) (or (= $generated@@192 ($generated@@162 0.0)) (and (<= ($generated@@162 10.0) $generated@@192) (<= $generated@@192 ($generated@@162 20.0))))))))
(let (($generated@@211  (and (=> (= (ControlFlow 0 15) 3) $generated@@210) (=> (= (ControlFlow 0 15) 14) $generated@@209))))
(let (($generated@@212 true))
(let (($generated@@213  (=> (and (and (and (or (= $generated@@189 ($generated@@162 0.0)) (and (<= ($generated@@162 10.0) $generated@@189) (<= $generated@@189 ($generated@@162 20.0)))) (or (= $generated@@184 ($generated@@162 0.0)) (and (<= ($generated@@162 10.0) $generated@@184) (<= $generated@@184 ($generated@@162 20.0))))) (and (not false) (forall (($generated@@214 T@U) ) (!  (=> (= (type $generated@@214) $generated@@46) (=> (and (not (= $generated@@214 $generated@@194)) ($generated@@0 ($generated@@48 ($generated@@49 $generated@@193 $generated@@214) $generated@@50))) (= ($generated@@49 $generated@@193 $generated@@214) ($generated@@49 $generated@@193 $generated@@214))))
 :pattern ( ($generated@@49 $generated@@193 $generated@@214))
)))) (and (and ($generated@@44 $generated@@193 $generated@@193) (forall (($generated@@215 T@U) ($generated@@216 T@U) ) (! (let (($generated@@217 ($generated@@55 (type $generated@@216))))
 (=> (and (and (= (type $generated@@215) $generated@@46) (= (type $generated@@216) ($generated@@54 $generated@@217))) (and (not (= $generated@@215 $generated@@194)) ($generated@@0 ($generated@@48 ($generated@@49 $generated@@193 $generated@@215) $generated@@50)))) (or (= ($generated@@48 ($generated@@49 $generated@@193 $generated@@215) $generated@@216) ($generated@@48 ($generated@@49 $generated@@193 $generated@@215) $generated@@216)) ($generated@@0 ($generated@@106 $generated@@195 $generated@@215 $generated@@216)))))
 :pattern ( ($generated@@48 ($generated@@49 $generated@@193 $generated@@215) $generated@@216))
))) (and (<= (- $generated@@184 $generated@@189) $generated@@196) (=> (= (- $generated@@184 $generated@@189) $generated@@196) true)))) (and (=> (= (ControlFlow 0 16) 1) $generated@@212) (=> (= (ControlFlow 0 16) 15) $generated@@211)))))
(let (($generated@@218  (=> (= $generated@@195 ($generated@@107 $generated@@194 $generated@@193 $generated@@50 false)) (=> (and (and (or (= $generated@@197 ($generated@@162 0.0)) (and (<= ($generated@@162 10.0) $generated@@197) (<= $generated@@197 ($generated@@162 20.0)))) (or (= $generated@@198 ($generated@@162 0.0)) (and (<= ($generated@@162 10.0) $generated@@198) (<= $generated@@198 ($generated@@162 20.0))))) (and (= $generated@@196 (- $generated@@198 $generated@@197)) (= (ControlFlow 0 17) 16))) $generated@@213))))
(let (($generated@@219  (=> (and (and (and ($generated@@199 $generated@@193) ($generated@@200 $generated@@193)) (and (or (= $generated@@201 ($generated@@162 0.0)) (and (<= ($generated@@162 10.0) $generated@@201) (<= $generated@@201 ($generated@@162 20.0)))) true)) (and (and (or (= $generated@@202 ($generated@@162 0.0)) (and (<= ($generated@@162 10.0) $generated@@202) (<= $generated@@202 ($generated@@162 20.0)))) true) (and (= 1 $generated@@203) (= (ControlFlow 0 18) 17)))) $generated@@218)))
$generated@@219)))))))))))))
))
(check-sat)
(get-info :reason-unknown)
(assert (not (= (ControlFlow 0 3) (- 2))))
(check-sat)
(pop 1)
; Invalid
(get-info :rlimit)
(reset)
(set-option :rlimit 0)
; did a full reset
(reset)
(set-option :print-success false)
(set-info :smt-lib-version 2.6)
(set-option :auto_config false)
(set-option :type_check true)
(set-option :smt.case_split 3)
(set-option :smt.qi.eager_threshold 100)
(set-option :smt.delay_units true)
(set-option :smt.arith.solver 2)
(set-option :smt.mbqi false)
(set-option :model.compact false)
(set-option :model.v2 true)
(set-option :pp.bv_literals false)
; done setting options


(set-info :category "industrial")
(declare-sort |T@U| 0)
(declare-sort |T@T| 0)
(declare-fun real_pow (Real Real) Real)
(declare-fun UOrdering2 (|T@U| |T@U|) Bool)
(declare-fun UOrdering3 (|T@T| |T@U| |T@U|) Bool)
(declare-fun tickleBool (Bool) Bool)
(assert (and (tickleBool true) (tickleBool false)))
(declare-fun $generated (T@U) Int)
(declare-fun $generated@@0 (T@U) Bool)
(declare-fun $generated@@1 (T@T) Int)
(declare-fun $generated@@2 () T@T)
(declare-fun $generated@@3 () T@T)
(declare-fun $generated@@4 () T@T)
(declare-fun $generated@@5 () T@T)
(declare-fun $generated@@6 () T@T)
(declare-fun $generated@@7 () T@T)
(declare-fun $generated@@8 (Int) T@U)
(declare-fun type (T@U) T@T)
(declare-fun $generated@@9 (Real) T@U)
(declare-fun $generated@@10 (T@U) Real)
(declare-fun $generated@@11 (Bool) T@U)
(declare-fun $generated@@12 (RoundingMode) T@U)
(declare-fun $generated@@13 (T@U) RoundingMode)
(declare-fun $generated@@14 (String) T@U)
(declare-fun $generated@@15 (T@U) String)
(declare-fun $generated@@16 ((RegEx String)) T@U)
(declare-fun $generated@@17 (T@U) (RegEx String))
(declare-fun $generated@@44 (T@U T@U T@U) T@U)
(declare-fun $generated@@45 (T@U T@U T@U Bool) T@U)
(declare-fun $generated@@46 (T@T) T@T)
(declare-fun $generated@@47 () T@T)
(declare-fun $generated@@48 (T@T T@T) T@T)
(declare-fun $generated@@49 () T@T)
(declare-fun $generated@@50 (T@T) T@T)
(declare-fun $generated@@51 (T@U T@U) T@U)
(declare-fun $generated@@52 (T@U T@U) T@U)
(declare-fun $generated@@53 (T@T) T@T)
(declare-fun $generated@@54 (T@T) T@T)
(declare-fun $generated@@55 (T@U T@U T@U) T@U)
(declare-fun $generated@@56 (T@U T@U T@U) T@U)
(declare-fun $generated@@57 (T@T T@T) T@T)
(declare-fun $generated@@58 (T@T) T@T)
(declare-fun $generated@@59 (T@T) T@T)
(declare-fun $generated@@60 (T@U T@U T@U T@U) T@U)
(declare-fun $generated@@157 (Int) Int)
(declare-fun $generated@@159 (T@U) T@U)
(declare-fun $generated@@163 (T@T) T@U)
(declare-fun $generated@@164 (T@U) Int)
(declare-fun $generated@@165 (T@T) T@T)
(declare-fun $generated@@166 (T@T) T@T)
(declare-fun $generated@@171 (T@U T@U) T@U)
(declare-fun $generated@@178 (T@U Int) T@U)
(declare-fun $generated@@188 (T@U) T@U)
(declare-fun $generated@@189 (T@T T@U) T@U)
(declare-fun $generated@@190 () T@T)
(declare-fun $generated@@196 (Int Int) Int)
(declare-fun $generated@@199 (T@U) T@U)
(declare-fun $generated@@200 (T@U) T@U)
(assert  (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (= ($generated@@1 $generated@@2) 0) (= ($generated@@1 $generated@@3) 1)) (= ($generated@@1 $generated@@4) 2)) (= ($generated@@1 $generated@@5) 3)) (= ($generated@@1 $generated@@6) 4)) (= ($generated@@1 $generated@@7) 5)) (forall (($generated@@18 Int) ) (! (= ($generated ($generated@@8 $generated@@18)) $generated@@18)
 :pattern ( ($generated@@8 $generated@@18))
))) (forall (($generated@@19 T@U) ) (!  (=> (= (type $generated@@19) $generated@@2) (= ($generated@@8 ($generated $generated@@19)) $generated@@19))
 :pattern ( ($generated $generated@@19))
))) (forall (($generated@@20 Int) ) (! (= (type ($generated@@8 $generated@@20)) $generated@@2)
 :pattern ( ($generated@@8 $generated@@20))
))) (forall (($generated@@21 Real) ) (! (= ($generated@@10 ($generated@@9 $generated@@21)) $generated@@21)
 :pattern ( ($generated@@9 $generated@@21))
))) (forall (($generated@@22 T@U) ) (!  (=> (= (type $generated@@22) $generated@@3) (= ($generated@@9 ($generated@@10 $generated@@22)) $generated@@22))
 :pattern ( ($generated@@10 $generated@@22))
))) (forall (($generated@@23 Real) ) (! (= (type ($generated@@9 $generated@@23)) $generated@@3)
 :pattern ( ($generated@@9 $generated@@23))
))) (forall (($generated@@24 Bool) ) (! (= ($generated@@0 ($generated@@11 $generated@@24)) $generated@@24)
 :pattern ( ($generated@@11 $generated@@24))
))) (forall (($generated@@25 T@U) ) (!  (=> (= (type $generated@@25) $generated@@4) (= ($generated@@11 ($generated@@0 $generated@@25)) $generated@@25))
 :pattern ( ($generated@@0 $generated@@25))
))) (forall (($generated@@26 Bool) ) (! (= (type ($generated@@11 $generated@@26)) $generated@@4)
 :pattern ( ($generated@@11 $generated@@26))
))) (forall (($generated@@27 RoundingMode) ) (! (= ($generated@@13 ($generated@@12 $generated@@27)) $generated@@27)
 :pattern ( ($generated@@12 $generated@@27))
))) (forall (($generated@@28 T@U) ) (!  (=> (= (type $generated@@28) $generated@@5) (= ($generated@@12 ($generated@@13 $generated@@28)) $generated@@28))
 :pattern ( ($generated@@13 $generated@@28))
))) (forall (($generated@@29 RoundingMode) ) (! (= (type ($generated@@12 $generated@@29)) $generated@@5)
 :pattern ( ($generated@@12 $generated@@29))
))) (forall (($generated@@30 String) ) (! (= ($generated@@15 ($generated@@14 $generated@@30)) $generated@@30)
 :pattern ( ($generated@@14 $generated@@30))
))) (forall (($generated@@31 T@U) ) (!  (=> (= (type $generated@@31) $generated@@6) (= ($generated@@14 ($generated@@15 $generated@@31)) $generated@@31))
 :pattern ( ($generated@@15 $generated@@31))
))) (forall (($generated@@32 String) ) (! (= (type ($generated@@14 $generated@@32)) $generated@@6)
 :pattern ( ($generated@@14 $generated@@32))
))) (forall (($generated@@33 (RegEx String)) ) (! (= ($generated@@17 ($generated@@16 $generated@@33)) $generated@@33)
 :pattern ( ($generated@@16 $generated@@33))
))) (forall (($generated@@34 T@U) ) (!  (=> (= (type $generated@@34) $generated@@7) (= ($generated@@16 ($generated@@17 $generated@@34)) $generated@@34))
 :pattern ( ($generated@@17 $generated@@34))
))) (forall (($generated@@35 (RegEx String)) ) (! (= (type ($generated@@16 $generated@@35)) $generated@@7)
 :pattern ( ($generated@@16 $generated@@35))
))))
(assert (forall (($generated@@36 T@U) ) (! (UOrdering2 $generated@@36 $generated@@36)
 :no-pattern ($generated $generated@@36)
 :no-pattern ($generated@@0 $generated@@36)
)))
(assert (forall (($generated@@37 T@U) ($generated@@38 T@U) ($generated@@39 T@U) ) (! (let (($generated@@40 (type $generated@@37)))
 (=> (and (and (= (type $generated@@38) $generated@@40) (= (type $generated@@39) $generated@@40)) (and (UOrdering2 $generated@@37 $generated@@38) (UOrdering2 $generated@@38 $generated@@39))) (UOrdering2 $generated@@37 $generated@@39)))
 :pattern ( (UOrdering2 $generated@@37 $generated@@38) (UOrdering2 $generated@@38 $generated@@39))
)))
(assert (forall (($generated@@41 T@U) ($generated@@42 T@U) ) (! (let (($generated@@43 (type $generated@@41)))
 (=> (= (type $generated@@42) $generated@@43) (=> (and (UOrdering2 $generated@@41 $generated@@42) (UOrdering2 $generated@@42 $generated@@41)) (= $generated@@41 $generated@@42))))
 :pattern ( (UOrdering2 $generated@@41 $generated@@42) (UOrdering2 $generated@@42 $generated@@41))
)))
(assert  (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (forall (($generated@@61 T@T) ($generated@@62 T@T) ) (= ($generated@@1 ($generated@@48 $generated@@61 $generated@@62)) 6)) (forall (($generated@@63 T@T) ($generated@@64 T@T) ) (! (= ($generated@@53 ($generated@@48 $generated@@63 $generated@@64)) $generated@@63)
 :pattern ( ($generated@@48 $generated@@63 $generated@@64))
))) (forall (($generated@@65 T@T) ($generated@@66 T@T) ) (! (= ($generated@@54 ($generated@@48 $generated@@65 $generated@@66)) $generated@@66)
 :pattern ( ($generated@@48 $generated@@65 $generated@@66))
))) (forall (($generated@@67 T@U) ($generated@@68 T@U) ) (! (let (($generated@@69 ($generated@@54 (type $generated@@67))))
(= (type ($generated@@52 $generated@@67 $generated@@68)) $generated@@69))
 :pattern ( ($generated@@52 $generated@@67 $generated@@68))
))) (forall (($generated@@70 T@U) ($generated@@71 T@U) ($generated@@72 T@U) ) (! (let (($generated@@73 (type $generated@@72)))
(let (($generated@@74 (type $generated@@71)))
(= (type ($generated@@55 $generated@@70 $generated@@71 $generated@@72)) ($generated@@48 $generated@@74 $generated@@73))))
 :pattern ( ($generated@@55 $generated@@70 $generated@@71 $generated@@72))
))) (forall (($generated@@75 T@U) ($generated@@76 T@U) ($generated@@77 T@U) ) (! (let (($generated@@78 ($generated@@54 (type $generated@@75))))
 (=> (= (type $generated@@77) $generated@@78) (= ($generated@@52 ($generated@@55 $generated@@75 $generated@@76 $generated@@77) $generated@@76) $generated@@77)))
 :weight 0
))) (and (forall (($generated@@79 T@U) ($generated@@80 T@U) ($generated@@81 T@U) ($generated@@82 T@U) ) (!  (or (= $generated@@81 $generated@@82) (= ($generated@@52 ($generated@@55 $generated@@80 $generated@@81 $generated@@79) $generated@@82) ($generated@@52 $generated@@80 $generated@@82)))
 :weight 0
)) (forall (($generated@@83 T@U) ($generated@@84 T@U) ($generated@@85 T@U) ($generated@@86 T@U) ) (!  (or true (= ($generated@@52 ($generated@@55 $generated@@84 $generated@@85 $generated@@83) $generated@@86) ($generated@@52 $generated@@84 $generated@@86)))
 :weight 0
)))) (forall (($generated@@87 T@T) ) (= ($generated@@1 ($generated@@50 $generated@@87)) 7))) (forall (($generated@@88 T@T) ) (! (= ($generated@@46 ($generated@@50 $generated@@88)) $generated@@88)
 :pattern ( ($generated@@50 $generated@@88))
))) (forall (($generated@@89 T@U) ($generated@@90 T@U) ) (! (let (($generated@@91 ($generated@@46 (type $generated@@90))))
(= (type ($generated@@51 $generated@@89 $generated@@90)) $generated@@91))
 :pattern ( ($generated@@51 $generated@@89 $generated@@90))
))) (= ($generated@@1 $generated@@49) 8)) (forall (($generated@@92 T@U) ($generated@@93 T@U) ($generated@@94 T@U) ) (! (= (type ($generated@@56 $generated@@92 $generated@@93 $generated@@94)) $generated@@49)
 :pattern ( ($generated@@56 $generated@@92 $generated@@93 $generated@@94))
))) (forall (($generated@@95 T@U) ($generated@@96 T@U) ($generated@@97 T@U) ) (! (let (($generated@@98 ($generated@@46 (type $generated@@96))))
 (=> (= (type $generated@@97) $generated@@98) (= ($generated@@51 ($generated@@56 $generated@@95 $generated@@96 $generated@@97) $generated@@96) $generated@@97)))
 :weight 0
))) (and (forall (($generated@@99 T@U) ($generated@@100 T@U) ($generated@@101 T@U) ($generated@@102 T@U) ) (!  (or (= $generated@@101 $generated@@102) (= ($generated@@51 ($generated@@56 $generated@@100 $generated@@101 $generated@@99) $generated@@102) ($generated@@51 $generated@@100 $generated@@102)))
 :weight 0
)) (forall (($generated@@103 T@U) ($generated@@104 T@U) ($generated@@105 T@U) ($generated@@106 T@U) ) (!  (or true (= ($generated@@51 ($generated@@56 $generated@@104 $generated@@105 $generated@@103) $generated@@106) ($generated@@51 $generated@@104 $generated@@106)))
 :weight 0
)))) (= ($generated@@1 $generated@@47) 9)) (forall (($generated@@107 T@T) ($generated@@108 T@T) ) (= ($generated@@1 ($generated@@57 $generated@@107 $generated@@108)) 10))) (forall (($generated@@109 T@T) ($generated@@110 T@T) ) (! (= ($generated@@58 ($generated@@57 $generated@@109 $generated@@110)) $generated@@109)
 :pattern ( ($generated@@57 $generated@@109 $generated@@110))
))) (forall (($generated@@111 T@T) ($generated@@112 T@T) ) (! (= ($generated@@59 ($generated@@57 $generated@@111 $generated@@112)) $generated@@112)
 :pattern ( ($generated@@57 $generated@@111 $generated@@112))
))) (forall (($generated@@113 T@U) ($generated@@114 T@U) ($generated@@115 T@U) ) (! (let (($generated@@116 ($generated@@59 (type $generated@@113))))
(= (type ($generated@@44 $generated@@113 $generated@@114 $generated@@115)) $generated@@116))
 :pattern ( ($generated@@44 $generated@@113 $generated@@114 $generated@@115))
))) (forall (($generated@@117 T@U) ($generated@@118 T@U) ($generated@@119 T@U) ($generated@@120 T@U) ) (! (let (($generated@@121 (type $generated@@120)))
(let (($generated@@122 (type $generated@@118)))
(= (type ($generated@@60 $generated@@117 $generated@@118 $generated@@119 $generated@@120)) ($generated@@57 $generated@@122 $generated@@121))))
 :pattern ( ($generated@@60 $generated@@117 $generated@@118 $generated@@119 $generated@@120))
))) (forall (($generated@@123 T@U) ($generated@@124 T@U) ($generated@@125 T@U) ($generated@@126 T@U) ) (! (let (($generated@@127 ($generated@@59 (type $generated@@123))))
 (=> (= (type $generated@@126) $generated@@127) (= ($generated@@44 ($generated@@60 $generated@@123 $generated@@124 $generated@@125 $generated@@126) $generated@@124 $generated@@125) $generated@@126)))
 :weight 0
))) (and (and (forall (($generated@@128 T@U) ($generated@@129 T@U) ($generated@@130 T@U) ($generated@@131 T@U) ($generated@@132 T@U) ($generated@@133 T@U) ) (!  (or (= $generated@@130 $generated@@132) (= ($generated@@44 ($generated@@60 $generated@@129 $generated@@130 $generated@@131 $generated@@128) $generated@@132 $generated@@133) ($generated@@44 $generated@@129 $generated@@132 $generated@@133)))
 :weight 0
)) (forall (($generated@@134 T@U) ($generated@@135 T@U) ($generated@@136 T@U) ($generated@@137 T@U) ($generated@@138 T@U) ($generated@@139 T@U) ) (!  (or (= $generated@@137 $generated@@139) (= ($generated@@44 ($generated@@60 $generated@@135 $generated@@136 $generated@@137 $generated@@134) $generated@@138 $generated@@139) ($generated@@44 $generated@@135 $generated@@138 $generated@@139)))
 :weight 0
))) (forall (($generated@@140 T@U) ($generated@@141 T@U) ($generated@@142 T@U) ($generated@@143 T@U) ($generated@@144 T@U) ($generated@@145 T@U) ) (!  (or true (= ($generated@@44 ($generated@@60 $generated@@141 $generated@@142 $generated@@143 $generated@@140) $generated@@144 $generated@@145) ($generated@@44 $generated@@141 $generated@@144 $generated@@145)))
 :weight 0
)))) (forall (($generated@@146 T@U) ($generated@@147 T@U) ($generated@@148 T@U) ($generated@@149 Bool) ) (! (= (type ($generated@@45 $generated@@146 $generated@@147 $generated@@148 $generated@@149)) ($generated@@57 $generated@@47 $generated@@4))
 :pattern ( ($generated@@45 $generated@@146 $generated@@147 $generated@@148 $generated@@149))
))))
(assert (forall (($generated@@150 T@U) ($generated@@151 T@U) ($generated@@152 T@U) ($generated@@153 Bool) ($generated@@154 T@U) ($generated@@155 T@U) ) (! (let (($generated@@156 ($generated@@46 (type $generated@@155))))
 (=> (and (and (and (and (= (type $generated@@150) $generated@@47) (= (type $generated@@151) ($generated@@48 $generated@@47 $generated@@49))) (= (type $generated@@152) ($generated@@50 $generated@@4))) (= (type $generated@@154) $generated@@47)) (= (type $generated@@155) ($generated@@50 $generated@@156))) (= ($generated@@0 ($generated@@44 ($generated@@45 $generated@@150 $generated@@151 $generated@@152 $generated@@153) $generated@@154 $generated@@155))  (=> (and (not (= $generated@@154 $generated@@150)) ($generated@@0 ($generated@@51 ($generated@@52 $generated@@151 $generated@@154) $generated@@152))) $generated@@153))))
 :pattern ( ($generated@@44 ($generated@@45 $generated@@150 $generated@@151 $generated@@152 $generated@@153) $generated@@154 $generated@@155))
)))
(assert (forall (($generated@@158 Int) ) (! (= ($generated@@157 $generated@@158) $generated@@158)
 :pattern ( ($generated@@157 $generated@@158))
)))
(assert (forall (($generated@@160 T@U) ) (! (let (($generated@@161 (type $generated@@160)))
(= (type ($generated@@159 $generated@@160)) $generated@@161))
 :pattern ( ($generated@@159 $generated@@160))
)))
(assert (forall (($generated@@162 T@U) ) (! (= ($generated@@159 $generated@@162) $generated@@162)
 :pattern ( ($generated@@159 $generated@@162))
)))
(assert  (and (and (forall (($generated@@167 T@T) ) (= ($generated@@1 ($generated@@165 $generated@@167)) 11)) (forall (($generated@@168 T@T) ) (! (= ($generated@@166 ($generated@@165 $generated@@168)) $generated@@168)
 :pattern ( ($generated@@165 $generated@@168))
))) (forall (($generated@@169 T@T) ) (! (= (type ($generated@@163 $generated@@169)) ($generated@@165 $generated@@169))
 :pattern ( ($generated@@163 $generated@@169))
))))
(assert (forall (($generated@@170 T@T) ) (! (= ($generated@@164 ($generated@@163 $generated@@170)) 0)
 :pattern ( ($generated@@163 $generated@@170))
)))
(assert (forall (($generated@@172 T@U) ($generated@@173 T@U) ) (! (let (($generated@@174 (type $generated@@173)))
(= (type ($generated@@171 $generated@@172 $generated@@173)) ($generated@@165 $generated@@174)))
 :pattern ( ($generated@@171 $generated@@172 $generated@@173))
)))
(assert (forall (($generated@@175 T@U) ($generated@@176 T@U) ) (! (let (($generated@@177 (type $generated@@176)))
 (=> (= (type $generated@@175) ($generated@@165 $generated@@177)) (= ($generated@@164 ($generated@@171 $generated@@175 $generated@@176)) (+ 1 ($generated@@164 $generated@@175)))))
 :pattern ( ($generated@@171 $generated@@175 $generated@@176))
)))
(assert (forall (($generated@@179 T@U) ($generated@@180 Int) ) (! (let (($generated@@181 ($generated@@166 (type $generated@@179))))
(= (type ($generated@@178 $generated@@179 $generated@@180)) $generated@@181))
 :pattern ( ($generated@@178 $generated@@179 $generated@@180))
)))
(assert (forall (($generated@@182 T@U) ($generated@@183 Int) ($generated@@184 T@U) ) (! (let (($generated@@185 (type $generated@@184)))
 (=> (= (type $generated@@182) ($generated@@165 $generated@@185)) (and (=> (= $generated@@183 ($generated@@164 $generated@@182)) (= ($generated@@178 ($generated@@171 $generated@@182 $generated@@184) $generated@@183) $generated@@184)) (=> (not (= $generated@@183 ($generated@@164 $generated@@182))) (= ($generated@@178 ($generated@@171 $generated@@182 $generated@@184) $generated@@183) ($generated@@178 $generated@@182 $generated@@183))))))
 :pattern ( ($generated@@178 ($generated@@171 $generated@@182 $generated@@184) $generated@@183))
)))
(assert (forall (($generated@@186 T@U) ) (! (let (($generated@@187 ($generated@@166 (type $generated@@186))))
 (=> (= (type $generated@@186) ($generated@@165 $generated@@187)) (<= 0 ($generated@@164 $generated@@186))))
 :pattern ( ($generated@@164 $generated@@186))
)))
(assert  (and (and (= ($generated@@1 $generated@@190) 12) (forall (($generated@@191 T@U) ) (! (= (type ($generated@@188 $generated@@191)) $generated@@190)
 :pattern ( ($generated@@188 $generated@@191))
))) (forall (($generated@@192 T@T) ($generated@@193 T@U) ) (! (= (type ($generated@@189 $generated@@192 $generated@@193)) $generated@@192)
 :pattern ( ($generated@@189 $generated@@192 $generated@@193))
))))
(assert (forall (($generated@@194 T@U) ) (! (let (($generated@@195 (type $generated@@194)))
(= ($generated@@189 $generated@@195 ($generated@@188 $generated@@194)) $generated@@194))
 :pattern ( ($generated@@188 $generated@@194))
)))
(assert (forall (($generated@@197 Int) ($generated@@198 Int) ) (! (= ($generated@@196 $generated@@197 $generated@@198) (mod $generated@@197 $generated@@198))
 :pattern ( ($generated@@196 $generated@@197 $generated@@198))
)))
(assert  (and (forall (($generated@@201 T@U) ) (! (let (($generated@@202 ($generated@@166 (type $generated@@201))))
(= (type ($generated@@199 $generated@@201)) ($generated@@165 $generated@@202)))
 :pattern ( ($generated@@199 $generated@@201))
)) (forall (($generated@@203 T@U) ) (! (let (($generated@@204 ($generated@@166 (type $generated@@203))))
(= (type ($generated@@200 $generated@@203)) $generated@@204))
 :pattern ( ($generated@@200 $generated@@203))
))))
(assert (forall (($generated@@205 T@U) ($generated@@206 T@U) ) (! (let (($generated@@207 (type $generated@@206)))
 (=> (= (type $generated@@205) ($generated@@165 $generated@@207)) (and (= ($generated@@199 ($generated@@171 $generated@@205 $generated@@206)) $generated@@205) (= ($generated@@200 ($generated@@171 $generated@@205 $generated@@206)) $generated@@206))))
 :pattern ( ($generated@@171 $generated@@205 $generated@@206))
)))
(assert (forall (($generated@@208 Int) ) (! (= ($generated@@188 ($generated@@8 ($generated@@157 $generated@@208))) ($generated@@159 ($generated@@188 ($generated@@8 $generated@@208))))
 :pattern ( ($generated@@188 ($generated@@8 ($generated@@157 $generated@@208))))
)))
(assert (forall (($generated@@209 T@U) ) (! (= ($generated@@188 ($generated@@159 $generated@@209)) ($generated@@159 ($generated@@188 $generated@@209)))
 :pattern ( ($generated@@188 ($generated@@159 $generated@@209)))
)))
(assert (forall (($generated@@210 T@U) ) (! (let (($generated@@211 ($generated@@166 (type $generated@@210))))
 (=> (and (= (type $generated@@210) ($generated@@165 $generated@@211)) (= ($generated@@164 $generated@@210) 0)) (= $generated@@210 ($generated@@163 $generated@@211))))
 :pattern ( ($generated@@164 $generated@@210))
)))
(push 1)
(declare-fun ControlFlow (Int Int) Int)
(declare-fun $generated@@212 () Int)
(declare-fun $generated@@213 () T@U)
(declare-fun $generated@@214 () T@U)
(declare-fun $generated@@215 () T@U)
(declare-fun $generated@@216 () T@U)
(declare-fun $generated@@217 (T@U) Bool)
(declare-fun $generated@@218 (T@U) Bool)
(declare-fun $generated@@219 () Int)
(assert  (and (and (and (= (type $generated@@213) ($generated@@57 $generated@@47 $generated@@4)) (= (type $generated@@214) $generated@@47)) (= (type $generated@@215) ($generated@@48 $generated@@47 $generated@@49))) (= (type $generated@@216) ($generated@@50 $generated@@4))))
(set-option :timeout 0)
(set-option :rlimit 0)
(assert (not
 (=> (= (ControlFlow 0 0) 11) (let (($generated@@220  (=> (and (<= ($generated@@157 0) $generated@@212) (< $generated@@212 3)) (and (=> (= (ControlFlow 0 6) (- 0 7)) (and (<= 0 $generated@@212) (< $generated@@212 ($generated@@164 ($generated@@159 ($generated@@171 ($generated@@171 ($generated@@171 ($generated@@163 $generated@@190) ($generated@@188 ($generated@@8 ($generated@@157 5)))) ($generated@@188 ($generated@@8 ($generated@@157 7)))) ($generated@@188 ($generated@@8 ($generated@@157 8))))))))) (=> (and (<= 0 $generated@@212) (< $generated@@212 ($generated@@164 ($generated@@159 ($generated@@171 ($generated@@171 ($generated@@171 ($generated@@163 $generated@@190) ($generated@@188 ($generated@@8 ($generated@@157 5)))) ($generated@@188 ($generated@@8 ($generated@@157 7)))) ($generated@@188 ($generated@@8 ($generated@@157 8)))))))) (=> (= (ControlFlow 0 6) (- 0 5)) (not (= ($generated@@157 2) 0))))))))
(let (($generated@@221  (=> (and (< $generated@@212 ($generated@@157 0)) (= (ControlFlow 0 9) 6)) $generated@@220)))
(let (($generated@@222  (=> (and (<= ($generated@@157 0) $generated@@212) (= (ControlFlow 0 8) 6)) $generated@@220)))
(let (($generated@@223  (and (=> (= (ControlFlow 0 2) (- 0 4)) (<= ($generated@@157 0) ($generated@@157 0))) (and (=> (= (ControlFlow 0 2) (- 0 3)) ($generated@@0 ($generated@@159 ($generated@@11 (< 0 3))))) (=> (= (ControlFlow 0 2) (- 0 1)) (not (= ($generated@@196 ($generated ($generated@@189 $generated@@2 ($generated@@178 ($generated@@159 ($generated@@171 ($generated@@171 ($generated@@171 ($generated@@163 $generated@@190) ($generated@@188 ($generated@@8 ($generated@@157 5)))) ($generated@@188 ($generated@@8 ($generated@@157 7)))) ($generated@@188 ($generated@@8 ($generated@@157 8))))) ($generated@@157 0)))) ($generated@@157 2)) 0)))))))
(let (($generated@@224  (=> (= $generated@@213 ($generated@@45 $generated@@214 $generated@@215 $generated@@216 false)) (and (and (=> (= (ControlFlow 0 10) 2) $generated@@223) (=> (= (ControlFlow 0 10) 8) $generated@@222)) (=> (= (ControlFlow 0 10) 9) $generated@@221)))))
(let (($generated@@225  (=> (and (and ($generated@@217 $generated@@215) ($generated@@218 $generated@@215)) (and (= 0 $generated@@219) (= (ControlFlow 0 11) 10))) $generated@@224)))
$generated@@225)))))))
))
(check-sat)
(pop 1)
; Valid
(get-info :rlimit)
(reset)
(set-option :rlimit 0)
; did a full reset
(reset)
(set-option :print-success false)
(set-info :smt-lib-version 2.6)
(set-option :auto_config false)
(set-option :type_check true)
(set-option :smt.case_split 3)
(set-option :smt.qi.eager_threshold 100)
(set-option :smt.delay_units true)
(set-option :smt.arith.solver 2)
(set-option :smt.mbqi false)
(set-option :model.compact false)
(set-option :model.v2 true)
(set-option :pp.bv_literals false)
; done setting options


(set-info :category "industrial")
(declare-sort |T@U| 0)
(declare-sort |T@T| 0)
(declare-fun real_pow (Real Real) Real)
(declare-fun UOrdering2 (|T@U| |T@U|) Bool)
(declare-fun UOrdering3 (|T@T| |T@U| |T@U|) Bool)
(declare-fun tickleBool (Bool) Bool)
(assert (and (tickleBool true) (tickleBool false)))
(declare-fun $generated (T@U) Int)
(declare-fun $generated@@0 (T@U) Bool)
(declare-fun $generated@@1 (T@T) Int)
(declare-fun $generated@@2 () T@T)
(declare-fun $generated@@3 () T@T)
(declare-fun $generated@@4 () T@T)
(declare-fun $generated@@5 () T@T)
(declare-fun $generated@@6 () T@T)
(declare-fun $generated@@7 () T@T)
(declare-fun $generated@@8 (Int) T@U)
(declare-fun type (T@U) T@T)
(declare-fun $generated@@9 (Real) T@U)
(declare-fun $generated@@10 (T@U) Real)
(declare-fun $generated@@11 (Bool) T@U)
(declare-fun $generated@@12 (RoundingMode) T@U)
(declare-fun $generated@@13 (T@U) RoundingMode)
(declare-fun $generated@@14 (String) T@U)
(declare-fun $generated@@15 (T@U) String)
(declare-fun $generated@@16 ((RegEx String)) T@U)
(declare-fun $generated@@17 (T@U) (RegEx String))
(declare-fun $generated@@44 () T@U)
(declare-fun $generated@@45 () T@U)
(declare-fun $generated@@46 () T@U)
(declare-fun $generated@@47 () T@U)
(declare-fun $generated@@48 () T@U)
(declare-fun $generated@@49 () T@U)
(declare-fun $generated@@50 () T@U)
(declare-fun $generated@@51 () T@U)
(declare-fun $generated@@52 () T@U)
(declare-fun $generated@@53 () T@U)
(declare-fun $generated@@54 () T@U)
(declare-fun $generated@@55 () T@U)
(declare-fun $generated@@56 () T@U)
(declare-fun $generated@@57 () T@U)
(declare-fun $generated@@58 () T@U)
(declare-fun $generated@@59 () T@U)
(declare-fun $generated@@60 () T@U)
(declare-fun $generated@@61 () T@U)
(declare-fun $generated@@62 () T@U)
(declare-fun $generated@@63 () T@U)
(declare-fun $generated@@64 () T@T)
(declare-fun $generated@@65 () T@T)
(declare-fun $generated@@66 (T@T) T@T)
(declare-fun $generated@@67 (T@T) T@T)
(declare-fun $generated@@68 () T@T)
(declare-fun $generated@@69 () T@T)
(declare-fun $generated@@72 (T@U) T@U)
(declare-fun $generated@@74 (T@U T@U T@U) Bool)
(declare-fun $generated@@75 (Int) T@U)
(declare-fun $generated@@76 (T@T T@T) T@T)
(declare-fun $generated@@77 () T@T)
(declare-fun $generated@@78 () T@T)
(declare-fun $generated@@79 (T@T) T@T)
(declare-fun $generated@@80 (T@T) T@T)
(declare-fun $generated@@81 (T@U T@U) T@U)
(declare-fun $generated@@82 (T@U T@U T@U) T@U)
(declare-fun $generated@@83 (T@U T@U) T@U)
(declare-fun $generated@@84 (T@U T@U T@U) T@U)
(declare-fun $generated@@132 (T@U T@U) Bool)
(declare-fun $generated@@136 (T@U T@U) Bool)
(declare-fun $generated@@138 (T@U) Bool)
(declare-fun $generated@@139 (T@U T@U) T@U)
(declare-fun $generated@@140 () T@T)
(declare-fun $generated@@146 (T@U T@U) Bool)
(declare-fun $generated@@147 (T@U) T@U)
(declare-fun $generated@@148 (T@U) T@U)
(declare-fun $generated@@149 () T@T)
(declare-fun $generated@@154 (T@U) T@U)
(declare-fun $generated@@155 (T@U) Bool)
(declare-fun $generated@@159 (T@U T@U T@U) T@U)
(declare-fun $generated@@160 (T@U T@U T@U Bool) T@U)
(declare-fun $generated@@161 (T@T T@T) T@T)
(declare-fun $generated@@162 (T@T) T@T)
(declare-fun $generated@@163 (T@T) T@T)
(declare-fun $generated@@164 (T@U T@U T@U T@U) T@U)
(declare-fun $generated@@215 (T@U T@U) T@U)
(declare-fun $generated@@216 (T@U T@U) Bool)
(declare-fun $generated@@225 (T@U) T@U)
(declare-fun $generated@@230 (T@U) T@U)
(declare-fun $generated@@235 (Int) Int)
(declare-fun $generated@@237 (T@U) T@U)
(declare-fun $generated@@241 (T@U) Bool)
(declare-fun $generated@@242 (T@U T@U T@U) Bool)
(declare-fun $generated@@248 (T@U) T@U)
(declare-fun $generated@@254 (T@T) T@U)
(declare-fun $generated@@255 (T@U) Int)
(declare-fun $generated@@256 (T@T) T@T)
(declare-fun $generated@@257 (T@T) T@T)
(declare-fun $generated@@262 (T@U) T@U)
(declare-fun $generated@@275 (T@U) Int)
(declare-fun $generated@@276 (T@T) T@U)
(declare-fun $generated@@281 (T@U) T@U)
(declare-fun $generated@@282 (T@T T@T) T@U)
(declare-fun $generated@@283 (T@T T@T) T@T)
(declare-fun $generated@@284 (T@T) T@T)
(declare-fun $generated@@285 (T@T) T@T)
(declare-fun $generated@@299 (T@U) T@U)
(declare-fun $generated@@300 (T@T T@T) T@U)
(declare-fun $generated@@301 (T@T T@T) T@T)
(declare-fun $generated@@302 (T@T) T@T)
(declare-fun $generated@@303 (T@T) T@T)
(declare-fun $generated@@324 (T@U) T@U)
(declare-fun $generated@@335 (T@U) T@U)
(declare-fun $generated@@355 (T@U) T@U)
(declare-fun $generated@@356 (T@T T@U) T@U)
(declare-fun $generated@@357 (T@U) T@U)
(declare-fun $generated@@366 (T@U) T@U)
(declare-fun $generated@@367 (T@U) T@U)
(declare-fun $generated@@384 (T@U T@U) T@U)
(declare-fun $generated@@392 (T@U T@U) T@U)
(declare-fun $generated@@403 (T@T) T@U)
(declare-fun $generated@@427 () T@T)
(declare-fun $generated@@435 (T@U) T@U)
(declare-fun $generated@@439 (T@U) T@U)
(declare-fun $generated@@445 (T@U) T@U)
(declare-fun $generated@@449 (T@U) T@U)
(declare-fun $generated@@457 (T@U) T@U)
(declare-fun $generated@@461 (T@U) T@U)
(declare-fun $generated@@469 (T@U) T@U)
(declare-fun $generated@@470 (T@U Int) T@U)
(declare-fun $generated@@479 (T@U) Int)
(declare-fun $generated@@481 (T@U) T@U)
(declare-fun $generated@@485 (T@U) T@U)
(declare-fun $generated@@489 (T@U) T@U)
(declare-fun $generated@@493 (T@U) T@U)
(declare-fun $generated@@507 (T@U) Int)
(declare-fun $generated@@508 (T@U) Int)
(declare-fun $generated@@524 (Int Int) Int)
(declare-fun $generated@@527 (T@U) T@U)
(declare-fun $generated@@576 (T@U) Int)
(assert  (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (= ($generated@@1 $generated@@2) 0) (= ($generated@@1 $generated@@3) 1)) (= ($generated@@1 $generated@@4) 2)) (= ($generated@@1 $generated@@5) 3)) (= ($generated@@1 $generated@@6) 4)) (= ($generated@@1 $generated@@7) 5)) (forall (($generated@@18 Int) ) (! (= ($generated ($generated@@8 $generated@@18)) $generated@@18)
 :pattern ( ($generated@@8 $generated@@18))
))) (forall (($generated@@19 T@U) ) (!  (=> (= (type $generated@@19) $generated@@2) (= ($generated@@8 ($generated $generated@@19)) $generated@@19))
 :pattern ( ($generated $generated@@19))
))) (forall (($generated@@20 Int) ) (! (= (type ($generated@@8 $generated@@20)) $generated@@2)
 :pattern ( ($generated@@8 $generated@@20))
))) (forall (($generated@@21 Real) ) (! (= ($generated@@10 ($generated@@9 $generated@@21)) $generated@@21)
 :pattern ( ($generated@@9 $generated@@21))
))) (forall (($generated@@22 T@U) ) (!  (=> (= (type $generated@@22) $generated@@3) (= ($generated@@9 ($generated@@10 $generated@@22)) $generated@@22))
 :pattern ( ($generated@@10 $generated@@22))
))) (forall (($generated@@23 Real) ) (! (= (type ($generated@@9 $generated@@23)) $generated@@3)
 :pattern ( ($generated@@9 $generated@@23))
))) (forall (($generated@@24 Bool) ) (! (= ($generated@@0 ($generated@@11 $generated@@24)) $generated@@24)
 :pattern ( ($generated@@11 $generated@@24))
))) (forall (($generated@@25 T@U) ) (!  (=> (= (type $generated@@25) $generated@@4) (= ($generated@@11 ($generated@@0 $generated@@25)) $generated@@25))
 :pattern ( ($generated@@0 $generated@@25))
))) (forall (($generated@@26 Bool) ) (! (= (type ($generated@@11 $generated@@26)) $generated@@4)
 :pattern ( ($generated@@11 $generated@@26))
))) (forall (($generated@@27 RoundingMode) ) (! (= ($generated@@13 ($generated@@12 $generated@@27)) $generated@@27)
 :pattern ( ($generated@@12 $generated@@27))
))) (forall (($generated@@28 T@U) ) (!  (=> (= (type $generated@@28) $generated@@5) (= ($generated@@12 ($generated@@13 $generated@@28)) $generated@@28))
 :pattern ( ($generated@@13 $generated@@28))
))) (forall (($generated@@29 RoundingMode) ) (! (= (type ($generated@@12 $generated@@29)) $generated@@5)
 :pattern ( ($generated@@12 $generated@@29))
))) (forall (($generated@@30 String) ) (! (= ($generated@@15 ($generated@@14 $generated@@30)) $generated@@30)
 :pattern ( ($generated@@14 $generated@@30))
))) (forall (($generated@@31 T@U) ) (!  (=> (= (type $generated@@31) $generated@@6) (= ($generated@@14 ($generated@@15 $generated@@31)) $generated@@31))
 :pattern ( ($generated@@15 $generated@@31))
))) (forall (($generated@@32 String) ) (! (= (type ($generated@@14 $generated@@32)) $generated@@6)
 :pattern ( ($generated@@14 $generated@@32))
))) (forall (($generated@@33 (RegEx String)) ) (! (= ($generated@@17 ($generated@@16 $generated@@33)) $generated@@33)
 :pattern ( ($generated@@16 $generated@@33))
))) (forall (($generated@@34 T@U) ) (!  (=> (= (type $generated@@34) $generated@@7) (= ($generated@@16 ($generated@@17 $generated@@34)) $generated@@34))
 :pattern ( ($generated@@17 $generated@@34))
))) (forall (($generated@@35 (RegEx String)) ) (! (= (type ($generated@@16 $generated@@35)) $generated@@7)
 :pattern ( ($generated@@16 $generated@@35))
))))
(assert (forall (($generated@@36 T@U) ) (! (UOrdering2 $generated@@36 $generated@@36)
 :no-pattern ($generated $generated@@36)
 :no-pattern ($generated@@0 $generated@@36)
)))
(assert (forall (($generated@@37 T@U) ($generated@@38 T@U) ($generated@@39 T@U) ) (! (let (($generated@@40 (type $generated@@37)))
 (=> (and (and (= (type $generated@@38) $generated@@40) (= (type $generated@@39) $generated@@40)) (and (UOrdering2 $generated@@37 $generated@@38) (UOrdering2 $generated@@38 $generated@@39))) (UOrdering2 $generated@@37 $generated@@39)))
 :pattern ( (UOrdering2 $generated@@37 $generated@@38) (UOrdering2 $generated@@38 $generated@@39))
)))
(assert (forall (($generated@@41 T@U) ($generated@@42 T@U) ) (! (let (($generated@@43 (type $generated@@41)))
 (=> (= (type $generated@@42) $generated@@43) (=> (and (UOrdering2 $generated@@41 $generated@@42) (UOrdering2 $generated@@42 $generated@@41)) (= $generated@@41 $generated@@42))))
 :pattern ( (UOrdering2 $generated@@41 $generated@@42) (UOrdering2 $generated@@42 $generated@@41))
)))
(assert  (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (= ($generated@@1 $generated@@64) 6) (= (type $generated@@44) $generated@@64)) (= (type $generated@@45) $generated@@64)) (= (type $generated@@46) $generated@@64)) (= (type $generated@@47) $generated@@64)) (= (type $generated@@48) $generated@@64)) (= ($generated@@1 $generated@@65) 7)) (= (type $generated@@49) $generated@@65)) (= (type $generated@@50) $generated@@65)) (= (type $generated@@51) $generated@@65)) (= (type $generated@@52) $generated@@65)) (= (type $generated@@53) $generated@@65)) (= (type $generated@@54) $generated@@65)) (= (type $generated@@55) $generated@@65)) (= (type $generated@@56) $generated@@65)) (= (type $generated@@57) $generated@@65)) (= (type $generated@@58) $generated@@65)) (= (type $generated@@59) $generated@@65)) (forall (($generated@@70 T@T) ) (= ($generated@@1 ($generated@@66 $generated@@70)) 8))) (forall (($generated@@71 T@T) ) (! (= ($generated@@67 ($generated@@66 $generated@@71)) $generated@@71)
 :pattern ( ($generated@@66 $generated@@71))
))) (= (type $generated@@60) ($generated@@66 $generated@@4))) (= ($generated@@1 $generated@@68) 9)) (= (type $generated@@61) $generated@@68)) (= (type $generated@@62) $generated@@65)) (= ($generated@@1 $generated@@69) 10)) (= (type $generated@@63) $generated@@69)))
(assert (distinct $generated@@44 $generated@@45 $generated@@46 $generated@@47 $generated@@48 $generated@@49 $generated@@50 $generated@@51 $generated@@52 $generated@@53 $generated@@54 $generated@@55 $generated@@56 $generated@@57 $generated@@58 $generated@@59 $generated@@60 $generated@@61 $generated@@62 $generated@@63)
)
(assert (forall (($generated@@73 T@U) ) (! (= (type ($generated@@72 $generated@@73)) $generated@@65)
 :pattern ( ($generated@@72 $generated@@73))
)))
(assert (= ($generated@@72 $generated@@44) $generated@@49))
(assert (= ($generated@@72 $generated@@45) $generated@@50))
(assert (= ($generated@@72 $generated@@46) $generated@@51))
(assert (= ($generated@@72 $generated@@47) $generated@@52))
(assert (= ($generated@@72 $generated@@48) $generated@@53))
(assert  (and (and (and (and (and (and (and (and (and (and (and (and (and (forall (($generated@@85 T@T) ($generated@@86 T@T) ) (= ($generated@@1 ($generated@@76 $generated@@85 $generated@@86)) 11)) (forall (($generated@@87 T@T) ($generated@@88 T@T) ) (! (= ($generated@@79 ($generated@@76 $generated@@87 $generated@@88)) $generated@@87)
 :pattern ( ($generated@@76 $generated@@87 $generated@@88))
))) (forall (($generated@@89 T@T) ($generated@@90 T@T) ) (! (= ($generated@@80 ($generated@@76 $generated@@89 $generated@@90)) $generated@@90)
 :pattern ( ($generated@@76 $generated@@89 $generated@@90))
))) (forall (($generated@@91 T@U) ($generated@@92 T@U) ) (! (let (($generated@@93 ($generated@@80 (type $generated@@91))))
(= (type ($generated@@81 $generated@@91 $generated@@92)) $generated@@93))
 :pattern ( ($generated@@81 $generated@@91 $generated@@92))
))) (forall (($generated@@94 T@U) ($generated@@95 T@U) ($generated@@96 T@U) ) (! (let (($generated@@97 (type $generated@@96)))
(let (($generated@@98 (type $generated@@95)))
(= (type ($generated@@82 $generated@@94 $generated@@95 $generated@@96)) ($generated@@76 $generated@@98 $generated@@97))))
 :pattern ( ($generated@@82 $generated@@94 $generated@@95 $generated@@96))
))) (forall (($generated@@99 T@U) ($generated@@100 T@U) ($generated@@101 T@U) ) (! (let (($generated@@102 ($generated@@80 (type $generated@@99))))
 (=> (= (type $generated@@101) $generated@@102) (= ($generated@@81 ($generated@@82 $generated@@99 $generated@@100 $generated@@101) $generated@@100) $generated@@101)))
 :weight 0
))) (and (forall (($generated@@103 T@U) ($generated@@104 T@U) ($generated@@105 T@U) ($generated@@106 T@U) ) (!  (or (= $generated@@105 $generated@@106) (= ($generated@@81 ($generated@@82 $generated@@104 $generated@@105 $generated@@103) $generated@@106) ($generated@@81 $generated@@104 $generated@@106)))
 :weight 0
)) (forall (($generated@@107 T@U) ($generated@@108 T@U) ($generated@@109 T@U) ($generated@@110 T@U) ) (!  (or true (= ($generated@@81 ($generated@@82 $generated@@108 $generated@@109 $generated@@107) $generated@@110) ($generated@@81 $generated@@108 $generated@@110)))
 :weight 0
)))) (= ($generated@@1 $generated@@77) 12)) (forall (($generated@@111 T@U) ($generated@@112 T@U) ) (! (let (($generated@@113 ($generated@@67 (type $generated@@112))))
(= (type ($generated@@83 $generated@@111 $generated@@112)) $generated@@113))
 :pattern ( ($generated@@83 $generated@@111 $generated@@112))
))) (= ($generated@@1 $generated@@78) 13)) (forall (($generated@@114 T@U) ($generated@@115 T@U) ($generated@@116 T@U) ) (! (= (type ($generated@@84 $generated@@114 $generated@@115 $generated@@116)) $generated@@78)
 :pattern ( ($generated@@84 $generated@@114 $generated@@115 $generated@@116))
))) (forall (($generated@@117 T@U) ($generated@@118 T@U) ($generated@@119 T@U) ) (! (let (($generated@@120 ($generated@@67 (type $generated@@118))))
 (=> (= (type $generated@@119) $generated@@120) (= ($generated@@83 ($generated@@84 $generated@@117 $generated@@118 $generated@@119) $generated@@118) $generated@@119)))
 :weight 0
))) (and (forall (($generated@@121 T@U) ($generated@@122 T@U) ($generated@@123 T@U) ($generated@@124 T@U) ) (!  (or (= $generated@@123 $generated@@124) (= ($generated@@83 ($generated@@84 $generated@@122 $generated@@123 $generated@@121) $generated@@124) ($generated@@83 $generated@@122 $generated@@124)))
 :weight 0
)) (forall (($generated@@125 T@U) ($generated@@126 T@U) ($generated@@127 T@U) ($generated@@128 T@U) ) (!  (or true (= ($generated@@83 ($generated@@84 $generated@@126 $generated@@127 $generated@@125) $generated@@128) ($generated@@83 $generated@@126 $generated@@128)))
 :weight 0
)))) (forall (($generated@@129 Int) ) (! (= (type ($generated@@75 $generated@@129)) $generated@@64)
 :pattern ( ($generated@@75 $generated@@129))
))))
(assert (forall (($generated@@130 T@U) ($generated@@131 T@U) ) (!  (=> (and (= (type $generated@@130) $generated@@2) (= (type $generated@@131) ($generated@@76 $generated@@77 $generated@@78))) ($generated@@74 $generated@@130 ($generated@@75 0) $generated@@131))
 :pattern ( ($generated@@74 $generated@@130 ($generated@@75 0) $generated@@131))
)))
(assert (forall (($generated@@133 T@U) ($generated@@134 T@U) ) (!  (=> (and (and (= (type $generated@@133) ($generated@@76 $generated@@77 $generated@@78)) (= (type $generated@@134) ($generated@@76 $generated@@77 $generated@@78))) ($generated@@132 $generated@@133 $generated@@134)) (forall (($generated@@135 T@U) ) (!  (=> (and (= (type $generated@@135) $generated@@77) ($generated@@0 ($generated@@83 ($generated@@81 $generated@@133 $generated@@135) $generated@@60))) ($generated@@0 ($generated@@83 ($generated@@81 $generated@@134 $generated@@135) $generated@@60)))
 :pattern ( ($generated@@83 ($generated@@81 $generated@@134 $generated@@135) $generated@@60))
)))
 :pattern ( ($generated@@132 $generated@@133 $generated@@134))
)))
(assert (forall (($generated@@137 T@U) ) (!  (=> (= (type $generated@@137) $generated@@2) ($generated@@136 $generated@@137 ($generated@@75 0)))
 :pattern ( ($generated@@136 $generated@@137 ($generated@@75 0)))
)))
(assert  (and (= ($generated@@1 $generated@@140) 14) (forall (($generated@@141 T@U) ($generated@@142 T@U) ) (! (= (type ($generated@@139 $generated@@141 $generated@@142)) $generated@@64)
 :pattern ( ($generated@@139 $generated@@141 $generated@@142))
))))
(assert (forall (($generated@@143 T@U) ($generated@@144 T@U) ($generated@@145 T@U) ) (!  (=> (and (and (and (= (type $generated@@143) $generated@@64) (= (type $generated@@144) $generated@@64)) (= (type $generated@@145) $generated@@140)) ($generated@@136 $generated@@145 ($generated@@139 $generated@@143 $generated@@144))) ($generated@@138 $generated@@145))
 :pattern ( ($generated@@138 $generated@@145) ($generated@@136 $generated@@145 ($generated@@139 $generated@@143 $generated@@144)))
)))
(assert  (and (and (= ($generated@@1 $generated@@149) 15) (forall (($generated@@150 T@U) ) (! (= (type ($generated@@147 $generated@@150)) $generated@@149)
 :pattern ( ($generated@@147 $generated@@150))
))) (forall (($generated@@151 T@U) ) (! (= (type ($generated@@148 $generated@@151)) $generated@@149)
 :pattern ( ($generated@@148 $generated@@151))
))))
(assert (forall (($generated@@152 T@U) ($generated@@153 T@U) ) (!  (=> (and (and (= (type $generated@@152) $generated@@140) (= (type $generated@@153) $generated@@140)) true) (= ($generated@@146 $generated@@152 $generated@@153)  (and (= ($generated@@147 $generated@@152) ($generated@@147 $generated@@153)) (= ($generated@@148 $generated@@152) ($generated@@148 $generated@@153)))))
 :pattern ( ($generated@@146 $generated@@152 $generated@@153))
)))
(assert (forall (($generated@@156 T@U) ) (! (= (type ($generated@@154 $generated@@156)) $generated@@64)
 :pattern ( ($generated@@154 $generated@@156))
)))
(assert (forall (($generated@@157 T@U) ($generated@@158 T@U) ) (!  (=> (and (and (= (type $generated@@157) ($generated@@76 $generated@@149 $generated@@2)) (= (type $generated@@158) $generated@@64)) ($generated@@136 $generated@@157 ($generated@@154 $generated@@158))) ($generated@@155 $generated@@157))
 :pattern ( ($generated@@136 $generated@@157 ($generated@@154 $generated@@158)))
)))
(assert  (and (and (and (and (and (and (and (forall (($generated@@165 T@T) ($generated@@166 T@T) ) (= ($generated@@1 ($generated@@161 $generated@@165 $generated@@166)) 16)) (forall (($generated@@167 T@T) ($generated@@168 T@T) ) (! (= ($generated@@162 ($generated@@161 $generated@@167 $generated@@168)) $generated@@167)
 :pattern ( ($generated@@161 $generated@@167 $generated@@168))
))) (forall (($generated@@169 T@T) ($generated@@170 T@T) ) (! (= ($generated@@163 ($generated@@161 $generated@@169 $generated@@170)) $generated@@170)
 :pattern ( ($generated@@161 $generated@@169 $generated@@170))
))) (forall (($generated@@171 T@U) ($generated@@172 T@U) ($generated@@173 T@U) ) (! (let (($generated@@174 ($generated@@163 (type $generated@@171))))
(= (type ($generated@@159 $generated@@171 $generated@@172 $generated@@173)) $generated@@174))
 :pattern ( ($generated@@159 $generated@@171 $generated@@172 $generated@@173))
))) (forall (($generated@@175 T@U) ($generated@@176 T@U) ($generated@@177 T@U) ($generated@@178 T@U) ) (! (let (($generated@@179 (type $generated@@178)))
(let (($generated@@180 (type $generated@@176)))
(= (type ($generated@@164 $generated@@175 $generated@@176 $generated@@177 $generated@@178)) ($generated@@161 $generated@@180 $generated@@179))))
 :pattern ( ($generated@@164 $generated@@175 $generated@@176 $generated@@177 $generated@@178))
))) (forall (($generated@@181 T@U) ($generated@@182 T@U) ($generated@@183 T@U) ($generated@@184 T@U) ) (! (let (($generated@@185 ($generated@@163 (type $generated@@181))))
 (=> (= (type $generated@@184) $generated@@185) (= ($generated@@159 ($generated@@164 $generated@@181 $generated@@182 $generated@@183 $generated@@184) $generated@@182 $generated@@183) $generated@@184)))
 :weight 0
))) (and (and (forall (($generated@@186 T@U) ($generated@@187 T@U) ($generated@@188 T@U) ($generated@@189 T@U) ($generated@@190 T@U) ($generated@@191 T@U) ) (!  (or (= $generated@@188 $generated@@190) (= ($generated@@159 ($generated@@164 $generated@@187 $generated@@188 $generated@@189 $generated@@186) $generated@@190 $generated@@191) ($generated@@159 $generated@@187 $generated@@190 $generated@@191)))
 :weight 0
)) (forall (($generated@@192 T@U) ($generated@@193 T@U) ($generated@@194 T@U) ($generated@@195 T@U) ($generated@@196 T@U) ($generated@@197 T@U) ) (!  (or (= $generated@@195 $generated@@197) (= ($generated@@159 ($generated@@164 $generated@@193 $generated@@194 $generated@@195 $generated@@192) $generated@@196 $generated@@197) ($generated@@159 $generated@@193 $generated@@196 $generated@@197)))
 :weight 0
))) (forall (($generated@@198 T@U) ($generated@@199 T@U) ($generated@@200 T@U) ($generated@@201 T@U) ($generated@@202 T@U) ($generated@@203 T@U) ) (!  (or true (= ($generated@@159 ($generated@@164 $generated@@199 $generated@@200 $generated@@201 $generated@@198) $generated@@202 $generated@@203) ($generated@@159 $generated@@199 $generated@@202 $generated@@203)))
 :weight 0
)))) (forall (($generated@@204 T@U) ($generated@@205 T@U) ($generated@@206 T@U) ($generated@@207 Bool) ) (! (= (type ($generated@@160 $generated@@204 $generated@@205 $generated@@206 $generated@@207)) ($generated@@161 $generated@@77 $generated@@4))
 :pattern ( ($generated@@160 $generated@@204 $generated@@205 $generated@@206 $generated@@207))
))))
(assert (forall (($generated@@208 T@U) ($generated@@209 T@U) ($generated@@210 T@U) ($generated@@211 Bool) ($generated@@212 T@U) ($generated@@213 T@U) ) (! (let (($generated@@214 ($generated@@67 (type $generated@@213))))
 (=> (and (and (and (and (= (type $generated@@208) $generated@@77) (= (type $generated@@209) ($generated@@76 $generated@@77 $generated@@78))) (= (type $generated@@210) ($generated@@66 $generated@@4))) (= (type $generated@@212) $generated@@77)) (= (type $generated@@213) ($generated@@66 $generated@@214))) (= ($generated@@0 ($generated@@159 ($generated@@160 $generated@@208 $generated@@209 $generated@@210 $generated@@211) $generated@@212 $generated@@213))  (=> (and (not (= $generated@@212 $generated@@208)) ($generated@@0 ($generated@@83 ($generated@@81 $generated@@209 $generated@@212) $generated@@210))) $generated@@211))))
 :pattern ( ($generated@@159 ($generated@@160 $generated@@208 $generated@@209 $generated@@210 $generated@@211) $generated@@212 $generated@@213))
)))
(assert (forall (($generated@@217 T@U) ($generated@@218 T@U) ) (! (= (type ($generated@@215 $generated@@217 $generated@@218)) $generated@@140)
 :pattern ( ($generated@@215 $generated@@217 $generated@@218))
)))
(assert (forall (($generated@@219 T@U) ($generated@@220 T@U) ($generated@@221 T@U) ($generated@@222 T@U) ) (!  (=> (and (and (and (= (type $generated@@219) $generated@@64) (= (type $generated@@220) $generated@@64)) (= (type $generated@@221) $generated@@149)) (= (type $generated@@222) $generated@@149)) (= ($generated@@136 ($generated@@215 $generated@@221 $generated@@222) ($generated@@139 $generated@@219 $generated@@220))  (and ($generated@@216 $generated@@221 $generated@@219) ($generated@@216 $generated@@222 $generated@@220))))
 :pattern ( ($generated@@136 ($generated@@215 $generated@@221 $generated@@222) ($generated@@139 $generated@@219 $generated@@220)))
)))
(assert (forall (($generated@@223 T@U) ($generated@@224 T@U) ) (!  (=> (and (= (type $generated@@223) $generated@@140) (= (type $generated@@224) $generated@@140)) (= ($generated@@146 $generated@@223 $generated@@224) (= $generated@@223 $generated@@224)))
 :pattern ( ($generated@@146 $generated@@223 $generated@@224))
)))
(assert (forall (($generated@@226 T@U) ) (! (= (type ($generated@@225 $generated@@226)) $generated@@64)
 :pattern ( ($generated@@225 $generated@@226))
)))
(assert (forall (($generated@@227 T@U) ($generated@@228 T@U) ) (!  (=> (and (= (type $generated@@227) ($generated@@76 $generated@@149 $generated@@4)) (= (type $generated@@228) $generated@@64)) (= ($generated@@136 $generated@@227 ($generated@@225 $generated@@228)) (forall (($generated@@229 T@U) ) (!  (=> (and (= (type $generated@@229) $generated@@149) ($generated@@0 ($generated@@81 $generated@@227 $generated@@229))) ($generated@@216 $generated@@229 $generated@@228))
 :pattern ( ($generated@@81 $generated@@227 $generated@@229))
))))
 :pattern ( ($generated@@136 $generated@@227 ($generated@@225 $generated@@228)))
)))
(assert (forall (($generated@@231 T@U) ) (! (= (type ($generated@@230 $generated@@231)) $generated@@64)
 :pattern ( ($generated@@230 $generated@@231))
)))
(assert (forall (($generated@@232 T@U) ($generated@@233 T@U) ) (!  (=> (and (= (type $generated@@232) ($generated@@76 $generated@@149 $generated@@4)) (= (type $generated@@233) $generated@@64)) (= ($generated@@136 $generated@@232 ($generated@@230 $generated@@233)) (forall (($generated@@234 T@U) ) (!  (=> (and (= (type $generated@@234) $generated@@149) ($generated@@0 ($generated@@81 $generated@@232 $generated@@234))) ($generated@@216 $generated@@234 $generated@@233))
 :pattern ( ($generated@@81 $generated@@232 $generated@@234))
))))
 :pattern ( ($generated@@136 $generated@@232 ($generated@@230 $generated@@233)))
)))
(assert (forall (($generated@@236 Int) ) (! (= ($generated@@235 $generated@@236) $generated@@236)
 :pattern ( ($generated@@235 $generated@@236))
)))
(assert (forall (($generated@@238 T@U) ) (! (let (($generated@@239 (type $generated@@238)))
(= (type ($generated@@237 $generated@@238)) $generated@@239))
 :pattern ( ($generated@@237 $generated@@238))
)))
(assert (forall (($generated@@240 T@U) ) (! (= ($generated@@237 $generated@@240) $generated@@240)
 :pattern ( ($generated@@237 $generated@@240))
)))
(assert (forall (($generated@@243 T@U) ($generated@@244 T@U) ($generated@@245 T@U) ($generated@@246 T@U) ($generated@@247 T@U) ) (!  (=> (and (and (and (and (and (= (type $generated@@243) $generated@@64) (= (type $generated@@244) $generated@@64)) (= (type $generated@@245) $generated@@149)) (= (type $generated@@246) $generated@@149)) (= (type $generated@@247) ($generated@@76 $generated@@77 $generated@@78))) ($generated@@241 $generated@@247)) (= ($generated@@74 ($generated@@215 $generated@@245 $generated@@246) ($generated@@139 $generated@@243 $generated@@244) $generated@@247)  (and ($generated@@242 $generated@@245 $generated@@243 $generated@@247) ($generated@@242 $generated@@246 $generated@@244 $generated@@247))))
 :pattern ( ($generated@@74 ($generated@@215 $generated@@245 $generated@@246) ($generated@@139 $generated@@243 $generated@@244) $generated@@247))
)))
(assert (forall (($generated@@249 T@U) ) (! (= (type ($generated@@248 $generated@@249)) $generated@@68)
 :pattern ( ($generated@@248 $generated@@249))
)))
(assert (forall (($generated@@250 T@U) ) (!  (=> (= (type $generated@@250) $generated@@140) (= ($generated@@138 $generated@@250) (= ($generated@@248 $generated@@250) $generated@@61)))
 :pattern ( ($generated@@138 $generated@@250))
)))
(assert (forall (($generated@@251 T@U) ) (!  (=> (and (= (type $generated@@251) $generated@@140) ($generated@@138 $generated@@251)) (exists (($generated@@252 T@U) ($generated@@253 T@U) ) (!  (and (and (= (type $generated@@252) $generated@@149) (= (type $generated@@253) $generated@@149)) (= $generated@@251 ($generated@@215 $generated@@252 $generated@@253)))
 :no-pattern (type $generated@@252)
 :no-pattern (type $generated@@253)
 :no-pattern ($generated $generated@@252)
 :no-pattern ($generated@@0 $generated@@252)
 :no-pattern ($generated $generated@@253)
 :no-pattern ($generated@@0 $generated@@253)
)))
 :pattern ( ($generated@@138 $generated@@251))
)))
(assert  (and (and (forall (($generated@@258 T@T) ) (= ($generated@@1 ($generated@@256 $generated@@258)) 17)) (forall (($generated@@259 T@T) ) (! (= ($generated@@257 ($generated@@256 $generated@@259)) $generated@@259)
 :pattern ( ($generated@@256 $generated@@259))
))) (forall (($generated@@260 T@T) ) (! (= (type ($generated@@254 $generated@@260)) ($generated@@256 $generated@@260))
 :pattern ( ($generated@@254 $generated@@260))
))))
(assert (forall (($generated@@261 T@T) ) (! (= ($generated@@255 ($generated@@254 $generated@@261)) 0)
 :pattern ( ($generated@@254 $generated@@261))
)))
(assert (forall (($generated@@263 T@U) ) (! (= (type ($generated@@262 $generated@@263)) $generated@@149)
 :pattern ( ($generated@@262 $generated@@263))
)))
(assert (forall (($generated@@264 T@U) ($generated@@265 T@U) ($generated@@266 T@U) ) (!  (=> (and (= (type $generated@@265) $generated@@64) (= (type $generated@@266) ($generated@@76 $generated@@77 $generated@@78))) (= ($generated@@242 ($generated@@262 $generated@@264) $generated@@265 $generated@@266) ($generated@@74 $generated@@264 $generated@@265 $generated@@266)))
 :pattern ( ($generated@@242 ($generated@@262 $generated@@264) $generated@@265 $generated@@266))
)))
(assert (forall (($generated@@267 T@U) ($generated@@268 T@U) ($generated@@269 T@U) ($generated@@270 T@U) ) (!  (=> (and (and (and (and (and (= (type $generated@@267) ($generated@@76 $generated@@77 $generated@@78)) (= (type $generated@@268) ($generated@@76 $generated@@77 $generated@@78))) (= (type $generated@@269) $generated@@149)) (= (type $generated@@270) $generated@@64)) ($generated@@132 $generated@@267 $generated@@268)) ($generated@@242 $generated@@269 $generated@@270 $generated@@267)) ($generated@@242 $generated@@269 $generated@@270 $generated@@268))
 :pattern ( ($generated@@132 $generated@@267 $generated@@268) ($generated@@242 $generated@@269 $generated@@270 $generated@@267))
)))
(assert (forall (($generated@@271 T@U) ($generated@@272 T@U) ($generated@@273 T@U) ($generated@@274 T@U) ) (!  (=> (and (and (and (and (= (type $generated@@271) ($generated@@76 $generated@@77 $generated@@78)) (= (type $generated@@272) ($generated@@76 $generated@@77 $generated@@78))) (= (type $generated@@274) $generated@@64)) ($generated@@132 $generated@@271 $generated@@272)) ($generated@@74 $generated@@273 $generated@@274 $generated@@271)) ($generated@@74 $generated@@273 $generated@@274 $generated@@272))
 :pattern ( ($generated@@132 $generated@@271 $generated@@272) ($generated@@74 $generated@@273 $generated@@274 $generated@@271))
)))
(assert (forall (($generated@@277 T@T) ) (! (= (type ($generated@@276 $generated@@277)) ($generated@@76 $generated@@277 $generated@@2))
 :pattern ( ($generated@@276 $generated@@277))
)))
(assert (forall (($generated@@278 T@U) ) (! (let (($generated@@279 ($generated@@79 (type $generated@@278))))
 (=> (= (type $generated@@278) ($generated@@76 $generated@@279 $generated@@2)) (and (= (= ($generated@@275 $generated@@278) 0) (= $generated@@278 ($generated@@276 $generated@@279))) (=> (not (= ($generated@@275 $generated@@278) 0)) (exists (($generated@@280 T@U) ) (!  (and (= (type $generated@@280) $generated@@279) (< 0 ($generated ($generated@@81 $generated@@278 $generated@@280))))
 :no-pattern (type $generated@@280)
 :no-pattern ($generated $generated@@280)
 :no-pattern ($generated@@0 $generated@@280)
))))))
 :pattern ( ($generated@@275 $generated@@278))
)))
(assert  (and (and (and (and (forall (($generated@@286 T@T) ($generated@@287 T@T) ) (= ($generated@@1 ($generated@@283 $generated@@286 $generated@@287)) 18)) (forall (($generated@@288 T@T) ($generated@@289 T@T) ) (! (= ($generated@@284 ($generated@@283 $generated@@288 $generated@@289)) $generated@@288)
 :pattern ( ($generated@@283 $generated@@288 $generated@@289))
))) (forall (($generated@@290 T@T) ($generated@@291 T@T) ) (! (= ($generated@@285 ($generated@@283 $generated@@290 $generated@@291)) $generated@@291)
 :pattern ( ($generated@@283 $generated@@290 $generated@@291))
))) (forall (($generated@@292 T@U) ) (! (let (($generated@@293 ($generated@@284 (type $generated@@292))))
(= (type ($generated@@281 $generated@@292)) ($generated@@76 $generated@@293 $generated@@4)))
 :pattern ( ($generated@@281 $generated@@292))
))) (forall (($generated@@294 T@T) ($generated@@295 T@T) ) (! (= (type ($generated@@282 $generated@@294 $generated@@295)) ($generated@@283 $generated@@294 $generated@@295))
 :pattern ( ($generated@@282 $generated@@294 $generated@@295))
))))
(assert (forall (($generated@@296 T@U) ($generated@@297 T@T) ) (! (let (($generated@@298 (type $generated@@296)))
 (not ($generated@@0 ($generated@@81 ($generated@@281 ($generated@@282 $generated@@298 $generated@@297)) $generated@@296))))
 :pattern ( (let (($generated@@298 (type $generated@@296)))
($generated@@81 ($generated@@281 ($generated@@282 $generated@@298 $generated@@297)) $generated@@296)))
)))
(assert  (and (and (and (and (forall (($generated@@304 T@T) ($generated@@305 T@T) ) (= ($generated@@1 ($generated@@301 $generated@@304 $generated@@305)) 19)) (forall (($generated@@306 T@T) ($generated@@307 T@T) ) (! (= ($generated@@302 ($generated@@301 $generated@@306 $generated@@307)) $generated@@306)
 :pattern ( ($generated@@301 $generated@@306 $generated@@307))
))) (forall (($generated@@308 T@T) ($generated@@309 T@T) ) (! (= ($generated@@303 ($generated@@301 $generated@@308 $generated@@309)) $generated@@309)
 :pattern ( ($generated@@301 $generated@@308 $generated@@309))
))) (forall (($generated@@310 T@U) ) (! (let (($generated@@311 ($generated@@302 (type $generated@@310))))
(= (type ($generated@@299 $generated@@310)) ($generated@@76 $generated@@311 $generated@@4)))
 :pattern ( ($generated@@299 $generated@@310))
))) (forall (($generated@@312 T@T) ($generated@@313 T@T) ) (! (= (type ($generated@@300 $generated@@312 $generated@@313)) ($generated@@301 $generated@@312 $generated@@313))
 :pattern ( ($generated@@300 $generated@@312 $generated@@313))
))))
(assert (forall (($generated@@314 T@U) ($generated@@315 T@T) ) (! (let (($generated@@316 (type $generated@@314)))
 (not ($generated@@0 ($generated@@81 ($generated@@299 ($generated@@300 $generated@@316 $generated@@315)) $generated@@314))))
 :pattern ( (let (($generated@@316 (type $generated@@314)))
($generated@@81 ($generated@@299 ($generated@@300 $generated@@316 $generated@@315)) $generated@@314)))
)))
(assert (forall (($generated@@317 T@U) ) (! (let (($generated@@318 ($generated@@79 (type $generated@@317))))
 (=> (= (type $generated@@317) ($generated@@76 $generated@@318 $generated@@2)) (= ($generated@@155 $generated@@317) (forall (($generated@@319 T@U) ) (!  (=> (= (type $generated@@319) $generated@@318) (and (<= 0 ($generated ($generated@@81 $generated@@317 $generated@@319))) (<= ($generated ($generated@@81 $generated@@317 $generated@@319)) ($generated@@275 $generated@@317))))
 :pattern ( ($generated@@81 $generated@@317 $generated@@319))
)))))
 :pattern ( ($generated@@155 $generated@@317))
)))
(assert (forall (($generated@@320 T@U) ) (! (let (($generated@@321 ($generated@@285 (type $generated@@320))))
(let (($generated@@322 ($generated@@284 (type $generated@@320))))
 (=> (= (type $generated@@320) ($generated@@283 $generated@@322 $generated@@321)) (or (= $generated@@320 ($generated@@282 $generated@@322 $generated@@321)) (exists (($generated@@323 T@U) ) (!  (and (= (type $generated@@323) $generated@@322) ($generated@@0 ($generated@@81 ($generated@@281 $generated@@320) $generated@@323)))
 :no-pattern (type $generated@@323)
 :no-pattern ($generated $generated@@323)
 :no-pattern ($generated@@0 $generated@@323)
))))))
 :pattern ( ($generated@@281 $generated@@320))
)))
(assert (forall (($generated@@325 T@U) ) (! (let (($generated@@326 ($generated@@285 (type $generated@@325))))
(= (type ($generated@@324 $generated@@325)) ($generated@@76 $generated@@326 $generated@@4)))
 :pattern ( ($generated@@324 $generated@@325))
)))
(assert (forall (($generated@@327 T@U) ) (! (let (($generated@@328 ($generated@@285 (type $generated@@327))))
(let (($generated@@329 ($generated@@284 (type $generated@@327))))
 (=> (= (type $generated@@327) ($generated@@283 $generated@@329 $generated@@328)) (or (= $generated@@327 ($generated@@282 $generated@@329 $generated@@328)) (exists (($generated@@330 T@U) ) (!  (and (= (type $generated@@330) $generated@@328) ($generated@@0 ($generated@@81 ($generated@@324 $generated@@327) $generated@@330)))
 :no-pattern (type $generated@@330)
 :no-pattern ($generated $generated@@330)
 :no-pattern ($generated@@0 $generated@@330)
))))))
 :pattern ( ($generated@@324 $generated@@327))
)))
(assert (forall (($generated@@331 T@U) ) (! (let (($generated@@332 ($generated@@303 (type $generated@@331))))
(let (($generated@@333 ($generated@@302 (type $generated@@331))))
 (=> (= (type $generated@@331) ($generated@@301 $generated@@333 $generated@@332)) (or (= $generated@@331 ($generated@@300 $generated@@333 $generated@@332)) (exists (($generated@@334 T@U) ) (!  (and (= (type $generated@@334) $generated@@333) ($generated@@0 ($generated@@81 ($generated@@299 $generated@@331) $generated@@334)))
 :no-pattern (type $generated@@334)
 :no-pattern ($generated $generated@@334)
 :no-pattern ($generated@@0 $generated@@334)
))))))
 :pattern ( ($generated@@299 $generated@@331))
)))
(assert (forall (($generated@@336 T@U) ) (! (let (($generated@@337 ($generated@@303 (type $generated@@336))))
(= (type ($generated@@335 $generated@@336)) ($generated@@76 $generated@@337 $generated@@4)))
 :pattern ( ($generated@@335 $generated@@336))
)))
(assert (forall (($generated@@338 T@U) ) (! (let (($generated@@339 ($generated@@303 (type $generated@@338))))
(let (($generated@@340 ($generated@@302 (type $generated@@338))))
 (=> (= (type $generated@@338) ($generated@@301 $generated@@340 $generated@@339)) (or (= $generated@@338 ($generated@@300 $generated@@340 $generated@@339)) (exists (($generated@@341 T@U) ) (!  (and (= (type $generated@@341) $generated@@339) ($generated@@0 ($generated@@81 ($generated@@335 $generated@@338) $generated@@341)))
 :no-pattern (type $generated@@341)
 :no-pattern ($generated $generated@@341)
 :no-pattern ($generated@@0 $generated@@341)
))))))
 :pattern ( ($generated@@335 $generated@@338))
)))
(assert (forall (($generated@@342 T@U) ($generated@@343 T@U) ) (!  (=> (and (= (type $generated@@342) ($generated@@76 $generated@@149 $generated@@2)) (= (type $generated@@343) $generated@@64)) (= ($generated@@136 $generated@@342 ($generated@@154 $generated@@343)) (forall (($generated@@344 T@U) ) (!  (=> (and (= (type $generated@@344) $generated@@149) (< 0 ($generated ($generated@@81 $generated@@342 $generated@@344)))) ($generated@@216 $generated@@344 $generated@@343))
 :pattern ( ($generated@@81 $generated@@342 $generated@@344))
))))
 :pattern ( ($generated@@136 $generated@@342 ($generated@@154 $generated@@343)))
)))
(assert (forall (($generated@@345 T@U) ($generated@@346 T@U) ($generated@@347 T@U) ) (!  (=> (and (and (= (type $generated@@345) ($generated@@76 $generated@@149 $generated@@4)) (= (type $generated@@346) $generated@@64)) (= (type $generated@@347) ($generated@@76 $generated@@77 $generated@@78))) (= ($generated@@74 $generated@@345 ($generated@@225 $generated@@346) $generated@@347) (forall (($generated@@348 T@U) ) (!  (=> (and (= (type $generated@@348) $generated@@149) ($generated@@0 ($generated@@81 $generated@@345 $generated@@348))) ($generated@@242 $generated@@348 $generated@@346 $generated@@347))
 :pattern ( ($generated@@81 $generated@@345 $generated@@348))
))))
 :pattern ( ($generated@@74 $generated@@345 ($generated@@225 $generated@@346) $generated@@347))
)))
(assert (forall (($generated@@349 T@U) ($generated@@350 T@U) ($generated@@351 T@U) ) (!  (=> (and (and (= (type $generated@@349) ($generated@@76 $generated@@149 $generated@@4)) (= (type $generated@@350) $generated@@64)) (= (type $generated@@351) ($generated@@76 $generated@@77 $generated@@78))) (= ($generated@@74 $generated@@349 ($generated@@230 $generated@@350) $generated@@351) (forall (($generated@@352 T@U) ) (!  (=> (and (= (type $generated@@352) $generated@@149) ($generated@@0 ($generated@@81 $generated@@349 $generated@@352))) ($generated@@242 $generated@@352 $generated@@350 $generated@@351))
 :pattern ( ($generated@@81 $generated@@349 $generated@@352))
))))
 :pattern ( ($generated@@74 $generated@@349 ($generated@@230 $generated@@350) $generated@@351))
)))
(assert (forall (($generated@@353 T@U) ) (! (let (($generated@@354 (type $generated@@353)))
(= ($generated ($generated@@81 ($generated@@276 $generated@@354) $generated@@353)) 0))
 :pattern ( (let (($generated@@354 (type $generated@@353)))
($generated@@81 ($generated@@276 $generated@@354) $generated@@353)))
)))
(assert  (and (and (forall (($generated@@358 T@U) ) (! (= (type ($generated@@355 $generated@@358)) ($generated@@76 $generated@@149 $generated@@4))
 :pattern ( ($generated@@355 $generated@@358))
)) (forall (($generated@@359 T@T) ($generated@@360 T@U) ) (! (= (type ($generated@@356 $generated@@359 $generated@@360)) $generated@@359)
 :pattern ( ($generated@@356 $generated@@359 $generated@@360))
))) (forall (($generated@@361 T@U) ) (! (let (($generated@@362 ($generated@@285 (type $generated@@361))))
(let (($generated@@363 ($generated@@284 (type $generated@@361))))
(= (type ($generated@@357 $generated@@361)) ($generated@@76 $generated@@363 $generated@@362))))
 :pattern ( ($generated@@357 $generated@@361))
))))
(assert (forall (($generated@@364 T@U) ($generated@@365 T@U) ) (!  (=> (and (= (type $generated@@364) ($generated@@283 $generated@@149 $generated@@149)) (= (type $generated@@365) $generated@@149)) (= ($generated@@0 ($generated@@81 ($generated@@355 $generated@@364) $generated@@365))  (and ($generated@@0 ($generated@@81 ($generated@@281 $generated@@364) ($generated@@147 ($generated@@356 $generated@@140 $generated@@365)))) (= ($generated@@81 ($generated@@357 $generated@@364) ($generated@@147 ($generated@@356 $generated@@140 $generated@@365))) ($generated@@148 ($generated@@356 $generated@@140 $generated@@365))))))
 :pattern ( ($generated@@81 ($generated@@355 $generated@@364) $generated@@365))
)))
(assert  (and (forall (($generated@@368 T@U) ) (! (= (type ($generated@@366 $generated@@368)) ($generated@@76 $generated@@149 $generated@@4))
 :pattern ( ($generated@@366 $generated@@368))
)) (forall (($generated@@369 T@U) ) (! (let (($generated@@370 ($generated@@303 (type $generated@@369))))
(let (($generated@@371 ($generated@@302 (type $generated@@369))))
(= (type ($generated@@367 $generated@@369)) ($generated@@76 $generated@@371 $generated@@370))))
 :pattern ( ($generated@@367 $generated@@369))
))))
(assert (forall (($generated@@372 T@U) ($generated@@373 T@U) ) (!  (=> (and (= (type $generated@@372) ($generated@@301 $generated@@149 $generated@@149)) (= (type $generated@@373) $generated@@149)) (= ($generated@@0 ($generated@@81 ($generated@@366 $generated@@372) $generated@@373))  (and ($generated@@0 ($generated@@81 ($generated@@299 $generated@@372) ($generated@@147 ($generated@@356 $generated@@140 $generated@@373)))) (= ($generated@@81 ($generated@@367 $generated@@372) ($generated@@147 ($generated@@356 $generated@@140 $generated@@373))) ($generated@@148 ($generated@@356 $generated@@140 $generated@@373))))))
 :pattern ( ($generated@@81 ($generated@@366 $generated@@372) $generated@@373))
)))
(assert (forall (($generated@@374 T@U) ($generated@@375 T@U) ) (! (let (($generated@@376 (type $generated@@375)))
(let (($generated@@377 ($generated@@284 (type $generated@@374))))
 (=> (= (type $generated@@374) ($generated@@283 $generated@@377 $generated@@376)) (= ($generated@@0 ($generated@@81 ($generated@@324 $generated@@374) $generated@@375)) (exists (($generated@@378 T@U) ) (!  (and (= (type $generated@@378) $generated@@377) (and ($generated@@0 ($generated@@81 ($generated@@281 $generated@@374) $generated@@378)) (= $generated@@375 ($generated@@81 ($generated@@357 $generated@@374) $generated@@378))))
 :pattern ( ($generated@@81 ($generated@@281 $generated@@374) $generated@@378))
 :pattern ( ($generated@@81 ($generated@@357 $generated@@374) $generated@@378))
))))))
 :pattern ( ($generated@@81 ($generated@@324 $generated@@374) $generated@@375))
)))
(assert (forall (($generated@@379 T@U) ($generated@@380 T@U) ) (! (let (($generated@@381 (type $generated@@380)))
(let (($generated@@382 ($generated@@302 (type $generated@@379))))
 (=> (= (type $generated@@379) ($generated@@301 $generated@@382 $generated@@381)) (= ($generated@@0 ($generated@@81 ($generated@@335 $generated@@379) $generated@@380)) (exists (($generated@@383 T@U) ) (!  (and (= (type $generated@@383) $generated@@382) (and ($generated@@0 ($generated@@81 ($generated@@299 $generated@@379) $generated@@383)) (= $generated@@380 ($generated@@81 ($generated@@367 $generated@@379) $generated@@383))))
 :pattern ( ($generated@@81 ($generated@@299 $generated@@379) $generated@@383))
 :pattern ( ($generated@@81 ($generated@@367 $generated@@379) $generated@@383))
))))))
 :pattern ( ($generated@@81 ($generated@@335 $generated@@379) $generated@@380))
)))
(assert (forall (($generated@@385 T@U) ($generated@@386 T@U) ) (! (= (type ($generated@@384 $generated@@385 $generated@@386)) $generated@@64)
 :pattern ( ($generated@@384 $generated@@385 $generated@@386))
)))
(assert (forall (($generated@@387 T@U) ($generated@@388 T@U) ($generated@@389 T@U) ($generated@@390 T@U) ) (!  (=> (and (and (and (= (type $generated@@387) ($generated@@283 $generated@@149 $generated@@149)) (= (type $generated@@388) $generated@@64)) (= (type $generated@@389) $generated@@64)) (= (type $generated@@390) ($generated@@76 $generated@@77 $generated@@78))) (= ($generated@@74 $generated@@387 ($generated@@384 $generated@@388 $generated@@389) $generated@@390) (forall (($generated@@391 T@U) ) (!  (=> (and (= (type $generated@@391) $generated@@149) ($generated@@0 ($generated@@81 ($generated@@281 $generated@@387) $generated@@391))) (and ($generated@@242 ($generated@@81 ($generated@@357 $generated@@387) $generated@@391) $generated@@389 $generated@@390) ($generated@@242 $generated@@391 $generated@@388 $generated@@390)))
 :pattern ( ($generated@@81 ($generated@@357 $generated@@387) $generated@@391))
 :pattern ( ($generated@@81 ($generated@@281 $generated@@387) $generated@@391))
))))
 :pattern ( ($generated@@74 $generated@@387 ($generated@@384 $generated@@388 $generated@@389) $generated@@390))
)))
(assert (forall (($generated@@393 T@U) ($generated@@394 T@U) ) (! (= (type ($generated@@392 $generated@@393 $generated@@394)) $generated@@64)
 :pattern ( ($generated@@392 $generated@@393 $generated@@394))
)))
(assert (forall (($generated@@395 T@U) ($generated@@396 T@U) ($generated@@397 T@U) ($generated@@398 T@U) ) (!  (=> (and (and (and (= (type $generated@@395) ($generated@@301 $generated@@149 $generated@@149)) (= (type $generated@@396) $generated@@64)) (= (type $generated@@397) $generated@@64)) (= (type $generated@@398) ($generated@@76 $generated@@77 $generated@@78))) (= ($generated@@74 $generated@@395 ($generated@@392 $generated@@396 $generated@@397) $generated@@398) (forall (($generated@@399 T@U) ) (!  (=> (and (= (type $generated@@399) $generated@@149) ($generated@@0 ($generated@@81 ($generated@@299 $generated@@395) $generated@@399))) (and ($generated@@242 ($generated@@81 ($generated@@367 $generated@@395) $generated@@399) $generated@@397 $generated@@398) ($generated@@242 $generated@@399 $generated@@396 $generated@@398)))
 :pattern ( ($generated@@81 ($generated@@367 $generated@@395) $generated@@399))
 :pattern ( ($generated@@81 ($generated@@299 $generated@@395) $generated@@399))
))))
 :pattern ( ($generated@@74 $generated@@395 ($generated@@392 $generated@@396 $generated@@397) $generated@@398))
)))
(assert (forall (($generated@@400 T@U) ($generated@@401 T@U) ($generated@@402 T@U) ) (!  (=> (and (and (and (and (= (type $generated@@400) ($generated@@76 $generated@@77 $generated@@78)) (= (type $generated@@401) ($generated@@76 $generated@@77 $generated@@78))) (= (type $generated@@402) ($generated@@76 $generated@@77 $generated@@78))) (not (= $generated@@400 $generated@@402))) (and ($generated@@132 $generated@@400 $generated@@401) ($generated@@132 $generated@@401 $generated@@402))) ($generated@@132 $generated@@400 $generated@@402))
 :pattern ( ($generated@@132 $generated@@400 $generated@@401) ($generated@@132 $generated@@401 $generated@@402))
)))
(assert (forall (($generated@@404 T@T) ) (! (= (type ($generated@@403 $generated@@404)) ($generated@@76 $generated@@404 $generated@@4))
 :pattern ( ($generated@@403 $generated@@404))
)))
(assert (forall (($generated@@405 T@U) ) (! (let (($generated@@406 ($generated@@303 (type $generated@@405))))
(let (($generated@@407 ($generated@@302 (type $generated@@405))))
 (=> (= (type $generated@@405) ($generated@@301 $generated@@407 $generated@@406)) (= (= $generated@@405 ($generated@@300 $generated@@407 $generated@@406)) (= ($generated@@299 $generated@@405) ($generated@@403 $generated@@407))))))
 :pattern ( ($generated@@299 $generated@@405))
)))
(assert (forall (($generated@@408 T@U) ) (! (let (($generated@@409 ($generated@@303 (type $generated@@408))))
(let (($generated@@410 ($generated@@302 (type $generated@@408))))
 (=> (= (type $generated@@408) ($generated@@301 $generated@@410 $generated@@409)) (= (= $generated@@408 ($generated@@300 $generated@@410 $generated@@409)) (= ($generated@@335 $generated@@408) ($generated@@403 $generated@@409))))))
 :pattern ( ($generated@@335 $generated@@408))
)))
(assert (forall (($generated@@411 T@U) ) (! (let (($generated@@412 ($generated@@303 (type $generated@@411))))
(let (($generated@@413 ($generated@@302 (type $generated@@411))))
 (=> (= (type $generated@@411) ($generated@@301 $generated@@413 $generated@@412)) (= (= $generated@@411 ($generated@@300 $generated@@413 $generated@@412)) (= ($generated@@366 $generated@@411) ($generated@@403 $generated@@149))))))
 :pattern ( ($generated@@366 $generated@@411))
)))
(assert (forall (($generated@@414 T@U) ) (! (let (($generated@@415 ($generated@@285 (type $generated@@414))))
(let (($generated@@416 ($generated@@284 (type $generated@@414))))
 (=> (= (type $generated@@414) ($generated@@283 $generated@@416 $generated@@415)) (or (= $generated@@414 ($generated@@282 $generated@@416 $generated@@415)) (exists (($generated@@417 T@U) ($generated@@418 T@U) ) (!  (and (and (= (type $generated@@417) $generated@@149) (= (type $generated@@418) $generated@@149)) ($generated@@0 ($generated@@81 ($generated@@355 $generated@@414) ($generated@@262 ($generated@@215 $generated@@417 $generated@@418)))))
 :no-pattern (type $generated@@417)
 :no-pattern (type $generated@@418)
 :no-pattern ($generated $generated@@417)
 :no-pattern ($generated@@0 $generated@@417)
 :no-pattern ($generated $generated@@418)
 :no-pattern ($generated@@0 $generated@@418)
))))))
 :pattern ( ($generated@@355 $generated@@414))
)))
(assert (forall (($generated@@419 T@U) ) (! (let (($generated@@420 ($generated@@303 (type $generated@@419))))
(let (($generated@@421 ($generated@@302 (type $generated@@419))))
 (=> (= (type $generated@@419) ($generated@@301 $generated@@421 $generated@@420)) (or (= $generated@@419 ($generated@@300 $generated@@421 $generated@@420)) (exists (($generated@@422 T@U) ($generated@@423 T@U) ) (!  (and (and (= (type $generated@@422) $generated@@149) (= (type $generated@@423) $generated@@149)) ($generated@@0 ($generated@@81 ($generated@@366 $generated@@419) ($generated@@262 ($generated@@215 $generated@@422 $generated@@423)))))
 :no-pattern (type $generated@@422)
 :no-pattern (type $generated@@423)
 :no-pattern ($generated $generated@@422)
 :no-pattern ($generated@@0 $generated@@422)
 :no-pattern ($generated $generated@@423)
 :no-pattern ($generated@@0 $generated@@423)
))))))
 :pattern ( ($generated@@366 $generated@@419))
)))
(assert (forall (($generated@@424 T@U) ) (!  (=> (and (= (type $generated@@424) $generated@@149) ($generated@@216 $generated@@424 $generated@@46)) (and (= ($generated@@262 ($generated@@356 $generated@@2 $generated@@424)) $generated@@424) ($generated@@136 ($generated@@356 $generated@@2 $generated@@424) $generated@@46)))
 :pattern ( ($generated@@216 $generated@@424 $generated@@46))
)))
(assert (forall (($generated@@425 T@U) ) (!  (=> (and (= (type $generated@@425) $generated@@149) ($generated@@216 $generated@@425 $generated@@47)) (and (= ($generated@@262 ($generated@@356 $generated@@3 $generated@@425)) $generated@@425) ($generated@@136 ($generated@@356 $generated@@3 $generated@@425) $generated@@47)))
 :pattern ( ($generated@@216 $generated@@425 $generated@@47))
)))
(assert (forall (($generated@@426 T@U) ) (!  (=> (and (= (type $generated@@426) $generated@@149) ($generated@@216 $generated@@426 $generated@@44)) (and (= ($generated@@262 ($generated@@356 $generated@@4 $generated@@426)) $generated@@426) ($generated@@136 ($generated@@356 $generated@@4 $generated@@426) $generated@@44)))
 :pattern ( ($generated@@216 $generated@@426 $generated@@44))
)))
(assert (= ($generated@@1 $generated@@427) 20))
(assert (forall (($generated@@428 T@U) ) (!  (=> (and (= (type $generated@@428) $generated@@149) ($generated@@216 $generated@@428 $generated@@45)) (and (= ($generated@@262 ($generated@@356 $generated@@427 $generated@@428)) $generated@@428) ($generated@@136 ($generated@@356 $generated@@427 $generated@@428) $generated@@45)))
 :pattern ( ($generated@@216 $generated@@428 $generated@@45))
)))
(assert (forall (($generated@@429 T@U) ($generated@@430 T@U) ) (!  (=> (= (type $generated@@430) $generated@@64) (= ($generated@@216 ($generated@@262 $generated@@429) $generated@@430) ($generated@@136 $generated@@429 $generated@@430)))
 :pattern ( ($generated@@216 ($generated@@262 $generated@@429) $generated@@430))
)))
(assert (forall (($generated@@431 T@U) ) (! (let (($generated@@432 ($generated@@79 (type $generated@@431))))
 (=> (= (type $generated@@431) ($generated@@76 $generated@@432 $generated@@2)) (<= 0 ($generated@@275 $generated@@431))))
 :pattern ( ($generated@@275 $generated@@431))
)))
(assert (forall (($generated@@433 T@U) ) (! (let (($generated@@434 ($generated@@257 (type $generated@@433))))
 (=> (= (type $generated@@433) ($generated@@256 $generated@@434)) (<= 0 ($generated@@255 $generated@@433))))
 :pattern ( ($generated@@255 $generated@@433))
)))
(assert (forall (($generated@@436 T@U) ) (! (= (type ($generated@@435 $generated@@436)) $generated@@64)
 :pattern ( ($generated@@435 $generated@@436))
)))
(assert (forall (($generated@@437 T@U) ($generated@@438 T@U) ) (!  (=> (and (= (type $generated@@437) $generated@@64) (= (type $generated@@438) $generated@@64)) (= ($generated@@435 ($generated@@384 $generated@@437 $generated@@438)) $generated@@437))
 :pattern ( ($generated@@384 $generated@@437 $generated@@438))
)))
(assert (forall (($generated@@440 T@U) ) (! (= (type ($generated@@439 $generated@@440)) $generated@@64)
 :pattern ( ($generated@@439 $generated@@440))
)))
(assert (forall (($generated@@441 T@U) ($generated@@442 T@U) ) (!  (=> (and (= (type $generated@@441) $generated@@64) (= (type $generated@@442) $generated@@64)) (= ($generated@@439 ($generated@@384 $generated@@441 $generated@@442)) $generated@@442))
 :pattern ( ($generated@@384 $generated@@441 $generated@@442))
)))
(assert (forall (($generated@@443 T@U) ($generated@@444 T@U) ) (!  (=> (and (= (type $generated@@443) $generated@@64) (= (type $generated@@444) $generated@@64)) (= ($generated@@72 ($generated@@384 $generated@@443 $generated@@444)) $generated@@58))
 :pattern ( ($generated@@384 $generated@@443 $generated@@444))
)))
(assert (forall (($generated@@446 T@U) ) (! (= (type ($generated@@445 $generated@@446)) $generated@@64)
 :pattern ( ($generated@@445 $generated@@446))
)))
(assert (forall (($generated@@447 T@U) ($generated@@448 T@U) ) (!  (=> (and (= (type $generated@@447) $generated@@64) (= (type $generated@@448) $generated@@64)) (= ($generated@@445 ($generated@@392 $generated@@447 $generated@@448)) $generated@@447))
 :pattern ( ($generated@@392 $generated@@447 $generated@@448))
)))
(assert (forall (($generated@@450 T@U) ) (! (= (type ($generated@@449 $generated@@450)) $generated@@64)
 :pattern ( ($generated@@449 $generated@@450))
)))
(assert (forall (($generated@@451 T@U) ($generated@@452 T@U) ) (!  (=> (and (= (type $generated@@451) $generated@@64) (= (type $generated@@452) $generated@@64)) (= ($generated@@449 ($generated@@392 $generated@@451 $generated@@452)) $generated@@452))
 :pattern ( ($generated@@392 $generated@@451 $generated@@452))
)))
(assert (forall (($generated@@453 T@U) ($generated@@454 T@U) ) (!  (=> (and (= (type $generated@@453) $generated@@64) (= (type $generated@@454) $generated@@64)) (= ($generated@@72 ($generated@@392 $generated@@453 $generated@@454)) $generated@@59))
 :pattern ( ($generated@@392 $generated@@453 $generated@@454))
)))
(assert (forall (($generated@@455 T@U) ($generated@@456 T@U) ) (!  (=> (and (= (type $generated@@455) $generated@@149) (= (type $generated@@456) $generated@@149)) (= ($generated@@248 ($generated@@215 $generated@@455 $generated@@456)) $generated@@61))
 :pattern ( ($generated@@215 $generated@@455 $generated@@456))
)))
(assert (forall (($generated@@458 T@U) ) (! (= (type ($generated@@457 $generated@@458)) $generated@@64)
 :pattern ( ($generated@@457 $generated@@458))
)))
(assert (forall (($generated@@459 T@U) ($generated@@460 T@U) ) (!  (=> (and (= (type $generated@@459) $generated@@64) (= (type $generated@@460) $generated@@64)) (= ($generated@@457 ($generated@@139 $generated@@459 $generated@@460)) $generated@@459))
 :pattern ( ($generated@@139 $generated@@459 $generated@@460))
)))
(assert (forall (($generated@@462 T@U) ) (! (= (type ($generated@@461 $generated@@462)) $generated@@64)
 :pattern ( ($generated@@461 $generated@@462))
)))
(assert (forall (($generated@@463 T@U) ($generated@@464 T@U) ) (!  (=> (and (= (type $generated@@463) $generated@@64) (= (type $generated@@464) $generated@@64)) (= ($generated@@461 ($generated@@139 $generated@@463 $generated@@464)) $generated@@464))
 :pattern ( ($generated@@139 $generated@@463 $generated@@464))
)))
(assert (forall (($generated@@465 T@U) ($generated@@466 T@U) ) (!  (=> (and (= (type $generated@@465) $generated@@149) (= (type $generated@@466) $generated@@149)) (= ($generated@@147 ($generated@@215 $generated@@465 $generated@@466)) $generated@@465))
 :pattern ( ($generated@@215 $generated@@465 $generated@@466))
)))
(assert (forall (($generated@@467 T@U) ($generated@@468 T@U) ) (!  (=> (and (= (type $generated@@467) $generated@@149) (= (type $generated@@468) $generated@@149)) (= ($generated@@148 ($generated@@215 $generated@@467 $generated@@468)) $generated@@468))
 :pattern ( ($generated@@215 $generated@@467 $generated@@468))
)))
(assert  (and (forall (($generated@@471 T@U) ) (! (= (type ($generated@@469 $generated@@471)) $generated@@64)
 :pattern ( ($generated@@469 $generated@@471))
)) (forall (($generated@@472 T@U) ($generated@@473 Int) ) (! (let (($generated@@474 ($generated@@257 (type $generated@@472))))
(= (type ($generated@@470 $generated@@472 $generated@@473)) $generated@@474))
 :pattern ( ($generated@@470 $generated@@472 $generated@@473))
))))
(assert (forall (($generated@@475 T@U) ($generated@@476 T@U) ($generated@@477 T@U) ) (!  (=> (and (and (= (type $generated@@475) ($generated@@256 $generated@@149)) (= (type $generated@@476) $generated@@64)) (= (type $generated@@477) ($generated@@76 $generated@@77 $generated@@78))) (= ($generated@@74 $generated@@475 ($generated@@469 $generated@@476) $generated@@477) (forall (($generated@@478 Int) ) (!  (=> (and (<= 0 $generated@@478) (< $generated@@478 ($generated@@255 $generated@@475))) ($generated@@242 ($generated@@470 $generated@@475 $generated@@478) $generated@@476 $generated@@477))
 :pattern ( ($generated@@470 $generated@@475 $generated@@478))
))))
 :pattern ( ($generated@@74 $generated@@475 ($generated@@469 $generated@@476) $generated@@477))
)))
(assert (forall (($generated@@480 Int) ) (! (= ($generated@@479 ($generated@@75 $generated@@480)) $generated@@480)
 :pattern ( ($generated@@75 $generated@@480))
)))
(assert (forall (($generated@@482 T@U) ) (! (= (type ($generated@@481 $generated@@482)) $generated@@64)
 :pattern ( ($generated@@481 $generated@@482))
)))
(assert (forall (($generated@@483 T@U) ) (!  (=> (= (type $generated@@483) $generated@@64) (= ($generated@@481 ($generated@@225 $generated@@483)) $generated@@483))
 :pattern ( ($generated@@225 $generated@@483))
)))
(assert (forall (($generated@@484 T@U) ) (!  (=> (= (type $generated@@484) $generated@@64) (= ($generated@@72 ($generated@@225 $generated@@484)) $generated@@54))
 :pattern ( ($generated@@225 $generated@@484))
)))
(assert (forall (($generated@@486 T@U) ) (! (= (type ($generated@@485 $generated@@486)) $generated@@64)
 :pattern ( ($generated@@485 $generated@@486))
)))
(assert (forall (($generated@@487 T@U) ) (!  (=> (= (type $generated@@487) $generated@@64) (= ($generated@@485 ($generated@@230 $generated@@487)) $generated@@487))
 :pattern ( ($generated@@230 $generated@@487))
)))
(assert (forall (($generated@@488 T@U) ) (!  (=> (= (type $generated@@488) $generated@@64) (= ($generated@@72 ($generated@@230 $generated@@488)) $generated@@55))
 :pattern ( ($generated@@230 $generated@@488))
)))
(assert (forall (($generated@@490 T@U) ) (! (= (type ($generated@@489 $generated@@490)) $generated@@64)
 :pattern ( ($generated@@489 $generated@@490))
)))
(assert (forall (($generated@@491 T@U) ) (!  (=> (= (type $generated@@491) $generated@@64) (= ($generated@@489 ($generated@@154 $generated@@491)) $generated@@491))
 :pattern ( ($generated@@154 $generated@@491))
)))
(assert (forall (($generated@@492 T@U) ) (!  (=> (= (type $generated@@492) $generated@@64) (= ($generated@@72 ($generated@@154 $generated@@492)) $generated@@56))
 :pattern ( ($generated@@154 $generated@@492))
)))
(assert (forall (($generated@@494 T@U) ) (! (= (type ($generated@@493 $generated@@494)) $generated@@64)
 :pattern ( ($generated@@493 $generated@@494))
)))
(assert (forall (($generated@@495 T@U) ) (!  (=> (= (type $generated@@495) $generated@@64) (= ($generated@@493 ($generated@@469 $generated@@495)) $generated@@495))
 :pattern ( ($generated@@469 $generated@@495))
)))
(assert (forall (($generated@@496 T@U) ) (!  (=> (= (type $generated@@496) $generated@@64) (= ($generated@@72 ($generated@@469 $generated@@496)) $generated@@57))
 :pattern ( ($generated@@469 $generated@@496))
)))
(assert (forall (($generated@@497 T@U) ) (! (let (($generated@@498 (type $generated@@497)))
(= ($generated@@356 $generated@@498 ($generated@@262 $generated@@497)) $generated@@497))
 :pattern ( ($generated@@262 $generated@@497))
)))
(assert (forall (($generated@@499 T@U) ($generated@@500 T@U) ($generated@@501 T@U) ) (!  (=> (and (and (= (type $generated@@499) ($generated@@283 $generated@@149 $generated@@149)) (= (type $generated@@500) $generated@@64)) (= (type $generated@@501) $generated@@64)) (= ($generated@@136 $generated@@499 ($generated@@384 $generated@@500 $generated@@501)) (forall (($generated@@502 T@U) ) (!  (=> (and (= (type $generated@@502) $generated@@149) ($generated@@0 ($generated@@81 ($generated@@281 $generated@@499) $generated@@502))) (and ($generated@@216 ($generated@@81 ($generated@@357 $generated@@499) $generated@@502) $generated@@501) ($generated@@216 $generated@@502 $generated@@500)))
 :pattern ( ($generated@@81 ($generated@@357 $generated@@499) $generated@@502))
 :pattern ( ($generated@@81 ($generated@@281 $generated@@499) $generated@@502))
))))
 :pattern ( ($generated@@136 $generated@@499 ($generated@@384 $generated@@500 $generated@@501)))
)))
(assert (forall (($generated@@503 T@U) ($generated@@504 T@U) ($generated@@505 T@U) ) (!  (=> (and (and (= (type $generated@@503) ($generated@@301 $generated@@149 $generated@@149)) (= (type $generated@@504) $generated@@64)) (= (type $generated@@505) $generated@@64)) (= ($generated@@136 $generated@@503 ($generated@@392 $generated@@504 $generated@@505)) (forall (($generated@@506 T@U) ) (!  (=> (and (= (type $generated@@506) $generated@@149) ($generated@@0 ($generated@@81 ($generated@@299 $generated@@503) $generated@@506))) (and ($generated@@216 ($generated@@81 ($generated@@367 $generated@@503) $generated@@506) $generated@@505) ($generated@@216 $generated@@506 $generated@@504)))
 :pattern ( ($generated@@81 ($generated@@367 $generated@@503) $generated@@506))
 :pattern ( ($generated@@81 ($generated@@299 $generated@@503) $generated@@506))
))))
 :pattern ( ($generated@@136 $generated@@503 ($generated@@392 $generated@@504 $generated@@505)))
)))
(assert (forall (($generated@@509 T@U) ($generated@@510 T@U) ) (!  (=> (and (= (type $generated@@509) $generated@@149) (= (type $generated@@510) $generated@@149)) (< ($generated@@507 $generated@@509) ($generated@@508 ($generated@@215 $generated@@509 $generated@@510))))
 :pattern ( ($generated@@215 $generated@@509 $generated@@510))
)))
(assert (forall (($generated@@511 T@U) ($generated@@512 T@U) ) (!  (=> (and (= (type $generated@@511) $generated@@149) (= (type $generated@@512) $generated@@149)) (< ($generated@@507 $generated@@512) ($generated@@508 ($generated@@215 $generated@@511 $generated@@512))))
 :pattern ( ($generated@@215 $generated@@511 $generated@@512))
)))
(assert (forall (($generated@@513 T@U) ($generated@@514 T@U) ($generated@@515 T@U) ) (!  (=> (and (and (and (= (type $generated@@513) $generated@@149) (= (type $generated@@514) $generated@@64)) (= (type $generated@@515) $generated@@64)) ($generated@@216 $generated@@513 ($generated@@384 $generated@@514 $generated@@515))) (and (= ($generated@@262 ($generated@@356 ($generated@@283 $generated@@149 $generated@@149) $generated@@513)) $generated@@513) ($generated@@136 ($generated@@356 ($generated@@283 $generated@@149 $generated@@149) $generated@@513) ($generated@@384 $generated@@514 $generated@@515))))
 :pattern ( ($generated@@216 $generated@@513 ($generated@@384 $generated@@514 $generated@@515)))
)))
(assert (forall (($generated@@516 T@U) ($generated@@517 T@U) ($generated@@518 T@U) ) (!  (=> (and (and (and (= (type $generated@@516) $generated@@149) (= (type $generated@@517) $generated@@64)) (= (type $generated@@518) $generated@@64)) ($generated@@216 $generated@@516 ($generated@@392 $generated@@517 $generated@@518))) (and (= ($generated@@262 ($generated@@356 ($generated@@301 $generated@@149 $generated@@149) $generated@@516)) $generated@@516) ($generated@@136 ($generated@@356 ($generated@@301 $generated@@149 $generated@@149) $generated@@516) ($generated@@392 $generated@@517 $generated@@518))))
 :pattern ( ($generated@@216 $generated@@516 ($generated@@392 $generated@@517 $generated@@518)))
)))
(assert (forall (($generated@@519 T@U) ($generated@@520 T@U) ($generated@@521 T@U) ) (!  (=> (and (and (and (= (type $generated@@519) $generated@@64) (= (type $generated@@520) $generated@@64)) (= (type $generated@@521) $generated@@149)) ($generated@@216 $generated@@521 ($generated@@139 $generated@@519 $generated@@520))) (and (= ($generated@@262 ($generated@@356 $generated@@140 $generated@@521)) $generated@@521) ($generated@@136 ($generated@@356 $generated@@140 $generated@@521) ($generated@@139 $generated@@519 $generated@@520))))
 :pattern ( ($generated@@216 $generated@@521 ($generated@@139 $generated@@519 $generated@@520)))
)))
(assert (forall (($generated@@522 T@U) ) (! (let (($generated@@523 (type $generated@@522)))
 (not ($generated@@0 ($generated@@81 ($generated@@403 $generated@@523) $generated@@522))))
 :pattern ( (let (($generated@@523 (type $generated@@522)))
($generated@@81 ($generated@@403 $generated@@523) $generated@@522)))
)))
(assert (forall (($generated@@525 Int) ($generated@@526 Int) ) (! (= ($generated@@524 $generated@@525 $generated@@526) (mod $generated@@525 $generated@@526))
 :pattern ( ($generated@@524 $generated@@525 $generated@@526))
)))
(assert (forall (($generated@@528 T@U) ) (! (= (type ($generated@@527 $generated@@528)) $generated@@69)
 :pattern ( ($generated@@527 $generated@@528))
)))
(assert (forall (($generated@@529 T@U) ($generated@@530 T@U) ) (!  (=> (and (= (type $generated@@529) $generated@@64) (= (type $generated@@530) $generated@@64)) (and (= ($generated@@72 ($generated@@139 $generated@@529 $generated@@530)) $generated@@62) (= ($generated@@527 ($generated@@139 $generated@@529 $generated@@530)) $generated@@63)))
 :pattern ( ($generated@@139 $generated@@529 $generated@@530))
)))
(assert (forall (($generated@@531 T@U) ) (!  (=> (= (type $generated@@531) $generated@@140) (= ($generated@@507 ($generated@@262 $generated@@531)) ($generated@@508 $generated@@531)))
 :pattern ( ($generated@@507 ($generated@@262 $generated@@531)))
)))
(assert (forall (($generated@@532 T@U) ) (!  (=> (and (= (type $generated@@532) $generated@@149) ($generated@@216 $generated@@532 ($generated@@75 0))) (and (= ($generated@@262 ($generated@@356 $generated@@2 $generated@@532)) $generated@@532) ($generated@@136 ($generated@@356 ($generated@@76 $generated@@149 $generated@@4) $generated@@532) ($generated@@75 0))))
 :pattern ( ($generated@@216 $generated@@532 ($generated@@75 0)))
)))
(assert (forall (($generated@@533 T@U) ($generated@@534 T@U) ) (!  (=> (and (and (= (type $generated@@533) $generated@@149) (= (type $generated@@534) $generated@@64)) ($generated@@216 $generated@@533 ($generated@@225 $generated@@534))) (and (= ($generated@@262 ($generated@@356 ($generated@@76 $generated@@149 $generated@@4) $generated@@533)) $generated@@533) ($generated@@136 ($generated@@356 ($generated@@76 $generated@@149 $generated@@4) $generated@@533) ($generated@@225 $generated@@534))))
 :pattern ( ($generated@@216 $generated@@533 ($generated@@225 $generated@@534)))
)))
(assert (forall (($generated@@535 T@U) ($generated@@536 T@U) ) (!  (=> (and (and (= (type $generated@@535) $generated@@149) (= (type $generated@@536) $generated@@64)) ($generated@@216 $generated@@535 ($generated@@230 $generated@@536))) (and (= ($generated@@262 ($generated@@356 ($generated@@76 $generated@@149 $generated@@4) $generated@@535)) $generated@@535) ($generated@@136 ($generated@@356 ($generated@@76 $generated@@149 $generated@@4) $generated@@535) ($generated@@230 $generated@@536))))
 :pattern ( ($generated@@216 $generated@@535 ($generated@@230 $generated@@536)))
)))
(assert (forall (($generated@@537 T@U) ($generated@@538 T@U) ) (!  (=> (and (and (= (type $generated@@537) $generated@@149) (= (type $generated@@538) $generated@@64)) ($generated@@216 $generated@@537 ($generated@@154 $generated@@538))) (and (= ($generated@@262 ($generated@@356 ($generated@@76 $generated@@149 $generated@@2) $generated@@537)) $generated@@537) ($generated@@136 ($generated@@356 ($generated@@76 $generated@@149 $generated@@2) $generated@@537) ($generated@@154 $generated@@538))))
 :pattern ( ($generated@@216 $generated@@537 ($generated@@154 $generated@@538)))
)))
(assert (forall (($generated@@539 T@U) ($generated@@540 T@U) ) (!  (=> (and (and (= (type $generated@@539) $generated@@149) (= (type $generated@@540) $generated@@64)) ($generated@@216 $generated@@539 ($generated@@469 $generated@@540))) (and (= ($generated@@262 ($generated@@356 ($generated@@256 $generated@@149) $generated@@539)) $generated@@539) ($generated@@136 ($generated@@356 ($generated@@256 $generated@@149) $generated@@539) ($generated@@469 $generated@@540))))
 :pattern ( ($generated@@216 $generated@@539 ($generated@@469 $generated@@540)))
)))
(assert (forall (($generated@@541 T@U) ($generated@@542 T@U) ($generated@@543 T@U) ) (!  (=> (and (and (= (type $generated@@541) ($generated@@76 $generated@@149 $generated@@2)) (= (type $generated@@542) $generated@@64)) (= (type $generated@@543) ($generated@@76 $generated@@77 $generated@@78))) (= ($generated@@74 $generated@@541 ($generated@@154 $generated@@542) $generated@@543) (forall (($generated@@544 T@U) ) (!  (=> (and (= (type $generated@@544) $generated@@149) (< 0 ($generated ($generated@@81 $generated@@541 $generated@@544)))) ($generated@@242 $generated@@544 $generated@@542 $generated@@543))
 :pattern ( ($generated@@81 $generated@@541 $generated@@544))
))))
 :pattern ( ($generated@@74 $generated@@541 ($generated@@154 $generated@@542) $generated@@543))
)))
(assert (forall (($generated@@545 T@U) ($generated@@546 T@U) ($generated@@547 T@U) ) (!  (=> (and (and (and (= (type $generated@@545) $generated@@140) (= (type $generated@@546) $generated@@64)) (= (type $generated@@547) ($generated@@76 $generated@@77 $generated@@78))) (and ($generated@@241 $generated@@547) (and ($generated@@138 $generated@@545) (exists (($generated@@548 T@U) ) (!  (and (= (type $generated@@548) $generated@@64) ($generated@@74 $generated@@545 ($generated@@139 $generated@@546 $generated@@548) $generated@@547))
 :pattern ( ($generated@@74 $generated@@545 ($generated@@139 $generated@@546 $generated@@548) $generated@@547))
))))) ($generated@@242 ($generated@@147 $generated@@545) $generated@@546 $generated@@547))
 :pattern ( ($generated@@242 ($generated@@147 $generated@@545) $generated@@546 $generated@@547))
)))
(assert (forall (($generated@@549 T@U) ($generated@@550 T@U) ($generated@@551 T@U) ) (!  (=> (and (and (and (= (type $generated@@549) $generated@@140) (= (type $generated@@550) $generated@@64)) (= (type $generated@@551) ($generated@@76 $generated@@77 $generated@@78))) (and ($generated@@241 $generated@@551) (and ($generated@@138 $generated@@549) (exists (($generated@@552 T@U) ) (!  (and (= (type $generated@@552) $generated@@64) ($generated@@74 $generated@@549 ($generated@@139 $generated@@552 $generated@@550) $generated@@551))
 :pattern ( ($generated@@74 $generated@@549 ($generated@@139 $generated@@552 $generated@@550) $generated@@551))
))))) ($generated@@242 ($generated@@148 $generated@@549) $generated@@550 $generated@@551))
 :pattern ( ($generated@@242 ($generated@@148 $generated@@549) $generated@@550 $generated@@551))
)))
(assert (forall (($generated@@553 T@U) ($generated@@554 T@U) ) (!  (=> (and (= (type $generated@@553) $generated@@149) (= (type $generated@@554) $generated@@149)) (= ($generated@@215 ($generated@@237 $generated@@553) ($generated@@237 $generated@@554)) ($generated@@237 ($generated@@215 $generated@@553 $generated@@554))))
 :pattern ( ($generated@@215 ($generated@@237 $generated@@553) ($generated@@237 $generated@@554)))
)))
(assert (forall (($generated@@555 Int) ) (! (= ($generated@@262 ($generated@@8 ($generated@@235 $generated@@555))) ($generated@@237 ($generated@@262 ($generated@@8 $generated@@555))))
 :pattern ( ($generated@@262 ($generated@@8 ($generated@@235 $generated@@555))))
)))
(assert (forall (($generated@@556 T@U) ) (! (= ($generated@@262 ($generated@@237 $generated@@556)) ($generated@@237 ($generated@@262 $generated@@556)))
 :pattern ( ($generated@@262 ($generated@@237 $generated@@556)))
)))
(assert (forall (($generated@@557 T@U) ) (! (let (($generated@@558 ($generated@@257 (type $generated@@557))))
 (=> (and (= (type $generated@@557) ($generated@@256 $generated@@558)) (= ($generated@@255 $generated@@557) 0)) (= $generated@@557 ($generated@@254 $generated@@558))))
 :pattern ( ($generated@@255 $generated@@557))
)))
(assert (forall (($generated@@559 T@U) ($generated@@560 T@U) ($generated@@561 T@U) ) (! (let (($generated@@562 (type $generated@@560)))
 (=> (and (and (= (type $generated@@559) ($generated@@76 $generated@@562 $generated@@2)) (= (type $generated@@561) $generated@@2)) (<= 0 ($generated $generated@@561))) (= ($generated@@275 ($generated@@82 $generated@@559 $generated@@560 $generated@@561)) (+ (- ($generated@@275 $generated@@559) ($generated ($generated@@81 $generated@@559 $generated@@560))) ($generated $generated@@561)))))
 :pattern ( ($generated@@275 ($generated@@82 $generated@@559 $generated@@560 $generated@@561)))
)))
(assert (forall (($generated@@563 T@U) ($generated@@564 T@U) ) (!  (=> (and (= (type $generated@@563) ($generated@@76 $generated@@77 $generated@@78)) (= (type $generated@@564) $generated@@2)) ($generated@@74 $generated@@564 $generated@@46 $generated@@563))
 :pattern ( ($generated@@74 $generated@@564 $generated@@46 $generated@@563))
)))
(assert (forall (($generated@@565 T@U) ($generated@@566 T@U) ) (!  (=> (and (= (type $generated@@565) ($generated@@76 $generated@@77 $generated@@78)) (= (type $generated@@566) $generated@@3)) ($generated@@74 $generated@@566 $generated@@47 $generated@@565))
 :pattern ( ($generated@@74 $generated@@566 $generated@@47 $generated@@565))
)))
(assert (forall (($generated@@567 T@U) ($generated@@568 T@U) ) (!  (=> (and (= (type $generated@@567) ($generated@@76 $generated@@77 $generated@@78)) (= (type $generated@@568) $generated@@4)) ($generated@@74 $generated@@568 $generated@@44 $generated@@567))
 :pattern ( ($generated@@74 $generated@@568 $generated@@44 $generated@@567))
)))
(assert (forall (($generated@@569 T@U) ($generated@@570 T@U) ) (!  (=> (and (= (type $generated@@569) ($generated@@76 $generated@@77 $generated@@78)) (= (type $generated@@570) $generated@@427)) ($generated@@74 $generated@@570 $generated@@45 $generated@@569))
 :pattern ( ($generated@@74 $generated@@570 $generated@@45 $generated@@569))
)))
(assert (forall (($generated@@571 T@U) ($generated@@572 T@U) ) (!  (=> (and (= (type $generated@@571) ($generated@@76 $generated@@77 $generated@@78)) (= (type $generated@@572) $generated@@149)) ($generated@@74 $generated@@572 $generated@@48 $generated@@571))
 :pattern ( ($generated@@74 $generated@@572 $generated@@48 $generated@@571))
)))
(assert (forall (($generated@@573 T@U) ($generated@@574 T@U) ) (!  (=> (and (= (type $generated@@573) ($generated@@256 $generated@@149)) (= (type $generated@@574) $generated@@64)) (= ($generated@@136 $generated@@573 ($generated@@469 $generated@@574)) (forall (($generated@@575 Int) ) (!  (=> (and (<= 0 $generated@@575) (< $generated@@575 ($generated@@255 $generated@@573))) ($generated@@216 ($generated@@470 $generated@@573 $generated@@575) $generated@@574))
 :pattern ( ($generated@@470 $generated@@573 $generated@@575))
))))
 :pattern ( ($generated@@136 $generated@@573 ($generated@@469 $generated@@574)))
)))
(assert (forall (($generated@@577 T@U) ($generated@@578 Int) ) (!  (=> (= (type $generated@@577) ($generated@@256 $generated@@149)) (=> (and (<= 0 $generated@@578) (< $generated@@578 ($generated@@255 $generated@@577))) (< ($generated@@508 ($generated@@356 $generated@@140 ($generated@@470 $generated@@577 $generated@@578))) ($generated@@576 $generated@@577))))
 :pattern ( ($generated@@508 ($generated@@356 $generated@@140 ($generated@@470 $generated@@577 $generated@@578))))
)))
(assert (forall (($generated@@579 T@U) ($generated@@580 T@U) ($generated@@581 T@U) ) (!  (=> (and (and (and (= (type $generated@@579) ($generated@@283 $generated@@149 $generated@@149)) (= (type $generated@@580) $generated@@64)) (= (type $generated@@581) $generated@@64)) ($generated@@136 $generated@@579 ($generated@@384 $generated@@580 $generated@@581))) (and (and ($generated@@136 ($generated@@281 $generated@@579) ($generated@@225 $generated@@580)) ($generated@@136 ($generated@@324 $generated@@579) ($generated@@225 $generated@@581))) ($generated@@136 ($generated@@355 $generated@@579) ($generated@@225 ($generated@@139 $generated@@580 $generated@@581)))))
 :pattern ( ($generated@@136 $generated@@579 ($generated@@384 $generated@@580 $generated@@581)))
)))
(assert (forall (($generated@@582 T@U) ($generated@@583 T@U) ($generated@@584 T@U) ) (!  (=> (and (and (and (= (type $generated@@582) ($generated@@301 $generated@@149 $generated@@149)) (= (type $generated@@583) $generated@@64)) (= (type $generated@@584) $generated@@64)) ($generated@@136 $generated@@582 ($generated@@392 $generated@@583 $generated@@584))) (and (and ($generated@@136 ($generated@@299 $generated@@582) ($generated@@230 $generated@@583)) ($generated@@136 ($generated@@335 $generated@@582) ($generated@@230 $generated@@584))) ($generated@@136 ($generated@@366 $generated@@582) ($generated@@230 ($generated@@139 $generated@@583 $generated@@584)))))
 :pattern ( ($generated@@136 $generated@@582 ($generated@@392 $generated@@583 $generated@@584)))
)))
(assert (forall (($generated@@585 T@U) ) (!  (=> (= (type $generated@@585) $generated@@2) ($generated@@136 $generated@@585 $generated@@46))
 :pattern ( ($generated@@136 $generated@@585 $generated@@46))
)))
(assert (forall (($generated@@586 T@U) ) (!  (=> (= (type $generated@@586) $generated@@3) ($generated@@136 $generated@@586 $generated@@47))
 :pattern ( ($generated@@136 $generated@@586 $generated@@47))
)))
(assert (forall (($generated@@587 T@U) ) (!  (=> (= (type $generated@@587) $generated@@4) ($generated@@136 $generated@@587 $generated@@44))
 :pattern ( ($generated@@136 $generated@@587 $generated@@44))
)))
(assert (forall (($generated@@588 T@U) ) (!  (=> (= (type $generated@@588) $generated@@427) ($generated@@136 $generated@@588 $generated@@45))
 :pattern ( ($generated@@136 $generated@@588 $generated@@45))
)))
(assert (forall (($generated@@589 T@U) ) (!  (=> (= (type $generated@@589) $generated@@149) ($generated@@136 $generated@@589 $generated@@48))
 :pattern ( ($generated@@136 $generated@@589 $generated@@48))
)))
(push 1)
(declare-fun ControlFlow (Int Int) Int)
(declare-fun $generated@@590 () T@U)
(declare-fun $generated@@591 () T@U)
(declare-fun $generated@@592 () T@U)
(declare-fun $generated@@593 () Int)
(declare-fun $generated@@594 () Int)
(declare-fun $generated@@595 () Int)
(declare-fun $generated@@596 () Int)
(declare-fun $generated@@597 () Int)
(declare-fun $generated@@598 (T@U) Bool)
(declare-fun $generated@@599 () Int)
(declare-fun $generated@@600 () Int)
(declare-fun $generated@@601 () Int)
(declare-fun $generated@@602 () T@U)
(declare-fun $generated@@603 () T@U)
(declare-fun $generated@@604 () T@U)
(declare-fun $generated@@605 () Int)
(assert  (and (and (and (and (and (= (type $generated@@590) ($generated@@161 $generated@@77 $generated@@4)) (= (type $generated@@591) $generated@@77)) (= (type $generated@@592) ($generated@@76 $generated@@77 $generated@@78))) (= (type $generated@@602) $generated@@149)) (= (type $generated@@603) $generated@@64)) (= (type $generated@@604) $generated@@149)))
(set-option :timeout 0)
(set-option :rlimit 0)
(assert (not
 (=> (= (ControlFlow 0 0) 5) (let (($generated@@606  (=> (and (= $generated@@590 ($generated@@160 $generated@@591 $generated@@592 $generated@@60 false)) (= $generated@@593 ($generated@@235 0))) (and (=> (= (ControlFlow 0 2) (- 0 4)) (= ($generated@@524 $generated@@593 ($generated@@235 2)) ($generated@@235 0))) (=> (= ($generated@@524 $generated@@593 ($generated@@235 2)) ($generated@@235 0)) (=> (and (<= ($generated@@235 0) $generated@@594) (= $generated@@595 ($generated@@235 0))) (and (=> (= (ControlFlow 0 2) (- 0 3)) (= ($generated@@524 $generated@@595 ($generated@@235 2)) ($generated@@235 0))) (=> (= ($generated@@524 $generated@@595 ($generated@@235 2)) ($generated@@235 0)) (=> (<= ($generated@@235 0) $generated@@596) (=> (and (= $generated@@597 ($generated@@235 0)) (= (ControlFlow 0 2) (- 0 1))) (= ($generated@@524 $generated@@597 ($generated@@235 2)) ($generated@@235 0))))))))))))
(let (($generated@@607  (=> (and (and (and (and ($generated@@241 $generated@@592) ($generated@@598 $generated@@592)) (<= ($generated@@235 0) $generated@@599)) (and (= ($generated@@524 $generated@@594 ($generated@@235 2)) ($generated@@235 0)) (= ($generated@@524 $generated@@596 ($generated@@235 2)) ($generated@@235 0)))) (and (and (and (= ($generated@@524 $generated@@600 ($generated@@235 2)) ($generated@@235 0)) (<= ($generated@@235 0) $generated@@601)) (and ($generated@@216 $generated@@602 $generated@@603) ($generated@@242 $generated@@602 $generated@@603 $generated@@592))) (and (and ($generated@@216 $generated@@604 $generated@@603) ($generated@@242 $generated@@604 $generated@@603 $generated@@592)) (and (= 1 $generated@@605) (= (ControlFlow 0 5) 2))))) $generated@@606)))
$generated@@607)))
))
(check-sat)
(pop 1)
; Valid
(get-info :rlimit)
(reset)
(set-option :rlimit 0)
; did a full reset
(reset)
(set-option :print-success false)
(set-info :smt-lib-version 2.6)
(set-option :auto_config false)
(set-option :type_check true)
(set-option :smt.case_split 3)
(set-option :smt.qi.eager_threshold 100)
(set-option :smt.delay_units true)
(set-option :smt.arith.solver 2)
(set-option :smt.mbqi false)
(set-option :model.compact false)
(set-option :model.v2 true)
(set-option :pp.bv_literals false)
; done setting options


(set-info :category "industrial")
(declare-sort |T@U| 0)
(declare-sort |T@T| 0)
(declare-fun real_pow (Real Real) Real)
(declare-fun UOrdering2 (|T@U| |T@U|) Bool)
(declare-fun UOrdering3 (|T@T| |T@U| |T@U|) Bool)
(declare-fun tickleBool (Bool) Bool)
(assert (and (tickleBool true) (tickleBool false)))
(declare-fun $generated (T@U) Int)
(declare-fun $generated@@0 (T@U) Bool)
(declare-fun $generated@@1 (T@T) Int)
(declare-fun $generated@@2 () T@T)
(declare-fun $generated@@3 () T@T)
(declare-fun $generated@@4 () T@T)
(declare-fun $generated@@5 () T@T)
(declare-fun $generated@@6 () T@T)
(declare-fun $generated@@7 () T@T)
(declare-fun $generated@@8 (Int) T@U)
(declare-fun type (T@U) T@T)
(declare-fun $generated@@9 (Real) T@U)
(declare-fun $generated@@10 (T@U) Real)
(declare-fun $generated@@11 (Bool) T@U)
(declare-fun $generated@@12 (RoundingMode) T@U)
(declare-fun $generated@@13 (T@U) RoundingMode)
(declare-fun $generated@@14 (String) T@U)
(declare-fun $generated@@15 (T@U) String)
(declare-fun $generated@@16 ((RegEx String)) T@U)
(declare-fun $generated@@17 (T@U) (RegEx String))
(declare-fun $generated@@44 (T@U T@U T@U) T@U)
(declare-fun $generated@@45 (T@U T@U T@U Bool) T@U)
(declare-fun $generated@@46 (T@T) T@T)
(declare-fun $generated@@47 () T@T)
(declare-fun $generated@@48 (T@T T@T) T@T)
(declare-fun $generated@@49 () T@T)
(declare-fun $generated@@50 (T@T) T@T)
(declare-fun $generated@@51 (T@U T@U) T@U)
(declare-fun $generated@@52 (T@U T@U) T@U)
(declare-fun $generated@@53 (T@T) T@T)
(declare-fun $generated@@54 (T@T) T@T)
(declare-fun $generated@@55 (T@U T@U T@U) T@U)
(declare-fun $generated@@56 (T@U T@U T@U) T@U)
(declare-fun $generated@@57 (T@T T@T) T@T)
(declare-fun $generated@@58 (T@T) T@T)
(declare-fun $generated@@59 (T@T) T@T)
(declare-fun $generated@@60 (T@U T@U T@U T@U) T@U)
(declare-fun $generated@@157 (Int) Int)
(declare-fun $generated@@159 (T@U) T@U)
(declare-fun $generated@@163 (T@U) T@U)
(declare-fun $generated@@164 (T@T T@U) T@U)
(declare-fun $generated@@165 () T@T)
(assert  (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (= ($generated@@1 $generated@@2) 0) (= ($generated@@1 $generated@@3) 1)) (= ($generated@@1 $generated@@4) 2)) (= ($generated@@1 $generated@@5) 3)) (= ($generated@@1 $generated@@6) 4)) (= ($generated@@1 $generated@@7) 5)) (forall (($generated@@18 Int) ) (! (= ($generated ($generated@@8 $generated@@18)) $generated@@18)
 :pattern ( ($generated@@8 $generated@@18))
))) (forall (($generated@@19 T@U) ) (!  (=> (= (type $generated@@19) $generated@@2) (= ($generated@@8 ($generated $generated@@19)) $generated@@19))
 :pattern ( ($generated $generated@@19))
))) (forall (($generated@@20 Int) ) (! (= (type ($generated@@8 $generated@@20)) $generated@@2)
 :pattern ( ($generated@@8 $generated@@20))
))) (forall (($generated@@21 Real) ) (! (= ($generated@@10 ($generated@@9 $generated@@21)) $generated@@21)
 :pattern ( ($generated@@9 $generated@@21))
))) (forall (($generated@@22 T@U) ) (!  (=> (= (type $generated@@22) $generated@@3) (= ($generated@@9 ($generated@@10 $generated@@22)) $generated@@22))
 :pattern ( ($generated@@10 $generated@@22))
))) (forall (($generated@@23 Real) ) (! (= (type ($generated@@9 $generated@@23)) $generated@@3)
 :pattern ( ($generated@@9 $generated@@23))
))) (forall (($generated@@24 Bool) ) (! (= ($generated@@0 ($generated@@11 $generated@@24)) $generated@@24)
 :pattern ( ($generated@@11 $generated@@24))
))) (forall (($generated@@25 T@U) ) (!  (=> (= (type $generated@@25) $generated@@4) (= ($generated@@11 ($generated@@0 $generated@@25)) $generated@@25))
 :pattern ( ($generated@@0 $generated@@25))
))) (forall (($generated@@26 Bool) ) (! (= (type ($generated@@11 $generated@@26)) $generated@@4)
 :pattern ( ($generated@@11 $generated@@26))
))) (forall (($generated@@27 RoundingMode) ) (! (= ($generated@@13 ($generated@@12 $generated@@27)) $generated@@27)
 :pattern ( ($generated@@12 $generated@@27))
))) (forall (($generated@@28 T@U) ) (!  (=> (= (type $generated@@28) $generated@@5) (= ($generated@@12 ($generated@@13 $generated@@28)) $generated@@28))
 :pattern ( ($generated@@13 $generated@@28))
))) (forall (($generated@@29 RoundingMode) ) (! (= (type ($generated@@12 $generated@@29)) $generated@@5)
 :pattern ( ($generated@@12 $generated@@29))
))) (forall (($generated@@30 String) ) (! (= ($generated@@15 ($generated@@14 $generated@@30)) $generated@@30)
 :pattern ( ($generated@@14 $generated@@30))
))) (forall (($generated@@31 T@U) ) (!  (=> (= (type $generated@@31) $generated@@6) (= ($generated@@14 ($generated@@15 $generated@@31)) $generated@@31))
 :pattern ( ($generated@@15 $generated@@31))
))) (forall (($generated@@32 String) ) (! (= (type ($generated@@14 $generated@@32)) $generated@@6)
 :pattern ( ($generated@@14 $generated@@32))
))) (forall (($generated@@33 (RegEx String)) ) (! (= ($generated@@17 ($generated@@16 $generated@@33)) $generated@@33)
 :pattern ( ($generated@@16 $generated@@33))
))) (forall (($generated@@34 T@U) ) (!  (=> (= (type $generated@@34) $generated@@7) (= ($generated@@16 ($generated@@17 $generated@@34)) $generated@@34))
 :pattern ( ($generated@@17 $generated@@34))
))) (forall (($generated@@35 (RegEx String)) ) (! (= (type ($generated@@16 $generated@@35)) $generated@@7)
 :pattern ( ($generated@@16 $generated@@35))
))))
(assert (forall (($generated@@36 T@U) ) (! (UOrdering2 $generated@@36 $generated@@36)
 :no-pattern ($generated $generated@@36)
 :no-pattern ($generated@@0 $generated@@36)
)))
(assert (forall (($generated@@37 T@U) ($generated@@38 T@U) ($generated@@39 T@U) ) (! (let (($generated@@40 (type $generated@@37)))
 (=> (and (and (= (type $generated@@38) $generated@@40) (= (type $generated@@39) $generated@@40)) (and (UOrdering2 $generated@@37 $generated@@38) (UOrdering2 $generated@@38 $generated@@39))) (UOrdering2 $generated@@37 $generated@@39)))
 :pattern ( (UOrdering2 $generated@@37 $generated@@38) (UOrdering2 $generated@@38 $generated@@39))
)))
(assert (forall (($generated@@41 T@U) ($generated@@42 T@U) ) (! (let (($generated@@43 (type $generated@@41)))
 (=> (= (type $generated@@42) $generated@@43) (=> (and (UOrdering2 $generated@@41 $generated@@42) (UOrdering2 $generated@@42 $generated@@41)) (= $generated@@41 $generated@@42))))
 :pattern ( (UOrdering2 $generated@@41 $generated@@42) (UOrdering2 $generated@@42 $generated@@41))
)))
(assert  (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (forall (($generated@@61 T@T) ($generated@@62 T@T) ) (= ($generated@@1 ($generated@@48 $generated@@61 $generated@@62)) 6)) (forall (($generated@@63 T@T) ($generated@@64 T@T) ) (! (= ($generated@@53 ($generated@@48 $generated@@63 $generated@@64)) $generated@@63)
 :pattern ( ($generated@@48 $generated@@63 $generated@@64))
))) (forall (($generated@@65 T@T) ($generated@@66 T@T) ) (! (= ($generated@@54 ($generated@@48 $generated@@65 $generated@@66)) $generated@@66)
 :pattern ( ($generated@@48 $generated@@65 $generated@@66))
))) (forall (($generated@@67 T@U) ($generated@@68 T@U) ) (! (let (($generated@@69 ($generated@@54 (type $generated@@67))))
(= (type ($generated@@52 $generated@@67 $generated@@68)) $generated@@69))
 :pattern ( ($generated@@52 $generated@@67 $generated@@68))
))) (forall (($generated@@70 T@U) ($generated@@71 T@U) ($generated@@72 T@U) ) (! (let (($generated@@73 (type $generated@@72)))
(let (($generated@@74 (type $generated@@71)))
(= (type ($generated@@55 $generated@@70 $generated@@71 $generated@@72)) ($generated@@48 $generated@@74 $generated@@73))))
 :pattern ( ($generated@@55 $generated@@70 $generated@@71 $generated@@72))
))) (forall (($generated@@75 T@U) ($generated@@76 T@U) ($generated@@77 T@U) ) (! (let (($generated@@78 ($generated@@54 (type $generated@@75))))
 (=> (= (type $generated@@77) $generated@@78) (= ($generated@@52 ($generated@@55 $generated@@75 $generated@@76 $generated@@77) $generated@@76) $generated@@77)))
 :weight 0
))) (and (forall (($generated@@79 T@U) ($generated@@80 T@U) ($generated@@81 T@U) ($generated@@82 T@U) ) (!  (or (= $generated@@81 $generated@@82) (= ($generated@@52 ($generated@@55 $generated@@80 $generated@@81 $generated@@79) $generated@@82) ($generated@@52 $generated@@80 $generated@@82)))
 :weight 0
)) (forall (($generated@@83 T@U) ($generated@@84 T@U) ($generated@@85 T@U) ($generated@@86 T@U) ) (!  (or true (= ($generated@@52 ($generated@@55 $generated@@84 $generated@@85 $generated@@83) $generated@@86) ($generated@@52 $generated@@84 $generated@@86)))
 :weight 0
)))) (forall (($generated@@87 T@T) ) (= ($generated@@1 ($generated@@50 $generated@@87)) 7))) (forall (($generated@@88 T@T) ) (! (= ($generated@@46 ($generated@@50 $generated@@88)) $generated@@88)
 :pattern ( ($generated@@50 $generated@@88))
))) (forall (($generated@@89 T@U) ($generated@@90 T@U) ) (! (let (($generated@@91 ($generated@@46 (type $generated@@90))))
(= (type ($generated@@51 $generated@@89 $generated@@90)) $generated@@91))
 :pattern ( ($generated@@51 $generated@@89 $generated@@90))
))) (= ($generated@@1 $generated@@49) 8)) (forall (($generated@@92 T@U) ($generated@@93 T@U) ($generated@@94 T@U) ) (! (= (type ($generated@@56 $generated@@92 $generated@@93 $generated@@94)) $generated@@49)
 :pattern ( ($generated@@56 $generated@@92 $generated@@93 $generated@@94))
))) (forall (($generated@@95 T@U) ($generated@@96 T@U) ($generated@@97 T@U) ) (! (let (($generated@@98 ($generated@@46 (type $generated@@96))))
 (=> (= (type $generated@@97) $generated@@98) (= ($generated@@51 ($generated@@56 $generated@@95 $generated@@96 $generated@@97) $generated@@96) $generated@@97)))
 :weight 0
))) (and (forall (($generated@@99 T@U) ($generated@@100 T@U) ($generated@@101 T@U) ($generated@@102 T@U) ) (!  (or (= $generated@@101 $generated@@102) (= ($generated@@51 ($generated@@56 $generated@@100 $generated@@101 $generated@@99) $generated@@102) ($generated@@51 $generated@@100 $generated@@102)))
 :weight 0
)) (forall (($generated@@103 T@U) ($generated@@104 T@U) ($generated@@105 T@U) ($generated@@106 T@U) ) (!  (or true (= ($generated@@51 ($generated@@56 $generated@@104 $generated@@105 $generated@@103) $generated@@106) ($generated@@51 $generated@@104 $generated@@106)))
 :weight 0
)))) (= ($generated@@1 $generated@@47) 9)) (forall (($generated@@107 T@T) ($generated@@108 T@T) ) (= ($generated@@1 ($generated@@57 $generated@@107 $generated@@108)) 10))) (forall (($generated@@109 T@T) ($generated@@110 T@T) ) (! (= ($generated@@58 ($generated@@57 $generated@@109 $generated@@110)) $generated@@109)
 :pattern ( ($generated@@57 $generated@@109 $generated@@110))
))) (forall (($generated@@111 T@T) ($generated@@112 T@T) ) (! (= ($generated@@59 ($generated@@57 $generated@@111 $generated@@112)) $generated@@112)
 :pattern ( ($generated@@57 $generated@@111 $generated@@112))
))) (forall (($generated@@113 T@U) ($generated@@114 T@U) ($generated@@115 T@U) ) (! (let (($generated@@116 ($generated@@59 (type $generated@@113))))
(= (type ($generated@@44 $generated@@113 $generated@@114 $generated@@115)) $generated@@116))
 :pattern ( ($generated@@44 $generated@@113 $generated@@114 $generated@@115))
))) (forall (($generated@@117 T@U) ($generated@@118 T@U) ($generated@@119 T@U) ($generated@@120 T@U) ) (! (let (($generated@@121 (type $generated@@120)))
(let (($generated@@122 (type $generated@@118)))
(= (type ($generated@@60 $generated@@117 $generated@@118 $generated@@119 $generated@@120)) ($generated@@57 $generated@@122 $generated@@121))))
 :pattern ( ($generated@@60 $generated@@117 $generated@@118 $generated@@119 $generated@@120))
))) (forall (($generated@@123 T@U) ($generated@@124 T@U) ($generated@@125 T@U) ($generated@@126 T@U) ) (! (let (($generated@@127 ($generated@@59 (type $generated@@123))))
 (=> (= (type $generated@@126) $generated@@127) (= ($generated@@44 ($generated@@60 $generated@@123 $generated@@124 $generated@@125 $generated@@126) $generated@@124 $generated@@125) $generated@@126)))
 :weight 0
))) (and (and (forall (($generated@@128 T@U) ($generated@@129 T@U) ($generated@@130 T@U) ($generated@@131 T@U) ($generated@@132 T@U) ($generated@@133 T@U) ) (!  (or (= $generated@@130 $generated@@132) (= ($generated@@44 ($generated@@60 $generated@@129 $generated@@130 $generated@@131 $generated@@128) $generated@@132 $generated@@133) ($generated@@44 $generated@@129 $generated@@132 $generated@@133)))
 :weight 0
)) (forall (($generated@@134 T@U) ($generated@@135 T@U) ($generated@@136 T@U) ($generated@@137 T@U) ($generated@@138 T@U) ($generated@@139 T@U) ) (!  (or (= $generated@@137 $generated@@139) (= ($generated@@44 ($generated@@60 $generated@@135 $generated@@136 $generated@@137 $generated@@134) $generated@@138 $generated@@139) ($generated@@44 $generated@@135 $generated@@138 $generated@@139)))
 :weight 0
))) (forall (($generated@@140 T@U) ($generated@@141 T@U) ($generated@@142 T@U) ($generated@@143 T@U) ($generated@@144 T@U) ($generated@@145 T@U) ) (!  (or true (= ($generated@@44 ($generated@@60 $generated@@141 $generated@@142 $generated@@143 $generated@@140) $generated@@144 $generated@@145) ($generated@@44 $generated@@141 $generated@@144 $generated@@145)))
 :weight 0
)))) (forall (($generated@@146 T@U) ($generated@@147 T@U) ($generated@@148 T@U) ($generated@@149 Bool) ) (! (= (type ($generated@@45 $generated@@146 $generated@@147 $generated@@148 $generated@@149)) ($generated@@57 $generated@@47 $generated@@4))
 :pattern ( ($generated@@45 $generated@@146 $generated@@147 $generated@@148 $generated@@149))
))))
(assert (forall (($generated@@150 T@U) ($generated@@151 T@U) ($generated@@152 T@U) ($generated@@153 Bool) ($generated@@154 T@U) ($generated@@155 T@U) ) (! (let (($generated@@156 ($generated@@46 (type $generated@@155))))
 (=> (and (and (and (and (= (type $generated@@150) $generated@@47) (= (type $generated@@151) ($generated@@48 $generated@@47 $generated@@49))) (= (type $generated@@152) ($generated@@50 $generated@@4))) (= (type $generated@@154) $generated@@47)) (= (type $generated@@155) ($generated@@50 $generated@@156))) (= ($generated@@0 ($generated@@44 ($generated@@45 $generated@@150 $generated@@151 $generated@@152 $generated@@153) $generated@@154 $generated@@155))  (=> (and (not (= $generated@@154 $generated@@150)) ($generated@@0 ($generated@@51 ($generated@@52 $generated@@151 $generated@@154) $generated@@152))) $generated@@153))))
 :pattern ( ($generated@@44 ($generated@@45 $generated@@150 $generated@@151 $generated@@152 $generated@@153) $generated@@154 $generated@@155))
)))
(assert (forall (($generated@@158 Int) ) (! (= ($generated@@157 $generated@@158) $generated@@158)
 :pattern ( ($generated@@157 $generated@@158))
)))
(assert (forall (($generated@@160 T@U) ) (! (let (($generated@@161 (type $generated@@160)))
(= (type ($generated@@159 $generated@@160)) $generated@@161))
 :pattern ( ($generated@@159 $generated@@160))
)))
(assert (forall (($generated@@162 T@U) ) (! (= ($generated@@159 $generated@@162) $generated@@162)
 :pattern ( ($generated@@159 $generated@@162))
)))
(assert  (and (and (= ($generated@@1 $generated@@165) 11) (forall (($generated@@166 T@U) ) (! (= (type ($generated@@163 $generated@@166)) $generated@@165)
 :pattern ( ($generated@@163 $generated@@166))
))) (forall (($generated@@167 T@T) ($generated@@168 T@U) ) (! (= (type ($generated@@164 $generated@@167 $generated@@168)) $generated@@167)
 :pattern ( ($generated@@164 $generated@@167 $generated@@168))
))))
(assert (forall (($generated@@169 T@U) ) (! (let (($generated@@170 (type $generated@@169)))
(= ($generated@@164 $generated@@170 ($generated@@163 $generated@@169)) $generated@@169))
 :pattern ( ($generated@@163 $generated@@169))
)))
(assert (forall (($generated@@171 Int) ) (! (= ($generated@@163 ($generated@@8 ($generated@@157 $generated@@171))) ($generated@@159 ($generated@@163 ($generated@@8 $generated@@171))))
 :pattern ( ($generated@@163 ($generated@@8 ($generated@@157 $generated@@171))))
)))
(assert (forall (($generated@@172 T@U) ) (! (= ($generated@@163 ($generated@@159 $generated@@172)) ($generated@@159 ($generated@@163 $generated@@172)))
 :pattern ( ($generated@@163 ($generated@@159 $generated@@172)))
)))
(push 1)
(declare-fun ControlFlow (Int Int) Int)
(declare-fun $generated@@173 () Int)
(declare-fun $generated@@174 () T@U)
(declare-fun $generated@@175 () T@U)
(declare-fun $generated@@176 () T@U)
(declare-fun $generated@@177 () T@U)
(declare-fun $generated@@178 (T@U) Bool)
(declare-fun $generated@@179 (T@U) Bool)
(declare-fun $generated@@180 () Int)
(assert  (and (and (and (= (type $generated@@174) ($generated@@57 $generated@@47 $generated@@4)) (= (type $generated@@175) $generated@@47)) (= (type $generated@@176) ($generated@@48 $generated@@47 $generated@@49))) (= (type $generated@@177) ($generated@@50 $generated@@4))))
(set-option :timeout 0)
(set-option :rlimit 0)
(assert (not
 (=> (= (ControlFlow 0 0) 8) (let (($generated@@181 true))
(let (($generated@@182  (=> (and (< $generated@@173 ($generated@@157 0)) (= (ControlFlow 0 6) 4)) $generated@@181)))
(let (($generated@@183  (=> (and (<= ($generated@@157 0) $generated@@173) (= (ControlFlow 0 5) 4)) $generated@@181)))
(let (($generated@@184  (and (=> (= (ControlFlow 0 2) (- 0 3)) (<= ($generated@@157 0) ($generated@@157 0))) (=> (= (ControlFlow 0 2) (- 0 1)) ($generated@@0 ($generated@@159 ($generated@@11 (< 0 3))))))))
(let (($generated@@185  (=> (= $generated@@174 ($generated@@45 $generated@@175 $generated@@176 $generated@@177 false)) (and (and (=> (= (ControlFlow 0 7) 2) $generated@@184) (=> (= (ControlFlow 0 7) 5) $generated@@183)) (=> (= (ControlFlow 0 7) 6) $generated@@182)))))
(let (($generated@@186  (=> (and (and ($generated@@178 $generated@@176) ($generated@@179 $generated@@176)) (and (= 0 $generated@@180) (= (ControlFlow 0 8) 7))) $generated@@185)))
$generated@@186)))))))
))
(check-sat)
(pop 1)
; Valid
(get-info :rlimit)
(reset)
(set-option :rlimit 0)
; did a full reset
(reset)
(set-option :print-success false)
(set-info :smt-lib-version 2.6)
(set-option :auto_config false)
(set-option :type_check true)
(set-option :smt.case_split 3)
(set-option :smt.qi.eager_threshold 100)
(set-option :smt.delay_units true)
(set-option :smt.arith.solver 2)
(set-option :smt.mbqi false)
(set-option :model.compact false)
(set-option :model.v2 true)
(set-option :pp.bv_literals false)
; done setting options


(set-info :category "industrial")
(declare-sort |T@U| 0)
(declare-sort |T@T| 0)
(declare-fun real_pow (Real Real) Real)
(declare-fun UOrdering2 (|T@U| |T@U|) Bool)
(declare-fun UOrdering3 (|T@T| |T@U| |T@U|) Bool)
(declare-fun tickleBool (Bool) Bool)
(assert (and (tickleBool true) (tickleBool false)))
(declare-fun $generated (T@U) Int)
(declare-fun $generated@@0 (T@U) Bool)
(declare-fun $generated@@1 (T@T) Int)
(declare-fun $generated@@2 () T@T)
(declare-fun $generated@@3 () T@T)
(declare-fun $generated@@4 () T@T)
(declare-fun $generated@@5 () T@T)
(declare-fun $generated@@6 () T@T)
(declare-fun $generated@@7 () T@T)
(declare-fun $generated@@8 (Int) T@U)
(declare-fun type (T@U) T@T)
(declare-fun $generated@@9 (Real) T@U)
(declare-fun $generated@@10 (T@U) Real)
(declare-fun $generated@@11 (Bool) T@U)
(declare-fun $generated@@12 (RoundingMode) T@U)
(declare-fun $generated@@13 (T@U) RoundingMode)
(declare-fun $generated@@14 (String) T@U)
(declare-fun $generated@@15 (T@U) String)
(declare-fun $generated@@16 ((RegEx String)) T@U)
(declare-fun $generated@@17 (T@U) (RegEx String))
(declare-fun $generated@@44 (T@U T@U) Bool)
(declare-fun $generated@@45 (T@T T@T) T@T)
(declare-fun $generated@@46 () T@T)
(declare-fun $generated@@47 () T@T)
(declare-fun $generated@@48 (T@U T@U) T@U)
(declare-fun $generated@@49 (T@U T@U) T@U)
(declare-fun $generated@@50 () T@U)
(declare-fun $generated@@51 (T@T) T@T)
(declare-fun $generated@@52 (T@T) T@T)
(declare-fun $generated@@53 (T@U T@U T@U) T@U)
(declare-fun $generated@@54 (T@T) T@T)
(declare-fun $generated@@55 (T@T) T@T)
(declare-fun $generated@@56 (T@U T@U T@U) T@U)
(declare-fun $generated@@106 (T@U T@U T@U) T@U)
(declare-fun $generated@@107 (T@U T@U T@U Bool) T@U)
(declare-fun $generated@@108 (T@T T@T) T@T)
(declare-fun $generated@@109 (T@T) T@T)
(declare-fun $generated@@110 (T@T) T@T)
(declare-fun $generated@@111 (T@U T@U T@U T@U) T@U)
(declare-fun $generated@@162 (Real) Real)
(declare-fun $generated@@164 (T@U) T@U)
(declare-fun $generated@@171 (T@U) T@U)
(declare-fun $generated@@172 (T@T T@U) T@U)
(declare-fun $generated@@173 () T@T)
(assert  (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (= ($generated@@1 $generated@@2) 0) (= ($generated@@1 $generated@@3) 1)) (= ($generated@@1 $generated@@4) 2)) (= ($generated@@1 $generated@@5) 3)) (= ($generated@@1 $generated@@6) 4)) (= ($generated@@1 $generated@@7) 5)) (forall (($generated@@18 Int) ) (! (= ($generated ($generated@@8 $generated@@18)) $generated@@18)
 :pattern ( ($generated@@8 $generated@@18))
))) (forall (($generated@@19 T@U) ) (!  (=> (= (type $generated@@19) $generated@@2) (= ($generated@@8 ($generated $generated@@19)) $generated@@19))
 :pattern ( ($generated $generated@@19))
))) (forall (($generated@@20 Int) ) (! (= (type ($generated@@8 $generated@@20)) $generated@@2)
 :pattern ( ($generated@@8 $generated@@20))
))) (forall (($generated@@21 Real) ) (! (= ($generated@@10 ($generated@@9 $generated@@21)) $generated@@21)
 :pattern ( ($generated@@9 $generated@@21))
))) (forall (($generated@@22 T@U) ) (!  (=> (= (type $generated@@22) $generated@@3) (= ($generated@@9 ($generated@@10 $generated@@22)) $generated@@22))
 :pattern ( ($generated@@10 $generated@@22))
))) (forall (($generated@@23 Real) ) (! (= (type ($generated@@9 $generated@@23)) $generated@@3)
 :pattern ( ($generated@@9 $generated@@23))
))) (forall (($generated@@24 Bool) ) (! (= ($generated@@0 ($generated@@11 $generated@@24)) $generated@@24)
 :pattern ( ($generated@@11 $generated@@24))
))) (forall (($generated@@25 T@U) ) (!  (=> (= (type $generated@@25) $generated@@4) (= ($generated@@11 ($generated@@0 $generated@@25)) $generated@@25))
 :pattern ( ($generated@@0 $generated@@25))
))) (forall (($generated@@26 Bool) ) (! (= (type ($generated@@11 $generated@@26)) $generated@@4)
 :pattern ( ($generated@@11 $generated@@26))
))) (forall (($generated@@27 RoundingMode) ) (! (= ($generated@@13 ($generated@@12 $generated@@27)) $generated@@27)
 :pattern ( ($generated@@12 $generated@@27))
))) (forall (($generated@@28 T@U) ) (!  (=> (= (type $generated@@28) $generated@@5) (= ($generated@@12 ($generated@@13 $generated@@28)) $generated@@28))
 :pattern ( ($generated@@13 $generated@@28))
))) (forall (($generated@@29 RoundingMode) ) (! (= (type ($generated@@12 $generated@@29)) $generated@@5)
 :pattern ( ($generated@@12 $generated@@29))
))) (forall (($generated@@30 String) ) (! (= ($generated@@15 ($generated@@14 $generated@@30)) $generated@@30)
 :pattern ( ($generated@@14 $generated@@30))
))) (forall (($generated@@31 T@U) ) (!  (=> (= (type $generated@@31) $generated@@6) (= ($generated@@14 ($generated@@15 $generated@@31)) $generated@@31))
 :pattern ( ($generated@@15 $generated@@31))
))) (forall (($generated@@32 String) ) (! (= (type ($generated@@14 $generated@@32)) $generated@@6)
 :pattern ( ($generated@@14 $generated@@32))
))) (forall (($generated@@33 (RegEx String)) ) (! (= ($generated@@17 ($generated@@16 $generated@@33)) $generated@@33)
 :pattern ( ($generated@@16 $generated@@33))
))) (forall (($generated@@34 T@U) ) (!  (=> (= (type $generated@@34) $generated@@7) (= ($generated@@16 ($generated@@17 $generated@@34)) $generated@@34))
 :pattern ( ($generated@@17 $generated@@34))
))) (forall (($generated@@35 (RegEx String)) ) (! (= (type ($generated@@16 $generated@@35)) $generated@@7)
 :pattern ( ($generated@@16 $generated@@35))
))))
(assert (forall (($generated@@36 T@U) ) (! (UOrdering2 $generated@@36 $generated@@36)
 :no-pattern ($generated $generated@@36)
 :no-pattern ($generated@@0 $generated@@36)
)))
(assert (forall (($generated@@37 T@U) ($generated@@38 T@U) ($generated@@39 T@U) ) (! (let (($generated@@40 (type $generated@@37)))
 (=> (and (and (= (type $generated@@38) $generated@@40) (= (type $generated@@39) $generated@@40)) (and (UOrdering2 $generated@@37 $generated@@38) (UOrdering2 $generated@@38 $generated@@39))) (UOrdering2 $generated@@37 $generated@@39)))
 :pattern ( (UOrdering2 $generated@@37 $generated@@38) (UOrdering2 $generated@@38 $generated@@39))
)))
(assert (forall (($generated@@41 T@U) ($generated@@42 T@U) ) (! (let (($generated@@43 (type $generated@@41)))
 (=> (= (type $generated@@42) $generated@@43) (=> (and (UOrdering2 $generated@@41 $generated@@42) (UOrdering2 $generated@@42 $generated@@41)) (= $generated@@41 $generated@@42))))
 :pattern ( (UOrdering2 $generated@@41 $generated@@42) (UOrdering2 $generated@@42 $generated@@41))
)))
(assert  (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (forall (($generated@@57 T@T) ($generated@@58 T@T) ) (= ($generated@@1 ($generated@@45 $generated@@57 $generated@@58)) 6)) (forall (($generated@@59 T@T) ($generated@@60 T@T) ) (! (= ($generated@@51 ($generated@@45 $generated@@59 $generated@@60)) $generated@@59)
 :pattern ( ($generated@@45 $generated@@59 $generated@@60))
))) (forall (($generated@@61 T@T) ($generated@@62 T@T) ) (! (= ($generated@@52 ($generated@@45 $generated@@61 $generated@@62)) $generated@@62)
 :pattern ( ($generated@@45 $generated@@61 $generated@@62))
))) (forall (($generated@@63 T@U) ($generated@@64 T@U) ) (! (let (($generated@@65 ($generated@@52 (type $generated@@63))))
(= (type ($generated@@49 $generated@@63 $generated@@64)) $generated@@65))
 :pattern ( ($generated@@49 $generated@@63 $generated@@64))
))) (forall (($generated@@66 T@U) ($generated@@67 T@U) ($generated@@68 T@U) ) (! (let (($generated@@69 (type $generated@@68)))
(let (($generated@@70 (type $generated@@67)))
(= (type ($generated@@53 $generated@@66 $generated@@67 $generated@@68)) ($generated@@45 $generated@@70 $generated@@69))))
 :pattern ( ($generated@@53 $generated@@66 $generated@@67 $generated@@68))
))) (forall (($generated@@71 T@U) ($generated@@72 T@U) ($generated@@73 T@U) ) (! (let (($generated@@74 ($generated@@52 (type $generated@@71))))
 (=> (= (type $generated@@73) $generated@@74) (= ($generated@@49 ($generated@@53 $generated@@71 $generated@@72 $generated@@73) $generated@@72) $generated@@73)))
 :weight 0
))) (and (forall (($generated@@75 T@U) ($generated@@76 T@U) ($generated@@77 T@U) ($generated@@78 T@U) ) (!  (or (= $generated@@77 $generated@@78) (= ($generated@@49 ($generated@@53 $generated@@76 $generated@@77 $generated@@75) $generated@@78) ($generated@@49 $generated@@76 $generated@@78)))
 :weight 0
)) (forall (($generated@@79 T@U) ($generated@@80 T@U) ($generated@@81 T@U) ($generated@@82 T@U) ) (!  (or true (= ($generated@@49 ($generated@@53 $generated@@80 $generated@@81 $generated@@79) $generated@@82) ($generated@@49 $generated@@80 $generated@@82)))
 :weight 0
)))) (= ($generated@@1 $generated@@46) 7)) (forall (($generated@@83 T@T) ) (= ($generated@@1 ($generated@@54 $generated@@83)) 8))) (forall (($generated@@84 T@T) ) (! (= ($generated@@55 ($generated@@54 $generated@@84)) $generated@@84)
 :pattern ( ($generated@@54 $generated@@84))
))) (forall (($generated@@85 T@U) ($generated@@86 T@U) ) (! (let (($generated@@87 ($generated@@55 (type $generated@@86))))
(= (type ($generated@@48 $generated@@85 $generated@@86)) $generated@@87))
 :pattern ( ($generated@@48 $generated@@85 $generated@@86))
))) (= ($generated@@1 $generated@@47) 9)) (forall (($generated@@88 T@U) ($generated@@89 T@U) ($generated@@90 T@U) ) (! (= (type ($generated@@56 $generated@@88 $generated@@89 $generated@@90)) $generated@@47)
 :pattern ( ($generated@@56 $generated@@88 $generated@@89 $generated@@90))
))) (forall (($generated@@91 T@U) ($generated@@92 T@U) ($generated@@93 T@U) ) (! (let (($generated@@94 ($generated@@55 (type $generated@@92))))
 (=> (= (type $generated@@93) $generated@@94) (= ($generated@@48 ($generated@@56 $generated@@91 $generated@@92 $generated@@93) $generated@@92) $generated@@93)))
 :weight 0
))) (and (forall (($generated@@95 T@U) ($generated@@96 T@U) ($generated@@97 T@U) ($generated@@98 T@U) ) (!  (or (= $generated@@97 $generated@@98) (= ($generated@@48 ($generated@@56 $generated@@96 $generated@@97 $generated@@95) $generated@@98) ($generated@@48 $generated@@96 $generated@@98)))
 :weight 0
)) (forall (($generated@@99 T@U) ($generated@@100 T@U) ($generated@@101 T@U) ($generated@@102 T@U) ) (!  (or true (= ($generated@@48 ($generated@@56 $generated@@100 $generated@@101 $generated@@99) $generated@@102) ($generated@@48 $generated@@100 $generated@@102)))
 :weight 0
)))) (= (type $generated@@50) ($generated@@54 $generated@@4))))
(assert (forall (($generated@@103 T@U) ($generated@@104 T@U) ) (!  (=> (and (and (= (type $generated@@103) ($generated@@45 $generated@@46 $generated@@47)) (= (type $generated@@104) ($generated@@45 $generated@@46 $generated@@47))) ($generated@@44 $generated@@103 $generated@@104)) (forall (($generated@@105 T@U) ) (!  (=> (and (= (type $generated@@105) $generated@@46) ($generated@@0 ($generated@@48 ($generated@@49 $generated@@103 $generated@@105) $generated@@50))) ($generated@@0 ($generated@@48 ($generated@@49 $generated@@104 $generated@@105) $generated@@50)))
 :pattern ( ($generated@@48 ($generated@@49 $generated@@104 $generated@@105) $generated@@50))
)))
 :pattern ( ($generated@@44 $generated@@103 $generated@@104))
)))
(assert  (and (and (and (and (and (and (and (forall (($generated@@112 T@T) ($generated@@113 T@T) ) (= ($generated@@1 ($generated@@108 $generated@@112 $generated@@113)) 10)) (forall (($generated@@114 T@T) ($generated@@115 T@T) ) (! (= ($generated@@109 ($generated@@108 $generated@@114 $generated@@115)) $generated@@114)
 :pattern ( ($generated@@108 $generated@@114 $generated@@115))
))) (forall (($generated@@116 T@T) ($generated@@117 T@T) ) (! (= ($generated@@110 ($generated@@108 $generated@@116 $generated@@117)) $generated@@117)
 :pattern ( ($generated@@108 $generated@@116 $generated@@117))
))) (forall (($generated@@118 T@U) ($generated@@119 T@U) ($generated@@120 T@U) ) (! (let (($generated@@121 ($generated@@110 (type $generated@@118))))
(= (type ($generated@@106 $generated@@118 $generated@@119 $generated@@120)) $generated@@121))
 :pattern ( ($generated@@106 $generated@@118 $generated@@119 $generated@@120))
))) (forall (($generated@@122 T@U) ($generated@@123 T@U) ($generated@@124 T@U) ($generated@@125 T@U) ) (! (let (($generated@@126 (type $generated@@125)))
(let (($generated@@127 (type $generated@@123)))
(= (type ($generated@@111 $generated@@122 $generated@@123 $generated@@124 $generated@@125)) ($generated@@108 $generated@@127 $generated@@126))))
 :pattern ( ($generated@@111 $generated@@122 $generated@@123 $generated@@124 $generated@@125))
))) (forall (($generated@@128 T@U) ($generated@@129 T@U) ($generated@@130 T@U) ($generated@@131 T@U) ) (! (let (($generated@@132 ($generated@@110 (type $generated@@128))))
 (=> (= (type $generated@@131) $generated@@132) (= ($generated@@106 ($generated@@111 $generated@@128 $generated@@129 $generated@@130 $generated@@131) $generated@@129 $generated@@130) $generated@@131)))
 :weight 0
))) (and (and (forall (($generated@@133 T@U) ($generated@@134 T@U) ($generated@@135 T@U) ($generated@@136 T@U) ($generated@@137 T@U) ($generated@@138 T@U) ) (!  (or (= $generated@@135 $generated@@137) (= ($generated@@106 ($generated@@111 $generated@@134 $generated@@135 $generated@@136 $generated@@133) $generated@@137 $generated@@138) ($generated@@106 $generated@@134 $generated@@137 $generated@@138)))
 :weight 0
)) (forall (($generated@@139 T@U) ($generated@@140 T@U) ($generated@@141 T@U) ($generated@@142 T@U) ($generated@@143 T@U) ($generated@@144 T@U) ) (!  (or (= $generated@@142 $generated@@144) (= ($generated@@106 ($generated@@111 $generated@@140 $generated@@141 $generated@@142 $generated@@139) $generated@@143 $generated@@144) ($generated@@106 $generated@@140 $generated@@143 $generated@@144)))
 :weight 0
))) (forall (($generated@@145 T@U) ($generated@@146 T@U) ($generated@@147 T@U) ($generated@@148 T@U) ($generated@@149 T@U) ($generated@@150 T@U) ) (!  (or true (= ($generated@@106 ($generated@@111 $generated@@146 $generated@@147 $generated@@148 $generated@@145) $generated@@149 $generated@@150) ($generated@@106 $generated@@146 $generated@@149 $generated@@150)))
 :weight 0
)))) (forall (($generated@@151 T@U) ($generated@@152 T@U) ($generated@@153 T@U) ($generated@@154 Bool) ) (! (= (type ($generated@@107 $generated@@151 $generated@@152 $generated@@153 $generated@@154)) ($generated@@108 $generated@@46 $generated@@4))
 :pattern ( ($generated@@107 $generated@@151 $generated@@152 $generated@@153 $generated@@154))
))))
(assert (forall (($generated@@155 T@U) ($generated@@156 T@U) ($generated@@157 T@U) ($generated@@158 Bool) ($generated@@159 T@U) ($generated@@160 T@U) ) (! (let (($generated@@161 ($generated@@55 (type $generated@@160))))
 (=> (and (and (and (and (= (type $generated@@155) $generated@@46) (= (type $generated@@156) ($generated@@45 $generated@@46 $generated@@47))) (= (type $generated@@157) ($generated@@54 $generated@@4))) (= (type $generated@@159) $generated@@46)) (= (type $generated@@160) ($generated@@54 $generated@@161))) (= ($generated@@0 ($generated@@106 ($generated@@107 $generated@@155 $generated@@156 $generated@@157 $generated@@158) $generated@@159 $generated@@160))  (=> (and (not (= $generated@@159 $generated@@155)) ($generated@@0 ($generated@@48 ($generated@@49 $generated@@156 $generated@@159) $generated@@157))) $generated@@158))))
 :pattern ( ($generated@@106 ($generated@@107 $generated@@155 $generated@@156 $generated@@157 $generated@@158) $generated@@159 $generated@@160))
)))
(assert (forall (($generated@@163 Real) ) (! (= ($generated@@162 $generated@@163) $generated@@163)
 :pattern ( ($generated@@162 $generated@@163))
)))
(assert (forall (($generated@@165 T@U) ) (! (let (($generated@@166 (type $generated@@165)))
(= (type ($generated@@164 $generated@@165)) $generated@@166))
 :pattern ( ($generated@@164 $generated@@165))
)))
(assert (forall (($generated@@167 T@U) ) (! (= ($generated@@164 $generated@@167) $generated@@167)
 :pattern ( ($generated@@164 $generated@@167))
)))
(assert (forall (($generated@@168 T@U) ($generated@@169 T@U) ($generated@@170 T@U) ) (!  (=> (and (and (and (and (= (type $generated@@168) ($generated@@45 $generated@@46 $generated@@47)) (= (type $generated@@169) ($generated@@45 $generated@@46 $generated@@47))) (= (type $generated@@170) ($generated@@45 $generated@@46 $generated@@47))) (not (= $generated@@168 $generated@@170))) (and ($generated@@44 $generated@@168 $generated@@169) ($generated@@44 $generated@@169 $generated@@170))) ($generated@@44 $generated@@168 $generated@@170))
 :pattern ( ($generated@@44 $generated@@168 $generated@@169) ($generated@@44 $generated@@169 $generated@@170))
)))
(assert  (and (and (= ($generated@@1 $generated@@173) 11) (forall (($generated@@174 T@U) ) (! (= (type ($generated@@171 $generated@@174)) $generated@@173)
 :pattern ( ($generated@@171 $generated@@174))
))) (forall (($generated@@175 T@T) ($generated@@176 T@U) ) (! (= (type ($generated@@172 $generated@@175 $generated@@176)) $generated@@175)
 :pattern ( ($generated@@172 $generated@@175 $generated@@176))
))))
(assert (forall (($generated@@177 T@U) ) (! (let (($generated@@178 (type $generated@@177)))
(= ($generated@@172 $generated@@178 ($generated@@171 $generated@@177)) $generated@@177))
 :pattern ( ($generated@@171 $generated@@177))
)))
(assert (forall (($generated@@179 Real) ) (! (= ($generated@@171 ($generated@@9 ($generated@@162 $generated@@179))) ($generated@@164 ($generated@@171 ($generated@@9 $generated@@179))))
 :pattern ( ($generated@@171 ($generated@@9 ($generated@@162 $generated@@179))))
)))
(assert (forall (($generated@@180 T@U) ) (! (= ($generated@@171 ($generated@@164 $generated@@180)) ($generated@@164 ($generated@@171 $generated@@180)))
 :pattern ( ($generated@@171 ($generated@@164 $generated@@180)))
)))
(push 1)
(declare-fun ControlFlow (Int Int) Int)
(declare-fun $generated@@181 () Real)
(declare-fun $generated@@182 () Real)
(declare-fun $generated@@183 () Real)
(declare-fun $generated@@184 () Real)
(declare-fun $generated@@185 () Real)
(declare-fun $generated@@186 () Real)
(declare-fun $generated@@187 () Real)
(declare-fun $generated@@188 () Real)
(declare-fun $generated@@189 () Real)
(declare-fun $generated@@190 () Real)
(declare-fun $generated@@191 () Bool)
(declare-fun $generated@@192 () T@U)
(declare-fun $generated@@193 () T@U)
(declare-fun $generated@@194 () T@U)
(declare-fun $generated@@195 () Real)
(declare-fun $generated@@196 () Real)
(declare-fun $generated@@197 () Real)
(declare-fun $generated@@198 (T@U) Bool)
(declare-fun $generated@@199 (T@U) Bool)
(declare-fun $generated@@200 () Real)
(declare-fun $generated@@201 () Real)
(declare-fun $generated@@202 () Int)
(assert  (and (and (= (type $generated@@192) ($generated@@45 $generated@@46 $generated@@47)) (= (type $generated@@193) $generated@@46)) (= (type $generated@@194) ($generated@@108 $generated@@46 $generated@@4))))
(set-option :timeout 0)
(set-option :rlimit 0)
(assert (not
 (=> (= (ControlFlow 0 0) 17) (let (($generated@@203  (and (=> (= (ControlFlow 0 5) (- 0 6)) (or (<= 0.0 $generated@@181) (= (- $generated@@182 $generated@@183) $generated@@181))) (=> (or (<= 0.0 $generated@@181) (= (- $generated@@182 $generated@@183) $generated@@181)) (=> (= (ControlFlow 0 5) (- 0 4)) (<= (- $generated@@182 $generated@@183) (- $generated@@181 1.0)))))))
(let (($generated@@204  (=> (and (<= $generated@@184 12.0) (= $generated@@185 ($generated@@162 14.2))) (and (=> (= (ControlFlow 0 9) (- 0 10)) (or (= $generated@@185 ($generated@@162 0.0)) (and (<= ($generated@@162 10.0) $generated@@185) (<= $generated@@185 ($generated@@162 20.0))))) (=> (or (= $generated@@185 ($generated@@162 0.0)) (and (<= ($generated@@162 10.0) $generated@@185) (<= $generated@@185 ($generated@@162 20.0)))) (=> (and (and (= $generated@@186 ($generated@@162 14.2)) (= $generated@@183 $generated@@186)) (and (= $generated@@182 $generated@@184) (= (ControlFlow 0 9) 5))) $generated@@203))))))
(let (($generated@@205  (=> (and (< 12.0 $generated@@184) (= $generated@@187 ($generated@@162 10.0))) (and (=> (= (ControlFlow 0 7) (- 0 8)) (or (= $generated@@187 ($generated@@162 0.0)) (and (<= ($generated@@162 10.0) $generated@@187) (<= $generated@@187 ($generated@@162 20.0))))) (=> (or (= $generated@@187 ($generated@@162 0.0)) (and (<= ($generated@@162 10.0) $generated@@187) (<= $generated@@187 ($generated@@162 20.0)))) (=> (and (and (= $generated@@188 ($generated@@162 10.0)) (= $generated@@183 $generated@@189)) (and (= $generated@@182 $generated@@188) (= (ControlFlow 0 7) 5))) $generated@@203))))))
(let (($generated@@206  (=> (< $generated@@189 $generated@@184) (=> (and (= $generated@@181 (- $generated@@184 $generated@@189)) (= $generated@@190 ($generated@@162 12.0))) (and (=> (= (ControlFlow 0 11) (- 0 12)) (or (= $generated@@190 ($generated@@162 0.0)) (and (<= ($generated@@162 10.0) $generated@@190) (<= $generated@@190 ($generated@@162 20.0))))) (=> (or (= $generated@@190 ($generated@@162 0.0)) (and (<= ($generated@@162 10.0) $generated@@190) (<= $generated@@190 ($generated@@162 20.0)))) (and (=> (= (ControlFlow 0 11) 7) $generated@@205) (=> (= (ControlFlow 0 11) 9) $generated@@204))))))))
(let (($generated@@207 true))
(let (($generated@@208  (=> $generated@@191 (and (=> (= (ControlFlow 0 13) 3) $generated@@207) (=> (= (ControlFlow 0 13) 11) $generated@@206)))))
(let (($generated@@209 true))
(let (($generated@@210  (and (=> (= (ControlFlow 0 14) 2) $generated@@209) (=> (= (ControlFlow 0 14) 13) $generated@@208))))
(let (($generated@@211 true))
(let (($generated@@212  (=> (and (and (and (or (= $generated@@189 ($generated@@162 0.0)) (and (<= ($generated@@162 10.0) $generated@@189) (<= $generated@@189 ($generated@@162 20.0)))) (or (= $generated@@184 ($generated@@162 0.0)) (and (<= ($generated@@162 10.0) $generated@@184) (<= $generated@@184 ($generated@@162 20.0))))) (and (not false) (forall (($generated@@213 T@U) ) (!  (=> (= (type $generated@@213) $generated@@46) (=> (and (not (= $generated@@213 $generated@@193)) ($generated@@0 ($generated@@48 ($generated@@49 $generated@@192 $generated@@213) $generated@@50))) (= ($generated@@49 $generated@@192 $generated@@213) ($generated@@49 $generated@@192 $generated@@213))))
 :pattern ( ($generated@@49 $generated@@192 $generated@@213))
)))) (and (and ($generated@@44 $generated@@192 $generated@@192) (forall (($generated@@214 T@U) ($generated@@215 T@U) ) (! (let (($generated@@216 ($generated@@55 (type $generated@@215))))
 (=> (and (and (= (type $generated@@214) $generated@@46) (= (type $generated@@215) ($generated@@54 $generated@@216))) (and (not (= $generated@@214 $generated@@193)) ($generated@@0 ($generated@@48 ($generated@@49 $generated@@192 $generated@@214) $generated@@50)))) (or (= ($generated@@48 ($generated@@49 $generated@@192 $generated@@214) $generated@@215) ($generated@@48 ($generated@@49 $generated@@192 $generated@@214) $generated@@215)) ($generated@@0 ($generated@@106 $generated@@194 $generated@@214 $generated@@215)))))
 :pattern ( ($generated@@48 ($generated@@49 $generated@@192 $generated@@214) $generated@@215))
))) (and (<= (- $generated@@184 $generated@@189) $generated@@195) (=> (= (- $generated@@184 $generated@@189) $generated@@195) true)))) (and (=> (= (ControlFlow 0 15) 1) $generated@@211) (=> (= (ControlFlow 0 15) 14) $generated@@210)))))
(let (($generated@@217  (=> (= $generated@@194 ($generated@@107 $generated@@193 $generated@@192 $generated@@50 false)) (=> (and (and (or (= $generated@@196 ($generated@@162 0.0)) (and (<= ($generated@@162 10.0) $generated@@196) (<= $generated@@196 ($generated@@162 20.0)))) (or (= $generated@@197 ($generated@@162 0.0)) (and (<= ($generated@@162 10.0) $generated@@197) (<= $generated@@197 ($generated@@162 20.0))))) (and (= $generated@@195 (- $generated@@197 $generated@@196)) (= (ControlFlow 0 16) 15))) $generated@@212))))
(let (($generated@@218  (=> (and (and (and ($generated@@198 $generated@@192) ($generated@@199 $generated@@192)) (and (or (= $generated@@200 ($generated@@162 0.0)) (and (<= ($generated@@162 10.0) $generated@@200) (<= $generated@@200 ($generated@@162 20.0)))) true)) (and (and (or (= $generated@@201 ($generated@@162 0.0)) (and (<= ($generated@@162 10.0) $generated@@201) (<= $generated@@201 ($generated@@162 20.0)))) true) (and (= 1 $generated@@202) (= (ControlFlow 0 17) 16)))) $generated@@217)))
$generated@@218)))))))))))))
))
(check-sat)
(pop 1)
; Valid
(get-info :rlimit)
(reset)
(set-option :rlimit 0)
; did a full reset
(reset)
(set-option :print-success false)
(set-info :smt-lib-version 2.6)
(set-option :auto_config false)
(set-option :type_check true)
(set-option :smt.case_split 3)
(set-option :smt.qi.eager_threshold 100)
(set-option :smt.delay_units true)
(set-option :smt.arith.solver 2)
(set-option :smt.mbqi false)
(set-option :model.compact false)
(set-option :model.v2 true)
(set-option :pp.bv_literals false)
; done setting options


(set-info :category "industrial")
(declare-sort |T@U| 0)
(declare-sort |T@T| 0)
(declare-fun real_pow (Real Real) Real)
(declare-fun UOrdering2 (|T@U| |T@U|) Bool)
(declare-fun UOrdering3 (|T@T| |T@U| |T@U|) Bool)
(declare-fun tickleBool (Bool) Bool)
(assert (and (tickleBool true) (tickleBool false)))
(declare-fun $generated (T@U) Int)
(declare-fun $generated@@0 (T@U) Bool)
(declare-fun $generated@@1 (T@T) Int)
(declare-fun $generated@@2 () T@T)
(declare-fun $generated@@3 () T@T)
(declare-fun $generated@@4 () T@T)
(declare-fun $generated@@5 () T@T)
(declare-fun $generated@@6 () T@T)
(declare-fun $generated@@7 () T@T)
(declare-fun $generated@@8 (Int) T@U)
(declare-fun type (T@U) T@T)
(declare-fun $generated@@9 (Real) T@U)
(declare-fun $generated@@10 (T@U) Real)
(declare-fun $generated@@11 (Bool) T@U)
(declare-fun $generated@@12 (RoundingMode) T@U)
(declare-fun $generated@@13 (T@U) RoundingMode)
(declare-fun $generated@@14 (String) T@U)
(declare-fun $generated@@15 (T@U) String)
(declare-fun $generated@@16 ((RegEx String)) T@U)
(declare-fun $generated@@17 (T@U) (RegEx String))
(declare-fun $generated@@44 () T@U)
(declare-fun $generated@@45 () T@U)
(declare-fun $generated@@46 () T@U)
(declare-fun $generated@@47 () T@U)
(declare-fun $generated@@48 () T@U)
(declare-fun $generated@@49 () T@U)
(declare-fun $generated@@50 () T@U)
(declare-fun $generated@@51 () T@U)
(declare-fun $generated@@52 () T@U)
(declare-fun $generated@@53 () T@U)
(declare-fun $generated@@54 () T@U)
(declare-fun $generated@@55 () T@U)
(declare-fun $generated@@56 () T@U)
(declare-fun $generated@@57 () T@U)
(declare-fun $generated@@58 () T@U)
(declare-fun $generated@@59 () T@U)
(declare-fun $generated@@60 () T@U)
(declare-fun $generated@@61 () T@U)
(declare-fun $generated@@62 () T@U)
(declare-fun $generated@@63 () T@U)
(declare-fun $generated@@64 () T@U)
(declare-fun $generated@@65 () T@U)
(declare-fun $generated@@66 () T@U)
(declare-fun $generated@@67 () T@U)
(declare-fun $generated@@68 () T@U)
(declare-fun $generated@@69 () T@U)
(declare-fun $generated@@70 () T@U)
(declare-fun $generated@@71 () T@U)
(declare-fun $generated@@72 () T@U)
(declare-fun $generated@@73 () T@U)
(declare-fun $generated@@74 () T@U)
(declare-fun $generated@@75 () T@U)
(declare-fun $generated@@76 () T@U)
(declare-fun $generated@@77 () T@U)
(declare-fun $generated@@78 () T@T)
(declare-fun $generated@@79 () T@T)
(declare-fun $generated@@80 (T@T) T@T)
(declare-fun $generated@@81 (T@T) T@T)
(declare-fun $generated@@82 () T@T)
(declare-fun $generated@@83 () T@T)
(declare-fun $generated@@86 (T@U) Int)
(declare-fun $generated@@87 (T@U) T@U)
(declare-fun $generated@@89 (T@U T@U T@U) Bool)
(declare-fun $generated@@90 (Int) T@U)
(declare-fun $generated@@91 (T@T T@T) T@T)
(declare-fun $generated@@92 () T@T)
(declare-fun $generated@@93 () T@T)
(declare-fun $generated@@94 (T@T) T@T)
(declare-fun $generated@@95 (T@T) T@T)
(declare-fun $generated@@96 (T@U T@U) T@U)
(declare-fun $generated@@97 (T@U T@U T@U) T@U)
(declare-fun $generated@@98 (T@U T@U) T@U)
(declare-fun $generated@@99 (T@U T@U T@U) T@U)
(declare-fun $generated@@147 (T@U) Int)
(declare-fun $generated@@148 (T@U) T@U)
(declare-fun $generated@@149 () T@U)
(declare-fun $generated@@150 (T@U) T@U)
(declare-fun $generated@@151 (T@U T@U) Bool)
(declare-fun $generated@@156 (T@U) Int)
(declare-fun $generated@@157 (T@U) T@U)
(declare-fun $generated@@161 (T@U) Int)
(declare-fun $generated@@164 (T@U T@U T@U) T@U)
(declare-fun $generated@@165 (T@U) T@U)
(declare-fun $generated@@166 () T@T)
(declare-fun $generated@@167 (T@U T@U) Bool)
(declare-fun $generated@@168 (T@T T@T T@T) T@T)
(declare-fun $generated@@169 (T@T) T@T)
(declare-fun $generated@@170 (T@T) T@T)
(declare-fun $generated@@171 (T@T) T@T)
(declare-fun $generated@@172 (T@U T@U T@U T@U) T@U)
(declare-fun $generated@@223 (T@U T@U) Bool)
(declare-fun $generated@@233 (T@U T@U T@U T@U) T@U)
(declare-fun $generated@@234 (T@U T@U) T@U)
(declare-fun $generated@@235 (T@T T@T T@T T@T) T@T)
(declare-fun $generated@@236 (T@T) T@T)
(declare-fun $generated@@237 (T@T) T@T)
(declare-fun $generated@@238 (T@T) T@T)
(declare-fun $generated@@239 (T@T) T@T)
(declare-fun $generated@@240 (T@U T@U T@U T@U T@U) T@U)
(declare-fun $generated@@320 () T@U)
(declare-fun $generated@@323 () T@U)
(declare-fun $generated@@326 (T@U) Bool)
(declare-fun $generated@@336 (T@U T@U T@U) T@U)
(declare-fun $generated@@337 (T@U) T@U)
(declare-fun $generated@@345 (T@U) T@U)
(declare-fun $generated@@350 (T@U) T@U)
(declare-fun $generated@@356 (T@U) T@U)
(declare-fun $generated@@361 (T@U) T@U)
(declare-fun $generated@@366 (T@U) Bool)
(declare-fun $generated@@367 (T@U T@U) T@U)
(declare-fun $generated@@368 () T@T)
(declare-fun $generated@@374 (T@U T@U) Bool)
(declare-fun $generated@@375 (T@U) T@U)
(declare-fun $generated@@376 (T@U) T@U)
(declare-fun $generated@@381 (T@U) T@U)
(declare-fun $generated@@382 (T@U) Bool)
(declare-fun $generated@@386 (T@U T@U T@U) T@U)
(declare-fun $generated@@387 (T@U T@U T@U Bool) T@U)
(declare-fun $generated@@388 (T@T T@T) T@T)
(declare-fun $generated@@389 (T@T) T@T)
(declare-fun $generated@@390 (T@T) T@T)
(declare-fun $generated@@391 (T@U T@U T@U T@U) T@U)
(declare-fun $generated@@442 (T@U T@U T@U Bool) T@U)
(declare-fun $generated@@454 (T@U T@U T@U Bool) T@U)
(declare-fun $generated@@466 (T@U T@U T@U Bool) T@U)
(declare-fun $generated@@478 (T@U) T@U)
(declare-fun $generated@@483 (T@U) T@U)
(declare-fun $generated@@484 (T@T T@U) T@U)
(declare-fun $generated@@485 () T@T)
(declare-fun $generated@@493 (T@U T@U) T@U)
(declare-fun $generated@@503 (T@U T@U) T@U)
(declare-fun $generated@@512 (T@U) T@U)
(declare-fun $generated@@517 (T@U) T@U)
(declare-fun $generated@@522 (Int) Int)
(declare-fun $generated@@524 (T@U) T@U)
(declare-fun $generated@@528 (T@U T@U T@U T@U T@U) T@U)
(declare-fun $generated@@529 () T@U)
(declare-fun $generated@@530 (T@U T@U) Bool)
(declare-fun $generated@@531 (T@T) T@U)
(declare-fun $generated@@543 (T@U T@U T@U T@U T@U T@U T@U) T@U)
(declare-fun $generated@@544 (T@U T@U T@U T@U T@U T@U T@U) T@U)
(declare-fun $generated@@545 (T@U T@U T@U) Bool)
(declare-fun $generated@@546 (T@U T@U T@U T@U T@U T@U T@U) Bool)
(declare-fun $generated@@574 (T@U) T@U)
(declare-fun $generated@@580 (T@T) T@U)
(declare-fun $generated@@581 (T@U) Int)
(declare-fun $generated@@582 (T@T) T@T)
(declare-fun $generated@@583 (T@T) T@T)
(declare-fun $generated@@588 (T@U) T@U)
(declare-fun $generated@@614 (T@U Int) T@U)
(declare-fun $generated@@619 (T@U T@U) T@U)
(declare-fun $generated@@620 () T@T)
(declare-fun $generated@@635 (T@U T@U T@U) T@U)
(declare-fun $generated@@656 (T@U) Int)
(declare-fun $generated@@657 (T@T) T@U)
(declare-fun $generated@@710 (T@U) T@U)
(declare-fun $generated@@711 (T@T T@T) T@U)
(declare-fun $generated@@712 (T@T T@T) T@T)
(declare-fun $generated@@713 (T@T) T@T)
(declare-fun $generated@@714 (T@T) T@T)
(declare-fun $generated@@728 (T@U) T@U)
(declare-fun $generated@@729 (T@T T@T) T@U)
(declare-fun $generated@@730 (T@T T@T) T@T)
(declare-fun $generated@@731 (T@T) T@T)
(declare-fun $generated@@732 (T@T) T@T)
(declare-fun $generated@@753 (T@U T@U T@U T@U T@U) T@U)
(declare-fun $generated@@754 (T@U T@U T@U) T@U)
(declare-fun $generated@@780 (T@U) T@U)
(declare-fun $generated@@791 (T@U) T@U)
(declare-fun $generated@@801 (T@U T@U T@U T@U T@U) Bool)
(declare-fun $generated@@813 (Bool) T@U)
(declare-fun $generated@@817 (T@U) T@U)
(declare-fun $generated@@838 (T@U) T@U)
(declare-fun $generated@@839 (T@U) T@U)
(declare-fun $generated@@846 (T@U) T@U)
(declare-fun $generated@@847 (T@U) T@U)
(declare-fun $generated@@872 (T@U T@U) T@U)
(declare-fun $generated@@880 (T@U T@U) T@U)
(declare-fun $generated@@901 (Int) T@U)
(declare-fun $generated@@917 (T@T) T@U)
(declare-fun $generated@@948 () T@T)
(declare-fun $generated@@966 (T@U) T@U)
(declare-fun $generated@@970 (T@U) T@U)
(declare-fun $generated@@976 (T@U) T@U)
(declare-fun $generated@@980 (T@U) T@U)
(declare-fun $generated@@986 (T@U) T@U)
(declare-fun $generated@@990 (T@U) T@U)
(declare-fun $generated@@996 (T@U) T@U)
(declare-fun $generated@@1000 (T@U) T@U)
(declare-fun $generated@@1009 (T@U) T@U)
(declare-fun $generated@@1010 (T@U Int) T@U)
(declare-fun $generated@@1019 (T@U) Int)
(declare-fun $generated@@1021 (T@U) T@U)
(declare-fun $generated@@1025 (T@U) T@U)
(declare-fun $generated@@1029 (T@U) T@U)
(declare-fun $generated@@1033 (T@U) T@U)
(declare-fun $generated@@1038 (T@U) Int)
(declare-fun $generated@@1040 (T@U) T@U)
(declare-fun $generated@@1043 (T@U) T@U)
(declare-fun $generated@@1046 (T@U) T@U)
(declare-fun $generated@@1049 (T@U) T@U)
(declare-fun $generated@@1069 (T@U) T@U)
(declare-fun $generated@@1075 (T@U) T@U)
(declare-fun $generated@@1085 (T@U) Int)
(declare-fun $generated@@1086 (T@U) Int)
(declare-fun $generated@@1106 (T@U) T@U)
(declare-fun $generated@@1127 (Int Int) Int)
(declare-fun $generated@@1130 (T@U) T@U)
(declare-fun $generated@@1131 (T@U) Int)
(declare-fun $generated@@1277 (T@U) T@U)
(declare-fun $generated@@1282 (T@U) T@U)
(declare-fun $generated@@1287 (T@U) Int)
(assert  (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (= ($generated@@1 $generated@@2) 0) (= ($generated@@1 $generated@@3) 1)) (= ($generated@@1 $generated@@4) 2)) (= ($generated@@1 $generated@@5) 3)) (= ($generated@@1 $generated@@6) 4)) (= ($generated@@1 $generated@@7) 5)) (forall (($generated@@18 Int) ) (! (= ($generated ($generated@@8 $generated@@18)) $generated@@18)
 :pattern ( ($generated@@8 $generated@@18))
))) (forall (($generated@@19 T@U) ) (!  (=> (= (type $generated@@19) $generated@@2) (= ($generated@@8 ($generated $generated@@19)) $generated@@19))
 :pattern ( ($generated $generated@@19))
))) (forall (($generated@@20 Int) ) (! (= (type ($generated@@8 $generated@@20)) $generated@@2)
 :pattern ( ($generated@@8 $generated@@20))
))) (forall (($generated@@21 Real) ) (! (= ($generated@@10 ($generated@@9 $generated@@21)) $generated@@21)
 :pattern ( ($generated@@9 $generated@@21))
))) (forall (($generated@@22 T@U) ) (!  (=> (= (type $generated@@22) $generated@@3) (= ($generated@@9 ($generated@@10 $generated@@22)) $generated@@22))
 :pattern ( ($generated@@10 $generated@@22))
))) (forall (($generated@@23 Real) ) (! (= (type ($generated@@9 $generated@@23)) $generated@@3)
 :pattern ( ($generated@@9 $generated@@23))
))) (forall (($generated@@24 Bool) ) (! (= ($generated@@0 ($generated@@11 $generated@@24)) $generated@@24)
 :pattern ( ($generated@@11 $generated@@24))
))) (forall (($generated@@25 T@U) ) (!  (=> (= (type $generated@@25) $generated@@4) (= ($generated@@11 ($generated@@0 $generated@@25)) $generated@@25))
 :pattern ( ($generated@@0 $generated@@25))
))) (forall (($generated@@26 Bool) ) (! (= (type ($generated@@11 $generated@@26)) $generated@@4)
 :pattern ( ($generated@@11 $generated@@26))
))) (forall (($generated@@27 RoundingMode) ) (! (= ($generated@@13 ($generated@@12 $generated@@27)) $generated@@27)
 :pattern ( ($generated@@12 $generated@@27))
))) (forall (($generated@@28 T@U) ) (!  (=> (= (type $generated@@28) $generated@@5) (= ($generated@@12 ($generated@@13 $generated@@28)) $generated@@28))
 :pattern ( ($generated@@13 $generated@@28))
))) (forall (($generated@@29 RoundingMode) ) (! (= (type ($generated@@12 $generated@@29)) $generated@@5)
 :pattern ( ($generated@@12 $generated@@29))
))) (forall (($generated@@30 String) ) (! (= ($generated@@15 ($generated@@14 $generated@@30)) $generated@@30)
 :pattern ( ($generated@@14 $generated@@30))
))) (forall (($generated@@31 T@U) ) (!  (=> (= (type $generated@@31) $generated@@6) (= ($generated@@14 ($generated@@15 $generated@@31)) $generated@@31))
 :pattern ( ($generated@@15 $generated@@31))
))) (forall (($generated@@32 String) ) (! (= (type ($generated@@14 $generated@@32)) $generated@@6)
 :pattern ( ($generated@@14 $generated@@32))
))) (forall (($generated@@33 (RegEx String)) ) (! (= ($generated@@17 ($generated@@16 $generated@@33)) $generated@@33)
 :pattern ( ($generated@@16 $generated@@33))
))) (forall (($generated@@34 T@U) ) (!  (=> (= (type $generated@@34) $generated@@7) (= ($generated@@16 ($generated@@17 $generated@@34)) $generated@@34))
 :pattern ( ($generated@@17 $generated@@34))
))) (forall (($generated@@35 (RegEx String)) ) (! (= (type ($generated@@16 $generated@@35)) $generated@@7)
 :pattern ( ($generated@@16 $generated@@35))
))))
(assert (forall (($generated@@36 T@U) ) (! (UOrdering2 $generated@@36 $generated@@36)
 :no-pattern ($generated $generated@@36)
 :no-pattern ($generated@@0 $generated@@36)
)))
(assert (forall (($generated@@37 T@U) ($generated@@38 T@U) ($generated@@39 T@U) ) (! (let (($generated@@40 (type $generated@@37)))
 (=> (and (and (= (type $generated@@38) $generated@@40) (= (type $generated@@39) $generated@@40)) (and (UOrdering2 $generated@@37 $generated@@38) (UOrdering2 $generated@@38 $generated@@39))) (UOrdering2 $generated@@37 $generated@@39)))
 :pattern ( (UOrdering2 $generated@@37 $generated@@38) (UOrdering2 $generated@@38 $generated@@39))
)))
(assert (forall (($generated@@41 T@U) ($generated@@42 T@U) ) (! (let (($generated@@43 (type $generated@@41)))
 (=> (= (type $generated@@42) $generated@@43) (=> (and (UOrdering2 $generated@@41 $generated@@42) (UOrdering2 $generated@@42 $generated@@41)) (= $generated@@41 $generated@@42))))
 :pattern ( (UOrdering2 $generated@@41 $generated@@42) (UOrdering2 $generated@@42 $generated@@41))
)))
(assert  (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (= ($generated@@1 $generated@@78) 6) (= (type $generated@@44) $generated@@78)) (= (type $generated@@45) $generated@@78)) (= (type $generated@@46) $generated@@78)) (= (type $generated@@47) $generated@@78)) (= (type $generated@@48) $generated@@78)) (= ($generated@@1 $generated@@79) 7)) (= (type $generated@@49) $generated@@79)) (= (type $generated@@50) $generated@@79)) (= (type $generated@@51) $generated@@79)) (= (type $generated@@52) $generated@@79)) (= (type $generated@@53) $generated@@79)) (= (type $generated@@54) $generated@@79)) (= (type $generated@@55) $generated@@79)) (= (type $generated@@56) $generated@@79)) (= (type $generated@@57) $generated@@79)) (= (type $generated@@58) $generated@@79)) (= (type $generated@@59) $generated@@79)) (forall (($generated@@84 T@T) ) (= ($generated@@1 ($generated@@80 $generated@@84)) 8))) (forall (($generated@@85 T@T) ) (! (= ($generated@@81 ($generated@@80 $generated@@85)) $generated@@85)
 :pattern ( ($generated@@80 $generated@@85))
))) (= (type $generated@@60) ($generated@@80 $generated@@4))) (= (type $generated@@61) $generated@@79)) (= (type $generated@@62) $generated@@79)) (= (type $generated@@63) $generated@@79)) (= (type $generated@@64) $generated@@79)) (= (type $generated@@65) $generated@@79)) (= (type $generated@@66) $generated@@79)) (= (type $generated@@67) $generated@@79)) (= (type $generated@@68) $generated@@79)) (= ($generated@@1 $generated@@82) 9)) (= (type $generated@@69) $generated@@82)) (= (type $generated@@70) $generated@@79)) (= ($generated@@1 $generated@@83) 10)) (= (type $generated@@71) $generated@@83)) (= (type $generated@@72) $generated@@83)) (= (type $generated@@73) $generated@@83)) (= (type $generated@@74) $generated@@83)) (= (type $generated@@75) $generated@@83)) (= (type $generated@@76) $generated@@83)) (= (type $generated@@77) $generated@@83)))
(assert (distinct $generated@@44 $generated@@45 $generated@@46 $generated@@47 $generated@@48 $generated@@49 $generated@@50 $generated@@51 $generated@@52 $generated@@53 $generated@@54 $generated@@55 $generated@@56 $generated@@57 $generated@@58 $generated@@59 $generated@@60 $generated@@61 $generated@@62 $generated@@63 $generated@@64 $generated@@65 $generated@@66 $generated@@67 $generated@@68 $generated@@69 $generated@@70 $generated@@71 $generated@@72 $generated@@73 $generated@@74 $generated@@75 $generated@@76 $generated@@77)
)
(assert (= ($generated@@86 $generated@@60) 0))
(assert (forall (($generated@@88 T@U) ) (! (= (type ($generated@@87 $generated@@88)) $generated@@79)
 :pattern ( ($generated@@87 $generated@@88))
)))
(assert (= ($generated@@87 $generated@@44) $generated@@49))
(assert (= ($generated@@87 $generated@@45) $generated@@50))
(assert (= ($generated@@87 $generated@@46) $generated@@51))
(assert (= ($generated@@87 $generated@@47) $generated@@52))
(assert (= ($generated@@87 $generated@@48) $generated@@53))
(assert  (and (and (and (and (and (and (and (and (and (and (and (and (and (forall (($generated@@100 T@T) ($generated@@101 T@T) ) (= ($generated@@1 ($generated@@91 $generated@@100 $generated@@101)) 11)) (forall (($generated@@102 T@T) ($generated@@103 T@T) ) (! (= ($generated@@94 ($generated@@91 $generated@@102 $generated@@103)) $generated@@102)
 :pattern ( ($generated@@91 $generated@@102 $generated@@103))
))) (forall (($generated@@104 T@T) ($generated@@105 T@T) ) (! (= ($generated@@95 ($generated@@91 $generated@@104 $generated@@105)) $generated@@105)
 :pattern ( ($generated@@91 $generated@@104 $generated@@105))
))) (forall (($generated@@106 T@U) ($generated@@107 T@U) ) (! (let (($generated@@108 ($generated@@95 (type $generated@@106))))
(= (type ($generated@@96 $generated@@106 $generated@@107)) $generated@@108))
 :pattern ( ($generated@@96 $generated@@106 $generated@@107))
))) (forall (($generated@@109 T@U) ($generated@@110 T@U) ($generated@@111 T@U) ) (! (let (($generated@@112 (type $generated@@111)))
(let (($generated@@113 (type $generated@@110)))
(= (type ($generated@@97 $generated@@109 $generated@@110 $generated@@111)) ($generated@@91 $generated@@113 $generated@@112))))
 :pattern ( ($generated@@97 $generated@@109 $generated@@110 $generated@@111))
))) (forall (($generated@@114 T@U) ($generated@@115 T@U) ($generated@@116 T@U) ) (! (let (($generated@@117 ($generated@@95 (type $generated@@114))))
 (=> (= (type $generated@@116) $generated@@117) (= ($generated@@96 ($generated@@97 $generated@@114 $generated@@115 $generated@@116) $generated@@115) $generated@@116)))
 :weight 0
))) (and (forall (($generated@@118 T@U) ($generated@@119 T@U) ($generated@@120 T@U) ($generated@@121 T@U) ) (!  (or (= $generated@@120 $generated@@121) (= ($generated@@96 ($generated@@97 $generated@@119 $generated@@120 $generated@@118) $generated@@121) ($generated@@96 $generated@@119 $generated@@121)))
 :weight 0
)) (forall (($generated@@122 T@U) ($generated@@123 T@U) ($generated@@124 T@U) ($generated@@125 T@U) ) (!  (or true (= ($generated@@96 ($generated@@97 $generated@@123 $generated@@124 $generated@@122) $generated@@125) ($generated@@96 $generated@@123 $generated@@125)))
 :weight 0
)))) (= ($generated@@1 $generated@@92) 12)) (forall (($generated@@126 T@U) ($generated@@127 T@U) ) (! (let (($generated@@128 ($generated@@81 (type $generated@@127))))
(= (type ($generated@@98 $generated@@126 $generated@@127)) $generated@@128))
 :pattern ( ($generated@@98 $generated@@126 $generated@@127))
))) (= ($generated@@1 $generated@@93) 13)) (forall (($generated@@129 T@U) ($generated@@130 T@U) ($generated@@131 T@U) ) (! (= (type ($generated@@99 $generated@@129 $generated@@130 $generated@@131)) $generated@@93)
 :pattern ( ($generated@@99 $generated@@129 $generated@@130 $generated@@131))
))) (forall (($generated@@132 T@U) ($generated@@133 T@U) ($generated@@134 T@U) ) (! (let (($generated@@135 ($generated@@81 (type $generated@@133))))
 (=> (= (type $generated@@134) $generated@@135) (= ($generated@@98 ($generated@@99 $generated@@132 $generated@@133 $generated@@134) $generated@@133) $generated@@134)))
 :weight 0
))) (and (forall (($generated@@136 T@U) ($generated@@137 T@U) ($generated@@138 T@U) ($generated@@139 T@U) ) (!  (or (= $generated@@138 $generated@@139) (= ($generated@@98 ($generated@@99 $generated@@137 $generated@@138 $generated@@136) $generated@@139) ($generated@@98 $generated@@137 $generated@@139)))
 :weight 0
)) (forall (($generated@@140 T@U) ($generated@@141 T@U) ($generated@@142 T@U) ($generated@@143 T@U) ) (!  (or true (= ($generated@@98 ($generated@@99 $generated@@141 $generated@@142 $generated@@140) $generated@@143) ($generated@@98 $generated@@141 $generated@@143)))
 :weight 0
)))) (forall (($generated@@144 Int) ) (! (= (type ($generated@@90 $generated@@144)) $generated@@78)
 :pattern ( ($generated@@90 $generated@@144))
))))
(assert (forall (($generated@@145 T@U) ($generated@@146 T@U) ) (!  (=> (and (= (type $generated@@145) $generated@@2) (= (type $generated@@146) ($generated@@91 $generated@@92 $generated@@93))) ($generated@@89 $generated@@145 ($generated@@90 0) $generated@@146))
 :pattern ( ($generated@@89 $generated@@145 ($generated@@90 0) $generated@@146))
)))
(assert  (and (and (forall (($generated@@152 T@U) ) (! (= (type ($generated@@148 $generated@@152)) $generated@@78)
 :pattern ( ($generated@@148 $generated@@152))
)) (= (type $generated@@149) $generated@@92)) (forall (($generated@@153 T@U) ) (! (= (type ($generated@@150 $generated@@153)) $generated@@78)
 :pattern ( ($generated@@150 $generated@@153))
))))
(assert (forall (($generated@@154 T@U) ($generated@@155 T@U) ) (!  (=> (and (and (= (type $generated@@154) $generated@@78) (= (type $generated@@155) $generated@@92)) (and (not (= $generated@@155 $generated@@149)) (= ($generated@@150 $generated@@155) ($generated@@148 $generated@@154)))) ($generated@@151 ($generated@@8 ($generated@@147 $generated@@155)) $generated@@46))
 :pattern ( ($generated@@147 $generated@@155) ($generated@@148 $generated@@154))
)))
(assert (forall (($generated@@158 T@U) ) (! (= (type ($generated@@157 $generated@@158)) $generated@@78)
 :pattern ( ($generated@@157 $generated@@158))
)))
(assert (forall (($generated@@159 T@U) ($generated@@160 T@U) ) (!  (=> (and (and (= (type $generated@@159) $generated@@78) (= (type $generated@@160) $generated@@92)) (and (not (= $generated@@160 $generated@@149)) (= ($generated@@150 $generated@@160) ($generated@@157 $generated@@159)))) ($generated@@151 ($generated@@8 ($generated@@156 $generated@@160)) $generated@@46))
 :pattern ( ($generated@@156 $generated@@160) ($generated@@157 $generated@@159))
)))
(assert (forall (($generated@@162 T@U) ($generated@@163 T@U) ) (!  (=> (and (and (= (type $generated@@162) $generated@@78) (= (type $generated@@163) $generated@@92)) (and (not (= $generated@@163 $generated@@149)) (= ($generated@@150 $generated@@163) ($generated@@157 $generated@@162)))) ($generated@@151 ($generated@@8 ($generated@@161 $generated@@163)) $generated@@46))
 :pattern ( ($generated@@161 $generated@@163) ($generated@@157 $generated@@162))
)))
(assert  (and (and (and (and (and (and (and (and (and (= ($generated@@1 $generated@@166) 14) (forall (($generated@@173 T@T) ($generated@@174 T@T) ($generated@@175 T@T) ) (= ($generated@@1 ($generated@@168 $generated@@173 $generated@@174 $generated@@175)) 15))) (forall (($generated@@176 T@T) ($generated@@177 T@T) ($generated@@178 T@T) ) (! (= ($generated@@169 ($generated@@168 $generated@@176 $generated@@177 $generated@@178)) $generated@@176)
 :pattern ( ($generated@@168 $generated@@176 $generated@@177 $generated@@178))
))) (forall (($generated@@179 T@T) ($generated@@180 T@T) ($generated@@181 T@T) ) (! (= ($generated@@170 ($generated@@168 $generated@@179 $generated@@180 $generated@@181)) $generated@@180)
 :pattern ( ($generated@@168 $generated@@179 $generated@@180 $generated@@181))
))) (forall (($generated@@182 T@T) ($generated@@183 T@T) ($generated@@184 T@T) ) (! (= ($generated@@171 ($generated@@168 $generated@@182 $generated@@183 $generated@@184)) $generated@@184)
 :pattern ( ($generated@@168 $generated@@182 $generated@@183 $generated@@184))
))) (forall (($generated@@185 T@U) ($generated@@186 T@U) ($generated@@187 T@U) ) (! (let (($generated@@188 ($generated@@171 (type $generated@@185))))
(= (type ($generated@@164 $generated@@185 $generated@@186 $generated@@187)) $generated@@188))
 :pattern ( ($generated@@164 $generated@@185 $generated@@186 $generated@@187))
))) (forall (($generated@@189 T@U) ($generated@@190 T@U) ($generated@@191 T@U) ($generated@@192 T@U) ) (! (let (($generated@@193 (type $generated@@192)))
(let (($generated@@194 (type $generated@@191)))
(let (($generated@@195 (type $generated@@190)))
(= (type ($generated@@172 $generated@@189 $generated@@190 $generated@@191 $generated@@192)) ($generated@@168 $generated@@195 $generated@@194 $generated@@193)))))
 :pattern ( ($generated@@172 $generated@@189 $generated@@190 $generated@@191 $generated@@192))
))) (forall (($generated@@196 T@U) ($generated@@197 T@U) ($generated@@198 T@U) ($generated@@199 T@U) ) (! (let (($generated@@200 ($generated@@171 (type $generated@@196))))
 (=> (= (type $generated@@199) $generated@@200) (= ($generated@@164 ($generated@@172 $generated@@196 $generated@@197 $generated@@198 $generated@@199) $generated@@197 $generated@@198) $generated@@199)))
 :weight 0
))) (and (and (forall (($generated@@201 T@U) ($generated@@202 T@U) ($generated@@203 T@U) ($generated@@204 T@U) ($generated@@205 T@U) ($generated@@206 T@U) ) (!  (or (= $generated@@203 $generated@@205) (= ($generated@@164 ($generated@@172 $generated@@202 $generated@@203 $generated@@204 $generated@@201) $generated@@205 $generated@@206) ($generated@@164 $generated@@202 $generated@@205 $generated@@206)))
 :weight 0
)) (forall (($generated@@207 T@U) ($generated@@208 T@U) ($generated@@209 T@U) ($generated@@210 T@U) ($generated@@211 T@U) ($generated@@212 T@U) ) (!  (or (= $generated@@210 $generated@@212) (= ($generated@@164 ($generated@@172 $generated@@208 $generated@@209 $generated@@210 $generated@@207) $generated@@211 $generated@@212) ($generated@@164 $generated@@208 $generated@@211 $generated@@212)))
 :weight 0
))) (forall (($generated@@213 T@U) ($generated@@214 T@U) ($generated@@215 T@U) ($generated@@216 T@U) ($generated@@217 T@U) ($generated@@218 T@U) ) (!  (or true (= ($generated@@164 ($generated@@172 $generated@@214 $generated@@215 $generated@@216 $generated@@213) $generated@@217 $generated@@218) ($generated@@164 $generated@@214 $generated@@217 $generated@@218)))
 :weight 0
)))) (forall (($generated@@219 T@U) ) (! (= (type ($generated@@165 $generated@@219)) ($generated@@168 ($generated@@91 $generated@@92 $generated@@93) $generated@@166 $generated@@4))
 :pattern ( ($generated@@165 $generated@@219))
))))
(assert (forall (($generated@@220 T@U) ($generated@@221 T@U) ($generated@@222 T@U) ) (!  (=> (and (and (= (type $generated@@220) $generated@@78) (= (type $generated@@221) ($generated@@91 $generated@@92 $generated@@93))) (= (type $generated@@222) $generated@@166)) (= ($generated@@0 ($generated@@164 ($generated@@165 $generated@@220) $generated@@221 $generated@@222)) ($generated@@167 $generated@@222 $generated@@220)))
 :pattern ( ($generated@@164 ($generated@@165 $generated@@220) $generated@@221 $generated@@222))
)))
(assert (forall (($generated@@224 T@U) ($generated@@225 T@U) ) (!  (=> (and (and (= (type $generated@@224) ($generated@@91 $generated@@92 $generated@@93)) (= (type $generated@@225) ($generated@@91 $generated@@92 $generated@@93))) ($generated@@223 $generated@@224 $generated@@225)) (forall (($generated@@226 T@U) ) (!  (=> (and (= (type $generated@@226) $generated@@92) ($generated@@0 ($generated@@98 ($generated@@96 $generated@@224 $generated@@226) $generated@@60))) ($generated@@0 ($generated@@98 ($generated@@96 $generated@@225 $generated@@226) $generated@@60)))
 :pattern ( ($generated@@98 ($generated@@96 $generated@@225 $generated@@226) $generated@@60))
)))
 :pattern ( ($generated@@223 $generated@@224 $generated@@225))
)))
(assert (forall (($generated@@227 T@U) ($generated@@228 T@U) ($generated@@229 T@U) ) (!  (=> (and (and (= (type $generated@@227) $generated@@78) (= (type $generated@@228) $generated@@92)) (= (type $generated@@229) ($generated@@91 $generated@@92 $generated@@93))) (= ($generated@@89 $generated@@228 ($generated@@148 $generated@@227) $generated@@229)  (or (= $generated@@228 $generated@@149) ($generated@@0 ($generated@@98 ($generated@@96 $generated@@229 $generated@@228) $generated@@60)))))
 :pattern ( ($generated@@89 $generated@@228 ($generated@@148 $generated@@227) $generated@@229))
)))
(assert (forall (($generated@@230 T@U) ($generated@@231 T@U) ($generated@@232 T@U) ) (!  (=> (and (and (= (type $generated@@230) $generated@@78) (= (type $generated@@231) $generated@@92)) (= (type $generated@@232) ($generated@@91 $generated@@92 $generated@@93))) (= ($generated@@89 $generated@@231 ($generated@@157 $generated@@230) $generated@@232)  (or (= $generated@@231 $generated@@149) ($generated@@0 ($generated@@98 ($generated@@96 $generated@@232 $generated@@231) $generated@@60)))))
 :pattern ( ($generated@@89 $generated@@231 ($generated@@157 $generated@@230) $generated@@232))
)))
(assert  (and (and (and (and (and (and (and (and (and (forall (($generated@@241 T@T) ($generated@@242 T@T) ($generated@@243 T@T) ($generated@@244 T@T) ) (= ($generated@@1 ($generated@@235 $generated@@241 $generated@@242 $generated@@243 $generated@@244)) 16)) (forall (($generated@@245 T@T) ($generated@@246 T@T) ($generated@@247 T@T) ($generated@@248 T@T) ) (! (= ($generated@@236 ($generated@@235 $generated@@245 $generated@@246 $generated@@247 $generated@@248)) $generated@@245)
 :pattern ( ($generated@@235 $generated@@245 $generated@@246 $generated@@247 $generated@@248))
))) (forall (($generated@@249 T@T) ($generated@@250 T@T) ($generated@@251 T@T) ($generated@@252 T@T) ) (! (= ($generated@@237 ($generated@@235 $generated@@249 $generated@@250 $generated@@251 $generated@@252)) $generated@@250)
 :pattern ( ($generated@@235 $generated@@249 $generated@@250 $generated@@251 $generated@@252))
))) (forall (($generated@@253 T@T) ($generated@@254 T@T) ($generated@@255 T@T) ($generated@@256 T@T) ) (! (= ($generated@@238 ($generated@@235 $generated@@253 $generated@@254 $generated@@255 $generated@@256)) $generated@@255)
 :pattern ( ($generated@@235 $generated@@253 $generated@@254 $generated@@255 $generated@@256))
))) (forall (($generated@@257 T@T) ($generated@@258 T@T) ($generated@@259 T@T) ($generated@@260 T@T) ) (! (= ($generated@@239 ($generated@@235 $generated@@257 $generated@@258 $generated@@259 $generated@@260)) $generated@@260)
 :pattern ( ($generated@@235 $generated@@257 $generated@@258 $generated@@259 $generated@@260))
))) (forall (($generated@@261 T@U) ($generated@@262 T@U) ($generated@@263 T@U) ($generated@@264 T@U) ) (! (let (($generated@@265 ($generated@@239 (type $generated@@261))))
(= (type ($generated@@233 $generated@@261 $generated@@262 $generated@@263 $generated@@264)) $generated@@265))
 :pattern ( ($generated@@233 $generated@@261 $generated@@262 $generated@@263 $generated@@264))
))) (forall (($generated@@266 T@U) ($generated@@267 T@U) ($generated@@268 T@U) ($generated@@269 T@U) ($generated@@270 T@U) ) (! (let (($generated@@271 (type $generated@@270)))
(let (($generated@@272 (type $generated@@269)))
(let (($generated@@273 (type $generated@@268)))
(let (($generated@@274 (type $generated@@267)))
(= (type ($generated@@240 $generated@@266 $generated@@267 $generated@@268 $generated@@269 $generated@@270)) ($generated@@235 $generated@@274 $generated@@273 $generated@@272 $generated@@271))))))
 :pattern ( ($generated@@240 $generated@@266 $generated@@267 $generated@@268 $generated@@269 $generated@@270))
))) (forall (($generated@@275 T@U) ($generated@@276 T@U) ($generated@@277 T@U) ($generated@@278 T@U) ($generated@@279 T@U) ) (! (let (($generated@@280 ($generated@@239 (type $generated@@275))))
 (=> (= (type $generated@@279) $generated@@280) (= ($generated@@233 ($generated@@240 $generated@@275 $generated@@276 $generated@@277 $generated@@278 $generated@@279) $generated@@276 $generated@@277 $generated@@278) $generated@@279)))
 :weight 0
))) (and (and (and (forall (($generated@@281 T@U) ($generated@@282 T@U) ($generated@@283 T@U) ($generated@@284 T@U) ($generated@@285 T@U) ($generated@@286 T@U) ($generated@@287 T@U) ($generated@@288 T@U) ) (!  (or (= $generated@@283 $generated@@286) (= ($generated@@233 ($generated@@240 $generated@@282 $generated@@283 $generated@@284 $generated@@285 $generated@@281) $generated@@286 $generated@@287 $generated@@288) ($generated@@233 $generated@@282 $generated@@286 $generated@@287 $generated@@288)))
 :weight 0
)) (forall (($generated@@289 T@U) ($generated@@290 T@U) ($generated@@291 T@U) ($generated@@292 T@U) ($generated@@293 T@U) ($generated@@294 T@U) ($generated@@295 T@U) ($generated@@296 T@U) ) (!  (or (= $generated@@292 $generated@@295) (= ($generated@@233 ($generated@@240 $generated@@290 $generated@@291 $generated@@292 $generated@@293 $generated@@289) $generated@@294 $generated@@295 $generated@@296) ($generated@@233 $generated@@290 $generated@@294 $generated@@295 $generated@@296)))
 :weight 0
))) (forall (($generated@@297 T@U) ($generated@@298 T@U) ($generated@@299 T@U) ($generated@@300 T@U) ($generated@@301 T@U) ($generated@@302 T@U) ($generated@@303 T@U) ($generated@@304 T@U) ) (!  (or (= $generated@@301 $generated@@304) (= ($generated@@233 ($generated@@240 $generated@@298 $generated@@299 $generated@@300 $generated@@301 $generated@@297) $generated@@302 $generated@@303 $generated@@304) ($generated@@233 $generated@@298 $generated@@302 $generated@@303 $generated@@304)))
 :weight 0
))) (forall (($generated@@305 T@U) ($generated@@306 T@U) ($generated@@307 T@U) ($generated@@308 T@U) ($generated@@309 T@U) ($generated@@310 T@U) ($generated@@311 T@U) ($generated@@312 T@U) ) (!  (or true (= ($generated@@233 ($generated@@240 $generated@@306 $generated@@307 $generated@@308 $generated@@309 $generated@@305) $generated@@310 $generated@@311 $generated@@312) ($generated@@233 $generated@@306 $generated@@310 $generated@@311 $generated@@312)))
 :weight 0
)))) (forall (($generated@@313 T@U) ($generated@@314 T@U) ) (! (= (type ($generated@@234 $generated@@313 $generated@@314)) ($generated@@235 ($generated@@91 $generated@@92 $generated@@93) $generated@@166 $generated@@166 $generated@@4))
 :pattern ( ($generated@@234 $generated@@313 $generated@@314))
))))
(assert (forall (($generated@@315 T@U) ($generated@@316 T@U) ($generated@@317 T@U) ($generated@@318 T@U) ($generated@@319 T@U) ) (!  (=> (and (and (and (and (= (type $generated@@315) $generated@@78) (= (type $generated@@316) $generated@@78)) (= (type $generated@@317) ($generated@@91 $generated@@92 $generated@@93))) (= (type $generated@@318) $generated@@166)) (= (type $generated@@319) $generated@@166)) (= ($generated@@0 ($generated@@233 ($generated@@234 $generated@@315 $generated@@316) $generated@@317 $generated@@318 $generated@@319))  (and ($generated@@167 $generated@@318 $generated@@315) ($generated@@167 $generated@@319 $generated@@316))))
 :pattern ( ($generated@@233 ($generated@@234 $generated@@315 $generated@@316) $generated@@317 $generated@@318 $generated@@319))
)))
(assert (= (type $generated@@320) $generated@@78))
(assert (forall (($generated@@321 T@U) ($generated@@322 T@U) ) (!  (=> (and (= (type $generated@@321) $generated@@2) (= (type $generated@@322) ($generated@@91 $generated@@92 $generated@@93))) ($generated@@89 $generated@@321 $generated@@320 $generated@@322))
 :pattern ( ($generated@@89 $generated@@321 $generated@@320 $generated@@322))
)))
(assert (= (type $generated@@323) $generated@@78))
(assert (forall (($generated@@324 T@U) ($generated@@325 T@U) ) (!  (=> (and (= (type $generated@@324) $generated@@92) (= (type $generated@@325) ($generated@@91 $generated@@92 $generated@@93))) (= ($generated@@89 $generated@@324 $generated@@323 $generated@@325)  (or (= $generated@@324 $generated@@149) ($generated@@0 ($generated@@98 ($generated@@96 $generated@@325 $generated@@324) $generated@@60)))))
 :pattern ( ($generated@@89 $generated@@324 $generated@@323 $generated@@325))
)))
(assert (forall (($generated@@327 T@U) ($generated@@328 T@U) ($generated@@329 T@U) ) (!  (=> (and (and (and (= (type $generated@@327) $generated@@78) (= (type $generated@@328) ($generated@@91 $generated@@92 $generated@@93))) (= (type $generated@@329) $generated@@92)) (and (and ($generated@@326 $generated@@328) (and (not (= $generated@@329 $generated@@149)) (= ($generated@@150 $generated@@329) ($generated@@148 $generated@@327)))) ($generated@@0 ($generated@@98 ($generated@@96 $generated@@328 $generated@@329) $generated@@60)))) ($generated@@89 ($generated@@8 ($generated@@147 $generated@@329)) $generated@@46 $generated@@328))
 :pattern ( ($generated@@147 $generated@@329) ($generated@@98 ($generated@@96 $generated@@328 $generated@@329) $generated@@60) ($generated@@148 $generated@@327))
)))
(assert (forall (($generated@@330 T@U) ($generated@@331 T@U) ($generated@@332 T@U) ) (!  (=> (and (and (and (= (type $generated@@330) $generated@@78) (= (type $generated@@331) ($generated@@91 $generated@@92 $generated@@93))) (= (type $generated@@332) $generated@@92)) (and (and ($generated@@326 $generated@@331) (and (not (= $generated@@332 $generated@@149)) (= ($generated@@150 $generated@@332) ($generated@@157 $generated@@330)))) ($generated@@0 ($generated@@98 ($generated@@96 $generated@@331 $generated@@332) $generated@@60)))) ($generated@@89 ($generated@@8 ($generated@@156 $generated@@332)) $generated@@46 $generated@@331))
 :pattern ( ($generated@@156 $generated@@332) ($generated@@98 ($generated@@96 $generated@@331 $generated@@332) $generated@@60) ($generated@@157 $generated@@330))
)))
(assert (forall (($generated@@333 T@U) ($generated@@334 T@U) ($generated@@335 T@U) ) (!  (=> (and (and (and (= (type $generated@@333) $generated@@78) (= (type $generated@@334) ($generated@@91 $generated@@92 $generated@@93))) (= (type $generated@@335) $generated@@92)) (and (and ($generated@@326 $generated@@334) (and (not (= $generated@@335 $generated@@149)) (= ($generated@@150 $generated@@335) ($generated@@157 $generated@@333)))) ($generated@@0 ($generated@@98 ($generated@@96 $generated@@334 $generated@@335) $generated@@60)))) ($generated@@89 ($generated@@8 ($generated@@161 $generated@@335)) $generated@@46 $generated@@334))
 :pattern ( ($generated@@161 $generated@@335) ($generated@@98 ($generated@@96 $generated@@334 $generated@@335) $generated@@60) ($generated@@157 $generated@@333))
)))
(assert  (and (forall (($generated@@338 T@U) ($generated@@339 T@U) ($generated@@340 T@U) ) (! (= (type ($generated@@336 $generated@@338 $generated@@339 $generated@@340)) $generated@@78)
 :pattern ( ($generated@@336 $generated@@338 $generated@@339 $generated@@340))
)) (forall (($generated@@341 T@U) ) (! (= (type ($generated@@337 $generated@@341)) $generated@@78)
 :pattern ( ($generated@@337 $generated@@341))
))))
(assert (forall (($generated@@342 T@U) ($generated@@343 T@U) ($generated@@344 T@U) ) (!  (=> (and (and (= (type $generated@@342) $generated@@78) (= (type $generated@@343) $generated@@78)) (= (type $generated@@344) $generated@@78)) (= ($generated@@337 ($generated@@336 $generated@@342 $generated@@343 $generated@@344)) $generated@@342))
 :pattern ( ($generated@@336 $generated@@342 $generated@@343 $generated@@344))
)))
(assert (forall (($generated@@346 T@U) ) (! (= (type ($generated@@345 $generated@@346)) $generated@@78)
 :pattern ( ($generated@@345 $generated@@346))
)))
(assert (forall (($generated@@347 T@U) ($generated@@348 T@U) ($generated@@349 T@U) ) (!  (=> (and (and (= (type $generated@@347) $generated@@78) (= (type $generated@@348) $generated@@78)) (= (type $generated@@349) $generated@@78)) (= ($generated@@345 ($generated@@336 $generated@@347 $generated@@348 $generated@@349)) $generated@@348))
 :pattern ( ($generated@@336 $generated@@347 $generated@@348 $generated@@349))
)))
(assert (forall (($generated@@351 T@U) ) (! (= (type ($generated@@350 $generated@@351)) $generated@@78)
 :pattern ( ($generated@@350 $generated@@351))
)))
(assert (forall (($generated@@352 T@U) ($generated@@353 T@U) ($generated@@354 T@U) ) (!  (=> (and (and (= (type $generated@@352) $generated@@78) (= (type $generated@@353) $generated@@78)) (= (type $generated@@354) $generated@@78)) (= ($generated@@350 ($generated@@336 $generated@@352 $generated@@353 $generated@@354)) $generated@@354))
 :pattern ( ($generated@@336 $generated@@352 $generated@@353 $generated@@354))
)))
(assert (forall (($generated@@355 T@U) ) (!  (=> (= (type $generated@@355) $generated@@2) ($generated@@151 $generated@@355 ($generated@@90 0)))
 :pattern ( ($generated@@151 $generated@@355 ($generated@@90 0)))
)))
(assert (forall (($generated@@357 T@U) ) (! (= (type ($generated@@356 $generated@@357)) $generated@@78)
 :pattern ( ($generated@@356 $generated@@357))
)))
(assert (forall (($generated@@358 T@U) ($generated@@359 T@U) ($generated@@360 T@U) ) (!  (=> (and (and (= (type $generated@@358) $generated@@78) (= (type $generated@@359) $generated@@92)) (= (type $generated@@360) ($generated@@91 $generated@@92 $generated@@93))) (= ($generated@@89 $generated@@359 ($generated@@356 $generated@@358) $generated@@360) ($generated@@89 $generated@@359 ($generated@@148 $generated@@358) $generated@@360)))
 :pattern ( ($generated@@89 $generated@@359 ($generated@@356 $generated@@358) $generated@@360))
)))
(assert (forall (($generated@@362 T@U) ) (! (= (type ($generated@@361 $generated@@362)) $generated@@78)
 :pattern ( ($generated@@361 $generated@@362))
)))
(assert (forall (($generated@@363 T@U) ($generated@@364 T@U) ($generated@@365 T@U) ) (!  (=> (and (and (= (type $generated@@363) $generated@@78) (= (type $generated@@364) $generated@@92)) (= (type $generated@@365) ($generated@@91 $generated@@92 $generated@@93))) (= ($generated@@89 $generated@@364 ($generated@@361 $generated@@363) $generated@@365) ($generated@@89 $generated@@364 ($generated@@157 $generated@@363) $generated@@365)))
 :pattern ( ($generated@@89 $generated@@364 ($generated@@361 $generated@@363) $generated@@365))
)))
(assert  (and (= ($generated@@1 $generated@@368) 17) (forall (($generated@@369 T@U) ($generated@@370 T@U) ) (! (= (type ($generated@@367 $generated@@369 $generated@@370)) $generated@@78)
 :pattern ( ($generated@@367 $generated@@369 $generated@@370))
))))
(assert (forall (($generated@@371 T@U) ($generated@@372 T@U) ($generated@@373 T@U) ) (!  (=> (and (and (and (= (type $generated@@371) $generated@@78) (= (type $generated@@372) $generated@@78)) (= (type $generated@@373) $generated@@368)) ($generated@@151 $generated@@373 ($generated@@367 $generated@@371 $generated@@372))) ($generated@@366 $generated@@373))
 :pattern ( ($generated@@366 $generated@@373) ($generated@@151 $generated@@373 ($generated@@367 $generated@@371 $generated@@372)))
)))
(assert  (and (forall (($generated@@377 T@U) ) (! (= (type ($generated@@375 $generated@@377)) $generated@@166)
 :pattern ( ($generated@@375 $generated@@377))
)) (forall (($generated@@378 T@U) ) (! (= (type ($generated@@376 $generated@@378)) $generated@@166)
 :pattern ( ($generated@@376 $generated@@378))
))))
(assert (forall (($generated@@379 T@U) ($generated@@380 T@U) ) (!  (=> (and (and (= (type $generated@@379) $generated@@368) (= (type $generated@@380) $generated@@368)) true) (= ($generated@@374 $generated@@379 $generated@@380)  (and (= ($generated@@375 $generated@@379) ($generated@@375 $generated@@380)) (= ($generated@@376 $generated@@379) ($generated@@376 $generated@@380)))))
 :pattern ( ($generated@@374 $generated@@379 $generated@@380))
)))
(assert (forall (($generated@@383 T@U) ) (! (= (type ($generated@@381 $generated@@383)) $generated@@78)
 :pattern ( ($generated@@381 $generated@@383))
)))
(assert (forall (($generated@@384 T@U) ($generated@@385 T@U) ) (!  (=> (and (and (= (type $generated@@384) ($generated@@91 $generated@@166 $generated@@2)) (= (type $generated@@385) $generated@@78)) ($generated@@151 $generated@@384 ($generated@@381 $generated@@385))) ($generated@@382 $generated@@384))
 :pattern ( ($generated@@151 $generated@@384 ($generated@@381 $generated@@385)))
)))
(assert  (and (and (and (and (and (and (and (forall (($generated@@392 T@T) ($generated@@393 T@T) ) (= ($generated@@1 ($generated@@388 $generated@@392 $generated@@393)) 18)) (forall (($generated@@394 T@T) ($generated@@395 T@T) ) (! (= ($generated@@389 ($generated@@388 $generated@@394 $generated@@395)) $generated@@394)
 :pattern ( ($generated@@388 $generated@@394 $generated@@395))
))) (forall (($generated@@396 T@T) ($generated@@397 T@T) ) (! (= ($generated@@390 ($generated@@388 $generated@@396 $generated@@397)) $generated@@397)
 :pattern ( ($generated@@388 $generated@@396 $generated@@397))
))) (forall (($generated@@398 T@U) ($generated@@399 T@U) ($generated@@400 T@U) ) (! (let (($generated@@401 ($generated@@390 (type $generated@@398))))
(= (type ($generated@@386 $generated@@398 $generated@@399 $generated@@400)) $generated@@401))
 :pattern ( ($generated@@386 $generated@@398 $generated@@399 $generated@@400))
))) (forall (($generated@@402 T@U) ($generated@@403 T@U) ($generated@@404 T@U) ($generated@@405 T@U) ) (! (let (($generated@@406 (type $generated@@405)))
(let (($generated@@407 (type $generated@@403)))
(= (type ($generated@@391 $generated@@402 $generated@@403 $generated@@404 $generated@@405)) ($generated@@388 $generated@@407 $generated@@406))))
 :pattern ( ($generated@@391 $generated@@402 $generated@@403 $generated@@404 $generated@@405))
))) (forall (($generated@@408 T@U) ($generated@@409 T@U) ($generated@@410 T@U) ($generated@@411 T@U) ) (! (let (($generated@@412 ($generated@@390 (type $generated@@408))))
 (=> (= (type $generated@@411) $generated@@412) (= ($generated@@386 ($generated@@391 $generated@@408 $generated@@409 $generated@@410 $generated@@411) $generated@@409 $generated@@410) $generated@@411)))
 :weight 0
))) (and (and (forall (($generated@@413 T@U) ($generated@@414 T@U) ($generated@@415 T@U) ($generated@@416 T@U) ($generated@@417 T@U) ($generated@@418 T@U) ) (!  (or (= $generated@@415 $generated@@417) (= ($generated@@386 ($generated@@391 $generated@@414 $generated@@415 $generated@@416 $generated@@413) $generated@@417 $generated@@418) ($generated@@386 $generated@@414 $generated@@417 $generated@@418)))
 :weight 0
)) (forall (($generated@@419 T@U) ($generated@@420 T@U) ($generated@@421 T@U) ($generated@@422 T@U) ($generated@@423 T@U) ($generated@@424 T@U) ) (!  (or (= $generated@@422 $generated@@424) (= ($generated@@386 ($generated@@391 $generated@@420 $generated@@421 $generated@@422 $generated@@419) $generated@@423 $generated@@424) ($generated@@386 $generated@@420 $generated@@423 $generated@@424)))
 :weight 0
))) (forall (($generated@@425 T@U) ($generated@@426 T@U) ($generated@@427 T@U) ($generated@@428 T@U) ($generated@@429 T@U) ($generated@@430 T@U) ) (!  (or true (= ($generated@@386 ($generated@@391 $generated@@426 $generated@@427 $generated@@428 $generated@@425) $generated@@429 $generated@@430) ($generated@@386 $generated@@426 $generated@@429 $generated@@430)))
 :weight 0
)))) (forall (($generated@@431 T@U) ($generated@@432 T@U) ($generated@@433 T@U) ($generated@@434 Bool) ) (! (= (type ($generated@@387 $generated@@431 $generated@@432 $generated@@433 $generated@@434)) ($generated@@388 $generated@@92 $generated@@4))
 :pattern ( ($generated@@387 $generated@@431 $generated@@432 $generated@@433 $generated@@434))
))))
(assert (forall (($generated@@435 T@U) ($generated@@436 T@U) ($generated@@437 T@U) ($generated@@438 Bool) ($generated@@439 T@U) ($generated@@440 T@U) ) (! (let (($generated@@441 ($generated@@81 (type $generated@@440))))
 (=> (and (and (and (and (= (type $generated@@435) $generated@@92) (= (type $generated@@436) ($generated@@91 $generated@@92 $generated@@93))) (= (type $generated@@437) ($generated@@80 $generated@@4))) (= (type $generated@@439) $generated@@92)) (= (type $generated@@440) ($generated@@80 $generated@@441))) (= ($generated@@0 ($generated@@386 ($generated@@387 $generated@@435 $generated@@436 $generated@@437 $generated@@438) $generated@@439 $generated@@440))  (=> (and (not (= $generated@@439 $generated@@435)) ($generated@@0 ($generated@@98 ($generated@@96 $generated@@436 $generated@@439) $generated@@437))) $generated@@438))))
 :pattern ( ($generated@@386 ($generated@@387 $generated@@435 $generated@@436 $generated@@437 $generated@@438) $generated@@439 $generated@@440))
)))
(assert (forall (($generated@@443 T@U) ($generated@@444 T@U) ($generated@@445 T@U) ($generated@@446 Bool) ) (! (= (type ($generated@@442 $generated@@443 $generated@@444 $generated@@445 $generated@@446)) ($generated@@388 $generated@@92 $generated@@4))
 :pattern ( ($generated@@442 $generated@@443 $generated@@444 $generated@@445 $generated@@446))
)))
(assert (forall (($generated@@447 T@U) ($generated@@448 T@U) ($generated@@449 T@U) ($generated@@450 Bool) ($generated@@451 T@U) ($generated@@452 T@U) ) (! (let (($generated@@453 ($generated@@81 (type $generated@@452))))
 (=> (and (and (and (and (= (type $generated@@447) $generated@@92) (= (type $generated@@448) ($generated@@91 $generated@@92 $generated@@93))) (= (type $generated@@449) ($generated@@80 $generated@@4))) (= (type $generated@@451) $generated@@92)) (= (type $generated@@452) ($generated@@80 $generated@@453))) (= ($generated@@0 ($generated@@386 ($generated@@442 $generated@@447 $generated@@448 $generated@@449 $generated@@450) $generated@@451 $generated@@452))  (=> (and (not (= $generated@@451 $generated@@447)) ($generated@@0 ($generated@@98 ($generated@@96 $generated@@448 $generated@@451) $generated@@449))) $generated@@450))))
 :pattern ( ($generated@@386 ($generated@@442 $generated@@447 $generated@@448 $generated@@449 $generated@@450) $generated@@451 $generated@@452))
)))
(assert (forall (($generated@@455 T@U) ($generated@@456 T@U) ($generated@@457 T@U) ($generated@@458 Bool) ) (! (= (type ($generated@@454 $generated@@455 $generated@@456 $generated@@457 $generated@@458)) ($generated@@388 $generated@@92 $generated@@4))
 :pattern ( ($generated@@454 $generated@@455 $generated@@456 $generated@@457 $generated@@458))
)))
(assert (forall (($generated@@459 T@U) ($generated@@460 T@U) ($generated@@461 T@U) ($generated@@462 Bool) ($generated@@463 T@U) ($generated@@464 T@U) ) (! (let (($generated@@465 ($generated@@81 (type $generated@@464))))
 (=> (and (and (and (and (= (type $generated@@459) $generated@@92) (= (type $generated@@460) ($generated@@91 $generated@@92 $generated@@93))) (= (type $generated@@461) ($generated@@80 $generated@@4))) (= (type $generated@@463) $generated@@92)) (= (type $generated@@464) ($generated@@80 $generated@@465))) (= ($generated@@0 ($generated@@386 ($generated@@454 $generated@@459 $generated@@460 $generated@@461 $generated@@462) $generated@@463 $generated@@464))  (=> (and (not (= $generated@@463 $generated@@459)) ($generated@@0 ($generated@@98 ($generated@@96 $generated@@460 $generated@@463) $generated@@461))) $generated@@462))))
 :pattern ( ($generated@@386 ($generated@@454 $generated@@459 $generated@@460 $generated@@461 $generated@@462) $generated@@463 $generated@@464))
)))
(assert (forall (($generated@@467 T@U) ($generated@@468 T@U) ($generated@@469 T@U) ($generated@@470 Bool) ) (! (= (type ($generated@@466 $generated@@467 $generated@@468 $generated@@469 $generated@@470)) ($generated@@388 $generated@@92 $generated@@4))
 :pattern ( ($generated@@466 $generated@@467 $generated@@468 $generated@@469 $generated@@470))
)))
(assert (forall (($generated@@471 T@U) ($generated@@472 T@U) ($generated@@473 T@U) ($generated@@474 Bool) ($generated@@475 T@U) ($generated@@476 T@U) ) (! (let (($generated@@477 ($generated@@81 (type $generated@@476))))
 (=> (and (and (and (and (= (type $generated@@471) $generated@@92) (= (type $generated@@472) ($generated@@91 $generated@@92 $generated@@93))) (= (type $generated@@473) ($generated@@80 $generated@@4))) (= (type $generated@@475) $generated@@92)) (= (type $generated@@476) ($generated@@80 $generated@@477))) (= ($generated@@0 ($generated@@386 ($generated@@466 $generated@@471 $generated@@472 $generated@@473 $generated@@474) $generated@@475 $generated@@476))  (=> (and (not (= $generated@@475 $generated@@471)) ($generated@@0 ($generated@@98 ($generated@@96 $generated@@472 $generated@@475) $generated@@473))) $generated@@474))))
 :pattern ( ($generated@@386 ($generated@@466 $generated@@471 $generated@@472 $generated@@473 $generated@@474) $generated@@475 $generated@@476))
)))
(assert (forall (($generated@@479 T@U) ) (! (= (type ($generated@@478 $generated@@479)) $generated@@83)
 :pattern ( ($generated@@478 $generated@@479))
)))
(assert (forall (($generated@@480 T@U) ($generated@@481 T@U) ($generated@@482 T@U) ) (!  (=> (and (and (= (type $generated@@480) $generated@@78) (= (type $generated@@481) $generated@@78)) (= (type $generated@@482) $generated@@78)) (and (= ($generated@@87 ($generated@@336 $generated@@480 $generated@@481 $generated@@482)) $generated@@68) (= ($generated@@478 ($generated@@336 $generated@@480 $generated@@481 $generated@@482)) $generated@@76)))
 :pattern ( ($generated@@336 $generated@@480 $generated@@481 $generated@@482))
)))
(assert  (and (and (forall (($generated@@486 T@U) ) (! (= (type ($generated@@483 $generated@@486)) $generated@@166)
 :pattern ( ($generated@@483 $generated@@486))
)) (forall (($generated@@487 T@T) ($generated@@488 T@U) ) (! (= (type ($generated@@484 $generated@@487 $generated@@488)) $generated@@487)
 :pattern ( ($generated@@484 $generated@@487 $generated@@488))
))) (= ($generated@@1 $generated@@485) 19)))
(assert (forall (($generated@@489 T@U) ($generated@@490 T@U) ($generated@@491 T@U) ($generated@@492 T@U) ) (!  (=> (and (and (and (and (= (type $generated@@489) $generated@@78) (= (type $generated@@490) $generated@@78)) (= (type $generated@@491) $generated@@78)) (= (type $generated@@492) $generated@@166)) ($generated@@167 $generated@@492 ($generated@@336 $generated@@489 $generated@@490 $generated@@491))) (and (= ($generated@@483 ($generated@@484 $generated@@485 $generated@@492)) $generated@@492) ($generated@@151 ($generated@@484 $generated@@485 $generated@@492) ($generated@@336 $generated@@489 $generated@@490 $generated@@491))))
 :pattern ( ($generated@@167 $generated@@492 ($generated@@336 $generated@@489 $generated@@490 $generated@@491)))
)))
(assert (forall (($generated@@494 T@U) ($generated@@495 T@U) ) (! (= (type ($generated@@493 $generated@@494 $generated@@495)) $generated@@78)
 :pattern ( ($generated@@493 $generated@@494 $generated@@495))
)))
(assert (forall (($generated@@496 T@U) ($generated@@497 T@U) ($generated@@498 T@U) ($generated@@499 T@U) ($generated@@500 T@U) ) (!  (=> (and (and (and (and (and (= (type $generated@@496) $generated@@485) (= (type $generated@@497) $generated@@78)) (= (type $generated@@498) $generated@@78)) (= (type $generated@@499) $generated@@78)) (= (type $generated@@500) $generated@@78)) (and (and ($generated@@151 $generated@@496 ($generated@@493 $generated@@497 $generated@@498)) (forall (($generated@@501 T@U) ) (!  (=> (and (= (type $generated@@501) $generated@@166) ($generated@@167 $generated@@501 $generated@@499)) ($generated@@167 $generated@@501 $generated@@497))
 :pattern ( ($generated@@167 $generated@@501 $generated@@499))
 :pattern ( ($generated@@167 $generated@@501 $generated@@497))
))) (forall (($generated@@502 T@U) ) (!  (=> (and (= (type $generated@@502) $generated@@166) ($generated@@167 $generated@@502 $generated@@498)) ($generated@@167 $generated@@502 $generated@@500))
 :pattern ( ($generated@@167 $generated@@502 $generated@@498))
 :pattern ( ($generated@@167 $generated@@502 $generated@@500))
)))) ($generated@@151 $generated@@496 ($generated@@493 $generated@@499 $generated@@500)))
 :pattern ( ($generated@@151 $generated@@496 ($generated@@493 $generated@@497 $generated@@498)) ($generated@@151 $generated@@496 ($generated@@493 $generated@@499 $generated@@500)))
)))
(assert (forall (($generated@@504 T@U) ($generated@@505 T@U) ) (! (= (type ($generated@@503 $generated@@504 $generated@@505)) $generated@@368)
 :pattern ( ($generated@@503 $generated@@504 $generated@@505))
)))
(assert (forall (($generated@@506 T@U) ($generated@@507 T@U) ($generated@@508 T@U) ($generated@@509 T@U) ) (!  (=> (and (and (and (= (type $generated@@506) $generated@@78) (= (type $generated@@507) $generated@@78)) (= (type $generated@@508) $generated@@166)) (= (type $generated@@509) $generated@@166)) (= ($generated@@151 ($generated@@503 $generated@@508 $generated@@509) ($generated@@367 $generated@@506 $generated@@507))  (and ($generated@@167 $generated@@508 $generated@@506) ($generated@@167 $generated@@509 $generated@@507))))
 :pattern ( ($generated@@151 ($generated@@503 $generated@@508 $generated@@509) ($generated@@367 $generated@@506 $generated@@507)))
)))
(assert (forall (($generated@@510 T@U) ($generated@@511 T@U) ) (!  (=> (and (= (type $generated@@510) $generated@@368) (= (type $generated@@511) $generated@@368)) (= ($generated@@374 $generated@@510 $generated@@511) (= $generated@@510 $generated@@511)))
 :pattern ( ($generated@@374 $generated@@510 $generated@@511))
)))
(assert (forall (($generated@@513 T@U) ) (! (= (type ($generated@@512 $generated@@513)) $generated@@78)
 :pattern ( ($generated@@512 $generated@@513))
)))
(assert (forall (($generated@@514 T@U) ($generated@@515 T@U) ) (!  (=> (and (= (type $generated@@514) ($generated@@91 $generated@@166 $generated@@4)) (= (type $generated@@515) $generated@@78)) (= ($generated@@151 $generated@@514 ($generated@@512 $generated@@515)) (forall (($generated@@516 T@U) ) (!  (=> (and (= (type $generated@@516) $generated@@166) ($generated@@0 ($generated@@96 $generated@@514 $generated@@516))) ($generated@@167 $generated@@516 $generated@@515))
 :pattern ( ($generated@@96 $generated@@514 $generated@@516))
))))
 :pattern ( ($generated@@151 $generated@@514 ($generated@@512 $generated@@515)))
)))
(assert (forall (($generated@@518 T@U) ) (! (= (type ($generated@@517 $generated@@518)) $generated@@78)
 :pattern ( ($generated@@517 $generated@@518))
)))
(assert (forall (($generated@@519 T@U) ($generated@@520 T@U) ) (!  (=> (and (= (type $generated@@519) ($generated@@91 $generated@@166 $generated@@4)) (= (type $generated@@520) $generated@@78)) (= ($generated@@151 $generated@@519 ($generated@@517 $generated@@520)) (forall (($generated@@521 T@U) ) (!  (=> (and (= (type $generated@@521) $generated@@166) ($generated@@0 ($generated@@96 $generated@@519 $generated@@521))) ($generated@@167 $generated@@521 $generated@@520))
 :pattern ( ($generated@@96 $generated@@519 $generated@@521))
))))
 :pattern ( ($generated@@151 $generated@@519 ($generated@@517 $generated@@520)))
)))
(assert (forall (($generated@@523 Int) ) (! (= ($generated@@522 $generated@@523) $generated@@523)
 :pattern ( ($generated@@522 $generated@@523))
)))
(assert (forall (($generated@@525 T@U) ) (! (let (($generated@@526 (type $generated@@525)))
(= (type ($generated@@524 $generated@@525)) $generated@@526))
 :pattern ( ($generated@@524 $generated@@525))
)))
(assert (forall (($generated@@527 T@U) ) (! (= ($generated@@524 $generated@@527) $generated@@527)
 :pattern ( ($generated@@524 $generated@@527))
)))
(assert  (and (and (forall (($generated@@532 T@U) ($generated@@533 T@U) ($generated@@534 T@U) ($generated@@535 T@U) ($generated@@536 T@U) ) (! (= (type ($generated@@528 $generated@@532 $generated@@533 $generated@@534 $generated@@535 $generated@@536)) ($generated@@91 $generated@@166 $generated@@4))
 :pattern ( ($generated@@528 $generated@@532 $generated@@533 $generated@@534 $generated@@535 $generated@@536))
)) (= (type $generated@@529) ($generated@@91 $generated@@92 $generated@@93))) (forall (($generated@@537 T@T) ) (! (= (type ($generated@@531 $generated@@537)) ($generated@@91 $generated@@537 $generated@@4))
 :pattern ( ($generated@@531 $generated@@537))
))))
(assert (forall (($generated@@538 T@U) ($generated@@539 T@U) ($generated@@540 T@U) ($generated@@541 T@U) ($generated@@542 T@U) ) (!  (=> (and (and (and (and (and (= (type $generated@@538) $generated@@78) (= (type $generated@@539) $generated@@78)) (= (type $generated@@540) ($generated@@91 $generated@@92 $generated@@93))) (= (type $generated@@541) $generated@@485)) (= (type $generated@@542) $generated@@166)) (and ($generated@@326 $generated@@540) (and ($generated@@167 $generated@@542 $generated@@538) ($generated@@151 $generated@@541 ($generated@@493 $generated@@538 $generated@@539))))) (= ($generated@@530 ($generated@@528 $generated@@538 $generated@@539 $generated@@529 $generated@@541 $generated@@542) ($generated@@531 $generated@@166)) ($generated@@530 ($generated@@528 $generated@@538 $generated@@539 $generated@@540 $generated@@541 $generated@@542) ($generated@@531 $generated@@166))))
 :pattern ( ($generated@@528 $generated@@538 $generated@@539 $generated@@529 $generated@@541 $generated@@542) ($generated@@326 $generated@@540))
 :pattern ( ($generated@@528 $generated@@538 $generated@@539 $generated@@540 $generated@@541 $generated@@542))
)))
(assert  (and (forall (($generated@@547 T@U) ($generated@@548 T@U) ($generated@@549 T@U) ($generated@@550 T@U) ($generated@@551 T@U) ($generated@@552 T@U) ($generated@@553 T@U) ) (! (= (type ($generated@@543 $generated@@547 $generated@@548 $generated@@549 $generated@@550 $generated@@551 $generated@@552 $generated@@553)) $generated@@166)
 :pattern ( ($generated@@543 $generated@@547 $generated@@548 $generated@@549 $generated@@550 $generated@@551 $generated@@552 $generated@@553))
)) (forall (($generated@@554 T@U) ($generated@@555 T@U) ($generated@@556 T@U) ($generated@@557 T@U) ($generated@@558 T@U) ($generated@@559 T@U) ($generated@@560 T@U) ) (! (= (type ($generated@@544 $generated@@554 $generated@@555 $generated@@556 $generated@@557 $generated@@558 $generated@@559 $generated@@560)) ($generated@@91 $generated@@166 $generated@@4))
 :pattern ( ($generated@@544 $generated@@554 $generated@@555 $generated@@556 $generated@@557 $generated@@558 $generated@@559 $generated@@560))
))))
(assert (forall (($generated@@561 T@U) ($generated@@562 T@U) ($generated@@563 T@U) ($generated@@564 T@U) ($generated@@565 T@U) ) (!  (=> (and (and (and (and (and (= (type $generated@@561) $generated@@485) (= (type $generated@@562) $generated@@78)) (= (type $generated@@563) $generated@@78)) (= (type $generated@@564) $generated@@78)) (= (type $generated@@565) ($generated@@91 $generated@@92 $generated@@93))) ($generated@@326 $generated@@565)) (= ($generated@@89 $generated@@561 ($generated@@336 $generated@@562 $generated@@563 $generated@@564) $generated@@565) (forall (($generated@@566 T@U) ($generated@@567 T@U) ) (!  (=> (and (= (type $generated@@566) $generated@@166) (= (type $generated@@567) $generated@@166)) (=> (and (and (and ($generated@@167 $generated@@566 $generated@@562) ($generated@@545 $generated@@566 $generated@@562 $generated@@565)) (and ($generated@@167 $generated@@567 $generated@@563) ($generated@@545 $generated@@567 $generated@@563 $generated@@565))) ($generated@@546 $generated@@562 $generated@@563 $generated@@564 $generated@@565 $generated@@561 $generated@@566 $generated@@567)) (forall (($generated@@568 T@U) ) (!  (=> (= (type $generated@@568) $generated@@92) (=> (and (not (= $generated@@568 $generated@@149)) ($generated@@0 ($generated@@96 ($generated@@544 $generated@@562 $generated@@563 $generated@@564 $generated@@565 $generated@@561 $generated@@566 $generated@@567) ($generated@@483 $generated@@568)))) ($generated@@0 ($generated@@98 ($generated@@96 $generated@@565 $generated@@568) $generated@@60))))
 :pattern ( ($generated@@96 ($generated@@544 $generated@@562 $generated@@563 $generated@@564 $generated@@565 $generated@@561 $generated@@566 $generated@@567) ($generated@@483 $generated@@568)))
))))
 :pattern ( ($generated@@543 $generated@@562 $generated@@563 $generated@@564 $generated@@565 $generated@@561 $generated@@566 $generated@@567))
 :pattern ( ($generated@@544 $generated@@562 $generated@@563 $generated@@564 $generated@@565 $generated@@561 $generated@@566 $generated@@567))
))))
 :pattern ( ($generated@@89 $generated@@561 ($generated@@336 $generated@@562 $generated@@563 $generated@@564) $generated@@565))
)))
(assert (forall (($generated@@569 T@U) ($generated@@570 T@U) ($generated@@571 T@U) ($generated@@572 T@U) ($generated@@573 T@U) ) (!  (=> (and (and (and (and (and (= (type $generated@@569) $generated@@78) (= (type $generated@@570) $generated@@78)) (= (type $generated@@571) $generated@@166)) (= (type $generated@@572) $generated@@166)) (= (type $generated@@573) ($generated@@91 $generated@@92 $generated@@93))) ($generated@@326 $generated@@573)) (= ($generated@@89 ($generated@@503 $generated@@571 $generated@@572) ($generated@@367 $generated@@569 $generated@@570) $generated@@573)  (and ($generated@@545 $generated@@571 $generated@@569 $generated@@573) ($generated@@545 $generated@@572 $generated@@570 $generated@@573))))
 :pattern ( ($generated@@89 ($generated@@503 $generated@@571 $generated@@572) ($generated@@367 $generated@@569 $generated@@570) $generated@@573))
)))
(assert (forall (($generated@@575 T@U) ) (! (= (type ($generated@@574 $generated@@575)) $generated@@82)
 :pattern ( ($generated@@574 $generated@@575))
)))
(assert (forall (($generated@@576 T@U) ) (!  (=> (= (type $generated@@576) $generated@@368) (= ($generated@@366 $generated@@576) (= ($generated@@574 $generated@@576) $generated@@69)))
 :pattern ( ($generated@@366 $generated@@576))
)))
(assert (forall (($generated@@577 T@U) ) (!  (=> (and (= (type $generated@@577) $generated@@368) ($generated@@366 $generated@@577)) (exists (($generated@@578 T@U) ($generated@@579 T@U) ) (!  (and (and (= (type $generated@@578) $generated@@166) (= (type $generated@@579) $generated@@166)) (= $generated@@577 ($generated@@503 $generated@@578 $generated@@579)))
 :no-pattern (type $generated@@578)
 :no-pattern (type $generated@@579)
 :no-pattern ($generated $generated@@578)
 :no-pattern ($generated@@0 $generated@@578)
 :no-pattern ($generated $generated@@579)
 :no-pattern ($generated@@0 $generated@@579)
)))
 :pattern ( ($generated@@366 $generated@@577))
)))
(assert  (and (and (forall (($generated@@584 T@T) ) (= ($generated@@1 ($generated@@582 $generated@@584)) 20)) (forall (($generated@@585 T@T) ) (! (= ($generated@@583 ($generated@@582 $generated@@585)) $generated@@585)
 :pattern ( ($generated@@582 $generated@@585))
))) (forall (($generated@@586 T@T) ) (! (= (type ($generated@@580 $generated@@586)) ($generated@@582 $generated@@586))
 :pattern ( ($generated@@580 $generated@@586))
))))
(assert (forall (($generated@@587 T@T) ) (! (= ($generated@@581 ($generated@@580 $generated@@587)) 0)
 :pattern ( ($generated@@580 $generated@@587))
)))
(assert (forall (($generated@@589 T@U) ) (! (= (type ($generated@@588 $generated@@589)) ($generated@@91 $generated@@166 $generated@@4))
 :pattern ( ($generated@@588 $generated@@589))
)))
(assert (forall (($generated@@590 T@U) ($generated@@591 T@U) ) (!  (=> (and (= (type $generated@@590) ($generated@@91 $generated@@92 $generated@@4)) (= (type $generated@@591) $generated@@166)) (= ($generated@@0 ($generated@@96 ($generated@@588 $generated@@590) $generated@@591)) ($generated@@0 ($generated@@96 $generated@@590 ($generated@@484 $generated@@92 $generated@@591)))))
 :pattern ( ($generated@@96 ($generated@@588 $generated@@590) $generated@@591))
)))
(assert (forall (($generated@@592 T@U) ($generated@@593 T@U) ($generated@@594 T@U) ($generated@@595 T@U) ($generated@@596 T@U) ($generated@@597 T@U) ($generated@@598 T@U) ($generated@@599 T@U) ) (!  (=> (and (and (and (and (and (and (and (and (= (type $generated@@592) $generated@@78) (= (type $generated@@593) $generated@@78)) (= (type $generated@@594) $generated@@78)) (= (type $generated@@595) ($generated@@91 $generated@@92 $generated@@93))) (= (type $generated@@596) ($generated@@91 $generated@@92 $generated@@93))) (= (type $generated@@597) $generated@@485)) (= (type $generated@@598) $generated@@166)) (= (type $generated@@599) $generated@@166)) (and (and (and ($generated@@223 $generated@@595 $generated@@596) (and ($generated@@326 $generated@@595) ($generated@@326 $generated@@596))) (and (and ($generated@@167 $generated@@598 $generated@@592) ($generated@@167 $generated@@599 $generated@@593)) ($generated@@151 $generated@@597 ($generated@@336 $generated@@592 $generated@@593 $generated@@594)))) (forall (($generated@@600 T@U) ($generated@@601 T@U) ) (! (let (($generated@@602 ($generated@@81 (type $generated@@601))))
 (=> (and (and (= (type $generated@@600) $generated@@92) (= (type $generated@@601) ($generated@@80 $generated@@602))) (and (not (= $generated@@600 $generated@@149)) ($generated@@0 ($generated@@96 ($generated@@544 $generated@@592 $generated@@593 $generated@@594 $generated@@595 $generated@@597 $generated@@598 $generated@@599) ($generated@@483 $generated@@600))))) (= ($generated@@98 ($generated@@96 $generated@@595 $generated@@600) $generated@@601) ($generated@@98 ($generated@@96 $generated@@596 $generated@@600) $generated@@601))))
 :no-pattern (type $generated@@600)
 :no-pattern (type $generated@@601)
 :no-pattern ($generated $generated@@600)
 :no-pattern ($generated@@0 $generated@@600)
 :no-pattern ($generated $generated@@601)
 :no-pattern ($generated@@0 $generated@@601)
)))) (= ($generated@@546 $generated@@592 $generated@@593 $generated@@594 $generated@@595 $generated@@597 $generated@@598 $generated@@599) ($generated@@546 $generated@@592 $generated@@593 $generated@@594 $generated@@596 $generated@@597 $generated@@598 $generated@@599)))
 :pattern ( ($generated@@223 $generated@@595 $generated@@596) ($generated@@546 $generated@@592 $generated@@593 $generated@@594 $generated@@596 $generated@@597 $generated@@598 $generated@@599))
)))
(assert (forall (($generated@@603 T@U) ($generated@@604 T@U) ($generated@@605 T@U) ($generated@@606 T@U) ($generated@@607 T@U) ($generated@@608 T@U) ($generated@@609 T@U) ($generated@@610 T@U) ) (!  (=> (and (and (and (and (and (and (and (and (= (type $generated@@603) $generated@@78) (= (type $generated@@604) $generated@@78)) (= (type $generated@@605) $generated@@78)) (= (type $generated@@606) ($generated@@91 $generated@@92 $generated@@93))) (= (type $generated@@607) ($generated@@91 $generated@@92 $generated@@93))) (= (type $generated@@608) $generated@@485)) (= (type $generated@@609) $generated@@166)) (= (type $generated@@610) $generated@@166)) (and (and (and ($generated@@223 $generated@@606 $generated@@607) (and ($generated@@326 $generated@@606) ($generated@@326 $generated@@607))) (and (and ($generated@@167 $generated@@609 $generated@@603) ($generated@@167 $generated@@610 $generated@@604)) ($generated@@151 $generated@@608 ($generated@@336 $generated@@603 $generated@@604 $generated@@605)))) (forall (($generated@@611 T@U) ($generated@@612 T@U) ) (! (let (($generated@@613 ($generated@@81 (type $generated@@612))))
 (=> (and (and (= (type $generated@@611) $generated@@92) (= (type $generated@@612) ($generated@@80 $generated@@613))) (and (not (= $generated@@611 $generated@@149)) ($generated@@0 ($generated@@96 ($generated@@544 $generated@@603 $generated@@604 $generated@@605 $generated@@607 $generated@@608 $generated@@609 $generated@@610) ($generated@@483 $generated@@611))))) (= ($generated@@98 ($generated@@96 $generated@@606 $generated@@611) $generated@@612) ($generated@@98 ($generated@@96 $generated@@607 $generated@@611) $generated@@612))))
 :no-pattern (type $generated@@611)
 :no-pattern (type $generated@@612)
 :no-pattern ($generated $generated@@611)
 :no-pattern ($generated@@0 $generated@@611)
 :no-pattern ($generated $generated@@612)
 :no-pattern ($generated@@0 $generated@@612)
)))) (= ($generated@@546 $generated@@603 $generated@@604 $generated@@605 $generated@@606 $generated@@608 $generated@@609 $generated@@610) ($generated@@546 $generated@@603 $generated@@604 $generated@@605 $generated@@607 $generated@@608 $generated@@609 $generated@@610)))
 :pattern ( ($generated@@223 $generated@@606 $generated@@607) ($generated@@546 $generated@@603 $generated@@604 $generated@@605 $generated@@607 $generated@@608 $generated@@609 $generated@@610))
)))
(assert (forall (($generated@@615 T@U) ($generated@@616 Int) ) (! (= (type ($generated@@614 $generated@@615 $generated@@616)) ($generated@@80 $generated@@166))
 :pattern ( ($generated@@614 $generated@@615 $generated@@616))
)))
(assert (forall (($generated@@617 T@U) ($generated@@618 Int) ) (!  (=> (= (type $generated@@617) ($generated@@80 $generated@@166)) (= ($generated@@86 ($generated@@614 $generated@@617 $generated@@618)) (+ ($generated@@86 $generated@@617) 1)))
 :pattern ( ($generated@@614 $generated@@617 $generated@@618))
)))
(assert  (and (= ($generated@@1 $generated@@620) 21) (forall (($generated@@621 T@U) ($generated@@622 T@U) ) (! (let (($generated@@623 ($generated@@95 (type $generated@@621))))
(= (type ($generated@@619 $generated@@621 $generated@@622)) $generated@@623))
 :pattern ( ($generated@@619 $generated@@621 $generated@@622))
))))
(assert (forall (($generated@@624 T@U) ($generated@@625 T@U) ) (! (let (($generated@@626 ($generated@@95 (type $generated@@624))))
 (=> (and (= (type $generated@@624) ($generated@@91 $generated@@620 $generated@@626)) (= (type $generated@@625) $generated@@620)) (= ($generated@@619 $generated@@624 $generated@@625) ($generated@@96 $generated@@624 $generated@@625))))
 :pattern ( ($generated@@619 $generated@@624 $generated@@625))
)))
(assert (forall (($generated@@627 T@U) ) (!  (=> (= (type $generated@@627) $generated@@2) (= ($generated@@151 $generated@@627 $generated@@320) (<= ($generated@@522 0) ($generated $generated@@627))))
 :pattern ( ($generated@@151 $generated@@627 $generated@@320))
)))
(assert ($generated@@326 $generated@@529))
(assert (forall (($generated@@628 T@U) ($generated@@629 T@U) ) (!  (=> (and (= (type $generated@@628) $generated@@78) (= (type $generated@@629) $generated@@92)) (= ($generated@@151 $generated@@629 ($generated@@356 $generated@@628))  (and ($generated@@151 $generated@@629 ($generated@@148 $generated@@628)) (not (= $generated@@629 $generated@@149)))))
 :pattern ( ($generated@@151 $generated@@629 ($generated@@356 $generated@@628)))
)))
(assert (forall (($generated@@630 T@U) ($generated@@631 T@U) ) (!  (=> (and (= (type $generated@@630) $generated@@78) (= (type $generated@@631) $generated@@92)) (= ($generated@@151 $generated@@631 ($generated@@361 $generated@@630))  (and ($generated@@151 $generated@@631 ($generated@@157 $generated@@630)) (not (= $generated@@631 $generated@@149)))))
 :pattern ( ($generated@@151 $generated@@631 ($generated@@361 $generated@@630)))
)))
(assert (forall (($generated@@632 T@U) ($generated@@633 T@U) ($generated@@634 T@U) ) (!  (=> (and (= (type $generated@@633) $generated@@78) (= (type $generated@@634) ($generated@@91 $generated@@92 $generated@@93))) (= ($generated@@545 ($generated@@483 $generated@@632) $generated@@633 $generated@@634) ($generated@@89 $generated@@632 $generated@@633 $generated@@634)))
 :pattern ( ($generated@@545 ($generated@@483 $generated@@632) $generated@@633 $generated@@634))
)))
(assert (forall (($generated@@636 T@U) ($generated@@637 T@U) ($generated@@638 T@U) ) (! (= (type ($generated@@635 $generated@@636 $generated@@637 $generated@@638)) $generated@@485)
 :pattern ( ($generated@@635 $generated@@636 $generated@@637 $generated@@638))
)))
(assert (forall (($generated@@639 T@U) ($generated@@640 T@U) ($generated@@641 T@U) ($generated@@642 T@U) ($generated@@643 T@U) ($generated@@644 T@U) ($generated@@645 T@U) ($generated@@646 T@U) ($generated@@647 T@U) ) (!  (=> (and (and (and (and (and (and (and (and (= (type $generated@@639) $generated@@78) (= (type $generated@@640) $generated@@78)) (= (type $generated@@641) $generated@@78)) (= (type $generated@@642) ($generated@@91 $generated@@92 $generated@@93))) (= (type $generated@@643) ($generated@@235 ($generated@@91 $generated@@92 $generated@@93) $generated@@166 $generated@@166 $generated@@166))) (= (type $generated@@644) ($generated@@235 ($generated@@91 $generated@@92 $generated@@93) $generated@@166 $generated@@166 $generated@@4))) (= (type $generated@@645) ($generated@@235 ($generated@@91 $generated@@92 $generated@@93) $generated@@166 $generated@@166 ($generated@@91 $generated@@166 $generated@@4)))) (= (type $generated@@646) $generated@@166)) (= (type $generated@@647) $generated@@166)) (= ($generated@@543 $generated@@639 $generated@@640 $generated@@641 $generated@@642 ($generated@@635 $generated@@643 $generated@@644 $generated@@645) $generated@@646 $generated@@647) ($generated@@233 $generated@@643 $generated@@642 $generated@@646 $generated@@647)))
 :pattern ( ($generated@@543 $generated@@639 $generated@@640 $generated@@641 $generated@@642 ($generated@@635 $generated@@643 $generated@@644 $generated@@645) $generated@@646 $generated@@647))
)))
(assert (forall (($generated@@648 T@U) ($generated@@649 T@U) ($generated@@650 T@U) ($generated@@651 T@U) ) (!  (=> (and (and (and (and (and (= (type $generated@@648) ($generated@@91 $generated@@92 $generated@@93)) (= (type $generated@@649) ($generated@@91 $generated@@92 $generated@@93))) (= (type $generated@@650) $generated@@166)) (= (type $generated@@651) $generated@@78)) ($generated@@223 $generated@@648 $generated@@649)) ($generated@@545 $generated@@650 $generated@@651 $generated@@648)) ($generated@@545 $generated@@650 $generated@@651 $generated@@649))
 :pattern ( ($generated@@223 $generated@@648 $generated@@649) ($generated@@545 $generated@@650 $generated@@651 $generated@@648))
)))
(assert (forall (($generated@@652 T@U) ($generated@@653 T@U) ($generated@@654 T@U) ($generated@@655 T@U) ) (!  (=> (and (and (and (and (= (type $generated@@652) ($generated@@91 $generated@@92 $generated@@93)) (= (type $generated@@653) ($generated@@91 $generated@@92 $generated@@93))) (= (type $generated@@655) $generated@@78)) ($generated@@223 $generated@@652 $generated@@653)) ($generated@@89 $generated@@654 $generated@@655 $generated@@652)) ($generated@@89 $generated@@654 $generated@@655 $generated@@653))
 :pattern ( ($generated@@223 $generated@@652 $generated@@653) ($generated@@89 $generated@@654 $generated@@655 $generated@@652))
)))
(assert (forall (($generated@@658 T@T) ) (! (= (type ($generated@@657 $generated@@658)) ($generated@@91 $generated@@658 $generated@@2))
 :pattern ( ($generated@@657 $generated@@658))
)))
(assert (forall (($generated@@659 T@U) ) (! (let (($generated@@660 ($generated@@94 (type $generated@@659))))
 (=> (= (type $generated@@659) ($generated@@91 $generated@@660 $generated@@2)) (and (= (= ($generated@@656 $generated@@659) 0) (= $generated@@659 ($generated@@657 $generated@@660))) (=> (not (= ($generated@@656 $generated@@659) 0)) (exists (($generated@@661 T@U) ) (!  (and (= (type $generated@@661) $generated@@660) (< 0 ($generated ($generated@@96 $generated@@659 $generated@@661))))
 :no-pattern (type $generated@@661)
 :no-pattern ($generated $generated@@661)
 :no-pattern ($generated@@0 $generated@@661)
))))))
 :pattern ( ($generated@@656 $generated@@659))
)))
(assert (forall (($generated@@662 T@U) ) (!  (=> (= (type $generated@@662) $generated@@78) (and (= ($generated@@87 ($generated@@148 $generated@@662)) $generated@@63) (= ($generated@@478 ($generated@@148 $generated@@662)) $generated@@73)))
 :pattern ( ($generated@@148 $generated@@662))
)))
(assert (forall (($generated@@663 T@U) ) (!  (=> (= (type $generated@@663) $generated@@78) (and (= ($generated@@87 ($generated@@356 $generated@@663)) $generated@@64) (= ($generated@@478 ($generated@@356 $generated@@663)) $generated@@73)))
 :pattern ( ($generated@@356 $generated@@663))
)))
(assert (forall (($generated@@664 T@U) ) (!  (=> (= (type $generated@@664) $generated@@78) (and (= ($generated@@87 ($generated@@157 $generated@@664)) $generated@@66) (= ($generated@@478 ($generated@@157 $generated@@664)) $generated@@75)))
 :pattern ( ($generated@@157 $generated@@664))
)))
(assert (forall (($generated@@665 T@U) ) (!  (=> (= (type $generated@@665) $generated@@78) (and (= ($generated@@87 ($generated@@361 $generated@@665)) $generated@@67) (= ($generated@@478 ($generated@@361 $generated@@665)) $generated@@75)))
 :pattern ( ($generated@@361 $generated@@665))
)))
(assert (forall (($generated@@666 T@U) ($generated@@667 T@U) ($generated@@668 T@U) ($generated@@669 T@U) ($generated@@670 T@U) ($generated@@671 T@U) ($generated@@672 T@U) ($generated@@673 T@U) ) (!  (=> (and (and (and (and (and (and (and (and (= (type $generated@@666) $generated@@78) (= (type $generated@@667) $generated@@78)) (= (type $generated@@668) $generated@@78)) (= (type $generated@@669) ($generated@@91 $generated@@92 $generated@@93))) (= (type $generated@@670) ($generated@@91 $generated@@92 $generated@@93))) (= (type $generated@@671) $generated@@485)) (= (type $generated@@672) $generated@@166)) (= (type $generated@@673) $generated@@166)) (and (and (and ($generated@@223 $generated@@669 $generated@@670) (and ($generated@@326 $generated@@669) ($generated@@326 $generated@@670))) (and (and ($generated@@167 $generated@@672 $generated@@666) ($generated@@167 $generated@@673 $generated@@667)) ($generated@@151 $generated@@671 ($generated@@336 $generated@@666 $generated@@667 $generated@@668)))) (forall (($generated@@674 T@U) ($generated@@675 T@U) ) (! (let (($generated@@676 ($generated@@81 (type $generated@@675))))
 (=> (and (and (= (type $generated@@674) $generated@@92) (= (type $generated@@675) ($generated@@80 $generated@@676))) (and (not (= $generated@@674 $generated@@149)) ($generated@@0 ($generated@@96 ($generated@@544 $generated@@666 $generated@@667 $generated@@668 $generated@@669 $generated@@671 $generated@@672 $generated@@673) ($generated@@483 $generated@@674))))) (= ($generated@@98 ($generated@@96 $generated@@669 $generated@@674) $generated@@675) ($generated@@98 ($generated@@96 $generated@@670 $generated@@674) $generated@@675))))
 :no-pattern (type $generated@@674)
 :no-pattern (type $generated@@675)
 :no-pattern ($generated $generated@@674)
 :no-pattern ($generated@@0 $generated@@674)
 :no-pattern ($generated $generated@@675)
 :no-pattern ($generated@@0 $generated@@675)
)))) (= ($generated@@544 $generated@@666 $generated@@667 $generated@@668 $generated@@669 $generated@@671 $generated@@672 $generated@@673) ($generated@@544 $generated@@666 $generated@@667 $generated@@668 $generated@@670 $generated@@671 $generated@@672 $generated@@673)))
 :pattern ( ($generated@@223 $generated@@669 $generated@@670) ($generated@@544 $generated@@666 $generated@@667 $generated@@668 $generated@@670 $generated@@671 $generated@@672 $generated@@673))
)))
(assert (forall (($generated@@677 T@U) ($generated@@678 T@U) ($generated@@679 T@U) ($generated@@680 T@U) ($generated@@681 T@U) ($generated@@682 T@U) ($generated@@683 T@U) ($generated@@684 T@U) ) (!  (=> (and (and (and (and (and (and (and (and (= (type $generated@@677) $generated@@78) (= (type $generated@@678) $generated@@78)) (= (type $generated@@679) $generated@@78)) (= (type $generated@@680) ($generated@@91 $generated@@92 $generated@@93))) (= (type $generated@@681) ($generated@@91 $generated@@92 $generated@@93))) (= (type $generated@@682) $generated@@485)) (= (type $generated@@683) $generated@@166)) (= (type $generated@@684) $generated@@166)) (and (and (and ($generated@@223 $generated@@680 $generated@@681) (and ($generated@@326 $generated@@680) ($generated@@326 $generated@@681))) (and (and ($generated@@167 $generated@@683 $generated@@677) ($generated@@167 $generated@@684 $generated@@678)) ($generated@@151 $generated@@682 ($generated@@336 $generated@@677 $generated@@678 $generated@@679)))) (forall (($generated@@685 T@U) ($generated@@686 T@U) ) (! (let (($generated@@687 ($generated@@81 (type $generated@@686))))
 (=> (and (and (= (type $generated@@685) $generated@@92) (= (type $generated@@686) ($generated@@80 $generated@@687))) (and (not (= $generated@@685 $generated@@149)) ($generated@@0 ($generated@@96 ($generated@@544 $generated@@677 $generated@@678 $generated@@679 $generated@@681 $generated@@682 $generated@@683 $generated@@684) ($generated@@483 $generated@@685))))) (= ($generated@@98 ($generated@@96 $generated@@680 $generated@@685) $generated@@686) ($generated@@98 ($generated@@96 $generated@@681 $generated@@685) $generated@@686))))
 :no-pattern (type $generated@@685)
 :no-pattern (type $generated@@686)
 :no-pattern ($generated $generated@@685)
 :no-pattern ($generated@@0 $generated@@685)
 :no-pattern ($generated $generated@@686)
 :no-pattern ($generated@@0 $generated@@686)
)))) (= ($generated@@544 $generated@@677 $generated@@678 $generated@@679 $generated@@680 $generated@@682 $generated@@683 $generated@@684) ($generated@@544 $generated@@677 $generated@@678 $generated@@679 $generated@@681 $generated@@682 $generated@@683 $generated@@684)))
 :pattern ( ($generated@@223 $generated@@680 $generated@@681) ($generated@@544 $generated@@677 $generated@@678 $generated@@679 $generated@@681 $generated@@682 $generated@@683 $generated@@684))
)))
(assert (forall (($generated@@688 T@U) ($generated@@689 T@U) ($generated@@690 T@U) ($generated@@691 T@U) ($generated@@692 T@U) ($generated@@693 T@U) ($generated@@694 T@U) ($generated@@695 T@U) ) (!  (=> (and (and (and (and (and (and (and (and (= (type $generated@@688) $generated@@78) (= (type $generated@@689) $generated@@78)) (= (type $generated@@690) $generated@@78)) (= (type $generated@@691) ($generated@@91 $generated@@92 $generated@@93))) (= (type $generated@@692) ($generated@@91 $generated@@92 $generated@@93))) (= (type $generated@@693) $generated@@485)) (= (type $generated@@694) $generated@@166)) (= (type $generated@@695) $generated@@166)) (and (and (and ($generated@@223 $generated@@691 $generated@@692) (and ($generated@@326 $generated@@691) ($generated@@326 $generated@@692))) (and (and ($generated@@167 $generated@@694 $generated@@688) ($generated@@167 $generated@@695 $generated@@689)) ($generated@@151 $generated@@693 ($generated@@336 $generated@@688 $generated@@689 $generated@@690)))) (forall (($generated@@696 T@U) ($generated@@697 T@U) ) (! (let (($generated@@698 ($generated@@81 (type $generated@@697))))
 (=> (and (and (= (type $generated@@696) $generated@@92) (= (type $generated@@697) ($generated@@80 $generated@@698))) (and (not (= $generated@@696 $generated@@149)) ($generated@@0 ($generated@@96 ($generated@@544 $generated@@688 $generated@@689 $generated@@690 $generated@@691 $generated@@693 $generated@@694 $generated@@695) ($generated@@483 $generated@@696))))) (= ($generated@@98 ($generated@@96 $generated@@691 $generated@@696) $generated@@697) ($generated@@98 ($generated@@96 $generated@@692 $generated@@696) $generated@@697))))
 :no-pattern (type $generated@@696)
 :no-pattern (type $generated@@697)
 :no-pattern ($generated $generated@@696)
 :no-pattern ($generated@@0 $generated@@696)
 :no-pattern ($generated $generated@@697)
 :no-pattern ($generated@@0 $generated@@697)
)))) (= ($generated@@543 $generated@@688 $generated@@689 $generated@@690 $generated@@691 $generated@@693 $generated@@694 $generated@@695) ($generated@@543 $generated@@688 $generated@@689 $generated@@690 $generated@@692 $generated@@693 $generated@@694 $generated@@695)))
 :pattern ( ($generated@@223 $generated@@691 $generated@@692) ($generated@@543 $generated@@688 $generated@@689 $generated@@690 $generated@@692 $generated@@693 $generated@@694 $generated@@695))
)))
(assert (forall (($generated@@699 T@U) ($generated@@700 T@U) ($generated@@701 T@U) ($generated@@702 T@U) ($generated@@703 T@U) ($generated@@704 T@U) ($generated@@705 T@U) ($generated@@706 T@U) ) (!  (=> (and (and (and (and (and (and (and (and (= (type $generated@@699) $generated@@78) (= (type $generated@@700) $generated@@78)) (= (type $generated@@701) $generated@@78)) (= (type $generated@@702) ($generated@@91 $generated@@92 $generated@@93))) (= (type $generated@@703) ($generated@@91 $generated@@92 $generated@@93))) (= (type $generated@@704) $generated@@485)) (= (type $generated@@705) $generated@@166)) (= (type $generated@@706) $generated@@166)) (and (and (and ($generated@@223 $generated@@702 $generated@@703) (and ($generated@@326 $generated@@702) ($generated@@326 $generated@@703))) (and (and ($generated@@167 $generated@@705 $generated@@699) ($generated@@167 $generated@@706 $generated@@700)) ($generated@@151 $generated@@704 ($generated@@336 $generated@@699 $generated@@700 $generated@@701)))) (forall (($generated@@707 T@U) ($generated@@708 T@U) ) (! (let (($generated@@709 ($generated@@81 (type $generated@@708))))
 (=> (and (and (= (type $generated@@707) $generated@@92) (= (type $generated@@708) ($generated@@80 $generated@@709))) (and (not (= $generated@@707 $generated@@149)) ($generated@@0 ($generated@@96 ($generated@@544 $generated@@699 $generated@@700 $generated@@701 $generated@@703 $generated@@704 $generated@@705 $generated@@706) ($generated@@483 $generated@@707))))) (= ($generated@@98 ($generated@@96 $generated@@702 $generated@@707) $generated@@708) ($generated@@98 ($generated@@96 $generated@@703 $generated@@707) $generated@@708))))
 :no-pattern (type $generated@@707)
 :no-pattern (type $generated@@708)
 :no-pattern ($generated $generated@@707)
 :no-pattern ($generated@@0 $generated@@707)
 :no-pattern ($generated $generated@@708)
 :no-pattern ($generated@@0 $generated@@708)
)))) (= ($generated@@543 $generated@@699 $generated@@700 $generated@@701 $generated@@702 $generated@@704 $generated@@705 $generated@@706) ($generated@@543 $generated@@699 $generated@@700 $generated@@701 $generated@@703 $generated@@704 $generated@@705 $generated@@706)))
 :pattern ( ($generated@@223 $generated@@702 $generated@@703) ($generated@@543 $generated@@699 $generated@@700 $generated@@701 $generated@@703 $generated@@704 $generated@@705 $generated@@706))
)))
(assert  (and (and (and (and (forall (($generated@@715 T@T) ($generated@@716 T@T) ) (= ($generated@@1 ($generated@@712 $generated@@715 $generated@@716)) 22)) (forall (($generated@@717 T@T) ($generated@@718 T@T) ) (! (= ($generated@@713 ($generated@@712 $generated@@717 $generated@@718)) $generated@@717)
 :pattern ( ($generated@@712 $generated@@717 $generated@@718))
))) (forall (($generated@@719 T@T) ($generated@@720 T@T) ) (! (= ($generated@@714 ($generated@@712 $generated@@719 $generated@@720)) $generated@@720)
 :pattern ( ($generated@@712 $generated@@719 $generated@@720))
))) (forall (($generated@@721 T@U) ) (! (let (($generated@@722 ($generated@@713 (type $generated@@721))))
(= (type ($generated@@710 $generated@@721)) ($generated@@91 $generated@@722 $generated@@4)))
 :pattern ( ($generated@@710 $generated@@721))
))) (forall (($generated@@723 T@T) ($generated@@724 T@T) ) (! (= (type ($generated@@711 $generated@@723 $generated@@724)) ($generated@@712 $generated@@723 $generated@@724))
 :pattern ( ($generated@@711 $generated@@723 $generated@@724))
))))
(assert (forall (($generated@@725 T@U) ($generated@@726 T@T) ) (! (let (($generated@@727 (type $generated@@725)))
 (not ($generated@@0 ($generated@@96 ($generated@@710 ($generated@@711 $generated@@727 $generated@@726)) $generated@@725))))
 :pattern ( (let (($generated@@727 (type $generated@@725)))
($generated@@96 ($generated@@710 ($generated@@711 $generated@@727 $generated@@726)) $generated@@725)))
)))
(assert  (and (and (and (and (forall (($generated@@733 T@T) ($generated@@734 T@T) ) (= ($generated@@1 ($generated@@730 $generated@@733 $generated@@734)) 23)) (forall (($generated@@735 T@T) ($generated@@736 T@T) ) (! (= ($generated@@731 ($generated@@730 $generated@@735 $generated@@736)) $generated@@735)
 :pattern ( ($generated@@730 $generated@@735 $generated@@736))
))) (forall (($generated@@737 T@T) ($generated@@738 T@T) ) (! (= ($generated@@732 ($generated@@730 $generated@@737 $generated@@738)) $generated@@738)
 :pattern ( ($generated@@730 $generated@@737 $generated@@738))
))) (forall (($generated@@739 T@U) ) (! (let (($generated@@740 ($generated@@731 (type $generated@@739))))
(= (type ($generated@@728 $generated@@739)) ($generated@@91 $generated@@740 $generated@@4)))
 :pattern ( ($generated@@728 $generated@@739))
))) (forall (($generated@@741 T@T) ($generated@@742 T@T) ) (! (= (type ($generated@@729 $generated@@741 $generated@@742)) ($generated@@730 $generated@@741 $generated@@742))
 :pattern ( ($generated@@729 $generated@@741 $generated@@742))
))))
(assert (forall (($generated@@743 T@U) ($generated@@744 T@T) ) (! (let (($generated@@745 (type $generated@@743)))
 (not ($generated@@0 ($generated@@96 ($generated@@728 ($generated@@729 $generated@@745 $generated@@744)) $generated@@743))))
 :pattern ( (let (($generated@@745 (type $generated@@743)))
($generated@@96 ($generated@@728 ($generated@@729 $generated@@745 $generated@@744)) $generated@@743)))
)))
(assert (forall (($generated@@746 T@U) ($generated@@747 T@U) ) (! (let (($generated@@748 ($generated@@94 (type $generated@@746))))
 (=> (and (= (type $generated@@746) ($generated@@91 $generated@@748 $generated@@4)) (= (type $generated@@747) ($generated@@91 $generated@@748 $generated@@4))) (= ($generated@@530 $generated@@746 $generated@@747) (forall (($generated@@749 T@U) ) (!  (=> (= (type $generated@@749) $generated@@748) (= ($generated@@0 ($generated@@96 $generated@@746 $generated@@749)) ($generated@@0 ($generated@@96 $generated@@747 $generated@@749))))
 :pattern ( ($generated@@96 $generated@@746 $generated@@749))
 :pattern ( ($generated@@96 $generated@@747 $generated@@749))
)))))
 :pattern ( ($generated@@530 $generated@@746 $generated@@747))
)))
(assert (forall (($generated@@750 T@U) ) (! (let (($generated@@751 ($generated@@94 (type $generated@@750))))
 (=> (= (type $generated@@750) ($generated@@91 $generated@@751 $generated@@2)) (= ($generated@@382 $generated@@750) (forall (($generated@@752 T@U) ) (!  (=> (= (type $generated@@752) $generated@@751) (and (<= 0 ($generated ($generated@@96 $generated@@750 $generated@@752))) (<= ($generated ($generated@@96 $generated@@750 $generated@@752)) ($generated@@656 $generated@@750))))
 :pattern ( ($generated@@96 $generated@@750 $generated@@752))
)))))
 :pattern ( ($generated@@382 $generated@@750))
)))
(assert  (and (forall (($generated@@755 T@U) ($generated@@756 T@U) ($generated@@757 T@U) ($generated@@758 T@U) ($generated@@759 T@U) ) (! (= (type ($generated@@753 $generated@@755 $generated@@756 $generated@@757 $generated@@758 $generated@@759)) $generated@@166)
 :pattern ( ($generated@@753 $generated@@755 $generated@@756 $generated@@757 $generated@@758 $generated@@759))
)) (forall (($generated@@760 T@U) ($generated@@761 T@U) ($generated@@762 T@U) ) (! (= (type ($generated@@754 $generated@@760 $generated@@761 $generated@@762)) $generated@@485)
 :pattern ( ($generated@@754 $generated@@760 $generated@@761 $generated@@762))
))))
(assert (forall (($generated@@763 T@U) ($generated@@764 T@U) ($generated@@765 T@U) ($generated@@766 T@U) ($generated@@767 T@U) ($generated@@768 T@U) ($generated@@769 T@U) ) (!  (=> (and (and (and (and (and (and (= (type $generated@@763) $generated@@78) (= (type $generated@@764) $generated@@78)) (= (type $generated@@765) ($generated@@91 $generated@@92 $generated@@93))) (= (type $generated@@766) ($generated@@168 ($generated@@91 $generated@@92 $generated@@93) $generated@@166 $generated@@166))) (= (type $generated@@767) ($generated@@168 ($generated@@91 $generated@@92 $generated@@93) $generated@@166 $generated@@4))) (= (type $generated@@768) ($generated@@168 ($generated@@91 $generated@@92 $generated@@93) $generated@@166 ($generated@@91 $generated@@166 $generated@@4)))) (= (type $generated@@769) $generated@@166)) (= ($generated@@753 $generated@@763 $generated@@764 $generated@@765 ($generated@@754 $generated@@766 $generated@@767 $generated@@768) $generated@@769) ($generated@@164 $generated@@766 $generated@@765 $generated@@769)))
 :pattern ( ($generated@@753 $generated@@763 $generated@@764 $generated@@765 ($generated@@754 $generated@@766 $generated@@767 $generated@@768) $generated@@769))
)))
(assert (forall (($generated@@770 T@U) ) (!  (=> (and (= (type $generated@@770) $generated@@166) ($generated@@167 $generated@@770 $generated@@320)) (and (= ($generated@@483 ($generated@@484 $generated@@2 $generated@@770)) $generated@@770) ($generated@@151 ($generated@@484 $generated@@2 $generated@@770) $generated@@320)))
 :pattern ( ($generated@@167 $generated@@770 $generated@@320))
)))
(assert (forall (($generated@@771 T@U) ) (!  (=> (and (= (type $generated@@771) $generated@@166) ($generated@@167 $generated@@771 $generated@@323)) (and (= ($generated@@483 ($generated@@484 $generated@@92 $generated@@771)) $generated@@771) ($generated@@151 ($generated@@484 $generated@@92 $generated@@771) $generated@@323)))
 :pattern ( ($generated@@167 $generated@@771 $generated@@323))
)))
(assert (forall (($generated@@772 T@U) ($generated@@773 T@U) ) (!  (=> (and (= (type $generated@@772) $generated@@78) (= (type $generated@@773) $generated@@92)) (= ($generated@@151 $generated@@773 ($generated@@148 $generated@@772))  (or (= $generated@@773 $generated@@149) (= ($generated@@150 $generated@@773) ($generated@@148 $generated@@772)))))
 :pattern ( ($generated@@151 $generated@@773 ($generated@@148 $generated@@772)))
)))
(assert (forall (($generated@@774 T@U) ($generated@@775 T@U) ) (!  (=> (and (= (type $generated@@774) $generated@@78) (= (type $generated@@775) $generated@@92)) (= ($generated@@151 $generated@@775 ($generated@@157 $generated@@774))  (or (= $generated@@775 $generated@@149) (= ($generated@@150 $generated@@775) ($generated@@157 $generated@@774)))))
 :pattern ( ($generated@@151 $generated@@775 ($generated@@157 $generated@@774)))
)))
(assert (forall (($generated@@776 T@U) ) (! (let (($generated@@777 ($generated@@714 (type $generated@@776))))
(let (($generated@@778 ($generated@@713 (type $generated@@776))))
 (=> (= (type $generated@@776) ($generated@@712 $generated@@778 $generated@@777)) (or (= $generated@@776 ($generated@@711 $generated@@778 $generated@@777)) (exists (($generated@@779 T@U) ) (!  (and (= (type $generated@@779) $generated@@778) ($generated@@0 ($generated@@96 ($generated@@710 $generated@@776) $generated@@779)))
 :no-pattern (type $generated@@779)
 :no-pattern ($generated $generated@@779)
 :no-pattern ($generated@@0 $generated@@779)
))))))
 :pattern ( ($generated@@710 $generated@@776))
)))
(assert (forall (($generated@@781 T@U) ) (! (let (($generated@@782 ($generated@@714 (type $generated@@781))))
(= (type ($generated@@780 $generated@@781)) ($generated@@91 $generated@@782 $generated@@4)))
 :pattern ( ($generated@@780 $generated@@781))
)))
(assert (forall (($generated@@783 T@U) ) (! (let (($generated@@784 ($generated@@714 (type $generated@@783))))
(let (($generated@@785 ($generated@@713 (type $generated@@783))))
 (=> (= (type $generated@@783) ($generated@@712 $generated@@785 $generated@@784)) (or (= $generated@@783 ($generated@@711 $generated@@785 $generated@@784)) (exists (($generated@@786 T@U) ) (!  (and (= (type $generated@@786) $generated@@784) ($generated@@0 ($generated@@96 ($generated@@780 $generated@@783) $generated@@786)))
 :no-pattern (type $generated@@786)
 :no-pattern ($generated $generated@@786)
 :no-pattern ($generated@@0 $generated@@786)
))))))
 :pattern ( ($generated@@780 $generated@@783))
)))
(assert (forall (($generated@@787 T@U) ) (! (let (($generated@@788 ($generated@@732 (type $generated@@787))))
(let (($generated@@789 ($generated@@731 (type $generated@@787))))
 (=> (= (type $generated@@787) ($generated@@730 $generated@@789 $generated@@788)) (or (= $generated@@787 ($generated@@729 $generated@@789 $generated@@788)) (exists (($generated@@790 T@U) ) (!  (and (= (type $generated@@790) $generated@@789) ($generated@@0 ($generated@@96 ($generated@@728 $generated@@787) $generated@@790)))
 :no-pattern (type $generated@@790)
 :no-pattern ($generated $generated@@790)
 :no-pattern ($generated@@0 $generated@@790)
))))))
 :pattern ( ($generated@@728 $generated@@787))
)))
(assert (forall (($generated@@792 T@U) ) (! (let (($generated@@793 ($generated@@732 (type $generated@@792))))
(= (type ($generated@@791 $generated@@792)) ($generated@@91 $generated@@793 $generated@@4)))
 :pattern ( ($generated@@791 $generated@@792))
)))
(assert (forall (($generated@@794 T@U) ) (! (let (($generated@@795 ($generated@@732 (type $generated@@794))))
(let (($generated@@796 ($generated@@731 (type $generated@@794))))
 (=> (= (type $generated@@794) ($generated@@730 $generated@@796 $generated@@795)) (or (= $generated@@794 ($generated@@729 $generated@@796 $generated@@795)) (exists (($generated@@797 T@U) ) (!  (and (= (type $generated@@797) $generated@@795) ($generated@@0 ($generated@@96 ($generated@@791 $generated@@794) $generated@@797)))
 :no-pattern (type $generated@@797)
 :no-pattern ($generated $generated@@797)
 :no-pattern ($generated@@0 $generated@@797)
))))))
 :pattern ( ($generated@@791 $generated@@794))
)))
(assert (forall (($generated@@798 T@U) ($generated@@799 T@U) ) (!  (=> (and (= (type $generated@@798) ($generated@@91 $generated@@166 $generated@@2)) (= (type $generated@@799) $generated@@78)) (= ($generated@@151 $generated@@798 ($generated@@381 $generated@@799)) (forall (($generated@@800 T@U) ) (!  (=> (and (= (type $generated@@800) $generated@@166) (< 0 ($generated ($generated@@96 $generated@@798 $generated@@800)))) ($generated@@167 $generated@@800 $generated@@799))
 :pattern ( ($generated@@96 $generated@@798 $generated@@800))
))))
 :pattern ( ($generated@@151 $generated@@798 ($generated@@381 $generated@@799)))
)))
(assert (forall (($generated@@802 T@U) ($generated@@803 T@U) ($generated@@804 T@U) ($generated@@805 T@U) ) (!  (=> (and (and (and (and (= (type $generated@@802) $generated@@485) (= (type $generated@@803) $generated@@78)) (= (type $generated@@804) $generated@@78)) (= (type $generated@@805) ($generated@@91 $generated@@92 $generated@@93))) (and ($generated@@326 $generated@@805) ($generated@@89 $generated@@802 ($generated@@493 $generated@@803 $generated@@804) $generated@@805))) (forall (($generated@@806 T@U) ) (!  (=> (= (type $generated@@806) $generated@@166) (=> (and ($generated@@545 $generated@@806 $generated@@803 $generated@@805) ($generated@@801 $generated@@803 $generated@@804 $generated@@805 $generated@@802 $generated@@806)) ($generated@@545 ($generated@@753 $generated@@803 $generated@@804 $generated@@805 $generated@@802 $generated@@806) $generated@@804 $generated@@805)))
 :pattern ( ($generated@@753 $generated@@803 $generated@@804 $generated@@805 $generated@@802 $generated@@806))
)))
 :pattern ( ($generated@@89 $generated@@802 ($generated@@493 $generated@@803 $generated@@804) $generated@@805))
)))
(assert (forall (($generated@@807 T@U) ($generated@@808 T@U) ($generated@@809 T@U) ($generated@@810 T@U) ) (!  (=> (and (and (and (and (= (type $generated@@807) $generated@@485) (= (type $generated@@808) $generated@@78)) (= (type $generated@@809) $generated@@78)) (= (type $generated@@810) ($generated@@91 $generated@@92 $generated@@93))) ($generated@@326 $generated@@810)) (= ($generated@@89 $generated@@807 ($generated@@493 $generated@@808 $generated@@809) $generated@@810) (forall (($generated@@811 T@U) ) (!  (=> (= (type $generated@@811) $generated@@166) (=> (and (and ($generated@@167 $generated@@811 $generated@@808) ($generated@@545 $generated@@811 $generated@@808 $generated@@810)) ($generated@@801 $generated@@808 $generated@@809 $generated@@810 $generated@@807 $generated@@811)) (forall (($generated@@812 T@U) ) (!  (=> (= (type $generated@@812) $generated@@92) (=> (and (not (= $generated@@812 $generated@@149)) ($generated@@0 ($generated@@96 ($generated@@528 $generated@@808 $generated@@809 $generated@@810 $generated@@807 $generated@@811) ($generated@@483 $generated@@812)))) ($generated@@0 ($generated@@98 ($generated@@96 $generated@@810 $generated@@812) $generated@@60))))
 :pattern ( ($generated@@96 ($generated@@528 $generated@@808 $generated@@809 $generated@@810 $generated@@807 $generated@@811) ($generated@@483 $generated@@812)))
))))
 :pattern ( ($generated@@753 $generated@@808 $generated@@809 $generated@@810 $generated@@807 $generated@@811))
 :pattern ( ($generated@@528 $generated@@808 $generated@@809 $generated@@810 $generated@@807 $generated@@811))
))))
 :pattern ( ($generated@@89 $generated@@807 ($generated@@493 $generated@@808 $generated@@809) $generated@@810))
)))
(assert (forall (($generated@@814 Bool) ) (! (= (type ($generated@@813 $generated@@814)) ($generated@@91 $generated@@92 $generated@@4))
 :pattern ( ($generated@@813 $generated@@814))
)))
(assert (forall (($generated@@815 Bool) ($generated@@816 T@U) ) (!  (=> (= (type $generated@@816) $generated@@92) (= ($generated@@0 ($generated@@96 ($generated@@813 $generated@@815) $generated@@816)) $generated@@815))
 :pattern ( ($generated@@96 ($generated@@813 $generated@@815) $generated@@816))
)))
(assert (forall (($generated@@818 T@U) ) (! (= (type ($generated@@817 $generated@@818)) ($generated@@91 $generated@@620 $generated@@485))
 :pattern ( ($generated@@817 $generated@@818))
)))
(assert (forall (($generated@@819 T@U) ($generated@@820 T@U) ) (!  (=> (and (= (type $generated@@819) $generated@@485) (= (type $generated@@820) $generated@@620)) (= ($generated@@96 ($generated@@817 $generated@@819) $generated@@820) $generated@@819))
 :pattern ( ($generated@@96 ($generated@@817 $generated@@819) $generated@@820))
)))
(assert (forall (($generated@@821 T@U) ($generated@@822 T@U) ($generated@@823 T@U) ($generated@@824 T@U) ) (!  (=> (and (and (and (= (type $generated@@821) $generated@@485) (= (type $generated@@822) $generated@@78)) (= (type $generated@@823) $generated@@78)) (= (type $generated@@824) $generated@@78)) (= ($generated@@151 $generated@@821 ($generated@@336 $generated@@822 $generated@@823 $generated@@824)) (forall (($generated@@825 T@U) ($generated@@826 T@U) ($generated@@827 T@U) ) (!  (=> (and (and (and (= (type $generated@@825) ($generated@@91 $generated@@92 $generated@@93)) (= (type $generated@@826) $generated@@166)) (= (type $generated@@827) $generated@@166)) (and (and ($generated@@326 $generated@@825) (and ($generated@@167 $generated@@826 $generated@@822) ($generated@@167 $generated@@827 $generated@@823))) ($generated@@546 $generated@@822 $generated@@823 $generated@@824 $generated@@825 $generated@@821 $generated@@826 $generated@@827))) ($generated@@167 ($generated@@543 $generated@@822 $generated@@823 $generated@@824 $generated@@825 $generated@@821 $generated@@826 $generated@@827) $generated@@824))
 :pattern ( ($generated@@543 $generated@@822 $generated@@823 $generated@@824 $generated@@825 $generated@@821 $generated@@826 $generated@@827))
))))
 :pattern ( ($generated@@151 $generated@@821 ($generated@@336 $generated@@822 $generated@@823 $generated@@824)))
)))
(assert (forall (($generated@@828 T@U) ($generated@@829 T@U) ($generated@@830 T@U) ) (!  (=> (and (and (= (type $generated@@828) ($generated@@91 $generated@@166 $generated@@4)) (= (type $generated@@829) $generated@@78)) (= (type $generated@@830) ($generated@@91 $generated@@92 $generated@@93))) (= ($generated@@89 $generated@@828 ($generated@@512 $generated@@829) $generated@@830) (forall (($generated@@831 T@U) ) (!  (=> (and (= (type $generated@@831) $generated@@166) ($generated@@0 ($generated@@96 $generated@@828 $generated@@831))) ($generated@@545 $generated@@831 $generated@@829 $generated@@830))
 :pattern ( ($generated@@96 $generated@@828 $generated@@831))
))))
 :pattern ( ($generated@@89 $generated@@828 ($generated@@512 $generated@@829) $generated@@830))
)))
(assert (forall (($generated@@832 T@U) ($generated@@833 T@U) ($generated@@834 T@U) ) (!  (=> (and (and (= (type $generated@@832) ($generated@@91 $generated@@166 $generated@@4)) (= (type $generated@@833) $generated@@78)) (= (type $generated@@834) ($generated@@91 $generated@@92 $generated@@93))) (= ($generated@@89 $generated@@832 ($generated@@517 $generated@@833) $generated@@834) (forall (($generated@@835 T@U) ) (!  (=> (and (= (type $generated@@835) $generated@@166) ($generated@@0 ($generated@@96 $generated@@832 $generated@@835))) ($generated@@545 $generated@@835 $generated@@833 $generated@@834))
 :pattern ( ($generated@@96 $generated@@832 $generated@@835))
))))
 :pattern ( ($generated@@89 $generated@@832 ($generated@@517 $generated@@833) $generated@@834))
)))
(assert (forall (($generated@@836 T@U) ) (! (let (($generated@@837 (type $generated@@836)))
(= ($generated ($generated@@96 ($generated@@657 $generated@@837) $generated@@836)) 0))
 :pattern ( (let (($generated@@837 (type $generated@@836)))
($generated@@96 ($generated@@657 $generated@@837) $generated@@836)))
)))
(assert  (and (forall (($generated@@840 T@U) ) (! (= (type ($generated@@838 $generated@@840)) ($generated@@91 $generated@@166 $generated@@4))
 :pattern ( ($generated@@838 $generated@@840))
)) (forall (($generated@@841 T@U) ) (! (let (($generated@@842 ($generated@@714 (type $generated@@841))))
(let (($generated@@843 ($generated@@713 (type $generated@@841))))
(= (type ($generated@@839 $generated@@841)) ($generated@@91 $generated@@843 $generated@@842))))
 :pattern ( ($generated@@839 $generated@@841))
))))
(assert (forall (($generated@@844 T@U) ($generated@@845 T@U) ) (!  (=> (and (= (type $generated@@844) ($generated@@712 $generated@@166 $generated@@166)) (= (type $generated@@845) $generated@@166)) (= ($generated@@0 ($generated@@96 ($generated@@838 $generated@@844) $generated@@845))  (and ($generated@@0 ($generated@@96 ($generated@@710 $generated@@844) ($generated@@375 ($generated@@484 $generated@@368 $generated@@845)))) (= ($generated@@96 ($generated@@839 $generated@@844) ($generated@@375 ($generated@@484 $generated@@368 $generated@@845))) ($generated@@376 ($generated@@484 $generated@@368 $generated@@845))))))
 :pattern ( ($generated@@96 ($generated@@838 $generated@@844) $generated@@845))
)))
(assert  (and (forall (($generated@@848 T@U) ) (! (= (type ($generated@@846 $generated@@848)) ($generated@@91 $generated@@166 $generated@@4))
 :pattern ( ($generated@@846 $generated@@848))
)) (forall (($generated@@849 T@U) ) (! (let (($generated@@850 ($generated@@732 (type $generated@@849))))
(let (($generated@@851 ($generated@@731 (type $generated@@849))))
(= (type ($generated@@847 $generated@@849)) ($generated@@91 $generated@@851 $generated@@850))))
 :pattern ( ($generated@@847 $generated@@849))
))))
(assert (forall (($generated@@852 T@U) ($generated@@853 T@U) ) (!  (=> (and (= (type $generated@@852) ($generated@@730 $generated@@166 $generated@@166)) (= (type $generated@@853) $generated@@166)) (= ($generated@@0 ($generated@@96 ($generated@@846 $generated@@852) $generated@@853))  (and ($generated@@0 ($generated@@96 ($generated@@728 $generated@@852) ($generated@@375 ($generated@@484 $generated@@368 $generated@@853)))) (= ($generated@@96 ($generated@@847 $generated@@852) ($generated@@375 ($generated@@484 $generated@@368 $generated@@853))) ($generated@@376 ($generated@@484 $generated@@368 $generated@@853))))))
 :pattern ( ($generated@@96 ($generated@@846 $generated@@852) $generated@@853))
)))
(assert (forall (($generated@@854 T@U) ($generated@@855 T@U) ) (! (let (($generated@@856 (type $generated@@855)))
(let (($generated@@857 ($generated@@713 (type $generated@@854))))
 (=> (= (type $generated@@854) ($generated@@712 $generated@@857 $generated@@856)) (= ($generated@@0 ($generated@@96 ($generated@@780 $generated@@854) $generated@@855)) (exists (($generated@@858 T@U) ) (!  (and (= (type $generated@@858) $generated@@857) (and ($generated@@0 ($generated@@96 ($generated@@710 $generated@@854) $generated@@858)) (= $generated@@855 ($generated@@96 ($generated@@839 $generated@@854) $generated@@858))))
 :pattern ( ($generated@@96 ($generated@@710 $generated@@854) $generated@@858))
 :pattern ( ($generated@@96 ($generated@@839 $generated@@854) $generated@@858))
))))))
 :pattern ( ($generated@@96 ($generated@@780 $generated@@854) $generated@@855))
)))
(assert (forall (($generated@@859 T@U) ($generated@@860 T@U) ) (! (let (($generated@@861 (type $generated@@860)))
(let (($generated@@862 ($generated@@731 (type $generated@@859))))
 (=> (= (type $generated@@859) ($generated@@730 $generated@@862 $generated@@861)) (= ($generated@@0 ($generated@@96 ($generated@@791 $generated@@859) $generated@@860)) (exists (($generated@@863 T@U) ) (!  (and (= (type $generated@@863) $generated@@862) (and ($generated@@0 ($generated@@96 ($generated@@728 $generated@@859) $generated@@863)) (= $generated@@860 ($generated@@96 ($generated@@847 $generated@@859) $generated@@863))))
 :pattern ( ($generated@@96 ($generated@@728 $generated@@859) $generated@@863))
 :pattern ( ($generated@@96 ($generated@@847 $generated@@859) $generated@@863))
))))))
 :pattern ( ($generated@@96 ($generated@@791 $generated@@859) $generated@@860))
)))
(assert (forall (($generated@@864 T@U) ($generated@@865 T@U) ($generated@@866 T@U) ($generated@@867 T@U) ($generated@@868 T@U) ($generated@@869 T@U) ($generated@@870 T@U) ($generated@@871 T@U) ) (!  (=> (and (and (and (and (and (and (and (= (type $generated@@864) $generated@@78) (= (type $generated@@865) $generated@@78)) (= (type $generated@@866) ($generated@@91 $generated@@92 $generated@@93))) (= (type $generated@@867) ($generated@@168 ($generated@@91 $generated@@92 $generated@@93) $generated@@166 $generated@@166))) (= (type $generated@@868) ($generated@@168 ($generated@@91 $generated@@92 $generated@@93) $generated@@166 $generated@@4))) (= (type $generated@@869) ($generated@@168 ($generated@@91 $generated@@92 $generated@@93) $generated@@166 ($generated@@91 $generated@@166 $generated@@4)))) (= (type $generated@@870) $generated@@166)) (= (type $generated@@871) $generated@@166)) (= ($generated@@0 ($generated@@96 ($generated@@528 $generated@@864 $generated@@865 $generated@@866 ($generated@@754 $generated@@867 $generated@@868 $generated@@869) $generated@@870) $generated@@871)) ($generated@@0 ($generated@@96 ($generated@@164 $generated@@869 $generated@@866 $generated@@870) $generated@@871))))
 :pattern ( ($generated@@96 ($generated@@528 $generated@@864 $generated@@865 $generated@@866 ($generated@@754 $generated@@867 $generated@@868 $generated@@869) $generated@@870) $generated@@871))
)))
(assert (forall (($generated@@873 T@U) ($generated@@874 T@U) ) (! (= (type ($generated@@872 $generated@@873 $generated@@874)) $generated@@78)
 :pattern ( ($generated@@872 $generated@@873 $generated@@874))
)))
(assert (forall (($generated@@875 T@U) ($generated@@876 T@U) ($generated@@877 T@U) ($generated@@878 T@U) ) (!  (=> (and (and (and (= (type $generated@@875) ($generated@@712 $generated@@166 $generated@@166)) (= (type $generated@@876) $generated@@78)) (= (type $generated@@877) $generated@@78)) (= (type $generated@@878) ($generated@@91 $generated@@92 $generated@@93))) (= ($generated@@89 $generated@@875 ($generated@@872 $generated@@876 $generated@@877) $generated@@878) (forall (($generated@@879 T@U) ) (!  (=> (and (= (type $generated@@879) $generated@@166) ($generated@@0 ($generated@@96 ($generated@@710 $generated@@875) $generated@@879))) (and ($generated@@545 ($generated@@96 ($generated@@839 $generated@@875) $generated@@879) $generated@@877 $generated@@878) ($generated@@545 $generated@@879 $generated@@876 $generated@@878)))
 :pattern ( ($generated@@96 ($generated@@839 $generated@@875) $generated@@879))
 :pattern ( ($generated@@96 ($generated@@710 $generated@@875) $generated@@879))
))))
 :pattern ( ($generated@@89 $generated@@875 ($generated@@872 $generated@@876 $generated@@877) $generated@@878))
)))
(assert (forall (($generated@@881 T@U) ($generated@@882 T@U) ) (! (= (type ($generated@@880 $generated@@881 $generated@@882)) $generated@@78)
 :pattern ( ($generated@@880 $generated@@881 $generated@@882))
)))
(assert (forall (($generated@@883 T@U) ($generated@@884 T@U) ($generated@@885 T@U) ($generated@@886 T@U) ) (!  (=> (and (and (and (= (type $generated@@883) ($generated@@730 $generated@@166 $generated@@166)) (= (type $generated@@884) $generated@@78)) (= (type $generated@@885) $generated@@78)) (= (type $generated@@886) ($generated@@91 $generated@@92 $generated@@93))) (= ($generated@@89 $generated@@883 ($generated@@880 $generated@@884 $generated@@885) $generated@@886) (forall (($generated@@887 T@U) ) (!  (=> (and (= (type $generated@@887) $generated@@166) ($generated@@0 ($generated@@96 ($generated@@728 $generated@@883) $generated@@887))) (and ($generated@@545 ($generated@@96 ($generated@@847 $generated@@883) $generated@@887) $generated@@885 $generated@@886) ($generated@@545 $generated@@887 $generated@@884 $generated@@886)))
 :pattern ( ($generated@@96 ($generated@@847 $generated@@883) $generated@@887))
 :pattern ( ($generated@@96 ($generated@@728 $generated@@883) $generated@@887))
))))
 :pattern ( ($generated@@89 $generated@@883 ($generated@@880 $generated@@884 $generated@@885) $generated@@886))
)))
(assert (forall (($generated@@888 T@U) ($generated@@889 T@U) ) (! (let (($generated@@890 ($generated@@94 (type $generated@@888))))
 (=> (and (and (= (type $generated@@888) ($generated@@91 $generated@@890 $generated@@4)) (= (type $generated@@889) ($generated@@91 $generated@@890 $generated@@4))) ($generated@@530 $generated@@888 $generated@@889)) (= $generated@@888 $generated@@889)))
 :pattern ( ($generated@@530 $generated@@888 $generated@@889))
)))
(assert (forall (($generated@@891 T@U) ($generated@@892 T@U) ($generated@@893 T@U) ($generated@@894 T@U) ($generated@@895 T@U) ($generated@@896 T@U) ($generated@@897 T@U) ) (!  (=> (and (and (and (and (and (and (and (= (type $generated@@891) $generated@@78) (= (type $generated@@892) $generated@@78)) (= (type $generated@@893) $generated@@78)) (= (type $generated@@894) ($generated@@91 $generated@@92 $generated@@93))) (= (type $generated@@895) $generated@@485)) (= (type $generated@@896) $generated@@166)) (= (type $generated@@897) $generated@@166)) (and ($generated@@326 $generated@@894) (and (and ($generated@@167 $generated@@896 $generated@@891) ($generated@@167 $generated@@897 $generated@@892)) ($generated@@151 $generated@@895 ($generated@@336 $generated@@891 $generated@@892 $generated@@893))))) (= ($generated@@530 ($generated@@544 $generated@@891 $generated@@892 $generated@@893 $generated@@529 $generated@@895 $generated@@896 $generated@@897) ($generated@@531 $generated@@166)) ($generated@@530 ($generated@@544 $generated@@891 $generated@@892 $generated@@893 $generated@@894 $generated@@895 $generated@@896 $generated@@897) ($generated@@531 $generated@@166))))
 :pattern ( ($generated@@544 $generated@@891 $generated@@892 $generated@@893 $generated@@529 $generated@@895 $generated@@896 $generated@@897) ($generated@@326 $generated@@894))
 :pattern ( ($generated@@544 $generated@@891 $generated@@892 $generated@@893 $generated@@894 $generated@@895 $generated@@896 $generated@@897))
)))
(assert (forall (($generated@@898 T@U) ($generated@@899 T@U) ($generated@@900 T@U) ) (!  (=> (and (and (and (and (= (type $generated@@898) ($generated@@91 $generated@@92 $generated@@93)) (= (type $generated@@899) ($generated@@91 $generated@@92 $generated@@93))) (= (type $generated@@900) ($generated@@91 $generated@@92 $generated@@93))) (not (= $generated@@898 $generated@@900))) (and ($generated@@223 $generated@@898 $generated@@899) ($generated@@223 $generated@@899 $generated@@900))) ($generated@@223 $generated@@898 $generated@@900))
 :pattern ( ($generated@@223 $generated@@898 $generated@@899) ($generated@@223 $generated@@899 $generated@@900))
)))
(assert (forall (($generated@@902 Int) ) (! (= (type ($generated@@901 $generated@@902)) ($generated@@80 $generated@@166))
 :pattern ( ($generated@@901 $generated@@902))
)))
(assert (forall (($generated@@903 T@U) ($generated@@904 T@U) ($generated@@905 T@U) ($generated@@906 Int) ($generated@@907 Int) ) (!  (=> (and (and (and (= (type $generated@@903) $generated@@78) (= (type $generated@@904) ($generated@@91 $generated@@92 $generated@@93))) (= (type $generated@@905) $generated@@92)) (and (and ($generated@@326 $generated@@904) (and (not (= $generated@@905 $generated@@149)) (= ($generated@@150 $generated@@905) ($generated@@157 $generated@@903)))) (and (and (<= 0 $generated@@906) (< $generated@@906 ($generated@@156 $generated@@905))) (and (<= 0 $generated@@907) (< $generated@@907 ($generated@@161 $generated@@905)))))) ($generated@@167 ($generated@@98 ($generated@@96 $generated@@904 $generated@@905) ($generated@@614 ($generated@@901 $generated@@906) $generated@@907)) $generated@@903))
 :pattern ( ($generated@@98 ($generated@@96 $generated@@904 $generated@@905) ($generated@@614 ($generated@@901 $generated@@906) $generated@@907)) ($generated@@157 $generated@@903))
)))
(assert (forall (($generated@@908 T@U) ($generated@@909 T@U) ($generated@@910 T@U) ($generated@@911 Int) ) (!  (=> (and (and (= (type $generated@@908) $generated@@78) (= (type $generated@@909) ($generated@@91 $generated@@92 $generated@@93))) (= (type $generated@@910) $generated@@92)) (=> (and (and (and ($generated@@326 $generated@@909) (and (not (= $generated@@910 $generated@@149)) (= ($generated@@150 $generated@@910) ($generated@@148 $generated@@908)))) (and (<= 0 $generated@@911) (< $generated@@911 ($generated@@147 $generated@@910)))) ($generated@@0 ($generated@@98 ($generated@@96 $generated@@909 $generated@@910) $generated@@60))) ($generated@@545 ($generated@@98 ($generated@@96 $generated@@909 $generated@@910) ($generated@@901 $generated@@911)) $generated@@908 $generated@@909)))
 :pattern ( ($generated@@98 ($generated@@96 $generated@@909 $generated@@910) ($generated@@901 $generated@@911)) ($generated@@148 $generated@@908))
)))
(assert (forall (($generated@@912 T@U) ($generated@@913 T@U) ($generated@@914 T@U) ) (!  (=> (and (and (= (type $generated@@912) $generated@@485) (= (type $generated@@913) $generated@@78)) (= (type $generated@@914) $generated@@78)) (= ($generated@@151 $generated@@912 ($generated@@493 $generated@@913 $generated@@914)) (forall (($generated@@915 T@U) ($generated@@916 T@U) ) (!  (=> (and (= (type $generated@@915) ($generated@@91 $generated@@92 $generated@@93)) (= (type $generated@@916) $generated@@166)) (=> (and (and ($generated@@326 $generated@@915) ($generated@@167 $generated@@916 $generated@@913)) ($generated@@801 $generated@@913 $generated@@914 $generated@@915 $generated@@912 $generated@@916)) ($generated@@167 ($generated@@753 $generated@@913 $generated@@914 $generated@@915 $generated@@912 $generated@@916) $generated@@914)))
 :pattern ( ($generated@@753 $generated@@913 $generated@@914 $generated@@915 $generated@@912 $generated@@916))
))))
 :pattern ( ($generated@@151 $generated@@912 ($generated@@493 $generated@@913 $generated@@914)))
)))
(assert (forall (($generated@@918 T@T) ) (! (= (type ($generated@@917 $generated@@918)) ($generated@@91 $generated@@918 $generated@@4))
 :pattern ( ($generated@@917 $generated@@918))
)))
(assert (forall (($generated@@919 T@U) ) (! (let (($generated@@920 ($generated@@732 (type $generated@@919))))
(let (($generated@@921 ($generated@@731 (type $generated@@919))))
 (=> (= (type $generated@@919) ($generated@@730 $generated@@921 $generated@@920)) (= (= $generated@@919 ($generated@@729 $generated@@921 $generated@@920)) (= ($generated@@728 $generated@@919) ($generated@@917 $generated@@921))))))
 :pattern ( ($generated@@728 $generated@@919))
)))
(assert (forall (($generated@@922 T@U) ) (! (let (($generated@@923 ($generated@@732 (type $generated@@922))))
(let (($generated@@924 ($generated@@731 (type $generated@@922))))
 (=> (= (type $generated@@922) ($generated@@730 $generated@@924 $generated@@923)) (= (= $generated@@922 ($generated@@729 $generated@@924 $generated@@923)) (= ($generated@@791 $generated@@922) ($generated@@917 $generated@@923))))))
 :pattern ( ($generated@@791 $generated@@922))
)))
(assert (forall (($generated@@925 T@U) ) (! (let (($generated@@926 ($generated@@732 (type $generated@@925))))
(let (($generated@@927 ($generated@@731 (type $generated@@925))))
 (=> (= (type $generated@@925) ($generated@@730 $generated@@927 $generated@@926)) (= (= $generated@@925 ($generated@@729 $generated@@927 $generated@@926)) (= ($generated@@846 $generated@@925) ($generated@@917 $generated@@166))))))
 :pattern ( ($generated@@846 $generated@@925))
)))
(assert (forall (($generated@@928 T@U) ($generated@@929 T@U) ($generated@@930 T@U) ($generated@@931 T@U) ($generated@@932 T@U) ) (!  (=> (and (and (and (and (and (= (type $generated@@928) $generated@@485) (= (type $generated@@929) $generated@@78)) (= (type $generated@@930) $generated@@78)) (= (type $generated@@931) $generated@@78)) (= (type $generated@@932) ($generated@@91 $generated@@92 $generated@@93))) (and ($generated@@326 $generated@@932) ($generated@@89 $generated@@928 ($generated@@336 $generated@@929 $generated@@930 $generated@@931) $generated@@932))) (forall (($generated@@933 T@U) ($generated@@934 T@U) ) (!  (=> (and (= (type $generated@@933) $generated@@166) (= (type $generated@@934) $generated@@166)) (=> (and (and ($generated@@545 $generated@@933 $generated@@929 $generated@@932) ($generated@@545 $generated@@934 $generated@@930 $generated@@932)) ($generated@@546 $generated@@929 $generated@@930 $generated@@931 $generated@@932 $generated@@928 $generated@@933 $generated@@934)) ($generated@@545 ($generated@@543 $generated@@929 $generated@@930 $generated@@931 $generated@@932 $generated@@928 $generated@@933 $generated@@934) $generated@@931 $generated@@932)))
 :pattern ( ($generated@@543 $generated@@929 $generated@@930 $generated@@931 $generated@@932 $generated@@928 $generated@@933 $generated@@934))
)))
 :pattern ( ($generated@@89 $generated@@928 ($generated@@336 $generated@@929 $generated@@930 $generated@@931) $generated@@932))
)))
(assert (forall (($generated@@935 T@U) ) (! (let (($generated@@936 ($generated@@714 (type $generated@@935))))
(let (($generated@@937 ($generated@@713 (type $generated@@935))))
 (=> (= (type $generated@@935) ($generated@@712 $generated@@937 $generated@@936)) (or (= $generated@@935 ($generated@@711 $generated@@937 $generated@@936)) (exists (($generated@@938 T@U) ($generated@@939 T@U) ) (!  (and (and (= (type $generated@@938) $generated@@166) (= (type $generated@@939) $generated@@166)) ($generated@@0 ($generated@@96 ($generated@@838 $generated@@935) ($generated@@483 ($generated@@503 $generated@@938 $generated@@939)))))
 :no-pattern (type $generated@@938)
 :no-pattern (type $generated@@939)
 :no-pattern ($generated $generated@@938)
 :no-pattern ($generated@@0 $generated@@938)
 :no-pattern ($generated $generated@@939)
 :no-pattern ($generated@@0 $generated@@939)
))))))
 :pattern ( ($generated@@838 $generated@@935))
)))
(assert (forall (($generated@@940 T@U) ) (! (let (($generated@@941 ($generated@@732 (type $generated@@940))))
(let (($generated@@942 ($generated@@731 (type $generated@@940))))
 (=> (= (type $generated@@940) ($generated@@730 $generated@@942 $generated@@941)) (or (= $generated@@940 ($generated@@729 $generated@@942 $generated@@941)) (exists (($generated@@943 T@U) ($generated@@944 T@U) ) (!  (and (and (= (type $generated@@943) $generated@@166) (= (type $generated@@944) $generated@@166)) ($generated@@0 ($generated@@96 ($generated@@846 $generated@@940) ($generated@@483 ($generated@@503 $generated@@943 $generated@@944)))))
 :no-pattern (type $generated@@943)
 :no-pattern (type $generated@@944)
 :no-pattern ($generated $generated@@943)
 :no-pattern ($generated@@0 $generated@@943)
 :no-pattern ($generated $generated@@944)
 :no-pattern ($generated@@0 $generated@@944)
))))))
 :pattern ( ($generated@@846 $generated@@940))
)))
(assert (forall (($generated@@945 T@U) ) (!  (=> (and (= (type $generated@@945) $generated@@166) ($generated@@167 $generated@@945 $generated@@46)) (and (= ($generated@@483 ($generated@@484 $generated@@2 $generated@@945)) $generated@@945) ($generated@@151 ($generated@@484 $generated@@2 $generated@@945) $generated@@46)))
 :pattern ( ($generated@@167 $generated@@945 $generated@@46))
)))
(assert (forall (($generated@@946 T@U) ) (!  (=> (and (= (type $generated@@946) $generated@@166) ($generated@@167 $generated@@946 $generated@@47)) (and (= ($generated@@483 ($generated@@484 $generated@@3 $generated@@946)) $generated@@946) ($generated@@151 ($generated@@484 $generated@@3 $generated@@946) $generated@@47)))
 :pattern ( ($generated@@167 $generated@@946 $generated@@47))
)))
(assert (forall (($generated@@947 T@U) ) (!  (=> (and (= (type $generated@@947) $generated@@166) ($generated@@167 $generated@@947 $generated@@44)) (and (= ($generated@@483 ($generated@@484 $generated@@4 $generated@@947)) $generated@@947) ($generated@@151 ($generated@@484 $generated@@4 $generated@@947) $generated@@44)))
 :pattern ( ($generated@@167 $generated@@947 $generated@@44))
)))
(assert (= ($generated@@1 $generated@@948) 24))
(assert (forall (($generated@@949 T@U) ) (!  (=> (and (= (type $generated@@949) $generated@@166) ($generated@@167 $generated@@949 $generated@@45)) (and (= ($generated@@483 ($generated@@484 $generated@@948 $generated@@949)) $generated@@949) ($generated@@151 ($generated@@484 $generated@@948 $generated@@949) $generated@@45)))
 :pattern ( ($generated@@167 $generated@@949 $generated@@45))
)))
(assert (forall (($generated@@950 T@U) ($generated@@951 T@U) ) (!  (=> (= (type $generated@@951) $generated@@78) (= ($generated@@167 ($generated@@483 $generated@@950) $generated@@951) ($generated@@151 $generated@@950 $generated@@951)))
 :pattern ( ($generated@@167 ($generated@@483 $generated@@950) $generated@@951))
)))
(assert (forall (($generated@@952 T@U) ($generated@@953 T@U) ($generated@@954 T@U) ($generated@@955 T@U) ($generated@@956 T@U) ($generated@@957 T@U) ($generated@@958 T@U) ) (!  (=> (and (and (and (and (and (and (and (= (type $generated@@952) $generated@@78) (= (type $generated@@953) $generated@@78)) (= (type $generated@@954) ($generated@@91 $generated@@92 $generated@@93))) (= (type $generated@@955) ($generated@@168 ($generated@@91 $generated@@92 $generated@@93) $generated@@166 $generated@@166))) (= (type $generated@@956) ($generated@@168 ($generated@@91 $generated@@92 $generated@@93) $generated@@166 $generated@@4))) (= (type $generated@@957) ($generated@@168 ($generated@@91 $generated@@92 $generated@@93) $generated@@166 ($generated@@91 $generated@@166 $generated@@4)))) (= (type $generated@@958) $generated@@166)) ($generated@@0 ($generated@@164 $generated@@956 $generated@@954 $generated@@958))) ($generated@@801 $generated@@952 $generated@@953 $generated@@954 ($generated@@754 $generated@@955 $generated@@956 $generated@@957) $generated@@958))
 :pattern ( ($generated@@801 $generated@@952 $generated@@953 $generated@@954 ($generated@@754 $generated@@955 $generated@@956 $generated@@957) $generated@@958))
)))
(assert (forall (($generated@@959 T@U) ) (!  (=> (= (type $generated@@959) $generated@@92) (<= 0 ($generated@@147 $generated@@959)))
 :no-pattern (type $generated@@959)
 :no-pattern ($generated $generated@@959)
 :no-pattern ($generated@@0 $generated@@959)
)))
(assert (forall (($generated@@960 T@U) ) (!  (=> (= (type $generated@@960) $generated@@92) (<= 0 ($generated@@156 $generated@@960)))
 :pattern ( ($generated@@156 $generated@@960))
)))
(assert (forall (($generated@@961 T@U) ) (!  (=> (= (type $generated@@961) $generated@@92) (<= 0 ($generated@@161 $generated@@961)))
 :pattern ( ($generated@@161 $generated@@961))
)))
(assert (forall (($generated@@962 T@U) ) (! (let (($generated@@963 ($generated@@94 (type $generated@@962))))
 (=> (= (type $generated@@962) ($generated@@91 $generated@@963 $generated@@2)) (<= 0 ($generated@@656 $generated@@962))))
 :pattern ( ($generated@@656 $generated@@962))
)))
(assert (forall (($generated@@964 T@U) ) (! (let (($generated@@965 ($generated@@583 (type $generated@@964))))
 (=> (= (type $generated@@964) ($generated@@582 $generated@@965)) (<= 0 ($generated@@581 $generated@@964))))
 :pattern ( ($generated@@581 $generated@@964))
)))
(assert (forall (($generated@@967 T@U) ) (! (= (type ($generated@@966 $generated@@967)) $generated@@78)
 :pattern ( ($generated@@966 $generated@@967))
)))
(assert (forall (($generated@@968 T@U) ($generated@@969 T@U) ) (!  (=> (and (= (type $generated@@968) $generated@@78) (= (type $generated@@969) $generated@@78)) (= ($generated@@966 ($generated@@872 $generated@@968 $generated@@969)) $generated@@968))
 :pattern ( ($generated@@872 $generated@@968 $generated@@969))
)))
(assert (forall (($generated@@971 T@U) ) (! (= (type ($generated@@970 $generated@@971)) $generated@@78)
 :pattern ( ($generated@@970 $generated@@971))
)))
(assert (forall (($generated@@972 T@U) ($generated@@973 T@U) ) (!  (=> (and (= (type $generated@@972) $generated@@78) (= (type $generated@@973) $generated@@78)) (= ($generated@@970 ($generated@@872 $generated@@972 $generated@@973)) $generated@@973))
 :pattern ( ($generated@@872 $generated@@972 $generated@@973))
)))
(assert (forall (($generated@@974 T@U) ($generated@@975 T@U) ) (!  (=> (and (= (type $generated@@974) $generated@@78) (= (type $generated@@975) $generated@@78)) (= ($generated@@87 ($generated@@872 $generated@@974 $generated@@975)) $generated@@58))
 :pattern ( ($generated@@872 $generated@@974 $generated@@975))
)))
(assert (forall (($generated@@977 T@U) ) (! (= (type ($generated@@976 $generated@@977)) $generated@@78)
 :pattern ( ($generated@@976 $generated@@977))
)))
(assert (forall (($generated@@978 T@U) ($generated@@979 T@U) ) (!  (=> (and (= (type $generated@@978) $generated@@78) (= (type $generated@@979) $generated@@78)) (= ($generated@@976 ($generated@@880 $generated@@978 $generated@@979)) $generated@@978))
 :pattern ( ($generated@@880 $generated@@978 $generated@@979))
)))
(assert (forall (($generated@@981 T@U) ) (! (= (type ($generated@@980 $generated@@981)) $generated@@78)
 :pattern ( ($generated@@980 $generated@@981))
)))
(assert (forall (($generated@@982 T@U) ($generated@@983 T@U) ) (!  (=> (and (= (type $generated@@982) $generated@@78) (= (type $generated@@983) $generated@@78)) (= ($generated@@980 ($generated@@880 $generated@@982 $generated@@983)) $generated@@983))
 :pattern ( ($generated@@880 $generated@@982 $generated@@983))
)))
(assert (forall (($generated@@984 T@U) ($generated@@985 T@U) ) (!  (=> (and (= (type $generated@@984) $generated@@78) (= (type $generated@@985) $generated@@78)) (= ($generated@@87 ($generated@@880 $generated@@984 $generated@@985)) $generated@@59))
 :pattern ( ($generated@@880 $generated@@984 $generated@@985))
)))
(assert (forall (($generated@@987 T@U) ) (! (= (type ($generated@@986 $generated@@987)) $generated@@78)
 :pattern ( ($generated@@986 $generated@@987))
)))
(assert (forall (($generated@@988 T@U) ($generated@@989 T@U) ) (!  (=> (and (= (type $generated@@988) $generated@@78) (= (type $generated@@989) $generated@@78)) (= ($generated@@986 ($generated@@493 $generated@@988 $generated@@989)) $generated@@988))
 :pattern ( ($generated@@493 $generated@@988 $generated@@989))
)))
(assert (forall (($generated@@991 T@U) ) (! (= (type ($generated@@990 $generated@@991)) $generated@@78)
 :pattern ( ($generated@@990 $generated@@991))
)))
(assert (forall (($generated@@992 T@U) ($generated@@993 T@U) ) (!  (=> (and (= (type $generated@@992) $generated@@78) (= (type $generated@@993) $generated@@78)) (= ($generated@@990 ($generated@@493 $generated@@992 $generated@@993)) $generated@@993))
 :pattern ( ($generated@@493 $generated@@992 $generated@@993))
)))
(assert (forall (($generated@@994 T@U) ($generated@@995 T@U) ) (!  (=> (and (= (type $generated@@994) $generated@@166) (= (type $generated@@995) $generated@@166)) (= ($generated@@574 ($generated@@503 $generated@@994 $generated@@995)) $generated@@69))
 :pattern ( ($generated@@503 $generated@@994 $generated@@995))
)))
(assert (forall (($generated@@997 T@U) ) (! (= (type ($generated@@996 $generated@@997)) $generated@@78)
 :pattern ( ($generated@@996 $generated@@997))
)))
(assert (forall (($generated@@998 T@U) ($generated@@999 T@U) ) (!  (=> (and (= (type $generated@@998) $generated@@78) (= (type $generated@@999) $generated@@78)) (= ($generated@@996 ($generated@@367 $generated@@998 $generated@@999)) $generated@@998))
 :pattern ( ($generated@@367 $generated@@998 $generated@@999))
)))
(assert (forall (($generated@@1001 T@U) ) (! (= (type ($generated@@1000 $generated@@1001)) $generated@@78)
 :pattern ( ($generated@@1000 $generated@@1001))
)))
(assert (forall (($generated@@1002 T@U) ($generated@@1003 T@U) ) (!  (=> (and (= (type $generated@@1002) $generated@@78) (= (type $generated@@1003) $generated@@78)) (= ($generated@@1000 ($generated@@367 $generated@@1002 $generated@@1003)) $generated@@1003))
 :pattern ( ($generated@@367 $generated@@1002 $generated@@1003))
)))
(assert (forall (($generated@@1004 T@U) ($generated@@1005 T@U) ) (!  (=> (and (= (type $generated@@1004) $generated@@166) (= (type $generated@@1005) $generated@@166)) (= ($generated@@375 ($generated@@503 $generated@@1004 $generated@@1005)) $generated@@1004))
 :pattern ( ($generated@@503 $generated@@1004 $generated@@1005))
)))
(assert (forall (($generated@@1006 T@U) ($generated@@1007 T@U) ) (!  (=> (and (= (type $generated@@1006) $generated@@166) (= (type $generated@@1007) $generated@@166)) (= ($generated@@376 ($generated@@503 $generated@@1006 $generated@@1007)) $generated@@1007))
 :pattern ( ($generated@@503 $generated@@1006 $generated@@1007))
)))
(assert (forall (($generated@@1008 T@U) ) (!  (=> (= (type $generated@@1008) $generated@@92) ($generated@@151 $generated@@1008 $generated@@323))
 :pattern ( ($generated@@151 $generated@@1008 $generated@@323))
)))
(assert  (and (forall (($generated@@1011 T@U) ) (! (= (type ($generated@@1009 $generated@@1011)) $generated@@78)
 :pattern ( ($generated@@1009 $generated@@1011))
)) (forall (($generated@@1012 T@U) ($generated@@1013 Int) ) (! (let (($generated@@1014 ($generated@@583 (type $generated@@1012))))
(= (type ($generated@@1010 $generated@@1012 $generated@@1013)) $generated@@1014))
 :pattern ( ($generated@@1010 $generated@@1012 $generated@@1013))
))))
(assert (forall (($generated@@1015 T@U) ($generated@@1016 T@U) ($generated@@1017 T@U) ) (!  (=> (and (and (= (type $generated@@1015) ($generated@@582 $generated@@166)) (= (type $generated@@1016) $generated@@78)) (= (type $generated@@1017) ($generated@@91 $generated@@92 $generated@@93))) (= ($generated@@89 $generated@@1015 ($generated@@1009 $generated@@1016) $generated@@1017) (forall (($generated@@1018 Int) ) (!  (=> (and (<= 0 $generated@@1018) (< $generated@@1018 ($generated@@581 $generated@@1015))) ($generated@@545 ($generated@@1010 $generated@@1015 $generated@@1018) $generated@@1016 $generated@@1017))
 :pattern ( ($generated@@1010 $generated@@1015 $generated@@1018))
))))
 :pattern ( ($generated@@89 $generated@@1015 ($generated@@1009 $generated@@1016) $generated@@1017))
)))
(assert (forall (($generated@@1020 Int) ) (! (= ($generated@@1019 ($generated@@90 $generated@@1020)) $generated@@1020)
 :pattern ( ($generated@@90 $generated@@1020))
)))
(assert (forall (($generated@@1022 T@U) ) (! (= (type ($generated@@1021 $generated@@1022)) $generated@@78)
 :pattern ( ($generated@@1021 $generated@@1022))
)))
(assert (forall (($generated@@1023 T@U) ) (!  (=> (= (type $generated@@1023) $generated@@78) (= ($generated@@1021 ($generated@@512 $generated@@1023)) $generated@@1023))
 :pattern ( ($generated@@512 $generated@@1023))
)))
(assert (forall (($generated@@1024 T@U) ) (!  (=> (= (type $generated@@1024) $generated@@78) (= ($generated@@87 ($generated@@512 $generated@@1024)) $generated@@54))
 :pattern ( ($generated@@512 $generated@@1024))
)))
(assert (forall (($generated@@1026 T@U) ) (! (= (type ($generated@@1025 $generated@@1026)) $generated@@78)
 :pattern ( ($generated@@1025 $generated@@1026))
)))
(assert (forall (($generated@@1027 T@U) ) (!  (=> (= (type $generated@@1027) $generated@@78) (= ($generated@@1025 ($generated@@517 $generated@@1027)) $generated@@1027))
 :pattern ( ($generated@@517 $generated@@1027))
)))
(assert (forall (($generated@@1028 T@U) ) (!  (=> (= (type $generated@@1028) $generated@@78) (= ($generated@@87 ($generated@@517 $generated@@1028)) $generated@@55))
 :pattern ( ($generated@@517 $generated@@1028))
)))
(assert (forall (($generated@@1030 T@U) ) (! (= (type ($generated@@1029 $generated@@1030)) $generated@@78)
 :pattern ( ($generated@@1029 $generated@@1030))
)))
(assert (forall (($generated@@1031 T@U) ) (!  (=> (= (type $generated@@1031) $generated@@78) (= ($generated@@1029 ($generated@@381 $generated@@1031)) $generated@@1031))
 :pattern ( ($generated@@381 $generated@@1031))
)))
(assert (forall (($generated@@1032 T@U) ) (!  (=> (= (type $generated@@1032) $generated@@78) (= ($generated@@87 ($generated@@381 $generated@@1032)) $generated@@56))
 :pattern ( ($generated@@381 $generated@@1032))
)))
(assert (forall (($generated@@1034 T@U) ) (! (= (type ($generated@@1033 $generated@@1034)) $generated@@78)
 :pattern ( ($generated@@1033 $generated@@1034))
)))
(assert (forall (($generated@@1035 T@U) ) (!  (=> (= (type $generated@@1035) $generated@@78) (= ($generated@@1033 ($generated@@1009 $generated@@1035)) $generated@@1035))
 :pattern ( ($generated@@1009 $generated@@1035))
)))
(assert (forall (($generated@@1036 T@U) ) (!  (=> (= (type $generated@@1036) $generated@@78) (= ($generated@@87 ($generated@@1009 $generated@@1036)) $generated@@57))
 :pattern ( ($generated@@1009 $generated@@1036))
)))
(assert (forall (($generated@@1037 Int) ) (! (= ($generated@@86 ($generated@@901 $generated@@1037)) 1)
 :pattern ( ($generated@@901 $generated@@1037))
)))
(assert (forall (($generated@@1039 Int) ) (! (= ($generated@@1038 ($generated@@901 $generated@@1039)) $generated@@1039)
 :pattern ( ($generated@@901 $generated@@1039))
)))
(assert (forall (($generated@@1041 T@U) ) (! (= (type ($generated@@1040 $generated@@1041)) $generated@@78)
 :pattern ( ($generated@@1040 $generated@@1041))
)))
(assert (forall (($generated@@1042 T@U) ) (!  (=> (= (type $generated@@1042) $generated@@78) (= ($generated@@1040 ($generated@@148 $generated@@1042)) $generated@@1042))
 :pattern ( ($generated@@148 $generated@@1042))
)))
(assert (forall (($generated@@1044 T@U) ) (! (= (type ($generated@@1043 $generated@@1044)) $generated@@78)
 :pattern ( ($generated@@1043 $generated@@1044))
)))
(assert (forall (($generated@@1045 T@U) ) (!  (=> (= (type $generated@@1045) $generated@@78) (= ($generated@@1043 ($generated@@356 $generated@@1045)) $generated@@1045))
 :pattern ( ($generated@@356 $generated@@1045))
)))
(assert (forall (($generated@@1047 T@U) ) (! (= (type ($generated@@1046 $generated@@1047)) $generated@@78)
 :pattern ( ($generated@@1046 $generated@@1047))
)))
(assert (forall (($generated@@1048 T@U) ) (!  (=> (= (type $generated@@1048) $generated@@78) (= ($generated@@1046 ($generated@@157 $generated@@1048)) $generated@@1048))
 :pattern ( ($generated@@157 $generated@@1048))
)))
(assert (forall (($generated@@1050 T@U) ) (! (= (type ($generated@@1049 $generated@@1050)) $generated@@78)
 :pattern ( ($generated@@1049 $generated@@1050))
)))
(assert (forall (($generated@@1051 T@U) ) (!  (=> (= (type $generated@@1051) $generated@@78) (= ($generated@@1049 ($generated@@361 $generated@@1051)) $generated@@1051))
 :pattern ( ($generated@@361 $generated@@1051))
)))
(assert (forall (($generated@@1052 T@U) ) (! (let (($generated@@1053 (type $generated@@1052)))
(= ($generated@@484 $generated@@1053 ($generated@@483 $generated@@1052)) $generated@@1052))
 :pattern ( ($generated@@483 $generated@@1052))
)))
(assert (forall (($generated@@1054 T@U) ($generated@@1055 T@U) ($generated@@1056 T@U) ) (!  (=> (and (and (= (type $generated@@1054) ($generated@@712 $generated@@166 $generated@@166)) (= (type $generated@@1055) $generated@@78)) (= (type $generated@@1056) $generated@@78)) (= ($generated@@151 $generated@@1054 ($generated@@872 $generated@@1055 $generated@@1056)) (forall (($generated@@1057 T@U) ) (!  (=> (and (= (type $generated@@1057) $generated@@166) ($generated@@0 ($generated@@96 ($generated@@710 $generated@@1054) $generated@@1057))) (and ($generated@@167 ($generated@@96 ($generated@@839 $generated@@1054) $generated@@1057) $generated@@1056) ($generated@@167 $generated@@1057 $generated@@1055)))
 :pattern ( ($generated@@96 ($generated@@839 $generated@@1054) $generated@@1057))
 :pattern ( ($generated@@96 ($generated@@710 $generated@@1054) $generated@@1057))
))))
 :pattern ( ($generated@@151 $generated@@1054 ($generated@@872 $generated@@1055 $generated@@1056)))
)))
(assert (forall (($generated@@1058 T@U) ($generated@@1059 T@U) ($generated@@1060 T@U) ) (!  (=> (and (and (= (type $generated@@1058) ($generated@@730 $generated@@166 $generated@@166)) (= (type $generated@@1059) $generated@@78)) (= (type $generated@@1060) $generated@@78)) (= ($generated@@151 $generated@@1058 ($generated@@880 $generated@@1059 $generated@@1060)) (forall (($generated@@1061 T@U) ) (!  (=> (and (= (type $generated@@1061) $generated@@166) ($generated@@0 ($generated@@96 ($generated@@728 $generated@@1058) $generated@@1061))) (and ($generated@@167 ($generated@@96 ($generated@@847 $generated@@1058) $generated@@1061) $generated@@1060) ($generated@@167 $generated@@1061 $generated@@1059)))
 :pattern ( ($generated@@96 ($generated@@847 $generated@@1058) $generated@@1061))
 :pattern ( ($generated@@96 ($generated@@728 $generated@@1058) $generated@@1061))
))))
 :pattern ( ($generated@@151 $generated@@1058 ($generated@@880 $generated@@1059 $generated@@1060)))
)))
(assert (forall (($generated@@1062 T@U) ($generated@@1063 T@U) ($generated@@1064 T@U) ($generated@@1065 T@U) ($generated@@1066 T@U) ($generated@@1067 T@U) ($generated@@1068 T@U) ) (!  (=> (and (and (and (and (and (and (and (= (type $generated@@1062) $generated@@78) (= (type $generated@@1063) $generated@@78)) (= (type $generated@@1064) $generated@@78)) (= (type $generated@@1065) ($generated@@91 $generated@@92 $generated@@93))) (= (type $generated@@1066) $generated@@485)) (= (type $generated@@1067) $generated@@166)) (= (type $generated@@1068) $generated@@166)) (and (and ($generated@@326 $generated@@1065) (and (and ($generated@@167 $generated@@1067 $generated@@1062) ($generated@@167 $generated@@1068 $generated@@1063)) ($generated@@151 $generated@@1066 ($generated@@336 $generated@@1062 $generated@@1063 $generated@@1064)))) ($generated@@530 ($generated@@544 $generated@@1062 $generated@@1063 $generated@@1064 $generated@@529 $generated@@1066 $generated@@1067 $generated@@1068) ($generated@@531 $generated@@166)))) (= ($generated@@546 $generated@@1062 $generated@@1063 $generated@@1064 $generated@@529 $generated@@1066 $generated@@1067 $generated@@1068) ($generated@@546 $generated@@1062 $generated@@1063 $generated@@1064 $generated@@1065 $generated@@1066 $generated@@1067 $generated@@1068)))
 :pattern ( ($generated@@546 $generated@@1062 $generated@@1063 $generated@@1064 $generated@@529 $generated@@1066 $generated@@1067 $generated@@1068) ($generated@@326 $generated@@1065))
 :pattern ( ($generated@@546 $generated@@1062 $generated@@1063 $generated@@1064 $generated@@1065 $generated@@1066 $generated@@1067 $generated@@1068))
)))
(assert (forall (($generated@@1070 T@U) ) (! (= (type ($generated@@1069 $generated@@1070)) ($generated@@235 ($generated@@91 $generated@@92 $generated@@93) $generated@@166 $generated@@166 $generated@@166))
 :pattern ( ($generated@@1069 $generated@@1070))
)))
(assert (forall (($generated@@1071 T@U) ($generated@@1072 T@U) ($generated@@1073 T@U) ($generated@@1074 T@U) ) (!  (=> (and (and (and (= (type $generated@@1071) $generated@@166) (= (type $generated@@1072) ($generated@@91 $generated@@92 $generated@@93))) (= (type $generated@@1073) $generated@@166)) (= (type $generated@@1074) $generated@@166)) (= ($generated@@233 ($generated@@1069 $generated@@1071) $generated@@1072 $generated@@1073 $generated@@1074) $generated@@1071))
 :pattern ( ($generated@@233 ($generated@@1069 $generated@@1071) $generated@@1072 $generated@@1073 $generated@@1074))
)))
(assert (forall (($generated@@1076 T@U) ) (! (= (type ($generated@@1075 $generated@@1076)) ($generated@@235 ($generated@@91 $generated@@92 $generated@@93) $generated@@166 $generated@@166 ($generated@@91 $generated@@166 $generated@@4)))
 :pattern ( ($generated@@1075 $generated@@1076))
)))
(assert (forall (($generated@@1077 T@U) ($generated@@1078 T@U) ($generated@@1079 T@U) ($generated@@1080 T@U) ) (!  (=> (and (and (and (= (type $generated@@1077) ($generated@@91 $generated@@166 $generated@@4)) (= (type $generated@@1078) ($generated@@91 $generated@@92 $generated@@93))) (= (type $generated@@1079) $generated@@166)) (= (type $generated@@1080) $generated@@166)) (= ($generated@@233 ($generated@@1075 $generated@@1077) $generated@@1078 $generated@@1079 $generated@@1080) $generated@@1077))
 :pattern ( ($generated@@233 ($generated@@1075 $generated@@1077) $generated@@1078 $generated@@1079 $generated@@1080))
)))
(assert (forall (($generated@@1081 T@U) ($generated@@1082 T@U) ($generated@@1083 T@U) ($generated@@1084 Int) ) (!  (=> (and (and (and (= (type $generated@@1081) $generated@@78) (= (type $generated@@1082) ($generated@@91 $generated@@92 $generated@@93))) (= (type $generated@@1083) $generated@@92)) (and (and ($generated@@326 $generated@@1082) (and (not (= $generated@@1083 $generated@@149)) (= ($generated@@150 $generated@@1083) ($generated@@148 $generated@@1081)))) (and (<= 0 $generated@@1084) (< $generated@@1084 ($generated@@147 $generated@@1083))))) ($generated@@167 ($generated@@98 ($generated@@96 $generated@@1082 $generated@@1083) ($generated@@901 $generated@@1084)) $generated@@1081))
 :pattern ( ($generated@@98 ($generated@@96 $generated@@1082 $generated@@1083) ($generated@@901 $generated@@1084)) ($generated@@148 $generated@@1081))
)))
(assert (forall (($generated@@1087 T@U) ($generated@@1088 T@U) ) (!  (=> (and (= (type $generated@@1087) $generated@@166) (= (type $generated@@1088) $generated@@166)) (< ($generated@@1085 $generated@@1087) ($generated@@1086 ($generated@@503 $generated@@1087 $generated@@1088))))
 :pattern ( ($generated@@503 $generated@@1087 $generated@@1088))
)))
(assert (forall (($generated@@1089 T@U) ($generated@@1090 T@U) ) (!  (=> (and (= (type $generated@@1089) $generated@@166) (= (type $generated@@1090) $generated@@166)) (< ($generated@@1085 $generated@@1090) ($generated@@1086 ($generated@@503 $generated@@1089 $generated@@1090))))
 :pattern ( ($generated@@503 $generated@@1089 $generated@@1090))
)))
(assert (forall (($generated@@1091 T@U) ($generated@@1092 T@U) ($generated@@1093 T@U) ($generated@@1094 T@U) ($generated@@1095 T@U) ($generated@@1096 T@U) ($generated@@1097 T@U) ) (!  (=> (and (and (and (and (and (and (and (= (type $generated@@1091) $generated@@485) (= (type $generated@@1092) $generated@@78)) (= (type $generated@@1093) $generated@@78)) (= (type $generated@@1094) $generated@@78)) (= (type $generated@@1095) $generated@@78)) (= (type $generated@@1096) $generated@@78)) (= (type $generated@@1097) $generated@@78)) (and (and (and ($generated@@151 $generated@@1091 ($generated@@336 $generated@@1092 $generated@@1093 $generated@@1094)) (forall (($generated@@1098 T@U) ) (!  (=> (and (= (type $generated@@1098) $generated@@166) ($generated@@167 $generated@@1098 $generated@@1095)) ($generated@@167 $generated@@1098 $generated@@1092))
 :pattern ( ($generated@@167 $generated@@1098 $generated@@1095))
 :pattern ( ($generated@@167 $generated@@1098 $generated@@1092))
))) (forall (($generated@@1099 T@U) ) (!  (=> (and (= (type $generated@@1099) $generated@@166) ($generated@@167 $generated@@1099 $generated@@1096)) ($generated@@167 $generated@@1099 $generated@@1093))
 :pattern ( ($generated@@167 $generated@@1099 $generated@@1096))
 :pattern ( ($generated@@167 $generated@@1099 $generated@@1093))
))) (forall (($generated@@1100 T@U) ) (!  (=> (and (= (type $generated@@1100) $generated@@166) ($generated@@167 $generated@@1100 $generated@@1094)) ($generated@@167 $generated@@1100 $generated@@1097))
 :pattern ( ($generated@@167 $generated@@1100 $generated@@1094))
 :pattern ( ($generated@@167 $generated@@1100 $generated@@1097))
)))) ($generated@@151 $generated@@1091 ($generated@@336 $generated@@1095 $generated@@1096 $generated@@1097)))
 :pattern ( ($generated@@151 $generated@@1091 ($generated@@336 $generated@@1092 $generated@@1093 $generated@@1094)) ($generated@@151 $generated@@1091 ($generated@@336 $generated@@1095 $generated@@1096 $generated@@1097)))
)))
(assert (forall (($generated@@1101 T@U) ($generated@@1102 T@U) ($generated@@1103 T@U) ($generated@@1104 Int) ($generated@@1105 Int) ) (!  (=> (and (and (= (type $generated@@1101) $generated@@78) (= (type $generated@@1102) ($generated@@91 $generated@@92 $generated@@93))) (= (type $generated@@1103) $generated@@92)) (=> (and (and (and ($generated@@326 $generated@@1102) (and (not (= $generated@@1103 $generated@@149)) (= ($generated@@150 $generated@@1103) ($generated@@157 $generated@@1101)))) (and (and (<= 0 $generated@@1104) (< $generated@@1104 ($generated@@156 $generated@@1103))) (and (<= 0 $generated@@1105) (< $generated@@1105 ($generated@@161 $generated@@1103))))) ($generated@@0 ($generated@@98 ($generated@@96 $generated@@1102 $generated@@1103) $generated@@60))) ($generated@@545 ($generated@@98 ($generated@@96 $generated@@1102 $generated@@1103) ($generated@@614 ($generated@@901 $generated@@1104) $generated@@1105)) $generated@@1101 $generated@@1102)))
 :pattern ( ($generated@@98 ($generated@@96 $generated@@1102 $generated@@1103) ($generated@@614 ($generated@@901 $generated@@1104) $generated@@1105)) ($generated@@157 $generated@@1101))
)))
(assert (forall (($generated@@1107 T@U) ) (! (= (type ($generated@@1106 $generated@@1107)) $generated@@620)
 :pattern ( ($generated@@1106 $generated@@1107))
)))
(assert (forall (($generated@@1108 T@U) ($generated@@1109 T@U) ) (! (let (($generated@@1110 ($generated@@95 (type $generated@@1108))))
 (=> (and (= (type $generated@@1108) ($generated@@91 $generated@@620 $generated@@1110)) (= (type $generated@@1109) $generated@@620)) (= ($generated@@619 $generated@@1108 ($generated@@1106 $generated@@1109)) ($generated@@619 $generated@@1108 $generated@@1109))))
 :pattern ( ($generated@@619 $generated@@1108 ($generated@@1106 $generated@@1109)))
)))
(assert (forall (($generated@@1111 T@U) ($generated@@1112 T@U) ($generated@@1113 T@U) ) (!  (=> (and (and (and (= (type $generated@@1111) $generated@@166) (= (type $generated@@1112) $generated@@78)) (= (type $generated@@1113) $generated@@78)) ($generated@@167 $generated@@1111 ($generated@@872 $generated@@1112 $generated@@1113))) (and (= ($generated@@483 ($generated@@484 ($generated@@712 $generated@@166 $generated@@166) $generated@@1111)) $generated@@1111) ($generated@@151 ($generated@@484 ($generated@@712 $generated@@166 $generated@@166) $generated@@1111) ($generated@@872 $generated@@1112 $generated@@1113))))
 :pattern ( ($generated@@167 $generated@@1111 ($generated@@872 $generated@@1112 $generated@@1113)))
)))
(assert (forall (($generated@@1114 T@U) ($generated@@1115 T@U) ($generated@@1116 T@U) ) (!  (=> (and (and (and (= (type $generated@@1114) $generated@@166) (= (type $generated@@1115) $generated@@78)) (= (type $generated@@1116) $generated@@78)) ($generated@@167 $generated@@1114 ($generated@@880 $generated@@1115 $generated@@1116))) (and (= ($generated@@483 ($generated@@484 ($generated@@730 $generated@@166 $generated@@166) $generated@@1114)) $generated@@1114) ($generated@@151 ($generated@@484 ($generated@@730 $generated@@166 $generated@@166) $generated@@1114) ($generated@@880 $generated@@1115 $generated@@1116))))
 :pattern ( ($generated@@167 $generated@@1114 ($generated@@880 $generated@@1115 $generated@@1116)))
)))
(assert (forall (($generated@@1117 T@U) ($generated@@1118 T@U) ($generated@@1119 T@U) ) (!  (=> (and (and (and (= (type $generated@@1117) $generated@@78) (= (type $generated@@1118) $generated@@78)) (= (type $generated@@1119) $generated@@166)) ($generated@@167 $generated@@1119 ($generated@@493 $generated@@1117 $generated@@1118))) (and (= ($generated@@483 ($generated@@484 $generated@@485 $generated@@1119)) $generated@@1119) ($generated@@151 ($generated@@484 $generated@@485 $generated@@1119) ($generated@@493 $generated@@1117 $generated@@1118))))
 :pattern ( ($generated@@167 $generated@@1119 ($generated@@493 $generated@@1117 $generated@@1118)))
)))
(assert (forall (($generated@@1120 T@U) ($generated@@1121 T@U) ($generated@@1122 T@U) ) (!  (=> (and (and (and (= (type $generated@@1120) $generated@@78) (= (type $generated@@1121) $generated@@78)) (= (type $generated@@1122) $generated@@166)) ($generated@@167 $generated@@1122 ($generated@@367 $generated@@1120 $generated@@1121))) (and (= ($generated@@483 ($generated@@484 $generated@@368 $generated@@1122)) $generated@@1122) ($generated@@151 ($generated@@484 $generated@@368 $generated@@1122) ($generated@@367 $generated@@1120 $generated@@1121))))
 :pattern ( ($generated@@167 $generated@@1122 ($generated@@367 $generated@@1120 $generated@@1121)))
)))
(assert (forall (($generated@@1123 T@U) ) (! (let (($generated@@1124 (type $generated@@1123)))
 (not ($generated@@0 ($generated@@96 ($generated@@531 $generated@@1124) $generated@@1123))))
 :pattern ( (let (($generated@@1124 (type $generated@@1123)))
($generated@@96 ($generated@@531 $generated@@1124) $generated@@1123)))
)))
(assert (forall (($generated@@1125 T@U) ) (! (let (($generated@@1126 (type $generated@@1125)))
 (not ($generated@@0 ($generated@@96 ($generated@@917 $generated@@1126) $generated@@1125))))
 :pattern ( (let (($generated@@1126 (type $generated@@1125)))
($generated@@96 ($generated@@917 $generated@@1126) $generated@@1125)))
)))
(assert (forall (($generated@@1128 Int) ($generated@@1129 Int) ) (! (= ($generated@@1127 $generated@@1128 $generated@@1129) (mod $generated@@1128 $generated@@1129))
 :pattern ( ($generated@@1127 $generated@@1128 $generated@@1129))
)))
(assert (forall (($generated@@1132 T@U) ) (! (let (($generated@@1133 ($generated@@81 (type $generated@@1132))))
(= (type ($generated@@1130 $generated@@1132)) ($generated@@80 $generated@@1133)))
 :pattern ( ($generated@@1130 $generated@@1132))
)))
(assert (forall (($generated@@1134 T@U) ($generated@@1135 Int) ) (!  (=> (= (type $generated@@1134) ($generated@@80 $generated@@166)) (and (= ($generated@@1130 ($generated@@614 $generated@@1134 $generated@@1135)) $generated@@1134) (= ($generated@@1131 ($generated@@614 $generated@@1134 $generated@@1135)) $generated@@1135)))
 :pattern ( ($generated@@614 $generated@@1134 $generated@@1135))
)))
(assert (forall (($generated@@1136 T@U) ($generated@@1137 T@U) ) (!  (=> (and (= (type $generated@@1136) $generated@@78) (= (type $generated@@1137) $generated@@78)) (and (= ($generated@@87 ($generated@@493 $generated@@1136 $generated@@1137)) $generated@@65) (= ($generated@@478 ($generated@@493 $generated@@1136 $generated@@1137)) $generated@@74)))
 :pattern ( ($generated@@493 $generated@@1136 $generated@@1137))
)))
(assert (forall (($generated@@1138 T@U) ($generated@@1139 T@U) ) (!  (=> (and (= (type $generated@@1138) $generated@@78) (= (type $generated@@1139) $generated@@78)) (and (= ($generated@@87 ($generated@@367 $generated@@1138 $generated@@1139)) $generated@@70) (= ($generated@@478 ($generated@@367 $generated@@1138 $generated@@1139)) $generated@@77)))
 :pattern ( ($generated@@367 $generated@@1138 $generated@@1139))
)))
(assert (forall (($generated@@1140 T@U) ($generated@@1141 T@U) ($generated@@1142 T@U) ($generated@@1143 T@U) ($generated@@1144 T@U) ) (!  (=> (and (and (and (and (and (= (type $generated@@1140) $generated@@78) (= (type $generated@@1141) $generated@@78)) (= (type $generated@@1142) ($generated@@91 $generated@@92 $generated@@93))) (= (type $generated@@1143) $generated@@485)) (= (type $generated@@1144) $generated@@166)) (and (and ($generated@@326 $generated@@1142) (and ($generated@@167 $generated@@1144 $generated@@1140) ($generated@@151 $generated@@1143 ($generated@@493 $generated@@1140 $generated@@1141)))) ($generated@@530 ($generated@@528 $generated@@1140 $generated@@1141 $generated@@529 $generated@@1143 $generated@@1144) ($generated@@531 $generated@@166)))) (= ($generated@@801 $generated@@1140 $generated@@1141 $generated@@529 $generated@@1143 $generated@@1144) ($generated@@801 $generated@@1140 $generated@@1141 $generated@@1142 $generated@@1143 $generated@@1144)))
 :pattern ( ($generated@@801 $generated@@1140 $generated@@1141 $generated@@529 $generated@@1143 $generated@@1144) ($generated@@326 $generated@@1142))
 :pattern ( ($generated@@801 $generated@@1140 $generated@@1141 $generated@@1142 $generated@@1143 $generated@@1144))
)))
(assert (forall (($generated@@1145 T@U) ) (!  (=> (= (type $generated@@1145) $generated@@368) (= ($generated@@1085 ($generated@@483 $generated@@1145)) ($generated@@1086 $generated@@1145)))
 :pattern ( ($generated@@1085 ($generated@@483 $generated@@1145)))
)))
(assert (forall (($generated@@1146 T@U) ) (!  (=> (and (= (type $generated@@1146) $generated@@166) ($generated@@167 $generated@@1146 ($generated@@90 0))) (and (= ($generated@@483 ($generated@@484 $generated@@2 $generated@@1146)) $generated@@1146) ($generated@@151 ($generated@@484 ($generated@@91 $generated@@166 $generated@@4) $generated@@1146) ($generated@@90 0))))
 :pattern ( ($generated@@167 $generated@@1146 ($generated@@90 0)))
)))
(assert (forall (($generated@@1147 T@U) ($generated@@1148 T@U) ) (!  (=> (and (and (= (type $generated@@1147) $generated@@166) (= (type $generated@@1148) $generated@@78)) ($generated@@167 $generated@@1147 ($generated@@512 $generated@@1148))) (and (= ($generated@@483 ($generated@@484 ($generated@@91 $generated@@166 $generated@@4) $generated@@1147)) $generated@@1147) ($generated@@151 ($generated@@484 ($generated@@91 $generated@@166 $generated@@4) $generated@@1147) ($generated@@512 $generated@@1148))))
 :pattern ( ($generated@@167 $generated@@1147 ($generated@@512 $generated@@1148)))
)))
(assert (forall (($generated@@1149 T@U) ($generated@@1150 T@U) ) (!  (=> (and (and (= (type $generated@@1149) $generated@@166) (= (type $generated@@1150) $generated@@78)) ($generated@@167 $generated@@1149 ($generated@@517 $generated@@1150))) (and (= ($generated@@483 ($generated@@484 ($generated@@91 $generated@@166 $generated@@4) $generated@@1149)) $generated@@1149) ($generated@@151 ($generated@@484 ($generated@@91 $generated@@166 $generated@@4) $generated@@1149) ($generated@@517 $generated@@1150))))
 :pattern ( ($generated@@167 $generated@@1149 ($generated@@517 $generated@@1150)))
)))
(assert (forall (($generated@@1151 T@U) ($generated@@1152 T@U) ) (!  (=> (and (and (= (type $generated@@1151) $generated@@166) (= (type $generated@@1152) $generated@@78)) ($generated@@167 $generated@@1151 ($generated@@381 $generated@@1152))) (and (= ($generated@@483 ($generated@@484 ($generated@@91 $generated@@166 $generated@@2) $generated@@1151)) $generated@@1151) ($generated@@151 ($generated@@484 ($generated@@91 $generated@@166 $generated@@2) $generated@@1151) ($generated@@381 $generated@@1152))))
 :pattern ( ($generated@@167 $generated@@1151 ($generated@@381 $generated@@1152)))
)))
(assert (forall (($generated@@1153 T@U) ($generated@@1154 T@U) ) (!  (=> (and (and (= (type $generated@@1153) $generated@@166) (= (type $generated@@1154) $generated@@78)) ($generated@@167 $generated@@1153 ($generated@@1009 $generated@@1154))) (and (= ($generated@@483 ($generated@@484 ($generated@@582 $generated@@166) $generated@@1153)) $generated@@1153) ($generated@@151 ($generated@@484 ($generated@@582 $generated@@166) $generated@@1153) ($generated@@1009 $generated@@1154))))
 :pattern ( ($generated@@167 $generated@@1153 ($generated@@1009 $generated@@1154)))
)))
(assert (forall (($generated@@1155 T@U) ($generated@@1156 T@U) ) (!  (=> (and (and (= (type $generated@@1155) $generated@@78) (= (type $generated@@1156) $generated@@166)) ($generated@@167 $generated@@1156 ($generated@@148 $generated@@1155))) (and (= ($generated@@483 ($generated@@484 $generated@@92 $generated@@1156)) $generated@@1156) ($generated@@151 ($generated@@484 $generated@@92 $generated@@1156) ($generated@@148 $generated@@1155))))
 :pattern ( ($generated@@167 $generated@@1156 ($generated@@148 $generated@@1155)))
)))
(assert (forall (($generated@@1157 T@U) ($generated@@1158 T@U) ) (!  (=> (and (and (= (type $generated@@1157) $generated@@78) (= (type $generated@@1158) $generated@@166)) ($generated@@167 $generated@@1158 ($generated@@356 $generated@@1157))) (and (= ($generated@@483 ($generated@@484 $generated@@92 $generated@@1158)) $generated@@1158) ($generated@@151 ($generated@@484 $generated@@92 $generated@@1158) ($generated@@356 $generated@@1157))))
 :pattern ( ($generated@@167 $generated@@1158 ($generated@@356 $generated@@1157)))
)))
(assert (forall (($generated@@1159 T@U) ($generated@@1160 T@U) ) (!  (=> (and (and (= (type $generated@@1159) $generated@@78) (= (type $generated@@1160) $generated@@166)) ($generated@@167 $generated@@1160 ($generated@@157 $generated@@1159))) (and (= ($generated@@483 ($generated@@484 $generated@@92 $generated@@1160)) $generated@@1160) ($generated@@151 ($generated@@484 $generated@@92 $generated@@1160) ($generated@@157 $generated@@1159))))
 :pattern ( ($generated@@167 $generated@@1160 ($generated@@157 $generated@@1159)))
)))
(assert (forall (($generated@@1161 T@U) ($generated@@1162 T@U) ) (!  (=> (and (and (= (type $generated@@1161) $generated@@78) (= (type $generated@@1162) $generated@@166)) ($generated@@167 $generated@@1162 ($generated@@361 $generated@@1161))) (and (= ($generated@@483 ($generated@@484 $generated@@92 $generated@@1162)) $generated@@1162) ($generated@@151 ($generated@@484 $generated@@92 $generated@@1162) ($generated@@361 $generated@@1161))))
 :pattern ( ($generated@@167 $generated@@1162 ($generated@@361 $generated@@1161)))
)))
(assert (forall (($generated@@1163 T@U) ($generated@@1164 T@U) ($generated@@1165 T@U) ($generated@@1166 T@U) ) (! (let (($generated@@1167 (type $generated@@1166)))
 (=> (and (and (and (= (type $generated@@1163) ($generated@@91 $generated@@92 $generated@@93)) (= (type $generated@@1164) $generated@@92)) (= (type $generated@@1165) ($generated@@80 $generated@@1167))) ($generated@@326 ($generated@@97 $generated@@1163 $generated@@1164 ($generated@@99 ($generated@@96 $generated@@1163 $generated@@1164) $generated@@1165 $generated@@1166)))) ($generated@@223 $generated@@1163 ($generated@@97 $generated@@1163 $generated@@1164 ($generated@@99 ($generated@@96 $generated@@1163 $generated@@1164) $generated@@1165 $generated@@1166)))))
 :pattern ( ($generated@@97 $generated@@1163 $generated@@1164 ($generated@@99 ($generated@@96 $generated@@1163 $generated@@1164) $generated@@1165 $generated@@1166)))
)))
(assert (= ($generated@@87 $generated@@320) $generated@@61))
(assert (= ($generated@@478 $generated@@320) $generated@@71))
(assert (= ($generated@@87 $generated@@323) $generated@@62))
(assert (= ($generated@@478 $generated@@323) $generated@@72))
(assert (forall (($generated@@1168 T@U) ($generated@@1169 T@U) ($generated@@1170 T@U) ) (!  (=> (and (and (= (type $generated@@1168) ($generated@@91 $generated@@166 $generated@@2)) (= (type $generated@@1169) $generated@@78)) (= (type $generated@@1170) ($generated@@91 $generated@@92 $generated@@93))) (= ($generated@@89 $generated@@1168 ($generated@@381 $generated@@1169) $generated@@1170) (forall (($generated@@1171 T@U) ) (!  (=> (and (= (type $generated@@1171) $generated@@166) (< 0 ($generated ($generated@@96 $generated@@1168 $generated@@1171)))) ($generated@@545 $generated@@1171 $generated@@1169 $generated@@1170))
 :pattern ( ($generated@@96 $generated@@1168 $generated@@1171))
))))
 :pattern ( ($generated@@89 $generated@@1168 ($generated@@381 $generated@@1169) $generated@@1170))
)))
(assert (forall (($generated@@1172 T@U) ($generated@@1173 T@U) ($generated@@1174 T@U) ($generated@@1175 T@U) ($generated@@1176 T@U) ($generated@@1177 T@U) ($generated@@1178 T@U) ($generated@@1179 T@U) ($generated@@1180 T@U) ($generated@@1181 T@U) ) (!  (=> (and (and (and (and (and (and (and (and (and (= (type $generated@@1172) $generated@@78) (= (type $generated@@1173) $generated@@78)) (= (type $generated@@1174) $generated@@78)) (= (type $generated@@1175) ($generated@@91 $generated@@92 $generated@@93))) (= (type $generated@@1176) ($generated@@235 ($generated@@91 $generated@@92 $generated@@93) $generated@@166 $generated@@166 $generated@@166))) (= (type $generated@@1177) ($generated@@235 ($generated@@91 $generated@@92 $generated@@93) $generated@@166 $generated@@166 $generated@@4))) (= (type $generated@@1178) ($generated@@235 ($generated@@91 $generated@@92 $generated@@93) $generated@@166 $generated@@166 ($generated@@91 $generated@@166 $generated@@4)))) (= (type $generated@@1179) $generated@@166)) (= (type $generated@@1180) $generated@@166)) (= (type $generated@@1181) $generated@@166)) (= ($generated@@0 ($generated@@96 ($generated@@544 $generated@@1172 $generated@@1173 $generated@@1174 $generated@@1175 ($generated@@635 $generated@@1176 $generated@@1177 $generated@@1178) $generated@@1179 $generated@@1180) $generated@@1181)) ($generated@@0 ($generated@@96 ($generated@@233 $generated@@1178 $generated@@1175 $generated@@1179 $generated@@1180) $generated@@1181))))
 :pattern ( ($generated@@96 ($generated@@544 $generated@@1172 $generated@@1173 $generated@@1174 $generated@@1175 ($generated@@635 $generated@@1176 $generated@@1177 $generated@@1178) $generated@@1179 $generated@@1180) $generated@@1181))
)))
(assert (forall (($generated@@1182 T@U) ) (!  (=> (= (type $generated@@1182) ($generated@@91 $generated@@92 $generated@@4)) ($generated@@151 ($generated@@588 $generated@@1182) ($generated@@512 $generated@@323)))
 :pattern ( ($generated@@588 $generated@@1182))
)))
(assert (forall (($generated@@1183 T@U) ($generated@@1184 T@U) ($generated@@1185 T@U) ($generated@@1186 T@U) ($generated@@1187 T@U) ($generated@@1188 T@U) ) (!  (=> (and (and (and (and (and (and (= (type $generated@@1183) $generated@@78) (= (type $generated@@1184) $generated@@78)) (= (type $generated@@1185) ($generated@@91 $generated@@92 $generated@@93))) (= (type $generated@@1186) ($generated@@91 $generated@@92 $generated@@93))) (= (type $generated@@1187) $generated@@485)) (= (type $generated@@1188) $generated@@166)) (and (and (and ($generated@@223 $generated@@1185 $generated@@1186) (and ($generated@@326 $generated@@1185) ($generated@@326 $generated@@1186))) (and ($generated@@167 $generated@@1188 $generated@@1183) ($generated@@151 $generated@@1187 ($generated@@493 $generated@@1183 $generated@@1184)))) (forall (($generated@@1189 T@U) ($generated@@1190 T@U) ) (! (let (($generated@@1191 ($generated@@81 (type $generated@@1190))))
 (=> (and (and (= (type $generated@@1189) $generated@@92) (= (type $generated@@1190) ($generated@@80 $generated@@1191))) (and (not (= $generated@@1189 $generated@@149)) ($generated@@0 ($generated@@96 ($generated@@528 $generated@@1183 $generated@@1184 $generated@@1185 $generated@@1187 $generated@@1188) ($generated@@483 $generated@@1189))))) (= ($generated@@98 ($generated@@96 $generated@@1185 $generated@@1189) $generated@@1190) ($generated@@98 ($generated@@96 $generated@@1186 $generated@@1189) $generated@@1190))))
 :no-pattern (type $generated@@1189)
 :no-pattern (type $generated@@1190)
 :no-pattern ($generated $generated@@1189)
 :no-pattern ($generated@@0 $generated@@1189)
 :no-pattern ($generated $generated@@1190)
 :no-pattern ($generated@@0 $generated@@1190)
)))) (= ($generated@@801 $generated@@1183 $generated@@1184 $generated@@1185 $generated@@1187 $generated@@1188) ($generated@@801 $generated@@1183 $generated@@1184 $generated@@1186 $generated@@1187 $generated@@1188)))
 :pattern ( ($generated@@223 $generated@@1185 $generated@@1186) ($generated@@801 $generated@@1183 $generated@@1184 $generated@@1186 $generated@@1187 $generated@@1188))
)))
(assert (forall (($generated@@1192 T@U) ($generated@@1193 T@U) ($generated@@1194 T@U) ($generated@@1195 T@U) ($generated@@1196 T@U) ($generated@@1197 T@U) ) (!  (=> (and (and (and (and (and (and (= (type $generated@@1192) $generated@@78) (= (type $generated@@1193) $generated@@78)) (= (type $generated@@1194) ($generated@@91 $generated@@92 $generated@@93))) (= (type $generated@@1195) ($generated@@91 $generated@@92 $generated@@93))) (= (type $generated@@1196) $generated@@485)) (= (type $generated@@1197) $generated@@166)) (and (and (and ($generated@@223 $generated@@1194 $generated@@1195) (and ($generated@@326 $generated@@1194) ($generated@@326 $generated@@1195))) (and ($generated@@167 $generated@@1197 $generated@@1192) ($generated@@151 $generated@@1196 ($generated@@493 $generated@@1192 $generated@@1193)))) (forall (($generated@@1198 T@U) ($generated@@1199 T@U) ) (! (let (($generated@@1200 ($generated@@81 (type $generated@@1199))))
 (=> (and (and (= (type $generated@@1198) $generated@@92) (= (type $generated@@1199) ($generated@@80 $generated@@1200))) (and (not (= $generated@@1198 $generated@@149)) ($generated@@0 ($generated@@96 ($generated@@528 $generated@@1192 $generated@@1193 $generated@@1195 $generated@@1196 $generated@@1197) ($generated@@483 $generated@@1198))))) (= ($generated@@98 ($generated@@96 $generated@@1194 $generated@@1198) $generated@@1199) ($generated@@98 ($generated@@96 $generated@@1195 $generated@@1198) $generated@@1199))))
 :no-pattern (type $generated@@1198)
 :no-pattern (type $generated@@1199)
 :no-pattern ($generated $generated@@1198)
 :no-pattern ($generated@@0 $generated@@1198)
 :no-pattern ($generated $generated@@1199)
 :no-pattern ($generated@@0 $generated@@1199)
)))) (= ($generated@@801 $generated@@1192 $generated@@1193 $generated@@1194 $generated@@1196 $generated@@1197) ($generated@@801 $generated@@1192 $generated@@1193 $generated@@1195 $generated@@1196 $generated@@1197)))
 :pattern ( ($generated@@223 $generated@@1194 $generated@@1195) ($generated@@801 $generated@@1192 $generated@@1193 $generated@@1195 $generated@@1196 $generated@@1197))
)))
(assert (forall (($generated@@1201 T@U) ($generated@@1202 T@U) ($generated@@1203 T@U) ) (!  (=> (and (and (and (= (type $generated@@1201) $generated@@368) (= (type $generated@@1202) $generated@@78)) (= (type $generated@@1203) ($generated@@91 $generated@@92 $generated@@93))) (and ($generated@@326 $generated@@1203) (and ($generated@@366 $generated@@1201) (exists (($generated@@1204 T@U) ) (!  (and (= (type $generated@@1204) $generated@@78) ($generated@@89 $generated@@1201 ($generated@@367 $generated@@1202 $generated@@1204) $generated@@1203))
 :pattern ( ($generated@@89 $generated@@1201 ($generated@@367 $generated@@1202 $generated@@1204) $generated@@1203))
))))) ($generated@@545 ($generated@@375 $generated@@1201) $generated@@1202 $generated@@1203))
 :pattern ( ($generated@@545 ($generated@@375 $generated@@1201) $generated@@1202 $generated@@1203))
)))
(assert (forall (($generated@@1205 T@U) ($generated@@1206 T@U) ($generated@@1207 T@U) ) (!  (=> (and (and (and (= (type $generated@@1205) $generated@@368) (= (type $generated@@1206) $generated@@78)) (= (type $generated@@1207) ($generated@@91 $generated@@92 $generated@@93))) (and ($generated@@326 $generated@@1207) (and ($generated@@366 $generated@@1205) (exists (($generated@@1208 T@U) ) (!  (and (= (type $generated@@1208) $generated@@78) ($generated@@89 $generated@@1205 ($generated@@367 $generated@@1208 $generated@@1206) $generated@@1207))
 :pattern ( ($generated@@89 $generated@@1205 ($generated@@367 $generated@@1208 $generated@@1206) $generated@@1207))
))))) ($generated@@545 ($generated@@376 $generated@@1205) $generated@@1206 $generated@@1207))
 :pattern ( ($generated@@545 ($generated@@376 $generated@@1205) $generated@@1206 $generated@@1207))
)))
(assert (forall (($generated@@1209 T@U) ($generated@@1210 T@U) ) (!  (=> (and (= (type $generated@@1209) $generated@@166) (= (type $generated@@1210) $generated@@166)) (= ($generated@@503 ($generated@@524 $generated@@1209) ($generated@@524 $generated@@1210)) ($generated@@524 ($generated@@503 $generated@@1209 $generated@@1210))))
 :pattern ( ($generated@@503 ($generated@@524 $generated@@1209) ($generated@@524 $generated@@1210)))
)))
(assert (forall (($generated@@1211 Int) ) (! (= ($generated@@483 ($generated@@8 ($generated@@522 $generated@@1211))) ($generated@@524 ($generated@@483 ($generated@@8 $generated@@1211))))
 :pattern ( ($generated@@483 ($generated@@8 ($generated@@522 $generated@@1211))))
)))
(assert (forall (($generated@@1212 T@U) ) (! (= ($generated@@483 ($generated@@524 $generated@@1212)) ($generated@@524 ($generated@@483 $generated@@1212)))
 :pattern ( ($generated@@483 ($generated@@524 $generated@@1212)))
)))
(assert (forall (($generated@@1213 T@U) ($generated@@1214 T@U) ($generated@@1215 T@U) ($generated@@1216 T@U) ($generated@@1217 T@U) ($generated@@1218 T@U) ($generated@@1219 T@U) ($generated@@1220 T@U) ($generated@@1221 T@U) ) (!  (=> (and (and (and (and (and (and (and (and (and (= (type $generated@@1213) $generated@@78) (= (type $generated@@1214) $generated@@78)) (= (type $generated@@1215) $generated@@78)) (= (type $generated@@1216) ($generated@@91 $generated@@92 $generated@@93))) (= (type $generated@@1217) ($generated@@235 ($generated@@91 $generated@@92 $generated@@93) $generated@@166 $generated@@166 $generated@@166))) (= (type $generated@@1218) ($generated@@235 ($generated@@91 $generated@@92 $generated@@93) $generated@@166 $generated@@166 $generated@@4))) (= (type $generated@@1219) ($generated@@235 ($generated@@91 $generated@@92 $generated@@93) $generated@@166 $generated@@166 ($generated@@91 $generated@@166 $generated@@4)))) (= (type $generated@@1220) $generated@@166)) (= (type $generated@@1221) $generated@@166)) ($generated@@0 ($generated@@233 $generated@@1218 $generated@@1216 $generated@@1220 $generated@@1221))) ($generated@@546 $generated@@1213 $generated@@1214 $generated@@1215 $generated@@1216 ($generated@@635 $generated@@1217 $generated@@1218 $generated@@1219) $generated@@1220 $generated@@1221))
 :pattern ( ($generated@@546 $generated@@1213 $generated@@1214 $generated@@1215 $generated@@1216 ($generated@@635 $generated@@1217 $generated@@1218 $generated@@1219) $generated@@1220 $generated@@1221))
)))
(assert (forall (($generated@@1222 T@U) ) (! (let (($generated@@1223 ($generated@@583 (type $generated@@1222))))
 (=> (and (= (type $generated@@1222) ($generated@@582 $generated@@1223)) (= ($generated@@581 $generated@@1222) 0)) (= $generated@@1222 ($generated@@580 $generated@@1223))))
 :pattern ( ($generated@@581 $generated@@1222))
)))
(assert (forall (($generated@@1224 T@U) ($generated@@1225 T@U) ($generated@@1226 T@U) ) (! (let (($generated@@1227 (type $generated@@1225)))
 (=> (and (and (= (type $generated@@1224) ($generated@@91 $generated@@1227 $generated@@2)) (= (type $generated@@1226) $generated@@2)) (<= 0 ($generated $generated@@1226))) (= ($generated@@656 ($generated@@97 $generated@@1224 $generated@@1225 $generated@@1226)) (+ (- ($generated@@656 $generated@@1224) ($generated ($generated@@96 $generated@@1224 $generated@@1225))) ($generated $generated@@1226)))))
 :pattern ( ($generated@@656 ($generated@@97 $generated@@1224 $generated@@1225 $generated@@1226)))
)))
(assert (forall (($generated@@1228 T@U) ($generated@@1229 T@U) ($generated@@1230 T@U) ($generated@@1231 T@U) ($generated@@1232 T@U) ($generated@@1233 T@U) ) (!  (=> (and (and (and (and (and (and (= (type $generated@@1228) $generated@@78) (= (type $generated@@1229) $generated@@78)) (= (type $generated@@1230) ($generated@@91 $generated@@92 $generated@@93))) (= (type $generated@@1231) ($generated@@91 $generated@@92 $generated@@93))) (= (type $generated@@1232) $generated@@485)) (= (type $generated@@1233) $generated@@166)) (and (and (and ($generated@@223 $generated@@1230 $generated@@1231) (and ($generated@@326 $generated@@1230) ($generated@@326 $generated@@1231))) (and ($generated@@167 $generated@@1233 $generated@@1228) ($generated@@151 $generated@@1232 ($generated@@493 $generated@@1228 $generated@@1229)))) (forall (($generated@@1234 T@U) ($generated@@1235 T@U) ) (! (let (($generated@@1236 ($generated@@81 (type $generated@@1235))))
 (=> (and (and (= (type $generated@@1234) $generated@@92) (= (type $generated@@1235) ($generated@@80 $generated@@1236))) (and (not (= $generated@@1234 $generated@@149)) ($generated@@0 ($generated@@96 ($generated@@528 $generated@@1228 $generated@@1229 $generated@@1230 $generated@@1232 $generated@@1233) ($generated@@483 $generated@@1234))))) (= ($generated@@98 ($generated@@96 $generated@@1230 $generated@@1234) $generated@@1235) ($generated@@98 ($generated@@96 $generated@@1231 $generated@@1234) $generated@@1235))))
 :no-pattern (type $generated@@1234)
 :no-pattern (type $generated@@1235)
 :no-pattern ($generated $generated@@1234)
 :no-pattern ($generated@@0 $generated@@1234)
 :no-pattern ($generated $generated@@1235)
 :no-pattern ($generated@@0 $generated@@1235)
)))) (= ($generated@@528 $generated@@1228 $generated@@1229 $generated@@1230 $generated@@1232 $generated@@1233) ($generated@@528 $generated@@1228 $generated@@1229 $generated@@1231 $generated@@1232 $generated@@1233)))
 :pattern ( ($generated@@223 $generated@@1230 $generated@@1231) ($generated@@528 $generated@@1228 $generated@@1229 $generated@@1231 $generated@@1232 $generated@@1233))
)))
(assert (forall (($generated@@1237 T@U) ($generated@@1238 T@U) ($generated@@1239 T@U) ($generated@@1240 T@U) ($generated@@1241 T@U) ($generated@@1242 T@U) ) (!  (=> (and (and (and (and (and (and (= (type $generated@@1237) $generated@@78) (= (type $generated@@1238) $generated@@78)) (= (type $generated@@1239) ($generated@@91 $generated@@92 $generated@@93))) (= (type $generated@@1240) ($generated@@91 $generated@@92 $generated@@93))) (= (type $generated@@1241) $generated@@485)) (= (type $generated@@1242) $generated@@166)) (and (and (and ($generated@@223 $generated@@1239 $generated@@1240) (and ($generated@@326 $generated@@1239) ($generated@@326 $generated@@1240))) (and ($generated@@167 $generated@@1242 $generated@@1237) ($generated@@151 $generated@@1241 ($generated@@493 $generated@@1237 $generated@@1238)))) (forall (($generated@@1243 T@U) ($generated@@1244 T@U) ) (! (let (($generated@@1245 ($generated@@81 (type $generated@@1244))))
 (=> (and (and (= (type $generated@@1243) $generated@@92) (= (type $generated@@1244) ($generated@@80 $generated@@1245))) (and (not (= $generated@@1243 $generated@@149)) ($generated@@0 ($generated@@96 ($generated@@528 $generated@@1237 $generated@@1238 $generated@@1240 $generated@@1241 $generated@@1242) ($generated@@483 $generated@@1243))))) (= ($generated@@98 ($generated@@96 $generated@@1239 $generated@@1243) $generated@@1244) ($generated@@98 ($generated@@96 $generated@@1240 $generated@@1243) $generated@@1244))))
 :no-pattern (type $generated@@1243)
 :no-pattern (type $generated@@1244)
 :no-pattern ($generated $generated@@1243)
 :no-pattern ($generated@@0 $generated@@1243)
 :no-pattern ($generated $generated@@1244)
 :no-pattern ($generated@@0 $generated@@1244)
)))) (= ($generated@@528 $generated@@1237 $generated@@1238 $generated@@1239 $generated@@1241 $generated@@1242) ($generated@@528 $generated@@1237 $generated@@1238 $generated@@1240 $generated@@1241 $generated@@1242)))
 :pattern ( ($generated@@223 $generated@@1239 $generated@@1240) ($generated@@528 $generated@@1237 $generated@@1238 $generated@@1240 $generated@@1241 $generated@@1242))
)))
(assert (forall (($generated@@1246 T@U) ($generated@@1247 T@U) ($generated@@1248 T@U) ($generated@@1249 T@U) ($generated@@1250 T@U) ($generated@@1251 T@U) ) (!  (=> (and (and (and (and (and (and (= (type $generated@@1246) $generated@@78) (= (type $generated@@1247) $generated@@78)) (= (type $generated@@1248) ($generated@@91 $generated@@92 $generated@@93))) (= (type $generated@@1249) ($generated@@91 $generated@@92 $generated@@93))) (= (type $generated@@1250) $generated@@485)) (= (type $generated@@1251) $generated@@166)) (and (and (and ($generated@@223 $generated@@1248 $generated@@1249) (and ($generated@@326 $generated@@1248) ($generated@@326 $generated@@1249))) (and ($generated@@167 $generated@@1251 $generated@@1246) ($generated@@151 $generated@@1250 ($generated@@493 $generated@@1246 $generated@@1247)))) (forall (($generated@@1252 T@U) ($generated@@1253 T@U) ) (! (let (($generated@@1254 ($generated@@81 (type $generated@@1253))))
 (=> (and (and (= (type $generated@@1252) $generated@@92) (= (type $generated@@1253) ($generated@@80 $generated@@1254))) (and (not (= $generated@@1252 $generated@@149)) ($generated@@0 ($generated@@96 ($generated@@528 $generated@@1246 $generated@@1247 $generated@@1248 $generated@@1250 $generated@@1251) ($generated@@483 $generated@@1252))))) (= ($generated@@98 ($generated@@96 $generated@@1248 $generated@@1252) $generated@@1253) ($generated@@98 ($generated@@96 $generated@@1249 $generated@@1252) $generated@@1253))))
 :no-pattern (type $generated@@1252)
 :no-pattern (type $generated@@1253)
 :no-pattern ($generated $generated@@1252)
 :no-pattern ($generated@@0 $generated@@1252)
 :no-pattern ($generated $generated@@1253)
 :no-pattern ($generated@@0 $generated@@1253)
)))) (= ($generated@@753 $generated@@1246 $generated@@1247 $generated@@1248 $generated@@1250 $generated@@1251) ($generated@@753 $generated@@1246 $generated@@1247 $generated@@1249 $generated@@1250 $generated@@1251)))
 :pattern ( ($generated@@223 $generated@@1248 $generated@@1249) ($generated@@753 $generated@@1246 $generated@@1247 $generated@@1249 $generated@@1250 $generated@@1251))
)))
(assert (forall (($generated@@1255 T@U) ($generated@@1256 T@U) ($generated@@1257 T@U) ($generated@@1258 T@U) ($generated@@1259 T@U) ($generated@@1260 T@U) ) (!  (=> (and (and (and (and (and (and (= (type $generated@@1255) $generated@@78) (= (type $generated@@1256) $generated@@78)) (= (type $generated@@1257) ($generated@@91 $generated@@92 $generated@@93))) (= (type $generated@@1258) ($generated@@91 $generated@@92 $generated@@93))) (= (type $generated@@1259) $generated@@485)) (= (type $generated@@1260) $generated@@166)) (and (and (and ($generated@@223 $generated@@1257 $generated@@1258) (and ($generated@@326 $generated@@1257) ($generated@@326 $generated@@1258))) (and ($generated@@167 $generated@@1260 $generated@@1255) ($generated@@151 $generated@@1259 ($generated@@493 $generated@@1255 $generated@@1256)))) (forall (($generated@@1261 T@U) ($generated@@1262 T@U) ) (! (let (($generated@@1263 ($generated@@81 (type $generated@@1262))))
 (=> (and (and (= (type $generated@@1261) $generated@@92) (= (type $generated@@1262) ($generated@@80 $generated@@1263))) (and (not (= $generated@@1261 $generated@@149)) ($generated@@0 ($generated@@96 ($generated@@528 $generated@@1255 $generated@@1256 $generated@@1258 $generated@@1259 $generated@@1260) ($generated@@483 $generated@@1261))))) (= ($generated@@98 ($generated@@96 $generated@@1257 $generated@@1261) $generated@@1262) ($generated@@98 ($generated@@96 $generated@@1258 $generated@@1261) $generated@@1262))))
 :no-pattern (type $generated@@1261)
 :no-pattern (type $generated@@1262)
 :no-pattern ($generated $generated@@1261)
 :no-pattern ($generated@@0 $generated@@1261)
 :no-pattern ($generated $generated@@1262)
 :no-pattern ($generated@@0 $generated@@1262)
)))) (= ($generated@@753 $generated@@1255 $generated@@1256 $generated@@1257 $generated@@1259 $generated@@1260) ($generated@@753 $generated@@1255 $generated@@1256 $generated@@1258 $generated@@1259 $generated@@1260)))
 :pattern ( ($generated@@223 $generated@@1257 $generated@@1258) ($generated@@753 $generated@@1255 $generated@@1256 $generated@@1258 $generated@@1259 $generated@@1260))
)))
(assert (forall (($generated@@1264 T@U) ($generated@@1265 T@U) ) (!  (=> (and (= (type $generated@@1264) ($generated@@91 $generated@@92 $generated@@93)) (= (type $generated@@1265) $generated@@2)) ($generated@@89 $generated@@1265 $generated@@46 $generated@@1264))
 :pattern ( ($generated@@89 $generated@@1265 $generated@@46 $generated@@1264))
)))
(assert (forall (($generated@@1266 T@U) ($generated@@1267 T@U) ) (!  (=> (and (= (type $generated@@1266) ($generated@@91 $generated@@92 $generated@@93)) (= (type $generated@@1267) $generated@@3)) ($generated@@89 $generated@@1267 $generated@@47 $generated@@1266))
 :pattern ( ($generated@@89 $generated@@1267 $generated@@47 $generated@@1266))
)))
(assert (forall (($generated@@1268 T@U) ($generated@@1269 T@U) ) (!  (=> (and (= (type $generated@@1268) ($generated@@91 $generated@@92 $generated@@93)) (= (type $generated@@1269) $generated@@4)) ($generated@@89 $generated@@1269 $generated@@44 $generated@@1268))
 :pattern ( ($generated@@89 $generated@@1269 $generated@@44 $generated@@1268))
)))
(assert (forall (($generated@@1270 T@U) ($generated@@1271 T@U) ) (!  (=> (and (= (type $generated@@1270) ($generated@@91 $generated@@92 $generated@@93)) (= (type $generated@@1271) $generated@@948)) ($generated@@89 $generated@@1271 $generated@@45 $generated@@1270))
 :pattern ( ($generated@@89 $generated@@1271 $generated@@45 $generated@@1270))
)))
(assert (forall (($generated@@1272 T@U) ($generated@@1273 T@U) ) (!  (=> (and (= (type $generated@@1272) ($generated@@91 $generated@@92 $generated@@93)) (= (type $generated@@1273) $generated@@166)) ($generated@@89 $generated@@1273 $generated@@48 $generated@@1272))
 :pattern ( ($generated@@89 $generated@@1273 $generated@@48 $generated@@1272))
)))
(assert (forall (($generated@@1274 T@U) ($generated@@1275 T@U) ) (!  (=> (and (= (type $generated@@1274) ($generated@@582 $generated@@166)) (= (type $generated@@1275) $generated@@78)) (= ($generated@@151 $generated@@1274 ($generated@@1009 $generated@@1275)) (forall (($generated@@1276 Int) ) (!  (=> (and (<= 0 $generated@@1276) (< $generated@@1276 ($generated@@581 $generated@@1274))) ($generated@@167 ($generated@@1010 $generated@@1274 $generated@@1276) $generated@@1275))
 :pattern ( ($generated@@1010 $generated@@1274 $generated@@1276))
))))
 :pattern ( ($generated@@151 $generated@@1274 ($generated@@1009 $generated@@1275)))
)))
(assert (forall (($generated@@1278 T@U) ) (! (= (type ($generated@@1277 $generated@@1278)) ($generated@@168 ($generated@@91 $generated@@92 $generated@@93) $generated@@166 $generated@@166))
 :pattern ( ($generated@@1277 $generated@@1278))
)))
(assert (forall (($generated@@1279 T@U) ($generated@@1280 T@U) ($generated@@1281 T@U) ) (!  (=> (and (and (= (type $generated@@1279) $generated@@166) (= (type $generated@@1280) ($generated@@91 $generated@@92 $generated@@93))) (= (type $generated@@1281) $generated@@166)) (= ($generated@@164 ($generated@@1277 $generated@@1279) $generated@@1280 $generated@@1281) $generated@@1279))
 :pattern ( ($generated@@164 ($generated@@1277 $generated@@1279) $generated@@1280 $generated@@1281))
)))
(assert (forall (($generated@@1283 T@U) ) (! (= (type ($generated@@1282 $generated@@1283)) ($generated@@168 ($generated@@91 $generated@@92 $generated@@93) $generated@@166 ($generated@@91 $generated@@166 $generated@@4)))
 :pattern ( ($generated@@1282 $generated@@1283))
)))
(assert (forall (($generated@@1284 T@U) ($generated@@1285 T@U) ($generated@@1286 T@U) ) (!  (=> (and (and (= (type $generated@@1284) ($generated@@91 $generated@@166 $generated@@4)) (= (type $generated@@1285) ($generated@@91 $generated@@92 $generated@@93))) (= (type $generated@@1286) $generated@@166)) (= ($generated@@164 ($generated@@1282 $generated@@1284) $generated@@1285 $generated@@1286) $generated@@1284))
 :pattern ( ($generated@@164 ($generated@@1282 $generated@@1284) $generated@@1285 $generated@@1286))
)))
(assert (forall (($generated@@1288 T@U) ($generated@@1289 Int) ) (!  (=> (= (type $generated@@1288) ($generated@@582 $generated@@166)) (=> (and (<= 0 $generated@@1289) (< $generated@@1289 ($generated@@581 $generated@@1288))) (< ($generated@@1086 ($generated@@484 $generated@@368 ($generated@@1010 $generated@@1288 $generated@@1289))) ($generated@@1287 $generated@@1288))))
 :pattern ( ($generated@@1086 ($generated@@484 $generated@@368 ($generated@@1010 $generated@@1288 $generated@@1289))))
)))
(assert (forall (($generated@@1290 T@U) ($generated@@1291 T@U) ($generated@@1292 T@U) ) (!  (=> (and (and (and (= (type $generated@@1290) ($generated@@712 $generated@@166 $generated@@166)) (= (type $generated@@1291) $generated@@78)) (= (type $generated@@1292) $generated@@78)) ($generated@@151 $generated@@1290 ($generated@@872 $generated@@1291 $generated@@1292))) (and (and ($generated@@151 ($generated@@710 $generated@@1290) ($generated@@512 $generated@@1291)) ($generated@@151 ($generated@@780 $generated@@1290) ($generated@@512 $generated@@1292))) ($generated@@151 ($generated@@838 $generated@@1290) ($generated@@512 ($generated@@367 $generated@@1291 $generated@@1292)))))
 :pattern ( ($generated@@151 $generated@@1290 ($generated@@872 $generated@@1291 $generated@@1292)))
)))
(assert (forall (($generated@@1293 T@U) ($generated@@1294 T@U) ($generated@@1295 T@U) ) (!  (=> (and (and (and (= (type $generated@@1293) ($generated@@730 $generated@@166 $generated@@166)) (= (type $generated@@1294) $generated@@78)) (= (type $generated@@1295) $generated@@78)) ($generated@@151 $generated@@1293 ($generated@@880 $generated@@1294 $generated@@1295))) (and (and ($generated@@151 ($generated@@728 $generated@@1293) ($generated@@517 $generated@@1294)) ($generated@@151 ($generated@@791 $generated@@1293) ($generated@@517 $generated@@1295))) ($generated@@151 ($generated@@846 $generated@@1293) ($generated@@517 ($generated@@367 $generated@@1294 $generated@@1295)))))
 :pattern ( ($generated@@151 $generated@@1293 ($generated@@880 $generated@@1294 $generated@@1295)))
)))
(assert (forall (($generated@@1296 T@U) ) (!  (=> (= (type $generated@@1296) $generated@@2) ($generated@@151 $generated@@1296 $generated@@46))
 :pattern ( ($generated@@151 $generated@@1296 $generated@@46))
)))
(assert (forall (($generated@@1297 T@U) ) (!  (=> (= (type $generated@@1297) $generated@@3) ($generated@@151 $generated@@1297 $generated@@47))
 :pattern ( ($generated@@151 $generated@@1297 $generated@@47))
)))
(assert (forall (($generated@@1298 T@U) ) (!  (=> (= (type $generated@@1298) $generated@@4) ($generated@@151 $generated@@1298 $generated@@44))
 :pattern ( ($generated@@151 $generated@@1298 $generated@@44))
)))
(assert (forall (($generated@@1299 T@U) ) (!  (=> (= (type $generated@@1299) $generated@@948) ($generated@@151 $generated@@1299 $generated@@45))
 :pattern ( ($generated@@151 $generated@@1299 $generated@@45))
)))
(assert (forall (($generated@@1300 T@U) ) (!  (=> (= (type $generated@@1300) $generated@@166) ($generated@@151 $generated@@1300 $generated@@48))
 :pattern ( ($generated@@151 $generated@@1300 $generated@@48))
)))
(push 1)
(declare-fun ControlFlow (Int Int) Int)
(declare-fun $generated@@1301 () Int)
(declare-fun $generated@@1302 () T@U)
(declare-fun $generated@@1303 () T@U)
(declare-fun $generated@@1304 () T@U)
(declare-fun $generated@@1305 () T@U)
(declare-fun $generated@@1306 () T@U)
(declare-fun $generated@@1307 () T@U)
(declare-fun $generated@@1308 () Int)
(declare-fun $generated@@1309 () T@U)
(declare-fun $generated@@1310 () T@U)
(declare-fun $generated@@1311 () T@U)
(declare-fun $generated@@1312 () T@U)
(declare-fun $generated@@1313 () Int)
(declare-fun $generated@@1314 () T@U)
(declare-fun $generated@@1315 () T@U)
(declare-fun $generated@@1316 () T@U)
(declare-fun $generated@@1317 () T@U)
(declare-fun $generated@@1318 () Int)
(declare-fun $generated@@1319 () T@U)
(declare-fun $generated@@1320 () Int)
(declare-fun $generated@@1321 () T@U)
(declare-fun $generated@@1322 () T@U)
(declare-fun $generated@@1323 () Int)
(declare-fun $generated@@1324 () T@U)
(declare-fun $generated@@1325 () T@U)
(declare-fun $generated@@1326 () T@U)
(declare-fun $generated@@1327 () T@U)
(declare-fun $generated@@1328 () T@U)
(declare-fun $generated@@1329 () T@U)
(declare-fun $generated@@1330 () Int)
(declare-fun $generated@@1331 () T@U)
(declare-fun $generated@@1332 () T@U)
(declare-fun $generated@@1333 () T@U)
(declare-fun $generated@@1334 () Int)
(declare-fun $generated@@1335 () T@U)
(declare-fun $generated@@1336 () T@U)
(declare-fun $generated@@1337 (T@U) Bool)
(declare-fun $generated@@1338 () T@U)
(declare-fun $generated@@1339 () Bool)
(declare-fun $generated@@1340 () T@U)
(declare-fun $generated@@1341 () T@U)
(declare-fun $generated@@1342 () T@U)
(declare-fun $generated@@1343 () T@U)
(declare-fun $generated@@1344 () Int)
(assert  (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (= (type $generated@@1332) $generated@@92) (= (type $generated@@1328) $generated@@92)) (= (type $generated@@1319) $generated@@92)) (= (type $generated@@1335) $generated@@166)) (= (type $generated@@1322) ($generated@@91 $generated@@92 $generated@@93))) (= (type $generated@@1333) $generated@@166)) (= (type $generated@@1331) $generated@@166)) (= (type $generated@@1329) $generated@@166)) (= (type $generated@@1327) $generated@@166)) (= (type $generated@@1326) $generated@@166)) (= (type $generated@@1325) $generated@@166)) (= (type $generated@@1324) $generated@@166)) (= (type $generated@@1321) $generated@@166)) (= (type $generated@@1306) $generated@@78)) (= (type $generated@@1317) ($generated@@91 $generated@@92 $generated@@93))) (= (type $generated@@1305) $generated@@166)) (= (type $generated@@1336) $generated@@620)) (= (type $generated@@1314) ($generated@@388 $generated@@92 $generated@@4))) (= (type $generated@@1315) ($generated@@91 $generated@@92 $generated@@93))) (= (type $generated@@1316) $generated@@166)) (= (type $generated@@1312) ($generated@@91 $generated@@92 $generated@@93))) (= (type $generated@@1309) ($generated@@388 $generated@@92 $generated@@4))) (= (type $generated@@1310) ($generated@@91 $generated@@92 $generated@@93))) (= (type $generated@@1311) $generated@@166)) (= (type $generated@@1307) ($generated@@91 $generated@@92 $generated@@93))) (= (type $generated@@1302) ($generated@@388 $generated@@92 $generated@@4))) (= (type $generated@@1303) ($generated@@91 $generated@@92 $generated@@93))) (= (type $generated@@1304) $generated@@166)) (= (type $generated@@1338) ($generated@@388 $generated@@92 $generated@@4))) (= (type $generated@@1340) $generated@@166)) (= (type $generated@@1341) $generated@@92)) (= (type $generated@@1342) $generated@@92)) (= (type $generated@@1343) $generated@@92)))
(set-option :timeout 0)
(set-option :rlimit 0)
(assert (not
 (=> (= (ControlFlow 0 0) 88) (let (($generated@@1345 true))
(let (($generated@@1346  (=> (and (< $generated@@1301 ($generated@@522 0)) (= (ControlFlow 0 84) 82)) $generated@@1345)))
(let (($generated@@1347  (=> (<= ($generated@@522 0) $generated@@1301) (=> (and (and (= $generated@@1302 ($generated@@466 $generated@@149 $generated@@1303 $generated@@60 false)) (= $generated@@1304 $generated@@1305)) (and ($generated@@167 $generated@@1304 $generated@@1306) (= (ControlFlow 0 83) 82))) $generated@@1345))))
(let (($generated@@1348  (=> (and ($generated@@326 $generated@@1303) (or (= $generated@@1307 $generated@@1303) ($generated@@223 $generated@@1307 $generated@@1303))) (and (=> (= (ControlFlow 0 85) 83) $generated@@1347) (=> (= (ControlFlow 0 85) 84) $generated@@1346)))))
(let (($generated@@1349 true))
(let (($generated@@1350  (=> (and (< $generated@@1308 ($generated@@522 0)) (= (ControlFlow 0 77) 75)) $generated@@1349)))
(let (($generated@@1351  (=> (<= ($generated@@522 0) $generated@@1308) (=> (and (and (= $generated@@1309 ($generated@@454 $generated@@149 $generated@@1310 $generated@@60 false)) (= $generated@@1311 $generated@@1305)) (and ($generated@@167 $generated@@1311 $generated@@1306) (= (ControlFlow 0 76) 75))) $generated@@1349))))
(let (($generated@@1352  (=> (and ($generated@@326 $generated@@1310) (or (= $generated@@1312 $generated@@1310) ($generated@@223 $generated@@1312 $generated@@1310))) (and (=> (= (ControlFlow 0 78) 76) $generated@@1351) (=> (= (ControlFlow 0 78) 77) $generated@@1350)))))
(let (($generated@@1353 true))
(let (($generated@@1354  (=> (and (< $generated@@1313 ($generated@@522 0)) (= (ControlFlow 0 69) 67)) $generated@@1353)))
(let (($generated@@1355  (=> (<= ($generated@@522 0) $generated@@1313) (=> (and (and (= $generated@@1314 ($generated@@442 $generated@@149 $generated@@1315 $generated@@60 false)) (= $generated@@1316 $generated@@1305)) (and ($generated@@167 $generated@@1316 $generated@@1306) (= (ControlFlow 0 68) 67))) $generated@@1353))))
(let (($generated@@1356  (=> (and ($generated@@326 $generated@@1315) (or (= $generated@@1317 $generated@@1315) ($generated@@223 $generated@@1317 $generated@@1315))) (and (=> (= (ControlFlow 0 70) 68) $generated@@1355) (=> (= (ControlFlow 0 70) 69) $generated@@1354)))))
(let (($generated@@1357  (=> (= (ControlFlow 0 4) (- 0 3)) true)))
(let (($generated@@1358  (=> (and (< $generated@@1318 ($generated@@156 $generated@@1319)) (< $generated@@1320 ($generated@@161 $generated@@1319))) (and (=> (= (ControlFlow 0 56) (- 0 59)) (not (= $generated@@1319 $generated@@149))) (=> (not (= $generated@@1319 $generated@@149)) (and (=> (= (ControlFlow 0 56) (- 0 58)) (and (<= 0 $generated@@1318) (< $generated@@1318 ($generated@@156 $generated@@1319)))) (=> (and (<= 0 $generated@@1318) (< $generated@@1318 ($generated@@156 $generated@@1319))) (and (=> (= (ControlFlow 0 56) (- 0 57)) (and (<= 0 $generated@@1320) (< $generated@@1320 ($generated@@161 $generated@@1319)))) (=> (and (<= 0 $generated@@1320) (< $generated@@1320 ($generated@@161 $generated@@1319))) (=> (and (= $generated@@1321 ($generated@@98 ($generated@@96 $generated@@1322 $generated@@1319) ($generated@@614 ($generated@@901 $generated@@1318) $generated@@1320))) (= (ControlFlow 0 56) 4)) $generated@@1357))))))))))
(let (($generated@@1359  (=> (and (<= ($generated@@156 $generated@@1319) $generated@@1318) (= (ControlFlow 0 62) 56)) $generated@@1358)))
(let (($generated@@1360  (=> (< $generated@@1318 ($generated@@156 $generated@@1319)) (and (=> (= (ControlFlow 0 60) (- 0 61)) (not (= $generated@@1319 $generated@@149))) (=> (not (= $generated@@1319 $generated@@149)) (=> (= (ControlFlow 0 60) 56) $generated@@1358))))))
(let (($generated@@1361  (and (=> (= (ControlFlow 0 63) (- 0 64)) (not (= $generated@@1319 $generated@@149))) (=> (not (= $generated@@1319 $generated@@149)) (and (=> (= (ControlFlow 0 63) 60) $generated@@1360) (=> (= (ControlFlow 0 63) 62) $generated@@1359))))))
(let (($generated@@1362  (=> (and (< $generated@@1323 ($generated@@156 $generated@@1319)) (< $generated@@1318 ($generated@@161 $generated@@1319))) (and (=> (= (ControlFlow 0 47) (- 0 50)) (not (= $generated@@1319 $generated@@149))) (=> (not (= $generated@@1319 $generated@@149)) (and (=> (= (ControlFlow 0 47) (- 0 49)) (and (<= 0 $generated@@1323) (< $generated@@1323 ($generated@@156 $generated@@1319)))) (=> (and (<= 0 $generated@@1323) (< $generated@@1323 ($generated@@156 $generated@@1319))) (and (=> (= (ControlFlow 0 47) (- 0 48)) (and (<= 0 $generated@@1318) (< $generated@@1318 ($generated@@161 $generated@@1319)))) (=> (and (<= 0 $generated@@1318) (< $generated@@1318 ($generated@@161 $generated@@1319))) (=> (and (= $generated@@1324 ($generated@@98 ($generated@@96 $generated@@1322 $generated@@1319) ($generated@@614 ($generated@@901 $generated@@1323) $generated@@1318))) (= (ControlFlow 0 47) 4)) $generated@@1357))))))))))
(let (($generated@@1363  (=> (and (<= ($generated@@156 $generated@@1319) $generated@@1323) (= (ControlFlow 0 53) 47)) $generated@@1362)))
(let (($generated@@1364  (=> (< $generated@@1323 ($generated@@156 $generated@@1319)) (and (=> (= (ControlFlow 0 51) (- 0 52)) (not (= $generated@@1319 $generated@@149))) (=> (not (= $generated@@1319 $generated@@149)) (=> (= (ControlFlow 0 51) 47) $generated@@1362))))))
(let (($generated@@1365  (and (=> (= (ControlFlow 0 54) (- 0 55)) (not (= $generated@@1319 $generated@@149))) (=> (not (= $generated@@1319 $generated@@149)) (and (=> (= (ControlFlow 0 54) 51) $generated@@1364) (=> (= (ControlFlow 0 54) 53) $generated@@1363))))))
(let (($generated@@1366  (=> (and (< $generated@@1323 ($generated@@156 $generated@@1319)) (< $generated@@1320 ($generated@@161 $generated@@1319))) (and (=> (= (ControlFlow 0 38) (- 0 41)) (not (= $generated@@1319 $generated@@149))) (=> (not (= $generated@@1319 $generated@@149)) (and (=> (= (ControlFlow 0 38) (- 0 40)) (and (<= 0 $generated@@1323) (< $generated@@1323 ($generated@@156 $generated@@1319)))) (=> (and (<= 0 $generated@@1323) (< $generated@@1323 ($generated@@156 $generated@@1319))) (and (=> (= (ControlFlow 0 38) (- 0 39)) (and (<= 0 $generated@@1320) (< $generated@@1320 ($generated@@161 $generated@@1319)))) (=> (and (<= 0 $generated@@1320) (< $generated@@1320 ($generated@@161 $generated@@1319))) (=> (and (= $generated@@1325 ($generated@@98 ($generated@@96 $generated@@1322 $generated@@1319) ($generated@@614 ($generated@@901 $generated@@1323) $generated@@1320))) (= (ControlFlow 0 38) 4)) $generated@@1357))))))))))
(let (($generated@@1367  (=> (and (<= ($generated@@156 $generated@@1319) $generated@@1323) (= (ControlFlow 0 44) 38)) $generated@@1366)))
(let (($generated@@1368  (=> (< $generated@@1323 ($generated@@156 $generated@@1319)) (and (=> (= (ControlFlow 0 42) (- 0 43)) (not (= $generated@@1319 $generated@@149))) (=> (not (= $generated@@1319 $generated@@149)) (=> (= (ControlFlow 0 42) 38) $generated@@1366))))))
(let (($generated@@1369  (and (=> (= (ControlFlow 0 45) (- 0 46)) (not (= $generated@@1319 $generated@@149))) (=> (not (= $generated@@1319 $generated@@149)) (and (=> (= (ControlFlow 0 45) 42) $generated@@1368) (=> (= (ControlFlow 0 45) 44) $generated@@1367))))))
(let (($generated@@1370  (=> (and (< $generated@@1323 ($generated@@156 $generated@@1319)) (< $generated@@1320 ($generated@@161 $generated@@1319))) (and (=> (= (ControlFlow 0 29) (- 0 32)) (not (= $generated@@1319 $generated@@149))) (=> (not (= $generated@@1319 $generated@@149)) (and (=> (= (ControlFlow 0 29) (- 0 31)) (and (<= 0 $generated@@1320) (< $generated@@1320 ($generated@@156 $generated@@1319)))) (=> (and (<= 0 $generated@@1320) (< $generated@@1320 ($generated@@156 $generated@@1319))) (and (=> (= (ControlFlow 0 29) (- 0 30)) (and (<= 0 $generated@@1320) (< $generated@@1320 ($generated@@161 $generated@@1319)))) (=> (and (<= 0 $generated@@1320) (< $generated@@1320 ($generated@@161 $generated@@1319))) (=> (and (= $generated@@1326 ($generated@@98 ($generated@@96 $generated@@1322 $generated@@1319) ($generated@@614 ($generated@@901 $generated@@1320) $generated@@1320))) (= (ControlFlow 0 29) 4)) $generated@@1357))))))))))
(let (($generated@@1371  (=> (and (<= ($generated@@156 $generated@@1319) $generated@@1323) (= (ControlFlow 0 35) 29)) $generated@@1370)))
(let (($generated@@1372  (=> (< $generated@@1323 ($generated@@156 $generated@@1319)) (and (=> (= (ControlFlow 0 33) (- 0 34)) (not (= $generated@@1319 $generated@@149))) (=> (not (= $generated@@1319 $generated@@149)) (=> (= (ControlFlow 0 33) 29) $generated@@1370))))))
(let (($generated@@1373  (and (=> (= (ControlFlow 0 36) (- 0 37)) (not (= $generated@@1319 $generated@@149))) (=> (not (= $generated@@1319 $generated@@149)) (and (=> (= (ControlFlow 0 36) 33) $generated@@1372) (=> (= (ControlFlow 0 36) 35) $generated@@1371))))))
(let (($generated@@1374  (=> (and (< $generated@@1323 ($generated@@156 $generated@@1319)) (< $generated@@1320 ($generated@@161 $generated@@1319))) (and (=> (= (ControlFlow 0 20) (- 0 23)) (not (= $generated@@1319 $generated@@149))) (=> (not (= $generated@@1319 $generated@@149)) (and (=> (= (ControlFlow 0 20) (- 0 22)) (and (<= 0 $generated@@1323) (< $generated@@1323 ($generated@@156 $generated@@1319)))) (=> (and (<= 0 $generated@@1323) (< $generated@@1323 ($generated@@156 $generated@@1319))) (and (=> (= (ControlFlow 0 20) (- 0 21)) (and (<= 0 $generated@@1323) (< $generated@@1323 ($generated@@161 $generated@@1319)))) (=> (and (<= 0 $generated@@1323) (< $generated@@1323 ($generated@@161 $generated@@1319))) (=> (and (= $generated@@1327 ($generated@@98 ($generated@@96 $generated@@1322 $generated@@1319) ($generated@@614 ($generated@@901 $generated@@1323) $generated@@1323))) (= (ControlFlow 0 20) 4)) $generated@@1357))))))))))
(let (($generated@@1375  (=> (and (<= ($generated@@156 $generated@@1319) $generated@@1323) (= (ControlFlow 0 26) 20)) $generated@@1374)))
(let (($generated@@1376  (=> (< $generated@@1323 ($generated@@156 $generated@@1319)) (and (=> (= (ControlFlow 0 24) (- 0 25)) (not (= $generated@@1319 $generated@@149))) (=> (not (= $generated@@1319 $generated@@149)) (=> (= (ControlFlow 0 24) 20) $generated@@1374))))))
(let (($generated@@1377  (and (=> (= (ControlFlow 0 27) (- 0 28)) (not (= $generated@@1319 $generated@@149))) (=> (not (= $generated@@1319 $generated@@149)) (and (=> (= (ControlFlow 0 27) 24) $generated@@1376) (=> (= (ControlFlow 0 27) 26) $generated@@1375))))))
(let (($generated@@1378  (=> (and ($generated@@0 ($generated@@524 ($generated@@11 true))) (= (ControlFlow 0 19) 4)) $generated@@1357)))
(let (($generated@@1379  (and (=> (= (ControlFlow 0 15) (- 0 18)) (not (= $generated@@1328 $generated@@149))) (=> (not (= $generated@@1328 $generated@@149)) (=> (< $generated@@1323 ($generated@@147 $generated@@1328)) (and (=> (= (ControlFlow 0 15) (- 0 17)) (not (= $generated@@1328 $generated@@149))) (=> (not (= $generated@@1328 $generated@@149)) (and (=> (= (ControlFlow 0 15) (- 0 16)) (and (<= 0 $generated@@1323) (< $generated@@1323 ($generated@@147 $generated@@1328)))) (=> (and (<= 0 $generated@@1323) (< $generated@@1323 ($generated@@147 $generated@@1328))) (=> (and (= $generated@@1329 ($generated@@98 ($generated@@96 $generated@@1322 $generated@@1328) ($generated@@901 $generated@@1323))) (= (ControlFlow 0 15) 4)) $generated@@1357))))))))))
(let (($generated@@1380  (=> (< $generated@@1323 $generated@@1330) (and (=> (= (ControlFlow 0 12) (- 0 14)) (not (= $generated@@1328 $generated@@149))) (=> (not (= $generated@@1328 $generated@@149)) (and (=> (= (ControlFlow 0 12) (- 0 13)) (and (<= 0 $generated@@1323) (< $generated@@1323 ($generated@@147 $generated@@1328)))) (=> (and (<= 0 $generated@@1323) (< $generated@@1323 ($generated@@147 $generated@@1328))) (=> (and (= $generated@@1331 ($generated@@98 ($generated@@96 $generated@@1322 $generated@@1328) ($generated@@901 $generated@@1323))) (= (ControlFlow 0 12) 4)) $generated@@1357))))))))
(let (($generated@@1381  (and (=> (= (ControlFlow 0 8) (- 0 11)) (not (= $generated@@1332 $generated@@149))) (=> (not (= $generated@@1332 $generated@@149)) (=> (< $generated@@1323 ($generated@@147 $generated@@1332)) (and (=> (= (ControlFlow 0 8) (- 0 10)) (not (= $generated@@1332 $generated@@149))) (=> (not (= $generated@@1332 $generated@@149)) (and (=> (= (ControlFlow 0 8) (- 0 9)) (and (<= 0 $generated@@1323) (< $generated@@1323 ($generated@@147 $generated@@1332)))) (=> (and (<= 0 $generated@@1323) (< $generated@@1323 ($generated@@147 $generated@@1332))) (=> (and (= $generated@@1333 ($generated@@98 ($generated@@96 $generated@@1322 $generated@@1332) ($generated@@901 $generated@@1323))) (= (ControlFlow 0 8) 4)) $generated@@1357))))))))))
(let (($generated@@1382  (=> (< $generated@@1323 $generated@@1334) (and (=> (= (ControlFlow 0 5) (- 0 7)) (not (= $generated@@1332 $generated@@149))) (=> (not (= $generated@@1332 $generated@@149)) (and (=> (= (ControlFlow 0 5) (- 0 6)) (and (<= 0 $generated@@1323) (< $generated@@1323 ($generated@@147 $generated@@1332)))) (=> (and (<= 0 $generated@@1323) (< $generated@@1323 ($generated@@147 $generated@@1332))) (=> (and (= $generated@@1335 ($generated@@98 ($generated@@96 $generated@@1322 $generated@@1332) ($generated@@901 $generated@@1323))) (= (ControlFlow 0 5) 4)) $generated@@1357))))))))
(let (($generated@@1383  (=> (and (and (and (and (and (and (and (and (and (and (<= $generated@@1334 $generated@@1323) (<= ($generated@@147 $generated@@1332) $generated@@1323)) (<= $generated@@1330 $generated@@1323)) (<= ($generated@@147 $generated@@1328) $generated@@1323)) (not (and (< $generated@@1318 ($generated@@156 $generated@@1319)) (< $generated@@1320 ($generated@@161 $generated@@1319))))) (not (and (< $generated@@1323 ($generated@@156 $generated@@1319)) (< $generated@@1318 ($generated@@161 $generated@@1319))))) (not (and (< $generated@@1323 ($generated@@156 $generated@@1319)) (< $generated@@1320 ($generated@@161 $generated@@1319))))) (not (and (< $generated@@1323 ($generated@@156 $generated@@1319)) (< $generated@@1320 ($generated@@161 $generated@@1319))))) (not (and (< $generated@@1323 ($generated@@156 $generated@@1319)) (< $generated@@1320 ($generated@@161 $generated@@1319))))) (not ($generated@@0 ($generated@@524 ($generated@@11 true))))) (= (ControlFlow 0 2) (- 0 1))) false)))
(let (($generated@@1384  (=> (and (and (and (not (= $generated@@1319 $generated@@149)) (= ($generated@@150 $generated@@1319) ($generated@@157 $generated@@1306))) (not ($generated@@0 ($generated@@98 ($generated@@96 $generated@@1317 $generated@@1319) $generated@@60)))) (and (= ($generated@@156 $generated@@1319) $generated@@1330) (= ($generated@@161 $generated@@1319) $generated@@1334))) (and (=> (= (ControlFlow 0 65) (- 0 66)) (forall (($generated@@1385 Int) ($generated@@1386 Int) )  (=> (and (and (<= 0 $generated@@1385) (< $generated@@1385 $generated@@1330)) (and (<= 0 $generated@@1386) (< $generated@@1386 $generated@@1334))) ($generated@@546 $generated@@320 $generated@@46 $generated@@1306 $generated@@1317 ($generated@@524 ($generated@@619 ($generated@@817 ($generated@@635 ($generated@@1069 $generated@@1305) ($generated@@234 $generated@@320 $generated@@46) ($generated@@1075 ($generated@@588 ($generated@@813 false))))) ($generated@@1106 $generated@@1336))) ($generated@@483 ($generated@@8 $generated@@1385)) ($generated@@483 ($generated@@8 $generated@@1386)))))) (=> (and (and (forall (($generated@@1387 Int) ($generated@@1388 Int) ) (!  (=> (and (and (<= 0 $generated@@1387) (< $generated@@1387 $generated@@1330)) (and (<= 0 $generated@@1388) (< $generated@@1388 $generated@@1334))) (= ($generated@@98 ($generated@@96 $generated@@1317 $generated@@1319) ($generated@@614 ($generated@@901 $generated@@1387) $generated@@1388)) ($generated@@543 $generated@@320 $generated@@46 $generated@@1306 $generated@@1317 ($generated@@524 ($generated@@619 ($generated@@817 ($generated@@635 ($generated@@1069 $generated@@1305) ($generated@@234 $generated@@320 $generated@@46) ($generated@@1075 ($generated@@588 ($generated@@813 false))))) ($generated@@1106 $generated@@1336))) ($generated@@483 ($generated@@8 $generated@@1387)) ($generated@@483 ($generated@@8 $generated@@1388)))))
 :pattern ( ($generated@@98 ($generated@@96 $generated@@1317 $generated@@1319) ($generated@@614 ($generated@@901 $generated@@1387) $generated@@1388)))
)) (= $generated@@1322 ($generated@@97 $generated@@1317 $generated@@1319 ($generated@@99 ($generated@@96 $generated@@1317 $generated@@1319) $generated@@60 ($generated@@11 true))))) (and ($generated@@326 $generated@@1322) ($generated@@1337 $generated@@1322))) (and (and (and (and (and (and (and (and (and (and (=> (= (ControlFlow 0 65) 5) $generated@@1382) (=> (= (ControlFlow 0 65) 8) $generated@@1381)) (=> (= (ControlFlow 0 65) 12) $generated@@1380)) (=> (= (ControlFlow 0 65) 15) $generated@@1379)) (=> (= (ControlFlow 0 65) 63) $generated@@1361)) (=> (= (ControlFlow 0 65) 54) $generated@@1365)) (=> (= (ControlFlow 0 65) 45) $generated@@1369)) (=> (= (ControlFlow 0 65) 36) $generated@@1373)) (=> (= (ControlFlow 0 65) 27) $generated@@1377)) (=> (= (ControlFlow 0 65) 19) $generated@@1378)) (=> (= (ControlFlow 0 65) 2) $generated@@1383)))))))
(let (($generated@@1389  (=> (and (and (not (= $generated@@1328 $generated@@149)) (= ($generated@@150 $generated@@1328) ($generated@@148 $generated@@1306))) (and (not ($generated@@0 ($generated@@98 ($generated@@96 $generated@@1312 $generated@@1328) $generated@@60))) (= ($generated@@147 $generated@@1328) $generated@@1330))) (and (=> (= (ControlFlow 0 71) (- 0 74)) (forall (($generated@@1390 Int) )  (=> (and (<= 0 $generated@@1390) (< $generated@@1390 $generated@@1330)) ($generated@@801 $generated@@320 $generated@@1306 $generated@@1312 ($generated@@524 ($generated@@619 ($generated@@817 ($generated@@754 ($generated@@1277 $generated@@1305) ($generated@@165 $generated@@320) ($generated@@1282 ($generated@@588 ($generated@@813 false))))) ($generated@@1106 $generated@@1336))) ($generated@@483 ($generated@@8 $generated@@1390)))))) (=> (and (and (forall (($generated@@1391 Int) ) (!  (=> (and (<= 0 $generated@@1391) (< $generated@@1391 $generated@@1330)) (= ($generated@@98 ($generated@@96 $generated@@1312 $generated@@1328) ($generated@@901 $generated@@1391)) ($generated@@753 $generated@@320 $generated@@1306 $generated@@1312 ($generated@@524 ($generated@@619 ($generated@@817 ($generated@@754 ($generated@@1277 $generated@@1305) ($generated@@165 $generated@@320) ($generated@@1282 ($generated@@588 ($generated@@813 false))))) ($generated@@1106 $generated@@1336))) ($generated@@483 ($generated@@8 $generated@@1391)))))
 :pattern ( ($generated@@98 ($generated@@96 $generated@@1312 $generated@@1328) ($generated@@901 $generated@@1391)))
)) (= $generated@@1317 ($generated@@97 $generated@@1312 $generated@@1328 ($generated@@99 ($generated@@96 $generated@@1312 $generated@@1328) $generated@@60 ($generated@@11 true))))) (and ($generated@@326 $generated@@1317) ($generated@@1337 $generated@@1317))) (and (=> (= (ControlFlow 0 71) (- 0 73)) (<= 0 $generated@@1330)) (=> (<= 0 $generated@@1330) (and (=> (= (ControlFlow 0 71) (- 0 72)) (<= 0 $generated@@1334)) (=> (<= 0 $generated@@1334) (and (=> (= (ControlFlow 0 71) 70) $generated@@1356) (=> (= (ControlFlow 0 71) 65) $generated@@1384)))))))))))
(let (($generated@@1392  (=> (and (and (not (= $generated@@1332 $generated@@149)) (= ($generated@@150 $generated@@1332) ($generated@@148 $generated@@1306))) (and (not ($generated@@0 ($generated@@98 ($generated@@96 $generated@@1307 $generated@@1332) $generated@@60))) (= ($generated@@147 $generated@@1332) $generated@@1334))) (and (=> (= (ControlFlow 0 79) (- 0 81)) (forall (($generated@@1393 Int) )  (=> (and (<= 0 $generated@@1393) (< $generated@@1393 $generated@@1334)) ($generated@@801 $generated@@320 $generated@@1306 $generated@@1307 ($generated@@524 ($generated@@619 ($generated@@817 ($generated@@754 ($generated@@1277 $generated@@1305) ($generated@@165 $generated@@320) ($generated@@1282 ($generated@@588 ($generated@@813 false))))) ($generated@@1106 $generated@@1336))) ($generated@@483 ($generated@@8 $generated@@1393)))))) (=> (and (and (forall (($generated@@1394 Int) ) (!  (=> (and (<= 0 $generated@@1394) (< $generated@@1394 $generated@@1334)) (= ($generated@@98 ($generated@@96 $generated@@1307 $generated@@1332) ($generated@@901 $generated@@1394)) ($generated@@753 $generated@@320 $generated@@1306 $generated@@1307 ($generated@@524 ($generated@@619 ($generated@@817 ($generated@@754 ($generated@@1277 $generated@@1305) ($generated@@165 $generated@@320) ($generated@@1282 ($generated@@588 ($generated@@813 false))))) ($generated@@1106 $generated@@1336))) ($generated@@483 ($generated@@8 $generated@@1394)))))
 :pattern ( ($generated@@98 ($generated@@96 $generated@@1307 $generated@@1332) ($generated@@901 $generated@@1394)))
)) (= $generated@@1312 ($generated@@97 $generated@@1307 $generated@@1332 ($generated@@99 ($generated@@96 $generated@@1307 $generated@@1332) $generated@@60 ($generated@@11 true))))) (and ($generated@@326 $generated@@1312) ($generated@@1337 $generated@@1312))) (and (=> (= (ControlFlow 0 79) (- 0 80)) (<= 0 $generated@@1330)) (=> (<= 0 $generated@@1330) (and (=> (= (ControlFlow 0 79) 78) $generated@@1352) (=> (= (ControlFlow 0 79) 71) $generated@@1389)))))))))
(let (($generated@@1395  (=> (= $generated@@1338 ($generated@@387 $generated@@149 $generated@@1307 $generated@@60 false)) (and (=> (= (ControlFlow 0 86) (- 0 87)) (<= 0 $generated@@1334)) (=> (<= 0 $generated@@1334) (and (=> (= (ControlFlow 0 86) 85) $generated@@1348) (=> (= (ControlFlow 0 86) 79) $generated@@1392)))))))
(let (($generated@@1396  (=> (and (and ($generated@@326 $generated@@1307) ($generated@@1337 $generated@@1307)) (<= ($generated@@522 0) $generated@@1334)) (=> (and (and (and (and (and (= ($generated@@1127 $generated@@1330 ($generated@@522 2)) ($generated@@522 0)) (= ($generated@@1127 $generated@@1323 ($generated@@522 2)) ($generated@@522 0))) (and (= ($generated@@1127 $generated@@1320 ($generated@@522 2)) ($generated@@522 0)) (<= ($generated@@522 0) $generated@@1318))) (and (and ($generated@@167 $generated@@1305 $generated@@1306) ($generated@@545 $generated@@1305 $generated@@1306 $generated@@1307)) (=> $generated@@1339 (and ($generated@@167 $generated@@1340 $generated@@1306) ($generated@@545 $generated@@1340 $generated@@1306 $generated@@1307))))) (and (and (and ($generated@@151 $generated@@1341 ($generated@@356 $generated@@1306)) ($generated@@89 $generated@@1341 ($generated@@356 $generated@@1306) $generated@@1307)) true) (and (and ($generated@@151 $generated@@1342 ($generated@@356 $generated@@1306)) ($generated@@89 $generated@@1342 ($generated@@356 $generated@@1306) $generated@@1307)) true))) (and (and (and (and ($generated@@151 $generated@@1343 ($generated@@361 $generated@@1306)) ($generated@@89 $generated@@1343 ($generated@@361 $generated@@1306) $generated@@1307)) true) (= 1 $generated@@1344)) (and (and (<= ($generated@@522 0) $generated@@1330) (<= ($generated@@522 0) $generated@@1323)) (and (<= ($generated@@522 0) $generated@@1320) (= (ControlFlow 0 88) 86))))) $generated@@1395))))
$generated@@1396)))))))))))))))))))))))))))))))))))))))))))))
))
(check-sat)
(get-info :reason-unknown)
(assert (not (= (ControlFlow 0 29) (- 31))))
(check-sat)
(get-info :reason-unknown)
(assert (not (= (ControlFlow 0 20) (- 21))))
(check-sat)
(pop 1)
; Invalid
(get-info :rlimit)
(reset)
(set-option :rlimit 0)
; did a full reset
(reset)
(set-option :print-success false)
(set-info :smt-lib-version 2.6)
(set-option :auto_config false)
(set-option :type_check true)
(set-option :smt.case_split 3)
(set-option :smt.qi.eager_threshold 100)
(set-option :smt.delay_units true)
(set-option :smt.arith.solver 2)
(set-option :smt.mbqi false)
(set-option :model.compact false)
(set-option :model.v2 true)
(set-option :pp.bv_literals false)
; done setting options


(set-info :category "industrial")
(declare-sort |T@U| 0)
(declare-sort |T@T| 0)
(declare-fun real_pow (Real Real) Real)
(declare-fun UOrdering2 (|T@U| |T@U|) Bool)
(declare-fun UOrdering3 (|T@T| |T@U| |T@U|) Bool)
(declare-fun tickleBool (Bool) Bool)
(assert (and (tickleBool true) (tickleBool false)))
(declare-fun $generated (T@U) Int)
(declare-fun $generated@@0 (T@U) Bool)
(declare-fun $generated@@1 (T@T) Int)
(declare-fun $generated@@2 () T@T)
(declare-fun $generated@@3 () T@T)
(declare-fun $generated@@4 () T@T)
(declare-fun $generated@@5 () T@T)
(declare-fun $generated@@6 () T@T)
(declare-fun $generated@@7 () T@T)
(declare-fun $generated@@8 (Int) T@U)
(declare-fun type (T@U) T@T)
(declare-fun $generated@@9 (Real) T@U)
(declare-fun $generated@@10 (T@U) Real)
(declare-fun $generated@@11 (Bool) T@U)
(declare-fun $generated@@12 (RoundingMode) T@U)
(declare-fun $generated@@13 (T@U) RoundingMode)
(declare-fun $generated@@14 (String) T@U)
(declare-fun $generated@@15 (T@U) String)
(declare-fun $generated@@16 ((RegEx String)) T@U)
(declare-fun $generated@@17 (T@U) (RegEx String))
(declare-fun $generated@@44 (T@U T@U) Bool)
(declare-fun $generated@@45 (T@T T@T) T@T)
(declare-fun $generated@@46 () T@T)
(declare-fun $generated@@47 () T@T)
(declare-fun $generated@@48 (T@U T@U) T@U)
(declare-fun $generated@@49 (T@U T@U) T@U)
(declare-fun $generated@@50 () T@U)
(declare-fun $generated@@51 (T@T) T@T)
(declare-fun $generated@@52 (T@T) T@T)
(declare-fun $generated@@53 (T@U T@U T@U) T@U)
(declare-fun $generated@@54 (T@T) T@T)
(declare-fun $generated@@55 (T@T) T@T)
(declare-fun $generated@@56 (T@U T@U T@U) T@U)
(declare-fun $generated@@106 (T@U T@U T@U) T@U)
(declare-fun $generated@@107 (T@U T@U T@U Bool) T@U)
(declare-fun $generated@@108 (T@T T@T) T@T)
(declare-fun $generated@@109 (T@T) T@T)
(declare-fun $generated@@110 (T@T) T@T)
(declare-fun $generated@@111 (T@U T@U T@U T@U) T@U)
(declare-fun $generated@@162 (Real) Real)
(declare-fun $generated@@164 (T@U) T@U)
(declare-fun $generated@@171 (T@U) T@U)
(declare-fun $generated@@172 (T@T T@U) T@U)
(declare-fun $generated@@173 () T@T)
(assert  (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (= ($generated@@1 $generated@@2) 0) (= ($generated@@1 $generated@@3) 1)) (= ($generated@@1 $generated@@4) 2)) (= ($generated@@1 $generated@@5) 3)) (= ($generated@@1 $generated@@6) 4)) (= ($generated@@1 $generated@@7) 5)) (forall (($generated@@18 Int) ) (! (= ($generated ($generated@@8 $generated@@18)) $generated@@18)
 :pattern ( ($generated@@8 $generated@@18))
))) (forall (($generated@@19 T@U) ) (!  (=> (= (type $generated@@19) $generated@@2) (= ($generated@@8 ($generated $generated@@19)) $generated@@19))
 :pattern ( ($generated $generated@@19))
))) (forall (($generated@@20 Int) ) (! (= (type ($generated@@8 $generated@@20)) $generated@@2)
 :pattern ( ($generated@@8 $generated@@20))
))) (forall (($generated@@21 Real) ) (! (= ($generated@@10 ($generated@@9 $generated@@21)) $generated@@21)
 :pattern ( ($generated@@9 $generated@@21))
))) (forall (($generated@@22 T@U) ) (!  (=> (= (type $generated@@22) $generated@@3) (= ($generated@@9 ($generated@@10 $generated@@22)) $generated@@22))
 :pattern ( ($generated@@10 $generated@@22))
))) (forall (($generated@@23 Real) ) (! (= (type ($generated@@9 $generated@@23)) $generated@@3)
 :pattern ( ($generated@@9 $generated@@23))
))) (forall (($generated@@24 Bool) ) (! (= ($generated@@0 ($generated@@11 $generated@@24)) $generated@@24)
 :pattern ( ($generated@@11 $generated@@24))
))) (forall (($generated@@25 T@U) ) (!  (=> (= (type $generated@@25) $generated@@4) (= ($generated@@11 ($generated@@0 $generated@@25)) $generated@@25))
 :pattern ( ($generated@@0 $generated@@25))
))) (forall (($generated@@26 Bool) ) (! (= (type ($generated@@11 $generated@@26)) $generated@@4)
 :pattern ( ($generated@@11 $generated@@26))
))) (forall (($generated@@27 RoundingMode) ) (! (= ($generated@@13 ($generated@@12 $generated@@27)) $generated@@27)
 :pattern ( ($generated@@12 $generated@@27))
))) (forall (($generated@@28 T@U) ) (!  (=> (= (type $generated@@28) $generated@@5) (= ($generated@@12 ($generated@@13 $generated@@28)) $generated@@28))
 :pattern ( ($generated@@13 $generated@@28))
))) (forall (($generated@@29 RoundingMode) ) (! (= (type ($generated@@12 $generated@@29)) $generated@@5)
 :pattern ( ($generated@@12 $generated@@29))
))) (forall (($generated@@30 String) ) (! (= ($generated@@15 ($generated@@14 $generated@@30)) $generated@@30)
 :pattern ( ($generated@@14 $generated@@30))
))) (forall (($generated@@31 T@U) ) (!  (=> (= (type $generated@@31) $generated@@6) (= ($generated@@14 ($generated@@15 $generated@@31)) $generated@@31))
 :pattern ( ($generated@@15 $generated@@31))
))) (forall (($generated@@32 String) ) (! (= (type ($generated@@14 $generated@@32)) $generated@@6)
 :pattern ( ($generated@@14 $generated@@32))
))) (forall (($generated@@33 (RegEx String)) ) (! (= ($generated@@17 ($generated@@16 $generated@@33)) $generated@@33)
 :pattern ( ($generated@@16 $generated@@33))
))) (forall (($generated@@34 T@U) ) (!  (=> (= (type $generated@@34) $generated@@7) (= ($generated@@16 ($generated@@17 $generated@@34)) $generated@@34))
 :pattern ( ($generated@@17 $generated@@34))
))) (forall (($generated@@35 (RegEx String)) ) (! (= (type ($generated@@16 $generated@@35)) $generated@@7)
 :pattern ( ($generated@@16 $generated@@35))
))))
(assert (forall (($generated@@36 T@U) ) (! (UOrdering2 $generated@@36 $generated@@36)
 :no-pattern ($generated $generated@@36)
 :no-pattern ($generated@@0 $generated@@36)
)))
(assert (forall (($generated@@37 T@U) ($generated@@38 T@U) ($generated@@39 T@U) ) (! (let (($generated@@40 (type $generated@@37)))
 (=> (and (and (= (type $generated@@38) $generated@@40) (= (type $generated@@39) $generated@@40)) (and (UOrdering2 $generated@@37 $generated@@38) (UOrdering2 $generated@@38 $generated@@39))) (UOrdering2 $generated@@37 $generated@@39)))
 :pattern ( (UOrdering2 $generated@@37 $generated@@38) (UOrdering2 $generated@@38 $generated@@39))
)))
(assert (forall (($generated@@41 T@U) ($generated@@42 T@U) ) (! (let (($generated@@43 (type $generated@@41)))
 (=> (= (type $generated@@42) $generated@@43) (=> (and (UOrdering2 $generated@@41 $generated@@42) (UOrdering2 $generated@@42 $generated@@41)) (= $generated@@41 $generated@@42))))
 :pattern ( (UOrdering2 $generated@@41 $generated@@42) (UOrdering2 $generated@@42 $generated@@41))
)))
(assert  (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (forall (($generated@@57 T@T) ($generated@@58 T@T) ) (= ($generated@@1 ($generated@@45 $generated@@57 $generated@@58)) 6)) (forall (($generated@@59 T@T) ($generated@@60 T@T) ) (! (= ($generated@@51 ($generated@@45 $generated@@59 $generated@@60)) $generated@@59)
 :pattern ( ($generated@@45 $generated@@59 $generated@@60))
))) (forall (($generated@@61 T@T) ($generated@@62 T@T) ) (! (= ($generated@@52 ($generated@@45 $generated@@61 $generated@@62)) $generated@@62)
 :pattern ( ($generated@@45 $generated@@61 $generated@@62))
))) (forall (($generated@@63 T@U) ($generated@@64 T@U) ) (! (let (($generated@@65 ($generated@@52 (type $generated@@63))))
(= (type ($generated@@49 $generated@@63 $generated@@64)) $generated@@65))
 :pattern ( ($generated@@49 $generated@@63 $generated@@64))
))) (forall (($generated@@66 T@U) ($generated@@67 T@U) ($generated@@68 T@U) ) (! (let (($generated@@69 (type $generated@@68)))
(let (($generated@@70 (type $generated@@67)))
(= (type ($generated@@53 $generated@@66 $generated@@67 $generated@@68)) ($generated@@45 $generated@@70 $generated@@69))))
 :pattern ( ($generated@@53 $generated@@66 $generated@@67 $generated@@68))
))) (forall (($generated@@71 T@U) ($generated@@72 T@U) ($generated@@73 T@U) ) (! (let (($generated@@74 ($generated@@52 (type $generated@@71))))
 (=> (= (type $generated@@73) $generated@@74) (= ($generated@@49 ($generated@@53 $generated@@71 $generated@@72 $generated@@73) $generated@@72) $generated@@73)))
 :weight 0
))) (and (forall (($generated@@75 T@U) ($generated@@76 T@U) ($generated@@77 T@U) ($generated@@78 T@U) ) (!  (or (= $generated@@77 $generated@@78) (= ($generated@@49 ($generated@@53 $generated@@76 $generated@@77 $generated@@75) $generated@@78) ($generated@@49 $generated@@76 $generated@@78)))
 :weight 0
)) (forall (($generated@@79 T@U) ($generated@@80 T@U) ($generated@@81 T@U) ($generated@@82 T@U) ) (!  (or true (= ($generated@@49 ($generated@@53 $generated@@80 $generated@@81 $generated@@79) $generated@@82) ($generated@@49 $generated@@80 $generated@@82)))
 :weight 0
)))) (= ($generated@@1 $generated@@46) 7)) (forall (($generated@@83 T@T) ) (= ($generated@@1 ($generated@@54 $generated@@83)) 8))) (forall (($generated@@84 T@T) ) (! (= ($generated@@55 ($generated@@54 $generated@@84)) $generated@@84)
 :pattern ( ($generated@@54 $generated@@84))
))) (forall (($generated@@85 T@U) ($generated@@86 T@U) ) (! (let (($generated@@87 ($generated@@55 (type $generated@@86))))
(= (type ($generated@@48 $generated@@85 $generated@@86)) $generated@@87))
 :pattern ( ($generated@@48 $generated@@85 $generated@@86))
))) (= ($generated@@1 $generated@@47) 9)) (forall (($generated@@88 T@U) ($generated@@89 T@U) ($generated@@90 T@U) ) (! (= (type ($generated@@56 $generated@@88 $generated@@89 $generated@@90)) $generated@@47)
 :pattern ( ($generated@@56 $generated@@88 $generated@@89 $generated@@90))
))) (forall (($generated@@91 T@U) ($generated@@92 T@U) ($generated@@93 T@U) ) (! (let (($generated@@94 ($generated@@55 (type $generated@@92))))
 (=> (= (type $generated@@93) $generated@@94) (= ($generated@@48 ($generated@@56 $generated@@91 $generated@@92 $generated@@93) $generated@@92) $generated@@93)))
 :weight 0
))) (and (forall (($generated@@95 T@U) ($generated@@96 T@U) ($generated@@97 T@U) ($generated@@98 T@U) ) (!  (or (= $generated@@97 $generated@@98) (= ($generated@@48 ($generated@@56 $generated@@96 $generated@@97 $generated@@95) $generated@@98) ($generated@@48 $generated@@96 $generated@@98)))
 :weight 0
)) (forall (($generated@@99 T@U) ($generated@@100 T@U) ($generated@@101 T@U) ($generated@@102 T@U) ) (!  (or true (= ($generated@@48 ($generated@@56 $generated@@100 $generated@@101 $generated@@99) $generated@@102) ($generated@@48 $generated@@100 $generated@@102)))
 :weight 0
)))) (= (type $generated@@50) ($generated@@54 $generated@@4))))
(assert (forall (($generated@@103 T@U) ($generated@@104 T@U) ) (!  (=> (and (and (= (type $generated@@103) ($generated@@45 $generated@@46 $generated@@47)) (= (type $generated@@104) ($generated@@45 $generated@@46 $generated@@47))) ($generated@@44 $generated@@103 $generated@@104)) (forall (($generated@@105 T@U) ) (!  (=> (and (= (type $generated@@105) $generated@@46) ($generated@@0 ($generated@@48 ($generated@@49 $generated@@103 $generated@@105) $generated@@50))) ($generated@@0 ($generated@@48 ($generated@@49 $generated@@104 $generated@@105) $generated@@50)))
 :pattern ( ($generated@@48 ($generated@@49 $generated@@104 $generated@@105) $generated@@50))
)))
 :pattern ( ($generated@@44 $generated@@103 $generated@@104))
)))
(assert  (and (and (and (and (and (and (and (forall (($generated@@112 T@T) ($generated@@113 T@T) ) (= ($generated@@1 ($generated@@108 $generated@@112 $generated@@113)) 10)) (forall (($generated@@114 T@T) ($generated@@115 T@T) ) (! (= ($generated@@109 ($generated@@108 $generated@@114 $generated@@115)) $generated@@114)
 :pattern ( ($generated@@108 $generated@@114 $generated@@115))
))) (forall (($generated@@116 T@T) ($generated@@117 T@T) ) (! (= ($generated@@110 ($generated@@108 $generated@@116 $generated@@117)) $generated@@117)
 :pattern ( ($generated@@108 $generated@@116 $generated@@117))
))) (forall (($generated@@118 T@U) ($generated@@119 T@U) ($generated@@120 T@U) ) (! (let (($generated@@121 ($generated@@110 (type $generated@@118))))
(= (type ($generated@@106 $generated@@118 $generated@@119 $generated@@120)) $generated@@121))
 :pattern ( ($generated@@106 $generated@@118 $generated@@119 $generated@@120))
))) (forall (($generated@@122 T@U) ($generated@@123 T@U) ($generated@@124 T@U) ($generated@@125 T@U) ) (! (let (($generated@@126 (type $generated@@125)))
(let (($generated@@127 (type $generated@@123)))
(= (type ($generated@@111 $generated@@122 $generated@@123 $generated@@124 $generated@@125)) ($generated@@108 $generated@@127 $generated@@126))))
 :pattern ( ($generated@@111 $generated@@122 $generated@@123 $generated@@124 $generated@@125))
))) (forall (($generated@@128 T@U) ($generated@@129 T@U) ($generated@@130 T@U) ($generated@@131 T@U) ) (! (let (($generated@@132 ($generated@@110 (type $generated@@128))))
 (=> (= (type $generated@@131) $generated@@132) (= ($generated@@106 ($generated@@111 $generated@@128 $generated@@129 $generated@@130 $generated@@131) $generated@@129 $generated@@130) $generated@@131)))
 :weight 0
))) (and (and (forall (($generated@@133 T@U) ($generated@@134 T@U) ($generated@@135 T@U) ($generated@@136 T@U) ($generated@@137 T@U) ($generated@@138 T@U) ) (!  (or (= $generated@@135 $generated@@137) (= ($generated@@106 ($generated@@111 $generated@@134 $generated@@135 $generated@@136 $generated@@133) $generated@@137 $generated@@138) ($generated@@106 $generated@@134 $generated@@137 $generated@@138)))
 :weight 0
)) (forall (($generated@@139 T@U) ($generated@@140 T@U) ($generated@@141 T@U) ($generated@@142 T@U) ($generated@@143 T@U) ($generated@@144 T@U) ) (!  (or (= $generated@@142 $generated@@144) (= ($generated@@106 ($generated@@111 $generated@@140 $generated@@141 $generated@@142 $generated@@139) $generated@@143 $generated@@144) ($generated@@106 $generated@@140 $generated@@143 $generated@@144)))
 :weight 0
))) (forall (($generated@@145 T@U) ($generated@@146 T@U) ($generated@@147 T@U) ($generated@@148 T@U) ($generated@@149 T@U) ($generated@@150 T@U) ) (!  (or true (= ($generated@@106 ($generated@@111 $generated@@146 $generated@@147 $generated@@148 $generated@@145) $generated@@149 $generated@@150) ($generated@@106 $generated@@146 $generated@@149 $generated@@150)))
 :weight 0
)))) (forall (($generated@@151 T@U) ($generated@@152 T@U) ($generated@@153 T@U) ($generated@@154 Bool) ) (! (= (type ($generated@@107 $generated@@151 $generated@@152 $generated@@153 $generated@@154)) ($generated@@108 $generated@@46 $generated@@4))
 :pattern ( ($generated@@107 $generated@@151 $generated@@152 $generated@@153 $generated@@154))
))))
(assert (forall (($generated@@155 T@U) ($generated@@156 T@U) ($generated@@157 T@U) ($generated@@158 Bool) ($generated@@159 T@U) ($generated@@160 T@U) ) (! (let (($generated@@161 ($generated@@55 (type $generated@@160))))
 (=> (and (and (and (and (= (type $generated@@155) $generated@@46) (= (type $generated@@156) ($generated@@45 $generated@@46 $generated@@47))) (= (type $generated@@157) ($generated@@54 $generated@@4))) (= (type $generated@@159) $generated@@46)) (= (type $generated@@160) ($generated@@54 $generated@@161))) (= ($generated@@0 ($generated@@106 ($generated@@107 $generated@@155 $generated@@156 $generated@@157 $generated@@158) $generated@@159 $generated@@160))  (=> (and (not (= $generated@@159 $generated@@155)) ($generated@@0 ($generated@@48 ($generated@@49 $generated@@156 $generated@@159) $generated@@157))) $generated@@158))))
 :pattern ( ($generated@@106 ($generated@@107 $generated@@155 $generated@@156 $generated@@157 $generated@@158) $generated@@159 $generated@@160))
)))
(assert (forall (($generated@@163 Real) ) (! (= ($generated@@162 $generated@@163) $generated@@163)
 :pattern ( ($generated@@162 $generated@@163))
)))
(assert (forall (($generated@@165 T@U) ) (! (let (($generated@@166 (type $generated@@165)))
(= (type ($generated@@164 $generated@@165)) $generated@@166))
 :pattern ( ($generated@@164 $generated@@165))
)))
(assert (forall (($generated@@167 T@U) ) (! (= ($generated@@164 $generated@@167) $generated@@167)
 :pattern ( ($generated@@164 $generated@@167))
)))
(assert (forall (($generated@@168 T@U) ($generated@@169 T@U) ($generated@@170 T@U) ) (!  (=> (and (and (and (and (= (type $generated@@168) ($generated@@45 $generated@@46 $generated@@47)) (= (type $generated@@169) ($generated@@45 $generated@@46 $generated@@47))) (= (type $generated@@170) ($generated@@45 $generated@@46 $generated@@47))) (not (= $generated@@168 $generated@@170))) (and ($generated@@44 $generated@@168 $generated@@169) ($generated@@44 $generated@@169 $generated@@170))) ($generated@@44 $generated@@168 $generated@@170))
 :pattern ( ($generated@@44 $generated@@168 $generated@@169) ($generated@@44 $generated@@169 $generated@@170))
)))
(assert  (and (and (= ($generated@@1 $generated@@173) 11) (forall (($generated@@174 T@U) ) (! (= (type ($generated@@171 $generated@@174)) $generated@@173)
 :pattern ( ($generated@@171 $generated@@174))
))) (forall (($generated@@175 T@T) ($generated@@176 T@U) ) (! (= (type ($generated@@172 $generated@@175 $generated@@176)) $generated@@175)
 :pattern ( ($generated@@172 $generated@@175 $generated@@176))
))))
(assert (forall (($generated@@177 T@U) ) (! (let (($generated@@178 (type $generated@@177)))
(= ($generated@@172 $generated@@178 ($generated@@171 $generated@@177)) $generated@@177))
 :pattern ( ($generated@@171 $generated@@177))
)))
(assert (forall (($generated@@179 Real) ) (! (= ($generated@@171 ($generated@@9 ($generated@@162 $generated@@179))) ($generated@@164 ($generated@@171 ($generated@@9 $generated@@179))))
 :pattern ( ($generated@@171 ($generated@@9 ($generated@@162 $generated@@179))))
)))
(assert (forall (($generated@@180 T@U) ) (! (= ($generated@@171 ($generated@@164 $generated@@180)) ($generated@@164 ($generated@@171 $generated@@180)))
 :pattern ( ($generated@@171 ($generated@@164 $generated@@180)))
)))
(push 1)
(declare-fun ControlFlow (Int Int) Int)
(declare-fun $generated@@181 () Real)
(declare-fun $generated@@182 () Real)
(declare-fun $generated@@183 () Real)
(declare-fun $generated@@184 () Real)
(declare-fun $generated@@185 () Real)
(declare-fun $generated@@186 () Real)
(declare-fun $generated@@187 () Real)
(declare-fun $generated@@188 () Real)
(declare-fun $generated@@189 () Real)
(declare-fun $generated@@190 () Real)
(declare-fun $generated@@191 () Bool)
(declare-fun $generated@@192 () T@U)
(declare-fun $generated@@193 () T@U)
(declare-fun $generated@@194 () T@U)
(declare-fun $generated@@195 () Real)
(declare-fun $generated@@196 () Real)
(declare-fun $generated@@197 () Real)
(declare-fun $generated@@198 (T@U) Bool)
(declare-fun $generated@@199 (T@U) Bool)
(declare-fun $generated@@200 () Real)
(declare-fun $generated@@201 () Real)
(declare-fun $generated@@202 () Int)
(assert  (and (and (= (type $generated@@192) ($generated@@45 $generated@@46 $generated@@47)) (= (type $generated@@193) $generated@@46)) (= (type $generated@@194) ($generated@@108 $generated@@46 $generated@@4))))
(set-option :timeout 0)
(set-option :rlimit 0)
(assert (not
 (=> (= (ControlFlow 0 0) 17) (let (($generated@@203  (and (=> (= (ControlFlow 0 5) (- 0 6)) (or (<= 0.0 $generated@@181) (= (- $generated@@182 $generated@@183) $generated@@181))) (=> (or (<= 0.0 $generated@@181) (= (- $generated@@182 $generated@@183) $generated@@181)) (=> (= (ControlFlow 0 5) (- 0 4)) (<= (- $generated@@182 $generated@@183) (- $generated@@181 1.0)))))))
(let (($generated@@204  (=> (and (<= $generated@@184 12.0) (= $generated@@185 ($generated@@162 14.2))) (and (=> (= (ControlFlow 0 9) (- 0 10)) (or (= $generated@@185 ($generated@@162 0.0)) (and (<= ($generated@@162 10.0) $generated@@185) (<= $generated@@185 ($generated@@162 20.0))))) (=> (or (= $generated@@185 ($generated@@162 0.0)) (and (<= ($generated@@162 10.0) $generated@@185) (<= $generated@@185 ($generated@@162 20.0)))) (=> (and (and (= $generated@@186 ($generated@@162 14.2)) (= $generated@@183 $generated@@186)) (and (= $generated@@182 $generated@@184) (= (ControlFlow 0 9) 5))) $generated@@203))))))
(let (($generated@@205  (=> (and (< 12.0 $generated@@184) (= $generated@@187 ($generated@@162 10.0))) (and (=> (= (ControlFlow 0 7) (- 0 8)) (or (= $generated@@187 ($generated@@162 0.0)) (and (<= ($generated@@162 10.0) $generated@@187) (<= $generated@@187 ($generated@@162 20.0))))) (=> (or (= $generated@@187 ($generated@@162 0.0)) (and (<= ($generated@@162 10.0) $generated@@187) (<= $generated@@187 ($generated@@162 20.0)))) (=> (and (and (= $generated@@188 ($generated@@162 10.0)) (= $generated@@183 $generated@@189)) (and (= $generated@@182 $generated@@188) (= (ControlFlow 0 7) 5))) $generated@@203))))))
(let (($generated@@206  (=> (< $generated@@189 $generated@@184) (=> (and (= $generated@@181 (- $generated@@184 $generated@@189)) (= $generated@@190 ($generated@@162 12.0))) (and (=> (= (ControlFlow 0 11) (- 0 12)) (or (= $generated@@190 ($generated@@162 0.0)) (and (<= ($generated@@162 10.0) $generated@@190) (<= $generated@@190 ($generated@@162 20.0))))) (=> (or (= $generated@@190 ($generated@@162 0.0)) (and (<= ($generated@@162 10.0) $generated@@190) (<= $generated@@190 ($generated@@162 20.0)))) (and (=> (= (ControlFlow 0 11) 7) $generated@@205) (=> (= (ControlFlow 0 11) 9) $generated@@204))))))))
(let (($generated@@207 true))
(let (($generated@@208  (=> $generated@@191 (and (=> (= (ControlFlow 0 13) 3) $generated@@207) (=> (= (ControlFlow 0 13) 11) $generated@@206)))))
(let (($generated@@209 true))
(let (($generated@@210  (and (=> (= (ControlFlow 0 14) 2) $generated@@209) (=> (= (ControlFlow 0 14) 13) $generated@@208))))
(let (($generated@@211 true))
(let (($generated@@212  (=> (and (and (and (or (= $generated@@189 ($generated@@162 0.0)) (and (<= ($generated@@162 10.0) $generated@@189) (<= $generated@@189 ($generated@@162 20.0)))) (or (= $generated@@184 ($generated@@162 0.0)) (and (<= ($generated@@162 10.0) $generated@@184) (<= $generated@@184 ($generated@@162 20.0))))) (and (not false) (forall (($generated@@213 T@U) ) (!  (=> (= (type $generated@@213) $generated@@46) (=> (and (not (= $generated@@213 $generated@@193)) ($generated@@0 ($generated@@48 ($generated@@49 $generated@@192 $generated@@213) $generated@@50))) (= ($generated@@49 $generated@@192 $generated@@213) ($generated@@49 $generated@@192 $generated@@213))))
 :pattern ( ($generated@@49 $generated@@192 $generated@@213))
)))) (and (and ($generated@@44 $generated@@192 $generated@@192) (forall (($generated@@214 T@U) ($generated@@215 T@U) ) (! (let (($generated@@216 ($generated@@55 (type $generated@@215))))
 (=> (and (and (= (type $generated@@214) $generated@@46) (= (type $generated@@215) ($generated@@54 $generated@@216))) (and (not (= $generated@@214 $generated@@193)) ($generated@@0 ($generated@@48 ($generated@@49 $generated@@192 $generated@@214) $generated@@50)))) (or (= ($generated@@48 ($generated@@49 $generated@@192 $generated@@214) $generated@@215) ($generated@@48 ($generated@@49 $generated@@192 $generated@@214) $generated@@215)) ($generated@@0 ($generated@@106 $generated@@194 $generated@@214 $generated@@215)))))
 :pattern ( ($generated@@48 ($generated@@49 $generated@@192 $generated@@214) $generated@@215))
))) (and (<= (- $generated@@184 $generated@@189) $generated@@195) (=> (= (- $generated@@184 $generated@@189) $generated@@195) true)))) (and (=> (= (ControlFlow 0 15) 1) $generated@@211) (=> (= (ControlFlow 0 15) 14) $generated@@210)))))
(let (($generated@@217  (=> (= $generated@@194 ($generated@@107 $generated@@193 $generated@@192 $generated@@50 false)) (=> (and (and (or (= $generated@@196 ($generated@@162 0.0)) (and (<= ($generated@@162 10.0) $generated@@196) (<= $generated@@196 ($generated@@162 20.0)))) (or (= $generated@@197 ($generated@@162 0.0)) (and (<= ($generated@@162 10.0) $generated@@197) (<= $generated@@197 ($generated@@162 20.0))))) (and (= $generated@@195 (- $generated@@197 $generated@@196)) (= (ControlFlow 0 16) 15))) $generated@@212))))
(let (($generated@@218  (=> (and (and (and ($generated@@198 $generated@@192) ($generated@@199 $generated@@192)) (and (or (= $generated@@200 ($generated@@162 0.0)) (and (<= ($generated@@162 10.0) $generated@@200) (<= $generated@@200 ($generated@@162 20.0)))) true)) (and (and (or (= $generated@@201 ($generated@@162 0.0)) (and (<= ($generated@@162 10.0) $generated@@201) (<= $generated@@201 ($generated@@162 20.0)))) true) (and (= 1 $generated@@202) (= (ControlFlow 0 17) 16)))) $generated@@217)))
$generated@@218)))))))))))))
))
(check-sat)
(pop 1)
; Valid
(get-info :rlimit)
(reset)
(set-option :rlimit 0)
; did a full reset
(reset)
(set-option :print-success false)
(set-info :smt-lib-version 2.6)
(set-option :auto_config false)
(set-option :type_check true)
(set-option :smt.case_split 3)
(set-option :smt.qi.eager_threshold 100)
(set-option :smt.delay_units true)
(set-option :smt.arith.solver 2)
(set-option :smt.mbqi false)
(set-option :model.compact false)
(set-option :model.v2 true)
(set-option :pp.bv_literals false)
; done setting options


(set-info :category "industrial")
(declare-sort |T@U| 0)
(declare-sort |T@T| 0)
(declare-fun real_pow (Real Real) Real)
(declare-fun UOrdering2 (|T@U| |T@U|) Bool)
(declare-fun UOrdering3 (|T@T| |T@U| |T@U|) Bool)
(declare-fun tickleBool (Bool) Bool)
(assert (and (tickleBool true) (tickleBool false)))
(declare-fun $generated (T@U) Int)
(declare-fun $generated@@0 (T@U) Bool)
(declare-fun $generated@@1 (T@T) Int)
(declare-fun $generated@@2 () T@T)
(declare-fun $generated@@3 () T@T)
(declare-fun $generated@@4 () T@T)
(declare-fun $generated@@5 () T@T)
(declare-fun $generated@@6 () T@T)
(declare-fun $generated@@7 () T@T)
(declare-fun $generated@@8 (Int) T@U)
(declare-fun type (T@U) T@T)
(declare-fun $generated@@9 (Real) T@U)
(declare-fun $generated@@10 (T@U) Real)
(declare-fun $generated@@11 (Bool) T@U)
(declare-fun $generated@@12 (RoundingMode) T@U)
(declare-fun $generated@@13 (T@U) RoundingMode)
(declare-fun $generated@@14 (String) T@U)
(declare-fun $generated@@15 (T@U) String)
(declare-fun $generated@@16 ((RegEx String)) T@U)
(declare-fun $generated@@17 (T@U) (RegEx String))
(declare-fun $generated@@44 (T@U T@U T@U) T@U)
(declare-fun $generated@@45 (T@U T@U T@U Bool) T@U)
(declare-fun $generated@@46 (T@T) T@T)
(declare-fun $generated@@47 () T@T)
(declare-fun $generated@@48 (T@T T@T) T@T)
(declare-fun $generated@@49 () T@T)
(declare-fun $generated@@50 (T@T) T@T)
(declare-fun $generated@@51 (T@U T@U) T@U)
(declare-fun $generated@@52 (T@U T@U) T@U)
(declare-fun $generated@@53 (T@T) T@T)
(declare-fun $generated@@54 (T@T) T@T)
(declare-fun $generated@@55 (T@U T@U T@U) T@U)
(declare-fun $generated@@56 (T@U T@U T@U) T@U)
(declare-fun $generated@@57 (T@T T@T) T@T)
(declare-fun $generated@@58 (T@T) T@T)
(declare-fun $generated@@59 (T@T) T@T)
(declare-fun $generated@@60 (T@U T@U T@U T@U) T@U)
(declare-fun $generated@@157 (Int) Int)
(declare-fun $generated@@159 (T@U) T@U)
(declare-fun $generated@@163 (T@T) T@U)
(declare-fun $generated@@164 (T@U) Int)
(declare-fun $generated@@165 (T@T) T@T)
(declare-fun $generated@@166 (T@T) T@T)
(declare-fun $generated@@171 (T@U T@U) T@U)
(declare-fun $generated@@178 (T@U Int) T@U)
(declare-fun $generated@@188 (T@U) T@U)
(declare-fun $generated@@189 (T@T T@U) T@U)
(declare-fun $generated@@190 () T@T)
(declare-fun $generated@@196 (Int Int) Int)
(declare-fun $generated@@199 (T@U) T@U)
(declare-fun $generated@@200 (T@U) T@U)
(assert  (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (= ($generated@@1 $generated@@2) 0) (= ($generated@@1 $generated@@3) 1)) (= ($generated@@1 $generated@@4) 2)) (= ($generated@@1 $generated@@5) 3)) (= ($generated@@1 $generated@@6) 4)) (= ($generated@@1 $generated@@7) 5)) (forall (($generated@@18 Int) ) (! (= ($generated ($generated@@8 $generated@@18)) $generated@@18)
 :pattern ( ($generated@@8 $generated@@18))
))) (forall (($generated@@19 T@U) ) (!  (=> (= (type $generated@@19) $generated@@2) (= ($generated@@8 ($generated $generated@@19)) $generated@@19))
 :pattern ( ($generated $generated@@19))
))) (forall (($generated@@20 Int) ) (! (= (type ($generated@@8 $generated@@20)) $generated@@2)
 :pattern ( ($generated@@8 $generated@@20))
))) (forall (($generated@@21 Real) ) (! (= ($generated@@10 ($generated@@9 $generated@@21)) $generated@@21)
 :pattern ( ($generated@@9 $generated@@21))
))) (forall (($generated@@22 T@U) ) (!  (=> (= (type $generated@@22) $generated@@3) (= ($generated@@9 ($generated@@10 $generated@@22)) $generated@@22))
 :pattern ( ($generated@@10 $generated@@22))
))) (forall (($generated@@23 Real) ) (! (= (type ($generated@@9 $generated@@23)) $generated@@3)
 :pattern ( ($generated@@9 $generated@@23))
))) (forall (($generated@@24 Bool) ) (! (= ($generated@@0 ($generated@@11 $generated@@24)) $generated@@24)
 :pattern ( ($generated@@11 $generated@@24))
))) (forall (($generated@@25 T@U) ) (!  (=> (= (type $generated@@25) $generated@@4) (= ($generated@@11 ($generated@@0 $generated@@25)) $generated@@25))
 :pattern ( ($generated@@0 $generated@@25))
))) (forall (($generated@@26 Bool) ) (! (= (type ($generated@@11 $generated@@26)) $generated@@4)
 :pattern ( ($generated@@11 $generated@@26))
))) (forall (($generated@@27 RoundingMode) ) (! (= ($generated@@13 ($generated@@12 $generated@@27)) $generated@@27)
 :pattern ( ($generated@@12 $generated@@27))
))) (forall (($generated@@28 T@U) ) (!  (=> (= (type $generated@@28) $generated@@5) (= ($generated@@12 ($generated@@13 $generated@@28)) $generated@@28))
 :pattern ( ($generated@@13 $generated@@28))
))) (forall (($generated@@29 RoundingMode) ) (! (= (type ($generated@@12 $generated@@29)) $generated@@5)
 :pattern ( ($generated@@12 $generated@@29))
))) (forall (($generated@@30 String) ) (! (= ($generated@@15 ($generated@@14 $generated@@30)) $generated@@30)
 :pattern ( ($generated@@14 $generated@@30))
))) (forall (($generated@@31 T@U) ) (!  (=> (= (type $generated@@31) $generated@@6) (= ($generated@@14 ($generated@@15 $generated@@31)) $generated@@31))
 :pattern ( ($generated@@15 $generated@@31))
))) (forall (($generated@@32 String) ) (! (= (type ($generated@@14 $generated@@32)) $generated@@6)
 :pattern ( ($generated@@14 $generated@@32))
))) (forall (($generated@@33 (RegEx String)) ) (! (= ($generated@@17 ($generated@@16 $generated@@33)) $generated@@33)
 :pattern ( ($generated@@16 $generated@@33))
))) (forall (($generated@@34 T@U) ) (!  (=> (= (type $generated@@34) $generated@@7) (= ($generated@@16 ($generated@@17 $generated@@34)) $generated@@34))
 :pattern ( ($generated@@17 $generated@@34))
))) (forall (($generated@@35 (RegEx String)) ) (! (= (type ($generated@@16 $generated@@35)) $generated@@7)
 :pattern ( ($generated@@16 $generated@@35))
))))
(assert (forall (($generated@@36 T@U) ) (! (UOrdering2 $generated@@36 $generated@@36)
 :no-pattern ($generated $generated@@36)
 :no-pattern ($generated@@0 $generated@@36)
)))
(assert (forall (($generated@@37 T@U) ($generated@@38 T@U) ($generated@@39 T@U) ) (! (let (($generated@@40 (type $generated@@37)))
 (=> (and (and (= (type $generated@@38) $generated@@40) (= (type $generated@@39) $generated@@40)) (and (UOrdering2 $generated@@37 $generated@@38) (UOrdering2 $generated@@38 $generated@@39))) (UOrdering2 $generated@@37 $generated@@39)))
 :pattern ( (UOrdering2 $generated@@37 $generated@@38) (UOrdering2 $generated@@38 $generated@@39))
)))
(assert (forall (($generated@@41 T@U) ($generated@@42 T@U) ) (! (let (($generated@@43 (type $generated@@41)))
 (=> (= (type $generated@@42) $generated@@43) (=> (and (UOrdering2 $generated@@41 $generated@@42) (UOrdering2 $generated@@42 $generated@@41)) (= $generated@@41 $generated@@42))))
 :pattern ( (UOrdering2 $generated@@41 $generated@@42) (UOrdering2 $generated@@42 $generated@@41))
)))
(assert  (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (forall (($generated@@61 T@T) ($generated@@62 T@T) ) (= ($generated@@1 ($generated@@48 $generated@@61 $generated@@62)) 6)) (forall (($generated@@63 T@T) ($generated@@64 T@T) ) (! (= ($generated@@53 ($generated@@48 $generated@@63 $generated@@64)) $generated@@63)
 :pattern ( ($generated@@48 $generated@@63 $generated@@64))
))) (forall (($generated@@65 T@T) ($generated@@66 T@T) ) (! (= ($generated@@54 ($generated@@48 $generated@@65 $generated@@66)) $generated@@66)
 :pattern ( ($generated@@48 $generated@@65 $generated@@66))
))) (forall (($generated@@67 T@U) ($generated@@68 T@U) ) (! (let (($generated@@69 ($generated@@54 (type $generated@@67))))
(= (type ($generated@@52 $generated@@67 $generated@@68)) $generated@@69))
 :pattern ( ($generated@@52 $generated@@67 $generated@@68))
))) (forall (($generated@@70 T@U) ($generated@@71 T@U) ($generated@@72 T@U) ) (! (let (($generated@@73 (type $generated@@72)))
(let (($generated@@74 (type $generated@@71)))
(= (type ($generated@@55 $generated@@70 $generated@@71 $generated@@72)) ($generated@@48 $generated@@74 $generated@@73))))
 :pattern ( ($generated@@55 $generated@@70 $generated@@71 $generated@@72))
))) (forall (($generated@@75 T@U) ($generated@@76 T@U) ($generated@@77 T@U) ) (! (let (($generated@@78 ($generated@@54 (type $generated@@75))))
 (=> (= (type $generated@@77) $generated@@78) (= ($generated@@52 ($generated@@55 $generated@@75 $generated@@76 $generated@@77) $generated@@76) $generated@@77)))
 :weight 0
))) (and (forall (($generated@@79 T@U) ($generated@@80 T@U) ($generated@@81 T@U) ($generated@@82 T@U) ) (!  (or (= $generated@@81 $generated@@82) (= ($generated@@52 ($generated@@55 $generated@@80 $generated@@81 $generated@@79) $generated@@82) ($generated@@52 $generated@@80 $generated@@82)))
 :weight 0
)) (forall (($generated@@83 T@U) ($generated@@84 T@U) ($generated@@85 T@U) ($generated@@86 T@U) ) (!  (or true (= ($generated@@52 ($generated@@55 $generated@@84 $generated@@85 $generated@@83) $generated@@86) ($generated@@52 $generated@@84 $generated@@86)))
 :weight 0
)))) (forall (($generated@@87 T@T) ) (= ($generated@@1 ($generated@@50 $generated@@87)) 7))) (forall (($generated@@88 T@T) ) (! (= ($generated@@46 ($generated@@50 $generated@@88)) $generated@@88)
 :pattern ( ($generated@@50 $generated@@88))
))) (forall (($generated@@89 T@U) ($generated@@90 T@U) ) (! (let (($generated@@91 ($generated@@46 (type $generated@@90))))
(= (type ($generated@@51 $generated@@89 $generated@@90)) $generated@@91))
 :pattern ( ($generated@@51 $generated@@89 $generated@@90))
))) (= ($generated@@1 $generated@@49) 8)) (forall (($generated@@92 T@U) ($generated@@93 T@U) ($generated@@94 T@U) ) (! (= (type ($generated@@56 $generated@@92 $generated@@93 $generated@@94)) $generated@@49)
 :pattern ( ($generated@@56 $generated@@92 $generated@@93 $generated@@94))
))) (forall (($generated@@95 T@U) ($generated@@96 T@U) ($generated@@97 T@U) ) (! (let (($generated@@98 ($generated@@46 (type $generated@@96))))
 (=> (= (type $generated@@97) $generated@@98) (= ($generated@@51 ($generated@@56 $generated@@95 $generated@@96 $generated@@97) $generated@@96) $generated@@97)))
 :weight 0
))) (and (forall (($generated@@99 T@U) ($generated@@100 T@U) ($generated@@101 T@U) ($generated@@102 T@U) ) (!  (or (= $generated@@101 $generated@@102) (= ($generated@@51 ($generated@@56 $generated@@100 $generated@@101 $generated@@99) $generated@@102) ($generated@@51 $generated@@100 $generated@@102)))
 :weight 0
)) (forall (($generated@@103 T@U) ($generated@@104 T@U) ($generated@@105 T@U) ($generated@@106 T@U) ) (!  (or true (= ($generated@@51 ($generated@@56 $generated@@104 $generated@@105 $generated@@103) $generated@@106) ($generated@@51 $generated@@104 $generated@@106)))
 :weight 0
)))) (= ($generated@@1 $generated@@47) 9)) (forall (($generated@@107 T@T) ($generated@@108 T@T) ) (= ($generated@@1 ($generated@@57 $generated@@107 $generated@@108)) 10))) (forall (($generated@@109 T@T) ($generated@@110 T@T) ) (! (= ($generated@@58 ($generated@@57 $generated@@109 $generated@@110)) $generated@@109)
 :pattern ( ($generated@@57 $generated@@109 $generated@@110))
))) (forall (($generated@@111 T@T) ($generated@@112 T@T) ) (! (= ($generated@@59 ($generated@@57 $generated@@111 $generated@@112)) $generated@@112)
 :pattern ( ($generated@@57 $generated@@111 $generated@@112))
))) (forall (($generated@@113 T@U) ($generated@@114 T@U) ($generated@@115 T@U) ) (! (let (($generated@@116 ($generated@@59 (type $generated@@113))))
(= (type ($generated@@44 $generated@@113 $generated@@114 $generated@@115)) $generated@@116))
 :pattern ( ($generated@@44 $generated@@113 $generated@@114 $generated@@115))
))) (forall (($generated@@117 T@U) ($generated@@118 T@U) ($generated@@119 T@U) ($generated@@120 T@U) ) (! (let (($generated@@121 (type $generated@@120)))
(let (($generated@@122 (type $generated@@118)))
(= (type ($generated@@60 $generated@@117 $generated@@118 $generated@@119 $generated@@120)) ($generated@@57 $generated@@122 $generated@@121))))
 :pattern ( ($generated@@60 $generated@@117 $generated@@118 $generated@@119 $generated@@120))
))) (forall (($generated@@123 T@U) ($generated@@124 T@U) ($generated@@125 T@U) ($generated@@126 T@U) ) (! (let (($generated@@127 ($generated@@59 (type $generated@@123))))
 (=> (= (type $generated@@126) $generated@@127) (= ($generated@@44 ($generated@@60 $generated@@123 $generated@@124 $generated@@125 $generated@@126) $generated@@124 $generated@@125) $generated@@126)))
 :weight 0
))) (and (and (forall (($generated@@128 T@U) ($generated@@129 T@U) ($generated@@130 T@U) ($generated@@131 T@U) ($generated@@132 T@U) ($generated@@133 T@U) ) (!  (or (= $generated@@130 $generated@@132) (= ($generated@@44 ($generated@@60 $generated@@129 $generated@@130 $generated@@131 $generated@@128) $generated@@132 $generated@@133) ($generated@@44 $generated@@129 $generated@@132 $generated@@133)))
 :weight 0
)) (forall (($generated@@134 T@U) ($generated@@135 T@U) ($generated@@136 T@U) ($generated@@137 T@U) ($generated@@138 T@U) ($generated@@139 T@U) ) (!  (or (= $generated@@137 $generated@@139) (= ($generated@@44 ($generated@@60 $generated@@135 $generated@@136 $generated@@137 $generated@@134) $generated@@138 $generated@@139) ($generated@@44 $generated@@135 $generated@@138 $generated@@139)))
 :weight 0
))) (forall (($generated@@140 T@U) ($generated@@141 T@U) ($generated@@142 T@U) ($generated@@143 T@U) ($generated@@144 T@U) ($generated@@145 T@U) ) (!  (or true (= ($generated@@44 ($generated@@60 $generated@@141 $generated@@142 $generated@@143 $generated@@140) $generated@@144 $generated@@145) ($generated@@44 $generated@@141 $generated@@144 $generated@@145)))
 :weight 0
)))) (forall (($generated@@146 T@U) ($generated@@147 T@U) ($generated@@148 T@U) ($generated@@149 Bool) ) (! (= (type ($generated@@45 $generated@@146 $generated@@147 $generated@@148 $generated@@149)) ($generated@@57 $generated@@47 $generated@@4))
 :pattern ( ($generated@@45 $generated@@146 $generated@@147 $generated@@148 $generated@@149))
))))
(assert (forall (($generated@@150 T@U) ($generated@@151 T@U) ($generated@@152 T@U) ($generated@@153 Bool) ($generated@@154 T@U) ($generated@@155 T@U) ) (! (let (($generated@@156 ($generated@@46 (type $generated@@155))))
 (=> (and (and (and (and (= (type $generated@@150) $generated@@47) (= (type $generated@@151) ($generated@@48 $generated@@47 $generated@@49))) (= (type $generated@@152) ($generated@@50 $generated@@4))) (= (type $generated@@154) $generated@@47)) (= (type $generated@@155) ($generated@@50 $generated@@156))) (= ($generated@@0 ($generated@@44 ($generated@@45 $generated@@150 $generated@@151 $generated@@152 $generated@@153) $generated@@154 $generated@@155))  (=> (and (not (= $generated@@154 $generated@@150)) ($generated@@0 ($generated@@51 ($generated@@52 $generated@@151 $generated@@154) $generated@@152))) $generated@@153))))
 :pattern ( ($generated@@44 ($generated@@45 $generated@@150 $generated@@151 $generated@@152 $generated@@153) $generated@@154 $generated@@155))
)))
(assert (forall (($generated@@158 Int) ) (! (= ($generated@@157 $generated@@158) $generated@@158)
 :pattern ( ($generated@@157 $generated@@158))
)))
(assert (forall (($generated@@160 T@U) ) (! (let (($generated@@161 (type $generated@@160)))
(= (type ($generated@@159 $generated@@160)) $generated@@161))
 :pattern ( ($generated@@159 $generated@@160))
)))
(assert (forall (($generated@@162 T@U) ) (! (= ($generated@@159 $generated@@162) $generated@@162)
 :pattern ( ($generated@@159 $generated@@162))
)))
(assert  (and (and (forall (($generated@@167 T@T) ) (= ($generated@@1 ($generated@@165 $generated@@167)) 11)) (forall (($generated@@168 T@T) ) (! (= ($generated@@166 ($generated@@165 $generated@@168)) $generated@@168)
 :pattern ( ($generated@@165 $generated@@168))
))) (forall (($generated@@169 T@T) ) (! (= (type ($generated@@163 $generated@@169)) ($generated@@165 $generated@@169))
 :pattern ( ($generated@@163 $generated@@169))
))))
(assert (forall (($generated@@170 T@T) ) (! (= ($generated@@164 ($generated@@163 $generated@@170)) 0)
 :pattern ( ($generated@@163 $generated@@170))
)))
(assert (forall (($generated@@172 T@U) ($generated@@173 T@U) ) (! (let (($generated@@174 (type $generated@@173)))
(= (type ($generated@@171 $generated@@172 $generated@@173)) ($generated@@165 $generated@@174)))
 :pattern ( ($generated@@171 $generated@@172 $generated@@173))
)))
(assert (forall (($generated@@175 T@U) ($generated@@176 T@U) ) (! (let (($generated@@177 (type $generated@@176)))
 (=> (= (type $generated@@175) ($generated@@165 $generated@@177)) (= ($generated@@164 ($generated@@171 $generated@@175 $generated@@176)) (+ 1 ($generated@@164 $generated@@175)))))
 :pattern ( ($generated@@171 $generated@@175 $generated@@176))
)))
(assert (forall (($generated@@179 T@U) ($generated@@180 Int) ) (! (let (($generated@@181 ($generated@@166 (type $generated@@179))))
(= (type ($generated@@178 $generated@@179 $generated@@180)) $generated@@181))
 :pattern ( ($generated@@178 $generated@@179 $generated@@180))
)))
(assert (forall (($generated@@182 T@U) ($generated@@183 Int) ($generated@@184 T@U) ) (! (let (($generated@@185 (type $generated@@184)))
 (=> (= (type $generated@@182) ($generated@@165 $generated@@185)) (and (=> (= $generated@@183 ($generated@@164 $generated@@182)) (= ($generated@@178 ($generated@@171 $generated@@182 $generated@@184) $generated@@183) $generated@@184)) (=> (not (= $generated@@183 ($generated@@164 $generated@@182))) (= ($generated@@178 ($generated@@171 $generated@@182 $generated@@184) $generated@@183) ($generated@@178 $generated@@182 $generated@@183))))))
 :pattern ( ($generated@@178 ($generated@@171 $generated@@182 $generated@@184) $generated@@183))
)))
(assert (forall (($generated@@186 T@U) ) (! (let (($generated@@187 ($generated@@166 (type $generated@@186))))
 (=> (= (type $generated@@186) ($generated@@165 $generated@@187)) (<= 0 ($generated@@164 $generated@@186))))
 :pattern ( ($generated@@164 $generated@@186))
)))
(assert  (and (and (= ($generated@@1 $generated@@190) 12) (forall (($generated@@191 T@U) ) (! (= (type ($generated@@188 $generated@@191)) $generated@@190)
 :pattern ( ($generated@@188 $generated@@191))
))) (forall (($generated@@192 T@T) ($generated@@193 T@U) ) (! (= (type ($generated@@189 $generated@@192 $generated@@193)) $generated@@192)
 :pattern ( ($generated@@189 $generated@@192 $generated@@193))
))))
(assert (forall (($generated@@194 T@U) ) (! (let (($generated@@195 (type $generated@@194)))
(= ($generated@@189 $generated@@195 ($generated@@188 $generated@@194)) $generated@@194))
 :pattern ( ($generated@@188 $generated@@194))
)))
(assert (forall (($generated@@197 Int) ($generated@@198 Int) ) (! (= ($generated@@196 $generated@@197 $generated@@198) (mod $generated@@197 $generated@@198))
 :pattern ( ($generated@@196 $generated@@197 $generated@@198))
)))
(assert  (and (forall (($generated@@201 T@U) ) (! (let (($generated@@202 ($generated@@166 (type $generated@@201))))
(= (type ($generated@@199 $generated@@201)) ($generated@@165 $generated@@202)))
 :pattern ( ($generated@@199 $generated@@201))
)) (forall (($generated@@203 T@U) ) (! (let (($generated@@204 ($generated@@166 (type $generated@@203))))
(= (type ($generated@@200 $generated@@203)) $generated@@204))
 :pattern ( ($generated@@200 $generated@@203))
))))
(assert (forall (($generated@@205 T@U) ($generated@@206 T@U) ) (! (let (($generated@@207 (type $generated@@206)))
 (=> (= (type $generated@@205) ($generated@@165 $generated@@207)) (and (= ($generated@@199 ($generated@@171 $generated@@205 $generated@@206)) $generated@@205) (= ($generated@@200 ($generated@@171 $generated@@205 $generated@@206)) $generated@@206))))
 :pattern ( ($generated@@171 $generated@@205 $generated@@206))
)))
(assert (forall (($generated@@208 Int) ) (! (= ($generated@@188 ($generated@@8 ($generated@@157 $generated@@208))) ($generated@@159 ($generated@@188 ($generated@@8 $generated@@208))))
 :pattern ( ($generated@@188 ($generated@@8 ($generated@@157 $generated@@208))))
)))
(assert (forall (($generated@@209 T@U) ) (! (= ($generated@@188 ($generated@@159 $generated@@209)) ($generated@@159 ($generated@@188 $generated@@209)))
 :pattern ( ($generated@@188 ($generated@@159 $generated@@209)))
)))
(assert (forall (($generated@@210 T@U) ) (! (let (($generated@@211 ($generated@@166 (type $generated@@210))))
 (=> (and (= (type $generated@@210) ($generated@@165 $generated@@211)) (= ($generated@@164 $generated@@210) 0)) (= $generated@@210 ($generated@@163 $generated@@211))))
 :pattern ( ($generated@@164 $generated@@210))
)))
(push 1)
(declare-fun ControlFlow (Int Int) Int)
(declare-fun $generated@@212 () Int)
(declare-fun $generated@@213 () Int)
(declare-fun $generated@@214 () T@U)
(declare-fun $generated@@215 () T@U)
(declare-fun $generated@@216 () T@U)
(declare-fun $generated@@217 () T@U)
(declare-fun $generated@@218 (T@U) Bool)
(declare-fun $generated@@219 (T@U) Bool)
(declare-fun $generated@@220 () Int)
(assert  (and (and (and (= (type $generated@@214) ($generated@@57 $generated@@47 $generated@@4)) (= (type $generated@@215) $generated@@47)) (= (type $generated@@216) ($generated@@48 $generated@@47 $generated@@49))) (= (type $generated@@217) ($generated@@50 $generated@@4))))
(set-option :timeout 0)
(set-option :rlimit 0)
(assert (not
 (=> (= (ControlFlow 0 0) 8) (let (($generated@@221  (=> (= $generated@@212 ($generated@@157 0)) (and (=> (= (ControlFlow 0 5) (- 0 6)) (and (<= ($generated@@157 0) $generated@@212) (< $generated@@212 3))) (=> (and (<= ($generated@@157 0) $generated@@212) (< $generated@@212 3)) (=> (= (ControlFlow 0 5) (- 0 4)) (not (= ($generated@@196 ($generated ($generated@@189 $generated@@2 ($generated@@178 ($generated@@159 ($generated@@171 ($generated@@171 ($generated@@171 ($generated@@163 $generated@@190) ($generated@@188 ($generated@@8 ($generated@@157 5)))) ($generated@@188 ($generated@@8 ($generated@@157 7)))) ($generated@@188 ($generated@@8 ($generated@@157 8))))) ($generated@@157 0)))) ($generated@@157 2)) 0))))))))
(let (($generated@@222  (and (=> (= (ControlFlow 0 2) (- 0 3)) (and (<= 0 $generated@@213) (< $generated@@213 ($generated@@164 ($generated@@159 ($generated@@171 ($generated@@171 ($generated@@171 ($generated@@163 $generated@@190) ($generated@@188 ($generated@@8 ($generated@@157 5)))) ($generated@@188 ($generated@@8 ($generated@@157 7)))) ($generated@@188 ($generated@@8 ($generated@@157 8))))))))) (=> (and (<= 0 $generated@@213) (< $generated@@213 ($generated@@164 ($generated@@159 ($generated@@171 ($generated@@171 ($generated@@171 ($generated@@163 $generated@@190) ($generated@@188 ($generated@@8 ($generated@@157 5)))) ($generated@@188 ($generated@@8 ($generated@@157 7)))) ($generated@@188 ($generated@@8 ($generated@@157 8)))))))) (=> (= (ControlFlow 0 2) (- 0 1)) (not (= ($generated@@157 2) 0)))))))
(let (($generated@@223  (=> (= $generated@@214 ($generated@@45 $generated@@215 $generated@@216 $generated@@217 false)) (and (=> (= (ControlFlow 0 7) 2) $generated@@222) (=> (= (ControlFlow 0 7) 5) $generated@@221)))))
(let (($generated@@224  (=> (and ($generated@@218 $generated@@216) ($generated@@219 $generated@@216)) (=> (and (and (<= ($generated@@157 0) $generated@@213) (< $generated@@213 3)) (and (= 1 $generated@@220) (= (ControlFlow 0 8) 7))) $generated@@223))))
$generated@@224)))))
))
(check-sat)
(pop 1)
; Valid
(get-info :rlimit)
(reset)
(set-option :rlimit 0)
; did a full reset
(reset)
(set-option :print-success false)
(set-info :smt-lib-version 2.6)
(set-option :auto_config false)
(set-option :type_check true)
(set-option :smt.case_split 3)
(set-option :smt.qi.eager_threshold 100)
(set-option :smt.delay_units true)
(set-option :smt.arith.solver 2)
(set-option :smt.mbqi false)
(set-option :model.compact false)
(set-option :model.v2 true)
(set-option :pp.bv_literals false)
; done setting options


(set-info :category "industrial")
(declare-sort |T@U| 0)
(declare-sort |T@T| 0)
(declare-fun real_pow (Real Real) Real)
(declare-fun UOrdering2 (|T@U| |T@U|) Bool)
(declare-fun UOrdering3 (|T@T| |T@U| |T@U|) Bool)
(declare-fun tickleBool (Bool) Bool)
(assert (and (tickleBool true) (tickleBool false)))
(declare-fun $generated (T@U) Int)
(declare-fun $generated@@0 (T@U) Bool)
(declare-fun $generated@@1 (T@T) Int)
(declare-fun $generated@@2 () T@T)
(declare-fun $generated@@3 () T@T)
(declare-fun $generated@@4 () T@T)
(declare-fun $generated@@5 () T@T)
(declare-fun $generated@@6 () T@T)
(declare-fun $generated@@7 () T@T)
(declare-fun $generated@@8 (Int) T@U)
(declare-fun type (T@U) T@T)
(declare-fun $generated@@9 (Real) T@U)
(declare-fun $generated@@10 (T@U) Real)
(declare-fun $generated@@11 (Bool) T@U)
(declare-fun $generated@@12 (RoundingMode) T@U)
(declare-fun $generated@@13 (T@U) RoundingMode)
(declare-fun $generated@@14 (String) T@U)
(declare-fun $generated@@15 (T@U) String)
(declare-fun $generated@@16 ((RegEx String)) T@U)
(declare-fun $generated@@17 (T@U) (RegEx String))
(declare-fun $generated@@44 (T@U T@U T@U) T@U)
(declare-fun $generated@@45 (T@U T@U T@U Bool) T@U)
(declare-fun $generated@@46 (T@T) T@T)
(declare-fun $generated@@47 () T@T)
(declare-fun $generated@@48 (T@T T@T) T@T)
(declare-fun $generated@@49 () T@T)
(declare-fun $generated@@50 (T@T) T@T)
(declare-fun $generated@@51 (T@U T@U) T@U)
(declare-fun $generated@@52 (T@U T@U) T@U)
(declare-fun $generated@@53 (T@T) T@T)
(declare-fun $generated@@54 (T@T) T@T)
(declare-fun $generated@@55 (T@U T@U T@U) T@U)
(declare-fun $generated@@56 (T@U T@U T@U) T@U)
(declare-fun $generated@@57 (T@T T@T) T@T)
(declare-fun $generated@@58 (T@T) T@T)
(declare-fun $generated@@59 (T@T) T@T)
(declare-fun $generated@@60 (T@U T@U T@U T@U) T@U)
(declare-fun $generated@@157 (Int) Int)
(declare-fun $generated@@159 (T@U) T@U)
(declare-fun $generated@@163 (T@U) T@U)
(declare-fun $generated@@164 (T@T T@U) T@U)
(declare-fun $generated@@165 () T@T)
(declare-fun $generated@@171 (Int Int) Int)
(assert  (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (= ($generated@@1 $generated@@2) 0) (= ($generated@@1 $generated@@3) 1)) (= ($generated@@1 $generated@@4) 2)) (= ($generated@@1 $generated@@5) 3)) (= ($generated@@1 $generated@@6) 4)) (= ($generated@@1 $generated@@7) 5)) (forall (($generated@@18 Int) ) (! (= ($generated ($generated@@8 $generated@@18)) $generated@@18)
 :pattern ( ($generated@@8 $generated@@18))
))) (forall (($generated@@19 T@U) ) (!  (=> (= (type $generated@@19) $generated@@2) (= ($generated@@8 ($generated $generated@@19)) $generated@@19))
 :pattern ( ($generated $generated@@19))
))) (forall (($generated@@20 Int) ) (! (= (type ($generated@@8 $generated@@20)) $generated@@2)
 :pattern ( ($generated@@8 $generated@@20))
))) (forall (($generated@@21 Real) ) (! (= ($generated@@10 ($generated@@9 $generated@@21)) $generated@@21)
 :pattern ( ($generated@@9 $generated@@21))
))) (forall (($generated@@22 T@U) ) (!  (=> (= (type $generated@@22) $generated@@3) (= ($generated@@9 ($generated@@10 $generated@@22)) $generated@@22))
 :pattern ( ($generated@@10 $generated@@22))
))) (forall (($generated@@23 Real) ) (! (= (type ($generated@@9 $generated@@23)) $generated@@3)
 :pattern ( ($generated@@9 $generated@@23))
))) (forall (($generated@@24 Bool) ) (! (= ($generated@@0 ($generated@@11 $generated@@24)) $generated@@24)
 :pattern ( ($generated@@11 $generated@@24))
))) (forall (($generated@@25 T@U) ) (!  (=> (= (type $generated@@25) $generated@@4) (= ($generated@@11 ($generated@@0 $generated@@25)) $generated@@25))
 :pattern ( ($generated@@0 $generated@@25))
))) (forall (($generated@@26 Bool) ) (! (= (type ($generated@@11 $generated@@26)) $generated@@4)
 :pattern ( ($generated@@11 $generated@@26))
))) (forall (($generated@@27 RoundingMode) ) (! (= ($generated@@13 ($generated@@12 $generated@@27)) $generated@@27)
 :pattern ( ($generated@@12 $generated@@27))
))) (forall (($generated@@28 T@U) ) (!  (=> (= (type $generated@@28) $generated@@5) (= ($generated@@12 ($generated@@13 $generated@@28)) $generated@@28))
 :pattern ( ($generated@@13 $generated@@28))
))) (forall (($generated@@29 RoundingMode) ) (! (= (type ($generated@@12 $generated@@29)) $generated@@5)
 :pattern ( ($generated@@12 $generated@@29))
))) (forall (($generated@@30 String) ) (! (= ($generated@@15 ($generated@@14 $generated@@30)) $generated@@30)
 :pattern ( ($generated@@14 $generated@@30))
))) (forall (($generated@@31 T@U) ) (!  (=> (= (type $generated@@31) $generated@@6) (= ($generated@@14 ($generated@@15 $generated@@31)) $generated@@31))
 :pattern ( ($generated@@15 $generated@@31))
))) (forall (($generated@@32 String) ) (! (= (type ($generated@@14 $generated@@32)) $generated@@6)
 :pattern ( ($generated@@14 $generated@@32))
))) (forall (($generated@@33 (RegEx String)) ) (! (= ($generated@@17 ($generated@@16 $generated@@33)) $generated@@33)
 :pattern ( ($generated@@16 $generated@@33))
))) (forall (($generated@@34 T@U) ) (!  (=> (= (type $generated@@34) $generated@@7) (= ($generated@@16 ($generated@@17 $generated@@34)) $generated@@34))
 :pattern ( ($generated@@17 $generated@@34))
))) (forall (($generated@@35 (RegEx String)) ) (! (= (type ($generated@@16 $generated@@35)) $generated@@7)
 :pattern ( ($generated@@16 $generated@@35))
))))
(assert (forall (($generated@@36 T@U) ) (! (UOrdering2 $generated@@36 $generated@@36)
 :no-pattern ($generated $generated@@36)
 :no-pattern ($generated@@0 $generated@@36)
)))
(assert (forall (($generated@@37 T@U) ($generated@@38 T@U) ($generated@@39 T@U) ) (! (let (($generated@@40 (type $generated@@37)))
 (=> (and (and (= (type $generated@@38) $generated@@40) (= (type $generated@@39) $generated@@40)) (and (UOrdering2 $generated@@37 $generated@@38) (UOrdering2 $generated@@38 $generated@@39))) (UOrdering2 $generated@@37 $generated@@39)))
 :pattern ( (UOrdering2 $generated@@37 $generated@@38) (UOrdering2 $generated@@38 $generated@@39))
)))
(assert (forall (($generated@@41 T@U) ($generated@@42 T@U) ) (! (let (($generated@@43 (type $generated@@41)))
 (=> (= (type $generated@@42) $generated@@43) (=> (and (UOrdering2 $generated@@41 $generated@@42) (UOrdering2 $generated@@42 $generated@@41)) (= $generated@@41 $generated@@42))))
 :pattern ( (UOrdering2 $generated@@41 $generated@@42) (UOrdering2 $generated@@42 $generated@@41))
)))
(assert  (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (forall (($generated@@61 T@T) ($generated@@62 T@T) ) (= ($generated@@1 ($generated@@48 $generated@@61 $generated@@62)) 6)) (forall (($generated@@63 T@T) ($generated@@64 T@T) ) (! (= ($generated@@53 ($generated@@48 $generated@@63 $generated@@64)) $generated@@63)
 :pattern ( ($generated@@48 $generated@@63 $generated@@64))
))) (forall (($generated@@65 T@T) ($generated@@66 T@T) ) (! (= ($generated@@54 ($generated@@48 $generated@@65 $generated@@66)) $generated@@66)
 :pattern ( ($generated@@48 $generated@@65 $generated@@66))
))) (forall (($generated@@67 T@U) ($generated@@68 T@U) ) (! (let (($generated@@69 ($generated@@54 (type $generated@@67))))
(= (type ($generated@@52 $generated@@67 $generated@@68)) $generated@@69))
 :pattern ( ($generated@@52 $generated@@67 $generated@@68))
))) (forall (($generated@@70 T@U) ($generated@@71 T@U) ($generated@@72 T@U) ) (! (let (($generated@@73 (type $generated@@72)))
(let (($generated@@74 (type $generated@@71)))
(= (type ($generated@@55 $generated@@70 $generated@@71 $generated@@72)) ($generated@@48 $generated@@74 $generated@@73))))
 :pattern ( ($generated@@55 $generated@@70 $generated@@71 $generated@@72))
))) (forall (($generated@@75 T@U) ($generated@@76 T@U) ($generated@@77 T@U) ) (! (let (($generated@@78 ($generated@@54 (type $generated@@75))))
 (=> (= (type $generated@@77) $generated@@78) (= ($generated@@52 ($generated@@55 $generated@@75 $generated@@76 $generated@@77) $generated@@76) $generated@@77)))
 :weight 0
))) (and (forall (($generated@@79 T@U) ($generated@@80 T@U) ($generated@@81 T@U) ($generated@@82 T@U) ) (!  (or (= $generated@@81 $generated@@82) (= ($generated@@52 ($generated@@55 $generated@@80 $generated@@81 $generated@@79) $generated@@82) ($generated@@52 $generated@@80 $generated@@82)))
 :weight 0
)) (forall (($generated@@83 T@U) ($generated@@84 T@U) ($generated@@85 T@U) ($generated@@86 T@U) ) (!  (or true (= ($generated@@52 ($generated@@55 $generated@@84 $generated@@85 $generated@@83) $generated@@86) ($generated@@52 $generated@@84 $generated@@86)))
 :weight 0
)))) (forall (($generated@@87 T@T) ) (= ($generated@@1 ($generated@@50 $generated@@87)) 7))) (forall (($generated@@88 T@T) ) (! (= ($generated@@46 ($generated@@50 $generated@@88)) $generated@@88)
 :pattern ( ($generated@@50 $generated@@88))
))) (forall (($generated@@89 T@U) ($generated@@90 T@U) ) (! (let (($generated@@91 ($generated@@46 (type $generated@@90))))
(= (type ($generated@@51 $generated@@89 $generated@@90)) $generated@@91))
 :pattern ( ($generated@@51 $generated@@89 $generated@@90))
))) (= ($generated@@1 $generated@@49) 8)) (forall (($generated@@92 T@U) ($generated@@93 T@U) ($generated@@94 T@U) ) (! (= (type ($generated@@56 $generated@@92 $generated@@93 $generated@@94)) $generated@@49)
 :pattern ( ($generated@@56 $generated@@92 $generated@@93 $generated@@94))
))) (forall (($generated@@95 T@U) ($generated@@96 T@U) ($generated@@97 T@U) ) (! (let (($generated@@98 ($generated@@46 (type $generated@@96))))
 (=> (= (type $generated@@97) $generated@@98) (= ($generated@@51 ($generated@@56 $generated@@95 $generated@@96 $generated@@97) $generated@@96) $generated@@97)))
 :weight 0
))) (and (forall (($generated@@99 T@U) ($generated@@100 T@U) ($generated@@101 T@U) ($generated@@102 T@U) ) (!  (or (= $generated@@101 $generated@@102) (= ($generated@@51 ($generated@@56 $generated@@100 $generated@@101 $generated@@99) $generated@@102) ($generated@@51 $generated@@100 $generated@@102)))
 :weight 0
)) (forall (($generated@@103 T@U) ($generated@@104 T@U) ($generated@@105 T@U) ($generated@@106 T@U) ) (!  (or true (= ($generated@@51 ($generated@@56 $generated@@104 $generated@@105 $generated@@103) $generated@@106) ($generated@@51 $generated@@104 $generated@@106)))
 :weight 0
)))) (= ($generated@@1 $generated@@47) 9)) (forall (($generated@@107 T@T) ($generated@@108 T@T) ) (= ($generated@@1 ($generated@@57 $generated@@107 $generated@@108)) 10))) (forall (($generated@@109 T@T) ($generated@@110 T@T) ) (! (= ($generated@@58 ($generated@@57 $generated@@109 $generated@@110)) $generated@@109)
 :pattern ( ($generated@@57 $generated@@109 $generated@@110))
))) (forall (($generated@@111 T@T) ($generated@@112 T@T) ) (! (= ($generated@@59 ($generated@@57 $generated@@111 $generated@@112)) $generated@@112)
 :pattern ( ($generated@@57 $generated@@111 $generated@@112))
))) (forall (($generated@@113 T@U) ($generated@@114 T@U) ($generated@@115 T@U) ) (! (let (($generated@@116 ($generated@@59 (type $generated@@113))))
(= (type ($generated@@44 $generated@@113 $generated@@114 $generated@@115)) $generated@@116))
 :pattern ( ($generated@@44 $generated@@113 $generated@@114 $generated@@115))
))) (forall (($generated@@117 T@U) ($generated@@118 T@U) ($generated@@119 T@U) ($generated@@120 T@U) ) (! (let (($generated@@121 (type $generated@@120)))
(let (($generated@@122 (type $generated@@118)))
(= (type ($generated@@60 $generated@@117 $generated@@118 $generated@@119 $generated@@120)) ($generated@@57 $generated@@122 $generated@@121))))
 :pattern ( ($generated@@60 $generated@@117 $generated@@118 $generated@@119 $generated@@120))
))) (forall (($generated@@123 T@U) ($generated@@124 T@U) ($generated@@125 T@U) ($generated@@126 T@U) ) (! (let (($generated@@127 ($generated@@59 (type $generated@@123))))
 (=> (= (type $generated@@126) $generated@@127) (= ($generated@@44 ($generated@@60 $generated@@123 $generated@@124 $generated@@125 $generated@@126) $generated@@124 $generated@@125) $generated@@126)))
 :weight 0
))) (and (and (forall (($generated@@128 T@U) ($generated@@129 T@U) ($generated@@130 T@U) ($generated@@131 T@U) ($generated@@132 T@U) ($generated@@133 T@U) ) (!  (or (= $generated@@130 $generated@@132) (= ($generated@@44 ($generated@@60 $generated@@129 $generated@@130 $generated@@131 $generated@@128) $generated@@132 $generated@@133) ($generated@@44 $generated@@129 $generated@@132 $generated@@133)))
 :weight 0
)) (forall (($generated@@134 T@U) ($generated@@135 T@U) ($generated@@136 T@U) ($generated@@137 T@U) ($generated@@138 T@U) ($generated@@139 T@U) ) (!  (or (= $generated@@137 $generated@@139) (= ($generated@@44 ($generated@@60 $generated@@135 $generated@@136 $generated@@137 $generated@@134) $generated@@138 $generated@@139) ($generated@@44 $generated@@135 $generated@@138 $generated@@139)))
 :weight 0
))) (forall (($generated@@140 T@U) ($generated@@141 T@U) ($generated@@142 T@U) ($generated@@143 T@U) ($generated@@144 T@U) ($generated@@145 T@U) ) (!  (or true (= ($generated@@44 ($generated@@60 $generated@@141 $generated@@142 $generated@@143 $generated@@140) $generated@@144 $generated@@145) ($generated@@44 $generated@@141 $generated@@144 $generated@@145)))
 :weight 0
)))) (forall (($generated@@146 T@U) ($generated@@147 T@U) ($generated@@148 T@U) ($generated@@149 Bool) ) (! (= (type ($generated@@45 $generated@@146 $generated@@147 $generated@@148 $generated@@149)) ($generated@@57 $generated@@47 $generated@@4))
 :pattern ( ($generated@@45 $generated@@146 $generated@@147 $generated@@148 $generated@@149))
))))
(assert (forall (($generated@@150 T@U) ($generated@@151 T@U) ($generated@@152 T@U) ($generated@@153 Bool) ($generated@@154 T@U) ($generated@@155 T@U) ) (! (let (($generated@@156 ($generated@@46 (type $generated@@155))))
 (=> (and (and (and (and (= (type $generated@@150) $generated@@47) (= (type $generated@@151) ($generated@@48 $generated@@47 $generated@@49))) (= (type $generated@@152) ($generated@@50 $generated@@4))) (= (type $generated@@154) $generated@@47)) (= (type $generated@@155) ($generated@@50 $generated@@156))) (= ($generated@@0 ($generated@@44 ($generated@@45 $generated@@150 $generated@@151 $generated@@152 $generated@@153) $generated@@154 $generated@@155))  (=> (and (not (= $generated@@154 $generated@@150)) ($generated@@0 ($generated@@51 ($generated@@52 $generated@@151 $generated@@154) $generated@@152))) $generated@@153))))
 :pattern ( ($generated@@44 ($generated@@45 $generated@@150 $generated@@151 $generated@@152 $generated@@153) $generated@@154 $generated@@155))
)))
(assert (forall (($generated@@158 Int) ) (! (= ($generated@@157 $generated@@158) $generated@@158)
 :pattern ( ($generated@@157 $generated@@158))
)))
(assert (forall (($generated@@160 T@U) ) (! (let (($generated@@161 (type $generated@@160)))
(= (type ($generated@@159 $generated@@160)) $generated@@161))
 :pattern ( ($generated@@159 $generated@@160))
)))
(assert (forall (($generated@@162 T@U) ) (! (= ($generated@@159 $generated@@162) $generated@@162)
 :pattern ( ($generated@@159 $generated@@162))
)))
(assert  (and (and (= ($generated@@1 $generated@@165) 11) (forall (($generated@@166 T@U) ) (! (= (type ($generated@@163 $generated@@166)) $generated@@165)
 :pattern ( ($generated@@163 $generated@@166))
))) (forall (($generated@@167 T@T) ($generated@@168 T@U) ) (! (= (type ($generated@@164 $generated@@167 $generated@@168)) $generated@@167)
 :pattern ( ($generated@@164 $generated@@167 $generated@@168))
))))
(assert (forall (($generated@@169 T@U) ) (! (let (($generated@@170 (type $generated@@169)))
(= ($generated@@164 $generated@@170 ($generated@@163 $generated@@169)) $generated@@169))
 :pattern ( ($generated@@163 $generated@@169))
)))
(assert (forall (($generated@@172 Int) ($generated@@173 Int) ) (! (= ($generated@@171 $generated@@172 $generated@@173) (mod $generated@@172 $generated@@173))
 :pattern ( ($generated@@171 $generated@@172 $generated@@173))
)))
(assert (forall (($generated@@174 Int) ) (! (= ($generated@@163 ($generated@@8 ($generated@@157 $generated@@174))) ($generated@@159 ($generated@@163 ($generated@@8 $generated@@174))))
 :pattern ( ($generated@@163 ($generated@@8 ($generated@@157 $generated@@174))))
)))
(assert (forall (($generated@@175 T@U) ) (! (= ($generated@@163 ($generated@@159 $generated@@175)) ($generated@@159 ($generated@@163 $generated@@175)))
 :pattern ( ($generated@@163 ($generated@@159 $generated@@175)))
)))
(push 1)
(declare-fun ControlFlow (Int Int) Int)
(declare-fun $generated@@176 () T@U)
(declare-fun $generated@@177 () T@U)
(declare-fun $generated@@178 () T@U)
(declare-fun $generated@@179 () T@U)
(declare-fun $generated@@180 (T@U) Bool)
(declare-fun $generated@@181 (T@U) Bool)
(declare-fun $generated@@182 () Int)
(assert  (and (and (and (= (type $generated@@176) ($generated@@57 $generated@@47 $generated@@4)) (= (type $generated@@177) $generated@@47)) (= (type $generated@@178) ($generated@@48 $generated@@47 $generated@@49))) (= (type $generated@@179) ($generated@@50 $generated@@4))))
(set-option :timeout 0)
(set-option :rlimit 0)
(assert (not
 (=> (= (ControlFlow 0 0) 6) (let (($generated@@183  (=> (= (ControlFlow 0 4) (- 0 3)) (= ($generated@@157 ($generated@@171 0 ($generated@@157 2))) ($generated@@157 1)))))
(let (($generated@@184  (=> (= (ControlFlow 0 2) (- 0 1)) (not (= ($generated@@157 2) 0)))))
(let (($generated@@185  (=> (= $generated@@176 ($generated@@45 $generated@@177 $generated@@178 $generated@@179 false)) (and (=> (= (ControlFlow 0 5) 2) $generated@@184) (=> (= (ControlFlow 0 5) 4) $generated@@183)))))
(let (($generated@@186  (=> (and (and ($generated@@180 $generated@@178) ($generated@@181 $generated@@178)) (and (= 0 $generated@@182) (= (ControlFlow 0 6) 5))) $generated@@185)))
$generated@@186)))))
))
(check-sat)
(get-info :reason-unknown)
(assert (not (= (ControlFlow 0 4) (- 3))))
(check-sat)
(pop 1)
; Invalid
(get-info :rlimit)
(reset)
(set-option :rlimit 0)
; did a full reset
(reset)
(set-option :print-success false)
(set-info :smt-lib-version 2.6)
(set-option :auto_config false)
(set-option :type_check true)
(set-option :smt.case_split 3)
(set-option :smt.qi.eager_threshold 100)
(set-option :smt.delay_units true)
(set-option :smt.arith.solver 2)
(set-option :smt.mbqi false)
(set-option :model.compact false)
(set-option :model.v2 true)
(set-option :pp.bv_literals false)
; done setting options


(set-info :category "industrial")
(declare-sort |T@U| 0)
(declare-sort |T@T| 0)
(declare-fun real_pow (Real Real) Real)
(declare-fun UOrdering2 (|T@U| |T@U|) Bool)
(declare-fun UOrdering3 (|T@T| |T@U| |T@U|) Bool)
(declare-fun tickleBool (Bool) Bool)
(assert (and (tickleBool true) (tickleBool false)))
(declare-fun $generated (T@U) Int)
(declare-fun $generated@@0 (T@U) Bool)
(declare-fun $generated@@1 (T@T) Int)
(declare-fun $generated@@2 () T@T)
(declare-fun $generated@@3 () T@T)
(declare-fun $generated@@4 () T@T)
(declare-fun $generated@@5 () T@T)
(declare-fun $generated@@6 () T@T)
(declare-fun $generated@@7 () T@T)
(declare-fun $generated@@8 (Int) T@U)
(declare-fun type (T@U) T@T)
(declare-fun $generated@@9 (Real) T@U)
(declare-fun $generated@@10 (T@U) Real)
(declare-fun $generated@@11 (Bool) T@U)
(declare-fun $generated@@12 (RoundingMode) T@U)
(declare-fun $generated@@13 (T@U) RoundingMode)
(declare-fun $generated@@14 (String) T@U)
(declare-fun $generated@@15 (T@U) String)
(declare-fun $generated@@16 ((RegEx String)) T@U)
(declare-fun $generated@@17 (T@U) (RegEx String))
(declare-fun $generated@@44 () T@U)
(declare-fun $generated@@45 () T@U)
(declare-fun $generated@@46 () T@U)
(declare-fun $generated@@47 () T@U)
(declare-fun $generated@@48 () T@U)
(declare-fun $generated@@49 () T@U)
(declare-fun $generated@@50 () T@U)
(declare-fun $generated@@51 () T@U)
(declare-fun $generated@@52 () T@U)
(declare-fun $generated@@53 () T@U)
(declare-fun $generated@@54 () T@U)
(declare-fun $generated@@55 () T@U)
(declare-fun $generated@@56 () T@U)
(declare-fun $generated@@57 () T@U)
(declare-fun $generated@@58 () T@U)
(declare-fun $generated@@59 () T@U)
(declare-fun $generated@@60 () T@U)
(declare-fun $generated@@61 () T@U)
(declare-fun $generated@@62 () T@U)
(declare-fun $generated@@63 () T@U)
(declare-fun $generated@@64 () T@T)
(declare-fun $generated@@65 () T@T)
(declare-fun $generated@@66 (T@T) T@T)
(declare-fun $generated@@67 (T@T) T@T)
(declare-fun $generated@@68 () T@T)
(declare-fun $generated@@69 () T@T)
(declare-fun $generated@@72 (T@U) T@U)
(declare-fun $generated@@74 (T@U T@U T@U) Bool)
(declare-fun $generated@@75 (Int) T@U)
(declare-fun $generated@@76 (T@T T@T) T@T)
(declare-fun $generated@@77 () T@T)
(declare-fun $generated@@78 () T@T)
(declare-fun $generated@@79 (T@T) T@T)
(declare-fun $generated@@80 (T@T) T@T)
(declare-fun $generated@@81 (T@U T@U) T@U)
(declare-fun $generated@@82 (T@U T@U T@U) T@U)
(declare-fun $generated@@83 (T@U T@U) T@U)
(declare-fun $generated@@84 (T@U T@U T@U) T@U)
(declare-fun $generated@@132 (T@U T@U) Bool)
(declare-fun $generated@@136 (T@U T@U) Bool)
(declare-fun $generated@@138 (T@U) Bool)
(declare-fun $generated@@139 (T@U T@U) T@U)
(declare-fun $generated@@140 () T@T)
(declare-fun $generated@@146 (T@U T@U) Bool)
(declare-fun $generated@@147 (T@U) T@U)
(declare-fun $generated@@148 (T@U) T@U)
(declare-fun $generated@@149 () T@T)
(declare-fun $generated@@154 (T@U) T@U)
(declare-fun $generated@@155 (T@U) Bool)
(declare-fun $generated@@159 (T@U T@U T@U) T@U)
(declare-fun $generated@@160 (T@U T@U T@U Bool) T@U)
(declare-fun $generated@@161 (T@T T@T) T@T)
(declare-fun $generated@@162 (T@T) T@T)
(declare-fun $generated@@163 (T@T) T@T)
(declare-fun $generated@@164 (T@U T@U T@U T@U) T@U)
(declare-fun $generated@@215 (T@U T@U) T@U)
(declare-fun $generated@@216 (T@U T@U) Bool)
(declare-fun $generated@@225 (T@U) T@U)
(declare-fun $generated@@230 (T@U) T@U)
(declare-fun $generated@@235 (Int) Int)
(declare-fun $generated@@237 (T@U) T@U)
(declare-fun $generated@@241 (T@U) Bool)
(declare-fun $generated@@242 (T@U T@U T@U) Bool)
(declare-fun $generated@@248 (T@U) T@U)
(declare-fun $generated@@254 (T@T) T@U)
(declare-fun $generated@@255 (T@U) Int)
(declare-fun $generated@@256 (T@T) T@T)
(declare-fun $generated@@257 (T@T) T@T)
(declare-fun $generated@@262 (T@U) T@U)
(declare-fun $generated@@275 (T@U) Int)
(declare-fun $generated@@276 (T@T) T@U)
(declare-fun $generated@@281 (T@U) T@U)
(declare-fun $generated@@282 (T@T T@T) T@U)
(declare-fun $generated@@283 (T@T T@T) T@T)
(declare-fun $generated@@284 (T@T) T@T)
(declare-fun $generated@@285 (T@T) T@T)
(declare-fun $generated@@299 (T@U) T@U)
(declare-fun $generated@@300 (T@T T@T) T@U)
(declare-fun $generated@@301 (T@T T@T) T@T)
(declare-fun $generated@@302 (T@T) T@T)
(declare-fun $generated@@303 (T@T) T@T)
(declare-fun $generated@@324 (T@U) T@U)
(declare-fun $generated@@335 (T@U) T@U)
(declare-fun $generated@@355 (T@U) T@U)
(declare-fun $generated@@356 (T@T T@U) T@U)
(declare-fun $generated@@357 (T@U) T@U)
(declare-fun $generated@@366 (T@U) T@U)
(declare-fun $generated@@367 (T@U) T@U)
(declare-fun $generated@@384 (T@U T@U) T@U)
(declare-fun $generated@@392 (T@U T@U) T@U)
(declare-fun $generated@@403 (T@T) T@U)
(declare-fun $generated@@427 () T@T)
(declare-fun $generated@@435 (T@U) T@U)
(declare-fun $generated@@439 (T@U) T@U)
(declare-fun $generated@@445 (T@U) T@U)
(declare-fun $generated@@449 (T@U) T@U)
(declare-fun $generated@@457 (T@U) T@U)
(declare-fun $generated@@461 (T@U) T@U)
(declare-fun $generated@@469 (T@U) T@U)
(declare-fun $generated@@470 (T@U Int) T@U)
(declare-fun $generated@@479 (T@U) Int)
(declare-fun $generated@@481 (T@U) T@U)
(declare-fun $generated@@485 (T@U) T@U)
(declare-fun $generated@@489 (T@U) T@U)
(declare-fun $generated@@493 (T@U) T@U)
(declare-fun $generated@@507 (T@U) Int)
(declare-fun $generated@@508 (T@U) Int)
(declare-fun $generated@@524 (Int Int) Int)
(declare-fun $generated@@527 (T@U) T@U)
(declare-fun $generated@@576 (T@U) Int)
(assert  (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (= ($generated@@1 $generated@@2) 0) (= ($generated@@1 $generated@@3) 1)) (= ($generated@@1 $generated@@4) 2)) (= ($generated@@1 $generated@@5) 3)) (= ($generated@@1 $generated@@6) 4)) (= ($generated@@1 $generated@@7) 5)) (forall (($generated@@18 Int) ) (! (= ($generated ($generated@@8 $generated@@18)) $generated@@18)
 :pattern ( ($generated@@8 $generated@@18))
))) (forall (($generated@@19 T@U) ) (!  (=> (= (type $generated@@19) $generated@@2) (= ($generated@@8 ($generated $generated@@19)) $generated@@19))
 :pattern ( ($generated $generated@@19))
))) (forall (($generated@@20 Int) ) (! (= (type ($generated@@8 $generated@@20)) $generated@@2)
 :pattern ( ($generated@@8 $generated@@20))
))) (forall (($generated@@21 Real) ) (! (= ($generated@@10 ($generated@@9 $generated@@21)) $generated@@21)
 :pattern ( ($generated@@9 $generated@@21))
))) (forall (($generated@@22 T@U) ) (!  (=> (= (type $generated@@22) $generated@@3) (= ($generated@@9 ($generated@@10 $generated@@22)) $generated@@22))
 :pattern ( ($generated@@10 $generated@@22))
))) (forall (($generated@@23 Real) ) (! (= (type ($generated@@9 $generated@@23)) $generated@@3)
 :pattern ( ($generated@@9 $generated@@23))
))) (forall (($generated@@24 Bool) ) (! (= ($generated@@0 ($generated@@11 $generated@@24)) $generated@@24)
 :pattern ( ($generated@@11 $generated@@24))
))) (forall (($generated@@25 T@U) ) (!  (=> (= (type $generated@@25) $generated@@4) (= ($generated@@11 ($generated@@0 $generated@@25)) $generated@@25))
 :pattern ( ($generated@@0 $generated@@25))
))) (forall (($generated@@26 Bool) ) (! (= (type ($generated@@11 $generated@@26)) $generated@@4)
 :pattern ( ($generated@@11 $generated@@26))
))) (forall (($generated@@27 RoundingMode) ) (! (= ($generated@@13 ($generated@@12 $generated@@27)) $generated@@27)
 :pattern ( ($generated@@12 $generated@@27))
))) (forall (($generated@@28 T@U) ) (!  (=> (= (type $generated@@28) $generated@@5) (= ($generated@@12 ($generated@@13 $generated@@28)) $generated@@28))
 :pattern ( ($generated@@13 $generated@@28))
))) (forall (($generated@@29 RoundingMode) ) (! (= (type ($generated@@12 $generated@@29)) $generated@@5)
 :pattern ( ($generated@@12 $generated@@29))
))) (forall (($generated@@30 String) ) (! (= ($generated@@15 ($generated@@14 $generated@@30)) $generated@@30)
 :pattern ( ($generated@@14 $generated@@30))
))) (forall (($generated@@31 T@U) ) (!  (=> (= (type $generated@@31) $generated@@6) (= ($generated@@14 ($generated@@15 $generated@@31)) $generated@@31))
 :pattern ( ($generated@@15 $generated@@31))
))) (forall (($generated@@32 String) ) (! (= (type ($generated@@14 $generated@@32)) $generated@@6)
 :pattern ( ($generated@@14 $generated@@32))
))) (forall (($generated@@33 (RegEx String)) ) (! (= ($generated@@17 ($generated@@16 $generated@@33)) $generated@@33)
 :pattern ( ($generated@@16 $generated@@33))
))) (forall (($generated@@34 T@U) ) (!  (=> (= (type $generated@@34) $generated@@7) (= ($generated@@16 ($generated@@17 $generated@@34)) $generated@@34))
 :pattern ( ($generated@@17 $generated@@34))
))) (forall (($generated@@35 (RegEx String)) ) (! (= (type ($generated@@16 $generated@@35)) $generated@@7)
 :pattern ( ($generated@@16 $generated@@35))
))))
(assert (forall (($generated@@36 T@U) ) (! (UOrdering2 $generated@@36 $generated@@36)
 :no-pattern ($generated $generated@@36)
 :no-pattern ($generated@@0 $generated@@36)
)))
(assert (forall (($generated@@37 T@U) ($generated@@38 T@U) ($generated@@39 T@U) ) (! (let (($generated@@40 (type $generated@@37)))
 (=> (and (and (= (type $generated@@38) $generated@@40) (= (type $generated@@39) $generated@@40)) (and (UOrdering2 $generated@@37 $generated@@38) (UOrdering2 $generated@@38 $generated@@39))) (UOrdering2 $generated@@37 $generated@@39)))
 :pattern ( (UOrdering2 $generated@@37 $generated@@38) (UOrdering2 $generated@@38 $generated@@39))
)))
(assert (forall (($generated@@41 T@U) ($generated@@42 T@U) ) (! (let (($generated@@43 (type $generated@@41)))
 (=> (= (type $generated@@42) $generated@@43) (=> (and (UOrdering2 $generated@@41 $generated@@42) (UOrdering2 $generated@@42 $generated@@41)) (= $generated@@41 $generated@@42))))
 :pattern ( (UOrdering2 $generated@@41 $generated@@42) (UOrdering2 $generated@@42 $generated@@41))
)))
(assert  (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (= ($generated@@1 $generated@@64) 6) (= (type $generated@@44) $generated@@64)) (= (type $generated@@45) $generated@@64)) (= (type $generated@@46) $generated@@64)) (= (type $generated@@47) $generated@@64)) (= (type $generated@@48) $generated@@64)) (= ($generated@@1 $generated@@65) 7)) (= (type $generated@@49) $generated@@65)) (= (type $generated@@50) $generated@@65)) (= (type $generated@@51) $generated@@65)) (= (type $generated@@52) $generated@@65)) (= (type $generated@@53) $generated@@65)) (= (type $generated@@54) $generated@@65)) (= (type $generated@@55) $generated@@65)) (= (type $generated@@56) $generated@@65)) (= (type $generated@@57) $generated@@65)) (= (type $generated@@58) $generated@@65)) (= (type $generated@@59) $generated@@65)) (forall (($generated@@70 T@T) ) (= ($generated@@1 ($generated@@66 $generated@@70)) 8))) (forall (($generated@@71 T@T) ) (! (= ($generated@@67 ($generated@@66 $generated@@71)) $generated@@71)
 :pattern ( ($generated@@66 $generated@@71))
))) (= (type $generated@@60) ($generated@@66 $generated@@4))) (= ($generated@@1 $generated@@68) 9)) (= (type $generated@@61) $generated@@68)) (= (type $generated@@62) $generated@@65)) (= ($generated@@1 $generated@@69) 10)) (= (type $generated@@63) $generated@@69)))
(assert (distinct $generated@@44 $generated@@45 $generated@@46 $generated@@47 $generated@@48 $generated@@49 $generated@@50 $generated@@51 $generated@@52 $generated@@53 $generated@@54 $generated@@55 $generated@@56 $generated@@57 $generated@@58 $generated@@59 $generated@@60 $generated@@61 $generated@@62 $generated@@63)
)
(assert (forall (($generated@@73 T@U) ) (! (= (type ($generated@@72 $generated@@73)) $generated@@65)
 :pattern ( ($generated@@72 $generated@@73))
)))
(assert (= ($generated@@72 $generated@@44) $generated@@49))
(assert (= ($generated@@72 $generated@@45) $generated@@50))
(assert (= ($generated@@72 $generated@@46) $generated@@51))
(assert (= ($generated@@72 $generated@@47) $generated@@52))
(assert (= ($generated@@72 $generated@@48) $generated@@53))
(assert  (and (and (and (and (and (and (and (and (and (and (and (and (and (forall (($generated@@85 T@T) ($generated@@86 T@T) ) (= ($generated@@1 ($generated@@76 $generated@@85 $generated@@86)) 11)) (forall (($generated@@87 T@T) ($generated@@88 T@T) ) (! (= ($generated@@79 ($generated@@76 $generated@@87 $generated@@88)) $generated@@87)
 :pattern ( ($generated@@76 $generated@@87 $generated@@88))
))) (forall (($generated@@89 T@T) ($generated@@90 T@T) ) (! (= ($generated@@80 ($generated@@76 $generated@@89 $generated@@90)) $generated@@90)
 :pattern ( ($generated@@76 $generated@@89 $generated@@90))
))) (forall (($generated@@91 T@U) ($generated@@92 T@U) ) (! (let (($generated@@93 ($generated@@80 (type $generated@@91))))
(= (type ($generated@@81 $generated@@91 $generated@@92)) $generated@@93))
 :pattern ( ($generated@@81 $generated@@91 $generated@@92))
))) (forall (($generated@@94 T@U) ($generated@@95 T@U) ($generated@@96 T@U) ) (! (let (($generated@@97 (type $generated@@96)))
(let (($generated@@98 (type $generated@@95)))
(= (type ($generated@@82 $generated@@94 $generated@@95 $generated@@96)) ($generated@@76 $generated@@98 $generated@@97))))
 :pattern ( ($generated@@82 $generated@@94 $generated@@95 $generated@@96))
))) (forall (($generated@@99 T@U) ($generated@@100 T@U) ($generated@@101 T@U) ) (! (let (($generated@@102 ($generated@@80 (type $generated@@99))))
 (=> (= (type $generated@@101) $generated@@102) (= ($generated@@81 ($generated@@82 $generated@@99 $generated@@100 $generated@@101) $generated@@100) $generated@@101)))
 :weight 0
))) (and (forall (($generated@@103 T@U) ($generated@@104 T@U) ($generated@@105 T@U) ($generated@@106 T@U) ) (!  (or (= $generated@@105 $generated@@106) (= ($generated@@81 ($generated@@82 $generated@@104 $generated@@105 $generated@@103) $generated@@106) ($generated@@81 $generated@@104 $generated@@106)))
 :weight 0
)) (forall (($generated@@107 T@U) ($generated@@108 T@U) ($generated@@109 T@U) ($generated@@110 T@U) ) (!  (or true (= ($generated@@81 ($generated@@82 $generated@@108 $generated@@109 $generated@@107) $generated@@110) ($generated@@81 $generated@@108 $generated@@110)))
 :weight 0
)))) (= ($generated@@1 $generated@@77) 12)) (forall (($generated@@111 T@U) ($generated@@112 T@U) ) (! (let (($generated@@113 ($generated@@67 (type $generated@@112))))
(= (type ($generated@@83 $generated@@111 $generated@@112)) $generated@@113))
 :pattern ( ($generated@@83 $generated@@111 $generated@@112))
))) (= ($generated@@1 $generated@@78) 13)) (forall (($generated@@114 T@U) ($generated@@115 T@U) ($generated@@116 T@U) ) (! (= (type ($generated@@84 $generated@@114 $generated@@115 $generated@@116)) $generated@@78)
 :pattern ( ($generated@@84 $generated@@114 $generated@@115 $generated@@116))
))) (forall (($generated@@117 T@U) ($generated@@118 T@U) ($generated@@119 T@U) ) (! (let (($generated@@120 ($generated@@67 (type $generated@@118))))
 (=> (= (type $generated@@119) $generated@@120) (= ($generated@@83 ($generated@@84 $generated@@117 $generated@@118 $generated@@119) $generated@@118) $generated@@119)))
 :weight 0
))) (and (forall (($generated@@121 T@U) ($generated@@122 T@U) ($generated@@123 T@U) ($generated@@124 T@U) ) (!  (or (= $generated@@123 $generated@@124) (= ($generated@@83 ($generated@@84 $generated@@122 $generated@@123 $generated@@121) $generated@@124) ($generated@@83 $generated@@122 $generated@@124)))
 :weight 0
)) (forall (($generated@@125 T@U) ($generated@@126 T@U) ($generated@@127 T@U) ($generated@@128 T@U) ) (!  (or true (= ($generated@@83 ($generated@@84 $generated@@126 $generated@@127 $generated@@125) $generated@@128) ($generated@@83 $generated@@126 $generated@@128)))
 :weight 0
)))) (forall (($generated@@129 Int) ) (! (= (type ($generated@@75 $generated@@129)) $generated@@64)
 :pattern ( ($generated@@75 $generated@@129))
))))
(assert (forall (($generated@@130 T@U) ($generated@@131 T@U) ) (!  (=> (and (= (type $generated@@130) $generated@@2) (= (type $generated@@131) ($generated@@76 $generated@@77 $generated@@78))) ($generated@@74 $generated@@130 ($generated@@75 0) $generated@@131))
 :pattern ( ($generated@@74 $generated@@130 ($generated@@75 0) $generated@@131))
)))
(assert (forall (($generated@@133 T@U) ($generated@@134 T@U) ) (!  (=> (and (and (= (type $generated@@133) ($generated@@76 $generated@@77 $generated@@78)) (= (type $generated@@134) ($generated@@76 $generated@@77 $generated@@78))) ($generated@@132 $generated@@133 $generated@@134)) (forall (($generated@@135 T@U) ) (!  (=> (and (= (type $generated@@135) $generated@@77) ($generated@@0 ($generated@@83 ($generated@@81 $generated@@133 $generated@@135) $generated@@60))) ($generated@@0 ($generated@@83 ($generated@@81 $generated@@134 $generated@@135) $generated@@60)))
 :pattern ( ($generated@@83 ($generated@@81 $generated@@134 $generated@@135) $generated@@60))
)))
 :pattern ( ($generated@@132 $generated@@133 $generated@@134))
)))
(assert (forall (($generated@@137 T@U) ) (!  (=> (= (type $generated@@137) $generated@@2) ($generated@@136 $generated@@137 ($generated@@75 0)))
 :pattern ( ($generated@@136 $generated@@137 ($generated@@75 0)))
)))
(assert  (and (= ($generated@@1 $generated@@140) 14) (forall (($generated@@141 T@U) ($generated@@142 T@U) ) (! (= (type ($generated@@139 $generated@@141 $generated@@142)) $generated@@64)
 :pattern ( ($generated@@139 $generated@@141 $generated@@142))
))))
(assert (forall (($generated@@143 T@U) ($generated@@144 T@U) ($generated@@145 T@U) ) (!  (=> (and (and (and (= (type $generated@@143) $generated@@64) (= (type $generated@@144) $generated@@64)) (= (type $generated@@145) $generated@@140)) ($generated@@136 $generated@@145 ($generated@@139 $generated@@143 $generated@@144))) ($generated@@138 $generated@@145))
 :pattern ( ($generated@@138 $generated@@145) ($generated@@136 $generated@@145 ($generated@@139 $generated@@143 $generated@@144)))
)))
(assert  (and (and (= ($generated@@1 $generated@@149) 15) (forall (($generated@@150 T@U) ) (! (= (type ($generated@@147 $generated@@150)) $generated@@149)
 :pattern ( ($generated@@147 $generated@@150))
))) (forall (($generated@@151 T@U) ) (! (= (type ($generated@@148 $generated@@151)) $generated@@149)
 :pattern ( ($generated@@148 $generated@@151))
))))
(assert (forall (($generated@@152 T@U) ($generated@@153 T@U) ) (!  (=> (and (and (= (type $generated@@152) $generated@@140) (= (type $generated@@153) $generated@@140)) true) (= ($generated@@146 $generated@@152 $generated@@153)  (and (= ($generated@@147 $generated@@152) ($generated@@147 $generated@@153)) (= ($generated@@148 $generated@@152) ($generated@@148 $generated@@153)))))
 :pattern ( ($generated@@146 $generated@@152 $generated@@153))
)))
(assert (forall (($generated@@156 T@U) ) (! (= (type ($generated@@154 $generated@@156)) $generated@@64)
 :pattern ( ($generated@@154 $generated@@156))
)))
(assert (forall (($generated@@157 T@U) ($generated@@158 T@U) ) (!  (=> (and (and (= (type $generated@@157) ($generated@@76 $generated@@149 $generated@@2)) (= (type $generated@@158) $generated@@64)) ($generated@@136 $generated@@157 ($generated@@154 $generated@@158))) ($generated@@155 $generated@@157))
 :pattern ( ($generated@@136 $generated@@157 ($generated@@154 $generated@@158)))
)))
(assert  (and (and (and (and (and (and (and (forall (($generated@@165 T@T) ($generated@@166 T@T) ) (= ($generated@@1 ($generated@@161 $generated@@165 $generated@@166)) 16)) (forall (($generated@@167 T@T) ($generated@@168 T@T) ) (! (= ($generated@@162 ($generated@@161 $generated@@167 $generated@@168)) $generated@@167)
 :pattern ( ($generated@@161 $generated@@167 $generated@@168))
))) (forall (($generated@@169 T@T) ($generated@@170 T@T) ) (! (= ($generated@@163 ($generated@@161 $generated@@169 $generated@@170)) $generated@@170)
 :pattern ( ($generated@@161 $generated@@169 $generated@@170))
))) (forall (($generated@@171 T@U) ($generated@@172 T@U) ($generated@@173 T@U) ) (! (let (($generated@@174 ($generated@@163 (type $generated@@171))))
(= (type ($generated@@159 $generated@@171 $generated@@172 $generated@@173)) $generated@@174))
 :pattern ( ($generated@@159 $generated@@171 $generated@@172 $generated@@173))
))) (forall (($generated@@175 T@U) ($generated@@176 T@U) ($generated@@177 T@U) ($generated@@178 T@U) ) (! (let (($generated@@179 (type $generated@@178)))
(let (($generated@@180 (type $generated@@176)))
(= (type ($generated@@164 $generated@@175 $generated@@176 $generated@@177 $generated@@178)) ($generated@@161 $generated@@180 $generated@@179))))
 :pattern ( ($generated@@164 $generated@@175 $generated@@176 $generated@@177 $generated@@178))
))) (forall (($generated@@181 T@U) ($generated@@182 T@U) ($generated@@183 T@U) ($generated@@184 T@U) ) (! (let (($generated@@185 ($generated@@163 (type $generated@@181))))
 (=> (= (type $generated@@184) $generated@@185) (= ($generated@@159 ($generated@@164 $generated@@181 $generated@@182 $generated@@183 $generated@@184) $generated@@182 $generated@@183) $generated@@184)))
 :weight 0
))) (and (and (forall (($generated@@186 T@U) ($generated@@187 T@U) ($generated@@188 T@U) ($generated@@189 T@U) ($generated@@190 T@U) ($generated@@191 T@U) ) (!  (or (= $generated@@188 $generated@@190) (= ($generated@@159 ($generated@@164 $generated@@187 $generated@@188 $generated@@189 $generated@@186) $generated@@190 $generated@@191) ($generated@@159 $generated@@187 $generated@@190 $generated@@191)))
 :weight 0
)) (forall (($generated@@192 T@U) ($generated@@193 T@U) ($generated@@194 T@U) ($generated@@195 T@U) ($generated@@196 T@U) ($generated@@197 T@U) ) (!  (or (= $generated@@195 $generated@@197) (= ($generated@@159 ($generated@@164 $generated@@193 $generated@@194 $generated@@195 $generated@@192) $generated@@196 $generated@@197) ($generated@@159 $generated@@193 $generated@@196 $generated@@197)))
 :weight 0
))) (forall (($generated@@198 T@U) ($generated@@199 T@U) ($generated@@200 T@U) ($generated@@201 T@U) ($generated@@202 T@U) ($generated@@203 T@U) ) (!  (or true (= ($generated@@159 ($generated@@164 $generated@@199 $generated@@200 $generated@@201 $generated@@198) $generated@@202 $generated@@203) ($generated@@159 $generated@@199 $generated@@202 $generated@@203)))
 :weight 0
)))) (forall (($generated@@204 T@U) ($generated@@205 T@U) ($generated@@206 T@U) ($generated@@207 Bool) ) (! (= (type ($generated@@160 $generated@@204 $generated@@205 $generated@@206 $generated@@207)) ($generated@@161 $generated@@77 $generated@@4))
 :pattern ( ($generated@@160 $generated@@204 $generated@@205 $generated@@206 $generated@@207))
))))
(assert (forall (($generated@@208 T@U) ($generated@@209 T@U) ($generated@@210 T@U) ($generated@@211 Bool) ($generated@@212 T@U) ($generated@@213 T@U) ) (! (let (($generated@@214 ($generated@@67 (type $generated@@213))))
 (=> (and (and (and (and (= (type $generated@@208) $generated@@77) (= (type $generated@@209) ($generated@@76 $generated@@77 $generated@@78))) (= (type $generated@@210) ($generated@@66 $generated@@4))) (= (type $generated@@212) $generated@@77)) (= (type $generated@@213) ($generated@@66 $generated@@214))) (= ($generated@@0 ($generated@@159 ($generated@@160 $generated@@208 $generated@@209 $generated@@210 $generated@@211) $generated@@212 $generated@@213))  (=> (and (not (= $generated@@212 $generated@@208)) ($generated@@0 ($generated@@83 ($generated@@81 $generated@@209 $generated@@212) $generated@@210))) $generated@@211))))
 :pattern ( ($generated@@159 ($generated@@160 $generated@@208 $generated@@209 $generated@@210 $generated@@211) $generated@@212 $generated@@213))
)))
(assert (forall (($generated@@217 T@U) ($generated@@218 T@U) ) (! (= (type ($generated@@215 $generated@@217 $generated@@218)) $generated@@140)
 :pattern ( ($generated@@215 $generated@@217 $generated@@218))
)))
(assert (forall (($generated@@219 T@U) ($generated@@220 T@U) ($generated@@221 T@U) ($generated@@222 T@U) ) (!  (=> (and (and (and (= (type $generated@@219) $generated@@64) (= (type $generated@@220) $generated@@64)) (= (type $generated@@221) $generated@@149)) (= (type $generated@@222) $generated@@149)) (= ($generated@@136 ($generated@@215 $generated@@221 $generated@@222) ($generated@@139 $generated@@219 $generated@@220))  (and ($generated@@216 $generated@@221 $generated@@219) ($generated@@216 $generated@@222 $generated@@220))))
 :pattern ( ($generated@@136 ($generated@@215 $generated@@221 $generated@@222) ($generated@@139 $generated@@219 $generated@@220)))
)))
(assert (forall (($generated@@223 T@U) ($generated@@224 T@U) ) (!  (=> (and (= (type $generated@@223) $generated@@140) (= (type $generated@@224) $generated@@140)) (= ($generated@@146 $generated@@223 $generated@@224) (= $generated@@223 $generated@@224)))
 :pattern ( ($generated@@146 $generated@@223 $generated@@224))
)))
(assert (forall (($generated@@226 T@U) ) (! (= (type ($generated@@225 $generated@@226)) $generated@@64)
 :pattern ( ($generated@@225 $generated@@226))
)))
(assert (forall (($generated@@227 T@U) ($generated@@228 T@U) ) (!  (=> (and (= (type $generated@@227) ($generated@@76 $generated@@149 $generated@@4)) (= (type $generated@@228) $generated@@64)) (= ($generated@@136 $generated@@227 ($generated@@225 $generated@@228)) (forall (($generated@@229 T@U) ) (!  (=> (and (= (type $generated@@229) $generated@@149) ($generated@@0 ($generated@@81 $generated@@227 $generated@@229))) ($generated@@216 $generated@@229 $generated@@228))
 :pattern ( ($generated@@81 $generated@@227 $generated@@229))
))))
 :pattern ( ($generated@@136 $generated@@227 ($generated@@225 $generated@@228)))
)))
(assert (forall (($generated@@231 T@U) ) (! (= (type ($generated@@230 $generated@@231)) $generated@@64)
 :pattern ( ($generated@@230 $generated@@231))
)))
(assert (forall (($generated@@232 T@U) ($generated@@233 T@U) ) (!  (=> (and (= (type $generated@@232) ($generated@@76 $generated@@149 $generated@@4)) (= (type $generated@@233) $generated@@64)) (= ($generated@@136 $generated@@232 ($generated@@230 $generated@@233)) (forall (($generated@@234 T@U) ) (!  (=> (and (= (type $generated@@234) $generated@@149) ($generated@@0 ($generated@@81 $generated@@232 $generated@@234))) ($generated@@216 $generated@@234 $generated@@233))
 :pattern ( ($generated@@81 $generated@@232 $generated@@234))
))))
 :pattern ( ($generated@@136 $generated@@232 ($generated@@230 $generated@@233)))
)))
(assert (forall (($generated@@236 Int) ) (! (= ($generated@@235 $generated@@236) $generated@@236)
 :pattern ( ($generated@@235 $generated@@236))
)))
(assert (forall (($generated@@238 T@U) ) (! (let (($generated@@239 (type $generated@@238)))
(= (type ($generated@@237 $generated@@238)) $generated@@239))
 :pattern ( ($generated@@237 $generated@@238))
)))
(assert (forall (($generated@@240 T@U) ) (! (= ($generated@@237 $generated@@240) $generated@@240)
 :pattern ( ($generated@@237 $generated@@240))
)))
(assert (forall (($generated@@243 T@U) ($generated@@244 T@U) ($generated@@245 T@U) ($generated@@246 T@U) ($generated@@247 T@U) ) (!  (=> (and (and (and (and (and (= (type $generated@@243) $generated@@64) (= (type $generated@@244) $generated@@64)) (= (type $generated@@245) $generated@@149)) (= (type $generated@@246) $generated@@149)) (= (type $generated@@247) ($generated@@76 $generated@@77 $generated@@78))) ($generated@@241 $generated@@247)) (= ($generated@@74 ($generated@@215 $generated@@245 $generated@@246) ($generated@@139 $generated@@243 $generated@@244) $generated@@247)  (and ($generated@@242 $generated@@245 $generated@@243 $generated@@247) ($generated@@242 $generated@@246 $generated@@244 $generated@@247))))
 :pattern ( ($generated@@74 ($generated@@215 $generated@@245 $generated@@246) ($generated@@139 $generated@@243 $generated@@244) $generated@@247))
)))
(assert (forall (($generated@@249 T@U) ) (! (= (type ($generated@@248 $generated@@249)) $generated@@68)
 :pattern ( ($generated@@248 $generated@@249))
)))
(assert (forall (($generated@@250 T@U) ) (!  (=> (= (type $generated@@250) $generated@@140) (= ($generated@@138 $generated@@250) (= ($generated@@248 $generated@@250) $generated@@61)))
 :pattern ( ($generated@@138 $generated@@250))
)))
(assert (forall (($generated@@251 T@U) ) (!  (=> (and (= (type $generated@@251) $generated@@140) ($generated@@138 $generated@@251)) (exists (($generated@@252 T@U) ($generated@@253 T@U) ) (!  (and (and (= (type $generated@@252) $generated@@149) (= (type $generated@@253) $generated@@149)) (= $generated@@251 ($generated@@215 $generated@@252 $generated@@253)))
 :no-pattern (type $generated@@252)
 :no-pattern (type $generated@@253)
 :no-pattern ($generated $generated@@252)
 :no-pattern ($generated@@0 $generated@@252)
 :no-pattern ($generated $generated@@253)
 :no-pattern ($generated@@0 $generated@@253)
)))
 :pattern ( ($generated@@138 $generated@@251))
)))
(assert  (and (and (forall (($generated@@258 T@T) ) (= ($generated@@1 ($generated@@256 $generated@@258)) 17)) (forall (($generated@@259 T@T) ) (! (= ($generated@@257 ($generated@@256 $generated@@259)) $generated@@259)
 :pattern ( ($generated@@256 $generated@@259))
))) (forall (($generated@@260 T@T) ) (! (= (type ($generated@@254 $generated@@260)) ($generated@@256 $generated@@260))
 :pattern ( ($generated@@254 $generated@@260))
))))
(assert (forall (($generated@@261 T@T) ) (! (= ($generated@@255 ($generated@@254 $generated@@261)) 0)
 :pattern ( ($generated@@254 $generated@@261))
)))
(assert (forall (($generated@@263 T@U) ) (! (= (type ($generated@@262 $generated@@263)) $generated@@149)
 :pattern ( ($generated@@262 $generated@@263))
)))
(assert (forall (($generated@@264 T@U) ($generated@@265 T@U) ($generated@@266 T@U) ) (!  (=> (and (= (type $generated@@265) $generated@@64) (= (type $generated@@266) ($generated@@76 $generated@@77 $generated@@78))) (= ($generated@@242 ($generated@@262 $generated@@264) $generated@@265 $generated@@266) ($generated@@74 $generated@@264 $generated@@265 $generated@@266)))
 :pattern ( ($generated@@242 ($generated@@262 $generated@@264) $generated@@265 $generated@@266))
)))
(assert (forall (($generated@@267 T@U) ($generated@@268 T@U) ($generated@@269 T@U) ($generated@@270 T@U) ) (!  (=> (and (and (and (and (and (= (type $generated@@267) ($generated@@76 $generated@@77 $generated@@78)) (= (type $generated@@268) ($generated@@76 $generated@@77 $generated@@78))) (= (type $generated@@269) $generated@@149)) (= (type $generated@@270) $generated@@64)) ($generated@@132 $generated@@267 $generated@@268)) ($generated@@242 $generated@@269 $generated@@270 $generated@@267)) ($generated@@242 $generated@@269 $generated@@270 $generated@@268))
 :pattern ( ($generated@@132 $generated@@267 $generated@@268) ($generated@@242 $generated@@269 $generated@@270 $generated@@267))
)))
(assert (forall (($generated@@271 T@U) ($generated@@272 T@U) ($generated@@273 T@U) ($generated@@274 T@U) ) (!  (=> (and (and (and (and (= (type $generated@@271) ($generated@@76 $generated@@77 $generated@@78)) (= (type $generated@@272) ($generated@@76 $generated@@77 $generated@@78))) (= (type $generated@@274) $generated@@64)) ($generated@@132 $generated@@271 $generated@@272)) ($generated@@74 $generated@@273 $generated@@274 $generated@@271)) ($generated@@74 $generated@@273 $generated@@274 $generated@@272))
 :pattern ( ($generated@@132 $generated@@271 $generated@@272) ($generated@@74 $generated@@273 $generated@@274 $generated@@271))
)))
(assert (forall (($generated@@277 T@T) ) (! (= (type ($generated@@276 $generated@@277)) ($generated@@76 $generated@@277 $generated@@2))
 :pattern ( ($generated@@276 $generated@@277))
)))
(assert (forall (($generated@@278 T@U) ) (! (let (($generated@@279 ($generated@@79 (type $generated@@278))))
 (=> (= (type $generated@@278) ($generated@@76 $generated@@279 $generated@@2)) (and (= (= ($generated@@275 $generated@@278) 0) (= $generated@@278 ($generated@@276 $generated@@279))) (=> (not (= ($generated@@275 $generated@@278) 0)) (exists (($generated@@280 T@U) ) (!  (and (= (type $generated@@280) $generated@@279) (< 0 ($generated ($generated@@81 $generated@@278 $generated@@280))))
 :no-pattern (type $generated@@280)
 :no-pattern ($generated $generated@@280)
 :no-pattern ($generated@@0 $generated@@280)
))))))
 :pattern ( ($generated@@275 $generated@@278))
)))
(assert  (and (and (and (and (forall (($generated@@286 T@T) ($generated@@287 T@T) ) (= ($generated@@1 ($generated@@283 $generated@@286 $generated@@287)) 18)) (forall (($generated@@288 T@T) ($generated@@289 T@T) ) (! (= ($generated@@284 ($generated@@283 $generated@@288 $generated@@289)) $generated@@288)
 :pattern ( ($generated@@283 $generated@@288 $generated@@289))
))) (forall (($generated@@290 T@T) ($generated@@291 T@T) ) (! (= ($generated@@285 ($generated@@283 $generated@@290 $generated@@291)) $generated@@291)
 :pattern ( ($generated@@283 $generated@@290 $generated@@291))
))) (forall (($generated@@292 T@U) ) (! (let (($generated@@293 ($generated@@284 (type $generated@@292))))
(= (type ($generated@@281 $generated@@292)) ($generated@@76 $generated@@293 $generated@@4)))
 :pattern ( ($generated@@281 $generated@@292))
))) (forall (($generated@@294 T@T) ($generated@@295 T@T) ) (! (= (type ($generated@@282 $generated@@294 $generated@@295)) ($generated@@283 $generated@@294 $generated@@295))
 :pattern ( ($generated@@282 $generated@@294 $generated@@295))
))))
(assert (forall (($generated@@296 T@U) ($generated@@297 T@T) ) (! (let (($generated@@298 (type $generated@@296)))
 (not ($generated@@0 ($generated@@81 ($generated@@281 ($generated@@282 $generated@@298 $generated@@297)) $generated@@296))))
 :pattern ( (let (($generated@@298 (type $generated@@296)))
($generated@@81 ($generated@@281 ($generated@@282 $generated@@298 $generated@@297)) $generated@@296)))
)))
(assert  (and (and (and (and (forall (($generated@@304 T@T) ($generated@@305 T@T) ) (= ($generated@@1 ($generated@@301 $generated@@304 $generated@@305)) 19)) (forall (($generated@@306 T@T) ($generated@@307 T@T) ) (! (= ($generated@@302 ($generated@@301 $generated@@306 $generated@@307)) $generated@@306)
 :pattern ( ($generated@@301 $generated@@306 $generated@@307))
))) (forall (($generated@@308 T@T) ($generated@@309 T@T) ) (! (= ($generated@@303 ($generated@@301 $generated@@308 $generated@@309)) $generated@@309)
 :pattern ( ($generated@@301 $generated@@308 $generated@@309))
))) (forall (($generated@@310 T@U) ) (! (let (($generated@@311 ($generated@@302 (type $generated@@310))))
(= (type ($generated@@299 $generated@@310)) ($generated@@76 $generated@@311 $generated@@4)))
 :pattern ( ($generated@@299 $generated@@310))
))) (forall (($generated@@312 T@T) ($generated@@313 T@T) ) (! (= (type ($generated@@300 $generated@@312 $generated@@313)) ($generated@@301 $generated@@312 $generated@@313))
 :pattern ( ($generated@@300 $generated@@312 $generated@@313))
))))
(assert (forall (($generated@@314 T@U) ($generated@@315 T@T) ) (! (let (($generated@@316 (type $generated@@314)))
 (not ($generated@@0 ($generated@@81 ($generated@@299 ($generated@@300 $generated@@316 $generated@@315)) $generated@@314))))
 :pattern ( (let (($generated@@316 (type $generated@@314)))
($generated@@81 ($generated@@299 ($generated@@300 $generated@@316 $generated@@315)) $generated@@314)))
)))
(assert (forall (($generated@@317 T@U) ) (! (let (($generated@@318 ($generated@@79 (type $generated@@317))))
 (=> (= (type $generated@@317) ($generated@@76 $generated@@318 $generated@@2)) (= ($generated@@155 $generated@@317) (forall (($generated@@319 T@U) ) (!  (=> (= (type $generated@@319) $generated@@318) (and (<= 0 ($generated ($generated@@81 $generated@@317 $generated@@319))) (<= ($generated ($generated@@81 $generated@@317 $generated@@319)) ($generated@@275 $generated@@317))))
 :pattern ( ($generated@@81 $generated@@317 $generated@@319))
)))))
 :pattern ( ($generated@@155 $generated@@317))
)))
(assert (forall (($generated@@320 T@U) ) (! (let (($generated@@321 ($generated@@285 (type $generated@@320))))
(let (($generated@@322 ($generated@@284 (type $generated@@320))))
 (=> (= (type $generated@@320) ($generated@@283 $generated@@322 $generated@@321)) (or (= $generated@@320 ($generated@@282 $generated@@322 $generated@@321)) (exists (($generated@@323 T@U) ) (!  (and (= (type $generated@@323) $generated@@322) ($generated@@0 ($generated@@81 ($generated@@281 $generated@@320) $generated@@323)))
 :no-pattern (type $generated@@323)
 :no-pattern ($generated $generated@@323)
 :no-pattern ($generated@@0 $generated@@323)
))))))
 :pattern ( ($generated@@281 $generated@@320))
)))
(assert (forall (($generated@@325 T@U) ) (! (let (($generated@@326 ($generated@@285 (type $generated@@325))))
(= (type ($generated@@324 $generated@@325)) ($generated@@76 $generated@@326 $generated@@4)))
 :pattern ( ($generated@@324 $generated@@325))
)))
(assert (forall (($generated@@327 T@U) ) (! (let (($generated@@328 ($generated@@285 (type $generated@@327))))
(let (($generated@@329 ($generated@@284 (type $generated@@327))))
 (=> (= (type $generated@@327) ($generated@@283 $generated@@329 $generated@@328)) (or (= $generated@@327 ($generated@@282 $generated@@329 $generated@@328)) (exists (($generated@@330 T@U) ) (!  (and (= (type $generated@@330) $generated@@328) ($generated@@0 ($generated@@81 ($generated@@324 $generated@@327) $generated@@330)))
 :no-pattern (type $generated@@330)
 :no-pattern ($generated $generated@@330)
 :no-pattern ($generated@@0 $generated@@330)
))))))
 :pattern ( ($generated@@324 $generated@@327))
)))
(assert (forall (($generated@@331 T@U) ) (! (let (($generated@@332 ($generated@@303 (type $generated@@331))))
(let (($generated@@333 ($generated@@302 (type $generated@@331))))
 (=> (= (type $generated@@331) ($generated@@301 $generated@@333 $generated@@332)) (or (= $generated@@331 ($generated@@300 $generated@@333 $generated@@332)) (exists (($generated@@334 T@U) ) (!  (and (= (type $generated@@334) $generated@@333) ($generated@@0 ($generated@@81 ($generated@@299 $generated@@331) $generated@@334)))
 :no-pattern (type $generated@@334)
 :no-pattern ($generated $generated@@334)
 :no-pattern ($generated@@0 $generated@@334)
))))))
 :pattern ( ($generated@@299 $generated@@331))
)))
(assert (forall (($generated@@336 T@U) ) (! (let (($generated@@337 ($generated@@303 (type $generated@@336))))
(= (type ($generated@@335 $generated@@336)) ($generated@@76 $generated@@337 $generated@@4)))
 :pattern ( ($generated@@335 $generated@@336))
)))
(assert (forall (($generated@@338 T@U) ) (! (let (($generated@@339 ($generated@@303 (type $generated@@338))))
(let (($generated@@340 ($generated@@302 (type $generated@@338))))
 (=> (= (type $generated@@338) ($generated@@301 $generated@@340 $generated@@339)) (or (= $generated@@338 ($generated@@300 $generated@@340 $generated@@339)) (exists (($generated@@341 T@U) ) (!  (and (= (type $generated@@341) $generated@@339) ($generated@@0 ($generated@@81 ($generated@@335 $generated@@338) $generated@@341)))
 :no-pattern (type $generated@@341)
 :no-pattern ($generated $generated@@341)
 :no-pattern ($generated@@0 $generated@@341)
))))))
 :pattern ( ($generated@@335 $generated@@338))
)))
(assert (forall (($generated@@342 T@U) ($generated@@343 T@U) ) (!  (=> (and (= (type $generated@@342) ($generated@@76 $generated@@149 $generated@@2)) (= (type $generated@@343) $generated@@64)) (= ($generated@@136 $generated@@342 ($generated@@154 $generated@@343)) (forall (($generated@@344 T@U) ) (!  (=> (and (= (type $generated@@344) $generated@@149) (< 0 ($generated ($generated@@81 $generated@@342 $generated@@344)))) ($generated@@216 $generated@@344 $generated@@343))
 :pattern ( ($generated@@81 $generated@@342 $generated@@344))
))))
 :pattern ( ($generated@@136 $generated@@342 ($generated@@154 $generated@@343)))
)))
(assert (forall (($generated@@345 T@U) ($generated@@346 T@U) ($generated@@347 T@U) ) (!  (=> (and (and (= (type $generated@@345) ($generated@@76 $generated@@149 $generated@@4)) (= (type $generated@@346) $generated@@64)) (= (type $generated@@347) ($generated@@76 $generated@@77 $generated@@78))) (= ($generated@@74 $generated@@345 ($generated@@225 $generated@@346) $generated@@347) (forall (($generated@@348 T@U) ) (!  (=> (and (= (type $generated@@348) $generated@@149) ($generated@@0 ($generated@@81 $generated@@345 $generated@@348))) ($generated@@242 $generated@@348 $generated@@346 $generated@@347))
 :pattern ( ($generated@@81 $generated@@345 $generated@@348))
))))
 :pattern ( ($generated@@74 $generated@@345 ($generated@@225 $generated@@346) $generated@@347))
)))
(assert (forall (($generated@@349 T@U) ($generated@@350 T@U) ($generated@@351 T@U) ) (!  (=> (and (and (= (type $generated@@349) ($generated@@76 $generated@@149 $generated@@4)) (= (type $generated@@350) $generated@@64)) (= (type $generated@@351) ($generated@@76 $generated@@77 $generated@@78))) (= ($generated@@74 $generated@@349 ($generated@@230 $generated@@350) $generated@@351) (forall (($generated@@352 T@U) ) (!  (=> (and (= (type $generated@@352) $generated@@149) ($generated@@0 ($generated@@81 $generated@@349 $generated@@352))) ($generated@@242 $generated@@352 $generated@@350 $generated@@351))
 :pattern ( ($generated@@81 $generated@@349 $generated@@352))
))))
 :pattern ( ($generated@@74 $generated@@349 ($generated@@230 $generated@@350) $generated@@351))
)))
(assert (forall (($generated@@353 T@U) ) (! (let (($generated@@354 (type $generated@@353)))
(= ($generated ($generated@@81 ($generated@@276 $generated@@354) $generated@@353)) 0))
 :pattern ( (let (($generated@@354 (type $generated@@353)))
($generated@@81 ($generated@@276 $generated@@354) $generated@@353)))
)))
(assert  (and (and (forall (($generated@@358 T@U) ) (! (= (type ($generated@@355 $generated@@358)) ($generated@@76 $generated@@149 $generated@@4))
 :pattern ( ($generated@@355 $generated@@358))
)) (forall (($generated@@359 T@T) ($generated@@360 T@U) ) (! (= (type ($generated@@356 $generated@@359 $generated@@360)) $generated@@359)
 :pattern ( ($generated@@356 $generated@@359 $generated@@360))
))) (forall (($generated@@361 T@U) ) (! (let (($generated@@362 ($generated@@285 (type $generated@@361))))
(let (($generated@@363 ($generated@@284 (type $generated@@361))))
(= (type ($generated@@357 $generated@@361)) ($generated@@76 $generated@@363 $generated@@362))))
 :pattern ( ($generated@@357 $generated@@361))
))))
(assert (forall (($generated@@364 T@U) ($generated@@365 T@U) ) (!  (=> (and (= (type $generated@@364) ($generated@@283 $generated@@149 $generated@@149)) (= (type $generated@@365) $generated@@149)) (= ($generated@@0 ($generated@@81 ($generated@@355 $generated@@364) $generated@@365))  (and ($generated@@0 ($generated@@81 ($generated@@281 $generated@@364) ($generated@@147 ($generated@@356 $generated@@140 $generated@@365)))) (= ($generated@@81 ($generated@@357 $generated@@364) ($generated@@147 ($generated@@356 $generated@@140 $generated@@365))) ($generated@@148 ($generated@@356 $generated@@140 $generated@@365))))))
 :pattern ( ($generated@@81 ($generated@@355 $generated@@364) $generated@@365))
)))
(assert  (and (forall (($generated@@368 T@U) ) (! (= (type ($generated@@366 $generated@@368)) ($generated@@76 $generated@@149 $generated@@4))
 :pattern ( ($generated@@366 $generated@@368))
)) (forall (($generated@@369 T@U) ) (! (let (($generated@@370 ($generated@@303 (type $generated@@369))))
(let (($generated@@371 ($generated@@302 (type $generated@@369))))
(= (type ($generated@@367 $generated@@369)) ($generated@@76 $generated@@371 $generated@@370))))
 :pattern ( ($generated@@367 $generated@@369))
))))
(assert (forall (($generated@@372 T@U) ($generated@@373 T@U) ) (!  (=> (and (= (type $generated@@372) ($generated@@301 $generated@@149 $generated@@149)) (= (type $generated@@373) $generated@@149)) (= ($generated@@0 ($generated@@81 ($generated@@366 $generated@@372) $generated@@373))  (and ($generated@@0 ($generated@@81 ($generated@@299 $generated@@372) ($generated@@147 ($generated@@356 $generated@@140 $generated@@373)))) (= ($generated@@81 ($generated@@367 $generated@@372) ($generated@@147 ($generated@@356 $generated@@140 $generated@@373))) ($generated@@148 ($generated@@356 $generated@@140 $generated@@373))))))
 :pattern ( ($generated@@81 ($generated@@366 $generated@@372) $generated@@373))
)))
(assert (forall (($generated@@374 T@U) ($generated@@375 T@U) ) (! (let (($generated@@376 (type $generated@@375)))
(let (($generated@@377 ($generated@@284 (type $generated@@374))))
 (=> (= (type $generated@@374) ($generated@@283 $generated@@377 $generated@@376)) (= ($generated@@0 ($generated@@81 ($generated@@324 $generated@@374) $generated@@375)) (exists (($generated@@378 T@U) ) (!  (and (= (type $generated@@378) $generated@@377) (and ($generated@@0 ($generated@@81 ($generated@@281 $generated@@374) $generated@@378)) (= $generated@@375 ($generated@@81 ($generated@@357 $generated@@374) $generated@@378))))
 :pattern ( ($generated@@81 ($generated@@281 $generated@@374) $generated@@378))
 :pattern ( ($generated@@81 ($generated@@357 $generated@@374) $generated@@378))
))))))
 :pattern ( ($generated@@81 ($generated@@324 $generated@@374) $generated@@375))
)))
(assert (forall (($generated@@379 T@U) ($generated@@380 T@U) ) (! (let (($generated@@381 (type $generated@@380)))
(let (($generated@@382 ($generated@@302 (type $generated@@379))))
 (=> (= (type $generated@@379) ($generated@@301 $generated@@382 $generated@@381)) (= ($generated@@0 ($generated@@81 ($generated@@335 $generated@@379) $generated@@380)) (exists (($generated@@383 T@U) ) (!  (and (= (type $generated@@383) $generated@@382) (and ($generated@@0 ($generated@@81 ($generated@@299 $generated@@379) $generated@@383)) (= $generated@@380 ($generated@@81 ($generated@@367 $generated@@379) $generated@@383))))
 :pattern ( ($generated@@81 ($generated@@299 $generated@@379) $generated@@383))
 :pattern ( ($generated@@81 ($generated@@367 $generated@@379) $generated@@383))
))))))
 :pattern ( ($generated@@81 ($generated@@335 $generated@@379) $generated@@380))
)))
(assert (forall (($generated@@385 T@U) ($generated@@386 T@U) ) (! (= (type ($generated@@384 $generated@@385 $generated@@386)) $generated@@64)
 :pattern ( ($generated@@384 $generated@@385 $generated@@386))
)))
(assert (forall (($generated@@387 T@U) ($generated@@388 T@U) ($generated@@389 T@U) ($generated@@390 T@U) ) (!  (=> (and (and (and (= (type $generated@@387) ($generated@@283 $generated@@149 $generated@@149)) (= (type $generated@@388) $generated@@64)) (= (type $generated@@389) $generated@@64)) (= (type $generated@@390) ($generated@@76 $generated@@77 $generated@@78))) (= ($generated@@74 $generated@@387 ($generated@@384 $generated@@388 $generated@@389) $generated@@390) (forall (($generated@@391 T@U) ) (!  (=> (and (= (type $generated@@391) $generated@@149) ($generated@@0 ($generated@@81 ($generated@@281 $generated@@387) $generated@@391))) (and ($generated@@242 ($generated@@81 ($generated@@357 $generated@@387) $generated@@391) $generated@@389 $generated@@390) ($generated@@242 $generated@@391 $generated@@388 $generated@@390)))
 :pattern ( ($generated@@81 ($generated@@357 $generated@@387) $generated@@391))
 :pattern ( ($generated@@81 ($generated@@281 $generated@@387) $generated@@391))
))))
 :pattern ( ($generated@@74 $generated@@387 ($generated@@384 $generated@@388 $generated@@389) $generated@@390))
)))
(assert (forall (($generated@@393 T@U) ($generated@@394 T@U) ) (! (= (type ($generated@@392 $generated@@393 $generated@@394)) $generated@@64)
 :pattern ( ($generated@@392 $generated@@393 $generated@@394))
)))
(assert (forall (($generated@@395 T@U) ($generated@@396 T@U) ($generated@@397 T@U) ($generated@@398 T@U) ) (!  (=> (and (and (and (= (type $generated@@395) ($generated@@301 $generated@@149 $generated@@149)) (= (type $generated@@396) $generated@@64)) (= (type $generated@@397) $generated@@64)) (= (type $generated@@398) ($generated@@76 $generated@@77 $generated@@78))) (= ($generated@@74 $generated@@395 ($generated@@392 $generated@@396 $generated@@397) $generated@@398) (forall (($generated@@399 T@U) ) (!  (=> (and (= (type $generated@@399) $generated@@149) ($generated@@0 ($generated@@81 ($generated@@299 $generated@@395) $generated@@399))) (and ($generated@@242 ($generated@@81 ($generated@@367 $generated@@395) $generated@@399) $generated@@397 $generated@@398) ($generated@@242 $generated@@399 $generated@@396 $generated@@398)))
 :pattern ( ($generated@@81 ($generated@@367 $generated@@395) $generated@@399))
 :pattern ( ($generated@@81 ($generated@@299 $generated@@395) $generated@@399))
))))
 :pattern ( ($generated@@74 $generated@@395 ($generated@@392 $generated@@396 $generated@@397) $generated@@398))
)))
(assert (forall (($generated@@400 T@U) ($generated@@401 T@U) ($generated@@402 T@U) ) (!  (=> (and (and (and (and (= (type $generated@@400) ($generated@@76 $generated@@77 $generated@@78)) (= (type $generated@@401) ($generated@@76 $generated@@77 $generated@@78))) (= (type $generated@@402) ($generated@@76 $generated@@77 $generated@@78))) (not (= $generated@@400 $generated@@402))) (and ($generated@@132 $generated@@400 $generated@@401) ($generated@@132 $generated@@401 $generated@@402))) ($generated@@132 $generated@@400 $generated@@402))
 :pattern ( ($generated@@132 $generated@@400 $generated@@401) ($generated@@132 $generated@@401 $generated@@402))
)))
(assert (forall (($generated@@404 T@T) ) (! (= (type ($generated@@403 $generated@@404)) ($generated@@76 $generated@@404 $generated@@4))
 :pattern ( ($generated@@403 $generated@@404))
)))
(assert (forall (($generated@@405 T@U) ) (! (let (($generated@@406 ($generated@@303 (type $generated@@405))))
(let (($generated@@407 ($generated@@302 (type $generated@@405))))
 (=> (= (type $generated@@405) ($generated@@301 $generated@@407 $generated@@406)) (= (= $generated@@405 ($generated@@300 $generated@@407 $generated@@406)) (= ($generated@@299 $generated@@405) ($generated@@403 $generated@@407))))))
 :pattern ( ($generated@@299 $generated@@405))
)))
(assert (forall (($generated@@408 T@U) ) (! (let (($generated@@409 ($generated@@303 (type $generated@@408))))
(let (($generated@@410 ($generated@@302 (type $generated@@408))))
 (=> (= (type $generated@@408) ($generated@@301 $generated@@410 $generated@@409)) (= (= $generated@@408 ($generated@@300 $generated@@410 $generated@@409)) (= ($generated@@335 $generated@@408) ($generated@@403 $generated@@409))))))
 :pattern ( ($generated@@335 $generated@@408))
)))
(assert (forall (($generated@@411 T@U) ) (! (let (($generated@@412 ($generated@@303 (type $generated@@411))))
(let (($generated@@413 ($generated@@302 (type $generated@@411))))
 (=> (= (type $generated@@411) ($generated@@301 $generated@@413 $generated@@412)) (= (= $generated@@411 ($generated@@300 $generated@@413 $generated@@412)) (= ($generated@@366 $generated@@411) ($generated@@403 $generated@@149))))))
 :pattern ( ($generated@@366 $generated@@411))
)))
(assert (forall (($generated@@414 T@U) ) (! (let (($generated@@415 ($generated@@285 (type $generated@@414))))
(let (($generated@@416 ($generated@@284 (type $generated@@414))))
 (=> (= (type $generated@@414) ($generated@@283 $generated@@416 $generated@@415)) (or (= $generated@@414 ($generated@@282 $generated@@416 $generated@@415)) (exists (($generated@@417 T@U) ($generated@@418 T@U) ) (!  (and (and (= (type $generated@@417) $generated@@149) (= (type $generated@@418) $generated@@149)) ($generated@@0 ($generated@@81 ($generated@@355 $generated@@414) ($generated@@262 ($generated@@215 $generated@@417 $generated@@418)))))
 :no-pattern (type $generated@@417)
 :no-pattern (type $generated@@418)
 :no-pattern ($generated $generated@@417)
 :no-pattern ($generated@@0 $generated@@417)
 :no-pattern ($generated $generated@@418)
 :no-pattern ($generated@@0 $generated@@418)
))))))
 :pattern ( ($generated@@355 $generated@@414))
)))
(assert (forall (($generated@@419 T@U) ) (! (let (($generated@@420 ($generated@@303 (type $generated@@419))))
(let (($generated@@421 ($generated@@302 (type $generated@@419))))
 (=> (= (type $generated@@419) ($generated@@301 $generated@@421 $generated@@420)) (or (= $generated@@419 ($generated@@300 $generated@@421 $generated@@420)) (exists (($generated@@422 T@U) ($generated@@423 T@U) ) (!  (and (and (= (type $generated@@422) $generated@@149) (= (type $generated@@423) $generated@@149)) ($generated@@0 ($generated@@81 ($generated@@366 $generated@@419) ($generated@@262 ($generated@@215 $generated@@422 $generated@@423)))))
 :no-pattern (type $generated@@422)
 :no-pattern (type $generated@@423)
 :no-pattern ($generated $generated@@422)
 :no-pattern ($generated@@0 $generated@@422)
 :no-pattern ($generated $generated@@423)
 :no-pattern ($generated@@0 $generated@@423)
))))))
 :pattern ( ($generated@@366 $generated@@419))
)))
(assert (forall (($generated@@424 T@U) ) (!  (=> (and (= (type $generated@@424) $generated@@149) ($generated@@216 $generated@@424 $generated@@46)) (and (= ($generated@@262 ($generated@@356 $generated@@2 $generated@@424)) $generated@@424) ($generated@@136 ($generated@@356 $generated@@2 $generated@@424) $generated@@46)))
 :pattern ( ($generated@@216 $generated@@424 $generated@@46))
)))
(assert (forall (($generated@@425 T@U) ) (!  (=> (and (= (type $generated@@425) $generated@@149) ($generated@@216 $generated@@425 $generated@@47)) (and (= ($generated@@262 ($generated@@356 $generated@@3 $generated@@425)) $generated@@425) ($generated@@136 ($generated@@356 $generated@@3 $generated@@425) $generated@@47)))
 :pattern ( ($generated@@216 $generated@@425 $generated@@47))
)))
(assert (forall (($generated@@426 T@U) ) (!  (=> (and (= (type $generated@@426) $generated@@149) ($generated@@216 $generated@@426 $generated@@44)) (and (= ($generated@@262 ($generated@@356 $generated@@4 $generated@@426)) $generated@@426) ($generated@@136 ($generated@@356 $generated@@4 $generated@@426) $generated@@44)))
 :pattern ( ($generated@@216 $generated@@426 $generated@@44))
)))
(assert (= ($generated@@1 $generated@@427) 20))
(assert (forall (($generated@@428 T@U) ) (!  (=> (and (= (type $generated@@428) $generated@@149) ($generated@@216 $generated@@428 $generated@@45)) (and (= ($generated@@262 ($generated@@356 $generated@@427 $generated@@428)) $generated@@428) ($generated@@136 ($generated@@356 $generated@@427 $generated@@428) $generated@@45)))
 :pattern ( ($generated@@216 $generated@@428 $generated@@45))
)))
(assert (forall (($generated@@429 T@U) ($generated@@430 T@U) ) (!  (=> (= (type $generated@@430) $generated@@64) (= ($generated@@216 ($generated@@262 $generated@@429) $generated@@430) ($generated@@136 $generated@@429 $generated@@430)))
 :pattern ( ($generated@@216 ($generated@@262 $generated@@429) $generated@@430))
)))
(assert (forall (($generated@@431 T@U) ) (! (let (($generated@@432 ($generated@@79 (type $generated@@431))))
 (=> (= (type $generated@@431) ($generated@@76 $generated@@432 $generated@@2)) (<= 0 ($generated@@275 $generated@@431))))
 :pattern ( ($generated@@275 $generated@@431))
)))
(assert (forall (($generated@@433 T@U) ) (! (let (($generated@@434 ($generated@@257 (type $generated@@433))))
 (=> (= (type $generated@@433) ($generated@@256 $generated@@434)) (<= 0 ($generated@@255 $generated@@433))))
 :pattern ( ($generated@@255 $generated@@433))
)))
(assert (forall (($generated@@436 T@U) ) (! (= (type ($generated@@435 $generated@@436)) $generated@@64)
 :pattern ( ($generated@@435 $generated@@436))
)))
(assert (forall (($generated@@437 T@U) ($generated@@438 T@U) ) (!  (=> (and (= (type $generated@@437) $generated@@64) (= (type $generated@@438) $generated@@64)) (= ($generated@@435 ($generated@@384 $generated@@437 $generated@@438)) $generated@@437))
 :pattern ( ($generated@@384 $generated@@437 $generated@@438))
)))
(assert (forall (($generated@@440 T@U) ) (! (= (type ($generated@@439 $generated@@440)) $generated@@64)
 :pattern ( ($generated@@439 $generated@@440))
)))
(assert (forall (($generated@@441 T@U) ($generated@@442 T@U) ) (!  (=> (and (= (type $generated@@441) $generated@@64) (= (type $generated@@442) $generated@@64)) (= ($generated@@439 ($generated@@384 $generated@@441 $generated@@442)) $generated@@442))
 :pattern ( ($generated@@384 $generated@@441 $generated@@442))
)))
(assert (forall (($generated@@443 T@U) ($generated@@444 T@U) ) (!  (=> (and (= (type $generated@@443) $generated@@64) (= (type $generated@@444) $generated@@64)) (= ($generated@@72 ($generated@@384 $generated@@443 $generated@@444)) $generated@@58))
 :pattern ( ($generated@@384 $generated@@443 $generated@@444))
)))
(assert (forall (($generated@@446 T@U) ) (! (= (type ($generated@@445 $generated@@446)) $generated@@64)
 :pattern ( ($generated@@445 $generated@@446))
)))
(assert (forall (($generated@@447 T@U) ($generated@@448 T@U) ) (!  (=> (and (= (type $generated@@447) $generated@@64) (= (type $generated@@448) $generated@@64)) (= ($generated@@445 ($generated@@392 $generated@@447 $generated@@448)) $generated@@447))
 :pattern ( ($generated@@392 $generated@@447 $generated@@448))
)))
(assert (forall (($generated@@450 T@U) ) (! (= (type ($generated@@449 $generated@@450)) $generated@@64)
 :pattern ( ($generated@@449 $generated@@450))
)))
(assert (forall (($generated@@451 T@U) ($generated@@452 T@U) ) (!  (=> (and (= (type $generated@@451) $generated@@64) (= (type $generated@@452) $generated@@64)) (= ($generated@@449 ($generated@@392 $generated@@451 $generated@@452)) $generated@@452))
 :pattern ( ($generated@@392 $generated@@451 $generated@@452))
)))
(assert (forall (($generated@@453 T@U) ($generated@@454 T@U) ) (!  (=> (and (= (type $generated@@453) $generated@@64) (= (type $generated@@454) $generated@@64)) (= ($generated@@72 ($generated@@392 $generated@@453 $generated@@454)) $generated@@59))
 :pattern ( ($generated@@392 $generated@@453 $generated@@454))
)))
(assert (forall (($generated@@455 T@U) ($generated@@456 T@U) ) (!  (=> (and (= (type $generated@@455) $generated@@149) (= (type $generated@@456) $generated@@149)) (= ($generated@@248 ($generated@@215 $generated@@455 $generated@@456)) $generated@@61))
 :pattern ( ($generated@@215 $generated@@455 $generated@@456))
)))
(assert (forall (($generated@@458 T@U) ) (! (= (type ($generated@@457 $generated@@458)) $generated@@64)
 :pattern ( ($generated@@457 $generated@@458))
)))
(assert (forall (($generated@@459 T@U) ($generated@@460 T@U) ) (!  (=> (and (= (type $generated@@459) $generated@@64) (= (type $generated@@460) $generated@@64)) (= ($generated@@457 ($generated@@139 $generated@@459 $generated@@460)) $generated@@459))
 :pattern ( ($generated@@139 $generated@@459 $generated@@460))
)))
(assert (forall (($generated@@462 T@U) ) (! (= (type ($generated@@461 $generated@@462)) $generated@@64)
 :pattern ( ($generated@@461 $generated@@462))
)))
(assert (forall (($generated@@463 T@U) ($generated@@464 T@U) ) (!  (=> (and (= (type $generated@@463) $generated@@64) (= (type $generated@@464) $generated@@64)) (= ($generated@@461 ($generated@@139 $generated@@463 $generated@@464)) $generated@@464))
 :pattern ( ($generated@@139 $generated@@463 $generated@@464))
)))
(assert (forall (($generated@@465 T@U) ($generated@@466 T@U) ) (!  (=> (and (= (type $generated@@465) $generated@@149) (= (type $generated@@466) $generated@@149)) (= ($generated@@147 ($generated@@215 $generated@@465 $generated@@466)) $generated@@465))
 :pattern ( ($generated@@215 $generated@@465 $generated@@466))
)))
(assert (forall (($generated@@467 T@U) ($generated@@468 T@U) ) (!  (=> (and (= (type $generated@@467) $generated@@149) (= (type $generated@@468) $generated@@149)) (= ($generated@@148 ($generated@@215 $generated@@467 $generated@@468)) $generated@@468))
 :pattern ( ($generated@@215 $generated@@467 $generated@@468))
)))
(assert  (and (forall (($generated@@471 T@U) ) (! (= (type ($generated@@469 $generated@@471)) $generated@@64)
 :pattern ( ($generated@@469 $generated@@471))
)) (forall (($generated@@472 T@U) ($generated@@473 Int) ) (! (let (($generated@@474 ($generated@@257 (type $generated@@472))))
(= (type ($generated@@470 $generated@@472 $generated@@473)) $generated@@474))
 :pattern ( ($generated@@470 $generated@@472 $generated@@473))
))))
(assert (forall (($generated@@475 T@U) ($generated@@476 T@U) ($generated@@477 T@U) ) (!  (=> (and (and (= (type $generated@@475) ($generated@@256 $generated@@149)) (= (type $generated@@476) $generated@@64)) (= (type $generated@@477) ($generated@@76 $generated@@77 $generated@@78))) (= ($generated@@74 $generated@@475 ($generated@@469 $generated@@476) $generated@@477) (forall (($generated@@478 Int) ) (!  (=> (and (<= 0 $generated@@478) (< $generated@@478 ($generated@@255 $generated@@475))) ($generated@@242 ($generated@@470 $generated@@475 $generated@@478) $generated@@476 $generated@@477))
 :pattern ( ($generated@@470 $generated@@475 $generated@@478))
))))
 :pattern ( ($generated@@74 $generated@@475 ($generated@@469 $generated@@476) $generated@@477))
)))
(assert (forall (($generated@@480 Int) ) (! (= ($generated@@479 ($generated@@75 $generated@@480)) $generated@@480)
 :pattern ( ($generated@@75 $generated@@480))
)))
(assert (forall (($generated@@482 T@U) ) (! (= (type ($generated@@481 $generated@@482)) $generated@@64)
 :pattern ( ($generated@@481 $generated@@482))
)))
(assert (forall (($generated@@483 T@U) ) (!  (=> (= (type $generated@@483) $generated@@64) (= ($generated@@481 ($generated@@225 $generated@@483)) $generated@@483))
 :pattern ( ($generated@@225 $generated@@483))
)))
(assert (forall (($generated@@484 T@U) ) (!  (=> (= (type $generated@@484) $generated@@64) (= ($generated@@72 ($generated@@225 $generated@@484)) $generated@@54))
 :pattern ( ($generated@@225 $generated@@484))
)))
(assert (forall (($generated@@486 T@U) ) (! (= (type ($generated@@485 $generated@@486)) $generated@@64)
 :pattern ( ($generated@@485 $generated@@486))
)))
(assert (forall (($generated@@487 T@U) ) (!  (=> (= (type $generated@@487) $generated@@64) (= ($generated@@485 ($generated@@230 $generated@@487)) $generated@@487))
 :pattern ( ($generated@@230 $generated@@487))
)))
(assert (forall (($generated@@488 T@U) ) (!  (=> (= (type $generated@@488) $generated@@64) (= ($generated@@72 ($generated@@230 $generated@@488)) $generated@@55))
 :pattern ( ($generated@@230 $generated@@488))
)))
(assert (forall (($generated@@490 T@U) ) (! (= (type ($generated@@489 $generated@@490)) $generated@@64)
 :pattern ( ($generated@@489 $generated@@490))
)))
(assert (forall (($generated@@491 T@U) ) (!  (=> (= (type $generated@@491) $generated@@64) (= ($generated@@489 ($generated@@154 $generated@@491)) $generated@@491))
 :pattern ( ($generated@@154 $generated@@491))
)))
(assert (forall (($generated@@492 T@U) ) (!  (=> (= (type $generated@@492) $generated@@64) (= ($generated@@72 ($generated@@154 $generated@@492)) $generated@@56))
 :pattern ( ($generated@@154 $generated@@492))
)))
(assert (forall (($generated@@494 T@U) ) (! (= (type ($generated@@493 $generated@@494)) $generated@@64)
 :pattern ( ($generated@@493 $generated@@494))
)))
(assert (forall (($generated@@495 T@U) ) (!  (=> (= (type $generated@@495) $generated@@64) (= ($generated@@493 ($generated@@469 $generated@@495)) $generated@@495))
 :pattern ( ($generated@@469 $generated@@495))
)))
(assert (forall (($generated@@496 T@U) ) (!  (=> (= (type $generated@@496) $generated@@64) (= ($generated@@72 ($generated@@469 $generated@@496)) $generated@@57))
 :pattern ( ($generated@@469 $generated@@496))
)))
(assert (forall (($generated@@497 T@U) ) (! (let (($generated@@498 (type $generated@@497)))
(= ($generated@@356 $generated@@498 ($generated@@262 $generated@@497)) $generated@@497))
 :pattern ( ($generated@@262 $generated@@497))
)))
(assert (forall (($generated@@499 T@U) ($generated@@500 T@U) ($generated@@501 T@U) ) (!  (=> (and (and (= (type $generated@@499) ($generated@@283 $generated@@149 $generated@@149)) (= (type $generated@@500) $generated@@64)) (= (type $generated@@501) $generated@@64)) (= ($generated@@136 $generated@@499 ($generated@@384 $generated@@500 $generated@@501)) (forall (($generated@@502 T@U) ) (!  (=> (and (= (type $generated@@502) $generated@@149) ($generated@@0 ($generated@@81 ($generated@@281 $generated@@499) $generated@@502))) (and ($generated@@216 ($generated@@81 ($generated@@357 $generated@@499) $generated@@502) $generated@@501) ($generated@@216 $generated@@502 $generated@@500)))
 :pattern ( ($generated@@81 ($generated@@357 $generated@@499) $generated@@502))
 :pattern ( ($generated@@81 ($generated@@281 $generated@@499) $generated@@502))
))))
 :pattern ( ($generated@@136 $generated@@499 ($generated@@384 $generated@@500 $generated@@501)))
)))
(assert (forall (($generated@@503 T@U) ($generated@@504 T@U) ($generated@@505 T@U) ) (!  (=> (and (and (= (type $generated@@503) ($generated@@301 $generated@@149 $generated@@149)) (= (type $generated@@504) $generated@@64)) (= (type $generated@@505) $generated@@64)) (= ($generated@@136 $generated@@503 ($generated@@392 $generated@@504 $generated@@505)) (forall (($generated@@506 T@U) ) (!  (=> (and (= (type $generated@@506) $generated@@149) ($generated@@0 ($generated@@81 ($generated@@299 $generated@@503) $generated@@506))) (and ($generated@@216 ($generated@@81 ($generated@@367 $generated@@503) $generated@@506) $generated@@505) ($generated@@216 $generated@@506 $generated@@504)))
 :pattern ( ($generated@@81 ($generated@@367 $generated@@503) $generated@@506))
 :pattern ( ($generated@@81 ($generated@@299 $generated@@503) $generated@@506))
))))
 :pattern ( ($generated@@136 $generated@@503 ($generated@@392 $generated@@504 $generated@@505)))
)))
(assert (forall (($generated@@509 T@U) ($generated@@510 T@U) ) (!  (=> (and (= (type $generated@@509) $generated@@149) (= (type $generated@@510) $generated@@149)) (< ($generated@@507 $generated@@509) ($generated@@508 ($generated@@215 $generated@@509 $generated@@510))))
 :pattern ( ($generated@@215 $generated@@509 $generated@@510))
)))
(assert (forall (($generated@@511 T@U) ($generated@@512 T@U) ) (!  (=> (and (= (type $generated@@511) $generated@@149) (= (type $generated@@512) $generated@@149)) (< ($generated@@507 $generated@@512) ($generated@@508 ($generated@@215 $generated@@511 $generated@@512))))
 :pattern ( ($generated@@215 $generated@@511 $generated@@512))
)))
(assert (forall (($generated@@513 T@U) ($generated@@514 T@U) ($generated@@515 T@U) ) (!  (=> (and (and (and (= (type $generated@@513) $generated@@149) (= (type $generated@@514) $generated@@64)) (= (type $generated@@515) $generated@@64)) ($generated@@216 $generated@@513 ($generated@@384 $generated@@514 $generated@@515))) (and (= ($generated@@262 ($generated@@356 ($generated@@283 $generated@@149 $generated@@149) $generated@@513)) $generated@@513) ($generated@@136 ($generated@@356 ($generated@@283 $generated@@149 $generated@@149) $generated@@513) ($generated@@384 $generated@@514 $generated@@515))))
 :pattern ( ($generated@@216 $generated@@513 ($generated@@384 $generated@@514 $generated@@515)))
)))
(assert (forall (($generated@@516 T@U) ($generated@@517 T@U) ($generated@@518 T@U) ) (!  (=> (and (and (and (= (type $generated@@516) $generated@@149) (= (type $generated@@517) $generated@@64)) (= (type $generated@@518) $generated@@64)) ($generated@@216 $generated@@516 ($generated@@392 $generated@@517 $generated@@518))) (and (= ($generated@@262 ($generated@@356 ($generated@@301 $generated@@149 $generated@@149) $generated@@516)) $generated@@516) ($generated@@136 ($generated@@356 ($generated@@301 $generated@@149 $generated@@149) $generated@@516) ($generated@@392 $generated@@517 $generated@@518))))
 :pattern ( ($generated@@216 $generated@@516 ($generated@@392 $generated@@517 $generated@@518)))
)))
(assert (forall (($generated@@519 T@U) ($generated@@520 T@U) ($generated@@521 T@U) ) (!  (=> (and (and (and (= (type $generated@@519) $generated@@64) (= (type $generated@@520) $generated@@64)) (= (type $generated@@521) $generated@@149)) ($generated@@216 $generated@@521 ($generated@@139 $generated@@519 $generated@@520))) (and (= ($generated@@262 ($generated@@356 $generated@@140 $generated@@521)) $generated@@521) ($generated@@136 ($generated@@356 $generated@@140 $generated@@521) ($generated@@139 $generated@@519 $generated@@520))))
 :pattern ( ($generated@@216 $generated@@521 ($generated@@139 $generated@@519 $generated@@520)))
)))
(assert (forall (($generated@@522 T@U) ) (! (let (($generated@@523 (type $generated@@522)))
 (not ($generated@@0 ($generated@@81 ($generated@@403 $generated@@523) $generated@@522))))
 :pattern ( (let (($generated@@523 (type $generated@@522)))
($generated@@81 ($generated@@403 $generated@@523) $generated@@522)))
)))
(assert (forall (($generated@@525 Int) ($generated@@526 Int) ) (! (= ($generated@@524 $generated@@525 $generated@@526) (mod $generated@@525 $generated@@526))
 :pattern ( ($generated@@524 $generated@@525 $generated@@526))
)))
(assert (forall (($generated@@528 T@U) ) (! (= (type ($generated@@527 $generated@@528)) $generated@@69)
 :pattern ( ($generated@@527 $generated@@528))
)))
(assert (forall (($generated@@529 T@U) ($generated@@530 T@U) ) (!  (=> (and (= (type $generated@@529) $generated@@64) (= (type $generated@@530) $generated@@64)) (and (= ($generated@@72 ($generated@@139 $generated@@529 $generated@@530)) $generated@@62) (= ($generated@@527 ($generated@@139 $generated@@529 $generated@@530)) $generated@@63)))
 :pattern ( ($generated@@139 $generated@@529 $generated@@530))
)))
(assert (forall (($generated@@531 T@U) ) (!  (=> (= (type $generated@@531) $generated@@140) (= ($generated@@507 ($generated@@262 $generated@@531)) ($generated@@508 $generated@@531)))
 :pattern ( ($generated@@507 ($generated@@262 $generated@@531)))
)))
(assert (forall (($generated@@532 T@U) ) (!  (=> (and (= (type $generated@@532) $generated@@149) ($generated@@216 $generated@@532 ($generated@@75 0))) (and (= ($generated@@262 ($generated@@356 $generated@@2 $generated@@532)) $generated@@532) ($generated@@136 ($generated@@356 ($generated@@76 $generated@@149 $generated@@4) $generated@@532) ($generated@@75 0))))
 :pattern ( ($generated@@216 $generated@@532 ($generated@@75 0)))
)))
(assert (forall (($generated@@533 T@U) ($generated@@534 T@U) ) (!  (=> (and (and (= (type $generated@@533) $generated@@149) (= (type $generated@@534) $generated@@64)) ($generated@@216 $generated@@533 ($generated@@225 $generated@@534))) (and (= ($generated@@262 ($generated@@356 ($generated@@76 $generated@@149 $generated@@4) $generated@@533)) $generated@@533) ($generated@@136 ($generated@@356 ($generated@@76 $generated@@149 $generated@@4) $generated@@533) ($generated@@225 $generated@@534))))
 :pattern ( ($generated@@216 $generated@@533 ($generated@@225 $generated@@534)))
)))
(assert (forall (($generated@@535 T@U) ($generated@@536 T@U) ) (!  (=> (and (and (= (type $generated@@535) $generated@@149) (= (type $generated@@536) $generated@@64)) ($generated@@216 $generated@@535 ($generated@@230 $generated@@536))) (and (= ($generated@@262 ($generated@@356 ($generated@@76 $generated@@149 $generated@@4) $generated@@535)) $generated@@535) ($generated@@136 ($generated@@356 ($generated@@76 $generated@@149 $generated@@4) $generated@@535) ($generated@@230 $generated@@536))))
 :pattern ( ($generated@@216 $generated@@535 ($generated@@230 $generated@@536)))
)))
(assert (forall (($generated@@537 T@U) ($generated@@538 T@U) ) (!  (=> (and (and (= (type $generated@@537) $generated@@149) (= (type $generated@@538) $generated@@64)) ($generated@@216 $generated@@537 ($generated@@154 $generated@@538))) (and (= ($generated@@262 ($generated@@356 ($generated@@76 $generated@@149 $generated@@2) $generated@@537)) $generated@@537) ($generated@@136 ($generated@@356 ($generated@@76 $generated@@149 $generated@@2) $generated@@537) ($generated@@154 $generated@@538))))
 :pattern ( ($generated@@216 $generated@@537 ($generated@@154 $generated@@538)))
)))
(assert (forall (($generated@@539 T@U) ($generated@@540 T@U) ) (!  (=> (and (and (= (type $generated@@539) $generated@@149) (= (type $generated@@540) $generated@@64)) ($generated@@216 $generated@@539 ($generated@@469 $generated@@540))) (and (= ($generated@@262 ($generated@@356 ($generated@@256 $generated@@149) $generated@@539)) $generated@@539) ($generated@@136 ($generated@@356 ($generated@@256 $generated@@149) $generated@@539) ($generated@@469 $generated@@540))))
 :pattern ( ($generated@@216 $generated@@539 ($generated@@469 $generated@@540)))
)))
(assert (forall (($generated@@541 T@U) ($generated@@542 T@U) ($generated@@543 T@U) ) (!  (=> (and (and (= (type $generated@@541) ($generated@@76 $generated@@149 $generated@@2)) (= (type $generated@@542) $generated@@64)) (= (type $generated@@543) ($generated@@76 $generated@@77 $generated@@78))) (= ($generated@@74 $generated@@541 ($generated@@154 $generated@@542) $generated@@543) (forall (($generated@@544 T@U) ) (!  (=> (and (= (type $generated@@544) $generated@@149) (< 0 ($generated ($generated@@81 $generated@@541 $generated@@544)))) ($generated@@242 $generated@@544 $generated@@542 $generated@@543))
 :pattern ( ($generated@@81 $generated@@541 $generated@@544))
))))
 :pattern ( ($generated@@74 $generated@@541 ($generated@@154 $generated@@542) $generated@@543))
)))
(assert (forall (($generated@@545 T@U) ($generated@@546 T@U) ($generated@@547 T@U) ) (!  (=> (and (and (and (= (type $generated@@545) $generated@@140) (= (type $generated@@546) $generated@@64)) (= (type $generated@@547) ($generated@@76 $generated@@77 $generated@@78))) (and ($generated@@241 $generated@@547) (and ($generated@@138 $generated@@545) (exists (($generated@@548 T@U) ) (!  (and (= (type $generated@@548) $generated@@64) ($generated@@74 $generated@@545 ($generated@@139 $generated@@546 $generated@@548) $generated@@547))
 :pattern ( ($generated@@74 $generated@@545 ($generated@@139 $generated@@546 $generated@@548) $generated@@547))
))))) ($generated@@242 ($generated@@147 $generated@@545) $generated@@546 $generated@@547))
 :pattern ( ($generated@@242 ($generated@@147 $generated@@545) $generated@@546 $generated@@547))
)))
(assert (forall (($generated@@549 T@U) ($generated@@550 T@U) ($generated@@551 T@U) ) (!  (=> (and (and (and (= (type $generated@@549) $generated@@140) (= (type $generated@@550) $generated@@64)) (= (type $generated@@551) ($generated@@76 $generated@@77 $generated@@78))) (and ($generated@@241 $generated@@551) (and ($generated@@138 $generated@@549) (exists (($generated@@552 T@U) ) (!  (and (= (type $generated@@552) $generated@@64) ($generated@@74 $generated@@549 ($generated@@139 $generated@@552 $generated@@550) $generated@@551))
 :pattern ( ($generated@@74 $generated@@549 ($generated@@139 $generated@@552 $generated@@550) $generated@@551))
))))) ($generated@@242 ($generated@@148 $generated@@549) $generated@@550 $generated@@551))
 :pattern ( ($generated@@242 ($generated@@148 $generated@@549) $generated@@550 $generated@@551))
)))
(assert (forall (($generated@@553 T@U) ($generated@@554 T@U) ) (!  (=> (and (= (type $generated@@553) $generated@@149) (= (type $generated@@554) $generated@@149)) (= ($generated@@215 ($generated@@237 $generated@@553) ($generated@@237 $generated@@554)) ($generated@@237 ($generated@@215 $generated@@553 $generated@@554))))
 :pattern ( ($generated@@215 ($generated@@237 $generated@@553) ($generated@@237 $generated@@554)))
)))
(assert (forall (($generated@@555 Int) ) (! (= ($generated@@262 ($generated@@8 ($generated@@235 $generated@@555))) ($generated@@237 ($generated@@262 ($generated@@8 $generated@@555))))
 :pattern ( ($generated@@262 ($generated@@8 ($generated@@235 $generated@@555))))
)))
(assert (forall (($generated@@556 T@U) ) (! (= ($generated@@262 ($generated@@237 $generated@@556)) ($generated@@237 ($generated@@262 $generated@@556)))
 :pattern ( ($generated@@262 ($generated@@237 $generated@@556)))
)))
(assert (forall (($generated@@557 T@U) ) (! (let (($generated@@558 ($generated@@257 (type $generated@@557))))
 (=> (and (= (type $generated@@557) ($generated@@256 $generated@@558)) (= ($generated@@255 $generated@@557) 0)) (= $generated@@557 ($generated@@254 $generated@@558))))
 :pattern ( ($generated@@255 $generated@@557))
)))
(assert (forall (($generated@@559 T@U) ($generated@@560 T@U) ($generated@@561 T@U) ) (! (let (($generated@@562 (type $generated@@560)))
 (=> (and (and (= (type $generated@@559) ($generated@@76 $generated@@562 $generated@@2)) (= (type $generated@@561) $generated@@2)) (<= 0 ($generated $generated@@561))) (= ($generated@@275 ($generated@@82 $generated@@559 $generated@@560 $generated@@561)) (+ (- ($generated@@275 $generated@@559) ($generated ($generated@@81 $generated@@559 $generated@@560))) ($generated $generated@@561)))))
 :pattern ( ($generated@@275 ($generated@@82 $generated@@559 $generated@@560 $generated@@561)))
)))
(assert (forall (($generated@@563 T@U) ($generated@@564 T@U) ) (!  (=> (and (= (type $generated@@563) ($generated@@76 $generated@@77 $generated@@78)) (= (type $generated@@564) $generated@@2)) ($generated@@74 $generated@@564 $generated@@46 $generated@@563))
 :pattern ( ($generated@@74 $generated@@564 $generated@@46 $generated@@563))
)))
(assert (forall (($generated@@565 T@U) ($generated@@566 T@U) ) (!  (=> (and (= (type $generated@@565) ($generated@@76 $generated@@77 $generated@@78)) (= (type $generated@@566) $generated@@3)) ($generated@@74 $generated@@566 $generated@@47 $generated@@565))
 :pattern ( ($generated@@74 $generated@@566 $generated@@47 $generated@@565))
)))
(assert (forall (($generated@@567 T@U) ($generated@@568 T@U) ) (!  (=> (and (= (type $generated@@567) ($generated@@76 $generated@@77 $generated@@78)) (= (type $generated@@568) $generated@@4)) ($generated@@74 $generated@@568 $generated@@44 $generated@@567))
 :pattern ( ($generated@@74 $generated@@568 $generated@@44 $generated@@567))
)))
(assert (forall (($generated@@569 T@U) ($generated@@570 T@U) ) (!  (=> (and (= (type $generated@@569) ($generated@@76 $generated@@77 $generated@@78)) (= (type $generated@@570) $generated@@427)) ($generated@@74 $generated@@570 $generated@@45 $generated@@569))
 :pattern ( ($generated@@74 $generated@@570 $generated@@45 $generated@@569))
)))
(assert (forall (($generated@@571 T@U) ($generated@@572 T@U) ) (!  (=> (and (= (type $generated@@571) ($generated@@76 $generated@@77 $generated@@78)) (= (type $generated@@572) $generated@@149)) ($generated@@74 $generated@@572 $generated@@48 $generated@@571))
 :pattern ( ($generated@@74 $generated@@572 $generated@@48 $generated@@571))
)))
(assert (forall (($generated@@573 T@U) ($generated@@574 T@U) ) (!  (=> (and (= (type $generated@@573) ($generated@@256 $generated@@149)) (= (type $generated@@574) $generated@@64)) (= ($generated@@136 $generated@@573 ($generated@@469 $generated@@574)) (forall (($generated@@575 Int) ) (!  (=> (and (<= 0 $generated@@575) (< $generated@@575 ($generated@@255 $generated@@573))) ($generated@@216 ($generated@@470 $generated@@573 $generated@@575) $generated@@574))
 :pattern ( ($generated@@470 $generated@@573 $generated@@575))
))))
 :pattern ( ($generated@@136 $generated@@573 ($generated@@469 $generated@@574)))
)))
(assert (forall (($generated@@577 T@U) ($generated@@578 Int) ) (!  (=> (= (type $generated@@577) ($generated@@256 $generated@@149)) (=> (and (<= 0 $generated@@578) (< $generated@@578 ($generated@@255 $generated@@577))) (< ($generated@@508 ($generated@@356 $generated@@140 ($generated@@470 $generated@@577 $generated@@578))) ($generated@@576 $generated@@577))))
 :pattern ( ($generated@@508 ($generated@@356 $generated@@140 ($generated@@470 $generated@@577 $generated@@578))))
)))
(assert (forall (($generated@@579 T@U) ($generated@@580 T@U) ($generated@@581 T@U) ) (!  (=> (and (and (and (= (type $generated@@579) ($generated@@283 $generated@@149 $generated@@149)) (= (type $generated@@580) $generated@@64)) (= (type $generated@@581) $generated@@64)) ($generated@@136 $generated@@579 ($generated@@384 $generated@@580 $generated@@581))) (and (and ($generated@@136 ($generated@@281 $generated@@579) ($generated@@225 $generated@@580)) ($generated@@136 ($generated@@324 $generated@@579) ($generated@@225 $generated@@581))) ($generated@@136 ($generated@@355 $generated@@579) ($generated@@225 ($generated@@139 $generated@@580 $generated@@581)))))
 :pattern ( ($generated@@136 $generated@@579 ($generated@@384 $generated@@580 $generated@@581)))
)))
(assert (forall (($generated@@582 T@U) ($generated@@583 T@U) ($generated@@584 T@U) ) (!  (=> (and (and (and (= (type $generated@@582) ($generated@@301 $generated@@149 $generated@@149)) (= (type $generated@@583) $generated@@64)) (= (type $generated@@584) $generated@@64)) ($generated@@136 $generated@@582 ($generated@@392 $generated@@583 $generated@@584))) (and (and ($generated@@136 ($generated@@299 $generated@@582) ($generated@@230 $generated@@583)) ($generated@@136 ($generated@@335 $generated@@582) ($generated@@230 $generated@@584))) ($generated@@136 ($generated@@366 $generated@@582) ($generated@@230 ($generated@@139 $generated@@583 $generated@@584)))))
 :pattern ( ($generated@@136 $generated@@582 ($generated@@392 $generated@@583 $generated@@584)))
)))
(assert (forall (($generated@@585 T@U) ) (!  (=> (= (type $generated@@585) $generated@@2) ($generated@@136 $generated@@585 $generated@@46))
 :pattern ( ($generated@@136 $generated@@585 $generated@@46))
)))
(assert (forall (($generated@@586 T@U) ) (!  (=> (= (type $generated@@586) $generated@@3) ($generated@@136 $generated@@586 $generated@@47))
 :pattern ( ($generated@@136 $generated@@586 $generated@@47))
)))
(assert (forall (($generated@@587 T@U) ) (!  (=> (= (type $generated@@587) $generated@@4) ($generated@@136 $generated@@587 $generated@@44))
 :pattern ( ($generated@@136 $generated@@587 $generated@@44))
)))
(assert (forall (($generated@@588 T@U) ) (!  (=> (= (type $generated@@588) $generated@@427) ($generated@@136 $generated@@588 $generated@@45))
 :pattern ( ($generated@@136 $generated@@588 $generated@@45))
)))
(assert (forall (($generated@@589 T@U) ) (!  (=> (= (type $generated@@589) $generated@@149) ($generated@@136 $generated@@589 $generated@@48))
 :pattern ( ($generated@@136 $generated@@589 $generated@@48))
)))
(push 1)
(declare-fun ControlFlow (Int Int) Int)
(declare-fun $generated@@590 () Int)
(declare-fun $generated@@591 () T@U)
(declare-fun $generated@@592 () T@U)
(declare-fun $generated@@593 () T@U)
(declare-fun $generated@@594 () Int)
(declare-fun $generated@@595 () Int)
(declare-fun $generated@@596 () Int)
(declare-fun $generated@@597 (T@U) Bool)
(declare-fun $generated@@598 () T@U)
(declare-fun $generated@@599 () T@U)
(declare-fun $generated@@600 () Int)
(declare-fun $generated@@601 () Int)
(declare-fun $generated@@602 () T@U)
(declare-fun $generated@@603 () T@U)
(declare-fun $generated@@604 () T@U)
(declare-fun $generated@@605 () Int)
(assert  (and (and (and (and (and (and (and (= (type $generated@@591) ($generated@@161 $generated@@77 $generated@@4)) (= (type $generated@@592) $generated@@77)) (= (type $generated@@593) ($generated@@76 $generated@@77 $generated@@78))) (= (type $generated@@598) ($generated@@256 $generated@@149))) (= (type $generated@@599) $generated@@64)) (= (type $generated@@602) $generated@@149)) (= (type $generated@@603) $generated@@149)) (= (type $generated@@604) ($generated@@256 $generated@@149))))
(set-option :timeout 0)
(set-option :rlimit 0)
(assert (not
 (=> (= (ControlFlow 0 0) 7) (let (($generated@@606 true))
(let (($generated@@607  (=> (and (< $generated@@590 ($generated@@235 0)) (= (ControlFlow 0 3) 1)) $generated@@606)))
(let (($generated@@608  (=> (and (<= ($generated@@235 0) $generated@@590) (= (ControlFlow 0 2) 1)) $generated@@606)))
(let (($generated@@609  (=> (and (= $generated@@591 ($generated@@160 $generated@@592 $generated@@593 $generated@@60 false)) (= $generated@@594 ($generated@@235 0))) (and (=> (= (ControlFlow 0 4) (- 0 6)) (= ($generated@@524 $generated@@594 ($generated@@235 2)) ($generated@@235 0))) (=> (= ($generated@@524 $generated@@594 ($generated@@235 2)) ($generated@@235 0)) (=> (and (<= ($generated@@235 0) $generated@@595) (= $generated@@596 ($generated@@235 0))) (and (=> (= (ControlFlow 0 4) (- 0 5)) (= ($generated@@524 $generated@@596 ($generated@@235 2)) ($generated@@235 0))) (=> (= ($generated@@524 $generated@@596 ($generated@@235 2)) ($generated@@235 0)) (and (=> (= (ControlFlow 0 4) 2) $generated@@608) (=> (= (ControlFlow 0 4) 3) $generated@@607))))))))))
(let (($generated@@610  (=> (and (and (and (and ($generated@@241 $generated@@593) ($generated@@597 $generated@@593)) (and ($generated@@136 $generated@@598 ($generated@@469 $generated@@599)) ($generated@@74 $generated@@598 ($generated@@469 $generated@@599) $generated@@593))) (and (and (<= ($generated@@235 0) $generated@@600) (= ($generated@@524 $generated@@595 ($generated@@235 2)) ($generated@@235 0))) (and (= ($generated@@524 $generated@@590 ($generated@@235 2)) ($generated@@235 0)) (= ($generated@@524 $generated@@601 ($generated@@235 2)) ($generated@@235 0))))) (and (and (and ($generated@@216 $generated@@602 $generated@@599) ($generated@@242 $generated@@602 $generated@@599 $generated@@593)) (and ($generated@@216 $generated@@603 $generated@@599) ($generated@@242 $generated@@603 $generated@@599 $generated@@593))) (and (and ($generated@@136 $generated@@604 ($generated@@469 $generated@@599)) ($generated@@74 $generated@@604 ($generated@@469 $generated@@599) $generated@@593)) (and (= 1 $generated@@605) (= (ControlFlow 0 7) 4))))) $generated@@609)))
$generated@@610))))))
))
(check-sat)
(pop 1)
; Valid
(get-info :rlimit)
(reset)
(set-option :rlimit 0)
; did a full reset
(reset)
(set-option :print-success false)
(set-info :smt-lib-version 2.6)
(set-option :auto_config false)
(set-option :type_check true)
(set-option :smt.case_split 3)
(set-option :smt.qi.eager_threshold 100)
(set-option :smt.delay_units true)
(set-option :smt.arith.solver 2)
(set-option :smt.mbqi false)
(set-option :model.compact false)
(set-option :model.v2 true)
(set-option :pp.bv_literals false)
; done setting options


(set-info :category "industrial")
(declare-sort |T@U| 0)
(declare-sort |T@T| 0)
(declare-fun real_pow (Real Real) Real)
(declare-fun UOrdering2 (|T@U| |T@U|) Bool)
(declare-fun UOrdering3 (|T@T| |T@U| |T@U|) Bool)
(declare-fun tickleBool (Bool) Bool)
(assert (and (tickleBool true) (tickleBool false)))
(declare-fun $generated (T@U) Int)
(declare-fun $generated@@0 (T@U) Bool)
(declare-fun $generated@@1 (T@T) Int)
(declare-fun $generated@@2 () T@T)
(declare-fun $generated@@3 () T@T)
(declare-fun $generated@@4 () T@T)
(declare-fun $generated@@5 () T@T)
(declare-fun $generated@@6 () T@T)
(declare-fun $generated@@7 () T@T)
(declare-fun $generated@@8 (Int) T@U)
(declare-fun type (T@U) T@T)
(declare-fun $generated@@9 (Real) T@U)
(declare-fun $generated@@10 (T@U) Real)
(declare-fun $generated@@11 (Bool) T@U)
(declare-fun $generated@@12 (RoundingMode) T@U)
(declare-fun $generated@@13 (T@U) RoundingMode)
(declare-fun $generated@@14 (String) T@U)
(declare-fun $generated@@15 (T@U) String)
(declare-fun $generated@@16 ((RegEx String)) T@U)
(declare-fun $generated@@17 (T@U) (RegEx String))
(declare-fun $generated@@44 (T@U T@U T@U) T@U)
(declare-fun $generated@@45 (T@U T@U T@U Bool) T@U)
(declare-fun $generated@@46 (T@T) T@T)
(declare-fun $generated@@47 () T@T)
(declare-fun $generated@@48 (T@T T@T) T@T)
(declare-fun $generated@@49 () T@T)
(declare-fun $generated@@50 (T@T) T@T)
(declare-fun $generated@@51 (T@U T@U) T@U)
(declare-fun $generated@@52 (T@U T@U) T@U)
(declare-fun $generated@@53 (T@T) T@T)
(declare-fun $generated@@54 (T@T) T@T)
(declare-fun $generated@@55 (T@U T@U T@U) T@U)
(declare-fun $generated@@56 (T@U T@U T@U) T@U)
(declare-fun $generated@@57 (T@T T@T) T@T)
(declare-fun $generated@@58 (T@T) T@T)
(declare-fun $generated@@59 (T@T) T@T)
(declare-fun $generated@@60 (T@U T@U T@U T@U) T@U)
(declare-fun $generated@@157 (Real) Real)
(declare-fun $generated@@159 (T@U) T@U)
(declare-fun $generated@@163 (T@U) T@U)
(declare-fun $generated@@164 (T@T T@U) T@U)
(declare-fun $generated@@165 () T@T)
(assert  (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (= ($generated@@1 $generated@@2) 0) (= ($generated@@1 $generated@@3) 1)) (= ($generated@@1 $generated@@4) 2)) (= ($generated@@1 $generated@@5) 3)) (= ($generated@@1 $generated@@6) 4)) (= ($generated@@1 $generated@@7) 5)) (forall (($generated@@18 Int) ) (! (= ($generated ($generated@@8 $generated@@18)) $generated@@18)
 :pattern ( ($generated@@8 $generated@@18))
))) (forall (($generated@@19 T@U) ) (!  (=> (= (type $generated@@19) $generated@@2) (= ($generated@@8 ($generated $generated@@19)) $generated@@19))
 :pattern ( ($generated $generated@@19))
))) (forall (($generated@@20 Int) ) (! (= (type ($generated@@8 $generated@@20)) $generated@@2)
 :pattern ( ($generated@@8 $generated@@20))
))) (forall (($generated@@21 Real) ) (! (= ($generated@@10 ($generated@@9 $generated@@21)) $generated@@21)
 :pattern ( ($generated@@9 $generated@@21))
))) (forall (($generated@@22 T@U) ) (!  (=> (= (type $generated@@22) $generated@@3) (= ($generated@@9 ($generated@@10 $generated@@22)) $generated@@22))
 :pattern ( ($generated@@10 $generated@@22))
))) (forall (($generated@@23 Real) ) (! (= (type ($generated@@9 $generated@@23)) $generated@@3)
 :pattern ( ($generated@@9 $generated@@23))
))) (forall (($generated@@24 Bool) ) (! (= ($generated@@0 ($generated@@11 $generated@@24)) $generated@@24)
 :pattern ( ($generated@@11 $generated@@24))
))) (forall (($generated@@25 T@U) ) (!  (=> (= (type $generated@@25) $generated@@4) (= ($generated@@11 ($generated@@0 $generated@@25)) $generated@@25))
 :pattern ( ($generated@@0 $generated@@25))
))) (forall (($generated@@26 Bool) ) (! (= (type ($generated@@11 $generated@@26)) $generated@@4)
 :pattern ( ($generated@@11 $generated@@26))
))) (forall (($generated@@27 RoundingMode) ) (! (= ($generated@@13 ($generated@@12 $generated@@27)) $generated@@27)
 :pattern ( ($generated@@12 $generated@@27))
))) (forall (($generated@@28 T@U) ) (!  (=> (= (type $generated@@28) $generated@@5) (= ($generated@@12 ($generated@@13 $generated@@28)) $generated@@28))
 :pattern ( ($generated@@13 $generated@@28))
))) (forall (($generated@@29 RoundingMode) ) (! (= (type ($generated@@12 $generated@@29)) $generated@@5)
 :pattern ( ($generated@@12 $generated@@29))
))) (forall (($generated@@30 String) ) (! (= ($generated@@15 ($generated@@14 $generated@@30)) $generated@@30)
 :pattern ( ($generated@@14 $generated@@30))
))) (forall (($generated@@31 T@U) ) (!  (=> (= (type $generated@@31) $generated@@6) (= ($generated@@14 ($generated@@15 $generated@@31)) $generated@@31))
 :pattern ( ($generated@@15 $generated@@31))
))) (forall (($generated@@32 String) ) (! (= (type ($generated@@14 $generated@@32)) $generated@@6)
 :pattern ( ($generated@@14 $generated@@32))
))) (forall (($generated@@33 (RegEx String)) ) (! (= ($generated@@17 ($generated@@16 $generated@@33)) $generated@@33)
 :pattern ( ($generated@@16 $generated@@33))
))) (forall (($generated@@34 T@U) ) (!  (=> (= (type $generated@@34) $generated@@7) (= ($generated@@16 ($generated@@17 $generated@@34)) $generated@@34))
 :pattern ( ($generated@@17 $generated@@34))
))) (forall (($generated@@35 (RegEx String)) ) (! (= (type ($generated@@16 $generated@@35)) $generated@@7)
 :pattern ( ($generated@@16 $generated@@35))
))))
(assert (forall (($generated@@36 T@U) ) (! (UOrdering2 $generated@@36 $generated@@36)
 :no-pattern ($generated $generated@@36)
 :no-pattern ($generated@@0 $generated@@36)
)))
(assert (forall (($generated@@37 T@U) ($generated@@38 T@U) ($generated@@39 T@U) ) (! (let (($generated@@40 (type $generated@@37)))
 (=> (and (and (= (type $generated@@38) $generated@@40) (= (type $generated@@39) $generated@@40)) (and (UOrdering2 $generated@@37 $generated@@38) (UOrdering2 $generated@@38 $generated@@39))) (UOrdering2 $generated@@37 $generated@@39)))
 :pattern ( (UOrdering2 $generated@@37 $generated@@38) (UOrdering2 $generated@@38 $generated@@39))
)))
(assert (forall (($generated@@41 T@U) ($generated@@42 T@U) ) (! (let (($generated@@43 (type $generated@@41)))
 (=> (= (type $generated@@42) $generated@@43) (=> (and (UOrdering2 $generated@@41 $generated@@42) (UOrdering2 $generated@@42 $generated@@41)) (= $generated@@41 $generated@@42))))
 :pattern ( (UOrdering2 $generated@@41 $generated@@42) (UOrdering2 $generated@@42 $generated@@41))
)))
(assert  (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (forall (($generated@@61 T@T) ($generated@@62 T@T) ) (= ($generated@@1 ($generated@@48 $generated@@61 $generated@@62)) 6)) (forall (($generated@@63 T@T) ($generated@@64 T@T) ) (! (= ($generated@@53 ($generated@@48 $generated@@63 $generated@@64)) $generated@@63)
 :pattern ( ($generated@@48 $generated@@63 $generated@@64))
))) (forall (($generated@@65 T@T) ($generated@@66 T@T) ) (! (= ($generated@@54 ($generated@@48 $generated@@65 $generated@@66)) $generated@@66)
 :pattern ( ($generated@@48 $generated@@65 $generated@@66))
))) (forall (($generated@@67 T@U) ($generated@@68 T@U) ) (! (let (($generated@@69 ($generated@@54 (type $generated@@67))))
(= (type ($generated@@52 $generated@@67 $generated@@68)) $generated@@69))
 :pattern ( ($generated@@52 $generated@@67 $generated@@68))
))) (forall (($generated@@70 T@U) ($generated@@71 T@U) ($generated@@72 T@U) ) (! (let (($generated@@73 (type $generated@@72)))
(let (($generated@@74 (type $generated@@71)))
(= (type ($generated@@55 $generated@@70 $generated@@71 $generated@@72)) ($generated@@48 $generated@@74 $generated@@73))))
 :pattern ( ($generated@@55 $generated@@70 $generated@@71 $generated@@72))
))) (forall (($generated@@75 T@U) ($generated@@76 T@U) ($generated@@77 T@U) ) (! (let (($generated@@78 ($generated@@54 (type $generated@@75))))
 (=> (= (type $generated@@77) $generated@@78) (= ($generated@@52 ($generated@@55 $generated@@75 $generated@@76 $generated@@77) $generated@@76) $generated@@77)))
 :weight 0
))) (and (forall (($generated@@79 T@U) ($generated@@80 T@U) ($generated@@81 T@U) ($generated@@82 T@U) ) (!  (or (= $generated@@81 $generated@@82) (= ($generated@@52 ($generated@@55 $generated@@80 $generated@@81 $generated@@79) $generated@@82) ($generated@@52 $generated@@80 $generated@@82)))
 :weight 0
)) (forall (($generated@@83 T@U) ($generated@@84 T@U) ($generated@@85 T@U) ($generated@@86 T@U) ) (!  (or true (= ($generated@@52 ($generated@@55 $generated@@84 $generated@@85 $generated@@83) $generated@@86) ($generated@@52 $generated@@84 $generated@@86)))
 :weight 0
)))) (forall (($generated@@87 T@T) ) (= ($generated@@1 ($generated@@50 $generated@@87)) 7))) (forall (($generated@@88 T@T) ) (! (= ($generated@@46 ($generated@@50 $generated@@88)) $generated@@88)
 :pattern ( ($generated@@50 $generated@@88))
))) (forall (($generated@@89 T@U) ($generated@@90 T@U) ) (! (let (($generated@@91 ($generated@@46 (type $generated@@90))))
(= (type ($generated@@51 $generated@@89 $generated@@90)) $generated@@91))
 :pattern ( ($generated@@51 $generated@@89 $generated@@90))
))) (= ($generated@@1 $generated@@49) 8)) (forall (($generated@@92 T@U) ($generated@@93 T@U) ($generated@@94 T@U) ) (! (= (type ($generated@@56 $generated@@92 $generated@@93 $generated@@94)) $generated@@49)
 :pattern ( ($generated@@56 $generated@@92 $generated@@93 $generated@@94))
))) (forall (($generated@@95 T@U) ($generated@@96 T@U) ($generated@@97 T@U) ) (! (let (($generated@@98 ($generated@@46 (type $generated@@96))))
 (=> (= (type $generated@@97) $generated@@98) (= ($generated@@51 ($generated@@56 $generated@@95 $generated@@96 $generated@@97) $generated@@96) $generated@@97)))
 :weight 0
))) (and (forall (($generated@@99 T@U) ($generated@@100 T@U) ($generated@@101 T@U) ($generated@@102 T@U) ) (!  (or (= $generated@@101 $generated@@102) (= ($generated@@51 ($generated@@56 $generated@@100 $generated@@101 $generated@@99) $generated@@102) ($generated@@51 $generated@@100 $generated@@102)))
 :weight 0
)) (forall (($generated@@103 T@U) ($generated@@104 T@U) ($generated@@105 T@U) ($generated@@106 T@U) ) (!  (or true (= ($generated@@51 ($generated@@56 $generated@@104 $generated@@105 $generated@@103) $generated@@106) ($generated@@51 $generated@@104 $generated@@106)))
 :weight 0
)))) (= ($generated@@1 $generated@@47) 9)) (forall (($generated@@107 T@T) ($generated@@108 T@T) ) (= ($generated@@1 ($generated@@57 $generated@@107 $generated@@108)) 10))) (forall (($generated@@109 T@T) ($generated@@110 T@T) ) (! (= ($generated@@58 ($generated@@57 $generated@@109 $generated@@110)) $generated@@109)
 :pattern ( ($generated@@57 $generated@@109 $generated@@110))
))) (forall (($generated@@111 T@T) ($generated@@112 T@T) ) (! (= ($generated@@59 ($generated@@57 $generated@@111 $generated@@112)) $generated@@112)
 :pattern ( ($generated@@57 $generated@@111 $generated@@112))
))) (forall (($generated@@113 T@U) ($generated@@114 T@U) ($generated@@115 T@U) ) (! (let (($generated@@116 ($generated@@59 (type $generated@@113))))
(= (type ($generated@@44 $generated@@113 $generated@@114 $generated@@115)) $generated@@116))
 :pattern ( ($generated@@44 $generated@@113 $generated@@114 $generated@@115))
))) (forall (($generated@@117 T@U) ($generated@@118 T@U) ($generated@@119 T@U) ($generated@@120 T@U) ) (! (let (($generated@@121 (type $generated@@120)))
(let (($generated@@122 (type $generated@@118)))
(= (type ($generated@@60 $generated@@117 $generated@@118 $generated@@119 $generated@@120)) ($generated@@57 $generated@@122 $generated@@121))))
 :pattern ( ($generated@@60 $generated@@117 $generated@@118 $generated@@119 $generated@@120))
))) (forall (($generated@@123 T@U) ($generated@@124 T@U) ($generated@@125 T@U) ($generated@@126 T@U) ) (! (let (($generated@@127 ($generated@@59 (type $generated@@123))))
 (=> (= (type $generated@@126) $generated@@127) (= ($generated@@44 ($generated@@60 $generated@@123 $generated@@124 $generated@@125 $generated@@126) $generated@@124 $generated@@125) $generated@@126)))
 :weight 0
))) (and (and (forall (($generated@@128 T@U) ($generated@@129 T@U) ($generated@@130 T@U) ($generated@@131 T@U) ($generated@@132 T@U) ($generated@@133 T@U) ) (!  (or (= $generated@@130 $generated@@132) (= ($generated@@44 ($generated@@60 $generated@@129 $generated@@130 $generated@@131 $generated@@128) $generated@@132 $generated@@133) ($generated@@44 $generated@@129 $generated@@132 $generated@@133)))
 :weight 0
)) (forall (($generated@@134 T@U) ($generated@@135 T@U) ($generated@@136 T@U) ($generated@@137 T@U) ($generated@@138 T@U) ($generated@@139 T@U) ) (!  (or (= $generated@@137 $generated@@139) (= ($generated@@44 ($generated@@60 $generated@@135 $generated@@136 $generated@@137 $generated@@134) $generated@@138 $generated@@139) ($generated@@44 $generated@@135 $generated@@138 $generated@@139)))
 :weight 0
))) (forall (($generated@@140 T@U) ($generated@@141 T@U) ($generated@@142 T@U) ($generated@@143 T@U) ($generated@@144 T@U) ($generated@@145 T@U) ) (!  (or true (= ($generated@@44 ($generated@@60 $generated@@141 $generated@@142 $generated@@143 $generated@@140) $generated@@144 $generated@@145) ($generated@@44 $generated@@141 $generated@@144 $generated@@145)))
 :weight 0
)))) (forall (($generated@@146 T@U) ($generated@@147 T@U) ($generated@@148 T@U) ($generated@@149 Bool) ) (! (= (type ($generated@@45 $generated@@146 $generated@@147 $generated@@148 $generated@@149)) ($generated@@57 $generated@@47 $generated@@4))
 :pattern ( ($generated@@45 $generated@@146 $generated@@147 $generated@@148 $generated@@149))
))))
(assert (forall (($generated@@150 T@U) ($generated@@151 T@U) ($generated@@152 T@U) ($generated@@153 Bool) ($generated@@154 T@U) ($generated@@155 T@U) ) (! (let (($generated@@156 ($generated@@46 (type $generated@@155))))
 (=> (and (and (and (and (= (type $generated@@150) $generated@@47) (= (type $generated@@151) ($generated@@48 $generated@@47 $generated@@49))) (= (type $generated@@152) ($generated@@50 $generated@@4))) (= (type $generated@@154) $generated@@47)) (= (type $generated@@155) ($generated@@50 $generated@@156))) (= ($generated@@0 ($generated@@44 ($generated@@45 $generated@@150 $generated@@151 $generated@@152 $generated@@153) $generated@@154 $generated@@155))  (=> (and (not (= $generated@@154 $generated@@150)) ($generated@@0 ($generated@@51 ($generated@@52 $generated@@151 $generated@@154) $generated@@152))) $generated@@153))))
 :pattern ( ($generated@@44 ($generated@@45 $generated@@150 $generated@@151 $generated@@152 $generated@@153) $generated@@154 $generated@@155))
)))
(assert (forall (($generated@@158 Real) ) (! (= ($generated@@157 $generated@@158) $generated@@158)
 :pattern ( ($generated@@157 $generated@@158))
)))
(assert (forall (($generated@@160 T@U) ) (! (let (($generated@@161 (type $generated@@160)))
(= (type ($generated@@159 $generated@@160)) $generated@@161))
 :pattern ( ($generated@@159 $generated@@160))
)))
(assert (forall (($generated@@162 T@U) ) (! (= ($generated@@159 $generated@@162) $generated@@162)
 :pattern ( ($generated@@159 $generated@@162))
)))
(assert  (and (and (= ($generated@@1 $generated@@165) 11) (forall (($generated@@166 T@U) ) (! (= (type ($generated@@163 $generated@@166)) $generated@@165)
 :pattern ( ($generated@@163 $generated@@166))
))) (forall (($generated@@167 T@T) ($generated@@168 T@U) ) (! (= (type ($generated@@164 $generated@@167 $generated@@168)) $generated@@167)
 :pattern ( ($generated@@164 $generated@@167 $generated@@168))
))))
(assert (forall (($generated@@169 T@U) ) (! (let (($generated@@170 (type $generated@@169)))
(= ($generated@@164 $generated@@170 ($generated@@163 $generated@@169)) $generated@@169))
 :pattern ( ($generated@@163 $generated@@169))
)))
(assert (forall (($generated@@171 Real) ) (! (= ($generated@@163 ($generated@@9 ($generated@@157 $generated@@171))) ($generated@@159 ($generated@@163 ($generated@@9 $generated@@171))))
 :pattern ( ($generated@@163 ($generated@@9 ($generated@@157 $generated@@171))))
)))
(assert (forall (($generated@@172 T@U) ) (! (= ($generated@@163 ($generated@@159 $generated@@172)) ($generated@@159 ($generated@@163 $generated@@172)))
 :pattern ( ($generated@@163 ($generated@@159 $generated@@172)))
)))
(push 1)
(declare-fun ControlFlow (Int Int) Int)
(declare-fun $generated@@173 () Real)
(declare-fun $generated@@174 () T@U)
(declare-fun $generated@@175 () T@U)
(declare-fun $generated@@176 () T@U)
(declare-fun $generated@@177 () T@U)
(declare-fun $generated@@178 (T@U) Bool)
(declare-fun $generated@@179 (T@U) Bool)
(declare-fun $generated@@180 () Int)
(assert  (and (and (and (= (type $generated@@174) ($generated@@57 $generated@@47 $generated@@4)) (= (type $generated@@175) $generated@@47)) (= (type $generated@@176) ($generated@@48 $generated@@47 $generated@@49))) (= (type $generated@@177) ($generated@@50 $generated@@4))))
(set-option :timeout 0)
(set-option :rlimit 0)
(assert (not
 (=> (= (ControlFlow 0 0) 7) (let (($generated@@181 true))
(let (($generated@@182  (=> (and (<= ($generated@@157 10.0) $generated@@173) (= (ControlFlow 0 4) (- 0 3))) (not (= (- $generated@@173 20.0) 0.0)))))
(let (($generated@@183  (=> (= (ControlFlow 0 2) (- 0 1)) (=> (<= ($generated@@157 10.0) ($generated@@157 0.0)) ($generated@@0 ($generated@@159 ($generated@@11 (< (/ 200.0 (- 0.0 20.0)) 30.0))))))))
(let (($generated@@184  (=> (= $generated@@174 ($generated@@45 $generated@@175 $generated@@176 $generated@@177 false)) (and (and (=> (= (ControlFlow 0 6) 2) $generated@@183) (=> (= (ControlFlow 0 6) 4) $generated@@182)) (=> (= (ControlFlow 0 6) 5) $generated@@181)))))
(let (($generated@@185  (=> (and (and ($generated@@178 $generated@@176) ($generated@@179 $generated@@176)) (and (= 0 $generated@@180) (= (ControlFlow 0 7) 6))) $generated@@184)))
$generated@@185))))))
))
(check-sat)
(get-info :reason-unknown)
(assert (not (= (ControlFlow 0 4) (- 3))))
(check-sat)
(pop 1)
; Invalid
(get-info :rlimit)
(reset)
(set-option :rlimit 0)
; did a full reset
(reset)
(set-option :print-success false)
(set-info :smt-lib-version 2.6)
(set-option :auto_config false)
(set-option :type_check true)
(set-option :smt.case_split 3)
(set-option :smt.qi.eager_threshold 100)
(set-option :smt.delay_units true)
(set-option :smt.arith.solver 2)
(set-option :smt.mbqi false)
(set-option :model.compact false)
(set-option :model.v2 true)
(set-option :pp.bv_literals false)
; done setting options


(set-info :category "industrial")
(declare-sort |T@U| 0)
(declare-sort |T@T| 0)
(declare-fun real_pow (Real Real) Real)
(declare-fun UOrdering2 (|T@U| |T@U|) Bool)
(declare-fun UOrdering3 (|T@T| |T@U| |T@U|) Bool)
(declare-fun tickleBool (Bool) Bool)
(assert (and (tickleBool true) (tickleBool false)))
(declare-fun $generated (T@U) Int)
(declare-fun $generated@@0 (T@U) Bool)
(declare-fun $generated@@1 (T@T) Int)
(declare-fun $generated@@2 () T@T)
(declare-fun $generated@@3 () T@T)
(declare-fun $generated@@4 () T@T)
(declare-fun $generated@@5 () T@T)
(declare-fun $generated@@6 () T@T)
(declare-fun $generated@@7 () T@T)
(declare-fun $generated@@8 (Int) T@U)
(declare-fun type (T@U) T@T)
(declare-fun $generated@@9 (Real) T@U)
(declare-fun $generated@@10 (T@U) Real)
(declare-fun $generated@@11 (Bool) T@U)
(declare-fun $generated@@12 (RoundingMode) T@U)
(declare-fun $generated@@13 (T@U) RoundingMode)
(declare-fun $generated@@14 (String) T@U)
(declare-fun $generated@@15 (T@U) String)
(declare-fun $generated@@16 ((RegEx String)) T@U)
(declare-fun $generated@@17 (T@U) (RegEx String))
(declare-fun $generated@@44 () T@U)
(declare-fun $generated@@45 () T@U)
(declare-fun $generated@@46 () T@U)
(declare-fun $generated@@47 () T@U)
(declare-fun $generated@@48 () T@U)
(declare-fun $generated@@49 () T@U)
(declare-fun $generated@@50 () T@U)
(declare-fun $generated@@51 () T@U)
(declare-fun $generated@@52 () T@U)
(declare-fun $generated@@53 () T@U)
(declare-fun $generated@@54 () T@U)
(declare-fun $generated@@55 () T@U)
(declare-fun $generated@@56 () T@U)
(declare-fun $generated@@57 () T@U)
(declare-fun $generated@@58 () T@U)
(declare-fun $generated@@59 () T@U)
(declare-fun $generated@@60 () T@U)
(declare-fun $generated@@61 () T@U)
(declare-fun $generated@@62 () T@U)
(declare-fun $generated@@63 () T@U)
(declare-fun $generated@@64 () T@T)
(declare-fun $generated@@65 () T@T)
(declare-fun $generated@@66 (T@T) T@T)
(declare-fun $generated@@67 (T@T) T@T)
(declare-fun $generated@@68 () T@T)
(declare-fun $generated@@69 () T@T)
(declare-fun $generated@@72 (T@U) T@U)
(declare-fun $generated@@74 (T@U T@U T@U) Bool)
(declare-fun $generated@@75 (Int) T@U)
(declare-fun $generated@@76 (T@T T@T) T@T)
(declare-fun $generated@@77 () T@T)
(declare-fun $generated@@78 () T@T)
(declare-fun $generated@@79 (T@T) T@T)
(declare-fun $generated@@80 (T@T) T@T)
(declare-fun $generated@@81 (T@U T@U) T@U)
(declare-fun $generated@@82 (T@U T@U T@U) T@U)
(declare-fun $generated@@83 (T@U T@U) T@U)
(declare-fun $generated@@84 (T@U T@U T@U) T@U)
(declare-fun $generated@@132 (T@U T@U) Bool)
(declare-fun $generated@@134 (T@U) Bool)
(declare-fun $generated@@135 (T@U T@U) T@U)
(declare-fun $generated@@136 () T@T)
(declare-fun $generated@@142 (T@U T@U) Bool)
(declare-fun $generated@@143 (T@U) T@U)
(declare-fun $generated@@144 (T@U) T@U)
(declare-fun $generated@@145 () T@T)
(declare-fun $generated@@150 (T@U) T@U)
(declare-fun $generated@@151 (T@U) Bool)
(declare-fun $generated@@155 (T@U T@U T@U) T@U)
(declare-fun $generated@@156 (T@U T@U T@U Bool) T@U)
(declare-fun $generated@@157 (T@T T@T) T@T)
(declare-fun $generated@@158 (T@T) T@T)
(declare-fun $generated@@159 (T@T) T@T)
(declare-fun $generated@@160 (T@U T@U T@U T@U) T@U)
(declare-fun $generated@@211 (T@U T@U) T@U)
(declare-fun $generated@@212 (T@U T@U) Bool)
(declare-fun $generated@@221 (T@U Int) T@U)
(declare-fun $generated@@222 (T@T) T@T)
(declare-fun $generated@@223 (T@T) T@T)
(declare-fun $generated@@232 (T@U) T@U)
(declare-fun $generated@@237 (T@U) T@U)
(declare-fun $generated@@242 (Int) Int)
(declare-fun $generated@@244 (T@U) T@U)
(declare-fun $generated@@248 (T@U Int) T@U)
(declare-fun $generated@@249 (T@U Int) T@U)
(declare-fun $generated@@250 (T@U) Int)
(declare-fun $generated@@261 (T@U) Bool)
(declare-fun $generated@@262 (T@U T@U T@U) Bool)
(declare-fun $generated@@271 (T@U) T@U)
(declare-fun $generated@@274 (T@U T@U) Bool)
(declare-fun $generated@@279 (T@U) Int)
(declare-fun $generated@@286 (T@T) T@U)
(declare-fun $generated@@292 (T@U) T@U)
(declare-fun $generated@@301 (T@U) Int)
(declare-fun $generated@@302 (T@T) T@U)
(declare-fun $generated@@307 (T@U) T@U)
(declare-fun $generated@@308 (T@T T@T) T@U)
(declare-fun $generated@@309 (T@T T@T) T@T)
(declare-fun $generated@@310 (T@T) T@T)
(declare-fun $generated@@311 (T@T) T@T)
(declare-fun $generated@@325 (T@U) T@U)
(declare-fun $generated@@326 (T@T T@T) T@U)
(declare-fun $generated@@327 (T@T T@T) T@T)
(declare-fun $generated@@328 (T@T) T@T)
(declare-fun $generated@@329 (T@T) T@T)
(declare-fun $generated@@350 (T@U) T@U)
(declare-fun $generated@@361 (T@U) T@U)
(declare-fun $generated@@381 (T@U) T@U)
(declare-fun $generated@@382 (T@T T@U) T@U)
(declare-fun $generated@@383 (T@U) T@U)
(declare-fun $generated@@392 (T@U) T@U)
(declare-fun $generated@@393 (T@U) T@U)
(declare-fun $generated@@410 (T@U T@U) T@U)
(declare-fun $generated@@418 (T@U T@U) T@U)
(declare-fun $generated@@432 (T@T) T@U)
(declare-fun $generated@@456 () T@T)
(declare-fun $generated@@464 (T@U) T@U)
(declare-fun $generated@@468 (T@U) T@U)
(declare-fun $generated@@474 (T@U) T@U)
(declare-fun $generated@@478 (T@U) T@U)
(declare-fun $generated@@486 (T@U) T@U)
(declare-fun $generated@@490 (T@U) T@U)
(declare-fun $generated@@498 (T@U) T@U)
(declare-fun $generated@@504 (T@U) Int)
(declare-fun $generated@@506 (T@U) T@U)
(declare-fun $generated@@510 (T@U) T@U)
(declare-fun $generated@@514 (T@U) T@U)
(declare-fun $generated@@518 (T@U) T@U)
(declare-fun $generated@@532 (T@U) Int)
(declare-fun $generated@@533 (T@U) Int)
(declare-fun $generated@@549 (Int Int) Int)
(declare-fun $generated@@552 (T@U) T@U)
(declare-fun $generated@@556 (Int Int) Int)
(assert  (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (= ($generated@@1 $generated@@2) 0) (= ($generated@@1 $generated@@3) 1)) (= ($generated@@1 $generated@@4) 2)) (= ($generated@@1 $generated@@5) 3)) (= ($generated@@1 $generated@@6) 4)) (= ($generated@@1 $generated@@7) 5)) (forall (($generated@@18 Int) ) (! (= ($generated ($generated@@8 $generated@@18)) $generated@@18)
 :pattern ( ($generated@@8 $generated@@18))
))) (forall (($generated@@19 T@U) ) (!  (=> (= (type $generated@@19) $generated@@2) (= ($generated@@8 ($generated $generated@@19)) $generated@@19))
 :pattern ( ($generated $generated@@19))
))) (forall (($generated@@20 Int) ) (! (= (type ($generated@@8 $generated@@20)) $generated@@2)
 :pattern ( ($generated@@8 $generated@@20))
))) (forall (($generated@@21 Real) ) (! (= ($generated@@10 ($generated@@9 $generated@@21)) $generated@@21)
 :pattern ( ($generated@@9 $generated@@21))
))) (forall (($generated@@22 T@U) ) (!  (=> (= (type $generated@@22) $generated@@3) (= ($generated@@9 ($generated@@10 $generated@@22)) $generated@@22))
 :pattern ( ($generated@@10 $generated@@22))
))) (forall (($generated@@23 Real) ) (! (= (type ($generated@@9 $generated@@23)) $generated@@3)
 :pattern ( ($generated@@9 $generated@@23))
))) (forall (($generated@@24 Bool) ) (! (= ($generated@@0 ($generated@@11 $generated@@24)) $generated@@24)
 :pattern ( ($generated@@11 $generated@@24))
))) (forall (($generated@@25 T@U) ) (!  (=> (= (type $generated@@25) $generated@@4) (= ($generated@@11 ($generated@@0 $generated@@25)) $generated@@25))
 :pattern ( ($generated@@0 $generated@@25))
))) (forall (($generated@@26 Bool) ) (! (= (type ($generated@@11 $generated@@26)) $generated@@4)
 :pattern ( ($generated@@11 $generated@@26))
))) (forall (($generated@@27 RoundingMode) ) (! (= ($generated@@13 ($generated@@12 $generated@@27)) $generated@@27)
 :pattern ( ($generated@@12 $generated@@27))
))) (forall (($generated@@28 T@U) ) (!  (=> (= (type $generated@@28) $generated@@5) (= ($generated@@12 ($generated@@13 $generated@@28)) $generated@@28))
 :pattern ( ($generated@@13 $generated@@28))
))) (forall (($generated@@29 RoundingMode) ) (! (= (type ($generated@@12 $generated@@29)) $generated@@5)
 :pattern ( ($generated@@12 $generated@@29))
))) (forall (($generated@@30 String) ) (! (= ($generated@@15 ($generated@@14 $generated@@30)) $generated@@30)
 :pattern ( ($generated@@14 $generated@@30))
))) (forall (($generated@@31 T@U) ) (!  (=> (= (type $generated@@31) $generated@@6) (= ($generated@@14 ($generated@@15 $generated@@31)) $generated@@31))
 :pattern ( ($generated@@15 $generated@@31))
))) (forall (($generated@@32 String) ) (! (= (type ($generated@@14 $generated@@32)) $generated@@6)
 :pattern ( ($generated@@14 $generated@@32))
))) (forall (($generated@@33 (RegEx String)) ) (! (= ($generated@@17 ($generated@@16 $generated@@33)) $generated@@33)
 :pattern ( ($generated@@16 $generated@@33))
))) (forall (($generated@@34 T@U) ) (!  (=> (= (type $generated@@34) $generated@@7) (= ($generated@@16 ($generated@@17 $generated@@34)) $generated@@34))
 :pattern ( ($generated@@17 $generated@@34))
))) (forall (($generated@@35 (RegEx String)) ) (! (= (type ($generated@@16 $generated@@35)) $generated@@7)
 :pattern ( ($generated@@16 $generated@@35))
))))
(assert (forall (($generated@@36 T@U) ) (! (UOrdering2 $generated@@36 $generated@@36)
 :no-pattern ($generated $generated@@36)
 :no-pattern ($generated@@0 $generated@@36)
)))
(assert (forall (($generated@@37 T@U) ($generated@@38 T@U) ($generated@@39 T@U) ) (! (let (($generated@@40 (type $generated@@37)))
 (=> (and (and (= (type $generated@@38) $generated@@40) (= (type $generated@@39) $generated@@40)) (and (UOrdering2 $generated@@37 $generated@@38) (UOrdering2 $generated@@38 $generated@@39))) (UOrdering2 $generated@@37 $generated@@39)))
 :pattern ( (UOrdering2 $generated@@37 $generated@@38) (UOrdering2 $generated@@38 $generated@@39))
)))
(assert (forall (($generated@@41 T@U) ($generated@@42 T@U) ) (! (let (($generated@@43 (type $generated@@41)))
 (=> (= (type $generated@@42) $generated@@43) (=> (and (UOrdering2 $generated@@41 $generated@@42) (UOrdering2 $generated@@42 $generated@@41)) (= $generated@@41 $generated@@42))))
 :pattern ( (UOrdering2 $generated@@41 $generated@@42) (UOrdering2 $generated@@42 $generated@@41))
)))
(assert  (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (= ($generated@@1 $generated@@64) 6) (= (type $generated@@44) $generated@@64)) (= (type $generated@@45) $generated@@64)) (= (type $generated@@46) $generated@@64)) (= (type $generated@@47) $generated@@64)) (= (type $generated@@48) $generated@@64)) (= ($generated@@1 $generated@@65) 7)) (= (type $generated@@49) $generated@@65)) (= (type $generated@@50) $generated@@65)) (= (type $generated@@51) $generated@@65)) (= (type $generated@@52) $generated@@65)) (= (type $generated@@53) $generated@@65)) (= (type $generated@@54) $generated@@65)) (= (type $generated@@55) $generated@@65)) (= (type $generated@@56) $generated@@65)) (= (type $generated@@57) $generated@@65)) (= (type $generated@@58) $generated@@65)) (= (type $generated@@59) $generated@@65)) (forall (($generated@@70 T@T) ) (= ($generated@@1 ($generated@@66 $generated@@70)) 8))) (forall (($generated@@71 T@T) ) (! (= ($generated@@67 ($generated@@66 $generated@@71)) $generated@@71)
 :pattern ( ($generated@@66 $generated@@71))
))) (= (type $generated@@60) ($generated@@66 $generated@@4))) (= ($generated@@1 $generated@@68) 9)) (= (type $generated@@61) $generated@@68)) (= (type $generated@@62) $generated@@65)) (= ($generated@@1 $generated@@69) 10)) (= (type $generated@@63) $generated@@69)))
(assert (distinct $generated@@44 $generated@@45 $generated@@46 $generated@@47 $generated@@48 $generated@@49 $generated@@50 $generated@@51 $generated@@52 $generated@@53 $generated@@54 $generated@@55 $generated@@56 $generated@@57 $generated@@58 $generated@@59 $generated@@60 $generated@@61 $generated@@62 $generated@@63)
)
(assert (forall (($generated@@73 T@U) ) (! (= (type ($generated@@72 $generated@@73)) $generated@@65)
 :pattern ( ($generated@@72 $generated@@73))
)))
(assert (= ($generated@@72 $generated@@44) $generated@@49))
(assert (= ($generated@@72 $generated@@45) $generated@@50))
(assert (= ($generated@@72 $generated@@46) $generated@@51))
(assert (= ($generated@@72 $generated@@47) $generated@@52))
(assert (= ($generated@@72 $generated@@48) $generated@@53))
(assert  (and (and (and (and (and (and (and (and (and (and (and (and (and (forall (($generated@@85 T@T) ($generated@@86 T@T) ) (= ($generated@@1 ($generated@@76 $generated@@85 $generated@@86)) 11)) (forall (($generated@@87 T@T) ($generated@@88 T@T) ) (! (= ($generated@@79 ($generated@@76 $generated@@87 $generated@@88)) $generated@@87)
 :pattern ( ($generated@@76 $generated@@87 $generated@@88))
))) (forall (($generated@@89 T@T) ($generated@@90 T@T) ) (! (= ($generated@@80 ($generated@@76 $generated@@89 $generated@@90)) $generated@@90)
 :pattern ( ($generated@@76 $generated@@89 $generated@@90))
))) (forall (($generated@@91 T@U) ($generated@@92 T@U) ) (! (let (($generated@@93 ($generated@@80 (type $generated@@91))))
(= (type ($generated@@81 $generated@@91 $generated@@92)) $generated@@93))
 :pattern ( ($generated@@81 $generated@@91 $generated@@92))
))) (forall (($generated@@94 T@U) ($generated@@95 T@U) ($generated@@96 T@U) ) (! (let (($generated@@97 (type $generated@@96)))
(let (($generated@@98 (type $generated@@95)))
(= (type ($generated@@82 $generated@@94 $generated@@95 $generated@@96)) ($generated@@76 $generated@@98 $generated@@97))))
 :pattern ( ($generated@@82 $generated@@94 $generated@@95 $generated@@96))
))) (forall (($generated@@99 T@U) ($generated@@100 T@U) ($generated@@101 T@U) ) (! (let (($generated@@102 ($generated@@80 (type $generated@@99))))
 (=> (= (type $generated@@101) $generated@@102) (= ($generated@@81 ($generated@@82 $generated@@99 $generated@@100 $generated@@101) $generated@@100) $generated@@101)))
 :weight 0
))) (and (forall (($generated@@103 T@U) ($generated@@104 T@U) ($generated@@105 T@U) ($generated@@106 T@U) ) (!  (or (= $generated@@105 $generated@@106) (= ($generated@@81 ($generated@@82 $generated@@104 $generated@@105 $generated@@103) $generated@@106) ($generated@@81 $generated@@104 $generated@@106)))
 :weight 0
)) (forall (($generated@@107 T@U) ($generated@@108 T@U) ($generated@@109 T@U) ($generated@@110 T@U) ) (!  (or true (= ($generated@@81 ($generated@@82 $generated@@108 $generated@@109 $generated@@107) $generated@@110) ($generated@@81 $generated@@108 $generated@@110)))
 :weight 0
)))) (= ($generated@@1 $generated@@77) 12)) (forall (($generated@@111 T@U) ($generated@@112 T@U) ) (! (let (($generated@@113 ($generated@@67 (type $generated@@112))))
(= (type ($generated@@83 $generated@@111 $generated@@112)) $generated@@113))
 :pattern ( ($generated@@83 $generated@@111 $generated@@112))
))) (= ($generated@@1 $generated@@78) 13)) (forall (($generated@@114 T@U) ($generated@@115 T@U) ($generated@@116 T@U) ) (! (= (type ($generated@@84 $generated@@114 $generated@@115 $generated@@116)) $generated@@78)
 :pattern ( ($generated@@84 $generated@@114 $generated@@115 $generated@@116))
))) (forall (($generated@@117 T@U) ($generated@@118 T@U) ($generated@@119 T@U) ) (! (let (($generated@@120 ($generated@@67 (type $generated@@118))))
 (=> (= (type $generated@@119) $generated@@120) (= ($generated@@83 ($generated@@84 $generated@@117 $generated@@118 $generated@@119) $generated@@118) $generated@@119)))
 :weight 0
))) (and (forall (($generated@@121 T@U) ($generated@@122 T@U) ($generated@@123 T@U) ($generated@@124 T@U) ) (!  (or (= $generated@@123 $generated@@124) (= ($generated@@83 ($generated@@84 $generated@@122 $generated@@123 $generated@@121) $generated@@124) ($generated@@83 $generated@@122 $generated@@124)))
 :weight 0
)) (forall (($generated@@125 T@U) ($generated@@126 T@U) ($generated@@127 T@U) ($generated@@128 T@U) ) (!  (or true (= ($generated@@83 ($generated@@84 $generated@@126 $generated@@127 $generated@@125) $generated@@128) ($generated@@83 $generated@@126 $generated@@128)))
 :weight 0
)))) (forall (($generated@@129 Int) ) (! (= (type ($generated@@75 $generated@@129)) $generated@@64)
 :pattern ( ($generated@@75 $generated@@129))
))))
(assert (forall (($generated@@130 T@U) ($generated@@131 T@U) ) (!  (=> (and (= (type $generated@@130) $generated@@2) (= (type $generated@@131) ($generated@@76 $generated@@77 $generated@@78))) ($generated@@74 $generated@@130 ($generated@@75 0) $generated@@131))
 :pattern ( ($generated@@74 $generated@@130 ($generated@@75 0) $generated@@131))
)))
(assert (forall (($generated@@133 T@U) ) (!  (=> (= (type $generated@@133) $generated@@2) ($generated@@132 $generated@@133 ($generated@@75 0)))
 :pattern ( ($generated@@132 $generated@@133 ($generated@@75 0)))
)))
(assert  (and (= ($generated@@1 $generated@@136) 14) (forall (($generated@@137 T@U) ($generated@@138 T@U) ) (! (= (type ($generated@@135 $generated@@137 $generated@@138)) $generated@@64)
 :pattern ( ($generated@@135 $generated@@137 $generated@@138))
))))
(assert (forall (($generated@@139 T@U) ($generated@@140 T@U) ($generated@@141 T@U) ) (!  (=> (and (and (and (= (type $generated@@139) $generated@@64) (= (type $generated@@140) $generated@@64)) (= (type $generated@@141) $generated@@136)) ($generated@@132 $generated@@141 ($generated@@135 $generated@@139 $generated@@140))) ($generated@@134 $generated@@141))
 :pattern ( ($generated@@134 $generated@@141) ($generated@@132 $generated@@141 ($generated@@135 $generated@@139 $generated@@140)))
)))
(assert  (and (and (= ($generated@@1 $generated@@145) 15) (forall (($generated@@146 T@U) ) (! (= (type ($generated@@143 $generated@@146)) $generated@@145)
 :pattern ( ($generated@@143 $generated@@146))
))) (forall (($generated@@147 T@U) ) (! (= (type ($generated@@144 $generated@@147)) $generated@@145)
 :pattern ( ($generated@@144 $generated@@147))
))))
(assert (forall (($generated@@148 T@U) ($generated@@149 T@U) ) (!  (=> (and (and (= (type $generated@@148) $generated@@136) (= (type $generated@@149) $generated@@136)) true) (= ($generated@@142 $generated@@148 $generated@@149)  (and (= ($generated@@143 $generated@@148) ($generated@@143 $generated@@149)) (= ($generated@@144 $generated@@148) ($generated@@144 $generated@@149)))))
 :pattern ( ($generated@@142 $generated@@148 $generated@@149))
)))
(assert (forall (($generated@@152 T@U) ) (! (= (type ($generated@@150 $generated@@152)) $generated@@64)
 :pattern ( ($generated@@150 $generated@@152))
)))
(assert (forall (($generated@@153 T@U) ($generated@@154 T@U) ) (!  (=> (and (and (= (type $generated@@153) ($generated@@76 $generated@@145 $generated@@2)) (= (type $generated@@154) $generated@@64)) ($generated@@132 $generated@@153 ($generated@@150 $generated@@154))) ($generated@@151 $generated@@153))
 :pattern ( ($generated@@132 $generated@@153 ($generated@@150 $generated@@154)))
)))
(assert  (and (and (and (and (and (and (and (forall (($generated@@161 T@T) ($generated@@162 T@T) ) (= ($generated@@1 ($generated@@157 $generated@@161 $generated@@162)) 16)) (forall (($generated@@163 T@T) ($generated@@164 T@T) ) (! (= ($generated@@158 ($generated@@157 $generated@@163 $generated@@164)) $generated@@163)
 :pattern ( ($generated@@157 $generated@@163 $generated@@164))
))) (forall (($generated@@165 T@T) ($generated@@166 T@T) ) (! (= ($generated@@159 ($generated@@157 $generated@@165 $generated@@166)) $generated@@166)
 :pattern ( ($generated@@157 $generated@@165 $generated@@166))
))) (forall (($generated@@167 T@U) ($generated@@168 T@U) ($generated@@169 T@U) ) (! (let (($generated@@170 ($generated@@159 (type $generated@@167))))
(= (type ($generated@@155 $generated@@167 $generated@@168 $generated@@169)) $generated@@170))
 :pattern ( ($generated@@155 $generated@@167 $generated@@168 $generated@@169))
))) (forall (($generated@@171 T@U) ($generated@@172 T@U) ($generated@@173 T@U) ($generated@@174 T@U) ) (! (let (($generated@@175 (type $generated@@174)))
(let (($generated@@176 (type $generated@@172)))
(= (type ($generated@@160 $generated@@171 $generated@@172 $generated@@173 $generated@@174)) ($generated@@157 $generated@@176 $generated@@175))))
 :pattern ( ($generated@@160 $generated@@171 $generated@@172 $generated@@173 $generated@@174))
))) (forall (($generated@@177 T@U) ($generated@@178 T@U) ($generated@@179 T@U) ($generated@@180 T@U) ) (! (let (($generated@@181 ($generated@@159 (type $generated@@177))))
 (=> (= (type $generated@@180) $generated@@181) (= ($generated@@155 ($generated@@160 $generated@@177 $generated@@178 $generated@@179 $generated@@180) $generated@@178 $generated@@179) $generated@@180)))
 :weight 0
))) (and (and (forall (($generated@@182 T@U) ($generated@@183 T@U) ($generated@@184 T@U) ($generated@@185 T@U) ($generated@@186 T@U) ($generated@@187 T@U) ) (!  (or (= $generated@@184 $generated@@186) (= ($generated@@155 ($generated@@160 $generated@@183 $generated@@184 $generated@@185 $generated@@182) $generated@@186 $generated@@187) ($generated@@155 $generated@@183 $generated@@186 $generated@@187)))
 :weight 0
)) (forall (($generated@@188 T@U) ($generated@@189 T@U) ($generated@@190 T@U) ($generated@@191 T@U) ($generated@@192 T@U) ($generated@@193 T@U) ) (!  (or (= $generated@@191 $generated@@193) (= ($generated@@155 ($generated@@160 $generated@@189 $generated@@190 $generated@@191 $generated@@188) $generated@@192 $generated@@193) ($generated@@155 $generated@@189 $generated@@192 $generated@@193)))
 :weight 0
))) (forall (($generated@@194 T@U) ($generated@@195 T@U) ($generated@@196 T@U) ($generated@@197 T@U) ($generated@@198 T@U) ($generated@@199 T@U) ) (!  (or true (= ($generated@@155 ($generated@@160 $generated@@195 $generated@@196 $generated@@197 $generated@@194) $generated@@198 $generated@@199) ($generated@@155 $generated@@195 $generated@@198 $generated@@199)))
 :weight 0
)))) (forall (($generated@@200 T@U) ($generated@@201 T@U) ($generated@@202 T@U) ($generated@@203 Bool) ) (! (= (type ($generated@@156 $generated@@200 $generated@@201 $generated@@202 $generated@@203)) ($generated@@157 $generated@@77 $generated@@4))
 :pattern ( ($generated@@156 $generated@@200 $generated@@201 $generated@@202 $generated@@203))
))))
(assert (forall (($generated@@204 T@U) ($generated@@205 T@U) ($generated@@206 T@U) ($generated@@207 Bool) ($generated@@208 T@U) ($generated@@209 T@U) ) (! (let (($generated@@210 ($generated@@67 (type $generated@@209))))
 (=> (and (and (and (and (= (type $generated@@204) $generated@@77) (= (type $generated@@205) ($generated@@76 $generated@@77 $generated@@78))) (= (type $generated@@206) ($generated@@66 $generated@@4))) (= (type $generated@@208) $generated@@77)) (= (type $generated@@209) ($generated@@66 $generated@@210))) (= ($generated@@0 ($generated@@155 ($generated@@156 $generated@@204 $generated@@205 $generated@@206 $generated@@207) $generated@@208 $generated@@209))  (=> (and (not (= $generated@@208 $generated@@204)) ($generated@@0 ($generated@@83 ($generated@@81 $generated@@205 $generated@@208) $generated@@206))) $generated@@207))))
 :pattern ( ($generated@@155 ($generated@@156 $generated@@204 $generated@@205 $generated@@206 $generated@@207) $generated@@208 $generated@@209))
)))
(assert (forall (($generated@@213 T@U) ($generated@@214 T@U) ) (! (= (type ($generated@@211 $generated@@213 $generated@@214)) $generated@@136)
 :pattern ( ($generated@@211 $generated@@213 $generated@@214))
)))
(assert (forall (($generated@@215 T@U) ($generated@@216 T@U) ($generated@@217 T@U) ($generated@@218 T@U) ) (!  (=> (and (and (and (= (type $generated@@215) $generated@@64) (= (type $generated@@216) $generated@@64)) (= (type $generated@@217) $generated@@145)) (= (type $generated@@218) $generated@@145)) (= ($generated@@132 ($generated@@211 $generated@@217 $generated@@218) ($generated@@135 $generated@@215 $generated@@216))  (and ($generated@@212 $generated@@217 $generated@@215) ($generated@@212 $generated@@218 $generated@@216))))
 :pattern ( ($generated@@132 ($generated@@211 $generated@@217 $generated@@218) ($generated@@135 $generated@@215 $generated@@216)))
)))
(assert (forall (($generated@@219 T@U) ($generated@@220 T@U) ) (!  (=> (and (= (type $generated@@219) $generated@@136) (= (type $generated@@220) $generated@@136)) (= ($generated@@142 $generated@@219 $generated@@220) (= $generated@@219 $generated@@220)))
 :pattern ( ($generated@@142 $generated@@219 $generated@@220))
)))
(assert  (and (and (forall (($generated@@224 T@T) ) (= ($generated@@1 ($generated@@223 $generated@@224)) 17)) (forall (($generated@@225 T@T) ) (! (= ($generated@@222 ($generated@@223 $generated@@225)) $generated@@225)
 :pattern ( ($generated@@223 $generated@@225))
))) (forall (($generated@@226 T@U) ($generated@@227 Int) ) (! (let (($generated@@228 ($generated@@222 (type $generated@@226))))
(= (type ($generated@@221 $generated@@226 $generated@@227)) ($generated@@223 $generated@@228)))
 :pattern ( ($generated@@221 $generated@@226 $generated@@227))
))))
(assert (forall (($generated@@229 T@U) ($generated@@230 Int) ) (! (let (($generated@@231 ($generated@@222 (type $generated@@229))))
 (=> (and (= (type $generated@@229) ($generated@@223 $generated@@231)) (= $generated@@230 0)) (= ($generated@@221 $generated@@229 $generated@@230) $generated@@229)))
 :pattern ( ($generated@@221 $generated@@229 $generated@@230))
)))
(assert (forall (($generated@@233 T@U) ) (! (= (type ($generated@@232 $generated@@233)) $generated@@64)
 :pattern ( ($generated@@232 $generated@@233))
)))
(assert (forall (($generated@@234 T@U) ($generated@@235 T@U) ) (!  (=> (and (= (type $generated@@234) ($generated@@76 $generated@@145 $generated@@4)) (= (type $generated@@235) $generated@@64)) (= ($generated@@132 $generated@@234 ($generated@@232 $generated@@235)) (forall (($generated@@236 T@U) ) (!  (=> (and (= (type $generated@@236) $generated@@145) ($generated@@0 ($generated@@81 $generated@@234 $generated@@236))) ($generated@@212 $generated@@236 $generated@@235))
 :pattern ( ($generated@@81 $generated@@234 $generated@@236))
))))
 :pattern ( ($generated@@132 $generated@@234 ($generated@@232 $generated@@235)))
)))
(assert (forall (($generated@@238 T@U) ) (! (= (type ($generated@@237 $generated@@238)) $generated@@64)
 :pattern ( ($generated@@237 $generated@@238))
)))
(assert (forall (($generated@@239 T@U) ($generated@@240 T@U) ) (!  (=> (and (= (type $generated@@239) ($generated@@76 $generated@@145 $generated@@4)) (= (type $generated@@240) $generated@@64)) (= ($generated@@132 $generated@@239 ($generated@@237 $generated@@240)) (forall (($generated@@241 T@U) ) (!  (=> (and (= (type $generated@@241) $generated@@145) ($generated@@0 ($generated@@81 $generated@@239 $generated@@241))) ($generated@@212 $generated@@241 $generated@@240))
 :pattern ( ($generated@@81 $generated@@239 $generated@@241))
))))
 :pattern ( ($generated@@132 $generated@@239 ($generated@@237 $generated@@240)))
)))
(assert (forall (($generated@@243 Int) ) (! (= ($generated@@242 $generated@@243) $generated@@243)
 :pattern ( ($generated@@242 $generated@@243))
)))
(assert (forall (($generated@@245 T@U) ) (! (let (($generated@@246 (type $generated@@245)))
(= (type ($generated@@244 $generated@@245)) $generated@@246))
 :pattern ( ($generated@@244 $generated@@245))
)))
(assert (forall (($generated@@247 T@U) ) (! (= ($generated@@244 $generated@@247) $generated@@247)
 :pattern ( ($generated@@244 $generated@@247))
)))
(assert  (and (forall (($generated@@251 T@U) ($generated@@252 Int) ) (! (let (($generated@@253 ($generated@@222 (type $generated@@251))))
(= (type ($generated@@248 $generated@@251 $generated@@252)) $generated@@253))
 :pattern ( ($generated@@248 $generated@@251 $generated@@252))
)) (forall (($generated@@254 T@U) ($generated@@255 Int) ) (! (let (($generated@@256 ($generated@@222 (type $generated@@254))))
(= (type ($generated@@249 $generated@@254 $generated@@255)) ($generated@@223 $generated@@256)))
 :pattern ( ($generated@@249 $generated@@254 $generated@@255))
))))
(assert (forall (($generated@@257 T@U) ($generated@@258 Int) ($generated@@259 Int) ) (! (let (($generated@@260 ($generated@@222 (type $generated@@257))))
 (=> (= (type $generated@@257) ($generated@@223 $generated@@260)) (=> (and (and (<= 0 $generated@@259) (< $generated@@259 $generated@@258)) (< $generated@@259 ($generated@@250 $generated@@257))) (= ($generated@@248 ($generated@@249 $generated@@257 $generated@@258) $generated@@259) ($generated@@248 $generated@@257 $generated@@259)))))
 :weight 25
 :pattern ( ($generated@@248 ($generated@@249 $generated@@257 $generated@@258) $generated@@259))
 :pattern ( ($generated@@248 $generated@@257 $generated@@259) ($generated@@249 $generated@@257 $generated@@258))
)))
(assert (forall (($generated@@263 T@U) ($generated@@264 T@U) ($generated@@265 T@U) ($generated@@266 T@U) ($generated@@267 T@U) ) (!  (=> (and (and (and (and (and (= (type $generated@@263) $generated@@64) (= (type $generated@@264) $generated@@64)) (= (type $generated@@265) $generated@@145)) (= (type $generated@@266) $generated@@145)) (= (type $generated@@267) ($generated@@76 $generated@@77 $generated@@78))) ($generated@@261 $generated@@267)) (= ($generated@@74 ($generated@@211 $generated@@265 $generated@@266) ($generated@@135 $generated@@263 $generated@@264) $generated@@267)  (and ($generated@@262 $generated@@265 $generated@@263 $generated@@267) ($generated@@262 $generated@@266 $generated@@264 $generated@@267))))
 :pattern ( ($generated@@74 ($generated@@211 $generated@@265 $generated@@266) ($generated@@135 $generated@@263 $generated@@264) $generated@@267))
)))
(assert (forall (($generated@@268 T@U) ($generated@@269 Int) ) (! (let (($generated@@270 ($generated@@222 (type $generated@@268))))
 (=> (= (type $generated@@268) ($generated@@223 $generated@@270)) (=> (and (<= 0 $generated@@269) (<= $generated@@269 ($generated@@250 $generated@@268))) (= ($generated@@250 ($generated@@221 $generated@@268 $generated@@269)) (- ($generated@@250 $generated@@268) $generated@@269)))))
 :pattern ( ($generated@@250 ($generated@@221 $generated@@268 $generated@@269)))
)))
(assert (forall (($generated@@272 T@U) ) (! (= (type ($generated@@271 $generated@@272)) $generated@@68)
 :pattern ( ($generated@@271 $generated@@272))
)))
(assert (forall (($generated@@273 T@U) ) (!  (=> (= (type $generated@@273) $generated@@136) (= ($generated@@134 $generated@@273) (= ($generated@@271 $generated@@273) $generated@@61)))
 :pattern ( ($generated@@134 $generated@@273))
)))
(assert (forall (($generated@@275 T@U) ($generated@@276 T@U) ) (! (let (($generated@@277 ($generated@@222 (type $generated@@275))))
 (=> (and (= (type $generated@@275) ($generated@@223 $generated@@277)) (= (type $generated@@276) ($generated@@223 $generated@@277))) (= ($generated@@274 $generated@@275 $generated@@276)  (and (= ($generated@@250 $generated@@275) ($generated@@250 $generated@@276)) (forall (($generated@@278 Int) ) (!  (=> (and (<= 0 $generated@@278) (< $generated@@278 ($generated@@250 $generated@@275))) (= ($generated@@248 $generated@@275 $generated@@278) ($generated@@248 $generated@@276 $generated@@278)))
 :pattern ( ($generated@@248 $generated@@275 $generated@@278))
 :pattern ( ($generated@@248 $generated@@276 $generated@@278))
))))))
 :pattern ( ($generated@@274 $generated@@275 $generated@@276))
)))
(assert (forall (($generated@@280 T@U) ($generated@@281 Int) ) (! (let (($generated@@282 ($generated@@222 (type $generated@@280))))
 (=> (= (type $generated@@280) ($generated@@223 $generated@@282)) (=> (and (<= 0 $generated@@281) (< $generated@@281 ($generated@@250 $generated@@280))) (< ($generated@@279 ($generated@@249 $generated@@280 $generated@@281)) ($generated@@279 $generated@@280)))))
 :pattern ( ($generated@@279 ($generated@@249 $generated@@280 $generated@@281)))
)))
(assert (forall (($generated@@283 T@U) ) (!  (=> (and (= (type $generated@@283) $generated@@136) ($generated@@134 $generated@@283)) (exists (($generated@@284 T@U) ($generated@@285 T@U) ) (!  (and (and (= (type $generated@@284) $generated@@145) (= (type $generated@@285) $generated@@145)) (= $generated@@283 ($generated@@211 $generated@@284 $generated@@285)))
 :no-pattern (type $generated@@284)
 :no-pattern (type $generated@@285)
 :no-pattern ($generated $generated@@284)
 :no-pattern ($generated@@0 $generated@@284)
 :no-pattern ($generated $generated@@285)
 :no-pattern ($generated@@0 $generated@@285)
)))
 :pattern ( ($generated@@134 $generated@@283))
)))
(assert (forall (($generated@@287 T@T) ) (! (= (type ($generated@@286 $generated@@287)) ($generated@@223 $generated@@287))
 :pattern ( ($generated@@286 $generated@@287))
)))
(assert (forall (($generated@@288 T@T) ) (! (= ($generated@@250 ($generated@@286 $generated@@288)) 0)
 :pattern ( ($generated@@286 $generated@@288))
)))
(assert (forall (($generated@@289 T@U) ($generated@@290 Int) ) (! (let (($generated@@291 ($generated@@222 (type $generated@@289))))
 (=> (= (type $generated@@289) ($generated@@223 $generated@@291)) (=> (and (< 0 $generated@@290) (<= $generated@@290 ($generated@@250 $generated@@289))) (< ($generated@@279 ($generated@@221 $generated@@289 $generated@@290)) ($generated@@279 $generated@@289)))))
 :pattern ( ($generated@@279 ($generated@@221 $generated@@289 $generated@@290)))
)))
(assert (forall (($generated@@293 T@U) ) (! (= (type ($generated@@292 $generated@@293)) $generated@@145)
 :pattern ( ($generated@@292 $generated@@293))
)))
(assert (forall (($generated@@294 T@U) ($generated@@295 T@U) ($generated@@296 T@U) ) (!  (=> (and (= (type $generated@@295) $generated@@64) (= (type $generated@@296) ($generated@@76 $generated@@77 $generated@@78))) (= ($generated@@262 ($generated@@292 $generated@@294) $generated@@295 $generated@@296) ($generated@@74 $generated@@294 $generated@@295 $generated@@296)))
 :pattern ( ($generated@@262 ($generated@@292 $generated@@294) $generated@@295 $generated@@296))
)))
(assert (forall (($generated@@297 T@U) ($generated@@298 Int) ($generated@@299 Int) ) (! (let (($generated@@300 ($generated@@222 (type $generated@@297))))
 (=> (= (type $generated@@297) ($generated@@223 $generated@@300)) (=> (and (and (<= 0 $generated@@298) (<= 0 $generated@@299)) (< $generated@@299 (- ($generated@@250 $generated@@297) $generated@@298))) (= ($generated@@248 ($generated@@221 $generated@@297 $generated@@298) $generated@@299) ($generated@@248 $generated@@297 (+ $generated@@299 $generated@@298))))))
 :weight 25
 :pattern ( ($generated@@248 ($generated@@221 $generated@@297 $generated@@298) $generated@@299))
)))
(assert (forall (($generated@@303 T@T) ) (! (= (type ($generated@@302 $generated@@303)) ($generated@@76 $generated@@303 $generated@@2))
 :pattern ( ($generated@@302 $generated@@303))
)))
(assert (forall (($generated@@304 T@U) ) (! (let (($generated@@305 ($generated@@79 (type $generated@@304))))
 (=> (= (type $generated@@304) ($generated@@76 $generated@@305 $generated@@2)) (and (= (= ($generated@@301 $generated@@304) 0) (= $generated@@304 ($generated@@302 $generated@@305))) (=> (not (= ($generated@@301 $generated@@304) 0)) (exists (($generated@@306 T@U) ) (!  (and (= (type $generated@@306) $generated@@305) (< 0 ($generated ($generated@@81 $generated@@304 $generated@@306))))
 :no-pattern (type $generated@@306)
 :no-pattern ($generated $generated@@306)
 :no-pattern ($generated@@0 $generated@@306)
))))))
 :pattern ( ($generated@@301 $generated@@304))
)))
(assert  (and (and (and (and (forall (($generated@@312 T@T) ($generated@@313 T@T) ) (= ($generated@@1 ($generated@@309 $generated@@312 $generated@@313)) 18)) (forall (($generated@@314 T@T) ($generated@@315 T@T) ) (! (= ($generated@@310 ($generated@@309 $generated@@314 $generated@@315)) $generated@@314)
 :pattern ( ($generated@@309 $generated@@314 $generated@@315))
))) (forall (($generated@@316 T@T) ($generated@@317 T@T) ) (! (= ($generated@@311 ($generated@@309 $generated@@316 $generated@@317)) $generated@@317)
 :pattern ( ($generated@@309 $generated@@316 $generated@@317))
))) (forall (($generated@@318 T@U) ) (! (let (($generated@@319 ($generated@@310 (type $generated@@318))))
(= (type ($generated@@307 $generated@@318)) ($generated@@76 $generated@@319 $generated@@4)))
 :pattern ( ($generated@@307 $generated@@318))
))) (forall (($generated@@320 T@T) ($generated@@321 T@T) ) (! (= (type ($generated@@308 $generated@@320 $generated@@321)) ($generated@@309 $generated@@320 $generated@@321))
 :pattern ( ($generated@@308 $generated@@320 $generated@@321))
))))
(assert (forall (($generated@@322 T@U) ($generated@@323 T@T) ) (! (let (($generated@@324 (type $generated@@322)))
 (not ($generated@@0 ($generated@@81 ($generated@@307 ($generated@@308 $generated@@324 $generated@@323)) $generated@@322))))
 :pattern ( (let (($generated@@324 (type $generated@@322)))
($generated@@81 ($generated@@307 ($generated@@308 $generated@@324 $generated@@323)) $generated@@322)))
)))
(assert  (and (and (and (and (forall (($generated@@330 T@T) ($generated@@331 T@T) ) (= ($generated@@1 ($generated@@327 $generated@@330 $generated@@331)) 19)) (forall (($generated@@332 T@T) ($generated@@333 T@T) ) (! (= ($generated@@328 ($generated@@327 $generated@@332 $generated@@333)) $generated@@332)
 :pattern ( ($generated@@327 $generated@@332 $generated@@333))
))) (forall (($generated@@334 T@T) ($generated@@335 T@T) ) (! (= ($generated@@329 ($generated@@327 $generated@@334 $generated@@335)) $generated@@335)
 :pattern ( ($generated@@327 $generated@@334 $generated@@335))
))) (forall (($generated@@336 T@U) ) (! (let (($generated@@337 ($generated@@328 (type $generated@@336))))
(= (type ($generated@@325 $generated@@336)) ($generated@@76 $generated@@337 $generated@@4)))
 :pattern ( ($generated@@325 $generated@@336))
))) (forall (($generated@@338 T@T) ($generated@@339 T@T) ) (! (= (type ($generated@@326 $generated@@338 $generated@@339)) ($generated@@327 $generated@@338 $generated@@339))
 :pattern ( ($generated@@326 $generated@@338 $generated@@339))
))))
(assert (forall (($generated@@340 T@U) ($generated@@341 T@T) ) (! (let (($generated@@342 (type $generated@@340)))
 (not ($generated@@0 ($generated@@81 ($generated@@325 ($generated@@326 $generated@@342 $generated@@341)) $generated@@340))))
 :pattern ( (let (($generated@@342 (type $generated@@340)))
($generated@@81 ($generated@@325 ($generated@@326 $generated@@342 $generated@@341)) $generated@@340)))
)))
(assert (forall (($generated@@343 T@U) ) (! (let (($generated@@344 ($generated@@79 (type $generated@@343))))
 (=> (= (type $generated@@343) ($generated@@76 $generated@@344 $generated@@2)) (= ($generated@@151 $generated@@343) (forall (($generated@@345 T@U) ) (!  (=> (= (type $generated@@345) $generated@@344) (and (<= 0 ($generated ($generated@@81 $generated@@343 $generated@@345))) (<= ($generated ($generated@@81 $generated@@343 $generated@@345)) ($generated@@301 $generated@@343))))
 :pattern ( ($generated@@81 $generated@@343 $generated@@345))
)))))
 :pattern ( ($generated@@151 $generated@@343))
)))
(assert (forall (($generated@@346 T@U) ) (! (let (($generated@@347 ($generated@@311 (type $generated@@346))))
(let (($generated@@348 ($generated@@310 (type $generated@@346))))
 (=> (= (type $generated@@346) ($generated@@309 $generated@@348 $generated@@347)) (or (= $generated@@346 ($generated@@308 $generated@@348 $generated@@347)) (exists (($generated@@349 T@U) ) (!  (and (= (type $generated@@349) $generated@@348) ($generated@@0 ($generated@@81 ($generated@@307 $generated@@346) $generated@@349)))
 :no-pattern (type $generated@@349)
 :no-pattern ($generated $generated@@349)
 :no-pattern ($generated@@0 $generated@@349)
))))))
 :pattern ( ($generated@@307 $generated@@346))
)))
(assert (forall (($generated@@351 T@U) ) (! (let (($generated@@352 ($generated@@311 (type $generated@@351))))
(= (type ($generated@@350 $generated@@351)) ($generated@@76 $generated@@352 $generated@@4)))
 :pattern ( ($generated@@350 $generated@@351))
)))
(assert (forall (($generated@@353 T@U) ) (! (let (($generated@@354 ($generated@@311 (type $generated@@353))))
(let (($generated@@355 ($generated@@310 (type $generated@@353))))
 (=> (= (type $generated@@353) ($generated@@309 $generated@@355 $generated@@354)) (or (= $generated@@353 ($generated@@308 $generated@@355 $generated@@354)) (exists (($generated@@356 T@U) ) (!  (and (= (type $generated@@356) $generated@@354) ($generated@@0 ($generated@@81 ($generated@@350 $generated@@353) $generated@@356)))
 :no-pattern (type $generated@@356)
 :no-pattern ($generated $generated@@356)
 :no-pattern ($generated@@0 $generated@@356)
))))))
 :pattern ( ($generated@@350 $generated@@353))
)))
(assert (forall (($generated@@357 T@U) ) (! (let (($generated@@358 ($generated@@329 (type $generated@@357))))
(let (($generated@@359 ($generated@@328 (type $generated@@357))))
 (=> (= (type $generated@@357) ($generated@@327 $generated@@359 $generated@@358)) (or (= $generated@@357 ($generated@@326 $generated@@359 $generated@@358)) (exists (($generated@@360 T@U) ) (!  (and (= (type $generated@@360) $generated@@359) ($generated@@0 ($generated@@81 ($generated@@325 $generated@@357) $generated@@360)))
 :no-pattern (type $generated@@360)
 :no-pattern ($generated $generated@@360)
 :no-pattern ($generated@@0 $generated@@360)
))))))
 :pattern ( ($generated@@325 $generated@@357))
)))
(assert (forall (($generated@@362 T@U) ) (! (let (($generated@@363 ($generated@@329 (type $generated@@362))))
(= (type ($generated@@361 $generated@@362)) ($generated@@76 $generated@@363 $generated@@4)))
 :pattern ( ($generated@@361 $generated@@362))
)))
(assert (forall (($generated@@364 T@U) ) (! (let (($generated@@365 ($generated@@329 (type $generated@@364))))
(let (($generated@@366 ($generated@@328 (type $generated@@364))))
 (=> (= (type $generated@@364) ($generated@@327 $generated@@366 $generated@@365)) (or (= $generated@@364 ($generated@@326 $generated@@366 $generated@@365)) (exists (($generated@@367 T@U) ) (!  (and (= (type $generated@@367) $generated@@365) ($generated@@0 ($generated@@81 ($generated@@361 $generated@@364) $generated@@367)))
 :no-pattern (type $generated@@367)
 :no-pattern ($generated $generated@@367)
 :no-pattern ($generated@@0 $generated@@367)
))))))
 :pattern ( ($generated@@361 $generated@@364))
)))
(assert (forall (($generated@@368 T@U) ($generated@@369 T@U) ) (!  (=> (and (= (type $generated@@368) ($generated@@76 $generated@@145 $generated@@2)) (= (type $generated@@369) $generated@@64)) (= ($generated@@132 $generated@@368 ($generated@@150 $generated@@369)) (forall (($generated@@370 T@U) ) (!  (=> (and (= (type $generated@@370) $generated@@145) (< 0 ($generated ($generated@@81 $generated@@368 $generated@@370)))) ($generated@@212 $generated@@370 $generated@@369))
 :pattern ( ($generated@@81 $generated@@368 $generated@@370))
))))
 :pattern ( ($generated@@132 $generated@@368 ($generated@@150 $generated@@369)))
)))
(assert (forall (($generated@@371 T@U) ($generated@@372 T@U) ($generated@@373 T@U) ) (!  (=> (and (and (= (type $generated@@371) ($generated@@76 $generated@@145 $generated@@4)) (= (type $generated@@372) $generated@@64)) (= (type $generated@@373) ($generated@@76 $generated@@77 $generated@@78))) (= ($generated@@74 $generated@@371 ($generated@@232 $generated@@372) $generated@@373) (forall (($generated@@374 T@U) ) (!  (=> (and (= (type $generated@@374) $generated@@145) ($generated@@0 ($generated@@81 $generated@@371 $generated@@374))) ($generated@@262 $generated@@374 $generated@@372 $generated@@373))
 :pattern ( ($generated@@81 $generated@@371 $generated@@374))
))))
 :pattern ( ($generated@@74 $generated@@371 ($generated@@232 $generated@@372) $generated@@373))
)))
(assert (forall (($generated@@375 T@U) ($generated@@376 T@U) ($generated@@377 T@U) ) (!  (=> (and (and (= (type $generated@@375) ($generated@@76 $generated@@145 $generated@@4)) (= (type $generated@@376) $generated@@64)) (= (type $generated@@377) ($generated@@76 $generated@@77 $generated@@78))) (= ($generated@@74 $generated@@375 ($generated@@237 $generated@@376) $generated@@377) (forall (($generated@@378 T@U) ) (!  (=> (and (= (type $generated@@378) $generated@@145) ($generated@@0 ($generated@@81 $generated@@375 $generated@@378))) ($generated@@262 $generated@@378 $generated@@376 $generated@@377))
 :pattern ( ($generated@@81 $generated@@375 $generated@@378))
))))
 :pattern ( ($generated@@74 $generated@@375 ($generated@@237 $generated@@376) $generated@@377))
)))
(assert (forall (($generated@@379 T@U) ) (! (let (($generated@@380 (type $generated@@379)))
(= ($generated ($generated@@81 ($generated@@302 $generated@@380) $generated@@379)) 0))
 :pattern ( (let (($generated@@380 (type $generated@@379)))
($generated@@81 ($generated@@302 $generated@@380) $generated@@379)))
)))
(assert  (and (and (forall (($generated@@384 T@U) ) (! (= (type ($generated@@381 $generated@@384)) ($generated@@76 $generated@@145 $generated@@4))
 :pattern ( ($generated@@381 $generated@@384))
)) (forall (($generated@@385 T@T) ($generated@@386 T@U) ) (! (= (type ($generated@@382 $generated@@385 $generated@@386)) $generated@@385)
 :pattern ( ($generated@@382 $generated@@385 $generated@@386))
))) (forall (($generated@@387 T@U) ) (! (let (($generated@@388 ($generated@@311 (type $generated@@387))))
(let (($generated@@389 ($generated@@310 (type $generated@@387))))
(= (type ($generated@@383 $generated@@387)) ($generated@@76 $generated@@389 $generated@@388))))
 :pattern ( ($generated@@383 $generated@@387))
))))
(assert (forall (($generated@@390 T@U) ($generated@@391 T@U) ) (!  (=> (and (= (type $generated@@390) ($generated@@309 $generated@@145 $generated@@145)) (= (type $generated@@391) $generated@@145)) (= ($generated@@0 ($generated@@81 ($generated@@381 $generated@@390) $generated@@391))  (and ($generated@@0 ($generated@@81 ($generated@@307 $generated@@390) ($generated@@143 ($generated@@382 $generated@@136 $generated@@391)))) (= ($generated@@81 ($generated@@383 $generated@@390) ($generated@@143 ($generated@@382 $generated@@136 $generated@@391))) ($generated@@144 ($generated@@382 $generated@@136 $generated@@391))))))
 :pattern ( ($generated@@81 ($generated@@381 $generated@@390) $generated@@391))
)))
(assert  (and (forall (($generated@@394 T@U) ) (! (= (type ($generated@@392 $generated@@394)) ($generated@@76 $generated@@145 $generated@@4))
 :pattern ( ($generated@@392 $generated@@394))
)) (forall (($generated@@395 T@U) ) (! (let (($generated@@396 ($generated@@329 (type $generated@@395))))
(let (($generated@@397 ($generated@@328 (type $generated@@395))))
(= (type ($generated@@393 $generated@@395)) ($generated@@76 $generated@@397 $generated@@396))))
 :pattern ( ($generated@@393 $generated@@395))
))))
(assert (forall (($generated@@398 T@U) ($generated@@399 T@U) ) (!  (=> (and (= (type $generated@@398) ($generated@@327 $generated@@145 $generated@@145)) (= (type $generated@@399) $generated@@145)) (= ($generated@@0 ($generated@@81 ($generated@@392 $generated@@398) $generated@@399))  (and ($generated@@0 ($generated@@81 ($generated@@325 $generated@@398) ($generated@@143 ($generated@@382 $generated@@136 $generated@@399)))) (= ($generated@@81 ($generated@@393 $generated@@398) ($generated@@143 ($generated@@382 $generated@@136 $generated@@399))) ($generated@@144 ($generated@@382 $generated@@136 $generated@@399))))))
 :pattern ( ($generated@@81 ($generated@@392 $generated@@398) $generated@@399))
)))
(assert (forall (($generated@@400 T@U) ($generated@@401 T@U) ) (! (let (($generated@@402 (type $generated@@401)))
(let (($generated@@403 ($generated@@310 (type $generated@@400))))
 (=> (= (type $generated@@400) ($generated@@309 $generated@@403 $generated@@402)) (= ($generated@@0 ($generated@@81 ($generated@@350 $generated@@400) $generated@@401)) (exists (($generated@@404 T@U) ) (!  (and (= (type $generated@@404) $generated@@403) (and ($generated@@0 ($generated@@81 ($generated@@307 $generated@@400) $generated@@404)) (= $generated@@401 ($generated@@81 ($generated@@383 $generated@@400) $generated@@404))))
 :pattern ( ($generated@@81 ($generated@@307 $generated@@400) $generated@@404))
 :pattern ( ($generated@@81 ($generated@@383 $generated@@400) $generated@@404))
))))))
 :pattern ( ($generated@@81 ($generated@@350 $generated@@400) $generated@@401))
)))
(assert (forall (($generated@@405 T@U) ($generated@@406 T@U) ) (! (let (($generated@@407 (type $generated@@406)))
(let (($generated@@408 ($generated@@328 (type $generated@@405))))
 (=> (= (type $generated@@405) ($generated@@327 $generated@@408 $generated@@407)) (= ($generated@@0 ($generated@@81 ($generated@@361 $generated@@405) $generated@@406)) (exists (($generated@@409 T@U) ) (!  (and (= (type $generated@@409) $generated@@408) (and ($generated@@0 ($generated@@81 ($generated@@325 $generated@@405) $generated@@409)) (= $generated@@406 ($generated@@81 ($generated@@393 $generated@@405) $generated@@409))))
 :pattern ( ($generated@@81 ($generated@@325 $generated@@405) $generated@@409))
 :pattern ( ($generated@@81 ($generated@@393 $generated@@405) $generated@@409))
))))))
 :pattern ( ($generated@@81 ($generated@@361 $generated@@405) $generated@@406))
)))
(assert (forall (($generated@@411 T@U) ($generated@@412 T@U) ) (! (= (type ($generated@@410 $generated@@411 $generated@@412)) $generated@@64)
 :pattern ( ($generated@@410 $generated@@411 $generated@@412))
)))
(assert (forall (($generated@@413 T@U) ($generated@@414 T@U) ($generated@@415 T@U) ($generated@@416 T@U) ) (!  (=> (and (and (and (= (type $generated@@413) ($generated@@309 $generated@@145 $generated@@145)) (= (type $generated@@414) $generated@@64)) (= (type $generated@@415) $generated@@64)) (= (type $generated@@416) ($generated@@76 $generated@@77 $generated@@78))) (= ($generated@@74 $generated@@413 ($generated@@410 $generated@@414 $generated@@415) $generated@@416) (forall (($generated@@417 T@U) ) (!  (=> (and (= (type $generated@@417) $generated@@145) ($generated@@0 ($generated@@81 ($generated@@307 $generated@@413) $generated@@417))) (and ($generated@@262 ($generated@@81 ($generated@@383 $generated@@413) $generated@@417) $generated@@415 $generated@@416) ($generated@@262 $generated@@417 $generated@@414 $generated@@416)))
 :pattern ( ($generated@@81 ($generated@@383 $generated@@413) $generated@@417))
 :pattern ( ($generated@@81 ($generated@@307 $generated@@413) $generated@@417))
))))
 :pattern ( ($generated@@74 $generated@@413 ($generated@@410 $generated@@414 $generated@@415) $generated@@416))
)))
(assert (forall (($generated@@419 T@U) ($generated@@420 T@U) ) (! (= (type ($generated@@418 $generated@@419 $generated@@420)) $generated@@64)
 :pattern ( ($generated@@418 $generated@@419 $generated@@420))
)))
(assert (forall (($generated@@421 T@U) ($generated@@422 T@U) ($generated@@423 T@U) ($generated@@424 T@U) ) (!  (=> (and (and (and (= (type $generated@@421) ($generated@@327 $generated@@145 $generated@@145)) (= (type $generated@@422) $generated@@64)) (= (type $generated@@423) $generated@@64)) (= (type $generated@@424) ($generated@@76 $generated@@77 $generated@@78))) (= ($generated@@74 $generated@@421 ($generated@@418 $generated@@422 $generated@@423) $generated@@424) (forall (($generated@@425 T@U) ) (!  (=> (and (= (type $generated@@425) $generated@@145) ($generated@@0 ($generated@@81 ($generated@@325 $generated@@421) $generated@@425))) (and ($generated@@262 ($generated@@81 ($generated@@393 $generated@@421) $generated@@425) $generated@@423 $generated@@424) ($generated@@262 $generated@@425 $generated@@422 $generated@@424)))
 :pattern ( ($generated@@81 ($generated@@393 $generated@@421) $generated@@425))
 :pattern ( ($generated@@81 ($generated@@325 $generated@@421) $generated@@425))
))))
 :pattern ( ($generated@@74 $generated@@421 ($generated@@418 $generated@@422 $generated@@423) $generated@@424))
)))
(assert (forall (($generated@@426 T@U) ($generated@@427 T@U) ) (! (let (($generated@@428 ($generated@@222 (type $generated@@426))))
 (=> (and (and (= (type $generated@@426) ($generated@@223 $generated@@428)) (= (type $generated@@427) ($generated@@223 $generated@@428))) ($generated@@274 $generated@@426 $generated@@427)) (= $generated@@426 $generated@@427)))
 :pattern ( ($generated@@274 $generated@@426 $generated@@427))
)))
(assert (forall (($generated@@429 T@U) ($generated@@430 Int) ) (! (let (($generated@@431 ($generated@@222 (type $generated@@429))))
 (=> (= (type $generated@@429) ($generated@@223 $generated@@431)) (=> (and (<= 0 $generated@@430) (<= $generated@@430 ($generated@@250 $generated@@429))) (= ($generated@@250 ($generated@@249 $generated@@429 $generated@@430)) $generated@@430))))
 :pattern ( ($generated@@250 ($generated@@249 $generated@@429 $generated@@430)))
)))
(assert (forall (($generated@@433 T@T) ) (! (= (type ($generated@@432 $generated@@433)) ($generated@@76 $generated@@433 $generated@@4))
 :pattern ( ($generated@@432 $generated@@433))
)))
(assert (forall (($generated@@434 T@U) ) (! (let (($generated@@435 ($generated@@329 (type $generated@@434))))
(let (($generated@@436 ($generated@@328 (type $generated@@434))))
 (=> (= (type $generated@@434) ($generated@@327 $generated@@436 $generated@@435)) (= (= $generated@@434 ($generated@@326 $generated@@436 $generated@@435)) (= ($generated@@325 $generated@@434) ($generated@@432 $generated@@436))))))
 :pattern ( ($generated@@325 $generated@@434))
)))
(assert (forall (($generated@@437 T@U) ) (! (let (($generated@@438 ($generated@@329 (type $generated@@437))))
(let (($generated@@439 ($generated@@328 (type $generated@@437))))
 (=> (= (type $generated@@437) ($generated@@327 $generated@@439 $generated@@438)) (= (= $generated@@437 ($generated@@326 $generated@@439 $generated@@438)) (= ($generated@@361 $generated@@437) ($generated@@432 $generated@@438))))))
 :pattern ( ($generated@@361 $generated@@437))
)))
(assert (forall (($generated@@440 T@U) ) (! (let (($generated@@441 ($generated@@329 (type $generated@@440))))
(let (($generated@@442 ($generated@@328 (type $generated@@440))))
 (=> (= (type $generated@@440) ($generated@@327 $generated@@442 $generated@@441)) (= (= $generated@@440 ($generated@@326 $generated@@442 $generated@@441)) (= ($generated@@392 $generated@@440) ($generated@@432 $generated@@145))))))
 :pattern ( ($generated@@392 $generated@@440))
)))
(assert (forall (($generated@@443 T@U) ) (! (let (($generated@@444 ($generated@@311 (type $generated@@443))))
(let (($generated@@445 ($generated@@310 (type $generated@@443))))
 (=> (= (type $generated@@443) ($generated@@309 $generated@@445 $generated@@444)) (or (= $generated@@443 ($generated@@308 $generated@@445 $generated@@444)) (exists (($generated@@446 T@U) ($generated@@447 T@U) ) (!  (and (and (= (type $generated@@446) $generated@@145) (= (type $generated@@447) $generated@@145)) ($generated@@0 ($generated@@81 ($generated@@381 $generated@@443) ($generated@@292 ($generated@@211 $generated@@446 $generated@@447)))))
 :no-pattern (type $generated@@446)
 :no-pattern (type $generated@@447)
 :no-pattern ($generated $generated@@446)
 :no-pattern ($generated@@0 $generated@@446)
 :no-pattern ($generated $generated@@447)
 :no-pattern ($generated@@0 $generated@@447)
))))))
 :pattern ( ($generated@@381 $generated@@443))
)))
(assert (forall (($generated@@448 T@U) ) (! (let (($generated@@449 ($generated@@329 (type $generated@@448))))
(let (($generated@@450 ($generated@@328 (type $generated@@448))))
 (=> (= (type $generated@@448) ($generated@@327 $generated@@450 $generated@@449)) (or (= $generated@@448 ($generated@@326 $generated@@450 $generated@@449)) (exists (($generated@@451 T@U) ($generated@@452 T@U) ) (!  (and (and (= (type $generated@@451) $generated@@145) (= (type $generated@@452) $generated@@145)) ($generated@@0 ($generated@@81 ($generated@@392 $generated@@448) ($generated@@292 ($generated@@211 $generated@@451 $generated@@452)))))
 :no-pattern (type $generated@@451)
 :no-pattern (type $generated@@452)
 :no-pattern ($generated $generated@@451)
 :no-pattern ($generated@@0 $generated@@451)
 :no-pattern ($generated $generated@@452)
 :no-pattern ($generated@@0 $generated@@452)
))))))
 :pattern ( ($generated@@392 $generated@@448))
)))
(assert (forall (($generated@@453 T@U) ) (!  (=> (and (= (type $generated@@453) $generated@@145) ($generated@@212 $generated@@453 $generated@@46)) (and (= ($generated@@292 ($generated@@382 $generated@@2 $generated@@453)) $generated@@453) ($generated@@132 ($generated@@382 $generated@@2 $generated@@453) $generated@@46)))
 :pattern ( ($generated@@212 $generated@@453 $generated@@46))
)))
(assert (forall (($generated@@454 T@U) ) (!  (=> (and (= (type $generated@@454) $generated@@145) ($generated@@212 $generated@@454 $generated@@47)) (and (= ($generated@@292 ($generated@@382 $generated@@3 $generated@@454)) $generated@@454) ($generated@@132 ($generated@@382 $generated@@3 $generated@@454) $generated@@47)))
 :pattern ( ($generated@@212 $generated@@454 $generated@@47))
)))
(assert (forall (($generated@@455 T@U) ) (!  (=> (and (= (type $generated@@455) $generated@@145) ($generated@@212 $generated@@455 $generated@@44)) (and (= ($generated@@292 ($generated@@382 $generated@@4 $generated@@455)) $generated@@455) ($generated@@132 ($generated@@382 $generated@@4 $generated@@455) $generated@@44)))
 :pattern ( ($generated@@212 $generated@@455 $generated@@44))
)))
(assert (= ($generated@@1 $generated@@456) 20))
(assert (forall (($generated@@457 T@U) ) (!  (=> (and (= (type $generated@@457) $generated@@145) ($generated@@212 $generated@@457 $generated@@45)) (and (= ($generated@@292 ($generated@@382 $generated@@456 $generated@@457)) $generated@@457) ($generated@@132 ($generated@@382 $generated@@456 $generated@@457) $generated@@45)))
 :pattern ( ($generated@@212 $generated@@457 $generated@@45))
)))
(assert (forall (($generated@@458 T@U) ($generated@@459 T@U) ) (!  (=> (= (type $generated@@459) $generated@@64) (= ($generated@@212 ($generated@@292 $generated@@458) $generated@@459) ($generated@@132 $generated@@458 $generated@@459)))
 :pattern ( ($generated@@212 ($generated@@292 $generated@@458) $generated@@459))
)))
(assert (forall (($generated@@460 T@U) ) (! (let (($generated@@461 ($generated@@79 (type $generated@@460))))
 (=> (= (type $generated@@460) ($generated@@76 $generated@@461 $generated@@2)) (<= 0 ($generated@@301 $generated@@460))))
 :pattern ( ($generated@@301 $generated@@460))
)))
(assert (forall (($generated@@462 T@U) ) (! (let (($generated@@463 ($generated@@222 (type $generated@@462))))
 (=> (= (type $generated@@462) ($generated@@223 $generated@@463)) (<= 0 ($generated@@250 $generated@@462))))
 :pattern ( ($generated@@250 $generated@@462))
)))
(assert (forall (($generated@@465 T@U) ) (! (= (type ($generated@@464 $generated@@465)) $generated@@64)
 :pattern ( ($generated@@464 $generated@@465))
)))
(assert (forall (($generated@@466 T@U) ($generated@@467 T@U) ) (!  (=> (and (= (type $generated@@466) $generated@@64) (= (type $generated@@467) $generated@@64)) (= ($generated@@464 ($generated@@410 $generated@@466 $generated@@467)) $generated@@466))
 :pattern ( ($generated@@410 $generated@@466 $generated@@467))
)))
(assert (forall (($generated@@469 T@U) ) (! (= (type ($generated@@468 $generated@@469)) $generated@@64)
 :pattern ( ($generated@@468 $generated@@469))
)))
(assert (forall (($generated@@470 T@U) ($generated@@471 T@U) ) (!  (=> (and (= (type $generated@@470) $generated@@64) (= (type $generated@@471) $generated@@64)) (= ($generated@@468 ($generated@@410 $generated@@470 $generated@@471)) $generated@@471))
 :pattern ( ($generated@@410 $generated@@470 $generated@@471))
)))
(assert (forall (($generated@@472 T@U) ($generated@@473 T@U) ) (!  (=> (and (= (type $generated@@472) $generated@@64) (= (type $generated@@473) $generated@@64)) (= ($generated@@72 ($generated@@410 $generated@@472 $generated@@473)) $generated@@58))
 :pattern ( ($generated@@410 $generated@@472 $generated@@473))
)))
(assert (forall (($generated@@475 T@U) ) (! (= (type ($generated@@474 $generated@@475)) $generated@@64)
 :pattern ( ($generated@@474 $generated@@475))
)))
(assert (forall (($generated@@476 T@U) ($generated@@477 T@U) ) (!  (=> (and (= (type $generated@@476) $generated@@64) (= (type $generated@@477) $generated@@64)) (= ($generated@@474 ($generated@@418 $generated@@476 $generated@@477)) $generated@@476))
 :pattern ( ($generated@@418 $generated@@476 $generated@@477))
)))
(assert (forall (($generated@@479 T@U) ) (! (= (type ($generated@@478 $generated@@479)) $generated@@64)
 :pattern ( ($generated@@478 $generated@@479))
)))
(assert (forall (($generated@@480 T@U) ($generated@@481 T@U) ) (!  (=> (and (= (type $generated@@480) $generated@@64) (= (type $generated@@481) $generated@@64)) (= ($generated@@478 ($generated@@418 $generated@@480 $generated@@481)) $generated@@481))
 :pattern ( ($generated@@418 $generated@@480 $generated@@481))
)))
(assert (forall (($generated@@482 T@U) ($generated@@483 T@U) ) (!  (=> (and (= (type $generated@@482) $generated@@64) (= (type $generated@@483) $generated@@64)) (= ($generated@@72 ($generated@@418 $generated@@482 $generated@@483)) $generated@@59))
 :pattern ( ($generated@@418 $generated@@482 $generated@@483))
)))
(assert (forall (($generated@@484 T@U) ($generated@@485 T@U) ) (!  (=> (and (= (type $generated@@484) $generated@@145) (= (type $generated@@485) $generated@@145)) (= ($generated@@271 ($generated@@211 $generated@@484 $generated@@485)) $generated@@61))
 :pattern ( ($generated@@211 $generated@@484 $generated@@485))
)))
(assert (forall (($generated@@487 T@U) ) (! (= (type ($generated@@486 $generated@@487)) $generated@@64)
 :pattern ( ($generated@@486 $generated@@487))
)))
(assert (forall (($generated@@488 T@U) ($generated@@489 T@U) ) (!  (=> (and (= (type $generated@@488) $generated@@64) (= (type $generated@@489) $generated@@64)) (= ($generated@@486 ($generated@@135 $generated@@488 $generated@@489)) $generated@@488))
 :pattern ( ($generated@@135 $generated@@488 $generated@@489))
)))
(assert (forall (($generated@@491 T@U) ) (! (= (type ($generated@@490 $generated@@491)) $generated@@64)
 :pattern ( ($generated@@490 $generated@@491))
)))
(assert (forall (($generated@@492 T@U) ($generated@@493 T@U) ) (!  (=> (and (= (type $generated@@492) $generated@@64) (= (type $generated@@493) $generated@@64)) (= ($generated@@490 ($generated@@135 $generated@@492 $generated@@493)) $generated@@493))
 :pattern ( ($generated@@135 $generated@@492 $generated@@493))
)))
(assert (forall (($generated@@494 T@U) ($generated@@495 T@U) ) (!  (=> (and (= (type $generated@@494) $generated@@145) (= (type $generated@@495) $generated@@145)) (= ($generated@@143 ($generated@@211 $generated@@494 $generated@@495)) $generated@@494))
 :pattern ( ($generated@@211 $generated@@494 $generated@@495))
)))
(assert (forall (($generated@@496 T@U) ($generated@@497 T@U) ) (!  (=> (and (= (type $generated@@496) $generated@@145) (= (type $generated@@497) $generated@@145)) (= ($generated@@144 ($generated@@211 $generated@@496 $generated@@497)) $generated@@497))
 :pattern ( ($generated@@211 $generated@@496 $generated@@497))
)))
(assert (forall (($generated@@499 T@U) ) (! (= (type ($generated@@498 $generated@@499)) $generated@@64)
 :pattern ( ($generated@@498 $generated@@499))
)))
(assert (forall (($generated@@500 T@U) ($generated@@501 T@U) ($generated@@502 T@U) ) (!  (=> (and (and (= (type $generated@@500) ($generated@@223 $generated@@145)) (= (type $generated@@501) $generated@@64)) (= (type $generated@@502) ($generated@@76 $generated@@77 $generated@@78))) (= ($generated@@74 $generated@@500 ($generated@@498 $generated@@501) $generated@@502) (forall (($generated@@503 Int) ) (!  (=> (and (<= 0 $generated@@503) (< $generated@@503 ($generated@@250 $generated@@500))) ($generated@@262 ($generated@@248 $generated@@500 $generated@@503) $generated@@501 $generated@@502))
 :pattern ( ($generated@@248 $generated@@500 $generated@@503))
))))
 :pattern ( ($generated@@74 $generated@@500 ($generated@@498 $generated@@501) $generated@@502))
)))
(assert (forall (($generated@@505 Int) ) (! (= ($generated@@504 ($generated@@75 $generated@@505)) $generated@@505)
 :pattern ( ($generated@@75 $generated@@505))
)))
(assert (forall (($generated@@507 T@U) ) (! (= (type ($generated@@506 $generated@@507)) $generated@@64)
 :pattern ( ($generated@@506 $generated@@507))
)))
(assert (forall (($generated@@508 T@U) ) (!  (=> (= (type $generated@@508) $generated@@64) (= ($generated@@506 ($generated@@232 $generated@@508)) $generated@@508))
 :pattern ( ($generated@@232 $generated@@508))
)))
(assert (forall (($generated@@509 T@U) ) (!  (=> (= (type $generated@@509) $generated@@64) (= ($generated@@72 ($generated@@232 $generated@@509)) $generated@@54))
 :pattern ( ($generated@@232 $generated@@509))
)))
(assert (forall (($generated@@511 T@U) ) (! (= (type ($generated@@510 $generated@@511)) $generated@@64)
 :pattern ( ($generated@@510 $generated@@511))
)))
(assert (forall (($generated@@512 T@U) ) (!  (=> (= (type $generated@@512) $generated@@64) (= ($generated@@510 ($generated@@237 $generated@@512)) $generated@@512))
 :pattern ( ($generated@@237 $generated@@512))
)))
(assert (forall (($generated@@513 T@U) ) (!  (=> (= (type $generated@@513) $generated@@64) (= ($generated@@72 ($generated@@237 $generated@@513)) $generated@@55))
 :pattern ( ($generated@@237 $generated@@513))
)))
(assert (forall (($generated@@515 T@U) ) (! (= (type ($generated@@514 $generated@@515)) $generated@@64)
 :pattern ( ($generated@@514 $generated@@515))
)))
(assert (forall (($generated@@516 T@U) ) (!  (=> (= (type $generated@@516) $generated@@64) (= ($generated@@514 ($generated@@150 $generated@@516)) $generated@@516))
 :pattern ( ($generated@@150 $generated@@516))
)))
(assert (forall (($generated@@517 T@U) ) (!  (=> (= (type $generated@@517) $generated@@64) (= ($generated@@72 ($generated@@150 $generated@@517)) $generated@@56))
 :pattern ( ($generated@@150 $generated@@517))
)))
(assert (forall (($generated@@519 T@U) ) (! (= (type ($generated@@518 $generated@@519)) $generated@@64)
 :pattern ( ($generated@@518 $generated@@519))
)))
(assert (forall (($generated@@520 T@U) ) (!  (=> (= (type $generated@@520) $generated@@64) (= ($generated@@518 ($generated@@498 $generated@@520)) $generated@@520))
 :pattern ( ($generated@@498 $generated@@520))
)))
(assert (forall (($generated@@521 T@U) ) (!  (=> (= (type $generated@@521) $generated@@64) (= ($generated@@72 ($generated@@498 $generated@@521)) $generated@@57))
 :pattern ( ($generated@@498 $generated@@521))
)))
(assert (forall (($generated@@522 T@U) ) (! (let (($generated@@523 (type $generated@@522)))
(= ($generated@@382 $generated@@523 ($generated@@292 $generated@@522)) $generated@@522))
 :pattern ( ($generated@@292 $generated@@522))
)))
(assert (forall (($generated@@524 T@U) ($generated@@525 T@U) ($generated@@526 T@U) ) (!  (=> (and (and (= (type $generated@@524) ($generated@@309 $generated@@145 $generated@@145)) (= (type $generated@@525) $generated@@64)) (= (type $generated@@526) $generated@@64)) (= ($generated@@132 $generated@@524 ($generated@@410 $generated@@525 $generated@@526)) (forall (($generated@@527 T@U) ) (!  (=> (and (= (type $generated@@527) $generated@@145) ($generated@@0 ($generated@@81 ($generated@@307 $generated@@524) $generated@@527))) (and ($generated@@212 ($generated@@81 ($generated@@383 $generated@@524) $generated@@527) $generated@@526) ($generated@@212 $generated@@527 $generated@@525)))
 :pattern ( ($generated@@81 ($generated@@383 $generated@@524) $generated@@527))
 :pattern ( ($generated@@81 ($generated@@307 $generated@@524) $generated@@527))
))))
 :pattern ( ($generated@@132 $generated@@524 ($generated@@410 $generated@@525 $generated@@526)))
)))
(assert (forall (($generated@@528 T@U) ($generated@@529 T@U) ($generated@@530 T@U) ) (!  (=> (and (and (= (type $generated@@528) ($generated@@327 $generated@@145 $generated@@145)) (= (type $generated@@529) $generated@@64)) (= (type $generated@@530) $generated@@64)) (= ($generated@@132 $generated@@528 ($generated@@418 $generated@@529 $generated@@530)) (forall (($generated@@531 T@U) ) (!  (=> (and (= (type $generated@@531) $generated@@145) ($generated@@0 ($generated@@81 ($generated@@325 $generated@@528) $generated@@531))) (and ($generated@@212 ($generated@@81 ($generated@@393 $generated@@528) $generated@@531) $generated@@530) ($generated@@212 $generated@@531 $generated@@529)))
 :pattern ( ($generated@@81 ($generated@@393 $generated@@528) $generated@@531))
 :pattern ( ($generated@@81 ($generated@@325 $generated@@528) $generated@@531))
))))
 :pattern ( ($generated@@132 $generated@@528 ($generated@@418 $generated@@529 $generated@@530)))
)))
(assert (forall (($generated@@534 T@U) ($generated@@535 T@U) ) (!  (=> (and (= (type $generated@@534) $generated@@145) (= (type $generated@@535) $generated@@145)) (< ($generated@@532 $generated@@534) ($generated@@533 ($generated@@211 $generated@@534 $generated@@535))))
 :pattern ( ($generated@@211 $generated@@534 $generated@@535))
)))
(assert (forall (($generated@@536 T@U) ($generated@@537 T@U) ) (!  (=> (and (= (type $generated@@536) $generated@@145) (= (type $generated@@537) $generated@@145)) (< ($generated@@532 $generated@@537) ($generated@@533 ($generated@@211 $generated@@536 $generated@@537))))
 :pattern ( ($generated@@211 $generated@@536 $generated@@537))
)))
(assert (forall (($generated@@538 T@U) ($generated@@539 T@U) ($generated@@540 T@U) ) (!  (=> (and (and (and (= (type $generated@@538) $generated@@145) (= (type $generated@@539) $generated@@64)) (= (type $generated@@540) $generated@@64)) ($generated@@212 $generated@@538 ($generated@@410 $generated@@539 $generated@@540))) (and (= ($generated@@292 ($generated@@382 ($generated@@309 $generated@@145 $generated@@145) $generated@@538)) $generated@@538) ($generated@@132 ($generated@@382 ($generated@@309 $generated@@145 $generated@@145) $generated@@538) ($generated@@410 $generated@@539 $generated@@540))))
 :pattern ( ($generated@@212 $generated@@538 ($generated@@410 $generated@@539 $generated@@540)))
)))
(assert (forall (($generated@@541 T@U) ($generated@@542 T@U) ($generated@@543 T@U) ) (!  (=> (and (and (and (= (type $generated@@541) $generated@@145) (= (type $generated@@542) $generated@@64)) (= (type $generated@@543) $generated@@64)) ($generated@@212 $generated@@541 ($generated@@418 $generated@@542 $generated@@543))) (and (= ($generated@@292 ($generated@@382 ($generated@@327 $generated@@145 $generated@@145) $generated@@541)) $generated@@541) ($generated@@132 ($generated@@382 ($generated@@327 $generated@@145 $generated@@145) $generated@@541) ($generated@@418 $generated@@542 $generated@@543))))
 :pattern ( ($generated@@212 $generated@@541 ($generated@@418 $generated@@542 $generated@@543)))
)))
(assert (forall (($generated@@544 T@U) ($generated@@545 T@U) ($generated@@546 T@U) ) (!  (=> (and (and (and (= (type $generated@@544) $generated@@64) (= (type $generated@@545) $generated@@64)) (= (type $generated@@546) $generated@@145)) ($generated@@212 $generated@@546 ($generated@@135 $generated@@544 $generated@@545))) (and (= ($generated@@292 ($generated@@382 $generated@@136 $generated@@546)) $generated@@546) ($generated@@132 ($generated@@382 $generated@@136 $generated@@546) ($generated@@135 $generated@@544 $generated@@545))))
 :pattern ( ($generated@@212 $generated@@546 ($generated@@135 $generated@@544 $generated@@545)))
)))
(assert (forall (($generated@@547 T@U) ) (! (let (($generated@@548 (type $generated@@547)))
 (not ($generated@@0 ($generated@@81 ($generated@@432 $generated@@548) $generated@@547))))
 :pattern ( (let (($generated@@548 (type $generated@@547)))
($generated@@81 ($generated@@432 $generated@@548) $generated@@547)))
)))
(assert (forall (($generated@@550 Int) ($generated@@551 Int) ) (! (= ($generated@@549 $generated@@550 $generated@@551) (mod $generated@@550 $generated@@551))
 :pattern ( ($generated@@549 $generated@@550 $generated@@551))
)))
(assert (forall (($generated@@553 T@U) ) (! (= (type ($generated@@552 $generated@@553)) $generated@@69)
 :pattern ( ($generated@@552 $generated@@553))
)))
(assert (forall (($generated@@554 T@U) ($generated@@555 T@U) ) (!  (=> (and (= (type $generated@@554) $generated@@64) (= (type $generated@@555) $generated@@64)) (and (= ($generated@@72 ($generated@@135 $generated@@554 $generated@@555)) $generated@@62) (= ($generated@@552 ($generated@@135 $generated@@554 $generated@@555)) $generated@@63)))
 :pattern ( ($generated@@135 $generated@@554 $generated@@555))
)))
(assert (forall (($generated@@557 Int) ($generated@@558 Int) ) (! (= ($generated@@556 $generated@@557 $generated@@558) (* $generated@@557 $generated@@558))
 :pattern ( ($generated@@556 $generated@@557 $generated@@558))
)))
(assert (forall (($generated@@559 T@U) ) (!  (=> (= (type $generated@@559) $generated@@136) (= ($generated@@532 ($generated@@292 $generated@@559)) ($generated@@533 $generated@@559)))
 :pattern ( ($generated@@532 ($generated@@292 $generated@@559)))
)))
(assert (forall (($generated@@560 T@U) ) (!  (=> (and (= (type $generated@@560) $generated@@145) ($generated@@212 $generated@@560 ($generated@@75 0))) (and (= ($generated@@292 ($generated@@382 $generated@@2 $generated@@560)) $generated@@560) ($generated@@132 ($generated@@382 ($generated@@76 $generated@@145 $generated@@4) $generated@@560) ($generated@@75 0))))
 :pattern ( ($generated@@212 $generated@@560 ($generated@@75 0)))
)))
(assert (forall (($generated@@561 T@U) ($generated@@562 T@U) ) (!  (=> (and (and (= (type $generated@@561) $generated@@145) (= (type $generated@@562) $generated@@64)) ($generated@@212 $generated@@561 ($generated@@232 $generated@@562))) (and (= ($generated@@292 ($generated@@382 ($generated@@76 $generated@@145 $generated@@4) $generated@@561)) $generated@@561) ($generated@@132 ($generated@@382 ($generated@@76 $generated@@145 $generated@@4) $generated@@561) ($generated@@232 $generated@@562))))
 :pattern ( ($generated@@212 $generated@@561 ($generated@@232 $generated@@562)))
)))
(assert (forall (($generated@@563 T@U) ($generated@@564 T@U) ) (!  (=> (and (and (= (type $generated@@563) $generated@@145) (= (type $generated@@564) $generated@@64)) ($generated@@212 $generated@@563 ($generated@@237 $generated@@564))) (and (= ($generated@@292 ($generated@@382 ($generated@@76 $generated@@145 $generated@@4) $generated@@563)) $generated@@563) ($generated@@132 ($generated@@382 ($generated@@76 $generated@@145 $generated@@4) $generated@@563) ($generated@@237 $generated@@564))))
 :pattern ( ($generated@@212 $generated@@563 ($generated@@237 $generated@@564)))
)))
(assert (forall (($generated@@565 T@U) ($generated@@566 T@U) ) (!  (=> (and (and (= (type $generated@@565) $generated@@145) (= (type $generated@@566) $generated@@64)) ($generated@@212 $generated@@565 ($generated@@150 $generated@@566))) (and (= ($generated@@292 ($generated@@382 ($generated@@76 $generated@@145 $generated@@2) $generated@@565)) $generated@@565) ($generated@@132 ($generated@@382 ($generated@@76 $generated@@145 $generated@@2) $generated@@565) ($generated@@150 $generated@@566))))
 :pattern ( ($generated@@212 $generated@@565 ($generated@@150 $generated@@566)))
)))
(assert (forall (($generated@@567 T@U) ($generated@@568 T@U) ) (!  (=> (and (and (= (type $generated@@567) $generated@@145) (= (type $generated@@568) $generated@@64)) ($generated@@212 $generated@@567 ($generated@@498 $generated@@568))) (and (= ($generated@@292 ($generated@@382 ($generated@@223 $generated@@145) $generated@@567)) $generated@@567) ($generated@@132 ($generated@@382 ($generated@@223 $generated@@145) $generated@@567) ($generated@@498 $generated@@568))))
 :pattern ( ($generated@@212 $generated@@567 ($generated@@498 $generated@@568)))
)))
(assert (forall (($generated@@569 T@U) ($generated@@570 Int) ($generated@@571 Int) ) (! (let (($generated@@572 ($generated@@222 (type $generated@@569))))
 (=> (= (type $generated@@569) ($generated@@223 $generated@@572)) (=> (and (and (<= 0 $generated@@570) (<= $generated@@570 $generated@@571)) (< $generated@@571 ($generated@@250 $generated@@569))) (= ($generated@@248 ($generated@@221 $generated@@569 $generated@@570) (- $generated@@571 $generated@@570)) ($generated@@248 $generated@@569 $generated@@571)))))
 :weight 25
 :pattern ( ($generated@@248 $generated@@569 $generated@@571) ($generated@@221 $generated@@569 $generated@@570))
)))
(assert (forall (($generated@@573 T@U) ($generated@@574 T@U) ($generated@@575 T@U) ) (!  (=> (and (and (= (type $generated@@573) ($generated@@76 $generated@@145 $generated@@2)) (= (type $generated@@574) $generated@@64)) (= (type $generated@@575) ($generated@@76 $generated@@77 $generated@@78))) (= ($generated@@74 $generated@@573 ($generated@@150 $generated@@574) $generated@@575) (forall (($generated@@576 T@U) ) (!  (=> (and (= (type $generated@@576) $generated@@145) (< 0 ($generated ($generated@@81 $generated@@573 $generated@@576)))) ($generated@@262 $generated@@576 $generated@@574 $generated@@575))
 :pattern ( ($generated@@81 $generated@@573 $generated@@576))
))))
 :pattern ( ($generated@@74 $generated@@573 ($generated@@150 $generated@@574) $generated@@575))
)))
(assert (forall (($generated@@577 T@U) ($generated@@578 Int) ($generated@@579 Int) ) (! (let (($generated@@580 ($generated@@222 (type $generated@@577))))
 (=> (= (type $generated@@577) ($generated@@223 $generated@@580)) (=> (and (and (<= 0 $generated@@578) (<= 0 $generated@@579)) (<= (+ $generated@@578 $generated@@579) ($generated@@250 $generated@@577))) (= ($generated@@221 ($generated@@221 $generated@@577 $generated@@578) $generated@@579) ($generated@@221 $generated@@577 (+ $generated@@578 $generated@@579))))))
 :pattern ( ($generated@@221 ($generated@@221 $generated@@577 $generated@@578) $generated@@579))
)))
(assert (forall (($generated@@581 T@U) ($generated@@582 T@U) ($generated@@583 T@U) ) (!  (=> (and (and (and (= (type $generated@@581) $generated@@136) (= (type $generated@@582) $generated@@64)) (= (type $generated@@583) ($generated@@76 $generated@@77 $generated@@78))) (and ($generated@@261 $generated@@583) (and ($generated@@134 $generated@@581) (exists (($generated@@584 T@U) ) (!  (and (= (type $generated@@584) $generated@@64) ($generated@@74 $generated@@581 ($generated@@135 $generated@@582 $generated@@584) $generated@@583))
 :pattern ( ($generated@@74 $generated@@581 ($generated@@135 $generated@@582 $generated@@584) $generated@@583))
))))) ($generated@@262 ($generated@@143 $generated@@581) $generated@@582 $generated@@583))
 :pattern ( ($generated@@262 ($generated@@143 $generated@@581) $generated@@582 $generated@@583))
)))
(assert (forall (($generated@@585 T@U) ($generated@@586 T@U) ($generated@@587 T@U) ) (!  (=> (and (and (and (= (type $generated@@585) $generated@@136) (= (type $generated@@586) $generated@@64)) (= (type $generated@@587) ($generated@@76 $generated@@77 $generated@@78))) (and ($generated@@261 $generated@@587) (and ($generated@@134 $generated@@585) (exists (($generated@@588 T@U) ) (!  (and (= (type $generated@@588) $generated@@64) ($generated@@74 $generated@@585 ($generated@@135 $generated@@588 $generated@@586) $generated@@587))
 :pattern ( ($generated@@74 $generated@@585 ($generated@@135 $generated@@588 $generated@@586) $generated@@587))
))))) ($generated@@262 ($generated@@144 $generated@@585) $generated@@586 $generated@@587))
 :pattern ( ($generated@@262 ($generated@@144 $generated@@585) $generated@@586 $generated@@587))
)))
(assert (forall (($generated@@589 T@U) ($generated@@590 T@U) ) (!  (=> (and (= (type $generated@@589) $generated@@145) (= (type $generated@@590) $generated@@145)) (= ($generated@@211 ($generated@@244 $generated@@589) ($generated@@244 $generated@@590)) ($generated@@244 ($generated@@211 $generated@@589 $generated@@590))))
 :pattern ( ($generated@@211 ($generated@@244 $generated@@589) ($generated@@244 $generated@@590)))
)))
(assert (forall (($generated@@591 Int) ) (! (= ($generated@@292 ($generated@@8 ($generated@@242 $generated@@591))) ($generated@@244 ($generated@@292 ($generated@@8 $generated@@591))))
 :pattern ( ($generated@@292 ($generated@@8 ($generated@@242 $generated@@591))))
)))
(assert (forall (($generated@@592 T@U) ) (! (= ($generated@@292 ($generated@@244 $generated@@592)) ($generated@@244 ($generated@@292 $generated@@592)))
 :pattern ( ($generated@@292 ($generated@@244 $generated@@592)))
)))
(assert (forall (($generated@@593 T@U) ) (! (let (($generated@@594 ($generated@@222 (type $generated@@593))))
 (=> (and (= (type $generated@@593) ($generated@@223 $generated@@594)) (= ($generated@@250 $generated@@593) 0)) (= $generated@@593 ($generated@@286 $generated@@594))))
 :pattern ( ($generated@@250 $generated@@593))
)))
(assert (forall (($generated@@595 T@U) ($generated@@596 Int) ) (! (let (($generated@@597 ($generated@@222 (type $generated@@595))))
 (=> (and (= (type $generated@@595) ($generated@@223 $generated@@597)) (= $generated@@596 0)) (= ($generated@@249 $generated@@595 $generated@@596) ($generated@@286 $generated@@597))))
 :pattern ( ($generated@@249 $generated@@595 $generated@@596))
)))
(assert (forall (($generated@@598 T@U) ($generated@@599 T@U) ($generated@@600 T@U) ) (! (let (($generated@@601 (type $generated@@599)))
 (=> (and (and (= (type $generated@@598) ($generated@@76 $generated@@601 $generated@@2)) (= (type $generated@@600) $generated@@2)) (<= 0 ($generated $generated@@600))) (= ($generated@@301 ($generated@@82 $generated@@598 $generated@@599 $generated@@600)) (+ (- ($generated@@301 $generated@@598) ($generated ($generated@@81 $generated@@598 $generated@@599))) ($generated $generated@@600)))))
 :pattern ( ($generated@@301 ($generated@@82 $generated@@598 $generated@@599 $generated@@600)))
)))
(assert (forall (($generated@@602 T@U) ($generated@@603 T@U) ) (!  (=> (and (= (type $generated@@602) ($generated@@76 $generated@@77 $generated@@78)) (= (type $generated@@603) $generated@@2)) ($generated@@74 $generated@@603 $generated@@46 $generated@@602))
 :pattern ( ($generated@@74 $generated@@603 $generated@@46 $generated@@602))
)))
(assert (forall (($generated@@604 T@U) ($generated@@605 T@U) ) (!  (=> (and (= (type $generated@@604) ($generated@@76 $generated@@77 $generated@@78)) (= (type $generated@@605) $generated@@3)) ($generated@@74 $generated@@605 $generated@@47 $generated@@604))
 :pattern ( ($generated@@74 $generated@@605 $generated@@47 $generated@@604))
)))
(assert (forall (($generated@@606 T@U) ($generated@@607 T@U) ) (!  (=> (and (= (type $generated@@606) ($generated@@76 $generated@@77 $generated@@78)) (= (type $generated@@607) $generated@@4)) ($generated@@74 $generated@@607 $generated@@44 $generated@@606))
 :pattern ( ($generated@@74 $generated@@607 $generated@@44 $generated@@606))
)))
(assert (forall (($generated@@608 T@U) ($generated@@609 T@U) ) (!  (=> (and (= (type $generated@@608) ($generated@@76 $generated@@77 $generated@@78)) (= (type $generated@@609) $generated@@456)) ($generated@@74 $generated@@609 $generated@@45 $generated@@608))
 :pattern ( ($generated@@74 $generated@@609 $generated@@45 $generated@@608))
)))
(assert (forall (($generated@@610 T@U) ($generated@@611 T@U) ) (!  (=> (and (= (type $generated@@610) ($generated@@76 $generated@@77 $generated@@78)) (= (type $generated@@611) $generated@@145)) ($generated@@74 $generated@@611 $generated@@48 $generated@@610))
 :pattern ( ($generated@@74 $generated@@611 $generated@@48 $generated@@610))
)))
(assert (forall (($generated@@612 T@U) ($generated@@613 T@U) ) (!  (=> (and (= (type $generated@@612) ($generated@@223 $generated@@145)) (= (type $generated@@613) $generated@@64)) (= ($generated@@132 $generated@@612 ($generated@@498 $generated@@613)) (forall (($generated@@614 Int) ) (!  (=> (and (<= 0 $generated@@614) (< $generated@@614 ($generated@@250 $generated@@612))) ($generated@@212 ($generated@@248 $generated@@612 $generated@@614) $generated@@613))
 :pattern ( ($generated@@248 $generated@@612 $generated@@614))
))))
 :pattern ( ($generated@@132 $generated@@612 ($generated@@498 $generated@@613)))
)))
(assert (forall (($generated@@615 T@U) ($generated@@616 Int) ) (!  (=> (= (type $generated@@615) ($generated@@223 $generated@@145)) (=> (and (<= 0 $generated@@616) (< $generated@@616 ($generated@@250 $generated@@615))) (< ($generated@@533 ($generated@@382 $generated@@136 ($generated@@248 $generated@@615 $generated@@616))) ($generated@@279 $generated@@615))))
 :pattern ( ($generated@@533 ($generated@@382 $generated@@136 ($generated@@248 $generated@@615 $generated@@616))))
)))
(assert (forall (($generated@@617 T@U) ($generated@@618 T@U) ($generated@@619 T@U) ) (!  (=> (and (and (and (= (type $generated@@617) ($generated@@309 $generated@@145 $generated@@145)) (= (type $generated@@618) $generated@@64)) (= (type $generated@@619) $generated@@64)) ($generated@@132 $generated@@617 ($generated@@410 $generated@@618 $generated@@619))) (and (and ($generated@@132 ($generated@@307 $generated@@617) ($generated@@232 $generated@@618)) ($generated@@132 ($generated@@350 $generated@@617) ($generated@@232 $generated@@619))) ($generated@@132 ($generated@@381 $generated@@617) ($generated@@232 ($generated@@135 $generated@@618 $generated@@619)))))
 :pattern ( ($generated@@132 $generated@@617 ($generated@@410 $generated@@618 $generated@@619)))
)))
(assert (forall (($generated@@620 T@U) ($generated@@621 T@U) ($generated@@622 T@U) ) (!  (=> (and (and (and (= (type $generated@@620) ($generated@@327 $generated@@145 $generated@@145)) (= (type $generated@@621) $generated@@64)) (= (type $generated@@622) $generated@@64)) ($generated@@132 $generated@@620 ($generated@@418 $generated@@621 $generated@@622))) (and (and ($generated@@132 ($generated@@325 $generated@@620) ($generated@@237 $generated@@621)) ($generated@@132 ($generated@@361 $generated@@620) ($generated@@237 $generated@@622))) ($generated@@132 ($generated@@392 $generated@@620) ($generated@@237 ($generated@@135 $generated@@621 $generated@@622)))))
 :pattern ( ($generated@@132 $generated@@620 ($generated@@418 $generated@@621 $generated@@622)))
)))
(assert (forall (($generated@@623 T@U) ) (!  (=> (= (type $generated@@623) $generated@@2) ($generated@@132 $generated@@623 $generated@@46))
 :pattern ( ($generated@@132 $generated@@623 $generated@@46))
)))
(assert (forall (($generated@@624 T@U) ) (!  (=> (= (type $generated@@624) $generated@@3) ($generated@@132 $generated@@624 $generated@@47))
 :pattern ( ($generated@@132 $generated@@624 $generated@@47))
)))
(assert (forall (($generated@@625 T@U) ) (!  (=> (= (type $generated@@625) $generated@@4) ($generated@@132 $generated@@625 $generated@@44))
 :pattern ( ($generated@@132 $generated@@625 $generated@@44))
)))
(assert (forall (($generated@@626 T@U) ) (!  (=> (= (type $generated@@626) $generated@@456) ($generated@@132 $generated@@626 $generated@@45))
 :pattern ( ($generated@@132 $generated@@626 $generated@@45))
)))
(assert (forall (($generated@@627 T@U) ) (!  (=> (= (type $generated@@627) $generated@@145) ($generated@@132 $generated@@627 $generated@@48))
 :pattern ( ($generated@@132 $generated@@627 $generated@@48))
)))
(push 1)
(declare-fun ControlFlow (Int Int) Int)
(declare-fun $generated@@628 () T@U)
(declare-fun $generated@@629 () Int)
(declare-fun $generated@@630 () T@U)
(declare-fun $generated@@631 () Int)
(declare-fun $generated@@632 () Int)
(declare-fun $generated@@633 () Int)
(declare-fun $generated@@634 () T@U)
(declare-fun $generated@@635 () Int)
(declare-fun $generated@@636 () T@U)
(declare-fun $generated@@637 () Int)
(declare-fun $generated@@638 () Int)
(declare-fun $generated@@639 () Int)
(declare-fun $generated@@640 () Int)
(declare-fun $generated@@641 () Int)
(declare-fun $generated@@642 () T@U)
(declare-fun $generated@@643 () T@U)
(declare-fun $generated@@644 () T@U)
(declare-fun $generated@@645 () T@U)
(declare-fun $generated@@646 () T@U)
(declare-fun $generated@@647 () T@U)
(declare-fun $generated@@648 () T@U)
(declare-fun $generated@@649 () T@U)
(declare-fun $generated@@650 () T@U)
(declare-fun $generated@@651 () T@U)
(declare-fun $generated@@652 (T@U) Bool)
(declare-fun $generated@@653 () T@U)
(declare-fun $generated@@654 () T@U)
(declare-fun $generated@@655 () Bool)
(declare-fun $generated@@656 () T@U)
(declare-fun $generated@@657 () T@U)
(declare-fun $generated@@658 () Int)
(assert  (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (= (type $generated@@628) ($generated@@223 $generated@@145)) (= (type $generated@@648) $generated@@145)) (= (type $generated@@647) ($generated@@223 $generated@@145))) (= (type $generated@@646) ($generated@@223 $generated@@145))) (= (type $generated@@645) ($generated@@223 $generated@@145))) (= (type $generated@@644) ($generated@@223 $generated@@145))) (= (type $generated@@643) ($generated@@223 $generated@@145))) (= (type $generated@@642) ($generated@@223 $generated@@145))) (= (type $generated@@636) ($generated@@223 $generated@@145))) (= (type $generated@@634) ($generated@@223 $generated@@145))) (= (type $generated@@630) $generated@@145)) (= (type $generated@@649) ($generated@@157 $generated@@77 $generated@@4))) (= (type $generated@@650) $generated@@77)) (= (type $generated@@651) ($generated@@76 $generated@@77 $generated@@78))) (= (type $generated@@653) $generated@@64)) (= (type $generated@@654) $generated@@145)) (= (type $generated@@656) $generated@@145)) (= (type $generated@@657) ($generated@@223 $generated@@145))))
(set-option :timeout 0)
(set-option :rlimit 0)
(assert (not
 (=> (= (ControlFlow 0 0) 56) (let (($generated@@659  (=> (= (ControlFlow 0 4) (- 0 3)) true)))
(let (($generated@@660  (=> (and (= ($generated@@549 ($generated@@250 $generated@@628) ($generated@@242 2)) ($generated@@242 0)) (< $generated@@629 ($generated@@250 $generated@@628))) (and (=> (= (ControlFlow 0 48) (- 0 49)) (and (<= 0 $generated@@629) (< $generated@@629 ($generated@@250 $generated@@628)))) (=> (and (<= 0 $generated@@629) (< $generated@@629 ($generated@@250 $generated@@628))) (=> (and (= $generated@@630 ($generated@@248 $generated@@628 $generated@@629)) (= (ControlFlow 0 48) 4)) $generated@@659))))))
(let (($generated@@661  (=> (and (not (= ($generated@@549 ($generated@@250 $generated@@628) ($generated@@242 2)) ($generated@@242 0))) (= (ControlFlow 0 52) 48)) $generated@@660)))
(let (($generated@@662  (=> (and (= ($generated@@549 ($generated@@250 $generated@@628) ($generated@@242 2)) ($generated@@242 0)) (= $generated@@631 ($generated@@250 $generated@@628))) (and (=> (= (ControlFlow 0 50) (- 0 51)) (= ($generated@@549 $generated@@631 ($generated@@242 2)) ($generated@@242 0))) (=> (= ($generated@@549 $generated@@631 ($generated@@242 2)) ($generated@@242 0)) (=> (= (ControlFlow 0 50) 48) $generated@@660))))))
(let (($generated@@663  (and (=> (= (ControlFlow 0 53) (- 0 54)) (not (= ($generated@@242 2) 0))) (=> (not (= ($generated@@242 2) 0)) (and (=> (= (ControlFlow 0 53) 50) $generated@@662) (=> (= (ControlFlow 0 53) 52) $generated@@661))))))
(let (($generated@@664  (=> (and (<= $generated@@632 $generated@@633) (<= $generated@@633 ($generated@@250 $generated@@628))) (and (=> (= (ControlFlow 0 43) (- 0 45)) (and (<= 0 $generated@@632) (<= $generated@@632 ($generated@@250 $generated@@628)))) (=> (and (<= 0 $generated@@632) (<= $generated@@632 ($generated@@250 $generated@@628))) (and (=> (= (ControlFlow 0 43) (- 0 44)) (and (<= $generated@@632 $generated@@633) (<= $generated@@633 ($generated@@250 $generated@@628)))) (=> (and (<= $generated@@632 $generated@@633) (<= $generated@@633 ($generated@@250 $generated@@628))) (=> (and (= $generated@@634 ($generated@@221 ($generated@@249 $generated@@628 $generated@@633) $generated@@632)) (= (ControlFlow 0 43) 4)) $generated@@659))))))))
(let (($generated@@665  (=> (and (< $generated@@633 $generated@@632) (= (ControlFlow 0 47) 43)) $generated@@664)))
(let (($generated@@666  (=> (and (<= $generated@@632 $generated@@633) (= (ControlFlow 0 46) 43)) $generated@@664)))
(let (($generated@@667  (=> (and (<= $generated@@633 $generated@@635) (<= $generated@@635 ($generated@@250 $generated@@628))) (and (=> (= (ControlFlow 0 38) (- 0 40)) (and (<= 0 $generated@@633) (<= $generated@@633 ($generated@@250 $generated@@628)))) (=> (and (<= 0 $generated@@633) (<= $generated@@633 ($generated@@250 $generated@@628))) (and (=> (= (ControlFlow 0 38) (- 0 39)) (and (<= $generated@@633 $generated@@635) (<= $generated@@635 ($generated@@250 $generated@@628)))) (=> (and (<= $generated@@633 $generated@@635) (<= $generated@@635 ($generated@@250 $generated@@628))) (=> (and (= $generated@@636 ($generated@@221 ($generated@@249 $generated@@628 $generated@@635) $generated@@633)) (= (ControlFlow 0 38) 4)) $generated@@659))))))))
(let (($generated@@668  (=> (and (< $generated@@635 $generated@@633) (= (ControlFlow 0 42) 38)) $generated@@667)))
(let (($generated@@669  (=> (and (<= $generated@@633 $generated@@635) (= (ControlFlow 0 41) 38)) $generated@@667)))
(let (($generated@@670  (=> (and (<= $generated@@632 ($generated@@250 $generated@@628)) (= ($generated@@549 ($generated@@250 $generated@@628) ($generated@@242 2)) ($generated@@242 0))) (and (=> (= (ControlFlow 0 28) (- 0 34)) (and (<= 0 $generated@@632) (<= $generated@@632 ($generated@@250 $generated@@628)))) (and (=> (= (ControlFlow 0 28) (- 0 33)) (and (<= $generated@@632 ($generated@@250 $generated@@628)) (<= ($generated@@250 $generated@@628) ($generated@@250 $generated@@628)))) (and (=> (= (ControlFlow 0 28) (- 0 32)) (and (<= 0 $generated@@632) (<= $generated@@632 ($generated@@250 $generated@@628)))) (=> (= $generated@@637 ($generated@@250 $generated@@628)) (and (=> (= (ControlFlow 0 28) (- 0 31)) (= ($generated@@549 $generated@@637 ($generated@@242 2)) ($generated@@242 0))) (=> (= ($generated@@549 $generated@@637 ($generated@@242 2)) ($generated@@242 0)) (and (=> (= (ControlFlow 0 28) (- 0 30)) (and (<= $generated@@632 ($generated@@250 $generated@@628)) (<= ($generated@@250 $generated@@628) ($generated@@250 $generated@@628)))) (and (=> (= (ControlFlow 0 28) (- 0 29)) ($generated@@274 ($generated@@221 ($generated@@249 $generated@@628 ($generated@@250 $generated@@628)) $generated@@632) ($generated@@221 ($generated@@249 $generated@@628 ($generated@@250 $generated@@628)) $generated@@632))) (=> ($generated@@274 ($generated@@221 ($generated@@249 $generated@@628 ($generated@@250 $generated@@628)) $generated@@632) ($generated@@221 ($generated@@249 $generated@@628 ($generated@@250 $generated@@628)) $generated@@632)) (=> (= (ControlFlow 0 28) 4) $generated@@659)))))))))))))
(let (($generated@@671  (=> (and (< ($generated@@250 $generated@@628) $generated@@632) (= (ControlFlow 0 37) 28)) $generated@@670)))
(let (($generated@@672  (=> (<= $generated@@632 ($generated@@250 $generated@@628)) (and (=> (= (ControlFlow 0 35) (- 0 36)) (not (= ($generated@@242 2) 0))) (=> (not (= ($generated@@242 2) 0)) (=> (= (ControlFlow 0 35) 28) $generated@@670))))))
(let (($generated@@673  (=> (and ($generated@@0 ($generated@@244 ($generated@@11 true))) (= (ControlFlow 0 27) 4)) $generated@@659)))
(let (($generated@@674  (=> (= $generated@@638 (+ $generated@@635 $generated@@635)) (and (=> (= (ControlFlow 0 20) (- 0 26)) (= ($generated@@549 $generated@@638 ($generated@@242 2)) ($generated@@242 0))) (=> (= ($generated@@549 $generated@@638 ($generated@@242 2)) ($generated@@242 0)) (=> (<= (+ $generated@@635 $generated@@635) ($generated@@250 $generated@@628)) (and (=> (= (ControlFlow 0 20) (- 0 25)) (and (<= 0 $generated@@632) (<= $generated@@632 ($generated@@250 $generated@@628)))) (=> (and (<= 0 $generated@@632) (<= $generated@@632 ($generated@@250 $generated@@628))) (=> (= $generated@@639 ($generated@@242 2)) (and (=> (= (ControlFlow 0 20) (- 0 24)) (= ($generated@@549 $generated@@639 ($generated@@242 2)) ($generated@@242 0))) (=> (= ($generated@@549 $generated@@639 ($generated@@242 2)) ($generated@@242 0)) (=> (= $generated@@640 ($generated@@556 ($generated@@242 2) $generated@@635)) (and (=> (= (ControlFlow 0 20) (- 0 23)) (= ($generated@@549 $generated@@640 ($generated@@242 2)) ($generated@@242 0))) (=> (= ($generated@@549 $generated@@640 ($generated@@242 2)) ($generated@@242 0)) (=> (= $generated@@641 ($generated@@556 ($generated@@242 2) $generated@@635)) (and (=> (= (ControlFlow 0 20) (- 0 22)) (= ($generated@@549 $generated@@641 ($generated@@242 2)) ($generated@@242 0))) (=> (= ($generated@@549 $generated@@641 ($generated@@242 2)) ($generated@@242 0)) (and (=> (= (ControlFlow 0 20) (- 0 21)) (and (<= $generated@@632 ($generated@@556 ($generated@@242 2) $generated@@635)) (<= ($generated@@556 ($generated@@242 2) $generated@@635) ($generated@@250 $generated@@628)))) (=> (and (<= $generated@@632 ($generated@@556 ($generated@@242 2) $generated@@635)) (<= ($generated@@556 ($generated@@242 2) $generated@@635) ($generated@@250 $generated@@628))) (=> (and (= $generated@@642 ($generated@@221 ($generated@@249 $generated@@628 ($generated@@556 ($generated@@242 2) $generated@@635)) $generated@@632)) (= (ControlFlow 0 20) 4)) $generated@@659))))))))))))))))))))
(let (($generated@@675  (=> (<= $generated@@632 ($generated@@250 $generated@@628)) (and (=> (= (ControlFlow 0 17) (- 0 19)) (and (<= 0 $generated@@632) (<= $generated@@632 ($generated@@250 $generated@@628)))) (=> (and (<= 0 $generated@@632) (<= $generated@@632 ($generated@@250 $generated@@628))) (and (=> (= (ControlFlow 0 17) (- 0 18)) (and (<= $generated@@632 ($generated@@250 $generated@@628)) (<= ($generated@@250 $generated@@628) ($generated@@250 $generated@@628)))) (=> (and (<= $generated@@632 ($generated@@250 $generated@@628)) (<= ($generated@@250 $generated@@628) ($generated@@250 $generated@@628))) (=> (and (= $generated@@643 ($generated@@221 ($generated@@249 $generated@@628 ($generated@@250 $generated@@628)) $generated@@632)) (= (ControlFlow 0 17) 4)) $generated@@659))))))))
(let (($generated@@676  (=> (<= $generated@@632 ($generated@@250 $generated@@628)) (and (=> (= (ControlFlow 0 15) (- 0 16)) (and (<= 0 $generated@@632) (<= $generated@@632 ($generated@@250 $generated@@628)))) (=> (and (<= 0 $generated@@632) (<= $generated@@632 ($generated@@250 $generated@@628))) (=> (and (= $generated@@644 ($generated@@221 $generated@@628 $generated@@632)) (= (ControlFlow 0 15) 4)) $generated@@659))))))
(let (($generated@@677  (=> (<= $generated@@635 ($generated@@250 $generated@@628)) (and (=> (= (ControlFlow 0 12) (- 0 14)) (and (<= 0 ($generated@@242 0)) (<= ($generated@@242 0) ($generated@@250 $generated@@628)))) (=> (and (<= 0 ($generated@@242 0)) (<= ($generated@@242 0) ($generated@@250 $generated@@628))) (and (=> (= (ControlFlow 0 12) (- 0 13)) (and (<= ($generated@@242 0) $generated@@635) (<= $generated@@635 ($generated@@250 $generated@@628)))) (=> (and (<= ($generated@@242 0) $generated@@635) (<= $generated@@635 ($generated@@250 $generated@@628))) (=> (and (= $generated@@645 ($generated@@221 ($generated@@249 $generated@@628 $generated@@635) ($generated@@242 0))) (= (ControlFlow 0 12) 4)) $generated@@659))))))))
(let (($generated@@678  (=> (<= $generated@@635 ($generated@@250 $generated@@628)) (and (=> (= (ControlFlow 0 10) (- 0 11)) (and (<= 0 $generated@@635) (<= $generated@@635 ($generated@@250 $generated@@628)))) (=> (and (<= 0 $generated@@635) (<= $generated@@635 ($generated@@250 $generated@@628))) (=> (and (= $generated@@646 ($generated@@249 $generated@@628 $generated@@635)) (= (ControlFlow 0 10) 4)) $generated@@659))))))
(let (($generated@@679  (=> (<= $generated@@635 ($generated@@250 $generated@@628)) (and (=> (= (ControlFlow 0 7) (- 0 9)) (and (<= 0 $generated@@632) (<= $generated@@632 ($generated@@250 $generated@@628)))) (=> (and (<= 0 $generated@@632) (<= $generated@@632 ($generated@@250 $generated@@628))) (and (=> (= (ControlFlow 0 7) (- 0 8)) (and (<= $generated@@632 $generated@@635) (<= $generated@@635 ($generated@@250 $generated@@628)))) (=> (and (<= $generated@@632 $generated@@635) (<= $generated@@635 ($generated@@250 $generated@@628))) (=> (and (= $generated@@647 ($generated@@221 ($generated@@249 $generated@@628 $generated@@635) $generated@@632)) (= (ControlFlow 0 7) 4)) $generated@@659))))))))
(let (($generated@@680  (=> (< $generated@@629 ($generated@@250 $generated@@628)) (and (=> (= (ControlFlow 0 5) (- 0 6)) (and (<= 0 $generated@@629) (< $generated@@629 ($generated@@250 $generated@@628)))) (=> (and (<= 0 $generated@@629) (< $generated@@629 ($generated@@250 $generated@@628))) (=> (and (= $generated@@648 ($generated@@248 $generated@@628 $generated@@629)) (= (ControlFlow 0 5) 4)) $generated@@659))))))
(let (($generated@@681  (=> (and (and (and (and (and (and (and (and (and (and (and (and (<= ($generated@@250 $generated@@628) $generated@@629) (not (and (= ($generated@@549 ($generated@@250 $generated@@628) ($generated@@242 2)) ($generated@@242 0)) (< $generated@@629 ($generated@@250 $generated@@628))))) (< ($generated@@250 $generated@@628) $generated@@635)) (< ($generated@@250 $generated@@628) $generated@@635)) (< ($generated@@250 $generated@@628) $generated@@635)) (< ($generated@@250 $generated@@628) $generated@@632)) (< ($generated@@250 $generated@@628) $generated@@632)) (not (and (<= $generated@@632 ($generated@@250 $generated@@628)) (= ($generated@@549 ($generated@@250 $generated@@628) ($generated@@242 2)) ($generated@@242 0))))) (not (and (<= $generated@@633 $generated@@635) (<= $generated@@635 ($generated@@250 $generated@@628))))) (not (and (<= $generated@@632 $generated@@633) (<= $generated@@633 ($generated@@250 $generated@@628))))) (< ($generated@@250 $generated@@628) (+ $generated@@635 $generated@@635))) (not ($generated@@0 ($generated@@244 ($generated@@11 true))))) (= (ControlFlow 0 2) (- 0 1))) false)))
(let (($generated@@682  (=> (= $generated@@649 ($generated@@156 $generated@@650 $generated@@651 $generated@@60 false)) (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (=> (= (ControlFlow 0 55) 5) $generated@@680) (=> (= (ControlFlow 0 55) 53) $generated@@663)) (=> (= (ControlFlow 0 55) 7) $generated@@679)) (=> (= (ControlFlow 0 55) 10) $generated@@678)) (=> (= (ControlFlow 0 55) 12) $generated@@677)) (=> (= (ControlFlow 0 55) 15) $generated@@676)) (=> (= (ControlFlow 0 55) 17) $generated@@675)) (=> (= (ControlFlow 0 55) 20) $generated@@674)) (=> (= (ControlFlow 0 55) 27) $generated@@673)) (=> (= (ControlFlow 0 55) 2) $generated@@681)) (=> (= (ControlFlow 0 55) 46) $generated@@666)) (=> (= (ControlFlow 0 55) 47) $generated@@665)) (=> (= (ControlFlow 0 55) 41) $generated@@669)) (=> (= (ControlFlow 0 55) 42) $generated@@668)) (=> (= (ControlFlow 0 55) 35) $generated@@672)) (=> (= (ControlFlow 0 55) 37) $generated@@671)))))
(let (($generated@@683  (=> (and (and ($generated@@261 $generated@@651) ($generated@@652 $generated@@651)) (and ($generated@@132 $generated@@628 ($generated@@498 $generated@@653)) ($generated@@74 $generated@@628 ($generated@@498 $generated@@653) $generated@@651))) (=> (and (and (and (and (<= ($generated@@242 0) $generated@@633) (= ($generated@@549 $generated@@629 ($generated@@242 2)) ($generated@@242 0))) (and (= ($generated@@549 $generated@@632 ($generated@@242 2)) ($generated@@242 0)) (= ($generated@@549 $generated@@635 ($generated@@242 2)) ($generated@@242 0)))) (and (and ($generated@@212 $generated@@654 $generated@@653) ($generated@@262 $generated@@654 $generated@@653 $generated@@651)) (=> $generated@@655 (and ($generated@@212 $generated@@656 $generated@@653) ($generated@@262 $generated@@656 $generated@@653 $generated@@651))))) (and (and (and ($generated@@132 $generated@@657 ($generated@@498 $generated@@653)) ($generated@@74 $generated@@657 ($generated@@498 $generated@@653) $generated@@651)) (= 1 $generated@@658)) (and (and (<= ($generated@@242 0) $generated@@629) (<= ($generated@@242 0) $generated@@632)) (and (<= $generated@@632 $generated@@635) (= (ControlFlow 0 56) 55))))) $generated@@682))))
$generated@@683))))))))))))))))))))))))))
))
(check-sat)
(pop 1)
; Valid
(get-info :rlimit)
(reset)
(set-option :rlimit 0)
; did a full reset
(reset)
(set-option :print-success false)
(set-info :smt-lib-version 2.6)
(set-option :auto_config false)
(set-option :type_check true)
(set-option :smt.case_split 3)
(set-option :smt.qi.eager_threshold 100)
(set-option :smt.delay_units true)
(set-option :smt.arith.solver 2)
(set-option :smt.mbqi false)
(set-option :model.compact false)
(set-option :model.v2 true)
(set-option :pp.bv_literals false)
; done setting options


(set-info :category "industrial")
(declare-sort |T@U| 0)
(declare-sort |T@T| 0)
(declare-fun real_pow (Real Real) Real)
(declare-fun UOrdering2 (|T@U| |T@U|) Bool)
(declare-fun UOrdering3 (|T@T| |T@U| |T@U|) Bool)
(declare-fun tickleBool (Bool) Bool)
(assert (and (tickleBool true) (tickleBool false)))
(declare-fun $generated (T@U) Int)
(declare-fun $generated@@0 (T@U) Bool)
(declare-fun $generated@@1 (T@T) Int)
(declare-fun $generated@@2 () T@T)
(declare-fun $generated@@3 () T@T)
(declare-fun $generated@@4 () T@T)
(declare-fun $generated@@5 () T@T)
(declare-fun $generated@@6 () T@T)
(declare-fun $generated@@7 () T@T)
(declare-fun $generated@@8 (Int) T@U)
(declare-fun type (T@U) T@T)
(declare-fun $generated@@9 (Real) T@U)
(declare-fun $generated@@10 (T@U) Real)
(declare-fun $generated@@11 (Bool) T@U)
(declare-fun $generated@@12 (RoundingMode) T@U)
(declare-fun $generated@@13 (T@U) RoundingMode)
(declare-fun $generated@@14 (String) T@U)
(declare-fun $generated@@15 (T@U) String)
(declare-fun $generated@@16 ((RegEx String)) T@U)
(declare-fun $generated@@17 (T@U) (RegEx String))
(declare-fun $generated@@44 () T@U)
(declare-fun $generated@@45 () T@U)
(declare-fun $generated@@46 () T@U)
(declare-fun $generated@@47 () T@U)
(declare-fun $generated@@48 () T@U)
(declare-fun $generated@@49 () T@U)
(declare-fun $generated@@50 () T@U)
(declare-fun $generated@@51 () T@U)
(declare-fun $generated@@52 () T@U)
(declare-fun $generated@@53 () T@U)
(declare-fun $generated@@54 () T@U)
(declare-fun $generated@@55 () T@U)
(declare-fun $generated@@56 () T@U)
(declare-fun $generated@@57 () T@U)
(declare-fun $generated@@58 () T@U)
(declare-fun $generated@@59 () T@U)
(declare-fun $generated@@60 () T@U)
(declare-fun $generated@@61 () T@U)
(declare-fun $generated@@62 () T@U)
(declare-fun $generated@@63 () T@U)
(declare-fun $generated@@64 () T@T)
(declare-fun $generated@@65 () T@T)
(declare-fun $generated@@66 (T@T) T@T)
(declare-fun $generated@@67 (T@T) T@T)
(declare-fun $generated@@68 () T@T)
(declare-fun $generated@@69 () T@T)
(declare-fun $generated@@72 (T@U) T@U)
(declare-fun $generated@@74 (T@U T@U T@U) Bool)
(declare-fun $generated@@75 (Int) T@U)
(declare-fun $generated@@76 (T@T T@T) T@T)
(declare-fun $generated@@77 () T@T)
(declare-fun $generated@@78 () T@T)
(declare-fun $generated@@79 (T@T) T@T)
(declare-fun $generated@@80 (T@T) T@T)
(declare-fun $generated@@81 (T@U T@U) T@U)
(declare-fun $generated@@82 (T@U T@U T@U) T@U)
(declare-fun $generated@@83 (T@U T@U) T@U)
(declare-fun $generated@@84 (T@U T@U T@U) T@U)
(declare-fun $generated@@132 (T@U T@U) Bool)
(declare-fun $generated@@134 (T@U) Bool)
(declare-fun $generated@@135 (T@U T@U) T@U)
(declare-fun $generated@@136 () T@T)
(declare-fun $generated@@142 (T@U T@U) Bool)
(declare-fun $generated@@143 (T@U) T@U)
(declare-fun $generated@@144 (T@U) T@U)
(declare-fun $generated@@145 () T@T)
(declare-fun $generated@@150 (T@U) T@U)
(declare-fun $generated@@151 (T@U) Bool)
(declare-fun $generated@@155 (T@U T@U T@U) T@U)
(declare-fun $generated@@156 (T@U T@U T@U Bool) T@U)
(declare-fun $generated@@157 (T@T T@T) T@T)
(declare-fun $generated@@158 (T@T) T@T)
(declare-fun $generated@@159 (T@T) T@T)
(declare-fun $generated@@160 (T@U T@U T@U T@U) T@U)
(declare-fun $generated@@211 (T@U T@U T@U Bool) T@U)
(declare-fun $generated@@223 (T@U T@U) T@U)
(declare-fun $generated@@224 (T@U T@U) Bool)
(declare-fun $generated@@233 (T@U) T@U)
(declare-fun $generated@@238 (T@U) T@U)
(declare-fun $generated@@243 (Int) Int)
(declare-fun $generated@@245 (T@U) T@U)
(declare-fun $generated@@249 () Int)
(declare-fun $generated@@250 (Int) Bool)
(declare-fun $generated@@251 (Int) Bool)
(declare-fun $generated@@253 (T@U) Bool)
(declare-fun $generated@@254 (T@U T@U T@U) Bool)
(declare-fun $generated@@260 (T@U) T@U)
(declare-fun $generated@@266 (T@T) T@U)
(declare-fun $generated@@267 (T@U) Int)
(declare-fun $generated@@268 (T@T) T@T)
(declare-fun $generated@@269 (T@T) T@T)
(declare-fun $generated@@274 (T@U) T@U)
(declare-fun $generated@@279 (T@U) Int)
(declare-fun $generated@@280 (T@T) T@U)
(declare-fun $generated@@285 (T@U) T@U)
(declare-fun $generated@@286 (T@T T@T) T@U)
(declare-fun $generated@@287 (T@T T@T) T@T)
(declare-fun $generated@@288 (T@T) T@T)
(declare-fun $generated@@289 (T@T) T@T)
(declare-fun $generated@@303 (T@U) T@U)
(declare-fun $generated@@304 (T@T T@T) T@U)
(declare-fun $generated@@305 (T@T T@T) T@T)
(declare-fun $generated@@306 (T@T) T@T)
(declare-fun $generated@@307 (T@T) T@T)
(declare-fun $generated@@328 (T@U) T@U)
(declare-fun $generated@@339 (T@U) T@U)
(declare-fun $generated@@359 (T@U) T@U)
(declare-fun $generated@@360 (T@T T@U) T@U)
(declare-fun $generated@@361 (T@U) T@U)
(declare-fun $generated@@370 (T@U) T@U)
(declare-fun $generated@@371 (T@U) T@U)
(declare-fun $generated@@388 (T@U T@U) T@U)
(declare-fun $generated@@396 (T@U T@U) T@U)
(declare-fun $generated@@404 (T@T) T@U)
(declare-fun $generated@@428 () T@T)
(declare-fun $generated@@436 (T@U) T@U)
(declare-fun $generated@@440 (T@U) T@U)
(declare-fun $generated@@446 (T@U) T@U)
(declare-fun $generated@@450 (T@U) T@U)
(declare-fun $generated@@458 (T@U) T@U)
(declare-fun $generated@@462 (T@U) T@U)
(declare-fun $generated@@470 (T@U) T@U)
(declare-fun $generated@@471 (T@U Int) T@U)
(declare-fun $generated@@480 (T@U) Int)
(declare-fun $generated@@482 (T@U) T@U)
(declare-fun $generated@@486 (T@U) T@U)
(declare-fun $generated@@490 (T@U) T@U)
(declare-fun $generated@@494 (T@U) T@U)
(declare-fun $generated@@508 (T@U) Int)
(declare-fun $generated@@509 (T@U) Int)
(declare-fun $generated@@525 (Int Int) Int)
(declare-fun $generated@@529 (T@U) T@U)
(declare-fun $generated@@579 (T@U) Int)
(assert  (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (= ($generated@@1 $generated@@2) 0) (= ($generated@@1 $generated@@3) 1)) (= ($generated@@1 $generated@@4) 2)) (= ($generated@@1 $generated@@5) 3)) (= ($generated@@1 $generated@@6) 4)) (= ($generated@@1 $generated@@7) 5)) (forall (($generated@@18 Int) ) (! (= ($generated ($generated@@8 $generated@@18)) $generated@@18)
 :pattern ( ($generated@@8 $generated@@18))
))) (forall (($generated@@19 T@U) ) (!  (=> (= (type $generated@@19) $generated@@2) (= ($generated@@8 ($generated $generated@@19)) $generated@@19))
 :pattern ( ($generated $generated@@19))
))) (forall (($generated@@20 Int) ) (! (= (type ($generated@@8 $generated@@20)) $generated@@2)
 :pattern ( ($generated@@8 $generated@@20))
))) (forall (($generated@@21 Real) ) (! (= ($generated@@10 ($generated@@9 $generated@@21)) $generated@@21)
 :pattern ( ($generated@@9 $generated@@21))
))) (forall (($generated@@22 T@U) ) (!  (=> (= (type $generated@@22) $generated@@3) (= ($generated@@9 ($generated@@10 $generated@@22)) $generated@@22))
 :pattern ( ($generated@@10 $generated@@22))
))) (forall (($generated@@23 Real) ) (! (= (type ($generated@@9 $generated@@23)) $generated@@3)
 :pattern ( ($generated@@9 $generated@@23))
))) (forall (($generated@@24 Bool) ) (! (= ($generated@@0 ($generated@@11 $generated@@24)) $generated@@24)
 :pattern ( ($generated@@11 $generated@@24))
))) (forall (($generated@@25 T@U) ) (!  (=> (= (type $generated@@25) $generated@@4) (= ($generated@@11 ($generated@@0 $generated@@25)) $generated@@25))
 :pattern ( ($generated@@0 $generated@@25))
))) (forall (($generated@@26 Bool) ) (! (= (type ($generated@@11 $generated@@26)) $generated@@4)
 :pattern ( ($generated@@11 $generated@@26))
))) (forall (($generated@@27 RoundingMode) ) (! (= ($generated@@13 ($generated@@12 $generated@@27)) $generated@@27)
 :pattern ( ($generated@@12 $generated@@27))
))) (forall (($generated@@28 T@U) ) (!  (=> (= (type $generated@@28) $generated@@5) (= ($generated@@12 ($generated@@13 $generated@@28)) $generated@@28))
 :pattern ( ($generated@@13 $generated@@28))
))) (forall (($generated@@29 RoundingMode) ) (! (= (type ($generated@@12 $generated@@29)) $generated@@5)
 :pattern ( ($generated@@12 $generated@@29))
))) (forall (($generated@@30 String) ) (! (= ($generated@@15 ($generated@@14 $generated@@30)) $generated@@30)
 :pattern ( ($generated@@14 $generated@@30))
))) (forall (($generated@@31 T@U) ) (!  (=> (= (type $generated@@31) $generated@@6) (= ($generated@@14 ($generated@@15 $generated@@31)) $generated@@31))
 :pattern ( ($generated@@15 $generated@@31))
))) (forall (($generated@@32 String) ) (! (= (type ($generated@@14 $generated@@32)) $generated@@6)
 :pattern ( ($generated@@14 $generated@@32))
))) (forall (($generated@@33 (RegEx String)) ) (! (= ($generated@@17 ($generated@@16 $generated@@33)) $generated@@33)
 :pattern ( ($generated@@16 $generated@@33))
))) (forall (($generated@@34 T@U) ) (!  (=> (= (type $generated@@34) $generated@@7) (= ($generated@@16 ($generated@@17 $generated@@34)) $generated@@34))
 :pattern ( ($generated@@17 $generated@@34))
))) (forall (($generated@@35 (RegEx String)) ) (! (= (type ($generated@@16 $generated@@35)) $generated@@7)
 :pattern ( ($generated@@16 $generated@@35))
))))
(assert (forall (($generated@@36 T@U) ) (! (UOrdering2 $generated@@36 $generated@@36)
 :no-pattern ($generated $generated@@36)
 :no-pattern ($generated@@0 $generated@@36)
)))
(assert (forall (($generated@@37 T@U) ($generated@@38 T@U) ($generated@@39 T@U) ) (! (let (($generated@@40 (type $generated@@37)))
 (=> (and (and (= (type $generated@@38) $generated@@40) (= (type $generated@@39) $generated@@40)) (and (UOrdering2 $generated@@37 $generated@@38) (UOrdering2 $generated@@38 $generated@@39))) (UOrdering2 $generated@@37 $generated@@39)))
 :pattern ( (UOrdering2 $generated@@37 $generated@@38) (UOrdering2 $generated@@38 $generated@@39))
)))
(assert (forall (($generated@@41 T@U) ($generated@@42 T@U) ) (! (let (($generated@@43 (type $generated@@41)))
 (=> (= (type $generated@@42) $generated@@43) (=> (and (UOrdering2 $generated@@41 $generated@@42) (UOrdering2 $generated@@42 $generated@@41)) (= $generated@@41 $generated@@42))))
 :pattern ( (UOrdering2 $generated@@41 $generated@@42) (UOrdering2 $generated@@42 $generated@@41))
)))
(assert  (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (= ($generated@@1 $generated@@64) 6) (= (type $generated@@44) $generated@@64)) (= (type $generated@@45) $generated@@64)) (= (type $generated@@46) $generated@@64)) (= (type $generated@@47) $generated@@64)) (= (type $generated@@48) $generated@@64)) (= ($generated@@1 $generated@@65) 7)) (= (type $generated@@49) $generated@@65)) (= (type $generated@@50) $generated@@65)) (= (type $generated@@51) $generated@@65)) (= (type $generated@@52) $generated@@65)) (= (type $generated@@53) $generated@@65)) (= (type $generated@@54) $generated@@65)) (= (type $generated@@55) $generated@@65)) (= (type $generated@@56) $generated@@65)) (= (type $generated@@57) $generated@@65)) (= (type $generated@@58) $generated@@65)) (= (type $generated@@59) $generated@@65)) (forall (($generated@@70 T@T) ) (= ($generated@@1 ($generated@@66 $generated@@70)) 8))) (forall (($generated@@71 T@T) ) (! (= ($generated@@67 ($generated@@66 $generated@@71)) $generated@@71)
 :pattern ( ($generated@@66 $generated@@71))
))) (= (type $generated@@60) ($generated@@66 $generated@@4))) (= ($generated@@1 $generated@@68) 9)) (= (type $generated@@61) $generated@@68)) (= (type $generated@@62) $generated@@65)) (= ($generated@@1 $generated@@69) 10)) (= (type $generated@@63) $generated@@69)))
(assert (distinct $generated@@44 $generated@@45 $generated@@46 $generated@@47 $generated@@48 $generated@@49 $generated@@50 $generated@@51 $generated@@52 $generated@@53 $generated@@54 $generated@@55 $generated@@56 $generated@@57 $generated@@58 $generated@@59 $generated@@60 $generated@@61 $generated@@62 $generated@@63)
)
(assert (forall (($generated@@73 T@U) ) (! (= (type ($generated@@72 $generated@@73)) $generated@@65)
 :pattern ( ($generated@@72 $generated@@73))
)))
(assert (= ($generated@@72 $generated@@44) $generated@@49))
(assert (= ($generated@@72 $generated@@45) $generated@@50))
(assert (= ($generated@@72 $generated@@46) $generated@@51))
(assert (= ($generated@@72 $generated@@47) $generated@@52))
(assert (= ($generated@@72 $generated@@48) $generated@@53))
(assert  (and (and (and (and (and (and (and (and (and (and (and (and (and (forall (($generated@@85 T@T) ($generated@@86 T@T) ) (= ($generated@@1 ($generated@@76 $generated@@85 $generated@@86)) 11)) (forall (($generated@@87 T@T) ($generated@@88 T@T) ) (! (= ($generated@@79 ($generated@@76 $generated@@87 $generated@@88)) $generated@@87)
 :pattern ( ($generated@@76 $generated@@87 $generated@@88))
))) (forall (($generated@@89 T@T) ($generated@@90 T@T) ) (! (= ($generated@@80 ($generated@@76 $generated@@89 $generated@@90)) $generated@@90)
 :pattern ( ($generated@@76 $generated@@89 $generated@@90))
))) (forall (($generated@@91 T@U) ($generated@@92 T@U) ) (! (let (($generated@@93 ($generated@@80 (type $generated@@91))))
(= (type ($generated@@81 $generated@@91 $generated@@92)) $generated@@93))
 :pattern ( ($generated@@81 $generated@@91 $generated@@92))
))) (forall (($generated@@94 T@U) ($generated@@95 T@U) ($generated@@96 T@U) ) (! (let (($generated@@97 (type $generated@@96)))
(let (($generated@@98 (type $generated@@95)))
(= (type ($generated@@82 $generated@@94 $generated@@95 $generated@@96)) ($generated@@76 $generated@@98 $generated@@97))))
 :pattern ( ($generated@@82 $generated@@94 $generated@@95 $generated@@96))
))) (forall (($generated@@99 T@U) ($generated@@100 T@U) ($generated@@101 T@U) ) (! (let (($generated@@102 ($generated@@80 (type $generated@@99))))
 (=> (= (type $generated@@101) $generated@@102) (= ($generated@@81 ($generated@@82 $generated@@99 $generated@@100 $generated@@101) $generated@@100) $generated@@101)))
 :weight 0
))) (and (forall (($generated@@103 T@U) ($generated@@104 T@U) ($generated@@105 T@U) ($generated@@106 T@U) ) (!  (or (= $generated@@105 $generated@@106) (= ($generated@@81 ($generated@@82 $generated@@104 $generated@@105 $generated@@103) $generated@@106) ($generated@@81 $generated@@104 $generated@@106)))
 :weight 0
)) (forall (($generated@@107 T@U) ($generated@@108 T@U) ($generated@@109 T@U) ($generated@@110 T@U) ) (!  (or true (= ($generated@@81 ($generated@@82 $generated@@108 $generated@@109 $generated@@107) $generated@@110) ($generated@@81 $generated@@108 $generated@@110)))
 :weight 0
)))) (= ($generated@@1 $generated@@77) 12)) (forall (($generated@@111 T@U) ($generated@@112 T@U) ) (! (let (($generated@@113 ($generated@@67 (type $generated@@112))))
(= (type ($generated@@83 $generated@@111 $generated@@112)) $generated@@113))
 :pattern ( ($generated@@83 $generated@@111 $generated@@112))
))) (= ($generated@@1 $generated@@78) 13)) (forall (($generated@@114 T@U) ($generated@@115 T@U) ($generated@@116 T@U) ) (! (= (type ($generated@@84 $generated@@114 $generated@@115 $generated@@116)) $generated@@78)
 :pattern ( ($generated@@84 $generated@@114 $generated@@115 $generated@@116))
))) (forall (($generated@@117 T@U) ($generated@@118 T@U) ($generated@@119 T@U) ) (! (let (($generated@@120 ($generated@@67 (type $generated@@118))))
 (=> (= (type $generated@@119) $generated@@120) (= ($generated@@83 ($generated@@84 $generated@@117 $generated@@118 $generated@@119) $generated@@118) $generated@@119)))
 :weight 0
))) (and (forall (($generated@@121 T@U) ($generated@@122 T@U) ($generated@@123 T@U) ($generated@@124 T@U) ) (!  (or (= $generated@@123 $generated@@124) (= ($generated@@83 ($generated@@84 $generated@@122 $generated@@123 $generated@@121) $generated@@124) ($generated@@83 $generated@@122 $generated@@124)))
 :weight 0
)) (forall (($generated@@125 T@U) ($generated@@126 T@U) ($generated@@127 T@U) ($generated@@128 T@U) ) (!  (or true (= ($generated@@83 ($generated@@84 $generated@@126 $generated@@127 $generated@@125) $generated@@128) ($generated@@83 $generated@@126 $generated@@128)))
 :weight 0
)))) (forall (($generated@@129 Int) ) (! (= (type ($generated@@75 $generated@@129)) $generated@@64)
 :pattern ( ($generated@@75 $generated@@129))
))))
(assert (forall (($generated@@130 T@U) ($generated@@131 T@U) ) (!  (=> (and (= (type $generated@@130) $generated@@2) (= (type $generated@@131) ($generated@@76 $generated@@77 $generated@@78))) ($generated@@74 $generated@@130 ($generated@@75 0) $generated@@131))
 :pattern ( ($generated@@74 $generated@@130 ($generated@@75 0) $generated@@131))
)))
(assert (forall (($generated@@133 T@U) ) (!  (=> (= (type $generated@@133) $generated@@2) ($generated@@132 $generated@@133 ($generated@@75 0)))
 :pattern ( ($generated@@132 $generated@@133 ($generated@@75 0)))
)))
(assert  (and (= ($generated@@1 $generated@@136) 14) (forall (($generated@@137 T@U) ($generated@@138 T@U) ) (! (= (type ($generated@@135 $generated@@137 $generated@@138)) $generated@@64)
 :pattern ( ($generated@@135 $generated@@137 $generated@@138))
))))
(assert (forall (($generated@@139 T@U) ($generated@@140 T@U) ($generated@@141 T@U) ) (!  (=> (and (and (and (= (type $generated@@139) $generated@@64) (= (type $generated@@140) $generated@@64)) (= (type $generated@@141) $generated@@136)) ($generated@@132 $generated@@141 ($generated@@135 $generated@@139 $generated@@140))) ($generated@@134 $generated@@141))
 :pattern ( ($generated@@134 $generated@@141) ($generated@@132 $generated@@141 ($generated@@135 $generated@@139 $generated@@140)))
)))
(assert  (and (and (= ($generated@@1 $generated@@145) 15) (forall (($generated@@146 T@U) ) (! (= (type ($generated@@143 $generated@@146)) $generated@@145)
 :pattern ( ($generated@@143 $generated@@146))
))) (forall (($generated@@147 T@U) ) (! (= (type ($generated@@144 $generated@@147)) $generated@@145)
 :pattern ( ($generated@@144 $generated@@147))
))))
(assert (forall (($generated@@148 T@U) ($generated@@149 T@U) ) (!  (=> (and (and (= (type $generated@@148) $generated@@136) (= (type $generated@@149) $generated@@136)) true) (= ($generated@@142 $generated@@148 $generated@@149)  (and (= ($generated@@143 $generated@@148) ($generated@@143 $generated@@149)) (= ($generated@@144 $generated@@148) ($generated@@144 $generated@@149)))))
 :pattern ( ($generated@@142 $generated@@148 $generated@@149))
)))
(assert (forall (($generated@@152 T@U) ) (! (= (type ($generated@@150 $generated@@152)) $generated@@64)
 :pattern ( ($generated@@150 $generated@@152))
)))
(assert (forall (($generated@@153 T@U) ($generated@@154 T@U) ) (!  (=> (and (and (= (type $generated@@153) ($generated@@76 $generated@@145 $generated@@2)) (= (type $generated@@154) $generated@@64)) ($generated@@132 $generated@@153 ($generated@@150 $generated@@154))) ($generated@@151 $generated@@153))
 :pattern ( ($generated@@132 $generated@@153 ($generated@@150 $generated@@154)))
)))
(assert  (and (and (and (and (and (and (and (forall (($generated@@161 T@T) ($generated@@162 T@T) ) (= ($generated@@1 ($generated@@157 $generated@@161 $generated@@162)) 16)) (forall (($generated@@163 T@T) ($generated@@164 T@T) ) (! (= ($generated@@158 ($generated@@157 $generated@@163 $generated@@164)) $generated@@163)
 :pattern ( ($generated@@157 $generated@@163 $generated@@164))
))) (forall (($generated@@165 T@T) ($generated@@166 T@T) ) (! (= ($generated@@159 ($generated@@157 $generated@@165 $generated@@166)) $generated@@166)
 :pattern ( ($generated@@157 $generated@@165 $generated@@166))
))) (forall (($generated@@167 T@U) ($generated@@168 T@U) ($generated@@169 T@U) ) (! (let (($generated@@170 ($generated@@159 (type $generated@@167))))
(= (type ($generated@@155 $generated@@167 $generated@@168 $generated@@169)) $generated@@170))
 :pattern ( ($generated@@155 $generated@@167 $generated@@168 $generated@@169))
))) (forall (($generated@@171 T@U) ($generated@@172 T@U) ($generated@@173 T@U) ($generated@@174 T@U) ) (! (let (($generated@@175 (type $generated@@174)))
(let (($generated@@176 (type $generated@@172)))
(= (type ($generated@@160 $generated@@171 $generated@@172 $generated@@173 $generated@@174)) ($generated@@157 $generated@@176 $generated@@175))))
 :pattern ( ($generated@@160 $generated@@171 $generated@@172 $generated@@173 $generated@@174))
))) (forall (($generated@@177 T@U) ($generated@@178 T@U) ($generated@@179 T@U) ($generated@@180 T@U) ) (! (let (($generated@@181 ($generated@@159 (type $generated@@177))))
 (=> (= (type $generated@@180) $generated@@181) (= ($generated@@155 ($generated@@160 $generated@@177 $generated@@178 $generated@@179 $generated@@180) $generated@@178 $generated@@179) $generated@@180)))
 :weight 0
))) (and (and (forall (($generated@@182 T@U) ($generated@@183 T@U) ($generated@@184 T@U) ($generated@@185 T@U) ($generated@@186 T@U) ($generated@@187 T@U) ) (!  (or (= $generated@@184 $generated@@186) (= ($generated@@155 ($generated@@160 $generated@@183 $generated@@184 $generated@@185 $generated@@182) $generated@@186 $generated@@187) ($generated@@155 $generated@@183 $generated@@186 $generated@@187)))
 :weight 0
)) (forall (($generated@@188 T@U) ($generated@@189 T@U) ($generated@@190 T@U) ($generated@@191 T@U) ($generated@@192 T@U) ($generated@@193 T@U) ) (!  (or (= $generated@@191 $generated@@193) (= ($generated@@155 ($generated@@160 $generated@@189 $generated@@190 $generated@@191 $generated@@188) $generated@@192 $generated@@193) ($generated@@155 $generated@@189 $generated@@192 $generated@@193)))
 :weight 0
))) (forall (($generated@@194 T@U) ($generated@@195 T@U) ($generated@@196 T@U) ($generated@@197 T@U) ($generated@@198 T@U) ($generated@@199 T@U) ) (!  (or true (= ($generated@@155 ($generated@@160 $generated@@195 $generated@@196 $generated@@197 $generated@@194) $generated@@198 $generated@@199) ($generated@@155 $generated@@195 $generated@@198 $generated@@199)))
 :weight 0
)))) (forall (($generated@@200 T@U) ($generated@@201 T@U) ($generated@@202 T@U) ($generated@@203 Bool) ) (! (= (type ($generated@@156 $generated@@200 $generated@@201 $generated@@202 $generated@@203)) ($generated@@157 $generated@@77 $generated@@4))
 :pattern ( ($generated@@156 $generated@@200 $generated@@201 $generated@@202 $generated@@203))
))))
(assert (forall (($generated@@204 T@U) ($generated@@205 T@U) ($generated@@206 T@U) ($generated@@207 Bool) ($generated@@208 T@U) ($generated@@209 T@U) ) (! (let (($generated@@210 ($generated@@67 (type $generated@@209))))
 (=> (and (and (and (and (= (type $generated@@204) $generated@@77) (= (type $generated@@205) ($generated@@76 $generated@@77 $generated@@78))) (= (type $generated@@206) ($generated@@66 $generated@@4))) (= (type $generated@@208) $generated@@77)) (= (type $generated@@209) ($generated@@66 $generated@@210))) (= ($generated@@0 ($generated@@155 ($generated@@156 $generated@@204 $generated@@205 $generated@@206 $generated@@207) $generated@@208 $generated@@209))  (=> (and (not (= $generated@@208 $generated@@204)) ($generated@@0 ($generated@@83 ($generated@@81 $generated@@205 $generated@@208) $generated@@206))) $generated@@207))))
 :pattern ( ($generated@@155 ($generated@@156 $generated@@204 $generated@@205 $generated@@206 $generated@@207) $generated@@208 $generated@@209))
)))
(assert (forall (($generated@@212 T@U) ($generated@@213 T@U) ($generated@@214 T@U) ($generated@@215 Bool) ) (! (= (type ($generated@@211 $generated@@212 $generated@@213 $generated@@214 $generated@@215)) ($generated@@157 $generated@@77 $generated@@4))
 :pattern ( ($generated@@211 $generated@@212 $generated@@213 $generated@@214 $generated@@215))
)))
(assert (forall (($generated@@216 T@U) ($generated@@217 T@U) ($generated@@218 T@U) ($generated@@219 Bool) ($generated@@220 T@U) ($generated@@221 T@U) ) (! (let (($generated@@222 ($generated@@67 (type $generated@@221))))
 (=> (and (and (and (and (= (type $generated@@216) $generated@@77) (= (type $generated@@217) ($generated@@76 $generated@@77 $generated@@78))) (= (type $generated@@218) ($generated@@66 $generated@@4))) (= (type $generated@@220) $generated@@77)) (= (type $generated@@221) ($generated@@66 $generated@@222))) (= ($generated@@0 ($generated@@155 ($generated@@211 $generated@@216 $generated@@217 $generated@@218 $generated@@219) $generated@@220 $generated@@221))  (=> (and (not (= $generated@@220 $generated@@216)) ($generated@@0 ($generated@@83 ($generated@@81 $generated@@217 $generated@@220) $generated@@218))) $generated@@219))))
 :pattern ( ($generated@@155 ($generated@@211 $generated@@216 $generated@@217 $generated@@218 $generated@@219) $generated@@220 $generated@@221))
)))
(assert (forall (($generated@@225 T@U) ($generated@@226 T@U) ) (! (= (type ($generated@@223 $generated@@225 $generated@@226)) $generated@@136)
 :pattern ( ($generated@@223 $generated@@225 $generated@@226))
)))
(assert (forall (($generated@@227 T@U) ($generated@@228 T@U) ($generated@@229 T@U) ($generated@@230 T@U) ) (!  (=> (and (and (and (= (type $generated@@227) $generated@@64) (= (type $generated@@228) $generated@@64)) (= (type $generated@@229) $generated@@145)) (= (type $generated@@230) $generated@@145)) (= ($generated@@132 ($generated@@223 $generated@@229 $generated@@230) ($generated@@135 $generated@@227 $generated@@228))  (and ($generated@@224 $generated@@229 $generated@@227) ($generated@@224 $generated@@230 $generated@@228))))
 :pattern ( ($generated@@132 ($generated@@223 $generated@@229 $generated@@230) ($generated@@135 $generated@@227 $generated@@228)))
)))
(assert (forall (($generated@@231 T@U) ($generated@@232 T@U) ) (!  (=> (and (= (type $generated@@231) $generated@@136) (= (type $generated@@232) $generated@@136)) (= ($generated@@142 $generated@@231 $generated@@232) (= $generated@@231 $generated@@232)))
 :pattern ( ($generated@@142 $generated@@231 $generated@@232))
)))
(assert (forall (($generated@@234 T@U) ) (! (= (type ($generated@@233 $generated@@234)) $generated@@64)
 :pattern ( ($generated@@233 $generated@@234))
)))
(assert (forall (($generated@@235 T@U) ($generated@@236 T@U) ) (!  (=> (and (= (type $generated@@235) ($generated@@76 $generated@@145 $generated@@4)) (= (type $generated@@236) $generated@@64)) (= ($generated@@132 $generated@@235 ($generated@@233 $generated@@236)) (forall (($generated@@237 T@U) ) (!  (=> (and (= (type $generated@@237) $generated@@145) ($generated@@0 ($generated@@81 $generated@@235 $generated@@237))) ($generated@@224 $generated@@237 $generated@@236))
 :pattern ( ($generated@@81 $generated@@235 $generated@@237))
))))
 :pattern ( ($generated@@132 $generated@@235 ($generated@@233 $generated@@236)))
)))
(assert (forall (($generated@@239 T@U) ) (! (= (type ($generated@@238 $generated@@239)) $generated@@64)
 :pattern ( ($generated@@238 $generated@@239))
)))
(assert (forall (($generated@@240 T@U) ($generated@@241 T@U) ) (!  (=> (and (= (type $generated@@240) ($generated@@76 $generated@@145 $generated@@4)) (= (type $generated@@241) $generated@@64)) (= ($generated@@132 $generated@@240 ($generated@@238 $generated@@241)) (forall (($generated@@242 T@U) ) (!  (=> (and (= (type $generated@@242) $generated@@145) ($generated@@0 ($generated@@81 $generated@@240 $generated@@242))) ($generated@@224 $generated@@242 $generated@@241))
 :pattern ( ($generated@@81 $generated@@240 $generated@@242))
))))
 :pattern ( ($generated@@132 $generated@@240 ($generated@@238 $generated@@241)))
)))
(assert (forall (($generated@@244 Int) ) (! (= ($generated@@243 $generated@@244) $generated@@244)
 :pattern ( ($generated@@243 $generated@@244))
)))
(assert (forall (($generated@@246 T@U) ) (! (let (($generated@@247 (type $generated@@246)))
(= (type ($generated@@245 $generated@@246)) $generated@@247))
 :pattern ( ($generated@@245 $generated@@246))
)))
(assert (forall (($generated@@248 T@U) ) (! (= ($generated@@245 $generated@@248) $generated@@248)
 :pattern ( ($generated@@245 $generated@@248))
)))
(assert  (=> (<= 0 $generated@@249) (forall (($generated@@252 Int) ) (!  (=> (or ($generated@@251 $generated@@252) (not (= 0 $generated@@249))) true)
 :pattern ( ($generated@@250 $generated@@252))
))))
(assert (forall (($generated@@255 T@U) ($generated@@256 T@U) ($generated@@257 T@U) ($generated@@258 T@U) ($generated@@259 T@U) ) (!  (=> (and (and (and (and (and (= (type $generated@@255) $generated@@64) (= (type $generated@@256) $generated@@64)) (= (type $generated@@257) $generated@@145)) (= (type $generated@@258) $generated@@145)) (= (type $generated@@259) ($generated@@76 $generated@@77 $generated@@78))) ($generated@@253 $generated@@259)) (= ($generated@@74 ($generated@@223 $generated@@257 $generated@@258) ($generated@@135 $generated@@255 $generated@@256) $generated@@259)  (and ($generated@@254 $generated@@257 $generated@@255 $generated@@259) ($generated@@254 $generated@@258 $generated@@256 $generated@@259))))
 :pattern ( ($generated@@74 ($generated@@223 $generated@@257 $generated@@258) ($generated@@135 $generated@@255 $generated@@256) $generated@@259))
)))
(assert (forall (($generated@@261 T@U) ) (! (= (type ($generated@@260 $generated@@261)) $generated@@68)
 :pattern ( ($generated@@260 $generated@@261))
)))
(assert (forall (($generated@@262 T@U) ) (!  (=> (= (type $generated@@262) $generated@@136) (= ($generated@@134 $generated@@262) (= ($generated@@260 $generated@@262) $generated@@61)))
 :pattern ( ($generated@@134 $generated@@262))
)))
(assert (forall (($generated@@263 T@U) ) (!  (=> (and (= (type $generated@@263) $generated@@136) ($generated@@134 $generated@@263)) (exists (($generated@@264 T@U) ($generated@@265 T@U) ) (!  (and (and (= (type $generated@@264) $generated@@145) (= (type $generated@@265) $generated@@145)) (= $generated@@263 ($generated@@223 $generated@@264 $generated@@265)))
 :no-pattern (type $generated@@264)
 :no-pattern (type $generated@@265)
 :no-pattern ($generated $generated@@264)
 :no-pattern ($generated@@0 $generated@@264)
 :no-pattern ($generated $generated@@265)
 :no-pattern ($generated@@0 $generated@@265)
)))
 :pattern ( ($generated@@134 $generated@@263))
)))
(assert  (and (and (forall (($generated@@270 T@T) ) (= ($generated@@1 ($generated@@268 $generated@@270)) 17)) (forall (($generated@@271 T@T) ) (! (= ($generated@@269 ($generated@@268 $generated@@271)) $generated@@271)
 :pattern ( ($generated@@268 $generated@@271))
))) (forall (($generated@@272 T@T) ) (! (= (type ($generated@@266 $generated@@272)) ($generated@@268 $generated@@272))
 :pattern ( ($generated@@266 $generated@@272))
))))
(assert (forall (($generated@@273 T@T) ) (! (= ($generated@@267 ($generated@@266 $generated@@273)) 0)
 :pattern ( ($generated@@266 $generated@@273))
)))
(assert (forall (($generated@@275 T@U) ) (! (= (type ($generated@@274 $generated@@275)) $generated@@145)
 :pattern ( ($generated@@274 $generated@@275))
)))
(assert (forall (($generated@@276 T@U) ($generated@@277 T@U) ($generated@@278 T@U) ) (!  (=> (and (= (type $generated@@277) $generated@@64) (= (type $generated@@278) ($generated@@76 $generated@@77 $generated@@78))) (= ($generated@@254 ($generated@@274 $generated@@276) $generated@@277 $generated@@278) ($generated@@74 $generated@@276 $generated@@277 $generated@@278)))
 :pattern ( ($generated@@254 ($generated@@274 $generated@@276) $generated@@277 $generated@@278))
)))
(assert (forall (($generated@@281 T@T) ) (! (= (type ($generated@@280 $generated@@281)) ($generated@@76 $generated@@281 $generated@@2))
 :pattern ( ($generated@@280 $generated@@281))
)))
(assert (forall (($generated@@282 T@U) ) (! (let (($generated@@283 ($generated@@79 (type $generated@@282))))
 (=> (= (type $generated@@282) ($generated@@76 $generated@@283 $generated@@2)) (and (= (= ($generated@@279 $generated@@282) 0) (= $generated@@282 ($generated@@280 $generated@@283))) (=> (not (= ($generated@@279 $generated@@282) 0)) (exists (($generated@@284 T@U) ) (!  (and (= (type $generated@@284) $generated@@283) (< 0 ($generated ($generated@@81 $generated@@282 $generated@@284))))
 :no-pattern (type $generated@@284)
 :no-pattern ($generated $generated@@284)
 :no-pattern ($generated@@0 $generated@@284)
))))))
 :pattern ( ($generated@@279 $generated@@282))
)))
(assert  (and (and (and (and (forall (($generated@@290 T@T) ($generated@@291 T@T) ) (= ($generated@@1 ($generated@@287 $generated@@290 $generated@@291)) 18)) (forall (($generated@@292 T@T) ($generated@@293 T@T) ) (! (= ($generated@@288 ($generated@@287 $generated@@292 $generated@@293)) $generated@@292)
 :pattern ( ($generated@@287 $generated@@292 $generated@@293))
))) (forall (($generated@@294 T@T) ($generated@@295 T@T) ) (! (= ($generated@@289 ($generated@@287 $generated@@294 $generated@@295)) $generated@@295)
 :pattern ( ($generated@@287 $generated@@294 $generated@@295))
))) (forall (($generated@@296 T@U) ) (! (let (($generated@@297 ($generated@@288 (type $generated@@296))))
(= (type ($generated@@285 $generated@@296)) ($generated@@76 $generated@@297 $generated@@4)))
 :pattern ( ($generated@@285 $generated@@296))
))) (forall (($generated@@298 T@T) ($generated@@299 T@T) ) (! (= (type ($generated@@286 $generated@@298 $generated@@299)) ($generated@@287 $generated@@298 $generated@@299))
 :pattern ( ($generated@@286 $generated@@298 $generated@@299))
))))
(assert (forall (($generated@@300 T@U) ($generated@@301 T@T) ) (! (let (($generated@@302 (type $generated@@300)))
 (not ($generated@@0 ($generated@@81 ($generated@@285 ($generated@@286 $generated@@302 $generated@@301)) $generated@@300))))
 :pattern ( (let (($generated@@302 (type $generated@@300)))
($generated@@81 ($generated@@285 ($generated@@286 $generated@@302 $generated@@301)) $generated@@300)))
)))
(assert  (and (and (and (and (forall (($generated@@308 T@T) ($generated@@309 T@T) ) (= ($generated@@1 ($generated@@305 $generated@@308 $generated@@309)) 19)) (forall (($generated@@310 T@T) ($generated@@311 T@T) ) (! (= ($generated@@306 ($generated@@305 $generated@@310 $generated@@311)) $generated@@310)
 :pattern ( ($generated@@305 $generated@@310 $generated@@311))
))) (forall (($generated@@312 T@T) ($generated@@313 T@T) ) (! (= ($generated@@307 ($generated@@305 $generated@@312 $generated@@313)) $generated@@313)
 :pattern ( ($generated@@305 $generated@@312 $generated@@313))
))) (forall (($generated@@314 T@U) ) (! (let (($generated@@315 ($generated@@306 (type $generated@@314))))
(= (type ($generated@@303 $generated@@314)) ($generated@@76 $generated@@315 $generated@@4)))
 :pattern ( ($generated@@303 $generated@@314))
))) (forall (($generated@@316 T@T) ($generated@@317 T@T) ) (! (= (type ($generated@@304 $generated@@316 $generated@@317)) ($generated@@305 $generated@@316 $generated@@317))
 :pattern ( ($generated@@304 $generated@@316 $generated@@317))
))))
(assert (forall (($generated@@318 T@U) ($generated@@319 T@T) ) (! (let (($generated@@320 (type $generated@@318)))
 (not ($generated@@0 ($generated@@81 ($generated@@303 ($generated@@304 $generated@@320 $generated@@319)) $generated@@318))))
 :pattern ( (let (($generated@@320 (type $generated@@318)))
($generated@@81 ($generated@@303 ($generated@@304 $generated@@320 $generated@@319)) $generated@@318)))
)))
(assert (forall (($generated@@321 T@U) ) (! (let (($generated@@322 ($generated@@79 (type $generated@@321))))
 (=> (= (type $generated@@321) ($generated@@76 $generated@@322 $generated@@2)) (= ($generated@@151 $generated@@321) (forall (($generated@@323 T@U) ) (!  (=> (= (type $generated@@323) $generated@@322) (and (<= 0 ($generated ($generated@@81 $generated@@321 $generated@@323))) (<= ($generated ($generated@@81 $generated@@321 $generated@@323)) ($generated@@279 $generated@@321))))
 :pattern ( ($generated@@81 $generated@@321 $generated@@323))
)))))
 :pattern ( ($generated@@151 $generated@@321))
)))
(assert (forall (($generated@@324 T@U) ) (! (let (($generated@@325 ($generated@@289 (type $generated@@324))))
(let (($generated@@326 ($generated@@288 (type $generated@@324))))
 (=> (= (type $generated@@324) ($generated@@287 $generated@@326 $generated@@325)) (or (= $generated@@324 ($generated@@286 $generated@@326 $generated@@325)) (exists (($generated@@327 T@U) ) (!  (and (= (type $generated@@327) $generated@@326) ($generated@@0 ($generated@@81 ($generated@@285 $generated@@324) $generated@@327)))
 :no-pattern (type $generated@@327)
 :no-pattern ($generated $generated@@327)
 :no-pattern ($generated@@0 $generated@@327)
))))))
 :pattern ( ($generated@@285 $generated@@324))
)))
(assert (forall (($generated@@329 T@U) ) (! (let (($generated@@330 ($generated@@289 (type $generated@@329))))
(= (type ($generated@@328 $generated@@329)) ($generated@@76 $generated@@330 $generated@@4)))
 :pattern ( ($generated@@328 $generated@@329))
)))
(assert (forall (($generated@@331 T@U) ) (! (let (($generated@@332 ($generated@@289 (type $generated@@331))))
(let (($generated@@333 ($generated@@288 (type $generated@@331))))
 (=> (= (type $generated@@331) ($generated@@287 $generated@@333 $generated@@332)) (or (= $generated@@331 ($generated@@286 $generated@@333 $generated@@332)) (exists (($generated@@334 T@U) ) (!  (and (= (type $generated@@334) $generated@@332) ($generated@@0 ($generated@@81 ($generated@@328 $generated@@331) $generated@@334)))
 :no-pattern (type $generated@@334)
 :no-pattern ($generated $generated@@334)
 :no-pattern ($generated@@0 $generated@@334)
))))))
 :pattern ( ($generated@@328 $generated@@331))
)))
(assert (forall (($generated@@335 T@U) ) (! (let (($generated@@336 ($generated@@307 (type $generated@@335))))
(let (($generated@@337 ($generated@@306 (type $generated@@335))))
 (=> (= (type $generated@@335) ($generated@@305 $generated@@337 $generated@@336)) (or (= $generated@@335 ($generated@@304 $generated@@337 $generated@@336)) (exists (($generated@@338 T@U) ) (!  (and (= (type $generated@@338) $generated@@337) ($generated@@0 ($generated@@81 ($generated@@303 $generated@@335) $generated@@338)))
 :no-pattern (type $generated@@338)
 :no-pattern ($generated $generated@@338)
 :no-pattern ($generated@@0 $generated@@338)
))))))
 :pattern ( ($generated@@303 $generated@@335))
)))
(assert (forall (($generated@@340 T@U) ) (! (let (($generated@@341 ($generated@@307 (type $generated@@340))))
(= (type ($generated@@339 $generated@@340)) ($generated@@76 $generated@@341 $generated@@4)))
 :pattern ( ($generated@@339 $generated@@340))
)))
(assert (forall (($generated@@342 T@U) ) (! (let (($generated@@343 ($generated@@307 (type $generated@@342))))
(let (($generated@@344 ($generated@@306 (type $generated@@342))))
 (=> (= (type $generated@@342) ($generated@@305 $generated@@344 $generated@@343)) (or (= $generated@@342 ($generated@@304 $generated@@344 $generated@@343)) (exists (($generated@@345 T@U) ) (!  (and (= (type $generated@@345) $generated@@343) ($generated@@0 ($generated@@81 ($generated@@339 $generated@@342) $generated@@345)))
 :no-pattern (type $generated@@345)
 :no-pattern ($generated $generated@@345)
 :no-pattern ($generated@@0 $generated@@345)
))))))
 :pattern ( ($generated@@339 $generated@@342))
)))
(assert (forall (($generated@@346 T@U) ($generated@@347 T@U) ) (!  (=> (and (= (type $generated@@346) ($generated@@76 $generated@@145 $generated@@2)) (= (type $generated@@347) $generated@@64)) (= ($generated@@132 $generated@@346 ($generated@@150 $generated@@347)) (forall (($generated@@348 T@U) ) (!  (=> (and (= (type $generated@@348) $generated@@145) (< 0 ($generated ($generated@@81 $generated@@346 $generated@@348)))) ($generated@@224 $generated@@348 $generated@@347))
 :pattern ( ($generated@@81 $generated@@346 $generated@@348))
))))
 :pattern ( ($generated@@132 $generated@@346 ($generated@@150 $generated@@347)))
)))
(assert (forall (($generated@@349 T@U) ($generated@@350 T@U) ($generated@@351 T@U) ) (!  (=> (and (and (= (type $generated@@349) ($generated@@76 $generated@@145 $generated@@4)) (= (type $generated@@350) $generated@@64)) (= (type $generated@@351) ($generated@@76 $generated@@77 $generated@@78))) (= ($generated@@74 $generated@@349 ($generated@@233 $generated@@350) $generated@@351) (forall (($generated@@352 T@U) ) (!  (=> (and (= (type $generated@@352) $generated@@145) ($generated@@0 ($generated@@81 $generated@@349 $generated@@352))) ($generated@@254 $generated@@352 $generated@@350 $generated@@351))
 :pattern ( ($generated@@81 $generated@@349 $generated@@352))
))))
 :pattern ( ($generated@@74 $generated@@349 ($generated@@233 $generated@@350) $generated@@351))
)))
(assert (forall (($generated@@353 T@U) ($generated@@354 T@U) ($generated@@355 T@U) ) (!  (=> (and (and (= (type $generated@@353) ($generated@@76 $generated@@145 $generated@@4)) (= (type $generated@@354) $generated@@64)) (= (type $generated@@355) ($generated@@76 $generated@@77 $generated@@78))) (= ($generated@@74 $generated@@353 ($generated@@238 $generated@@354) $generated@@355) (forall (($generated@@356 T@U) ) (!  (=> (and (= (type $generated@@356) $generated@@145) ($generated@@0 ($generated@@81 $generated@@353 $generated@@356))) ($generated@@254 $generated@@356 $generated@@354 $generated@@355))
 :pattern ( ($generated@@81 $generated@@353 $generated@@356))
))))
 :pattern ( ($generated@@74 $generated@@353 ($generated@@238 $generated@@354) $generated@@355))
)))
(assert (forall (($generated@@357 T@U) ) (! (let (($generated@@358 (type $generated@@357)))
(= ($generated ($generated@@81 ($generated@@280 $generated@@358) $generated@@357)) 0))
 :pattern ( (let (($generated@@358 (type $generated@@357)))
($generated@@81 ($generated@@280 $generated@@358) $generated@@357)))
)))
(assert  (and (and (forall (($generated@@362 T@U) ) (! (= (type ($generated@@359 $generated@@362)) ($generated@@76 $generated@@145 $generated@@4))
 :pattern ( ($generated@@359 $generated@@362))
)) (forall (($generated@@363 T@T) ($generated@@364 T@U) ) (! (= (type ($generated@@360 $generated@@363 $generated@@364)) $generated@@363)
 :pattern ( ($generated@@360 $generated@@363 $generated@@364))
))) (forall (($generated@@365 T@U) ) (! (let (($generated@@366 ($generated@@289 (type $generated@@365))))
(let (($generated@@367 ($generated@@288 (type $generated@@365))))
(= (type ($generated@@361 $generated@@365)) ($generated@@76 $generated@@367 $generated@@366))))
 :pattern ( ($generated@@361 $generated@@365))
))))
(assert (forall (($generated@@368 T@U) ($generated@@369 T@U) ) (!  (=> (and (= (type $generated@@368) ($generated@@287 $generated@@145 $generated@@145)) (= (type $generated@@369) $generated@@145)) (= ($generated@@0 ($generated@@81 ($generated@@359 $generated@@368) $generated@@369))  (and ($generated@@0 ($generated@@81 ($generated@@285 $generated@@368) ($generated@@143 ($generated@@360 $generated@@136 $generated@@369)))) (= ($generated@@81 ($generated@@361 $generated@@368) ($generated@@143 ($generated@@360 $generated@@136 $generated@@369))) ($generated@@144 ($generated@@360 $generated@@136 $generated@@369))))))
 :pattern ( ($generated@@81 ($generated@@359 $generated@@368) $generated@@369))
)))
(assert  (and (forall (($generated@@372 T@U) ) (! (= (type ($generated@@370 $generated@@372)) ($generated@@76 $generated@@145 $generated@@4))
 :pattern ( ($generated@@370 $generated@@372))
)) (forall (($generated@@373 T@U) ) (! (let (($generated@@374 ($generated@@307 (type $generated@@373))))
(let (($generated@@375 ($generated@@306 (type $generated@@373))))
(= (type ($generated@@371 $generated@@373)) ($generated@@76 $generated@@375 $generated@@374))))
 :pattern ( ($generated@@371 $generated@@373))
))))
(assert (forall (($generated@@376 T@U) ($generated@@377 T@U) ) (!  (=> (and (= (type $generated@@376) ($generated@@305 $generated@@145 $generated@@145)) (= (type $generated@@377) $generated@@145)) (= ($generated@@0 ($generated@@81 ($generated@@370 $generated@@376) $generated@@377))  (and ($generated@@0 ($generated@@81 ($generated@@303 $generated@@376) ($generated@@143 ($generated@@360 $generated@@136 $generated@@377)))) (= ($generated@@81 ($generated@@371 $generated@@376) ($generated@@143 ($generated@@360 $generated@@136 $generated@@377))) ($generated@@144 ($generated@@360 $generated@@136 $generated@@377))))))
 :pattern ( ($generated@@81 ($generated@@370 $generated@@376) $generated@@377))
)))
(assert (forall (($generated@@378 T@U) ($generated@@379 T@U) ) (! (let (($generated@@380 (type $generated@@379)))
(let (($generated@@381 ($generated@@288 (type $generated@@378))))
 (=> (= (type $generated@@378) ($generated@@287 $generated@@381 $generated@@380)) (= ($generated@@0 ($generated@@81 ($generated@@328 $generated@@378) $generated@@379)) (exists (($generated@@382 T@U) ) (!  (and (= (type $generated@@382) $generated@@381) (and ($generated@@0 ($generated@@81 ($generated@@285 $generated@@378) $generated@@382)) (= $generated@@379 ($generated@@81 ($generated@@361 $generated@@378) $generated@@382))))
 :pattern ( ($generated@@81 ($generated@@285 $generated@@378) $generated@@382))
 :pattern ( ($generated@@81 ($generated@@361 $generated@@378) $generated@@382))
))))))
 :pattern ( ($generated@@81 ($generated@@328 $generated@@378) $generated@@379))
)))
(assert (forall (($generated@@383 T@U) ($generated@@384 T@U) ) (! (let (($generated@@385 (type $generated@@384)))
(let (($generated@@386 ($generated@@306 (type $generated@@383))))
 (=> (= (type $generated@@383) ($generated@@305 $generated@@386 $generated@@385)) (= ($generated@@0 ($generated@@81 ($generated@@339 $generated@@383) $generated@@384)) (exists (($generated@@387 T@U) ) (!  (and (= (type $generated@@387) $generated@@386) (and ($generated@@0 ($generated@@81 ($generated@@303 $generated@@383) $generated@@387)) (= $generated@@384 ($generated@@81 ($generated@@371 $generated@@383) $generated@@387))))
 :pattern ( ($generated@@81 ($generated@@303 $generated@@383) $generated@@387))
 :pattern ( ($generated@@81 ($generated@@371 $generated@@383) $generated@@387))
))))))
 :pattern ( ($generated@@81 ($generated@@339 $generated@@383) $generated@@384))
)))
(assert (forall (($generated@@389 T@U) ($generated@@390 T@U) ) (! (= (type ($generated@@388 $generated@@389 $generated@@390)) $generated@@64)
 :pattern ( ($generated@@388 $generated@@389 $generated@@390))
)))
(assert (forall (($generated@@391 T@U) ($generated@@392 T@U) ($generated@@393 T@U) ($generated@@394 T@U) ) (!  (=> (and (and (and (= (type $generated@@391) ($generated@@287 $generated@@145 $generated@@145)) (= (type $generated@@392) $generated@@64)) (= (type $generated@@393) $generated@@64)) (= (type $generated@@394) ($generated@@76 $generated@@77 $generated@@78))) (= ($generated@@74 $generated@@391 ($generated@@388 $generated@@392 $generated@@393) $generated@@394) (forall (($generated@@395 T@U) ) (!  (=> (and (= (type $generated@@395) $generated@@145) ($generated@@0 ($generated@@81 ($generated@@285 $generated@@391) $generated@@395))) (and ($generated@@254 ($generated@@81 ($generated@@361 $generated@@391) $generated@@395) $generated@@393 $generated@@394) ($generated@@254 $generated@@395 $generated@@392 $generated@@394)))
 :pattern ( ($generated@@81 ($generated@@361 $generated@@391) $generated@@395))
 :pattern ( ($generated@@81 ($generated@@285 $generated@@391) $generated@@395))
))))
 :pattern ( ($generated@@74 $generated@@391 ($generated@@388 $generated@@392 $generated@@393) $generated@@394))
)))
(assert (forall (($generated@@397 T@U) ($generated@@398 T@U) ) (! (= (type ($generated@@396 $generated@@397 $generated@@398)) $generated@@64)
 :pattern ( ($generated@@396 $generated@@397 $generated@@398))
)))
(assert (forall (($generated@@399 T@U) ($generated@@400 T@U) ($generated@@401 T@U) ($generated@@402 T@U) ) (!  (=> (and (and (and (= (type $generated@@399) ($generated@@305 $generated@@145 $generated@@145)) (= (type $generated@@400) $generated@@64)) (= (type $generated@@401) $generated@@64)) (= (type $generated@@402) ($generated@@76 $generated@@77 $generated@@78))) (= ($generated@@74 $generated@@399 ($generated@@396 $generated@@400 $generated@@401) $generated@@402) (forall (($generated@@403 T@U) ) (!  (=> (and (= (type $generated@@403) $generated@@145) ($generated@@0 ($generated@@81 ($generated@@303 $generated@@399) $generated@@403))) (and ($generated@@254 ($generated@@81 ($generated@@371 $generated@@399) $generated@@403) $generated@@401 $generated@@402) ($generated@@254 $generated@@403 $generated@@400 $generated@@402)))
 :pattern ( ($generated@@81 ($generated@@371 $generated@@399) $generated@@403))
 :pattern ( ($generated@@81 ($generated@@303 $generated@@399) $generated@@403))
))))
 :pattern ( ($generated@@74 $generated@@399 ($generated@@396 $generated@@400 $generated@@401) $generated@@402))
)))
(assert (forall (($generated@@405 T@T) ) (! (= (type ($generated@@404 $generated@@405)) ($generated@@76 $generated@@405 $generated@@4))
 :pattern ( ($generated@@404 $generated@@405))
)))
(assert (forall (($generated@@406 T@U) ) (! (let (($generated@@407 ($generated@@307 (type $generated@@406))))
(let (($generated@@408 ($generated@@306 (type $generated@@406))))
 (=> (= (type $generated@@406) ($generated@@305 $generated@@408 $generated@@407)) (= (= $generated@@406 ($generated@@304 $generated@@408 $generated@@407)) (= ($generated@@303 $generated@@406) ($generated@@404 $generated@@408))))))
 :pattern ( ($generated@@303 $generated@@406))
)))
(assert (forall (($generated@@409 T@U) ) (! (let (($generated@@410 ($generated@@307 (type $generated@@409))))
(let (($generated@@411 ($generated@@306 (type $generated@@409))))
 (=> (= (type $generated@@409) ($generated@@305 $generated@@411 $generated@@410)) (= (= $generated@@409 ($generated@@304 $generated@@411 $generated@@410)) (= ($generated@@339 $generated@@409) ($generated@@404 $generated@@410))))))
 :pattern ( ($generated@@339 $generated@@409))
)))
(assert (forall (($generated@@412 T@U) ) (! (let (($generated@@413 ($generated@@307 (type $generated@@412))))
(let (($generated@@414 ($generated@@306 (type $generated@@412))))
 (=> (= (type $generated@@412) ($generated@@305 $generated@@414 $generated@@413)) (= (= $generated@@412 ($generated@@304 $generated@@414 $generated@@413)) (= ($generated@@370 $generated@@412) ($generated@@404 $generated@@145))))))
 :pattern ( ($generated@@370 $generated@@412))
)))
(assert (forall (($generated@@415 T@U) ) (! (let (($generated@@416 ($generated@@289 (type $generated@@415))))
(let (($generated@@417 ($generated@@288 (type $generated@@415))))
 (=> (= (type $generated@@415) ($generated@@287 $generated@@417 $generated@@416)) (or (= $generated@@415 ($generated@@286 $generated@@417 $generated@@416)) (exists (($generated@@418 T@U) ($generated@@419 T@U) ) (!  (and (and (= (type $generated@@418) $generated@@145) (= (type $generated@@419) $generated@@145)) ($generated@@0 ($generated@@81 ($generated@@359 $generated@@415) ($generated@@274 ($generated@@223 $generated@@418 $generated@@419)))))
 :no-pattern (type $generated@@418)
 :no-pattern (type $generated@@419)
 :no-pattern ($generated $generated@@418)
 :no-pattern ($generated@@0 $generated@@418)
 :no-pattern ($generated $generated@@419)
 :no-pattern ($generated@@0 $generated@@419)
))))))
 :pattern ( ($generated@@359 $generated@@415))
)))
(assert (forall (($generated@@420 T@U) ) (! (let (($generated@@421 ($generated@@307 (type $generated@@420))))
(let (($generated@@422 ($generated@@306 (type $generated@@420))))
 (=> (= (type $generated@@420) ($generated@@305 $generated@@422 $generated@@421)) (or (= $generated@@420 ($generated@@304 $generated@@422 $generated@@421)) (exists (($generated@@423 T@U) ($generated@@424 T@U) ) (!  (and (and (= (type $generated@@423) $generated@@145) (= (type $generated@@424) $generated@@145)) ($generated@@0 ($generated@@81 ($generated@@370 $generated@@420) ($generated@@274 ($generated@@223 $generated@@423 $generated@@424)))))
 :no-pattern (type $generated@@423)
 :no-pattern (type $generated@@424)
 :no-pattern ($generated $generated@@423)
 :no-pattern ($generated@@0 $generated@@423)
 :no-pattern ($generated $generated@@424)
 :no-pattern ($generated@@0 $generated@@424)
))))))
 :pattern ( ($generated@@370 $generated@@420))
)))
(assert (forall (($generated@@425 T@U) ) (!  (=> (and (= (type $generated@@425) $generated@@145) ($generated@@224 $generated@@425 $generated@@46)) (and (= ($generated@@274 ($generated@@360 $generated@@2 $generated@@425)) $generated@@425) ($generated@@132 ($generated@@360 $generated@@2 $generated@@425) $generated@@46)))
 :pattern ( ($generated@@224 $generated@@425 $generated@@46))
)))
(assert (forall (($generated@@426 T@U) ) (!  (=> (and (= (type $generated@@426) $generated@@145) ($generated@@224 $generated@@426 $generated@@47)) (and (= ($generated@@274 ($generated@@360 $generated@@3 $generated@@426)) $generated@@426) ($generated@@132 ($generated@@360 $generated@@3 $generated@@426) $generated@@47)))
 :pattern ( ($generated@@224 $generated@@426 $generated@@47))
)))
(assert (forall (($generated@@427 T@U) ) (!  (=> (and (= (type $generated@@427) $generated@@145) ($generated@@224 $generated@@427 $generated@@44)) (and (= ($generated@@274 ($generated@@360 $generated@@4 $generated@@427)) $generated@@427) ($generated@@132 ($generated@@360 $generated@@4 $generated@@427) $generated@@44)))
 :pattern ( ($generated@@224 $generated@@427 $generated@@44))
)))
(assert (= ($generated@@1 $generated@@428) 20))
(assert (forall (($generated@@429 T@U) ) (!  (=> (and (= (type $generated@@429) $generated@@145) ($generated@@224 $generated@@429 $generated@@45)) (and (= ($generated@@274 ($generated@@360 $generated@@428 $generated@@429)) $generated@@429) ($generated@@132 ($generated@@360 $generated@@428 $generated@@429) $generated@@45)))
 :pattern ( ($generated@@224 $generated@@429 $generated@@45))
)))
(assert (forall (($generated@@430 T@U) ($generated@@431 T@U) ) (!  (=> (= (type $generated@@431) $generated@@64) (= ($generated@@224 ($generated@@274 $generated@@430) $generated@@431) ($generated@@132 $generated@@430 $generated@@431)))
 :pattern ( ($generated@@224 ($generated@@274 $generated@@430) $generated@@431))
)))
(assert (forall (($generated@@432 T@U) ) (! (let (($generated@@433 ($generated@@79 (type $generated@@432))))
 (=> (= (type $generated@@432) ($generated@@76 $generated@@433 $generated@@2)) (<= 0 ($generated@@279 $generated@@432))))
 :pattern ( ($generated@@279 $generated@@432))
)))
(assert (forall (($generated@@434 T@U) ) (! (let (($generated@@435 ($generated@@269 (type $generated@@434))))
 (=> (= (type $generated@@434) ($generated@@268 $generated@@435)) (<= 0 ($generated@@267 $generated@@434))))
 :pattern ( ($generated@@267 $generated@@434))
)))
(assert (forall (($generated@@437 T@U) ) (! (= (type ($generated@@436 $generated@@437)) $generated@@64)
 :pattern ( ($generated@@436 $generated@@437))
)))
(assert (forall (($generated@@438 T@U) ($generated@@439 T@U) ) (!  (=> (and (= (type $generated@@438) $generated@@64) (= (type $generated@@439) $generated@@64)) (= ($generated@@436 ($generated@@388 $generated@@438 $generated@@439)) $generated@@438))
 :pattern ( ($generated@@388 $generated@@438 $generated@@439))
)))
(assert (forall (($generated@@441 T@U) ) (! (= (type ($generated@@440 $generated@@441)) $generated@@64)
 :pattern ( ($generated@@440 $generated@@441))
)))
(assert (forall (($generated@@442 T@U) ($generated@@443 T@U) ) (!  (=> (and (= (type $generated@@442) $generated@@64) (= (type $generated@@443) $generated@@64)) (= ($generated@@440 ($generated@@388 $generated@@442 $generated@@443)) $generated@@443))
 :pattern ( ($generated@@388 $generated@@442 $generated@@443))
)))
(assert (forall (($generated@@444 T@U) ($generated@@445 T@U) ) (!  (=> (and (= (type $generated@@444) $generated@@64) (= (type $generated@@445) $generated@@64)) (= ($generated@@72 ($generated@@388 $generated@@444 $generated@@445)) $generated@@58))
 :pattern ( ($generated@@388 $generated@@444 $generated@@445))
)))
(assert (forall (($generated@@447 T@U) ) (! (= (type ($generated@@446 $generated@@447)) $generated@@64)
 :pattern ( ($generated@@446 $generated@@447))
)))
(assert (forall (($generated@@448 T@U) ($generated@@449 T@U) ) (!  (=> (and (= (type $generated@@448) $generated@@64) (= (type $generated@@449) $generated@@64)) (= ($generated@@446 ($generated@@396 $generated@@448 $generated@@449)) $generated@@448))
 :pattern ( ($generated@@396 $generated@@448 $generated@@449))
)))
(assert (forall (($generated@@451 T@U) ) (! (= (type ($generated@@450 $generated@@451)) $generated@@64)
 :pattern ( ($generated@@450 $generated@@451))
)))
(assert (forall (($generated@@452 T@U) ($generated@@453 T@U) ) (!  (=> (and (= (type $generated@@452) $generated@@64) (= (type $generated@@453) $generated@@64)) (= ($generated@@450 ($generated@@396 $generated@@452 $generated@@453)) $generated@@453))
 :pattern ( ($generated@@396 $generated@@452 $generated@@453))
)))
(assert (forall (($generated@@454 T@U) ($generated@@455 T@U) ) (!  (=> (and (= (type $generated@@454) $generated@@64) (= (type $generated@@455) $generated@@64)) (= ($generated@@72 ($generated@@396 $generated@@454 $generated@@455)) $generated@@59))
 :pattern ( ($generated@@396 $generated@@454 $generated@@455))
)))
(assert (forall (($generated@@456 T@U) ($generated@@457 T@U) ) (!  (=> (and (= (type $generated@@456) $generated@@145) (= (type $generated@@457) $generated@@145)) (= ($generated@@260 ($generated@@223 $generated@@456 $generated@@457)) $generated@@61))
 :pattern ( ($generated@@223 $generated@@456 $generated@@457))
)))
(assert (forall (($generated@@459 T@U) ) (! (= (type ($generated@@458 $generated@@459)) $generated@@64)
 :pattern ( ($generated@@458 $generated@@459))
)))
(assert (forall (($generated@@460 T@U) ($generated@@461 T@U) ) (!  (=> (and (= (type $generated@@460) $generated@@64) (= (type $generated@@461) $generated@@64)) (= ($generated@@458 ($generated@@135 $generated@@460 $generated@@461)) $generated@@460))
 :pattern ( ($generated@@135 $generated@@460 $generated@@461))
)))
(assert (forall (($generated@@463 T@U) ) (! (= (type ($generated@@462 $generated@@463)) $generated@@64)
 :pattern ( ($generated@@462 $generated@@463))
)))
(assert (forall (($generated@@464 T@U) ($generated@@465 T@U) ) (!  (=> (and (= (type $generated@@464) $generated@@64) (= (type $generated@@465) $generated@@64)) (= ($generated@@462 ($generated@@135 $generated@@464 $generated@@465)) $generated@@465))
 :pattern ( ($generated@@135 $generated@@464 $generated@@465))
)))
(assert (forall (($generated@@466 T@U) ($generated@@467 T@U) ) (!  (=> (and (= (type $generated@@466) $generated@@145) (= (type $generated@@467) $generated@@145)) (= ($generated@@143 ($generated@@223 $generated@@466 $generated@@467)) $generated@@466))
 :pattern ( ($generated@@223 $generated@@466 $generated@@467))
)))
(assert (forall (($generated@@468 T@U) ($generated@@469 T@U) ) (!  (=> (and (= (type $generated@@468) $generated@@145) (= (type $generated@@469) $generated@@145)) (= ($generated@@144 ($generated@@223 $generated@@468 $generated@@469)) $generated@@469))
 :pattern ( ($generated@@223 $generated@@468 $generated@@469))
)))
(assert  (and (forall (($generated@@472 T@U) ) (! (= (type ($generated@@470 $generated@@472)) $generated@@64)
 :pattern ( ($generated@@470 $generated@@472))
)) (forall (($generated@@473 T@U) ($generated@@474 Int) ) (! (let (($generated@@475 ($generated@@269 (type $generated@@473))))
(= (type ($generated@@471 $generated@@473 $generated@@474)) $generated@@475))
 :pattern ( ($generated@@471 $generated@@473 $generated@@474))
))))
(assert (forall (($generated@@476 T@U) ($generated@@477 T@U) ($generated@@478 T@U) ) (!  (=> (and (and (= (type $generated@@476) ($generated@@268 $generated@@145)) (= (type $generated@@477) $generated@@64)) (= (type $generated@@478) ($generated@@76 $generated@@77 $generated@@78))) (= ($generated@@74 $generated@@476 ($generated@@470 $generated@@477) $generated@@478) (forall (($generated@@479 Int) ) (!  (=> (and (<= 0 $generated@@479) (< $generated@@479 ($generated@@267 $generated@@476))) ($generated@@254 ($generated@@471 $generated@@476 $generated@@479) $generated@@477 $generated@@478))
 :pattern ( ($generated@@471 $generated@@476 $generated@@479))
))))
 :pattern ( ($generated@@74 $generated@@476 ($generated@@470 $generated@@477) $generated@@478))
)))
(assert (forall (($generated@@481 Int) ) (! (= ($generated@@480 ($generated@@75 $generated@@481)) $generated@@481)
 :pattern ( ($generated@@75 $generated@@481))
)))
(assert (forall (($generated@@483 T@U) ) (! (= (type ($generated@@482 $generated@@483)) $generated@@64)
 :pattern ( ($generated@@482 $generated@@483))
)))
(assert (forall (($generated@@484 T@U) ) (!  (=> (= (type $generated@@484) $generated@@64) (= ($generated@@482 ($generated@@233 $generated@@484)) $generated@@484))
 :pattern ( ($generated@@233 $generated@@484))
)))
(assert (forall (($generated@@485 T@U) ) (!  (=> (= (type $generated@@485) $generated@@64) (= ($generated@@72 ($generated@@233 $generated@@485)) $generated@@54))
 :pattern ( ($generated@@233 $generated@@485))
)))
(assert (forall (($generated@@487 T@U) ) (! (= (type ($generated@@486 $generated@@487)) $generated@@64)
 :pattern ( ($generated@@486 $generated@@487))
)))
(assert (forall (($generated@@488 T@U) ) (!  (=> (= (type $generated@@488) $generated@@64) (= ($generated@@486 ($generated@@238 $generated@@488)) $generated@@488))
 :pattern ( ($generated@@238 $generated@@488))
)))
(assert (forall (($generated@@489 T@U) ) (!  (=> (= (type $generated@@489) $generated@@64) (= ($generated@@72 ($generated@@238 $generated@@489)) $generated@@55))
 :pattern ( ($generated@@238 $generated@@489))
)))
(assert (forall (($generated@@491 T@U) ) (! (= (type ($generated@@490 $generated@@491)) $generated@@64)
 :pattern ( ($generated@@490 $generated@@491))
)))
(assert (forall (($generated@@492 T@U) ) (!  (=> (= (type $generated@@492) $generated@@64) (= ($generated@@490 ($generated@@150 $generated@@492)) $generated@@492))
 :pattern ( ($generated@@150 $generated@@492))
)))
(assert (forall (($generated@@493 T@U) ) (!  (=> (= (type $generated@@493) $generated@@64) (= ($generated@@72 ($generated@@150 $generated@@493)) $generated@@56))
 :pattern ( ($generated@@150 $generated@@493))
)))
(assert (forall (($generated@@495 T@U) ) (! (= (type ($generated@@494 $generated@@495)) $generated@@64)
 :pattern ( ($generated@@494 $generated@@495))
)))
(assert (forall (($generated@@496 T@U) ) (!  (=> (= (type $generated@@496) $generated@@64) (= ($generated@@494 ($generated@@470 $generated@@496)) $generated@@496))
 :pattern ( ($generated@@470 $generated@@496))
)))
(assert (forall (($generated@@497 T@U) ) (!  (=> (= (type $generated@@497) $generated@@64) (= ($generated@@72 ($generated@@470 $generated@@497)) $generated@@57))
 :pattern ( ($generated@@470 $generated@@497))
)))
(assert (forall (($generated@@498 T@U) ) (! (let (($generated@@499 (type $generated@@498)))
(= ($generated@@360 $generated@@499 ($generated@@274 $generated@@498)) $generated@@498))
 :pattern ( ($generated@@274 $generated@@498))
)))
(assert (forall (($generated@@500 T@U) ($generated@@501 T@U) ($generated@@502 T@U) ) (!  (=> (and (and (= (type $generated@@500) ($generated@@287 $generated@@145 $generated@@145)) (= (type $generated@@501) $generated@@64)) (= (type $generated@@502) $generated@@64)) (= ($generated@@132 $generated@@500 ($generated@@388 $generated@@501 $generated@@502)) (forall (($generated@@503 T@U) ) (!  (=> (and (= (type $generated@@503) $generated@@145) ($generated@@0 ($generated@@81 ($generated@@285 $generated@@500) $generated@@503))) (and ($generated@@224 ($generated@@81 ($generated@@361 $generated@@500) $generated@@503) $generated@@502) ($generated@@224 $generated@@503 $generated@@501)))
 :pattern ( ($generated@@81 ($generated@@361 $generated@@500) $generated@@503))
 :pattern ( ($generated@@81 ($generated@@285 $generated@@500) $generated@@503))
))))
 :pattern ( ($generated@@132 $generated@@500 ($generated@@388 $generated@@501 $generated@@502)))
)))
(assert (forall (($generated@@504 T@U) ($generated@@505 T@U) ($generated@@506 T@U) ) (!  (=> (and (and (= (type $generated@@504) ($generated@@305 $generated@@145 $generated@@145)) (= (type $generated@@505) $generated@@64)) (= (type $generated@@506) $generated@@64)) (= ($generated@@132 $generated@@504 ($generated@@396 $generated@@505 $generated@@506)) (forall (($generated@@507 T@U) ) (!  (=> (and (= (type $generated@@507) $generated@@145) ($generated@@0 ($generated@@81 ($generated@@303 $generated@@504) $generated@@507))) (and ($generated@@224 ($generated@@81 ($generated@@371 $generated@@504) $generated@@507) $generated@@506) ($generated@@224 $generated@@507 $generated@@505)))
 :pattern ( ($generated@@81 ($generated@@371 $generated@@504) $generated@@507))
 :pattern ( ($generated@@81 ($generated@@303 $generated@@504) $generated@@507))
))))
 :pattern ( ($generated@@132 $generated@@504 ($generated@@396 $generated@@505 $generated@@506)))
)))
(assert (forall (($generated@@510 T@U) ($generated@@511 T@U) ) (!  (=> (and (= (type $generated@@510) $generated@@145) (= (type $generated@@511) $generated@@145)) (< ($generated@@508 $generated@@510) ($generated@@509 ($generated@@223 $generated@@510 $generated@@511))))
 :pattern ( ($generated@@223 $generated@@510 $generated@@511))
)))
(assert (forall (($generated@@512 T@U) ($generated@@513 T@U) ) (!  (=> (and (= (type $generated@@512) $generated@@145) (= (type $generated@@513) $generated@@145)) (< ($generated@@508 $generated@@513) ($generated@@509 ($generated@@223 $generated@@512 $generated@@513))))
 :pattern ( ($generated@@223 $generated@@512 $generated@@513))
)))
(assert (forall (($generated@@514 T@U) ($generated@@515 T@U) ($generated@@516 T@U) ) (!  (=> (and (and (and (= (type $generated@@514) $generated@@145) (= (type $generated@@515) $generated@@64)) (= (type $generated@@516) $generated@@64)) ($generated@@224 $generated@@514 ($generated@@388 $generated@@515 $generated@@516))) (and (= ($generated@@274 ($generated@@360 ($generated@@287 $generated@@145 $generated@@145) $generated@@514)) $generated@@514) ($generated@@132 ($generated@@360 ($generated@@287 $generated@@145 $generated@@145) $generated@@514) ($generated@@388 $generated@@515 $generated@@516))))
 :pattern ( ($generated@@224 $generated@@514 ($generated@@388 $generated@@515 $generated@@516)))
)))
(assert (forall (($generated@@517 T@U) ($generated@@518 T@U) ($generated@@519 T@U) ) (!  (=> (and (and (and (= (type $generated@@517) $generated@@145) (= (type $generated@@518) $generated@@64)) (= (type $generated@@519) $generated@@64)) ($generated@@224 $generated@@517 ($generated@@396 $generated@@518 $generated@@519))) (and (= ($generated@@274 ($generated@@360 ($generated@@305 $generated@@145 $generated@@145) $generated@@517)) $generated@@517) ($generated@@132 ($generated@@360 ($generated@@305 $generated@@145 $generated@@145) $generated@@517) ($generated@@396 $generated@@518 $generated@@519))))
 :pattern ( ($generated@@224 $generated@@517 ($generated@@396 $generated@@518 $generated@@519)))
)))
(assert (forall (($generated@@520 T@U) ($generated@@521 T@U) ($generated@@522 T@U) ) (!  (=> (and (and (and (= (type $generated@@520) $generated@@64) (= (type $generated@@521) $generated@@64)) (= (type $generated@@522) $generated@@145)) ($generated@@224 $generated@@522 ($generated@@135 $generated@@520 $generated@@521))) (and (= ($generated@@274 ($generated@@360 $generated@@136 $generated@@522)) $generated@@522) ($generated@@132 ($generated@@360 $generated@@136 $generated@@522) ($generated@@135 $generated@@520 $generated@@521))))
 :pattern ( ($generated@@224 $generated@@522 ($generated@@135 $generated@@520 $generated@@521)))
)))
(assert (forall (($generated@@523 T@U) ) (! (let (($generated@@524 (type $generated@@523)))
 (not ($generated@@0 ($generated@@81 ($generated@@404 $generated@@524) $generated@@523))))
 :pattern ( (let (($generated@@524 (type $generated@@523)))
($generated@@81 ($generated@@404 $generated@@524) $generated@@523)))
)))
(assert  (=> (<= 0 $generated@@249) (forall (($generated@@526 Int) ) (!  (=> (or ($generated@@251 $generated@@526) (not (= 0 $generated@@249))) (= ($generated@@250 $generated@@526) (= ($generated@@525 $generated@@526 ($generated@@243 2)) ($generated@@243 0))))
 :pattern ( ($generated@@250 $generated@@526))
))))
(assert (forall (($generated@@527 Int) ($generated@@528 Int) ) (! (= ($generated@@525 $generated@@527 $generated@@528) (mod $generated@@527 $generated@@528))
 :pattern ( ($generated@@525 $generated@@527 $generated@@528))
)))
(assert (forall (($generated@@530 T@U) ) (! (= (type ($generated@@529 $generated@@530)) $generated@@69)
 :pattern ( ($generated@@529 $generated@@530))
)))
(assert (forall (($generated@@531 T@U) ($generated@@532 T@U) ) (!  (=> (and (= (type $generated@@531) $generated@@64) (= (type $generated@@532) $generated@@64)) (and (= ($generated@@72 ($generated@@135 $generated@@531 $generated@@532)) $generated@@62) (= ($generated@@529 ($generated@@135 $generated@@531 $generated@@532)) $generated@@63)))
 :pattern ( ($generated@@135 $generated@@531 $generated@@532))
)))
(assert (forall (($generated@@533 T@U) ) (!  (=> (= (type $generated@@533) $generated@@136) (= ($generated@@508 ($generated@@274 $generated@@533)) ($generated@@509 $generated@@533)))
 :pattern ( ($generated@@508 ($generated@@274 $generated@@533)))
)))
(assert (forall (($generated@@534 T@U) ) (!  (=> (and (= (type $generated@@534) $generated@@145) ($generated@@224 $generated@@534 ($generated@@75 0))) (and (= ($generated@@274 ($generated@@360 $generated@@2 $generated@@534)) $generated@@534) ($generated@@132 ($generated@@360 ($generated@@76 $generated@@145 $generated@@4) $generated@@534) ($generated@@75 0))))
 :pattern ( ($generated@@224 $generated@@534 ($generated@@75 0)))
)))
(assert (forall (($generated@@535 T@U) ($generated@@536 T@U) ) (!  (=> (and (and (= (type $generated@@535) $generated@@145) (= (type $generated@@536) $generated@@64)) ($generated@@224 $generated@@535 ($generated@@233 $generated@@536))) (and (= ($generated@@274 ($generated@@360 ($generated@@76 $generated@@145 $generated@@4) $generated@@535)) $generated@@535) ($generated@@132 ($generated@@360 ($generated@@76 $generated@@145 $generated@@4) $generated@@535) ($generated@@233 $generated@@536))))
 :pattern ( ($generated@@224 $generated@@535 ($generated@@233 $generated@@536)))
)))
(assert (forall (($generated@@537 T@U) ($generated@@538 T@U) ) (!  (=> (and (and (= (type $generated@@537) $generated@@145) (= (type $generated@@538) $generated@@64)) ($generated@@224 $generated@@537 ($generated@@238 $generated@@538))) (and (= ($generated@@274 ($generated@@360 ($generated@@76 $generated@@145 $generated@@4) $generated@@537)) $generated@@537) ($generated@@132 ($generated@@360 ($generated@@76 $generated@@145 $generated@@4) $generated@@537) ($generated@@238 $generated@@538))))
 :pattern ( ($generated@@224 $generated@@537 ($generated@@238 $generated@@538)))
)))
(assert (forall (($generated@@539 T@U) ($generated@@540 T@U) ) (!  (=> (and (and (= (type $generated@@539) $generated@@145) (= (type $generated@@540) $generated@@64)) ($generated@@224 $generated@@539 ($generated@@150 $generated@@540))) (and (= ($generated@@274 ($generated@@360 ($generated@@76 $generated@@145 $generated@@2) $generated@@539)) $generated@@539) ($generated@@132 ($generated@@360 ($generated@@76 $generated@@145 $generated@@2) $generated@@539) ($generated@@150 $generated@@540))))
 :pattern ( ($generated@@224 $generated@@539 ($generated@@150 $generated@@540)))
)))
(assert (forall (($generated@@541 T@U) ($generated@@542 T@U) ) (!  (=> (and (and (= (type $generated@@541) $generated@@145) (= (type $generated@@542) $generated@@64)) ($generated@@224 $generated@@541 ($generated@@470 $generated@@542))) (and (= ($generated@@274 ($generated@@360 ($generated@@268 $generated@@145) $generated@@541)) $generated@@541) ($generated@@132 ($generated@@360 ($generated@@268 $generated@@145) $generated@@541) ($generated@@470 $generated@@542))))
 :pattern ( ($generated@@224 $generated@@541 ($generated@@470 $generated@@542)))
)))
(assert (forall (($generated@@543 T@U) ($generated@@544 T@U) ($generated@@545 T@U) ) (!  (=> (and (and (= (type $generated@@543) ($generated@@76 $generated@@145 $generated@@2)) (= (type $generated@@544) $generated@@64)) (= (type $generated@@545) ($generated@@76 $generated@@77 $generated@@78))) (= ($generated@@74 $generated@@543 ($generated@@150 $generated@@544) $generated@@545) (forall (($generated@@546 T@U) ) (!  (=> (and (= (type $generated@@546) $generated@@145) (< 0 ($generated ($generated@@81 $generated@@543 $generated@@546)))) ($generated@@254 $generated@@546 $generated@@544 $generated@@545))
 :pattern ( ($generated@@81 $generated@@543 $generated@@546))
))))
 :pattern ( ($generated@@74 $generated@@543 ($generated@@150 $generated@@544) $generated@@545))
)))
(assert (forall (($generated@@547 T@U) ($generated@@548 T@U) ($generated@@549 T@U) ) (!  (=> (and (and (and (= (type $generated@@547) $generated@@136) (= (type $generated@@548) $generated@@64)) (= (type $generated@@549) ($generated@@76 $generated@@77 $generated@@78))) (and ($generated@@253 $generated@@549) (and ($generated@@134 $generated@@547) (exists (($generated@@550 T@U) ) (!  (and (= (type $generated@@550) $generated@@64) ($generated@@74 $generated@@547 ($generated@@135 $generated@@548 $generated@@550) $generated@@549))
 :pattern ( ($generated@@74 $generated@@547 ($generated@@135 $generated@@548 $generated@@550) $generated@@549))
))))) ($generated@@254 ($generated@@143 $generated@@547) $generated@@548 $generated@@549))
 :pattern ( ($generated@@254 ($generated@@143 $generated@@547) $generated@@548 $generated@@549))
)))
(assert (forall (($generated@@551 T@U) ($generated@@552 T@U) ($generated@@553 T@U) ) (!  (=> (and (and (and (= (type $generated@@551) $generated@@136) (= (type $generated@@552) $generated@@64)) (= (type $generated@@553) ($generated@@76 $generated@@77 $generated@@78))) (and ($generated@@253 $generated@@553) (and ($generated@@134 $generated@@551) (exists (($generated@@554 T@U) ) (!  (and (= (type $generated@@554) $generated@@64) ($generated@@74 $generated@@551 ($generated@@135 $generated@@554 $generated@@552) $generated@@553))
 :pattern ( ($generated@@74 $generated@@551 ($generated@@135 $generated@@554 $generated@@552) $generated@@553))
))))) ($generated@@254 ($generated@@144 $generated@@551) $generated@@552 $generated@@553))
 :pattern ( ($generated@@254 ($generated@@144 $generated@@551) $generated@@552 $generated@@553))
)))
(assert (forall (($generated@@555 T@U) ($generated@@556 T@U) ) (!  (=> (and (= (type $generated@@555) $generated@@145) (= (type $generated@@556) $generated@@145)) (= ($generated@@223 ($generated@@245 $generated@@555) ($generated@@245 $generated@@556)) ($generated@@245 ($generated@@223 $generated@@555 $generated@@556))))
 :pattern ( ($generated@@223 ($generated@@245 $generated@@555) ($generated@@245 $generated@@556)))
)))
(assert (forall (($generated@@557 Int) ) (! (= ($generated@@274 ($generated@@8 ($generated@@243 $generated@@557))) ($generated@@245 ($generated@@274 ($generated@@8 $generated@@557))))
 :pattern ( ($generated@@274 ($generated@@8 ($generated@@243 $generated@@557))))
)))
(assert (forall (($generated@@558 T@U) ) (! (= ($generated@@274 ($generated@@245 $generated@@558)) ($generated@@245 ($generated@@274 $generated@@558)))
 :pattern ( ($generated@@274 ($generated@@245 $generated@@558)))
)))
(assert (forall (($generated@@559 T@U) ) (! (let (($generated@@560 ($generated@@269 (type $generated@@559))))
 (=> (and (= (type $generated@@559) ($generated@@268 $generated@@560)) (= ($generated@@267 $generated@@559) 0)) (= $generated@@559 ($generated@@266 $generated@@560))))
 :pattern ( ($generated@@267 $generated@@559))
)))
(assert (forall (($generated@@561 T@U) ($generated@@562 T@U) ($generated@@563 T@U) ) (! (let (($generated@@564 (type $generated@@562)))
 (=> (and (and (= (type $generated@@561) ($generated@@76 $generated@@564 $generated@@2)) (= (type $generated@@563) $generated@@2)) (<= 0 ($generated $generated@@563))) (= ($generated@@279 ($generated@@82 $generated@@561 $generated@@562 $generated@@563)) (+ (- ($generated@@279 $generated@@561) ($generated ($generated@@81 $generated@@561 $generated@@562))) ($generated $generated@@563)))))
 :pattern ( ($generated@@279 ($generated@@82 $generated@@561 $generated@@562 $generated@@563)))
)))
(assert  (=> (<= 0 $generated@@249) (forall (($generated@@565 Int) ) (!  (=> (or ($generated@@251 ($generated@@243 $generated@@565)) (not (= 0 $generated@@249))) (= ($generated@@250 ($generated@@243 $generated@@565)) (= ($generated@@243 ($generated@@525 $generated@@565 ($generated@@243 2))) ($generated@@243 0))))
 :weight 3
 :pattern ( ($generated@@250 ($generated@@243 $generated@@565)))
))))
(assert (forall (($generated@@566 T@U) ($generated@@567 T@U) ) (!  (=> (and (= (type $generated@@566) ($generated@@76 $generated@@77 $generated@@78)) (= (type $generated@@567) $generated@@2)) ($generated@@74 $generated@@567 $generated@@46 $generated@@566))
 :pattern ( ($generated@@74 $generated@@567 $generated@@46 $generated@@566))
)))
(assert (forall (($generated@@568 T@U) ($generated@@569 T@U) ) (!  (=> (and (= (type $generated@@568) ($generated@@76 $generated@@77 $generated@@78)) (= (type $generated@@569) $generated@@3)) ($generated@@74 $generated@@569 $generated@@47 $generated@@568))
 :pattern ( ($generated@@74 $generated@@569 $generated@@47 $generated@@568))
)))
(assert (forall (($generated@@570 T@U) ($generated@@571 T@U) ) (!  (=> (and (= (type $generated@@570) ($generated@@76 $generated@@77 $generated@@78)) (= (type $generated@@571) $generated@@4)) ($generated@@74 $generated@@571 $generated@@44 $generated@@570))
 :pattern ( ($generated@@74 $generated@@571 $generated@@44 $generated@@570))
)))
(assert (forall (($generated@@572 T@U) ($generated@@573 T@U) ) (!  (=> (and (= (type $generated@@572) ($generated@@76 $generated@@77 $generated@@78)) (= (type $generated@@573) $generated@@428)) ($generated@@74 $generated@@573 $generated@@45 $generated@@572))
 :pattern ( ($generated@@74 $generated@@573 $generated@@45 $generated@@572))
)))
(assert (forall (($generated@@574 T@U) ($generated@@575 T@U) ) (!  (=> (and (= (type $generated@@574) ($generated@@76 $generated@@77 $generated@@78)) (= (type $generated@@575) $generated@@145)) ($generated@@74 $generated@@575 $generated@@48 $generated@@574))
 :pattern ( ($generated@@74 $generated@@575 $generated@@48 $generated@@574))
)))
(assert (forall (($generated@@576 T@U) ($generated@@577 T@U) ) (!  (=> (and (= (type $generated@@576) ($generated@@268 $generated@@145)) (= (type $generated@@577) $generated@@64)) (= ($generated@@132 $generated@@576 ($generated@@470 $generated@@577)) (forall (($generated@@578 Int) ) (!  (=> (and (<= 0 $generated@@578) (< $generated@@578 ($generated@@267 $generated@@576))) ($generated@@224 ($generated@@471 $generated@@576 $generated@@578) $generated@@577))
 :pattern ( ($generated@@471 $generated@@576 $generated@@578))
))))
 :pattern ( ($generated@@132 $generated@@576 ($generated@@470 $generated@@577)))
)))
(assert (forall (($generated@@580 T@U) ($generated@@581 Int) ) (!  (=> (= (type $generated@@580) ($generated@@268 $generated@@145)) (=> (and (<= 0 $generated@@581) (< $generated@@581 ($generated@@267 $generated@@580))) (< ($generated@@509 ($generated@@360 $generated@@136 ($generated@@471 $generated@@580 $generated@@581))) ($generated@@579 $generated@@580))))
 :pattern ( ($generated@@509 ($generated@@360 $generated@@136 ($generated@@471 $generated@@580 $generated@@581))))
)))
(assert (forall (($generated@@582 T@U) ($generated@@583 T@U) ($generated@@584 T@U) ) (!  (=> (and (and (and (= (type $generated@@582) ($generated@@287 $generated@@145 $generated@@145)) (= (type $generated@@583) $generated@@64)) (= (type $generated@@584) $generated@@64)) ($generated@@132 $generated@@582 ($generated@@388 $generated@@583 $generated@@584))) (and (and ($generated@@132 ($generated@@285 $generated@@582) ($generated@@233 $generated@@583)) ($generated@@132 ($generated@@328 $generated@@582) ($generated@@233 $generated@@584))) ($generated@@132 ($generated@@359 $generated@@582) ($generated@@233 ($generated@@135 $generated@@583 $generated@@584)))))
 :pattern ( ($generated@@132 $generated@@582 ($generated@@388 $generated@@583 $generated@@584)))
)))
(assert (forall (($generated@@585 T@U) ($generated@@586 T@U) ($generated@@587 T@U) ) (!  (=> (and (and (and (= (type $generated@@585) ($generated@@305 $generated@@145 $generated@@145)) (= (type $generated@@586) $generated@@64)) (= (type $generated@@587) $generated@@64)) ($generated@@132 $generated@@585 ($generated@@396 $generated@@586 $generated@@587))) (and (and ($generated@@132 ($generated@@303 $generated@@585) ($generated@@238 $generated@@586)) ($generated@@132 ($generated@@339 $generated@@585) ($generated@@238 $generated@@587))) ($generated@@132 ($generated@@370 $generated@@585) ($generated@@238 ($generated@@135 $generated@@586 $generated@@587)))))
 :pattern ( ($generated@@132 $generated@@585 ($generated@@396 $generated@@586 $generated@@587)))
)))
(assert (forall (($generated@@588 T@U) ) (!  (=> (= (type $generated@@588) $generated@@2) ($generated@@132 $generated@@588 $generated@@46))
 :pattern ( ($generated@@132 $generated@@588 $generated@@46))
)))
(assert (forall (($generated@@589 T@U) ) (!  (=> (= (type $generated@@589) $generated@@3) ($generated@@132 $generated@@589 $generated@@47))
 :pattern ( ($generated@@132 $generated@@589 $generated@@47))
)))
(assert (forall (($generated@@590 T@U) ) (!  (=> (= (type $generated@@590) $generated@@4) ($generated@@132 $generated@@590 $generated@@44))
 :pattern ( ($generated@@132 $generated@@590 $generated@@44))
)))
(assert (forall (($generated@@591 T@U) ) (!  (=> (= (type $generated@@591) $generated@@428) ($generated@@132 $generated@@591 $generated@@45))
 :pattern ( ($generated@@132 $generated@@591 $generated@@45))
)))
(assert (forall (($generated@@592 T@U) ) (!  (=> (= (type $generated@@592) $generated@@145) ($generated@@132 $generated@@592 $generated@@48))
 :pattern ( ($generated@@132 $generated@@592 $generated@@48))
)))
(push 1)
(declare-fun ControlFlow (Int Int) Int)
(declare-fun $generated@@593 () T@U)
(declare-fun $generated@@594 () T@U)
(declare-fun $generated@@595 () T@U)
(declare-fun $generated@@596 () T@U)
(declare-fun $generated@@597 (T@U) Bool)
(assert  (and (and (and (= (type $generated@@593) ($generated@@157 $generated@@77 $generated@@4)) (= (type $generated@@594) $generated@@77)) (= (type $generated@@595) ($generated@@76 $generated@@77 $generated@@78))) (= (type $generated@@596) ($generated@@157 $generated@@77 $generated@@4))))
(set-option :timeout 0)
(set-option :rlimit 0)
(assert (not
 (=> (= (ControlFlow 0 0) 5) (let (($generated@@598  (=> (and (= $generated@@593 ($generated@@211 $generated@@594 $generated@@595 $generated@@60 false)) (= (ControlFlow 0 3) (- 0 2))) (not (= ($generated@@243 2) 0)))))
(let (($generated@@599 true))
(let (($generated@@600  (=> (= $generated@@596 ($generated@@156 $generated@@594 $generated@@595 $generated@@60 false)) (and (=> (= (ControlFlow 0 4) 1) $generated@@599) (=> (= (ControlFlow 0 4) 3) $generated@@598)))))
(let (($generated@@601  (=> (and (and ($generated@@253 $generated@@595) ($generated@@597 $generated@@595)) (and (= 0 $generated@@249) (= (ControlFlow 0 5) 4))) $generated@@600)))
$generated@@601)))))
))
(check-sat)
(pop 1)
; Valid
(get-info :rlimit)
(reset)
(set-option :rlimit 0)
; did a full reset
(reset)
(set-option :print-success false)
(set-info :smt-lib-version 2.6)
(set-option :auto_config false)
(set-option :type_check true)
(set-option :smt.case_split 3)
(set-option :smt.qi.eager_threshold 100)
(set-option :smt.delay_units true)
(set-option :smt.arith.solver 2)
(set-option :smt.mbqi false)
(set-option :model.compact false)
(set-option :model.v2 true)
(set-option :pp.bv_literals false)
; done setting options


(set-info :category "industrial")
(declare-sort |T@U| 0)
(declare-sort |T@T| 0)
(declare-fun real_pow (Real Real) Real)
(declare-fun UOrdering2 (|T@U| |T@U|) Bool)
(declare-fun UOrdering3 (|T@T| |T@U| |T@U|) Bool)
(declare-fun tickleBool (Bool) Bool)
(assert (and (tickleBool true) (tickleBool false)))
(declare-fun $generated (T@U) Int)
(declare-fun $generated@@0 (T@U) Bool)
(declare-fun $generated@@1 (T@T) Int)
(declare-fun $generated@@2 () T@T)
(declare-fun $generated@@3 () T@T)
(declare-fun $generated@@4 () T@T)
(declare-fun $generated@@5 () T@T)
(declare-fun $generated@@6 () T@T)
(declare-fun $generated@@7 () T@T)
(declare-fun $generated@@8 (Int) T@U)
(declare-fun type (T@U) T@T)
(declare-fun $generated@@9 (Real) T@U)
(declare-fun $generated@@10 (T@U) Real)
(declare-fun $generated@@11 (Bool) T@U)
(declare-fun $generated@@12 (RoundingMode) T@U)
(declare-fun $generated@@13 (T@U) RoundingMode)
(declare-fun $generated@@14 (String) T@U)
(declare-fun $generated@@15 (T@U) String)
(declare-fun $generated@@16 ((RegEx String)) T@U)
(declare-fun $generated@@17 (T@U) (RegEx String))
(declare-fun $generated@@44 () T@U)
(declare-fun $generated@@45 () T@U)
(declare-fun $generated@@46 () T@U)
(declare-fun $generated@@47 () T@U)
(declare-fun $generated@@48 () T@U)
(declare-fun $generated@@49 () T@U)
(declare-fun $generated@@50 () T@U)
(declare-fun $generated@@51 () T@U)
(declare-fun $generated@@52 () T@U)
(declare-fun $generated@@53 () T@U)
(declare-fun $generated@@54 () T@U)
(declare-fun $generated@@55 () T@U)
(declare-fun $generated@@56 () T@U)
(declare-fun $generated@@57 () T@U)
(declare-fun $generated@@58 () T@U)
(declare-fun $generated@@59 () T@U)
(declare-fun $generated@@60 () T@U)
(declare-fun $generated@@61 () T@U)
(declare-fun $generated@@62 () T@U)
(declare-fun $generated@@63 () T@U)
(declare-fun $generated@@64 () T@T)
(declare-fun $generated@@65 () T@T)
(declare-fun $generated@@66 (T@T) T@T)
(declare-fun $generated@@67 (T@T) T@T)
(declare-fun $generated@@68 () T@T)
(declare-fun $generated@@69 () T@T)
(declare-fun $generated@@72 (T@U) T@U)
(declare-fun $generated@@74 (T@U T@U T@U) Bool)
(declare-fun $generated@@75 (Int) T@U)
(declare-fun $generated@@76 (T@T T@T) T@T)
(declare-fun $generated@@77 () T@T)
(declare-fun $generated@@78 () T@T)
(declare-fun $generated@@79 (T@T) T@T)
(declare-fun $generated@@80 (T@T) T@T)
(declare-fun $generated@@81 (T@U T@U) T@U)
(declare-fun $generated@@82 (T@U T@U T@U) T@U)
(declare-fun $generated@@83 (T@U T@U) T@U)
(declare-fun $generated@@84 (T@U T@U T@U) T@U)
(declare-fun $generated@@132 (T@U T@U) Bool)
(declare-fun $generated@@134 (T@U) Bool)
(declare-fun $generated@@135 (T@U T@U) T@U)
(declare-fun $generated@@136 () T@T)
(declare-fun $generated@@142 (T@U T@U) Bool)
(declare-fun $generated@@143 (T@U) T@U)
(declare-fun $generated@@144 (T@U) T@U)
(declare-fun $generated@@145 () T@T)
(declare-fun $generated@@150 (T@U) T@U)
(declare-fun $generated@@151 (T@U) Bool)
(declare-fun $generated@@155 (T@U T@U T@U) T@U)
(declare-fun $generated@@156 (T@U T@U T@U Bool) T@U)
(declare-fun $generated@@157 (T@T T@T) T@T)
(declare-fun $generated@@158 (T@T) T@T)
(declare-fun $generated@@159 (T@T) T@T)
(declare-fun $generated@@160 (T@U T@U T@U T@U) T@U)
(declare-fun $generated@@211 (T@U T@U) T@U)
(declare-fun $generated@@212 (T@U T@U) Bool)
(declare-fun $generated@@221 (T@U) T@U)
(declare-fun $generated@@226 (T@U) T@U)
(declare-fun $generated@@231 (Int) Int)
(declare-fun $generated@@233 (T@U) T@U)
(declare-fun $generated@@237 (T@U) Bool)
(declare-fun $generated@@238 (T@U T@U T@U) Bool)
(declare-fun $generated@@244 (T@U) T@U)
(declare-fun $generated@@250 (T@T) T@U)
(declare-fun $generated@@251 (T@U) Int)
(declare-fun $generated@@252 (T@T) T@T)
(declare-fun $generated@@253 (T@T) T@T)
(declare-fun $generated@@258 (T@U) T@U)
(declare-fun $generated@@263 (T@U) Int)
(declare-fun $generated@@264 (T@T) T@U)
(declare-fun $generated@@269 (T@U) T@U)
(declare-fun $generated@@270 (T@T T@T) T@U)
(declare-fun $generated@@271 (T@T T@T) T@T)
(declare-fun $generated@@272 (T@T) T@T)
(declare-fun $generated@@273 (T@T) T@T)
(declare-fun $generated@@287 (T@U) T@U)
(declare-fun $generated@@288 (T@T T@T) T@U)
(declare-fun $generated@@289 (T@T T@T) T@T)
(declare-fun $generated@@290 (T@T) T@T)
(declare-fun $generated@@291 (T@T) T@T)
(declare-fun $generated@@312 (T@U) T@U)
(declare-fun $generated@@323 (T@U) T@U)
(declare-fun $generated@@343 (T@U) T@U)
(declare-fun $generated@@344 (T@T T@U) T@U)
(declare-fun $generated@@345 (T@U) T@U)
(declare-fun $generated@@354 (T@U) T@U)
(declare-fun $generated@@355 (T@U) T@U)
(declare-fun $generated@@372 (T@U T@U) T@U)
(declare-fun $generated@@380 (T@U T@U) T@U)
(declare-fun $generated@@388 (T@T) T@U)
(declare-fun $generated@@412 () T@T)
(declare-fun $generated@@420 (T@U) T@U)
(declare-fun $generated@@424 (T@U) T@U)
(declare-fun $generated@@430 (T@U) T@U)
(declare-fun $generated@@434 (T@U) T@U)
(declare-fun $generated@@442 (T@U) T@U)
(declare-fun $generated@@446 (T@U) T@U)
(declare-fun $generated@@454 (T@U) T@U)
(declare-fun $generated@@455 (T@U Int) T@U)
(declare-fun $generated@@464 (T@U) Int)
(declare-fun $generated@@466 (T@U) T@U)
(declare-fun $generated@@470 (T@U) T@U)
(declare-fun $generated@@474 (T@U) T@U)
(declare-fun $generated@@478 (T@U) T@U)
(declare-fun $generated@@492 (T@U) Int)
(declare-fun $generated@@493 (T@U) Int)
(declare-fun $generated@@509 (Int Int) Int)
(declare-fun $generated@@512 (T@U) T@U)
(declare-fun $generated@@561 (T@U) Int)
(assert  (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (= ($generated@@1 $generated@@2) 0) (= ($generated@@1 $generated@@3) 1)) (= ($generated@@1 $generated@@4) 2)) (= ($generated@@1 $generated@@5) 3)) (= ($generated@@1 $generated@@6) 4)) (= ($generated@@1 $generated@@7) 5)) (forall (($generated@@18 Int) ) (! (= ($generated ($generated@@8 $generated@@18)) $generated@@18)
 :pattern ( ($generated@@8 $generated@@18))
))) (forall (($generated@@19 T@U) ) (!  (=> (= (type $generated@@19) $generated@@2) (= ($generated@@8 ($generated $generated@@19)) $generated@@19))
 :pattern ( ($generated $generated@@19))
))) (forall (($generated@@20 Int) ) (! (= (type ($generated@@8 $generated@@20)) $generated@@2)
 :pattern ( ($generated@@8 $generated@@20))
))) (forall (($generated@@21 Real) ) (! (= ($generated@@10 ($generated@@9 $generated@@21)) $generated@@21)
 :pattern ( ($generated@@9 $generated@@21))
))) (forall (($generated@@22 T@U) ) (!  (=> (= (type $generated@@22) $generated@@3) (= ($generated@@9 ($generated@@10 $generated@@22)) $generated@@22))
 :pattern ( ($generated@@10 $generated@@22))
))) (forall (($generated@@23 Real) ) (! (= (type ($generated@@9 $generated@@23)) $generated@@3)
 :pattern ( ($generated@@9 $generated@@23))
))) (forall (($generated@@24 Bool) ) (! (= ($generated@@0 ($generated@@11 $generated@@24)) $generated@@24)
 :pattern ( ($generated@@11 $generated@@24))
))) (forall (($generated@@25 T@U) ) (!  (=> (= (type $generated@@25) $generated@@4) (= ($generated@@11 ($generated@@0 $generated@@25)) $generated@@25))
 :pattern ( ($generated@@0 $generated@@25))
))) (forall (($generated@@26 Bool) ) (! (= (type ($generated@@11 $generated@@26)) $generated@@4)
 :pattern ( ($generated@@11 $generated@@26))
))) (forall (($generated@@27 RoundingMode) ) (! (= ($generated@@13 ($generated@@12 $generated@@27)) $generated@@27)
 :pattern ( ($generated@@12 $generated@@27))
))) (forall (($generated@@28 T@U) ) (!  (=> (= (type $generated@@28) $generated@@5) (= ($generated@@12 ($generated@@13 $generated@@28)) $generated@@28))
 :pattern ( ($generated@@13 $generated@@28))
))) (forall (($generated@@29 RoundingMode) ) (! (= (type ($generated@@12 $generated@@29)) $generated@@5)
 :pattern ( ($generated@@12 $generated@@29))
))) (forall (($generated@@30 String) ) (! (= ($generated@@15 ($generated@@14 $generated@@30)) $generated@@30)
 :pattern ( ($generated@@14 $generated@@30))
))) (forall (($generated@@31 T@U) ) (!  (=> (= (type $generated@@31) $generated@@6) (= ($generated@@14 ($generated@@15 $generated@@31)) $generated@@31))
 :pattern ( ($generated@@15 $generated@@31))
))) (forall (($generated@@32 String) ) (! (= (type ($generated@@14 $generated@@32)) $generated@@6)
 :pattern ( ($generated@@14 $generated@@32))
))) (forall (($generated@@33 (RegEx String)) ) (! (= ($generated@@17 ($generated@@16 $generated@@33)) $generated@@33)
 :pattern ( ($generated@@16 $generated@@33))
))) (forall (($generated@@34 T@U) ) (!  (=> (= (type $generated@@34) $generated@@7) (= ($generated@@16 ($generated@@17 $generated@@34)) $generated@@34))
 :pattern ( ($generated@@17 $generated@@34))
))) (forall (($generated@@35 (RegEx String)) ) (! (= (type ($generated@@16 $generated@@35)) $generated@@7)
 :pattern ( ($generated@@16 $generated@@35))
))))
(assert (forall (($generated@@36 T@U) ) (! (UOrdering2 $generated@@36 $generated@@36)
 :no-pattern ($generated $generated@@36)
 :no-pattern ($generated@@0 $generated@@36)
)))
(assert (forall (($generated@@37 T@U) ($generated@@38 T@U) ($generated@@39 T@U) ) (! (let (($generated@@40 (type $generated@@37)))
 (=> (and (and (= (type $generated@@38) $generated@@40) (= (type $generated@@39) $generated@@40)) (and (UOrdering2 $generated@@37 $generated@@38) (UOrdering2 $generated@@38 $generated@@39))) (UOrdering2 $generated@@37 $generated@@39)))
 :pattern ( (UOrdering2 $generated@@37 $generated@@38) (UOrdering2 $generated@@38 $generated@@39))
)))
(assert (forall (($generated@@41 T@U) ($generated@@42 T@U) ) (! (let (($generated@@43 (type $generated@@41)))
 (=> (= (type $generated@@42) $generated@@43) (=> (and (UOrdering2 $generated@@41 $generated@@42) (UOrdering2 $generated@@42 $generated@@41)) (= $generated@@41 $generated@@42))))
 :pattern ( (UOrdering2 $generated@@41 $generated@@42) (UOrdering2 $generated@@42 $generated@@41))
)))
(assert  (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (= ($generated@@1 $generated@@64) 6) (= (type $generated@@44) $generated@@64)) (= (type $generated@@45) $generated@@64)) (= (type $generated@@46) $generated@@64)) (= (type $generated@@47) $generated@@64)) (= (type $generated@@48) $generated@@64)) (= ($generated@@1 $generated@@65) 7)) (= (type $generated@@49) $generated@@65)) (= (type $generated@@50) $generated@@65)) (= (type $generated@@51) $generated@@65)) (= (type $generated@@52) $generated@@65)) (= (type $generated@@53) $generated@@65)) (= (type $generated@@54) $generated@@65)) (= (type $generated@@55) $generated@@65)) (= (type $generated@@56) $generated@@65)) (= (type $generated@@57) $generated@@65)) (= (type $generated@@58) $generated@@65)) (= (type $generated@@59) $generated@@65)) (forall (($generated@@70 T@T) ) (= ($generated@@1 ($generated@@66 $generated@@70)) 8))) (forall (($generated@@71 T@T) ) (! (= ($generated@@67 ($generated@@66 $generated@@71)) $generated@@71)
 :pattern ( ($generated@@66 $generated@@71))
))) (= (type $generated@@60) ($generated@@66 $generated@@4))) (= ($generated@@1 $generated@@68) 9)) (= (type $generated@@61) $generated@@68)) (= (type $generated@@62) $generated@@65)) (= ($generated@@1 $generated@@69) 10)) (= (type $generated@@63) $generated@@69)))
(assert (distinct $generated@@44 $generated@@45 $generated@@46 $generated@@47 $generated@@48 $generated@@49 $generated@@50 $generated@@51 $generated@@52 $generated@@53 $generated@@54 $generated@@55 $generated@@56 $generated@@57 $generated@@58 $generated@@59 $generated@@60 $generated@@61 $generated@@62 $generated@@63)
)
(assert (forall (($generated@@73 T@U) ) (! (= (type ($generated@@72 $generated@@73)) $generated@@65)
 :pattern ( ($generated@@72 $generated@@73))
)))
(assert (= ($generated@@72 $generated@@44) $generated@@49))
(assert (= ($generated@@72 $generated@@45) $generated@@50))
(assert (= ($generated@@72 $generated@@46) $generated@@51))
(assert (= ($generated@@72 $generated@@47) $generated@@52))
(assert (= ($generated@@72 $generated@@48) $generated@@53))
(assert  (and (and (and (and (and (and (and (and (and (and (and (and (and (forall (($generated@@85 T@T) ($generated@@86 T@T) ) (= ($generated@@1 ($generated@@76 $generated@@85 $generated@@86)) 11)) (forall (($generated@@87 T@T) ($generated@@88 T@T) ) (! (= ($generated@@79 ($generated@@76 $generated@@87 $generated@@88)) $generated@@87)
 :pattern ( ($generated@@76 $generated@@87 $generated@@88))
))) (forall (($generated@@89 T@T) ($generated@@90 T@T) ) (! (= ($generated@@80 ($generated@@76 $generated@@89 $generated@@90)) $generated@@90)
 :pattern ( ($generated@@76 $generated@@89 $generated@@90))
))) (forall (($generated@@91 T@U) ($generated@@92 T@U) ) (! (let (($generated@@93 ($generated@@80 (type $generated@@91))))
(= (type ($generated@@81 $generated@@91 $generated@@92)) $generated@@93))
 :pattern ( ($generated@@81 $generated@@91 $generated@@92))
))) (forall (($generated@@94 T@U) ($generated@@95 T@U) ($generated@@96 T@U) ) (! (let (($generated@@97 (type $generated@@96)))
(let (($generated@@98 (type $generated@@95)))
(= (type ($generated@@82 $generated@@94 $generated@@95 $generated@@96)) ($generated@@76 $generated@@98 $generated@@97))))
 :pattern ( ($generated@@82 $generated@@94 $generated@@95 $generated@@96))
))) (forall (($generated@@99 T@U) ($generated@@100 T@U) ($generated@@101 T@U) ) (! (let (($generated@@102 ($generated@@80 (type $generated@@99))))
 (=> (= (type $generated@@101) $generated@@102) (= ($generated@@81 ($generated@@82 $generated@@99 $generated@@100 $generated@@101) $generated@@100) $generated@@101)))
 :weight 0
))) (and (forall (($generated@@103 T@U) ($generated@@104 T@U) ($generated@@105 T@U) ($generated@@106 T@U) ) (!  (or (= $generated@@105 $generated@@106) (= ($generated@@81 ($generated@@82 $generated@@104 $generated@@105 $generated@@103) $generated@@106) ($generated@@81 $generated@@104 $generated@@106)))
 :weight 0
)) (forall (($generated@@107 T@U) ($generated@@108 T@U) ($generated@@109 T@U) ($generated@@110 T@U) ) (!  (or true (= ($generated@@81 ($generated@@82 $generated@@108 $generated@@109 $generated@@107) $generated@@110) ($generated@@81 $generated@@108 $generated@@110)))
 :weight 0
)))) (= ($generated@@1 $generated@@77) 12)) (forall (($generated@@111 T@U) ($generated@@112 T@U) ) (! (let (($generated@@113 ($generated@@67 (type $generated@@112))))
(= (type ($generated@@83 $generated@@111 $generated@@112)) $generated@@113))
 :pattern ( ($generated@@83 $generated@@111 $generated@@112))
))) (= ($generated@@1 $generated@@78) 13)) (forall (($generated@@114 T@U) ($generated@@115 T@U) ($generated@@116 T@U) ) (! (= (type ($generated@@84 $generated@@114 $generated@@115 $generated@@116)) $generated@@78)
 :pattern ( ($generated@@84 $generated@@114 $generated@@115 $generated@@116))
))) (forall (($generated@@117 T@U) ($generated@@118 T@U) ($generated@@119 T@U) ) (! (let (($generated@@120 ($generated@@67 (type $generated@@118))))
 (=> (= (type $generated@@119) $generated@@120) (= ($generated@@83 ($generated@@84 $generated@@117 $generated@@118 $generated@@119) $generated@@118) $generated@@119)))
 :weight 0
))) (and (forall (($generated@@121 T@U) ($generated@@122 T@U) ($generated@@123 T@U) ($generated@@124 T@U) ) (!  (or (= $generated@@123 $generated@@124) (= ($generated@@83 ($generated@@84 $generated@@122 $generated@@123 $generated@@121) $generated@@124) ($generated@@83 $generated@@122 $generated@@124)))
 :weight 0
)) (forall (($generated@@125 T@U) ($generated@@126 T@U) ($generated@@127 T@U) ($generated@@128 T@U) ) (!  (or true (= ($generated@@83 ($generated@@84 $generated@@126 $generated@@127 $generated@@125) $generated@@128) ($generated@@83 $generated@@126 $generated@@128)))
 :weight 0
)))) (forall (($generated@@129 Int) ) (! (= (type ($generated@@75 $generated@@129)) $generated@@64)
 :pattern ( ($generated@@75 $generated@@129))
))))
(assert (forall (($generated@@130 T@U) ($generated@@131 T@U) ) (!  (=> (and (= (type $generated@@130) $generated@@2) (= (type $generated@@131) ($generated@@76 $generated@@77 $generated@@78))) ($generated@@74 $generated@@130 ($generated@@75 0) $generated@@131))
 :pattern ( ($generated@@74 $generated@@130 ($generated@@75 0) $generated@@131))
)))
(assert (forall (($generated@@133 T@U) ) (!  (=> (= (type $generated@@133) $generated@@2) ($generated@@132 $generated@@133 ($generated@@75 0)))
 :pattern ( ($generated@@132 $generated@@133 ($generated@@75 0)))
)))
(assert  (and (= ($generated@@1 $generated@@136) 14) (forall (($generated@@137 T@U) ($generated@@138 T@U) ) (! (= (type ($generated@@135 $generated@@137 $generated@@138)) $generated@@64)
 :pattern ( ($generated@@135 $generated@@137 $generated@@138))
))))
(assert (forall (($generated@@139 T@U) ($generated@@140 T@U) ($generated@@141 T@U) ) (!  (=> (and (and (and (= (type $generated@@139) $generated@@64) (= (type $generated@@140) $generated@@64)) (= (type $generated@@141) $generated@@136)) ($generated@@132 $generated@@141 ($generated@@135 $generated@@139 $generated@@140))) ($generated@@134 $generated@@141))
 :pattern ( ($generated@@134 $generated@@141) ($generated@@132 $generated@@141 ($generated@@135 $generated@@139 $generated@@140)))
)))
(assert  (and (and (= ($generated@@1 $generated@@145) 15) (forall (($generated@@146 T@U) ) (! (= (type ($generated@@143 $generated@@146)) $generated@@145)
 :pattern ( ($generated@@143 $generated@@146))
))) (forall (($generated@@147 T@U) ) (! (= (type ($generated@@144 $generated@@147)) $generated@@145)
 :pattern ( ($generated@@144 $generated@@147))
))))
(assert (forall (($generated@@148 T@U) ($generated@@149 T@U) ) (!  (=> (and (and (= (type $generated@@148) $generated@@136) (= (type $generated@@149) $generated@@136)) true) (= ($generated@@142 $generated@@148 $generated@@149)  (and (= ($generated@@143 $generated@@148) ($generated@@143 $generated@@149)) (= ($generated@@144 $generated@@148) ($generated@@144 $generated@@149)))))
 :pattern ( ($generated@@142 $generated@@148 $generated@@149))
)))
(assert (forall (($generated@@152 T@U) ) (! (= (type ($generated@@150 $generated@@152)) $generated@@64)
 :pattern ( ($generated@@150 $generated@@152))
)))
(assert (forall (($generated@@153 T@U) ($generated@@154 T@U) ) (!  (=> (and (and (= (type $generated@@153) ($generated@@76 $generated@@145 $generated@@2)) (= (type $generated@@154) $generated@@64)) ($generated@@132 $generated@@153 ($generated@@150 $generated@@154))) ($generated@@151 $generated@@153))
 :pattern ( ($generated@@132 $generated@@153 ($generated@@150 $generated@@154)))
)))
(assert  (and (and (and (and (and (and (and (forall (($generated@@161 T@T) ($generated@@162 T@T) ) (= ($generated@@1 ($generated@@157 $generated@@161 $generated@@162)) 16)) (forall (($generated@@163 T@T) ($generated@@164 T@T) ) (! (= ($generated@@158 ($generated@@157 $generated@@163 $generated@@164)) $generated@@163)
 :pattern ( ($generated@@157 $generated@@163 $generated@@164))
))) (forall (($generated@@165 T@T) ($generated@@166 T@T) ) (! (= ($generated@@159 ($generated@@157 $generated@@165 $generated@@166)) $generated@@166)
 :pattern ( ($generated@@157 $generated@@165 $generated@@166))
))) (forall (($generated@@167 T@U) ($generated@@168 T@U) ($generated@@169 T@U) ) (! (let (($generated@@170 ($generated@@159 (type $generated@@167))))
(= (type ($generated@@155 $generated@@167 $generated@@168 $generated@@169)) $generated@@170))
 :pattern ( ($generated@@155 $generated@@167 $generated@@168 $generated@@169))
))) (forall (($generated@@171 T@U) ($generated@@172 T@U) ($generated@@173 T@U) ($generated@@174 T@U) ) (! (let (($generated@@175 (type $generated@@174)))
(let (($generated@@176 (type $generated@@172)))
(= (type ($generated@@160 $generated@@171 $generated@@172 $generated@@173 $generated@@174)) ($generated@@157 $generated@@176 $generated@@175))))
 :pattern ( ($generated@@160 $generated@@171 $generated@@172 $generated@@173 $generated@@174))
))) (forall (($generated@@177 T@U) ($generated@@178 T@U) ($generated@@179 T@U) ($generated@@180 T@U) ) (! (let (($generated@@181 ($generated@@159 (type $generated@@177))))
 (=> (= (type $generated@@180) $generated@@181) (= ($generated@@155 ($generated@@160 $generated@@177 $generated@@178 $generated@@179 $generated@@180) $generated@@178 $generated@@179) $generated@@180)))
 :weight 0
))) (and (and (forall (($generated@@182 T@U) ($generated@@183 T@U) ($generated@@184 T@U) ($generated@@185 T@U) ($generated@@186 T@U) ($generated@@187 T@U) ) (!  (or (= $generated@@184 $generated@@186) (= ($generated@@155 ($generated@@160 $generated@@183 $generated@@184 $generated@@185 $generated@@182) $generated@@186 $generated@@187) ($generated@@155 $generated@@183 $generated@@186 $generated@@187)))
 :weight 0
)) (forall (($generated@@188 T@U) ($generated@@189 T@U) ($generated@@190 T@U) ($generated@@191 T@U) ($generated@@192 T@U) ($generated@@193 T@U) ) (!  (or (= $generated@@191 $generated@@193) (= ($generated@@155 ($generated@@160 $generated@@189 $generated@@190 $generated@@191 $generated@@188) $generated@@192 $generated@@193) ($generated@@155 $generated@@189 $generated@@192 $generated@@193)))
 :weight 0
))) (forall (($generated@@194 T@U) ($generated@@195 T@U) ($generated@@196 T@U) ($generated@@197 T@U) ($generated@@198 T@U) ($generated@@199 T@U) ) (!  (or true (= ($generated@@155 ($generated@@160 $generated@@195 $generated@@196 $generated@@197 $generated@@194) $generated@@198 $generated@@199) ($generated@@155 $generated@@195 $generated@@198 $generated@@199)))
 :weight 0
)))) (forall (($generated@@200 T@U) ($generated@@201 T@U) ($generated@@202 T@U) ($generated@@203 Bool) ) (! (= (type ($generated@@156 $generated@@200 $generated@@201 $generated@@202 $generated@@203)) ($generated@@157 $generated@@77 $generated@@4))
 :pattern ( ($generated@@156 $generated@@200 $generated@@201 $generated@@202 $generated@@203))
))))
(assert (forall (($generated@@204 T@U) ($generated@@205 T@U) ($generated@@206 T@U) ($generated@@207 Bool) ($generated@@208 T@U) ($generated@@209 T@U) ) (! (let (($generated@@210 ($generated@@67 (type $generated@@209))))
 (=> (and (and (and (and (= (type $generated@@204) $generated@@77) (= (type $generated@@205) ($generated@@76 $generated@@77 $generated@@78))) (= (type $generated@@206) ($generated@@66 $generated@@4))) (= (type $generated@@208) $generated@@77)) (= (type $generated@@209) ($generated@@66 $generated@@210))) (= ($generated@@0 ($generated@@155 ($generated@@156 $generated@@204 $generated@@205 $generated@@206 $generated@@207) $generated@@208 $generated@@209))  (=> (and (not (= $generated@@208 $generated@@204)) ($generated@@0 ($generated@@83 ($generated@@81 $generated@@205 $generated@@208) $generated@@206))) $generated@@207))))
 :pattern ( ($generated@@155 ($generated@@156 $generated@@204 $generated@@205 $generated@@206 $generated@@207) $generated@@208 $generated@@209))
)))
(assert (forall (($generated@@213 T@U) ($generated@@214 T@U) ) (! (= (type ($generated@@211 $generated@@213 $generated@@214)) $generated@@136)
 :pattern ( ($generated@@211 $generated@@213 $generated@@214))
)))
(assert (forall (($generated@@215 T@U) ($generated@@216 T@U) ($generated@@217 T@U) ($generated@@218 T@U) ) (!  (=> (and (and (and (= (type $generated@@215) $generated@@64) (= (type $generated@@216) $generated@@64)) (= (type $generated@@217) $generated@@145)) (= (type $generated@@218) $generated@@145)) (= ($generated@@132 ($generated@@211 $generated@@217 $generated@@218) ($generated@@135 $generated@@215 $generated@@216))  (and ($generated@@212 $generated@@217 $generated@@215) ($generated@@212 $generated@@218 $generated@@216))))
 :pattern ( ($generated@@132 ($generated@@211 $generated@@217 $generated@@218) ($generated@@135 $generated@@215 $generated@@216)))
)))
(assert (forall (($generated@@219 T@U) ($generated@@220 T@U) ) (!  (=> (and (= (type $generated@@219) $generated@@136) (= (type $generated@@220) $generated@@136)) (= ($generated@@142 $generated@@219 $generated@@220) (= $generated@@219 $generated@@220)))
 :pattern ( ($generated@@142 $generated@@219 $generated@@220))
)))
(assert (forall (($generated@@222 T@U) ) (! (= (type ($generated@@221 $generated@@222)) $generated@@64)
 :pattern ( ($generated@@221 $generated@@222))
)))
(assert (forall (($generated@@223 T@U) ($generated@@224 T@U) ) (!  (=> (and (= (type $generated@@223) ($generated@@76 $generated@@145 $generated@@4)) (= (type $generated@@224) $generated@@64)) (= ($generated@@132 $generated@@223 ($generated@@221 $generated@@224)) (forall (($generated@@225 T@U) ) (!  (=> (and (= (type $generated@@225) $generated@@145) ($generated@@0 ($generated@@81 $generated@@223 $generated@@225))) ($generated@@212 $generated@@225 $generated@@224))
 :pattern ( ($generated@@81 $generated@@223 $generated@@225))
))))
 :pattern ( ($generated@@132 $generated@@223 ($generated@@221 $generated@@224)))
)))
(assert (forall (($generated@@227 T@U) ) (! (= (type ($generated@@226 $generated@@227)) $generated@@64)
 :pattern ( ($generated@@226 $generated@@227))
)))
(assert (forall (($generated@@228 T@U) ($generated@@229 T@U) ) (!  (=> (and (= (type $generated@@228) ($generated@@76 $generated@@145 $generated@@4)) (= (type $generated@@229) $generated@@64)) (= ($generated@@132 $generated@@228 ($generated@@226 $generated@@229)) (forall (($generated@@230 T@U) ) (!  (=> (and (= (type $generated@@230) $generated@@145) ($generated@@0 ($generated@@81 $generated@@228 $generated@@230))) ($generated@@212 $generated@@230 $generated@@229))
 :pattern ( ($generated@@81 $generated@@228 $generated@@230))
))))
 :pattern ( ($generated@@132 $generated@@228 ($generated@@226 $generated@@229)))
)))
(assert (forall (($generated@@232 Int) ) (! (= ($generated@@231 $generated@@232) $generated@@232)
 :pattern ( ($generated@@231 $generated@@232))
)))
(assert (forall (($generated@@234 T@U) ) (! (let (($generated@@235 (type $generated@@234)))
(= (type ($generated@@233 $generated@@234)) $generated@@235))
 :pattern ( ($generated@@233 $generated@@234))
)))
(assert (forall (($generated@@236 T@U) ) (! (= ($generated@@233 $generated@@236) $generated@@236)
 :pattern ( ($generated@@233 $generated@@236))
)))
(assert (forall (($generated@@239 T@U) ($generated@@240 T@U) ($generated@@241 T@U) ($generated@@242 T@U) ($generated@@243 T@U) ) (!  (=> (and (and (and (and (and (= (type $generated@@239) $generated@@64) (= (type $generated@@240) $generated@@64)) (= (type $generated@@241) $generated@@145)) (= (type $generated@@242) $generated@@145)) (= (type $generated@@243) ($generated@@76 $generated@@77 $generated@@78))) ($generated@@237 $generated@@243)) (= ($generated@@74 ($generated@@211 $generated@@241 $generated@@242) ($generated@@135 $generated@@239 $generated@@240) $generated@@243)  (and ($generated@@238 $generated@@241 $generated@@239 $generated@@243) ($generated@@238 $generated@@242 $generated@@240 $generated@@243))))
 :pattern ( ($generated@@74 ($generated@@211 $generated@@241 $generated@@242) ($generated@@135 $generated@@239 $generated@@240) $generated@@243))
)))
(assert (forall (($generated@@245 T@U) ) (! (= (type ($generated@@244 $generated@@245)) $generated@@68)
 :pattern ( ($generated@@244 $generated@@245))
)))
(assert (forall (($generated@@246 T@U) ) (!  (=> (= (type $generated@@246) $generated@@136) (= ($generated@@134 $generated@@246) (= ($generated@@244 $generated@@246) $generated@@61)))
 :pattern ( ($generated@@134 $generated@@246))
)))
(assert (forall (($generated@@247 T@U) ) (!  (=> (and (= (type $generated@@247) $generated@@136) ($generated@@134 $generated@@247)) (exists (($generated@@248 T@U) ($generated@@249 T@U) ) (!  (and (and (= (type $generated@@248) $generated@@145) (= (type $generated@@249) $generated@@145)) (= $generated@@247 ($generated@@211 $generated@@248 $generated@@249)))
 :no-pattern (type $generated@@248)
 :no-pattern (type $generated@@249)
 :no-pattern ($generated $generated@@248)
 :no-pattern ($generated@@0 $generated@@248)
 :no-pattern ($generated $generated@@249)
 :no-pattern ($generated@@0 $generated@@249)
)))
 :pattern ( ($generated@@134 $generated@@247))
)))
(assert  (and (and (forall (($generated@@254 T@T) ) (= ($generated@@1 ($generated@@252 $generated@@254)) 17)) (forall (($generated@@255 T@T) ) (! (= ($generated@@253 ($generated@@252 $generated@@255)) $generated@@255)
 :pattern ( ($generated@@252 $generated@@255))
))) (forall (($generated@@256 T@T) ) (! (= (type ($generated@@250 $generated@@256)) ($generated@@252 $generated@@256))
 :pattern ( ($generated@@250 $generated@@256))
))))
(assert (forall (($generated@@257 T@T) ) (! (= ($generated@@251 ($generated@@250 $generated@@257)) 0)
 :pattern ( ($generated@@250 $generated@@257))
)))
(assert (forall (($generated@@259 T@U) ) (! (= (type ($generated@@258 $generated@@259)) $generated@@145)
 :pattern ( ($generated@@258 $generated@@259))
)))
(assert (forall (($generated@@260 T@U) ($generated@@261 T@U) ($generated@@262 T@U) ) (!  (=> (and (= (type $generated@@261) $generated@@64) (= (type $generated@@262) ($generated@@76 $generated@@77 $generated@@78))) (= ($generated@@238 ($generated@@258 $generated@@260) $generated@@261 $generated@@262) ($generated@@74 $generated@@260 $generated@@261 $generated@@262)))
 :pattern ( ($generated@@238 ($generated@@258 $generated@@260) $generated@@261 $generated@@262))
)))
(assert (forall (($generated@@265 T@T) ) (! (= (type ($generated@@264 $generated@@265)) ($generated@@76 $generated@@265 $generated@@2))
 :pattern ( ($generated@@264 $generated@@265))
)))
(assert (forall (($generated@@266 T@U) ) (! (let (($generated@@267 ($generated@@79 (type $generated@@266))))
 (=> (= (type $generated@@266) ($generated@@76 $generated@@267 $generated@@2)) (and (= (= ($generated@@263 $generated@@266) 0) (= $generated@@266 ($generated@@264 $generated@@267))) (=> (not (= ($generated@@263 $generated@@266) 0)) (exists (($generated@@268 T@U) ) (!  (and (= (type $generated@@268) $generated@@267) (< 0 ($generated ($generated@@81 $generated@@266 $generated@@268))))
 :no-pattern (type $generated@@268)
 :no-pattern ($generated $generated@@268)
 :no-pattern ($generated@@0 $generated@@268)
))))))
 :pattern ( ($generated@@263 $generated@@266))
)))
(assert  (and (and (and (and (forall (($generated@@274 T@T) ($generated@@275 T@T) ) (= ($generated@@1 ($generated@@271 $generated@@274 $generated@@275)) 18)) (forall (($generated@@276 T@T) ($generated@@277 T@T) ) (! (= ($generated@@272 ($generated@@271 $generated@@276 $generated@@277)) $generated@@276)
 :pattern ( ($generated@@271 $generated@@276 $generated@@277))
))) (forall (($generated@@278 T@T) ($generated@@279 T@T) ) (! (= ($generated@@273 ($generated@@271 $generated@@278 $generated@@279)) $generated@@279)
 :pattern ( ($generated@@271 $generated@@278 $generated@@279))
))) (forall (($generated@@280 T@U) ) (! (let (($generated@@281 ($generated@@272 (type $generated@@280))))
(= (type ($generated@@269 $generated@@280)) ($generated@@76 $generated@@281 $generated@@4)))
 :pattern ( ($generated@@269 $generated@@280))
))) (forall (($generated@@282 T@T) ($generated@@283 T@T) ) (! (= (type ($generated@@270 $generated@@282 $generated@@283)) ($generated@@271 $generated@@282 $generated@@283))
 :pattern ( ($generated@@270 $generated@@282 $generated@@283))
))))
(assert (forall (($generated@@284 T@U) ($generated@@285 T@T) ) (! (let (($generated@@286 (type $generated@@284)))
 (not ($generated@@0 ($generated@@81 ($generated@@269 ($generated@@270 $generated@@286 $generated@@285)) $generated@@284))))
 :pattern ( (let (($generated@@286 (type $generated@@284)))
($generated@@81 ($generated@@269 ($generated@@270 $generated@@286 $generated@@285)) $generated@@284)))
)))
(assert  (and (and (and (and (forall (($generated@@292 T@T) ($generated@@293 T@T) ) (= ($generated@@1 ($generated@@289 $generated@@292 $generated@@293)) 19)) (forall (($generated@@294 T@T) ($generated@@295 T@T) ) (! (= ($generated@@290 ($generated@@289 $generated@@294 $generated@@295)) $generated@@294)
 :pattern ( ($generated@@289 $generated@@294 $generated@@295))
))) (forall (($generated@@296 T@T) ($generated@@297 T@T) ) (! (= ($generated@@291 ($generated@@289 $generated@@296 $generated@@297)) $generated@@297)
 :pattern ( ($generated@@289 $generated@@296 $generated@@297))
))) (forall (($generated@@298 T@U) ) (! (let (($generated@@299 ($generated@@290 (type $generated@@298))))
(= (type ($generated@@287 $generated@@298)) ($generated@@76 $generated@@299 $generated@@4)))
 :pattern ( ($generated@@287 $generated@@298))
))) (forall (($generated@@300 T@T) ($generated@@301 T@T) ) (! (= (type ($generated@@288 $generated@@300 $generated@@301)) ($generated@@289 $generated@@300 $generated@@301))
 :pattern ( ($generated@@288 $generated@@300 $generated@@301))
))))
(assert (forall (($generated@@302 T@U) ($generated@@303 T@T) ) (! (let (($generated@@304 (type $generated@@302)))
 (not ($generated@@0 ($generated@@81 ($generated@@287 ($generated@@288 $generated@@304 $generated@@303)) $generated@@302))))
 :pattern ( (let (($generated@@304 (type $generated@@302)))
($generated@@81 ($generated@@287 ($generated@@288 $generated@@304 $generated@@303)) $generated@@302)))
)))
(assert (forall (($generated@@305 T@U) ) (! (let (($generated@@306 ($generated@@79 (type $generated@@305))))
 (=> (= (type $generated@@305) ($generated@@76 $generated@@306 $generated@@2)) (= ($generated@@151 $generated@@305) (forall (($generated@@307 T@U) ) (!  (=> (= (type $generated@@307) $generated@@306) (and (<= 0 ($generated ($generated@@81 $generated@@305 $generated@@307))) (<= ($generated ($generated@@81 $generated@@305 $generated@@307)) ($generated@@263 $generated@@305))))
 :pattern ( ($generated@@81 $generated@@305 $generated@@307))
)))))
 :pattern ( ($generated@@151 $generated@@305))
)))
(assert (forall (($generated@@308 T@U) ) (! (let (($generated@@309 ($generated@@273 (type $generated@@308))))
(let (($generated@@310 ($generated@@272 (type $generated@@308))))
 (=> (= (type $generated@@308) ($generated@@271 $generated@@310 $generated@@309)) (or (= $generated@@308 ($generated@@270 $generated@@310 $generated@@309)) (exists (($generated@@311 T@U) ) (!  (and (= (type $generated@@311) $generated@@310) ($generated@@0 ($generated@@81 ($generated@@269 $generated@@308) $generated@@311)))
 :no-pattern (type $generated@@311)
 :no-pattern ($generated $generated@@311)
 :no-pattern ($generated@@0 $generated@@311)
))))))
 :pattern ( ($generated@@269 $generated@@308))
)))
(assert (forall (($generated@@313 T@U) ) (! (let (($generated@@314 ($generated@@273 (type $generated@@313))))
(= (type ($generated@@312 $generated@@313)) ($generated@@76 $generated@@314 $generated@@4)))
 :pattern ( ($generated@@312 $generated@@313))
)))
(assert (forall (($generated@@315 T@U) ) (! (let (($generated@@316 ($generated@@273 (type $generated@@315))))
(let (($generated@@317 ($generated@@272 (type $generated@@315))))
 (=> (= (type $generated@@315) ($generated@@271 $generated@@317 $generated@@316)) (or (= $generated@@315 ($generated@@270 $generated@@317 $generated@@316)) (exists (($generated@@318 T@U) ) (!  (and (= (type $generated@@318) $generated@@316) ($generated@@0 ($generated@@81 ($generated@@312 $generated@@315) $generated@@318)))
 :no-pattern (type $generated@@318)
 :no-pattern ($generated $generated@@318)
 :no-pattern ($generated@@0 $generated@@318)
))))))
 :pattern ( ($generated@@312 $generated@@315))
)))
(assert (forall (($generated@@319 T@U) ) (! (let (($generated@@320 ($generated@@291 (type $generated@@319))))
(let (($generated@@321 ($generated@@290 (type $generated@@319))))
 (=> (= (type $generated@@319) ($generated@@289 $generated@@321 $generated@@320)) (or (= $generated@@319 ($generated@@288 $generated@@321 $generated@@320)) (exists (($generated@@322 T@U) ) (!  (and (= (type $generated@@322) $generated@@321) ($generated@@0 ($generated@@81 ($generated@@287 $generated@@319) $generated@@322)))
 :no-pattern (type $generated@@322)
 :no-pattern ($generated $generated@@322)
 :no-pattern ($generated@@0 $generated@@322)
))))))
 :pattern ( ($generated@@287 $generated@@319))
)))
(assert (forall (($generated@@324 T@U) ) (! (let (($generated@@325 ($generated@@291 (type $generated@@324))))
(= (type ($generated@@323 $generated@@324)) ($generated@@76 $generated@@325 $generated@@4)))
 :pattern ( ($generated@@323 $generated@@324))
)))
(assert (forall (($generated@@326 T@U) ) (! (let (($generated@@327 ($generated@@291 (type $generated@@326))))
(let (($generated@@328 ($generated@@290 (type $generated@@326))))
 (=> (= (type $generated@@326) ($generated@@289 $generated@@328 $generated@@327)) (or (= $generated@@326 ($generated@@288 $generated@@328 $generated@@327)) (exists (($generated@@329 T@U) ) (!  (and (= (type $generated@@329) $generated@@327) ($generated@@0 ($generated@@81 ($generated@@323 $generated@@326) $generated@@329)))
 :no-pattern (type $generated@@329)
 :no-pattern ($generated $generated@@329)
 :no-pattern ($generated@@0 $generated@@329)
))))))
 :pattern ( ($generated@@323 $generated@@326))
)))
(assert (forall (($generated@@330 T@U) ($generated@@331 T@U) ) (!  (=> (and (= (type $generated@@330) ($generated@@76 $generated@@145 $generated@@2)) (= (type $generated@@331) $generated@@64)) (= ($generated@@132 $generated@@330 ($generated@@150 $generated@@331)) (forall (($generated@@332 T@U) ) (!  (=> (and (= (type $generated@@332) $generated@@145) (< 0 ($generated ($generated@@81 $generated@@330 $generated@@332)))) ($generated@@212 $generated@@332 $generated@@331))
 :pattern ( ($generated@@81 $generated@@330 $generated@@332))
))))
 :pattern ( ($generated@@132 $generated@@330 ($generated@@150 $generated@@331)))
)))
(assert (forall (($generated@@333 T@U) ($generated@@334 T@U) ($generated@@335 T@U) ) (!  (=> (and (and (= (type $generated@@333) ($generated@@76 $generated@@145 $generated@@4)) (= (type $generated@@334) $generated@@64)) (= (type $generated@@335) ($generated@@76 $generated@@77 $generated@@78))) (= ($generated@@74 $generated@@333 ($generated@@221 $generated@@334) $generated@@335) (forall (($generated@@336 T@U) ) (!  (=> (and (= (type $generated@@336) $generated@@145) ($generated@@0 ($generated@@81 $generated@@333 $generated@@336))) ($generated@@238 $generated@@336 $generated@@334 $generated@@335))
 :pattern ( ($generated@@81 $generated@@333 $generated@@336))
))))
 :pattern ( ($generated@@74 $generated@@333 ($generated@@221 $generated@@334) $generated@@335))
)))
(assert (forall (($generated@@337 T@U) ($generated@@338 T@U) ($generated@@339 T@U) ) (!  (=> (and (and (= (type $generated@@337) ($generated@@76 $generated@@145 $generated@@4)) (= (type $generated@@338) $generated@@64)) (= (type $generated@@339) ($generated@@76 $generated@@77 $generated@@78))) (= ($generated@@74 $generated@@337 ($generated@@226 $generated@@338) $generated@@339) (forall (($generated@@340 T@U) ) (!  (=> (and (= (type $generated@@340) $generated@@145) ($generated@@0 ($generated@@81 $generated@@337 $generated@@340))) ($generated@@238 $generated@@340 $generated@@338 $generated@@339))
 :pattern ( ($generated@@81 $generated@@337 $generated@@340))
))))
 :pattern ( ($generated@@74 $generated@@337 ($generated@@226 $generated@@338) $generated@@339))
)))
(assert (forall (($generated@@341 T@U) ) (! (let (($generated@@342 (type $generated@@341)))
(= ($generated ($generated@@81 ($generated@@264 $generated@@342) $generated@@341)) 0))
 :pattern ( (let (($generated@@342 (type $generated@@341)))
($generated@@81 ($generated@@264 $generated@@342) $generated@@341)))
)))
(assert  (and (and (forall (($generated@@346 T@U) ) (! (= (type ($generated@@343 $generated@@346)) ($generated@@76 $generated@@145 $generated@@4))
 :pattern ( ($generated@@343 $generated@@346))
)) (forall (($generated@@347 T@T) ($generated@@348 T@U) ) (! (= (type ($generated@@344 $generated@@347 $generated@@348)) $generated@@347)
 :pattern ( ($generated@@344 $generated@@347 $generated@@348))
))) (forall (($generated@@349 T@U) ) (! (let (($generated@@350 ($generated@@273 (type $generated@@349))))
(let (($generated@@351 ($generated@@272 (type $generated@@349))))
(= (type ($generated@@345 $generated@@349)) ($generated@@76 $generated@@351 $generated@@350))))
 :pattern ( ($generated@@345 $generated@@349))
))))
(assert (forall (($generated@@352 T@U) ($generated@@353 T@U) ) (!  (=> (and (= (type $generated@@352) ($generated@@271 $generated@@145 $generated@@145)) (= (type $generated@@353) $generated@@145)) (= ($generated@@0 ($generated@@81 ($generated@@343 $generated@@352) $generated@@353))  (and ($generated@@0 ($generated@@81 ($generated@@269 $generated@@352) ($generated@@143 ($generated@@344 $generated@@136 $generated@@353)))) (= ($generated@@81 ($generated@@345 $generated@@352) ($generated@@143 ($generated@@344 $generated@@136 $generated@@353))) ($generated@@144 ($generated@@344 $generated@@136 $generated@@353))))))
 :pattern ( ($generated@@81 ($generated@@343 $generated@@352) $generated@@353))
)))
(assert  (and (forall (($generated@@356 T@U) ) (! (= (type ($generated@@354 $generated@@356)) ($generated@@76 $generated@@145 $generated@@4))
 :pattern ( ($generated@@354 $generated@@356))
)) (forall (($generated@@357 T@U) ) (! (let (($generated@@358 ($generated@@291 (type $generated@@357))))
(let (($generated@@359 ($generated@@290 (type $generated@@357))))
(= (type ($generated@@355 $generated@@357)) ($generated@@76 $generated@@359 $generated@@358))))
 :pattern ( ($generated@@355 $generated@@357))
))))
(assert (forall (($generated@@360 T@U) ($generated@@361 T@U) ) (!  (=> (and (= (type $generated@@360) ($generated@@289 $generated@@145 $generated@@145)) (= (type $generated@@361) $generated@@145)) (= ($generated@@0 ($generated@@81 ($generated@@354 $generated@@360) $generated@@361))  (and ($generated@@0 ($generated@@81 ($generated@@287 $generated@@360) ($generated@@143 ($generated@@344 $generated@@136 $generated@@361)))) (= ($generated@@81 ($generated@@355 $generated@@360) ($generated@@143 ($generated@@344 $generated@@136 $generated@@361))) ($generated@@144 ($generated@@344 $generated@@136 $generated@@361))))))
 :pattern ( ($generated@@81 ($generated@@354 $generated@@360) $generated@@361))
)))
(assert (forall (($generated@@362 T@U) ($generated@@363 T@U) ) (! (let (($generated@@364 (type $generated@@363)))
(let (($generated@@365 ($generated@@272 (type $generated@@362))))
 (=> (= (type $generated@@362) ($generated@@271 $generated@@365 $generated@@364)) (= ($generated@@0 ($generated@@81 ($generated@@312 $generated@@362) $generated@@363)) (exists (($generated@@366 T@U) ) (!  (and (= (type $generated@@366) $generated@@365) (and ($generated@@0 ($generated@@81 ($generated@@269 $generated@@362) $generated@@366)) (= $generated@@363 ($generated@@81 ($generated@@345 $generated@@362) $generated@@366))))
 :pattern ( ($generated@@81 ($generated@@269 $generated@@362) $generated@@366))
 :pattern ( ($generated@@81 ($generated@@345 $generated@@362) $generated@@366))
))))))
 :pattern ( ($generated@@81 ($generated@@312 $generated@@362) $generated@@363))
)))
(assert (forall (($generated@@367 T@U) ($generated@@368 T@U) ) (! (let (($generated@@369 (type $generated@@368)))
(let (($generated@@370 ($generated@@290 (type $generated@@367))))
 (=> (= (type $generated@@367) ($generated@@289 $generated@@370 $generated@@369)) (= ($generated@@0 ($generated@@81 ($generated@@323 $generated@@367) $generated@@368)) (exists (($generated@@371 T@U) ) (!  (and (= (type $generated@@371) $generated@@370) (and ($generated@@0 ($generated@@81 ($generated@@287 $generated@@367) $generated@@371)) (= $generated@@368 ($generated@@81 ($generated@@355 $generated@@367) $generated@@371))))
 :pattern ( ($generated@@81 ($generated@@287 $generated@@367) $generated@@371))
 :pattern ( ($generated@@81 ($generated@@355 $generated@@367) $generated@@371))
))))))
 :pattern ( ($generated@@81 ($generated@@323 $generated@@367) $generated@@368))
)))
(assert (forall (($generated@@373 T@U) ($generated@@374 T@U) ) (! (= (type ($generated@@372 $generated@@373 $generated@@374)) $generated@@64)
 :pattern ( ($generated@@372 $generated@@373 $generated@@374))
)))
(assert (forall (($generated@@375 T@U) ($generated@@376 T@U) ($generated@@377 T@U) ($generated@@378 T@U) ) (!  (=> (and (and (and (= (type $generated@@375) ($generated@@271 $generated@@145 $generated@@145)) (= (type $generated@@376) $generated@@64)) (= (type $generated@@377) $generated@@64)) (= (type $generated@@378) ($generated@@76 $generated@@77 $generated@@78))) (= ($generated@@74 $generated@@375 ($generated@@372 $generated@@376 $generated@@377) $generated@@378) (forall (($generated@@379 T@U) ) (!  (=> (and (= (type $generated@@379) $generated@@145) ($generated@@0 ($generated@@81 ($generated@@269 $generated@@375) $generated@@379))) (and ($generated@@238 ($generated@@81 ($generated@@345 $generated@@375) $generated@@379) $generated@@377 $generated@@378) ($generated@@238 $generated@@379 $generated@@376 $generated@@378)))
 :pattern ( ($generated@@81 ($generated@@345 $generated@@375) $generated@@379))
 :pattern ( ($generated@@81 ($generated@@269 $generated@@375) $generated@@379))
))))
 :pattern ( ($generated@@74 $generated@@375 ($generated@@372 $generated@@376 $generated@@377) $generated@@378))
)))
(assert (forall (($generated@@381 T@U) ($generated@@382 T@U) ) (! (= (type ($generated@@380 $generated@@381 $generated@@382)) $generated@@64)
 :pattern ( ($generated@@380 $generated@@381 $generated@@382))
)))
(assert (forall (($generated@@383 T@U) ($generated@@384 T@U) ($generated@@385 T@U) ($generated@@386 T@U) ) (!  (=> (and (and (and (= (type $generated@@383) ($generated@@289 $generated@@145 $generated@@145)) (= (type $generated@@384) $generated@@64)) (= (type $generated@@385) $generated@@64)) (= (type $generated@@386) ($generated@@76 $generated@@77 $generated@@78))) (= ($generated@@74 $generated@@383 ($generated@@380 $generated@@384 $generated@@385) $generated@@386) (forall (($generated@@387 T@U) ) (!  (=> (and (= (type $generated@@387) $generated@@145) ($generated@@0 ($generated@@81 ($generated@@287 $generated@@383) $generated@@387))) (and ($generated@@238 ($generated@@81 ($generated@@355 $generated@@383) $generated@@387) $generated@@385 $generated@@386) ($generated@@238 $generated@@387 $generated@@384 $generated@@386)))
 :pattern ( ($generated@@81 ($generated@@355 $generated@@383) $generated@@387))
 :pattern ( ($generated@@81 ($generated@@287 $generated@@383) $generated@@387))
))))
 :pattern ( ($generated@@74 $generated@@383 ($generated@@380 $generated@@384 $generated@@385) $generated@@386))
)))
(assert (forall (($generated@@389 T@T) ) (! (= (type ($generated@@388 $generated@@389)) ($generated@@76 $generated@@389 $generated@@4))
 :pattern ( ($generated@@388 $generated@@389))
)))
(assert (forall (($generated@@390 T@U) ) (! (let (($generated@@391 ($generated@@291 (type $generated@@390))))
(let (($generated@@392 ($generated@@290 (type $generated@@390))))
 (=> (= (type $generated@@390) ($generated@@289 $generated@@392 $generated@@391)) (= (= $generated@@390 ($generated@@288 $generated@@392 $generated@@391)) (= ($generated@@287 $generated@@390) ($generated@@388 $generated@@392))))))
 :pattern ( ($generated@@287 $generated@@390))
)))
(assert (forall (($generated@@393 T@U) ) (! (let (($generated@@394 ($generated@@291 (type $generated@@393))))
(let (($generated@@395 ($generated@@290 (type $generated@@393))))
 (=> (= (type $generated@@393) ($generated@@289 $generated@@395 $generated@@394)) (= (= $generated@@393 ($generated@@288 $generated@@395 $generated@@394)) (= ($generated@@323 $generated@@393) ($generated@@388 $generated@@394))))))
 :pattern ( ($generated@@323 $generated@@393))
)))
(assert (forall (($generated@@396 T@U) ) (! (let (($generated@@397 ($generated@@291 (type $generated@@396))))
(let (($generated@@398 ($generated@@290 (type $generated@@396))))
 (=> (= (type $generated@@396) ($generated@@289 $generated@@398 $generated@@397)) (= (= $generated@@396 ($generated@@288 $generated@@398 $generated@@397)) (= ($generated@@354 $generated@@396) ($generated@@388 $generated@@145))))))
 :pattern ( ($generated@@354 $generated@@396))
)))
(assert (forall (($generated@@399 T@U) ) (! (let (($generated@@400 ($generated@@273 (type $generated@@399))))
(let (($generated@@401 ($generated@@272 (type $generated@@399))))
 (=> (= (type $generated@@399) ($generated@@271 $generated@@401 $generated@@400)) (or (= $generated@@399 ($generated@@270 $generated@@401 $generated@@400)) (exists (($generated@@402 T@U) ($generated@@403 T@U) ) (!  (and (and (= (type $generated@@402) $generated@@145) (= (type $generated@@403) $generated@@145)) ($generated@@0 ($generated@@81 ($generated@@343 $generated@@399) ($generated@@258 ($generated@@211 $generated@@402 $generated@@403)))))
 :no-pattern (type $generated@@402)
 :no-pattern (type $generated@@403)
 :no-pattern ($generated $generated@@402)
 :no-pattern ($generated@@0 $generated@@402)
 :no-pattern ($generated $generated@@403)
 :no-pattern ($generated@@0 $generated@@403)
))))))
 :pattern ( ($generated@@343 $generated@@399))
)))
(assert (forall (($generated@@404 T@U) ) (! (let (($generated@@405 ($generated@@291 (type $generated@@404))))
(let (($generated@@406 ($generated@@290 (type $generated@@404))))
 (=> (= (type $generated@@404) ($generated@@289 $generated@@406 $generated@@405)) (or (= $generated@@404 ($generated@@288 $generated@@406 $generated@@405)) (exists (($generated@@407 T@U) ($generated@@408 T@U) ) (!  (and (and (= (type $generated@@407) $generated@@145) (= (type $generated@@408) $generated@@145)) ($generated@@0 ($generated@@81 ($generated@@354 $generated@@404) ($generated@@258 ($generated@@211 $generated@@407 $generated@@408)))))
 :no-pattern (type $generated@@407)
 :no-pattern (type $generated@@408)
 :no-pattern ($generated $generated@@407)
 :no-pattern ($generated@@0 $generated@@407)
 :no-pattern ($generated $generated@@408)
 :no-pattern ($generated@@0 $generated@@408)
))))))
 :pattern ( ($generated@@354 $generated@@404))
)))
(assert (forall (($generated@@409 T@U) ) (!  (=> (and (= (type $generated@@409) $generated@@145) ($generated@@212 $generated@@409 $generated@@46)) (and (= ($generated@@258 ($generated@@344 $generated@@2 $generated@@409)) $generated@@409) ($generated@@132 ($generated@@344 $generated@@2 $generated@@409) $generated@@46)))
 :pattern ( ($generated@@212 $generated@@409 $generated@@46))
)))
(assert (forall (($generated@@410 T@U) ) (!  (=> (and (= (type $generated@@410) $generated@@145) ($generated@@212 $generated@@410 $generated@@47)) (and (= ($generated@@258 ($generated@@344 $generated@@3 $generated@@410)) $generated@@410) ($generated@@132 ($generated@@344 $generated@@3 $generated@@410) $generated@@47)))
 :pattern ( ($generated@@212 $generated@@410 $generated@@47))
)))
(assert (forall (($generated@@411 T@U) ) (!  (=> (and (= (type $generated@@411) $generated@@145) ($generated@@212 $generated@@411 $generated@@44)) (and (= ($generated@@258 ($generated@@344 $generated@@4 $generated@@411)) $generated@@411) ($generated@@132 ($generated@@344 $generated@@4 $generated@@411) $generated@@44)))
 :pattern ( ($generated@@212 $generated@@411 $generated@@44))
)))
(assert (= ($generated@@1 $generated@@412) 20))
(assert (forall (($generated@@413 T@U) ) (!  (=> (and (= (type $generated@@413) $generated@@145) ($generated@@212 $generated@@413 $generated@@45)) (and (= ($generated@@258 ($generated@@344 $generated@@412 $generated@@413)) $generated@@413) ($generated@@132 ($generated@@344 $generated@@412 $generated@@413) $generated@@45)))
 :pattern ( ($generated@@212 $generated@@413 $generated@@45))
)))
(assert (forall (($generated@@414 T@U) ($generated@@415 T@U) ) (!  (=> (= (type $generated@@415) $generated@@64) (= ($generated@@212 ($generated@@258 $generated@@414) $generated@@415) ($generated@@132 $generated@@414 $generated@@415)))
 :pattern ( ($generated@@212 ($generated@@258 $generated@@414) $generated@@415))
)))
(assert (forall (($generated@@416 T@U) ) (! (let (($generated@@417 ($generated@@79 (type $generated@@416))))
 (=> (= (type $generated@@416) ($generated@@76 $generated@@417 $generated@@2)) (<= 0 ($generated@@263 $generated@@416))))
 :pattern ( ($generated@@263 $generated@@416))
)))
(assert (forall (($generated@@418 T@U) ) (! (let (($generated@@419 ($generated@@253 (type $generated@@418))))
 (=> (= (type $generated@@418) ($generated@@252 $generated@@419)) (<= 0 ($generated@@251 $generated@@418))))
 :pattern ( ($generated@@251 $generated@@418))
)))
(assert (forall (($generated@@421 T@U) ) (! (= (type ($generated@@420 $generated@@421)) $generated@@64)
 :pattern ( ($generated@@420 $generated@@421))
)))
(assert (forall (($generated@@422 T@U) ($generated@@423 T@U) ) (!  (=> (and (= (type $generated@@422) $generated@@64) (= (type $generated@@423) $generated@@64)) (= ($generated@@420 ($generated@@372 $generated@@422 $generated@@423)) $generated@@422))
 :pattern ( ($generated@@372 $generated@@422 $generated@@423))
)))
(assert (forall (($generated@@425 T@U) ) (! (= (type ($generated@@424 $generated@@425)) $generated@@64)
 :pattern ( ($generated@@424 $generated@@425))
)))
(assert (forall (($generated@@426 T@U) ($generated@@427 T@U) ) (!  (=> (and (= (type $generated@@426) $generated@@64) (= (type $generated@@427) $generated@@64)) (= ($generated@@424 ($generated@@372 $generated@@426 $generated@@427)) $generated@@427))
 :pattern ( ($generated@@372 $generated@@426 $generated@@427))
)))
(assert (forall (($generated@@428 T@U) ($generated@@429 T@U) ) (!  (=> (and (= (type $generated@@428) $generated@@64) (= (type $generated@@429) $generated@@64)) (= ($generated@@72 ($generated@@372 $generated@@428 $generated@@429)) $generated@@58))
 :pattern ( ($generated@@372 $generated@@428 $generated@@429))
)))
(assert (forall (($generated@@431 T@U) ) (! (= (type ($generated@@430 $generated@@431)) $generated@@64)
 :pattern ( ($generated@@430 $generated@@431))
)))
(assert (forall (($generated@@432 T@U) ($generated@@433 T@U) ) (!  (=> (and (= (type $generated@@432) $generated@@64) (= (type $generated@@433) $generated@@64)) (= ($generated@@430 ($generated@@380 $generated@@432 $generated@@433)) $generated@@432))
 :pattern ( ($generated@@380 $generated@@432 $generated@@433))
)))
(assert (forall (($generated@@435 T@U) ) (! (= (type ($generated@@434 $generated@@435)) $generated@@64)
 :pattern ( ($generated@@434 $generated@@435))
)))
(assert (forall (($generated@@436 T@U) ($generated@@437 T@U) ) (!  (=> (and (= (type $generated@@436) $generated@@64) (= (type $generated@@437) $generated@@64)) (= ($generated@@434 ($generated@@380 $generated@@436 $generated@@437)) $generated@@437))
 :pattern ( ($generated@@380 $generated@@436 $generated@@437))
)))
(assert (forall (($generated@@438 T@U) ($generated@@439 T@U) ) (!  (=> (and (= (type $generated@@438) $generated@@64) (= (type $generated@@439) $generated@@64)) (= ($generated@@72 ($generated@@380 $generated@@438 $generated@@439)) $generated@@59))
 :pattern ( ($generated@@380 $generated@@438 $generated@@439))
)))
(assert (forall (($generated@@440 T@U) ($generated@@441 T@U) ) (!  (=> (and (= (type $generated@@440) $generated@@145) (= (type $generated@@441) $generated@@145)) (= ($generated@@244 ($generated@@211 $generated@@440 $generated@@441)) $generated@@61))
 :pattern ( ($generated@@211 $generated@@440 $generated@@441))
)))
(assert (forall (($generated@@443 T@U) ) (! (= (type ($generated@@442 $generated@@443)) $generated@@64)
 :pattern ( ($generated@@442 $generated@@443))
)))
(assert (forall (($generated@@444 T@U) ($generated@@445 T@U) ) (!  (=> (and (= (type $generated@@444) $generated@@64) (= (type $generated@@445) $generated@@64)) (= ($generated@@442 ($generated@@135 $generated@@444 $generated@@445)) $generated@@444))
 :pattern ( ($generated@@135 $generated@@444 $generated@@445))
)))
(assert (forall (($generated@@447 T@U) ) (! (= (type ($generated@@446 $generated@@447)) $generated@@64)
 :pattern ( ($generated@@446 $generated@@447))
)))
(assert (forall (($generated@@448 T@U) ($generated@@449 T@U) ) (!  (=> (and (= (type $generated@@448) $generated@@64) (= (type $generated@@449) $generated@@64)) (= ($generated@@446 ($generated@@135 $generated@@448 $generated@@449)) $generated@@449))
 :pattern ( ($generated@@135 $generated@@448 $generated@@449))
)))
(assert (forall (($generated@@450 T@U) ($generated@@451 T@U) ) (!  (=> (and (= (type $generated@@450) $generated@@145) (= (type $generated@@451) $generated@@145)) (= ($generated@@143 ($generated@@211 $generated@@450 $generated@@451)) $generated@@450))
 :pattern ( ($generated@@211 $generated@@450 $generated@@451))
)))
(assert (forall (($generated@@452 T@U) ($generated@@453 T@U) ) (!  (=> (and (= (type $generated@@452) $generated@@145) (= (type $generated@@453) $generated@@145)) (= ($generated@@144 ($generated@@211 $generated@@452 $generated@@453)) $generated@@453))
 :pattern ( ($generated@@211 $generated@@452 $generated@@453))
)))
(assert  (and (forall (($generated@@456 T@U) ) (! (= (type ($generated@@454 $generated@@456)) $generated@@64)
 :pattern ( ($generated@@454 $generated@@456))
)) (forall (($generated@@457 T@U) ($generated@@458 Int) ) (! (let (($generated@@459 ($generated@@253 (type $generated@@457))))
(= (type ($generated@@455 $generated@@457 $generated@@458)) $generated@@459))
 :pattern ( ($generated@@455 $generated@@457 $generated@@458))
))))
(assert (forall (($generated@@460 T@U) ($generated@@461 T@U) ($generated@@462 T@U) ) (!  (=> (and (and (= (type $generated@@460) ($generated@@252 $generated@@145)) (= (type $generated@@461) $generated@@64)) (= (type $generated@@462) ($generated@@76 $generated@@77 $generated@@78))) (= ($generated@@74 $generated@@460 ($generated@@454 $generated@@461) $generated@@462) (forall (($generated@@463 Int) ) (!  (=> (and (<= 0 $generated@@463) (< $generated@@463 ($generated@@251 $generated@@460))) ($generated@@238 ($generated@@455 $generated@@460 $generated@@463) $generated@@461 $generated@@462))
 :pattern ( ($generated@@455 $generated@@460 $generated@@463))
))))
 :pattern ( ($generated@@74 $generated@@460 ($generated@@454 $generated@@461) $generated@@462))
)))
(assert (forall (($generated@@465 Int) ) (! (= ($generated@@464 ($generated@@75 $generated@@465)) $generated@@465)
 :pattern ( ($generated@@75 $generated@@465))
)))
(assert (forall (($generated@@467 T@U) ) (! (= (type ($generated@@466 $generated@@467)) $generated@@64)
 :pattern ( ($generated@@466 $generated@@467))
)))
(assert (forall (($generated@@468 T@U) ) (!  (=> (= (type $generated@@468) $generated@@64) (= ($generated@@466 ($generated@@221 $generated@@468)) $generated@@468))
 :pattern ( ($generated@@221 $generated@@468))
)))
(assert (forall (($generated@@469 T@U) ) (!  (=> (= (type $generated@@469) $generated@@64) (= ($generated@@72 ($generated@@221 $generated@@469)) $generated@@54))
 :pattern ( ($generated@@221 $generated@@469))
)))
(assert (forall (($generated@@471 T@U) ) (! (= (type ($generated@@470 $generated@@471)) $generated@@64)
 :pattern ( ($generated@@470 $generated@@471))
)))
(assert (forall (($generated@@472 T@U) ) (!  (=> (= (type $generated@@472) $generated@@64) (= ($generated@@470 ($generated@@226 $generated@@472)) $generated@@472))
 :pattern ( ($generated@@226 $generated@@472))
)))
(assert (forall (($generated@@473 T@U) ) (!  (=> (= (type $generated@@473) $generated@@64) (= ($generated@@72 ($generated@@226 $generated@@473)) $generated@@55))
 :pattern ( ($generated@@226 $generated@@473))
)))
(assert (forall (($generated@@475 T@U) ) (! (= (type ($generated@@474 $generated@@475)) $generated@@64)
 :pattern ( ($generated@@474 $generated@@475))
)))
(assert (forall (($generated@@476 T@U) ) (!  (=> (= (type $generated@@476) $generated@@64) (= ($generated@@474 ($generated@@150 $generated@@476)) $generated@@476))
 :pattern ( ($generated@@150 $generated@@476))
)))
(assert (forall (($generated@@477 T@U) ) (!  (=> (= (type $generated@@477) $generated@@64) (= ($generated@@72 ($generated@@150 $generated@@477)) $generated@@56))
 :pattern ( ($generated@@150 $generated@@477))
)))
(assert (forall (($generated@@479 T@U) ) (! (= (type ($generated@@478 $generated@@479)) $generated@@64)
 :pattern ( ($generated@@478 $generated@@479))
)))
(assert (forall (($generated@@480 T@U) ) (!  (=> (= (type $generated@@480) $generated@@64) (= ($generated@@478 ($generated@@454 $generated@@480)) $generated@@480))
 :pattern ( ($generated@@454 $generated@@480))
)))
(assert (forall (($generated@@481 T@U) ) (!  (=> (= (type $generated@@481) $generated@@64) (= ($generated@@72 ($generated@@454 $generated@@481)) $generated@@57))
 :pattern ( ($generated@@454 $generated@@481))
)))
(assert (forall (($generated@@482 T@U) ) (! (let (($generated@@483 (type $generated@@482)))
(= ($generated@@344 $generated@@483 ($generated@@258 $generated@@482)) $generated@@482))
 :pattern ( ($generated@@258 $generated@@482))
)))
(assert (forall (($generated@@484 T@U) ($generated@@485 T@U) ($generated@@486 T@U) ) (!  (=> (and (and (= (type $generated@@484) ($generated@@271 $generated@@145 $generated@@145)) (= (type $generated@@485) $generated@@64)) (= (type $generated@@486) $generated@@64)) (= ($generated@@132 $generated@@484 ($generated@@372 $generated@@485 $generated@@486)) (forall (($generated@@487 T@U) ) (!  (=> (and (= (type $generated@@487) $generated@@145) ($generated@@0 ($generated@@81 ($generated@@269 $generated@@484) $generated@@487))) (and ($generated@@212 ($generated@@81 ($generated@@345 $generated@@484) $generated@@487) $generated@@486) ($generated@@212 $generated@@487 $generated@@485)))
 :pattern ( ($generated@@81 ($generated@@345 $generated@@484) $generated@@487))
 :pattern ( ($generated@@81 ($generated@@269 $generated@@484) $generated@@487))
))))
 :pattern ( ($generated@@132 $generated@@484 ($generated@@372 $generated@@485 $generated@@486)))
)))
(assert (forall (($generated@@488 T@U) ($generated@@489 T@U) ($generated@@490 T@U) ) (!  (=> (and (and (= (type $generated@@488) ($generated@@289 $generated@@145 $generated@@145)) (= (type $generated@@489) $generated@@64)) (= (type $generated@@490) $generated@@64)) (= ($generated@@132 $generated@@488 ($generated@@380 $generated@@489 $generated@@490)) (forall (($generated@@491 T@U) ) (!  (=> (and (= (type $generated@@491) $generated@@145) ($generated@@0 ($generated@@81 ($generated@@287 $generated@@488) $generated@@491))) (and ($generated@@212 ($generated@@81 ($generated@@355 $generated@@488) $generated@@491) $generated@@490) ($generated@@212 $generated@@491 $generated@@489)))
 :pattern ( ($generated@@81 ($generated@@355 $generated@@488) $generated@@491))
 :pattern ( ($generated@@81 ($generated@@287 $generated@@488) $generated@@491))
))))
 :pattern ( ($generated@@132 $generated@@488 ($generated@@380 $generated@@489 $generated@@490)))
)))
(assert (forall (($generated@@494 T@U) ($generated@@495 T@U) ) (!  (=> (and (= (type $generated@@494) $generated@@145) (= (type $generated@@495) $generated@@145)) (< ($generated@@492 $generated@@494) ($generated@@493 ($generated@@211 $generated@@494 $generated@@495))))
 :pattern ( ($generated@@211 $generated@@494 $generated@@495))
)))
(assert (forall (($generated@@496 T@U) ($generated@@497 T@U) ) (!  (=> (and (= (type $generated@@496) $generated@@145) (= (type $generated@@497) $generated@@145)) (< ($generated@@492 $generated@@497) ($generated@@493 ($generated@@211 $generated@@496 $generated@@497))))
 :pattern ( ($generated@@211 $generated@@496 $generated@@497))
)))
(assert (forall (($generated@@498 T@U) ($generated@@499 T@U) ($generated@@500 T@U) ) (!  (=> (and (and (and (= (type $generated@@498) $generated@@145) (= (type $generated@@499) $generated@@64)) (= (type $generated@@500) $generated@@64)) ($generated@@212 $generated@@498 ($generated@@372 $generated@@499 $generated@@500))) (and (= ($generated@@258 ($generated@@344 ($generated@@271 $generated@@145 $generated@@145) $generated@@498)) $generated@@498) ($generated@@132 ($generated@@344 ($generated@@271 $generated@@145 $generated@@145) $generated@@498) ($generated@@372 $generated@@499 $generated@@500))))
 :pattern ( ($generated@@212 $generated@@498 ($generated@@372 $generated@@499 $generated@@500)))
)))
(assert (forall (($generated@@501 T@U) ($generated@@502 T@U) ($generated@@503 T@U) ) (!  (=> (and (and (and (= (type $generated@@501) $generated@@145) (= (type $generated@@502) $generated@@64)) (= (type $generated@@503) $generated@@64)) ($generated@@212 $generated@@501 ($generated@@380 $generated@@502 $generated@@503))) (and (= ($generated@@258 ($generated@@344 ($generated@@289 $generated@@145 $generated@@145) $generated@@501)) $generated@@501) ($generated@@132 ($generated@@344 ($generated@@289 $generated@@145 $generated@@145) $generated@@501) ($generated@@380 $generated@@502 $generated@@503))))
 :pattern ( ($generated@@212 $generated@@501 ($generated@@380 $generated@@502 $generated@@503)))
)))
(assert (forall (($generated@@504 T@U) ($generated@@505 T@U) ($generated@@506 T@U) ) (!  (=> (and (and (and (= (type $generated@@504) $generated@@64) (= (type $generated@@505) $generated@@64)) (= (type $generated@@506) $generated@@145)) ($generated@@212 $generated@@506 ($generated@@135 $generated@@504 $generated@@505))) (and (= ($generated@@258 ($generated@@344 $generated@@136 $generated@@506)) $generated@@506) ($generated@@132 ($generated@@344 $generated@@136 $generated@@506) ($generated@@135 $generated@@504 $generated@@505))))
 :pattern ( ($generated@@212 $generated@@506 ($generated@@135 $generated@@504 $generated@@505)))
)))
(assert (forall (($generated@@507 T@U) ) (! (let (($generated@@508 (type $generated@@507)))
 (not ($generated@@0 ($generated@@81 ($generated@@388 $generated@@508) $generated@@507))))
 :pattern ( (let (($generated@@508 (type $generated@@507)))
($generated@@81 ($generated@@388 $generated@@508) $generated@@507)))
)))
(assert (forall (($generated@@510 Int) ($generated@@511 Int) ) (! (= ($generated@@509 $generated@@510 $generated@@511) (mod $generated@@510 $generated@@511))
 :pattern ( ($generated@@509 $generated@@510 $generated@@511))
)))
(assert (forall (($generated@@513 T@U) ) (! (= (type ($generated@@512 $generated@@513)) $generated@@69)
 :pattern ( ($generated@@512 $generated@@513))
)))
(assert (forall (($generated@@514 T@U) ($generated@@515 T@U) ) (!  (=> (and (= (type $generated@@514) $generated@@64) (= (type $generated@@515) $generated@@64)) (and (= ($generated@@72 ($generated@@135 $generated@@514 $generated@@515)) $generated@@62) (= ($generated@@512 ($generated@@135 $generated@@514 $generated@@515)) $generated@@63)))
 :pattern ( ($generated@@135 $generated@@514 $generated@@515))
)))
(assert (forall (($generated@@516 T@U) ) (!  (=> (= (type $generated@@516) $generated@@136) (= ($generated@@492 ($generated@@258 $generated@@516)) ($generated@@493 $generated@@516)))
 :pattern ( ($generated@@492 ($generated@@258 $generated@@516)))
)))
(assert (forall (($generated@@517 T@U) ) (!  (=> (and (= (type $generated@@517) $generated@@145) ($generated@@212 $generated@@517 ($generated@@75 0))) (and (= ($generated@@258 ($generated@@344 $generated@@2 $generated@@517)) $generated@@517) ($generated@@132 ($generated@@344 ($generated@@76 $generated@@145 $generated@@4) $generated@@517) ($generated@@75 0))))
 :pattern ( ($generated@@212 $generated@@517 ($generated@@75 0)))
)))
(assert (forall (($generated@@518 T@U) ($generated@@519 T@U) ) (!  (=> (and (and (= (type $generated@@518) $generated@@145) (= (type $generated@@519) $generated@@64)) ($generated@@212 $generated@@518 ($generated@@221 $generated@@519))) (and (= ($generated@@258 ($generated@@344 ($generated@@76 $generated@@145 $generated@@4) $generated@@518)) $generated@@518) ($generated@@132 ($generated@@344 ($generated@@76 $generated@@145 $generated@@4) $generated@@518) ($generated@@221 $generated@@519))))
 :pattern ( ($generated@@212 $generated@@518 ($generated@@221 $generated@@519)))
)))
(assert (forall (($generated@@520 T@U) ($generated@@521 T@U) ) (!  (=> (and (and (= (type $generated@@520) $generated@@145) (= (type $generated@@521) $generated@@64)) ($generated@@212 $generated@@520 ($generated@@226 $generated@@521))) (and (= ($generated@@258 ($generated@@344 ($generated@@76 $generated@@145 $generated@@4) $generated@@520)) $generated@@520) ($generated@@132 ($generated@@344 ($generated@@76 $generated@@145 $generated@@4) $generated@@520) ($generated@@226 $generated@@521))))
 :pattern ( ($generated@@212 $generated@@520 ($generated@@226 $generated@@521)))
)))
(assert (forall (($generated@@522 T@U) ($generated@@523 T@U) ) (!  (=> (and (and (= (type $generated@@522) $generated@@145) (= (type $generated@@523) $generated@@64)) ($generated@@212 $generated@@522 ($generated@@150 $generated@@523))) (and (= ($generated@@258 ($generated@@344 ($generated@@76 $generated@@145 $generated@@2) $generated@@522)) $generated@@522) ($generated@@132 ($generated@@344 ($generated@@76 $generated@@145 $generated@@2) $generated@@522) ($generated@@150 $generated@@523))))
 :pattern ( ($generated@@212 $generated@@522 ($generated@@150 $generated@@523)))
)))
(assert (forall (($generated@@524 T@U) ($generated@@525 T@U) ) (!  (=> (and (and (= (type $generated@@524) $generated@@145) (= (type $generated@@525) $generated@@64)) ($generated@@212 $generated@@524 ($generated@@454 $generated@@525))) (and (= ($generated@@258 ($generated@@344 ($generated@@252 $generated@@145) $generated@@524)) $generated@@524) ($generated@@132 ($generated@@344 ($generated@@252 $generated@@145) $generated@@524) ($generated@@454 $generated@@525))))
 :pattern ( ($generated@@212 $generated@@524 ($generated@@454 $generated@@525)))
)))
(assert (forall (($generated@@526 T@U) ($generated@@527 T@U) ($generated@@528 T@U) ) (!  (=> (and (and (= (type $generated@@526) ($generated@@76 $generated@@145 $generated@@2)) (= (type $generated@@527) $generated@@64)) (= (type $generated@@528) ($generated@@76 $generated@@77 $generated@@78))) (= ($generated@@74 $generated@@526 ($generated@@150 $generated@@527) $generated@@528) (forall (($generated@@529 T@U) ) (!  (=> (and (= (type $generated@@529) $generated@@145) (< 0 ($generated ($generated@@81 $generated@@526 $generated@@529)))) ($generated@@238 $generated@@529 $generated@@527 $generated@@528))
 :pattern ( ($generated@@81 $generated@@526 $generated@@529))
))))
 :pattern ( ($generated@@74 $generated@@526 ($generated@@150 $generated@@527) $generated@@528))
)))
(assert (forall (($generated@@530 T@U) ($generated@@531 T@U) ($generated@@532 T@U) ) (!  (=> (and (and (and (= (type $generated@@530) $generated@@136) (= (type $generated@@531) $generated@@64)) (= (type $generated@@532) ($generated@@76 $generated@@77 $generated@@78))) (and ($generated@@237 $generated@@532) (and ($generated@@134 $generated@@530) (exists (($generated@@533 T@U) ) (!  (and (= (type $generated@@533) $generated@@64) ($generated@@74 $generated@@530 ($generated@@135 $generated@@531 $generated@@533) $generated@@532))
 :pattern ( ($generated@@74 $generated@@530 ($generated@@135 $generated@@531 $generated@@533) $generated@@532))
))))) ($generated@@238 ($generated@@143 $generated@@530) $generated@@531 $generated@@532))
 :pattern ( ($generated@@238 ($generated@@143 $generated@@530) $generated@@531 $generated@@532))
)))
(assert (forall (($generated@@534 T@U) ($generated@@535 T@U) ($generated@@536 T@U) ) (!  (=> (and (and (and (= (type $generated@@534) $generated@@136) (= (type $generated@@535) $generated@@64)) (= (type $generated@@536) ($generated@@76 $generated@@77 $generated@@78))) (and ($generated@@237 $generated@@536) (and ($generated@@134 $generated@@534) (exists (($generated@@537 T@U) ) (!  (and (= (type $generated@@537) $generated@@64) ($generated@@74 $generated@@534 ($generated@@135 $generated@@537 $generated@@535) $generated@@536))
 :pattern ( ($generated@@74 $generated@@534 ($generated@@135 $generated@@537 $generated@@535) $generated@@536))
))))) ($generated@@238 ($generated@@144 $generated@@534) $generated@@535 $generated@@536))
 :pattern ( ($generated@@238 ($generated@@144 $generated@@534) $generated@@535 $generated@@536))
)))
(assert (forall (($generated@@538 T@U) ($generated@@539 T@U) ) (!  (=> (and (= (type $generated@@538) $generated@@145) (= (type $generated@@539) $generated@@145)) (= ($generated@@211 ($generated@@233 $generated@@538) ($generated@@233 $generated@@539)) ($generated@@233 ($generated@@211 $generated@@538 $generated@@539))))
 :pattern ( ($generated@@211 ($generated@@233 $generated@@538) ($generated@@233 $generated@@539)))
)))
(assert (forall (($generated@@540 Int) ) (! (= ($generated@@258 ($generated@@8 ($generated@@231 $generated@@540))) ($generated@@233 ($generated@@258 ($generated@@8 $generated@@540))))
 :pattern ( ($generated@@258 ($generated@@8 ($generated@@231 $generated@@540))))
)))
(assert (forall (($generated@@541 T@U) ) (! (= ($generated@@258 ($generated@@233 $generated@@541)) ($generated@@233 ($generated@@258 $generated@@541)))
 :pattern ( ($generated@@258 ($generated@@233 $generated@@541)))
)))
(assert (forall (($generated@@542 T@U) ) (! (let (($generated@@543 ($generated@@253 (type $generated@@542))))
 (=> (and (= (type $generated@@542) ($generated@@252 $generated@@543)) (= ($generated@@251 $generated@@542) 0)) (= $generated@@542 ($generated@@250 $generated@@543))))
 :pattern ( ($generated@@251 $generated@@542))
)))
(assert (forall (($generated@@544 T@U) ($generated@@545 T@U) ($generated@@546 T@U) ) (! (let (($generated@@547 (type $generated@@545)))
 (=> (and (and (= (type $generated@@544) ($generated@@76 $generated@@547 $generated@@2)) (= (type $generated@@546) $generated@@2)) (<= 0 ($generated $generated@@546))) (= ($generated@@263 ($generated@@82 $generated@@544 $generated@@545 $generated@@546)) (+ (- ($generated@@263 $generated@@544) ($generated ($generated@@81 $generated@@544 $generated@@545))) ($generated $generated@@546)))))
 :pattern ( ($generated@@263 ($generated@@82 $generated@@544 $generated@@545 $generated@@546)))
)))
(assert (forall (($generated@@548 T@U) ($generated@@549 T@U) ) (!  (=> (and (= (type $generated@@548) ($generated@@76 $generated@@77 $generated@@78)) (= (type $generated@@549) $generated@@2)) ($generated@@74 $generated@@549 $generated@@46 $generated@@548))
 :pattern ( ($generated@@74 $generated@@549 $generated@@46 $generated@@548))
)))
(assert (forall (($generated@@550 T@U) ($generated@@551 T@U) ) (!  (=> (and (= (type $generated@@550) ($generated@@76 $generated@@77 $generated@@78)) (= (type $generated@@551) $generated@@3)) ($generated@@74 $generated@@551 $generated@@47 $generated@@550))
 :pattern ( ($generated@@74 $generated@@551 $generated@@47 $generated@@550))
)))
(assert (forall (($generated@@552 T@U) ($generated@@553 T@U) ) (!  (=> (and (= (type $generated@@552) ($generated@@76 $generated@@77 $generated@@78)) (= (type $generated@@553) $generated@@4)) ($generated@@74 $generated@@553 $generated@@44 $generated@@552))
 :pattern ( ($generated@@74 $generated@@553 $generated@@44 $generated@@552))
)))
(assert (forall (($generated@@554 T@U) ($generated@@555 T@U) ) (!  (=> (and (= (type $generated@@554) ($generated@@76 $generated@@77 $generated@@78)) (= (type $generated@@555) $generated@@412)) ($generated@@74 $generated@@555 $generated@@45 $generated@@554))
 :pattern ( ($generated@@74 $generated@@555 $generated@@45 $generated@@554))
)))
(assert (forall (($generated@@556 T@U) ($generated@@557 T@U) ) (!  (=> (and (= (type $generated@@556) ($generated@@76 $generated@@77 $generated@@78)) (= (type $generated@@557) $generated@@145)) ($generated@@74 $generated@@557 $generated@@48 $generated@@556))
 :pattern ( ($generated@@74 $generated@@557 $generated@@48 $generated@@556))
)))
(assert (forall (($generated@@558 T@U) ($generated@@559 T@U) ) (!  (=> (and (= (type $generated@@558) ($generated@@252 $generated@@145)) (= (type $generated@@559) $generated@@64)) (= ($generated@@132 $generated@@558 ($generated@@454 $generated@@559)) (forall (($generated@@560 Int) ) (!  (=> (and (<= 0 $generated@@560) (< $generated@@560 ($generated@@251 $generated@@558))) ($generated@@212 ($generated@@455 $generated@@558 $generated@@560) $generated@@559))
 :pattern ( ($generated@@455 $generated@@558 $generated@@560))
))))
 :pattern ( ($generated@@132 $generated@@558 ($generated@@454 $generated@@559)))
)))
(assert (forall (($generated@@562 T@U) ($generated@@563 Int) ) (!  (=> (= (type $generated@@562) ($generated@@252 $generated@@145)) (=> (and (<= 0 $generated@@563) (< $generated@@563 ($generated@@251 $generated@@562))) (< ($generated@@493 ($generated@@344 $generated@@136 ($generated@@455 $generated@@562 $generated@@563))) ($generated@@561 $generated@@562))))
 :pattern ( ($generated@@493 ($generated@@344 $generated@@136 ($generated@@455 $generated@@562 $generated@@563))))
)))
(assert (forall (($generated@@564 T@U) ($generated@@565 T@U) ($generated@@566 T@U) ) (!  (=> (and (and (and (= (type $generated@@564) ($generated@@271 $generated@@145 $generated@@145)) (= (type $generated@@565) $generated@@64)) (= (type $generated@@566) $generated@@64)) ($generated@@132 $generated@@564 ($generated@@372 $generated@@565 $generated@@566))) (and (and ($generated@@132 ($generated@@269 $generated@@564) ($generated@@221 $generated@@565)) ($generated@@132 ($generated@@312 $generated@@564) ($generated@@221 $generated@@566))) ($generated@@132 ($generated@@343 $generated@@564) ($generated@@221 ($generated@@135 $generated@@565 $generated@@566)))))
 :pattern ( ($generated@@132 $generated@@564 ($generated@@372 $generated@@565 $generated@@566)))
)))
(assert (forall (($generated@@567 T@U) ($generated@@568 T@U) ($generated@@569 T@U) ) (!  (=> (and (and (and (= (type $generated@@567) ($generated@@289 $generated@@145 $generated@@145)) (= (type $generated@@568) $generated@@64)) (= (type $generated@@569) $generated@@64)) ($generated@@132 $generated@@567 ($generated@@380 $generated@@568 $generated@@569))) (and (and ($generated@@132 ($generated@@287 $generated@@567) ($generated@@226 $generated@@568)) ($generated@@132 ($generated@@323 $generated@@567) ($generated@@226 $generated@@569))) ($generated@@132 ($generated@@354 $generated@@567) ($generated@@226 ($generated@@135 $generated@@568 $generated@@569)))))
 :pattern ( ($generated@@132 $generated@@567 ($generated@@380 $generated@@568 $generated@@569)))
)))
(assert (forall (($generated@@570 T@U) ) (!  (=> (= (type $generated@@570) $generated@@2) ($generated@@132 $generated@@570 $generated@@46))
 :pattern ( ($generated@@132 $generated@@570 $generated@@46))
)))
(assert (forall (($generated@@571 T@U) ) (!  (=> (= (type $generated@@571) $generated@@3) ($generated@@132 $generated@@571 $generated@@47))
 :pattern ( ($generated@@132 $generated@@571 $generated@@47))
)))
(assert (forall (($generated@@572 T@U) ) (!  (=> (= (type $generated@@572) $generated@@4) ($generated@@132 $generated@@572 $generated@@44))
 :pattern ( ($generated@@132 $generated@@572 $generated@@44))
)))
(assert (forall (($generated@@573 T@U) ) (!  (=> (= (type $generated@@573) $generated@@412) ($generated@@132 $generated@@573 $generated@@45))
 :pattern ( ($generated@@132 $generated@@573 $generated@@45))
)))
(assert (forall (($generated@@574 T@U) ) (!  (=> (= (type $generated@@574) $generated@@145) ($generated@@132 $generated@@574 $generated@@48))
 :pattern ( ($generated@@132 $generated@@574 $generated@@48))
)))
(push 1)
(declare-fun ControlFlow (Int Int) Int)
(declare-fun $generated@@575 () Int)
(declare-fun $generated@@576 () Int)
(declare-fun $generated@@577 () Int)
(declare-fun $generated@@578 () Int)
(declare-fun $generated@@579 () Int)
(declare-fun $generated@@580 () Int)
(declare-fun $generated@@581 () Int)
(declare-fun $generated@@582 () Int)
(declare-fun $generated@@583 () T@U)
(declare-fun $generated@@584 () T@U)
(declare-fun $generated@@585 () T@U)
(declare-fun $generated@@586 () Int)
(declare-fun $generated@@587 () T@U)
(declare-fun $generated@@588 () T@U)
(declare-fun $generated@@589 () T@U)
(declare-fun $generated@@590 (T@U) Bool)
(declare-fun $generated@@591 () T@U)
(declare-fun $generated@@592 () T@U)
(declare-fun $generated@@593 () Int)
(assert  (and (and (and (and (and (and (and (= (type $generated@@583) ($generated@@76 $generated@@145 $generated@@2)) (= (type $generated@@584) ($generated@@76 $generated@@145 $generated@@2))) (= (type $generated@@585) $generated@@145)) (= (type $generated@@587) ($generated@@157 $generated@@77 $generated@@4))) (= (type $generated@@588) $generated@@77)) (= (type $generated@@589) ($generated@@76 $generated@@77 $generated@@78))) (= (type $generated@@591) $generated@@64)) (= (type $generated@@592) ($generated@@76 $generated@@145 $generated@@2))))
(set-option :timeout 0)
(set-option :rlimit 0)
(assert (not
 (=> (= (ControlFlow 0 0) 21) (let (($generated@@594  (=> (and (and (and (and (not ($generated@@0 ($generated@@233 ($generated@@11 true)))) (< $generated@@575 ($generated@@231 0))) (< $generated@@575 ($generated@@231 0))) (< $generated@@575 ($generated@@231 0))) (= (ControlFlow 0 19) (- 0 18))) false)))
(let (($generated@@595  (=> (= $generated@@576 ($generated@@231 0)) (and (=> (= (ControlFlow 0 15) (- 0 17)) (= ($generated@@509 $generated@@576 ($generated@@231 2)) ($generated@@231 0))) (=> (= ($generated@@509 $generated@@576 ($generated@@231 2)) ($generated@@231 0)) (=> (and (<= ($generated@@231 0) $generated@@575) (= $generated@@577 (+ $generated@@575 $generated@@575))) (and (=> (= (ControlFlow 0 15) (- 0 16)) (= ($generated@@509 $generated@@577 ($generated@@231 2)) ($generated@@231 0))) (=> (= ($generated@@509 $generated@@577 ($generated@@231 2)) ($generated@@231 0)) (=> (= (ControlFlow 0 15) (- 0 14)) (<= 0 (+ (+ $generated@@575 $generated@@575) 1)))))))))))
(let (($generated@@596  (=> (= $generated@@578 ($generated@@231 0)) (and (=> (= (ControlFlow 0 9) (- 0 13)) (= ($generated@@509 $generated@@578 ($generated@@231 2)) ($generated@@231 0))) (=> (= ($generated@@509 $generated@@578 ($generated@@231 2)) ($generated@@231 0)) (=> (and (<= ($generated@@231 0) $generated@@575) (= $generated@@579 (+ $generated@@575 $generated@@575))) (and (=> (= (ControlFlow 0 9) (- 0 12)) (= ($generated@@509 $generated@@579 ($generated@@231 2)) ($generated@@231 0))) (=> (= ($generated@@509 $generated@@579 ($generated@@231 2)) ($generated@@231 0)) (=> (= $generated@@580 ($generated@@231 1)) (and (=> (= (ControlFlow 0 9) (- 0 11)) (= ($generated@@509 $generated@@580 ($generated@@231 2)) ($generated@@231 0))) (=> (= ($generated@@509 $generated@@580 ($generated@@231 2)) ($generated@@231 0)) (=> (= $generated@@581 (+ (+ $generated@@575 $generated@@575) 1)) (and (=> (= (ControlFlow 0 9) (- 0 10)) (= ($generated@@509 $generated@@581 ($generated@@231 2)) ($generated@@231 0))) (=> (= ($generated@@509 $generated@@581 ($generated@@231 2)) ($generated@@231 0)) (=> (= (ControlFlow 0 9) (- 0 8)) (<= 0 (+ (+ $generated@@575 $generated@@575) 1)))))))))))))))))
(let (($generated@@597  (=> (= $generated@@582 ($generated@@231 0)) (and (=> (= (ControlFlow 0 6) (- 0 7)) (= ($generated@@509 $generated@@582 ($generated@@231 2)) ($generated@@231 0))) (=> (= ($generated@@509 $generated@@582 ($generated@@231 2)) ($generated@@231 0)) (=> (and (<= ($generated@@231 0) $generated@@575) (= (ControlFlow 0 6) (- 0 5))) (<= 0 $generated@@575)))))))
(let (($generated@@598  (=> ($generated@@0 ($generated@@233 ($generated@@11 true))) (and (=> (= (ControlFlow 0 2) (- 0 4)) (<= 0 $generated@@575)) (=> (<= 0 $generated@@575) (=> (and (= $generated@@583 ($generated@@82 $generated@@584 $generated@@585 ($generated@@8 $generated@@575))) (= $generated@@586 (+ $generated@@575 $generated@@575))) (and (=> (= (ControlFlow 0 2) (- 0 3)) (= ($generated@@509 $generated@@586 ($generated@@231 2)) ($generated@@231 0))) (=> (= ($generated@@509 $generated@@586 ($generated@@231 2)) ($generated@@231 0)) (=> (= (ControlFlow 0 2) (- 0 1)) (<= 0 (+ $generated@@575 $generated@@575)))))))))))
(let (($generated@@599  (=> (= $generated@@587 ($generated@@156 $generated@@588 $generated@@589 $generated@@60 false)) (and (and (and (and (=> (= (ControlFlow 0 20) 2) $generated@@598) (=> (= (ControlFlow 0 20) 6) $generated@@597)) (=> (= (ControlFlow 0 20) 9) $generated@@596)) (=> (= (ControlFlow 0 20) 15) $generated@@595)) (=> (= (ControlFlow 0 20) 19) $generated@@594)))))
(let (($generated@@600  (=> (and (and ($generated@@237 $generated@@589) ($generated@@590 $generated@@589)) (and ($generated@@132 $generated@@584 ($generated@@150 $generated@@591)) ($generated@@74 $generated@@584 ($generated@@150 $generated@@591) $generated@@589))) (=> (and (and (and ($generated@@212 $generated@@585 $generated@@591) ($generated@@238 $generated@@585 $generated@@591 $generated@@589)) (= ($generated@@509 $generated@@575 ($generated@@231 2)) ($generated@@231 0))) (and (and ($generated@@132 $generated@@592 ($generated@@150 $generated@@591)) ($generated@@74 $generated@@592 ($generated@@150 $generated@@591) $generated@@589)) (and (= 1 $generated@@593) (= (ControlFlow 0 21) 20)))) $generated@@599))))
$generated@@600))))))))
))
(check-sat)
(get-info :reason-unknown)
(assert (not (= (ControlFlow 0 2) (- 4))))
(check-sat)
(get-info :reason-unknown)
(assert (not (= (ControlFlow 0 9) (- 11))))
(check-sat)
(pop 1)
; Invalid
(get-info :rlimit)
(reset)
(set-option :rlimit 0)
; did a full reset
(reset)
(set-option :print-success false)
(set-info :smt-lib-version 2.6)
(set-option :auto_config false)
(set-option :type_check true)
(set-option :smt.case_split 3)
(set-option :smt.qi.eager_threshold 100)
(set-option :smt.delay_units true)
(set-option :smt.arith.solver 2)
(set-option :smt.mbqi false)
(set-option :model.compact false)
(set-option :model.v2 true)
(set-option :pp.bv_literals false)
; done setting options


(set-info :category "industrial")
(declare-sort |T@U| 0)
(declare-sort |T@T| 0)
(declare-fun real_pow (Real Real) Real)
(declare-fun UOrdering2 (|T@U| |T@U|) Bool)
(declare-fun UOrdering3 (|T@T| |T@U| |T@U|) Bool)
(declare-fun tickleBool (Bool) Bool)
(assert (and (tickleBool true) (tickleBool false)))
(declare-fun $generated (T@U) Int)
(declare-fun $generated@@0 (T@U) Bool)
(declare-fun $generated@@1 (T@T) Int)
(declare-fun $generated@@2 () T@T)
(declare-fun $generated@@3 () T@T)
(declare-fun $generated@@4 () T@T)
(declare-fun $generated@@5 () T@T)
(declare-fun $generated@@6 () T@T)
(declare-fun $generated@@7 () T@T)
(declare-fun $generated@@8 (Int) T@U)
(declare-fun type (T@U) T@T)
(declare-fun $generated@@9 (Real) T@U)
(declare-fun $generated@@10 (T@U) Real)
(declare-fun $generated@@11 (Bool) T@U)
(declare-fun $generated@@12 (RoundingMode) T@U)
(declare-fun $generated@@13 (T@U) RoundingMode)
(declare-fun $generated@@14 (String) T@U)
(declare-fun $generated@@15 (T@U) String)
(declare-fun $generated@@16 ((RegEx String)) T@U)
(declare-fun $generated@@17 (T@U) (RegEx String))
(declare-fun $generated@@44 (T@U T@U T@U) T@U)
(declare-fun $generated@@45 (T@U T@U T@U Bool) T@U)
(declare-fun $generated@@46 (T@T) T@T)
(declare-fun $generated@@47 () T@T)
(declare-fun $generated@@48 (T@T T@T) T@T)
(declare-fun $generated@@49 () T@T)
(declare-fun $generated@@50 (T@T) T@T)
(declare-fun $generated@@51 (T@U T@U) T@U)
(declare-fun $generated@@52 (T@U T@U) T@U)
(declare-fun $generated@@53 (T@T) T@T)
(declare-fun $generated@@54 (T@T) T@T)
(declare-fun $generated@@55 (T@U T@U T@U) T@U)
(declare-fun $generated@@56 (T@U T@U T@U) T@U)
(declare-fun $generated@@57 (T@T T@T) T@T)
(declare-fun $generated@@58 (T@T) T@T)
(declare-fun $generated@@59 (T@T) T@T)
(declare-fun $generated@@60 (T@U T@U T@U T@U) T@U)
(declare-fun $generated@@157 (Int) Int)
(declare-fun $generated@@159 (T@U) T@U)
(declare-fun $generated@@163 (T@U) T@U)
(declare-fun $generated@@164 (T@T T@U) T@U)
(declare-fun $generated@@165 () T@T)
(assert  (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (= ($generated@@1 $generated@@2) 0) (= ($generated@@1 $generated@@3) 1)) (= ($generated@@1 $generated@@4) 2)) (= ($generated@@1 $generated@@5) 3)) (= ($generated@@1 $generated@@6) 4)) (= ($generated@@1 $generated@@7) 5)) (forall (($generated@@18 Int) ) (! (= ($generated ($generated@@8 $generated@@18)) $generated@@18)
 :pattern ( ($generated@@8 $generated@@18))
))) (forall (($generated@@19 T@U) ) (!  (=> (= (type $generated@@19) $generated@@2) (= ($generated@@8 ($generated $generated@@19)) $generated@@19))
 :pattern ( ($generated $generated@@19))
))) (forall (($generated@@20 Int) ) (! (= (type ($generated@@8 $generated@@20)) $generated@@2)
 :pattern ( ($generated@@8 $generated@@20))
))) (forall (($generated@@21 Real) ) (! (= ($generated@@10 ($generated@@9 $generated@@21)) $generated@@21)
 :pattern ( ($generated@@9 $generated@@21))
))) (forall (($generated@@22 T@U) ) (!  (=> (= (type $generated@@22) $generated@@3) (= ($generated@@9 ($generated@@10 $generated@@22)) $generated@@22))
 :pattern ( ($generated@@10 $generated@@22))
))) (forall (($generated@@23 Real) ) (! (= (type ($generated@@9 $generated@@23)) $generated@@3)
 :pattern ( ($generated@@9 $generated@@23))
))) (forall (($generated@@24 Bool) ) (! (= ($generated@@0 ($generated@@11 $generated@@24)) $generated@@24)
 :pattern ( ($generated@@11 $generated@@24))
))) (forall (($generated@@25 T@U) ) (!  (=> (= (type $generated@@25) $generated@@4) (= ($generated@@11 ($generated@@0 $generated@@25)) $generated@@25))
 :pattern ( ($generated@@0 $generated@@25))
))) (forall (($generated@@26 Bool) ) (! (= (type ($generated@@11 $generated@@26)) $generated@@4)
 :pattern ( ($generated@@11 $generated@@26))
))) (forall (($generated@@27 RoundingMode) ) (! (= ($generated@@13 ($generated@@12 $generated@@27)) $generated@@27)
 :pattern ( ($generated@@12 $generated@@27))
))) (forall (($generated@@28 T@U) ) (!  (=> (= (type $generated@@28) $generated@@5) (= ($generated@@12 ($generated@@13 $generated@@28)) $generated@@28))
 :pattern ( ($generated@@13 $generated@@28))
))) (forall (($generated@@29 RoundingMode) ) (! (= (type ($generated@@12 $generated@@29)) $generated@@5)
 :pattern ( ($generated@@12 $generated@@29))
))) (forall (($generated@@30 String) ) (! (= ($generated@@15 ($generated@@14 $generated@@30)) $generated@@30)
 :pattern ( ($generated@@14 $generated@@30))
))) (forall (($generated@@31 T@U) ) (!  (=> (= (type $generated@@31) $generated@@6) (= ($generated@@14 ($generated@@15 $generated@@31)) $generated@@31))
 :pattern ( ($generated@@15 $generated@@31))
))) (forall (($generated@@32 String) ) (! (= (type ($generated@@14 $generated@@32)) $generated@@6)
 :pattern ( ($generated@@14 $generated@@32))
))) (forall (($generated@@33 (RegEx String)) ) (! (= ($generated@@17 ($generated@@16 $generated@@33)) $generated@@33)
 :pattern ( ($generated@@16 $generated@@33))
))) (forall (($generated@@34 T@U) ) (!  (=> (= (type $generated@@34) $generated@@7) (= ($generated@@16 ($generated@@17 $generated@@34)) $generated@@34))
 :pattern ( ($generated@@17 $generated@@34))
))) (forall (($generated@@35 (RegEx String)) ) (! (= (type ($generated@@16 $generated@@35)) $generated@@7)
 :pattern ( ($generated@@16 $generated@@35))
))))
(assert (forall (($generated@@36 T@U) ) (! (UOrdering2 $generated@@36 $generated@@36)
 :no-pattern ($generated $generated@@36)
 :no-pattern ($generated@@0 $generated@@36)
)))
(assert (forall (($generated@@37 T@U) ($generated@@38 T@U) ($generated@@39 T@U) ) (! (let (($generated@@40 (type $generated@@37)))
 (=> (and (and (= (type $generated@@38) $generated@@40) (= (type $generated@@39) $generated@@40)) (and (UOrdering2 $generated@@37 $generated@@38) (UOrdering2 $generated@@38 $generated@@39))) (UOrdering2 $generated@@37 $generated@@39)))
 :pattern ( (UOrdering2 $generated@@37 $generated@@38) (UOrdering2 $generated@@38 $generated@@39))
)))
(assert (forall (($generated@@41 T@U) ($generated@@42 T@U) ) (! (let (($generated@@43 (type $generated@@41)))
 (=> (= (type $generated@@42) $generated@@43) (=> (and (UOrdering2 $generated@@41 $generated@@42) (UOrdering2 $generated@@42 $generated@@41)) (= $generated@@41 $generated@@42))))
 :pattern ( (UOrdering2 $generated@@41 $generated@@42) (UOrdering2 $generated@@42 $generated@@41))
)))
(assert  (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (forall (($generated@@61 T@T) ($generated@@62 T@T) ) (= ($generated@@1 ($generated@@48 $generated@@61 $generated@@62)) 6)) (forall (($generated@@63 T@T) ($generated@@64 T@T) ) (! (= ($generated@@53 ($generated@@48 $generated@@63 $generated@@64)) $generated@@63)
 :pattern ( ($generated@@48 $generated@@63 $generated@@64))
))) (forall (($generated@@65 T@T) ($generated@@66 T@T) ) (! (= ($generated@@54 ($generated@@48 $generated@@65 $generated@@66)) $generated@@66)
 :pattern ( ($generated@@48 $generated@@65 $generated@@66))
))) (forall (($generated@@67 T@U) ($generated@@68 T@U) ) (! (let (($generated@@69 ($generated@@54 (type $generated@@67))))
(= (type ($generated@@52 $generated@@67 $generated@@68)) $generated@@69))
 :pattern ( ($generated@@52 $generated@@67 $generated@@68))
))) (forall (($generated@@70 T@U) ($generated@@71 T@U) ($generated@@72 T@U) ) (! (let (($generated@@73 (type $generated@@72)))
(let (($generated@@74 (type $generated@@71)))
(= (type ($generated@@55 $generated@@70 $generated@@71 $generated@@72)) ($generated@@48 $generated@@74 $generated@@73))))
 :pattern ( ($generated@@55 $generated@@70 $generated@@71 $generated@@72))
))) (forall (($generated@@75 T@U) ($generated@@76 T@U) ($generated@@77 T@U) ) (! (let (($generated@@78 ($generated@@54 (type $generated@@75))))
 (=> (= (type $generated@@77) $generated@@78) (= ($generated@@52 ($generated@@55 $generated@@75 $generated@@76 $generated@@77) $generated@@76) $generated@@77)))
 :weight 0
))) (and (forall (($generated@@79 T@U) ($generated@@80 T@U) ($generated@@81 T@U) ($generated@@82 T@U) ) (!  (or (= $generated@@81 $generated@@82) (= ($generated@@52 ($generated@@55 $generated@@80 $generated@@81 $generated@@79) $generated@@82) ($generated@@52 $generated@@80 $generated@@82)))
 :weight 0
)) (forall (($generated@@83 T@U) ($generated@@84 T@U) ($generated@@85 T@U) ($generated@@86 T@U) ) (!  (or true (= ($generated@@52 ($generated@@55 $generated@@84 $generated@@85 $generated@@83) $generated@@86) ($generated@@52 $generated@@84 $generated@@86)))
 :weight 0
)))) (forall (($generated@@87 T@T) ) (= ($generated@@1 ($generated@@50 $generated@@87)) 7))) (forall (($generated@@88 T@T) ) (! (= ($generated@@46 ($generated@@50 $generated@@88)) $generated@@88)
 :pattern ( ($generated@@50 $generated@@88))
))) (forall (($generated@@89 T@U) ($generated@@90 T@U) ) (! (let (($generated@@91 ($generated@@46 (type $generated@@90))))
(= (type ($generated@@51 $generated@@89 $generated@@90)) $generated@@91))
 :pattern ( ($generated@@51 $generated@@89 $generated@@90))
))) (= ($generated@@1 $generated@@49) 8)) (forall (($generated@@92 T@U) ($generated@@93 T@U) ($generated@@94 T@U) ) (! (= (type ($generated@@56 $generated@@92 $generated@@93 $generated@@94)) $generated@@49)
 :pattern ( ($generated@@56 $generated@@92 $generated@@93 $generated@@94))
))) (forall (($generated@@95 T@U) ($generated@@96 T@U) ($generated@@97 T@U) ) (! (let (($generated@@98 ($generated@@46 (type $generated@@96))))
 (=> (= (type $generated@@97) $generated@@98) (= ($generated@@51 ($generated@@56 $generated@@95 $generated@@96 $generated@@97) $generated@@96) $generated@@97)))
 :weight 0
))) (and (forall (($generated@@99 T@U) ($generated@@100 T@U) ($generated@@101 T@U) ($generated@@102 T@U) ) (!  (or (= $generated@@101 $generated@@102) (= ($generated@@51 ($generated@@56 $generated@@100 $generated@@101 $generated@@99) $generated@@102) ($generated@@51 $generated@@100 $generated@@102)))
 :weight 0
)) (forall (($generated@@103 T@U) ($generated@@104 T@U) ($generated@@105 T@U) ($generated@@106 T@U) ) (!  (or true (= ($generated@@51 ($generated@@56 $generated@@104 $generated@@105 $generated@@103) $generated@@106) ($generated@@51 $generated@@104 $generated@@106)))
 :weight 0
)))) (= ($generated@@1 $generated@@47) 9)) (forall (($generated@@107 T@T) ($generated@@108 T@T) ) (= ($generated@@1 ($generated@@57 $generated@@107 $generated@@108)) 10))) (forall (($generated@@109 T@T) ($generated@@110 T@T) ) (! (= ($generated@@58 ($generated@@57 $generated@@109 $generated@@110)) $generated@@109)
 :pattern ( ($generated@@57 $generated@@109 $generated@@110))
))) (forall (($generated@@111 T@T) ($generated@@112 T@T) ) (! (= ($generated@@59 ($generated@@57 $generated@@111 $generated@@112)) $generated@@112)
 :pattern ( ($generated@@57 $generated@@111 $generated@@112))
))) (forall (($generated@@113 T@U) ($generated@@114 T@U) ($generated@@115 T@U) ) (! (let (($generated@@116 ($generated@@59 (type $generated@@113))))
(= (type ($generated@@44 $generated@@113 $generated@@114 $generated@@115)) $generated@@116))
 :pattern ( ($generated@@44 $generated@@113 $generated@@114 $generated@@115))
))) (forall (($generated@@117 T@U) ($generated@@118 T@U) ($generated@@119 T@U) ($generated@@120 T@U) ) (! (let (($generated@@121 (type $generated@@120)))
(let (($generated@@122 (type $generated@@118)))
(= (type ($generated@@60 $generated@@117 $generated@@118 $generated@@119 $generated@@120)) ($generated@@57 $generated@@122 $generated@@121))))
 :pattern ( ($generated@@60 $generated@@117 $generated@@118 $generated@@119 $generated@@120))
))) (forall (($generated@@123 T@U) ($generated@@124 T@U) ($generated@@125 T@U) ($generated@@126 T@U) ) (! (let (($generated@@127 ($generated@@59 (type $generated@@123))))
 (=> (= (type $generated@@126) $generated@@127) (= ($generated@@44 ($generated@@60 $generated@@123 $generated@@124 $generated@@125 $generated@@126) $generated@@124 $generated@@125) $generated@@126)))
 :weight 0
))) (and (and (forall (($generated@@128 T@U) ($generated@@129 T@U) ($generated@@130 T@U) ($generated@@131 T@U) ($generated@@132 T@U) ($generated@@133 T@U) ) (!  (or (= $generated@@130 $generated@@132) (= ($generated@@44 ($generated@@60 $generated@@129 $generated@@130 $generated@@131 $generated@@128) $generated@@132 $generated@@133) ($generated@@44 $generated@@129 $generated@@132 $generated@@133)))
 :weight 0
)) (forall (($generated@@134 T@U) ($generated@@135 T@U) ($generated@@136 T@U) ($generated@@137 T@U) ($generated@@138 T@U) ($generated@@139 T@U) ) (!  (or (= $generated@@137 $generated@@139) (= ($generated@@44 ($generated@@60 $generated@@135 $generated@@136 $generated@@137 $generated@@134) $generated@@138 $generated@@139) ($generated@@44 $generated@@135 $generated@@138 $generated@@139)))
 :weight 0
))) (forall (($generated@@140 T@U) ($generated@@141 T@U) ($generated@@142 T@U) ($generated@@143 T@U) ($generated@@144 T@U) ($generated@@145 T@U) ) (!  (or true (= ($generated@@44 ($generated@@60 $generated@@141 $generated@@142 $generated@@143 $generated@@140) $generated@@144 $generated@@145) ($generated@@44 $generated@@141 $generated@@144 $generated@@145)))
 :weight 0
)))) (forall (($generated@@146 T@U) ($generated@@147 T@U) ($generated@@148 T@U) ($generated@@149 Bool) ) (! (= (type ($generated@@45 $generated@@146 $generated@@147 $generated@@148 $generated@@149)) ($generated@@57 $generated@@47 $generated@@4))
 :pattern ( ($generated@@45 $generated@@146 $generated@@147 $generated@@148 $generated@@149))
))))
(assert (forall (($generated@@150 T@U) ($generated@@151 T@U) ($generated@@152 T@U) ($generated@@153 Bool) ($generated@@154 T@U) ($generated@@155 T@U) ) (! (let (($generated@@156 ($generated@@46 (type $generated@@155))))
 (=> (and (and (and (and (= (type $generated@@150) $generated@@47) (= (type $generated@@151) ($generated@@48 $generated@@47 $generated@@49))) (= (type $generated@@152) ($generated@@50 $generated@@4))) (= (type $generated@@154) $generated@@47)) (= (type $generated@@155) ($generated@@50 $generated@@156))) (= ($generated@@0 ($generated@@44 ($generated@@45 $generated@@150 $generated@@151 $generated@@152 $generated@@153) $generated@@154 $generated@@155))  (=> (and (not (= $generated@@154 $generated@@150)) ($generated@@0 ($generated@@51 ($generated@@52 $generated@@151 $generated@@154) $generated@@152))) $generated@@153))))
 :pattern ( ($generated@@44 ($generated@@45 $generated@@150 $generated@@151 $generated@@152 $generated@@153) $generated@@154 $generated@@155))
)))
(assert (forall (($generated@@158 Int) ) (! (= ($generated@@157 $generated@@158) $generated@@158)
 :pattern ( ($generated@@157 $generated@@158))
)))
(assert (forall (($generated@@160 T@U) ) (! (let (($generated@@161 (type $generated@@160)))
(= (type ($generated@@159 $generated@@160)) $generated@@161))
 :pattern ( ($generated@@159 $generated@@160))
)))
(assert (forall (($generated@@162 T@U) ) (! (= ($generated@@159 $generated@@162) $generated@@162)
 :pattern ( ($generated@@159 $generated@@162))
)))
(assert  (and (and (= ($generated@@1 $generated@@165) 11) (forall (($generated@@166 T@U) ) (! (= (type ($generated@@163 $generated@@166)) $generated@@165)
 :pattern ( ($generated@@163 $generated@@166))
))) (forall (($generated@@167 T@T) ($generated@@168 T@U) ) (! (= (type ($generated@@164 $generated@@167 $generated@@168)) $generated@@167)
 :pattern ( ($generated@@164 $generated@@167 $generated@@168))
))))
(assert (forall (($generated@@169 T@U) ) (! (let (($generated@@170 (type $generated@@169)))
(= ($generated@@164 $generated@@170 ($generated@@163 $generated@@169)) $generated@@169))
 :pattern ( ($generated@@163 $generated@@169))
)))
(assert (forall (($generated@@171 Int) ) (! (= ($generated@@163 ($generated@@8 ($generated@@157 $generated@@171))) ($generated@@159 ($generated@@163 ($generated@@8 $generated@@171))))
 :pattern ( ($generated@@163 ($generated@@8 ($generated@@157 $generated@@171))))
)))
(assert (forall (($generated@@172 T@U) ) (! (= ($generated@@163 ($generated@@159 $generated@@172)) ($generated@@159 ($generated@@163 $generated@@172)))
 :pattern ( ($generated@@163 ($generated@@159 $generated@@172)))
)))
(push 1)
(declare-fun ControlFlow (Int Int) Int)
(declare-fun $generated@@173 () Int)
(declare-fun $generated@@174 () T@U)
(declare-fun $generated@@175 () T@U)
(declare-fun $generated@@176 () T@U)
(declare-fun $generated@@177 () T@U)
(declare-fun $generated@@178 (T@U) Bool)
(declare-fun $generated@@179 (T@U) Bool)
(declare-fun $generated@@180 () Int)
(assert  (and (and (and (= (type $generated@@174) ($generated@@57 $generated@@47 $generated@@4)) (= (type $generated@@175) $generated@@47)) (= (type $generated@@176) ($generated@@48 $generated@@47 $generated@@49))) (= (type $generated@@177) ($generated@@50 $generated@@4))))
(set-option :timeout 0)
(set-option :rlimit 0)
(assert (not
 (=> (= (ControlFlow 0 0) 8) (let (($generated@@181 true))
(let (($generated@@182  (=> (and (< $generated@@173 ($generated@@157 0)) (= (ControlFlow 0 6) 4)) $generated@@181)))
(let (($generated@@183  (=> (and (<= ($generated@@157 0) $generated@@173) (= (ControlFlow 0 5) 4)) $generated@@181)))
(let (($generated@@184  (and (=> (= (ControlFlow 0 2) (- 0 3)) (<= ($generated@@157 0) ($generated@@157 0))) (=> (= (ControlFlow 0 2) (- 0 1)) ($generated@@0 ($generated@@159 ($generated@@11 (< 0 256))))))))
(let (($generated@@185  (=> (= $generated@@174 ($generated@@45 $generated@@175 $generated@@176 $generated@@177 false)) (and (and (=> (= (ControlFlow 0 7) 2) $generated@@184) (=> (= (ControlFlow 0 7) 5) $generated@@183)) (=> (= (ControlFlow 0 7) 6) $generated@@182)))))
(let (($generated@@186  (=> (and (and ($generated@@178 $generated@@176) ($generated@@179 $generated@@176)) (and (= 0 $generated@@180) (= (ControlFlow 0 8) 7))) $generated@@185)))
$generated@@186)))))))
))
(check-sat)
(pop 1)
; Valid
(get-info :rlimit)
(reset)
(set-option :rlimit 0)
; did a full reset
(reset)
(set-option :print-success false)
(set-info :smt-lib-version 2.6)
(set-option :auto_config false)
(set-option :type_check true)
(set-option :smt.case_split 3)
(set-option :smt.qi.eager_threshold 100)
(set-option :smt.delay_units true)
(set-option :smt.arith.solver 2)
(set-option :smt.mbqi false)
(set-option :model.compact false)
(set-option :model.v2 true)
(set-option :pp.bv_literals false)
; done setting options


(set-info :category "industrial")
(declare-sort |T@U| 0)
(declare-sort |T@T| 0)
(declare-fun real_pow (Real Real) Real)
(declare-fun UOrdering2 (|T@U| |T@U|) Bool)
(declare-fun UOrdering3 (|T@T| |T@U| |T@U|) Bool)
(declare-fun tickleBool (Bool) Bool)
(assert (and (tickleBool true) (tickleBool false)))
(declare-fun $generated (T@U) Int)
(declare-fun $generated@@0 (T@U) Bool)
(declare-fun $generated@@1 (T@T) Int)
(declare-fun $generated@@2 () T@T)
(declare-fun $generated@@3 () T@T)
(declare-fun $generated@@4 () T@T)
(declare-fun $generated@@5 () T@T)
(declare-fun $generated@@6 () T@T)
(declare-fun $generated@@7 () T@T)
(declare-fun $generated@@8 (Int) T@U)
(declare-fun type (T@U) T@T)
(declare-fun $generated@@9 (Real) T@U)
(declare-fun $generated@@10 (T@U) Real)
(declare-fun $generated@@11 (Bool) T@U)
(declare-fun $generated@@12 (RoundingMode) T@U)
(declare-fun $generated@@13 (T@U) RoundingMode)
(declare-fun $generated@@14 (String) T@U)
(declare-fun $generated@@15 (T@U) String)
(declare-fun $generated@@16 ((RegEx String)) T@U)
(declare-fun $generated@@17 (T@U) (RegEx String))
(declare-fun $generated@@44 () T@U)
(declare-fun $generated@@45 () T@U)
(declare-fun $generated@@46 () T@U)
(declare-fun $generated@@47 () T@U)
(declare-fun $generated@@48 () T@U)
(declare-fun $generated@@49 () T@U)
(declare-fun $generated@@50 () T@U)
(declare-fun $generated@@51 () T@U)
(declare-fun $generated@@52 () T@U)
(declare-fun $generated@@53 () T@U)
(declare-fun $generated@@54 () T@U)
(declare-fun $generated@@55 () T@U)
(declare-fun $generated@@56 () T@U)
(declare-fun $generated@@57 () T@U)
(declare-fun $generated@@58 () T@U)
(declare-fun $generated@@59 () T@U)
(declare-fun $generated@@60 () T@U)
(declare-fun $generated@@61 () T@U)
(declare-fun $generated@@62 () T@U)
(declare-fun $generated@@63 () T@U)
(declare-fun $generated@@64 () T@U)
(declare-fun $generated@@65 () T@U)
(declare-fun $generated@@66 () T@T)
(declare-fun $generated@@67 () T@T)
(declare-fun $generated@@68 (T@T) T@T)
(declare-fun $generated@@69 (T@T) T@T)
(declare-fun $generated@@70 () T@T)
(declare-fun $generated@@71 () T@T)
(declare-fun $generated@@74 (T@U) T@U)
(declare-fun $generated@@76 (T@U T@U T@U) Bool)
(declare-fun $generated@@77 (Int) T@U)
(declare-fun $generated@@78 (T@T T@T) T@T)
(declare-fun $generated@@79 () T@T)
(declare-fun $generated@@80 () T@T)
(declare-fun $generated@@81 (T@T) T@T)
(declare-fun $generated@@82 (T@T) T@T)
(declare-fun $generated@@83 (T@U T@U) T@U)
(declare-fun $generated@@84 (T@U T@U T@U) T@U)
(declare-fun $generated@@85 (T@U T@U) T@U)
(declare-fun $generated@@86 (T@U T@U T@U) T@U)
(declare-fun $generated@@134 () T@U)
(declare-fun $generated@@137 (T@U T@U) Bool)
(declare-fun $generated@@139 (T@U) Bool)
(declare-fun $generated@@140 (T@U T@U) T@U)
(declare-fun $generated@@141 () T@T)
(declare-fun $generated@@147 (T@U T@U) Bool)
(declare-fun $generated@@148 (T@U) T@U)
(declare-fun $generated@@149 (T@U) T@U)
(declare-fun $generated@@150 () T@T)
(declare-fun $generated@@155 (T@U) T@U)
(declare-fun $generated@@156 (T@U) Bool)
(declare-fun $generated@@160 (T@U T@U T@U) T@U)
(declare-fun $generated@@161 (T@U T@U T@U Bool) T@U)
(declare-fun $generated@@162 (T@T T@T) T@T)
(declare-fun $generated@@163 (T@T) T@T)
(declare-fun $generated@@164 (T@T) T@T)
(declare-fun $generated@@165 (T@U T@U T@U T@U) T@U)
(declare-fun $generated@@216 (T@U T@U) T@U)
(declare-fun $generated@@217 (T@U T@U) Bool)
(declare-fun $generated@@226 (T@U) T@U)
(declare-fun $generated@@231 (T@U) T@U)
(declare-fun $generated@@236 (Int) Int)
(declare-fun $generated@@238 (T@U) T@U)
(declare-fun $generated@@242 (T@U) Bool)
(declare-fun $generated@@243 (T@U T@U T@U) Bool)
(declare-fun $generated@@249 (T@U) T@U)
(declare-fun $generated@@255 (T@T) T@U)
(declare-fun $generated@@256 (T@U) Int)
(declare-fun $generated@@257 (T@T) T@T)
(declare-fun $generated@@258 (T@T) T@T)
(declare-fun $generated@@263 (T@U) T@U)
(declare-fun $generated@@268 (T@U) Int)
(declare-fun $generated@@269 (T@T) T@U)
(declare-fun $generated@@274 (T@U) T@U)
(declare-fun $generated@@275 (T@T T@T) T@U)
(declare-fun $generated@@276 (T@T T@T) T@T)
(declare-fun $generated@@277 (T@T) T@T)
(declare-fun $generated@@278 (T@T) T@T)
(declare-fun $generated@@292 (T@U) T@U)
(declare-fun $generated@@293 (T@T T@T) T@U)
(declare-fun $generated@@294 (T@T T@T) T@T)
(declare-fun $generated@@295 (T@T) T@T)
(declare-fun $generated@@296 (T@T) T@T)
(declare-fun $generated@@313 (T@T T@U) T@U)
(declare-fun $generated@@321 (T@U) T@U)
(declare-fun $generated@@332 (T@U) T@U)
(declare-fun $generated@@352 (T@U) T@U)
(declare-fun $generated@@353 (T@U) T@U)
(declare-fun $generated@@360 (T@U) T@U)
(declare-fun $generated@@361 (T@U) T@U)
(declare-fun $generated@@378 (T@U T@U) T@U)
(declare-fun $generated@@386 (T@U T@U) T@U)
(declare-fun $generated@@394 (T@T) T@U)
(declare-fun $generated@@418 () T@T)
(declare-fun $generated@@426 (T@U) T@U)
(declare-fun $generated@@430 (T@U) T@U)
(declare-fun $generated@@436 (T@U) T@U)
(declare-fun $generated@@440 (T@U) T@U)
(declare-fun $generated@@448 (T@U) T@U)
(declare-fun $generated@@452 (T@U) T@U)
(declare-fun $generated@@460 (T@U) T@U)
(declare-fun $generated@@461 (T@U Int) T@U)
(declare-fun $generated@@470 (T@U) Int)
(declare-fun $generated@@472 (T@U) T@U)
(declare-fun $generated@@476 (T@U) T@U)
(declare-fun $generated@@480 (T@U) T@U)
(declare-fun $generated@@484 (T@U) T@U)
(declare-fun $generated@@498 (T@U) Int)
(declare-fun $generated@@499 (T@U) Int)
(declare-fun $generated@@515 (T@U) T@U)
(declare-fun $generated@@565 (T@U) Int)
(assert  (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (= ($generated@@1 $generated@@2) 0) (= ($generated@@1 $generated@@3) 1)) (= ($generated@@1 $generated@@4) 2)) (= ($generated@@1 $generated@@5) 3)) (= ($generated@@1 $generated@@6) 4)) (= ($generated@@1 $generated@@7) 5)) (forall (($generated@@18 Int) ) (! (= ($generated ($generated@@8 $generated@@18)) $generated@@18)
 :pattern ( ($generated@@8 $generated@@18))
))) (forall (($generated@@19 T@U) ) (!  (=> (= (type $generated@@19) $generated@@2) (= ($generated@@8 ($generated $generated@@19)) $generated@@19))
 :pattern ( ($generated $generated@@19))
))) (forall (($generated@@20 Int) ) (! (= (type ($generated@@8 $generated@@20)) $generated@@2)
 :pattern ( ($generated@@8 $generated@@20))
))) (forall (($generated@@21 Real) ) (! (= ($generated@@10 ($generated@@9 $generated@@21)) $generated@@21)
 :pattern ( ($generated@@9 $generated@@21))
))) (forall (($generated@@22 T@U) ) (!  (=> (= (type $generated@@22) $generated@@3) (= ($generated@@9 ($generated@@10 $generated@@22)) $generated@@22))
 :pattern ( ($generated@@10 $generated@@22))
))) (forall (($generated@@23 Real) ) (! (= (type ($generated@@9 $generated@@23)) $generated@@3)
 :pattern ( ($generated@@9 $generated@@23))
))) (forall (($generated@@24 Bool) ) (! (= ($generated@@0 ($generated@@11 $generated@@24)) $generated@@24)
 :pattern ( ($generated@@11 $generated@@24))
))) (forall (($generated@@25 T@U) ) (!  (=> (= (type $generated@@25) $generated@@4) (= ($generated@@11 ($generated@@0 $generated@@25)) $generated@@25))
 :pattern ( ($generated@@0 $generated@@25))
))) (forall (($generated@@26 Bool) ) (! (= (type ($generated@@11 $generated@@26)) $generated@@4)
 :pattern ( ($generated@@11 $generated@@26))
))) (forall (($generated@@27 RoundingMode) ) (! (= ($generated@@13 ($generated@@12 $generated@@27)) $generated@@27)
 :pattern ( ($generated@@12 $generated@@27))
))) (forall (($generated@@28 T@U) ) (!  (=> (= (type $generated@@28) $generated@@5) (= ($generated@@12 ($generated@@13 $generated@@28)) $generated@@28))
 :pattern ( ($generated@@13 $generated@@28))
))) (forall (($generated@@29 RoundingMode) ) (! (= (type ($generated@@12 $generated@@29)) $generated@@5)
 :pattern ( ($generated@@12 $generated@@29))
))) (forall (($generated@@30 String) ) (! (= ($generated@@15 ($generated@@14 $generated@@30)) $generated@@30)
 :pattern ( ($generated@@14 $generated@@30))
))) (forall (($generated@@31 T@U) ) (!  (=> (= (type $generated@@31) $generated@@6) (= ($generated@@14 ($generated@@15 $generated@@31)) $generated@@31))
 :pattern ( ($generated@@15 $generated@@31))
))) (forall (($generated@@32 String) ) (! (= (type ($generated@@14 $generated@@32)) $generated@@6)
 :pattern ( ($generated@@14 $generated@@32))
))) (forall (($generated@@33 (RegEx String)) ) (! (= ($generated@@17 ($generated@@16 $generated@@33)) $generated@@33)
 :pattern ( ($generated@@16 $generated@@33))
))) (forall (($generated@@34 T@U) ) (!  (=> (= (type $generated@@34) $generated@@7) (= ($generated@@16 ($generated@@17 $generated@@34)) $generated@@34))
 :pattern ( ($generated@@17 $generated@@34))
))) (forall (($generated@@35 (RegEx String)) ) (! (= (type ($generated@@16 $generated@@35)) $generated@@7)
 :pattern ( ($generated@@16 $generated@@35))
))))
(assert (forall (($generated@@36 T@U) ) (! (UOrdering2 $generated@@36 $generated@@36)
 :no-pattern ($generated $generated@@36)
 :no-pattern ($generated@@0 $generated@@36)
)))
(assert (forall (($generated@@37 T@U) ($generated@@38 T@U) ($generated@@39 T@U) ) (! (let (($generated@@40 (type $generated@@37)))
 (=> (and (and (= (type $generated@@38) $generated@@40) (= (type $generated@@39) $generated@@40)) (and (UOrdering2 $generated@@37 $generated@@38) (UOrdering2 $generated@@38 $generated@@39))) (UOrdering2 $generated@@37 $generated@@39)))
 :pattern ( (UOrdering2 $generated@@37 $generated@@38) (UOrdering2 $generated@@38 $generated@@39))
)))
(assert (forall (($generated@@41 T@U) ($generated@@42 T@U) ) (! (let (($generated@@43 (type $generated@@41)))
 (=> (= (type $generated@@42) $generated@@43) (=> (and (UOrdering2 $generated@@41 $generated@@42) (UOrdering2 $generated@@42 $generated@@41)) (= $generated@@41 $generated@@42))))
 :pattern ( (UOrdering2 $generated@@41 $generated@@42) (UOrdering2 $generated@@42 $generated@@41))
)))
(assert  (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (= ($generated@@1 $generated@@66) 6) (= (type $generated@@44) $generated@@66)) (= (type $generated@@45) $generated@@66)) (= (type $generated@@46) $generated@@66)) (= (type $generated@@47) $generated@@66)) (= (type $generated@@48) $generated@@66)) (= ($generated@@1 $generated@@67) 7)) (= (type $generated@@49) $generated@@67)) (= (type $generated@@50) $generated@@67)) (= (type $generated@@51) $generated@@67)) (= (type $generated@@52) $generated@@67)) (= (type $generated@@53) $generated@@67)) (= (type $generated@@54) $generated@@67)) (= (type $generated@@55) $generated@@67)) (= (type $generated@@56) $generated@@67)) (= (type $generated@@57) $generated@@67)) (= (type $generated@@58) $generated@@67)) (= (type $generated@@59) $generated@@67)) (forall (($generated@@72 T@T) ) (= ($generated@@1 ($generated@@68 $generated@@72)) 8))) (forall (($generated@@73 T@T) ) (! (= ($generated@@69 ($generated@@68 $generated@@73)) $generated@@73)
 :pattern ( ($generated@@68 $generated@@73))
))) (= (type $generated@@60) ($generated@@68 $generated@@4))) (= ($generated@@1 $generated@@70) 9)) (= (type $generated@@61) $generated@@70)) (= (type $generated@@62) $generated@@67)) (= (type $generated@@63) $generated@@67)) (= ($generated@@1 $generated@@71) 10)) (= (type $generated@@64) $generated@@71)) (= (type $generated@@65) $generated@@71)))
(assert (distinct $generated@@44 $generated@@45 $generated@@46 $generated@@47 $generated@@48 $generated@@49 $generated@@50 $generated@@51 $generated@@52 $generated@@53 $generated@@54 $generated@@55 $generated@@56 $generated@@57 $generated@@58 $generated@@59 $generated@@60 $generated@@61 $generated@@62 $generated@@63 $generated@@64 $generated@@65)
)
(assert (forall (($generated@@75 T@U) ) (! (= (type ($generated@@74 $generated@@75)) $generated@@67)
 :pattern ( ($generated@@74 $generated@@75))
)))
(assert (= ($generated@@74 $generated@@44) $generated@@49))
(assert (= ($generated@@74 $generated@@45) $generated@@50))
(assert (= ($generated@@74 $generated@@46) $generated@@51))
(assert (= ($generated@@74 $generated@@47) $generated@@52))
(assert (= ($generated@@74 $generated@@48) $generated@@53))
(assert  (and (and (and (and (and (and (and (and (and (and (and (and (and (forall (($generated@@87 T@T) ($generated@@88 T@T) ) (= ($generated@@1 ($generated@@78 $generated@@87 $generated@@88)) 11)) (forall (($generated@@89 T@T) ($generated@@90 T@T) ) (! (= ($generated@@81 ($generated@@78 $generated@@89 $generated@@90)) $generated@@89)
 :pattern ( ($generated@@78 $generated@@89 $generated@@90))
))) (forall (($generated@@91 T@T) ($generated@@92 T@T) ) (! (= ($generated@@82 ($generated@@78 $generated@@91 $generated@@92)) $generated@@92)
 :pattern ( ($generated@@78 $generated@@91 $generated@@92))
))) (forall (($generated@@93 T@U) ($generated@@94 T@U) ) (! (let (($generated@@95 ($generated@@82 (type $generated@@93))))
(= (type ($generated@@83 $generated@@93 $generated@@94)) $generated@@95))
 :pattern ( ($generated@@83 $generated@@93 $generated@@94))
))) (forall (($generated@@96 T@U) ($generated@@97 T@U) ($generated@@98 T@U) ) (! (let (($generated@@99 (type $generated@@98)))
(let (($generated@@100 (type $generated@@97)))
(= (type ($generated@@84 $generated@@96 $generated@@97 $generated@@98)) ($generated@@78 $generated@@100 $generated@@99))))
 :pattern ( ($generated@@84 $generated@@96 $generated@@97 $generated@@98))
))) (forall (($generated@@101 T@U) ($generated@@102 T@U) ($generated@@103 T@U) ) (! (let (($generated@@104 ($generated@@82 (type $generated@@101))))
 (=> (= (type $generated@@103) $generated@@104) (= ($generated@@83 ($generated@@84 $generated@@101 $generated@@102 $generated@@103) $generated@@102) $generated@@103)))
 :weight 0
))) (and (forall (($generated@@105 T@U) ($generated@@106 T@U) ($generated@@107 T@U) ($generated@@108 T@U) ) (!  (or (= $generated@@107 $generated@@108) (= ($generated@@83 ($generated@@84 $generated@@106 $generated@@107 $generated@@105) $generated@@108) ($generated@@83 $generated@@106 $generated@@108)))
 :weight 0
)) (forall (($generated@@109 T@U) ($generated@@110 T@U) ($generated@@111 T@U) ($generated@@112 T@U) ) (!  (or true (= ($generated@@83 ($generated@@84 $generated@@110 $generated@@111 $generated@@109) $generated@@112) ($generated@@83 $generated@@110 $generated@@112)))
 :weight 0
)))) (= ($generated@@1 $generated@@79) 12)) (forall (($generated@@113 T@U) ($generated@@114 T@U) ) (! (let (($generated@@115 ($generated@@69 (type $generated@@114))))
(= (type ($generated@@85 $generated@@113 $generated@@114)) $generated@@115))
 :pattern ( ($generated@@85 $generated@@113 $generated@@114))
))) (= ($generated@@1 $generated@@80) 13)) (forall (($generated@@116 T@U) ($generated@@117 T@U) ($generated@@118 T@U) ) (! (= (type ($generated@@86 $generated@@116 $generated@@117 $generated@@118)) $generated@@80)
 :pattern ( ($generated@@86 $generated@@116 $generated@@117 $generated@@118))
))) (forall (($generated@@119 T@U) ($generated@@120 T@U) ($generated@@121 T@U) ) (! (let (($generated@@122 ($generated@@69 (type $generated@@120))))
 (=> (= (type $generated@@121) $generated@@122) (= ($generated@@85 ($generated@@86 $generated@@119 $generated@@120 $generated@@121) $generated@@120) $generated@@121)))
 :weight 0
))) (and (forall (($generated@@123 T@U) ($generated@@124 T@U) ($generated@@125 T@U) ($generated@@126 T@U) ) (!  (or (= $generated@@125 $generated@@126) (= ($generated@@85 ($generated@@86 $generated@@124 $generated@@125 $generated@@123) $generated@@126) ($generated@@85 $generated@@124 $generated@@126)))
 :weight 0
)) (forall (($generated@@127 T@U) ($generated@@128 T@U) ($generated@@129 T@U) ($generated@@130 T@U) ) (!  (or true (= ($generated@@85 ($generated@@86 $generated@@128 $generated@@129 $generated@@127) $generated@@130) ($generated@@85 $generated@@128 $generated@@130)))
 :weight 0
)))) (forall (($generated@@131 Int) ) (! (= (type ($generated@@77 $generated@@131)) $generated@@66)
 :pattern ( ($generated@@77 $generated@@131))
))))
(assert (forall (($generated@@132 T@U) ($generated@@133 T@U) ) (!  (=> (and (= (type $generated@@132) $generated@@2) (= (type $generated@@133) ($generated@@78 $generated@@79 $generated@@80))) ($generated@@76 $generated@@132 ($generated@@77 0) $generated@@133))
 :pattern ( ($generated@@76 $generated@@132 ($generated@@77 0) $generated@@133))
)))
(assert (= (type $generated@@134) $generated@@66))
(assert (forall (($generated@@135 T@U) ($generated@@136 T@U) ) (!  (=> (and (= (type $generated@@135) $generated@@2) (= (type $generated@@136) ($generated@@78 $generated@@79 $generated@@80))) ($generated@@76 $generated@@135 $generated@@134 $generated@@136))
 :pattern ( ($generated@@76 $generated@@135 $generated@@134 $generated@@136))
)))
(assert (forall (($generated@@138 T@U) ) (!  (=> (= (type $generated@@138) $generated@@2) ($generated@@137 $generated@@138 ($generated@@77 0)))
 :pattern ( ($generated@@137 $generated@@138 ($generated@@77 0)))
)))
(assert  (and (= ($generated@@1 $generated@@141) 14) (forall (($generated@@142 T@U) ($generated@@143 T@U) ) (! (= (type ($generated@@140 $generated@@142 $generated@@143)) $generated@@66)
 :pattern ( ($generated@@140 $generated@@142 $generated@@143))
))))
(assert (forall (($generated@@144 T@U) ($generated@@145 T@U) ($generated@@146 T@U) ) (!  (=> (and (and (and (= (type $generated@@144) $generated@@66) (= (type $generated@@145) $generated@@66)) (= (type $generated@@146) $generated@@141)) ($generated@@137 $generated@@146 ($generated@@140 $generated@@144 $generated@@145))) ($generated@@139 $generated@@146))
 :pattern ( ($generated@@139 $generated@@146) ($generated@@137 $generated@@146 ($generated@@140 $generated@@144 $generated@@145)))
)))
(assert  (and (and (= ($generated@@1 $generated@@150) 15) (forall (($generated@@151 T@U) ) (! (= (type ($generated@@148 $generated@@151)) $generated@@150)
 :pattern ( ($generated@@148 $generated@@151))
))) (forall (($generated@@152 T@U) ) (! (= (type ($generated@@149 $generated@@152)) $generated@@150)
 :pattern ( ($generated@@149 $generated@@152))
))))
(assert (forall (($generated@@153 T@U) ($generated@@154 T@U) ) (!  (=> (and (and (= (type $generated@@153) $generated@@141) (= (type $generated@@154) $generated@@141)) true) (= ($generated@@147 $generated@@153 $generated@@154)  (and (= ($generated@@148 $generated@@153) ($generated@@148 $generated@@154)) (= ($generated@@149 $generated@@153) ($generated@@149 $generated@@154)))))
 :pattern ( ($generated@@147 $generated@@153 $generated@@154))
)))
(assert (forall (($generated@@157 T@U) ) (! (= (type ($generated@@155 $generated@@157)) $generated@@66)
 :pattern ( ($generated@@155 $generated@@157))
)))
(assert (forall (($generated@@158 T@U) ($generated@@159 T@U) ) (!  (=> (and (and (= (type $generated@@158) ($generated@@78 $generated@@150 $generated@@2)) (= (type $generated@@159) $generated@@66)) ($generated@@137 $generated@@158 ($generated@@155 $generated@@159))) ($generated@@156 $generated@@158))
 :pattern ( ($generated@@137 $generated@@158 ($generated@@155 $generated@@159)))
)))
(assert  (and (and (and (and (and (and (and (forall (($generated@@166 T@T) ($generated@@167 T@T) ) (= ($generated@@1 ($generated@@162 $generated@@166 $generated@@167)) 16)) (forall (($generated@@168 T@T) ($generated@@169 T@T) ) (! (= ($generated@@163 ($generated@@162 $generated@@168 $generated@@169)) $generated@@168)
 :pattern ( ($generated@@162 $generated@@168 $generated@@169))
))) (forall (($generated@@170 T@T) ($generated@@171 T@T) ) (! (= ($generated@@164 ($generated@@162 $generated@@170 $generated@@171)) $generated@@171)
 :pattern ( ($generated@@162 $generated@@170 $generated@@171))
))) (forall (($generated@@172 T@U) ($generated@@173 T@U) ($generated@@174 T@U) ) (! (let (($generated@@175 ($generated@@164 (type $generated@@172))))
(= (type ($generated@@160 $generated@@172 $generated@@173 $generated@@174)) $generated@@175))
 :pattern ( ($generated@@160 $generated@@172 $generated@@173 $generated@@174))
))) (forall (($generated@@176 T@U) ($generated@@177 T@U) ($generated@@178 T@U) ($generated@@179 T@U) ) (! (let (($generated@@180 (type $generated@@179)))
(let (($generated@@181 (type $generated@@177)))
(= (type ($generated@@165 $generated@@176 $generated@@177 $generated@@178 $generated@@179)) ($generated@@162 $generated@@181 $generated@@180))))
 :pattern ( ($generated@@165 $generated@@176 $generated@@177 $generated@@178 $generated@@179))
))) (forall (($generated@@182 T@U) ($generated@@183 T@U) ($generated@@184 T@U) ($generated@@185 T@U) ) (! (let (($generated@@186 ($generated@@164 (type $generated@@182))))
 (=> (= (type $generated@@185) $generated@@186) (= ($generated@@160 ($generated@@165 $generated@@182 $generated@@183 $generated@@184 $generated@@185) $generated@@183 $generated@@184) $generated@@185)))
 :weight 0
))) (and (and (forall (($generated@@187 T@U) ($generated@@188 T@U) ($generated@@189 T@U) ($generated@@190 T@U) ($generated@@191 T@U) ($generated@@192 T@U) ) (!  (or (= $generated@@189 $generated@@191) (= ($generated@@160 ($generated@@165 $generated@@188 $generated@@189 $generated@@190 $generated@@187) $generated@@191 $generated@@192) ($generated@@160 $generated@@188 $generated@@191 $generated@@192)))
 :weight 0
)) (forall (($generated@@193 T@U) ($generated@@194 T@U) ($generated@@195 T@U) ($generated@@196 T@U) ($generated@@197 T@U) ($generated@@198 T@U) ) (!  (or (= $generated@@196 $generated@@198) (= ($generated@@160 ($generated@@165 $generated@@194 $generated@@195 $generated@@196 $generated@@193) $generated@@197 $generated@@198) ($generated@@160 $generated@@194 $generated@@197 $generated@@198)))
 :weight 0
))) (forall (($generated@@199 T@U) ($generated@@200 T@U) ($generated@@201 T@U) ($generated@@202 T@U) ($generated@@203 T@U) ($generated@@204 T@U) ) (!  (or true (= ($generated@@160 ($generated@@165 $generated@@200 $generated@@201 $generated@@202 $generated@@199) $generated@@203 $generated@@204) ($generated@@160 $generated@@200 $generated@@203 $generated@@204)))
 :weight 0
)))) (forall (($generated@@205 T@U) ($generated@@206 T@U) ($generated@@207 T@U) ($generated@@208 Bool) ) (! (= (type ($generated@@161 $generated@@205 $generated@@206 $generated@@207 $generated@@208)) ($generated@@162 $generated@@79 $generated@@4))
 :pattern ( ($generated@@161 $generated@@205 $generated@@206 $generated@@207 $generated@@208))
))))
(assert (forall (($generated@@209 T@U) ($generated@@210 T@U) ($generated@@211 T@U) ($generated@@212 Bool) ($generated@@213 T@U) ($generated@@214 T@U) ) (! (let (($generated@@215 ($generated@@69 (type $generated@@214))))
 (=> (and (and (and (and (= (type $generated@@209) $generated@@79) (= (type $generated@@210) ($generated@@78 $generated@@79 $generated@@80))) (= (type $generated@@211) ($generated@@68 $generated@@4))) (= (type $generated@@213) $generated@@79)) (= (type $generated@@214) ($generated@@68 $generated@@215))) (= ($generated@@0 ($generated@@160 ($generated@@161 $generated@@209 $generated@@210 $generated@@211 $generated@@212) $generated@@213 $generated@@214))  (=> (and (not (= $generated@@213 $generated@@209)) ($generated@@0 ($generated@@85 ($generated@@83 $generated@@210 $generated@@213) $generated@@211))) $generated@@212))))
 :pattern ( ($generated@@160 ($generated@@161 $generated@@209 $generated@@210 $generated@@211 $generated@@212) $generated@@213 $generated@@214))
)))
(assert (forall (($generated@@218 T@U) ($generated@@219 T@U) ) (! (= (type ($generated@@216 $generated@@218 $generated@@219)) $generated@@141)
 :pattern ( ($generated@@216 $generated@@218 $generated@@219))
)))
(assert (forall (($generated@@220 T@U) ($generated@@221 T@U) ($generated@@222 T@U) ($generated@@223 T@U) ) (!  (=> (and (and (and (= (type $generated@@220) $generated@@66) (= (type $generated@@221) $generated@@66)) (= (type $generated@@222) $generated@@150)) (= (type $generated@@223) $generated@@150)) (= ($generated@@137 ($generated@@216 $generated@@222 $generated@@223) ($generated@@140 $generated@@220 $generated@@221))  (and ($generated@@217 $generated@@222 $generated@@220) ($generated@@217 $generated@@223 $generated@@221))))
 :pattern ( ($generated@@137 ($generated@@216 $generated@@222 $generated@@223) ($generated@@140 $generated@@220 $generated@@221)))
)))
(assert (forall (($generated@@224 T@U) ($generated@@225 T@U) ) (!  (=> (and (= (type $generated@@224) $generated@@141) (= (type $generated@@225) $generated@@141)) (= ($generated@@147 $generated@@224 $generated@@225) (= $generated@@224 $generated@@225)))
 :pattern ( ($generated@@147 $generated@@224 $generated@@225))
)))
(assert (forall (($generated@@227 T@U) ) (! (= (type ($generated@@226 $generated@@227)) $generated@@66)
 :pattern ( ($generated@@226 $generated@@227))
)))
(assert (forall (($generated@@228 T@U) ($generated@@229 T@U) ) (!  (=> (and (= (type $generated@@228) ($generated@@78 $generated@@150 $generated@@4)) (= (type $generated@@229) $generated@@66)) (= ($generated@@137 $generated@@228 ($generated@@226 $generated@@229)) (forall (($generated@@230 T@U) ) (!  (=> (and (= (type $generated@@230) $generated@@150) ($generated@@0 ($generated@@83 $generated@@228 $generated@@230))) ($generated@@217 $generated@@230 $generated@@229))
 :pattern ( ($generated@@83 $generated@@228 $generated@@230))
))))
 :pattern ( ($generated@@137 $generated@@228 ($generated@@226 $generated@@229)))
)))
(assert (forall (($generated@@232 T@U) ) (! (= (type ($generated@@231 $generated@@232)) $generated@@66)
 :pattern ( ($generated@@231 $generated@@232))
)))
(assert (forall (($generated@@233 T@U) ($generated@@234 T@U) ) (!  (=> (and (= (type $generated@@233) ($generated@@78 $generated@@150 $generated@@4)) (= (type $generated@@234) $generated@@66)) (= ($generated@@137 $generated@@233 ($generated@@231 $generated@@234)) (forall (($generated@@235 T@U) ) (!  (=> (and (= (type $generated@@235) $generated@@150) ($generated@@0 ($generated@@83 $generated@@233 $generated@@235))) ($generated@@217 $generated@@235 $generated@@234))
 :pattern ( ($generated@@83 $generated@@233 $generated@@235))
))))
 :pattern ( ($generated@@137 $generated@@233 ($generated@@231 $generated@@234)))
)))
(assert (forall (($generated@@237 Int) ) (! (= ($generated@@236 $generated@@237) $generated@@237)
 :pattern ( ($generated@@236 $generated@@237))
)))
(assert (forall (($generated@@239 T@U) ) (! (let (($generated@@240 (type $generated@@239)))
(= (type ($generated@@238 $generated@@239)) $generated@@240))
 :pattern ( ($generated@@238 $generated@@239))
)))
(assert (forall (($generated@@241 T@U) ) (! (= ($generated@@238 $generated@@241) $generated@@241)
 :pattern ( ($generated@@238 $generated@@241))
)))
(assert (forall (($generated@@244 T@U) ($generated@@245 T@U) ($generated@@246 T@U) ($generated@@247 T@U) ($generated@@248 T@U) ) (!  (=> (and (and (and (and (and (= (type $generated@@244) $generated@@66) (= (type $generated@@245) $generated@@66)) (= (type $generated@@246) $generated@@150)) (= (type $generated@@247) $generated@@150)) (= (type $generated@@248) ($generated@@78 $generated@@79 $generated@@80))) ($generated@@242 $generated@@248)) (= ($generated@@76 ($generated@@216 $generated@@246 $generated@@247) ($generated@@140 $generated@@244 $generated@@245) $generated@@248)  (and ($generated@@243 $generated@@246 $generated@@244 $generated@@248) ($generated@@243 $generated@@247 $generated@@245 $generated@@248))))
 :pattern ( ($generated@@76 ($generated@@216 $generated@@246 $generated@@247) ($generated@@140 $generated@@244 $generated@@245) $generated@@248))
)))
(assert (forall (($generated@@250 T@U) ) (! (= (type ($generated@@249 $generated@@250)) $generated@@70)
 :pattern ( ($generated@@249 $generated@@250))
)))
(assert (forall (($generated@@251 T@U) ) (!  (=> (= (type $generated@@251) $generated@@141) (= ($generated@@139 $generated@@251) (= ($generated@@249 $generated@@251) $generated@@61)))
 :pattern ( ($generated@@139 $generated@@251))
)))
(assert (forall (($generated@@252 T@U) ) (!  (=> (and (= (type $generated@@252) $generated@@141) ($generated@@139 $generated@@252)) (exists (($generated@@253 T@U) ($generated@@254 T@U) ) (!  (and (and (= (type $generated@@253) $generated@@150) (= (type $generated@@254) $generated@@150)) (= $generated@@252 ($generated@@216 $generated@@253 $generated@@254)))
 :no-pattern (type $generated@@253)
 :no-pattern (type $generated@@254)
 :no-pattern ($generated $generated@@253)
 :no-pattern ($generated@@0 $generated@@253)
 :no-pattern ($generated $generated@@254)
 :no-pattern ($generated@@0 $generated@@254)
)))
 :pattern ( ($generated@@139 $generated@@252))
)))
(assert  (and (and (forall (($generated@@259 T@T) ) (= ($generated@@1 ($generated@@257 $generated@@259)) 17)) (forall (($generated@@260 T@T) ) (! (= ($generated@@258 ($generated@@257 $generated@@260)) $generated@@260)
 :pattern ( ($generated@@257 $generated@@260))
))) (forall (($generated@@261 T@T) ) (! (= (type ($generated@@255 $generated@@261)) ($generated@@257 $generated@@261))
 :pattern ( ($generated@@255 $generated@@261))
))))
(assert (forall (($generated@@262 T@T) ) (! (= ($generated@@256 ($generated@@255 $generated@@262)) 0)
 :pattern ( ($generated@@255 $generated@@262))
)))
(assert (forall (($generated@@264 T@U) ) (! (= (type ($generated@@263 $generated@@264)) $generated@@150)
 :pattern ( ($generated@@263 $generated@@264))
)))
(assert (forall (($generated@@265 T@U) ($generated@@266 T@U) ($generated@@267 T@U) ) (!  (=> (and (= (type $generated@@266) $generated@@66) (= (type $generated@@267) ($generated@@78 $generated@@79 $generated@@80))) (= ($generated@@243 ($generated@@263 $generated@@265) $generated@@266 $generated@@267) ($generated@@76 $generated@@265 $generated@@266 $generated@@267)))
 :pattern ( ($generated@@243 ($generated@@263 $generated@@265) $generated@@266 $generated@@267))
)))
(assert (forall (($generated@@270 T@T) ) (! (= (type ($generated@@269 $generated@@270)) ($generated@@78 $generated@@270 $generated@@2))
 :pattern ( ($generated@@269 $generated@@270))
)))
(assert (forall (($generated@@271 T@U) ) (! (let (($generated@@272 ($generated@@81 (type $generated@@271))))
 (=> (= (type $generated@@271) ($generated@@78 $generated@@272 $generated@@2)) (and (= (= ($generated@@268 $generated@@271) 0) (= $generated@@271 ($generated@@269 $generated@@272))) (=> (not (= ($generated@@268 $generated@@271) 0)) (exists (($generated@@273 T@U) ) (!  (and (= (type $generated@@273) $generated@@272) (< 0 ($generated ($generated@@83 $generated@@271 $generated@@273))))
 :no-pattern (type $generated@@273)
 :no-pattern ($generated $generated@@273)
 :no-pattern ($generated@@0 $generated@@273)
))))))
 :pattern ( ($generated@@268 $generated@@271))
)))
(assert  (and (and (and (and (forall (($generated@@279 T@T) ($generated@@280 T@T) ) (= ($generated@@1 ($generated@@276 $generated@@279 $generated@@280)) 18)) (forall (($generated@@281 T@T) ($generated@@282 T@T) ) (! (= ($generated@@277 ($generated@@276 $generated@@281 $generated@@282)) $generated@@281)
 :pattern ( ($generated@@276 $generated@@281 $generated@@282))
))) (forall (($generated@@283 T@T) ($generated@@284 T@T) ) (! (= ($generated@@278 ($generated@@276 $generated@@283 $generated@@284)) $generated@@284)
 :pattern ( ($generated@@276 $generated@@283 $generated@@284))
))) (forall (($generated@@285 T@U) ) (! (let (($generated@@286 ($generated@@277 (type $generated@@285))))
(= (type ($generated@@274 $generated@@285)) ($generated@@78 $generated@@286 $generated@@4)))
 :pattern ( ($generated@@274 $generated@@285))
))) (forall (($generated@@287 T@T) ($generated@@288 T@T) ) (! (= (type ($generated@@275 $generated@@287 $generated@@288)) ($generated@@276 $generated@@287 $generated@@288))
 :pattern ( ($generated@@275 $generated@@287 $generated@@288))
))))
(assert (forall (($generated@@289 T@U) ($generated@@290 T@T) ) (! (let (($generated@@291 (type $generated@@289)))
 (not ($generated@@0 ($generated@@83 ($generated@@274 ($generated@@275 $generated@@291 $generated@@290)) $generated@@289))))
 :pattern ( (let (($generated@@291 (type $generated@@289)))
($generated@@83 ($generated@@274 ($generated@@275 $generated@@291 $generated@@290)) $generated@@289)))
)))
(assert  (and (and (and (and (forall (($generated@@297 T@T) ($generated@@298 T@T) ) (= ($generated@@1 ($generated@@294 $generated@@297 $generated@@298)) 19)) (forall (($generated@@299 T@T) ($generated@@300 T@T) ) (! (= ($generated@@295 ($generated@@294 $generated@@299 $generated@@300)) $generated@@299)
 :pattern ( ($generated@@294 $generated@@299 $generated@@300))
))) (forall (($generated@@301 T@T) ($generated@@302 T@T) ) (! (= ($generated@@296 ($generated@@294 $generated@@301 $generated@@302)) $generated@@302)
 :pattern ( ($generated@@294 $generated@@301 $generated@@302))
))) (forall (($generated@@303 T@U) ) (! (let (($generated@@304 ($generated@@295 (type $generated@@303))))
(= (type ($generated@@292 $generated@@303)) ($generated@@78 $generated@@304 $generated@@4)))
 :pattern ( ($generated@@292 $generated@@303))
))) (forall (($generated@@305 T@T) ($generated@@306 T@T) ) (! (= (type ($generated@@293 $generated@@305 $generated@@306)) ($generated@@294 $generated@@305 $generated@@306))
 :pattern ( ($generated@@293 $generated@@305 $generated@@306))
))))
(assert (forall (($generated@@307 T@U) ($generated@@308 T@T) ) (! (let (($generated@@309 (type $generated@@307)))
 (not ($generated@@0 ($generated@@83 ($generated@@292 ($generated@@293 $generated@@309 $generated@@308)) $generated@@307))))
 :pattern ( (let (($generated@@309 (type $generated@@307)))
($generated@@83 ($generated@@292 ($generated@@293 $generated@@309 $generated@@308)) $generated@@307)))
)))
(assert (forall (($generated@@310 T@U) ) (! (let (($generated@@311 ($generated@@81 (type $generated@@310))))
 (=> (= (type $generated@@310) ($generated@@78 $generated@@311 $generated@@2)) (= ($generated@@156 $generated@@310) (forall (($generated@@312 T@U) ) (!  (=> (= (type $generated@@312) $generated@@311) (and (<= 0 ($generated ($generated@@83 $generated@@310 $generated@@312))) (<= ($generated ($generated@@83 $generated@@310 $generated@@312)) ($generated@@268 $generated@@310))))
 :pattern ( ($generated@@83 $generated@@310 $generated@@312))
)))))
 :pattern ( ($generated@@156 $generated@@310))
)))
(assert (forall (($generated@@314 T@T) ($generated@@315 T@U) ) (! (= (type ($generated@@313 $generated@@314 $generated@@315)) $generated@@314)
 :pattern ( ($generated@@313 $generated@@314 $generated@@315))
)))
(assert (forall (($generated@@316 T@U) ) (!  (=> (and (= (type $generated@@316) $generated@@150) ($generated@@217 $generated@@316 $generated@@134)) (and (= ($generated@@263 ($generated@@313 $generated@@2 $generated@@316)) $generated@@316) ($generated@@137 ($generated@@313 $generated@@2 $generated@@316) $generated@@134)))
 :pattern ( ($generated@@217 $generated@@316 $generated@@134))
)))
(assert (forall (($generated@@317 T@U) ) (! (let (($generated@@318 ($generated@@278 (type $generated@@317))))
(let (($generated@@319 ($generated@@277 (type $generated@@317))))
 (=> (= (type $generated@@317) ($generated@@276 $generated@@319 $generated@@318)) (or (= $generated@@317 ($generated@@275 $generated@@319 $generated@@318)) (exists (($generated@@320 T@U) ) (!  (and (= (type $generated@@320) $generated@@319) ($generated@@0 ($generated@@83 ($generated@@274 $generated@@317) $generated@@320)))
 :no-pattern (type $generated@@320)
 :no-pattern ($generated $generated@@320)
 :no-pattern ($generated@@0 $generated@@320)
))))))
 :pattern ( ($generated@@274 $generated@@317))
)))
(assert (forall (($generated@@322 T@U) ) (! (let (($generated@@323 ($generated@@278 (type $generated@@322))))
(= (type ($generated@@321 $generated@@322)) ($generated@@78 $generated@@323 $generated@@4)))
 :pattern ( ($generated@@321 $generated@@322))
)))
(assert (forall (($generated@@324 T@U) ) (! (let (($generated@@325 ($generated@@278 (type $generated@@324))))
(let (($generated@@326 ($generated@@277 (type $generated@@324))))
 (=> (= (type $generated@@324) ($generated@@276 $generated@@326 $generated@@325)) (or (= $generated@@324 ($generated@@275 $generated@@326 $generated@@325)) (exists (($generated@@327 T@U) ) (!  (and (= (type $generated@@327) $generated@@325) ($generated@@0 ($generated@@83 ($generated@@321 $generated@@324) $generated@@327)))
 :no-pattern (type $generated@@327)
 :no-pattern ($generated $generated@@327)
 :no-pattern ($generated@@0 $generated@@327)
))))))
 :pattern ( ($generated@@321 $generated@@324))
)))
(assert (forall (($generated@@328 T@U) ) (! (let (($generated@@329 ($generated@@296 (type $generated@@328))))
(let (($generated@@330 ($generated@@295 (type $generated@@328))))
 (=> (= (type $generated@@328) ($generated@@294 $generated@@330 $generated@@329)) (or (= $generated@@328 ($generated@@293 $generated@@330 $generated@@329)) (exists (($generated@@331 T@U) ) (!  (and (= (type $generated@@331) $generated@@330) ($generated@@0 ($generated@@83 ($generated@@292 $generated@@328) $generated@@331)))
 :no-pattern (type $generated@@331)
 :no-pattern ($generated $generated@@331)
 :no-pattern ($generated@@0 $generated@@331)
))))))
 :pattern ( ($generated@@292 $generated@@328))
)))
(assert (forall (($generated@@333 T@U) ) (! (let (($generated@@334 ($generated@@296 (type $generated@@333))))
(= (type ($generated@@332 $generated@@333)) ($generated@@78 $generated@@334 $generated@@4)))
 :pattern ( ($generated@@332 $generated@@333))
)))
(assert (forall (($generated@@335 T@U) ) (! (let (($generated@@336 ($generated@@296 (type $generated@@335))))
(let (($generated@@337 ($generated@@295 (type $generated@@335))))
 (=> (= (type $generated@@335) ($generated@@294 $generated@@337 $generated@@336)) (or (= $generated@@335 ($generated@@293 $generated@@337 $generated@@336)) (exists (($generated@@338 T@U) ) (!  (and (= (type $generated@@338) $generated@@336) ($generated@@0 ($generated@@83 ($generated@@332 $generated@@335) $generated@@338)))
 :no-pattern (type $generated@@338)
 :no-pattern ($generated $generated@@338)
 :no-pattern ($generated@@0 $generated@@338)
))))))
 :pattern ( ($generated@@332 $generated@@335))
)))
(assert (forall (($generated@@339 T@U) ($generated@@340 T@U) ) (!  (=> (and (= (type $generated@@339) ($generated@@78 $generated@@150 $generated@@2)) (= (type $generated@@340) $generated@@66)) (= ($generated@@137 $generated@@339 ($generated@@155 $generated@@340)) (forall (($generated@@341 T@U) ) (!  (=> (and (= (type $generated@@341) $generated@@150) (< 0 ($generated ($generated@@83 $generated@@339 $generated@@341)))) ($generated@@217 $generated@@341 $generated@@340))
 :pattern ( ($generated@@83 $generated@@339 $generated@@341))
))))
 :pattern ( ($generated@@137 $generated@@339 ($generated@@155 $generated@@340)))
)))
(assert (forall (($generated@@342 T@U) ($generated@@343 T@U) ($generated@@344 T@U) ) (!  (=> (and (and (= (type $generated@@342) ($generated@@78 $generated@@150 $generated@@4)) (= (type $generated@@343) $generated@@66)) (= (type $generated@@344) ($generated@@78 $generated@@79 $generated@@80))) (= ($generated@@76 $generated@@342 ($generated@@226 $generated@@343) $generated@@344) (forall (($generated@@345 T@U) ) (!  (=> (and (= (type $generated@@345) $generated@@150) ($generated@@0 ($generated@@83 $generated@@342 $generated@@345))) ($generated@@243 $generated@@345 $generated@@343 $generated@@344))
 :pattern ( ($generated@@83 $generated@@342 $generated@@345))
))))
 :pattern ( ($generated@@76 $generated@@342 ($generated@@226 $generated@@343) $generated@@344))
)))
(assert (forall (($generated@@346 T@U) ($generated@@347 T@U) ($generated@@348 T@U) ) (!  (=> (and (and (= (type $generated@@346) ($generated@@78 $generated@@150 $generated@@4)) (= (type $generated@@347) $generated@@66)) (= (type $generated@@348) ($generated@@78 $generated@@79 $generated@@80))) (= ($generated@@76 $generated@@346 ($generated@@231 $generated@@347) $generated@@348) (forall (($generated@@349 T@U) ) (!  (=> (and (= (type $generated@@349) $generated@@150) ($generated@@0 ($generated@@83 $generated@@346 $generated@@349))) ($generated@@243 $generated@@349 $generated@@347 $generated@@348))
 :pattern ( ($generated@@83 $generated@@346 $generated@@349))
))))
 :pattern ( ($generated@@76 $generated@@346 ($generated@@231 $generated@@347) $generated@@348))
)))
(assert (forall (($generated@@350 T@U) ) (! (let (($generated@@351 (type $generated@@350)))
(= ($generated ($generated@@83 ($generated@@269 $generated@@351) $generated@@350)) 0))
 :pattern ( (let (($generated@@351 (type $generated@@350)))
($generated@@83 ($generated@@269 $generated@@351) $generated@@350)))
)))
(assert  (and (forall (($generated@@354 T@U) ) (! (= (type ($generated@@352 $generated@@354)) ($generated@@78 $generated@@150 $generated@@4))
 :pattern ( ($generated@@352 $generated@@354))
)) (forall (($generated@@355 T@U) ) (! (let (($generated@@356 ($generated@@278 (type $generated@@355))))
(let (($generated@@357 ($generated@@277 (type $generated@@355))))
(= (type ($generated@@353 $generated@@355)) ($generated@@78 $generated@@357 $generated@@356))))
 :pattern ( ($generated@@353 $generated@@355))
))))
(assert (forall (($generated@@358 T@U) ($generated@@359 T@U) ) (!  (=> (and (= (type $generated@@358) ($generated@@276 $generated@@150 $generated@@150)) (= (type $generated@@359) $generated@@150)) (= ($generated@@0 ($generated@@83 ($generated@@352 $generated@@358) $generated@@359))  (and ($generated@@0 ($generated@@83 ($generated@@274 $generated@@358) ($generated@@148 ($generated@@313 $generated@@141 $generated@@359)))) (= ($generated@@83 ($generated@@353 $generated@@358) ($generated@@148 ($generated@@313 $generated@@141 $generated@@359))) ($generated@@149 ($generated@@313 $generated@@141 $generated@@359))))))
 :pattern ( ($generated@@83 ($generated@@352 $generated@@358) $generated@@359))
)))
(assert  (and (forall (($generated@@362 T@U) ) (! (= (type ($generated@@360 $generated@@362)) ($generated@@78 $generated@@150 $generated@@4))
 :pattern ( ($generated@@360 $generated@@362))
)) (forall (($generated@@363 T@U) ) (! (let (($generated@@364 ($generated@@296 (type $generated@@363))))
(let (($generated@@365 ($generated@@295 (type $generated@@363))))
(= (type ($generated@@361 $generated@@363)) ($generated@@78 $generated@@365 $generated@@364))))
 :pattern ( ($generated@@361 $generated@@363))
))))
(assert (forall (($generated@@366 T@U) ($generated@@367 T@U) ) (!  (=> (and (= (type $generated@@366) ($generated@@294 $generated@@150 $generated@@150)) (= (type $generated@@367) $generated@@150)) (= ($generated@@0 ($generated@@83 ($generated@@360 $generated@@366) $generated@@367))  (and ($generated@@0 ($generated@@83 ($generated@@292 $generated@@366) ($generated@@148 ($generated@@313 $generated@@141 $generated@@367)))) (= ($generated@@83 ($generated@@361 $generated@@366) ($generated@@148 ($generated@@313 $generated@@141 $generated@@367))) ($generated@@149 ($generated@@313 $generated@@141 $generated@@367))))))
 :pattern ( ($generated@@83 ($generated@@360 $generated@@366) $generated@@367))
)))
(assert (forall (($generated@@368 T@U) ($generated@@369 T@U) ) (! (let (($generated@@370 (type $generated@@369)))
(let (($generated@@371 ($generated@@277 (type $generated@@368))))
 (=> (= (type $generated@@368) ($generated@@276 $generated@@371 $generated@@370)) (= ($generated@@0 ($generated@@83 ($generated@@321 $generated@@368) $generated@@369)) (exists (($generated@@372 T@U) ) (!  (and (= (type $generated@@372) $generated@@371) (and ($generated@@0 ($generated@@83 ($generated@@274 $generated@@368) $generated@@372)) (= $generated@@369 ($generated@@83 ($generated@@353 $generated@@368) $generated@@372))))
 :pattern ( ($generated@@83 ($generated@@274 $generated@@368) $generated@@372))
 :pattern ( ($generated@@83 ($generated@@353 $generated@@368) $generated@@372))
))))))
 :pattern ( ($generated@@83 ($generated@@321 $generated@@368) $generated@@369))
)))
(assert (forall (($generated@@373 T@U) ($generated@@374 T@U) ) (! (let (($generated@@375 (type $generated@@374)))
(let (($generated@@376 ($generated@@295 (type $generated@@373))))
 (=> (= (type $generated@@373) ($generated@@294 $generated@@376 $generated@@375)) (= ($generated@@0 ($generated@@83 ($generated@@332 $generated@@373) $generated@@374)) (exists (($generated@@377 T@U) ) (!  (and (= (type $generated@@377) $generated@@376) (and ($generated@@0 ($generated@@83 ($generated@@292 $generated@@373) $generated@@377)) (= $generated@@374 ($generated@@83 ($generated@@361 $generated@@373) $generated@@377))))
 :pattern ( ($generated@@83 ($generated@@292 $generated@@373) $generated@@377))
 :pattern ( ($generated@@83 ($generated@@361 $generated@@373) $generated@@377))
))))))
 :pattern ( ($generated@@83 ($generated@@332 $generated@@373) $generated@@374))
)))
(assert (forall (($generated@@379 T@U) ($generated@@380 T@U) ) (! (= (type ($generated@@378 $generated@@379 $generated@@380)) $generated@@66)
 :pattern ( ($generated@@378 $generated@@379 $generated@@380))
)))
(assert (forall (($generated@@381 T@U) ($generated@@382 T@U) ($generated@@383 T@U) ($generated@@384 T@U) ) (!  (=> (and (and (and (= (type $generated@@381) ($generated@@276 $generated@@150 $generated@@150)) (= (type $generated@@382) $generated@@66)) (= (type $generated@@383) $generated@@66)) (= (type $generated@@384) ($generated@@78 $generated@@79 $generated@@80))) (= ($generated@@76 $generated@@381 ($generated@@378 $generated@@382 $generated@@383) $generated@@384) (forall (($generated@@385 T@U) ) (!  (=> (and (= (type $generated@@385) $generated@@150) ($generated@@0 ($generated@@83 ($generated@@274 $generated@@381) $generated@@385))) (and ($generated@@243 ($generated@@83 ($generated@@353 $generated@@381) $generated@@385) $generated@@383 $generated@@384) ($generated@@243 $generated@@385 $generated@@382 $generated@@384)))
 :pattern ( ($generated@@83 ($generated@@353 $generated@@381) $generated@@385))
 :pattern ( ($generated@@83 ($generated@@274 $generated@@381) $generated@@385))
))))
 :pattern ( ($generated@@76 $generated@@381 ($generated@@378 $generated@@382 $generated@@383) $generated@@384))
)))
(assert (forall (($generated@@387 T@U) ($generated@@388 T@U) ) (! (= (type ($generated@@386 $generated@@387 $generated@@388)) $generated@@66)
 :pattern ( ($generated@@386 $generated@@387 $generated@@388))
)))
(assert (forall (($generated@@389 T@U) ($generated@@390 T@U) ($generated@@391 T@U) ($generated@@392 T@U) ) (!  (=> (and (and (and (= (type $generated@@389) ($generated@@294 $generated@@150 $generated@@150)) (= (type $generated@@390) $generated@@66)) (= (type $generated@@391) $generated@@66)) (= (type $generated@@392) ($generated@@78 $generated@@79 $generated@@80))) (= ($generated@@76 $generated@@389 ($generated@@386 $generated@@390 $generated@@391) $generated@@392) (forall (($generated@@393 T@U) ) (!  (=> (and (= (type $generated@@393) $generated@@150) ($generated@@0 ($generated@@83 ($generated@@292 $generated@@389) $generated@@393))) (and ($generated@@243 ($generated@@83 ($generated@@361 $generated@@389) $generated@@393) $generated@@391 $generated@@392) ($generated@@243 $generated@@393 $generated@@390 $generated@@392)))
 :pattern ( ($generated@@83 ($generated@@361 $generated@@389) $generated@@393))
 :pattern ( ($generated@@83 ($generated@@292 $generated@@389) $generated@@393))
))))
 :pattern ( ($generated@@76 $generated@@389 ($generated@@386 $generated@@390 $generated@@391) $generated@@392))
)))
(assert (forall (($generated@@395 T@T) ) (! (= (type ($generated@@394 $generated@@395)) ($generated@@78 $generated@@395 $generated@@4))
 :pattern ( ($generated@@394 $generated@@395))
)))
(assert (forall (($generated@@396 T@U) ) (! (let (($generated@@397 ($generated@@296 (type $generated@@396))))
(let (($generated@@398 ($generated@@295 (type $generated@@396))))
 (=> (= (type $generated@@396) ($generated@@294 $generated@@398 $generated@@397)) (= (= $generated@@396 ($generated@@293 $generated@@398 $generated@@397)) (= ($generated@@292 $generated@@396) ($generated@@394 $generated@@398))))))
 :pattern ( ($generated@@292 $generated@@396))
)))
(assert (forall (($generated@@399 T@U) ) (! (let (($generated@@400 ($generated@@296 (type $generated@@399))))
(let (($generated@@401 ($generated@@295 (type $generated@@399))))
 (=> (= (type $generated@@399) ($generated@@294 $generated@@401 $generated@@400)) (= (= $generated@@399 ($generated@@293 $generated@@401 $generated@@400)) (= ($generated@@332 $generated@@399) ($generated@@394 $generated@@400))))))
 :pattern ( ($generated@@332 $generated@@399))
)))
(assert (forall (($generated@@402 T@U) ) (! (let (($generated@@403 ($generated@@296 (type $generated@@402))))
(let (($generated@@404 ($generated@@295 (type $generated@@402))))
 (=> (= (type $generated@@402) ($generated@@294 $generated@@404 $generated@@403)) (= (= $generated@@402 ($generated@@293 $generated@@404 $generated@@403)) (= ($generated@@360 $generated@@402) ($generated@@394 $generated@@150))))))
 :pattern ( ($generated@@360 $generated@@402))
)))
(assert (forall (($generated@@405 T@U) ) (! (let (($generated@@406 ($generated@@278 (type $generated@@405))))
(let (($generated@@407 ($generated@@277 (type $generated@@405))))
 (=> (= (type $generated@@405) ($generated@@276 $generated@@407 $generated@@406)) (or (= $generated@@405 ($generated@@275 $generated@@407 $generated@@406)) (exists (($generated@@408 T@U) ($generated@@409 T@U) ) (!  (and (and (= (type $generated@@408) $generated@@150) (= (type $generated@@409) $generated@@150)) ($generated@@0 ($generated@@83 ($generated@@352 $generated@@405) ($generated@@263 ($generated@@216 $generated@@408 $generated@@409)))))
 :no-pattern (type $generated@@408)
 :no-pattern (type $generated@@409)
 :no-pattern ($generated $generated@@408)
 :no-pattern ($generated@@0 $generated@@408)
 :no-pattern ($generated $generated@@409)
 :no-pattern ($generated@@0 $generated@@409)
))))))
 :pattern ( ($generated@@352 $generated@@405))
)))
(assert (forall (($generated@@410 T@U) ) (! (let (($generated@@411 ($generated@@296 (type $generated@@410))))
(let (($generated@@412 ($generated@@295 (type $generated@@410))))
 (=> (= (type $generated@@410) ($generated@@294 $generated@@412 $generated@@411)) (or (= $generated@@410 ($generated@@293 $generated@@412 $generated@@411)) (exists (($generated@@413 T@U) ($generated@@414 T@U) ) (!  (and (and (= (type $generated@@413) $generated@@150) (= (type $generated@@414) $generated@@150)) ($generated@@0 ($generated@@83 ($generated@@360 $generated@@410) ($generated@@263 ($generated@@216 $generated@@413 $generated@@414)))))
 :no-pattern (type $generated@@413)
 :no-pattern (type $generated@@414)
 :no-pattern ($generated $generated@@413)
 :no-pattern ($generated@@0 $generated@@413)
 :no-pattern ($generated $generated@@414)
 :no-pattern ($generated@@0 $generated@@414)
))))))
 :pattern ( ($generated@@360 $generated@@410))
)))
(assert (forall (($generated@@415 T@U) ) (!  (=> (and (= (type $generated@@415) $generated@@150) ($generated@@217 $generated@@415 $generated@@46)) (and (= ($generated@@263 ($generated@@313 $generated@@2 $generated@@415)) $generated@@415) ($generated@@137 ($generated@@313 $generated@@2 $generated@@415) $generated@@46)))
 :pattern ( ($generated@@217 $generated@@415 $generated@@46))
)))
(assert (forall (($generated@@416 T@U) ) (!  (=> (and (= (type $generated@@416) $generated@@150) ($generated@@217 $generated@@416 $generated@@47)) (and (= ($generated@@263 ($generated@@313 $generated@@3 $generated@@416)) $generated@@416) ($generated@@137 ($generated@@313 $generated@@3 $generated@@416) $generated@@47)))
 :pattern ( ($generated@@217 $generated@@416 $generated@@47))
)))
(assert (forall (($generated@@417 T@U) ) (!  (=> (and (= (type $generated@@417) $generated@@150) ($generated@@217 $generated@@417 $generated@@44)) (and (= ($generated@@263 ($generated@@313 $generated@@4 $generated@@417)) $generated@@417) ($generated@@137 ($generated@@313 $generated@@4 $generated@@417) $generated@@44)))
 :pattern ( ($generated@@217 $generated@@417 $generated@@44))
)))
(assert (= ($generated@@1 $generated@@418) 20))
(assert (forall (($generated@@419 T@U) ) (!  (=> (and (= (type $generated@@419) $generated@@150) ($generated@@217 $generated@@419 $generated@@45)) (and (= ($generated@@263 ($generated@@313 $generated@@418 $generated@@419)) $generated@@419) ($generated@@137 ($generated@@313 $generated@@418 $generated@@419) $generated@@45)))
 :pattern ( ($generated@@217 $generated@@419 $generated@@45))
)))
(assert (forall (($generated@@420 T@U) ($generated@@421 T@U) ) (!  (=> (= (type $generated@@421) $generated@@66) (= ($generated@@217 ($generated@@263 $generated@@420) $generated@@421) ($generated@@137 $generated@@420 $generated@@421)))
 :pattern ( ($generated@@217 ($generated@@263 $generated@@420) $generated@@421))
)))
(assert (forall (($generated@@422 T@U) ) (! (let (($generated@@423 ($generated@@81 (type $generated@@422))))
 (=> (= (type $generated@@422) ($generated@@78 $generated@@423 $generated@@2)) (<= 0 ($generated@@268 $generated@@422))))
 :pattern ( ($generated@@268 $generated@@422))
)))
(assert (forall (($generated@@424 T@U) ) (! (let (($generated@@425 ($generated@@258 (type $generated@@424))))
 (=> (= (type $generated@@424) ($generated@@257 $generated@@425)) (<= 0 ($generated@@256 $generated@@424))))
 :pattern ( ($generated@@256 $generated@@424))
)))
(assert (forall (($generated@@427 T@U) ) (! (= (type ($generated@@426 $generated@@427)) $generated@@66)
 :pattern ( ($generated@@426 $generated@@427))
)))
(assert (forall (($generated@@428 T@U) ($generated@@429 T@U) ) (!  (=> (and (= (type $generated@@428) $generated@@66) (= (type $generated@@429) $generated@@66)) (= ($generated@@426 ($generated@@378 $generated@@428 $generated@@429)) $generated@@428))
 :pattern ( ($generated@@378 $generated@@428 $generated@@429))
)))
(assert (forall (($generated@@431 T@U) ) (! (= (type ($generated@@430 $generated@@431)) $generated@@66)
 :pattern ( ($generated@@430 $generated@@431))
)))
(assert (forall (($generated@@432 T@U) ($generated@@433 T@U) ) (!  (=> (and (= (type $generated@@432) $generated@@66) (= (type $generated@@433) $generated@@66)) (= ($generated@@430 ($generated@@378 $generated@@432 $generated@@433)) $generated@@433))
 :pattern ( ($generated@@378 $generated@@432 $generated@@433))
)))
(assert (forall (($generated@@434 T@U) ($generated@@435 T@U) ) (!  (=> (and (= (type $generated@@434) $generated@@66) (= (type $generated@@435) $generated@@66)) (= ($generated@@74 ($generated@@378 $generated@@434 $generated@@435)) $generated@@58))
 :pattern ( ($generated@@378 $generated@@434 $generated@@435))
)))
(assert (forall (($generated@@437 T@U) ) (! (= (type ($generated@@436 $generated@@437)) $generated@@66)
 :pattern ( ($generated@@436 $generated@@437))
)))
(assert (forall (($generated@@438 T@U) ($generated@@439 T@U) ) (!  (=> (and (= (type $generated@@438) $generated@@66) (= (type $generated@@439) $generated@@66)) (= ($generated@@436 ($generated@@386 $generated@@438 $generated@@439)) $generated@@438))
 :pattern ( ($generated@@386 $generated@@438 $generated@@439))
)))
(assert (forall (($generated@@441 T@U) ) (! (= (type ($generated@@440 $generated@@441)) $generated@@66)
 :pattern ( ($generated@@440 $generated@@441))
)))
(assert (forall (($generated@@442 T@U) ($generated@@443 T@U) ) (!  (=> (and (= (type $generated@@442) $generated@@66) (= (type $generated@@443) $generated@@66)) (= ($generated@@440 ($generated@@386 $generated@@442 $generated@@443)) $generated@@443))
 :pattern ( ($generated@@386 $generated@@442 $generated@@443))
)))
(assert (forall (($generated@@444 T@U) ($generated@@445 T@U) ) (!  (=> (and (= (type $generated@@444) $generated@@66) (= (type $generated@@445) $generated@@66)) (= ($generated@@74 ($generated@@386 $generated@@444 $generated@@445)) $generated@@59))
 :pattern ( ($generated@@386 $generated@@444 $generated@@445))
)))
(assert (forall (($generated@@446 T@U) ($generated@@447 T@U) ) (!  (=> (and (= (type $generated@@446) $generated@@150) (= (type $generated@@447) $generated@@150)) (= ($generated@@249 ($generated@@216 $generated@@446 $generated@@447)) $generated@@61))
 :pattern ( ($generated@@216 $generated@@446 $generated@@447))
)))
(assert (forall (($generated@@449 T@U) ) (! (= (type ($generated@@448 $generated@@449)) $generated@@66)
 :pattern ( ($generated@@448 $generated@@449))
)))
(assert (forall (($generated@@450 T@U) ($generated@@451 T@U) ) (!  (=> (and (= (type $generated@@450) $generated@@66) (= (type $generated@@451) $generated@@66)) (= ($generated@@448 ($generated@@140 $generated@@450 $generated@@451)) $generated@@450))
 :pattern ( ($generated@@140 $generated@@450 $generated@@451))
)))
(assert (forall (($generated@@453 T@U) ) (! (= (type ($generated@@452 $generated@@453)) $generated@@66)
 :pattern ( ($generated@@452 $generated@@453))
)))
(assert (forall (($generated@@454 T@U) ($generated@@455 T@U) ) (!  (=> (and (= (type $generated@@454) $generated@@66) (= (type $generated@@455) $generated@@66)) (= ($generated@@452 ($generated@@140 $generated@@454 $generated@@455)) $generated@@455))
 :pattern ( ($generated@@140 $generated@@454 $generated@@455))
)))
(assert (forall (($generated@@456 T@U) ($generated@@457 T@U) ) (!  (=> (and (= (type $generated@@456) $generated@@150) (= (type $generated@@457) $generated@@150)) (= ($generated@@148 ($generated@@216 $generated@@456 $generated@@457)) $generated@@456))
 :pattern ( ($generated@@216 $generated@@456 $generated@@457))
)))
(assert (forall (($generated@@458 T@U) ($generated@@459 T@U) ) (!  (=> (and (= (type $generated@@458) $generated@@150) (= (type $generated@@459) $generated@@150)) (= ($generated@@149 ($generated@@216 $generated@@458 $generated@@459)) $generated@@459))
 :pattern ( ($generated@@216 $generated@@458 $generated@@459))
)))
(assert  (and (forall (($generated@@462 T@U) ) (! (= (type ($generated@@460 $generated@@462)) $generated@@66)
 :pattern ( ($generated@@460 $generated@@462))
)) (forall (($generated@@463 T@U) ($generated@@464 Int) ) (! (let (($generated@@465 ($generated@@258 (type $generated@@463))))
(= (type ($generated@@461 $generated@@463 $generated@@464)) $generated@@465))
 :pattern ( ($generated@@461 $generated@@463 $generated@@464))
))))
(assert (forall (($generated@@466 T@U) ($generated@@467 T@U) ($generated@@468 T@U) ) (!  (=> (and (and (= (type $generated@@466) ($generated@@257 $generated@@150)) (= (type $generated@@467) $generated@@66)) (= (type $generated@@468) ($generated@@78 $generated@@79 $generated@@80))) (= ($generated@@76 $generated@@466 ($generated@@460 $generated@@467) $generated@@468) (forall (($generated@@469 Int) ) (!  (=> (and (<= 0 $generated@@469) (< $generated@@469 ($generated@@256 $generated@@466))) ($generated@@243 ($generated@@461 $generated@@466 $generated@@469) $generated@@467 $generated@@468))
 :pattern ( ($generated@@461 $generated@@466 $generated@@469))
))))
 :pattern ( ($generated@@76 $generated@@466 ($generated@@460 $generated@@467) $generated@@468))
)))
(assert (forall (($generated@@471 Int) ) (! (= ($generated@@470 ($generated@@77 $generated@@471)) $generated@@471)
 :pattern ( ($generated@@77 $generated@@471))
)))
(assert (forall (($generated@@473 T@U) ) (! (= (type ($generated@@472 $generated@@473)) $generated@@66)
 :pattern ( ($generated@@472 $generated@@473))
)))
(assert (forall (($generated@@474 T@U) ) (!  (=> (= (type $generated@@474) $generated@@66) (= ($generated@@472 ($generated@@226 $generated@@474)) $generated@@474))
 :pattern ( ($generated@@226 $generated@@474))
)))
(assert (forall (($generated@@475 T@U) ) (!  (=> (= (type $generated@@475) $generated@@66) (= ($generated@@74 ($generated@@226 $generated@@475)) $generated@@54))
 :pattern ( ($generated@@226 $generated@@475))
)))
(assert (forall (($generated@@477 T@U) ) (! (= (type ($generated@@476 $generated@@477)) $generated@@66)
 :pattern ( ($generated@@476 $generated@@477))
)))
(assert (forall (($generated@@478 T@U) ) (!  (=> (= (type $generated@@478) $generated@@66) (= ($generated@@476 ($generated@@231 $generated@@478)) $generated@@478))
 :pattern ( ($generated@@231 $generated@@478))
)))
(assert (forall (($generated@@479 T@U) ) (!  (=> (= (type $generated@@479) $generated@@66) (= ($generated@@74 ($generated@@231 $generated@@479)) $generated@@55))
 :pattern ( ($generated@@231 $generated@@479))
)))
(assert (forall (($generated@@481 T@U) ) (! (= (type ($generated@@480 $generated@@481)) $generated@@66)
 :pattern ( ($generated@@480 $generated@@481))
)))
(assert (forall (($generated@@482 T@U) ) (!  (=> (= (type $generated@@482) $generated@@66) (= ($generated@@480 ($generated@@155 $generated@@482)) $generated@@482))
 :pattern ( ($generated@@155 $generated@@482))
)))
(assert (forall (($generated@@483 T@U) ) (!  (=> (= (type $generated@@483) $generated@@66) (= ($generated@@74 ($generated@@155 $generated@@483)) $generated@@56))
 :pattern ( ($generated@@155 $generated@@483))
)))
(assert (forall (($generated@@485 T@U) ) (! (= (type ($generated@@484 $generated@@485)) $generated@@66)
 :pattern ( ($generated@@484 $generated@@485))
)))
(assert (forall (($generated@@486 T@U) ) (!  (=> (= (type $generated@@486) $generated@@66) (= ($generated@@484 ($generated@@460 $generated@@486)) $generated@@486))
 :pattern ( ($generated@@460 $generated@@486))
)))
(assert (forall (($generated@@487 T@U) ) (!  (=> (= (type $generated@@487) $generated@@66) (= ($generated@@74 ($generated@@460 $generated@@487)) $generated@@57))
 :pattern ( ($generated@@460 $generated@@487))
)))
(assert (forall (($generated@@488 T@U) ) (! (let (($generated@@489 (type $generated@@488)))
(= ($generated@@313 $generated@@489 ($generated@@263 $generated@@488)) $generated@@488))
 :pattern ( ($generated@@263 $generated@@488))
)))
(assert (forall (($generated@@490 T@U) ($generated@@491 T@U) ($generated@@492 T@U) ) (!  (=> (and (and (= (type $generated@@490) ($generated@@276 $generated@@150 $generated@@150)) (= (type $generated@@491) $generated@@66)) (= (type $generated@@492) $generated@@66)) (= ($generated@@137 $generated@@490 ($generated@@378 $generated@@491 $generated@@492)) (forall (($generated@@493 T@U) ) (!  (=> (and (= (type $generated@@493) $generated@@150) ($generated@@0 ($generated@@83 ($generated@@274 $generated@@490) $generated@@493))) (and ($generated@@217 ($generated@@83 ($generated@@353 $generated@@490) $generated@@493) $generated@@492) ($generated@@217 $generated@@493 $generated@@491)))
 :pattern ( ($generated@@83 ($generated@@353 $generated@@490) $generated@@493))
 :pattern ( ($generated@@83 ($generated@@274 $generated@@490) $generated@@493))
))))
 :pattern ( ($generated@@137 $generated@@490 ($generated@@378 $generated@@491 $generated@@492)))
)))
(assert (forall (($generated@@494 T@U) ($generated@@495 T@U) ($generated@@496 T@U) ) (!  (=> (and (and (= (type $generated@@494) ($generated@@294 $generated@@150 $generated@@150)) (= (type $generated@@495) $generated@@66)) (= (type $generated@@496) $generated@@66)) (= ($generated@@137 $generated@@494 ($generated@@386 $generated@@495 $generated@@496)) (forall (($generated@@497 T@U) ) (!  (=> (and (= (type $generated@@497) $generated@@150) ($generated@@0 ($generated@@83 ($generated@@292 $generated@@494) $generated@@497))) (and ($generated@@217 ($generated@@83 ($generated@@361 $generated@@494) $generated@@497) $generated@@496) ($generated@@217 $generated@@497 $generated@@495)))
 :pattern ( ($generated@@83 ($generated@@361 $generated@@494) $generated@@497))
 :pattern ( ($generated@@83 ($generated@@292 $generated@@494) $generated@@497))
))))
 :pattern ( ($generated@@137 $generated@@494 ($generated@@386 $generated@@495 $generated@@496)))
)))
(assert (forall (($generated@@500 T@U) ($generated@@501 T@U) ) (!  (=> (and (= (type $generated@@500) $generated@@150) (= (type $generated@@501) $generated@@150)) (< ($generated@@498 $generated@@500) ($generated@@499 ($generated@@216 $generated@@500 $generated@@501))))
 :pattern ( ($generated@@216 $generated@@500 $generated@@501))
)))
(assert (forall (($generated@@502 T@U) ($generated@@503 T@U) ) (!  (=> (and (= (type $generated@@502) $generated@@150) (= (type $generated@@503) $generated@@150)) (< ($generated@@498 $generated@@503) ($generated@@499 ($generated@@216 $generated@@502 $generated@@503))))
 :pattern ( ($generated@@216 $generated@@502 $generated@@503))
)))
(assert (forall (($generated@@504 T@U) ($generated@@505 T@U) ($generated@@506 T@U) ) (!  (=> (and (and (and (= (type $generated@@504) $generated@@150) (= (type $generated@@505) $generated@@66)) (= (type $generated@@506) $generated@@66)) ($generated@@217 $generated@@504 ($generated@@378 $generated@@505 $generated@@506))) (and (= ($generated@@263 ($generated@@313 ($generated@@276 $generated@@150 $generated@@150) $generated@@504)) $generated@@504) ($generated@@137 ($generated@@313 ($generated@@276 $generated@@150 $generated@@150) $generated@@504) ($generated@@378 $generated@@505 $generated@@506))))
 :pattern ( ($generated@@217 $generated@@504 ($generated@@378 $generated@@505 $generated@@506)))
)))
(assert (forall (($generated@@507 T@U) ($generated@@508 T@U) ($generated@@509 T@U) ) (!  (=> (and (and (and (= (type $generated@@507) $generated@@150) (= (type $generated@@508) $generated@@66)) (= (type $generated@@509) $generated@@66)) ($generated@@217 $generated@@507 ($generated@@386 $generated@@508 $generated@@509))) (and (= ($generated@@263 ($generated@@313 ($generated@@294 $generated@@150 $generated@@150) $generated@@507)) $generated@@507) ($generated@@137 ($generated@@313 ($generated@@294 $generated@@150 $generated@@150) $generated@@507) ($generated@@386 $generated@@508 $generated@@509))))
 :pattern ( ($generated@@217 $generated@@507 ($generated@@386 $generated@@508 $generated@@509)))
)))
(assert (forall (($generated@@510 T@U) ($generated@@511 T@U) ($generated@@512 T@U) ) (!  (=> (and (and (and (= (type $generated@@510) $generated@@66) (= (type $generated@@511) $generated@@66)) (= (type $generated@@512) $generated@@150)) ($generated@@217 $generated@@512 ($generated@@140 $generated@@510 $generated@@511))) (and (= ($generated@@263 ($generated@@313 $generated@@141 $generated@@512)) $generated@@512) ($generated@@137 ($generated@@313 $generated@@141 $generated@@512) ($generated@@140 $generated@@510 $generated@@511))))
 :pattern ( ($generated@@217 $generated@@512 ($generated@@140 $generated@@510 $generated@@511)))
)))
(assert (forall (($generated@@513 T@U) ) (! (let (($generated@@514 (type $generated@@513)))
 (not ($generated@@0 ($generated@@83 ($generated@@394 $generated@@514) $generated@@513))))
 :pattern ( (let (($generated@@514 (type $generated@@513)))
($generated@@83 ($generated@@394 $generated@@514) $generated@@513)))
)))
(assert (forall (($generated@@516 T@U) ) (! (= (type ($generated@@515 $generated@@516)) $generated@@71)
 :pattern ( ($generated@@515 $generated@@516))
)))
(assert (forall (($generated@@517 T@U) ($generated@@518 T@U) ) (!  (=> (and (= (type $generated@@517) $generated@@66) (= (type $generated@@518) $generated@@66)) (and (= ($generated@@74 ($generated@@140 $generated@@517 $generated@@518)) $generated@@62) (= ($generated@@515 ($generated@@140 $generated@@517 $generated@@518)) $generated@@64)))
 :pattern ( ($generated@@140 $generated@@517 $generated@@518))
)))
(assert (forall (($generated@@519 T@U) ) (!  (=> (= (type $generated@@519) $generated@@141) (= ($generated@@498 ($generated@@263 $generated@@519)) ($generated@@499 $generated@@519)))
 :pattern ( ($generated@@498 ($generated@@263 $generated@@519)))
)))
(assert (forall (($generated@@520 T@U) ) (!  (=> (and (= (type $generated@@520) $generated@@150) ($generated@@217 $generated@@520 ($generated@@77 0))) (and (= ($generated@@263 ($generated@@313 $generated@@2 $generated@@520)) $generated@@520) ($generated@@137 ($generated@@313 ($generated@@78 $generated@@150 $generated@@4) $generated@@520) ($generated@@77 0))))
 :pattern ( ($generated@@217 $generated@@520 ($generated@@77 0)))
)))
(assert (forall (($generated@@521 T@U) ($generated@@522 T@U) ) (!  (=> (and (and (= (type $generated@@521) $generated@@150) (= (type $generated@@522) $generated@@66)) ($generated@@217 $generated@@521 ($generated@@226 $generated@@522))) (and (= ($generated@@263 ($generated@@313 ($generated@@78 $generated@@150 $generated@@4) $generated@@521)) $generated@@521) ($generated@@137 ($generated@@313 ($generated@@78 $generated@@150 $generated@@4) $generated@@521) ($generated@@226 $generated@@522))))
 :pattern ( ($generated@@217 $generated@@521 ($generated@@226 $generated@@522)))
)))
(assert (forall (($generated@@523 T@U) ($generated@@524 T@U) ) (!  (=> (and (and (= (type $generated@@523) $generated@@150) (= (type $generated@@524) $generated@@66)) ($generated@@217 $generated@@523 ($generated@@231 $generated@@524))) (and (= ($generated@@263 ($generated@@313 ($generated@@78 $generated@@150 $generated@@4) $generated@@523)) $generated@@523) ($generated@@137 ($generated@@313 ($generated@@78 $generated@@150 $generated@@4) $generated@@523) ($generated@@231 $generated@@524))))
 :pattern ( ($generated@@217 $generated@@523 ($generated@@231 $generated@@524)))
)))
(assert (forall (($generated@@525 T@U) ($generated@@526 T@U) ) (!  (=> (and (and (= (type $generated@@525) $generated@@150) (= (type $generated@@526) $generated@@66)) ($generated@@217 $generated@@525 ($generated@@155 $generated@@526))) (and (= ($generated@@263 ($generated@@313 ($generated@@78 $generated@@150 $generated@@2) $generated@@525)) $generated@@525) ($generated@@137 ($generated@@313 ($generated@@78 $generated@@150 $generated@@2) $generated@@525) ($generated@@155 $generated@@526))))
 :pattern ( ($generated@@217 $generated@@525 ($generated@@155 $generated@@526)))
)))
(assert (forall (($generated@@527 T@U) ($generated@@528 T@U) ) (!  (=> (and (and (= (type $generated@@527) $generated@@150) (= (type $generated@@528) $generated@@66)) ($generated@@217 $generated@@527 ($generated@@460 $generated@@528))) (and (= ($generated@@263 ($generated@@313 ($generated@@257 $generated@@150) $generated@@527)) $generated@@527) ($generated@@137 ($generated@@313 ($generated@@257 $generated@@150) $generated@@527) ($generated@@460 $generated@@528))))
 :pattern ( ($generated@@217 $generated@@527 ($generated@@460 $generated@@528)))
)))
(assert (= ($generated@@74 $generated@@134) $generated@@63))
(assert (= ($generated@@515 $generated@@134) $generated@@65))
(assert (forall (($generated@@529 T@U) ($generated@@530 T@U) ($generated@@531 T@U) ) (!  (=> (and (and (= (type $generated@@529) ($generated@@78 $generated@@150 $generated@@2)) (= (type $generated@@530) $generated@@66)) (= (type $generated@@531) ($generated@@78 $generated@@79 $generated@@80))) (= ($generated@@76 $generated@@529 ($generated@@155 $generated@@530) $generated@@531) (forall (($generated@@532 T@U) ) (!  (=> (and (= (type $generated@@532) $generated@@150) (< 0 ($generated ($generated@@83 $generated@@529 $generated@@532)))) ($generated@@243 $generated@@532 $generated@@530 $generated@@531))
 :pattern ( ($generated@@83 $generated@@529 $generated@@532))
))))
 :pattern ( ($generated@@76 $generated@@529 ($generated@@155 $generated@@530) $generated@@531))
)))
(assert (forall (($generated@@533 T@U) ($generated@@534 T@U) ($generated@@535 T@U) ) (!  (=> (and (and (and (= (type $generated@@533) $generated@@141) (= (type $generated@@534) $generated@@66)) (= (type $generated@@535) ($generated@@78 $generated@@79 $generated@@80))) (and ($generated@@242 $generated@@535) (and ($generated@@139 $generated@@533) (exists (($generated@@536 T@U) ) (!  (and (= (type $generated@@536) $generated@@66) ($generated@@76 $generated@@533 ($generated@@140 $generated@@534 $generated@@536) $generated@@535))
 :pattern ( ($generated@@76 $generated@@533 ($generated@@140 $generated@@534 $generated@@536) $generated@@535))
))))) ($generated@@243 ($generated@@148 $generated@@533) $generated@@534 $generated@@535))
 :pattern ( ($generated@@243 ($generated@@148 $generated@@533) $generated@@534 $generated@@535))
)))
(assert (forall (($generated@@537 T@U) ($generated@@538 T@U) ($generated@@539 T@U) ) (!  (=> (and (and (and (= (type $generated@@537) $generated@@141) (= (type $generated@@538) $generated@@66)) (= (type $generated@@539) ($generated@@78 $generated@@79 $generated@@80))) (and ($generated@@242 $generated@@539) (and ($generated@@139 $generated@@537) (exists (($generated@@540 T@U) ) (!  (and (= (type $generated@@540) $generated@@66) ($generated@@76 $generated@@537 ($generated@@140 $generated@@540 $generated@@538) $generated@@539))
 :pattern ( ($generated@@76 $generated@@537 ($generated@@140 $generated@@540 $generated@@538) $generated@@539))
))))) ($generated@@243 ($generated@@149 $generated@@537) $generated@@538 $generated@@539))
 :pattern ( ($generated@@243 ($generated@@149 $generated@@537) $generated@@538 $generated@@539))
)))
(assert (forall (($generated@@541 T@U) ) (!  (=> (= (type $generated@@541) $generated@@2) (= ($generated@@137 $generated@@541 $generated@@134)  (and (<= ($generated@@236 0) ($generated $generated@@541)) (< ($generated $generated@@541) 256))))
 :pattern ( ($generated@@137 $generated@@541 $generated@@134))
)))
(assert (forall (($generated@@542 T@U) ($generated@@543 T@U) ) (!  (=> (and (= (type $generated@@542) $generated@@150) (= (type $generated@@543) $generated@@150)) (= ($generated@@216 ($generated@@238 $generated@@542) ($generated@@238 $generated@@543)) ($generated@@238 ($generated@@216 $generated@@542 $generated@@543))))
 :pattern ( ($generated@@216 ($generated@@238 $generated@@542) ($generated@@238 $generated@@543)))
)))
(assert (forall (($generated@@544 Int) ) (! (= ($generated@@263 ($generated@@8 ($generated@@236 $generated@@544))) ($generated@@238 ($generated@@263 ($generated@@8 $generated@@544))))
 :pattern ( ($generated@@263 ($generated@@8 ($generated@@236 $generated@@544))))
)))
(assert (forall (($generated@@545 T@U) ) (! (= ($generated@@263 ($generated@@238 $generated@@545)) ($generated@@238 ($generated@@263 $generated@@545)))
 :pattern ( ($generated@@263 ($generated@@238 $generated@@545)))
)))
(assert (forall (($generated@@546 T@U) ) (! (let (($generated@@547 ($generated@@258 (type $generated@@546))))
 (=> (and (= (type $generated@@546) ($generated@@257 $generated@@547)) (= ($generated@@256 $generated@@546) 0)) (= $generated@@546 ($generated@@255 $generated@@547))))
 :pattern ( ($generated@@256 $generated@@546))
)))
(assert (forall (($generated@@548 T@U) ($generated@@549 T@U) ($generated@@550 T@U) ) (! (let (($generated@@551 (type $generated@@549)))
 (=> (and (and (= (type $generated@@548) ($generated@@78 $generated@@551 $generated@@2)) (= (type $generated@@550) $generated@@2)) (<= 0 ($generated $generated@@550))) (= ($generated@@268 ($generated@@84 $generated@@548 $generated@@549 $generated@@550)) (+ (- ($generated@@268 $generated@@548) ($generated ($generated@@83 $generated@@548 $generated@@549))) ($generated $generated@@550)))))
 :pattern ( ($generated@@268 ($generated@@84 $generated@@548 $generated@@549 $generated@@550)))
)))
(assert (forall (($generated@@552 T@U) ($generated@@553 T@U) ) (!  (=> (and (= (type $generated@@552) ($generated@@78 $generated@@79 $generated@@80)) (= (type $generated@@553) $generated@@2)) ($generated@@76 $generated@@553 $generated@@46 $generated@@552))
 :pattern ( ($generated@@76 $generated@@553 $generated@@46 $generated@@552))
)))
(assert (forall (($generated@@554 T@U) ($generated@@555 T@U) ) (!  (=> (and (= (type $generated@@554) ($generated@@78 $generated@@79 $generated@@80)) (= (type $generated@@555) $generated@@3)) ($generated@@76 $generated@@555 $generated@@47 $generated@@554))
 :pattern ( ($generated@@76 $generated@@555 $generated@@47 $generated@@554))
)))
(assert (forall (($generated@@556 T@U) ($generated@@557 T@U) ) (!  (=> (and (= (type $generated@@556) ($generated@@78 $generated@@79 $generated@@80)) (= (type $generated@@557) $generated@@4)) ($generated@@76 $generated@@557 $generated@@44 $generated@@556))
 :pattern ( ($generated@@76 $generated@@557 $generated@@44 $generated@@556))
)))
(assert (forall (($generated@@558 T@U) ($generated@@559 T@U) ) (!  (=> (and (= (type $generated@@558) ($generated@@78 $generated@@79 $generated@@80)) (= (type $generated@@559) $generated@@418)) ($generated@@76 $generated@@559 $generated@@45 $generated@@558))
 :pattern ( ($generated@@76 $generated@@559 $generated@@45 $generated@@558))
)))
(assert (forall (($generated@@560 T@U) ($generated@@561 T@U) ) (!  (=> (and (= (type $generated@@560) ($generated@@78 $generated@@79 $generated@@80)) (= (type $generated@@561) $generated@@150)) ($generated@@76 $generated@@561 $generated@@48 $generated@@560))
 :pattern ( ($generated@@76 $generated@@561 $generated@@48 $generated@@560))
)))
(assert (forall (($generated@@562 T@U) ($generated@@563 T@U) ) (!  (=> (and (= (type $generated@@562) ($generated@@257 $generated@@150)) (= (type $generated@@563) $generated@@66)) (= ($generated@@137 $generated@@562 ($generated@@460 $generated@@563)) (forall (($generated@@564 Int) ) (!  (=> (and (<= 0 $generated@@564) (< $generated@@564 ($generated@@256 $generated@@562))) ($generated@@217 ($generated@@461 $generated@@562 $generated@@564) $generated@@563))
 :pattern ( ($generated@@461 $generated@@562 $generated@@564))
))))
 :pattern ( ($generated@@137 $generated@@562 ($generated@@460 $generated@@563)))
)))
(assert (forall (($generated@@566 T@U) ($generated@@567 Int) ) (!  (=> (= (type $generated@@566) ($generated@@257 $generated@@150)) (=> (and (<= 0 $generated@@567) (< $generated@@567 ($generated@@256 $generated@@566))) (< ($generated@@499 ($generated@@313 $generated@@141 ($generated@@461 $generated@@566 $generated@@567))) ($generated@@565 $generated@@566))))
 :pattern ( ($generated@@499 ($generated@@313 $generated@@141 ($generated@@461 $generated@@566 $generated@@567))))
)))
(assert (forall (($generated@@568 T@U) ($generated@@569 T@U) ($generated@@570 T@U) ) (!  (=> (and (and (and (= (type $generated@@568) ($generated@@276 $generated@@150 $generated@@150)) (= (type $generated@@569) $generated@@66)) (= (type $generated@@570) $generated@@66)) ($generated@@137 $generated@@568 ($generated@@378 $generated@@569 $generated@@570))) (and (and ($generated@@137 ($generated@@274 $generated@@568) ($generated@@226 $generated@@569)) ($generated@@137 ($generated@@321 $generated@@568) ($generated@@226 $generated@@570))) ($generated@@137 ($generated@@352 $generated@@568) ($generated@@226 ($generated@@140 $generated@@569 $generated@@570)))))
 :pattern ( ($generated@@137 $generated@@568 ($generated@@378 $generated@@569 $generated@@570)))
)))
(assert (forall (($generated@@571 T@U) ($generated@@572 T@U) ($generated@@573 T@U) ) (!  (=> (and (and (and (= (type $generated@@571) ($generated@@294 $generated@@150 $generated@@150)) (= (type $generated@@572) $generated@@66)) (= (type $generated@@573) $generated@@66)) ($generated@@137 $generated@@571 ($generated@@386 $generated@@572 $generated@@573))) (and (and ($generated@@137 ($generated@@292 $generated@@571) ($generated@@231 $generated@@572)) ($generated@@137 ($generated@@332 $generated@@571) ($generated@@231 $generated@@573))) ($generated@@137 ($generated@@360 $generated@@571) ($generated@@231 ($generated@@140 $generated@@572 $generated@@573)))))
 :pattern ( ($generated@@137 $generated@@571 ($generated@@386 $generated@@572 $generated@@573)))
)))
(assert (forall (($generated@@574 T@U) ) (!  (=> (= (type $generated@@574) $generated@@2) ($generated@@137 $generated@@574 $generated@@46))
 :pattern ( ($generated@@137 $generated@@574 $generated@@46))
)))
(assert (forall (($generated@@575 T@U) ) (!  (=> (= (type $generated@@575) $generated@@3) ($generated@@137 $generated@@575 $generated@@47))
 :pattern ( ($generated@@137 $generated@@575 $generated@@47))
)))
(assert (forall (($generated@@576 T@U) ) (!  (=> (= (type $generated@@576) $generated@@4) ($generated@@137 $generated@@576 $generated@@44))
 :pattern ( ($generated@@137 $generated@@576 $generated@@44))
)))
(assert (forall (($generated@@577 T@U) ) (!  (=> (= (type $generated@@577) $generated@@418) ($generated@@137 $generated@@577 $generated@@45))
 :pattern ( ($generated@@137 $generated@@577 $generated@@45))
)))
(assert (forall (($generated@@578 T@U) ) (!  (=> (= (type $generated@@578) $generated@@150) ($generated@@137 $generated@@578 $generated@@48))
 :pattern ( ($generated@@137 $generated@@578 $generated@@48))
)))
(push 1)
(declare-fun ControlFlow (Int Int) Int)
(declare-fun $generated@@579 () T@U)
(declare-fun $generated@@580 () Int)
(declare-fun $generated@@581 () T@U)
(declare-fun $generated@@582 () T@U)
(declare-fun $generated@@583 () T@U)
(declare-fun $generated@@584 (T@U) Bool)
(declare-fun $generated@@585 () Int)
(assert  (and (and (and (= (type $generated@@579) ($generated@@257 $generated@@150)) (= (type $generated@@581) ($generated@@162 $generated@@79 $generated@@4))) (= (type $generated@@582) $generated@@79)) (= (type $generated@@583) ($generated@@78 $generated@@79 $generated@@80))))
(set-option :timeout 0)
(set-option :rlimit 0)
(assert (not
 (=> (= (ControlFlow 0 0) 14) (let (($generated@@586  (and (=> (= (ControlFlow 0 2) (- 0 3)) (<= ($generated@@236 0) ($generated ($generated@@313 $generated@@2 ($generated@@461 $generated@@579 ($generated@@236 0)))))) (=> (= (ControlFlow 0 2) (- 0 1)) (< ($generated ($generated@@313 $generated@@2 ($generated@@461 $generated@@579 ($generated@@236 0)))) 256)))))
(let (($generated@@587  (=> (and (< ($generated ($generated@@313 $generated@@2 ($generated@@461 $generated@@579 ($generated@@236 0)))) ($generated@@236 0)) (= (ControlFlow 0 6) 2)) $generated@@586)))
(let (($generated@@588  (=> (<= ($generated@@236 0) ($generated ($generated@@313 $generated@@2 ($generated@@461 $generated@@579 ($generated@@236 0))))) (and (=> (= (ControlFlow 0 4) (- 0 5)) (and (<= 0 ($generated@@236 0)) (< ($generated@@236 0) ($generated@@256 $generated@@579)))) (=> (= (ControlFlow 0 4) 2) $generated@@586)))))
(let (($generated@@589  (and (=> (= (ControlFlow 0 7) (- 0 10)) (<= ($generated@@236 0) $generated@@580)) (and (=> (= (ControlFlow 0 7) (- 0 9)) (< $generated@@580 256)) (=> (and (<= ($generated@@236 0) $generated@@580) (< $generated@@580 256)) (and (=> (= (ControlFlow 0 7) (- 0 8)) (and (<= 0 ($generated@@236 0)) (< ($generated@@236 0) ($generated@@256 $generated@@579)))) (and (=> (= (ControlFlow 0 7) 4) $generated@@588) (=> (= (ControlFlow 0 7) 6) $generated@@587))))))))
(let (($generated@@590  (=> (and (< $generated@@580 ($generated@@236 0)) (= (ControlFlow 0 12) 7)) $generated@@589)))
(let (($generated@@591  (=> (and (<= ($generated@@236 0) $generated@@580) (= (ControlFlow 0 11) 7)) $generated@@589)))
(let (($generated@@592  (=> (= $generated@@581 ($generated@@161 $generated@@582 $generated@@583 $generated@@60 false)) (and (=> (= (ControlFlow 0 13) 11) $generated@@591) (=> (= (ControlFlow 0 13) 12) $generated@@590)))))
(let (($generated@@593  (=> (and (and ($generated@@242 $generated@@583) ($generated@@584 $generated@@583)) (and ($generated@@137 $generated@@579 ($generated@@460 $generated@@134)) ($generated@@76 $generated@@579 ($generated@@460 $generated@@134) $generated@@583))) (=> (and (and (and (<= ($generated@@236 0) $generated@@580) (< $generated@@580 256)) (= 1 $generated@@585)) (and (= ($generated@@256 $generated@@579) ($generated@@236 1)) (= (ControlFlow 0 14) 13))) $generated@@592))))
$generated@@593)))))))))
))
(check-sat)
(pop 1)
; Valid
(get-info :rlimit)
(reset)
(set-option :rlimit 0)
; did a full reset
(reset)
(set-option :print-success false)
(set-info :smt-lib-version 2.6)
(set-option :auto_config false)
(set-option :type_check true)
(set-option :smt.case_split 3)
(set-option :smt.qi.eager_threshold 100)
(set-option :smt.delay_units true)
(set-option :smt.arith.solver 2)
(set-option :smt.mbqi false)
(set-option :model.compact false)
(set-option :model.v2 true)
(set-option :pp.bv_literals false)
; done setting options


(set-info :category "industrial")
(declare-sort |T@U| 0)
(declare-sort |T@T| 0)
(declare-fun real_pow (Real Real) Real)
(declare-fun UOrdering2 (|T@U| |T@U|) Bool)
(declare-fun UOrdering3 (|T@T| |T@U| |T@U|) Bool)
(declare-fun tickleBool (Bool) Bool)
(assert (and (tickleBool true) (tickleBool false)))
(declare-fun $generated (T@U) Int)
(declare-fun $generated@@0 (T@U) Bool)
(declare-fun $generated@@1 (T@T) Int)
(declare-fun $generated@@2 () T@T)
(declare-fun $generated@@3 () T@T)
(declare-fun $generated@@4 () T@T)
(declare-fun $generated@@5 () T@T)
(declare-fun $generated@@6 () T@T)
(declare-fun $generated@@7 () T@T)
(declare-fun $generated@@8 (Int) T@U)
(declare-fun type (T@U) T@T)
(declare-fun $generated@@9 (Real) T@U)
(declare-fun $generated@@10 (T@U) Real)
(declare-fun $generated@@11 (Bool) T@U)
(declare-fun $generated@@12 (RoundingMode) T@U)
(declare-fun $generated@@13 (T@U) RoundingMode)
(declare-fun $generated@@14 (String) T@U)
(declare-fun $generated@@15 (T@U) String)
(declare-fun $generated@@16 ((RegEx String)) T@U)
(declare-fun $generated@@17 (T@U) (RegEx String))
(declare-fun $generated@@44 () T@U)
(declare-fun $generated@@45 () T@U)
(declare-fun $generated@@46 () T@U)
(declare-fun $generated@@47 () T@U)
(declare-fun $generated@@48 () T@U)
(declare-fun $generated@@49 () T@U)
(declare-fun $generated@@50 () T@U)
(declare-fun $generated@@51 () T@U)
(declare-fun $generated@@52 () T@U)
(declare-fun $generated@@53 () T@U)
(declare-fun $generated@@54 () T@U)
(declare-fun $generated@@55 () T@U)
(declare-fun $generated@@56 () T@U)
(declare-fun $generated@@57 () T@U)
(declare-fun $generated@@58 () T@U)
(declare-fun $generated@@59 () T@U)
(declare-fun $generated@@60 () T@U)
(declare-fun $generated@@61 () T@U)
(declare-fun $generated@@62 () T@U)
(declare-fun $generated@@63 () T@U)
(declare-fun $generated@@64 () T@U)
(declare-fun $generated@@65 () T@U)
(declare-fun $generated@@66 () T@T)
(declare-fun $generated@@67 () T@T)
(declare-fun $generated@@68 (T@T) T@T)
(declare-fun $generated@@69 (T@T) T@T)
(declare-fun $generated@@70 () T@T)
(declare-fun $generated@@71 () T@T)
(declare-fun $generated@@74 (T@U) T@U)
(declare-fun $generated@@76 (T@U T@U T@U) Bool)
(declare-fun $generated@@77 (Int) T@U)
(declare-fun $generated@@78 (T@T T@T) T@T)
(declare-fun $generated@@79 () T@T)
(declare-fun $generated@@80 () T@T)
(declare-fun $generated@@81 (T@T) T@T)
(declare-fun $generated@@82 (T@T) T@T)
(declare-fun $generated@@83 (T@U T@U) T@U)
(declare-fun $generated@@84 (T@U T@U T@U) T@U)
(declare-fun $generated@@85 (T@U T@U) T@U)
(declare-fun $generated@@86 (T@U T@U T@U) T@U)
(declare-fun $generated@@134 () T@U)
(declare-fun $generated@@137 (T@U T@U) Bool)
(declare-fun $generated@@139 (T@U) Bool)
(declare-fun $generated@@140 (T@U T@U) T@U)
(declare-fun $generated@@141 () T@T)
(declare-fun $generated@@147 (T@U T@U) Bool)
(declare-fun $generated@@148 (T@U) T@U)
(declare-fun $generated@@149 (T@U) T@U)
(declare-fun $generated@@150 () T@T)
(declare-fun $generated@@155 (T@U T@U) Bool)
(declare-fun $generated@@156 (T@T) T@U)
(declare-fun $generated@@157 (T@T) T@T)
(declare-fun $generated@@158 (T@T) T@T)
(declare-fun $generated@@164 (T@U) T@U)
(declare-fun $generated@@165 (T@U) Bool)
(declare-fun $generated@@169 (T@U T@U T@U) T@U)
(declare-fun $generated@@170 (T@U T@U T@U Bool) T@U)
(declare-fun $generated@@171 (T@T T@T) T@T)
(declare-fun $generated@@172 (T@T) T@T)
(declare-fun $generated@@173 (T@T) T@T)
(declare-fun $generated@@174 (T@U T@U T@U T@U) T@U)
(declare-fun $generated@@225 (T@U T@U) T@U)
(declare-fun $generated@@226 (T@U T@U) Bool)
(declare-fun $generated@@235 (T@U) T@U)
(declare-fun $generated@@240 (T@U) T@U)
(declare-fun $generated@@245 (Int) Int)
(declare-fun $generated@@247 (T@U) T@U)
(declare-fun $generated@@251 (T@U) Bool)
(declare-fun $generated@@252 (T@U T@U T@U) Bool)
(declare-fun $generated@@258 (T@U) T@U)
(declare-fun $generated@@264 (T@U) Int)
(declare-fun $generated@@266 (T@U) T@U)
(declare-fun $generated@@271 (T@U) Int)
(declare-fun $generated@@272 (T@T) T@U)
(declare-fun $generated@@277 (T@U) T@U)
(declare-fun $generated@@278 (T@T T@T) T@U)
(declare-fun $generated@@279 (T@T T@T) T@T)
(declare-fun $generated@@280 (T@T) T@T)
(declare-fun $generated@@281 (T@T) T@T)
(declare-fun $generated@@295 (T@U) T@U)
(declare-fun $generated@@296 (T@T T@T) T@U)
(declare-fun $generated@@297 (T@T T@T) T@T)
(declare-fun $generated@@298 (T@T) T@T)
(declare-fun $generated@@299 (T@T) T@T)
(declare-fun $generated@@316 (T@T T@U) T@U)
(declare-fun $generated@@324 (T@U) T@U)
(declare-fun $generated@@335 (T@U) T@U)
(declare-fun $generated@@345 (T@U Int) T@U)
(declare-fun $generated@@363 (T@U) T@U)
(declare-fun $generated@@364 (T@U) T@U)
(declare-fun $generated@@371 (T@U) T@U)
(declare-fun $generated@@372 (T@U) T@U)
(declare-fun $generated@@389 (T@U T@U) T@U)
(declare-fun $generated@@397 (T@U T@U) T@U)
(declare-fun $generated@@405 (T@T) T@U)
(declare-fun $generated@@429 () T@T)
(declare-fun $generated@@437 (T@U) T@U)
(declare-fun $generated@@441 (T@U) T@U)
(declare-fun $generated@@447 (T@U) T@U)
(declare-fun $generated@@451 (T@U) T@U)
(declare-fun $generated@@459 (T@U) T@U)
(declare-fun $generated@@463 (T@U) T@U)
(declare-fun $generated@@471 (T@U) T@U)
(declare-fun $generated@@477 (T@U) Int)
(declare-fun $generated@@479 (T@U) T@U)
(declare-fun $generated@@483 (T@U) T@U)
(declare-fun $generated@@487 (T@U) T@U)
(declare-fun $generated@@491 (T@U) T@U)
(declare-fun $generated@@505 (T@U) Int)
(declare-fun $generated@@506 (T@U) Int)
(declare-fun $generated@@522 (T@U) T@U)
(declare-fun $generated@@572 (T@U) Int)
(assert  (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (= ($generated@@1 $generated@@2) 0) (= ($generated@@1 $generated@@3) 1)) (= ($generated@@1 $generated@@4) 2)) (= ($generated@@1 $generated@@5) 3)) (= ($generated@@1 $generated@@6) 4)) (= ($generated@@1 $generated@@7) 5)) (forall (($generated@@18 Int) ) (! (= ($generated ($generated@@8 $generated@@18)) $generated@@18)
 :pattern ( ($generated@@8 $generated@@18))
))) (forall (($generated@@19 T@U) ) (!  (=> (= (type $generated@@19) $generated@@2) (= ($generated@@8 ($generated $generated@@19)) $generated@@19))
 :pattern ( ($generated $generated@@19))
))) (forall (($generated@@20 Int) ) (! (= (type ($generated@@8 $generated@@20)) $generated@@2)
 :pattern ( ($generated@@8 $generated@@20))
))) (forall (($generated@@21 Real) ) (! (= ($generated@@10 ($generated@@9 $generated@@21)) $generated@@21)
 :pattern ( ($generated@@9 $generated@@21))
))) (forall (($generated@@22 T@U) ) (!  (=> (= (type $generated@@22) $generated@@3) (= ($generated@@9 ($generated@@10 $generated@@22)) $generated@@22))
 :pattern ( ($generated@@10 $generated@@22))
))) (forall (($generated@@23 Real) ) (! (= (type ($generated@@9 $generated@@23)) $generated@@3)
 :pattern ( ($generated@@9 $generated@@23))
))) (forall (($generated@@24 Bool) ) (! (= ($generated@@0 ($generated@@11 $generated@@24)) $generated@@24)
 :pattern ( ($generated@@11 $generated@@24))
))) (forall (($generated@@25 T@U) ) (!  (=> (= (type $generated@@25) $generated@@4) (= ($generated@@11 ($generated@@0 $generated@@25)) $generated@@25))
 :pattern ( ($generated@@0 $generated@@25))
))) (forall (($generated@@26 Bool) ) (! (= (type ($generated@@11 $generated@@26)) $generated@@4)
 :pattern ( ($generated@@11 $generated@@26))
))) (forall (($generated@@27 RoundingMode) ) (! (= ($generated@@13 ($generated@@12 $generated@@27)) $generated@@27)
 :pattern ( ($generated@@12 $generated@@27))
))) (forall (($generated@@28 T@U) ) (!  (=> (= (type $generated@@28) $generated@@5) (= ($generated@@12 ($generated@@13 $generated@@28)) $generated@@28))
 :pattern ( ($generated@@13 $generated@@28))
))) (forall (($generated@@29 RoundingMode) ) (! (= (type ($generated@@12 $generated@@29)) $generated@@5)
 :pattern ( ($generated@@12 $generated@@29))
))) (forall (($generated@@30 String) ) (! (= ($generated@@15 ($generated@@14 $generated@@30)) $generated@@30)
 :pattern ( ($generated@@14 $generated@@30))
))) (forall (($generated@@31 T@U) ) (!  (=> (= (type $generated@@31) $generated@@6) (= ($generated@@14 ($generated@@15 $generated@@31)) $generated@@31))
 :pattern ( ($generated@@15 $generated@@31))
))) (forall (($generated@@32 String) ) (! (= (type ($generated@@14 $generated@@32)) $generated@@6)
 :pattern ( ($generated@@14 $generated@@32))
))) (forall (($generated@@33 (RegEx String)) ) (! (= ($generated@@17 ($generated@@16 $generated@@33)) $generated@@33)
 :pattern ( ($generated@@16 $generated@@33))
))) (forall (($generated@@34 T@U) ) (!  (=> (= (type $generated@@34) $generated@@7) (= ($generated@@16 ($generated@@17 $generated@@34)) $generated@@34))
 :pattern ( ($generated@@17 $generated@@34))
))) (forall (($generated@@35 (RegEx String)) ) (! (= (type ($generated@@16 $generated@@35)) $generated@@7)
 :pattern ( ($generated@@16 $generated@@35))
))))
(assert (forall (($generated@@36 T@U) ) (! (UOrdering2 $generated@@36 $generated@@36)
 :no-pattern ($generated $generated@@36)
 :no-pattern ($generated@@0 $generated@@36)
)))
(assert (forall (($generated@@37 T@U) ($generated@@38 T@U) ($generated@@39 T@U) ) (! (let (($generated@@40 (type $generated@@37)))
 (=> (and (and (= (type $generated@@38) $generated@@40) (= (type $generated@@39) $generated@@40)) (and (UOrdering2 $generated@@37 $generated@@38) (UOrdering2 $generated@@38 $generated@@39))) (UOrdering2 $generated@@37 $generated@@39)))
 :pattern ( (UOrdering2 $generated@@37 $generated@@38) (UOrdering2 $generated@@38 $generated@@39))
)))
(assert (forall (($generated@@41 T@U) ($generated@@42 T@U) ) (! (let (($generated@@43 (type $generated@@41)))
 (=> (= (type $generated@@42) $generated@@43) (=> (and (UOrdering2 $generated@@41 $generated@@42) (UOrdering2 $generated@@42 $generated@@41)) (= $generated@@41 $generated@@42))))
 :pattern ( (UOrdering2 $generated@@41 $generated@@42) (UOrdering2 $generated@@42 $generated@@41))
)))
(assert  (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (= ($generated@@1 $generated@@66) 6) (= (type $generated@@44) $generated@@66)) (= (type $generated@@45) $generated@@66)) (= (type $generated@@46) $generated@@66)) (= (type $generated@@47) $generated@@66)) (= (type $generated@@48) $generated@@66)) (= ($generated@@1 $generated@@67) 7)) (= (type $generated@@49) $generated@@67)) (= (type $generated@@50) $generated@@67)) (= (type $generated@@51) $generated@@67)) (= (type $generated@@52) $generated@@67)) (= (type $generated@@53) $generated@@67)) (= (type $generated@@54) $generated@@67)) (= (type $generated@@55) $generated@@67)) (= (type $generated@@56) $generated@@67)) (= (type $generated@@57) $generated@@67)) (= (type $generated@@58) $generated@@67)) (= (type $generated@@59) $generated@@67)) (forall (($generated@@72 T@T) ) (= ($generated@@1 ($generated@@68 $generated@@72)) 8))) (forall (($generated@@73 T@T) ) (! (= ($generated@@69 ($generated@@68 $generated@@73)) $generated@@73)
 :pattern ( ($generated@@68 $generated@@73))
))) (= (type $generated@@60) ($generated@@68 $generated@@4))) (= ($generated@@1 $generated@@70) 9)) (= (type $generated@@61) $generated@@70)) (= (type $generated@@62) $generated@@67)) (= (type $generated@@63) $generated@@67)) (= ($generated@@1 $generated@@71) 10)) (= (type $generated@@64) $generated@@71)) (= (type $generated@@65) $generated@@71)))
(assert (distinct $generated@@44 $generated@@45 $generated@@46 $generated@@47 $generated@@48 $generated@@49 $generated@@50 $generated@@51 $generated@@52 $generated@@53 $generated@@54 $generated@@55 $generated@@56 $generated@@57 $generated@@58 $generated@@59 $generated@@60 $generated@@61 $generated@@62 $generated@@63 $generated@@64 $generated@@65)
)
(assert (forall (($generated@@75 T@U) ) (! (= (type ($generated@@74 $generated@@75)) $generated@@67)
 :pattern ( ($generated@@74 $generated@@75))
)))
(assert (= ($generated@@74 $generated@@44) $generated@@49))
(assert (= ($generated@@74 $generated@@45) $generated@@50))
(assert (= ($generated@@74 $generated@@46) $generated@@51))
(assert (= ($generated@@74 $generated@@47) $generated@@52))
(assert (= ($generated@@74 $generated@@48) $generated@@53))
(assert  (and (and (and (and (and (and (and (and (and (and (and (and (and (forall (($generated@@87 T@T) ($generated@@88 T@T) ) (= ($generated@@1 ($generated@@78 $generated@@87 $generated@@88)) 11)) (forall (($generated@@89 T@T) ($generated@@90 T@T) ) (! (= ($generated@@81 ($generated@@78 $generated@@89 $generated@@90)) $generated@@89)
 :pattern ( ($generated@@78 $generated@@89 $generated@@90))
))) (forall (($generated@@91 T@T) ($generated@@92 T@T) ) (! (= ($generated@@82 ($generated@@78 $generated@@91 $generated@@92)) $generated@@92)
 :pattern ( ($generated@@78 $generated@@91 $generated@@92))
))) (forall (($generated@@93 T@U) ($generated@@94 T@U) ) (! (let (($generated@@95 ($generated@@82 (type $generated@@93))))
(= (type ($generated@@83 $generated@@93 $generated@@94)) $generated@@95))
 :pattern ( ($generated@@83 $generated@@93 $generated@@94))
))) (forall (($generated@@96 T@U) ($generated@@97 T@U) ($generated@@98 T@U) ) (! (let (($generated@@99 (type $generated@@98)))
(let (($generated@@100 (type $generated@@97)))
(= (type ($generated@@84 $generated@@96 $generated@@97 $generated@@98)) ($generated@@78 $generated@@100 $generated@@99))))
 :pattern ( ($generated@@84 $generated@@96 $generated@@97 $generated@@98))
))) (forall (($generated@@101 T@U) ($generated@@102 T@U) ($generated@@103 T@U) ) (! (let (($generated@@104 ($generated@@82 (type $generated@@101))))
 (=> (= (type $generated@@103) $generated@@104) (= ($generated@@83 ($generated@@84 $generated@@101 $generated@@102 $generated@@103) $generated@@102) $generated@@103)))
 :weight 0
))) (and (forall (($generated@@105 T@U) ($generated@@106 T@U) ($generated@@107 T@U) ($generated@@108 T@U) ) (!  (or (= $generated@@107 $generated@@108) (= ($generated@@83 ($generated@@84 $generated@@106 $generated@@107 $generated@@105) $generated@@108) ($generated@@83 $generated@@106 $generated@@108)))
 :weight 0
)) (forall (($generated@@109 T@U) ($generated@@110 T@U) ($generated@@111 T@U) ($generated@@112 T@U) ) (!  (or true (= ($generated@@83 ($generated@@84 $generated@@110 $generated@@111 $generated@@109) $generated@@112) ($generated@@83 $generated@@110 $generated@@112)))
 :weight 0
)))) (= ($generated@@1 $generated@@79) 12)) (forall (($generated@@113 T@U) ($generated@@114 T@U) ) (! (let (($generated@@115 ($generated@@69 (type $generated@@114))))
(= (type ($generated@@85 $generated@@113 $generated@@114)) $generated@@115))
 :pattern ( ($generated@@85 $generated@@113 $generated@@114))
))) (= ($generated@@1 $generated@@80) 13)) (forall (($generated@@116 T@U) ($generated@@117 T@U) ($generated@@118 T@U) ) (! (= (type ($generated@@86 $generated@@116 $generated@@117 $generated@@118)) $generated@@80)
 :pattern ( ($generated@@86 $generated@@116 $generated@@117 $generated@@118))
))) (forall (($generated@@119 T@U) ($generated@@120 T@U) ($generated@@121 T@U) ) (! (let (($generated@@122 ($generated@@69 (type $generated@@120))))
 (=> (= (type $generated@@121) $generated@@122) (= ($generated@@85 ($generated@@86 $generated@@119 $generated@@120 $generated@@121) $generated@@120) $generated@@121)))
 :weight 0
))) (and (forall (($generated@@123 T@U) ($generated@@124 T@U) ($generated@@125 T@U) ($generated@@126 T@U) ) (!  (or (= $generated@@125 $generated@@126) (= ($generated@@85 ($generated@@86 $generated@@124 $generated@@125 $generated@@123) $generated@@126) ($generated@@85 $generated@@124 $generated@@126)))
 :weight 0
)) (forall (($generated@@127 T@U) ($generated@@128 T@U) ($generated@@129 T@U) ($generated@@130 T@U) ) (!  (or true (= ($generated@@85 ($generated@@86 $generated@@128 $generated@@129 $generated@@127) $generated@@130) ($generated@@85 $generated@@128 $generated@@130)))
 :weight 0
)))) (forall (($generated@@131 Int) ) (! (= (type ($generated@@77 $generated@@131)) $generated@@66)
 :pattern ( ($generated@@77 $generated@@131))
))))
(assert (forall (($generated@@132 T@U) ($generated@@133 T@U) ) (!  (=> (and (= (type $generated@@132) $generated@@2) (= (type $generated@@133) ($generated@@78 $generated@@79 $generated@@80))) ($generated@@76 $generated@@132 ($generated@@77 0) $generated@@133))
 :pattern ( ($generated@@76 $generated@@132 ($generated@@77 0) $generated@@133))
)))
(assert (= (type $generated@@134) $generated@@66))
(assert (forall (($generated@@135 T@U) ($generated@@136 T@U) ) (!  (=> (and (= (type $generated@@135) $generated@@2) (= (type $generated@@136) ($generated@@78 $generated@@79 $generated@@80))) ($generated@@76 $generated@@135 $generated@@134 $generated@@136))
 :pattern ( ($generated@@76 $generated@@135 $generated@@134 $generated@@136))
)))
(assert (forall (($generated@@138 T@U) ) (!  (=> (= (type $generated@@138) $generated@@2) ($generated@@137 $generated@@138 ($generated@@77 0)))
 :pattern ( ($generated@@137 $generated@@138 ($generated@@77 0)))
)))
(assert  (and (= ($generated@@1 $generated@@141) 14) (forall (($generated@@142 T@U) ($generated@@143 T@U) ) (! (= (type ($generated@@140 $generated@@142 $generated@@143)) $generated@@66)
 :pattern ( ($generated@@140 $generated@@142 $generated@@143))
))))
(assert (forall (($generated@@144 T@U) ($generated@@145 T@U) ($generated@@146 T@U) ) (!  (=> (and (and (and (= (type $generated@@144) $generated@@66) (= (type $generated@@145) $generated@@66)) (= (type $generated@@146) $generated@@141)) ($generated@@137 $generated@@146 ($generated@@140 $generated@@144 $generated@@145))) ($generated@@139 $generated@@146))
 :pattern ( ($generated@@139 $generated@@146) ($generated@@137 $generated@@146 ($generated@@140 $generated@@144 $generated@@145)))
)))
(assert  (and (and (= ($generated@@1 $generated@@150) 15) (forall (($generated@@151 T@U) ) (! (= (type ($generated@@148 $generated@@151)) $generated@@150)
 :pattern ( ($generated@@148 $generated@@151))
))) (forall (($generated@@152 T@U) ) (! (= (type ($generated@@149 $generated@@152)) $generated@@150)
 :pattern ( ($generated@@149 $generated@@152))
))))
(assert (forall (($generated@@153 T@U) ($generated@@154 T@U) ) (!  (=> (and (and (= (type $generated@@153) $generated@@141) (= (type $generated@@154) $generated@@141)) true) (= ($generated@@147 $generated@@153 $generated@@154)  (and (= ($generated@@148 $generated@@153) ($generated@@148 $generated@@154)) (= ($generated@@149 $generated@@153) ($generated@@149 $generated@@154)))))
 :pattern ( ($generated@@147 $generated@@153 $generated@@154))
)))
(assert  (and (and (forall (($generated@@159 T@T) ) (= ($generated@@1 ($generated@@157 $generated@@159)) 16)) (forall (($generated@@160 T@T) ) (! (= ($generated@@158 ($generated@@157 $generated@@160)) $generated@@160)
 :pattern ( ($generated@@157 $generated@@160))
))) (forall (($generated@@161 T@T) ) (! (= (type ($generated@@156 $generated@@161)) ($generated@@157 $generated@@161))
 :pattern ( ($generated@@156 $generated@@161))
))))
(assert (forall (($generated@@162 T@U) ) (! (let (($generated@@163 (type $generated@@162)))
 (not ($generated@@155 ($generated@@156 $generated@@163) $generated@@162)))
 :pattern ( (let (($generated@@163 (type $generated@@162)))
($generated@@155 ($generated@@156 $generated@@163) $generated@@162)))
)))
(assert (forall (($generated@@166 T@U) ) (! (= (type ($generated@@164 $generated@@166)) $generated@@66)
 :pattern ( ($generated@@164 $generated@@166))
)))
(assert (forall (($generated@@167 T@U) ($generated@@168 T@U) ) (!  (=> (and (and (= (type $generated@@167) ($generated@@78 $generated@@150 $generated@@2)) (= (type $generated@@168) $generated@@66)) ($generated@@137 $generated@@167 ($generated@@164 $generated@@168))) ($generated@@165 $generated@@167))
 :pattern ( ($generated@@137 $generated@@167 ($generated@@164 $generated@@168)))
)))
(assert  (and (and (and (and (and (and (and (forall (($generated@@175 T@T) ($generated@@176 T@T) ) (= ($generated@@1 ($generated@@171 $generated@@175 $generated@@176)) 17)) (forall (($generated@@177 T@T) ($generated@@178 T@T) ) (! (= ($generated@@172 ($generated@@171 $generated@@177 $generated@@178)) $generated@@177)
 :pattern ( ($generated@@171 $generated@@177 $generated@@178))
))) (forall (($generated@@179 T@T) ($generated@@180 T@T) ) (! (= ($generated@@173 ($generated@@171 $generated@@179 $generated@@180)) $generated@@180)
 :pattern ( ($generated@@171 $generated@@179 $generated@@180))
))) (forall (($generated@@181 T@U) ($generated@@182 T@U) ($generated@@183 T@U) ) (! (let (($generated@@184 ($generated@@173 (type $generated@@181))))
(= (type ($generated@@169 $generated@@181 $generated@@182 $generated@@183)) $generated@@184))
 :pattern ( ($generated@@169 $generated@@181 $generated@@182 $generated@@183))
))) (forall (($generated@@185 T@U) ($generated@@186 T@U) ($generated@@187 T@U) ($generated@@188 T@U) ) (! (let (($generated@@189 (type $generated@@188)))
(let (($generated@@190 (type $generated@@186)))
(= (type ($generated@@174 $generated@@185 $generated@@186 $generated@@187 $generated@@188)) ($generated@@171 $generated@@190 $generated@@189))))
 :pattern ( ($generated@@174 $generated@@185 $generated@@186 $generated@@187 $generated@@188))
))) (forall (($generated@@191 T@U) ($generated@@192 T@U) ($generated@@193 T@U) ($generated@@194 T@U) ) (! (let (($generated@@195 ($generated@@173 (type $generated@@191))))
 (=> (= (type $generated@@194) $generated@@195) (= ($generated@@169 ($generated@@174 $generated@@191 $generated@@192 $generated@@193 $generated@@194) $generated@@192 $generated@@193) $generated@@194)))
 :weight 0
))) (and (and (forall (($generated@@196 T@U) ($generated@@197 T@U) ($generated@@198 T@U) ($generated@@199 T@U) ($generated@@200 T@U) ($generated@@201 T@U) ) (!  (or (= $generated@@198 $generated@@200) (= ($generated@@169 ($generated@@174 $generated@@197 $generated@@198 $generated@@199 $generated@@196) $generated@@200 $generated@@201) ($generated@@169 $generated@@197 $generated@@200 $generated@@201)))
 :weight 0
)) (forall (($generated@@202 T@U) ($generated@@203 T@U) ($generated@@204 T@U) ($generated@@205 T@U) ($generated@@206 T@U) ($generated@@207 T@U) ) (!  (or (= $generated@@205 $generated@@207) (= ($generated@@169 ($generated@@174 $generated@@203 $generated@@204 $generated@@205 $generated@@202) $generated@@206 $generated@@207) ($generated@@169 $generated@@203 $generated@@206 $generated@@207)))
 :weight 0
))) (forall (($generated@@208 T@U) ($generated@@209 T@U) ($generated@@210 T@U) ($generated@@211 T@U) ($generated@@212 T@U) ($generated@@213 T@U) ) (!  (or true (= ($generated@@169 ($generated@@174 $generated@@209 $generated@@210 $generated@@211 $generated@@208) $generated@@212 $generated@@213) ($generated@@169 $generated@@209 $generated@@212 $generated@@213)))
 :weight 0
)))) (forall (($generated@@214 T@U) ($generated@@215 T@U) ($generated@@216 T@U) ($generated@@217 Bool) ) (! (= (type ($generated@@170 $generated@@214 $generated@@215 $generated@@216 $generated@@217)) ($generated@@171 $generated@@79 $generated@@4))
 :pattern ( ($generated@@170 $generated@@214 $generated@@215 $generated@@216 $generated@@217))
))))
(assert (forall (($generated@@218 T@U) ($generated@@219 T@U) ($generated@@220 T@U) ($generated@@221 Bool) ($generated@@222 T@U) ($generated@@223 T@U) ) (! (let (($generated@@224 ($generated@@69 (type $generated@@223))))
 (=> (and (and (and (and (= (type $generated@@218) $generated@@79) (= (type $generated@@219) ($generated@@78 $generated@@79 $generated@@80))) (= (type $generated@@220) ($generated@@68 $generated@@4))) (= (type $generated@@222) $generated@@79)) (= (type $generated@@223) ($generated@@68 $generated@@224))) (= ($generated@@0 ($generated@@169 ($generated@@170 $generated@@218 $generated@@219 $generated@@220 $generated@@221) $generated@@222 $generated@@223))  (=> (and (not (= $generated@@222 $generated@@218)) ($generated@@0 ($generated@@85 ($generated@@83 $generated@@219 $generated@@222) $generated@@220))) $generated@@221))))
 :pattern ( ($generated@@169 ($generated@@170 $generated@@218 $generated@@219 $generated@@220 $generated@@221) $generated@@222 $generated@@223))
)))
(assert (forall (($generated@@227 T@U) ($generated@@228 T@U) ) (! (= (type ($generated@@225 $generated@@227 $generated@@228)) $generated@@141)
 :pattern ( ($generated@@225 $generated@@227 $generated@@228))
)))
(assert (forall (($generated@@229 T@U) ($generated@@230 T@U) ($generated@@231 T@U) ($generated@@232 T@U) ) (!  (=> (and (and (and (= (type $generated@@229) $generated@@66) (= (type $generated@@230) $generated@@66)) (= (type $generated@@231) $generated@@150)) (= (type $generated@@232) $generated@@150)) (= ($generated@@137 ($generated@@225 $generated@@231 $generated@@232) ($generated@@140 $generated@@229 $generated@@230))  (and ($generated@@226 $generated@@231 $generated@@229) ($generated@@226 $generated@@232 $generated@@230))))
 :pattern ( ($generated@@137 ($generated@@225 $generated@@231 $generated@@232) ($generated@@140 $generated@@229 $generated@@230)))
)))
(assert (forall (($generated@@233 T@U) ($generated@@234 T@U) ) (!  (=> (and (= (type $generated@@233) $generated@@141) (= (type $generated@@234) $generated@@141)) (= ($generated@@147 $generated@@233 $generated@@234) (= $generated@@233 $generated@@234)))
 :pattern ( ($generated@@147 $generated@@233 $generated@@234))
)))
(assert (forall (($generated@@236 T@U) ) (! (= (type ($generated@@235 $generated@@236)) $generated@@66)
 :pattern ( ($generated@@235 $generated@@236))
)))
(assert (forall (($generated@@237 T@U) ($generated@@238 T@U) ) (!  (=> (and (= (type $generated@@237) ($generated@@78 $generated@@150 $generated@@4)) (= (type $generated@@238) $generated@@66)) (= ($generated@@137 $generated@@237 ($generated@@235 $generated@@238)) (forall (($generated@@239 T@U) ) (!  (=> (and (= (type $generated@@239) $generated@@150) ($generated@@0 ($generated@@83 $generated@@237 $generated@@239))) ($generated@@226 $generated@@239 $generated@@238))
 :pattern ( ($generated@@83 $generated@@237 $generated@@239))
))))
 :pattern ( ($generated@@137 $generated@@237 ($generated@@235 $generated@@238)))
)))
(assert (forall (($generated@@241 T@U) ) (! (= (type ($generated@@240 $generated@@241)) $generated@@66)
 :pattern ( ($generated@@240 $generated@@241))
)))
(assert (forall (($generated@@242 T@U) ($generated@@243 T@U) ) (!  (=> (and (= (type $generated@@242) ($generated@@78 $generated@@150 $generated@@4)) (= (type $generated@@243) $generated@@66)) (= ($generated@@137 $generated@@242 ($generated@@240 $generated@@243)) (forall (($generated@@244 T@U) ) (!  (=> (and (= (type $generated@@244) $generated@@150) ($generated@@0 ($generated@@83 $generated@@242 $generated@@244))) ($generated@@226 $generated@@244 $generated@@243))
 :pattern ( ($generated@@83 $generated@@242 $generated@@244))
))))
 :pattern ( ($generated@@137 $generated@@242 ($generated@@240 $generated@@243)))
)))
(assert (forall (($generated@@246 Int) ) (! (= ($generated@@245 $generated@@246) $generated@@246)
 :pattern ( ($generated@@245 $generated@@246))
)))
(assert (forall (($generated@@248 T@U) ) (! (let (($generated@@249 (type $generated@@248)))
(= (type ($generated@@247 $generated@@248)) $generated@@249))
 :pattern ( ($generated@@247 $generated@@248))
)))
(assert (forall (($generated@@250 T@U) ) (! (= ($generated@@247 $generated@@250) $generated@@250)
 :pattern ( ($generated@@247 $generated@@250))
)))
(assert (forall (($generated@@253 T@U) ($generated@@254 T@U) ($generated@@255 T@U) ($generated@@256 T@U) ($generated@@257 T@U) ) (!  (=> (and (and (and (and (and (= (type $generated@@253) $generated@@66) (= (type $generated@@254) $generated@@66)) (= (type $generated@@255) $generated@@150)) (= (type $generated@@256) $generated@@150)) (= (type $generated@@257) ($generated@@78 $generated@@79 $generated@@80))) ($generated@@251 $generated@@257)) (= ($generated@@76 ($generated@@225 $generated@@255 $generated@@256) ($generated@@140 $generated@@253 $generated@@254) $generated@@257)  (and ($generated@@252 $generated@@255 $generated@@253 $generated@@257) ($generated@@252 $generated@@256 $generated@@254 $generated@@257))))
 :pattern ( ($generated@@76 ($generated@@225 $generated@@255 $generated@@256) ($generated@@140 $generated@@253 $generated@@254) $generated@@257))
)))
(assert (forall (($generated@@259 T@U) ) (! (= (type ($generated@@258 $generated@@259)) $generated@@70)
 :pattern ( ($generated@@258 $generated@@259))
)))
(assert (forall (($generated@@260 T@U) ) (!  (=> (= (type $generated@@260) $generated@@141) (= ($generated@@139 $generated@@260) (= ($generated@@258 $generated@@260) $generated@@61)))
 :pattern ( ($generated@@139 $generated@@260))
)))
(assert (forall (($generated@@261 T@U) ) (!  (=> (and (= (type $generated@@261) $generated@@141) ($generated@@139 $generated@@261)) (exists (($generated@@262 T@U) ($generated@@263 T@U) ) (!  (and (and (= (type $generated@@262) $generated@@150) (= (type $generated@@263) $generated@@150)) (= $generated@@261 ($generated@@225 $generated@@262 $generated@@263)))
 :no-pattern (type $generated@@262)
 :no-pattern (type $generated@@263)
 :no-pattern ($generated $generated@@262)
 :no-pattern ($generated@@0 $generated@@262)
 :no-pattern ($generated $generated@@263)
 :no-pattern ($generated@@0 $generated@@263)
)))
 :pattern ( ($generated@@139 $generated@@261))
)))
(assert (forall (($generated@@265 T@T) ) (! (= ($generated@@264 ($generated@@156 $generated@@265)) 0)
 :pattern ( ($generated@@156 $generated@@265))
)))
(assert (forall (($generated@@267 T@U) ) (! (= (type ($generated@@266 $generated@@267)) $generated@@150)
 :pattern ( ($generated@@266 $generated@@267))
)))
(assert (forall (($generated@@268 T@U) ($generated@@269 T@U) ($generated@@270 T@U) ) (!  (=> (and (= (type $generated@@269) $generated@@66) (= (type $generated@@270) ($generated@@78 $generated@@79 $generated@@80))) (= ($generated@@252 ($generated@@266 $generated@@268) $generated@@269 $generated@@270) ($generated@@76 $generated@@268 $generated@@269 $generated@@270)))
 :pattern ( ($generated@@252 ($generated@@266 $generated@@268) $generated@@269 $generated@@270))
)))
(assert (forall (($generated@@273 T@T) ) (! (= (type ($generated@@272 $generated@@273)) ($generated@@78 $generated@@273 $generated@@2))
 :pattern ( ($generated@@272 $generated@@273))
)))
(assert (forall (($generated@@274 T@U) ) (! (let (($generated@@275 ($generated@@81 (type $generated@@274))))
 (=> (= (type $generated@@274) ($generated@@78 $generated@@275 $generated@@2)) (and (= (= ($generated@@271 $generated@@274) 0) (= $generated@@274 ($generated@@272 $generated@@275))) (=> (not (= ($generated@@271 $generated@@274) 0)) (exists (($generated@@276 T@U) ) (!  (and (= (type $generated@@276) $generated@@275) (< 0 ($generated ($generated@@83 $generated@@274 $generated@@276))))
 :no-pattern (type $generated@@276)
 :no-pattern ($generated $generated@@276)
 :no-pattern ($generated@@0 $generated@@276)
))))))
 :pattern ( ($generated@@271 $generated@@274))
)))
(assert  (and (and (and (and (forall (($generated@@282 T@T) ($generated@@283 T@T) ) (= ($generated@@1 ($generated@@279 $generated@@282 $generated@@283)) 18)) (forall (($generated@@284 T@T) ($generated@@285 T@T) ) (! (= ($generated@@280 ($generated@@279 $generated@@284 $generated@@285)) $generated@@284)
 :pattern ( ($generated@@279 $generated@@284 $generated@@285))
))) (forall (($generated@@286 T@T) ($generated@@287 T@T) ) (! (= ($generated@@281 ($generated@@279 $generated@@286 $generated@@287)) $generated@@287)
 :pattern ( ($generated@@279 $generated@@286 $generated@@287))
))) (forall (($generated@@288 T@U) ) (! (let (($generated@@289 ($generated@@280 (type $generated@@288))))
(= (type ($generated@@277 $generated@@288)) ($generated@@78 $generated@@289 $generated@@4)))
 :pattern ( ($generated@@277 $generated@@288))
))) (forall (($generated@@290 T@T) ($generated@@291 T@T) ) (! (= (type ($generated@@278 $generated@@290 $generated@@291)) ($generated@@279 $generated@@290 $generated@@291))
 :pattern ( ($generated@@278 $generated@@290 $generated@@291))
))))
(assert (forall (($generated@@292 T@U) ($generated@@293 T@T) ) (! (let (($generated@@294 (type $generated@@292)))
 (not ($generated@@0 ($generated@@83 ($generated@@277 ($generated@@278 $generated@@294 $generated@@293)) $generated@@292))))
 :pattern ( (let (($generated@@294 (type $generated@@292)))
($generated@@83 ($generated@@277 ($generated@@278 $generated@@294 $generated@@293)) $generated@@292)))
)))
(assert  (and (and (and (and (forall (($generated@@300 T@T) ($generated@@301 T@T) ) (= ($generated@@1 ($generated@@297 $generated@@300 $generated@@301)) 19)) (forall (($generated@@302 T@T) ($generated@@303 T@T) ) (! (= ($generated@@298 ($generated@@297 $generated@@302 $generated@@303)) $generated@@302)
 :pattern ( ($generated@@297 $generated@@302 $generated@@303))
))) (forall (($generated@@304 T@T) ($generated@@305 T@T) ) (! (= ($generated@@299 ($generated@@297 $generated@@304 $generated@@305)) $generated@@305)
 :pattern ( ($generated@@297 $generated@@304 $generated@@305))
))) (forall (($generated@@306 T@U) ) (! (let (($generated@@307 ($generated@@298 (type $generated@@306))))
(= (type ($generated@@295 $generated@@306)) ($generated@@78 $generated@@307 $generated@@4)))
 :pattern ( ($generated@@295 $generated@@306))
))) (forall (($generated@@308 T@T) ($generated@@309 T@T) ) (! (= (type ($generated@@296 $generated@@308 $generated@@309)) ($generated@@297 $generated@@308 $generated@@309))
 :pattern ( ($generated@@296 $generated@@308 $generated@@309))
))))
(assert (forall (($generated@@310 T@U) ($generated@@311 T@T) ) (! (let (($generated@@312 (type $generated@@310)))
 (not ($generated@@0 ($generated@@83 ($generated@@295 ($generated@@296 $generated@@312 $generated@@311)) $generated@@310))))
 :pattern ( (let (($generated@@312 (type $generated@@310)))
($generated@@83 ($generated@@295 ($generated@@296 $generated@@312 $generated@@311)) $generated@@310)))
)))
(assert (forall (($generated@@313 T@U) ) (! (let (($generated@@314 ($generated@@81 (type $generated@@313))))
 (=> (= (type $generated@@313) ($generated@@78 $generated@@314 $generated@@2)) (= ($generated@@165 $generated@@313) (forall (($generated@@315 T@U) ) (!  (=> (= (type $generated@@315) $generated@@314) (and (<= 0 ($generated ($generated@@83 $generated@@313 $generated@@315))) (<= ($generated ($generated@@83 $generated@@313 $generated@@315)) ($generated@@271 $generated@@313))))
 :pattern ( ($generated@@83 $generated@@313 $generated@@315))
)))))
 :pattern ( ($generated@@165 $generated@@313))
)))
(assert (forall (($generated@@317 T@T) ($generated@@318 T@U) ) (! (= (type ($generated@@316 $generated@@317 $generated@@318)) $generated@@317)
 :pattern ( ($generated@@316 $generated@@317 $generated@@318))
)))
(assert (forall (($generated@@319 T@U) ) (!  (=> (and (= (type $generated@@319) $generated@@150) ($generated@@226 $generated@@319 $generated@@134)) (and (= ($generated@@266 ($generated@@316 $generated@@2 $generated@@319)) $generated@@319) ($generated@@137 ($generated@@316 $generated@@2 $generated@@319) $generated@@134)))
 :pattern ( ($generated@@226 $generated@@319 $generated@@134))
)))
(assert (forall (($generated@@320 T@U) ) (! (let (($generated@@321 ($generated@@281 (type $generated@@320))))
(let (($generated@@322 ($generated@@280 (type $generated@@320))))
 (=> (= (type $generated@@320) ($generated@@279 $generated@@322 $generated@@321)) (or (= $generated@@320 ($generated@@278 $generated@@322 $generated@@321)) (exists (($generated@@323 T@U) ) (!  (and (= (type $generated@@323) $generated@@322) ($generated@@0 ($generated@@83 ($generated@@277 $generated@@320) $generated@@323)))
 :no-pattern (type $generated@@323)
 :no-pattern ($generated $generated@@323)
 :no-pattern ($generated@@0 $generated@@323)
))))))
 :pattern ( ($generated@@277 $generated@@320))
)))
(assert (forall (($generated@@325 T@U) ) (! (let (($generated@@326 ($generated@@281 (type $generated@@325))))
(= (type ($generated@@324 $generated@@325)) ($generated@@78 $generated@@326 $generated@@4)))
 :pattern ( ($generated@@324 $generated@@325))
)))
(assert (forall (($generated@@327 T@U) ) (! (let (($generated@@328 ($generated@@281 (type $generated@@327))))
(let (($generated@@329 ($generated@@280 (type $generated@@327))))
 (=> (= (type $generated@@327) ($generated@@279 $generated@@329 $generated@@328)) (or (= $generated@@327 ($generated@@278 $generated@@329 $generated@@328)) (exists (($generated@@330 T@U) ) (!  (and (= (type $generated@@330) $generated@@328) ($generated@@0 ($generated@@83 ($generated@@324 $generated@@327) $generated@@330)))
 :no-pattern (type $generated@@330)
 :no-pattern ($generated $generated@@330)
 :no-pattern ($generated@@0 $generated@@330)
))))))
 :pattern ( ($generated@@324 $generated@@327))
)))
(assert (forall (($generated@@331 T@U) ) (! (let (($generated@@332 ($generated@@299 (type $generated@@331))))
(let (($generated@@333 ($generated@@298 (type $generated@@331))))
 (=> (= (type $generated@@331) ($generated@@297 $generated@@333 $generated@@332)) (or (= $generated@@331 ($generated@@296 $generated@@333 $generated@@332)) (exists (($generated@@334 T@U) ) (!  (and (= (type $generated@@334) $generated@@333) ($generated@@0 ($generated@@83 ($generated@@295 $generated@@331) $generated@@334)))
 :no-pattern (type $generated@@334)
 :no-pattern ($generated $generated@@334)
 :no-pattern ($generated@@0 $generated@@334)
))))))
 :pattern ( ($generated@@295 $generated@@331))
)))
(assert (forall (($generated@@336 T@U) ) (! (let (($generated@@337 ($generated@@299 (type $generated@@336))))
(= (type ($generated@@335 $generated@@336)) ($generated@@78 $generated@@337 $generated@@4)))
 :pattern ( ($generated@@335 $generated@@336))
)))
(assert (forall (($generated@@338 T@U) ) (! (let (($generated@@339 ($generated@@299 (type $generated@@338))))
(let (($generated@@340 ($generated@@298 (type $generated@@338))))
 (=> (= (type $generated@@338) ($generated@@297 $generated@@340 $generated@@339)) (or (= $generated@@338 ($generated@@296 $generated@@340 $generated@@339)) (exists (($generated@@341 T@U) ) (!  (and (= (type $generated@@341) $generated@@339) ($generated@@0 ($generated@@83 ($generated@@335 $generated@@338) $generated@@341)))
 :no-pattern (type $generated@@341)
 :no-pattern ($generated $generated@@341)
 :no-pattern ($generated@@0 $generated@@341)
))))))
 :pattern ( ($generated@@335 $generated@@338))
)))
(assert (forall (($generated@@342 T@U) ($generated@@343 T@U) ) (!  (=> (and (= (type $generated@@342) ($generated@@78 $generated@@150 $generated@@2)) (= (type $generated@@343) $generated@@66)) (= ($generated@@137 $generated@@342 ($generated@@164 $generated@@343)) (forall (($generated@@344 T@U) ) (!  (=> (and (= (type $generated@@344) $generated@@150) (< 0 ($generated ($generated@@83 $generated@@342 $generated@@344)))) ($generated@@226 $generated@@344 $generated@@343))
 :pattern ( ($generated@@83 $generated@@342 $generated@@344))
))))
 :pattern ( ($generated@@137 $generated@@342 ($generated@@164 $generated@@343)))
)))
(assert (forall (($generated@@346 T@U) ($generated@@347 Int) ) (! (let (($generated@@348 ($generated@@158 (type $generated@@346))))
(= (type ($generated@@345 $generated@@346 $generated@@347)) $generated@@348))
 :pattern ( ($generated@@345 $generated@@346 $generated@@347))
)))
(assert (forall (($generated@@349 T@U) ($generated@@350 T@U) ) (! (let (($generated@@351 (type $generated@@350)))
 (=> (= (type $generated@@349) ($generated@@157 $generated@@351)) (= ($generated@@155 $generated@@349 $generated@@350) (exists (($generated@@352 Int) ) (!  (and (and (<= 0 $generated@@352) (< $generated@@352 ($generated@@264 $generated@@349))) (= ($generated@@345 $generated@@349 $generated@@352) $generated@@350))
 :pattern ( ($generated@@345 $generated@@349 $generated@@352))
)))))
 :pattern ( ($generated@@155 $generated@@349 $generated@@350))
)))
(assert (forall (($generated@@353 T@U) ($generated@@354 T@U) ($generated@@355 T@U) ) (!  (=> (and (and (= (type $generated@@353) ($generated@@78 $generated@@150 $generated@@4)) (= (type $generated@@354) $generated@@66)) (= (type $generated@@355) ($generated@@78 $generated@@79 $generated@@80))) (= ($generated@@76 $generated@@353 ($generated@@235 $generated@@354) $generated@@355) (forall (($generated@@356 T@U) ) (!  (=> (and (= (type $generated@@356) $generated@@150) ($generated@@0 ($generated@@83 $generated@@353 $generated@@356))) ($generated@@252 $generated@@356 $generated@@354 $generated@@355))
 :pattern ( ($generated@@83 $generated@@353 $generated@@356))
))))
 :pattern ( ($generated@@76 $generated@@353 ($generated@@235 $generated@@354) $generated@@355))
)))
(assert (forall (($generated@@357 T@U) ($generated@@358 T@U) ($generated@@359 T@U) ) (!  (=> (and (and (= (type $generated@@357) ($generated@@78 $generated@@150 $generated@@4)) (= (type $generated@@358) $generated@@66)) (= (type $generated@@359) ($generated@@78 $generated@@79 $generated@@80))) (= ($generated@@76 $generated@@357 ($generated@@240 $generated@@358) $generated@@359) (forall (($generated@@360 T@U) ) (!  (=> (and (= (type $generated@@360) $generated@@150) ($generated@@0 ($generated@@83 $generated@@357 $generated@@360))) ($generated@@252 $generated@@360 $generated@@358 $generated@@359))
 :pattern ( ($generated@@83 $generated@@357 $generated@@360))
))))
 :pattern ( ($generated@@76 $generated@@357 ($generated@@240 $generated@@358) $generated@@359))
)))
(assert (forall (($generated@@361 T@U) ) (! (let (($generated@@362 (type $generated@@361)))
(= ($generated ($generated@@83 ($generated@@272 $generated@@362) $generated@@361)) 0))
 :pattern ( (let (($generated@@362 (type $generated@@361)))
($generated@@83 ($generated@@272 $generated@@362) $generated@@361)))
)))
(assert  (and (forall (($generated@@365 T@U) ) (! (= (type ($generated@@363 $generated@@365)) ($generated@@78 $generated@@150 $generated@@4))
 :pattern ( ($generated@@363 $generated@@365))
)) (forall (($generated@@366 T@U) ) (! (let (($generated@@367 ($generated@@281 (type $generated@@366))))
(let (($generated@@368 ($generated@@280 (type $generated@@366))))
(= (type ($generated@@364 $generated@@366)) ($generated@@78 $generated@@368 $generated@@367))))
 :pattern ( ($generated@@364 $generated@@366))
))))
(assert (forall (($generated@@369 T@U) ($generated@@370 T@U) ) (!  (=> (and (= (type $generated@@369) ($generated@@279 $generated@@150 $generated@@150)) (= (type $generated@@370) $generated@@150)) (= ($generated@@0 ($generated@@83 ($generated@@363 $generated@@369) $generated@@370))  (and ($generated@@0 ($generated@@83 ($generated@@277 $generated@@369) ($generated@@148 ($generated@@316 $generated@@141 $generated@@370)))) (= ($generated@@83 ($generated@@364 $generated@@369) ($generated@@148 ($generated@@316 $generated@@141 $generated@@370))) ($generated@@149 ($generated@@316 $generated@@141 $generated@@370))))))
 :pattern ( ($generated@@83 ($generated@@363 $generated@@369) $generated@@370))
)))
(assert  (and (forall (($generated@@373 T@U) ) (! (= (type ($generated@@371 $generated@@373)) ($generated@@78 $generated@@150 $generated@@4))
 :pattern ( ($generated@@371 $generated@@373))
)) (forall (($generated@@374 T@U) ) (! (let (($generated@@375 ($generated@@299 (type $generated@@374))))
(let (($generated@@376 ($generated@@298 (type $generated@@374))))
(= (type ($generated@@372 $generated@@374)) ($generated@@78 $generated@@376 $generated@@375))))
 :pattern ( ($generated@@372 $generated@@374))
))))
(assert (forall (($generated@@377 T@U) ($generated@@378 T@U) ) (!  (=> (and (= (type $generated@@377) ($generated@@297 $generated@@150 $generated@@150)) (= (type $generated@@378) $generated@@150)) (= ($generated@@0 ($generated@@83 ($generated@@371 $generated@@377) $generated@@378))  (and ($generated@@0 ($generated@@83 ($generated@@295 $generated@@377) ($generated@@148 ($generated@@316 $generated@@141 $generated@@378)))) (= ($generated@@83 ($generated@@372 $generated@@377) ($generated@@148 ($generated@@316 $generated@@141 $generated@@378))) ($generated@@149 ($generated@@316 $generated@@141 $generated@@378))))))
 :pattern ( ($generated@@83 ($generated@@371 $generated@@377) $generated@@378))
)))
(assert (forall (($generated@@379 T@U) ($generated@@380 T@U) ) (! (let (($generated@@381 (type $generated@@380)))
(let (($generated@@382 ($generated@@280 (type $generated@@379))))
 (=> (= (type $generated@@379) ($generated@@279 $generated@@382 $generated@@381)) (= ($generated@@0 ($generated@@83 ($generated@@324 $generated@@379) $generated@@380)) (exists (($generated@@383 T@U) ) (!  (and (= (type $generated@@383) $generated@@382) (and ($generated@@0 ($generated@@83 ($generated@@277 $generated@@379) $generated@@383)) (= $generated@@380 ($generated@@83 ($generated@@364 $generated@@379) $generated@@383))))
 :pattern ( ($generated@@83 ($generated@@277 $generated@@379) $generated@@383))
 :pattern ( ($generated@@83 ($generated@@364 $generated@@379) $generated@@383))
))))))
 :pattern ( ($generated@@83 ($generated@@324 $generated@@379) $generated@@380))
)))
(assert (forall (($generated@@384 T@U) ($generated@@385 T@U) ) (! (let (($generated@@386 (type $generated@@385)))
(let (($generated@@387 ($generated@@298 (type $generated@@384))))
 (=> (= (type $generated@@384) ($generated@@297 $generated@@387 $generated@@386)) (= ($generated@@0 ($generated@@83 ($generated@@335 $generated@@384) $generated@@385)) (exists (($generated@@388 T@U) ) (!  (and (= (type $generated@@388) $generated@@387) (and ($generated@@0 ($generated@@83 ($generated@@295 $generated@@384) $generated@@388)) (= $generated@@385 ($generated@@83 ($generated@@372 $generated@@384) $generated@@388))))
 :pattern ( ($generated@@83 ($generated@@295 $generated@@384) $generated@@388))
 :pattern ( ($generated@@83 ($generated@@372 $generated@@384) $generated@@388))
))))))
 :pattern ( ($generated@@83 ($generated@@335 $generated@@384) $generated@@385))
)))
(assert (forall (($generated@@390 T@U) ($generated@@391 T@U) ) (! (= (type ($generated@@389 $generated@@390 $generated@@391)) $generated@@66)
 :pattern ( ($generated@@389 $generated@@390 $generated@@391))
)))
(assert (forall (($generated@@392 T@U) ($generated@@393 T@U) ($generated@@394 T@U) ($generated@@395 T@U) ) (!  (=> (and (and (and (= (type $generated@@392) ($generated@@279 $generated@@150 $generated@@150)) (= (type $generated@@393) $generated@@66)) (= (type $generated@@394) $generated@@66)) (= (type $generated@@395) ($generated@@78 $generated@@79 $generated@@80))) (= ($generated@@76 $generated@@392 ($generated@@389 $generated@@393 $generated@@394) $generated@@395) (forall (($generated@@396 T@U) ) (!  (=> (and (= (type $generated@@396) $generated@@150) ($generated@@0 ($generated@@83 ($generated@@277 $generated@@392) $generated@@396))) (and ($generated@@252 ($generated@@83 ($generated@@364 $generated@@392) $generated@@396) $generated@@394 $generated@@395) ($generated@@252 $generated@@396 $generated@@393 $generated@@395)))
 :pattern ( ($generated@@83 ($generated@@364 $generated@@392) $generated@@396))
 :pattern ( ($generated@@83 ($generated@@277 $generated@@392) $generated@@396))
))))
 :pattern ( ($generated@@76 $generated@@392 ($generated@@389 $generated@@393 $generated@@394) $generated@@395))
)))
(assert (forall (($generated@@398 T@U) ($generated@@399 T@U) ) (! (= (type ($generated@@397 $generated@@398 $generated@@399)) $generated@@66)
 :pattern ( ($generated@@397 $generated@@398 $generated@@399))
)))
(assert (forall (($generated@@400 T@U) ($generated@@401 T@U) ($generated@@402 T@U) ($generated@@403 T@U) ) (!  (=> (and (and (and (= (type $generated@@400) ($generated@@297 $generated@@150 $generated@@150)) (= (type $generated@@401) $generated@@66)) (= (type $generated@@402) $generated@@66)) (= (type $generated@@403) ($generated@@78 $generated@@79 $generated@@80))) (= ($generated@@76 $generated@@400 ($generated@@397 $generated@@401 $generated@@402) $generated@@403) (forall (($generated@@404 T@U) ) (!  (=> (and (= (type $generated@@404) $generated@@150) ($generated@@0 ($generated@@83 ($generated@@295 $generated@@400) $generated@@404))) (and ($generated@@252 ($generated@@83 ($generated@@372 $generated@@400) $generated@@404) $generated@@402 $generated@@403) ($generated@@252 $generated@@404 $generated@@401 $generated@@403)))
 :pattern ( ($generated@@83 ($generated@@372 $generated@@400) $generated@@404))
 :pattern ( ($generated@@83 ($generated@@295 $generated@@400) $generated@@404))
))))
 :pattern ( ($generated@@76 $generated@@400 ($generated@@397 $generated@@401 $generated@@402) $generated@@403))
)))
(assert (forall (($generated@@406 T@T) ) (! (= (type ($generated@@405 $generated@@406)) ($generated@@78 $generated@@406 $generated@@4))
 :pattern ( ($generated@@405 $generated@@406))
)))
(assert (forall (($generated@@407 T@U) ) (! (let (($generated@@408 ($generated@@299 (type $generated@@407))))
(let (($generated@@409 ($generated@@298 (type $generated@@407))))
 (=> (= (type $generated@@407) ($generated@@297 $generated@@409 $generated@@408)) (= (= $generated@@407 ($generated@@296 $generated@@409 $generated@@408)) (= ($generated@@295 $generated@@407) ($generated@@405 $generated@@409))))))
 :pattern ( ($generated@@295 $generated@@407))
)))
(assert (forall (($generated@@410 T@U) ) (! (let (($generated@@411 ($generated@@299 (type $generated@@410))))
(let (($generated@@412 ($generated@@298 (type $generated@@410))))
 (=> (= (type $generated@@410) ($generated@@297 $generated@@412 $generated@@411)) (= (= $generated@@410 ($generated@@296 $generated@@412 $generated@@411)) (= ($generated@@335 $generated@@410) ($generated@@405 $generated@@411))))))
 :pattern ( ($generated@@335 $generated@@410))
)))
(assert (forall (($generated@@413 T@U) ) (! (let (($generated@@414 ($generated@@299 (type $generated@@413))))
(let (($generated@@415 ($generated@@298 (type $generated@@413))))
 (=> (= (type $generated@@413) ($generated@@297 $generated@@415 $generated@@414)) (= (= $generated@@413 ($generated@@296 $generated@@415 $generated@@414)) (= ($generated@@371 $generated@@413) ($generated@@405 $generated@@150))))))
 :pattern ( ($generated@@371 $generated@@413))
)))
(assert (forall (($generated@@416 T@U) ) (! (let (($generated@@417 ($generated@@281 (type $generated@@416))))
(let (($generated@@418 ($generated@@280 (type $generated@@416))))
 (=> (= (type $generated@@416) ($generated@@279 $generated@@418 $generated@@417)) (or (= $generated@@416 ($generated@@278 $generated@@418 $generated@@417)) (exists (($generated@@419 T@U) ($generated@@420 T@U) ) (!  (and (and (= (type $generated@@419) $generated@@150) (= (type $generated@@420) $generated@@150)) ($generated@@0 ($generated@@83 ($generated@@363 $generated@@416) ($generated@@266 ($generated@@225 $generated@@419 $generated@@420)))))
 :no-pattern (type $generated@@419)
 :no-pattern (type $generated@@420)
 :no-pattern ($generated $generated@@419)
 :no-pattern ($generated@@0 $generated@@419)
 :no-pattern ($generated $generated@@420)
 :no-pattern ($generated@@0 $generated@@420)
))))))
 :pattern ( ($generated@@363 $generated@@416))
)))
(assert (forall (($generated@@421 T@U) ) (! (let (($generated@@422 ($generated@@299 (type $generated@@421))))
(let (($generated@@423 ($generated@@298 (type $generated@@421))))
 (=> (= (type $generated@@421) ($generated@@297 $generated@@423 $generated@@422)) (or (= $generated@@421 ($generated@@296 $generated@@423 $generated@@422)) (exists (($generated@@424 T@U) ($generated@@425 T@U) ) (!  (and (and (= (type $generated@@424) $generated@@150) (= (type $generated@@425) $generated@@150)) ($generated@@0 ($generated@@83 ($generated@@371 $generated@@421) ($generated@@266 ($generated@@225 $generated@@424 $generated@@425)))))
 :no-pattern (type $generated@@424)
 :no-pattern (type $generated@@425)
 :no-pattern ($generated $generated@@424)
 :no-pattern ($generated@@0 $generated@@424)
 :no-pattern ($generated $generated@@425)
 :no-pattern ($generated@@0 $generated@@425)
))))))
 :pattern ( ($generated@@371 $generated@@421))
)))
(assert (forall (($generated@@426 T@U) ) (!  (=> (and (= (type $generated@@426) $generated@@150) ($generated@@226 $generated@@426 $generated@@46)) (and (= ($generated@@266 ($generated@@316 $generated@@2 $generated@@426)) $generated@@426) ($generated@@137 ($generated@@316 $generated@@2 $generated@@426) $generated@@46)))
 :pattern ( ($generated@@226 $generated@@426 $generated@@46))
)))
(assert (forall (($generated@@427 T@U) ) (!  (=> (and (= (type $generated@@427) $generated@@150) ($generated@@226 $generated@@427 $generated@@47)) (and (= ($generated@@266 ($generated@@316 $generated@@3 $generated@@427)) $generated@@427) ($generated@@137 ($generated@@316 $generated@@3 $generated@@427) $generated@@47)))
 :pattern ( ($generated@@226 $generated@@427 $generated@@47))
)))
(assert (forall (($generated@@428 T@U) ) (!  (=> (and (= (type $generated@@428) $generated@@150) ($generated@@226 $generated@@428 $generated@@44)) (and (= ($generated@@266 ($generated@@316 $generated@@4 $generated@@428)) $generated@@428) ($generated@@137 ($generated@@316 $generated@@4 $generated@@428) $generated@@44)))
 :pattern ( ($generated@@226 $generated@@428 $generated@@44))
)))
(assert (= ($generated@@1 $generated@@429) 20))
(assert (forall (($generated@@430 T@U) ) (!  (=> (and (= (type $generated@@430) $generated@@150) ($generated@@226 $generated@@430 $generated@@45)) (and (= ($generated@@266 ($generated@@316 $generated@@429 $generated@@430)) $generated@@430) ($generated@@137 ($generated@@316 $generated@@429 $generated@@430) $generated@@45)))
 :pattern ( ($generated@@226 $generated@@430 $generated@@45))
)))
(assert (forall (($generated@@431 T@U) ($generated@@432 T@U) ) (!  (=> (= (type $generated@@432) $generated@@66) (= ($generated@@226 ($generated@@266 $generated@@431) $generated@@432) ($generated@@137 $generated@@431 $generated@@432)))
 :pattern ( ($generated@@226 ($generated@@266 $generated@@431) $generated@@432))
)))
(assert (forall (($generated@@433 T@U) ) (! (let (($generated@@434 ($generated@@81 (type $generated@@433))))
 (=> (= (type $generated@@433) ($generated@@78 $generated@@434 $generated@@2)) (<= 0 ($generated@@271 $generated@@433))))
 :pattern ( ($generated@@271 $generated@@433))
)))
(assert (forall (($generated@@435 T@U) ) (! (let (($generated@@436 ($generated@@158 (type $generated@@435))))
 (=> (= (type $generated@@435) ($generated@@157 $generated@@436)) (<= 0 ($generated@@264 $generated@@435))))
 :pattern ( ($generated@@264 $generated@@435))
)))
(assert (forall (($generated@@438 T@U) ) (! (= (type ($generated@@437 $generated@@438)) $generated@@66)
 :pattern ( ($generated@@437 $generated@@438))
)))
(assert (forall (($generated@@439 T@U) ($generated@@440 T@U) ) (!  (=> (and (= (type $generated@@439) $generated@@66) (= (type $generated@@440) $generated@@66)) (= ($generated@@437 ($generated@@389 $generated@@439 $generated@@440)) $generated@@439))
 :pattern ( ($generated@@389 $generated@@439 $generated@@440))
)))
(assert (forall (($generated@@442 T@U) ) (! (= (type ($generated@@441 $generated@@442)) $generated@@66)
 :pattern ( ($generated@@441 $generated@@442))
)))
(assert (forall (($generated@@443 T@U) ($generated@@444 T@U) ) (!  (=> (and (= (type $generated@@443) $generated@@66) (= (type $generated@@444) $generated@@66)) (= ($generated@@441 ($generated@@389 $generated@@443 $generated@@444)) $generated@@444))
 :pattern ( ($generated@@389 $generated@@443 $generated@@444))
)))
(assert (forall (($generated@@445 T@U) ($generated@@446 T@U) ) (!  (=> (and (= (type $generated@@445) $generated@@66) (= (type $generated@@446) $generated@@66)) (= ($generated@@74 ($generated@@389 $generated@@445 $generated@@446)) $generated@@58))
 :pattern ( ($generated@@389 $generated@@445 $generated@@446))
)))
(assert (forall (($generated@@448 T@U) ) (! (= (type ($generated@@447 $generated@@448)) $generated@@66)
 :pattern ( ($generated@@447 $generated@@448))
)))
(assert (forall (($generated@@449 T@U) ($generated@@450 T@U) ) (!  (=> (and (= (type $generated@@449) $generated@@66) (= (type $generated@@450) $generated@@66)) (= ($generated@@447 ($generated@@397 $generated@@449 $generated@@450)) $generated@@449))
 :pattern ( ($generated@@397 $generated@@449 $generated@@450))
)))
(assert (forall (($generated@@452 T@U) ) (! (= (type ($generated@@451 $generated@@452)) $generated@@66)
 :pattern ( ($generated@@451 $generated@@452))
)))
(assert (forall (($generated@@453 T@U) ($generated@@454 T@U) ) (!  (=> (and (= (type $generated@@453) $generated@@66) (= (type $generated@@454) $generated@@66)) (= ($generated@@451 ($generated@@397 $generated@@453 $generated@@454)) $generated@@454))
 :pattern ( ($generated@@397 $generated@@453 $generated@@454))
)))
(assert (forall (($generated@@455 T@U) ($generated@@456 T@U) ) (!  (=> (and (= (type $generated@@455) $generated@@66) (= (type $generated@@456) $generated@@66)) (= ($generated@@74 ($generated@@397 $generated@@455 $generated@@456)) $generated@@59))
 :pattern ( ($generated@@397 $generated@@455 $generated@@456))
)))
(assert (forall (($generated@@457 T@U) ($generated@@458 T@U) ) (!  (=> (and (= (type $generated@@457) $generated@@150) (= (type $generated@@458) $generated@@150)) (= ($generated@@258 ($generated@@225 $generated@@457 $generated@@458)) $generated@@61))
 :pattern ( ($generated@@225 $generated@@457 $generated@@458))
)))
(assert (forall (($generated@@460 T@U) ) (! (= (type ($generated@@459 $generated@@460)) $generated@@66)
 :pattern ( ($generated@@459 $generated@@460))
)))
(assert (forall (($generated@@461 T@U) ($generated@@462 T@U) ) (!  (=> (and (= (type $generated@@461) $generated@@66) (= (type $generated@@462) $generated@@66)) (= ($generated@@459 ($generated@@140 $generated@@461 $generated@@462)) $generated@@461))
 :pattern ( ($generated@@140 $generated@@461 $generated@@462))
)))
(assert (forall (($generated@@464 T@U) ) (! (= (type ($generated@@463 $generated@@464)) $generated@@66)
 :pattern ( ($generated@@463 $generated@@464))
)))
(assert (forall (($generated@@465 T@U) ($generated@@466 T@U) ) (!  (=> (and (= (type $generated@@465) $generated@@66) (= (type $generated@@466) $generated@@66)) (= ($generated@@463 ($generated@@140 $generated@@465 $generated@@466)) $generated@@466))
 :pattern ( ($generated@@140 $generated@@465 $generated@@466))
)))
(assert (forall (($generated@@467 T@U) ($generated@@468 T@U) ) (!  (=> (and (= (type $generated@@467) $generated@@150) (= (type $generated@@468) $generated@@150)) (= ($generated@@148 ($generated@@225 $generated@@467 $generated@@468)) $generated@@467))
 :pattern ( ($generated@@225 $generated@@467 $generated@@468))
)))
(assert (forall (($generated@@469 T@U) ($generated@@470 T@U) ) (!  (=> (and (= (type $generated@@469) $generated@@150) (= (type $generated@@470) $generated@@150)) (= ($generated@@149 ($generated@@225 $generated@@469 $generated@@470)) $generated@@470))
 :pattern ( ($generated@@225 $generated@@469 $generated@@470))
)))
(assert (forall (($generated@@472 T@U) ) (! (= (type ($generated@@471 $generated@@472)) $generated@@66)
 :pattern ( ($generated@@471 $generated@@472))
)))
(assert (forall (($generated@@473 T@U) ($generated@@474 T@U) ($generated@@475 T@U) ) (!  (=> (and (and (= (type $generated@@473) ($generated@@157 $generated@@150)) (= (type $generated@@474) $generated@@66)) (= (type $generated@@475) ($generated@@78 $generated@@79 $generated@@80))) (= ($generated@@76 $generated@@473 ($generated@@471 $generated@@474) $generated@@475) (forall (($generated@@476 Int) ) (!  (=> (and (<= 0 $generated@@476) (< $generated@@476 ($generated@@264 $generated@@473))) ($generated@@252 ($generated@@345 $generated@@473 $generated@@476) $generated@@474 $generated@@475))
 :pattern ( ($generated@@345 $generated@@473 $generated@@476))
))))
 :pattern ( ($generated@@76 $generated@@473 ($generated@@471 $generated@@474) $generated@@475))
)))
(assert (forall (($generated@@478 Int) ) (! (= ($generated@@477 ($generated@@77 $generated@@478)) $generated@@478)
 :pattern ( ($generated@@77 $generated@@478))
)))
(assert (forall (($generated@@480 T@U) ) (! (= (type ($generated@@479 $generated@@480)) $generated@@66)
 :pattern ( ($generated@@479 $generated@@480))
)))
(assert (forall (($generated@@481 T@U) ) (!  (=> (= (type $generated@@481) $generated@@66) (= ($generated@@479 ($generated@@235 $generated@@481)) $generated@@481))
 :pattern ( ($generated@@235 $generated@@481))
)))
(assert (forall (($generated@@482 T@U) ) (!  (=> (= (type $generated@@482) $generated@@66) (= ($generated@@74 ($generated@@235 $generated@@482)) $generated@@54))
 :pattern ( ($generated@@235 $generated@@482))
)))
(assert (forall (($generated@@484 T@U) ) (! (= (type ($generated@@483 $generated@@484)) $generated@@66)
 :pattern ( ($generated@@483 $generated@@484))
)))
(assert (forall (($generated@@485 T@U) ) (!  (=> (= (type $generated@@485) $generated@@66) (= ($generated@@483 ($generated@@240 $generated@@485)) $generated@@485))
 :pattern ( ($generated@@240 $generated@@485))
)))
(assert (forall (($generated@@486 T@U) ) (!  (=> (= (type $generated@@486) $generated@@66) (= ($generated@@74 ($generated@@240 $generated@@486)) $generated@@55))
 :pattern ( ($generated@@240 $generated@@486))
)))
(assert (forall (($generated@@488 T@U) ) (! (= (type ($generated@@487 $generated@@488)) $generated@@66)
 :pattern ( ($generated@@487 $generated@@488))
)))
(assert (forall (($generated@@489 T@U) ) (!  (=> (= (type $generated@@489) $generated@@66) (= ($generated@@487 ($generated@@164 $generated@@489)) $generated@@489))
 :pattern ( ($generated@@164 $generated@@489))
)))
(assert (forall (($generated@@490 T@U) ) (!  (=> (= (type $generated@@490) $generated@@66) (= ($generated@@74 ($generated@@164 $generated@@490)) $generated@@56))
 :pattern ( ($generated@@164 $generated@@490))
)))
(assert (forall (($generated@@492 T@U) ) (! (= (type ($generated@@491 $generated@@492)) $generated@@66)
 :pattern ( ($generated@@491 $generated@@492))
)))
(assert (forall (($generated@@493 T@U) ) (!  (=> (= (type $generated@@493) $generated@@66) (= ($generated@@491 ($generated@@471 $generated@@493)) $generated@@493))
 :pattern ( ($generated@@471 $generated@@493))
)))
(assert (forall (($generated@@494 T@U) ) (!  (=> (= (type $generated@@494) $generated@@66) (= ($generated@@74 ($generated@@471 $generated@@494)) $generated@@57))
 :pattern ( ($generated@@471 $generated@@494))
)))
(assert (forall (($generated@@495 T@U) ) (! (let (($generated@@496 (type $generated@@495)))
(= ($generated@@316 $generated@@496 ($generated@@266 $generated@@495)) $generated@@495))
 :pattern ( ($generated@@266 $generated@@495))
)))
(assert (forall (($generated@@497 T@U) ($generated@@498 T@U) ($generated@@499 T@U) ) (!  (=> (and (and (= (type $generated@@497) ($generated@@279 $generated@@150 $generated@@150)) (= (type $generated@@498) $generated@@66)) (= (type $generated@@499) $generated@@66)) (= ($generated@@137 $generated@@497 ($generated@@389 $generated@@498 $generated@@499)) (forall (($generated@@500 T@U) ) (!  (=> (and (= (type $generated@@500) $generated@@150) ($generated@@0 ($generated@@83 ($generated@@277 $generated@@497) $generated@@500))) (and ($generated@@226 ($generated@@83 ($generated@@364 $generated@@497) $generated@@500) $generated@@499) ($generated@@226 $generated@@500 $generated@@498)))
 :pattern ( ($generated@@83 ($generated@@364 $generated@@497) $generated@@500))
 :pattern ( ($generated@@83 ($generated@@277 $generated@@497) $generated@@500))
))))
 :pattern ( ($generated@@137 $generated@@497 ($generated@@389 $generated@@498 $generated@@499)))
)))
(assert (forall (($generated@@501 T@U) ($generated@@502 T@U) ($generated@@503 T@U) ) (!  (=> (and (and (= (type $generated@@501) ($generated@@297 $generated@@150 $generated@@150)) (= (type $generated@@502) $generated@@66)) (= (type $generated@@503) $generated@@66)) (= ($generated@@137 $generated@@501 ($generated@@397 $generated@@502 $generated@@503)) (forall (($generated@@504 T@U) ) (!  (=> (and (= (type $generated@@504) $generated@@150) ($generated@@0 ($generated@@83 ($generated@@295 $generated@@501) $generated@@504))) (and ($generated@@226 ($generated@@83 ($generated@@372 $generated@@501) $generated@@504) $generated@@503) ($generated@@226 $generated@@504 $generated@@502)))
 :pattern ( ($generated@@83 ($generated@@372 $generated@@501) $generated@@504))
 :pattern ( ($generated@@83 ($generated@@295 $generated@@501) $generated@@504))
))))
 :pattern ( ($generated@@137 $generated@@501 ($generated@@397 $generated@@502 $generated@@503)))
)))
(assert (forall (($generated@@507 T@U) ($generated@@508 T@U) ) (!  (=> (and (= (type $generated@@507) $generated@@150) (= (type $generated@@508) $generated@@150)) (< ($generated@@505 $generated@@507) ($generated@@506 ($generated@@225 $generated@@507 $generated@@508))))
 :pattern ( ($generated@@225 $generated@@507 $generated@@508))
)))
(assert (forall (($generated@@509 T@U) ($generated@@510 T@U) ) (!  (=> (and (= (type $generated@@509) $generated@@150) (= (type $generated@@510) $generated@@150)) (< ($generated@@505 $generated@@510) ($generated@@506 ($generated@@225 $generated@@509 $generated@@510))))
 :pattern ( ($generated@@225 $generated@@509 $generated@@510))
)))
(assert (forall (($generated@@511 T@U) ($generated@@512 T@U) ($generated@@513 T@U) ) (!  (=> (and (and (and (= (type $generated@@511) $generated@@150) (= (type $generated@@512) $generated@@66)) (= (type $generated@@513) $generated@@66)) ($generated@@226 $generated@@511 ($generated@@389 $generated@@512 $generated@@513))) (and (= ($generated@@266 ($generated@@316 ($generated@@279 $generated@@150 $generated@@150) $generated@@511)) $generated@@511) ($generated@@137 ($generated@@316 ($generated@@279 $generated@@150 $generated@@150) $generated@@511) ($generated@@389 $generated@@512 $generated@@513))))
 :pattern ( ($generated@@226 $generated@@511 ($generated@@389 $generated@@512 $generated@@513)))
)))
(assert (forall (($generated@@514 T@U) ($generated@@515 T@U) ($generated@@516 T@U) ) (!  (=> (and (and (and (= (type $generated@@514) $generated@@150) (= (type $generated@@515) $generated@@66)) (= (type $generated@@516) $generated@@66)) ($generated@@226 $generated@@514 ($generated@@397 $generated@@515 $generated@@516))) (and (= ($generated@@266 ($generated@@316 ($generated@@297 $generated@@150 $generated@@150) $generated@@514)) $generated@@514) ($generated@@137 ($generated@@316 ($generated@@297 $generated@@150 $generated@@150) $generated@@514) ($generated@@397 $generated@@515 $generated@@516))))
 :pattern ( ($generated@@226 $generated@@514 ($generated@@397 $generated@@515 $generated@@516)))
)))
(assert (forall (($generated@@517 T@U) ($generated@@518 T@U) ($generated@@519 T@U) ) (!  (=> (and (and (and (= (type $generated@@517) $generated@@66) (= (type $generated@@518) $generated@@66)) (= (type $generated@@519) $generated@@150)) ($generated@@226 $generated@@519 ($generated@@140 $generated@@517 $generated@@518))) (and (= ($generated@@266 ($generated@@316 $generated@@141 $generated@@519)) $generated@@519) ($generated@@137 ($generated@@316 $generated@@141 $generated@@519) ($generated@@140 $generated@@517 $generated@@518))))
 :pattern ( ($generated@@226 $generated@@519 ($generated@@140 $generated@@517 $generated@@518)))
)))
(assert (forall (($generated@@520 T@U) ) (! (let (($generated@@521 (type $generated@@520)))
 (not ($generated@@0 ($generated@@83 ($generated@@405 $generated@@521) $generated@@520))))
 :pattern ( (let (($generated@@521 (type $generated@@520)))
($generated@@83 ($generated@@405 $generated@@521) $generated@@520)))
)))
(assert (forall (($generated@@523 T@U) ) (! (= (type ($generated@@522 $generated@@523)) $generated@@71)
 :pattern ( ($generated@@522 $generated@@523))
)))
(assert (forall (($generated@@524 T@U) ($generated@@525 T@U) ) (!  (=> (and (= (type $generated@@524) $generated@@66) (= (type $generated@@525) $generated@@66)) (and (= ($generated@@74 ($generated@@140 $generated@@524 $generated@@525)) $generated@@62) (= ($generated@@522 ($generated@@140 $generated@@524 $generated@@525)) $generated@@64)))
 :pattern ( ($generated@@140 $generated@@524 $generated@@525))
)))
(assert (forall (($generated@@526 T@U) ) (!  (=> (= (type $generated@@526) $generated@@141) (= ($generated@@505 ($generated@@266 $generated@@526)) ($generated@@506 $generated@@526)))
 :pattern ( ($generated@@505 ($generated@@266 $generated@@526)))
)))
(assert (forall (($generated@@527 T@U) ) (!  (=> (and (= (type $generated@@527) $generated@@150) ($generated@@226 $generated@@527 ($generated@@77 0))) (and (= ($generated@@266 ($generated@@316 $generated@@2 $generated@@527)) $generated@@527) ($generated@@137 ($generated@@316 ($generated@@78 $generated@@150 $generated@@4) $generated@@527) ($generated@@77 0))))
 :pattern ( ($generated@@226 $generated@@527 ($generated@@77 0)))
)))
(assert (forall (($generated@@528 T@U) ($generated@@529 T@U) ) (!  (=> (and (and (= (type $generated@@528) $generated@@150) (= (type $generated@@529) $generated@@66)) ($generated@@226 $generated@@528 ($generated@@235 $generated@@529))) (and (= ($generated@@266 ($generated@@316 ($generated@@78 $generated@@150 $generated@@4) $generated@@528)) $generated@@528) ($generated@@137 ($generated@@316 ($generated@@78 $generated@@150 $generated@@4) $generated@@528) ($generated@@235 $generated@@529))))
 :pattern ( ($generated@@226 $generated@@528 ($generated@@235 $generated@@529)))
)))
(assert (forall (($generated@@530 T@U) ($generated@@531 T@U) ) (!  (=> (and (and (= (type $generated@@530) $generated@@150) (= (type $generated@@531) $generated@@66)) ($generated@@226 $generated@@530 ($generated@@240 $generated@@531))) (and (= ($generated@@266 ($generated@@316 ($generated@@78 $generated@@150 $generated@@4) $generated@@530)) $generated@@530) ($generated@@137 ($generated@@316 ($generated@@78 $generated@@150 $generated@@4) $generated@@530) ($generated@@240 $generated@@531))))
 :pattern ( ($generated@@226 $generated@@530 ($generated@@240 $generated@@531)))
)))
(assert (forall (($generated@@532 T@U) ($generated@@533 T@U) ) (!  (=> (and (and (= (type $generated@@532) $generated@@150) (= (type $generated@@533) $generated@@66)) ($generated@@226 $generated@@532 ($generated@@164 $generated@@533))) (and (= ($generated@@266 ($generated@@316 ($generated@@78 $generated@@150 $generated@@2) $generated@@532)) $generated@@532) ($generated@@137 ($generated@@316 ($generated@@78 $generated@@150 $generated@@2) $generated@@532) ($generated@@164 $generated@@533))))
 :pattern ( ($generated@@226 $generated@@532 ($generated@@164 $generated@@533)))
)))
(assert (forall (($generated@@534 T@U) ($generated@@535 T@U) ) (!  (=> (and (and (= (type $generated@@534) $generated@@150) (= (type $generated@@535) $generated@@66)) ($generated@@226 $generated@@534 ($generated@@471 $generated@@535))) (and (= ($generated@@266 ($generated@@316 ($generated@@157 $generated@@150) $generated@@534)) $generated@@534) ($generated@@137 ($generated@@316 ($generated@@157 $generated@@150) $generated@@534) ($generated@@471 $generated@@535))))
 :pattern ( ($generated@@226 $generated@@534 ($generated@@471 $generated@@535)))
)))
(assert (= ($generated@@74 $generated@@134) $generated@@63))
(assert (= ($generated@@522 $generated@@134) $generated@@65))
(assert (forall (($generated@@536 T@U) ($generated@@537 T@U) ($generated@@538 T@U) ) (!  (=> (and (and (= (type $generated@@536) ($generated@@78 $generated@@150 $generated@@2)) (= (type $generated@@537) $generated@@66)) (= (type $generated@@538) ($generated@@78 $generated@@79 $generated@@80))) (= ($generated@@76 $generated@@536 ($generated@@164 $generated@@537) $generated@@538) (forall (($generated@@539 T@U) ) (!  (=> (and (= (type $generated@@539) $generated@@150) (< 0 ($generated ($generated@@83 $generated@@536 $generated@@539)))) ($generated@@252 $generated@@539 $generated@@537 $generated@@538))
 :pattern ( ($generated@@83 $generated@@536 $generated@@539))
))))
 :pattern ( ($generated@@76 $generated@@536 ($generated@@164 $generated@@537) $generated@@538))
)))
(assert (forall (($generated@@540 T@U) ($generated@@541 T@U) ($generated@@542 T@U) ) (!  (=> (and (and (and (= (type $generated@@540) $generated@@141) (= (type $generated@@541) $generated@@66)) (= (type $generated@@542) ($generated@@78 $generated@@79 $generated@@80))) (and ($generated@@251 $generated@@542) (and ($generated@@139 $generated@@540) (exists (($generated@@543 T@U) ) (!  (and (= (type $generated@@543) $generated@@66) ($generated@@76 $generated@@540 ($generated@@140 $generated@@541 $generated@@543) $generated@@542))
 :pattern ( ($generated@@76 $generated@@540 ($generated@@140 $generated@@541 $generated@@543) $generated@@542))
))))) ($generated@@252 ($generated@@148 $generated@@540) $generated@@541 $generated@@542))
 :pattern ( ($generated@@252 ($generated@@148 $generated@@540) $generated@@541 $generated@@542))
)))
(assert (forall (($generated@@544 T@U) ($generated@@545 T@U) ($generated@@546 T@U) ) (!  (=> (and (and (and (= (type $generated@@544) $generated@@141) (= (type $generated@@545) $generated@@66)) (= (type $generated@@546) ($generated@@78 $generated@@79 $generated@@80))) (and ($generated@@251 $generated@@546) (and ($generated@@139 $generated@@544) (exists (($generated@@547 T@U) ) (!  (and (= (type $generated@@547) $generated@@66) ($generated@@76 $generated@@544 ($generated@@140 $generated@@547 $generated@@545) $generated@@546))
 :pattern ( ($generated@@76 $generated@@544 ($generated@@140 $generated@@547 $generated@@545) $generated@@546))
))))) ($generated@@252 ($generated@@149 $generated@@544) $generated@@545 $generated@@546))
 :pattern ( ($generated@@252 ($generated@@149 $generated@@544) $generated@@545 $generated@@546))
)))
(assert (forall (($generated@@548 T@U) ) (!  (=> (= (type $generated@@548) $generated@@2) (= ($generated@@137 $generated@@548 $generated@@134)  (and (<= ($generated@@245 0) ($generated $generated@@548)) (< ($generated $generated@@548) 256))))
 :pattern ( ($generated@@137 $generated@@548 $generated@@134))
)))
(assert (forall (($generated@@549 T@U) ($generated@@550 T@U) ) (!  (=> (and (= (type $generated@@549) $generated@@150) (= (type $generated@@550) $generated@@150)) (= ($generated@@225 ($generated@@247 $generated@@549) ($generated@@247 $generated@@550)) ($generated@@247 ($generated@@225 $generated@@549 $generated@@550))))
 :pattern ( ($generated@@225 ($generated@@247 $generated@@549) ($generated@@247 $generated@@550)))
)))
(assert (forall (($generated@@551 Int) ) (! (= ($generated@@266 ($generated@@8 ($generated@@245 $generated@@551))) ($generated@@247 ($generated@@266 ($generated@@8 $generated@@551))))
 :pattern ( ($generated@@266 ($generated@@8 ($generated@@245 $generated@@551))))
)))
(assert (forall (($generated@@552 T@U) ) (! (= ($generated@@266 ($generated@@247 $generated@@552)) ($generated@@247 ($generated@@266 $generated@@552)))
 :pattern ( ($generated@@266 ($generated@@247 $generated@@552)))
)))
(assert (forall (($generated@@553 T@U) ) (! (let (($generated@@554 ($generated@@158 (type $generated@@553))))
 (=> (and (= (type $generated@@553) ($generated@@157 $generated@@554)) (= ($generated@@264 $generated@@553) 0)) (= $generated@@553 ($generated@@156 $generated@@554))))
 :pattern ( ($generated@@264 $generated@@553))
)))
(assert (forall (($generated@@555 T@U) ($generated@@556 T@U) ($generated@@557 T@U) ) (! (let (($generated@@558 (type $generated@@556)))
 (=> (and (and (= (type $generated@@555) ($generated@@78 $generated@@558 $generated@@2)) (= (type $generated@@557) $generated@@2)) (<= 0 ($generated $generated@@557))) (= ($generated@@271 ($generated@@84 $generated@@555 $generated@@556 $generated@@557)) (+ (- ($generated@@271 $generated@@555) ($generated ($generated@@83 $generated@@555 $generated@@556))) ($generated $generated@@557)))))
 :pattern ( ($generated@@271 ($generated@@84 $generated@@555 $generated@@556 $generated@@557)))
)))
(assert (forall (($generated@@559 T@U) ($generated@@560 T@U) ) (!  (=> (and (= (type $generated@@559) ($generated@@78 $generated@@79 $generated@@80)) (= (type $generated@@560) $generated@@2)) ($generated@@76 $generated@@560 $generated@@46 $generated@@559))
 :pattern ( ($generated@@76 $generated@@560 $generated@@46 $generated@@559))
)))
(assert (forall (($generated@@561 T@U) ($generated@@562 T@U) ) (!  (=> (and (= (type $generated@@561) ($generated@@78 $generated@@79 $generated@@80)) (= (type $generated@@562) $generated@@3)) ($generated@@76 $generated@@562 $generated@@47 $generated@@561))
 :pattern ( ($generated@@76 $generated@@562 $generated@@47 $generated@@561))
)))
(assert (forall (($generated@@563 T@U) ($generated@@564 T@U) ) (!  (=> (and (= (type $generated@@563) ($generated@@78 $generated@@79 $generated@@80)) (= (type $generated@@564) $generated@@4)) ($generated@@76 $generated@@564 $generated@@44 $generated@@563))
 :pattern ( ($generated@@76 $generated@@564 $generated@@44 $generated@@563))
)))
(assert (forall (($generated@@565 T@U) ($generated@@566 T@U) ) (!  (=> (and (= (type $generated@@565) ($generated@@78 $generated@@79 $generated@@80)) (= (type $generated@@566) $generated@@429)) ($generated@@76 $generated@@566 $generated@@45 $generated@@565))
 :pattern ( ($generated@@76 $generated@@566 $generated@@45 $generated@@565))
)))
(assert (forall (($generated@@567 T@U) ($generated@@568 T@U) ) (!  (=> (and (= (type $generated@@567) ($generated@@78 $generated@@79 $generated@@80)) (= (type $generated@@568) $generated@@150)) ($generated@@76 $generated@@568 $generated@@48 $generated@@567))
 :pattern ( ($generated@@76 $generated@@568 $generated@@48 $generated@@567))
)))
(assert (forall (($generated@@569 T@U) ($generated@@570 T@U) ) (!  (=> (and (= (type $generated@@569) ($generated@@157 $generated@@150)) (= (type $generated@@570) $generated@@66)) (= ($generated@@137 $generated@@569 ($generated@@471 $generated@@570)) (forall (($generated@@571 Int) ) (!  (=> (and (<= 0 $generated@@571) (< $generated@@571 ($generated@@264 $generated@@569))) ($generated@@226 ($generated@@345 $generated@@569 $generated@@571) $generated@@570))
 :pattern ( ($generated@@345 $generated@@569 $generated@@571))
))))
 :pattern ( ($generated@@137 $generated@@569 ($generated@@471 $generated@@570)))
)))
(assert (forall (($generated@@573 T@U) ($generated@@574 Int) ) (!  (=> (= (type $generated@@573) ($generated@@157 $generated@@150)) (=> (and (<= 0 $generated@@574) (< $generated@@574 ($generated@@264 $generated@@573))) (< ($generated@@506 ($generated@@316 $generated@@141 ($generated@@345 $generated@@573 $generated@@574))) ($generated@@572 $generated@@573))))
 :pattern ( ($generated@@506 ($generated@@316 $generated@@141 ($generated@@345 $generated@@573 $generated@@574))))
)))
(assert (forall (($generated@@575 T@U) ($generated@@576 T@U) ($generated@@577 T@U) ) (!  (=> (and (and (and (= (type $generated@@575) ($generated@@279 $generated@@150 $generated@@150)) (= (type $generated@@576) $generated@@66)) (= (type $generated@@577) $generated@@66)) ($generated@@137 $generated@@575 ($generated@@389 $generated@@576 $generated@@577))) (and (and ($generated@@137 ($generated@@277 $generated@@575) ($generated@@235 $generated@@576)) ($generated@@137 ($generated@@324 $generated@@575) ($generated@@235 $generated@@577))) ($generated@@137 ($generated@@363 $generated@@575) ($generated@@235 ($generated@@140 $generated@@576 $generated@@577)))))
 :pattern ( ($generated@@137 $generated@@575 ($generated@@389 $generated@@576 $generated@@577)))
)))
(assert (forall (($generated@@578 T@U) ($generated@@579 T@U) ($generated@@580 T@U) ) (!  (=> (and (and (and (= (type $generated@@578) ($generated@@297 $generated@@150 $generated@@150)) (= (type $generated@@579) $generated@@66)) (= (type $generated@@580) $generated@@66)) ($generated@@137 $generated@@578 ($generated@@397 $generated@@579 $generated@@580))) (and (and ($generated@@137 ($generated@@295 $generated@@578) ($generated@@240 $generated@@579)) ($generated@@137 ($generated@@335 $generated@@578) ($generated@@240 $generated@@580))) ($generated@@137 ($generated@@371 $generated@@578) ($generated@@240 ($generated@@140 $generated@@579 $generated@@580)))))
 :pattern ( ($generated@@137 $generated@@578 ($generated@@397 $generated@@579 $generated@@580)))
)))
(assert (forall (($generated@@581 T@U) ) (!  (=> (= (type $generated@@581) $generated@@2) ($generated@@137 $generated@@581 $generated@@46))
 :pattern ( ($generated@@137 $generated@@581 $generated@@46))
)))
(assert (forall (($generated@@582 T@U) ) (!  (=> (= (type $generated@@582) $generated@@3) ($generated@@137 $generated@@582 $generated@@47))
 :pattern ( ($generated@@137 $generated@@582 $generated@@47))
)))
(assert (forall (($generated@@583 T@U) ) (!  (=> (= (type $generated@@583) $generated@@4) ($generated@@137 $generated@@583 $generated@@44))
 :pattern ( ($generated@@137 $generated@@583 $generated@@44))
)))
(assert (forall (($generated@@584 T@U) ) (!  (=> (= (type $generated@@584) $generated@@429) ($generated@@137 $generated@@584 $generated@@45))
 :pattern ( ($generated@@137 $generated@@584 $generated@@45))
)))
(assert (forall (($generated@@585 T@U) ) (!  (=> (= (type $generated@@585) $generated@@150) ($generated@@137 $generated@@585 $generated@@48))
 :pattern ( ($generated@@137 $generated@@585 $generated@@48))
)))
(push 1)
(declare-fun ControlFlow (Int Int) Int)
(declare-fun $generated@@586 () T@U)
(declare-fun $generated@@587 () T@U)
(declare-fun $generated@@588 () T@U)
(declare-fun $generated@@589 () T@U)
(declare-fun $generated@@590 () T@U)
(declare-fun $generated@@591 (T@U) Bool)
(declare-fun $generated@@592 () Int)
(assert  (and (and (and (and (= (type $generated@@586) ($generated@@171 $generated@@79 $generated@@4)) (= (type $generated@@587) $generated@@79)) (= (type $generated@@588) ($generated@@78 $generated@@79 $generated@@80))) (= (type $generated@@589) ($generated@@157 $generated@@150))) (= (type $generated@@590) ($generated@@157 $generated@@150))))
(set-option :timeout 0)
(set-option :rlimit 0)
(assert (not
 (=> (= (ControlFlow 0 0) 6) (let (($generated@@593  (=> (= $generated@@586 ($generated@@170 $generated@@587 $generated@@588 $generated@@60 false)) (and (=> (= (ControlFlow 0 2) (- 0 5)) (and (<= 0 ($generated@@245 0)) (< ($generated@@245 0) ($generated@@264 $generated@@589)))) (and (=> (= (ControlFlow 0 2) (- 0 4)) ($generated@@155 $generated@@589 ($generated@@345 $generated@@589 ($generated@@245 0)))) (=> ($generated@@155 $generated@@589 ($generated@@345 $generated@@589 ($generated@@245 0))) (and (=> (= (ControlFlow 0 2) (- 0 3)) (and (<= 0 ($generated@@245 0)) (< ($generated@@245 0) ($generated@@264 $generated@@590)))) (=> (= (ControlFlow 0 2) (- 0 1)) ($generated@@155 $generated@@590 ($generated@@345 $generated@@590 ($generated@@245 0)))))))))))
(let (($generated@@594  (=> (and ($generated@@251 $generated@@588) ($generated@@591 $generated@@588)) (=> (and (and (and ($generated@@137 $generated@@589 ($generated@@471 $generated@@134)) ($generated@@76 $generated@@589 ($generated@@471 $generated@@134) $generated@@588)) (and ($generated@@137 $generated@@590 ($generated@@471 $generated@@46)) ($generated@@76 $generated@@590 ($generated@@471 $generated@@46) $generated@@588))) (and (and (= 1 $generated@@592) (= ($generated@@264 $generated@@589) ($generated@@245 1))) (and (= ($generated@@264 $generated@@590) ($generated@@245 1)) (= (ControlFlow 0 6) 2)))) $generated@@593))))
$generated@@594)))
))
(check-sat)
(pop 1)
; Valid
(get-info :rlimit)
(reset)
(set-option :rlimit 0)
; did a full reset
(reset)
(set-option :print-success false)
(set-info :smt-lib-version 2.6)
(set-option :auto_config false)
(set-option :type_check true)
(set-option :smt.case_split 3)
(set-option :smt.qi.eager_threshold 100)
(set-option :smt.delay_units true)
(set-option :smt.arith.solver 2)
(set-option :smt.mbqi false)
(set-option :model.compact false)
(set-option :model.v2 true)
(set-option :pp.bv_literals false)
; done setting options


(set-info :category "industrial")
(declare-sort |T@U| 0)
(declare-sort |T@T| 0)
(declare-fun real_pow (Real Real) Real)
(declare-fun UOrdering2 (|T@U| |T@U|) Bool)
(declare-fun UOrdering3 (|T@T| |T@U| |T@U|) Bool)
(declare-fun tickleBool (Bool) Bool)
(assert (and (tickleBool true) (tickleBool false)))
(declare-fun $generated (T@U) Int)
(declare-fun $generated@@0 (T@U) Bool)
(declare-fun $generated@@1 (T@T) Int)
(declare-fun $generated@@2 () T@T)
(declare-fun $generated@@3 () T@T)
(declare-fun $generated@@4 () T@T)
(declare-fun $generated@@5 () T@T)
(declare-fun $generated@@6 () T@T)
(declare-fun $generated@@7 () T@T)
(declare-fun $generated@@8 (Int) T@U)
(declare-fun type (T@U) T@T)
(declare-fun $generated@@9 (Real) T@U)
(declare-fun $generated@@10 (T@U) Real)
(declare-fun $generated@@11 (Bool) T@U)
(declare-fun $generated@@12 (RoundingMode) T@U)
(declare-fun $generated@@13 (T@U) RoundingMode)
(declare-fun $generated@@14 (String) T@U)
(declare-fun $generated@@15 (T@U) String)
(declare-fun $generated@@16 ((RegEx String)) T@U)
(declare-fun $generated@@17 (T@U) (RegEx String))
(declare-fun $generated@@44 () T@U)
(declare-fun $generated@@45 () T@U)
(declare-fun $generated@@46 () T@U)
(declare-fun $generated@@47 () T@U)
(declare-fun $generated@@48 () T@U)
(declare-fun $generated@@49 () T@U)
(declare-fun $generated@@50 () T@U)
(declare-fun $generated@@51 () T@U)
(declare-fun $generated@@52 () T@U)
(declare-fun $generated@@53 () T@U)
(declare-fun $generated@@54 () T@U)
(declare-fun $generated@@55 () T@U)
(declare-fun $generated@@56 () T@U)
(declare-fun $generated@@57 () T@U)
(declare-fun $generated@@58 () T@U)
(declare-fun $generated@@59 () T@U)
(declare-fun $generated@@60 () T@U)
(declare-fun $generated@@61 () T@U)
(declare-fun $generated@@62 () T@U)
(declare-fun $generated@@63 () T@U)
(declare-fun $generated@@64 () T@T)
(declare-fun $generated@@65 () T@T)
(declare-fun $generated@@66 (T@T) T@T)
(declare-fun $generated@@67 (T@T) T@T)
(declare-fun $generated@@68 () T@T)
(declare-fun $generated@@69 () T@T)
(declare-fun $generated@@72 (T@U) T@U)
(declare-fun $generated@@74 (T@U T@U T@U) Bool)
(declare-fun $generated@@75 (Int) T@U)
(declare-fun $generated@@76 (T@T T@T) T@T)
(declare-fun $generated@@77 () T@T)
(declare-fun $generated@@78 () T@T)
(declare-fun $generated@@79 (T@T) T@T)
(declare-fun $generated@@80 (T@T) T@T)
(declare-fun $generated@@81 (T@U T@U) T@U)
(declare-fun $generated@@82 (T@U T@U T@U) T@U)
(declare-fun $generated@@83 (T@U T@U) T@U)
(declare-fun $generated@@84 (T@U T@U T@U) T@U)
(declare-fun $generated@@132 (T@U T@U) Bool)
(declare-fun $generated@@134 (T@U) Bool)
(declare-fun $generated@@135 (T@U T@U) T@U)
(declare-fun $generated@@136 () T@T)
(declare-fun $generated@@142 (T@U T@U) Bool)
(declare-fun $generated@@143 (T@U) T@U)
(declare-fun $generated@@144 (T@U) T@U)
(declare-fun $generated@@145 () T@T)
(declare-fun $generated@@150 (T@U T@U) Bool)
(declare-fun $generated@@151 (T@T) T@U)
(declare-fun $generated@@152 (T@T) T@T)
(declare-fun $generated@@153 (T@T) T@T)
(declare-fun $generated@@159 (T@U) T@U)
(declare-fun $generated@@160 (T@U) Bool)
(declare-fun $generated@@164 (T@U T@U T@U) T@U)
(declare-fun $generated@@165 (T@U T@U T@U Bool) T@U)
(declare-fun $generated@@166 (T@T T@T) T@T)
(declare-fun $generated@@167 (T@T) T@T)
(declare-fun $generated@@168 (T@T) T@T)
(declare-fun $generated@@169 (T@U T@U T@U T@U) T@U)
(declare-fun $generated@@220 (T@U T@U) T@U)
(declare-fun $generated@@221 (T@U T@U) Bool)
(declare-fun $generated@@230 (T@U) T@U)
(declare-fun $generated@@235 (T@U) T@U)
(declare-fun $generated@@240 (Int) Int)
(declare-fun $generated@@242 (T@U) T@U)
(declare-fun $generated@@246 (T@U) Bool)
(declare-fun $generated@@247 (T@U T@U T@U) Bool)
(declare-fun $generated@@253 (T@U) T@U)
(declare-fun $generated@@259 (T@U) Int)
(declare-fun $generated@@261 (T@U) T@U)
(declare-fun $generated@@266 (T@U) Int)
(declare-fun $generated@@267 (T@T) T@U)
(declare-fun $generated@@272 (T@U) T@U)
(declare-fun $generated@@273 (T@T T@T) T@U)
(declare-fun $generated@@274 (T@T T@T) T@T)
(declare-fun $generated@@275 (T@T) T@T)
(declare-fun $generated@@276 (T@T) T@T)
(declare-fun $generated@@290 (T@U) T@U)
(declare-fun $generated@@291 (T@T T@T) T@U)
(declare-fun $generated@@292 (T@T T@T) T@T)
(declare-fun $generated@@293 (T@T) T@T)
(declare-fun $generated@@294 (T@T) T@T)
(declare-fun $generated@@315 (T@U) T@U)
(declare-fun $generated@@326 (T@U) T@U)
(declare-fun $generated@@336 (T@U Int) T@U)
(declare-fun $generated@@354 (T@U) T@U)
(declare-fun $generated@@355 (T@T T@U) T@U)
(declare-fun $generated@@356 (T@U) T@U)
(declare-fun $generated@@365 (T@U) T@U)
(declare-fun $generated@@366 (T@U) T@U)
(declare-fun $generated@@383 (T@U T@U) T@U)
(declare-fun $generated@@391 (T@U T@U) T@U)
(declare-fun $generated@@399 (T@T) T@U)
(declare-fun $generated@@423 () T@T)
(declare-fun $generated@@431 (T@U) T@U)
(declare-fun $generated@@435 (T@U) T@U)
(declare-fun $generated@@441 (T@U) T@U)
(declare-fun $generated@@445 (T@U) T@U)
(declare-fun $generated@@453 (T@U) T@U)
(declare-fun $generated@@457 (T@U) T@U)
(declare-fun $generated@@465 (T@U) T@U)
(declare-fun $generated@@471 (T@U) Int)
(declare-fun $generated@@473 (T@U) T@U)
(declare-fun $generated@@477 (T@U) T@U)
(declare-fun $generated@@481 (T@U) T@U)
(declare-fun $generated@@485 (T@U) T@U)
(declare-fun $generated@@499 (T@U) Int)
(declare-fun $generated@@500 (T@U) Int)
(declare-fun $generated@@516 (T@U) T@U)
(declare-fun $generated@@565 (T@U) Int)
(assert  (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (= ($generated@@1 $generated@@2) 0) (= ($generated@@1 $generated@@3) 1)) (= ($generated@@1 $generated@@4) 2)) (= ($generated@@1 $generated@@5) 3)) (= ($generated@@1 $generated@@6) 4)) (= ($generated@@1 $generated@@7) 5)) (forall (($generated@@18 Int) ) (! (= ($generated ($generated@@8 $generated@@18)) $generated@@18)
 :pattern ( ($generated@@8 $generated@@18))
))) (forall (($generated@@19 T@U) ) (!  (=> (= (type $generated@@19) $generated@@2) (= ($generated@@8 ($generated $generated@@19)) $generated@@19))
 :pattern ( ($generated $generated@@19))
))) (forall (($generated@@20 Int) ) (! (= (type ($generated@@8 $generated@@20)) $generated@@2)
 :pattern ( ($generated@@8 $generated@@20))
))) (forall (($generated@@21 Real) ) (! (= ($generated@@10 ($generated@@9 $generated@@21)) $generated@@21)
 :pattern ( ($generated@@9 $generated@@21))
))) (forall (($generated@@22 T@U) ) (!  (=> (= (type $generated@@22) $generated@@3) (= ($generated@@9 ($generated@@10 $generated@@22)) $generated@@22))
 :pattern ( ($generated@@10 $generated@@22))
))) (forall (($generated@@23 Real) ) (! (= (type ($generated@@9 $generated@@23)) $generated@@3)
 :pattern ( ($generated@@9 $generated@@23))
))) (forall (($generated@@24 Bool) ) (! (= ($generated@@0 ($generated@@11 $generated@@24)) $generated@@24)
 :pattern ( ($generated@@11 $generated@@24))
))) (forall (($generated@@25 T@U) ) (!  (=> (= (type $generated@@25) $generated@@4) (= ($generated@@11 ($generated@@0 $generated@@25)) $generated@@25))
 :pattern ( ($generated@@0 $generated@@25))
))) (forall (($generated@@26 Bool) ) (! (= (type ($generated@@11 $generated@@26)) $generated@@4)
 :pattern ( ($generated@@11 $generated@@26))
))) (forall (($generated@@27 RoundingMode) ) (! (= ($generated@@13 ($generated@@12 $generated@@27)) $generated@@27)
 :pattern ( ($generated@@12 $generated@@27))
))) (forall (($generated@@28 T@U) ) (!  (=> (= (type $generated@@28) $generated@@5) (= ($generated@@12 ($generated@@13 $generated@@28)) $generated@@28))
 :pattern ( ($generated@@13 $generated@@28))
))) (forall (($generated@@29 RoundingMode) ) (! (= (type ($generated@@12 $generated@@29)) $generated@@5)
 :pattern ( ($generated@@12 $generated@@29))
))) (forall (($generated@@30 String) ) (! (= ($generated@@15 ($generated@@14 $generated@@30)) $generated@@30)
 :pattern ( ($generated@@14 $generated@@30))
))) (forall (($generated@@31 T@U) ) (!  (=> (= (type $generated@@31) $generated@@6) (= ($generated@@14 ($generated@@15 $generated@@31)) $generated@@31))
 :pattern ( ($generated@@15 $generated@@31))
))) (forall (($generated@@32 String) ) (! (= (type ($generated@@14 $generated@@32)) $generated@@6)
 :pattern ( ($generated@@14 $generated@@32))
))) (forall (($generated@@33 (RegEx String)) ) (! (= ($generated@@17 ($generated@@16 $generated@@33)) $generated@@33)
 :pattern ( ($generated@@16 $generated@@33))
))) (forall (($generated@@34 T@U) ) (!  (=> (= (type $generated@@34) $generated@@7) (= ($generated@@16 ($generated@@17 $generated@@34)) $generated@@34))
 :pattern ( ($generated@@17 $generated@@34))
))) (forall (($generated@@35 (RegEx String)) ) (! (= (type ($generated@@16 $generated@@35)) $generated@@7)
 :pattern ( ($generated@@16 $generated@@35))
))))
(assert (forall (($generated@@36 T@U) ) (! (UOrdering2 $generated@@36 $generated@@36)
 :no-pattern ($generated $generated@@36)
 :no-pattern ($generated@@0 $generated@@36)
)))
(assert (forall (($generated@@37 T@U) ($generated@@38 T@U) ($generated@@39 T@U) ) (! (let (($generated@@40 (type $generated@@37)))
 (=> (and (and (= (type $generated@@38) $generated@@40) (= (type $generated@@39) $generated@@40)) (and (UOrdering2 $generated@@37 $generated@@38) (UOrdering2 $generated@@38 $generated@@39))) (UOrdering2 $generated@@37 $generated@@39)))
 :pattern ( (UOrdering2 $generated@@37 $generated@@38) (UOrdering2 $generated@@38 $generated@@39))
)))
(assert (forall (($generated@@41 T@U) ($generated@@42 T@U) ) (! (let (($generated@@43 (type $generated@@41)))
 (=> (= (type $generated@@42) $generated@@43) (=> (and (UOrdering2 $generated@@41 $generated@@42) (UOrdering2 $generated@@42 $generated@@41)) (= $generated@@41 $generated@@42))))
 :pattern ( (UOrdering2 $generated@@41 $generated@@42) (UOrdering2 $generated@@42 $generated@@41))
)))
(assert  (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (= ($generated@@1 $generated@@64) 6) (= (type $generated@@44) $generated@@64)) (= (type $generated@@45) $generated@@64)) (= (type $generated@@46) $generated@@64)) (= (type $generated@@47) $generated@@64)) (= (type $generated@@48) $generated@@64)) (= ($generated@@1 $generated@@65) 7)) (= (type $generated@@49) $generated@@65)) (= (type $generated@@50) $generated@@65)) (= (type $generated@@51) $generated@@65)) (= (type $generated@@52) $generated@@65)) (= (type $generated@@53) $generated@@65)) (= (type $generated@@54) $generated@@65)) (= (type $generated@@55) $generated@@65)) (= (type $generated@@56) $generated@@65)) (= (type $generated@@57) $generated@@65)) (= (type $generated@@58) $generated@@65)) (= (type $generated@@59) $generated@@65)) (forall (($generated@@70 T@T) ) (= ($generated@@1 ($generated@@66 $generated@@70)) 8))) (forall (($generated@@71 T@T) ) (! (= ($generated@@67 ($generated@@66 $generated@@71)) $generated@@71)
 :pattern ( ($generated@@66 $generated@@71))
))) (= (type $generated@@60) ($generated@@66 $generated@@4))) (= ($generated@@1 $generated@@68) 9)) (= (type $generated@@61) $generated@@68)) (= (type $generated@@62) $generated@@65)) (= ($generated@@1 $generated@@69) 10)) (= (type $generated@@63) $generated@@69)))
(assert (distinct $generated@@44 $generated@@45 $generated@@46 $generated@@47 $generated@@48 $generated@@49 $generated@@50 $generated@@51 $generated@@52 $generated@@53 $generated@@54 $generated@@55 $generated@@56 $generated@@57 $generated@@58 $generated@@59 $generated@@60 $generated@@61 $generated@@62 $generated@@63)
)
(assert (forall (($generated@@73 T@U) ) (! (= (type ($generated@@72 $generated@@73)) $generated@@65)
 :pattern ( ($generated@@72 $generated@@73))
)))
(assert (= ($generated@@72 $generated@@44) $generated@@49))
(assert (= ($generated@@72 $generated@@45) $generated@@50))
(assert (= ($generated@@72 $generated@@46) $generated@@51))
(assert (= ($generated@@72 $generated@@47) $generated@@52))
(assert (= ($generated@@72 $generated@@48) $generated@@53))
(assert  (and (and (and (and (and (and (and (and (and (and (and (and (and (forall (($generated@@85 T@T) ($generated@@86 T@T) ) (= ($generated@@1 ($generated@@76 $generated@@85 $generated@@86)) 11)) (forall (($generated@@87 T@T) ($generated@@88 T@T) ) (! (= ($generated@@79 ($generated@@76 $generated@@87 $generated@@88)) $generated@@87)
 :pattern ( ($generated@@76 $generated@@87 $generated@@88))
))) (forall (($generated@@89 T@T) ($generated@@90 T@T) ) (! (= ($generated@@80 ($generated@@76 $generated@@89 $generated@@90)) $generated@@90)
 :pattern ( ($generated@@76 $generated@@89 $generated@@90))
))) (forall (($generated@@91 T@U) ($generated@@92 T@U) ) (! (let (($generated@@93 ($generated@@80 (type $generated@@91))))
(= (type ($generated@@81 $generated@@91 $generated@@92)) $generated@@93))
 :pattern ( ($generated@@81 $generated@@91 $generated@@92))
))) (forall (($generated@@94 T@U) ($generated@@95 T@U) ($generated@@96 T@U) ) (! (let (($generated@@97 (type $generated@@96)))
(let (($generated@@98 (type $generated@@95)))
(= (type ($generated@@82 $generated@@94 $generated@@95 $generated@@96)) ($generated@@76 $generated@@98 $generated@@97))))
 :pattern ( ($generated@@82 $generated@@94 $generated@@95 $generated@@96))
))) (forall (($generated@@99 T@U) ($generated@@100 T@U) ($generated@@101 T@U) ) (! (let (($generated@@102 ($generated@@80 (type $generated@@99))))
 (=> (= (type $generated@@101) $generated@@102) (= ($generated@@81 ($generated@@82 $generated@@99 $generated@@100 $generated@@101) $generated@@100) $generated@@101)))
 :weight 0
))) (and (forall (($generated@@103 T@U) ($generated@@104 T@U) ($generated@@105 T@U) ($generated@@106 T@U) ) (!  (or (= $generated@@105 $generated@@106) (= ($generated@@81 ($generated@@82 $generated@@104 $generated@@105 $generated@@103) $generated@@106) ($generated@@81 $generated@@104 $generated@@106)))
 :weight 0
)) (forall (($generated@@107 T@U) ($generated@@108 T@U) ($generated@@109 T@U) ($generated@@110 T@U) ) (!  (or true (= ($generated@@81 ($generated@@82 $generated@@108 $generated@@109 $generated@@107) $generated@@110) ($generated@@81 $generated@@108 $generated@@110)))
 :weight 0
)))) (= ($generated@@1 $generated@@77) 12)) (forall (($generated@@111 T@U) ($generated@@112 T@U) ) (! (let (($generated@@113 ($generated@@67 (type $generated@@112))))
(= (type ($generated@@83 $generated@@111 $generated@@112)) $generated@@113))
 :pattern ( ($generated@@83 $generated@@111 $generated@@112))
))) (= ($generated@@1 $generated@@78) 13)) (forall (($generated@@114 T@U) ($generated@@115 T@U) ($generated@@116 T@U) ) (! (= (type ($generated@@84 $generated@@114 $generated@@115 $generated@@116)) $generated@@78)
 :pattern ( ($generated@@84 $generated@@114 $generated@@115 $generated@@116))
))) (forall (($generated@@117 T@U) ($generated@@118 T@U) ($generated@@119 T@U) ) (! (let (($generated@@120 ($generated@@67 (type $generated@@118))))
 (=> (= (type $generated@@119) $generated@@120) (= ($generated@@83 ($generated@@84 $generated@@117 $generated@@118 $generated@@119) $generated@@118) $generated@@119)))
 :weight 0
))) (and (forall (($generated@@121 T@U) ($generated@@122 T@U) ($generated@@123 T@U) ($generated@@124 T@U) ) (!  (or (= $generated@@123 $generated@@124) (= ($generated@@83 ($generated@@84 $generated@@122 $generated@@123 $generated@@121) $generated@@124) ($generated@@83 $generated@@122 $generated@@124)))
 :weight 0
)) (forall (($generated@@125 T@U) ($generated@@126 T@U) ($generated@@127 T@U) ($generated@@128 T@U) ) (!  (or true (= ($generated@@83 ($generated@@84 $generated@@126 $generated@@127 $generated@@125) $generated@@128) ($generated@@83 $generated@@126 $generated@@128)))
 :weight 0
)))) (forall (($generated@@129 Int) ) (! (= (type ($generated@@75 $generated@@129)) $generated@@64)
 :pattern ( ($generated@@75 $generated@@129))
))))
(assert (forall (($generated@@130 T@U) ($generated@@131 T@U) ) (!  (=> (and (= (type $generated@@130) $generated@@2) (= (type $generated@@131) ($generated@@76 $generated@@77 $generated@@78))) ($generated@@74 $generated@@130 ($generated@@75 0) $generated@@131))
 :pattern ( ($generated@@74 $generated@@130 ($generated@@75 0) $generated@@131))
)))
(assert (forall (($generated@@133 T@U) ) (!  (=> (= (type $generated@@133) $generated@@2) ($generated@@132 $generated@@133 ($generated@@75 0)))
 :pattern ( ($generated@@132 $generated@@133 ($generated@@75 0)))
)))
(assert  (and (= ($generated@@1 $generated@@136) 14) (forall (($generated@@137 T@U) ($generated@@138 T@U) ) (! (= (type ($generated@@135 $generated@@137 $generated@@138)) $generated@@64)
 :pattern ( ($generated@@135 $generated@@137 $generated@@138))
))))
(assert (forall (($generated@@139 T@U) ($generated@@140 T@U) ($generated@@141 T@U) ) (!  (=> (and (and (and (= (type $generated@@139) $generated@@64) (= (type $generated@@140) $generated@@64)) (= (type $generated@@141) $generated@@136)) ($generated@@132 $generated@@141 ($generated@@135 $generated@@139 $generated@@140))) ($generated@@134 $generated@@141))
 :pattern ( ($generated@@134 $generated@@141) ($generated@@132 $generated@@141 ($generated@@135 $generated@@139 $generated@@140)))
)))
(assert  (and (and (= ($generated@@1 $generated@@145) 15) (forall (($generated@@146 T@U) ) (! (= (type ($generated@@143 $generated@@146)) $generated@@145)
 :pattern ( ($generated@@143 $generated@@146))
))) (forall (($generated@@147 T@U) ) (! (= (type ($generated@@144 $generated@@147)) $generated@@145)
 :pattern ( ($generated@@144 $generated@@147))
))))
(assert (forall (($generated@@148 T@U) ($generated@@149 T@U) ) (!  (=> (and (and (= (type $generated@@148) $generated@@136) (= (type $generated@@149) $generated@@136)) true) (= ($generated@@142 $generated@@148 $generated@@149)  (and (= ($generated@@143 $generated@@148) ($generated@@143 $generated@@149)) (= ($generated@@144 $generated@@148) ($generated@@144 $generated@@149)))))
 :pattern ( ($generated@@142 $generated@@148 $generated@@149))
)))
(assert  (and (and (forall (($generated@@154 T@T) ) (= ($generated@@1 ($generated@@152 $generated@@154)) 16)) (forall (($generated@@155 T@T) ) (! (= ($generated@@153 ($generated@@152 $generated@@155)) $generated@@155)
 :pattern ( ($generated@@152 $generated@@155))
))) (forall (($generated@@156 T@T) ) (! (= (type ($generated@@151 $generated@@156)) ($generated@@152 $generated@@156))
 :pattern ( ($generated@@151 $generated@@156))
))))
(assert (forall (($generated@@157 T@U) ) (! (let (($generated@@158 (type $generated@@157)))
 (not ($generated@@150 ($generated@@151 $generated@@158) $generated@@157)))
 :pattern ( (let (($generated@@158 (type $generated@@157)))
($generated@@150 ($generated@@151 $generated@@158) $generated@@157)))
)))
(assert (forall (($generated@@161 T@U) ) (! (= (type ($generated@@159 $generated@@161)) $generated@@64)
 :pattern ( ($generated@@159 $generated@@161))
)))
(assert (forall (($generated@@162 T@U) ($generated@@163 T@U) ) (!  (=> (and (and (= (type $generated@@162) ($generated@@76 $generated@@145 $generated@@2)) (= (type $generated@@163) $generated@@64)) ($generated@@132 $generated@@162 ($generated@@159 $generated@@163))) ($generated@@160 $generated@@162))
 :pattern ( ($generated@@132 $generated@@162 ($generated@@159 $generated@@163)))
)))
(assert  (and (and (and (and (and (and (and (forall (($generated@@170 T@T) ($generated@@171 T@T) ) (= ($generated@@1 ($generated@@166 $generated@@170 $generated@@171)) 17)) (forall (($generated@@172 T@T) ($generated@@173 T@T) ) (! (= ($generated@@167 ($generated@@166 $generated@@172 $generated@@173)) $generated@@172)
 :pattern ( ($generated@@166 $generated@@172 $generated@@173))
))) (forall (($generated@@174 T@T) ($generated@@175 T@T) ) (! (= ($generated@@168 ($generated@@166 $generated@@174 $generated@@175)) $generated@@175)
 :pattern ( ($generated@@166 $generated@@174 $generated@@175))
))) (forall (($generated@@176 T@U) ($generated@@177 T@U) ($generated@@178 T@U) ) (! (let (($generated@@179 ($generated@@168 (type $generated@@176))))
(= (type ($generated@@164 $generated@@176 $generated@@177 $generated@@178)) $generated@@179))
 :pattern ( ($generated@@164 $generated@@176 $generated@@177 $generated@@178))
))) (forall (($generated@@180 T@U) ($generated@@181 T@U) ($generated@@182 T@U) ($generated@@183 T@U) ) (! (let (($generated@@184 (type $generated@@183)))
(let (($generated@@185 (type $generated@@181)))
(= (type ($generated@@169 $generated@@180 $generated@@181 $generated@@182 $generated@@183)) ($generated@@166 $generated@@185 $generated@@184))))
 :pattern ( ($generated@@169 $generated@@180 $generated@@181 $generated@@182 $generated@@183))
))) (forall (($generated@@186 T@U) ($generated@@187 T@U) ($generated@@188 T@U) ($generated@@189 T@U) ) (! (let (($generated@@190 ($generated@@168 (type $generated@@186))))
 (=> (= (type $generated@@189) $generated@@190) (= ($generated@@164 ($generated@@169 $generated@@186 $generated@@187 $generated@@188 $generated@@189) $generated@@187 $generated@@188) $generated@@189)))
 :weight 0
))) (and (and (forall (($generated@@191 T@U) ($generated@@192 T@U) ($generated@@193 T@U) ($generated@@194 T@U) ($generated@@195 T@U) ($generated@@196 T@U) ) (!  (or (= $generated@@193 $generated@@195) (= ($generated@@164 ($generated@@169 $generated@@192 $generated@@193 $generated@@194 $generated@@191) $generated@@195 $generated@@196) ($generated@@164 $generated@@192 $generated@@195 $generated@@196)))
 :weight 0
)) (forall (($generated@@197 T@U) ($generated@@198 T@U) ($generated@@199 T@U) ($generated@@200 T@U) ($generated@@201 T@U) ($generated@@202 T@U) ) (!  (or (= $generated@@200 $generated@@202) (= ($generated@@164 ($generated@@169 $generated@@198 $generated@@199 $generated@@200 $generated@@197) $generated@@201 $generated@@202) ($generated@@164 $generated@@198 $generated@@201 $generated@@202)))
 :weight 0
))) (forall (($generated@@203 T@U) ($generated@@204 T@U) ($generated@@205 T@U) ($generated@@206 T@U) ($generated@@207 T@U) ($generated@@208 T@U) ) (!  (or true (= ($generated@@164 ($generated@@169 $generated@@204 $generated@@205 $generated@@206 $generated@@203) $generated@@207 $generated@@208) ($generated@@164 $generated@@204 $generated@@207 $generated@@208)))
 :weight 0
)))) (forall (($generated@@209 T@U) ($generated@@210 T@U) ($generated@@211 T@U) ($generated@@212 Bool) ) (! (= (type ($generated@@165 $generated@@209 $generated@@210 $generated@@211 $generated@@212)) ($generated@@166 $generated@@77 $generated@@4))
 :pattern ( ($generated@@165 $generated@@209 $generated@@210 $generated@@211 $generated@@212))
))))
(assert (forall (($generated@@213 T@U) ($generated@@214 T@U) ($generated@@215 T@U) ($generated@@216 Bool) ($generated@@217 T@U) ($generated@@218 T@U) ) (! (let (($generated@@219 ($generated@@67 (type $generated@@218))))
 (=> (and (and (and (and (= (type $generated@@213) $generated@@77) (= (type $generated@@214) ($generated@@76 $generated@@77 $generated@@78))) (= (type $generated@@215) ($generated@@66 $generated@@4))) (= (type $generated@@217) $generated@@77)) (= (type $generated@@218) ($generated@@66 $generated@@219))) (= ($generated@@0 ($generated@@164 ($generated@@165 $generated@@213 $generated@@214 $generated@@215 $generated@@216) $generated@@217 $generated@@218))  (=> (and (not (= $generated@@217 $generated@@213)) ($generated@@0 ($generated@@83 ($generated@@81 $generated@@214 $generated@@217) $generated@@215))) $generated@@216))))
 :pattern ( ($generated@@164 ($generated@@165 $generated@@213 $generated@@214 $generated@@215 $generated@@216) $generated@@217 $generated@@218))
)))
(assert (forall (($generated@@222 T@U) ($generated@@223 T@U) ) (! (= (type ($generated@@220 $generated@@222 $generated@@223)) $generated@@136)
 :pattern ( ($generated@@220 $generated@@222 $generated@@223))
)))
(assert (forall (($generated@@224 T@U) ($generated@@225 T@U) ($generated@@226 T@U) ($generated@@227 T@U) ) (!  (=> (and (and (and (= (type $generated@@224) $generated@@64) (= (type $generated@@225) $generated@@64)) (= (type $generated@@226) $generated@@145)) (= (type $generated@@227) $generated@@145)) (= ($generated@@132 ($generated@@220 $generated@@226 $generated@@227) ($generated@@135 $generated@@224 $generated@@225))  (and ($generated@@221 $generated@@226 $generated@@224) ($generated@@221 $generated@@227 $generated@@225))))
 :pattern ( ($generated@@132 ($generated@@220 $generated@@226 $generated@@227) ($generated@@135 $generated@@224 $generated@@225)))
)))
(assert (forall (($generated@@228 T@U) ($generated@@229 T@U) ) (!  (=> (and (= (type $generated@@228) $generated@@136) (= (type $generated@@229) $generated@@136)) (= ($generated@@142 $generated@@228 $generated@@229) (= $generated@@228 $generated@@229)))
 :pattern ( ($generated@@142 $generated@@228 $generated@@229))
)))
(assert (forall (($generated@@231 T@U) ) (! (= (type ($generated@@230 $generated@@231)) $generated@@64)
 :pattern ( ($generated@@230 $generated@@231))
)))
(assert (forall (($generated@@232 T@U) ($generated@@233 T@U) ) (!  (=> (and (= (type $generated@@232) ($generated@@76 $generated@@145 $generated@@4)) (= (type $generated@@233) $generated@@64)) (= ($generated@@132 $generated@@232 ($generated@@230 $generated@@233)) (forall (($generated@@234 T@U) ) (!  (=> (and (= (type $generated@@234) $generated@@145) ($generated@@0 ($generated@@81 $generated@@232 $generated@@234))) ($generated@@221 $generated@@234 $generated@@233))
 :pattern ( ($generated@@81 $generated@@232 $generated@@234))
))))
 :pattern ( ($generated@@132 $generated@@232 ($generated@@230 $generated@@233)))
)))
(assert (forall (($generated@@236 T@U) ) (! (= (type ($generated@@235 $generated@@236)) $generated@@64)
 :pattern ( ($generated@@235 $generated@@236))
)))
(assert (forall (($generated@@237 T@U) ($generated@@238 T@U) ) (!  (=> (and (= (type $generated@@237) ($generated@@76 $generated@@145 $generated@@4)) (= (type $generated@@238) $generated@@64)) (= ($generated@@132 $generated@@237 ($generated@@235 $generated@@238)) (forall (($generated@@239 T@U) ) (!  (=> (and (= (type $generated@@239) $generated@@145) ($generated@@0 ($generated@@81 $generated@@237 $generated@@239))) ($generated@@221 $generated@@239 $generated@@238))
 :pattern ( ($generated@@81 $generated@@237 $generated@@239))
))))
 :pattern ( ($generated@@132 $generated@@237 ($generated@@235 $generated@@238)))
)))
(assert (forall (($generated@@241 Int) ) (! (= ($generated@@240 $generated@@241) $generated@@241)
 :pattern ( ($generated@@240 $generated@@241))
)))
(assert (forall (($generated@@243 T@U) ) (! (let (($generated@@244 (type $generated@@243)))
(= (type ($generated@@242 $generated@@243)) $generated@@244))
 :pattern ( ($generated@@242 $generated@@243))
)))
(assert (forall (($generated@@245 T@U) ) (! (= ($generated@@242 $generated@@245) $generated@@245)
 :pattern ( ($generated@@242 $generated@@245))
)))
(assert (forall (($generated@@248 T@U) ($generated@@249 T@U) ($generated@@250 T@U) ($generated@@251 T@U) ($generated@@252 T@U) ) (!  (=> (and (and (and (and (and (= (type $generated@@248) $generated@@64) (= (type $generated@@249) $generated@@64)) (= (type $generated@@250) $generated@@145)) (= (type $generated@@251) $generated@@145)) (= (type $generated@@252) ($generated@@76 $generated@@77 $generated@@78))) ($generated@@246 $generated@@252)) (= ($generated@@74 ($generated@@220 $generated@@250 $generated@@251) ($generated@@135 $generated@@248 $generated@@249) $generated@@252)  (and ($generated@@247 $generated@@250 $generated@@248 $generated@@252) ($generated@@247 $generated@@251 $generated@@249 $generated@@252))))
 :pattern ( ($generated@@74 ($generated@@220 $generated@@250 $generated@@251) ($generated@@135 $generated@@248 $generated@@249) $generated@@252))
)))
(assert (forall (($generated@@254 T@U) ) (! (= (type ($generated@@253 $generated@@254)) $generated@@68)
 :pattern ( ($generated@@253 $generated@@254))
)))
(assert (forall (($generated@@255 T@U) ) (!  (=> (= (type $generated@@255) $generated@@136) (= ($generated@@134 $generated@@255) (= ($generated@@253 $generated@@255) $generated@@61)))
 :pattern ( ($generated@@134 $generated@@255))
)))
(assert (forall (($generated@@256 T@U) ) (!  (=> (and (= (type $generated@@256) $generated@@136) ($generated@@134 $generated@@256)) (exists (($generated@@257 T@U) ($generated@@258 T@U) ) (!  (and (and (= (type $generated@@257) $generated@@145) (= (type $generated@@258) $generated@@145)) (= $generated@@256 ($generated@@220 $generated@@257 $generated@@258)))
 :no-pattern (type $generated@@257)
 :no-pattern (type $generated@@258)
 :no-pattern ($generated $generated@@257)
 :no-pattern ($generated@@0 $generated@@257)
 :no-pattern ($generated $generated@@258)
 :no-pattern ($generated@@0 $generated@@258)
)))
 :pattern ( ($generated@@134 $generated@@256))
)))
(assert (forall (($generated@@260 T@T) ) (! (= ($generated@@259 ($generated@@151 $generated@@260)) 0)
 :pattern ( ($generated@@151 $generated@@260))
)))
(assert (forall (($generated@@262 T@U) ) (! (= (type ($generated@@261 $generated@@262)) $generated@@145)
 :pattern ( ($generated@@261 $generated@@262))
)))
(assert (forall (($generated@@263 T@U) ($generated@@264 T@U) ($generated@@265 T@U) ) (!  (=> (and (= (type $generated@@264) $generated@@64) (= (type $generated@@265) ($generated@@76 $generated@@77 $generated@@78))) (= ($generated@@247 ($generated@@261 $generated@@263) $generated@@264 $generated@@265) ($generated@@74 $generated@@263 $generated@@264 $generated@@265)))
 :pattern ( ($generated@@247 ($generated@@261 $generated@@263) $generated@@264 $generated@@265))
)))
(assert (forall (($generated@@268 T@T) ) (! (= (type ($generated@@267 $generated@@268)) ($generated@@76 $generated@@268 $generated@@2))
 :pattern ( ($generated@@267 $generated@@268))
)))
(assert (forall (($generated@@269 T@U) ) (! (let (($generated@@270 ($generated@@79 (type $generated@@269))))
 (=> (= (type $generated@@269) ($generated@@76 $generated@@270 $generated@@2)) (and (= (= ($generated@@266 $generated@@269) 0) (= $generated@@269 ($generated@@267 $generated@@270))) (=> (not (= ($generated@@266 $generated@@269) 0)) (exists (($generated@@271 T@U) ) (!  (and (= (type $generated@@271) $generated@@270) (< 0 ($generated ($generated@@81 $generated@@269 $generated@@271))))
 :no-pattern (type $generated@@271)
 :no-pattern ($generated $generated@@271)
 :no-pattern ($generated@@0 $generated@@271)
))))))
 :pattern ( ($generated@@266 $generated@@269))
)))
(assert  (and (and (and (and (forall (($generated@@277 T@T) ($generated@@278 T@T) ) (= ($generated@@1 ($generated@@274 $generated@@277 $generated@@278)) 18)) (forall (($generated@@279 T@T) ($generated@@280 T@T) ) (! (= ($generated@@275 ($generated@@274 $generated@@279 $generated@@280)) $generated@@279)
 :pattern ( ($generated@@274 $generated@@279 $generated@@280))
))) (forall (($generated@@281 T@T) ($generated@@282 T@T) ) (! (= ($generated@@276 ($generated@@274 $generated@@281 $generated@@282)) $generated@@282)
 :pattern ( ($generated@@274 $generated@@281 $generated@@282))
))) (forall (($generated@@283 T@U) ) (! (let (($generated@@284 ($generated@@275 (type $generated@@283))))
(= (type ($generated@@272 $generated@@283)) ($generated@@76 $generated@@284 $generated@@4)))
 :pattern ( ($generated@@272 $generated@@283))
))) (forall (($generated@@285 T@T) ($generated@@286 T@T) ) (! (= (type ($generated@@273 $generated@@285 $generated@@286)) ($generated@@274 $generated@@285 $generated@@286))
 :pattern ( ($generated@@273 $generated@@285 $generated@@286))
))))
(assert (forall (($generated@@287 T@U) ($generated@@288 T@T) ) (! (let (($generated@@289 (type $generated@@287)))
 (not ($generated@@0 ($generated@@81 ($generated@@272 ($generated@@273 $generated@@289 $generated@@288)) $generated@@287))))
 :pattern ( (let (($generated@@289 (type $generated@@287)))
($generated@@81 ($generated@@272 ($generated@@273 $generated@@289 $generated@@288)) $generated@@287)))
)))
(assert  (and (and (and (and (forall (($generated@@295 T@T) ($generated@@296 T@T) ) (= ($generated@@1 ($generated@@292 $generated@@295 $generated@@296)) 19)) (forall (($generated@@297 T@T) ($generated@@298 T@T) ) (! (= ($generated@@293 ($generated@@292 $generated@@297 $generated@@298)) $generated@@297)
 :pattern ( ($generated@@292 $generated@@297 $generated@@298))
))) (forall (($generated@@299 T@T) ($generated@@300 T@T) ) (! (= ($generated@@294 ($generated@@292 $generated@@299 $generated@@300)) $generated@@300)
 :pattern ( ($generated@@292 $generated@@299 $generated@@300))
))) (forall (($generated@@301 T@U) ) (! (let (($generated@@302 ($generated@@293 (type $generated@@301))))
(= (type ($generated@@290 $generated@@301)) ($generated@@76 $generated@@302 $generated@@4)))
 :pattern ( ($generated@@290 $generated@@301))
))) (forall (($generated@@303 T@T) ($generated@@304 T@T) ) (! (= (type ($generated@@291 $generated@@303 $generated@@304)) ($generated@@292 $generated@@303 $generated@@304))
 :pattern ( ($generated@@291 $generated@@303 $generated@@304))
))))
(assert (forall (($generated@@305 T@U) ($generated@@306 T@T) ) (! (let (($generated@@307 (type $generated@@305)))
 (not ($generated@@0 ($generated@@81 ($generated@@290 ($generated@@291 $generated@@307 $generated@@306)) $generated@@305))))
 :pattern ( (let (($generated@@307 (type $generated@@305)))
($generated@@81 ($generated@@290 ($generated@@291 $generated@@307 $generated@@306)) $generated@@305)))
)))
(assert (forall (($generated@@308 T@U) ) (! (let (($generated@@309 ($generated@@79 (type $generated@@308))))
 (=> (= (type $generated@@308) ($generated@@76 $generated@@309 $generated@@2)) (= ($generated@@160 $generated@@308) (forall (($generated@@310 T@U) ) (!  (=> (= (type $generated@@310) $generated@@309) (and (<= 0 ($generated ($generated@@81 $generated@@308 $generated@@310))) (<= ($generated ($generated@@81 $generated@@308 $generated@@310)) ($generated@@266 $generated@@308))))
 :pattern ( ($generated@@81 $generated@@308 $generated@@310))
)))))
 :pattern ( ($generated@@160 $generated@@308))
)))
(assert (forall (($generated@@311 T@U) ) (! (let (($generated@@312 ($generated@@276 (type $generated@@311))))
(let (($generated@@313 ($generated@@275 (type $generated@@311))))
 (=> (= (type $generated@@311) ($generated@@274 $generated@@313 $generated@@312)) (or (= $generated@@311 ($generated@@273 $generated@@313 $generated@@312)) (exists (($generated@@314 T@U) ) (!  (and (= (type $generated@@314) $generated@@313) ($generated@@0 ($generated@@81 ($generated@@272 $generated@@311) $generated@@314)))
 :no-pattern (type $generated@@314)
 :no-pattern ($generated $generated@@314)
 :no-pattern ($generated@@0 $generated@@314)
))))))
 :pattern ( ($generated@@272 $generated@@311))
)))
(assert (forall (($generated@@316 T@U) ) (! (let (($generated@@317 ($generated@@276 (type $generated@@316))))
(= (type ($generated@@315 $generated@@316)) ($generated@@76 $generated@@317 $generated@@4)))
 :pattern ( ($generated@@315 $generated@@316))
)))
(assert (forall (($generated@@318 T@U) ) (! (let (($generated@@319 ($generated@@276 (type $generated@@318))))
(let (($generated@@320 ($generated@@275 (type $generated@@318))))
 (=> (= (type $generated@@318) ($generated@@274 $generated@@320 $generated@@319)) (or (= $generated@@318 ($generated@@273 $generated@@320 $generated@@319)) (exists (($generated@@321 T@U) ) (!  (and (= (type $generated@@321) $generated@@319) ($generated@@0 ($generated@@81 ($generated@@315 $generated@@318) $generated@@321)))
 :no-pattern (type $generated@@321)
 :no-pattern ($generated $generated@@321)
 :no-pattern ($generated@@0 $generated@@321)
))))))
 :pattern ( ($generated@@315 $generated@@318))
)))
(assert (forall (($generated@@322 T@U) ) (! (let (($generated@@323 ($generated@@294 (type $generated@@322))))
(let (($generated@@324 ($generated@@293 (type $generated@@322))))
 (=> (= (type $generated@@322) ($generated@@292 $generated@@324 $generated@@323)) (or (= $generated@@322 ($generated@@291 $generated@@324 $generated@@323)) (exists (($generated@@325 T@U) ) (!  (and (= (type $generated@@325) $generated@@324) ($generated@@0 ($generated@@81 ($generated@@290 $generated@@322) $generated@@325)))
 :no-pattern (type $generated@@325)
 :no-pattern ($generated $generated@@325)
 :no-pattern ($generated@@0 $generated@@325)
))))))
 :pattern ( ($generated@@290 $generated@@322))
)))
(assert (forall (($generated@@327 T@U) ) (! (let (($generated@@328 ($generated@@294 (type $generated@@327))))
(= (type ($generated@@326 $generated@@327)) ($generated@@76 $generated@@328 $generated@@4)))
 :pattern ( ($generated@@326 $generated@@327))
)))
(assert (forall (($generated@@329 T@U) ) (! (let (($generated@@330 ($generated@@294 (type $generated@@329))))
(let (($generated@@331 ($generated@@293 (type $generated@@329))))
 (=> (= (type $generated@@329) ($generated@@292 $generated@@331 $generated@@330)) (or (= $generated@@329 ($generated@@291 $generated@@331 $generated@@330)) (exists (($generated@@332 T@U) ) (!  (and (= (type $generated@@332) $generated@@330) ($generated@@0 ($generated@@81 ($generated@@326 $generated@@329) $generated@@332)))
 :no-pattern (type $generated@@332)
 :no-pattern ($generated $generated@@332)
 :no-pattern ($generated@@0 $generated@@332)
))))))
 :pattern ( ($generated@@326 $generated@@329))
)))
(assert (forall (($generated@@333 T@U) ($generated@@334 T@U) ) (!  (=> (and (= (type $generated@@333) ($generated@@76 $generated@@145 $generated@@2)) (= (type $generated@@334) $generated@@64)) (= ($generated@@132 $generated@@333 ($generated@@159 $generated@@334)) (forall (($generated@@335 T@U) ) (!  (=> (and (= (type $generated@@335) $generated@@145) (< 0 ($generated ($generated@@81 $generated@@333 $generated@@335)))) ($generated@@221 $generated@@335 $generated@@334))
 :pattern ( ($generated@@81 $generated@@333 $generated@@335))
))))
 :pattern ( ($generated@@132 $generated@@333 ($generated@@159 $generated@@334)))
)))
(assert (forall (($generated@@337 T@U) ($generated@@338 Int) ) (! (let (($generated@@339 ($generated@@153 (type $generated@@337))))
(= (type ($generated@@336 $generated@@337 $generated@@338)) $generated@@339))
 :pattern ( ($generated@@336 $generated@@337 $generated@@338))
)))
(assert (forall (($generated@@340 T@U) ($generated@@341 T@U) ) (! (let (($generated@@342 (type $generated@@341)))
 (=> (= (type $generated@@340) ($generated@@152 $generated@@342)) (= ($generated@@150 $generated@@340 $generated@@341) (exists (($generated@@343 Int) ) (!  (and (and (<= 0 $generated@@343) (< $generated@@343 ($generated@@259 $generated@@340))) (= ($generated@@336 $generated@@340 $generated@@343) $generated@@341))
 :pattern ( ($generated@@336 $generated@@340 $generated@@343))
)))))
 :pattern ( ($generated@@150 $generated@@340 $generated@@341))
)))
(assert (forall (($generated@@344 T@U) ($generated@@345 T@U) ($generated@@346 T@U) ) (!  (=> (and (and (= (type $generated@@344) ($generated@@76 $generated@@145 $generated@@4)) (= (type $generated@@345) $generated@@64)) (= (type $generated@@346) ($generated@@76 $generated@@77 $generated@@78))) (= ($generated@@74 $generated@@344 ($generated@@230 $generated@@345) $generated@@346) (forall (($generated@@347 T@U) ) (!  (=> (and (= (type $generated@@347) $generated@@145) ($generated@@0 ($generated@@81 $generated@@344 $generated@@347))) ($generated@@247 $generated@@347 $generated@@345 $generated@@346))
 :pattern ( ($generated@@81 $generated@@344 $generated@@347))
))))
 :pattern ( ($generated@@74 $generated@@344 ($generated@@230 $generated@@345) $generated@@346))
)))
(assert (forall (($generated@@348 T@U) ($generated@@349 T@U) ($generated@@350 T@U) ) (!  (=> (and (and (= (type $generated@@348) ($generated@@76 $generated@@145 $generated@@4)) (= (type $generated@@349) $generated@@64)) (= (type $generated@@350) ($generated@@76 $generated@@77 $generated@@78))) (= ($generated@@74 $generated@@348 ($generated@@235 $generated@@349) $generated@@350) (forall (($generated@@351 T@U) ) (!  (=> (and (= (type $generated@@351) $generated@@145) ($generated@@0 ($generated@@81 $generated@@348 $generated@@351))) ($generated@@247 $generated@@351 $generated@@349 $generated@@350))
 :pattern ( ($generated@@81 $generated@@348 $generated@@351))
))))
 :pattern ( ($generated@@74 $generated@@348 ($generated@@235 $generated@@349) $generated@@350))
)))
(assert (forall (($generated@@352 T@U) ) (! (let (($generated@@353 (type $generated@@352)))
(= ($generated ($generated@@81 ($generated@@267 $generated@@353) $generated@@352)) 0))
 :pattern ( (let (($generated@@353 (type $generated@@352)))
($generated@@81 ($generated@@267 $generated@@353) $generated@@352)))
)))
(assert  (and (and (forall (($generated@@357 T@U) ) (! (= (type ($generated@@354 $generated@@357)) ($generated@@76 $generated@@145 $generated@@4))
 :pattern ( ($generated@@354 $generated@@357))
)) (forall (($generated@@358 T@T) ($generated@@359 T@U) ) (! (= (type ($generated@@355 $generated@@358 $generated@@359)) $generated@@358)
 :pattern ( ($generated@@355 $generated@@358 $generated@@359))
))) (forall (($generated@@360 T@U) ) (! (let (($generated@@361 ($generated@@276 (type $generated@@360))))
(let (($generated@@362 ($generated@@275 (type $generated@@360))))
(= (type ($generated@@356 $generated@@360)) ($generated@@76 $generated@@362 $generated@@361))))
 :pattern ( ($generated@@356 $generated@@360))
))))
(assert (forall (($generated@@363 T@U) ($generated@@364 T@U) ) (!  (=> (and (= (type $generated@@363) ($generated@@274 $generated@@145 $generated@@145)) (= (type $generated@@364) $generated@@145)) (= ($generated@@0 ($generated@@81 ($generated@@354 $generated@@363) $generated@@364))  (and ($generated@@0 ($generated@@81 ($generated@@272 $generated@@363) ($generated@@143 ($generated@@355 $generated@@136 $generated@@364)))) (= ($generated@@81 ($generated@@356 $generated@@363) ($generated@@143 ($generated@@355 $generated@@136 $generated@@364))) ($generated@@144 ($generated@@355 $generated@@136 $generated@@364))))))
 :pattern ( ($generated@@81 ($generated@@354 $generated@@363) $generated@@364))
)))
(assert  (and (forall (($generated@@367 T@U) ) (! (= (type ($generated@@365 $generated@@367)) ($generated@@76 $generated@@145 $generated@@4))
 :pattern ( ($generated@@365 $generated@@367))
)) (forall (($generated@@368 T@U) ) (! (let (($generated@@369 ($generated@@294 (type $generated@@368))))
(let (($generated@@370 ($generated@@293 (type $generated@@368))))
(= (type ($generated@@366 $generated@@368)) ($generated@@76 $generated@@370 $generated@@369))))
 :pattern ( ($generated@@366 $generated@@368))
))))
(assert (forall (($generated@@371 T@U) ($generated@@372 T@U) ) (!  (=> (and (= (type $generated@@371) ($generated@@292 $generated@@145 $generated@@145)) (= (type $generated@@372) $generated@@145)) (= ($generated@@0 ($generated@@81 ($generated@@365 $generated@@371) $generated@@372))  (and ($generated@@0 ($generated@@81 ($generated@@290 $generated@@371) ($generated@@143 ($generated@@355 $generated@@136 $generated@@372)))) (= ($generated@@81 ($generated@@366 $generated@@371) ($generated@@143 ($generated@@355 $generated@@136 $generated@@372))) ($generated@@144 ($generated@@355 $generated@@136 $generated@@372))))))
 :pattern ( ($generated@@81 ($generated@@365 $generated@@371) $generated@@372))
)))
(assert (forall (($generated@@373 T@U) ($generated@@374 T@U) ) (! (let (($generated@@375 (type $generated@@374)))
(let (($generated@@376 ($generated@@275 (type $generated@@373))))
 (=> (= (type $generated@@373) ($generated@@274 $generated@@376 $generated@@375)) (= ($generated@@0 ($generated@@81 ($generated@@315 $generated@@373) $generated@@374)) (exists (($generated@@377 T@U) ) (!  (and (= (type $generated@@377) $generated@@376) (and ($generated@@0 ($generated@@81 ($generated@@272 $generated@@373) $generated@@377)) (= $generated@@374 ($generated@@81 ($generated@@356 $generated@@373) $generated@@377))))
 :pattern ( ($generated@@81 ($generated@@272 $generated@@373) $generated@@377))
 :pattern ( ($generated@@81 ($generated@@356 $generated@@373) $generated@@377))
))))))
 :pattern ( ($generated@@81 ($generated@@315 $generated@@373) $generated@@374))
)))
(assert (forall (($generated@@378 T@U) ($generated@@379 T@U) ) (! (let (($generated@@380 (type $generated@@379)))
(let (($generated@@381 ($generated@@293 (type $generated@@378))))
 (=> (= (type $generated@@378) ($generated@@292 $generated@@381 $generated@@380)) (= ($generated@@0 ($generated@@81 ($generated@@326 $generated@@378) $generated@@379)) (exists (($generated@@382 T@U) ) (!  (and (= (type $generated@@382) $generated@@381) (and ($generated@@0 ($generated@@81 ($generated@@290 $generated@@378) $generated@@382)) (= $generated@@379 ($generated@@81 ($generated@@366 $generated@@378) $generated@@382))))
 :pattern ( ($generated@@81 ($generated@@290 $generated@@378) $generated@@382))
 :pattern ( ($generated@@81 ($generated@@366 $generated@@378) $generated@@382))
))))))
 :pattern ( ($generated@@81 ($generated@@326 $generated@@378) $generated@@379))
)))
(assert (forall (($generated@@384 T@U) ($generated@@385 T@U) ) (! (= (type ($generated@@383 $generated@@384 $generated@@385)) $generated@@64)
 :pattern ( ($generated@@383 $generated@@384 $generated@@385))
)))
(assert (forall (($generated@@386 T@U) ($generated@@387 T@U) ($generated@@388 T@U) ($generated@@389 T@U) ) (!  (=> (and (and (and (= (type $generated@@386) ($generated@@274 $generated@@145 $generated@@145)) (= (type $generated@@387) $generated@@64)) (= (type $generated@@388) $generated@@64)) (= (type $generated@@389) ($generated@@76 $generated@@77 $generated@@78))) (= ($generated@@74 $generated@@386 ($generated@@383 $generated@@387 $generated@@388) $generated@@389) (forall (($generated@@390 T@U) ) (!  (=> (and (= (type $generated@@390) $generated@@145) ($generated@@0 ($generated@@81 ($generated@@272 $generated@@386) $generated@@390))) (and ($generated@@247 ($generated@@81 ($generated@@356 $generated@@386) $generated@@390) $generated@@388 $generated@@389) ($generated@@247 $generated@@390 $generated@@387 $generated@@389)))
 :pattern ( ($generated@@81 ($generated@@356 $generated@@386) $generated@@390))
 :pattern ( ($generated@@81 ($generated@@272 $generated@@386) $generated@@390))
))))
 :pattern ( ($generated@@74 $generated@@386 ($generated@@383 $generated@@387 $generated@@388) $generated@@389))
)))
(assert (forall (($generated@@392 T@U) ($generated@@393 T@U) ) (! (= (type ($generated@@391 $generated@@392 $generated@@393)) $generated@@64)
 :pattern ( ($generated@@391 $generated@@392 $generated@@393))
)))
(assert (forall (($generated@@394 T@U) ($generated@@395 T@U) ($generated@@396 T@U) ($generated@@397 T@U) ) (!  (=> (and (and (and (= (type $generated@@394) ($generated@@292 $generated@@145 $generated@@145)) (= (type $generated@@395) $generated@@64)) (= (type $generated@@396) $generated@@64)) (= (type $generated@@397) ($generated@@76 $generated@@77 $generated@@78))) (= ($generated@@74 $generated@@394 ($generated@@391 $generated@@395 $generated@@396) $generated@@397) (forall (($generated@@398 T@U) ) (!  (=> (and (= (type $generated@@398) $generated@@145) ($generated@@0 ($generated@@81 ($generated@@290 $generated@@394) $generated@@398))) (and ($generated@@247 ($generated@@81 ($generated@@366 $generated@@394) $generated@@398) $generated@@396 $generated@@397) ($generated@@247 $generated@@398 $generated@@395 $generated@@397)))
 :pattern ( ($generated@@81 ($generated@@366 $generated@@394) $generated@@398))
 :pattern ( ($generated@@81 ($generated@@290 $generated@@394) $generated@@398))
))))
 :pattern ( ($generated@@74 $generated@@394 ($generated@@391 $generated@@395 $generated@@396) $generated@@397))
)))
(assert (forall (($generated@@400 T@T) ) (! (= (type ($generated@@399 $generated@@400)) ($generated@@76 $generated@@400 $generated@@4))
 :pattern ( ($generated@@399 $generated@@400))
)))
(assert (forall (($generated@@401 T@U) ) (! (let (($generated@@402 ($generated@@294 (type $generated@@401))))
(let (($generated@@403 ($generated@@293 (type $generated@@401))))
 (=> (= (type $generated@@401) ($generated@@292 $generated@@403 $generated@@402)) (= (= $generated@@401 ($generated@@291 $generated@@403 $generated@@402)) (= ($generated@@290 $generated@@401) ($generated@@399 $generated@@403))))))
 :pattern ( ($generated@@290 $generated@@401))
)))
(assert (forall (($generated@@404 T@U) ) (! (let (($generated@@405 ($generated@@294 (type $generated@@404))))
(let (($generated@@406 ($generated@@293 (type $generated@@404))))
 (=> (= (type $generated@@404) ($generated@@292 $generated@@406 $generated@@405)) (= (= $generated@@404 ($generated@@291 $generated@@406 $generated@@405)) (= ($generated@@326 $generated@@404) ($generated@@399 $generated@@405))))))
 :pattern ( ($generated@@326 $generated@@404))
)))
(assert (forall (($generated@@407 T@U) ) (! (let (($generated@@408 ($generated@@294 (type $generated@@407))))
(let (($generated@@409 ($generated@@293 (type $generated@@407))))
 (=> (= (type $generated@@407) ($generated@@292 $generated@@409 $generated@@408)) (= (= $generated@@407 ($generated@@291 $generated@@409 $generated@@408)) (= ($generated@@365 $generated@@407) ($generated@@399 $generated@@145))))))
 :pattern ( ($generated@@365 $generated@@407))
)))
(assert (forall (($generated@@410 T@U) ) (! (let (($generated@@411 ($generated@@276 (type $generated@@410))))
(let (($generated@@412 ($generated@@275 (type $generated@@410))))
 (=> (= (type $generated@@410) ($generated@@274 $generated@@412 $generated@@411)) (or (= $generated@@410 ($generated@@273 $generated@@412 $generated@@411)) (exists (($generated@@413 T@U) ($generated@@414 T@U) ) (!  (and (and (= (type $generated@@413) $generated@@145) (= (type $generated@@414) $generated@@145)) ($generated@@0 ($generated@@81 ($generated@@354 $generated@@410) ($generated@@261 ($generated@@220 $generated@@413 $generated@@414)))))
 :no-pattern (type $generated@@413)
 :no-pattern (type $generated@@414)
 :no-pattern ($generated $generated@@413)
 :no-pattern ($generated@@0 $generated@@413)
 :no-pattern ($generated $generated@@414)
 :no-pattern ($generated@@0 $generated@@414)
))))))
 :pattern ( ($generated@@354 $generated@@410))
)))
(assert (forall (($generated@@415 T@U) ) (! (let (($generated@@416 ($generated@@294 (type $generated@@415))))
(let (($generated@@417 ($generated@@293 (type $generated@@415))))
 (=> (= (type $generated@@415) ($generated@@292 $generated@@417 $generated@@416)) (or (= $generated@@415 ($generated@@291 $generated@@417 $generated@@416)) (exists (($generated@@418 T@U) ($generated@@419 T@U) ) (!  (and (and (= (type $generated@@418) $generated@@145) (= (type $generated@@419) $generated@@145)) ($generated@@0 ($generated@@81 ($generated@@365 $generated@@415) ($generated@@261 ($generated@@220 $generated@@418 $generated@@419)))))
 :no-pattern (type $generated@@418)
 :no-pattern (type $generated@@419)
 :no-pattern ($generated $generated@@418)
 :no-pattern ($generated@@0 $generated@@418)
 :no-pattern ($generated $generated@@419)
 :no-pattern ($generated@@0 $generated@@419)
))))))
 :pattern ( ($generated@@365 $generated@@415))
)))
(assert (forall (($generated@@420 T@U) ) (!  (=> (and (= (type $generated@@420) $generated@@145) ($generated@@221 $generated@@420 $generated@@46)) (and (= ($generated@@261 ($generated@@355 $generated@@2 $generated@@420)) $generated@@420) ($generated@@132 ($generated@@355 $generated@@2 $generated@@420) $generated@@46)))
 :pattern ( ($generated@@221 $generated@@420 $generated@@46))
)))
(assert (forall (($generated@@421 T@U) ) (!  (=> (and (= (type $generated@@421) $generated@@145) ($generated@@221 $generated@@421 $generated@@47)) (and (= ($generated@@261 ($generated@@355 $generated@@3 $generated@@421)) $generated@@421) ($generated@@132 ($generated@@355 $generated@@3 $generated@@421) $generated@@47)))
 :pattern ( ($generated@@221 $generated@@421 $generated@@47))
)))
(assert (forall (($generated@@422 T@U) ) (!  (=> (and (= (type $generated@@422) $generated@@145) ($generated@@221 $generated@@422 $generated@@44)) (and (= ($generated@@261 ($generated@@355 $generated@@4 $generated@@422)) $generated@@422) ($generated@@132 ($generated@@355 $generated@@4 $generated@@422) $generated@@44)))
 :pattern ( ($generated@@221 $generated@@422 $generated@@44))
)))
(assert (= ($generated@@1 $generated@@423) 20))
(assert (forall (($generated@@424 T@U) ) (!  (=> (and (= (type $generated@@424) $generated@@145) ($generated@@221 $generated@@424 $generated@@45)) (and (= ($generated@@261 ($generated@@355 $generated@@423 $generated@@424)) $generated@@424) ($generated@@132 ($generated@@355 $generated@@423 $generated@@424) $generated@@45)))
 :pattern ( ($generated@@221 $generated@@424 $generated@@45))
)))
(assert (forall (($generated@@425 T@U) ($generated@@426 T@U) ) (!  (=> (= (type $generated@@426) $generated@@64) (= ($generated@@221 ($generated@@261 $generated@@425) $generated@@426) ($generated@@132 $generated@@425 $generated@@426)))
 :pattern ( ($generated@@221 ($generated@@261 $generated@@425) $generated@@426))
)))
(assert (forall (($generated@@427 T@U) ) (! (let (($generated@@428 ($generated@@79 (type $generated@@427))))
 (=> (= (type $generated@@427) ($generated@@76 $generated@@428 $generated@@2)) (<= 0 ($generated@@266 $generated@@427))))
 :pattern ( ($generated@@266 $generated@@427))
)))
(assert (forall (($generated@@429 T@U) ) (! (let (($generated@@430 ($generated@@153 (type $generated@@429))))
 (=> (= (type $generated@@429) ($generated@@152 $generated@@430)) (<= 0 ($generated@@259 $generated@@429))))
 :pattern ( ($generated@@259 $generated@@429))
)))
(assert (forall (($generated@@432 T@U) ) (! (= (type ($generated@@431 $generated@@432)) $generated@@64)
 :pattern ( ($generated@@431 $generated@@432))
)))
(assert (forall (($generated@@433 T@U) ($generated@@434 T@U) ) (!  (=> (and (= (type $generated@@433) $generated@@64) (= (type $generated@@434) $generated@@64)) (= ($generated@@431 ($generated@@383 $generated@@433 $generated@@434)) $generated@@433))
 :pattern ( ($generated@@383 $generated@@433 $generated@@434))
)))
(assert (forall (($generated@@436 T@U) ) (! (= (type ($generated@@435 $generated@@436)) $generated@@64)
 :pattern ( ($generated@@435 $generated@@436))
)))
(assert (forall (($generated@@437 T@U) ($generated@@438 T@U) ) (!  (=> (and (= (type $generated@@437) $generated@@64) (= (type $generated@@438) $generated@@64)) (= ($generated@@435 ($generated@@383 $generated@@437 $generated@@438)) $generated@@438))
 :pattern ( ($generated@@383 $generated@@437 $generated@@438))
)))
(assert (forall (($generated@@439 T@U) ($generated@@440 T@U) ) (!  (=> (and (= (type $generated@@439) $generated@@64) (= (type $generated@@440) $generated@@64)) (= ($generated@@72 ($generated@@383 $generated@@439 $generated@@440)) $generated@@58))
 :pattern ( ($generated@@383 $generated@@439 $generated@@440))
)))
(assert (forall (($generated@@442 T@U) ) (! (= (type ($generated@@441 $generated@@442)) $generated@@64)
 :pattern ( ($generated@@441 $generated@@442))
)))
(assert (forall (($generated@@443 T@U) ($generated@@444 T@U) ) (!  (=> (and (= (type $generated@@443) $generated@@64) (= (type $generated@@444) $generated@@64)) (= ($generated@@441 ($generated@@391 $generated@@443 $generated@@444)) $generated@@443))
 :pattern ( ($generated@@391 $generated@@443 $generated@@444))
)))
(assert (forall (($generated@@446 T@U) ) (! (= (type ($generated@@445 $generated@@446)) $generated@@64)
 :pattern ( ($generated@@445 $generated@@446))
)))
(assert (forall (($generated@@447 T@U) ($generated@@448 T@U) ) (!  (=> (and (= (type $generated@@447) $generated@@64) (= (type $generated@@448) $generated@@64)) (= ($generated@@445 ($generated@@391 $generated@@447 $generated@@448)) $generated@@448))
 :pattern ( ($generated@@391 $generated@@447 $generated@@448))
)))
(assert (forall (($generated@@449 T@U) ($generated@@450 T@U) ) (!  (=> (and (= (type $generated@@449) $generated@@64) (= (type $generated@@450) $generated@@64)) (= ($generated@@72 ($generated@@391 $generated@@449 $generated@@450)) $generated@@59))
 :pattern ( ($generated@@391 $generated@@449 $generated@@450))
)))
(assert (forall (($generated@@451 T@U) ($generated@@452 T@U) ) (!  (=> (and (= (type $generated@@451) $generated@@145) (= (type $generated@@452) $generated@@145)) (= ($generated@@253 ($generated@@220 $generated@@451 $generated@@452)) $generated@@61))
 :pattern ( ($generated@@220 $generated@@451 $generated@@452))
)))
(assert (forall (($generated@@454 T@U) ) (! (= (type ($generated@@453 $generated@@454)) $generated@@64)
 :pattern ( ($generated@@453 $generated@@454))
)))
(assert (forall (($generated@@455 T@U) ($generated@@456 T@U) ) (!  (=> (and (= (type $generated@@455) $generated@@64) (= (type $generated@@456) $generated@@64)) (= ($generated@@453 ($generated@@135 $generated@@455 $generated@@456)) $generated@@455))
 :pattern ( ($generated@@135 $generated@@455 $generated@@456))
)))
(assert (forall (($generated@@458 T@U) ) (! (= (type ($generated@@457 $generated@@458)) $generated@@64)
 :pattern ( ($generated@@457 $generated@@458))
)))
(assert (forall (($generated@@459 T@U) ($generated@@460 T@U) ) (!  (=> (and (= (type $generated@@459) $generated@@64) (= (type $generated@@460) $generated@@64)) (= ($generated@@457 ($generated@@135 $generated@@459 $generated@@460)) $generated@@460))
 :pattern ( ($generated@@135 $generated@@459 $generated@@460))
)))
(assert (forall (($generated@@461 T@U) ($generated@@462 T@U) ) (!  (=> (and (= (type $generated@@461) $generated@@145) (= (type $generated@@462) $generated@@145)) (= ($generated@@143 ($generated@@220 $generated@@461 $generated@@462)) $generated@@461))
 :pattern ( ($generated@@220 $generated@@461 $generated@@462))
)))
(assert (forall (($generated@@463 T@U) ($generated@@464 T@U) ) (!  (=> (and (= (type $generated@@463) $generated@@145) (= (type $generated@@464) $generated@@145)) (= ($generated@@144 ($generated@@220 $generated@@463 $generated@@464)) $generated@@464))
 :pattern ( ($generated@@220 $generated@@463 $generated@@464))
)))
(assert (forall (($generated@@466 T@U) ) (! (= (type ($generated@@465 $generated@@466)) $generated@@64)
 :pattern ( ($generated@@465 $generated@@466))
)))
(assert (forall (($generated@@467 T@U) ($generated@@468 T@U) ($generated@@469 T@U) ) (!  (=> (and (and (= (type $generated@@467) ($generated@@152 $generated@@145)) (= (type $generated@@468) $generated@@64)) (= (type $generated@@469) ($generated@@76 $generated@@77 $generated@@78))) (= ($generated@@74 $generated@@467 ($generated@@465 $generated@@468) $generated@@469) (forall (($generated@@470 Int) ) (!  (=> (and (<= 0 $generated@@470) (< $generated@@470 ($generated@@259 $generated@@467))) ($generated@@247 ($generated@@336 $generated@@467 $generated@@470) $generated@@468 $generated@@469))
 :pattern ( ($generated@@336 $generated@@467 $generated@@470))
))))
 :pattern ( ($generated@@74 $generated@@467 ($generated@@465 $generated@@468) $generated@@469))
)))
(assert (forall (($generated@@472 Int) ) (! (= ($generated@@471 ($generated@@75 $generated@@472)) $generated@@472)
 :pattern ( ($generated@@75 $generated@@472))
)))
(assert (forall (($generated@@474 T@U) ) (! (= (type ($generated@@473 $generated@@474)) $generated@@64)
 :pattern ( ($generated@@473 $generated@@474))
)))
(assert (forall (($generated@@475 T@U) ) (!  (=> (= (type $generated@@475) $generated@@64) (= ($generated@@473 ($generated@@230 $generated@@475)) $generated@@475))
 :pattern ( ($generated@@230 $generated@@475))
)))
(assert (forall (($generated@@476 T@U) ) (!  (=> (= (type $generated@@476) $generated@@64) (= ($generated@@72 ($generated@@230 $generated@@476)) $generated@@54))
 :pattern ( ($generated@@230 $generated@@476))
)))
(assert (forall (($generated@@478 T@U) ) (! (= (type ($generated@@477 $generated@@478)) $generated@@64)
 :pattern ( ($generated@@477 $generated@@478))
)))
(assert (forall (($generated@@479 T@U) ) (!  (=> (= (type $generated@@479) $generated@@64) (= ($generated@@477 ($generated@@235 $generated@@479)) $generated@@479))
 :pattern ( ($generated@@235 $generated@@479))
)))
(assert (forall (($generated@@480 T@U) ) (!  (=> (= (type $generated@@480) $generated@@64) (= ($generated@@72 ($generated@@235 $generated@@480)) $generated@@55))
 :pattern ( ($generated@@235 $generated@@480))
)))
(assert (forall (($generated@@482 T@U) ) (! (= (type ($generated@@481 $generated@@482)) $generated@@64)
 :pattern ( ($generated@@481 $generated@@482))
)))
(assert (forall (($generated@@483 T@U) ) (!  (=> (= (type $generated@@483) $generated@@64) (= ($generated@@481 ($generated@@159 $generated@@483)) $generated@@483))
 :pattern ( ($generated@@159 $generated@@483))
)))
(assert (forall (($generated@@484 T@U) ) (!  (=> (= (type $generated@@484) $generated@@64) (= ($generated@@72 ($generated@@159 $generated@@484)) $generated@@56))
 :pattern ( ($generated@@159 $generated@@484))
)))
(assert (forall (($generated@@486 T@U) ) (! (= (type ($generated@@485 $generated@@486)) $generated@@64)
 :pattern ( ($generated@@485 $generated@@486))
)))
(assert (forall (($generated@@487 T@U) ) (!  (=> (= (type $generated@@487) $generated@@64) (= ($generated@@485 ($generated@@465 $generated@@487)) $generated@@487))
 :pattern ( ($generated@@465 $generated@@487))
)))
(assert (forall (($generated@@488 T@U) ) (!  (=> (= (type $generated@@488) $generated@@64) (= ($generated@@72 ($generated@@465 $generated@@488)) $generated@@57))
 :pattern ( ($generated@@465 $generated@@488))
)))
(assert (forall (($generated@@489 T@U) ) (! (let (($generated@@490 (type $generated@@489)))
(= ($generated@@355 $generated@@490 ($generated@@261 $generated@@489)) $generated@@489))
 :pattern ( ($generated@@261 $generated@@489))
)))
(assert (forall (($generated@@491 T@U) ($generated@@492 T@U) ($generated@@493 T@U) ) (!  (=> (and (and (= (type $generated@@491) ($generated@@274 $generated@@145 $generated@@145)) (= (type $generated@@492) $generated@@64)) (= (type $generated@@493) $generated@@64)) (= ($generated@@132 $generated@@491 ($generated@@383 $generated@@492 $generated@@493)) (forall (($generated@@494 T@U) ) (!  (=> (and (= (type $generated@@494) $generated@@145) ($generated@@0 ($generated@@81 ($generated@@272 $generated@@491) $generated@@494))) (and ($generated@@221 ($generated@@81 ($generated@@356 $generated@@491) $generated@@494) $generated@@493) ($generated@@221 $generated@@494 $generated@@492)))
 :pattern ( ($generated@@81 ($generated@@356 $generated@@491) $generated@@494))
 :pattern ( ($generated@@81 ($generated@@272 $generated@@491) $generated@@494))
))))
 :pattern ( ($generated@@132 $generated@@491 ($generated@@383 $generated@@492 $generated@@493)))
)))
(assert (forall (($generated@@495 T@U) ($generated@@496 T@U) ($generated@@497 T@U) ) (!  (=> (and (and (= (type $generated@@495) ($generated@@292 $generated@@145 $generated@@145)) (= (type $generated@@496) $generated@@64)) (= (type $generated@@497) $generated@@64)) (= ($generated@@132 $generated@@495 ($generated@@391 $generated@@496 $generated@@497)) (forall (($generated@@498 T@U) ) (!  (=> (and (= (type $generated@@498) $generated@@145) ($generated@@0 ($generated@@81 ($generated@@290 $generated@@495) $generated@@498))) (and ($generated@@221 ($generated@@81 ($generated@@366 $generated@@495) $generated@@498) $generated@@497) ($generated@@221 $generated@@498 $generated@@496)))
 :pattern ( ($generated@@81 ($generated@@366 $generated@@495) $generated@@498))
 :pattern ( ($generated@@81 ($generated@@290 $generated@@495) $generated@@498))
))))
 :pattern ( ($generated@@132 $generated@@495 ($generated@@391 $generated@@496 $generated@@497)))
)))
(assert (forall (($generated@@501 T@U) ($generated@@502 T@U) ) (!  (=> (and (= (type $generated@@501) $generated@@145) (= (type $generated@@502) $generated@@145)) (< ($generated@@499 $generated@@501) ($generated@@500 ($generated@@220 $generated@@501 $generated@@502))))
 :pattern ( ($generated@@220 $generated@@501 $generated@@502))
)))
(assert (forall (($generated@@503 T@U) ($generated@@504 T@U) ) (!  (=> (and (= (type $generated@@503) $generated@@145) (= (type $generated@@504) $generated@@145)) (< ($generated@@499 $generated@@504) ($generated@@500 ($generated@@220 $generated@@503 $generated@@504))))
 :pattern ( ($generated@@220 $generated@@503 $generated@@504))
)))
(assert (forall (($generated@@505 T@U) ($generated@@506 T@U) ($generated@@507 T@U) ) (!  (=> (and (and (and (= (type $generated@@505) $generated@@145) (= (type $generated@@506) $generated@@64)) (= (type $generated@@507) $generated@@64)) ($generated@@221 $generated@@505 ($generated@@383 $generated@@506 $generated@@507))) (and (= ($generated@@261 ($generated@@355 ($generated@@274 $generated@@145 $generated@@145) $generated@@505)) $generated@@505) ($generated@@132 ($generated@@355 ($generated@@274 $generated@@145 $generated@@145) $generated@@505) ($generated@@383 $generated@@506 $generated@@507))))
 :pattern ( ($generated@@221 $generated@@505 ($generated@@383 $generated@@506 $generated@@507)))
)))
(assert (forall (($generated@@508 T@U) ($generated@@509 T@U) ($generated@@510 T@U) ) (!  (=> (and (and (and (= (type $generated@@508) $generated@@145) (= (type $generated@@509) $generated@@64)) (= (type $generated@@510) $generated@@64)) ($generated@@221 $generated@@508 ($generated@@391 $generated@@509 $generated@@510))) (and (= ($generated@@261 ($generated@@355 ($generated@@292 $generated@@145 $generated@@145) $generated@@508)) $generated@@508) ($generated@@132 ($generated@@355 ($generated@@292 $generated@@145 $generated@@145) $generated@@508) ($generated@@391 $generated@@509 $generated@@510))))
 :pattern ( ($generated@@221 $generated@@508 ($generated@@391 $generated@@509 $generated@@510)))
)))
(assert (forall (($generated@@511 T@U) ($generated@@512 T@U) ($generated@@513 T@U) ) (!  (=> (and (and (and (= (type $generated@@511) $generated@@64) (= (type $generated@@512) $generated@@64)) (= (type $generated@@513) $generated@@145)) ($generated@@221 $generated@@513 ($generated@@135 $generated@@511 $generated@@512))) (and (= ($generated@@261 ($generated@@355 $generated@@136 $generated@@513)) $generated@@513) ($generated@@132 ($generated@@355 $generated@@136 $generated@@513) ($generated@@135 $generated@@511 $generated@@512))))
 :pattern ( ($generated@@221 $generated@@513 ($generated@@135 $generated@@511 $generated@@512)))
)))
(assert (forall (($generated@@514 T@U) ) (! (let (($generated@@515 (type $generated@@514)))
 (not ($generated@@0 ($generated@@81 ($generated@@399 $generated@@515) $generated@@514))))
 :pattern ( (let (($generated@@515 (type $generated@@514)))
($generated@@81 ($generated@@399 $generated@@515) $generated@@514)))
)))
(assert (forall (($generated@@517 T@U) ) (! (= (type ($generated@@516 $generated@@517)) $generated@@69)
 :pattern ( ($generated@@516 $generated@@517))
)))
(assert (forall (($generated@@518 T@U) ($generated@@519 T@U) ) (!  (=> (and (= (type $generated@@518) $generated@@64) (= (type $generated@@519) $generated@@64)) (and (= ($generated@@72 ($generated@@135 $generated@@518 $generated@@519)) $generated@@62) (= ($generated@@516 ($generated@@135 $generated@@518 $generated@@519)) $generated@@63)))
 :pattern ( ($generated@@135 $generated@@518 $generated@@519))
)))
(assert (forall (($generated@@520 T@U) ) (!  (=> (= (type $generated@@520) $generated@@136) (= ($generated@@499 ($generated@@261 $generated@@520)) ($generated@@500 $generated@@520)))
 :pattern ( ($generated@@499 ($generated@@261 $generated@@520)))
)))
(assert (forall (($generated@@521 T@U) ) (!  (=> (and (= (type $generated@@521) $generated@@145) ($generated@@221 $generated@@521 ($generated@@75 0))) (and (= ($generated@@261 ($generated@@355 $generated@@2 $generated@@521)) $generated@@521) ($generated@@132 ($generated@@355 ($generated@@76 $generated@@145 $generated@@4) $generated@@521) ($generated@@75 0))))
 :pattern ( ($generated@@221 $generated@@521 ($generated@@75 0)))
)))
(assert (forall (($generated@@522 T@U) ($generated@@523 T@U) ) (!  (=> (and (and (= (type $generated@@522) $generated@@145) (= (type $generated@@523) $generated@@64)) ($generated@@221 $generated@@522 ($generated@@230 $generated@@523))) (and (= ($generated@@261 ($generated@@355 ($generated@@76 $generated@@145 $generated@@4) $generated@@522)) $generated@@522) ($generated@@132 ($generated@@355 ($generated@@76 $generated@@145 $generated@@4) $generated@@522) ($generated@@230 $generated@@523))))
 :pattern ( ($generated@@221 $generated@@522 ($generated@@230 $generated@@523)))
)))
(assert (forall (($generated@@524 T@U) ($generated@@525 T@U) ) (!  (=> (and (and (= (type $generated@@524) $generated@@145) (= (type $generated@@525) $generated@@64)) ($generated@@221 $generated@@524 ($generated@@235 $generated@@525))) (and (= ($generated@@261 ($generated@@355 ($generated@@76 $generated@@145 $generated@@4) $generated@@524)) $generated@@524) ($generated@@132 ($generated@@355 ($generated@@76 $generated@@145 $generated@@4) $generated@@524) ($generated@@235 $generated@@525))))
 :pattern ( ($generated@@221 $generated@@524 ($generated@@235 $generated@@525)))
)))
(assert (forall (($generated@@526 T@U) ($generated@@527 T@U) ) (!  (=> (and (and (= (type $generated@@526) $generated@@145) (= (type $generated@@527) $generated@@64)) ($generated@@221 $generated@@526 ($generated@@159 $generated@@527))) (and (= ($generated@@261 ($generated@@355 ($generated@@76 $generated@@145 $generated@@2) $generated@@526)) $generated@@526) ($generated@@132 ($generated@@355 ($generated@@76 $generated@@145 $generated@@2) $generated@@526) ($generated@@159 $generated@@527))))
 :pattern ( ($generated@@221 $generated@@526 ($generated@@159 $generated@@527)))
)))
(assert (forall (($generated@@528 T@U) ($generated@@529 T@U) ) (!  (=> (and (and (= (type $generated@@528) $generated@@145) (= (type $generated@@529) $generated@@64)) ($generated@@221 $generated@@528 ($generated@@465 $generated@@529))) (and (= ($generated@@261 ($generated@@355 ($generated@@152 $generated@@145) $generated@@528)) $generated@@528) ($generated@@132 ($generated@@355 ($generated@@152 $generated@@145) $generated@@528) ($generated@@465 $generated@@529))))
 :pattern ( ($generated@@221 $generated@@528 ($generated@@465 $generated@@529)))
)))
(assert (forall (($generated@@530 T@U) ($generated@@531 T@U) ($generated@@532 T@U) ) (!  (=> (and (and (= (type $generated@@530) ($generated@@76 $generated@@145 $generated@@2)) (= (type $generated@@531) $generated@@64)) (= (type $generated@@532) ($generated@@76 $generated@@77 $generated@@78))) (= ($generated@@74 $generated@@530 ($generated@@159 $generated@@531) $generated@@532) (forall (($generated@@533 T@U) ) (!  (=> (and (= (type $generated@@533) $generated@@145) (< 0 ($generated ($generated@@81 $generated@@530 $generated@@533)))) ($generated@@247 $generated@@533 $generated@@531 $generated@@532))
 :pattern ( ($generated@@81 $generated@@530 $generated@@533))
))))
 :pattern ( ($generated@@74 $generated@@530 ($generated@@159 $generated@@531) $generated@@532))
)))
(assert (forall (($generated@@534 T@U) ($generated@@535 T@U) ($generated@@536 T@U) ) (!  (=> (and (and (and (= (type $generated@@534) $generated@@136) (= (type $generated@@535) $generated@@64)) (= (type $generated@@536) ($generated@@76 $generated@@77 $generated@@78))) (and ($generated@@246 $generated@@536) (and ($generated@@134 $generated@@534) (exists (($generated@@537 T@U) ) (!  (and (= (type $generated@@537) $generated@@64) ($generated@@74 $generated@@534 ($generated@@135 $generated@@535 $generated@@537) $generated@@536))
 :pattern ( ($generated@@74 $generated@@534 ($generated@@135 $generated@@535 $generated@@537) $generated@@536))
))))) ($generated@@247 ($generated@@143 $generated@@534) $generated@@535 $generated@@536))
 :pattern ( ($generated@@247 ($generated@@143 $generated@@534) $generated@@535 $generated@@536))
)))
(assert (forall (($generated@@538 T@U) ($generated@@539 T@U) ($generated@@540 T@U) ) (!  (=> (and (and (and (= (type $generated@@538) $generated@@136) (= (type $generated@@539) $generated@@64)) (= (type $generated@@540) ($generated@@76 $generated@@77 $generated@@78))) (and ($generated@@246 $generated@@540) (and ($generated@@134 $generated@@538) (exists (($generated@@541 T@U) ) (!  (and (= (type $generated@@541) $generated@@64) ($generated@@74 $generated@@538 ($generated@@135 $generated@@541 $generated@@539) $generated@@540))
 :pattern ( ($generated@@74 $generated@@538 ($generated@@135 $generated@@541 $generated@@539) $generated@@540))
))))) ($generated@@247 ($generated@@144 $generated@@538) $generated@@539 $generated@@540))
 :pattern ( ($generated@@247 ($generated@@144 $generated@@538) $generated@@539 $generated@@540))
)))
(assert (forall (($generated@@542 T@U) ($generated@@543 T@U) ) (!  (=> (and (= (type $generated@@542) $generated@@145) (= (type $generated@@543) $generated@@145)) (= ($generated@@220 ($generated@@242 $generated@@542) ($generated@@242 $generated@@543)) ($generated@@242 ($generated@@220 $generated@@542 $generated@@543))))
 :pattern ( ($generated@@220 ($generated@@242 $generated@@542) ($generated@@242 $generated@@543)))
)))
(assert (forall (($generated@@544 Int) ) (! (= ($generated@@261 ($generated@@8 ($generated@@240 $generated@@544))) ($generated@@242 ($generated@@261 ($generated@@8 $generated@@544))))
 :pattern ( ($generated@@261 ($generated@@8 ($generated@@240 $generated@@544))))
)))
(assert (forall (($generated@@545 T@U) ) (! (= ($generated@@261 ($generated@@242 $generated@@545)) ($generated@@242 ($generated@@261 $generated@@545)))
 :pattern ( ($generated@@261 ($generated@@242 $generated@@545)))
)))
(assert (forall (($generated@@546 T@U) ) (! (let (($generated@@547 ($generated@@153 (type $generated@@546))))
 (=> (and (= (type $generated@@546) ($generated@@152 $generated@@547)) (= ($generated@@259 $generated@@546) 0)) (= $generated@@546 ($generated@@151 $generated@@547))))
 :pattern ( ($generated@@259 $generated@@546))
)))
(assert (forall (($generated@@548 T@U) ($generated@@549 T@U) ($generated@@550 T@U) ) (! (let (($generated@@551 (type $generated@@549)))
 (=> (and (and (= (type $generated@@548) ($generated@@76 $generated@@551 $generated@@2)) (= (type $generated@@550) $generated@@2)) (<= 0 ($generated $generated@@550))) (= ($generated@@266 ($generated@@82 $generated@@548 $generated@@549 $generated@@550)) (+ (- ($generated@@266 $generated@@548) ($generated ($generated@@81 $generated@@548 $generated@@549))) ($generated $generated@@550)))))
 :pattern ( ($generated@@266 ($generated@@82 $generated@@548 $generated@@549 $generated@@550)))
)))
(assert (forall (($generated@@552 T@U) ($generated@@553 T@U) ) (!  (=> (and (= (type $generated@@552) ($generated@@76 $generated@@77 $generated@@78)) (= (type $generated@@553) $generated@@2)) ($generated@@74 $generated@@553 $generated@@46 $generated@@552))
 :pattern ( ($generated@@74 $generated@@553 $generated@@46 $generated@@552))
)))
(assert (forall (($generated@@554 T@U) ($generated@@555 T@U) ) (!  (=> (and (= (type $generated@@554) ($generated@@76 $generated@@77 $generated@@78)) (= (type $generated@@555) $generated@@3)) ($generated@@74 $generated@@555 $generated@@47 $generated@@554))
 :pattern ( ($generated@@74 $generated@@555 $generated@@47 $generated@@554))
)))
(assert (forall (($generated@@556 T@U) ($generated@@557 T@U) ) (!  (=> (and (= (type $generated@@556) ($generated@@76 $generated@@77 $generated@@78)) (= (type $generated@@557) $generated@@4)) ($generated@@74 $generated@@557 $generated@@44 $generated@@556))
 :pattern ( ($generated@@74 $generated@@557 $generated@@44 $generated@@556))
)))
(assert (forall (($generated@@558 T@U) ($generated@@559 T@U) ) (!  (=> (and (= (type $generated@@558) ($generated@@76 $generated@@77 $generated@@78)) (= (type $generated@@559) $generated@@423)) ($generated@@74 $generated@@559 $generated@@45 $generated@@558))
 :pattern ( ($generated@@74 $generated@@559 $generated@@45 $generated@@558))
)))
(assert (forall (($generated@@560 T@U) ($generated@@561 T@U) ) (!  (=> (and (= (type $generated@@560) ($generated@@76 $generated@@77 $generated@@78)) (= (type $generated@@561) $generated@@145)) ($generated@@74 $generated@@561 $generated@@48 $generated@@560))
 :pattern ( ($generated@@74 $generated@@561 $generated@@48 $generated@@560))
)))
(assert (forall (($generated@@562 T@U) ($generated@@563 T@U) ) (!  (=> (and (= (type $generated@@562) ($generated@@152 $generated@@145)) (= (type $generated@@563) $generated@@64)) (= ($generated@@132 $generated@@562 ($generated@@465 $generated@@563)) (forall (($generated@@564 Int) ) (!  (=> (and (<= 0 $generated@@564) (< $generated@@564 ($generated@@259 $generated@@562))) ($generated@@221 ($generated@@336 $generated@@562 $generated@@564) $generated@@563))
 :pattern ( ($generated@@336 $generated@@562 $generated@@564))
))))
 :pattern ( ($generated@@132 $generated@@562 ($generated@@465 $generated@@563)))
)))
(assert (forall (($generated@@566 T@U) ($generated@@567 Int) ) (!  (=> (= (type $generated@@566) ($generated@@152 $generated@@145)) (=> (and (<= 0 $generated@@567) (< $generated@@567 ($generated@@259 $generated@@566))) (< ($generated@@500 ($generated@@355 $generated@@136 ($generated@@336 $generated@@566 $generated@@567))) ($generated@@565 $generated@@566))))
 :pattern ( ($generated@@500 ($generated@@355 $generated@@136 ($generated@@336 $generated@@566 $generated@@567))))
)))
(assert (forall (($generated@@568 T@U) ($generated@@569 T@U) ($generated@@570 T@U) ) (!  (=> (and (and (and (= (type $generated@@568) ($generated@@274 $generated@@145 $generated@@145)) (= (type $generated@@569) $generated@@64)) (= (type $generated@@570) $generated@@64)) ($generated@@132 $generated@@568 ($generated@@383 $generated@@569 $generated@@570))) (and (and ($generated@@132 ($generated@@272 $generated@@568) ($generated@@230 $generated@@569)) ($generated@@132 ($generated@@315 $generated@@568) ($generated@@230 $generated@@570))) ($generated@@132 ($generated@@354 $generated@@568) ($generated@@230 ($generated@@135 $generated@@569 $generated@@570)))))
 :pattern ( ($generated@@132 $generated@@568 ($generated@@383 $generated@@569 $generated@@570)))
)))
(assert (forall (($generated@@571 T@U) ($generated@@572 T@U) ($generated@@573 T@U) ) (!  (=> (and (and (and (= (type $generated@@571) ($generated@@292 $generated@@145 $generated@@145)) (= (type $generated@@572) $generated@@64)) (= (type $generated@@573) $generated@@64)) ($generated@@132 $generated@@571 ($generated@@391 $generated@@572 $generated@@573))) (and (and ($generated@@132 ($generated@@290 $generated@@571) ($generated@@235 $generated@@572)) ($generated@@132 ($generated@@326 $generated@@571) ($generated@@235 $generated@@573))) ($generated@@132 ($generated@@365 $generated@@571) ($generated@@235 ($generated@@135 $generated@@572 $generated@@573)))))
 :pattern ( ($generated@@132 $generated@@571 ($generated@@391 $generated@@572 $generated@@573)))
)))
(assert (forall (($generated@@574 T@U) ) (!  (=> (= (type $generated@@574) $generated@@2) ($generated@@132 $generated@@574 $generated@@46))
 :pattern ( ($generated@@132 $generated@@574 $generated@@46))
)))
(assert (forall (($generated@@575 T@U) ) (!  (=> (= (type $generated@@575) $generated@@3) ($generated@@132 $generated@@575 $generated@@47))
 :pattern ( ($generated@@132 $generated@@575 $generated@@47))
)))
(assert (forall (($generated@@576 T@U) ) (!  (=> (= (type $generated@@576) $generated@@4) ($generated@@132 $generated@@576 $generated@@44))
 :pattern ( ($generated@@132 $generated@@576 $generated@@44))
)))
(assert (forall (($generated@@577 T@U) ) (!  (=> (= (type $generated@@577) $generated@@423) ($generated@@132 $generated@@577 $generated@@45))
 :pattern ( ($generated@@132 $generated@@577 $generated@@45))
)))
(assert (forall (($generated@@578 T@U) ) (!  (=> (= (type $generated@@578) $generated@@145) ($generated@@132 $generated@@578 $generated@@48))
 :pattern ( ($generated@@132 $generated@@578 $generated@@48))
)))
(push 1)
(declare-fun ControlFlow (Int Int) Int)
(declare-fun $generated@@579 () T@U)
(declare-fun $generated@@580 () T@U)
(declare-fun $generated@@581 () T@U)
(declare-fun $generated@@582 () Int)
(declare-fun $generated@@583 () T@U)
(declare-fun $generated@@584 (T@U) Bool)
(declare-fun $generated@@585 () T@U)
(declare-fun $generated@@586 () T@U)
(declare-fun $generated@@587 () Int)
(assert  (and (and (and (and (and (= (type $generated@@579) ($generated@@166 $generated@@77 $generated@@4)) (= (type $generated@@580) $generated@@77)) (= (type $generated@@581) ($generated@@76 $generated@@77 $generated@@78))) (= (type $generated@@583) ($generated@@152 $generated@@145))) (= (type $generated@@585) $generated@@145)) (= (type $generated@@586) $generated@@64)))
(set-option :timeout 0)
(set-option :rlimit 0)
(assert (not
 (=> (= (ControlFlow 0 0) 3) (let (($generated@@588  (=> (= $generated@@579 ($generated@@165 $generated@@580 $generated@@581 $generated@@60 false)) (=> (and (< $generated@@582 ($generated@@259 $generated@@583)) (= (ControlFlow 0 2) (- 0 1))) (and (<= 0 $generated@@582) (< $generated@@582 ($generated@@259 $generated@@583)))))))
(let (($generated@@589  (=> (and (and ($generated@@246 $generated@@581) ($generated@@584 $generated@@581)) (and ($generated@@221 $generated@@585 $generated@@586) ($generated@@247 $generated@@585 $generated@@586 $generated@@581))) (=> (and (and (and ($generated@@132 $generated@@583 ($generated@@465 $generated@@586)) ($generated@@74 $generated@@583 ($generated@@465 $generated@@586) $generated@@581)) (<= ($generated@@240 0) $generated@@582)) (and (= 1 $generated@@587) (= (ControlFlow 0 3) 2))) $generated@@588))))
$generated@@589)))
))
(check-sat)
(pop 1)
; Valid
(get-info :rlimit)
(reset)
(set-option :rlimit 0)
; did a full reset
(reset)
(set-option :print-success false)
(set-info :smt-lib-version 2.6)
(set-option :auto_config false)
(set-option :type_check true)
(set-option :smt.case_split 3)
(set-option :smt.qi.eager_threshold 100)
(set-option :smt.delay_units true)
(set-option :smt.arith.solver 2)
(set-option :smt.mbqi false)
(set-option :model.compact false)
(set-option :model.v2 true)
(set-option :pp.bv_literals false)
; done setting options


(set-info :category "industrial")
(declare-sort |T@U| 0)
(declare-sort |T@T| 0)
(declare-fun real_pow (Real Real) Real)
(declare-fun UOrdering2 (|T@U| |T@U|) Bool)
(declare-fun UOrdering3 (|T@T| |T@U| |T@U|) Bool)
(declare-fun tickleBool (Bool) Bool)
(assert (and (tickleBool true) (tickleBool false)))
(declare-fun $generated (T@U) Int)
(declare-fun $generated@@0 (T@U) Bool)
(declare-fun $generated@@1 (T@T) Int)
(declare-fun $generated@@2 () T@T)
(declare-fun $generated@@3 () T@T)
(declare-fun $generated@@4 () T@T)
(declare-fun $generated@@5 () T@T)
(declare-fun $generated@@6 () T@T)
(declare-fun $generated@@7 () T@T)
(declare-fun $generated@@8 (Int) T@U)
(declare-fun type (T@U) T@T)
(declare-fun $generated@@9 (Real) T@U)
(declare-fun $generated@@10 (T@U) Real)
(declare-fun $generated@@11 (Bool) T@U)
(declare-fun $generated@@12 (RoundingMode) T@U)
(declare-fun $generated@@13 (T@U) RoundingMode)
(declare-fun $generated@@14 (String) T@U)
(declare-fun $generated@@15 (T@U) String)
(declare-fun $generated@@16 ((RegEx String)) T@U)
(declare-fun $generated@@17 (T@U) (RegEx String))
(declare-fun $generated@@44 () T@U)
(declare-fun $generated@@45 () T@U)
(declare-fun $generated@@46 () T@U)
(declare-fun $generated@@47 () T@U)
(declare-fun $generated@@48 () T@U)
(declare-fun $generated@@49 () T@U)
(declare-fun $generated@@50 () T@U)
(declare-fun $generated@@51 () T@U)
(declare-fun $generated@@52 () T@U)
(declare-fun $generated@@53 () T@U)
(declare-fun $generated@@54 () T@U)
(declare-fun $generated@@55 () T@U)
(declare-fun $generated@@56 () T@U)
(declare-fun $generated@@57 () T@U)
(declare-fun $generated@@58 () T@U)
(declare-fun $generated@@59 () T@U)
(declare-fun $generated@@60 () T@U)
(declare-fun $generated@@61 () T@U)
(declare-fun $generated@@62 () T@U)
(declare-fun $generated@@63 () T@U)
(declare-fun $generated@@64 () T@T)
(declare-fun $generated@@65 () T@T)
(declare-fun $generated@@66 (T@T) T@T)
(declare-fun $generated@@67 (T@T) T@T)
(declare-fun $generated@@68 () T@T)
(declare-fun $generated@@69 () T@T)
(declare-fun $generated@@72 (T@U) T@U)
(declare-fun $generated@@74 (T@U T@U T@U) Bool)
(declare-fun $generated@@75 (Int) T@U)
(declare-fun $generated@@76 (T@T T@T) T@T)
(declare-fun $generated@@77 () T@T)
(declare-fun $generated@@78 () T@T)
(declare-fun $generated@@79 (T@T) T@T)
(declare-fun $generated@@80 (T@T) T@T)
(declare-fun $generated@@81 (T@U T@U) T@U)
(declare-fun $generated@@82 (T@U T@U T@U) T@U)
(declare-fun $generated@@83 (T@U T@U) T@U)
(declare-fun $generated@@84 (T@U T@U T@U) T@U)
(declare-fun $generated@@132 (T@U T@U) Bool)
(declare-fun $generated@@134 (T@U) Bool)
(declare-fun $generated@@135 (T@U T@U) T@U)
(declare-fun $generated@@136 () T@T)
(declare-fun $generated@@142 (T@U T@U) Bool)
(declare-fun $generated@@143 (T@U) T@U)
(declare-fun $generated@@144 (T@U) T@U)
(declare-fun $generated@@145 () T@T)
(declare-fun $generated@@150 (T@U T@U) Bool)
(declare-fun $generated@@151 (T@T) T@U)
(declare-fun $generated@@152 (T@T) T@T)
(declare-fun $generated@@153 (T@T) T@T)
(declare-fun $generated@@159 (T@U) T@U)
(declare-fun $generated@@160 (T@U) Bool)
(declare-fun $generated@@164 (T@U T@U T@U) T@U)
(declare-fun $generated@@165 (T@U T@U T@U Bool) T@U)
(declare-fun $generated@@166 (T@T T@T) T@T)
(declare-fun $generated@@167 (T@T) T@T)
(declare-fun $generated@@168 (T@T) T@T)
(declare-fun $generated@@169 (T@U T@U T@U T@U) T@U)
(declare-fun $generated@@220 (T@U T@U) T@U)
(declare-fun $generated@@221 (T@U T@U) Bool)
(declare-fun $generated@@230 (T@U) T@U)
(declare-fun $generated@@235 (T@U) T@U)
(declare-fun $generated@@240 (Int) Int)
(declare-fun $generated@@242 (T@U) T@U)
(declare-fun $generated@@246 (T@U) Bool)
(declare-fun $generated@@247 (T@U T@U T@U) Bool)
(declare-fun $generated@@253 (T@U) T@U)
(declare-fun $generated@@259 (T@U) Int)
(declare-fun $generated@@261 (T@U) T@U)
(declare-fun $generated@@266 (T@U) Int)
(declare-fun $generated@@267 (T@T) T@U)
(declare-fun $generated@@272 (T@U) T@U)
(declare-fun $generated@@273 (T@T T@T) T@U)
(declare-fun $generated@@274 (T@T T@T) T@T)
(declare-fun $generated@@275 (T@T) T@T)
(declare-fun $generated@@276 (T@T) T@T)
(declare-fun $generated@@290 (T@U) T@U)
(declare-fun $generated@@291 (T@T T@T) T@U)
(declare-fun $generated@@292 (T@T T@T) T@T)
(declare-fun $generated@@293 (T@T) T@T)
(declare-fun $generated@@294 (T@T) T@T)
(declare-fun $generated@@315 (T@U) T@U)
(declare-fun $generated@@326 (T@U) T@U)
(declare-fun $generated@@336 (T@U Int) T@U)
(declare-fun $generated@@354 (T@U) T@U)
(declare-fun $generated@@355 (T@T T@U) T@U)
(declare-fun $generated@@356 (T@U) T@U)
(declare-fun $generated@@365 (T@U) T@U)
(declare-fun $generated@@366 (T@U) T@U)
(declare-fun $generated@@383 (T@U T@U) T@U)
(declare-fun $generated@@391 (T@U T@U) T@U)
(declare-fun $generated@@399 (T@T) T@U)
(declare-fun $generated@@423 () T@T)
(declare-fun $generated@@431 (T@U) T@U)
(declare-fun $generated@@435 (T@U) T@U)
(declare-fun $generated@@441 (T@U) T@U)
(declare-fun $generated@@445 (T@U) T@U)
(declare-fun $generated@@453 (T@U) T@U)
(declare-fun $generated@@457 (T@U) T@U)
(declare-fun $generated@@465 (T@U) T@U)
(declare-fun $generated@@471 (T@U) Int)
(declare-fun $generated@@473 (T@U) T@U)
(declare-fun $generated@@477 (T@U) T@U)
(declare-fun $generated@@481 (T@U) T@U)
(declare-fun $generated@@485 (T@U) T@U)
(declare-fun $generated@@499 (T@U) Int)
(declare-fun $generated@@500 (T@U) Int)
(declare-fun $generated@@516 (T@U) T@U)
(declare-fun $generated@@565 (T@U) Int)
(assert  (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (= ($generated@@1 $generated@@2) 0) (= ($generated@@1 $generated@@3) 1)) (= ($generated@@1 $generated@@4) 2)) (= ($generated@@1 $generated@@5) 3)) (= ($generated@@1 $generated@@6) 4)) (= ($generated@@1 $generated@@7) 5)) (forall (($generated@@18 Int) ) (! (= ($generated ($generated@@8 $generated@@18)) $generated@@18)
 :pattern ( ($generated@@8 $generated@@18))
))) (forall (($generated@@19 T@U) ) (!  (=> (= (type $generated@@19) $generated@@2) (= ($generated@@8 ($generated $generated@@19)) $generated@@19))
 :pattern ( ($generated $generated@@19))
))) (forall (($generated@@20 Int) ) (! (= (type ($generated@@8 $generated@@20)) $generated@@2)
 :pattern ( ($generated@@8 $generated@@20))
))) (forall (($generated@@21 Real) ) (! (= ($generated@@10 ($generated@@9 $generated@@21)) $generated@@21)
 :pattern ( ($generated@@9 $generated@@21))
))) (forall (($generated@@22 T@U) ) (!  (=> (= (type $generated@@22) $generated@@3) (= ($generated@@9 ($generated@@10 $generated@@22)) $generated@@22))
 :pattern ( ($generated@@10 $generated@@22))
))) (forall (($generated@@23 Real) ) (! (= (type ($generated@@9 $generated@@23)) $generated@@3)
 :pattern ( ($generated@@9 $generated@@23))
))) (forall (($generated@@24 Bool) ) (! (= ($generated@@0 ($generated@@11 $generated@@24)) $generated@@24)
 :pattern ( ($generated@@11 $generated@@24))
))) (forall (($generated@@25 T@U) ) (!  (=> (= (type $generated@@25) $generated@@4) (= ($generated@@11 ($generated@@0 $generated@@25)) $generated@@25))
 :pattern ( ($generated@@0 $generated@@25))
))) (forall (($generated@@26 Bool) ) (! (= (type ($generated@@11 $generated@@26)) $generated@@4)
 :pattern ( ($generated@@11 $generated@@26))
))) (forall (($generated@@27 RoundingMode) ) (! (= ($generated@@13 ($generated@@12 $generated@@27)) $generated@@27)
 :pattern ( ($generated@@12 $generated@@27))
))) (forall (($generated@@28 T@U) ) (!  (=> (= (type $generated@@28) $generated@@5) (= ($generated@@12 ($generated@@13 $generated@@28)) $generated@@28))
 :pattern ( ($generated@@13 $generated@@28))
))) (forall (($generated@@29 RoundingMode) ) (! (= (type ($generated@@12 $generated@@29)) $generated@@5)
 :pattern ( ($generated@@12 $generated@@29))
))) (forall (($generated@@30 String) ) (! (= ($generated@@15 ($generated@@14 $generated@@30)) $generated@@30)
 :pattern ( ($generated@@14 $generated@@30))
))) (forall (($generated@@31 T@U) ) (!  (=> (= (type $generated@@31) $generated@@6) (= ($generated@@14 ($generated@@15 $generated@@31)) $generated@@31))
 :pattern ( ($generated@@15 $generated@@31))
))) (forall (($generated@@32 String) ) (! (= (type ($generated@@14 $generated@@32)) $generated@@6)
 :pattern ( ($generated@@14 $generated@@32))
))) (forall (($generated@@33 (RegEx String)) ) (! (= ($generated@@17 ($generated@@16 $generated@@33)) $generated@@33)
 :pattern ( ($generated@@16 $generated@@33))
))) (forall (($generated@@34 T@U) ) (!  (=> (= (type $generated@@34) $generated@@7) (= ($generated@@16 ($generated@@17 $generated@@34)) $generated@@34))
 :pattern ( ($generated@@17 $generated@@34))
))) (forall (($generated@@35 (RegEx String)) ) (! (= (type ($generated@@16 $generated@@35)) $generated@@7)
 :pattern ( ($generated@@16 $generated@@35))
))))
(assert (forall (($generated@@36 T@U) ) (! (UOrdering2 $generated@@36 $generated@@36)
 :no-pattern ($generated $generated@@36)
 :no-pattern ($generated@@0 $generated@@36)
)))
(assert (forall (($generated@@37 T@U) ($generated@@38 T@U) ($generated@@39 T@U) ) (! (let (($generated@@40 (type $generated@@37)))
 (=> (and (and (= (type $generated@@38) $generated@@40) (= (type $generated@@39) $generated@@40)) (and (UOrdering2 $generated@@37 $generated@@38) (UOrdering2 $generated@@38 $generated@@39))) (UOrdering2 $generated@@37 $generated@@39)))
 :pattern ( (UOrdering2 $generated@@37 $generated@@38) (UOrdering2 $generated@@38 $generated@@39))
)))
(assert (forall (($generated@@41 T@U) ($generated@@42 T@U) ) (! (let (($generated@@43 (type $generated@@41)))
 (=> (= (type $generated@@42) $generated@@43) (=> (and (UOrdering2 $generated@@41 $generated@@42) (UOrdering2 $generated@@42 $generated@@41)) (= $generated@@41 $generated@@42))))
 :pattern ( (UOrdering2 $generated@@41 $generated@@42) (UOrdering2 $generated@@42 $generated@@41))
)))
(assert  (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (= ($generated@@1 $generated@@64) 6) (= (type $generated@@44) $generated@@64)) (= (type $generated@@45) $generated@@64)) (= (type $generated@@46) $generated@@64)) (= (type $generated@@47) $generated@@64)) (= (type $generated@@48) $generated@@64)) (= ($generated@@1 $generated@@65) 7)) (= (type $generated@@49) $generated@@65)) (= (type $generated@@50) $generated@@65)) (= (type $generated@@51) $generated@@65)) (= (type $generated@@52) $generated@@65)) (= (type $generated@@53) $generated@@65)) (= (type $generated@@54) $generated@@65)) (= (type $generated@@55) $generated@@65)) (= (type $generated@@56) $generated@@65)) (= (type $generated@@57) $generated@@65)) (= (type $generated@@58) $generated@@65)) (= (type $generated@@59) $generated@@65)) (forall (($generated@@70 T@T) ) (= ($generated@@1 ($generated@@66 $generated@@70)) 8))) (forall (($generated@@71 T@T) ) (! (= ($generated@@67 ($generated@@66 $generated@@71)) $generated@@71)
 :pattern ( ($generated@@66 $generated@@71))
))) (= (type $generated@@60) ($generated@@66 $generated@@4))) (= ($generated@@1 $generated@@68) 9)) (= (type $generated@@61) $generated@@68)) (= (type $generated@@62) $generated@@65)) (= ($generated@@1 $generated@@69) 10)) (= (type $generated@@63) $generated@@69)))
(assert (distinct $generated@@44 $generated@@45 $generated@@46 $generated@@47 $generated@@48 $generated@@49 $generated@@50 $generated@@51 $generated@@52 $generated@@53 $generated@@54 $generated@@55 $generated@@56 $generated@@57 $generated@@58 $generated@@59 $generated@@60 $generated@@61 $generated@@62 $generated@@63)
)
(assert (forall (($generated@@73 T@U) ) (! (= (type ($generated@@72 $generated@@73)) $generated@@65)
 :pattern ( ($generated@@72 $generated@@73))
)))
(assert (= ($generated@@72 $generated@@44) $generated@@49))
(assert (= ($generated@@72 $generated@@45) $generated@@50))
(assert (= ($generated@@72 $generated@@46) $generated@@51))
(assert (= ($generated@@72 $generated@@47) $generated@@52))
(assert (= ($generated@@72 $generated@@48) $generated@@53))
(assert  (and (and (and (and (and (and (and (and (and (and (and (and (and (forall (($generated@@85 T@T) ($generated@@86 T@T) ) (= ($generated@@1 ($generated@@76 $generated@@85 $generated@@86)) 11)) (forall (($generated@@87 T@T) ($generated@@88 T@T) ) (! (= ($generated@@79 ($generated@@76 $generated@@87 $generated@@88)) $generated@@87)
 :pattern ( ($generated@@76 $generated@@87 $generated@@88))
))) (forall (($generated@@89 T@T) ($generated@@90 T@T) ) (! (= ($generated@@80 ($generated@@76 $generated@@89 $generated@@90)) $generated@@90)
 :pattern ( ($generated@@76 $generated@@89 $generated@@90))
))) (forall (($generated@@91 T@U) ($generated@@92 T@U) ) (! (let (($generated@@93 ($generated@@80 (type $generated@@91))))
(= (type ($generated@@81 $generated@@91 $generated@@92)) $generated@@93))
 :pattern ( ($generated@@81 $generated@@91 $generated@@92))
))) (forall (($generated@@94 T@U) ($generated@@95 T@U) ($generated@@96 T@U) ) (! (let (($generated@@97 (type $generated@@96)))
(let (($generated@@98 (type $generated@@95)))
(= (type ($generated@@82 $generated@@94 $generated@@95 $generated@@96)) ($generated@@76 $generated@@98 $generated@@97))))
 :pattern ( ($generated@@82 $generated@@94 $generated@@95 $generated@@96))
))) (forall (($generated@@99 T@U) ($generated@@100 T@U) ($generated@@101 T@U) ) (! (let (($generated@@102 ($generated@@80 (type $generated@@99))))
 (=> (= (type $generated@@101) $generated@@102) (= ($generated@@81 ($generated@@82 $generated@@99 $generated@@100 $generated@@101) $generated@@100) $generated@@101)))
 :weight 0
))) (and (forall (($generated@@103 T@U) ($generated@@104 T@U) ($generated@@105 T@U) ($generated@@106 T@U) ) (!  (or (= $generated@@105 $generated@@106) (= ($generated@@81 ($generated@@82 $generated@@104 $generated@@105 $generated@@103) $generated@@106) ($generated@@81 $generated@@104 $generated@@106)))
 :weight 0
)) (forall (($generated@@107 T@U) ($generated@@108 T@U) ($generated@@109 T@U) ($generated@@110 T@U) ) (!  (or true (= ($generated@@81 ($generated@@82 $generated@@108 $generated@@109 $generated@@107) $generated@@110) ($generated@@81 $generated@@108 $generated@@110)))
 :weight 0
)))) (= ($generated@@1 $generated@@77) 12)) (forall (($generated@@111 T@U) ($generated@@112 T@U) ) (! (let (($generated@@113 ($generated@@67 (type $generated@@112))))
(= (type ($generated@@83 $generated@@111 $generated@@112)) $generated@@113))
 :pattern ( ($generated@@83 $generated@@111 $generated@@112))
))) (= ($generated@@1 $generated@@78) 13)) (forall (($generated@@114 T@U) ($generated@@115 T@U) ($generated@@116 T@U) ) (! (= (type ($generated@@84 $generated@@114 $generated@@115 $generated@@116)) $generated@@78)
 :pattern ( ($generated@@84 $generated@@114 $generated@@115 $generated@@116))
))) (forall (($generated@@117 T@U) ($generated@@118 T@U) ($generated@@119 T@U) ) (! (let (($generated@@120 ($generated@@67 (type $generated@@118))))
 (=> (= (type $generated@@119) $generated@@120) (= ($generated@@83 ($generated@@84 $generated@@117 $generated@@118 $generated@@119) $generated@@118) $generated@@119)))
 :weight 0
))) (and (forall (($generated@@121 T@U) ($generated@@122 T@U) ($generated@@123 T@U) ($generated@@124 T@U) ) (!  (or (= $generated@@123 $generated@@124) (= ($generated@@83 ($generated@@84 $generated@@122 $generated@@123 $generated@@121) $generated@@124) ($generated@@83 $generated@@122 $generated@@124)))
 :weight 0
)) (forall (($generated@@125 T@U) ($generated@@126 T@U) ($generated@@127 T@U) ($generated@@128 T@U) ) (!  (or true (= ($generated@@83 ($generated@@84 $generated@@126 $generated@@127 $generated@@125) $generated@@128) ($generated@@83 $generated@@126 $generated@@128)))
 :weight 0
)))) (forall (($generated@@129 Int) ) (! (= (type ($generated@@75 $generated@@129)) $generated@@64)
 :pattern ( ($generated@@75 $generated@@129))
))))
(assert (forall (($generated@@130 T@U) ($generated@@131 T@U) ) (!  (=> (and (= (type $generated@@130) $generated@@2) (= (type $generated@@131) ($generated@@76 $generated@@77 $generated@@78))) ($generated@@74 $generated@@130 ($generated@@75 0) $generated@@131))
 :pattern ( ($generated@@74 $generated@@130 ($generated@@75 0) $generated@@131))
)))
(assert (forall (($generated@@133 T@U) ) (!  (=> (= (type $generated@@133) $generated@@2) ($generated@@132 $generated@@133 ($generated@@75 0)))
 :pattern ( ($generated@@132 $generated@@133 ($generated@@75 0)))
)))
(assert  (and (= ($generated@@1 $generated@@136) 14) (forall (($generated@@137 T@U) ($generated@@138 T@U) ) (! (= (type ($generated@@135 $generated@@137 $generated@@138)) $generated@@64)
 :pattern ( ($generated@@135 $generated@@137 $generated@@138))
))))
(assert (forall (($generated@@139 T@U) ($generated@@140 T@U) ($generated@@141 T@U) ) (!  (=> (and (and (and (= (type $generated@@139) $generated@@64) (= (type $generated@@140) $generated@@64)) (= (type $generated@@141) $generated@@136)) ($generated@@132 $generated@@141 ($generated@@135 $generated@@139 $generated@@140))) ($generated@@134 $generated@@141))
 :pattern ( ($generated@@134 $generated@@141) ($generated@@132 $generated@@141 ($generated@@135 $generated@@139 $generated@@140)))
)))
(assert  (and (and (= ($generated@@1 $generated@@145) 15) (forall (($generated@@146 T@U) ) (! (= (type ($generated@@143 $generated@@146)) $generated@@145)
 :pattern ( ($generated@@143 $generated@@146))
))) (forall (($generated@@147 T@U) ) (! (= (type ($generated@@144 $generated@@147)) $generated@@145)
 :pattern ( ($generated@@144 $generated@@147))
))))
(assert (forall (($generated@@148 T@U) ($generated@@149 T@U) ) (!  (=> (and (and (= (type $generated@@148) $generated@@136) (= (type $generated@@149) $generated@@136)) true) (= ($generated@@142 $generated@@148 $generated@@149)  (and (= ($generated@@143 $generated@@148) ($generated@@143 $generated@@149)) (= ($generated@@144 $generated@@148) ($generated@@144 $generated@@149)))))
 :pattern ( ($generated@@142 $generated@@148 $generated@@149))
)))
(assert  (and (and (forall (($generated@@154 T@T) ) (= ($generated@@1 ($generated@@152 $generated@@154)) 16)) (forall (($generated@@155 T@T) ) (! (= ($generated@@153 ($generated@@152 $generated@@155)) $generated@@155)
 :pattern ( ($generated@@152 $generated@@155))
))) (forall (($generated@@156 T@T) ) (! (= (type ($generated@@151 $generated@@156)) ($generated@@152 $generated@@156))
 :pattern ( ($generated@@151 $generated@@156))
))))
(assert (forall (($generated@@157 T@U) ) (! (let (($generated@@158 (type $generated@@157)))
 (not ($generated@@150 ($generated@@151 $generated@@158) $generated@@157)))
 :pattern ( (let (($generated@@158 (type $generated@@157)))
($generated@@150 ($generated@@151 $generated@@158) $generated@@157)))
)))
(assert (forall (($generated@@161 T@U) ) (! (= (type ($generated@@159 $generated@@161)) $generated@@64)
 :pattern ( ($generated@@159 $generated@@161))
)))
(assert (forall (($generated@@162 T@U) ($generated@@163 T@U) ) (!  (=> (and (and (= (type $generated@@162) ($generated@@76 $generated@@145 $generated@@2)) (= (type $generated@@163) $generated@@64)) ($generated@@132 $generated@@162 ($generated@@159 $generated@@163))) ($generated@@160 $generated@@162))
 :pattern ( ($generated@@132 $generated@@162 ($generated@@159 $generated@@163)))
)))
(assert  (and (and (and (and (and (and (and (forall (($generated@@170 T@T) ($generated@@171 T@T) ) (= ($generated@@1 ($generated@@166 $generated@@170 $generated@@171)) 17)) (forall (($generated@@172 T@T) ($generated@@173 T@T) ) (! (= ($generated@@167 ($generated@@166 $generated@@172 $generated@@173)) $generated@@172)
 :pattern ( ($generated@@166 $generated@@172 $generated@@173))
))) (forall (($generated@@174 T@T) ($generated@@175 T@T) ) (! (= ($generated@@168 ($generated@@166 $generated@@174 $generated@@175)) $generated@@175)
 :pattern ( ($generated@@166 $generated@@174 $generated@@175))
))) (forall (($generated@@176 T@U) ($generated@@177 T@U) ($generated@@178 T@U) ) (! (let (($generated@@179 ($generated@@168 (type $generated@@176))))
(= (type ($generated@@164 $generated@@176 $generated@@177 $generated@@178)) $generated@@179))
 :pattern ( ($generated@@164 $generated@@176 $generated@@177 $generated@@178))
))) (forall (($generated@@180 T@U) ($generated@@181 T@U) ($generated@@182 T@U) ($generated@@183 T@U) ) (! (let (($generated@@184 (type $generated@@183)))
(let (($generated@@185 (type $generated@@181)))
(= (type ($generated@@169 $generated@@180 $generated@@181 $generated@@182 $generated@@183)) ($generated@@166 $generated@@185 $generated@@184))))
 :pattern ( ($generated@@169 $generated@@180 $generated@@181 $generated@@182 $generated@@183))
))) (forall (($generated@@186 T@U) ($generated@@187 T@U) ($generated@@188 T@U) ($generated@@189 T@U) ) (! (let (($generated@@190 ($generated@@168 (type $generated@@186))))
 (=> (= (type $generated@@189) $generated@@190) (= ($generated@@164 ($generated@@169 $generated@@186 $generated@@187 $generated@@188 $generated@@189) $generated@@187 $generated@@188) $generated@@189)))
 :weight 0
))) (and (and (forall (($generated@@191 T@U) ($generated@@192 T@U) ($generated@@193 T@U) ($generated@@194 T@U) ($generated@@195 T@U) ($generated@@196 T@U) ) (!  (or (= $generated@@193 $generated@@195) (= ($generated@@164 ($generated@@169 $generated@@192 $generated@@193 $generated@@194 $generated@@191) $generated@@195 $generated@@196) ($generated@@164 $generated@@192 $generated@@195 $generated@@196)))
 :weight 0
)) (forall (($generated@@197 T@U) ($generated@@198 T@U) ($generated@@199 T@U) ($generated@@200 T@U) ($generated@@201 T@U) ($generated@@202 T@U) ) (!  (or (= $generated@@200 $generated@@202) (= ($generated@@164 ($generated@@169 $generated@@198 $generated@@199 $generated@@200 $generated@@197) $generated@@201 $generated@@202) ($generated@@164 $generated@@198 $generated@@201 $generated@@202)))
 :weight 0
))) (forall (($generated@@203 T@U) ($generated@@204 T@U) ($generated@@205 T@U) ($generated@@206 T@U) ($generated@@207 T@U) ($generated@@208 T@U) ) (!  (or true (= ($generated@@164 ($generated@@169 $generated@@204 $generated@@205 $generated@@206 $generated@@203) $generated@@207 $generated@@208) ($generated@@164 $generated@@204 $generated@@207 $generated@@208)))
 :weight 0
)))) (forall (($generated@@209 T@U) ($generated@@210 T@U) ($generated@@211 T@U) ($generated@@212 Bool) ) (! (= (type ($generated@@165 $generated@@209 $generated@@210 $generated@@211 $generated@@212)) ($generated@@166 $generated@@77 $generated@@4))
 :pattern ( ($generated@@165 $generated@@209 $generated@@210 $generated@@211 $generated@@212))
))))
(assert (forall (($generated@@213 T@U) ($generated@@214 T@U) ($generated@@215 T@U) ($generated@@216 Bool) ($generated@@217 T@U) ($generated@@218 T@U) ) (! (let (($generated@@219 ($generated@@67 (type $generated@@218))))
 (=> (and (and (and (and (= (type $generated@@213) $generated@@77) (= (type $generated@@214) ($generated@@76 $generated@@77 $generated@@78))) (= (type $generated@@215) ($generated@@66 $generated@@4))) (= (type $generated@@217) $generated@@77)) (= (type $generated@@218) ($generated@@66 $generated@@219))) (= ($generated@@0 ($generated@@164 ($generated@@165 $generated@@213 $generated@@214 $generated@@215 $generated@@216) $generated@@217 $generated@@218))  (=> (and (not (= $generated@@217 $generated@@213)) ($generated@@0 ($generated@@83 ($generated@@81 $generated@@214 $generated@@217) $generated@@215))) $generated@@216))))
 :pattern ( ($generated@@164 ($generated@@165 $generated@@213 $generated@@214 $generated@@215 $generated@@216) $generated@@217 $generated@@218))
)))
(assert (forall (($generated@@222 T@U) ($generated@@223 T@U) ) (! (= (type ($generated@@220 $generated@@222 $generated@@223)) $generated@@136)
 :pattern ( ($generated@@220 $generated@@222 $generated@@223))
)))
(assert (forall (($generated@@224 T@U) ($generated@@225 T@U) ($generated@@226 T@U) ($generated@@227 T@U) ) (!  (=> (and (and (and (= (type $generated@@224) $generated@@64) (= (type $generated@@225) $generated@@64)) (= (type $generated@@226) $generated@@145)) (= (type $generated@@227) $generated@@145)) (= ($generated@@132 ($generated@@220 $generated@@226 $generated@@227) ($generated@@135 $generated@@224 $generated@@225))  (and ($generated@@221 $generated@@226 $generated@@224) ($generated@@221 $generated@@227 $generated@@225))))
 :pattern ( ($generated@@132 ($generated@@220 $generated@@226 $generated@@227) ($generated@@135 $generated@@224 $generated@@225)))
)))
(assert (forall (($generated@@228 T@U) ($generated@@229 T@U) ) (!  (=> (and (= (type $generated@@228) $generated@@136) (= (type $generated@@229) $generated@@136)) (= ($generated@@142 $generated@@228 $generated@@229) (= $generated@@228 $generated@@229)))
 :pattern ( ($generated@@142 $generated@@228 $generated@@229))
)))
(assert (forall (($generated@@231 T@U) ) (! (= (type ($generated@@230 $generated@@231)) $generated@@64)
 :pattern ( ($generated@@230 $generated@@231))
)))
(assert (forall (($generated@@232 T@U) ($generated@@233 T@U) ) (!  (=> (and (= (type $generated@@232) ($generated@@76 $generated@@145 $generated@@4)) (= (type $generated@@233) $generated@@64)) (= ($generated@@132 $generated@@232 ($generated@@230 $generated@@233)) (forall (($generated@@234 T@U) ) (!  (=> (and (= (type $generated@@234) $generated@@145) ($generated@@0 ($generated@@81 $generated@@232 $generated@@234))) ($generated@@221 $generated@@234 $generated@@233))
 :pattern ( ($generated@@81 $generated@@232 $generated@@234))
))))
 :pattern ( ($generated@@132 $generated@@232 ($generated@@230 $generated@@233)))
)))
(assert (forall (($generated@@236 T@U) ) (! (= (type ($generated@@235 $generated@@236)) $generated@@64)
 :pattern ( ($generated@@235 $generated@@236))
)))
(assert (forall (($generated@@237 T@U) ($generated@@238 T@U) ) (!  (=> (and (= (type $generated@@237) ($generated@@76 $generated@@145 $generated@@4)) (= (type $generated@@238) $generated@@64)) (= ($generated@@132 $generated@@237 ($generated@@235 $generated@@238)) (forall (($generated@@239 T@U) ) (!  (=> (and (= (type $generated@@239) $generated@@145) ($generated@@0 ($generated@@81 $generated@@237 $generated@@239))) ($generated@@221 $generated@@239 $generated@@238))
 :pattern ( ($generated@@81 $generated@@237 $generated@@239))
))))
 :pattern ( ($generated@@132 $generated@@237 ($generated@@235 $generated@@238)))
)))
(assert (forall (($generated@@241 Int) ) (! (= ($generated@@240 $generated@@241) $generated@@241)
 :pattern ( ($generated@@240 $generated@@241))
)))
(assert (forall (($generated@@243 T@U) ) (! (let (($generated@@244 (type $generated@@243)))
(= (type ($generated@@242 $generated@@243)) $generated@@244))
 :pattern ( ($generated@@242 $generated@@243))
)))
(assert (forall (($generated@@245 T@U) ) (! (= ($generated@@242 $generated@@245) $generated@@245)
 :pattern ( ($generated@@242 $generated@@245))
)))
(assert (forall (($generated@@248 T@U) ($generated@@249 T@U) ($generated@@250 T@U) ($generated@@251 T@U) ($generated@@252 T@U) ) (!  (=> (and (and (and (and (and (= (type $generated@@248) $generated@@64) (= (type $generated@@249) $generated@@64)) (= (type $generated@@250) $generated@@145)) (= (type $generated@@251) $generated@@145)) (= (type $generated@@252) ($generated@@76 $generated@@77 $generated@@78))) ($generated@@246 $generated@@252)) (= ($generated@@74 ($generated@@220 $generated@@250 $generated@@251) ($generated@@135 $generated@@248 $generated@@249) $generated@@252)  (and ($generated@@247 $generated@@250 $generated@@248 $generated@@252) ($generated@@247 $generated@@251 $generated@@249 $generated@@252))))
 :pattern ( ($generated@@74 ($generated@@220 $generated@@250 $generated@@251) ($generated@@135 $generated@@248 $generated@@249) $generated@@252))
)))
(assert (forall (($generated@@254 T@U) ) (! (= (type ($generated@@253 $generated@@254)) $generated@@68)
 :pattern ( ($generated@@253 $generated@@254))
)))
(assert (forall (($generated@@255 T@U) ) (!  (=> (= (type $generated@@255) $generated@@136) (= ($generated@@134 $generated@@255) (= ($generated@@253 $generated@@255) $generated@@61)))
 :pattern ( ($generated@@134 $generated@@255))
)))
(assert (forall (($generated@@256 T@U) ) (!  (=> (and (= (type $generated@@256) $generated@@136) ($generated@@134 $generated@@256)) (exists (($generated@@257 T@U) ($generated@@258 T@U) ) (!  (and (and (= (type $generated@@257) $generated@@145) (= (type $generated@@258) $generated@@145)) (= $generated@@256 ($generated@@220 $generated@@257 $generated@@258)))
 :no-pattern (type $generated@@257)
 :no-pattern (type $generated@@258)
 :no-pattern ($generated $generated@@257)
 :no-pattern ($generated@@0 $generated@@257)
 :no-pattern ($generated $generated@@258)
 :no-pattern ($generated@@0 $generated@@258)
)))
 :pattern ( ($generated@@134 $generated@@256))
)))
(assert (forall (($generated@@260 T@T) ) (! (= ($generated@@259 ($generated@@151 $generated@@260)) 0)
 :pattern ( ($generated@@151 $generated@@260))
)))
(assert (forall (($generated@@262 T@U) ) (! (= (type ($generated@@261 $generated@@262)) $generated@@145)
 :pattern ( ($generated@@261 $generated@@262))
)))
(assert (forall (($generated@@263 T@U) ($generated@@264 T@U) ($generated@@265 T@U) ) (!  (=> (and (= (type $generated@@264) $generated@@64) (= (type $generated@@265) ($generated@@76 $generated@@77 $generated@@78))) (= ($generated@@247 ($generated@@261 $generated@@263) $generated@@264 $generated@@265) ($generated@@74 $generated@@263 $generated@@264 $generated@@265)))
 :pattern ( ($generated@@247 ($generated@@261 $generated@@263) $generated@@264 $generated@@265))
)))
(assert (forall (($generated@@268 T@T) ) (! (= (type ($generated@@267 $generated@@268)) ($generated@@76 $generated@@268 $generated@@2))
 :pattern ( ($generated@@267 $generated@@268))
)))
(assert (forall (($generated@@269 T@U) ) (! (let (($generated@@270 ($generated@@79 (type $generated@@269))))
 (=> (= (type $generated@@269) ($generated@@76 $generated@@270 $generated@@2)) (and (= (= ($generated@@266 $generated@@269) 0) (= $generated@@269 ($generated@@267 $generated@@270))) (=> (not (= ($generated@@266 $generated@@269) 0)) (exists (($generated@@271 T@U) ) (!  (and (= (type $generated@@271) $generated@@270) (< 0 ($generated ($generated@@81 $generated@@269 $generated@@271))))
 :no-pattern (type $generated@@271)
 :no-pattern ($generated $generated@@271)
 :no-pattern ($generated@@0 $generated@@271)
))))))
 :pattern ( ($generated@@266 $generated@@269))
)))
(assert  (and (and (and (and (forall (($generated@@277 T@T) ($generated@@278 T@T) ) (= ($generated@@1 ($generated@@274 $generated@@277 $generated@@278)) 18)) (forall (($generated@@279 T@T) ($generated@@280 T@T) ) (! (= ($generated@@275 ($generated@@274 $generated@@279 $generated@@280)) $generated@@279)
 :pattern ( ($generated@@274 $generated@@279 $generated@@280))
))) (forall (($generated@@281 T@T) ($generated@@282 T@T) ) (! (= ($generated@@276 ($generated@@274 $generated@@281 $generated@@282)) $generated@@282)
 :pattern ( ($generated@@274 $generated@@281 $generated@@282))
))) (forall (($generated@@283 T@U) ) (! (let (($generated@@284 ($generated@@275 (type $generated@@283))))
(= (type ($generated@@272 $generated@@283)) ($generated@@76 $generated@@284 $generated@@4)))
 :pattern ( ($generated@@272 $generated@@283))
))) (forall (($generated@@285 T@T) ($generated@@286 T@T) ) (! (= (type ($generated@@273 $generated@@285 $generated@@286)) ($generated@@274 $generated@@285 $generated@@286))
 :pattern ( ($generated@@273 $generated@@285 $generated@@286))
))))
(assert (forall (($generated@@287 T@U) ($generated@@288 T@T) ) (! (let (($generated@@289 (type $generated@@287)))
 (not ($generated@@0 ($generated@@81 ($generated@@272 ($generated@@273 $generated@@289 $generated@@288)) $generated@@287))))
 :pattern ( (let (($generated@@289 (type $generated@@287)))
($generated@@81 ($generated@@272 ($generated@@273 $generated@@289 $generated@@288)) $generated@@287)))
)))
(assert  (and (and (and (and (forall (($generated@@295 T@T) ($generated@@296 T@T) ) (= ($generated@@1 ($generated@@292 $generated@@295 $generated@@296)) 19)) (forall (($generated@@297 T@T) ($generated@@298 T@T) ) (! (= ($generated@@293 ($generated@@292 $generated@@297 $generated@@298)) $generated@@297)
 :pattern ( ($generated@@292 $generated@@297 $generated@@298))
))) (forall (($generated@@299 T@T) ($generated@@300 T@T) ) (! (= ($generated@@294 ($generated@@292 $generated@@299 $generated@@300)) $generated@@300)
 :pattern ( ($generated@@292 $generated@@299 $generated@@300))
))) (forall (($generated@@301 T@U) ) (! (let (($generated@@302 ($generated@@293 (type $generated@@301))))
(= (type ($generated@@290 $generated@@301)) ($generated@@76 $generated@@302 $generated@@4)))
 :pattern ( ($generated@@290 $generated@@301))
))) (forall (($generated@@303 T@T) ($generated@@304 T@T) ) (! (= (type ($generated@@291 $generated@@303 $generated@@304)) ($generated@@292 $generated@@303 $generated@@304))
 :pattern ( ($generated@@291 $generated@@303 $generated@@304))
))))
(assert (forall (($generated@@305 T@U) ($generated@@306 T@T) ) (! (let (($generated@@307 (type $generated@@305)))
 (not ($generated@@0 ($generated@@81 ($generated@@290 ($generated@@291 $generated@@307 $generated@@306)) $generated@@305))))
 :pattern ( (let (($generated@@307 (type $generated@@305)))
($generated@@81 ($generated@@290 ($generated@@291 $generated@@307 $generated@@306)) $generated@@305)))
)))
(assert (forall (($generated@@308 T@U) ) (! (let (($generated@@309 ($generated@@79 (type $generated@@308))))
 (=> (= (type $generated@@308) ($generated@@76 $generated@@309 $generated@@2)) (= ($generated@@160 $generated@@308) (forall (($generated@@310 T@U) ) (!  (=> (= (type $generated@@310) $generated@@309) (and (<= 0 ($generated ($generated@@81 $generated@@308 $generated@@310))) (<= ($generated ($generated@@81 $generated@@308 $generated@@310)) ($generated@@266 $generated@@308))))
 :pattern ( ($generated@@81 $generated@@308 $generated@@310))
)))))
 :pattern ( ($generated@@160 $generated@@308))
)))
(assert (forall (($generated@@311 T@U) ) (! (let (($generated@@312 ($generated@@276 (type $generated@@311))))
(let (($generated@@313 ($generated@@275 (type $generated@@311))))
 (=> (= (type $generated@@311) ($generated@@274 $generated@@313 $generated@@312)) (or (= $generated@@311 ($generated@@273 $generated@@313 $generated@@312)) (exists (($generated@@314 T@U) ) (!  (and (= (type $generated@@314) $generated@@313) ($generated@@0 ($generated@@81 ($generated@@272 $generated@@311) $generated@@314)))
 :no-pattern (type $generated@@314)
 :no-pattern ($generated $generated@@314)
 :no-pattern ($generated@@0 $generated@@314)
))))))
 :pattern ( ($generated@@272 $generated@@311))
)))
(assert (forall (($generated@@316 T@U) ) (! (let (($generated@@317 ($generated@@276 (type $generated@@316))))
(= (type ($generated@@315 $generated@@316)) ($generated@@76 $generated@@317 $generated@@4)))
 :pattern ( ($generated@@315 $generated@@316))
)))
(assert (forall (($generated@@318 T@U) ) (! (let (($generated@@319 ($generated@@276 (type $generated@@318))))
(let (($generated@@320 ($generated@@275 (type $generated@@318))))
 (=> (= (type $generated@@318) ($generated@@274 $generated@@320 $generated@@319)) (or (= $generated@@318 ($generated@@273 $generated@@320 $generated@@319)) (exists (($generated@@321 T@U) ) (!  (and (= (type $generated@@321) $generated@@319) ($generated@@0 ($generated@@81 ($generated@@315 $generated@@318) $generated@@321)))
 :no-pattern (type $generated@@321)
 :no-pattern ($generated $generated@@321)
 :no-pattern ($generated@@0 $generated@@321)
))))))
 :pattern ( ($generated@@315 $generated@@318))
)))
(assert (forall (($generated@@322 T@U) ) (! (let (($generated@@323 ($generated@@294 (type $generated@@322))))
(let (($generated@@324 ($generated@@293 (type $generated@@322))))
 (=> (= (type $generated@@322) ($generated@@292 $generated@@324 $generated@@323)) (or (= $generated@@322 ($generated@@291 $generated@@324 $generated@@323)) (exists (($generated@@325 T@U) ) (!  (and (= (type $generated@@325) $generated@@324) ($generated@@0 ($generated@@81 ($generated@@290 $generated@@322) $generated@@325)))
 :no-pattern (type $generated@@325)
 :no-pattern ($generated $generated@@325)
 :no-pattern ($generated@@0 $generated@@325)
))))))
 :pattern ( ($generated@@290 $generated@@322))
)))
(assert (forall (($generated@@327 T@U) ) (! (let (($generated@@328 ($generated@@294 (type $generated@@327))))
(= (type ($generated@@326 $generated@@327)) ($generated@@76 $generated@@328 $generated@@4)))
 :pattern ( ($generated@@326 $generated@@327))
)))
(assert (forall (($generated@@329 T@U) ) (! (let (($generated@@330 ($generated@@294 (type $generated@@329))))
(let (($generated@@331 ($generated@@293 (type $generated@@329))))
 (=> (= (type $generated@@329) ($generated@@292 $generated@@331 $generated@@330)) (or (= $generated@@329 ($generated@@291 $generated@@331 $generated@@330)) (exists (($generated@@332 T@U) ) (!  (and (= (type $generated@@332) $generated@@330) ($generated@@0 ($generated@@81 ($generated@@326 $generated@@329) $generated@@332)))
 :no-pattern (type $generated@@332)
 :no-pattern ($generated $generated@@332)
 :no-pattern ($generated@@0 $generated@@332)
))))))
 :pattern ( ($generated@@326 $generated@@329))
)))
(assert (forall (($generated@@333 T@U) ($generated@@334 T@U) ) (!  (=> (and (= (type $generated@@333) ($generated@@76 $generated@@145 $generated@@2)) (= (type $generated@@334) $generated@@64)) (= ($generated@@132 $generated@@333 ($generated@@159 $generated@@334)) (forall (($generated@@335 T@U) ) (!  (=> (and (= (type $generated@@335) $generated@@145) (< 0 ($generated ($generated@@81 $generated@@333 $generated@@335)))) ($generated@@221 $generated@@335 $generated@@334))
 :pattern ( ($generated@@81 $generated@@333 $generated@@335))
))))
 :pattern ( ($generated@@132 $generated@@333 ($generated@@159 $generated@@334)))
)))
(assert (forall (($generated@@337 T@U) ($generated@@338 Int) ) (! (let (($generated@@339 ($generated@@153 (type $generated@@337))))
(= (type ($generated@@336 $generated@@337 $generated@@338)) $generated@@339))
 :pattern ( ($generated@@336 $generated@@337 $generated@@338))
)))
(assert (forall (($generated@@340 T@U) ($generated@@341 T@U) ) (! (let (($generated@@342 (type $generated@@341)))
 (=> (= (type $generated@@340) ($generated@@152 $generated@@342)) (= ($generated@@150 $generated@@340 $generated@@341) (exists (($generated@@343 Int) ) (!  (and (and (<= 0 $generated@@343) (< $generated@@343 ($generated@@259 $generated@@340))) (= ($generated@@336 $generated@@340 $generated@@343) $generated@@341))
 :pattern ( ($generated@@336 $generated@@340 $generated@@343))
)))))
 :pattern ( ($generated@@150 $generated@@340 $generated@@341))
)))
(assert (forall (($generated@@344 T@U) ($generated@@345 T@U) ($generated@@346 T@U) ) (!  (=> (and (and (= (type $generated@@344) ($generated@@76 $generated@@145 $generated@@4)) (= (type $generated@@345) $generated@@64)) (= (type $generated@@346) ($generated@@76 $generated@@77 $generated@@78))) (= ($generated@@74 $generated@@344 ($generated@@230 $generated@@345) $generated@@346) (forall (($generated@@347 T@U) ) (!  (=> (and (= (type $generated@@347) $generated@@145) ($generated@@0 ($generated@@81 $generated@@344 $generated@@347))) ($generated@@247 $generated@@347 $generated@@345 $generated@@346))
 :pattern ( ($generated@@81 $generated@@344 $generated@@347))
))))
 :pattern ( ($generated@@74 $generated@@344 ($generated@@230 $generated@@345) $generated@@346))
)))
(assert (forall (($generated@@348 T@U) ($generated@@349 T@U) ($generated@@350 T@U) ) (!  (=> (and (and (= (type $generated@@348) ($generated@@76 $generated@@145 $generated@@4)) (= (type $generated@@349) $generated@@64)) (= (type $generated@@350) ($generated@@76 $generated@@77 $generated@@78))) (= ($generated@@74 $generated@@348 ($generated@@235 $generated@@349) $generated@@350) (forall (($generated@@351 T@U) ) (!  (=> (and (= (type $generated@@351) $generated@@145) ($generated@@0 ($generated@@81 $generated@@348 $generated@@351))) ($generated@@247 $generated@@351 $generated@@349 $generated@@350))
 :pattern ( ($generated@@81 $generated@@348 $generated@@351))
))))
 :pattern ( ($generated@@74 $generated@@348 ($generated@@235 $generated@@349) $generated@@350))
)))
(assert (forall (($generated@@352 T@U) ) (! (let (($generated@@353 (type $generated@@352)))
(= ($generated ($generated@@81 ($generated@@267 $generated@@353) $generated@@352)) 0))
 :pattern ( (let (($generated@@353 (type $generated@@352)))
($generated@@81 ($generated@@267 $generated@@353) $generated@@352)))
)))
(assert  (and (and (forall (($generated@@357 T@U) ) (! (= (type ($generated@@354 $generated@@357)) ($generated@@76 $generated@@145 $generated@@4))
 :pattern ( ($generated@@354 $generated@@357))
)) (forall (($generated@@358 T@T) ($generated@@359 T@U) ) (! (= (type ($generated@@355 $generated@@358 $generated@@359)) $generated@@358)
 :pattern ( ($generated@@355 $generated@@358 $generated@@359))
))) (forall (($generated@@360 T@U) ) (! (let (($generated@@361 ($generated@@276 (type $generated@@360))))
(let (($generated@@362 ($generated@@275 (type $generated@@360))))
(= (type ($generated@@356 $generated@@360)) ($generated@@76 $generated@@362 $generated@@361))))
 :pattern ( ($generated@@356 $generated@@360))
))))
(assert (forall (($generated@@363 T@U) ($generated@@364 T@U) ) (!  (=> (and (= (type $generated@@363) ($generated@@274 $generated@@145 $generated@@145)) (= (type $generated@@364) $generated@@145)) (= ($generated@@0 ($generated@@81 ($generated@@354 $generated@@363) $generated@@364))  (and ($generated@@0 ($generated@@81 ($generated@@272 $generated@@363) ($generated@@143 ($generated@@355 $generated@@136 $generated@@364)))) (= ($generated@@81 ($generated@@356 $generated@@363) ($generated@@143 ($generated@@355 $generated@@136 $generated@@364))) ($generated@@144 ($generated@@355 $generated@@136 $generated@@364))))))
 :pattern ( ($generated@@81 ($generated@@354 $generated@@363) $generated@@364))
)))
(assert  (and (forall (($generated@@367 T@U) ) (! (= (type ($generated@@365 $generated@@367)) ($generated@@76 $generated@@145 $generated@@4))
 :pattern ( ($generated@@365 $generated@@367))
)) (forall (($generated@@368 T@U) ) (! (let (($generated@@369 ($generated@@294 (type $generated@@368))))
(let (($generated@@370 ($generated@@293 (type $generated@@368))))
(= (type ($generated@@366 $generated@@368)) ($generated@@76 $generated@@370 $generated@@369))))
 :pattern ( ($generated@@366 $generated@@368))
))))
(assert (forall (($generated@@371 T@U) ($generated@@372 T@U) ) (!  (=> (and (= (type $generated@@371) ($generated@@292 $generated@@145 $generated@@145)) (= (type $generated@@372) $generated@@145)) (= ($generated@@0 ($generated@@81 ($generated@@365 $generated@@371) $generated@@372))  (and ($generated@@0 ($generated@@81 ($generated@@290 $generated@@371) ($generated@@143 ($generated@@355 $generated@@136 $generated@@372)))) (= ($generated@@81 ($generated@@366 $generated@@371) ($generated@@143 ($generated@@355 $generated@@136 $generated@@372))) ($generated@@144 ($generated@@355 $generated@@136 $generated@@372))))))
 :pattern ( ($generated@@81 ($generated@@365 $generated@@371) $generated@@372))
)))
(assert (forall (($generated@@373 T@U) ($generated@@374 T@U) ) (! (let (($generated@@375 (type $generated@@374)))
(let (($generated@@376 ($generated@@275 (type $generated@@373))))
 (=> (= (type $generated@@373) ($generated@@274 $generated@@376 $generated@@375)) (= ($generated@@0 ($generated@@81 ($generated@@315 $generated@@373) $generated@@374)) (exists (($generated@@377 T@U) ) (!  (and (= (type $generated@@377) $generated@@376) (and ($generated@@0 ($generated@@81 ($generated@@272 $generated@@373) $generated@@377)) (= $generated@@374 ($generated@@81 ($generated@@356 $generated@@373) $generated@@377))))
 :pattern ( ($generated@@81 ($generated@@272 $generated@@373) $generated@@377))
 :pattern ( ($generated@@81 ($generated@@356 $generated@@373) $generated@@377))
))))))
 :pattern ( ($generated@@81 ($generated@@315 $generated@@373) $generated@@374))
)))
(assert (forall (($generated@@378 T@U) ($generated@@379 T@U) ) (! (let (($generated@@380 (type $generated@@379)))
(let (($generated@@381 ($generated@@293 (type $generated@@378))))
 (=> (= (type $generated@@378) ($generated@@292 $generated@@381 $generated@@380)) (= ($generated@@0 ($generated@@81 ($generated@@326 $generated@@378) $generated@@379)) (exists (($generated@@382 T@U) ) (!  (and (= (type $generated@@382) $generated@@381) (and ($generated@@0 ($generated@@81 ($generated@@290 $generated@@378) $generated@@382)) (= $generated@@379 ($generated@@81 ($generated@@366 $generated@@378) $generated@@382))))
 :pattern ( ($generated@@81 ($generated@@290 $generated@@378) $generated@@382))
 :pattern ( ($generated@@81 ($generated@@366 $generated@@378) $generated@@382))
))))))
 :pattern ( ($generated@@81 ($generated@@326 $generated@@378) $generated@@379))
)))
(assert (forall (($generated@@384 T@U) ($generated@@385 T@U) ) (! (= (type ($generated@@383 $generated@@384 $generated@@385)) $generated@@64)
 :pattern ( ($generated@@383 $generated@@384 $generated@@385))
)))
(assert (forall (($generated@@386 T@U) ($generated@@387 T@U) ($generated@@388 T@U) ($generated@@389 T@U) ) (!  (=> (and (and (and (= (type $generated@@386) ($generated@@274 $generated@@145 $generated@@145)) (= (type $generated@@387) $generated@@64)) (= (type $generated@@388) $generated@@64)) (= (type $generated@@389) ($generated@@76 $generated@@77 $generated@@78))) (= ($generated@@74 $generated@@386 ($generated@@383 $generated@@387 $generated@@388) $generated@@389) (forall (($generated@@390 T@U) ) (!  (=> (and (= (type $generated@@390) $generated@@145) ($generated@@0 ($generated@@81 ($generated@@272 $generated@@386) $generated@@390))) (and ($generated@@247 ($generated@@81 ($generated@@356 $generated@@386) $generated@@390) $generated@@388 $generated@@389) ($generated@@247 $generated@@390 $generated@@387 $generated@@389)))
 :pattern ( ($generated@@81 ($generated@@356 $generated@@386) $generated@@390))
 :pattern ( ($generated@@81 ($generated@@272 $generated@@386) $generated@@390))
))))
 :pattern ( ($generated@@74 $generated@@386 ($generated@@383 $generated@@387 $generated@@388) $generated@@389))
)))
(assert (forall (($generated@@392 T@U) ($generated@@393 T@U) ) (! (= (type ($generated@@391 $generated@@392 $generated@@393)) $generated@@64)
 :pattern ( ($generated@@391 $generated@@392 $generated@@393))
)))
(assert (forall (($generated@@394 T@U) ($generated@@395 T@U) ($generated@@396 T@U) ($generated@@397 T@U) ) (!  (=> (and (and (and (= (type $generated@@394) ($generated@@292 $generated@@145 $generated@@145)) (= (type $generated@@395) $generated@@64)) (= (type $generated@@396) $generated@@64)) (= (type $generated@@397) ($generated@@76 $generated@@77 $generated@@78))) (= ($generated@@74 $generated@@394 ($generated@@391 $generated@@395 $generated@@396) $generated@@397) (forall (($generated@@398 T@U) ) (!  (=> (and (= (type $generated@@398) $generated@@145) ($generated@@0 ($generated@@81 ($generated@@290 $generated@@394) $generated@@398))) (and ($generated@@247 ($generated@@81 ($generated@@366 $generated@@394) $generated@@398) $generated@@396 $generated@@397) ($generated@@247 $generated@@398 $generated@@395 $generated@@397)))
 :pattern ( ($generated@@81 ($generated@@366 $generated@@394) $generated@@398))
 :pattern ( ($generated@@81 ($generated@@290 $generated@@394) $generated@@398))
))))
 :pattern ( ($generated@@74 $generated@@394 ($generated@@391 $generated@@395 $generated@@396) $generated@@397))
)))
(assert (forall (($generated@@400 T@T) ) (! (= (type ($generated@@399 $generated@@400)) ($generated@@76 $generated@@400 $generated@@4))
 :pattern ( ($generated@@399 $generated@@400))
)))
(assert (forall (($generated@@401 T@U) ) (! (let (($generated@@402 ($generated@@294 (type $generated@@401))))
(let (($generated@@403 ($generated@@293 (type $generated@@401))))
 (=> (= (type $generated@@401) ($generated@@292 $generated@@403 $generated@@402)) (= (= $generated@@401 ($generated@@291 $generated@@403 $generated@@402)) (= ($generated@@290 $generated@@401) ($generated@@399 $generated@@403))))))
 :pattern ( ($generated@@290 $generated@@401))
)))
(assert (forall (($generated@@404 T@U) ) (! (let (($generated@@405 ($generated@@294 (type $generated@@404))))
(let (($generated@@406 ($generated@@293 (type $generated@@404))))
 (=> (= (type $generated@@404) ($generated@@292 $generated@@406 $generated@@405)) (= (= $generated@@404 ($generated@@291 $generated@@406 $generated@@405)) (= ($generated@@326 $generated@@404) ($generated@@399 $generated@@405))))))
 :pattern ( ($generated@@326 $generated@@404))
)))
(assert (forall (($generated@@407 T@U) ) (! (let (($generated@@408 ($generated@@294 (type $generated@@407))))
(let (($generated@@409 ($generated@@293 (type $generated@@407))))
 (=> (= (type $generated@@407) ($generated@@292 $generated@@409 $generated@@408)) (= (= $generated@@407 ($generated@@291 $generated@@409 $generated@@408)) (= ($generated@@365 $generated@@407) ($generated@@399 $generated@@145))))))
 :pattern ( ($generated@@365 $generated@@407))
)))
(assert (forall (($generated@@410 T@U) ) (! (let (($generated@@411 ($generated@@276 (type $generated@@410))))
(let (($generated@@412 ($generated@@275 (type $generated@@410))))
 (=> (= (type $generated@@410) ($generated@@274 $generated@@412 $generated@@411)) (or (= $generated@@410 ($generated@@273 $generated@@412 $generated@@411)) (exists (($generated@@413 T@U) ($generated@@414 T@U) ) (!  (and (and (= (type $generated@@413) $generated@@145) (= (type $generated@@414) $generated@@145)) ($generated@@0 ($generated@@81 ($generated@@354 $generated@@410) ($generated@@261 ($generated@@220 $generated@@413 $generated@@414)))))
 :no-pattern (type $generated@@413)
 :no-pattern (type $generated@@414)
 :no-pattern ($generated $generated@@413)
 :no-pattern ($generated@@0 $generated@@413)
 :no-pattern ($generated $generated@@414)
 :no-pattern ($generated@@0 $generated@@414)
))))))
 :pattern ( ($generated@@354 $generated@@410))
)))
(assert (forall (($generated@@415 T@U) ) (! (let (($generated@@416 ($generated@@294 (type $generated@@415))))
(let (($generated@@417 ($generated@@293 (type $generated@@415))))
 (=> (= (type $generated@@415) ($generated@@292 $generated@@417 $generated@@416)) (or (= $generated@@415 ($generated@@291 $generated@@417 $generated@@416)) (exists (($generated@@418 T@U) ($generated@@419 T@U) ) (!  (and (and (= (type $generated@@418) $generated@@145) (= (type $generated@@419) $generated@@145)) ($generated@@0 ($generated@@81 ($generated@@365 $generated@@415) ($generated@@261 ($generated@@220 $generated@@418 $generated@@419)))))
 :no-pattern (type $generated@@418)
 :no-pattern (type $generated@@419)
 :no-pattern ($generated $generated@@418)
 :no-pattern ($generated@@0 $generated@@418)
 :no-pattern ($generated $generated@@419)
 :no-pattern ($generated@@0 $generated@@419)
))))))
 :pattern ( ($generated@@365 $generated@@415))
)))
(assert (forall (($generated@@420 T@U) ) (!  (=> (and (= (type $generated@@420) $generated@@145) ($generated@@221 $generated@@420 $generated@@46)) (and (= ($generated@@261 ($generated@@355 $generated@@2 $generated@@420)) $generated@@420) ($generated@@132 ($generated@@355 $generated@@2 $generated@@420) $generated@@46)))
 :pattern ( ($generated@@221 $generated@@420 $generated@@46))
)))
(assert (forall (($generated@@421 T@U) ) (!  (=> (and (= (type $generated@@421) $generated@@145) ($generated@@221 $generated@@421 $generated@@47)) (and (= ($generated@@261 ($generated@@355 $generated@@3 $generated@@421)) $generated@@421) ($generated@@132 ($generated@@355 $generated@@3 $generated@@421) $generated@@47)))
 :pattern ( ($generated@@221 $generated@@421 $generated@@47))
)))
(assert (forall (($generated@@422 T@U) ) (!  (=> (and (= (type $generated@@422) $generated@@145) ($generated@@221 $generated@@422 $generated@@44)) (and (= ($generated@@261 ($generated@@355 $generated@@4 $generated@@422)) $generated@@422) ($generated@@132 ($generated@@355 $generated@@4 $generated@@422) $generated@@44)))
 :pattern ( ($generated@@221 $generated@@422 $generated@@44))
)))
(assert (= ($generated@@1 $generated@@423) 20))
(assert (forall (($generated@@424 T@U) ) (!  (=> (and (= (type $generated@@424) $generated@@145) ($generated@@221 $generated@@424 $generated@@45)) (and (= ($generated@@261 ($generated@@355 $generated@@423 $generated@@424)) $generated@@424) ($generated@@132 ($generated@@355 $generated@@423 $generated@@424) $generated@@45)))
 :pattern ( ($generated@@221 $generated@@424 $generated@@45))
)))
(assert (forall (($generated@@425 T@U) ($generated@@426 T@U) ) (!  (=> (= (type $generated@@426) $generated@@64) (= ($generated@@221 ($generated@@261 $generated@@425) $generated@@426) ($generated@@132 $generated@@425 $generated@@426)))
 :pattern ( ($generated@@221 ($generated@@261 $generated@@425) $generated@@426))
)))
(assert (forall (($generated@@427 T@U) ) (! (let (($generated@@428 ($generated@@79 (type $generated@@427))))
 (=> (= (type $generated@@427) ($generated@@76 $generated@@428 $generated@@2)) (<= 0 ($generated@@266 $generated@@427))))
 :pattern ( ($generated@@266 $generated@@427))
)))
(assert (forall (($generated@@429 T@U) ) (! (let (($generated@@430 ($generated@@153 (type $generated@@429))))
 (=> (= (type $generated@@429) ($generated@@152 $generated@@430)) (<= 0 ($generated@@259 $generated@@429))))
 :pattern ( ($generated@@259 $generated@@429))
)))
(assert (forall (($generated@@432 T@U) ) (! (= (type ($generated@@431 $generated@@432)) $generated@@64)
 :pattern ( ($generated@@431 $generated@@432))
)))
(assert (forall (($generated@@433 T@U) ($generated@@434 T@U) ) (!  (=> (and (= (type $generated@@433) $generated@@64) (= (type $generated@@434) $generated@@64)) (= ($generated@@431 ($generated@@383 $generated@@433 $generated@@434)) $generated@@433))
 :pattern ( ($generated@@383 $generated@@433 $generated@@434))
)))
(assert (forall (($generated@@436 T@U) ) (! (= (type ($generated@@435 $generated@@436)) $generated@@64)
 :pattern ( ($generated@@435 $generated@@436))
)))
(assert (forall (($generated@@437 T@U) ($generated@@438 T@U) ) (!  (=> (and (= (type $generated@@437) $generated@@64) (= (type $generated@@438) $generated@@64)) (= ($generated@@435 ($generated@@383 $generated@@437 $generated@@438)) $generated@@438))
 :pattern ( ($generated@@383 $generated@@437 $generated@@438))
)))
(assert (forall (($generated@@439 T@U) ($generated@@440 T@U) ) (!  (=> (and (= (type $generated@@439) $generated@@64) (= (type $generated@@440) $generated@@64)) (= ($generated@@72 ($generated@@383 $generated@@439 $generated@@440)) $generated@@58))
 :pattern ( ($generated@@383 $generated@@439 $generated@@440))
)))
(assert (forall (($generated@@442 T@U) ) (! (= (type ($generated@@441 $generated@@442)) $generated@@64)
 :pattern ( ($generated@@441 $generated@@442))
)))
(assert (forall (($generated@@443 T@U) ($generated@@444 T@U) ) (!  (=> (and (= (type $generated@@443) $generated@@64) (= (type $generated@@444) $generated@@64)) (= ($generated@@441 ($generated@@391 $generated@@443 $generated@@444)) $generated@@443))
 :pattern ( ($generated@@391 $generated@@443 $generated@@444))
)))
(assert (forall (($generated@@446 T@U) ) (! (= (type ($generated@@445 $generated@@446)) $generated@@64)
 :pattern ( ($generated@@445 $generated@@446))
)))
(assert (forall (($generated@@447 T@U) ($generated@@448 T@U) ) (!  (=> (and (= (type $generated@@447) $generated@@64) (= (type $generated@@448) $generated@@64)) (= ($generated@@445 ($generated@@391 $generated@@447 $generated@@448)) $generated@@448))
 :pattern ( ($generated@@391 $generated@@447 $generated@@448))
)))
(assert (forall (($generated@@449 T@U) ($generated@@450 T@U) ) (!  (=> (and (= (type $generated@@449) $generated@@64) (= (type $generated@@450) $generated@@64)) (= ($generated@@72 ($generated@@391 $generated@@449 $generated@@450)) $generated@@59))
 :pattern ( ($generated@@391 $generated@@449 $generated@@450))
)))
(assert (forall (($generated@@451 T@U) ($generated@@452 T@U) ) (!  (=> (and (= (type $generated@@451) $generated@@145) (= (type $generated@@452) $generated@@145)) (= ($generated@@253 ($generated@@220 $generated@@451 $generated@@452)) $generated@@61))
 :pattern ( ($generated@@220 $generated@@451 $generated@@452))
)))
(assert (forall (($generated@@454 T@U) ) (! (= (type ($generated@@453 $generated@@454)) $generated@@64)
 :pattern ( ($generated@@453 $generated@@454))
)))
(assert (forall (($generated@@455 T@U) ($generated@@456 T@U) ) (!  (=> (and (= (type $generated@@455) $generated@@64) (= (type $generated@@456) $generated@@64)) (= ($generated@@453 ($generated@@135 $generated@@455 $generated@@456)) $generated@@455))
 :pattern ( ($generated@@135 $generated@@455 $generated@@456))
)))
(assert (forall (($generated@@458 T@U) ) (! (= (type ($generated@@457 $generated@@458)) $generated@@64)
 :pattern ( ($generated@@457 $generated@@458))
)))
(assert (forall (($generated@@459 T@U) ($generated@@460 T@U) ) (!  (=> (and (= (type $generated@@459) $generated@@64) (= (type $generated@@460) $generated@@64)) (= ($generated@@457 ($generated@@135 $generated@@459 $generated@@460)) $generated@@460))
 :pattern ( ($generated@@135 $generated@@459 $generated@@460))
)))
(assert (forall (($generated@@461 T@U) ($generated@@462 T@U) ) (!  (=> (and (= (type $generated@@461) $generated@@145) (= (type $generated@@462) $generated@@145)) (= ($generated@@143 ($generated@@220 $generated@@461 $generated@@462)) $generated@@461))
 :pattern ( ($generated@@220 $generated@@461 $generated@@462))
)))
(assert (forall (($generated@@463 T@U) ($generated@@464 T@U) ) (!  (=> (and (= (type $generated@@463) $generated@@145) (= (type $generated@@464) $generated@@145)) (= ($generated@@144 ($generated@@220 $generated@@463 $generated@@464)) $generated@@464))
 :pattern ( ($generated@@220 $generated@@463 $generated@@464))
)))
(assert (forall (($generated@@466 T@U) ) (! (= (type ($generated@@465 $generated@@466)) $generated@@64)
 :pattern ( ($generated@@465 $generated@@466))
)))
(assert (forall (($generated@@467 T@U) ($generated@@468 T@U) ($generated@@469 T@U) ) (!  (=> (and (and (= (type $generated@@467) ($generated@@152 $generated@@145)) (= (type $generated@@468) $generated@@64)) (= (type $generated@@469) ($generated@@76 $generated@@77 $generated@@78))) (= ($generated@@74 $generated@@467 ($generated@@465 $generated@@468) $generated@@469) (forall (($generated@@470 Int) ) (!  (=> (and (<= 0 $generated@@470) (< $generated@@470 ($generated@@259 $generated@@467))) ($generated@@247 ($generated@@336 $generated@@467 $generated@@470) $generated@@468 $generated@@469))
 :pattern ( ($generated@@336 $generated@@467 $generated@@470))
))))
 :pattern ( ($generated@@74 $generated@@467 ($generated@@465 $generated@@468) $generated@@469))
)))
(assert (forall (($generated@@472 Int) ) (! (= ($generated@@471 ($generated@@75 $generated@@472)) $generated@@472)
 :pattern ( ($generated@@75 $generated@@472))
)))
(assert (forall (($generated@@474 T@U) ) (! (= (type ($generated@@473 $generated@@474)) $generated@@64)
 :pattern ( ($generated@@473 $generated@@474))
)))
(assert (forall (($generated@@475 T@U) ) (!  (=> (= (type $generated@@475) $generated@@64) (= ($generated@@473 ($generated@@230 $generated@@475)) $generated@@475))
 :pattern ( ($generated@@230 $generated@@475))
)))
(assert (forall (($generated@@476 T@U) ) (!  (=> (= (type $generated@@476) $generated@@64) (= ($generated@@72 ($generated@@230 $generated@@476)) $generated@@54))
 :pattern ( ($generated@@230 $generated@@476))
)))
(assert (forall (($generated@@478 T@U) ) (! (= (type ($generated@@477 $generated@@478)) $generated@@64)
 :pattern ( ($generated@@477 $generated@@478))
)))
(assert (forall (($generated@@479 T@U) ) (!  (=> (= (type $generated@@479) $generated@@64) (= ($generated@@477 ($generated@@235 $generated@@479)) $generated@@479))
 :pattern ( ($generated@@235 $generated@@479))
)))
(assert (forall (($generated@@480 T@U) ) (!  (=> (= (type $generated@@480) $generated@@64) (= ($generated@@72 ($generated@@235 $generated@@480)) $generated@@55))
 :pattern ( ($generated@@235 $generated@@480))
)))
(assert (forall (($generated@@482 T@U) ) (! (= (type ($generated@@481 $generated@@482)) $generated@@64)
 :pattern ( ($generated@@481 $generated@@482))
)))
(assert (forall (($generated@@483 T@U) ) (!  (=> (= (type $generated@@483) $generated@@64) (= ($generated@@481 ($generated@@159 $generated@@483)) $generated@@483))
 :pattern ( ($generated@@159 $generated@@483))
)))
(assert (forall (($generated@@484 T@U) ) (!  (=> (= (type $generated@@484) $generated@@64) (= ($generated@@72 ($generated@@159 $generated@@484)) $generated@@56))
 :pattern ( ($generated@@159 $generated@@484))
)))
(assert (forall (($generated@@486 T@U) ) (! (= (type ($generated@@485 $generated@@486)) $generated@@64)
 :pattern ( ($generated@@485 $generated@@486))
)))
(assert (forall (($generated@@487 T@U) ) (!  (=> (= (type $generated@@487) $generated@@64) (= ($generated@@485 ($generated@@465 $generated@@487)) $generated@@487))
 :pattern ( ($generated@@465 $generated@@487))
)))
(assert (forall (($generated@@488 T@U) ) (!  (=> (= (type $generated@@488) $generated@@64) (= ($generated@@72 ($generated@@465 $generated@@488)) $generated@@57))
 :pattern ( ($generated@@465 $generated@@488))
)))
(assert (forall (($generated@@489 T@U) ) (! (let (($generated@@490 (type $generated@@489)))
(= ($generated@@355 $generated@@490 ($generated@@261 $generated@@489)) $generated@@489))
 :pattern ( ($generated@@261 $generated@@489))
)))
(assert (forall (($generated@@491 T@U) ($generated@@492 T@U) ($generated@@493 T@U) ) (!  (=> (and (and (= (type $generated@@491) ($generated@@274 $generated@@145 $generated@@145)) (= (type $generated@@492) $generated@@64)) (= (type $generated@@493) $generated@@64)) (= ($generated@@132 $generated@@491 ($generated@@383 $generated@@492 $generated@@493)) (forall (($generated@@494 T@U) ) (!  (=> (and (= (type $generated@@494) $generated@@145) ($generated@@0 ($generated@@81 ($generated@@272 $generated@@491) $generated@@494))) (and ($generated@@221 ($generated@@81 ($generated@@356 $generated@@491) $generated@@494) $generated@@493) ($generated@@221 $generated@@494 $generated@@492)))
 :pattern ( ($generated@@81 ($generated@@356 $generated@@491) $generated@@494))
 :pattern ( ($generated@@81 ($generated@@272 $generated@@491) $generated@@494))
))))
 :pattern ( ($generated@@132 $generated@@491 ($generated@@383 $generated@@492 $generated@@493)))
)))
(assert (forall (($generated@@495 T@U) ($generated@@496 T@U) ($generated@@497 T@U) ) (!  (=> (and (and (= (type $generated@@495) ($generated@@292 $generated@@145 $generated@@145)) (= (type $generated@@496) $generated@@64)) (= (type $generated@@497) $generated@@64)) (= ($generated@@132 $generated@@495 ($generated@@391 $generated@@496 $generated@@497)) (forall (($generated@@498 T@U) ) (!  (=> (and (= (type $generated@@498) $generated@@145) ($generated@@0 ($generated@@81 ($generated@@290 $generated@@495) $generated@@498))) (and ($generated@@221 ($generated@@81 ($generated@@366 $generated@@495) $generated@@498) $generated@@497) ($generated@@221 $generated@@498 $generated@@496)))
 :pattern ( ($generated@@81 ($generated@@366 $generated@@495) $generated@@498))
 :pattern ( ($generated@@81 ($generated@@290 $generated@@495) $generated@@498))
))))
 :pattern ( ($generated@@132 $generated@@495 ($generated@@391 $generated@@496 $generated@@497)))
)))
(assert (forall (($generated@@501 T@U) ($generated@@502 T@U) ) (!  (=> (and (= (type $generated@@501) $generated@@145) (= (type $generated@@502) $generated@@145)) (< ($generated@@499 $generated@@501) ($generated@@500 ($generated@@220 $generated@@501 $generated@@502))))
 :pattern ( ($generated@@220 $generated@@501 $generated@@502))
)))
(assert (forall (($generated@@503 T@U) ($generated@@504 T@U) ) (!  (=> (and (= (type $generated@@503) $generated@@145) (= (type $generated@@504) $generated@@145)) (< ($generated@@499 $generated@@504) ($generated@@500 ($generated@@220 $generated@@503 $generated@@504))))
 :pattern ( ($generated@@220 $generated@@503 $generated@@504))
)))
(assert (forall (($generated@@505 T@U) ($generated@@506 T@U) ($generated@@507 T@U) ) (!  (=> (and (and (and (= (type $generated@@505) $generated@@145) (= (type $generated@@506) $generated@@64)) (= (type $generated@@507) $generated@@64)) ($generated@@221 $generated@@505 ($generated@@383 $generated@@506 $generated@@507))) (and (= ($generated@@261 ($generated@@355 ($generated@@274 $generated@@145 $generated@@145) $generated@@505)) $generated@@505) ($generated@@132 ($generated@@355 ($generated@@274 $generated@@145 $generated@@145) $generated@@505) ($generated@@383 $generated@@506 $generated@@507))))
 :pattern ( ($generated@@221 $generated@@505 ($generated@@383 $generated@@506 $generated@@507)))
)))
(assert (forall (($generated@@508 T@U) ($generated@@509 T@U) ($generated@@510 T@U) ) (!  (=> (and (and (and (= (type $generated@@508) $generated@@145) (= (type $generated@@509) $generated@@64)) (= (type $generated@@510) $generated@@64)) ($generated@@221 $generated@@508 ($generated@@391 $generated@@509 $generated@@510))) (and (= ($generated@@261 ($generated@@355 ($generated@@292 $generated@@145 $generated@@145) $generated@@508)) $generated@@508) ($generated@@132 ($generated@@355 ($generated@@292 $generated@@145 $generated@@145) $generated@@508) ($generated@@391 $generated@@509 $generated@@510))))
 :pattern ( ($generated@@221 $generated@@508 ($generated@@391 $generated@@509 $generated@@510)))
)))
(assert (forall (($generated@@511 T@U) ($generated@@512 T@U) ($generated@@513 T@U) ) (!  (=> (and (and (and (= (type $generated@@511) $generated@@64) (= (type $generated@@512) $generated@@64)) (= (type $generated@@513) $generated@@145)) ($generated@@221 $generated@@513 ($generated@@135 $generated@@511 $generated@@512))) (and (= ($generated@@261 ($generated@@355 $generated@@136 $generated@@513)) $generated@@513) ($generated@@132 ($generated@@355 $generated@@136 $generated@@513) ($generated@@135 $generated@@511 $generated@@512))))
 :pattern ( ($generated@@221 $generated@@513 ($generated@@135 $generated@@511 $generated@@512)))
)))
(assert (forall (($generated@@514 T@U) ) (! (let (($generated@@515 (type $generated@@514)))
 (not ($generated@@0 ($generated@@81 ($generated@@399 $generated@@515) $generated@@514))))
 :pattern ( (let (($generated@@515 (type $generated@@514)))
($generated@@81 ($generated@@399 $generated@@515) $generated@@514)))
)))
(assert (forall (($generated@@517 T@U) ) (! (= (type ($generated@@516 $generated@@517)) $generated@@69)
 :pattern ( ($generated@@516 $generated@@517))
)))
(assert (forall (($generated@@518 T@U) ($generated@@519 T@U) ) (!  (=> (and (= (type $generated@@518) $generated@@64) (= (type $generated@@519) $generated@@64)) (and (= ($generated@@72 ($generated@@135 $generated@@518 $generated@@519)) $generated@@62) (= ($generated@@516 ($generated@@135 $generated@@518 $generated@@519)) $generated@@63)))
 :pattern ( ($generated@@135 $generated@@518 $generated@@519))
)))
(assert (forall (($generated@@520 T@U) ) (!  (=> (= (type $generated@@520) $generated@@136) (= ($generated@@499 ($generated@@261 $generated@@520)) ($generated@@500 $generated@@520)))
 :pattern ( ($generated@@499 ($generated@@261 $generated@@520)))
)))
(assert (forall (($generated@@521 T@U) ) (!  (=> (and (= (type $generated@@521) $generated@@145) ($generated@@221 $generated@@521 ($generated@@75 0))) (and (= ($generated@@261 ($generated@@355 $generated@@2 $generated@@521)) $generated@@521) ($generated@@132 ($generated@@355 ($generated@@76 $generated@@145 $generated@@4) $generated@@521) ($generated@@75 0))))
 :pattern ( ($generated@@221 $generated@@521 ($generated@@75 0)))
)))
(assert (forall (($generated@@522 T@U) ($generated@@523 T@U) ) (!  (=> (and (and (= (type $generated@@522) $generated@@145) (= (type $generated@@523) $generated@@64)) ($generated@@221 $generated@@522 ($generated@@230 $generated@@523))) (and (= ($generated@@261 ($generated@@355 ($generated@@76 $generated@@145 $generated@@4) $generated@@522)) $generated@@522) ($generated@@132 ($generated@@355 ($generated@@76 $generated@@145 $generated@@4) $generated@@522) ($generated@@230 $generated@@523))))
 :pattern ( ($generated@@221 $generated@@522 ($generated@@230 $generated@@523)))
)))
(assert (forall (($generated@@524 T@U) ($generated@@525 T@U) ) (!  (=> (and (and (= (type $generated@@524) $generated@@145) (= (type $generated@@525) $generated@@64)) ($generated@@221 $generated@@524 ($generated@@235 $generated@@525))) (and (= ($generated@@261 ($generated@@355 ($generated@@76 $generated@@145 $generated@@4) $generated@@524)) $generated@@524) ($generated@@132 ($generated@@355 ($generated@@76 $generated@@145 $generated@@4) $generated@@524) ($generated@@235 $generated@@525))))
 :pattern ( ($generated@@221 $generated@@524 ($generated@@235 $generated@@525)))
)))
(assert (forall (($generated@@526 T@U) ($generated@@527 T@U) ) (!  (=> (and (and (= (type $generated@@526) $generated@@145) (= (type $generated@@527) $generated@@64)) ($generated@@221 $generated@@526 ($generated@@159 $generated@@527))) (and (= ($generated@@261 ($generated@@355 ($generated@@76 $generated@@145 $generated@@2) $generated@@526)) $generated@@526) ($generated@@132 ($generated@@355 ($generated@@76 $generated@@145 $generated@@2) $generated@@526) ($generated@@159 $generated@@527))))
 :pattern ( ($generated@@221 $generated@@526 ($generated@@159 $generated@@527)))
)))
(assert (forall (($generated@@528 T@U) ($generated@@529 T@U) ) (!  (=> (and (and (= (type $generated@@528) $generated@@145) (= (type $generated@@529) $generated@@64)) ($generated@@221 $generated@@528 ($generated@@465 $generated@@529))) (and (= ($generated@@261 ($generated@@355 ($generated@@152 $generated@@145) $generated@@528)) $generated@@528) ($generated@@132 ($generated@@355 ($generated@@152 $generated@@145) $generated@@528) ($generated@@465 $generated@@529))))
 :pattern ( ($generated@@221 $generated@@528 ($generated@@465 $generated@@529)))
)))
(assert (forall (($generated@@530 T@U) ($generated@@531 T@U) ($generated@@532 T@U) ) (!  (=> (and (and (= (type $generated@@530) ($generated@@76 $generated@@145 $generated@@2)) (= (type $generated@@531) $generated@@64)) (= (type $generated@@532) ($generated@@76 $generated@@77 $generated@@78))) (= ($generated@@74 $generated@@530 ($generated@@159 $generated@@531) $generated@@532) (forall (($generated@@533 T@U) ) (!  (=> (and (= (type $generated@@533) $generated@@145) (< 0 ($generated ($generated@@81 $generated@@530 $generated@@533)))) ($generated@@247 $generated@@533 $generated@@531 $generated@@532))
 :pattern ( ($generated@@81 $generated@@530 $generated@@533))
))))
 :pattern ( ($generated@@74 $generated@@530 ($generated@@159 $generated@@531) $generated@@532))
)))
(assert (forall (($generated@@534 T@U) ($generated@@535 T@U) ($generated@@536 T@U) ) (!  (=> (and (and (and (= (type $generated@@534) $generated@@136) (= (type $generated@@535) $generated@@64)) (= (type $generated@@536) ($generated@@76 $generated@@77 $generated@@78))) (and ($generated@@246 $generated@@536) (and ($generated@@134 $generated@@534) (exists (($generated@@537 T@U) ) (!  (and (= (type $generated@@537) $generated@@64) ($generated@@74 $generated@@534 ($generated@@135 $generated@@535 $generated@@537) $generated@@536))
 :pattern ( ($generated@@74 $generated@@534 ($generated@@135 $generated@@535 $generated@@537) $generated@@536))
))))) ($generated@@247 ($generated@@143 $generated@@534) $generated@@535 $generated@@536))
 :pattern ( ($generated@@247 ($generated@@143 $generated@@534) $generated@@535 $generated@@536))
)))
(assert (forall (($generated@@538 T@U) ($generated@@539 T@U) ($generated@@540 T@U) ) (!  (=> (and (and (and (= (type $generated@@538) $generated@@136) (= (type $generated@@539) $generated@@64)) (= (type $generated@@540) ($generated@@76 $generated@@77 $generated@@78))) (and ($generated@@246 $generated@@540) (and ($generated@@134 $generated@@538) (exists (($generated@@541 T@U) ) (!  (and (= (type $generated@@541) $generated@@64) ($generated@@74 $generated@@538 ($generated@@135 $generated@@541 $generated@@539) $generated@@540))
 :pattern ( ($generated@@74 $generated@@538 ($generated@@135 $generated@@541 $generated@@539) $generated@@540))
))))) ($generated@@247 ($generated@@144 $generated@@538) $generated@@539 $generated@@540))
 :pattern ( ($generated@@247 ($generated@@144 $generated@@538) $generated@@539 $generated@@540))
)))
(assert (forall (($generated@@542 T@U) ($generated@@543 T@U) ) (!  (=> (and (= (type $generated@@542) $generated@@145) (= (type $generated@@543) $generated@@145)) (= ($generated@@220 ($generated@@242 $generated@@542) ($generated@@242 $generated@@543)) ($generated@@242 ($generated@@220 $generated@@542 $generated@@543))))
 :pattern ( ($generated@@220 ($generated@@242 $generated@@542) ($generated@@242 $generated@@543)))
)))
(assert (forall (($generated@@544 Int) ) (! (= ($generated@@261 ($generated@@8 ($generated@@240 $generated@@544))) ($generated@@242 ($generated@@261 ($generated@@8 $generated@@544))))
 :pattern ( ($generated@@261 ($generated@@8 ($generated@@240 $generated@@544))))
)))
(assert (forall (($generated@@545 T@U) ) (! (= ($generated@@261 ($generated@@242 $generated@@545)) ($generated@@242 ($generated@@261 $generated@@545)))
 :pattern ( ($generated@@261 ($generated@@242 $generated@@545)))
)))
(assert (forall (($generated@@546 T@U) ) (! (let (($generated@@547 ($generated@@153 (type $generated@@546))))
 (=> (and (= (type $generated@@546) ($generated@@152 $generated@@547)) (= ($generated@@259 $generated@@546) 0)) (= $generated@@546 ($generated@@151 $generated@@547))))
 :pattern ( ($generated@@259 $generated@@546))
)))
(assert (forall (($generated@@548 T@U) ($generated@@549 T@U) ($generated@@550 T@U) ) (! (let (($generated@@551 (type $generated@@549)))
 (=> (and (and (= (type $generated@@548) ($generated@@76 $generated@@551 $generated@@2)) (= (type $generated@@550) $generated@@2)) (<= 0 ($generated $generated@@550))) (= ($generated@@266 ($generated@@82 $generated@@548 $generated@@549 $generated@@550)) (+ (- ($generated@@266 $generated@@548) ($generated ($generated@@81 $generated@@548 $generated@@549))) ($generated $generated@@550)))))
 :pattern ( ($generated@@266 ($generated@@82 $generated@@548 $generated@@549 $generated@@550)))
)))
(assert (forall (($generated@@552 T@U) ($generated@@553 T@U) ) (!  (=> (and (= (type $generated@@552) ($generated@@76 $generated@@77 $generated@@78)) (= (type $generated@@553) $generated@@2)) ($generated@@74 $generated@@553 $generated@@46 $generated@@552))
 :pattern ( ($generated@@74 $generated@@553 $generated@@46 $generated@@552))
)))
(assert (forall (($generated@@554 T@U) ($generated@@555 T@U) ) (!  (=> (and (= (type $generated@@554) ($generated@@76 $generated@@77 $generated@@78)) (= (type $generated@@555) $generated@@3)) ($generated@@74 $generated@@555 $generated@@47 $generated@@554))
 :pattern ( ($generated@@74 $generated@@555 $generated@@47 $generated@@554))
)))
(assert (forall (($generated@@556 T@U) ($generated@@557 T@U) ) (!  (=> (and (= (type $generated@@556) ($generated@@76 $generated@@77 $generated@@78)) (= (type $generated@@557) $generated@@4)) ($generated@@74 $generated@@557 $generated@@44 $generated@@556))
 :pattern ( ($generated@@74 $generated@@557 $generated@@44 $generated@@556))
)))
(assert (forall (($generated@@558 T@U) ($generated@@559 T@U) ) (!  (=> (and (= (type $generated@@558) ($generated@@76 $generated@@77 $generated@@78)) (= (type $generated@@559) $generated@@423)) ($generated@@74 $generated@@559 $generated@@45 $generated@@558))
 :pattern ( ($generated@@74 $generated@@559 $generated@@45 $generated@@558))
)))
(assert (forall (($generated@@560 T@U) ($generated@@561 T@U) ) (!  (=> (and (= (type $generated@@560) ($generated@@76 $generated@@77 $generated@@78)) (= (type $generated@@561) $generated@@145)) ($generated@@74 $generated@@561 $generated@@48 $generated@@560))
 :pattern ( ($generated@@74 $generated@@561 $generated@@48 $generated@@560))
)))
(assert (forall (($generated@@562 T@U) ($generated@@563 T@U) ) (!  (=> (and (= (type $generated@@562) ($generated@@152 $generated@@145)) (= (type $generated@@563) $generated@@64)) (= ($generated@@132 $generated@@562 ($generated@@465 $generated@@563)) (forall (($generated@@564 Int) ) (!  (=> (and (<= 0 $generated@@564) (< $generated@@564 ($generated@@259 $generated@@562))) ($generated@@221 ($generated@@336 $generated@@562 $generated@@564) $generated@@563))
 :pattern ( ($generated@@336 $generated@@562 $generated@@564))
))))
 :pattern ( ($generated@@132 $generated@@562 ($generated@@465 $generated@@563)))
)))
(assert (forall (($generated@@566 T@U) ($generated@@567 Int) ) (!  (=> (= (type $generated@@566) ($generated@@152 $generated@@145)) (=> (and (<= 0 $generated@@567) (< $generated@@567 ($generated@@259 $generated@@566))) (< ($generated@@500 ($generated@@355 $generated@@136 ($generated@@336 $generated@@566 $generated@@567))) ($generated@@565 $generated@@566))))
 :pattern ( ($generated@@500 ($generated@@355 $generated@@136 ($generated@@336 $generated@@566 $generated@@567))))
)))
(assert (forall (($generated@@568 T@U) ($generated@@569 T@U) ($generated@@570 T@U) ) (!  (=> (and (and (and (= (type $generated@@568) ($generated@@274 $generated@@145 $generated@@145)) (= (type $generated@@569) $generated@@64)) (= (type $generated@@570) $generated@@64)) ($generated@@132 $generated@@568 ($generated@@383 $generated@@569 $generated@@570))) (and (and ($generated@@132 ($generated@@272 $generated@@568) ($generated@@230 $generated@@569)) ($generated@@132 ($generated@@315 $generated@@568) ($generated@@230 $generated@@570))) ($generated@@132 ($generated@@354 $generated@@568) ($generated@@230 ($generated@@135 $generated@@569 $generated@@570)))))
 :pattern ( ($generated@@132 $generated@@568 ($generated@@383 $generated@@569 $generated@@570)))
)))
(assert (forall (($generated@@571 T@U) ($generated@@572 T@U) ($generated@@573 T@U) ) (!  (=> (and (and (and (= (type $generated@@571) ($generated@@292 $generated@@145 $generated@@145)) (= (type $generated@@572) $generated@@64)) (= (type $generated@@573) $generated@@64)) ($generated@@132 $generated@@571 ($generated@@391 $generated@@572 $generated@@573))) (and (and ($generated@@132 ($generated@@290 $generated@@571) ($generated@@235 $generated@@572)) ($generated@@132 ($generated@@326 $generated@@571) ($generated@@235 $generated@@573))) ($generated@@132 ($generated@@365 $generated@@571) ($generated@@235 ($generated@@135 $generated@@572 $generated@@573)))))
 :pattern ( ($generated@@132 $generated@@571 ($generated@@391 $generated@@572 $generated@@573)))
)))
(assert (forall (($generated@@574 T@U) ) (!  (=> (= (type $generated@@574) $generated@@2) ($generated@@132 $generated@@574 $generated@@46))
 :pattern ( ($generated@@132 $generated@@574 $generated@@46))
)))
(assert (forall (($generated@@575 T@U) ) (!  (=> (= (type $generated@@575) $generated@@3) ($generated@@132 $generated@@575 $generated@@47))
 :pattern ( ($generated@@132 $generated@@575 $generated@@47))
)))
(assert (forall (($generated@@576 T@U) ) (!  (=> (= (type $generated@@576) $generated@@4) ($generated@@132 $generated@@576 $generated@@44))
 :pattern ( ($generated@@132 $generated@@576 $generated@@44))
)))
(assert (forall (($generated@@577 T@U) ) (!  (=> (= (type $generated@@577) $generated@@423) ($generated@@132 $generated@@577 $generated@@45))
 :pattern ( ($generated@@132 $generated@@577 $generated@@45))
)))
(assert (forall (($generated@@578 T@U) ) (!  (=> (= (type $generated@@578) $generated@@145) ($generated@@132 $generated@@578 $generated@@48))
 :pattern ( ($generated@@132 $generated@@578 $generated@@48))
)))
(push 1)
(declare-fun ControlFlow (Int Int) Int)
(declare-fun $generated@@579 () T@U)
(declare-fun $generated@@580 () T@U)
(declare-fun $generated@@581 () T@U)
(declare-fun $generated@@582 () T@U)
(declare-fun $generated@@583 () T@U)
(declare-fun $generated@@584 (T@U) Bool)
(declare-fun $generated@@585 () T@U)
(declare-fun $generated@@586 () Int)
(declare-fun $generated@@587 () Int)
(assert  (and (and (and (and (and (= (type $generated@@579) ($generated@@166 $generated@@77 $generated@@4)) (= (type $generated@@580) $generated@@77)) (= (type $generated@@581) ($generated@@76 $generated@@77 $generated@@78))) (= (type $generated@@582) ($generated@@152 $generated@@145))) (= (type $generated@@583) $generated@@145)) (= (type $generated@@585) $generated@@64)))
(set-option :timeout 0)
(set-option :rlimit 0)
(assert (not
 (=> (= (ControlFlow 0 0) 3) (let (($generated@@588  (=> (and (= $generated@@579 ($generated@@165 $generated@@580 $generated@@581 $generated@@60 false)) (= (ControlFlow 0 2) (- 0 1))) ($generated@@150 $generated@@582 $generated@@583))))
(let (($generated@@589  (=> (and (and ($generated@@246 $generated@@581) ($generated@@584 $generated@@581)) (and ($generated@@221 $generated@@583 $generated@@585) ($generated@@247 $generated@@583 $generated@@585 $generated@@581))) (=> (and (and (and ($generated@@132 $generated@@582 ($generated@@465 $generated@@585)) ($generated@@74 $generated@@582 ($generated@@465 $generated@@585) $generated@@581)) (<= ($generated@@240 0) $generated@@586)) (and (and (= 1 $generated@@587) (< $generated@@586 ($generated@@259 $generated@@582))) (and (= $generated@@583 ($generated@@336 $generated@@582 $generated@@586)) (= (ControlFlow 0 3) 2)))) $generated@@588))))
$generated@@589)))
))
(check-sat)
(pop 1)
; Valid
(get-info :rlimit)
(reset)
(set-option :rlimit 0)
; did a full reset
(reset)
(set-option :print-success false)
(set-info :smt-lib-version 2.6)
(set-option :auto_config false)
(set-option :type_check true)
(set-option :smt.case_split 3)
(set-option :smt.qi.eager_threshold 100)
(set-option :smt.delay_units true)
(set-option :smt.arith.solver 2)
(set-option :smt.mbqi false)
(set-option :model.compact false)
(set-option :model.v2 true)
(set-option :pp.bv_literals false)
; done setting options


(set-info :category "industrial")
(declare-sort |T@U| 0)
(declare-sort |T@T| 0)
(declare-fun real_pow (Real Real) Real)
(declare-fun UOrdering2 (|T@U| |T@U|) Bool)
(declare-fun UOrdering3 (|T@T| |T@U| |T@U|) Bool)
(declare-fun tickleBool (Bool) Bool)
(assert (and (tickleBool true) (tickleBool false)))
(declare-fun $generated (T@U) Int)
(declare-fun $generated@@0 (T@U) Bool)
(declare-fun $generated@@1 (T@T) Int)
(declare-fun $generated@@2 () T@T)
(declare-fun $generated@@3 () T@T)
(declare-fun $generated@@4 () T@T)
(declare-fun $generated@@5 () T@T)
(declare-fun $generated@@6 () T@T)
(declare-fun $generated@@7 () T@T)
(declare-fun $generated@@8 (Int) T@U)
(declare-fun type (T@U) T@T)
(declare-fun $generated@@9 (Real) T@U)
(declare-fun $generated@@10 (T@U) Real)
(declare-fun $generated@@11 (Bool) T@U)
(declare-fun $generated@@12 (RoundingMode) T@U)
(declare-fun $generated@@13 (T@U) RoundingMode)
(declare-fun $generated@@14 (String) T@U)
(declare-fun $generated@@15 (T@U) String)
(declare-fun $generated@@16 ((RegEx String)) T@U)
(declare-fun $generated@@17 (T@U) (RegEx String))
(declare-fun $generated@@44 () T@U)
(declare-fun $generated@@45 () T@U)
(declare-fun $generated@@46 () T@U)
(declare-fun $generated@@47 () T@U)
(declare-fun $generated@@48 () T@U)
(declare-fun $generated@@49 () T@U)
(declare-fun $generated@@50 () T@U)
(declare-fun $generated@@51 () T@U)
(declare-fun $generated@@52 () T@U)
(declare-fun $generated@@53 () T@U)
(declare-fun $generated@@54 () T@U)
(declare-fun $generated@@55 () T@U)
(declare-fun $generated@@56 () T@U)
(declare-fun $generated@@57 () T@U)
(declare-fun $generated@@58 () T@U)
(declare-fun $generated@@59 () T@U)
(declare-fun $generated@@60 () T@U)
(declare-fun $generated@@61 () T@U)
(declare-fun $generated@@62 () T@U)
(declare-fun $generated@@63 () T@U)
(declare-fun $generated@@64 () T@U)
(declare-fun $generated@@65 () T@U)
(declare-fun $generated@@66 () T@U)
(declare-fun $generated@@67 () T@U)
(declare-fun $generated@@68 () T@T)
(declare-fun $generated@@69 () T@T)
(declare-fun $generated@@70 (T@T) T@T)
(declare-fun $generated@@71 (T@T) T@T)
(declare-fun $generated@@72 () T@T)
(declare-fun $generated@@73 () T@T)
(declare-fun $generated@@76 (T@U) T@U)
(declare-fun $generated@@78 (T@U T@U T@U) Bool)
(declare-fun $generated@@79 (Int) T@U)
(declare-fun $generated@@80 (T@T T@T) T@T)
(declare-fun $generated@@81 () T@T)
(declare-fun $generated@@82 () T@T)
(declare-fun $generated@@83 (T@T) T@T)
(declare-fun $generated@@84 (T@T) T@T)
(declare-fun $generated@@85 (T@U T@U) T@U)
(declare-fun $generated@@86 (T@U T@U T@U) T@U)
(declare-fun $generated@@87 (T@U T@U) T@U)
(declare-fun $generated@@88 (T@U T@U T@U) T@U)
(declare-fun $generated@@136 () T@U)
(declare-fun $generated@@139 () T@U)
(declare-fun $generated@@142 (T@U T@U) Bool)
(declare-fun $generated@@144 (T@U) Bool)
(declare-fun $generated@@145 (T@U T@U) T@U)
(declare-fun $generated@@146 () T@T)
(declare-fun $generated@@152 (T@U T@U) Bool)
(declare-fun $generated@@153 (T@U) T@U)
(declare-fun $generated@@154 (T@U) T@U)
(declare-fun $generated@@155 () T@T)
(declare-fun $generated@@160 (T@U T@U) Bool)
(declare-fun $generated@@161 (T@T) T@U)
(declare-fun $generated@@162 (T@T) T@T)
(declare-fun $generated@@163 (T@T) T@T)
(declare-fun $generated@@169 (T@U) T@U)
(declare-fun $generated@@170 (T@U) Bool)
(declare-fun $generated@@174 (T@U T@U T@U) T@U)
(declare-fun $generated@@175 (T@U T@U T@U Bool) T@U)
(declare-fun $generated@@176 (T@T T@T) T@T)
(declare-fun $generated@@177 (T@T) T@T)
(declare-fun $generated@@178 (T@T) T@T)
(declare-fun $generated@@179 (T@U T@U T@U T@U) T@U)
(declare-fun $generated@@230 (T@U T@U) T@U)
(declare-fun $generated@@231 (T@U T@U) Bool)
(declare-fun $generated@@240 (T@U) T@U)
(declare-fun $generated@@245 (T@U) T@U)
(declare-fun $generated@@250 (Int) Int)
(declare-fun $generated@@252 (T@U) T@U)
(declare-fun $generated@@256 (T@U) Bool)
(declare-fun $generated@@257 (T@U T@U T@U) Bool)
(declare-fun $generated@@263 (T@U) T@U)
(declare-fun $generated@@269 (T@U) Int)
(declare-fun $generated@@272 (T@U) T@U)
(declare-fun $generated@@277 (T@U) Int)
(declare-fun $generated@@278 (T@T) T@U)
(declare-fun $generated@@283 (T@U) T@U)
(declare-fun $generated@@284 (T@T T@T) T@U)
(declare-fun $generated@@285 (T@T T@T) T@T)
(declare-fun $generated@@286 (T@T) T@T)
(declare-fun $generated@@287 (T@T) T@T)
(declare-fun $generated@@301 (T@U) T@U)
(declare-fun $generated@@302 (T@T T@T) T@U)
(declare-fun $generated@@303 (T@T T@T) T@T)
(declare-fun $generated@@304 (T@T) T@T)
(declare-fun $generated@@305 (T@T) T@T)
(declare-fun $generated@@322 (T@T T@U) T@U)
(declare-fun $generated@@331 (T@U) T@U)
(declare-fun $generated@@342 (T@U) T@U)
(declare-fun $generated@@352 (T@U Int) T@U)
(declare-fun $generated@@370 (T@U) T@U)
(declare-fun $generated@@371 (T@U) T@U)
(declare-fun $generated@@378 (T@U) T@U)
(declare-fun $generated@@379 (T@U) T@U)
(declare-fun $generated@@396 (T@U T@U) T@U)
(declare-fun $generated@@404 (T@U T@U) T@U)
(declare-fun $generated@@412 (T@T) T@U)
(declare-fun $generated@@436 () T@T)
(declare-fun $generated@@444 (T@U) T@U)
(declare-fun $generated@@448 (T@U) T@U)
(declare-fun $generated@@454 (T@U) T@U)
(declare-fun $generated@@458 (T@U) T@U)
(declare-fun $generated@@466 (T@U) T@U)
(declare-fun $generated@@470 (T@U) T@U)
(declare-fun $generated@@478 (T@U) T@U)
(declare-fun $generated@@484 (T@U) Int)
(declare-fun $generated@@486 (T@U) T@U)
(declare-fun $generated@@490 (T@U) T@U)
(declare-fun $generated@@494 (T@U) T@U)
(declare-fun $generated@@498 (T@U) T@U)
(declare-fun $generated@@512 (T@U) Int)
(declare-fun $generated@@513 (T@U) Int)
(declare-fun $generated@@529 (T@U) T@U)
(declare-fun $generated@@579 (T@U) Int)
(assert  (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (= ($generated@@1 $generated@@2) 0) (= ($generated@@1 $generated@@3) 1)) (= ($generated@@1 $generated@@4) 2)) (= ($generated@@1 $generated@@5) 3)) (= ($generated@@1 $generated@@6) 4)) (= ($generated@@1 $generated@@7) 5)) (forall (($generated@@18 Int) ) (! (= ($generated ($generated@@8 $generated@@18)) $generated@@18)
 :pattern ( ($generated@@8 $generated@@18))
))) (forall (($generated@@19 T@U) ) (!  (=> (= (type $generated@@19) $generated@@2) (= ($generated@@8 ($generated $generated@@19)) $generated@@19))
 :pattern ( ($generated $generated@@19))
))) (forall (($generated@@20 Int) ) (! (= (type ($generated@@8 $generated@@20)) $generated@@2)
 :pattern ( ($generated@@8 $generated@@20))
))) (forall (($generated@@21 Real) ) (! (= ($generated@@10 ($generated@@9 $generated@@21)) $generated@@21)
 :pattern ( ($generated@@9 $generated@@21))
))) (forall (($generated@@22 T@U) ) (!  (=> (= (type $generated@@22) $generated@@3) (= ($generated@@9 ($generated@@10 $generated@@22)) $generated@@22))
 :pattern ( ($generated@@10 $generated@@22))
))) (forall (($generated@@23 Real) ) (! (= (type ($generated@@9 $generated@@23)) $generated@@3)
 :pattern ( ($generated@@9 $generated@@23))
))) (forall (($generated@@24 Bool) ) (! (= ($generated@@0 ($generated@@11 $generated@@24)) $generated@@24)
 :pattern ( ($generated@@11 $generated@@24))
))) (forall (($generated@@25 T@U) ) (!  (=> (= (type $generated@@25) $generated@@4) (= ($generated@@11 ($generated@@0 $generated@@25)) $generated@@25))
 :pattern ( ($generated@@0 $generated@@25))
))) (forall (($generated@@26 Bool) ) (! (= (type ($generated@@11 $generated@@26)) $generated@@4)
 :pattern ( ($generated@@11 $generated@@26))
))) (forall (($generated@@27 RoundingMode) ) (! (= ($generated@@13 ($generated@@12 $generated@@27)) $generated@@27)
 :pattern ( ($generated@@12 $generated@@27))
))) (forall (($generated@@28 T@U) ) (!  (=> (= (type $generated@@28) $generated@@5) (= ($generated@@12 ($generated@@13 $generated@@28)) $generated@@28))
 :pattern ( ($generated@@13 $generated@@28))
))) (forall (($generated@@29 RoundingMode) ) (! (= (type ($generated@@12 $generated@@29)) $generated@@5)
 :pattern ( ($generated@@12 $generated@@29))
))) (forall (($generated@@30 String) ) (! (= ($generated@@15 ($generated@@14 $generated@@30)) $generated@@30)
 :pattern ( ($generated@@14 $generated@@30))
))) (forall (($generated@@31 T@U) ) (!  (=> (= (type $generated@@31) $generated@@6) (= ($generated@@14 ($generated@@15 $generated@@31)) $generated@@31))
 :pattern ( ($generated@@15 $generated@@31))
))) (forall (($generated@@32 String) ) (! (= (type ($generated@@14 $generated@@32)) $generated@@6)
 :pattern ( ($generated@@14 $generated@@32))
))) (forall (($generated@@33 (RegEx String)) ) (! (= ($generated@@17 ($generated@@16 $generated@@33)) $generated@@33)
 :pattern ( ($generated@@16 $generated@@33))
))) (forall (($generated@@34 T@U) ) (!  (=> (= (type $generated@@34) $generated@@7) (= ($generated@@16 ($generated@@17 $generated@@34)) $generated@@34))
 :pattern ( ($generated@@17 $generated@@34))
))) (forall (($generated@@35 (RegEx String)) ) (! (= (type ($generated@@16 $generated@@35)) $generated@@7)
 :pattern ( ($generated@@16 $generated@@35))
))))
(assert (forall (($generated@@36 T@U) ) (! (UOrdering2 $generated@@36 $generated@@36)
 :no-pattern ($generated $generated@@36)
 :no-pattern ($generated@@0 $generated@@36)
)))
(assert (forall (($generated@@37 T@U) ($generated@@38 T@U) ($generated@@39 T@U) ) (! (let (($generated@@40 (type $generated@@37)))
 (=> (and (and (= (type $generated@@38) $generated@@40) (= (type $generated@@39) $generated@@40)) (and (UOrdering2 $generated@@37 $generated@@38) (UOrdering2 $generated@@38 $generated@@39))) (UOrdering2 $generated@@37 $generated@@39)))
 :pattern ( (UOrdering2 $generated@@37 $generated@@38) (UOrdering2 $generated@@38 $generated@@39))
)))
(assert (forall (($generated@@41 T@U) ($generated@@42 T@U) ) (! (let (($generated@@43 (type $generated@@41)))
 (=> (= (type $generated@@42) $generated@@43) (=> (and (UOrdering2 $generated@@41 $generated@@42) (UOrdering2 $generated@@42 $generated@@41)) (= $generated@@41 $generated@@42))))
 :pattern ( (UOrdering2 $generated@@41 $generated@@42) (UOrdering2 $generated@@42 $generated@@41))
)))
(assert  (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (= ($generated@@1 $generated@@68) 6) (= (type $generated@@44) $generated@@68)) (= (type $generated@@45) $generated@@68)) (= (type $generated@@46) $generated@@68)) (= (type $generated@@47) $generated@@68)) (= (type $generated@@48) $generated@@68)) (= ($generated@@1 $generated@@69) 7)) (= (type $generated@@49) $generated@@69)) (= (type $generated@@50) $generated@@69)) (= (type $generated@@51) $generated@@69)) (= (type $generated@@52) $generated@@69)) (= (type $generated@@53) $generated@@69)) (= (type $generated@@54) $generated@@69)) (= (type $generated@@55) $generated@@69)) (= (type $generated@@56) $generated@@69)) (= (type $generated@@57) $generated@@69)) (= (type $generated@@58) $generated@@69)) (= (type $generated@@59) $generated@@69)) (forall (($generated@@74 T@T) ) (= ($generated@@1 ($generated@@70 $generated@@74)) 8))) (forall (($generated@@75 T@T) ) (! (= ($generated@@71 ($generated@@70 $generated@@75)) $generated@@75)
 :pattern ( ($generated@@70 $generated@@75))
))) (= (type $generated@@60) ($generated@@70 $generated@@4))) (= (type $generated@@61) $generated@@69)) (= ($generated@@1 $generated@@72) 9)) (= (type $generated@@62) $generated@@72)) (= (type $generated@@63) $generated@@69)) (= (type $generated@@64) $generated@@69)) (= ($generated@@1 $generated@@73) 10)) (= (type $generated@@65) $generated@@73)) (= (type $generated@@66) $generated@@73)) (= (type $generated@@67) $generated@@73)))
(assert (distinct $generated@@44 $generated@@45 $generated@@46 $generated@@47 $generated@@48 $generated@@49 $generated@@50 $generated@@51 $generated@@52 $generated@@53 $generated@@54 $generated@@55 $generated@@56 $generated@@57 $generated@@58 $generated@@59 $generated@@60 $generated@@61 $generated@@62 $generated@@63 $generated@@64 $generated@@65 $generated@@66 $generated@@67)
)
(assert (forall (($generated@@77 T@U) ) (! (= (type ($generated@@76 $generated@@77)) $generated@@69)
 :pattern ( ($generated@@76 $generated@@77))
)))
(assert (= ($generated@@76 $generated@@44) $generated@@49))
(assert (= ($generated@@76 $generated@@45) $generated@@50))
(assert (= ($generated@@76 $generated@@46) $generated@@51))
(assert (= ($generated@@76 $generated@@47) $generated@@52))
(assert (= ($generated@@76 $generated@@48) $generated@@53))
(assert  (and (and (and (and (and (and (and (and (and (and (and (and (and (forall (($generated@@89 T@T) ($generated@@90 T@T) ) (= ($generated@@1 ($generated@@80 $generated@@89 $generated@@90)) 11)) (forall (($generated@@91 T@T) ($generated@@92 T@T) ) (! (= ($generated@@83 ($generated@@80 $generated@@91 $generated@@92)) $generated@@91)
 :pattern ( ($generated@@80 $generated@@91 $generated@@92))
))) (forall (($generated@@93 T@T) ($generated@@94 T@T) ) (! (= ($generated@@84 ($generated@@80 $generated@@93 $generated@@94)) $generated@@94)
 :pattern ( ($generated@@80 $generated@@93 $generated@@94))
))) (forall (($generated@@95 T@U) ($generated@@96 T@U) ) (! (let (($generated@@97 ($generated@@84 (type $generated@@95))))
(= (type ($generated@@85 $generated@@95 $generated@@96)) $generated@@97))
 :pattern ( ($generated@@85 $generated@@95 $generated@@96))
))) (forall (($generated@@98 T@U) ($generated@@99 T@U) ($generated@@100 T@U) ) (! (let (($generated@@101 (type $generated@@100)))
(let (($generated@@102 (type $generated@@99)))
(= (type ($generated@@86 $generated@@98 $generated@@99 $generated@@100)) ($generated@@80 $generated@@102 $generated@@101))))
 :pattern ( ($generated@@86 $generated@@98 $generated@@99 $generated@@100))
))) (forall (($generated@@103 T@U) ($generated@@104 T@U) ($generated@@105 T@U) ) (! (let (($generated@@106 ($generated@@84 (type $generated@@103))))
 (=> (= (type $generated@@105) $generated@@106) (= ($generated@@85 ($generated@@86 $generated@@103 $generated@@104 $generated@@105) $generated@@104) $generated@@105)))
 :weight 0
))) (and (forall (($generated@@107 T@U) ($generated@@108 T@U) ($generated@@109 T@U) ($generated@@110 T@U) ) (!  (or (= $generated@@109 $generated@@110) (= ($generated@@85 ($generated@@86 $generated@@108 $generated@@109 $generated@@107) $generated@@110) ($generated@@85 $generated@@108 $generated@@110)))
 :weight 0
)) (forall (($generated@@111 T@U) ($generated@@112 T@U) ($generated@@113 T@U) ($generated@@114 T@U) ) (!  (or true (= ($generated@@85 ($generated@@86 $generated@@112 $generated@@113 $generated@@111) $generated@@114) ($generated@@85 $generated@@112 $generated@@114)))
 :weight 0
)))) (= ($generated@@1 $generated@@81) 12)) (forall (($generated@@115 T@U) ($generated@@116 T@U) ) (! (let (($generated@@117 ($generated@@71 (type $generated@@116))))
(= (type ($generated@@87 $generated@@115 $generated@@116)) $generated@@117))
 :pattern ( ($generated@@87 $generated@@115 $generated@@116))
))) (= ($generated@@1 $generated@@82) 13)) (forall (($generated@@118 T@U) ($generated@@119 T@U) ($generated@@120 T@U) ) (! (= (type ($generated@@88 $generated@@118 $generated@@119 $generated@@120)) $generated@@82)
 :pattern ( ($generated@@88 $generated@@118 $generated@@119 $generated@@120))
))) (forall (($generated@@121 T@U) ($generated@@122 T@U) ($generated@@123 T@U) ) (! (let (($generated@@124 ($generated@@71 (type $generated@@122))))
 (=> (= (type $generated@@123) $generated@@124) (= ($generated@@87 ($generated@@88 $generated@@121 $generated@@122 $generated@@123) $generated@@122) $generated@@123)))
 :weight 0
))) (and (forall (($generated@@125 T@U) ($generated@@126 T@U) ($generated@@127 T@U) ($generated@@128 T@U) ) (!  (or (= $generated@@127 $generated@@128) (= ($generated@@87 ($generated@@88 $generated@@126 $generated@@127 $generated@@125) $generated@@128) ($generated@@87 $generated@@126 $generated@@128)))
 :weight 0
)) (forall (($generated@@129 T@U) ($generated@@130 T@U) ($generated@@131 T@U) ($generated@@132 T@U) ) (!  (or true (= ($generated@@87 ($generated@@88 $generated@@130 $generated@@131 $generated@@129) $generated@@132) ($generated@@87 $generated@@130 $generated@@132)))
 :weight 0
)))) (forall (($generated@@133 Int) ) (! (= (type ($generated@@79 $generated@@133)) $generated@@68)
 :pattern ( ($generated@@79 $generated@@133))
))))
(assert (forall (($generated@@134 T@U) ($generated@@135 T@U) ) (!  (=> (and (= (type $generated@@134) $generated@@2) (= (type $generated@@135) ($generated@@80 $generated@@81 $generated@@82))) ($generated@@78 $generated@@134 ($generated@@79 0) $generated@@135))
 :pattern ( ($generated@@78 $generated@@134 ($generated@@79 0) $generated@@135))
)))
(assert (= (type $generated@@136) $generated@@68))
(assert (forall (($generated@@137 T@U) ($generated@@138 T@U) ) (!  (=> (and (= (type $generated@@137) $generated@@2) (= (type $generated@@138) ($generated@@80 $generated@@81 $generated@@82))) ($generated@@78 $generated@@137 $generated@@136 $generated@@138))
 :pattern ( ($generated@@78 $generated@@137 $generated@@136 $generated@@138))
)))
(assert (= (type $generated@@139) $generated@@68))
(assert (forall (($generated@@140 T@U) ($generated@@141 T@U) ) (!  (=> (and (= (type $generated@@140) $generated@@2) (= (type $generated@@141) ($generated@@80 $generated@@81 $generated@@82))) ($generated@@78 $generated@@140 $generated@@139 $generated@@141))
 :pattern ( ($generated@@78 $generated@@140 $generated@@139 $generated@@141))
)))
(assert (forall (($generated@@143 T@U) ) (!  (=> (= (type $generated@@143) $generated@@2) ($generated@@142 $generated@@143 ($generated@@79 0)))
 :pattern ( ($generated@@142 $generated@@143 ($generated@@79 0)))
)))
(assert  (and (= ($generated@@1 $generated@@146) 14) (forall (($generated@@147 T@U) ($generated@@148 T@U) ) (! (= (type ($generated@@145 $generated@@147 $generated@@148)) $generated@@68)
 :pattern ( ($generated@@145 $generated@@147 $generated@@148))
))))
(assert (forall (($generated@@149 T@U) ($generated@@150 T@U) ($generated@@151 T@U) ) (!  (=> (and (and (and (= (type $generated@@149) $generated@@68) (= (type $generated@@150) $generated@@68)) (= (type $generated@@151) $generated@@146)) ($generated@@142 $generated@@151 ($generated@@145 $generated@@149 $generated@@150))) ($generated@@144 $generated@@151))
 :pattern ( ($generated@@144 $generated@@151) ($generated@@142 $generated@@151 ($generated@@145 $generated@@149 $generated@@150)))
)))
(assert  (and (and (= ($generated@@1 $generated@@155) 15) (forall (($generated@@156 T@U) ) (! (= (type ($generated@@153 $generated@@156)) $generated@@155)
 :pattern ( ($generated@@153 $generated@@156))
))) (forall (($generated@@157 T@U) ) (! (= (type ($generated@@154 $generated@@157)) $generated@@155)
 :pattern ( ($generated@@154 $generated@@157))
))))
(assert (forall (($generated@@158 T@U) ($generated@@159 T@U) ) (!  (=> (and (and (= (type $generated@@158) $generated@@146) (= (type $generated@@159) $generated@@146)) true) (= ($generated@@152 $generated@@158 $generated@@159)  (and (= ($generated@@153 $generated@@158) ($generated@@153 $generated@@159)) (= ($generated@@154 $generated@@158) ($generated@@154 $generated@@159)))))
 :pattern ( ($generated@@152 $generated@@158 $generated@@159))
)))
(assert  (and (and (forall (($generated@@164 T@T) ) (= ($generated@@1 ($generated@@162 $generated@@164)) 16)) (forall (($generated@@165 T@T) ) (! (= ($generated@@163 ($generated@@162 $generated@@165)) $generated@@165)
 :pattern ( ($generated@@162 $generated@@165))
))) (forall (($generated@@166 T@T) ) (! (= (type ($generated@@161 $generated@@166)) ($generated@@162 $generated@@166))
 :pattern ( ($generated@@161 $generated@@166))
))))
(assert (forall (($generated@@167 T@U) ) (! (let (($generated@@168 (type $generated@@167)))
 (not ($generated@@160 ($generated@@161 $generated@@168) $generated@@167)))
 :pattern ( (let (($generated@@168 (type $generated@@167)))
($generated@@160 ($generated@@161 $generated@@168) $generated@@167)))
)))
(assert (forall (($generated@@171 T@U) ) (! (= (type ($generated@@169 $generated@@171)) $generated@@68)
 :pattern ( ($generated@@169 $generated@@171))
)))
(assert (forall (($generated@@172 T@U) ($generated@@173 T@U) ) (!  (=> (and (and (= (type $generated@@172) ($generated@@80 $generated@@155 $generated@@2)) (= (type $generated@@173) $generated@@68)) ($generated@@142 $generated@@172 ($generated@@169 $generated@@173))) ($generated@@170 $generated@@172))
 :pattern ( ($generated@@142 $generated@@172 ($generated@@169 $generated@@173)))
)))
(assert  (and (and (and (and (and (and (and (forall (($generated@@180 T@T) ($generated@@181 T@T) ) (= ($generated@@1 ($generated@@176 $generated@@180 $generated@@181)) 17)) (forall (($generated@@182 T@T) ($generated@@183 T@T) ) (! (= ($generated@@177 ($generated@@176 $generated@@182 $generated@@183)) $generated@@182)
 :pattern ( ($generated@@176 $generated@@182 $generated@@183))
))) (forall (($generated@@184 T@T) ($generated@@185 T@T) ) (! (= ($generated@@178 ($generated@@176 $generated@@184 $generated@@185)) $generated@@185)
 :pattern ( ($generated@@176 $generated@@184 $generated@@185))
))) (forall (($generated@@186 T@U) ($generated@@187 T@U) ($generated@@188 T@U) ) (! (let (($generated@@189 ($generated@@178 (type $generated@@186))))
(= (type ($generated@@174 $generated@@186 $generated@@187 $generated@@188)) $generated@@189))
 :pattern ( ($generated@@174 $generated@@186 $generated@@187 $generated@@188))
))) (forall (($generated@@190 T@U) ($generated@@191 T@U) ($generated@@192 T@U) ($generated@@193 T@U) ) (! (let (($generated@@194 (type $generated@@193)))
(let (($generated@@195 (type $generated@@191)))
(= (type ($generated@@179 $generated@@190 $generated@@191 $generated@@192 $generated@@193)) ($generated@@176 $generated@@195 $generated@@194))))
 :pattern ( ($generated@@179 $generated@@190 $generated@@191 $generated@@192 $generated@@193))
))) (forall (($generated@@196 T@U) ($generated@@197 T@U) ($generated@@198 T@U) ($generated@@199 T@U) ) (! (let (($generated@@200 ($generated@@178 (type $generated@@196))))
 (=> (= (type $generated@@199) $generated@@200) (= ($generated@@174 ($generated@@179 $generated@@196 $generated@@197 $generated@@198 $generated@@199) $generated@@197 $generated@@198) $generated@@199)))
 :weight 0
))) (and (and (forall (($generated@@201 T@U) ($generated@@202 T@U) ($generated@@203 T@U) ($generated@@204 T@U) ($generated@@205 T@U) ($generated@@206 T@U) ) (!  (or (= $generated@@203 $generated@@205) (= ($generated@@174 ($generated@@179 $generated@@202 $generated@@203 $generated@@204 $generated@@201) $generated@@205 $generated@@206) ($generated@@174 $generated@@202 $generated@@205 $generated@@206)))
 :weight 0
)) (forall (($generated@@207 T@U) ($generated@@208 T@U) ($generated@@209 T@U) ($generated@@210 T@U) ($generated@@211 T@U) ($generated@@212 T@U) ) (!  (or (= $generated@@210 $generated@@212) (= ($generated@@174 ($generated@@179 $generated@@208 $generated@@209 $generated@@210 $generated@@207) $generated@@211 $generated@@212) ($generated@@174 $generated@@208 $generated@@211 $generated@@212)))
 :weight 0
))) (forall (($generated@@213 T@U) ($generated@@214 T@U) ($generated@@215 T@U) ($generated@@216 T@U) ($generated@@217 T@U) ($generated@@218 T@U) ) (!  (or true (= ($generated@@174 ($generated@@179 $generated@@214 $generated@@215 $generated@@216 $generated@@213) $generated@@217 $generated@@218) ($generated@@174 $generated@@214 $generated@@217 $generated@@218)))
 :weight 0
)))) (forall (($generated@@219 T@U) ($generated@@220 T@U) ($generated@@221 T@U) ($generated@@222 Bool) ) (! (= (type ($generated@@175 $generated@@219 $generated@@220 $generated@@221 $generated@@222)) ($generated@@176 $generated@@81 $generated@@4))
 :pattern ( ($generated@@175 $generated@@219 $generated@@220 $generated@@221 $generated@@222))
))))
(assert (forall (($generated@@223 T@U) ($generated@@224 T@U) ($generated@@225 T@U) ($generated@@226 Bool) ($generated@@227 T@U) ($generated@@228 T@U) ) (! (let (($generated@@229 ($generated@@71 (type $generated@@228))))
 (=> (and (and (and (and (= (type $generated@@223) $generated@@81) (= (type $generated@@224) ($generated@@80 $generated@@81 $generated@@82))) (= (type $generated@@225) ($generated@@70 $generated@@4))) (= (type $generated@@227) $generated@@81)) (= (type $generated@@228) ($generated@@70 $generated@@229))) (= ($generated@@0 ($generated@@174 ($generated@@175 $generated@@223 $generated@@224 $generated@@225 $generated@@226) $generated@@227 $generated@@228))  (=> (and (not (= $generated@@227 $generated@@223)) ($generated@@0 ($generated@@87 ($generated@@85 $generated@@224 $generated@@227) $generated@@225))) $generated@@226))))
 :pattern ( ($generated@@174 ($generated@@175 $generated@@223 $generated@@224 $generated@@225 $generated@@226) $generated@@227 $generated@@228))
)))
(assert (forall (($generated@@232 T@U) ($generated@@233 T@U) ) (! (= (type ($generated@@230 $generated@@232 $generated@@233)) $generated@@146)
 :pattern ( ($generated@@230 $generated@@232 $generated@@233))
)))
(assert (forall (($generated@@234 T@U) ($generated@@235 T@U) ($generated@@236 T@U) ($generated@@237 T@U) ) (!  (=> (and (and (and (= (type $generated@@234) $generated@@68) (= (type $generated@@235) $generated@@68)) (= (type $generated@@236) $generated@@155)) (= (type $generated@@237) $generated@@155)) (= ($generated@@142 ($generated@@230 $generated@@236 $generated@@237) ($generated@@145 $generated@@234 $generated@@235))  (and ($generated@@231 $generated@@236 $generated@@234) ($generated@@231 $generated@@237 $generated@@235))))
 :pattern ( ($generated@@142 ($generated@@230 $generated@@236 $generated@@237) ($generated@@145 $generated@@234 $generated@@235)))
)))
(assert (forall (($generated@@238 T@U) ($generated@@239 T@U) ) (!  (=> (and (= (type $generated@@238) $generated@@146) (= (type $generated@@239) $generated@@146)) (= ($generated@@152 $generated@@238 $generated@@239) (= $generated@@238 $generated@@239)))
 :pattern ( ($generated@@152 $generated@@238 $generated@@239))
)))
(assert (forall (($generated@@241 T@U) ) (! (= (type ($generated@@240 $generated@@241)) $generated@@68)
 :pattern ( ($generated@@240 $generated@@241))
)))
(assert (forall (($generated@@242 T@U) ($generated@@243 T@U) ) (!  (=> (and (= (type $generated@@242) ($generated@@80 $generated@@155 $generated@@4)) (= (type $generated@@243) $generated@@68)) (= ($generated@@142 $generated@@242 ($generated@@240 $generated@@243)) (forall (($generated@@244 T@U) ) (!  (=> (and (= (type $generated@@244) $generated@@155) ($generated@@0 ($generated@@85 $generated@@242 $generated@@244))) ($generated@@231 $generated@@244 $generated@@243))
 :pattern ( ($generated@@85 $generated@@242 $generated@@244))
))))
 :pattern ( ($generated@@142 $generated@@242 ($generated@@240 $generated@@243)))
)))
(assert (forall (($generated@@246 T@U) ) (! (= (type ($generated@@245 $generated@@246)) $generated@@68)
 :pattern ( ($generated@@245 $generated@@246))
)))
(assert (forall (($generated@@247 T@U) ($generated@@248 T@U) ) (!  (=> (and (= (type $generated@@247) ($generated@@80 $generated@@155 $generated@@4)) (= (type $generated@@248) $generated@@68)) (= ($generated@@142 $generated@@247 ($generated@@245 $generated@@248)) (forall (($generated@@249 T@U) ) (!  (=> (and (= (type $generated@@249) $generated@@155) ($generated@@0 ($generated@@85 $generated@@247 $generated@@249))) ($generated@@231 $generated@@249 $generated@@248))
 :pattern ( ($generated@@85 $generated@@247 $generated@@249))
))))
 :pattern ( ($generated@@142 $generated@@247 ($generated@@245 $generated@@248)))
)))
(assert (forall (($generated@@251 Int) ) (! (= ($generated@@250 $generated@@251) $generated@@251)
 :pattern ( ($generated@@250 $generated@@251))
)))
(assert (forall (($generated@@253 T@U) ) (! (let (($generated@@254 (type $generated@@253)))
(= (type ($generated@@252 $generated@@253)) $generated@@254))
 :pattern ( ($generated@@252 $generated@@253))
)))
(assert (forall (($generated@@255 T@U) ) (! (= ($generated@@252 $generated@@255) $generated@@255)
 :pattern ( ($generated@@252 $generated@@255))
)))
(assert (forall (($generated@@258 T@U) ($generated@@259 T@U) ($generated@@260 T@U) ($generated@@261 T@U) ($generated@@262 T@U) ) (!  (=> (and (and (and (and (and (= (type $generated@@258) $generated@@68) (= (type $generated@@259) $generated@@68)) (= (type $generated@@260) $generated@@155)) (= (type $generated@@261) $generated@@155)) (= (type $generated@@262) ($generated@@80 $generated@@81 $generated@@82))) ($generated@@256 $generated@@262)) (= ($generated@@78 ($generated@@230 $generated@@260 $generated@@261) ($generated@@145 $generated@@258 $generated@@259) $generated@@262)  (and ($generated@@257 $generated@@260 $generated@@258 $generated@@262) ($generated@@257 $generated@@261 $generated@@259 $generated@@262))))
 :pattern ( ($generated@@78 ($generated@@230 $generated@@260 $generated@@261) ($generated@@145 $generated@@258 $generated@@259) $generated@@262))
)))
(assert (forall (($generated@@264 T@U) ) (! (= (type ($generated@@263 $generated@@264)) $generated@@72)
 :pattern ( ($generated@@263 $generated@@264))
)))
(assert (forall (($generated@@265 T@U) ) (!  (=> (= (type $generated@@265) $generated@@146) (= ($generated@@144 $generated@@265) (= ($generated@@263 $generated@@265) $generated@@62)))
 :pattern ( ($generated@@144 $generated@@265))
)))
(assert (forall (($generated@@266 T@U) ) (!  (=> (and (= (type $generated@@266) $generated@@146) ($generated@@144 $generated@@266)) (exists (($generated@@267 T@U) ($generated@@268 T@U) ) (!  (and (and (= (type $generated@@267) $generated@@155) (= (type $generated@@268) $generated@@155)) (= $generated@@266 ($generated@@230 $generated@@267 $generated@@268)))
 :no-pattern (type $generated@@267)
 :no-pattern (type $generated@@268)
 :no-pattern ($generated $generated@@267)
 :no-pattern ($generated@@0 $generated@@267)
 :no-pattern ($generated $generated@@268)
 :no-pattern ($generated@@0 $generated@@268)
)))
 :pattern ( ($generated@@144 $generated@@266))
)))
(assert (forall (($generated@@270 T@T) ) (! (= ($generated@@269 ($generated@@161 $generated@@270)) 0)
 :pattern ( ($generated@@161 $generated@@270))
)))
(assert (forall (($generated@@271 T@U) ) (!  (=> (= (type $generated@@271) $generated@@2) (= ($generated@@142 $generated@@271 $generated@@136) (<= ($generated@@250 0) ($generated $generated@@271))))
 :pattern ( ($generated@@142 $generated@@271 $generated@@136))
)))
(assert (forall (($generated@@273 T@U) ) (! (= (type ($generated@@272 $generated@@273)) $generated@@155)
 :pattern ( ($generated@@272 $generated@@273))
)))
(assert (forall (($generated@@274 T@U) ($generated@@275 T@U) ($generated@@276 T@U) ) (!  (=> (and (= (type $generated@@275) $generated@@68) (= (type $generated@@276) ($generated@@80 $generated@@81 $generated@@82))) (= ($generated@@257 ($generated@@272 $generated@@274) $generated@@275 $generated@@276) ($generated@@78 $generated@@274 $generated@@275 $generated@@276)))
 :pattern ( ($generated@@257 ($generated@@272 $generated@@274) $generated@@275 $generated@@276))
)))
(assert (forall (($generated@@279 T@T) ) (! (= (type ($generated@@278 $generated@@279)) ($generated@@80 $generated@@279 $generated@@2))
 :pattern ( ($generated@@278 $generated@@279))
)))
(assert (forall (($generated@@280 T@U) ) (! (let (($generated@@281 ($generated@@83 (type $generated@@280))))
 (=> (= (type $generated@@280) ($generated@@80 $generated@@281 $generated@@2)) (and (= (= ($generated@@277 $generated@@280) 0) (= $generated@@280 ($generated@@278 $generated@@281))) (=> (not (= ($generated@@277 $generated@@280) 0)) (exists (($generated@@282 T@U) ) (!  (and (= (type $generated@@282) $generated@@281) (< 0 ($generated ($generated@@85 $generated@@280 $generated@@282))))
 :no-pattern (type $generated@@282)
 :no-pattern ($generated $generated@@282)
 :no-pattern ($generated@@0 $generated@@282)
))))))
 :pattern ( ($generated@@277 $generated@@280))
)))
(assert  (and (and (and (and (forall (($generated@@288 T@T) ($generated@@289 T@T) ) (= ($generated@@1 ($generated@@285 $generated@@288 $generated@@289)) 18)) (forall (($generated@@290 T@T) ($generated@@291 T@T) ) (! (= ($generated@@286 ($generated@@285 $generated@@290 $generated@@291)) $generated@@290)
 :pattern ( ($generated@@285 $generated@@290 $generated@@291))
))) (forall (($generated@@292 T@T) ($generated@@293 T@T) ) (! (= ($generated@@287 ($generated@@285 $generated@@292 $generated@@293)) $generated@@293)
 :pattern ( ($generated@@285 $generated@@292 $generated@@293))
))) (forall (($generated@@294 T@U) ) (! (let (($generated@@295 ($generated@@286 (type $generated@@294))))
(= (type ($generated@@283 $generated@@294)) ($generated@@80 $generated@@295 $generated@@4)))
 :pattern ( ($generated@@283 $generated@@294))
))) (forall (($generated@@296 T@T) ($generated@@297 T@T) ) (! (= (type ($generated@@284 $generated@@296 $generated@@297)) ($generated@@285 $generated@@296 $generated@@297))
 :pattern ( ($generated@@284 $generated@@296 $generated@@297))
))))
(assert (forall (($generated@@298 T@U) ($generated@@299 T@T) ) (! (let (($generated@@300 (type $generated@@298)))
 (not ($generated@@0 ($generated@@85 ($generated@@283 ($generated@@284 $generated@@300 $generated@@299)) $generated@@298))))
 :pattern ( (let (($generated@@300 (type $generated@@298)))
($generated@@85 ($generated@@283 ($generated@@284 $generated@@300 $generated@@299)) $generated@@298)))
)))
(assert  (and (and (and (and (forall (($generated@@306 T@T) ($generated@@307 T@T) ) (= ($generated@@1 ($generated@@303 $generated@@306 $generated@@307)) 19)) (forall (($generated@@308 T@T) ($generated@@309 T@T) ) (! (= ($generated@@304 ($generated@@303 $generated@@308 $generated@@309)) $generated@@308)
 :pattern ( ($generated@@303 $generated@@308 $generated@@309))
))) (forall (($generated@@310 T@T) ($generated@@311 T@T) ) (! (= ($generated@@305 ($generated@@303 $generated@@310 $generated@@311)) $generated@@311)
 :pattern ( ($generated@@303 $generated@@310 $generated@@311))
))) (forall (($generated@@312 T@U) ) (! (let (($generated@@313 ($generated@@304 (type $generated@@312))))
(= (type ($generated@@301 $generated@@312)) ($generated@@80 $generated@@313 $generated@@4)))
 :pattern ( ($generated@@301 $generated@@312))
))) (forall (($generated@@314 T@T) ($generated@@315 T@T) ) (! (= (type ($generated@@302 $generated@@314 $generated@@315)) ($generated@@303 $generated@@314 $generated@@315))
 :pattern ( ($generated@@302 $generated@@314 $generated@@315))
))))
(assert (forall (($generated@@316 T@U) ($generated@@317 T@T) ) (! (let (($generated@@318 (type $generated@@316)))
 (not ($generated@@0 ($generated@@85 ($generated@@301 ($generated@@302 $generated@@318 $generated@@317)) $generated@@316))))
 :pattern ( (let (($generated@@318 (type $generated@@316)))
($generated@@85 ($generated@@301 ($generated@@302 $generated@@318 $generated@@317)) $generated@@316)))
)))
(assert (forall (($generated@@319 T@U) ) (! (let (($generated@@320 ($generated@@83 (type $generated@@319))))
 (=> (= (type $generated@@319) ($generated@@80 $generated@@320 $generated@@2)) (= ($generated@@170 $generated@@319) (forall (($generated@@321 T@U) ) (!  (=> (= (type $generated@@321) $generated@@320) (and (<= 0 ($generated ($generated@@85 $generated@@319 $generated@@321))) (<= ($generated ($generated@@85 $generated@@319 $generated@@321)) ($generated@@277 $generated@@319))))
 :pattern ( ($generated@@85 $generated@@319 $generated@@321))
)))))
 :pattern ( ($generated@@170 $generated@@319))
)))
(assert (forall (($generated@@323 T@T) ($generated@@324 T@U) ) (! (= (type ($generated@@322 $generated@@323 $generated@@324)) $generated@@323)
 :pattern ( ($generated@@322 $generated@@323 $generated@@324))
)))
(assert (forall (($generated@@325 T@U) ) (!  (=> (and (= (type $generated@@325) $generated@@155) ($generated@@231 $generated@@325 $generated@@136)) (and (= ($generated@@272 ($generated@@322 $generated@@2 $generated@@325)) $generated@@325) ($generated@@142 ($generated@@322 $generated@@2 $generated@@325) $generated@@136)))
 :pattern ( ($generated@@231 $generated@@325 $generated@@136))
)))
(assert (forall (($generated@@326 T@U) ) (!  (=> (and (= (type $generated@@326) $generated@@155) ($generated@@231 $generated@@326 $generated@@139)) (and (= ($generated@@272 ($generated@@322 $generated@@2 $generated@@326)) $generated@@326) ($generated@@142 ($generated@@322 $generated@@2 $generated@@326) $generated@@139)))
 :pattern ( ($generated@@231 $generated@@326 $generated@@139))
)))
(assert (forall (($generated@@327 T@U) ) (! (let (($generated@@328 ($generated@@287 (type $generated@@327))))
(let (($generated@@329 ($generated@@286 (type $generated@@327))))
 (=> (= (type $generated@@327) ($generated@@285 $generated@@329 $generated@@328)) (or (= $generated@@327 ($generated@@284 $generated@@329 $generated@@328)) (exists (($generated@@330 T@U) ) (!  (and (= (type $generated@@330) $generated@@329) ($generated@@0 ($generated@@85 ($generated@@283 $generated@@327) $generated@@330)))
 :no-pattern (type $generated@@330)
 :no-pattern ($generated $generated@@330)
 :no-pattern ($generated@@0 $generated@@330)
))))))
 :pattern ( ($generated@@283 $generated@@327))
)))
(assert (forall (($generated@@332 T@U) ) (! (let (($generated@@333 ($generated@@287 (type $generated@@332))))
(= (type ($generated@@331 $generated@@332)) ($generated@@80 $generated@@333 $generated@@4)))
 :pattern ( ($generated@@331 $generated@@332))
)))
(assert (forall (($generated@@334 T@U) ) (! (let (($generated@@335 ($generated@@287 (type $generated@@334))))
(let (($generated@@336 ($generated@@286 (type $generated@@334))))
 (=> (= (type $generated@@334) ($generated@@285 $generated@@336 $generated@@335)) (or (= $generated@@334 ($generated@@284 $generated@@336 $generated@@335)) (exists (($generated@@337 T@U) ) (!  (and (= (type $generated@@337) $generated@@335) ($generated@@0 ($generated@@85 ($generated@@331 $generated@@334) $generated@@337)))
 :no-pattern (type $generated@@337)
 :no-pattern ($generated $generated@@337)
 :no-pattern ($generated@@0 $generated@@337)
))))))
 :pattern ( ($generated@@331 $generated@@334))
)))
(assert (forall (($generated@@338 T@U) ) (! (let (($generated@@339 ($generated@@305 (type $generated@@338))))
(let (($generated@@340 ($generated@@304 (type $generated@@338))))
 (=> (= (type $generated@@338) ($generated@@303 $generated@@340 $generated@@339)) (or (= $generated@@338 ($generated@@302 $generated@@340 $generated@@339)) (exists (($generated@@341 T@U) ) (!  (and (= (type $generated@@341) $generated@@340) ($generated@@0 ($generated@@85 ($generated@@301 $generated@@338) $generated@@341)))
 :no-pattern (type $generated@@341)
 :no-pattern ($generated $generated@@341)
 :no-pattern ($generated@@0 $generated@@341)
))))))
 :pattern ( ($generated@@301 $generated@@338))
)))
(assert (forall (($generated@@343 T@U) ) (! (let (($generated@@344 ($generated@@305 (type $generated@@343))))
(= (type ($generated@@342 $generated@@343)) ($generated@@80 $generated@@344 $generated@@4)))
 :pattern ( ($generated@@342 $generated@@343))
)))
(assert (forall (($generated@@345 T@U) ) (! (let (($generated@@346 ($generated@@305 (type $generated@@345))))
(let (($generated@@347 ($generated@@304 (type $generated@@345))))
 (=> (= (type $generated@@345) ($generated@@303 $generated@@347 $generated@@346)) (or (= $generated@@345 ($generated@@302 $generated@@347 $generated@@346)) (exists (($generated@@348 T@U) ) (!  (and (= (type $generated@@348) $generated@@346) ($generated@@0 ($generated@@85 ($generated@@342 $generated@@345) $generated@@348)))
 :no-pattern (type $generated@@348)
 :no-pattern ($generated $generated@@348)
 :no-pattern ($generated@@0 $generated@@348)
))))))
 :pattern ( ($generated@@342 $generated@@345))
)))
(assert (forall (($generated@@349 T@U) ($generated@@350 T@U) ) (!  (=> (and (= (type $generated@@349) ($generated@@80 $generated@@155 $generated@@2)) (= (type $generated@@350) $generated@@68)) (= ($generated@@142 $generated@@349 ($generated@@169 $generated@@350)) (forall (($generated@@351 T@U) ) (!  (=> (and (= (type $generated@@351) $generated@@155) (< 0 ($generated ($generated@@85 $generated@@349 $generated@@351)))) ($generated@@231 $generated@@351 $generated@@350))
 :pattern ( ($generated@@85 $generated@@349 $generated@@351))
))))
 :pattern ( ($generated@@142 $generated@@349 ($generated@@169 $generated@@350)))
)))
(assert (forall (($generated@@353 T@U) ($generated@@354 Int) ) (! (let (($generated@@355 ($generated@@163 (type $generated@@353))))
(= (type ($generated@@352 $generated@@353 $generated@@354)) $generated@@355))
 :pattern ( ($generated@@352 $generated@@353 $generated@@354))
)))
(assert (forall (($generated@@356 T@U) ($generated@@357 T@U) ) (! (let (($generated@@358 (type $generated@@357)))
 (=> (= (type $generated@@356) ($generated@@162 $generated@@358)) (= ($generated@@160 $generated@@356 $generated@@357) (exists (($generated@@359 Int) ) (!  (and (and (<= 0 $generated@@359) (< $generated@@359 ($generated@@269 $generated@@356))) (= ($generated@@352 $generated@@356 $generated@@359) $generated@@357))
 :pattern ( ($generated@@352 $generated@@356 $generated@@359))
)))))
 :pattern ( ($generated@@160 $generated@@356 $generated@@357))
)))
(assert (forall (($generated@@360 T@U) ($generated@@361 T@U) ($generated@@362 T@U) ) (!  (=> (and (and (= (type $generated@@360) ($generated@@80 $generated@@155 $generated@@4)) (= (type $generated@@361) $generated@@68)) (= (type $generated@@362) ($generated@@80 $generated@@81 $generated@@82))) (= ($generated@@78 $generated@@360 ($generated@@240 $generated@@361) $generated@@362) (forall (($generated@@363 T@U) ) (!  (=> (and (= (type $generated@@363) $generated@@155) ($generated@@0 ($generated@@85 $generated@@360 $generated@@363))) ($generated@@257 $generated@@363 $generated@@361 $generated@@362))
 :pattern ( ($generated@@85 $generated@@360 $generated@@363))
))))
 :pattern ( ($generated@@78 $generated@@360 ($generated@@240 $generated@@361) $generated@@362))
)))
(assert (forall (($generated@@364 T@U) ($generated@@365 T@U) ($generated@@366 T@U) ) (!  (=> (and (and (= (type $generated@@364) ($generated@@80 $generated@@155 $generated@@4)) (= (type $generated@@365) $generated@@68)) (= (type $generated@@366) ($generated@@80 $generated@@81 $generated@@82))) (= ($generated@@78 $generated@@364 ($generated@@245 $generated@@365) $generated@@366) (forall (($generated@@367 T@U) ) (!  (=> (and (= (type $generated@@367) $generated@@155) ($generated@@0 ($generated@@85 $generated@@364 $generated@@367))) ($generated@@257 $generated@@367 $generated@@365 $generated@@366))
 :pattern ( ($generated@@85 $generated@@364 $generated@@367))
))))
 :pattern ( ($generated@@78 $generated@@364 ($generated@@245 $generated@@365) $generated@@366))
)))
(assert (forall (($generated@@368 T@U) ) (! (let (($generated@@369 (type $generated@@368)))
(= ($generated ($generated@@85 ($generated@@278 $generated@@369) $generated@@368)) 0))
 :pattern ( (let (($generated@@369 (type $generated@@368)))
($generated@@85 ($generated@@278 $generated@@369) $generated@@368)))
)))
(assert  (and (forall (($generated@@372 T@U) ) (! (= (type ($generated@@370 $generated@@372)) ($generated@@80 $generated@@155 $generated@@4))
 :pattern ( ($generated@@370 $generated@@372))
)) (forall (($generated@@373 T@U) ) (! (let (($generated@@374 ($generated@@287 (type $generated@@373))))
(let (($generated@@375 ($generated@@286 (type $generated@@373))))
(= (type ($generated@@371 $generated@@373)) ($generated@@80 $generated@@375 $generated@@374))))
 :pattern ( ($generated@@371 $generated@@373))
))))
(assert (forall (($generated@@376 T@U) ($generated@@377 T@U) ) (!  (=> (and (= (type $generated@@376) ($generated@@285 $generated@@155 $generated@@155)) (= (type $generated@@377) $generated@@155)) (= ($generated@@0 ($generated@@85 ($generated@@370 $generated@@376) $generated@@377))  (and ($generated@@0 ($generated@@85 ($generated@@283 $generated@@376) ($generated@@153 ($generated@@322 $generated@@146 $generated@@377)))) (= ($generated@@85 ($generated@@371 $generated@@376) ($generated@@153 ($generated@@322 $generated@@146 $generated@@377))) ($generated@@154 ($generated@@322 $generated@@146 $generated@@377))))))
 :pattern ( ($generated@@85 ($generated@@370 $generated@@376) $generated@@377))
)))
(assert  (and (forall (($generated@@380 T@U) ) (! (= (type ($generated@@378 $generated@@380)) ($generated@@80 $generated@@155 $generated@@4))
 :pattern ( ($generated@@378 $generated@@380))
)) (forall (($generated@@381 T@U) ) (! (let (($generated@@382 ($generated@@305 (type $generated@@381))))
(let (($generated@@383 ($generated@@304 (type $generated@@381))))
(= (type ($generated@@379 $generated@@381)) ($generated@@80 $generated@@383 $generated@@382))))
 :pattern ( ($generated@@379 $generated@@381))
))))
(assert (forall (($generated@@384 T@U) ($generated@@385 T@U) ) (!  (=> (and (= (type $generated@@384) ($generated@@303 $generated@@155 $generated@@155)) (= (type $generated@@385) $generated@@155)) (= ($generated@@0 ($generated@@85 ($generated@@378 $generated@@384) $generated@@385))  (and ($generated@@0 ($generated@@85 ($generated@@301 $generated@@384) ($generated@@153 ($generated@@322 $generated@@146 $generated@@385)))) (= ($generated@@85 ($generated@@379 $generated@@384) ($generated@@153 ($generated@@322 $generated@@146 $generated@@385))) ($generated@@154 ($generated@@322 $generated@@146 $generated@@385))))))
 :pattern ( ($generated@@85 ($generated@@378 $generated@@384) $generated@@385))
)))
(assert (forall (($generated@@386 T@U) ($generated@@387 T@U) ) (! (let (($generated@@388 (type $generated@@387)))
(let (($generated@@389 ($generated@@286 (type $generated@@386))))
 (=> (= (type $generated@@386) ($generated@@285 $generated@@389 $generated@@388)) (= ($generated@@0 ($generated@@85 ($generated@@331 $generated@@386) $generated@@387)) (exists (($generated@@390 T@U) ) (!  (and (= (type $generated@@390) $generated@@389) (and ($generated@@0 ($generated@@85 ($generated@@283 $generated@@386) $generated@@390)) (= $generated@@387 ($generated@@85 ($generated@@371 $generated@@386) $generated@@390))))
 :pattern ( ($generated@@85 ($generated@@283 $generated@@386) $generated@@390))
 :pattern ( ($generated@@85 ($generated@@371 $generated@@386) $generated@@390))
))))))
 :pattern ( ($generated@@85 ($generated@@331 $generated@@386) $generated@@387))
)))
(assert (forall (($generated@@391 T@U) ($generated@@392 T@U) ) (! (let (($generated@@393 (type $generated@@392)))
(let (($generated@@394 ($generated@@304 (type $generated@@391))))
 (=> (= (type $generated@@391) ($generated@@303 $generated@@394 $generated@@393)) (= ($generated@@0 ($generated@@85 ($generated@@342 $generated@@391) $generated@@392)) (exists (($generated@@395 T@U) ) (!  (and (= (type $generated@@395) $generated@@394) (and ($generated@@0 ($generated@@85 ($generated@@301 $generated@@391) $generated@@395)) (= $generated@@392 ($generated@@85 ($generated@@379 $generated@@391) $generated@@395))))
 :pattern ( ($generated@@85 ($generated@@301 $generated@@391) $generated@@395))
 :pattern ( ($generated@@85 ($generated@@379 $generated@@391) $generated@@395))
))))))
 :pattern ( ($generated@@85 ($generated@@342 $generated@@391) $generated@@392))
)))
(assert (forall (($generated@@397 T@U) ($generated@@398 T@U) ) (! (= (type ($generated@@396 $generated@@397 $generated@@398)) $generated@@68)
 :pattern ( ($generated@@396 $generated@@397 $generated@@398))
)))
(assert (forall (($generated@@399 T@U) ($generated@@400 T@U) ($generated@@401 T@U) ($generated@@402 T@U) ) (!  (=> (and (and (and (= (type $generated@@399) ($generated@@285 $generated@@155 $generated@@155)) (= (type $generated@@400) $generated@@68)) (= (type $generated@@401) $generated@@68)) (= (type $generated@@402) ($generated@@80 $generated@@81 $generated@@82))) (= ($generated@@78 $generated@@399 ($generated@@396 $generated@@400 $generated@@401) $generated@@402) (forall (($generated@@403 T@U) ) (!  (=> (and (= (type $generated@@403) $generated@@155) ($generated@@0 ($generated@@85 ($generated@@283 $generated@@399) $generated@@403))) (and ($generated@@257 ($generated@@85 ($generated@@371 $generated@@399) $generated@@403) $generated@@401 $generated@@402) ($generated@@257 $generated@@403 $generated@@400 $generated@@402)))
 :pattern ( ($generated@@85 ($generated@@371 $generated@@399) $generated@@403))
 :pattern ( ($generated@@85 ($generated@@283 $generated@@399) $generated@@403))
))))
 :pattern ( ($generated@@78 $generated@@399 ($generated@@396 $generated@@400 $generated@@401) $generated@@402))
)))
(assert (forall (($generated@@405 T@U) ($generated@@406 T@U) ) (! (= (type ($generated@@404 $generated@@405 $generated@@406)) $generated@@68)
 :pattern ( ($generated@@404 $generated@@405 $generated@@406))
)))
(assert (forall (($generated@@407 T@U) ($generated@@408 T@U) ($generated@@409 T@U) ($generated@@410 T@U) ) (!  (=> (and (and (and (= (type $generated@@407) ($generated@@303 $generated@@155 $generated@@155)) (= (type $generated@@408) $generated@@68)) (= (type $generated@@409) $generated@@68)) (= (type $generated@@410) ($generated@@80 $generated@@81 $generated@@82))) (= ($generated@@78 $generated@@407 ($generated@@404 $generated@@408 $generated@@409) $generated@@410) (forall (($generated@@411 T@U) ) (!  (=> (and (= (type $generated@@411) $generated@@155) ($generated@@0 ($generated@@85 ($generated@@301 $generated@@407) $generated@@411))) (and ($generated@@257 ($generated@@85 ($generated@@379 $generated@@407) $generated@@411) $generated@@409 $generated@@410) ($generated@@257 $generated@@411 $generated@@408 $generated@@410)))
 :pattern ( ($generated@@85 ($generated@@379 $generated@@407) $generated@@411))
 :pattern ( ($generated@@85 ($generated@@301 $generated@@407) $generated@@411))
))))
 :pattern ( ($generated@@78 $generated@@407 ($generated@@404 $generated@@408 $generated@@409) $generated@@410))
)))
(assert (forall (($generated@@413 T@T) ) (! (= (type ($generated@@412 $generated@@413)) ($generated@@80 $generated@@413 $generated@@4))
 :pattern ( ($generated@@412 $generated@@413))
)))
(assert (forall (($generated@@414 T@U) ) (! (let (($generated@@415 ($generated@@305 (type $generated@@414))))
(let (($generated@@416 ($generated@@304 (type $generated@@414))))
 (=> (= (type $generated@@414) ($generated@@303 $generated@@416 $generated@@415)) (= (= $generated@@414 ($generated@@302 $generated@@416 $generated@@415)) (= ($generated@@301 $generated@@414) ($generated@@412 $generated@@416))))))
 :pattern ( ($generated@@301 $generated@@414))
)))
(assert (forall (($generated@@417 T@U) ) (! (let (($generated@@418 ($generated@@305 (type $generated@@417))))
(let (($generated@@419 ($generated@@304 (type $generated@@417))))
 (=> (= (type $generated@@417) ($generated@@303 $generated@@419 $generated@@418)) (= (= $generated@@417 ($generated@@302 $generated@@419 $generated@@418)) (= ($generated@@342 $generated@@417) ($generated@@412 $generated@@418))))))
 :pattern ( ($generated@@342 $generated@@417))
)))
(assert (forall (($generated@@420 T@U) ) (! (let (($generated@@421 ($generated@@305 (type $generated@@420))))
(let (($generated@@422 ($generated@@304 (type $generated@@420))))
 (=> (= (type $generated@@420) ($generated@@303 $generated@@422 $generated@@421)) (= (= $generated@@420 ($generated@@302 $generated@@422 $generated@@421)) (= ($generated@@378 $generated@@420) ($generated@@412 $generated@@155))))))
 :pattern ( ($generated@@378 $generated@@420))
)))
(assert (forall (($generated@@423 T@U) ) (! (let (($generated@@424 ($generated@@287 (type $generated@@423))))
(let (($generated@@425 ($generated@@286 (type $generated@@423))))
 (=> (= (type $generated@@423) ($generated@@285 $generated@@425 $generated@@424)) (or (= $generated@@423 ($generated@@284 $generated@@425 $generated@@424)) (exists (($generated@@426 T@U) ($generated@@427 T@U) ) (!  (and (and (= (type $generated@@426) $generated@@155) (= (type $generated@@427) $generated@@155)) ($generated@@0 ($generated@@85 ($generated@@370 $generated@@423) ($generated@@272 ($generated@@230 $generated@@426 $generated@@427)))))
 :no-pattern (type $generated@@426)
 :no-pattern (type $generated@@427)
 :no-pattern ($generated $generated@@426)
 :no-pattern ($generated@@0 $generated@@426)
 :no-pattern ($generated $generated@@427)
 :no-pattern ($generated@@0 $generated@@427)
))))))
 :pattern ( ($generated@@370 $generated@@423))
)))
(assert (forall (($generated@@428 T@U) ) (! (let (($generated@@429 ($generated@@305 (type $generated@@428))))
(let (($generated@@430 ($generated@@304 (type $generated@@428))))
 (=> (= (type $generated@@428) ($generated@@303 $generated@@430 $generated@@429)) (or (= $generated@@428 ($generated@@302 $generated@@430 $generated@@429)) (exists (($generated@@431 T@U) ($generated@@432 T@U) ) (!  (and (and (= (type $generated@@431) $generated@@155) (= (type $generated@@432) $generated@@155)) ($generated@@0 ($generated@@85 ($generated@@378 $generated@@428) ($generated@@272 ($generated@@230 $generated@@431 $generated@@432)))))
 :no-pattern (type $generated@@431)
 :no-pattern (type $generated@@432)
 :no-pattern ($generated $generated@@431)
 :no-pattern ($generated@@0 $generated@@431)
 :no-pattern ($generated $generated@@432)
 :no-pattern ($generated@@0 $generated@@432)
))))))
 :pattern ( ($generated@@378 $generated@@428))
)))
(assert (forall (($generated@@433 T@U) ) (!  (=> (and (= (type $generated@@433) $generated@@155) ($generated@@231 $generated@@433 $generated@@46)) (and (= ($generated@@272 ($generated@@322 $generated@@2 $generated@@433)) $generated@@433) ($generated@@142 ($generated@@322 $generated@@2 $generated@@433) $generated@@46)))
 :pattern ( ($generated@@231 $generated@@433 $generated@@46))
)))
(assert (forall (($generated@@434 T@U) ) (!  (=> (and (= (type $generated@@434) $generated@@155) ($generated@@231 $generated@@434 $generated@@47)) (and (= ($generated@@272 ($generated@@322 $generated@@3 $generated@@434)) $generated@@434) ($generated@@142 ($generated@@322 $generated@@3 $generated@@434) $generated@@47)))
 :pattern ( ($generated@@231 $generated@@434 $generated@@47))
)))
(assert (forall (($generated@@435 T@U) ) (!  (=> (and (= (type $generated@@435) $generated@@155) ($generated@@231 $generated@@435 $generated@@44)) (and (= ($generated@@272 ($generated@@322 $generated@@4 $generated@@435)) $generated@@435) ($generated@@142 ($generated@@322 $generated@@4 $generated@@435) $generated@@44)))
 :pattern ( ($generated@@231 $generated@@435 $generated@@44))
)))
(assert (= ($generated@@1 $generated@@436) 20))
(assert (forall (($generated@@437 T@U) ) (!  (=> (and (= (type $generated@@437) $generated@@155) ($generated@@231 $generated@@437 $generated@@45)) (and (= ($generated@@272 ($generated@@322 $generated@@436 $generated@@437)) $generated@@437) ($generated@@142 ($generated@@322 $generated@@436 $generated@@437) $generated@@45)))
 :pattern ( ($generated@@231 $generated@@437 $generated@@45))
)))
(assert (forall (($generated@@438 T@U) ($generated@@439 T@U) ) (!  (=> (= (type $generated@@439) $generated@@68) (= ($generated@@231 ($generated@@272 $generated@@438) $generated@@439) ($generated@@142 $generated@@438 $generated@@439)))
 :pattern ( ($generated@@231 ($generated@@272 $generated@@438) $generated@@439))
)))
(assert (forall (($generated@@440 T@U) ) (! (let (($generated@@441 ($generated@@83 (type $generated@@440))))
 (=> (= (type $generated@@440) ($generated@@80 $generated@@441 $generated@@2)) (<= 0 ($generated@@277 $generated@@440))))
 :pattern ( ($generated@@277 $generated@@440))
)))
(assert (forall (($generated@@442 T@U) ) (! (let (($generated@@443 ($generated@@163 (type $generated@@442))))
 (=> (= (type $generated@@442) ($generated@@162 $generated@@443)) (<= 0 ($generated@@269 $generated@@442))))
 :pattern ( ($generated@@269 $generated@@442))
)))
(assert (forall (($generated@@445 T@U) ) (! (= (type ($generated@@444 $generated@@445)) $generated@@68)
 :pattern ( ($generated@@444 $generated@@445))
)))
(assert (forall (($generated@@446 T@U) ($generated@@447 T@U) ) (!  (=> (and (= (type $generated@@446) $generated@@68) (= (type $generated@@447) $generated@@68)) (= ($generated@@444 ($generated@@396 $generated@@446 $generated@@447)) $generated@@446))
 :pattern ( ($generated@@396 $generated@@446 $generated@@447))
)))
(assert (forall (($generated@@449 T@U) ) (! (= (type ($generated@@448 $generated@@449)) $generated@@68)
 :pattern ( ($generated@@448 $generated@@449))
)))
(assert (forall (($generated@@450 T@U) ($generated@@451 T@U) ) (!  (=> (and (= (type $generated@@450) $generated@@68) (= (type $generated@@451) $generated@@68)) (= ($generated@@448 ($generated@@396 $generated@@450 $generated@@451)) $generated@@451))
 :pattern ( ($generated@@396 $generated@@450 $generated@@451))
)))
(assert (forall (($generated@@452 T@U) ($generated@@453 T@U) ) (!  (=> (and (= (type $generated@@452) $generated@@68) (= (type $generated@@453) $generated@@68)) (= ($generated@@76 ($generated@@396 $generated@@452 $generated@@453)) $generated@@58))
 :pattern ( ($generated@@396 $generated@@452 $generated@@453))
)))
(assert (forall (($generated@@455 T@U) ) (! (= (type ($generated@@454 $generated@@455)) $generated@@68)
 :pattern ( ($generated@@454 $generated@@455))
)))
(assert (forall (($generated@@456 T@U) ($generated@@457 T@U) ) (!  (=> (and (= (type $generated@@456) $generated@@68) (= (type $generated@@457) $generated@@68)) (= ($generated@@454 ($generated@@404 $generated@@456 $generated@@457)) $generated@@456))
 :pattern ( ($generated@@404 $generated@@456 $generated@@457))
)))
(assert (forall (($generated@@459 T@U) ) (! (= (type ($generated@@458 $generated@@459)) $generated@@68)
 :pattern ( ($generated@@458 $generated@@459))
)))
(assert (forall (($generated@@460 T@U) ($generated@@461 T@U) ) (!  (=> (and (= (type $generated@@460) $generated@@68) (= (type $generated@@461) $generated@@68)) (= ($generated@@458 ($generated@@404 $generated@@460 $generated@@461)) $generated@@461))
 :pattern ( ($generated@@404 $generated@@460 $generated@@461))
)))
(assert (forall (($generated@@462 T@U) ($generated@@463 T@U) ) (!  (=> (and (= (type $generated@@462) $generated@@68) (= (type $generated@@463) $generated@@68)) (= ($generated@@76 ($generated@@404 $generated@@462 $generated@@463)) $generated@@59))
 :pattern ( ($generated@@404 $generated@@462 $generated@@463))
)))
(assert (forall (($generated@@464 T@U) ($generated@@465 T@U) ) (!  (=> (and (= (type $generated@@464) $generated@@155) (= (type $generated@@465) $generated@@155)) (= ($generated@@263 ($generated@@230 $generated@@464 $generated@@465)) $generated@@62))
 :pattern ( ($generated@@230 $generated@@464 $generated@@465))
)))
(assert (forall (($generated@@467 T@U) ) (! (= (type ($generated@@466 $generated@@467)) $generated@@68)
 :pattern ( ($generated@@466 $generated@@467))
)))
(assert (forall (($generated@@468 T@U) ($generated@@469 T@U) ) (!  (=> (and (= (type $generated@@468) $generated@@68) (= (type $generated@@469) $generated@@68)) (= ($generated@@466 ($generated@@145 $generated@@468 $generated@@469)) $generated@@468))
 :pattern ( ($generated@@145 $generated@@468 $generated@@469))
)))
(assert (forall (($generated@@471 T@U) ) (! (= (type ($generated@@470 $generated@@471)) $generated@@68)
 :pattern ( ($generated@@470 $generated@@471))
)))
(assert (forall (($generated@@472 T@U) ($generated@@473 T@U) ) (!  (=> (and (= (type $generated@@472) $generated@@68) (= (type $generated@@473) $generated@@68)) (= ($generated@@470 ($generated@@145 $generated@@472 $generated@@473)) $generated@@473))
 :pattern ( ($generated@@145 $generated@@472 $generated@@473))
)))
(assert (forall (($generated@@474 T@U) ($generated@@475 T@U) ) (!  (=> (and (= (type $generated@@474) $generated@@155) (= (type $generated@@475) $generated@@155)) (= ($generated@@153 ($generated@@230 $generated@@474 $generated@@475)) $generated@@474))
 :pattern ( ($generated@@230 $generated@@474 $generated@@475))
)))
(assert (forall (($generated@@476 T@U) ($generated@@477 T@U) ) (!  (=> (and (= (type $generated@@476) $generated@@155) (= (type $generated@@477) $generated@@155)) (= ($generated@@154 ($generated@@230 $generated@@476 $generated@@477)) $generated@@477))
 :pattern ( ($generated@@230 $generated@@476 $generated@@477))
)))
(assert (forall (($generated@@479 T@U) ) (! (= (type ($generated@@478 $generated@@479)) $generated@@68)
 :pattern ( ($generated@@478 $generated@@479))
)))
(assert (forall (($generated@@480 T@U) ($generated@@481 T@U) ($generated@@482 T@U) ) (!  (=> (and (and (= (type $generated@@480) ($generated@@162 $generated@@155)) (= (type $generated@@481) $generated@@68)) (= (type $generated@@482) ($generated@@80 $generated@@81 $generated@@82))) (= ($generated@@78 $generated@@480 ($generated@@478 $generated@@481) $generated@@482) (forall (($generated@@483 Int) ) (!  (=> (and (<= 0 $generated@@483) (< $generated@@483 ($generated@@269 $generated@@480))) ($generated@@257 ($generated@@352 $generated@@480 $generated@@483) $generated@@481 $generated@@482))
 :pattern ( ($generated@@352 $generated@@480 $generated@@483))
))))
 :pattern ( ($generated@@78 $generated@@480 ($generated@@478 $generated@@481) $generated@@482))
)))
(assert (forall (($generated@@485 Int) ) (! (= ($generated@@484 ($generated@@79 $generated@@485)) $generated@@485)
 :pattern ( ($generated@@79 $generated@@485))
)))
(assert (forall (($generated@@487 T@U) ) (! (= (type ($generated@@486 $generated@@487)) $generated@@68)
 :pattern ( ($generated@@486 $generated@@487))
)))
(assert (forall (($generated@@488 T@U) ) (!  (=> (= (type $generated@@488) $generated@@68) (= ($generated@@486 ($generated@@240 $generated@@488)) $generated@@488))
 :pattern ( ($generated@@240 $generated@@488))
)))
(assert (forall (($generated@@489 T@U) ) (!  (=> (= (type $generated@@489) $generated@@68) (= ($generated@@76 ($generated@@240 $generated@@489)) $generated@@54))
 :pattern ( ($generated@@240 $generated@@489))
)))
(assert (forall (($generated@@491 T@U) ) (! (= (type ($generated@@490 $generated@@491)) $generated@@68)
 :pattern ( ($generated@@490 $generated@@491))
)))
(assert (forall (($generated@@492 T@U) ) (!  (=> (= (type $generated@@492) $generated@@68) (= ($generated@@490 ($generated@@245 $generated@@492)) $generated@@492))
 :pattern ( ($generated@@245 $generated@@492))
)))
(assert (forall (($generated@@493 T@U) ) (!  (=> (= (type $generated@@493) $generated@@68) (= ($generated@@76 ($generated@@245 $generated@@493)) $generated@@55))
 :pattern ( ($generated@@245 $generated@@493))
)))
(assert (forall (($generated@@495 T@U) ) (! (= (type ($generated@@494 $generated@@495)) $generated@@68)
 :pattern ( ($generated@@494 $generated@@495))
)))
(assert (forall (($generated@@496 T@U) ) (!  (=> (= (type $generated@@496) $generated@@68) (= ($generated@@494 ($generated@@169 $generated@@496)) $generated@@496))
 :pattern ( ($generated@@169 $generated@@496))
)))
(assert (forall (($generated@@497 T@U) ) (!  (=> (= (type $generated@@497) $generated@@68) (= ($generated@@76 ($generated@@169 $generated@@497)) $generated@@56))
 :pattern ( ($generated@@169 $generated@@497))
)))
(assert (forall (($generated@@499 T@U) ) (! (= (type ($generated@@498 $generated@@499)) $generated@@68)
 :pattern ( ($generated@@498 $generated@@499))
)))
(assert (forall (($generated@@500 T@U) ) (!  (=> (= (type $generated@@500) $generated@@68) (= ($generated@@498 ($generated@@478 $generated@@500)) $generated@@500))
 :pattern ( ($generated@@478 $generated@@500))
)))
(assert (forall (($generated@@501 T@U) ) (!  (=> (= (type $generated@@501) $generated@@68) (= ($generated@@76 ($generated@@478 $generated@@501)) $generated@@57))
 :pattern ( ($generated@@478 $generated@@501))
)))
(assert (forall (($generated@@502 T@U) ) (! (let (($generated@@503 (type $generated@@502)))
(= ($generated@@322 $generated@@503 ($generated@@272 $generated@@502)) $generated@@502))
 :pattern ( ($generated@@272 $generated@@502))
)))
(assert (forall (($generated@@504 T@U) ($generated@@505 T@U) ($generated@@506 T@U) ) (!  (=> (and (and (= (type $generated@@504) ($generated@@285 $generated@@155 $generated@@155)) (= (type $generated@@505) $generated@@68)) (= (type $generated@@506) $generated@@68)) (= ($generated@@142 $generated@@504 ($generated@@396 $generated@@505 $generated@@506)) (forall (($generated@@507 T@U) ) (!  (=> (and (= (type $generated@@507) $generated@@155) ($generated@@0 ($generated@@85 ($generated@@283 $generated@@504) $generated@@507))) (and ($generated@@231 ($generated@@85 ($generated@@371 $generated@@504) $generated@@507) $generated@@506) ($generated@@231 $generated@@507 $generated@@505)))
 :pattern ( ($generated@@85 ($generated@@371 $generated@@504) $generated@@507))
 :pattern ( ($generated@@85 ($generated@@283 $generated@@504) $generated@@507))
))))
 :pattern ( ($generated@@142 $generated@@504 ($generated@@396 $generated@@505 $generated@@506)))
)))
(assert (forall (($generated@@508 T@U) ($generated@@509 T@U) ($generated@@510 T@U) ) (!  (=> (and (and (= (type $generated@@508) ($generated@@303 $generated@@155 $generated@@155)) (= (type $generated@@509) $generated@@68)) (= (type $generated@@510) $generated@@68)) (= ($generated@@142 $generated@@508 ($generated@@404 $generated@@509 $generated@@510)) (forall (($generated@@511 T@U) ) (!  (=> (and (= (type $generated@@511) $generated@@155) ($generated@@0 ($generated@@85 ($generated@@301 $generated@@508) $generated@@511))) (and ($generated@@231 ($generated@@85 ($generated@@379 $generated@@508) $generated@@511) $generated@@510) ($generated@@231 $generated@@511 $generated@@509)))
 :pattern ( ($generated@@85 ($generated@@379 $generated@@508) $generated@@511))
 :pattern ( ($generated@@85 ($generated@@301 $generated@@508) $generated@@511))
))))
 :pattern ( ($generated@@142 $generated@@508 ($generated@@404 $generated@@509 $generated@@510)))
)))
(assert (forall (($generated@@514 T@U) ($generated@@515 T@U) ) (!  (=> (and (= (type $generated@@514) $generated@@155) (= (type $generated@@515) $generated@@155)) (< ($generated@@512 $generated@@514) ($generated@@513 ($generated@@230 $generated@@514 $generated@@515))))
 :pattern ( ($generated@@230 $generated@@514 $generated@@515))
)))
(assert (forall (($generated@@516 T@U) ($generated@@517 T@U) ) (!  (=> (and (= (type $generated@@516) $generated@@155) (= (type $generated@@517) $generated@@155)) (< ($generated@@512 $generated@@517) ($generated@@513 ($generated@@230 $generated@@516 $generated@@517))))
 :pattern ( ($generated@@230 $generated@@516 $generated@@517))
)))
(assert (forall (($generated@@518 T@U) ($generated@@519 T@U) ($generated@@520 T@U) ) (!  (=> (and (and (and (= (type $generated@@518) $generated@@155) (= (type $generated@@519) $generated@@68)) (= (type $generated@@520) $generated@@68)) ($generated@@231 $generated@@518 ($generated@@396 $generated@@519 $generated@@520))) (and (= ($generated@@272 ($generated@@322 ($generated@@285 $generated@@155 $generated@@155) $generated@@518)) $generated@@518) ($generated@@142 ($generated@@322 ($generated@@285 $generated@@155 $generated@@155) $generated@@518) ($generated@@396 $generated@@519 $generated@@520))))
 :pattern ( ($generated@@231 $generated@@518 ($generated@@396 $generated@@519 $generated@@520)))
)))
(assert (forall (($generated@@521 T@U) ($generated@@522 T@U) ($generated@@523 T@U) ) (!  (=> (and (and (and (= (type $generated@@521) $generated@@155) (= (type $generated@@522) $generated@@68)) (= (type $generated@@523) $generated@@68)) ($generated@@231 $generated@@521 ($generated@@404 $generated@@522 $generated@@523))) (and (= ($generated@@272 ($generated@@322 ($generated@@303 $generated@@155 $generated@@155) $generated@@521)) $generated@@521) ($generated@@142 ($generated@@322 ($generated@@303 $generated@@155 $generated@@155) $generated@@521) ($generated@@404 $generated@@522 $generated@@523))))
 :pattern ( ($generated@@231 $generated@@521 ($generated@@404 $generated@@522 $generated@@523)))
)))
(assert (forall (($generated@@524 T@U) ($generated@@525 T@U) ($generated@@526 T@U) ) (!  (=> (and (and (and (= (type $generated@@524) $generated@@68) (= (type $generated@@525) $generated@@68)) (= (type $generated@@526) $generated@@155)) ($generated@@231 $generated@@526 ($generated@@145 $generated@@524 $generated@@525))) (and (= ($generated@@272 ($generated@@322 $generated@@146 $generated@@526)) $generated@@526) ($generated@@142 ($generated@@322 $generated@@146 $generated@@526) ($generated@@145 $generated@@524 $generated@@525))))
 :pattern ( ($generated@@231 $generated@@526 ($generated@@145 $generated@@524 $generated@@525)))
)))
(assert (forall (($generated@@527 T@U) ) (! (let (($generated@@528 (type $generated@@527)))
 (not ($generated@@0 ($generated@@85 ($generated@@412 $generated@@528) $generated@@527))))
 :pattern ( (let (($generated@@528 (type $generated@@527)))
($generated@@85 ($generated@@412 $generated@@528) $generated@@527)))
)))
(assert (forall (($generated@@530 T@U) ) (! (= (type ($generated@@529 $generated@@530)) $generated@@73)
 :pattern ( ($generated@@529 $generated@@530))
)))
(assert (forall (($generated@@531 T@U) ($generated@@532 T@U) ) (!  (=> (and (= (type $generated@@531) $generated@@68) (= (type $generated@@532) $generated@@68)) (and (= ($generated@@76 ($generated@@145 $generated@@531 $generated@@532)) $generated@@63) (= ($generated@@529 ($generated@@145 $generated@@531 $generated@@532)) $generated@@66)))
 :pattern ( ($generated@@145 $generated@@531 $generated@@532))
)))
(assert (forall (($generated@@533 T@U) ) (!  (=> (= (type $generated@@533) $generated@@146) (= ($generated@@512 ($generated@@272 $generated@@533)) ($generated@@513 $generated@@533)))
 :pattern ( ($generated@@512 ($generated@@272 $generated@@533)))
)))
(assert (forall (($generated@@534 T@U) ) (!  (=> (and (= (type $generated@@534) $generated@@155) ($generated@@231 $generated@@534 ($generated@@79 0))) (and (= ($generated@@272 ($generated@@322 $generated@@2 $generated@@534)) $generated@@534) ($generated@@142 ($generated@@322 ($generated@@80 $generated@@155 $generated@@4) $generated@@534) ($generated@@79 0))))
 :pattern ( ($generated@@231 $generated@@534 ($generated@@79 0)))
)))
(assert (forall (($generated@@535 T@U) ($generated@@536 T@U) ) (!  (=> (and (and (= (type $generated@@535) $generated@@155) (= (type $generated@@536) $generated@@68)) ($generated@@231 $generated@@535 ($generated@@240 $generated@@536))) (and (= ($generated@@272 ($generated@@322 ($generated@@80 $generated@@155 $generated@@4) $generated@@535)) $generated@@535) ($generated@@142 ($generated@@322 ($generated@@80 $generated@@155 $generated@@4) $generated@@535) ($generated@@240 $generated@@536))))
 :pattern ( ($generated@@231 $generated@@535 ($generated@@240 $generated@@536)))
)))
(assert (forall (($generated@@537 T@U) ($generated@@538 T@U) ) (!  (=> (and (and (= (type $generated@@537) $generated@@155) (= (type $generated@@538) $generated@@68)) ($generated@@231 $generated@@537 ($generated@@245 $generated@@538))) (and (= ($generated@@272 ($generated@@322 ($generated@@80 $generated@@155 $generated@@4) $generated@@537)) $generated@@537) ($generated@@142 ($generated@@322 ($generated@@80 $generated@@155 $generated@@4) $generated@@537) ($generated@@245 $generated@@538))))
 :pattern ( ($generated@@231 $generated@@537 ($generated@@245 $generated@@538)))
)))
(assert (forall (($generated@@539 T@U) ($generated@@540 T@U) ) (!  (=> (and (and (= (type $generated@@539) $generated@@155) (= (type $generated@@540) $generated@@68)) ($generated@@231 $generated@@539 ($generated@@169 $generated@@540))) (and (= ($generated@@272 ($generated@@322 ($generated@@80 $generated@@155 $generated@@2) $generated@@539)) $generated@@539) ($generated@@142 ($generated@@322 ($generated@@80 $generated@@155 $generated@@2) $generated@@539) ($generated@@169 $generated@@540))))
 :pattern ( ($generated@@231 $generated@@539 ($generated@@169 $generated@@540)))
)))
(assert (forall (($generated@@541 T@U) ($generated@@542 T@U) ) (!  (=> (and (and (= (type $generated@@541) $generated@@155) (= (type $generated@@542) $generated@@68)) ($generated@@231 $generated@@541 ($generated@@478 $generated@@542))) (and (= ($generated@@272 ($generated@@322 ($generated@@162 $generated@@155) $generated@@541)) $generated@@541) ($generated@@142 ($generated@@322 ($generated@@162 $generated@@155) $generated@@541) ($generated@@478 $generated@@542))))
 :pattern ( ($generated@@231 $generated@@541 ($generated@@478 $generated@@542)))
)))
(assert (= ($generated@@76 $generated@@136) $generated@@61))
(assert (= ($generated@@529 $generated@@136) $generated@@65))
(assert (= ($generated@@76 $generated@@139) $generated@@64))
(assert (= ($generated@@529 $generated@@139) $generated@@67))
(assert (forall (($generated@@543 T@U) ($generated@@544 T@U) ($generated@@545 T@U) ) (!  (=> (and (and (= (type $generated@@543) ($generated@@80 $generated@@155 $generated@@2)) (= (type $generated@@544) $generated@@68)) (= (type $generated@@545) ($generated@@80 $generated@@81 $generated@@82))) (= ($generated@@78 $generated@@543 ($generated@@169 $generated@@544) $generated@@545) (forall (($generated@@546 T@U) ) (!  (=> (and (= (type $generated@@546) $generated@@155) (< 0 ($generated ($generated@@85 $generated@@543 $generated@@546)))) ($generated@@257 $generated@@546 $generated@@544 $generated@@545))
 :pattern ( ($generated@@85 $generated@@543 $generated@@546))
))))
 :pattern ( ($generated@@78 $generated@@543 ($generated@@169 $generated@@544) $generated@@545))
)))
(assert (forall (($generated@@547 T@U) ($generated@@548 T@U) ($generated@@549 T@U) ) (!  (=> (and (and (and (= (type $generated@@547) $generated@@146) (= (type $generated@@548) $generated@@68)) (= (type $generated@@549) ($generated@@80 $generated@@81 $generated@@82))) (and ($generated@@256 $generated@@549) (and ($generated@@144 $generated@@547) (exists (($generated@@550 T@U) ) (!  (and (= (type $generated@@550) $generated@@68) ($generated@@78 $generated@@547 ($generated@@145 $generated@@548 $generated@@550) $generated@@549))
 :pattern ( ($generated@@78 $generated@@547 ($generated@@145 $generated@@548 $generated@@550) $generated@@549))
))))) ($generated@@257 ($generated@@153 $generated@@547) $generated@@548 $generated@@549))
 :pattern ( ($generated@@257 ($generated@@153 $generated@@547) $generated@@548 $generated@@549))
)))
(assert (forall (($generated@@551 T@U) ($generated@@552 T@U) ($generated@@553 T@U) ) (!  (=> (and (and (and (= (type $generated@@551) $generated@@146) (= (type $generated@@552) $generated@@68)) (= (type $generated@@553) ($generated@@80 $generated@@81 $generated@@82))) (and ($generated@@256 $generated@@553) (and ($generated@@144 $generated@@551) (exists (($generated@@554 T@U) ) (!  (and (= (type $generated@@554) $generated@@68) ($generated@@78 $generated@@551 ($generated@@145 $generated@@554 $generated@@552) $generated@@553))
 :pattern ( ($generated@@78 $generated@@551 ($generated@@145 $generated@@554 $generated@@552) $generated@@553))
))))) ($generated@@257 ($generated@@154 $generated@@551) $generated@@552 $generated@@553))
 :pattern ( ($generated@@257 ($generated@@154 $generated@@551) $generated@@552 $generated@@553))
)))
(assert (forall (($generated@@555 T@U) ) (!  (=> (= (type $generated@@555) $generated@@2) (= ($generated@@142 $generated@@555 $generated@@139)  (and (<= ($generated@@250 0) ($generated $generated@@555)) (< ($generated $generated@@555) 256))))
 :pattern ( ($generated@@142 $generated@@555 $generated@@139))
)))
(assert (forall (($generated@@556 T@U) ($generated@@557 T@U) ) (!  (=> (and (= (type $generated@@556) $generated@@155) (= (type $generated@@557) $generated@@155)) (= ($generated@@230 ($generated@@252 $generated@@556) ($generated@@252 $generated@@557)) ($generated@@252 ($generated@@230 $generated@@556 $generated@@557))))
 :pattern ( ($generated@@230 ($generated@@252 $generated@@556) ($generated@@252 $generated@@557)))
)))
(assert (forall (($generated@@558 Int) ) (! (= ($generated@@272 ($generated@@8 ($generated@@250 $generated@@558))) ($generated@@252 ($generated@@272 ($generated@@8 $generated@@558))))
 :pattern ( ($generated@@272 ($generated@@8 ($generated@@250 $generated@@558))))
)))
(assert (forall (($generated@@559 T@U) ) (! (= ($generated@@272 ($generated@@252 $generated@@559)) ($generated@@252 ($generated@@272 $generated@@559)))
 :pattern ( ($generated@@272 ($generated@@252 $generated@@559)))
)))
(assert (forall (($generated@@560 T@U) ) (! (let (($generated@@561 ($generated@@163 (type $generated@@560))))
 (=> (and (= (type $generated@@560) ($generated@@162 $generated@@561)) (= ($generated@@269 $generated@@560) 0)) (= $generated@@560 ($generated@@161 $generated@@561))))
 :pattern ( ($generated@@269 $generated@@560))
)))
(assert (forall (($generated@@562 T@U) ($generated@@563 T@U) ($generated@@564 T@U) ) (! (let (($generated@@565 (type $generated@@563)))
 (=> (and (and (= (type $generated@@562) ($generated@@80 $generated@@565 $generated@@2)) (= (type $generated@@564) $generated@@2)) (<= 0 ($generated $generated@@564))) (= ($generated@@277 ($generated@@86 $generated@@562 $generated@@563 $generated@@564)) (+ (- ($generated@@277 $generated@@562) ($generated ($generated@@85 $generated@@562 $generated@@563))) ($generated $generated@@564)))))
 :pattern ( ($generated@@277 ($generated@@86 $generated@@562 $generated@@563 $generated@@564)))
)))
(assert (forall (($generated@@566 T@U) ($generated@@567 T@U) ) (!  (=> (and (= (type $generated@@566) ($generated@@80 $generated@@81 $generated@@82)) (= (type $generated@@567) $generated@@2)) ($generated@@78 $generated@@567 $generated@@46 $generated@@566))
 :pattern ( ($generated@@78 $generated@@567 $generated@@46 $generated@@566))
)))
(assert (forall (($generated@@568 T@U) ($generated@@569 T@U) ) (!  (=> (and (= (type $generated@@568) ($generated@@80 $generated@@81 $generated@@82)) (= (type $generated@@569) $generated@@3)) ($generated@@78 $generated@@569 $generated@@47 $generated@@568))
 :pattern ( ($generated@@78 $generated@@569 $generated@@47 $generated@@568))
)))
(assert (forall (($generated@@570 T@U) ($generated@@571 T@U) ) (!  (=> (and (= (type $generated@@570) ($generated@@80 $generated@@81 $generated@@82)) (= (type $generated@@571) $generated@@4)) ($generated@@78 $generated@@571 $generated@@44 $generated@@570))
 :pattern ( ($generated@@78 $generated@@571 $generated@@44 $generated@@570))
)))
(assert (forall (($generated@@572 T@U) ($generated@@573 T@U) ) (!  (=> (and (= (type $generated@@572) ($generated@@80 $generated@@81 $generated@@82)) (= (type $generated@@573) $generated@@436)) ($generated@@78 $generated@@573 $generated@@45 $generated@@572))
 :pattern ( ($generated@@78 $generated@@573 $generated@@45 $generated@@572))
)))
(assert (forall (($generated@@574 T@U) ($generated@@575 T@U) ) (!  (=> (and (= (type $generated@@574) ($generated@@80 $generated@@81 $generated@@82)) (= (type $generated@@575) $generated@@155)) ($generated@@78 $generated@@575 $generated@@48 $generated@@574))
 :pattern ( ($generated@@78 $generated@@575 $generated@@48 $generated@@574))
)))
(assert (forall (($generated@@576 T@U) ($generated@@577 T@U) ) (!  (=> (and (= (type $generated@@576) ($generated@@162 $generated@@155)) (= (type $generated@@577) $generated@@68)) (= ($generated@@142 $generated@@576 ($generated@@478 $generated@@577)) (forall (($generated@@578 Int) ) (!  (=> (and (<= 0 $generated@@578) (< $generated@@578 ($generated@@269 $generated@@576))) ($generated@@231 ($generated@@352 $generated@@576 $generated@@578) $generated@@577))
 :pattern ( ($generated@@352 $generated@@576 $generated@@578))
))))
 :pattern ( ($generated@@142 $generated@@576 ($generated@@478 $generated@@577)))
)))
(assert (forall (($generated@@580 T@U) ($generated@@581 Int) ) (!  (=> (= (type $generated@@580) ($generated@@162 $generated@@155)) (=> (and (<= 0 $generated@@581) (< $generated@@581 ($generated@@269 $generated@@580))) (< ($generated@@513 ($generated@@322 $generated@@146 ($generated@@352 $generated@@580 $generated@@581))) ($generated@@579 $generated@@580))))
 :pattern ( ($generated@@513 ($generated@@322 $generated@@146 ($generated@@352 $generated@@580 $generated@@581))))
)))
(assert (forall (($generated@@582 T@U) ($generated@@583 T@U) ($generated@@584 T@U) ) (!  (=> (and (and (and (= (type $generated@@582) ($generated@@285 $generated@@155 $generated@@155)) (= (type $generated@@583) $generated@@68)) (= (type $generated@@584) $generated@@68)) ($generated@@142 $generated@@582 ($generated@@396 $generated@@583 $generated@@584))) (and (and ($generated@@142 ($generated@@283 $generated@@582) ($generated@@240 $generated@@583)) ($generated@@142 ($generated@@331 $generated@@582) ($generated@@240 $generated@@584))) ($generated@@142 ($generated@@370 $generated@@582) ($generated@@240 ($generated@@145 $generated@@583 $generated@@584)))))
 :pattern ( ($generated@@142 $generated@@582 ($generated@@396 $generated@@583 $generated@@584)))
)))
(assert (forall (($generated@@585 T@U) ($generated@@586 T@U) ($generated@@587 T@U) ) (!  (=> (and (and (and (= (type $generated@@585) ($generated@@303 $generated@@155 $generated@@155)) (= (type $generated@@586) $generated@@68)) (= (type $generated@@587) $generated@@68)) ($generated@@142 $generated@@585 ($generated@@404 $generated@@586 $generated@@587))) (and (and ($generated@@142 ($generated@@301 $generated@@585) ($generated@@245 $generated@@586)) ($generated@@142 ($generated@@342 $generated@@585) ($generated@@245 $generated@@587))) ($generated@@142 ($generated@@378 $generated@@585) ($generated@@245 ($generated@@145 $generated@@586 $generated@@587)))))
 :pattern ( ($generated@@142 $generated@@585 ($generated@@404 $generated@@586 $generated@@587)))
)))
(assert (forall (($generated@@588 T@U) ) (!  (=> (= (type $generated@@588) $generated@@2) ($generated@@142 $generated@@588 $generated@@46))
 :pattern ( ($generated@@142 $generated@@588 $generated@@46))
)))
(assert (forall (($generated@@589 T@U) ) (!  (=> (= (type $generated@@589) $generated@@3) ($generated@@142 $generated@@589 $generated@@47))
 :pattern ( ($generated@@142 $generated@@589 $generated@@47))
)))
(assert (forall (($generated@@590 T@U) ) (!  (=> (= (type $generated@@590) $generated@@4) ($generated@@142 $generated@@590 $generated@@44))
 :pattern ( ($generated@@142 $generated@@590 $generated@@44))
)))
(assert (forall (($generated@@591 T@U) ) (!  (=> (= (type $generated@@591) $generated@@436) ($generated@@142 $generated@@591 $generated@@45))
 :pattern ( ($generated@@142 $generated@@591 $generated@@45))
)))
(assert (forall (($generated@@592 T@U) ) (!  (=> (= (type $generated@@592) $generated@@155) ($generated@@142 $generated@@592 $generated@@48))
 :pattern ( ($generated@@142 $generated@@592 $generated@@48))
)))
(push 1)
(declare-fun ControlFlow (Int Int) Int)
(declare-fun $generated@@593 () T@U)
(declare-fun $generated@@594 () T@U)
(declare-fun $generated@@595 () T@U)
(declare-fun $generated@@596 () T@U)
(declare-fun $generated@@597 () Int)
(declare-fun $generated@@598 () Int)
(declare-fun $generated@@599 () T@U)
(declare-fun $generated@@600 () T@U)
(declare-fun $generated@@601 () T@U)
(declare-fun $generated@@602 (T@U) Bool)
(declare-fun $generated@@603 () T@U)
(declare-fun $generated@@604 () Int)
(declare-fun $generated@@605 () Int)
(declare-fun $generated@@606 () T@U)
(declare-fun $generated@@607 () T@U)
(declare-fun $generated@@608 () Int)
(assert  (and (and (and (and (and (and (and (and (and (= (type $generated@@593) ($generated@@176 $generated@@81 $generated@@4)) (= (type $generated@@594) $generated@@81)) (= (type $generated@@595) ($generated@@80 $generated@@81 $generated@@82))) (= (type $generated@@596) ($generated@@162 $generated@@155))) (= (type $generated@@599) $generated@@68)) (= (type $generated@@600) $generated@@155)) (= (type $generated@@601) ($generated@@80 $generated@@81 $generated@@82))) (= (type $generated@@603) ($generated@@162 $generated@@155))) (= (type $generated@@606) $generated@@155)) (= (type $generated@@607) ($generated@@80 $generated@@81 $generated@@82))))
(set-option :timeout 0)
(set-option :rlimit 0)
(assert (not
 (=> (= (ControlFlow 0 0) 14) (let (($generated@@609  (=> (= $generated@@593 ($generated@@175 $generated@@594 $generated@@595 $generated@@60 false)) (and (=> (= (ControlFlow 0 2) (- 0 13)) (and (<= 0 ($generated@@250 0)) (< ($generated@@250 0) ($generated@@269 $generated@@596)))) (=> (and (<= 0 ($generated@@250 0)) (< ($generated@@250 0) ($generated@@269 $generated@@596))) (=> (= $generated@@597 ($generated ($generated@@322 $generated@@2 ($generated@@352 $generated@@596 ($generated@@250 0))))) (and (=> (= (ControlFlow 0 2) (- 0 12)) ($generated@@142 ($generated@@8 ($generated@@250 0)) $generated@@136)) (=> ($generated@@142 ($generated@@8 ($generated@@250 0)) $generated@@136) (=> (= $generated@@598 ($generated@@250 0)) (=> (and (= $generated@@599 $generated@@139) (= $generated@@600 ($generated@@272 ($generated@@8 $generated@@597)))) (and (=> (= (ControlFlow 0 2) (- 0 11)) (< $generated@@598 ($generated@@269 $generated@@596))) (=> (< $generated@@598 ($generated@@269 $generated@@596)) (and (=> (= (ControlFlow 0 2) (- 0 10)) (= $generated@@600 ($generated@@352 $generated@@596 $generated@@598))) (=> (= $generated@@600 ($generated@@352 $generated@@596 $generated@@598)) (=> (and (and ($generated@@256 $generated@@601) ($generated@@602 $generated@@601)) (and ($generated@@160 $generated@@596 $generated@@600) (= $generated@@595 $generated@@601))) (and (=> (= (ControlFlow 0 2) (- 0 9)) (and (<= 0 ($generated@@250 0)) (< ($generated@@250 0) ($generated@@269 $generated@@603)))) (=> (and (<= 0 ($generated@@250 0)) (< ($generated@@250 0) ($generated@@269 $generated@@603))) (=> (= $generated@@604 ($generated ($generated@@322 $generated@@2 ($generated@@352 $generated@@603 ($generated@@250 0))))) (and (=> (= (ControlFlow 0 2) (- 0 8)) ($generated@@142 ($generated@@8 ($generated@@250 0)) $generated@@136)) (=> ($generated@@142 ($generated@@8 ($generated@@250 0)) $generated@@136) (=> (and (= $generated@@605 ($generated@@250 0)) (= $generated@@606 ($generated@@272 ($generated@@8 $generated@@604)))) (and (=> (= (ControlFlow 0 2) (- 0 7)) (< $generated@@605 ($generated@@269 $generated@@603))) (=> (< $generated@@605 ($generated@@269 $generated@@603)) (and (=> (= (ControlFlow 0 2) (- 0 6)) (= $generated@@606 ($generated@@352 $generated@@603 $generated@@605))) (=> (= $generated@@606 ($generated@@352 $generated@@603 $generated@@605)) (=> (and (and ($generated@@256 $generated@@607) ($generated@@602 $generated@@607)) (and ($generated@@160 $generated@@603 $generated@@606) (= $generated@@601 $generated@@607))) (and (=> (= (ControlFlow 0 2) (- 0 5)) (and (<= 0 ($generated@@250 0)) (< ($generated@@250 0) ($generated@@269 $generated@@596)))) (and (=> (= (ControlFlow 0 2) (- 0 4)) ($generated@@160 $generated@@596 ($generated@@352 $generated@@596 ($generated@@250 0)))) (=> ($generated@@160 $generated@@596 ($generated@@352 $generated@@596 ($generated@@250 0))) (and (=> (= (ControlFlow 0 2) (- 0 3)) (and (<= 0 ($generated@@250 0)) (< ($generated@@250 0) ($generated@@269 $generated@@603)))) (=> (= (ControlFlow 0 2) (- 0 1)) ($generated@@160 $generated@@603 ($generated@@352 $generated@@603 ($generated@@250 0))))))))))))))))))))))))))))))))))
(let (($generated@@610  (=> (and ($generated@@256 $generated@@595) ($generated@@602 $generated@@595)) (=> (and (and (and ($generated@@142 $generated@@596 ($generated@@478 $generated@@139)) ($generated@@78 $generated@@596 ($generated@@478 $generated@@139) $generated@@595)) (and ($generated@@142 $generated@@603 ($generated@@478 $generated@@46)) ($generated@@78 $generated@@603 ($generated@@478 $generated@@46) $generated@@595))) (and (and (= 2 $generated@@608) (= ($generated@@269 $generated@@596) ($generated@@250 1))) (and (= ($generated@@269 $generated@@603) ($generated@@250 1)) (= (ControlFlow 0 14) 2)))) $generated@@609))))
$generated@@610)))
))
(check-sat)
(pop 1)
; Valid
(get-info :rlimit)
(reset)
(set-option :rlimit 0)
; did a full reset
(reset)
(set-option :print-success false)
(set-info :smt-lib-version 2.6)
(set-option :auto_config false)
(set-option :type_check true)
(set-option :smt.case_split 3)
(set-option :smt.qi.eager_threshold 100)
(set-option :smt.delay_units true)
(set-option :smt.arith.solver 2)
(set-option :smt.mbqi false)
(set-option :model.compact false)
(set-option :model.v2 true)
(set-option :pp.bv_literals false)
; done setting options


(set-info :category "industrial")
(declare-sort |T@U| 0)
(declare-sort |T@T| 0)
(declare-fun real_pow (Real Real) Real)
(declare-fun UOrdering2 (|T@U| |T@U|) Bool)
(declare-fun UOrdering3 (|T@T| |T@U| |T@U|) Bool)
(declare-fun tickleBool (Bool) Bool)
(assert (and (tickleBool true) (tickleBool false)))
(declare-fun $generated (T@U) Int)
(declare-fun $generated@@0 (T@U) Bool)
(declare-fun $generated@@1 (T@T) Int)
(declare-fun $generated@@2 () T@T)
(declare-fun $generated@@3 () T@T)
(declare-fun $generated@@4 () T@T)
(declare-fun $generated@@5 () T@T)
(declare-fun $generated@@6 () T@T)
(declare-fun $generated@@7 () T@T)
(declare-fun $generated@@8 (Int) T@U)
(declare-fun type (T@U) T@T)
(declare-fun $generated@@9 (Real) T@U)
(declare-fun $generated@@10 (T@U) Real)
(declare-fun $generated@@11 (Bool) T@U)
(declare-fun $generated@@12 (RoundingMode) T@U)
(declare-fun $generated@@13 (T@U) RoundingMode)
(declare-fun $generated@@14 (String) T@U)
(declare-fun $generated@@15 (T@U) String)
(declare-fun $generated@@16 ((RegEx String)) T@U)
(declare-fun $generated@@17 (T@U) (RegEx String))
(declare-fun $generated@@44 () T@U)
(declare-fun $generated@@45 () T@U)
(declare-fun $generated@@46 () T@U)
(declare-fun $generated@@47 () T@U)
(declare-fun $generated@@48 () T@U)
(declare-fun $generated@@49 () T@U)
(declare-fun $generated@@50 () T@U)
(declare-fun $generated@@51 () T@U)
(declare-fun $generated@@52 () T@U)
(declare-fun $generated@@53 () T@U)
(declare-fun $generated@@54 () T@U)
(declare-fun $generated@@55 () T@U)
(declare-fun $generated@@56 () T@U)
(declare-fun $generated@@57 () T@U)
(declare-fun $generated@@58 () T@U)
(declare-fun $generated@@59 () T@U)
(declare-fun $generated@@60 () T@U)
(declare-fun $generated@@61 () T@U)
(declare-fun $generated@@62 () T@U)
(declare-fun $generated@@63 () T@U)
(declare-fun $generated@@64 () T@T)
(declare-fun $generated@@65 () T@T)
(declare-fun $generated@@66 (T@T) T@T)
(declare-fun $generated@@67 (T@T) T@T)
(declare-fun $generated@@68 () T@T)
(declare-fun $generated@@69 () T@T)
(declare-fun $generated@@72 (T@U) T@U)
(declare-fun $generated@@74 (T@U T@U T@U) Bool)
(declare-fun $generated@@75 (Int) T@U)
(declare-fun $generated@@76 (T@T T@T) T@T)
(declare-fun $generated@@77 () T@T)
(declare-fun $generated@@78 () T@T)
(declare-fun $generated@@79 (T@T) T@T)
(declare-fun $generated@@80 (T@T) T@T)
(declare-fun $generated@@81 (T@U T@U) T@U)
(declare-fun $generated@@82 (T@U T@U T@U) T@U)
(declare-fun $generated@@83 (T@U T@U) T@U)
(declare-fun $generated@@84 (T@U T@U T@U) T@U)
(declare-fun $generated@@132 (T@U T@U) Bool)
(declare-fun $generated@@134 (T@U) Bool)
(declare-fun $generated@@135 (T@U T@U) T@U)
(declare-fun $generated@@136 () T@T)
(declare-fun $generated@@142 (T@U T@U) Bool)
(declare-fun $generated@@143 (T@U) T@U)
(declare-fun $generated@@144 (T@U) T@U)
(declare-fun $generated@@145 () T@T)
(declare-fun $generated@@150 (T@U Int) T@U)
(declare-fun $generated@@151 (T@U T@U) T@U)
(declare-fun $generated@@152 (T@T) T@T)
(declare-fun $generated@@153 (T@U) Int)
(declare-fun $generated@@154 (T@T) T@T)
(declare-fun $generated@@167 (T@U) T@U)
(declare-fun $generated@@168 (T@U) Bool)
(declare-fun $generated@@172 (T@U T@U T@U) T@U)
(declare-fun $generated@@173 (T@U T@U T@U Bool) T@U)
(declare-fun $generated@@174 (T@T T@T) T@T)
(declare-fun $generated@@175 (T@T) T@T)
(declare-fun $generated@@176 (T@T) T@T)
(declare-fun $generated@@177 (T@U T@U T@U T@U) T@U)
(declare-fun $generated@@228 (T@U Int) T@U)
(declare-fun $generated@@229 (T@U T@U) T@U)
(declare-fun $generated@@240 (T@U T@U) T@U)
(declare-fun $generated@@241 (T@U T@U) Bool)
(declare-fun $generated@@253 (T@U) T@U)
(declare-fun $generated@@258 (T@U) T@U)
(declare-fun $generated@@263 (Int) Int)
(declare-fun $generated@@265 (T@U) T@U)
(declare-fun $generated@@269 (T@U) T@U)
(declare-fun $generated@@274 (T@U Int) T@U)
(declare-fun $generated@@282 (T@U) Bool)
(declare-fun $generated@@283 (T@U T@U T@U) Bool)
(declare-fun $generated@@292 (T@U) T@U)
(declare-fun $generated@@295 (T@U T@U) Bool)
(declare-fun $generated@@300 (T@U) Int)
(declare-fun $generated@@307 (T@T) T@U)
(declare-fun $generated@@316 (T@U) T@U)
(declare-fun $generated@@325 (T@U) Int)
(declare-fun $generated@@326 (T@T) T@U)
(declare-fun $generated@@331 (T@U) T@U)
(declare-fun $generated@@332 (T@T T@T) T@U)
(declare-fun $generated@@333 (T@T T@T) T@T)
(declare-fun $generated@@334 (T@T) T@T)
(declare-fun $generated@@335 (T@T) T@T)
(declare-fun $generated@@349 (T@U) T@U)
(declare-fun $generated@@350 (T@T T@T) T@U)
(declare-fun $generated@@351 (T@T T@T) T@T)
(declare-fun $generated@@352 (T@T) T@T)
(declare-fun $generated@@353 (T@T) T@T)
(declare-fun $generated@@381 (T@U) T@U)
(declare-fun $generated@@392 (T@U) T@U)
(declare-fun $generated@@412 (T@U) T@U)
(declare-fun $generated@@413 (T@T T@U) T@U)
(declare-fun $generated@@414 (T@U) T@U)
(declare-fun $generated@@423 (T@U) T@U)
(declare-fun $generated@@424 (T@U) T@U)
(declare-fun $generated@@441 (T@U T@U) T@U)
(declare-fun $generated@@449 (T@U T@U) T@U)
(declare-fun $generated@@463 (T@T) T@U)
(declare-fun $generated@@487 () T@T)
(declare-fun $generated@@499 (T@U) T@U)
(declare-fun $generated@@503 (T@U) T@U)
(declare-fun $generated@@509 (T@U) T@U)
(declare-fun $generated@@513 (T@U) T@U)
(declare-fun $generated@@521 (T@U) T@U)
(declare-fun $generated@@525 (T@U) T@U)
(declare-fun $generated@@537 (T@U) Int)
(declare-fun $generated@@539 (T@U) T@U)
(declare-fun $generated@@543 (T@U) T@U)
(declare-fun $generated@@547 (T@U) T@U)
(declare-fun $generated@@551 (T@U) T@U)
(declare-fun $generated@@565 (T@U) Int)
(declare-fun $generated@@566 (T@U) Int)
(declare-fun $generated@@582 (T@U) T@U)
(declare-fun $generated@@586 (T@U) T@U)
(declare-fun $generated@@587 (T@U) T@U)
(assert  (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (= ($generated@@1 $generated@@2) 0) (= ($generated@@1 $generated@@3) 1)) (= ($generated@@1 $generated@@4) 2)) (= ($generated@@1 $generated@@5) 3)) (= ($generated@@1 $generated@@6) 4)) (= ($generated@@1 $generated@@7) 5)) (forall (($generated@@18 Int) ) (! (= ($generated ($generated@@8 $generated@@18)) $generated@@18)
 :pattern ( ($generated@@8 $generated@@18))
))) (forall (($generated@@19 T@U) ) (!  (=> (= (type $generated@@19) $generated@@2) (= ($generated@@8 ($generated $generated@@19)) $generated@@19))
 :pattern ( ($generated $generated@@19))
))) (forall (($generated@@20 Int) ) (! (= (type ($generated@@8 $generated@@20)) $generated@@2)
 :pattern ( ($generated@@8 $generated@@20))
))) (forall (($generated@@21 Real) ) (! (= ($generated@@10 ($generated@@9 $generated@@21)) $generated@@21)
 :pattern ( ($generated@@9 $generated@@21))
))) (forall (($generated@@22 T@U) ) (!  (=> (= (type $generated@@22) $generated@@3) (= ($generated@@9 ($generated@@10 $generated@@22)) $generated@@22))
 :pattern ( ($generated@@10 $generated@@22))
))) (forall (($generated@@23 Real) ) (! (= (type ($generated@@9 $generated@@23)) $generated@@3)
 :pattern ( ($generated@@9 $generated@@23))
))) (forall (($generated@@24 Bool) ) (! (= ($generated@@0 ($generated@@11 $generated@@24)) $generated@@24)
 :pattern ( ($generated@@11 $generated@@24))
))) (forall (($generated@@25 T@U) ) (!  (=> (= (type $generated@@25) $generated@@4) (= ($generated@@11 ($generated@@0 $generated@@25)) $generated@@25))
 :pattern ( ($generated@@0 $generated@@25))
))) (forall (($generated@@26 Bool) ) (! (= (type ($generated@@11 $generated@@26)) $generated@@4)
 :pattern ( ($generated@@11 $generated@@26))
))) (forall (($generated@@27 RoundingMode) ) (! (= ($generated@@13 ($generated@@12 $generated@@27)) $generated@@27)
 :pattern ( ($generated@@12 $generated@@27))
))) (forall (($generated@@28 T@U) ) (!  (=> (= (type $generated@@28) $generated@@5) (= ($generated@@12 ($generated@@13 $generated@@28)) $generated@@28))
 :pattern ( ($generated@@13 $generated@@28))
))) (forall (($generated@@29 RoundingMode) ) (! (= (type ($generated@@12 $generated@@29)) $generated@@5)
 :pattern ( ($generated@@12 $generated@@29))
))) (forall (($generated@@30 String) ) (! (= ($generated@@15 ($generated@@14 $generated@@30)) $generated@@30)
 :pattern ( ($generated@@14 $generated@@30))
))) (forall (($generated@@31 T@U) ) (!  (=> (= (type $generated@@31) $generated@@6) (= ($generated@@14 ($generated@@15 $generated@@31)) $generated@@31))
 :pattern ( ($generated@@15 $generated@@31))
))) (forall (($generated@@32 String) ) (! (= (type ($generated@@14 $generated@@32)) $generated@@6)
 :pattern ( ($generated@@14 $generated@@32))
))) (forall (($generated@@33 (RegEx String)) ) (! (= ($generated@@17 ($generated@@16 $generated@@33)) $generated@@33)
 :pattern ( ($generated@@16 $generated@@33))
))) (forall (($generated@@34 T@U) ) (!  (=> (= (type $generated@@34) $generated@@7) (= ($generated@@16 ($generated@@17 $generated@@34)) $generated@@34))
 :pattern ( ($generated@@17 $generated@@34))
))) (forall (($generated@@35 (RegEx String)) ) (! (= (type ($generated@@16 $generated@@35)) $generated@@7)
 :pattern ( ($generated@@16 $generated@@35))
))))
(assert (forall (($generated@@36 T@U) ) (! (UOrdering2 $generated@@36 $generated@@36)
 :no-pattern ($generated $generated@@36)
 :no-pattern ($generated@@0 $generated@@36)
)))
(assert (forall (($generated@@37 T@U) ($generated@@38 T@U) ($generated@@39 T@U) ) (! (let (($generated@@40 (type $generated@@37)))
 (=> (and (and (= (type $generated@@38) $generated@@40) (= (type $generated@@39) $generated@@40)) (and (UOrdering2 $generated@@37 $generated@@38) (UOrdering2 $generated@@38 $generated@@39))) (UOrdering2 $generated@@37 $generated@@39)))
 :pattern ( (UOrdering2 $generated@@37 $generated@@38) (UOrdering2 $generated@@38 $generated@@39))
)))
(assert (forall (($generated@@41 T@U) ($generated@@42 T@U) ) (! (let (($generated@@43 (type $generated@@41)))
 (=> (= (type $generated@@42) $generated@@43) (=> (and (UOrdering2 $generated@@41 $generated@@42) (UOrdering2 $generated@@42 $generated@@41)) (= $generated@@41 $generated@@42))))
 :pattern ( (UOrdering2 $generated@@41 $generated@@42) (UOrdering2 $generated@@42 $generated@@41))
)))
(assert  (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (= ($generated@@1 $generated@@64) 6) (= (type $generated@@44) $generated@@64)) (= (type $generated@@45) $generated@@64)) (= (type $generated@@46) $generated@@64)) (= (type $generated@@47) $generated@@64)) (= (type $generated@@48) $generated@@64)) (= ($generated@@1 $generated@@65) 7)) (= (type $generated@@49) $generated@@65)) (= (type $generated@@50) $generated@@65)) (= (type $generated@@51) $generated@@65)) (= (type $generated@@52) $generated@@65)) (= (type $generated@@53) $generated@@65)) (= (type $generated@@54) $generated@@65)) (= (type $generated@@55) $generated@@65)) (= (type $generated@@56) $generated@@65)) (= (type $generated@@57) $generated@@65)) (= (type $generated@@58) $generated@@65)) (= (type $generated@@59) $generated@@65)) (forall (($generated@@70 T@T) ) (= ($generated@@1 ($generated@@66 $generated@@70)) 8))) (forall (($generated@@71 T@T) ) (! (= ($generated@@67 ($generated@@66 $generated@@71)) $generated@@71)
 :pattern ( ($generated@@66 $generated@@71))
))) (= (type $generated@@60) ($generated@@66 $generated@@4))) (= ($generated@@1 $generated@@68) 9)) (= (type $generated@@61) $generated@@68)) (= (type $generated@@62) $generated@@65)) (= ($generated@@1 $generated@@69) 10)) (= (type $generated@@63) $generated@@69)))
(assert (distinct $generated@@44 $generated@@45 $generated@@46 $generated@@47 $generated@@48 $generated@@49 $generated@@50 $generated@@51 $generated@@52 $generated@@53 $generated@@54 $generated@@55 $generated@@56 $generated@@57 $generated@@58 $generated@@59 $generated@@60 $generated@@61 $generated@@62 $generated@@63)
)
(assert (forall (($generated@@73 T@U) ) (! (= (type ($generated@@72 $generated@@73)) $generated@@65)
 :pattern ( ($generated@@72 $generated@@73))
)))
(assert (= ($generated@@72 $generated@@44) $generated@@49))
(assert (= ($generated@@72 $generated@@45) $generated@@50))
(assert (= ($generated@@72 $generated@@46) $generated@@51))
(assert (= ($generated@@72 $generated@@47) $generated@@52))
(assert (= ($generated@@72 $generated@@48) $generated@@53))
(assert  (and (and (and (and (and (and (and (and (and (and (and (and (and (forall (($generated@@85 T@T) ($generated@@86 T@T) ) (= ($generated@@1 ($generated@@76 $generated@@85 $generated@@86)) 11)) (forall (($generated@@87 T@T) ($generated@@88 T@T) ) (! (= ($generated@@79 ($generated@@76 $generated@@87 $generated@@88)) $generated@@87)
 :pattern ( ($generated@@76 $generated@@87 $generated@@88))
))) (forall (($generated@@89 T@T) ($generated@@90 T@T) ) (! (= ($generated@@80 ($generated@@76 $generated@@89 $generated@@90)) $generated@@90)
 :pattern ( ($generated@@76 $generated@@89 $generated@@90))
))) (forall (($generated@@91 T@U) ($generated@@92 T@U) ) (! (let (($generated@@93 ($generated@@80 (type $generated@@91))))
(= (type ($generated@@81 $generated@@91 $generated@@92)) $generated@@93))
 :pattern ( ($generated@@81 $generated@@91 $generated@@92))
))) (forall (($generated@@94 T@U) ($generated@@95 T@U) ($generated@@96 T@U) ) (! (let (($generated@@97 (type $generated@@96)))
(let (($generated@@98 (type $generated@@95)))
(= (type ($generated@@82 $generated@@94 $generated@@95 $generated@@96)) ($generated@@76 $generated@@98 $generated@@97))))
 :pattern ( ($generated@@82 $generated@@94 $generated@@95 $generated@@96))
))) (forall (($generated@@99 T@U) ($generated@@100 T@U) ($generated@@101 T@U) ) (! (let (($generated@@102 ($generated@@80 (type $generated@@99))))
 (=> (= (type $generated@@101) $generated@@102) (= ($generated@@81 ($generated@@82 $generated@@99 $generated@@100 $generated@@101) $generated@@100) $generated@@101)))
 :weight 0
))) (and (forall (($generated@@103 T@U) ($generated@@104 T@U) ($generated@@105 T@U) ($generated@@106 T@U) ) (!  (or (= $generated@@105 $generated@@106) (= ($generated@@81 ($generated@@82 $generated@@104 $generated@@105 $generated@@103) $generated@@106) ($generated@@81 $generated@@104 $generated@@106)))
 :weight 0
)) (forall (($generated@@107 T@U) ($generated@@108 T@U) ($generated@@109 T@U) ($generated@@110 T@U) ) (!  (or true (= ($generated@@81 ($generated@@82 $generated@@108 $generated@@109 $generated@@107) $generated@@110) ($generated@@81 $generated@@108 $generated@@110)))
 :weight 0
)))) (= ($generated@@1 $generated@@77) 12)) (forall (($generated@@111 T@U) ($generated@@112 T@U) ) (! (let (($generated@@113 ($generated@@67 (type $generated@@112))))
(= (type ($generated@@83 $generated@@111 $generated@@112)) $generated@@113))
 :pattern ( ($generated@@83 $generated@@111 $generated@@112))
))) (= ($generated@@1 $generated@@78) 13)) (forall (($generated@@114 T@U) ($generated@@115 T@U) ($generated@@116 T@U) ) (! (= (type ($generated@@84 $generated@@114 $generated@@115 $generated@@116)) $generated@@78)
 :pattern ( ($generated@@84 $generated@@114 $generated@@115 $generated@@116))
))) (forall (($generated@@117 T@U) ($generated@@118 T@U) ($generated@@119 T@U) ) (! (let (($generated@@120 ($generated@@67 (type $generated@@118))))
 (=> (= (type $generated@@119) $generated@@120) (= ($generated@@83 ($generated@@84 $generated@@117 $generated@@118 $generated@@119) $generated@@118) $generated@@119)))
 :weight 0
))) (and (forall (($generated@@121 T@U) ($generated@@122 T@U) ($generated@@123 T@U) ($generated@@124 T@U) ) (!  (or (= $generated@@123 $generated@@124) (= ($generated@@83 ($generated@@84 $generated@@122 $generated@@123 $generated@@121) $generated@@124) ($generated@@83 $generated@@122 $generated@@124)))
 :weight 0
)) (forall (($generated@@125 T@U) ($generated@@126 T@U) ($generated@@127 T@U) ($generated@@128 T@U) ) (!  (or true (= ($generated@@83 ($generated@@84 $generated@@126 $generated@@127 $generated@@125) $generated@@128) ($generated@@83 $generated@@126 $generated@@128)))
 :weight 0
)))) (forall (($generated@@129 Int) ) (! (= (type ($generated@@75 $generated@@129)) $generated@@64)
 :pattern ( ($generated@@75 $generated@@129))
))))
(assert (forall (($generated@@130 T@U) ($generated@@131 T@U) ) (!  (=> (and (= (type $generated@@130) $generated@@2) (= (type $generated@@131) ($generated@@76 $generated@@77 $generated@@78))) ($generated@@74 $generated@@130 ($generated@@75 0) $generated@@131))
 :pattern ( ($generated@@74 $generated@@130 ($generated@@75 0) $generated@@131))
)))
(assert (forall (($generated@@133 T@U) ) (!  (=> (= (type $generated@@133) $generated@@2) ($generated@@132 $generated@@133 ($generated@@75 0)))
 :pattern ( ($generated@@132 $generated@@133 ($generated@@75 0)))
)))
(assert  (and (= ($generated@@1 $generated@@136) 14) (forall (($generated@@137 T@U) ($generated@@138 T@U) ) (! (= (type ($generated@@135 $generated@@137 $generated@@138)) $generated@@64)
 :pattern ( ($generated@@135 $generated@@137 $generated@@138))
))))
(assert (forall (($generated@@139 T@U) ($generated@@140 T@U) ($generated@@141 T@U) ) (!  (=> (and (and (and (= (type $generated@@139) $generated@@64) (= (type $generated@@140) $generated@@64)) (= (type $generated@@141) $generated@@136)) ($generated@@132 $generated@@141 ($generated@@135 $generated@@139 $generated@@140))) ($generated@@134 $generated@@141))
 :pattern ( ($generated@@134 $generated@@141) ($generated@@132 $generated@@141 ($generated@@135 $generated@@139 $generated@@140)))
)))
(assert  (and (and (= ($generated@@1 $generated@@145) 15) (forall (($generated@@146 T@U) ) (! (= (type ($generated@@143 $generated@@146)) $generated@@145)
 :pattern ( ($generated@@143 $generated@@146))
))) (forall (($generated@@147 T@U) ) (! (= (type ($generated@@144 $generated@@147)) $generated@@145)
 :pattern ( ($generated@@144 $generated@@147))
))))
(assert (forall (($generated@@148 T@U) ($generated@@149 T@U) ) (!  (=> (and (and (= (type $generated@@148) $generated@@136) (= (type $generated@@149) $generated@@136)) true) (= ($generated@@142 $generated@@148 $generated@@149)  (and (= ($generated@@143 $generated@@148) ($generated@@143 $generated@@149)) (= ($generated@@144 $generated@@148) ($generated@@144 $generated@@149)))))
 :pattern ( ($generated@@142 $generated@@148 $generated@@149))
)))
(assert  (and (and (and (forall (($generated@@155 T@T) ) (= ($generated@@1 ($generated@@152 $generated@@155)) 16)) (forall (($generated@@156 T@T) ) (! (= ($generated@@154 ($generated@@152 $generated@@156)) $generated@@156)
 :pattern ( ($generated@@152 $generated@@156))
))) (forall (($generated@@157 T@U) ($generated@@158 Int) ) (! (let (($generated@@159 ($generated@@154 (type $generated@@157))))
(= (type ($generated@@150 $generated@@157 $generated@@158)) ($generated@@152 $generated@@159)))
 :pattern ( ($generated@@150 $generated@@157 $generated@@158))
))) (forall (($generated@@160 T@U) ($generated@@161 T@U) ) (! (let (($generated@@162 (type $generated@@161)))
(= (type ($generated@@151 $generated@@160 $generated@@161)) ($generated@@152 $generated@@162)))
 :pattern ( ($generated@@151 $generated@@160 $generated@@161))
))))
(assert (forall (($generated@@163 T@U) ($generated@@164 T@U) ($generated@@165 Int) ) (! (let (($generated@@166 (type $generated@@164)))
 (=> (= (type $generated@@163) ($generated@@152 $generated@@166)) (=> (and (<= 0 $generated@@165) (<= $generated@@165 ($generated@@153 $generated@@163))) (= ($generated@@150 ($generated@@151 $generated@@163 $generated@@164) $generated@@165) ($generated@@151 ($generated@@150 $generated@@163 $generated@@165) $generated@@164)))))
 :pattern ( ($generated@@150 ($generated@@151 $generated@@163 $generated@@164) $generated@@165))
)))
(assert (forall (($generated@@169 T@U) ) (! (= (type ($generated@@167 $generated@@169)) $generated@@64)
 :pattern ( ($generated@@167 $generated@@169))
)))
(assert (forall (($generated@@170 T@U) ($generated@@171 T@U) ) (!  (=> (and (and (= (type $generated@@170) ($generated@@76 $generated@@145 $generated@@2)) (= (type $generated@@171) $generated@@64)) ($generated@@132 $generated@@170 ($generated@@167 $generated@@171))) ($generated@@168 $generated@@170))
 :pattern ( ($generated@@132 $generated@@170 ($generated@@167 $generated@@171)))
)))
(assert  (and (and (and (and (and (and (and (forall (($generated@@178 T@T) ($generated@@179 T@T) ) (= ($generated@@1 ($generated@@174 $generated@@178 $generated@@179)) 17)) (forall (($generated@@180 T@T) ($generated@@181 T@T) ) (! (= ($generated@@175 ($generated@@174 $generated@@180 $generated@@181)) $generated@@180)
 :pattern ( ($generated@@174 $generated@@180 $generated@@181))
))) (forall (($generated@@182 T@T) ($generated@@183 T@T) ) (! (= ($generated@@176 ($generated@@174 $generated@@182 $generated@@183)) $generated@@183)
 :pattern ( ($generated@@174 $generated@@182 $generated@@183))
))) (forall (($generated@@184 T@U) ($generated@@185 T@U) ($generated@@186 T@U) ) (! (let (($generated@@187 ($generated@@176 (type $generated@@184))))
(= (type ($generated@@172 $generated@@184 $generated@@185 $generated@@186)) $generated@@187))
 :pattern ( ($generated@@172 $generated@@184 $generated@@185 $generated@@186))
))) (forall (($generated@@188 T@U) ($generated@@189 T@U) ($generated@@190 T@U) ($generated@@191 T@U) ) (! (let (($generated@@192 (type $generated@@191)))
(let (($generated@@193 (type $generated@@189)))
(= (type ($generated@@177 $generated@@188 $generated@@189 $generated@@190 $generated@@191)) ($generated@@174 $generated@@193 $generated@@192))))
 :pattern ( ($generated@@177 $generated@@188 $generated@@189 $generated@@190 $generated@@191))
))) (forall (($generated@@194 T@U) ($generated@@195 T@U) ($generated@@196 T@U) ($generated@@197 T@U) ) (! (let (($generated@@198 ($generated@@176 (type $generated@@194))))
 (=> (= (type $generated@@197) $generated@@198) (= ($generated@@172 ($generated@@177 $generated@@194 $generated@@195 $generated@@196 $generated@@197) $generated@@195 $generated@@196) $generated@@197)))
 :weight 0
))) (and (and (forall (($generated@@199 T@U) ($generated@@200 T@U) ($generated@@201 T@U) ($generated@@202 T@U) ($generated@@203 T@U) ($generated@@204 T@U) ) (!  (or (= $generated@@201 $generated@@203) (= ($generated@@172 ($generated@@177 $generated@@200 $generated@@201 $generated@@202 $generated@@199) $generated@@203 $generated@@204) ($generated@@172 $generated@@200 $generated@@203 $generated@@204)))
 :weight 0
)) (forall (($generated@@205 T@U) ($generated@@206 T@U) ($generated@@207 T@U) ($generated@@208 T@U) ($generated@@209 T@U) ($generated@@210 T@U) ) (!  (or (= $generated@@208 $generated@@210) (= ($generated@@172 ($generated@@177 $generated@@206 $generated@@207 $generated@@208 $generated@@205) $generated@@209 $generated@@210) ($generated@@172 $generated@@206 $generated@@209 $generated@@210)))
 :weight 0
))) (forall (($generated@@211 T@U) ($generated@@212 T@U) ($generated@@213 T@U) ($generated@@214 T@U) ($generated@@215 T@U) ($generated@@216 T@U) ) (!  (or true (= ($generated@@172 ($generated@@177 $generated@@212 $generated@@213 $generated@@214 $generated@@211) $generated@@215 $generated@@216) ($generated@@172 $generated@@212 $generated@@215 $generated@@216)))
 :weight 0
)))) (forall (($generated@@217 T@U) ($generated@@218 T@U) ($generated@@219 T@U) ($generated@@220 Bool) ) (! (= (type ($generated@@173 $generated@@217 $generated@@218 $generated@@219 $generated@@220)) ($generated@@174 $generated@@77 $generated@@4))
 :pattern ( ($generated@@173 $generated@@217 $generated@@218 $generated@@219 $generated@@220))
))))
(assert (forall (($generated@@221 T@U) ($generated@@222 T@U) ($generated@@223 T@U) ($generated@@224 Bool) ($generated@@225 T@U) ($generated@@226 T@U) ) (! (let (($generated@@227 ($generated@@67 (type $generated@@226))))
 (=> (and (and (and (and (= (type $generated@@221) $generated@@77) (= (type $generated@@222) ($generated@@76 $generated@@77 $generated@@78))) (= (type $generated@@223) ($generated@@66 $generated@@4))) (= (type $generated@@225) $generated@@77)) (= (type $generated@@226) ($generated@@66 $generated@@227))) (= ($generated@@0 ($generated@@172 ($generated@@173 $generated@@221 $generated@@222 $generated@@223 $generated@@224) $generated@@225 $generated@@226))  (=> (and (not (= $generated@@225 $generated@@221)) ($generated@@0 ($generated@@83 ($generated@@81 $generated@@222 $generated@@225) $generated@@223))) $generated@@224))))
 :pattern ( ($generated@@172 ($generated@@173 $generated@@221 $generated@@222 $generated@@223 $generated@@224) $generated@@225 $generated@@226))
)))
(assert  (and (forall (($generated@@230 T@U) ($generated@@231 Int) ) (! (let (($generated@@232 ($generated@@154 (type $generated@@230))))
(= (type ($generated@@228 $generated@@230 $generated@@231)) ($generated@@152 $generated@@232)))
 :pattern ( ($generated@@228 $generated@@230 $generated@@231))
)) (forall (($generated@@233 T@U) ($generated@@234 T@U) ) (! (let (($generated@@235 ($generated@@154 (type $generated@@233))))
(= (type ($generated@@229 $generated@@233 $generated@@234)) ($generated@@152 $generated@@235)))
 :pattern ( ($generated@@229 $generated@@233 $generated@@234))
))))
(assert (forall (($generated@@236 T@U) ($generated@@237 T@U) ($generated@@238 Int) ) (! (let (($generated@@239 ($generated@@154 (type $generated@@236))))
 (=> (and (and (= (type $generated@@236) ($generated@@152 $generated@@239)) (= (type $generated@@237) ($generated@@152 $generated@@239))) (= $generated@@238 ($generated@@153 $generated@@236))) (and (= ($generated@@228 ($generated@@229 $generated@@236 $generated@@237) $generated@@238) $generated@@236) (= ($generated@@150 ($generated@@229 $generated@@236 $generated@@237) $generated@@238) $generated@@237))))
 :pattern ( ($generated@@228 ($generated@@229 $generated@@236 $generated@@237) $generated@@238))
 :pattern ( ($generated@@150 ($generated@@229 $generated@@236 $generated@@237) $generated@@238))
)))
(assert (forall (($generated@@242 T@U) ($generated@@243 T@U) ) (! (= (type ($generated@@240 $generated@@242 $generated@@243)) $generated@@136)
 :pattern ( ($generated@@240 $generated@@242 $generated@@243))
)))
(assert (forall (($generated@@244 T@U) ($generated@@245 T@U) ($generated@@246 T@U) ($generated@@247 T@U) ) (!  (=> (and (and (and (= (type $generated@@244) $generated@@64) (= (type $generated@@245) $generated@@64)) (= (type $generated@@246) $generated@@145)) (= (type $generated@@247) $generated@@145)) (= ($generated@@132 ($generated@@240 $generated@@246 $generated@@247) ($generated@@135 $generated@@244 $generated@@245))  (and ($generated@@241 $generated@@246 $generated@@244) ($generated@@241 $generated@@247 $generated@@245))))
 :pattern ( ($generated@@132 ($generated@@240 $generated@@246 $generated@@247) ($generated@@135 $generated@@244 $generated@@245)))
)))
(assert (forall (($generated@@248 T@U) ($generated@@249 T@U) ) (!  (=> (and (= (type $generated@@248) $generated@@136) (= (type $generated@@249) $generated@@136)) (= ($generated@@142 $generated@@248 $generated@@249) (= $generated@@248 $generated@@249)))
 :pattern ( ($generated@@142 $generated@@248 $generated@@249))
)))
(assert (forall (($generated@@250 T@U) ($generated@@251 Int) ) (! (let (($generated@@252 ($generated@@154 (type $generated@@250))))
 (=> (and (= (type $generated@@250) ($generated@@152 $generated@@252)) (= $generated@@251 0)) (= ($generated@@150 $generated@@250 $generated@@251) $generated@@250)))
 :pattern ( ($generated@@150 $generated@@250 $generated@@251))
)))
(assert (forall (($generated@@254 T@U) ) (! (= (type ($generated@@253 $generated@@254)) $generated@@64)
 :pattern ( ($generated@@253 $generated@@254))
)))
(assert (forall (($generated@@255 T@U) ($generated@@256 T@U) ) (!  (=> (and (= (type $generated@@255) ($generated@@76 $generated@@145 $generated@@4)) (= (type $generated@@256) $generated@@64)) (= ($generated@@132 $generated@@255 ($generated@@253 $generated@@256)) (forall (($generated@@257 T@U) ) (!  (=> (and (= (type $generated@@257) $generated@@145) ($generated@@0 ($generated@@81 $generated@@255 $generated@@257))) ($generated@@241 $generated@@257 $generated@@256))
 :pattern ( ($generated@@81 $generated@@255 $generated@@257))
))))
 :pattern ( ($generated@@132 $generated@@255 ($generated@@253 $generated@@256)))
)))
(assert (forall (($generated@@259 T@U) ) (! (= (type ($generated@@258 $generated@@259)) $generated@@64)
 :pattern ( ($generated@@258 $generated@@259))
)))
(assert (forall (($generated@@260 T@U) ($generated@@261 T@U) ) (!  (=> (and (= (type $generated@@260) ($generated@@76 $generated@@145 $generated@@4)) (= (type $generated@@261) $generated@@64)) (= ($generated@@132 $generated@@260 ($generated@@258 $generated@@261)) (forall (($generated@@262 T@U) ) (!  (=> (and (= (type $generated@@262) $generated@@145) ($generated@@0 ($generated@@81 $generated@@260 $generated@@262))) ($generated@@241 $generated@@262 $generated@@261))
 :pattern ( ($generated@@81 $generated@@260 $generated@@262))
))))
 :pattern ( ($generated@@132 $generated@@260 ($generated@@258 $generated@@261)))
)))
(assert (forall (($generated@@264 Int) ) (! (= ($generated@@263 $generated@@264) $generated@@264)
 :pattern ( ($generated@@263 $generated@@264))
)))
(assert (forall (($generated@@266 T@U) ) (! (let (($generated@@267 (type $generated@@266)))
(= (type ($generated@@265 $generated@@266)) $generated@@267))
 :pattern ( ($generated@@265 $generated@@266))
)))
(assert (forall (($generated@@268 T@U) ) (! (= ($generated@@265 $generated@@268) $generated@@268)
 :pattern ( ($generated@@265 $generated@@268))
)))
(assert (forall (($generated@@270 T@U) ) (! (= (type ($generated@@269 $generated@@270)) $generated@@64)
 :pattern ( ($generated@@269 $generated@@270))
)))
(assert (forall (($generated@@271 T@U) ($generated@@272 T@U) ($generated@@273 T@U) ) (!  (=> (and (and (and (= (type $generated@@271) ($generated@@152 $generated@@145)) (= (type $generated@@272) $generated@@145)) (= (type $generated@@273) $generated@@64)) (and ($generated@@132 $generated@@271 ($generated@@269 $generated@@273)) ($generated@@241 $generated@@272 $generated@@273))) ($generated@@132 ($generated@@151 $generated@@271 $generated@@272) ($generated@@269 $generated@@273)))
 :pattern ( ($generated@@132 ($generated@@151 $generated@@271 $generated@@272) ($generated@@269 $generated@@273)))
)))
(assert (forall (($generated@@275 T@U) ($generated@@276 Int) ) (! (let (($generated@@277 ($generated@@154 (type $generated@@275))))
(= (type ($generated@@274 $generated@@275 $generated@@276)) $generated@@277))
 :pattern ( ($generated@@274 $generated@@275 $generated@@276))
)))
(assert (forall (($generated@@278 T@U) ($generated@@279 Int) ($generated@@280 Int) ) (! (let (($generated@@281 ($generated@@154 (type $generated@@278))))
 (=> (= (type $generated@@278) ($generated@@152 $generated@@281)) (=> (and (and (<= 0 $generated@@280) (< $generated@@280 $generated@@279)) (< $generated@@280 ($generated@@153 $generated@@278))) (= ($generated@@274 ($generated@@228 $generated@@278 $generated@@279) $generated@@280) ($generated@@274 $generated@@278 $generated@@280)))))
 :weight 25
 :pattern ( ($generated@@274 ($generated@@228 $generated@@278 $generated@@279) $generated@@280))
 :pattern ( ($generated@@274 $generated@@278 $generated@@280) ($generated@@228 $generated@@278 $generated@@279))
)))
(assert (forall (($generated@@284 T@U) ($generated@@285 T@U) ($generated@@286 T@U) ($generated@@287 T@U) ($generated@@288 T@U) ) (!  (=> (and (and (and (and (and (= (type $generated@@284) $generated@@64) (= (type $generated@@285) $generated@@64)) (= (type $generated@@286) $generated@@145)) (= (type $generated@@287) $generated@@145)) (= (type $generated@@288) ($generated@@76 $generated@@77 $generated@@78))) ($generated@@282 $generated@@288)) (= ($generated@@74 ($generated@@240 $generated@@286 $generated@@287) ($generated@@135 $generated@@284 $generated@@285) $generated@@288)  (and ($generated@@283 $generated@@286 $generated@@284 $generated@@288) ($generated@@283 $generated@@287 $generated@@285 $generated@@288))))
 :pattern ( ($generated@@74 ($generated@@240 $generated@@286 $generated@@287) ($generated@@135 $generated@@284 $generated@@285) $generated@@288))
)))
(assert (forall (($generated@@289 T@U) ($generated@@290 Int) ) (! (let (($generated@@291 ($generated@@154 (type $generated@@289))))
 (=> (= (type $generated@@289) ($generated@@152 $generated@@291)) (=> (and (<= 0 $generated@@290) (<= $generated@@290 ($generated@@153 $generated@@289))) (= ($generated@@153 ($generated@@150 $generated@@289 $generated@@290)) (- ($generated@@153 $generated@@289) $generated@@290)))))
 :pattern ( ($generated@@153 ($generated@@150 $generated@@289 $generated@@290)))
)))
(assert (forall (($generated@@293 T@U) ) (! (= (type ($generated@@292 $generated@@293)) $generated@@68)
 :pattern ( ($generated@@292 $generated@@293))
)))
(assert (forall (($generated@@294 T@U) ) (!  (=> (= (type $generated@@294) $generated@@136) (= ($generated@@134 $generated@@294) (= ($generated@@292 $generated@@294) $generated@@61)))
 :pattern ( ($generated@@134 $generated@@294))
)))
(assert (forall (($generated@@296 T@U) ($generated@@297 T@U) ) (! (let (($generated@@298 ($generated@@154 (type $generated@@296))))
 (=> (and (= (type $generated@@296) ($generated@@152 $generated@@298)) (= (type $generated@@297) ($generated@@152 $generated@@298))) (= ($generated@@295 $generated@@296 $generated@@297)  (and (= ($generated@@153 $generated@@296) ($generated@@153 $generated@@297)) (forall (($generated@@299 Int) ) (!  (=> (and (<= 0 $generated@@299) (< $generated@@299 ($generated@@153 $generated@@296))) (= ($generated@@274 $generated@@296 $generated@@299) ($generated@@274 $generated@@297 $generated@@299)))
 :pattern ( ($generated@@274 $generated@@296 $generated@@299))
 :pattern ( ($generated@@274 $generated@@297 $generated@@299))
))))))
 :pattern ( ($generated@@295 $generated@@296 $generated@@297))
)))
(assert (forall (($generated@@301 T@U) ($generated@@302 Int) ) (! (let (($generated@@303 ($generated@@154 (type $generated@@301))))
 (=> (= (type $generated@@301) ($generated@@152 $generated@@303)) (=> (and (<= 0 $generated@@302) (< $generated@@302 ($generated@@153 $generated@@301))) (< ($generated@@300 ($generated@@228 $generated@@301 $generated@@302)) ($generated@@300 $generated@@301)))))
 :pattern ( ($generated@@300 ($generated@@228 $generated@@301 $generated@@302)))
)))
(assert (forall (($generated@@304 T@U) ) (!  (=> (and (= (type $generated@@304) $generated@@136) ($generated@@134 $generated@@304)) (exists (($generated@@305 T@U) ($generated@@306 T@U) ) (!  (and (and (= (type $generated@@305) $generated@@145) (= (type $generated@@306) $generated@@145)) (= $generated@@304 ($generated@@240 $generated@@305 $generated@@306)))
 :no-pattern (type $generated@@305)
 :no-pattern (type $generated@@306)
 :no-pattern ($generated $generated@@305)
 :no-pattern ($generated@@0 $generated@@305)
 :no-pattern ($generated $generated@@306)
 :no-pattern ($generated@@0 $generated@@306)
)))
 :pattern ( ($generated@@134 $generated@@304))
)))
(assert (forall (($generated@@308 T@T) ) (! (= (type ($generated@@307 $generated@@308)) ($generated@@152 $generated@@308))
 :pattern ( ($generated@@307 $generated@@308))
)))
(assert (forall (($generated@@309 T@T) ) (! (= ($generated@@153 ($generated@@307 $generated@@309)) 0)
 :pattern ( ($generated@@307 $generated@@309))
)))
(assert (forall (($generated@@310 T@U) ($generated@@311 Int) ) (! (let (($generated@@312 ($generated@@154 (type $generated@@310))))
 (=> (= (type $generated@@310) ($generated@@152 $generated@@312)) (=> (and (< 0 $generated@@311) (<= $generated@@311 ($generated@@153 $generated@@310))) (< ($generated@@300 ($generated@@150 $generated@@310 $generated@@311)) ($generated@@300 $generated@@310)))))
 :pattern ( ($generated@@300 ($generated@@150 $generated@@310 $generated@@311)))
)))
(assert (forall (($generated@@313 T@U) ($generated@@314 T@U) ) (! (let (($generated@@315 (type $generated@@314)))
 (=> (= (type $generated@@313) ($generated@@152 $generated@@315)) (= ($generated@@153 ($generated@@151 $generated@@313 $generated@@314)) (+ 1 ($generated@@153 $generated@@313)))))
 :pattern ( ($generated@@151 $generated@@313 $generated@@314))
)))
(assert (forall (($generated@@317 T@U) ) (! (= (type ($generated@@316 $generated@@317)) $generated@@145)
 :pattern ( ($generated@@316 $generated@@317))
)))
(assert (forall (($generated@@318 T@U) ($generated@@319 T@U) ($generated@@320 T@U) ) (!  (=> (and (= (type $generated@@319) $generated@@64) (= (type $generated@@320) ($generated@@76 $generated@@77 $generated@@78))) (= ($generated@@283 ($generated@@316 $generated@@318) $generated@@319 $generated@@320) ($generated@@74 $generated@@318 $generated@@319 $generated@@320)))
 :pattern ( ($generated@@283 ($generated@@316 $generated@@318) $generated@@319 $generated@@320))
)))
(assert (forall (($generated@@321 T@U) ($generated@@322 Int) ($generated@@323 Int) ) (! (let (($generated@@324 ($generated@@154 (type $generated@@321))))
 (=> (= (type $generated@@321) ($generated@@152 $generated@@324)) (=> (and (and (<= 0 $generated@@322) (<= 0 $generated@@323)) (< $generated@@323 (- ($generated@@153 $generated@@321) $generated@@322))) (= ($generated@@274 ($generated@@150 $generated@@321 $generated@@322) $generated@@323) ($generated@@274 $generated@@321 (+ $generated@@323 $generated@@322))))))
 :weight 25
 :pattern ( ($generated@@274 ($generated@@150 $generated@@321 $generated@@322) $generated@@323))
)))
(assert (forall (($generated@@327 T@T) ) (! (= (type ($generated@@326 $generated@@327)) ($generated@@76 $generated@@327 $generated@@2))
 :pattern ( ($generated@@326 $generated@@327))
)))
(assert (forall (($generated@@328 T@U) ) (! (let (($generated@@329 ($generated@@79 (type $generated@@328))))
 (=> (= (type $generated@@328) ($generated@@76 $generated@@329 $generated@@2)) (and (= (= ($generated@@325 $generated@@328) 0) (= $generated@@328 ($generated@@326 $generated@@329))) (=> (not (= ($generated@@325 $generated@@328) 0)) (exists (($generated@@330 T@U) ) (!  (and (= (type $generated@@330) $generated@@329) (< 0 ($generated ($generated@@81 $generated@@328 $generated@@330))))
 :no-pattern (type $generated@@330)
 :no-pattern ($generated $generated@@330)
 :no-pattern ($generated@@0 $generated@@330)
))))))
 :pattern ( ($generated@@325 $generated@@328))
)))
(assert  (and (and (and (and (forall (($generated@@336 T@T) ($generated@@337 T@T) ) (= ($generated@@1 ($generated@@333 $generated@@336 $generated@@337)) 18)) (forall (($generated@@338 T@T) ($generated@@339 T@T) ) (! (= ($generated@@334 ($generated@@333 $generated@@338 $generated@@339)) $generated@@338)
 :pattern ( ($generated@@333 $generated@@338 $generated@@339))
))) (forall (($generated@@340 T@T) ($generated@@341 T@T) ) (! (= ($generated@@335 ($generated@@333 $generated@@340 $generated@@341)) $generated@@341)
 :pattern ( ($generated@@333 $generated@@340 $generated@@341))
))) (forall (($generated@@342 T@U) ) (! (let (($generated@@343 ($generated@@334 (type $generated@@342))))
(= (type ($generated@@331 $generated@@342)) ($generated@@76 $generated@@343 $generated@@4)))
 :pattern ( ($generated@@331 $generated@@342))
))) (forall (($generated@@344 T@T) ($generated@@345 T@T) ) (! (= (type ($generated@@332 $generated@@344 $generated@@345)) ($generated@@333 $generated@@344 $generated@@345))
 :pattern ( ($generated@@332 $generated@@344 $generated@@345))
))))
(assert (forall (($generated@@346 T@U) ($generated@@347 T@T) ) (! (let (($generated@@348 (type $generated@@346)))
 (not ($generated@@0 ($generated@@81 ($generated@@331 ($generated@@332 $generated@@348 $generated@@347)) $generated@@346))))
 :pattern ( (let (($generated@@348 (type $generated@@346)))
($generated@@81 ($generated@@331 ($generated@@332 $generated@@348 $generated@@347)) $generated@@346)))
)))
(assert  (and (and (and (and (forall (($generated@@354 T@T) ($generated@@355 T@T) ) (= ($generated@@1 ($generated@@351 $generated@@354 $generated@@355)) 19)) (forall (($generated@@356 T@T) ($generated@@357 T@T) ) (! (= ($generated@@352 ($generated@@351 $generated@@356 $generated@@357)) $generated@@356)
 :pattern ( ($generated@@351 $generated@@356 $generated@@357))
))) (forall (($generated@@358 T@T) ($generated@@359 T@T) ) (! (= ($generated@@353 ($generated@@351 $generated@@358 $generated@@359)) $generated@@359)
 :pattern ( ($generated@@351 $generated@@358 $generated@@359))
))) (forall (($generated@@360 T@U) ) (! (let (($generated@@361 ($generated@@352 (type $generated@@360))))
(= (type ($generated@@349 $generated@@360)) ($generated@@76 $generated@@361 $generated@@4)))
 :pattern ( ($generated@@349 $generated@@360))
))) (forall (($generated@@362 T@T) ($generated@@363 T@T) ) (! (= (type ($generated@@350 $generated@@362 $generated@@363)) ($generated@@351 $generated@@362 $generated@@363))
 :pattern ( ($generated@@350 $generated@@362 $generated@@363))
))))
(assert (forall (($generated@@364 T@U) ($generated@@365 T@T) ) (! (let (($generated@@366 (type $generated@@364)))
 (not ($generated@@0 ($generated@@81 ($generated@@349 ($generated@@350 $generated@@366 $generated@@365)) $generated@@364))))
 :pattern ( (let (($generated@@366 (type $generated@@364)))
($generated@@81 ($generated@@349 ($generated@@350 $generated@@366 $generated@@365)) $generated@@364)))
)))
(assert (forall (($generated@@367 T@U) ($generated@@368 T@U) ) (! (let (($generated@@369 ($generated@@154 (type $generated@@367))))
 (=> (and (= (type $generated@@367) ($generated@@152 $generated@@369)) (= (type $generated@@368) ($generated@@152 $generated@@369))) (= ($generated@@153 ($generated@@229 $generated@@367 $generated@@368)) (+ ($generated@@153 $generated@@367) ($generated@@153 $generated@@368)))))
 :pattern ( ($generated@@153 ($generated@@229 $generated@@367 $generated@@368)))
)))
(assert (forall (($generated@@370 T@U) ) (! (let (($generated@@371 ($generated@@79 (type $generated@@370))))
 (=> (= (type $generated@@370) ($generated@@76 $generated@@371 $generated@@2)) (= ($generated@@168 $generated@@370) (forall (($generated@@372 T@U) ) (!  (=> (= (type $generated@@372) $generated@@371) (and (<= 0 ($generated ($generated@@81 $generated@@370 $generated@@372))) (<= ($generated ($generated@@81 $generated@@370 $generated@@372)) ($generated@@325 $generated@@370))))
 :pattern ( ($generated@@81 $generated@@370 $generated@@372))
)))))
 :pattern ( ($generated@@168 $generated@@370))
)))
(assert (forall (($generated@@373 T@U) ($generated@@374 Int) ($generated@@375 T@U) ) (! (let (($generated@@376 (type $generated@@375)))
 (=> (= (type $generated@@373) ($generated@@152 $generated@@376)) (and (=> (= $generated@@374 ($generated@@153 $generated@@373)) (= ($generated@@274 ($generated@@151 $generated@@373 $generated@@375) $generated@@374) $generated@@375)) (=> (not (= $generated@@374 ($generated@@153 $generated@@373))) (= ($generated@@274 ($generated@@151 $generated@@373 $generated@@375) $generated@@374) ($generated@@274 $generated@@373 $generated@@374))))))
 :pattern ( ($generated@@274 ($generated@@151 $generated@@373 $generated@@375) $generated@@374))
)))
(assert (forall (($generated@@377 T@U) ) (! (let (($generated@@378 ($generated@@335 (type $generated@@377))))
(let (($generated@@379 ($generated@@334 (type $generated@@377))))
 (=> (= (type $generated@@377) ($generated@@333 $generated@@379 $generated@@378)) (or (= $generated@@377 ($generated@@332 $generated@@379 $generated@@378)) (exists (($generated@@380 T@U) ) (!  (and (= (type $generated@@380) $generated@@379) ($generated@@0 ($generated@@81 ($generated@@331 $generated@@377) $generated@@380)))
 :no-pattern (type $generated@@380)
 :no-pattern ($generated $generated@@380)
 :no-pattern ($generated@@0 $generated@@380)
))))))
 :pattern ( ($generated@@331 $generated@@377))
)))
(assert (forall (($generated@@382 T@U) ) (! (let (($generated@@383 ($generated@@335 (type $generated@@382))))
(= (type ($generated@@381 $generated@@382)) ($generated@@76 $generated@@383 $generated@@4)))
 :pattern ( ($generated@@381 $generated@@382))
)))
(assert (forall (($generated@@384 T@U) ) (! (let (($generated@@385 ($generated@@335 (type $generated@@384))))
(let (($generated@@386 ($generated@@334 (type $generated@@384))))
 (=> (= (type $generated@@384) ($generated@@333 $generated@@386 $generated@@385)) (or (= $generated@@384 ($generated@@332 $generated@@386 $generated@@385)) (exists (($generated@@387 T@U) ) (!  (and (= (type $generated@@387) $generated@@385) ($generated@@0 ($generated@@81 ($generated@@381 $generated@@384) $generated@@387)))
 :no-pattern (type $generated@@387)
 :no-pattern ($generated $generated@@387)
 :no-pattern ($generated@@0 $generated@@387)
))))))
 :pattern ( ($generated@@381 $generated@@384))
)))
(assert (forall (($generated@@388 T@U) ) (! (let (($generated@@389 ($generated@@353 (type $generated@@388))))
(let (($generated@@390 ($generated@@352 (type $generated@@388))))
 (=> (= (type $generated@@388) ($generated@@351 $generated@@390 $generated@@389)) (or (= $generated@@388 ($generated@@350 $generated@@390 $generated@@389)) (exists (($generated@@391 T@U) ) (!  (and (= (type $generated@@391) $generated@@390) ($generated@@0 ($generated@@81 ($generated@@349 $generated@@388) $generated@@391)))
 :no-pattern (type $generated@@391)
 :no-pattern ($generated $generated@@391)
 :no-pattern ($generated@@0 $generated@@391)
))))))
 :pattern ( ($generated@@349 $generated@@388))
)))
(assert (forall (($generated@@393 T@U) ) (! (let (($generated@@394 ($generated@@353 (type $generated@@393))))
(= (type ($generated@@392 $generated@@393)) ($generated@@76 $generated@@394 $generated@@4)))
 :pattern ( ($generated@@392 $generated@@393))
)))
(assert (forall (($generated@@395 T@U) ) (! (let (($generated@@396 ($generated@@353 (type $generated@@395))))
(let (($generated@@397 ($generated@@352 (type $generated@@395))))
 (=> (= (type $generated@@395) ($generated@@351 $generated@@397 $generated@@396)) (or (= $generated@@395 ($generated@@350 $generated@@397 $generated@@396)) (exists (($generated@@398 T@U) ) (!  (and (= (type $generated@@398) $generated@@396) ($generated@@0 ($generated@@81 ($generated@@392 $generated@@395) $generated@@398)))
 :no-pattern (type $generated@@398)
 :no-pattern ($generated $generated@@398)
 :no-pattern ($generated@@0 $generated@@398)
))))))
 :pattern ( ($generated@@392 $generated@@395))
)))
(assert (forall (($generated@@399 T@U) ($generated@@400 T@U) ) (!  (=> (and (= (type $generated@@399) ($generated@@76 $generated@@145 $generated@@2)) (= (type $generated@@400) $generated@@64)) (= ($generated@@132 $generated@@399 ($generated@@167 $generated@@400)) (forall (($generated@@401 T@U) ) (!  (=> (and (= (type $generated@@401) $generated@@145) (< 0 ($generated ($generated@@81 $generated@@399 $generated@@401)))) ($generated@@241 $generated@@401 $generated@@400))
 :pattern ( ($generated@@81 $generated@@399 $generated@@401))
))))
 :pattern ( ($generated@@132 $generated@@399 ($generated@@167 $generated@@400)))
)))
(assert (forall (($generated@@402 T@U) ($generated@@403 T@U) ($generated@@404 T@U) ) (!  (=> (and (and (= (type $generated@@402) ($generated@@76 $generated@@145 $generated@@4)) (= (type $generated@@403) $generated@@64)) (= (type $generated@@404) ($generated@@76 $generated@@77 $generated@@78))) (= ($generated@@74 $generated@@402 ($generated@@253 $generated@@403) $generated@@404) (forall (($generated@@405 T@U) ) (!  (=> (and (= (type $generated@@405) $generated@@145) ($generated@@0 ($generated@@81 $generated@@402 $generated@@405))) ($generated@@283 $generated@@405 $generated@@403 $generated@@404))
 :pattern ( ($generated@@81 $generated@@402 $generated@@405))
))))
 :pattern ( ($generated@@74 $generated@@402 ($generated@@253 $generated@@403) $generated@@404))
)))
(assert (forall (($generated@@406 T@U) ($generated@@407 T@U) ($generated@@408 T@U) ) (!  (=> (and (and (= (type $generated@@406) ($generated@@76 $generated@@145 $generated@@4)) (= (type $generated@@407) $generated@@64)) (= (type $generated@@408) ($generated@@76 $generated@@77 $generated@@78))) (= ($generated@@74 $generated@@406 ($generated@@258 $generated@@407) $generated@@408) (forall (($generated@@409 T@U) ) (!  (=> (and (= (type $generated@@409) $generated@@145) ($generated@@0 ($generated@@81 $generated@@406 $generated@@409))) ($generated@@283 $generated@@409 $generated@@407 $generated@@408))
 :pattern ( ($generated@@81 $generated@@406 $generated@@409))
))))
 :pattern ( ($generated@@74 $generated@@406 ($generated@@258 $generated@@407) $generated@@408))
)))
(assert (forall (($generated@@410 T@U) ) (! (let (($generated@@411 (type $generated@@410)))
(= ($generated ($generated@@81 ($generated@@326 $generated@@411) $generated@@410)) 0))
 :pattern ( (let (($generated@@411 (type $generated@@410)))
($generated@@81 ($generated@@326 $generated@@411) $generated@@410)))
)))
(assert  (and (and (forall (($generated@@415 T@U) ) (! (= (type ($generated@@412 $generated@@415)) ($generated@@76 $generated@@145 $generated@@4))
 :pattern ( ($generated@@412 $generated@@415))
)) (forall (($generated@@416 T@T) ($generated@@417 T@U) ) (! (= (type ($generated@@413 $generated@@416 $generated@@417)) $generated@@416)
 :pattern ( ($generated@@413 $generated@@416 $generated@@417))
))) (forall (($generated@@418 T@U) ) (! (let (($generated@@419 ($generated@@335 (type $generated@@418))))
(let (($generated@@420 ($generated@@334 (type $generated@@418))))
(= (type ($generated@@414 $generated@@418)) ($generated@@76 $generated@@420 $generated@@419))))
 :pattern ( ($generated@@414 $generated@@418))
))))
(assert (forall (($generated@@421 T@U) ($generated@@422 T@U) ) (!  (=> (and (= (type $generated@@421) ($generated@@333 $generated@@145 $generated@@145)) (= (type $generated@@422) $generated@@145)) (= ($generated@@0 ($generated@@81 ($generated@@412 $generated@@421) $generated@@422))  (and ($generated@@0 ($generated@@81 ($generated@@331 $generated@@421) ($generated@@143 ($generated@@413 $generated@@136 $generated@@422)))) (= ($generated@@81 ($generated@@414 $generated@@421) ($generated@@143 ($generated@@413 $generated@@136 $generated@@422))) ($generated@@144 ($generated@@413 $generated@@136 $generated@@422))))))
 :pattern ( ($generated@@81 ($generated@@412 $generated@@421) $generated@@422))
)))
(assert  (and (forall (($generated@@425 T@U) ) (! (= (type ($generated@@423 $generated@@425)) ($generated@@76 $generated@@145 $generated@@4))
 :pattern ( ($generated@@423 $generated@@425))
)) (forall (($generated@@426 T@U) ) (! (let (($generated@@427 ($generated@@353 (type $generated@@426))))
(let (($generated@@428 ($generated@@352 (type $generated@@426))))
(= (type ($generated@@424 $generated@@426)) ($generated@@76 $generated@@428 $generated@@427))))
 :pattern ( ($generated@@424 $generated@@426))
))))
(assert (forall (($generated@@429 T@U) ($generated@@430 T@U) ) (!  (=> (and (= (type $generated@@429) ($generated@@351 $generated@@145 $generated@@145)) (= (type $generated@@430) $generated@@145)) (= ($generated@@0 ($generated@@81 ($generated@@423 $generated@@429) $generated@@430))  (and ($generated@@0 ($generated@@81 ($generated@@349 $generated@@429) ($generated@@143 ($generated@@413 $generated@@136 $generated@@430)))) (= ($generated@@81 ($generated@@424 $generated@@429) ($generated@@143 ($generated@@413 $generated@@136 $generated@@430))) ($generated@@144 ($generated@@413 $generated@@136 $generated@@430))))))
 :pattern ( ($generated@@81 ($generated@@423 $generated@@429) $generated@@430))
)))
(assert (forall (($generated@@431 T@U) ($generated@@432 T@U) ) (! (let (($generated@@433 (type $generated@@432)))
(let (($generated@@434 ($generated@@334 (type $generated@@431))))
 (=> (= (type $generated@@431) ($generated@@333 $generated@@434 $generated@@433)) (= ($generated@@0 ($generated@@81 ($generated@@381 $generated@@431) $generated@@432)) (exists (($generated@@435 T@U) ) (!  (and (= (type $generated@@435) $generated@@434) (and ($generated@@0 ($generated@@81 ($generated@@331 $generated@@431) $generated@@435)) (= $generated@@432 ($generated@@81 ($generated@@414 $generated@@431) $generated@@435))))
 :pattern ( ($generated@@81 ($generated@@331 $generated@@431) $generated@@435))
 :pattern ( ($generated@@81 ($generated@@414 $generated@@431) $generated@@435))
))))))
 :pattern ( ($generated@@81 ($generated@@381 $generated@@431) $generated@@432))
)))
(assert (forall (($generated@@436 T@U) ($generated@@437 T@U) ) (! (let (($generated@@438 (type $generated@@437)))
(let (($generated@@439 ($generated@@352 (type $generated@@436))))
 (=> (= (type $generated@@436) ($generated@@351 $generated@@439 $generated@@438)) (= ($generated@@0 ($generated@@81 ($generated@@392 $generated@@436) $generated@@437)) (exists (($generated@@440 T@U) ) (!  (and (= (type $generated@@440) $generated@@439) (and ($generated@@0 ($generated@@81 ($generated@@349 $generated@@436) $generated@@440)) (= $generated@@437 ($generated@@81 ($generated@@424 $generated@@436) $generated@@440))))
 :pattern ( ($generated@@81 ($generated@@349 $generated@@436) $generated@@440))
 :pattern ( ($generated@@81 ($generated@@424 $generated@@436) $generated@@440))
))))))
 :pattern ( ($generated@@81 ($generated@@392 $generated@@436) $generated@@437))
)))
(assert (forall (($generated@@442 T@U) ($generated@@443 T@U) ) (! (= (type ($generated@@441 $generated@@442 $generated@@443)) $generated@@64)
 :pattern ( ($generated@@441 $generated@@442 $generated@@443))
)))
(assert (forall (($generated@@444 T@U) ($generated@@445 T@U) ($generated@@446 T@U) ($generated@@447 T@U) ) (!  (=> (and (and (and (= (type $generated@@444) ($generated@@333 $generated@@145 $generated@@145)) (= (type $generated@@445) $generated@@64)) (= (type $generated@@446) $generated@@64)) (= (type $generated@@447) ($generated@@76 $generated@@77 $generated@@78))) (= ($generated@@74 $generated@@444 ($generated@@441 $generated@@445 $generated@@446) $generated@@447) (forall (($generated@@448 T@U) ) (!  (=> (and (= (type $generated@@448) $generated@@145) ($generated@@0 ($generated@@81 ($generated@@331 $generated@@444) $generated@@448))) (and ($generated@@283 ($generated@@81 ($generated@@414 $generated@@444) $generated@@448) $generated@@446 $generated@@447) ($generated@@283 $generated@@448 $generated@@445 $generated@@447)))
 :pattern ( ($generated@@81 ($generated@@414 $generated@@444) $generated@@448))
 :pattern ( ($generated@@81 ($generated@@331 $generated@@444) $generated@@448))
))))
 :pattern ( ($generated@@74 $generated@@444 ($generated@@441 $generated@@445 $generated@@446) $generated@@447))
)))
(assert (forall (($generated@@450 T@U) ($generated@@451 T@U) ) (! (= (type ($generated@@449 $generated@@450 $generated@@451)) $generated@@64)
 :pattern ( ($generated@@449 $generated@@450 $generated@@451))
)))
(assert (forall (($generated@@452 T@U) ($generated@@453 T@U) ($generated@@454 T@U) ($generated@@455 T@U) ) (!  (=> (and (and (and (= (type $generated@@452) ($generated@@351 $generated@@145 $generated@@145)) (= (type $generated@@453) $generated@@64)) (= (type $generated@@454) $generated@@64)) (= (type $generated@@455) ($generated@@76 $generated@@77 $generated@@78))) (= ($generated@@74 $generated@@452 ($generated@@449 $generated@@453 $generated@@454) $generated@@455) (forall (($generated@@456 T@U) ) (!  (=> (and (= (type $generated@@456) $generated@@145) ($generated@@0 ($generated@@81 ($generated@@349 $generated@@452) $generated@@456))) (and ($generated@@283 ($generated@@81 ($generated@@424 $generated@@452) $generated@@456) $generated@@454 $generated@@455) ($generated@@283 $generated@@456 $generated@@453 $generated@@455)))
 :pattern ( ($generated@@81 ($generated@@424 $generated@@452) $generated@@456))
 :pattern ( ($generated@@81 ($generated@@349 $generated@@452) $generated@@456))
))))
 :pattern ( ($generated@@74 $generated@@452 ($generated@@449 $generated@@453 $generated@@454) $generated@@455))
)))
(assert (forall (($generated@@457 T@U) ($generated@@458 T@U) ) (! (let (($generated@@459 ($generated@@154 (type $generated@@457))))
 (=> (and (and (= (type $generated@@457) ($generated@@152 $generated@@459)) (= (type $generated@@458) ($generated@@152 $generated@@459))) ($generated@@295 $generated@@457 $generated@@458)) (= $generated@@457 $generated@@458)))
 :pattern ( ($generated@@295 $generated@@457 $generated@@458))
)))
(assert (forall (($generated@@460 T@U) ($generated@@461 Int) ) (! (let (($generated@@462 ($generated@@154 (type $generated@@460))))
 (=> (= (type $generated@@460) ($generated@@152 $generated@@462)) (=> (and (<= 0 $generated@@461) (<= $generated@@461 ($generated@@153 $generated@@460))) (= ($generated@@153 ($generated@@228 $generated@@460 $generated@@461)) $generated@@461))))
 :pattern ( ($generated@@153 ($generated@@228 $generated@@460 $generated@@461)))
)))
(assert (forall (($generated@@464 T@T) ) (! (= (type ($generated@@463 $generated@@464)) ($generated@@76 $generated@@464 $generated@@4))
 :pattern ( ($generated@@463 $generated@@464))
)))
(assert (forall (($generated@@465 T@U) ) (! (let (($generated@@466 ($generated@@353 (type $generated@@465))))
(let (($generated@@467 ($generated@@352 (type $generated@@465))))
 (=> (= (type $generated@@465) ($generated@@351 $generated@@467 $generated@@466)) (= (= $generated@@465 ($generated@@350 $generated@@467 $generated@@466)) (= ($generated@@349 $generated@@465) ($generated@@463 $generated@@467))))))
 :pattern ( ($generated@@349 $generated@@465))
)))
(assert (forall (($generated@@468 T@U) ) (! (let (($generated@@469 ($generated@@353 (type $generated@@468))))
(let (($generated@@470 ($generated@@352 (type $generated@@468))))
 (=> (= (type $generated@@468) ($generated@@351 $generated@@470 $generated@@469)) (= (= $generated@@468 ($generated@@350 $generated@@470 $generated@@469)) (= ($generated@@392 $generated@@468) ($generated@@463 $generated@@469))))))
 :pattern ( ($generated@@392 $generated@@468))
)))
(assert (forall (($generated@@471 T@U) ) (! (let (($generated@@472 ($generated@@353 (type $generated@@471))))
(let (($generated@@473 ($generated@@352 (type $generated@@471))))
 (=> (= (type $generated@@471) ($generated@@351 $generated@@473 $generated@@472)) (= (= $generated@@471 ($generated@@350 $generated@@473 $generated@@472)) (= ($generated@@423 $generated@@471) ($generated@@463 $generated@@145))))))
 :pattern ( ($generated@@423 $generated@@471))
)))
(assert (forall (($generated@@474 T@U) ) (! (let (($generated@@475 ($generated@@335 (type $generated@@474))))
(let (($generated@@476 ($generated@@334 (type $generated@@474))))
 (=> (= (type $generated@@474) ($generated@@333 $generated@@476 $generated@@475)) (or (= $generated@@474 ($generated@@332 $generated@@476 $generated@@475)) (exists (($generated@@477 T@U) ($generated@@478 T@U) ) (!  (and (and (= (type $generated@@477) $generated@@145) (= (type $generated@@478) $generated@@145)) ($generated@@0 ($generated@@81 ($generated@@412 $generated@@474) ($generated@@316 ($generated@@240 $generated@@477 $generated@@478)))))
 :no-pattern (type $generated@@477)
 :no-pattern (type $generated@@478)
 :no-pattern ($generated $generated@@477)
 :no-pattern ($generated@@0 $generated@@477)
 :no-pattern ($generated $generated@@478)
 :no-pattern ($generated@@0 $generated@@478)
))))))
 :pattern ( ($generated@@412 $generated@@474))
)))
(assert (forall (($generated@@479 T@U) ) (! (let (($generated@@480 ($generated@@353 (type $generated@@479))))
(let (($generated@@481 ($generated@@352 (type $generated@@479))))
 (=> (= (type $generated@@479) ($generated@@351 $generated@@481 $generated@@480)) (or (= $generated@@479 ($generated@@350 $generated@@481 $generated@@480)) (exists (($generated@@482 T@U) ($generated@@483 T@U) ) (!  (and (and (= (type $generated@@482) $generated@@145) (= (type $generated@@483) $generated@@145)) ($generated@@0 ($generated@@81 ($generated@@423 $generated@@479) ($generated@@316 ($generated@@240 $generated@@482 $generated@@483)))))
 :no-pattern (type $generated@@482)
 :no-pattern (type $generated@@483)
 :no-pattern ($generated $generated@@482)
 :no-pattern ($generated@@0 $generated@@482)
 :no-pattern ($generated $generated@@483)
 :no-pattern ($generated@@0 $generated@@483)
))))))
 :pattern ( ($generated@@423 $generated@@479))
)))
(assert (forall (($generated@@484 T@U) ) (!  (=> (and (= (type $generated@@484) $generated@@145) ($generated@@241 $generated@@484 $generated@@46)) (and (= ($generated@@316 ($generated@@413 $generated@@2 $generated@@484)) $generated@@484) ($generated@@132 ($generated@@413 $generated@@2 $generated@@484) $generated@@46)))
 :pattern ( ($generated@@241 $generated@@484 $generated@@46))
)))
(assert (forall (($generated@@485 T@U) ) (!  (=> (and (= (type $generated@@485) $generated@@145) ($generated@@241 $generated@@485 $generated@@47)) (and (= ($generated@@316 ($generated@@413 $generated@@3 $generated@@485)) $generated@@485) ($generated@@132 ($generated@@413 $generated@@3 $generated@@485) $generated@@47)))
 :pattern ( ($generated@@241 $generated@@485 $generated@@47))
)))
(assert (forall (($generated@@486 T@U) ) (!  (=> (and (= (type $generated@@486) $generated@@145) ($generated@@241 $generated@@486 $generated@@44)) (and (= ($generated@@316 ($generated@@413 $generated@@4 $generated@@486)) $generated@@486) ($generated@@132 ($generated@@413 $generated@@4 $generated@@486) $generated@@44)))
 :pattern ( ($generated@@241 $generated@@486 $generated@@44))
)))
(assert (= ($generated@@1 $generated@@487) 20))
(assert (forall (($generated@@488 T@U) ) (!  (=> (and (= (type $generated@@488) $generated@@145) ($generated@@241 $generated@@488 $generated@@45)) (and (= ($generated@@316 ($generated@@413 $generated@@487 $generated@@488)) $generated@@488) ($generated@@132 ($generated@@413 $generated@@487 $generated@@488) $generated@@45)))
 :pattern ( ($generated@@241 $generated@@488 $generated@@45))
)))
(assert (forall (($generated@@489 T@U) ($generated@@490 T@U) ) (!  (=> (= (type $generated@@490) $generated@@64) (= ($generated@@241 ($generated@@316 $generated@@489) $generated@@490) ($generated@@132 $generated@@489 $generated@@490)))
 :pattern ( ($generated@@241 ($generated@@316 $generated@@489) $generated@@490))
)))
(assert (forall (($generated@@491 T@U) ) (! (let (($generated@@492 ($generated@@79 (type $generated@@491))))
 (=> (= (type $generated@@491) ($generated@@76 $generated@@492 $generated@@2)) (<= 0 ($generated@@325 $generated@@491))))
 :pattern ( ($generated@@325 $generated@@491))
)))
(assert (forall (($generated@@493 T@U) ) (! (let (($generated@@494 ($generated@@154 (type $generated@@493))))
 (=> (= (type $generated@@493) ($generated@@152 $generated@@494)) (<= 0 ($generated@@153 $generated@@493))))
 :pattern ( ($generated@@153 $generated@@493))
)))
(assert (forall (($generated@@495 T@U) ($generated@@496 Int) ($generated@@497 Int) ) (! (let (($generated@@498 ($generated@@154 (type $generated@@495))))
 (=> (= (type $generated@@495) ($generated@@152 $generated@@498)) (=> (and (and (<= 0 $generated@@496) (< $generated@@496 $generated@@497)) (<= $generated@@497 ($generated@@153 $generated@@495))) (< ($generated@@300 ($generated@@229 ($generated@@228 $generated@@495 $generated@@496) ($generated@@150 $generated@@495 $generated@@497))) ($generated@@300 $generated@@495)))))
 :pattern ( ($generated@@300 ($generated@@229 ($generated@@228 $generated@@495 $generated@@496) ($generated@@150 $generated@@495 $generated@@497))))
)))
(assert (forall (($generated@@500 T@U) ) (! (= (type ($generated@@499 $generated@@500)) $generated@@64)
 :pattern ( ($generated@@499 $generated@@500))
)))
(assert (forall (($generated@@501 T@U) ($generated@@502 T@U) ) (!  (=> (and (= (type $generated@@501) $generated@@64) (= (type $generated@@502) $generated@@64)) (= ($generated@@499 ($generated@@441 $generated@@501 $generated@@502)) $generated@@501))
 :pattern ( ($generated@@441 $generated@@501 $generated@@502))
)))
(assert (forall (($generated@@504 T@U) ) (! (= (type ($generated@@503 $generated@@504)) $generated@@64)
 :pattern ( ($generated@@503 $generated@@504))
)))
(assert (forall (($generated@@505 T@U) ($generated@@506 T@U) ) (!  (=> (and (= (type $generated@@505) $generated@@64) (= (type $generated@@506) $generated@@64)) (= ($generated@@503 ($generated@@441 $generated@@505 $generated@@506)) $generated@@506))
 :pattern ( ($generated@@441 $generated@@505 $generated@@506))
)))
(assert (forall (($generated@@507 T@U) ($generated@@508 T@U) ) (!  (=> (and (= (type $generated@@507) $generated@@64) (= (type $generated@@508) $generated@@64)) (= ($generated@@72 ($generated@@441 $generated@@507 $generated@@508)) $generated@@58))
 :pattern ( ($generated@@441 $generated@@507 $generated@@508))
)))
(assert (forall (($generated@@510 T@U) ) (! (= (type ($generated@@509 $generated@@510)) $generated@@64)
 :pattern ( ($generated@@509 $generated@@510))
)))
(assert (forall (($generated@@511 T@U) ($generated@@512 T@U) ) (!  (=> (and (= (type $generated@@511) $generated@@64) (= (type $generated@@512) $generated@@64)) (= ($generated@@509 ($generated@@449 $generated@@511 $generated@@512)) $generated@@511))
 :pattern ( ($generated@@449 $generated@@511 $generated@@512))
)))
(assert (forall (($generated@@514 T@U) ) (! (= (type ($generated@@513 $generated@@514)) $generated@@64)
 :pattern ( ($generated@@513 $generated@@514))
)))
(assert (forall (($generated@@515 T@U) ($generated@@516 T@U) ) (!  (=> (and (= (type $generated@@515) $generated@@64) (= (type $generated@@516) $generated@@64)) (= ($generated@@513 ($generated@@449 $generated@@515 $generated@@516)) $generated@@516))
 :pattern ( ($generated@@449 $generated@@515 $generated@@516))
)))
(assert (forall (($generated@@517 T@U) ($generated@@518 T@U) ) (!  (=> (and (= (type $generated@@517) $generated@@64) (= (type $generated@@518) $generated@@64)) (= ($generated@@72 ($generated@@449 $generated@@517 $generated@@518)) $generated@@59))
 :pattern ( ($generated@@449 $generated@@517 $generated@@518))
)))
(assert (forall (($generated@@519 T@U) ($generated@@520 T@U) ) (!  (=> (and (= (type $generated@@519) $generated@@145) (= (type $generated@@520) $generated@@145)) (= ($generated@@292 ($generated@@240 $generated@@519 $generated@@520)) $generated@@61))
 :pattern ( ($generated@@240 $generated@@519 $generated@@520))
)))
(assert (forall (($generated@@522 T@U) ) (! (= (type ($generated@@521 $generated@@522)) $generated@@64)
 :pattern ( ($generated@@521 $generated@@522))
)))
(assert (forall (($generated@@523 T@U) ($generated@@524 T@U) ) (!  (=> (and (= (type $generated@@523) $generated@@64) (= (type $generated@@524) $generated@@64)) (= ($generated@@521 ($generated@@135 $generated@@523 $generated@@524)) $generated@@523))
 :pattern ( ($generated@@135 $generated@@523 $generated@@524))
)))
(assert (forall (($generated@@526 T@U) ) (! (= (type ($generated@@525 $generated@@526)) $generated@@64)
 :pattern ( ($generated@@525 $generated@@526))
)))
(assert (forall (($generated@@527 T@U) ($generated@@528 T@U) ) (!  (=> (and (= (type $generated@@527) $generated@@64) (= (type $generated@@528) $generated@@64)) (= ($generated@@525 ($generated@@135 $generated@@527 $generated@@528)) $generated@@528))
 :pattern ( ($generated@@135 $generated@@527 $generated@@528))
)))
(assert (forall (($generated@@529 T@U) ($generated@@530 T@U) ) (!  (=> (and (= (type $generated@@529) $generated@@145) (= (type $generated@@530) $generated@@145)) (= ($generated@@143 ($generated@@240 $generated@@529 $generated@@530)) $generated@@529))
 :pattern ( ($generated@@240 $generated@@529 $generated@@530))
)))
(assert (forall (($generated@@531 T@U) ($generated@@532 T@U) ) (!  (=> (and (= (type $generated@@531) $generated@@145) (= (type $generated@@532) $generated@@145)) (= ($generated@@144 ($generated@@240 $generated@@531 $generated@@532)) $generated@@532))
 :pattern ( ($generated@@240 $generated@@531 $generated@@532))
)))
(assert (forall (($generated@@533 T@U) ($generated@@534 T@U) ($generated@@535 T@U) ) (!  (=> (and (and (= (type $generated@@533) ($generated@@152 $generated@@145)) (= (type $generated@@534) $generated@@64)) (= (type $generated@@535) ($generated@@76 $generated@@77 $generated@@78))) (= ($generated@@74 $generated@@533 ($generated@@269 $generated@@534) $generated@@535) (forall (($generated@@536 Int) ) (!  (=> (and (<= 0 $generated@@536) (< $generated@@536 ($generated@@153 $generated@@533))) ($generated@@283 ($generated@@274 $generated@@533 $generated@@536) $generated@@534 $generated@@535))
 :pattern ( ($generated@@274 $generated@@533 $generated@@536))
))))
 :pattern ( ($generated@@74 $generated@@533 ($generated@@269 $generated@@534) $generated@@535))
)))
(assert (forall (($generated@@538 Int) ) (! (= ($generated@@537 ($generated@@75 $generated@@538)) $generated@@538)
 :pattern ( ($generated@@75 $generated@@538))
)))
(assert (forall (($generated@@540 T@U) ) (! (= (type ($generated@@539 $generated@@540)) $generated@@64)
 :pattern ( ($generated@@539 $generated@@540))
)))
(assert (forall (($generated@@541 T@U) ) (!  (=> (= (type $generated@@541) $generated@@64) (= ($generated@@539 ($generated@@253 $generated@@541)) $generated@@541))
 :pattern ( ($generated@@253 $generated@@541))
)))
(assert (forall (($generated@@542 T@U) ) (!  (=> (= (type $generated@@542) $generated@@64) (= ($generated@@72 ($generated@@253 $generated@@542)) $generated@@54))
 :pattern ( ($generated@@253 $generated@@542))
)))
(assert (forall (($generated@@544 T@U) ) (! (= (type ($generated@@543 $generated@@544)) $generated@@64)
 :pattern ( ($generated@@543 $generated@@544))
)))
(assert (forall (($generated@@545 T@U) ) (!  (=> (= (type $generated@@545) $generated@@64) (= ($generated@@543 ($generated@@258 $generated@@545)) $generated@@545))
 :pattern ( ($generated@@258 $generated@@545))
)))
(assert (forall (($generated@@546 T@U) ) (!  (=> (= (type $generated@@546) $generated@@64) (= ($generated@@72 ($generated@@258 $generated@@546)) $generated@@55))
 :pattern ( ($generated@@258 $generated@@546))
)))
(assert (forall (($generated@@548 T@U) ) (! (= (type ($generated@@547 $generated@@548)) $generated@@64)
 :pattern ( ($generated@@547 $generated@@548))
)))
(assert (forall (($generated@@549 T@U) ) (!  (=> (= (type $generated@@549) $generated@@64) (= ($generated@@547 ($generated@@167 $generated@@549)) $generated@@549))
 :pattern ( ($generated@@167 $generated@@549))
)))
(assert (forall (($generated@@550 T@U) ) (!  (=> (= (type $generated@@550) $generated@@64) (= ($generated@@72 ($generated@@167 $generated@@550)) $generated@@56))
 :pattern ( ($generated@@167 $generated@@550))
)))
(assert (forall (($generated@@552 T@U) ) (! (= (type ($generated@@551 $generated@@552)) $generated@@64)
 :pattern ( ($generated@@551 $generated@@552))
)))
(assert (forall (($generated@@553 T@U) ) (!  (=> (= (type $generated@@553) $generated@@64) (= ($generated@@551 ($generated@@269 $generated@@553)) $generated@@553))
 :pattern ( ($generated@@269 $generated@@553))
)))
(assert (forall (($generated@@554 T@U) ) (!  (=> (= (type $generated@@554) $generated@@64) (= ($generated@@72 ($generated@@269 $generated@@554)) $generated@@57))
 :pattern ( ($generated@@269 $generated@@554))
)))
(assert (forall (($generated@@555 T@U) ) (! (let (($generated@@556 (type $generated@@555)))
(= ($generated@@413 $generated@@556 ($generated@@316 $generated@@555)) $generated@@555))
 :pattern ( ($generated@@316 $generated@@555))
)))
(assert (forall (($generated@@557 T@U) ($generated@@558 T@U) ($generated@@559 T@U) ) (!  (=> (and (and (= (type $generated@@557) ($generated@@333 $generated@@145 $generated@@145)) (= (type $generated@@558) $generated@@64)) (= (type $generated@@559) $generated@@64)) (= ($generated@@132 $generated@@557 ($generated@@441 $generated@@558 $generated@@559)) (forall (($generated@@560 T@U) ) (!  (=> (and (= (type $generated@@560) $generated@@145) ($generated@@0 ($generated@@81 ($generated@@331 $generated@@557) $generated@@560))) (and ($generated@@241 ($generated@@81 ($generated@@414 $generated@@557) $generated@@560) $generated@@559) ($generated@@241 $generated@@560 $generated@@558)))
 :pattern ( ($generated@@81 ($generated@@414 $generated@@557) $generated@@560))
 :pattern ( ($generated@@81 ($generated@@331 $generated@@557) $generated@@560))
))))
 :pattern ( ($generated@@132 $generated@@557 ($generated@@441 $generated@@558 $generated@@559)))
)))
(assert (forall (($generated@@561 T@U) ($generated@@562 T@U) ($generated@@563 T@U) ) (!  (=> (and (and (= (type $generated@@561) ($generated@@351 $generated@@145 $generated@@145)) (= (type $generated@@562) $generated@@64)) (= (type $generated@@563) $generated@@64)) (= ($generated@@132 $generated@@561 ($generated@@449 $generated@@562 $generated@@563)) (forall (($generated@@564 T@U) ) (!  (=> (and (= (type $generated@@564) $generated@@145) ($generated@@0 ($generated@@81 ($generated@@349 $generated@@561) $generated@@564))) (and ($generated@@241 ($generated@@81 ($generated@@424 $generated@@561) $generated@@564) $generated@@563) ($generated@@241 $generated@@564 $generated@@562)))
 :pattern ( ($generated@@81 ($generated@@424 $generated@@561) $generated@@564))
 :pattern ( ($generated@@81 ($generated@@349 $generated@@561) $generated@@564))
))))
 :pattern ( ($generated@@132 $generated@@561 ($generated@@449 $generated@@562 $generated@@563)))
)))
(assert (forall (($generated@@567 T@U) ($generated@@568 T@U) ) (!  (=> (and (= (type $generated@@567) $generated@@145) (= (type $generated@@568) $generated@@145)) (< ($generated@@565 $generated@@567) ($generated@@566 ($generated@@240 $generated@@567 $generated@@568))))
 :pattern ( ($generated@@240 $generated@@567 $generated@@568))
)))
(assert (forall (($generated@@569 T@U) ($generated@@570 T@U) ) (!  (=> (and (= (type $generated@@569) $generated@@145) (= (type $generated@@570) $generated@@145)) (< ($generated@@565 $generated@@570) ($generated@@566 ($generated@@240 $generated@@569 $generated@@570))))
 :pattern ( ($generated@@240 $generated@@569 $generated@@570))
)))
(assert (forall (($generated@@571 T@U) ($generated@@572 T@U) ($generated@@573 T@U) ) (!  (=> (and (and (and (= (type $generated@@571) $generated@@145) (= (type $generated@@572) $generated@@64)) (= (type $generated@@573) $generated@@64)) ($generated@@241 $generated@@571 ($generated@@441 $generated@@572 $generated@@573))) (and (= ($generated@@316 ($generated@@413 ($generated@@333 $generated@@145 $generated@@145) $generated@@571)) $generated@@571) ($generated@@132 ($generated@@413 ($generated@@333 $generated@@145 $generated@@145) $generated@@571) ($generated@@441 $generated@@572 $generated@@573))))
 :pattern ( ($generated@@241 $generated@@571 ($generated@@441 $generated@@572 $generated@@573)))
)))
(assert (forall (($generated@@574 T@U) ($generated@@575 T@U) ($generated@@576 T@U) ) (!  (=> (and (and (and (= (type $generated@@574) $generated@@145) (= (type $generated@@575) $generated@@64)) (= (type $generated@@576) $generated@@64)) ($generated@@241 $generated@@574 ($generated@@449 $generated@@575 $generated@@576))) (and (= ($generated@@316 ($generated@@413 ($generated@@351 $generated@@145 $generated@@145) $generated@@574)) $generated@@574) ($generated@@132 ($generated@@413 ($generated@@351 $generated@@145 $generated@@145) $generated@@574) ($generated@@449 $generated@@575 $generated@@576))))
 :pattern ( ($generated@@241 $generated@@574 ($generated@@449 $generated@@575 $generated@@576)))
)))
(assert (forall (($generated@@577 T@U) ($generated@@578 T@U) ($generated@@579 T@U) ) (!  (=> (and (and (and (= (type $generated@@577) $generated@@64) (= (type $generated@@578) $generated@@64)) (= (type $generated@@579) $generated@@145)) ($generated@@241 $generated@@579 ($generated@@135 $generated@@577 $generated@@578))) (and (= ($generated@@316 ($generated@@413 $generated@@136 $generated@@579)) $generated@@579) ($generated@@132 ($generated@@413 $generated@@136 $generated@@579) ($generated@@135 $generated@@577 $generated@@578))))
 :pattern ( ($generated@@241 $generated@@579 ($generated@@135 $generated@@577 $generated@@578)))
)))
(assert (forall (($generated@@580 T@U) ) (! (let (($generated@@581 (type $generated@@580)))
 (not ($generated@@0 ($generated@@81 ($generated@@463 $generated@@581) $generated@@580))))
 :pattern ( (let (($generated@@581 (type $generated@@580)))
($generated@@81 ($generated@@463 $generated@@581) $generated@@580)))
)))
(assert (forall (($generated@@583 T@U) ) (! (= (type ($generated@@582 $generated@@583)) $generated@@69)
 :pattern ( ($generated@@582 $generated@@583))
)))
(assert (forall (($generated@@584 T@U) ($generated@@585 T@U) ) (!  (=> (and (= (type $generated@@584) $generated@@64) (= (type $generated@@585) $generated@@64)) (and (= ($generated@@72 ($generated@@135 $generated@@584 $generated@@585)) $generated@@62) (= ($generated@@582 ($generated@@135 $generated@@584 $generated@@585)) $generated@@63)))
 :pattern ( ($generated@@135 $generated@@584 $generated@@585))
)))
(assert  (and (forall (($generated@@588 T@U) ) (! (let (($generated@@589 ($generated@@154 (type $generated@@588))))
(= (type ($generated@@586 $generated@@588)) ($generated@@152 $generated@@589)))
 :pattern ( ($generated@@586 $generated@@588))
)) (forall (($generated@@590 T@U) ) (! (let (($generated@@591 ($generated@@154 (type $generated@@590))))
(= (type ($generated@@587 $generated@@590)) $generated@@591))
 :pattern ( ($generated@@587 $generated@@590))
))))
(assert (forall (($generated@@592 T@U) ($generated@@593 T@U) ) (! (let (($generated@@594 (type $generated@@593)))
 (=> (= (type $generated@@592) ($generated@@152 $generated@@594)) (and (= ($generated@@586 ($generated@@151 $generated@@592 $generated@@593)) $generated@@592) (= ($generated@@587 ($generated@@151 $generated@@592 $generated@@593)) $generated@@593))))
 :pattern ( ($generated@@151 $generated@@592 $generated@@593))
)))
(assert (forall (($generated@@595 T@U) ) (!  (=> (= (type $generated@@595) $generated@@136) (= ($generated@@565 ($generated@@316 $generated@@595)) ($generated@@566 $generated@@595)))
 :pattern ( ($generated@@565 ($generated@@316 $generated@@595)))
)))
(assert (forall (($generated@@596 T@U) ) (!  (=> (and (= (type $generated@@596) $generated@@145) ($generated@@241 $generated@@596 ($generated@@75 0))) (and (= ($generated@@316 ($generated@@413 $generated@@2 $generated@@596)) $generated@@596) ($generated@@132 ($generated@@413 ($generated@@76 $generated@@145 $generated@@4) $generated@@596) ($generated@@75 0))))
 :pattern ( ($generated@@241 $generated@@596 ($generated@@75 0)))
)))
(assert (forall (($generated@@597 T@U) ($generated@@598 T@U) ) (!  (=> (and (and (= (type $generated@@597) $generated@@145) (= (type $generated@@598) $generated@@64)) ($generated@@241 $generated@@597 ($generated@@253 $generated@@598))) (and (= ($generated@@316 ($generated@@413 ($generated@@76 $generated@@145 $generated@@4) $generated@@597)) $generated@@597) ($generated@@132 ($generated@@413 ($generated@@76 $generated@@145 $generated@@4) $generated@@597) ($generated@@253 $generated@@598))))
 :pattern ( ($generated@@241 $generated@@597 ($generated@@253 $generated@@598)))
)))
(assert (forall (($generated@@599 T@U) ($generated@@600 T@U) ) (!  (=> (and (and (= (type $generated@@599) $generated@@145) (= (type $generated@@600) $generated@@64)) ($generated@@241 $generated@@599 ($generated@@258 $generated@@600))) (and (= ($generated@@316 ($generated@@413 ($generated@@76 $generated@@145 $generated@@4) $generated@@599)) $generated@@599) ($generated@@132 ($generated@@413 ($generated@@76 $generated@@145 $generated@@4) $generated@@599) ($generated@@258 $generated@@600))))
 :pattern ( ($generated@@241 $generated@@599 ($generated@@258 $generated@@600)))
)))
(assert (forall (($generated@@601 T@U) ($generated@@602 T@U) ) (!  (=> (and (and (= (type $generated@@601) $generated@@145) (= (type $generated@@602) $generated@@64)) ($generated@@241 $generated@@601 ($generated@@167 $generated@@602))) (and (= ($generated@@316 ($generated@@413 ($generated@@76 $generated@@145 $generated@@2) $generated@@601)) $generated@@601) ($generated@@132 ($generated@@413 ($generated@@76 $generated@@145 $generated@@2) $generated@@601) ($generated@@167 $generated@@602))))
 :pattern ( ($generated@@241 $generated@@601 ($generated@@167 $generated@@602)))
)))
(assert (forall (($generated@@603 T@U) ($generated@@604 T@U) ) (!  (=> (and (and (= (type $generated@@603) $generated@@145) (= (type $generated@@604) $generated@@64)) ($generated@@241 $generated@@603 ($generated@@269 $generated@@604))) (and (= ($generated@@316 ($generated@@413 ($generated@@152 $generated@@145) $generated@@603)) $generated@@603) ($generated@@132 ($generated@@413 ($generated@@152 $generated@@145) $generated@@603) ($generated@@269 $generated@@604))))
 :pattern ( ($generated@@241 $generated@@603 ($generated@@269 $generated@@604)))
)))
(assert (forall (($generated@@605 T@U) ($generated@@606 Int) ($generated@@607 Int) ) (! (let (($generated@@608 ($generated@@154 (type $generated@@605))))
 (=> (= (type $generated@@605) ($generated@@152 $generated@@608)) (=> (and (and (<= 0 $generated@@606) (<= $generated@@606 $generated@@607)) (< $generated@@607 ($generated@@153 $generated@@605))) (= ($generated@@274 ($generated@@150 $generated@@605 $generated@@606) (- $generated@@607 $generated@@606)) ($generated@@274 $generated@@605 $generated@@607)))))
 :weight 25
 :pattern ( ($generated@@274 $generated@@605 $generated@@607) ($generated@@150 $generated@@605 $generated@@606))
)))
(assert (forall (($generated@@609 T@U) ($generated@@610 T@U) ($generated@@611 T@U) ) (!  (=> (and (and (= (type $generated@@609) ($generated@@76 $generated@@145 $generated@@2)) (= (type $generated@@610) $generated@@64)) (= (type $generated@@611) ($generated@@76 $generated@@77 $generated@@78))) (= ($generated@@74 $generated@@609 ($generated@@167 $generated@@610) $generated@@611) (forall (($generated@@612 T@U) ) (!  (=> (and (= (type $generated@@612) $generated@@145) (< 0 ($generated ($generated@@81 $generated@@609 $generated@@612)))) ($generated@@283 $generated@@612 $generated@@610 $generated@@611))
 :pattern ( ($generated@@81 $generated@@609 $generated@@612))
))))
 :pattern ( ($generated@@74 $generated@@609 ($generated@@167 $generated@@610) $generated@@611))
)))
(assert (forall (($generated@@613 T@U) ($generated@@614 Int) ($generated@@615 Int) ) (! (let (($generated@@616 ($generated@@154 (type $generated@@613))))
 (=> (= (type $generated@@613) ($generated@@152 $generated@@616)) (=> (and (and (<= 0 $generated@@614) (<= 0 $generated@@615)) (<= (+ $generated@@614 $generated@@615) ($generated@@153 $generated@@613))) (= ($generated@@150 ($generated@@150 $generated@@613 $generated@@614) $generated@@615) ($generated@@150 $generated@@613 (+ $generated@@614 $generated@@615))))))
 :pattern ( ($generated@@150 ($generated@@150 $generated@@613 $generated@@614) $generated@@615))
)))
(assert (forall (($generated@@617 T@U) ($generated@@618 T@U) ($generated@@619 T@U) ) (!  (=> (and (and (and (= (type $generated@@617) $generated@@136) (= (type $generated@@618) $generated@@64)) (= (type $generated@@619) ($generated@@76 $generated@@77 $generated@@78))) (and ($generated@@282 $generated@@619) (and ($generated@@134 $generated@@617) (exists (($generated@@620 T@U) ) (!  (and (= (type $generated@@620) $generated@@64) ($generated@@74 $generated@@617 ($generated@@135 $generated@@618 $generated@@620) $generated@@619))
 :pattern ( ($generated@@74 $generated@@617 ($generated@@135 $generated@@618 $generated@@620) $generated@@619))
))))) ($generated@@283 ($generated@@143 $generated@@617) $generated@@618 $generated@@619))
 :pattern ( ($generated@@283 ($generated@@143 $generated@@617) $generated@@618 $generated@@619))
)))
(assert (forall (($generated@@621 T@U) ($generated@@622 T@U) ($generated@@623 T@U) ) (!  (=> (and (and (and (= (type $generated@@621) $generated@@136) (= (type $generated@@622) $generated@@64)) (= (type $generated@@623) ($generated@@76 $generated@@77 $generated@@78))) (and ($generated@@282 $generated@@623) (and ($generated@@134 $generated@@621) (exists (($generated@@624 T@U) ) (!  (and (= (type $generated@@624) $generated@@64) ($generated@@74 $generated@@621 ($generated@@135 $generated@@624 $generated@@622) $generated@@623))
 :pattern ( ($generated@@74 $generated@@621 ($generated@@135 $generated@@624 $generated@@622) $generated@@623))
))))) ($generated@@283 ($generated@@144 $generated@@621) $generated@@622 $generated@@623))
 :pattern ( ($generated@@283 ($generated@@144 $generated@@621) $generated@@622 $generated@@623))
)))
(assert (forall (($generated@@625 T@U) ($generated@@626 T@U) ($generated@@627 Int) ) (! (let (($generated@@628 ($generated@@154 (type $generated@@625))))
 (=> (and (= (type $generated@@625) ($generated@@152 $generated@@628)) (= (type $generated@@626) ($generated@@152 $generated@@628))) (and (=> (< $generated@@627 ($generated@@153 $generated@@625)) (= ($generated@@274 ($generated@@229 $generated@@625 $generated@@626) $generated@@627) ($generated@@274 $generated@@625 $generated@@627))) (=> (<= ($generated@@153 $generated@@625) $generated@@627) (= ($generated@@274 ($generated@@229 $generated@@625 $generated@@626) $generated@@627) ($generated@@274 $generated@@626 (- $generated@@627 ($generated@@153 $generated@@625))))))))
 :pattern ( ($generated@@274 ($generated@@229 $generated@@625 $generated@@626) $generated@@627))
)))
(assert (forall (($generated@@629 T@U) ($generated@@630 T@U) ) (!  (=> (and (= (type $generated@@629) $generated@@145) (= (type $generated@@630) $generated@@145)) (= ($generated@@240 ($generated@@265 $generated@@629) ($generated@@265 $generated@@630)) ($generated@@265 ($generated@@240 $generated@@629 $generated@@630))))
 :pattern ( ($generated@@240 ($generated@@265 $generated@@629) ($generated@@265 $generated@@630)))
)))
(assert (forall (($generated@@631 Int) ) (! (= ($generated@@316 ($generated@@8 ($generated@@263 $generated@@631))) ($generated@@265 ($generated@@316 ($generated@@8 $generated@@631))))
 :pattern ( ($generated@@316 ($generated@@8 ($generated@@263 $generated@@631))))
)))
(assert (forall (($generated@@632 T@U) ) (! (= ($generated@@316 ($generated@@265 $generated@@632)) ($generated@@265 ($generated@@316 $generated@@632)))
 :pattern ( ($generated@@316 ($generated@@265 $generated@@632)))
)))
(assert (forall (($generated@@633 T@U) ) (! (let (($generated@@634 ($generated@@154 (type $generated@@633))))
 (=> (and (= (type $generated@@633) ($generated@@152 $generated@@634)) (= ($generated@@153 $generated@@633) 0)) (= $generated@@633 ($generated@@307 $generated@@634))))
 :pattern ( ($generated@@153 $generated@@633))
)))
(assert (forall (($generated@@635 T@U) ($generated@@636 Int) ) (! (let (($generated@@637 ($generated@@154 (type $generated@@635))))
 (=> (and (= (type $generated@@635) ($generated@@152 $generated@@637)) (= $generated@@636 0)) (= ($generated@@228 $generated@@635 $generated@@636) ($generated@@307 $generated@@637))))
 :pattern ( ($generated@@228 $generated@@635 $generated@@636))
)))
(assert (forall (($generated@@638 T@U) ($generated@@639 T@U) ($generated@@640 T@U) ) (! (let (($generated@@641 (type $generated@@639)))
 (=> (and (and (= (type $generated@@638) ($generated@@76 $generated@@641 $generated@@2)) (= (type $generated@@640) $generated@@2)) (<= 0 ($generated $generated@@640))) (= ($generated@@325 ($generated@@82 $generated@@638 $generated@@639 $generated@@640)) (+ (- ($generated@@325 $generated@@638) ($generated ($generated@@81 $generated@@638 $generated@@639))) ($generated $generated@@640)))))
 :pattern ( ($generated@@325 ($generated@@82 $generated@@638 $generated@@639 $generated@@640)))
)))
(assert (forall (($generated@@642 T@U) ($generated@@643 T@U) ) (!  (=> (and (= (type $generated@@642) ($generated@@76 $generated@@77 $generated@@78)) (= (type $generated@@643) $generated@@2)) ($generated@@74 $generated@@643 $generated@@46 $generated@@642))
 :pattern ( ($generated@@74 $generated@@643 $generated@@46 $generated@@642))
)))
(assert (forall (($generated@@644 T@U) ($generated@@645 T@U) ) (!  (=> (and (= (type $generated@@644) ($generated@@76 $generated@@77 $generated@@78)) (= (type $generated@@645) $generated@@3)) ($generated@@74 $generated@@645 $generated@@47 $generated@@644))
 :pattern ( ($generated@@74 $generated@@645 $generated@@47 $generated@@644))
)))
(assert (forall (($generated@@646 T@U) ($generated@@647 T@U) ) (!  (=> (and (= (type $generated@@646) ($generated@@76 $generated@@77 $generated@@78)) (= (type $generated@@647) $generated@@4)) ($generated@@74 $generated@@647 $generated@@44 $generated@@646))
 :pattern ( ($generated@@74 $generated@@647 $generated@@44 $generated@@646))
)))
(assert (forall (($generated@@648 T@U) ($generated@@649 T@U) ) (!  (=> (and (= (type $generated@@648) ($generated@@76 $generated@@77 $generated@@78)) (= (type $generated@@649) $generated@@487)) ($generated@@74 $generated@@649 $generated@@45 $generated@@648))
 :pattern ( ($generated@@74 $generated@@649 $generated@@45 $generated@@648))
)))
(assert (forall (($generated@@650 T@U) ($generated@@651 T@U) ) (!  (=> (and (= (type $generated@@650) ($generated@@76 $generated@@77 $generated@@78)) (= (type $generated@@651) $generated@@145)) ($generated@@74 $generated@@651 $generated@@48 $generated@@650))
 :pattern ( ($generated@@74 $generated@@651 $generated@@48 $generated@@650))
)))
(assert (forall (($generated@@652 T@U) ($generated@@653 T@U) ) (!  (=> (and (= (type $generated@@652) ($generated@@152 $generated@@145)) (= (type $generated@@653) $generated@@64)) (= ($generated@@132 $generated@@652 ($generated@@269 $generated@@653)) (forall (($generated@@654 Int) ) (!  (=> (and (<= 0 $generated@@654) (< $generated@@654 ($generated@@153 $generated@@652))) ($generated@@241 ($generated@@274 $generated@@652 $generated@@654) $generated@@653))
 :pattern ( ($generated@@274 $generated@@652 $generated@@654))
))))
 :pattern ( ($generated@@132 $generated@@652 ($generated@@269 $generated@@653)))
)))
(assert (forall (($generated@@655 T@U) ($generated@@656 Int) ) (!  (=> (= (type $generated@@655) ($generated@@152 $generated@@145)) (=> (and (<= 0 $generated@@656) (< $generated@@656 ($generated@@153 $generated@@655))) (< ($generated@@566 ($generated@@413 $generated@@136 ($generated@@274 $generated@@655 $generated@@656))) ($generated@@300 $generated@@655))))
 :pattern ( ($generated@@566 ($generated@@413 $generated@@136 ($generated@@274 $generated@@655 $generated@@656))))
)))
(assert (forall (($generated@@657 T@U) ($generated@@658 T@U) ($generated@@659 T@U) ) (!  (=> (and (and (and (= (type $generated@@657) ($generated@@333 $generated@@145 $generated@@145)) (= (type $generated@@658) $generated@@64)) (= (type $generated@@659) $generated@@64)) ($generated@@132 $generated@@657 ($generated@@441 $generated@@658 $generated@@659))) (and (and ($generated@@132 ($generated@@331 $generated@@657) ($generated@@253 $generated@@658)) ($generated@@132 ($generated@@381 $generated@@657) ($generated@@253 $generated@@659))) ($generated@@132 ($generated@@412 $generated@@657) ($generated@@253 ($generated@@135 $generated@@658 $generated@@659)))))
 :pattern ( ($generated@@132 $generated@@657 ($generated@@441 $generated@@658 $generated@@659)))
)))
(assert (forall (($generated@@660 T@U) ($generated@@661 T@U) ($generated@@662 T@U) ) (!  (=> (and (and (and (= (type $generated@@660) ($generated@@351 $generated@@145 $generated@@145)) (= (type $generated@@661) $generated@@64)) (= (type $generated@@662) $generated@@64)) ($generated@@132 $generated@@660 ($generated@@449 $generated@@661 $generated@@662))) (and (and ($generated@@132 ($generated@@349 $generated@@660) ($generated@@258 $generated@@661)) ($generated@@132 ($generated@@392 $generated@@660) ($generated@@258 $generated@@662))) ($generated@@132 ($generated@@423 $generated@@660) ($generated@@258 ($generated@@135 $generated@@661 $generated@@662)))))
 :pattern ( ($generated@@132 $generated@@660 ($generated@@449 $generated@@661 $generated@@662)))
)))
(assert (forall (($generated@@663 T@U) ) (!  (=> (= (type $generated@@663) $generated@@2) ($generated@@132 $generated@@663 $generated@@46))
 :pattern ( ($generated@@132 $generated@@663 $generated@@46))
)))
(assert (forall (($generated@@664 T@U) ) (!  (=> (= (type $generated@@664) $generated@@3) ($generated@@132 $generated@@664 $generated@@47))
 :pattern ( ($generated@@132 $generated@@664 $generated@@47))
)))
(assert (forall (($generated@@665 T@U) ) (!  (=> (= (type $generated@@665) $generated@@4) ($generated@@132 $generated@@665 $generated@@44))
 :pattern ( ($generated@@132 $generated@@665 $generated@@44))
)))
(assert (forall (($generated@@666 T@U) ) (!  (=> (= (type $generated@@666) $generated@@487) ($generated@@132 $generated@@666 $generated@@45))
 :pattern ( ($generated@@132 $generated@@666 $generated@@45))
)))
(assert (forall (($generated@@667 T@U) ) (!  (=> (= (type $generated@@667) $generated@@145) ($generated@@132 $generated@@667 $generated@@48))
 :pattern ( ($generated@@132 $generated@@667 $generated@@48))
)))
(push 1)
(declare-fun ControlFlow (Int Int) Int)
(declare-fun $generated@@668 () T@U)
(declare-fun $generated@@669 () T@U)
(declare-fun $generated@@670 () T@U)
(declare-fun $generated@@671 () T@U)
(declare-fun $generated@@672 () T@U)
(declare-fun $generated@@673 (T@U) Bool)
(declare-fun $generated@@674 () Int)
(assert  (and (and (and (and (= (type $generated@@668) ($generated@@174 $generated@@77 $generated@@4)) (= (type $generated@@669) $generated@@77)) (= (type $generated@@670) ($generated@@76 $generated@@77 $generated@@78))) (= (type $generated@@671) ($generated@@152 $generated@@145))) (= (type $generated@@672) ($generated@@76 $generated@@77 $generated@@78))))
(set-option :timeout 0)
(set-option :rlimit 0)
(assert (not
 (=> (= (ControlFlow 0 0) 7) (let (($generated@@675  (=> (and (= $generated@@668 ($generated@@173 $generated@@669 $generated@@670 $generated@@60 false)) (> ($generated@@153 $generated@@671) 25)) (=> (and (and ($generated@@282 $generated@@672) ($generated@@673 $generated@@672)) (= $generated@@670 $generated@@672)) (and (=> (= (ControlFlow 0 2) (- 0 6)) (and (<= 0 ($generated@@263 0)) (<= ($generated@@263 0) ($generated@@153 $generated@@671)))) (=> (and (<= 0 ($generated@@263 0)) (<= ($generated@@263 0) ($generated@@153 $generated@@671))) (and (=> (= (ControlFlow 0 2) (- 0 5)) (and (<= ($generated@@263 0) ($generated@@263 25)) (<= ($generated@@263 25) ($generated@@153 $generated@@671)))) (=> (and (<= ($generated@@263 0) ($generated@@263 25)) (<= ($generated@@263 25) ($generated@@153 $generated@@671))) (and (=> (= (ControlFlow 0 2) (- 0 4)) (and (<= 0 ($generated@@263 0)) (< ($generated@@263 0) ($generated@@153 $generated@@671)))) (=> (and (<= 0 ($generated@@263 0)) (< ($generated@@263 0) ($generated@@153 $generated@@671))) (and (=> (= (ControlFlow 0 2) (- 0 3)) (and (<= 0 ($generated@@263 1)) (<= ($generated@@263 1) ($generated@@153 $generated@@671)))) (=> (and (<= 0 ($generated@@263 1)) (<= ($generated@@263 1) ($generated@@153 $generated@@671))) (=> (= (ControlFlow 0 2) (- 0 1)) (and (<= ($generated@@263 1) ($generated@@263 25)) (<= ($generated@@263 25) ($generated@@153 $generated@@671))))))))))))))))
(let (($generated@@676  (=> (and ($generated@@282 $generated@@670) ($generated@@673 $generated@@670)) (=> (and (and ($generated@@132 $generated@@671 ($generated@@269 $generated@@46)) ($generated@@74 $generated@@671 ($generated@@269 $generated@@46) $generated@@670)) (and (= 0 $generated@@674) (= (ControlFlow 0 7) 2))) $generated@@675))))
$generated@@676)))
))
(check-sat)
(pop 1)
; Valid
(get-info :rlimit)
(reset)
(set-option :rlimit 0)
; did a full reset
(reset)
(set-option :print-success false)
(set-info :smt-lib-version 2.6)
(set-option :auto_config false)
(set-option :type_check true)
(set-option :smt.case_split 3)
(set-option :smt.qi.eager_threshold 100)
(set-option :smt.delay_units true)
(set-option :smt.arith.solver 2)
(set-option :smt.mbqi false)
(set-option :model.compact false)
(set-option :model.v2 true)
(set-option :pp.bv_literals false)
; done setting options


(set-info :category "industrial")
(declare-sort |T@U| 0)
(declare-sort |T@T| 0)
(declare-fun real_pow (Real Real) Real)
(declare-fun UOrdering2 (|T@U| |T@U|) Bool)
(declare-fun UOrdering3 (|T@T| |T@U| |T@U|) Bool)
(declare-fun tickleBool (Bool) Bool)
(assert (and (tickleBool true) (tickleBool false)))
(declare-fun $generated (T@U) Int)
(declare-fun $generated@@0 (T@U) Bool)
(declare-fun $generated@@1 (T@T) Int)
(declare-fun $generated@@2 () T@T)
(declare-fun $generated@@3 () T@T)
(declare-fun $generated@@4 () T@T)
(declare-fun $generated@@5 () T@T)
(declare-fun $generated@@6 () T@T)
(declare-fun $generated@@7 () T@T)
(declare-fun $generated@@8 (Int) T@U)
(declare-fun type (T@U) T@T)
(declare-fun $generated@@9 (Real) T@U)
(declare-fun $generated@@10 (T@U) Real)
(declare-fun $generated@@11 (Bool) T@U)
(declare-fun $generated@@12 (RoundingMode) T@U)
(declare-fun $generated@@13 (T@U) RoundingMode)
(declare-fun $generated@@14 (String) T@U)
(declare-fun $generated@@15 (T@U) String)
(declare-fun $generated@@16 ((RegEx String)) T@U)
(declare-fun $generated@@17 (T@U) (RegEx String))
(declare-fun $generated@@44 () T@U)
(declare-fun $generated@@45 () T@U)
(declare-fun $generated@@46 () T@U)
(declare-fun $generated@@47 () T@U)
(declare-fun $generated@@48 () T@U)
(declare-fun $generated@@49 () T@U)
(declare-fun $generated@@50 () T@U)
(declare-fun $generated@@51 () T@U)
(declare-fun $generated@@52 () T@U)
(declare-fun $generated@@53 () T@U)
(declare-fun $generated@@54 () T@U)
(declare-fun $generated@@55 () T@U)
(declare-fun $generated@@56 () T@U)
(declare-fun $generated@@57 () T@U)
(declare-fun $generated@@58 () T@U)
(declare-fun $generated@@59 () T@U)
(declare-fun $generated@@60 () T@U)
(declare-fun $generated@@61 () T@U)
(declare-fun $generated@@62 () T@U)
(declare-fun $generated@@63 () T@U)
(declare-fun $generated@@64 () T@T)
(declare-fun $generated@@65 () T@T)
(declare-fun $generated@@66 (T@T) T@T)
(declare-fun $generated@@67 (T@T) T@T)
(declare-fun $generated@@68 () T@T)
(declare-fun $generated@@69 () T@T)
(declare-fun $generated@@72 (T@U) T@U)
(declare-fun $generated@@74 (T@U T@U T@U) Bool)
(declare-fun $generated@@75 (Int) T@U)
(declare-fun $generated@@76 (T@T T@T) T@T)
(declare-fun $generated@@77 () T@T)
(declare-fun $generated@@78 () T@T)
(declare-fun $generated@@79 (T@T) T@T)
(declare-fun $generated@@80 (T@T) T@T)
(declare-fun $generated@@81 (T@U T@U) T@U)
(declare-fun $generated@@82 (T@U T@U T@U) T@U)
(declare-fun $generated@@83 (T@U T@U) T@U)
(declare-fun $generated@@84 (T@U T@U T@U) T@U)
(declare-fun $generated@@132 (T@U T@U) Bool)
(declare-fun $generated@@134 (T@U) Bool)
(declare-fun $generated@@135 (T@U T@U) T@U)
(declare-fun $generated@@136 () T@T)
(declare-fun $generated@@142 (T@U T@U) Bool)
(declare-fun $generated@@143 (T@U) T@U)
(declare-fun $generated@@144 (T@U) T@U)
(declare-fun $generated@@145 () T@T)
(declare-fun $generated@@150 (T@U Int) T@U)
(declare-fun $generated@@151 (T@U T@U) T@U)
(declare-fun $generated@@152 (T@T) T@T)
(declare-fun $generated@@153 (T@U) Int)
(declare-fun $generated@@154 (T@T) T@T)
(declare-fun $generated@@167 (T@U) T@U)
(declare-fun $generated@@168 (T@U) Bool)
(declare-fun $generated@@172 (T@U T@U T@U) T@U)
(declare-fun $generated@@173 (T@U T@U T@U Bool) T@U)
(declare-fun $generated@@174 (T@T T@T) T@T)
(declare-fun $generated@@175 (T@T) T@T)
(declare-fun $generated@@176 (T@T) T@T)
(declare-fun $generated@@177 (T@U T@U T@U T@U) T@U)
(declare-fun $generated@@228 (T@U Int) T@U)
(declare-fun $generated@@229 (T@U T@U) T@U)
(declare-fun $generated@@240 (T@U T@U) T@U)
(declare-fun $generated@@241 (T@U T@U) Bool)
(declare-fun $generated@@253 (T@U) T@U)
(declare-fun $generated@@258 (T@U) T@U)
(declare-fun $generated@@263 (Int) Int)
(declare-fun $generated@@265 (T@U) T@U)
(declare-fun $generated@@269 (T@U) T@U)
(declare-fun $generated@@274 (T@U Int) T@U)
(declare-fun $generated@@282 (T@U) Bool)
(declare-fun $generated@@283 (T@U T@U T@U) Bool)
(declare-fun $generated@@292 (T@U) T@U)
(declare-fun $generated@@295 (T@U T@U) Bool)
(declare-fun $generated@@300 (T@U) Int)
(declare-fun $generated@@307 (T@T) T@U)
(declare-fun $generated@@316 (T@U) T@U)
(declare-fun $generated@@325 (T@U) Int)
(declare-fun $generated@@326 (T@T) T@U)
(declare-fun $generated@@331 (T@U) T@U)
(declare-fun $generated@@332 (T@T T@T) T@U)
(declare-fun $generated@@333 (T@T T@T) T@T)
(declare-fun $generated@@334 (T@T) T@T)
(declare-fun $generated@@335 (T@T) T@T)
(declare-fun $generated@@349 (T@U) T@U)
(declare-fun $generated@@350 (T@T T@T) T@U)
(declare-fun $generated@@351 (T@T T@T) T@T)
(declare-fun $generated@@352 (T@T) T@T)
(declare-fun $generated@@353 (T@T) T@T)
(declare-fun $generated@@381 (T@U) T@U)
(declare-fun $generated@@392 (T@U) T@U)
(declare-fun $generated@@412 (T@U) T@U)
(declare-fun $generated@@413 (T@T T@U) T@U)
(declare-fun $generated@@414 (T@U) T@U)
(declare-fun $generated@@423 (T@U) T@U)
(declare-fun $generated@@424 (T@U) T@U)
(declare-fun $generated@@441 (T@U T@U) T@U)
(declare-fun $generated@@449 (T@U T@U) T@U)
(declare-fun $generated@@463 (T@T) T@U)
(declare-fun $generated@@487 () T@T)
(declare-fun $generated@@499 (T@U) T@U)
(declare-fun $generated@@503 (T@U) T@U)
(declare-fun $generated@@509 (T@U) T@U)
(declare-fun $generated@@513 (T@U) T@U)
(declare-fun $generated@@521 (T@U) T@U)
(declare-fun $generated@@525 (T@U) T@U)
(declare-fun $generated@@537 (T@U) Int)
(declare-fun $generated@@539 (T@U) T@U)
(declare-fun $generated@@543 (T@U) T@U)
(declare-fun $generated@@547 (T@U) T@U)
(declare-fun $generated@@551 (T@U) T@U)
(declare-fun $generated@@565 (T@U) Int)
(declare-fun $generated@@566 (T@U) Int)
(declare-fun $generated@@582 (T@U) T@U)
(declare-fun $generated@@586 (T@U) T@U)
(declare-fun $generated@@587 (T@U) T@U)
(assert  (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (= ($generated@@1 $generated@@2) 0) (= ($generated@@1 $generated@@3) 1)) (= ($generated@@1 $generated@@4) 2)) (= ($generated@@1 $generated@@5) 3)) (= ($generated@@1 $generated@@6) 4)) (= ($generated@@1 $generated@@7) 5)) (forall (($generated@@18 Int) ) (! (= ($generated ($generated@@8 $generated@@18)) $generated@@18)
 :pattern ( ($generated@@8 $generated@@18))
))) (forall (($generated@@19 T@U) ) (!  (=> (= (type $generated@@19) $generated@@2) (= ($generated@@8 ($generated $generated@@19)) $generated@@19))
 :pattern ( ($generated $generated@@19))
))) (forall (($generated@@20 Int) ) (! (= (type ($generated@@8 $generated@@20)) $generated@@2)
 :pattern ( ($generated@@8 $generated@@20))
))) (forall (($generated@@21 Real) ) (! (= ($generated@@10 ($generated@@9 $generated@@21)) $generated@@21)
 :pattern ( ($generated@@9 $generated@@21))
))) (forall (($generated@@22 T@U) ) (!  (=> (= (type $generated@@22) $generated@@3) (= ($generated@@9 ($generated@@10 $generated@@22)) $generated@@22))
 :pattern ( ($generated@@10 $generated@@22))
))) (forall (($generated@@23 Real) ) (! (= (type ($generated@@9 $generated@@23)) $generated@@3)
 :pattern ( ($generated@@9 $generated@@23))
))) (forall (($generated@@24 Bool) ) (! (= ($generated@@0 ($generated@@11 $generated@@24)) $generated@@24)
 :pattern ( ($generated@@11 $generated@@24))
))) (forall (($generated@@25 T@U) ) (!  (=> (= (type $generated@@25) $generated@@4) (= ($generated@@11 ($generated@@0 $generated@@25)) $generated@@25))
 :pattern ( ($generated@@0 $generated@@25))
))) (forall (($generated@@26 Bool) ) (! (= (type ($generated@@11 $generated@@26)) $generated@@4)
 :pattern ( ($generated@@11 $generated@@26))
))) (forall (($generated@@27 RoundingMode) ) (! (= ($generated@@13 ($generated@@12 $generated@@27)) $generated@@27)
 :pattern ( ($generated@@12 $generated@@27))
))) (forall (($generated@@28 T@U) ) (!  (=> (= (type $generated@@28) $generated@@5) (= ($generated@@12 ($generated@@13 $generated@@28)) $generated@@28))
 :pattern ( ($generated@@13 $generated@@28))
))) (forall (($generated@@29 RoundingMode) ) (! (= (type ($generated@@12 $generated@@29)) $generated@@5)
 :pattern ( ($generated@@12 $generated@@29))
))) (forall (($generated@@30 String) ) (! (= ($generated@@15 ($generated@@14 $generated@@30)) $generated@@30)
 :pattern ( ($generated@@14 $generated@@30))
))) (forall (($generated@@31 T@U) ) (!  (=> (= (type $generated@@31) $generated@@6) (= ($generated@@14 ($generated@@15 $generated@@31)) $generated@@31))
 :pattern ( ($generated@@15 $generated@@31))
))) (forall (($generated@@32 String) ) (! (= (type ($generated@@14 $generated@@32)) $generated@@6)
 :pattern ( ($generated@@14 $generated@@32))
))) (forall (($generated@@33 (RegEx String)) ) (! (= ($generated@@17 ($generated@@16 $generated@@33)) $generated@@33)
 :pattern ( ($generated@@16 $generated@@33))
))) (forall (($generated@@34 T@U) ) (!  (=> (= (type $generated@@34) $generated@@7) (= ($generated@@16 ($generated@@17 $generated@@34)) $generated@@34))
 :pattern ( ($generated@@17 $generated@@34))
))) (forall (($generated@@35 (RegEx String)) ) (! (= (type ($generated@@16 $generated@@35)) $generated@@7)
 :pattern ( ($generated@@16 $generated@@35))
))))
(assert (forall (($generated@@36 T@U) ) (! (UOrdering2 $generated@@36 $generated@@36)
 :no-pattern ($generated $generated@@36)
 :no-pattern ($generated@@0 $generated@@36)
)))
(assert (forall (($generated@@37 T@U) ($generated@@38 T@U) ($generated@@39 T@U) ) (! (let (($generated@@40 (type $generated@@37)))
 (=> (and (and (= (type $generated@@38) $generated@@40) (= (type $generated@@39) $generated@@40)) (and (UOrdering2 $generated@@37 $generated@@38) (UOrdering2 $generated@@38 $generated@@39))) (UOrdering2 $generated@@37 $generated@@39)))
 :pattern ( (UOrdering2 $generated@@37 $generated@@38) (UOrdering2 $generated@@38 $generated@@39))
)))
(assert (forall (($generated@@41 T@U) ($generated@@42 T@U) ) (! (let (($generated@@43 (type $generated@@41)))
 (=> (= (type $generated@@42) $generated@@43) (=> (and (UOrdering2 $generated@@41 $generated@@42) (UOrdering2 $generated@@42 $generated@@41)) (= $generated@@41 $generated@@42))))
 :pattern ( (UOrdering2 $generated@@41 $generated@@42) (UOrdering2 $generated@@42 $generated@@41))
)))
(assert  (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (= ($generated@@1 $generated@@64) 6) (= (type $generated@@44) $generated@@64)) (= (type $generated@@45) $generated@@64)) (= (type $generated@@46) $generated@@64)) (= (type $generated@@47) $generated@@64)) (= (type $generated@@48) $generated@@64)) (= ($generated@@1 $generated@@65) 7)) (= (type $generated@@49) $generated@@65)) (= (type $generated@@50) $generated@@65)) (= (type $generated@@51) $generated@@65)) (= (type $generated@@52) $generated@@65)) (= (type $generated@@53) $generated@@65)) (= (type $generated@@54) $generated@@65)) (= (type $generated@@55) $generated@@65)) (= (type $generated@@56) $generated@@65)) (= (type $generated@@57) $generated@@65)) (= (type $generated@@58) $generated@@65)) (= (type $generated@@59) $generated@@65)) (forall (($generated@@70 T@T) ) (= ($generated@@1 ($generated@@66 $generated@@70)) 8))) (forall (($generated@@71 T@T) ) (! (= ($generated@@67 ($generated@@66 $generated@@71)) $generated@@71)
 :pattern ( ($generated@@66 $generated@@71))
))) (= (type $generated@@60) ($generated@@66 $generated@@4))) (= ($generated@@1 $generated@@68) 9)) (= (type $generated@@61) $generated@@68)) (= (type $generated@@62) $generated@@65)) (= ($generated@@1 $generated@@69) 10)) (= (type $generated@@63) $generated@@69)))
(assert (distinct $generated@@44 $generated@@45 $generated@@46 $generated@@47 $generated@@48 $generated@@49 $generated@@50 $generated@@51 $generated@@52 $generated@@53 $generated@@54 $generated@@55 $generated@@56 $generated@@57 $generated@@58 $generated@@59 $generated@@60 $generated@@61 $generated@@62 $generated@@63)
)
(assert (forall (($generated@@73 T@U) ) (! (= (type ($generated@@72 $generated@@73)) $generated@@65)
 :pattern ( ($generated@@72 $generated@@73))
)))
(assert (= ($generated@@72 $generated@@44) $generated@@49))
(assert (= ($generated@@72 $generated@@45) $generated@@50))
(assert (= ($generated@@72 $generated@@46) $generated@@51))
(assert (= ($generated@@72 $generated@@47) $generated@@52))
(assert (= ($generated@@72 $generated@@48) $generated@@53))
(assert  (and (and (and (and (and (and (and (and (and (and (and (and (and (forall (($generated@@85 T@T) ($generated@@86 T@T) ) (= ($generated@@1 ($generated@@76 $generated@@85 $generated@@86)) 11)) (forall (($generated@@87 T@T) ($generated@@88 T@T) ) (! (= ($generated@@79 ($generated@@76 $generated@@87 $generated@@88)) $generated@@87)
 :pattern ( ($generated@@76 $generated@@87 $generated@@88))
))) (forall (($generated@@89 T@T) ($generated@@90 T@T) ) (! (= ($generated@@80 ($generated@@76 $generated@@89 $generated@@90)) $generated@@90)
 :pattern ( ($generated@@76 $generated@@89 $generated@@90))
))) (forall (($generated@@91 T@U) ($generated@@92 T@U) ) (! (let (($generated@@93 ($generated@@80 (type $generated@@91))))
(= (type ($generated@@81 $generated@@91 $generated@@92)) $generated@@93))
 :pattern ( ($generated@@81 $generated@@91 $generated@@92))
))) (forall (($generated@@94 T@U) ($generated@@95 T@U) ($generated@@96 T@U) ) (! (let (($generated@@97 (type $generated@@96)))
(let (($generated@@98 (type $generated@@95)))
(= (type ($generated@@82 $generated@@94 $generated@@95 $generated@@96)) ($generated@@76 $generated@@98 $generated@@97))))
 :pattern ( ($generated@@82 $generated@@94 $generated@@95 $generated@@96))
))) (forall (($generated@@99 T@U) ($generated@@100 T@U) ($generated@@101 T@U) ) (! (let (($generated@@102 ($generated@@80 (type $generated@@99))))
 (=> (= (type $generated@@101) $generated@@102) (= ($generated@@81 ($generated@@82 $generated@@99 $generated@@100 $generated@@101) $generated@@100) $generated@@101)))
 :weight 0
))) (and (forall (($generated@@103 T@U) ($generated@@104 T@U) ($generated@@105 T@U) ($generated@@106 T@U) ) (!  (or (= $generated@@105 $generated@@106) (= ($generated@@81 ($generated@@82 $generated@@104 $generated@@105 $generated@@103) $generated@@106) ($generated@@81 $generated@@104 $generated@@106)))
 :weight 0
)) (forall (($generated@@107 T@U) ($generated@@108 T@U) ($generated@@109 T@U) ($generated@@110 T@U) ) (!  (or true (= ($generated@@81 ($generated@@82 $generated@@108 $generated@@109 $generated@@107) $generated@@110) ($generated@@81 $generated@@108 $generated@@110)))
 :weight 0
)))) (= ($generated@@1 $generated@@77) 12)) (forall (($generated@@111 T@U) ($generated@@112 T@U) ) (! (let (($generated@@113 ($generated@@67 (type $generated@@112))))
(= (type ($generated@@83 $generated@@111 $generated@@112)) $generated@@113))
 :pattern ( ($generated@@83 $generated@@111 $generated@@112))
))) (= ($generated@@1 $generated@@78) 13)) (forall (($generated@@114 T@U) ($generated@@115 T@U) ($generated@@116 T@U) ) (! (= (type ($generated@@84 $generated@@114 $generated@@115 $generated@@116)) $generated@@78)
 :pattern ( ($generated@@84 $generated@@114 $generated@@115 $generated@@116))
))) (forall (($generated@@117 T@U) ($generated@@118 T@U) ($generated@@119 T@U) ) (! (let (($generated@@120 ($generated@@67 (type $generated@@118))))
 (=> (= (type $generated@@119) $generated@@120) (= ($generated@@83 ($generated@@84 $generated@@117 $generated@@118 $generated@@119) $generated@@118) $generated@@119)))
 :weight 0
))) (and (forall (($generated@@121 T@U) ($generated@@122 T@U) ($generated@@123 T@U) ($generated@@124 T@U) ) (!  (or (= $generated@@123 $generated@@124) (= ($generated@@83 ($generated@@84 $generated@@122 $generated@@123 $generated@@121) $generated@@124) ($generated@@83 $generated@@122 $generated@@124)))
 :weight 0
)) (forall (($generated@@125 T@U) ($generated@@126 T@U) ($generated@@127 T@U) ($generated@@128 T@U) ) (!  (or true (= ($generated@@83 ($generated@@84 $generated@@126 $generated@@127 $generated@@125) $generated@@128) ($generated@@83 $generated@@126 $generated@@128)))
 :weight 0
)))) (forall (($generated@@129 Int) ) (! (= (type ($generated@@75 $generated@@129)) $generated@@64)
 :pattern ( ($generated@@75 $generated@@129))
))))
(assert (forall (($generated@@130 T@U) ($generated@@131 T@U) ) (!  (=> (and (= (type $generated@@130) $generated@@2) (= (type $generated@@131) ($generated@@76 $generated@@77 $generated@@78))) ($generated@@74 $generated@@130 ($generated@@75 0) $generated@@131))
 :pattern ( ($generated@@74 $generated@@130 ($generated@@75 0) $generated@@131))
)))
(assert (forall (($generated@@133 T@U) ) (!  (=> (= (type $generated@@133) $generated@@2) ($generated@@132 $generated@@133 ($generated@@75 0)))
 :pattern ( ($generated@@132 $generated@@133 ($generated@@75 0)))
)))
(assert  (and (= ($generated@@1 $generated@@136) 14) (forall (($generated@@137 T@U) ($generated@@138 T@U) ) (! (= (type ($generated@@135 $generated@@137 $generated@@138)) $generated@@64)
 :pattern ( ($generated@@135 $generated@@137 $generated@@138))
))))
(assert (forall (($generated@@139 T@U) ($generated@@140 T@U) ($generated@@141 T@U) ) (!  (=> (and (and (and (= (type $generated@@139) $generated@@64) (= (type $generated@@140) $generated@@64)) (= (type $generated@@141) $generated@@136)) ($generated@@132 $generated@@141 ($generated@@135 $generated@@139 $generated@@140))) ($generated@@134 $generated@@141))
 :pattern ( ($generated@@134 $generated@@141) ($generated@@132 $generated@@141 ($generated@@135 $generated@@139 $generated@@140)))
)))
(assert  (and (and (= ($generated@@1 $generated@@145) 15) (forall (($generated@@146 T@U) ) (! (= (type ($generated@@143 $generated@@146)) $generated@@145)
 :pattern ( ($generated@@143 $generated@@146))
))) (forall (($generated@@147 T@U) ) (! (= (type ($generated@@144 $generated@@147)) $generated@@145)
 :pattern ( ($generated@@144 $generated@@147))
))))
(assert (forall (($generated@@148 T@U) ($generated@@149 T@U) ) (!  (=> (and (and (= (type $generated@@148) $generated@@136) (= (type $generated@@149) $generated@@136)) true) (= ($generated@@142 $generated@@148 $generated@@149)  (and (= ($generated@@143 $generated@@148) ($generated@@143 $generated@@149)) (= ($generated@@144 $generated@@148) ($generated@@144 $generated@@149)))))
 :pattern ( ($generated@@142 $generated@@148 $generated@@149))
)))
(assert  (and (and (and (forall (($generated@@155 T@T) ) (= ($generated@@1 ($generated@@152 $generated@@155)) 16)) (forall (($generated@@156 T@T) ) (! (= ($generated@@154 ($generated@@152 $generated@@156)) $generated@@156)
 :pattern ( ($generated@@152 $generated@@156))
))) (forall (($generated@@157 T@U) ($generated@@158 Int) ) (! (let (($generated@@159 ($generated@@154 (type $generated@@157))))
(= (type ($generated@@150 $generated@@157 $generated@@158)) ($generated@@152 $generated@@159)))
 :pattern ( ($generated@@150 $generated@@157 $generated@@158))
))) (forall (($generated@@160 T@U) ($generated@@161 T@U) ) (! (let (($generated@@162 (type $generated@@161)))
(= (type ($generated@@151 $generated@@160 $generated@@161)) ($generated@@152 $generated@@162)))
 :pattern ( ($generated@@151 $generated@@160 $generated@@161))
))))
(assert (forall (($generated@@163 T@U) ($generated@@164 T@U) ($generated@@165 Int) ) (! (let (($generated@@166 (type $generated@@164)))
 (=> (= (type $generated@@163) ($generated@@152 $generated@@166)) (=> (and (<= 0 $generated@@165) (<= $generated@@165 ($generated@@153 $generated@@163))) (= ($generated@@150 ($generated@@151 $generated@@163 $generated@@164) $generated@@165) ($generated@@151 ($generated@@150 $generated@@163 $generated@@165) $generated@@164)))))
 :pattern ( ($generated@@150 ($generated@@151 $generated@@163 $generated@@164) $generated@@165))
)))
(assert (forall (($generated@@169 T@U) ) (! (= (type ($generated@@167 $generated@@169)) $generated@@64)
 :pattern ( ($generated@@167 $generated@@169))
)))
(assert (forall (($generated@@170 T@U) ($generated@@171 T@U) ) (!  (=> (and (and (= (type $generated@@170) ($generated@@76 $generated@@145 $generated@@2)) (= (type $generated@@171) $generated@@64)) ($generated@@132 $generated@@170 ($generated@@167 $generated@@171))) ($generated@@168 $generated@@170))
 :pattern ( ($generated@@132 $generated@@170 ($generated@@167 $generated@@171)))
)))
(assert  (and (and (and (and (and (and (and (forall (($generated@@178 T@T) ($generated@@179 T@T) ) (= ($generated@@1 ($generated@@174 $generated@@178 $generated@@179)) 17)) (forall (($generated@@180 T@T) ($generated@@181 T@T) ) (! (= ($generated@@175 ($generated@@174 $generated@@180 $generated@@181)) $generated@@180)
 :pattern ( ($generated@@174 $generated@@180 $generated@@181))
))) (forall (($generated@@182 T@T) ($generated@@183 T@T) ) (! (= ($generated@@176 ($generated@@174 $generated@@182 $generated@@183)) $generated@@183)
 :pattern ( ($generated@@174 $generated@@182 $generated@@183))
))) (forall (($generated@@184 T@U) ($generated@@185 T@U) ($generated@@186 T@U) ) (! (let (($generated@@187 ($generated@@176 (type $generated@@184))))
(= (type ($generated@@172 $generated@@184 $generated@@185 $generated@@186)) $generated@@187))
 :pattern ( ($generated@@172 $generated@@184 $generated@@185 $generated@@186))
))) (forall (($generated@@188 T@U) ($generated@@189 T@U) ($generated@@190 T@U) ($generated@@191 T@U) ) (! (let (($generated@@192 (type $generated@@191)))
(let (($generated@@193 (type $generated@@189)))
(= (type ($generated@@177 $generated@@188 $generated@@189 $generated@@190 $generated@@191)) ($generated@@174 $generated@@193 $generated@@192))))
 :pattern ( ($generated@@177 $generated@@188 $generated@@189 $generated@@190 $generated@@191))
))) (forall (($generated@@194 T@U) ($generated@@195 T@U) ($generated@@196 T@U) ($generated@@197 T@U) ) (! (let (($generated@@198 ($generated@@176 (type $generated@@194))))
 (=> (= (type $generated@@197) $generated@@198) (= ($generated@@172 ($generated@@177 $generated@@194 $generated@@195 $generated@@196 $generated@@197) $generated@@195 $generated@@196) $generated@@197)))
 :weight 0
))) (and (and (forall (($generated@@199 T@U) ($generated@@200 T@U) ($generated@@201 T@U) ($generated@@202 T@U) ($generated@@203 T@U) ($generated@@204 T@U) ) (!  (or (= $generated@@201 $generated@@203) (= ($generated@@172 ($generated@@177 $generated@@200 $generated@@201 $generated@@202 $generated@@199) $generated@@203 $generated@@204) ($generated@@172 $generated@@200 $generated@@203 $generated@@204)))
 :weight 0
)) (forall (($generated@@205 T@U) ($generated@@206 T@U) ($generated@@207 T@U) ($generated@@208 T@U) ($generated@@209 T@U) ($generated@@210 T@U) ) (!  (or (= $generated@@208 $generated@@210) (= ($generated@@172 ($generated@@177 $generated@@206 $generated@@207 $generated@@208 $generated@@205) $generated@@209 $generated@@210) ($generated@@172 $generated@@206 $generated@@209 $generated@@210)))
 :weight 0
))) (forall (($generated@@211 T@U) ($generated@@212 T@U) ($generated@@213 T@U) ($generated@@214 T@U) ($generated@@215 T@U) ($generated@@216 T@U) ) (!  (or true (= ($generated@@172 ($generated@@177 $generated@@212 $generated@@213 $generated@@214 $generated@@211) $generated@@215 $generated@@216) ($generated@@172 $generated@@212 $generated@@215 $generated@@216)))
 :weight 0
)))) (forall (($generated@@217 T@U) ($generated@@218 T@U) ($generated@@219 T@U) ($generated@@220 Bool) ) (! (= (type ($generated@@173 $generated@@217 $generated@@218 $generated@@219 $generated@@220)) ($generated@@174 $generated@@77 $generated@@4))
 :pattern ( ($generated@@173 $generated@@217 $generated@@218 $generated@@219 $generated@@220))
))))
(assert (forall (($generated@@221 T@U) ($generated@@222 T@U) ($generated@@223 T@U) ($generated@@224 Bool) ($generated@@225 T@U) ($generated@@226 T@U) ) (! (let (($generated@@227 ($generated@@67 (type $generated@@226))))
 (=> (and (and (and (and (= (type $generated@@221) $generated@@77) (= (type $generated@@222) ($generated@@76 $generated@@77 $generated@@78))) (= (type $generated@@223) ($generated@@66 $generated@@4))) (= (type $generated@@225) $generated@@77)) (= (type $generated@@226) ($generated@@66 $generated@@227))) (= ($generated@@0 ($generated@@172 ($generated@@173 $generated@@221 $generated@@222 $generated@@223 $generated@@224) $generated@@225 $generated@@226))  (=> (and (not (= $generated@@225 $generated@@221)) ($generated@@0 ($generated@@83 ($generated@@81 $generated@@222 $generated@@225) $generated@@223))) $generated@@224))))
 :pattern ( ($generated@@172 ($generated@@173 $generated@@221 $generated@@222 $generated@@223 $generated@@224) $generated@@225 $generated@@226))
)))
(assert  (and (forall (($generated@@230 T@U) ($generated@@231 Int) ) (! (let (($generated@@232 ($generated@@154 (type $generated@@230))))
(= (type ($generated@@228 $generated@@230 $generated@@231)) ($generated@@152 $generated@@232)))
 :pattern ( ($generated@@228 $generated@@230 $generated@@231))
)) (forall (($generated@@233 T@U) ($generated@@234 T@U) ) (! (let (($generated@@235 ($generated@@154 (type $generated@@233))))
(= (type ($generated@@229 $generated@@233 $generated@@234)) ($generated@@152 $generated@@235)))
 :pattern ( ($generated@@229 $generated@@233 $generated@@234))
))))
(assert (forall (($generated@@236 T@U) ($generated@@237 T@U) ($generated@@238 Int) ) (! (let (($generated@@239 ($generated@@154 (type $generated@@236))))
 (=> (and (and (= (type $generated@@236) ($generated@@152 $generated@@239)) (= (type $generated@@237) ($generated@@152 $generated@@239))) (= $generated@@238 ($generated@@153 $generated@@236))) (and (= ($generated@@228 ($generated@@229 $generated@@236 $generated@@237) $generated@@238) $generated@@236) (= ($generated@@150 ($generated@@229 $generated@@236 $generated@@237) $generated@@238) $generated@@237))))
 :pattern ( ($generated@@228 ($generated@@229 $generated@@236 $generated@@237) $generated@@238))
 :pattern ( ($generated@@150 ($generated@@229 $generated@@236 $generated@@237) $generated@@238))
)))
(assert (forall (($generated@@242 T@U) ($generated@@243 T@U) ) (! (= (type ($generated@@240 $generated@@242 $generated@@243)) $generated@@136)
 :pattern ( ($generated@@240 $generated@@242 $generated@@243))
)))
(assert (forall (($generated@@244 T@U) ($generated@@245 T@U) ($generated@@246 T@U) ($generated@@247 T@U) ) (!  (=> (and (and (and (= (type $generated@@244) $generated@@64) (= (type $generated@@245) $generated@@64)) (= (type $generated@@246) $generated@@145)) (= (type $generated@@247) $generated@@145)) (= ($generated@@132 ($generated@@240 $generated@@246 $generated@@247) ($generated@@135 $generated@@244 $generated@@245))  (and ($generated@@241 $generated@@246 $generated@@244) ($generated@@241 $generated@@247 $generated@@245))))
 :pattern ( ($generated@@132 ($generated@@240 $generated@@246 $generated@@247) ($generated@@135 $generated@@244 $generated@@245)))
)))
(assert (forall (($generated@@248 T@U) ($generated@@249 T@U) ) (!  (=> (and (= (type $generated@@248) $generated@@136) (= (type $generated@@249) $generated@@136)) (= ($generated@@142 $generated@@248 $generated@@249) (= $generated@@248 $generated@@249)))
 :pattern ( ($generated@@142 $generated@@248 $generated@@249))
)))
(assert (forall (($generated@@250 T@U) ($generated@@251 Int) ) (! (let (($generated@@252 ($generated@@154 (type $generated@@250))))
 (=> (and (= (type $generated@@250) ($generated@@152 $generated@@252)) (= $generated@@251 0)) (= ($generated@@150 $generated@@250 $generated@@251) $generated@@250)))
 :pattern ( ($generated@@150 $generated@@250 $generated@@251))
)))
(assert (forall (($generated@@254 T@U) ) (! (= (type ($generated@@253 $generated@@254)) $generated@@64)
 :pattern ( ($generated@@253 $generated@@254))
)))
(assert (forall (($generated@@255 T@U) ($generated@@256 T@U) ) (!  (=> (and (= (type $generated@@255) ($generated@@76 $generated@@145 $generated@@4)) (= (type $generated@@256) $generated@@64)) (= ($generated@@132 $generated@@255 ($generated@@253 $generated@@256)) (forall (($generated@@257 T@U) ) (!  (=> (and (= (type $generated@@257) $generated@@145) ($generated@@0 ($generated@@81 $generated@@255 $generated@@257))) ($generated@@241 $generated@@257 $generated@@256))
 :pattern ( ($generated@@81 $generated@@255 $generated@@257))
))))
 :pattern ( ($generated@@132 $generated@@255 ($generated@@253 $generated@@256)))
)))
(assert (forall (($generated@@259 T@U) ) (! (= (type ($generated@@258 $generated@@259)) $generated@@64)
 :pattern ( ($generated@@258 $generated@@259))
)))
(assert (forall (($generated@@260 T@U) ($generated@@261 T@U) ) (!  (=> (and (= (type $generated@@260) ($generated@@76 $generated@@145 $generated@@4)) (= (type $generated@@261) $generated@@64)) (= ($generated@@132 $generated@@260 ($generated@@258 $generated@@261)) (forall (($generated@@262 T@U) ) (!  (=> (and (= (type $generated@@262) $generated@@145) ($generated@@0 ($generated@@81 $generated@@260 $generated@@262))) ($generated@@241 $generated@@262 $generated@@261))
 :pattern ( ($generated@@81 $generated@@260 $generated@@262))
))))
 :pattern ( ($generated@@132 $generated@@260 ($generated@@258 $generated@@261)))
)))
(assert (forall (($generated@@264 Int) ) (! (= ($generated@@263 $generated@@264) $generated@@264)
 :pattern ( ($generated@@263 $generated@@264))
)))
(assert (forall (($generated@@266 T@U) ) (! (let (($generated@@267 (type $generated@@266)))
(= (type ($generated@@265 $generated@@266)) $generated@@267))
 :pattern ( ($generated@@265 $generated@@266))
)))
(assert (forall (($generated@@268 T@U) ) (! (= ($generated@@265 $generated@@268) $generated@@268)
 :pattern ( ($generated@@265 $generated@@268))
)))
(assert (forall (($generated@@270 T@U) ) (! (= (type ($generated@@269 $generated@@270)) $generated@@64)
 :pattern ( ($generated@@269 $generated@@270))
)))
(assert (forall (($generated@@271 T@U) ($generated@@272 T@U) ($generated@@273 T@U) ) (!  (=> (and (and (and (= (type $generated@@271) ($generated@@152 $generated@@145)) (= (type $generated@@272) $generated@@145)) (= (type $generated@@273) $generated@@64)) (and ($generated@@132 $generated@@271 ($generated@@269 $generated@@273)) ($generated@@241 $generated@@272 $generated@@273))) ($generated@@132 ($generated@@151 $generated@@271 $generated@@272) ($generated@@269 $generated@@273)))
 :pattern ( ($generated@@132 ($generated@@151 $generated@@271 $generated@@272) ($generated@@269 $generated@@273)))
)))
(assert (forall (($generated@@275 T@U) ($generated@@276 Int) ) (! (let (($generated@@277 ($generated@@154 (type $generated@@275))))
(= (type ($generated@@274 $generated@@275 $generated@@276)) $generated@@277))
 :pattern ( ($generated@@274 $generated@@275 $generated@@276))
)))
(assert (forall (($generated@@278 T@U) ($generated@@279 Int) ($generated@@280 Int) ) (! (let (($generated@@281 ($generated@@154 (type $generated@@278))))
 (=> (= (type $generated@@278) ($generated@@152 $generated@@281)) (=> (and (and (<= 0 $generated@@280) (< $generated@@280 $generated@@279)) (< $generated@@280 ($generated@@153 $generated@@278))) (= ($generated@@274 ($generated@@228 $generated@@278 $generated@@279) $generated@@280) ($generated@@274 $generated@@278 $generated@@280)))))
 :weight 25
 :pattern ( ($generated@@274 ($generated@@228 $generated@@278 $generated@@279) $generated@@280))
 :pattern ( ($generated@@274 $generated@@278 $generated@@280) ($generated@@228 $generated@@278 $generated@@279))
)))
(assert (forall (($generated@@284 T@U) ($generated@@285 T@U) ($generated@@286 T@U) ($generated@@287 T@U) ($generated@@288 T@U) ) (!  (=> (and (and (and (and (and (= (type $generated@@284) $generated@@64) (= (type $generated@@285) $generated@@64)) (= (type $generated@@286) $generated@@145)) (= (type $generated@@287) $generated@@145)) (= (type $generated@@288) ($generated@@76 $generated@@77 $generated@@78))) ($generated@@282 $generated@@288)) (= ($generated@@74 ($generated@@240 $generated@@286 $generated@@287) ($generated@@135 $generated@@284 $generated@@285) $generated@@288)  (and ($generated@@283 $generated@@286 $generated@@284 $generated@@288) ($generated@@283 $generated@@287 $generated@@285 $generated@@288))))
 :pattern ( ($generated@@74 ($generated@@240 $generated@@286 $generated@@287) ($generated@@135 $generated@@284 $generated@@285) $generated@@288))
)))
(assert (forall (($generated@@289 T@U) ($generated@@290 Int) ) (! (let (($generated@@291 ($generated@@154 (type $generated@@289))))
 (=> (= (type $generated@@289) ($generated@@152 $generated@@291)) (=> (and (<= 0 $generated@@290) (<= $generated@@290 ($generated@@153 $generated@@289))) (= ($generated@@153 ($generated@@150 $generated@@289 $generated@@290)) (- ($generated@@153 $generated@@289) $generated@@290)))))
 :pattern ( ($generated@@153 ($generated@@150 $generated@@289 $generated@@290)))
)))
(assert (forall (($generated@@293 T@U) ) (! (= (type ($generated@@292 $generated@@293)) $generated@@68)
 :pattern ( ($generated@@292 $generated@@293))
)))
(assert (forall (($generated@@294 T@U) ) (!  (=> (= (type $generated@@294) $generated@@136) (= ($generated@@134 $generated@@294) (= ($generated@@292 $generated@@294) $generated@@61)))
 :pattern ( ($generated@@134 $generated@@294))
)))
(assert (forall (($generated@@296 T@U) ($generated@@297 T@U) ) (! (let (($generated@@298 ($generated@@154 (type $generated@@296))))
 (=> (and (= (type $generated@@296) ($generated@@152 $generated@@298)) (= (type $generated@@297) ($generated@@152 $generated@@298))) (= ($generated@@295 $generated@@296 $generated@@297)  (and (= ($generated@@153 $generated@@296) ($generated@@153 $generated@@297)) (forall (($generated@@299 Int) ) (!  (=> (and (<= 0 $generated@@299) (< $generated@@299 ($generated@@153 $generated@@296))) (= ($generated@@274 $generated@@296 $generated@@299) ($generated@@274 $generated@@297 $generated@@299)))
 :pattern ( ($generated@@274 $generated@@296 $generated@@299))
 :pattern ( ($generated@@274 $generated@@297 $generated@@299))
))))))
 :pattern ( ($generated@@295 $generated@@296 $generated@@297))
)))
(assert (forall (($generated@@301 T@U) ($generated@@302 Int) ) (! (let (($generated@@303 ($generated@@154 (type $generated@@301))))
 (=> (= (type $generated@@301) ($generated@@152 $generated@@303)) (=> (and (<= 0 $generated@@302) (< $generated@@302 ($generated@@153 $generated@@301))) (< ($generated@@300 ($generated@@228 $generated@@301 $generated@@302)) ($generated@@300 $generated@@301)))))
 :pattern ( ($generated@@300 ($generated@@228 $generated@@301 $generated@@302)))
)))
(assert (forall (($generated@@304 T@U) ) (!  (=> (and (= (type $generated@@304) $generated@@136) ($generated@@134 $generated@@304)) (exists (($generated@@305 T@U) ($generated@@306 T@U) ) (!  (and (and (= (type $generated@@305) $generated@@145) (= (type $generated@@306) $generated@@145)) (= $generated@@304 ($generated@@240 $generated@@305 $generated@@306)))
 :no-pattern (type $generated@@305)
 :no-pattern (type $generated@@306)
 :no-pattern ($generated $generated@@305)
 :no-pattern ($generated@@0 $generated@@305)
 :no-pattern ($generated $generated@@306)
 :no-pattern ($generated@@0 $generated@@306)
)))
 :pattern ( ($generated@@134 $generated@@304))
)))
(assert (forall (($generated@@308 T@T) ) (! (= (type ($generated@@307 $generated@@308)) ($generated@@152 $generated@@308))
 :pattern ( ($generated@@307 $generated@@308))
)))
(assert (forall (($generated@@309 T@T) ) (! (= ($generated@@153 ($generated@@307 $generated@@309)) 0)
 :pattern ( ($generated@@307 $generated@@309))
)))
(assert (forall (($generated@@310 T@U) ($generated@@311 Int) ) (! (let (($generated@@312 ($generated@@154 (type $generated@@310))))
 (=> (= (type $generated@@310) ($generated@@152 $generated@@312)) (=> (and (< 0 $generated@@311) (<= $generated@@311 ($generated@@153 $generated@@310))) (< ($generated@@300 ($generated@@150 $generated@@310 $generated@@311)) ($generated@@300 $generated@@310)))))
 :pattern ( ($generated@@300 ($generated@@150 $generated@@310 $generated@@311)))
)))
(assert (forall (($generated@@313 T@U) ($generated@@314 T@U) ) (! (let (($generated@@315 (type $generated@@314)))
 (=> (= (type $generated@@313) ($generated@@152 $generated@@315)) (= ($generated@@153 ($generated@@151 $generated@@313 $generated@@314)) (+ 1 ($generated@@153 $generated@@313)))))
 :pattern ( ($generated@@151 $generated@@313 $generated@@314))
)))
(assert (forall (($generated@@317 T@U) ) (! (= (type ($generated@@316 $generated@@317)) $generated@@145)
 :pattern ( ($generated@@316 $generated@@317))
)))
(assert (forall (($generated@@318 T@U) ($generated@@319 T@U) ($generated@@320 T@U) ) (!  (=> (and (= (type $generated@@319) $generated@@64) (= (type $generated@@320) ($generated@@76 $generated@@77 $generated@@78))) (= ($generated@@283 ($generated@@316 $generated@@318) $generated@@319 $generated@@320) ($generated@@74 $generated@@318 $generated@@319 $generated@@320)))
 :pattern ( ($generated@@283 ($generated@@316 $generated@@318) $generated@@319 $generated@@320))
)))
(assert (forall (($generated@@321 T@U) ($generated@@322 Int) ($generated@@323 Int) ) (! (let (($generated@@324 ($generated@@154 (type $generated@@321))))
 (=> (= (type $generated@@321) ($generated@@152 $generated@@324)) (=> (and (and (<= 0 $generated@@322) (<= 0 $generated@@323)) (< $generated@@323 (- ($generated@@153 $generated@@321) $generated@@322))) (= ($generated@@274 ($generated@@150 $generated@@321 $generated@@322) $generated@@323) ($generated@@274 $generated@@321 (+ $generated@@323 $generated@@322))))))
 :weight 25
 :pattern ( ($generated@@274 ($generated@@150 $generated@@321 $generated@@322) $generated@@323))
)))
(assert (forall (($generated@@327 T@T) ) (! (= (type ($generated@@326 $generated@@327)) ($generated@@76 $generated@@327 $generated@@2))
 :pattern ( ($generated@@326 $generated@@327))
)))
(assert (forall (($generated@@328 T@U) ) (! (let (($generated@@329 ($generated@@79 (type $generated@@328))))
 (=> (= (type $generated@@328) ($generated@@76 $generated@@329 $generated@@2)) (and (= (= ($generated@@325 $generated@@328) 0) (= $generated@@328 ($generated@@326 $generated@@329))) (=> (not (= ($generated@@325 $generated@@328) 0)) (exists (($generated@@330 T@U) ) (!  (and (= (type $generated@@330) $generated@@329) (< 0 ($generated ($generated@@81 $generated@@328 $generated@@330))))
 :no-pattern (type $generated@@330)
 :no-pattern ($generated $generated@@330)
 :no-pattern ($generated@@0 $generated@@330)
))))))
 :pattern ( ($generated@@325 $generated@@328))
)))
(assert  (and (and (and (and (forall (($generated@@336 T@T) ($generated@@337 T@T) ) (= ($generated@@1 ($generated@@333 $generated@@336 $generated@@337)) 18)) (forall (($generated@@338 T@T) ($generated@@339 T@T) ) (! (= ($generated@@334 ($generated@@333 $generated@@338 $generated@@339)) $generated@@338)
 :pattern ( ($generated@@333 $generated@@338 $generated@@339))
))) (forall (($generated@@340 T@T) ($generated@@341 T@T) ) (! (= ($generated@@335 ($generated@@333 $generated@@340 $generated@@341)) $generated@@341)
 :pattern ( ($generated@@333 $generated@@340 $generated@@341))
))) (forall (($generated@@342 T@U) ) (! (let (($generated@@343 ($generated@@334 (type $generated@@342))))
(= (type ($generated@@331 $generated@@342)) ($generated@@76 $generated@@343 $generated@@4)))
 :pattern ( ($generated@@331 $generated@@342))
))) (forall (($generated@@344 T@T) ($generated@@345 T@T) ) (! (= (type ($generated@@332 $generated@@344 $generated@@345)) ($generated@@333 $generated@@344 $generated@@345))
 :pattern ( ($generated@@332 $generated@@344 $generated@@345))
))))
(assert (forall (($generated@@346 T@U) ($generated@@347 T@T) ) (! (let (($generated@@348 (type $generated@@346)))
 (not ($generated@@0 ($generated@@81 ($generated@@331 ($generated@@332 $generated@@348 $generated@@347)) $generated@@346))))
 :pattern ( (let (($generated@@348 (type $generated@@346)))
($generated@@81 ($generated@@331 ($generated@@332 $generated@@348 $generated@@347)) $generated@@346)))
)))
(assert  (and (and (and (and (forall (($generated@@354 T@T) ($generated@@355 T@T) ) (= ($generated@@1 ($generated@@351 $generated@@354 $generated@@355)) 19)) (forall (($generated@@356 T@T) ($generated@@357 T@T) ) (! (= ($generated@@352 ($generated@@351 $generated@@356 $generated@@357)) $generated@@356)
 :pattern ( ($generated@@351 $generated@@356 $generated@@357))
))) (forall (($generated@@358 T@T) ($generated@@359 T@T) ) (! (= ($generated@@353 ($generated@@351 $generated@@358 $generated@@359)) $generated@@359)
 :pattern ( ($generated@@351 $generated@@358 $generated@@359))
))) (forall (($generated@@360 T@U) ) (! (let (($generated@@361 ($generated@@352 (type $generated@@360))))
(= (type ($generated@@349 $generated@@360)) ($generated@@76 $generated@@361 $generated@@4)))
 :pattern ( ($generated@@349 $generated@@360))
))) (forall (($generated@@362 T@T) ($generated@@363 T@T) ) (! (= (type ($generated@@350 $generated@@362 $generated@@363)) ($generated@@351 $generated@@362 $generated@@363))
 :pattern ( ($generated@@350 $generated@@362 $generated@@363))
))))
(assert (forall (($generated@@364 T@U) ($generated@@365 T@T) ) (! (let (($generated@@366 (type $generated@@364)))
 (not ($generated@@0 ($generated@@81 ($generated@@349 ($generated@@350 $generated@@366 $generated@@365)) $generated@@364))))
 :pattern ( (let (($generated@@366 (type $generated@@364)))
($generated@@81 ($generated@@349 ($generated@@350 $generated@@366 $generated@@365)) $generated@@364)))
)))
(assert (forall (($generated@@367 T@U) ($generated@@368 T@U) ) (! (let (($generated@@369 ($generated@@154 (type $generated@@367))))
 (=> (and (= (type $generated@@367) ($generated@@152 $generated@@369)) (= (type $generated@@368) ($generated@@152 $generated@@369))) (= ($generated@@153 ($generated@@229 $generated@@367 $generated@@368)) (+ ($generated@@153 $generated@@367) ($generated@@153 $generated@@368)))))
 :pattern ( ($generated@@153 ($generated@@229 $generated@@367 $generated@@368)))
)))
(assert (forall (($generated@@370 T@U) ) (! (let (($generated@@371 ($generated@@79 (type $generated@@370))))
 (=> (= (type $generated@@370) ($generated@@76 $generated@@371 $generated@@2)) (= ($generated@@168 $generated@@370) (forall (($generated@@372 T@U) ) (!  (=> (= (type $generated@@372) $generated@@371) (and (<= 0 ($generated ($generated@@81 $generated@@370 $generated@@372))) (<= ($generated ($generated@@81 $generated@@370 $generated@@372)) ($generated@@325 $generated@@370))))
 :pattern ( ($generated@@81 $generated@@370 $generated@@372))
)))))
 :pattern ( ($generated@@168 $generated@@370))
)))
(assert (forall (($generated@@373 T@U) ($generated@@374 Int) ($generated@@375 T@U) ) (! (let (($generated@@376 (type $generated@@375)))
 (=> (= (type $generated@@373) ($generated@@152 $generated@@376)) (and (=> (= $generated@@374 ($generated@@153 $generated@@373)) (= ($generated@@274 ($generated@@151 $generated@@373 $generated@@375) $generated@@374) $generated@@375)) (=> (not (= $generated@@374 ($generated@@153 $generated@@373))) (= ($generated@@274 ($generated@@151 $generated@@373 $generated@@375) $generated@@374) ($generated@@274 $generated@@373 $generated@@374))))))
 :pattern ( ($generated@@274 ($generated@@151 $generated@@373 $generated@@375) $generated@@374))
)))
(assert (forall (($generated@@377 T@U) ) (! (let (($generated@@378 ($generated@@335 (type $generated@@377))))
(let (($generated@@379 ($generated@@334 (type $generated@@377))))
 (=> (= (type $generated@@377) ($generated@@333 $generated@@379 $generated@@378)) (or (= $generated@@377 ($generated@@332 $generated@@379 $generated@@378)) (exists (($generated@@380 T@U) ) (!  (and (= (type $generated@@380) $generated@@379) ($generated@@0 ($generated@@81 ($generated@@331 $generated@@377) $generated@@380)))
 :no-pattern (type $generated@@380)
 :no-pattern ($generated $generated@@380)
 :no-pattern ($generated@@0 $generated@@380)
))))))
 :pattern ( ($generated@@331 $generated@@377))
)))
(assert (forall (($generated@@382 T@U) ) (! (let (($generated@@383 ($generated@@335 (type $generated@@382))))
(= (type ($generated@@381 $generated@@382)) ($generated@@76 $generated@@383 $generated@@4)))
 :pattern ( ($generated@@381 $generated@@382))
)))
(assert (forall (($generated@@384 T@U) ) (! (let (($generated@@385 ($generated@@335 (type $generated@@384))))
(let (($generated@@386 ($generated@@334 (type $generated@@384))))
 (=> (= (type $generated@@384) ($generated@@333 $generated@@386 $generated@@385)) (or (= $generated@@384 ($generated@@332 $generated@@386 $generated@@385)) (exists (($generated@@387 T@U) ) (!  (and (= (type $generated@@387) $generated@@385) ($generated@@0 ($generated@@81 ($generated@@381 $generated@@384) $generated@@387)))
 :no-pattern (type $generated@@387)
 :no-pattern ($generated $generated@@387)
 :no-pattern ($generated@@0 $generated@@387)
))))))
 :pattern ( ($generated@@381 $generated@@384))
)))
(assert (forall (($generated@@388 T@U) ) (! (let (($generated@@389 ($generated@@353 (type $generated@@388))))
(let (($generated@@390 ($generated@@352 (type $generated@@388))))
 (=> (= (type $generated@@388) ($generated@@351 $generated@@390 $generated@@389)) (or (= $generated@@388 ($generated@@350 $generated@@390 $generated@@389)) (exists (($generated@@391 T@U) ) (!  (and (= (type $generated@@391) $generated@@390) ($generated@@0 ($generated@@81 ($generated@@349 $generated@@388) $generated@@391)))
 :no-pattern (type $generated@@391)
 :no-pattern ($generated $generated@@391)
 :no-pattern ($generated@@0 $generated@@391)
))))))
 :pattern ( ($generated@@349 $generated@@388))
)))
(assert (forall (($generated@@393 T@U) ) (! (let (($generated@@394 ($generated@@353 (type $generated@@393))))
(= (type ($generated@@392 $generated@@393)) ($generated@@76 $generated@@394 $generated@@4)))
 :pattern ( ($generated@@392 $generated@@393))
)))
(assert (forall (($generated@@395 T@U) ) (! (let (($generated@@396 ($generated@@353 (type $generated@@395))))
(let (($generated@@397 ($generated@@352 (type $generated@@395))))
 (=> (= (type $generated@@395) ($generated@@351 $generated@@397 $generated@@396)) (or (= $generated@@395 ($generated@@350 $generated@@397 $generated@@396)) (exists (($generated@@398 T@U) ) (!  (and (= (type $generated@@398) $generated@@396) ($generated@@0 ($generated@@81 ($generated@@392 $generated@@395) $generated@@398)))
 :no-pattern (type $generated@@398)
 :no-pattern ($generated $generated@@398)
 :no-pattern ($generated@@0 $generated@@398)
))))))
 :pattern ( ($generated@@392 $generated@@395))
)))
(assert (forall (($generated@@399 T@U) ($generated@@400 T@U) ) (!  (=> (and (= (type $generated@@399) ($generated@@76 $generated@@145 $generated@@2)) (= (type $generated@@400) $generated@@64)) (= ($generated@@132 $generated@@399 ($generated@@167 $generated@@400)) (forall (($generated@@401 T@U) ) (!  (=> (and (= (type $generated@@401) $generated@@145) (< 0 ($generated ($generated@@81 $generated@@399 $generated@@401)))) ($generated@@241 $generated@@401 $generated@@400))
 :pattern ( ($generated@@81 $generated@@399 $generated@@401))
))))
 :pattern ( ($generated@@132 $generated@@399 ($generated@@167 $generated@@400)))
)))
(assert (forall (($generated@@402 T@U) ($generated@@403 T@U) ($generated@@404 T@U) ) (!  (=> (and (and (= (type $generated@@402) ($generated@@76 $generated@@145 $generated@@4)) (= (type $generated@@403) $generated@@64)) (= (type $generated@@404) ($generated@@76 $generated@@77 $generated@@78))) (= ($generated@@74 $generated@@402 ($generated@@253 $generated@@403) $generated@@404) (forall (($generated@@405 T@U) ) (!  (=> (and (= (type $generated@@405) $generated@@145) ($generated@@0 ($generated@@81 $generated@@402 $generated@@405))) ($generated@@283 $generated@@405 $generated@@403 $generated@@404))
 :pattern ( ($generated@@81 $generated@@402 $generated@@405))
))))
 :pattern ( ($generated@@74 $generated@@402 ($generated@@253 $generated@@403) $generated@@404))
)))
(assert (forall (($generated@@406 T@U) ($generated@@407 T@U) ($generated@@408 T@U) ) (!  (=> (and (and (= (type $generated@@406) ($generated@@76 $generated@@145 $generated@@4)) (= (type $generated@@407) $generated@@64)) (= (type $generated@@408) ($generated@@76 $generated@@77 $generated@@78))) (= ($generated@@74 $generated@@406 ($generated@@258 $generated@@407) $generated@@408) (forall (($generated@@409 T@U) ) (!  (=> (and (= (type $generated@@409) $generated@@145) ($generated@@0 ($generated@@81 $generated@@406 $generated@@409))) ($generated@@283 $generated@@409 $generated@@407 $generated@@408))
 :pattern ( ($generated@@81 $generated@@406 $generated@@409))
))))
 :pattern ( ($generated@@74 $generated@@406 ($generated@@258 $generated@@407) $generated@@408))
)))
(assert (forall (($generated@@410 T@U) ) (! (let (($generated@@411 (type $generated@@410)))
(= ($generated ($generated@@81 ($generated@@326 $generated@@411) $generated@@410)) 0))
 :pattern ( (let (($generated@@411 (type $generated@@410)))
($generated@@81 ($generated@@326 $generated@@411) $generated@@410)))
)))
(assert  (and (and (forall (($generated@@415 T@U) ) (! (= (type ($generated@@412 $generated@@415)) ($generated@@76 $generated@@145 $generated@@4))
 :pattern ( ($generated@@412 $generated@@415))
)) (forall (($generated@@416 T@T) ($generated@@417 T@U) ) (! (= (type ($generated@@413 $generated@@416 $generated@@417)) $generated@@416)
 :pattern ( ($generated@@413 $generated@@416 $generated@@417))
))) (forall (($generated@@418 T@U) ) (! (let (($generated@@419 ($generated@@335 (type $generated@@418))))
(let (($generated@@420 ($generated@@334 (type $generated@@418))))
(= (type ($generated@@414 $generated@@418)) ($generated@@76 $generated@@420 $generated@@419))))
 :pattern ( ($generated@@414 $generated@@418))
))))
(assert (forall (($generated@@421 T@U) ($generated@@422 T@U) ) (!  (=> (and (= (type $generated@@421) ($generated@@333 $generated@@145 $generated@@145)) (= (type $generated@@422) $generated@@145)) (= ($generated@@0 ($generated@@81 ($generated@@412 $generated@@421) $generated@@422))  (and ($generated@@0 ($generated@@81 ($generated@@331 $generated@@421) ($generated@@143 ($generated@@413 $generated@@136 $generated@@422)))) (= ($generated@@81 ($generated@@414 $generated@@421) ($generated@@143 ($generated@@413 $generated@@136 $generated@@422))) ($generated@@144 ($generated@@413 $generated@@136 $generated@@422))))))
 :pattern ( ($generated@@81 ($generated@@412 $generated@@421) $generated@@422))
)))
(assert  (and (forall (($generated@@425 T@U) ) (! (= (type ($generated@@423 $generated@@425)) ($generated@@76 $generated@@145 $generated@@4))
 :pattern ( ($generated@@423 $generated@@425))
)) (forall (($generated@@426 T@U) ) (! (let (($generated@@427 ($generated@@353 (type $generated@@426))))
(let (($generated@@428 ($generated@@352 (type $generated@@426))))
(= (type ($generated@@424 $generated@@426)) ($generated@@76 $generated@@428 $generated@@427))))
 :pattern ( ($generated@@424 $generated@@426))
))))
(assert (forall (($generated@@429 T@U) ($generated@@430 T@U) ) (!  (=> (and (= (type $generated@@429) ($generated@@351 $generated@@145 $generated@@145)) (= (type $generated@@430) $generated@@145)) (= ($generated@@0 ($generated@@81 ($generated@@423 $generated@@429) $generated@@430))  (and ($generated@@0 ($generated@@81 ($generated@@349 $generated@@429) ($generated@@143 ($generated@@413 $generated@@136 $generated@@430)))) (= ($generated@@81 ($generated@@424 $generated@@429) ($generated@@143 ($generated@@413 $generated@@136 $generated@@430))) ($generated@@144 ($generated@@413 $generated@@136 $generated@@430))))))
 :pattern ( ($generated@@81 ($generated@@423 $generated@@429) $generated@@430))
)))
(assert (forall (($generated@@431 T@U) ($generated@@432 T@U) ) (! (let (($generated@@433 (type $generated@@432)))
(let (($generated@@434 ($generated@@334 (type $generated@@431))))
 (=> (= (type $generated@@431) ($generated@@333 $generated@@434 $generated@@433)) (= ($generated@@0 ($generated@@81 ($generated@@381 $generated@@431) $generated@@432)) (exists (($generated@@435 T@U) ) (!  (and (= (type $generated@@435) $generated@@434) (and ($generated@@0 ($generated@@81 ($generated@@331 $generated@@431) $generated@@435)) (= $generated@@432 ($generated@@81 ($generated@@414 $generated@@431) $generated@@435))))
 :pattern ( ($generated@@81 ($generated@@331 $generated@@431) $generated@@435))
 :pattern ( ($generated@@81 ($generated@@414 $generated@@431) $generated@@435))
))))))
 :pattern ( ($generated@@81 ($generated@@381 $generated@@431) $generated@@432))
)))
(assert (forall (($generated@@436 T@U) ($generated@@437 T@U) ) (! (let (($generated@@438 (type $generated@@437)))
(let (($generated@@439 ($generated@@352 (type $generated@@436))))
 (=> (= (type $generated@@436) ($generated@@351 $generated@@439 $generated@@438)) (= ($generated@@0 ($generated@@81 ($generated@@392 $generated@@436) $generated@@437)) (exists (($generated@@440 T@U) ) (!  (and (= (type $generated@@440) $generated@@439) (and ($generated@@0 ($generated@@81 ($generated@@349 $generated@@436) $generated@@440)) (= $generated@@437 ($generated@@81 ($generated@@424 $generated@@436) $generated@@440))))
 :pattern ( ($generated@@81 ($generated@@349 $generated@@436) $generated@@440))
 :pattern ( ($generated@@81 ($generated@@424 $generated@@436) $generated@@440))
))))))
 :pattern ( ($generated@@81 ($generated@@392 $generated@@436) $generated@@437))
)))
(assert (forall (($generated@@442 T@U) ($generated@@443 T@U) ) (! (= (type ($generated@@441 $generated@@442 $generated@@443)) $generated@@64)
 :pattern ( ($generated@@441 $generated@@442 $generated@@443))
)))
(assert (forall (($generated@@444 T@U) ($generated@@445 T@U) ($generated@@446 T@U) ($generated@@447 T@U) ) (!  (=> (and (and (and (= (type $generated@@444) ($generated@@333 $generated@@145 $generated@@145)) (= (type $generated@@445) $generated@@64)) (= (type $generated@@446) $generated@@64)) (= (type $generated@@447) ($generated@@76 $generated@@77 $generated@@78))) (= ($generated@@74 $generated@@444 ($generated@@441 $generated@@445 $generated@@446) $generated@@447) (forall (($generated@@448 T@U) ) (!  (=> (and (= (type $generated@@448) $generated@@145) ($generated@@0 ($generated@@81 ($generated@@331 $generated@@444) $generated@@448))) (and ($generated@@283 ($generated@@81 ($generated@@414 $generated@@444) $generated@@448) $generated@@446 $generated@@447) ($generated@@283 $generated@@448 $generated@@445 $generated@@447)))
 :pattern ( ($generated@@81 ($generated@@414 $generated@@444) $generated@@448))
 :pattern ( ($generated@@81 ($generated@@331 $generated@@444) $generated@@448))
))))
 :pattern ( ($generated@@74 $generated@@444 ($generated@@441 $generated@@445 $generated@@446) $generated@@447))
)))
(assert (forall (($generated@@450 T@U) ($generated@@451 T@U) ) (! (= (type ($generated@@449 $generated@@450 $generated@@451)) $generated@@64)
 :pattern ( ($generated@@449 $generated@@450 $generated@@451))
)))
(assert (forall (($generated@@452 T@U) ($generated@@453 T@U) ($generated@@454 T@U) ($generated@@455 T@U) ) (!  (=> (and (and (and (= (type $generated@@452) ($generated@@351 $generated@@145 $generated@@145)) (= (type $generated@@453) $generated@@64)) (= (type $generated@@454) $generated@@64)) (= (type $generated@@455) ($generated@@76 $generated@@77 $generated@@78))) (= ($generated@@74 $generated@@452 ($generated@@449 $generated@@453 $generated@@454) $generated@@455) (forall (($generated@@456 T@U) ) (!  (=> (and (= (type $generated@@456) $generated@@145) ($generated@@0 ($generated@@81 ($generated@@349 $generated@@452) $generated@@456))) (and ($generated@@283 ($generated@@81 ($generated@@424 $generated@@452) $generated@@456) $generated@@454 $generated@@455) ($generated@@283 $generated@@456 $generated@@453 $generated@@455)))
 :pattern ( ($generated@@81 ($generated@@424 $generated@@452) $generated@@456))
 :pattern ( ($generated@@81 ($generated@@349 $generated@@452) $generated@@456))
))))
 :pattern ( ($generated@@74 $generated@@452 ($generated@@449 $generated@@453 $generated@@454) $generated@@455))
)))
(assert (forall (($generated@@457 T@U) ($generated@@458 T@U) ) (! (let (($generated@@459 ($generated@@154 (type $generated@@457))))
 (=> (and (and (= (type $generated@@457) ($generated@@152 $generated@@459)) (= (type $generated@@458) ($generated@@152 $generated@@459))) ($generated@@295 $generated@@457 $generated@@458)) (= $generated@@457 $generated@@458)))
 :pattern ( ($generated@@295 $generated@@457 $generated@@458))
)))
(assert (forall (($generated@@460 T@U) ($generated@@461 Int) ) (! (let (($generated@@462 ($generated@@154 (type $generated@@460))))
 (=> (= (type $generated@@460) ($generated@@152 $generated@@462)) (=> (and (<= 0 $generated@@461) (<= $generated@@461 ($generated@@153 $generated@@460))) (= ($generated@@153 ($generated@@228 $generated@@460 $generated@@461)) $generated@@461))))
 :pattern ( ($generated@@153 ($generated@@228 $generated@@460 $generated@@461)))
)))
(assert (forall (($generated@@464 T@T) ) (! (= (type ($generated@@463 $generated@@464)) ($generated@@76 $generated@@464 $generated@@4))
 :pattern ( ($generated@@463 $generated@@464))
)))
(assert (forall (($generated@@465 T@U) ) (! (let (($generated@@466 ($generated@@353 (type $generated@@465))))
(let (($generated@@467 ($generated@@352 (type $generated@@465))))
 (=> (= (type $generated@@465) ($generated@@351 $generated@@467 $generated@@466)) (= (= $generated@@465 ($generated@@350 $generated@@467 $generated@@466)) (= ($generated@@349 $generated@@465) ($generated@@463 $generated@@467))))))
 :pattern ( ($generated@@349 $generated@@465))
)))
(assert (forall (($generated@@468 T@U) ) (! (let (($generated@@469 ($generated@@353 (type $generated@@468))))
(let (($generated@@470 ($generated@@352 (type $generated@@468))))
 (=> (= (type $generated@@468) ($generated@@351 $generated@@470 $generated@@469)) (= (= $generated@@468 ($generated@@350 $generated@@470 $generated@@469)) (= ($generated@@392 $generated@@468) ($generated@@463 $generated@@469))))))
 :pattern ( ($generated@@392 $generated@@468))
)))
(assert (forall (($generated@@471 T@U) ) (! (let (($generated@@472 ($generated@@353 (type $generated@@471))))
(let (($generated@@473 ($generated@@352 (type $generated@@471))))
 (=> (= (type $generated@@471) ($generated@@351 $generated@@473 $generated@@472)) (= (= $generated@@471 ($generated@@350 $generated@@473 $generated@@472)) (= ($generated@@423 $generated@@471) ($generated@@463 $generated@@145))))))
 :pattern ( ($generated@@423 $generated@@471))
)))
(assert (forall (($generated@@474 T@U) ) (! (let (($generated@@475 ($generated@@335 (type $generated@@474))))
(let (($generated@@476 ($generated@@334 (type $generated@@474))))
 (=> (= (type $generated@@474) ($generated@@333 $generated@@476 $generated@@475)) (or (= $generated@@474 ($generated@@332 $generated@@476 $generated@@475)) (exists (($generated@@477 T@U) ($generated@@478 T@U) ) (!  (and (and (= (type $generated@@477) $generated@@145) (= (type $generated@@478) $generated@@145)) ($generated@@0 ($generated@@81 ($generated@@412 $generated@@474) ($generated@@316 ($generated@@240 $generated@@477 $generated@@478)))))
 :no-pattern (type $generated@@477)
 :no-pattern (type $generated@@478)
 :no-pattern ($generated $generated@@477)
 :no-pattern ($generated@@0 $generated@@477)
 :no-pattern ($generated $generated@@478)
 :no-pattern ($generated@@0 $generated@@478)
))))))
 :pattern ( ($generated@@412 $generated@@474))
)))
(assert (forall (($generated@@479 T@U) ) (! (let (($generated@@480 ($generated@@353 (type $generated@@479))))
(let (($generated@@481 ($generated@@352 (type $generated@@479))))
 (=> (= (type $generated@@479) ($generated@@351 $generated@@481 $generated@@480)) (or (= $generated@@479 ($generated@@350 $generated@@481 $generated@@480)) (exists (($generated@@482 T@U) ($generated@@483 T@U) ) (!  (and (and (= (type $generated@@482) $generated@@145) (= (type $generated@@483) $generated@@145)) ($generated@@0 ($generated@@81 ($generated@@423 $generated@@479) ($generated@@316 ($generated@@240 $generated@@482 $generated@@483)))))
 :no-pattern (type $generated@@482)
 :no-pattern (type $generated@@483)
 :no-pattern ($generated $generated@@482)
 :no-pattern ($generated@@0 $generated@@482)
 :no-pattern ($generated $generated@@483)
 :no-pattern ($generated@@0 $generated@@483)
))))))
 :pattern ( ($generated@@423 $generated@@479))
)))
(assert (forall (($generated@@484 T@U) ) (!  (=> (and (= (type $generated@@484) $generated@@145) ($generated@@241 $generated@@484 $generated@@46)) (and (= ($generated@@316 ($generated@@413 $generated@@2 $generated@@484)) $generated@@484) ($generated@@132 ($generated@@413 $generated@@2 $generated@@484) $generated@@46)))
 :pattern ( ($generated@@241 $generated@@484 $generated@@46))
)))
(assert (forall (($generated@@485 T@U) ) (!  (=> (and (= (type $generated@@485) $generated@@145) ($generated@@241 $generated@@485 $generated@@47)) (and (= ($generated@@316 ($generated@@413 $generated@@3 $generated@@485)) $generated@@485) ($generated@@132 ($generated@@413 $generated@@3 $generated@@485) $generated@@47)))
 :pattern ( ($generated@@241 $generated@@485 $generated@@47))
)))
(assert (forall (($generated@@486 T@U) ) (!  (=> (and (= (type $generated@@486) $generated@@145) ($generated@@241 $generated@@486 $generated@@44)) (and (= ($generated@@316 ($generated@@413 $generated@@4 $generated@@486)) $generated@@486) ($generated@@132 ($generated@@413 $generated@@4 $generated@@486) $generated@@44)))
 :pattern ( ($generated@@241 $generated@@486 $generated@@44))
)))
(assert (= ($generated@@1 $generated@@487) 20))
(assert (forall (($generated@@488 T@U) ) (!  (=> (and (= (type $generated@@488) $generated@@145) ($generated@@241 $generated@@488 $generated@@45)) (and (= ($generated@@316 ($generated@@413 $generated@@487 $generated@@488)) $generated@@488) ($generated@@132 ($generated@@413 $generated@@487 $generated@@488) $generated@@45)))
 :pattern ( ($generated@@241 $generated@@488 $generated@@45))
)))
(assert (forall (($generated@@489 T@U) ($generated@@490 T@U) ) (!  (=> (= (type $generated@@490) $generated@@64) (= ($generated@@241 ($generated@@316 $generated@@489) $generated@@490) ($generated@@132 $generated@@489 $generated@@490)))
 :pattern ( ($generated@@241 ($generated@@316 $generated@@489) $generated@@490))
)))
(assert (forall (($generated@@491 T@U) ) (! (let (($generated@@492 ($generated@@79 (type $generated@@491))))
 (=> (= (type $generated@@491) ($generated@@76 $generated@@492 $generated@@2)) (<= 0 ($generated@@325 $generated@@491))))
 :pattern ( ($generated@@325 $generated@@491))
)))
(assert (forall (($generated@@493 T@U) ) (! (let (($generated@@494 ($generated@@154 (type $generated@@493))))
 (=> (= (type $generated@@493) ($generated@@152 $generated@@494)) (<= 0 ($generated@@153 $generated@@493))))
 :pattern ( ($generated@@153 $generated@@493))
)))
(assert (forall (($generated@@495 T@U) ($generated@@496 Int) ($generated@@497 Int) ) (! (let (($generated@@498 ($generated@@154 (type $generated@@495))))
 (=> (= (type $generated@@495) ($generated@@152 $generated@@498)) (=> (and (and (<= 0 $generated@@496) (< $generated@@496 $generated@@497)) (<= $generated@@497 ($generated@@153 $generated@@495))) (< ($generated@@300 ($generated@@229 ($generated@@228 $generated@@495 $generated@@496) ($generated@@150 $generated@@495 $generated@@497))) ($generated@@300 $generated@@495)))))
 :pattern ( ($generated@@300 ($generated@@229 ($generated@@228 $generated@@495 $generated@@496) ($generated@@150 $generated@@495 $generated@@497))))
)))
(assert (forall (($generated@@500 T@U) ) (! (= (type ($generated@@499 $generated@@500)) $generated@@64)
 :pattern ( ($generated@@499 $generated@@500))
)))
(assert (forall (($generated@@501 T@U) ($generated@@502 T@U) ) (!  (=> (and (= (type $generated@@501) $generated@@64) (= (type $generated@@502) $generated@@64)) (= ($generated@@499 ($generated@@441 $generated@@501 $generated@@502)) $generated@@501))
 :pattern ( ($generated@@441 $generated@@501 $generated@@502))
)))
(assert (forall (($generated@@504 T@U) ) (! (= (type ($generated@@503 $generated@@504)) $generated@@64)
 :pattern ( ($generated@@503 $generated@@504))
)))
(assert (forall (($generated@@505 T@U) ($generated@@506 T@U) ) (!  (=> (and (= (type $generated@@505) $generated@@64) (= (type $generated@@506) $generated@@64)) (= ($generated@@503 ($generated@@441 $generated@@505 $generated@@506)) $generated@@506))
 :pattern ( ($generated@@441 $generated@@505 $generated@@506))
)))
(assert (forall (($generated@@507 T@U) ($generated@@508 T@U) ) (!  (=> (and (= (type $generated@@507) $generated@@64) (= (type $generated@@508) $generated@@64)) (= ($generated@@72 ($generated@@441 $generated@@507 $generated@@508)) $generated@@58))
 :pattern ( ($generated@@441 $generated@@507 $generated@@508))
)))
(assert (forall (($generated@@510 T@U) ) (! (= (type ($generated@@509 $generated@@510)) $generated@@64)
 :pattern ( ($generated@@509 $generated@@510))
)))
(assert (forall (($generated@@511 T@U) ($generated@@512 T@U) ) (!  (=> (and (= (type $generated@@511) $generated@@64) (= (type $generated@@512) $generated@@64)) (= ($generated@@509 ($generated@@449 $generated@@511 $generated@@512)) $generated@@511))
 :pattern ( ($generated@@449 $generated@@511 $generated@@512))
)))
(assert (forall (($generated@@514 T@U) ) (! (= (type ($generated@@513 $generated@@514)) $generated@@64)
 :pattern ( ($generated@@513 $generated@@514))
)))
(assert (forall (($generated@@515 T@U) ($generated@@516 T@U) ) (!  (=> (and (= (type $generated@@515) $generated@@64) (= (type $generated@@516) $generated@@64)) (= ($generated@@513 ($generated@@449 $generated@@515 $generated@@516)) $generated@@516))
 :pattern ( ($generated@@449 $generated@@515 $generated@@516))
)))
(assert (forall (($generated@@517 T@U) ($generated@@518 T@U) ) (!  (=> (and (= (type $generated@@517) $generated@@64) (= (type $generated@@518) $generated@@64)) (= ($generated@@72 ($generated@@449 $generated@@517 $generated@@518)) $generated@@59))
 :pattern ( ($generated@@449 $generated@@517 $generated@@518))
)))
(assert (forall (($generated@@519 T@U) ($generated@@520 T@U) ) (!  (=> (and (= (type $generated@@519) $generated@@145) (= (type $generated@@520) $generated@@145)) (= ($generated@@292 ($generated@@240 $generated@@519 $generated@@520)) $generated@@61))
 :pattern ( ($generated@@240 $generated@@519 $generated@@520))
)))
(assert (forall (($generated@@522 T@U) ) (! (= (type ($generated@@521 $generated@@522)) $generated@@64)
 :pattern ( ($generated@@521 $generated@@522))
)))
(assert (forall (($generated@@523 T@U) ($generated@@524 T@U) ) (!  (=> (and (= (type $generated@@523) $generated@@64) (= (type $generated@@524) $generated@@64)) (= ($generated@@521 ($generated@@135 $generated@@523 $generated@@524)) $generated@@523))
 :pattern ( ($generated@@135 $generated@@523 $generated@@524))
)))
(assert (forall (($generated@@526 T@U) ) (! (= (type ($generated@@525 $generated@@526)) $generated@@64)
 :pattern ( ($generated@@525 $generated@@526))
)))
(assert (forall (($generated@@527 T@U) ($generated@@528 T@U) ) (!  (=> (and (= (type $generated@@527) $generated@@64) (= (type $generated@@528) $generated@@64)) (= ($generated@@525 ($generated@@135 $generated@@527 $generated@@528)) $generated@@528))
 :pattern ( ($generated@@135 $generated@@527 $generated@@528))
)))
(assert (forall (($generated@@529 T@U) ($generated@@530 T@U) ) (!  (=> (and (= (type $generated@@529) $generated@@145) (= (type $generated@@530) $generated@@145)) (= ($generated@@143 ($generated@@240 $generated@@529 $generated@@530)) $generated@@529))
 :pattern ( ($generated@@240 $generated@@529 $generated@@530))
)))
(assert (forall (($generated@@531 T@U) ($generated@@532 T@U) ) (!  (=> (and (= (type $generated@@531) $generated@@145) (= (type $generated@@532) $generated@@145)) (= ($generated@@144 ($generated@@240 $generated@@531 $generated@@532)) $generated@@532))
 :pattern ( ($generated@@240 $generated@@531 $generated@@532))
)))
(assert (forall (($generated@@533 T@U) ($generated@@534 T@U) ($generated@@535 T@U) ) (!  (=> (and (and (= (type $generated@@533) ($generated@@152 $generated@@145)) (= (type $generated@@534) $generated@@64)) (= (type $generated@@535) ($generated@@76 $generated@@77 $generated@@78))) (= ($generated@@74 $generated@@533 ($generated@@269 $generated@@534) $generated@@535) (forall (($generated@@536 Int) ) (!  (=> (and (<= 0 $generated@@536) (< $generated@@536 ($generated@@153 $generated@@533))) ($generated@@283 ($generated@@274 $generated@@533 $generated@@536) $generated@@534 $generated@@535))
 :pattern ( ($generated@@274 $generated@@533 $generated@@536))
))))
 :pattern ( ($generated@@74 $generated@@533 ($generated@@269 $generated@@534) $generated@@535))
)))
(assert (forall (($generated@@538 Int) ) (! (= ($generated@@537 ($generated@@75 $generated@@538)) $generated@@538)
 :pattern ( ($generated@@75 $generated@@538))
)))
(assert (forall (($generated@@540 T@U) ) (! (= (type ($generated@@539 $generated@@540)) $generated@@64)
 :pattern ( ($generated@@539 $generated@@540))
)))
(assert (forall (($generated@@541 T@U) ) (!  (=> (= (type $generated@@541) $generated@@64) (= ($generated@@539 ($generated@@253 $generated@@541)) $generated@@541))
 :pattern ( ($generated@@253 $generated@@541))
)))
(assert (forall (($generated@@542 T@U) ) (!  (=> (= (type $generated@@542) $generated@@64) (= ($generated@@72 ($generated@@253 $generated@@542)) $generated@@54))
 :pattern ( ($generated@@253 $generated@@542))
)))
(assert (forall (($generated@@544 T@U) ) (! (= (type ($generated@@543 $generated@@544)) $generated@@64)
 :pattern ( ($generated@@543 $generated@@544))
)))
(assert (forall (($generated@@545 T@U) ) (!  (=> (= (type $generated@@545) $generated@@64) (= ($generated@@543 ($generated@@258 $generated@@545)) $generated@@545))
 :pattern ( ($generated@@258 $generated@@545))
)))
(assert (forall (($generated@@546 T@U) ) (!  (=> (= (type $generated@@546) $generated@@64) (= ($generated@@72 ($generated@@258 $generated@@546)) $generated@@55))
 :pattern ( ($generated@@258 $generated@@546))
)))
(assert (forall (($generated@@548 T@U) ) (! (= (type ($generated@@547 $generated@@548)) $generated@@64)
 :pattern ( ($generated@@547 $generated@@548))
)))
(assert (forall (($generated@@549 T@U) ) (!  (=> (= (type $generated@@549) $generated@@64) (= ($generated@@547 ($generated@@167 $generated@@549)) $generated@@549))
 :pattern ( ($generated@@167 $generated@@549))
)))
(assert (forall (($generated@@550 T@U) ) (!  (=> (= (type $generated@@550) $generated@@64) (= ($generated@@72 ($generated@@167 $generated@@550)) $generated@@56))
 :pattern ( ($generated@@167 $generated@@550))
)))
(assert (forall (($generated@@552 T@U) ) (! (= (type ($generated@@551 $generated@@552)) $generated@@64)
 :pattern ( ($generated@@551 $generated@@552))
)))
(assert (forall (($generated@@553 T@U) ) (!  (=> (= (type $generated@@553) $generated@@64) (= ($generated@@551 ($generated@@269 $generated@@553)) $generated@@553))
 :pattern ( ($generated@@269 $generated@@553))
)))
(assert (forall (($generated@@554 T@U) ) (!  (=> (= (type $generated@@554) $generated@@64) (= ($generated@@72 ($generated@@269 $generated@@554)) $generated@@57))
 :pattern ( ($generated@@269 $generated@@554))
)))
(assert (forall (($generated@@555 T@U) ) (! (let (($generated@@556 (type $generated@@555)))
(= ($generated@@413 $generated@@556 ($generated@@316 $generated@@555)) $generated@@555))
 :pattern ( ($generated@@316 $generated@@555))
)))
(assert (forall (($generated@@557 T@U) ($generated@@558 T@U) ($generated@@559 T@U) ) (!  (=> (and (and (= (type $generated@@557) ($generated@@333 $generated@@145 $generated@@145)) (= (type $generated@@558) $generated@@64)) (= (type $generated@@559) $generated@@64)) (= ($generated@@132 $generated@@557 ($generated@@441 $generated@@558 $generated@@559)) (forall (($generated@@560 T@U) ) (!  (=> (and (= (type $generated@@560) $generated@@145) ($generated@@0 ($generated@@81 ($generated@@331 $generated@@557) $generated@@560))) (and ($generated@@241 ($generated@@81 ($generated@@414 $generated@@557) $generated@@560) $generated@@559) ($generated@@241 $generated@@560 $generated@@558)))
 :pattern ( ($generated@@81 ($generated@@414 $generated@@557) $generated@@560))
 :pattern ( ($generated@@81 ($generated@@331 $generated@@557) $generated@@560))
))))
 :pattern ( ($generated@@132 $generated@@557 ($generated@@441 $generated@@558 $generated@@559)))
)))
(assert (forall (($generated@@561 T@U) ($generated@@562 T@U) ($generated@@563 T@U) ) (!  (=> (and (and (= (type $generated@@561) ($generated@@351 $generated@@145 $generated@@145)) (= (type $generated@@562) $generated@@64)) (= (type $generated@@563) $generated@@64)) (= ($generated@@132 $generated@@561 ($generated@@449 $generated@@562 $generated@@563)) (forall (($generated@@564 T@U) ) (!  (=> (and (= (type $generated@@564) $generated@@145) ($generated@@0 ($generated@@81 ($generated@@349 $generated@@561) $generated@@564))) (and ($generated@@241 ($generated@@81 ($generated@@424 $generated@@561) $generated@@564) $generated@@563) ($generated@@241 $generated@@564 $generated@@562)))
 :pattern ( ($generated@@81 ($generated@@424 $generated@@561) $generated@@564))
 :pattern ( ($generated@@81 ($generated@@349 $generated@@561) $generated@@564))
))))
 :pattern ( ($generated@@132 $generated@@561 ($generated@@449 $generated@@562 $generated@@563)))
)))
(assert (forall (($generated@@567 T@U) ($generated@@568 T@U) ) (!  (=> (and (= (type $generated@@567) $generated@@145) (= (type $generated@@568) $generated@@145)) (< ($generated@@565 $generated@@567) ($generated@@566 ($generated@@240 $generated@@567 $generated@@568))))
 :pattern ( ($generated@@240 $generated@@567 $generated@@568))
)))
(assert (forall (($generated@@569 T@U) ($generated@@570 T@U) ) (!  (=> (and (= (type $generated@@569) $generated@@145) (= (type $generated@@570) $generated@@145)) (< ($generated@@565 $generated@@570) ($generated@@566 ($generated@@240 $generated@@569 $generated@@570))))
 :pattern ( ($generated@@240 $generated@@569 $generated@@570))
)))
(assert (forall (($generated@@571 T@U) ($generated@@572 T@U) ($generated@@573 T@U) ) (!  (=> (and (and (and (= (type $generated@@571) $generated@@145) (= (type $generated@@572) $generated@@64)) (= (type $generated@@573) $generated@@64)) ($generated@@241 $generated@@571 ($generated@@441 $generated@@572 $generated@@573))) (and (= ($generated@@316 ($generated@@413 ($generated@@333 $generated@@145 $generated@@145) $generated@@571)) $generated@@571) ($generated@@132 ($generated@@413 ($generated@@333 $generated@@145 $generated@@145) $generated@@571) ($generated@@441 $generated@@572 $generated@@573))))
 :pattern ( ($generated@@241 $generated@@571 ($generated@@441 $generated@@572 $generated@@573)))
)))
(assert (forall (($generated@@574 T@U) ($generated@@575 T@U) ($generated@@576 T@U) ) (!  (=> (and (and (and (= (type $generated@@574) $generated@@145) (= (type $generated@@575) $generated@@64)) (= (type $generated@@576) $generated@@64)) ($generated@@241 $generated@@574 ($generated@@449 $generated@@575 $generated@@576))) (and (= ($generated@@316 ($generated@@413 ($generated@@351 $generated@@145 $generated@@145) $generated@@574)) $generated@@574) ($generated@@132 ($generated@@413 ($generated@@351 $generated@@145 $generated@@145) $generated@@574) ($generated@@449 $generated@@575 $generated@@576))))
 :pattern ( ($generated@@241 $generated@@574 ($generated@@449 $generated@@575 $generated@@576)))
)))
(assert (forall (($generated@@577 T@U) ($generated@@578 T@U) ($generated@@579 T@U) ) (!  (=> (and (and (and (= (type $generated@@577) $generated@@64) (= (type $generated@@578) $generated@@64)) (= (type $generated@@579) $generated@@145)) ($generated@@241 $generated@@579 ($generated@@135 $generated@@577 $generated@@578))) (and (= ($generated@@316 ($generated@@413 $generated@@136 $generated@@579)) $generated@@579) ($generated@@132 ($generated@@413 $generated@@136 $generated@@579) ($generated@@135 $generated@@577 $generated@@578))))
 :pattern ( ($generated@@241 $generated@@579 ($generated@@135 $generated@@577 $generated@@578)))
)))
(assert (forall (($generated@@580 T@U) ) (! (let (($generated@@581 (type $generated@@580)))
 (not ($generated@@0 ($generated@@81 ($generated@@463 $generated@@581) $generated@@580))))
 :pattern ( (let (($generated@@581 (type $generated@@580)))
($generated@@81 ($generated@@463 $generated@@581) $generated@@580)))
)))
(assert (forall (($generated@@583 T@U) ) (! (= (type ($generated@@582 $generated@@583)) $generated@@69)
 :pattern ( ($generated@@582 $generated@@583))
)))
(assert (forall (($generated@@584 T@U) ($generated@@585 T@U) ) (!  (=> (and (= (type $generated@@584) $generated@@64) (= (type $generated@@585) $generated@@64)) (and (= ($generated@@72 ($generated@@135 $generated@@584 $generated@@585)) $generated@@62) (= ($generated@@582 ($generated@@135 $generated@@584 $generated@@585)) $generated@@63)))
 :pattern ( ($generated@@135 $generated@@584 $generated@@585))
)))
(assert  (and (forall (($generated@@588 T@U) ) (! (let (($generated@@589 ($generated@@154 (type $generated@@588))))
(= (type ($generated@@586 $generated@@588)) ($generated@@152 $generated@@589)))
 :pattern ( ($generated@@586 $generated@@588))
)) (forall (($generated@@590 T@U) ) (! (let (($generated@@591 ($generated@@154 (type $generated@@590))))
(= (type ($generated@@587 $generated@@590)) $generated@@591))
 :pattern ( ($generated@@587 $generated@@590))
))))
(assert (forall (($generated@@592 T@U) ($generated@@593 T@U) ) (! (let (($generated@@594 (type $generated@@593)))
 (=> (= (type $generated@@592) ($generated@@152 $generated@@594)) (and (= ($generated@@586 ($generated@@151 $generated@@592 $generated@@593)) $generated@@592) (= ($generated@@587 ($generated@@151 $generated@@592 $generated@@593)) $generated@@593))))
 :pattern ( ($generated@@151 $generated@@592 $generated@@593))
)))
(assert (forall (($generated@@595 T@U) ) (!  (=> (= (type $generated@@595) $generated@@136) (= ($generated@@565 ($generated@@316 $generated@@595)) ($generated@@566 $generated@@595)))
 :pattern ( ($generated@@565 ($generated@@316 $generated@@595)))
)))
(assert (forall (($generated@@596 T@U) ) (!  (=> (and (= (type $generated@@596) $generated@@145) ($generated@@241 $generated@@596 ($generated@@75 0))) (and (= ($generated@@316 ($generated@@413 $generated@@2 $generated@@596)) $generated@@596) ($generated@@132 ($generated@@413 ($generated@@76 $generated@@145 $generated@@4) $generated@@596) ($generated@@75 0))))
 :pattern ( ($generated@@241 $generated@@596 ($generated@@75 0)))
)))
(assert (forall (($generated@@597 T@U) ($generated@@598 T@U) ) (!  (=> (and (and (= (type $generated@@597) $generated@@145) (= (type $generated@@598) $generated@@64)) ($generated@@241 $generated@@597 ($generated@@253 $generated@@598))) (and (= ($generated@@316 ($generated@@413 ($generated@@76 $generated@@145 $generated@@4) $generated@@597)) $generated@@597) ($generated@@132 ($generated@@413 ($generated@@76 $generated@@145 $generated@@4) $generated@@597) ($generated@@253 $generated@@598))))
 :pattern ( ($generated@@241 $generated@@597 ($generated@@253 $generated@@598)))
)))
(assert (forall (($generated@@599 T@U) ($generated@@600 T@U) ) (!  (=> (and (and (= (type $generated@@599) $generated@@145) (= (type $generated@@600) $generated@@64)) ($generated@@241 $generated@@599 ($generated@@258 $generated@@600))) (and (= ($generated@@316 ($generated@@413 ($generated@@76 $generated@@145 $generated@@4) $generated@@599)) $generated@@599) ($generated@@132 ($generated@@413 ($generated@@76 $generated@@145 $generated@@4) $generated@@599) ($generated@@258 $generated@@600))))
 :pattern ( ($generated@@241 $generated@@599 ($generated@@258 $generated@@600)))
)))
(assert (forall (($generated@@601 T@U) ($generated@@602 T@U) ) (!  (=> (and (and (= (type $generated@@601) $generated@@145) (= (type $generated@@602) $generated@@64)) ($generated@@241 $generated@@601 ($generated@@167 $generated@@602))) (and (= ($generated@@316 ($generated@@413 ($generated@@76 $generated@@145 $generated@@2) $generated@@601)) $generated@@601) ($generated@@132 ($generated@@413 ($generated@@76 $generated@@145 $generated@@2) $generated@@601) ($generated@@167 $generated@@602))))
 :pattern ( ($generated@@241 $generated@@601 ($generated@@167 $generated@@602)))
)))
(assert (forall (($generated@@603 T@U) ($generated@@604 T@U) ) (!  (=> (and (and (= (type $generated@@603) $generated@@145) (= (type $generated@@604) $generated@@64)) ($generated@@241 $generated@@603 ($generated@@269 $generated@@604))) (and (= ($generated@@316 ($generated@@413 ($generated@@152 $generated@@145) $generated@@603)) $generated@@603) ($generated@@132 ($generated@@413 ($generated@@152 $generated@@145) $generated@@603) ($generated@@269 $generated@@604))))
 :pattern ( ($generated@@241 $generated@@603 ($generated@@269 $generated@@604)))
)))
(assert (forall (($generated@@605 T@U) ($generated@@606 Int) ($generated@@607 Int) ) (! (let (($generated@@608 ($generated@@154 (type $generated@@605))))
 (=> (= (type $generated@@605) ($generated@@152 $generated@@608)) (=> (and (and (<= 0 $generated@@606) (<= $generated@@606 $generated@@607)) (< $generated@@607 ($generated@@153 $generated@@605))) (= ($generated@@274 ($generated@@150 $generated@@605 $generated@@606) (- $generated@@607 $generated@@606)) ($generated@@274 $generated@@605 $generated@@607)))))
 :weight 25
 :pattern ( ($generated@@274 $generated@@605 $generated@@607) ($generated@@150 $generated@@605 $generated@@606))
)))
(assert (forall (($generated@@609 T@U) ($generated@@610 T@U) ($generated@@611 T@U) ) (!  (=> (and (and (= (type $generated@@609) ($generated@@76 $generated@@145 $generated@@2)) (= (type $generated@@610) $generated@@64)) (= (type $generated@@611) ($generated@@76 $generated@@77 $generated@@78))) (= ($generated@@74 $generated@@609 ($generated@@167 $generated@@610) $generated@@611) (forall (($generated@@612 T@U) ) (!  (=> (and (= (type $generated@@612) $generated@@145) (< 0 ($generated ($generated@@81 $generated@@609 $generated@@612)))) ($generated@@283 $generated@@612 $generated@@610 $generated@@611))
 :pattern ( ($generated@@81 $generated@@609 $generated@@612))
))))
 :pattern ( ($generated@@74 $generated@@609 ($generated@@167 $generated@@610) $generated@@611))
)))
(assert (forall (($generated@@613 T@U) ($generated@@614 Int) ($generated@@615 Int) ) (! (let (($generated@@616 ($generated@@154 (type $generated@@613))))
 (=> (= (type $generated@@613) ($generated@@152 $generated@@616)) (=> (and (and (<= 0 $generated@@614) (<= 0 $generated@@615)) (<= (+ $generated@@614 $generated@@615) ($generated@@153 $generated@@613))) (= ($generated@@150 ($generated@@150 $generated@@613 $generated@@614) $generated@@615) ($generated@@150 $generated@@613 (+ $generated@@614 $generated@@615))))))
 :pattern ( ($generated@@150 ($generated@@150 $generated@@613 $generated@@614) $generated@@615))
)))
(assert (forall (($generated@@617 T@U) ($generated@@618 T@U) ($generated@@619 T@U) ) (!  (=> (and (and (and (= (type $generated@@617) $generated@@136) (= (type $generated@@618) $generated@@64)) (= (type $generated@@619) ($generated@@76 $generated@@77 $generated@@78))) (and ($generated@@282 $generated@@619) (and ($generated@@134 $generated@@617) (exists (($generated@@620 T@U) ) (!  (and (= (type $generated@@620) $generated@@64) ($generated@@74 $generated@@617 ($generated@@135 $generated@@618 $generated@@620) $generated@@619))
 :pattern ( ($generated@@74 $generated@@617 ($generated@@135 $generated@@618 $generated@@620) $generated@@619))
))))) ($generated@@283 ($generated@@143 $generated@@617) $generated@@618 $generated@@619))
 :pattern ( ($generated@@283 ($generated@@143 $generated@@617) $generated@@618 $generated@@619))
)))
(assert (forall (($generated@@621 T@U) ($generated@@622 T@U) ($generated@@623 T@U) ) (!  (=> (and (and (and (= (type $generated@@621) $generated@@136) (= (type $generated@@622) $generated@@64)) (= (type $generated@@623) ($generated@@76 $generated@@77 $generated@@78))) (and ($generated@@282 $generated@@623) (and ($generated@@134 $generated@@621) (exists (($generated@@624 T@U) ) (!  (and (= (type $generated@@624) $generated@@64) ($generated@@74 $generated@@621 ($generated@@135 $generated@@624 $generated@@622) $generated@@623))
 :pattern ( ($generated@@74 $generated@@621 ($generated@@135 $generated@@624 $generated@@622) $generated@@623))
))))) ($generated@@283 ($generated@@144 $generated@@621) $generated@@622 $generated@@623))
 :pattern ( ($generated@@283 ($generated@@144 $generated@@621) $generated@@622 $generated@@623))
)))
(assert (forall (($generated@@625 T@U) ($generated@@626 T@U) ($generated@@627 Int) ) (! (let (($generated@@628 ($generated@@154 (type $generated@@625))))
 (=> (and (= (type $generated@@625) ($generated@@152 $generated@@628)) (= (type $generated@@626) ($generated@@152 $generated@@628))) (and (=> (< $generated@@627 ($generated@@153 $generated@@625)) (= ($generated@@274 ($generated@@229 $generated@@625 $generated@@626) $generated@@627) ($generated@@274 $generated@@625 $generated@@627))) (=> (<= ($generated@@153 $generated@@625) $generated@@627) (= ($generated@@274 ($generated@@229 $generated@@625 $generated@@626) $generated@@627) ($generated@@274 $generated@@626 (- $generated@@627 ($generated@@153 $generated@@625))))))))
 :pattern ( ($generated@@274 ($generated@@229 $generated@@625 $generated@@626) $generated@@627))
)))
(assert (forall (($generated@@629 T@U) ($generated@@630 T@U) ) (!  (=> (and (= (type $generated@@629) $generated@@145) (= (type $generated@@630) $generated@@145)) (= ($generated@@240 ($generated@@265 $generated@@629) ($generated@@265 $generated@@630)) ($generated@@265 ($generated@@240 $generated@@629 $generated@@630))))
 :pattern ( ($generated@@240 ($generated@@265 $generated@@629) ($generated@@265 $generated@@630)))
)))
(assert (forall (($generated@@631 Int) ) (! (= ($generated@@316 ($generated@@8 ($generated@@263 $generated@@631))) ($generated@@265 ($generated@@316 ($generated@@8 $generated@@631))))
 :pattern ( ($generated@@316 ($generated@@8 ($generated@@263 $generated@@631))))
)))
(assert (forall (($generated@@632 T@U) ) (! (= ($generated@@316 ($generated@@265 $generated@@632)) ($generated@@265 ($generated@@316 $generated@@632)))
 :pattern ( ($generated@@316 ($generated@@265 $generated@@632)))
)))
(assert (forall (($generated@@633 T@U) ) (! (let (($generated@@634 ($generated@@154 (type $generated@@633))))
 (=> (and (= (type $generated@@633) ($generated@@152 $generated@@634)) (= ($generated@@153 $generated@@633) 0)) (= $generated@@633 ($generated@@307 $generated@@634))))
 :pattern ( ($generated@@153 $generated@@633))
)))
(assert (forall (($generated@@635 T@U) ($generated@@636 Int) ) (! (let (($generated@@637 ($generated@@154 (type $generated@@635))))
 (=> (and (= (type $generated@@635) ($generated@@152 $generated@@637)) (= $generated@@636 0)) (= ($generated@@228 $generated@@635 $generated@@636) ($generated@@307 $generated@@637))))
 :pattern ( ($generated@@228 $generated@@635 $generated@@636))
)))
(assert (forall (($generated@@638 T@U) ($generated@@639 T@U) ($generated@@640 T@U) ) (! (let (($generated@@641 (type $generated@@639)))
 (=> (and (and (= (type $generated@@638) ($generated@@76 $generated@@641 $generated@@2)) (= (type $generated@@640) $generated@@2)) (<= 0 ($generated $generated@@640))) (= ($generated@@325 ($generated@@82 $generated@@638 $generated@@639 $generated@@640)) (+ (- ($generated@@325 $generated@@638) ($generated ($generated@@81 $generated@@638 $generated@@639))) ($generated $generated@@640)))))
 :pattern ( ($generated@@325 ($generated@@82 $generated@@638 $generated@@639 $generated@@640)))
)))
(assert (forall (($generated@@642 T@U) ($generated@@643 T@U) ) (!  (=> (and (= (type $generated@@642) ($generated@@76 $generated@@77 $generated@@78)) (= (type $generated@@643) $generated@@2)) ($generated@@74 $generated@@643 $generated@@46 $generated@@642))
 :pattern ( ($generated@@74 $generated@@643 $generated@@46 $generated@@642))
)))
(assert (forall (($generated@@644 T@U) ($generated@@645 T@U) ) (!  (=> (and (= (type $generated@@644) ($generated@@76 $generated@@77 $generated@@78)) (= (type $generated@@645) $generated@@3)) ($generated@@74 $generated@@645 $generated@@47 $generated@@644))
 :pattern ( ($generated@@74 $generated@@645 $generated@@47 $generated@@644))
)))
(assert (forall (($generated@@646 T@U) ($generated@@647 T@U) ) (!  (=> (and (= (type $generated@@646) ($generated@@76 $generated@@77 $generated@@78)) (= (type $generated@@647) $generated@@4)) ($generated@@74 $generated@@647 $generated@@44 $generated@@646))
 :pattern ( ($generated@@74 $generated@@647 $generated@@44 $generated@@646))
)))
(assert (forall (($generated@@648 T@U) ($generated@@649 T@U) ) (!  (=> (and (= (type $generated@@648) ($generated@@76 $generated@@77 $generated@@78)) (= (type $generated@@649) $generated@@487)) ($generated@@74 $generated@@649 $generated@@45 $generated@@648))
 :pattern ( ($generated@@74 $generated@@649 $generated@@45 $generated@@648))
)))
(assert (forall (($generated@@650 T@U) ($generated@@651 T@U) ) (!  (=> (and (= (type $generated@@650) ($generated@@76 $generated@@77 $generated@@78)) (= (type $generated@@651) $generated@@145)) ($generated@@74 $generated@@651 $generated@@48 $generated@@650))
 :pattern ( ($generated@@74 $generated@@651 $generated@@48 $generated@@650))
)))
(assert (forall (($generated@@652 T@U) ($generated@@653 T@U) ) (!  (=> (and (= (type $generated@@652) ($generated@@152 $generated@@145)) (= (type $generated@@653) $generated@@64)) (= ($generated@@132 $generated@@652 ($generated@@269 $generated@@653)) (forall (($generated@@654 Int) ) (!  (=> (and (<= 0 $generated@@654) (< $generated@@654 ($generated@@153 $generated@@652))) ($generated@@241 ($generated@@274 $generated@@652 $generated@@654) $generated@@653))
 :pattern ( ($generated@@274 $generated@@652 $generated@@654))
))))
 :pattern ( ($generated@@132 $generated@@652 ($generated@@269 $generated@@653)))
)))
(assert (forall (($generated@@655 T@U) ($generated@@656 Int) ) (!  (=> (= (type $generated@@655) ($generated@@152 $generated@@145)) (=> (and (<= 0 $generated@@656) (< $generated@@656 ($generated@@153 $generated@@655))) (< ($generated@@566 ($generated@@413 $generated@@136 ($generated@@274 $generated@@655 $generated@@656))) ($generated@@300 $generated@@655))))
 :pattern ( ($generated@@566 ($generated@@413 $generated@@136 ($generated@@274 $generated@@655 $generated@@656))))
)))
(assert (forall (($generated@@657 T@U) ($generated@@658 T@U) ($generated@@659 T@U) ) (!  (=> (and (and (and (= (type $generated@@657) ($generated@@333 $generated@@145 $generated@@145)) (= (type $generated@@658) $generated@@64)) (= (type $generated@@659) $generated@@64)) ($generated@@132 $generated@@657 ($generated@@441 $generated@@658 $generated@@659))) (and (and ($generated@@132 ($generated@@331 $generated@@657) ($generated@@253 $generated@@658)) ($generated@@132 ($generated@@381 $generated@@657) ($generated@@253 $generated@@659))) ($generated@@132 ($generated@@412 $generated@@657) ($generated@@253 ($generated@@135 $generated@@658 $generated@@659)))))
 :pattern ( ($generated@@132 $generated@@657 ($generated@@441 $generated@@658 $generated@@659)))
)))
(assert (forall (($generated@@660 T@U) ($generated@@661 T@U) ($generated@@662 T@U) ) (!  (=> (and (and (and (= (type $generated@@660) ($generated@@351 $generated@@145 $generated@@145)) (= (type $generated@@661) $generated@@64)) (= (type $generated@@662) $generated@@64)) ($generated@@132 $generated@@660 ($generated@@449 $generated@@661 $generated@@662))) (and (and ($generated@@132 ($generated@@349 $generated@@660) ($generated@@258 $generated@@661)) ($generated@@132 ($generated@@392 $generated@@660) ($generated@@258 $generated@@662))) ($generated@@132 ($generated@@423 $generated@@660) ($generated@@258 ($generated@@135 $generated@@661 $generated@@662)))))
 :pattern ( ($generated@@132 $generated@@660 ($generated@@449 $generated@@661 $generated@@662)))
)))
(assert (forall (($generated@@663 T@U) ) (!  (=> (= (type $generated@@663) $generated@@2) ($generated@@132 $generated@@663 $generated@@46))
 :pattern ( ($generated@@132 $generated@@663 $generated@@46))
)))
(assert (forall (($generated@@664 T@U) ) (!  (=> (= (type $generated@@664) $generated@@3) ($generated@@132 $generated@@664 $generated@@47))
 :pattern ( ($generated@@132 $generated@@664 $generated@@47))
)))
(assert (forall (($generated@@665 T@U) ) (!  (=> (= (type $generated@@665) $generated@@4) ($generated@@132 $generated@@665 $generated@@44))
 :pattern ( ($generated@@132 $generated@@665 $generated@@44))
)))
(assert (forall (($generated@@666 T@U) ) (!  (=> (= (type $generated@@666) $generated@@487) ($generated@@132 $generated@@666 $generated@@45))
 :pattern ( ($generated@@132 $generated@@666 $generated@@45))
)))
(assert (forall (($generated@@667 T@U) ) (!  (=> (= (type $generated@@667) $generated@@145) ($generated@@132 $generated@@667 $generated@@48))
 :pattern ( ($generated@@132 $generated@@667 $generated@@48))
)))
(push 1)
(declare-fun ControlFlow (Int Int) Int)
(declare-fun $generated@@668 () T@U)
(declare-fun $generated@@669 () T@U)
(declare-fun $generated@@670 () T@U)
(declare-fun $generated@@671 () T@U)
(declare-fun $generated@@672 (T@U) Bool)
(declare-fun $generated@@673 () Int)
(assert  (and (and (and (= (type $generated@@668) ($generated@@174 $generated@@77 $generated@@4)) (= (type $generated@@669) $generated@@77)) (= (type $generated@@670) ($generated@@76 $generated@@77 $generated@@78))) (= (type $generated@@671) ($generated@@152 $generated@@145))))
(set-option :timeout 0)
(set-option :rlimit 0)
(assert (not
 (=> (= (ControlFlow 0 0) 3) (let (($generated@@674  (=> (and (= $generated@@668 ($generated@@173 $generated@@669 $generated@@670 $generated@@60 false)) (= (ControlFlow 0 2) (- 0 1))) ($generated@@295 ($generated@@150 ($generated@@228 $generated@@671 ($generated@@263 25)) ($generated@@263 0)) ($generated@@229 ($generated@@151 ($generated@@307 $generated@@145) ($generated@@274 $generated@@671 ($generated@@263 0))) ($generated@@150 ($generated@@228 $generated@@671 ($generated@@263 25)) ($generated@@263 1)))))))
(let (($generated@@675  (=> (and ($generated@@282 $generated@@670) ($generated@@672 $generated@@670)) (=> (and (and (and ($generated@@132 $generated@@671 ($generated@@269 $generated@@46)) ($generated@@74 $generated@@671 ($generated@@269 $generated@@46) $generated@@670)) (= 0 $generated@@673)) (and (> ($generated@@153 $generated@@671) 25) (= (ControlFlow 0 3) 2))) $generated@@674))))
$generated@@675)))
))
(check-sat)
(pop 1)
; Valid
(get-info :rlimit)
(reset)
(set-option :rlimit 0)
; did a full reset
(reset)
(set-option :print-success false)
(set-info :smt-lib-version 2.6)
(set-option :auto_config false)
(set-option :type_check true)
(set-option :smt.case_split 3)
(set-option :smt.qi.eager_threshold 100)
(set-option :smt.delay_units true)
(set-option :smt.arith.solver 2)
(set-option :smt.mbqi false)
(set-option :model.compact false)
(set-option :model.v2 true)
(set-option :pp.bv_literals false)
; done setting options


(set-info :category "industrial")
(declare-sort |T@U| 0)
(declare-sort |T@T| 0)
(declare-fun real_pow (Real Real) Real)
(declare-fun UOrdering2 (|T@U| |T@U|) Bool)
(declare-fun UOrdering3 (|T@T| |T@U| |T@U|) Bool)
(declare-fun tickleBool (Bool) Bool)
(assert (and (tickleBool true) (tickleBool false)))
(declare-fun $generated (T@U) Int)
(declare-fun $generated@@0 (T@U) Bool)
(declare-fun $generated@@1 (T@T) Int)
(declare-fun $generated@@2 () T@T)
(declare-fun $generated@@3 () T@T)
(declare-fun $generated@@4 () T@T)
(declare-fun $generated@@5 () T@T)
(declare-fun $generated@@6 () T@T)
(declare-fun $generated@@7 () T@T)
(declare-fun $generated@@8 (Int) T@U)
(declare-fun type (T@U) T@T)
(declare-fun $generated@@9 (Real) T@U)
(declare-fun $generated@@10 (T@U) Real)
(declare-fun $generated@@11 (Bool) T@U)
(declare-fun $generated@@12 (RoundingMode) T@U)
(declare-fun $generated@@13 (T@U) RoundingMode)
(declare-fun $generated@@14 (String) T@U)
(declare-fun $generated@@15 (T@U) String)
(declare-fun $generated@@16 ((RegEx String)) T@U)
(declare-fun $generated@@17 (T@U) (RegEx String))
(declare-fun $generated@@44 () T@U)
(declare-fun $generated@@45 () T@U)
(declare-fun $generated@@46 () T@U)
(declare-fun $generated@@47 () T@U)
(declare-fun $generated@@48 () T@U)
(declare-fun $generated@@49 () T@U)
(declare-fun $generated@@50 () T@U)
(declare-fun $generated@@51 () T@U)
(declare-fun $generated@@52 () T@U)
(declare-fun $generated@@53 () T@U)
(declare-fun $generated@@54 () T@U)
(declare-fun $generated@@55 () T@U)
(declare-fun $generated@@56 () T@U)
(declare-fun $generated@@57 () T@U)
(declare-fun $generated@@58 () T@U)
(declare-fun $generated@@59 () T@U)
(declare-fun $generated@@60 () T@U)
(declare-fun $generated@@61 () T@U)
(declare-fun $generated@@62 () T@U)
(declare-fun $generated@@63 () T@U)
(declare-fun $generated@@64 () T@U)
(declare-fun $generated@@65 () T@U)
(declare-fun $generated@@66 () T@T)
(declare-fun $generated@@67 () T@T)
(declare-fun $generated@@68 (T@T) T@T)
(declare-fun $generated@@69 (T@T) T@T)
(declare-fun $generated@@70 () T@T)
(declare-fun $generated@@71 () T@T)
(declare-fun $generated@@74 (T@U) T@U)
(declare-fun $generated@@76 (T@U T@U T@U) Bool)
(declare-fun $generated@@77 (Int) T@U)
(declare-fun $generated@@78 (T@T T@T) T@T)
(declare-fun $generated@@79 () T@T)
(declare-fun $generated@@80 () T@T)
(declare-fun $generated@@81 (T@T) T@T)
(declare-fun $generated@@82 (T@T) T@T)
(declare-fun $generated@@83 (T@U T@U) T@U)
(declare-fun $generated@@84 (T@U T@U T@U) T@U)
(declare-fun $generated@@85 (T@U T@U) T@U)
(declare-fun $generated@@86 (T@U T@U T@U) T@U)
(declare-fun $generated@@134 () T@U)
(declare-fun $generated@@137 (T@U T@U) Bool)
(declare-fun $generated@@139 (T@U) Bool)
(declare-fun $generated@@140 (T@U T@U) T@U)
(declare-fun $generated@@141 () T@T)
(declare-fun $generated@@147 (T@U T@U) Bool)
(declare-fun $generated@@148 (T@U) T@U)
(declare-fun $generated@@149 (T@U) T@U)
(declare-fun $generated@@150 () T@T)
(declare-fun $generated@@155 (T@U Int) T@U)
(declare-fun $generated@@156 (T@U T@U) T@U)
(declare-fun $generated@@157 (T@T) T@T)
(declare-fun $generated@@158 (T@U) Int)
(declare-fun $generated@@159 (T@T) T@T)
(declare-fun $generated@@172 (T@U) T@U)
(declare-fun $generated@@173 (T@U) Bool)
(declare-fun $generated@@177 (T@U T@U T@U) T@U)
(declare-fun $generated@@178 (T@U T@U T@U Bool) T@U)
(declare-fun $generated@@179 (T@T T@T) T@T)
(declare-fun $generated@@180 (T@T) T@T)
(declare-fun $generated@@181 (T@T) T@T)
(declare-fun $generated@@182 (T@U T@U T@U T@U) T@U)
(declare-fun $generated@@233 (T@U Int) T@U)
(declare-fun $generated@@234 (T@U T@U) T@U)
(declare-fun $generated@@245 (T@U T@U) T@U)
(declare-fun $generated@@246 (T@U T@U) Bool)
(declare-fun $generated@@258 (T@U) T@U)
(declare-fun $generated@@263 (T@U) T@U)
(declare-fun $generated@@268 (Int) Int)
(declare-fun $generated@@270 (T@U) T@U)
(declare-fun $generated@@274 (T@U) T@U)
(declare-fun $generated@@279 (T@U Int) T@U)
(declare-fun $generated@@287 (T@U) Bool)
(declare-fun $generated@@288 (T@U T@U T@U) Bool)
(declare-fun $generated@@297 (T@U) T@U)
(declare-fun $generated@@300 (T@U T@U) Bool)
(declare-fun $generated@@305 (T@U) Int)
(declare-fun $generated@@312 (T@T) T@U)
(declare-fun $generated@@321 (T@U) T@U)
(declare-fun $generated@@330 (T@U) Int)
(declare-fun $generated@@331 (T@T) T@U)
(declare-fun $generated@@336 (T@U) T@U)
(declare-fun $generated@@337 (T@T T@T) T@U)
(declare-fun $generated@@338 (T@T T@T) T@T)
(declare-fun $generated@@339 (T@T) T@T)
(declare-fun $generated@@340 (T@T) T@T)
(declare-fun $generated@@354 (T@U) T@U)
(declare-fun $generated@@355 (T@T T@T) T@U)
(declare-fun $generated@@356 (T@T T@T) T@T)
(declare-fun $generated@@357 (T@T) T@T)
(declare-fun $generated@@358 (T@T) T@T)
(declare-fun $generated@@378 (T@T T@U) T@U)
(declare-fun $generated@@390 (T@U) T@U)
(declare-fun $generated@@401 (T@U) T@U)
(declare-fun $generated@@421 (T@U) T@U)
(declare-fun $generated@@422 (T@U) T@U)
(declare-fun $generated@@429 (T@U) T@U)
(declare-fun $generated@@430 (T@U) T@U)
(declare-fun $generated@@447 (T@U T@U) T@U)
(declare-fun $generated@@455 (T@U T@U) T@U)
(declare-fun $generated@@469 (T@T) T@U)
(declare-fun $generated@@493 () T@T)
(declare-fun $generated@@505 (T@U) T@U)
(declare-fun $generated@@509 (T@U) T@U)
(declare-fun $generated@@515 (T@U) T@U)
(declare-fun $generated@@519 (T@U) T@U)
(declare-fun $generated@@527 (T@U) T@U)
(declare-fun $generated@@531 (T@U) T@U)
(declare-fun $generated@@543 (T@U) Int)
(declare-fun $generated@@545 (T@U) T@U)
(declare-fun $generated@@549 (T@U) T@U)
(declare-fun $generated@@553 (T@U) T@U)
(declare-fun $generated@@557 (T@U) T@U)
(declare-fun $generated@@571 (T@U) Int)
(declare-fun $generated@@572 (T@U) Int)
(declare-fun $generated@@588 (T@U) T@U)
(declare-fun $generated@@592 (T@U) T@U)
(declare-fun $generated@@593 (T@U) T@U)
(assert  (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (= ($generated@@1 $generated@@2) 0) (= ($generated@@1 $generated@@3) 1)) (= ($generated@@1 $generated@@4) 2)) (= ($generated@@1 $generated@@5) 3)) (= ($generated@@1 $generated@@6) 4)) (= ($generated@@1 $generated@@7) 5)) (forall (($generated@@18 Int) ) (! (= ($generated ($generated@@8 $generated@@18)) $generated@@18)
 :pattern ( ($generated@@8 $generated@@18))
))) (forall (($generated@@19 T@U) ) (!  (=> (= (type $generated@@19) $generated@@2) (= ($generated@@8 ($generated $generated@@19)) $generated@@19))
 :pattern ( ($generated $generated@@19))
))) (forall (($generated@@20 Int) ) (! (= (type ($generated@@8 $generated@@20)) $generated@@2)
 :pattern ( ($generated@@8 $generated@@20))
))) (forall (($generated@@21 Real) ) (! (= ($generated@@10 ($generated@@9 $generated@@21)) $generated@@21)
 :pattern ( ($generated@@9 $generated@@21))
))) (forall (($generated@@22 T@U) ) (!  (=> (= (type $generated@@22) $generated@@3) (= ($generated@@9 ($generated@@10 $generated@@22)) $generated@@22))
 :pattern ( ($generated@@10 $generated@@22))
))) (forall (($generated@@23 Real) ) (! (= (type ($generated@@9 $generated@@23)) $generated@@3)
 :pattern ( ($generated@@9 $generated@@23))
))) (forall (($generated@@24 Bool) ) (! (= ($generated@@0 ($generated@@11 $generated@@24)) $generated@@24)
 :pattern ( ($generated@@11 $generated@@24))
))) (forall (($generated@@25 T@U) ) (!  (=> (= (type $generated@@25) $generated@@4) (= ($generated@@11 ($generated@@0 $generated@@25)) $generated@@25))
 :pattern ( ($generated@@0 $generated@@25))
))) (forall (($generated@@26 Bool) ) (! (= (type ($generated@@11 $generated@@26)) $generated@@4)
 :pattern ( ($generated@@11 $generated@@26))
))) (forall (($generated@@27 RoundingMode) ) (! (= ($generated@@13 ($generated@@12 $generated@@27)) $generated@@27)
 :pattern ( ($generated@@12 $generated@@27))
))) (forall (($generated@@28 T@U) ) (!  (=> (= (type $generated@@28) $generated@@5) (= ($generated@@12 ($generated@@13 $generated@@28)) $generated@@28))
 :pattern ( ($generated@@13 $generated@@28))
))) (forall (($generated@@29 RoundingMode) ) (! (= (type ($generated@@12 $generated@@29)) $generated@@5)
 :pattern ( ($generated@@12 $generated@@29))
))) (forall (($generated@@30 String) ) (! (= ($generated@@15 ($generated@@14 $generated@@30)) $generated@@30)
 :pattern ( ($generated@@14 $generated@@30))
))) (forall (($generated@@31 T@U) ) (!  (=> (= (type $generated@@31) $generated@@6) (= ($generated@@14 ($generated@@15 $generated@@31)) $generated@@31))
 :pattern ( ($generated@@15 $generated@@31))
))) (forall (($generated@@32 String) ) (! (= (type ($generated@@14 $generated@@32)) $generated@@6)
 :pattern ( ($generated@@14 $generated@@32))
))) (forall (($generated@@33 (RegEx String)) ) (! (= ($generated@@17 ($generated@@16 $generated@@33)) $generated@@33)
 :pattern ( ($generated@@16 $generated@@33))
))) (forall (($generated@@34 T@U) ) (!  (=> (= (type $generated@@34) $generated@@7) (= ($generated@@16 ($generated@@17 $generated@@34)) $generated@@34))
 :pattern ( ($generated@@17 $generated@@34))
))) (forall (($generated@@35 (RegEx String)) ) (! (= (type ($generated@@16 $generated@@35)) $generated@@7)
 :pattern ( ($generated@@16 $generated@@35))
))))
(assert (forall (($generated@@36 T@U) ) (! (UOrdering2 $generated@@36 $generated@@36)
 :no-pattern ($generated $generated@@36)
 :no-pattern ($generated@@0 $generated@@36)
)))
(assert (forall (($generated@@37 T@U) ($generated@@38 T@U) ($generated@@39 T@U) ) (! (let (($generated@@40 (type $generated@@37)))
 (=> (and (and (= (type $generated@@38) $generated@@40) (= (type $generated@@39) $generated@@40)) (and (UOrdering2 $generated@@37 $generated@@38) (UOrdering2 $generated@@38 $generated@@39))) (UOrdering2 $generated@@37 $generated@@39)))
 :pattern ( (UOrdering2 $generated@@37 $generated@@38) (UOrdering2 $generated@@38 $generated@@39))
)))
(assert (forall (($generated@@41 T@U) ($generated@@42 T@U) ) (! (let (($generated@@43 (type $generated@@41)))
 (=> (= (type $generated@@42) $generated@@43) (=> (and (UOrdering2 $generated@@41 $generated@@42) (UOrdering2 $generated@@42 $generated@@41)) (= $generated@@41 $generated@@42))))
 :pattern ( (UOrdering2 $generated@@41 $generated@@42) (UOrdering2 $generated@@42 $generated@@41))
)))
(assert  (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (= ($generated@@1 $generated@@66) 6) (= (type $generated@@44) $generated@@66)) (= (type $generated@@45) $generated@@66)) (= (type $generated@@46) $generated@@66)) (= (type $generated@@47) $generated@@66)) (= (type $generated@@48) $generated@@66)) (= ($generated@@1 $generated@@67) 7)) (= (type $generated@@49) $generated@@67)) (= (type $generated@@50) $generated@@67)) (= (type $generated@@51) $generated@@67)) (= (type $generated@@52) $generated@@67)) (= (type $generated@@53) $generated@@67)) (= (type $generated@@54) $generated@@67)) (= (type $generated@@55) $generated@@67)) (= (type $generated@@56) $generated@@67)) (= (type $generated@@57) $generated@@67)) (= (type $generated@@58) $generated@@67)) (= (type $generated@@59) $generated@@67)) (forall (($generated@@72 T@T) ) (= ($generated@@1 ($generated@@68 $generated@@72)) 8))) (forall (($generated@@73 T@T) ) (! (= ($generated@@69 ($generated@@68 $generated@@73)) $generated@@73)
 :pattern ( ($generated@@68 $generated@@73))
))) (= (type $generated@@60) ($generated@@68 $generated@@4))) (= ($generated@@1 $generated@@70) 9)) (= (type $generated@@61) $generated@@70)) (= (type $generated@@62) $generated@@67)) (= (type $generated@@63) $generated@@67)) (= ($generated@@1 $generated@@71) 10)) (= (type $generated@@64) $generated@@71)) (= (type $generated@@65) $generated@@71)))
(assert (distinct $generated@@44 $generated@@45 $generated@@46 $generated@@47 $generated@@48 $generated@@49 $generated@@50 $generated@@51 $generated@@52 $generated@@53 $generated@@54 $generated@@55 $generated@@56 $generated@@57 $generated@@58 $generated@@59 $generated@@60 $generated@@61 $generated@@62 $generated@@63 $generated@@64 $generated@@65)
)
(assert (forall (($generated@@75 T@U) ) (! (= (type ($generated@@74 $generated@@75)) $generated@@67)
 :pattern ( ($generated@@74 $generated@@75))
)))
(assert (= ($generated@@74 $generated@@44) $generated@@49))
(assert (= ($generated@@74 $generated@@45) $generated@@50))
(assert (= ($generated@@74 $generated@@46) $generated@@51))
(assert (= ($generated@@74 $generated@@47) $generated@@52))
(assert (= ($generated@@74 $generated@@48) $generated@@53))
(assert  (and (and (and (and (and (and (and (and (and (and (and (and (and (forall (($generated@@87 T@T) ($generated@@88 T@T) ) (= ($generated@@1 ($generated@@78 $generated@@87 $generated@@88)) 11)) (forall (($generated@@89 T@T) ($generated@@90 T@T) ) (! (= ($generated@@81 ($generated@@78 $generated@@89 $generated@@90)) $generated@@89)
 :pattern ( ($generated@@78 $generated@@89 $generated@@90))
))) (forall (($generated@@91 T@T) ($generated@@92 T@T) ) (! (= ($generated@@82 ($generated@@78 $generated@@91 $generated@@92)) $generated@@92)
 :pattern ( ($generated@@78 $generated@@91 $generated@@92))
))) (forall (($generated@@93 T@U) ($generated@@94 T@U) ) (! (let (($generated@@95 ($generated@@82 (type $generated@@93))))
(= (type ($generated@@83 $generated@@93 $generated@@94)) $generated@@95))
 :pattern ( ($generated@@83 $generated@@93 $generated@@94))
))) (forall (($generated@@96 T@U) ($generated@@97 T@U) ($generated@@98 T@U) ) (! (let (($generated@@99 (type $generated@@98)))
(let (($generated@@100 (type $generated@@97)))
(= (type ($generated@@84 $generated@@96 $generated@@97 $generated@@98)) ($generated@@78 $generated@@100 $generated@@99))))
 :pattern ( ($generated@@84 $generated@@96 $generated@@97 $generated@@98))
))) (forall (($generated@@101 T@U) ($generated@@102 T@U) ($generated@@103 T@U) ) (! (let (($generated@@104 ($generated@@82 (type $generated@@101))))
 (=> (= (type $generated@@103) $generated@@104) (= ($generated@@83 ($generated@@84 $generated@@101 $generated@@102 $generated@@103) $generated@@102) $generated@@103)))
 :weight 0
))) (and (forall (($generated@@105 T@U) ($generated@@106 T@U) ($generated@@107 T@U) ($generated@@108 T@U) ) (!  (or (= $generated@@107 $generated@@108) (= ($generated@@83 ($generated@@84 $generated@@106 $generated@@107 $generated@@105) $generated@@108) ($generated@@83 $generated@@106 $generated@@108)))
 :weight 0
)) (forall (($generated@@109 T@U) ($generated@@110 T@U) ($generated@@111 T@U) ($generated@@112 T@U) ) (!  (or true (= ($generated@@83 ($generated@@84 $generated@@110 $generated@@111 $generated@@109) $generated@@112) ($generated@@83 $generated@@110 $generated@@112)))
 :weight 0
)))) (= ($generated@@1 $generated@@79) 12)) (forall (($generated@@113 T@U) ($generated@@114 T@U) ) (! (let (($generated@@115 ($generated@@69 (type $generated@@114))))
(= (type ($generated@@85 $generated@@113 $generated@@114)) $generated@@115))
 :pattern ( ($generated@@85 $generated@@113 $generated@@114))
))) (= ($generated@@1 $generated@@80) 13)) (forall (($generated@@116 T@U) ($generated@@117 T@U) ($generated@@118 T@U) ) (! (= (type ($generated@@86 $generated@@116 $generated@@117 $generated@@118)) $generated@@80)
 :pattern ( ($generated@@86 $generated@@116 $generated@@117 $generated@@118))
))) (forall (($generated@@119 T@U) ($generated@@120 T@U) ($generated@@121 T@U) ) (! (let (($generated@@122 ($generated@@69 (type $generated@@120))))
 (=> (= (type $generated@@121) $generated@@122) (= ($generated@@85 ($generated@@86 $generated@@119 $generated@@120 $generated@@121) $generated@@120) $generated@@121)))
 :weight 0
))) (and (forall (($generated@@123 T@U) ($generated@@124 T@U) ($generated@@125 T@U) ($generated@@126 T@U) ) (!  (or (= $generated@@125 $generated@@126) (= ($generated@@85 ($generated@@86 $generated@@124 $generated@@125 $generated@@123) $generated@@126) ($generated@@85 $generated@@124 $generated@@126)))
 :weight 0
)) (forall (($generated@@127 T@U) ($generated@@128 T@U) ($generated@@129 T@U) ($generated@@130 T@U) ) (!  (or true (= ($generated@@85 ($generated@@86 $generated@@128 $generated@@129 $generated@@127) $generated@@130) ($generated@@85 $generated@@128 $generated@@130)))
 :weight 0
)))) (forall (($generated@@131 Int) ) (! (= (type ($generated@@77 $generated@@131)) $generated@@66)
 :pattern ( ($generated@@77 $generated@@131))
))))
(assert (forall (($generated@@132 T@U) ($generated@@133 T@U) ) (!  (=> (and (= (type $generated@@132) $generated@@2) (= (type $generated@@133) ($generated@@78 $generated@@79 $generated@@80))) ($generated@@76 $generated@@132 ($generated@@77 0) $generated@@133))
 :pattern ( ($generated@@76 $generated@@132 ($generated@@77 0) $generated@@133))
)))
(assert (= (type $generated@@134) $generated@@66))
(assert (forall (($generated@@135 T@U) ($generated@@136 T@U) ) (!  (=> (and (= (type $generated@@135) $generated@@2) (= (type $generated@@136) ($generated@@78 $generated@@79 $generated@@80))) ($generated@@76 $generated@@135 $generated@@134 $generated@@136))
 :pattern ( ($generated@@76 $generated@@135 $generated@@134 $generated@@136))
)))
(assert (forall (($generated@@138 T@U) ) (!  (=> (= (type $generated@@138) $generated@@2) ($generated@@137 $generated@@138 ($generated@@77 0)))
 :pattern ( ($generated@@137 $generated@@138 ($generated@@77 0)))
)))
(assert  (and (= ($generated@@1 $generated@@141) 14) (forall (($generated@@142 T@U) ($generated@@143 T@U) ) (! (= (type ($generated@@140 $generated@@142 $generated@@143)) $generated@@66)
 :pattern ( ($generated@@140 $generated@@142 $generated@@143))
))))
(assert (forall (($generated@@144 T@U) ($generated@@145 T@U) ($generated@@146 T@U) ) (!  (=> (and (and (and (= (type $generated@@144) $generated@@66) (= (type $generated@@145) $generated@@66)) (= (type $generated@@146) $generated@@141)) ($generated@@137 $generated@@146 ($generated@@140 $generated@@144 $generated@@145))) ($generated@@139 $generated@@146))
 :pattern ( ($generated@@139 $generated@@146) ($generated@@137 $generated@@146 ($generated@@140 $generated@@144 $generated@@145)))
)))
(assert  (and (and (= ($generated@@1 $generated@@150) 15) (forall (($generated@@151 T@U) ) (! (= (type ($generated@@148 $generated@@151)) $generated@@150)
 :pattern ( ($generated@@148 $generated@@151))
))) (forall (($generated@@152 T@U) ) (! (= (type ($generated@@149 $generated@@152)) $generated@@150)
 :pattern ( ($generated@@149 $generated@@152))
))))
(assert (forall (($generated@@153 T@U) ($generated@@154 T@U) ) (!  (=> (and (and (= (type $generated@@153) $generated@@141) (= (type $generated@@154) $generated@@141)) true) (= ($generated@@147 $generated@@153 $generated@@154)  (and (= ($generated@@148 $generated@@153) ($generated@@148 $generated@@154)) (= ($generated@@149 $generated@@153) ($generated@@149 $generated@@154)))))
 :pattern ( ($generated@@147 $generated@@153 $generated@@154))
)))
(assert  (and (and (and (forall (($generated@@160 T@T) ) (= ($generated@@1 ($generated@@157 $generated@@160)) 16)) (forall (($generated@@161 T@T) ) (! (= ($generated@@159 ($generated@@157 $generated@@161)) $generated@@161)
 :pattern ( ($generated@@157 $generated@@161))
))) (forall (($generated@@162 T@U) ($generated@@163 Int) ) (! (let (($generated@@164 ($generated@@159 (type $generated@@162))))
(= (type ($generated@@155 $generated@@162 $generated@@163)) ($generated@@157 $generated@@164)))
 :pattern ( ($generated@@155 $generated@@162 $generated@@163))
))) (forall (($generated@@165 T@U) ($generated@@166 T@U) ) (! (let (($generated@@167 (type $generated@@166)))
(= (type ($generated@@156 $generated@@165 $generated@@166)) ($generated@@157 $generated@@167)))
 :pattern ( ($generated@@156 $generated@@165 $generated@@166))
))))
(assert (forall (($generated@@168 T@U) ($generated@@169 T@U) ($generated@@170 Int) ) (! (let (($generated@@171 (type $generated@@169)))
 (=> (= (type $generated@@168) ($generated@@157 $generated@@171)) (=> (and (<= 0 $generated@@170) (<= $generated@@170 ($generated@@158 $generated@@168))) (= ($generated@@155 ($generated@@156 $generated@@168 $generated@@169) $generated@@170) ($generated@@156 ($generated@@155 $generated@@168 $generated@@170) $generated@@169)))))
 :pattern ( ($generated@@155 ($generated@@156 $generated@@168 $generated@@169) $generated@@170))
)))
(assert (forall (($generated@@174 T@U) ) (! (= (type ($generated@@172 $generated@@174)) $generated@@66)
 :pattern ( ($generated@@172 $generated@@174))
)))
(assert (forall (($generated@@175 T@U) ($generated@@176 T@U) ) (!  (=> (and (and (= (type $generated@@175) ($generated@@78 $generated@@150 $generated@@2)) (= (type $generated@@176) $generated@@66)) ($generated@@137 $generated@@175 ($generated@@172 $generated@@176))) ($generated@@173 $generated@@175))
 :pattern ( ($generated@@137 $generated@@175 ($generated@@172 $generated@@176)))
)))
(assert  (and (and (and (and (and (and (and (forall (($generated@@183 T@T) ($generated@@184 T@T) ) (= ($generated@@1 ($generated@@179 $generated@@183 $generated@@184)) 17)) (forall (($generated@@185 T@T) ($generated@@186 T@T) ) (! (= ($generated@@180 ($generated@@179 $generated@@185 $generated@@186)) $generated@@185)
 :pattern ( ($generated@@179 $generated@@185 $generated@@186))
))) (forall (($generated@@187 T@T) ($generated@@188 T@T) ) (! (= ($generated@@181 ($generated@@179 $generated@@187 $generated@@188)) $generated@@188)
 :pattern ( ($generated@@179 $generated@@187 $generated@@188))
))) (forall (($generated@@189 T@U) ($generated@@190 T@U) ($generated@@191 T@U) ) (! (let (($generated@@192 ($generated@@181 (type $generated@@189))))
(= (type ($generated@@177 $generated@@189 $generated@@190 $generated@@191)) $generated@@192))
 :pattern ( ($generated@@177 $generated@@189 $generated@@190 $generated@@191))
))) (forall (($generated@@193 T@U) ($generated@@194 T@U) ($generated@@195 T@U) ($generated@@196 T@U) ) (! (let (($generated@@197 (type $generated@@196)))
(let (($generated@@198 (type $generated@@194)))
(= (type ($generated@@182 $generated@@193 $generated@@194 $generated@@195 $generated@@196)) ($generated@@179 $generated@@198 $generated@@197))))
 :pattern ( ($generated@@182 $generated@@193 $generated@@194 $generated@@195 $generated@@196))
))) (forall (($generated@@199 T@U) ($generated@@200 T@U) ($generated@@201 T@U) ($generated@@202 T@U) ) (! (let (($generated@@203 ($generated@@181 (type $generated@@199))))
 (=> (= (type $generated@@202) $generated@@203) (= ($generated@@177 ($generated@@182 $generated@@199 $generated@@200 $generated@@201 $generated@@202) $generated@@200 $generated@@201) $generated@@202)))
 :weight 0
))) (and (and (forall (($generated@@204 T@U) ($generated@@205 T@U) ($generated@@206 T@U) ($generated@@207 T@U) ($generated@@208 T@U) ($generated@@209 T@U) ) (!  (or (= $generated@@206 $generated@@208) (= ($generated@@177 ($generated@@182 $generated@@205 $generated@@206 $generated@@207 $generated@@204) $generated@@208 $generated@@209) ($generated@@177 $generated@@205 $generated@@208 $generated@@209)))
 :weight 0
)) (forall (($generated@@210 T@U) ($generated@@211 T@U) ($generated@@212 T@U) ($generated@@213 T@U) ($generated@@214 T@U) ($generated@@215 T@U) ) (!  (or (= $generated@@213 $generated@@215) (= ($generated@@177 ($generated@@182 $generated@@211 $generated@@212 $generated@@213 $generated@@210) $generated@@214 $generated@@215) ($generated@@177 $generated@@211 $generated@@214 $generated@@215)))
 :weight 0
))) (forall (($generated@@216 T@U) ($generated@@217 T@U) ($generated@@218 T@U) ($generated@@219 T@U) ($generated@@220 T@U) ($generated@@221 T@U) ) (!  (or true (= ($generated@@177 ($generated@@182 $generated@@217 $generated@@218 $generated@@219 $generated@@216) $generated@@220 $generated@@221) ($generated@@177 $generated@@217 $generated@@220 $generated@@221)))
 :weight 0
)))) (forall (($generated@@222 T@U) ($generated@@223 T@U) ($generated@@224 T@U) ($generated@@225 Bool) ) (! (= (type ($generated@@178 $generated@@222 $generated@@223 $generated@@224 $generated@@225)) ($generated@@179 $generated@@79 $generated@@4))
 :pattern ( ($generated@@178 $generated@@222 $generated@@223 $generated@@224 $generated@@225))
))))
(assert (forall (($generated@@226 T@U) ($generated@@227 T@U) ($generated@@228 T@U) ($generated@@229 Bool) ($generated@@230 T@U) ($generated@@231 T@U) ) (! (let (($generated@@232 ($generated@@69 (type $generated@@231))))
 (=> (and (and (and (and (= (type $generated@@226) $generated@@79) (= (type $generated@@227) ($generated@@78 $generated@@79 $generated@@80))) (= (type $generated@@228) ($generated@@68 $generated@@4))) (= (type $generated@@230) $generated@@79)) (= (type $generated@@231) ($generated@@68 $generated@@232))) (= ($generated@@0 ($generated@@177 ($generated@@178 $generated@@226 $generated@@227 $generated@@228 $generated@@229) $generated@@230 $generated@@231))  (=> (and (not (= $generated@@230 $generated@@226)) ($generated@@0 ($generated@@85 ($generated@@83 $generated@@227 $generated@@230) $generated@@228))) $generated@@229))))
 :pattern ( ($generated@@177 ($generated@@178 $generated@@226 $generated@@227 $generated@@228 $generated@@229) $generated@@230 $generated@@231))
)))
(assert  (and (forall (($generated@@235 T@U) ($generated@@236 Int) ) (! (let (($generated@@237 ($generated@@159 (type $generated@@235))))
(= (type ($generated@@233 $generated@@235 $generated@@236)) ($generated@@157 $generated@@237)))
 :pattern ( ($generated@@233 $generated@@235 $generated@@236))
)) (forall (($generated@@238 T@U) ($generated@@239 T@U) ) (! (let (($generated@@240 ($generated@@159 (type $generated@@238))))
(= (type ($generated@@234 $generated@@238 $generated@@239)) ($generated@@157 $generated@@240)))
 :pattern ( ($generated@@234 $generated@@238 $generated@@239))
))))
(assert (forall (($generated@@241 T@U) ($generated@@242 T@U) ($generated@@243 Int) ) (! (let (($generated@@244 ($generated@@159 (type $generated@@241))))
 (=> (and (and (= (type $generated@@241) ($generated@@157 $generated@@244)) (= (type $generated@@242) ($generated@@157 $generated@@244))) (= $generated@@243 ($generated@@158 $generated@@241))) (and (= ($generated@@233 ($generated@@234 $generated@@241 $generated@@242) $generated@@243) $generated@@241) (= ($generated@@155 ($generated@@234 $generated@@241 $generated@@242) $generated@@243) $generated@@242))))
 :pattern ( ($generated@@233 ($generated@@234 $generated@@241 $generated@@242) $generated@@243))
 :pattern ( ($generated@@155 ($generated@@234 $generated@@241 $generated@@242) $generated@@243))
)))
(assert (forall (($generated@@247 T@U) ($generated@@248 T@U) ) (! (= (type ($generated@@245 $generated@@247 $generated@@248)) $generated@@141)
 :pattern ( ($generated@@245 $generated@@247 $generated@@248))
)))
(assert (forall (($generated@@249 T@U) ($generated@@250 T@U) ($generated@@251 T@U) ($generated@@252 T@U) ) (!  (=> (and (and (and (= (type $generated@@249) $generated@@66) (= (type $generated@@250) $generated@@66)) (= (type $generated@@251) $generated@@150)) (= (type $generated@@252) $generated@@150)) (= ($generated@@137 ($generated@@245 $generated@@251 $generated@@252) ($generated@@140 $generated@@249 $generated@@250))  (and ($generated@@246 $generated@@251 $generated@@249) ($generated@@246 $generated@@252 $generated@@250))))
 :pattern ( ($generated@@137 ($generated@@245 $generated@@251 $generated@@252) ($generated@@140 $generated@@249 $generated@@250)))
)))
(assert (forall (($generated@@253 T@U) ($generated@@254 T@U) ) (!  (=> (and (= (type $generated@@253) $generated@@141) (= (type $generated@@254) $generated@@141)) (= ($generated@@147 $generated@@253 $generated@@254) (= $generated@@253 $generated@@254)))
 :pattern ( ($generated@@147 $generated@@253 $generated@@254))
)))
(assert (forall (($generated@@255 T@U) ($generated@@256 Int) ) (! (let (($generated@@257 ($generated@@159 (type $generated@@255))))
 (=> (and (= (type $generated@@255) ($generated@@157 $generated@@257)) (= $generated@@256 0)) (= ($generated@@155 $generated@@255 $generated@@256) $generated@@255)))
 :pattern ( ($generated@@155 $generated@@255 $generated@@256))
)))
(assert (forall (($generated@@259 T@U) ) (! (= (type ($generated@@258 $generated@@259)) $generated@@66)
 :pattern ( ($generated@@258 $generated@@259))
)))
(assert (forall (($generated@@260 T@U) ($generated@@261 T@U) ) (!  (=> (and (= (type $generated@@260) ($generated@@78 $generated@@150 $generated@@4)) (= (type $generated@@261) $generated@@66)) (= ($generated@@137 $generated@@260 ($generated@@258 $generated@@261)) (forall (($generated@@262 T@U) ) (!  (=> (and (= (type $generated@@262) $generated@@150) ($generated@@0 ($generated@@83 $generated@@260 $generated@@262))) ($generated@@246 $generated@@262 $generated@@261))
 :pattern ( ($generated@@83 $generated@@260 $generated@@262))
))))
 :pattern ( ($generated@@137 $generated@@260 ($generated@@258 $generated@@261)))
)))
(assert (forall (($generated@@264 T@U) ) (! (= (type ($generated@@263 $generated@@264)) $generated@@66)
 :pattern ( ($generated@@263 $generated@@264))
)))
(assert (forall (($generated@@265 T@U) ($generated@@266 T@U) ) (!  (=> (and (= (type $generated@@265) ($generated@@78 $generated@@150 $generated@@4)) (= (type $generated@@266) $generated@@66)) (= ($generated@@137 $generated@@265 ($generated@@263 $generated@@266)) (forall (($generated@@267 T@U) ) (!  (=> (and (= (type $generated@@267) $generated@@150) ($generated@@0 ($generated@@83 $generated@@265 $generated@@267))) ($generated@@246 $generated@@267 $generated@@266))
 :pattern ( ($generated@@83 $generated@@265 $generated@@267))
))))
 :pattern ( ($generated@@137 $generated@@265 ($generated@@263 $generated@@266)))
)))
(assert (forall (($generated@@269 Int) ) (! (= ($generated@@268 $generated@@269) $generated@@269)
 :pattern ( ($generated@@268 $generated@@269))
)))
(assert (forall (($generated@@271 T@U) ) (! (let (($generated@@272 (type $generated@@271)))
(= (type ($generated@@270 $generated@@271)) $generated@@272))
 :pattern ( ($generated@@270 $generated@@271))
)))
(assert (forall (($generated@@273 T@U) ) (! (= ($generated@@270 $generated@@273) $generated@@273)
 :pattern ( ($generated@@270 $generated@@273))
)))
(assert (forall (($generated@@275 T@U) ) (! (= (type ($generated@@274 $generated@@275)) $generated@@66)
 :pattern ( ($generated@@274 $generated@@275))
)))
(assert (forall (($generated@@276 T@U) ($generated@@277 T@U) ($generated@@278 T@U) ) (!  (=> (and (and (and (= (type $generated@@276) ($generated@@157 $generated@@150)) (= (type $generated@@277) $generated@@150)) (= (type $generated@@278) $generated@@66)) (and ($generated@@137 $generated@@276 ($generated@@274 $generated@@278)) ($generated@@246 $generated@@277 $generated@@278))) ($generated@@137 ($generated@@156 $generated@@276 $generated@@277) ($generated@@274 $generated@@278)))
 :pattern ( ($generated@@137 ($generated@@156 $generated@@276 $generated@@277) ($generated@@274 $generated@@278)))
)))
(assert (forall (($generated@@280 T@U) ($generated@@281 Int) ) (! (let (($generated@@282 ($generated@@159 (type $generated@@280))))
(= (type ($generated@@279 $generated@@280 $generated@@281)) $generated@@282))
 :pattern ( ($generated@@279 $generated@@280 $generated@@281))
)))
(assert (forall (($generated@@283 T@U) ($generated@@284 Int) ($generated@@285 Int) ) (! (let (($generated@@286 ($generated@@159 (type $generated@@283))))
 (=> (= (type $generated@@283) ($generated@@157 $generated@@286)) (=> (and (and (<= 0 $generated@@285) (< $generated@@285 $generated@@284)) (< $generated@@285 ($generated@@158 $generated@@283))) (= ($generated@@279 ($generated@@233 $generated@@283 $generated@@284) $generated@@285) ($generated@@279 $generated@@283 $generated@@285)))))
 :weight 25
 :pattern ( ($generated@@279 ($generated@@233 $generated@@283 $generated@@284) $generated@@285))
 :pattern ( ($generated@@279 $generated@@283 $generated@@285) ($generated@@233 $generated@@283 $generated@@284))
)))
(assert (forall (($generated@@289 T@U) ($generated@@290 T@U) ($generated@@291 T@U) ($generated@@292 T@U) ($generated@@293 T@U) ) (!  (=> (and (and (and (and (and (= (type $generated@@289) $generated@@66) (= (type $generated@@290) $generated@@66)) (= (type $generated@@291) $generated@@150)) (= (type $generated@@292) $generated@@150)) (= (type $generated@@293) ($generated@@78 $generated@@79 $generated@@80))) ($generated@@287 $generated@@293)) (= ($generated@@76 ($generated@@245 $generated@@291 $generated@@292) ($generated@@140 $generated@@289 $generated@@290) $generated@@293)  (and ($generated@@288 $generated@@291 $generated@@289 $generated@@293) ($generated@@288 $generated@@292 $generated@@290 $generated@@293))))
 :pattern ( ($generated@@76 ($generated@@245 $generated@@291 $generated@@292) ($generated@@140 $generated@@289 $generated@@290) $generated@@293))
)))
(assert (forall (($generated@@294 T@U) ($generated@@295 Int) ) (! (let (($generated@@296 ($generated@@159 (type $generated@@294))))
 (=> (= (type $generated@@294) ($generated@@157 $generated@@296)) (=> (and (<= 0 $generated@@295) (<= $generated@@295 ($generated@@158 $generated@@294))) (= ($generated@@158 ($generated@@155 $generated@@294 $generated@@295)) (- ($generated@@158 $generated@@294) $generated@@295)))))
 :pattern ( ($generated@@158 ($generated@@155 $generated@@294 $generated@@295)))
)))
(assert (forall (($generated@@298 T@U) ) (! (= (type ($generated@@297 $generated@@298)) $generated@@70)
 :pattern ( ($generated@@297 $generated@@298))
)))
(assert (forall (($generated@@299 T@U) ) (!  (=> (= (type $generated@@299) $generated@@141) (= ($generated@@139 $generated@@299) (= ($generated@@297 $generated@@299) $generated@@61)))
 :pattern ( ($generated@@139 $generated@@299))
)))
(assert (forall (($generated@@301 T@U) ($generated@@302 T@U) ) (! (let (($generated@@303 ($generated@@159 (type $generated@@301))))
 (=> (and (= (type $generated@@301) ($generated@@157 $generated@@303)) (= (type $generated@@302) ($generated@@157 $generated@@303))) (= ($generated@@300 $generated@@301 $generated@@302)  (and (= ($generated@@158 $generated@@301) ($generated@@158 $generated@@302)) (forall (($generated@@304 Int) ) (!  (=> (and (<= 0 $generated@@304) (< $generated@@304 ($generated@@158 $generated@@301))) (= ($generated@@279 $generated@@301 $generated@@304) ($generated@@279 $generated@@302 $generated@@304)))
 :pattern ( ($generated@@279 $generated@@301 $generated@@304))
 :pattern ( ($generated@@279 $generated@@302 $generated@@304))
))))))
 :pattern ( ($generated@@300 $generated@@301 $generated@@302))
)))
(assert (forall (($generated@@306 T@U) ($generated@@307 Int) ) (! (let (($generated@@308 ($generated@@159 (type $generated@@306))))
 (=> (= (type $generated@@306) ($generated@@157 $generated@@308)) (=> (and (<= 0 $generated@@307) (< $generated@@307 ($generated@@158 $generated@@306))) (< ($generated@@305 ($generated@@233 $generated@@306 $generated@@307)) ($generated@@305 $generated@@306)))))
 :pattern ( ($generated@@305 ($generated@@233 $generated@@306 $generated@@307)))
)))
(assert (forall (($generated@@309 T@U) ) (!  (=> (and (= (type $generated@@309) $generated@@141) ($generated@@139 $generated@@309)) (exists (($generated@@310 T@U) ($generated@@311 T@U) ) (!  (and (and (= (type $generated@@310) $generated@@150) (= (type $generated@@311) $generated@@150)) (= $generated@@309 ($generated@@245 $generated@@310 $generated@@311)))
 :no-pattern (type $generated@@310)
 :no-pattern (type $generated@@311)
 :no-pattern ($generated $generated@@310)
 :no-pattern ($generated@@0 $generated@@310)
 :no-pattern ($generated $generated@@311)
 :no-pattern ($generated@@0 $generated@@311)
)))
 :pattern ( ($generated@@139 $generated@@309))
)))
(assert (forall (($generated@@313 T@T) ) (! (= (type ($generated@@312 $generated@@313)) ($generated@@157 $generated@@313))
 :pattern ( ($generated@@312 $generated@@313))
)))
(assert (forall (($generated@@314 T@T) ) (! (= ($generated@@158 ($generated@@312 $generated@@314)) 0)
 :pattern ( ($generated@@312 $generated@@314))
)))
(assert (forall (($generated@@315 T@U) ($generated@@316 Int) ) (! (let (($generated@@317 ($generated@@159 (type $generated@@315))))
 (=> (= (type $generated@@315) ($generated@@157 $generated@@317)) (=> (and (< 0 $generated@@316) (<= $generated@@316 ($generated@@158 $generated@@315))) (< ($generated@@305 ($generated@@155 $generated@@315 $generated@@316)) ($generated@@305 $generated@@315)))))
 :pattern ( ($generated@@305 ($generated@@155 $generated@@315 $generated@@316)))
)))
(assert (forall (($generated@@318 T@U) ($generated@@319 T@U) ) (! (let (($generated@@320 (type $generated@@319)))
 (=> (= (type $generated@@318) ($generated@@157 $generated@@320)) (= ($generated@@158 ($generated@@156 $generated@@318 $generated@@319)) (+ 1 ($generated@@158 $generated@@318)))))
 :pattern ( ($generated@@156 $generated@@318 $generated@@319))
)))
(assert (forall (($generated@@322 T@U) ) (! (= (type ($generated@@321 $generated@@322)) $generated@@150)
 :pattern ( ($generated@@321 $generated@@322))
)))
(assert (forall (($generated@@323 T@U) ($generated@@324 T@U) ($generated@@325 T@U) ) (!  (=> (and (= (type $generated@@324) $generated@@66) (= (type $generated@@325) ($generated@@78 $generated@@79 $generated@@80))) (= ($generated@@288 ($generated@@321 $generated@@323) $generated@@324 $generated@@325) ($generated@@76 $generated@@323 $generated@@324 $generated@@325)))
 :pattern ( ($generated@@288 ($generated@@321 $generated@@323) $generated@@324 $generated@@325))
)))
(assert (forall (($generated@@326 T@U) ($generated@@327 Int) ($generated@@328 Int) ) (! (let (($generated@@329 ($generated@@159 (type $generated@@326))))
 (=> (= (type $generated@@326) ($generated@@157 $generated@@329)) (=> (and (and (<= 0 $generated@@327) (<= 0 $generated@@328)) (< $generated@@328 (- ($generated@@158 $generated@@326) $generated@@327))) (= ($generated@@279 ($generated@@155 $generated@@326 $generated@@327) $generated@@328) ($generated@@279 $generated@@326 (+ $generated@@328 $generated@@327))))))
 :weight 25
 :pattern ( ($generated@@279 ($generated@@155 $generated@@326 $generated@@327) $generated@@328))
)))
(assert (forall (($generated@@332 T@T) ) (! (= (type ($generated@@331 $generated@@332)) ($generated@@78 $generated@@332 $generated@@2))
 :pattern ( ($generated@@331 $generated@@332))
)))
(assert (forall (($generated@@333 T@U) ) (! (let (($generated@@334 ($generated@@81 (type $generated@@333))))
 (=> (= (type $generated@@333) ($generated@@78 $generated@@334 $generated@@2)) (and (= (= ($generated@@330 $generated@@333) 0) (= $generated@@333 ($generated@@331 $generated@@334))) (=> (not (= ($generated@@330 $generated@@333) 0)) (exists (($generated@@335 T@U) ) (!  (and (= (type $generated@@335) $generated@@334) (< 0 ($generated ($generated@@83 $generated@@333 $generated@@335))))
 :no-pattern (type $generated@@335)
 :no-pattern ($generated $generated@@335)
 :no-pattern ($generated@@0 $generated@@335)
))))))
 :pattern ( ($generated@@330 $generated@@333))
)))
(assert  (and (and (and (and (forall (($generated@@341 T@T) ($generated@@342 T@T) ) (= ($generated@@1 ($generated@@338 $generated@@341 $generated@@342)) 18)) (forall (($generated@@343 T@T) ($generated@@344 T@T) ) (! (= ($generated@@339 ($generated@@338 $generated@@343 $generated@@344)) $generated@@343)
 :pattern ( ($generated@@338 $generated@@343 $generated@@344))
))) (forall (($generated@@345 T@T) ($generated@@346 T@T) ) (! (= ($generated@@340 ($generated@@338 $generated@@345 $generated@@346)) $generated@@346)
 :pattern ( ($generated@@338 $generated@@345 $generated@@346))
))) (forall (($generated@@347 T@U) ) (! (let (($generated@@348 ($generated@@339 (type $generated@@347))))
(= (type ($generated@@336 $generated@@347)) ($generated@@78 $generated@@348 $generated@@4)))
 :pattern ( ($generated@@336 $generated@@347))
))) (forall (($generated@@349 T@T) ($generated@@350 T@T) ) (! (= (type ($generated@@337 $generated@@349 $generated@@350)) ($generated@@338 $generated@@349 $generated@@350))
 :pattern ( ($generated@@337 $generated@@349 $generated@@350))
))))
(assert (forall (($generated@@351 T@U) ($generated@@352 T@T) ) (! (let (($generated@@353 (type $generated@@351)))
 (not ($generated@@0 ($generated@@83 ($generated@@336 ($generated@@337 $generated@@353 $generated@@352)) $generated@@351))))
 :pattern ( (let (($generated@@353 (type $generated@@351)))
($generated@@83 ($generated@@336 ($generated@@337 $generated@@353 $generated@@352)) $generated@@351)))
)))
(assert  (and (and (and (and (forall (($generated@@359 T@T) ($generated@@360 T@T) ) (= ($generated@@1 ($generated@@356 $generated@@359 $generated@@360)) 19)) (forall (($generated@@361 T@T) ($generated@@362 T@T) ) (! (= ($generated@@357 ($generated@@356 $generated@@361 $generated@@362)) $generated@@361)
 :pattern ( ($generated@@356 $generated@@361 $generated@@362))
))) (forall (($generated@@363 T@T) ($generated@@364 T@T) ) (! (= ($generated@@358 ($generated@@356 $generated@@363 $generated@@364)) $generated@@364)
 :pattern ( ($generated@@356 $generated@@363 $generated@@364))
))) (forall (($generated@@365 T@U) ) (! (let (($generated@@366 ($generated@@357 (type $generated@@365))))
(= (type ($generated@@354 $generated@@365)) ($generated@@78 $generated@@366 $generated@@4)))
 :pattern ( ($generated@@354 $generated@@365))
))) (forall (($generated@@367 T@T) ($generated@@368 T@T) ) (! (= (type ($generated@@355 $generated@@367 $generated@@368)) ($generated@@356 $generated@@367 $generated@@368))
 :pattern ( ($generated@@355 $generated@@367 $generated@@368))
))))
(assert (forall (($generated@@369 T@U) ($generated@@370 T@T) ) (! (let (($generated@@371 (type $generated@@369)))
 (not ($generated@@0 ($generated@@83 ($generated@@354 ($generated@@355 $generated@@371 $generated@@370)) $generated@@369))))
 :pattern ( (let (($generated@@371 (type $generated@@369)))
($generated@@83 ($generated@@354 ($generated@@355 $generated@@371 $generated@@370)) $generated@@369)))
)))
(assert (forall (($generated@@372 T@U) ($generated@@373 T@U) ) (! (let (($generated@@374 ($generated@@159 (type $generated@@372))))
 (=> (and (= (type $generated@@372) ($generated@@157 $generated@@374)) (= (type $generated@@373) ($generated@@157 $generated@@374))) (= ($generated@@158 ($generated@@234 $generated@@372 $generated@@373)) (+ ($generated@@158 $generated@@372) ($generated@@158 $generated@@373)))))
 :pattern ( ($generated@@158 ($generated@@234 $generated@@372 $generated@@373)))
)))
(assert (forall (($generated@@375 T@U) ) (! (let (($generated@@376 ($generated@@81 (type $generated@@375))))
 (=> (= (type $generated@@375) ($generated@@78 $generated@@376 $generated@@2)) (= ($generated@@173 $generated@@375) (forall (($generated@@377 T@U) ) (!  (=> (= (type $generated@@377) $generated@@376) (and (<= 0 ($generated ($generated@@83 $generated@@375 $generated@@377))) (<= ($generated ($generated@@83 $generated@@375 $generated@@377)) ($generated@@330 $generated@@375))))
 :pattern ( ($generated@@83 $generated@@375 $generated@@377))
)))))
 :pattern ( ($generated@@173 $generated@@375))
)))
(assert (forall (($generated@@379 T@T) ($generated@@380 T@U) ) (! (= (type ($generated@@378 $generated@@379 $generated@@380)) $generated@@379)
 :pattern ( ($generated@@378 $generated@@379 $generated@@380))
)))
(assert (forall (($generated@@381 T@U) ) (!  (=> (and (= (type $generated@@381) $generated@@150) ($generated@@246 $generated@@381 $generated@@134)) (and (= ($generated@@321 ($generated@@378 $generated@@2 $generated@@381)) $generated@@381) ($generated@@137 ($generated@@378 $generated@@2 $generated@@381) $generated@@134)))
 :pattern ( ($generated@@246 $generated@@381 $generated@@134))
)))
(assert (forall (($generated@@382 T@U) ($generated@@383 Int) ($generated@@384 T@U) ) (! (let (($generated@@385 (type $generated@@384)))
 (=> (= (type $generated@@382) ($generated@@157 $generated@@385)) (and (=> (= $generated@@383 ($generated@@158 $generated@@382)) (= ($generated@@279 ($generated@@156 $generated@@382 $generated@@384) $generated@@383) $generated@@384)) (=> (not (= $generated@@383 ($generated@@158 $generated@@382))) (= ($generated@@279 ($generated@@156 $generated@@382 $generated@@384) $generated@@383) ($generated@@279 $generated@@382 $generated@@383))))))
 :pattern ( ($generated@@279 ($generated@@156 $generated@@382 $generated@@384) $generated@@383))
)))
(assert (forall (($generated@@386 T@U) ) (! (let (($generated@@387 ($generated@@340 (type $generated@@386))))
(let (($generated@@388 ($generated@@339 (type $generated@@386))))
 (=> (= (type $generated@@386) ($generated@@338 $generated@@388 $generated@@387)) (or (= $generated@@386 ($generated@@337 $generated@@388 $generated@@387)) (exists (($generated@@389 T@U) ) (!  (and (= (type $generated@@389) $generated@@388) ($generated@@0 ($generated@@83 ($generated@@336 $generated@@386) $generated@@389)))
 :no-pattern (type $generated@@389)
 :no-pattern ($generated $generated@@389)
 :no-pattern ($generated@@0 $generated@@389)
))))))
 :pattern ( ($generated@@336 $generated@@386))
)))
(assert (forall (($generated@@391 T@U) ) (! (let (($generated@@392 ($generated@@340 (type $generated@@391))))
(= (type ($generated@@390 $generated@@391)) ($generated@@78 $generated@@392 $generated@@4)))
 :pattern ( ($generated@@390 $generated@@391))
)))
(assert (forall (($generated@@393 T@U) ) (! (let (($generated@@394 ($generated@@340 (type $generated@@393))))
(let (($generated@@395 ($generated@@339 (type $generated@@393))))
 (=> (= (type $generated@@393) ($generated@@338 $generated@@395 $generated@@394)) (or (= $generated@@393 ($generated@@337 $generated@@395 $generated@@394)) (exists (($generated@@396 T@U) ) (!  (and (= (type $generated@@396) $generated@@394) ($generated@@0 ($generated@@83 ($generated@@390 $generated@@393) $generated@@396)))
 :no-pattern (type $generated@@396)
 :no-pattern ($generated $generated@@396)
 :no-pattern ($generated@@0 $generated@@396)
))))))
 :pattern ( ($generated@@390 $generated@@393))
)))
(assert (forall (($generated@@397 T@U) ) (! (let (($generated@@398 ($generated@@358 (type $generated@@397))))
(let (($generated@@399 ($generated@@357 (type $generated@@397))))
 (=> (= (type $generated@@397) ($generated@@356 $generated@@399 $generated@@398)) (or (= $generated@@397 ($generated@@355 $generated@@399 $generated@@398)) (exists (($generated@@400 T@U) ) (!  (and (= (type $generated@@400) $generated@@399) ($generated@@0 ($generated@@83 ($generated@@354 $generated@@397) $generated@@400)))
 :no-pattern (type $generated@@400)
 :no-pattern ($generated $generated@@400)
 :no-pattern ($generated@@0 $generated@@400)
))))))
 :pattern ( ($generated@@354 $generated@@397))
)))
(assert (forall (($generated@@402 T@U) ) (! (let (($generated@@403 ($generated@@358 (type $generated@@402))))
(= (type ($generated@@401 $generated@@402)) ($generated@@78 $generated@@403 $generated@@4)))
 :pattern ( ($generated@@401 $generated@@402))
)))
(assert (forall (($generated@@404 T@U) ) (! (let (($generated@@405 ($generated@@358 (type $generated@@404))))
(let (($generated@@406 ($generated@@357 (type $generated@@404))))
 (=> (= (type $generated@@404) ($generated@@356 $generated@@406 $generated@@405)) (or (= $generated@@404 ($generated@@355 $generated@@406 $generated@@405)) (exists (($generated@@407 T@U) ) (!  (and (= (type $generated@@407) $generated@@405) ($generated@@0 ($generated@@83 ($generated@@401 $generated@@404) $generated@@407)))
 :no-pattern (type $generated@@407)
 :no-pattern ($generated $generated@@407)
 :no-pattern ($generated@@0 $generated@@407)
))))))
 :pattern ( ($generated@@401 $generated@@404))
)))
(assert (forall (($generated@@408 T@U) ($generated@@409 T@U) ) (!  (=> (and (= (type $generated@@408) ($generated@@78 $generated@@150 $generated@@2)) (= (type $generated@@409) $generated@@66)) (= ($generated@@137 $generated@@408 ($generated@@172 $generated@@409)) (forall (($generated@@410 T@U) ) (!  (=> (and (= (type $generated@@410) $generated@@150) (< 0 ($generated ($generated@@83 $generated@@408 $generated@@410)))) ($generated@@246 $generated@@410 $generated@@409))
 :pattern ( ($generated@@83 $generated@@408 $generated@@410))
))))
 :pattern ( ($generated@@137 $generated@@408 ($generated@@172 $generated@@409)))
)))
(assert (forall (($generated@@411 T@U) ($generated@@412 T@U) ($generated@@413 T@U) ) (!  (=> (and (and (= (type $generated@@411) ($generated@@78 $generated@@150 $generated@@4)) (= (type $generated@@412) $generated@@66)) (= (type $generated@@413) ($generated@@78 $generated@@79 $generated@@80))) (= ($generated@@76 $generated@@411 ($generated@@258 $generated@@412) $generated@@413) (forall (($generated@@414 T@U) ) (!  (=> (and (= (type $generated@@414) $generated@@150) ($generated@@0 ($generated@@83 $generated@@411 $generated@@414))) ($generated@@288 $generated@@414 $generated@@412 $generated@@413))
 :pattern ( ($generated@@83 $generated@@411 $generated@@414))
))))
 :pattern ( ($generated@@76 $generated@@411 ($generated@@258 $generated@@412) $generated@@413))
)))
(assert (forall (($generated@@415 T@U) ($generated@@416 T@U) ($generated@@417 T@U) ) (!  (=> (and (and (= (type $generated@@415) ($generated@@78 $generated@@150 $generated@@4)) (= (type $generated@@416) $generated@@66)) (= (type $generated@@417) ($generated@@78 $generated@@79 $generated@@80))) (= ($generated@@76 $generated@@415 ($generated@@263 $generated@@416) $generated@@417) (forall (($generated@@418 T@U) ) (!  (=> (and (= (type $generated@@418) $generated@@150) ($generated@@0 ($generated@@83 $generated@@415 $generated@@418))) ($generated@@288 $generated@@418 $generated@@416 $generated@@417))
 :pattern ( ($generated@@83 $generated@@415 $generated@@418))
))))
 :pattern ( ($generated@@76 $generated@@415 ($generated@@263 $generated@@416) $generated@@417))
)))
(assert (forall (($generated@@419 T@U) ) (! (let (($generated@@420 (type $generated@@419)))
(= ($generated ($generated@@83 ($generated@@331 $generated@@420) $generated@@419)) 0))
 :pattern ( (let (($generated@@420 (type $generated@@419)))
($generated@@83 ($generated@@331 $generated@@420) $generated@@419)))
)))
(assert  (and (forall (($generated@@423 T@U) ) (! (= (type ($generated@@421 $generated@@423)) ($generated@@78 $generated@@150 $generated@@4))
 :pattern ( ($generated@@421 $generated@@423))
)) (forall (($generated@@424 T@U) ) (! (let (($generated@@425 ($generated@@340 (type $generated@@424))))
(let (($generated@@426 ($generated@@339 (type $generated@@424))))
(= (type ($generated@@422 $generated@@424)) ($generated@@78 $generated@@426 $generated@@425))))
 :pattern ( ($generated@@422 $generated@@424))
))))
(assert (forall (($generated@@427 T@U) ($generated@@428 T@U) ) (!  (=> (and (= (type $generated@@427) ($generated@@338 $generated@@150 $generated@@150)) (= (type $generated@@428) $generated@@150)) (= ($generated@@0 ($generated@@83 ($generated@@421 $generated@@427) $generated@@428))  (and ($generated@@0 ($generated@@83 ($generated@@336 $generated@@427) ($generated@@148 ($generated@@378 $generated@@141 $generated@@428)))) (= ($generated@@83 ($generated@@422 $generated@@427) ($generated@@148 ($generated@@378 $generated@@141 $generated@@428))) ($generated@@149 ($generated@@378 $generated@@141 $generated@@428))))))
 :pattern ( ($generated@@83 ($generated@@421 $generated@@427) $generated@@428))
)))
(assert  (and (forall (($generated@@431 T@U) ) (! (= (type ($generated@@429 $generated@@431)) ($generated@@78 $generated@@150 $generated@@4))
 :pattern ( ($generated@@429 $generated@@431))
)) (forall (($generated@@432 T@U) ) (! (let (($generated@@433 ($generated@@358 (type $generated@@432))))
(let (($generated@@434 ($generated@@357 (type $generated@@432))))
(= (type ($generated@@430 $generated@@432)) ($generated@@78 $generated@@434 $generated@@433))))
 :pattern ( ($generated@@430 $generated@@432))
))))
(assert (forall (($generated@@435 T@U) ($generated@@436 T@U) ) (!  (=> (and (= (type $generated@@435) ($generated@@356 $generated@@150 $generated@@150)) (= (type $generated@@436) $generated@@150)) (= ($generated@@0 ($generated@@83 ($generated@@429 $generated@@435) $generated@@436))  (and ($generated@@0 ($generated@@83 ($generated@@354 $generated@@435) ($generated@@148 ($generated@@378 $generated@@141 $generated@@436)))) (= ($generated@@83 ($generated@@430 $generated@@435) ($generated@@148 ($generated@@378 $generated@@141 $generated@@436))) ($generated@@149 ($generated@@378 $generated@@141 $generated@@436))))))
 :pattern ( ($generated@@83 ($generated@@429 $generated@@435) $generated@@436))
)))
(assert (forall (($generated@@437 T@U) ($generated@@438 T@U) ) (! (let (($generated@@439 (type $generated@@438)))
(let (($generated@@440 ($generated@@339 (type $generated@@437))))
 (=> (= (type $generated@@437) ($generated@@338 $generated@@440 $generated@@439)) (= ($generated@@0 ($generated@@83 ($generated@@390 $generated@@437) $generated@@438)) (exists (($generated@@441 T@U) ) (!  (and (= (type $generated@@441) $generated@@440) (and ($generated@@0 ($generated@@83 ($generated@@336 $generated@@437) $generated@@441)) (= $generated@@438 ($generated@@83 ($generated@@422 $generated@@437) $generated@@441))))
 :pattern ( ($generated@@83 ($generated@@336 $generated@@437) $generated@@441))
 :pattern ( ($generated@@83 ($generated@@422 $generated@@437) $generated@@441))
))))))
 :pattern ( ($generated@@83 ($generated@@390 $generated@@437) $generated@@438))
)))
(assert (forall (($generated@@442 T@U) ($generated@@443 T@U) ) (! (let (($generated@@444 (type $generated@@443)))
(let (($generated@@445 ($generated@@357 (type $generated@@442))))
 (=> (= (type $generated@@442) ($generated@@356 $generated@@445 $generated@@444)) (= ($generated@@0 ($generated@@83 ($generated@@401 $generated@@442) $generated@@443)) (exists (($generated@@446 T@U) ) (!  (and (= (type $generated@@446) $generated@@445) (and ($generated@@0 ($generated@@83 ($generated@@354 $generated@@442) $generated@@446)) (= $generated@@443 ($generated@@83 ($generated@@430 $generated@@442) $generated@@446))))
 :pattern ( ($generated@@83 ($generated@@354 $generated@@442) $generated@@446))
 :pattern ( ($generated@@83 ($generated@@430 $generated@@442) $generated@@446))
))))))
 :pattern ( ($generated@@83 ($generated@@401 $generated@@442) $generated@@443))
)))
(assert (forall (($generated@@448 T@U) ($generated@@449 T@U) ) (! (= (type ($generated@@447 $generated@@448 $generated@@449)) $generated@@66)
 :pattern ( ($generated@@447 $generated@@448 $generated@@449))
)))
(assert (forall (($generated@@450 T@U) ($generated@@451 T@U) ($generated@@452 T@U) ($generated@@453 T@U) ) (!  (=> (and (and (and (= (type $generated@@450) ($generated@@338 $generated@@150 $generated@@150)) (= (type $generated@@451) $generated@@66)) (= (type $generated@@452) $generated@@66)) (= (type $generated@@453) ($generated@@78 $generated@@79 $generated@@80))) (= ($generated@@76 $generated@@450 ($generated@@447 $generated@@451 $generated@@452) $generated@@453) (forall (($generated@@454 T@U) ) (!  (=> (and (= (type $generated@@454) $generated@@150) ($generated@@0 ($generated@@83 ($generated@@336 $generated@@450) $generated@@454))) (and ($generated@@288 ($generated@@83 ($generated@@422 $generated@@450) $generated@@454) $generated@@452 $generated@@453) ($generated@@288 $generated@@454 $generated@@451 $generated@@453)))
 :pattern ( ($generated@@83 ($generated@@422 $generated@@450) $generated@@454))
 :pattern ( ($generated@@83 ($generated@@336 $generated@@450) $generated@@454))
))))
 :pattern ( ($generated@@76 $generated@@450 ($generated@@447 $generated@@451 $generated@@452) $generated@@453))
)))
(assert (forall (($generated@@456 T@U) ($generated@@457 T@U) ) (! (= (type ($generated@@455 $generated@@456 $generated@@457)) $generated@@66)
 :pattern ( ($generated@@455 $generated@@456 $generated@@457))
)))
(assert (forall (($generated@@458 T@U) ($generated@@459 T@U) ($generated@@460 T@U) ($generated@@461 T@U) ) (!  (=> (and (and (and (= (type $generated@@458) ($generated@@356 $generated@@150 $generated@@150)) (= (type $generated@@459) $generated@@66)) (= (type $generated@@460) $generated@@66)) (= (type $generated@@461) ($generated@@78 $generated@@79 $generated@@80))) (= ($generated@@76 $generated@@458 ($generated@@455 $generated@@459 $generated@@460) $generated@@461) (forall (($generated@@462 T@U) ) (!  (=> (and (= (type $generated@@462) $generated@@150) ($generated@@0 ($generated@@83 ($generated@@354 $generated@@458) $generated@@462))) (and ($generated@@288 ($generated@@83 ($generated@@430 $generated@@458) $generated@@462) $generated@@460 $generated@@461) ($generated@@288 $generated@@462 $generated@@459 $generated@@461)))
 :pattern ( ($generated@@83 ($generated@@430 $generated@@458) $generated@@462))
 :pattern ( ($generated@@83 ($generated@@354 $generated@@458) $generated@@462))
))))
 :pattern ( ($generated@@76 $generated@@458 ($generated@@455 $generated@@459 $generated@@460) $generated@@461))
)))
(assert (forall (($generated@@463 T@U) ($generated@@464 T@U) ) (! (let (($generated@@465 ($generated@@159 (type $generated@@463))))
 (=> (and (and (= (type $generated@@463) ($generated@@157 $generated@@465)) (= (type $generated@@464) ($generated@@157 $generated@@465))) ($generated@@300 $generated@@463 $generated@@464)) (= $generated@@463 $generated@@464)))
 :pattern ( ($generated@@300 $generated@@463 $generated@@464))
)))
(assert (forall (($generated@@466 T@U) ($generated@@467 Int) ) (! (let (($generated@@468 ($generated@@159 (type $generated@@466))))
 (=> (= (type $generated@@466) ($generated@@157 $generated@@468)) (=> (and (<= 0 $generated@@467) (<= $generated@@467 ($generated@@158 $generated@@466))) (= ($generated@@158 ($generated@@233 $generated@@466 $generated@@467)) $generated@@467))))
 :pattern ( ($generated@@158 ($generated@@233 $generated@@466 $generated@@467)))
)))
(assert (forall (($generated@@470 T@T) ) (! (= (type ($generated@@469 $generated@@470)) ($generated@@78 $generated@@470 $generated@@4))
 :pattern ( ($generated@@469 $generated@@470))
)))
(assert (forall (($generated@@471 T@U) ) (! (let (($generated@@472 ($generated@@358 (type $generated@@471))))
(let (($generated@@473 ($generated@@357 (type $generated@@471))))
 (=> (= (type $generated@@471) ($generated@@356 $generated@@473 $generated@@472)) (= (= $generated@@471 ($generated@@355 $generated@@473 $generated@@472)) (= ($generated@@354 $generated@@471) ($generated@@469 $generated@@473))))))
 :pattern ( ($generated@@354 $generated@@471))
)))
(assert (forall (($generated@@474 T@U) ) (! (let (($generated@@475 ($generated@@358 (type $generated@@474))))
(let (($generated@@476 ($generated@@357 (type $generated@@474))))
 (=> (= (type $generated@@474) ($generated@@356 $generated@@476 $generated@@475)) (= (= $generated@@474 ($generated@@355 $generated@@476 $generated@@475)) (= ($generated@@401 $generated@@474) ($generated@@469 $generated@@475))))))
 :pattern ( ($generated@@401 $generated@@474))
)))
(assert (forall (($generated@@477 T@U) ) (! (let (($generated@@478 ($generated@@358 (type $generated@@477))))
(let (($generated@@479 ($generated@@357 (type $generated@@477))))
 (=> (= (type $generated@@477) ($generated@@356 $generated@@479 $generated@@478)) (= (= $generated@@477 ($generated@@355 $generated@@479 $generated@@478)) (= ($generated@@429 $generated@@477) ($generated@@469 $generated@@150))))))
 :pattern ( ($generated@@429 $generated@@477))
)))
(assert (forall (($generated@@480 T@U) ) (! (let (($generated@@481 ($generated@@340 (type $generated@@480))))
(let (($generated@@482 ($generated@@339 (type $generated@@480))))
 (=> (= (type $generated@@480) ($generated@@338 $generated@@482 $generated@@481)) (or (= $generated@@480 ($generated@@337 $generated@@482 $generated@@481)) (exists (($generated@@483 T@U) ($generated@@484 T@U) ) (!  (and (and (= (type $generated@@483) $generated@@150) (= (type $generated@@484) $generated@@150)) ($generated@@0 ($generated@@83 ($generated@@421 $generated@@480) ($generated@@321 ($generated@@245 $generated@@483 $generated@@484)))))
 :no-pattern (type $generated@@483)
 :no-pattern (type $generated@@484)
 :no-pattern ($generated $generated@@483)
 :no-pattern ($generated@@0 $generated@@483)
 :no-pattern ($generated $generated@@484)
 :no-pattern ($generated@@0 $generated@@484)
))))))
 :pattern ( ($generated@@421 $generated@@480))
)))
(assert (forall (($generated@@485 T@U) ) (! (let (($generated@@486 ($generated@@358 (type $generated@@485))))
(let (($generated@@487 ($generated@@357 (type $generated@@485))))
 (=> (= (type $generated@@485) ($generated@@356 $generated@@487 $generated@@486)) (or (= $generated@@485 ($generated@@355 $generated@@487 $generated@@486)) (exists (($generated@@488 T@U) ($generated@@489 T@U) ) (!  (and (and (= (type $generated@@488) $generated@@150) (= (type $generated@@489) $generated@@150)) ($generated@@0 ($generated@@83 ($generated@@429 $generated@@485) ($generated@@321 ($generated@@245 $generated@@488 $generated@@489)))))
 :no-pattern (type $generated@@488)
 :no-pattern (type $generated@@489)
 :no-pattern ($generated $generated@@488)
 :no-pattern ($generated@@0 $generated@@488)
 :no-pattern ($generated $generated@@489)
 :no-pattern ($generated@@0 $generated@@489)
))))))
 :pattern ( ($generated@@429 $generated@@485))
)))
(assert (forall (($generated@@490 T@U) ) (!  (=> (and (= (type $generated@@490) $generated@@150) ($generated@@246 $generated@@490 $generated@@46)) (and (= ($generated@@321 ($generated@@378 $generated@@2 $generated@@490)) $generated@@490) ($generated@@137 ($generated@@378 $generated@@2 $generated@@490) $generated@@46)))
 :pattern ( ($generated@@246 $generated@@490 $generated@@46))
)))
(assert (forall (($generated@@491 T@U) ) (!  (=> (and (= (type $generated@@491) $generated@@150) ($generated@@246 $generated@@491 $generated@@47)) (and (= ($generated@@321 ($generated@@378 $generated@@3 $generated@@491)) $generated@@491) ($generated@@137 ($generated@@378 $generated@@3 $generated@@491) $generated@@47)))
 :pattern ( ($generated@@246 $generated@@491 $generated@@47))
)))
(assert (forall (($generated@@492 T@U) ) (!  (=> (and (= (type $generated@@492) $generated@@150) ($generated@@246 $generated@@492 $generated@@44)) (and (= ($generated@@321 ($generated@@378 $generated@@4 $generated@@492)) $generated@@492) ($generated@@137 ($generated@@378 $generated@@4 $generated@@492) $generated@@44)))
 :pattern ( ($generated@@246 $generated@@492 $generated@@44))
)))
(assert (= ($generated@@1 $generated@@493) 20))
(assert (forall (($generated@@494 T@U) ) (!  (=> (and (= (type $generated@@494) $generated@@150) ($generated@@246 $generated@@494 $generated@@45)) (and (= ($generated@@321 ($generated@@378 $generated@@493 $generated@@494)) $generated@@494) ($generated@@137 ($generated@@378 $generated@@493 $generated@@494) $generated@@45)))
 :pattern ( ($generated@@246 $generated@@494 $generated@@45))
)))
(assert (forall (($generated@@495 T@U) ($generated@@496 T@U) ) (!  (=> (= (type $generated@@496) $generated@@66) (= ($generated@@246 ($generated@@321 $generated@@495) $generated@@496) ($generated@@137 $generated@@495 $generated@@496)))
 :pattern ( ($generated@@246 ($generated@@321 $generated@@495) $generated@@496))
)))
(assert (forall (($generated@@497 T@U) ) (! (let (($generated@@498 ($generated@@81 (type $generated@@497))))
 (=> (= (type $generated@@497) ($generated@@78 $generated@@498 $generated@@2)) (<= 0 ($generated@@330 $generated@@497))))
 :pattern ( ($generated@@330 $generated@@497))
)))
(assert (forall (($generated@@499 T@U) ) (! (let (($generated@@500 ($generated@@159 (type $generated@@499))))
 (=> (= (type $generated@@499) ($generated@@157 $generated@@500)) (<= 0 ($generated@@158 $generated@@499))))
 :pattern ( ($generated@@158 $generated@@499))
)))
(assert (forall (($generated@@501 T@U) ($generated@@502 Int) ($generated@@503 Int) ) (! (let (($generated@@504 ($generated@@159 (type $generated@@501))))
 (=> (= (type $generated@@501) ($generated@@157 $generated@@504)) (=> (and (and (<= 0 $generated@@502) (< $generated@@502 $generated@@503)) (<= $generated@@503 ($generated@@158 $generated@@501))) (< ($generated@@305 ($generated@@234 ($generated@@233 $generated@@501 $generated@@502) ($generated@@155 $generated@@501 $generated@@503))) ($generated@@305 $generated@@501)))))
 :pattern ( ($generated@@305 ($generated@@234 ($generated@@233 $generated@@501 $generated@@502) ($generated@@155 $generated@@501 $generated@@503))))
)))
(assert (forall (($generated@@506 T@U) ) (! (= (type ($generated@@505 $generated@@506)) $generated@@66)
 :pattern ( ($generated@@505 $generated@@506))
)))
(assert (forall (($generated@@507 T@U) ($generated@@508 T@U) ) (!  (=> (and (= (type $generated@@507) $generated@@66) (= (type $generated@@508) $generated@@66)) (= ($generated@@505 ($generated@@447 $generated@@507 $generated@@508)) $generated@@507))
 :pattern ( ($generated@@447 $generated@@507 $generated@@508))
)))
(assert (forall (($generated@@510 T@U) ) (! (= (type ($generated@@509 $generated@@510)) $generated@@66)
 :pattern ( ($generated@@509 $generated@@510))
)))
(assert (forall (($generated@@511 T@U) ($generated@@512 T@U) ) (!  (=> (and (= (type $generated@@511) $generated@@66) (= (type $generated@@512) $generated@@66)) (= ($generated@@509 ($generated@@447 $generated@@511 $generated@@512)) $generated@@512))
 :pattern ( ($generated@@447 $generated@@511 $generated@@512))
)))
(assert (forall (($generated@@513 T@U) ($generated@@514 T@U) ) (!  (=> (and (= (type $generated@@513) $generated@@66) (= (type $generated@@514) $generated@@66)) (= ($generated@@74 ($generated@@447 $generated@@513 $generated@@514)) $generated@@58))
 :pattern ( ($generated@@447 $generated@@513 $generated@@514))
)))
(assert (forall (($generated@@516 T@U) ) (! (= (type ($generated@@515 $generated@@516)) $generated@@66)
 :pattern ( ($generated@@515 $generated@@516))
)))
(assert (forall (($generated@@517 T@U) ($generated@@518 T@U) ) (!  (=> (and (= (type $generated@@517) $generated@@66) (= (type $generated@@518) $generated@@66)) (= ($generated@@515 ($generated@@455 $generated@@517 $generated@@518)) $generated@@517))
 :pattern ( ($generated@@455 $generated@@517 $generated@@518))
)))
(assert (forall (($generated@@520 T@U) ) (! (= (type ($generated@@519 $generated@@520)) $generated@@66)
 :pattern ( ($generated@@519 $generated@@520))
)))
(assert (forall (($generated@@521 T@U) ($generated@@522 T@U) ) (!  (=> (and (= (type $generated@@521) $generated@@66) (= (type $generated@@522) $generated@@66)) (= ($generated@@519 ($generated@@455 $generated@@521 $generated@@522)) $generated@@522))
 :pattern ( ($generated@@455 $generated@@521 $generated@@522))
)))
(assert (forall (($generated@@523 T@U) ($generated@@524 T@U) ) (!  (=> (and (= (type $generated@@523) $generated@@66) (= (type $generated@@524) $generated@@66)) (= ($generated@@74 ($generated@@455 $generated@@523 $generated@@524)) $generated@@59))
 :pattern ( ($generated@@455 $generated@@523 $generated@@524))
)))
(assert (forall (($generated@@525 T@U) ($generated@@526 T@U) ) (!  (=> (and (= (type $generated@@525) $generated@@150) (= (type $generated@@526) $generated@@150)) (= ($generated@@297 ($generated@@245 $generated@@525 $generated@@526)) $generated@@61))
 :pattern ( ($generated@@245 $generated@@525 $generated@@526))
)))
(assert (forall (($generated@@528 T@U) ) (! (= (type ($generated@@527 $generated@@528)) $generated@@66)
 :pattern ( ($generated@@527 $generated@@528))
)))
(assert (forall (($generated@@529 T@U) ($generated@@530 T@U) ) (!  (=> (and (= (type $generated@@529) $generated@@66) (= (type $generated@@530) $generated@@66)) (= ($generated@@527 ($generated@@140 $generated@@529 $generated@@530)) $generated@@529))
 :pattern ( ($generated@@140 $generated@@529 $generated@@530))
)))
(assert (forall (($generated@@532 T@U) ) (! (= (type ($generated@@531 $generated@@532)) $generated@@66)
 :pattern ( ($generated@@531 $generated@@532))
)))
(assert (forall (($generated@@533 T@U) ($generated@@534 T@U) ) (!  (=> (and (= (type $generated@@533) $generated@@66) (= (type $generated@@534) $generated@@66)) (= ($generated@@531 ($generated@@140 $generated@@533 $generated@@534)) $generated@@534))
 :pattern ( ($generated@@140 $generated@@533 $generated@@534))
)))
(assert (forall (($generated@@535 T@U) ($generated@@536 T@U) ) (!  (=> (and (= (type $generated@@535) $generated@@150) (= (type $generated@@536) $generated@@150)) (= ($generated@@148 ($generated@@245 $generated@@535 $generated@@536)) $generated@@535))
 :pattern ( ($generated@@245 $generated@@535 $generated@@536))
)))
(assert (forall (($generated@@537 T@U) ($generated@@538 T@U) ) (!  (=> (and (= (type $generated@@537) $generated@@150) (= (type $generated@@538) $generated@@150)) (= ($generated@@149 ($generated@@245 $generated@@537 $generated@@538)) $generated@@538))
 :pattern ( ($generated@@245 $generated@@537 $generated@@538))
)))
(assert (forall (($generated@@539 T@U) ($generated@@540 T@U) ($generated@@541 T@U) ) (!  (=> (and (and (= (type $generated@@539) ($generated@@157 $generated@@150)) (= (type $generated@@540) $generated@@66)) (= (type $generated@@541) ($generated@@78 $generated@@79 $generated@@80))) (= ($generated@@76 $generated@@539 ($generated@@274 $generated@@540) $generated@@541) (forall (($generated@@542 Int) ) (!  (=> (and (<= 0 $generated@@542) (< $generated@@542 ($generated@@158 $generated@@539))) ($generated@@288 ($generated@@279 $generated@@539 $generated@@542) $generated@@540 $generated@@541))
 :pattern ( ($generated@@279 $generated@@539 $generated@@542))
))))
 :pattern ( ($generated@@76 $generated@@539 ($generated@@274 $generated@@540) $generated@@541))
)))
(assert (forall (($generated@@544 Int) ) (! (= ($generated@@543 ($generated@@77 $generated@@544)) $generated@@544)
 :pattern ( ($generated@@77 $generated@@544))
)))
(assert (forall (($generated@@546 T@U) ) (! (= (type ($generated@@545 $generated@@546)) $generated@@66)
 :pattern ( ($generated@@545 $generated@@546))
)))
(assert (forall (($generated@@547 T@U) ) (!  (=> (= (type $generated@@547) $generated@@66) (= ($generated@@545 ($generated@@258 $generated@@547)) $generated@@547))
 :pattern ( ($generated@@258 $generated@@547))
)))
(assert (forall (($generated@@548 T@U) ) (!  (=> (= (type $generated@@548) $generated@@66) (= ($generated@@74 ($generated@@258 $generated@@548)) $generated@@54))
 :pattern ( ($generated@@258 $generated@@548))
)))
(assert (forall (($generated@@550 T@U) ) (! (= (type ($generated@@549 $generated@@550)) $generated@@66)
 :pattern ( ($generated@@549 $generated@@550))
)))
(assert (forall (($generated@@551 T@U) ) (!  (=> (= (type $generated@@551) $generated@@66) (= ($generated@@549 ($generated@@263 $generated@@551)) $generated@@551))
 :pattern ( ($generated@@263 $generated@@551))
)))
(assert (forall (($generated@@552 T@U) ) (!  (=> (= (type $generated@@552) $generated@@66) (= ($generated@@74 ($generated@@263 $generated@@552)) $generated@@55))
 :pattern ( ($generated@@263 $generated@@552))
)))
(assert (forall (($generated@@554 T@U) ) (! (= (type ($generated@@553 $generated@@554)) $generated@@66)
 :pattern ( ($generated@@553 $generated@@554))
)))
(assert (forall (($generated@@555 T@U) ) (!  (=> (= (type $generated@@555) $generated@@66) (= ($generated@@553 ($generated@@172 $generated@@555)) $generated@@555))
 :pattern ( ($generated@@172 $generated@@555))
)))
(assert (forall (($generated@@556 T@U) ) (!  (=> (= (type $generated@@556) $generated@@66) (= ($generated@@74 ($generated@@172 $generated@@556)) $generated@@56))
 :pattern ( ($generated@@172 $generated@@556))
)))
(assert (forall (($generated@@558 T@U) ) (! (= (type ($generated@@557 $generated@@558)) $generated@@66)
 :pattern ( ($generated@@557 $generated@@558))
)))
(assert (forall (($generated@@559 T@U) ) (!  (=> (= (type $generated@@559) $generated@@66) (= ($generated@@557 ($generated@@274 $generated@@559)) $generated@@559))
 :pattern ( ($generated@@274 $generated@@559))
)))
(assert (forall (($generated@@560 T@U) ) (!  (=> (= (type $generated@@560) $generated@@66) (= ($generated@@74 ($generated@@274 $generated@@560)) $generated@@57))
 :pattern ( ($generated@@274 $generated@@560))
)))
(assert (forall (($generated@@561 T@U) ) (! (let (($generated@@562 (type $generated@@561)))
(= ($generated@@378 $generated@@562 ($generated@@321 $generated@@561)) $generated@@561))
 :pattern ( ($generated@@321 $generated@@561))
)))
(assert (forall (($generated@@563 T@U) ($generated@@564 T@U) ($generated@@565 T@U) ) (!  (=> (and (and (= (type $generated@@563) ($generated@@338 $generated@@150 $generated@@150)) (= (type $generated@@564) $generated@@66)) (= (type $generated@@565) $generated@@66)) (= ($generated@@137 $generated@@563 ($generated@@447 $generated@@564 $generated@@565)) (forall (($generated@@566 T@U) ) (!  (=> (and (= (type $generated@@566) $generated@@150) ($generated@@0 ($generated@@83 ($generated@@336 $generated@@563) $generated@@566))) (and ($generated@@246 ($generated@@83 ($generated@@422 $generated@@563) $generated@@566) $generated@@565) ($generated@@246 $generated@@566 $generated@@564)))
 :pattern ( ($generated@@83 ($generated@@422 $generated@@563) $generated@@566))
 :pattern ( ($generated@@83 ($generated@@336 $generated@@563) $generated@@566))
))))
 :pattern ( ($generated@@137 $generated@@563 ($generated@@447 $generated@@564 $generated@@565)))
)))
(assert (forall (($generated@@567 T@U) ($generated@@568 T@U) ($generated@@569 T@U) ) (!  (=> (and (and (= (type $generated@@567) ($generated@@356 $generated@@150 $generated@@150)) (= (type $generated@@568) $generated@@66)) (= (type $generated@@569) $generated@@66)) (= ($generated@@137 $generated@@567 ($generated@@455 $generated@@568 $generated@@569)) (forall (($generated@@570 T@U) ) (!  (=> (and (= (type $generated@@570) $generated@@150) ($generated@@0 ($generated@@83 ($generated@@354 $generated@@567) $generated@@570))) (and ($generated@@246 ($generated@@83 ($generated@@430 $generated@@567) $generated@@570) $generated@@569) ($generated@@246 $generated@@570 $generated@@568)))
 :pattern ( ($generated@@83 ($generated@@430 $generated@@567) $generated@@570))
 :pattern ( ($generated@@83 ($generated@@354 $generated@@567) $generated@@570))
))))
 :pattern ( ($generated@@137 $generated@@567 ($generated@@455 $generated@@568 $generated@@569)))
)))
(assert (forall (($generated@@573 T@U) ($generated@@574 T@U) ) (!  (=> (and (= (type $generated@@573) $generated@@150) (= (type $generated@@574) $generated@@150)) (< ($generated@@571 $generated@@573) ($generated@@572 ($generated@@245 $generated@@573 $generated@@574))))
 :pattern ( ($generated@@245 $generated@@573 $generated@@574))
)))
(assert (forall (($generated@@575 T@U) ($generated@@576 T@U) ) (!  (=> (and (= (type $generated@@575) $generated@@150) (= (type $generated@@576) $generated@@150)) (< ($generated@@571 $generated@@576) ($generated@@572 ($generated@@245 $generated@@575 $generated@@576))))
 :pattern ( ($generated@@245 $generated@@575 $generated@@576))
)))
(assert (forall (($generated@@577 T@U) ($generated@@578 T@U) ($generated@@579 T@U) ) (!  (=> (and (and (and (= (type $generated@@577) $generated@@150) (= (type $generated@@578) $generated@@66)) (= (type $generated@@579) $generated@@66)) ($generated@@246 $generated@@577 ($generated@@447 $generated@@578 $generated@@579))) (and (= ($generated@@321 ($generated@@378 ($generated@@338 $generated@@150 $generated@@150) $generated@@577)) $generated@@577) ($generated@@137 ($generated@@378 ($generated@@338 $generated@@150 $generated@@150) $generated@@577) ($generated@@447 $generated@@578 $generated@@579))))
 :pattern ( ($generated@@246 $generated@@577 ($generated@@447 $generated@@578 $generated@@579)))
)))
(assert (forall (($generated@@580 T@U) ($generated@@581 T@U) ($generated@@582 T@U) ) (!  (=> (and (and (and (= (type $generated@@580) $generated@@150) (= (type $generated@@581) $generated@@66)) (= (type $generated@@582) $generated@@66)) ($generated@@246 $generated@@580 ($generated@@455 $generated@@581 $generated@@582))) (and (= ($generated@@321 ($generated@@378 ($generated@@356 $generated@@150 $generated@@150) $generated@@580)) $generated@@580) ($generated@@137 ($generated@@378 ($generated@@356 $generated@@150 $generated@@150) $generated@@580) ($generated@@455 $generated@@581 $generated@@582))))
 :pattern ( ($generated@@246 $generated@@580 ($generated@@455 $generated@@581 $generated@@582)))
)))
(assert (forall (($generated@@583 T@U) ($generated@@584 T@U) ($generated@@585 T@U) ) (!  (=> (and (and (and (= (type $generated@@583) $generated@@66) (= (type $generated@@584) $generated@@66)) (= (type $generated@@585) $generated@@150)) ($generated@@246 $generated@@585 ($generated@@140 $generated@@583 $generated@@584))) (and (= ($generated@@321 ($generated@@378 $generated@@141 $generated@@585)) $generated@@585) ($generated@@137 ($generated@@378 $generated@@141 $generated@@585) ($generated@@140 $generated@@583 $generated@@584))))
 :pattern ( ($generated@@246 $generated@@585 ($generated@@140 $generated@@583 $generated@@584)))
)))
(assert (forall (($generated@@586 T@U) ) (! (let (($generated@@587 (type $generated@@586)))
 (not ($generated@@0 ($generated@@83 ($generated@@469 $generated@@587) $generated@@586))))
 :pattern ( (let (($generated@@587 (type $generated@@586)))
($generated@@83 ($generated@@469 $generated@@587) $generated@@586)))
)))
(assert (forall (($generated@@589 T@U) ) (! (= (type ($generated@@588 $generated@@589)) $generated@@71)
 :pattern ( ($generated@@588 $generated@@589))
)))
(assert (forall (($generated@@590 T@U) ($generated@@591 T@U) ) (!  (=> (and (= (type $generated@@590) $generated@@66) (= (type $generated@@591) $generated@@66)) (and (= ($generated@@74 ($generated@@140 $generated@@590 $generated@@591)) $generated@@62) (= ($generated@@588 ($generated@@140 $generated@@590 $generated@@591)) $generated@@64)))
 :pattern ( ($generated@@140 $generated@@590 $generated@@591))
)))
(assert  (and (forall (($generated@@594 T@U) ) (! (let (($generated@@595 ($generated@@159 (type $generated@@594))))
(= (type ($generated@@592 $generated@@594)) ($generated@@157 $generated@@595)))
 :pattern ( ($generated@@592 $generated@@594))
)) (forall (($generated@@596 T@U) ) (! (let (($generated@@597 ($generated@@159 (type $generated@@596))))
(= (type ($generated@@593 $generated@@596)) $generated@@597))
 :pattern ( ($generated@@593 $generated@@596))
))))
(assert (forall (($generated@@598 T@U) ($generated@@599 T@U) ) (! (let (($generated@@600 (type $generated@@599)))
 (=> (= (type $generated@@598) ($generated@@157 $generated@@600)) (and (= ($generated@@592 ($generated@@156 $generated@@598 $generated@@599)) $generated@@598) (= ($generated@@593 ($generated@@156 $generated@@598 $generated@@599)) $generated@@599))))
 :pattern ( ($generated@@156 $generated@@598 $generated@@599))
)))
(assert (forall (($generated@@601 T@U) ) (!  (=> (= (type $generated@@601) $generated@@141) (= ($generated@@571 ($generated@@321 $generated@@601)) ($generated@@572 $generated@@601)))
 :pattern ( ($generated@@571 ($generated@@321 $generated@@601)))
)))
(assert (forall (($generated@@602 T@U) ) (!  (=> (and (= (type $generated@@602) $generated@@150) ($generated@@246 $generated@@602 ($generated@@77 0))) (and (= ($generated@@321 ($generated@@378 $generated@@2 $generated@@602)) $generated@@602) ($generated@@137 ($generated@@378 ($generated@@78 $generated@@150 $generated@@4) $generated@@602) ($generated@@77 0))))
 :pattern ( ($generated@@246 $generated@@602 ($generated@@77 0)))
)))
(assert (forall (($generated@@603 T@U) ($generated@@604 T@U) ) (!  (=> (and (and (= (type $generated@@603) $generated@@150) (= (type $generated@@604) $generated@@66)) ($generated@@246 $generated@@603 ($generated@@258 $generated@@604))) (and (= ($generated@@321 ($generated@@378 ($generated@@78 $generated@@150 $generated@@4) $generated@@603)) $generated@@603) ($generated@@137 ($generated@@378 ($generated@@78 $generated@@150 $generated@@4) $generated@@603) ($generated@@258 $generated@@604))))
 :pattern ( ($generated@@246 $generated@@603 ($generated@@258 $generated@@604)))
)))
(assert (forall (($generated@@605 T@U) ($generated@@606 T@U) ) (!  (=> (and (and (= (type $generated@@605) $generated@@150) (= (type $generated@@606) $generated@@66)) ($generated@@246 $generated@@605 ($generated@@263 $generated@@606))) (and (= ($generated@@321 ($generated@@378 ($generated@@78 $generated@@150 $generated@@4) $generated@@605)) $generated@@605) ($generated@@137 ($generated@@378 ($generated@@78 $generated@@150 $generated@@4) $generated@@605) ($generated@@263 $generated@@606))))
 :pattern ( ($generated@@246 $generated@@605 ($generated@@263 $generated@@606)))
)))
(assert (forall (($generated@@607 T@U) ($generated@@608 T@U) ) (!  (=> (and (and (= (type $generated@@607) $generated@@150) (= (type $generated@@608) $generated@@66)) ($generated@@246 $generated@@607 ($generated@@172 $generated@@608))) (and (= ($generated@@321 ($generated@@378 ($generated@@78 $generated@@150 $generated@@2) $generated@@607)) $generated@@607) ($generated@@137 ($generated@@378 ($generated@@78 $generated@@150 $generated@@2) $generated@@607) ($generated@@172 $generated@@608))))
 :pattern ( ($generated@@246 $generated@@607 ($generated@@172 $generated@@608)))
)))
(assert (forall (($generated@@609 T@U) ($generated@@610 T@U) ) (!  (=> (and (and (= (type $generated@@609) $generated@@150) (= (type $generated@@610) $generated@@66)) ($generated@@246 $generated@@609 ($generated@@274 $generated@@610))) (and (= ($generated@@321 ($generated@@378 ($generated@@157 $generated@@150) $generated@@609)) $generated@@609) ($generated@@137 ($generated@@378 ($generated@@157 $generated@@150) $generated@@609) ($generated@@274 $generated@@610))))
 :pattern ( ($generated@@246 $generated@@609 ($generated@@274 $generated@@610)))
)))
(assert (= ($generated@@74 $generated@@134) $generated@@63))
(assert (= ($generated@@588 $generated@@134) $generated@@65))
(assert (forall (($generated@@611 T@U) ($generated@@612 Int) ($generated@@613 Int) ) (! (let (($generated@@614 ($generated@@159 (type $generated@@611))))
 (=> (= (type $generated@@611) ($generated@@157 $generated@@614)) (=> (and (and (<= 0 $generated@@612) (<= $generated@@612 $generated@@613)) (< $generated@@613 ($generated@@158 $generated@@611))) (= ($generated@@279 ($generated@@155 $generated@@611 $generated@@612) (- $generated@@613 $generated@@612)) ($generated@@279 $generated@@611 $generated@@613)))))
 :weight 25
 :pattern ( ($generated@@279 $generated@@611 $generated@@613) ($generated@@155 $generated@@611 $generated@@612))
)))
(assert (forall (($generated@@615 T@U) ($generated@@616 T@U) ($generated@@617 T@U) ) (!  (=> (and (and (= (type $generated@@615) ($generated@@78 $generated@@150 $generated@@2)) (= (type $generated@@616) $generated@@66)) (= (type $generated@@617) ($generated@@78 $generated@@79 $generated@@80))) (= ($generated@@76 $generated@@615 ($generated@@172 $generated@@616) $generated@@617) (forall (($generated@@618 T@U) ) (!  (=> (and (= (type $generated@@618) $generated@@150) (< 0 ($generated ($generated@@83 $generated@@615 $generated@@618)))) ($generated@@288 $generated@@618 $generated@@616 $generated@@617))
 :pattern ( ($generated@@83 $generated@@615 $generated@@618))
))))
 :pattern ( ($generated@@76 $generated@@615 ($generated@@172 $generated@@616) $generated@@617))
)))
(assert (forall (($generated@@619 T@U) ($generated@@620 Int) ($generated@@621 Int) ) (! (let (($generated@@622 ($generated@@159 (type $generated@@619))))
 (=> (= (type $generated@@619) ($generated@@157 $generated@@622)) (=> (and (and (<= 0 $generated@@620) (<= 0 $generated@@621)) (<= (+ $generated@@620 $generated@@621) ($generated@@158 $generated@@619))) (= ($generated@@155 ($generated@@155 $generated@@619 $generated@@620) $generated@@621) ($generated@@155 $generated@@619 (+ $generated@@620 $generated@@621))))))
 :pattern ( ($generated@@155 ($generated@@155 $generated@@619 $generated@@620) $generated@@621))
)))
(assert (forall (($generated@@623 T@U) ($generated@@624 T@U) ($generated@@625 T@U) ) (!  (=> (and (and (and (= (type $generated@@623) $generated@@141) (= (type $generated@@624) $generated@@66)) (= (type $generated@@625) ($generated@@78 $generated@@79 $generated@@80))) (and ($generated@@287 $generated@@625) (and ($generated@@139 $generated@@623) (exists (($generated@@626 T@U) ) (!  (and (= (type $generated@@626) $generated@@66) ($generated@@76 $generated@@623 ($generated@@140 $generated@@624 $generated@@626) $generated@@625))
 :pattern ( ($generated@@76 $generated@@623 ($generated@@140 $generated@@624 $generated@@626) $generated@@625))
))))) ($generated@@288 ($generated@@148 $generated@@623) $generated@@624 $generated@@625))
 :pattern ( ($generated@@288 ($generated@@148 $generated@@623) $generated@@624 $generated@@625))
)))
(assert (forall (($generated@@627 T@U) ($generated@@628 T@U) ($generated@@629 T@U) ) (!  (=> (and (and (and (= (type $generated@@627) $generated@@141) (= (type $generated@@628) $generated@@66)) (= (type $generated@@629) ($generated@@78 $generated@@79 $generated@@80))) (and ($generated@@287 $generated@@629) (and ($generated@@139 $generated@@627) (exists (($generated@@630 T@U) ) (!  (and (= (type $generated@@630) $generated@@66) ($generated@@76 $generated@@627 ($generated@@140 $generated@@630 $generated@@628) $generated@@629))
 :pattern ( ($generated@@76 $generated@@627 ($generated@@140 $generated@@630 $generated@@628) $generated@@629))
))))) ($generated@@288 ($generated@@149 $generated@@627) $generated@@628 $generated@@629))
 :pattern ( ($generated@@288 ($generated@@149 $generated@@627) $generated@@628 $generated@@629))
)))
(assert (forall (($generated@@631 T@U) ($generated@@632 T@U) ($generated@@633 Int) ) (! (let (($generated@@634 ($generated@@159 (type $generated@@631))))
 (=> (and (= (type $generated@@631) ($generated@@157 $generated@@634)) (= (type $generated@@632) ($generated@@157 $generated@@634))) (and (=> (< $generated@@633 ($generated@@158 $generated@@631)) (= ($generated@@279 ($generated@@234 $generated@@631 $generated@@632) $generated@@633) ($generated@@279 $generated@@631 $generated@@633))) (=> (<= ($generated@@158 $generated@@631) $generated@@633) (= ($generated@@279 ($generated@@234 $generated@@631 $generated@@632) $generated@@633) ($generated@@279 $generated@@632 (- $generated@@633 ($generated@@158 $generated@@631))))))))
 :pattern ( ($generated@@279 ($generated@@234 $generated@@631 $generated@@632) $generated@@633))
)))
(assert (forall (($generated@@635 T@U) ) (!  (=> (= (type $generated@@635) $generated@@2) (= ($generated@@137 $generated@@635 $generated@@134)  (and (<= ($generated@@268 0) ($generated $generated@@635)) (< ($generated $generated@@635) 256))))
 :pattern ( ($generated@@137 $generated@@635 $generated@@134))
)))
(assert (forall (($generated@@636 T@U) ($generated@@637 T@U) ) (!  (=> (and (= (type $generated@@636) $generated@@150) (= (type $generated@@637) $generated@@150)) (= ($generated@@245 ($generated@@270 $generated@@636) ($generated@@270 $generated@@637)) ($generated@@270 ($generated@@245 $generated@@636 $generated@@637))))
 :pattern ( ($generated@@245 ($generated@@270 $generated@@636) ($generated@@270 $generated@@637)))
)))
(assert (forall (($generated@@638 Int) ) (! (= ($generated@@321 ($generated@@8 ($generated@@268 $generated@@638))) ($generated@@270 ($generated@@321 ($generated@@8 $generated@@638))))
 :pattern ( ($generated@@321 ($generated@@8 ($generated@@268 $generated@@638))))
)))
(assert (forall (($generated@@639 T@U) ) (! (= ($generated@@321 ($generated@@270 $generated@@639)) ($generated@@270 ($generated@@321 $generated@@639)))
 :pattern ( ($generated@@321 ($generated@@270 $generated@@639)))
)))
(assert (forall (($generated@@640 T@U) ) (! (let (($generated@@641 ($generated@@159 (type $generated@@640))))
 (=> (and (= (type $generated@@640) ($generated@@157 $generated@@641)) (= ($generated@@158 $generated@@640) 0)) (= $generated@@640 ($generated@@312 $generated@@641))))
 :pattern ( ($generated@@158 $generated@@640))
)))
(assert (forall (($generated@@642 T@U) ($generated@@643 Int) ) (! (let (($generated@@644 ($generated@@159 (type $generated@@642))))
 (=> (and (= (type $generated@@642) ($generated@@157 $generated@@644)) (= $generated@@643 0)) (= ($generated@@233 $generated@@642 $generated@@643) ($generated@@312 $generated@@644))))
 :pattern ( ($generated@@233 $generated@@642 $generated@@643))
)))
(assert (forall (($generated@@645 T@U) ($generated@@646 T@U) ($generated@@647 T@U) ) (! (let (($generated@@648 (type $generated@@646)))
 (=> (and (and (= (type $generated@@645) ($generated@@78 $generated@@648 $generated@@2)) (= (type $generated@@647) $generated@@2)) (<= 0 ($generated $generated@@647))) (= ($generated@@330 ($generated@@84 $generated@@645 $generated@@646 $generated@@647)) (+ (- ($generated@@330 $generated@@645) ($generated ($generated@@83 $generated@@645 $generated@@646))) ($generated $generated@@647)))))
 :pattern ( ($generated@@330 ($generated@@84 $generated@@645 $generated@@646 $generated@@647)))
)))
(assert (forall (($generated@@649 T@U) ($generated@@650 T@U) ) (!  (=> (and (= (type $generated@@649) ($generated@@78 $generated@@79 $generated@@80)) (= (type $generated@@650) $generated@@2)) ($generated@@76 $generated@@650 $generated@@46 $generated@@649))
 :pattern ( ($generated@@76 $generated@@650 $generated@@46 $generated@@649))
)))
(assert (forall (($generated@@651 T@U) ($generated@@652 T@U) ) (!  (=> (and (= (type $generated@@651) ($generated@@78 $generated@@79 $generated@@80)) (= (type $generated@@652) $generated@@3)) ($generated@@76 $generated@@652 $generated@@47 $generated@@651))
 :pattern ( ($generated@@76 $generated@@652 $generated@@47 $generated@@651))
)))
(assert (forall (($generated@@653 T@U) ($generated@@654 T@U) ) (!  (=> (and (= (type $generated@@653) ($generated@@78 $generated@@79 $generated@@80)) (= (type $generated@@654) $generated@@4)) ($generated@@76 $generated@@654 $generated@@44 $generated@@653))
 :pattern ( ($generated@@76 $generated@@654 $generated@@44 $generated@@653))
)))
(assert (forall (($generated@@655 T@U) ($generated@@656 T@U) ) (!  (=> (and (= (type $generated@@655) ($generated@@78 $generated@@79 $generated@@80)) (= (type $generated@@656) $generated@@493)) ($generated@@76 $generated@@656 $generated@@45 $generated@@655))
 :pattern ( ($generated@@76 $generated@@656 $generated@@45 $generated@@655))
)))
(assert (forall (($generated@@657 T@U) ($generated@@658 T@U) ) (!  (=> (and (= (type $generated@@657) ($generated@@78 $generated@@79 $generated@@80)) (= (type $generated@@658) $generated@@150)) ($generated@@76 $generated@@658 $generated@@48 $generated@@657))
 :pattern ( ($generated@@76 $generated@@658 $generated@@48 $generated@@657))
)))
(assert (forall (($generated@@659 T@U) ($generated@@660 T@U) ) (!  (=> (and (= (type $generated@@659) ($generated@@157 $generated@@150)) (= (type $generated@@660) $generated@@66)) (= ($generated@@137 $generated@@659 ($generated@@274 $generated@@660)) (forall (($generated@@661 Int) ) (!  (=> (and (<= 0 $generated@@661) (< $generated@@661 ($generated@@158 $generated@@659))) ($generated@@246 ($generated@@279 $generated@@659 $generated@@661) $generated@@660))
 :pattern ( ($generated@@279 $generated@@659 $generated@@661))
))))
 :pattern ( ($generated@@137 $generated@@659 ($generated@@274 $generated@@660)))
)))
(assert (forall (($generated@@662 T@U) ($generated@@663 Int) ) (!  (=> (= (type $generated@@662) ($generated@@157 $generated@@150)) (=> (and (<= 0 $generated@@663) (< $generated@@663 ($generated@@158 $generated@@662))) (< ($generated@@572 ($generated@@378 $generated@@141 ($generated@@279 $generated@@662 $generated@@663))) ($generated@@305 $generated@@662))))
 :pattern ( ($generated@@572 ($generated@@378 $generated@@141 ($generated@@279 $generated@@662 $generated@@663))))
)))
(assert (forall (($generated@@664 T@U) ($generated@@665 T@U) ($generated@@666 T@U) ) (!  (=> (and (and (and (= (type $generated@@664) ($generated@@338 $generated@@150 $generated@@150)) (= (type $generated@@665) $generated@@66)) (= (type $generated@@666) $generated@@66)) ($generated@@137 $generated@@664 ($generated@@447 $generated@@665 $generated@@666))) (and (and ($generated@@137 ($generated@@336 $generated@@664) ($generated@@258 $generated@@665)) ($generated@@137 ($generated@@390 $generated@@664) ($generated@@258 $generated@@666))) ($generated@@137 ($generated@@421 $generated@@664) ($generated@@258 ($generated@@140 $generated@@665 $generated@@666)))))
 :pattern ( ($generated@@137 $generated@@664 ($generated@@447 $generated@@665 $generated@@666)))
)))
(assert (forall (($generated@@667 T@U) ($generated@@668 T@U) ($generated@@669 T@U) ) (!  (=> (and (and (and (= (type $generated@@667) ($generated@@356 $generated@@150 $generated@@150)) (= (type $generated@@668) $generated@@66)) (= (type $generated@@669) $generated@@66)) ($generated@@137 $generated@@667 ($generated@@455 $generated@@668 $generated@@669))) (and (and ($generated@@137 ($generated@@354 $generated@@667) ($generated@@263 $generated@@668)) ($generated@@137 ($generated@@401 $generated@@667) ($generated@@263 $generated@@669))) ($generated@@137 ($generated@@429 $generated@@667) ($generated@@263 ($generated@@140 $generated@@668 $generated@@669)))))
 :pattern ( ($generated@@137 $generated@@667 ($generated@@455 $generated@@668 $generated@@669)))
)))
(assert (forall (($generated@@670 T@U) ) (!  (=> (= (type $generated@@670) $generated@@2) ($generated@@137 $generated@@670 $generated@@46))
 :pattern ( ($generated@@137 $generated@@670 $generated@@46))
)))
(assert (forall (($generated@@671 T@U) ) (!  (=> (= (type $generated@@671) $generated@@3) ($generated@@137 $generated@@671 $generated@@47))
 :pattern ( ($generated@@137 $generated@@671 $generated@@47))
)))
(assert (forall (($generated@@672 T@U) ) (!  (=> (= (type $generated@@672) $generated@@4) ($generated@@137 $generated@@672 $generated@@44))
 :pattern ( ($generated@@137 $generated@@672 $generated@@44))
)))
(assert (forall (($generated@@673 T@U) ) (!  (=> (= (type $generated@@673) $generated@@493) ($generated@@137 $generated@@673 $generated@@45))
 :pattern ( ($generated@@137 $generated@@673 $generated@@45))
)))
(assert (forall (($generated@@674 T@U) ) (!  (=> (= (type $generated@@674) $generated@@150) ($generated@@137 $generated@@674 $generated@@48))
 :pattern ( ($generated@@137 $generated@@674 $generated@@48))
)))
(push 1)
(declare-fun ControlFlow (Int Int) Int)
(declare-fun $generated@@675 () T@U)
(declare-fun $generated@@676 () T@U)
(declare-fun $generated@@677 () T@U)
(declare-fun $generated@@678 () T@U)
(declare-fun $generated@@679 () T@U)
(declare-fun $generated@@680 (T@U) Bool)
(declare-fun $generated@@681 () Int)
(assert  (and (and (and (and (= (type $generated@@675) ($generated@@179 $generated@@79 $generated@@4)) (= (type $generated@@676) $generated@@79)) (= (type $generated@@677) ($generated@@78 $generated@@79 $generated@@80))) (= (type $generated@@678) ($generated@@157 $generated@@150))) (= (type $generated@@679) ($generated@@78 $generated@@79 $generated@@80))))
(set-option :timeout 0)
(set-option :rlimit 0)
(assert (not
 (=> (= (ControlFlow 0 0) 7) (let (($generated@@682  (=> (and (= $generated@@675 ($generated@@178 $generated@@676 $generated@@677 $generated@@60 false)) (> ($generated@@158 $generated@@678) 25)) (=> (and (and ($generated@@287 $generated@@679) ($generated@@680 $generated@@679)) (= $generated@@677 $generated@@679)) (and (=> (= (ControlFlow 0 2) (- 0 6)) (and (<= 0 ($generated@@268 0)) (<= ($generated@@268 0) ($generated@@158 $generated@@678)))) (=> (and (<= 0 ($generated@@268 0)) (<= ($generated@@268 0) ($generated@@158 $generated@@678))) (and (=> (= (ControlFlow 0 2) (- 0 5)) (and (<= ($generated@@268 0) ($generated@@268 25)) (<= ($generated@@268 25) ($generated@@158 $generated@@678)))) (=> (and (<= ($generated@@268 0) ($generated@@268 25)) (<= ($generated@@268 25) ($generated@@158 $generated@@678))) (and (=> (= (ControlFlow 0 2) (- 0 4)) (and (<= 0 ($generated@@268 0)) (< ($generated@@268 0) ($generated@@158 $generated@@678)))) (=> (and (<= 0 ($generated@@268 0)) (< ($generated@@268 0) ($generated@@158 $generated@@678))) (and (=> (= (ControlFlow 0 2) (- 0 3)) (and (<= 0 ($generated@@268 1)) (<= ($generated@@268 1) ($generated@@158 $generated@@678)))) (=> (and (<= 0 ($generated@@268 1)) (<= ($generated@@268 1) ($generated@@158 $generated@@678))) (=> (= (ControlFlow 0 2) (- 0 1)) (and (<= ($generated@@268 1) ($generated@@268 25)) (<= ($generated@@268 25) ($generated@@158 $generated@@678))))))))))))))))
(let (($generated@@683  (=> (and ($generated@@287 $generated@@677) ($generated@@680 $generated@@677)) (=> (and (and ($generated@@137 $generated@@678 ($generated@@274 $generated@@134)) ($generated@@76 $generated@@678 ($generated@@274 $generated@@134) $generated@@677)) (and (= 1 $generated@@681) (= (ControlFlow 0 7) 2))) $generated@@682))))
$generated@@683)))
))
(check-sat)
(pop 1)
; Valid
(get-info :rlimit)
(reset)
(set-option :rlimit 0)
; did a full reset
(reset)
(set-option :print-success false)
(set-info :smt-lib-version 2.6)
(set-option :auto_config false)
(set-option :type_check true)
(set-option :smt.case_split 3)
(set-option :smt.qi.eager_threshold 100)
(set-option :smt.delay_units true)
(set-option :smt.arith.solver 2)
(set-option :smt.mbqi false)
(set-option :model.compact false)
(set-option :model.v2 true)
(set-option :pp.bv_literals false)
; done setting options


(set-info :category "industrial")
(declare-sort |T@U| 0)
(declare-sort |T@T| 0)
(declare-fun real_pow (Real Real) Real)
(declare-fun UOrdering2 (|T@U| |T@U|) Bool)
(declare-fun UOrdering3 (|T@T| |T@U| |T@U|) Bool)
(declare-fun tickleBool (Bool) Bool)
(assert (and (tickleBool true) (tickleBool false)))
(declare-fun $generated (T@U) Int)
(declare-fun $generated@@0 (T@U) Bool)
(declare-fun $generated@@1 (T@T) Int)
(declare-fun $generated@@2 () T@T)
(declare-fun $generated@@3 () T@T)
(declare-fun $generated@@4 () T@T)
(declare-fun $generated@@5 () T@T)
(declare-fun $generated@@6 () T@T)
(declare-fun $generated@@7 () T@T)
(declare-fun $generated@@8 (Int) T@U)
(declare-fun type (T@U) T@T)
(declare-fun $generated@@9 (Real) T@U)
(declare-fun $generated@@10 (T@U) Real)
(declare-fun $generated@@11 (Bool) T@U)
(declare-fun $generated@@12 (RoundingMode) T@U)
(declare-fun $generated@@13 (T@U) RoundingMode)
(declare-fun $generated@@14 (String) T@U)
(declare-fun $generated@@15 (T@U) String)
(declare-fun $generated@@16 ((RegEx String)) T@U)
(declare-fun $generated@@17 (T@U) (RegEx String))
(declare-fun $generated@@44 () T@U)
(declare-fun $generated@@45 () T@U)
(declare-fun $generated@@46 () T@U)
(declare-fun $generated@@47 () T@U)
(declare-fun $generated@@48 () T@U)
(declare-fun $generated@@49 () T@U)
(declare-fun $generated@@50 () T@U)
(declare-fun $generated@@51 () T@U)
(declare-fun $generated@@52 () T@U)
(declare-fun $generated@@53 () T@U)
(declare-fun $generated@@54 () T@U)
(declare-fun $generated@@55 () T@U)
(declare-fun $generated@@56 () T@U)
(declare-fun $generated@@57 () T@U)
(declare-fun $generated@@58 () T@U)
(declare-fun $generated@@59 () T@U)
(declare-fun $generated@@60 () T@U)
(declare-fun $generated@@61 () T@U)
(declare-fun $generated@@62 () T@U)
(declare-fun $generated@@63 () T@U)
(declare-fun $generated@@64 () T@U)
(declare-fun $generated@@65 () T@U)
(declare-fun $generated@@66 () T@T)
(declare-fun $generated@@67 () T@T)
(declare-fun $generated@@68 (T@T) T@T)
(declare-fun $generated@@69 (T@T) T@T)
(declare-fun $generated@@70 () T@T)
(declare-fun $generated@@71 () T@T)
(declare-fun $generated@@74 (T@U) T@U)
(declare-fun $generated@@76 (T@U T@U T@U) Bool)
(declare-fun $generated@@77 (Int) T@U)
(declare-fun $generated@@78 (T@T T@T) T@T)
(declare-fun $generated@@79 () T@T)
(declare-fun $generated@@80 () T@T)
(declare-fun $generated@@81 (T@T) T@T)
(declare-fun $generated@@82 (T@T) T@T)
(declare-fun $generated@@83 (T@U T@U) T@U)
(declare-fun $generated@@84 (T@U T@U T@U) T@U)
(declare-fun $generated@@85 (T@U T@U) T@U)
(declare-fun $generated@@86 (T@U T@U T@U) T@U)
(declare-fun $generated@@134 () T@U)
(declare-fun $generated@@137 (T@U T@U) Bool)
(declare-fun $generated@@139 (T@U) Bool)
(declare-fun $generated@@140 (T@U T@U) T@U)
(declare-fun $generated@@141 () T@T)
(declare-fun $generated@@147 (T@U T@U) Bool)
(declare-fun $generated@@148 (T@U) T@U)
(declare-fun $generated@@149 (T@U) T@U)
(declare-fun $generated@@150 () T@T)
(declare-fun $generated@@155 (T@U Int) T@U)
(declare-fun $generated@@156 (T@U T@U) T@U)
(declare-fun $generated@@157 (T@T) T@T)
(declare-fun $generated@@158 (T@U) Int)
(declare-fun $generated@@159 (T@T) T@T)
(declare-fun $generated@@172 (T@U) T@U)
(declare-fun $generated@@173 (T@U) Bool)
(declare-fun $generated@@177 (T@U T@U T@U) T@U)
(declare-fun $generated@@178 (T@U T@U T@U Bool) T@U)
(declare-fun $generated@@179 (T@T T@T) T@T)
(declare-fun $generated@@180 (T@T) T@T)
(declare-fun $generated@@181 (T@T) T@T)
(declare-fun $generated@@182 (T@U T@U T@U T@U) T@U)
(declare-fun $generated@@233 (T@U Int) T@U)
(declare-fun $generated@@234 (T@U T@U) T@U)
(declare-fun $generated@@245 (T@U T@U) T@U)
(declare-fun $generated@@246 (T@U T@U) Bool)
(declare-fun $generated@@258 (T@U) T@U)
(declare-fun $generated@@263 (T@U) T@U)
(declare-fun $generated@@268 (Int) Int)
(declare-fun $generated@@270 (T@U) T@U)
(declare-fun $generated@@274 (T@U) T@U)
(declare-fun $generated@@279 (T@U Int) T@U)
(declare-fun $generated@@287 (T@U) Bool)
(declare-fun $generated@@288 (T@U T@U T@U) Bool)
(declare-fun $generated@@297 (T@U) T@U)
(declare-fun $generated@@300 (T@U T@U) Bool)
(declare-fun $generated@@305 (T@U) Int)
(declare-fun $generated@@312 (T@T) T@U)
(declare-fun $generated@@321 (T@U) T@U)
(declare-fun $generated@@330 (T@U) Int)
(declare-fun $generated@@331 (T@T) T@U)
(declare-fun $generated@@336 (T@U) T@U)
(declare-fun $generated@@337 (T@T T@T) T@U)
(declare-fun $generated@@338 (T@T T@T) T@T)
(declare-fun $generated@@339 (T@T) T@T)
(declare-fun $generated@@340 (T@T) T@T)
(declare-fun $generated@@354 (T@U) T@U)
(declare-fun $generated@@355 (T@T T@T) T@U)
(declare-fun $generated@@356 (T@T T@T) T@T)
(declare-fun $generated@@357 (T@T) T@T)
(declare-fun $generated@@358 (T@T) T@T)
(declare-fun $generated@@378 (T@T T@U) T@U)
(declare-fun $generated@@390 (T@U) T@U)
(declare-fun $generated@@401 (T@U) T@U)
(declare-fun $generated@@421 (T@U) T@U)
(declare-fun $generated@@422 (T@U) T@U)
(declare-fun $generated@@429 (T@U) T@U)
(declare-fun $generated@@430 (T@U) T@U)
(declare-fun $generated@@447 (T@U T@U) T@U)
(declare-fun $generated@@455 (T@U T@U) T@U)
(declare-fun $generated@@469 (T@T) T@U)
(declare-fun $generated@@493 () T@T)
(declare-fun $generated@@505 (T@U) T@U)
(declare-fun $generated@@509 (T@U) T@U)
(declare-fun $generated@@515 (T@U) T@U)
(declare-fun $generated@@519 (T@U) T@U)
(declare-fun $generated@@527 (T@U) T@U)
(declare-fun $generated@@531 (T@U) T@U)
(declare-fun $generated@@543 (T@U) Int)
(declare-fun $generated@@545 (T@U) T@U)
(declare-fun $generated@@549 (T@U) T@U)
(declare-fun $generated@@553 (T@U) T@U)
(declare-fun $generated@@557 (T@U) T@U)
(declare-fun $generated@@571 (T@U) Int)
(declare-fun $generated@@572 (T@U) Int)
(declare-fun $generated@@588 (T@U) T@U)
(declare-fun $generated@@592 (T@U) T@U)
(declare-fun $generated@@593 (T@U) T@U)
(assert  (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (= ($generated@@1 $generated@@2) 0) (= ($generated@@1 $generated@@3) 1)) (= ($generated@@1 $generated@@4) 2)) (= ($generated@@1 $generated@@5) 3)) (= ($generated@@1 $generated@@6) 4)) (= ($generated@@1 $generated@@7) 5)) (forall (($generated@@18 Int) ) (! (= ($generated ($generated@@8 $generated@@18)) $generated@@18)
 :pattern ( ($generated@@8 $generated@@18))
))) (forall (($generated@@19 T@U) ) (!  (=> (= (type $generated@@19) $generated@@2) (= ($generated@@8 ($generated $generated@@19)) $generated@@19))
 :pattern ( ($generated $generated@@19))
))) (forall (($generated@@20 Int) ) (! (= (type ($generated@@8 $generated@@20)) $generated@@2)
 :pattern ( ($generated@@8 $generated@@20))
))) (forall (($generated@@21 Real) ) (! (= ($generated@@10 ($generated@@9 $generated@@21)) $generated@@21)
 :pattern ( ($generated@@9 $generated@@21))
))) (forall (($generated@@22 T@U) ) (!  (=> (= (type $generated@@22) $generated@@3) (= ($generated@@9 ($generated@@10 $generated@@22)) $generated@@22))
 :pattern ( ($generated@@10 $generated@@22))
))) (forall (($generated@@23 Real) ) (! (= (type ($generated@@9 $generated@@23)) $generated@@3)
 :pattern ( ($generated@@9 $generated@@23))
))) (forall (($generated@@24 Bool) ) (! (= ($generated@@0 ($generated@@11 $generated@@24)) $generated@@24)
 :pattern ( ($generated@@11 $generated@@24))
))) (forall (($generated@@25 T@U) ) (!  (=> (= (type $generated@@25) $generated@@4) (= ($generated@@11 ($generated@@0 $generated@@25)) $generated@@25))
 :pattern ( ($generated@@0 $generated@@25))
))) (forall (($generated@@26 Bool) ) (! (= (type ($generated@@11 $generated@@26)) $generated@@4)
 :pattern ( ($generated@@11 $generated@@26))
))) (forall (($generated@@27 RoundingMode) ) (! (= ($generated@@13 ($generated@@12 $generated@@27)) $generated@@27)
 :pattern ( ($generated@@12 $generated@@27))
))) (forall (($generated@@28 T@U) ) (!  (=> (= (type $generated@@28) $generated@@5) (= ($generated@@12 ($generated@@13 $generated@@28)) $generated@@28))
 :pattern ( ($generated@@13 $generated@@28))
))) (forall (($generated@@29 RoundingMode) ) (! (= (type ($generated@@12 $generated@@29)) $generated@@5)
 :pattern ( ($generated@@12 $generated@@29))
))) (forall (($generated@@30 String) ) (! (= ($generated@@15 ($generated@@14 $generated@@30)) $generated@@30)
 :pattern ( ($generated@@14 $generated@@30))
))) (forall (($generated@@31 T@U) ) (!  (=> (= (type $generated@@31) $generated@@6) (= ($generated@@14 ($generated@@15 $generated@@31)) $generated@@31))
 :pattern ( ($generated@@15 $generated@@31))
))) (forall (($generated@@32 String) ) (! (= (type ($generated@@14 $generated@@32)) $generated@@6)
 :pattern ( ($generated@@14 $generated@@32))
))) (forall (($generated@@33 (RegEx String)) ) (! (= ($generated@@17 ($generated@@16 $generated@@33)) $generated@@33)
 :pattern ( ($generated@@16 $generated@@33))
))) (forall (($generated@@34 T@U) ) (!  (=> (= (type $generated@@34) $generated@@7) (= ($generated@@16 ($generated@@17 $generated@@34)) $generated@@34))
 :pattern ( ($generated@@17 $generated@@34))
))) (forall (($generated@@35 (RegEx String)) ) (! (= (type ($generated@@16 $generated@@35)) $generated@@7)
 :pattern ( ($generated@@16 $generated@@35))
))))
(assert (forall (($generated@@36 T@U) ) (! (UOrdering2 $generated@@36 $generated@@36)
 :no-pattern ($generated $generated@@36)
 :no-pattern ($generated@@0 $generated@@36)
)))
(assert (forall (($generated@@37 T@U) ($generated@@38 T@U) ($generated@@39 T@U) ) (! (let (($generated@@40 (type $generated@@37)))
 (=> (and (and (= (type $generated@@38) $generated@@40) (= (type $generated@@39) $generated@@40)) (and (UOrdering2 $generated@@37 $generated@@38) (UOrdering2 $generated@@38 $generated@@39))) (UOrdering2 $generated@@37 $generated@@39)))
 :pattern ( (UOrdering2 $generated@@37 $generated@@38) (UOrdering2 $generated@@38 $generated@@39))
)))
(assert (forall (($generated@@41 T@U) ($generated@@42 T@U) ) (! (let (($generated@@43 (type $generated@@41)))
 (=> (= (type $generated@@42) $generated@@43) (=> (and (UOrdering2 $generated@@41 $generated@@42) (UOrdering2 $generated@@42 $generated@@41)) (= $generated@@41 $generated@@42))))
 :pattern ( (UOrdering2 $generated@@41 $generated@@42) (UOrdering2 $generated@@42 $generated@@41))
)))
(assert  (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (= ($generated@@1 $generated@@66) 6) (= (type $generated@@44) $generated@@66)) (= (type $generated@@45) $generated@@66)) (= (type $generated@@46) $generated@@66)) (= (type $generated@@47) $generated@@66)) (= (type $generated@@48) $generated@@66)) (= ($generated@@1 $generated@@67) 7)) (= (type $generated@@49) $generated@@67)) (= (type $generated@@50) $generated@@67)) (= (type $generated@@51) $generated@@67)) (= (type $generated@@52) $generated@@67)) (= (type $generated@@53) $generated@@67)) (= (type $generated@@54) $generated@@67)) (= (type $generated@@55) $generated@@67)) (= (type $generated@@56) $generated@@67)) (= (type $generated@@57) $generated@@67)) (= (type $generated@@58) $generated@@67)) (= (type $generated@@59) $generated@@67)) (forall (($generated@@72 T@T) ) (= ($generated@@1 ($generated@@68 $generated@@72)) 8))) (forall (($generated@@73 T@T) ) (! (= ($generated@@69 ($generated@@68 $generated@@73)) $generated@@73)
 :pattern ( ($generated@@68 $generated@@73))
))) (= (type $generated@@60) ($generated@@68 $generated@@4))) (= ($generated@@1 $generated@@70) 9)) (= (type $generated@@61) $generated@@70)) (= (type $generated@@62) $generated@@67)) (= (type $generated@@63) $generated@@67)) (= ($generated@@1 $generated@@71) 10)) (= (type $generated@@64) $generated@@71)) (= (type $generated@@65) $generated@@71)))
(assert (distinct $generated@@44 $generated@@45 $generated@@46 $generated@@47 $generated@@48 $generated@@49 $generated@@50 $generated@@51 $generated@@52 $generated@@53 $generated@@54 $generated@@55 $generated@@56 $generated@@57 $generated@@58 $generated@@59 $generated@@60 $generated@@61 $generated@@62 $generated@@63 $generated@@64 $generated@@65)
)
(assert (forall (($generated@@75 T@U) ) (! (= (type ($generated@@74 $generated@@75)) $generated@@67)
 :pattern ( ($generated@@74 $generated@@75))
)))
(assert (= ($generated@@74 $generated@@44) $generated@@49))
(assert (= ($generated@@74 $generated@@45) $generated@@50))
(assert (= ($generated@@74 $generated@@46) $generated@@51))
(assert (= ($generated@@74 $generated@@47) $generated@@52))
(assert (= ($generated@@74 $generated@@48) $generated@@53))
(assert  (and (and (and (and (and (and (and (and (and (and (and (and (and (forall (($generated@@87 T@T) ($generated@@88 T@T) ) (= ($generated@@1 ($generated@@78 $generated@@87 $generated@@88)) 11)) (forall (($generated@@89 T@T) ($generated@@90 T@T) ) (! (= ($generated@@81 ($generated@@78 $generated@@89 $generated@@90)) $generated@@89)
 :pattern ( ($generated@@78 $generated@@89 $generated@@90))
))) (forall (($generated@@91 T@T) ($generated@@92 T@T) ) (! (= ($generated@@82 ($generated@@78 $generated@@91 $generated@@92)) $generated@@92)
 :pattern ( ($generated@@78 $generated@@91 $generated@@92))
))) (forall (($generated@@93 T@U) ($generated@@94 T@U) ) (! (let (($generated@@95 ($generated@@82 (type $generated@@93))))
(= (type ($generated@@83 $generated@@93 $generated@@94)) $generated@@95))
 :pattern ( ($generated@@83 $generated@@93 $generated@@94))
))) (forall (($generated@@96 T@U) ($generated@@97 T@U) ($generated@@98 T@U) ) (! (let (($generated@@99 (type $generated@@98)))
(let (($generated@@100 (type $generated@@97)))
(= (type ($generated@@84 $generated@@96 $generated@@97 $generated@@98)) ($generated@@78 $generated@@100 $generated@@99))))
 :pattern ( ($generated@@84 $generated@@96 $generated@@97 $generated@@98))
))) (forall (($generated@@101 T@U) ($generated@@102 T@U) ($generated@@103 T@U) ) (! (let (($generated@@104 ($generated@@82 (type $generated@@101))))
 (=> (= (type $generated@@103) $generated@@104) (= ($generated@@83 ($generated@@84 $generated@@101 $generated@@102 $generated@@103) $generated@@102) $generated@@103)))
 :weight 0
))) (and (forall (($generated@@105 T@U) ($generated@@106 T@U) ($generated@@107 T@U) ($generated@@108 T@U) ) (!  (or (= $generated@@107 $generated@@108) (= ($generated@@83 ($generated@@84 $generated@@106 $generated@@107 $generated@@105) $generated@@108) ($generated@@83 $generated@@106 $generated@@108)))
 :weight 0
)) (forall (($generated@@109 T@U) ($generated@@110 T@U) ($generated@@111 T@U) ($generated@@112 T@U) ) (!  (or true (= ($generated@@83 ($generated@@84 $generated@@110 $generated@@111 $generated@@109) $generated@@112) ($generated@@83 $generated@@110 $generated@@112)))
 :weight 0
)))) (= ($generated@@1 $generated@@79) 12)) (forall (($generated@@113 T@U) ($generated@@114 T@U) ) (! (let (($generated@@115 ($generated@@69 (type $generated@@114))))
(= (type ($generated@@85 $generated@@113 $generated@@114)) $generated@@115))
 :pattern ( ($generated@@85 $generated@@113 $generated@@114))
))) (= ($generated@@1 $generated@@80) 13)) (forall (($generated@@116 T@U) ($generated@@117 T@U) ($generated@@118 T@U) ) (! (= (type ($generated@@86 $generated@@116 $generated@@117 $generated@@118)) $generated@@80)
 :pattern ( ($generated@@86 $generated@@116 $generated@@117 $generated@@118))
))) (forall (($generated@@119 T@U) ($generated@@120 T@U) ($generated@@121 T@U) ) (! (let (($generated@@122 ($generated@@69 (type $generated@@120))))
 (=> (= (type $generated@@121) $generated@@122) (= ($generated@@85 ($generated@@86 $generated@@119 $generated@@120 $generated@@121) $generated@@120) $generated@@121)))
 :weight 0
))) (and (forall (($generated@@123 T@U) ($generated@@124 T@U) ($generated@@125 T@U) ($generated@@126 T@U) ) (!  (or (= $generated@@125 $generated@@126) (= ($generated@@85 ($generated@@86 $generated@@124 $generated@@125 $generated@@123) $generated@@126) ($generated@@85 $generated@@124 $generated@@126)))
 :weight 0
)) (forall (($generated@@127 T@U) ($generated@@128 T@U) ($generated@@129 T@U) ($generated@@130 T@U) ) (!  (or true (= ($generated@@85 ($generated@@86 $generated@@128 $generated@@129 $generated@@127) $generated@@130) ($generated@@85 $generated@@128 $generated@@130)))
 :weight 0
)))) (forall (($generated@@131 Int) ) (! (= (type ($generated@@77 $generated@@131)) $generated@@66)
 :pattern ( ($generated@@77 $generated@@131))
))))
(assert (forall (($generated@@132 T@U) ($generated@@133 T@U) ) (!  (=> (and (= (type $generated@@132) $generated@@2) (= (type $generated@@133) ($generated@@78 $generated@@79 $generated@@80))) ($generated@@76 $generated@@132 ($generated@@77 0) $generated@@133))
 :pattern ( ($generated@@76 $generated@@132 ($generated@@77 0) $generated@@133))
)))
(assert (= (type $generated@@134) $generated@@66))
(assert (forall (($generated@@135 T@U) ($generated@@136 T@U) ) (!  (=> (and (= (type $generated@@135) $generated@@2) (= (type $generated@@136) ($generated@@78 $generated@@79 $generated@@80))) ($generated@@76 $generated@@135 $generated@@134 $generated@@136))
 :pattern ( ($generated@@76 $generated@@135 $generated@@134 $generated@@136))
)))
(assert (forall (($generated@@138 T@U) ) (!  (=> (= (type $generated@@138) $generated@@2) ($generated@@137 $generated@@138 ($generated@@77 0)))
 :pattern ( ($generated@@137 $generated@@138 ($generated@@77 0)))
)))
(assert  (and (= ($generated@@1 $generated@@141) 14) (forall (($generated@@142 T@U) ($generated@@143 T@U) ) (! (= (type ($generated@@140 $generated@@142 $generated@@143)) $generated@@66)
 :pattern ( ($generated@@140 $generated@@142 $generated@@143))
))))
(assert (forall (($generated@@144 T@U) ($generated@@145 T@U) ($generated@@146 T@U) ) (!  (=> (and (and (and (= (type $generated@@144) $generated@@66) (= (type $generated@@145) $generated@@66)) (= (type $generated@@146) $generated@@141)) ($generated@@137 $generated@@146 ($generated@@140 $generated@@144 $generated@@145))) ($generated@@139 $generated@@146))
 :pattern ( ($generated@@139 $generated@@146) ($generated@@137 $generated@@146 ($generated@@140 $generated@@144 $generated@@145)))
)))
(assert  (and (and (= ($generated@@1 $generated@@150) 15) (forall (($generated@@151 T@U) ) (! (= (type ($generated@@148 $generated@@151)) $generated@@150)
 :pattern ( ($generated@@148 $generated@@151))
))) (forall (($generated@@152 T@U) ) (! (= (type ($generated@@149 $generated@@152)) $generated@@150)
 :pattern ( ($generated@@149 $generated@@152))
))))
(assert (forall (($generated@@153 T@U) ($generated@@154 T@U) ) (!  (=> (and (and (= (type $generated@@153) $generated@@141) (= (type $generated@@154) $generated@@141)) true) (= ($generated@@147 $generated@@153 $generated@@154)  (and (= ($generated@@148 $generated@@153) ($generated@@148 $generated@@154)) (= ($generated@@149 $generated@@153) ($generated@@149 $generated@@154)))))
 :pattern ( ($generated@@147 $generated@@153 $generated@@154))
)))
(assert  (and (and (and (forall (($generated@@160 T@T) ) (= ($generated@@1 ($generated@@157 $generated@@160)) 16)) (forall (($generated@@161 T@T) ) (! (= ($generated@@159 ($generated@@157 $generated@@161)) $generated@@161)
 :pattern ( ($generated@@157 $generated@@161))
))) (forall (($generated@@162 T@U) ($generated@@163 Int) ) (! (let (($generated@@164 ($generated@@159 (type $generated@@162))))
(= (type ($generated@@155 $generated@@162 $generated@@163)) ($generated@@157 $generated@@164)))
 :pattern ( ($generated@@155 $generated@@162 $generated@@163))
))) (forall (($generated@@165 T@U) ($generated@@166 T@U) ) (! (let (($generated@@167 (type $generated@@166)))
(= (type ($generated@@156 $generated@@165 $generated@@166)) ($generated@@157 $generated@@167)))
 :pattern ( ($generated@@156 $generated@@165 $generated@@166))
))))
(assert (forall (($generated@@168 T@U) ($generated@@169 T@U) ($generated@@170 Int) ) (! (let (($generated@@171 (type $generated@@169)))
 (=> (= (type $generated@@168) ($generated@@157 $generated@@171)) (=> (and (<= 0 $generated@@170) (<= $generated@@170 ($generated@@158 $generated@@168))) (= ($generated@@155 ($generated@@156 $generated@@168 $generated@@169) $generated@@170) ($generated@@156 ($generated@@155 $generated@@168 $generated@@170) $generated@@169)))))
 :pattern ( ($generated@@155 ($generated@@156 $generated@@168 $generated@@169) $generated@@170))
)))
(assert (forall (($generated@@174 T@U) ) (! (= (type ($generated@@172 $generated@@174)) $generated@@66)
 :pattern ( ($generated@@172 $generated@@174))
)))
(assert (forall (($generated@@175 T@U) ($generated@@176 T@U) ) (!  (=> (and (and (= (type $generated@@175) ($generated@@78 $generated@@150 $generated@@2)) (= (type $generated@@176) $generated@@66)) ($generated@@137 $generated@@175 ($generated@@172 $generated@@176))) ($generated@@173 $generated@@175))
 :pattern ( ($generated@@137 $generated@@175 ($generated@@172 $generated@@176)))
)))
(assert  (and (and (and (and (and (and (and (forall (($generated@@183 T@T) ($generated@@184 T@T) ) (= ($generated@@1 ($generated@@179 $generated@@183 $generated@@184)) 17)) (forall (($generated@@185 T@T) ($generated@@186 T@T) ) (! (= ($generated@@180 ($generated@@179 $generated@@185 $generated@@186)) $generated@@185)
 :pattern ( ($generated@@179 $generated@@185 $generated@@186))
))) (forall (($generated@@187 T@T) ($generated@@188 T@T) ) (! (= ($generated@@181 ($generated@@179 $generated@@187 $generated@@188)) $generated@@188)
 :pattern ( ($generated@@179 $generated@@187 $generated@@188))
))) (forall (($generated@@189 T@U) ($generated@@190 T@U) ($generated@@191 T@U) ) (! (let (($generated@@192 ($generated@@181 (type $generated@@189))))
(= (type ($generated@@177 $generated@@189 $generated@@190 $generated@@191)) $generated@@192))
 :pattern ( ($generated@@177 $generated@@189 $generated@@190 $generated@@191))
))) (forall (($generated@@193 T@U) ($generated@@194 T@U) ($generated@@195 T@U) ($generated@@196 T@U) ) (! (let (($generated@@197 (type $generated@@196)))
(let (($generated@@198 (type $generated@@194)))
(= (type ($generated@@182 $generated@@193 $generated@@194 $generated@@195 $generated@@196)) ($generated@@179 $generated@@198 $generated@@197))))
 :pattern ( ($generated@@182 $generated@@193 $generated@@194 $generated@@195 $generated@@196))
))) (forall (($generated@@199 T@U) ($generated@@200 T@U) ($generated@@201 T@U) ($generated@@202 T@U) ) (! (let (($generated@@203 ($generated@@181 (type $generated@@199))))
 (=> (= (type $generated@@202) $generated@@203) (= ($generated@@177 ($generated@@182 $generated@@199 $generated@@200 $generated@@201 $generated@@202) $generated@@200 $generated@@201) $generated@@202)))
 :weight 0
))) (and (and (forall (($generated@@204 T@U) ($generated@@205 T@U) ($generated@@206 T@U) ($generated@@207 T@U) ($generated@@208 T@U) ($generated@@209 T@U) ) (!  (or (= $generated@@206 $generated@@208) (= ($generated@@177 ($generated@@182 $generated@@205 $generated@@206 $generated@@207 $generated@@204) $generated@@208 $generated@@209) ($generated@@177 $generated@@205 $generated@@208 $generated@@209)))
 :weight 0
)) (forall (($generated@@210 T@U) ($generated@@211 T@U) ($generated@@212 T@U) ($generated@@213 T@U) ($generated@@214 T@U) ($generated@@215 T@U) ) (!  (or (= $generated@@213 $generated@@215) (= ($generated@@177 ($generated@@182 $generated@@211 $generated@@212 $generated@@213 $generated@@210) $generated@@214 $generated@@215) ($generated@@177 $generated@@211 $generated@@214 $generated@@215)))
 :weight 0
))) (forall (($generated@@216 T@U) ($generated@@217 T@U) ($generated@@218 T@U) ($generated@@219 T@U) ($generated@@220 T@U) ($generated@@221 T@U) ) (!  (or true (= ($generated@@177 ($generated@@182 $generated@@217 $generated@@218 $generated@@219 $generated@@216) $generated@@220 $generated@@221) ($generated@@177 $generated@@217 $generated@@220 $generated@@221)))
 :weight 0
)))) (forall (($generated@@222 T@U) ($generated@@223 T@U) ($generated@@224 T@U) ($generated@@225 Bool) ) (! (= (type ($generated@@178 $generated@@222 $generated@@223 $generated@@224 $generated@@225)) ($generated@@179 $generated@@79 $generated@@4))
 :pattern ( ($generated@@178 $generated@@222 $generated@@223 $generated@@224 $generated@@225))
))))
(assert (forall (($generated@@226 T@U) ($generated@@227 T@U) ($generated@@228 T@U) ($generated@@229 Bool) ($generated@@230 T@U) ($generated@@231 T@U) ) (! (let (($generated@@232 ($generated@@69 (type $generated@@231))))
 (=> (and (and (and (and (= (type $generated@@226) $generated@@79) (= (type $generated@@227) ($generated@@78 $generated@@79 $generated@@80))) (= (type $generated@@228) ($generated@@68 $generated@@4))) (= (type $generated@@230) $generated@@79)) (= (type $generated@@231) ($generated@@68 $generated@@232))) (= ($generated@@0 ($generated@@177 ($generated@@178 $generated@@226 $generated@@227 $generated@@228 $generated@@229) $generated@@230 $generated@@231))  (=> (and (not (= $generated@@230 $generated@@226)) ($generated@@0 ($generated@@85 ($generated@@83 $generated@@227 $generated@@230) $generated@@228))) $generated@@229))))
 :pattern ( ($generated@@177 ($generated@@178 $generated@@226 $generated@@227 $generated@@228 $generated@@229) $generated@@230 $generated@@231))
)))
(assert  (and (forall (($generated@@235 T@U) ($generated@@236 Int) ) (! (let (($generated@@237 ($generated@@159 (type $generated@@235))))
(= (type ($generated@@233 $generated@@235 $generated@@236)) ($generated@@157 $generated@@237)))
 :pattern ( ($generated@@233 $generated@@235 $generated@@236))
)) (forall (($generated@@238 T@U) ($generated@@239 T@U) ) (! (let (($generated@@240 ($generated@@159 (type $generated@@238))))
(= (type ($generated@@234 $generated@@238 $generated@@239)) ($generated@@157 $generated@@240)))
 :pattern ( ($generated@@234 $generated@@238 $generated@@239))
))))
(assert (forall (($generated@@241 T@U) ($generated@@242 T@U) ($generated@@243 Int) ) (! (let (($generated@@244 ($generated@@159 (type $generated@@241))))
 (=> (and (and (= (type $generated@@241) ($generated@@157 $generated@@244)) (= (type $generated@@242) ($generated@@157 $generated@@244))) (= $generated@@243 ($generated@@158 $generated@@241))) (and (= ($generated@@233 ($generated@@234 $generated@@241 $generated@@242) $generated@@243) $generated@@241) (= ($generated@@155 ($generated@@234 $generated@@241 $generated@@242) $generated@@243) $generated@@242))))
 :pattern ( ($generated@@233 ($generated@@234 $generated@@241 $generated@@242) $generated@@243))
 :pattern ( ($generated@@155 ($generated@@234 $generated@@241 $generated@@242) $generated@@243))
)))
(assert (forall (($generated@@247 T@U) ($generated@@248 T@U) ) (! (= (type ($generated@@245 $generated@@247 $generated@@248)) $generated@@141)
 :pattern ( ($generated@@245 $generated@@247 $generated@@248))
)))
(assert (forall (($generated@@249 T@U) ($generated@@250 T@U) ($generated@@251 T@U) ($generated@@252 T@U) ) (!  (=> (and (and (and (= (type $generated@@249) $generated@@66) (= (type $generated@@250) $generated@@66)) (= (type $generated@@251) $generated@@150)) (= (type $generated@@252) $generated@@150)) (= ($generated@@137 ($generated@@245 $generated@@251 $generated@@252) ($generated@@140 $generated@@249 $generated@@250))  (and ($generated@@246 $generated@@251 $generated@@249) ($generated@@246 $generated@@252 $generated@@250))))
 :pattern ( ($generated@@137 ($generated@@245 $generated@@251 $generated@@252) ($generated@@140 $generated@@249 $generated@@250)))
)))
(assert (forall (($generated@@253 T@U) ($generated@@254 T@U) ) (!  (=> (and (= (type $generated@@253) $generated@@141) (= (type $generated@@254) $generated@@141)) (= ($generated@@147 $generated@@253 $generated@@254) (= $generated@@253 $generated@@254)))
 :pattern ( ($generated@@147 $generated@@253 $generated@@254))
)))
(assert (forall (($generated@@255 T@U) ($generated@@256 Int) ) (! (let (($generated@@257 ($generated@@159 (type $generated@@255))))
 (=> (and (= (type $generated@@255) ($generated@@157 $generated@@257)) (= $generated@@256 0)) (= ($generated@@155 $generated@@255 $generated@@256) $generated@@255)))
 :pattern ( ($generated@@155 $generated@@255 $generated@@256))
)))
(assert (forall (($generated@@259 T@U) ) (! (= (type ($generated@@258 $generated@@259)) $generated@@66)
 :pattern ( ($generated@@258 $generated@@259))
)))
(assert (forall (($generated@@260 T@U) ($generated@@261 T@U) ) (!  (=> (and (= (type $generated@@260) ($generated@@78 $generated@@150 $generated@@4)) (= (type $generated@@261) $generated@@66)) (= ($generated@@137 $generated@@260 ($generated@@258 $generated@@261)) (forall (($generated@@262 T@U) ) (!  (=> (and (= (type $generated@@262) $generated@@150) ($generated@@0 ($generated@@83 $generated@@260 $generated@@262))) ($generated@@246 $generated@@262 $generated@@261))
 :pattern ( ($generated@@83 $generated@@260 $generated@@262))
))))
 :pattern ( ($generated@@137 $generated@@260 ($generated@@258 $generated@@261)))
)))
(assert (forall (($generated@@264 T@U) ) (! (= (type ($generated@@263 $generated@@264)) $generated@@66)
 :pattern ( ($generated@@263 $generated@@264))
)))
(assert (forall (($generated@@265 T@U) ($generated@@266 T@U) ) (!  (=> (and (= (type $generated@@265) ($generated@@78 $generated@@150 $generated@@4)) (= (type $generated@@266) $generated@@66)) (= ($generated@@137 $generated@@265 ($generated@@263 $generated@@266)) (forall (($generated@@267 T@U) ) (!  (=> (and (= (type $generated@@267) $generated@@150) ($generated@@0 ($generated@@83 $generated@@265 $generated@@267))) ($generated@@246 $generated@@267 $generated@@266))
 :pattern ( ($generated@@83 $generated@@265 $generated@@267))
))))
 :pattern ( ($generated@@137 $generated@@265 ($generated@@263 $generated@@266)))
)))
(assert (forall (($generated@@269 Int) ) (! (= ($generated@@268 $generated@@269) $generated@@269)
 :pattern ( ($generated@@268 $generated@@269))
)))
(assert (forall (($generated@@271 T@U) ) (! (let (($generated@@272 (type $generated@@271)))
(= (type ($generated@@270 $generated@@271)) $generated@@272))
 :pattern ( ($generated@@270 $generated@@271))
)))
(assert (forall (($generated@@273 T@U) ) (! (= ($generated@@270 $generated@@273) $generated@@273)
 :pattern ( ($generated@@270 $generated@@273))
)))
(assert (forall (($generated@@275 T@U) ) (! (= (type ($generated@@274 $generated@@275)) $generated@@66)
 :pattern ( ($generated@@274 $generated@@275))
)))
(assert (forall (($generated@@276 T@U) ($generated@@277 T@U) ($generated@@278 T@U) ) (!  (=> (and (and (and (= (type $generated@@276) ($generated@@157 $generated@@150)) (= (type $generated@@277) $generated@@150)) (= (type $generated@@278) $generated@@66)) (and ($generated@@137 $generated@@276 ($generated@@274 $generated@@278)) ($generated@@246 $generated@@277 $generated@@278))) ($generated@@137 ($generated@@156 $generated@@276 $generated@@277) ($generated@@274 $generated@@278)))
 :pattern ( ($generated@@137 ($generated@@156 $generated@@276 $generated@@277) ($generated@@274 $generated@@278)))
)))
(assert (forall (($generated@@280 T@U) ($generated@@281 Int) ) (! (let (($generated@@282 ($generated@@159 (type $generated@@280))))
(= (type ($generated@@279 $generated@@280 $generated@@281)) $generated@@282))
 :pattern ( ($generated@@279 $generated@@280 $generated@@281))
)))
(assert (forall (($generated@@283 T@U) ($generated@@284 Int) ($generated@@285 Int) ) (! (let (($generated@@286 ($generated@@159 (type $generated@@283))))
 (=> (= (type $generated@@283) ($generated@@157 $generated@@286)) (=> (and (and (<= 0 $generated@@285) (< $generated@@285 $generated@@284)) (< $generated@@285 ($generated@@158 $generated@@283))) (= ($generated@@279 ($generated@@233 $generated@@283 $generated@@284) $generated@@285) ($generated@@279 $generated@@283 $generated@@285)))))
 :weight 25
 :pattern ( ($generated@@279 ($generated@@233 $generated@@283 $generated@@284) $generated@@285))
 :pattern ( ($generated@@279 $generated@@283 $generated@@285) ($generated@@233 $generated@@283 $generated@@284))
)))
(assert (forall (($generated@@289 T@U) ($generated@@290 T@U) ($generated@@291 T@U) ($generated@@292 T@U) ($generated@@293 T@U) ) (!  (=> (and (and (and (and (and (= (type $generated@@289) $generated@@66) (= (type $generated@@290) $generated@@66)) (= (type $generated@@291) $generated@@150)) (= (type $generated@@292) $generated@@150)) (= (type $generated@@293) ($generated@@78 $generated@@79 $generated@@80))) ($generated@@287 $generated@@293)) (= ($generated@@76 ($generated@@245 $generated@@291 $generated@@292) ($generated@@140 $generated@@289 $generated@@290) $generated@@293)  (and ($generated@@288 $generated@@291 $generated@@289 $generated@@293) ($generated@@288 $generated@@292 $generated@@290 $generated@@293))))
 :pattern ( ($generated@@76 ($generated@@245 $generated@@291 $generated@@292) ($generated@@140 $generated@@289 $generated@@290) $generated@@293))
)))
(assert (forall (($generated@@294 T@U) ($generated@@295 Int) ) (! (let (($generated@@296 ($generated@@159 (type $generated@@294))))
 (=> (= (type $generated@@294) ($generated@@157 $generated@@296)) (=> (and (<= 0 $generated@@295) (<= $generated@@295 ($generated@@158 $generated@@294))) (= ($generated@@158 ($generated@@155 $generated@@294 $generated@@295)) (- ($generated@@158 $generated@@294) $generated@@295)))))
 :pattern ( ($generated@@158 ($generated@@155 $generated@@294 $generated@@295)))
)))
(assert (forall (($generated@@298 T@U) ) (! (= (type ($generated@@297 $generated@@298)) $generated@@70)
 :pattern ( ($generated@@297 $generated@@298))
)))
(assert (forall (($generated@@299 T@U) ) (!  (=> (= (type $generated@@299) $generated@@141) (= ($generated@@139 $generated@@299) (= ($generated@@297 $generated@@299) $generated@@61)))
 :pattern ( ($generated@@139 $generated@@299))
)))
(assert (forall (($generated@@301 T@U) ($generated@@302 T@U) ) (! (let (($generated@@303 ($generated@@159 (type $generated@@301))))
 (=> (and (= (type $generated@@301) ($generated@@157 $generated@@303)) (= (type $generated@@302) ($generated@@157 $generated@@303))) (= ($generated@@300 $generated@@301 $generated@@302)  (and (= ($generated@@158 $generated@@301) ($generated@@158 $generated@@302)) (forall (($generated@@304 Int) ) (!  (=> (and (<= 0 $generated@@304) (< $generated@@304 ($generated@@158 $generated@@301))) (= ($generated@@279 $generated@@301 $generated@@304) ($generated@@279 $generated@@302 $generated@@304)))
 :pattern ( ($generated@@279 $generated@@301 $generated@@304))
 :pattern ( ($generated@@279 $generated@@302 $generated@@304))
))))))
 :pattern ( ($generated@@300 $generated@@301 $generated@@302))
)))
(assert (forall (($generated@@306 T@U) ($generated@@307 Int) ) (! (let (($generated@@308 ($generated@@159 (type $generated@@306))))
 (=> (= (type $generated@@306) ($generated@@157 $generated@@308)) (=> (and (<= 0 $generated@@307) (< $generated@@307 ($generated@@158 $generated@@306))) (< ($generated@@305 ($generated@@233 $generated@@306 $generated@@307)) ($generated@@305 $generated@@306)))))
 :pattern ( ($generated@@305 ($generated@@233 $generated@@306 $generated@@307)))
)))
(assert (forall (($generated@@309 T@U) ) (!  (=> (and (= (type $generated@@309) $generated@@141) ($generated@@139 $generated@@309)) (exists (($generated@@310 T@U) ($generated@@311 T@U) ) (!  (and (and (= (type $generated@@310) $generated@@150) (= (type $generated@@311) $generated@@150)) (= $generated@@309 ($generated@@245 $generated@@310 $generated@@311)))
 :no-pattern (type $generated@@310)
 :no-pattern (type $generated@@311)
 :no-pattern ($generated $generated@@310)
 :no-pattern ($generated@@0 $generated@@310)
 :no-pattern ($generated $generated@@311)
 :no-pattern ($generated@@0 $generated@@311)
)))
 :pattern ( ($generated@@139 $generated@@309))
)))
(assert (forall (($generated@@313 T@T) ) (! (= (type ($generated@@312 $generated@@313)) ($generated@@157 $generated@@313))
 :pattern ( ($generated@@312 $generated@@313))
)))
(assert (forall (($generated@@314 T@T) ) (! (= ($generated@@158 ($generated@@312 $generated@@314)) 0)
 :pattern ( ($generated@@312 $generated@@314))
)))
(assert (forall (($generated@@315 T@U) ($generated@@316 Int) ) (! (let (($generated@@317 ($generated@@159 (type $generated@@315))))
 (=> (= (type $generated@@315) ($generated@@157 $generated@@317)) (=> (and (< 0 $generated@@316) (<= $generated@@316 ($generated@@158 $generated@@315))) (< ($generated@@305 ($generated@@155 $generated@@315 $generated@@316)) ($generated@@305 $generated@@315)))))
 :pattern ( ($generated@@305 ($generated@@155 $generated@@315 $generated@@316)))
)))
(assert (forall (($generated@@318 T@U) ($generated@@319 T@U) ) (! (let (($generated@@320 (type $generated@@319)))
 (=> (= (type $generated@@318) ($generated@@157 $generated@@320)) (= ($generated@@158 ($generated@@156 $generated@@318 $generated@@319)) (+ 1 ($generated@@158 $generated@@318)))))
 :pattern ( ($generated@@156 $generated@@318 $generated@@319))
)))
(assert (forall (($generated@@322 T@U) ) (! (= (type ($generated@@321 $generated@@322)) $generated@@150)
 :pattern ( ($generated@@321 $generated@@322))
)))
(assert (forall (($generated@@323 T@U) ($generated@@324 T@U) ($generated@@325 T@U) ) (!  (=> (and (= (type $generated@@324) $generated@@66) (= (type $generated@@325) ($generated@@78 $generated@@79 $generated@@80))) (= ($generated@@288 ($generated@@321 $generated@@323) $generated@@324 $generated@@325) ($generated@@76 $generated@@323 $generated@@324 $generated@@325)))
 :pattern ( ($generated@@288 ($generated@@321 $generated@@323) $generated@@324 $generated@@325))
)))
(assert (forall (($generated@@326 T@U) ($generated@@327 Int) ($generated@@328 Int) ) (! (let (($generated@@329 ($generated@@159 (type $generated@@326))))
 (=> (= (type $generated@@326) ($generated@@157 $generated@@329)) (=> (and (and (<= 0 $generated@@327) (<= 0 $generated@@328)) (< $generated@@328 (- ($generated@@158 $generated@@326) $generated@@327))) (= ($generated@@279 ($generated@@155 $generated@@326 $generated@@327) $generated@@328) ($generated@@279 $generated@@326 (+ $generated@@328 $generated@@327))))))
 :weight 25
 :pattern ( ($generated@@279 ($generated@@155 $generated@@326 $generated@@327) $generated@@328))
)))
(assert (forall (($generated@@332 T@T) ) (! (= (type ($generated@@331 $generated@@332)) ($generated@@78 $generated@@332 $generated@@2))
 :pattern ( ($generated@@331 $generated@@332))
)))
(assert (forall (($generated@@333 T@U) ) (! (let (($generated@@334 ($generated@@81 (type $generated@@333))))
 (=> (= (type $generated@@333) ($generated@@78 $generated@@334 $generated@@2)) (and (= (= ($generated@@330 $generated@@333) 0) (= $generated@@333 ($generated@@331 $generated@@334))) (=> (not (= ($generated@@330 $generated@@333) 0)) (exists (($generated@@335 T@U) ) (!  (and (= (type $generated@@335) $generated@@334) (< 0 ($generated ($generated@@83 $generated@@333 $generated@@335))))
 :no-pattern (type $generated@@335)
 :no-pattern ($generated $generated@@335)
 :no-pattern ($generated@@0 $generated@@335)
))))))
 :pattern ( ($generated@@330 $generated@@333))
)))
(assert  (and (and (and (and (forall (($generated@@341 T@T) ($generated@@342 T@T) ) (= ($generated@@1 ($generated@@338 $generated@@341 $generated@@342)) 18)) (forall (($generated@@343 T@T) ($generated@@344 T@T) ) (! (= ($generated@@339 ($generated@@338 $generated@@343 $generated@@344)) $generated@@343)
 :pattern ( ($generated@@338 $generated@@343 $generated@@344))
))) (forall (($generated@@345 T@T) ($generated@@346 T@T) ) (! (= ($generated@@340 ($generated@@338 $generated@@345 $generated@@346)) $generated@@346)
 :pattern ( ($generated@@338 $generated@@345 $generated@@346))
))) (forall (($generated@@347 T@U) ) (! (let (($generated@@348 ($generated@@339 (type $generated@@347))))
(= (type ($generated@@336 $generated@@347)) ($generated@@78 $generated@@348 $generated@@4)))
 :pattern ( ($generated@@336 $generated@@347))
))) (forall (($generated@@349 T@T) ($generated@@350 T@T) ) (! (= (type ($generated@@337 $generated@@349 $generated@@350)) ($generated@@338 $generated@@349 $generated@@350))
 :pattern ( ($generated@@337 $generated@@349 $generated@@350))
))))
(assert (forall (($generated@@351 T@U) ($generated@@352 T@T) ) (! (let (($generated@@353 (type $generated@@351)))
 (not ($generated@@0 ($generated@@83 ($generated@@336 ($generated@@337 $generated@@353 $generated@@352)) $generated@@351))))
 :pattern ( (let (($generated@@353 (type $generated@@351)))
($generated@@83 ($generated@@336 ($generated@@337 $generated@@353 $generated@@352)) $generated@@351)))
)))
(assert  (and (and (and (and (forall (($generated@@359 T@T) ($generated@@360 T@T) ) (= ($generated@@1 ($generated@@356 $generated@@359 $generated@@360)) 19)) (forall (($generated@@361 T@T) ($generated@@362 T@T) ) (! (= ($generated@@357 ($generated@@356 $generated@@361 $generated@@362)) $generated@@361)
 :pattern ( ($generated@@356 $generated@@361 $generated@@362))
))) (forall (($generated@@363 T@T) ($generated@@364 T@T) ) (! (= ($generated@@358 ($generated@@356 $generated@@363 $generated@@364)) $generated@@364)
 :pattern ( ($generated@@356 $generated@@363 $generated@@364))
))) (forall (($generated@@365 T@U) ) (! (let (($generated@@366 ($generated@@357 (type $generated@@365))))
(= (type ($generated@@354 $generated@@365)) ($generated@@78 $generated@@366 $generated@@4)))
 :pattern ( ($generated@@354 $generated@@365))
))) (forall (($generated@@367 T@T) ($generated@@368 T@T) ) (! (= (type ($generated@@355 $generated@@367 $generated@@368)) ($generated@@356 $generated@@367 $generated@@368))
 :pattern ( ($generated@@355 $generated@@367 $generated@@368))
))))
(assert (forall (($generated@@369 T@U) ($generated@@370 T@T) ) (! (let (($generated@@371 (type $generated@@369)))
 (not ($generated@@0 ($generated@@83 ($generated@@354 ($generated@@355 $generated@@371 $generated@@370)) $generated@@369))))
 :pattern ( (let (($generated@@371 (type $generated@@369)))
($generated@@83 ($generated@@354 ($generated@@355 $generated@@371 $generated@@370)) $generated@@369)))
)))
(assert (forall (($generated@@372 T@U) ($generated@@373 T@U) ) (! (let (($generated@@374 ($generated@@159 (type $generated@@372))))
 (=> (and (= (type $generated@@372) ($generated@@157 $generated@@374)) (= (type $generated@@373) ($generated@@157 $generated@@374))) (= ($generated@@158 ($generated@@234 $generated@@372 $generated@@373)) (+ ($generated@@158 $generated@@372) ($generated@@158 $generated@@373)))))
 :pattern ( ($generated@@158 ($generated@@234 $generated@@372 $generated@@373)))
)))
(assert (forall (($generated@@375 T@U) ) (! (let (($generated@@376 ($generated@@81 (type $generated@@375))))
 (=> (= (type $generated@@375) ($generated@@78 $generated@@376 $generated@@2)) (= ($generated@@173 $generated@@375) (forall (($generated@@377 T@U) ) (!  (=> (= (type $generated@@377) $generated@@376) (and (<= 0 ($generated ($generated@@83 $generated@@375 $generated@@377))) (<= ($generated ($generated@@83 $generated@@375 $generated@@377)) ($generated@@330 $generated@@375))))
 :pattern ( ($generated@@83 $generated@@375 $generated@@377))
)))))
 :pattern ( ($generated@@173 $generated@@375))
)))
(assert (forall (($generated@@379 T@T) ($generated@@380 T@U) ) (! (= (type ($generated@@378 $generated@@379 $generated@@380)) $generated@@379)
 :pattern ( ($generated@@378 $generated@@379 $generated@@380))
)))
(assert (forall (($generated@@381 T@U) ) (!  (=> (and (= (type $generated@@381) $generated@@150) ($generated@@246 $generated@@381 $generated@@134)) (and (= ($generated@@321 ($generated@@378 $generated@@2 $generated@@381)) $generated@@381) ($generated@@137 ($generated@@378 $generated@@2 $generated@@381) $generated@@134)))
 :pattern ( ($generated@@246 $generated@@381 $generated@@134))
)))
(assert (forall (($generated@@382 T@U) ($generated@@383 Int) ($generated@@384 T@U) ) (! (let (($generated@@385 (type $generated@@384)))
 (=> (= (type $generated@@382) ($generated@@157 $generated@@385)) (and (=> (= $generated@@383 ($generated@@158 $generated@@382)) (= ($generated@@279 ($generated@@156 $generated@@382 $generated@@384) $generated@@383) $generated@@384)) (=> (not (= $generated@@383 ($generated@@158 $generated@@382))) (= ($generated@@279 ($generated@@156 $generated@@382 $generated@@384) $generated@@383) ($generated@@279 $generated@@382 $generated@@383))))))
 :pattern ( ($generated@@279 ($generated@@156 $generated@@382 $generated@@384) $generated@@383))
)))
(assert (forall (($generated@@386 T@U) ) (! (let (($generated@@387 ($generated@@340 (type $generated@@386))))
(let (($generated@@388 ($generated@@339 (type $generated@@386))))
 (=> (= (type $generated@@386) ($generated@@338 $generated@@388 $generated@@387)) (or (= $generated@@386 ($generated@@337 $generated@@388 $generated@@387)) (exists (($generated@@389 T@U) ) (!  (and (= (type $generated@@389) $generated@@388) ($generated@@0 ($generated@@83 ($generated@@336 $generated@@386) $generated@@389)))
 :no-pattern (type $generated@@389)
 :no-pattern ($generated $generated@@389)
 :no-pattern ($generated@@0 $generated@@389)
))))))
 :pattern ( ($generated@@336 $generated@@386))
)))
(assert (forall (($generated@@391 T@U) ) (! (let (($generated@@392 ($generated@@340 (type $generated@@391))))
(= (type ($generated@@390 $generated@@391)) ($generated@@78 $generated@@392 $generated@@4)))
 :pattern ( ($generated@@390 $generated@@391))
)))
(assert (forall (($generated@@393 T@U) ) (! (let (($generated@@394 ($generated@@340 (type $generated@@393))))
(let (($generated@@395 ($generated@@339 (type $generated@@393))))
 (=> (= (type $generated@@393) ($generated@@338 $generated@@395 $generated@@394)) (or (= $generated@@393 ($generated@@337 $generated@@395 $generated@@394)) (exists (($generated@@396 T@U) ) (!  (and (= (type $generated@@396) $generated@@394) ($generated@@0 ($generated@@83 ($generated@@390 $generated@@393) $generated@@396)))
 :no-pattern (type $generated@@396)
 :no-pattern ($generated $generated@@396)
 :no-pattern ($generated@@0 $generated@@396)
))))))
 :pattern ( ($generated@@390 $generated@@393))
)))
(assert (forall (($generated@@397 T@U) ) (! (let (($generated@@398 ($generated@@358 (type $generated@@397))))
(let (($generated@@399 ($generated@@357 (type $generated@@397))))
 (=> (= (type $generated@@397) ($generated@@356 $generated@@399 $generated@@398)) (or (= $generated@@397 ($generated@@355 $generated@@399 $generated@@398)) (exists (($generated@@400 T@U) ) (!  (and (= (type $generated@@400) $generated@@399) ($generated@@0 ($generated@@83 ($generated@@354 $generated@@397) $generated@@400)))
 :no-pattern (type $generated@@400)
 :no-pattern ($generated $generated@@400)
 :no-pattern ($generated@@0 $generated@@400)
))))))
 :pattern ( ($generated@@354 $generated@@397))
)))
(assert (forall (($generated@@402 T@U) ) (! (let (($generated@@403 ($generated@@358 (type $generated@@402))))
(= (type ($generated@@401 $generated@@402)) ($generated@@78 $generated@@403 $generated@@4)))
 :pattern ( ($generated@@401 $generated@@402))
)))
(assert (forall (($generated@@404 T@U) ) (! (let (($generated@@405 ($generated@@358 (type $generated@@404))))
(let (($generated@@406 ($generated@@357 (type $generated@@404))))
 (=> (= (type $generated@@404) ($generated@@356 $generated@@406 $generated@@405)) (or (= $generated@@404 ($generated@@355 $generated@@406 $generated@@405)) (exists (($generated@@407 T@U) ) (!  (and (= (type $generated@@407) $generated@@405) ($generated@@0 ($generated@@83 ($generated@@401 $generated@@404) $generated@@407)))
 :no-pattern (type $generated@@407)
 :no-pattern ($generated $generated@@407)
 :no-pattern ($generated@@0 $generated@@407)
))))))
 :pattern ( ($generated@@401 $generated@@404))
)))
(assert (forall (($generated@@408 T@U) ($generated@@409 T@U) ) (!  (=> (and (= (type $generated@@408) ($generated@@78 $generated@@150 $generated@@2)) (= (type $generated@@409) $generated@@66)) (= ($generated@@137 $generated@@408 ($generated@@172 $generated@@409)) (forall (($generated@@410 T@U) ) (!  (=> (and (= (type $generated@@410) $generated@@150) (< 0 ($generated ($generated@@83 $generated@@408 $generated@@410)))) ($generated@@246 $generated@@410 $generated@@409))
 :pattern ( ($generated@@83 $generated@@408 $generated@@410))
))))
 :pattern ( ($generated@@137 $generated@@408 ($generated@@172 $generated@@409)))
)))
(assert (forall (($generated@@411 T@U) ($generated@@412 T@U) ($generated@@413 T@U) ) (!  (=> (and (and (= (type $generated@@411) ($generated@@78 $generated@@150 $generated@@4)) (= (type $generated@@412) $generated@@66)) (= (type $generated@@413) ($generated@@78 $generated@@79 $generated@@80))) (= ($generated@@76 $generated@@411 ($generated@@258 $generated@@412) $generated@@413) (forall (($generated@@414 T@U) ) (!  (=> (and (= (type $generated@@414) $generated@@150) ($generated@@0 ($generated@@83 $generated@@411 $generated@@414))) ($generated@@288 $generated@@414 $generated@@412 $generated@@413))
 :pattern ( ($generated@@83 $generated@@411 $generated@@414))
))))
 :pattern ( ($generated@@76 $generated@@411 ($generated@@258 $generated@@412) $generated@@413))
)))
(assert (forall (($generated@@415 T@U) ($generated@@416 T@U) ($generated@@417 T@U) ) (!  (=> (and (and (= (type $generated@@415) ($generated@@78 $generated@@150 $generated@@4)) (= (type $generated@@416) $generated@@66)) (= (type $generated@@417) ($generated@@78 $generated@@79 $generated@@80))) (= ($generated@@76 $generated@@415 ($generated@@263 $generated@@416) $generated@@417) (forall (($generated@@418 T@U) ) (!  (=> (and (= (type $generated@@418) $generated@@150) ($generated@@0 ($generated@@83 $generated@@415 $generated@@418))) ($generated@@288 $generated@@418 $generated@@416 $generated@@417))
 :pattern ( ($generated@@83 $generated@@415 $generated@@418))
))))
 :pattern ( ($generated@@76 $generated@@415 ($generated@@263 $generated@@416) $generated@@417))
)))
(assert (forall (($generated@@419 T@U) ) (! (let (($generated@@420 (type $generated@@419)))
(= ($generated ($generated@@83 ($generated@@331 $generated@@420) $generated@@419)) 0))
 :pattern ( (let (($generated@@420 (type $generated@@419)))
($generated@@83 ($generated@@331 $generated@@420) $generated@@419)))
)))
(assert  (and (forall (($generated@@423 T@U) ) (! (= (type ($generated@@421 $generated@@423)) ($generated@@78 $generated@@150 $generated@@4))
 :pattern ( ($generated@@421 $generated@@423))
)) (forall (($generated@@424 T@U) ) (! (let (($generated@@425 ($generated@@340 (type $generated@@424))))
(let (($generated@@426 ($generated@@339 (type $generated@@424))))
(= (type ($generated@@422 $generated@@424)) ($generated@@78 $generated@@426 $generated@@425))))
 :pattern ( ($generated@@422 $generated@@424))
))))
(assert (forall (($generated@@427 T@U) ($generated@@428 T@U) ) (!  (=> (and (= (type $generated@@427) ($generated@@338 $generated@@150 $generated@@150)) (= (type $generated@@428) $generated@@150)) (= ($generated@@0 ($generated@@83 ($generated@@421 $generated@@427) $generated@@428))  (and ($generated@@0 ($generated@@83 ($generated@@336 $generated@@427) ($generated@@148 ($generated@@378 $generated@@141 $generated@@428)))) (= ($generated@@83 ($generated@@422 $generated@@427) ($generated@@148 ($generated@@378 $generated@@141 $generated@@428))) ($generated@@149 ($generated@@378 $generated@@141 $generated@@428))))))
 :pattern ( ($generated@@83 ($generated@@421 $generated@@427) $generated@@428))
)))
(assert  (and (forall (($generated@@431 T@U) ) (! (= (type ($generated@@429 $generated@@431)) ($generated@@78 $generated@@150 $generated@@4))
 :pattern ( ($generated@@429 $generated@@431))
)) (forall (($generated@@432 T@U) ) (! (let (($generated@@433 ($generated@@358 (type $generated@@432))))
(let (($generated@@434 ($generated@@357 (type $generated@@432))))
(= (type ($generated@@430 $generated@@432)) ($generated@@78 $generated@@434 $generated@@433))))
 :pattern ( ($generated@@430 $generated@@432))
))))
(assert (forall (($generated@@435 T@U) ($generated@@436 T@U) ) (!  (=> (and (= (type $generated@@435) ($generated@@356 $generated@@150 $generated@@150)) (= (type $generated@@436) $generated@@150)) (= ($generated@@0 ($generated@@83 ($generated@@429 $generated@@435) $generated@@436))  (and ($generated@@0 ($generated@@83 ($generated@@354 $generated@@435) ($generated@@148 ($generated@@378 $generated@@141 $generated@@436)))) (= ($generated@@83 ($generated@@430 $generated@@435) ($generated@@148 ($generated@@378 $generated@@141 $generated@@436))) ($generated@@149 ($generated@@378 $generated@@141 $generated@@436))))))
 :pattern ( ($generated@@83 ($generated@@429 $generated@@435) $generated@@436))
)))
(assert (forall (($generated@@437 T@U) ($generated@@438 T@U) ) (! (let (($generated@@439 (type $generated@@438)))
(let (($generated@@440 ($generated@@339 (type $generated@@437))))
 (=> (= (type $generated@@437) ($generated@@338 $generated@@440 $generated@@439)) (= ($generated@@0 ($generated@@83 ($generated@@390 $generated@@437) $generated@@438)) (exists (($generated@@441 T@U) ) (!  (and (= (type $generated@@441) $generated@@440) (and ($generated@@0 ($generated@@83 ($generated@@336 $generated@@437) $generated@@441)) (= $generated@@438 ($generated@@83 ($generated@@422 $generated@@437) $generated@@441))))
 :pattern ( ($generated@@83 ($generated@@336 $generated@@437) $generated@@441))
 :pattern ( ($generated@@83 ($generated@@422 $generated@@437) $generated@@441))
))))))
 :pattern ( ($generated@@83 ($generated@@390 $generated@@437) $generated@@438))
)))
(assert (forall (($generated@@442 T@U) ($generated@@443 T@U) ) (! (let (($generated@@444 (type $generated@@443)))
(let (($generated@@445 ($generated@@357 (type $generated@@442))))
 (=> (= (type $generated@@442) ($generated@@356 $generated@@445 $generated@@444)) (= ($generated@@0 ($generated@@83 ($generated@@401 $generated@@442) $generated@@443)) (exists (($generated@@446 T@U) ) (!  (and (= (type $generated@@446) $generated@@445) (and ($generated@@0 ($generated@@83 ($generated@@354 $generated@@442) $generated@@446)) (= $generated@@443 ($generated@@83 ($generated@@430 $generated@@442) $generated@@446))))
 :pattern ( ($generated@@83 ($generated@@354 $generated@@442) $generated@@446))
 :pattern ( ($generated@@83 ($generated@@430 $generated@@442) $generated@@446))
))))))
 :pattern ( ($generated@@83 ($generated@@401 $generated@@442) $generated@@443))
)))
(assert (forall (($generated@@448 T@U) ($generated@@449 T@U) ) (! (= (type ($generated@@447 $generated@@448 $generated@@449)) $generated@@66)
 :pattern ( ($generated@@447 $generated@@448 $generated@@449))
)))
(assert (forall (($generated@@450 T@U) ($generated@@451 T@U) ($generated@@452 T@U) ($generated@@453 T@U) ) (!  (=> (and (and (and (= (type $generated@@450) ($generated@@338 $generated@@150 $generated@@150)) (= (type $generated@@451) $generated@@66)) (= (type $generated@@452) $generated@@66)) (= (type $generated@@453) ($generated@@78 $generated@@79 $generated@@80))) (= ($generated@@76 $generated@@450 ($generated@@447 $generated@@451 $generated@@452) $generated@@453) (forall (($generated@@454 T@U) ) (!  (=> (and (= (type $generated@@454) $generated@@150) ($generated@@0 ($generated@@83 ($generated@@336 $generated@@450) $generated@@454))) (and ($generated@@288 ($generated@@83 ($generated@@422 $generated@@450) $generated@@454) $generated@@452 $generated@@453) ($generated@@288 $generated@@454 $generated@@451 $generated@@453)))
 :pattern ( ($generated@@83 ($generated@@422 $generated@@450) $generated@@454))
 :pattern ( ($generated@@83 ($generated@@336 $generated@@450) $generated@@454))
))))
 :pattern ( ($generated@@76 $generated@@450 ($generated@@447 $generated@@451 $generated@@452) $generated@@453))
)))
(assert (forall (($generated@@456 T@U) ($generated@@457 T@U) ) (! (= (type ($generated@@455 $generated@@456 $generated@@457)) $generated@@66)
 :pattern ( ($generated@@455 $generated@@456 $generated@@457))
)))
(assert (forall (($generated@@458 T@U) ($generated@@459 T@U) ($generated@@460 T@U) ($generated@@461 T@U) ) (!  (=> (and (and (and (= (type $generated@@458) ($generated@@356 $generated@@150 $generated@@150)) (= (type $generated@@459) $generated@@66)) (= (type $generated@@460) $generated@@66)) (= (type $generated@@461) ($generated@@78 $generated@@79 $generated@@80))) (= ($generated@@76 $generated@@458 ($generated@@455 $generated@@459 $generated@@460) $generated@@461) (forall (($generated@@462 T@U) ) (!  (=> (and (= (type $generated@@462) $generated@@150) ($generated@@0 ($generated@@83 ($generated@@354 $generated@@458) $generated@@462))) (and ($generated@@288 ($generated@@83 ($generated@@430 $generated@@458) $generated@@462) $generated@@460 $generated@@461) ($generated@@288 $generated@@462 $generated@@459 $generated@@461)))
 :pattern ( ($generated@@83 ($generated@@430 $generated@@458) $generated@@462))
 :pattern ( ($generated@@83 ($generated@@354 $generated@@458) $generated@@462))
))))
 :pattern ( ($generated@@76 $generated@@458 ($generated@@455 $generated@@459 $generated@@460) $generated@@461))
)))
(assert (forall (($generated@@463 T@U) ($generated@@464 T@U) ) (! (let (($generated@@465 ($generated@@159 (type $generated@@463))))
 (=> (and (and (= (type $generated@@463) ($generated@@157 $generated@@465)) (= (type $generated@@464) ($generated@@157 $generated@@465))) ($generated@@300 $generated@@463 $generated@@464)) (= $generated@@463 $generated@@464)))
 :pattern ( ($generated@@300 $generated@@463 $generated@@464))
)))
(assert (forall (($generated@@466 T@U) ($generated@@467 Int) ) (! (let (($generated@@468 ($generated@@159 (type $generated@@466))))
 (=> (= (type $generated@@466) ($generated@@157 $generated@@468)) (=> (and (<= 0 $generated@@467) (<= $generated@@467 ($generated@@158 $generated@@466))) (= ($generated@@158 ($generated@@233 $generated@@466 $generated@@467)) $generated@@467))))
 :pattern ( ($generated@@158 ($generated@@233 $generated@@466 $generated@@467)))
)))
(assert (forall (($generated@@470 T@T) ) (! (= (type ($generated@@469 $generated@@470)) ($generated@@78 $generated@@470 $generated@@4))
 :pattern ( ($generated@@469 $generated@@470))
)))
(assert (forall (($generated@@471 T@U) ) (! (let (($generated@@472 ($generated@@358 (type $generated@@471))))
(let (($generated@@473 ($generated@@357 (type $generated@@471))))
 (=> (= (type $generated@@471) ($generated@@356 $generated@@473 $generated@@472)) (= (= $generated@@471 ($generated@@355 $generated@@473 $generated@@472)) (= ($generated@@354 $generated@@471) ($generated@@469 $generated@@473))))))
 :pattern ( ($generated@@354 $generated@@471))
)))
(assert (forall (($generated@@474 T@U) ) (! (let (($generated@@475 ($generated@@358 (type $generated@@474))))
(let (($generated@@476 ($generated@@357 (type $generated@@474))))
 (=> (= (type $generated@@474) ($generated@@356 $generated@@476 $generated@@475)) (= (= $generated@@474 ($generated@@355 $generated@@476 $generated@@475)) (= ($generated@@401 $generated@@474) ($generated@@469 $generated@@475))))))
 :pattern ( ($generated@@401 $generated@@474))
)))
(assert (forall (($generated@@477 T@U) ) (! (let (($generated@@478 ($generated@@358 (type $generated@@477))))
(let (($generated@@479 ($generated@@357 (type $generated@@477))))
 (=> (= (type $generated@@477) ($generated@@356 $generated@@479 $generated@@478)) (= (= $generated@@477 ($generated@@355 $generated@@479 $generated@@478)) (= ($generated@@429 $generated@@477) ($generated@@469 $generated@@150))))))
 :pattern ( ($generated@@429 $generated@@477))
)))
(assert (forall (($generated@@480 T@U) ) (! (let (($generated@@481 ($generated@@340 (type $generated@@480))))
(let (($generated@@482 ($generated@@339 (type $generated@@480))))
 (=> (= (type $generated@@480) ($generated@@338 $generated@@482 $generated@@481)) (or (= $generated@@480 ($generated@@337 $generated@@482 $generated@@481)) (exists (($generated@@483 T@U) ($generated@@484 T@U) ) (!  (and (and (= (type $generated@@483) $generated@@150) (= (type $generated@@484) $generated@@150)) ($generated@@0 ($generated@@83 ($generated@@421 $generated@@480) ($generated@@321 ($generated@@245 $generated@@483 $generated@@484)))))
 :no-pattern (type $generated@@483)
 :no-pattern (type $generated@@484)
 :no-pattern ($generated $generated@@483)
 :no-pattern ($generated@@0 $generated@@483)
 :no-pattern ($generated $generated@@484)
 :no-pattern ($generated@@0 $generated@@484)
))))))
 :pattern ( ($generated@@421 $generated@@480))
)))
(assert (forall (($generated@@485 T@U) ) (! (let (($generated@@486 ($generated@@358 (type $generated@@485))))
(let (($generated@@487 ($generated@@357 (type $generated@@485))))
 (=> (= (type $generated@@485) ($generated@@356 $generated@@487 $generated@@486)) (or (= $generated@@485 ($generated@@355 $generated@@487 $generated@@486)) (exists (($generated@@488 T@U) ($generated@@489 T@U) ) (!  (and (and (= (type $generated@@488) $generated@@150) (= (type $generated@@489) $generated@@150)) ($generated@@0 ($generated@@83 ($generated@@429 $generated@@485) ($generated@@321 ($generated@@245 $generated@@488 $generated@@489)))))
 :no-pattern (type $generated@@488)
 :no-pattern (type $generated@@489)
 :no-pattern ($generated $generated@@488)
 :no-pattern ($generated@@0 $generated@@488)
 :no-pattern ($generated $generated@@489)
 :no-pattern ($generated@@0 $generated@@489)
))))))
 :pattern ( ($generated@@429 $generated@@485))
)))
(assert (forall (($generated@@490 T@U) ) (!  (=> (and (= (type $generated@@490) $generated@@150) ($generated@@246 $generated@@490 $generated@@46)) (and (= ($generated@@321 ($generated@@378 $generated@@2 $generated@@490)) $generated@@490) ($generated@@137 ($generated@@378 $generated@@2 $generated@@490) $generated@@46)))
 :pattern ( ($generated@@246 $generated@@490 $generated@@46))
)))
(assert (forall (($generated@@491 T@U) ) (!  (=> (and (= (type $generated@@491) $generated@@150) ($generated@@246 $generated@@491 $generated@@47)) (and (= ($generated@@321 ($generated@@378 $generated@@3 $generated@@491)) $generated@@491) ($generated@@137 ($generated@@378 $generated@@3 $generated@@491) $generated@@47)))
 :pattern ( ($generated@@246 $generated@@491 $generated@@47))
)))
(assert (forall (($generated@@492 T@U) ) (!  (=> (and (= (type $generated@@492) $generated@@150) ($generated@@246 $generated@@492 $generated@@44)) (and (= ($generated@@321 ($generated@@378 $generated@@4 $generated@@492)) $generated@@492) ($generated@@137 ($generated@@378 $generated@@4 $generated@@492) $generated@@44)))
 :pattern ( ($generated@@246 $generated@@492 $generated@@44))
)))
(assert (= ($generated@@1 $generated@@493) 20))
(assert (forall (($generated@@494 T@U) ) (!  (=> (and (= (type $generated@@494) $generated@@150) ($generated@@246 $generated@@494 $generated@@45)) (and (= ($generated@@321 ($generated@@378 $generated@@493 $generated@@494)) $generated@@494) ($generated@@137 ($generated@@378 $generated@@493 $generated@@494) $generated@@45)))
 :pattern ( ($generated@@246 $generated@@494 $generated@@45))
)))
(assert (forall (($generated@@495 T@U) ($generated@@496 T@U) ) (!  (=> (= (type $generated@@496) $generated@@66) (= ($generated@@246 ($generated@@321 $generated@@495) $generated@@496) ($generated@@137 $generated@@495 $generated@@496)))
 :pattern ( ($generated@@246 ($generated@@321 $generated@@495) $generated@@496))
)))
(assert (forall (($generated@@497 T@U) ) (! (let (($generated@@498 ($generated@@81 (type $generated@@497))))
 (=> (= (type $generated@@497) ($generated@@78 $generated@@498 $generated@@2)) (<= 0 ($generated@@330 $generated@@497))))
 :pattern ( ($generated@@330 $generated@@497))
)))
(assert (forall (($generated@@499 T@U) ) (! (let (($generated@@500 ($generated@@159 (type $generated@@499))))
 (=> (= (type $generated@@499) ($generated@@157 $generated@@500)) (<= 0 ($generated@@158 $generated@@499))))
 :pattern ( ($generated@@158 $generated@@499))
)))
(assert (forall (($generated@@501 T@U) ($generated@@502 Int) ($generated@@503 Int) ) (! (let (($generated@@504 ($generated@@159 (type $generated@@501))))
 (=> (= (type $generated@@501) ($generated@@157 $generated@@504)) (=> (and (and (<= 0 $generated@@502) (< $generated@@502 $generated@@503)) (<= $generated@@503 ($generated@@158 $generated@@501))) (< ($generated@@305 ($generated@@234 ($generated@@233 $generated@@501 $generated@@502) ($generated@@155 $generated@@501 $generated@@503))) ($generated@@305 $generated@@501)))))
 :pattern ( ($generated@@305 ($generated@@234 ($generated@@233 $generated@@501 $generated@@502) ($generated@@155 $generated@@501 $generated@@503))))
)))
(assert (forall (($generated@@506 T@U) ) (! (= (type ($generated@@505 $generated@@506)) $generated@@66)
 :pattern ( ($generated@@505 $generated@@506))
)))
(assert (forall (($generated@@507 T@U) ($generated@@508 T@U) ) (!  (=> (and (= (type $generated@@507) $generated@@66) (= (type $generated@@508) $generated@@66)) (= ($generated@@505 ($generated@@447 $generated@@507 $generated@@508)) $generated@@507))
 :pattern ( ($generated@@447 $generated@@507 $generated@@508))
)))
(assert (forall (($generated@@510 T@U) ) (! (= (type ($generated@@509 $generated@@510)) $generated@@66)
 :pattern ( ($generated@@509 $generated@@510))
)))
(assert (forall (($generated@@511 T@U) ($generated@@512 T@U) ) (!  (=> (and (= (type $generated@@511) $generated@@66) (= (type $generated@@512) $generated@@66)) (= ($generated@@509 ($generated@@447 $generated@@511 $generated@@512)) $generated@@512))
 :pattern ( ($generated@@447 $generated@@511 $generated@@512))
)))
(assert (forall (($generated@@513 T@U) ($generated@@514 T@U) ) (!  (=> (and (= (type $generated@@513) $generated@@66) (= (type $generated@@514) $generated@@66)) (= ($generated@@74 ($generated@@447 $generated@@513 $generated@@514)) $generated@@58))
 :pattern ( ($generated@@447 $generated@@513 $generated@@514))
)))
(assert (forall (($generated@@516 T@U) ) (! (= (type ($generated@@515 $generated@@516)) $generated@@66)
 :pattern ( ($generated@@515 $generated@@516))
)))
(assert (forall (($generated@@517 T@U) ($generated@@518 T@U) ) (!  (=> (and (= (type $generated@@517) $generated@@66) (= (type $generated@@518) $generated@@66)) (= ($generated@@515 ($generated@@455 $generated@@517 $generated@@518)) $generated@@517))
 :pattern ( ($generated@@455 $generated@@517 $generated@@518))
)))
(assert (forall (($generated@@520 T@U) ) (! (= (type ($generated@@519 $generated@@520)) $generated@@66)
 :pattern ( ($generated@@519 $generated@@520))
)))
(assert (forall (($generated@@521 T@U) ($generated@@522 T@U) ) (!  (=> (and (= (type $generated@@521) $generated@@66) (= (type $generated@@522) $generated@@66)) (= ($generated@@519 ($generated@@455 $generated@@521 $generated@@522)) $generated@@522))
 :pattern ( ($generated@@455 $generated@@521 $generated@@522))
)))
(assert (forall (($generated@@523 T@U) ($generated@@524 T@U) ) (!  (=> (and (= (type $generated@@523) $generated@@66) (= (type $generated@@524) $generated@@66)) (= ($generated@@74 ($generated@@455 $generated@@523 $generated@@524)) $generated@@59))
 :pattern ( ($generated@@455 $generated@@523 $generated@@524))
)))
(assert (forall (($generated@@525 T@U) ($generated@@526 T@U) ) (!  (=> (and (= (type $generated@@525) $generated@@150) (= (type $generated@@526) $generated@@150)) (= ($generated@@297 ($generated@@245 $generated@@525 $generated@@526)) $generated@@61))
 :pattern ( ($generated@@245 $generated@@525 $generated@@526))
)))
(assert (forall (($generated@@528 T@U) ) (! (= (type ($generated@@527 $generated@@528)) $generated@@66)
 :pattern ( ($generated@@527 $generated@@528))
)))
(assert (forall (($generated@@529 T@U) ($generated@@530 T@U) ) (!  (=> (and (= (type $generated@@529) $generated@@66) (= (type $generated@@530) $generated@@66)) (= ($generated@@527 ($generated@@140 $generated@@529 $generated@@530)) $generated@@529))
 :pattern ( ($generated@@140 $generated@@529 $generated@@530))
)))
(assert (forall (($generated@@532 T@U) ) (! (= (type ($generated@@531 $generated@@532)) $generated@@66)
 :pattern ( ($generated@@531 $generated@@532))
)))
(assert (forall (($generated@@533 T@U) ($generated@@534 T@U) ) (!  (=> (and (= (type $generated@@533) $generated@@66) (= (type $generated@@534) $generated@@66)) (= ($generated@@531 ($generated@@140 $generated@@533 $generated@@534)) $generated@@534))
 :pattern ( ($generated@@140 $generated@@533 $generated@@534))
)))
(assert (forall (($generated@@535 T@U) ($generated@@536 T@U) ) (!  (=> (and (= (type $generated@@535) $generated@@150) (= (type $generated@@536) $generated@@150)) (= ($generated@@148 ($generated@@245 $generated@@535 $generated@@536)) $generated@@535))
 :pattern ( ($generated@@245 $generated@@535 $generated@@536))
)))
(assert (forall (($generated@@537 T@U) ($generated@@538 T@U) ) (!  (=> (and (= (type $generated@@537) $generated@@150) (= (type $generated@@538) $generated@@150)) (= ($generated@@149 ($generated@@245 $generated@@537 $generated@@538)) $generated@@538))
 :pattern ( ($generated@@245 $generated@@537 $generated@@538))
)))
(assert (forall (($generated@@539 T@U) ($generated@@540 T@U) ($generated@@541 T@U) ) (!  (=> (and (and (= (type $generated@@539) ($generated@@157 $generated@@150)) (= (type $generated@@540) $generated@@66)) (= (type $generated@@541) ($generated@@78 $generated@@79 $generated@@80))) (= ($generated@@76 $generated@@539 ($generated@@274 $generated@@540) $generated@@541) (forall (($generated@@542 Int) ) (!  (=> (and (<= 0 $generated@@542) (< $generated@@542 ($generated@@158 $generated@@539))) ($generated@@288 ($generated@@279 $generated@@539 $generated@@542) $generated@@540 $generated@@541))
 :pattern ( ($generated@@279 $generated@@539 $generated@@542))
))))
 :pattern ( ($generated@@76 $generated@@539 ($generated@@274 $generated@@540) $generated@@541))
)))
(assert (forall (($generated@@544 Int) ) (! (= ($generated@@543 ($generated@@77 $generated@@544)) $generated@@544)
 :pattern ( ($generated@@77 $generated@@544))
)))
(assert (forall (($generated@@546 T@U) ) (! (= (type ($generated@@545 $generated@@546)) $generated@@66)
 :pattern ( ($generated@@545 $generated@@546))
)))
(assert (forall (($generated@@547 T@U) ) (!  (=> (= (type $generated@@547) $generated@@66) (= ($generated@@545 ($generated@@258 $generated@@547)) $generated@@547))
 :pattern ( ($generated@@258 $generated@@547))
)))
(assert (forall (($generated@@548 T@U) ) (!  (=> (= (type $generated@@548) $generated@@66) (= ($generated@@74 ($generated@@258 $generated@@548)) $generated@@54))
 :pattern ( ($generated@@258 $generated@@548))
)))
(assert (forall (($generated@@550 T@U) ) (! (= (type ($generated@@549 $generated@@550)) $generated@@66)
 :pattern ( ($generated@@549 $generated@@550))
)))
(assert (forall (($generated@@551 T@U) ) (!  (=> (= (type $generated@@551) $generated@@66) (= ($generated@@549 ($generated@@263 $generated@@551)) $generated@@551))
 :pattern ( ($generated@@263 $generated@@551))
)))
(assert (forall (($generated@@552 T@U) ) (!  (=> (= (type $generated@@552) $generated@@66) (= ($generated@@74 ($generated@@263 $generated@@552)) $generated@@55))
 :pattern ( ($generated@@263 $generated@@552))
)))
(assert (forall (($generated@@554 T@U) ) (! (= (type ($generated@@553 $generated@@554)) $generated@@66)
 :pattern ( ($generated@@553 $generated@@554))
)))
(assert (forall (($generated@@555 T@U) ) (!  (=> (= (type $generated@@555) $generated@@66) (= ($generated@@553 ($generated@@172 $generated@@555)) $generated@@555))
 :pattern ( ($generated@@172 $generated@@555))
)))
(assert (forall (($generated@@556 T@U) ) (!  (=> (= (type $generated@@556) $generated@@66) (= ($generated@@74 ($generated@@172 $generated@@556)) $generated@@56))
 :pattern ( ($generated@@172 $generated@@556))
)))
(assert (forall (($generated@@558 T@U) ) (! (= (type ($generated@@557 $generated@@558)) $generated@@66)
 :pattern ( ($generated@@557 $generated@@558))
)))
(assert (forall (($generated@@559 T@U) ) (!  (=> (= (type $generated@@559) $generated@@66) (= ($generated@@557 ($generated@@274 $generated@@559)) $generated@@559))
 :pattern ( ($generated@@274 $generated@@559))
)))
(assert (forall (($generated@@560 T@U) ) (!  (=> (= (type $generated@@560) $generated@@66) (= ($generated@@74 ($generated@@274 $generated@@560)) $generated@@57))
 :pattern ( ($generated@@274 $generated@@560))
)))
(assert (forall (($generated@@561 T@U) ) (! (let (($generated@@562 (type $generated@@561)))
(= ($generated@@378 $generated@@562 ($generated@@321 $generated@@561)) $generated@@561))
 :pattern ( ($generated@@321 $generated@@561))
)))
(assert (forall (($generated@@563 T@U) ($generated@@564 T@U) ($generated@@565 T@U) ) (!  (=> (and (and (= (type $generated@@563) ($generated@@338 $generated@@150 $generated@@150)) (= (type $generated@@564) $generated@@66)) (= (type $generated@@565) $generated@@66)) (= ($generated@@137 $generated@@563 ($generated@@447 $generated@@564 $generated@@565)) (forall (($generated@@566 T@U) ) (!  (=> (and (= (type $generated@@566) $generated@@150) ($generated@@0 ($generated@@83 ($generated@@336 $generated@@563) $generated@@566))) (and ($generated@@246 ($generated@@83 ($generated@@422 $generated@@563) $generated@@566) $generated@@565) ($generated@@246 $generated@@566 $generated@@564)))
 :pattern ( ($generated@@83 ($generated@@422 $generated@@563) $generated@@566))
 :pattern ( ($generated@@83 ($generated@@336 $generated@@563) $generated@@566))
))))
 :pattern ( ($generated@@137 $generated@@563 ($generated@@447 $generated@@564 $generated@@565)))
)))
(assert (forall (($generated@@567 T@U) ($generated@@568 T@U) ($generated@@569 T@U) ) (!  (=> (and (and (= (type $generated@@567) ($generated@@356 $generated@@150 $generated@@150)) (= (type $generated@@568) $generated@@66)) (= (type $generated@@569) $generated@@66)) (= ($generated@@137 $generated@@567 ($generated@@455 $generated@@568 $generated@@569)) (forall (($generated@@570 T@U) ) (!  (=> (and (= (type $generated@@570) $generated@@150) ($generated@@0 ($generated@@83 ($generated@@354 $generated@@567) $generated@@570))) (and ($generated@@246 ($generated@@83 ($generated@@430 $generated@@567) $generated@@570) $generated@@569) ($generated@@246 $generated@@570 $generated@@568)))
 :pattern ( ($generated@@83 ($generated@@430 $generated@@567) $generated@@570))
 :pattern ( ($generated@@83 ($generated@@354 $generated@@567) $generated@@570))
))))
 :pattern ( ($generated@@137 $generated@@567 ($generated@@455 $generated@@568 $generated@@569)))
)))
(assert (forall (($generated@@573 T@U) ($generated@@574 T@U) ) (!  (=> (and (= (type $generated@@573) $generated@@150) (= (type $generated@@574) $generated@@150)) (< ($generated@@571 $generated@@573) ($generated@@572 ($generated@@245 $generated@@573 $generated@@574))))
 :pattern ( ($generated@@245 $generated@@573 $generated@@574))
)))
(assert (forall (($generated@@575 T@U) ($generated@@576 T@U) ) (!  (=> (and (= (type $generated@@575) $generated@@150) (= (type $generated@@576) $generated@@150)) (< ($generated@@571 $generated@@576) ($generated@@572 ($generated@@245 $generated@@575 $generated@@576))))
 :pattern ( ($generated@@245 $generated@@575 $generated@@576))
)))
(assert (forall (($generated@@577 T@U) ($generated@@578 T@U) ($generated@@579 T@U) ) (!  (=> (and (and (and (= (type $generated@@577) $generated@@150) (= (type $generated@@578) $generated@@66)) (= (type $generated@@579) $generated@@66)) ($generated@@246 $generated@@577 ($generated@@447 $generated@@578 $generated@@579))) (and (= ($generated@@321 ($generated@@378 ($generated@@338 $generated@@150 $generated@@150) $generated@@577)) $generated@@577) ($generated@@137 ($generated@@378 ($generated@@338 $generated@@150 $generated@@150) $generated@@577) ($generated@@447 $generated@@578 $generated@@579))))
 :pattern ( ($generated@@246 $generated@@577 ($generated@@447 $generated@@578 $generated@@579)))
)))
(assert (forall (($generated@@580 T@U) ($generated@@581 T@U) ($generated@@582 T@U) ) (!  (=> (and (and (and (= (type $generated@@580) $generated@@150) (= (type $generated@@581) $generated@@66)) (= (type $generated@@582) $generated@@66)) ($generated@@246 $generated@@580 ($generated@@455 $generated@@581 $generated@@582))) (and (= ($generated@@321 ($generated@@378 ($generated@@356 $generated@@150 $generated@@150) $generated@@580)) $generated@@580) ($generated@@137 ($generated@@378 ($generated@@356 $generated@@150 $generated@@150) $generated@@580) ($generated@@455 $generated@@581 $generated@@582))))
 :pattern ( ($generated@@246 $generated@@580 ($generated@@455 $generated@@581 $generated@@582)))
)))
(assert (forall (($generated@@583 T@U) ($generated@@584 T@U) ($generated@@585 T@U) ) (!  (=> (and (and (and (= (type $generated@@583) $generated@@66) (= (type $generated@@584) $generated@@66)) (= (type $generated@@585) $generated@@150)) ($generated@@246 $generated@@585 ($generated@@140 $generated@@583 $generated@@584))) (and (= ($generated@@321 ($generated@@378 $generated@@141 $generated@@585)) $generated@@585) ($generated@@137 ($generated@@378 $generated@@141 $generated@@585) ($generated@@140 $generated@@583 $generated@@584))))
 :pattern ( ($generated@@246 $generated@@585 ($generated@@140 $generated@@583 $generated@@584)))
)))
(assert (forall (($generated@@586 T@U) ) (! (let (($generated@@587 (type $generated@@586)))
 (not ($generated@@0 ($generated@@83 ($generated@@469 $generated@@587) $generated@@586))))
 :pattern ( (let (($generated@@587 (type $generated@@586)))
($generated@@83 ($generated@@469 $generated@@587) $generated@@586)))
)))
(assert (forall (($generated@@589 T@U) ) (! (= (type ($generated@@588 $generated@@589)) $generated@@71)
 :pattern ( ($generated@@588 $generated@@589))
)))
(assert (forall (($generated@@590 T@U) ($generated@@591 T@U) ) (!  (=> (and (= (type $generated@@590) $generated@@66) (= (type $generated@@591) $generated@@66)) (and (= ($generated@@74 ($generated@@140 $generated@@590 $generated@@591)) $generated@@62) (= ($generated@@588 ($generated@@140 $generated@@590 $generated@@591)) $generated@@64)))
 :pattern ( ($generated@@140 $generated@@590 $generated@@591))
)))
(assert  (and (forall (($generated@@594 T@U) ) (! (let (($generated@@595 ($generated@@159 (type $generated@@594))))
(= (type ($generated@@592 $generated@@594)) ($generated@@157 $generated@@595)))
 :pattern ( ($generated@@592 $generated@@594))
)) (forall (($generated@@596 T@U) ) (! (let (($generated@@597 ($generated@@159 (type $generated@@596))))
(= (type ($generated@@593 $generated@@596)) $generated@@597))
 :pattern ( ($generated@@593 $generated@@596))
))))
(assert (forall (($generated@@598 T@U) ($generated@@599 T@U) ) (! (let (($generated@@600 (type $generated@@599)))
 (=> (= (type $generated@@598) ($generated@@157 $generated@@600)) (and (= ($generated@@592 ($generated@@156 $generated@@598 $generated@@599)) $generated@@598) (= ($generated@@593 ($generated@@156 $generated@@598 $generated@@599)) $generated@@599))))
 :pattern ( ($generated@@156 $generated@@598 $generated@@599))
)))
(assert (forall (($generated@@601 T@U) ) (!  (=> (= (type $generated@@601) $generated@@141) (= ($generated@@571 ($generated@@321 $generated@@601)) ($generated@@572 $generated@@601)))
 :pattern ( ($generated@@571 ($generated@@321 $generated@@601)))
)))
(assert (forall (($generated@@602 T@U) ) (!  (=> (and (= (type $generated@@602) $generated@@150) ($generated@@246 $generated@@602 ($generated@@77 0))) (and (= ($generated@@321 ($generated@@378 $generated@@2 $generated@@602)) $generated@@602) ($generated@@137 ($generated@@378 ($generated@@78 $generated@@150 $generated@@4) $generated@@602) ($generated@@77 0))))
 :pattern ( ($generated@@246 $generated@@602 ($generated@@77 0)))
)))
(assert (forall (($generated@@603 T@U) ($generated@@604 T@U) ) (!  (=> (and (and (= (type $generated@@603) $generated@@150) (= (type $generated@@604) $generated@@66)) ($generated@@246 $generated@@603 ($generated@@258 $generated@@604))) (and (= ($generated@@321 ($generated@@378 ($generated@@78 $generated@@150 $generated@@4) $generated@@603)) $generated@@603) ($generated@@137 ($generated@@378 ($generated@@78 $generated@@150 $generated@@4) $generated@@603) ($generated@@258 $generated@@604))))
 :pattern ( ($generated@@246 $generated@@603 ($generated@@258 $generated@@604)))
)))
(assert (forall (($generated@@605 T@U) ($generated@@606 T@U) ) (!  (=> (and (and (= (type $generated@@605) $generated@@150) (= (type $generated@@606) $generated@@66)) ($generated@@246 $generated@@605 ($generated@@263 $generated@@606))) (and (= ($generated@@321 ($generated@@378 ($generated@@78 $generated@@150 $generated@@4) $generated@@605)) $generated@@605) ($generated@@137 ($generated@@378 ($generated@@78 $generated@@150 $generated@@4) $generated@@605) ($generated@@263 $generated@@606))))
 :pattern ( ($generated@@246 $generated@@605 ($generated@@263 $generated@@606)))
)))
(assert (forall (($generated@@607 T@U) ($generated@@608 T@U) ) (!  (=> (and (and (= (type $generated@@607) $generated@@150) (= (type $generated@@608) $generated@@66)) ($generated@@246 $generated@@607 ($generated@@172 $generated@@608))) (and (= ($generated@@321 ($generated@@378 ($generated@@78 $generated@@150 $generated@@2) $generated@@607)) $generated@@607) ($generated@@137 ($generated@@378 ($generated@@78 $generated@@150 $generated@@2) $generated@@607) ($generated@@172 $generated@@608))))
 :pattern ( ($generated@@246 $generated@@607 ($generated@@172 $generated@@608)))
)))
(assert (forall (($generated@@609 T@U) ($generated@@610 T@U) ) (!  (=> (and (and (= (type $generated@@609) $generated@@150) (= (type $generated@@610) $generated@@66)) ($generated@@246 $generated@@609 ($generated@@274 $generated@@610))) (and (= ($generated@@321 ($generated@@378 ($generated@@157 $generated@@150) $generated@@609)) $generated@@609) ($generated@@137 ($generated@@378 ($generated@@157 $generated@@150) $generated@@609) ($generated@@274 $generated@@610))))
 :pattern ( ($generated@@246 $generated@@609 ($generated@@274 $generated@@610)))
)))
(assert (= ($generated@@74 $generated@@134) $generated@@63))
(assert (= ($generated@@588 $generated@@134) $generated@@65))
(assert (forall (($generated@@611 T@U) ($generated@@612 Int) ($generated@@613 Int) ) (! (let (($generated@@614 ($generated@@159 (type $generated@@611))))
 (=> (= (type $generated@@611) ($generated@@157 $generated@@614)) (=> (and (and (<= 0 $generated@@612) (<= $generated@@612 $generated@@613)) (< $generated@@613 ($generated@@158 $generated@@611))) (= ($generated@@279 ($generated@@155 $generated@@611 $generated@@612) (- $generated@@613 $generated@@612)) ($generated@@279 $generated@@611 $generated@@613)))))
 :weight 25
 :pattern ( ($generated@@279 $generated@@611 $generated@@613) ($generated@@155 $generated@@611 $generated@@612))
)))
(assert (forall (($generated@@615 T@U) ($generated@@616 T@U) ($generated@@617 T@U) ) (!  (=> (and (and (= (type $generated@@615) ($generated@@78 $generated@@150 $generated@@2)) (= (type $generated@@616) $generated@@66)) (= (type $generated@@617) ($generated@@78 $generated@@79 $generated@@80))) (= ($generated@@76 $generated@@615 ($generated@@172 $generated@@616) $generated@@617) (forall (($generated@@618 T@U) ) (!  (=> (and (= (type $generated@@618) $generated@@150) (< 0 ($generated ($generated@@83 $generated@@615 $generated@@618)))) ($generated@@288 $generated@@618 $generated@@616 $generated@@617))
 :pattern ( ($generated@@83 $generated@@615 $generated@@618))
))))
 :pattern ( ($generated@@76 $generated@@615 ($generated@@172 $generated@@616) $generated@@617))
)))
(assert (forall (($generated@@619 T@U) ($generated@@620 Int) ($generated@@621 Int) ) (! (let (($generated@@622 ($generated@@159 (type $generated@@619))))
 (=> (= (type $generated@@619) ($generated@@157 $generated@@622)) (=> (and (and (<= 0 $generated@@620) (<= 0 $generated@@621)) (<= (+ $generated@@620 $generated@@621) ($generated@@158 $generated@@619))) (= ($generated@@155 ($generated@@155 $generated@@619 $generated@@620) $generated@@621) ($generated@@155 $generated@@619 (+ $generated@@620 $generated@@621))))))
 :pattern ( ($generated@@155 ($generated@@155 $generated@@619 $generated@@620) $generated@@621))
)))
(assert (forall (($generated@@623 T@U) ($generated@@624 T@U) ($generated@@625 T@U) ) (!  (=> (and (and (and (= (type $generated@@623) $generated@@141) (= (type $generated@@624) $generated@@66)) (= (type $generated@@625) ($generated@@78 $generated@@79 $generated@@80))) (and ($generated@@287 $generated@@625) (and ($generated@@139 $generated@@623) (exists (($generated@@626 T@U) ) (!  (and (= (type $generated@@626) $generated@@66) ($generated@@76 $generated@@623 ($generated@@140 $generated@@624 $generated@@626) $generated@@625))
 :pattern ( ($generated@@76 $generated@@623 ($generated@@140 $generated@@624 $generated@@626) $generated@@625))
))))) ($generated@@288 ($generated@@148 $generated@@623) $generated@@624 $generated@@625))
 :pattern ( ($generated@@288 ($generated@@148 $generated@@623) $generated@@624 $generated@@625))
)))
(assert (forall (($generated@@627 T@U) ($generated@@628 T@U) ($generated@@629 T@U) ) (!  (=> (and (and (and (= (type $generated@@627) $generated@@141) (= (type $generated@@628) $generated@@66)) (= (type $generated@@629) ($generated@@78 $generated@@79 $generated@@80))) (and ($generated@@287 $generated@@629) (and ($generated@@139 $generated@@627) (exists (($generated@@630 T@U) ) (!  (and (= (type $generated@@630) $generated@@66) ($generated@@76 $generated@@627 ($generated@@140 $generated@@630 $generated@@628) $generated@@629))
 :pattern ( ($generated@@76 $generated@@627 ($generated@@140 $generated@@630 $generated@@628) $generated@@629))
))))) ($generated@@288 ($generated@@149 $generated@@627) $generated@@628 $generated@@629))
 :pattern ( ($generated@@288 ($generated@@149 $generated@@627) $generated@@628 $generated@@629))
)))
(assert (forall (($generated@@631 T@U) ($generated@@632 T@U) ($generated@@633 Int) ) (! (let (($generated@@634 ($generated@@159 (type $generated@@631))))
 (=> (and (= (type $generated@@631) ($generated@@157 $generated@@634)) (= (type $generated@@632) ($generated@@157 $generated@@634))) (and (=> (< $generated@@633 ($generated@@158 $generated@@631)) (= ($generated@@279 ($generated@@234 $generated@@631 $generated@@632) $generated@@633) ($generated@@279 $generated@@631 $generated@@633))) (=> (<= ($generated@@158 $generated@@631) $generated@@633) (= ($generated@@279 ($generated@@234 $generated@@631 $generated@@632) $generated@@633) ($generated@@279 $generated@@632 (- $generated@@633 ($generated@@158 $generated@@631))))))))
 :pattern ( ($generated@@279 ($generated@@234 $generated@@631 $generated@@632) $generated@@633))
)))
(assert (forall (($generated@@635 T@U) ) (!  (=> (= (type $generated@@635) $generated@@2) (= ($generated@@137 $generated@@635 $generated@@134)  (and (<= ($generated@@268 0) ($generated $generated@@635)) (< ($generated $generated@@635) 256))))
 :pattern ( ($generated@@137 $generated@@635 $generated@@134))
)))
(assert (forall (($generated@@636 T@U) ($generated@@637 T@U) ) (!  (=> (and (= (type $generated@@636) $generated@@150) (= (type $generated@@637) $generated@@150)) (= ($generated@@245 ($generated@@270 $generated@@636) ($generated@@270 $generated@@637)) ($generated@@270 ($generated@@245 $generated@@636 $generated@@637))))
 :pattern ( ($generated@@245 ($generated@@270 $generated@@636) ($generated@@270 $generated@@637)))
)))
(assert (forall (($generated@@638 Int) ) (! (= ($generated@@321 ($generated@@8 ($generated@@268 $generated@@638))) ($generated@@270 ($generated@@321 ($generated@@8 $generated@@638))))
 :pattern ( ($generated@@321 ($generated@@8 ($generated@@268 $generated@@638))))
)))
(assert (forall (($generated@@639 T@U) ) (! (= ($generated@@321 ($generated@@270 $generated@@639)) ($generated@@270 ($generated@@321 $generated@@639)))
 :pattern ( ($generated@@321 ($generated@@270 $generated@@639)))
)))
(assert (forall (($generated@@640 T@U) ) (! (let (($generated@@641 ($generated@@159 (type $generated@@640))))
 (=> (and (= (type $generated@@640) ($generated@@157 $generated@@641)) (= ($generated@@158 $generated@@640) 0)) (= $generated@@640 ($generated@@312 $generated@@641))))
 :pattern ( ($generated@@158 $generated@@640))
)))
(assert (forall (($generated@@642 T@U) ($generated@@643 Int) ) (! (let (($generated@@644 ($generated@@159 (type $generated@@642))))
 (=> (and (= (type $generated@@642) ($generated@@157 $generated@@644)) (= $generated@@643 0)) (= ($generated@@233 $generated@@642 $generated@@643) ($generated@@312 $generated@@644))))
 :pattern ( ($generated@@233 $generated@@642 $generated@@643))
)))
(assert (forall (($generated@@645 T@U) ($generated@@646 T@U) ($generated@@647 T@U) ) (! (let (($generated@@648 (type $generated@@646)))
 (=> (and (and (= (type $generated@@645) ($generated@@78 $generated@@648 $generated@@2)) (= (type $generated@@647) $generated@@2)) (<= 0 ($generated $generated@@647))) (= ($generated@@330 ($generated@@84 $generated@@645 $generated@@646 $generated@@647)) (+ (- ($generated@@330 $generated@@645) ($generated ($generated@@83 $generated@@645 $generated@@646))) ($generated $generated@@647)))))
 :pattern ( ($generated@@330 ($generated@@84 $generated@@645 $generated@@646 $generated@@647)))
)))
(assert (forall (($generated@@649 T@U) ($generated@@650 T@U) ) (!  (=> (and (= (type $generated@@649) ($generated@@78 $generated@@79 $generated@@80)) (= (type $generated@@650) $generated@@2)) ($generated@@76 $generated@@650 $generated@@46 $generated@@649))
 :pattern ( ($generated@@76 $generated@@650 $generated@@46 $generated@@649))
)))
(assert (forall (($generated@@651 T@U) ($generated@@652 T@U) ) (!  (=> (and (= (type $generated@@651) ($generated@@78 $generated@@79 $generated@@80)) (= (type $generated@@652) $generated@@3)) ($generated@@76 $generated@@652 $generated@@47 $generated@@651))
 :pattern ( ($generated@@76 $generated@@652 $generated@@47 $generated@@651))
)))
(assert (forall (($generated@@653 T@U) ($generated@@654 T@U) ) (!  (=> (and (= (type $generated@@653) ($generated@@78 $generated@@79 $generated@@80)) (= (type $generated@@654) $generated@@4)) ($generated@@76 $generated@@654 $generated@@44 $generated@@653))
 :pattern ( ($generated@@76 $generated@@654 $generated@@44 $generated@@653))
)))
(assert (forall (($generated@@655 T@U) ($generated@@656 T@U) ) (!  (=> (and (= (type $generated@@655) ($generated@@78 $generated@@79 $generated@@80)) (= (type $generated@@656) $generated@@493)) ($generated@@76 $generated@@656 $generated@@45 $generated@@655))
 :pattern ( ($generated@@76 $generated@@656 $generated@@45 $generated@@655))
)))
(assert (forall (($generated@@657 T@U) ($generated@@658 T@U) ) (!  (=> (and (= (type $generated@@657) ($generated@@78 $generated@@79 $generated@@80)) (= (type $generated@@658) $generated@@150)) ($generated@@76 $generated@@658 $generated@@48 $generated@@657))
 :pattern ( ($generated@@76 $generated@@658 $generated@@48 $generated@@657))
)))
(assert (forall (($generated@@659 T@U) ($generated@@660 T@U) ) (!  (=> (and (= (type $generated@@659) ($generated@@157 $generated@@150)) (= (type $generated@@660) $generated@@66)) (= ($generated@@137 $generated@@659 ($generated@@274 $generated@@660)) (forall (($generated@@661 Int) ) (!  (=> (and (<= 0 $generated@@661) (< $generated@@661 ($generated@@158 $generated@@659))) ($generated@@246 ($generated@@279 $generated@@659 $generated@@661) $generated@@660))
 :pattern ( ($generated@@279 $generated@@659 $generated@@661))
))))
 :pattern ( ($generated@@137 $generated@@659 ($generated@@274 $generated@@660)))
)))
(assert (forall (($generated@@662 T@U) ($generated@@663 Int) ) (!  (=> (= (type $generated@@662) ($generated@@157 $generated@@150)) (=> (and (<= 0 $generated@@663) (< $generated@@663 ($generated@@158 $generated@@662))) (< ($generated@@572 ($generated@@378 $generated@@141 ($generated@@279 $generated@@662 $generated@@663))) ($generated@@305 $generated@@662))))
 :pattern ( ($generated@@572 ($generated@@378 $generated@@141 ($generated@@279 $generated@@662 $generated@@663))))
)))
(assert (forall (($generated@@664 T@U) ($generated@@665 T@U) ($generated@@666 T@U) ) (!  (=> (and (and (and (= (type $generated@@664) ($generated@@338 $generated@@150 $generated@@150)) (= (type $generated@@665) $generated@@66)) (= (type $generated@@666) $generated@@66)) ($generated@@137 $generated@@664 ($generated@@447 $generated@@665 $generated@@666))) (and (and ($generated@@137 ($generated@@336 $generated@@664) ($generated@@258 $generated@@665)) ($generated@@137 ($generated@@390 $generated@@664) ($generated@@258 $generated@@666))) ($generated@@137 ($generated@@421 $generated@@664) ($generated@@258 ($generated@@140 $generated@@665 $generated@@666)))))
 :pattern ( ($generated@@137 $generated@@664 ($generated@@447 $generated@@665 $generated@@666)))
)))
(assert (forall (($generated@@667 T@U) ($generated@@668 T@U) ($generated@@669 T@U) ) (!  (=> (and (and (and (= (type $generated@@667) ($generated@@356 $generated@@150 $generated@@150)) (= (type $generated@@668) $generated@@66)) (= (type $generated@@669) $generated@@66)) ($generated@@137 $generated@@667 ($generated@@455 $generated@@668 $generated@@669))) (and (and ($generated@@137 ($generated@@354 $generated@@667) ($generated@@263 $generated@@668)) ($generated@@137 ($generated@@401 $generated@@667) ($generated@@263 $generated@@669))) ($generated@@137 ($generated@@429 $generated@@667) ($generated@@263 ($generated@@140 $generated@@668 $generated@@669)))))
 :pattern ( ($generated@@137 $generated@@667 ($generated@@455 $generated@@668 $generated@@669)))
)))
(assert (forall (($generated@@670 T@U) ) (!  (=> (= (type $generated@@670) $generated@@2) ($generated@@137 $generated@@670 $generated@@46))
 :pattern ( ($generated@@137 $generated@@670 $generated@@46))
)))
(assert (forall (($generated@@671 T@U) ) (!  (=> (= (type $generated@@671) $generated@@3) ($generated@@137 $generated@@671 $generated@@47))
 :pattern ( ($generated@@137 $generated@@671 $generated@@47))
)))
(assert (forall (($generated@@672 T@U) ) (!  (=> (= (type $generated@@672) $generated@@4) ($generated@@137 $generated@@672 $generated@@44))
 :pattern ( ($generated@@137 $generated@@672 $generated@@44))
)))
(assert (forall (($generated@@673 T@U) ) (!  (=> (= (type $generated@@673) $generated@@493) ($generated@@137 $generated@@673 $generated@@45))
 :pattern ( ($generated@@137 $generated@@673 $generated@@45))
)))
(assert (forall (($generated@@674 T@U) ) (!  (=> (= (type $generated@@674) $generated@@150) ($generated@@137 $generated@@674 $generated@@48))
 :pattern ( ($generated@@137 $generated@@674 $generated@@48))
)))
(push 1)
(declare-fun ControlFlow (Int Int) Int)
(declare-fun $generated@@675 () T@U)
(declare-fun $generated@@676 () T@U)
(declare-fun $generated@@677 () T@U)
(declare-fun $generated@@678 () T@U)
(declare-fun $generated@@679 (T@U) Bool)
(declare-fun $generated@@680 () Int)
(assert  (and (and (and (= (type $generated@@675) ($generated@@179 $generated@@79 $generated@@4)) (= (type $generated@@676) $generated@@79)) (= (type $generated@@677) ($generated@@78 $generated@@79 $generated@@80))) (= (type $generated@@678) ($generated@@157 $generated@@150))))
(set-option :timeout 0)
(set-option :rlimit 0)
(assert (not
 (=> (= (ControlFlow 0 0) 3) (let (($generated@@681  (=> (and (= $generated@@675 ($generated@@178 $generated@@676 $generated@@677 $generated@@60 false)) (= (ControlFlow 0 2) (- 0 1))) ($generated@@300 ($generated@@155 ($generated@@233 $generated@@678 ($generated@@268 25)) ($generated@@268 0)) ($generated@@234 ($generated@@156 ($generated@@312 $generated@@150) ($generated@@279 $generated@@678 ($generated@@268 0))) ($generated@@155 ($generated@@233 $generated@@678 ($generated@@268 25)) ($generated@@268 1)))))))
(let (($generated@@682  (=> (and ($generated@@287 $generated@@677) ($generated@@679 $generated@@677)) (=> (and (and (and ($generated@@137 $generated@@678 ($generated@@274 $generated@@134)) ($generated@@76 $generated@@678 ($generated@@274 $generated@@134) $generated@@677)) (= 1 $generated@@680)) (and (> ($generated@@158 $generated@@678) 25) (= (ControlFlow 0 3) 2))) $generated@@681))))
$generated@@682)))
))
(check-sat)
(pop 1)
; Valid
(get-info :rlimit)
