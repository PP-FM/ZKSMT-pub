(set-option :print-success false)
(set-info :smt-lib-version 2.6)
(set-option :auto_config false)
(set-option :type_check true)
(set-option :smt.case_split 3)
(set-option :smt.qi.eager_threshold 100)
(set-option :smt.delay_units true)
(set-option :smt.arith.solver 2)
(set-option :smt.mbqi false)
(set-option :model.compact false)
(set-option :model.v2 true)
(set-option :pp.bv_literals false)
; done setting options


(set-info :category "industrial")
(declare-sort |T@U| 0)
(declare-sort |T@T| 0)
(declare-fun real_pow (Real Real) Real)
(declare-fun UOrdering2 (|T@U| |T@U|) Bool)
(declare-fun UOrdering3 (|T@T| |T@U| |T@U|) Bool)
(declare-fun tickleBool (Bool) Bool)
(assert (and (tickleBool true) (tickleBool false)))
(declare-fun $generated (T@U) Int)
(declare-fun $generated@@0 (T@U) Bool)
(declare-fun $generated@@1 (T@T) Int)
(declare-fun $generated@@2 () T@T)
(declare-fun $generated@@3 () T@T)
(declare-fun $generated@@4 () T@T)
(declare-fun $generated@@5 () T@T)
(declare-fun $generated@@6 () T@T)
(declare-fun $generated@@7 () T@T)
(declare-fun $generated@@8 (Int) T@U)
(declare-fun type (T@U) T@T)
(declare-fun $generated@@9 (Real) T@U)
(declare-fun $generated@@10 (T@U) Real)
(declare-fun $generated@@11 (Bool) T@U)
(declare-fun $generated@@12 (RoundingMode) T@U)
(declare-fun $generated@@13 (T@U) RoundingMode)
(declare-fun $generated@@14 (String) T@U)
(declare-fun $generated@@15 (T@U) String)
(declare-fun $generated@@16 ((RegEx String)) T@U)
(declare-fun $generated@@17 (T@U) (RegEx String))
(declare-fun $generated@@44 () T@U)
(declare-fun $generated@@45 () T@U)
(declare-fun $generated@@46 () T@U)
(declare-fun $generated@@47 () T@U)
(declare-fun $generated@@48 () T@U)
(declare-fun $generated@@49 () T@U)
(declare-fun $generated@@50 () T@U)
(declare-fun $generated@@51 () T@U)
(declare-fun $generated@@52 () T@U)
(declare-fun $generated@@53 () T@U)
(declare-fun $generated@@54 () T@U)
(declare-fun $generated@@55 () T@U)
(declare-fun $generated@@56 () T@U)
(declare-fun $generated@@57 () T@U)
(declare-fun $generated@@58 () T@U)
(declare-fun $generated@@59 () T@U)
(declare-fun $generated@@60 () T@U)
(declare-fun $generated@@61 () T@U)
(declare-fun $generated@@62 () T@U)
(declare-fun $generated@@63 () T@U)
(declare-fun $generated@@64 () T@U)
(declare-fun $generated@@65 () T@U)
(declare-fun $generated@@66 () T@U)
(declare-fun $generated@@67 () T@U)
(declare-fun $generated@@68 () T@U)
(declare-fun $generated@@69 () T@U)
(declare-fun $generated@@70 () T@U)
(declare-fun $generated@@71 () T@U)
(declare-fun $generated@@72 () T@T)
(declare-fun $generated@@73 () T@T)
(declare-fun $generated@@74 (T@T) T@T)
(declare-fun $generated@@75 (T@T) T@T)
(declare-fun $generated@@76 () T@T)
(declare-fun $generated@@77 () T@T)
(declare-fun $generated@@80 (T@U) T@U)
(declare-fun $generated@@82 (T@U T@U T@U) Bool)
(declare-fun $generated@@83 (Int) T@U)
(declare-fun $generated@@84 (T@T T@T) T@T)
(declare-fun $generated@@85 () T@T)
(declare-fun $generated@@86 () T@T)
(declare-fun $generated@@87 (T@T) T@T)
(declare-fun $generated@@88 (T@T) T@T)
(declare-fun $generated@@89 (T@U T@U) T@U)
(declare-fun $generated@@90 (T@U T@U T@U) T@U)
(declare-fun $generated@@91 (T@U T@U) T@U)
(declare-fun $generated@@92 (T@U T@U T@U) T@U)
(declare-fun $generated@@140 () T@U)
(declare-fun $generated@@143 (T@U T@U) Bool)
(declare-fun $generated@@145 (T@U) Bool)
(declare-fun $generated@@146 (T@U T@U) T@U)
(declare-fun $generated@@147 () T@T)
(declare-fun $generated@@153 (T@U T@U) Bool)
(declare-fun $generated@@154 (T@U) T@U)
(declare-fun $generated@@155 (T@U) T@U)
(declare-fun $generated@@156 () T@T)
(declare-fun $generated@@161 (T@U) T@U)
(declare-fun $generated@@162 (T@U) Bool)
(declare-fun $generated@@166 (T@U T@U T@U) T@U)
(declare-fun $generated@@167 (T@U T@U T@U Bool) T@U)
(declare-fun $generated@@168 (T@T T@T) T@T)
(declare-fun $generated@@169 (T@T) T@T)
(declare-fun $generated@@170 (T@T) T@T)
(declare-fun $generated@@171 (T@U T@U T@U T@U) T@U)
(declare-fun $generated@@222 (T@U T@U) T@U)
(declare-fun $generated@@223 () T@T)
(declare-fun $generated@@224 (T@U T@U) Bool)
(declare-fun $generated@@234 (T@U T@U) T@U)
(declare-fun $generated@@243 (T@U) T@U)
(declare-fun $generated@@248 (T@U) T@U)
(declare-fun $generated@@253 (Int) Int)
(declare-fun $generated@@255 (T@U) T@U)
(declare-fun $generated@@259 (T@U T@U T@U T@U T@U) T@U)
(declare-fun $generated@@260 () T@U)
(declare-fun $generated@@261 (T@U) Bool)
(declare-fun $generated@@262 (T@U T@U) Bool)
(declare-fun $generated@@263 (T@T) T@U)
(declare-fun $generated@@275 (T@U T@U T@U) Bool)
(declare-fun $generated@@281 (T@U) T@U)
(declare-fun $generated@@287 (T@T) T@U)
(declare-fun $generated@@288 (T@U) Int)
(declare-fun $generated@@289 (T@T) T@T)
(declare-fun $generated@@290 (T@T) T@T)
(declare-fun $generated@@296 (T@U) T@U)
(declare-fun $generated@@301 (T@U) Int)
(declare-fun $generated@@302 (T@T) T@U)
(declare-fun $generated@@307 (T@U) T@U)
(declare-fun $generated@@308 (T@T T@T) T@U)
(declare-fun $generated@@309 (T@T T@T) T@T)
(declare-fun $generated@@310 (T@T) T@T)
(declare-fun $generated@@311 (T@T) T@T)
(declare-fun $generated@@325 (T@U) T@U)
(declare-fun $generated@@326 (T@T T@T) T@U)
(declare-fun $generated@@327 (T@T T@T) T@T)
(declare-fun $generated@@328 (T@T) T@T)
(declare-fun $generated@@329 (T@T) T@T)
(declare-fun $generated@@347 (T@U T@U) T@U)
(declare-fun $generated@@354 (T@U T@U) T@U)
(declare-fun $generated@@364 (T@U T@U T@U T@U T@U) T@U)
(declare-fun $generated@@365 (T@U T@U T@U) T@U)
(declare-fun $generated@@366 (T@T T@T T@T) T@T)
(declare-fun $generated@@367 (T@U T@U T@U) T@U)
(declare-fun $generated@@368 (T@T) T@T)
(declare-fun $generated@@369 (T@T) T@T)
(declare-fun $generated@@370 (T@T) T@T)
(declare-fun $generated@@371 (T@U T@U T@U T@U) T@U)
(declare-fun $generated@@433 (T@T T@U) T@U)
(declare-fun $generated@@441 (T@U) T@U)
(declare-fun $generated@@452 (T@U) T@U)
(declare-fun $generated@@462 (T@U T@U T@U T@U T@U) Bool)
(declare-fun $generated@@468 () T@U)
(declare-fun $generated@@485 (T@U) T@U)
(declare-fun $generated@@486 (T@U) T@U)
(declare-fun $generated@@493 (T@U) T@U)
(declare-fun $generated@@494 (T@U) T@U)
(declare-fun $generated@@519 (T@U T@U) T@U)
(declare-fun $generated@@527 (T@U T@U) T@U)
(declare-fun $generated@@543 (T@T) T@U)
(declare-fun $generated@@567 () T@T)
(declare-fun $generated@@582 (T@U) T@U)
(declare-fun $generated@@586 (T@U) T@U)
(declare-fun $generated@@592 (T@U) T@U)
(declare-fun $generated@@596 (T@U) T@U)
(declare-fun $generated@@602 (T@U) T@U)
(declare-fun $generated@@606 (T@U) T@U)
(declare-fun $generated@@610 (T@U) T@U)
(declare-fun $generated@@614 (T@U) T@U)
(declare-fun $generated@@618 (T@U) T@U)
(declare-fun $generated@@622 (T@U) T@U)
(declare-fun $generated@@628 (T@U) T@U)
(declare-fun $generated@@632 (T@U) T@U)
(declare-fun $generated@@640 (T@U) T@U)
(declare-fun $generated@@641 (T@U Int) T@U)
(declare-fun $generated@@650 (T@U) Int)
(declare-fun $generated@@652 (T@U) T@U)
(declare-fun $generated@@656 (T@U) T@U)
(declare-fun $generated@@660 (T@U) T@U)
(declare-fun $generated@@664 (T@U) T@U)
(declare-fun $generated@@678 (T@U) Int)
(declare-fun $generated@@679 (T@U) Int)
(declare-fun $generated@@714 (T@U) T@U)
(declare-fun $generated@@774 (T@U) Int)
(assert  (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (= ($generated@@1 $generated@@2) 0) (= ($generated@@1 $generated@@3) 1)) (= ($generated@@1 $generated@@4) 2)) (= ($generated@@1 $generated@@5) 3)) (= ($generated@@1 $generated@@6) 4)) (= ($generated@@1 $generated@@7) 5)) (forall (($generated@@18 Int) ) (! (= ($generated ($generated@@8 $generated@@18)) $generated@@18)
 :pattern ( ($generated@@8 $generated@@18))
))) (forall (($generated@@19 T@U) ) (!  (=> (= (type $generated@@19) $generated@@2) (= ($generated@@8 ($generated $generated@@19)) $generated@@19))
 :pattern ( ($generated $generated@@19))
))) (forall (($generated@@20 Int) ) (! (= (type ($generated@@8 $generated@@20)) $generated@@2)
 :pattern ( ($generated@@8 $generated@@20))
))) (forall (($generated@@21 Real) ) (! (= ($generated@@10 ($generated@@9 $generated@@21)) $generated@@21)
 :pattern ( ($generated@@9 $generated@@21))
))) (forall (($generated@@22 T@U) ) (!  (=> (= (type $generated@@22) $generated@@3) (= ($generated@@9 ($generated@@10 $generated@@22)) $generated@@22))
 :pattern ( ($generated@@10 $generated@@22))
))) (forall (($generated@@23 Real) ) (! (= (type ($generated@@9 $generated@@23)) $generated@@3)
 :pattern ( ($generated@@9 $generated@@23))
))) (forall (($generated@@24 Bool) ) (! (= ($generated@@0 ($generated@@11 $generated@@24)) $generated@@24)
 :pattern ( ($generated@@11 $generated@@24))
))) (forall (($generated@@25 T@U) ) (!  (=> (= (type $generated@@25) $generated@@4) (= ($generated@@11 ($generated@@0 $generated@@25)) $generated@@25))
 :pattern ( ($generated@@0 $generated@@25))
))) (forall (($generated@@26 Bool) ) (! (= (type ($generated@@11 $generated@@26)) $generated@@4)
 :pattern ( ($generated@@11 $generated@@26))
))) (forall (($generated@@27 RoundingMode) ) (! (= ($generated@@13 ($generated@@12 $generated@@27)) $generated@@27)
 :pattern ( ($generated@@12 $generated@@27))
))) (forall (($generated@@28 T@U) ) (!  (=> (= (type $generated@@28) $generated@@5) (= ($generated@@12 ($generated@@13 $generated@@28)) $generated@@28))
 :pattern ( ($generated@@13 $generated@@28))
))) (forall (($generated@@29 RoundingMode) ) (! (= (type ($generated@@12 $generated@@29)) $generated@@5)
 :pattern ( ($generated@@12 $generated@@29))
))) (forall (($generated@@30 String) ) (! (= ($generated@@15 ($generated@@14 $generated@@30)) $generated@@30)
 :pattern ( ($generated@@14 $generated@@30))
))) (forall (($generated@@31 T@U) ) (!  (=> (= (type $generated@@31) $generated@@6) (= ($generated@@14 ($generated@@15 $generated@@31)) $generated@@31))
 :pattern ( ($generated@@15 $generated@@31))
))) (forall (($generated@@32 String) ) (! (= (type ($generated@@14 $generated@@32)) $generated@@6)
 :pattern ( ($generated@@14 $generated@@32))
))) (forall (($generated@@33 (RegEx String)) ) (! (= ($generated@@17 ($generated@@16 $generated@@33)) $generated@@33)
 :pattern ( ($generated@@16 $generated@@33))
))) (forall (($generated@@34 T@U) ) (!  (=> (= (type $generated@@34) $generated@@7) (= ($generated@@16 ($generated@@17 $generated@@34)) $generated@@34))
 :pattern ( ($generated@@17 $generated@@34))
))) (forall (($generated@@35 (RegEx String)) ) (! (= (type ($generated@@16 $generated@@35)) $generated@@7)
 :pattern ( ($generated@@16 $generated@@35))
))))
(assert (forall (($generated@@36 T@U) ) (! (UOrdering2 $generated@@36 $generated@@36)
 :no-pattern ($generated $generated@@36)
 :no-pattern ($generated@@0 $generated@@36)
)))
(assert (forall (($generated@@37 T@U) ($generated@@38 T@U) ($generated@@39 T@U) ) (! (let (($generated@@40 (type $generated@@37)))
 (=> (and (and (= (type $generated@@38) $generated@@40) (= (type $generated@@39) $generated@@40)) (and (UOrdering2 $generated@@37 $generated@@38) (UOrdering2 $generated@@38 $generated@@39))) (UOrdering2 $generated@@37 $generated@@39)))
 :pattern ( (UOrdering2 $generated@@37 $generated@@38) (UOrdering2 $generated@@38 $generated@@39))
)))
(assert (forall (($generated@@41 T@U) ($generated@@42 T@U) ) (! (let (($generated@@43 (type $generated@@41)))
 (=> (= (type $generated@@42) $generated@@43) (=> (and (UOrdering2 $generated@@41 $generated@@42) (UOrdering2 $generated@@42 $generated@@41)) (= $generated@@41 $generated@@42))))
 :pattern ( (UOrdering2 $generated@@41 $generated@@42) (UOrdering2 $generated@@42 $generated@@41))
)))
(assert  (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (= ($generated@@1 $generated@@72) 6) (= (type $generated@@44) $generated@@72)) (= (type $generated@@45) $generated@@72)) (= (type $generated@@46) $generated@@72)) (= (type $generated@@47) $generated@@72)) (= (type $generated@@48) $generated@@72)) (= ($generated@@1 $generated@@73) 7)) (= (type $generated@@49) $generated@@73)) (= (type $generated@@50) $generated@@73)) (= (type $generated@@51) $generated@@73)) (= (type $generated@@52) $generated@@73)) (= (type $generated@@53) $generated@@73)) (= (type $generated@@54) $generated@@73)) (= (type $generated@@55) $generated@@73)) (= (type $generated@@56) $generated@@73)) (= (type $generated@@57) $generated@@73)) (= (type $generated@@58) $generated@@73)) (= (type $generated@@59) $generated@@73)) (forall (($generated@@78 T@T) ) (= ($generated@@1 ($generated@@74 $generated@@78)) 8))) (forall (($generated@@79 T@T) ) (! (= ($generated@@75 ($generated@@74 $generated@@79)) $generated@@79)
 :pattern ( ($generated@@74 $generated@@79))
))) (= (type $generated@@60) ($generated@@74 $generated@@4))) (= (type $generated@@61) $generated@@73)) (= (type $generated@@62) $generated@@73)) (= (type $generated@@63) $generated@@73)) (= (type $generated@@64) $generated@@73)) (= ($generated@@1 $generated@@76) 9)) (= (type $generated@@65) $generated@@76)) (= (type $generated@@66) $generated@@73)) (= ($generated@@1 $generated@@77) 10)) (= (type $generated@@67) $generated@@77)) (= (type $generated@@68) $generated@@77)) (= (type $generated@@69) $generated@@77)) (= (type $generated@@70) $generated@@77)) (= (type $generated@@71) $generated@@77)))
(assert (distinct $generated@@44 $generated@@45 $generated@@46 $generated@@47 $generated@@48 $generated@@49 $generated@@50 $generated@@51 $generated@@52 $generated@@53 $generated@@54 $generated@@55 $generated@@56 $generated@@57 $generated@@58 $generated@@59 $generated@@60 $generated@@61 $generated@@62 $generated@@63 $generated@@64 $generated@@65 $generated@@66 $generated@@67 $generated@@68 $generated@@69 $generated@@70 $generated@@71)
)
(assert (forall (($generated@@81 T@U) ) (! (= (type ($generated@@80 $generated@@81)) $generated@@73)
 :pattern ( ($generated@@80 $generated@@81))
)))
(assert (= ($generated@@80 $generated@@44) $generated@@49))
(assert (= ($generated@@80 $generated@@45) $generated@@50))
(assert (= ($generated@@80 $generated@@46) $generated@@51))
(assert (= ($generated@@80 $generated@@47) $generated@@52))
(assert (= ($generated@@80 $generated@@48) $generated@@53))
(assert  (and (and (and (and (and (and (and (and (and (and (and (and (and (forall (($generated@@93 T@T) ($generated@@94 T@T) ) (= ($generated@@1 ($generated@@84 $generated@@93 $generated@@94)) 11)) (forall (($generated@@95 T@T) ($generated@@96 T@T) ) (! (= ($generated@@87 ($generated@@84 $generated@@95 $generated@@96)) $generated@@95)
 :pattern ( ($generated@@84 $generated@@95 $generated@@96))
))) (forall (($generated@@97 T@T) ($generated@@98 T@T) ) (! (= ($generated@@88 ($generated@@84 $generated@@97 $generated@@98)) $generated@@98)
 :pattern ( ($generated@@84 $generated@@97 $generated@@98))
))) (forall (($generated@@99 T@U) ($generated@@100 T@U) ) (! (let (($generated@@101 ($generated@@88 (type $generated@@99))))
(= (type ($generated@@89 $generated@@99 $generated@@100)) $generated@@101))
 :pattern ( ($generated@@89 $generated@@99 $generated@@100))
))) (forall (($generated@@102 T@U) ($generated@@103 T@U) ($generated@@104 T@U) ) (! (let (($generated@@105 (type $generated@@104)))
(let (($generated@@106 (type $generated@@103)))
(= (type ($generated@@90 $generated@@102 $generated@@103 $generated@@104)) ($generated@@84 $generated@@106 $generated@@105))))
 :pattern ( ($generated@@90 $generated@@102 $generated@@103 $generated@@104))
))) (forall (($generated@@107 T@U) ($generated@@108 T@U) ($generated@@109 T@U) ) (! (let (($generated@@110 ($generated@@88 (type $generated@@107))))
 (=> (= (type $generated@@109) $generated@@110) (= ($generated@@89 ($generated@@90 $generated@@107 $generated@@108 $generated@@109) $generated@@108) $generated@@109)))
 :weight 0
))) (and (forall (($generated@@111 T@U) ($generated@@112 T@U) ($generated@@113 T@U) ($generated@@114 T@U) ) (!  (or (= $generated@@113 $generated@@114) (= ($generated@@89 ($generated@@90 $generated@@112 $generated@@113 $generated@@111) $generated@@114) ($generated@@89 $generated@@112 $generated@@114)))
 :weight 0
)) (forall (($generated@@115 T@U) ($generated@@116 T@U) ($generated@@117 T@U) ($generated@@118 T@U) ) (!  (or true (= ($generated@@89 ($generated@@90 $generated@@116 $generated@@117 $generated@@115) $generated@@118) ($generated@@89 $generated@@116 $generated@@118)))
 :weight 0
)))) (= ($generated@@1 $generated@@85) 12)) (forall (($generated@@119 T@U) ($generated@@120 T@U) ) (! (let (($generated@@121 ($generated@@75 (type $generated@@120))))
(= (type ($generated@@91 $generated@@119 $generated@@120)) $generated@@121))
 :pattern ( ($generated@@91 $generated@@119 $generated@@120))
))) (= ($generated@@1 $generated@@86) 13)) (forall (($generated@@122 T@U) ($generated@@123 T@U) ($generated@@124 T@U) ) (! (= (type ($generated@@92 $generated@@122 $generated@@123 $generated@@124)) $generated@@86)
 :pattern ( ($generated@@92 $generated@@122 $generated@@123 $generated@@124))
))) (forall (($generated@@125 T@U) ($generated@@126 T@U) ($generated@@127 T@U) ) (! (let (($generated@@128 ($generated@@75 (type $generated@@126))))
 (=> (= (type $generated@@127) $generated@@128) (= ($generated@@91 ($generated@@92 $generated@@125 $generated@@126 $generated@@127) $generated@@126) $generated@@127)))
 :weight 0
))) (and (forall (($generated@@129 T@U) ($generated@@130 T@U) ($generated@@131 T@U) ($generated@@132 T@U) ) (!  (or (= $generated@@131 $generated@@132) (= ($generated@@91 ($generated@@92 $generated@@130 $generated@@131 $generated@@129) $generated@@132) ($generated@@91 $generated@@130 $generated@@132)))
 :weight 0
)) (forall (($generated@@133 T@U) ($generated@@134 T@U) ($generated@@135 T@U) ($generated@@136 T@U) ) (!  (or true (= ($generated@@91 ($generated@@92 $generated@@134 $generated@@135 $generated@@133) $generated@@136) ($generated@@91 $generated@@134 $generated@@136)))
 :weight 0
)))) (forall (($generated@@137 Int) ) (! (= (type ($generated@@83 $generated@@137)) $generated@@72)
 :pattern ( ($generated@@83 $generated@@137))
))))
(assert (forall (($generated@@138 T@U) ($generated@@139 T@U) ) (!  (=> (and (= (type $generated@@138) $generated@@2) (= (type $generated@@139) ($generated@@84 $generated@@85 $generated@@86))) ($generated@@82 $generated@@138 ($generated@@83 0) $generated@@139))
 :pattern ( ($generated@@82 $generated@@138 ($generated@@83 0) $generated@@139))
)))
(assert (= (type $generated@@140) $generated@@72))
(assert (forall (($generated@@141 T@U) ($generated@@142 T@U) ) (!  (=> (and (= (type $generated@@141) $generated@@2) (= (type $generated@@142) ($generated@@84 $generated@@85 $generated@@86))) ($generated@@82 $generated@@141 $generated@@140 $generated@@142))
 :pattern ( ($generated@@82 $generated@@141 $generated@@140 $generated@@142))
)))
(assert (forall (($generated@@144 T@U) ) (!  (=> (= (type $generated@@144) $generated@@2) ($generated@@143 $generated@@144 ($generated@@83 0)))
 :pattern ( ($generated@@143 $generated@@144 ($generated@@83 0)))
)))
(assert  (and (= ($generated@@1 $generated@@147) 14) (forall (($generated@@148 T@U) ($generated@@149 T@U) ) (! (= (type ($generated@@146 $generated@@148 $generated@@149)) $generated@@72)
 :pattern ( ($generated@@146 $generated@@148 $generated@@149))
))))
(assert (forall (($generated@@150 T@U) ($generated@@151 T@U) ($generated@@152 T@U) ) (!  (=> (and (and (and (= (type $generated@@150) $generated@@72) (= (type $generated@@151) $generated@@72)) (= (type $generated@@152) $generated@@147)) ($generated@@143 $generated@@152 ($generated@@146 $generated@@150 $generated@@151))) ($generated@@145 $generated@@152))
 :pattern ( ($generated@@145 $generated@@152) ($generated@@143 $generated@@152 ($generated@@146 $generated@@150 $generated@@151)))
)))
(assert  (and (and (= ($generated@@1 $generated@@156) 15) (forall (($generated@@157 T@U) ) (! (= (type ($generated@@154 $generated@@157)) $generated@@156)
 :pattern ( ($generated@@154 $generated@@157))
))) (forall (($generated@@158 T@U) ) (! (= (type ($generated@@155 $generated@@158)) $generated@@156)
 :pattern ( ($generated@@155 $generated@@158))
))))
(assert (forall (($generated@@159 T@U) ($generated@@160 T@U) ) (!  (=> (and (and (= (type $generated@@159) $generated@@147) (= (type $generated@@160) $generated@@147)) true) (= ($generated@@153 $generated@@159 $generated@@160)  (and (= ($generated@@154 $generated@@159) ($generated@@154 $generated@@160)) (= ($generated@@155 $generated@@159) ($generated@@155 $generated@@160)))))
 :pattern ( ($generated@@153 $generated@@159 $generated@@160))
)))
(assert (forall (($generated@@163 T@U) ) (! (= (type ($generated@@161 $generated@@163)) $generated@@72)
 :pattern ( ($generated@@161 $generated@@163))
)))
(assert (forall (($generated@@164 T@U) ($generated@@165 T@U) ) (!  (=> (and (and (= (type $generated@@164) ($generated@@84 $generated@@156 $generated@@2)) (= (type $generated@@165) $generated@@72)) ($generated@@143 $generated@@164 ($generated@@161 $generated@@165))) ($generated@@162 $generated@@164))
 :pattern ( ($generated@@143 $generated@@164 ($generated@@161 $generated@@165)))
)))
(assert  (and (and (and (and (and (and (and (forall (($generated@@172 T@T) ($generated@@173 T@T) ) (= ($generated@@1 ($generated@@168 $generated@@172 $generated@@173)) 16)) (forall (($generated@@174 T@T) ($generated@@175 T@T) ) (! (= ($generated@@169 ($generated@@168 $generated@@174 $generated@@175)) $generated@@174)
 :pattern ( ($generated@@168 $generated@@174 $generated@@175))
))) (forall (($generated@@176 T@T) ($generated@@177 T@T) ) (! (= ($generated@@170 ($generated@@168 $generated@@176 $generated@@177)) $generated@@177)
 :pattern ( ($generated@@168 $generated@@176 $generated@@177))
))) (forall (($generated@@178 T@U) ($generated@@179 T@U) ($generated@@180 T@U) ) (! (let (($generated@@181 ($generated@@170 (type $generated@@178))))
(= (type ($generated@@166 $generated@@178 $generated@@179 $generated@@180)) $generated@@181))
 :pattern ( ($generated@@166 $generated@@178 $generated@@179 $generated@@180))
))) (forall (($generated@@182 T@U) ($generated@@183 T@U) ($generated@@184 T@U) ($generated@@185 T@U) ) (! (let (($generated@@186 (type $generated@@185)))
(let (($generated@@187 (type $generated@@183)))
(= (type ($generated@@171 $generated@@182 $generated@@183 $generated@@184 $generated@@185)) ($generated@@168 $generated@@187 $generated@@186))))
 :pattern ( ($generated@@171 $generated@@182 $generated@@183 $generated@@184 $generated@@185))
))) (forall (($generated@@188 T@U) ($generated@@189 T@U) ($generated@@190 T@U) ($generated@@191 T@U) ) (! (let (($generated@@192 ($generated@@170 (type $generated@@188))))
 (=> (= (type $generated@@191) $generated@@192) (= ($generated@@166 ($generated@@171 $generated@@188 $generated@@189 $generated@@190 $generated@@191) $generated@@189 $generated@@190) $generated@@191)))
 :weight 0
))) (and (and (forall (($generated@@193 T@U) ($generated@@194 T@U) ($generated@@195 T@U) ($generated@@196 T@U) ($generated@@197 T@U) ($generated@@198 T@U) ) (!  (or (= $generated@@195 $generated@@197) (= ($generated@@166 ($generated@@171 $generated@@194 $generated@@195 $generated@@196 $generated@@193) $generated@@197 $generated@@198) ($generated@@166 $generated@@194 $generated@@197 $generated@@198)))
 :weight 0
)) (forall (($generated@@199 T@U) ($generated@@200 T@U) ($generated@@201 T@U) ($generated@@202 T@U) ($generated@@203 T@U) ($generated@@204 T@U) ) (!  (or (= $generated@@202 $generated@@204) (= ($generated@@166 ($generated@@171 $generated@@200 $generated@@201 $generated@@202 $generated@@199) $generated@@203 $generated@@204) ($generated@@166 $generated@@200 $generated@@203 $generated@@204)))
 :weight 0
))) (forall (($generated@@205 T@U) ($generated@@206 T@U) ($generated@@207 T@U) ($generated@@208 T@U) ($generated@@209 T@U) ($generated@@210 T@U) ) (!  (or true (= ($generated@@166 ($generated@@171 $generated@@206 $generated@@207 $generated@@208 $generated@@205) $generated@@209 $generated@@210) ($generated@@166 $generated@@206 $generated@@209 $generated@@210)))
 :weight 0
)))) (forall (($generated@@211 T@U) ($generated@@212 T@U) ($generated@@213 T@U) ($generated@@214 Bool) ) (! (= (type ($generated@@167 $generated@@211 $generated@@212 $generated@@213 $generated@@214)) ($generated@@168 $generated@@85 $generated@@4))
 :pattern ( ($generated@@167 $generated@@211 $generated@@212 $generated@@213 $generated@@214))
))))
(assert (forall (($generated@@215 T@U) ($generated@@216 T@U) ($generated@@217 T@U) ($generated@@218 Bool) ($generated@@219 T@U) ($generated@@220 T@U) ) (! (let (($generated@@221 ($generated@@75 (type $generated@@220))))
 (=> (and (and (and (and (= (type $generated@@215) $generated@@85) (= (type $generated@@216) ($generated@@84 $generated@@85 $generated@@86))) (= (type $generated@@217) ($generated@@74 $generated@@4))) (= (type $generated@@219) $generated@@85)) (= (type $generated@@220) ($generated@@74 $generated@@221))) (= ($generated@@0 ($generated@@166 ($generated@@167 $generated@@215 $generated@@216 $generated@@217 $generated@@218) $generated@@219 $generated@@220))  (=> (and (not (= $generated@@219 $generated@@215)) ($generated@@0 ($generated@@91 ($generated@@89 $generated@@216 $generated@@219) $generated@@217))) $generated@@218))))
 :pattern ( ($generated@@166 ($generated@@167 $generated@@215 $generated@@216 $generated@@217 $generated@@218) $generated@@219 $generated@@220))
)))
(assert  (and (= ($generated@@1 $generated@@223) 17) (forall (($generated@@225 T@U) ($generated@@226 T@U) ) (! (= (type ($generated@@222 $generated@@225 $generated@@226)) $generated@@72)
 :pattern ( ($generated@@222 $generated@@225 $generated@@226))
))))
(assert (forall (($generated@@227 T@U) ($generated@@228 T@U) ($generated@@229 T@U) ($generated@@230 T@U) ($generated@@231 T@U) ) (!  (=> (and (and (and (and (and (= (type $generated@@227) $generated@@223) (= (type $generated@@228) $generated@@72)) (= (type $generated@@229) $generated@@72)) (= (type $generated@@230) $generated@@72)) (= (type $generated@@231) $generated@@72)) (and (and ($generated@@143 $generated@@227 ($generated@@222 $generated@@228 $generated@@229)) (forall (($generated@@232 T@U) ) (!  (=> (and (= (type $generated@@232) $generated@@156) ($generated@@224 $generated@@232 $generated@@230)) ($generated@@224 $generated@@232 $generated@@228))
 :pattern ( ($generated@@224 $generated@@232 $generated@@230))
 :pattern ( ($generated@@224 $generated@@232 $generated@@228))
))) (forall (($generated@@233 T@U) ) (!  (=> (and (= (type $generated@@233) $generated@@156) ($generated@@224 $generated@@233 $generated@@229)) ($generated@@224 $generated@@233 $generated@@231))
 :pattern ( ($generated@@224 $generated@@233 $generated@@229))
 :pattern ( ($generated@@224 $generated@@233 $generated@@231))
)))) ($generated@@143 $generated@@227 ($generated@@222 $generated@@230 $generated@@231)))
 :pattern ( ($generated@@143 $generated@@227 ($generated@@222 $generated@@228 $generated@@229)) ($generated@@143 $generated@@227 ($generated@@222 $generated@@230 $generated@@231)))
)))
(assert (forall (($generated@@235 T@U) ($generated@@236 T@U) ) (! (= (type ($generated@@234 $generated@@235 $generated@@236)) $generated@@147)
 :pattern ( ($generated@@234 $generated@@235 $generated@@236))
)))
(assert (forall (($generated@@237 T@U) ($generated@@238 T@U) ($generated@@239 T@U) ($generated@@240 T@U) ) (!  (=> (and (and (and (= (type $generated@@237) $generated@@72) (= (type $generated@@238) $generated@@72)) (= (type $generated@@239) $generated@@156)) (= (type $generated@@240) $generated@@156)) (= ($generated@@143 ($generated@@234 $generated@@239 $generated@@240) ($generated@@146 $generated@@237 $generated@@238))  (and ($generated@@224 $generated@@239 $generated@@237) ($generated@@224 $generated@@240 $generated@@238))))
 :pattern ( ($generated@@143 ($generated@@234 $generated@@239 $generated@@240) ($generated@@146 $generated@@237 $generated@@238)))
)))
(assert (forall (($generated@@241 T@U) ($generated@@242 T@U) ) (!  (=> (and (= (type $generated@@241) $generated@@147) (= (type $generated@@242) $generated@@147)) (= ($generated@@153 $generated@@241 $generated@@242) (= $generated@@241 $generated@@242)))
 :pattern ( ($generated@@153 $generated@@241 $generated@@242))
)))
(assert (forall (($generated@@244 T@U) ) (! (= (type ($generated@@243 $generated@@244)) $generated@@72)
 :pattern ( ($generated@@243 $generated@@244))
)))
(assert (forall (($generated@@245 T@U) ($generated@@246 T@U) ) (!  (=> (and (= (type $generated@@245) ($generated@@84 $generated@@156 $generated@@4)) (= (type $generated@@246) $generated@@72)) (= ($generated@@143 $generated@@245 ($generated@@243 $generated@@246)) (forall (($generated@@247 T@U) ) (!  (=> (and (= (type $generated@@247) $generated@@156) ($generated@@0 ($generated@@89 $generated@@245 $generated@@247))) ($generated@@224 $generated@@247 $generated@@246))
 :pattern ( ($generated@@89 $generated@@245 $generated@@247))
))))
 :pattern ( ($generated@@143 $generated@@245 ($generated@@243 $generated@@246)))
)))
(assert (forall (($generated@@249 T@U) ) (! (= (type ($generated@@248 $generated@@249)) $generated@@72)
 :pattern ( ($generated@@248 $generated@@249))
)))
(assert (forall (($generated@@250 T@U) ($generated@@251 T@U) ) (!  (=> (and (= (type $generated@@250) ($generated@@84 $generated@@156 $generated@@4)) (= (type $generated@@251) $generated@@72)) (= ($generated@@143 $generated@@250 ($generated@@248 $generated@@251)) (forall (($generated@@252 T@U) ) (!  (=> (and (= (type $generated@@252) $generated@@156) ($generated@@0 ($generated@@89 $generated@@250 $generated@@252))) ($generated@@224 $generated@@252 $generated@@251))
 :pattern ( ($generated@@89 $generated@@250 $generated@@252))
))))
 :pattern ( ($generated@@143 $generated@@250 ($generated@@248 $generated@@251)))
)))
(assert (forall (($generated@@254 Int) ) (! (= ($generated@@253 $generated@@254) $generated@@254)
 :pattern ( ($generated@@253 $generated@@254))
)))
(assert (forall (($generated@@256 T@U) ) (! (let (($generated@@257 (type $generated@@256)))
(= (type ($generated@@255 $generated@@256)) $generated@@257))
 :pattern ( ($generated@@255 $generated@@256))
)))
(assert (forall (($generated@@258 T@U) ) (! (= ($generated@@255 $generated@@258) $generated@@258)
 :pattern ( ($generated@@255 $generated@@258))
)))
(assert  (and (and (forall (($generated@@264 T@U) ($generated@@265 T@U) ($generated@@266 T@U) ($generated@@267 T@U) ($generated@@268 T@U) ) (! (= (type ($generated@@259 $generated@@264 $generated@@265 $generated@@266 $generated@@267 $generated@@268)) ($generated@@84 $generated@@156 $generated@@4))
 :pattern ( ($generated@@259 $generated@@264 $generated@@265 $generated@@266 $generated@@267 $generated@@268))
)) (= (type $generated@@260) ($generated@@84 $generated@@85 $generated@@86))) (forall (($generated@@269 T@T) ) (! (= (type ($generated@@263 $generated@@269)) ($generated@@84 $generated@@269 $generated@@4))
 :pattern ( ($generated@@263 $generated@@269))
))))
(assert (forall (($generated@@270 T@U) ($generated@@271 T@U) ($generated@@272 T@U) ($generated@@273 T@U) ($generated@@274 T@U) ) (!  (=> (and (and (and (and (and (= (type $generated@@270) $generated@@72) (= (type $generated@@271) $generated@@72)) (= (type $generated@@272) ($generated@@84 $generated@@85 $generated@@86))) (= (type $generated@@273) $generated@@223)) (= (type $generated@@274) $generated@@156)) (and ($generated@@261 $generated@@272) (and ($generated@@224 $generated@@274 $generated@@270) ($generated@@143 $generated@@273 ($generated@@222 $generated@@270 $generated@@271))))) (= ($generated@@262 ($generated@@259 $generated@@270 $generated@@271 $generated@@260 $generated@@273 $generated@@274) ($generated@@263 $generated@@156)) ($generated@@262 ($generated@@259 $generated@@270 $generated@@271 $generated@@272 $generated@@273 $generated@@274) ($generated@@263 $generated@@156))))
 :pattern ( ($generated@@259 $generated@@270 $generated@@271 $generated@@260 $generated@@273 $generated@@274) ($generated@@261 $generated@@272))
 :pattern ( ($generated@@259 $generated@@270 $generated@@271 $generated@@272 $generated@@273 $generated@@274))
)))
(assert (forall (($generated@@276 T@U) ($generated@@277 T@U) ($generated@@278 T@U) ($generated@@279 T@U) ($generated@@280 T@U) ) (!  (=> (and (and (and (and (and (= (type $generated@@276) $generated@@72) (= (type $generated@@277) $generated@@72)) (= (type $generated@@278) $generated@@156)) (= (type $generated@@279) $generated@@156)) (= (type $generated@@280) ($generated@@84 $generated@@85 $generated@@86))) ($generated@@261 $generated@@280)) (= ($generated@@82 ($generated@@234 $generated@@278 $generated@@279) ($generated@@146 $generated@@276 $generated@@277) $generated@@280)  (and ($generated@@275 $generated@@278 $generated@@276 $generated@@280) ($generated@@275 $generated@@279 $generated@@277 $generated@@280))))
 :pattern ( ($generated@@82 ($generated@@234 $generated@@278 $generated@@279) ($generated@@146 $generated@@276 $generated@@277) $generated@@280))
)))
(assert (forall (($generated@@282 T@U) ) (! (= (type ($generated@@281 $generated@@282)) $generated@@76)
 :pattern ( ($generated@@281 $generated@@282))
)))
(assert (forall (($generated@@283 T@U) ) (!  (=> (= (type $generated@@283) $generated@@147) (= ($generated@@145 $generated@@283) (= ($generated@@281 $generated@@283) $generated@@65)))
 :pattern ( ($generated@@145 $generated@@283))
)))
(assert (forall (($generated@@284 T@U) ) (!  (=> (and (= (type $generated@@284) $generated@@147) ($generated@@145 $generated@@284)) (exists (($generated@@285 T@U) ($generated@@286 T@U) ) (!  (and (and (= (type $generated@@285) $generated@@156) (= (type $generated@@286) $generated@@156)) (= $generated@@284 ($generated@@234 $generated@@285 $generated@@286)))
 :no-pattern (type $generated@@285)
 :no-pattern (type $generated@@286)
 :no-pattern ($generated $generated@@285)
 :no-pattern ($generated@@0 $generated@@285)
 :no-pattern ($generated $generated@@286)
 :no-pattern ($generated@@0 $generated@@286)
)))
 :pattern ( ($generated@@145 $generated@@284))
)))
(assert  (and (and (forall (($generated@@291 T@T) ) (= ($generated@@1 ($generated@@289 $generated@@291)) 18)) (forall (($generated@@292 T@T) ) (! (= ($generated@@290 ($generated@@289 $generated@@292)) $generated@@292)
 :pattern ( ($generated@@289 $generated@@292))
))) (forall (($generated@@293 T@T) ) (! (= (type ($generated@@287 $generated@@293)) ($generated@@289 $generated@@293))
 :pattern ( ($generated@@287 $generated@@293))
))))
(assert (forall (($generated@@294 T@T) ) (! (= ($generated@@288 ($generated@@287 $generated@@294)) 0)
 :pattern ( ($generated@@287 $generated@@294))
)))
(assert (forall (($generated@@295 T@U) ) (!  (=> (= (type $generated@@295) $generated@@2) (= ($generated@@143 $generated@@295 $generated@@140) (<= ($generated@@253 0) ($generated $generated@@295))))
 :pattern ( ($generated@@143 $generated@@295 $generated@@140))
)))
(assert ($generated@@261 $generated@@260))
(assert (forall (($generated@@297 T@U) ) (! (= (type ($generated@@296 $generated@@297)) $generated@@156)
 :pattern ( ($generated@@296 $generated@@297))
)))
(assert (forall (($generated@@298 T@U) ($generated@@299 T@U) ($generated@@300 T@U) ) (!  (=> (and (= (type $generated@@299) $generated@@72) (= (type $generated@@300) ($generated@@84 $generated@@85 $generated@@86))) (= ($generated@@275 ($generated@@296 $generated@@298) $generated@@299 $generated@@300) ($generated@@82 $generated@@298 $generated@@299 $generated@@300)))
 :pattern ( ($generated@@275 ($generated@@296 $generated@@298) $generated@@299 $generated@@300))
)))
(assert (forall (($generated@@303 T@T) ) (! (= (type ($generated@@302 $generated@@303)) ($generated@@84 $generated@@303 $generated@@2))
 :pattern ( ($generated@@302 $generated@@303))
)))
(assert (forall (($generated@@304 T@U) ) (! (let (($generated@@305 ($generated@@87 (type $generated@@304))))
 (=> (= (type $generated@@304) ($generated@@84 $generated@@305 $generated@@2)) (and (= (= ($generated@@301 $generated@@304) 0) (= $generated@@304 ($generated@@302 $generated@@305))) (=> (not (= ($generated@@301 $generated@@304) 0)) (exists (($generated@@306 T@U) ) (!  (and (= (type $generated@@306) $generated@@305) (< 0 ($generated ($generated@@89 $generated@@304 $generated@@306))))
 :no-pattern (type $generated@@306)
 :no-pattern ($generated $generated@@306)
 :no-pattern ($generated@@0 $generated@@306)
))))))
 :pattern ( ($generated@@301 $generated@@304))
)))
(assert  (and (and (and (and (forall (($generated@@312 T@T) ($generated@@313 T@T) ) (= ($generated@@1 ($generated@@309 $generated@@312 $generated@@313)) 19)) (forall (($generated@@314 T@T) ($generated@@315 T@T) ) (! (= ($generated@@310 ($generated@@309 $generated@@314 $generated@@315)) $generated@@314)
 :pattern ( ($generated@@309 $generated@@314 $generated@@315))
))) (forall (($generated@@316 T@T) ($generated@@317 T@T) ) (! (= ($generated@@311 ($generated@@309 $generated@@316 $generated@@317)) $generated@@317)
 :pattern ( ($generated@@309 $generated@@316 $generated@@317))
))) (forall (($generated@@318 T@U) ) (! (let (($generated@@319 ($generated@@310 (type $generated@@318))))
(= (type ($generated@@307 $generated@@318)) ($generated@@84 $generated@@319 $generated@@4)))
 :pattern ( ($generated@@307 $generated@@318))
))) (forall (($generated@@320 T@T) ($generated@@321 T@T) ) (! (= (type ($generated@@308 $generated@@320 $generated@@321)) ($generated@@309 $generated@@320 $generated@@321))
 :pattern ( ($generated@@308 $generated@@320 $generated@@321))
))))
(assert (forall (($generated@@322 T@U) ($generated@@323 T@T) ) (! (let (($generated@@324 (type $generated@@322)))
 (not ($generated@@0 ($generated@@89 ($generated@@307 ($generated@@308 $generated@@324 $generated@@323)) $generated@@322))))
 :pattern ( (let (($generated@@324 (type $generated@@322)))
($generated@@89 ($generated@@307 ($generated@@308 $generated@@324 $generated@@323)) $generated@@322)))
)))
(assert  (and (and (and (and (forall (($generated@@330 T@T) ($generated@@331 T@T) ) (= ($generated@@1 ($generated@@327 $generated@@330 $generated@@331)) 20)) (forall (($generated@@332 T@T) ($generated@@333 T@T) ) (! (= ($generated@@328 ($generated@@327 $generated@@332 $generated@@333)) $generated@@332)
 :pattern ( ($generated@@327 $generated@@332 $generated@@333))
))) (forall (($generated@@334 T@T) ($generated@@335 T@T) ) (! (= ($generated@@329 ($generated@@327 $generated@@334 $generated@@335)) $generated@@335)
 :pattern ( ($generated@@327 $generated@@334 $generated@@335))
))) (forall (($generated@@336 T@U) ) (! (let (($generated@@337 ($generated@@328 (type $generated@@336))))
(= (type ($generated@@325 $generated@@336)) ($generated@@84 $generated@@337 $generated@@4)))
 :pattern ( ($generated@@325 $generated@@336))
))) (forall (($generated@@338 T@T) ($generated@@339 T@T) ) (! (= (type ($generated@@326 $generated@@338 $generated@@339)) ($generated@@327 $generated@@338 $generated@@339))
 :pattern ( ($generated@@326 $generated@@338 $generated@@339))
))))
(assert (forall (($generated@@340 T@U) ($generated@@341 T@T) ) (! (let (($generated@@342 (type $generated@@340)))
 (not ($generated@@0 ($generated@@89 ($generated@@325 ($generated@@326 $generated@@342 $generated@@341)) $generated@@340))))
 :pattern ( (let (($generated@@342 (type $generated@@340)))
($generated@@89 ($generated@@325 ($generated@@326 $generated@@342 $generated@@341)) $generated@@340)))
)))
(assert (forall (($generated@@343 T@U) ($generated@@344 T@U) ) (! (let (($generated@@345 ($generated@@87 (type $generated@@343))))
 (=> (and (= (type $generated@@343) ($generated@@84 $generated@@345 $generated@@4)) (= (type $generated@@344) ($generated@@84 $generated@@345 $generated@@4))) (= ($generated@@262 $generated@@343 $generated@@344) (forall (($generated@@346 T@U) ) (!  (=> (= (type $generated@@346) $generated@@345) (= ($generated@@0 ($generated@@89 $generated@@343 $generated@@346)) ($generated@@0 ($generated@@89 $generated@@344 $generated@@346))))
 :pattern ( ($generated@@89 $generated@@343 $generated@@346))
 :pattern ( ($generated@@89 $generated@@344 $generated@@346))
)))))
 :pattern ( ($generated@@262 $generated@@343 $generated@@344))
)))
(assert (forall (($generated@@348 T@U) ($generated@@349 T@U) ) (! (= (type ($generated@@347 $generated@@348 $generated@@349)) $generated@@72)
 :pattern ( ($generated@@347 $generated@@348 $generated@@349))
)))
(assert (forall (($generated@@350 T@U) ($generated@@351 T@U) ($generated@@352 T@U) ($generated@@353 T@U) ) (!  (=> (and (and (and (= (type $generated@@350) $generated@@72) (= (type $generated@@351) $generated@@72)) (= (type $generated@@352) $generated@@223)) (= (type $generated@@353) ($generated@@84 $generated@@85 $generated@@86))) (= ($generated@@82 $generated@@352 ($generated@@347 $generated@@350 $generated@@351) $generated@@353) ($generated@@82 $generated@@352 ($generated@@222 $generated@@350 $generated@@351) $generated@@353)))
 :pattern ( ($generated@@82 $generated@@352 ($generated@@347 $generated@@350 $generated@@351) $generated@@353))
)))
(assert (forall (($generated@@355 T@U) ($generated@@356 T@U) ) (! (= (type ($generated@@354 $generated@@355 $generated@@356)) $generated@@72)
 :pattern ( ($generated@@354 $generated@@355 $generated@@356))
)))
(assert (forall (($generated@@357 T@U) ($generated@@358 T@U) ($generated@@359 T@U) ($generated@@360 T@U) ) (!  (=> (and (and (and (= (type $generated@@357) $generated@@72) (= (type $generated@@358) $generated@@72)) (= (type $generated@@359) $generated@@223)) (= (type $generated@@360) ($generated@@84 $generated@@85 $generated@@86))) (= ($generated@@82 $generated@@359 ($generated@@354 $generated@@357 $generated@@358) $generated@@360) ($generated@@82 $generated@@359 ($generated@@347 $generated@@357 $generated@@358) $generated@@360)))
 :pattern ( ($generated@@82 $generated@@359 ($generated@@354 $generated@@357 $generated@@358) $generated@@360))
)))
(assert (forall (($generated@@361 T@U) ) (! (let (($generated@@362 ($generated@@87 (type $generated@@361))))
 (=> (= (type $generated@@361) ($generated@@84 $generated@@362 $generated@@2)) (= ($generated@@162 $generated@@361) (forall (($generated@@363 T@U) ) (!  (=> (= (type $generated@@363) $generated@@362) (and (<= 0 ($generated ($generated@@89 $generated@@361 $generated@@363))) (<= ($generated ($generated@@89 $generated@@361 $generated@@363)) ($generated@@301 $generated@@361))))
 :pattern ( ($generated@@89 $generated@@361 $generated@@363))
)))))
 :pattern ( ($generated@@162 $generated@@361))
)))
(assert  (and (and (and (and (and (and (and (and (and (forall (($generated@@372 T@T) ($generated@@373 T@T) ($generated@@374 T@T) ) (= ($generated@@1 ($generated@@366 $generated@@372 $generated@@373 $generated@@374)) 21)) (forall (($generated@@375 T@T) ($generated@@376 T@T) ($generated@@377 T@T) ) (! (= ($generated@@368 ($generated@@366 $generated@@375 $generated@@376 $generated@@377)) $generated@@375)
 :pattern ( ($generated@@366 $generated@@375 $generated@@376 $generated@@377))
))) (forall (($generated@@378 T@T) ($generated@@379 T@T) ($generated@@380 T@T) ) (! (= ($generated@@369 ($generated@@366 $generated@@378 $generated@@379 $generated@@380)) $generated@@379)
 :pattern ( ($generated@@366 $generated@@378 $generated@@379 $generated@@380))
))) (forall (($generated@@381 T@T) ($generated@@382 T@T) ($generated@@383 T@T) ) (! (= ($generated@@370 ($generated@@366 $generated@@381 $generated@@382 $generated@@383)) $generated@@383)
 :pattern ( ($generated@@366 $generated@@381 $generated@@382 $generated@@383))
))) (forall (($generated@@384 T@U) ($generated@@385 T@U) ($generated@@386 T@U) ) (! (let (($generated@@387 ($generated@@370 (type $generated@@384))))
(= (type ($generated@@367 $generated@@384 $generated@@385 $generated@@386)) $generated@@387))
 :pattern ( ($generated@@367 $generated@@384 $generated@@385 $generated@@386))
))) (forall (($generated@@388 T@U) ($generated@@389 T@U) ($generated@@390 T@U) ($generated@@391 T@U) ) (! (let (($generated@@392 (type $generated@@391)))
(let (($generated@@393 (type $generated@@390)))
(let (($generated@@394 (type $generated@@389)))
(= (type ($generated@@371 $generated@@388 $generated@@389 $generated@@390 $generated@@391)) ($generated@@366 $generated@@394 $generated@@393 $generated@@392)))))
 :pattern ( ($generated@@371 $generated@@388 $generated@@389 $generated@@390 $generated@@391))
))) (forall (($generated@@395 T@U) ($generated@@396 T@U) ($generated@@397 T@U) ($generated@@398 T@U) ) (! (let (($generated@@399 ($generated@@370 (type $generated@@395))))
 (=> (= (type $generated@@398) $generated@@399) (= ($generated@@367 ($generated@@371 $generated@@395 $generated@@396 $generated@@397 $generated@@398) $generated@@396 $generated@@397) $generated@@398)))
 :weight 0
))) (and (and (forall (($generated@@400 T@U) ($generated@@401 T@U) ($generated@@402 T@U) ($generated@@403 T@U) ($generated@@404 T@U) ($generated@@405 T@U) ) (!  (or (= $generated@@402 $generated@@404) (= ($generated@@367 ($generated@@371 $generated@@401 $generated@@402 $generated@@403 $generated@@400) $generated@@404 $generated@@405) ($generated@@367 $generated@@401 $generated@@404 $generated@@405)))
 :weight 0
)) (forall (($generated@@406 T@U) ($generated@@407 T@U) ($generated@@408 T@U) ($generated@@409 T@U) ($generated@@410 T@U) ($generated@@411 T@U) ) (!  (or (= $generated@@409 $generated@@411) (= ($generated@@367 ($generated@@371 $generated@@407 $generated@@408 $generated@@409 $generated@@406) $generated@@410 $generated@@411) ($generated@@367 $generated@@407 $generated@@410 $generated@@411)))
 :weight 0
))) (forall (($generated@@412 T@U) ($generated@@413 T@U) ($generated@@414 T@U) ($generated@@415 T@U) ($generated@@416 T@U) ($generated@@417 T@U) ) (!  (or true (= ($generated@@367 ($generated@@371 $generated@@413 $generated@@414 $generated@@415 $generated@@412) $generated@@416 $generated@@417) ($generated@@367 $generated@@413 $generated@@416 $generated@@417)))
 :weight 0
)))) (forall (($generated@@418 T@U) ($generated@@419 T@U) ($generated@@420 T@U) ($generated@@421 T@U) ($generated@@422 T@U) ) (! (= (type ($generated@@364 $generated@@418 $generated@@419 $generated@@420 $generated@@421 $generated@@422)) $generated@@156)
 :pattern ( ($generated@@364 $generated@@418 $generated@@419 $generated@@420 $generated@@421 $generated@@422))
))) (forall (($generated@@423 T@U) ($generated@@424 T@U) ($generated@@425 T@U) ) (! (= (type ($generated@@365 $generated@@423 $generated@@424 $generated@@425)) $generated@@223)
 :pattern ( ($generated@@365 $generated@@423 $generated@@424 $generated@@425))
))))
(assert (forall (($generated@@426 T@U) ($generated@@427 T@U) ($generated@@428 T@U) ($generated@@429 T@U) ($generated@@430 T@U) ($generated@@431 T@U) ($generated@@432 T@U) ) (!  (=> (and (and (and (and (and (and (= (type $generated@@426) $generated@@72) (= (type $generated@@427) $generated@@72)) (= (type $generated@@428) ($generated@@84 $generated@@85 $generated@@86))) (= (type $generated@@429) ($generated@@366 ($generated@@84 $generated@@85 $generated@@86) $generated@@156 $generated@@156))) (= (type $generated@@430) ($generated@@366 ($generated@@84 $generated@@85 $generated@@86) $generated@@156 $generated@@4))) (= (type $generated@@431) ($generated@@366 ($generated@@84 $generated@@85 $generated@@86) $generated@@156 ($generated@@84 $generated@@156 $generated@@4)))) (= (type $generated@@432) $generated@@156)) (= ($generated@@364 $generated@@426 $generated@@427 $generated@@428 ($generated@@365 $generated@@429 $generated@@430 $generated@@431) $generated@@432) ($generated@@367 $generated@@429 $generated@@428 $generated@@432)))
 :pattern ( ($generated@@364 $generated@@426 $generated@@427 $generated@@428 ($generated@@365 $generated@@429 $generated@@430 $generated@@431) $generated@@432))
)))
(assert (forall (($generated@@434 T@T) ($generated@@435 T@U) ) (! (= (type ($generated@@433 $generated@@434 $generated@@435)) $generated@@434)
 :pattern ( ($generated@@433 $generated@@434 $generated@@435))
)))
(assert (forall (($generated@@436 T@U) ) (!  (=> (and (= (type $generated@@436) $generated@@156) ($generated@@224 $generated@@436 $generated@@140)) (and (= ($generated@@296 ($generated@@433 $generated@@2 $generated@@436)) $generated@@436) ($generated@@143 ($generated@@433 $generated@@2 $generated@@436) $generated@@140)))
 :pattern ( ($generated@@224 $generated@@436 $generated@@140))
)))
(assert (forall (($generated@@437 T@U) ) (! (let (($generated@@438 ($generated@@311 (type $generated@@437))))
(let (($generated@@439 ($generated@@310 (type $generated@@437))))
 (=> (= (type $generated@@437) ($generated@@309 $generated@@439 $generated@@438)) (or (= $generated@@437 ($generated@@308 $generated@@439 $generated@@438)) (exists (($generated@@440 T@U) ) (!  (and (= (type $generated@@440) $generated@@439) ($generated@@0 ($generated@@89 ($generated@@307 $generated@@437) $generated@@440)))
 :no-pattern (type $generated@@440)
 :no-pattern ($generated $generated@@440)
 :no-pattern ($generated@@0 $generated@@440)
))))))
 :pattern ( ($generated@@307 $generated@@437))
)))
(assert (forall (($generated@@442 T@U) ) (! (let (($generated@@443 ($generated@@311 (type $generated@@442))))
(= (type ($generated@@441 $generated@@442)) ($generated@@84 $generated@@443 $generated@@4)))
 :pattern ( ($generated@@441 $generated@@442))
)))
(assert (forall (($generated@@444 T@U) ) (! (let (($generated@@445 ($generated@@311 (type $generated@@444))))
(let (($generated@@446 ($generated@@310 (type $generated@@444))))
 (=> (= (type $generated@@444) ($generated@@309 $generated@@446 $generated@@445)) (or (= $generated@@444 ($generated@@308 $generated@@446 $generated@@445)) (exists (($generated@@447 T@U) ) (!  (and (= (type $generated@@447) $generated@@445) ($generated@@0 ($generated@@89 ($generated@@441 $generated@@444) $generated@@447)))
 :no-pattern (type $generated@@447)
 :no-pattern ($generated $generated@@447)
 :no-pattern ($generated@@0 $generated@@447)
))))))
 :pattern ( ($generated@@441 $generated@@444))
)))
(assert (forall (($generated@@448 T@U) ) (! (let (($generated@@449 ($generated@@329 (type $generated@@448))))
(let (($generated@@450 ($generated@@328 (type $generated@@448))))
 (=> (= (type $generated@@448) ($generated@@327 $generated@@450 $generated@@449)) (or (= $generated@@448 ($generated@@326 $generated@@450 $generated@@449)) (exists (($generated@@451 T@U) ) (!  (and (= (type $generated@@451) $generated@@450) ($generated@@0 ($generated@@89 ($generated@@325 $generated@@448) $generated@@451)))
 :no-pattern (type $generated@@451)
 :no-pattern ($generated $generated@@451)
 :no-pattern ($generated@@0 $generated@@451)
))))))
 :pattern ( ($generated@@325 $generated@@448))
)))
(assert (forall (($generated@@453 T@U) ) (! (let (($generated@@454 ($generated@@329 (type $generated@@453))))
(= (type ($generated@@452 $generated@@453)) ($generated@@84 $generated@@454 $generated@@4)))
 :pattern ( ($generated@@452 $generated@@453))
)))
(assert (forall (($generated@@455 T@U) ) (! (let (($generated@@456 ($generated@@329 (type $generated@@455))))
(let (($generated@@457 ($generated@@328 (type $generated@@455))))
 (=> (= (type $generated@@455) ($generated@@327 $generated@@457 $generated@@456)) (or (= $generated@@455 ($generated@@326 $generated@@457 $generated@@456)) (exists (($generated@@458 T@U) ) (!  (and (= (type $generated@@458) $generated@@456) ($generated@@0 ($generated@@89 ($generated@@452 $generated@@455) $generated@@458)))
 :no-pattern (type $generated@@458)
 :no-pattern ($generated $generated@@458)
 :no-pattern ($generated@@0 $generated@@458)
))))))
 :pattern ( ($generated@@452 $generated@@455))
)))
(assert (forall (($generated@@459 T@U) ($generated@@460 T@U) ) (!  (=> (and (= (type $generated@@459) ($generated@@84 $generated@@156 $generated@@2)) (= (type $generated@@460) $generated@@72)) (= ($generated@@143 $generated@@459 ($generated@@161 $generated@@460)) (forall (($generated@@461 T@U) ) (!  (=> (and (= (type $generated@@461) $generated@@156) (< 0 ($generated ($generated@@89 $generated@@459 $generated@@461)))) ($generated@@224 $generated@@461 $generated@@460))
 :pattern ( ($generated@@89 $generated@@459 $generated@@461))
))))
 :pattern ( ($generated@@143 $generated@@459 ($generated@@161 $generated@@460)))
)))
(assert (forall (($generated@@463 T@U) ($generated@@464 T@U) ($generated@@465 T@U) ($generated@@466 T@U) ) (!  (=> (and (and (and (and (= (type $generated@@463) $generated@@223) (= (type $generated@@464) $generated@@72)) (= (type $generated@@465) $generated@@72)) (= (type $generated@@466) ($generated@@84 $generated@@85 $generated@@86))) (and ($generated@@261 $generated@@466) ($generated@@82 $generated@@463 ($generated@@222 $generated@@464 $generated@@465) $generated@@466))) (forall (($generated@@467 T@U) ) (!  (=> (= (type $generated@@467) $generated@@156) (=> (and ($generated@@275 $generated@@467 $generated@@464 $generated@@466) ($generated@@462 $generated@@464 $generated@@465 $generated@@466 $generated@@463 $generated@@467)) ($generated@@275 ($generated@@364 $generated@@464 $generated@@465 $generated@@466 $generated@@463 $generated@@467) $generated@@465 $generated@@466)))
 :pattern ( ($generated@@364 $generated@@464 $generated@@465 $generated@@466 $generated@@463 $generated@@467))
)))
 :pattern ( ($generated@@82 $generated@@463 ($generated@@222 $generated@@464 $generated@@465) $generated@@466))
)))
(assert (= (type $generated@@468) $generated@@85))
(assert (forall (($generated@@469 T@U) ($generated@@470 T@U) ($generated@@471 T@U) ($generated@@472 T@U) ) (!  (=> (and (and (and (and (= (type $generated@@469) $generated@@223) (= (type $generated@@470) $generated@@72)) (= (type $generated@@471) $generated@@72)) (= (type $generated@@472) ($generated@@84 $generated@@85 $generated@@86))) ($generated@@261 $generated@@472)) (= ($generated@@82 $generated@@469 ($generated@@222 $generated@@470 $generated@@471) $generated@@472) (forall (($generated@@473 T@U) ) (!  (=> (= (type $generated@@473) $generated@@156) (=> (and (and ($generated@@224 $generated@@473 $generated@@470) ($generated@@275 $generated@@473 $generated@@470 $generated@@472)) ($generated@@462 $generated@@470 $generated@@471 $generated@@472 $generated@@469 $generated@@473)) (forall (($generated@@474 T@U) ) (!  (=> (= (type $generated@@474) $generated@@85) (=> (and (not (= $generated@@474 $generated@@468)) ($generated@@0 ($generated@@89 ($generated@@259 $generated@@470 $generated@@471 $generated@@472 $generated@@469 $generated@@473) ($generated@@296 $generated@@474)))) ($generated@@0 ($generated@@91 ($generated@@89 $generated@@472 $generated@@474) $generated@@60))))
 :pattern ( ($generated@@89 ($generated@@259 $generated@@470 $generated@@471 $generated@@472 $generated@@469 $generated@@473) ($generated@@296 $generated@@474)))
))))
 :pattern ( ($generated@@364 $generated@@470 $generated@@471 $generated@@472 $generated@@469 $generated@@473))
 :pattern ( ($generated@@259 $generated@@470 $generated@@471 $generated@@472 $generated@@469 $generated@@473))
))))
 :pattern ( ($generated@@82 $generated@@469 ($generated@@222 $generated@@470 $generated@@471) $generated@@472))
)))
(assert (forall (($generated@@475 T@U) ($generated@@476 T@U) ($generated@@477 T@U) ) (!  (=> (and (and (= (type $generated@@475) ($generated@@84 $generated@@156 $generated@@4)) (= (type $generated@@476) $generated@@72)) (= (type $generated@@477) ($generated@@84 $generated@@85 $generated@@86))) (= ($generated@@82 $generated@@475 ($generated@@243 $generated@@476) $generated@@477) (forall (($generated@@478 T@U) ) (!  (=> (and (= (type $generated@@478) $generated@@156) ($generated@@0 ($generated@@89 $generated@@475 $generated@@478))) ($generated@@275 $generated@@478 $generated@@476 $generated@@477))
 :pattern ( ($generated@@89 $generated@@475 $generated@@478))
))))
 :pattern ( ($generated@@82 $generated@@475 ($generated@@243 $generated@@476) $generated@@477))
)))
(assert (forall (($generated@@479 T@U) ($generated@@480 T@U) ($generated@@481 T@U) ) (!  (=> (and (and (= (type $generated@@479) ($generated@@84 $generated@@156 $generated@@4)) (= (type $generated@@480) $generated@@72)) (= (type $generated@@481) ($generated@@84 $generated@@85 $generated@@86))) (= ($generated@@82 $generated@@479 ($generated@@248 $generated@@480) $generated@@481) (forall (($generated@@482 T@U) ) (!  (=> (and (= (type $generated@@482) $generated@@156) ($generated@@0 ($generated@@89 $generated@@479 $generated@@482))) ($generated@@275 $generated@@482 $generated@@480 $generated@@481))
 :pattern ( ($generated@@89 $generated@@479 $generated@@482))
))))
 :pattern ( ($generated@@82 $generated@@479 ($generated@@248 $generated@@480) $generated@@481))
)))
(assert (forall (($generated@@483 T@U) ) (! (let (($generated@@484 (type $generated@@483)))
(= ($generated ($generated@@89 ($generated@@302 $generated@@484) $generated@@483)) 0))
 :pattern ( (let (($generated@@484 (type $generated@@483)))
($generated@@89 ($generated@@302 $generated@@484) $generated@@483)))
)))
(assert  (and (forall (($generated@@487 T@U) ) (! (= (type ($generated@@485 $generated@@487)) ($generated@@84 $generated@@156 $generated@@4))
 :pattern ( ($generated@@485 $generated@@487))
)) (forall (($generated@@488 T@U) ) (! (let (($generated@@489 ($generated@@311 (type $generated@@488))))
(let (($generated@@490 ($generated@@310 (type $generated@@488))))
(= (type ($generated@@486 $generated@@488)) ($generated@@84 $generated@@490 $generated@@489))))
 :pattern ( ($generated@@486 $generated@@488))
))))
(assert (forall (($generated@@491 T@U) ($generated@@492 T@U) ) (!  (=> (and (= (type $generated@@491) ($generated@@309 $generated@@156 $generated@@156)) (= (type $generated@@492) $generated@@156)) (= ($generated@@0 ($generated@@89 ($generated@@485 $generated@@491) $generated@@492))  (and ($generated@@0 ($generated@@89 ($generated@@307 $generated@@491) ($generated@@154 ($generated@@433 $generated@@147 $generated@@492)))) (= ($generated@@89 ($generated@@486 $generated@@491) ($generated@@154 ($generated@@433 $generated@@147 $generated@@492))) ($generated@@155 ($generated@@433 $generated@@147 $generated@@492))))))
 :pattern ( ($generated@@89 ($generated@@485 $generated@@491) $generated@@492))
)))
(assert  (and (forall (($generated@@495 T@U) ) (! (= (type ($generated@@493 $generated@@495)) ($generated@@84 $generated@@156 $generated@@4))
 :pattern ( ($generated@@493 $generated@@495))
)) (forall (($generated@@496 T@U) ) (! (let (($generated@@497 ($generated@@329 (type $generated@@496))))
(let (($generated@@498 ($generated@@328 (type $generated@@496))))
(= (type ($generated@@494 $generated@@496)) ($generated@@84 $generated@@498 $generated@@497))))
 :pattern ( ($generated@@494 $generated@@496))
))))
(assert (forall (($generated@@499 T@U) ($generated@@500 T@U) ) (!  (=> (and (= (type $generated@@499) ($generated@@327 $generated@@156 $generated@@156)) (= (type $generated@@500) $generated@@156)) (= ($generated@@0 ($generated@@89 ($generated@@493 $generated@@499) $generated@@500))  (and ($generated@@0 ($generated@@89 ($generated@@325 $generated@@499) ($generated@@154 ($generated@@433 $generated@@147 $generated@@500)))) (= ($generated@@89 ($generated@@494 $generated@@499) ($generated@@154 ($generated@@433 $generated@@147 $generated@@500))) ($generated@@155 ($generated@@433 $generated@@147 $generated@@500))))))
 :pattern ( ($generated@@89 ($generated@@493 $generated@@499) $generated@@500))
)))
(assert (forall (($generated@@501 T@U) ($generated@@502 T@U) ) (! (let (($generated@@503 (type $generated@@502)))
(let (($generated@@504 ($generated@@310 (type $generated@@501))))
 (=> (= (type $generated@@501) ($generated@@309 $generated@@504 $generated@@503)) (= ($generated@@0 ($generated@@89 ($generated@@441 $generated@@501) $generated@@502)) (exists (($generated@@505 T@U) ) (!  (and (= (type $generated@@505) $generated@@504) (and ($generated@@0 ($generated@@89 ($generated@@307 $generated@@501) $generated@@505)) (= $generated@@502 ($generated@@89 ($generated@@486 $generated@@501) $generated@@505))))
 :pattern ( ($generated@@89 ($generated@@307 $generated@@501) $generated@@505))
 :pattern ( ($generated@@89 ($generated@@486 $generated@@501) $generated@@505))
))))))
 :pattern ( ($generated@@89 ($generated@@441 $generated@@501) $generated@@502))
)))
(assert (forall (($generated@@506 T@U) ($generated@@507 T@U) ) (! (let (($generated@@508 (type $generated@@507)))
(let (($generated@@509 ($generated@@328 (type $generated@@506))))
 (=> (= (type $generated@@506) ($generated@@327 $generated@@509 $generated@@508)) (= ($generated@@0 ($generated@@89 ($generated@@452 $generated@@506) $generated@@507)) (exists (($generated@@510 T@U) ) (!  (and (= (type $generated@@510) $generated@@509) (and ($generated@@0 ($generated@@89 ($generated@@325 $generated@@506) $generated@@510)) (= $generated@@507 ($generated@@89 ($generated@@494 $generated@@506) $generated@@510))))
 :pattern ( ($generated@@89 ($generated@@325 $generated@@506) $generated@@510))
 :pattern ( ($generated@@89 ($generated@@494 $generated@@506) $generated@@510))
))))))
 :pattern ( ($generated@@89 ($generated@@452 $generated@@506) $generated@@507))
)))
(assert (forall (($generated@@511 T@U) ($generated@@512 T@U) ($generated@@513 T@U) ($generated@@514 T@U) ($generated@@515 T@U) ($generated@@516 T@U) ($generated@@517 T@U) ($generated@@518 T@U) ) (!  (=> (and (and (and (and (and (and (and (= (type $generated@@511) $generated@@72) (= (type $generated@@512) $generated@@72)) (= (type $generated@@513) ($generated@@84 $generated@@85 $generated@@86))) (= (type $generated@@514) ($generated@@366 ($generated@@84 $generated@@85 $generated@@86) $generated@@156 $generated@@156))) (= (type $generated@@515) ($generated@@366 ($generated@@84 $generated@@85 $generated@@86) $generated@@156 $generated@@4))) (= (type $generated@@516) ($generated@@366 ($generated@@84 $generated@@85 $generated@@86) $generated@@156 ($generated@@84 $generated@@156 $generated@@4)))) (= (type $generated@@517) $generated@@156)) (= (type $generated@@518) $generated@@156)) (= ($generated@@0 ($generated@@89 ($generated@@259 $generated@@511 $generated@@512 $generated@@513 ($generated@@365 $generated@@514 $generated@@515 $generated@@516) $generated@@517) $generated@@518)) ($generated@@0 ($generated@@89 ($generated@@367 $generated@@516 $generated@@513 $generated@@517) $generated@@518))))
 :pattern ( ($generated@@89 ($generated@@259 $generated@@511 $generated@@512 $generated@@513 ($generated@@365 $generated@@514 $generated@@515 $generated@@516) $generated@@517) $generated@@518))
)))
(assert (forall (($generated@@520 T@U) ($generated@@521 T@U) ) (! (= (type ($generated@@519 $generated@@520 $generated@@521)) $generated@@72)
 :pattern ( ($generated@@519 $generated@@520 $generated@@521))
)))
(assert (forall (($generated@@522 T@U) ($generated@@523 T@U) ($generated@@524 T@U) ($generated@@525 T@U) ) (!  (=> (and (and (and (= (type $generated@@522) ($generated@@309 $generated@@156 $generated@@156)) (= (type $generated@@523) $generated@@72)) (= (type $generated@@524) $generated@@72)) (= (type $generated@@525) ($generated@@84 $generated@@85 $generated@@86))) (= ($generated@@82 $generated@@522 ($generated@@519 $generated@@523 $generated@@524) $generated@@525) (forall (($generated@@526 T@U) ) (!  (=> (and (= (type $generated@@526) $generated@@156) ($generated@@0 ($generated@@89 ($generated@@307 $generated@@522) $generated@@526))) (and ($generated@@275 ($generated@@89 ($generated@@486 $generated@@522) $generated@@526) $generated@@524 $generated@@525) ($generated@@275 $generated@@526 $generated@@523 $generated@@525)))
 :pattern ( ($generated@@89 ($generated@@486 $generated@@522) $generated@@526))
 :pattern ( ($generated@@89 ($generated@@307 $generated@@522) $generated@@526))
))))
 :pattern ( ($generated@@82 $generated@@522 ($generated@@519 $generated@@523 $generated@@524) $generated@@525))
)))
(assert (forall (($generated@@528 T@U) ($generated@@529 T@U) ) (! (= (type ($generated@@527 $generated@@528 $generated@@529)) $generated@@72)
 :pattern ( ($generated@@527 $generated@@528 $generated@@529))
)))
(assert (forall (($generated@@530 T@U) ($generated@@531 T@U) ($generated@@532 T@U) ($generated@@533 T@U) ) (!  (=> (and (and (and (= (type $generated@@530) ($generated@@327 $generated@@156 $generated@@156)) (= (type $generated@@531) $generated@@72)) (= (type $generated@@532) $generated@@72)) (= (type $generated@@533) ($generated@@84 $generated@@85 $generated@@86))) (= ($generated@@82 $generated@@530 ($generated@@527 $generated@@531 $generated@@532) $generated@@533) (forall (($generated@@534 T@U) ) (!  (=> (and (= (type $generated@@534) $generated@@156) ($generated@@0 ($generated@@89 ($generated@@325 $generated@@530) $generated@@534))) (and ($generated@@275 ($generated@@89 ($generated@@494 $generated@@530) $generated@@534) $generated@@532 $generated@@533) ($generated@@275 $generated@@534 $generated@@531 $generated@@533)))
 :pattern ( ($generated@@89 ($generated@@494 $generated@@530) $generated@@534))
 :pattern ( ($generated@@89 ($generated@@325 $generated@@530) $generated@@534))
))))
 :pattern ( ($generated@@82 $generated@@530 ($generated@@527 $generated@@531 $generated@@532) $generated@@533))
)))
(assert (forall (($generated@@535 T@U) ($generated@@536 T@U) ) (! (let (($generated@@537 ($generated@@87 (type $generated@@535))))
 (=> (and (and (= (type $generated@@535) ($generated@@84 $generated@@537 $generated@@4)) (= (type $generated@@536) ($generated@@84 $generated@@537 $generated@@4))) ($generated@@262 $generated@@535 $generated@@536)) (= $generated@@535 $generated@@536)))
 :pattern ( ($generated@@262 $generated@@535 $generated@@536))
)))
(assert (forall (($generated@@538 T@U) ($generated@@539 T@U) ($generated@@540 T@U) ) (!  (=> (and (and (= (type $generated@@538) $generated@@223) (= (type $generated@@539) $generated@@72)) (= (type $generated@@540) $generated@@72)) (= ($generated@@143 $generated@@538 ($generated@@222 $generated@@539 $generated@@540)) (forall (($generated@@541 T@U) ($generated@@542 T@U) ) (!  (=> (and (= (type $generated@@541) ($generated@@84 $generated@@85 $generated@@86)) (= (type $generated@@542) $generated@@156)) (=> (and (and ($generated@@261 $generated@@541) ($generated@@224 $generated@@542 $generated@@539)) ($generated@@462 $generated@@539 $generated@@540 $generated@@541 $generated@@538 $generated@@542)) ($generated@@224 ($generated@@364 $generated@@539 $generated@@540 $generated@@541 $generated@@538 $generated@@542) $generated@@540)))
 :pattern ( ($generated@@364 $generated@@539 $generated@@540 $generated@@541 $generated@@538 $generated@@542))
))))
 :pattern ( ($generated@@143 $generated@@538 ($generated@@222 $generated@@539 $generated@@540)))
)))
(assert (forall (($generated@@544 T@T) ) (! (= (type ($generated@@543 $generated@@544)) ($generated@@84 $generated@@544 $generated@@4))
 :pattern ( ($generated@@543 $generated@@544))
)))
(assert (forall (($generated@@545 T@U) ) (! (let (($generated@@546 ($generated@@329 (type $generated@@545))))
(let (($generated@@547 ($generated@@328 (type $generated@@545))))
 (=> (= (type $generated@@545) ($generated@@327 $generated@@547 $generated@@546)) (= (= $generated@@545 ($generated@@326 $generated@@547 $generated@@546)) (= ($generated@@325 $generated@@545) ($generated@@543 $generated@@547))))))
 :pattern ( ($generated@@325 $generated@@545))
)))
(assert (forall (($generated@@548 T@U) ) (! (let (($generated@@549 ($generated@@329 (type $generated@@548))))
(let (($generated@@550 ($generated@@328 (type $generated@@548))))
 (=> (= (type $generated@@548) ($generated@@327 $generated@@550 $generated@@549)) (= (= $generated@@548 ($generated@@326 $generated@@550 $generated@@549)) (= ($generated@@452 $generated@@548) ($generated@@543 $generated@@549))))))
 :pattern ( ($generated@@452 $generated@@548))
)))
(assert (forall (($generated@@551 T@U) ) (! (let (($generated@@552 ($generated@@329 (type $generated@@551))))
(let (($generated@@553 ($generated@@328 (type $generated@@551))))
 (=> (= (type $generated@@551) ($generated@@327 $generated@@553 $generated@@552)) (= (= $generated@@551 ($generated@@326 $generated@@553 $generated@@552)) (= ($generated@@493 $generated@@551) ($generated@@543 $generated@@156))))))
 :pattern ( ($generated@@493 $generated@@551))
)))
(assert (forall (($generated@@554 T@U) ) (! (let (($generated@@555 ($generated@@311 (type $generated@@554))))
(let (($generated@@556 ($generated@@310 (type $generated@@554))))
 (=> (= (type $generated@@554) ($generated@@309 $generated@@556 $generated@@555)) (or (= $generated@@554 ($generated@@308 $generated@@556 $generated@@555)) (exists (($generated@@557 T@U) ($generated@@558 T@U) ) (!  (and (and (= (type $generated@@557) $generated@@156) (= (type $generated@@558) $generated@@156)) ($generated@@0 ($generated@@89 ($generated@@485 $generated@@554) ($generated@@296 ($generated@@234 $generated@@557 $generated@@558)))))
 :no-pattern (type $generated@@557)
 :no-pattern (type $generated@@558)
 :no-pattern ($generated $generated@@557)
 :no-pattern ($generated@@0 $generated@@557)
 :no-pattern ($generated $generated@@558)
 :no-pattern ($generated@@0 $generated@@558)
))))))
 :pattern ( ($generated@@485 $generated@@554))
)))
(assert (forall (($generated@@559 T@U) ) (! (let (($generated@@560 ($generated@@329 (type $generated@@559))))
(let (($generated@@561 ($generated@@328 (type $generated@@559))))
 (=> (= (type $generated@@559) ($generated@@327 $generated@@561 $generated@@560)) (or (= $generated@@559 ($generated@@326 $generated@@561 $generated@@560)) (exists (($generated@@562 T@U) ($generated@@563 T@U) ) (!  (and (and (= (type $generated@@562) $generated@@156) (= (type $generated@@563) $generated@@156)) ($generated@@0 ($generated@@89 ($generated@@493 $generated@@559) ($generated@@296 ($generated@@234 $generated@@562 $generated@@563)))))
 :no-pattern (type $generated@@562)
 :no-pattern (type $generated@@563)
 :no-pattern ($generated $generated@@562)
 :no-pattern ($generated@@0 $generated@@562)
 :no-pattern ($generated $generated@@563)
 :no-pattern ($generated@@0 $generated@@563)
))))))
 :pattern ( ($generated@@493 $generated@@559))
)))
(assert (forall (($generated@@564 T@U) ) (!  (=> (and (= (type $generated@@564) $generated@@156) ($generated@@224 $generated@@564 $generated@@46)) (and (= ($generated@@296 ($generated@@433 $generated@@2 $generated@@564)) $generated@@564) ($generated@@143 ($generated@@433 $generated@@2 $generated@@564) $generated@@46)))
 :pattern ( ($generated@@224 $generated@@564 $generated@@46))
)))
(assert (forall (($generated@@565 T@U) ) (!  (=> (and (= (type $generated@@565) $generated@@156) ($generated@@224 $generated@@565 $generated@@47)) (and (= ($generated@@296 ($generated@@433 $generated@@3 $generated@@565)) $generated@@565) ($generated@@143 ($generated@@433 $generated@@3 $generated@@565) $generated@@47)))
 :pattern ( ($generated@@224 $generated@@565 $generated@@47))
)))
(assert (forall (($generated@@566 T@U) ) (!  (=> (and (= (type $generated@@566) $generated@@156) ($generated@@224 $generated@@566 $generated@@44)) (and (= ($generated@@296 ($generated@@433 $generated@@4 $generated@@566)) $generated@@566) ($generated@@143 ($generated@@433 $generated@@4 $generated@@566) $generated@@44)))
 :pattern ( ($generated@@224 $generated@@566 $generated@@44))
)))
(assert (= ($generated@@1 $generated@@567) 22))
(assert (forall (($generated@@568 T@U) ) (!  (=> (and (= (type $generated@@568) $generated@@156) ($generated@@224 $generated@@568 $generated@@45)) (and (= ($generated@@296 ($generated@@433 $generated@@567 $generated@@568)) $generated@@568) ($generated@@143 ($generated@@433 $generated@@567 $generated@@568) $generated@@45)))
 :pattern ( ($generated@@224 $generated@@568 $generated@@45))
)))
(assert (forall (($generated@@569 T@U) ($generated@@570 T@U) ) (!  (=> (= (type $generated@@570) $generated@@72) (= ($generated@@224 ($generated@@296 $generated@@569) $generated@@570) ($generated@@143 $generated@@569 $generated@@570)))
 :pattern ( ($generated@@224 ($generated@@296 $generated@@569) $generated@@570))
)))
(assert (forall (($generated@@571 T@U) ($generated@@572 T@U) ($generated@@573 T@U) ($generated@@574 T@U) ($generated@@575 T@U) ($generated@@576 T@U) ($generated@@577 T@U) ) (!  (=> (and (and (and (and (and (and (and (= (type $generated@@571) $generated@@72) (= (type $generated@@572) $generated@@72)) (= (type $generated@@573) ($generated@@84 $generated@@85 $generated@@86))) (= (type $generated@@574) ($generated@@366 ($generated@@84 $generated@@85 $generated@@86) $generated@@156 $generated@@156))) (= (type $generated@@575) ($generated@@366 ($generated@@84 $generated@@85 $generated@@86) $generated@@156 $generated@@4))) (= (type $generated@@576) ($generated@@366 ($generated@@84 $generated@@85 $generated@@86) $generated@@156 ($generated@@84 $generated@@156 $generated@@4)))) (= (type $generated@@577) $generated@@156)) ($generated@@0 ($generated@@367 $generated@@575 $generated@@573 $generated@@577))) ($generated@@462 $generated@@571 $generated@@572 $generated@@573 ($generated@@365 $generated@@574 $generated@@575 $generated@@576) $generated@@577))
 :pattern ( ($generated@@462 $generated@@571 $generated@@572 $generated@@573 ($generated@@365 $generated@@574 $generated@@575 $generated@@576) $generated@@577))
)))
(assert (forall (($generated@@578 T@U) ) (! (let (($generated@@579 ($generated@@87 (type $generated@@578))))
 (=> (= (type $generated@@578) ($generated@@84 $generated@@579 $generated@@2)) (<= 0 ($generated@@301 $generated@@578))))
 :pattern ( ($generated@@301 $generated@@578))
)))
(assert (forall (($generated@@580 T@U) ) (! (let (($generated@@581 ($generated@@290 (type $generated@@580))))
 (=> (= (type $generated@@580) ($generated@@289 $generated@@581)) (<= 0 ($generated@@288 $generated@@580))))
 :pattern ( ($generated@@288 $generated@@580))
)))
(assert (forall (($generated@@583 T@U) ) (! (= (type ($generated@@582 $generated@@583)) $generated@@72)
 :pattern ( ($generated@@582 $generated@@583))
)))
(assert (forall (($generated@@584 T@U) ($generated@@585 T@U) ) (!  (=> (and (= (type $generated@@584) $generated@@72) (= (type $generated@@585) $generated@@72)) (= ($generated@@582 ($generated@@519 $generated@@584 $generated@@585)) $generated@@584))
 :pattern ( ($generated@@519 $generated@@584 $generated@@585))
)))
(assert (forall (($generated@@587 T@U) ) (! (= (type ($generated@@586 $generated@@587)) $generated@@72)
 :pattern ( ($generated@@586 $generated@@587))
)))
(assert (forall (($generated@@588 T@U) ($generated@@589 T@U) ) (!  (=> (and (= (type $generated@@588) $generated@@72) (= (type $generated@@589) $generated@@72)) (= ($generated@@586 ($generated@@519 $generated@@588 $generated@@589)) $generated@@589))
 :pattern ( ($generated@@519 $generated@@588 $generated@@589))
)))
(assert (forall (($generated@@590 T@U) ($generated@@591 T@U) ) (!  (=> (and (= (type $generated@@590) $generated@@72) (= (type $generated@@591) $generated@@72)) (= ($generated@@80 ($generated@@519 $generated@@590 $generated@@591)) $generated@@58))
 :pattern ( ($generated@@519 $generated@@590 $generated@@591))
)))
(assert (forall (($generated@@593 T@U) ) (! (= (type ($generated@@592 $generated@@593)) $generated@@72)
 :pattern ( ($generated@@592 $generated@@593))
)))
(assert (forall (($generated@@594 T@U) ($generated@@595 T@U) ) (!  (=> (and (= (type $generated@@594) $generated@@72) (= (type $generated@@595) $generated@@72)) (= ($generated@@592 ($generated@@527 $generated@@594 $generated@@595)) $generated@@594))
 :pattern ( ($generated@@527 $generated@@594 $generated@@595))
)))
(assert (forall (($generated@@597 T@U) ) (! (= (type ($generated@@596 $generated@@597)) $generated@@72)
 :pattern ( ($generated@@596 $generated@@597))
)))
(assert (forall (($generated@@598 T@U) ($generated@@599 T@U) ) (!  (=> (and (= (type $generated@@598) $generated@@72) (= (type $generated@@599) $generated@@72)) (= ($generated@@596 ($generated@@527 $generated@@598 $generated@@599)) $generated@@599))
 :pattern ( ($generated@@527 $generated@@598 $generated@@599))
)))
(assert (forall (($generated@@600 T@U) ($generated@@601 T@U) ) (!  (=> (and (= (type $generated@@600) $generated@@72) (= (type $generated@@601) $generated@@72)) (= ($generated@@80 ($generated@@527 $generated@@600 $generated@@601)) $generated@@59))
 :pattern ( ($generated@@527 $generated@@600 $generated@@601))
)))
(assert (forall (($generated@@603 T@U) ) (! (= (type ($generated@@602 $generated@@603)) $generated@@72)
 :pattern ( ($generated@@602 $generated@@603))
)))
(assert (forall (($generated@@604 T@U) ($generated@@605 T@U) ) (!  (=> (and (= (type $generated@@604) $generated@@72) (= (type $generated@@605) $generated@@72)) (= ($generated@@602 ($generated@@222 $generated@@604 $generated@@605)) $generated@@604))
 :pattern ( ($generated@@222 $generated@@604 $generated@@605))
)))
(assert (forall (($generated@@607 T@U) ) (! (= (type ($generated@@606 $generated@@607)) $generated@@72)
 :pattern ( ($generated@@606 $generated@@607))
)))
(assert (forall (($generated@@608 T@U) ($generated@@609 T@U) ) (!  (=> (and (= (type $generated@@608) $generated@@72) (= (type $generated@@609) $generated@@72)) (= ($generated@@606 ($generated@@222 $generated@@608 $generated@@609)) $generated@@609))
 :pattern ( ($generated@@222 $generated@@608 $generated@@609))
)))
(assert (forall (($generated@@611 T@U) ) (! (= (type ($generated@@610 $generated@@611)) $generated@@72)
 :pattern ( ($generated@@610 $generated@@611))
)))
(assert (forall (($generated@@612 T@U) ($generated@@613 T@U) ) (!  (=> (and (= (type $generated@@612) $generated@@72) (= (type $generated@@613) $generated@@72)) (= ($generated@@610 ($generated@@347 $generated@@612 $generated@@613)) $generated@@612))
 :pattern ( ($generated@@347 $generated@@612 $generated@@613))
)))
(assert (forall (($generated@@615 T@U) ) (! (= (type ($generated@@614 $generated@@615)) $generated@@72)
 :pattern ( ($generated@@614 $generated@@615))
)))
(assert (forall (($generated@@616 T@U) ($generated@@617 T@U) ) (!  (=> (and (= (type $generated@@616) $generated@@72) (= (type $generated@@617) $generated@@72)) (= ($generated@@614 ($generated@@347 $generated@@616 $generated@@617)) $generated@@617))
 :pattern ( ($generated@@347 $generated@@616 $generated@@617))
)))
(assert (forall (($generated@@619 T@U) ) (! (= (type ($generated@@618 $generated@@619)) $generated@@72)
 :pattern ( ($generated@@618 $generated@@619))
)))
(assert (forall (($generated@@620 T@U) ($generated@@621 T@U) ) (!  (=> (and (= (type $generated@@620) $generated@@72) (= (type $generated@@621) $generated@@72)) (= ($generated@@618 ($generated@@354 $generated@@620 $generated@@621)) $generated@@620))
 :pattern ( ($generated@@354 $generated@@620 $generated@@621))
)))
(assert (forall (($generated@@623 T@U) ) (! (= (type ($generated@@622 $generated@@623)) $generated@@72)
 :pattern ( ($generated@@622 $generated@@623))
)))
(assert (forall (($generated@@624 T@U) ($generated@@625 T@U) ) (!  (=> (and (= (type $generated@@624) $generated@@72) (= (type $generated@@625) $generated@@72)) (= ($generated@@622 ($generated@@354 $generated@@624 $generated@@625)) $generated@@625))
 :pattern ( ($generated@@354 $generated@@624 $generated@@625))
)))
(assert (forall (($generated@@626 T@U) ($generated@@627 T@U) ) (!  (=> (and (= (type $generated@@626) $generated@@156) (= (type $generated@@627) $generated@@156)) (= ($generated@@281 ($generated@@234 $generated@@626 $generated@@627)) $generated@@65))
 :pattern ( ($generated@@234 $generated@@626 $generated@@627))
)))
(assert (forall (($generated@@629 T@U) ) (! (= (type ($generated@@628 $generated@@629)) $generated@@72)
 :pattern ( ($generated@@628 $generated@@629))
)))
(assert (forall (($generated@@630 T@U) ($generated@@631 T@U) ) (!  (=> (and (= (type $generated@@630) $generated@@72) (= (type $generated@@631) $generated@@72)) (= ($generated@@628 ($generated@@146 $generated@@630 $generated@@631)) $generated@@630))
 :pattern ( ($generated@@146 $generated@@630 $generated@@631))
)))
(assert (forall (($generated@@633 T@U) ) (! (= (type ($generated@@632 $generated@@633)) $generated@@72)
 :pattern ( ($generated@@632 $generated@@633))
)))
(assert (forall (($generated@@634 T@U) ($generated@@635 T@U) ) (!  (=> (and (= (type $generated@@634) $generated@@72) (= (type $generated@@635) $generated@@72)) (= ($generated@@632 ($generated@@146 $generated@@634 $generated@@635)) $generated@@635))
 :pattern ( ($generated@@146 $generated@@634 $generated@@635))
)))
(assert (forall (($generated@@636 T@U) ($generated@@637 T@U) ) (!  (=> (and (= (type $generated@@636) $generated@@156) (= (type $generated@@637) $generated@@156)) (= ($generated@@154 ($generated@@234 $generated@@636 $generated@@637)) $generated@@636))
 :pattern ( ($generated@@234 $generated@@636 $generated@@637))
)))
(assert (forall (($generated@@638 T@U) ($generated@@639 T@U) ) (!  (=> (and (= (type $generated@@638) $generated@@156) (= (type $generated@@639) $generated@@156)) (= ($generated@@155 ($generated@@234 $generated@@638 $generated@@639)) $generated@@639))
 :pattern ( ($generated@@234 $generated@@638 $generated@@639))
)))
(assert  (and (forall (($generated@@642 T@U) ) (! (= (type ($generated@@640 $generated@@642)) $generated@@72)
 :pattern ( ($generated@@640 $generated@@642))
)) (forall (($generated@@643 T@U) ($generated@@644 Int) ) (! (let (($generated@@645 ($generated@@290 (type $generated@@643))))
(= (type ($generated@@641 $generated@@643 $generated@@644)) $generated@@645))
 :pattern ( ($generated@@641 $generated@@643 $generated@@644))
))))
(assert (forall (($generated@@646 T@U) ($generated@@647 T@U) ($generated@@648 T@U) ) (!  (=> (and (and (= (type $generated@@646) ($generated@@289 $generated@@156)) (= (type $generated@@647) $generated@@72)) (= (type $generated@@648) ($generated@@84 $generated@@85 $generated@@86))) (= ($generated@@82 $generated@@646 ($generated@@640 $generated@@647) $generated@@648) (forall (($generated@@649 Int) ) (!  (=> (and (<= 0 $generated@@649) (< $generated@@649 ($generated@@288 $generated@@646))) ($generated@@275 ($generated@@641 $generated@@646 $generated@@649) $generated@@647 $generated@@648))
 :pattern ( ($generated@@641 $generated@@646 $generated@@649))
))))
 :pattern ( ($generated@@82 $generated@@646 ($generated@@640 $generated@@647) $generated@@648))
)))
(assert (forall (($generated@@651 Int) ) (! (= ($generated@@650 ($generated@@83 $generated@@651)) $generated@@651)
 :pattern ( ($generated@@83 $generated@@651))
)))
(assert (forall (($generated@@653 T@U) ) (! (= (type ($generated@@652 $generated@@653)) $generated@@72)
 :pattern ( ($generated@@652 $generated@@653))
)))
(assert (forall (($generated@@654 T@U) ) (!  (=> (= (type $generated@@654) $generated@@72) (= ($generated@@652 ($generated@@243 $generated@@654)) $generated@@654))
 :pattern ( ($generated@@243 $generated@@654))
)))
(assert (forall (($generated@@655 T@U) ) (!  (=> (= (type $generated@@655) $generated@@72) (= ($generated@@80 ($generated@@243 $generated@@655)) $generated@@54))
 :pattern ( ($generated@@243 $generated@@655))
)))
(assert (forall (($generated@@657 T@U) ) (! (= (type ($generated@@656 $generated@@657)) $generated@@72)
 :pattern ( ($generated@@656 $generated@@657))
)))
(assert (forall (($generated@@658 T@U) ) (!  (=> (= (type $generated@@658) $generated@@72) (= ($generated@@656 ($generated@@248 $generated@@658)) $generated@@658))
 :pattern ( ($generated@@248 $generated@@658))
)))
(assert (forall (($generated@@659 T@U) ) (!  (=> (= (type $generated@@659) $generated@@72) (= ($generated@@80 ($generated@@248 $generated@@659)) $generated@@55))
 :pattern ( ($generated@@248 $generated@@659))
)))
(assert (forall (($generated@@661 T@U) ) (! (= (type ($generated@@660 $generated@@661)) $generated@@72)
 :pattern ( ($generated@@660 $generated@@661))
)))
(assert (forall (($generated@@662 T@U) ) (!  (=> (= (type $generated@@662) $generated@@72) (= ($generated@@660 ($generated@@161 $generated@@662)) $generated@@662))
 :pattern ( ($generated@@161 $generated@@662))
)))
(assert (forall (($generated@@663 T@U) ) (!  (=> (= (type $generated@@663) $generated@@72) (= ($generated@@80 ($generated@@161 $generated@@663)) $generated@@56))
 :pattern ( ($generated@@161 $generated@@663))
)))
(assert (forall (($generated@@665 T@U) ) (! (= (type ($generated@@664 $generated@@665)) $generated@@72)
 :pattern ( ($generated@@664 $generated@@665))
)))
(assert (forall (($generated@@666 T@U) ) (!  (=> (= (type $generated@@666) $generated@@72) (= ($generated@@664 ($generated@@640 $generated@@666)) $generated@@666))
 :pattern ( ($generated@@640 $generated@@666))
)))
(assert (forall (($generated@@667 T@U) ) (!  (=> (= (type $generated@@667) $generated@@72) (= ($generated@@80 ($generated@@640 $generated@@667)) $generated@@57))
 :pattern ( ($generated@@640 $generated@@667))
)))
(assert (forall (($generated@@668 T@U) ) (! (let (($generated@@669 (type $generated@@668)))
(= ($generated@@433 $generated@@669 ($generated@@296 $generated@@668)) $generated@@668))
 :pattern ( ($generated@@296 $generated@@668))
)))
(assert (forall (($generated@@670 T@U) ($generated@@671 T@U) ($generated@@672 T@U) ) (!  (=> (and (and (= (type $generated@@670) ($generated@@309 $generated@@156 $generated@@156)) (= (type $generated@@671) $generated@@72)) (= (type $generated@@672) $generated@@72)) (= ($generated@@143 $generated@@670 ($generated@@519 $generated@@671 $generated@@672)) (forall (($generated@@673 T@U) ) (!  (=> (and (= (type $generated@@673) $generated@@156) ($generated@@0 ($generated@@89 ($generated@@307 $generated@@670) $generated@@673))) (and ($generated@@224 ($generated@@89 ($generated@@486 $generated@@670) $generated@@673) $generated@@672) ($generated@@224 $generated@@673 $generated@@671)))
 :pattern ( ($generated@@89 ($generated@@486 $generated@@670) $generated@@673))
 :pattern ( ($generated@@89 ($generated@@307 $generated@@670) $generated@@673))
))))
 :pattern ( ($generated@@143 $generated@@670 ($generated@@519 $generated@@671 $generated@@672)))
)))
(assert (forall (($generated@@674 T@U) ($generated@@675 T@U) ($generated@@676 T@U) ) (!  (=> (and (and (= (type $generated@@674) ($generated@@327 $generated@@156 $generated@@156)) (= (type $generated@@675) $generated@@72)) (= (type $generated@@676) $generated@@72)) (= ($generated@@143 $generated@@674 ($generated@@527 $generated@@675 $generated@@676)) (forall (($generated@@677 T@U) ) (!  (=> (and (= (type $generated@@677) $generated@@156) ($generated@@0 ($generated@@89 ($generated@@325 $generated@@674) $generated@@677))) (and ($generated@@224 ($generated@@89 ($generated@@494 $generated@@674) $generated@@677) $generated@@676) ($generated@@224 $generated@@677 $generated@@675)))
 :pattern ( ($generated@@89 ($generated@@494 $generated@@674) $generated@@677))
 :pattern ( ($generated@@89 ($generated@@325 $generated@@674) $generated@@677))
))))
 :pattern ( ($generated@@143 $generated@@674 ($generated@@527 $generated@@675 $generated@@676)))
)))
(assert (forall (($generated@@680 T@U) ($generated@@681 T@U) ) (!  (=> (and (= (type $generated@@680) $generated@@156) (= (type $generated@@681) $generated@@156)) (< ($generated@@678 $generated@@680) ($generated@@679 ($generated@@234 $generated@@680 $generated@@681))))
 :pattern ( ($generated@@234 $generated@@680 $generated@@681))
)))
(assert (forall (($generated@@682 T@U) ($generated@@683 T@U) ) (!  (=> (and (= (type $generated@@682) $generated@@156) (= (type $generated@@683) $generated@@156)) (< ($generated@@678 $generated@@683) ($generated@@679 ($generated@@234 $generated@@682 $generated@@683))))
 :pattern ( ($generated@@234 $generated@@682 $generated@@683))
)))
(assert (forall (($generated@@684 T@U) ($generated@@685 T@U) ($generated@@686 T@U) ) (!  (=> (and (and (= (type $generated@@684) $generated@@72) (= (type $generated@@685) $generated@@72)) (= (type $generated@@686) $generated@@223)) (= ($generated@@143 $generated@@686 ($generated@@354 $generated@@684 $generated@@685))  (and ($generated@@143 $generated@@686 ($generated@@347 $generated@@684 $generated@@685)) (forall (($generated@@687 T@U) ) (!  (=> (and (= (type $generated@@687) $generated@@156) ($generated@@224 $generated@@687 $generated@@684)) ($generated@@462 $generated@@684 $generated@@685 $generated@@260 $generated@@686 $generated@@687))
 :no-pattern (type $generated@@687)
 :no-pattern ($generated $generated@@687)
 :no-pattern ($generated@@0 $generated@@687)
)))))
 :pattern ( ($generated@@143 $generated@@686 ($generated@@354 $generated@@684 $generated@@685)))
)))
(assert (forall (($generated@@688 T@U) ($generated@@689 T@U) ($generated@@690 T@U) ) (!  (=> (and (and (= (type $generated@@688) $generated@@72) (= (type $generated@@689) $generated@@72)) (= (type $generated@@690) $generated@@223)) (= ($generated@@143 $generated@@690 ($generated@@347 $generated@@688 $generated@@689))  (and ($generated@@143 $generated@@690 ($generated@@222 $generated@@688 $generated@@689)) (forall (($generated@@691 T@U) ) (!  (=> (and (= (type $generated@@691) $generated@@156) ($generated@@224 $generated@@691 $generated@@688)) ($generated@@262 ($generated@@259 $generated@@688 $generated@@689 $generated@@260 $generated@@690 $generated@@691) ($generated@@263 $generated@@156)))
 :no-pattern (type $generated@@691)
 :no-pattern ($generated $generated@@691)
 :no-pattern ($generated@@0 $generated@@691)
)))))
 :pattern ( ($generated@@143 $generated@@690 ($generated@@347 $generated@@688 $generated@@689)))
)))
(assert (forall (($generated@@692 T@U) ($generated@@693 T@U) ($generated@@694 T@U) ) (!  (=> (and (and (and (= (type $generated@@692) $generated@@156) (= (type $generated@@693) $generated@@72)) (= (type $generated@@694) $generated@@72)) ($generated@@224 $generated@@692 ($generated@@519 $generated@@693 $generated@@694))) (and (= ($generated@@296 ($generated@@433 ($generated@@309 $generated@@156 $generated@@156) $generated@@692)) $generated@@692) ($generated@@143 ($generated@@433 ($generated@@309 $generated@@156 $generated@@156) $generated@@692) ($generated@@519 $generated@@693 $generated@@694))))
 :pattern ( ($generated@@224 $generated@@692 ($generated@@519 $generated@@693 $generated@@694)))
)))
(assert (forall (($generated@@695 T@U) ($generated@@696 T@U) ($generated@@697 T@U) ) (!  (=> (and (and (and (= (type $generated@@695) $generated@@156) (= (type $generated@@696) $generated@@72)) (= (type $generated@@697) $generated@@72)) ($generated@@224 $generated@@695 ($generated@@527 $generated@@696 $generated@@697))) (and (= ($generated@@296 ($generated@@433 ($generated@@327 $generated@@156 $generated@@156) $generated@@695)) $generated@@695) ($generated@@143 ($generated@@433 ($generated@@327 $generated@@156 $generated@@156) $generated@@695) ($generated@@527 $generated@@696 $generated@@697))))
 :pattern ( ($generated@@224 $generated@@695 ($generated@@527 $generated@@696 $generated@@697)))
)))
(assert (forall (($generated@@698 T@U) ($generated@@699 T@U) ($generated@@700 T@U) ) (!  (=> (and (and (and (= (type $generated@@698) $generated@@72) (= (type $generated@@699) $generated@@72)) (= (type $generated@@700) $generated@@156)) ($generated@@224 $generated@@700 ($generated@@222 $generated@@698 $generated@@699))) (and (= ($generated@@296 ($generated@@433 $generated@@223 $generated@@700)) $generated@@700) ($generated@@143 ($generated@@433 $generated@@223 $generated@@700) ($generated@@222 $generated@@698 $generated@@699))))
 :pattern ( ($generated@@224 $generated@@700 ($generated@@222 $generated@@698 $generated@@699)))
)))
(assert (forall (($generated@@701 T@U) ($generated@@702 T@U) ($generated@@703 T@U) ) (!  (=> (and (and (and (= (type $generated@@701) $generated@@72) (= (type $generated@@702) $generated@@72)) (= (type $generated@@703) $generated@@156)) ($generated@@224 $generated@@703 ($generated@@347 $generated@@701 $generated@@702))) (and (= ($generated@@296 ($generated@@433 $generated@@223 $generated@@703)) $generated@@703) ($generated@@143 ($generated@@433 $generated@@223 $generated@@703) ($generated@@347 $generated@@701 $generated@@702))))
 :pattern ( ($generated@@224 $generated@@703 ($generated@@347 $generated@@701 $generated@@702)))
)))
(assert (forall (($generated@@704 T@U) ($generated@@705 T@U) ($generated@@706 T@U) ) (!  (=> (and (and (and (= (type $generated@@704) $generated@@72) (= (type $generated@@705) $generated@@72)) (= (type $generated@@706) $generated@@156)) ($generated@@224 $generated@@706 ($generated@@354 $generated@@704 $generated@@705))) (and (= ($generated@@296 ($generated@@433 $generated@@223 $generated@@706)) $generated@@706) ($generated@@143 ($generated@@433 $generated@@223 $generated@@706) ($generated@@354 $generated@@704 $generated@@705))))
 :pattern ( ($generated@@224 $generated@@706 ($generated@@354 $generated@@704 $generated@@705)))
)))
(assert (forall (($generated@@707 T@U) ($generated@@708 T@U) ($generated@@709 T@U) ) (!  (=> (and (and (and (= (type $generated@@707) $generated@@72) (= (type $generated@@708) $generated@@72)) (= (type $generated@@709) $generated@@156)) ($generated@@224 $generated@@709 ($generated@@146 $generated@@707 $generated@@708))) (and (= ($generated@@296 ($generated@@433 $generated@@147 $generated@@709)) $generated@@709) ($generated@@143 ($generated@@433 $generated@@147 $generated@@709) ($generated@@146 $generated@@707 $generated@@708))))
 :pattern ( ($generated@@224 $generated@@709 ($generated@@146 $generated@@707 $generated@@708)))
)))
(assert (forall (($generated@@710 T@U) ) (! (let (($generated@@711 (type $generated@@710)))
 (not ($generated@@0 ($generated@@89 ($generated@@263 $generated@@711) $generated@@710))))
 :pattern ( (let (($generated@@711 (type $generated@@710)))
($generated@@89 ($generated@@263 $generated@@711) $generated@@710)))
)))
(assert (forall (($generated@@712 T@U) ) (! (let (($generated@@713 (type $generated@@712)))
 (not ($generated@@0 ($generated@@89 ($generated@@543 $generated@@713) $generated@@712))))
 :pattern ( (let (($generated@@713 (type $generated@@712)))
($generated@@89 ($generated@@543 $generated@@713) $generated@@712)))
)))
(assert (forall (($generated@@715 T@U) ) (! (= (type ($generated@@714 $generated@@715)) $generated@@77)
 :pattern ( ($generated@@714 $generated@@715))
)))
(assert (forall (($generated@@716 T@U) ($generated@@717 T@U) ) (!  (=> (and (= (type $generated@@716) $generated@@72) (= (type $generated@@717) $generated@@72)) (and (= ($generated@@80 ($generated@@222 $generated@@716 $generated@@717)) $generated@@62) (= ($generated@@714 ($generated@@222 $generated@@716 $generated@@717)) $generated@@68)))
 :pattern ( ($generated@@222 $generated@@716 $generated@@717))
)))
(assert (forall (($generated@@718 T@U) ($generated@@719 T@U) ) (!  (=> (and (= (type $generated@@718) $generated@@72) (= (type $generated@@719) $generated@@72)) (and (= ($generated@@80 ($generated@@347 $generated@@718 $generated@@719)) $generated@@63) (= ($generated@@714 ($generated@@347 $generated@@718 $generated@@719)) $generated@@69)))
 :pattern ( ($generated@@347 $generated@@718 $generated@@719))
)))
(assert (forall (($generated@@720 T@U) ($generated@@721 T@U) ) (!  (=> (and (= (type $generated@@720) $generated@@72) (= (type $generated@@721) $generated@@72)) (and (= ($generated@@80 ($generated@@354 $generated@@720 $generated@@721)) $generated@@64) (= ($generated@@714 ($generated@@354 $generated@@720 $generated@@721)) $generated@@70)))
 :pattern ( ($generated@@354 $generated@@720 $generated@@721))
)))
(assert (forall (($generated@@722 T@U) ($generated@@723 T@U) ) (!  (=> (and (= (type $generated@@722) $generated@@72) (= (type $generated@@723) $generated@@72)) (and (= ($generated@@80 ($generated@@146 $generated@@722 $generated@@723)) $generated@@66) (= ($generated@@714 ($generated@@146 $generated@@722 $generated@@723)) $generated@@71)))
 :pattern ( ($generated@@146 $generated@@722 $generated@@723))
)))
(assert (forall (($generated@@724 T@U) ($generated@@725 T@U) ($generated@@726 T@U) ($generated@@727 T@U) ($generated@@728 T@U) ) (!  (=> (and (and (and (and (and (= (type $generated@@724) $generated@@72) (= (type $generated@@725) $generated@@72)) (= (type $generated@@726) ($generated@@84 $generated@@85 $generated@@86))) (= (type $generated@@727) $generated@@223)) (= (type $generated@@728) $generated@@156)) (and (and ($generated@@261 $generated@@726) (and ($generated@@224 $generated@@728 $generated@@724) ($generated@@143 $generated@@727 ($generated@@222 $generated@@724 $generated@@725)))) ($generated@@262 ($generated@@259 $generated@@724 $generated@@725 $generated@@260 $generated@@727 $generated@@728) ($generated@@263 $generated@@156)))) (= ($generated@@462 $generated@@724 $generated@@725 $generated@@260 $generated@@727 $generated@@728) ($generated@@462 $generated@@724 $generated@@725 $generated@@726 $generated@@727 $generated@@728)))
 :pattern ( ($generated@@462 $generated@@724 $generated@@725 $generated@@260 $generated@@727 $generated@@728) ($generated@@261 $generated@@726))
 :pattern ( ($generated@@462 $generated@@724 $generated@@725 $generated@@726 $generated@@727 $generated@@728))
)))
(assert (forall (($generated@@729 T@U) ) (!  (=> (= (type $generated@@729) $generated@@147) (= ($generated@@678 ($generated@@296 $generated@@729)) ($generated@@679 $generated@@729)))
 :pattern ( ($generated@@678 ($generated@@296 $generated@@729)))
)))
(assert (forall (($generated@@730 T@U) ) (!  (=> (and (= (type $generated@@730) $generated@@156) ($generated@@224 $generated@@730 ($generated@@83 0))) (and (= ($generated@@296 ($generated@@433 $generated@@2 $generated@@730)) $generated@@730) ($generated@@143 ($generated@@433 ($generated@@84 $generated@@156 $generated@@4) $generated@@730) ($generated@@83 0))))
 :pattern ( ($generated@@224 $generated@@730 ($generated@@83 0)))
)))
(assert (forall (($generated@@731 T@U) ($generated@@732 T@U) ) (!  (=> (and (and (= (type $generated@@731) $generated@@156) (= (type $generated@@732) $generated@@72)) ($generated@@224 $generated@@731 ($generated@@243 $generated@@732))) (and (= ($generated@@296 ($generated@@433 ($generated@@84 $generated@@156 $generated@@4) $generated@@731)) $generated@@731) ($generated@@143 ($generated@@433 ($generated@@84 $generated@@156 $generated@@4) $generated@@731) ($generated@@243 $generated@@732))))
 :pattern ( ($generated@@224 $generated@@731 ($generated@@243 $generated@@732)))
)))
(assert (forall (($generated@@733 T@U) ($generated@@734 T@U) ) (!  (=> (and (and (= (type $generated@@733) $generated@@156) (= (type $generated@@734) $generated@@72)) ($generated@@224 $generated@@733 ($generated@@248 $generated@@734))) (and (= ($generated@@296 ($generated@@433 ($generated@@84 $generated@@156 $generated@@4) $generated@@733)) $generated@@733) ($generated@@143 ($generated@@433 ($generated@@84 $generated@@156 $generated@@4) $generated@@733) ($generated@@248 $generated@@734))))
 :pattern ( ($generated@@224 $generated@@733 ($generated@@248 $generated@@734)))
)))
(assert (forall (($generated@@735 T@U) ($generated@@736 T@U) ) (!  (=> (and (and (= (type $generated@@735) $generated@@156) (= (type $generated@@736) $generated@@72)) ($generated@@224 $generated@@735 ($generated@@161 $generated@@736))) (and (= ($generated@@296 ($generated@@433 ($generated@@84 $generated@@156 $generated@@2) $generated@@735)) $generated@@735) ($generated@@143 ($generated@@433 ($generated@@84 $generated@@156 $generated@@2) $generated@@735) ($generated@@161 $generated@@736))))
 :pattern ( ($generated@@224 $generated@@735 ($generated@@161 $generated@@736)))
)))
(assert (forall (($generated@@737 T@U) ($generated@@738 T@U) ) (!  (=> (and (and (= (type $generated@@737) $generated@@156) (= (type $generated@@738) $generated@@72)) ($generated@@224 $generated@@737 ($generated@@640 $generated@@738))) (and (= ($generated@@296 ($generated@@433 ($generated@@289 $generated@@156) $generated@@737)) $generated@@737) ($generated@@143 ($generated@@433 ($generated@@289 $generated@@156) $generated@@737) ($generated@@640 $generated@@738))))
 :pattern ( ($generated@@224 $generated@@737 ($generated@@640 $generated@@738)))
)))
(assert (= ($generated@@80 $generated@@140) $generated@@61))
(assert (= ($generated@@714 $generated@@140) $generated@@67))
(assert (forall (($generated@@739 T@U) ($generated@@740 T@U) ($generated@@741 T@U) ) (!  (=> (and (and (= (type $generated@@739) ($generated@@84 $generated@@156 $generated@@2)) (= (type $generated@@740) $generated@@72)) (= (type $generated@@741) ($generated@@84 $generated@@85 $generated@@86))) (= ($generated@@82 $generated@@739 ($generated@@161 $generated@@740) $generated@@741) (forall (($generated@@742 T@U) ) (!  (=> (and (= (type $generated@@742) $generated@@156) (< 0 ($generated ($generated@@89 $generated@@739 $generated@@742)))) ($generated@@275 $generated@@742 $generated@@740 $generated@@741))
 :pattern ( ($generated@@89 $generated@@739 $generated@@742))
))))
 :pattern ( ($generated@@82 $generated@@739 ($generated@@161 $generated@@740) $generated@@741))
)))
(assert (forall (($generated@@743 T@U) ($generated@@744 T@U) ($generated@@745 T@U) ) (!  (=> (and (and (and (= (type $generated@@743) $generated@@147) (= (type $generated@@744) $generated@@72)) (= (type $generated@@745) ($generated@@84 $generated@@85 $generated@@86))) (and ($generated@@261 $generated@@745) (and ($generated@@145 $generated@@743) (exists (($generated@@746 T@U) ) (!  (and (= (type $generated@@746) $generated@@72) ($generated@@82 $generated@@743 ($generated@@146 $generated@@744 $generated@@746) $generated@@745))
 :pattern ( ($generated@@82 $generated@@743 ($generated@@146 $generated@@744 $generated@@746) $generated@@745))
))))) ($generated@@275 ($generated@@154 $generated@@743) $generated@@744 $generated@@745))
 :pattern ( ($generated@@275 ($generated@@154 $generated@@743) $generated@@744 $generated@@745))
)))
(assert (forall (($generated@@747 T@U) ($generated@@748 T@U) ($generated@@749 T@U) ) (!  (=> (and (and (and (= (type $generated@@747) $generated@@147) (= (type $generated@@748) $generated@@72)) (= (type $generated@@749) ($generated@@84 $generated@@85 $generated@@86))) (and ($generated@@261 $generated@@749) (and ($generated@@145 $generated@@747) (exists (($generated@@750 T@U) ) (!  (and (= (type $generated@@750) $generated@@72) ($generated@@82 $generated@@747 ($generated@@146 $generated@@750 $generated@@748) $generated@@749))
 :pattern ( ($generated@@82 $generated@@747 ($generated@@146 $generated@@750 $generated@@748) $generated@@749))
))))) ($generated@@275 ($generated@@155 $generated@@747) $generated@@748 $generated@@749))
 :pattern ( ($generated@@275 ($generated@@155 $generated@@747) $generated@@748 $generated@@749))
)))
(assert (forall (($generated@@751 T@U) ($generated@@752 T@U) ) (!  (=> (and (= (type $generated@@751) $generated@@156) (= (type $generated@@752) $generated@@156)) (= ($generated@@234 ($generated@@255 $generated@@751) ($generated@@255 $generated@@752)) ($generated@@255 ($generated@@234 $generated@@751 $generated@@752))))
 :pattern ( ($generated@@234 ($generated@@255 $generated@@751) ($generated@@255 $generated@@752)))
)))
(assert (forall (($generated@@753 Int) ) (! (= ($generated@@296 ($generated@@8 ($generated@@253 $generated@@753))) ($generated@@255 ($generated@@296 ($generated@@8 $generated@@753))))
 :pattern ( ($generated@@296 ($generated@@8 ($generated@@253 $generated@@753))))
)))
(assert (forall (($generated@@754 T@U) ) (! (= ($generated@@296 ($generated@@255 $generated@@754)) ($generated@@255 ($generated@@296 $generated@@754)))
 :pattern ( ($generated@@296 ($generated@@255 $generated@@754)))
)))
(assert (forall (($generated@@755 T@U) ) (! (let (($generated@@756 ($generated@@290 (type $generated@@755))))
 (=> (and (= (type $generated@@755) ($generated@@289 $generated@@756)) (= ($generated@@288 $generated@@755) 0)) (= $generated@@755 ($generated@@287 $generated@@756))))
 :pattern ( ($generated@@288 $generated@@755))
)))
(assert (forall (($generated@@757 T@U) ($generated@@758 T@U) ($generated@@759 T@U) ) (! (let (($generated@@760 (type $generated@@758)))
 (=> (and (and (= (type $generated@@757) ($generated@@84 $generated@@760 $generated@@2)) (= (type $generated@@759) $generated@@2)) (<= 0 ($generated $generated@@759))) (= ($generated@@301 ($generated@@90 $generated@@757 $generated@@758 $generated@@759)) (+ (- ($generated@@301 $generated@@757) ($generated ($generated@@89 $generated@@757 $generated@@758))) ($generated $generated@@759)))))
 :pattern ( ($generated@@301 ($generated@@90 $generated@@757 $generated@@758 $generated@@759)))
)))
(assert (forall (($generated@@761 T@U) ($generated@@762 T@U) ) (!  (=> (and (= (type $generated@@761) ($generated@@84 $generated@@85 $generated@@86)) (= (type $generated@@762) $generated@@2)) ($generated@@82 $generated@@762 $generated@@46 $generated@@761))
 :pattern ( ($generated@@82 $generated@@762 $generated@@46 $generated@@761))
)))
(assert (forall (($generated@@763 T@U) ($generated@@764 T@U) ) (!  (=> (and (= (type $generated@@763) ($generated@@84 $generated@@85 $generated@@86)) (= (type $generated@@764) $generated@@3)) ($generated@@82 $generated@@764 $generated@@47 $generated@@763))
 :pattern ( ($generated@@82 $generated@@764 $generated@@47 $generated@@763))
)))
(assert (forall (($generated@@765 T@U) ($generated@@766 T@U) ) (!  (=> (and (= (type $generated@@765) ($generated@@84 $generated@@85 $generated@@86)) (= (type $generated@@766) $generated@@4)) ($generated@@82 $generated@@766 $generated@@44 $generated@@765))
 :pattern ( ($generated@@82 $generated@@766 $generated@@44 $generated@@765))
)))
(assert (forall (($generated@@767 T@U) ($generated@@768 T@U) ) (!  (=> (and (= (type $generated@@767) ($generated@@84 $generated@@85 $generated@@86)) (= (type $generated@@768) $generated@@567)) ($generated@@82 $generated@@768 $generated@@45 $generated@@767))
 :pattern ( ($generated@@82 $generated@@768 $generated@@45 $generated@@767))
)))
(assert (forall (($generated@@769 T@U) ($generated@@770 T@U) ) (!  (=> (and (= (type $generated@@769) ($generated@@84 $generated@@85 $generated@@86)) (= (type $generated@@770) $generated@@156)) ($generated@@82 $generated@@770 $generated@@48 $generated@@769))
 :pattern ( ($generated@@82 $generated@@770 $generated@@48 $generated@@769))
)))
(assert (forall (($generated@@771 T@U) ($generated@@772 T@U) ) (!  (=> (and (= (type $generated@@771) ($generated@@289 $generated@@156)) (= (type $generated@@772) $generated@@72)) (= ($generated@@143 $generated@@771 ($generated@@640 $generated@@772)) (forall (($generated@@773 Int) ) (!  (=> (and (<= 0 $generated@@773) (< $generated@@773 ($generated@@288 $generated@@771))) ($generated@@224 ($generated@@641 $generated@@771 $generated@@773) $generated@@772))
 :pattern ( ($generated@@641 $generated@@771 $generated@@773))
))))
 :pattern ( ($generated@@143 $generated@@771 ($generated@@640 $generated@@772)))
)))
(assert (forall (($generated@@775 T@U) ($generated@@776 Int) ) (!  (=> (= (type $generated@@775) ($generated@@289 $generated@@156)) (=> (and (<= 0 $generated@@776) (< $generated@@776 ($generated@@288 $generated@@775))) (< ($generated@@679 ($generated@@433 $generated@@147 ($generated@@641 $generated@@775 $generated@@776))) ($generated@@774 $generated@@775))))
 :pattern ( ($generated@@679 ($generated@@433 $generated@@147 ($generated@@641 $generated@@775 $generated@@776))))
)))
(assert (forall (($generated@@777 T@U) ($generated@@778 T@U) ($generated@@779 T@U) ) (!  (=> (and (and (and (= (type $generated@@777) ($generated@@309 $generated@@156 $generated@@156)) (= (type $generated@@778) $generated@@72)) (= (type $generated@@779) $generated@@72)) ($generated@@143 $generated@@777 ($generated@@519 $generated@@778 $generated@@779))) (and (and ($generated@@143 ($generated@@307 $generated@@777) ($generated@@243 $generated@@778)) ($generated@@143 ($generated@@441 $generated@@777) ($generated@@243 $generated@@779))) ($generated@@143 ($generated@@485 $generated@@777) ($generated@@243 ($generated@@146 $generated@@778 $generated@@779)))))
 :pattern ( ($generated@@143 $generated@@777 ($generated@@519 $generated@@778 $generated@@779)))
)))
(assert (forall (($generated@@780 T@U) ($generated@@781 T@U) ($generated@@782 T@U) ) (!  (=> (and (and (and (= (type $generated@@780) ($generated@@327 $generated@@156 $generated@@156)) (= (type $generated@@781) $generated@@72)) (= (type $generated@@782) $generated@@72)) ($generated@@143 $generated@@780 ($generated@@527 $generated@@781 $generated@@782))) (and (and ($generated@@143 ($generated@@325 $generated@@780) ($generated@@248 $generated@@781)) ($generated@@143 ($generated@@452 $generated@@780) ($generated@@248 $generated@@782))) ($generated@@143 ($generated@@493 $generated@@780) ($generated@@248 ($generated@@146 $generated@@781 $generated@@782)))))
 :pattern ( ($generated@@143 $generated@@780 ($generated@@527 $generated@@781 $generated@@782)))
)))
(assert (forall (($generated@@783 T@U) ) (!  (=> (= (type $generated@@783) $generated@@2) ($generated@@143 $generated@@783 $generated@@46))
 :pattern ( ($generated@@143 $generated@@783 $generated@@46))
)))
(assert (forall (($generated@@784 T@U) ) (!  (=> (= (type $generated@@784) $generated@@3) ($generated@@143 $generated@@784 $generated@@47))
 :pattern ( ($generated@@143 $generated@@784 $generated@@47))
)))
(assert (forall (($generated@@785 T@U) ) (!  (=> (= (type $generated@@785) $generated@@4) ($generated@@143 $generated@@785 $generated@@44))
 :pattern ( ($generated@@143 $generated@@785 $generated@@44))
)))
(assert (forall (($generated@@786 T@U) ) (!  (=> (= (type $generated@@786) $generated@@567) ($generated@@143 $generated@@786 $generated@@45))
 :pattern ( ($generated@@143 $generated@@786 $generated@@45))
)))
(assert (forall (($generated@@787 T@U) ) (!  (=> (= (type $generated@@787) $generated@@156) ($generated@@143 $generated@@787 $generated@@48))
 :pattern ( ($generated@@143 $generated@@787 $generated@@48))
)))
(push 1)
(declare-fun ControlFlow (Int Int) Int)
(declare-fun $generated@@788 () T@U)
(declare-fun $generated@@789 () T@U)
(declare-fun $generated@@790 () Int)
(declare-fun $generated@@791 () Int)
(declare-fun $generated@@792 () Int)
(declare-fun $generated@@793 () Int)
(declare-fun $generated@@794 () Int)
(declare-fun $generated@@795 () T@U)
(declare-fun $generated@@796 () T@U)
(declare-fun $generated@@797 (T@U) Bool)
(declare-fun $generated@@798 () T@U)
(declare-fun $generated@@799 () T@U)
(declare-fun $generated@@800 () Int)
(assert  (and (and (and (and (and (= (type $generated@@788) ($generated@@84 $generated@@85 $generated@@86)) (= (type $generated@@795) $generated@@223)) (= (type $generated@@789) $generated@@223)) (= (type $generated@@796) ($generated@@168 $generated@@85 $generated@@4))) (= (type $generated@@798) $generated@@223)) (= (type $generated@@799) $generated@@223)))
(set-option :timeout 0)
(set-option :rlimit 0)
(assert (not
 (=> (= (ControlFlow 0 0) 35) (let (($generated@@801  (=> (forall (($generated@@802 T@U) ) (!  (=> (= (type $generated@@802) $generated@@2) (and true (=> ($generated@@462 $generated@@46 $generated@@46 $generated@@788 $generated@@789 ($generated@@296 $generated@@802)) true)))
 :pattern ( ($generated@@259 $generated@@46 $generated@@46 $generated@@788 $generated@@789 ($generated@@296 $generated@@802)))
 :pattern ( ($generated@@462 $generated@@46 $generated@@46 $generated@@788 $generated@@789 ($generated@@296 $generated@@802)))
)) (=> (and (forall (($generated@@803 T@U) ) (!  (=> (and (= (type $generated@@803) $generated@@2) true) (and ($generated@@462 $generated@@46 $generated@@46 $generated@@788 $generated@@789 ($generated@@296 $generated@@803)) ($generated@@262 ($generated@@259 $generated@@46 $generated@@46 $generated@@788 $generated@@789 ($generated@@296 $generated@@803)) ($generated@@263 $generated@@156))))
 :pattern ( ($generated@@259 $generated@@46 $generated@@46 $generated@@788 $generated@@789 ($generated@@296 $generated@@803)))
 :pattern ( ($generated@@462 $generated@@46 $generated@@46 $generated@@788 $generated@@789 ($generated@@296 $generated@@803)))
)) (= (ControlFlow 0 25) (- 0 24))) ($generated@@143 $generated@@789 ($generated@@354 $generated@@46 $generated@@46))))))
(let (($generated@@804  (=> (and (not ($generated@@462 $generated@@46 $generated@@46 $generated@@788 $generated@@789 ($generated@@296 ($generated@@8 $generated@@790)))) (= (ControlFlow 0 27) 25)) $generated@@801)))
(let (($generated@@805  (=> (and (and ($generated@@462 $generated@@46 $generated@@46 $generated@@788 $generated@@789 ($generated@@296 ($generated@@8 $generated@@790))) ($generated@@82 $generated@@789 ($generated@@222 $generated@@46 $generated@@46) $generated@@788)) (and ($generated@@82 ($generated@@8 $generated@@790) $generated@@46 $generated@@788) (= (ControlFlow 0 26) 25))) $generated@@801)))
(let (($generated@@806  (=> (and ($generated@@82 $generated@@789 ($generated@@222 $generated@@46 $generated@@46) $generated@@788) ($generated@@82 ($generated@@8 $generated@@790) $generated@@46 $generated@@788)) (and (=> (= (ControlFlow 0 28) 26) $generated@@805) (=> (= (ControlFlow 0 28) 27) $generated@@804)))))
(let (($generated@@807 true))
(let (($generated@@808  (=> (and (forall (($generated@@809 T@U) ) (!  (=> (= (type $generated@@809) $generated@@2) (and true (=> ($generated@@462 $generated@@46 $generated@@140 $generated@@788 $generated@@789 ($generated@@296 $generated@@809)) true)))
 :pattern ( ($generated@@259 $generated@@46 $generated@@140 $generated@@788 $generated@@789 ($generated@@296 $generated@@809)))
 :pattern ( ($generated@@462 $generated@@46 $generated@@140 $generated@@788 $generated@@789 ($generated@@296 $generated@@809)))
)) (forall (($generated@@810 T@U) ) (!  (=> (and (= (type $generated@@810) $generated@@2) true) (and ($generated@@462 $generated@@46 $generated@@140 $generated@@788 $generated@@789 ($generated@@296 $generated@@810)) ($generated@@262 ($generated@@259 $generated@@46 $generated@@140 $generated@@788 $generated@@789 ($generated@@296 $generated@@810)) ($generated@@263 $generated@@156))))
 :pattern ( ($generated@@259 $generated@@46 $generated@@140 $generated@@788 $generated@@789 ($generated@@296 $generated@@810)))
 :pattern ( ($generated@@462 $generated@@46 $generated@@140 $generated@@788 $generated@@789 ($generated@@296 $generated@@810)))
))) (and (=> (= (ControlFlow 0 29) 28) $generated@@806) (=> (= (ControlFlow 0 29) 23) $generated@@807)))))
(let (($generated@@811  (=> (and (not ($generated@@462 $generated@@46 $generated@@140 $generated@@788 $generated@@789 ($generated@@296 ($generated@@8 $generated@@791)))) (= (ControlFlow 0 31) 29)) $generated@@808)))
(let (($generated@@812  (=> (and (and ($generated@@462 $generated@@46 $generated@@140 $generated@@788 $generated@@789 ($generated@@296 ($generated@@8 $generated@@791))) ($generated@@82 $generated@@789 ($generated@@222 $generated@@46 $generated@@140) $generated@@788)) (and ($generated@@82 ($generated@@8 $generated@@791) $generated@@46 $generated@@788) (= (ControlFlow 0 30) 29))) $generated@@808)))
(let (($generated@@813  (=> (and ($generated@@82 $generated@@789 ($generated@@222 $generated@@46 $generated@@140) $generated@@788) ($generated@@82 ($generated@@8 $generated@@791) $generated@@46 $generated@@788)) (and (=> (= (ControlFlow 0 32) 30) $generated@@812) (=> (= (ControlFlow 0 32) 31) $generated@@811)))))
(let (($generated@@814 true))
(let (($generated@@815  (and (=> (= (ControlFlow 0 33) 32) $generated@@813) (=> (= (ControlFlow 0 33) 22) $generated@@814))))
(let (($generated@@816  (=> (forall (($generated@@817 T@U) ) (!  (=> (= (type $generated@@817) $generated@@2) (and true (=> ($generated@@462 $generated@@46 $generated@@46 $generated@@788 $generated@@789 ($generated@@296 $generated@@817)) true)))
 :pattern ( ($generated@@259 $generated@@46 $generated@@46 $generated@@788 $generated@@789 ($generated@@296 $generated@@817)))
 :pattern ( ($generated@@462 $generated@@46 $generated@@46 $generated@@788 $generated@@789 ($generated@@296 $generated@@817)))
)) (=> (and (forall (($generated@@818 T@U) ) (!  (=> (and (= (type $generated@@818) $generated@@2) true) (and ($generated@@462 $generated@@46 $generated@@46 $generated@@788 $generated@@789 ($generated@@296 $generated@@818)) ($generated@@262 ($generated@@259 $generated@@46 $generated@@46 $generated@@788 $generated@@789 ($generated@@296 $generated@@818)) ($generated@@263 $generated@@156))))
 :pattern ( ($generated@@259 $generated@@46 $generated@@46 $generated@@788 $generated@@789 ($generated@@296 $generated@@818)))
 :pattern ( ($generated@@462 $generated@@46 $generated@@46 $generated@@788 $generated@@789 ($generated@@296 $generated@@818)))
)) (= (ControlFlow 0 13) (- 0 12))) ($generated@@143 $generated@@789 ($generated@@354 $generated@@46 $generated@@46))))))
(let (($generated@@819  (=> (and (not ($generated@@462 $generated@@46 $generated@@46 $generated@@788 $generated@@789 ($generated@@296 ($generated@@8 $generated@@792)))) (= (ControlFlow 0 15) 13)) $generated@@816)))
(let (($generated@@820  (=> (and (and ($generated@@462 $generated@@46 $generated@@46 $generated@@788 $generated@@789 ($generated@@296 ($generated@@8 $generated@@792))) ($generated@@82 $generated@@789 ($generated@@222 $generated@@46 $generated@@46) $generated@@788)) (and ($generated@@82 ($generated@@8 $generated@@792) $generated@@46 $generated@@788) (= (ControlFlow 0 14) 13))) $generated@@816)))
(let (($generated@@821  (=> (and ($generated@@82 $generated@@789 ($generated@@222 $generated@@46 $generated@@46) $generated@@788) ($generated@@82 ($generated@@8 $generated@@792) $generated@@46 $generated@@788)) (and (=> (= (ControlFlow 0 16) 14) $generated@@820) (=> (= (ControlFlow 0 16) 15) $generated@@819)))))
(let (($generated@@822 true))
(let (($generated@@823  (=> (and (forall (($generated@@824 T@U) ) (!  (=> (= (type $generated@@824) $generated@@2) (and true (=> ($generated@@462 $generated@@46 $generated@@140 $generated@@788 $generated@@789 ($generated@@296 $generated@@824)) true)))
 :pattern ( ($generated@@259 $generated@@46 $generated@@140 $generated@@788 $generated@@789 ($generated@@296 $generated@@824)))
 :pattern ( ($generated@@462 $generated@@46 $generated@@140 $generated@@788 $generated@@789 ($generated@@296 $generated@@824)))
)) (forall (($generated@@825 T@U) ) (!  (=> (and (= (type $generated@@825) $generated@@2) true) (and ($generated@@462 $generated@@46 $generated@@140 $generated@@788 $generated@@789 ($generated@@296 $generated@@825)) ($generated@@262 ($generated@@259 $generated@@46 $generated@@140 $generated@@788 $generated@@789 ($generated@@296 $generated@@825)) ($generated@@263 $generated@@156))))
 :pattern ( ($generated@@259 $generated@@46 $generated@@140 $generated@@788 $generated@@789 ($generated@@296 $generated@@825)))
 :pattern ( ($generated@@462 $generated@@46 $generated@@140 $generated@@788 $generated@@789 ($generated@@296 $generated@@825)))
))) (and (=> (= (ControlFlow 0 17) 16) $generated@@821) (=> (= (ControlFlow 0 17) 11) $generated@@822)))))
(let (($generated@@826  (=> (and (not ($generated@@462 $generated@@46 $generated@@140 $generated@@788 $generated@@789 ($generated@@296 ($generated@@8 $generated@@793)))) (= (ControlFlow 0 19) 17)) $generated@@823)))
(let (($generated@@827  (=> (and (and ($generated@@462 $generated@@46 $generated@@140 $generated@@788 $generated@@789 ($generated@@296 ($generated@@8 $generated@@793))) ($generated@@82 $generated@@789 ($generated@@222 $generated@@46 $generated@@140) $generated@@788)) (and ($generated@@82 ($generated@@8 $generated@@793) $generated@@46 $generated@@788) (= (ControlFlow 0 18) 17))) $generated@@823)))
(let (($generated@@828  (=> (and ($generated@@82 $generated@@789 ($generated@@222 $generated@@46 $generated@@140) $generated@@788) ($generated@@82 ($generated@@8 $generated@@793) $generated@@46 $generated@@788)) (and (=> (= (ControlFlow 0 20) 18) $generated@@827) (=> (= (ControlFlow 0 20) 19) $generated@@826)))))
(let (($generated@@829 true))
(let (($generated@@830  (and (=> (= (ControlFlow 0 21) 20) $generated@@828) (=> (= (ControlFlow 0 21) 10) $generated@@829))))
(let (($generated@@831  (=> (forall (($generated@@832 T@U) ) (!  (=> (= (type $generated@@832) $generated@@2) (and true (=> ($generated@@462 $generated@@46 $generated@@140 $generated@@788 $generated@@789 ($generated@@296 $generated@@832)) true)))
 :pattern ( ($generated@@259 $generated@@46 $generated@@140 $generated@@788 $generated@@789 ($generated@@296 $generated@@832)))
 :pattern ( ($generated@@462 $generated@@46 $generated@@140 $generated@@788 $generated@@789 ($generated@@296 $generated@@832)))
)) (=> (and (forall (($generated@@833 T@U) ) (!  (=> (and (= (type $generated@@833) $generated@@2) true) (and ($generated@@462 $generated@@46 $generated@@140 $generated@@788 $generated@@789 ($generated@@296 $generated@@833)) ($generated@@262 ($generated@@259 $generated@@46 $generated@@140 $generated@@788 $generated@@789 ($generated@@296 $generated@@833)) ($generated@@263 $generated@@156))))
 :pattern ( ($generated@@259 $generated@@46 $generated@@140 $generated@@788 $generated@@789 ($generated@@296 $generated@@833)))
 :pattern ( ($generated@@462 $generated@@46 $generated@@140 $generated@@788 $generated@@789 ($generated@@296 $generated@@833)))
)) (= (ControlFlow 0 6) (- 0 5))) ($generated@@143 $generated@@789 ($generated@@354 $generated@@46 $generated@@46))))))
(let (($generated@@834  (=> (and (not ($generated@@462 $generated@@46 $generated@@140 $generated@@788 $generated@@789 ($generated@@296 ($generated@@8 $generated@@794)))) (= (ControlFlow 0 8) 6)) $generated@@831)))
(let (($generated@@835  (=> (and (and ($generated@@462 $generated@@46 $generated@@140 $generated@@788 $generated@@789 ($generated@@296 ($generated@@8 $generated@@794))) ($generated@@82 $generated@@789 ($generated@@222 $generated@@46 $generated@@140) $generated@@788)) (and ($generated@@82 ($generated@@8 $generated@@794) $generated@@46 $generated@@788) (= (ControlFlow 0 7) 6))) $generated@@831)))
(let (($generated@@836  (=> (and ($generated@@82 $generated@@789 ($generated@@222 $generated@@46 $generated@@140) $generated@@788) ($generated@@82 ($generated@@8 $generated@@794) $generated@@46 $generated@@788)) (and (=> (= (ControlFlow 0 9) 7) $generated@@835) (=> (= (ControlFlow 0 9) 8) $generated@@834)))))
(let (($generated@@837 true))
(let (($generated@@838 true))
(let (($generated@@839  (=> (and (forall (($generated@@840 T@U) ) (!  (=> (and (= (type $generated@@840) $generated@@2) true) (<= ($generated@@253 0) ($generated ($generated@@433 $generated@@2 ($generated@@364 $generated@@46 $generated@@46 $generated@@788 $generated@@795 ($generated@@296 $generated@@840))))))
 :pattern ( ($generated@@433 $generated@@2 ($generated@@364 $generated@@46 $generated@@46 $generated@@788 $generated@@795 ($generated@@296 $generated@@840))))
)) (= (ControlFlow 0 2) (- 0 1))) ($generated@@143 $generated@@795 ($generated@@222 $generated@@46 $generated@@140)))))
(let (($generated@@841  (=> (= $generated@@796 ($generated@@167 $generated@@468 $generated@@788 $generated@@60 false)) (and (and (and (and (and (=> (= (ControlFlow 0 34) 33) $generated@@815) (=> (= (ControlFlow 0 34) 21) $generated@@830)) (=> (= (ControlFlow 0 34) 2) $generated@@839)) (=> (= (ControlFlow 0 34) 3) $generated@@838)) (=> (= (ControlFlow 0 34) 9) $generated@@836)) (=> (= (ControlFlow 0 34) 4) $generated@@837)))))
(let (($generated@@842  (=> (and ($generated@@261 $generated@@788) ($generated@@797 $generated@@788)) (=> (and (and (and (and ($generated@@143 $generated@@795 ($generated@@354 $generated@@46 $generated@@46)) ($generated@@82 $generated@@795 ($generated@@354 $generated@@46 $generated@@46) $generated@@788)) (and ($generated@@143 $generated@@789 ($generated@@222 $generated@@46 $generated@@140)) ($generated@@82 $generated@@789 ($generated@@222 $generated@@46 $generated@@140) $generated@@788))) (and (and ($generated@@143 $generated@@798 ($generated@@222 $generated@@46 $generated@@46)) ($generated@@82 $generated@@798 ($generated@@222 $generated@@46 $generated@@46) $generated@@788)) true)) (and (and (and ($generated@@143 $generated@@799 ($generated@@222 $generated@@46 $generated@@46)) ($generated@@82 $generated@@799 ($generated@@222 $generated@@46 $generated@@46) $generated@@788)) true) (and (= 1 $generated@@800) (= (ControlFlow 0 35) 34)))) $generated@@841))))
$generated@@842))))))))))))))))))))))))))))))))
))
(check-sat)
(get-info :reason-unknown)
(assert (not (= (ControlFlow 0 2) (- 1))))
(check-sat)
(get-info :reason-unknown)
(assert (not (= (ControlFlow 0 6) (- 5))))
(check-sat)
(pop 1)
; Invalid
(get-info :rlimit)
(reset)
(set-option :rlimit 0)
; did a full reset
(reset)
(set-option :print-success false)
(set-info :smt-lib-version 2.6)
(set-option :auto_config false)
(set-option :type_check true)
(set-option :smt.case_split 3)
(set-option :smt.qi.eager_threshold 100)
(set-option :smt.delay_units true)
(set-option :smt.arith.solver 2)
(set-option :smt.mbqi false)
(set-option :model.compact false)
(set-option :model.v2 true)
(set-option :pp.bv_literals false)
; done setting options


(set-info :category "industrial")
(declare-sort |T@U| 0)
(declare-sort |T@T| 0)
(declare-fun real_pow (Real Real) Real)
(declare-fun UOrdering2 (|T@U| |T@U|) Bool)
(declare-fun UOrdering3 (|T@T| |T@U| |T@U|) Bool)
(declare-fun tickleBool (Bool) Bool)
(assert (and (tickleBool true) (tickleBool false)))
(declare-fun $generated (T@U) Int)
(declare-fun $generated@@0 (T@U) Bool)
(declare-fun $generated@@1 (T@T) Int)
(declare-fun $generated@@2 () T@T)
(declare-fun $generated@@3 () T@T)
(declare-fun $generated@@4 () T@T)
(declare-fun $generated@@5 () T@T)
(declare-fun $generated@@6 () T@T)
(declare-fun $generated@@7 () T@T)
(declare-fun $generated@@8 (Int) T@U)
(declare-fun type (T@U) T@T)
(declare-fun $generated@@9 (Real) T@U)
(declare-fun $generated@@10 (T@U) Real)
(declare-fun $generated@@11 (Bool) T@U)
(declare-fun $generated@@12 (RoundingMode) T@U)
(declare-fun $generated@@13 (T@U) RoundingMode)
(declare-fun $generated@@14 (String) T@U)
(declare-fun $generated@@15 (T@U) String)
(declare-fun $generated@@16 ((RegEx String)) T@U)
(declare-fun $generated@@17 (T@U) (RegEx String))
(declare-fun $generated@@44 () T@U)
(declare-fun $generated@@45 () T@U)
(declare-fun $generated@@46 () T@U)
(declare-fun $generated@@47 () T@U)
(declare-fun $generated@@48 () T@U)
(declare-fun $generated@@49 () T@U)
(declare-fun $generated@@50 () T@U)
(declare-fun $generated@@51 () T@U)
(declare-fun $generated@@52 () T@U)
(declare-fun $generated@@53 () T@U)
(declare-fun $generated@@54 () T@U)
(declare-fun $generated@@55 () T@U)
(declare-fun $generated@@56 () T@U)
(declare-fun $generated@@57 () T@U)
(declare-fun $generated@@58 () T@U)
(declare-fun $generated@@59 () T@U)
(declare-fun $generated@@60 () T@U)
(declare-fun $generated@@61 () T@U)
(declare-fun $generated@@62 () T@U)
(declare-fun $generated@@63 () T@U)
(declare-fun $generated@@64 () T@U)
(declare-fun $generated@@65 () T@U)
(declare-fun $generated@@66 () T@U)
(declare-fun $generated@@67 () T@T)
(declare-fun $generated@@68 () T@T)
(declare-fun $generated@@69 (T@T) T@T)
(declare-fun $generated@@70 (T@T) T@T)
(declare-fun $generated@@71 () T@T)
(declare-fun $generated@@72 () T@T)
(declare-fun $generated@@75 (T@U) T@U)
(declare-fun $generated@@77 (T@U T@U T@U) Bool)
(declare-fun $generated@@78 (Int) T@U)
(declare-fun $generated@@79 (T@T T@T) T@T)
(declare-fun $generated@@80 () T@T)
(declare-fun $generated@@81 () T@T)
(declare-fun $generated@@82 (T@T) T@T)
(declare-fun $generated@@83 (T@T) T@T)
(declare-fun $generated@@84 (T@U T@U) T@U)
(declare-fun $generated@@85 (T@U T@U T@U) T@U)
(declare-fun $generated@@86 (T@U T@U) T@U)
(declare-fun $generated@@87 (T@U T@U T@U) T@U)
(declare-fun $generated@@135 () T@U)
(declare-fun $generated@@136 () T@U)
(declare-fun $generated@@139 (T@U T@U) Bool)
(declare-fun $generated@@141 (T@U) Bool)
(declare-fun $generated@@142 (T@U T@U) T@U)
(declare-fun $generated@@143 () T@T)
(declare-fun $generated@@149 (T@U T@U) Bool)
(declare-fun $generated@@150 (T@U) T@U)
(declare-fun $generated@@151 (T@U) T@U)
(declare-fun $generated@@152 () T@T)
(declare-fun $generated@@157 (T@U) T@U)
(declare-fun $generated@@158 (T@U) Bool)
(declare-fun $generated@@162 (T@U) T@U)
(declare-fun $generated@@165 (T@U T@U T@U) T@U)
(declare-fun $generated@@166 (T@U T@U T@U Bool) T@U)
(declare-fun $generated@@167 (T@T T@T) T@T)
(declare-fun $generated@@168 (T@T) T@T)
(declare-fun $generated@@169 (T@T) T@T)
(declare-fun $generated@@170 (T@U T@U T@U T@U) T@U)
(declare-fun $generated@@221 () T@U)
(declare-fun $generated@@224 (T@U T@U) T@U)
(declare-fun $generated@@225 (T@U T@U) Bool)
(declare-fun $generated@@234 (T@U) T@U)
(declare-fun $generated@@239 (T@U) T@U)
(declare-fun $generated@@244 (T@U) T@U)
(declare-fun $generated@@248 (T@U) Bool)
(declare-fun $generated@@249 (T@U T@U T@U) Bool)
(declare-fun $generated@@255 (T@U) T@U)
(declare-fun $generated@@261 (T@T) T@U)
(declare-fun $generated@@262 (T@U) Int)
(declare-fun $generated@@263 (T@T) T@T)
(declare-fun $generated@@264 (T@T) T@T)
(declare-fun $generated@@269 (T@U) T@U)
(declare-fun $generated@@274 (T@U) Int)
(declare-fun $generated@@275 (T@T) T@U)
(declare-fun $generated@@280 (T@U) T@U)
(declare-fun $generated@@281 (T@T T@T) T@U)
(declare-fun $generated@@282 (T@T T@T) T@T)
(declare-fun $generated@@283 (T@T) T@T)
(declare-fun $generated@@284 (T@T) T@T)
(declare-fun $generated@@298 (T@U) T@U)
(declare-fun $generated@@299 (T@T T@T) T@U)
(declare-fun $generated@@300 (T@T T@T) T@T)
(declare-fun $generated@@301 (T@T) T@T)
(declare-fun $generated@@302 (T@T) T@T)
(declare-fun $generated@@319 (T@T T@U) T@U)
(declare-fun $generated@@329 (T@U) T@U)
(declare-fun $generated@@340 (T@U) T@U)
(declare-fun $generated@@350 () Int)
(declare-fun $generated@@351 () Bool)
(declare-fun $generated@@352 () T@U)
(declare-fun $generated@@363 (T@U) T@U)
(declare-fun $generated@@364 (T@U) T@U)
(declare-fun $generated@@371 (T@U) T@U)
(declare-fun $generated@@372 (T@U) T@U)
(declare-fun $generated@@389 (T@U T@U) T@U)
(declare-fun $generated@@397 (T@U T@U) T@U)
(declare-fun $generated@@405 (T@T) T@U)
(declare-fun $generated@@429 () T@T)
(declare-fun $generated@@437 (T@U) T@U)
(declare-fun $generated@@441 (T@U) T@U)
(declare-fun $generated@@447 (T@U) T@U)
(declare-fun $generated@@451 (T@U) T@U)
(declare-fun $generated@@459 (T@U) T@U)
(declare-fun $generated@@463 (T@U) T@U)
(declare-fun $generated@@471 (T@U) T@U)
(declare-fun $generated@@472 (T@U Int) T@U)
(declare-fun $generated@@481 (T@U) Int)
(declare-fun $generated@@483 (T@U) T@U)
(declare-fun $generated@@487 (T@U) T@U)
(declare-fun $generated@@491 (T@U) T@U)
(declare-fun $generated@@495 (T@U) T@U)
(declare-fun $generated@@509 (T@U) Int)
(declare-fun $generated@@510 (T@U) Int)
(declare-fun $generated@@526 (T@U) T@U)
(declare-fun $generated@@574 (T@U) Int)
(assert  (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (= ($generated@@1 $generated@@2) 0) (= ($generated@@1 $generated@@3) 1)) (= ($generated@@1 $generated@@4) 2)) (= ($generated@@1 $generated@@5) 3)) (= ($generated@@1 $generated@@6) 4)) (= ($generated@@1 $generated@@7) 5)) (forall (($generated@@18 Int) ) (! (= ($generated ($generated@@8 $generated@@18)) $generated@@18)
 :pattern ( ($generated@@8 $generated@@18))
))) (forall (($generated@@19 T@U) ) (!  (=> (= (type $generated@@19) $generated@@2) (= ($generated@@8 ($generated $generated@@19)) $generated@@19))
 :pattern ( ($generated $generated@@19))
))) (forall (($generated@@20 Int) ) (! (= (type ($generated@@8 $generated@@20)) $generated@@2)
 :pattern ( ($generated@@8 $generated@@20))
))) (forall (($generated@@21 Real) ) (! (= ($generated@@10 ($generated@@9 $generated@@21)) $generated@@21)
 :pattern ( ($generated@@9 $generated@@21))
))) (forall (($generated@@22 T@U) ) (!  (=> (= (type $generated@@22) $generated@@3) (= ($generated@@9 ($generated@@10 $generated@@22)) $generated@@22))
 :pattern ( ($generated@@10 $generated@@22))
))) (forall (($generated@@23 Real) ) (! (= (type ($generated@@9 $generated@@23)) $generated@@3)
 :pattern ( ($generated@@9 $generated@@23))
))) (forall (($generated@@24 Bool) ) (! (= ($generated@@0 ($generated@@11 $generated@@24)) $generated@@24)
 :pattern ( ($generated@@11 $generated@@24))
))) (forall (($generated@@25 T@U) ) (!  (=> (= (type $generated@@25) $generated@@4) (= ($generated@@11 ($generated@@0 $generated@@25)) $generated@@25))
 :pattern ( ($generated@@0 $generated@@25))
))) (forall (($generated@@26 Bool) ) (! (= (type ($generated@@11 $generated@@26)) $generated@@4)
 :pattern ( ($generated@@11 $generated@@26))
))) (forall (($generated@@27 RoundingMode) ) (! (= ($generated@@13 ($generated@@12 $generated@@27)) $generated@@27)
 :pattern ( ($generated@@12 $generated@@27))
))) (forall (($generated@@28 T@U) ) (!  (=> (= (type $generated@@28) $generated@@5) (= ($generated@@12 ($generated@@13 $generated@@28)) $generated@@28))
 :pattern ( ($generated@@13 $generated@@28))
))) (forall (($generated@@29 RoundingMode) ) (! (= (type ($generated@@12 $generated@@29)) $generated@@5)
 :pattern ( ($generated@@12 $generated@@29))
))) (forall (($generated@@30 String) ) (! (= ($generated@@15 ($generated@@14 $generated@@30)) $generated@@30)
 :pattern ( ($generated@@14 $generated@@30))
))) (forall (($generated@@31 T@U) ) (!  (=> (= (type $generated@@31) $generated@@6) (= ($generated@@14 ($generated@@15 $generated@@31)) $generated@@31))
 :pattern ( ($generated@@15 $generated@@31))
))) (forall (($generated@@32 String) ) (! (= (type ($generated@@14 $generated@@32)) $generated@@6)
 :pattern ( ($generated@@14 $generated@@32))
))) (forall (($generated@@33 (RegEx String)) ) (! (= ($generated@@17 ($generated@@16 $generated@@33)) $generated@@33)
 :pattern ( ($generated@@16 $generated@@33))
))) (forall (($generated@@34 T@U) ) (!  (=> (= (type $generated@@34) $generated@@7) (= ($generated@@16 ($generated@@17 $generated@@34)) $generated@@34))
 :pattern ( ($generated@@17 $generated@@34))
))) (forall (($generated@@35 (RegEx String)) ) (! (= (type ($generated@@16 $generated@@35)) $generated@@7)
 :pattern ( ($generated@@16 $generated@@35))
))))
(assert (forall (($generated@@36 T@U) ) (! (UOrdering2 $generated@@36 $generated@@36)
 :no-pattern ($generated $generated@@36)
 :no-pattern ($generated@@0 $generated@@36)
)))
(assert (forall (($generated@@37 T@U) ($generated@@38 T@U) ($generated@@39 T@U) ) (! (let (($generated@@40 (type $generated@@37)))
 (=> (and (and (= (type $generated@@38) $generated@@40) (= (type $generated@@39) $generated@@40)) (and (UOrdering2 $generated@@37 $generated@@38) (UOrdering2 $generated@@38 $generated@@39))) (UOrdering2 $generated@@37 $generated@@39)))
 :pattern ( (UOrdering2 $generated@@37 $generated@@38) (UOrdering2 $generated@@38 $generated@@39))
)))
(assert (forall (($generated@@41 T@U) ($generated@@42 T@U) ) (! (let (($generated@@43 (type $generated@@41)))
 (=> (= (type $generated@@42) $generated@@43) (=> (and (UOrdering2 $generated@@41 $generated@@42) (UOrdering2 $generated@@42 $generated@@41)) (= $generated@@41 $generated@@42))))
 :pattern ( (UOrdering2 $generated@@41 $generated@@42) (UOrdering2 $generated@@42 $generated@@41))
)))
(assert  (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (= ($generated@@1 $generated@@67) 6) (= (type $generated@@44) $generated@@67)) (= (type $generated@@45) $generated@@67)) (= (type $generated@@46) $generated@@67)) (= (type $generated@@47) $generated@@67)) (= (type $generated@@48) $generated@@67)) (= ($generated@@1 $generated@@68) 7)) (= (type $generated@@49) $generated@@68)) (= (type $generated@@50) $generated@@68)) (= (type $generated@@51) $generated@@68)) (= (type $generated@@52) $generated@@68)) (= (type $generated@@53) $generated@@68)) (= (type $generated@@54) $generated@@68)) (= (type $generated@@55) $generated@@68)) (= (type $generated@@56) $generated@@68)) (= (type $generated@@57) $generated@@68)) (= (type $generated@@58) $generated@@68)) (= (type $generated@@59) $generated@@68)) (forall (($generated@@73 T@T) ) (= ($generated@@1 ($generated@@69 $generated@@73)) 8))) (forall (($generated@@74 T@T) ) (! (= ($generated@@70 ($generated@@69 $generated@@74)) $generated@@74)
 :pattern ( ($generated@@69 $generated@@74))
))) (= (type $generated@@60) ($generated@@69 $generated@@4))) (= ($generated@@1 $generated@@71) 9)) (= (type $generated@@61) $generated@@71)) (= (type $generated@@62) $generated@@68)) (= (type $generated@@63) $generated@@68)) (= (type $generated@@64) $generated@@68)) (= ($generated@@1 $generated@@72) 10)) (= (type $generated@@65) $generated@@72)) (= (type $generated@@66) $generated@@72)))
(assert (distinct $generated@@44 $generated@@45 $generated@@46 $generated@@47 $generated@@48 $generated@@49 $generated@@50 $generated@@51 $generated@@52 $generated@@53 $generated@@54 $generated@@55 $generated@@56 $generated@@57 $generated@@58 $generated@@59 $generated@@60 $generated@@61 $generated@@62 $generated@@63 $generated@@64 $generated@@65 $generated@@66)
)
(assert (forall (($generated@@76 T@U) ) (! (= (type ($generated@@75 $generated@@76)) $generated@@68)
 :pattern ( ($generated@@75 $generated@@76))
)))
(assert (= ($generated@@75 $generated@@44) $generated@@49))
(assert (= ($generated@@75 $generated@@45) $generated@@50))
(assert (= ($generated@@75 $generated@@46) $generated@@51))
(assert (= ($generated@@75 $generated@@47) $generated@@52))
(assert (= ($generated@@75 $generated@@48) $generated@@53))
(assert  (and (and (and (and (and (and (and (and (and (and (and (and (and (forall (($generated@@88 T@T) ($generated@@89 T@T) ) (= ($generated@@1 ($generated@@79 $generated@@88 $generated@@89)) 11)) (forall (($generated@@90 T@T) ($generated@@91 T@T) ) (! (= ($generated@@82 ($generated@@79 $generated@@90 $generated@@91)) $generated@@90)
 :pattern ( ($generated@@79 $generated@@90 $generated@@91))
))) (forall (($generated@@92 T@T) ($generated@@93 T@T) ) (! (= ($generated@@83 ($generated@@79 $generated@@92 $generated@@93)) $generated@@93)
 :pattern ( ($generated@@79 $generated@@92 $generated@@93))
))) (forall (($generated@@94 T@U) ($generated@@95 T@U) ) (! (let (($generated@@96 ($generated@@83 (type $generated@@94))))
(= (type ($generated@@84 $generated@@94 $generated@@95)) $generated@@96))
 :pattern ( ($generated@@84 $generated@@94 $generated@@95))
))) (forall (($generated@@97 T@U) ($generated@@98 T@U) ($generated@@99 T@U) ) (! (let (($generated@@100 (type $generated@@99)))
(let (($generated@@101 (type $generated@@98)))
(= (type ($generated@@85 $generated@@97 $generated@@98 $generated@@99)) ($generated@@79 $generated@@101 $generated@@100))))
 :pattern ( ($generated@@85 $generated@@97 $generated@@98 $generated@@99))
))) (forall (($generated@@102 T@U) ($generated@@103 T@U) ($generated@@104 T@U) ) (! (let (($generated@@105 ($generated@@83 (type $generated@@102))))
 (=> (= (type $generated@@104) $generated@@105) (= ($generated@@84 ($generated@@85 $generated@@102 $generated@@103 $generated@@104) $generated@@103) $generated@@104)))
 :weight 0
))) (and (forall (($generated@@106 T@U) ($generated@@107 T@U) ($generated@@108 T@U) ($generated@@109 T@U) ) (!  (or (= $generated@@108 $generated@@109) (= ($generated@@84 ($generated@@85 $generated@@107 $generated@@108 $generated@@106) $generated@@109) ($generated@@84 $generated@@107 $generated@@109)))
 :weight 0
)) (forall (($generated@@110 T@U) ($generated@@111 T@U) ($generated@@112 T@U) ($generated@@113 T@U) ) (!  (or true (= ($generated@@84 ($generated@@85 $generated@@111 $generated@@112 $generated@@110) $generated@@113) ($generated@@84 $generated@@111 $generated@@113)))
 :weight 0
)))) (= ($generated@@1 $generated@@80) 12)) (forall (($generated@@114 T@U) ($generated@@115 T@U) ) (! (let (($generated@@116 ($generated@@70 (type $generated@@115))))
(= (type ($generated@@86 $generated@@114 $generated@@115)) $generated@@116))
 :pattern ( ($generated@@86 $generated@@114 $generated@@115))
))) (= ($generated@@1 $generated@@81) 13)) (forall (($generated@@117 T@U) ($generated@@118 T@U) ($generated@@119 T@U) ) (! (= (type ($generated@@87 $generated@@117 $generated@@118 $generated@@119)) $generated@@81)
 :pattern ( ($generated@@87 $generated@@117 $generated@@118 $generated@@119))
))) (forall (($generated@@120 T@U) ($generated@@121 T@U) ($generated@@122 T@U) ) (! (let (($generated@@123 ($generated@@70 (type $generated@@121))))
 (=> (= (type $generated@@122) $generated@@123) (= ($generated@@86 ($generated@@87 $generated@@120 $generated@@121 $generated@@122) $generated@@121) $generated@@122)))
 :weight 0
))) (and (forall (($generated@@124 T@U) ($generated@@125 T@U) ($generated@@126 T@U) ($generated@@127 T@U) ) (!  (or (= $generated@@126 $generated@@127) (= ($generated@@86 ($generated@@87 $generated@@125 $generated@@126 $generated@@124) $generated@@127) ($generated@@86 $generated@@125 $generated@@127)))
 :weight 0
)) (forall (($generated@@128 T@U) ($generated@@129 T@U) ($generated@@130 T@U) ($generated@@131 T@U) ) (!  (or true (= ($generated@@86 ($generated@@87 $generated@@129 $generated@@130 $generated@@128) $generated@@131) ($generated@@86 $generated@@129 $generated@@131)))
 :weight 0
)))) (forall (($generated@@132 Int) ) (! (= (type ($generated@@78 $generated@@132)) $generated@@67)
 :pattern ( ($generated@@78 $generated@@132))
))))
(assert (forall (($generated@@133 T@U) ($generated@@134 T@U) ) (!  (=> (and (= (type $generated@@133) $generated@@2) (= (type $generated@@134) ($generated@@79 $generated@@80 $generated@@81))) ($generated@@77 $generated@@133 ($generated@@78 0) $generated@@134))
 :pattern ( ($generated@@77 $generated@@133 ($generated@@78 0) $generated@@134))
)))
(assert  (and (= (type $generated@@135) $generated@@67) (= (type $generated@@136) $generated@@80)))
(assert (forall (($generated@@137 T@U) ($generated@@138 T@U) ) (!  (=> (and (= (type $generated@@137) $generated@@80) (= (type $generated@@138) ($generated@@79 $generated@@80 $generated@@81))) (= ($generated@@77 $generated@@137 $generated@@135 $generated@@138)  (or (= $generated@@137 $generated@@136) ($generated@@0 ($generated@@86 ($generated@@84 $generated@@138 $generated@@137) $generated@@60)))))
 :pattern ( ($generated@@77 $generated@@137 $generated@@135 $generated@@138))
)))
(assert (forall (($generated@@140 T@U) ) (!  (=> (= (type $generated@@140) $generated@@2) ($generated@@139 $generated@@140 ($generated@@78 0)))
 :pattern ( ($generated@@139 $generated@@140 ($generated@@78 0)))
)))
(assert  (and (= ($generated@@1 $generated@@143) 14) (forall (($generated@@144 T@U) ($generated@@145 T@U) ) (! (= (type ($generated@@142 $generated@@144 $generated@@145)) $generated@@67)
 :pattern ( ($generated@@142 $generated@@144 $generated@@145))
))))
(assert (forall (($generated@@146 T@U) ($generated@@147 T@U) ($generated@@148 T@U) ) (!  (=> (and (and (and (= (type $generated@@146) $generated@@67) (= (type $generated@@147) $generated@@67)) (= (type $generated@@148) $generated@@143)) ($generated@@139 $generated@@148 ($generated@@142 $generated@@146 $generated@@147))) ($generated@@141 $generated@@148))
 :pattern ( ($generated@@141 $generated@@148) ($generated@@139 $generated@@148 ($generated@@142 $generated@@146 $generated@@147)))
)))
(assert  (and (and (= ($generated@@1 $generated@@152) 15) (forall (($generated@@153 T@U) ) (! (= (type ($generated@@150 $generated@@153)) $generated@@152)
 :pattern ( ($generated@@150 $generated@@153))
))) (forall (($generated@@154 T@U) ) (! (= (type ($generated@@151 $generated@@154)) $generated@@152)
 :pattern ( ($generated@@151 $generated@@154))
))))
(assert (forall (($generated@@155 T@U) ($generated@@156 T@U) ) (!  (=> (and (and (= (type $generated@@155) $generated@@143) (= (type $generated@@156) $generated@@143)) true) (= ($generated@@149 $generated@@155 $generated@@156)  (and (= ($generated@@150 $generated@@155) ($generated@@150 $generated@@156)) (= ($generated@@151 $generated@@155) ($generated@@151 $generated@@156)))))
 :pattern ( ($generated@@149 $generated@@155 $generated@@156))
)))
(assert (forall (($generated@@159 T@U) ) (! (= (type ($generated@@157 $generated@@159)) $generated@@67)
 :pattern ( ($generated@@157 $generated@@159))
)))
(assert (forall (($generated@@160 T@U) ($generated@@161 T@U) ) (!  (=> (and (and (= (type $generated@@160) ($generated@@79 $generated@@152 $generated@@2)) (= (type $generated@@161) $generated@@67)) ($generated@@139 $generated@@160 ($generated@@157 $generated@@161))) ($generated@@158 $generated@@160))
 :pattern ( ($generated@@139 $generated@@160 ($generated@@157 $generated@@161)))
)))
(assert (forall (($generated@@163 T@U) ) (! (= (type ($generated@@162 $generated@@163)) $generated@@67)
 :pattern ( ($generated@@162 $generated@@163))
)))
(assert (forall (($generated@@164 T@U) ) (!  (=> (= (type $generated@@164) $generated@@80) (= ($generated@@139 $generated@@164 $generated@@135)  (or (= $generated@@164 $generated@@136) (= ($generated@@162 $generated@@164) $generated@@135))))
 :pattern ( ($generated@@139 $generated@@164 $generated@@135))
)))
(assert  (and (and (and (and (and (and (and (forall (($generated@@171 T@T) ($generated@@172 T@T) ) (= ($generated@@1 ($generated@@167 $generated@@171 $generated@@172)) 16)) (forall (($generated@@173 T@T) ($generated@@174 T@T) ) (! (= ($generated@@168 ($generated@@167 $generated@@173 $generated@@174)) $generated@@173)
 :pattern ( ($generated@@167 $generated@@173 $generated@@174))
))) (forall (($generated@@175 T@T) ($generated@@176 T@T) ) (! (= ($generated@@169 ($generated@@167 $generated@@175 $generated@@176)) $generated@@176)
 :pattern ( ($generated@@167 $generated@@175 $generated@@176))
))) (forall (($generated@@177 T@U) ($generated@@178 T@U) ($generated@@179 T@U) ) (! (let (($generated@@180 ($generated@@169 (type $generated@@177))))
(= (type ($generated@@165 $generated@@177 $generated@@178 $generated@@179)) $generated@@180))
 :pattern ( ($generated@@165 $generated@@177 $generated@@178 $generated@@179))
))) (forall (($generated@@181 T@U) ($generated@@182 T@U) ($generated@@183 T@U) ($generated@@184 T@U) ) (! (let (($generated@@185 (type $generated@@184)))
(let (($generated@@186 (type $generated@@182)))
(= (type ($generated@@170 $generated@@181 $generated@@182 $generated@@183 $generated@@184)) ($generated@@167 $generated@@186 $generated@@185))))
 :pattern ( ($generated@@170 $generated@@181 $generated@@182 $generated@@183 $generated@@184))
))) (forall (($generated@@187 T@U) ($generated@@188 T@U) ($generated@@189 T@U) ($generated@@190 T@U) ) (! (let (($generated@@191 ($generated@@169 (type $generated@@187))))
 (=> (= (type $generated@@190) $generated@@191) (= ($generated@@165 ($generated@@170 $generated@@187 $generated@@188 $generated@@189 $generated@@190) $generated@@188 $generated@@189) $generated@@190)))
 :weight 0
))) (and (and (forall (($generated@@192 T@U) ($generated@@193 T@U) ($generated@@194 T@U) ($generated@@195 T@U) ($generated@@196 T@U) ($generated@@197 T@U) ) (!  (or (= $generated@@194 $generated@@196) (= ($generated@@165 ($generated@@170 $generated@@193 $generated@@194 $generated@@195 $generated@@192) $generated@@196 $generated@@197) ($generated@@165 $generated@@193 $generated@@196 $generated@@197)))
 :weight 0
)) (forall (($generated@@198 T@U) ($generated@@199 T@U) ($generated@@200 T@U) ($generated@@201 T@U) ($generated@@202 T@U) ($generated@@203 T@U) ) (!  (or (= $generated@@201 $generated@@203) (= ($generated@@165 ($generated@@170 $generated@@199 $generated@@200 $generated@@201 $generated@@198) $generated@@202 $generated@@203) ($generated@@165 $generated@@199 $generated@@202 $generated@@203)))
 :weight 0
))) (forall (($generated@@204 T@U) ($generated@@205 T@U) ($generated@@206 T@U) ($generated@@207 T@U) ($generated@@208 T@U) ($generated@@209 T@U) ) (!  (or true (= ($generated@@165 ($generated@@170 $generated@@205 $generated@@206 $generated@@207 $generated@@204) $generated@@208 $generated@@209) ($generated@@165 $generated@@205 $generated@@208 $generated@@209)))
 :weight 0
)))) (forall (($generated@@210 T@U) ($generated@@211 T@U) ($generated@@212 T@U) ($generated@@213 Bool) ) (! (= (type ($generated@@166 $generated@@210 $generated@@211 $generated@@212 $generated@@213)) ($generated@@167 $generated@@80 $generated@@4))
 :pattern ( ($generated@@166 $generated@@210 $generated@@211 $generated@@212 $generated@@213))
))))
(assert (forall (($generated@@214 T@U) ($generated@@215 T@U) ($generated@@216 T@U) ($generated@@217 Bool) ($generated@@218 T@U) ($generated@@219 T@U) ) (! (let (($generated@@220 ($generated@@70 (type $generated@@219))))
 (=> (and (and (and (and (= (type $generated@@214) $generated@@80) (= (type $generated@@215) ($generated@@79 $generated@@80 $generated@@81))) (= (type $generated@@216) ($generated@@69 $generated@@4))) (= (type $generated@@218) $generated@@80)) (= (type $generated@@219) ($generated@@69 $generated@@220))) (= ($generated@@0 ($generated@@165 ($generated@@166 $generated@@214 $generated@@215 $generated@@216 $generated@@217) $generated@@218 $generated@@219))  (=> (and (not (= $generated@@218 $generated@@214)) ($generated@@0 ($generated@@86 ($generated@@84 $generated@@215 $generated@@218) $generated@@216))) $generated@@217))))
 :pattern ( ($generated@@165 ($generated@@166 $generated@@214 $generated@@215 $generated@@216 $generated@@217) $generated@@218 $generated@@219))
)))
(assert (= (type $generated@@221) $generated@@67))
(assert (forall (($generated@@222 T@U) ($generated@@223 T@U) ) (!  (=> (and (= (type $generated@@222) $generated@@80) (= (type $generated@@223) ($generated@@79 $generated@@80 $generated@@81))) (= ($generated@@77 $generated@@222 $generated@@221 $generated@@223) ($generated@@77 $generated@@222 $generated@@135 $generated@@223)))
 :pattern ( ($generated@@77 $generated@@222 $generated@@221 $generated@@223))
)))
(assert (forall (($generated@@226 T@U) ($generated@@227 T@U) ) (! (= (type ($generated@@224 $generated@@226 $generated@@227)) $generated@@143)
 :pattern ( ($generated@@224 $generated@@226 $generated@@227))
)))
(assert (forall (($generated@@228 T@U) ($generated@@229 T@U) ($generated@@230 T@U) ($generated@@231 T@U) ) (!  (=> (and (and (and (= (type $generated@@228) $generated@@67) (= (type $generated@@229) $generated@@67)) (= (type $generated@@230) $generated@@152)) (= (type $generated@@231) $generated@@152)) (= ($generated@@139 ($generated@@224 $generated@@230 $generated@@231) ($generated@@142 $generated@@228 $generated@@229))  (and ($generated@@225 $generated@@230 $generated@@228) ($generated@@225 $generated@@231 $generated@@229))))
 :pattern ( ($generated@@139 ($generated@@224 $generated@@230 $generated@@231) ($generated@@142 $generated@@228 $generated@@229)))
)))
(assert (forall (($generated@@232 T@U) ($generated@@233 T@U) ) (!  (=> (and (= (type $generated@@232) $generated@@143) (= (type $generated@@233) $generated@@143)) (= ($generated@@149 $generated@@232 $generated@@233) (= $generated@@232 $generated@@233)))
 :pattern ( ($generated@@149 $generated@@232 $generated@@233))
)))
(assert (forall (($generated@@235 T@U) ) (! (= (type ($generated@@234 $generated@@235)) $generated@@67)
 :pattern ( ($generated@@234 $generated@@235))
)))
(assert (forall (($generated@@236 T@U) ($generated@@237 T@U) ) (!  (=> (and (= (type $generated@@236) ($generated@@79 $generated@@152 $generated@@4)) (= (type $generated@@237) $generated@@67)) (= ($generated@@139 $generated@@236 ($generated@@234 $generated@@237)) (forall (($generated@@238 T@U) ) (!  (=> (and (= (type $generated@@238) $generated@@152) ($generated@@0 ($generated@@84 $generated@@236 $generated@@238))) ($generated@@225 $generated@@238 $generated@@237))
 :pattern ( ($generated@@84 $generated@@236 $generated@@238))
))))
 :pattern ( ($generated@@139 $generated@@236 ($generated@@234 $generated@@237)))
)))
(assert (forall (($generated@@240 T@U) ) (! (= (type ($generated@@239 $generated@@240)) $generated@@67)
 :pattern ( ($generated@@239 $generated@@240))
)))
(assert (forall (($generated@@241 T@U) ($generated@@242 T@U) ) (!  (=> (and (= (type $generated@@241) ($generated@@79 $generated@@152 $generated@@4)) (= (type $generated@@242) $generated@@67)) (= ($generated@@139 $generated@@241 ($generated@@239 $generated@@242)) (forall (($generated@@243 T@U) ) (!  (=> (and (= (type $generated@@243) $generated@@152) ($generated@@0 ($generated@@84 $generated@@241 $generated@@243))) ($generated@@225 $generated@@243 $generated@@242))
 :pattern ( ($generated@@84 $generated@@241 $generated@@243))
))))
 :pattern ( ($generated@@139 $generated@@241 ($generated@@239 $generated@@242)))
)))
(assert (forall (($generated@@245 T@U) ) (! (let (($generated@@246 (type $generated@@245)))
(= (type ($generated@@244 $generated@@245)) $generated@@246))
 :pattern ( ($generated@@244 $generated@@245))
)))
(assert (forall (($generated@@247 T@U) ) (! (= ($generated@@244 $generated@@247) $generated@@247)
 :pattern ( ($generated@@244 $generated@@247))
)))
(assert (forall (($generated@@250 T@U) ($generated@@251 T@U) ($generated@@252 T@U) ($generated@@253 T@U) ($generated@@254 T@U) ) (!  (=> (and (and (and (and (and (= (type $generated@@250) $generated@@67) (= (type $generated@@251) $generated@@67)) (= (type $generated@@252) $generated@@152)) (= (type $generated@@253) $generated@@152)) (= (type $generated@@254) ($generated@@79 $generated@@80 $generated@@81))) ($generated@@248 $generated@@254)) (= ($generated@@77 ($generated@@224 $generated@@252 $generated@@253) ($generated@@142 $generated@@250 $generated@@251) $generated@@254)  (and ($generated@@249 $generated@@252 $generated@@250 $generated@@254) ($generated@@249 $generated@@253 $generated@@251 $generated@@254))))
 :pattern ( ($generated@@77 ($generated@@224 $generated@@252 $generated@@253) ($generated@@142 $generated@@250 $generated@@251) $generated@@254))
)))
(assert (forall (($generated@@256 T@U) ) (! (= (type ($generated@@255 $generated@@256)) $generated@@71)
 :pattern ( ($generated@@255 $generated@@256))
)))
(assert (forall (($generated@@257 T@U) ) (!  (=> (= (type $generated@@257) $generated@@143) (= ($generated@@141 $generated@@257) (= ($generated@@255 $generated@@257) $generated@@61)))
 :pattern ( ($generated@@141 $generated@@257))
)))
(assert (forall (($generated@@258 T@U) ) (!  (=> (and (= (type $generated@@258) $generated@@143) ($generated@@141 $generated@@258)) (exists (($generated@@259 T@U) ($generated@@260 T@U) ) (!  (and (and (= (type $generated@@259) $generated@@152) (= (type $generated@@260) $generated@@152)) (= $generated@@258 ($generated@@224 $generated@@259 $generated@@260)))
 :no-pattern (type $generated@@259)
 :no-pattern (type $generated@@260)
 :no-pattern ($generated $generated@@259)
 :no-pattern ($generated@@0 $generated@@259)
 :no-pattern ($generated $generated@@260)
 :no-pattern ($generated@@0 $generated@@260)
)))
 :pattern ( ($generated@@141 $generated@@258))
)))
(assert  (and (and (forall (($generated@@265 T@T) ) (= ($generated@@1 ($generated@@263 $generated@@265)) 17)) (forall (($generated@@266 T@T) ) (! (= ($generated@@264 ($generated@@263 $generated@@266)) $generated@@266)
 :pattern ( ($generated@@263 $generated@@266))
))) (forall (($generated@@267 T@T) ) (! (= (type ($generated@@261 $generated@@267)) ($generated@@263 $generated@@267))
 :pattern ( ($generated@@261 $generated@@267))
))))
(assert (forall (($generated@@268 T@T) ) (! (= ($generated@@262 ($generated@@261 $generated@@268)) 0)
 :pattern ( ($generated@@261 $generated@@268))
)))
(assert (forall (($generated@@270 T@U) ) (! (= (type ($generated@@269 $generated@@270)) $generated@@152)
 :pattern ( ($generated@@269 $generated@@270))
)))
(assert (forall (($generated@@271 T@U) ($generated@@272 T@U) ($generated@@273 T@U) ) (!  (=> (and (= (type $generated@@272) $generated@@67) (= (type $generated@@273) ($generated@@79 $generated@@80 $generated@@81))) (= ($generated@@249 ($generated@@269 $generated@@271) $generated@@272 $generated@@273) ($generated@@77 $generated@@271 $generated@@272 $generated@@273)))
 :pattern ( ($generated@@249 ($generated@@269 $generated@@271) $generated@@272 $generated@@273))
)))
(assert (forall (($generated@@276 T@T) ) (! (= (type ($generated@@275 $generated@@276)) ($generated@@79 $generated@@276 $generated@@2))
 :pattern ( ($generated@@275 $generated@@276))
)))
(assert (forall (($generated@@277 T@U) ) (! (let (($generated@@278 ($generated@@82 (type $generated@@277))))
 (=> (= (type $generated@@277) ($generated@@79 $generated@@278 $generated@@2)) (and (= (= ($generated@@274 $generated@@277) 0) (= $generated@@277 ($generated@@275 $generated@@278))) (=> (not (= ($generated@@274 $generated@@277) 0)) (exists (($generated@@279 T@U) ) (!  (and (= (type $generated@@279) $generated@@278) (< 0 ($generated ($generated@@84 $generated@@277 $generated@@279))))
 :no-pattern (type $generated@@279)
 :no-pattern ($generated $generated@@279)
 :no-pattern ($generated@@0 $generated@@279)
))))))
 :pattern ( ($generated@@274 $generated@@277))
)))
(assert  (and (and (and (and (forall (($generated@@285 T@T) ($generated@@286 T@T) ) (= ($generated@@1 ($generated@@282 $generated@@285 $generated@@286)) 18)) (forall (($generated@@287 T@T) ($generated@@288 T@T) ) (! (= ($generated@@283 ($generated@@282 $generated@@287 $generated@@288)) $generated@@287)
 :pattern ( ($generated@@282 $generated@@287 $generated@@288))
))) (forall (($generated@@289 T@T) ($generated@@290 T@T) ) (! (= ($generated@@284 ($generated@@282 $generated@@289 $generated@@290)) $generated@@290)
 :pattern ( ($generated@@282 $generated@@289 $generated@@290))
))) (forall (($generated@@291 T@U) ) (! (let (($generated@@292 ($generated@@283 (type $generated@@291))))
(= (type ($generated@@280 $generated@@291)) ($generated@@79 $generated@@292 $generated@@4)))
 :pattern ( ($generated@@280 $generated@@291))
))) (forall (($generated@@293 T@T) ($generated@@294 T@T) ) (! (= (type ($generated@@281 $generated@@293 $generated@@294)) ($generated@@282 $generated@@293 $generated@@294))
 :pattern ( ($generated@@281 $generated@@293 $generated@@294))
))))
(assert (forall (($generated@@295 T@U) ($generated@@296 T@T) ) (! (let (($generated@@297 (type $generated@@295)))
 (not ($generated@@0 ($generated@@84 ($generated@@280 ($generated@@281 $generated@@297 $generated@@296)) $generated@@295))))
 :pattern ( (let (($generated@@297 (type $generated@@295)))
($generated@@84 ($generated@@280 ($generated@@281 $generated@@297 $generated@@296)) $generated@@295)))
)))
(assert  (and (and (and (and (forall (($generated@@303 T@T) ($generated@@304 T@T) ) (= ($generated@@1 ($generated@@300 $generated@@303 $generated@@304)) 19)) (forall (($generated@@305 T@T) ($generated@@306 T@T) ) (! (= ($generated@@301 ($generated@@300 $generated@@305 $generated@@306)) $generated@@305)
 :pattern ( ($generated@@300 $generated@@305 $generated@@306))
))) (forall (($generated@@307 T@T) ($generated@@308 T@T) ) (! (= ($generated@@302 ($generated@@300 $generated@@307 $generated@@308)) $generated@@308)
 :pattern ( ($generated@@300 $generated@@307 $generated@@308))
))) (forall (($generated@@309 T@U) ) (! (let (($generated@@310 ($generated@@301 (type $generated@@309))))
(= (type ($generated@@298 $generated@@309)) ($generated@@79 $generated@@310 $generated@@4)))
 :pattern ( ($generated@@298 $generated@@309))
))) (forall (($generated@@311 T@T) ($generated@@312 T@T) ) (! (= (type ($generated@@299 $generated@@311 $generated@@312)) ($generated@@300 $generated@@311 $generated@@312))
 :pattern ( ($generated@@299 $generated@@311 $generated@@312))
))))
(assert (forall (($generated@@313 T@U) ($generated@@314 T@T) ) (! (let (($generated@@315 (type $generated@@313)))
 (not ($generated@@0 ($generated@@84 ($generated@@298 ($generated@@299 $generated@@315 $generated@@314)) $generated@@313))))
 :pattern ( (let (($generated@@315 (type $generated@@313)))
($generated@@84 ($generated@@298 ($generated@@299 $generated@@315 $generated@@314)) $generated@@313)))
)))
(assert (forall (($generated@@316 T@U) ) (! (let (($generated@@317 ($generated@@82 (type $generated@@316))))
 (=> (= (type $generated@@316) ($generated@@79 $generated@@317 $generated@@2)) (= ($generated@@158 $generated@@316) (forall (($generated@@318 T@U) ) (!  (=> (= (type $generated@@318) $generated@@317) (and (<= 0 ($generated ($generated@@84 $generated@@316 $generated@@318))) (<= ($generated ($generated@@84 $generated@@316 $generated@@318)) ($generated@@274 $generated@@316))))
 :pattern ( ($generated@@84 $generated@@316 $generated@@318))
)))))
 :pattern ( ($generated@@158 $generated@@316))
)))
(assert (forall (($generated@@320 T@T) ($generated@@321 T@U) ) (! (= (type ($generated@@319 $generated@@320 $generated@@321)) $generated@@320)
 :pattern ( ($generated@@319 $generated@@320 $generated@@321))
)))
(assert (forall (($generated@@322 T@U) ) (!  (=> (and (= (type $generated@@322) $generated@@152) ($generated@@225 $generated@@322 $generated@@135)) (and (= ($generated@@269 ($generated@@319 $generated@@80 $generated@@322)) $generated@@322) ($generated@@139 ($generated@@319 $generated@@80 $generated@@322) $generated@@135)))
 :pattern ( ($generated@@225 $generated@@322 $generated@@135))
)))
(assert (forall (($generated@@323 T@U) ) (!  (=> (and (= (type $generated@@323) $generated@@152) ($generated@@225 $generated@@323 $generated@@221)) (and (= ($generated@@269 ($generated@@319 $generated@@80 $generated@@323)) $generated@@323) ($generated@@139 ($generated@@319 $generated@@80 $generated@@323) $generated@@221)))
 :pattern ( ($generated@@225 $generated@@323 $generated@@221))
)))
(assert (forall (($generated@@324 T@U) ) (!  (=> (= (type $generated@@324) $generated@@80) (= ($generated@@139 $generated@@324 $generated@@221)  (and ($generated@@139 $generated@@324 $generated@@135) (not (= $generated@@324 $generated@@136)))))
 :pattern ( ($generated@@139 $generated@@324 $generated@@221))
)))
(assert (forall (($generated@@325 T@U) ) (! (let (($generated@@326 ($generated@@284 (type $generated@@325))))
(let (($generated@@327 ($generated@@283 (type $generated@@325))))
 (=> (= (type $generated@@325) ($generated@@282 $generated@@327 $generated@@326)) (or (= $generated@@325 ($generated@@281 $generated@@327 $generated@@326)) (exists (($generated@@328 T@U) ) (!  (and (= (type $generated@@328) $generated@@327) ($generated@@0 ($generated@@84 ($generated@@280 $generated@@325) $generated@@328)))
 :no-pattern (type $generated@@328)
 :no-pattern ($generated $generated@@328)
 :no-pattern ($generated@@0 $generated@@328)
))))))
 :pattern ( ($generated@@280 $generated@@325))
)))
(assert (forall (($generated@@330 T@U) ) (! (let (($generated@@331 ($generated@@284 (type $generated@@330))))
(= (type ($generated@@329 $generated@@330)) ($generated@@79 $generated@@331 $generated@@4)))
 :pattern ( ($generated@@329 $generated@@330))
)))
(assert (forall (($generated@@332 T@U) ) (! (let (($generated@@333 ($generated@@284 (type $generated@@332))))
(let (($generated@@334 ($generated@@283 (type $generated@@332))))
 (=> (= (type $generated@@332) ($generated@@282 $generated@@334 $generated@@333)) (or (= $generated@@332 ($generated@@281 $generated@@334 $generated@@333)) (exists (($generated@@335 T@U) ) (!  (and (= (type $generated@@335) $generated@@333) ($generated@@0 ($generated@@84 ($generated@@329 $generated@@332) $generated@@335)))
 :no-pattern (type $generated@@335)
 :no-pattern ($generated $generated@@335)
 :no-pattern ($generated@@0 $generated@@335)
))))))
 :pattern ( ($generated@@329 $generated@@332))
)))
(assert (forall (($generated@@336 T@U) ) (! (let (($generated@@337 ($generated@@302 (type $generated@@336))))
(let (($generated@@338 ($generated@@301 (type $generated@@336))))
 (=> (= (type $generated@@336) ($generated@@300 $generated@@338 $generated@@337)) (or (= $generated@@336 ($generated@@299 $generated@@338 $generated@@337)) (exists (($generated@@339 T@U) ) (!  (and (= (type $generated@@339) $generated@@338) ($generated@@0 ($generated@@84 ($generated@@298 $generated@@336) $generated@@339)))
 :no-pattern (type $generated@@339)
 :no-pattern ($generated $generated@@339)
 :no-pattern ($generated@@0 $generated@@339)
))))))
 :pattern ( ($generated@@298 $generated@@336))
)))
(assert (forall (($generated@@341 T@U) ) (! (let (($generated@@342 ($generated@@302 (type $generated@@341))))
(= (type ($generated@@340 $generated@@341)) ($generated@@79 $generated@@342 $generated@@4)))
 :pattern ( ($generated@@340 $generated@@341))
)))
(assert (forall (($generated@@343 T@U) ) (! (let (($generated@@344 ($generated@@302 (type $generated@@343))))
(let (($generated@@345 ($generated@@301 (type $generated@@343))))
 (=> (= (type $generated@@343) ($generated@@300 $generated@@345 $generated@@344)) (or (= $generated@@343 ($generated@@299 $generated@@345 $generated@@344)) (exists (($generated@@346 T@U) ) (!  (and (= (type $generated@@346) $generated@@344) ($generated@@0 ($generated@@84 ($generated@@340 $generated@@343) $generated@@346)))
 :no-pattern (type $generated@@346)
 :no-pattern ($generated $generated@@346)
 :no-pattern ($generated@@0 $generated@@346)
))))))
 :pattern ( ($generated@@340 $generated@@343))
)))
(assert (forall (($generated@@347 T@U) ($generated@@348 T@U) ) (!  (=> (and (= (type $generated@@347) ($generated@@79 $generated@@152 $generated@@2)) (= (type $generated@@348) $generated@@67)) (= ($generated@@139 $generated@@347 ($generated@@157 $generated@@348)) (forall (($generated@@349 T@U) ) (!  (=> (and (= (type $generated@@349) $generated@@152) (< 0 ($generated ($generated@@84 $generated@@347 $generated@@349)))) ($generated@@225 $generated@@349 $generated@@348))
 :pattern ( ($generated@@84 $generated@@347 $generated@@349))
))))
 :pattern ( ($generated@@139 $generated@@347 ($generated@@157 $generated@@348)))
)))
(assert (= (type $generated@@352) $generated@@80))
(assert  (=> (<= 1 $generated@@350) (=> (or $generated@@351 (not (= 1 $generated@@350))) ($generated@@139 $generated@@352 $generated@@221))))
(assert (forall (($generated@@353 T@U) ($generated@@354 T@U) ($generated@@355 T@U) ) (!  (=> (and (and (= (type $generated@@353) ($generated@@79 $generated@@152 $generated@@4)) (= (type $generated@@354) $generated@@67)) (= (type $generated@@355) ($generated@@79 $generated@@80 $generated@@81))) (= ($generated@@77 $generated@@353 ($generated@@234 $generated@@354) $generated@@355) (forall (($generated@@356 T@U) ) (!  (=> (and (= (type $generated@@356) $generated@@152) ($generated@@0 ($generated@@84 $generated@@353 $generated@@356))) ($generated@@249 $generated@@356 $generated@@354 $generated@@355))
 :pattern ( ($generated@@84 $generated@@353 $generated@@356))
))))
 :pattern ( ($generated@@77 $generated@@353 ($generated@@234 $generated@@354) $generated@@355))
)))
(assert (forall (($generated@@357 T@U) ($generated@@358 T@U) ($generated@@359 T@U) ) (!  (=> (and (and (= (type $generated@@357) ($generated@@79 $generated@@152 $generated@@4)) (= (type $generated@@358) $generated@@67)) (= (type $generated@@359) ($generated@@79 $generated@@80 $generated@@81))) (= ($generated@@77 $generated@@357 ($generated@@239 $generated@@358) $generated@@359) (forall (($generated@@360 T@U) ) (!  (=> (and (= (type $generated@@360) $generated@@152) ($generated@@0 ($generated@@84 $generated@@357 $generated@@360))) ($generated@@249 $generated@@360 $generated@@358 $generated@@359))
 :pattern ( ($generated@@84 $generated@@357 $generated@@360))
))))
 :pattern ( ($generated@@77 $generated@@357 ($generated@@239 $generated@@358) $generated@@359))
)))
(assert (forall (($generated@@361 T@U) ) (! (let (($generated@@362 (type $generated@@361)))
(= ($generated ($generated@@84 ($generated@@275 $generated@@362) $generated@@361)) 0))
 :pattern ( (let (($generated@@362 (type $generated@@361)))
($generated@@84 ($generated@@275 $generated@@362) $generated@@361)))
)))
(assert  (and (forall (($generated@@365 T@U) ) (! (= (type ($generated@@363 $generated@@365)) ($generated@@79 $generated@@152 $generated@@4))
 :pattern ( ($generated@@363 $generated@@365))
)) (forall (($generated@@366 T@U) ) (! (let (($generated@@367 ($generated@@284 (type $generated@@366))))
(let (($generated@@368 ($generated@@283 (type $generated@@366))))
(= (type ($generated@@364 $generated@@366)) ($generated@@79 $generated@@368 $generated@@367))))
 :pattern ( ($generated@@364 $generated@@366))
))))
(assert (forall (($generated@@369 T@U) ($generated@@370 T@U) ) (!  (=> (and (= (type $generated@@369) ($generated@@282 $generated@@152 $generated@@152)) (= (type $generated@@370) $generated@@152)) (= ($generated@@0 ($generated@@84 ($generated@@363 $generated@@369) $generated@@370))  (and ($generated@@0 ($generated@@84 ($generated@@280 $generated@@369) ($generated@@150 ($generated@@319 $generated@@143 $generated@@370)))) (= ($generated@@84 ($generated@@364 $generated@@369) ($generated@@150 ($generated@@319 $generated@@143 $generated@@370))) ($generated@@151 ($generated@@319 $generated@@143 $generated@@370))))))
 :pattern ( ($generated@@84 ($generated@@363 $generated@@369) $generated@@370))
)))
(assert  (and (forall (($generated@@373 T@U) ) (! (= (type ($generated@@371 $generated@@373)) ($generated@@79 $generated@@152 $generated@@4))
 :pattern ( ($generated@@371 $generated@@373))
)) (forall (($generated@@374 T@U) ) (! (let (($generated@@375 ($generated@@302 (type $generated@@374))))
(let (($generated@@376 ($generated@@301 (type $generated@@374))))
(= (type ($generated@@372 $generated@@374)) ($generated@@79 $generated@@376 $generated@@375))))
 :pattern ( ($generated@@372 $generated@@374))
))))
(assert (forall (($generated@@377 T@U) ($generated@@378 T@U) ) (!  (=> (and (= (type $generated@@377) ($generated@@300 $generated@@152 $generated@@152)) (= (type $generated@@378) $generated@@152)) (= ($generated@@0 ($generated@@84 ($generated@@371 $generated@@377) $generated@@378))  (and ($generated@@0 ($generated@@84 ($generated@@298 $generated@@377) ($generated@@150 ($generated@@319 $generated@@143 $generated@@378)))) (= ($generated@@84 ($generated@@372 $generated@@377) ($generated@@150 ($generated@@319 $generated@@143 $generated@@378))) ($generated@@151 ($generated@@319 $generated@@143 $generated@@378))))))
 :pattern ( ($generated@@84 ($generated@@371 $generated@@377) $generated@@378))
)))
(assert (forall (($generated@@379 T@U) ($generated@@380 T@U) ) (! (let (($generated@@381 (type $generated@@380)))
(let (($generated@@382 ($generated@@283 (type $generated@@379))))
 (=> (= (type $generated@@379) ($generated@@282 $generated@@382 $generated@@381)) (= ($generated@@0 ($generated@@84 ($generated@@329 $generated@@379) $generated@@380)) (exists (($generated@@383 T@U) ) (!  (and (= (type $generated@@383) $generated@@382) (and ($generated@@0 ($generated@@84 ($generated@@280 $generated@@379) $generated@@383)) (= $generated@@380 ($generated@@84 ($generated@@364 $generated@@379) $generated@@383))))
 :pattern ( ($generated@@84 ($generated@@280 $generated@@379) $generated@@383))
 :pattern ( ($generated@@84 ($generated@@364 $generated@@379) $generated@@383))
))))))
 :pattern ( ($generated@@84 ($generated@@329 $generated@@379) $generated@@380))
)))
(assert (forall (($generated@@384 T@U) ($generated@@385 T@U) ) (! (let (($generated@@386 (type $generated@@385)))
(let (($generated@@387 ($generated@@301 (type $generated@@384))))
 (=> (= (type $generated@@384) ($generated@@300 $generated@@387 $generated@@386)) (= ($generated@@0 ($generated@@84 ($generated@@340 $generated@@384) $generated@@385)) (exists (($generated@@388 T@U) ) (!  (and (= (type $generated@@388) $generated@@387) (and ($generated@@0 ($generated@@84 ($generated@@298 $generated@@384) $generated@@388)) (= $generated@@385 ($generated@@84 ($generated@@372 $generated@@384) $generated@@388))))
 :pattern ( ($generated@@84 ($generated@@298 $generated@@384) $generated@@388))
 :pattern ( ($generated@@84 ($generated@@372 $generated@@384) $generated@@388))
))))))
 :pattern ( ($generated@@84 ($generated@@340 $generated@@384) $generated@@385))
)))
(assert (forall (($generated@@390 T@U) ($generated@@391 T@U) ) (! (= (type ($generated@@389 $generated@@390 $generated@@391)) $generated@@67)
 :pattern ( ($generated@@389 $generated@@390 $generated@@391))
)))
(assert (forall (($generated@@392 T@U) ($generated@@393 T@U) ($generated@@394 T@U) ($generated@@395 T@U) ) (!  (=> (and (and (and (= (type $generated@@392) ($generated@@282 $generated@@152 $generated@@152)) (= (type $generated@@393) $generated@@67)) (= (type $generated@@394) $generated@@67)) (= (type $generated@@395) ($generated@@79 $generated@@80 $generated@@81))) (= ($generated@@77 $generated@@392 ($generated@@389 $generated@@393 $generated@@394) $generated@@395) (forall (($generated@@396 T@U) ) (!  (=> (and (= (type $generated@@396) $generated@@152) ($generated@@0 ($generated@@84 ($generated@@280 $generated@@392) $generated@@396))) (and ($generated@@249 ($generated@@84 ($generated@@364 $generated@@392) $generated@@396) $generated@@394 $generated@@395) ($generated@@249 $generated@@396 $generated@@393 $generated@@395)))
 :pattern ( ($generated@@84 ($generated@@364 $generated@@392) $generated@@396))
 :pattern ( ($generated@@84 ($generated@@280 $generated@@392) $generated@@396))
))))
 :pattern ( ($generated@@77 $generated@@392 ($generated@@389 $generated@@393 $generated@@394) $generated@@395))
)))
(assert (forall (($generated@@398 T@U) ($generated@@399 T@U) ) (! (= (type ($generated@@397 $generated@@398 $generated@@399)) $generated@@67)
 :pattern ( ($generated@@397 $generated@@398 $generated@@399))
)))
(assert (forall (($generated@@400 T@U) ($generated@@401 T@U) ($generated@@402 T@U) ($generated@@403 T@U) ) (!  (=> (and (and (and (= (type $generated@@400) ($generated@@300 $generated@@152 $generated@@152)) (= (type $generated@@401) $generated@@67)) (= (type $generated@@402) $generated@@67)) (= (type $generated@@403) ($generated@@79 $generated@@80 $generated@@81))) (= ($generated@@77 $generated@@400 ($generated@@397 $generated@@401 $generated@@402) $generated@@403) (forall (($generated@@404 T@U) ) (!  (=> (and (= (type $generated@@404) $generated@@152) ($generated@@0 ($generated@@84 ($generated@@298 $generated@@400) $generated@@404))) (and ($generated@@249 ($generated@@84 ($generated@@372 $generated@@400) $generated@@404) $generated@@402 $generated@@403) ($generated@@249 $generated@@404 $generated@@401 $generated@@403)))
 :pattern ( ($generated@@84 ($generated@@372 $generated@@400) $generated@@404))
 :pattern ( ($generated@@84 ($generated@@298 $generated@@400) $generated@@404))
))))
 :pattern ( ($generated@@77 $generated@@400 ($generated@@397 $generated@@401 $generated@@402) $generated@@403))
)))
(assert (forall (($generated@@406 T@T) ) (! (= (type ($generated@@405 $generated@@406)) ($generated@@79 $generated@@406 $generated@@4))
 :pattern ( ($generated@@405 $generated@@406))
)))
(assert (forall (($generated@@407 T@U) ) (! (let (($generated@@408 ($generated@@302 (type $generated@@407))))
(let (($generated@@409 ($generated@@301 (type $generated@@407))))
 (=> (= (type $generated@@407) ($generated@@300 $generated@@409 $generated@@408)) (= (= $generated@@407 ($generated@@299 $generated@@409 $generated@@408)) (= ($generated@@298 $generated@@407) ($generated@@405 $generated@@409))))))
 :pattern ( ($generated@@298 $generated@@407))
)))
(assert (forall (($generated@@410 T@U) ) (! (let (($generated@@411 ($generated@@302 (type $generated@@410))))
(let (($generated@@412 ($generated@@301 (type $generated@@410))))
 (=> (= (type $generated@@410) ($generated@@300 $generated@@412 $generated@@411)) (= (= $generated@@410 ($generated@@299 $generated@@412 $generated@@411)) (= ($generated@@340 $generated@@410) ($generated@@405 $generated@@411))))))
 :pattern ( ($generated@@340 $generated@@410))
)))
(assert (forall (($generated@@413 T@U) ) (! (let (($generated@@414 ($generated@@302 (type $generated@@413))))
(let (($generated@@415 ($generated@@301 (type $generated@@413))))
 (=> (= (type $generated@@413) ($generated@@300 $generated@@415 $generated@@414)) (= (= $generated@@413 ($generated@@299 $generated@@415 $generated@@414)) (= ($generated@@371 $generated@@413) ($generated@@405 $generated@@152))))))
 :pattern ( ($generated@@371 $generated@@413))
)))
(assert (forall (($generated@@416 T@U) ) (! (let (($generated@@417 ($generated@@284 (type $generated@@416))))
(let (($generated@@418 ($generated@@283 (type $generated@@416))))
 (=> (= (type $generated@@416) ($generated@@282 $generated@@418 $generated@@417)) (or (= $generated@@416 ($generated@@281 $generated@@418 $generated@@417)) (exists (($generated@@419 T@U) ($generated@@420 T@U) ) (!  (and (and (= (type $generated@@419) $generated@@152) (= (type $generated@@420) $generated@@152)) ($generated@@0 ($generated@@84 ($generated@@363 $generated@@416) ($generated@@269 ($generated@@224 $generated@@419 $generated@@420)))))
 :no-pattern (type $generated@@419)
 :no-pattern (type $generated@@420)
 :no-pattern ($generated $generated@@419)
 :no-pattern ($generated@@0 $generated@@419)
 :no-pattern ($generated $generated@@420)
 :no-pattern ($generated@@0 $generated@@420)
))))))
 :pattern ( ($generated@@363 $generated@@416))
)))
(assert (forall (($generated@@421 T@U) ) (! (let (($generated@@422 ($generated@@302 (type $generated@@421))))
(let (($generated@@423 ($generated@@301 (type $generated@@421))))
 (=> (= (type $generated@@421) ($generated@@300 $generated@@423 $generated@@422)) (or (= $generated@@421 ($generated@@299 $generated@@423 $generated@@422)) (exists (($generated@@424 T@U) ($generated@@425 T@U) ) (!  (and (and (= (type $generated@@424) $generated@@152) (= (type $generated@@425) $generated@@152)) ($generated@@0 ($generated@@84 ($generated@@371 $generated@@421) ($generated@@269 ($generated@@224 $generated@@424 $generated@@425)))))
 :no-pattern (type $generated@@424)
 :no-pattern (type $generated@@425)
 :no-pattern ($generated $generated@@424)
 :no-pattern ($generated@@0 $generated@@424)
 :no-pattern ($generated $generated@@425)
 :no-pattern ($generated@@0 $generated@@425)
))))))
 :pattern ( ($generated@@371 $generated@@421))
)))
(assert (forall (($generated@@426 T@U) ) (!  (=> (and (= (type $generated@@426) $generated@@152) ($generated@@225 $generated@@426 $generated@@46)) (and (= ($generated@@269 ($generated@@319 $generated@@2 $generated@@426)) $generated@@426) ($generated@@139 ($generated@@319 $generated@@2 $generated@@426) $generated@@46)))
 :pattern ( ($generated@@225 $generated@@426 $generated@@46))
)))
(assert (forall (($generated@@427 T@U) ) (!  (=> (and (= (type $generated@@427) $generated@@152) ($generated@@225 $generated@@427 $generated@@47)) (and (= ($generated@@269 ($generated@@319 $generated@@3 $generated@@427)) $generated@@427) ($generated@@139 ($generated@@319 $generated@@3 $generated@@427) $generated@@47)))
 :pattern ( ($generated@@225 $generated@@427 $generated@@47))
)))
(assert (forall (($generated@@428 T@U) ) (!  (=> (and (= (type $generated@@428) $generated@@152) ($generated@@225 $generated@@428 $generated@@44)) (and (= ($generated@@269 ($generated@@319 $generated@@4 $generated@@428)) $generated@@428) ($generated@@139 ($generated@@319 $generated@@4 $generated@@428) $generated@@44)))
 :pattern ( ($generated@@225 $generated@@428 $generated@@44))
)))
(assert (= ($generated@@1 $generated@@429) 20))
(assert (forall (($generated@@430 T@U) ) (!  (=> (and (= (type $generated@@430) $generated@@152) ($generated@@225 $generated@@430 $generated@@45)) (and (= ($generated@@269 ($generated@@319 $generated@@429 $generated@@430)) $generated@@430) ($generated@@139 ($generated@@319 $generated@@429 $generated@@430) $generated@@45)))
 :pattern ( ($generated@@225 $generated@@430 $generated@@45))
)))
(assert (forall (($generated@@431 T@U) ($generated@@432 T@U) ) (!  (=> (= (type $generated@@432) $generated@@67) (= ($generated@@225 ($generated@@269 $generated@@431) $generated@@432) ($generated@@139 $generated@@431 $generated@@432)))
 :pattern ( ($generated@@225 ($generated@@269 $generated@@431) $generated@@432))
)))
(assert (forall (($generated@@433 T@U) ) (! (let (($generated@@434 ($generated@@82 (type $generated@@433))))
 (=> (= (type $generated@@433) ($generated@@79 $generated@@434 $generated@@2)) (<= 0 ($generated@@274 $generated@@433))))
 :pattern ( ($generated@@274 $generated@@433))
)))
(assert (forall (($generated@@435 T@U) ) (! (let (($generated@@436 ($generated@@264 (type $generated@@435))))
 (=> (= (type $generated@@435) ($generated@@263 $generated@@436)) (<= 0 ($generated@@262 $generated@@435))))
 :pattern ( ($generated@@262 $generated@@435))
)))
(assert (forall (($generated@@438 T@U) ) (! (= (type ($generated@@437 $generated@@438)) $generated@@67)
 :pattern ( ($generated@@437 $generated@@438))
)))
(assert (forall (($generated@@439 T@U) ($generated@@440 T@U) ) (!  (=> (and (= (type $generated@@439) $generated@@67) (= (type $generated@@440) $generated@@67)) (= ($generated@@437 ($generated@@389 $generated@@439 $generated@@440)) $generated@@439))
 :pattern ( ($generated@@389 $generated@@439 $generated@@440))
)))
(assert (forall (($generated@@442 T@U) ) (! (= (type ($generated@@441 $generated@@442)) $generated@@67)
 :pattern ( ($generated@@441 $generated@@442))
)))
(assert (forall (($generated@@443 T@U) ($generated@@444 T@U) ) (!  (=> (and (= (type $generated@@443) $generated@@67) (= (type $generated@@444) $generated@@67)) (= ($generated@@441 ($generated@@389 $generated@@443 $generated@@444)) $generated@@444))
 :pattern ( ($generated@@389 $generated@@443 $generated@@444))
)))
(assert (forall (($generated@@445 T@U) ($generated@@446 T@U) ) (!  (=> (and (= (type $generated@@445) $generated@@67) (= (type $generated@@446) $generated@@67)) (= ($generated@@75 ($generated@@389 $generated@@445 $generated@@446)) $generated@@58))
 :pattern ( ($generated@@389 $generated@@445 $generated@@446))
)))
(assert (forall (($generated@@448 T@U) ) (! (= (type ($generated@@447 $generated@@448)) $generated@@67)
 :pattern ( ($generated@@447 $generated@@448))
)))
(assert (forall (($generated@@449 T@U) ($generated@@450 T@U) ) (!  (=> (and (= (type $generated@@449) $generated@@67) (= (type $generated@@450) $generated@@67)) (= ($generated@@447 ($generated@@397 $generated@@449 $generated@@450)) $generated@@449))
 :pattern ( ($generated@@397 $generated@@449 $generated@@450))
)))
(assert (forall (($generated@@452 T@U) ) (! (= (type ($generated@@451 $generated@@452)) $generated@@67)
 :pattern ( ($generated@@451 $generated@@452))
)))
(assert (forall (($generated@@453 T@U) ($generated@@454 T@U) ) (!  (=> (and (= (type $generated@@453) $generated@@67) (= (type $generated@@454) $generated@@67)) (= ($generated@@451 ($generated@@397 $generated@@453 $generated@@454)) $generated@@454))
 :pattern ( ($generated@@397 $generated@@453 $generated@@454))
)))
(assert (forall (($generated@@455 T@U) ($generated@@456 T@U) ) (!  (=> (and (= (type $generated@@455) $generated@@67) (= (type $generated@@456) $generated@@67)) (= ($generated@@75 ($generated@@397 $generated@@455 $generated@@456)) $generated@@59))
 :pattern ( ($generated@@397 $generated@@455 $generated@@456))
)))
(assert (forall (($generated@@457 T@U) ($generated@@458 T@U) ) (!  (=> (and (= (type $generated@@457) $generated@@152) (= (type $generated@@458) $generated@@152)) (= ($generated@@255 ($generated@@224 $generated@@457 $generated@@458)) $generated@@61))
 :pattern ( ($generated@@224 $generated@@457 $generated@@458))
)))
(assert (forall (($generated@@460 T@U) ) (! (= (type ($generated@@459 $generated@@460)) $generated@@67)
 :pattern ( ($generated@@459 $generated@@460))
)))
(assert (forall (($generated@@461 T@U) ($generated@@462 T@U) ) (!  (=> (and (= (type $generated@@461) $generated@@67) (= (type $generated@@462) $generated@@67)) (= ($generated@@459 ($generated@@142 $generated@@461 $generated@@462)) $generated@@461))
 :pattern ( ($generated@@142 $generated@@461 $generated@@462))
)))
(assert (forall (($generated@@464 T@U) ) (! (= (type ($generated@@463 $generated@@464)) $generated@@67)
 :pattern ( ($generated@@463 $generated@@464))
)))
(assert (forall (($generated@@465 T@U) ($generated@@466 T@U) ) (!  (=> (and (= (type $generated@@465) $generated@@67) (= (type $generated@@466) $generated@@67)) (= ($generated@@463 ($generated@@142 $generated@@465 $generated@@466)) $generated@@466))
 :pattern ( ($generated@@142 $generated@@465 $generated@@466))
)))
(assert (forall (($generated@@467 T@U) ($generated@@468 T@U) ) (!  (=> (and (= (type $generated@@467) $generated@@152) (= (type $generated@@468) $generated@@152)) (= ($generated@@150 ($generated@@224 $generated@@467 $generated@@468)) $generated@@467))
 :pattern ( ($generated@@224 $generated@@467 $generated@@468))
)))
(assert (forall (($generated@@469 T@U) ($generated@@470 T@U) ) (!  (=> (and (= (type $generated@@469) $generated@@152) (= (type $generated@@470) $generated@@152)) (= ($generated@@151 ($generated@@224 $generated@@469 $generated@@470)) $generated@@470))
 :pattern ( ($generated@@224 $generated@@469 $generated@@470))
)))
(assert  (and (forall (($generated@@473 T@U) ) (! (= (type ($generated@@471 $generated@@473)) $generated@@67)
 :pattern ( ($generated@@471 $generated@@473))
)) (forall (($generated@@474 T@U) ($generated@@475 Int) ) (! (let (($generated@@476 ($generated@@264 (type $generated@@474))))
(= (type ($generated@@472 $generated@@474 $generated@@475)) $generated@@476))
 :pattern ( ($generated@@472 $generated@@474 $generated@@475))
))))
(assert (forall (($generated@@477 T@U) ($generated@@478 T@U) ($generated@@479 T@U) ) (!  (=> (and (and (= (type $generated@@477) ($generated@@263 $generated@@152)) (= (type $generated@@478) $generated@@67)) (= (type $generated@@479) ($generated@@79 $generated@@80 $generated@@81))) (= ($generated@@77 $generated@@477 ($generated@@471 $generated@@478) $generated@@479) (forall (($generated@@480 Int) ) (!  (=> (and (<= 0 $generated@@480) (< $generated@@480 ($generated@@262 $generated@@477))) ($generated@@249 ($generated@@472 $generated@@477 $generated@@480) $generated@@478 $generated@@479))
 :pattern ( ($generated@@472 $generated@@477 $generated@@480))
))))
 :pattern ( ($generated@@77 $generated@@477 ($generated@@471 $generated@@478) $generated@@479))
)))
(assert (forall (($generated@@482 Int) ) (! (= ($generated@@481 ($generated@@78 $generated@@482)) $generated@@482)
 :pattern ( ($generated@@78 $generated@@482))
)))
(assert (forall (($generated@@484 T@U) ) (! (= (type ($generated@@483 $generated@@484)) $generated@@67)
 :pattern ( ($generated@@483 $generated@@484))
)))
(assert (forall (($generated@@485 T@U) ) (!  (=> (= (type $generated@@485) $generated@@67) (= ($generated@@483 ($generated@@234 $generated@@485)) $generated@@485))
 :pattern ( ($generated@@234 $generated@@485))
)))
(assert (forall (($generated@@486 T@U) ) (!  (=> (= (type $generated@@486) $generated@@67) (= ($generated@@75 ($generated@@234 $generated@@486)) $generated@@54))
 :pattern ( ($generated@@234 $generated@@486))
)))
(assert (forall (($generated@@488 T@U) ) (! (= (type ($generated@@487 $generated@@488)) $generated@@67)
 :pattern ( ($generated@@487 $generated@@488))
)))
(assert (forall (($generated@@489 T@U) ) (!  (=> (= (type $generated@@489) $generated@@67) (= ($generated@@487 ($generated@@239 $generated@@489)) $generated@@489))
 :pattern ( ($generated@@239 $generated@@489))
)))
(assert (forall (($generated@@490 T@U) ) (!  (=> (= (type $generated@@490) $generated@@67) (= ($generated@@75 ($generated@@239 $generated@@490)) $generated@@55))
 :pattern ( ($generated@@239 $generated@@490))
)))
(assert (forall (($generated@@492 T@U) ) (! (= (type ($generated@@491 $generated@@492)) $generated@@67)
 :pattern ( ($generated@@491 $generated@@492))
)))
(assert (forall (($generated@@493 T@U) ) (!  (=> (= (type $generated@@493) $generated@@67) (= ($generated@@491 ($generated@@157 $generated@@493)) $generated@@493))
 :pattern ( ($generated@@157 $generated@@493))
)))
(assert (forall (($generated@@494 T@U) ) (!  (=> (= (type $generated@@494) $generated@@67) (= ($generated@@75 ($generated@@157 $generated@@494)) $generated@@56))
 :pattern ( ($generated@@157 $generated@@494))
)))
(assert (forall (($generated@@496 T@U) ) (! (= (type ($generated@@495 $generated@@496)) $generated@@67)
 :pattern ( ($generated@@495 $generated@@496))
)))
(assert (forall (($generated@@497 T@U) ) (!  (=> (= (type $generated@@497) $generated@@67) (= ($generated@@495 ($generated@@471 $generated@@497)) $generated@@497))
 :pattern ( ($generated@@471 $generated@@497))
)))
(assert (forall (($generated@@498 T@U) ) (!  (=> (= (type $generated@@498) $generated@@67) (= ($generated@@75 ($generated@@471 $generated@@498)) $generated@@57))
 :pattern ( ($generated@@471 $generated@@498))
)))
(assert (forall (($generated@@499 T@U) ) (! (let (($generated@@500 (type $generated@@499)))
(= ($generated@@319 $generated@@500 ($generated@@269 $generated@@499)) $generated@@499))
 :pattern ( ($generated@@269 $generated@@499))
)))
(assert (forall (($generated@@501 T@U) ($generated@@502 T@U) ($generated@@503 T@U) ) (!  (=> (and (and (= (type $generated@@501) ($generated@@282 $generated@@152 $generated@@152)) (= (type $generated@@502) $generated@@67)) (= (type $generated@@503) $generated@@67)) (= ($generated@@139 $generated@@501 ($generated@@389 $generated@@502 $generated@@503)) (forall (($generated@@504 T@U) ) (!  (=> (and (= (type $generated@@504) $generated@@152) ($generated@@0 ($generated@@84 ($generated@@280 $generated@@501) $generated@@504))) (and ($generated@@225 ($generated@@84 ($generated@@364 $generated@@501) $generated@@504) $generated@@503) ($generated@@225 $generated@@504 $generated@@502)))
 :pattern ( ($generated@@84 ($generated@@364 $generated@@501) $generated@@504))
 :pattern ( ($generated@@84 ($generated@@280 $generated@@501) $generated@@504))
))))
 :pattern ( ($generated@@139 $generated@@501 ($generated@@389 $generated@@502 $generated@@503)))
)))
(assert (forall (($generated@@505 T@U) ($generated@@506 T@U) ($generated@@507 T@U) ) (!  (=> (and (and (= (type $generated@@505) ($generated@@300 $generated@@152 $generated@@152)) (= (type $generated@@506) $generated@@67)) (= (type $generated@@507) $generated@@67)) (= ($generated@@139 $generated@@505 ($generated@@397 $generated@@506 $generated@@507)) (forall (($generated@@508 T@U) ) (!  (=> (and (= (type $generated@@508) $generated@@152) ($generated@@0 ($generated@@84 ($generated@@298 $generated@@505) $generated@@508))) (and ($generated@@225 ($generated@@84 ($generated@@372 $generated@@505) $generated@@508) $generated@@507) ($generated@@225 $generated@@508 $generated@@506)))
 :pattern ( ($generated@@84 ($generated@@372 $generated@@505) $generated@@508))
 :pattern ( ($generated@@84 ($generated@@298 $generated@@505) $generated@@508))
))))
 :pattern ( ($generated@@139 $generated@@505 ($generated@@397 $generated@@506 $generated@@507)))
)))
(assert (forall (($generated@@511 T@U) ($generated@@512 T@U) ) (!  (=> (and (= (type $generated@@511) $generated@@152) (= (type $generated@@512) $generated@@152)) (< ($generated@@509 $generated@@511) ($generated@@510 ($generated@@224 $generated@@511 $generated@@512))))
 :pattern ( ($generated@@224 $generated@@511 $generated@@512))
)))
(assert (forall (($generated@@513 T@U) ($generated@@514 T@U) ) (!  (=> (and (= (type $generated@@513) $generated@@152) (= (type $generated@@514) $generated@@152)) (< ($generated@@509 $generated@@514) ($generated@@510 ($generated@@224 $generated@@513 $generated@@514))))
 :pattern ( ($generated@@224 $generated@@513 $generated@@514))
)))
(assert (forall (($generated@@515 T@U) ($generated@@516 T@U) ($generated@@517 T@U) ) (!  (=> (and (and (and (= (type $generated@@515) $generated@@152) (= (type $generated@@516) $generated@@67)) (= (type $generated@@517) $generated@@67)) ($generated@@225 $generated@@515 ($generated@@389 $generated@@516 $generated@@517))) (and (= ($generated@@269 ($generated@@319 ($generated@@282 $generated@@152 $generated@@152) $generated@@515)) $generated@@515) ($generated@@139 ($generated@@319 ($generated@@282 $generated@@152 $generated@@152) $generated@@515) ($generated@@389 $generated@@516 $generated@@517))))
 :pattern ( ($generated@@225 $generated@@515 ($generated@@389 $generated@@516 $generated@@517)))
)))
(assert (forall (($generated@@518 T@U) ($generated@@519 T@U) ($generated@@520 T@U) ) (!  (=> (and (and (and (= (type $generated@@518) $generated@@152) (= (type $generated@@519) $generated@@67)) (= (type $generated@@520) $generated@@67)) ($generated@@225 $generated@@518 ($generated@@397 $generated@@519 $generated@@520))) (and (= ($generated@@269 ($generated@@319 ($generated@@300 $generated@@152 $generated@@152) $generated@@518)) $generated@@518) ($generated@@139 ($generated@@319 ($generated@@300 $generated@@152 $generated@@152) $generated@@518) ($generated@@397 $generated@@519 $generated@@520))))
 :pattern ( ($generated@@225 $generated@@518 ($generated@@397 $generated@@519 $generated@@520)))
)))
(assert (forall (($generated@@521 T@U) ($generated@@522 T@U) ($generated@@523 T@U) ) (!  (=> (and (and (and (= (type $generated@@521) $generated@@67) (= (type $generated@@522) $generated@@67)) (= (type $generated@@523) $generated@@152)) ($generated@@225 $generated@@523 ($generated@@142 $generated@@521 $generated@@522))) (and (= ($generated@@269 ($generated@@319 $generated@@143 $generated@@523)) $generated@@523) ($generated@@139 ($generated@@319 $generated@@143 $generated@@523) ($generated@@142 $generated@@521 $generated@@522))))
 :pattern ( ($generated@@225 $generated@@523 ($generated@@142 $generated@@521 $generated@@522)))
)))
(assert (forall (($generated@@524 T@U) ) (! (let (($generated@@525 (type $generated@@524)))
 (not ($generated@@0 ($generated@@84 ($generated@@405 $generated@@525) $generated@@524))))
 :pattern ( (let (($generated@@525 (type $generated@@524)))
($generated@@84 ($generated@@405 $generated@@525) $generated@@524)))
)))
(assert (forall (($generated@@527 T@U) ) (! (= (type ($generated@@526 $generated@@527)) $generated@@72)
 :pattern ( ($generated@@526 $generated@@527))
)))
(assert (forall (($generated@@528 T@U) ($generated@@529 T@U) ) (!  (=> (and (= (type $generated@@528) $generated@@67) (= (type $generated@@529) $generated@@67)) (and (= ($generated@@75 ($generated@@142 $generated@@528 $generated@@529)) $generated@@62) (= ($generated@@526 ($generated@@142 $generated@@528 $generated@@529)) $generated@@65)))
 :pattern ( ($generated@@142 $generated@@528 $generated@@529))
)))
(assert (forall (($generated@@530 T@U) ) (!  (=> (= (type $generated@@530) $generated@@143) (= ($generated@@509 ($generated@@269 $generated@@530)) ($generated@@510 $generated@@530)))
 :pattern ( ($generated@@509 ($generated@@269 $generated@@530)))
)))
(assert (forall (($generated@@531 T@U) ) (!  (=> (and (= (type $generated@@531) $generated@@152) ($generated@@225 $generated@@531 ($generated@@78 0))) (and (= ($generated@@269 ($generated@@319 $generated@@2 $generated@@531)) $generated@@531) ($generated@@139 ($generated@@319 ($generated@@79 $generated@@152 $generated@@4) $generated@@531) ($generated@@78 0))))
 :pattern ( ($generated@@225 $generated@@531 ($generated@@78 0)))
)))
(assert (forall (($generated@@532 T@U) ($generated@@533 T@U) ) (!  (=> (and (and (= (type $generated@@532) $generated@@152) (= (type $generated@@533) $generated@@67)) ($generated@@225 $generated@@532 ($generated@@234 $generated@@533))) (and (= ($generated@@269 ($generated@@319 ($generated@@79 $generated@@152 $generated@@4) $generated@@532)) $generated@@532) ($generated@@139 ($generated@@319 ($generated@@79 $generated@@152 $generated@@4) $generated@@532) ($generated@@234 $generated@@533))))
 :pattern ( ($generated@@225 $generated@@532 ($generated@@234 $generated@@533)))
)))
(assert (forall (($generated@@534 T@U) ($generated@@535 T@U) ) (!  (=> (and (and (= (type $generated@@534) $generated@@152) (= (type $generated@@535) $generated@@67)) ($generated@@225 $generated@@534 ($generated@@239 $generated@@535))) (and (= ($generated@@269 ($generated@@319 ($generated@@79 $generated@@152 $generated@@4) $generated@@534)) $generated@@534) ($generated@@139 ($generated@@319 ($generated@@79 $generated@@152 $generated@@4) $generated@@534) ($generated@@239 $generated@@535))))
 :pattern ( ($generated@@225 $generated@@534 ($generated@@239 $generated@@535)))
)))
(assert (forall (($generated@@536 T@U) ($generated@@537 T@U) ) (!  (=> (and (and (= (type $generated@@536) $generated@@152) (= (type $generated@@537) $generated@@67)) ($generated@@225 $generated@@536 ($generated@@157 $generated@@537))) (and (= ($generated@@269 ($generated@@319 ($generated@@79 $generated@@152 $generated@@2) $generated@@536)) $generated@@536) ($generated@@139 ($generated@@319 ($generated@@79 $generated@@152 $generated@@2) $generated@@536) ($generated@@157 $generated@@537))))
 :pattern ( ($generated@@225 $generated@@536 ($generated@@157 $generated@@537)))
)))
(assert (forall (($generated@@538 T@U) ($generated@@539 T@U) ) (!  (=> (and (and (= (type $generated@@538) $generated@@152) (= (type $generated@@539) $generated@@67)) ($generated@@225 $generated@@538 ($generated@@471 $generated@@539))) (and (= ($generated@@269 ($generated@@319 ($generated@@263 $generated@@152) $generated@@538)) $generated@@538) ($generated@@139 ($generated@@319 ($generated@@263 $generated@@152) $generated@@538) ($generated@@471 $generated@@539))))
 :pattern ( ($generated@@225 $generated@@538 ($generated@@471 $generated@@539)))
)))
(assert (= ($generated@@75 $generated@@135) $generated@@63))
(assert (= ($generated@@526 $generated@@135) $generated@@66))
(assert (= ($generated@@75 $generated@@221) $generated@@64))
(assert (= ($generated@@526 $generated@@221) $generated@@66))
(assert (forall (($generated@@540 T@U) ($generated@@541 T@U) ($generated@@542 T@U) ) (!  (=> (and (and (= (type $generated@@540) ($generated@@79 $generated@@152 $generated@@2)) (= (type $generated@@541) $generated@@67)) (= (type $generated@@542) ($generated@@79 $generated@@80 $generated@@81))) (= ($generated@@77 $generated@@540 ($generated@@157 $generated@@541) $generated@@542) (forall (($generated@@543 T@U) ) (!  (=> (and (= (type $generated@@543) $generated@@152) (< 0 ($generated ($generated@@84 $generated@@540 $generated@@543)))) ($generated@@249 $generated@@543 $generated@@541 $generated@@542))
 :pattern ( ($generated@@84 $generated@@540 $generated@@543))
))))
 :pattern ( ($generated@@77 $generated@@540 ($generated@@157 $generated@@541) $generated@@542))
)))
(assert (forall (($generated@@544 T@U) ($generated@@545 T@U) ($generated@@546 T@U) ) (!  (=> (and (and (and (= (type $generated@@544) $generated@@143) (= (type $generated@@545) $generated@@67)) (= (type $generated@@546) ($generated@@79 $generated@@80 $generated@@81))) (and ($generated@@248 $generated@@546) (and ($generated@@141 $generated@@544) (exists (($generated@@547 T@U) ) (!  (and (= (type $generated@@547) $generated@@67) ($generated@@77 $generated@@544 ($generated@@142 $generated@@545 $generated@@547) $generated@@546))
 :pattern ( ($generated@@77 $generated@@544 ($generated@@142 $generated@@545 $generated@@547) $generated@@546))
))))) ($generated@@249 ($generated@@150 $generated@@544) $generated@@545 $generated@@546))
 :pattern ( ($generated@@249 ($generated@@150 $generated@@544) $generated@@545 $generated@@546))
)))
(assert (forall (($generated@@548 T@U) ($generated@@549 T@U) ($generated@@550 T@U) ) (!  (=> (and (and (and (= (type $generated@@548) $generated@@143) (= (type $generated@@549) $generated@@67)) (= (type $generated@@550) ($generated@@79 $generated@@80 $generated@@81))) (and ($generated@@248 $generated@@550) (and ($generated@@141 $generated@@548) (exists (($generated@@551 T@U) ) (!  (and (= (type $generated@@551) $generated@@67) ($generated@@77 $generated@@548 ($generated@@142 $generated@@551 $generated@@549) $generated@@550))
 :pattern ( ($generated@@77 $generated@@548 ($generated@@142 $generated@@551 $generated@@549) $generated@@550))
))))) ($generated@@249 ($generated@@151 $generated@@548) $generated@@549 $generated@@550))
 :pattern ( ($generated@@249 ($generated@@151 $generated@@548) $generated@@549 $generated@@550))
)))
(assert (forall (($generated@@552 T@U) ($generated@@553 T@U) ) (!  (=> (and (= (type $generated@@552) $generated@@152) (= (type $generated@@553) $generated@@152)) (= ($generated@@224 ($generated@@244 $generated@@552) ($generated@@244 $generated@@553)) ($generated@@244 ($generated@@224 $generated@@552 $generated@@553))))
 :pattern ( ($generated@@224 ($generated@@244 $generated@@552) ($generated@@244 $generated@@553)))
)))
(assert (forall (($generated@@554 T@U) ) (! (= ($generated@@269 ($generated@@244 $generated@@554)) ($generated@@244 ($generated@@269 $generated@@554)))
 :pattern ( ($generated@@269 ($generated@@244 $generated@@554)))
)))
(assert (forall (($generated@@555 T@U) ) (! (let (($generated@@556 ($generated@@264 (type $generated@@555))))
 (=> (and (= (type $generated@@555) ($generated@@263 $generated@@556)) (= ($generated@@262 $generated@@555) 0)) (= $generated@@555 ($generated@@261 $generated@@556))))
 :pattern ( ($generated@@262 $generated@@555))
)))
(assert (forall (($generated@@557 T@U) ($generated@@558 T@U) ($generated@@559 T@U) ) (! (let (($generated@@560 (type $generated@@558)))
 (=> (and (and (= (type $generated@@557) ($generated@@79 $generated@@560 $generated@@2)) (= (type $generated@@559) $generated@@2)) (<= 0 ($generated $generated@@559))) (= ($generated@@274 ($generated@@85 $generated@@557 $generated@@558 $generated@@559)) (+ (- ($generated@@274 $generated@@557) ($generated ($generated@@84 $generated@@557 $generated@@558))) ($generated $generated@@559)))))
 :pattern ( ($generated@@274 ($generated@@85 $generated@@557 $generated@@558 $generated@@559)))
)))
(assert (forall (($generated@@561 T@U) ($generated@@562 T@U) ) (!  (=> (and (= (type $generated@@561) ($generated@@79 $generated@@80 $generated@@81)) (= (type $generated@@562) $generated@@2)) ($generated@@77 $generated@@562 $generated@@46 $generated@@561))
 :pattern ( ($generated@@77 $generated@@562 $generated@@46 $generated@@561))
)))
(assert (forall (($generated@@563 T@U) ($generated@@564 T@U) ) (!  (=> (and (= (type $generated@@563) ($generated@@79 $generated@@80 $generated@@81)) (= (type $generated@@564) $generated@@3)) ($generated@@77 $generated@@564 $generated@@47 $generated@@563))
 :pattern ( ($generated@@77 $generated@@564 $generated@@47 $generated@@563))
)))
(assert (forall (($generated@@565 T@U) ($generated@@566 T@U) ) (!  (=> (and (= (type $generated@@565) ($generated@@79 $generated@@80 $generated@@81)) (= (type $generated@@566) $generated@@4)) ($generated@@77 $generated@@566 $generated@@44 $generated@@565))
 :pattern ( ($generated@@77 $generated@@566 $generated@@44 $generated@@565))
)))
(assert (forall (($generated@@567 T@U) ($generated@@568 T@U) ) (!  (=> (and (= (type $generated@@567) ($generated@@79 $generated@@80 $generated@@81)) (= (type $generated@@568) $generated@@429)) ($generated@@77 $generated@@568 $generated@@45 $generated@@567))
 :pattern ( ($generated@@77 $generated@@568 $generated@@45 $generated@@567))
)))
(assert (forall (($generated@@569 T@U) ($generated@@570 T@U) ) (!  (=> (and (= (type $generated@@569) ($generated@@79 $generated@@80 $generated@@81)) (= (type $generated@@570) $generated@@152)) ($generated@@77 $generated@@570 $generated@@48 $generated@@569))
 :pattern ( ($generated@@77 $generated@@570 $generated@@48 $generated@@569))
)))
(assert (forall (($generated@@571 T@U) ($generated@@572 T@U) ) (!  (=> (and (= (type $generated@@571) ($generated@@263 $generated@@152)) (= (type $generated@@572) $generated@@67)) (= ($generated@@139 $generated@@571 ($generated@@471 $generated@@572)) (forall (($generated@@573 Int) ) (!  (=> (and (<= 0 $generated@@573) (< $generated@@573 ($generated@@262 $generated@@571))) ($generated@@225 ($generated@@472 $generated@@571 $generated@@573) $generated@@572))
 :pattern ( ($generated@@472 $generated@@571 $generated@@573))
))))
 :pattern ( ($generated@@139 $generated@@571 ($generated@@471 $generated@@572)))
)))
(assert (forall (($generated@@575 T@U) ($generated@@576 Int) ) (!  (=> (= (type $generated@@575) ($generated@@263 $generated@@152)) (=> (and (<= 0 $generated@@576) (< $generated@@576 ($generated@@262 $generated@@575))) (< ($generated@@510 ($generated@@319 $generated@@143 ($generated@@472 $generated@@575 $generated@@576))) ($generated@@574 $generated@@575))))
 :pattern ( ($generated@@510 ($generated@@319 $generated@@143 ($generated@@472 $generated@@575 $generated@@576))))
)))
(assert (forall (($generated@@577 T@U) ($generated@@578 T@U) ($generated@@579 T@U) ) (!  (=> (and (and (and (= (type $generated@@577) ($generated@@282 $generated@@152 $generated@@152)) (= (type $generated@@578) $generated@@67)) (= (type $generated@@579) $generated@@67)) ($generated@@139 $generated@@577 ($generated@@389 $generated@@578 $generated@@579))) (and (and ($generated@@139 ($generated@@280 $generated@@577) ($generated@@234 $generated@@578)) ($generated@@139 ($generated@@329 $generated@@577) ($generated@@234 $generated@@579))) ($generated@@139 ($generated@@363 $generated@@577) ($generated@@234 ($generated@@142 $generated@@578 $generated@@579)))))
 :pattern ( ($generated@@139 $generated@@577 ($generated@@389 $generated@@578 $generated@@579)))
)))
(assert (forall (($generated@@580 T@U) ($generated@@581 T@U) ($generated@@582 T@U) ) (!  (=> (and (and (and (= (type $generated@@580) ($generated@@300 $generated@@152 $generated@@152)) (= (type $generated@@581) $generated@@67)) (= (type $generated@@582) $generated@@67)) ($generated@@139 $generated@@580 ($generated@@397 $generated@@581 $generated@@582))) (and (and ($generated@@139 ($generated@@298 $generated@@580) ($generated@@239 $generated@@581)) ($generated@@139 ($generated@@340 $generated@@580) ($generated@@239 $generated@@582))) ($generated@@139 ($generated@@371 $generated@@580) ($generated@@239 ($generated@@142 $generated@@581 $generated@@582)))))
 :pattern ( ($generated@@139 $generated@@580 ($generated@@397 $generated@@581 $generated@@582)))
)))
(assert (forall (($generated@@583 T@U) ) (!  (=> (= (type $generated@@583) $generated@@2) ($generated@@139 $generated@@583 $generated@@46))
 :pattern ( ($generated@@139 $generated@@583 $generated@@46))
)))
(assert (forall (($generated@@584 T@U) ) (!  (=> (= (type $generated@@584) $generated@@3) ($generated@@139 $generated@@584 $generated@@47))
 :pattern ( ($generated@@139 $generated@@584 $generated@@47))
)))
(assert (forall (($generated@@585 T@U) ) (!  (=> (= (type $generated@@585) $generated@@4) ($generated@@139 $generated@@585 $generated@@44))
 :pattern ( ($generated@@139 $generated@@585 $generated@@44))
)))
(assert (forall (($generated@@586 T@U) ) (!  (=> (= (type $generated@@586) $generated@@429) ($generated@@139 $generated@@586 $generated@@45))
 :pattern ( ($generated@@139 $generated@@586 $generated@@45))
)))
(assert (forall (($generated@@587 T@U) ) (!  (=> (= (type $generated@@587) $generated@@152) ($generated@@139 $generated@@587 $generated@@48))
 :pattern ( ($generated@@139 $generated@@587 $generated@@48))
)))
(push 1)
(declare-fun ControlFlow (Int Int) Int)
(declare-fun $generated@@588 () T@U)
(declare-fun $generated@@589 () T@U)
(declare-fun $generated@@590 () T@U)
(declare-fun $generated@@591 (T@U) Bool)
(declare-fun $generated@@592 () T@U)
(assert  (and (and (and (= (type $generated@@588) $generated@@80) (= (type $generated@@589) ($generated@@167 $generated@@80 $generated@@4))) (= (type $generated@@590) ($generated@@79 $generated@@80 $generated@@81))) (= (type $generated@@592) $generated@@80)))
(set-option :timeout 0)
(set-option :rlimit 0)
(assert (not
 (=> (= (ControlFlow 0 0) 5) (let (($generated@@593  (=> (and (and $generated@@351 (= $generated@@588 $generated@@352)) (and $generated@@351 (= (ControlFlow 0 3) (- 0 2)))) (not (= $generated@@352 $generated@@136)))))
(let (($generated@@594 true))
(let (($generated@@595  (=> (= $generated@@589 ($generated@@166 $generated@@136 $generated@@590 $generated@@60 false)) (and (=> (= (ControlFlow 0 4) 1) $generated@@594) (=> (= (ControlFlow 0 4) 3) $generated@@593)))))
(let (($generated@@596  (=> (and (and (and ($generated@@248 $generated@@590) ($generated@@591 $generated@@590)) ($generated@@139 $generated@@592 $generated@@135)) (and (= 2 $generated@@350) (= (ControlFlow 0 5) 4))) $generated@@595)))
$generated@@596)))))
))
(check-sat)
(pop 1)
; Valid
(get-info :rlimit)
(reset)
(set-option :rlimit 0)
; did a full reset
(reset)
(set-option :print-success false)
(set-info :smt-lib-version 2.6)
(set-option :auto_config false)
(set-option :type_check true)
(set-option :smt.case_split 3)
(set-option :smt.qi.eager_threshold 100)
(set-option :smt.delay_units true)
(set-option :smt.arith.solver 2)
(set-option :smt.mbqi false)
(set-option :model.compact false)
(set-option :model.v2 true)
(set-option :pp.bv_literals false)
; done setting options


(set-info :category "industrial")
(declare-sort |T@U| 0)
(declare-sort |T@T| 0)
(declare-fun real_pow (Real Real) Real)
(declare-fun UOrdering2 (|T@U| |T@U|) Bool)
(declare-fun UOrdering3 (|T@T| |T@U| |T@U|) Bool)
(declare-fun tickleBool (Bool) Bool)
(assert (and (tickleBool true) (tickleBool false)))
(declare-fun $generated (T@U) Int)
(declare-fun $generated@@0 (T@U) Bool)
(declare-fun $generated@@1 (T@T) Int)
(declare-fun $generated@@2 () T@T)
(declare-fun $generated@@3 () T@T)
(declare-fun $generated@@4 () T@T)
(declare-fun $generated@@5 () T@T)
(declare-fun $generated@@6 () T@T)
(declare-fun $generated@@7 () T@T)
(declare-fun $generated@@8 (Int) T@U)
(declare-fun type (T@U) T@T)
(declare-fun $generated@@9 (Real) T@U)
(declare-fun $generated@@10 (T@U) Real)
(declare-fun $generated@@11 (Bool) T@U)
(declare-fun $generated@@12 (RoundingMode) T@U)
(declare-fun $generated@@13 (T@U) RoundingMode)
(declare-fun $generated@@14 (String) T@U)
(declare-fun $generated@@15 (T@U) String)
(declare-fun $generated@@16 ((RegEx String)) T@U)
(declare-fun $generated@@17 (T@U) (RegEx String))
(declare-fun $generated@@44 (T@U T@U T@U) T@U)
(declare-fun $generated@@45 (T@U T@U T@U Bool) T@U)
(declare-fun $generated@@46 (T@T) T@T)
(declare-fun $generated@@47 () T@T)
(declare-fun $generated@@48 (T@T T@T) T@T)
(declare-fun $generated@@49 () T@T)
(declare-fun $generated@@50 (T@T) T@T)
(declare-fun $generated@@51 (T@U T@U) T@U)
(declare-fun $generated@@52 (T@U T@U) T@U)
(declare-fun $generated@@53 (T@T) T@T)
(declare-fun $generated@@54 (T@T) T@T)
(declare-fun $generated@@55 (T@U T@U T@U) T@U)
(declare-fun $generated@@56 (T@U T@U T@U) T@U)
(declare-fun $generated@@57 (T@T T@T) T@T)
(declare-fun $generated@@58 (T@T) T@T)
(declare-fun $generated@@59 (T@T) T@T)
(declare-fun $generated@@60 (T@U T@U T@U T@U) T@U)
(declare-fun $generated@@157 (T@U) T@U)
(declare-fun $generated@@161 (T@U) T@U)
(declare-fun $generated@@162 (T@T T@U) T@U)
(declare-fun $generated@@163 () T@T)
(assert  (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (= ($generated@@1 $generated@@2) 0) (= ($generated@@1 $generated@@3) 1)) (= ($generated@@1 $generated@@4) 2)) (= ($generated@@1 $generated@@5) 3)) (= ($generated@@1 $generated@@6) 4)) (= ($generated@@1 $generated@@7) 5)) (forall (($generated@@18 Int) ) (! (= ($generated ($generated@@8 $generated@@18)) $generated@@18)
 :pattern ( ($generated@@8 $generated@@18))
))) (forall (($generated@@19 T@U) ) (!  (=> (= (type $generated@@19) $generated@@2) (= ($generated@@8 ($generated $generated@@19)) $generated@@19))
 :pattern ( ($generated $generated@@19))
))) (forall (($generated@@20 Int) ) (! (= (type ($generated@@8 $generated@@20)) $generated@@2)
 :pattern ( ($generated@@8 $generated@@20))
))) (forall (($generated@@21 Real) ) (! (= ($generated@@10 ($generated@@9 $generated@@21)) $generated@@21)
 :pattern ( ($generated@@9 $generated@@21))
))) (forall (($generated@@22 T@U) ) (!  (=> (= (type $generated@@22) $generated@@3) (= ($generated@@9 ($generated@@10 $generated@@22)) $generated@@22))
 :pattern ( ($generated@@10 $generated@@22))
))) (forall (($generated@@23 Real) ) (! (= (type ($generated@@9 $generated@@23)) $generated@@3)
 :pattern ( ($generated@@9 $generated@@23))
))) (forall (($generated@@24 Bool) ) (! (= ($generated@@0 ($generated@@11 $generated@@24)) $generated@@24)
 :pattern ( ($generated@@11 $generated@@24))
))) (forall (($generated@@25 T@U) ) (!  (=> (= (type $generated@@25) $generated@@4) (= ($generated@@11 ($generated@@0 $generated@@25)) $generated@@25))
 :pattern ( ($generated@@0 $generated@@25))
))) (forall (($generated@@26 Bool) ) (! (= (type ($generated@@11 $generated@@26)) $generated@@4)
 :pattern ( ($generated@@11 $generated@@26))
))) (forall (($generated@@27 RoundingMode) ) (! (= ($generated@@13 ($generated@@12 $generated@@27)) $generated@@27)
 :pattern ( ($generated@@12 $generated@@27))
))) (forall (($generated@@28 T@U) ) (!  (=> (= (type $generated@@28) $generated@@5) (= ($generated@@12 ($generated@@13 $generated@@28)) $generated@@28))
 :pattern ( ($generated@@13 $generated@@28))
))) (forall (($generated@@29 RoundingMode) ) (! (= (type ($generated@@12 $generated@@29)) $generated@@5)
 :pattern ( ($generated@@12 $generated@@29))
))) (forall (($generated@@30 String) ) (! (= ($generated@@15 ($generated@@14 $generated@@30)) $generated@@30)
 :pattern ( ($generated@@14 $generated@@30))
))) (forall (($generated@@31 T@U) ) (!  (=> (= (type $generated@@31) $generated@@6) (= ($generated@@14 ($generated@@15 $generated@@31)) $generated@@31))
 :pattern ( ($generated@@15 $generated@@31))
))) (forall (($generated@@32 String) ) (! (= (type ($generated@@14 $generated@@32)) $generated@@6)
 :pattern ( ($generated@@14 $generated@@32))
))) (forall (($generated@@33 (RegEx String)) ) (! (= ($generated@@17 ($generated@@16 $generated@@33)) $generated@@33)
 :pattern ( ($generated@@16 $generated@@33))
))) (forall (($generated@@34 T@U) ) (!  (=> (= (type $generated@@34) $generated@@7) (= ($generated@@16 ($generated@@17 $generated@@34)) $generated@@34))
 :pattern ( ($generated@@17 $generated@@34))
))) (forall (($generated@@35 (RegEx String)) ) (! (= (type ($generated@@16 $generated@@35)) $generated@@7)
 :pattern ( ($generated@@16 $generated@@35))
))))
(assert (forall (($generated@@36 T@U) ) (! (UOrdering2 $generated@@36 $generated@@36)
 :no-pattern ($generated $generated@@36)
 :no-pattern ($generated@@0 $generated@@36)
)))
(assert (forall (($generated@@37 T@U) ($generated@@38 T@U) ($generated@@39 T@U) ) (! (let (($generated@@40 (type $generated@@37)))
 (=> (and (and (= (type $generated@@38) $generated@@40) (= (type $generated@@39) $generated@@40)) (and (UOrdering2 $generated@@37 $generated@@38) (UOrdering2 $generated@@38 $generated@@39))) (UOrdering2 $generated@@37 $generated@@39)))
 :pattern ( (UOrdering2 $generated@@37 $generated@@38) (UOrdering2 $generated@@38 $generated@@39))
)))
(assert (forall (($generated@@41 T@U) ($generated@@42 T@U) ) (! (let (($generated@@43 (type $generated@@41)))
 (=> (= (type $generated@@42) $generated@@43) (=> (and (UOrdering2 $generated@@41 $generated@@42) (UOrdering2 $generated@@42 $generated@@41)) (= $generated@@41 $generated@@42))))
 :pattern ( (UOrdering2 $generated@@41 $generated@@42) (UOrdering2 $generated@@42 $generated@@41))
)))
(assert  (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (forall (($generated@@61 T@T) ($generated@@62 T@T) ) (= ($generated@@1 ($generated@@48 $generated@@61 $generated@@62)) 6)) (forall (($generated@@63 T@T) ($generated@@64 T@T) ) (! (= ($generated@@53 ($generated@@48 $generated@@63 $generated@@64)) $generated@@63)
 :pattern ( ($generated@@48 $generated@@63 $generated@@64))
))) (forall (($generated@@65 T@T) ($generated@@66 T@T) ) (! (= ($generated@@54 ($generated@@48 $generated@@65 $generated@@66)) $generated@@66)
 :pattern ( ($generated@@48 $generated@@65 $generated@@66))
))) (forall (($generated@@67 T@U) ($generated@@68 T@U) ) (! (let (($generated@@69 ($generated@@54 (type $generated@@67))))
(= (type ($generated@@52 $generated@@67 $generated@@68)) $generated@@69))
 :pattern ( ($generated@@52 $generated@@67 $generated@@68))
))) (forall (($generated@@70 T@U) ($generated@@71 T@U) ($generated@@72 T@U) ) (! (let (($generated@@73 (type $generated@@72)))
(let (($generated@@74 (type $generated@@71)))
(= (type ($generated@@55 $generated@@70 $generated@@71 $generated@@72)) ($generated@@48 $generated@@74 $generated@@73))))
 :pattern ( ($generated@@55 $generated@@70 $generated@@71 $generated@@72))
))) (forall (($generated@@75 T@U) ($generated@@76 T@U) ($generated@@77 T@U) ) (! (let (($generated@@78 ($generated@@54 (type $generated@@75))))
 (=> (= (type $generated@@77) $generated@@78) (= ($generated@@52 ($generated@@55 $generated@@75 $generated@@76 $generated@@77) $generated@@76) $generated@@77)))
 :weight 0
))) (and (forall (($generated@@79 T@U) ($generated@@80 T@U) ($generated@@81 T@U) ($generated@@82 T@U) ) (!  (or (= $generated@@81 $generated@@82) (= ($generated@@52 ($generated@@55 $generated@@80 $generated@@81 $generated@@79) $generated@@82) ($generated@@52 $generated@@80 $generated@@82)))
 :weight 0
)) (forall (($generated@@83 T@U) ($generated@@84 T@U) ($generated@@85 T@U) ($generated@@86 T@U) ) (!  (or true (= ($generated@@52 ($generated@@55 $generated@@84 $generated@@85 $generated@@83) $generated@@86) ($generated@@52 $generated@@84 $generated@@86)))
 :weight 0
)))) (forall (($generated@@87 T@T) ) (= ($generated@@1 ($generated@@50 $generated@@87)) 7))) (forall (($generated@@88 T@T) ) (! (= ($generated@@46 ($generated@@50 $generated@@88)) $generated@@88)
 :pattern ( ($generated@@50 $generated@@88))
))) (forall (($generated@@89 T@U) ($generated@@90 T@U) ) (! (let (($generated@@91 ($generated@@46 (type $generated@@90))))
(= (type ($generated@@51 $generated@@89 $generated@@90)) $generated@@91))
 :pattern ( ($generated@@51 $generated@@89 $generated@@90))
))) (= ($generated@@1 $generated@@49) 8)) (forall (($generated@@92 T@U) ($generated@@93 T@U) ($generated@@94 T@U) ) (! (= (type ($generated@@56 $generated@@92 $generated@@93 $generated@@94)) $generated@@49)
 :pattern ( ($generated@@56 $generated@@92 $generated@@93 $generated@@94))
))) (forall (($generated@@95 T@U) ($generated@@96 T@U) ($generated@@97 T@U) ) (! (let (($generated@@98 ($generated@@46 (type $generated@@96))))
 (=> (= (type $generated@@97) $generated@@98) (= ($generated@@51 ($generated@@56 $generated@@95 $generated@@96 $generated@@97) $generated@@96) $generated@@97)))
 :weight 0
))) (and (forall (($generated@@99 T@U) ($generated@@100 T@U) ($generated@@101 T@U) ($generated@@102 T@U) ) (!  (or (= $generated@@101 $generated@@102) (= ($generated@@51 ($generated@@56 $generated@@100 $generated@@101 $generated@@99) $generated@@102) ($generated@@51 $generated@@100 $generated@@102)))
 :weight 0
)) (forall (($generated@@103 T@U) ($generated@@104 T@U) ($generated@@105 T@U) ($generated@@106 T@U) ) (!  (or true (= ($generated@@51 ($generated@@56 $generated@@104 $generated@@105 $generated@@103) $generated@@106) ($generated@@51 $generated@@104 $generated@@106)))
 :weight 0
)))) (= ($generated@@1 $generated@@47) 9)) (forall (($generated@@107 T@T) ($generated@@108 T@T) ) (= ($generated@@1 ($generated@@57 $generated@@107 $generated@@108)) 10))) (forall (($generated@@109 T@T) ($generated@@110 T@T) ) (! (= ($generated@@58 ($generated@@57 $generated@@109 $generated@@110)) $generated@@109)
 :pattern ( ($generated@@57 $generated@@109 $generated@@110))
))) (forall (($generated@@111 T@T) ($generated@@112 T@T) ) (! (= ($generated@@59 ($generated@@57 $generated@@111 $generated@@112)) $generated@@112)
 :pattern ( ($generated@@57 $generated@@111 $generated@@112))
))) (forall (($generated@@113 T@U) ($generated@@114 T@U) ($generated@@115 T@U) ) (! (let (($generated@@116 ($generated@@59 (type $generated@@113))))
(= (type ($generated@@44 $generated@@113 $generated@@114 $generated@@115)) $generated@@116))
 :pattern ( ($generated@@44 $generated@@113 $generated@@114 $generated@@115))
))) (forall (($generated@@117 T@U) ($generated@@118 T@U) ($generated@@119 T@U) ($generated@@120 T@U) ) (! (let (($generated@@121 (type $generated@@120)))
(let (($generated@@122 (type $generated@@118)))
(= (type ($generated@@60 $generated@@117 $generated@@118 $generated@@119 $generated@@120)) ($generated@@57 $generated@@122 $generated@@121))))
 :pattern ( ($generated@@60 $generated@@117 $generated@@118 $generated@@119 $generated@@120))
))) (forall (($generated@@123 T@U) ($generated@@124 T@U) ($generated@@125 T@U) ($generated@@126 T@U) ) (! (let (($generated@@127 ($generated@@59 (type $generated@@123))))
 (=> (= (type $generated@@126) $generated@@127) (= ($generated@@44 ($generated@@60 $generated@@123 $generated@@124 $generated@@125 $generated@@126) $generated@@124 $generated@@125) $generated@@126)))
 :weight 0
))) (and (and (forall (($generated@@128 T@U) ($generated@@129 T@U) ($generated@@130 T@U) ($generated@@131 T@U) ($generated@@132 T@U) ($generated@@133 T@U) ) (!  (or (= $generated@@130 $generated@@132) (= ($generated@@44 ($generated@@60 $generated@@129 $generated@@130 $generated@@131 $generated@@128) $generated@@132 $generated@@133) ($generated@@44 $generated@@129 $generated@@132 $generated@@133)))
 :weight 0
)) (forall (($generated@@134 T@U) ($generated@@135 T@U) ($generated@@136 T@U) ($generated@@137 T@U) ($generated@@138 T@U) ($generated@@139 T@U) ) (!  (or (= $generated@@137 $generated@@139) (= ($generated@@44 ($generated@@60 $generated@@135 $generated@@136 $generated@@137 $generated@@134) $generated@@138 $generated@@139) ($generated@@44 $generated@@135 $generated@@138 $generated@@139)))
 :weight 0
))) (forall (($generated@@140 T@U) ($generated@@141 T@U) ($generated@@142 T@U) ($generated@@143 T@U) ($generated@@144 T@U) ($generated@@145 T@U) ) (!  (or true (= ($generated@@44 ($generated@@60 $generated@@141 $generated@@142 $generated@@143 $generated@@140) $generated@@144 $generated@@145) ($generated@@44 $generated@@141 $generated@@144 $generated@@145)))
 :weight 0
)))) (forall (($generated@@146 T@U) ($generated@@147 T@U) ($generated@@148 T@U) ($generated@@149 Bool) ) (! (= (type ($generated@@45 $generated@@146 $generated@@147 $generated@@148 $generated@@149)) ($generated@@57 $generated@@47 $generated@@4))
 :pattern ( ($generated@@45 $generated@@146 $generated@@147 $generated@@148 $generated@@149))
))))
(assert (forall (($generated@@150 T@U) ($generated@@151 T@U) ($generated@@152 T@U) ($generated@@153 Bool) ($generated@@154 T@U) ($generated@@155 T@U) ) (! (let (($generated@@156 ($generated@@46 (type $generated@@155))))
 (=> (and (and (and (and (= (type $generated@@150) $generated@@47) (= (type $generated@@151) ($generated@@48 $generated@@47 $generated@@49))) (= (type $generated@@152) ($generated@@50 $generated@@4))) (= (type $generated@@154) $generated@@47)) (= (type $generated@@155) ($generated@@50 $generated@@156))) (= ($generated@@0 ($generated@@44 ($generated@@45 $generated@@150 $generated@@151 $generated@@152 $generated@@153) $generated@@154 $generated@@155))  (=> (and (not (= $generated@@154 $generated@@150)) ($generated@@0 ($generated@@51 ($generated@@52 $generated@@151 $generated@@154) $generated@@152))) $generated@@153))))
 :pattern ( ($generated@@44 ($generated@@45 $generated@@150 $generated@@151 $generated@@152 $generated@@153) $generated@@154 $generated@@155))
)))
(assert (forall (($generated@@158 T@U) ) (! (let (($generated@@159 (type $generated@@158)))
(= (type ($generated@@157 $generated@@158)) $generated@@159))
 :pattern ( ($generated@@157 $generated@@158))
)))
(assert (forall (($generated@@160 T@U) ) (! (= ($generated@@157 $generated@@160) $generated@@160)
 :pattern ( ($generated@@157 $generated@@160))
)))
(assert  (and (and (= ($generated@@1 $generated@@163) 11) (forall (($generated@@164 T@U) ) (! (= (type ($generated@@161 $generated@@164)) $generated@@163)
 :pattern ( ($generated@@161 $generated@@164))
))) (forall (($generated@@165 T@T) ($generated@@166 T@U) ) (! (= (type ($generated@@162 $generated@@165 $generated@@166)) $generated@@165)
 :pattern ( ($generated@@162 $generated@@165 $generated@@166))
))))
(assert (forall (($generated@@167 T@U) ) (! (let (($generated@@168 (type $generated@@167)))
(= ($generated@@162 $generated@@168 ($generated@@161 $generated@@167)) $generated@@167))
 :pattern ( ($generated@@161 $generated@@167))
)))
(assert (forall (($generated@@169 T@U) ) (! (= ($generated@@161 ($generated@@157 $generated@@169)) ($generated@@157 ($generated@@161 $generated@@169)))
 :pattern ( ($generated@@161 ($generated@@157 $generated@@169)))
)))
(push 1)
(declare-fun ControlFlow (Int Int) Int)
(declare-fun $generated@@170 () T@U)
(declare-fun $generated@@171 () T@U)
(declare-fun $generated@@172 () T@U)
(declare-fun $generated@@173 () T@U)
(declare-fun $generated@@174 (T@U) Bool)
(declare-fun $generated@@175 (T@U) Bool)
(declare-fun $generated@@176 () Int)
(assert  (and (and (and (= (type $generated@@170) ($generated@@57 $generated@@47 $generated@@4)) (= (type $generated@@171) $generated@@47)) (= (type $generated@@172) ($generated@@48 $generated@@47 $generated@@49))) (= (type $generated@@173) ($generated@@50 $generated@@4))))
(set-option :timeout 0)
(set-option :rlimit 0)
(assert (not
 (=> (= (ControlFlow 0 0) 5) (let (($generated@@177  (=> (= (ControlFlow 0 3) (- 0 2)) ($generated@@0 ($generated@@157 ($generated@@11 (< (- 0 8) 0)))))))
(let (($generated@@178 true))
(let (($generated@@179  (=> (= $generated@@170 ($generated@@45 $generated@@171 $generated@@172 $generated@@173 false)) (and (=> (= (ControlFlow 0 4) 1) $generated@@178) (=> (= (ControlFlow 0 4) 3) $generated@@177)))))
(let (($generated@@180  (=> (and (and ($generated@@174 $generated@@172) ($generated@@175 $generated@@172)) (and (= 0 $generated@@176) (= (ControlFlow 0 5) 4))) $generated@@179)))
$generated@@180)))))
))
(check-sat)
(pop 1)
; Valid
(get-info :rlimit)
(reset)
(set-option :rlimit 0)
; did a full reset
(reset)
(set-option :print-success false)
(set-info :smt-lib-version 2.6)
(set-option :auto_config false)
(set-option :type_check true)
(set-option :smt.case_split 3)
(set-option :smt.qi.eager_threshold 100)
(set-option :smt.delay_units true)
(set-option :smt.arith.solver 2)
(set-option :smt.mbqi false)
(set-option :model.compact false)
(set-option :model.v2 true)
(set-option :pp.bv_literals false)
; done setting options


(set-info :category "industrial")
(declare-sort |T@U| 0)
(declare-sort |T@T| 0)
(declare-fun real_pow (Real Real) Real)
(declare-fun UOrdering2 (|T@U| |T@U|) Bool)
(declare-fun UOrdering3 (|T@T| |T@U| |T@U|) Bool)
(declare-fun tickleBool (Bool) Bool)
(assert (and (tickleBool true) (tickleBool false)))
(declare-fun $generated (T@U) Int)
(declare-fun $generated@@0 (T@U) Bool)
(declare-fun $generated@@1 (T@T) Int)
(declare-fun $generated@@2 () T@T)
(declare-fun $generated@@3 () T@T)
(declare-fun $generated@@4 () T@T)
(declare-fun $generated@@5 () T@T)
(declare-fun $generated@@6 () T@T)
(declare-fun $generated@@7 () T@T)
(declare-fun $generated@@8 (Int) T@U)
(declare-fun type (T@U) T@T)
(declare-fun $generated@@9 (Real) T@U)
(declare-fun $generated@@10 (T@U) Real)
(declare-fun $generated@@11 (Bool) T@U)
(declare-fun $generated@@12 (RoundingMode) T@U)
(declare-fun $generated@@13 (T@U) RoundingMode)
(declare-fun $generated@@14 (String) T@U)
(declare-fun $generated@@15 (T@U) String)
(declare-fun $generated@@16 ((RegEx String)) T@U)
(declare-fun $generated@@17 (T@U) (RegEx String))
(declare-fun $generated@@44 () T@U)
(declare-fun $generated@@45 () T@U)
(declare-fun $generated@@46 () T@U)
(declare-fun $generated@@47 () T@U)
(declare-fun $generated@@48 () T@U)
(declare-fun $generated@@49 () T@U)
(declare-fun $generated@@50 () T@U)
(declare-fun $generated@@51 () T@U)
(declare-fun $generated@@52 () T@U)
(declare-fun $generated@@53 () T@U)
(declare-fun $generated@@54 () T@U)
(declare-fun $generated@@55 () T@U)
(declare-fun $generated@@56 () T@U)
(declare-fun $generated@@57 () T@U)
(declare-fun $generated@@58 () T@U)
(declare-fun $generated@@59 () T@U)
(declare-fun $generated@@60 () T@U)
(declare-fun $generated@@61 () T@U)
(declare-fun $generated@@62 () T@U)
(declare-fun $generated@@63 () T@U)
(declare-fun $generated@@64 () T@U)
(declare-fun $generated@@65 () T@U)
(declare-fun $generated@@66 () T@U)
(declare-fun $generated@@67 () T@U)
(declare-fun $generated@@68 () T@U)
(declare-fun $generated@@69 () T@U)
(declare-fun $generated@@70 () T@T)
(declare-fun $generated@@71 () T@T)
(declare-fun $generated@@72 (T@T) T@T)
(declare-fun $generated@@73 (T@T) T@T)
(declare-fun $generated@@74 () T@T)
(declare-fun $generated@@75 () T@T)
(declare-fun $generated@@78 (T@U) T@U)
(declare-fun $generated@@80 (T@U T@U T@U) Bool)
(declare-fun $generated@@81 (Int) T@U)
(declare-fun $generated@@82 (T@T T@T) T@T)
(declare-fun $generated@@83 () T@T)
(declare-fun $generated@@84 () T@T)
(declare-fun $generated@@85 (T@T) T@T)
(declare-fun $generated@@86 (T@T) T@T)
(declare-fun $generated@@87 (T@U T@U) T@U)
(declare-fun $generated@@88 (T@U T@U T@U) T@U)
(declare-fun $generated@@89 (T@U T@U) T@U)
(declare-fun $generated@@90 (T@U T@U T@U) T@U)
(declare-fun $generated@@138 () T@U)
(declare-fun $generated@@141 (T@U T@U) Bool)
(declare-fun $generated@@143 (T@U) Bool)
(declare-fun $generated@@144 (T@U T@U) T@U)
(declare-fun $generated@@145 () T@T)
(declare-fun $generated@@151 (T@U T@U) Bool)
(declare-fun $generated@@152 (T@U) T@U)
(declare-fun $generated@@153 (T@U) T@U)
(declare-fun $generated@@154 () T@T)
(declare-fun $generated@@159 (T@U) T@U)
(declare-fun $generated@@160 () T@U)
(declare-fun $generated@@162 (T@U) T@U)
(declare-fun $generated@@163 (T@U) Bool)
(declare-fun $generated@@167 (T@U T@U T@U) T@U)
(declare-fun $generated@@168 (T@U T@U T@U Bool) T@U)
(declare-fun $generated@@169 (T@T T@T) T@T)
(declare-fun $generated@@170 (T@T) T@T)
(declare-fun $generated@@171 (T@T) T@T)
(declare-fun $generated@@172 (T@U T@U T@U T@U) T@U)
(declare-fun $generated@@223 (T@U) T@U)
(declare-fun $generated@@224 (T@U) Bool)
(declare-fun $generated@@228 (T@U T@U) T@U)
(declare-fun $generated@@229 (T@U T@U) Bool)
(declare-fun $generated@@239 (T@U T@U) Bool)
(declare-fun $generated@@242 (T@U) Bool)
(declare-fun $generated@@243 (T@U) T@U)
(declare-fun $generated@@244 (T@U) T@U)
(declare-fun $generated@@249 (T@U) T@U)
(declare-fun $generated@@254 (T@U) T@U)
(declare-fun $generated@@259 (Int) Int)
(declare-fun $generated@@261 (T@U) T@U)
(declare-fun $generated@@265 (T@U) Bool)
(declare-fun $generated@@268 (T@U T@U) T@U)
(declare-fun $generated@@274 (T@U T@U T@U) Bool)
(declare-fun $generated@@289 (T@T) T@U)
(declare-fun $generated@@290 (T@U) Int)
(declare-fun $generated@@291 (T@T) T@T)
(declare-fun $generated@@292 (T@T) T@T)
(declare-fun $generated@@299 (T@U) T@U)
(declare-fun $generated@@304 (T@U) Int)
(declare-fun $generated@@305 (T@T) T@U)
(declare-fun $generated@@310 (T@U) T@U)
(declare-fun $generated@@313 (T@U) T@U)
(declare-fun $generated@@314 (T@T T@T) T@U)
(declare-fun $generated@@315 (T@T T@T) T@T)
(declare-fun $generated@@316 (T@T) T@T)
(declare-fun $generated@@317 (T@T) T@T)
(declare-fun $generated@@331 (T@U) T@U)
(declare-fun $generated@@332 (T@T T@T) T@U)
(declare-fun $generated@@333 (T@T T@T) T@T)
(declare-fun $generated@@334 (T@T) T@T)
(declare-fun $generated@@335 (T@T) T@T)
(declare-fun $generated@@352 (T@T T@U) T@U)
(declare-fun $generated@@360 (T@U) T@U)
(declare-fun $generated@@371 (T@U) T@U)
(declare-fun $generated@@381 (T@U) Bool)
(declare-fun $generated@@393 (T@U) T@U)
(declare-fun $generated@@394 (T@U) T@U)
(declare-fun $generated@@401 (T@U) T@U)
(declare-fun $generated@@402 (T@U) T@U)
(declare-fun $generated@@419 (T@U T@U) T@U)
(declare-fun $generated@@427 (T@U T@U) T@U)
(declare-fun $generated@@437 (T@T) T@U)
(declare-fun $generated@@461 () T@T)
(declare-fun $generated@@469 (T@U) T@U)
(declare-fun $generated@@473 (T@U) T@U)
(declare-fun $generated@@479 (T@U) T@U)
(declare-fun $generated@@483 (T@U) T@U)
(declare-fun $generated@@491 (T@U) T@U)
(declare-fun $generated@@495 (T@U) T@U)
(declare-fun $generated@@509 (T@U) T@U)
(declare-fun $generated@@510 (T@U Int) T@U)
(declare-fun $generated@@519 (T@U) Int)
(declare-fun $generated@@521 (T@U) T@U)
(declare-fun $generated@@525 (T@U) T@U)
(declare-fun $generated@@529 (T@U) T@U)
(declare-fun $generated@@533 (T@U) T@U)
(declare-fun $generated@@537 (T@U) T@U)
(declare-fun $generated@@550 (T@U) Int)
(declare-fun $generated@@551 (T@U) Int)
(declare-fun $generated@@632 (T@U) Int)
(assert  (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (= ($generated@@1 $generated@@2) 0) (= ($generated@@1 $generated@@3) 1)) (= ($generated@@1 $generated@@4) 2)) (= ($generated@@1 $generated@@5) 3)) (= ($generated@@1 $generated@@6) 4)) (= ($generated@@1 $generated@@7) 5)) (forall (($generated@@18 Int) ) (! (= ($generated ($generated@@8 $generated@@18)) $generated@@18)
 :pattern ( ($generated@@8 $generated@@18))
))) (forall (($generated@@19 T@U) ) (!  (=> (= (type $generated@@19) $generated@@2) (= ($generated@@8 ($generated $generated@@19)) $generated@@19))
 :pattern ( ($generated $generated@@19))
))) (forall (($generated@@20 Int) ) (! (= (type ($generated@@8 $generated@@20)) $generated@@2)
 :pattern ( ($generated@@8 $generated@@20))
))) (forall (($generated@@21 Real) ) (! (= ($generated@@10 ($generated@@9 $generated@@21)) $generated@@21)
 :pattern ( ($generated@@9 $generated@@21))
))) (forall (($generated@@22 T@U) ) (!  (=> (= (type $generated@@22) $generated@@3) (= ($generated@@9 ($generated@@10 $generated@@22)) $generated@@22))
 :pattern ( ($generated@@10 $generated@@22))
))) (forall (($generated@@23 Real) ) (! (= (type ($generated@@9 $generated@@23)) $generated@@3)
 :pattern ( ($generated@@9 $generated@@23))
))) (forall (($generated@@24 Bool) ) (! (= ($generated@@0 ($generated@@11 $generated@@24)) $generated@@24)
 :pattern ( ($generated@@11 $generated@@24))
))) (forall (($generated@@25 T@U) ) (!  (=> (= (type $generated@@25) $generated@@4) (= ($generated@@11 ($generated@@0 $generated@@25)) $generated@@25))
 :pattern ( ($generated@@0 $generated@@25))
))) (forall (($generated@@26 Bool) ) (! (= (type ($generated@@11 $generated@@26)) $generated@@4)
 :pattern ( ($generated@@11 $generated@@26))
))) (forall (($generated@@27 RoundingMode) ) (! (= ($generated@@13 ($generated@@12 $generated@@27)) $generated@@27)
 :pattern ( ($generated@@12 $generated@@27))
))) (forall (($generated@@28 T@U) ) (!  (=> (= (type $generated@@28) $generated@@5) (= ($generated@@12 ($generated@@13 $generated@@28)) $generated@@28))
 :pattern ( ($generated@@13 $generated@@28))
))) (forall (($generated@@29 RoundingMode) ) (! (= (type ($generated@@12 $generated@@29)) $generated@@5)
 :pattern ( ($generated@@12 $generated@@29))
))) (forall (($generated@@30 String) ) (! (= ($generated@@15 ($generated@@14 $generated@@30)) $generated@@30)
 :pattern ( ($generated@@14 $generated@@30))
))) (forall (($generated@@31 T@U) ) (!  (=> (= (type $generated@@31) $generated@@6) (= ($generated@@14 ($generated@@15 $generated@@31)) $generated@@31))
 :pattern ( ($generated@@15 $generated@@31))
))) (forall (($generated@@32 String) ) (! (= (type ($generated@@14 $generated@@32)) $generated@@6)
 :pattern ( ($generated@@14 $generated@@32))
))) (forall (($generated@@33 (RegEx String)) ) (! (= ($generated@@17 ($generated@@16 $generated@@33)) $generated@@33)
 :pattern ( ($generated@@16 $generated@@33))
))) (forall (($generated@@34 T@U) ) (!  (=> (= (type $generated@@34) $generated@@7) (= ($generated@@16 ($generated@@17 $generated@@34)) $generated@@34))
 :pattern ( ($generated@@17 $generated@@34))
))) (forall (($generated@@35 (RegEx String)) ) (! (= (type ($generated@@16 $generated@@35)) $generated@@7)
 :pattern ( ($generated@@16 $generated@@35))
))))
(assert (forall (($generated@@36 T@U) ) (! (UOrdering2 $generated@@36 $generated@@36)
 :no-pattern ($generated $generated@@36)
 :no-pattern ($generated@@0 $generated@@36)
)))
(assert (forall (($generated@@37 T@U) ($generated@@38 T@U) ($generated@@39 T@U) ) (! (let (($generated@@40 (type $generated@@37)))
 (=> (and (and (= (type $generated@@38) $generated@@40) (= (type $generated@@39) $generated@@40)) (and (UOrdering2 $generated@@37 $generated@@38) (UOrdering2 $generated@@38 $generated@@39))) (UOrdering2 $generated@@37 $generated@@39)))
 :pattern ( (UOrdering2 $generated@@37 $generated@@38) (UOrdering2 $generated@@38 $generated@@39))
)))
(assert (forall (($generated@@41 T@U) ($generated@@42 T@U) ) (! (let (($generated@@43 (type $generated@@41)))
 (=> (= (type $generated@@42) $generated@@43) (=> (and (UOrdering2 $generated@@41 $generated@@42) (UOrdering2 $generated@@42 $generated@@41)) (= $generated@@41 $generated@@42))))
 :pattern ( (UOrdering2 $generated@@41 $generated@@42) (UOrdering2 $generated@@42 $generated@@41))
)))
(assert  (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (= ($generated@@1 $generated@@70) 6) (= (type $generated@@44) $generated@@70)) (= (type $generated@@45) $generated@@70)) (= (type $generated@@46) $generated@@70)) (= (type $generated@@47) $generated@@70)) (= (type $generated@@48) $generated@@70)) (= ($generated@@1 $generated@@71) 7)) (= (type $generated@@49) $generated@@71)) (= (type $generated@@50) $generated@@71)) (= (type $generated@@51) $generated@@71)) (= (type $generated@@52) $generated@@71)) (= (type $generated@@53) $generated@@71)) (= (type $generated@@54) $generated@@71)) (= (type $generated@@55) $generated@@71)) (= (type $generated@@56) $generated@@71)) (= (type $generated@@57) $generated@@71)) (= (type $generated@@58) $generated@@71)) (= (type $generated@@59) $generated@@71)) (forall (($generated@@76 T@T) ) (= ($generated@@1 ($generated@@72 $generated@@76)) 8))) (forall (($generated@@77 T@T) ) (! (= ($generated@@73 ($generated@@72 $generated@@77)) $generated@@77)
 :pattern ( ($generated@@72 $generated@@77))
))) (= (type $generated@@60) ($generated@@72 $generated@@4))) (= (type $generated@@61) $generated@@71)) (= ($generated@@1 $generated@@74) 9)) (= (type $generated@@62) $generated@@74)) (= (type $generated@@63) $generated@@71)) (= (type $generated@@64) $generated@@74)) (= (type $generated@@65) $generated@@71)) (= (type $generated@@66) $generated@@74)) (= ($generated@@1 $generated@@75) 10)) (= (type $generated@@67) $generated@@75)) (= (type $generated@@68) $generated@@75)) (= (type $generated@@69) $generated@@75)))
(assert (distinct $generated@@44 $generated@@45 $generated@@46 $generated@@47 $generated@@48 $generated@@49 $generated@@50 $generated@@51 $generated@@52 $generated@@53 $generated@@54 $generated@@55 $generated@@56 $generated@@57 $generated@@58 $generated@@59 $generated@@60 $generated@@61 $generated@@62 $generated@@63 $generated@@64 $generated@@65 $generated@@66 $generated@@67 $generated@@68 $generated@@69)
)
(assert (forall (($generated@@79 T@U) ) (! (= (type ($generated@@78 $generated@@79)) $generated@@71)
 :pattern ( ($generated@@78 $generated@@79))
)))
(assert (= ($generated@@78 $generated@@44) $generated@@49))
(assert (= ($generated@@78 $generated@@45) $generated@@50))
(assert (= ($generated@@78 $generated@@46) $generated@@51))
(assert (= ($generated@@78 $generated@@47) $generated@@52))
(assert (= ($generated@@78 $generated@@48) $generated@@53))
(assert  (and (and (and (and (and (and (and (and (and (and (and (and (and (forall (($generated@@91 T@T) ($generated@@92 T@T) ) (= ($generated@@1 ($generated@@82 $generated@@91 $generated@@92)) 11)) (forall (($generated@@93 T@T) ($generated@@94 T@T) ) (! (= ($generated@@85 ($generated@@82 $generated@@93 $generated@@94)) $generated@@93)
 :pattern ( ($generated@@82 $generated@@93 $generated@@94))
))) (forall (($generated@@95 T@T) ($generated@@96 T@T) ) (! (= ($generated@@86 ($generated@@82 $generated@@95 $generated@@96)) $generated@@96)
 :pattern ( ($generated@@82 $generated@@95 $generated@@96))
))) (forall (($generated@@97 T@U) ($generated@@98 T@U) ) (! (let (($generated@@99 ($generated@@86 (type $generated@@97))))
(= (type ($generated@@87 $generated@@97 $generated@@98)) $generated@@99))
 :pattern ( ($generated@@87 $generated@@97 $generated@@98))
))) (forall (($generated@@100 T@U) ($generated@@101 T@U) ($generated@@102 T@U) ) (! (let (($generated@@103 (type $generated@@102)))
(let (($generated@@104 (type $generated@@101)))
(= (type ($generated@@88 $generated@@100 $generated@@101 $generated@@102)) ($generated@@82 $generated@@104 $generated@@103))))
 :pattern ( ($generated@@88 $generated@@100 $generated@@101 $generated@@102))
))) (forall (($generated@@105 T@U) ($generated@@106 T@U) ($generated@@107 T@U) ) (! (let (($generated@@108 ($generated@@86 (type $generated@@105))))
 (=> (= (type $generated@@107) $generated@@108) (= ($generated@@87 ($generated@@88 $generated@@105 $generated@@106 $generated@@107) $generated@@106) $generated@@107)))
 :weight 0
))) (and (forall (($generated@@109 T@U) ($generated@@110 T@U) ($generated@@111 T@U) ($generated@@112 T@U) ) (!  (or (= $generated@@111 $generated@@112) (= ($generated@@87 ($generated@@88 $generated@@110 $generated@@111 $generated@@109) $generated@@112) ($generated@@87 $generated@@110 $generated@@112)))
 :weight 0
)) (forall (($generated@@113 T@U) ($generated@@114 T@U) ($generated@@115 T@U) ($generated@@116 T@U) ) (!  (or true (= ($generated@@87 ($generated@@88 $generated@@114 $generated@@115 $generated@@113) $generated@@116) ($generated@@87 $generated@@114 $generated@@116)))
 :weight 0
)))) (= ($generated@@1 $generated@@83) 12)) (forall (($generated@@117 T@U) ($generated@@118 T@U) ) (! (let (($generated@@119 ($generated@@73 (type $generated@@118))))
(= (type ($generated@@89 $generated@@117 $generated@@118)) $generated@@119))
 :pattern ( ($generated@@89 $generated@@117 $generated@@118))
))) (= ($generated@@1 $generated@@84) 13)) (forall (($generated@@120 T@U) ($generated@@121 T@U) ($generated@@122 T@U) ) (! (= (type ($generated@@90 $generated@@120 $generated@@121 $generated@@122)) $generated@@84)
 :pattern ( ($generated@@90 $generated@@120 $generated@@121 $generated@@122))
))) (forall (($generated@@123 T@U) ($generated@@124 T@U) ($generated@@125 T@U) ) (! (let (($generated@@126 ($generated@@73 (type $generated@@124))))
 (=> (= (type $generated@@125) $generated@@126) (= ($generated@@89 ($generated@@90 $generated@@123 $generated@@124 $generated@@125) $generated@@124) $generated@@125)))
 :weight 0
))) (and (forall (($generated@@127 T@U) ($generated@@128 T@U) ($generated@@129 T@U) ($generated@@130 T@U) ) (!  (or (= $generated@@129 $generated@@130) (= ($generated@@89 ($generated@@90 $generated@@128 $generated@@129 $generated@@127) $generated@@130) ($generated@@89 $generated@@128 $generated@@130)))
 :weight 0
)) (forall (($generated@@131 T@U) ($generated@@132 T@U) ($generated@@133 T@U) ($generated@@134 T@U) ) (!  (or true (= ($generated@@89 ($generated@@90 $generated@@132 $generated@@133 $generated@@131) $generated@@134) ($generated@@89 $generated@@132 $generated@@134)))
 :weight 0
)))) (forall (($generated@@135 Int) ) (! (= (type ($generated@@81 $generated@@135)) $generated@@70)
 :pattern ( ($generated@@81 $generated@@135))
))))
(assert (forall (($generated@@136 T@U) ($generated@@137 T@U) ) (!  (=> (and (= (type $generated@@136) $generated@@2) (= (type $generated@@137) ($generated@@82 $generated@@83 $generated@@84))) ($generated@@80 $generated@@136 ($generated@@81 0) $generated@@137))
 :pattern ( ($generated@@80 $generated@@136 ($generated@@81 0) $generated@@137))
)))
(assert (= (type $generated@@138) $generated@@70))
(assert (forall (($generated@@139 T@U) ($generated@@140 T@U) ) (!  (=> (and (= (type $generated@@139) $generated@@2) (= (type $generated@@140) ($generated@@82 $generated@@83 $generated@@84))) ($generated@@80 $generated@@139 $generated@@138 $generated@@140))
 :pattern ( ($generated@@80 $generated@@139 $generated@@138 $generated@@140))
)))
(assert (forall (($generated@@142 T@U) ) (!  (=> (= (type $generated@@142) $generated@@2) ($generated@@141 $generated@@142 ($generated@@81 0)))
 :pattern ( ($generated@@141 $generated@@142 ($generated@@81 0)))
)))
(assert  (and (= ($generated@@1 $generated@@145) 14) (forall (($generated@@146 T@U) ($generated@@147 T@U) ) (! (= (type ($generated@@144 $generated@@146 $generated@@147)) $generated@@70)
 :pattern ( ($generated@@144 $generated@@146 $generated@@147))
))))
(assert (forall (($generated@@148 T@U) ($generated@@149 T@U) ($generated@@150 T@U) ) (!  (=> (and (and (and (= (type $generated@@148) $generated@@70) (= (type $generated@@149) $generated@@70)) (= (type $generated@@150) $generated@@145)) ($generated@@141 $generated@@150 ($generated@@144 $generated@@148 $generated@@149))) ($generated@@143 $generated@@150))
 :pattern ( ($generated@@143 $generated@@150) ($generated@@141 $generated@@150 ($generated@@144 $generated@@148 $generated@@149)))
)))
(assert  (and (and (= ($generated@@1 $generated@@154) 15) (forall (($generated@@155 T@U) ) (! (= (type ($generated@@152 $generated@@155)) $generated@@154)
 :pattern ( ($generated@@152 $generated@@155))
))) (forall (($generated@@156 T@U) ) (! (= (type ($generated@@153 $generated@@156)) $generated@@154)
 :pattern ( ($generated@@153 $generated@@156))
))))
(assert (forall (($generated@@157 T@U) ($generated@@158 T@U) ) (!  (=> (and (and (= (type $generated@@157) $generated@@145) (= (type $generated@@158) $generated@@145)) true) (= ($generated@@151 $generated@@157 $generated@@158)  (and (= ($generated@@152 $generated@@157) ($generated@@152 $generated@@158)) (= ($generated@@153 $generated@@157) ($generated@@153 $generated@@158)))))
 :pattern ( ($generated@@151 $generated@@157 $generated@@158))
)))
(assert  (and (forall (($generated@@161 T@U) ) (! (= (type ($generated@@159 $generated@@161)) $generated@@74)
 :pattern ( ($generated@@159 $generated@@161))
)) (= (type $generated@@160) $generated@@145)))
(assert (= ($generated@@159 $generated@@160) $generated@@64))
(assert (forall (($generated@@164 T@U) ) (! (= (type ($generated@@162 $generated@@164)) $generated@@70)
 :pattern ( ($generated@@162 $generated@@164))
)))
(assert (forall (($generated@@165 T@U) ($generated@@166 T@U) ) (!  (=> (and (and (= (type $generated@@165) ($generated@@82 $generated@@154 $generated@@2)) (= (type $generated@@166) $generated@@70)) ($generated@@141 $generated@@165 ($generated@@162 $generated@@166))) ($generated@@163 $generated@@165))
 :pattern ( ($generated@@141 $generated@@165 ($generated@@162 $generated@@166)))
)))
(assert  (and (and (and (and (and (and (and (forall (($generated@@173 T@T) ($generated@@174 T@T) ) (= ($generated@@1 ($generated@@169 $generated@@173 $generated@@174)) 16)) (forall (($generated@@175 T@T) ($generated@@176 T@T) ) (! (= ($generated@@170 ($generated@@169 $generated@@175 $generated@@176)) $generated@@175)
 :pattern ( ($generated@@169 $generated@@175 $generated@@176))
))) (forall (($generated@@177 T@T) ($generated@@178 T@T) ) (! (= ($generated@@171 ($generated@@169 $generated@@177 $generated@@178)) $generated@@178)
 :pattern ( ($generated@@169 $generated@@177 $generated@@178))
))) (forall (($generated@@179 T@U) ($generated@@180 T@U) ($generated@@181 T@U) ) (! (let (($generated@@182 ($generated@@171 (type $generated@@179))))
(= (type ($generated@@167 $generated@@179 $generated@@180 $generated@@181)) $generated@@182))
 :pattern ( ($generated@@167 $generated@@179 $generated@@180 $generated@@181))
))) (forall (($generated@@183 T@U) ($generated@@184 T@U) ($generated@@185 T@U) ($generated@@186 T@U) ) (! (let (($generated@@187 (type $generated@@186)))
(let (($generated@@188 (type $generated@@184)))
(= (type ($generated@@172 $generated@@183 $generated@@184 $generated@@185 $generated@@186)) ($generated@@169 $generated@@188 $generated@@187))))
 :pattern ( ($generated@@172 $generated@@183 $generated@@184 $generated@@185 $generated@@186))
))) (forall (($generated@@189 T@U) ($generated@@190 T@U) ($generated@@191 T@U) ($generated@@192 T@U) ) (! (let (($generated@@193 ($generated@@171 (type $generated@@189))))
 (=> (= (type $generated@@192) $generated@@193) (= ($generated@@167 ($generated@@172 $generated@@189 $generated@@190 $generated@@191 $generated@@192) $generated@@190 $generated@@191) $generated@@192)))
 :weight 0
))) (and (and (forall (($generated@@194 T@U) ($generated@@195 T@U) ($generated@@196 T@U) ($generated@@197 T@U) ($generated@@198 T@U) ($generated@@199 T@U) ) (!  (or (= $generated@@196 $generated@@198) (= ($generated@@167 ($generated@@172 $generated@@195 $generated@@196 $generated@@197 $generated@@194) $generated@@198 $generated@@199) ($generated@@167 $generated@@195 $generated@@198 $generated@@199)))
 :weight 0
)) (forall (($generated@@200 T@U) ($generated@@201 T@U) ($generated@@202 T@U) ($generated@@203 T@U) ($generated@@204 T@U) ($generated@@205 T@U) ) (!  (or (= $generated@@203 $generated@@205) (= ($generated@@167 ($generated@@172 $generated@@201 $generated@@202 $generated@@203 $generated@@200) $generated@@204 $generated@@205) ($generated@@167 $generated@@201 $generated@@204 $generated@@205)))
 :weight 0
))) (forall (($generated@@206 T@U) ($generated@@207 T@U) ($generated@@208 T@U) ($generated@@209 T@U) ($generated@@210 T@U) ($generated@@211 T@U) ) (!  (or true (= ($generated@@167 ($generated@@172 $generated@@207 $generated@@208 $generated@@209 $generated@@206) $generated@@210 $generated@@211) ($generated@@167 $generated@@207 $generated@@210 $generated@@211)))
 :weight 0
)))) (forall (($generated@@212 T@U) ($generated@@213 T@U) ($generated@@214 T@U) ($generated@@215 Bool) ) (! (= (type ($generated@@168 $generated@@212 $generated@@213 $generated@@214 $generated@@215)) ($generated@@169 $generated@@83 $generated@@4))
 :pattern ( ($generated@@168 $generated@@212 $generated@@213 $generated@@214 $generated@@215))
))))
(assert (forall (($generated@@216 T@U) ($generated@@217 T@U) ($generated@@218 T@U) ($generated@@219 Bool) ($generated@@220 T@U) ($generated@@221 T@U) ) (! (let (($generated@@222 ($generated@@73 (type $generated@@221))))
 (=> (and (and (and (and (= (type $generated@@216) $generated@@83) (= (type $generated@@217) ($generated@@82 $generated@@83 $generated@@84))) (= (type $generated@@218) ($generated@@72 $generated@@4))) (= (type $generated@@220) $generated@@83)) (= (type $generated@@221) ($generated@@72 $generated@@222))) (= ($generated@@0 ($generated@@167 ($generated@@168 $generated@@216 $generated@@217 $generated@@218 $generated@@219) $generated@@220 $generated@@221))  (=> (and (not (= $generated@@220 $generated@@216)) ($generated@@0 ($generated@@89 ($generated@@87 $generated@@217 $generated@@220) $generated@@218))) $generated@@219))))
 :pattern ( ($generated@@167 ($generated@@168 $generated@@216 $generated@@217 $generated@@218 $generated@@219) $generated@@220 $generated@@221))
)))
(assert (forall (($generated@@225 T@U) ) (! (= (type ($generated@@223 $generated@@225)) $generated@@70)
 :pattern ( ($generated@@223 $generated@@225))
)))
(assert (forall (($generated@@226 T@U) ($generated@@227 T@U) ) (!  (=> (and (and (= (type $generated@@226) $generated@@70) (= (type $generated@@227) ($generated@@82 $generated@@83 $generated@@84))) ($generated@@224 $generated@@227)) ($generated@@80 $generated@@160 ($generated@@223 $generated@@226) $generated@@227))
 :pattern ( ($generated@@80 $generated@@160 ($generated@@223 $generated@@226) $generated@@227))
)))
(assert (forall (($generated@@230 T@U) ($generated@@231 T@U) ) (! (= (type ($generated@@228 $generated@@230 $generated@@231)) $generated@@145)
 :pattern ( ($generated@@228 $generated@@230 $generated@@231))
)))
(assert (forall (($generated@@232 T@U) ($generated@@233 T@U) ($generated@@234 T@U) ($generated@@235 T@U) ) (!  (=> (and (and (and (= (type $generated@@232) $generated@@70) (= (type $generated@@233) $generated@@70)) (= (type $generated@@234) $generated@@154)) (= (type $generated@@235) $generated@@154)) (= ($generated@@141 ($generated@@228 $generated@@234 $generated@@235) ($generated@@144 $generated@@232 $generated@@233))  (and ($generated@@229 $generated@@234 $generated@@232) ($generated@@229 $generated@@235 $generated@@233))))
 :pattern ( ($generated@@141 ($generated@@228 $generated@@234 $generated@@235) ($generated@@144 $generated@@232 $generated@@233)))
)))
(assert (forall (($generated@@236 T@U) ) (!  (=> (= (type $generated@@236) $generated@@70) ($generated@@141 $generated@@160 ($generated@@223 $generated@@236)))
 :pattern ( ($generated@@141 $generated@@160 ($generated@@223 $generated@@236)))
)))
(assert (forall (($generated@@237 T@U) ($generated@@238 T@U) ) (!  (=> (and (= (type $generated@@237) $generated@@145) (= (type $generated@@238) $generated@@145)) (= ($generated@@151 $generated@@237 $generated@@238) (= $generated@@237 $generated@@238)))
 :pattern ( ($generated@@151 $generated@@237 $generated@@238))
)))
(assert (forall (($generated@@240 T@U) ($generated@@241 T@U) ) (!  (=> (and (= (type $generated@@240) $generated@@145) (= (type $generated@@241) $generated@@145)) (= ($generated@@239 $generated@@240 $generated@@241) (= $generated@@240 $generated@@241)))
 :pattern ( ($generated@@239 $generated@@240 $generated@@241))
)))
(assert  (and (forall (($generated@@245 T@U) ) (! (= (type ($generated@@243 $generated@@245)) $generated@@154)
 :pattern ( ($generated@@243 $generated@@245))
)) (forall (($generated@@246 T@U) ) (! (= (type ($generated@@244 $generated@@246)) $generated@@145)
 :pattern ( ($generated@@244 $generated@@246))
))))
(assert (forall (($generated@@247 T@U) ($generated@@248 T@U) ) (!  (=> (and (and (= (type $generated@@247) $generated@@145) (= (type $generated@@248) $generated@@145)) (and ($generated@@242 $generated@@247) ($generated@@242 $generated@@248))) (= ($generated@@239 $generated@@247 $generated@@248)  (and (= ($generated@@243 $generated@@247) ($generated@@243 $generated@@248)) ($generated@@239 ($generated@@244 $generated@@247) ($generated@@244 $generated@@248)))))
 :pattern ( ($generated@@239 $generated@@247 $generated@@248) ($generated@@242 $generated@@247))
 :pattern ( ($generated@@239 $generated@@247 $generated@@248) ($generated@@242 $generated@@248))
)))
(assert (forall (($generated@@250 T@U) ) (! (= (type ($generated@@249 $generated@@250)) $generated@@70)
 :pattern ( ($generated@@249 $generated@@250))
)))
(assert (forall (($generated@@251 T@U) ($generated@@252 T@U) ) (!  (=> (and (= (type $generated@@251) ($generated@@82 $generated@@154 $generated@@4)) (= (type $generated@@252) $generated@@70)) (= ($generated@@141 $generated@@251 ($generated@@249 $generated@@252)) (forall (($generated@@253 T@U) ) (!  (=> (and (= (type $generated@@253) $generated@@154) ($generated@@0 ($generated@@87 $generated@@251 $generated@@253))) ($generated@@229 $generated@@253 $generated@@252))
 :pattern ( ($generated@@87 $generated@@251 $generated@@253))
))))
 :pattern ( ($generated@@141 $generated@@251 ($generated@@249 $generated@@252)))
)))
(assert (forall (($generated@@255 T@U) ) (! (= (type ($generated@@254 $generated@@255)) $generated@@70)
 :pattern ( ($generated@@254 $generated@@255))
)))
(assert (forall (($generated@@256 T@U) ($generated@@257 T@U) ) (!  (=> (and (= (type $generated@@256) ($generated@@82 $generated@@154 $generated@@4)) (= (type $generated@@257) $generated@@70)) (= ($generated@@141 $generated@@256 ($generated@@254 $generated@@257)) (forall (($generated@@258 T@U) ) (!  (=> (and (= (type $generated@@258) $generated@@154) ($generated@@0 ($generated@@87 $generated@@256 $generated@@258))) ($generated@@229 $generated@@258 $generated@@257))
 :pattern ( ($generated@@87 $generated@@256 $generated@@258))
))))
 :pattern ( ($generated@@141 $generated@@256 ($generated@@254 $generated@@257)))
)))
(assert (forall (($generated@@260 Int) ) (! (= ($generated@@259 $generated@@260) $generated@@260)
 :pattern ( ($generated@@259 $generated@@260))
)))
(assert (forall (($generated@@262 T@U) ) (! (let (($generated@@263 (type $generated@@262)))
(= (type ($generated@@261 $generated@@262)) $generated@@263))
 :pattern ( ($generated@@261 $generated@@262))
)))
(assert (forall (($generated@@264 T@U) ) (! (= ($generated@@261 $generated@@264) $generated@@264)
 :pattern ( ($generated@@261 $generated@@264))
)))
(assert (forall (($generated@@266 T@U) ($generated@@267 T@U) ) (!  (=> (and (and (= (type $generated@@266) $generated@@145) (= (type $generated@@267) $generated@@145)) (and ($generated@@265 $generated@@266) ($generated@@265 $generated@@267))) (= ($generated@@239 $generated@@266 $generated@@267) true))
 :pattern ( ($generated@@239 $generated@@266 $generated@@267) ($generated@@265 $generated@@266))
 :pattern ( ($generated@@239 $generated@@266 $generated@@267) ($generated@@265 $generated@@267))
)))
(assert (forall (($generated@@269 T@U) ($generated@@270 T@U) ) (! (= (type ($generated@@268 $generated@@269 $generated@@270)) $generated@@145)
 :pattern ( ($generated@@268 $generated@@269 $generated@@270))
)))
(assert (forall (($generated@@271 T@U) ($generated@@272 T@U) ($generated@@273 T@U) ) (!  (=> (and (and (= (type $generated@@271) $generated@@70) (= (type $generated@@272) $generated@@154)) (= (type $generated@@273) $generated@@145)) (= ($generated@@141 ($generated@@268 $generated@@272 $generated@@273) ($generated@@223 $generated@@271))  (and ($generated@@229 $generated@@272 $generated@@271) ($generated@@141 $generated@@273 ($generated@@223 $generated@@271)))))
 :pattern ( ($generated@@141 ($generated@@268 $generated@@272 $generated@@273) ($generated@@223 $generated@@271)))
)))
(assert (forall (($generated@@275 T@U) ($generated@@276 T@U) ($generated@@277 T@U) ($generated@@278 T@U) ($generated@@279 T@U) ) (!  (=> (and (and (and (and (and (= (type $generated@@275) $generated@@70) (= (type $generated@@276) $generated@@70)) (= (type $generated@@277) $generated@@154)) (= (type $generated@@278) $generated@@154)) (= (type $generated@@279) ($generated@@82 $generated@@83 $generated@@84))) ($generated@@224 $generated@@279)) (= ($generated@@80 ($generated@@228 $generated@@277 $generated@@278) ($generated@@144 $generated@@275 $generated@@276) $generated@@279)  (and ($generated@@274 $generated@@277 $generated@@275 $generated@@279) ($generated@@274 $generated@@278 $generated@@276 $generated@@279))))
 :pattern ( ($generated@@80 ($generated@@228 $generated@@277 $generated@@278) ($generated@@144 $generated@@275 $generated@@276) $generated@@279))
)))
(assert (forall (($generated@@280 T@U) ) (!  (=> (= (type $generated@@280) $generated@@145) (= ($generated@@143 $generated@@280) (= ($generated@@159 $generated@@280) $generated@@62)))
 :pattern ( ($generated@@143 $generated@@280))
)))
(assert (forall (($generated@@281 T@U) ) (!  (=> (= (type $generated@@281) $generated@@145) (= ($generated@@265 $generated@@281) (= ($generated@@159 $generated@@281) $generated@@64)))
 :pattern ( ($generated@@265 $generated@@281))
)))
(assert (forall (($generated@@282 T@U) ) (!  (=> (= (type $generated@@282) $generated@@145) (= ($generated@@242 $generated@@282) (= ($generated@@159 $generated@@282) $generated@@66)))
 :pattern ( ($generated@@242 $generated@@282))
)))
(assert (forall (($generated@@283 T@U) ) (!  (=> (and (= (type $generated@@283) $generated@@145) ($generated@@143 $generated@@283)) (exists (($generated@@284 T@U) ($generated@@285 T@U) ) (!  (and (and (= (type $generated@@284) $generated@@154) (= (type $generated@@285) $generated@@154)) (= $generated@@283 ($generated@@228 $generated@@284 $generated@@285)))
 :no-pattern (type $generated@@284)
 :no-pattern (type $generated@@285)
 :no-pattern ($generated $generated@@284)
 :no-pattern ($generated@@0 $generated@@284)
 :no-pattern ($generated $generated@@285)
 :no-pattern ($generated@@0 $generated@@285)
)))
 :pattern ( ($generated@@143 $generated@@283))
)))
(assert (forall (($generated@@286 T@U) ) (!  (=> (and (= (type $generated@@286) $generated@@145) ($generated@@242 $generated@@286)) (exists (($generated@@287 T@U) ($generated@@288 T@U) ) (!  (and (and (= (type $generated@@287) $generated@@154) (= (type $generated@@288) $generated@@145)) (= $generated@@286 ($generated@@268 $generated@@287 $generated@@288)))
 :no-pattern (type $generated@@287)
 :no-pattern (type $generated@@288)
 :no-pattern ($generated $generated@@287)
 :no-pattern ($generated@@0 $generated@@287)
 :no-pattern ($generated $generated@@288)
 :no-pattern ($generated@@0 $generated@@288)
)))
 :pattern ( ($generated@@242 $generated@@286))
)))
(assert  (and (and (forall (($generated@@293 T@T) ) (= ($generated@@1 ($generated@@291 $generated@@293)) 17)) (forall (($generated@@294 T@T) ) (! (= ($generated@@292 ($generated@@291 $generated@@294)) $generated@@294)
 :pattern ( ($generated@@291 $generated@@294))
))) (forall (($generated@@295 T@T) ) (! (= (type ($generated@@289 $generated@@295)) ($generated@@291 $generated@@295))
 :pattern ( ($generated@@289 $generated@@295))
))))
(assert (forall (($generated@@296 T@T) ) (! (= ($generated@@290 ($generated@@289 $generated@@296)) 0)
 :pattern ( ($generated@@289 $generated@@296))
)))
(assert (forall (($generated@@297 T@U) ) (!  (=> (and (= (type $generated@@297) $generated@@145) ($generated@@265 $generated@@297)) (= $generated@@297 $generated@@160))
 :pattern ( ($generated@@265 $generated@@297))
)))
(assert (forall (($generated@@298 T@U) ) (!  (=> (= (type $generated@@298) $generated@@2) (= ($generated@@141 $generated@@298 $generated@@138) (<= ($generated@@259 0) ($generated $generated@@298))))
 :pattern ( ($generated@@141 $generated@@298 $generated@@138))
)))
(assert (forall (($generated@@300 T@U) ) (! (= (type ($generated@@299 $generated@@300)) $generated@@154)
 :pattern ( ($generated@@299 $generated@@300))
)))
(assert (forall (($generated@@301 T@U) ($generated@@302 T@U) ($generated@@303 T@U) ) (!  (=> (and (= (type $generated@@302) $generated@@70) (= (type $generated@@303) ($generated@@82 $generated@@83 $generated@@84))) (= ($generated@@274 ($generated@@299 $generated@@301) $generated@@302 $generated@@303) ($generated@@80 $generated@@301 $generated@@302 $generated@@303)))
 :pattern ( ($generated@@274 ($generated@@299 $generated@@301) $generated@@302 $generated@@303))
)))
(assert (forall (($generated@@306 T@T) ) (! (= (type ($generated@@305 $generated@@306)) ($generated@@82 $generated@@306 $generated@@2))
 :pattern ( ($generated@@305 $generated@@306))
)))
(assert (forall (($generated@@307 T@U) ) (! (let (($generated@@308 ($generated@@85 (type $generated@@307))))
 (=> (= (type $generated@@307) ($generated@@82 $generated@@308 $generated@@2)) (and (= (= ($generated@@304 $generated@@307) 0) (= $generated@@307 ($generated@@305 $generated@@308))) (=> (not (= ($generated@@304 $generated@@307) 0)) (exists (($generated@@309 T@U) ) (!  (and (= (type $generated@@309) $generated@@308) (< 0 ($generated ($generated@@87 $generated@@307 $generated@@309))))
 :no-pattern (type $generated@@309)
 :no-pattern ($generated $generated@@309)
 :no-pattern ($generated@@0 $generated@@309)
))))))
 :pattern ( ($generated@@304 $generated@@307))
)))
(assert (forall (($generated@@311 T@U) ) (! (= (type ($generated@@310 $generated@@311)) $generated@@75)
 :pattern ( ($generated@@310 $generated@@311))
)))
(assert (forall (($generated@@312 T@U) ) (!  (=> (= (type $generated@@312) $generated@@70) (and (= ($generated@@78 ($generated@@223 $generated@@312)) $generated@@65) (= ($generated@@310 ($generated@@223 $generated@@312)) $generated@@69)))
 :pattern ( ($generated@@223 $generated@@312))
)))
(assert  (and (and (and (and (forall (($generated@@318 T@T) ($generated@@319 T@T) ) (= ($generated@@1 ($generated@@315 $generated@@318 $generated@@319)) 18)) (forall (($generated@@320 T@T) ($generated@@321 T@T) ) (! (= ($generated@@316 ($generated@@315 $generated@@320 $generated@@321)) $generated@@320)
 :pattern ( ($generated@@315 $generated@@320 $generated@@321))
))) (forall (($generated@@322 T@T) ($generated@@323 T@T) ) (! (= ($generated@@317 ($generated@@315 $generated@@322 $generated@@323)) $generated@@323)
 :pattern ( ($generated@@315 $generated@@322 $generated@@323))
))) (forall (($generated@@324 T@U) ) (! (let (($generated@@325 ($generated@@316 (type $generated@@324))))
(= (type ($generated@@313 $generated@@324)) ($generated@@82 $generated@@325 $generated@@4)))
 :pattern ( ($generated@@313 $generated@@324))
))) (forall (($generated@@326 T@T) ($generated@@327 T@T) ) (! (= (type ($generated@@314 $generated@@326 $generated@@327)) ($generated@@315 $generated@@326 $generated@@327))
 :pattern ( ($generated@@314 $generated@@326 $generated@@327))
))))
(assert (forall (($generated@@328 T@U) ($generated@@329 T@T) ) (! (let (($generated@@330 (type $generated@@328)))
 (not ($generated@@0 ($generated@@87 ($generated@@313 ($generated@@314 $generated@@330 $generated@@329)) $generated@@328))))
 :pattern ( (let (($generated@@330 (type $generated@@328)))
($generated@@87 ($generated@@313 ($generated@@314 $generated@@330 $generated@@329)) $generated@@328)))
)))
(assert  (and (and (and (and (forall (($generated@@336 T@T) ($generated@@337 T@T) ) (= ($generated@@1 ($generated@@333 $generated@@336 $generated@@337)) 19)) (forall (($generated@@338 T@T) ($generated@@339 T@T) ) (! (= ($generated@@334 ($generated@@333 $generated@@338 $generated@@339)) $generated@@338)
 :pattern ( ($generated@@333 $generated@@338 $generated@@339))
))) (forall (($generated@@340 T@T) ($generated@@341 T@T) ) (! (= ($generated@@335 ($generated@@333 $generated@@340 $generated@@341)) $generated@@341)
 :pattern ( ($generated@@333 $generated@@340 $generated@@341))
))) (forall (($generated@@342 T@U) ) (! (let (($generated@@343 ($generated@@334 (type $generated@@342))))
(= (type ($generated@@331 $generated@@342)) ($generated@@82 $generated@@343 $generated@@4)))
 :pattern ( ($generated@@331 $generated@@342))
))) (forall (($generated@@344 T@T) ($generated@@345 T@T) ) (! (= (type ($generated@@332 $generated@@344 $generated@@345)) ($generated@@333 $generated@@344 $generated@@345))
 :pattern ( ($generated@@332 $generated@@344 $generated@@345))
))))
(assert (forall (($generated@@346 T@U) ($generated@@347 T@T) ) (! (let (($generated@@348 (type $generated@@346)))
 (not ($generated@@0 ($generated@@87 ($generated@@331 ($generated@@332 $generated@@348 $generated@@347)) $generated@@346))))
 :pattern ( (let (($generated@@348 (type $generated@@346)))
($generated@@87 ($generated@@331 ($generated@@332 $generated@@348 $generated@@347)) $generated@@346)))
)))
(assert (forall (($generated@@349 T@U) ) (! (let (($generated@@350 ($generated@@85 (type $generated@@349))))
 (=> (= (type $generated@@349) ($generated@@82 $generated@@350 $generated@@2)) (= ($generated@@163 $generated@@349) (forall (($generated@@351 T@U) ) (!  (=> (= (type $generated@@351) $generated@@350) (and (<= 0 ($generated ($generated@@87 $generated@@349 $generated@@351))) (<= ($generated ($generated@@87 $generated@@349 $generated@@351)) ($generated@@304 $generated@@349))))
 :pattern ( ($generated@@87 $generated@@349 $generated@@351))
)))))
 :pattern ( ($generated@@163 $generated@@349))
)))
(assert (forall (($generated@@353 T@T) ($generated@@354 T@U) ) (! (= (type ($generated@@352 $generated@@353 $generated@@354)) $generated@@353)
 :pattern ( ($generated@@352 $generated@@353 $generated@@354))
)))
(assert (forall (($generated@@355 T@U) ) (!  (=> (and (= (type $generated@@355) $generated@@154) ($generated@@229 $generated@@355 $generated@@138)) (and (= ($generated@@299 ($generated@@352 $generated@@2 $generated@@355)) $generated@@355) ($generated@@141 ($generated@@352 $generated@@2 $generated@@355) $generated@@138)))
 :pattern ( ($generated@@229 $generated@@355 $generated@@138))
)))
(assert (forall (($generated@@356 T@U) ) (! (let (($generated@@357 ($generated@@317 (type $generated@@356))))
(let (($generated@@358 ($generated@@316 (type $generated@@356))))
 (=> (= (type $generated@@356) ($generated@@315 $generated@@358 $generated@@357)) (or (= $generated@@356 ($generated@@314 $generated@@358 $generated@@357)) (exists (($generated@@359 T@U) ) (!  (and (= (type $generated@@359) $generated@@358) ($generated@@0 ($generated@@87 ($generated@@313 $generated@@356) $generated@@359)))
 :no-pattern (type $generated@@359)
 :no-pattern ($generated $generated@@359)
 :no-pattern ($generated@@0 $generated@@359)
))))))
 :pattern ( ($generated@@313 $generated@@356))
)))
(assert (forall (($generated@@361 T@U) ) (! (let (($generated@@362 ($generated@@317 (type $generated@@361))))
(= (type ($generated@@360 $generated@@361)) ($generated@@82 $generated@@362 $generated@@4)))
 :pattern ( ($generated@@360 $generated@@361))
)))
(assert (forall (($generated@@363 T@U) ) (! (let (($generated@@364 ($generated@@317 (type $generated@@363))))
(let (($generated@@365 ($generated@@316 (type $generated@@363))))
 (=> (= (type $generated@@363) ($generated@@315 $generated@@365 $generated@@364)) (or (= $generated@@363 ($generated@@314 $generated@@365 $generated@@364)) (exists (($generated@@366 T@U) ) (!  (and (= (type $generated@@366) $generated@@364) ($generated@@0 ($generated@@87 ($generated@@360 $generated@@363) $generated@@366)))
 :no-pattern (type $generated@@366)
 :no-pattern ($generated $generated@@366)
 :no-pattern ($generated@@0 $generated@@366)
))))))
 :pattern ( ($generated@@360 $generated@@363))
)))
(assert (forall (($generated@@367 T@U) ) (! (let (($generated@@368 ($generated@@335 (type $generated@@367))))
(let (($generated@@369 ($generated@@334 (type $generated@@367))))
 (=> (= (type $generated@@367) ($generated@@333 $generated@@369 $generated@@368)) (or (= $generated@@367 ($generated@@332 $generated@@369 $generated@@368)) (exists (($generated@@370 T@U) ) (!  (and (= (type $generated@@370) $generated@@369) ($generated@@0 ($generated@@87 ($generated@@331 $generated@@367) $generated@@370)))
 :no-pattern (type $generated@@370)
 :no-pattern ($generated $generated@@370)
 :no-pattern ($generated@@0 $generated@@370)
))))))
 :pattern ( ($generated@@331 $generated@@367))
)))
(assert (forall (($generated@@372 T@U) ) (! (let (($generated@@373 ($generated@@335 (type $generated@@372))))
(= (type ($generated@@371 $generated@@372)) ($generated@@82 $generated@@373 $generated@@4)))
 :pattern ( ($generated@@371 $generated@@372))
)))
(assert (forall (($generated@@374 T@U) ) (! (let (($generated@@375 ($generated@@335 (type $generated@@374))))
(let (($generated@@376 ($generated@@334 (type $generated@@374))))
 (=> (= (type $generated@@374) ($generated@@333 $generated@@376 $generated@@375)) (or (= $generated@@374 ($generated@@332 $generated@@376 $generated@@375)) (exists (($generated@@377 T@U) ) (!  (and (= (type $generated@@377) $generated@@375) ($generated@@0 ($generated@@87 ($generated@@371 $generated@@374) $generated@@377)))
 :no-pattern (type $generated@@377)
 :no-pattern ($generated $generated@@377)
 :no-pattern ($generated@@0 $generated@@377)
))))))
 :pattern ( ($generated@@371 $generated@@374))
)))
(assert (forall (($generated@@378 T@U) ($generated@@379 T@U) ) (!  (=> (and (= (type $generated@@378) ($generated@@82 $generated@@154 $generated@@2)) (= (type $generated@@379) $generated@@70)) (= ($generated@@141 $generated@@378 ($generated@@162 $generated@@379)) (forall (($generated@@380 T@U) ) (!  (=> (and (= (type $generated@@380) $generated@@154) (< 0 ($generated ($generated@@87 $generated@@378 $generated@@380)))) ($generated@@229 $generated@@380 $generated@@379))
 :pattern ( ($generated@@87 $generated@@378 $generated@@380))
))))
 :pattern ( ($generated@@141 $generated@@378 ($generated@@162 $generated@@379)))
)))
(assert (forall (($generated@@382 T@U) ) (!  (=> (and (= (type $generated@@382) $generated@@145) ($generated@@381 $generated@@382)) (or ($generated@@265 $generated@@382) ($generated@@242 $generated@@382)))
 :pattern ( ($generated@@381 $generated@@382))
)))
(assert (forall (($generated@@383 T@U) ($generated@@384 T@U) ($generated@@385 T@U) ) (!  (=> (and (and (= (type $generated@@383) ($generated@@82 $generated@@154 $generated@@4)) (= (type $generated@@384) $generated@@70)) (= (type $generated@@385) ($generated@@82 $generated@@83 $generated@@84))) (= ($generated@@80 $generated@@383 ($generated@@249 $generated@@384) $generated@@385) (forall (($generated@@386 T@U) ) (!  (=> (and (= (type $generated@@386) $generated@@154) ($generated@@0 ($generated@@87 $generated@@383 $generated@@386))) ($generated@@274 $generated@@386 $generated@@384 $generated@@385))
 :pattern ( ($generated@@87 $generated@@383 $generated@@386))
))))
 :pattern ( ($generated@@80 $generated@@383 ($generated@@249 $generated@@384) $generated@@385))
)))
(assert (forall (($generated@@387 T@U) ($generated@@388 T@U) ($generated@@389 T@U) ) (!  (=> (and (and (= (type $generated@@387) ($generated@@82 $generated@@154 $generated@@4)) (= (type $generated@@388) $generated@@70)) (= (type $generated@@389) ($generated@@82 $generated@@83 $generated@@84))) (= ($generated@@80 $generated@@387 ($generated@@254 $generated@@388) $generated@@389) (forall (($generated@@390 T@U) ) (!  (=> (and (= (type $generated@@390) $generated@@154) ($generated@@0 ($generated@@87 $generated@@387 $generated@@390))) ($generated@@274 $generated@@390 $generated@@388 $generated@@389))
 :pattern ( ($generated@@87 $generated@@387 $generated@@390))
))))
 :pattern ( ($generated@@80 $generated@@387 ($generated@@254 $generated@@388) $generated@@389))
)))
(assert (forall (($generated@@391 T@U) ) (! (let (($generated@@392 (type $generated@@391)))
(= ($generated ($generated@@87 ($generated@@305 $generated@@392) $generated@@391)) 0))
 :pattern ( (let (($generated@@392 (type $generated@@391)))
($generated@@87 ($generated@@305 $generated@@392) $generated@@391)))
)))
(assert  (and (forall (($generated@@395 T@U) ) (! (= (type ($generated@@393 $generated@@395)) ($generated@@82 $generated@@154 $generated@@4))
 :pattern ( ($generated@@393 $generated@@395))
)) (forall (($generated@@396 T@U) ) (! (let (($generated@@397 ($generated@@317 (type $generated@@396))))
(let (($generated@@398 ($generated@@316 (type $generated@@396))))
(= (type ($generated@@394 $generated@@396)) ($generated@@82 $generated@@398 $generated@@397))))
 :pattern ( ($generated@@394 $generated@@396))
))))
(assert (forall (($generated@@399 T@U) ($generated@@400 T@U) ) (!  (=> (and (= (type $generated@@399) ($generated@@315 $generated@@154 $generated@@154)) (= (type $generated@@400) $generated@@154)) (= ($generated@@0 ($generated@@87 ($generated@@393 $generated@@399) $generated@@400))  (and ($generated@@0 ($generated@@87 ($generated@@313 $generated@@399) ($generated@@152 ($generated@@352 $generated@@145 $generated@@400)))) (= ($generated@@87 ($generated@@394 $generated@@399) ($generated@@152 ($generated@@352 $generated@@145 $generated@@400))) ($generated@@153 ($generated@@352 $generated@@145 $generated@@400))))))
 :pattern ( ($generated@@87 ($generated@@393 $generated@@399) $generated@@400))
)))
(assert  (and (forall (($generated@@403 T@U) ) (! (= (type ($generated@@401 $generated@@403)) ($generated@@82 $generated@@154 $generated@@4))
 :pattern ( ($generated@@401 $generated@@403))
)) (forall (($generated@@404 T@U) ) (! (let (($generated@@405 ($generated@@335 (type $generated@@404))))
(let (($generated@@406 ($generated@@334 (type $generated@@404))))
(= (type ($generated@@402 $generated@@404)) ($generated@@82 $generated@@406 $generated@@405))))
 :pattern ( ($generated@@402 $generated@@404))
))))
(assert (forall (($generated@@407 T@U) ($generated@@408 T@U) ) (!  (=> (and (= (type $generated@@407) ($generated@@333 $generated@@154 $generated@@154)) (= (type $generated@@408) $generated@@154)) (= ($generated@@0 ($generated@@87 ($generated@@401 $generated@@407) $generated@@408))  (and ($generated@@0 ($generated@@87 ($generated@@331 $generated@@407) ($generated@@152 ($generated@@352 $generated@@145 $generated@@408)))) (= ($generated@@87 ($generated@@402 $generated@@407) ($generated@@152 ($generated@@352 $generated@@145 $generated@@408))) ($generated@@153 ($generated@@352 $generated@@145 $generated@@408))))))
 :pattern ( ($generated@@87 ($generated@@401 $generated@@407) $generated@@408))
)))
(assert (forall (($generated@@409 T@U) ($generated@@410 T@U) ) (! (let (($generated@@411 (type $generated@@410)))
(let (($generated@@412 ($generated@@316 (type $generated@@409))))
 (=> (= (type $generated@@409) ($generated@@315 $generated@@412 $generated@@411)) (= ($generated@@0 ($generated@@87 ($generated@@360 $generated@@409) $generated@@410)) (exists (($generated@@413 T@U) ) (!  (and (= (type $generated@@413) $generated@@412) (and ($generated@@0 ($generated@@87 ($generated@@313 $generated@@409) $generated@@413)) (= $generated@@410 ($generated@@87 ($generated@@394 $generated@@409) $generated@@413))))
 :pattern ( ($generated@@87 ($generated@@313 $generated@@409) $generated@@413))
 :pattern ( ($generated@@87 ($generated@@394 $generated@@409) $generated@@413))
))))))
 :pattern ( ($generated@@87 ($generated@@360 $generated@@409) $generated@@410))
)))
(assert (forall (($generated@@414 T@U) ($generated@@415 T@U) ) (! (let (($generated@@416 (type $generated@@415)))
(let (($generated@@417 ($generated@@334 (type $generated@@414))))
 (=> (= (type $generated@@414) ($generated@@333 $generated@@417 $generated@@416)) (= ($generated@@0 ($generated@@87 ($generated@@371 $generated@@414) $generated@@415)) (exists (($generated@@418 T@U) ) (!  (and (= (type $generated@@418) $generated@@417) (and ($generated@@0 ($generated@@87 ($generated@@331 $generated@@414) $generated@@418)) (= $generated@@415 ($generated@@87 ($generated@@402 $generated@@414) $generated@@418))))
 :pattern ( ($generated@@87 ($generated@@331 $generated@@414) $generated@@418))
 :pattern ( ($generated@@87 ($generated@@402 $generated@@414) $generated@@418))
))))))
 :pattern ( ($generated@@87 ($generated@@371 $generated@@414) $generated@@415))
)))
(assert (forall (($generated@@420 T@U) ($generated@@421 T@U) ) (! (= (type ($generated@@419 $generated@@420 $generated@@421)) $generated@@70)
 :pattern ( ($generated@@419 $generated@@420 $generated@@421))
)))
(assert (forall (($generated@@422 T@U) ($generated@@423 T@U) ($generated@@424 T@U) ($generated@@425 T@U) ) (!  (=> (and (and (and (= (type $generated@@422) ($generated@@315 $generated@@154 $generated@@154)) (= (type $generated@@423) $generated@@70)) (= (type $generated@@424) $generated@@70)) (= (type $generated@@425) ($generated@@82 $generated@@83 $generated@@84))) (= ($generated@@80 $generated@@422 ($generated@@419 $generated@@423 $generated@@424) $generated@@425) (forall (($generated@@426 T@U) ) (!  (=> (and (= (type $generated@@426) $generated@@154) ($generated@@0 ($generated@@87 ($generated@@313 $generated@@422) $generated@@426))) (and ($generated@@274 ($generated@@87 ($generated@@394 $generated@@422) $generated@@426) $generated@@424 $generated@@425) ($generated@@274 $generated@@426 $generated@@423 $generated@@425)))
 :pattern ( ($generated@@87 ($generated@@394 $generated@@422) $generated@@426))
 :pattern ( ($generated@@87 ($generated@@313 $generated@@422) $generated@@426))
))))
 :pattern ( ($generated@@80 $generated@@422 ($generated@@419 $generated@@423 $generated@@424) $generated@@425))
)))
(assert (forall (($generated@@428 T@U) ($generated@@429 T@U) ) (! (= (type ($generated@@427 $generated@@428 $generated@@429)) $generated@@70)
 :pattern ( ($generated@@427 $generated@@428 $generated@@429))
)))
(assert (forall (($generated@@430 T@U) ($generated@@431 T@U) ($generated@@432 T@U) ($generated@@433 T@U) ) (!  (=> (and (and (and (= (type $generated@@430) ($generated@@333 $generated@@154 $generated@@154)) (= (type $generated@@431) $generated@@70)) (= (type $generated@@432) $generated@@70)) (= (type $generated@@433) ($generated@@82 $generated@@83 $generated@@84))) (= ($generated@@80 $generated@@430 ($generated@@427 $generated@@431 $generated@@432) $generated@@433) (forall (($generated@@434 T@U) ) (!  (=> (and (= (type $generated@@434) $generated@@154) ($generated@@0 ($generated@@87 ($generated@@331 $generated@@430) $generated@@434))) (and ($generated@@274 ($generated@@87 ($generated@@402 $generated@@430) $generated@@434) $generated@@432 $generated@@433) ($generated@@274 $generated@@434 $generated@@431 $generated@@433)))
 :pattern ( ($generated@@87 ($generated@@402 $generated@@430) $generated@@434))
 :pattern ( ($generated@@87 ($generated@@331 $generated@@430) $generated@@434))
))))
 :pattern ( ($generated@@80 $generated@@430 ($generated@@427 $generated@@431 $generated@@432) $generated@@433))
)))
(assert (forall (($generated@@435 T@U) ($generated@@436 T@U) ) (!  (=> (and (and (= (type $generated@@435) $generated@@70) (= (type $generated@@436) $generated@@145)) ($generated@@141 $generated@@436 ($generated@@223 $generated@@435))) (or ($generated@@265 $generated@@436) ($generated@@242 $generated@@436)))
 :pattern ( ($generated@@242 $generated@@436) ($generated@@141 $generated@@436 ($generated@@223 $generated@@435)))
 :pattern ( ($generated@@265 $generated@@436) ($generated@@141 $generated@@436 ($generated@@223 $generated@@435)))
)))
(assert (forall (($generated@@438 T@T) ) (! (= (type ($generated@@437 $generated@@438)) ($generated@@82 $generated@@438 $generated@@4))
 :pattern ( ($generated@@437 $generated@@438))
)))
(assert (forall (($generated@@439 T@U) ) (! (let (($generated@@440 ($generated@@335 (type $generated@@439))))
(let (($generated@@441 ($generated@@334 (type $generated@@439))))
 (=> (= (type $generated@@439) ($generated@@333 $generated@@441 $generated@@440)) (= (= $generated@@439 ($generated@@332 $generated@@441 $generated@@440)) (= ($generated@@331 $generated@@439) ($generated@@437 $generated@@441))))))
 :pattern ( ($generated@@331 $generated@@439))
)))
(assert (forall (($generated@@442 T@U) ) (! (let (($generated@@443 ($generated@@335 (type $generated@@442))))
(let (($generated@@444 ($generated@@334 (type $generated@@442))))
 (=> (= (type $generated@@442) ($generated@@333 $generated@@444 $generated@@443)) (= (= $generated@@442 ($generated@@332 $generated@@444 $generated@@443)) (= ($generated@@371 $generated@@442) ($generated@@437 $generated@@443))))))
 :pattern ( ($generated@@371 $generated@@442))
)))
(assert (forall (($generated@@445 T@U) ) (! (let (($generated@@446 ($generated@@335 (type $generated@@445))))
(let (($generated@@447 ($generated@@334 (type $generated@@445))))
 (=> (= (type $generated@@445) ($generated@@333 $generated@@447 $generated@@446)) (= (= $generated@@445 ($generated@@332 $generated@@447 $generated@@446)) (= ($generated@@401 $generated@@445) ($generated@@437 $generated@@154))))))
 :pattern ( ($generated@@401 $generated@@445))
)))
(assert (forall (($generated@@448 T@U) ) (! (let (($generated@@449 ($generated@@317 (type $generated@@448))))
(let (($generated@@450 ($generated@@316 (type $generated@@448))))
 (=> (= (type $generated@@448) ($generated@@315 $generated@@450 $generated@@449)) (or (= $generated@@448 ($generated@@314 $generated@@450 $generated@@449)) (exists (($generated@@451 T@U) ($generated@@452 T@U) ) (!  (and (and (= (type $generated@@451) $generated@@154) (= (type $generated@@452) $generated@@154)) ($generated@@0 ($generated@@87 ($generated@@393 $generated@@448) ($generated@@299 ($generated@@228 $generated@@451 $generated@@452)))))
 :no-pattern (type $generated@@451)
 :no-pattern (type $generated@@452)
 :no-pattern ($generated $generated@@451)
 :no-pattern ($generated@@0 $generated@@451)
 :no-pattern ($generated $generated@@452)
 :no-pattern ($generated@@0 $generated@@452)
))))))
 :pattern ( ($generated@@393 $generated@@448))
)))
(assert (forall (($generated@@453 T@U) ) (! (let (($generated@@454 ($generated@@335 (type $generated@@453))))
(let (($generated@@455 ($generated@@334 (type $generated@@453))))
 (=> (= (type $generated@@453) ($generated@@333 $generated@@455 $generated@@454)) (or (= $generated@@453 ($generated@@332 $generated@@455 $generated@@454)) (exists (($generated@@456 T@U) ($generated@@457 T@U) ) (!  (and (and (= (type $generated@@456) $generated@@154) (= (type $generated@@457) $generated@@154)) ($generated@@0 ($generated@@87 ($generated@@401 $generated@@453) ($generated@@299 ($generated@@228 $generated@@456 $generated@@457)))))
 :no-pattern (type $generated@@456)
 :no-pattern (type $generated@@457)
 :no-pattern ($generated $generated@@456)
 :no-pattern ($generated@@0 $generated@@456)
 :no-pattern ($generated $generated@@457)
 :no-pattern ($generated@@0 $generated@@457)
))))))
 :pattern ( ($generated@@401 $generated@@453))
)))
(assert (forall (($generated@@458 T@U) ) (!  (=> (and (= (type $generated@@458) $generated@@154) ($generated@@229 $generated@@458 $generated@@46)) (and (= ($generated@@299 ($generated@@352 $generated@@2 $generated@@458)) $generated@@458) ($generated@@141 ($generated@@352 $generated@@2 $generated@@458) $generated@@46)))
 :pattern ( ($generated@@229 $generated@@458 $generated@@46))
)))
(assert (forall (($generated@@459 T@U) ) (!  (=> (and (= (type $generated@@459) $generated@@154) ($generated@@229 $generated@@459 $generated@@47)) (and (= ($generated@@299 ($generated@@352 $generated@@3 $generated@@459)) $generated@@459) ($generated@@141 ($generated@@352 $generated@@3 $generated@@459) $generated@@47)))
 :pattern ( ($generated@@229 $generated@@459 $generated@@47))
)))
(assert (forall (($generated@@460 T@U) ) (!  (=> (and (= (type $generated@@460) $generated@@154) ($generated@@229 $generated@@460 $generated@@44)) (and (= ($generated@@299 ($generated@@352 $generated@@4 $generated@@460)) $generated@@460) ($generated@@141 ($generated@@352 $generated@@4 $generated@@460) $generated@@44)))
 :pattern ( ($generated@@229 $generated@@460 $generated@@44))
)))
(assert (= ($generated@@1 $generated@@461) 20))
(assert (forall (($generated@@462 T@U) ) (!  (=> (and (= (type $generated@@462) $generated@@154) ($generated@@229 $generated@@462 $generated@@45)) (and (= ($generated@@299 ($generated@@352 $generated@@461 $generated@@462)) $generated@@462) ($generated@@141 ($generated@@352 $generated@@461 $generated@@462) $generated@@45)))
 :pattern ( ($generated@@229 $generated@@462 $generated@@45))
)))
(assert (forall (($generated@@463 T@U) ($generated@@464 T@U) ) (!  (=> (= (type $generated@@464) $generated@@70) (= ($generated@@229 ($generated@@299 $generated@@463) $generated@@464) ($generated@@141 $generated@@463 $generated@@464)))
 :pattern ( ($generated@@229 ($generated@@299 $generated@@463) $generated@@464))
)))
(assert (forall (($generated@@465 T@U) ) (! (let (($generated@@466 ($generated@@85 (type $generated@@465))))
 (=> (= (type $generated@@465) ($generated@@82 $generated@@466 $generated@@2)) (<= 0 ($generated@@304 $generated@@465))))
 :pattern ( ($generated@@304 $generated@@465))
)))
(assert (forall (($generated@@467 T@U) ) (! (let (($generated@@468 ($generated@@292 (type $generated@@467))))
 (=> (= (type $generated@@467) ($generated@@291 $generated@@468)) (<= 0 ($generated@@290 $generated@@467))))
 :pattern ( ($generated@@290 $generated@@467))
)))
(assert (forall (($generated@@470 T@U) ) (! (= (type ($generated@@469 $generated@@470)) $generated@@70)
 :pattern ( ($generated@@469 $generated@@470))
)))
(assert (forall (($generated@@471 T@U) ($generated@@472 T@U) ) (!  (=> (and (= (type $generated@@471) $generated@@70) (= (type $generated@@472) $generated@@70)) (= ($generated@@469 ($generated@@419 $generated@@471 $generated@@472)) $generated@@471))
 :pattern ( ($generated@@419 $generated@@471 $generated@@472))
)))
(assert (forall (($generated@@474 T@U) ) (! (= (type ($generated@@473 $generated@@474)) $generated@@70)
 :pattern ( ($generated@@473 $generated@@474))
)))
(assert (forall (($generated@@475 T@U) ($generated@@476 T@U) ) (!  (=> (and (= (type $generated@@475) $generated@@70) (= (type $generated@@476) $generated@@70)) (= ($generated@@473 ($generated@@419 $generated@@475 $generated@@476)) $generated@@476))
 :pattern ( ($generated@@419 $generated@@475 $generated@@476))
)))
(assert (forall (($generated@@477 T@U) ($generated@@478 T@U) ) (!  (=> (and (= (type $generated@@477) $generated@@70) (= (type $generated@@478) $generated@@70)) (= ($generated@@78 ($generated@@419 $generated@@477 $generated@@478)) $generated@@58))
 :pattern ( ($generated@@419 $generated@@477 $generated@@478))
)))
(assert (forall (($generated@@480 T@U) ) (! (= (type ($generated@@479 $generated@@480)) $generated@@70)
 :pattern ( ($generated@@479 $generated@@480))
)))
(assert (forall (($generated@@481 T@U) ($generated@@482 T@U) ) (!  (=> (and (= (type $generated@@481) $generated@@70) (= (type $generated@@482) $generated@@70)) (= ($generated@@479 ($generated@@427 $generated@@481 $generated@@482)) $generated@@481))
 :pattern ( ($generated@@427 $generated@@481 $generated@@482))
)))
(assert (forall (($generated@@484 T@U) ) (! (= (type ($generated@@483 $generated@@484)) $generated@@70)
 :pattern ( ($generated@@483 $generated@@484))
)))
(assert (forall (($generated@@485 T@U) ($generated@@486 T@U) ) (!  (=> (and (= (type $generated@@485) $generated@@70) (= (type $generated@@486) $generated@@70)) (= ($generated@@483 ($generated@@427 $generated@@485 $generated@@486)) $generated@@486))
 :pattern ( ($generated@@427 $generated@@485 $generated@@486))
)))
(assert (forall (($generated@@487 T@U) ($generated@@488 T@U) ) (!  (=> (and (= (type $generated@@487) $generated@@70) (= (type $generated@@488) $generated@@70)) (= ($generated@@78 ($generated@@427 $generated@@487 $generated@@488)) $generated@@59))
 :pattern ( ($generated@@427 $generated@@487 $generated@@488))
)))
(assert (forall (($generated@@489 T@U) ($generated@@490 T@U) ) (!  (=> (and (= (type $generated@@489) $generated@@154) (= (type $generated@@490) $generated@@154)) (= ($generated@@159 ($generated@@228 $generated@@489 $generated@@490)) $generated@@62))
 :pattern ( ($generated@@228 $generated@@489 $generated@@490))
)))
(assert (forall (($generated@@492 T@U) ) (! (= (type ($generated@@491 $generated@@492)) $generated@@70)
 :pattern ( ($generated@@491 $generated@@492))
)))
(assert (forall (($generated@@493 T@U) ($generated@@494 T@U) ) (!  (=> (and (= (type $generated@@493) $generated@@70) (= (type $generated@@494) $generated@@70)) (= ($generated@@491 ($generated@@144 $generated@@493 $generated@@494)) $generated@@493))
 :pattern ( ($generated@@144 $generated@@493 $generated@@494))
)))
(assert (forall (($generated@@496 T@U) ) (! (= (type ($generated@@495 $generated@@496)) $generated@@70)
 :pattern ( ($generated@@495 $generated@@496))
)))
(assert (forall (($generated@@497 T@U) ($generated@@498 T@U) ) (!  (=> (and (= (type $generated@@497) $generated@@70) (= (type $generated@@498) $generated@@70)) (= ($generated@@495 ($generated@@144 $generated@@497 $generated@@498)) $generated@@498))
 :pattern ( ($generated@@144 $generated@@497 $generated@@498))
)))
(assert (forall (($generated@@499 T@U) ($generated@@500 T@U) ) (!  (=> (and (= (type $generated@@499) $generated@@154) (= (type $generated@@500) $generated@@154)) (= ($generated@@152 ($generated@@228 $generated@@499 $generated@@500)) $generated@@499))
 :pattern ( ($generated@@228 $generated@@499 $generated@@500))
)))
(assert (forall (($generated@@501 T@U) ($generated@@502 T@U) ) (!  (=> (and (= (type $generated@@501) $generated@@154) (= (type $generated@@502) $generated@@154)) (= ($generated@@153 ($generated@@228 $generated@@501 $generated@@502)) $generated@@502))
 :pattern ( ($generated@@228 $generated@@501 $generated@@502))
)))
(assert (forall (($generated@@503 T@U) ($generated@@504 T@U) ) (!  (=> (and (= (type $generated@@503) $generated@@154) (= (type $generated@@504) $generated@@145)) (= ($generated@@159 ($generated@@268 $generated@@503 $generated@@504)) $generated@@66))
 :pattern ( ($generated@@268 $generated@@503 $generated@@504))
)))
(assert (forall (($generated@@505 T@U) ($generated@@506 T@U) ) (!  (=> (and (= (type $generated@@505) $generated@@154) (= (type $generated@@506) $generated@@145)) (= ($generated@@243 ($generated@@268 $generated@@505 $generated@@506)) $generated@@505))
 :pattern ( ($generated@@268 $generated@@505 $generated@@506))
)))
(assert (forall (($generated@@507 T@U) ($generated@@508 T@U) ) (!  (=> (and (= (type $generated@@507) $generated@@154) (= (type $generated@@508) $generated@@145)) (= ($generated@@244 ($generated@@268 $generated@@507 $generated@@508)) $generated@@508))
 :pattern ( ($generated@@268 $generated@@507 $generated@@508))
)))
(assert  (and (forall (($generated@@511 T@U) ) (! (= (type ($generated@@509 $generated@@511)) $generated@@70)
 :pattern ( ($generated@@509 $generated@@511))
)) (forall (($generated@@512 T@U) ($generated@@513 Int) ) (! (let (($generated@@514 ($generated@@292 (type $generated@@512))))
(= (type ($generated@@510 $generated@@512 $generated@@513)) $generated@@514))
 :pattern ( ($generated@@510 $generated@@512 $generated@@513))
))))
(assert (forall (($generated@@515 T@U) ($generated@@516 T@U) ($generated@@517 T@U) ) (!  (=> (and (and (= (type $generated@@515) ($generated@@291 $generated@@154)) (= (type $generated@@516) $generated@@70)) (= (type $generated@@517) ($generated@@82 $generated@@83 $generated@@84))) (= ($generated@@80 $generated@@515 ($generated@@509 $generated@@516) $generated@@517) (forall (($generated@@518 Int) ) (!  (=> (and (<= 0 $generated@@518) (< $generated@@518 ($generated@@290 $generated@@515))) ($generated@@274 ($generated@@510 $generated@@515 $generated@@518) $generated@@516 $generated@@517))
 :pattern ( ($generated@@510 $generated@@515 $generated@@518))
))))
 :pattern ( ($generated@@80 $generated@@515 ($generated@@509 $generated@@516) $generated@@517))
)))
(assert (forall (($generated@@520 Int) ) (! (= ($generated@@519 ($generated@@81 $generated@@520)) $generated@@520)
 :pattern ( ($generated@@81 $generated@@520))
)))
(assert (forall (($generated@@522 T@U) ) (! (= (type ($generated@@521 $generated@@522)) $generated@@70)
 :pattern ( ($generated@@521 $generated@@522))
)))
(assert (forall (($generated@@523 T@U) ) (!  (=> (= (type $generated@@523) $generated@@70) (= ($generated@@521 ($generated@@249 $generated@@523)) $generated@@523))
 :pattern ( ($generated@@249 $generated@@523))
)))
(assert (forall (($generated@@524 T@U) ) (!  (=> (= (type $generated@@524) $generated@@70) (= ($generated@@78 ($generated@@249 $generated@@524)) $generated@@54))
 :pattern ( ($generated@@249 $generated@@524))
)))
(assert (forall (($generated@@526 T@U) ) (! (= (type ($generated@@525 $generated@@526)) $generated@@70)
 :pattern ( ($generated@@525 $generated@@526))
)))
(assert (forall (($generated@@527 T@U) ) (!  (=> (= (type $generated@@527) $generated@@70) (= ($generated@@525 ($generated@@254 $generated@@527)) $generated@@527))
 :pattern ( ($generated@@254 $generated@@527))
)))
(assert (forall (($generated@@528 T@U) ) (!  (=> (= (type $generated@@528) $generated@@70) (= ($generated@@78 ($generated@@254 $generated@@528)) $generated@@55))
 :pattern ( ($generated@@254 $generated@@528))
)))
(assert (forall (($generated@@530 T@U) ) (! (= (type ($generated@@529 $generated@@530)) $generated@@70)
 :pattern ( ($generated@@529 $generated@@530))
)))
(assert (forall (($generated@@531 T@U) ) (!  (=> (= (type $generated@@531) $generated@@70) (= ($generated@@529 ($generated@@162 $generated@@531)) $generated@@531))
 :pattern ( ($generated@@162 $generated@@531))
)))
(assert (forall (($generated@@532 T@U) ) (!  (=> (= (type $generated@@532) $generated@@70) (= ($generated@@78 ($generated@@162 $generated@@532)) $generated@@56))
 :pattern ( ($generated@@162 $generated@@532))
)))
(assert (forall (($generated@@534 T@U) ) (! (= (type ($generated@@533 $generated@@534)) $generated@@70)
 :pattern ( ($generated@@533 $generated@@534))
)))
(assert (forall (($generated@@535 T@U) ) (!  (=> (= (type $generated@@535) $generated@@70) (= ($generated@@533 ($generated@@509 $generated@@535)) $generated@@535))
 :pattern ( ($generated@@509 $generated@@535))
)))
(assert (forall (($generated@@536 T@U) ) (!  (=> (= (type $generated@@536) $generated@@70) (= ($generated@@78 ($generated@@509 $generated@@536)) $generated@@57))
 :pattern ( ($generated@@509 $generated@@536))
)))
(assert (forall (($generated@@538 T@U) ) (! (= (type ($generated@@537 $generated@@538)) $generated@@70)
 :pattern ( ($generated@@537 $generated@@538))
)))
(assert (forall (($generated@@539 T@U) ) (!  (=> (= (type $generated@@539) $generated@@70) (= ($generated@@537 ($generated@@223 $generated@@539)) $generated@@539))
 :pattern ( ($generated@@223 $generated@@539))
)))
(assert (forall (($generated@@540 T@U) ) (! (let (($generated@@541 (type $generated@@540)))
(= ($generated@@352 $generated@@541 ($generated@@299 $generated@@540)) $generated@@540))
 :pattern ( ($generated@@299 $generated@@540))
)))
(assert (forall (($generated@@542 T@U) ($generated@@543 T@U) ($generated@@544 T@U) ) (!  (=> (and (and (= (type $generated@@542) ($generated@@315 $generated@@154 $generated@@154)) (= (type $generated@@543) $generated@@70)) (= (type $generated@@544) $generated@@70)) (= ($generated@@141 $generated@@542 ($generated@@419 $generated@@543 $generated@@544)) (forall (($generated@@545 T@U) ) (!  (=> (and (= (type $generated@@545) $generated@@154) ($generated@@0 ($generated@@87 ($generated@@313 $generated@@542) $generated@@545))) (and ($generated@@229 ($generated@@87 ($generated@@394 $generated@@542) $generated@@545) $generated@@544) ($generated@@229 $generated@@545 $generated@@543)))
 :pattern ( ($generated@@87 ($generated@@394 $generated@@542) $generated@@545))
 :pattern ( ($generated@@87 ($generated@@313 $generated@@542) $generated@@545))
))))
 :pattern ( ($generated@@141 $generated@@542 ($generated@@419 $generated@@543 $generated@@544)))
)))
(assert (forall (($generated@@546 T@U) ($generated@@547 T@U) ($generated@@548 T@U) ) (!  (=> (and (and (= (type $generated@@546) ($generated@@333 $generated@@154 $generated@@154)) (= (type $generated@@547) $generated@@70)) (= (type $generated@@548) $generated@@70)) (= ($generated@@141 $generated@@546 ($generated@@427 $generated@@547 $generated@@548)) (forall (($generated@@549 T@U) ) (!  (=> (and (= (type $generated@@549) $generated@@154) ($generated@@0 ($generated@@87 ($generated@@331 $generated@@546) $generated@@549))) (and ($generated@@229 ($generated@@87 ($generated@@402 $generated@@546) $generated@@549) $generated@@548) ($generated@@229 $generated@@549 $generated@@547)))
 :pattern ( ($generated@@87 ($generated@@402 $generated@@546) $generated@@549))
 :pattern ( ($generated@@87 ($generated@@331 $generated@@546) $generated@@549))
))))
 :pattern ( ($generated@@141 $generated@@546 ($generated@@427 $generated@@547 $generated@@548)))
)))
(assert (forall (($generated@@552 T@U) ($generated@@553 T@U) ) (!  (=> (and (= (type $generated@@552) $generated@@154) (= (type $generated@@553) $generated@@154)) (< ($generated@@550 $generated@@552) ($generated@@551 ($generated@@228 $generated@@552 $generated@@553))))
 :pattern ( ($generated@@228 $generated@@552 $generated@@553))
)))
(assert (forall (($generated@@554 T@U) ($generated@@555 T@U) ) (!  (=> (and (= (type $generated@@554) $generated@@154) (= (type $generated@@555) $generated@@154)) (< ($generated@@550 $generated@@555) ($generated@@551 ($generated@@228 $generated@@554 $generated@@555))))
 :pattern ( ($generated@@228 $generated@@554 $generated@@555))
)))
(assert (forall (($generated@@556 T@U) ($generated@@557 T@U) ) (!  (=> (and (= (type $generated@@556) $generated@@154) (= (type $generated@@557) $generated@@145)) (< ($generated@@550 $generated@@556) ($generated@@551 ($generated@@268 $generated@@556 $generated@@557))))
 :pattern ( ($generated@@268 $generated@@556 $generated@@557))
)))
(assert (forall (($generated@@558 T@U) ($generated@@559 T@U) ) (!  (=> (and (= (type $generated@@558) $generated@@154) (= (type $generated@@559) $generated@@145)) (< ($generated@@551 $generated@@559) ($generated@@551 ($generated@@268 $generated@@558 $generated@@559))))
 :pattern ( ($generated@@268 $generated@@558 $generated@@559))
)))
(assert (forall (($generated@@560 T@U) ($generated@@561 T@U) ($generated@@562 T@U) ) (!  (=> (and (and (and (= (type $generated@@560) $generated@@154) (= (type $generated@@561) $generated@@70)) (= (type $generated@@562) $generated@@70)) ($generated@@229 $generated@@560 ($generated@@419 $generated@@561 $generated@@562))) (and (= ($generated@@299 ($generated@@352 ($generated@@315 $generated@@154 $generated@@154) $generated@@560)) $generated@@560) ($generated@@141 ($generated@@352 ($generated@@315 $generated@@154 $generated@@154) $generated@@560) ($generated@@419 $generated@@561 $generated@@562))))
 :pattern ( ($generated@@229 $generated@@560 ($generated@@419 $generated@@561 $generated@@562)))
)))
(assert (forall (($generated@@563 T@U) ($generated@@564 T@U) ($generated@@565 T@U) ) (!  (=> (and (and (and (= (type $generated@@563) $generated@@154) (= (type $generated@@564) $generated@@70)) (= (type $generated@@565) $generated@@70)) ($generated@@229 $generated@@563 ($generated@@427 $generated@@564 $generated@@565))) (and (= ($generated@@299 ($generated@@352 ($generated@@333 $generated@@154 $generated@@154) $generated@@563)) $generated@@563) ($generated@@141 ($generated@@352 ($generated@@333 $generated@@154 $generated@@154) $generated@@563) ($generated@@427 $generated@@564 $generated@@565))))
 :pattern ( ($generated@@229 $generated@@563 ($generated@@427 $generated@@564 $generated@@565)))
)))
(assert (forall (($generated@@566 T@U) ($generated@@567 T@U) ($generated@@568 T@U) ) (!  (=> (and (and (and (= (type $generated@@566) $generated@@70) (= (type $generated@@567) $generated@@70)) (= (type $generated@@568) $generated@@154)) ($generated@@229 $generated@@568 ($generated@@144 $generated@@566 $generated@@567))) (and (= ($generated@@299 ($generated@@352 $generated@@145 $generated@@568)) $generated@@568) ($generated@@141 ($generated@@352 $generated@@145 $generated@@568) ($generated@@144 $generated@@566 $generated@@567))))
 :pattern ( ($generated@@229 $generated@@568 ($generated@@144 $generated@@566 $generated@@567)))
)))
(assert (forall (($generated@@569 T@U) ($generated@@570 T@U) ($generated@@571 T@U) ) (!  (=> (and (and (and (= (type $generated@@569) $generated@@145) (= (type $generated@@570) $generated@@70)) (= (type $generated@@571) ($generated@@82 $generated@@83 $generated@@84))) (and ($generated@@224 $generated@@571) (and ($generated@@242 $generated@@569) ($generated@@80 $generated@@569 ($generated@@223 $generated@@570) $generated@@571)))) ($generated@@274 ($generated@@243 $generated@@569) $generated@@570 $generated@@571))
 :pattern ( ($generated@@274 ($generated@@243 $generated@@569) $generated@@570 $generated@@571))
)))
(assert (forall (($generated@@572 T@U) ) (! (let (($generated@@573 (type $generated@@572)))
 (not ($generated@@0 ($generated@@87 ($generated@@437 $generated@@573) $generated@@572))))
 :pattern ( (let (($generated@@573 (type $generated@@572)))
($generated@@87 ($generated@@437 $generated@@573) $generated@@572)))
)))
(assert (forall (($generated@@574 T@U) ($generated@@575 T@U) ) (!  (=> (and (= (type $generated@@574) $generated@@70) (= (type $generated@@575) $generated@@70)) (and (= ($generated@@78 ($generated@@144 $generated@@574 $generated@@575)) $generated@@63) (= ($generated@@310 ($generated@@144 $generated@@574 $generated@@575)) $generated@@68)))
 :pattern ( ($generated@@144 $generated@@574 $generated@@575))
)))
(assert (forall (($generated@@576 T@U) ) (!  (=> (= (type $generated@@576) $generated@@145) (= ($generated@@550 ($generated@@299 $generated@@576)) ($generated@@551 $generated@@576)))
 :pattern ( ($generated@@550 ($generated@@299 $generated@@576)))
)))
(assert (forall (($generated@@577 T@U) ) (!  (=> (and (= (type $generated@@577) $generated@@154) ($generated@@229 $generated@@577 ($generated@@81 0))) (and (= ($generated@@299 ($generated@@352 $generated@@2 $generated@@577)) $generated@@577) ($generated@@141 ($generated@@352 ($generated@@82 $generated@@154 $generated@@4) $generated@@577) ($generated@@81 0))))
 :pattern ( ($generated@@229 $generated@@577 ($generated@@81 0)))
)))
(assert (forall (($generated@@578 T@U) ($generated@@579 T@U) ) (!  (=> (and (and (= (type $generated@@578) $generated@@154) (= (type $generated@@579) $generated@@70)) ($generated@@229 $generated@@578 ($generated@@249 $generated@@579))) (and (= ($generated@@299 ($generated@@352 ($generated@@82 $generated@@154 $generated@@4) $generated@@578)) $generated@@578) ($generated@@141 ($generated@@352 ($generated@@82 $generated@@154 $generated@@4) $generated@@578) ($generated@@249 $generated@@579))))
 :pattern ( ($generated@@229 $generated@@578 ($generated@@249 $generated@@579)))
)))
(assert (forall (($generated@@580 T@U) ($generated@@581 T@U) ) (!  (=> (and (and (= (type $generated@@580) $generated@@154) (= (type $generated@@581) $generated@@70)) ($generated@@229 $generated@@580 ($generated@@254 $generated@@581))) (and (= ($generated@@299 ($generated@@352 ($generated@@82 $generated@@154 $generated@@4) $generated@@580)) $generated@@580) ($generated@@141 ($generated@@352 ($generated@@82 $generated@@154 $generated@@4) $generated@@580) ($generated@@254 $generated@@581))))
 :pattern ( ($generated@@229 $generated@@580 ($generated@@254 $generated@@581)))
)))
(assert (forall (($generated@@582 T@U) ($generated@@583 T@U) ) (!  (=> (and (and (= (type $generated@@582) $generated@@154) (= (type $generated@@583) $generated@@70)) ($generated@@229 $generated@@582 ($generated@@162 $generated@@583))) (and (= ($generated@@299 ($generated@@352 ($generated@@82 $generated@@154 $generated@@2) $generated@@582)) $generated@@582) ($generated@@141 ($generated@@352 ($generated@@82 $generated@@154 $generated@@2) $generated@@582) ($generated@@162 $generated@@583))))
 :pattern ( ($generated@@229 $generated@@582 ($generated@@162 $generated@@583)))
)))
(assert (forall (($generated@@584 T@U) ($generated@@585 T@U) ) (!  (=> (and (and (= (type $generated@@584) $generated@@154) (= (type $generated@@585) $generated@@70)) ($generated@@229 $generated@@584 ($generated@@509 $generated@@585))) (and (= ($generated@@299 ($generated@@352 ($generated@@291 $generated@@154) $generated@@584)) $generated@@584) ($generated@@141 ($generated@@352 ($generated@@291 $generated@@154) $generated@@584) ($generated@@509 $generated@@585))))
 :pattern ( ($generated@@229 $generated@@584 ($generated@@509 $generated@@585)))
)))
(assert (forall (($generated@@586 T@U) ($generated@@587 T@U) ) (!  (=> (and (and (= (type $generated@@586) $generated@@70) (= (type $generated@@587) $generated@@154)) ($generated@@229 $generated@@587 ($generated@@223 $generated@@586))) (and (= ($generated@@299 ($generated@@352 $generated@@145 $generated@@587)) $generated@@587) ($generated@@141 ($generated@@352 $generated@@145 $generated@@587) ($generated@@223 $generated@@586))))
 :pattern ( ($generated@@229 $generated@@587 ($generated@@223 $generated@@586)))
)))
(assert (forall (($generated@@588 T@U) ($generated@@589 T@U) ($generated@@590 T@U) ) (!  (=> (and (and (and (= (type $generated@@588) $generated@@145) (= (type $generated@@589) $generated@@70)) (= (type $generated@@590) ($generated@@82 $generated@@83 $generated@@84))) (and ($generated@@224 $generated@@590) (and ($generated@@242 $generated@@588) ($generated@@80 $generated@@588 ($generated@@223 $generated@@589) $generated@@590)))) ($generated@@80 ($generated@@244 $generated@@588) ($generated@@223 $generated@@589) $generated@@590))
 :pattern ( ($generated@@80 ($generated@@244 $generated@@588) ($generated@@223 $generated@@589) $generated@@590))
)))
(assert (= ($generated@@78 $generated@@138) $generated@@61))
(assert (= ($generated@@310 $generated@@138) $generated@@67))
(assert (forall (($generated@@591 T@U) ($generated@@592 T@U) ($generated@@593 T@U) ) (!  (=> (and (and (= (type $generated@@591) ($generated@@82 $generated@@154 $generated@@2)) (= (type $generated@@592) $generated@@70)) (= (type $generated@@593) ($generated@@82 $generated@@83 $generated@@84))) (= ($generated@@80 $generated@@591 ($generated@@162 $generated@@592) $generated@@593) (forall (($generated@@594 T@U) ) (!  (=> (and (= (type $generated@@594) $generated@@154) (< 0 ($generated ($generated@@87 $generated@@591 $generated@@594)))) ($generated@@274 $generated@@594 $generated@@592 $generated@@593))
 :pattern ( ($generated@@87 $generated@@591 $generated@@594))
))))
 :pattern ( ($generated@@80 $generated@@591 ($generated@@162 $generated@@592) $generated@@593))
)))
(assert (= $generated@@160 ($generated@@261 $generated@@160)))
(assert (forall (($generated@@595 T@U) ($generated@@596 T@U) ($generated@@597 T@U) ) (!  (=> (and (and (and (= (type $generated@@595) $generated@@145) (= (type $generated@@596) $generated@@70)) (= (type $generated@@597) ($generated@@82 $generated@@83 $generated@@84))) (and ($generated@@224 $generated@@597) (and ($generated@@143 $generated@@595) (exists (($generated@@598 T@U) ) (!  (and (= (type $generated@@598) $generated@@70) ($generated@@80 $generated@@595 ($generated@@144 $generated@@596 $generated@@598) $generated@@597))
 :pattern ( ($generated@@80 $generated@@595 ($generated@@144 $generated@@596 $generated@@598) $generated@@597))
))))) ($generated@@274 ($generated@@152 $generated@@595) $generated@@596 $generated@@597))
 :pattern ( ($generated@@274 ($generated@@152 $generated@@595) $generated@@596 $generated@@597))
)))
(assert (forall (($generated@@599 T@U) ($generated@@600 T@U) ($generated@@601 T@U) ) (!  (=> (and (and (and (= (type $generated@@599) $generated@@145) (= (type $generated@@600) $generated@@70)) (= (type $generated@@601) ($generated@@82 $generated@@83 $generated@@84))) (and ($generated@@224 $generated@@601) (and ($generated@@143 $generated@@599) (exists (($generated@@602 T@U) ) (!  (and (= (type $generated@@602) $generated@@70) ($generated@@80 $generated@@599 ($generated@@144 $generated@@602 $generated@@600) $generated@@601))
 :pattern ( ($generated@@80 $generated@@599 ($generated@@144 $generated@@602 $generated@@600) $generated@@601))
))))) ($generated@@274 ($generated@@153 $generated@@599) $generated@@600 $generated@@601))
 :pattern ( ($generated@@274 ($generated@@153 $generated@@599) $generated@@600 $generated@@601))
)))
(assert (forall (($generated@@603 T@U) ($generated@@604 T@U) ) (!  (=> (and (= (type $generated@@603) $generated@@154) (= (type $generated@@604) $generated@@154)) (= ($generated@@228 ($generated@@261 $generated@@603) ($generated@@261 $generated@@604)) ($generated@@261 ($generated@@228 $generated@@603 $generated@@604))))
 :pattern ( ($generated@@228 ($generated@@261 $generated@@603) ($generated@@261 $generated@@604)))
)))
(assert (forall (($generated@@605 T@U) ($generated@@606 T@U) ) (!  (=> (and (= (type $generated@@605) $generated@@154) (= (type $generated@@606) $generated@@145)) (= ($generated@@268 ($generated@@261 $generated@@605) ($generated@@261 $generated@@606)) ($generated@@261 ($generated@@268 $generated@@605 $generated@@606))))
 :pattern ( ($generated@@268 ($generated@@261 $generated@@605) ($generated@@261 $generated@@606)))
)))
(assert (forall (($generated@@607 Int) ) (! (= ($generated@@299 ($generated@@8 ($generated@@259 $generated@@607))) ($generated@@261 ($generated@@299 ($generated@@8 $generated@@607))))
 :pattern ( ($generated@@299 ($generated@@8 ($generated@@259 $generated@@607))))
)))
(assert (forall (($generated@@608 T@U) ) (! (= ($generated@@299 ($generated@@261 $generated@@608)) ($generated@@261 ($generated@@299 $generated@@608)))
 :pattern ( ($generated@@299 ($generated@@261 $generated@@608)))
)))
(assert (forall (($generated@@609 T@U) ) (! (let (($generated@@610 ($generated@@292 (type $generated@@609))))
 (=> (and (= (type $generated@@609) ($generated@@291 $generated@@610)) (= ($generated@@290 $generated@@609) 0)) (= $generated@@609 ($generated@@289 $generated@@610))))
 :pattern ( ($generated@@290 $generated@@609))
)))
(assert (forall (($generated@@611 T@U) ($generated@@612 T@U) ($generated@@613 T@U) ) (! (let (($generated@@614 (type $generated@@612)))
 (=> (and (and (= (type $generated@@611) ($generated@@82 $generated@@614 $generated@@2)) (= (type $generated@@613) $generated@@2)) (<= 0 ($generated $generated@@613))) (= ($generated@@304 ($generated@@88 $generated@@611 $generated@@612 $generated@@613)) (+ (- ($generated@@304 $generated@@611) ($generated ($generated@@87 $generated@@611 $generated@@612))) ($generated $generated@@613)))))
 :pattern ( ($generated@@304 ($generated@@88 $generated@@611 $generated@@612 $generated@@613)))
)))
(assert (forall (($generated@@615 T@U) ($generated@@616 T@U) ) (!  (=> (and (= (type $generated@@615) ($generated@@82 $generated@@83 $generated@@84)) (= (type $generated@@616) $generated@@2)) ($generated@@80 $generated@@616 $generated@@46 $generated@@615))
 :pattern ( ($generated@@80 $generated@@616 $generated@@46 $generated@@615))
)))
(assert (forall (($generated@@617 T@U) ($generated@@618 T@U) ) (!  (=> (and (= (type $generated@@617) ($generated@@82 $generated@@83 $generated@@84)) (= (type $generated@@618) $generated@@3)) ($generated@@80 $generated@@618 $generated@@47 $generated@@617))
 :pattern ( ($generated@@80 $generated@@618 $generated@@47 $generated@@617))
)))
(assert (forall (($generated@@619 T@U) ($generated@@620 T@U) ) (!  (=> (and (= (type $generated@@619) ($generated@@82 $generated@@83 $generated@@84)) (= (type $generated@@620) $generated@@4)) ($generated@@80 $generated@@620 $generated@@44 $generated@@619))
 :pattern ( ($generated@@80 $generated@@620 $generated@@44 $generated@@619))
)))
(assert (forall (($generated@@621 T@U) ($generated@@622 T@U) ) (!  (=> (and (= (type $generated@@621) ($generated@@82 $generated@@83 $generated@@84)) (= (type $generated@@622) $generated@@461)) ($generated@@80 $generated@@622 $generated@@45 $generated@@621))
 :pattern ( ($generated@@80 $generated@@622 $generated@@45 $generated@@621))
)))
(assert (forall (($generated@@623 T@U) ($generated@@624 T@U) ) (!  (=> (and (= (type $generated@@623) ($generated@@82 $generated@@83 $generated@@84)) (= (type $generated@@624) $generated@@154)) ($generated@@80 $generated@@624 $generated@@48 $generated@@623))
 :pattern ( ($generated@@80 $generated@@624 $generated@@48 $generated@@623))
)))
(assert (forall (($generated@@625 T@U) ($generated@@626 T@U) ($generated@@627 T@U) ($generated@@628 T@U) ) (!  (=> (and (and (and (and (= (type $generated@@625) $generated@@70) (= (type $generated@@626) $generated@@154)) (= (type $generated@@627) $generated@@145)) (= (type $generated@@628) ($generated@@82 $generated@@83 $generated@@84))) ($generated@@224 $generated@@628)) (= ($generated@@80 ($generated@@268 $generated@@626 $generated@@627) ($generated@@223 $generated@@625) $generated@@628)  (and ($generated@@274 $generated@@626 $generated@@625 $generated@@628) ($generated@@80 $generated@@627 ($generated@@223 $generated@@625) $generated@@628))))
 :pattern ( ($generated@@80 ($generated@@268 $generated@@626 $generated@@627) ($generated@@223 $generated@@625) $generated@@628))
)))
(assert (forall (($generated@@629 T@U) ($generated@@630 T@U) ) (!  (=> (and (= (type $generated@@629) ($generated@@291 $generated@@154)) (= (type $generated@@630) $generated@@70)) (= ($generated@@141 $generated@@629 ($generated@@509 $generated@@630)) (forall (($generated@@631 Int) ) (!  (=> (and (<= 0 $generated@@631) (< $generated@@631 ($generated@@290 $generated@@629))) ($generated@@229 ($generated@@510 $generated@@629 $generated@@631) $generated@@630))
 :pattern ( ($generated@@510 $generated@@629 $generated@@631))
))))
 :pattern ( ($generated@@141 $generated@@629 ($generated@@509 $generated@@630)))
)))
(assert (forall (($generated@@633 T@U) ($generated@@634 Int) ) (!  (=> (= (type $generated@@633) ($generated@@291 $generated@@154)) (=> (and (<= 0 $generated@@634) (< $generated@@634 ($generated@@290 $generated@@633))) (< ($generated@@551 ($generated@@352 $generated@@145 ($generated@@510 $generated@@633 $generated@@634))) ($generated@@632 $generated@@633))))
 :pattern ( ($generated@@551 ($generated@@352 $generated@@145 ($generated@@510 $generated@@633 $generated@@634))))
)))
(assert (forall (($generated@@635 T@U) ($generated@@636 T@U) ($generated@@637 T@U) ) (!  (=> (and (and (and (= (type $generated@@635) ($generated@@315 $generated@@154 $generated@@154)) (= (type $generated@@636) $generated@@70)) (= (type $generated@@637) $generated@@70)) ($generated@@141 $generated@@635 ($generated@@419 $generated@@636 $generated@@637))) (and (and ($generated@@141 ($generated@@313 $generated@@635) ($generated@@249 $generated@@636)) ($generated@@141 ($generated@@360 $generated@@635) ($generated@@249 $generated@@637))) ($generated@@141 ($generated@@393 $generated@@635) ($generated@@249 ($generated@@144 $generated@@636 $generated@@637)))))
 :pattern ( ($generated@@141 $generated@@635 ($generated@@419 $generated@@636 $generated@@637)))
)))
(assert (forall (($generated@@638 T@U) ($generated@@639 T@U) ($generated@@640 T@U) ) (!  (=> (and (and (and (= (type $generated@@638) ($generated@@333 $generated@@154 $generated@@154)) (= (type $generated@@639) $generated@@70)) (= (type $generated@@640) $generated@@70)) ($generated@@141 $generated@@638 ($generated@@427 $generated@@639 $generated@@640))) (and (and ($generated@@141 ($generated@@331 $generated@@638) ($generated@@254 $generated@@639)) ($generated@@141 ($generated@@371 $generated@@638) ($generated@@254 $generated@@640))) ($generated@@141 ($generated@@401 $generated@@638) ($generated@@254 ($generated@@144 $generated@@639 $generated@@640)))))
 :pattern ( ($generated@@141 $generated@@638 ($generated@@427 $generated@@639 $generated@@640)))
)))
(assert (forall (($generated@@641 T@U) ) (!  (=> (= (type $generated@@641) $generated@@2) ($generated@@141 $generated@@641 $generated@@46))
 :pattern ( ($generated@@141 $generated@@641 $generated@@46))
)))
(assert (forall (($generated@@642 T@U) ) (!  (=> (= (type $generated@@642) $generated@@3) ($generated@@141 $generated@@642 $generated@@47))
 :pattern ( ($generated@@141 $generated@@642 $generated@@47))
)))
(assert (forall (($generated@@643 T@U) ) (!  (=> (= (type $generated@@643) $generated@@4) ($generated@@141 $generated@@643 $generated@@44))
 :pattern ( ($generated@@141 $generated@@643 $generated@@44))
)))
(assert (forall (($generated@@644 T@U) ) (!  (=> (= (type $generated@@644) $generated@@461) ($generated@@141 $generated@@644 $generated@@45))
 :pattern ( ($generated@@141 $generated@@644 $generated@@45))
)))
(assert (forall (($generated@@645 T@U) ) (!  (=> (= (type $generated@@645) $generated@@154) ($generated@@141 $generated@@645 $generated@@48))
 :pattern ( ($generated@@141 $generated@@645 $generated@@48))
)))
(push 1)
(declare-fun ControlFlow (Int Int) Int)
(declare-fun $generated@@646 () T@U)
(declare-fun $generated@@647 () T@U)
(declare-fun $generated@@648 () T@U)
(declare-fun $generated@@649 (T@U) Bool)
(declare-fun $generated@@650 () T@U)
(declare-fun $generated@@651 () T@U)
(declare-fun $generated@@652 () Int)
(assert  (and (and (and (and (= (type $generated@@646) ($generated@@169 $generated@@83 $generated@@4)) (= (type $generated@@647) $generated@@83)) (= (type $generated@@648) ($generated@@82 $generated@@83 $generated@@84))) (= (type $generated@@650) $generated@@145)) (= (type $generated@@651) $generated@@145)))
(set-option :timeout 0)
(set-option :rlimit 0)
(assert (not
 (=> (= (ControlFlow 0 0) 3) (let (($generated@@653  (=> (and (= $generated@@646 ($generated@@168 $generated@@647 $generated@@648 $generated@@60 false)) (= (ControlFlow 0 2) (- 0 1))) ($generated@@141 ($generated@@8 ($generated@@259 55)) $generated@@138))))
(let (($generated@@654  (=> (and ($generated@@224 $generated@@648) ($generated@@649 $generated@@648)) (=> (and (and (and ($generated@@141 $generated@@650 ($generated@@223 $generated@@138)) ($generated@@80 $generated@@650 ($generated@@223 $generated@@138) $generated@@648)) ($generated@@381 $generated@@650)) (and (and ($generated@@141 $generated@@651 ($generated@@223 $generated@@138)) ($generated@@80 $generated@@651 ($generated@@223 $generated@@138) $generated@@648)) (and (= 1 $generated@@652) (= (ControlFlow 0 3) 2)))) $generated@@653))))
$generated@@654)))
))
(check-sat)
(pop 1)
; Valid
(get-info :rlimit)
(reset)
(set-option :rlimit 0)
; did a full reset
(reset)
(set-option :print-success false)
(set-info :smt-lib-version 2.6)
(set-option :auto_config false)
(set-option :type_check true)
(set-option :smt.case_split 3)
(set-option :smt.qi.eager_threshold 100)
(set-option :smt.delay_units true)
(set-option :smt.arith.solver 2)
(set-option :smt.mbqi false)
(set-option :model.compact false)
(set-option :model.v2 true)
(set-option :pp.bv_literals false)
; done setting options


(set-info :category "industrial")
(declare-sort |T@U| 0)
(declare-sort |T@T| 0)
(declare-fun real_pow (Real Real) Real)
(declare-fun UOrdering2 (|T@U| |T@U|) Bool)
(declare-fun UOrdering3 (|T@T| |T@U| |T@U|) Bool)
(declare-fun tickleBool (Bool) Bool)
(assert (and (tickleBool true) (tickleBool false)))
(declare-fun $generated (T@U) Int)
(declare-fun $generated@@0 (T@U) Bool)
(declare-fun $generated@@1 (T@T) Int)
(declare-fun $generated@@2 () T@T)
(declare-fun $generated@@3 () T@T)
(declare-fun $generated@@4 () T@T)
(declare-fun $generated@@5 () T@T)
(declare-fun $generated@@6 () T@T)
(declare-fun $generated@@7 () T@T)
(declare-fun $generated@@8 (Int) T@U)
(declare-fun type (T@U) T@T)
(declare-fun $generated@@9 (Real) T@U)
(declare-fun $generated@@10 (T@U) Real)
(declare-fun $generated@@11 (Bool) T@U)
(declare-fun $generated@@12 (RoundingMode) T@U)
(declare-fun $generated@@13 (T@U) RoundingMode)
(declare-fun $generated@@14 (String) T@U)
(declare-fun $generated@@15 (T@U) String)
(declare-fun $generated@@16 ((RegEx String)) T@U)
(declare-fun $generated@@17 (T@U) (RegEx String))
(declare-fun $generated@@44 () T@U)
(declare-fun $generated@@45 () T@U)
(declare-fun $generated@@46 () T@U)
(declare-fun $generated@@47 () T@U)
(declare-fun $generated@@48 () T@U)
(declare-fun $generated@@49 () T@U)
(declare-fun $generated@@50 () T@U)
(declare-fun $generated@@51 () T@U)
(declare-fun $generated@@52 () T@U)
(declare-fun $generated@@53 () T@U)
(declare-fun $generated@@54 () T@U)
(declare-fun $generated@@55 () T@U)
(declare-fun $generated@@56 () T@U)
(declare-fun $generated@@57 () T@U)
(declare-fun $generated@@58 () T@U)
(declare-fun $generated@@59 () T@U)
(declare-fun $generated@@60 () T@U)
(declare-fun $generated@@61 () T@U)
(declare-fun $generated@@62 () T@U)
(declare-fun $generated@@63 () T@U)
(declare-fun $generated@@64 () T@U)
(declare-fun $generated@@65 () T@U)
(declare-fun $generated@@66 () T@U)
(declare-fun $generated@@67 () T@U)
(declare-fun $generated@@68 () T@U)
(declare-fun $generated@@69 () T@U)
(declare-fun $generated@@70 () T@U)
(declare-fun $generated@@71 () T@U)
(declare-fun $generated@@72 () T@U)
(declare-fun $generated@@73 () T@U)
(declare-fun $generated@@74 () T@T)
(declare-fun $generated@@75 () T@T)
(declare-fun $generated@@76 (T@T) T@T)
(declare-fun $generated@@77 (T@T) T@T)
(declare-fun $generated@@78 () T@T)
(declare-fun $generated@@79 () T@T)
(declare-fun $generated@@80 () T@T)
(declare-fun $generated@@81 () T@T)
(declare-fun $generated@@84 (T@U) Int)
(declare-fun $generated@@85 (T@U) T@U)
(declare-fun $generated@@87 (T@U) T@U)
(declare-fun $generated@@89 (T@U T@U T@U) Bool)
(declare-fun $generated@@90 (Int) T@U)
(declare-fun $generated@@91 (T@T T@T) T@T)
(declare-fun $generated@@92 () T@T)
(declare-fun $generated@@93 () T@T)
(declare-fun $generated@@94 (T@T) T@T)
(declare-fun $generated@@95 (T@T) T@T)
(declare-fun $generated@@96 (T@U T@U) T@U)
(declare-fun $generated@@97 (T@U T@U T@U) T@U)
(declare-fun $generated@@98 (T@U T@U) T@U)
(declare-fun $generated@@99 (T@U T@U T@U) T@U)
(declare-fun $generated@@147 () T@U)
(declare-fun $generated@@148 (T@U) T@U)
(declare-fun $generated@@149 (T@U) Bool)
(declare-fun $generated@@150 () T@U)
(declare-fun $generated@@151 (T@U) T@U)
(declare-fun $generated@@152 (T@U T@U) Bool)
(declare-fun $generated@@153 () T@T)
(declare-fun $generated@@159 (T@U T@U) Bool)
(declare-fun $generated@@166 (T@U T@U) Bool)
(declare-fun $generated@@168 (T@U) T@U)
(declare-fun $generated@@173 (T@U) Bool)
(declare-fun $generated@@174 (T@U T@U) T@U)
(declare-fun $generated@@175 () T@T)
(declare-fun $generated@@181 (T@U T@U) Bool)
(declare-fun $generated@@182 (T@U) T@U)
(declare-fun $generated@@183 (T@U) T@U)
(declare-fun $generated@@188 (T@U) T@U)
(declare-fun $generated@@189 (T@U) Bool)
(declare-fun $generated@@193 (T@U T@U T@U) T@U)
(declare-fun $generated@@194 (T@U T@U T@U Bool) T@U)
(declare-fun $generated@@195 (T@T T@T) T@T)
(declare-fun $generated@@196 (T@T) T@T)
(declare-fun $generated@@197 (T@T) T@T)
(declare-fun $generated@@198 (T@U T@U T@U T@U) T@U)
(declare-fun $generated@@249 (T@U T@U) T@U)
(declare-fun $generated@@250 () T@T)
(declare-fun $generated@@260 (T@U T@U) T@U)
(declare-fun $generated@@267 (T@T T@U T@U) T@U)
(declare-fun $generated@@271 (T@U) Bool)
(declare-fun $generated@@274 (T@U) T@U)
(declare-fun $generated@@279 (T@U) T@U)
(declare-fun $generated@@284 (Int) Int)
(declare-fun $generated@@286 (T@U) T@U)
(declare-fun $generated@@290 (T@U T@U T@U T@U T@U) T@U)
(declare-fun $generated@@291 () T@U)
(declare-fun $generated@@292 (T@U T@U) Bool)
(declare-fun $generated@@293 (T@T) T@U)
(declare-fun $generated@@305 (T@U T@U T@U) Bool)
(declare-fun $generated@@311 (T@U) T@U)
(declare-fun $generated@@317 (T@T) T@U)
(declare-fun $generated@@318 (T@U) Int)
(declare-fun $generated@@319 (T@T) T@T)
(declare-fun $generated@@320 (T@T) T@T)
(declare-fun $generated@@330 (T@U) T@U)
(declare-fun $generated@@343 (T@U) Int)
(declare-fun $generated@@344 (T@T) T@U)
(declare-fun $generated@@349 (T@U) T@U)
(declare-fun $generated@@353 (T@U) T@U)
(declare-fun $generated@@354 (T@T T@T) T@U)
(declare-fun $generated@@355 (T@T T@T) T@T)
(declare-fun $generated@@356 (T@T) T@T)
(declare-fun $generated@@357 (T@T) T@T)
(declare-fun $generated@@371 (T@U) T@U)
(declare-fun $generated@@372 (T@T T@T) T@U)
(declare-fun $generated@@373 (T@T T@T) T@T)
(declare-fun $generated@@374 (T@T) T@T)
(declare-fun $generated@@375 (T@T) T@T)
(declare-fun $generated@@389 (T@U T@U) Bool)
(declare-fun $generated@@399 (T@U T@U) T@U)
(declare-fun $generated@@409 (T@U T@U T@U T@U T@U) T@U)
(declare-fun $generated@@410 (T@U T@U T@U) T@U)
(declare-fun $generated@@411 (T@T T@T T@T) T@T)
(declare-fun $generated@@412 (T@U T@U T@U) T@U)
(declare-fun $generated@@413 (T@T) T@T)
(declare-fun $generated@@414 (T@T) T@T)
(declare-fun $generated@@415 (T@T) T@T)
(declare-fun $generated@@416 (T@U T@U T@U T@U) T@U)
(declare-fun $generated@@484 (T@U) T@U)
(declare-fun $generated@@495 (T@U) T@U)
(declare-fun $generated@@505 (T@U T@U T@U T@U T@U) Bool)
(declare-fun $generated@@527 (T@U) T@U)
(declare-fun $generated@@528 (T@T T@U) T@U)
(declare-fun $generated@@529 (T@U) T@U)
(declare-fun $generated@@538 (T@U) T@U)
(declare-fun $generated@@539 (T@U) T@U)
(declare-fun $generated@@564 (T@U T@U) T@U)
(declare-fun $generated@@572 (T@U T@U) T@U)
(declare-fun $generated@@591 (T@T) T@U)
(declare-fun $generated@@612 (T@U) T@U)
(declare-fun $generated@@620 () T@T)
(declare-fun $generated@@635 (T@U) T@U)
(declare-fun $generated@@639 (T@U) T@U)
(declare-fun $generated@@645 (T@U) T@U)
(declare-fun $generated@@649 (T@U) T@U)
(declare-fun $generated@@655 (T@U) T@U)
(declare-fun $generated@@659 (T@U) T@U)
(declare-fun $generated@@663 (T@U) T@U)
(declare-fun $generated@@667 (T@U) T@U)
(declare-fun $generated@@673 (T@U) T@U)
(declare-fun $generated@@677 (T@U) T@U)
(declare-fun $generated@@685 (T@U) T@U)
(declare-fun $generated@@686 (T@U Int) T@U)
(declare-fun $generated@@695 (T@U) Int)
(declare-fun $generated@@697 (T@U) T@U)
(declare-fun $generated@@701 (T@U) T@U)
(declare-fun $generated@@705 (T@U) T@U)
(declare-fun $generated@@709 (T@U) T@U)
(declare-fun $generated@@713 (T@U) T@U)
(declare-fun $generated@@716 (T@U) T@U)
(declare-fun $generated@@729 (T@U) Int)
(declare-fun $generated@@730 (T@U) Int)
(declare-fun $generated@@877 (T@U) Int)
(assert  (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (= ($generated@@1 $generated@@2) 0) (= ($generated@@1 $generated@@3) 1)) (= ($generated@@1 $generated@@4) 2)) (= ($generated@@1 $generated@@5) 3)) (= ($generated@@1 $generated@@6) 4)) (= ($generated@@1 $generated@@7) 5)) (forall (($generated@@18 Int) ) (! (= ($generated ($generated@@8 $generated@@18)) $generated@@18)
 :pattern ( ($generated@@8 $generated@@18))
))) (forall (($generated@@19 T@U) ) (!  (=> (= (type $generated@@19) $generated@@2) (= ($generated@@8 ($generated $generated@@19)) $generated@@19))
 :pattern ( ($generated $generated@@19))
))) (forall (($generated@@20 Int) ) (! (= (type ($generated@@8 $generated@@20)) $generated@@2)
 :pattern ( ($generated@@8 $generated@@20))
))) (forall (($generated@@21 Real) ) (! (= ($generated@@10 ($generated@@9 $generated@@21)) $generated@@21)
 :pattern ( ($generated@@9 $generated@@21))
))) (forall (($generated@@22 T@U) ) (!  (=> (= (type $generated@@22) $generated@@3) (= ($generated@@9 ($generated@@10 $generated@@22)) $generated@@22))
 :pattern ( ($generated@@10 $generated@@22))
))) (forall (($generated@@23 Real) ) (! (= (type ($generated@@9 $generated@@23)) $generated@@3)
 :pattern ( ($generated@@9 $generated@@23))
))) (forall (($generated@@24 Bool) ) (! (= ($generated@@0 ($generated@@11 $generated@@24)) $generated@@24)
 :pattern ( ($generated@@11 $generated@@24))
))) (forall (($generated@@25 T@U) ) (!  (=> (= (type $generated@@25) $generated@@4) (= ($generated@@11 ($generated@@0 $generated@@25)) $generated@@25))
 :pattern ( ($generated@@0 $generated@@25))
))) (forall (($generated@@26 Bool) ) (! (= (type ($generated@@11 $generated@@26)) $generated@@4)
 :pattern ( ($generated@@11 $generated@@26))
))) (forall (($generated@@27 RoundingMode) ) (! (= ($generated@@13 ($generated@@12 $generated@@27)) $generated@@27)
 :pattern ( ($generated@@12 $generated@@27))
))) (forall (($generated@@28 T@U) ) (!  (=> (= (type $generated@@28) $generated@@5) (= ($generated@@12 ($generated@@13 $generated@@28)) $generated@@28))
 :pattern ( ($generated@@13 $generated@@28))
))) (forall (($generated@@29 RoundingMode) ) (! (= (type ($generated@@12 $generated@@29)) $generated@@5)
 :pattern ( ($generated@@12 $generated@@29))
))) (forall (($generated@@30 String) ) (! (= ($generated@@15 ($generated@@14 $generated@@30)) $generated@@30)
 :pattern ( ($generated@@14 $generated@@30))
))) (forall (($generated@@31 T@U) ) (!  (=> (= (type $generated@@31) $generated@@6) (= ($generated@@14 ($generated@@15 $generated@@31)) $generated@@31))
 :pattern ( ($generated@@15 $generated@@31))
))) (forall (($generated@@32 String) ) (! (= (type ($generated@@14 $generated@@32)) $generated@@6)
 :pattern ( ($generated@@14 $generated@@32))
))) (forall (($generated@@33 (RegEx String)) ) (! (= ($generated@@17 ($generated@@16 $generated@@33)) $generated@@33)
 :pattern ( ($generated@@16 $generated@@33))
))) (forall (($generated@@34 T@U) ) (!  (=> (= (type $generated@@34) $generated@@7) (= ($generated@@16 ($generated@@17 $generated@@34)) $generated@@34))
 :pattern ( ($generated@@17 $generated@@34))
))) (forall (($generated@@35 (RegEx String)) ) (! (= (type ($generated@@16 $generated@@35)) $generated@@7)
 :pattern ( ($generated@@16 $generated@@35))
))))
(assert (forall (($generated@@36 T@U) ) (! (UOrdering2 $generated@@36 $generated@@36)
 :no-pattern ($generated $generated@@36)
 :no-pattern ($generated@@0 $generated@@36)
)))
(assert (forall (($generated@@37 T@U) ($generated@@38 T@U) ($generated@@39 T@U) ) (! (let (($generated@@40 (type $generated@@37)))
 (=> (and (and (= (type $generated@@38) $generated@@40) (= (type $generated@@39) $generated@@40)) (and (UOrdering2 $generated@@37 $generated@@38) (UOrdering2 $generated@@38 $generated@@39))) (UOrdering2 $generated@@37 $generated@@39)))
 :pattern ( (UOrdering2 $generated@@37 $generated@@38) (UOrdering2 $generated@@38 $generated@@39))
)))
(assert (forall (($generated@@41 T@U) ($generated@@42 T@U) ) (! (let (($generated@@43 (type $generated@@41)))
 (=> (= (type $generated@@42) $generated@@43) (=> (and (UOrdering2 $generated@@41 $generated@@42) (UOrdering2 $generated@@42 $generated@@41)) (= $generated@@41 $generated@@42))))
 :pattern ( (UOrdering2 $generated@@41 $generated@@42) (UOrdering2 $generated@@42 $generated@@41))
)))
(assert  (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (= ($generated@@1 $generated@@74) 6) (= (type $generated@@44) $generated@@74)) (= (type $generated@@45) $generated@@74)) (= (type $generated@@46) $generated@@74)) (= (type $generated@@47) $generated@@74)) (= (type $generated@@48) $generated@@74)) (= ($generated@@1 $generated@@75) 7)) (= (type $generated@@49) $generated@@75)) (= (type $generated@@50) $generated@@75)) (= (type $generated@@51) $generated@@75)) (= (type $generated@@52) $generated@@75)) (= (type $generated@@53) $generated@@75)) (= (type $generated@@54) $generated@@75)) (= (type $generated@@55) $generated@@75)) (= (type $generated@@56) $generated@@75)) (= (type $generated@@57) $generated@@75)) (= (type $generated@@58) $generated@@75)) (= (type $generated@@59) $generated@@75)) (forall (($generated@@82 T@T) ) (= ($generated@@1 ($generated@@76 $generated@@82)) 8))) (forall (($generated@@83 T@T) ) (! (= ($generated@@77 ($generated@@76 $generated@@83)) $generated@@83)
 :pattern ( ($generated@@76 $generated@@83))
))) (= (type $generated@@60) ($generated@@76 $generated@@4))) (= ($generated@@1 $generated@@78) 9)) (= (type $generated@@61) $generated@@78)) (= (type $generated@@62) $generated@@75)) (= (type $generated@@63) $generated@@75)) (= ($generated@@1 $generated@@79) 10)) (= (type $generated@@64) $generated@@79)) (= (type $generated@@65) $generated@@75)) (= ($generated@@1 $generated@@80) 11)) (= (type $generated@@66) $generated@@80)) (= (type $generated@@67) $generated@@75)) (= (type $generated@@68) $generated@@75)) (= ($generated@@1 $generated@@81) 12)) (= (type $generated@@69) $generated@@81)) (= (type $generated@@70) $generated@@81)) (= (type $generated@@71) $generated@@81)) (= (type $generated@@72) $generated@@81)) (= (type $generated@@73) $generated@@78)))
(assert (distinct $generated@@44 $generated@@45 $generated@@46 $generated@@47 $generated@@48 $generated@@49 $generated@@50 $generated@@51 $generated@@52 $generated@@53 $generated@@54 $generated@@55 $generated@@56 $generated@@57 $generated@@58 $generated@@59 $generated@@60 $generated@@61 $generated@@62 $generated@@63 $generated@@64 $generated@@65 $generated@@66 $generated@@67 $generated@@68 $generated@@69 $generated@@70 $generated@@71 $generated@@72 $generated@@73)
)
(assert (= ($generated@@84 $generated@@60) 0))
(assert (forall (($generated@@86 T@U) ) (! (= (type ($generated@@85 $generated@@86)) $generated@@75)
 :pattern ( ($generated@@85 $generated@@86))
)))
(assert (= ($generated@@85 $generated@@44) $generated@@49))
(assert (= ($generated@@85 $generated@@45) $generated@@50))
(assert (= ($generated@@85 $generated@@46) $generated@@51))
(assert (= ($generated@@85 $generated@@47) $generated@@52))
(assert (= ($generated@@85 $generated@@48) $generated@@53))
(assert (forall (($generated@@88 T@U) ) (! (= (type ($generated@@87 $generated@@88)) $generated@@78)
 :pattern ( ($generated@@87 $generated@@88))
)))
(assert (= ($generated@@87 $generated@@60) $generated@@61))
(assert  (and (and (and (and (and (and (and (and (and (and (and (and (and (forall (($generated@@100 T@T) ($generated@@101 T@T) ) (= ($generated@@1 ($generated@@91 $generated@@100 $generated@@101)) 13)) (forall (($generated@@102 T@T) ($generated@@103 T@T) ) (! (= ($generated@@94 ($generated@@91 $generated@@102 $generated@@103)) $generated@@102)
 :pattern ( ($generated@@91 $generated@@102 $generated@@103))
))) (forall (($generated@@104 T@T) ($generated@@105 T@T) ) (! (= ($generated@@95 ($generated@@91 $generated@@104 $generated@@105)) $generated@@105)
 :pattern ( ($generated@@91 $generated@@104 $generated@@105))
))) (forall (($generated@@106 T@U) ($generated@@107 T@U) ) (! (let (($generated@@108 ($generated@@95 (type $generated@@106))))
(= (type ($generated@@96 $generated@@106 $generated@@107)) $generated@@108))
 :pattern ( ($generated@@96 $generated@@106 $generated@@107))
))) (forall (($generated@@109 T@U) ($generated@@110 T@U) ($generated@@111 T@U) ) (! (let (($generated@@112 (type $generated@@111)))
(let (($generated@@113 (type $generated@@110)))
(= (type ($generated@@97 $generated@@109 $generated@@110 $generated@@111)) ($generated@@91 $generated@@113 $generated@@112))))
 :pattern ( ($generated@@97 $generated@@109 $generated@@110 $generated@@111))
))) (forall (($generated@@114 T@U) ($generated@@115 T@U) ($generated@@116 T@U) ) (! (let (($generated@@117 ($generated@@95 (type $generated@@114))))
 (=> (= (type $generated@@116) $generated@@117) (= ($generated@@96 ($generated@@97 $generated@@114 $generated@@115 $generated@@116) $generated@@115) $generated@@116)))
 :weight 0
))) (and (forall (($generated@@118 T@U) ($generated@@119 T@U) ($generated@@120 T@U) ($generated@@121 T@U) ) (!  (or (= $generated@@120 $generated@@121) (= ($generated@@96 ($generated@@97 $generated@@119 $generated@@120 $generated@@118) $generated@@121) ($generated@@96 $generated@@119 $generated@@121)))
 :weight 0
)) (forall (($generated@@122 T@U) ($generated@@123 T@U) ($generated@@124 T@U) ($generated@@125 T@U) ) (!  (or true (= ($generated@@96 ($generated@@97 $generated@@123 $generated@@124 $generated@@122) $generated@@125) ($generated@@96 $generated@@123 $generated@@125)))
 :weight 0
)))) (= ($generated@@1 $generated@@92) 14)) (forall (($generated@@126 T@U) ($generated@@127 T@U) ) (! (let (($generated@@128 ($generated@@77 (type $generated@@127))))
(= (type ($generated@@98 $generated@@126 $generated@@127)) $generated@@128))
 :pattern ( ($generated@@98 $generated@@126 $generated@@127))
))) (= ($generated@@1 $generated@@93) 15)) (forall (($generated@@129 T@U) ($generated@@130 T@U) ($generated@@131 T@U) ) (! (= (type ($generated@@99 $generated@@129 $generated@@130 $generated@@131)) $generated@@93)
 :pattern ( ($generated@@99 $generated@@129 $generated@@130 $generated@@131))
))) (forall (($generated@@132 T@U) ($generated@@133 T@U) ($generated@@134 T@U) ) (! (let (($generated@@135 ($generated@@77 (type $generated@@133))))
 (=> (= (type $generated@@134) $generated@@135) (= ($generated@@98 ($generated@@99 $generated@@132 $generated@@133 $generated@@134) $generated@@133) $generated@@134)))
 :weight 0
))) (and (forall (($generated@@136 T@U) ($generated@@137 T@U) ($generated@@138 T@U) ($generated@@139 T@U) ) (!  (or (= $generated@@138 $generated@@139) (= ($generated@@98 ($generated@@99 $generated@@137 $generated@@138 $generated@@136) $generated@@139) ($generated@@98 $generated@@137 $generated@@139)))
 :weight 0
)) (forall (($generated@@140 T@U) ($generated@@141 T@U) ($generated@@142 T@U) ($generated@@143 T@U) ) (!  (or true (= ($generated@@98 ($generated@@99 $generated@@141 $generated@@142 $generated@@140) $generated@@143) ($generated@@98 $generated@@141 $generated@@143)))
 :weight 0
)))) (forall (($generated@@144 Int) ) (! (= (type ($generated@@90 $generated@@144)) $generated@@74)
 :pattern ( ($generated@@90 $generated@@144))
))))
(assert (forall (($generated@@145 T@U) ($generated@@146 T@U) ) (!  (=> (and (= (type $generated@@145) $generated@@2) (= (type $generated@@146) ($generated@@91 $generated@@92 $generated@@93))) ($generated@@89 $generated@@145 ($generated@@90 0) $generated@@146))
 :pattern ( ($generated@@89 $generated@@145 ($generated@@90 0) $generated@@146))
)))
(assert  (and (and (and (and (= ($generated@@1 $generated@@153) 16) (= (type $generated@@147) ($generated@@76 $generated@@153))) (forall (($generated@@154 T@U) ) (! (= (type ($generated@@148 $generated@@154)) $generated@@74)
 :pattern ( ($generated@@148 $generated@@154))
))) (= (type $generated@@150) $generated@@92)) (forall (($generated@@155 T@U) ) (! (= (type ($generated@@151 $generated@@155)) $generated@@74)
 :pattern ( ($generated@@151 $generated@@155))
))))
(assert (forall (($generated@@156 T@U) ($generated@@157 T@U) ($generated@@158 T@U) ) (!  (=> (and (and (and (= (type $generated@@156) $generated@@74) (= (type $generated@@157) ($generated@@91 $generated@@92 $generated@@93))) (= (type $generated@@158) $generated@@92)) (and ($generated@@149 $generated@@157) (and (not (= $generated@@158 $generated@@150)) (= ($generated@@151 $generated@@158) ($generated@@148 $generated@@156))))) ($generated@@152 ($generated@@98 ($generated@@96 $generated@@157 $generated@@158) $generated@@147) $generated@@156))
 :pattern ( ($generated@@98 ($generated@@96 $generated@@157 $generated@@158) $generated@@147) ($generated@@148 $generated@@156))
)))
(assert (forall (($generated@@160 T@U) ($generated@@161 T@U) ) (!  (=> (and (and (= (type $generated@@160) ($generated@@91 $generated@@92 $generated@@93)) (= (type $generated@@161) ($generated@@91 $generated@@92 $generated@@93))) ($generated@@159 $generated@@160 $generated@@161)) (forall (($generated@@162 T@U) ) (!  (=> (and (= (type $generated@@162) $generated@@92) ($generated@@0 ($generated@@98 ($generated@@96 $generated@@160 $generated@@162) $generated@@60))) ($generated@@0 ($generated@@98 ($generated@@96 $generated@@161 $generated@@162) $generated@@60)))
 :pattern ( ($generated@@98 ($generated@@96 $generated@@161 $generated@@162) $generated@@60))
)))
 :pattern ( ($generated@@159 $generated@@160 $generated@@161))
)))
(assert (forall (($generated@@163 T@U) ($generated@@164 T@U) ($generated@@165 T@U) ) (!  (=> (and (and (= (type $generated@@163) $generated@@74) (= (type $generated@@164) $generated@@92)) (= (type $generated@@165) ($generated@@91 $generated@@92 $generated@@93))) (= ($generated@@89 $generated@@164 ($generated@@148 $generated@@163) $generated@@165)  (or (= $generated@@164 $generated@@150) ($generated@@0 ($generated@@98 ($generated@@96 $generated@@165 $generated@@164) $generated@@60)))))
 :pattern ( ($generated@@89 $generated@@164 ($generated@@148 $generated@@163) $generated@@165))
)))
(assert (forall (($generated@@167 T@U) ) (!  (=> (= (type $generated@@167) $generated@@2) ($generated@@166 $generated@@167 ($generated@@90 0)))
 :pattern ( ($generated@@166 $generated@@167 ($generated@@90 0)))
)))
(assert (forall (($generated@@169 T@U) ) (! (= (type ($generated@@168 $generated@@169)) $generated@@74)
 :pattern ( ($generated@@168 $generated@@169))
)))
(assert (forall (($generated@@170 T@U) ($generated@@171 T@U) ($generated@@172 T@U) ) (!  (=> (and (and (= (type $generated@@170) $generated@@74) (= (type $generated@@171) $generated@@92)) (= (type $generated@@172) ($generated@@91 $generated@@92 $generated@@93))) (= ($generated@@89 $generated@@171 ($generated@@168 $generated@@170) $generated@@172) ($generated@@89 $generated@@171 ($generated@@148 $generated@@170) $generated@@172)))
 :pattern ( ($generated@@89 $generated@@171 ($generated@@168 $generated@@170) $generated@@172))
)))
(assert  (and (= ($generated@@1 $generated@@175) 17) (forall (($generated@@176 T@U) ($generated@@177 T@U) ) (! (= (type ($generated@@174 $generated@@176 $generated@@177)) $generated@@74)
 :pattern ( ($generated@@174 $generated@@176 $generated@@177))
))))
(assert (forall (($generated@@178 T@U) ($generated@@179 T@U) ($generated@@180 T@U) ) (!  (=> (and (and (and (= (type $generated@@178) $generated@@74) (= (type $generated@@179) $generated@@74)) (= (type $generated@@180) $generated@@175)) ($generated@@166 $generated@@180 ($generated@@174 $generated@@178 $generated@@179))) ($generated@@173 $generated@@180))
 :pattern ( ($generated@@173 $generated@@180) ($generated@@166 $generated@@180 ($generated@@174 $generated@@178 $generated@@179)))
)))
(assert  (and (forall (($generated@@184 T@U) ) (! (= (type ($generated@@182 $generated@@184)) $generated@@153)
 :pattern ( ($generated@@182 $generated@@184))
)) (forall (($generated@@185 T@U) ) (! (= (type ($generated@@183 $generated@@185)) $generated@@153)
 :pattern ( ($generated@@183 $generated@@185))
))))
(assert (forall (($generated@@186 T@U) ($generated@@187 T@U) ) (!  (=> (and (and (= (type $generated@@186) $generated@@175) (= (type $generated@@187) $generated@@175)) true) (= ($generated@@181 $generated@@186 $generated@@187)  (and (= ($generated@@182 $generated@@186) ($generated@@182 $generated@@187)) (= ($generated@@183 $generated@@186) ($generated@@183 $generated@@187)))))
 :pattern ( ($generated@@181 $generated@@186 $generated@@187))
)))
(assert (forall (($generated@@190 T@U) ) (! (= (type ($generated@@188 $generated@@190)) $generated@@74)
 :pattern ( ($generated@@188 $generated@@190))
)))
(assert (forall (($generated@@191 T@U) ($generated@@192 T@U) ) (!  (=> (and (and (= (type $generated@@191) ($generated@@91 $generated@@153 $generated@@2)) (= (type $generated@@192) $generated@@74)) ($generated@@166 $generated@@191 ($generated@@188 $generated@@192))) ($generated@@189 $generated@@191))
 :pattern ( ($generated@@166 $generated@@191 ($generated@@188 $generated@@192)))
)))
(assert  (and (and (and (and (and (and (and (forall (($generated@@199 T@T) ($generated@@200 T@T) ) (= ($generated@@1 ($generated@@195 $generated@@199 $generated@@200)) 18)) (forall (($generated@@201 T@T) ($generated@@202 T@T) ) (! (= ($generated@@196 ($generated@@195 $generated@@201 $generated@@202)) $generated@@201)
 :pattern ( ($generated@@195 $generated@@201 $generated@@202))
))) (forall (($generated@@203 T@T) ($generated@@204 T@T) ) (! (= ($generated@@197 ($generated@@195 $generated@@203 $generated@@204)) $generated@@204)
 :pattern ( ($generated@@195 $generated@@203 $generated@@204))
))) (forall (($generated@@205 T@U) ($generated@@206 T@U) ($generated@@207 T@U) ) (! (let (($generated@@208 ($generated@@197 (type $generated@@205))))
(= (type ($generated@@193 $generated@@205 $generated@@206 $generated@@207)) $generated@@208))
 :pattern ( ($generated@@193 $generated@@205 $generated@@206 $generated@@207))
))) (forall (($generated@@209 T@U) ($generated@@210 T@U) ($generated@@211 T@U) ($generated@@212 T@U) ) (! (let (($generated@@213 (type $generated@@212)))
(let (($generated@@214 (type $generated@@210)))
(= (type ($generated@@198 $generated@@209 $generated@@210 $generated@@211 $generated@@212)) ($generated@@195 $generated@@214 $generated@@213))))
 :pattern ( ($generated@@198 $generated@@209 $generated@@210 $generated@@211 $generated@@212))
))) (forall (($generated@@215 T@U) ($generated@@216 T@U) ($generated@@217 T@U) ($generated@@218 T@U) ) (! (let (($generated@@219 ($generated@@197 (type $generated@@215))))
 (=> (= (type $generated@@218) $generated@@219) (= ($generated@@193 ($generated@@198 $generated@@215 $generated@@216 $generated@@217 $generated@@218) $generated@@216 $generated@@217) $generated@@218)))
 :weight 0
))) (and (and (forall (($generated@@220 T@U) ($generated@@221 T@U) ($generated@@222 T@U) ($generated@@223 T@U) ($generated@@224 T@U) ($generated@@225 T@U) ) (!  (or (= $generated@@222 $generated@@224) (= ($generated@@193 ($generated@@198 $generated@@221 $generated@@222 $generated@@223 $generated@@220) $generated@@224 $generated@@225) ($generated@@193 $generated@@221 $generated@@224 $generated@@225)))
 :weight 0
)) (forall (($generated@@226 T@U) ($generated@@227 T@U) ($generated@@228 T@U) ($generated@@229 T@U) ($generated@@230 T@U) ($generated@@231 T@U) ) (!  (or (= $generated@@229 $generated@@231) (= ($generated@@193 ($generated@@198 $generated@@227 $generated@@228 $generated@@229 $generated@@226) $generated@@230 $generated@@231) ($generated@@193 $generated@@227 $generated@@230 $generated@@231)))
 :weight 0
))) (forall (($generated@@232 T@U) ($generated@@233 T@U) ($generated@@234 T@U) ($generated@@235 T@U) ($generated@@236 T@U) ($generated@@237 T@U) ) (!  (or true (= ($generated@@193 ($generated@@198 $generated@@233 $generated@@234 $generated@@235 $generated@@232) $generated@@236 $generated@@237) ($generated@@193 $generated@@233 $generated@@236 $generated@@237)))
 :weight 0
)))) (forall (($generated@@238 T@U) ($generated@@239 T@U) ($generated@@240 T@U) ($generated@@241 Bool) ) (! (= (type ($generated@@194 $generated@@238 $generated@@239 $generated@@240 $generated@@241)) ($generated@@195 $generated@@92 $generated@@4))
 :pattern ( ($generated@@194 $generated@@238 $generated@@239 $generated@@240 $generated@@241))
))))
(assert (forall (($generated@@242 T@U) ($generated@@243 T@U) ($generated@@244 T@U) ($generated@@245 Bool) ($generated@@246 T@U) ($generated@@247 T@U) ) (! (let (($generated@@248 ($generated@@77 (type $generated@@247))))
 (=> (and (and (and (and (= (type $generated@@242) $generated@@92) (= (type $generated@@243) ($generated@@91 $generated@@92 $generated@@93))) (= (type $generated@@244) ($generated@@76 $generated@@4))) (= (type $generated@@246) $generated@@92)) (= (type $generated@@247) ($generated@@76 $generated@@248))) (= ($generated@@0 ($generated@@193 ($generated@@194 $generated@@242 $generated@@243 $generated@@244 $generated@@245) $generated@@246 $generated@@247))  (=> (and (not (= $generated@@246 $generated@@242)) ($generated@@0 ($generated@@98 ($generated@@96 $generated@@243 $generated@@246) $generated@@244))) $generated@@245))))
 :pattern ( ($generated@@193 ($generated@@194 $generated@@242 $generated@@243 $generated@@244 $generated@@245) $generated@@246 $generated@@247))
)))
(assert  (and (= ($generated@@1 $generated@@250) 19) (forall (($generated@@251 T@U) ($generated@@252 T@U) ) (! (= (type ($generated@@249 $generated@@251 $generated@@252)) $generated@@74)
 :pattern ( ($generated@@249 $generated@@251 $generated@@252))
))))
(assert (forall (($generated@@253 T@U) ($generated@@254 T@U) ($generated@@255 T@U) ($generated@@256 T@U) ($generated@@257 T@U) ) (!  (=> (and (and (and (and (and (= (type $generated@@253) $generated@@250) (= (type $generated@@254) $generated@@74)) (= (type $generated@@255) $generated@@74)) (= (type $generated@@256) $generated@@74)) (= (type $generated@@257) $generated@@74)) (and (and ($generated@@166 $generated@@253 ($generated@@249 $generated@@254 $generated@@255)) (forall (($generated@@258 T@U) ) (!  (=> (and (= (type $generated@@258) $generated@@153) ($generated@@152 $generated@@258 $generated@@256)) ($generated@@152 $generated@@258 $generated@@254))
 :pattern ( ($generated@@152 $generated@@258 $generated@@256))
 :pattern ( ($generated@@152 $generated@@258 $generated@@254))
))) (forall (($generated@@259 T@U) ) (!  (=> (and (= (type $generated@@259) $generated@@153) ($generated@@152 $generated@@259 $generated@@255)) ($generated@@152 $generated@@259 $generated@@257))
 :pattern ( ($generated@@152 $generated@@259 $generated@@255))
 :pattern ( ($generated@@152 $generated@@259 $generated@@257))
)))) ($generated@@166 $generated@@253 ($generated@@249 $generated@@256 $generated@@257)))
 :pattern ( ($generated@@166 $generated@@253 ($generated@@249 $generated@@254 $generated@@255)) ($generated@@166 $generated@@253 ($generated@@249 $generated@@256 $generated@@257)))
)))
(assert (forall (($generated@@261 T@U) ($generated@@262 T@U) ) (! (= (type ($generated@@260 $generated@@261 $generated@@262)) $generated@@175)
 :pattern ( ($generated@@260 $generated@@261 $generated@@262))
)))
(assert (forall (($generated@@263 T@U) ($generated@@264 T@U) ($generated@@265 T@U) ($generated@@266 T@U) ) (!  (=> (and (and (and (= (type $generated@@263) $generated@@74) (= (type $generated@@264) $generated@@74)) (= (type $generated@@265) $generated@@153)) (= (type $generated@@266) $generated@@153)) (= ($generated@@166 ($generated@@260 $generated@@265 $generated@@266) ($generated@@174 $generated@@263 $generated@@264))  (and ($generated@@152 $generated@@265 $generated@@263) ($generated@@152 $generated@@266 $generated@@264))))
 :pattern ( ($generated@@166 ($generated@@260 $generated@@265 $generated@@266) ($generated@@174 $generated@@263 $generated@@264)))
)))
(assert (= ($generated@@84 $generated@@147) 0))
(assert (forall (($generated@@268 T@T) ($generated@@269 T@U) ($generated@@270 T@U) ) (! (= (type ($generated@@267 $generated@@268 $generated@@269 $generated@@270)) ($generated@@76 $generated@@268))
 :pattern ( ($generated@@267 $generated@@268 $generated@@269 $generated@@270))
)))
(assert (= ($generated@@267 $generated@@153 $generated@@66 $generated@@73) $generated@@147))
(assert  (not ($generated@@271 $generated@@147)))
(assert (forall (($generated@@272 T@U) ($generated@@273 T@U) ) (!  (=> (and (= (type $generated@@272) $generated@@175) (= (type $generated@@273) $generated@@175)) (= ($generated@@181 $generated@@272 $generated@@273) (= $generated@@272 $generated@@273)))
 :pattern ( ($generated@@181 $generated@@272 $generated@@273))
)))
(assert (forall (($generated@@275 T@U) ) (! (= (type ($generated@@274 $generated@@275)) $generated@@74)
 :pattern ( ($generated@@274 $generated@@275))
)))
(assert (forall (($generated@@276 T@U) ($generated@@277 T@U) ) (!  (=> (and (= (type $generated@@276) ($generated@@91 $generated@@153 $generated@@4)) (= (type $generated@@277) $generated@@74)) (= ($generated@@166 $generated@@276 ($generated@@274 $generated@@277)) (forall (($generated@@278 T@U) ) (!  (=> (and (= (type $generated@@278) $generated@@153) ($generated@@0 ($generated@@96 $generated@@276 $generated@@278))) ($generated@@152 $generated@@278 $generated@@277))
 :pattern ( ($generated@@96 $generated@@276 $generated@@278))
))))
 :pattern ( ($generated@@166 $generated@@276 ($generated@@274 $generated@@277)))
)))
(assert (forall (($generated@@280 T@U) ) (! (= (type ($generated@@279 $generated@@280)) $generated@@74)
 :pattern ( ($generated@@279 $generated@@280))
)))
(assert (forall (($generated@@281 T@U) ($generated@@282 T@U) ) (!  (=> (and (= (type $generated@@281) ($generated@@91 $generated@@153 $generated@@4)) (= (type $generated@@282) $generated@@74)) (= ($generated@@166 $generated@@281 ($generated@@279 $generated@@282)) (forall (($generated@@283 T@U) ) (!  (=> (and (= (type $generated@@283) $generated@@153) ($generated@@0 ($generated@@96 $generated@@281 $generated@@283))) ($generated@@152 $generated@@283 $generated@@282))
 :pattern ( ($generated@@96 $generated@@281 $generated@@283))
))))
 :pattern ( ($generated@@166 $generated@@281 ($generated@@279 $generated@@282)))
)))
(assert (forall (($generated@@285 Int) ) (! (= ($generated@@284 $generated@@285) $generated@@285)
 :pattern ( ($generated@@284 $generated@@285))
)))
(assert (forall (($generated@@287 T@U) ) (! (let (($generated@@288 (type $generated@@287)))
(= (type ($generated@@286 $generated@@287)) $generated@@288))
 :pattern ( ($generated@@286 $generated@@287))
)))
(assert (forall (($generated@@289 T@U) ) (! (= ($generated@@286 $generated@@289) $generated@@289)
 :pattern ( ($generated@@286 $generated@@289))
)))
(assert  (and (and (forall (($generated@@294 T@U) ($generated@@295 T@U) ($generated@@296 T@U) ($generated@@297 T@U) ($generated@@298 T@U) ) (! (= (type ($generated@@290 $generated@@294 $generated@@295 $generated@@296 $generated@@297 $generated@@298)) ($generated@@91 $generated@@153 $generated@@4))
 :pattern ( ($generated@@290 $generated@@294 $generated@@295 $generated@@296 $generated@@297 $generated@@298))
)) (= (type $generated@@291) ($generated@@91 $generated@@92 $generated@@93))) (forall (($generated@@299 T@T) ) (! (= (type ($generated@@293 $generated@@299)) ($generated@@91 $generated@@299 $generated@@4))
 :pattern ( ($generated@@293 $generated@@299))
))))
(assert (forall (($generated@@300 T@U) ($generated@@301 T@U) ($generated@@302 T@U) ($generated@@303 T@U) ($generated@@304 T@U) ) (!  (=> (and (and (and (and (and (= (type $generated@@300) $generated@@74) (= (type $generated@@301) $generated@@74)) (= (type $generated@@302) ($generated@@91 $generated@@92 $generated@@93))) (= (type $generated@@303) $generated@@250)) (= (type $generated@@304) $generated@@153)) (and ($generated@@149 $generated@@302) (and ($generated@@152 $generated@@304 $generated@@300) ($generated@@166 $generated@@303 ($generated@@249 $generated@@300 $generated@@301))))) (= ($generated@@292 ($generated@@290 $generated@@300 $generated@@301 $generated@@291 $generated@@303 $generated@@304) ($generated@@293 $generated@@153)) ($generated@@292 ($generated@@290 $generated@@300 $generated@@301 $generated@@302 $generated@@303 $generated@@304) ($generated@@293 $generated@@153))))
 :pattern ( ($generated@@290 $generated@@300 $generated@@301 $generated@@291 $generated@@303 $generated@@304) ($generated@@149 $generated@@302))
 :pattern ( ($generated@@290 $generated@@300 $generated@@301 $generated@@302 $generated@@303 $generated@@304))
)))
(assert (forall (($generated@@306 T@U) ($generated@@307 T@U) ($generated@@308 T@U) ($generated@@309 T@U) ($generated@@310 T@U) ) (!  (=> (and (and (and (and (and (= (type $generated@@306) $generated@@74) (= (type $generated@@307) $generated@@74)) (= (type $generated@@308) $generated@@153)) (= (type $generated@@309) $generated@@153)) (= (type $generated@@310) ($generated@@91 $generated@@92 $generated@@93))) ($generated@@149 $generated@@310)) (= ($generated@@89 ($generated@@260 $generated@@308 $generated@@309) ($generated@@174 $generated@@306 $generated@@307) $generated@@310)  (and ($generated@@305 $generated@@308 $generated@@306 $generated@@310) ($generated@@305 $generated@@309 $generated@@307 $generated@@310))))
 :pattern ( ($generated@@89 ($generated@@260 $generated@@308 $generated@@309) ($generated@@174 $generated@@306 $generated@@307) $generated@@310))
)))
(assert (forall (($generated@@312 T@U) ) (! (= (type ($generated@@311 $generated@@312)) $generated@@79)
 :pattern ( ($generated@@311 $generated@@312))
)))
(assert (forall (($generated@@313 T@U) ) (!  (=> (= (type $generated@@313) $generated@@175) (= ($generated@@173 $generated@@313) (= ($generated@@311 $generated@@313) $generated@@64)))
 :pattern ( ($generated@@173 $generated@@313))
)))
(assert (forall (($generated@@314 T@U) ) (!  (=> (and (= (type $generated@@314) $generated@@175) ($generated@@173 $generated@@314)) (exists (($generated@@315 T@U) ($generated@@316 T@U) ) (!  (and (and (= (type $generated@@315) $generated@@153) (= (type $generated@@316) $generated@@153)) (= $generated@@314 ($generated@@260 $generated@@315 $generated@@316)))
 :no-pattern (type $generated@@315)
 :no-pattern (type $generated@@316)
 :no-pattern ($generated $generated@@315)
 :no-pattern ($generated@@0 $generated@@315)
 :no-pattern ($generated $generated@@316)
 :no-pattern ($generated@@0 $generated@@316)
)))
 :pattern ( ($generated@@173 $generated@@314))
)))
(assert  (and (and (forall (($generated@@321 T@T) ) (= ($generated@@1 ($generated@@319 $generated@@321)) 20)) (forall (($generated@@322 T@T) ) (! (= ($generated@@320 ($generated@@319 $generated@@322)) $generated@@322)
 :pattern ( ($generated@@319 $generated@@322))
))) (forall (($generated@@323 T@T) ) (! (= (type ($generated@@317 $generated@@323)) ($generated@@319 $generated@@323))
 :pattern ( ($generated@@317 $generated@@323))
))))
(assert (forall (($generated@@324 T@T) ) (! (= ($generated@@318 ($generated@@317 $generated@@324)) 0)
 :pattern ( ($generated@@317 $generated@@324))
)))
(assert ($generated@@271 $generated@@60))
(assert ($generated@@149 $generated@@291))
(assert (forall (($generated@@325 T@U) ($generated@@326 T@U) ($generated@@327 T@U) ) (!  (=> (and (and (and (= (type $generated@@325) $generated@@74) (= (type $generated@@326) ($generated@@91 $generated@@92 $generated@@93))) (= (type $generated@@327) $generated@@92)) (and (and ($generated@@149 $generated@@326) (and (not (= $generated@@327 $generated@@150)) (= ($generated@@151 $generated@@327) ($generated@@148 $generated@@325)))) ($generated@@0 ($generated@@98 ($generated@@96 $generated@@326 $generated@@327) $generated@@60)))) ($generated@@305 ($generated@@98 ($generated@@96 $generated@@326 $generated@@327) $generated@@147) $generated@@325 $generated@@326))
 :pattern ( ($generated@@98 ($generated@@96 $generated@@326 $generated@@327) $generated@@147) ($generated@@148 $generated@@325))
)))
(assert (forall (($generated@@328 T@U) ($generated@@329 T@U) ) (!  (=> (and (= (type $generated@@328) $generated@@74) (= (type $generated@@329) $generated@@92)) (= ($generated@@166 $generated@@329 ($generated@@168 $generated@@328))  (and ($generated@@166 $generated@@329 ($generated@@148 $generated@@328)) (not (= $generated@@329 $generated@@150)))))
 :pattern ( ($generated@@166 $generated@@329 ($generated@@168 $generated@@328)))
)))
(assert (forall (($generated@@331 T@U) ) (! (= (type ($generated@@330 $generated@@331)) $generated@@153)
 :pattern ( ($generated@@330 $generated@@331))
)))
(assert (forall (($generated@@332 T@U) ($generated@@333 T@U) ($generated@@334 T@U) ) (!  (=> (and (= (type $generated@@333) $generated@@74) (= (type $generated@@334) ($generated@@91 $generated@@92 $generated@@93))) (= ($generated@@305 ($generated@@330 $generated@@332) $generated@@333 $generated@@334) ($generated@@89 $generated@@332 $generated@@333 $generated@@334)))
 :pattern ( ($generated@@305 ($generated@@330 $generated@@332) $generated@@333 $generated@@334))
)))
(assert (forall (($generated@@335 T@U) ($generated@@336 T@U) ($generated@@337 T@U) ($generated@@338 T@U) ) (!  (=> (and (and (and (and (and (= (type $generated@@335) ($generated@@91 $generated@@92 $generated@@93)) (= (type $generated@@336) ($generated@@91 $generated@@92 $generated@@93))) (= (type $generated@@337) $generated@@153)) (= (type $generated@@338) $generated@@74)) ($generated@@159 $generated@@335 $generated@@336)) ($generated@@305 $generated@@337 $generated@@338 $generated@@335)) ($generated@@305 $generated@@337 $generated@@338 $generated@@336))
 :pattern ( ($generated@@159 $generated@@335 $generated@@336) ($generated@@305 $generated@@337 $generated@@338 $generated@@335))
)))
(assert (forall (($generated@@339 T@U) ($generated@@340 T@U) ($generated@@341 T@U) ($generated@@342 T@U) ) (!  (=> (and (and (and (and (= (type $generated@@339) ($generated@@91 $generated@@92 $generated@@93)) (= (type $generated@@340) ($generated@@91 $generated@@92 $generated@@93))) (= (type $generated@@342) $generated@@74)) ($generated@@159 $generated@@339 $generated@@340)) ($generated@@89 $generated@@341 $generated@@342 $generated@@339)) ($generated@@89 $generated@@341 $generated@@342 $generated@@340))
 :pattern ( ($generated@@159 $generated@@339 $generated@@340) ($generated@@89 $generated@@341 $generated@@342 $generated@@339))
)))
(assert (forall (($generated@@345 T@T) ) (! (= (type ($generated@@344 $generated@@345)) ($generated@@91 $generated@@345 $generated@@2))
 :pattern ( ($generated@@344 $generated@@345))
)))
(assert (forall (($generated@@346 T@U) ) (! (let (($generated@@347 ($generated@@94 (type $generated@@346))))
 (=> (= (type $generated@@346) ($generated@@91 $generated@@347 $generated@@2)) (and (= (= ($generated@@343 $generated@@346) 0) (= $generated@@346 ($generated@@344 $generated@@347))) (=> (not (= ($generated@@343 $generated@@346) 0)) (exists (($generated@@348 T@U) ) (!  (and (= (type $generated@@348) $generated@@347) (< 0 ($generated ($generated@@96 $generated@@346 $generated@@348))))
 :no-pattern (type $generated@@348)
 :no-pattern ($generated $generated@@348)
 :no-pattern ($generated@@0 $generated@@348)
))))))
 :pattern ( ($generated@@343 $generated@@346))
)))
(assert (forall (($generated@@350 T@U) ) (! (= (type ($generated@@349 $generated@@350)) $generated@@81)
 :pattern ( ($generated@@349 $generated@@350))
)))
(assert (forall (($generated@@351 T@U) ) (!  (=> (= (type $generated@@351) $generated@@74) (and (= ($generated@@85 ($generated@@148 $generated@@351)) $generated@@67) (= ($generated@@349 ($generated@@148 $generated@@351)) $generated@@72)))
 :pattern ( ($generated@@148 $generated@@351))
)))
(assert (forall (($generated@@352 T@U) ) (!  (=> (= (type $generated@@352) $generated@@74) (and (= ($generated@@85 ($generated@@168 $generated@@352)) $generated@@68) (= ($generated@@349 ($generated@@168 $generated@@352)) $generated@@72)))
 :pattern ( ($generated@@168 $generated@@352))
)))
(assert  (and (and (and (and (forall (($generated@@358 T@T) ($generated@@359 T@T) ) (= ($generated@@1 ($generated@@355 $generated@@358 $generated@@359)) 21)) (forall (($generated@@360 T@T) ($generated@@361 T@T) ) (! (= ($generated@@356 ($generated@@355 $generated@@360 $generated@@361)) $generated@@360)
 :pattern ( ($generated@@355 $generated@@360 $generated@@361))
))) (forall (($generated@@362 T@T) ($generated@@363 T@T) ) (! (= ($generated@@357 ($generated@@355 $generated@@362 $generated@@363)) $generated@@363)
 :pattern ( ($generated@@355 $generated@@362 $generated@@363))
))) (forall (($generated@@364 T@U) ) (! (let (($generated@@365 ($generated@@356 (type $generated@@364))))
(= (type ($generated@@353 $generated@@364)) ($generated@@91 $generated@@365 $generated@@4)))
 :pattern ( ($generated@@353 $generated@@364))
))) (forall (($generated@@366 T@T) ($generated@@367 T@T) ) (! (= (type ($generated@@354 $generated@@366 $generated@@367)) ($generated@@355 $generated@@366 $generated@@367))
 :pattern ( ($generated@@354 $generated@@366 $generated@@367))
))))
(assert (forall (($generated@@368 T@U) ($generated@@369 T@T) ) (! (let (($generated@@370 (type $generated@@368)))
 (not ($generated@@0 ($generated@@96 ($generated@@353 ($generated@@354 $generated@@370 $generated@@369)) $generated@@368))))
 :pattern ( (let (($generated@@370 (type $generated@@368)))
($generated@@96 ($generated@@353 ($generated@@354 $generated@@370 $generated@@369)) $generated@@368)))
)))
(assert  (and (and (and (and (forall (($generated@@376 T@T) ($generated@@377 T@T) ) (= ($generated@@1 ($generated@@373 $generated@@376 $generated@@377)) 22)) (forall (($generated@@378 T@T) ($generated@@379 T@T) ) (! (= ($generated@@374 ($generated@@373 $generated@@378 $generated@@379)) $generated@@378)
 :pattern ( ($generated@@373 $generated@@378 $generated@@379))
))) (forall (($generated@@380 T@T) ($generated@@381 T@T) ) (! (= ($generated@@375 ($generated@@373 $generated@@380 $generated@@381)) $generated@@381)
 :pattern ( ($generated@@373 $generated@@380 $generated@@381))
))) (forall (($generated@@382 T@U) ) (! (let (($generated@@383 ($generated@@374 (type $generated@@382))))
(= (type ($generated@@371 $generated@@382)) ($generated@@91 $generated@@383 $generated@@4)))
 :pattern ( ($generated@@371 $generated@@382))
))) (forall (($generated@@384 T@T) ($generated@@385 T@T) ) (! (= (type ($generated@@372 $generated@@384 $generated@@385)) ($generated@@373 $generated@@384 $generated@@385))
 :pattern ( ($generated@@372 $generated@@384 $generated@@385))
))))
(assert (forall (($generated@@386 T@U) ($generated@@387 T@T) ) (! (let (($generated@@388 (type $generated@@386)))
 (not ($generated@@0 ($generated@@96 ($generated@@371 ($generated@@372 $generated@@388 $generated@@387)) $generated@@386))))
 :pattern ( (let (($generated@@388 (type $generated@@386)))
($generated@@96 ($generated@@371 ($generated@@372 $generated@@388 $generated@@387)) $generated@@386)))
)))
(assert (forall (($generated@@390 T@U) ($generated@@391 T@U) ) (!  (=> (and (and (= (type $generated@@390) ($generated@@91 $generated@@92 $generated@@93)) (= (type $generated@@391) ($generated@@91 $generated@@92 $generated@@93))) ($generated@@389 $generated@@390 $generated@@391)) (and ($generated@@159 $generated@@390 $generated@@391) (forall (($generated@@392 T@U) ($generated@@393 T@U) ) (! (let (($generated@@394 ($generated@@77 (type $generated@@393))))
 (=> (and (and (= (type $generated@@392) $generated@@92) (= (type $generated@@393) ($generated@@76 $generated@@394))) (not ($generated@@271 $generated@@393))) (= ($generated@@98 ($generated@@96 $generated@@390 $generated@@392) $generated@@393) ($generated@@98 ($generated@@96 $generated@@391 $generated@@392) $generated@@393))))
 :pattern ( ($generated@@98 ($generated@@96 $generated@@391 $generated@@392) $generated@@393))
))))
 :pattern ( ($generated@@389 $generated@@390 $generated@@391))
)))
(assert (forall (($generated@@395 T@U) ($generated@@396 T@U) ) (! (let (($generated@@397 ($generated@@94 (type $generated@@395))))
 (=> (and (= (type $generated@@395) ($generated@@91 $generated@@397 $generated@@4)) (= (type $generated@@396) ($generated@@91 $generated@@397 $generated@@4))) (= ($generated@@292 $generated@@395 $generated@@396) (forall (($generated@@398 T@U) ) (!  (=> (= (type $generated@@398) $generated@@397) (= ($generated@@0 ($generated@@96 $generated@@395 $generated@@398)) ($generated@@0 ($generated@@96 $generated@@396 $generated@@398))))
 :pattern ( ($generated@@96 $generated@@395 $generated@@398))
 :pattern ( ($generated@@96 $generated@@396 $generated@@398))
)))))
 :pattern ( ($generated@@292 $generated@@395 $generated@@396))
)))
(assert (forall (($generated@@400 T@U) ($generated@@401 T@U) ) (! (= (type ($generated@@399 $generated@@400 $generated@@401)) $generated@@74)
 :pattern ( ($generated@@399 $generated@@400 $generated@@401))
)))
(assert (forall (($generated@@402 T@U) ($generated@@403 T@U) ($generated@@404 T@U) ($generated@@405 T@U) ) (!  (=> (and (and (and (= (type $generated@@402) $generated@@74) (= (type $generated@@403) $generated@@74)) (= (type $generated@@404) $generated@@250)) (= (type $generated@@405) ($generated@@91 $generated@@92 $generated@@93))) (= ($generated@@89 $generated@@404 ($generated@@399 $generated@@402 $generated@@403) $generated@@405) ($generated@@89 $generated@@404 ($generated@@249 $generated@@402 $generated@@403) $generated@@405)))
 :pattern ( ($generated@@89 $generated@@404 ($generated@@399 $generated@@402 $generated@@403) $generated@@405))
)))
(assert (forall (($generated@@406 T@U) ) (! (let (($generated@@407 ($generated@@94 (type $generated@@406))))
 (=> (= (type $generated@@406) ($generated@@91 $generated@@407 $generated@@2)) (= ($generated@@189 $generated@@406) (forall (($generated@@408 T@U) ) (!  (=> (= (type $generated@@408) $generated@@407) (and (<= 0 ($generated ($generated@@96 $generated@@406 $generated@@408))) (<= ($generated ($generated@@96 $generated@@406 $generated@@408)) ($generated@@343 $generated@@406))))
 :pattern ( ($generated@@96 $generated@@406 $generated@@408))
)))))
 :pattern ( ($generated@@189 $generated@@406))
)))
(assert  (and (and (and (and (and (and (and (and (and (forall (($generated@@417 T@T) ($generated@@418 T@T) ($generated@@419 T@T) ) (= ($generated@@1 ($generated@@411 $generated@@417 $generated@@418 $generated@@419)) 23)) (forall (($generated@@420 T@T) ($generated@@421 T@T) ($generated@@422 T@T) ) (! (= ($generated@@413 ($generated@@411 $generated@@420 $generated@@421 $generated@@422)) $generated@@420)
 :pattern ( ($generated@@411 $generated@@420 $generated@@421 $generated@@422))
))) (forall (($generated@@423 T@T) ($generated@@424 T@T) ($generated@@425 T@T) ) (! (= ($generated@@414 ($generated@@411 $generated@@423 $generated@@424 $generated@@425)) $generated@@424)
 :pattern ( ($generated@@411 $generated@@423 $generated@@424 $generated@@425))
))) (forall (($generated@@426 T@T) ($generated@@427 T@T) ($generated@@428 T@T) ) (! (= ($generated@@415 ($generated@@411 $generated@@426 $generated@@427 $generated@@428)) $generated@@428)
 :pattern ( ($generated@@411 $generated@@426 $generated@@427 $generated@@428))
))) (forall (($generated@@429 T@U) ($generated@@430 T@U) ($generated@@431 T@U) ) (! (let (($generated@@432 ($generated@@415 (type $generated@@429))))
(= (type ($generated@@412 $generated@@429 $generated@@430 $generated@@431)) $generated@@432))
 :pattern ( ($generated@@412 $generated@@429 $generated@@430 $generated@@431))
))) (forall (($generated@@433 T@U) ($generated@@434 T@U) ($generated@@435 T@U) ($generated@@436 T@U) ) (! (let (($generated@@437 (type $generated@@436)))
(let (($generated@@438 (type $generated@@435)))
(let (($generated@@439 (type $generated@@434)))
(= (type ($generated@@416 $generated@@433 $generated@@434 $generated@@435 $generated@@436)) ($generated@@411 $generated@@439 $generated@@438 $generated@@437)))))
 :pattern ( ($generated@@416 $generated@@433 $generated@@434 $generated@@435 $generated@@436))
))) (forall (($generated@@440 T@U) ($generated@@441 T@U) ($generated@@442 T@U) ($generated@@443 T@U) ) (! (let (($generated@@444 ($generated@@415 (type $generated@@440))))
 (=> (= (type $generated@@443) $generated@@444) (= ($generated@@412 ($generated@@416 $generated@@440 $generated@@441 $generated@@442 $generated@@443) $generated@@441 $generated@@442) $generated@@443)))
 :weight 0
))) (and (and (forall (($generated@@445 T@U) ($generated@@446 T@U) ($generated@@447 T@U) ($generated@@448 T@U) ($generated@@449 T@U) ($generated@@450 T@U) ) (!  (or (= $generated@@447 $generated@@449) (= ($generated@@412 ($generated@@416 $generated@@446 $generated@@447 $generated@@448 $generated@@445) $generated@@449 $generated@@450) ($generated@@412 $generated@@446 $generated@@449 $generated@@450)))
 :weight 0
)) (forall (($generated@@451 T@U) ($generated@@452 T@U) ($generated@@453 T@U) ($generated@@454 T@U) ($generated@@455 T@U) ($generated@@456 T@U) ) (!  (or (= $generated@@454 $generated@@456) (= ($generated@@412 ($generated@@416 $generated@@452 $generated@@453 $generated@@454 $generated@@451) $generated@@455 $generated@@456) ($generated@@412 $generated@@452 $generated@@455 $generated@@456)))
 :weight 0
))) (forall (($generated@@457 T@U) ($generated@@458 T@U) ($generated@@459 T@U) ($generated@@460 T@U) ($generated@@461 T@U) ($generated@@462 T@U) ) (!  (or true (= ($generated@@412 ($generated@@416 $generated@@458 $generated@@459 $generated@@460 $generated@@457) $generated@@461 $generated@@462) ($generated@@412 $generated@@458 $generated@@461 $generated@@462)))
 :weight 0
)))) (forall (($generated@@463 T@U) ($generated@@464 T@U) ($generated@@465 T@U) ($generated@@466 T@U) ($generated@@467 T@U) ) (! (= (type ($generated@@409 $generated@@463 $generated@@464 $generated@@465 $generated@@466 $generated@@467)) $generated@@153)
 :pattern ( ($generated@@409 $generated@@463 $generated@@464 $generated@@465 $generated@@466 $generated@@467))
))) (forall (($generated@@468 T@U) ($generated@@469 T@U) ($generated@@470 T@U) ) (! (= (type ($generated@@410 $generated@@468 $generated@@469 $generated@@470)) $generated@@250)
 :pattern ( ($generated@@410 $generated@@468 $generated@@469 $generated@@470))
))))
(assert (forall (($generated@@471 T@U) ($generated@@472 T@U) ($generated@@473 T@U) ($generated@@474 T@U) ($generated@@475 T@U) ($generated@@476 T@U) ($generated@@477 T@U) ) (!  (=> (and (and (and (and (and (and (= (type $generated@@471) $generated@@74) (= (type $generated@@472) $generated@@74)) (= (type $generated@@473) ($generated@@91 $generated@@92 $generated@@93))) (= (type $generated@@474) ($generated@@411 ($generated@@91 $generated@@92 $generated@@93) $generated@@153 $generated@@153))) (= (type $generated@@475) ($generated@@411 ($generated@@91 $generated@@92 $generated@@93) $generated@@153 $generated@@4))) (= (type $generated@@476) ($generated@@411 ($generated@@91 $generated@@92 $generated@@93) $generated@@153 ($generated@@91 $generated@@153 $generated@@4)))) (= (type $generated@@477) $generated@@153)) (= ($generated@@409 $generated@@471 $generated@@472 $generated@@473 ($generated@@410 $generated@@474 $generated@@475 $generated@@476) $generated@@477) ($generated@@412 $generated@@474 $generated@@473 $generated@@477)))
 :pattern ( ($generated@@409 $generated@@471 $generated@@472 $generated@@473 ($generated@@410 $generated@@474 $generated@@475 $generated@@476) $generated@@477))
)))
(assert (forall (($generated@@478 T@U) ($generated@@479 T@U) ) (!  (=> (and (= (type $generated@@478) $generated@@74) (= (type $generated@@479) $generated@@92)) (= ($generated@@166 $generated@@479 ($generated@@148 $generated@@478))  (or (= $generated@@479 $generated@@150) (= ($generated@@151 $generated@@479) ($generated@@148 $generated@@478)))))
 :pattern ( ($generated@@166 $generated@@479 ($generated@@148 $generated@@478)))
)))
(assert (forall (($generated@@480 T@U) ) (! (let (($generated@@481 ($generated@@357 (type $generated@@480))))
(let (($generated@@482 ($generated@@356 (type $generated@@480))))
 (=> (= (type $generated@@480) ($generated@@355 $generated@@482 $generated@@481)) (or (= $generated@@480 ($generated@@354 $generated@@482 $generated@@481)) (exists (($generated@@483 T@U) ) (!  (and (= (type $generated@@483) $generated@@482) ($generated@@0 ($generated@@96 ($generated@@353 $generated@@480) $generated@@483)))
 :no-pattern (type $generated@@483)
 :no-pattern ($generated $generated@@483)
 :no-pattern ($generated@@0 $generated@@483)
))))))
 :pattern ( ($generated@@353 $generated@@480))
)))
(assert (forall (($generated@@485 T@U) ) (! (let (($generated@@486 ($generated@@357 (type $generated@@485))))
(= (type ($generated@@484 $generated@@485)) ($generated@@91 $generated@@486 $generated@@4)))
 :pattern ( ($generated@@484 $generated@@485))
)))
(assert (forall (($generated@@487 T@U) ) (! (let (($generated@@488 ($generated@@357 (type $generated@@487))))
(let (($generated@@489 ($generated@@356 (type $generated@@487))))
 (=> (= (type $generated@@487) ($generated@@355 $generated@@489 $generated@@488)) (or (= $generated@@487 ($generated@@354 $generated@@489 $generated@@488)) (exists (($generated@@490 T@U) ) (!  (and (= (type $generated@@490) $generated@@488) ($generated@@0 ($generated@@96 ($generated@@484 $generated@@487) $generated@@490)))
 :no-pattern (type $generated@@490)
 :no-pattern ($generated $generated@@490)
 :no-pattern ($generated@@0 $generated@@490)
))))))
 :pattern ( ($generated@@484 $generated@@487))
)))
(assert (forall (($generated@@491 T@U) ) (! (let (($generated@@492 ($generated@@375 (type $generated@@491))))
(let (($generated@@493 ($generated@@374 (type $generated@@491))))
 (=> (= (type $generated@@491) ($generated@@373 $generated@@493 $generated@@492)) (or (= $generated@@491 ($generated@@372 $generated@@493 $generated@@492)) (exists (($generated@@494 T@U) ) (!  (and (= (type $generated@@494) $generated@@493) ($generated@@0 ($generated@@96 ($generated@@371 $generated@@491) $generated@@494)))
 :no-pattern (type $generated@@494)
 :no-pattern ($generated $generated@@494)
 :no-pattern ($generated@@0 $generated@@494)
))))))
 :pattern ( ($generated@@371 $generated@@491))
)))
(assert (forall (($generated@@496 T@U) ) (! (let (($generated@@497 ($generated@@375 (type $generated@@496))))
(= (type ($generated@@495 $generated@@496)) ($generated@@91 $generated@@497 $generated@@4)))
 :pattern ( ($generated@@495 $generated@@496))
)))
(assert (forall (($generated@@498 T@U) ) (! (let (($generated@@499 ($generated@@375 (type $generated@@498))))
(let (($generated@@500 ($generated@@374 (type $generated@@498))))
 (=> (= (type $generated@@498) ($generated@@373 $generated@@500 $generated@@499)) (or (= $generated@@498 ($generated@@372 $generated@@500 $generated@@499)) (exists (($generated@@501 T@U) ) (!  (and (= (type $generated@@501) $generated@@499) ($generated@@0 ($generated@@96 ($generated@@495 $generated@@498) $generated@@501)))
 :no-pattern (type $generated@@501)
 :no-pattern ($generated $generated@@501)
 :no-pattern ($generated@@0 $generated@@501)
))))))
 :pattern ( ($generated@@495 $generated@@498))
)))
(assert (forall (($generated@@502 T@U) ($generated@@503 T@U) ) (!  (=> (and (= (type $generated@@502) ($generated@@91 $generated@@153 $generated@@2)) (= (type $generated@@503) $generated@@74)) (= ($generated@@166 $generated@@502 ($generated@@188 $generated@@503)) (forall (($generated@@504 T@U) ) (!  (=> (and (= (type $generated@@504) $generated@@153) (< 0 ($generated ($generated@@96 $generated@@502 $generated@@504)))) ($generated@@152 $generated@@504 $generated@@503))
 :pattern ( ($generated@@96 $generated@@502 $generated@@504))
))))
 :pattern ( ($generated@@166 $generated@@502 ($generated@@188 $generated@@503)))
)))
(assert (forall (($generated@@506 T@U) ($generated@@507 T@U) ($generated@@508 T@U) ($generated@@509 T@U) ) (!  (=> (and (and (and (and (= (type $generated@@506) $generated@@250) (= (type $generated@@507) $generated@@74)) (= (type $generated@@508) $generated@@74)) (= (type $generated@@509) ($generated@@91 $generated@@92 $generated@@93))) (and ($generated@@149 $generated@@509) ($generated@@89 $generated@@506 ($generated@@249 $generated@@507 $generated@@508) $generated@@509))) (forall (($generated@@510 T@U) ) (!  (=> (= (type $generated@@510) $generated@@153) (=> (and ($generated@@305 $generated@@510 $generated@@507 $generated@@509) ($generated@@505 $generated@@507 $generated@@508 $generated@@509 $generated@@506 $generated@@510)) ($generated@@305 ($generated@@409 $generated@@507 $generated@@508 $generated@@509 $generated@@506 $generated@@510) $generated@@508 $generated@@509)))
 :pattern ( ($generated@@409 $generated@@507 $generated@@508 $generated@@509 $generated@@506 $generated@@510))
)))
 :pattern ( ($generated@@89 $generated@@506 ($generated@@249 $generated@@507 $generated@@508) $generated@@509))
)))
(assert (forall (($generated@@511 T@U) ($generated@@512 T@U) ($generated@@513 T@U) ($generated@@514 T@U) ) (!  (=> (and (and (and (and (= (type $generated@@511) $generated@@250) (= (type $generated@@512) $generated@@74)) (= (type $generated@@513) $generated@@74)) (= (type $generated@@514) ($generated@@91 $generated@@92 $generated@@93))) ($generated@@149 $generated@@514)) (= ($generated@@89 $generated@@511 ($generated@@249 $generated@@512 $generated@@513) $generated@@514) (forall (($generated@@515 T@U) ) (!  (=> (= (type $generated@@515) $generated@@153) (=> (and (and ($generated@@152 $generated@@515 $generated@@512) ($generated@@305 $generated@@515 $generated@@512 $generated@@514)) ($generated@@505 $generated@@512 $generated@@513 $generated@@514 $generated@@511 $generated@@515)) (forall (($generated@@516 T@U) ) (!  (=> (= (type $generated@@516) $generated@@92) (=> (and (not (= $generated@@516 $generated@@150)) ($generated@@0 ($generated@@96 ($generated@@290 $generated@@512 $generated@@513 $generated@@514 $generated@@511 $generated@@515) ($generated@@330 $generated@@516)))) ($generated@@0 ($generated@@98 ($generated@@96 $generated@@514 $generated@@516) $generated@@60))))
 :pattern ( ($generated@@96 ($generated@@290 $generated@@512 $generated@@513 $generated@@514 $generated@@511 $generated@@515) ($generated@@330 $generated@@516)))
))))
 :pattern ( ($generated@@409 $generated@@512 $generated@@513 $generated@@514 $generated@@511 $generated@@515))
 :pattern ( ($generated@@290 $generated@@512 $generated@@513 $generated@@514 $generated@@511 $generated@@515))
))))
 :pattern ( ($generated@@89 $generated@@511 ($generated@@249 $generated@@512 $generated@@513) $generated@@514))
)))
(assert (forall (($generated@@517 T@U) ($generated@@518 T@U) ($generated@@519 T@U) ) (!  (=> (and (and (= (type $generated@@517) ($generated@@91 $generated@@153 $generated@@4)) (= (type $generated@@518) $generated@@74)) (= (type $generated@@519) ($generated@@91 $generated@@92 $generated@@93))) (= ($generated@@89 $generated@@517 ($generated@@274 $generated@@518) $generated@@519) (forall (($generated@@520 T@U) ) (!  (=> (and (= (type $generated@@520) $generated@@153) ($generated@@0 ($generated@@96 $generated@@517 $generated@@520))) ($generated@@305 $generated@@520 $generated@@518 $generated@@519))
 :pattern ( ($generated@@96 $generated@@517 $generated@@520))
))))
 :pattern ( ($generated@@89 $generated@@517 ($generated@@274 $generated@@518) $generated@@519))
)))
(assert (forall (($generated@@521 T@U) ($generated@@522 T@U) ($generated@@523 T@U) ) (!  (=> (and (and (= (type $generated@@521) ($generated@@91 $generated@@153 $generated@@4)) (= (type $generated@@522) $generated@@74)) (= (type $generated@@523) ($generated@@91 $generated@@92 $generated@@93))) (= ($generated@@89 $generated@@521 ($generated@@279 $generated@@522) $generated@@523) (forall (($generated@@524 T@U) ) (!  (=> (and (= (type $generated@@524) $generated@@153) ($generated@@0 ($generated@@96 $generated@@521 $generated@@524))) ($generated@@305 $generated@@524 $generated@@522 $generated@@523))
 :pattern ( ($generated@@96 $generated@@521 $generated@@524))
))))
 :pattern ( ($generated@@89 $generated@@521 ($generated@@279 $generated@@522) $generated@@523))
)))
(assert (forall (($generated@@525 T@U) ) (! (let (($generated@@526 (type $generated@@525)))
(= ($generated ($generated@@96 ($generated@@344 $generated@@526) $generated@@525)) 0))
 :pattern ( (let (($generated@@526 (type $generated@@525)))
($generated@@96 ($generated@@344 $generated@@526) $generated@@525)))
)))
(assert  (and (and (forall (($generated@@530 T@U) ) (! (= (type ($generated@@527 $generated@@530)) ($generated@@91 $generated@@153 $generated@@4))
 :pattern ( ($generated@@527 $generated@@530))
)) (forall (($generated@@531 T@T) ($generated@@532 T@U) ) (! (= (type ($generated@@528 $generated@@531 $generated@@532)) $generated@@531)
 :pattern ( ($generated@@528 $generated@@531 $generated@@532))
))) (forall (($generated@@533 T@U) ) (! (let (($generated@@534 ($generated@@357 (type $generated@@533))))
(let (($generated@@535 ($generated@@356 (type $generated@@533))))
(= (type ($generated@@529 $generated@@533)) ($generated@@91 $generated@@535 $generated@@534))))
 :pattern ( ($generated@@529 $generated@@533))
))))
(assert (forall (($generated@@536 T@U) ($generated@@537 T@U) ) (!  (=> (and (= (type $generated@@536) ($generated@@355 $generated@@153 $generated@@153)) (= (type $generated@@537) $generated@@153)) (= ($generated@@0 ($generated@@96 ($generated@@527 $generated@@536) $generated@@537))  (and ($generated@@0 ($generated@@96 ($generated@@353 $generated@@536) ($generated@@182 ($generated@@528 $generated@@175 $generated@@537)))) (= ($generated@@96 ($generated@@529 $generated@@536) ($generated@@182 ($generated@@528 $generated@@175 $generated@@537))) ($generated@@183 ($generated@@528 $generated@@175 $generated@@537))))))
 :pattern ( ($generated@@96 ($generated@@527 $generated@@536) $generated@@537))
)))
(assert  (and (forall (($generated@@540 T@U) ) (! (= (type ($generated@@538 $generated@@540)) ($generated@@91 $generated@@153 $generated@@4))
 :pattern ( ($generated@@538 $generated@@540))
)) (forall (($generated@@541 T@U) ) (! (let (($generated@@542 ($generated@@375 (type $generated@@541))))
(let (($generated@@543 ($generated@@374 (type $generated@@541))))
(= (type ($generated@@539 $generated@@541)) ($generated@@91 $generated@@543 $generated@@542))))
 :pattern ( ($generated@@539 $generated@@541))
))))
(assert (forall (($generated@@544 T@U) ($generated@@545 T@U) ) (!  (=> (and (= (type $generated@@544) ($generated@@373 $generated@@153 $generated@@153)) (= (type $generated@@545) $generated@@153)) (= ($generated@@0 ($generated@@96 ($generated@@538 $generated@@544) $generated@@545))  (and ($generated@@0 ($generated@@96 ($generated@@371 $generated@@544) ($generated@@182 ($generated@@528 $generated@@175 $generated@@545)))) (= ($generated@@96 ($generated@@539 $generated@@544) ($generated@@182 ($generated@@528 $generated@@175 $generated@@545))) ($generated@@183 ($generated@@528 $generated@@175 $generated@@545))))))
 :pattern ( ($generated@@96 ($generated@@538 $generated@@544) $generated@@545))
)))
(assert (forall (($generated@@546 T@U) ($generated@@547 T@U) ) (! (let (($generated@@548 (type $generated@@547)))
(let (($generated@@549 ($generated@@356 (type $generated@@546))))
 (=> (= (type $generated@@546) ($generated@@355 $generated@@549 $generated@@548)) (= ($generated@@0 ($generated@@96 ($generated@@484 $generated@@546) $generated@@547)) (exists (($generated@@550 T@U) ) (!  (and (= (type $generated@@550) $generated@@549) (and ($generated@@0 ($generated@@96 ($generated@@353 $generated@@546) $generated@@550)) (= $generated@@547 ($generated@@96 ($generated@@529 $generated@@546) $generated@@550))))
 :pattern ( ($generated@@96 ($generated@@353 $generated@@546) $generated@@550))
 :pattern ( ($generated@@96 ($generated@@529 $generated@@546) $generated@@550))
))))))
 :pattern ( ($generated@@96 ($generated@@484 $generated@@546) $generated@@547))
)))
(assert (forall (($generated@@551 T@U) ($generated@@552 T@U) ) (! (let (($generated@@553 (type $generated@@552)))
(let (($generated@@554 ($generated@@374 (type $generated@@551))))
 (=> (= (type $generated@@551) ($generated@@373 $generated@@554 $generated@@553)) (= ($generated@@0 ($generated@@96 ($generated@@495 $generated@@551) $generated@@552)) (exists (($generated@@555 T@U) ) (!  (and (= (type $generated@@555) $generated@@554) (and ($generated@@0 ($generated@@96 ($generated@@371 $generated@@551) $generated@@555)) (= $generated@@552 ($generated@@96 ($generated@@539 $generated@@551) $generated@@555))))
 :pattern ( ($generated@@96 ($generated@@371 $generated@@551) $generated@@555))
 :pattern ( ($generated@@96 ($generated@@539 $generated@@551) $generated@@555))
))))))
 :pattern ( ($generated@@96 ($generated@@495 $generated@@551) $generated@@552))
)))
(assert (forall (($generated@@556 T@U) ($generated@@557 T@U) ($generated@@558 T@U) ($generated@@559 T@U) ($generated@@560 T@U) ($generated@@561 T@U) ($generated@@562 T@U) ($generated@@563 T@U) ) (!  (=> (and (and (and (and (and (and (and (= (type $generated@@556) $generated@@74) (= (type $generated@@557) $generated@@74)) (= (type $generated@@558) ($generated@@91 $generated@@92 $generated@@93))) (= (type $generated@@559) ($generated@@411 ($generated@@91 $generated@@92 $generated@@93) $generated@@153 $generated@@153))) (= (type $generated@@560) ($generated@@411 ($generated@@91 $generated@@92 $generated@@93) $generated@@153 $generated@@4))) (= (type $generated@@561) ($generated@@411 ($generated@@91 $generated@@92 $generated@@93) $generated@@153 ($generated@@91 $generated@@153 $generated@@4)))) (= (type $generated@@562) $generated@@153)) (= (type $generated@@563) $generated@@153)) (= ($generated@@0 ($generated@@96 ($generated@@290 $generated@@556 $generated@@557 $generated@@558 ($generated@@410 $generated@@559 $generated@@560 $generated@@561) $generated@@562) $generated@@563)) ($generated@@0 ($generated@@96 ($generated@@412 $generated@@561 $generated@@558 $generated@@562) $generated@@563))))
 :pattern ( ($generated@@96 ($generated@@290 $generated@@556 $generated@@557 $generated@@558 ($generated@@410 $generated@@559 $generated@@560 $generated@@561) $generated@@562) $generated@@563))
)))
(assert (forall (($generated@@565 T@U) ($generated@@566 T@U) ) (! (= (type ($generated@@564 $generated@@565 $generated@@566)) $generated@@74)
 :pattern ( ($generated@@564 $generated@@565 $generated@@566))
)))
(assert (forall (($generated@@567 T@U) ($generated@@568 T@U) ($generated@@569 T@U) ($generated@@570 T@U) ) (!  (=> (and (and (and (= (type $generated@@567) ($generated@@355 $generated@@153 $generated@@153)) (= (type $generated@@568) $generated@@74)) (= (type $generated@@569) $generated@@74)) (= (type $generated@@570) ($generated@@91 $generated@@92 $generated@@93))) (= ($generated@@89 $generated@@567 ($generated@@564 $generated@@568 $generated@@569) $generated@@570) (forall (($generated@@571 T@U) ) (!  (=> (and (= (type $generated@@571) $generated@@153) ($generated@@0 ($generated@@96 ($generated@@353 $generated@@567) $generated@@571))) (and ($generated@@305 ($generated@@96 ($generated@@529 $generated@@567) $generated@@571) $generated@@569 $generated@@570) ($generated@@305 $generated@@571 $generated@@568 $generated@@570)))
 :pattern ( ($generated@@96 ($generated@@529 $generated@@567) $generated@@571))
 :pattern ( ($generated@@96 ($generated@@353 $generated@@567) $generated@@571))
))))
 :pattern ( ($generated@@89 $generated@@567 ($generated@@564 $generated@@568 $generated@@569) $generated@@570))
)))
(assert (forall (($generated@@573 T@U) ($generated@@574 T@U) ) (! (= (type ($generated@@572 $generated@@573 $generated@@574)) $generated@@74)
 :pattern ( ($generated@@572 $generated@@573 $generated@@574))
)))
(assert (forall (($generated@@575 T@U) ($generated@@576 T@U) ($generated@@577 T@U) ($generated@@578 T@U) ) (!  (=> (and (and (and (= (type $generated@@575) ($generated@@373 $generated@@153 $generated@@153)) (= (type $generated@@576) $generated@@74)) (= (type $generated@@577) $generated@@74)) (= (type $generated@@578) ($generated@@91 $generated@@92 $generated@@93))) (= ($generated@@89 $generated@@575 ($generated@@572 $generated@@576 $generated@@577) $generated@@578) (forall (($generated@@579 T@U) ) (!  (=> (and (= (type $generated@@579) $generated@@153) ($generated@@0 ($generated@@96 ($generated@@371 $generated@@575) $generated@@579))) (and ($generated@@305 ($generated@@96 ($generated@@539 $generated@@575) $generated@@579) $generated@@577 $generated@@578) ($generated@@305 $generated@@579 $generated@@576 $generated@@578)))
 :pattern ( ($generated@@96 ($generated@@539 $generated@@575) $generated@@579))
 :pattern ( ($generated@@96 ($generated@@371 $generated@@575) $generated@@579))
))))
 :pattern ( ($generated@@89 $generated@@575 ($generated@@572 $generated@@576 $generated@@577) $generated@@578))
)))
(assert (forall (($generated@@580 T@U) ($generated@@581 T@U) ) (! (let (($generated@@582 ($generated@@94 (type $generated@@580))))
 (=> (and (and (= (type $generated@@580) ($generated@@91 $generated@@582 $generated@@4)) (= (type $generated@@581) ($generated@@91 $generated@@582 $generated@@4))) ($generated@@292 $generated@@580 $generated@@581)) (= $generated@@580 $generated@@581)))
 :pattern ( ($generated@@292 $generated@@580 $generated@@581))
)))
(assert (forall (($generated@@583 T@U) ($generated@@584 T@U) ($generated@@585 T@U) ) (!  (=> (and (and (and (and (= (type $generated@@583) ($generated@@91 $generated@@92 $generated@@93)) (= (type $generated@@584) ($generated@@91 $generated@@92 $generated@@93))) (= (type $generated@@585) ($generated@@91 $generated@@92 $generated@@93))) (not (= $generated@@583 $generated@@585))) (and ($generated@@159 $generated@@583 $generated@@584) ($generated@@159 $generated@@584 $generated@@585))) ($generated@@159 $generated@@583 $generated@@585))
 :pattern ( ($generated@@159 $generated@@583 $generated@@584) ($generated@@159 $generated@@584 $generated@@585))
)))
(assert (forall (($generated@@586 T@U) ($generated@@587 T@U) ($generated@@588 T@U) ) (!  (=> (and (and (= (type $generated@@586) $generated@@250) (= (type $generated@@587) $generated@@74)) (= (type $generated@@588) $generated@@74)) (= ($generated@@166 $generated@@586 ($generated@@249 $generated@@587 $generated@@588)) (forall (($generated@@589 T@U) ($generated@@590 T@U) ) (!  (=> (and (= (type $generated@@589) ($generated@@91 $generated@@92 $generated@@93)) (= (type $generated@@590) $generated@@153)) (=> (and (and ($generated@@149 $generated@@589) ($generated@@152 $generated@@590 $generated@@587)) ($generated@@505 $generated@@587 $generated@@588 $generated@@589 $generated@@586 $generated@@590)) ($generated@@152 ($generated@@409 $generated@@587 $generated@@588 $generated@@589 $generated@@586 $generated@@590) $generated@@588)))
 :pattern ( ($generated@@409 $generated@@587 $generated@@588 $generated@@589 $generated@@586 $generated@@590))
))))
 :pattern ( ($generated@@166 $generated@@586 ($generated@@249 $generated@@587 $generated@@588)))
)))
(assert (forall (($generated@@592 T@T) ) (! (= (type ($generated@@591 $generated@@592)) ($generated@@91 $generated@@592 $generated@@4))
 :pattern ( ($generated@@591 $generated@@592))
)))
(assert (forall (($generated@@593 T@U) ) (! (let (($generated@@594 ($generated@@375 (type $generated@@593))))
(let (($generated@@595 ($generated@@374 (type $generated@@593))))
 (=> (= (type $generated@@593) ($generated@@373 $generated@@595 $generated@@594)) (= (= $generated@@593 ($generated@@372 $generated@@595 $generated@@594)) (= ($generated@@371 $generated@@593) ($generated@@591 $generated@@595))))))
 :pattern ( ($generated@@371 $generated@@593))
)))
(assert (forall (($generated@@596 T@U) ) (! (let (($generated@@597 ($generated@@375 (type $generated@@596))))
(let (($generated@@598 ($generated@@374 (type $generated@@596))))
 (=> (= (type $generated@@596) ($generated@@373 $generated@@598 $generated@@597)) (= (= $generated@@596 ($generated@@372 $generated@@598 $generated@@597)) (= ($generated@@495 $generated@@596) ($generated@@591 $generated@@597))))))
 :pattern ( ($generated@@495 $generated@@596))
)))
(assert (forall (($generated@@599 T@U) ) (! (let (($generated@@600 ($generated@@375 (type $generated@@599))))
(let (($generated@@601 ($generated@@374 (type $generated@@599))))
 (=> (= (type $generated@@599) ($generated@@373 $generated@@601 $generated@@600)) (= (= $generated@@599 ($generated@@372 $generated@@601 $generated@@600)) (= ($generated@@538 $generated@@599) ($generated@@591 $generated@@153))))))
 :pattern ( ($generated@@538 $generated@@599))
)))
(assert (forall (($generated@@602 T@U) ) (! (let (($generated@@603 ($generated@@357 (type $generated@@602))))
(let (($generated@@604 ($generated@@356 (type $generated@@602))))
 (=> (= (type $generated@@602) ($generated@@355 $generated@@604 $generated@@603)) (or (= $generated@@602 ($generated@@354 $generated@@604 $generated@@603)) (exists (($generated@@605 T@U) ($generated@@606 T@U) ) (!  (and (and (= (type $generated@@605) $generated@@153) (= (type $generated@@606) $generated@@153)) ($generated@@0 ($generated@@96 ($generated@@527 $generated@@602) ($generated@@330 ($generated@@260 $generated@@605 $generated@@606)))))
 :no-pattern (type $generated@@605)
 :no-pattern (type $generated@@606)
 :no-pattern ($generated $generated@@605)
 :no-pattern ($generated@@0 $generated@@605)
 :no-pattern ($generated $generated@@606)
 :no-pattern ($generated@@0 $generated@@606)
))))))
 :pattern ( ($generated@@527 $generated@@602))
)))
(assert (forall (($generated@@607 T@U) ) (! (let (($generated@@608 ($generated@@375 (type $generated@@607))))
(let (($generated@@609 ($generated@@374 (type $generated@@607))))
 (=> (= (type $generated@@607) ($generated@@373 $generated@@609 $generated@@608)) (or (= $generated@@607 ($generated@@372 $generated@@609 $generated@@608)) (exists (($generated@@610 T@U) ($generated@@611 T@U) ) (!  (and (and (= (type $generated@@610) $generated@@153) (= (type $generated@@611) $generated@@153)) ($generated@@0 ($generated@@96 ($generated@@538 $generated@@607) ($generated@@330 ($generated@@260 $generated@@610 $generated@@611)))))
 :no-pattern (type $generated@@610)
 :no-pattern (type $generated@@611)
 :no-pattern ($generated $generated@@610)
 :no-pattern ($generated@@0 $generated@@610)
 :no-pattern ($generated $generated@@611)
 :no-pattern ($generated@@0 $generated@@611)
))))))
 :pattern ( ($generated@@538 $generated@@607))
)))
(assert (forall (($generated@@613 T@U) ) (! (= (type ($generated@@612 $generated@@613)) $generated@@80)
 :pattern ( ($generated@@612 $generated@@613))
)))
(assert (forall (($generated@@614 T@U) ($generated@@615 T@U) ($generated@@616 T@T) ) (!  (=> (and (= (type $generated@@614) $generated@@80) (= (type $generated@@615) $generated@@78)) (and (= ($generated@@612 ($generated@@267 $generated@@616 $generated@@614 $generated@@615)) $generated@@614) (= ($generated@@87 ($generated@@267 $generated@@616 $generated@@614 $generated@@615)) $generated@@615)))
 :pattern ( ($generated@@267 $generated@@616 $generated@@614 $generated@@615))
)))
(assert (forall (($generated@@617 T@U) ) (!  (=> (and (= (type $generated@@617) $generated@@153) ($generated@@152 $generated@@617 $generated@@46)) (and (= ($generated@@330 ($generated@@528 $generated@@2 $generated@@617)) $generated@@617) ($generated@@166 ($generated@@528 $generated@@2 $generated@@617) $generated@@46)))
 :pattern ( ($generated@@152 $generated@@617 $generated@@46))
)))
(assert (forall (($generated@@618 T@U) ) (!  (=> (and (= (type $generated@@618) $generated@@153) ($generated@@152 $generated@@618 $generated@@47)) (and (= ($generated@@330 ($generated@@528 $generated@@3 $generated@@618)) $generated@@618) ($generated@@166 ($generated@@528 $generated@@3 $generated@@618) $generated@@47)))
 :pattern ( ($generated@@152 $generated@@618 $generated@@47))
)))
(assert (forall (($generated@@619 T@U) ) (!  (=> (and (= (type $generated@@619) $generated@@153) ($generated@@152 $generated@@619 $generated@@44)) (and (= ($generated@@330 ($generated@@528 $generated@@4 $generated@@619)) $generated@@619) ($generated@@166 ($generated@@528 $generated@@4 $generated@@619) $generated@@44)))
 :pattern ( ($generated@@152 $generated@@619 $generated@@44))
)))
(assert (= ($generated@@1 $generated@@620) 24))
(assert (forall (($generated@@621 T@U) ) (!  (=> (and (= (type $generated@@621) $generated@@153) ($generated@@152 $generated@@621 $generated@@45)) (and (= ($generated@@330 ($generated@@528 $generated@@620 $generated@@621)) $generated@@621) ($generated@@166 ($generated@@528 $generated@@620 $generated@@621) $generated@@45)))
 :pattern ( ($generated@@152 $generated@@621 $generated@@45))
)))
(assert (forall (($generated@@622 T@U) ($generated@@623 T@U) ) (!  (=> (= (type $generated@@623) $generated@@74) (= ($generated@@152 ($generated@@330 $generated@@622) $generated@@623) ($generated@@166 $generated@@622 $generated@@623)))
 :pattern ( ($generated@@152 ($generated@@330 $generated@@622) $generated@@623))
)))
(assert (forall (($generated@@624 T@U) ($generated@@625 T@U) ($generated@@626 T@U) ($generated@@627 T@U) ($generated@@628 T@U) ($generated@@629 T@U) ($generated@@630 T@U) ) (!  (=> (and (and (and (and (and (and (and (= (type $generated@@624) $generated@@74) (= (type $generated@@625) $generated@@74)) (= (type $generated@@626) ($generated@@91 $generated@@92 $generated@@93))) (= (type $generated@@627) ($generated@@411 ($generated@@91 $generated@@92 $generated@@93) $generated@@153 $generated@@153))) (= (type $generated@@628) ($generated@@411 ($generated@@91 $generated@@92 $generated@@93) $generated@@153 $generated@@4))) (= (type $generated@@629) ($generated@@411 ($generated@@91 $generated@@92 $generated@@93) $generated@@153 ($generated@@91 $generated@@153 $generated@@4)))) (= (type $generated@@630) $generated@@153)) ($generated@@0 ($generated@@412 $generated@@628 $generated@@626 $generated@@630))) ($generated@@505 $generated@@624 $generated@@625 $generated@@626 ($generated@@410 $generated@@627 $generated@@628 $generated@@629) $generated@@630))
 :pattern ( ($generated@@505 $generated@@624 $generated@@625 $generated@@626 ($generated@@410 $generated@@627 $generated@@628 $generated@@629) $generated@@630))
)))
(assert (forall (($generated@@631 T@U) ) (! (let (($generated@@632 ($generated@@94 (type $generated@@631))))
 (=> (= (type $generated@@631) ($generated@@91 $generated@@632 $generated@@2)) (<= 0 ($generated@@343 $generated@@631))))
 :pattern ( ($generated@@343 $generated@@631))
)))
(assert (forall (($generated@@633 T@U) ) (! (let (($generated@@634 ($generated@@320 (type $generated@@633))))
 (=> (= (type $generated@@633) ($generated@@319 $generated@@634)) (<= 0 ($generated@@318 $generated@@633))))
 :pattern ( ($generated@@318 $generated@@633))
)))
(assert (forall (($generated@@636 T@U) ) (! (= (type ($generated@@635 $generated@@636)) $generated@@74)
 :pattern ( ($generated@@635 $generated@@636))
)))
(assert (forall (($generated@@637 T@U) ($generated@@638 T@U) ) (!  (=> (and (= (type $generated@@637) $generated@@74) (= (type $generated@@638) $generated@@74)) (= ($generated@@635 ($generated@@564 $generated@@637 $generated@@638)) $generated@@637))
 :pattern ( ($generated@@564 $generated@@637 $generated@@638))
)))
(assert (forall (($generated@@640 T@U) ) (! (= (type ($generated@@639 $generated@@640)) $generated@@74)
 :pattern ( ($generated@@639 $generated@@640))
)))
(assert (forall (($generated@@641 T@U) ($generated@@642 T@U) ) (!  (=> (and (= (type $generated@@641) $generated@@74) (= (type $generated@@642) $generated@@74)) (= ($generated@@639 ($generated@@564 $generated@@641 $generated@@642)) $generated@@642))
 :pattern ( ($generated@@564 $generated@@641 $generated@@642))
)))
(assert (forall (($generated@@643 T@U) ($generated@@644 T@U) ) (!  (=> (and (= (type $generated@@643) $generated@@74) (= (type $generated@@644) $generated@@74)) (= ($generated@@85 ($generated@@564 $generated@@643 $generated@@644)) $generated@@58))
 :pattern ( ($generated@@564 $generated@@643 $generated@@644))
)))
(assert (forall (($generated@@646 T@U) ) (! (= (type ($generated@@645 $generated@@646)) $generated@@74)
 :pattern ( ($generated@@645 $generated@@646))
)))
(assert (forall (($generated@@647 T@U) ($generated@@648 T@U) ) (!  (=> (and (= (type $generated@@647) $generated@@74) (= (type $generated@@648) $generated@@74)) (= ($generated@@645 ($generated@@572 $generated@@647 $generated@@648)) $generated@@647))
 :pattern ( ($generated@@572 $generated@@647 $generated@@648))
)))
(assert (forall (($generated@@650 T@U) ) (! (= (type ($generated@@649 $generated@@650)) $generated@@74)
 :pattern ( ($generated@@649 $generated@@650))
)))
(assert (forall (($generated@@651 T@U) ($generated@@652 T@U) ) (!  (=> (and (= (type $generated@@651) $generated@@74) (= (type $generated@@652) $generated@@74)) (= ($generated@@649 ($generated@@572 $generated@@651 $generated@@652)) $generated@@652))
 :pattern ( ($generated@@572 $generated@@651 $generated@@652))
)))
(assert (forall (($generated@@653 T@U) ($generated@@654 T@U) ) (!  (=> (and (= (type $generated@@653) $generated@@74) (= (type $generated@@654) $generated@@74)) (= ($generated@@85 ($generated@@572 $generated@@653 $generated@@654)) $generated@@59))
 :pattern ( ($generated@@572 $generated@@653 $generated@@654))
)))
(assert (forall (($generated@@656 T@U) ) (! (= (type ($generated@@655 $generated@@656)) $generated@@74)
 :pattern ( ($generated@@655 $generated@@656))
)))
(assert (forall (($generated@@657 T@U) ($generated@@658 T@U) ) (!  (=> (and (= (type $generated@@657) $generated@@74) (= (type $generated@@658) $generated@@74)) (= ($generated@@655 ($generated@@249 $generated@@657 $generated@@658)) $generated@@657))
 :pattern ( ($generated@@249 $generated@@657 $generated@@658))
)))
(assert (forall (($generated@@660 T@U) ) (! (= (type ($generated@@659 $generated@@660)) $generated@@74)
 :pattern ( ($generated@@659 $generated@@660))
)))
(assert (forall (($generated@@661 T@U) ($generated@@662 T@U) ) (!  (=> (and (= (type $generated@@661) $generated@@74) (= (type $generated@@662) $generated@@74)) (= ($generated@@659 ($generated@@249 $generated@@661 $generated@@662)) $generated@@662))
 :pattern ( ($generated@@249 $generated@@661 $generated@@662))
)))
(assert (forall (($generated@@664 T@U) ) (! (= (type ($generated@@663 $generated@@664)) $generated@@74)
 :pattern ( ($generated@@663 $generated@@664))
)))
(assert (forall (($generated@@665 T@U) ($generated@@666 T@U) ) (!  (=> (and (= (type $generated@@665) $generated@@74) (= (type $generated@@666) $generated@@74)) (= ($generated@@663 ($generated@@399 $generated@@665 $generated@@666)) $generated@@665))
 :pattern ( ($generated@@399 $generated@@665 $generated@@666))
)))
(assert (forall (($generated@@668 T@U) ) (! (= (type ($generated@@667 $generated@@668)) $generated@@74)
 :pattern ( ($generated@@667 $generated@@668))
)))
(assert (forall (($generated@@669 T@U) ($generated@@670 T@U) ) (!  (=> (and (= (type $generated@@669) $generated@@74) (= (type $generated@@670) $generated@@74)) (= ($generated@@667 ($generated@@399 $generated@@669 $generated@@670)) $generated@@670))
 :pattern ( ($generated@@399 $generated@@669 $generated@@670))
)))
(assert (forall (($generated@@671 T@U) ($generated@@672 T@U) ) (!  (=> (and (= (type $generated@@671) $generated@@153) (= (type $generated@@672) $generated@@153)) (= ($generated@@311 ($generated@@260 $generated@@671 $generated@@672)) $generated@@64))
 :pattern ( ($generated@@260 $generated@@671 $generated@@672))
)))
(assert (forall (($generated@@674 T@U) ) (! (= (type ($generated@@673 $generated@@674)) $generated@@74)
 :pattern ( ($generated@@673 $generated@@674))
)))
(assert (forall (($generated@@675 T@U) ($generated@@676 T@U) ) (!  (=> (and (= (type $generated@@675) $generated@@74) (= (type $generated@@676) $generated@@74)) (= ($generated@@673 ($generated@@174 $generated@@675 $generated@@676)) $generated@@675))
 :pattern ( ($generated@@174 $generated@@675 $generated@@676))
)))
(assert (forall (($generated@@678 T@U) ) (! (= (type ($generated@@677 $generated@@678)) $generated@@74)
 :pattern ( ($generated@@677 $generated@@678))
)))
(assert (forall (($generated@@679 T@U) ($generated@@680 T@U) ) (!  (=> (and (= (type $generated@@679) $generated@@74) (= (type $generated@@680) $generated@@74)) (= ($generated@@677 ($generated@@174 $generated@@679 $generated@@680)) $generated@@680))
 :pattern ( ($generated@@174 $generated@@679 $generated@@680))
)))
(assert (forall (($generated@@681 T@U) ($generated@@682 T@U) ) (!  (=> (and (= (type $generated@@681) $generated@@153) (= (type $generated@@682) $generated@@153)) (= ($generated@@182 ($generated@@260 $generated@@681 $generated@@682)) $generated@@681))
 :pattern ( ($generated@@260 $generated@@681 $generated@@682))
)))
(assert (forall (($generated@@683 T@U) ($generated@@684 T@U) ) (!  (=> (and (= (type $generated@@683) $generated@@153) (= (type $generated@@684) $generated@@153)) (= ($generated@@183 ($generated@@260 $generated@@683 $generated@@684)) $generated@@684))
 :pattern ( ($generated@@260 $generated@@683 $generated@@684))
)))
(assert  (and (forall (($generated@@687 T@U) ) (! (= (type ($generated@@685 $generated@@687)) $generated@@74)
 :pattern ( ($generated@@685 $generated@@687))
)) (forall (($generated@@688 T@U) ($generated@@689 Int) ) (! (let (($generated@@690 ($generated@@320 (type $generated@@688))))
(= (type ($generated@@686 $generated@@688 $generated@@689)) $generated@@690))
 :pattern ( ($generated@@686 $generated@@688 $generated@@689))
))))
(assert (forall (($generated@@691 T@U) ($generated@@692 T@U) ($generated@@693 T@U) ) (!  (=> (and (and (= (type $generated@@691) ($generated@@319 $generated@@153)) (= (type $generated@@692) $generated@@74)) (= (type $generated@@693) ($generated@@91 $generated@@92 $generated@@93))) (= ($generated@@89 $generated@@691 ($generated@@685 $generated@@692) $generated@@693) (forall (($generated@@694 Int) ) (!  (=> (and (<= 0 $generated@@694) (< $generated@@694 ($generated@@318 $generated@@691))) ($generated@@305 ($generated@@686 $generated@@691 $generated@@694) $generated@@692 $generated@@693))
 :pattern ( ($generated@@686 $generated@@691 $generated@@694))
))))
 :pattern ( ($generated@@89 $generated@@691 ($generated@@685 $generated@@692) $generated@@693))
)))
(assert (forall (($generated@@696 Int) ) (! (= ($generated@@695 ($generated@@90 $generated@@696)) $generated@@696)
 :pattern ( ($generated@@90 $generated@@696))
)))
(assert (forall (($generated@@698 T@U) ) (! (= (type ($generated@@697 $generated@@698)) $generated@@74)
 :pattern ( ($generated@@697 $generated@@698))
)))
(assert (forall (($generated@@699 T@U) ) (!  (=> (= (type $generated@@699) $generated@@74) (= ($generated@@697 ($generated@@274 $generated@@699)) $generated@@699))
 :pattern ( ($generated@@274 $generated@@699))
)))
(assert (forall (($generated@@700 T@U) ) (!  (=> (= (type $generated@@700) $generated@@74) (= ($generated@@85 ($generated@@274 $generated@@700)) $generated@@54))
 :pattern ( ($generated@@274 $generated@@700))
)))
(assert (forall (($generated@@702 T@U) ) (! (= (type ($generated@@701 $generated@@702)) $generated@@74)
 :pattern ( ($generated@@701 $generated@@702))
)))
(assert (forall (($generated@@703 T@U) ) (!  (=> (= (type $generated@@703) $generated@@74) (= ($generated@@701 ($generated@@279 $generated@@703)) $generated@@703))
 :pattern ( ($generated@@279 $generated@@703))
)))
(assert (forall (($generated@@704 T@U) ) (!  (=> (= (type $generated@@704) $generated@@74) (= ($generated@@85 ($generated@@279 $generated@@704)) $generated@@55))
 :pattern ( ($generated@@279 $generated@@704))
)))
(assert (forall (($generated@@706 T@U) ) (! (= (type ($generated@@705 $generated@@706)) $generated@@74)
 :pattern ( ($generated@@705 $generated@@706))
)))
(assert (forall (($generated@@707 T@U) ) (!  (=> (= (type $generated@@707) $generated@@74) (= ($generated@@705 ($generated@@188 $generated@@707)) $generated@@707))
 :pattern ( ($generated@@188 $generated@@707))
)))
(assert (forall (($generated@@708 T@U) ) (!  (=> (= (type $generated@@708) $generated@@74) (= ($generated@@85 ($generated@@188 $generated@@708)) $generated@@56))
 :pattern ( ($generated@@188 $generated@@708))
)))
(assert (forall (($generated@@710 T@U) ) (! (= (type ($generated@@709 $generated@@710)) $generated@@74)
 :pattern ( ($generated@@709 $generated@@710))
)))
(assert (forall (($generated@@711 T@U) ) (!  (=> (= (type $generated@@711) $generated@@74) (= ($generated@@709 ($generated@@685 $generated@@711)) $generated@@711))
 :pattern ( ($generated@@685 $generated@@711))
)))
(assert (forall (($generated@@712 T@U) ) (!  (=> (= (type $generated@@712) $generated@@74) (= ($generated@@85 ($generated@@685 $generated@@712)) $generated@@57))
 :pattern ( ($generated@@685 $generated@@712))
)))
(assert (forall (($generated@@714 T@U) ) (! (= (type ($generated@@713 $generated@@714)) $generated@@74)
 :pattern ( ($generated@@713 $generated@@714))
)))
(assert (forall (($generated@@715 T@U) ) (!  (=> (= (type $generated@@715) $generated@@74) (= ($generated@@713 ($generated@@148 $generated@@715)) $generated@@715))
 :pattern ( ($generated@@148 $generated@@715))
)))
(assert (forall (($generated@@717 T@U) ) (! (= (type ($generated@@716 $generated@@717)) $generated@@74)
 :pattern ( ($generated@@716 $generated@@717))
)))
(assert (forall (($generated@@718 T@U) ) (!  (=> (= (type $generated@@718) $generated@@74) (= ($generated@@716 ($generated@@168 $generated@@718)) $generated@@718))
 :pattern ( ($generated@@168 $generated@@718))
)))
(assert (forall (($generated@@719 T@U) ) (! (let (($generated@@720 (type $generated@@719)))
(= ($generated@@528 $generated@@720 ($generated@@330 $generated@@719)) $generated@@719))
 :pattern ( ($generated@@330 $generated@@719))
)))
(assert (forall (($generated@@721 T@U) ($generated@@722 T@U) ($generated@@723 T@U) ) (!  (=> (and (and (= (type $generated@@721) ($generated@@355 $generated@@153 $generated@@153)) (= (type $generated@@722) $generated@@74)) (= (type $generated@@723) $generated@@74)) (= ($generated@@166 $generated@@721 ($generated@@564 $generated@@722 $generated@@723)) (forall (($generated@@724 T@U) ) (!  (=> (and (= (type $generated@@724) $generated@@153) ($generated@@0 ($generated@@96 ($generated@@353 $generated@@721) $generated@@724))) (and ($generated@@152 ($generated@@96 ($generated@@529 $generated@@721) $generated@@724) $generated@@723) ($generated@@152 $generated@@724 $generated@@722)))
 :pattern ( ($generated@@96 ($generated@@529 $generated@@721) $generated@@724))
 :pattern ( ($generated@@96 ($generated@@353 $generated@@721) $generated@@724))
))))
 :pattern ( ($generated@@166 $generated@@721 ($generated@@564 $generated@@722 $generated@@723)))
)))
(assert (forall (($generated@@725 T@U) ($generated@@726 T@U) ($generated@@727 T@U) ) (!  (=> (and (and (= (type $generated@@725) ($generated@@373 $generated@@153 $generated@@153)) (= (type $generated@@726) $generated@@74)) (= (type $generated@@727) $generated@@74)) (= ($generated@@166 $generated@@725 ($generated@@572 $generated@@726 $generated@@727)) (forall (($generated@@728 T@U) ) (!  (=> (and (= (type $generated@@728) $generated@@153) ($generated@@0 ($generated@@96 ($generated@@371 $generated@@725) $generated@@728))) (and ($generated@@152 ($generated@@96 ($generated@@539 $generated@@725) $generated@@728) $generated@@727) ($generated@@152 $generated@@728 $generated@@726)))
 :pattern ( ($generated@@96 ($generated@@539 $generated@@725) $generated@@728))
 :pattern ( ($generated@@96 ($generated@@371 $generated@@725) $generated@@728))
))))
 :pattern ( ($generated@@166 $generated@@725 ($generated@@572 $generated@@726 $generated@@727)))
)))
(assert (forall (($generated@@731 T@U) ($generated@@732 T@U) ) (!  (=> (and (= (type $generated@@731) $generated@@153) (= (type $generated@@732) $generated@@153)) (< ($generated@@729 $generated@@731) ($generated@@730 ($generated@@260 $generated@@731 $generated@@732))))
 :pattern ( ($generated@@260 $generated@@731 $generated@@732))
)))
(assert (forall (($generated@@733 T@U) ($generated@@734 T@U) ) (!  (=> (and (= (type $generated@@733) $generated@@153) (= (type $generated@@734) $generated@@153)) (< ($generated@@729 $generated@@734) ($generated@@730 ($generated@@260 $generated@@733 $generated@@734))))
 :pattern ( ($generated@@260 $generated@@733 $generated@@734))
)))
(assert (forall (($generated@@735 T@U) ($generated@@736 T@U) ($generated@@737 T@U) ) (!  (=> (and (and (= (type $generated@@735) $generated@@74) (= (type $generated@@736) $generated@@74)) (= (type $generated@@737) $generated@@250)) (= ($generated@@166 $generated@@737 ($generated@@399 $generated@@735 $generated@@736))  (and ($generated@@166 $generated@@737 ($generated@@249 $generated@@735 $generated@@736)) (forall (($generated@@738 T@U) ) (!  (=> (and (= (type $generated@@738) $generated@@153) ($generated@@152 $generated@@738 $generated@@735)) ($generated@@292 ($generated@@290 $generated@@735 $generated@@736 $generated@@291 $generated@@737 $generated@@738) ($generated@@293 $generated@@153)))
 :no-pattern (type $generated@@738)
 :no-pattern ($generated $generated@@738)
 :no-pattern ($generated@@0 $generated@@738)
)))))
 :pattern ( ($generated@@166 $generated@@737 ($generated@@399 $generated@@735 $generated@@736)))
)))
(assert (forall (($generated@@739 T@U) ($generated@@740 T@U) ($generated@@741 T@U) ) (!  (=> (and (and (and (= (type $generated@@739) $generated@@153) (= (type $generated@@740) $generated@@74)) (= (type $generated@@741) $generated@@74)) ($generated@@152 $generated@@739 ($generated@@564 $generated@@740 $generated@@741))) (and (= ($generated@@330 ($generated@@528 ($generated@@355 $generated@@153 $generated@@153) $generated@@739)) $generated@@739) ($generated@@166 ($generated@@528 ($generated@@355 $generated@@153 $generated@@153) $generated@@739) ($generated@@564 $generated@@740 $generated@@741))))
 :pattern ( ($generated@@152 $generated@@739 ($generated@@564 $generated@@740 $generated@@741)))
)))
(assert (forall (($generated@@742 T@U) ($generated@@743 T@U) ($generated@@744 T@U) ) (!  (=> (and (and (and (= (type $generated@@742) $generated@@153) (= (type $generated@@743) $generated@@74)) (= (type $generated@@744) $generated@@74)) ($generated@@152 $generated@@742 ($generated@@572 $generated@@743 $generated@@744))) (and (= ($generated@@330 ($generated@@528 ($generated@@373 $generated@@153 $generated@@153) $generated@@742)) $generated@@742) ($generated@@166 ($generated@@528 ($generated@@373 $generated@@153 $generated@@153) $generated@@742) ($generated@@572 $generated@@743 $generated@@744))))
 :pattern ( ($generated@@152 $generated@@742 ($generated@@572 $generated@@743 $generated@@744)))
)))
(assert (forall (($generated@@745 T@U) ($generated@@746 T@U) ($generated@@747 T@U) ) (!  (=> (and (and (and (= (type $generated@@745) $generated@@74) (= (type $generated@@746) $generated@@74)) (= (type $generated@@747) $generated@@153)) ($generated@@152 $generated@@747 ($generated@@249 $generated@@745 $generated@@746))) (and (= ($generated@@330 ($generated@@528 $generated@@250 $generated@@747)) $generated@@747) ($generated@@166 ($generated@@528 $generated@@250 $generated@@747) ($generated@@249 $generated@@745 $generated@@746))))
 :pattern ( ($generated@@152 $generated@@747 ($generated@@249 $generated@@745 $generated@@746)))
)))
(assert (forall (($generated@@748 T@U) ($generated@@749 T@U) ($generated@@750 T@U) ) (!  (=> (and (and (and (= (type $generated@@748) $generated@@74) (= (type $generated@@749) $generated@@74)) (= (type $generated@@750) $generated@@153)) ($generated@@152 $generated@@750 ($generated@@399 $generated@@748 $generated@@749))) (and (= ($generated@@330 ($generated@@528 $generated@@250 $generated@@750)) $generated@@750) ($generated@@166 ($generated@@528 $generated@@250 $generated@@750) ($generated@@399 $generated@@748 $generated@@749))))
 :pattern ( ($generated@@152 $generated@@750 ($generated@@399 $generated@@748 $generated@@749)))
)))
(assert (forall (($generated@@751 T@U) ($generated@@752 T@U) ($generated@@753 T@U) ) (!  (=> (and (and (and (= (type $generated@@751) $generated@@74) (= (type $generated@@752) $generated@@74)) (= (type $generated@@753) $generated@@153)) ($generated@@152 $generated@@753 ($generated@@174 $generated@@751 $generated@@752))) (and (= ($generated@@330 ($generated@@528 $generated@@175 $generated@@753)) $generated@@753) ($generated@@166 ($generated@@528 $generated@@175 $generated@@753) ($generated@@174 $generated@@751 $generated@@752))))
 :pattern ( ($generated@@152 $generated@@753 ($generated@@174 $generated@@751 $generated@@752)))
)))
(assert (forall (($generated@@754 T@U) ) (! (let (($generated@@755 (type $generated@@754)))
 (not ($generated@@0 ($generated@@96 ($generated@@293 $generated@@755) $generated@@754))))
 :pattern ( (let (($generated@@755 (type $generated@@754)))
($generated@@96 ($generated@@293 $generated@@755) $generated@@754)))
)))
(assert (forall (($generated@@756 T@U) ) (! (let (($generated@@757 (type $generated@@756)))
 (not ($generated@@0 ($generated@@96 ($generated@@591 $generated@@757) $generated@@756))))
 :pattern ( (let (($generated@@757 (type $generated@@756)))
($generated@@96 ($generated@@591 $generated@@757) $generated@@756)))
)))
(assert (forall (($generated@@758 T@U) ($generated@@759 T@U) ) (!  (=> (and (= (type $generated@@758) $generated@@74) (= (type $generated@@759) $generated@@74)) (and (= ($generated@@85 ($generated@@249 $generated@@758 $generated@@759)) $generated@@62) (= ($generated@@349 ($generated@@249 $generated@@758 $generated@@759)) $generated@@69)))
 :pattern ( ($generated@@249 $generated@@758 $generated@@759))
)))
(assert (forall (($generated@@760 T@U) ($generated@@761 T@U) ) (!  (=> (and (= (type $generated@@760) $generated@@74) (= (type $generated@@761) $generated@@74)) (and (= ($generated@@85 ($generated@@399 $generated@@760 $generated@@761)) $generated@@63) (= ($generated@@349 ($generated@@399 $generated@@760 $generated@@761)) $generated@@70)))
 :pattern ( ($generated@@399 $generated@@760 $generated@@761))
)))
(assert (forall (($generated@@762 T@U) ($generated@@763 T@U) ) (!  (=> (and (= (type $generated@@762) $generated@@74) (= (type $generated@@763) $generated@@74)) (and (= ($generated@@85 ($generated@@174 $generated@@762 $generated@@763)) $generated@@65) (= ($generated@@349 ($generated@@174 $generated@@762 $generated@@763)) $generated@@71)))
 :pattern ( ($generated@@174 $generated@@762 $generated@@763))
)))
(assert (forall (($generated@@764 T@U) ($generated@@765 T@U) ($generated@@766 T@U) ($generated@@767 T@U) ($generated@@768 T@U) ) (!  (=> (and (and (and (and (and (= (type $generated@@764) $generated@@74) (= (type $generated@@765) $generated@@74)) (= (type $generated@@766) ($generated@@91 $generated@@92 $generated@@93))) (= (type $generated@@767) $generated@@250)) (= (type $generated@@768) $generated@@153)) (and (and ($generated@@149 $generated@@766) (and ($generated@@152 $generated@@768 $generated@@764) ($generated@@166 $generated@@767 ($generated@@249 $generated@@764 $generated@@765)))) ($generated@@292 ($generated@@290 $generated@@764 $generated@@765 $generated@@291 $generated@@767 $generated@@768) ($generated@@293 $generated@@153)))) (= ($generated@@505 $generated@@764 $generated@@765 $generated@@291 $generated@@767 $generated@@768) ($generated@@505 $generated@@764 $generated@@765 $generated@@766 $generated@@767 $generated@@768)))
 :pattern ( ($generated@@505 $generated@@764 $generated@@765 $generated@@291 $generated@@767 $generated@@768) ($generated@@149 $generated@@766))
 :pattern ( ($generated@@505 $generated@@764 $generated@@765 $generated@@766 $generated@@767 $generated@@768))
)))
(assert (forall (($generated@@769 T@U) ) (!  (=> (= (type $generated@@769) $generated@@175) (= ($generated@@729 ($generated@@330 $generated@@769)) ($generated@@730 $generated@@769)))
 :pattern ( ($generated@@729 ($generated@@330 $generated@@769)))
)))
(assert (forall (($generated@@770 T@U) ) (!  (=> (and (= (type $generated@@770) $generated@@153) ($generated@@152 $generated@@770 ($generated@@90 0))) (and (= ($generated@@330 ($generated@@528 $generated@@2 $generated@@770)) $generated@@770) ($generated@@166 ($generated@@528 ($generated@@91 $generated@@153 $generated@@4) $generated@@770) ($generated@@90 0))))
 :pattern ( ($generated@@152 $generated@@770 ($generated@@90 0)))
)))
(assert (forall (($generated@@771 T@U) ($generated@@772 T@U) ) (!  (=> (and (and (= (type $generated@@771) $generated@@153) (= (type $generated@@772) $generated@@74)) ($generated@@152 $generated@@771 ($generated@@274 $generated@@772))) (and (= ($generated@@330 ($generated@@528 ($generated@@91 $generated@@153 $generated@@4) $generated@@771)) $generated@@771) ($generated@@166 ($generated@@528 ($generated@@91 $generated@@153 $generated@@4) $generated@@771) ($generated@@274 $generated@@772))))
 :pattern ( ($generated@@152 $generated@@771 ($generated@@274 $generated@@772)))
)))
(assert (forall (($generated@@773 T@U) ($generated@@774 T@U) ) (!  (=> (and (and (= (type $generated@@773) $generated@@153) (= (type $generated@@774) $generated@@74)) ($generated@@152 $generated@@773 ($generated@@279 $generated@@774))) (and (= ($generated@@330 ($generated@@528 ($generated@@91 $generated@@153 $generated@@4) $generated@@773)) $generated@@773) ($generated@@166 ($generated@@528 ($generated@@91 $generated@@153 $generated@@4) $generated@@773) ($generated@@279 $generated@@774))))
 :pattern ( ($generated@@152 $generated@@773 ($generated@@279 $generated@@774)))
)))
(assert (forall (($generated@@775 T@U) ($generated@@776 T@U) ) (!  (=> (and (and (= (type $generated@@775) $generated@@153) (= (type $generated@@776) $generated@@74)) ($generated@@152 $generated@@775 ($generated@@188 $generated@@776))) (and (= ($generated@@330 ($generated@@528 ($generated@@91 $generated@@153 $generated@@2) $generated@@775)) $generated@@775) ($generated@@166 ($generated@@528 ($generated@@91 $generated@@153 $generated@@2) $generated@@775) ($generated@@188 $generated@@776))))
 :pattern ( ($generated@@152 $generated@@775 ($generated@@188 $generated@@776)))
)))
(assert (forall (($generated@@777 T@U) ($generated@@778 T@U) ) (!  (=> (and (and (= (type $generated@@777) $generated@@153) (= (type $generated@@778) $generated@@74)) ($generated@@152 $generated@@777 ($generated@@685 $generated@@778))) (and (= ($generated@@330 ($generated@@528 ($generated@@319 $generated@@153) $generated@@777)) $generated@@777) ($generated@@166 ($generated@@528 ($generated@@319 $generated@@153) $generated@@777) ($generated@@685 $generated@@778))))
 :pattern ( ($generated@@152 $generated@@777 ($generated@@685 $generated@@778)))
)))
(assert (forall (($generated@@779 T@U) ($generated@@780 T@U) ) (!  (=> (and (and (= (type $generated@@779) $generated@@74) (= (type $generated@@780) $generated@@153)) ($generated@@152 $generated@@780 ($generated@@148 $generated@@779))) (and (= ($generated@@330 ($generated@@528 $generated@@92 $generated@@780)) $generated@@780) ($generated@@166 ($generated@@528 $generated@@92 $generated@@780) ($generated@@148 $generated@@779))))
 :pattern ( ($generated@@152 $generated@@780 ($generated@@148 $generated@@779)))
)))
(assert (forall (($generated@@781 T@U) ($generated@@782 T@U) ) (!  (=> (and (and (= (type $generated@@781) $generated@@74) (= (type $generated@@782) $generated@@153)) ($generated@@152 $generated@@782 ($generated@@168 $generated@@781))) (and (= ($generated@@330 ($generated@@528 $generated@@92 $generated@@782)) $generated@@782) ($generated@@166 ($generated@@528 $generated@@92 $generated@@782) ($generated@@168 $generated@@781))))
 :pattern ( ($generated@@152 $generated@@782 ($generated@@168 $generated@@781)))
)))
(assert (forall (($generated@@783 T@U) ($generated@@784 T@U) ($generated@@785 T@U) ($generated@@786 T@U) ) (! (let (($generated@@787 (type $generated@@786)))
 (=> (and (and (and (= (type $generated@@783) ($generated@@91 $generated@@92 $generated@@93)) (= (type $generated@@784) $generated@@92)) (= (type $generated@@785) ($generated@@76 $generated@@787))) ($generated@@149 ($generated@@97 $generated@@783 $generated@@784 ($generated@@99 ($generated@@96 $generated@@783 $generated@@784) $generated@@785 $generated@@786)))) ($generated@@159 $generated@@783 ($generated@@97 $generated@@783 $generated@@784 ($generated@@99 ($generated@@96 $generated@@783 $generated@@784) $generated@@785 $generated@@786)))))
 :pattern ( ($generated@@97 $generated@@783 $generated@@784 ($generated@@99 ($generated@@96 $generated@@783 $generated@@784) $generated@@785 $generated@@786)))
)))
(assert (forall (($generated@@788 T@U) ($generated@@789 T@U) ($generated@@790 T@U) ) (!  (=> (and (and (= (type $generated@@788) ($generated@@91 $generated@@153 $generated@@2)) (= (type $generated@@789) $generated@@74)) (= (type $generated@@790) ($generated@@91 $generated@@92 $generated@@93))) (= ($generated@@89 $generated@@788 ($generated@@188 $generated@@789) $generated@@790) (forall (($generated@@791 T@U) ) (!  (=> (and (= (type $generated@@791) $generated@@153) (< 0 ($generated ($generated@@96 $generated@@788 $generated@@791)))) ($generated@@305 $generated@@791 $generated@@789 $generated@@790))
 :pattern ( ($generated@@96 $generated@@788 $generated@@791))
))))
 :pattern ( ($generated@@89 $generated@@788 ($generated@@188 $generated@@789) $generated@@790))
)))
(assert (forall (($generated@@792 T@U) ($generated@@793 T@U) ($generated@@794 T@U) ($generated@@795 T@U) ($generated@@796 T@U) ($generated@@797 T@U) ) (!  (=> (and (and (and (and (and (and (= (type $generated@@792) $generated@@74) (= (type $generated@@793) $generated@@74)) (= (type $generated@@794) ($generated@@91 $generated@@92 $generated@@93))) (= (type $generated@@795) ($generated@@91 $generated@@92 $generated@@93))) (= (type $generated@@796) $generated@@250)) (= (type $generated@@797) $generated@@153)) (and (and (and ($generated@@159 $generated@@794 $generated@@795) (and ($generated@@149 $generated@@794) ($generated@@149 $generated@@795))) (and ($generated@@152 $generated@@797 $generated@@792) ($generated@@166 $generated@@796 ($generated@@249 $generated@@792 $generated@@793)))) (forall (($generated@@798 T@U) ($generated@@799 T@U) ) (! (let (($generated@@800 ($generated@@77 (type $generated@@799))))
 (=> (and (and (= (type $generated@@798) $generated@@92) (= (type $generated@@799) ($generated@@76 $generated@@800))) (and (not (= $generated@@798 $generated@@150)) ($generated@@0 ($generated@@96 ($generated@@290 $generated@@792 $generated@@793 $generated@@794 $generated@@796 $generated@@797) ($generated@@330 $generated@@798))))) (= ($generated@@98 ($generated@@96 $generated@@794 $generated@@798) $generated@@799) ($generated@@98 ($generated@@96 $generated@@795 $generated@@798) $generated@@799))))
 :no-pattern (type $generated@@798)
 :no-pattern (type $generated@@799)
 :no-pattern ($generated $generated@@798)
 :no-pattern ($generated@@0 $generated@@798)
 :no-pattern ($generated $generated@@799)
 :no-pattern ($generated@@0 $generated@@799)
)))) (= ($generated@@505 $generated@@792 $generated@@793 $generated@@794 $generated@@796 $generated@@797) ($generated@@505 $generated@@792 $generated@@793 $generated@@795 $generated@@796 $generated@@797)))
 :pattern ( ($generated@@159 $generated@@794 $generated@@795) ($generated@@505 $generated@@792 $generated@@793 $generated@@795 $generated@@796 $generated@@797))
)))
(assert (forall (($generated@@801 T@U) ($generated@@802 T@U) ($generated@@803 T@U) ($generated@@804 T@U) ($generated@@805 T@U) ($generated@@806 T@U) ) (!  (=> (and (and (and (and (and (and (= (type $generated@@801) $generated@@74) (= (type $generated@@802) $generated@@74)) (= (type $generated@@803) ($generated@@91 $generated@@92 $generated@@93))) (= (type $generated@@804) ($generated@@91 $generated@@92 $generated@@93))) (= (type $generated@@805) $generated@@250)) (= (type $generated@@806) $generated@@153)) (and (and (and ($generated@@159 $generated@@803 $generated@@804) (and ($generated@@149 $generated@@803) ($generated@@149 $generated@@804))) (and ($generated@@152 $generated@@806 $generated@@801) ($generated@@166 $generated@@805 ($generated@@249 $generated@@801 $generated@@802)))) (forall (($generated@@807 T@U) ($generated@@808 T@U) ) (! (let (($generated@@809 ($generated@@77 (type $generated@@808))))
 (=> (and (and (= (type $generated@@807) $generated@@92) (= (type $generated@@808) ($generated@@76 $generated@@809))) (and (not (= $generated@@807 $generated@@150)) ($generated@@0 ($generated@@96 ($generated@@290 $generated@@801 $generated@@802 $generated@@804 $generated@@805 $generated@@806) ($generated@@330 $generated@@807))))) (= ($generated@@98 ($generated@@96 $generated@@803 $generated@@807) $generated@@808) ($generated@@98 ($generated@@96 $generated@@804 $generated@@807) $generated@@808))))
 :no-pattern (type $generated@@807)
 :no-pattern (type $generated@@808)
 :no-pattern ($generated $generated@@807)
 :no-pattern ($generated@@0 $generated@@807)
 :no-pattern ($generated $generated@@808)
 :no-pattern ($generated@@0 $generated@@808)
)))) (= ($generated@@505 $generated@@801 $generated@@802 $generated@@803 $generated@@805 $generated@@806) ($generated@@505 $generated@@801 $generated@@802 $generated@@804 $generated@@805 $generated@@806)))
 :pattern ( ($generated@@159 $generated@@803 $generated@@804) ($generated@@505 $generated@@801 $generated@@802 $generated@@804 $generated@@805 $generated@@806))
)))
(assert (forall (($generated@@810 T@U) ($generated@@811 T@U) ($generated@@812 T@U) ) (!  (=> (and (and (and (= (type $generated@@810) $generated@@175) (= (type $generated@@811) $generated@@74)) (= (type $generated@@812) ($generated@@91 $generated@@92 $generated@@93))) (and ($generated@@149 $generated@@812) (and ($generated@@173 $generated@@810) (exists (($generated@@813 T@U) ) (!  (and (= (type $generated@@813) $generated@@74) ($generated@@89 $generated@@810 ($generated@@174 $generated@@811 $generated@@813) $generated@@812))
 :pattern ( ($generated@@89 $generated@@810 ($generated@@174 $generated@@811 $generated@@813) $generated@@812))
))))) ($generated@@305 ($generated@@182 $generated@@810) $generated@@811 $generated@@812))
 :pattern ( ($generated@@305 ($generated@@182 $generated@@810) $generated@@811 $generated@@812))
)))
(assert (forall (($generated@@814 T@U) ($generated@@815 T@U) ($generated@@816 T@U) ) (!  (=> (and (and (and (= (type $generated@@814) $generated@@175) (= (type $generated@@815) $generated@@74)) (= (type $generated@@816) ($generated@@91 $generated@@92 $generated@@93))) (and ($generated@@149 $generated@@816) (and ($generated@@173 $generated@@814) (exists (($generated@@817 T@U) ) (!  (and (= (type $generated@@817) $generated@@74) ($generated@@89 $generated@@814 ($generated@@174 $generated@@817 $generated@@815) $generated@@816))
 :pattern ( ($generated@@89 $generated@@814 ($generated@@174 $generated@@817 $generated@@815) $generated@@816))
))))) ($generated@@305 ($generated@@183 $generated@@814) $generated@@815 $generated@@816))
 :pattern ( ($generated@@305 ($generated@@183 $generated@@814) $generated@@815 $generated@@816))
)))
(assert (forall (($generated@@818 T@U) ($generated@@819 T@U) ) (!  (=> (and (= (type $generated@@818) $generated@@153) (= (type $generated@@819) $generated@@153)) (= ($generated@@260 ($generated@@286 $generated@@818) ($generated@@286 $generated@@819)) ($generated@@286 ($generated@@260 $generated@@818 $generated@@819))))
 :pattern ( ($generated@@260 ($generated@@286 $generated@@818) ($generated@@286 $generated@@819)))
)))
(assert (forall (($generated@@820 Int) ) (! (= ($generated@@330 ($generated@@8 ($generated@@284 $generated@@820))) ($generated@@286 ($generated@@330 ($generated@@8 $generated@@820))))
 :pattern ( ($generated@@330 ($generated@@8 ($generated@@284 $generated@@820))))
)))
(assert (forall (($generated@@821 T@U) ) (! (= ($generated@@330 ($generated@@286 $generated@@821)) ($generated@@286 ($generated@@330 $generated@@821)))
 :pattern ( ($generated@@330 ($generated@@286 $generated@@821)))
)))
(assert (forall (($generated@@822 T@U) ) (! (let (($generated@@823 ($generated@@320 (type $generated@@822))))
 (=> (and (= (type $generated@@822) ($generated@@319 $generated@@823)) (= ($generated@@318 $generated@@822) 0)) (= $generated@@822 ($generated@@317 $generated@@823))))
 :pattern ( ($generated@@318 $generated@@822))
)))
(assert (forall (($generated@@824 T@U) ($generated@@825 T@U) ($generated@@826 T@U) ) (! (let (($generated@@827 (type $generated@@825)))
 (=> (and (and (= (type $generated@@824) ($generated@@91 $generated@@827 $generated@@2)) (= (type $generated@@826) $generated@@2)) (<= 0 ($generated $generated@@826))) (= ($generated@@343 ($generated@@97 $generated@@824 $generated@@825 $generated@@826)) (+ (- ($generated@@343 $generated@@824) ($generated ($generated@@96 $generated@@824 $generated@@825))) ($generated $generated@@826)))))
 :pattern ( ($generated@@343 ($generated@@97 $generated@@824 $generated@@825 $generated@@826)))
)))
(assert (forall (($generated@@828 T@U) ($generated@@829 T@U) ($generated@@830 T@U) ($generated@@831 T@U) ($generated@@832 T@U) ($generated@@833 T@U) ) (!  (=> (and (and (and (and (and (and (= (type $generated@@828) $generated@@74) (= (type $generated@@829) $generated@@74)) (= (type $generated@@830) ($generated@@91 $generated@@92 $generated@@93))) (= (type $generated@@831) ($generated@@91 $generated@@92 $generated@@93))) (= (type $generated@@832) $generated@@250)) (= (type $generated@@833) $generated@@153)) (and (and (and ($generated@@159 $generated@@830 $generated@@831) (and ($generated@@149 $generated@@830) ($generated@@149 $generated@@831))) (and ($generated@@152 $generated@@833 $generated@@828) ($generated@@166 $generated@@832 ($generated@@249 $generated@@828 $generated@@829)))) (forall (($generated@@834 T@U) ($generated@@835 T@U) ) (! (let (($generated@@836 ($generated@@77 (type $generated@@835))))
 (=> (and (and (= (type $generated@@834) $generated@@92) (= (type $generated@@835) ($generated@@76 $generated@@836))) (and (not (= $generated@@834 $generated@@150)) ($generated@@0 ($generated@@96 ($generated@@290 $generated@@828 $generated@@829 $generated@@830 $generated@@832 $generated@@833) ($generated@@330 $generated@@834))))) (= ($generated@@98 ($generated@@96 $generated@@830 $generated@@834) $generated@@835) ($generated@@98 ($generated@@96 $generated@@831 $generated@@834) $generated@@835))))
 :no-pattern (type $generated@@834)
 :no-pattern (type $generated@@835)
 :no-pattern ($generated $generated@@834)
 :no-pattern ($generated@@0 $generated@@834)
 :no-pattern ($generated $generated@@835)
 :no-pattern ($generated@@0 $generated@@835)
)))) (= ($generated@@290 $generated@@828 $generated@@829 $generated@@830 $generated@@832 $generated@@833) ($generated@@290 $generated@@828 $generated@@829 $generated@@831 $generated@@832 $generated@@833)))
 :pattern ( ($generated@@159 $generated@@830 $generated@@831) ($generated@@290 $generated@@828 $generated@@829 $generated@@831 $generated@@832 $generated@@833))
)))
(assert (forall (($generated@@837 T@U) ($generated@@838 T@U) ($generated@@839 T@U) ($generated@@840 T@U) ($generated@@841 T@U) ($generated@@842 T@U) ) (!  (=> (and (and (and (and (and (and (= (type $generated@@837) $generated@@74) (= (type $generated@@838) $generated@@74)) (= (type $generated@@839) ($generated@@91 $generated@@92 $generated@@93))) (= (type $generated@@840) ($generated@@91 $generated@@92 $generated@@93))) (= (type $generated@@841) $generated@@250)) (= (type $generated@@842) $generated@@153)) (and (and (and ($generated@@159 $generated@@839 $generated@@840) (and ($generated@@149 $generated@@839) ($generated@@149 $generated@@840))) (and ($generated@@152 $generated@@842 $generated@@837) ($generated@@166 $generated@@841 ($generated@@249 $generated@@837 $generated@@838)))) (forall (($generated@@843 T@U) ($generated@@844 T@U) ) (! (let (($generated@@845 ($generated@@77 (type $generated@@844))))
 (=> (and (and (= (type $generated@@843) $generated@@92) (= (type $generated@@844) ($generated@@76 $generated@@845))) (and (not (= $generated@@843 $generated@@150)) ($generated@@0 ($generated@@96 ($generated@@290 $generated@@837 $generated@@838 $generated@@840 $generated@@841 $generated@@842) ($generated@@330 $generated@@843))))) (= ($generated@@98 ($generated@@96 $generated@@839 $generated@@843) $generated@@844) ($generated@@98 ($generated@@96 $generated@@840 $generated@@843) $generated@@844))))
 :no-pattern (type $generated@@843)
 :no-pattern (type $generated@@844)
 :no-pattern ($generated $generated@@843)
 :no-pattern ($generated@@0 $generated@@843)
 :no-pattern ($generated $generated@@844)
 :no-pattern ($generated@@0 $generated@@844)
)))) (= ($generated@@290 $generated@@837 $generated@@838 $generated@@839 $generated@@841 $generated@@842) ($generated@@290 $generated@@837 $generated@@838 $generated@@840 $generated@@841 $generated@@842)))
 :pattern ( ($generated@@159 $generated@@839 $generated@@840) ($generated@@290 $generated@@837 $generated@@838 $generated@@840 $generated@@841 $generated@@842))
)))
(assert (forall (($generated@@846 T@U) ($generated@@847 T@U) ($generated@@848 T@U) ($generated@@849 T@U) ($generated@@850 T@U) ($generated@@851 T@U) ) (!  (=> (and (and (and (and (and (and (= (type $generated@@846) $generated@@74) (= (type $generated@@847) $generated@@74)) (= (type $generated@@848) ($generated@@91 $generated@@92 $generated@@93))) (= (type $generated@@849) ($generated@@91 $generated@@92 $generated@@93))) (= (type $generated@@850) $generated@@250)) (= (type $generated@@851) $generated@@153)) (and (and (and ($generated@@159 $generated@@848 $generated@@849) (and ($generated@@149 $generated@@848) ($generated@@149 $generated@@849))) (and ($generated@@152 $generated@@851 $generated@@846) ($generated@@166 $generated@@850 ($generated@@249 $generated@@846 $generated@@847)))) (forall (($generated@@852 T@U) ($generated@@853 T@U) ) (! (let (($generated@@854 ($generated@@77 (type $generated@@853))))
 (=> (and (and (= (type $generated@@852) $generated@@92) (= (type $generated@@853) ($generated@@76 $generated@@854))) (and (not (= $generated@@852 $generated@@150)) ($generated@@0 ($generated@@96 ($generated@@290 $generated@@846 $generated@@847 $generated@@848 $generated@@850 $generated@@851) ($generated@@330 $generated@@852))))) (= ($generated@@98 ($generated@@96 $generated@@848 $generated@@852) $generated@@853) ($generated@@98 ($generated@@96 $generated@@849 $generated@@852) $generated@@853))))
 :no-pattern (type $generated@@852)
 :no-pattern (type $generated@@853)
 :no-pattern ($generated $generated@@852)
 :no-pattern ($generated@@0 $generated@@852)
 :no-pattern ($generated $generated@@853)
 :no-pattern ($generated@@0 $generated@@853)
)))) (= ($generated@@409 $generated@@846 $generated@@847 $generated@@848 $generated@@850 $generated@@851) ($generated@@409 $generated@@846 $generated@@847 $generated@@849 $generated@@850 $generated@@851)))
 :pattern ( ($generated@@159 $generated@@848 $generated@@849) ($generated@@409 $generated@@846 $generated@@847 $generated@@849 $generated@@850 $generated@@851))
)))
(assert (forall (($generated@@855 T@U) ($generated@@856 T@U) ($generated@@857 T@U) ($generated@@858 T@U) ($generated@@859 T@U) ($generated@@860 T@U) ) (!  (=> (and (and (and (and (and (and (= (type $generated@@855) $generated@@74) (= (type $generated@@856) $generated@@74)) (= (type $generated@@857) ($generated@@91 $generated@@92 $generated@@93))) (= (type $generated@@858) ($generated@@91 $generated@@92 $generated@@93))) (= (type $generated@@859) $generated@@250)) (= (type $generated@@860) $generated@@153)) (and (and (and ($generated@@159 $generated@@857 $generated@@858) (and ($generated@@149 $generated@@857) ($generated@@149 $generated@@858))) (and ($generated@@152 $generated@@860 $generated@@855) ($generated@@166 $generated@@859 ($generated@@249 $generated@@855 $generated@@856)))) (forall (($generated@@861 T@U) ($generated@@862 T@U) ) (! (let (($generated@@863 ($generated@@77 (type $generated@@862))))
 (=> (and (and (= (type $generated@@861) $generated@@92) (= (type $generated@@862) ($generated@@76 $generated@@863))) (and (not (= $generated@@861 $generated@@150)) ($generated@@0 ($generated@@96 ($generated@@290 $generated@@855 $generated@@856 $generated@@858 $generated@@859 $generated@@860) ($generated@@330 $generated@@861))))) (= ($generated@@98 ($generated@@96 $generated@@857 $generated@@861) $generated@@862) ($generated@@98 ($generated@@96 $generated@@858 $generated@@861) $generated@@862))))
 :no-pattern (type $generated@@861)
 :no-pattern (type $generated@@862)
 :no-pattern ($generated $generated@@861)
 :no-pattern ($generated@@0 $generated@@861)
 :no-pattern ($generated $generated@@862)
 :no-pattern ($generated@@0 $generated@@862)
)))) (= ($generated@@409 $generated@@855 $generated@@856 $generated@@857 $generated@@859 $generated@@860) ($generated@@409 $generated@@855 $generated@@856 $generated@@858 $generated@@859 $generated@@860)))
 :pattern ( ($generated@@159 $generated@@857 $generated@@858) ($generated@@409 $generated@@855 $generated@@856 $generated@@858 $generated@@859 $generated@@860))
)))
(assert (forall (($generated@@864 T@U) ($generated@@865 T@U) ) (!  (=> (and (= (type $generated@@864) ($generated@@91 $generated@@92 $generated@@93)) (= (type $generated@@865) $generated@@2)) ($generated@@89 $generated@@865 $generated@@46 $generated@@864))
 :pattern ( ($generated@@89 $generated@@865 $generated@@46 $generated@@864))
)))
(assert (forall (($generated@@866 T@U) ($generated@@867 T@U) ) (!  (=> (and (= (type $generated@@866) ($generated@@91 $generated@@92 $generated@@93)) (= (type $generated@@867) $generated@@3)) ($generated@@89 $generated@@867 $generated@@47 $generated@@866))
 :pattern ( ($generated@@89 $generated@@867 $generated@@47 $generated@@866))
)))
(assert (forall (($generated@@868 T@U) ($generated@@869 T@U) ) (!  (=> (and (= (type $generated@@868) ($generated@@91 $generated@@92 $generated@@93)) (= (type $generated@@869) $generated@@4)) ($generated@@89 $generated@@869 $generated@@44 $generated@@868))
 :pattern ( ($generated@@89 $generated@@869 $generated@@44 $generated@@868))
)))
(assert (forall (($generated@@870 T@U) ($generated@@871 T@U) ) (!  (=> (and (= (type $generated@@870) ($generated@@91 $generated@@92 $generated@@93)) (= (type $generated@@871) $generated@@620)) ($generated@@89 $generated@@871 $generated@@45 $generated@@870))
 :pattern ( ($generated@@89 $generated@@871 $generated@@45 $generated@@870))
)))
(assert (forall (($generated@@872 T@U) ($generated@@873 T@U) ) (!  (=> (and (= (type $generated@@872) ($generated@@91 $generated@@92 $generated@@93)) (= (type $generated@@873) $generated@@153)) ($generated@@89 $generated@@873 $generated@@48 $generated@@872))
 :pattern ( ($generated@@89 $generated@@873 $generated@@48 $generated@@872))
)))
(assert (forall (($generated@@874 T@U) ($generated@@875 T@U) ) (!  (=> (and (= (type $generated@@874) ($generated@@319 $generated@@153)) (= (type $generated@@875) $generated@@74)) (= ($generated@@166 $generated@@874 ($generated@@685 $generated@@875)) (forall (($generated@@876 Int) ) (!  (=> (and (<= 0 $generated@@876) (< $generated@@876 ($generated@@318 $generated@@874))) ($generated@@152 ($generated@@686 $generated@@874 $generated@@876) $generated@@875))
 :pattern ( ($generated@@686 $generated@@874 $generated@@876))
))))
 :pattern ( ($generated@@166 $generated@@874 ($generated@@685 $generated@@875)))
)))
(assert (forall (($generated@@878 T@U) ($generated@@879 Int) ) (!  (=> (= (type $generated@@878) ($generated@@319 $generated@@153)) (=> (and (<= 0 $generated@@879) (< $generated@@879 ($generated@@318 $generated@@878))) (< ($generated@@730 ($generated@@528 $generated@@175 ($generated@@686 $generated@@878 $generated@@879))) ($generated@@877 $generated@@878))))
 :pattern ( ($generated@@730 ($generated@@528 $generated@@175 ($generated@@686 $generated@@878 $generated@@879))))
)))
(assert (forall (($generated@@880 T@U) ($generated@@881 T@U) ($generated@@882 T@U) ) (!  (=> (and (and (and (= (type $generated@@880) ($generated@@355 $generated@@153 $generated@@153)) (= (type $generated@@881) $generated@@74)) (= (type $generated@@882) $generated@@74)) ($generated@@166 $generated@@880 ($generated@@564 $generated@@881 $generated@@882))) (and (and ($generated@@166 ($generated@@353 $generated@@880) ($generated@@274 $generated@@881)) ($generated@@166 ($generated@@484 $generated@@880) ($generated@@274 $generated@@882))) ($generated@@166 ($generated@@527 $generated@@880) ($generated@@274 ($generated@@174 $generated@@881 $generated@@882)))))
 :pattern ( ($generated@@166 $generated@@880 ($generated@@564 $generated@@881 $generated@@882)))
)))
(assert (forall (($generated@@883 T@U) ($generated@@884 T@U) ($generated@@885 T@U) ) (!  (=> (and (and (and (= (type $generated@@883) ($generated@@373 $generated@@153 $generated@@153)) (= (type $generated@@884) $generated@@74)) (= (type $generated@@885) $generated@@74)) ($generated@@166 $generated@@883 ($generated@@572 $generated@@884 $generated@@885))) (and (and ($generated@@166 ($generated@@371 $generated@@883) ($generated@@279 $generated@@884)) ($generated@@166 ($generated@@495 $generated@@883) ($generated@@279 $generated@@885))) ($generated@@166 ($generated@@538 $generated@@883) ($generated@@279 ($generated@@174 $generated@@884 $generated@@885)))))
 :pattern ( ($generated@@166 $generated@@883 ($generated@@572 $generated@@884 $generated@@885)))
)))
(assert (forall (($generated@@886 T@U) ) (!  (=> (= (type $generated@@886) $generated@@2) ($generated@@166 $generated@@886 $generated@@46))
 :pattern ( ($generated@@166 $generated@@886 $generated@@46))
)))
(assert (forall (($generated@@887 T@U) ) (!  (=> (= (type $generated@@887) $generated@@3) ($generated@@166 $generated@@887 $generated@@47))
 :pattern ( ($generated@@166 $generated@@887 $generated@@47))
)))
(assert (forall (($generated@@888 T@U) ) (!  (=> (= (type $generated@@888) $generated@@4) ($generated@@166 $generated@@888 $generated@@44))
 :pattern ( ($generated@@166 $generated@@888 $generated@@44))
)))
(assert (forall (($generated@@889 T@U) ) (!  (=> (= (type $generated@@889) $generated@@620) ($generated@@166 $generated@@889 $generated@@45))
 :pattern ( ($generated@@166 $generated@@889 $generated@@45))
)))
(assert (forall (($generated@@890 T@U) ) (!  (=> (= (type $generated@@890) $generated@@153) ($generated@@166 $generated@@890 $generated@@48))
 :pattern ( ($generated@@166 $generated@@890 $generated@@48))
)))
(push 1)
(declare-fun ControlFlow (Int Int) Int)
(declare-fun $generated@@891 () T@U)
(declare-fun $generated@@892 () T@U)
(declare-fun $generated@@893 () T@U)
(declare-fun $generated@@894 () T@U)
(declare-fun $generated@@895 (T@U) Bool)
(declare-fun $generated@@896 () Bool)
(declare-fun $generated@@897 () T@U)
(declare-fun $generated@@898 () Int)
(assert  (and (and (and (and (= (type $generated@@891) ($generated@@195 $generated@@92 $generated@@4)) (= (type $generated@@892) ($generated@@91 $generated@@92 $generated@@93))) (= (type $generated@@893) $generated@@92)) (= (type $generated@@894) ($generated@@91 $generated@@92 $generated@@93))) (= (type $generated@@897) $generated@@92)))
(set-option :timeout 0)
(set-option :rlimit 0)
(assert (not
 (=> (= (ControlFlow 0 0) 6) (let (($generated@@899  (=> (= $generated@@891 ($generated@@194 $generated@@150 $generated@@892 $generated@@60 false)) (=> (and (not (= $generated@@893 $generated@@150)) (= ($generated@@151 $generated@@893) ($generated@@148 ($generated@@399 $generated@@46 $generated@@44)))) (=> (and (and (not ($generated@@0 ($generated@@98 ($generated@@96 $generated@@892 $generated@@893) $generated@@60))) (= $generated@@894 ($generated@@97 $generated@@892 $generated@@893 ($generated@@99 ($generated@@96 $generated@@892 $generated@@893) $generated@@60 ($generated@@11 true))))) (and ($generated@@149 $generated@@894) ($generated@@895 $generated@@894))) (and (=> (= (ControlFlow 0 2) (- 0 5)) true) (and (=> (= (ControlFlow 0 2) (- 0 4)) (not (= $generated@@893 $generated@@150))) (and (=> (= (ControlFlow 0 2) (- 0 3)) ($generated@@505 $generated@@46 $generated@@44 $generated@@894 ($generated@@528 $generated@@250 ($generated@@98 ($generated@@96 $generated@@894 $generated@@893) $generated@@147)) ($generated@@330 ($generated@@8 ($generated@@284 0))))) (=> ($generated@@505 $generated@@46 $generated@@44 $generated@@894 ($generated@@528 $generated@@250 ($generated@@98 ($generated@@96 $generated@@894 $generated@@893) $generated@@147)) ($generated@@330 ($generated@@8 ($generated@@284 0)))) (=> (= (ControlFlow 0 2) (- 0 1)) ($generated@@0 ($generated@@528 $generated@@4 ($generated@@409 $generated@@46 $generated@@44 $generated@@894 ($generated@@528 $generated@@250 ($generated@@98 ($generated@@96 $generated@@894 $generated@@893) $generated@@147)) ($generated@@330 ($generated@@8 ($generated@@284 0))))))))))))))))
(let (($generated@@900  (=> (and ($generated@@149 $generated@@892) ($generated@@895 $generated@@892)) (=> (and (and (=> $generated@@896 (and ($generated@@166 $generated@@897 ($generated@@168 ($generated@@399 $generated@@46 $generated@@44))) ($generated@@89 $generated@@897 ($generated@@168 ($generated@@399 $generated@@46 $generated@@44)) $generated@@892))) true) (and (= 1 $generated@@898) (= (ControlFlow 0 6) 2))) $generated@@899))))
$generated@@900)))
))
(check-sat)
(get-info :reason-unknown)
(assert (not (= (ControlFlow 0 2) (- 3))))
(check-sat)
(get-info :reason-unknown)
(assert (not (= (ControlFlow 0 2) (- 1))))
(check-sat)
(pop 1)
; Invalid
(get-info :rlimit)
(reset)
(set-option :rlimit 0)
; did a full reset
(reset)
(set-option :print-success false)
(set-info :smt-lib-version 2.6)
(set-option :auto_config false)
(set-option :type_check true)
(set-option :smt.case_split 3)
(set-option :smt.qi.eager_threshold 100)
(set-option :smt.delay_units true)
(set-option :smt.arith.solver 2)
(set-option :smt.mbqi false)
(set-option :model.compact false)
(set-option :model.v2 true)
(set-option :pp.bv_literals false)
; done setting options


(set-info :category "industrial")
(declare-sort |T@U| 0)
(declare-sort |T@T| 0)
(declare-fun real_pow (Real Real) Real)
(declare-fun UOrdering2 (|T@U| |T@U|) Bool)
(declare-fun UOrdering3 (|T@T| |T@U| |T@U|) Bool)
(declare-fun tickleBool (Bool) Bool)
(assert (and (tickleBool true) (tickleBool false)))
(declare-fun $generated (T@U) Int)
(declare-fun $generated@@0 (T@U) Bool)
(declare-fun $generated@@1 (T@T) Int)
(declare-fun $generated@@2 () T@T)
(declare-fun $generated@@3 () T@T)
(declare-fun $generated@@4 () T@T)
(declare-fun $generated@@5 () T@T)
(declare-fun $generated@@6 () T@T)
(declare-fun $generated@@7 () T@T)
(declare-fun $generated@@8 (Int) T@U)
(declare-fun type (T@U) T@T)
(declare-fun $generated@@9 (Real) T@U)
(declare-fun $generated@@10 (T@U) Real)
(declare-fun $generated@@11 (Bool) T@U)
(declare-fun $generated@@12 (RoundingMode) T@U)
(declare-fun $generated@@13 (T@U) RoundingMode)
(declare-fun $generated@@14 (String) T@U)
(declare-fun $generated@@15 (T@U) String)
(declare-fun $generated@@16 ((RegEx String)) T@U)
(declare-fun $generated@@17 (T@U) (RegEx String))
(declare-fun $generated@@44 (T@U T@U T@U) T@U)
(declare-fun $generated@@45 (T@U T@U T@U Bool) T@U)
(declare-fun $generated@@46 (T@T) T@T)
(declare-fun $generated@@47 () T@T)
(declare-fun $generated@@48 (T@T T@T) T@T)
(declare-fun $generated@@49 () T@T)
(declare-fun $generated@@50 (T@T) T@T)
(declare-fun $generated@@51 (T@U T@U) T@U)
(declare-fun $generated@@52 (T@U T@U) T@U)
(declare-fun $generated@@53 (T@T) T@T)
(declare-fun $generated@@54 (T@T) T@T)
(declare-fun $generated@@55 (T@U T@U T@U) T@U)
(declare-fun $generated@@56 (T@U T@U T@U) T@U)
(declare-fun $generated@@57 (T@T T@T) T@T)
(declare-fun $generated@@58 (T@T) T@T)
(declare-fun $generated@@59 (T@T) T@T)
(declare-fun $generated@@60 (T@U T@U T@U T@U) T@U)
(declare-fun $generated@@157 (T@U) T@U)
(declare-fun $generated@@161 (T@U) T@U)
(declare-fun $generated@@162 (T@T T@U) T@U)
(declare-fun $generated@@163 () T@T)
(assert  (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (= ($generated@@1 $generated@@2) 0) (= ($generated@@1 $generated@@3) 1)) (= ($generated@@1 $generated@@4) 2)) (= ($generated@@1 $generated@@5) 3)) (= ($generated@@1 $generated@@6) 4)) (= ($generated@@1 $generated@@7) 5)) (forall (($generated@@18 Int) ) (! (= ($generated ($generated@@8 $generated@@18)) $generated@@18)
 :pattern ( ($generated@@8 $generated@@18))
))) (forall (($generated@@19 T@U) ) (!  (=> (= (type $generated@@19) $generated@@2) (= ($generated@@8 ($generated $generated@@19)) $generated@@19))
 :pattern ( ($generated $generated@@19))
))) (forall (($generated@@20 Int) ) (! (= (type ($generated@@8 $generated@@20)) $generated@@2)
 :pattern ( ($generated@@8 $generated@@20))
))) (forall (($generated@@21 Real) ) (! (= ($generated@@10 ($generated@@9 $generated@@21)) $generated@@21)
 :pattern ( ($generated@@9 $generated@@21))
))) (forall (($generated@@22 T@U) ) (!  (=> (= (type $generated@@22) $generated@@3) (= ($generated@@9 ($generated@@10 $generated@@22)) $generated@@22))
 :pattern ( ($generated@@10 $generated@@22))
))) (forall (($generated@@23 Real) ) (! (= (type ($generated@@9 $generated@@23)) $generated@@3)
 :pattern ( ($generated@@9 $generated@@23))
))) (forall (($generated@@24 Bool) ) (! (= ($generated@@0 ($generated@@11 $generated@@24)) $generated@@24)
 :pattern ( ($generated@@11 $generated@@24))
))) (forall (($generated@@25 T@U) ) (!  (=> (= (type $generated@@25) $generated@@4) (= ($generated@@11 ($generated@@0 $generated@@25)) $generated@@25))
 :pattern ( ($generated@@0 $generated@@25))
))) (forall (($generated@@26 Bool) ) (! (= (type ($generated@@11 $generated@@26)) $generated@@4)
 :pattern ( ($generated@@11 $generated@@26))
))) (forall (($generated@@27 RoundingMode) ) (! (= ($generated@@13 ($generated@@12 $generated@@27)) $generated@@27)
 :pattern ( ($generated@@12 $generated@@27))
))) (forall (($generated@@28 T@U) ) (!  (=> (= (type $generated@@28) $generated@@5) (= ($generated@@12 ($generated@@13 $generated@@28)) $generated@@28))
 :pattern ( ($generated@@13 $generated@@28))
))) (forall (($generated@@29 RoundingMode) ) (! (= (type ($generated@@12 $generated@@29)) $generated@@5)
 :pattern ( ($generated@@12 $generated@@29))
))) (forall (($generated@@30 String) ) (! (= ($generated@@15 ($generated@@14 $generated@@30)) $generated@@30)
 :pattern ( ($generated@@14 $generated@@30))
))) (forall (($generated@@31 T@U) ) (!  (=> (= (type $generated@@31) $generated@@6) (= ($generated@@14 ($generated@@15 $generated@@31)) $generated@@31))
 :pattern ( ($generated@@15 $generated@@31))
))) (forall (($generated@@32 String) ) (! (= (type ($generated@@14 $generated@@32)) $generated@@6)
 :pattern ( ($generated@@14 $generated@@32))
))) (forall (($generated@@33 (RegEx String)) ) (! (= ($generated@@17 ($generated@@16 $generated@@33)) $generated@@33)
 :pattern ( ($generated@@16 $generated@@33))
))) (forall (($generated@@34 T@U) ) (!  (=> (= (type $generated@@34) $generated@@7) (= ($generated@@16 ($generated@@17 $generated@@34)) $generated@@34))
 :pattern ( ($generated@@17 $generated@@34))
))) (forall (($generated@@35 (RegEx String)) ) (! (= (type ($generated@@16 $generated@@35)) $generated@@7)
 :pattern ( ($generated@@16 $generated@@35))
))))
(assert (forall (($generated@@36 T@U) ) (! (UOrdering2 $generated@@36 $generated@@36)
 :no-pattern ($generated $generated@@36)
 :no-pattern ($generated@@0 $generated@@36)
)))
(assert (forall (($generated@@37 T@U) ($generated@@38 T@U) ($generated@@39 T@U) ) (! (let (($generated@@40 (type $generated@@37)))
 (=> (and (and (= (type $generated@@38) $generated@@40) (= (type $generated@@39) $generated@@40)) (and (UOrdering2 $generated@@37 $generated@@38) (UOrdering2 $generated@@38 $generated@@39))) (UOrdering2 $generated@@37 $generated@@39)))
 :pattern ( (UOrdering2 $generated@@37 $generated@@38) (UOrdering2 $generated@@38 $generated@@39))
)))
(assert (forall (($generated@@41 T@U) ($generated@@42 T@U) ) (! (let (($generated@@43 (type $generated@@41)))
 (=> (= (type $generated@@42) $generated@@43) (=> (and (UOrdering2 $generated@@41 $generated@@42) (UOrdering2 $generated@@42 $generated@@41)) (= $generated@@41 $generated@@42))))
 :pattern ( (UOrdering2 $generated@@41 $generated@@42) (UOrdering2 $generated@@42 $generated@@41))
)))
(assert  (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (forall (($generated@@61 T@T) ($generated@@62 T@T) ) (= ($generated@@1 ($generated@@48 $generated@@61 $generated@@62)) 6)) (forall (($generated@@63 T@T) ($generated@@64 T@T) ) (! (= ($generated@@53 ($generated@@48 $generated@@63 $generated@@64)) $generated@@63)
 :pattern ( ($generated@@48 $generated@@63 $generated@@64))
))) (forall (($generated@@65 T@T) ($generated@@66 T@T) ) (! (= ($generated@@54 ($generated@@48 $generated@@65 $generated@@66)) $generated@@66)
 :pattern ( ($generated@@48 $generated@@65 $generated@@66))
))) (forall (($generated@@67 T@U) ($generated@@68 T@U) ) (! (let (($generated@@69 ($generated@@54 (type $generated@@67))))
(= (type ($generated@@52 $generated@@67 $generated@@68)) $generated@@69))
 :pattern ( ($generated@@52 $generated@@67 $generated@@68))
))) (forall (($generated@@70 T@U) ($generated@@71 T@U) ($generated@@72 T@U) ) (! (let (($generated@@73 (type $generated@@72)))
(let (($generated@@74 (type $generated@@71)))
(= (type ($generated@@55 $generated@@70 $generated@@71 $generated@@72)) ($generated@@48 $generated@@74 $generated@@73))))
 :pattern ( ($generated@@55 $generated@@70 $generated@@71 $generated@@72))
))) (forall (($generated@@75 T@U) ($generated@@76 T@U) ($generated@@77 T@U) ) (! (let (($generated@@78 ($generated@@54 (type $generated@@75))))
 (=> (= (type $generated@@77) $generated@@78) (= ($generated@@52 ($generated@@55 $generated@@75 $generated@@76 $generated@@77) $generated@@76) $generated@@77)))
 :weight 0
))) (and (forall (($generated@@79 T@U) ($generated@@80 T@U) ($generated@@81 T@U) ($generated@@82 T@U) ) (!  (or (= $generated@@81 $generated@@82) (= ($generated@@52 ($generated@@55 $generated@@80 $generated@@81 $generated@@79) $generated@@82) ($generated@@52 $generated@@80 $generated@@82)))
 :weight 0
)) (forall (($generated@@83 T@U) ($generated@@84 T@U) ($generated@@85 T@U) ($generated@@86 T@U) ) (!  (or true (= ($generated@@52 ($generated@@55 $generated@@84 $generated@@85 $generated@@83) $generated@@86) ($generated@@52 $generated@@84 $generated@@86)))
 :weight 0
)))) (forall (($generated@@87 T@T) ) (= ($generated@@1 ($generated@@50 $generated@@87)) 7))) (forall (($generated@@88 T@T) ) (! (= ($generated@@46 ($generated@@50 $generated@@88)) $generated@@88)
 :pattern ( ($generated@@50 $generated@@88))
))) (forall (($generated@@89 T@U) ($generated@@90 T@U) ) (! (let (($generated@@91 ($generated@@46 (type $generated@@90))))
(= (type ($generated@@51 $generated@@89 $generated@@90)) $generated@@91))
 :pattern ( ($generated@@51 $generated@@89 $generated@@90))
))) (= ($generated@@1 $generated@@49) 8)) (forall (($generated@@92 T@U) ($generated@@93 T@U) ($generated@@94 T@U) ) (! (= (type ($generated@@56 $generated@@92 $generated@@93 $generated@@94)) $generated@@49)
 :pattern ( ($generated@@56 $generated@@92 $generated@@93 $generated@@94))
))) (forall (($generated@@95 T@U) ($generated@@96 T@U) ($generated@@97 T@U) ) (! (let (($generated@@98 ($generated@@46 (type $generated@@96))))
 (=> (= (type $generated@@97) $generated@@98) (= ($generated@@51 ($generated@@56 $generated@@95 $generated@@96 $generated@@97) $generated@@96) $generated@@97)))
 :weight 0
))) (and (forall (($generated@@99 T@U) ($generated@@100 T@U) ($generated@@101 T@U) ($generated@@102 T@U) ) (!  (or (= $generated@@101 $generated@@102) (= ($generated@@51 ($generated@@56 $generated@@100 $generated@@101 $generated@@99) $generated@@102) ($generated@@51 $generated@@100 $generated@@102)))
 :weight 0
)) (forall (($generated@@103 T@U) ($generated@@104 T@U) ($generated@@105 T@U) ($generated@@106 T@U) ) (!  (or true (= ($generated@@51 ($generated@@56 $generated@@104 $generated@@105 $generated@@103) $generated@@106) ($generated@@51 $generated@@104 $generated@@106)))
 :weight 0
)))) (= ($generated@@1 $generated@@47) 9)) (forall (($generated@@107 T@T) ($generated@@108 T@T) ) (= ($generated@@1 ($generated@@57 $generated@@107 $generated@@108)) 10))) (forall (($generated@@109 T@T) ($generated@@110 T@T) ) (! (= ($generated@@58 ($generated@@57 $generated@@109 $generated@@110)) $generated@@109)
 :pattern ( ($generated@@57 $generated@@109 $generated@@110))
))) (forall (($generated@@111 T@T) ($generated@@112 T@T) ) (! (= ($generated@@59 ($generated@@57 $generated@@111 $generated@@112)) $generated@@112)
 :pattern ( ($generated@@57 $generated@@111 $generated@@112))
))) (forall (($generated@@113 T@U) ($generated@@114 T@U) ($generated@@115 T@U) ) (! (let (($generated@@116 ($generated@@59 (type $generated@@113))))
(= (type ($generated@@44 $generated@@113 $generated@@114 $generated@@115)) $generated@@116))
 :pattern ( ($generated@@44 $generated@@113 $generated@@114 $generated@@115))
))) (forall (($generated@@117 T@U) ($generated@@118 T@U) ($generated@@119 T@U) ($generated@@120 T@U) ) (! (let (($generated@@121 (type $generated@@120)))
(let (($generated@@122 (type $generated@@118)))
(= (type ($generated@@60 $generated@@117 $generated@@118 $generated@@119 $generated@@120)) ($generated@@57 $generated@@122 $generated@@121))))
 :pattern ( ($generated@@60 $generated@@117 $generated@@118 $generated@@119 $generated@@120))
))) (forall (($generated@@123 T@U) ($generated@@124 T@U) ($generated@@125 T@U) ($generated@@126 T@U) ) (! (let (($generated@@127 ($generated@@59 (type $generated@@123))))
 (=> (= (type $generated@@126) $generated@@127) (= ($generated@@44 ($generated@@60 $generated@@123 $generated@@124 $generated@@125 $generated@@126) $generated@@124 $generated@@125) $generated@@126)))
 :weight 0
))) (and (and (forall (($generated@@128 T@U) ($generated@@129 T@U) ($generated@@130 T@U) ($generated@@131 T@U) ($generated@@132 T@U) ($generated@@133 T@U) ) (!  (or (= $generated@@130 $generated@@132) (= ($generated@@44 ($generated@@60 $generated@@129 $generated@@130 $generated@@131 $generated@@128) $generated@@132 $generated@@133) ($generated@@44 $generated@@129 $generated@@132 $generated@@133)))
 :weight 0
)) (forall (($generated@@134 T@U) ($generated@@135 T@U) ($generated@@136 T@U) ($generated@@137 T@U) ($generated@@138 T@U) ($generated@@139 T@U) ) (!  (or (= $generated@@137 $generated@@139) (= ($generated@@44 ($generated@@60 $generated@@135 $generated@@136 $generated@@137 $generated@@134) $generated@@138 $generated@@139) ($generated@@44 $generated@@135 $generated@@138 $generated@@139)))
 :weight 0
))) (forall (($generated@@140 T@U) ($generated@@141 T@U) ($generated@@142 T@U) ($generated@@143 T@U) ($generated@@144 T@U) ($generated@@145 T@U) ) (!  (or true (= ($generated@@44 ($generated@@60 $generated@@141 $generated@@142 $generated@@143 $generated@@140) $generated@@144 $generated@@145) ($generated@@44 $generated@@141 $generated@@144 $generated@@145)))
 :weight 0
)))) (forall (($generated@@146 T@U) ($generated@@147 T@U) ($generated@@148 T@U) ($generated@@149 Bool) ) (! (= (type ($generated@@45 $generated@@146 $generated@@147 $generated@@148 $generated@@149)) ($generated@@57 $generated@@47 $generated@@4))
 :pattern ( ($generated@@45 $generated@@146 $generated@@147 $generated@@148 $generated@@149))
))))
(assert (forall (($generated@@150 T@U) ($generated@@151 T@U) ($generated@@152 T@U) ($generated@@153 Bool) ($generated@@154 T@U) ($generated@@155 T@U) ) (! (let (($generated@@156 ($generated@@46 (type $generated@@155))))
 (=> (and (and (and (and (= (type $generated@@150) $generated@@47) (= (type $generated@@151) ($generated@@48 $generated@@47 $generated@@49))) (= (type $generated@@152) ($generated@@50 $generated@@4))) (= (type $generated@@154) $generated@@47)) (= (type $generated@@155) ($generated@@50 $generated@@156))) (= ($generated@@0 ($generated@@44 ($generated@@45 $generated@@150 $generated@@151 $generated@@152 $generated@@153) $generated@@154 $generated@@155))  (=> (and (not (= $generated@@154 $generated@@150)) ($generated@@0 ($generated@@51 ($generated@@52 $generated@@151 $generated@@154) $generated@@152))) $generated@@153))))
 :pattern ( ($generated@@44 ($generated@@45 $generated@@150 $generated@@151 $generated@@152 $generated@@153) $generated@@154 $generated@@155))
)))
(assert (forall (($generated@@158 T@U) ) (! (let (($generated@@159 (type $generated@@158)))
(= (type ($generated@@157 $generated@@158)) $generated@@159))
 :pattern ( ($generated@@157 $generated@@158))
)))
(assert (forall (($generated@@160 T@U) ) (! (= ($generated@@157 $generated@@160) $generated@@160)
 :pattern ( ($generated@@157 $generated@@160))
)))
(assert  (and (and (= ($generated@@1 $generated@@163) 11) (forall (($generated@@164 T@U) ) (! (= (type ($generated@@161 $generated@@164)) $generated@@163)
 :pattern ( ($generated@@161 $generated@@164))
))) (forall (($generated@@165 T@T) ($generated@@166 T@U) ) (! (= (type ($generated@@162 $generated@@165 $generated@@166)) $generated@@165)
 :pattern ( ($generated@@162 $generated@@165 $generated@@166))
))))
(assert (forall (($generated@@167 T@U) ) (! (let (($generated@@168 (type $generated@@167)))
(= ($generated@@162 $generated@@168 ($generated@@161 $generated@@167)) $generated@@167))
 :pattern ( ($generated@@161 $generated@@167))
)))
(assert (forall (($generated@@169 T@U) ) (! (= ($generated@@161 ($generated@@157 $generated@@169)) ($generated@@157 ($generated@@161 $generated@@169)))
 :pattern ( ($generated@@161 ($generated@@157 $generated@@169)))
)))
(push 1)
(declare-fun ControlFlow (Int Int) Int)
(declare-fun $generated@@170 () T@U)
(declare-fun $generated@@171 () T@U)
(declare-fun $generated@@172 () T@U)
(declare-fun $generated@@173 () T@U)
(declare-fun $generated@@174 (T@U) Bool)
(declare-fun $generated@@175 (T@U) Bool)
(declare-fun $generated@@176 () Int)
(assert  (and (and (and (= (type $generated@@170) ($generated@@57 $generated@@47 $generated@@4)) (= (type $generated@@171) $generated@@47)) (= (type $generated@@172) ($generated@@48 $generated@@47 $generated@@49))) (= (type $generated@@173) ($generated@@50 $generated@@4))))
(set-option :timeout 0)
(set-option :rlimit 0)
(assert (not
 (=> (= (ControlFlow 0 0) 5) (let (($generated@@177  (=> (= (ControlFlow 0 3) (- 0 2)) ($generated@@0 ($generated@@157 ($generated@@11 (< (- 0 1) 0)))))))
(let (($generated@@178 true))
(let (($generated@@179  (=> (= $generated@@170 ($generated@@45 $generated@@171 $generated@@172 $generated@@173 false)) (and (=> (= (ControlFlow 0 4) 1) $generated@@178) (=> (= (ControlFlow 0 4) 3) $generated@@177)))))
(let (($generated@@180  (=> (and (and ($generated@@174 $generated@@172) ($generated@@175 $generated@@172)) (and (= 0 $generated@@176) (= (ControlFlow 0 5) 4))) $generated@@179)))
$generated@@180)))))
))
(check-sat)
(pop 1)
; Valid
(get-info :rlimit)
(reset)
(set-option :rlimit 0)
; did a full reset
(reset)
(set-option :print-success false)
(set-info :smt-lib-version 2.6)
(set-option :auto_config false)
(set-option :type_check true)
(set-option :smt.case_split 3)
(set-option :smt.qi.eager_threshold 100)
(set-option :smt.delay_units true)
(set-option :smt.arith.solver 2)
(set-option :smt.mbqi false)
(set-option :model.compact false)
(set-option :model.v2 true)
(set-option :pp.bv_literals false)
; done setting options


(set-info :category "industrial")
(declare-sort |T@U| 0)
(declare-sort |T@T| 0)
(declare-fun real_pow (Real Real) Real)
(declare-fun UOrdering2 (|T@U| |T@U|) Bool)
(declare-fun UOrdering3 (|T@T| |T@U| |T@U|) Bool)
(declare-fun tickleBool (Bool) Bool)
(assert (and (tickleBool true) (tickleBool false)))
(declare-fun $generated (T@U) Int)
(declare-fun $generated@@0 (T@U) Bool)
(declare-fun $generated@@1 (T@T) Int)
(declare-fun $generated@@2 () T@T)
(declare-fun $generated@@3 () T@T)
(declare-fun $generated@@4 () T@T)
(declare-fun $generated@@5 () T@T)
(declare-fun $generated@@6 () T@T)
(declare-fun $generated@@7 () T@T)
(declare-fun $generated@@8 (Int) T@U)
(declare-fun type (T@U) T@T)
(declare-fun $generated@@9 (Real) T@U)
(declare-fun $generated@@10 (T@U) Real)
(declare-fun $generated@@11 (Bool) T@U)
(declare-fun $generated@@12 (RoundingMode) T@U)
(declare-fun $generated@@13 (T@U) RoundingMode)
(declare-fun $generated@@14 (String) T@U)
(declare-fun $generated@@15 (T@U) String)
(declare-fun $generated@@16 ((RegEx String)) T@U)
(declare-fun $generated@@17 (T@U) (RegEx String))
(declare-fun $generated@@44 () T@U)
(declare-fun $generated@@45 () T@U)
(declare-fun $generated@@46 () T@U)
(declare-fun $generated@@47 () T@U)
(declare-fun $generated@@48 () T@U)
(declare-fun $generated@@49 () T@U)
(declare-fun $generated@@50 () T@U)
(declare-fun $generated@@51 () T@U)
(declare-fun $generated@@52 () T@U)
(declare-fun $generated@@53 () T@U)
(declare-fun $generated@@54 () T@U)
(declare-fun $generated@@55 () T@U)
(declare-fun $generated@@56 () T@U)
(declare-fun $generated@@57 () T@U)
(declare-fun $generated@@58 () T@U)
(declare-fun $generated@@59 () T@U)
(declare-fun $generated@@60 () T@U)
(declare-fun $generated@@61 () T@U)
(declare-fun $generated@@62 () T@U)
(declare-fun $generated@@63 () T@U)
(declare-fun $generated@@64 () T@U)
(declare-fun $generated@@65 () T@U)
(declare-fun $generated@@66 () T@U)
(declare-fun $generated@@67 () T@U)
(declare-fun $generated@@68 () T@U)
(declare-fun $generated@@69 () T@U)
(declare-fun $generated@@70 () T@T)
(declare-fun $generated@@71 () T@T)
(declare-fun $generated@@72 (T@T) T@T)
(declare-fun $generated@@73 (T@T) T@T)
(declare-fun $generated@@74 () T@T)
(declare-fun $generated@@75 () T@T)
(declare-fun $generated@@76 () T@T)
(declare-fun $generated@@77 () T@T)
(declare-fun $generated@@80 (T@U) Int)
(declare-fun $generated@@81 (T@U) T@U)
(declare-fun $generated@@83 (T@U) T@U)
(declare-fun $generated@@85 (T@U T@U T@U) Bool)
(declare-fun $generated@@86 (Int) T@U)
(declare-fun $generated@@87 (T@T T@T) T@T)
(declare-fun $generated@@88 () T@T)
(declare-fun $generated@@89 () T@T)
(declare-fun $generated@@90 (T@T) T@T)
(declare-fun $generated@@91 (T@T) T@T)
(declare-fun $generated@@92 (T@U T@U) T@U)
(declare-fun $generated@@93 (T@U T@U T@U) T@U)
(declare-fun $generated@@94 (T@U T@U) T@U)
(declare-fun $generated@@95 (T@U T@U T@U) T@U)
(declare-fun $generated@@143 (T@U T@U) Bool)
(declare-fun $generated@@147 () T@U)
(declare-fun $generated@@148 () T@U)
(declare-fun $generated@@151 () T@U)
(declare-fun $generated@@152 (T@U) Bool)
(declare-fun $generated@@153 (T@U) T@U)
(declare-fun $generated@@154 (T@U T@U) Bool)
(declare-fun $generated@@159 (T@U) Bool)
(declare-fun $generated@@160 (T@U T@U) T@U)
(declare-fun $generated@@161 () T@T)
(declare-fun $generated@@167 (T@U T@U) Bool)
(declare-fun $generated@@168 (T@U) T@U)
(declare-fun $generated@@169 (T@U) T@U)
(declare-fun $generated@@170 () T@T)
(declare-fun $generated@@175 (T@U) T@U)
(declare-fun $generated@@176 (T@U) Bool)
(declare-fun $generated@@181 (T@U T@U T@U) T@U)
(declare-fun $generated@@182 (T@U T@U T@U Bool) T@U)
(declare-fun $generated@@183 (T@T T@T) T@T)
(declare-fun $generated@@184 (T@T) T@T)
(declare-fun $generated@@185 (T@T) T@T)
(declare-fun $generated@@186 (T@U T@U T@U T@U) T@U)
(declare-fun $generated@@237 () T@U)
(declare-fun $generated@@240 (T@U T@U) T@U)
(declare-fun $generated@@241 (T@U T@U) Bool)
(declare-fun $generated@@248 (T@T T@U T@U) T@U)
(declare-fun $generated@@252 (T@U) Bool)
(declare-fun $generated@@255 (T@U) T@U)
(declare-fun $generated@@260 (T@U) T@U)
(declare-fun $generated@@265 (Int) Int)
(declare-fun $generated@@267 (T@U) T@U)
(declare-fun $generated@@271 (T@U T@U T@U) Bool)
(declare-fun $generated@@277 (T@U) T@U)
(declare-fun $generated@@283 (T@T) T@U)
(declare-fun $generated@@284 (T@U) Int)
(declare-fun $generated@@285 (T@T) T@T)
(declare-fun $generated@@286 (T@T) T@T)
(declare-fun $generated@@291 (T@U) T@U)
(declare-fun $generated@@306 (T@U) Int)
(declare-fun $generated@@307 (T@T) T@U)
(declare-fun $generated@@312 (T@U) T@U)
(declare-fun $generated@@313 (T@T T@T) T@U)
(declare-fun $generated@@314 (T@T T@T) T@T)
(declare-fun $generated@@315 (T@T) T@T)
(declare-fun $generated@@316 (T@T) T@T)
(declare-fun $generated@@330 (T@U) T@U)
(declare-fun $generated@@331 (T@T T@T) T@U)
(declare-fun $generated@@332 (T@T T@T) T@T)
(declare-fun $generated@@333 (T@T) T@T)
(declare-fun $generated@@334 (T@T) T@T)
(declare-fun $generated@@348 (T@U T@U) Bool)
(declare-fun $generated@@357 (T@T T@U) T@U)
(declare-fun $generated@@367 (T@U) T@U)
(declare-fun $generated@@378 (T@U) T@U)
(declare-fun $generated@@398 (T@U) T@U)
(declare-fun $generated@@399 (T@U) T@U)
(declare-fun $generated@@406 (T@U) T@U)
(declare-fun $generated@@407 (T@U) T@U)
(declare-fun $generated@@424 (T@U T@U) T@U)
(declare-fun $generated@@432 (T@U T@U) T@U)
(declare-fun $generated@@443 (T@T) T@U)
(declare-fun $generated@@464 (T@U) T@U)
(declare-fun $generated@@472 () T@T)
(declare-fun $generated@@480 (T@U) T@U)
(declare-fun $generated@@484 (T@U) T@U)
(declare-fun $generated@@490 (T@U) T@U)
(declare-fun $generated@@494 (T@U) T@U)
(declare-fun $generated@@502 (T@U) T@U)
(declare-fun $generated@@506 (T@U) T@U)
(declare-fun $generated@@514 (T@U) T@U)
(declare-fun $generated@@515 (T@U Int) T@U)
(declare-fun $generated@@524 (T@U) Int)
(declare-fun $generated@@526 (T@U) T@U)
(declare-fun $generated@@530 (T@U) T@U)
(declare-fun $generated@@534 (T@U) T@U)
(declare-fun $generated@@538 (T@U) T@U)
(declare-fun $generated@@552 (T@U) Int)
(declare-fun $generated@@553 (T@U) Int)
(declare-fun $generated@@569 (T@U) T@U)
(declare-fun $generated@@618 (T@U) Int)
(assert  (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (= ($generated@@1 $generated@@2) 0) (= ($generated@@1 $generated@@3) 1)) (= ($generated@@1 $generated@@4) 2)) (= ($generated@@1 $generated@@5) 3)) (= ($generated@@1 $generated@@6) 4)) (= ($generated@@1 $generated@@7) 5)) (forall (($generated@@18 Int) ) (! (= ($generated ($generated@@8 $generated@@18)) $generated@@18)
 :pattern ( ($generated@@8 $generated@@18))
))) (forall (($generated@@19 T@U) ) (!  (=> (= (type $generated@@19) $generated@@2) (= ($generated@@8 ($generated $generated@@19)) $generated@@19))
 :pattern ( ($generated $generated@@19))
))) (forall (($generated@@20 Int) ) (! (= (type ($generated@@8 $generated@@20)) $generated@@2)
 :pattern ( ($generated@@8 $generated@@20))
))) (forall (($generated@@21 Real) ) (! (= ($generated@@10 ($generated@@9 $generated@@21)) $generated@@21)
 :pattern ( ($generated@@9 $generated@@21))
))) (forall (($generated@@22 T@U) ) (!  (=> (= (type $generated@@22) $generated@@3) (= ($generated@@9 ($generated@@10 $generated@@22)) $generated@@22))
 :pattern ( ($generated@@10 $generated@@22))
))) (forall (($generated@@23 Real) ) (! (= (type ($generated@@9 $generated@@23)) $generated@@3)
 :pattern ( ($generated@@9 $generated@@23))
))) (forall (($generated@@24 Bool) ) (! (= ($generated@@0 ($generated@@11 $generated@@24)) $generated@@24)
 :pattern ( ($generated@@11 $generated@@24))
))) (forall (($generated@@25 T@U) ) (!  (=> (= (type $generated@@25) $generated@@4) (= ($generated@@11 ($generated@@0 $generated@@25)) $generated@@25))
 :pattern ( ($generated@@0 $generated@@25))
))) (forall (($generated@@26 Bool) ) (! (= (type ($generated@@11 $generated@@26)) $generated@@4)
 :pattern ( ($generated@@11 $generated@@26))
))) (forall (($generated@@27 RoundingMode) ) (! (= ($generated@@13 ($generated@@12 $generated@@27)) $generated@@27)
 :pattern ( ($generated@@12 $generated@@27))
))) (forall (($generated@@28 T@U) ) (!  (=> (= (type $generated@@28) $generated@@5) (= ($generated@@12 ($generated@@13 $generated@@28)) $generated@@28))
 :pattern ( ($generated@@13 $generated@@28))
))) (forall (($generated@@29 RoundingMode) ) (! (= (type ($generated@@12 $generated@@29)) $generated@@5)
 :pattern ( ($generated@@12 $generated@@29))
))) (forall (($generated@@30 String) ) (! (= ($generated@@15 ($generated@@14 $generated@@30)) $generated@@30)
 :pattern ( ($generated@@14 $generated@@30))
))) (forall (($generated@@31 T@U) ) (!  (=> (= (type $generated@@31) $generated@@6) (= ($generated@@14 ($generated@@15 $generated@@31)) $generated@@31))
 :pattern ( ($generated@@15 $generated@@31))
))) (forall (($generated@@32 String) ) (! (= (type ($generated@@14 $generated@@32)) $generated@@6)
 :pattern ( ($generated@@14 $generated@@32))
))) (forall (($generated@@33 (RegEx String)) ) (! (= ($generated@@17 ($generated@@16 $generated@@33)) $generated@@33)
 :pattern ( ($generated@@16 $generated@@33))
))) (forall (($generated@@34 T@U) ) (!  (=> (= (type $generated@@34) $generated@@7) (= ($generated@@16 ($generated@@17 $generated@@34)) $generated@@34))
 :pattern ( ($generated@@17 $generated@@34))
))) (forall (($generated@@35 (RegEx String)) ) (! (= (type ($generated@@16 $generated@@35)) $generated@@7)
 :pattern ( ($generated@@16 $generated@@35))
))))
(assert (forall (($generated@@36 T@U) ) (! (UOrdering2 $generated@@36 $generated@@36)
 :no-pattern ($generated $generated@@36)
 :no-pattern ($generated@@0 $generated@@36)
)))
(assert (forall (($generated@@37 T@U) ($generated@@38 T@U) ($generated@@39 T@U) ) (! (let (($generated@@40 (type $generated@@37)))
 (=> (and (and (= (type $generated@@38) $generated@@40) (= (type $generated@@39) $generated@@40)) (and (UOrdering2 $generated@@37 $generated@@38) (UOrdering2 $generated@@38 $generated@@39))) (UOrdering2 $generated@@37 $generated@@39)))
 :pattern ( (UOrdering2 $generated@@37 $generated@@38) (UOrdering2 $generated@@38 $generated@@39))
)))
(assert (forall (($generated@@41 T@U) ($generated@@42 T@U) ) (! (let (($generated@@43 (type $generated@@41)))
 (=> (= (type $generated@@42) $generated@@43) (=> (and (UOrdering2 $generated@@41 $generated@@42) (UOrdering2 $generated@@42 $generated@@41)) (= $generated@@41 $generated@@42))))
 :pattern ( (UOrdering2 $generated@@41 $generated@@42) (UOrdering2 $generated@@42 $generated@@41))
)))
(assert  (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (= ($generated@@1 $generated@@70) 6) (= (type $generated@@44) $generated@@70)) (= (type $generated@@45) $generated@@70)) (= (type $generated@@46) $generated@@70)) (= (type $generated@@47) $generated@@70)) (= (type $generated@@48) $generated@@70)) (= ($generated@@1 $generated@@71) 7)) (= (type $generated@@49) $generated@@71)) (= (type $generated@@50) $generated@@71)) (= (type $generated@@51) $generated@@71)) (= (type $generated@@52) $generated@@71)) (= (type $generated@@53) $generated@@71)) (= (type $generated@@54) $generated@@71)) (= (type $generated@@55) $generated@@71)) (= (type $generated@@56) $generated@@71)) (= (type $generated@@57) $generated@@71)) (= (type $generated@@58) $generated@@71)) (= (type $generated@@59) $generated@@71)) (forall (($generated@@78 T@T) ) (= ($generated@@1 ($generated@@72 $generated@@78)) 8))) (forall (($generated@@79 T@T) ) (! (= ($generated@@73 ($generated@@72 $generated@@79)) $generated@@79)
 :pattern ( ($generated@@72 $generated@@79))
))) (= (type $generated@@60) ($generated@@72 $generated@@4))) (= ($generated@@1 $generated@@74) 9)) (= (type $generated@@61) $generated@@74)) (= ($generated@@1 $generated@@75) 10)) (= (type $generated@@62) $generated@@75)) (= (type $generated@@63) $generated@@71)) (= ($generated@@1 $generated@@76) 11)) (= (type $generated@@64) $generated@@76)) (= (type $generated@@65) $generated@@71)) (= (type $generated@@66) $generated@@71)) (= ($generated@@1 $generated@@77) 12)) (= (type $generated@@67) $generated@@77)) (= (type $generated@@68) $generated@@77)) (= (type $generated@@69) $generated@@74)))
(assert (distinct $generated@@44 $generated@@45 $generated@@46 $generated@@47 $generated@@48 $generated@@49 $generated@@50 $generated@@51 $generated@@52 $generated@@53 $generated@@54 $generated@@55 $generated@@56 $generated@@57 $generated@@58 $generated@@59 $generated@@60 $generated@@61 $generated@@62 $generated@@63 $generated@@64 $generated@@65 $generated@@66 $generated@@67 $generated@@68 $generated@@69)
)
(assert (= ($generated@@80 $generated@@60) 0))
(assert (forall (($generated@@82 T@U) ) (! (= (type ($generated@@81 $generated@@82)) $generated@@71)
 :pattern ( ($generated@@81 $generated@@82))
)))
(assert (= ($generated@@81 $generated@@44) $generated@@49))
(assert (= ($generated@@81 $generated@@45) $generated@@50))
(assert (= ($generated@@81 $generated@@46) $generated@@51))
(assert (= ($generated@@81 $generated@@47) $generated@@52))
(assert (= ($generated@@81 $generated@@48) $generated@@53))
(assert (forall (($generated@@84 T@U) ) (! (= (type ($generated@@83 $generated@@84)) $generated@@74)
 :pattern ( ($generated@@83 $generated@@84))
)))
(assert (= ($generated@@83 $generated@@60) $generated@@61))
(assert  (and (and (and (and (and (and (and (and (and (and (and (and (and (forall (($generated@@96 T@T) ($generated@@97 T@T) ) (= ($generated@@1 ($generated@@87 $generated@@96 $generated@@97)) 13)) (forall (($generated@@98 T@T) ($generated@@99 T@T) ) (! (= ($generated@@90 ($generated@@87 $generated@@98 $generated@@99)) $generated@@98)
 :pattern ( ($generated@@87 $generated@@98 $generated@@99))
))) (forall (($generated@@100 T@T) ($generated@@101 T@T) ) (! (= ($generated@@91 ($generated@@87 $generated@@100 $generated@@101)) $generated@@101)
 :pattern ( ($generated@@87 $generated@@100 $generated@@101))
))) (forall (($generated@@102 T@U) ($generated@@103 T@U) ) (! (let (($generated@@104 ($generated@@91 (type $generated@@102))))
(= (type ($generated@@92 $generated@@102 $generated@@103)) $generated@@104))
 :pattern ( ($generated@@92 $generated@@102 $generated@@103))
))) (forall (($generated@@105 T@U) ($generated@@106 T@U) ($generated@@107 T@U) ) (! (let (($generated@@108 (type $generated@@107)))
(let (($generated@@109 (type $generated@@106)))
(= (type ($generated@@93 $generated@@105 $generated@@106 $generated@@107)) ($generated@@87 $generated@@109 $generated@@108))))
 :pattern ( ($generated@@93 $generated@@105 $generated@@106 $generated@@107))
))) (forall (($generated@@110 T@U) ($generated@@111 T@U) ($generated@@112 T@U) ) (! (let (($generated@@113 ($generated@@91 (type $generated@@110))))
 (=> (= (type $generated@@112) $generated@@113) (= ($generated@@92 ($generated@@93 $generated@@110 $generated@@111 $generated@@112) $generated@@111) $generated@@112)))
 :weight 0
))) (and (forall (($generated@@114 T@U) ($generated@@115 T@U) ($generated@@116 T@U) ($generated@@117 T@U) ) (!  (or (= $generated@@116 $generated@@117) (= ($generated@@92 ($generated@@93 $generated@@115 $generated@@116 $generated@@114) $generated@@117) ($generated@@92 $generated@@115 $generated@@117)))
 :weight 0
)) (forall (($generated@@118 T@U) ($generated@@119 T@U) ($generated@@120 T@U) ($generated@@121 T@U) ) (!  (or true (= ($generated@@92 ($generated@@93 $generated@@119 $generated@@120 $generated@@118) $generated@@121) ($generated@@92 $generated@@119 $generated@@121)))
 :weight 0
)))) (= ($generated@@1 $generated@@88) 14)) (forall (($generated@@122 T@U) ($generated@@123 T@U) ) (! (let (($generated@@124 ($generated@@73 (type $generated@@123))))
(= (type ($generated@@94 $generated@@122 $generated@@123)) $generated@@124))
 :pattern ( ($generated@@94 $generated@@122 $generated@@123))
))) (= ($generated@@1 $generated@@89) 15)) (forall (($generated@@125 T@U) ($generated@@126 T@U) ($generated@@127 T@U) ) (! (= (type ($generated@@95 $generated@@125 $generated@@126 $generated@@127)) $generated@@89)
 :pattern ( ($generated@@95 $generated@@125 $generated@@126 $generated@@127))
))) (forall (($generated@@128 T@U) ($generated@@129 T@U) ($generated@@130 T@U) ) (! (let (($generated@@131 ($generated@@73 (type $generated@@129))))
 (=> (= (type $generated@@130) $generated@@131) (= ($generated@@94 ($generated@@95 $generated@@128 $generated@@129 $generated@@130) $generated@@129) $generated@@130)))
 :weight 0
))) (and (forall (($generated@@132 T@U) ($generated@@133 T@U) ($generated@@134 T@U) ($generated@@135 T@U) ) (!  (or (= $generated@@134 $generated@@135) (= ($generated@@94 ($generated@@95 $generated@@133 $generated@@134 $generated@@132) $generated@@135) ($generated@@94 $generated@@133 $generated@@135)))
 :weight 0
)) (forall (($generated@@136 T@U) ($generated@@137 T@U) ($generated@@138 T@U) ($generated@@139 T@U) ) (!  (or true (= ($generated@@94 ($generated@@95 $generated@@137 $generated@@138 $generated@@136) $generated@@139) ($generated@@94 $generated@@137 $generated@@139)))
 :weight 0
)))) (forall (($generated@@140 Int) ) (! (= (type ($generated@@86 $generated@@140)) $generated@@70)
 :pattern ( ($generated@@86 $generated@@140))
))))
(assert (forall (($generated@@141 T@U) ($generated@@142 T@U) ) (!  (=> (and (= (type $generated@@141) $generated@@2) (= (type $generated@@142) ($generated@@87 $generated@@88 $generated@@89))) ($generated@@85 $generated@@141 ($generated@@86 0) $generated@@142))
 :pattern ( ($generated@@85 $generated@@141 ($generated@@86 0) $generated@@142))
)))
(assert (forall (($generated@@144 T@U) ($generated@@145 T@U) ) (!  (=> (and (and (= (type $generated@@144) ($generated@@87 $generated@@88 $generated@@89)) (= (type $generated@@145) ($generated@@87 $generated@@88 $generated@@89))) ($generated@@143 $generated@@144 $generated@@145)) (forall (($generated@@146 T@U) ) (!  (=> (and (= (type $generated@@146) $generated@@88) ($generated@@0 ($generated@@94 ($generated@@92 $generated@@144 $generated@@146) $generated@@60))) ($generated@@0 ($generated@@94 ($generated@@92 $generated@@145 $generated@@146) $generated@@60)))
 :pattern ( ($generated@@94 ($generated@@92 $generated@@145 $generated@@146) $generated@@60))
)))
 :pattern ( ($generated@@143 $generated@@144 $generated@@145))
)))
(assert  (and (= (type $generated@@147) $generated@@70) (= (type $generated@@148) $generated@@88)))
(assert (forall (($generated@@149 T@U) ($generated@@150 T@U) ) (!  (=> (and (= (type $generated@@149) $generated@@88) (= (type $generated@@150) ($generated@@87 $generated@@88 $generated@@89))) (= ($generated@@85 $generated@@149 $generated@@147 $generated@@150)  (or (= $generated@@149 $generated@@148) ($generated@@0 ($generated@@94 ($generated@@92 $generated@@150 $generated@@149) $generated@@60)))))
 :pattern ( ($generated@@85 $generated@@149 $generated@@147 $generated@@150))
)))
(assert  (and (= (type $generated@@151) ($generated@@72 $generated@@2)) (forall (($generated@@155 T@U) ) (! (= (type ($generated@@153 $generated@@155)) $generated@@70)
 :pattern ( ($generated@@153 $generated@@155))
))))
(assert (forall (($generated@@156 T@U) ($generated@@157 T@U) ) (!  (=> (and (and (= (type $generated@@156) ($generated@@87 $generated@@88 $generated@@89)) (= (type $generated@@157) $generated@@88)) (and ($generated@@152 $generated@@156) (and (not (= $generated@@157 $generated@@148)) (= ($generated@@153 $generated@@157) $generated@@147)))) ($generated@@154 ($generated@@94 ($generated@@92 $generated@@156 $generated@@157) $generated@@151) $generated@@46))
 :pattern ( ($generated@@94 ($generated@@92 $generated@@156 $generated@@157) $generated@@151))
)))
(assert (forall (($generated@@158 T@U) ) (!  (=> (= (type $generated@@158) $generated@@2) ($generated@@154 $generated@@158 ($generated@@86 0)))
 :pattern ( ($generated@@154 $generated@@158 ($generated@@86 0)))
)))
(assert  (and (= ($generated@@1 $generated@@161) 16) (forall (($generated@@162 T@U) ($generated@@163 T@U) ) (! (= (type ($generated@@160 $generated@@162 $generated@@163)) $generated@@70)
 :pattern ( ($generated@@160 $generated@@162 $generated@@163))
))))
(assert (forall (($generated@@164 T@U) ($generated@@165 T@U) ($generated@@166 T@U) ) (!  (=> (and (and (and (= (type $generated@@164) $generated@@70) (= (type $generated@@165) $generated@@70)) (= (type $generated@@166) $generated@@161)) ($generated@@154 $generated@@166 ($generated@@160 $generated@@164 $generated@@165))) ($generated@@159 $generated@@166))
 :pattern ( ($generated@@159 $generated@@166) ($generated@@154 $generated@@166 ($generated@@160 $generated@@164 $generated@@165)))
)))
(assert  (and (and (= ($generated@@1 $generated@@170) 17) (forall (($generated@@171 T@U) ) (! (= (type ($generated@@168 $generated@@171)) $generated@@170)
 :pattern ( ($generated@@168 $generated@@171))
))) (forall (($generated@@172 T@U) ) (! (= (type ($generated@@169 $generated@@172)) $generated@@170)
 :pattern ( ($generated@@169 $generated@@172))
))))
(assert (forall (($generated@@173 T@U) ($generated@@174 T@U) ) (!  (=> (and (and (= (type $generated@@173) $generated@@161) (= (type $generated@@174) $generated@@161)) true) (= ($generated@@167 $generated@@173 $generated@@174)  (and (= ($generated@@168 $generated@@173) ($generated@@168 $generated@@174)) (= ($generated@@169 $generated@@173) ($generated@@169 $generated@@174)))))
 :pattern ( ($generated@@167 $generated@@173 $generated@@174))
)))
(assert (forall (($generated@@177 T@U) ) (! (= (type ($generated@@175 $generated@@177)) $generated@@70)
 :pattern ( ($generated@@175 $generated@@177))
)))
(assert (forall (($generated@@178 T@U) ($generated@@179 T@U) ) (!  (=> (and (and (= (type $generated@@178) ($generated@@87 $generated@@170 $generated@@2)) (= (type $generated@@179) $generated@@70)) ($generated@@154 $generated@@178 ($generated@@175 $generated@@179))) ($generated@@176 $generated@@178))
 :pattern ( ($generated@@154 $generated@@178 ($generated@@175 $generated@@179)))
)))
(assert (forall (($generated@@180 T@U) ) (!  (=> (= (type $generated@@180) $generated@@88) (= ($generated@@154 $generated@@180 $generated@@147)  (or (= $generated@@180 $generated@@148) (= ($generated@@153 $generated@@180) $generated@@147))))
 :pattern ( ($generated@@154 $generated@@180 $generated@@147))
)))
(assert  (and (and (and (and (and (and (and (forall (($generated@@187 T@T) ($generated@@188 T@T) ) (= ($generated@@1 ($generated@@183 $generated@@187 $generated@@188)) 18)) (forall (($generated@@189 T@T) ($generated@@190 T@T) ) (! (= ($generated@@184 ($generated@@183 $generated@@189 $generated@@190)) $generated@@189)
 :pattern ( ($generated@@183 $generated@@189 $generated@@190))
))) (forall (($generated@@191 T@T) ($generated@@192 T@T) ) (! (= ($generated@@185 ($generated@@183 $generated@@191 $generated@@192)) $generated@@192)
 :pattern ( ($generated@@183 $generated@@191 $generated@@192))
))) (forall (($generated@@193 T@U) ($generated@@194 T@U) ($generated@@195 T@U) ) (! (let (($generated@@196 ($generated@@185 (type $generated@@193))))
(= (type ($generated@@181 $generated@@193 $generated@@194 $generated@@195)) $generated@@196))
 :pattern ( ($generated@@181 $generated@@193 $generated@@194 $generated@@195))
))) (forall (($generated@@197 T@U) ($generated@@198 T@U) ($generated@@199 T@U) ($generated@@200 T@U) ) (! (let (($generated@@201 (type $generated@@200)))
(let (($generated@@202 (type $generated@@198)))
(= (type ($generated@@186 $generated@@197 $generated@@198 $generated@@199 $generated@@200)) ($generated@@183 $generated@@202 $generated@@201))))
 :pattern ( ($generated@@186 $generated@@197 $generated@@198 $generated@@199 $generated@@200))
))) (forall (($generated@@203 T@U) ($generated@@204 T@U) ($generated@@205 T@U) ($generated@@206 T@U) ) (! (let (($generated@@207 ($generated@@185 (type $generated@@203))))
 (=> (= (type $generated@@206) $generated@@207) (= ($generated@@181 ($generated@@186 $generated@@203 $generated@@204 $generated@@205 $generated@@206) $generated@@204 $generated@@205) $generated@@206)))
 :weight 0
))) (and (and (forall (($generated@@208 T@U) ($generated@@209 T@U) ($generated@@210 T@U) ($generated@@211 T@U) ($generated@@212 T@U) ($generated@@213 T@U) ) (!  (or (= $generated@@210 $generated@@212) (= ($generated@@181 ($generated@@186 $generated@@209 $generated@@210 $generated@@211 $generated@@208) $generated@@212 $generated@@213) ($generated@@181 $generated@@209 $generated@@212 $generated@@213)))
 :weight 0
)) (forall (($generated@@214 T@U) ($generated@@215 T@U) ($generated@@216 T@U) ($generated@@217 T@U) ($generated@@218 T@U) ($generated@@219 T@U) ) (!  (or (= $generated@@217 $generated@@219) (= ($generated@@181 ($generated@@186 $generated@@215 $generated@@216 $generated@@217 $generated@@214) $generated@@218 $generated@@219) ($generated@@181 $generated@@215 $generated@@218 $generated@@219)))
 :weight 0
))) (forall (($generated@@220 T@U) ($generated@@221 T@U) ($generated@@222 T@U) ($generated@@223 T@U) ($generated@@224 T@U) ($generated@@225 T@U) ) (!  (or true (= ($generated@@181 ($generated@@186 $generated@@221 $generated@@222 $generated@@223 $generated@@220) $generated@@224 $generated@@225) ($generated@@181 $generated@@221 $generated@@224 $generated@@225)))
 :weight 0
)))) (forall (($generated@@226 T@U) ($generated@@227 T@U) ($generated@@228 T@U) ($generated@@229 Bool) ) (! (= (type ($generated@@182 $generated@@226 $generated@@227 $generated@@228 $generated@@229)) ($generated@@183 $generated@@88 $generated@@4))
 :pattern ( ($generated@@182 $generated@@226 $generated@@227 $generated@@228 $generated@@229))
))))
(assert (forall (($generated@@230 T@U) ($generated@@231 T@U) ($generated@@232 T@U) ($generated@@233 Bool) ($generated@@234 T@U) ($generated@@235 T@U) ) (! (let (($generated@@236 ($generated@@73 (type $generated@@235))))
 (=> (and (and (and (and (= (type $generated@@230) $generated@@88) (= (type $generated@@231) ($generated@@87 $generated@@88 $generated@@89))) (= (type $generated@@232) ($generated@@72 $generated@@4))) (= (type $generated@@234) $generated@@88)) (= (type $generated@@235) ($generated@@72 $generated@@236))) (= ($generated@@0 ($generated@@181 ($generated@@182 $generated@@230 $generated@@231 $generated@@232 $generated@@233) $generated@@234 $generated@@235))  (=> (and (not (= $generated@@234 $generated@@230)) ($generated@@0 ($generated@@94 ($generated@@92 $generated@@231 $generated@@234) $generated@@232))) $generated@@233))))
 :pattern ( ($generated@@181 ($generated@@182 $generated@@230 $generated@@231 $generated@@232 $generated@@233) $generated@@234 $generated@@235))
)))
(assert (= (type $generated@@237) $generated@@70))
(assert (forall (($generated@@238 T@U) ($generated@@239 T@U) ) (!  (=> (and (= (type $generated@@238) $generated@@88) (= (type $generated@@239) ($generated@@87 $generated@@88 $generated@@89))) (= ($generated@@85 $generated@@238 $generated@@237 $generated@@239) ($generated@@85 $generated@@238 $generated@@147 $generated@@239)))
 :pattern ( ($generated@@85 $generated@@238 $generated@@237 $generated@@239))
)))
(assert (forall (($generated@@242 T@U) ($generated@@243 T@U) ) (! (= (type ($generated@@240 $generated@@242 $generated@@243)) $generated@@161)
 :pattern ( ($generated@@240 $generated@@242 $generated@@243))
)))
(assert (forall (($generated@@244 T@U) ($generated@@245 T@U) ($generated@@246 T@U) ($generated@@247 T@U) ) (!  (=> (and (and (and (= (type $generated@@244) $generated@@70) (= (type $generated@@245) $generated@@70)) (= (type $generated@@246) $generated@@170)) (= (type $generated@@247) $generated@@170)) (= ($generated@@154 ($generated@@240 $generated@@246 $generated@@247) ($generated@@160 $generated@@244 $generated@@245))  (and ($generated@@241 $generated@@246 $generated@@244) ($generated@@241 $generated@@247 $generated@@245))))
 :pattern ( ($generated@@154 ($generated@@240 $generated@@246 $generated@@247) ($generated@@160 $generated@@244 $generated@@245)))
)))
(assert (= ($generated@@80 $generated@@151) 0))
(assert (forall (($generated@@249 T@T) ($generated@@250 T@U) ($generated@@251 T@U) ) (! (= (type ($generated@@248 $generated@@249 $generated@@250 $generated@@251)) ($generated@@72 $generated@@249))
 :pattern ( ($generated@@248 $generated@@249 $generated@@250 $generated@@251))
)))
(assert (= ($generated@@248 $generated@@2 $generated@@64 $generated@@69) $generated@@151))
(assert  (not ($generated@@252 $generated@@151)))
(assert (forall (($generated@@253 T@U) ($generated@@254 T@U) ) (!  (=> (and (= (type $generated@@253) $generated@@161) (= (type $generated@@254) $generated@@161)) (= ($generated@@167 $generated@@253 $generated@@254) (= $generated@@253 $generated@@254)))
 :pattern ( ($generated@@167 $generated@@253 $generated@@254))
)))
(assert (forall (($generated@@256 T@U) ) (! (= (type ($generated@@255 $generated@@256)) $generated@@70)
 :pattern ( ($generated@@255 $generated@@256))
)))
(assert (forall (($generated@@257 T@U) ($generated@@258 T@U) ) (!  (=> (and (= (type $generated@@257) ($generated@@87 $generated@@170 $generated@@4)) (= (type $generated@@258) $generated@@70)) (= ($generated@@154 $generated@@257 ($generated@@255 $generated@@258)) (forall (($generated@@259 T@U) ) (!  (=> (and (= (type $generated@@259) $generated@@170) ($generated@@0 ($generated@@92 $generated@@257 $generated@@259))) ($generated@@241 $generated@@259 $generated@@258))
 :pattern ( ($generated@@92 $generated@@257 $generated@@259))
))))
 :pattern ( ($generated@@154 $generated@@257 ($generated@@255 $generated@@258)))
)))
(assert (forall (($generated@@261 T@U) ) (! (= (type ($generated@@260 $generated@@261)) $generated@@70)
 :pattern ( ($generated@@260 $generated@@261))
)))
(assert (forall (($generated@@262 T@U) ($generated@@263 T@U) ) (!  (=> (and (= (type $generated@@262) ($generated@@87 $generated@@170 $generated@@4)) (= (type $generated@@263) $generated@@70)) (= ($generated@@154 $generated@@262 ($generated@@260 $generated@@263)) (forall (($generated@@264 T@U) ) (!  (=> (and (= (type $generated@@264) $generated@@170) ($generated@@0 ($generated@@92 $generated@@262 $generated@@264))) ($generated@@241 $generated@@264 $generated@@263))
 :pattern ( ($generated@@92 $generated@@262 $generated@@264))
))))
 :pattern ( ($generated@@154 $generated@@262 ($generated@@260 $generated@@263)))
)))
(assert (forall (($generated@@266 Int) ) (! (= ($generated@@265 $generated@@266) $generated@@266)
 :pattern ( ($generated@@265 $generated@@266))
)))
(assert (forall (($generated@@268 T@U) ) (! (let (($generated@@269 (type $generated@@268)))
(= (type ($generated@@267 $generated@@268)) $generated@@269))
 :pattern ( ($generated@@267 $generated@@268))
)))
(assert (forall (($generated@@270 T@U) ) (! (= ($generated@@267 $generated@@270) $generated@@270)
 :pattern ( ($generated@@267 $generated@@270))
)))
(assert (forall (($generated@@272 T@U) ($generated@@273 T@U) ($generated@@274 T@U) ($generated@@275 T@U) ($generated@@276 T@U) ) (!  (=> (and (and (and (and (and (= (type $generated@@272) $generated@@70) (= (type $generated@@273) $generated@@70)) (= (type $generated@@274) $generated@@170)) (= (type $generated@@275) $generated@@170)) (= (type $generated@@276) ($generated@@87 $generated@@88 $generated@@89))) ($generated@@152 $generated@@276)) (= ($generated@@85 ($generated@@240 $generated@@274 $generated@@275) ($generated@@160 $generated@@272 $generated@@273) $generated@@276)  (and ($generated@@271 $generated@@274 $generated@@272 $generated@@276) ($generated@@271 $generated@@275 $generated@@273 $generated@@276))))
 :pattern ( ($generated@@85 ($generated@@240 $generated@@274 $generated@@275) ($generated@@160 $generated@@272 $generated@@273) $generated@@276))
)))
(assert (forall (($generated@@278 T@U) ) (! (= (type ($generated@@277 $generated@@278)) $generated@@75)
 :pattern ( ($generated@@277 $generated@@278))
)))
(assert (forall (($generated@@279 T@U) ) (!  (=> (= (type $generated@@279) $generated@@161) (= ($generated@@159 $generated@@279) (= ($generated@@277 $generated@@279) $generated@@62)))
 :pattern ( ($generated@@159 $generated@@279))
)))
(assert (forall (($generated@@280 T@U) ) (!  (=> (and (= (type $generated@@280) $generated@@161) ($generated@@159 $generated@@280)) (exists (($generated@@281 T@U) ($generated@@282 T@U) ) (!  (and (and (= (type $generated@@281) $generated@@170) (= (type $generated@@282) $generated@@170)) (= $generated@@280 ($generated@@240 $generated@@281 $generated@@282)))
 :no-pattern (type $generated@@281)
 :no-pattern (type $generated@@282)
 :no-pattern ($generated $generated@@281)
 :no-pattern ($generated@@0 $generated@@281)
 :no-pattern ($generated $generated@@282)
 :no-pattern ($generated@@0 $generated@@282)
)))
 :pattern ( ($generated@@159 $generated@@280))
)))
(assert  (and (and (forall (($generated@@287 T@T) ) (= ($generated@@1 ($generated@@285 $generated@@287)) 19)) (forall (($generated@@288 T@T) ) (! (= ($generated@@286 ($generated@@285 $generated@@288)) $generated@@288)
 :pattern ( ($generated@@285 $generated@@288))
))) (forall (($generated@@289 T@T) ) (! (= (type ($generated@@283 $generated@@289)) ($generated@@285 $generated@@289))
 :pattern ( ($generated@@283 $generated@@289))
))))
(assert (forall (($generated@@290 T@T) ) (! (= ($generated@@284 ($generated@@283 $generated@@290)) 0)
 :pattern ( ($generated@@283 $generated@@290))
)))
(assert ($generated@@252 $generated@@60))
(assert (forall (($generated@@292 T@U) ) (! (= (type ($generated@@291 $generated@@292)) $generated@@170)
 :pattern ( ($generated@@291 $generated@@292))
)))
(assert (forall (($generated@@293 T@U) ($generated@@294 T@U) ($generated@@295 T@U) ) (!  (=> (and (= (type $generated@@294) $generated@@70) (= (type $generated@@295) ($generated@@87 $generated@@88 $generated@@89))) (= ($generated@@271 ($generated@@291 $generated@@293) $generated@@294 $generated@@295) ($generated@@85 $generated@@293 $generated@@294 $generated@@295)))
 :pattern ( ($generated@@271 ($generated@@291 $generated@@293) $generated@@294 $generated@@295))
)))
(assert (forall (($generated@@296 T@U) ($generated@@297 T@U) ($generated@@298 T@U) ($generated@@299 T@U) ) (!  (=> (and (and (and (and (and (= (type $generated@@296) ($generated@@87 $generated@@88 $generated@@89)) (= (type $generated@@297) ($generated@@87 $generated@@88 $generated@@89))) (= (type $generated@@298) $generated@@170)) (= (type $generated@@299) $generated@@70)) ($generated@@143 $generated@@296 $generated@@297)) ($generated@@271 $generated@@298 $generated@@299 $generated@@296)) ($generated@@271 $generated@@298 $generated@@299 $generated@@297))
 :pattern ( ($generated@@143 $generated@@296 $generated@@297) ($generated@@271 $generated@@298 $generated@@299 $generated@@296))
)))
(assert (forall (($generated@@300 T@U) ($generated@@301 T@U) ($generated@@302 T@U) ($generated@@303 T@U) ) (!  (=> (and (and (and (and (= (type $generated@@300) ($generated@@87 $generated@@88 $generated@@89)) (= (type $generated@@301) ($generated@@87 $generated@@88 $generated@@89))) (= (type $generated@@303) $generated@@70)) ($generated@@143 $generated@@300 $generated@@301)) ($generated@@85 $generated@@302 $generated@@303 $generated@@300)) ($generated@@85 $generated@@302 $generated@@303 $generated@@301))
 :pattern ( ($generated@@143 $generated@@300 $generated@@301) ($generated@@85 $generated@@302 $generated@@303 $generated@@300))
)))
(assert (forall (($generated@@304 T@U) ($generated@@305 T@U) ) (!  (=> (and (= (type $generated@@304) ($generated@@87 $generated@@88 $generated@@89)) (= (type $generated@@305) $generated@@88)) (=> (and (and ($generated@@152 $generated@@304) (and (not (= $generated@@305 $generated@@148)) (= ($generated@@153 $generated@@305) $generated@@147))) ($generated@@0 ($generated@@94 ($generated@@92 $generated@@304 $generated@@305) $generated@@60))) ($generated@@85 ($generated@@94 ($generated@@92 $generated@@304 $generated@@305) $generated@@151) $generated@@46 $generated@@304)))
 :pattern ( ($generated@@94 ($generated@@92 $generated@@304 $generated@@305) $generated@@151))
)))
(assert (forall (($generated@@308 T@T) ) (! (= (type ($generated@@307 $generated@@308)) ($generated@@87 $generated@@308 $generated@@2))
 :pattern ( ($generated@@307 $generated@@308))
)))
(assert (forall (($generated@@309 T@U) ) (! (let (($generated@@310 ($generated@@90 (type $generated@@309))))
 (=> (= (type $generated@@309) ($generated@@87 $generated@@310 $generated@@2)) (and (= (= ($generated@@306 $generated@@309) 0) (= $generated@@309 ($generated@@307 $generated@@310))) (=> (not (= ($generated@@306 $generated@@309) 0)) (exists (($generated@@311 T@U) ) (!  (and (= (type $generated@@311) $generated@@310) (< 0 ($generated ($generated@@92 $generated@@309 $generated@@311))))
 :no-pattern (type $generated@@311)
 :no-pattern ($generated $generated@@311)
 :no-pattern ($generated@@0 $generated@@311)
))))))
 :pattern ( ($generated@@306 $generated@@309))
)))
(assert  (and (and (and (and (forall (($generated@@317 T@T) ($generated@@318 T@T) ) (= ($generated@@1 ($generated@@314 $generated@@317 $generated@@318)) 20)) (forall (($generated@@319 T@T) ($generated@@320 T@T) ) (! (= ($generated@@315 ($generated@@314 $generated@@319 $generated@@320)) $generated@@319)
 :pattern ( ($generated@@314 $generated@@319 $generated@@320))
))) (forall (($generated@@321 T@T) ($generated@@322 T@T) ) (! (= ($generated@@316 ($generated@@314 $generated@@321 $generated@@322)) $generated@@322)
 :pattern ( ($generated@@314 $generated@@321 $generated@@322))
))) (forall (($generated@@323 T@U) ) (! (let (($generated@@324 ($generated@@315 (type $generated@@323))))
(= (type ($generated@@312 $generated@@323)) ($generated@@87 $generated@@324 $generated@@4)))
 :pattern ( ($generated@@312 $generated@@323))
))) (forall (($generated@@325 T@T) ($generated@@326 T@T) ) (! (= (type ($generated@@313 $generated@@325 $generated@@326)) ($generated@@314 $generated@@325 $generated@@326))
 :pattern ( ($generated@@313 $generated@@325 $generated@@326))
))))
(assert (forall (($generated@@327 T@U) ($generated@@328 T@T) ) (! (let (($generated@@329 (type $generated@@327)))
 (not ($generated@@0 ($generated@@92 ($generated@@312 ($generated@@313 $generated@@329 $generated@@328)) $generated@@327))))
 :pattern ( (let (($generated@@329 (type $generated@@327)))
($generated@@92 ($generated@@312 ($generated@@313 $generated@@329 $generated@@328)) $generated@@327)))
)))
(assert  (and (and (and (and (forall (($generated@@335 T@T) ($generated@@336 T@T) ) (= ($generated@@1 ($generated@@332 $generated@@335 $generated@@336)) 21)) (forall (($generated@@337 T@T) ($generated@@338 T@T) ) (! (= ($generated@@333 ($generated@@332 $generated@@337 $generated@@338)) $generated@@337)
 :pattern ( ($generated@@332 $generated@@337 $generated@@338))
))) (forall (($generated@@339 T@T) ($generated@@340 T@T) ) (! (= ($generated@@334 ($generated@@332 $generated@@339 $generated@@340)) $generated@@340)
 :pattern ( ($generated@@332 $generated@@339 $generated@@340))
))) (forall (($generated@@341 T@U) ) (! (let (($generated@@342 ($generated@@333 (type $generated@@341))))
(= (type ($generated@@330 $generated@@341)) ($generated@@87 $generated@@342 $generated@@4)))
 :pattern ( ($generated@@330 $generated@@341))
))) (forall (($generated@@343 T@T) ($generated@@344 T@T) ) (! (= (type ($generated@@331 $generated@@343 $generated@@344)) ($generated@@332 $generated@@343 $generated@@344))
 :pattern ( ($generated@@331 $generated@@343 $generated@@344))
))))
(assert (forall (($generated@@345 T@U) ($generated@@346 T@T) ) (! (let (($generated@@347 (type $generated@@345)))
 (not ($generated@@0 ($generated@@92 ($generated@@330 ($generated@@331 $generated@@347 $generated@@346)) $generated@@345))))
 :pattern ( (let (($generated@@347 (type $generated@@345)))
($generated@@92 ($generated@@330 ($generated@@331 $generated@@347 $generated@@346)) $generated@@345)))
)))
(assert (forall (($generated@@349 T@U) ($generated@@350 T@U) ) (!  (=> (and (and (= (type $generated@@349) ($generated@@87 $generated@@88 $generated@@89)) (= (type $generated@@350) ($generated@@87 $generated@@88 $generated@@89))) ($generated@@348 $generated@@349 $generated@@350)) (and ($generated@@143 $generated@@349 $generated@@350) (forall (($generated@@351 T@U) ($generated@@352 T@U) ) (! (let (($generated@@353 ($generated@@73 (type $generated@@352))))
 (=> (and (and (= (type $generated@@351) $generated@@88) (= (type $generated@@352) ($generated@@72 $generated@@353))) (not ($generated@@252 $generated@@352))) (= ($generated@@94 ($generated@@92 $generated@@349 $generated@@351) $generated@@352) ($generated@@94 ($generated@@92 $generated@@350 $generated@@351) $generated@@352))))
 :pattern ( ($generated@@94 ($generated@@92 $generated@@350 $generated@@351) $generated@@352))
))))
 :pattern ( ($generated@@348 $generated@@349 $generated@@350))
)))
(assert (forall (($generated@@354 T@U) ) (! (let (($generated@@355 ($generated@@90 (type $generated@@354))))
 (=> (= (type $generated@@354) ($generated@@87 $generated@@355 $generated@@2)) (= ($generated@@176 $generated@@354) (forall (($generated@@356 T@U) ) (!  (=> (= (type $generated@@356) $generated@@355) (and (<= 0 ($generated ($generated@@92 $generated@@354 $generated@@356))) (<= ($generated ($generated@@92 $generated@@354 $generated@@356)) ($generated@@306 $generated@@354))))
 :pattern ( ($generated@@92 $generated@@354 $generated@@356))
)))))
 :pattern ( ($generated@@176 $generated@@354))
)))
(assert (forall (($generated@@358 T@T) ($generated@@359 T@U) ) (! (= (type ($generated@@357 $generated@@358 $generated@@359)) $generated@@358)
 :pattern ( ($generated@@357 $generated@@358 $generated@@359))
)))
(assert (forall (($generated@@360 T@U) ) (!  (=> (and (= (type $generated@@360) $generated@@170) ($generated@@241 $generated@@360 $generated@@147)) (and (= ($generated@@291 ($generated@@357 $generated@@88 $generated@@360)) $generated@@360) ($generated@@154 ($generated@@357 $generated@@88 $generated@@360) $generated@@147)))
 :pattern ( ($generated@@241 $generated@@360 $generated@@147))
)))
(assert (forall (($generated@@361 T@U) ) (!  (=> (and (= (type $generated@@361) $generated@@170) ($generated@@241 $generated@@361 $generated@@237)) (and (= ($generated@@291 ($generated@@357 $generated@@88 $generated@@361)) $generated@@361) ($generated@@154 ($generated@@357 $generated@@88 $generated@@361) $generated@@237)))
 :pattern ( ($generated@@241 $generated@@361 $generated@@237))
)))
(assert (forall (($generated@@362 T@U) ) (!  (=> (= (type $generated@@362) $generated@@88) (= ($generated@@154 $generated@@362 $generated@@237)  (and ($generated@@154 $generated@@362 $generated@@147) (not (= $generated@@362 $generated@@148)))))
 :pattern ( ($generated@@154 $generated@@362 $generated@@237))
)))
(assert (forall (($generated@@363 T@U) ) (! (let (($generated@@364 ($generated@@316 (type $generated@@363))))
(let (($generated@@365 ($generated@@315 (type $generated@@363))))
 (=> (= (type $generated@@363) ($generated@@314 $generated@@365 $generated@@364)) (or (= $generated@@363 ($generated@@313 $generated@@365 $generated@@364)) (exists (($generated@@366 T@U) ) (!  (and (= (type $generated@@366) $generated@@365) ($generated@@0 ($generated@@92 ($generated@@312 $generated@@363) $generated@@366)))
 :no-pattern (type $generated@@366)
 :no-pattern ($generated $generated@@366)
 :no-pattern ($generated@@0 $generated@@366)
))))))
 :pattern ( ($generated@@312 $generated@@363))
)))
(assert (forall (($generated@@368 T@U) ) (! (let (($generated@@369 ($generated@@316 (type $generated@@368))))
(= (type ($generated@@367 $generated@@368)) ($generated@@87 $generated@@369 $generated@@4)))
 :pattern ( ($generated@@367 $generated@@368))
)))
(assert (forall (($generated@@370 T@U) ) (! (let (($generated@@371 ($generated@@316 (type $generated@@370))))
(let (($generated@@372 ($generated@@315 (type $generated@@370))))
 (=> (= (type $generated@@370) ($generated@@314 $generated@@372 $generated@@371)) (or (= $generated@@370 ($generated@@313 $generated@@372 $generated@@371)) (exists (($generated@@373 T@U) ) (!  (and (= (type $generated@@373) $generated@@371) ($generated@@0 ($generated@@92 ($generated@@367 $generated@@370) $generated@@373)))
 :no-pattern (type $generated@@373)
 :no-pattern ($generated $generated@@373)
 :no-pattern ($generated@@0 $generated@@373)
))))))
 :pattern ( ($generated@@367 $generated@@370))
)))
(assert (forall (($generated@@374 T@U) ) (! (let (($generated@@375 ($generated@@334 (type $generated@@374))))
(let (($generated@@376 ($generated@@333 (type $generated@@374))))
 (=> (= (type $generated@@374) ($generated@@332 $generated@@376 $generated@@375)) (or (= $generated@@374 ($generated@@331 $generated@@376 $generated@@375)) (exists (($generated@@377 T@U) ) (!  (and (= (type $generated@@377) $generated@@376) ($generated@@0 ($generated@@92 ($generated@@330 $generated@@374) $generated@@377)))
 :no-pattern (type $generated@@377)
 :no-pattern ($generated $generated@@377)
 :no-pattern ($generated@@0 $generated@@377)
))))))
 :pattern ( ($generated@@330 $generated@@374))
)))
(assert (forall (($generated@@379 T@U) ) (! (let (($generated@@380 ($generated@@334 (type $generated@@379))))
(= (type ($generated@@378 $generated@@379)) ($generated@@87 $generated@@380 $generated@@4)))
 :pattern ( ($generated@@378 $generated@@379))
)))
(assert (forall (($generated@@381 T@U) ) (! (let (($generated@@382 ($generated@@334 (type $generated@@381))))
(let (($generated@@383 ($generated@@333 (type $generated@@381))))
 (=> (= (type $generated@@381) ($generated@@332 $generated@@383 $generated@@382)) (or (= $generated@@381 ($generated@@331 $generated@@383 $generated@@382)) (exists (($generated@@384 T@U) ) (!  (and (= (type $generated@@384) $generated@@382) ($generated@@0 ($generated@@92 ($generated@@378 $generated@@381) $generated@@384)))
 :no-pattern (type $generated@@384)
 :no-pattern ($generated $generated@@384)
 :no-pattern ($generated@@0 $generated@@384)
))))))
 :pattern ( ($generated@@378 $generated@@381))
)))
(assert (forall (($generated@@385 T@U) ($generated@@386 T@U) ) (!  (=> (and (= (type $generated@@385) ($generated@@87 $generated@@170 $generated@@2)) (= (type $generated@@386) $generated@@70)) (= ($generated@@154 $generated@@385 ($generated@@175 $generated@@386)) (forall (($generated@@387 T@U) ) (!  (=> (and (= (type $generated@@387) $generated@@170) (< 0 ($generated ($generated@@92 $generated@@385 $generated@@387)))) ($generated@@241 $generated@@387 $generated@@386))
 :pattern ( ($generated@@92 $generated@@385 $generated@@387))
))))
 :pattern ( ($generated@@154 $generated@@385 ($generated@@175 $generated@@386)))
)))
(assert (forall (($generated@@388 T@U) ($generated@@389 T@U) ($generated@@390 T@U) ) (!  (=> (and (and (= (type $generated@@388) ($generated@@87 $generated@@170 $generated@@4)) (= (type $generated@@389) $generated@@70)) (= (type $generated@@390) ($generated@@87 $generated@@88 $generated@@89))) (= ($generated@@85 $generated@@388 ($generated@@255 $generated@@389) $generated@@390) (forall (($generated@@391 T@U) ) (!  (=> (and (= (type $generated@@391) $generated@@170) ($generated@@0 ($generated@@92 $generated@@388 $generated@@391))) ($generated@@271 $generated@@391 $generated@@389 $generated@@390))
 :pattern ( ($generated@@92 $generated@@388 $generated@@391))
))))
 :pattern ( ($generated@@85 $generated@@388 ($generated@@255 $generated@@389) $generated@@390))
)))
(assert (forall (($generated@@392 T@U) ($generated@@393 T@U) ($generated@@394 T@U) ) (!  (=> (and (and (= (type $generated@@392) ($generated@@87 $generated@@170 $generated@@4)) (= (type $generated@@393) $generated@@70)) (= (type $generated@@394) ($generated@@87 $generated@@88 $generated@@89))) (= ($generated@@85 $generated@@392 ($generated@@260 $generated@@393) $generated@@394) (forall (($generated@@395 T@U) ) (!  (=> (and (= (type $generated@@395) $generated@@170) ($generated@@0 ($generated@@92 $generated@@392 $generated@@395))) ($generated@@271 $generated@@395 $generated@@393 $generated@@394))
 :pattern ( ($generated@@92 $generated@@392 $generated@@395))
))))
 :pattern ( ($generated@@85 $generated@@392 ($generated@@260 $generated@@393) $generated@@394))
)))
(assert (forall (($generated@@396 T@U) ) (! (let (($generated@@397 (type $generated@@396)))
(= ($generated ($generated@@92 ($generated@@307 $generated@@397) $generated@@396)) 0))
 :pattern ( (let (($generated@@397 (type $generated@@396)))
($generated@@92 ($generated@@307 $generated@@397) $generated@@396)))
)))
(assert  (and (forall (($generated@@400 T@U) ) (! (= (type ($generated@@398 $generated@@400)) ($generated@@87 $generated@@170 $generated@@4))
 :pattern ( ($generated@@398 $generated@@400))
)) (forall (($generated@@401 T@U) ) (! (let (($generated@@402 ($generated@@316 (type $generated@@401))))
(let (($generated@@403 ($generated@@315 (type $generated@@401))))
(= (type ($generated@@399 $generated@@401)) ($generated@@87 $generated@@403 $generated@@402))))
 :pattern ( ($generated@@399 $generated@@401))
))))
(assert (forall (($generated@@404 T@U) ($generated@@405 T@U) ) (!  (=> (and (= (type $generated@@404) ($generated@@314 $generated@@170 $generated@@170)) (= (type $generated@@405) $generated@@170)) (= ($generated@@0 ($generated@@92 ($generated@@398 $generated@@404) $generated@@405))  (and ($generated@@0 ($generated@@92 ($generated@@312 $generated@@404) ($generated@@168 ($generated@@357 $generated@@161 $generated@@405)))) (= ($generated@@92 ($generated@@399 $generated@@404) ($generated@@168 ($generated@@357 $generated@@161 $generated@@405))) ($generated@@169 ($generated@@357 $generated@@161 $generated@@405))))))
 :pattern ( ($generated@@92 ($generated@@398 $generated@@404) $generated@@405))
)))
(assert  (and (forall (($generated@@408 T@U) ) (! (= (type ($generated@@406 $generated@@408)) ($generated@@87 $generated@@170 $generated@@4))
 :pattern ( ($generated@@406 $generated@@408))
)) (forall (($generated@@409 T@U) ) (! (let (($generated@@410 ($generated@@334 (type $generated@@409))))
(let (($generated@@411 ($generated@@333 (type $generated@@409))))
(= (type ($generated@@407 $generated@@409)) ($generated@@87 $generated@@411 $generated@@410))))
 :pattern ( ($generated@@407 $generated@@409))
))))
(assert (forall (($generated@@412 T@U) ($generated@@413 T@U) ) (!  (=> (and (= (type $generated@@412) ($generated@@332 $generated@@170 $generated@@170)) (= (type $generated@@413) $generated@@170)) (= ($generated@@0 ($generated@@92 ($generated@@406 $generated@@412) $generated@@413))  (and ($generated@@0 ($generated@@92 ($generated@@330 $generated@@412) ($generated@@168 ($generated@@357 $generated@@161 $generated@@413)))) (= ($generated@@92 ($generated@@407 $generated@@412) ($generated@@168 ($generated@@357 $generated@@161 $generated@@413))) ($generated@@169 ($generated@@357 $generated@@161 $generated@@413))))))
 :pattern ( ($generated@@92 ($generated@@406 $generated@@412) $generated@@413))
)))
(assert (forall (($generated@@414 T@U) ($generated@@415 T@U) ) (! (let (($generated@@416 (type $generated@@415)))
(let (($generated@@417 ($generated@@315 (type $generated@@414))))
 (=> (= (type $generated@@414) ($generated@@314 $generated@@417 $generated@@416)) (= ($generated@@0 ($generated@@92 ($generated@@367 $generated@@414) $generated@@415)) (exists (($generated@@418 T@U) ) (!  (and (= (type $generated@@418) $generated@@417) (and ($generated@@0 ($generated@@92 ($generated@@312 $generated@@414) $generated@@418)) (= $generated@@415 ($generated@@92 ($generated@@399 $generated@@414) $generated@@418))))
 :pattern ( ($generated@@92 ($generated@@312 $generated@@414) $generated@@418))
 :pattern ( ($generated@@92 ($generated@@399 $generated@@414) $generated@@418))
))))))
 :pattern ( ($generated@@92 ($generated@@367 $generated@@414) $generated@@415))
)))
(assert (forall (($generated@@419 T@U) ($generated@@420 T@U) ) (! (let (($generated@@421 (type $generated@@420)))
(let (($generated@@422 ($generated@@333 (type $generated@@419))))
 (=> (= (type $generated@@419) ($generated@@332 $generated@@422 $generated@@421)) (= ($generated@@0 ($generated@@92 ($generated@@378 $generated@@419) $generated@@420)) (exists (($generated@@423 T@U) ) (!  (and (= (type $generated@@423) $generated@@422) (and ($generated@@0 ($generated@@92 ($generated@@330 $generated@@419) $generated@@423)) (= $generated@@420 ($generated@@92 ($generated@@407 $generated@@419) $generated@@423))))
 :pattern ( ($generated@@92 ($generated@@330 $generated@@419) $generated@@423))
 :pattern ( ($generated@@92 ($generated@@407 $generated@@419) $generated@@423))
))))))
 :pattern ( ($generated@@92 ($generated@@378 $generated@@419) $generated@@420))
)))
(assert (forall (($generated@@425 T@U) ($generated@@426 T@U) ) (! (= (type ($generated@@424 $generated@@425 $generated@@426)) $generated@@70)
 :pattern ( ($generated@@424 $generated@@425 $generated@@426))
)))
(assert (forall (($generated@@427 T@U) ($generated@@428 T@U) ($generated@@429 T@U) ($generated@@430 T@U) ) (!  (=> (and (and (and (= (type $generated@@427) ($generated@@314 $generated@@170 $generated@@170)) (= (type $generated@@428) $generated@@70)) (= (type $generated@@429) $generated@@70)) (= (type $generated@@430) ($generated@@87 $generated@@88 $generated@@89))) (= ($generated@@85 $generated@@427 ($generated@@424 $generated@@428 $generated@@429) $generated@@430) (forall (($generated@@431 T@U) ) (!  (=> (and (= (type $generated@@431) $generated@@170) ($generated@@0 ($generated@@92 ($generated@@312 $generated@@427) $generated@@431))) (and ($generated@@271 ($generated@@92 ($generated@@399 $generated@@427) $generated@@431) $generated@@429 $generated@@430) ($generated@@271 $generated@@431 $generated@@428 $generated@@430)))
 :pattern ( ($generated@@92 ($generated@@399 $generated@@427) $generated@@431))
 :pattern ( ($generated@@92 ($generated@@312 $generated@@427) $generated@@431))
))))
 :pattern ( ($generated@@85 $generated@@427 ($generated@@424 $generated@@428 $generated@@429) $generated@@430))
)))
(assert (forall (($generated@@433 T@U) ($generated@@434 T@U) ) (! (= (type ($generated@@432 $generated@@433 $generated@@434)) $generated@@70)
 :pattern ( ($generated@@432 $generated@@433 $generated@@434))
)))
(assert (forall (($generated@@435 T@U) ($generated@@436 T@U) ($generated@@437 T@U) ($generated@@438 T@U) ) (!  (=> (and (and (and (= (type $generated@@435) ($generated@@332 $generated@@170 $generated@@170)) (= (type $generated@@436) $generated@@70)) (= (type $generated@@437) $generated@@70)) (= (type $generated@@438) ($generated@@87 $generated@@88 $generated@@89))) (= ($generated@@85 $generated@@435 ($generated@@432 $generated@@436 $generated@@437) $generated@@438) (forall (($generated@@439 T@U) ) (!  (=> (and (= (type $generated@@439) $generated@@170) ($generated@@0 ($generated@@92 ($generated@@330 $generated@@435) $generated@@439))) (and ($generated@@271 ($generated@@92 ($generated@@407 $generated@@435) $generated@@439) $generated@@437 $generated@@438) ($generated@@271 $generated@@439 $generated@@436 $generated@@438)))
 :pattern ( ($generated@@92 ($generated@@407 $generated@@435) $generated@@439))
 :pattern ( ($generated@@92 ($generated@@330 $generated@@435) $generated@@439))
))))
 :pattern ( ($generated@@85 $generated@@435 ($generated@@432 $generated@@436 $generated@@437) $generated@@438))
)))
(assert (forall (($generated@@440 T@U) ($generated@@441 T@U) ($generated@@442 T@U) ) (!  (=> (and (and (and (and (= (type $generated@@440) ($generated@@87 $generated@@88 $generated@@89)) (= (type $generated@@441) ($generated@@87 $generated@@88 $generated@@89))) (= (type $generated@@442) ($generated@@87 $generated@@88 $generated@@89))) (not (= $generated@@440 $generated@@442))) (and ($generated@@143 $generated@@440 $generated@@441) ($generated@@143 $generated@@441 $generated@@442))) ($generated@@143 $generated@@440 $generated@@442))
 :pattern ( ($generated@@143 $generated@@440 $generated@@441) ($generated@@143 $generated@@441 $generated@@442))
)))
(assert (forall (($generated@@444 T@T) ) (! (= (type ($generated@@443 $generated@@444)) ($generated@@87 $generated@@444 $generated@@4))
 :pattern ( ($generated@@443 $generated@@444))
)))
(assert (forall (($generated@@445 T@U) ) (! (let (($generated@@446 ($generated@@334 (type $generated@@445))))
(let (($generated@@447 ($generated@@333 (type $generated@@445))))
 (=> (= (type $generated@@445) ($generated@@332 $generated@@447 $generated@@446)) (= (= $generated@@445 ($generated@@331 $generated@@447 $generated@@446)) (= ($generated@@330 $generated@@445) ($generated@@443 $generated@@447))))))
 :pattern ( ($generated@@330 $generated@@445))
)))
(assert (forall (($generated@@448 T@U) ) (! (let (($generated@@449 ($generated@@334 (type $generated@@448))))
(let (($generated@@450 ($generated@@333 (type $generated@@448))))
 (=> (= (type $generated@@448) ($generated@@332 $generated@@450 $generated@@449)) (= (= $generated@@448 ($generated@@331 $generated@@450 $generated@@449)) (= ($generated@@378 $generated@@448) ($generated@@443 $generated@@449))))))
 :pattern ( ($generated@@378 $generated@@448))
)))
(assert (forall (($generated@@451 T@U) ) (! (let (($generated@@452 ($generated@@334 (type $generated@@451))))
(let (($generated@@453 ($generated@@333 (type $generated@@451))))
 (=> (= (type $generated@@451) ($generated@@332 $generated@@453 $generated@@452)) (= (= $generated@@451 ($generated@@331 $generated@@453 $generated@@452)) (= ($generated@@406 $generated@@451) ($generated@@443 $generated@@170))))))
 :pattern ( ($generated@@406 $generated@@451))
)))
(assert (forall (($generated@@454 T@U) ) (! (let (($generated@@455 ($generated@@316 (type $generated@@454))))
(let (($generated@@456 ($generated@@315 (type $generated@@454))))
 (=> (= (type $generated@@454) ($generated@@314 $generated@@456 $generated@@455)) (or (= $generated@@454 ($generated@@313 $generated@@456 $generated@@455)) (exists (($generated@@457 T@U) ($generated@@458 T@U) ) (!  (and (and (= (type $generated@@457) $generated@@170) (= (type $generated@@458) $generated@@170)) ($generated@@0 ($generated@@92 ($generated@@398 $generated@@454) ($generated@@291 ($generated@@240 $generated@@457 $generated@@458)))))
 :no-pattern (type $generated@@457)
 :no-pattern (type $generated@@458)
 :no-pattern ($generated $generated@@457)
 :no-pattern ($generated@@0 $generated@@457)
 :no-pattern ($generated $generated@@458)
 :no-pattern ($generated@@0 $generated@@458)
))))))
 :pattern ( ($generated@@398 $generated@@454))
)))
(assert (forall (($generated@@459 T@U) ) (! (let (($generated@@460 ($generated@@334 (type $generated@@459))))
(let (($generated@@461 ($generated@@333 (type $generated@@459))))
 (=> (= (type $generated@@459) ($generated@@332 $generated@@461 $generated@@460)) (or (= $generated@@459 ($generated@@331 $generated@@461 $generated@@460)) (exists (($generated@@462 T@U) ($generated@@463 T@U) ) (!  (and (and (= (type $generated@@462) $generated@@170) (= (type $generated@@463) $generated@@170)) ($generated@@0 ($generated@@92 ($generated@@406 $generated@@459) ($generated@@291 ($generated@@240 $generated@@462 $generated@@463)))))
 :no-pattern (type $generated@@462)
 :no-pattern (type $generated@@463)
 :no-pattern ($generated $generated@@462)
 :no-pattern ($generated@@0 $generated@@462)
 :no-pattern ($generated $generated@@463)
 :no-pattern ($generated@@0 $generated@@463)
))))))
 :pattern ( ($generated@@406 $generated@@459))
)))
(assert (forall (($generated@@465 T@U) ) (! (= (type ($generated@@464 $generated@@465)) $generated@@76)
 :pattern ( ($generated@@464 $generated@@465))
)))
(assert (forall (($generated@@466 T@U) ($generated@@467 T@U) ($generated@@468 T@T) ) (!  (=> (and (= (type $generated@@466) $generated@@76) (= (type $generated@@467) $generated@@74)) (and (= ($generated@@464 ($generated@@248 $generated@@468 $generated@@466 $generated@@467)) $generated@@466) (= ($generated@@83 ($generated@@248 $generated@@468 $generated@@466 $generated@@467)) $generated@@467)))
 :pattern ( ($generated@@248 $generated@@468 $generated@@466 $generated@@467))
)))
(assert (forall (($generated@@469 T@U) ) (!  (=> (and (= (type $generated@@469) $generated@@170) ($generated@@241 $generated@@469 $generated@@46)) (and (= ($generated@@291 ($generated@@357 $generated@@2 $generated@@469)) $generated@@469) ($generated@@154 ($generated@@357 $generated@@2 $generated@@469) $generated@@46)))
 :pattern ( ($generated@@241 $generated@@469 $generated@@46))
)))
(assert (forall (($generated@@470 T@U) ) (!  (=> (and (= (type $generated@@470) $generated@@170) ($generated@@241 $generated@@470 $generated@@47)) (and (= ($generated@@291 ($generated@@357 $generated@@3 $generated@@470)) $generated@@470) ($generated@@154 ($generated@@357 $generated@@3 $generated@@470) $generated@@47)))
 :pattern ( ($generated@@241 $generated@@470 $generated@@47))
)))
(assert (forall (($generated@@471 T@U) ) (!  (=> (and (= (type $generated@@471) $generated@@170) ($generated@@241 $generated@@471 $generated@@44)) (and (= ($generated@@291 ($generated@@357 $generated@@4 $generated@@471)) $generated@@471) ($generated@@154 ($generated@@357 $generated@@4 $generated@@471) $generated@@44)))
 :pattern ( ($generated@@241 $generated@@471 $generated@@44))
)))
(assert (= ($generated@@1 $generated@@472) 22))
(assert (forall (($generated@@473 T@U) ) (!  (=> (and (= (type $generated@@473) $generated@@170) ($generated@@241 $generated@@473 $generated@@45)) (and (= ($generated@@291 ($generated@@357 $generated@@472 $generated@@473)) $generated@@473) ($generated@@154 ($generated@@357 $generated@@472 $generated@@473) $generated@@45)))
 :pattern ( ($generated@@241 $generated@@473 $generated@@45))
)))
(assert (forall (($generated@@474 T@U) ($generated@@475 T@U) ) (!  (=> (= (type $generated@@475) $generated@@70) (= ($generated@@241 ($generated@@291 $generated@@474) $generated@@475) ($generated@@154 $generated@@474 $generated@@475)))
 :pattern ( ($generated@@241 ($generated@@291 $generated@@474) $generated@@475))
)))
(assert (forall (($generated@@476 T@U) ) (! (let (($generated@@477 ($generated@@90 (type $generated@@476))))
 (=> (= (type $generated@@476) ($generated@@87 $generated@@477 $generated@@2)) (<= 0 ($generated@@306 $generated@@476))))
 :pattern ( ($generated@@306 $generated@@476))
)))
(assert (forall (($generated@@478 T@U) ) (! (let (($generated@@479 ($generated@@286 (type $generated@@478))))
 (=> (= (type $generated@@478) ($generated@@285 $generated@@479)) (<= 0 ($generated@@284 $generated@@478))))
 :pattern ( ($generated@@284 $generated@@478))
)))
(assert (forall (($generated@@481 T@U) ) (! (= (type ($generated@@480 $generated@@481)) $generated@@70)
 :pattern ( ($generated@@480 $generated@@481))
)))
(assert (forall (($generated@@482 T@U) ($generated@@483 T@U) ) (!  (=> (and (= (type $generated@@482) $generated@@70) (= (type $generated@@483) $generated@@70)) (= ($generated@@480 ($generated@@424 $generated@@482 $generated@@483)) $generated@@482))
 :pattern ( ($generated@@424 $generated@@482 $generated@@483))
)))
(assert (forall (($generated@@485 T@U) ) (! (= (type ($generated@@484 $generated@@485)) $generated@@70)
 :pattern ( ($generated@@484 $generated@@485))
)))
(assert (forall (($generated@@486 T@U) ($generated@@487 T@U) ) (!  (=> (and (= (type $generated@@486) $generated@@70) (= (type $generated@@487) $generated@@70)) (= ($generated@@484 ($generated@@424 $generated@@486 $generated@@487)) $generated@@487))
 :pattern ( ($generated@@424 $generated@@486 $generated@@487))
)))
(assert (forall (($generated@@488 T@U) ($generated@@489 T@U) ) (!  (=> (and (= (type $generated@@488) $generated@@70) (= (type $generated@@489) $generated@@70)) (= ($generated@@81 ($generated@@424 $generated@@488 $generated@@489)) $generated@@58))
 :pattern ( ($generated@@424 $generated@@488 $generated@@489))
)))
(assert (forall (($generated@@491 T@U) ) (! (= (type ($generated@@490 $generated@@491)) $generated@@70)
 :pattern ( ($generated@@490 $generated@@491))
)))
(assert (forall (($generated@@492 T@U) ($generated@@493 T@U) ) (!  (=> (and (= (type $generated@@492) $generated@@70) (= (type $generated@@493) $generated@@70)) (= ($generated@@490 ($generated@@432 $generated@@492 $generated@@493)) $generated@@492))
 :pattern ( ($generated@@432 $generated@@492 $generated@@493))
)))
(assert (forall (($generated@@495 T@U) ) (! (= (type ($generated@@494 $generated@@495)) $generated@@70)
 :pattern ( ($generated@@494 $generated@@495))
)))
(assert (forall (($generated@@496 T@U) ($generated@@497 T@U) ) (!  (=> (and (= (type $generated@@496) $generated@@70) (= (type $generated@@497) $generated@@70)) (= ($generated@@494 ($generated@@432 $generated@@496 $generated@@497)) $generated@@497))
 :pattern ( ($generated@@432 $generated@@496 $generated@@497))
)))
(assert (forall (($generated@@498 T@U) ($generated@@499 T@U) ) (!  (=> (and (= (type $generated@@498) $generated@@70) (= (type $generated@@499) $generated@@70)) (= ($generated@@81 ($generated@@432 $generated@@498 $generated@@499)) $generated@@59))
 :pattern ( ($generated@@432 $generated@@498 $generated@@499))
)))
(assert (forall (($generated@@500 T@U) ($generated@@501 T@U) ) (!  (=> (and (= (type $generated@@500) $generated@@170) (= (type $generated@@501) $generated@@170)) (= ($generated@@277 ($generated@@240 $generated@@500 $generated@@501)) $generated@@62))
 :pattern ( ($generated@@240 $generated@@500 $generated@@501))
)))
(assert (forall (($generated@@503 T@U) ) (! (= (type ($generated@@502 $generated@@503)) $generated@@70)
 :pattern ( ($generated@@502 $generated@@503))
)))
(assert (forall (($generated@@504 T@U) ($generated@@505 T@U) ) (!  (=> (and (= (type $generated@@504) $generated@@70) (= (type $generated@@505) $generated@@70)) (= ($generated@@502 ($generated@@160 $generated@@504 $generated@@505)) $generated@@504))
 :pattern ( ($generated@@160 $generated@@504 $generated@@505))
)))
(assert (forall (($generated@@507 T@U) ) (! (= (type ($generated@@506 $generated@@507)) $generated@@70)
 :pattern ( ($generated@@506 $generated@@507))
)))
(assert (forall (($generated@@508 T@U) ($generated@@509 T@U) ) (!  (=> (and (= (type $generated@@508) $generated@@70) (= (type $generated@@509) $generated@@70)) (= ($generated@@506 ($generated@@160 $generated@@508 $generated@@509)) $generated@@509))
 :pattern ( ($generated@@160 $generated@@508 $generated@@509))
)))
(assert (forall (($generated@@510 T@U) ($generated@@511 T@U) ) (!  (=> (and (= (type $generated@@510) $generated@@170) (= (type $generated@@511) $generated@@170)) (= ($generated@@168 ($generated@@240 $generated@@510 $generated@@511)) $generated@@510))
 :pattern ( ($generated@@240 $generated@@510 $generated@@511))
)))
(assert (forall (($generated@@512 T@U) ($generated@@513 T@U) ) (!  (=> (and (= (type $generated@@512) $generated@@170) (= (type $generated@@513) $generated@@170)) (= ($generated@@169 ($generated@@240 $generated@@512 $generated@@513)) $generated@@513))
 :pattern ( ($generated@@240 $generated@@512 $generated@@513))
)))
(assert  (and (forall (($generated@@516 T@U) ) (! (= (type ($generated@@514 $generated@@516)) $generated@@70)
 :pattern ( ($generated@@514 $generated@@516))
)) (forall (($generated@@517 T@U) ($generated@@518 Int) ) (! (let (($generated@@519 ($generated@@286 (type $generated@@517))))
(= (type ($generated@@515 $generated@@517 $generated@@518)) $generated@@519))
 :pattern ( ($generated@@515 $generated@@517 $generated@@518))
))))
(assert (forall (($generated@@520 T@U) ($generated@@521 T@U) ($generated@@522 T@U) ) (!  (=> (and (and (= (type $generated@@520) ($generated@@285 $generated@@170)) (= (type $generated@@521) $generated@@70)) (= (type $generated@@522) ($generated@@87 $generated@@88 $generated@@89))) (= ($generated@@85 $generated@@520 ($generated@@514 $generated@@521) $generated@@522) (forall (($generated@@523 Int) ) (!  (=> (and (<= 0 $generated@@523) (< $generated@@523 ($generated@@284 $generated@@520))) ($generated@@271 ($generated@@515 $generated@@520 $generated@@523) $generated@@521 $generated@@522))
 :pattern ( ($generated@@515 $generated@@520 $generated@@523))
))))
 :pattern ( ($generated@@85 $generated@@520 ($generated@@514 $generated@@521) $generated@@522))
)))
(assert (forall (($generated@@525 Int) ) (! (= ($generated@@524 ($generated@@86 $generated@@525)) $generated@@525)
 :pattern ( ($generated@@86 $generated@@525))
)))
(assert (forall (($generated@@527 T@U) ) (! (= (type ($generated@@526 $generated@@527)) $generated@@70)
 :pattern ( ($generated@@526 $generated@@527))
)))
(assert (forall (($generated@@528 T@U) ) (!  (=> (= (type $generated@@528) $generated@@70) (= ($generated@@526 ($generated@@255 $generated@@528)) $generated@@528))
 :pattern ( ($generated@@255 $generated@@528))
)))
(assert (forall (($generated@@529 T@U) ) (!  (=> (= (type $generated@@529) $generated@@70) (= ($generated@@81 ($generated@@255 $generated@@529)) $generated@@54))
 :pattern ( ($generated@@255 $generated@@529))
)))
(assert (forall (($generated@@531 T@U) ) (! (= (type ($generated@@530 $generated@@531)) $generated@@70)
 :pattern ( ($generated@@530 $generated@@531))
)))
(assert (forall (($generated@@532 T@U) ) (!  (=> (= (type $generated@@532) $generated@@70) (= ($generated@@530 ($generated@@260 $generated@@532)) $generated@@532))
 :pattern ( ($generated@@260 $generated@@532))
)))
(assert (forall (($generated@@533 T@U) ) (!  (=> (= (type $generated@@533) $generated@@70) (= ($generated@@81 ($generated@@260 $generated@@533)) $generated@@55))
 :pattern ( ($generated@@260 $generated@@533))
)))
(assert (forall (($generated@@535 T@U) ) (! (= (type ($generated@@534 $generated@@535)) $generated@@70)
 :pattern ( ($generated@@534 $generated@@535))
)))
(assert (forall (($generated@@536 T@U) ) (!  (=> (= (type $generated@@536) $generated@@70) (= ($generated@@534 ($generated@@175 $generated@@536)) $generated@@536))
 :pattern ( ($generated@@175 $generated@@536))
)))
(assert (forall (($generated@@537 T@U) ) (!  (=> (= (type $generated@@537) $generated@@70) (= ($generated@@81 ($generated@@175 $generated@@537)) $generated@@56))
 :pattern ( ($generated@@175 $generated@@537))
)))
(assert (forall (($generated@@539 T@U) ) (! (= (type ($generated@@538 $generated@@539)) $generated@@70)
 :pattern ( ($generated@@538 $generated@@539))
)))
(assert (forall (($generated@@540 T@U) ) (!  (=> (= (type $generated@@540) $generated@@70) (= ($generated@@538 ($generated@@514 $generated@@540)) $generated@@540))
 :pattern ( ($generated@@514 $generated@@540))
)))
(assert (forall (($generated@@541 T@U) ) (!  (=> (= (type $generated@@541) $generated@@70) (= ($generated@@81 ($generated@@514 $generated@@541)) $generated@@57))
 :pattern ( ($generated@@514 $generated@@541))
)))
(assert (forall (($generated@@542 T@U) ) (! (let (($generated@@543 (type $generated@@542)))
(= ($generated@@357 $generated@@543 ($generated@@291 $generated@@542)) $generated@@542))
 :pattern ( ($generated@@291 $generated@@542))
)))
(assert (forall (($generated@@544 T@U) ($generated@@545 T@U) ($generated@@546 T@U) ) (!  (=> (and (and (= (type $generated@@544) ($generated@@314 $generated@@170 $generated@@170)) (= (type $generated@@545) $generated@@70)) (= (type $generated@@546) $generated@@70)) (= ($generated@@154 $generated@@544 ($generated@@424 $generated@@545 $generated@@546)) (forall (($generated@@547 T@U) ) (!  (=> (and (= (type $generated@@547) $generated@@170) ($generated@@0 ($generated@@92 ($generated@@312 $generated@@544) $generated@@547))) (and ($generated@@241 ($generated@@92 ($generated@@399 $generated@@544) $generated@@547) $generated@@546) ($generated@@241 $generated@@547 $generated@@545)))
 :pattern ( ($generated@@92 ($generated@@399 $generated@@544) $generated@@547))
 :pattern ( ($generated@@92 ($generated@@312 $generated@@544) $generated@@547))
))))
 :pattern ( ($generated@@154 $generated@@544 ($generated@@424 $generated@@545 $generated@@546)))
)))
(assert (forall (($generated@@548 T@U) ($generated@@549 T@U) ($generated@@550 T@U) ) (!  (=> (and (and (= (type $generated@@548) ($generated@@332 $generated@@170 $generated@@170)) (= (type $generated@@549) $generated@@70)) (= (type $generated@@550) $generated@@70)) (= ($generated@@154 $generated@@548 ($generated@@432 $generated@@549 $generated@@550)) (forall (($generated@@551 T@U) ) (!  (=> (and (= (type $generated@@551) $generated@@170) ($generated@@0 ($generated@@92 ($generated@@330 $generated@@548) $generated@@551))) (and ($generated@@241 ($generated@@92 ($generated@@407 $generated@@548) $generated@@551) $generated@@550) ($generated@@241 $generated@@551 $generated@@549)))
 :pattern ( ($generated@@92 ($generated@@407 $generated@@548) $generated@@551))
 :pattern ( ($generated@@92 ($generated@@330 $generated@@548) $generated@@551))
))))
 :pattern ( ($generated@@154 $generated@@548 ($generated@@432 $generated@@549 $generated@@550)))
)))
(assert (forall (($generated@@554 T@U) ($generated@@555 T@U) ) (!  (=> (and (= (type $generated@@554) $generated@@170) (= (type $generated@@555) $generated@@170)) (< ($generated@@552 $generated@@554) ($generated@@553 ($generated@@240 $generated@@554 $generated@@555))))
 :pattern ( ($generated@@240 $generated@@554 $generated@@555))
)))
(assert (forall (($generated@@556 T@U) ($generated@@557 T@U) ) (!  (=> (and (= (type $generated@@556) $generated@@170) (= (type $generated@@557) $generated@@170)) (< ($generated@@552 $generated@@557) ($generated@@553 ($generated@@240 $generated@@556 $generated@@557))))
 :pattern ( ($generated@@240 $generated@@556 $generated@@557))
)))
(assert (forall (($generated@@558 T@U) ($generated@@559 T@U) ($generated@@560 T@U) ) (!  (=> (and (and (and (= (type $generated@@558) $generated@@170) (= (type $generated@@559) $generated@@70)) (= (type $generated@@560) $generated@@70)) ($generated@@241 $generated@@558 ($generated@@424 $generated@@559 $generated@@560))) (and (= ($generated@@291 ($generated@@357 ($generated@@314 $generated@@170 $generated@@170) $generated@@558)) $generated@@558) ($generated@@154 ($generated@@357 ($generated@@314 $generated@@170 $generated@@170) $generated@@558) ($generated@@424 $generated@@559 $generated@@560))))
 :pattern ( ($generated@@241 $generated@@558 ($generated@@424 $generated@@559 $generated@@560)))
)))
(assert (forall (($generated@@561 T@U) ($generated@@562 T@U) ($generated@@563 T@U) ) (!  (=> (and (and (and (= (type $generated@@561) $generated@@170) (= (type $generated@@562) $generated@@70)) (= (type $generated@@563) $generated@@70)) ($generated@@241 $generated@@561 ($generated@@432 $generated@@562 $generated@@563))) (and (= ($generated@@291 ($generated@@357 ($generated@@332 $generated@@170 $generated@@170) $generated@@561)) $generated@@561) ($generated@@154 ($generated@@357 ($generated@@332 $generated@@170 $generated@@170) $generated@@561) ($generated@@432 $generated@@562 $generated@@563))))
 :pattern ( ($generated@@241 $generated@@561 ($generated@@432 $generated@@562 $generated@@563)))
)))
(assert (forall (($generated@@564 T@U) ($generated@@565 T@U) ($generated@@566 T@U) ) (!  (=> (and (and (and (= (type $generated@@564) $generated@@70) (= (type $generated@@565) $generated@@70)) (= (type $generated@@566) $generated@@170)) ($generated@@241 $generated@@566 ($generated@@160 $generated@@564 $generated@@565))) (and (= ($generated@@291 ($generated@@357 $generated@@161 $generated@@566)) $generated@@566) ($generated@@154 ($generated@@357 $generated@@161 $generated@@566) ($generated@@160 $generated@@564 $generated@@565))))
 :pattern ( ($generated@@241 $generated@@566 ($generated@@160 $generated@@564 $generated@@565)))
)))
(assert (forall (($generated@@567 T@U) ) (! (let (($generated@@568 (type $generated@@567)))
 (not ($generated@@0 ($generated@@92 ($generated@@443 $generated@@568) $generated@@567))))
 :pattern ( (let (($generated@@568 (type $generated@@567)))
($generated@@92 ($generated@@443 $generated@@568) $generated@@567)))
)))
(assert (forall (($generated@@570 T@U) ) (! (= (type ($generated@@569 $generated@@570)) $generated@@77)
 :pattern ( ($generated@@569 $generated@@570))
)))
(assert (forall (($generated@@571 T@U) ($generated@@572 T@U) ) (!  (=> (and (= (type $generated@@571) $generated@@70) (= (type $generated@@572) $generated@@70)) (and (= ($generated@@81 ($generated@@160 $generated@@571 $generated@@572)) $generated@@63) (= ($generated@@569 ($generated@@160 $generated@@571 $generated@@572)) $generated@@67)))
 :pattern ( ($generated@@160 $generated@@571 $generated@@572))
)))
(assert (forall (($generated@@573 T@U) ) (!  (=> (= (type $generated@@573) $generated@@161) (= ($generated@@552 ($generated@@291 $generated@@573)) ($generated@@553 $generated@@573)))
 :pattern ( ($generated@@552 ($generated@@291 $generated@@573)))
)))
(assert (forall (($generated@@574 T@U) ) (!  (=> (and (= (type $generated@@574) $generated@@170) ($generated@@241 $generated@@574 ($generated@@86 0))) (and (= ($generated@@291 ($generated@@357 $generated@@2 $generated@@574)) $generated@@574) ($generated@@154 ($generated@@357 ($generated@@87 $generated@@170 $generated@@4) $generated@@574) ($generated@@86 0))))
 :pattern ( ($generated@@241 $generated@@574 ($generated@@86 0)))
)))
(assert (forall (($generated@@575 T@U) ($generated@@576 T@U) ) (!  (=> (and (and (= (type $generated@@575) $generated@@170) (= (type $generated@@576) $generated@@70)) ($generated@@241 $generated@@575 ($generated@@255 $generated@@576))) (and (= ($generated@@291 ($generated@@357 ($generated@@87 $generated@@170 $generated@@4) $generated@@575)) $generated@@575) ($generated@@154 ($generated@@357 ($generated@@87 $generated@@170 $generated@@4) $generated@@575) ($generated@@255 $generated@@576))))
 :pattern ( ($generated@@241 $generated@@575 ($generated@@255 $generated@@576)))
)))
(assert (forall (($generated@@577 T@U) ($generated@@578 T@U) ) (!  (=> (and (and (= (type $generated@@577) $generated@@170) (= (type $generated@@578) $generated@@70)) ($generated@@241 $generated@@577 ($generated@@260 $generated@@578))) (and (= ($generated@@291 ($generated@@357 ($generated@@87 $generated@@170 $generated@@4) $generated@@577)) $generated@@577) ($generated@@154 ($generated@@357 ($generated@@87 $generated@@170 $generated@@4) $generated@@577) ($generated@@260 $generated@@578))))
 :pattern ( ($generated@@241 $generated@@577 ($generated@@260 $generated@@578)))
)))
(assert (forall (($generated@@579 T@U) ($generated@@580 T@U) ) (!  (=> (and (and (= (type $generated@@579) $generated@@170) (= (type $generated@@580) $generated@@70)) ($generated@@241 $generated@@579 ($generated@@175 $generated@@580))) (and (= ($generated@@291 ($generated@@357 ($generated@@87 $generated@@170 $generated@@2) $generated@@579)) $generated@@579) ($generated@@154 ($generated@@357 ($generated@@87 $generated@@170 $generated@@2) $generated@@579) ($generated@@175 $generated@@580))))
 :pattern ( ($generated@@241 $generated@@579 ($generated@@175 $generated@@580)))
)))
(assert (forall (($generated@@581 T@U) ($generated@@582 T@U) ) (!  (=> (and (and (= (type $generated@@581) $generated@@170) (= (type $generated@@582) $generated@@70)) ($generated@@241 $generated@@581 ($generated@@514 $generated@@582))) (and (= ($generated@@291 ($generated@@357 ($generated@@285 $generated@@170) $generated@@581)) $generated@@581) ($generated@@154 ($generated@@357 ($generated@@285 $generated@@170) $generated@@581) ($generated@@514 $generated@@582))))
 :pattern ( ($generated@@241 $generated@@581 ($generated@@514 $generated@@582)))
)))
(assert (= ($generated@@81 $generated@@147) $generated@@65))
(assert (= ($generated@@569 $generated@@147) $generated@@68))
(assert (= ($generated@@81 $generated@@237) $generated@@66))
(assert (= ($generated@@569 $generated@@237) $generated@@68))
(assert (forall (($generated@@583 T@U) ($generated@@584 T@U) ($generated@@585 T@U) ) (!  (=> (and (and (= (type $generated@@583) ($generated@@87 $generated@@170 $generated@@2)) (= (type $generated@@584) $generated@@70)) (= (type $generated@@585) ($generated@@87 $generated@@88 $generated@@89))) (= ($generated@@85 $generated@@583 ($generated@@175 $generated@@584) $generated@@585) (forall (($generated@@586 T@U) ) (!  (=> (and (= (type $generated@@586) $generated@@170) (< 0 ($generated ($generated@@92 $generated@@583 $generated@@586)))) ($generated@@271 $generated@@586 $generated@@584 $generated@@585))
 :pattern ( ($generated@@92 $generated@@583 $generated@@586))
))))
 :pattern ( ($generated@@85 $generated@@583 ($generated@@175 $generated@@584) $generated@@585))
)))
(assert (forall (($generated@@587 T@U) ($generated@@588 T@U) ($generated@@589 T@U) ) (!  (=> (and (and (and (= (type $generated@@587) $generated@@161) (= (type $generated@@588) $generated@@70)) (= (type $generated@@589) ($generated@@87 $generated@@88 $generated@@89))) (and ($generated@@152 $generated@@589) (and ($generated@@159 $generated@@587) (exists (($generated@@590 T@U) ) (!  (and (= (type $generated@@590) $generated@@70) ($generated@@85 $generated@@587 ($generated@@160 $generated@@588 $generated@@590) $generated@@589))
 :pattern ( ($generated@@85 $generated@@587 ($generated@@160 $generated@@588 $generated@@590) $generated@@589))
))))) ($generated@@271 ($generated@@168 $generated@@587) $generated@@588 $generated@@589))
 :pattern ( ($generated@@271 ($generated@@168 $generated@@587) $generated@@588 $generated@@589))
)))
(assert (forall (($generated@@591 T@U) ($generated@@592 T@U) ($generated@@593 T@U) ) (!  (=> (and (and (and (= (type $generated@@591) $generated@@161) (= (type $generated@@592) $generated@@70)) (= (type $generated@@593) ($generated@@87 $generated@@88 $generated@@89))) (and ($generated@@152 $generated@@593) (and ($generated@@159 $generated@@591) (exists (($generated@@594 T@U) ) (!  (and (= (type $generated@@594) $generated@@70) ($generated@@85 $generated@@591 ($generated@@160 $generated@@594 $generated@@592) $generated@@593))
 :pattern ( ($generated@@85 $generated@@591 ($generated@@160 $generated@@594 $generated@@592) $generated@@593))
))))) ($generated@@271 ($generated@@169 $generated@@591) $generated@@592 $generated@@593))
 :pattern ( ($generated@@271 ($generated@@169 $generated@@591) $generated@@592 $generated@@593))
)))
(assert (forall (($generated@@595 T@U) ($generated@@596 T@U) ) (!  (=> (and (= (type $generated@@595) $generated@@170) (= (type $generated@@596) $generated@@170)) (= ($generated@@240 ($generated@@267 $generated@@595) ($generated@@267 $generated@@596)) ($generated@@267 ($generated@@240 $generated@@595 $generated@@596))))
 :pattern ( ($generated@@240 ($generated@@267 $generated@@595) ($generated@@267 $generated@@596)))
)))
(assert (forall (($generated@@597 Int) ) (! (= ($generated@@291 ($generated@@8 ($generated@@265 $generated@@597))) ($generated@@267 ($generated@@291 ($generated@@8 $generated@@597))))
 :pattern ( ($generated@@291 ($generated@@8 ($generated@@265 $generated@@597))))
)))
(assert (forall (($generated@@598 T@U) ) (! (= ($generated@@291 ($generated@@267 $generated@@598)) ($generated@@267 ($generated@@291 $generated@@598)))
 :pattern ( ($generated@@291 ($generated@@267 $generated@@598)))
)))
(assert (forall (($generated@@599 T@U) ) (! (let (($generated@@600 ($generated@@286 (type $generated@@599))))
 (=> (and (= (type $generated@@599) ($generated@@285 $generated@@600)) (= ($generated@@284 $generated@@599) 0)) (= $generated@@599 ($generated@@283 $generated@@600))))
 :pattern ( ($generated@@284 $generated@@599))
)))
(assert (forall (($generated@@601 T@U) ($generated@@602 T@U) ($generated@@603 T@U) ) (! (let (($generated@@604 (type $generated@@602)))
 (=> (and (and (= (type $generated@@601) ($generated@@87 $generated@@604 $generated@@2)) (= (type $generated@@603) $generated@@2)) (<= 0 ($generated $generated@@603))) (= ($generated@@306 ($generated@@93 $generated@@601 $generated@@602 $generated@@603)) (+ (- ($generated@@306 $generated@@601) ($generated ($generated@@92 $generated@@601 $generated@@602))) ($generated $generated@@603)))))
 :pattern ( ($generated@@306 ($generated@@93 $generated@@601 $generated@@602 $generated@@603)))
)))
(assert (forall (($generated@@605 T@U) ($generated@@606 T@U) ) (!  (=> (and (= (type $generated@@605) ($generated@@87 $generated@@88 $generated@@89)) (= (type $generated@@606) $generated@@2)) ($generated@@85 $generated@@606 $generated@@46 $generated@@605))
 :pattern ( ($generated@@85 $generated@@606 $generated@@46 $generated@@605))
)))
(assert (forall (($generated@@607 T@U) ($generated@@608 T@U) ) (!  (=> (and (= (type $generated@@607) ($generated@@87 $generated@@88 $generated@@89)) (= (type $generated@@608) $generated@@3)) ($generated@@85 $generated@@608 $generated@@47 $generated@@607))
 :pattern ( ($generated@@85 $generated@@608 $generated@@47 $generated@@607))
)))
(assert (forall (($generated@@609 T@U) ($generated@@610 T@U) ) (!  (=> (and (= (type $generated@@609) ($generated@@87 $generated@@88 $generated@@89)) (= (type $generated@@610) $generated@@4)) ($generated@@85 $generated@@610 $generated@@44 $generated@@609))
 :pattern ( ($generated@@85 $generated@@610 $generated@@44 $generated@@609))
)))
(assert (forall (($generated@@611 T@U) ($generated@@612 T@U) ) (!  (=> (and (= (type $generated@@611) ($generated@@87 $generated@@88 $generated@@89)) (= (type $generated@@612) $generated@@472)) ($generated@@85 $generated@@612 $generated@@45 $generated@@611))
 :pattern ( ($generated@@85 $generated@@612 $generated@@45 $generated@@611))
)))
(assert (forall (($generated@@613 T@U) ($generated@@614 T@U) ) (!  (=> (and (= (type $generated@@613) ($generated@@87 $generated@@88 $generated@@89)) (= (type $generated@@614) $generated@@170)) ($generated@@85 $generated@@614 $generated@@48 $generated@@613))
 :pattern ( ($generated@@85 $generated@@614 $generated@@48 $generated@@613))
)))
(assert (forall (($generated@@615 T@U) ($generated@@616 T@U) ) (!  (=> (and (= (type $generated@@615) ($generated@@285 $generated@@170)) (= (type $generated@@616) $generated@@70)) (= ($generated@@154 $generated@@615 ($generated@@514 $generated@@616)) (forall (($generated@@617 Int) ) (!  (=> (and (<= 0 $generated@@617) (< $generated@@617 ($generated@@284 $generated@@615))) ($generated@@241 ($generated@@515 $generated@@615 $generated@@617) $generated@@616))
 :pattern ( ($generated@@515 $generated@@615 $generated@@617))
))))
 :pattern ( ($generated@@154 $generated@@615 ($generated@@514 $generated@@616)))
)))
(assert (forall (($generated@@619 T@U) ($generated@@620 Int) ) (!  (=> (= (type $generated@@619) ($generated@@285 $generated@@170)) (=> (and (<= 0 $generated@@620) (< $generated@@620 ($generated@@284 $generated@@619))) (< ($generated@@553 ($generated@@357 $generated@@161 ($generated@@515 $generated@@619 $generated@@620))) ($generated@@618 $generated@@619))))
 :pattern ( ($generated@@553 ($generated@@357 $generated@@161 ($generated@@515 $generated@@619 $generated@@620))))
)))
(assert (forall (($generated@@621 T@U) ($generated@@622 T@U) ($generated@@623 T@U) ) (!  (=> (and (and (and (= (type $generated@@621) ($generated@@314 $generated@@170 $generated@@170)) (= (type $generated@@622) $generated@@70)) (= (type $generated@@623) $generated@@70)) ($generated@@154 $generated@@621 ($generated@@424 $generated@@622 $generated@@623))) (and (and ($generated@@154 ($generated@@312 $generated@@621) ($generated@@255 $generated@@622)) ($generated@@154 ($generated@@367 $generated@@621) ($generated@@255 $generated@@623))) ($generated@@154 ($generated@@398 $generated@@621) ($generated@@255 ($generated@@160 $generated@@622 $generated@@623)))))
 :pattern ( ($generated@@154 $generated@@621 ($generated@@424 $generated@@622 $generated@@623)))
)))
(assert (forall (($generated@@624 T@U) ($generated@@625 T@U) ($generated@@626 T@U) ) (!  (=> (and (and (and (= (type $generated@@624) ($generated@@332 $generated@@170 $generated@@170)) (= (type $generated@@625) $generated@@70)) (= (type $generated@@626) $generated@@70)) ($generated@@154 $generated@@624 ($generated@@432 $generated@@625 $generated@@626))) (and (and ($generated@@154 ($generated@@330 $generated@@624) ($generated@@260 $generated@@625)) ($generated@@154 ($generated@@378 $generated@@624) ($generated@@260 $generated@@626))) ($generated@@154 ($generated@@406 $generated@@624) ($generated@@260 ($generated@@160 $generated@@625 $generated@@626)))))
 :pattern ( ($generated@@154 $generated@@624 ($generated@@432 $generated@@625 $generated@@626)))
)))
(assert (forall (($generated@@627 T@U) ) (!  (=> (= (type $generated@@627) $generated@@2) ($generated@@154 $generated@@627 $generated@@46))
 :pattern ( ($generated@@154 $generated@@627 $generated@@46))
)))
(assert (forall (($generated@@628 T@U) ) (!  (=> (= (type $generated@@628) $generated@@3) ($generated@@154 $generated@@628 $generated@@47))
 :pattern ( ($generated@@154 $generated@@628 $generated@@47))
)))
(assert (forall (($generated@@629 T@U) ) (!  (=> (= (type $generated@@629) $generated@@4) ($generated@@154 $generated@@629 $generated@@44))
 :pattern ( ($generated@@154 $generated@@629 $generated@@44))
)))
(assert (forall (($generated@@630 T@U) ) (!  (=> (= (type $generated@@630) $generated@@472) ($generated@@154 $generated@@630 $generated@@45))
 :pattern ( ($generated@@154 $generated@@630 $generated@@45))
)))
(assert (forall (($generated@@631 T@U) ) (!  (=> (= (type $generated@@631) $generated@@170) ($generated@@154 $generated@@631 $generated@@48))
 :pattern ( ($generated@@154 $generated@@631 $generated@@48))
)))
(push 1)
(declare-fun ControlFlow (Int Int) Int)
(declare-fun $generated@@632 () T@U)
(declare-fun $generated@@633 () T@U)
(declare-fun $generated@@634 () T@U)
(declare-fun $generated@@635 (T@U) Bool)
(declare-fun $generated@@636 () Int)
(assert  (and (and (= (type $generated@@632) ($generated@@183 $generated@@88 $generated@@4)) (= (type $generated@@633) ($generated@@87 $generated@@88 $generated@@89))) (= (type $generated@@634) $generated@@88)))
(set-option :timeout 0)
(set-option :rlimit 0)
(assert (not
 (=> (= (ControlFlow 0 0) 3) (let (($generated@@637  (=> (and (= $generated@@632 ($generated@@182 $generated@@148 $generated@@633 $generated@@60 false)) (= (ControlFlow 0 2) (- 0 1))) (not (= $generated@@634 $generated@@148)))))
(let (($generated@@638  (=> (and ($generated@@152 $generated@@633) ($generated@@635 $generated@@633)) (=> (and (and ($generated@@154 $generated@@634 $generated@@237) ($generated@@85 $generated@@634 $generated@@237 $generated@@633)) (and (= 1 $generated@@636) (= (ControlFlow 0 3) 2))) $generated@@637))))
$generated@@638)))
))
(check-sat)
(pop 1)
; Valid
(get-info :rlimit)
(reset)
(set-option :rlimit 0)
; did a full reset
(reset)
(set-option :print-success false)
(set-info :smt-lib-version 2.6)
(set-option :auto_config false)
(set-option :type_check true)
(set-option :smt.case_split 3)
(set-option :smt.qi.eager_threshold 100)
(set-option :smt.delay_units true)
(set-option :smt.arith.solver 2)
(set-option :smt.mbqi false)
(set-option :model.compact false)
(set-option :model.v2 true)
(set-option :pp.bv_literals false)
; done setting options


(set-info :category "industrial")
(declare-sort |T@U| 0)
(declare-sort |T@T| 0)
(declare-fun real_pow (Real Real) Real)
(declare-fun UOrdering2 (|T@U| |T@U|) Bool)
(declare-fun UOrdering3 (|T@T| |T@U| |T@U|) Bool)
(declare-fun tickleBool (Bool) Bool)
(assert (and (tickleBool true) (tickleBool false)))
(declare-fun $generated (T@U) Int)
(declare-fun $generated@@0 (T@U) Bool)
(declare-fun $generated@@1 (T@T) Int)
(declare-fun $generated@@2 () T@T)
(declare-fun $generated@@3 () T@T)
(declare-fun $generated@@4 () T@T)
(declare-fun $generated@@5 () T@T)
(declare-fun $generated@@6 () T@T)
(declare-fun $generated@@7 () T@T)
(declare-fun $generated@@8 (Int) T@U)
(declare-fun type (T@U) T@T)
(declare-fun $generated@@9 (Real) T@U)
(declare-fun $generated@@10 (T@U) Real)
(declare-fun $generated@@11 (Bool) T@U)
(declare-fun $generated@@12 (RoundingMode) T@U)
(declare-fun $generated@@13 (T@U) RoundingMode)
(declare-fun $generated@@14 (String) T@U)
(declare-fun $generated@@15 (T@U) String)
(declare-fun $generated@@16 ((RegEx String)) T@U)
(declare-fun $generated@@17 (T@U) (RegEx String))
(declare-fun $generated@@44 () T@U)
(declare-fun $generated@@45 () T@U)
(declare-fun $generated@@46 () T@U)
(declare-fun $generated@@47 () T@U)
(declare-fun $generated@@48 () T@U)
(declare-fun $generated@@49 () T@U)
(declare-fun $generated@@50 () T@U)
(declare-fun $generated@@51 () T@U)
(declare-fun $generated@@52 () T@U)
(declare-fun $generated@@53 () T@U)
(declare-fun $generated@@54 () T@U)
(declare-fun $generated@@55 () T@U)
(declare-fun $generated@@56 () T@U)
(declare-fun $generated@@57 () T@U)
(declare-fun $generated@@58 () T@U)
(declare-fun $generated@@59 () T@U)
(declare-fun $generated@@60 () T@U)
(declare-fun $generated@@61 () T@U)
(declare-fun $generated@@62 () T@U)
(declare-fun $generated@@63 () T@U)
(declare-fun $generated@@64 () T@U)
(declare-fun $generated@@65 () T@U)
(declare-fun $generated@@66 () T@U)
(declare-fun $generated@@67 () T@U)
(declare-fun $generated@@68 () T@T)
(declare-fun $generated@@69 () T@T)
(declare-fun $generated@@70 (T@T) T@T)
(declare-fun $generated@@71 (T@T) T@T)
(declare-fun $generated@@72 () T@T)
(declare-fun $generated@@73 () T@T)
(declare-fun $generated@@76 (T@U) T@U)
(declare-fun $generated@@78 (T@U T@U T@U) Bool)
(declare-fun $generated@@79 (Int) T@U)
(declare-fun $generated@@80 (T@T T@T) T@T)
(declare-fun $generated@@81 () T@T)
(declare-fun $generated@@82 () T@T)
(declare-fun $generated@@83 (T@T) T@T)
(declare-fun $generated@@84 (T@T) T@T)
(declare-fun $generated@@85 (T@U T@U) T@U)
(declare-fun $generated@@86 (T@U T@U T@U) T@U)
(declare-fun $generated@@87 (T@U T@U) T@U)
(declare-fun $generated@@88 (T@U T@U T@U) T@U)
(declare-fun $generated@@136 () T@U)
(declare-fun $generated@@139 () T@U)
(declare-fun $generated@@142 () Int)
(declare-fun $generated@@143 (Int) Bool)
(declare-fun $generated@@144 (Int) Int)
(declare-fun $generated@@145 (Int) Bool)
(declare-fun $generated@@146 (T@U) T@U)
(declare-fun $generated@@150 (T@U T@U) Bool)
(declare-fun $generated@@152 (T@U) Bool)
(declare-fun $generated@@153 (T@U T@U) T@U)
(declare-fun $generated@@154 () T@T)
(declare-fun $generated@@160 (T@U T@U) Bool)
(declare-fun $generated@@161 (T@U) T@U)
(declare-fun $generated@@162 (T@U) T@U)
(declare-fun $generated@@163 () T@T)
(declare-fun $generated@@168 (T@U) T@U)
(declare-fun $generated@@169 (T@U) Bool)
(declare-fun $generated@@173 (T@U T@U T@U) T@U)
(declare-fun $generated@@174 (T@U T@U T@U Bool) T@U)
(declare-fun $generated@@175 (T@T T@T) T@T)
(declare-fun $generated@@176 (T@T) T@T)
(declare-fun $generated@@177 (T@T) T@T)
(declare-fun $generated@@178 (T@U T@U T@U T@U) T@U)
(declare-fun $generated@@229 (T@U T@U) T@U)
(declare-fun $generated@@230 (T@U T@U) Bool)
(declare-fun $generated@@240 (T@U) T@U)
(declare-fun $generated@@245 (T@U) T@U)
(declare-fun $generated@@253 (T@U) Bool)
(declare-fun $generated@@254 (T@U T@U T@U) Bool)
(declare-fun $generated@@260 (T@U) T@U)
(declare-fun $generated@@263 (Int) Bool)
(declare-fun $generated@@264 (Int) Bool)
(declare-fun $generated@@269 (T@T) T@U)
(declare-fun $generated@@270 (T@U) Int)
(declare-fun $generated@@271 (T@T) T@T)
(declare-fun $generated@@272 (T@T) T@T)
(declare-fun $generated@@278 (T@U) T@U)
(declare-fun $generated@@283 (T@U) Int)
(declare-fun $generated@@284 (T@T) T@U)
(declare-fun $generated@@289 (T@U) T@U)
(declare-fun $generated@@290 (T@T T@T) T@U)
(declare-fun $generated@@291 (T@T T@T) T@T)
(declare-fun $generated@@292 (T@T) T@T)
(declare-fun $generated@@293 (T@T) T@T)
(declare-fun $generated@@307 (T@U) T@U)
(declare-fun $generated@@308 (T@T T@T) T@U)
(declare-fun $generated@@309 (T@T T@T) T@T)
(declare-fun $generated@@310 (T@T) T@T)
(declare-fun $generated@@311 (T@T) T@T)
(declare-fun $generated@@329 (T@T T@U) T@U)
(declare-fun $generated@@338 (T@U) T@U)
(declare-fun $generated@@349 (T@U) T@U)
(declare-fun $generated@@370 (T@U) T@U)
(declare-fun $generated@@371 (T@U) T@U)
(declare-fun $generated@@378 (T@U) T@U)
(declare-fun $generated@@379 (T@U) T@U)
(declare-fun $generated@@396 (T@U T@U) T@U)
(declare-fun $generated@@404 (T@U T@U) T@U)
(declare-fun $generated@@412 (T@T) T@U)
(declare-fun $generated@@436 () T@T)
(declare-fun $generated@@444 (T@U) T@U)
(declare-fun $generated@@448 (T@U) T@U)
(declare-fun $generated@@454 (T@U) T@U)
(declare-fun $generated@@458 (T@U) T@U)
(declare-fun $generated@@466 (T@U) T@U)
(declare-fun $generated@@470 (T@U) T@U)
(declare-fun $generated@@478 (T@U) T@U)
(declare-fun $generated@@479 (T@U Int) T@U)
(declare-fun $generated@@488 (T@U) Int)
(declare-fun $generated@@490 (T@U) T@U)
(declare-fun $generated@@494 (T@U) T@U)
(declare-fun $generated@@498 (T@U) T@U)
(declare-fun $generated@@502 (T@U) T@U)
(declare-fun $generated@@516 (T@U) Int)
(declare-fun $generated@@517 (T@U) Int)
(declare-fun $generated@@533 (T@U) T@U)
(declare-fun $generated@@583 (T@U) Int)
(assert  (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (= ($generated@@1 $generated@@2) 0) (= ($generated@@1 $generated@@3) 1)) (= ($generated@@1 $generated@@4) 2)) (= ($generated@@1 $generated@@5) 3)) (= ($generated@@1 $generated@@6) 4)) (= ($generated@@1 $generated@@7) 5)) (forall (($generated@@18 Int) ) (! (= ($generated ($generated@@8 $generated@@18)) $generated@@18)
 :pattern ( ($generated@@8 $generated@@18))
))) (forall (($generated@@19 T@U) ) (!  (=> (= (type $generated@@19) $generated@@2) (= ($generated@@8 ($generated $generated@@19)) $generated@@19))
 :pattern ( ($generated $generated@@19))
))) (forall (($generated@@20 Int) ) (! (= (type ($generated@@8 $generated@@20)) $generated@@2)
 :pattern ( ($generated@@8 $generated@@20))
))) (forall (($generated@@21 Real) ) (! (= ($generated@@10 ($generated@@9 $generated@@21)) $generated@@21)
 :pattern ( ($generated@@9 $generated@@21))
))) (forall (($generated@@22 T@U) ) (!  (=> (= (type $generated@@22) $generated@@3) (= ($generated@@9 ($generated@@10 $generated@@22)) $generated@@22))
 :pattern ( ($generated@@10 $generated@@22))
))) (forall (($generated@@23 Real) ) (! (= (type ($generated@@9 $generated@@23)) $generated@@3)
 :pattern ( ($generated@@9 $generated@@23))
))) (forall (($generated@@24 Bool) ) (! (= ($generated@@0 ($generated@@11 $generated@@24)) $generated@@24)
 :pattern ( ($generated@@11 $generated@@24))
))) (forall (($generated@@25 T@U) ) (!  (=> (= (type $generated@@25) $generated@@4) (= ($generated@@11 ($generated@@0 $generated@@25)) $generated@@25))
 :pattern ( ($generated@@0 $generated@@25))
))) (forall (($generated@@26 Bool) ) (! (= (type ($generated@@11 $generated@@26)) $generated@@4)
 :pattern ( ($generated@@11 $generated@@26))
))) (forall (($generated@@27 RoundingMode) ) (! (= ($generated@@13 ($generated@@12 $generated@@27)) $generated@@27)
 :pattern ( ($generated@@12 $generated@@27))
))) (forall (($generated@@28 T@U) ) (!  (=> (= (type $generated@@28) $generated@@5) (= ($generated@@12 ($generated@@13 $generated@@28)) $generated@@28))
 :pattern ( ($generated@@13 $generated@@28))
))) (forall (($generated@@29 RoundingMode) ) (! (= (type ($generated@@12 $generated@@29)) $generated@@5)
 :pattern ( ($generated@@12 $generated@@29))
))) (forall (($generated@@30 String) ) (! (= ($generated@@15 ($generated@@14 $generated@@30)) $generated@@30)
 :pattern ( ($generated@@14 $generated@@30))
))) (forall (($generated@@31 T@U) ) (!  (=> (= (type $generated@@31) $generated@@6) (= ($generated@@14 ($generated@@15 $generated@@31)) $generated@@31))
 :pattern ( ($generated@@15 $generated@@31))
))) (forall (($generated@@32 String) ) (! (= (type ($generated@@14 $generated@@32)) $generated@@6)
 :pattern ( ($generated@@14 $generated@@32))
))) (forall (($generated@@33 (RegEx String)) ) (! (= ($generated@@17 ($generated@@16 $generated@@33)) $generated@@33)
 :pattern ( ($generated@@16 $generated@@33))
))) (forall (($generated@@34 T@U) ) (!  (=> (= (type $generated@@34) $generated@@7) (= ($generated@@16 ($generated@@17 $generated@@34)) $generated@@34))
 :pattern ( ($generated@@17 $generated@@34))
))) (forall (($generated@@35 (RegEx String)) ) (! (= (type ($generated@@16 $generated@@35)) $generated@@7)
 :pattern ( ($generated@@16 $generated@@35))
))))
(assert (forall (($generated@@36 T@U) ) (! (UOrdering2 $generated@@36 $generated@@36)
 :no-pattern ($generated $generated@@36)
 :no-pattern ($generated@@0 $generated@@36)
)))
(assert (forall (($generated@@37 T@U) ($generated@@38 T@U) ($generated@@39 T@U) ) (! (let (($generated@@40 (type $generated@@37)))
 (=> (and (and (= (type $generated@@38) $generated@@40) (= (type $generated@@39) $generated@@40)) (and (UOrdering2 $generated@@37 $generated@@38) (UOrdering2 $generated@@38 $generated@@39))) (UOrdering2 $generated@@37 $generated@@39)))
 :pattern ( (UOrdering2 $generated@@37 $generated@@38) (UOrdering2 $generated@@38 $generated@@39))
)))
(assert (forall (($generated@@41 T@U) ($generated@@42 T@U) ) (! (let (($generated@@43 (type $generated@@41)))
 (=> (= (type $generated@@42) $generated@@43) (=> (and (UOrdering2 $generated@@41 $generated@@42) (UOrdering2 $generated@@42 $generated@@41)) (= $generated@@41 $generated@@42))))
 :pattern ( (UOrdering2 $generated@@41 $generated@@42) (UOrdering2 $generated@@42 $generated@@41))
)))
(assert  (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (= ($generated@@1 $generated@@68) 6) (= (type $generated@@44) $generated@@68)) (= (type $generated@@45) $generated@@68)) (= (type $generated@@46) $generated@@68)) (= (type $generated@@47) $generated@@68)) (= (type $generated@@48) $generated@@68)) (= ($generated@@1 $generated@@69) 7)) (= (type $generated@@49) $generated@@69)) (= (type $generated@@50) $generated@@69)) (= (type $generated@@51) $generated@@69)) (= (type $generated@@52) $generated@@69)) (= (type $generated@@53) $generated@@69)) (= (type $generated@@54) $generated@@69)) (= (type $generated@@55) $generated@@69)) (= (type $generated@@56) $generated@@69)) (= (type $generated@@57) $generated@@69)) (= (type $generated@@58) $generated@@69)) (= (type $generated@@59) $generated@@69)) (forall (($generated@@74 T@T) ) (= ($generated@@1 ($generated@@70 $generated@@74)) 8))) (forall (($generated@@75 T@T) ) (! (= ($generated@@71 ($generated@@70 $generated@@75)) $generated@@75)
 :pattern ( ($generated@@70 $generated@@75))
))) (= (type $generated@@60) ($generated@@70 $generated@@4))) (= (type $generated@@61) $generated@@69)) (= ($generated@@1 $generated@@72) 9)) (= (type $generated@@62) $generated@@72)) (= (type $generated@@63) $generated@@69)) (= (type $generated@@64) $generated@@69)) (= ($generated@@1 $generated@@73) 10)) (= (type $generated@@65) $generated@@73)) (= (type $generated@@66) $generated@@73)) (= (type $generated@@67) $generated@@73)))
(assert (distinct $generated@@44 $generated@@45 $generated@@46 $generated@@47 $generated@@48 $generated@@49 $generated@@50 $generated@@51 $generated@@52 $generated@@53 $generated@@54 $generated@@55 $generated@@56 $generated@@57 $generated@@58 $generated@@59 $generated@@60 $generated@@61 $generated@@62 $generated@@63 $generated@@64 $generated@@65 $generated@@66 $generated@@67)
)
(assert (forall (($generated@@77 T@U) ) (! (= (type ($generated@@76 $generated@@77)) $generated@@69)
 :pattern ( ($generated@@76 $generated@@77))
)))
(assert (= ($generated@@76 $generated@@44) $generated@@49))
(assert (= ($generated@@76 $generated@@45) $generated@@50))
(assert (= ($generated@@76 $generated@@46) $generated@@51))
(assert (= ($generated@@76 $generated@@47) $generated@@52))
(assert (= ($generated@@76 $generated@@48) $generated@@53))
(assert  (and (and (and (and (and (and (and (and (and (and (and (and (and (forall (($generated@@89 T@T) ($generated@@90 T@T) ) (= ($generated@@1 ($generated@@80 $generated@@89 $generated@@90)) 11)) (forall (($generated@@91 T@T) ($generated@@92 T@T) ) (! (= ($generated@@83 ($generated@@80 $generated@@91 $generated@@92)) $generated@@91)
 :pattern ( ($generated@@80 $generated@@91 $generated@@92))
))) (forall (($generated@@93 T@T) ($generated@@94 T@T) ) (! (= ($generated@@84 ($generated@@80 $generated@@93 $generated@@94)) $generated@@94)
 :pattern ( ($generated@@80 $generated@@93 $generated@@94))
))) (forall (($generated@@95 T@U) ($generated@@96 T@U) ) (! (let (($generated@@97 ($generated@@84 (type $generated@@95))))
(= (type ($generated@@85 $generated@@95 $generated@@96)) $generated@@97))
 :pattern ( ($generated@@85 $generated@@95 $generated@@96))
))) (forall (($generated@@98 T@U) ($generated@@99 T@U) ($generated@@100 T@U) ) (! (let (($generated@@101 (type $generated@@100)))
(let (($generated@@102 (type $generated@@99)))
(= (type ($generated@@86 $generated@@98 $generated@@99 $generated@@100)) ($generated@@80 $generated@@102 $generated@@101))))
 :pattern ( ($generated@@86 $generated@@98 $generated@@99 $generated@@100))
))) (forall (($generated@@103 T@U) ($generated@@104 T@U) ($generated@@105 T@U) ) (! (let (($generated@@106 ($generated@@84 (type $generated@@103))))
 (=> (= (type $generated@@105) $generated@@106) (= ($generated@@85 ($generated@@86 $generated@@103 $generated@@104 $generated@@105) $generated@@104) $generated@@105)))
 :weight 0
))) (and (forall (($generated@@107 T@U) ($generated@@108 T@U) ($generated@@109 T@U) ($generated@@110 T@U) ) (!  (or (= $generated@@109 $generated@@110) (= ($generated@@85 ($generated@@86 $generated@@108 $generated@@109 $generated@@107) $generated@@110) ($generated@@85 $generated@@108 $generated@@110)))
 :weight 0
)) (forall (($generated@@111 T@U) ($generated@@112 T@U) ($generated@@113 T@U) ($generated@@114 T@U) ) (!  (or true (= ($generated@@85 ($generated@@86 $generated@@112 $generated@@113 $generated@@111) $generated@@114) ($generated@@85 $generated@@112 $generated@@114)))
 :weight 0
)))) (= ($generated@@1 $generated@@81) 12)) (forall (($generated@@115 T@U) ($generated@@116 T@U) ) (! (let (($generated@@117 ($generated@@71 (type $generated@@116))))
(= (type ($generated@@87 $generated@@115 $generated@@116)) $generated@@117))
 :pattern ( ($generated@@87 $generated@@115 $generated@@116))
))) (= ($generated@@1 $generated@@82) 13)) (forall (($generated@@118 T@U) ($generated@@119 T@U) ($generated@@120 T@U) ) (! (= (type ($generated@@88 $generated@@118 $generated@@119 $generated@@120)) $generated@@82)
 :pattern ( ($generated@@88 $generated@@118 $generated@@119 $generated@@120))
))) (forall (($generated@@121 T@U) ($generated@@122 T@U) ($generated@@123 T@U) ) (! (let (($generated@@124 ($generated@@71 (type $generated@@122))))
 (=> (= (type $generated@@123) $generated@@124) (= ($generated@@87 ($generated@@88 $generated@@121 $generated@@122 $generated@@123) $generated@@122) $generated@@123)))
 :weight 0
))) (and (forall (($generated@@125 T@U) ($generated@@126 T@U) ($generated@@127 T@U) ($generated@@128 T@U) ) (!  (or (= $generated@@127 $generated@@128) (= ($generated@@87 ($generated@@88 $generated@@126 $generated@@127 $generated@@125) $generated@@128) ($generated@@87 $generated@@126 $generated@@128)))
 :weight 0
)) (forall (($generated@@129 T@U) ($generated@@130 T@U) ($generated@@131 T@U) ($generated@@132 T@U) ) (!  (or true (= ($generated@@87 ($generated@@88 $generated@@130 $generated@@131 $generated@@129) $generated@@132) ($generated@@87 $generated@@130 $generated@@132)))
 :weight 0
)))) (forall (($generated@@133 Int) ) (! (= (type ($generated@@79 $generated@@133)) $generated@@68)
 :pattern ( ($generated@@79 $generated@@133))
))))
(assert (forall (($generated@@134 T@U) ($generated@@135 T@U) ) (!  (=> (and (= (type $generated@@134) $generated@@2) (= (type $generated@@135) ($generated@@80 $generated@@81 $generated@@82))) ($generated@@78 $generated@@134 ($generated@@79 0) $generated@@135))
 :pattern ( ($generated@@78 $generated@@134 ($generated@@79 0) $generated@@135))
)))
(assert (= (type $generated@@136) $generated@@68))
(assert (forall (($generated@@137 T@U) ($generated@@138 T@U) ) (!  (=> (and (= (type $generated@@137) $generated@@2) (= (type $generated@@138) ($generated@@80 $generated@@81 $generated@@82))) ($generated@@78 $generated@@137 $generated@@136 $generated@@138))
 :pattern ( ($generated@@78 $generated@@137 $generated@@136 $generated@@138))
)))
(assert (= (type $generated@@139) $generated@@68))
(assert (forall (($generated@@140 T@U) ($generated@@141 T@U) ) (!  (=> (and (= (type $generated@@140) $generated@@2) (= (type $generated@@141) ($generated@@80 $generated@@81 $generated@@82))) ($generated@@78 $generated@@140 $generated@@139 $generated@@141))
 :pattern ( ($generated@@78 $generated@@140 $generated@@139 $generated@@141))
)))
(assert (forall (($generated@@147 T@U) ) (! (let (($generated@@148 (type $generated@@147)))
(= (type ($generated@@146 $generated@@147)) $generated@@148))
 :pattern ( ($generated@@146 $generated@@147))
)))
(assert  (=> (<= 1 $generated@@142) (forall (($generated@@149 Int) ) (!  (=> (or ($generated@@145 ($generated@@144 $generated@@149)) (and (not (= 1 $generated@@142)) (< $generated@@149 0))) (= ($generated@@143 ($generated@@144 $generated@@149)) ($generated@@0 ($generated@@146 ($generated@@11 true)))))
 :weight 3
 :pattern ( ($generated@@143 ($generated@@144 $generated@@149)))
))))
(assert (forall (($generated@@151 T@U) ) (!  (=> (= (type $generated@@151) $generated@@2) ($generated@@150 $generated@@151 ($generated@@79 0)))
 :pattern ( ($generated@@150 $generated@@151 ($generated@@79 0)))
)))
(assert  (and (= ($generated@@1 $generated@@154) 14) (forall (($generated@@155 T@U) ($generated@@156 T@U) ) (! (= (type ($generated@@153 $generated@@155 $generated@@156)) $generated@@68)
 :pattern ( ($generated@@153 $generated@@155 $generated@@156))
))))
(assert (forall (($generated@@157 T@U) ($generated@@158 T@U) ($generated@@159 T@U) ) (!  (=> (and (and (and (= (type $generated@@157) $generated@@68) (= (type $generated@@158) $generated@@68)) (= (type $generated@@159) $generated@@154)) ($generated@@150 $generated@@159 ($generated@@153 $generated@@157 $generated@@158))) ($generated@@152 $generated@@159))
 :pattern ( ($generated@@152 $generated@@159) ($generated@@150 $generated@@159 ($generated@@153 $generated@@157 $generated@@158)))
)))
(assert  (and (and (= ($generated@@1 $generated@@163) 15) (forall (($generated@@164 T@U) ) (! (= (type ($generated@@161 $generated@@164)) $generated@@163)
 :pattern ( ($generated@@161 $generated@@164))
))) (forall (($generated@@165 T@U) ) (! (= (type ($generated@@162 $generated@@165)) $generated@@163)
 :pattern ( ($generated@@162 $generated@@165))
))))
(assert (forall (($generated@@166 T@U) ($generated@@167 T@U) ) (!  (=> (and (and (= (type $generated@@166) $generated@@154) (= (type $generated@@167) $generated@@154)) true) (= ($generated@@160 $generated@@166 $generated@@167)  (and (= ($generated@@161 $generated@@166) ($generated@@161 $generated@@167)) (= ($generated@@162 $generated@@166) ($generated@@162 $generated@@167)))))
 :pattern ( ($generated@@160 $generated@@166 $generated@@167))
)))
(assert (forall (($generated@@170 T@U) ) (! (= (type ($generated@@168 $generated@@170)) $generated@@68)
 :pattern ( ($generated@@168 $generated@@170))
)))
(assert (forall (($generated@@171 T@U) ($generated@@172 T@U) ) (!  (=> (and (and (= (type $generated@@171) ($generated@@80 $generated@@163 $generated@@2)) (= (type $generated@@172) $generated@@68)) ($generated@@150 $generated@@171 ($generated@@168 $generated@@172))) ($generated@@169 $generated@@171))
 :pattern ( ($generated@@150 $generated@@171 ($generated@@168 $generated@@172)))
)))
(assert  (and (and (and (and (and (and (and (forall (($generated@@179 T@T) ($generated@@180 T@T) ) (= ($generated@@1 ($generated@@175 $generated@@179 $generated@@180)) 16)) (forall (($generated@@181 T@T) ($generated@@182 T@T) ) (! (= ($generated@@176 ($generated@@175 $generated@@181 $generated@@182)) $generated@@181)
 :pattern ( ($generated@@175 $generated@@181 $generated@@182))
))) (forall (($generated@@183 T@T) ($generated@@184 T@T) ) (! (= ($generated@@177 ($generated@@175 $generated@@183 $generated@@184)) $generated@@184)
 :pattern ( ($generated@@175 $generated@@183 $generated@@184))
))) (forall (($generated@@185 T@U) ($generated@@186 T@U) ($generated@@187 T@U) ) (! (let (($generated@@188 ($generated@@177 (type $generated@@185))))
(= (type ($generated@@173 $generated@@185 $generated@@186 $generated@@187)) $generated@@188))
 :pattern ( ($generated@@173 $generated@@185 $generated@@186 $generated@@187))
))) (forall (($generated@@189 T@U) ($generated@@190 T@U) ($generated@@191 T@U) ($generated@@192 T@U) ) (! (let (($generated@@193 (type $generated@@192)))
(let (($generated@@194 (type $generated@@190)))
(= (type ($generated@@178 $generated@@189 $generated@@190 $generated@@191 $generated@@192)) ($generated@@175 $generated@@194 $generated@@193))))
 :pattern ( ($generated@@178 $generated@@189 $generated@@190 $generated@@191 $generated@@192))
))) (forall (($generated@@195 T@U) ($generated@@196 T@U) ($generated@@197 T@U) ($generated@@198 T@U) ) (! (let (($generated@@199 ($generated@@177 (type $generated@@195))))
 (=> (= (type $generated@@198) $generated@@199) (= ($generated@@173 ($generated@@178 $generated@@195 $generated@@196 $generated@@197 $generated@@198) $generated@@196 $generated@@197) $generated@@198)))
 :weight 0
))) (and (and (forall (($generated@@200 T@U) ($generated@@201 T@U) ($generated@@202 T@U) ($generated@@203 T@U) ($generated@@204 T@U) ($generated@@205 T@U) ) (!  (or (= $generated@@202 $generated@@204) (= ($generated@@173 ($generated@@178 $generated@@201 $generated@@202 $generated@@203 $generated@@200) $generated@@204 $generated@@205) ($generated@@173 $generated@@201 $generated@@204 $generated@@205)))
 :weight 0
)) (forall (($generated@@206 T@U) ($generated@@207 T@U) ($generated@@208 T@U) ($generated@@209 T@U) ($generated@@210 T@U) ($generated@@211 T@U) ) (!  (or (= $generated@@209 $generated@@211) (= ($generated@@173 ($generated@@178 $generated@@207 $generated@@208 $generated@@209 $generated@@206) $generated@@210 $generated@@211) ($generated@@173 $generated@@207 $generated@@210 $generated@@211)))
 :weight 0
))) (forall (($generated@@212 T@U) ($generated@@213 T@U) ($generated@@214 T@U) ($generated@@215 T@U) ($generated@@216 T@U) ($generated@@217 T@U) ) (!  (or true (= ($generated@@173 ($generated@@178 $generated@@213 $generated@@214 $generated@@215 $generated@@212) $generated@@216 $generated@@217) ($generated@@173 $generated@@213 $generated@@216 $generated@@217)))
 :weight 0
)))) (forall (($generated@@218 T@U) ($generated@@219 T@U) ($generated@@220 T@U) ($generated@@221 Bool) ) (! (= (type ($generated@@174 $generated@@218 $generated@@219 $generated@@220 $generated@@221)) ($generated@@175 $generated@@81 $generated@@4))
 :pattern ( ($generated@@174 $generated@@218 $generated@@219 $generated@@220 $generated@@221))
))))
(assert (forall (($generated@@222 T@U) ($generated@@223 T@U) ($generated@@224 T@U) ($generated@@225 Bool) ($generated@@226 T@U) ($generated@@227 T@U) ) (! (let (($generated@@228 ($generated@@71 (type $generated@@227))))
 (=> (and (and (and (and (= (type $generated@@222) $generated@@81) (= (type $generated@@223) ($generated@@80 $generated@@81 $generated@@82))) (= (type $generated@@224) ($generated@@70 $generated@@4))) (= (type $generated@@226) $generated@@81)) (= (type $generated@@227) ($generated@@70 $generated@@228))) (= ($generated@@0 ($generated@@173 ($generated@@174 $generated@@222 $generated@@223 $generated@@224 $generated@@225) $generated@@226 $generated@@227))  (=> (and (not (= $generated@@226 $generated@@222)) ($generated@@0 ($generated@@87 ($generated@@85 $generated@@223 $generated@@226) $generated@@224))) $generated@@225))))
 :pattern ( ($generated@@173 ($generated@@174 $generated@@222 $generated@@223 $generated@@224 $generated@@225) $generated@@226 $generated@@227))
)))
(assert (forall (($generated@@231 T@U) ($generated@@232 T@U) ) (! (= (type ($generated@@229 $generated@@231 $generated@@232)) $generated@@154)
 :pattern ( ($generated@@229 $generated@@231 $generated@@232))
)))
(assert (forall (($generated@@233 T@U) ($generated@@234 T@U) ($generated@@235 T@U) ($generated@@236 T@U) ) (!  (=> (and (and (and (= (type $generated@@233) $generated@@68) (= (type $generated@@234) $generated@@68)) (= (type $generated@@235) $generated@@163)) (= (type $generated@@236) $generated@@163)) (= ($generated@@150 ($generated@@229 $generated@@235 $generated@@236) ($generated@@153 $generated@@233 $generated@@234))  (and ($generated@@230 $generated@@235 $generated@@233) ($generated@@230 $generated@@236 $generated@@234))))
 :pattern ( ($generated@@150 ($generated@@229 $generated@@235 $generated@@236) ($generated@@153 $generated@@233 $generated@@234)))
)))
(assert  (=> (<= 1 $generated@@142) (forall (($generated@@237 Int) ) (!  (=> (or ($generated@@145 $generated@@237) (and (not (= 1 $generated@@142)) (< $generated@@237 0))) true)
 :pattern ( ($generated@@143 $generated@@237))
))))
(assert (forall (($generated@@238 T@U) ($generated@@239 T@U) ) (!  (=> (and (= (type $generated@@238) $generated@@154) (= (type $generated@@239) $generated@@154)) (= ($generated@@160 $generated@@238 $generated@@239) (= $generated@@238 $generated@@239)))
 :pattern ( ($generated@@160 $generated@@238 $generated@@239))
)))
(assert (forall (($generated@@241 T@U) ) (! (= (type ($generated@@240 $generated@@241)) $generated@@68)
 :pattern ( ($generated@@240 $generated@@241))
)))
(assert (forall (($generated@@242 T@U) ($generated@@243 T@U) ) (!  (=> (and (= (type $generated@@242) ($generated@@80 $generated@@163 $generated@@4)) (= (type $generated@@243) $generated@@68)) (= ($generated@@150 $generated@@242 ($generated@@240 $generated@@243)) (forall (($generated@@244 T@U) ) (!  (=> (and (= (type $generated@@244) $generated@@163) ($generated@@0 ($generated@@85 $generated@@242 $generated@@244))) ($generated@@230 $generated@@244 $generated@@243))
 :pattern ( ($generated@@85 $generated@@242 $generated@@244))
))))
 :pattern ( ($generated@@150 $generated@@242 ($generated@@240 $generated@@243)))
)))
(assert (forall (($generated@@246 T@U) ) (! (= (type ($generated@@245 $generated@@246)) $generated@@68)
 :pattern ( ($generated@@245 $generated@@246))
)))
(assert (forall (($generated@@247 T@U) ($generated@@248 T@U) ) (!  (=> (and (= (type $generated@@247) ($generated@@80 $generated@@163 $generated@@4)) (= (type $generated@@248) $generated@@68)) (= ($generated@@150 $generated@@247 ($generated@@245 $generated@@248)) (forall (($generated@@249 T@U) ) (!  (=> (and (= (type $generated@@249) $generated@@163) ($generated@@0 ($generated@@85 $generated@@247 $generated@@249))) ($generated@@230 $generated@@249 $generated@@248))
 :pattern ( ($generated@@85 $generated@@247 $generated@@249))
))))
 :pattern ( ($generated@@150 $generated@@247 ($generated@@245 $generated@@248)))
)))
(assert (forall (($generated@@250 T@U) ) (!  (=> (= (type $generated@@250) $generated@@2) (= ($generated@@150 $generated@@250 $generated@@139) (< ($generated $generated@@250) 0)))
 :pattern ( ($generated@@150 $generated@@250 $generated@@139))
)))
(assert (forall (($generated@@251 Int) ) (! (= ($generated@@144 $generated@@251) $generated@@251)
 :pattern ( ($generated@@144 $generated@@251))
)))
(assert (forall (($generated@@252 T@U) ) (! (= ($generated@@146 $generated@@252) $generated@@252)
 :pattern ( ($generated@@146 $generated@@252))
)))
(assert (forall (($generated@@255 T@U) ($generated@@256 T@U) ($generated@@257 T@U) ($generated@@258 T@U) ($generated@@259 T@U) ) (!  (=> (and (and (and (and (and (= (type $generated@@255) $generated@@68) (= (type $generated@@256) $generated@@68)) (= (type $generated@@257) $generated@@163)) (= (type $generated@@258) $generated@@163)) (= (type $generated@@259) ($generated@@80 $generated@@81 $generated@@82))) ($generated@@253 $generated@@259)) (= ($generated@@78 ($generated@@229 $generated@@257 $generated@@258) ($generated@@153 $generated@@255 $generated@@256) $generated@@259)  (and ($generated@@254 $generated@@257 $generated@@255 $generated@@259) ($generated@@254 $generated@@258 $generated@@256 $generated@@259))))
 :pattern ( ($generated@@78 ($generated@@229 $generated@@257 $generated@@258) ($generated@@153 $generated@@255 $generated@@256) $generated@@259))
)))
(assert (forall (($generated@@261 T@U) ) (! (= (type ($generated@@260 $generated@@261)) $generated@@72)
 :pattern ( ($generated@@260 $generated@@261))
)))
(assert (forall (($generated@@262 T@U) ) (!  (=> (= (type $generated@@262) $generated@@154) (= ($generated@@152 $generated@@262) (= ($generated@@260 $generated@@262) $generated@@62)))
 :pattern ( ($generated@@152 $generated@@262))
)))
(assert  (=> (<= 1 $generated@@142) (forall (($generated@@265 Int) ) (!  (=> (or ($generated@@264 $generated@@265) (and (not (= 1 $generated@@142)) (<= ($generated@@144 0) $generated@@265))) (= ($generated@@263 $generated@@265) ($generated@@0 ($generated@@146 ($generated@@11 true)))))
 :pattern ( ($generated@@263 $generated@@265))
))))
(assert (forall (($generated@@266 T@U) ) (!  (=> (and (= (type $generated@@266) $generated@@154) ($generated@@152 $generated@@266)) (exists (($generated@@267 T@U) ($generated@@268 T@U) ) (!  (and (and (= (type $generated@@267) $generated@@163) (= (type $generated@@268) $generated@@163)) (= $generated@@266 ($generated@@229 $generated@@267 $generated@@268)))
 :no-pattern (type $generated@@267)
 :no-pattern (type $generated@@268)
 :no-pattern ($generated $generated@@267)
 :no-pattern ($generated@@0 $generated@@267)
 :no-pattern ($generated $generated@@268)
 :no-pattern ($generated@@0 $generated@@268)
)))
 :pattern ( ($generated@@152 $generated@@266))
)))
(assert  (and (and (forall (($generated@@273 T@T) ) (= ($generated@@1 ($generated@@271 $generated@@273)) 17)) (forall (($generated@@274 T@T) ) (! (= ($generated@@272 ($generated@@271 $generated@@274)) $generated@@274)
 :pattern ( ($generated@@271 $generated@@274))
))) (forall (($generated@@275 T@T) ) (! (= (type ($generated@@269 $generated@@275)) ($generated@@271 $generated@@275))
 :pattern ( ($generated@@269 $generated@@275))
))))
(assert (forall (($generated@@276 T@T) ) (! (= ($generated@@270 ($generated@@269 $generated@@276)) 0)
 :pattern ( ($generated@@269 $generated@@276))
)))
(assert (forall (($generated@@277 T@U) ) (!  (=> (= (type $generated@@277) $generated@@2) (= ($generated@@150 $generated@@277 $generated@@136) (<= ($generated@@144 0) ($generated $generated@@277))))
 :pattern ( ($generated@@150 $generated@@277 $generated@@136))
)))
(assert (forall (($generated@@279 T@U) ) (! (= (type ($generated@@278 $generated@@279)) $generated@@163)
 :pattern ( ($generated@@278 $generated@@279))
)))
(assert (forall (($generated@@280 T@U) ($generated@@281 T@U) ($generated@@282 T@U) ) (!  (=> (and (= (type $generated@@281) $generated@@68) (= (type $generated@@282) ($generated@@80 $generated@@81 $generated@@82))) (= ($generated@@254 ($generated@@278 $generated@@280) $generated@@281 $generated@@282) ($generated@@78 $generated@@280 $generated@@281 $generated@@282)))
 :pattern ( ($generated@@254 ($generated@@278 $generated@@280) $generated@@281 $generated@@282))
)))
(assert (forall (($generated@@285 T@T) ) (! (= (type ($generated@@284 $generated@@285)) ($generated@@80 $generated@@285 $generated@@2))
 :pattern ( ($generated@@284 $generated@@285))
)))
(assert (forall (($generated@@286 T@U) ) (! (let (($generated@@287 ($generated@@83 (type $generated@@286))))
 (=> (= (type $generated@@286) ($generated@@80 $generated@@287 $generated@@2)) (and (= (= ($generated@@283 $generated@@286) 0) (= $generated@@286 ($generated@@284 $generated@@287))) (=> (not (= ($generated@@283 $generated@@286) 0)) (exists (($generated@@288 T@U) ) (!  (and (= (type $generated@@288) $generated@@287) (< 0 ($generated ($generated@@85 $generated@@286 $generated@@288))))
 :no-pattern (type $generated@@288)
 :no-pattern ($generated $generated@@288)
 :no-pattern ($generated@@0 $generated@@288)
))))))
 :pattern ( ($generated@@283 $generated@@286))
)))
(assert  (and (and (and (and (forall (($generated@@294 T@T) ($generated@@295 T@T) ) (= ($generated@@1 ($generated@@291 $generated@@294 $generated@@295)) 18)) (forall (($generated@@296 T@T) ($generated@@297 T@T) ) (! (= ($generated@@292 ($generated@@291 $generated@@296 $generated@@297)) $generated@@296)
 :pattern ( ($generated@@291 $generated@@296 $generated@@297))
))) (forall (($generated@@298 T@T) ($generated@@299 T@T) ) (! (= ($generated@@293 ($generated@@291 $generated@@298 $generated@@299)) $generated@@299)
 :pattern ( ($generated@@291 $generated@@298 $generated@@299))
))) (forall (($generated@@300 T@U) ) (! (let (($generated@@301 ($generated@@292 (type $generated@@300))))
(= (type ($generated@@289 $generated@@300)) ($generated@@80 $generated@@301 $generated@@4)))
 :pattern ( ($generated@@289 $generated@@300))
))) (forall (($generated@@302 T@T) ($generated@@303 T@T) ) (! (= (type ($generated@@290 $generated@@302 $generated@@303)) ($generated@@291 $generated@@302 $generated@@303))
 :pattern ( ($generated@@290 $generated@@302 $generated@@303))
))))
(assert (forall (($generated@@304 T@U) ($generated@@305 T@T) ) (! (let (($generated@@306 (type $generated@@304)))
 (not ($generated@@0 ($generated@@85 ($generated@@289 ($generated@@290 $generated@@306 $generated@@305)) $generated@@304))))
 :pattern ( (let (($generated@@306 (type $generated@@304)))
($generated@@85 ($generated@@289 ($generated@@290 $generated@@306 $generated@@305)) $generated@@304)))
)))
(assert  (and (and (and (and (forall (($generated@@312 T@T) ($generated@@313 T@T) ) (= ($generated@@1 ($generated@@309 $generated@@312 $generated@@313)) 19)) (forall (($generated@@314 T@T) ($generated@@315 T@T) ) (! (= ($generated@@310 ($generated@@309 $generated@@314 $generated@@315)) $generated@@314)
 :pattern ( ($generated@@309 $generated@@314 $generated@@315))
))) (forall (($generated@@316 T@T) ($generated@@317 T@T) ) (! (= ($generated@@311 ($generated@@309 $generated@@316 $generated@@317)) $generated@@317)
 :pattern ( ($generated@@309 $generated@@316 $generated@@317))
))) (forall (($generated@@318 T@U) ) (! (let (($generated@@319 ($generated@@310 (type $generated@@318))))
(= (type ($generated@@307 $generated@@318)) ($generated@@80 $generated@@319 $generated@@4)))
 :pattern ( ($generated@@307 $generated@@318))
))) (forall (($generated@@320 T@T) ($generated@@321 T@T) ) (! (= (type ($generated@@308 $generated@@320 $generated@@321)) ($generated@@309 $generated@@320 $generated@@321))
 :pattern ( ($generated@@308 $generated@@320 $generated@@321))
))))
(assert (forall (($generated@@322 T@U) ($generated@@323 T@T) ) (! (let (($generated@@324 (type $generated@@322)))
 (not ($generated@@0 ($generated@@85 ($generated@@307 ($generated@@308 $generated@@324 $generated@@323)) $generated@@322))))
 :pattern ( (let (($generated@@324 (type $generated@@322)))
($generated@@85 ($generated@@307 ($generated@@308 $generated@@324 $generated@@323)) $generated@@322)))
)))
(assert  (=> (<= 1 $generated@@142) (forall (($generated@@325 Int) ) (!  (=> (or ($generated@@264 ($generated@@144 $generated@@325)) (and (not (= 1 $generated@@142)) (<= ($generated@@144 0) $generated@@325))) (= ($generated@@263 ($generated@@144 $generated@@325)) ($generated@@0 ($generated@@146 ($generated@@11 true)))))
 :weight 3
 :pattern ( ($generated@@263 ($generated@@144 $generated@@325)))
))))
(assert (forall (($generated@@326 T@U) ) (! (let (($generated@@327 ($generated@@83 (type $generated@@326))))
 (=> (= (type $generated@@326) ($generated@@80 $generated@@327 $generated@@2)) (= ($generated@@169 $generated@@326) (forall (($generated@@328 T@U) ) (!  (=> (= (type $generated@@328) $generated@@327) (and (<= 0 ($generated ($generated@@85 $generated@@326 $generated@@328))) (<= ($generated ($generated@@85 $generated@@326 $generated@@328)) ($generated@@283 $generated@@326))))
 :pattern ( ($generated@@85 $generated@@326 $generated@@328))
)))))
 :pattern ( ($generated@@169 $generated@@326))
)))
(assert (forall (($generated@@330 T@T) ($generated@@331 T@U) ) (! (= (type ($generated@@329 $generated@@330 $generated@@331)) $generated@@330)
 :pattern ( ($generated@@329 $generated@@330 $generated@@331))
)))
(assert (forall (($generated@@332 T@U) ) (!  (=> (and (= (type $generated@@332) $generated@@163) ($generated@@230 $generated@@332 $generated@@136)) (and (= ($generated@@278 ($generated@@329 $generated@@2 $generated@@332)) $generated@@332) ($generated@@150 ($generated@@329 $generated@@2 $generated@@332) $generated@@136)))
 :pattern ( ($generated@@230 $generated@@332 $generated@@136))
)))
(assert (forall (($generated@@333 T@U) ) (!  (=> (and (= (type $generated@@333) $generated@@163) ($generated@@230 $generated@@333 $generated@@139)) (and (= ($generated@@278 ($generated@@329 $generated@@2 $generated@@333)) $generated@@333) ($generated@@150 ($generated@@329 $generated@@2 $generated@@333) $generated@@139)))
 :pattern ( ($generated@@230 $generated@@333 $generated@@139))
)))
(assert (forall (($generated@@334 T@U) ) (! (let (($generated@@335 ($generated@@293 (type $generated@@334))))
(let (($generated@@336 ($generated@@292 (type $generated@@334))))
 (=> (= (type $generated@@334) ($generated@@291 $generated@@336 $generated@@335)) (or (= $generated@@334 ($generated@@290 $generated@@336 $generated@@335)) (exists (($generated@@337 T@U) ) (!  (and (= (type $generated@@337) $generated@@336) ($generated@@0 ($generated@@85 ($generated@@289 $generated@@334) $generated@@337)))
 :no-pattern (type $generated@@337)
 :no-pattern ($generated $generated@@337)
 :no-pattern ($generated@@0 $generated@@337)
))))))
 :pattern ( ($generated@@289 $generated@@334))
)))
(assert (forall (($generated@@339 T@U) ) (! (let (($generated@@340 ($generated@@293 (type $generated@@339))))
(= (type ($generated@@338 $generated@@339)) ($generated@@80 $generated@@340 $generated@@4)))
 :pattern ( ($generated@@338 $generated@@339))
)))
(assert (forall (($generated@@341 T@U) ) (! (let (($generated@@342 ($generated@@293 (type $generated@@341))))
(let (($generated@@343 ($generated@@292 (type $generated@@341))))
 (=> (= (type $generated@@341) ($generated@@291 $generated@@343 $generated@@342)) (or (= $generated@@341 ($generated@@290 $generated@@343 $generated@@342)) (exists (($generated@@344 T@U) ) (!  (and (= (type $generated@@344) $generated@@342) ($generated@@0 ($generated@@85 ($generated@@338 $generated@@341) $generated@@344)))
 :no-pattern (type $generated@@344)
 :no-pattern ($generated $generated@@344)
 :no-pattern ($generated@@0 $generated@@344)
))))))
 :pattern ( ($generated@@338 $generated@@341))
)))
(assert (forall (($generated@@345 T@U) ) (! (let (($generated@@346 ($generated@@311 (type $generated@@345))))
(let (($generated@@347 ($generated@@310 (type $generated@@345))))
 (=> (= (type $generated@@345) ($generated@@309 $generated@@347 $generated@@346)) (or (= $generated@@345 ($generated@@308 $generated@@347 $generated@@346)) (exists (($generated@@348 T@U) ) (!  (and (= (type $generated@@348) $generated@@347) ($generated@@0 ($generated@@85 ($generated@@307 $generated@@345) $generated@@348)))
 :no-pattern (type $generated@@348)
 :no-pattern ($generated $generated@@348)
 :no-pattern ($generated@@0 $generated@@348)
))))))
 :pattern ( ($generated@@307 $generated@@345))
)))
(assert (forall (($generated@@350 T@U) ) (! (let (($generated@@351 ($generated@@311 (type $generated@@350))))
(= (type ($generated@@349 $generated@@350)) ($generated@@80 $generated@@351 $generated@@4)))
 :pattern ( ($generated@@349 $generated@@350))
)))
(assert (forall (($generated@@352 T@U) ) (! (let (($generated@@353 ($generated@@311 (type $generated@@352))))
(let (($generated@@354 ($generated@@310 (type $generated@@352))))
 (=> (= (type $generated@@352) ($generated@@309 $generated@@354 $generated@@353)) (or (= $generated@@352 ($generated@@308 $generated@@354 $generated@@353)) (exists (($generated@@355 T@U) ) (!  (and (= (type $generated@@355) $generated@@353) ($generated@@0 ($generated@@85 ($generated@@349 $generated@@352) $generated@@355)))
 :no-pattern (type $generated@@355)
 :no-pattern ($generated $generated@@355)
 :no-pattern ($generated@@0 $generated@@355)
))))))
 :pattern ( ($generated@@349 $generated@@352))
)))
(assert (forall (($generated@@356 T@U) ($generated@@357 T@U) ) (!  (=> (and (= (type $generated@@356) ($generated@@80 $generated@@163 $generated@@2)) (= (type $generated@@357) $generated@@68)) (= ($generated@@150 $generated@@356 ($generated@@168 $generated@@357)) (forall (($generated@@358 T@U) ) (!  (=> (and (= (type $generated@@358) $generated@@163) (< 0 ($generated ($generated@@85 $generated@@356 $generated@@358)))) ($generated@@230 $generated@@358 $generated@@357))
 :pattern ( ($generated@@85 $generated@@356 $generated@@358))
))))
 :pattern ( ($generated@@150 $generated@@356 ($generated@@168 $generated@@357)))
)))
(assert (forall (($generated@@359 T@U) ($generated@@360 T@U) ($generated@@361 T@U) ) (!  (=> (and (and (= (type $generated@@359) ($generated@@80 $generated@@163 $generated@@4)) (= (type $generated@@360) $generated@@68)) (= (type $generated@@361) ($generated@@80 $generated@@81 $generated@@82))) (= ($generated@@78 $generated@@359 ($generated@@240 $generated@@360) $generated@@361) (forall (($generated@@362 T@U) ) (!  (=> (and (= (type $generated@@362) $generated@@163) ($generated@@0 ($generated@@85 $generated@@359 $generated@@362))) ($generated@@254 $generated@@362 $generated@@360 $generated@@361))
 :pattern ( ($generated@@85 $generated@@359 $generated@@362))
))))
 :pattern ( ($generated@@78 $generated@@359 ($generated@@240 $generated@@360) $generated@@361))
)))
(assert (forall (($generated@@363 T@U) ($generated@@364 T@U) ($generated@@365 T@U) ) (!  (=> (and (and (= (type $generated@@363) ($generated@@80 $generated@@163 $generated@@4)) (= (type $generated@@364) $generated@@68)) (= (type $generated@@365) ($generated@@80 $generated@@81 $generated@@82))) (= ($generated@@78 $generated@@363 ($generated@@245 $generated@@364) $generated@@365) (forall (($generated@@366 T@U) ) (!  (=> (and (= (type $generated@@366) $generated@@163) ($generated@@0 ($generated@@85 $generated@@363 $generated@@366))) ($generated@@254 $generated@@366 $generated@@364 $generated@@365))
 :pattern ( ($generated@@85 $generated@@363 $generated@@366))
))))
 :pattern ( ($generated@@78 $generated@@363 ($generated@@245 $generated@@364) $generated@@365))
)))
(assert (forall (($generated@@367 T@U) ) (! (let (($generated@@368 (type $generated@@367)))
(= ($generated ($generated@@85 ($generated@@284 $generated@@368) $generated@@367)) 0))
 :pattern ( (let (($generated@@368 (type $generated@@367)))
($generated@@85 ($generated@@284 $generated@@368) $generated@@367)))
)))
(assert  (=> (<= 1 $generated@@142) (forall (($generated@@369 Int) ) (!  (=> (or ($generated@@264 $generated@@369) (and (not (= 1 $generated@@142)) (<= ($generated@@144 0) $generated@@369))) true)
 :pattern ( ($generated@@263 $generated@@369))
))))
(assert  (and (forall (($generated@@372 T@U) ) (! (= (type ($generated@@370 $generated@@372)) ($generated@@80 $generated@@163 $generated@@4))
 :pattern ( ($generated@@370 $generated@@372))
)) (forall (($generated@@373 T@U) ) (! (let (($generated@@374 ($generated@@293 (type $generated@@373))))
(let (($generated@@375 ($generated@@292 (type $generated@@373))))
(= (type ($generated@@371 $generated@@373)) ($generated@@80 $generated@@375 $generated@@374))))
 :pattern ( ($generated@@371 $generated@@373))
))))
(assert (forall (($generated@@376 T@U) ($generated@@377 T@U) ) (!  (=> (and (= (type $generated@@376) ($generated@@291 $generated@@163 $generated@@163)) (= (type $generated@@377) $generated@@163)) (= ($generated@@0 ($generated@@85 ($generated@@370 $generated@@376) $generated@@377))  (and ($generated@@0 ($generated@@85 ($generated@@289 $generated@@376) ($generated@@161 ($generated@@329 $generated@@154 $generated@@377)))) (= ($generated@@85 ($generated@@371 $generated@@376) ($generated@@161 ($generated@@329 $generated@@154 $generated@@377))) ($generated@@162 ($generated@@329 $generated@@154 $generated@@377))))))
 :pattern ( ($generated@@85 ($generated@@370 $generated@@376) $generated@@377))
)))
(assert  (and (forall (($generated@@380 T@U) ) (! (= (type ($generated@@378 $generated@@380)) ($generated@@80 $generated@@163 $generated@@4))
 :pattern ( ($generated@@378 $generated@@380))
)) (forall (($generated@@381 T@U) ) (! (let (($generated@@382 ($generated@@311 (type $generated@@381))))
(let (($generated@@383 ($generated@@310 (type $generated@@381))))
(= (type ($generated@@379 $generated@@381)) ($generated@@80 $generated@@383 $generated@@382))))
 :pattern ( ($generated@@379 $generated@@381))
))))
(assert (forall (($generated@@384 T@U) ($generated@@385 T@U) ) (!  (=> (and (= (type $generated@@384) ($generated@@309 $generated@@163 $generated@@163)) (= (type $generated@@385) $generated@@163)) (= ($generated@@0 ($generated@@85 ($generated@@378 $generated@@384) $generated@@385))  (and ($generated@@0 ($generated@@85 ($generated@@307 $generated@@384) ($generated@@161 ($generated@@329 $generated@@154 $generated@@385)))) (= ($generated@@85 ($generated@@379 $generated@@384) ($generated@@161 ($generated@@329 $generated@@154 $generated@@385))) ($generated@@162 ($generated@@329 $generated@@154 $generated@@385))))))
 :pattern ( ($generated@@85 ($generated@@378 $generated@@384) $generated@@385))
)))
(assert (forall (($generated@@386 T@U) ($generated@@387 T@U) ) (! (let (($generated@@388 (type $generated@@387)))
(let (($generated@@389 ($generated@@292 (type $generated@@386))))
 (=> (= (type $generated@@386) ($generated@@291 $generated@@389 $generated@@388)) (= ($generated@@0 ($generated@@85 ($generated@@338 $generated@@386) $generated@@387)) (exists (($generated@@390 T@U) ) (!  (and (= (type $generated@@390) $generated@@389) (and ($generated@@0 ($generated@@85 ($generated@@289 $generated@@386) $generated@@390)) (= $generated@@387 ($generated@@85 ($generated@@371 $generated@@386) $generated@@390))))
 :pattern ( ($generated@@85 ($generated@@289 $generated@@386) $generated@@390))
 :pattern ( ($generated@@85 ($generated@@371 $generated@@386) $generated@@390))
))))))
 :pattern ( ($generated@@85 ($generated@@338 $generated@@386) $generated@@387))
)))
(assert (forall (($generated@@391 T@U) ($generated@@392 T@U) ) (! (let (($generated@@393 (type $generated@@392)))
(let (($generated@@394 ($generated@@310 (type $generated@@391))))
 (=> (= (type $generated@@391) ($generated@@309 $generated@@394 $generated@@393)) (= ($generated@@0 ($generated@@85 ($generated@@349 $generated@@391) $generated@@392)) (exists (($generated@@395 T@U) ) (!  (and (= (type $generated@@395) $generated@@394) (and ($generated@@0 ($generated@@85 ($generated@@307 $generated@@391) $generated@@395)) (= $generated@@392 ($generated@@85 ($generated@@379 $generated@@391) $generated@@395))))
 :pattern ( ($generated@@85 ($generated@@307 $generated@@391) $generated@@395))
 :pattern ( ($generated@@85 ($generated@@379 $generated@@391) $generated@@395))
))))))
 :pattern ( ($generated@@85 ($generated@@349 $generated@@391) $generated@@392))
)))
(assert (forall (($generated@@397 T@U) ($generated@@398 T@U) ) (! (= (type ($generated@@396 $generated@@397 $generated@@398)) $generated@@68)
 :pattern ( ($generated@@396 $generated@@397 $generated@@398))
)))
(assert (forall (($generated@@399 T@U) ($generated@@400 T@U) ($generated@@401 T@U) ($generated@@402 T@U) ) (!  (=> (and (and (and (= (type $generated@@399) ($generated@@291 $generated@@163 $generated@@163)) (= (type $generated@@400) $generated@@68)) (= (type $generated@@401) $generated@@68)) (= (type $generated@@402) ($generated@@80 $generated@@81 $generated@@82))) (= ($generated@@78 $generated@@399 ($generated@@396 $generated@@400 $generated@@401) $generated@@402) (forall (($generated@@403 T@U) ) (!  (=> (and (= (type $generated@@403) $generated@@163) ($generated@@0 ($generated@@85 ($generated@@289 $generated@@399) $generated@@403))) (and ($generated@@254 ($generated@@85 ($generated@@371 $generated@@399) $generated@@403) $generated@@401 $generated@@402) ($generated@@254 $generated@@403 $generated@@400 $generated@@402)))
 :pattern ( ($generated@@85 ($generated@@371 $generated@@399) $generated@@403))
 :pattern ( ($generated@@85 ($generated@@289 $generated@@399) $generated@@403))
))))
 :pattern ( ($generated@@78 $generated@@399 ($generated@@396 $generated@@400 $generated@@401) $generated@@402))
)))
(assert (forall (($generated@@405 T@U) ($generated@@406 T@U) ) (! (= (type ($generated@@404 $generated@@405 $generated@@406)) $generated@@68)
 :pattern ( ($generated@@404 $generated@@405 $generated@@406))
)))
(assert (forall (($generated@@407 T@U) ($generated@@408 T@U) ($generated@@409 T@U) ($generated@@410 T@U) ) (!  (=> (and (and (and (= (type $generated@@407) ($generated@@309 $generated@@163 $generated@@163)) (= (type $generated@@408) $generated@@68)) (= (type $generated@@409) $generated@@68)) (= (type $generated@@410) ($generated@@80 $generated@@81 $generated@@82))) (= ($generated@@78 $generated@@407 ($generated@@404 $generated@@408 $generated@@409) $generated@@410) (forall (($generated@@411 T@U) ) (!  (=> (and (= (type $generated@@411) $generated@@163) ($generated@@0 ($generated@@85 ($generated@@307 $generated@@407) $generated@@411))) (and ($generated@@254 ($generated@@85 ($generated@@379 $generated@@407) $generated@@411) $generated@@409 $generated@@410) ($generated@@254 $generated@@411 $generated@@408 $generated@@410)))
 :pattern ( ($generated@@85 ($generated@@379 $generated@@407) $generated@@411))
 :pattern ( ($generated@@85 ($generated@@307 $generated@@407) $generated@@411))
))))
 :pattern ( ($generated@@78 $generated@@407 ($generated@@404 $generated@@408 $generated@@409) $generated@@410))
)))
(assert (forall (($generated@@413 T@T) ) (! (= (type ($generated@@412 $generated@@413)) ($generated@@80 $generated@@413 $generated@@4))
 :pattern ( ($generated@@412 $generated@@413))
)))
(assert (forall (($generated@@414 T@U) ) (! (let (($generated@@415 ($generated@@311 (type $generated@@414))))
(let (($generated@@416 ($generated@@310 (type $generated@@414))))
 (=> (= (type $generated@@414) ($generated@@309 $generated@@416 $generated@@415)) (= (= $generated@@414 ($generated@@308 $generated@@416 $generated@@415)) (= ($generated@@307 $generated@@414) ($generated@@412 $generated@@416))))))
 :pattern ( ($generated@@307 $generated@@414))
)))
(assert (forall (($generated@@417 T@U) ) (! (let (($generated@@418 ($generated@@311 (type $generated@@417))))
(let (($generated@@419 ($generated@@310 (type $generated@@417))))
 (=> (= (type $generated@@417) ($generated@@309 $generated@@419 $generated@@418)) (= (= $generated@@417 ($generated@@308 $generated@@419 $generated@@418)) (= ($generated@@349 $generated@@417) ($generated@@412 $generated@@418))))))
 :pattern ( ($generated@@349 $generated@@417))
)))
(assert (forall (($generated@@420 T@U) ) (! (let (($generated@@421 ($generated@@311 (type $generated@@420))))
(let (($generated@@422 ($generated@@310 (type $generated@@420))))
 (=> (= (type $generated@@420) ($generated@@309 $generated@@422 $generated@@421)) (= (= $generated@@420 ($generated@@308 $generated@@422 $generated@@421)) (= ($generated@@378 $generated@@420) ($generated@@412 $generated@@163))))))
 :pattern ( ($generated@@378 $generated@@420))
)))
(assert (forall (($generated@@423 T@U) ) (! (let (($generated@@424 ($generated@@293 (type $generated@@423))))
(let (($generated@@425 ($generated@@292 (type $generated@@423))))
 (=> (= (type $generated@@423) ($generated@@291 $generated@@425 $generated@@424)) (or (= $generated@@423 ($generated@@290 $generated@@425 $generated@@424)) (exists (($generated@@426 T@U) ($generated@@427 T@U) ) (!  (and (and (= (type $generated@@426) $generated@@163) (= (type $generated@@427) $generated@@163)) ($generated@@0 ($generated@@85 ($generated@@370 $generated@@423) ($generated@@278 ($generated@@229 $generated@@426 $generated@@427)))))
 :no-pattern (type $generated@@426)
 :no-pattern (type $generated@@427)
 :no-pattern ($generated $generated@@426)
 :no-pattern ($generated@@0 $generated@@426)
 :no-pattern ($generated $generated@@427)
 :no-pattern ($generated@@0 $generated@@427)
))))))
 :pattern ( ($generated@@370 $generated@@423))
)))
(assert (forall (($generated@@428 T@U) ) (! (let (($generated@@429 ($generated@@311 (type $generated@@428))))
(let (($generated@@430 ($generated@@310 (type $generated@@428))))
 (=> (= (type $generated@@428) ($generated@@309 $generated@@430 $generated@@429)) (or (= $generated@@428 ($generated@@308 $generated@@430 $generated@@429)) (exists (($generated@@431 T@U) ($generated@@432 T@U) ) (!  (and (and (= (type $generated@@431) $generated@@163) (= (type $generated@@432) $generated@@163)) ($generated@@0 ($generated@@85 ($generated@@378 $generated@@428) ($generated@@278 ($generated@@229 $generated@@431 $generated@@432)))))
 :no-pattern (type $generated@@431)
 :no-pattern (type $generated@@432)
 :no-pattern ($generated $generated@@431)
 :no-pattern ($generated@@0 $generated@@431)
 :no-pattern ($generated $generated@@432)
 :no-pattern ($generated@@0 $generated@@432)
))))))
 :pattern ( ($generated@@378 $generated@@428))
)))
(assert (forall (($generated@@433 T@U) ) (!  (=> (and (= (type $generated@@433) $generated@@163) ($generated@@230 $generated@@433 $generated@@46)) (and (= ($generated@@278 ($generated@@329 $generated@@2 $generated@@433)) $generated@@433) ($generated@@150 ($generated@@329 $generated@@2 $generated@@433) $generated@@46)))
 :pattern ( ($generated@@230 $generated@@433 $generated@@46))
)))
(assert (forall (($generated@@434 T@U) ) (!  (=> (and (= (type $generated@@434) $generated@@163) ($generated@@230 $generated@@434 $generated@@47)) (and (= ($generated@@278 ($generated@@329 $generated@@3 $generated@@434)) $generated@@434) ($generated@@150 ($generated@@329 $generated@@3 $generated@@434) $generated@@47)))
 :pattern ( ($generated@@230 $generated@@434 $generated@@47))
)))
(assert (forall (($generated@@435 T@U) ) (!  (=> (and (= (type $generated@@435) $generated@@163) ($generated@@230 $generated@@435 $generated@@44)) (and (= ($generated@@278 ($generated@@329 $generated@@4 $generated@@435)) $generated@@435) ($generated@@150 ($generated@@329 $generated@@4 $generated@@435) $generated@@44)))
 :pattern ( ($generated@@230 $generated@@435 $generated@@44))
)))
(assert (= ($generated@@1 $generated@@436) 20))
(assert (forall (($generated@@437 T@U) ) (!  (=> (and (= (type $generated@@437) $generated@@163) ($generated@@230 $generated@@437 $generated@@45)) (and (= ($generated@@278 ($generated@@329 $generated@@436 $generated@@437)) $generated@@437) ($generated@@150 ($generated@@329 $generated@@436 $generated@@437) $generated@@45)))
 :pattern ( ($generated@@230 $generated@@437 $generated@@45))
)))
(assert (forall (($generated@@438 T@U) ($generated@@439 T@U) ) (!  (=> (= (type $generated@@439) $generated@@68) (= ($generated@@230 ($generated@@278 $generated@@438) $generated@@439) ($generated@@150 $generated@@438 $generated@@439)))
 :pattern ( ($generated@@230 ($generated@@278 $generated@@438) $generated@@439))
)))
(assert (forall (($generated@@440 T@U) ) (! (let (($generated@@441 ($generated@@83 (type $generated@@440))))
 (=> (= (type $generated@@440) ($generated@@80 $generated@@441 $generated@@2)) (<= 0 ($generated@@283 $generated@@440))))
 :pattern ( ($generated@@283 $generated@@440))
)))
(assert (forall (($generated@@442 T@U) ) (! (let (($generated@@443 ($generated@@272 (type $generated@@442))))
 (=> (= (type $generated@@442) ($generated@@271 $generated@@443)) (<= 0 ($generated@@270 $generated@@442))))
 :pattern ( ($generated@@270 $generated@@442))
)))
(assert (forall (($generated@@445 T@U) ) (! (= (type ($generated@@444 $generated@@445)) $generated@@68)
 :pattern ( ($generated@@444 $generated@@445))
)))
(assert (forall (($generated@@446 T@U) ($generated@@447 T@U) ) (!  (=> (and (= (type $generated@@446) $generated@@68) (= (type $generated@@447) $generated@@68)) (= ($generated@@444 ($generated@@396 $generated@@446 $generated@@447)) $generated@@446))
 :pattern ( ($generated@@396 $generated@@446 $generated@@447))
)))
(assert (forall (($generated@@449 T@U) ) (! (= (type ($generated@@448 $generated@@449)) $generated@@68)
 :pattern ( ($generated@@448 $generated@@449))
)))
(assert (forall (($generated@@450 T@U) ($generated@@451 T@U) ) (!  (=> (and (= (type $generated@@450) $generated@@68) (= (type $generated@@451) $generated@@68)) (= ($generated@@448 ($generated@@396 $generated@@450 $generated@@451)) $generated@@451))
 :pattern ( ($generated@@396 $generated@@450 $generated@@451))
)))
(assert (forall (($generated@@452 T@U) ($generated@@453 T@U) ) (!  (=> (and (= (type $generated@@452) $generated@@68) (= (type $generated@@453) $generated@@68)) (= ($generated@@76 ($generated@@396 $generated@@452 $generated@@453)) $generated@@58))
 :pattern ( ($generated@@396 $generated@@452 $generated@@453))
)))
(assert (forall (($generated@@455 T@U) ) (! (= (type ($generated@@454 $generated@@455)) $generated@@68)
 :pattern ( ($generated@@454 $generated@@455))
)))
(assert (forall (($generated@@456 T@U) ($generated@@457 T@U) ) (!  (=> (and (= (type $generated@@456) $generated@@68) (= (type $generated@@457) $generated@@68)) (= ($generated@@454 ($generated@@404 $generated@@456 $generated@@457)) $generated@@456))
 :pattern ( ($generated@@404 $generated@@456 $generated@@457))
)))
(assert (forall (($generated@@459 T@U) ) (! (= (type ($generated@@458 $generated@@459)) $generated@@68)
 :pattern ( ($generated@@458 $generated@@459))
)))
(assert (forall (($generated@@460 T@U) ($generated@@461 T@U) ) (!  (=> (and (= (type $generated@@460) $generated@@68) (= (type $generated@@461) $generated@@68)) (= ($generated@@458 ($generated@@404 $generated@@460 $generated@@461)) $generated@@461))
 :pattern ( ($generated@@404 $generated@@460 $generated@@461))
)))
(assert (forall (($generated@@462 T@U) ($generated@@463 T@U) ) (!  (=> (and (= (type $generated@@462) $generated@@68) (= (type $generated@@463) $generated@@68)) (= ($generated@@76 ($generated@@404 $generated@@462 $generated@@463)) $generated@@59))
 :pattern ( ($generated@@404 $generated@@462 $generated@@463))
)))
(assert (forall (($generated@@464 T@U) ($generated@@465 T@U) ) (!  (=> (and (= (type $generated@@464) $generated@@163) (= (type $generated@@465) $generated@@163)) (= ($generated@@260 ($generated@@229 $generated@@464 $generated@@465)) $generated@@62))
 :pattern ( ($generated@@229 $generated@@464 $generated@@465))
)))
(assert (forall (($generated@@467 T@U) ) (! (= (type ($generated@@466 $generated@@467)) $generated@@68)
 :pattern ( ($generated@@466 $generated@@467))
)))
(assert (forall (($generated@@468 T@U) ($generated@@469 T@U) ) (!  (=> (and (= (type $generated@@468) $generated@@68) (= (type $generated@@469) $generated@@68)) (= ($generated@@466 ($generated@@153 $generated@@468 $generated@@469)) $generated@@468))
 :pattern ( ($generated@@153 $generated@@468 $generated@@469))
)))
(assert (forall (($generated@@471 T@U) ) (! (= (type ($generated@@470 $generated@@471)) $generated@@68)
 :pattern ( ($generated@@470 $generated@@471))
)))
(assert (forall (($generated@@472 T@U) ($generated@@473 T@U) ) (!  (=> (and (= (type $generated@@472) $generated@@68) (= (type $generated@@473) $generated@@68)) (= ($generated@@470 ($generated@@153 $generated@@472 $generated@@473)) $generated@@473))
 :pattern ( ($generated@@153 $generated@@472 $generated@@473))
)))
(assert (forall (($generated@@474 T@U) ($generated@@475 T@U) ) (!  (=> (and (= (type $generated@@474) $generated@@163) (= (type $generated@@475) $generated@@163)) (= ($generated@@161 ($generated@@229 $generated@@474 $generated@@475)) $generated@@474))
 :pattern ( ($generated@@229 $generated@@474 $generated@@475))
)))
(assert (forall (($generated@@476 T@U) ($generated@@477 T@U) ) (!  (=> (and (= (type $generated@@476) $generated@@163) (= (type $generated@@477) $generated@@163)) (= ($generated@@162 ($generated@@229 $generated@@476 $generated@@477)) $generated@@477))
 :pattern ( ($generated@@229 $generated@@476 $generated@@477))
)))
(assert  (and (forall (($generated@@480 T@U) ) (! (= (type ($generated@@478 $generated@@480)) $generated@@68)
 :pattern ( ($generated@@478 $generated@@480))
)) (forall (($generated@@481 T@U) ($generated@@482 Int) ) (! (let (($generated@@483 ($generated@@272 (type $generated@@481))))
(= (type ($generated@@479 $generated@@481 $generated@@482)) $generated@@483))
 :pattern ( ($generated@@479 $generated@@481 $generated@@482))
))))
(assert (forall (($generated@@484 T@U) ($generated@@485 T@U) ($generated@@486 T@U) ) (!  (=> (and (and (= (type $generated@@484) ($generated@@271 $generated@@163)) (= (type $generated@@485) $generated@@68)) (= (type $generated@@486) ($generated@@80 $generated@@81 $generated@@82))) (= ($generated@@78 $generated@@484 ($generated@@478 $generated@@485) $generated@@486) (forall (($generated@@487 Int) ) (!  (=> (and (<= 0 $generated@@487) (< $generated@@487 ($generated@@270 $generated@@484))) ($generated@@254 ($generated@@479 $generated@@484 $generated@@487) $generated@@485 $generated@@486))
 :pattern ( ($generated@@479 $generated@@484 $generated@@487))
))))
 :pattern ( ($generated@@78 $generated@@484 ($generated@@478 $generated@@485) $generated@@486))
)))
(assert (forall (($generated@@489 Int) ) (! (= ($generated@@488 ($generated@@79 $generated@@489)) $generated@@489)
 :pattern ( ($generated@@79 $generated@@489))
)))
(assert (forall (($generated@@491 T@U) ) (! (= (type ($generated@@490 $generated@@491)) $generated@@68)
 :pattern ( ($generated@@490 $generated@@491))
)))
(assert (forall (($generated@@492 T@U) ) (!  (=> (= (type $generated@@492) $generated@@68) (= ($generated@@490 ($generated@@240 $generated@@492)) $generated@@492))
 :pattern ( ($generated@@240 $generated@@492))
)))
(assert (forall (($generated@@493 T@U) ) (!  (=> (= (type $generated@@493) $generated@@68) (= ($generated@@76 ($generated@@240 $generated@@493)) $generated@@54))
 :pattern ( ($generated@@240 $generated@@493))
)))
(assert (forall (($generated@@495 T@U) ) (! (= (type ($generated@@494 $generated@@495)) $generated@@68)
 :pattern ( ($generated@@494 $generated@@495))
)))
(assert (forall (($generated@@496 T@U) ) (!  (=> (= (type $generated@@496) $generated@@68) (= ($generated@@494 ($generated@@245 $generated@@496)) $generated@@496))
 :pattern ( ($generated@@245 $generated@@496))
)))
(assert (forall (($generated@@497 T@U) ) (!  (=> (= (type $generated@@497) $generated@@68) (= ($generated@@76 ($generated@@245 $generated@@497)) $generated@@55))
 :pattern ( ($generated@@245 $generated@@497))
)))
(assert (forall (($generated@@499 T@U) ) (! (= (type ($generated@@498 $generated@@499)) $generated@@68)
 :pattern ( ($generated@@498 $generated@@499))
)))
(assert (forall (($generated@@500 T@U) ) (!  (=> (= (type $generated@@500) $generated@@68) (= ($generated@@498 ($generated@@168 $generated@@500)) $generated@@500))
 :pattern ( ($generated@@168 $generated@@500))
)))
(assert (forall (($generated@@501 T@U) ) (!  (=> (= (type $generated@@501) $generated@@68) (= ($generated@@76 ($generated@@168 $generated@@501)) $generated@@56))
 :pattern ( ($generated@@168 $generated@@501))
)))
(assert (forall (($generated@@503 T@U) ) (! (= (type ($generated@@502 $generated@@503)) $generated@@68)
 :pattern ( ($generated@@502 $generated@@503))
)))
(assert (forall (($generated@@504 T@U) ) (!  (=> (= (type $generated@@504) $generated@@68) (= ($generated@@502 ($generated@@478 $generated@@504)) $generated@@504))
 :pattern ( ($generated@@478 $generated@@504))
)))
(assert (forall (($generated@@505 T@U) ) (!  (=> (= (type $generated@@505) $generated@@68) (= ($generated@@76 ($generated@@478 $generated@@505)) $generated@@57))
 :pattern ( ($generated@@478 $generated@@505))
)))
(assert (forall (($generated@@506 T@U) ) (! (let (($generated@@507 (type $generated@@506)))
(= ($generated@@329 $generated@@507 ($generated@@278 $generated@@506)) $generated@@506))
 :pattern ( ($generated@@278 $generated@@506))
)))
(assert (forall (($generated@@508 T@U) ($generated@@509 T@U) ($generated@@510 T@U) ) (!  (=> (and (and (= (type $generated@@508) ($generated@@291 $generated@@163 $generated@@163)) (= (type $generated@@509) $generated@@68)) (= (type $generated@@510) $generated@@68)) (= ($generated@@150 $generated@@508 ($generated@@396 $generated@@509 $generated@@510)) (forall (($generated@@511 T@U) ) (!  (=> (and (= (type $generated@@511) $generated@@163) ($generated@@0 ($generated@@85 ($generated@@289 $generated@@508) $generated@@511))) (and ($generated@@230 ($generated@@85 ($generated@@371 $generated@@508) $generated@@511) $generated@@510) ($generated@@230 $generated@@511 $generated@@509)))
 :pattern ( ($generated@@85 ($generated@@371 $generated@@508) $generated@@511))
 :pattern ( ($generated@@85 ($generated@@289 $generated@@508) $generated@@511))
))))
 :pattern ( ($generated@@150 $generated@@508 ($generated@@396 $generated@@509 $generated@@510)))
)))
(assert (forall (($generated@@512 T@U) ($generated@@513 T@U) ($generated@@514 T@U) ) (!  (=> (and (and (= (type $generated@@512) ($generated@@309 $generated@@163 $generated@@163)) (= (type $generated@@513) $generated@@68)) (= (type $generated@@514) $generated@@68)) (= ($generated@@150 $generated@@512 ($generated@@404 $generated@@513 $generated@@514)) (forall (($generated@@515 T@U) ) (!  (=> (and (= (type $generated@@515) $generated@@163) ($generated@@0 ($generated@@85 ($generated@@307 $generated@@512) $generated@@515))) (and ($generated@@230 ($generated@@85 ($generated@@379 $generated@@512) $generated@@515) $generated@@514) ($generated@@230 $generated@@515 $generated@@513)))
 :pattern ( ($generated@@85 ($generated@@379 $generated@@512) $generated@@515))
 :pattern ( ($generated@@85 ($generated@@307 $generated@@512) $generated@@515))
))))
 :pattern ( ($generated@@150 $generated@@512 ($generated@@404 $generated@@513 $generated@@514)))
)))
(assert (forall (($generated@@518 T@U) ($generated@@519 T@U) ) (!  (=> (and (= (type $generated@@518) $generated@@163) (= (type $generated@@519) $generated@@163)) (< ($generated@@516 $generated@@518) ($generated@@517 ($generated@@229 $generated@@518 $generated@@519))))
 :pattern ( ($generated@@229 $generated@@518 $generated@@519))
)))
(assert (forall (($generated@@520 T@U) ($generated@@521 T@U) ) (!  (=> (and (= (type $generated@@520) $generated@@163) (= (type $generated@@521) $generated@@163)) (< ($generated@@516 $generated@@521) ($generated@@517 ($generated@@229 $generated@@520 $generated@@521))))
 :pattern ( ($generated@@229 $generated@@520 $generated@@521))
)))
(assert (forall (($generated@@522 T@U) ($generated@@523 T@U) ($generated@@524 T@U) ) (!  (=> (and (and (and (= (type $generated@@522) $generated@@163) (= (type $generated@@523) $generated@@68)) (= (type $generated@@524) $generated@@68)) ($generated@@230 $generated@@522 ($generated@@396 $generated@@523 $generated@@524))) (and (= ($generated@@278 ($generated@@329 ($generated@@291 $generated@@163 $generated@@163) $generated@@522)) $generated@@522) ($generated@@150 ($generated@@329 ($generated@@291 $generated@@163 $generated@@163) $generated@@522) ($generated@@396 $generated@@523 $generated@@524))))
 :pattern ( ($generated@@230 $generated@@522 ($generated@@396 $generated@@523 $generated@@524)))
)))
(assert (forall (($generated@@525 T@U) ($generated@@526 T@U) ($generated@@527 T@U) ) (!  (=> (and (and (and (= (type $generated@@525) $generated@@163) (= (type $generated@@526) $generated@@68)) (= (type $generated@@527) $generated@@68)) ($generated@@230 $generated@@525 ($generated@@404 $generated@@526 $generated@@527))) (and (= ($generated@@278 ($generated@@329 ($generated@@309 $generated@@163 $generated@@163) $generated@@525)) $generated@@525) ($generated@@150 ($generated@@329 ($generated@@309 $generated@@163 $generated@@163) $generated@@525) ($generated@@404 $generated@@526 $generated@@527))))
 :pattern ( ($generated@@230 $generated@@525 ($generated@@404 $generated@@526 $generated@@527)))
)))
(assert (forall (($generated@@528 T@U) ($generated@@529 T@U) ($generated@@530 T@U) ) (!  (=> (and (and (and (= (type $generated@@528) $generated@@68) (= (type $generated@@529) $generated@@68)) (= (type $generated@@530) $generated@@163)) ($generated@@230 $generated@@530 ($generated@@153 $generated@@528 $generated@@529))) (and (= ($generated@@278 ($generated@@329 $generated@@154 $generated@@530)) $generated@@530) ($generated@@150 ($generated@@329 $generated@@154 $generated@@530) ($generated@@153 $generated@@528 $generated@@529))))
 :pattern ( ($generated@@230 $generated@@530 ($generated@@153 $generated@@528 $generated@@529)))
)))
(assert (forall (($generated@@531 T@U) ) (! (let (($generated@@532 (type $generated@@531)))
 (not ($generated@@0 ($generated@@85 ($generated@@412 $generated@@532) $generated@@531))))
 :pattern ( (let (($generated@@532 (type $generated@@531)))
($generated@@85 ($generated@@412 $generated@@532) $generated@@531)))
)))
(assert (forall (($generated@@534 T@U) ) (! (= (type ($generated@@533 $generated@@534)) $generated@@73)
 :pattern ( ($generated@@533 $generated@@534))
)))
(assert (forall (($generated@@535 T@U) ($generated@@536 T@U) ) (!  (=> (and (= (type $generated@@535) $generated@@68) (= (type $generated@@536) $generated@@68)) (and (= ($generated@@76 ($generated@@153 $generated@@535 $generated@@536)) $generated@@63) (= ($generated@@533 ($generated@@153 $generated@@535 $generated@@536)) $generated@@66)))
 :pattern ( ($generated@@153 $generated@@535 $generated@@536))
)))
(assert (forall (($generated@@537 T@U) ) (!  (=> (= (type $generated@@537) $generated@@154) (= ($generated@@516 ($generated@@278 $generated@@537)) ($generated@@517 $generated@@537)))
 :pattern ( ($generated@@516 ($generated@@278 $generated@@537)))
)))
(assert (forall (($generated@@538 T@U) ) (!  (=> (and (= (type $generated@@538) $generated@@163) ($generated@@230 $generated@@538 ($generated@@79 0))) (and (= ($generated@@278 ($generated@@329 $generated@@2 $generated@@538)) $generated@@538) ($generated@@150 ($generated@@329 ($generated@@80 $generated@@163 $generated@@4) $generated@@538) ($generated@@79 0))))
 :pattern ( ($generated@@230 $generated@@538 ($generated@@79 0)))
)))
(assert (forall (($generated@@539 T@U) ($generated@@540 T@U) ) (!  (=> (and (and (= (type $generated@@539) $generated@@163) (= (type $generated@@540) $generated@@68)) ($generated@@230 $generated@@539 ($generated@@240 $generated@@540))) (and (= ($generated@@278 ($generated@@329 ($generated@@80 $generated@@163 $generated@@4) $generated@@539)) $generated@@539) ($generated@@150 ($generated@@329 ($generated@@80 $generated@@163 $generated@@4) $generated@@539) ($generated@@240 $generated@@540))))
 :pattern ( ($generated@@230 $generated@@539 ($generated@@240 $generated@@540)))
)))
(assert (forall (($generated@@541 T@U) ($generated@@542 T@U) ) (!  (=> (and (and (= (type $generated@@541) $generated@@163) (= (type $generated@@542) $generated@@68)) ($generated@@230 $generated@@541 ($generated@@245 $generated@@542))) (and (= ($generated@@278 ($generated@@329 ($generated@@80 $generated@@163 $generated@@4) $generated@@541)) $generated@@541) ($generated@@150 ($generated@@329 ($generated@@80 $generated@@163 $generated@@4) $generated@@541) ($generated@@245 $generated@@542))))
 :pattern ( ($generated@@230 $generated@@541 ($generated@@245 $generated@@542)))
)))
(assert (forall (($generated@@543 T@U) ($generated@@544 T@U) ) (!  (=> (and (and (= (type $generated@@543) $generated@@163) (= (type $generated@@544) $generated@@68)) ($generated@@230 $generated@@543 ($generated@@168 $generated@@544))) (and (= ($generated@@278 ($generated@@329 ($generated@@80 $generated@@163 $generated@@2) $generated@@543)) $generated@@543) ($generated@@150 ($generated@@329 ($generated@@80 $generated@@163 $generated@@2) $generated@@543) ($generated@@168 $generated@@544))))
 :pattern ( ($generated@@230 $generated@@543 ($generated@@168 $generated@@544)))
)))
(assert (forall (($generated@@545 T@U) ($generated@@546 T@U) ) (!  (=> (and (and (= (type $generated@@545) $generated@@163) (= (type $generated@@546) $generated@@68)) ($generated@@230 $generated@@545 ($generated@@478 $generated@@546))) (and (= ($generated@@278 ($generated@@329 ($generated@@271 $generated@@163) $generated@@545)) $generated@@545) ($generated@@150 ($generated@@329 ($generated@@271 $generated@@163) $generated@@545) ($generated@@478 $generated@@546))))
 :pattern ( ($generated@@230 $generated@@545 ($generated@@478 $generated@@546)))
)))
(assert (= ($generated@@76 $generated@@136) $generated@@61))
(assert (= ($generated@@533 $generated@@136) $generated@@65))
(assert (= ($generated@@76 $generated@@139) $generated@@64))
(assert (= ($generated@@533 $generated@@139) $generated@@67))
(assert (forall (($generated@@547 T@U) ($generated@@548 T@U) ($generated@@549 T@U) ) (!  (=> (and (and (= (type $generated@@547) ($generated@@80 $generated@@163 $generated@@2)) (= (type $generated@@548) $generated@@68)) (= (type $generated@@549) ($generated@@80 $generated@@81 $generated@@82))) (= ($generated@@78 $generated@@547 ($generated@@168 $generated@@548) $generated@@549) (forall (($generated@@550 T@U) ) (!  (=> (and (= (type $generated@@550) $generated@@163) (< 0 ($generated ($generated@@85 $generated@@547 $generated@@550)))) ($generated@@254 $generated@@550 $generated@@548 $generated@@549))
 :pattern ( ($generated@@85 $generated@@547 $generated@@550))
))))
 :pattern ( ($generated@@78 $generated@@547 ($generated@@168 $generated@@548) $generated@@549))
)))
(assert (forall (($generated@@551 T@U) ($generated@@552 T@U) ($generated@@553 T@U) ) (!  (=> (and (and (and (= (type $generated@@551) $generated@@154) (= (type $generated@@552) $generated@@68)) (= (type $generated@@553) ($generated@@80 $generated@@81 $generated@@82))) (and ($generated@@253 $generated@@553) (and ($generated@@152 $generated@@551) (exists (($generated@@554 T@U) ) (!  (and (= (type $generated@@554) $generated@@68) ($generated@@78 $generated@@551 ($generated@@153 $generated@@552 $generated@@554) $generated@@553))
 :pattern ( ($generated@@78 $generated@@551 ($generated@@153 $generated@@552 $generated@@554) $generated@@553))
))))) ($generated@@254 ($generated@@161 $generated@@551) $generated@@552 $generated@@553))
 :pattern ( ($generated@@254 ($generated@@161 $generated@@551) $generated@@552 $generated@@553))
)))
(assert (forall (($generated@@555 T@U) ($generated@@556 T@U) ($generated@@557 T@U) ) (!  (=> (and (and (and (= (type $generated@@555) $generated@@154) (= (type $generated@@556) $generated@@68)) (= (type $generated@@557) ($generated@@80 $generated@@81 $generated@@82))) (and ($generated@@253 $generated@@557) (and ($generated@@152 $generated@@555) (exists (($generated@@558 T@U) ) (!  (and (= (type $generated@@558) $generated@@68) ($generated@@78 $generated@@555 ($generated@@153 $generated@@558 $generated@@556) $generated@@557))
 :pattern ( ($generated@@78 $generated@@555 ($generated@@153 $generated@@558 $generated@@556) $generated@@557))
))))) ($generated@@254 ($generated@@162 $generated@@555) $generated@@556 $generated@@557))
 :pattern ( ($generated@@254 ($generated@@162 $generated@@555) $generated@@556 $generated@@557))
)))
(assert (forall (($generated@@559 T@U) ($generated@@560 T@U) ) (!  (=> (and (= (type $generated@@559) $generated@@163) (= (type $generated@@560) $generated@@163)) (= ($generated@@229 ($generated@@146 $generated@@559) ($generated@@146 $generated@@560)) ($generated@@146 ($generated@@229 $generated@@559 $generated@@560))))
 :pattern ( ($generated@@229 ($generated@@146 $generated@@559) ($generated@@146 $generated@@560)))
)))
(assert (forall (($generated@@561 Int) ) (! (= ($generated@@278 ($generated@@8 ($generated@@144 $generated@@561))) ($generated@@146 ($generated@@278 ($generated@@8 $generated@@561))))
 :pattern ( ($generated@@278 ($generated@@8 ($generated@@144 $generated@@561))))
)))
(assert (forall (($generated@@562 T@U) ) (! (= ($generated@@278 ($generated@@146 $generated@@562)) ($generated@@146 ($generated@@278 $generated@@562)))
 :pattern ( ($generated@@278 ($generated@@146 $generated@@562)))
)))
(assert (forall (($generated@@563 T@U) ) (! (let (($generated@@564 ($generated@@272 (type $generated@@563))))
 (=> (and (= (type $generated@@563) ($generated@@271 $generated@@564)) (= ($generated@@270 $generated@@563) 0)) (= $generated@@563 ($generated@@269 $generated@@564))))
 :pattern ( ($generated@@270 $generated@@563))
)))
(assert (forall (($generated@@565 T@U) ($generated@@566 T@U) ($generated@@567 T@U) ) (! (let (($generated@@568 (type $generated@@566)))
 (=> (and (and (= (type $generated@@565) ($generated@@80 $generated@@568 $generated@@2)) (= (type $generated@@567) $generated@@2)) (<= 0 ($generated $generated@@567))) (= ($generated@@283 ($generated@@86 $generated@@565 $generated@@566 $generated@@567)) (+ (- ($generated@@283 $generated@@565) ($generated ($generated@@85 $generated@@565 $generated@@566))) ($generated $generated@@567)))))
 :pattern ( ($generated@@283 ($generated@@86 $generated@@565 $generated@@566 $generated@@567)))
)))
(assert  (=> (<= 1 $generated@@142) (forall (($generated@@569 Int) ) (!  (=> (or ($generated@@145 $generated@@569) (and (not (= 1 $generated@@142)) (< $generated@@569 0))) (= ($generated@@143 $generated@@569) ($generated@@0 ($generated@@146 ($generated@@11 true)))))
 :pattern ( ($generated@@143 $generated@@569))
))))
(assert (forall (($generated@@570 T@U) ($generated@@571 T@U) ) (!  (=> (and (= (type $generated@@570) ($generated@@80 $generated@@81 $generated@@82)) (= (type $generated@@571) $generated@@2)) ($generated@@78 $generated@@571 $generated@@46 $generated@@570))
 :pattern ( ($generated@@78 $generated@@571 $generated@@46 $generated@@570))
)))
(assert (forall (($generated@@572 T@U) ($generated@@573 T@U) ) (!  (=> (and (= (type $generated@@572) ($generated@@80 $generated@@81 $generated@@82)) (= (type $generated@@573) $generated@@3)) ($generated@@78 $generated@@573 $generated@@47 $generated@@572))
 :pattern ( ($generated@@78 $generated@@573 $generated@@47 $generated@@572))
)))
(assert (forall (($generated@@574 T@U) ($generated@@575 T@U) ) (!  (=> (and (= (type $generated@@574) ($generated@@80 $generated@@81 $generated@@82)) (= (type $generated@@575) $generated@@4)) ($generated@@78 $generated@@575 $generated@@44 $generated@@574))
 :pattern ( ($generated@@78 $generated@@575 $generated@@44 $generated@@574))
)))
(assert (forall (($generated@@576 T@U) ($generated@@577 T@U) ) (!  (=> (and (= (type $generated@@576) ($generated@@80 $generated@@81 $generated@@82)) (= (type $generated@@577) $generated@@436)) ($generated@@78 $generated@@577 $generated@@45 $generated@@576))
 :pattern ( ($generated@@78 $generated@@577 $generated@@45 $generated@@576))
)))
(assert (forall (($generated@@578 T@U) ($generated@@579 T@U) ) (!  (=> (and (= (type $generated@@578) ($generated@@80 $generated@@81 $generated@@82)) (= (type $generated@@579) $generated@@163)) ($generated@@78 $generated@@579 $generated@@48 $generated@@578))
 :pattern ( ($generated@@78 $generated@@579 $generated@@48 $generated@@578))
)))
(assert (forall (($generated@@580 T@U) ($generated@@581 T@U) ) (!  (=> (and (= (type $generated@@580) ($generated@@271 $generated@@163)) (= (type $generated@@581) $generated@@68)) (= ($generated@@150 $generated@@580 ($generated@@478 $generated@@581)) (forall (($generated@@582 Int) ) (!  (=> (and (<= 0 $generated@@582) (< $generated@@582 ($generated@@270 $generated@@580))) ($generated@@230 ($generated@@479 $generated@@580 $generated@@582) $generated@@581))
 :pattern ( ($generated@@479 $generated@@580 $generated@@582))
))))
 :pattern ( ($generated@@150 $generated@@580 ($generated@@478 $generated@@581)))
)))
(assert (forall (($generated@@584 T@U) ($generated@@585 Int) ) (!  (=> (= (type $generated@@584) ($generated@@271 $generated@@163)) (=> (and (<= 0 $generated@@585) (< $generated@@585 ($generated@@270 $generated@@584))) (< ($generated@@517 ($generated@@329 $generated@@154 ($generated@@479 $generated@@584 $generated@@585))) ($generated@@583 $generated@@584))))
 :pattern ( ($generated@@517 ($generated@@329 $generated@@154 ($generated@@479 $generated@@584 $generated@@585))))
)))
(assert (forall (($generated@@586 T@U) ($generated@@587 T@U) ($generated@@588 T@U) ) (!  (=> (and (and (and (= (type $generated@@586) ($generated@@291 $generated@@163 $generated@@163)) (= (type $generated@@587) $generated@@68)) (= (type $generated@@588) $generated@@68)) ($generated@@150 $generated@@586 ($generated@@396 $generated@@587 $generated@@588))) (and (and ($generated@@150 ($generated@@289 $generated@@586) ($generated@@240 $generated@@587)) ($generated@@150 ($generated@@338 $generated@@586) ($generated@@240 $generated@@588))) ($generated@@150 ($generated@@370 $generated@@586) ($generated@@240 ($generated@@153 $generated@@587 $generated@@588)))))
 :pattern ( ($generated@@150 $generated@@586 ($generated@@396 $generated@@587 $generated@@588)))
)))
(assert (forall (($generated@@589 T@U) ($generated@@590 T@U) ($generated@@591 T@U) ) (!  (=> (and (and (and (= (type $generated@@589) ($generated@@309 $generated@@163 $generated@@163)) (= (type $generated@@590) $generated@@68)) (= (type $generated@@591) $generated@@68)) ($generated@@150 $generated@@589 ($generated@@404 $generated@@590 $generated@@591))) (and (and ($generated@@150 ($generated@@307 $generated@@589) ($generated@@245 $generated@@590)) ($generated@@150 ($generated@@349 $generated@@589) ($generated@@245 $generated@@591))) ($generated@@150 ($generated@@378 $generated@@589) ($generated@@245 ($generated@@153 $generated@@590 $generated@@591)))))
 :pattern ( ($generated@@150 $generated@@589 ($generated@@404 $generated@@590 $generated@@591)))
)))
(assert (forall (($generated@@592 T@U) ) (!  (=> (= (type $generated@@592) $generated@@2) ($generated@@150 $generated@@592 $generated@@46))
 :pattern ( ($generated@@150 $generated@@592 $generated@@46))
)))
(assert (forall (($generated@@593 T@U) ) (!  (=> (= (type $generated@@593) $generated@@3) ($generated@@150 $generated@@593 $generated@@47))
 :pattern ( ($generated@@150 $generated@@593 $generated@@47))
)))
(assert (forall (($generated@@594 T@U) ) (!  (=> (= (type $generated@@594) $generated@@4) ($generated@@150 $generated@@594 $generated@@44))
 :pattern ( ($generated@@150 $generated@@594 $generated@@44))
)))
(assert (forall (($generated@@595 T@U) ) (!  (=> (= (type $generated@@595) $generated@@436) ($generated@@150 $generated@@595 $generated@@45))
 :pattern ( ($generated@@150 $generated@@595 $generated@@45))
)))
(assert (forall (($generated@@596 T@U) ) (!  (=> (= (type $generated@@596) $generated@@163) ($generated@@150 $generated@@596 $generated@@48))
 :pattern ( ($generated@@150 $generated@@596 $generated@@48))
)))
(push 1)
(declare-fun ControlFlow (Int Int) Int)
(declare-fun $generated@@597 () Int)
(declare-fun $generated@@598 () T@U)
(declare-fun $generated@@599 () T@U)
(declare-fun $generated@@600 () T@U)
(declare-fun $generated@@601 (T@U) Bool)
(assert  (and (and (= (type $generated@@598) ($generated@@80 $generated@@81 $generated@@82)) (= (type $generated@@599) ($generated@@175 $generated@@81 $generated@@4))) (= (type $generated@@600) $generated@@81)))
(set-option :timeout 0)
(set-option :rlimit 0)
(assert (not
 (=> (= (ControlFlow 0 0) 14) (let (($generated@@602  (=> (and (forall (($generated@@603 Int) ) (!  (and (=> (<= ($generated@@144 0) $generated@@603) ($generated@@264 $generated@@603)) (=> (=> (<= ($generated@@144 0) $generated@@603) ($generated@@263 $generated@@603)) (=> (< 100 $generated@@603) ($generated@@145 $generated@@603))))
 :pattern ( ($generated@@143 $generated@@603))
 :pattern ( ($generated@@263 $generated@@603))
)) (= (ControlFlow 0 3) (- 0 2))) (forall (($generated@@604 Int) ) (!  (=> true (and (=> (<= ($generated@@144 0) $generated@@604) ($generated@@263 $generated@@604)) (=> (< 100 $generated@@604) ($generated@@143 $generated@@604))))
 :pattern ( ($generated@@143 $generated@@604))
 :pattern ( ($generated@@263 $generated@@604))
)))))
(let (($generated@@605  (=> (and (<= $generated@@597 100) (= (ControlFlow 0 7) 3)) $generated@@602)))
(let (($generated@@606  (=> (< 100 $generated@@597) (and (=> (= (ControlFlow 0 5) (- 0 6)) ($generated@@150 ($generated@@8 $generated@@597) $generated@@139)) (=> ($generated@@150 ($generated@@8 $generated@@597) $generated@@139) (=> ($generated@@78 ($generated@@8 $generated@@597) $generated@@139 $generated@@598) (=> (and ($generated@@145 $generated@@597) (= (ControlFlow 0 5) 3)) $generated@@602)))))))
(let (($generated@@607  (=> (=> (<= ($generated@@144 0) $generated@@597) ($generated@@263 $generated@@597)) (and (=> (= (ControlFlow 0 8) 5) $generated@@606) (=> (= (ControlFlow 0 8) 7) $generated@@605)))))
(let (($generated@@608  (=> (and (not (=> (<= ($generated@@144 0) $generated@@597) ($generated@@263 $generated@@597))) (= (ControlFlow 0 4) 3)) $generated@@602)))
(let (($generated@@609  (=> (< $generated@@597 ($generated@@144 0)) (and (=> (= (ControlFlow 0 11) 8) $generated@@607) (=> (= (ControlFlow 0 11) 4) $generated@@608)))))
(let (($generated@@610  (=> (<= ($generated@@144 0) $generated@@597) (and (=> (= (ControlFlow 0 9) (- 0 10)) ($generated@@150 ($generated@@8 $generated@@597) $generated@@136)) (=> ($generated@@150 ($generated@@8 $generated@@597) $generated@@136) (=> (and ($generated@@78 ($generated@@8 $generated@@597) $generated@@136 $generated@@598) ($generated@@264 $generated@@597)) (and (=> (= (ControlFlow 0 9) 8) $generated@@607) (=> (= (ControlFlow 0 9) 4) $generated@@608))))))))
(let (($generated@@611  (and (=> (= (ControlFlow 0 12) 9) $generated@@610) (=> (= (ControlFlow 0 12) 11) $generated@@609))))
(let (($generated@@612 true))
(let (($generated@@613  (=> (= $generated@@599 ($generated@@174 $generated@@600 $generated@@598 $generated@@60 false)) (and (=> (= (ControlFlow 0 13) 12) $generated@@611) (=> (= (ControlFlow 0 13) 1) $generated@@612)))))
(let (($generated@@614  (=> (and (and ($generated@@253 $generated@@598) ($generated@@601 $generated@@598)) (and (= 2 $generated@@142) (= (ControlFlow 0 14) 13))) $generated@@613)))
$generated@@614))))))))))))
))
(check-sat)
(get-info :reason-unknown)
(assert (not (= (ControlFlow 0 5) (- 6))))
(check-sat)
(pop 1)
; Invalid
(get-info :rlimit)
(reset)
(set-option :rlimit 0)
; did a full reset
(reset)
(set-option :print-success false)
(set-info :smt-lib-version 2.6)
(set-option :auto_config false)
(set-option :type_check true)
(set-option :smt.case_split 3)
(set-option :smt.qi.eager_threshold 100)
(set-option :smt.delay_units true)
(set-option :smt.arith.solver 2)
(set-option :smt.mbqi false)
(set-option :model.compact false)
(set-option :model.v2 true)
(set-option :pp.bv_literals false)
; done setting options


(set-info :category "industrial")
(declare-sort |T@U| 0)
(declare-sort |T@T| 0)
(declare-fun real_pow (Real Real) Real)
(declare-fun UOrdering2 (|T@U| |T@U|) Bool)
(declare-fun UOrdering3 (|T@T| |T@U| |T@U|) Bool)
(declare-fun tickleBool (Bool) Bool)
(assert (and (tickleBool true) (tickleBool false)))
(declare-fun $generated (T@U) Int)
(declare-fun $generated@@0 (T@U) Bool)
(declare-fun $generated@@1 (T@T) Int)
(declare-fun $generated@@2 () T@T)
(declare-fun $generated@@3 () T@T)
(declare-fun $generated@@4 () T@T)
(declare-fun $generated@@5 () T@T)
(declare-fun $generated@@6 () T@T)
(declare-fun $generated@@7 () T@T)
(declare-fun $generated@@8 (Int) T@U)
(declare-fun type (T@U) T@T)
(declare-fun $generated@@9 (Real) T@U)
(declare-fun $generated@@10 (T@U) Real)
(declare-fun $generated@@11 (Bool) T@U)
(declare-fun $generated@@12 (RoundingMode) T@U)
(declare-fun $generated@@13 (T@U) RoundingMode)
(declare-fun $generated@@14 (String) T@U)
(declare-fun $generated@@15 (T@U) String)
(declare-fun $generated@@16 ((RegEx String)) T@U)
(declare-fun $generated@@17 (T@U) (RegEx String))
(declare-fun $generated@@44 () T@U)
(declare-fun $generated@@45 () T@U)
(declare-fun $generated@@46 () T@U)
(declare-fun $generated@@47 () T@U)
(declare-fun $generated@@48 () T@U)
(declare-fun $generated@@49 () T@U)
(declare-fun $generated@@50 () T@U)
(declare-fun $generated@@51 () T@U)
(declare-fun $generated@@52 () T@U)
(declare-fun $generated@@53 () T@U)
(declare-fun $generated@@54 () T@U)
(declare-fun $generated@@55 () T@U)
(declare-fun $generated@@56 () T@U)
(declare-fun $generated@@57 () T@U)
(declare-fun $generated@@58 () T@U)
(declare-fun $generated@@59 () T@U)
(declare-fun $generated@@60 () T@U)
(declare-fun $generated@@61 () T@U)
(declare-fun $generated@@62 () T@U)
(declare-fun $generated@@63 () T@U)
(declare-fun $generated@@64 () T@U)
(declare-fun $generated@@65 () T@U)
(declare-fun $generated@@66 () T@U)
(declare-fun $generated@@67 () T@U)
(declare-fun $generated@@68 () T@T)
(declare-fun $generated@@69 () T@T)
(declare-fun $generated@@70 (T@T) T@T)
(declare-fun $generated@@71 (T@T) T@T)
(declare-fun $generated@@72 () T@T)
(declare-fun $generated@@73 () T@T)
(declare-fun $generated@@76 (T@U) T@U)
(declare-fun $generated@@78 (T@U T@U T@U) Bool)
(declare-fun $generated@@79 (Int) T@U)
(declare-fun $generated@@80 (T@T T@T) T@T)
(declare-fun $generated@@81 () T@T)
(declare-fun $generated@@82 () T@T)
(declare-fun $generated@@83 (T@T) T@T)
(declare-fun $generated@@84 (T@T) T@T)
(declare-fun $generated@@85 (T@U T@U) T@U)
(declare-fun $generated@@86 (T@U T@U T@U) T@U)
(declare-fun $generated@@87 (T@U T@U) T@U)
(declare-fun $generated@@88 (T@U T@U T@U) T@U)
(declare-fun $generated@@136 () T@U)
(declare-fun $generated@@137 () T@U)
(declare-fun $generated@@140 (T@U T@U) Bool)
(declare-fun $generated@@142 (T@U) Bool)
(declare-fun $generated@@143 (T@U T@U) T@U)
(declare-fun $generated@@144 () T@T)
(declare-fun $generated@@150 (T@U T@U) Bool)
(declare-fun $generated@@151 (T@U) T@U)
(declare-fun $generated@@152 (T@U) T@U)
(declare-fun $generated@@153 () T@T)
(declare-fun $generated@@158 (T@U) T@U)
(declare-fun $generated@@159 (T@U) Bool)
(declare-fun $generated@@163 (T@U) T@U)
(declare-fun $generated@@166 (T@U T@U T@U) T@U)
(declare-fun $generated@@167 (T@U T@U T@U Bool) T@U)
(declare-fun $generated@@168 (T@T T@T) T@T)
(declare-fun $generated@@169 (T@T) T@T)
(declare-fun $generated@@170 (T@T) T@T)
(declare-fun $generated@@171 (T@U T@U T@U T@U) T@U)
(declare-fun $generated@@222 () T@U)
(declare-fun $generated@@225 (T@U T@U) T@U)
(declare-fun $generated@@226 (T@U T@U) Bool)
(declare-fun $generated@@235 (T@U) T@U)
(declare-fun $generated@@240 (T@U) T@U)
(declare-fun $generated@@245 (T@U) T@U)
(declare-fun $generated@@249 (T@U) Bool)
(declare-fun $generated@@250 (T@U T@U T@U) Bool)
(declare-fun $generated@@256 (T@U) T@U)
(declare-fun $generated@@262 (T@T) T@U)
(declare-fun $generated@@263 (T@U) Int)
(declare-fun $generated@@264 (T@T) T@T)
(declare-fun $generated@@265 (T@T) T@T)
(declare-fun $generated@@270 (T@U) T@U)
(declare-fun $generated@@275 (T@U) Int)
(declare-fun $generated@@276 (T@T) T@U)
(declare-fun $generated@@281 (T@U) T@U)
(declare-fun $generated@@282 (T@T T@T) T@U)
(declare-fun $generated@@283 (T@T T@T) T@T)
(declare-fun $generated@@284 (T@T) T@T)
(declare-fun $generated@@285 (T@T) T@T)
(declare-fun $generated@@299 (T@U) T@U)
(declare-fun $generated@@300 (T@T T@T) T@U)
(declare-fun $generated@@301 (T@T T@T) T@T)
(declare-fun $generated@@302 (T@T) T@T)
(declare-fun $generated@@303 (T@T) T@T)
(declare-fun $generated@@320 (T@T T@U) T@U)
(declare-fun $generated@@330 (T@U) T@U)
(declare-fun $generated@@341 (T@U) T@U)
(declare-fun $generated@@361 (T@U) T@U)
(declare-fun $generated@@362 (T@U) T@U)
(declare-fun $generated@@369 (T@U) T@U)
(declare-fun $generated@@370 (T@U) T@U)
(declare-fun $generated@@387 (T@U T@U) T@U)
(declare-fun $generated@@395 (T@U T@U) T@U)
(declare-fun $generated@@403 (T@T) T@U)
(declare-fun $generated@@427 () T@T)
(declare-fun $generated@@435 (T@U) T@U)
(declare-fun $generated@@439 (T@U) T@U)
(declare-fun $generated@@445 (T@U) T@U)
(declare-fun $generated@@449 (T@U) T@U)
(declare-fun $generated@@457 (T@U) T@U)
(declare-fun $generated@@461 (T@U) T@U)
(declare-fun $generated@@469 (T@U) T@U)
(declare-fun $generated@@470 (T@U Int) T@U)
(declare-fun $generated@@479 (T@U) Int)
(declare-fun $generated@@481 (T@U) T@U)
(declare-fun $generated@@485 (T@U) T@U)
(declare-fun $generated@@489 (T@U) T@U)
(declare-fun $generated@@493 (T@U) T@U)
(declare-fun $generated@@507 (T@U) Int)
(declare-fun $generated@@508 (T@U) Int)
(declare-fun $generated@@524 (T@U) T@U)
(declare-fun $generated@@572 (T@U) Int)
(assert  (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (= ($generated@@1 $generated@@2) 0) (= ($generated@@1 $generated@@3) 1)) (= ($generated@@1 $generated@@4) 2)) (= ($generated@@1 $generated@@5) 3)) (= ($generated@@1 $generated@@6) 4)) (= ($generated@@1 $generated@@7) 5)) (forall (($generated@@18 Int) ) (! (= ($generated ($generated@@8 $generated@@18)) $generated@@18)
 :pattern ( ($generated@@8 $generated@@18))
))) (forall (($generated@@19 T@U) ) (!  (=> (= (type $generated@@19) $generated@@2) (= ($generated@@8 ($generated $generated@@19)) $generated@@19))
 :pattern ( ($generated $generated@@19))
))) (forall (($generated@@20 Int) ) (! (= (type ($generated@@8 $generated@@20)) $generated@@2)
 :pattern ( ($generated@@8 $generated@@20))
))) (forall (($generated@@21 Real) ) (! (= ($generated@@10 ($generated@@9 $generated@@21)) $generated@@21)
 :pattern ( ($generated@@9 $generated@@21))
))) (forall (($generated@@22 T@U) ) (!  (=> (= (type $generated@@22) $generated@@3) (= ($generated@@9 ($generated@@10 $generated@@22)) $generated@@22))
 :pattern ( ($generated@@10 $generated@@22))
))) (forall (($generated@@23 Real) ) (! (= (type ($generated@@9 $generated@@23)) $generated@@3)
 :pattern ( ($generated@@9 $generated@@23))
))) (forall (($generated@@24 Bool) ) (! (= ($generated@@0 ($generated@@11 $generated@@24)) $generated@@24)
 :pattern ( ($generated@@11 $generated@@24))
))) (forall (($generated@@25 T@U) ) (!  (=> (= (type $generated@@25) $generated@@4) (= ($generated@@11 ($generated@@0 $generated@@25)) $generated@@25))
 :pattern ( ($generated@@0 $generated@@25))
))) (forall (($generated@@26 Bool) ) (! (= (type ($generated@@11 $generated@@26)) $generated@@4)
 :pattern ( ($generated@@11 $generated@@26))
))) (forall (($generated@@27 RoundingMode) ) (! (= ($generated@@13 ($generated@@12 $generated@@27)) $generated@@27)
 :pattern ( ($generated@@12 $generated@@27))
))) (forall (($generated@@28 T@U) ) (!  (=> (= (type $generated@@28) $generated@@5) (= ($generated@@12 ($generated@@13 $generated@@28)) $generated@@28))
 :pattern ( ($generated@@13 $generated@@28))
))) (forall (($generated@@29 RoundingMode) ) (! (= (type ($generated@@12 $generated@@29)) $generated@@5)
 :pattern ( ($generated@@12 $generated@@29))
))) (forall (($generated@@30 String) ) (! (= ($generated@@15 ($generated@@14 $generated@@30)) $generated@@30)
 :pattern ( ($generated@@14 $generated@@30))
))) (forall (($generated@@31 T@U) ) (!  (=> (= (type $generated@@31) $generated@@6) (= ($generated@@14 ($generated@@15 $generated@@31)) $generated@@31))
 :pattern ( ($generated@@15 $generated@@31))
))) (forall (($generated@@32 String) ) (! (= (type ($generated@@14 $generated@@32)) $generated@@6)
 :pattern ( ($generated@@14 $generated@@32))
))) (forall (($generated@@33 (RegEx String)) ) (! (= ($generated@@17 ($generated@@16 $generated@@33)) $generated@@33)
 :pattern ( ($generated@@16 $generated@@33))
))) (forall (($generated@@34 T@U) ) (!  (=> (= (type $generated@@34) $generated@@7) (= ($generated@@16 ($generated@@17 $generated@@34)) $generated@@34))
 :pattern ( ($generated@@17 $generated@@34))
))) (forall (($generated@@35 (RegEx String)) ) (! (= (type ($generated@@16 $generated@@35)) $generated@@7)
 :pattern ( ($generated@@16 $generated@@35))
))))
(assert (forall (($generated@@36 T@U) ) (! (UOrdering2 $generated@@36 $generated@@36)
 :no-pattern ($generated $generated@@36)
 :no-pattern ($generated@@0 $generated@@36)
)))
(assert (forall (($generated@@37 T@U) ($generated@@38 T@U) ($generated@@39 T@U) ) (! (let (($generated@@40 (type $generated@@37)))
 (=> (and (and (= (type $generated@@38) $generated@@40) (= (type $generated@@39) $generated@@40)) (and (UOrdering2 $generated@@37 $generated@@38) (UOrdering2 $generated@@38 $generated@@39))) (UOrdering2 $generated@@37 $generated@@39)))
 :pattern ( (UOrdering2 $generated@@37 $generated@@38) (UOrdering2 $generated@@38 $generated@@39))
)))
(assert (forall (($generated@@41 T@U) ($generated@@42 T@U) ) (! (let (($generated@@43 (type $generated@@41)))
 (=> (= (type $generated@@42) $generated@@43) (=> (and (UOrdering2 $generated@@41 $generated@@42) (UOrdering2 $generated@@42 $generated@@41)) (= $generated@@41 $generated@@42))))
 :pattern ( (UOrdering2 $generated@@41 $generated@@42) (UOrdering2 $generated@@42 $generated@@41))
)))
(assert  (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (= ($generated@@1 $generated@@68) 6) (= (type $generated@@44) $generated@@68)) (= (type $generated@@45) $generated@@68)) (= (type $generated@@46) $generated@@68)) (= (type $generated@@47) $generated@@68)) (= (type $generated@@48) $generated@@68)) (= ($generated@@1 $generated@@69) 7)) (= (type $generated@@49) $generated@@69)) (= (type $generated@@50) $generated@@69)) (= (type $generated@@51) $generated@@69)) (= (type $generated@@52) $generated@@69)) (= (type $generated@@53) $generated@@69)) (= (type $generated@@54) $generated@@69)) (= (type $generated@@55) $generated@@69)) (= (type $generated@@56) $generated@@69)) (= (type $generated@@57) $generated@@69)) (= (type $generated@@58) $generated@@69)) (= (type $generated@@59) $generated@@69)) (forall (($generated@@74 T@T) ) (= ($generated@@1 ($generated@@70 $generated@@74)) 8))) (forall (($generated@@75 T@T) ) (! (= ($generated@@71 ($generated@@70 $generated@@75)) $generated@@75)
 :pattern ( ($generated@@70 $generated@@75))
))) (= (type $generated@@60) ($generated@@70 $generated@@4))) (= ($generated@@1 $generated@@72) 9)) (= (type $generated@@61) $generated@@72)) (= (type $generated@@62) $generated@@69)) (= (type $generated@@63) $generated@@69)) (= (type $generated@@64) $generated@@69)) (= ($generated@@1 $generated@@73) 10)) (= (type $generated@@65) $generated@@73)) (= (type $generated@@66) $generated@@73)) (= (type $generated@@67) $generated@@73)))
(assert (distinct $generated@@44 $generated@@45 $generated@@46 $generated@@47 $generated@@48 $generated@@49 $generated@@50 $generated@@51 $generated@@52 $generated@@53 $generated@@54 $generated@@55 $generated@@56 $generated@@57 $generated@@58 $generated@@59 $generated@@60 $generated@@61 $generated@@62 $generated@@63 $generated@@64 $generated@@65 $generated@@66 $generated@@67)
)
(assert (forall (($generated@@77 T@U) ) (! (= (type ($generated@@76 $generated@@77)) $generated@@69)
 :pattern ( ($generated@@76 $generated@@77))
)))
(assert (= ($generated@@76 $generated@@44) $generated@@49))
(assert (= ($generated@@76 $generated@@45) $generated@@50))
(assert (= ($generated@@76 $generated@@46) $generated@@51))
(assert (= ($generated@@76 $generated@@47) $generated@@52))
(assert (= ($generated@@76 $generated@@48) $generated@@53))
(assert  (and (and (and (and (and (and (and (and (and (and (and (and (and (forall (($generated@@89 T@T) ($generated@@90 T@T) ) (= ($generated@@1 ($generated@@80 $generated@@89 $generated@@90)) 11)) (forall (($generated@@91 T@T) ($generated@@92 T@T) ) (! (= ($generated@@83 ($generated@@80 $generated@@91 $generated@@92)) $generated@@91)
 :pattern ( ($generated@@80 $generated@@91 $generated@@92))
))) (forall (($generated@@93 T@T) ($generated@@94 T@T) ) (! (= ($generated@@84 ($generated@@80 $generated@@93 $generated@@94)) $generated@@94)
 :pattern ( ($generated@@80 $generated@@93 $generated@@94))
))) (forall (($generated@@95 T@U) ($generated@@96 T@U) ) (! (let (($generated@@97 ($generated@@84 (type $generated@@95))))
(= (type ($generated@@85 $generated@@95 $generated@@96)) $generated@@97))
 :pattern ( ($generated@@85 $generated@@95 $generated@@96))
))) (forall (($generated@@98 T@U) ($generated@@99 T@U) ($generated@@100 T@U) ) (! (let (($generated@@101 (type $generated@@100)))
(let (($generated@@102 (type $generated@@99)))
(= (type ($generated@@86 $generated@@98 $generated@@99 $generated@@100)) ($generated@@80 $generated@@102 $generated@@101))))
 :pattern ( ($generated@@86 $generated@@98 $generated@@99 $generated@@100))
))) (forall (($generated@@103 T@U) ($generated@@104 T@U) ($generated@@105 T@U) ) (! (let (($generated@@106 ($generated@@84 (type $generated@@103))))
 (=> (= (type $generated@@105) $generated@@106) (= ($generated@@85 ($generated@@86 $generated@@103 $generated@@104 $generated@@105) $generated@@104) $generated@@105)))
 :weight 0
))) (and (forall (($generated@@107 T@U) ($generated@@108 T@U) ($generated@@109 T@U) ($generated@@110 T@U) ) (!  (or (= $generated@@109 $generated@@110) (= ($generated@@85 ($generated@@86 $generated@@108 $generated@@109 $generated@@107) $generated@@110) ($generated@@85 $generated@@108 $generated@@110)))
 :weight 0
)) (forall (($generated@@111 T@U) ($generated@@112 T@U) ($generated@@113 T@U) ($generated@@114 T@U) ) (!  (or true (= ($generated@@85 ($generated@@86 $generated@@112 $generated@@113 $generated@@111) $generated@@114) ($generated@@85 $generated@@112 $generated@@114)))
 :weight 0
)))) (= ($generated@@1 $generated@@81) 12)) (forall (($generated@@115 T@U) ($generated@@116 T@U) ) (! (let (($generated@@117 ($generated@@71 (type $generated@@116))))
(= (type ($generated@@87 $generated@@115 $generated@@116)) $generated@@117))
 :pattern ( ($generated@@87 $generated@@115 $generated@@116))
))) (= ($generated@@1 $generated@@82) 13)) (forall (($generated@@118 T@U) ($generated@@119 T@U) ($generated@@120 T@U) ) (! (= (type ($generated@@88 $generated@@118 $generated@@119 $generated@@120)) $generated@@82)
 :pattern ( ($generated@@88 $generated@@118 $generated@@119 $generated@@120))
))) (forall (($generated@@121 T@U) ($generated@@122 T@U) ($generated@@123 T@U) ) (! (let (($generated@@124 ($generated@@71 (type $generated@@122))))
 (=> (= (type $generated@@123) $generated@@124) (= ($generated@@87 ($generated@@88 $generated@@121 $generated@@122 $generated@@123) $generated@@122) $generated@@123)))
 :weight 0
))) (and (forall (($generated@@125 T@U) ($generated@@126 T@U) ($generated@@127 T@U) ($generated@@128 T@U) ) (!  (or (= $generated@@127 $generated@@128) (= ($generated@@87 ($generated@@88 $generated@@126 $generated@@127 $generated@@125) $generated@@128) ($generated@@87 $generated@@126 $generated@@128)))
 :weight 0
)) (forall (($generated@@129 T@U) ($generated@@130 T@U) ($generated@@131 T@U) ($generated@@132 T@U) ) (!  (or true (= ($generated@@87 ($generated@@88 $generated@@130 $generated@@131 $generated@@129) $generated@@132) ($generated@@87 $generated@@130 $generated@@132)))
 :weight 0
)))) (forall (($generated@@133 Int) ) (! (= (type ($generated@@79 $generated@@133)) $generated@@68)
 :pattern ( ($generated@@79 $generated@@133))
))))
(assert (forall (($generated@@134 T@U) ($generated@@135 T@U) ) (!  (=> (and (= (type $generated@@134) $generated@@2) (= (type $generated@@135) ($generated@@80 $generated@@81 $generated@@82))) ($generated@@78 $generated@@134 ($generated@@79 0) $generated@@135))
 :pattern ( ($generated@@78 $generated@@134 ($generated@@79 0) $generated@@135))
)))
(assert  (and (= (type $generated@@136) $generated@@68) (= (type $generated@@137) $generated@@81)))
(assert (forall (($generated@@138 T@U) ($generated@@139 T@U) ) (!  (=> (and (= (type $generated@@138) $generated@@81) (= (type $generated@@139) ($generated@@80 $generated@@81 $generated@@82))) (= ($generated@@78 $generated@@138 $generated@@136 $generated@@139)  (or (= $generated@@138 $generated@@137) ($generated@@0 ($generated@@87 ($generated@@85 $generated@@139 $generated@@138) $generated@@60)))))
 :pattern ( ($generated@@78 $generated@@138 $generated@@136 $generated@@139))
)))
(assert (forall (($generated@@141 T@U) ) (!  (=> (= (type $generated@@141) $generated@@2) ($generated@@140 $generated@@141 ($generated@@79 0)))
 :pattern ( ($generated@@140 $generated@@141 ($generated@@79 0)))
)))
(assert  (and (= ($generated@@1 $generated@@144) 14) (forall (($generated@@145 T@U) ($generated@@146 T@U) ) (! (= (type ($generated@@143 $generated@@145 $generated@@146)) $generated@@68)
 :pattern ( ($generated@@143 $generated@@145 $generated@@146))
))))
(assert (forall (($generated@@147 T@U) ($generated@@148 T@U) ($generated@@149 T@U) ) (!  (=> (and (and (and (= (type $generated@@147) $generated@@68) (= (type $generated@@148) $generated@@68)) (= (type $generated@@149) $generated@@144)) ($generated@@140 $generated@@149 ($generated@@143 $generated@@147 $generated@@148))) ($generated@@142 $generated@@149))
 :pattern ( ($generated@@142 $generated@@149) ($generated@@140 $generated@@149 ($generated@@143 $generated@@147 $generated@@148)))
)))
(assert  (and (and (= ($generated@@1 $generated@@153) 15) (forall (($generated@@154 T@U) ) (! (= (type ($generated@@151 $generated@@154)) $generated@@153)
 :pattern ( ($generated@@151 $generated@@154))
))) (forall (($generated@@155 T@U) ) (! (= (type ($generated@@152 $generated@@155)) $generated@@153)
 :pattern ( ($generated@@152 $generated@@155))
))))
(assert (forall (($generated@@156 T@U) ($generated@@157 T@U) ) (!  (=> (and (and (= (type $generated@@156) $generated@@144) (= (type $generated@@157) $generated@@144)) true) (= ($generated@@150 $generated@@156 $generated@@157)  (and (= ($generated@@151 $generated@@156) ($generated@@151 $generated@@157)) (= ($generated@@152 $generated@@156) ($generated@@152 $generated@@157)))))
 :pattern ( ($generated@@150 $generated@@156 $generated@@157))
)))
(assert (forall (($generated@@160 T@U) ) (! (= (type ($generated@@158 $generated@@160)) $generated@@68)
 :pattern ( ($generated@@158 $generated@@160))
)))
(assert (forall (($generated@@161 T@U) ($generated@@162 T@U) ) (!  (=> (and (and (= (type $generated@@161) ($generated@@80 $generated@@153 $generated@@2)) (= (type $generated@@162) $generated@@68)) ($generated@@140 $generated@@161 ($generated@@158 $generated@@162))) ($generated@@159 $generated@@161))
 :pattern ( ($generated@@140 $generated@@161 ($generated@@158 $generated@@162)))
)))
(assert (forall (($generated@@164 T@U) ) (! (= (type ($generated@@163 $generated@@164)) $generated@@68)
 :pattern ( ($generated@@163 $generated@@164))
)))
(assert (forall (($generated@@165 T@U) ) (!  (=> (= (type $generated@@165) $generated@@81) (= ($generated@@140 $generated@@165 $generated@@136)  (or (= $generated@@165 $generated@@137) (= ($generated@@163 $generated@@165) $generated@@136))))
 :pattern ( ($generated@@140 $generated@@165 $generated@@136))
)))
(assert  (and (and (and (and (and (and (and (forall (($generated@@172 T@T) ($generated@@173 T@T) ) (= ($generated@@1 ($generated@@168 $generated@@172 $generated@@173)) 16)) (forall (($generated@@174 T@T) ($generated@@175 T@T) ) (! (= ($generated@@169 ($generated@@168 $generated@@174 $generated@@175)) $generated@@174)
 :pattern ( ($generated@@168 $generated@@174 $generated@@175))
))) (forall (($generated@@176 T@T) ($generated@@177 T@T) ) (! (= ($generated@@170 ($generated@@168 $generated@@176 $generated@@177)) $generated@@177)
 :pattern ( ($generated@@168 $generated@@176 $generated@@177))
))) (forall (($generated@@178 T@U) ($generated@@179 T@U) ($generated@@180 T@U) ) (! (let (($generated@@181 ($generated@@170 (type $generated@@178))))
(= (type ($generated@@166 $generated@@178 $generated@@179 $generated@@180)) $generated@@181))
 :pattern ( ($generated@@166 $generated@@178 $generated@@179 $generated@@180))
))) (forall (($generated@@182 T@U) ($generated@@183 T@U) ($generated@@184 T@U) ($generated@@185 T@U) ) (! (let (($generated@@186 (type $generated@@185)))
(let (($generated@@187 (type $generated@@183)))
(= (type ($generated@@171 $generated@@182 $generated@@183 $generated@@184 $generated@@185)) ($generated@@168 $generated@@187 $generated@@186))))
 :pattern ( ($generated@@171 $generated@@182 $generated@@183 $generated@@184 $generated@@185))
))) (forall (($generated@@188 T@U) ($generated@@189 T@U) ($generated@@190 T@U) ($generated@@191 T@U) ) (! (let (($generated@@192 ($generated@@170 (type $generated@@188))))
 (=> (= (type $generated@@191) $generated@@192) (= ($generated@@166 ($generated@@171 $generated@@188 $generated@@189 $generated@@190 $generated@@191) $generated@@189 $generated@@190) $generated@@191)))
 :weight 0
))) (and (and (forall (($generated@@193 T@U) ($generated@@194 T@U) ($generated@@195 T@U) ($generated@@196 T@U) ($generated@@197 T@U) ($generated@@198 T@U) ) (!  (or (= $generated@@195 $generated@@197) (= ($generated@@166 ($generated@@171 $generated@@194 $generated@@195 $generated@@196 $generated@@193) $generated@@197 $generated@@198) ($generated@@166 $generated@@194 $generated@@197 $generated@@198)))
 :weight 0
)) (forall (($generated@@199 T@U) ($generated@@200 T@U) ($generated@@201 T@U) ($generated@@202 T@U) ($generated@@203 T@U) ($generated@@204 T@U) ) (!  (or (= $generated@@202 $generated@@204) (= ($generated@@166 ($generated@@171 $generated@@200 $generated@@201 $generated@@202 $generated@@199) $generated@@203 $generated@@204) ($generated@@166 $generated@@200 $generated@@203 $generated@@204)))
 :weight 0
))) (forall (($generated@@205 T@U) ($generated@@206 T@U) ($generated@@207 T@U) ($generated@@208 T@U) ($generated@@209 T@U) ($generated@@210 T@U) ) (!  (or true (= ($generated@@166 ($generated@@171 $generated@@206 $generated@@207 $generated@@208 $generated@@205) $generated@@209 $generated@@210) ($generated@@166 $generated@@206 $generated@@209 $generated@@210)))
 :weight 0
)))) (forall (($generated@@211 T@U) ($generated@@212 T@U) ($generated@@213 T@U) ($generated@@214 Bool) ) (! (= (type ($generated@@167 $generated@@211 $generated@@212 $generated@@213 $generated@@214)) ($generated@@168 $generated@@81 $generated@@4))
 :pattern ( ($generated@@167 $generated@@211 $generated@@212 $generated@@213 $generated@@214))
))))
(assert (forall (($generated@@215 T@U) ($generated@@216 T@U) ($generated@@217 T@U) ($generated@@218 Bool) ($generated@@219 T@U) ($generated@@220 T@U) ) (! (let (($generated@@221 ($generated@@71 (type $generated@@220))))
 (=> (and (and (and (and (= (type $generated@@215) $generated@@81) (= (type $generated@@216) ($generated@@80 $generated@@81 $generated@@82))) (= (type $generated@@217) ($generated@@70 $generated@@4))) (= (type $generated@@219) $generated@@81)) (= (type $generated@@220) ($generated@@70 $generated@@221))) (= ($generated@@0 ($generated@@166 ($generated@@167 $generated@@215 $generated@@216 $generated@@217 $generated@@218) $generated@@219 $generated@@220))  (=> (and (not (= $generated@@219 $generated@@215)) ($generated@@0 ($generated@@87 ($generated@@85 $generated@@216 $generated@@219) $generated@@217))) $generated@@218))))
 :pattern ( ($generated@@166 ($generated@@167 $generated@@215 $generated@@216 $generated@@217 $generated@@218) $generated@@219 $generated@@220))
)))
(assert (= (type $generated@@222) $generated@@68))
(assert (forall (($generated@@223 T@U) ($generated@@224 T@U) ) (!  (=> (and (= (type $generated@@223) $generated@@81) (= (type $generated@@224) ($generated@@80 $generated@@81 $generated@@82))) (= ($generated@@78 $generated@@223 $generated@@222 $generated@@224) ($generated@@78 $generated@@223 $generated@@136 $generated@@224)))
 :pattern ( ($generated@@78 $generated@@223 $generated@@222 $generated@@224))
)))
(assert (forall (($generated@@227 T@U) ($generated@@228 T@U) ) (! (= (type ($generated@@225 $generated@@227 $generated@@228)) $generated@@144)
 :pattern ( ($generated@@225 $generated@@227 $generated@@228))
)))
(assert (forall (($generated@@229 T@U) ($generated@@230 T@U) ($generated@@231 T@U) ($generated@@232 T@U) ) (!  (=> (and (and (and (= (type $generated@@229) $generated@@68) (= (type $generated@@230) $generated@@68)) (= (type $generated@@231) $generated@@153)) (= (type $generated@@232) $generated@@153)) (= ($generated@@140 ($generated@@225 $generated@@231 $generated@@232) ($generated@@143 $generated@@229 $generated@@230))  (and ($generated@@226 $generated@@231 $generated@@229) ($generated@@226 $generated@@232 $generated@@230))))
 :pattern ( ($generated@@140 ($generated@@225 $generated@@231 $generated@@232) ($generated@@143 $generated@@229 $generated@@230)))
)))
(assert (forall (($generated@@233 T@U) ($generated@@234 T@U) ) (!  (=> (and (= (type $generated@@233) $generated@@144) (= (type $generated@@234) $generated@@144)) (= ($generated@@150 $generated@@233 $generated@@234) (= $generated@@233 $generated@@234)))
 :pattern ( ($generated@@150 $generated@@233 $generated@@234))
)))
(assert (forall (($generated@@236 T@U) ) (! (= (type ($generated@@235 $generated@@236)) $generated@@68)
 :pattern ( ($generated@@235 $generated@@236))
)))
(assert (forall (($generated@@237 T@U) ($generated@@238 T@U) ) (!  (=> (and (= (type $generated@@237) ($generated@@80 $generated@@153 $generated@@4)) (= (type $generated@@238) $generated@@68)) (= ($generated@@140 $generated@@237 ($generated@@235 $generated@@238)) (forall (($generated@@239 T@U) ) (!  (=> (and (= (type $generated@@239) $generated@@153) ($generated@@0 ($generated@@85 $generated@@237 $generated@@239))) ($generated@@226 $generated@@239 $generated@@238))
 :pattern ( ($generated@@85 $generated@@237 $generated@@239))
))))
 :pattern ( ($generated@@140 $generated@@237 ($generated@@235 $generated@@238)))
)))
(assert (forall (($generated@@241 T@U) ) (! (= (type ($generated@@240 $generated@@241)) $generated@@68)
 :pattern ( ($generated@@240 $generated@@241))
)))
(assert (forall (($generated@@242 T@U) ($generated@@243 T@U) ) (!  (=> (and (= (type $generated@@242) ($generated@@80 $generated@@153 $generated@@4)) (= (type $generated@@243) $generated@@68)) (= ($generated@@140 $generated@@242 ($generated@@240 $generated@@243)) (forall (($generated@@244 T@U) ) (!  (=> (and (= (type $generated@@244) $generated@@153) ($generated@@0 ($generated@@85 $generated@@242 $generated@@244))) ($generated@@226 $generated@@244 $generated@@243))
 :pattern ( ($generated@@85 $generated@@242 $generated@@244))
))))
 :pattern ( ($generated@@140 $generated@@242 ($generated@@240 $generated@@243)))
)))
(assert (forall (($generated@@246 T@U) ) (! (let (($generated@@247 (type $generated@@246)))
(= (type ($generated@@245 $generated@@246)) $generated@@247))
 :pattern ( ($generated@@245 $generated@@246))
)))
(assert (forall (($generated@@248 T@U) ) (! (= ($generated@@245 $generated@@248) $generated@@248)
 :pattern ( ($generated@@245 $generated@@248))
)))
(assert (forall (($generated@@251 T@U) ($generated@@252 T@U) ($generated@@253 T@U) ($generated@@254 T@U) ($generated@@255 T@U) ) (!  (=> (and (and (and (and (and (= (type $generated@@251) $generated@@68) (= (type $generated@@252) $generated@@68)) (= (type $generated@@253) $generated@@153)) (= (type $generated@@254) $generated@@153)) (= (type $generated@@255) ($generated@@80 $generated@@81 $generated@@82))) ($generated@@249 $generated@@255)) (= ($generated@@78 ($generated@@225 $generated@@253 $generated@@254) ($generated@@143 $generated@@251 $generated@@252) $generated@@255)  (and ($generated@@250 $generated@@253 $generated@@251 $generated@@255) ($generated@@250 $generated@@254 $generated@@252 $generated@@255))))
 :pattern ( ($generated@@78 ($generated@@225 $generated@@253 $generated@@254) ($generated@@143 $generated@@251 $generated@@252) $generated@@255))
)))
(assert (forall (($generated@@257 T@U) ) (! (= (type ($generated@@256 $generated@@257)) $generated@@72)
 :pattern ( ($generated@@256 $generated@@257))
)))
(assert (forall (($generated@@258 T@U) ) (!  (=> (= (type $generated@@258) $generated@@144) (= ($generated@@142 $generated@@258) (= ($generated@@256 $generated@@258) $generated@@61)))
 :pattern ( ($generated@@142 $generated@@258))
)))
(assert (forall (($generated@@259 T@U) ) (!  (=> (and (= (type $generated@@259) $generated@@144) ($generated@@142 $generated@@259)) (exists (($generated@@260 T@U) ($generated@@261 T@U) ) (!  (and (and (= (type $generated@@260) $generated@@153) (= (type $generated@@261) $generated@@153)) (= $generated@@259 ($generated@@225 $generated@@260 $generated@@261)))
 :no-pattern (type $generated@@260)
 :no-pattern (type $generated@@261)
 :no-pattern ($generated $generated@@260)
 :no-pattern ($generated@@0 $generated@@260)
 :no-pattern ($generated $generated@@261)
 :no-pattern ($generated@@0 $generated@@261)
)))
 :pattern ( ($generated@@142 $generated@@259))
)))
(assert  (and (and (forall (($generated@@266 T@T) ) (= ($generated@@1 ($generated@@264 $generated@@266)) 17)) (forall (($generated@@267 T@T) ) (! (= ($generated@@265 ($generated@@264 $generated@@267)) $generated@@267)
 :pattern ( ($generated@@264 $generated@@267))
))) (forall (($generated@@268 T@T) ) (! (= (type ($generated@@262 $generated@@268)) ($generated@@264 $generated@@268))
 :pattern ( ($generated@@262 $generated@@268))
))))
(assert (forall (($generated@@269 T@T) ) (! (= ($generated@@263 ($generated@@262 $generated@@269)) 0)
 :pattern ( ($generated@@262 $generated@@269))
)))
(assert (forall (($generated@@271 T@U) ) (! (= (type ($generated@@270 $generated@@271)) $generated@@153)
 :pattern ( ($generated@@270 $generated@@271))
)))
(assert (forall (($generated@@272 T@U) ($generated@@273 T@U) ($generated@@274 T@U) ) (!  (=> (and (= (type $generated@@273) $generated@@68) (= (type $generated@@274) ($generated@@80 $generated@@81 $generated@@82))) (= ($generated@@250 ($generated@@270 $generated@@272) $generated@@273 $generated@@274) ($generated@@78 $generated@@272 $generated@@273 $generated@@274)))
 :pattern ( ($generated@@250 ($generated@@270 $generated@@272) $generated@@273 $generated@@274))
)))
(assert (forall (($generated@@277 T@T) ) (! (= (type ($generated@@276 $generated@@277)) ($generated@@80 $generated@@277 $generated@@2))
 :pattern ( ($generated@@276 $generated@@277))
)))
(assert (forall (($generated@@278 T@U) ) (! (let (($generated@@279 ($generated@@83 (type $generated@@278))))
 (=> (= (type $generated@@278) ($generated@@80 $generated@@279 $generated@@2)) (and (= (= ($generated@@275 $generated@@278) 0) (= $generated@@278 ($generated@@276 $generated@@279))) (=> (not (= ($generated@@275 $generated@@278) 0)) (exists (($generated@@280 T@U) ) (!  (and (= (type $generated@@280) $generated@@279) (< 0 ($generated ($generated@@85 $generated@@278 $generated@@280))))
 :no-pattern (type $generated@@280)
 :no-pattern ($generated $generated@@280)
 :no-pattern ($generated@@0 $generated@@280)
))))))
 :pattern ( ($generated@@275 $generated@@278))
)))
(assert  (and (and (and (and (forall (($generated@@286 T@T) ($generated@@287 T@T) ) (= ($generated@@1 ($generated@@283 $generated@@286 $generated@@287)) 18)) (forall (($generated@@288 T@T) ($generated@@289 T@T) ) (! (= ($generated@@284 ($generated@@283 $generated@@288 $generated@@289)) $generated@@288)
 :pattern ( ($generated@@283 $generated@@288 $generated@@289))
))) (forall (($generated@@290 T@T) ($generated@@291 T@T) ) (! (= ($generated@@285 ($generated@@283 $generated@@290 $generated@@291)) $generated@@291)
 :pattern ( ($generated@@283 $generated@@290 $generated@@291))
))) (forall (($generated@@292 T@U) ) (! (let (($generated@@293 ($generated@@284 (type $generated@@292))))
(= (type ($generated@@281 $generated@@292)) ($generated@@80 $generated@@293 $generated@@4)))
 :pattern ( ($generated@@281 $generated@@292))
))) (forall (($generated@@294 T@T) ($generated@@295 T@T) ) (! (= (type ($generated@@282 $generated@@294 $generated@@295)) ($generated@@283 $generated@@294 $generated@@295))
 :pattern ( ($generated@@282 $generated@@294 $generated@@295))
))))
(assert (forall (($generated@@296 T@U) ($generated@@297 T@T) ) (! (let (($generated@@298 (type $generated@@296)))
 (not ($generated@@0 ($generated@@85 ($generated@@281 ($generated@@282 $generated@@298 $generated@@297)) $generated@@296))))
 :pattern ( (let (($generated@@298 (type $generated@@296)))
($generated@@85 ($generated@@281 ($generated@@282 $generated@@298 $generated@@297)) $generated@@296)))
)))
(assert  (and (and (and (and (forall (($generated@@304 T@T) ($generated@@305 T@T) ) (= ($generated@@1 ($generated@@301 $generated@@304 $generated@@305)) 19)) (forall (($generated@@306 T@T) ($generated@@307 T@T) ) (! (= ($generated@@302 ($generated@@301 $generated@@306 $generated@@307)) $generated@@306)
 :pattern ( ($generated@@301 $generated@@306 $generated@@307))
))) (forall (($generated@@308 T@T) ($generated@@309 T@T) ) (! (= ($generated@@303 ($generated@@301 $generated@@308 $generated@@309)) $generated@@309)
 :pattern ( ($generated@@301 $generated@@308 $generated@@309))
))) (forall (($generated@@310 T@U) ) (! (let (($generated@@311 ($generated@@302 (type $generated@@310))))
(= (type ($generated@@299 $generated@@310)) ($generated@@80 $generated@@311 $generated@@4)))
 :pattern ( ($generated@@299 $generated@@310))
))) (forall (($generated@@312 T@T) ($generated@@313 T@T) ) (! (= (type ($generated@@300 $generated@@312 $generated@@313)) ($generated@@301 $generated@@312 $generated@@313))
 :pattern ( ($generated@@300 $generated@@312 $generated@@313))
))))
(assert (forall (($generated@@314 T@U) ($generated@@315 T@T) ) (! (let (($generated@@316 (type $generated@@314)))
 (not ($generated@@0 ($generated@@85 ($generated@@299 ($generated@@300 $generated@@316 $generated@@315)) $generated@@314))))
 :pattern ( (let (($generated@@316 (type $generated@@314)))
($generated@@85 ($generated@@299 ($generated@@300 $generated@@316 $generated@@315)) $generated@@314)))
)))
(assert (forall (($generated@@317 T@U) ) (! (let (($generated@@318 ($generated@@83 (type $generated@@317))))
 (=> (= (type $generated@@317) ($generated@@80 $generated@@318 $generated@@2)) (= ($generated@@159 $generated@@317) (forall (($generated@@319 T@U) ) (!  (=> (= (type $generated@@319) $generated@@318) (and (<= 0 ($generated ($generated@@85 $generated@@317 $generated@@319))) (<= ($generated ($generated@@85 $generated@@317 $generated@@319)) ($generated@@275 $generated@@317))))
 :pattern ( ($generated@@85 $generated@@317 $generated@@319))
)))))
 :pattern ( ($generated@@159 $generated@@317))
)))
(assert (forall (($generated@@321 T@T) ($generated@@322 T@U) ) (! (= (type ($generated@@320 $generated@@321 $generated@@322)) $generated@@321)
 :pattern ( ($generated@@320 $generated@@321 $generated@@322))
)))
(assert (forall (($generated@@323 T@U) ) (!  (=> (and (= (type $generated@@323) $generated@@153) ($generated@@226 $generated@@323 $generated@@136)) (and (= ($generated@@270 ($generated@@320 $generated@@81 $generated@@323)) $generated@@323) ($generated@@140 ($generated@@320 $generated@@81 $generated@@323) $generated@@136)))
 :pattern ( ($generated@@226 $generated@@323 $generated@@136))
)))
(assert (forall (($generated@@324 T@U) ) (!  (=> (and (= (type $generated@@324) $generated@@153) ($generated@@226 $generated@@324 $generated@@222)) (and (= ($generated@@270 ($generated@@320 $generated@@81 $generated@@324)) $generated@@324) ($generated@@140 ($generated@@320 $generated@@81 $generated@@324) $generated@@222)))
 :pattern ( ($generated@@226 $generated@@324 $generated@@222))
)))
(assert (forall (($generated@@325 T@U) ) (!  (=> (= (type $generated@@325) $generated@@81) (= ($generated@@140 $generated@@325 $generated@@222)  (and ($generated@@140 $generated@@325 $generated@@136) (not (= $generated@@325 $generated@@137)))))
 :pattern ( ($generated@@140 $generated@@325 $generated@@222))
)))
(assert (forall (($generated@@326 T@U) ) (! (let (($generated@@327 ($generated@@285 (type $generated@@326))))
(let (($generated@@328 ($generated@@284 (type $generated@@326))))
 (=> (= (type $generated@@326) ($generated@@283 $generated@@328 $generated@@327)) (or (= $generated@@326 ($generated@@282 $generated@@328 $generated@@327)) (exists (($generated@@329 T@U) ) (!  (and (= (type $generated@@329) $generated@@328) ($generated@@0 ($generated@@85 ($generated@@281 $generated@@326) $generated@@329)))
 :no-pattern (type $generated@@329)
 :no-pattern ($generated $generated@@329)
 :no-pattern ($generated@@0 $generated@@329)
))))))
 :pattern ( ($generated@@281 $generated@@326))
)))
(assert (forall (($generated@@331 T@U) ) (! (let (($generated@@332 ($generated@@285 (type $generated@@331))))
(= (type ($generated@@330 $generated@@331)) ($generated@@80 $generated@@332 $generated@@4)))
 :pattern ( ($generated@@330 $generated@@331))
)))
(assert (forall (($generated@@333 T@U) ) (! (let (($generated@@334 ($generated@@285 (type $generated@@333))))
(let (($generated@@335 ($generated@@284 (type $generated@@333))))
 (=> (= (type $generated@@333) ($generated@@283 $generated@@335 $generated@@334)) (or (= $generated@@333 ($generated@@282 $generated@@335 $generated@@334)) (exists (($generated@@336 T@U) ) (!  (and (= (type $generated@@336) $generated@@334) ($generated@@0 ($generated@@85 ($generated@@330 $generated@@333) $generated@@336)))
 :no-pattern (type $generated@@336)
 :no-pattern ($generated $generated@@336)
 :no-pattern ($generated@@0 $generated@@336)
))))))
 :pattern ( ($generated@@330 $generated@@333))
)))
(assert (forall (($generated@@337 T@U) ) (! (let (($generated@@338 ($generated@@303 (type $generated@@337))))
(let (($generated@@339 ($generated@@302 (type $generated@@337))))
 (=> (= (type $generated@@337) ($generated@@301 $generated@@339 $generated@@338)) (or (= $generated@@337 ($generated@@300 $generated@@339 $generated@@338)) (exists (($generated@@340 T@U) ) (!  (and (= (type $generated@@340) $generated@@339) ($generated@@0 ($generated@@85 ($generated@@299 $generated@@337) $generated@@340)))
 :no-pattern (type $generated@@340)
 :no-pattern ($generated $generated@@340)
 :no-pattern ($generated@@0 $generated@@340)
))))))
 :pattern ( ($generated@@299 $generated@@337))
)))
(assert (forall (($generated@@342 T@U) ) (! (let (($generated@@343 ($generated@@303 (type $generated@@342))))
(= (type ($generated@@341 $generated@@342)) ($generated@@80 $generated@@343 $generated@@4)))
 :pattern ( ($generated@@341 $generated@@342))
)))
(assert (forall (($generated@@344 T@U) ) (! (let (($generated@@345 ($generated@@303 (type $generated@@344))))
(let (($generated@@346 ($generated@@302 (type $generated@@344))))
 (=> (= (type $generated@@344) ($generated@@301 $generated@@346 $generated@@345)) (or (= $generated@@344 ($generated@@300 $generated@@346 $generated@@345)) (exists (($generated@@347 T@U) ) (!  (and (= (type $generated@@347) $generated@@345) ($generated@@0 ($generated@@85 ($generated@@341 $generated@@344) $generated@@347)))
 :no-pattern (type $generated@@347)
 :no-pattern ($generated $generated@@347)
 :no-pattern ($generated@@0 $generated@@347)
))))))
 :pattern ( ($generated@@341 $generated@@344))
)))
(assert (forall (($generated@@348 T@U) ($generated@@349 T@U) ) (!  (=> (and (= (type $generated@@348) ($generated@@80 $generated@@153 $generated@@2)) (= (type $generated@@349) $generated@@68)) (= ($generated@@140 $generated@@348 ($generated@@158 $generated@@349)) (forall (($generated@@350 T@U) ) (!  (=> (and (= (type $generated@@350) $generated@@153) (< 0 ($generated ($generated@@85 $generated@@348 $generated@@350)))) ($generated@@226 $generated@@350 $generated@@349))
 :pattern ( ($generated@@85 $generated@@348 $generated@@350))
))))
 :pattern ( ($generated@@140 $generated@@348 ($generated@@158 $generated@@349)))
)))
(assert (forall (($generated@@351 T@U) ($generated@@352 T@U) ($generated@@353 T@U) ) (!  (=> (and (and (= (type $generated@@351) ($generated@@80 $generated@@153 $generated@@4)) (= (type $generated@@352) $generated@@68)) (= (type $generated@@353) ($generated@@80 $generated@@81 $generated@@82))) (= ($generated@@78 $generated@@351 ($generated@@235 $generated@@352) $generated@@353) (forall (($generated@@354 T@U) ) (!  (=> (and (= (type $generated@@354) $generated@@153) ($generated@@0 ($generated@@85 $generated@@351 $generated@@354))) ($generated@@250 $generated@@354 $generated@@352 $generated@@353))
 :pattern ( ($generated@@85 $generated@@351 $generated@@354))
))))
 :pattern ( ($generated@@78 $generated@@351 ($generated@@235 $generated@@352) $generated@@353))
)))
(assert (forall (($generated@@355 T@U) ($generated@@356 T@U) ($generated@@357 T@U) ) (!  (=> (and (and (= (type $generated@@355) ($generated@@80 $generated@@153 $generated@@4)) (= (type $generated@@356) $generated@@68)) (= (type $generated@@357) ($generated@@80 $generated@@81 $generated@@82))) (= ($generated@@78 $generated@@355 ($generated@@240 $generated@@356) $generated@@357) (forall (($generated@@358 T@U) ) (!  (=> (and (= (type $generated@@358) $generated@@153) ($generated@@0 ($generated@@85 $generated@@355 $generated@@358))) ($generated@@250 $generated@@358 $generated@@356 $generated@@357))
 :pattern ( ($generated@@85 $generated@@355 $generated@@358))
))))
 :pattern ( ($generated@@78 $generated@@355 ($generated@@240 $generated@@356) $generated@@357))
)))
(assert (forall (($generated@@359 T@U) ) (! (let (($generated@@360 (type $generated@@359)))
(= ($generated ($generated@@85 ($generated@@276 $generated@@360) $generated@@359)) 0))
 :pattern ( (let (($generated@@360 (type $generated@@359)))
($generated@@85 ($generated@@276 $generated@@360) $generated@@359)))
)))
(assert  (and (forall (($generated@@363 T@U) ) (! (= (type ($generated@@361 $generated@@363)) ($generated@@80 $generated@@153 $generated@@4))
 :pattern ( ($generated@@361 $generated@@363))
)) (forall (($generated@@364 T@U) ) (! (let (($generated@@365 ($generated@@285 (type $generated@@364))))
(let (($generated@@366 ($generated@@284 (type $generated@@364))))
(= (type ($generated@@362 $generated@@364)) ($generated@@80 $generated@@366 $generated@@365))))
 :pattern ( ($generated@@362 $generated@@364))
))))
(assert (forall (($generated@@367 T@U) ($generated@@368 T@U) ) (!  (=> (and (= (type $generated@@367) ($generated@@283 $generated@@153 $generated@@153)) (= (type $generated@@368) $generated@@153)) (= ($generated@@0 ($generated@@85 ($generated@@361 $generated@@367) $generated@@368))  (and ($generated@@0 ($generated@@85 ($generated@@281 $generated@@367) ($generated@@151 ($generated@@320 $generated@@144 $generated@@368)))) (= ($generated@@85 ($generated@@362 $generated@@367) ($generated@@151 ($generated@@320 $generated@@144 $generated@@368))) ($generated@@152 ($generated@@320 $generated@@144 $generated@@368))))))
 :pattern ( ($generated@@85 ($generated@@361 $generated@@367) $generated@@368))
)))
(assert  (and (forall (($generated@@371 T@U) ) (! (= (type ($generated@@369 $generated@@371)) ($generated@@80 $generated@@153 $generated@@4))
 :pattern ( ($generated@@369 $generated@@371))
)) (forall (($generated@@372 T@U) ) (! (let (($generated@@373 ($generated@@303 (type $generated@@372))))
(let (($generated@@374 ($generated@@302 (type $generated@@372))))
(= (type ($generated@@370 $generated@@372)) ($generated@@80 $generated@@374 $generated@@373))))
 :pattern ( ($generated@@370 $generated@@372))
))))
(assert (forall (($generated@@375 T@U) ($generated@@376 T@U) ) (!  (=> (and (= (type $generated@@375) ($generated@@301 $generated@@153 $generated@@153)) (= (type $generated@@376) $generated@@153)) (= ($generated@@0 ($generated@@85 ($generated@@369 $generated@@375) $generated@@376))  (and ($generated@@0 ($generated@@85 ($generated@@299 $generated@@375) ($generated@@151 ($generated@@320 $generated@@144 $generated@@376)))) (= ($generated@@85 ($generated@@370 $generated@@375) ($generated@@151 ($generated@@320 $generated@@144 $generated@@376))) ($generated@@152 ($generated@@320 $generated@@144 $generated@@376))))))
 :pattern ( ($generated@@85 ($generated@@369 $generated@@375) $generated@@376))
)))
(assert (forall (($generated@@377 T@U) ($generated@@378 T@U) ) (! (let (($generated@@379 (type $generated@@378)))
(let (($generated@@380 ($generated@@284 (type $generated@@377))))
 (=> (= (type $generated@@377) ($generated@@283 $generated@@380 $generated@@379)) (= ($generated@@0 ($generated@@85 ($generated@@330 $generated@@377) $generated@@378)) (exists (($generated@@381 T@U) ) (!  (and (= (type $generated@@381) $generated@@380) (and ($generated@@0 ($generated@@85 ($generated@@281 $generated@@377) $generated@@381)) (= $generated@@378 ($generated@@85 ($generated@@362 $generated@@377) $generated@@381))))
 :pattern ( ($generated@@85 ($generated@@281 $generated@@377) $generated@@381))
 :pattern ( ($generated@@85 ($generated@@362 $generated@@377) $generated@@381))
))))))
 :pattern ( ($generated@@85 ($generated@@330 $generated@@377) $generated@@378))
)))
(assert (forall (($generated@@382 T@U) ($generated@@383 T@U) ) (! (let (($generated@@384 (type $generated@@383)))
(let (($generated@@385 ($generated@@302 (type $generated@@382))))
 (=> (= (type $generated@@382) ($generated@@301 $generated@@385 $generated@@384)) (= ($generated@@0 ($generated@@85 ($generated@@341 $generated@@382) $generated@@383)) (exists (($generated@@386 T@U) ) (!  (and (= (type $generated@@386) $generated@@385) (and ($generated@@0 ($generated@@85 ($generated@@299 $generated@@382) $generated@@386)) (= $generated@@383 ($generated@@85 ($generated@@370 $generated@@382) $generated@@386))))
 :pattern ( ($generated@@85 ($generated@@299 $generated@@382) $generated@@386))
 :pattern ( ($generated@@85 ($generated@@370 $generated@@382) $generated@@386))
))))))
 :pattern ( ($generated@@85 ($generated@@341 $generated@@382) $generated@@383))
)))
(assert (forall (($generated@@388 T@U) ($generated@@389 T@U) ) (! (= (type ($generated@@387 $generated@@388 $generated@@389)) $generated@@68)
 :pattern ( ($generated@@387 $generated@@388 $generated@@389))
)))
(assert (forall (($generated@@390 T@U) ($generated@@391 T@U) ($generated@@392 T@U) ($generated@@393 T@U) ) (!  (=> (and (and (and (= (type $generated@@390) ($generated@@283 $generated@@153 $generated@@153)) (= (type $generated@@391) $generated@@68)) (= (type $generated@@392) $generated@@68)) (= (type $generated@@393) ($generated@@80 $generated@@81 $generated@@82))) (= ($generated@@78 $generated@@390 ($generated@@387 $generated@@391 $generated@@392) $generated@@393) (forall (($generated@@394 T@U) ) (!  (=> (and (= (type $generated@@394) $generated@@153) ($generated@@0 ($generated@@85 ($generated@@281 $generated@@390) $generated@@394))) (and ($generated@@250 ($generated@@85 ($generated@@362 $generated@@390) $generated@@394) $generated@@392 $generated@@393) ($generated@@250 $generated@@394 $generated@@391 $generated@@393)))
 :pattern ( ($generated@@85 ($generated@@362 $generated@@390) $generated@@394))
 :pattern ( ($generated@@85 ($generated@@281 $generated@@390) $generated@@394))
))))
 :pattern ( ($generated@@78 $generated@@390 ($generated@@387 $generated@@391 $generated@@392) $generated@@393))
)))
(assert (forall (($generated@@396 T@U) ($generated@@397 T@U) ) (! (= (type ($generated@@395 $generated@@396 $generated@@397)) $generated@@68)
 :pattern ( ($generated@@395 $generated@@396 $generated@@397))
)))
(assert (forall (($generated@@398 T@U) ($generated@@399 T@U) ($generated@@400 T@U) ($generated@@401 T@U) ) (!  (=> (and (and (and (= (type $generated@@398) ($generated@@301 $generated@@153 $generated@@153)) (= (type $generated@@399) $generated@@68)) (= (type $generated@@400) $generated@@68)) (= (type $generated@@401) ($generated@@80 $generated@@81 $generated@@82))) (= ($generated@@78 $generated@@398 ($generated@@395 $generated@@399 $generated@@400) $generated@@401) (forall (($generated@@402 T@U) ) (!  (=> (and (= (type $generated@@402) $generated@@153) ($generated@@0 ($generated@@85 ($generated@@299 $generated@@398) $generated@@402))) (and ($generated@@250 ($generated@@85 ($generated@@370 $generated@@398) $generated@@402) $generated@@400 $generated@@401) ($generated@@250 $generated@@402 $generated@@399 $generated@@401)))
 :pattern ( ($generated@@85 ($generated@@370 $generated@@398) $generated@@402))
 :pattern ( ($generated@@85 ($generated@@299 $generated@@398) $generated@@402))
))))
 :pattern ( ($generated@@78 $generated@@398 ($generated@@395 $generated@@399 $generated@@400) $generated@@401))
)))
(assert (forall (($generated@@404 T@T) ) (! (= (type ($generated@@403 $generated@@404)) ($generated@@80 $generated@@404 $generated@@4))
 :pattern ( ($generated@@403 $generated@@404))
)))
(assert (forall (($generated@@405 T@U) ) (! (let (($generated@@406 ($generated@@303 (type $generated@@405))))
(let (($generated@@407 ($generated@@302 (type $generated@@405))))
 (=> (= (type $generated@@405) ($generated@@301 $generated@@407 $generated@@406)) (= (= $generated@@405 ($generated@@300 $generated@@407 $generated@@406)) (= ($generated@@299 $generated@@405) ($generated@@403 $generated@@407))))))
 :pattern ( ($generated@@299 $generated@@405))
)))
(assert (forall (($generated@@408 T@U) ) (! (let (($generated@@409 ($generated@@303 (type $generated@@408))))
(let (($generated@@410 ($generated@@302 (type $generated@@408))))
 (=> (= (type $generated@@408) ($generated@@301 $generated@@410 $generated@@409)) (= (= $generated@@408 ($generated@@300 $generated@@410 $generated@@409)) (= ($generated@@341 $generated@@408) ($generated@@403 $generated@@409))))))
 :pattern ( ($generated@@341 $generated@@408))
)))
(assert (forall (($generated@@411 T@U) ) (! (let (($generated@@412 ($generated@@303 (type $generated@@411))))
(let (($generated@@413 ($generated@@302 (type $generated@@411))))
 (=> (= (type $generated@@411) ($generated@@301 $generated@@413 $generated@@412)) (= (= $generated@@411 ($generated@@300 $generated@@413 $generated@@412)) (= ($generated@@369 $generated@@411) ($generated@@403 $generated@@153))))))
 :pattern ( ($generated@@369 $generated@@411))
)))
(assert (forall (($generated@@414 T@U) ) (! (let (($generated@@415 ($generated@@285 (type $generated@@414))))
(let (($generated@@416 ($generated@@284 (type $generated@@414))))
 (=> (= (type $generated@@414) ($generated@@283 $generated@@416 $generated@@415)) (or (= $generated@@414 ($generated@@282 $generated@@416 $generated@@415)) (exists (($generated@@417 T@U) ($generated@@418 T@U) ) (!  (and (and (= (type $generated@@417) $generated@@153) (= (type $generated@@418) $generated@@153)) ($generated@@0 ($generated@@85 ($generated@@361 $generated@@414) ($generated@@270 ($generated@@225 $generated@@417 $generated@@418)))))
 :no-pattern (type $generated@@417)
 :no-pattern (type $generated@@418)
 :no-pattern ($generated $generated@@417)
 :no-pattern ($generated@@0 $generated@@417)
 :no-pattern ($generated $generated@@418)
 :no-pattern ($generated@@0 $generated@@418)
))))))
 :pattern ( ($generated@@361 $generated@@414))
)))
(assert (forall (($generated@@419 T@U) ) (! (let (($generated@@420 ($generated@@303 (type $generated@@419))))
(let (($generated@@421 ($generated@@302 (type $generated@@419))))
 (=> (= (type $generated@@419) ($generated@@301 $generated@@421 $generated@@420)) (or (= $generated@@419 ($generated@@300 $generated@@421 $generated@@420)) (exists (($generated@@422 T@U) ($generated@@423 T@U) ) (!  (and (and (= (type $generated@@422) $generated@@153) (= (type $generated@@423) $generated@@153)) ($generated@@0 ($generated@@85 ($generated@@369 $generated@@419) ($generated@@270 ($generated@@225 $generated@@422 $generated@@423)))))
 :no-pattern (type $generated@@422)
 :no-pattern (type $generated@@423)
 :no-pattern ($generated $generated@@422)
 :no-pattern ($generated@@0 $generated@@422)
 :no-pattern ($generated $generated@@423)
 :no-pattern ($generated@@0 $generated@@423)
))))))
 :pattern ( ($generated@@369 $generated@@419))
)))
(assert (forall (($generated@@424 T@U) ) (!  (=> (and (= (type $generated@@424) $generated@@153) ($generated@@226 $generated@@424 $generated@@46)) (and (= ($generated@@270 ($generated@@320 $generated@@2 $generated@@424)) $generated@@424) ($generated@@140 ($generated@@320 $generated@@2 $generated@@424) $generated@@46)))
 :pattern ( ($generated@@226 $generated@@424 $generated@@46))
)))
(assert (forall (($generated@@425 T@U) ) (!  (=> (and (= (type $generated@@425) $generated@@153) ($generated@@226 $generated@@425 $generated@@47)) (and (= ($generated@@270 ($generated@@320 $generated@@3 $generated@@425)) $generated@@425) ($generated@@140 ($generated@@320 $generated@@3 $generated@@425) $generated@@47)))
 :pattern ( ($generated@@226 $generated@@425 $generated@@47))
)))
(assert (forall (($generated@@426 T@U) ) (!  (=> (and (= (type $generated@@426) $generated@@153) ($generated@@226 $generated@@426 $generated@@44)) (and (= ($generated@@270 ($generated@@320 $generated@@4 $generated@@426)) $generated@@426) ($generated@@140 ($generated@@320 $generated@@4 $generated@@426) $generated@@44)))
 :pattern ( ($generated@@226 $generated@@426 $generated@@44))
)))
(assert (= ($generated@@1 $generated@@427) 20))
(assert (forall (($generated@@428 T@U) ) (!  (=> (and (= (type $generated@@428) $generated@@153) ($generated@@226 $generated@@428 $generated@@45)) (and (= ($generated@@270 ($generated@@320 $generated@@427 $generated@@428)) $generated@@428) ($generated@@140 ($generated@@320 $generated@@427 $generated@@428) $generated@@45)))
 :pattern ( ($generated@@226 $generated@@428 $generated@@45))
)))
(assert (forall (($generated@@429 T@U) ($generated@@430 T@U) ) (!  (=> (= (type $generated@@430) $generated@@68) (= ($generated@@226 ($generated@@270 $generated@@429) $generated@@430) ($generated@@140 $generated@@429 $generated@@430)))
 :pattern ( ($generated@@226 ($generated@@270 $generated@@429) $generated@@430))
)))
(assert (forall (($generated@@431 T@U) ) (! (let (($generated@@432 ($generated@@83 (type $generated@@431))))
 (=> (= (type $generated@@431) ($generated@@80 $generated@@432 $generated@@2)) (<= 0 ($generated@@275 $generated@@431))))
 :pattern ( ($generated@@275 $generated@@431))
)))
(assert (forall (($generated@@433 T@U) ) (! (let (($generated@@434 ($generated@@265 (type $generated@@433))))
 (=> (= (type $generated@@433) ($generated@@264 $generated@@434)) (<= 0 ($generated@@263 $generated@@433))))
 :pattern ( ($generated@@263 $generated@@433))
)))
(assert (forall (($generated@@436 T@U) ) (! (= (type ($generated@@435 $generated@@436)) $generated@@68)
 :pattern ( ($generated@@435 $generated@@436))
)))
(assert (forall (($generated@@437 T@U) ($generated@@438 T@U) ) (!  (=> (and (= (type $generated@@437) $generated@@68) (= (type $generated@@438) $generated@@68)) (= ($generated@@435 ($generated@@387 $generated@@437 $generated@@438)) $generated@@437))
 :pattern ( ($generated@@387 $generated@@437 $generated@@438))
)))
(assert (forall (($generated@@440 T@U) ) (! (= (type ($generated@@439 $generated@@440)) $generated@@68)
 :pattern ( ($generated@@439 $generated@@440))
)))
(assert (forall (($generated@@441 T@U) ($generated@@442 T@U) ) (!  (=> (and (= (type $generated@@441) $generated@@68) (= (type $generated@@442) $generated@@68)) (= ($generated@@439 ($generated@@387 $generated@@441 $generated@@442)) $generated@@442))
 :pattern ( ($generated@@387 $generated@@441 $generated@@442))
)))
(assert (forall (($generated@@443 T@U) ($generated@@444 T@U) ) (!  (=> (and (= (type $generated@@443) $generated@@68) (= (type $generated@@444) $generated@@68)) (= ($generated@@76 ($generated@@387 $generated@@443 $generated@@444)) $generated@@58))
 :pattern ( ($generated@@387 $generated@@443 $generated@@444))
)))
(assert (forall (($generated@@446 T@U) ) (! (= (type ($generated@@445 $generated@@446)) $generated@@68)
 :pattern ( ($generated@@445 $generated@@446))
)))
(assert (forall (($generated@@447 T@U) ($generated@@448 T@U) ) (!  (=> (and (= (type $generated@@447) $generated@@68) (= (type $generated@@448) $generated@@68)) (= ($generated@@445 ($generated@@395 $generated@@447 $generated@@448)) $generated@@447))
 :pattern ( ($generated@@395 $generated@@447 $generated@@448))
)))
(assert (forall (($generated@@450 T@U) ) (! (= (type ($generated@@449 $generated@@450)) $generated@@68)
 :pattern ( ($generated@@449 $generated@@450))
)))
(assert (forall (($generated@@451 T@U) ($generated@@452 T@U) ) (!  (=> (and (= (type $generated@@451) $generated@@68) (= (type $generated@@452) $generated@@68)) (= ($generated@@449 ($generated@@395 $generated@@451 $generated@@452)) $generated@@452))
 :pattern ( ($generated@@395 $generated@@451 $generated@@452))
)))
(assert (forall (($generated@@453 T@U) ($generated@@454 T@U) ) (!  (=> (and (= (type $generated@@453) $generated@@68) (= (type $generated@@454) $generated@@68)) (= ($generated@@76 ($generated@@395 $generated@@453 $generated@@454)) $generated@@59))
 :pattern ( ($generated@@395 $generated@@453 $generated@@454))
)))
(assert (forall (($generated@@455 T@U) ($generated@@456 T@U) ) (!  (=> (and (= (type $generated@@455) $generated@@153) (= (type $generated@@456) $generated@@153)) (= ($generated@@256 ($generated@@225 $generated@@455 $generated@@456)) $generated@@61))
 :pattern ( ($generated@@225 $generated@@455 $generated@@456))
)))
(assert (forall (($generated@@458 T@U) ) (! (= (type ($generated@@457 $generated@@458)) $generated@@68)
 :pattern ( ($generated@@457 $generated@@458))
)))
(assert (forall (($generated@@459 T@U) ($generated@@460 T@U) ) (!  (=> (and (= (type $generated@@459) $generated@@68) (= (type $generated@@460) $generated@@68)) (= ($generated@@457 ($generated@@143 $generated@@459 $generated@@460)) $generated@@459))
 :pattern ( ($generated@@143 $generated@@459 $generated@@460))
)))
(assert (forall (($generated@@462 T@U) ) (! (= (type ($generated@@461 $generated@@462)) $generated@@68)
 :pattern ( ($generated@@461 $generated@@462))
)))
(assert (forall (($generated@@463 T@U) ($generated@@464 T@U) ) (!  (=> (and (= (type $generated@@463) $generated@@68) (= (type $generated@@464) $generated@@68)) (= ($generated@@461 ($generated@@143 $generated@@463 $generated@@464)) $generated@@464))
 :pattern ( ($generated@@143 $generated@@463 $generated@@464))
)))
(assert (forall (($generated@@465 T@U) ($generated@@466 T@U) ) (!  (=> (and (= (type $generated@@465) $generated@@153) (= (type $generated@@466) $generated@@153)) (= ($generated@@151 ($generated@@225 $generated@@465 $generated@@466)) $generated@@465))
 :pattern ( ($generated@@225 $generated@@465 $generated@@466))
)))
(assert (forall (($generated@@467 T@U) ($generated@@468 T@U) ) (!  (=> (and (= (type $generated@@467) $generated@@153) (= (type $generated@@468) $generated@@153)) (= ($generated@@152 ($generated@@225 $generated@@467 $generated@@468)) $generated@@468))
 :pattern ( ($generated@@225 $generated@@467 $generated@@468))
)))
(assert  (and (forall (($generated@@471 T@U) ) (! (= (type ($generated@@469 $generated@@471)) $generated@@68)
 :pattern ( ($generated@@469 $generated@@471))
)) (forall (($generated@@472 T@U) ($generated@@473 Int) ) (! (let (($generated@@474 ($generated@@265 (type $generated@@472))))
(= (type ($generated@@470 $generated@@472 $generated@@473)) $generated@@474))
 :pattern ( ($generated@@470 $generated@@472 $generated@@473))
))))
(assert (forall (($generated@@475 T@U) ($generated@@476 T@U) ($generated@@477 T@U) ) (!  (=> (and (and (= (type $generated@@475) ($generated@@264 $generated@@153)) (= (type $generated@@476) $generated@@68)) (= (type $generated@@477) ($generated@@80 $generated@@81 $generated@@82))) (= ($generated@@78 $generated@@475 ($generated@@469 $generated@@476) $generated@@477) (forall (($generated@@478 Int) ) (!  (=> (and (<= 0 $generated@@478) (< $generated@@478 ($generated@@263 $generated@@475))) ($generated@@250 ($generated@@470 $generated@@475 $generated@@478) $generated@@476 $generated@@477))
 :pattern ( ($generated@@470 $generated@@475 $generated@@478))
))))
 :pattern ( ($generated@@78 $generated@@475 ($generated@@469 $generated@@476) $generated@@477))
)))
(assert (forall (($generated@@480 Int) ) (! (= ($generated@@479 ($generated@@79 $generated@@480)) $generated@@480)
 :pattern ( ($generated@@79 $generated@@480))
)))
(assert (forall (($generated@@482 T@U) ) (! (= (type ($generated@@481 $generated@@482)) $generated@@68)
 :pattern ( ($generated@@481 $generated@@482))
)))
(assert (forall (($generated@@483 T@U) ) (!  (=> (= (type $generated@@483) $generated@@68) (= ($generated@@481 ($generated@@235 $generated@@483)) $generated@@483))
 :pattern ( ($generated@@235 $generated@@483))
)))
(assert (forall (($generated@@484 T@U) ) (!  (=> (= (type $generated@@484) $generated@@68) (= ($generated@@76 ($generated@@235 $generated@@484)) $generated@@54))
 :pattern ( ($generated@@235 $generated@@484))
)))
(assert (forall (($generated@@486 T@U) ) (! (= (type ($generated@@485 $generated@@486)) $generated@@68)
 :pattern ( ($generated@@485 $generated@@486))
)))
(assert (forall (($generated@@487 T@U) ) (!  (=> (= (type $generated@@487) $generated@@68) (= ($generated@@485 ($generated@@240 $generated@@487)) $generated@@487))
 :pattern ( ($generated@@240 $generated@@487))
)))
(assert (forall (($generated@@488 T@U) ) (!  (=> (= (type $generated@@488) $generated@@68) (= ($generated@@76 ($generated@@240 $generated@@488)) $generated@@55))
 :pattern ( ($generated@@240 $generated@@488))
)))
(assert (forall (($generated@@490 T@U) ) (! (= (type ($generated@@489 $generated@@490)) $generated@@68)
 :pattern ( ($generated@@489 $generated@@490))
)))
(assert (forall (($generated@@491 T@U) ) (!  (=> (= (type $generated@@491) $generated@@68) (= ($generated@@489 ($generated@@158 $generated@@491)) $generated@@491))
 :pattern ( ($generated@@158 $generated@@491))
)))
(assert (forall (($generated@@492 T@U) ) (!  (=> (= (type $generated@@492) $generated@@68) (= ($generated@@76 ($generated@@158 $generated@@492)) $generated@@56))
 :pattern ( ($generated@@158 $generated@@492))
)))
(assert (forall (($generated@@494 T@U) ) (! (= (type ($generated@@493 $generated@@494)) $generated@@68)
 :pattern ( ($generated@@493 $generated@@494))
)))
(assert (forall (($generated@@495 T@U) ) (!  (=> (= (type $generated@@495) $generated@@68) (= ($generated@@493 ($generated@@469 $generated@@495)) $generated@@495))
 :pattern ( ($generated@@469 $generated@@495))
)))
(assert (forall (($generated@@496 T@U) ) (!  (=> (= (type $generated@@496) $generated@@68) (= ($generated@@76 ($generated@@469 $generated@@496)) $generated@@57))
 :pattern ( ($generated@@469 $generated@@496))
)))
(assert (forall (($generated@@497 T@U) ) (! (let (($generated@@498 (type $generated@@497)))
(= ($generated@@320 $generated@@498 ($generated@@270 $generated@@497)) $generated@@497))
 :pattern ( ($generated@@270 $generated@@497))
)))
(assert (forall (($generated@@499 T@U) ($generated@@500 T@U) ($generated@@501 T@U) ) (!  (=> (and (and (= (type $generated@@499) ($generated@@283 $generated@@153 $generated@@153)) (= (type $generated@@500) $generated@@68)) (= (type $generated@@501) $generated@@68)) (= ($generated@@140 $generated@@499 ($generated@@387 $generated@@500 $generated@@501)) (forall (($generated@@502 T@U) ) (!  (=> (and (= (type $generated@@502) $generated@@153) ($generated@@0 ($generated@@85 ($generated@@281 $generated@@499) $generated@@502))) (and ($generated@@226 ($generated@@85 ($generated@@362 $generated@@499) $generated@@502) $generated@@501) ($generated@@226 $generated@@502 $generated@@500)))
 :pattern ( ($generated@@85 ($generated@@362 $generated@@499) $generated@@502))
 :pattern ( ($generated@@85 ($generated@@281 $generated@@499) $generated@@502))
))))
 :pattern ( ($generated@@140 $generated@@499 ($generated@@387 $generated@@500 $generated@@501)))
)))
(assert (forall (($generated@@503 T@U) ($generated@@504 T@U) ($generated@@505 T@U) ) (!  (=> (and (and (= (type $generated@@503) ($generated@@301 $generated@@153 $generated@@153)) (= (type $generated@@504) $generated@@68)) (= (type $generated@@505) $generated@@68)) (= ($generated@@140 $generated@@503 ($generated@@395 $generated@@504 $generated@@505)) (forall (($generated@@506 T@U) ) (!  (=> (and (= (type $generated@@506) $generated@@153) ($generated@@0 ($generated@@85 ($generated@@299 $generated@@503) $generated@@506))) (and ($generated@@226 ($generated@@85 ($generated@@370 $generated@@503) $generated@@506) $generated@@505) ($generated@@226 $generated@@506 $generated@@504)))
 :pattern ( ($generated@@85 ($generated@@370 $generated@@503) $generated@@506))
 :pattern ( ($generated@@85 ($generated@@299 $generated@@503) $generated@@506))
))))
 :pattern ( ($generated@@140 $generated@@503 ($generated@@395 $generated@@504 $generated@@505)))
)))
(assert (forall (($generated@@509 T@U) ($generated@@510 T@U) ) (!  (=> (and (= (type $generated@@509) $generated@@153) (= (type $generated@@510) $generated@@153)) (< ($generated@@507 $generated@@509) ($generated@@508 ($generated@@225 $generated@@509 $generated@@510))))
 :pattern ( ($generated@@225 $generated@@509 $generated@@510))
)))
(assert (forall (($generated@@511 T@U) ($generated@@512 T@U) ) (!  (=> (and (= (type $generated@@511) $generated@@153) (= (type $generated@@512) $generated@@153)) (< ($generated@@507 $generated@@512) ($generated@@508 ($generated@@225 $generated@@511 $generated@@512))))
 :pattern ( ($generated@@225 $generated@@511 $generated@@512))
)))
(assert (forall (($generated@@513 T@U) ($generated@@514 T@U) ($generated@@515 T@U) ) (!  (=> (and (and (and (= (type $generated@@513) $generated@@153) (= (type $generated@@514) $generated@@68)) (= (type $generated@@515) $generated@@68)) ($generated@@226 $generated@@513 ($generated@@387 $generated@@514 $generated@@515))) (and (= ($generated@@270 ($generated@@320 ($generated@@283 $generated@@153 $generated@@153) $generated@@513)) $generated@@513) ($generated@@140 ($generated@@320 ($generated@@283 $generated@@153 $generated@@153) $generated@@513) ($generated@@387 $generated@@514 $generated@@515))))
 :pattern ( ($generated@@226 $generated@@513 ($generated@@387 $generated@@514 $generated@@515)))
)))
(assert (forall (($generated@@516 T@U) ($generated@@517 T@U) ($generated@@518 T@U) ) (!  (=> (and (and (and (= (type $generated@@516) $generated@@153) (= (type $generated@@517) $generated@@68)) (= (type $generated@@518) $generated@@68)) ($generated@@226 $generated@@516 ($generated@@395 $generated@@517 $generated@@518))) (and (= ($generated@@270 ($generated@@320 ($generated@@301 $generated@@153 $generated@@153) $generated@@516)) $generated@@516) ($generated@@140 ($generated@@320 ($generated@@301 $generated@@153 $generated@@153) $generated@@516) ($generated@@395 $generated@@517 $generated@@518))))
 :pattern ( ($generated@@226 $generated@@516 ($generated@@395 $generated@@517 $generated@@518)))
)))
(assert (forall (($generated@@519 T@U) ($generated@@520 T@U) ($generated@@521 T@U) ) (!  (=> (and (and (and (= (type $generated@@519) $generated@@68) (= (type $generated@@520) $generated@@68)) (= (type $generated@@521) $generated@@153)) ($generated@@226 $generated@@521 ($generated@@143 $generated@@519 $generated@@520))) (and (= ($generated@@270 ($generated@@320 $generated@@144 $generated@@521)) $generated@@521) ($generated@@140 ($generated@@320 $generated@@144 $generated@@521) ($generated@@143 $generated@@519 $generated@@520))))
 :pattern ( ($generated@@226 $generated@@521 ($generated@@143 $generated@@519 $generated@@520)))
)))
(assert (forall (($generated@@522 T@U) ) (! (let (($generated@@523 (type $generated@@522)))
 (not ($generated@@0 ($generated@@85 ($generated@@403 $generated@@523) $generated@@522))))
 :pattern ( (let (($generated@@523 (type $generated@@522)))
($generated@@85 ($generated@@403 $generated@@523) $generated@@522)))
)))
(assert (forall (($generated@@525 T@U) ) (! (= (type ($generated@@524 $generated@@525)) $generated@@73)
 :pattern ( ($generated@@524 $generated@@525))
)))
(assert (forall (($generated@@526 T@U) ($generated@@527 T@U) ) (!  (=> (and (= (type $generated@@526) $generated@@68) (= (type $generated@@527) $generated@@68)) (and (= ($generated@@76 ($generated@@143 $generated@@526 $generated@@527)) $generated@@62) (= ($generated@@524 ($generated@@143 $generated@@526 $generated@@527)) $generated@@65)))
 :pattern ( ($generated@@143 $generated@@526 $generated@@527))
)))
(assert (forall (($generated@@528 T@U) ) (!  (=> (= (type $generated@@528) $generated@@144) (= ($generated@@507 ($generated@@270 $generated@@528)) ($generated@@508 $generated@@528)))
 :pattern ( ($generated@@507 ($generated@@270 $generated@@528)))
)))
(assert (forall (($generated@@529 T@U) ) (!  (=> (and (= (type $generated@@529) $generated@@153) ($generated@@226 $generated@@529 ($generated@@79 0))) (and (= ($generated@@270 ($generated@@320 $generated@@2 $generated@@529)) $generated@@529) ($generated@@140 ($generated@@320 ($generated@@80 $generated@@153 $generated@@4) $generated@@529) ($generated@@79 0))))
 :pattern ( ($generated@@226 $generated@@529 ($generated@@79 0)))
)))
(assert (forall (($generated@@530 T@U) ($generated@@531 T@U) ) (!  (=> (and (and (= (type $generated@@530) $generated@@153) (= (type $generated@@531) $generated@@68)) ($generated@@226 $generated@@530 ($generated@@235 $generated@@531))) (and (= ($generated@@270 ($generated@@320 ($generated@@80 $generated@@153 $generated@@4) $generated@@530)) $generated@@530) ($generated@@140 ($generated@@320 ($generated@@80 $generated@@153 $generated@@4) $generated@@530) ($generated@@235 $generated@@531))))
 :pattern ( ($generated@@226 $generated@@530 ($generated@@235 $generated@@531)))
)))
(assert (forall (($generated@@532 T@U) ($generated@@533 T@U) ) (!  (=> (and (and (= (type $generated@@532) $generated@@153) (= (type $generated@@533) $generated@@68)) ($generated@@226 $generated@@532 ($generated@@240 $generated@@533))) (and (= ($generated@@270 ($generated@@320 ($generated@@80 $generated@@153 $generated@@4) $generated@@532)) $generated@@532) ($generated@@140 ($generated@@320 ($generated@@80 $generated@@153 $generated@@4) $generated@@532) ($generated@@240 $generated@@533))))
 :pattern ( ($generated@@226 $generated@@532 ($generated@@240 $generated@@533)))
)))
(assert (forall (($generated@@534 T@U) ($generated@@535 T@U) ) (!  (=> (and (and (= (type $generated@@534) $generated@@153) (= (type $generated@@535) $generated@@68)) ($generated@@226 $generated@@534 ($generated@@158 $generated@@535))) (and (= ($generated@@270 ($generated@@320 ($generated@@80 $generated@@153 $generated@@2) $generated@@534)) $generated@@534) ($generated@@140 ($generated@@320 ($generated@@80 $generated@@153 $generated@@2) $generated@@534) ($generated@@158 $generated@@535))))
 :pattern ( ($generated@@226 $generated@@534 ($generated@@158 $generated@@535)))
)))
(assert (forall (($generated@@536 T@U) ($generated@@537 T@U) ) (!  (=> (and (and (= (type $generated@@536) $generated@@153) (= (type $generated@@537) $generated@@68)) ($generated@@226 $generated@@536 ($generated@@469 $generated@@537))) (and (= ($generated@@270 ($generated@@320 ($generated@@264 $generated@@153) $generated@@536)) $generated@@536) ($generated@@140 ($generated@@320 ($generated@@264 $generated@@153) $generated@@536) ($generated@@469 $generated@@537))))
 :pattern ( ($generated@@226 $generated@@536 ($generated@@469 $generated@@537)))
)))
(assert (= ($generated@@76 $generated@@136) $generated@@63))
(assert (= ($generated@@524 $generated@@136) $generated@@66))
(assert (= ($generated@@76 $generated@@222) $generated@@64))
(assert (= ($generated@@524 $generated@@222) $generated@@67))
(assert (forall (($generated@@538 T@U) ($generated@@539 T@U) ($generated@@540 T@U) ) (!  (=> (and (and (= (type $generated@@538) ($generated@@80 $generated@@153 $generated@@2)) (= (type $generated@@539) $generated@@68)) (= (type $generated@@540) ($generated@@80 $generated@@81 $generated@@82))) (= ($generated@@78 $generated@@538 ($generated@@158 $generated@@539) $generated@@540) (forall (($generated@@541 T@U) ) (!  (=> (and (= (type $generated@@541) $generated@@153) (< 0 ($generated ($generated@@85 $generated@@538 $generated@@541)))) ($generated@@250 $generated@@541 $generated@@539 $generated@@540))
 :pattern ( ($generated@@85 $generated@@538 $generated@@541))
))))
 :pattern ( ($generated@@78 $generated@@538 ($generated@@158 $generated@@539) $generated@@540))
)))
(assert (forall (($generated@@542 T@U) ($generated@@543 T@U) ($generated@@544 T@U) ) (!  (=> (and (and (and (= (type $generated@@542) $generated@@144) (= (type $generated@@543) $generated@@68)) (= (type $generated@@544) ($generated@@80 $generated@@81 $generated@@82))) (and ($generated@@249 $generated@@544) (and ($generated@@142 $generated@@542) (exists (($generated@@545 T@U) ) (!  (and (= (type $generated@@545) $generated@@68) ($generated@@78 $generated@@542 ($generated@@143 $generated@@543 $generated@@545) $generated@@544))
 :pattern ( ($generated@@78 $generated@@542 ($generated@@143 $generated@@543 $generated@@545) $generated@@544))
))))) ($generated@@250 ($generated@@151 $generated@@542) $generated@@543 $generated@@544))
 :pattern ( ($generated@@250 ($generated@@151 $generated@@542) $generated@@543 $generated@@544))
)))
(assert (forall (($generated@@546 T@U) ($generated@@547 T@U) ($generated@@548 T@U) ) (!  (=> (and (and (and (= (type $generated@@546) $generated@@144) (= (type $generated@@547) $generated@@68)) (= (type $generated@@548) ($generated@@80 $generated@@81 $generated@@82))) (and ($generated@@249 $generated@@548) (and ($generated@@142 $generated@@546) (exists (($generated@@549 T@U) ) (!  (and (= (type $generated@@549) $generated@@68) ($generated@@78 $generated@@546 ($generated@@143 $generated@@549 $generated@@547) $generated@@548))
 :pattern ( ($generated@@78 $generated@@546 ($generated@@143 $generated@@549 $generated@@547) $generated@@548))
))))) ($generated@@250 ($generated@@152 $generated@@546) $generated@@547 $generated@@548))
 :pattern ( ($generated@@250 ($generated@@152 $generated@@546) $generated@@547 $generated@@548))
)))
(assert (forall (($generated@@550 T@U) ($generated@@551 T@U) ) (!  (=> (and (= (type $generated@@550) $generated@@153) (= (type $generated@@551) $generated@@153)) (= ($generated@@225 ($generated@@245 $generated@@550) ($generated@@245 $generated@@551)) ($generated@@245 ($generated@@225 $generated@@550 $generated@@551))))
 :pattern ( ($generated@@225 ($generated@@245 $generated@@550) ($generated@@245 $generated@@551)))
)))
(assert (forall (($generated@@552 T@U) ) (! (= ($generated@@270 ($generated@@245 $generated@@552)) ($generated@@245 ($generated@@270 $generated@@552)))
 :pattern ( ($generated@@270 ($generated@@245 $generated@@552)))
)))
(assert (forall (($generated@@553 T@U) ) (! (let (($generated@@554 ($generated@@265 (type $generated@@553))))
 (=> (and (= (type $generated@@553) ($generated@@264 $generated@@554)) (= ($generated@@263 $generated@@553) 0)) (= $generated@@553 ($generated@@262 $generated@@554))))
 :pattern ( ($generated@@263 $generated@@553))
)))
(assert (forall (($generated@@555 T@U) ($generated@@556 T@U) ($generated@@557 T@U) ) (! (let (($generated@@558 (type $generated@@556)))
 (=> (and (and (= (type $generated@@555) ($generated@@80 $generated@@558 $generated@@2)) (= (type $generated@@557) $generated@@2)) (<= 0 ($generated $generated@@557))) (= ($generated@@275 ($generated@@86 $generated@@555 $generated@@556 $generated@@557)) (+ (- ($generated@@275 $generated@@555) ($generated ($generated@@85 $generated@@555 $generated@@556))) ($generated $generated@@557)))))
 :pattern ( ($generated@@275 ($generated@@86 $generated@@555 $generated@@556 $generated@@557)))
)))
(assert (forall (($generated@@559 T@U) ($generated@@560 T@U) ) (!  (=> (and (= (type $generated@@559) ($generated@@80 $generated@@81 $generated@@82)) (= (type $generated@@560) $generated@@2)) ($generated@@78 $generated@@560 $generated@@46 $generated@@559))
 :pattern ( ($generated@@78 $generated@@560 $generated@@46 $generated@@559))
)))
(assert (forall (($generated@@561 T@U) ($generated@@562 T@U) ) (!  (=> (and (= (type $generated@@561) ($generated@@80 $generated@@81 $generated@@82)) (= (type $generated@@562) $generated@@3)) ($generated@@78 $generated@@562 $generated@@47 $generated@@561))
 :pattern ( ($generated@@78 $generated@@562 $generated@@47 $generated@@561))
)))
(assert (forall (($generated@@563 T@U) ($generated@@564 T@U) ) (!  (=> (and (= (type $generated@@563) ($generated@@80 $generated@@81 $generated@@82)) (= (type $generated@@564) $generated@@4)) ($generated@@78 $generated@@564 $generated@@44 $generated@@563))
 :pattern ( ($generated@@78 $generated@@564 $generated@@44 $generated@@563))
)))
(assert (forall (($generated@@565 T@U) ($generated@@566 T@U) ) (!  (=> (and (= (type $generated@@565) ($generated@@80 $generated@@81 $generated@@82)) (= (type $generated@@566) $generated@@427)) ($generated@@78 $generated@@566 $generated@@45 $generated@@565))
 :pattern ( ($generated@@78 $generated@@566 $generated@@45 $generated@@565))
)))
(assert (forall (($generated@@567 T@U) ($generated@@568 T@U) ) (!  (=> (and (= (type $generated@@567) ($generated@@80 $generated@@81 $generated@@82)) (= (type $generated@@568) $generated@@153)) ($generated@@78 $generated@@568 $generated@@48 $generated@@567))
 :pattern ( ($generated@@78 $generated@@568 $generated@@48 $generated@@567))
)))
(assert (forall (($generated@@569 T@U) ($generated@@570 T@U) ) (!  (=> (and (= (type $generated@@569) ($generated@@264 $generated@@153)) (= (type $generated@@570) $generated@@68)) (= ($generated@@140 $generated@@569 ($generated@@469 $generated@@570)) (forall (($generated@@571 Int) ) (!  (=> (and (<= 0 $generated@@571) (< $generated@@571 ($generated@@263 $generated@@569))) ($generated@@226 ($generated@@470 $generated@@569 $generated@@571) $generated@@570))
 :pattern ( ($generated@@470 $generated@@569 $generated@@571))
))))
 :pattern ( ($generated@@140 $generated@@569 ($generated@@469 $generated@@570)))
)))
(assert (forall (($generated@@573 T@U) ($generated@@574 Int) ) (!  (=> (= (type $generated@@573) ($generated@@264 $generated@@153)) (=> (and (<= 0 $generated@@574) (< $generated@@574 ($generated@@263 $generated@@573))) (< ($generated@@508 ($generated@@320 $generated@@144 ($generated@@470 $generated@@573 $generated@@574))) ($generated@@572 $generated@@573))))
 :pattern ( ($generated@@508 ($generated@@320 $generated@@144 ($generated@@470 $generated@@573 $generated@@574))))
)))
(assert (forall (($generated@@575 T@U) ($generated@@576 T@U) ($generated@@577 T@U) ) (!  (=> (and (and (and (= (type $generated@@575) ($generated@@283 $generated@@153 $generated@@153)) (= (type $generated@@576) $generated@@68)) (= (type $generated@@577) $generated@@68)) ($generated@@140 $generated@@575 ($generated@@387 $generated@@576 $generated@@577))) (and (and ($generated@@140 ($generated@@281 $generated@@575) ($generated@@235 $generated@@576)) ($generated@@140 ($generated@@330 $generated@@575) ($generated@@235 $generated@@577))) ($generated@@140 ($generated@@361 $generated@@575) ($generated@@235 ($generated@@143 $generated@@576 $generated@@577)))))
 :pattern ( ($generated@@140 $generated@@575 ($generated@@387 $generated@@576 $generated@@577)))
)))
(assert (forall (($generated@@578 T@U) ($generated@@579 T@U) ($generated@@580 T@U) ) (!  (=> (and (and (and (= (type $generated@@578) ($generated@@301 $generated@@153 $generated@@153)) (= (type $generated@@579) $generated@@68)) (= (type $generated@@580) $generated@@68)) ($generated@@140 $generated@@578 ($generated@@395 $generated@@579 $generated@@580))) (and (and ($generated@@140 ($generated@@299 $generated@@578) ($generated@@240 $generated@@579)) ($generated@@140 ($generated@@341 $generated@@578) ($generated@@240 $generated@@580))) ($generated@@140 ($generated@@369 $generated@@578) ($generated@@240 ($generated@@143 $generated@@579 $generated@@580)))))
 :pattern ( ($generated@@140 $generated@@578 ($generated@@395 $generated@@579 $generated@@580)))
)))
(assert (forall (($generated@@581 T@U) ) (!  (=> (= (type $generated@@581) $generated@@2) ($generated@@140 $generated@@581 $generated@@46))
 :pattern ( ($generated@@140 $generated@@581 $generated@@46))
)))
(assert (forall (($generated@@582 T@U) ) (!  (=> (= (type $generated@@582) $generated@@3) ($generated@@140 $generated@@582 $generated@@47))
 :pattern ( ($generated@@140 $generated@@582 $generated@@47))
)))
(assert (forall (($generated@@583 T@U) ) (!  (=> (= (type $generated@@583) $generated@@4) ($generated@@140 $generated@@583 $generated@@44))
 :pattern ( ($generated@@140 $generated@@583 $generated@@44))
)))
(assert (forall (($generated@@584 T@U) ) (!  (=> (= (type $generated@@584) $generated@@427) ($generated@@140 $generated@@584 $generated@@45))
 :pattern ( ($generated@@140 $generated@@584 $generated@@45))
)))
(assert (forall (($generated@@585 T@U) ) (!  (=> (= (type $generated@@585) $generated@@153) ($generated@@140 $generated@@585 $generated@@48))
 :pattern ( ($generated@@140 $generated@@585 $generated@@48))
)))
(push 1)
(declare-fun ControlFlow (Int Int) Int)
(declare-fun $generated@@586 () T@U)
(declare-fun $generated@@587 () T@U)
(declare-fun $generated@@588 () T@U)
(declare-fun $generated@@589 (T@U) Bool)
(declare-fun $generated@@590 () Int)
(assert  (and (and (= (type $generated@@586) ($generated@@168 $generated@@81 $generated@@4)) (= (type $generated@@587) ($generated@@80 $generated@@81 $generated@@82))) (= (type $generated@@588) $generated@@81)))
(set-option :timeout 0)
(set-option :rlimit 0)
(assert (not
 (=> (= (ControlFlow 0 0) 3) (let (($generated@@591  (=> (and (= $generated@@586 ($generated@@167 $generated@@137 $generated@@587 $generated@@60 false)) (= (ControlFlow 0 2) (- 0 1))) (not (= $generated@@588 $generated@@137)))))
(let (($generated@@592  (=> (and ($generated@@249 $generated@@587) ($generated@@589 $generated@@587)) (=> (and (and ($generated@@140 $generated@@588 $generated@@222) ($generated@@78 $generated@@588 $generated@@222 $generated@@587)) (and (= 3 $generated@@590) (= (ControlFlow 0 3) 2))) $generated@@591))))
$generated@@592)))
))
(check-sat)
(pop 1)
; Valid
(get-info :rlimit)
(reset)
(set-option :rlimit 0)
; did a full reset
(reset)
(set-option :print-success false)
(set-info :smt-lib-version 2.6)
(set-option :auto_config false)
(set-option :type_check true)
(set-option :smt.case_split 3)
(set-option :smt.qi.eager_threshold 100)
(set-option :smt.delay_units true)
(set-option :smt.arith.solver 2)
(set-option :smt.mbqi false)
(set-option :model.compact false)
(set-option :model.v2 true)
(set-option :pp.bv_literals false)
; done setting options


(set-info :category "industrial")
(declare-sort |T@U| 0)
(declare-sort |T@T| 0)
(declare-fun real_pow (Real Real) Real)
(declare-fun UOrdering2 (|T@U| |T@U|) Bool)
(declare-fun UOrdering3 (|T@T| |T@U| |T@U|) Bool)
(declare-fun tickleBool (Bool) Bool)
(assert (and (tickleBool true) (tickleBool false)))
(declare-fun $generated (T@U) Int)
(declare-fun $generated@@0 (T@U) Bool)
(declare-fun $generated@@1 (T@T) Int)
(declare-fun $generated@@2 () T@T)
(declare-fun $generated@@3 () T@T)
(declare-fun $generated@@4 () T@T)
(declare-fun $generated@@5 () T@T)
(declare-fun $generated@@6 () T@T)
(declare-fun $generated@@7 () T@T)
(declare-fun $generated@@8 (Int) T@U)
(declare-fun type (T@U) T@T)
(declare-fun $generated@@9 (Real) T@U)
(declare-fun $generated@@10 (T@U) Real)
(declare-fun $generated@@11 (Bool) T@U)
(declare-fun $generated@@12 (RoundingMode) T@U)
(declare-fun $generated@@13 (T@U) RoundingMode)
(declare-fun $generated@@14 (String) T@U)
(declare-fun $generated@@15 (T@U) String)
(declare-fun $generated@@16 ((RegEx String)) T@U)
(declare-fun $generated@@17 (T@U) (RegEx String))
(declare-fun $generated@@44 () T@U)
(declare-fun $generated@@45 () T@U)
(declare-fun $generated@@46 () T@U)
(declare-fun $generated@@47 () T@U)
(declare-fun $generated@@48 () T@U)
(declare-fun $generated@@49 () T@U)
(declare-fun $generated@@50 () T@U)
(declare-fun $generated@@51 () T@U)
(declare-fun $generated@@52 () T@U)
(declare-fun $generated@@53 () T@U)
(declare-fun $generated@@54 () T@U)
(declare-fun $generated@@55 () T@U)
(declare-fun $generated@@56 () T@U)
(declare-fun $generated@@57 () T@U)
(declare-fun $generated@@58 () T@U)
(declare-fun $generated@@59 () T@U)
(declare-fun $generated@@60 () T@U)
(declare-fun $generated@@61 () T@U)
(declare-fun $generated@@62 () T@U)
(declare-fun $generated@@63 () T@U)
(declare-fun $generated@@64 () T@U)
(declare-fun $generated@@65 () T@U)
(declare-fun $generated@@66 () T@U)
(declare-fun $generated@@67 () T@U)
(declare-fun $generated@@68 () T@U)
(declare-fun $generated@@69 () T@U)
(declare-fun $generated@@70 () T@T)
(declare-fun $generated@@71 () T@T)
(declare-fun $generated@@72 (T@T) T@T)
(declare-fun $generated@@73 (T@T) T@T)
(declare-fun $generated@@74 () T@T)
(declare-fun $generated@@75 () T@T)
(declare-fun $generated@@76 () T@T)
(declare-fun $generated@@77 () T@T)
(declare-fun $generated@@80 (T@U) Int)
(declare-fun $generated@@81 (T@U) T@U)
(declare-fun $generated@@83 (T@U) T@U)
(declare-fun $generated@@85 (T@U T@U T@U) Bool)
(declare-fun $generated@@86 (Int) T@U)
(declare-fun $generated@@87 (T@T T@T) T@T)
(declare-fun $generated@@88 () T@T)
(declare-fun $generated@@89 () T@T)
(declare-fun $generated@@90 (T@T) T@T)
(declare-fun $generated@@91 (T@T) T@T)
(declare-fun $generated@@92 (T@U T@U) T@U)
(declare-fun $generated@@93 (T@U T@U T@U) T@U)
(declare-fun $generated@@94 (T@U T@U) T@U)
(declare-fun $generated@@95 (T@U T@U T@U) T@U)
(declare-fun $generated@@143 (T@U T@U) Bool)
(declare-fun $generated@@147 () T@U)
(declare-fun $generated@@148 () T@U)
(declare-fun $generated@@151 () T@U)
(declare-fun $generated@@152 (T@U) Bool)
(declare-fun $generated@@153 (T@U) T@U)
(declare-fun $generated@@154 (T@U T@U) Bool)
(declare-fun $generated@@159 (T@U) Bool)
(declare-fun $generated@@160 (T@U T@U) T@U)
(declare-fun $generated@@161 () T@T)
(declare-fun $generated@@167 (T@U T@U) Bool)
(declare-fun $generated@@168 (T@U) T@U)
(declare-fun $generated@@169 (T@U) T@U)
(declare-fun $generated@@170 () T@T)
(declare-fun $generated@@175 (T@U) T@U)
(declare-fun $generated@@176 (T@U) Bool)
(declare-fun $generated@@181 (T@U T@U T@U) T@U)
(declare-fun $generated@@182 (T@U T@U T@U Bool) T@U)
(declare-fun $generated@@183 (T@T T@T) T@T)
(declare-fun $generated@@184 (T@T) T@T)
(declare-fun $generated@@185 (T@T) T@T)
(declare-fun $generated@@186 (T@U T@U T@U T@U) T@U)
(declare-fun $generated@@237 () T@U)
(declare-fun $generated@@240 (T@U T@U) T@U)
(declare-fun $generated@@241 (T@U T@U) Bool)
(declare-fun $generated@@248 (T@T T@U T@U) T@U)
(declare-fun $generated@@252 (T@U) Bool)
(declare-fun $generated@@255 (T@U) T@U)
(declare-fun $generated@@260 (T@U) T@U)
(declare-fun $generated@@265 (Int) Int)
(declare-fun $generated@@267 (Real) Real)
(declare-fun $generated@@269 (T@U) T@U)
(declare-fun $generated@@273 () Int)
(declare-fun $generated@@274 (Real) Bool)
(declare-fun $generated@@275 (Real) Bool)
(declare-fun $generated@@277 (T@U T@U T@U) Bool)
(declare-fun $generated@@283 (T@U) T@U)
(declare-fun $generated@@289 (T@T) T@U)
(declare-fun $generated@@290 (T@U) Int)
(declare-fun $generated@@291 (T@T) T@T)
(declare-fun $generated@@292 (T@T) T@T)
(declare-fun $generated@@297 (T@U) T@U)
(declare-fun $generated@@312 (T@U) Int)
(declare-fun $generated@@313 (T@T) T@U)
(declare-fun $generated@@318 (T@U) T@U)
(declare-fun $generated@@319 (T@T T@T) T@U)
(declare-fun $generated@@320 (T@T T@T) T@T)
(declare-fun $generated@@321 (T@T) T@T)
(declare-fun $generated@@322 (T@T) T@T)
(declare-fun $generated@@336 (T@U) T@U)
(declare-fun $generated@@337 (T@T T@T) T@U)
(declare-fun $generated@@338 (T@T T@T) T@T)
(declare-fun $generated@@339 (T@T) T@T)
(declare-fun $generated@@340 (T@T) T@T)
(declare-fun $generated@@354 (T@U T@U) Bool)
(declare-fun $generated@@363 (T@T T@U) T@U)
(declare-fun $generated@@373 (T@U) T@U)
(declare-fun $generated@@384 (T@U) T@U)
(declare-fun $generated@@404 (T@U) T@U)
(declare-fun $generated@@405 (T@U) T@U)
(declare-fun $generated@@412 (T@U) T@U)
(declare-fun $generated@@413 (T@U) T@U)
(declare-fun $generated@@430 (T@U T@U) T@U)
(declare-fun $generated@@438 (T@U T@U) T@U)
(declare-fun $generated@@449 (T@T) T@U)
(declare-fun $generated@@470 (T@U) T@U)
(declare-fun $generated@@478 () T@T)
(declare-fun $generated@@487 (T@U) T@U)
(declare-fun $generated@@491 (T@U) T@U)
(declare-fun $generated@@497 (T@U) T@U)
(declare-fun $generated@@501 (T@U) T@U)
(declare-fun $generated@@509 (T@U) T@U)
(declare-fun $generated@@513 (T@U) T@U)
(declare-fun $generated@@521 (T@U) T@U)
(declare-fun $generated@@522 (T@U Int) T@U)
(declare-fun $generated@@531 (T@U) Int)
(declare-fun $generated@@533 (T@U) T@U)
(declare-fun $generated@@537 (T@U) T@U)
(declare-fun $generated@@541 (T@U) T@U)
(declare-fun $generated@@545 (T@U) T@U)
(declare-fun $generated@@559 (T@U) Int)
(declare-fun $generated@@560 (T@U) Int)
(declare-fun $generated@@576 (T@U) T@U)
(declare-fun $generated@@627 (T@U) Int)
(assert  (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (= ($generated@@1 $generated@@2) 0) (= ($generated@@1 $generated@@3) 1)) (= ($generated@@1 $generated@@4) 2)) (= ($generated@@1 $generated@@5) 3)) (= ($generated@@1 $generated@@6) 4)) (= ($generated@@1 $generated@@7) 5)) (forall (($generated@@18 Int) ) (! (= ($generated ($generated@@8 $generated@@18)) $generated@@18)
 :pattern ( ($generated@@8 $generated@@18))
))) (forall (($generated@@19 T@U) ) (!  (=> (= (type $generated@@19) $generated@@2) (= ($generated@@8 ($generated $generated@@19)) $generated@@19))
 :pattern ( ($generated $generated@@19))
))) (forall (($generated@@20 Int) ) (! (= (type ($generated@@8 $generated@@20)) $generated@@2)
 :pattern ( ($generated@@8 $generated@@20))
))) (forall (($generated@@21 Real) ) (! (= ($generated@@10 ($generated@@9 $generated@@21)) $generated@@21)
 :pattern ( ($generated@@9 $generated@@21))
))) (forall (($generated@@22 T@U) ) (!  (=> (= (type $generated@@22) $generated@@3) (= ($generated@@9 ($generated@@10 $generated@@22)) $generated@@22))
 :pattern ( ($generated@@10 $generated@@22))
))) (forall (($generated@@23 Real) ) (! (= (type ($generated@@9 $generated@@23)) $generated@@3)
 :pattern ( ($generated@@9 $generated@@23))
))) (forall (($generated@@24 Bool) ) (! (= ($generated@@0 ($generated@@11 $generated@@24)) $generated@@24)
 :pattern ( ($generated@@11 $generated@@24))
))) (forall (($generated@@25 T@U) ) (!  (=> (= (type $generated@@25) $generated@@4) (= ($generated@@11 ($generated@@0 $generated@@25)) $generated@@25))
 :pattern ( ($generated@@0 $generated@@25))
))) (forall (($generated@@26 Bool) ) (! (= (type ($generated@@11 $generated@@26)) $generated@@4)
 :pattern ( ($generated@@11 $generated@@26))
))) (forall (($generated@@27 RoundingMode) ) (! (= ($generated@@13 ($generated@@12 $generated@@27)) $generated@@27)
 :pattern ( ($generated@@12 $generated@@27))
))) (forall (($generated@@28 T@U) ) (!  (=> (= (type $generated@@28) $generated@@5) (= ($generated@@12 ($generated@@13 $generated@@28)) $generated@@28))
 :pattern ( ($generated@@13 $generated@@28))
))) (forall (($generated@@29 RoundingMode) ) (! (= (type ($generated@@12 $generated@@29)) $generated@@5)
 :pattern ( ($generated@@12 $generated@@29))
))) (forall (($generated@@30 String) ) (! (= ($generated@@15 ($generated@@14 $generated@@30)) $generated@@30)
 :pattern ( ($generated@@14 $generated@@30))
))) (forall (($generated@@31 T@U) ) (!  (=> (= (type $generated@@31) $generated@@6) (= ($generated@@14 ($generated@@15 $generated@@31)) $generated@@31))
 :pattern ( ($generated@@15 $generated@@31))
))) (forall (($generated@@32 String) ) (! (= (type ($generated@@14 $generated@@32)) $generated@@6)
 :pattern ( ($generated@@14 $generated@@32))
))) (forall (($generated@@33 (RegEx String)) ) (! (= ($generated@@17 ($generated@@16 $generated@@33)) $generated@@33)
 :pattern ( ($generated@@16 $generated@@33))
))) (forall (($generated@@34 T@U) ) (!  (=> (= (type $generated@@34) $generated@@7) (= ($generated@@16 ($generated@@17 $generated@@34)) $generated@@34))
 :pattern ( ($generated@@17 $generated@@34))
))) (forall (($generated@@35 (RegEx String)) ) (! (= (type ($generated@@16 $generated@@35)) $generated@@7)
 :pattern ( ($generated@@16 $generated@@35))
))))
(assert (forall (($generated@@36 T@U) ) (! (UOrdering2 $generated@@36 $generated@@36)
 :no-pattern ($generated $generated@@36)
 :no-pattern ($generated@@0 $generated@@36)
)))
(assert (forall (($generated@@37 T@U) ($generated@@38 T@U) ($generated@@39 T@U) ) (! (let (($generated@@40 (type $generated@@37)))
 (=> (and (and (= (type $generated@@38) $generated@@40) (= (type $generated@@39) $generated@@40)) (and (UOrdering2 $generated@@37 $generated@@38) (UOrdering2 $generated@@38 $generated@@39))) (UOrdering2 $generated@@37 $generated@@39)))
 :pattern ( (UOrdering2 $generated@@37 $generated@@38) (UOrdering2 $generated@@38 $generated@@39))
)))
(assert (forall (($generated@@41 T@U) ($generated@@42 T@U) ) (! (let (($generated@@43 (type $generated@@41)))
 (=> (= (type $generated@@42) $generated@@43) (=> (and (UOrdering2 $generated@@41 $generated@@42) (UOrdering2 $generated@@42 $generated@@41)) (= $generated@@41 $generated@@42))))
 :pattern ( (UOrdering2 $generated@@41 $generated@@42) (UOrdering2 $generated@@42 $generated@@41))
)))
(assert  (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (= ($generated@@1 $generated@@70) 6) (= (type $generated@@44) $generated@@70)) (= (type $generated@@45) $generated@@70)) (= (type $generated@@46) $generated@@70)) (= (type $generated@@47) $generated@@70)) (= (type $generated@@48) $generated@@70)) (= ($generated@@1 $generated@@71) 7)) (= (type $generated@@49) $generated@@71)) (= (type $generated@@50) $generated@@71)) (= (type $generated@@51) $generated@@71)) (= (type $generated@@52) $generated@@71)) (= (type $generated@@53) $generated@@71)) (= (type $generated@@54) $generated@@71)) (= (type $generated@@55) $generated@@71)) (= (type $generated@@56) $generated@@71)) (= (type $generated@@57) $generated@@71)) (= (type $generated@@58) $generated@@71)) (= (type $generated@@59) $generated@@71)) (forall (($generated@@78 T@T) ) (= ($generated@@1 ($generated@@72 $generated@@78)) 8))) (forall (($generated@@79 T@T) ) (! (= ($generated@@73 ($generated@@72 $generated@@79)) $generated@@79)
 :pattern ( ($generated@@72 $generated@@79))
))) (= (type $generated@@60) ($generated@@72 $generated@@4))) (= ($generated@@1 $generated@@74) 9)) (= (type $generated@@61) $generated@@74)) (= ($generated@@1 $generated@@75) 10)) (= (type $generated@@62) $generated@@75)) (= (type $generated@@63) $generated@@71)) (= ($generated@@1 $generated@@76) 11)) (= (type $generated@@64) $generated@@76)) (= (type $generated@@65) $generated@@71)) (= (type $generated@@66) $generated@@71)) (= ($generated@@1 $generated@@77) 12)) (= (type $generated@@67) $generated@@77)) (= (type $generated@@68) $generated@@77)) (= (type $generated@@69) $generated@@74)))
(assert (distinct $generated@@44 $generated@@45 $generated@@46 $generated@@47 $generated@@48 $generated@@49 $generated@@50 $generated@@51 $generated@@52 $generated@@53 $generated@@54 $generated@@55 $generated@@56 $generated@@57 $generated@@58 $generated@@59 $generated@@60 $generated@@61 $generated@@62 $generated@@63 $generated@@64 $generated@@65 $generated@@66 $generated@@67 $generated@@68 $generated@@69)
)
(assert (= ($generated@@80 $generated@@60) 0))
(assert (forall (($generated@@82 T@U) ) (! (= (type ($generated@@81 $generated@@82)) $generated@@71)
 :pattern ( ($generated@@81 $generated@@82))
)))
(assert (= ($generated@@81 $generated@@44) $generated@@49))
(assert (= ($generated@@81 $generated@@45) $generated@@50))
(assert (= ($generated@@81 $generated@@46) $generated@@51))
(assert (= ($generated@@81 $generated@@47) $generated@@52))
(assert (= ($generated@@81 $generated@@48) $generated@@53))
(assert (forall (($generated@@84 T@U) ) (! (= (type ($generated@@83 $generated@@84)) $generated@@74)
 :pattern ( ($generated@@83 $generated@@84))
)))
(assert (= ($generated@@83 $generated@@60) $generated@@61))
(assert  (and (and (and (and (and (and (and (and (and (and (and (and (and (forall (($generated@@96 T@T) ($generated@@97 T@T) ) (= ($generated@@1 ($generated@@87 $generated@@96 $generated@@97)) 13)) (forall (($generated@@98 T@T) ($generated@@99 T@T) ) (! (= ($generated@@90 ($generated@@87 $generated@@98 $generated@@99)) $generated@@98)
 :pattern ( ($generated@@87 $generated@@98 $generated@@99))
))) (forall (($generated@@100 T@T) ($generated@@101 T@T) ) (! (= ($generated@@91 ($generated@@87 $generated@@100 $generated@@101)) $generated@@101)
 :pattern ( ($generated@@87 $generated@@100 $generated@@101))
))) (forall (($generated@@102 T@U) ($generated@@103 T@U) ) (! (let (($generated@@104 ($generated@@91 (type $generated@@102))))
(= (type ($generated@@92 $generated@@102 $generated@@103)) $generated@@104))
 :pattern ( ($generated@@92 $generated@@102 $generated@@103))
))) (forall (($generated@@105 T@U) ($generated@@106 T@U) ($generated@@107 T@U) ) (! (let (($generated@@108 (type $generated@@107)))
(let (($generated@@109 (type $generated@@106)))
(= (type ($generated@@93 $generated@@105 $generated@@106 $generated@@107)) ($generated@@87 $generated@@109 $generated@@108))))
 :pattern ( ($generated@@93 $generated@@105 $generated@@106 $generated@@107))
))) (forall (($generated@@110 T@U) ($generated@@111 T@U) ($generated@@112 T@U) ) (! (let (($generated@@113 ($generated@@91 (type $generated@@110))))
 (=> (= (type $generated@@112) $generated@@113) (= ($generated@@92 ($generated@@93 $generated@@110 $generated@@111 $generated@@112) $generated@@111) $generated@@112)))
 :weight 0
))) (and (forall (($generated@@114 T@U) ($generated@@115 T@U) ($generated@@116 T@U) ($generated@@117 T@U) ) (!  (or (= $generated@@116 $generated@@117) (= ($generated@@92 ($generated@@93 $generated@@115 $generated@@116 $generated@@114) $generated@@117) ($generated@@92 $generated@@115 $generated@@117)))
 :weight 0
)) (forall (($generated@@118 T@U) ($generated@@119 T@U) ($generated@@120 T@U) ($generated@@121 T@U) ) (!  (or true (= ($generated@@92 ($generated@@93 $generated@@119 $generated@@120 $generated@@118) $generated@@121) ($generated@@92 $generated@@119 $generated@@121)))
 :weight 0
)))) (= ($generated@@1 $generated@@88) 14)) (forall (($generated@@122 T@U) ($generated@@123 T@U) ) (! (let (($generated@@124 ($generated@@73 (type $generated@@123))))
(= (type ($generated@@94 $generated@@122 $generated@@123)) $generated@@124))
 :pattern ( ($generated@@94 $generated@@122 $generated@@123))
))) (= ($generated@@1 $generated@@89) 15)) (forall (($generated@@125 T@U) ($generated@@126 T@U) ($generated@@127 T@U) ) (! (= (type ($generated@@95 $generated@@125 $generated@@126 $generated@@127)) $generated@@89)
 :pattern ( ($generated@@95 $generated@@125 $generated@@126 $generated@@127))
))) (forall (($generated@@128 T@U) ($generated@@129 T@U) ($generated@@130 T@U) ) (! (let (($generated@@131 ($generated@@73 (type $generated@@129))))
 (=> (= (type $generated@@130) $generated@@131) (= ($generated@@94 ($generated@@95 $generated@@128 $generated@@129 $generated@@130) $generated@@129) $generated@@130)))
 :weight 0
))) (and (forall (($generated@@132 T@U) ($generated@@133 T@U) ($generated@@134 T@U) ($generated@@135 T@U) ) (!  (or (= $generated@@134 $generated@@135) (= ($generated@@94 ($generated@@95 $generated@@133 $generated@@134 $generated@@132) $generated@@135) ($generated@@94 $generated@@133 $generated@@135)))
 :weight 0
)) (forall (($generated@@136 T@U) ($generated@@137 T@U) ($generated@@138 T@U) ($generated@@139 T@U) ) (!  (or true (= ($generated@@94 ($generated@@95 $generated@@137 $generated@@138 $generated@@136) $generated@@139) ($generated@@94 $generated@@137 $generated@@139)))
 :weight 0
)))) (forall (($generated@@140 Int) ) (! (= (type ($generated@@86 $generated@@140)) $generated@@70)
 :pattern ( ($generated@@86 $generated@@140))
))))
(assert (forall (($generated@@141 T@U) ($generated@@142 T@U) ) (!  (=> (and (= (type $generated@@141) $generated@@2) (= (type $generated@@142) ($generated@@87 $generated@@88 $generated@@89))) ($generated@@85 $generated@@141 ($generated@@86 0) $generated@@142))
 :pattern ( ($generated@@85 $generated@@141 ($generated@@86 0) $generated@@142))
)))
(assert (forall (($generated@@144 T@U) ($generated@@145 T@U) ) (!  (=> (and (and (= (type $generated@@144) ($generated@@87 $generated@@88 $generated@@89)) (= (type $generated@@145) ($generated@@87 $generated@@88 $generated@@89))) ($generated@@143 $generated@@144 $generated@@145)) (forall (($generated@@146 T@U) ) (!  (=> (and (= (type $generated@@146) $generated@@88) ($generated@@0 ($generated@@94 ($generated@@92 $generated@@144 $generated@@146) $generated@@60))) ($generated@@0 ($generated@@94 ($generated@@92 $generated@@145 $generated@@146) $generated@@60)))
 :pattern ( ($generated@@94 ($generated@@92 $generated@@145 $generated@@146) $generated@@60))
)))
 :pattern ( ($generated@@143 $generated@@144 $generated@@145))
)))
(assert  (and (= (type $generated@@147) $generated@@70) (= (type $generated@@148) $generated@@88)))
(assert (forall (($generated@@149 T@U) ($generated@@150 T@U) ) (!  (=> (and (= (type $generated@@149) $generated@@88) (= (type $generated@@150) ($generated@@87 $generated@@88 $generated@@89))) (= ($generated@@85 $generated@@149 $generated@@147 $generated@@150)  (or (= $generated@@149 $generated@@148) ($generated@@0 ($generated@@94 ($generated@@92 $generated@@150 $generated@@149) $generated@@60)))))
 :pattern ( ($generated@@85 $generated@@149 $generated@@147 $generated@@150))
)))
(assert  (and (= (type $generated@@151) ($generated@@72 $generated@@2)) (forall (($generated@@155 T@U) ) (! (= (type ($generated@@153 $generated@@155)) $generated@@70)
 :pattern ( ($generated@@153 $generated@@155))
))))
(assert (forall (($generated@@156 T@U) ($generated@@157 T@U) ) (!  (=> (and (and (= (type $generated@@156) ($generated@@87 $generated@@88 $generated@@89)) (= (type $generated@@157) $generated@@88)) (and ($generated@@152 $generated@@156) (and (not (= $generated@@157 $generated@@148)) (= ($generated@@153 $generated@@157) $generated@@147)))) ($generated@@154 ($generated@@94 ($generated@@92 $generated@@156 $generated@@157) $generated@@151) $generated@@46))
 :pattern ( ($generated@@94 ($generated@@92 $generated@@156 $generated@@157) $generated@@151))
)))
(assert (forall (($generated@@158 T@U) ) (!  (=> (= (type $generated@@158) $generated@@2) ($generated@@154 $generated@@158 ($generated@@86 0)))
 :pattern ( ($generated@@154 $generated@@158 ($generated@@86 0)))
)))
(assert  (and (= ($generated@@1 $generated@@161) 16) (forall (($generated@@162 T@U) ($generated@@163 T@U) ) (! (= (type ($generated@@160 $generated@@162 $generated@@163)) $generated@@70)
 :pattern ( ($generated@@160 $generated@@162 $generated@@163))
))))
(assert (forall (($generated@@164 T@U) ($generated@@165 T@U) ($generated@@166 T@U) ) (!  (=> (and (and (and (= (type $generated@@164) $generated@@70) (= (type $generated@@165) $generated@@70)) (= (type $generated@@166) $generated@@161)) ($generated@@154 $generated@@166 ($generated@@160 $generated@@164 $generated@@165))) ($generated@@159 $generated@@166))
 :pattern ( ($generated@@159 $generated@@166) ($generated@@154 $generated@@166 ($generated@@160 $generated@@164 $generated@@165)))
)))
(assert  (and (and (= ($generated@@1 $generated@@170) 17) (forall (($generated@@171 T@U) ) (! (= (type ($generated@@168 $generated@@171)) $generated@@170)
 :pattern ( ($generated@@168 $generated@@171))
))) (forall (($generated@@172 T@U) ) (! (= (type ($generated@@169 $generated@@172)) $generated@@170)
 :pattern ( ($generated@@169 $generated@@172))
))))
(assert (forall (($generated@@173 T@U) ($generated@@174 T@U) ) (!  (=> (and (and (= (type $generated@@173) $generated@@161) (= (type $generated@@174) $generated@@161)) true) (= ($generated@@167 $generated@@173 $generated@@174)  (and (= ($generated@@168 $generated@@173) ($generated@@168 $generated@@174)) (= ($generated@@169 $generated@@173) ($generated@@169 $generated@@174)))))
 :pattern ( ($generated@@167 $generated@@173 $generated@@174))
)))
(assert (forall (($generated@@177 T@U) ) (! (= (type ($generated@@175 $generated@@177)) $generated@@70)
 :pattern ( ($generated@@175 $generated@@177))
)))
(assert (forall (($generated@@178 T@U) ($generated@@179 T@U) ) (!  (=> (and (and (= (type $generated@@178) ($generated@@87 $generated@@170 $generated@@2)) (= (type $generated@@179) $generated@@70)) ($generated@@154 $generated@@178 ($generated@@175 $generated@@179))) ($generated@@176 $generated@@178))
 :pattern ( ($generated@@154 $generated@@178 ($generated@@175 $generated@@179)))
)))
(assert (forall (($generated@@180 T@U) ) (!  (=> (= (type $generated@@180) $generated@@88) (= ($generated@@154 $generated@@180 $generated@@147)  (or (= $generated@@180 $generated@@148) (= ($generated@@153 $generated@@180) $generated@@147))))
 :pattern ( ($generated@@154 $generated@@180 $generated@@147))
)))
(assert  (and (and (and (and (and (and (and (forall (($generated@@187 T@T) ($generated@@188 T@T) ) (= ($generated@@1 ($generated@@183 $generated@@187 $generated@@188)) 18)) (forall (($generated@@189 T@T) ($generated@@190 T@T) ) (! (= ($generated@@184 ($generated@@183 $generated@@189 $generated@@190)) $generated@@189)
 :pattern ( ($generated@@183 $generated@@189 $generated@@190))
))) (forall (($generated@@191 T@T) ($generated@@192 T@T) ) (! (= ($generated@@185 ($generated@@183 $generated@@191 $generated@@192)) $generated@@192)
 :pattern ( ($generated@@183 $generated@@191 $generated@@192))
))) (forall (($generated@@193 T@U) ($generated@@194 T@U) ($generated@@195 T@U) ) (! (let (($generated@@196 ($generated@@185 (type $generated@@193))))
(= (type ($generated@@181 $generated@@193 $generated@@194 $generated@@195)) $generated@@196))
 :pattern ( ($generated@@181 $generated@@193 $generated@@194 $generated@@195))
))) (forall (($generated@@197 T@U) ($generated@@198 T@U) ($generated@@199 T@U) ($generated@@200 T@U) ) (! (let (($generated@@201 (type $generated@@200)))
(let (($generated@@202 (type $generated@@198)))
(= (type ($generated@@186 $generated@@197 $generated@@198 $generated@@199 $generated@@200)) ($generated@@183 $generated@@202 $generated@@201))))
 :pattern ( ($generated@@186 $generated@@197 $generated@@198 $generated@@199 $generated@@200))
))) (forall (($generated@@203 T@U) ($generated@@204 T@U) ($generated@@205 T@U) ($generated@@206 T@U) ) (! (let (($generated@@207 ($generated@@185 (type $generated@@203))))
 (=> (= (type $generated@@206) $generated@@207) (= ($generated@@181 ($generated@@186 $generated@@203 $generated@@204 $generated@@205 $generated@@206) $generated@@204 $generated@@205) $generated@@206)))
 :weight 0
))) (and (and (forall (($generated@@208 T@U) ($generated@@209 T@U) ($generated@@210 T@U) ($generated@@211 T@U) ($generated@@212 T@U) ($generated@@213 T@U) ) (!  (or (= $generated@@210 $generated@@212) (= ($generated@@181 ($generated@@186 $generated@@209 $generated@@210 $generated@@211 $generated@@208) $generated@@212 $generated@@213) ($generated@@181 $generated@@209 $generated@@212 $generated@@213)))
 :weight 0
)) (forall (($generated@@214 T@U) ($generated@@215 T@U) ($generated@@216 T@U) ($generated@@217 T@U) ($generated@@218 T@U) ($generated@@219 T@U) ) (!  (or (= $generated@@217 $generated@@219) (= ($generated@@181 ($generated@@186 $generated@@215 $generated@@216 $generated@@217 $generated@@214) $generated@@218 $generated@@219) ($generated@@181 $generated@@215 $generated@@218 $generated@@219)))
 :weight 0
))) (forall (($generated@@220 T@U) ($generated@@221 T@U) ($generated@@222 T@U) ($generated@@223 T@U) ($generated@@224 T@U) ($generated@@225 T@U) ) (!  (or true (= ($generated@@181 ($generated@@186 $generated@@221 $generated@@222 $generated@@223 $generated@@220) $generated@@224 $generated@@225) ($generated@@181 $generated@@221 $generated@@224 $generated@@225)))
 :weight 0
)))) (forall (($generated@@226 T@U) ($generated@@227 T@U) ($generated@@228 T@U) ($generated@@229 Bool) ) (! (= (type ($generated@@182 $generated@@226 $generated@@227 $generated@@228 $generated@@229)) ($generated@@183 $generated@@88 $generated@@4))
 :pattern ( ($generated@@182 $generated@@226 $generated@@227 $generated@@228 $generated@@229))
))))
(assert (forall (($generated@@230 T@U) ($generated@@231 T@U) ($generated@@232 T@U) ($generated@@233 Bool) ($generated@@234 T@U) ($generated@@235 T@U) ) (! (let (($generated@@236 ($generated@@73 (type $generated@@235))))
 (=> (and (and (and (and (= (type $generated@@230) $generated@@88) (= (type $generated@@231) ($generated@@87 $generated@@88 $generated@@89))) (= (type $generated@@232) ($generated@@72 $generated@@4))) (= (type $generated@@234) $generated@@88)) (= (type $generated@@235) ($generated@@72 $generated@@236))) (= ($generated@@0 ($generated@@181 ($generated@@182 $generated@@230 $generated@@231 $generated@@232 $generated@@233) $generated@@234 $generated@@235))  (=> (and (not (= $generated@@234 $generated@@230)) ($generated@@0 ($generated@@94 ($generated@@92 $generated@@231 $generated@@234) $generated@@232))) $generated@@233))))
 :pattern ( ($generated@@181 ($generated@@182 $generated@@230 $generated@@231 $generated@@232 $generated@@233) $generated@@234 $generated@@235))
)))
(assert (= (type $generated@@237) $generated@@70))
(assert (forall (($generated@@238 T@U) ($generated@@239 T@U) ) (!  (=> (and (= (type $generated@@238) $generated@@88) (= (type $generated@@239) ($generated@@87 $generated@@88 $generated@@89))) (= ($generated@@85 $generated@@238 $generated@@237 $generated@@239) ($generated@@85 $generated@@238 $generated@@147 $generated@@239)))
 :pattern ( ($generated@@85 $generated@@238 $generated@@237 $generated@@239))
)))
(assert (forall (($generated@@242 T@U) ($generated@@243 T@U) ) (! (= (type ($generated@@240 $generated@@242 $generated@@243)) $generated@@161)
 :pattern ( ($generated@@240 $generated@@242 $generated@@243))
)))
(assert (forall (($generated@@244 T@U) ($generated@@245 T@U) ($generated@@246 T@U) ($generated@@247 T@U) ) (!  (=> (and (and (and (= (type $generated@@244) $generated@@70) (= (type $generated@@245) $generated@@70)) (= (type $generated@@246) $generated@@170)) (= (type $generated@@247) $generated@@170)) (= ($generated@@154 ($generated@@240 $generated@@246 $generated@@247) ($generated@@160 $generated@@244 $generated@@245))  (and ($generated@@241 $generated@@246 $generated@@244) ($generated@@241 $generated@@247 $generated@@245))))
 :pattern ( ($generated@@154 ($generated@@240 $generated@@246 $generated@@247) ($generated@@160 $generated@@244 $generated@@245)))
)))
(assert (= ($generated@@80 $generated@@151) 0))
(assert (forall (($generated@@249 T@T) ($generated@@250 T@U) ($generated@@251 T@U) ) (! (= (type ($generated@@248 $generated@@249 $generated@@250 $generated@@251)) ($generated@@72 $generated@@249))
 :pattern ( ($generated@@248 $generated@@249 $generated@@250 $generated@@251))
)))
(assert (= ($generated@@248 $generated@@2 $generated@@64 $generated@@69) $generated@@151))
(assert  (not ($generated@@252 $generated@@151)))
(assert (forall (($generated@@253 T@U) ($generated@@254 T@U) ) (!  (=> (and (= (type $generated@@253) $generated@@161) (= (type $generated@@254) $generated@@161)) (= ($generated@@167 $generated@@253 $generated@@254) (= $generated@@253 $generated@@254)))
 :pattern ( ($generated@@167 $generated@@253 $generated@@254))
)))
(assert (forall (($generated@@256 T@U) ) (! (= (type ($generated@@255 $generated@@256)) $generated@@70)
 :pattern ( ($generated@@255 $generated@@256))
)))
(assert (forall (($generated@@257 T@U) ($generated@@258 T@U) ) (!  (=> (and (= (type $generated@@257) ($generated@@87 $generated@@170 $generated@@4)) (= (type $generated@@258) $generated@@70)) (= ($generated@@154 $generated@@257 ($generated@@255 $generated@@258)) (forall (($generated@@259 T@U) ) (!  (=> (and (= (type $generated@@259) $generated@@170) ($generated@@0 ($generated@@92 $generated@@257 $generated@@259))) ($generated@@241 $generated@@259 $generated@@258))
 :pattern ( ($generated@@92 $generated@@257 $generated@@259))
))))
 :pattern ( ($generated@@154 $generated@@257 ($generated@@255 $generated@@258)))
)))
(assert (forall (($generated@@261 T@U) ) (! (= (type ($generated@@260 $generated@@261)) $generated@@70)
 :pattern ( ($generated@@260 $generated@@261))
)))
(assert (forall (($generated@@262 T@U) ($generated@@263 T@U) ) (!  (=> (and (= (type $generated@@262) ($generated@@87 $generated@@170 $generated@@4)) (= (type $generated@@263) $generated@@70)) (= ($generated@@154 $generated@@262 ($generated@@260 $generated@@263)) (forall (($generated@@264 T@U) ) (!  (=> (and (= (type $generated@@264) $generated@@170) ($generated@@0 ($generated@@92 $generated@@262 $generated@@264))) ($generated@@241 $generated@@264 $generated@@263))
 :pattern ( ($generated@@92 $generated@@262 $generated@@264))
))))
 :pattern ( ($generated@@154 $generated@@262 ($generated@@260 $generated@@263)))
)))
(assert (forall (($generated@@266 Int) ) (! (= ($generated@@265 $generated@@266) $generated@@266)
 :pattern ( ($generated@@265 $generated@@266))
)))
(assert (forall (($generated@@268 Real) ) (! (= ($generated@@267 $generated@@268) $generated@@268)
 :pattern ( ($generated@@267 $generated@@268))
)))
(assert (forall (($generated@@270 T@U) ) (! (let (($generated@@271 (type $generated@@270)))
(= (type ($generated@@269 $generated@@270)) $generated@@271))
 :pattern ( ($generated@@269 $generated@@270))
)))
(assert (forall (($generated@@272 T@U) ) (! (= ($generated@@269 $generated@@272) $generated@@272)
 :pattern ( ($generated@@269 $generated@@272))
)))
(assert  (=> (<= 0 $generated@@273) (forall (($generated@@276 Real) ) (!  (=> (or ($generated@@275 $generated@@276) (not (= 0 $generated@@273))) true)
 :pattern ( ($generated@@274 $generated@@276))
))))
(assert (forall (($generated@@278 T@U) ($generated@@279 T@U) ($generated@@280 T@U) ($generated@@281 T@U) ($generated@@282 T@U) ) (!  (=> (and (and (and (and (and (= (type $generated@@278) $generated@@70) (= (type $generated@@279) $generated@@70)) (= (type $generated@@280) $generated@@170)) (= (type $generated@@281) $generated@@170)) (= (type $generated@@282) ($generated@@87 $generated@@88 $generated@@89))) ($generated@@152 $generated@@282)) (= ($generated@@85 ($generated@@240 $generated@@280 $generated@@281) ($generated@@160 $generated@@278 $generated@@279) $generated@@282)  (and ($generated@@277 $generated@@280 $generated@@278 $generated@@282) ($generated@@277 $generated@@281 $generated@@279 $generated@@282))))
 :pattern ( ($generated@@85 ($generated@@240 $generated@@280 $generated@@281) ($generated@@160 $generated@@278 $generated@@279) $generated@@282))
)))
(assert (forall (($generated@@284 T@U) ) (! (= (type ($generated@@283 $generated@@284)) $generated@@75)
 :pattern ( ($generated@@283 $generated@@284))
)))
(assert (forall (($generated@@285 T@U) ) (!  (=> (= (type $generated@@285) $generated@@161) (= ($generated@@159 $generated@@285) (= ($generated@@283 $generated@@285) $generated@@62)))
 :pattern ( ($generated@@159 $generated@@285))
)))
(assert (forall (($generated@@286 T@U) ) (!  (=> (and (= (type $generated@@286) $generated@@161) ($generated@@159 $generated@@286)) (exists (($generated@@287 T@U) ($generated@@288 T@U) ) (!  (and (and (= (type $generated@@287) $generated@@170) (= (type $generated@@288) $generated@@170)) (= $generated@@286 ($generated@@240 $generated@@287 $generated@@288)))
 :no-pattern (type $generated@@287)
 :no-pattern (type $generated@@288)
 :no-pattern ($generated $generated@@287)
 :no-pattern ($generated@@0 $generated@@287)
 :no-pattern ($generated $generated@@288)
 :no-pattern ($generated@@0 $generated@@288)
)))
 :pattern ( ($generated@@159 $generated@@286))
)))
(assert  (and (and (forall (($generated@@293 T@T) ) (= ($generated@@1 ($generated@@291 $generated@@293)) 19)) (forall (($generated@@294 T@T) ) (! (= ($generated@@292 ($generated@@291 $generated@@294)) $generated@@294)
 :pattern ( ($generated@@291 $generated@@294))
))) (forall (($generated@@295 T@T) ) (! (= (type ($generated@@289 $generated@@295)) ($generated@@291 $generated@@295))
 :pattern ( ($generated@@289 $generated@@295))
))))
(assert (forall (($generated@@296 T@T) ) (! (= ($generated@@290 ($generated@@289 $generated@@296)) 0)
 :pattern ( ($generated@@289 $generated@@296))
)))
(assert ($generated@@252 $generated@@60))
(assert (forall (($generated@@298 T@U) ) (! (= (type ($generated@@297 $generated@@298)) $generated@@170)
 :pattern ( ($generated@@297 $generated@@298))
)))
(assert (forall (($generated@@299 T@U) ($generated@@300 T@U) ($generated@@301 T@U) ) (!  (=> (and (= (type $generated@@300) $generated@@70) (= (type $generated@@301) ($generated@@87 $generated@@88 $generated@@89))) (= ($generated@@277 ($generated@@297 $generated@@299) $generated@@300 $generated@@301) ($generated@@85 $generated@@299 $generated@@300 $generated@@301)))
 :pattern ( ($generated@@277 ($generated@@297 $generated@@299) $generated@@300 $generated@@301))
)))
(assert (forall (($generated@@302 T@U) ($generated@@303 T@U) ($generated@@304 T@U) ($generated@@305 T@U) ) (!  (=> (and (and (and (and (and (= (type $generated@@302) ($generated@@87 $generated@@88 $generated@@89)) (= (type $generated@@303) ($generated@@87 $generated@@88 $generated@@89))) (= (type $generated@@304) $generated@@170)) (= (type $generated@@305) $generated@@70)) ($generated@@143 $generated@@302 $generated@@303)) ($generated@@277 $generated@@304 $generated@@305 $generated@@302)) ($generated@@277 $generated@@304 $generated@@305 $generated@@303))
 :pattern ( ($generated@@143 $generated@@302 $generated@@303) ($generated@@277 $generated@@304 $generated@@305 $generated@@302))
)))
(assert (forall (($generated@@306 T@U) ($generated@@307 T@U) ($generated@@308 T@U) ($generated@@309 T@U) ) (!  (=> (and (and (and (and (= (type $generated@@306) ($generated@@87 $generated@@88 $generated@@89)) (= (type $generated@@307) ($generated@@87 $generated@@88 $generated@@89))) (= (type $generated@@309) $generated@@70)) ($generated@@143 $generated@@306 $generated@@307)) ($generated@@85 $generated@@308 $generated@@309 $generated@@306)) ($generated@@85 $generated@@308 $generated@@309 $generated@@307))
 :pattern ( ($generated@@143 $generated@@306 $generated@@307) ($generated@@85 $generated@@308 $generated@@309 $generated@@306))
)))
(assert (forall (($generated@@310 T@U) ($generated@@311 T@U) ) (!  (=> (and (= (type $generated@@310) ($generated@@87 $generated@@88 $generated@@89)) (= (type $generated@@311) $generated@@88)) (=> (and (and ($generated@@152 $generated@@310) (and (not (= $generated@@311 $generated@@148)) (= ($generated@@153 $generated@@311) $generated@@147))) ($generated@@0 ($generated@@94 ($generated@@92 $generated@@310 $generated@@311) $generated@@60))) ($generated@@85 ($generated@@94 ($generated@@92 $generated@@310 $generated@@311) $generated@@151) $generated@@46 $generated@@310)))
 :pattern ( ($generated@@94 ($generated@@92 $generated@@310 $generated@@311) $generated@@151))
)))
(assert (forall (($generated@@314 T@T) ) (! (= (type ($generated@@313 $generated@@314)) ($generated@@87 $generated@@314 $generated@@2))
 :pattern ( ($generated@@313 $generated@@314))
)))
(assert (forall (($generated@@315 T@U) ) (! (let (($generated@@316 ($generated@@90 (type $generated@@315))))
 (=> (= (type $generated@@315) ($generated@@87 $generated@@316 $generated@@2)) (and (= (= ($generated@@312 $generated@@315) 0) (= $generated@@315 ($generated@@313 $generated@@316))) (=> (not (= ($generated@@312 $generated@@315) 0)) (exists (($generated@@317 T@U) ) (!  (and (= (type $generated@@317) $generated@@316) (< 0 ($generated ($generated@@92 $generated@@315 $generated@@317))))
 :no-pattern (type $generated@@317)
 :no-pattern ($generated $generated@@317)
 :no-pattern ($generated@@0 $generated@@317)
))))))
 :pattern ( ($generated@@312 $generated@@315))
)))
(assert  (and (and (and (and (forall (($generated@@323 T@T) ($generated@@324 T@T) ) (= ($generated@@1 ($generated@@320 $generated@@323 $generated@@324)) 20)) (forall (($generated@@325 T@T) ($generated@@326 T@T) ) (! (= ($generated@@321 ($generated@@320 $generated@@325 $generated@@326)) $generated@@325)
 :pattern ( ($generated@@320 $generated@@325 $generated@@326))
))) (forall (($generated@@327 T@T) ($generated@@328 T@T) ) (! (= ($generated@@322 ($generated@@320 $generated@@327 $generated@@328)) $generated@@328)
 :pattern ( ($generated@@320 $generated@@327 $generated@@328))
))) (forall (($generated@@329 T@U) ) (! (let (($generated@@330 ($generated@@321 (type $generated@@329))))
(= (type ($generated@@318 $generated@@329)) ($generated@@87 $generated@@330 $generated@@4)))
 :pattern ( ($generated@@318 $generated@@329))
))) (forall (($generated@@331 T@T) ($generated@@332 T@T) ) (! (= (type ($generated@@319 $generated@@331 $generated@@332)) ($generated@@320 $generated@@331 $generated@@332))
 :pattern ( ($generated@@319 $generated@@331 $generated@@332))
))))
(assert (forall (($generated@@333 T@U) ($generated@@334 T@T) ) (! (let (($generated@@335 (type $generated@@333)))
 (not ($generated@@0 ($generated@@92 ($generated@@318 ($generated@@319 $generated@@335 $generated@@334)) $generated@@333))))
 :pattern ( (let (($generated@@335 (type $generated@@333)))
($generated@@92 ($generated@@318 ($generated@@319 $generated@@335 $generated@@334)) $generated@@333)))
)))
(assert  (and (and (and (and (forall (($generated@@341 T@T) ($generated@@342 T@T) ) (= ($generated@@1 ($generated@@338 $generated@@341 $generated@@342)) 21)) (forall (($generated@@343 T@T) ($generated@@344 T@T) ) (! (= ($generated@@339 ($generated@@338 $generated@@343 $generated@@344)) $generated@@343)
 :pattern ( ($generated@@338 $generated@@343 $generated@@344))
))) (forall (($generated@@345 T@T) ($generated@@346 T@T) ) (! (= ($generated@@340 ($generated@@338 $generated@@345 $generated@@346)) $generated@@346)
 :pattern ( ($generated@@338 $generated@@345 $generated@@346))
))) (forall (($generated@@347 T@U) ) (! (let (($generated@@348 ($generated@@339 (type $generated@@347))))
(= (type ($generated@@336 $generated@@347)) ($generated@@87 $generated@@348 $generated@@4)))
 :pattern ( ($generated@@336 $generated@@347))
))) (forall (($generated@@349 T@T) ($generated@@350 T@T) ) (! (= (type ($generated@@337 $generated@@349 $generated@@350)) ($generated@@338 $generated@@349 $generated@@350))
 :pattern ( ($generated@@337 $generated@@349 $generated@@350))
))))
(assert (forall (($generated@@351 T@U) ($generated@@352 T@T) ) (! (let (($generated@@353 (type $generated@@351)))
 (not ($generated@@0 ($generated@@92 ($generated@@336 ($generated@@337 $generated@@353 $generated@@352)) $generated@@351))))
 :pattern ( (let (($generated@@353 (type $generated@@351)))
($generated@@92 ($generated@@336 ($generated@@337 $generated@@353 $generated@@352)) $generated@@351)))
)))
(assert (forall (($generated@@355 T@U) ($generated@@356 T@U) ) (!  (=> (and (and (= (type $generated@@355) ($generated@@87 $generated@@88 $generated@@89)) (= (type $generated@@356) ($generated@@87 $generated@@88 $generated@@89))) ($generated@@354 $generated@@355 $generated@@356)) (and ($generated@@143 $generated@@355 $generated@@356) (forall (($generated@@357 T@U) ($generated@@358 T@U) ) (! (let (($generated@@359 ($generated@@73 (type $generated@@358))))
 (=> (and (and (= (type $generated@@357) $generated@@88) (= (type $generated@@358) ($generated@@72 $generated@@359))) (not ($generated@@252 $generated@@358))) (= ($generated@@94 ($generated@@92 $generated@@355 $generated@@357) $generated@@358) ($generated@@94 ($generated@@92 $generated@@356 $generated@@357) $generated@@358))))
 :pattern ( ($generated@@94 ($generated@@92 $generated@@356 $generated@@357) $generated@@358))
))))
 :pattern ( ($generated@@354 $generated@@355 $generated@@356))
)))
(assert (forall (($generated@@360 T@U) ) (! (let (($generated@@361 ($generated@@90 (type $generated@@360))))
 (=> (= (type $generated@@360) ($generated@@87 $generated@@361 $generated@@2)) (= ($generated@@176 $generated@@360) (forall (($generated@@362 T@U) ) (!  (=> (= (type $generated@@362) $generated@@361) (and (<= 0 ($generated ($generated@@92 $generated@@360 $generated@@362))) (<= ($generated ($generated@@92 $generated@@360 $generated@@362)) ($generated@@312 $generated@@360))))
 :pattern ( ($generated@@92 $generated@@360 $generated@@362))
)))))
 :pattern ( ($generated@@176 $generated@@360))
)))
(assert (forall (($generated@@364 T@T) ($generated@@365 T@U) ) (! (= (type ($generated@@363 $generated@@364 $generated@@365)) $generated@@364)
 :pattern ( ($generated@@363 $generated@@364 $generated@@365))
)))
(assert (forall (($generated@@366 T@U) ) (!  (=> (and (= (type $generated@@366) $generated@@170) ($generated@@241 $generated@@366 $generated@@147)) (and (= ($generated@@297 ($generated@@363 $generated@@88 $generated@@366)) $generated@@366) ($generated@@154 ($generated@@363 $generated@@88 $generated@@366) $generated@@147)))
 :pattern ( ($generated@@241 $generated@@366 $generated@@147))
)))
(assert (forall (($generated@@367 T@U) ) (!  (=> (and (= (type $generated@@367) $generated@@170) ($generated@@241 $generated@@367 $generated@@237)) (and (= ($generated@@297 ($generated@@363 $generated@@88 $generated@@367)) $generated@@367) ($generated@@154 ($generated@@363 $generated@@88 $generated@@367) $generated@@237)))
 :pattern ( ($generated@@241 $generated@@367 $generated@@237))
)))
(assert (forall (($generated@@368 T@U) ) (!  (=> (= (type $generated@@368) $generated@@88) (= ($generated@@154 $generated@@368 $generated@@237)  (and ($generated@@154 $generated@@368 $generated@@147) (not (= $generated@@368 $generated@@148)))))
 :pattern ( ($generated@@154 $generated@@368 $generated@@237))
)))
(assert (forall (($generated@@369 T@U) ) (! (let (($generated@@370 ($generated@@322 (type $generated@@369))))
(let (($generated@@371 ($generated@@321 (type $generated@@369))))
 (=> (= (type $generated@@369) ($generated@@320 $generated@@371 $generated@@370)) (or (= $generated@@369 ($generated@@319 $generated@@371 $generated@@370)) (exists (($generated@@372 T@U) ) (!  (and (= (type $generated@@372) $generated@@371) ($generated@@0 ($generated@@92 ($generated@@318 $generated@@369) $generated@@372)))
 :no-pattern (type $generated@@372)
 :no-pattern ($generated $generated@@372)
 :no-pattern ($generated@@0 $generated@@372)
))))))
 :pattern ( ($generated@@318 $generated@@369))
)))
(assert (forall (($generated@@374 T@U) ) (! (let (($generated@@375 ($generated@@322 (type $generated@@374))))
(= (type ($generated@@373 $generated@@374)) ($generated@@87 $generated@@375 $generated@@4)))
 :pattern ( ($generated@@373 $generated@@374))
)))
(assert (forall (($generated@@376 T@U) ) (! (let (($generated@@377 ($generated@@322 (type $generated@@376))))
(let (($generated@@378 ($generated@@321 (type $generated@@376))))
 (=> (= (type $generated@@376) ($generated@@320 $generated@@378 $generated@@377)) (or (= $generated@@376 ($generated@@319 $generated@@378 $generated@@377)) (exists (($generated@@379 T@U) ) (!  (and (= (type $generated@@379) $generated@@377) ($generated@@0 ($generated@@92 ($generated@@373 $generated@@376) $generated@@379)))
 :no-pattern (type $generated@@379)
 :no-pattern ($generated $generated@@379)
 :no-pattern ($generated@@0 $generated@@379)
))))))
 :pattern ( ($generated@@373 $generated@@376))
)))
(assert (forall (($generated@@380 T@U) ) (! (let (($generated@@381 ($generated@@340 (type $generated@@380))))
(let (($generated@@382 ($generated@@339 (type $generated@@380))))
 (=> (= (type $generated@@380) ($generated@@338 $generated@@382 $generated@@381)) (or (= $generated@@380 ($generated@@337 $generated@@382 $generated@@381)) (exists (($generated@@383 T@U) ) (!  (and (= (type $generated@@383) $generated@@382) ($generated@@0 ($generated@@92 ($generated@@336 $generated@@380) $generated@@383)))
 :no-pattern (type $generated@@383)
 :no-pattern ($generated $generated@@383)
 :no-pattern ($generated@@0 $generated@@383)
))))))
 :pattern ( ($generated@@336 $generated@@380))
)))
(assert (forall (($generated@@385 T@U) ) (! (let (($generated@@386 ($generated@@340 (type $generated@@385))))
(= (type ($generated@@384 $generated@@385)) ($generated@@87 $generated@@386 $generated@@4)))
 :pattern ( ($generated@@384 $generated@@385))
)))
(assert (forall (($generated@@387 T@U) ) (! (let (($generated@@388 ($generated@@340 (type $generated@@387))))
(let (($generated@@389 ($generated@@339 (type $generated@@387))))
 (=> (= (type $generated@@387) ($generated@@338 $generated@@389 $generated@@388)) (or (= $generated@@387 ($generated@@337 $generated@@389 $generated@@388)) (exists (($generated@@390 T@U) ) (!  (and (= (type $generated@@390) $generated@@388) ($generated@@0 ($generated@@92 ($generated@@384 $generated@@387) $generated@@390)))
 :no-pattern (type $generated@@390)
 :no-pattern ($generated $generated@@390)
 :no-pattern ($generated@@0 $generated@@390)
))))))
 :pattern ( ($generated@@384 $generated@@387))
)))
(assert (forall (($generated@@391 T@U) ($generated@@392 T@U) ) (!  (=> (and (= (type $generated@@391) ($generated@@87 $generated@@170 $generated@@2)) (= (type $generated@@392) $generated@@70)) (= ($generated@@154 $generated@@391 ($generated@@175 $generated@@392)) (forall (($generated@@393 T@U) ) (!  (=> (and (= (type $generated@@393) $generated@@170) (< 0 ($generated ($generated@@92 $generated@@391 $generated@@393)))) ($generated@@241 $generated@@393 $generated@@392))
 :pattern ( ($generated@@92 $generated@@391 $generated@@393))
))))
 :pattern ( ($generated@@154 $generated@@391 ($generated@@175 $generated@@392)))
)))
(assert (forall (($generated@@394 T@U) ($generated@@395 T@U) ($generated@@396 T@U) ) (!  (=> (and (and (= (type $generated@@394) ($generated@@87 $generated@@170 $generated@@4)) (= (type $generated@@395) $generated@@70)) (= (type $generated@@396) ($generated@@87 $generated@@88 $generated@@89))) (= ($generated@@85 $generated@@394 ($generated@@255 $generated@@395) $generated@@396) (forall (($generated@@397 T@U) ) (!  (=> (and (= (type $generated@@397) $generated@@170) ($generated@@0 ($generated@@92 $generated@@394 $generated@@397))) ($generated@@277 $generated@@397 $generated@@395 $generated@@396))
 :pattern ( ($generated@@92 $generated@@394 $generated@@397))
))))
 :pattern ( ($generated@@85 $generated@@394 ($generated@@255 $generated@@395) $generated@@396))
)))
(assert (forall (($generated@@398 T@U) ($generated@@399 T@U) ($generated@@400 T@U) ) (!  (=> (and (and (= (type $generated@@398) ($generated@@87 $generated@@170 $generated@@4)) (= (type $generated@@399) $generated@@70)) (= (type $generated@@400) ($generated@@87 $generated@@88 $generated@@89))) (= ($generated@@85 $generated@@398 ($generated@@260 $generated@@399) $generated@@400) (forall (($generated@@401 T@U) ) (!  (=> (and (= (type $generated@@401) $generated@@170) ($generated@@0 ($generated@@92 $generated@@398 $generated@@401))) ($generated@@277 $generated@@401 $generated@@399 $generated@@400))
 :pattern ( ($generated@@92 $generated@@398 $generated@@401))
))))
 :pattern ( ($generated@@85 $generated@@398 ($generated@@260 $generated@@399) $generated@@400))
)))
(assert (forall (($generated@@402 T@U) ) (! (let (($generated@@403 (type $generated@@402)))
(= ($generated ($generated@@92 ($generated@@313 $generated@@403) $generated@@402)) 0))
 :pattern ( (let (($generated@@403 (type $generated@@402)))
($generated@@92 ($generated@@313 $generated@@403) $generated@@402)))
)))
(assert  (and (forall (($generated@@406 T@U) ) (! (= (type ($generated@@404 $generated@@406)) ($generated@@87 $generated@@170 $generated@@4))
 :pattern ( ($generated@@404 $generated@@406))
)) (forall (($generated@@407 T@U) ) (! (let (($generated@@408 ($generated@@322 (type $generated@@407))))
(let (($generated@@409 ($generated@@321 (type $generated@@407))))
(= (type ($generated@@405 $generated@@407)) ($generated@@87 $generated@@409 $generated@@408))))
 :pattern ( ($generated@@405 $generated@@407))
))))
(assert (forall (($generated@@410 T@U) ($generated@@411 T@U) ) (!  (=> (and (= (type $generated@@410) ($generated@@320 $generated@@170 $generated@@170)) (= (type $generated@@411) $generated@@170)) (= ($generated@@0 ($generated@@92 ($generated@@404 $generated@@410) $generated@@411))  (and ($generated@@0 ($generated@@92 ($generated@@318 $generated@@410) ($generated@@168 ($generated@@363 $generated@@161 $generated@@411)))) (= ($generated@@92 ($generated@@405 $generated@@410) ($generated@@168 ($generated@@363 $generated@@161 $generated@@411))) ($generated@@169 ($generated@@363 $generated@@161 $generated@@411))))))
 :pattern ( ($generated@@92 ($generated@@404 $generated@@410) $generated@@411))
)))
(assert  (and (forall (($generated@@414 T@U) ) (! (= (type ($generated@@412 $generated@@414)) ($generated@@87 $generated@@170 $generated@@4))
 :pattern ( ($generated@@412 $generated@@414))
)) (forall (($generated@@415 T@U) ) (! (let (($generated@@416 ($generated@@340 (type $generated@@415))))
(let (($generated@@417 ($generated@@339 (type $generated@@415))))
(= (type ($generated@@413 $generated@@415)) ($generated@@87 $generated@@417 $generated@@416))))
 :pattern ( ($generated@@413 $generated@@415))
))))
(assert (forall (($generated@@418 T@U) ($generated@@419 T@U) ) (!  (=> (and (= (type $generated@@418) ($generated@@338 $generated@@170 $generated@@170)) (= (type $generated@@419) $generated@@170)) (= ($generated@@0 ($generated@@92 ($generated@@412 $generated@@418) $generated@@419))  (and ($generated@@0 ($generated@@92 ($generated@@336 $generated@@418) ($generated@@168 ($generated@@363 $generated@@161 $generated@@419)))) (= ($generated@@92 ($generated@@413 $generated@@418) ($generated@@168 ($generated@@363 $generated@@161 $generated@@419))) ($generated@@169 ($generated@@363 $generated@@161 $generated@@419))))))
 :pattern ( ($generated@@92 ($generated@@412 $generated@@418) $generated@@419))
)))
(assert (forall (($generated@@420 T@U) ($generated@@421 T@U) ) (! (let (($generated@@422 (type $generated@@421)))
(let (($generated@@423 ($generated@@321 (type $generated@@420))))
 (=> (= (type $generated@@420) ($generated@@320 $generated@@423 $generated@@422)) (= ($generated@@0 ($generated@@92 ($generated@@373 $generated@@420) $generated@@421)) (exists (($generated@@424 T@U) ) (!  (and (= (type $generated@@424) $generated@@423) (and ($generated@@0 ($generated@@92 ($generated@@318 $generated@@420) $generated@@424)) (= $generated@@421 ($generated@@92 ($generated@@405 $generated@@420) $generated@@424))))
 :pattern ( ($generated@@92 ($generated@@318 $generated@@420) $generated@@424))
 :pattern ( ($generated@@92 ($generated@@405 $generated@@420) $generated@@424))
))))))
 :pattern ( ($generated@@92 ($generated@@373 $generated@@420) $generated@@421))
)))
(assert (forall (($generated@@425 T@U) ($generated@@426 T@U) ) (! (let (($generated@@427 (type $generated@@426)))
(let (($generated@@428 ($generated@@339 (type $generated@@425))))
 (=> (= (type $generated@@425) ($generated@@338 $generated@@428 $generated@@427)) (= ($generated@@0 ($generated@@92 ($generated@@384 $generated@@425) $generated@@426)) (exists (($generated@@429 T@U) ) (!  (and (= (type $generated@@429) $generated@@428) (and ($generated@@0 ($generated@@92 ($generated@@336 $generated@@425) $generated@@429)) (= $generated@@426 ($generated@@92 ($generated@@413 $generated@@425) $generated@@429))))
 :pattern ( ($generated@@92 ($generated@@336 $generated@@425) $generated@@429))
 :pattern ( ($generated@@92 ($generated@@413 $generated@@425) $generated@@429))
))))))
 :pattern ( ($generated@@92 ($generated@@384 $generated@@425) $generated@@426))
)))
(assert (forall (($generated@@431 T@U) ($generated@@432 T@U) ) (! (= (type ($generated@@430 $generated@@431 $generated@@432)) $generated@@70)
 :pattern ( ($generated@@430 $generated@@431 $generated@@432))
)))
(assert (forall (($generated@@433 T@U) ($generated@@434 T@U) ($generated@@435 T@U) ($generated@@436 T@U) ) (!  (=> (and (and (and (= (type $generated@@433) ($generated@@320 $generated@@170 $generated@@170)) (= (type $generated@@434) $generated@@70)) (= (type $generated@@435) $generated@@70)) (= (type $generated@@436) ($generated@@87 $generated@@88 $generated@@89))) (= ($generated@@85 $generated@@433 ($generated@@430 $generated@@434 $generated@@435) $generated@@436) (forall (($generated@@437 T@U) ) (!  (=> (and (= (type $generated@@437) $generated@@170) ($generated@@0 ($generated@@92 ($generated@@318 $generated@@433) $generated@@437))) (and ($generated@@277 ($generated@@92 ($generated@@405 $generated@@433) $generated@@437) $generated@@435 $generated@@436) ($generated@@277 $generated@@437 $generated@@434 $generated@@436)))
 :pattern ( ($generated@@92 ($generated@@405 $generated@@433) $generated@@437))
 :pattern ( ($generated@@92 ($generated@@318 $generated@@433) $generated@@437))
))))
 :pattern ( ($generated@@85 $generated@@433 ($generated@@430 $generated@@434 $generated@@435) $generated@@436))
)))
(assert (forall (($generated@@439 T@U) ($generated@@440 T@U) ) (! (= (type ($generated@@438 $generated@@439 $generated@@440)) $generated@@70)
 :pattern ( ($generated@@438 $generated@@439 $generated@@440))
)))
(assert (forall (($generated@@441 T@U) ($generated@@442 T@U) ($generated@@443 T@U) ($generated@@444 T@U) ) (!  (=> (and (and (and (= (type $generated@@441) ($generated@@338 $generated@@170 $generated@@170)) (= (type $generated@@442) $generated@@70)) (= (type $generated@@443) $generated@@70)) (= (type $generated@@444) ($generated@@87 $generated@@88 $generated@@89))) (= ($generated@@85 $generated@@441 ($generated@@438 $generated@@442 $generated@@443) $generated@@444) (forall (($generated@@445 T@U) ) (!  (=> (and (= (type $generated@@445) $generated@@170) ($generated@@0 ($generated@@92 ($generated@@336 $generated@@441) $generated@@445))) (and ($generated@@277 ($generated@@92 ($generated@@413 $generated@@441) $generated@@445) $generated@@443 $generated@@444) ($generated@@277 $generated@@445 $generated@@442 $generated@@444)))
 :pattern ( ($generated@@92 ($generated@@413 $generated@@441) $generated@@445))
 :pattern ( ($generated@@92 ($generated@@336 $generated@@441) $generated@@445))
))))
 :pattern ( ($generated@@85 $generated@@441 ($generated@@438 $generated@@442 $generated@@443) $generated@@444))
)))
(assert (forall (($generated@@446 T@U) ($generated@@447 T@U) ($generated@@448 T@U) ) (!  (=> (and (and (and (and (= (type $generated@@446) ($generated@@87 $generated@@88 $generated@@89)) (= (type $generated@@447) ($generated@@87 $generated@@88 $generated@@89))) (= (type $generated@@448) ($generated@@87 $generated@@88 $generated@@89))) (not (= $generated@@446 $generated@@448))) (and ($generated@@143 $generated@@446 $generated@@447) ($generated@@143 $generated@@447 $generated@@448))) ($generated@@143 $generated@@446 $generated@@448))
 :pattern ( ($generated@@143 $generated@@446 $generated@@447) ($generated@@143 $generated@@447 $generated@@448))
)))
(assert (forall (($generated@@450 T@T) ) (! (= (type ($generated@@449 $generated@@450)) ($generated@@87 $generated@@450 $generated@@4))
 :pattern ( ($generated@@449 $generated@@450))
)))
(assert (forall (($generated@@451 T@U) ) (! (let (($generated@@452 ($generated@@340 (type $generated@@451))))
(let (($generated@@453 ($generated@@339 (type $generated@@451))))
 (=> (= (type $generated@@451) ($generated@@338 $generated@@453 $generated@@452)) (= (= $generated@@451 ($generated@@337 $generated@@453 $generated@@452)) (= ($generated@@336 $generated@@451) ($generated@@449 $generated@@453))))))
 :pattern ( ($generated@@336 $generated@@451))
)))
(assert (forall (($generated@@454 T@U) ) (! (let (($generated@@455 ($generated@@340 (type $generated@@454))))
(let (($generated@@456 ($generated@@339 (type $generated@@454))))
 (=> (= (type $generated@@454) ($generated@@338 $generated@@456 $generated@@455)) (= (= $generated@@454 ($generated@@337 $generated@@456 $generated@@455)) (= ($generated@@384 $generated@@454) ($generated@@449 $generated@@455))))))
 :pattern ( ($generated@@384 $generated@@454))
)))
(assert (forall (($generated@@457 T@U) ) (! (let (($generated@@458 ($generated@@340 (type $generated@@457))))
(let (($generated@@459 ($generated@@339 (type $generated@@457))))
 (=> (= (type $generated@@457) ($generated@@338 $generated@@459 $generated@@458)) (= (= $generated@@457 ($generated@@337 $generated@@459 $generated@@458)) (= ($generated@@412 $generated@@457) ($generated@@449 $generated@@170))))))
 :pattern ( ($generated@@412 $generated@@457))
)))
(assert (forall (($generated@@460 T@U) ) (! (let (($generated@@461 ($generated@@322 (type $generated@@460))))
(let (($generated@@462 ($generated@@321 (type $generated@@460))))
 (=> (= (type $generated@@460) ($generated@@320 $generated@@462 $generated@@461)) (or (= $generated@@460 ($generated@@319 $generated@@462 $generated@@461)) (exists (($generated@@463 T@U) ($generated@@464 T@U) ) (!  (and (and (= (type $generated@@463) $generated@@170) (= (type $generated@@464) $generated@@170)) ($generated@@0 ($generated@@92 ($generated@@404 $generated@@460) ($generated@@297 ($generated@@240 $generated@@463 $generated@@464)))))
 :no-pattern (type $generated@@463)
 :no-pattern (type $generated@@464)
 :no-pattern ($generated $generated@@463)
 :no-pattern ($generated@@0 $generated@@463)
 :no-pattern ($generated $generated@@464)
 :no-pattern ($generated@@0 $generated@@464)
))))))
 :pattern ( ($generated@@404 $generated@@460))
)))
(assert (forall (($generated@@465 T@U) ) (! (let (($generated@@466 ($generated@@340 (type $generated@@465))))
(let (($generated@@467 ($generated@@339 (type $generated@@465))))
 (=> (= (type $generated@@465) ($generated@@338 $generated@@467 $generated@@466)) (or (= $generated@@465 ($generated@@337 $generated@@467 $generated@@466)) (exists (($generated@@468 T@U) ($generated@@469 T@U) ) (!  (and (and (= (type $generated@@468) $generated@@170) (= (type $generated@@469) $generated@@170)) ($generated@@0 ($generated@@92 ($generated@@412 $generated@@465) ($generated@@297 ($generated@@240 $generated@@468 $generated@@469)))))
 :no-pattern (type $generated@@468)
 :no-pattern (type $generated@@469)
 :no-pattern ($generated $generated@@468)
 :no-pattern ($generated@@0 $generated@@468)
 :no-pattern ($generated $generated@@469)
 :no-pattern ($generated@@0 $generated@@469)
))))))
 :pattern ( ($generated@@412 $generated@@465))
)))
(assert (forall (($generated@@471 T@U) ) (! (= (type ($generated@@470 $generated@@471)) $generated@@76)
 :pattern ( ($generated@@470 $generated@@471))
)))
(assert (forall (($generated@@472 T@U) ($generated@@473 T@U) ($generated@@474 T@T) ) (!  (=> (and (= (type $generated@@472) $generated@@76) (= (type $generated@@473) $generated@@74)) (and (= ($generated@@470 ($generated@@248 $generated@@474 $generated@@472 $generated@@473)) $generated@@472) (= ($generated@@83 ($generated@@248 $generated@@474 $generated@@472 $generated@@473)) $generated@@473)))
 :pattern ( ($generated@@248 $generated@@474 $generated@@472 $generated@@473))
)))
(assert (forall (($generated@@475 T@U) ) (!  (=> (and (= (type $generated@@475) $generated@@170) ($generated@@241 $generated@@475 $generated@@46)) (and (= ($generated@@297 ($generated@@363 $generated@@2 $generated@@475)) $generated@@475) ($generated@@154 ($generated@@363 $generated@@2 $generated@@475) $generated@@46)))
 :pattern ( ($generated@@241 $generated@@475 $generated@@46))
)))
(assert (forall (($generated@@476 T@U) ) (!  (=> (and (= (type $generated@@476) $generated@@170) ($generated@@241 $generated@@476 $generated@@47)) (and (= ($generated@@297 ($generated@@363 $generated@@3 $generated@@476)) $generated@@476) ($generated@@154 ($generated@@363 $generated@@3 $generated@@476) $generated@@47)))
 :pattern ( ($generated@@241 $generated@@476 $generated@@47))
)))
(assert (forall (($generated@@477 T@U) ) (!  (=> (and (= (type $generated@@477) $generated@@170) ($generated@@241 $generated@@477 $generated@@44)) (and (= ($generated@@297 ($generated@@363 $generated@@4 $generated@@477)) $generated@@477) ($generated@@154 ($generated@@363 $generated@@4 $generated@@477) $generated@@44)))
 :pattern ( ($generated@@241 $generated@@477 $generated@@44))
)))
(assert (= ($generated@@1 $generated@@478) 22))
(assert (forall (($generated@@479 T@U) ) (!  (=> (and (= (type $generated@@479) $generated@@170) ($generated@@241 $generated@@479 $generated@@45)) (and (= ($generated@@297 ($generated@@363 $generated@@478 $generated@@479)) $generated@@479) ($generated@@154 ($generated@@363 $generated@@478 $generated@@479) $generated@@45)))
 :pattern ( ($generated@@241 $generated@@479 $generated@@45))
)))
(assert (forall (($generated@@480 T@U) ($generated@@481 T@U) ) (!  (=> (= (type $generated@@481) $generated@@70) (= ($generated@@241 ($generated@@297 $generated@@480) $generated@@481) ($generated@@154 $generated@@480 $generated@@481)))
 :pattern ( ($generated@@241 ($generated@@297 $generated@@480) $generated@@481))
)))
(assert  (=> (<= 0 $generated@@273) (forall (($generated@@482 Real) ) (!  (=> (or ($generated@@275 $generated@@482) (not (= 0 $generated@@273))) (= ($generated@@274 $generated@@482) (= $generated@@482 ($generated@@267 3.14))))
 :pattern ( ($generated@@274 $generated@@482))
))))
(assert (forall (($generated@@483 T@U) ) (! (let (($generated@@484 ($generated@@90 (type $generated@@483))))
 (=> (= (type $generated@@483) ($generated@@87 $generated@@484 $generated@@2)) (<= 0 ($generated@@312 $generated@@483))))
 :pattern ( ($generated@@312 $generated@@483))
)))
(assert (forall (($generated@@485 T@U) ) (! (let (($generated@@486 ($generated@@292 (type $generated@@485))))
 (=> (= (type $generated@@485) ($generated@@291 $generated@@486)) (<= 0 ($generated@@290 $generated@@485))))
 :pattern ( ($generated@@290 $generated@@485))
)))
(assert (forall (($generated@@488 T@U) ) (! (= (type ($generated@@487 $generated@@488)) $generated@@70)
 :pattern ( ($generated@@487 $generated@@488))
)))
(assert (forall (($generated@@489 T@U) ($generated@@490 T@U) ) (!  (=> (and (= (type $generated@@489) $generated@@70) (= (type $generated@@490) $generated@@70)) (= ($generated@@487 ($generated@@430 $generated@@489 $generated@@490)) $generated@@489))
 :pattern ( ($generated@@430 $generated@@489 $generated@@490))
)))
(assert (forall (($generated@@492 T@U) ) (! (= (type ($generated@@491 $generated@@492)) $generated@@70)
 :pattern ( ($generated@@491 $generated@@492))
)))
(assert (forall (($generated@@493 T@U) ($generated@@494 T@U) ) (!  (=> (and (= (type $generated@@493) $generated@@70) (= (type $generated@@494) $generated@@70)) (= ($generated@@491 ($generated@@430 $generated@@493 $generated@@494)) $generated@@494))
 :pattern ( ($generated@@430 $generated@@493 $generated@@494))
)))
(assert (forall (($generated@@495 T@U) ($generated@@496 T@U) ) (!  (=> (and (= (type $generated@@495) $generated@@70) (= (type $generated@@496) $generated@@70)) (= ($generated@@81 ($generated@@430 $generated@@495 $generated@@496)) $generated@@58))
 :pattern ( ($generated@@430 $generated@@495 $generated@@496))
)))
(assert (forall (($generated@@498 T@U) ) (! (= (type ($generated@@497 $generated@@498)) $generated@@70)
 :pattern ( ($generated@@497 $generated@@498))
)))
(assert (forall (($generated@@499 T@U) ($generated@@500 T@U) ) (!  (=> (and (= (type $generated@@499) $generated@@70) (= (type $generated@@500) $generated@@70)) (= ($generated@@497 ($generated@@438 $generated@@499 $generated@@500)) $generated@@499))
 :pattern ( ($generated@@438 $generated@@499 $generated@@500))
)))
(assert (forall (($generated@@502 T@U) ) (! (= (type ($generated@@501 $generated@@502)) $generated@@70)
 :pattern ( ($generated@@501 $generated@@502))
)))
(assert (forall (($generated@@503 T@U) ($generated@@504 T@U) ) (!  (=> (and (= (type $generated@@503) $generated@@70) (= (type $generated@@504) $generated@@70)) (= ($generated@@501 ($generated@@438 $generated@@503 $generated@@504)) $generated@@504))
 :pattern ( ($generated@@438 $generated@@503 $generated@@504))
)))
(assert (forall (($generated@@505 T@U) ($generated@@506 T@U) ) (!  (=> (and (= (type $generated@@505) $generated@@70) (= (type $generated@@506) $generated@@70)) (= ($generated@@81 ($generated@@438 $generated@@505 $generated@@506)) $generated@@59))
 :pattern ( ($generated@@438 $generated@@505 $generated@@506))
)))
(assert (forall (($generated@@507 T@U) ($generated@@508 T@U) ) (!  (=> (and (= (type $generated@@507) $generated@@170) (= (type $generated@@508) $generated@@170)) (= ($generated@@283 ($generated@@240 $generated@@507 $generated@@508)) $generated@@62))
 :pattern ( ($generated@@240 $generated@@507 $generated@@508))
)))
(assert (forall (($generated@@510 T@U) ) (! (= (type ($generated@@509 $generated@@510)) $generated@@70)
 :pattern ( ($generated@@509 $generated@@510))
)))
(assert (forall (($generated@@511 T@U) ($generated@@512 T@U) ) (!  (=> (and (= (type $generated@@511) $generated@@70) (= (type $generated@@512) $generated@@70)) (= ($generated@@509 ($generated@@160 $generated@@511 $generated@@512)) $generated@@511))
 :pattern ( ($generated@@160 $generated@@511 $generated@@512))
)))
(assert (forall (($generated@@514 T@U) ) (! (= (type ($generated@@513 $generated@@514)) $generated@@70)
 :pattern ( ($generated@@513 $generated@@514))
)))
(assert (forall (($generated@@515 T@U) ($generated@@516 T@U) ) (!  (=> (and (= (type $generated@@515) $generated@@70) (= (type $generated@@516) $generated@@70)) (= ($generated@@513 ($generated@@160 $generated@@515 $generated@@516)) $generated@@516))
 :pattern ( ($generated@@160 $generated@@515 $generated@@516))
)))
(assert (forall (($generated@@517 T@U) ($generated@@518 T@U) ) (!  (=> (and (= (type $generated@@517) $generated@@170) (= (type $generated@@518) $generated@@170)) (= ($generated@@168 ($generated@@240 $generated@@517 $generated@@518)) $generated@@517))
 :pattern ( ($generated@@240 $generated@@517 $generated@@518))
)))
(assert (forall (($generated@@519 T@U) ($generated@@520 T@U) ) (!  (=> (and (= (type $generated@@519) $generated@@170) (= (type $generated@@520) $generated@@170)) (= ($generated@@169 ($generated@@240 $generated@@519 $generated@@520)) $generated@@520))
 :pattern ( ($generated@@240 $generated@@519 $generated@@520))
)))
(assert  (and (forall (($generated@@523 T@U) ) (! (= (type ($generated@@521 $generated@@523)) $generated@@70)
 :pattern ( ($generated@@521 $generated@@523))
)) (forall (($generated@@524 T@U) ($generated@@525 Int) ) (! (let (($generated@@526 ($generated@@292 (type $generated@@524))))
(= (type ($generated@@522 $generated@@524 $generated@@525)) $generated@@526))
 :pattern ( ($generated@@522 $generated@@524 $generated@@525))
))))
(assert (forall (($generated@@527 T@U) ($generated@@528 T@U) ($generated@@529 T@U) ) (!  (=> (and (and (= (type $generated@@527) ($generated@@291 $generated@@170)) (= (type $generated@@528) $generated@@70)) (= (type $generated@@529) ($generated@@87 $generated@@88 $generated@@89))) (= ($generated@@85 $generated@@527 ($generated@@521 $generated@@528) $generated@@529) (forall (($generated@@530 Int) ) (!  (=> (and (<= 0 $generated@@530) (< $generated@@530 ($generated@@290 $generated@@527))) ($generated@@277 ($generated@@522 $generated@@527 $generated@@530) $generated@@528 $generated@@529))
 :pattern ( ($generated@@522 $generated@@527 $generated@@530))
))))
 :pattern ( ($generated@@85 $generated@@527 ($generated@@521 $generated@@528) $generated@@529))
)))
(assert (forall (($generated@@532 Int) ) (! (= ($generated@@531 ($generated@@86 $generated@@532)) $generated@@532)
 :pattern ( ($generated@@86 $generated@@532))
)))
(assert (forall (($generated@@534 T@U) ) (! (= (type ($generated@@533 $generated@@534)) $generated@@70)
 :pattern ( ($generated@@533 $generated@@534))
)))
(assert (forall (($generated@@535 T@U) ) (!  (=> (= (type $generated@@535) $generated@@70) (= ($generated@@533 ($generated@@255 $generated@@535)) $generated@@535))
 :pattern ( ($generated@@255 $generated@@535))
)))
(assert (forall (($generated@@536 T@U) ) (!  (=> (= (type $generated@@536) $generated@@70) (= ($generated@@81 ($generated@@255 $generated@@536)) $generated@@54))
 :pattern ( ($generated@@255 $generated@@536))
)))
(assert (forall (($generated@@538 T@U) ) (! (= (type ($generated@@537 $generated@@538)) $generated@@70)
 :pattern ( ($generated@@537 $generated@@538))
)))
(assert (forall (($generated@@539 T@U) ) (!  (=> (= (type $generated@@539) $generated@@70) (= ($generated@@537 ($generated@@260 $generated@@539)) $generated@@539))
 :pattern ( ($generated@@260 $generated@@539))
)))
(assert (forall (($generated@@540 T@U) ) (!  (=> (= (type $generated@@540) $generated@@70) (= ($generated@@81 ($generated@@260 $generated@@540)) $generated@@55))
 :pattern ( ($generated@@260 $generated@@540))
)))
(assert (forall (($generated@@542 T@U) ) (! (= (type ($generated@@541 $generated@@542)) $generated@@70)
 :pattern ( ($generated@@541 $generated@@542))
)))
(assert (forall (($generated@@543 T@U) ) (!  (=> (= (type $generated@@543) $generated@@70) (= ($generated@@541 ($generated@@175 $generated@@543)) $generated@@543))
 :pattern ( ($generated@@175 $generated@@543))
)))
(assert (forall (($generated@@544 T@U) ) (!  (=> (= (type $generated@@544) $generated@@70) (= ($generated@@81 ($generated@@175 $generated@@544)) $generated@@56))
 :pattern ( ($generated@@175 $generated@@544))
)))
(assert (forall (($generated@@546 T@U) ) (! (= (type ($generated@@545 $generated@@546)) $generated@@70)
 :pattern ( ($generated@@545 $generated@@546))
)))
(assert (forall (($generated@@547 T@U) ) (!  (=> (= (type $generated@@547) $generated@@70) (= ($generated@@545 ($generated@@521 $generated@@547)) $generated@@547))
 :pattern ( ($generated@@521 $generated@@547))
)))
(assert (forall (($generated@@548 T@U) ) (!  (=> (= (type $generated@@548) $generated@@70) (= ($generated@@81 ($generated@@521 $generated@@548)) $generated@@57))
 :pattern ( ($generated@@521 $generated@@548))
)))
(assert (forall (($generated@@549 T@U) ) (! (let (($generated@@550 (type $generated@@549)))
(= ($generated@@363 $generated@@550 ($generated@@297 $generated@@549)) $generated@@549))
 :pattern ( ($generated@@297 $generated@@549))
)))
(assert (forall (($generated@@551 T@U) ($generated@@552 T@U) ($generated@@553 T@U) ) (!  (=> (and (and (= (type $generated@@551) ($generated@@320 $generated@@170 $generated@@170)) (= (type $generated@@552) $generated@@70)) (= (type $generated@@553) $generated@@70)) (= ($generated@@154 $generated@@551 ($generated@@430 $generated@@552 $generated@@553)) (forall (($generated@@554 T@U) ) (!  (=> (and (= (type $generated@@554) $generated@@170) ($generated@@0 ($generated@@92 ($generated@@318 $generated@@551) $generated@@554))) (and ($generated@@241 ($generated@@92 ($generated@@405 $generated@@551) $generated@@554) $generated@@553) ($generated@@241 $generated@@554 $generated@@552)))
 :pattern ( ($generated@@92 ($generated@@405 $generated@@551) $generated@@554))
 :pattern ( ($generated@@92 ($generated@@318 $generated@@551) $generated@@554))
))))
 :pattern ( ($generated@@154 $generated@@551 ($generated@@430 $generated@@552 $generated@@553)))
)))
(assert (forall (($generated@@555 T@U) ($generated@@556 T@U) ($generated@@557 T@U) ) (!  (=> (and (and (= (type $generated@@555) ($generated@@338 $generated@@170 $generated@@170)) (= (type $generated@@556) $generated@@70)) (= (type $generated@@557) $generated@@70)) (= ($generated@@154 $generated@@555 ($generated@@438 $generated@@556 $generated@@557)) (forall (($generated@@558 T@U) ) (!  (=> (and (= (type $generated@@558) $generated@@170) ($generated@@0 ($generated@@92 ($generated@@336 $generated@@555) $generated@@558))) (and ($generated@@241 ($generated@@92 ($generated@@413 $generated@@555) $generated@@558) $generated@@557) ($generated@@241 $generated@@558 $generated@@556)))
 :pattern ( ($generated@@92 ($generated@@413 $generated@@555) $generated@@558))
 :pattern ( ($generated@@92 ($generated@@336 $generated@@555) $generated@@558))
))))
 :pattern ( ($generated@@154 $generated@@555 ($generated@@438 $generated@@556 $generated@@557)))
)))
(assert (forall (($generated@@561 T@U) ($generated@@562 T@U) ) (!  (=> (and (= (type $generated@@561) $generated@@170) (= (type $generated@@562) $generated@@170)) (< ($generated@@559 $generated@@561) ($generated@@560 ($generated@@240 $generated@@561 $generated@@562))))
 :pattern ( ($generated@@240 $generated@@561 $generated@@562))
)))
(assert (forall (($generated@@563 T@U) ($generated@@564 T@U) ) (!  (=> (and (= (type $generated@@563) $generated@@170) (= (type $generated@@564) $generated@@170)) (< ($generated@@559 $generated@@564) ($generated@@560 ($generated@@240 $generated@@563 $generated@@564))))
 :pattern ( ($generated@@240 $generated@@563 $generated@@564))
)))
(assert (forall (($generated@@565 T@U) ($generated@@566 T@U) ($generated@@567 T@U) ) (!  (=> (and (and (and (= (type $generated@@565) $generated@@170) (= (type $generated@@566) $generated@@70)) (= (type $generated@@567) $generated@@70)) ($generated@@241 $generated@@565 ($generated@@430 $generated@@566 $generated@@567))) (and (= ($generated@@297 ($generated@@363 ($generated@@320 $generated@@170 $generated@@170) $generated@@565)) $generated@@565) ($generated@@154 ($generated@@363 ($generated@@320 $generated@@170 $generated@@170) $generated@@565) ($generated@@430 $generated@@566 $generated@@567))))
 :pattern ( ($generated@@241 $generated@@565 ($generated@@430 $generated@@566 $generated@@567)))
)))
(assert (forall (($generated@@568 T@U) ($generated@@569 T@U) ($generated@@570 T@U) ) (!  (=> (and (and (and (= (type $generated@@568) $generated@@170) (= (type $generated@@569) $generated@@70)) (= (type $generated@@570) $generated@@70)) ($generated@@241 $generated@@568 ($generated@@438 $generated@@569 $generated@@570))) (and (= ($generated@@297 ($generated@@363 ($generated@@338 $generated@@170 $generated@@170) $generated@@568)) $generated@@568) ($generated@@154 ($generated@@363 ($generated@@338 $generated@@170 $generated@@170) $generated@@568) ($generated@@438 $generated@@569 $generated@@570))))
 :pattern ( ($generated@@241 $generated@@568 ($generated@@438 $generated@@569 $generated@@570)))
)))
(assert (forall (($generated@@571 T@U) ($generated@@572 T@U) ($generated@@573 T@U) ) (!  (=> (and (and (and (= (type $generated@@571) $generated@@70) (= (type $generated@@572) $generated@@70)) (= (type $generated@@573) $generated@@170)) ($generated@@241 $generated@@573 ($generated@@160 $generated@@571 $generated@@572))) (and (= ($generated@@297 ($generated@@363 $generated@@161 $generated@@573)) $generated@@573) ($generated@@154 ($generated@@363 $generated@@161 $generated@@573) ($generated@@160 $generated@@571 $generated@@572))))
 :pattern ( ($generated@@241 $generated@@573 ($generated@@160 $generated@@571 $generated@@572)))
)))
(assert (forall (($generated@@574 T@U) ) (! (let (($generated@@575 (type $generated@@574)))
 (not ($generated@@0 ($generated@@92 ($generated@@449 $generated@@575) $generated@@574))))
 :pattern ( (let (($generated@@575 (type $generated@@574)))
($generated@@92 ($generated@@449 $generated@@575) $generated@@574)))
)))
(assert (forall (($generated@@577 T@U) ) (! (= (type ($generated@@576 $generated@@577)) $generated@@77)
 :pattern ( ($generated@@576 $generated@@577))
)))
(assert (forall (($generated@@578 T@U) ($generated@@579 T@U) ) (!  (=> (and (= (type $generated@@578) $generated@@70) (= (type $generated@@579) $generated@@70)) (and (= ($generated@@81 ($generated@@160 $generated@@578 $generated@@579)) $generated@@63) (= ($generated@@576 ($generated@@160 $generated@@578 $generated@@579)) $generated@@67)))
 :pattern ( ($generated@@160 $generated@@578 $generated@@579))
)))
(assert (forall (($generated@@580 T@U) ) (!  (=> (= (type $generated@@580) $generated@@161) (= ($generated@@559 ($generated@@297 $generated@@580)) ($generated@@560 $generated@@580)))
 :pattern ( ($generated@@559 ($generated@@297 $generated@@580)))
)))
(assert (forall (($generated@@581 T@U) ) (!  (=> (and (= (type $generated@@581) $generated@@170) ($generated@@241 $generated@@581 ($generated@@86 0))) (and (= ($generated@@297 ($generated@@363 $generated@@2 $generated@@581)) $generated@@581) ($generated@@154 ($generated@@363 ($generated@@87 $generated@@170 $generated@@4) $generated@@581) ($generated@@86 0))))
 :pattern ( ($generated@@241 $generated@@581 ($generated@@86 0)))
)))
(assert (forall (($generated@@582 T@U) ($generated@@583 T@U) ) (!  (=> (and (and (= (type $generated@@582) $generated@@170) (= (type $generated@@583) $generated@@70)) ($generated@@241 $generated@@582 ($generated@@255 $generated@@583))) (and (= ($generated@@297 ($generated@@363 ($generated@@87 $generated@@170 $generated@@4) $generated@@582)) $generated@@582) ($generated@@154 ($generated@@363 ($generated@@87 $generated@@170 $generated@@4) $generated@@582) ($generated@@255 $generated@@583))))
 :pattern ( ($generated@@241 $generated@@582 ($generated@@255 $generated@@583)))
)))
(assert (forall (($generated@@584 T@U) ($generated@@585 T@U) ) (!  (=> (and (and (= (type $generated@@584) $generated@@170) (= (type $generated@@585) $generated@@70)) ($generated@@241 $generated@@584 ($generated@@260 $generated@@585))) (and (= ($generated@@297 ($generated@@363 ($generated@@87 $generated@@170 $generated@@4) $generated@@584)) $generated@@584) ($generated@@154 ($generated@@363 ($generated@@87 $generated@@170 $generated@@4) $generated@@584) ($generated@@260 $generated@@585))))
 :pattern ( ($generated@@241 $generated@@584 ($generated@@260 $generated@@585)))
)))
(assert (forall (($generated@@586 T@U) ($generated@@587 T@U) ) (!  (=> (and (and (= (type $generated@@586) $generated@@170) (= (type $generated@@587) $generated@@70)) ($generated@@241 $generated@@586 ($generated@@175 $generated@@587))) (and (= ($generated@@297 ($generated@@363 ($generated@@87 $generated@@170 $generated@@2) $generated@@586)) $generated@@586) ($generated@@154 ($generated@@363 ($generated@@87 $generated@@170 $generated@@2) $generated@@586) ($generated@@175 $generated@@587))))
 :pattern ( ($generated@@241 $generated@@586 ($generated@@175 $generated@@587)))
)))
(assert (forall (($generated@@588 T@U) ($generated@@589 T@U) ) (!  (=> (and (and (= (type $generated@@588) $generated@@170) (= (type $generated@@589) $generated@@70)) ($generated@@241 $generated@@588 ($generated@@521 $generated@@589))) (and (= ($generated@@297 ($generated@@363 ($generated@@291 $generated@@170) $generated@@588)) $generated@@588) ($generated@@154 ($generated@@363 ($generated@@291 $generated@@170) $generated@@588) ($generated@@521 $generated@@589))))
 :pattern ( ($generated@@241 $generated@@588 ($generated@@521 $generated@@589)))
)))
(assert (= ($generated@@81 $generated@@147) $generated@@65))
(assert (= ($generated@@576 $generated@@147) $generated@@68))
(assert (= ($generated@@81 $generated@@237) $generated@@66))
(assert (= ($generated@@576 $generated@@237) $generated@@68))
(assert  (=> (<= 0 $generated@@273) (forall (($generated@@590 Real) ) (!  (=> (or ($generated@@275 ($generated@@267 $generated@@590)) (not (= 0 $generated@@273))) (= ($generated@@274 ($generated@@267 $generated@@590)) (= ($generated@@267 $generated@@590) ($generated@@267 3.14))))
 :weight 3
 :pattern ( ($generated@@274 ($generated@@267 $generated@@590)))
))))
(assert (forall (($generated@@591 T@U) ($generated@@592 T@U) ($generated@@593 T@U) ) (!  (=> (and (and (= (type $generated@@591) ($generated@@87 $generated@@170 $generated@@2)) (= (type $generated@@592) $generated@@70)) (= (type $generated@@593) ($generated@@87 $generated@@88 $generated@@89))) (= ($generated@@85 $generated@@591 ($generated@@175 $generated@@592) $generated@@593) (forall (($generated@@594 T@U) ) (!  (=> (and (= (type $generated@@594) $generated@@170) (< 0 ($generated ($generated@@92 $generated@@591 $generated@@594)))) ($generated@@277 $generated@@594 $generated@@592 $generated@@593))
 :pattern ( ($generated@@92 $generated@@591 $generated@@594))
))))
 :pattern ( ($generated@@85 $generated@@591 ($generated@@175 $generated@@592) $generated@@593))
)))
(assert (forall (($generated@@595 T@U) ($generated@@596 T@U) ($generated@@597 T@U) ) (!  (=> (and (and (and (= (type $generated@@595) $generated@@161) (= (type $generated@@596) $generated@@70)) (= (type $generated@@597) ($generated@@87 $generated@@88 $generated@@89))) (and ($generated@@152 $generated@@597) (and ($generated@@159 $generated@@595) (exists (($generated@@598 T@U) ) (!  (and (= (type $generated@@598) $generated@@70) ($generated@@85 $generated@@595 ($generated@@160 $generated@@596 $generated@@598) $generated@@597))
 :pattern ( ($generated@@85 $generated@@595 ($generated@@160 $generated@@596 $generated@@598) $generated@@597))
))))) ($generated@@277 ($generated@@168 $generated@@595) $generated@@596 $generated@@597))
 :pattern ( ($generated@@277 ($generated@@168 $generated@@595) $generated@@596 $generated@@597))
)))
(assert (forall (($generated@@599 T@U) ($generated@@600 T@U) ($generated@@601 T@U) ) (!  (=> (and (and (and (= (type $generated@@599) $generated@@161) (= (type $generated@@600) $generated@@70)) (= (type $generated@@601) ($generated@@87 $generated@@88 $generated@@89))) (and ($generated@@152 $generated@@601) (and ($generated@@159 $generated@@599) (exists (($generated@@602 T@U) ) (!  (and (= (type $generated@@602) $generated@@70) ($generated@@85 $generated@@599 ($generated@@160 $generated@@602 $generated@@600) $generated@@601))
 :pattern ( ($generated@@85 $generated@@599 ($generated@@160 $generated@@602 $generated@@600) $generated@@601))
))))) ($generated@@277 ($generated@@169 $generated@@599) $generated@@600 $generated@@601))
 :pattern ( ($generated@@277 ($generated@@169 $generated@@599) $generated@@600 $generated@@601))
)))
(assert (forall (($generated@@603 T@U) ($generated@@604 T@U) ) (!  (=> (and (= (type $generated@@603) $generated@@170) (= (type $generated@@604) $generated@@170)) (= ($generated@@240 ($generated@@269 $generated@@603) ($generated@@269 $generated@@604)) ($generated@@269 ($generated@@240 $generated@@603 $generated@@604))))
 :pattern ( ($generated@@240 ($generated@@269 $generated@@603) ($generated@@269 $generated@@604)))
)))
(assert (forall (($generated@@605 Int) ) (! (= ($generated@@297 ($generated@@8 ($generated@@265 $generated@@605))) ($generated@@269 ($generated@@297 ($generated@@8 $generated@@605))))
 :pattern ( ($generated@@297 ($generated@@8 ($generated@@265 $generated@@605))))
)))
(assert (forall (($generated@@606 Real) ) (! (= ($generated@@297 ($generated@@9 ($generated@@267 $generated@@606))) ($generated@@269 ($generated@@297 ($generated@@9 $generated@@606))))
 :pattern ( ($generated@@297 ($generated@@9 ($generated@@267 $generated@@606))))
)))
(assert (forall (($generated@@607 T@U) ) (! (= ($generated@@297 ($generated@@269 $generated@@607)) ($generated@@269 ($generated@@297 $generated@@607)))
 :pattern ( ($generated@@297 ($generated@@269 $generated@@607)))
)))
(assert (forall (($generated@@608 T@U) ) (! (let (($generated@@609 ($generated@@292 (type $generated@@608))))
 (=> (and (= (type $generated@@608) ($generated@@291 $generated@@609)) (= ($generated@@290 $generated@@608) 0)) (= $generated@@608 ($generated@@289 $generated@@609))))
 :pattern ( ($generated@@290 $generated@@608))
)))
(assert (forall (($generated@@610 T@U) ($generated@@611 T@U) ($generated@@612 T@U) ) (! (let (($generated@@613 (type $generated@@611)))
 (=> (and (and (= (type $generated@@610) ($generated@@87 $generated@@613 $generated@@2)) (= (type $generated@@612) $generated@@2)) (<= 0 ($generated $generated@@612))) (= ($generated@@312 ($generated@@93 $generated@@610 $generated@@611 $generated@@612)) (+ (- ($generated@@312 $generated@@610) ($generated ($generated@@92 $generated@@610 $generated@@611))) ($generated $generated@@612)))))
 :pattern ( ($generated@@312 ($generated@@93 $generated@@610 $generated@@611 $generated@@612)))
)))
(assert (forall (($generated@@614 T@U) ($generated@@615 T@U) ) (!  (=> (and (= (type $generated@@614) ($generated@@87 $generated@@88 $generated@@89)) (= (type $generated@@615) $generated@@2)) ($generated@@85 $generated@@615 $generated@@46 $generated@@614))
 :pattern ( ($generated@@85 $generated@@615 $generated@@46 $generated@@614))
)))
(assert (forall (($generated@@616 T@U) ($generated@@617 T@U) ) (!  (=> (and (= (type $generated@@616) ($generated@@87 $generated@@88 $generated@@89)) (= (type $generated@@617) $generated@@3)) ($generated@@85 $generated@@617 $generated@@47 $generated@@616))
 :pattern ( ($generated@@85 $generated@@617 $generated@@47 $generated@@616))
)))
(assert (forall (($generated@@618 T@U) ($generated@@619 T@U) ) (!  (=> (and (= (type $generated@@618) ($generated@@87 $generated@@88 $generated@@89)) (= (type $generated@@619) $generated@@4)) ($generated@@85 $generated@@619 $generated@@44 $generated@@618))
 :pattern ( ($generated@@85 $generated@@619 $generated@@44 $generated@@618))
)))
(assert (forall (($generated@@620 T@U) ($generated@@621 T@U) ) (!  (=> (and (= (type $generated@@620) ($generated@@87 $generated@@88 $generated@@89)) (= (type $generated@@621) $generated@@478)) ($generated@@85 $generated@@621 $generated@@45 $generated@@620))
 :pattern ( ($generated@@85 $generated@@621 $generated@@45 $generated@@620))
)))
(assert (forall (($generated@@622 T@U) ($generated@@623 T@U) ) (!  (=> (and (= (type $generated@@622) ($generated@@87 $generated@@88 $generated@@89)) (= (type $generated@@623) $generated@@170)) ($generated@@85 $generated@@623 $generated@@48 $generated@@622))
 :pattern ( ($generated@@85 $generated@@623 $generated@@48 $generated@@622))
)))
(assert (forall (($generated@@624 T@U) ($generated@@625 T@U) ) (!  (=> (and (= (type $generated@@624) ($generated@@291 $generated@@170)) (= (type $generated@@625) $generated@@70)) (= ($generated@@154 $generated@@624 ($generated@@521 $generated@@625)) (forall (($generated@@626 Int) ) (!  (=> (and (<= 0 $generated@@626) (< $generated@@626 ($generated@@290 $generated@@624))) ($generated@@241 ($generated@@522 $generated@@624 $generated@@626) $generated@@625))
 :pattern ( ($generated@@522 $generated@@624 $generated@@626))
))))
 :pattern ( ($generated@@154 $generated@@624 ($generated@@521 $generated@@625)))
)))
(assert (forall (($generated@@628 T@U) ($generated@@629 Int) ) (!  (=> (= (type $generated@@628) ($generated@@291 $generated@@170)) (=> (and (<= 0 $generated@@629) (< $generated@@629 ($generated@@290 $generated@@628))) (< ($generated@@560 ($generated@@363 $generated@@161 ($generated@@522 $generated@@628 $generated@@629))) ($generated@@627 $generated@@628))))
 :pattern ( ($generated@@560 ($generated@@363 $generated@@161 ($generated@@522 $generated@@628 $generated@@629))))
)))
(assert (forall (($generated@@630 T@U) ($generated@@631 T@U) ($generated@@632 T@U) ) (!  (=> (and (and (and (= (type $generated@@630) ($generated@@320 $generated@@170 $generated@@170)) (= (type $generated@@631) $generated@@70)) (= (type $generated@@632) $generated@@70)) ($generated@@154 $generated@@630 ($generated@@430 $generated@@631 $generated@@632))) (and (and ($generated@@154 ($generated@@318 $generated@@630) ($generated@@255 $generated@@631)) ($generated@@154 ($generated@@373 $generated@@630) ($generated@@255 $generated@@632))) ($generated@@154 ($generated@@404 $generated@@630) ($generated@@255 ($generated@@160 $generated@@631 $generated@@632)))))
 :pattern ( ($generated@@154 $generated@@630 ($generated@@430 $generated@@631 $generated@@632)))
)))
(assert (forall (($generated@@633 T@U) ($generated@@634 T@U) ($generated@@635 T@U) ) (!  (=> (and (and (and (= (type $generated@@633) ($generated@@338 $generated@@170 $generated@@170)) (= (type $generated@@634) $generated@@70)) (= (type $generated@@635) $generated@@70)) ($generated@@154 $generated@@633 ($generated@@438 $generated@@634 $generated@@635))) (and (and ($generated@@154 ($generated@@336 $generated@@633) ($generated@@260 $generated@@634)) ($generated@@154 ($generated@@384 $generated@@633) ($generated@@260 $generated@@635))) ($generated@@154 ($generated@@412 $generated@@633) ($generated@@260 ($generated@@160 $generated@@634 $generated@@635)))))
 :pattern ( ($generated@@154 $generated@@633 ($generated@@438 $generated@@634 $generated@@635)))
)))
(assert (forall (($generated@@636 T@U) ) (!  (=> (= (type $generated@@636) $generated@@2) ($generated@@154 $generated@@636 $generated@@46))
 :pattern ( ($generated@@154 $generated@@636 $generated@@46))
)))
(assert (forall (($generated@@637 T@U) ) (!  (=> (= (type $generated@@637) $generated@@3) ($generated@@154 $generated@@637 $generated@@47))
 :pattern ( ($generated@@154 $generated@@637 $generated@@47))
)))
(assert (forall (($generated@@638 T@U) ) (!  (=> (= (type $generated@@638) $generated@@4) ($generated@@154 $generated@@638 $generated@@44))
 :pattern ( ($generated@@154 $generated@@638 $generated@@44))
)))
(assert (forall (($generated@@639 T@U) ) (!  (=> (= (type $generated@@639) $generated@@478) ($generated@@154 $generated@@639 $generated@@45))
 :pattern ( ($generated@@154 $generated@@639 $generated@@45))
)))
(assert (forall (($generated@@640 T@U) ) (!  (=> (= (type $generated@@640) $generated@@170) ($generated@@154 $generated@@640 $generated@@48))
 :pattern ( ($generated@@154 $generated@@640 $generated@@48))
)))
(push 1)
(declare-fun ControlFlow (Int Int) Int)
(declare-fun $generated@@641 () Real)
(declare-fun $generated@@642 () T@U)
(declare-fun $generated@@643 () T@U)
(declare-fun $generated@@644 () T@U)
(declare-fun $generated@@645 () Int)
(declare-fun $generated@@646 () T@U)
(declare-fun $generated@@647 () T@U)
(declare-fun $generated@@648 () T@U)
(declare-fun $generated@@649 () T@U)
(declare-fun $generated@@650 () T@U)
(declare-fun $generated@@651 () T@U)
(declare-fun $generated@@652 () T@U)
(declare-fun $generated@@653 () T@U)
(declare-fun $generated@@654 () T@U)
(declare-fun $generated@@655 (T@U) Bool)
(declare-fun $generated@@656 () T@U)
(declare-fun $generated@@657 () Bool)
(declare-fun $generated@@658 () T@U)
(declare-fun $generated@@659 () T@U)
(declare-fun $generated@@660 () Bool)
(declare-fun $generated@@661 () T@U)
(declare-fun $generated@@662 () Bool)
(declare-fun $generated@@663 () T@U)
(declare-fun $generated@@664 () Bool)
(declare-fun $generated@@665 () T@U)
(assert  (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (= (type $generated@@642) ($generated@@87 $generated@@88 $generated@@89)) (= (type $generated@@643) $generated@@88)) (= (type $generated@@644) $generated@@88)) (= (type $generated@@646) $generated@@88)) (= (type $generated@@647) $generated@@88)) (= (type $generated@@648) $generated@@88)) (= (type $generated@@649) $generated@@88)) (= (type $generated@@650) $generated@@88)) (= (type $generated@@651) $generated@@88)) (= (type $generated@@652) $generated@@88)) (= (type $generated@@653) $generated@@88)) (= (type $generated@@654) ($generated@@183 $generated@@88 $generated@@4))) (= (type $generated@@656) $generated@@88)) (= (type $generated@@658) $generated@@88)) (= (type $generated@@659) $generated@@88)) (= (type $generated@@661) $generated@@88)) (= (type $generated@@663) $generated@@88)) (= (type $generated@@665) $generated@@88)))
(set-option :timeout 0)
(set-option :rlimit 0)
(assert (not
 (=> (= (ControlFlow 0 0) 30) (let (($generated@@666 true))
(let (($generated@@667  (=> (and (and ($generated@@85 ($generated@@9 $generated@@641) $generated@@47 $generated@@642) ($generated@@275 $generated@@641)) (and ($generated@@275 $generated@@641) (= (ControlFlow 0 2) (- 0 1)))) (or (and ($generated@@154 ($generated@@9 ($generated@@267 0.0)) $generated@@47) ($generated@@0 ($generated@@269 ($generated@@11 ($generated@@274 ($generated@@267 0.0)))))) (exists (($generated@@668 Real) ) ($generated@@274 $generated@@668))))))
(let (($generated@@669  (and (=> (= (ControlFlow 0 4) (- 0 5)) (or (and ($generated@@154 $generated@@148 $generated@@237) ($generated@@0 ($generated@@269 ($generated@@11 false)))) (exists (($generated@@670 T@U) ) (!  (and (= (type $generated@@670) $generated@@88) (and ($generated@@154 $generated@@670 $generated@@237) ($generated@@0 ($generated@@269 ($generated@@11 false)))))
 :no-pattern (type $generated@@670)
 :no-pattern ($generated $generated@@670)
 :no-pattern ($generated@@0 $generated@@670)
)))) (=> (or (and ($generated@@154 $generated@@148 $generated@@237) ($generated@@0 ($generated@@269 ($generated@@11 false)))) (exists (($generated@@671 T@U) ) (!  (and (= (type $generated@@671) $generated@@88) (and ($generated@@154 $generated@@671 $generated@@237) ($generated@@0 ($generated@@269 ($generated@@11 false)))))
 :no-pattern (type $generated@@671)
 :no-pattern ($generated $generated@@671)
 :no-pattern ($generated@@0 $generated@@671)
))) (=> (and (=> true (and ($generated@@154 $generated@@643 $generated@@237) ($generated@@85 $generated@@643 $generated@@237 $generated@@642))) ($generated@@0 ($generated@@269 ($generated@@11 false)))) (and (=> (= (ControlFlow 0 4) 2) $generated@@667) (=> (= (ControlFlow 0 4) 3) $generated@@666)))))))
(let (($generated@@672  (=> (and (not (and ($generated@@154 $generated@@644 $generated@@237) ($generated@@85 $generated@@644 $generated@@237 $generated@@642))) (= (ControlFlow 0 7) 4)) $generated@@669)))
(let (($generated@@673  (=> (and (and ($generated@@154 $generated@@644 $generated@@237) ($generated@@85 $generated@@644 $generated@@237 $generated@@642)) (= (ControlFlow 0 6) 4)) $generated@@669)))
(let (($generated@@674  (and (=> (= (ControlFlow 0 8) (- 0 9)) (or (and ($generated@@154 $generated@@148 $generated@@237) (= $generated@@645 ($generated@@265 113))) (exists (($generated@@675 T@U) ) (!  (and (= (type $generated@@675) $generated@@88) (and ($generated@@154 $generated@@675 $generated@@237) (= $generated@@645 ($generated@@265 113))))
 :no-pattern (type $generated@@675)
 :no-pattern ($generated $generated@@675)
 :no-pattern ($generated@@0 $generated@@675)
)))) (=> (or (and ($generated@@154 $generated@@148 $generated@@237) (= $generated@@645 ($generated@@265 113))) (exists (($generated@@676 T@U) ) (!  (and (= (type $generated@@676) $generated@@88) (and ($generated@@154 $generated@@676 $generated@@237) (= $generated@@645 ($generated@@265 113))))
 :no-pattern (type $generated@@676)
 :no-pattern ($generated $generated@@676)
 :no-pattern ($generated@@0 $generated@@676)
))) (=> (and (=> true (and ($generated@@154 $generated@@646 $generated@@237) ($generated@@85 $generated@@646 $generated@@237 $generated@@642))) (= $generated@@645 ($generated@@265 113))) (and (=> (= (ControlFlow 0 8) 6) $generated@@673) (=> (= (ControlFlow 0 8) 7) $generated@@672)))))))
(let (($generated@@677  (=> (and (not (and ($generated@@154 $generated@@647 $generated@@237) ($generated@@85 $generated@@647 $generated@@237 $generated@@642))) (= (ControlFlow 0 11) 8)) $generated@@674)))
(let (($generated@@678  (=> (and (and ($generated@@154 $generated@@647 $generated@@237) ($generated@@85 $generated@@647 $generated@@237 $generated@@642)) (= (ControlFlow 0 10) 8)) $generated@@674)))
(let (($generated@@679  (and (=> (= (ControlFlow 0 12) (- 0 13)) (or (and ($generated@@154 $generated@@148 $generated@@237) ($generated@@0 ($generated@@269 ($generated@@11 true)))) (exists (($generated@@680 T@U) ) (!  (and (= (type $generated@@680) $generated@@88) (and ($generated@@154 $generated@@680 $generated@@237) ($generated@@0 ($generated@@269 ($generated@@11 true)))))
 :no-pattern (type $generated@@680)
 :no-pattern ($generated $generated@@680)
 :no-pattern ($generated@@0 $generated@@680)
)))) (=> (or (and ($generated@@154 $generated@@148 $generated@@237) ($generated@@0 ($generated@@269 ($generated@@11 true)))) (exists (($generated@@681 T@U) ) (!  (and (= (type $generated@@681) $generated@@88) (and ($generated@@154 $generated@@681 $generated@@237) ($generated@@0 ($generated@@269 ($generated@@11 true)))))
 :no-pattern (type $generated@@681)
 :no-pattern ($generated $generated@@681)
 :no-pattern ($generated@@0 $generated@@681)
))) (=> (=> true (and ($generated@@154 $generated@@648 $generated@@237) ($generated@@85 $generated@@648 $generated@@237 $generated@@642))) (and (=> (= (ControlFlow 0 12) 10) $generated@@678) (=> (= (ControlFlow 0 12) 11) $generated@@677)))))))
(let (($generated@@682  (=> (and (not (and ($generated@@154 $generated@@649 $generated@@237) ($generated@@85 $generated@@649 $generated@@237 $generated@@642))) (= (ControlFlow 0 15) 12)) $generated@@679)))
(let (($generated@@683  (=> (and (and ($generated@@154 $generated@@649 $generated@@237) ($generated@@85 $generated@@649 $generated@@237 $generated@@642)) (= (ControlFlow 0 14) 12)) $generated@@679)))
(let (($generated@@684  (and (=> (= (ControlFlow 0 16) (- 0 17)) (or (and ($generated@@154 $generated@@148 $generated@@147) (or (= $generated@@148 $generated@@148) (= ($generated ($generated@@94 ($generated@@92 $generated@@642 $generated@@148) $generated@@151)) ($generated@@265 8)))) (exists (($generated@@685 T@U) ) (!  (and (= (type $generated@@685) $generated@@88) (and ($generated@@154 $generated@@685 $generated@@147) (or (= $generated@@685 $generated@@148) (= ($generated ($generated@@94 ($generated@@92 $generated@@642 $generated@@685) $generated@@151)) ($generated@@265 8)))))
 :no-pattern (type $generated@@685)
 :no-pattern ($generated $generated@@685)
 :no-pattern ($generated@@0 $generated@@685)
)))) (=> (or (and ($generated@@154 $generated@@148 $generated@@147) (or (= $generated@@148 $generated@@148) (= ($generated ($generated@@94 ($generated@@92 $generated@@642 $generated@@148) $generated@@151)) ($generated@@265 8)))) (exists (($generated@@686 T@U) ) (!  (and (= (type $generated@@686) $generated@@88) (and ($generated@@154 $generated@@686 $generated@@147) (or (= $generated@@686 $generated@@148) (= ($generated ($generated@@94 ($generated@@92 $generated@@642 $generated@@686) $generated@@151)) ($generated@@265 8)))))
 :no-pattern (type $generated@@686)
 :no-pattern ($generated $generated@@686)
 :no-pattern ($generated@@0 $generated@@686)
))) (=> (and (and ($generated@@154 $generated@@650 $generated@@147) ($generated@@85 $generated@@650 $generated@@147 $generated@@642)) (or (= $generated@@650 $generated@@148) (= ($generated ($generated@@94 ($generated@@92 $generated@@642 $generated@@650) $generated@@151)) ($generated@@265 8)))) (and (=> (= (ControlFlow 0 16) 14) $generated@@683) (=> (= (ControlFlow 0 16) 15) $generated@@682)))))))
(let (($generated@@687  (=> (= (ControlFlow 0 19) 16) $generated@@684)))
(let (($generated@@688  (=> (and (= $generated@@651 $generated@@148) (= (ControlFlow 0 22) 19)) $generated@@687)))
(let (($generated@@689  (=> (not (= $generated@@651 $generated@@148)) (and (=> (= (ControlFlow 0 20) (- 0 21)) (not (= $generated@@651 $generated@@148))) (=> (= (ControlFlow 0 20) 19) $generated@@687)))))
(let (($generated@@690  (=> (and ($generated@@154 $generated@@651 $generated@@147) ($generated@@85 $generated@@651 $generated@@147 $generated@@642)) (and (=> (= (ControlFlow 0 23) 20) $generated@@689) (=> (= (ControlFlow 0 23) 22) $generated@@688)))))
(let (($generated@@691  (=> (and (not (and ($generated@@154 $generated@@651 $generated@@147) ($generated@@85 $generated@@651 $generated@@147 $generated@@642))) (= (ControlFlow 0 18) 16)) $generated@@684)))
(let (($generated@@692  (and (=> (= (ControlFlow 0 24) (- 0 25)) (or (and ($generated@@154 $generated@@148 $generated@@237) (= ($generated ($generated@@94 ($generated@@92 $generated@@642 $generated@@148) $generated@@151)) ($generated@@265 7))) (exists (($generated@@693 T@U) ) (!  (and (= (type $generated@@693) $generated@@88) (and ($generated@@154 $generated@@693 $generated@@237) (= ($generated ($generated@@94 ($generated@@92 $generated@@642 $generated@@693) $generated@@151)) ($generated@@265 7))))
 :no-pattern (type $generated@@693)
 :no-pattern ($generated $generated@@693)
 :no-pattern ($generated@@0 $generated@@693)
)))) (=> (or (and ($generated@@154 $generated@@148 $generated@@237) (= ($generated ($generated@@94 ($generated@@92 $generated@@642 $generated@@148) $generated@@151)) ($generated@@265 7))) (exists (($generated@@694 T@U) ) (!  (and (= (type $generated@@694) $generated@@88) (and ($generated@@154 $generated@@694 $generated@@237) (= ($generated ($generated@@94 ($generated@@92 $generated@@642 $generated@@694) $generated@@151)) ($generated@@265 7))))
 :no-pattern (type $generated@@694)
 :no-pattern ($generated $generated@@694)
 :no-pattern ($generated@@0 $generated@@694)
))) (=> (and (=> true (and ($generated@@154 $generated@@652 $generated@@237) ($generated@@85 $generated@@652 $generated@@237 $generated@@642))) (= ($generated ($generated@@94 ($generated@@92 $generated@@642 $generated@@652) $generated@@151)) ($generated@@265 7))) (and (=> (= (ControlFlow 0 24) 23) $generated@@690) (=> (= (ControlFlow 0 24) 18) $generated@@691)))))))
(let (($generated@@695  (=> (and (not (and ($generated@@154 $generated@@653 $generated@@237) ($generated@@85 $generated@@653 $generated@@237 $generated@@642))) (= (ControlFlow 0 28) 24)) $generated@@692)))
(let (($generated@@696  (=> (and ($generated@@154 $generated@@653 $generated@@237) ($generated@@85 $generated@@653 $generated@@237 $generated@@642)) (and (=> (= (ControlFlow 0 26) (- 0 27)) (not (= $generated@@653 $generated@@148))) (=> (= (ControlFlow 0 26) 24) $generated@@692)))))
(let (($generated@@697  (=> (= $generated@@654 ($generated@@182 $generated@@148 $generated@@642 $generated@@60 false)) (and (=> (= (ControlFlow 0 29) 26) $generated@@696) (=> (= (ControlFlow 0 29) 28) $generated@@695)))))
(let (($generated@@698  (=> (and ($generated@@152 $generated@@642) ($generated@@655 $generated@@642)) (=> (and (and ($generated@@154 $generated@@656 $generated@@237) ($generated@@85 $generated@@656 $generated@@237 $generated@@642)) (and (=> $generated@@657 (and ($generated@@154 $generated@@658 $generated@@237) ($generated@@85 $generated@@658 $generated@@237 $generated@@642))) true)) (=> (and (and (and (and ($generated@@154 $generated@@659 $generated@@147) ($generated@@85 $generated@@659 $generated@@147 $generated@@642)) true) (and (and (=> $generated@@660 (and ($generated@@154 $generated@@661 $generated@@237) ($generated@@85 $generated@@661 $generated@@237 $generated@@642))) true) (and (=> $generated@@662 (and ($generated@@154 $generated@@663 $generated@@237) ($generated@@85 $generated@@663 $generated@@237 $generated@@642))) true))) (and (and (and (=> $generated@@664 (and ($generated@@154 $generated@@665 $generated@@237) ($generated@@85 $generated@@665 $generated@@237 $generated@@642))) true) (= 1 $generated@@273)) (and (= ($generated ($generated@@94 ($generated@@92 $generated@@642 $generated@@656) $generated@@151)) ($generated@@265 7)) (= (ControlFlow 0 30) 29)))) $generated@@697)))))
$generated@@698)))))))))))))))))))))))
))
(check-sat)
(get-info :reason-unknown)
(assert (not (= (ControlFlow 0 8) (- 9))))
(check-sat)
(get-info :reason-unknown)
(assert (not (= (ControlFlow 0 4) (- 5))))
(check-sat)
(pop 1)
; Invalid
(get-info :rlimit)
(reset)
(set-option :rlimit 0)
; did a full reset
(reset)
(set-option :print-success false)
(set-info :smt-lib-version 2.6)
(set-option :auto_config false)
(set-option :type_check true)
(set-option :smt.case_split 3)
(set-option :smt.qi.eager_threshold 100)
(set-option :smt.delay_units true)
(set-option :smt.arith.solver 2)
(set-option :smt.mbqi false)
(set-option :model.compact false)
(set-option :model.v2 true)
(set-option :pp.bv_literals false)
; done setting options


(set-info :category "industrial")
(declare-sort |T@U| 0)
(declare-sort |T@T| 0)
(declare-fun real_pow (Real Real) Real)
(declare-fun UOrdering2 (|T@U| |T@U|) Bool)
(declare-fun UOrdering3 (|T@T| |T@U| |T@U|) Bool)
(declare-fun tickleBool (Bool) Bool)
(assert (and (tickleBool true) (tickleBool false)))
(declare-fun $generated (T@U) Int)
(declare-fun $generated@@0 (T@U) Bool)
(declare-fun $generated@@1 (T@T) Int)
(declare-fun $generated@@2 () T@T)
(declare-fun $generated@@3 () T@T)
(declare-fun $generated@@4 () T@T)
(declare-fun $generated@@5 () T@T)
(declare-fun $generated@@6 () T@T)
(declare-fun $generated@@7 () T@T)
(declare-fun $generated@@8 (Int) T@U)
(declare-fun type (T@U) T@T)
(declare-fun $generated@@9 (Real) T@U)
(declare-fun $generated@@10 (T@U) Real)
(declare-fun $generated@@11 (Bool) T@U)
(declare-fun $generated@@12 (RoundingMode) T@U)
(declare-fun $generated@@13 (T@U) RoundingMode)
(declare-fun $generated@@14 (String) T@U)
(declare-fun $generated@@15 (T@U) String)
(declare-fun $generated@@16 ((RegEx String)) T@U)
(declare-fun $generated@@17 (T@U) (RegEx String))
(declare-fun $generated@@44 () T@U)
(declare-fun $generated@@45 () T@U)
(declare-fun $generated@@46 () T@U)
(declare-fun $generated@@47 () T@U)
(declare-fun $generated@@48 () T@U)
(declare-fun $generated@@49 () T@U)
(declare-fun $generated@@50 () T@U)
(declare-fun $generated@@51 () T@U)
(declare-fun $generated@@52 () T@U)
(declare-fun $generated@@53 () T@U)
(declare-fun $generated@@54 () T@U)
(declare-fun $generated@@55 () T@U)
(declare-fun $generated@@56 () T@U)
(declare-fun $generated@@57 () T@U)
(declare-fun $generated@@58 () T@U)
(declare-fun $generated@@59 () T@U)
(declare-fun $generated@@60 () T@U)
(declare-fun $generated@@61 () T@U)
(declare-fun $generated@@62 () T@U)
(declare-fun $generated@@63 () T@U)
(declare-fun $generated@@64 () T@U)
(declare-fun $generated@@65 () T@U)
(declare-fun $generated@@66 () T@U)
(declare-fun $generated@@67 () T@U)
(declare-fun $generated@@68 () T@T)
(declare-fun $generated@@69 () T@T)
(declare-fun $generated@@70 (T@T) T@T)
(declare-fun $generated@@71 (T@T) T@T)
(declare-fun $generated@@72 () T@T)
(declare-fun $generated@@73 () T@T)
(declare-fun $generated@@76 (T@U) T@U)
(declare-fun $generated@@78 (T@U T@U T@U) Bool)
(declare-fun $generated@@79 (Int) T@U)
(declare-fun $generated@@80 (T@T T@T) T@T)
(declare-fun $generated@@81 () T@T)
(declare-fun $generated@@82 () T@T)
(declare-fun $generated@@83 (T@T) T@T)
(declare-fun $generated@@84 (T@T) T@T)
(declare-fun $generated@@85 (T@U T@U) T@U)
(declare-fun $generated@@86 (T@U T@U T@U) T@U)
(declare-fun $generated@@87 (T@U T@U) T@U)
(declare-fun $generated@@88 (T@U T@U T@U) T@U)
(declare-fun $generated@@136 () T@U)
(declare-fun $generated@@137 () T@U)
(declare-fun $generated@@140 (T@U T@U) Bool)
(declare-fun $generated@@142 (T@U) Bool)
(declare-fun $generated@@143 (T@U T@U) T@U)
(declare-fun $generated@@144 () T@T)
(declare-fun $generated@@150 (T@U T@U) Bool)
(declare-fun $generated@@151 (T@U) T@U)
(declare-fun $generated@@152 (T@U) T@U)
(declare-fun $generated@@153 () T@T)
(declare-fun $generated@@158 (T@U) T@U)
(declare-fun $generated@@159 (T@U) Bool)
(declare-fun $generated@@163 (T@U) T@U)
(declare-fun $generated@@166 (T@U T@U T@U) T@U)
(declare-fun $generated@@167 (T@U T@U T@U Bool) T@U)
(declare-fun $generated@@168 (T@T T@T) T@T)
(declare-fun $generated@@169 (T@T) T@T)
(declare-fun $generated@@170 (T@T) T@T)
(declare-fun $generated@@171 (T@U T@U T@U T@U) T@U)
(declare-fun $generated@@222 () T@U)
(declare-fun $generated@@225 (T@U T@U) T@U)
(declare-fun $generated@@226 (T@U T@U) Bool)
(declare-fun $generated@@235 (T@U) T@U)
(declare-fun $generated@@240 (T@U) T@U)
(declare-fun $generated@@245 (T@U) T@U)
(declare-fun $generated@@249 (T@U) Bool)
(declare-fun $generated@@250 (T@U T@U T@U) Bool)
(declare-fun $generated@@256 (T@U) T@U)
(declare-fun $generated@@262 (T@T) T@U)
(declare-fun $generated@@263 (T@U) Int)
(declare-fun $generated@@264 (T@T) T@T)
(declare-fun $generated@@265 (T@T) T@T)
(declare-fun $generated@@270 (T@U) T@U)
(declare-fun $generated@@275 (T@U) Int)
(declare-fun $generated@@276 (T@T) T@U)
(declare-fun $generated@@281 (T@U) T@U)
(declare-fun $generated@@282 (T@T T@T) T@U)
(declare-fun $generated@@283 (T@T T@T) T@T)
(declare-fun $generated@@284 (T@T) T@T)
(declare-fun $generated@@285 (T@T) T@T)
(declare-fun $generated@@299 (T@U) T@U)
(declare-fun $generated@@300 (T@T T@T) T@U)
(declare-fun $generated@@301 (T@T T@T) T@T)
(declare-fun $generated@@302 (T@T) T@T)
(declare-fun $generated@@303 (T@T) T@T)
(declare-fun $generated@@320 (T@T T@U) T@U)
(declare-fun $generated@@330 (T@U) T@U)
(declare-fun $generated@@341 (T@U) T@U)
(declare-fun $generated@@361 (T@U) T@U)
(declare-fun $generated@@362 (T@U) T@U)
(declare-fun $generated@@369 (T@U) T@U)
(declare-fun $generated@@370 (T@U) T@U)
(declare-fun $generated@@387 (T@U T@U) T@U)
(declare-fun $generated@@395 (T@U T@U) T@U)
(declare-fun $generated@@403 (T@T) T@U)
(declare-fun $generated@@427 () T@T)
(declare-fun $generated@@435 (T@U) T@U)
(declare-fun $generated@@439 (T@U) T@U)
(declare-fun $generated@@445 (T@U) T@U)
(declare-fun $generated@@449 (T@U) T@U)
(declare-fun $generated@@457 (T@U) T@U)
(declare-fun $generated@@461 (T@U) T@U)
(declare-fun $generated@@469 (T@U) T@U)
(declare-fun $generated@@470 (T@U Int) T@U)
(declare-fun $generated@@479 (T@U) Int)
(declare-fun $generated@@481 (T@U) T@U)
(declare-fun $generated@@485 (T@U) T@U)
(declare-fun $generated@@489 (T@U) T@U)
(declare-fun $generated@@493 (T@U) T@U)
(declare-fun $generated@@507 (T@U) Int)
(declare-fun $generated@@508 (T@U) Int)
(declare-fun $generated@@524 (T@U) T@U)
(declare-fun $generated@@572 (T@U) Int)
(assert  (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (= ($generated@@1 $generated@@2) 0) (= ($generated@@1 $generated@@3) 1)) (= ($generated@@1 $generated@@4) 2)) (= ($generated@@1 $generated@@5) 3)) (= ($generated@@1 $generated@@6) 4)) (= ($generated@@1 $generated@@7) 5)) (forall (($generated@@18 Int) ) (! (= ($generated ($generated@@8 $generated@@18)) $generated@@18)
 :pattern ( ($generated@@8 $generated@@18))
))) (forall (($generated@@19 T@U) ) (!  (=> (= (type $generated@@19) $generated@@2) (= ($generated@@8 ($generated $generated@@19)) $generated@@19))
 :pattern ( ($generated $generated@@19))
))) (forall (($generated@@20 Int) ) (! (= (type ($generated@@8 $generated@@20)) $generated@@2)
 :pattern ( ($generated@@8 $generated@@20))
))) (forall (($generated@@21 Real) ) (! (= ($generated@@10 ($generated@@9 $generated@@21)) $generated@@21)
 :pattern ( ($generated@@9 $generated@@21))
))) (forall (($generated@@22 T@U) ) (!  (=> (= (type $generated@@22) $generated@@3) (= ($generated@@9 ($generated@@10 $generated@@22)) $generated@@22))
 :pattern ( ($generated@@10 $generated@@22))
))) (forall (($generated@@23 Real) ) (! (= (type ($generated@@9 $generated@@23)) $generated@@3)
 :pattern ( ($generated@@9 $generated@@23))
))) (forall (($generated@@24 Bool) ) (! (= ($generated@@0 ($generated@@11 $generated@@24)) $generated@@24)
 :pattern ( ($generated@@11 $generated@@24))
))) (forall (($generated@@25 T@U) ) (!  (=> (= (type $generated@@25) $generated@@4) (= ($generated@@11 ($generated@@0 $generated@@25)) $generated@@25))
 :pattern ( ($generated@@0 $generated@@25))
))) (forall (($generated@@26 Bool) ) (! (= (type ($generated@@11 $generated@@26)) $generated@@4)
 :pattern ( ($generated@@11 $generated@@26))
))) (forall (($generated@@27 RoundingMode) ) (! (= ($generated@@13 ($generated@@12 $generated@@27)) $generated@@27)
 :pattern ( ($generated@@12 $generated@@27))
))) (forall (($generated@@28 T@U) ) (!  (=> (= (type $generated@@28) $generated@@5) (= ($generated@@12 ($generated@@13 $generated@@28)) $generated@@28))
 :pattern ( ($generated@@13 $generated@@28))
))) (forall (($generated@@29 RoundingMode) ) (! (= (type ($generated@@12 $generated@@29)) $generated@@5)
 :pattern ( ($generated@@12 $generated@@29))
))) (forall (($generated@@30 String) ) (! (= ($generated@@15 ($generated@@14 $generated@@30)) $generated@@30)
 :pattern ( ($generated@@14 $generated@@30))
))) (forall (($generated@@31 T@U) ) (!  (=> (= (type $generated@@31) $generated@@6) (= ($generated@@14 ($generated@@15 $generated@@31)) $generated@@31))
 :pattern ( ($generated@@15 $generated@@31))
))) (forall (($generated@@32 String) ) (! (= (type ($generated@@14 $generated@@32)) $generated@@6)
 :pattern ( ($generated@@14 $generated@@32))
))) (forall (($generated@@33 (RegEx String)) ) (! (= ($generated@@17 ($generated@@16 $generated@@33)) $generated@@33)
 :pattern ( ($generated@@16 $generated@@33))
))) (forall (($generated@@34 T@U) ) (!  (=> (= (type $generated@@34) $generated@@7) (= ($generated@@16 ($generated@@17 $generated@@34)) $generated@@34))
 :pattern ( ($generated@@17 $generated@@34))
))) (forall (($generated@@35 (RegEx String)) ) (! (= (type ($generated@@16 $generated@@35)) $generated@@7)
 :pattern ( ($generated@@16 $generated@@35))
))))
(assert (forall (($generated@@36 T@U) ) (! (UOrdering2 $generated@@36 $generated@@36)
 :no-pattern ($generated $generated@@36)
 :no-pattern ($generated@@0 $generated@@36)
)))
(assert (forall (($generated@@37 T@U) ($generated@@38 T@U) ($generated@@39 T@U) ) (! (let (($generated@@40 (type $generated@@37)))
 (=> (and (and (= (type $generated@@38) $generated@@40) (= (type $generated@@39) $generated@@40)) (and (UOrdering2 $generated@@37 $generated@@38) (UOrdering2 $generated@@38 $generated@@39))) (UOrdering2 $generated@@37 $generated@@39)))
 :pattern ( (UOrdering2 $generated@@37 $generated@@38) (UOrdering2 $generated@@38 $generated@@39))
)))
(assert (forall (($generated@@41 T@U) ($generated@@42 T@U) ) (! (let (($generated@@43 (type $generated@@41)))
 (=> (= (type $generated@@42) $generated@@43) (=> (and (UOrdering2 $generated@@41 $generated@@42) (UOrdering2 $generated@@42 $generated@@41)) (= $generated@@41 $generated@@42))))
 :pattern ( (UOrdering2 $generated@@41 $generated@@42) (UOrdering2 $generated@@42 $generated@@41))
)))
(assert  (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (= ($generated@@1 $generated@@68) 6) (= (type $generated@@44) $generated@@68)) (= (type $generated@@45) $generated@@68)) (= (type $generated@@46) $generated@@68)) (= (type $generated@@47) $generated@@68)) (= (type $generated@@48) $generated@@68)) (= ($generated@@1 $generated@@69) 7)) (= (type $generated@@49) $generated@@69)) (= (type $generated@@50) $generated@@69)) (= (type $generated@@51) $generated@@69)) (= (type $generated@@52) $generated@@69)) (= (type $generated@@53) $generated@@69)) (= (type $generated@@54) $generated@@69)) (= (type $generated@@55) $generated@@69)) (= (type $generated@@56) $generated@@69)) (= (type $generated@@57) $generated@@69)) (= (type $generated@@58) $generated@@69)) (= (type $generated@@59) $generated@@69)) (forall (($generated@@74 T@T) ) (= ($generated@@1 ($generated@@70 $generated@@74)) 8))) (forall (($generated@@75 T@T) ) (! (= ($generated@@71 ($generated@@70 $generated@@75)) $generated@@75)
 :pattern ( ($generated@@70 $generated@@75))
))) (= (type $generated@@60) ($generated@@70 $generated@@4))) (= ($generated@@1 $generated@@72) 9)) (= (type $generated@@61) $generated@@72)) (= (type $generated@@62) $generated@@69)) (= (type $generated@@63) $generated@@69)) (= (type $generated@@64) $generated@@69)) (= ($generated@@1 $generated@@73) 10)) (= (type $generated@@65) $generated@@73)) (= (type $generated@@66) $generated@@73)) (= (type $generated@@67) $generated@@73)))
(assert (distinct $generated@@44 $generated@@45 $generated@@46 $generated@@47 $generated@@48 $generated@@49 $generated@@50 $generated@@51 $generated@@52 $generated@@53 $generated@@54 $generated@@55 $generated@@56 $generated@@57 $generated@@58 $generated@@59 $generated@@60 $generated@@61 $generated@@62 $generated@@63 $generated@@64 $generated@@65 $generated@@66 $generated@@67)
)
(assert (forall (($generated@@77 T@U) ) (! (= (type ($generated@@76 $generated@@77)) $generated@@69)
 :pattern ( ($generated@@76 $generated@@77))
)))
(assert (= ($generated@@76 $generated@@44) $generated@@49))
(assert (= ($generated@@76 $generated@@45) $generated@@50))
(assert (= ($generated@@76 $generated@@46) $generated@@51))
(assert (= ($generated@@76 $generated@@47) $generated@@52))
(assert (= ($generated@@76 $generated@@48) $generated@@53))
(assert  (and (and (and (and (and (and (and (and (and (and (and (and (and (forall (($generated@@89 T@T) ($generated@@90 T@T) ) (= ($generated@@1 ($generated@@80 $generated@@89 $generated@@90)) 11)) (forall (($generated@@91 T@T) ($generated@@92 T@T) ) (! (= ($generated@@83 ($generated@@80 $generated@@91 $generated@@92)) $generated@@91)
 :pattern ( ($generated@@80 $generated@@91 $generated@@92))
))) (forall (($generated@@93 T@T) ($generated@@94 T@T) ) (! (= ($generated@@84 ($generated@@80 $generated@@93 $generated@@94)) $generated@@94)
 :pattern ( ($generated@@80 $generated@@93 $generated@@94))
))) (forall (($generated@@95 T@U) ($generated@@96 T@U) ) (! (let (($generated@@97 ($generated@@84 (type $generated@@95))))
(= (type ($generated@@85 $generated@@95 $generated@@96)) $generated@@97))
 :pattern ( ($generated@@85 $generated@@95 $generated@@96))
))) (forall (($generated@@98 T@U) ($generated@@99 T@U) ($generated@@100 T@U) ) (! (let (($generated@@101 (type $generated@@100)))
(let (($generated@@102 (type $generated@@99)))
(= (type ($generated@@86 $generated@@98 $generated@@99 $generated@@100)) ($generated@@80 $generated@@102 $generated@@101))))
 :pattern ( ($generated@@86 $generated@@98 $generated@@99 $generated@@100))
))) (forall (($generated@@103 T@U) ($generated@@104 T@U) ($generated@@105 T@U) ) (! (let (($generated@@106 ($generated@@84 (type $generated@@103))))
 (=> (= (type $generated@@105) $generated@@106) (= ($generated@@85 ($generated@@86 $generated@@103 $generated@@104 $generated@@105) $generated@@104) $generated@@105)))
 :weight 0
))) (and (forall (($generated@@107 T@U) ($generated@@108 T@U) ($generated@@109 T@U) ($generated@@110 T@U) ) (!  (or (= $generated@@109 $generated@@110) (= ($generated@@85 ($generated@@86 $generated@@108 $generated@@109 $generated@@107) $generated@@110) ($generated@@85 $generated@@108 $generated@@110)))
 :weight 0
)) (forall (($generated@@111 T@U) ($generated@@112 T@U) ($generated@@113 T@U) ($generated@@114 T@U) ) (!  (or true (= ($generated@@85 ($generated@@86 $generated@@112 $generated@@113 $generated@@111) $generated@@114) ($generated@@85 $generated@@112 $generated@@114)))
 :weight 0
)))) (= ($generated@@1 $generated@@81) 12)) (forall (($generated@@115 T@U) ($generated@@116 T@U) ) (! (let (($generated@@117 ($generated@@71 (type $generated@@116))))
(= (type ($generated@@87 $generated@@115 $generated@@116)) $generated@@117))
 :pattern ( ($generated@@87 $generated@@115 $generated@@116))
))) (= ($generated@@1 $generated@@82) 13)) (forall (($generated@@118 T@U) ($generated@@119 T@U) ($generated@@120 T@U) ) (! (= (type ($generated@@88 $generated@@118 $generated@@119 $generated@@120)) $generated@@82)
 :pattern ( ($generated@@88 $generated@@118 $generated@@119 $generated@@120))
))) (forall (($generated@@121 T@U) ($generated@@122 T@U) ($generated@@123 T@U) ) (! (let (($generated@@124 ($generated@@71 (type $generated@@122))))
 (=> (= (type $generated@@123) $generated@@124) (= ($generated@@87 ($generated@@88 $generated@@121 $generated@@122 $generated@@123) $generated@@122) $generated@@123)))
 :weight 0
))) (and (forall (($generated@@125 T@U) ($generated@@126 T@U) ($generated@@127 T@U) ($generated@@128 T@U) ) (!  (or (= $generated@@127 $generated@@128) (= ($generated@@87 ($generated@@88 $generated@@126 $generated@@127 $generated@@125) $generated@@128) ($generated@@87 $generated@@126 $generated@@128)))
 :weight 0
)) (forall (($generated@@129 T@U) ($generated@@130 T@U) ($generated@@131 T@U) ($generated@@132 T@U) ) (!  (or true (= ($generated@@87 ($generated@@88 $generated@@130 $generated@@131 $generated@@129) $generated@@132) ($generated@@87 $generated@@130 $generated@@132)))
 :weight 0
)))) (forall (($generated@@133 Int) ) (! (= (type ($generated@@79 $generated@@133)) $generated@@68)
 :pattern ( ($generated@@79 $generated@@133))
))))
(assert (forall (($generated@@134 T@U) ($generated@@135 T@U) ) (!  (=> (and (= (type $generated@@134) $generated@@2) (= (type $generated@@135) ($generated@@80 $generated@@81 $generated@@82))) ($generated@@78 $generated@@134 ($generated@@79 0) $generated@@135))
 :pattern ( ($generated@@78 $generated@@134 ($generated@@79 0) $generated@@135))
)))
(assert  (and (= (type $generated@@136) $generated@@68) (= (type $generated@@137) $generated@@81)))
(assert (forall (($generated@@138 T@U) ($generated@@139 T@U) ) (!  (=> (and (= (type $generated@@138) $generated@@81) (= (type $generated@@139) ($generated@@80 $generated@@81 $generated@@82))) (= ($generated@@78 $generated@@138 $generated@@136 $generated@@139)  (or (= $generated@@138 $generated@@137) ($generated@@0 ($generated@@87 ($generated@@85 $generated@@139 $generated@@138) $generated@@60)))))
 :pattern ( ($generated@@78 $generated@@138 $generated@@136 $generated@@139))
)))
(assert (forall (($generated@@141 T@U) ) (!  (=> (= (type $generated@@141) $generated@@2) ($generated@@140 $generated@@141 ($generated@@79 0)))
 :pattern ( ($generated@@140 $generated@@141 ($generated@@79 0)))
)))
(assert  (and (= ($generated@@1 $generated@@144) 14) (forall (($generated@@145 T@U) ($generated@@146 T@U) ) (! (= (type ($generated@@143 $generated@@145 $generated@@146)) $generated@@68)
 :pattern ( ($generated@@143 $generated@@145 $generated@@146))
))))
(assert (forall (($generated@@147 T@U) ($generated@@148 T@U) ($generated@@149 T@U) ) (!  (=> (and (and (and (= (type $generated@@147) $generated@@68) (= (type $generated@@148) $generated@@68)) (= (type $generated@@149) $generated@@144)) ($generated@@140 $generated@@149 ($generated@@143 $generated@@147 $generated@@148))) ($generated@@142 $generated@@149))
 :pattern ( ($generated@@142 $generated@@149) ($generated@@140 $generated@@149 ($generated@@143 $generated@@147 $generated@@148)))
)))
(assert  (and (and (= ($generated@@1 $generated@@153) 15) (forall (($generated@@154 T@U) ) (! (= (type ($generated@@151 $generated@@154)) $generated@@153)
 :pattern ( ($generated@@151 $generated@@154))
))) (forall (($generated@@155 T@U) ) (! (= (type ($generated@@152 $generated@@155)) $generated@@153)
 :pattern ( ($generated@@152 $generated@@155))
))))
(assert (forall (($generated@@156 T@U) ($generated@@157 T@U) ) (!  (=> (and (and (= (type $generated@@156) $generated@@144) (= (type $generated@@157) $generated@@144)) true) (= ($generated@@150 $generated@@156 $generated@@157)  (and (= ($generated@@151 $generated@@156) ($generated@@151 $generated@@157)) (= ($generated@@152 $generated@@156) ($generated@@152 $generated@@157)))))
 :pattern ( ($generated@@150 $generated@@156 $generated@@157))
)))
(assert (forall (($generated@@160 T@U) ) (! (= (type ($generated@@158 $generated@@160)) $generated@@68)
 :pattern ( ($generated@@158 $generated@@160))
)))
(assert (forall (($generated@@161 T@U) ($generated@@162 T@U) ) (!  (=> (and (and (= (type $generated@@161) ($generated@@80 $generated@@153 $generated@@2)) (= (type $generated@@162) $generated@@68)) ($generated@@140 $generated@@161 ($generated@@158 $generated@@162))) ($generated@@159 $generated@@161))
 :pattern ( ($generated@@140 $generated@@161 ($generated@@158 $generated@@162)))
)))
(assert (forall (($generated@@164 T@U) ) (! (= (type ($generated@@163 $generated@@164)) $generated@@68)
 :pattern ( ($generated@@163 $generated@@164))
)))
(assert (forall (($generated@@165 T@U) ) (!  (=> (= (type $generated@@165) $generated@@81) (= ($generated@@140 $generated@@165 $generated@@136)  (or (= $generated@@165 $generated@@137) (= ($generated@@163 $generated@@165) $generated@@136))))
 :pattern ( ($generated@@140 $generated@@165 $generated@@136))
)))
(assert  (and (and (and (and (and (and (and (forall (($generated@@172 T@T) ($generated@@173 T@T) ) (= ($generated@@1 ($generated@@168 $generated@@172 $generated@@173)) 16)) (forall (($generated@@174 T@T) ($generated@@175 T@T) ) (! (= ($generated@@169 ($generated@@168 $generated@@174 $generated@@175)) $generated@@174)
 :pattern ( ($generated@@168 $generated@@174 $generated@@175))
))) (forall (($generated@@176 T@T) ($generated@@177 T@T) ) (! (= ($generated@@170 ($generated@@168 $generated@@176 $generated@@177)) $generated@@177)
 :pattern ( ($generated@@168 $generated@@176 $generated@@177))
))) (forall (($generated@@178 T@U) ($generated@@179 T@U) ($generated@@180 T@U) ) (! (let (($generated@@181 ($generated@@170 (type $generated@@178))))
(= (type ($generated@@166 $generated@@178 $generated@@179 $generated@@180)) $generated@@181))
 :pattern ( ($generated@@166 $generated@@178 $generated@@179 $generated@@180))
))) (forall (($generated@@182 T@U) ($generated@@183 T@U) ($generated@@184 T@U) ($generated@@185 T@U) ) (! (let (($generated@@186 (type $generated@@185)))
(let (($generated@@187 (type $generated@@183)))
(= (type ($generated@@171 $generated@@182 $generated@@183 $generated@@184 $generated@@185)) ($generated@@168 $generated@@187 $generated@@186))))
 :pattern ( ($generated@@171 $generated@@182 $generated@@183 $generated@@184 $generated@@185))
))) (forall (($generated@@188 T@U) ($generated@@189 T@U) ($generated@@190 T@U) ($generated@@191 T@U) ) (! (let (($generated@@192 ($generated@@170 (type $generated@@188))))
 (=> (= (type $generated@@191) $generated@@192) (= ($generated@@166 ($generated@@171 $generated@@188 $generated@@189 $generated@@190 $generated@@191) $generated@@189 $generated@@190) $generated@@191)))
 :weight 0
))) (and (and (forall (($generated@@193 T@U) ($generated@@194 T@U) ($generated@@195 T@U) ($generated@@196 T@U) ($generated@@197 T@U) ($generated@@198 T@U) ) (!  (or (= $generated@@195 $generated@@197) (= ($generated@@166 ($generated@@171 $generated@@194 $generated@@195 $generated@@196 $generated@@193) $generated@@197 $generated@@198) ($generated@@166 $generated@@194 $generated@@197 $generated@@198)))
 :weight 0
)) (forall (($generated@@199 T@U) ($generated@@200 T@U) ($generated@@201 T@U) ($generated@@202 T@U) ($generated@@203 T@U) ($generated@@204 T@U) ) (!  (or (= $generated@@202 $generated@@204) (= ($generated@@166 ($generated@@171 $generated@@200 $generated@@201 $generated@@202 $generated@@199) $generated@@203 $generated@@204) ($generated@@166 $generated@@200 $generated@@203 $generated@@204)))
 :weight 0
))) (forall (($generated@@205 T@U) ($generated@@206 T@U) ($generated@@207 T@U) ($generated@@208 T@U) ($generated@@209 T@U) ($generated@@210 T@U) ) (!  (or true (= ($generated@@166 ($generated@@171 $generated@@206 $generated@@207 $generated@@208 $generated@@205) $generated@@209 $generated@@210) ($generated@@166 $generated@@206 $generated@@209 $generated@@210)))
 :weight 0
)))) (forall (($generated@@211 T@U) ($generated@@212 T@U) ($generated@@213 T@U) ($generated@@214 Bool) ) (! (= (type ($generated@@167 $generated@@211 $generated@@212 $generated@@213 $generated@@214)) ($generated@@168 $generated@@81 $generated@@4))
 :pattern ( ($generated@@167 $generated@@211 $generated@@212 $generated@@213 $generated@@214))
))))
(assert (forall (($generated@@215 T@U) ($generated@@216 T@U) ($generated@@217 T@U) ($generated@@218 Bool) ($generated@@219 T@U) ($generated@@220 T@U) ) (! (let (($generated@@221 ($generated@@71 (type $generated@@220))))
 (=> (and (and (and (and (= (type $generated@@215) $generated@@81) (= (type $generated@@216) ($generated@@80 $generated@@81 $generated@@82))) (= (type $generated@@217) ($generated@@70 $generated@@4))) (= (type $generated@@219) $generated@@81)) (= (type $generated@@220) ($generated@@70 $generated@@221))) (= ($generated@@0 ($generated@@166 ($generated@@167 $generated@@215 $generated@@216 $generated@@217 $generated@@218) $generated@@219 $generated@@220))  (=> (and (not (= $generated@@219 $generated@@215)) ($generated@@0 ($generated@@87 ($generated@@85 $generated@@216 $generated@@219) $generated@@217))) $generated@@218))))
 :pattern ( ($generated@@166 ($generated@@167 $generated@@215 $generated@@216 $generated@@217 $generated@@218) $generated@@219 $generated@@220))
)))
(assert (= (type $generated@@222) $generated@@68))
(assert (forall (($generated@@223 T@U) ($generated@@224 T@U) ) (!  (=> (and (= (type $generated@@223) $generated@@81) (= (type $generated@@224) ($generated@@80 $generated@@81 $generated@@82))) (= ($generated@@78 $generated@@223 $generated@@222 $generated@@224) ($generated@@78 $generated@@223 $generated@@136 $generated@@224)))
 :pattern ( ($generated@@78 $generated@@223 $generated@@222 $generated@@224))
)))
(assert (forall (($generated@@227 T@U) ($generated@@228 T@U) ) (! (= (type ($generated@@225 $generated@@227 $generated@@228)) $generated@@144)
 :pattern ( ($generated@@225 $generated@@227 $generated@@228))
)))
(assert (forall (($generated@@229 T@U) ($generated@@230 T@U) ($generated@@231 T@U) ($generated@@232 T@U) ) (!  (=> (and (and (and (= (type $generated@@229) $generated@@68) (= (type $generated@@230) $generated@@68)) (= (type $generated@@231) $generated@@153)) (= (type $generated@@232) $generated@@153)) (= ($generated@@140 ($generated@@225 $generated@@231 $generated@@232) ($generated@@143 $generated@@229 $generated@@230))  (and ($generated@@226 $generated@@231 $generated@@229) ($generated@@226 $generated@@232 $generated@@230))))
 :pattern ( ($generated@@140 ($generated@@225 $generated@@231 $generated@@232) ($generated@@143 $generated@@229 $generated@@230)))
)))
(assert (forall (($generated@@233 T@U) ($generated@@234 T@U) ) (!  (=> (and (= (type $generated@@233) $generated@@144) (= (type $generated@@234) $generated@@144)) (= ($generated@@150 $generated@@233 $generated@@234) (= $generated@@233 $generated@@234)))
 :pattern ( ($generated@@150 $generated@@233 $generated@@234))
)))
(assert (forall (($generated@@236 T@U) ) (! (= (type ($generated@@235 $generated@@236)) $generated@@68)
 :pattern ( ($generated@@235 $generated@@236))
)))
(assert (forall (($generated@@237 T@U) ($generated@@238 T@U) ) (!  (=> (and (= (type $generated@@237) ($generated@@80 $generated@@153 $generated@@4)) (= (type $generated@@238) $generated@@68)) (= ($generated@@140 $generated@@237 ($generated@@235 $generated@@238)) (forall (($generated@@239 T@U) ) (!  (=> (and (= (type $generated@@239) $generated@@153) ($generated@@0 ($generated@@85 $generated@@237 $generated@@239))) ($generated@@226 $generated@@239 $generated@@238))
 :pattern ( ($generated@@85 $generated@@237 $generated@@239))
))))
 :pattern ( ($generated@@140 $generated@@237 ($generated@@235 $generated@@238)))
)))
(assert (forall (($generated@@241 T@U) ) (! (= (type ($generated@@240 $generated@@241)) $generated@@68)
 :pattern ( ($generated@@240 $generated@@241))
)))
(assert (forall (($generated@@242 T@U) ($generated@@243 T@U) ) (!  (=> (and (= (type $generated@@242) ($generated@@80 $generated@@153 $generated@@4)) (= (type $generated@@243) $generated@@68)) (= ($generated@@140 $generated@@242 ($generated@@240 $generated@@243)) (forall (($generated@@244 T@U) ) (!  (=> (and (= (type $generated@@244) $generated@@153) ($generated@@0 ($generated@@85 $generated@@242 $generated@@244))) ($generated@@226 $generated@@244 $generated@@243))
 :pattern ( ($generated@@85 $generated@@242 $generated@@244))
))))
 :pattern ( ($generated@@140 $generated@@242 ($generated@@240 $generated@@243)))
)))
(assert (forall (($generated@@246 T@U) ) (! (let (($generated@@247 (type $generated@@246)))
(= (type ($generated@@245 $generated@@246)) $generated@@247))
 :pattern ( ($generated@@245 $generated@@246))
)))
(assert (forall (($generated@@248 T@U) ) (! (= ($generated@@245 $generated@@248) $generated@@248)
 :pattern ( ($generated@@245 $generated@@248))
)))
(assert (forall (($generated@@251 T@U) ($generated@@252 T@U) ($generated@@253 T@U) ($generated@@254 T@U) ($generated@@255 T@U) ) (!  (=> (and (and (and (and (and (= (type $generated@@251) $generated@@68) (= (type $generated@@252) $generated@@68)) (= (type $generated@@253) $generated@@153)) (= (type $generated@@254) $generated@@153)) (= (type $generated@@255) ($generated@@80 $generated@@81 $generated@@82))) ($generated@@249 $generated@@255)) (= ($generated@@78 ($generated@@225 $generated@@253 $generated@@254) ($generated@@143 $generated@@251 $generated@@252) $generated@@255)  (and ($generated@@250 $generated@@253 $generated@@251 $generated@@255) ($generated@@250 $generated@@254 $generated@@252 $generated@@255))))
 :pattern ( ($generated@@78 ($generated@@225 $generated@@253 $generated@@254) ($generated@@143 $generated@@251 $generated@@252) $generated@@255))
)))
(assert (forall (($generated@@257 T@U) ) (! (= (type ($generated@@256 $generated@@257)) $generated@@72)
 :pattern ( ($generated@@256 $generated@@257))
)))
(assert (forall (($generated@@258 T@U) ) (!  (=> (= (type $generated@@258) $generated@@144) (= ($generated@@142 $generated@@258) (= ($generated@@256 $generated@@258) $generated@@61)))
 :pattern ( ($generated@@142 $generated@@258))
)))
(assert (forall (($generated@@259 T@U) ) (!  (=> (and (= (type $generated@@259) $generated@@144) ($generated@@142 $generated@@259)) (exists (($generated@@260 T@U) ($generated@@261 T@U) ) (!  (and (and (= (type $generated@@260) $generated@@153) (= (type $generated@@261) $generated@@153)) (= $generated@@259 ($generated@@225 $generated@@260 $generated@@261)))
 :no-pattern (type $generated@@260)
 :no-pattern (type $generated@@261)
 :no-pattern ($generated $generated@@260)
 :no-pattern ($generated@@0 $generated@@260)
 :no-pattern ($generated $generated@@261)
 :no-pattern ($generated@@0 $generated@@261)
)))
 :pattern ( ($generated@@142 $generated@@259))
)))
(assert  (and (and (forall (($generated@@266 T@T) ) (= ($generated@@1 ($generated@@264 $generated@@266)) 17)) (forall (($generated@@267 T@T) ) (! (= ($generated@@265 ($generated@@264 $generated@@267)) $generated@@267)
 :pattern ( ($generated@@264 $generated@@267))
))) (forall (($generated@@268 T@T) ) (! (= (type ($generated@@262 $generated@@268)) ($generated@@264 $generated@@268))
 :pattern ( ($generated@@262 $generated@@268))
))))
(assert (forall (($generated@@269 T@T) ) (! (= ($generated@@263 ($generated@@262 $generated@@269)) 0)
 :pattern ( ($generated@@262 $generated@@269))
)))
(assert (forall (($generated@@271 T@U) ) (! (= (type ($generated@@270 $generated@@271)) $generated@@153)
 :pattern ( ($generated@@270 $generated@@271))
)))
(assert (forall (($generated@@272 T@U) ($generated@@273 T@U) ($generated@@274 T@U) ) (!  (=> (and (= (type $generated@@273) $generated@@68) (= (type $generated@@274) ($generated@@80 $generated@@81 $generated@@82))) (= ($generated@@250 ($generated@@270 $generated@@272) $generated@@273 $generated@@274) ($generated@@78 $generated@@272 $generated@@273 $generated@@274)))
 :pattern ( ($generated@@250 ($generated@@270 $generated@@272) $generated@@273 $generated@@274))
)))
(assert (forall (($generated@@277 T@T) ) (! (= (type ($generated@@276 $generated@@277)) ($generated@@80 $generated@@277 $generated@@2))
 :pattern ( ($generated@@276 $generated@@277))
)))
(assert (forall (($generated@@278 T@U) ) (! (let (($generated@@279 ($generated@@83 (type $generated@@278))))
 (=> (= (type $generated@@278) ($generated@@80 $generated@@279 $generated@@2)) (and (= (= ($generated@@275 $generated@@278) 0) (= $generated@@278 ($generated@@276 $generated@@279))) (=> (not (= ($generated@@275 $generated@@278) 0)) (exists (($generated@@280 T@U) ) (!  (and (= (type $generated@@280) $generated@@279) (< 0 ($generated ($generated@@85 $generated@@278 $generated@@280))))
 :no-pattern (type $generated@@280)
 :no-pattern ($generated $generated@@280)
 :no-pattern ($generated@@0 $generated@@280)
))))))
 :pattern ( ($generated@@275 $generated@@278))
)))
(assert  (and (and (and (and (forall (($generated@@286 T@T) ($generated@@287 T@T) ) (= ($generated@@1 ($generated@@283 $generated@@286 $generated@@287)) 18)) (forall (($generated@@288 T@T) ($generated@@289 T@T) ) (! (= ($generated@@284 ($generated@@283 $generated@@288 $generated@@289)) $generated@@288)
 :pattern ( ($generated@@283 $generated@@288 $generated@@289))
))) (forall (($generated@@290 T@T) ($generated@@291 T@T) ) (! (= ($generated@@285 ($generated@@283 $generated@@290 $generated@@291)) $generated@@291)
 :pattern ( ($generated@@283 $generated@@290 $generated@@291))
))) (forall (($generated@@292 T@U) ) (! (let (($generated@@293 ($generated@@284 (type $generated@@292))))
(= (type ($generated@@281 $generated@@292)) ($generated@@80 $generated@@293 $generated@@4)))
 :pattern ( ($generated@@281 $generated@@292))
))) (forall (($generated@@294 T@T) ($generated@@295 T@T) ) (! (= (type ($generated@@282 $generated@@294 $generated@@295)) ($generated@@283 $generated@@294 $generated@@295))
 :pattern ( ($generated@@282 $generated@@294 $generated@@295))
))))
(assert (forall (($generated@@296 T@U) ($generated@@297 T@T) ) (! (let (($generated@@298 (type $generated@@296)))
 (not ($generated@@0 ($generated@@85 ($generated@@281 ($generated@@282 $generated@@298 $generated@@297)) $generated@@296))))
 :pattern ( (let (($generated@@298 (type $generated@@296)))
($generated@@85 ($generated@@281 ($generated@@282 $generated@@298 $generated@@297)) $generated@@296)))
)))
(assert  (and (and (and (and (forall (($generated@@304 T@T) ($generated@@305 T@T) ) (= ($generated@@1 ($generated@@301 $generated@@304 $generated@@305)) 19)) (forall (($generated@@306 T@T) ($generated@@307 T@T) ) (! (= ($generated@@302 ($generated@@301 $generated@@306 $generated@@307)) $generated@@306)
 :pattern ( ($generated@@301 $generated@@306 $generated@@307))
))) (forall (($generated@@308 T@T) ($generated@@309 T@T) ) (! (= ($generated@@303 ($generated@@301 $generated@@308 $generated@@309)) $generated@@309)
 :pattern ( ($generated@@301 $generated@@308 $generated@@309))
))) (forall (($generated@@310 T@U) ) (! (let (($generated@@311 ($generated@@302 (type $generated@@310))))
(= (type ($generated@@299 $generated@@310)) ($generated@@80 $generated@@311 $generated@@4)))
 :pattern ( ($generated@@299 $generated@@310))
))) (forall (($generated@@312 T@T) ($generated@@313 T@T) ) (! (= (type ($generated@@300 $generated@@312 $generated@@313)) ($generated@@301 $generated@@312 $generated@@313))
 :pattern ( ($generated@@300 $generated@@312 $generated@@313))
))))
(assert (forall (($generated@@314 T@U) ($generated@@315 T@T) ) (! (let (($generated@@316 (type $generated@@314)))
 (not ($generated@@0 ($generated@@85 ($generated@@299 ($generated@@300 $generated@@316 $generated@@315)) $generated@@314))))
 :pattern ( (let (($generated@@316 (type $generated@@314)))
($generated@@85 ($generated@@299 ($generated@@300 $generated@@316 $generated@@315)) $generated@@314)))
)))
(assert (forall (($generated@@317 T@U) ) (! (let (($generated@@318 ($generated@@83 (type $generated@@317))))
 (=> (= (type $generated@@317) ($generated@@80 $generated@@318 $generated@@2)) (= ($generated@@159 $generated@@317) (forall (($generated@@319 T@U) ) (!  (=> (= (type $generated@@319) $generated@@318) (and (<= 0 ($generated ($generated@@85 $generated@@317 $generated@@319))) (<= ($generated ($generated@@85 $generated@@317 $generated@@319)) ($generated@@275 $generated@@317))))
 :pattern ( ($generated@@85 $generated@@317 $generated@@319))
)))))
 :pattern ( ($generated@@159 $generated@@317))
)))
(assert (forall (($generated@@321 T@T) ($generated@@322 T@U) ) (! (= (type ($generated@@320 $generated@@321 $generated@@322)) $generated@@321)
 :pattern ( ($generated@@320 $generated@@321 $generated@@322))
)))
(assert (forall (($generated@@323 T@U) ) (!  (=> (and (= (type $generated@@323) $generated@@153) ($generated@@226 $generated@@323 $generated@@136)) (and (= ($generated@@270 ($generated@@320 $generated@@81 $generated@@323)) $generated@@323) ($generated@@140 ($generated@@320 $generated@@81 $generated@@323) $generated@@136)))
 :pattern ( ($generated@@226 $generated@@323 $generated@@136))
)))
(assert (forall (($generated@@324 T@U) ) (!  (=> (and (= (type $generated@@324) $generated@@153) ($generated@@226 $generated@@324 $generated@@222)) (and (= ($generated@@270 ($generated@@320 $generated@@81 $generated@@324)) $generated@@324) ($generated@@140 ($generated@@320 $generated@@81 $generated@@324) $generated@@222)))
 :pattern ( ($generated@@226 $generated@@324 $generated@@222))
)))
(assert (forall (($generated@@325 T@U) ) (!  (=> (= (type $generated@@325) $generated@@81) (= ($generated@@140 $generated@@325 $generated@@222)  (and ($generated@@140 $generated@@325 $generated@@136) (not (= $generated@@325 $generated@@137)))))
 :pattern ( ($generated@@140 $generated@@325 $generated@@222))
)))
(assert (forall (($generated@@326 T@U) ) (! (let (($generated@@327 ($generated@@285 (type $generated@@326))))
(let (($generated@@328 ($generated@@284 (type $generated@@326))))
 (=> (= (type $generated@@326) ($generated@@283 $generated@@328 $generated@@327)) (or (= $generated@@326 ($generated@@282 $generated@@328 $generated@@327)) (exists (($generated@@329 T@U) ) (!  (and (= (type $generated@@329) $generated@@328) ($generated@@0 ($generated@@85 ($generated@@281 $generated@@326) $generated@@329)))
 :no-pattern (type $generated@@329)
 :no-pattern ($generated $generated@@329)
 :no-pattern ($generated@@0 $generated@@329)
))))))
 :pattern ( ($generated@@281 $generated@@326))
)))
(assert (forall (($generated@@331 T@U) ) (! (let (($generated@@332 ($generated@@285 (type $generated@@331))))
(= (type ($generated@@330 $generated@@331)) ($generated@@80 $generated@@332 $generated@@4)))
 :pattern ( ($generated@@330 $generated@@331))
)))
(assert (forall (($generated@@333 T@U) ) (! (let (($generated@@334 ($generated@@285 (type $generated@@333))))
(let (($generated@@335 ($generated@@284 (type $generated@@333))))
 (=> (= (type $generated@@333) ($generated@@283 $generated@@335 $generated@@334)) (or (= $generated@@333 ($generated@@282 $generated@@335 $generated@@334)) (exists (($generated@@336 T@U) ) (!  (and (= (type $generated@@336) $generated@@334) ($generated@@0 ($generated@@85 ($generated@@330 $generated@@333) $generated@@336)))
 :no-pattern (type $generated@@336)
 :no-pattern ($generated $generated@@336)
 :no-pattern ($generated@@0 $generated@@336)
))))))
 :pattern ( ($generated@@330 $generated@@333))
)))
(assert (forall (($generated@@337 T@U) ) (! (let (($generated@@338 ($generated@@303 (type $generated@@337))))
(let (($generated@@339 ($generated@@302 (type $generated@@337))))
 (=> (= (type $generated@@337) ($generated@@301 $generated@@339 $generated@@338)) (or (= $generated@@337 ($generated@@300 $generated@@339 $generated@@338)) (exists (($generated@@340 T@U) ) (!  (and (= (type $generated@@340) $generated@@339) ($generated@@0 ($generated@@85 ($generated@@299 $generated@@337) $generated@@340)))
 :no-pattern (type $generated@@340)
 :no-pattern ($generated $generated@@340)
 :no-pattern ($generated@@0 $generated@@340)
))))))
 :pattern ( ($generated@@299 $generated@@337))
)))
(assert (forall (($generated@@342 T@U) ) (! (let (($generated@@343 ($generated@@303 (type $generated@@342))))
(= (type ($generated@@341 $generated@@342)) ($generated@@80 $generated@@343 $generated@@4)))
 :pattern ( ($generated@@341 $generated@@342))
)))
(assert (forall (($generated@@344 T@U) ) (! (let (($generated@@345 ($generated@@303 (type $generated@@344))))
(let (($generated@@346 ($generated@@302 (type $generated@@344))))
 (=> (= (type $generated@@344) ($generated@@301 $generated@@346 $generated@@345)) (or (= $generated@@344 ($generated@@300 $generated@@346 $generated@@345)) (exists (($generated@@347 T@U) ) (!  (and (= (type $generated@@347) $generated@@345) ($generated@@0 ($generated@@85 ($generated@@341 $generated@@344) $generated@@347)))
 :no-pattern (type $generated@@347)
 :no-pattern ($generated $generated@@347)
 :no-pattern ($generated@@0 $generated@@347)
))))))
 :pattern ( ($generated@@341 $generated@@344))
)))
(assert (forall (($generated@@348 T@U) ($generated@@349 T@U) ) (!  (=> (and (= (type $generated@@348) ($generated@@80 $generated@@153 $generated@@2)) (= (type $generated@@349) $generated@@68)) (= ($generated@@140 $generated@@348 ($generated@@158 $generated@@349)) (forall (($generated@@350 T@U) ) (!  (=> (and (= (type $generated@@350) $generated@@153) (< 0 ($generated ($generated@@85 $generated@@348 $generated@@350)))) ($generated@@226 $generated@@350 $generated@@349))
 :pattern ( ($generated@@85 $generated@@348 $generated@@350))
))))
 :pattern ( ($generated@@140 $generated@@348 ($generated@@158 $generated@@349)))
)))
(assert (forall (($generated@@351 T@U) ($generated@@352 T@U) ($generated@@353 T@U) ) (!  (=> (and (and (= (type $generated@@351) ($generated@@80 $generated@@153 $generated@@4)) (= (type $generated@@352) $generated@@68)) (= (type $generated@@353) ($generated@@80 $generated@@81 $generated@@82))) (= ($generated@@78 $generated@@351 ($generated@@235 $generated@@352) $generated@@353) (forall (($generated@@354 T@U) ) (!  (=> (and (= (type $generated@@354) $generated@@153) ($generated@@0 ($generated@@85 $generated@@351 $generated@@354))) ($generated@@250 $generated@@354 $generated@@352 $generated@@353))
 :pattern ( ($generated@@85 $generated@@351 $generated@@354))
))))
 :pattern ( ($generated@@78 $generated@@351 ($generated@@235 $generated@@352) $generated@@353))
)))
(assert (forall (($generated@@355 T@U) ($generated@@356 T@U) ($generated@@357 T@U) ) (!  (=> (and (and (= (type $generated@@355) ($generated@@80 $generated@@153 $generated@@4)) (= (type $generated@@356) $generated@@68)) (= (type $generated@@357) ($generated@@80 $generated@@81 $generated@@82))) (= ($generated@@78 $generated@@355 ($generated@@240 $generated@@356) $generated@@357) (forall (($generated@@358 T@U) ) (!  (=> (and (= (type $generated@@358) $generated@@153) ($generated@@0 ($generated@@85 $generated@@355 $generated@@358))) ($generated@@250 $generated@@358 $generated@@356 $generated@@357))
 :pattern ( ($generated@@85 $generated@@355 $generated@@358))
))))
 :pattern ( ($generated@@78 $generated@@355 ($generated@@240 $generated@@356) $generated@@357))
)))
(assert (forall (($generated@@359 T@U) ) (! (let (($generated@@360 (type $generated@@359)))
(= ($generated ($generated@@85 ($generated@@276 $generated@@360) $generated@@359)) 0))
 :pattern ( (let (($generated@@360 (type $generated@@359)))
($generated@@85 ($generated@@276 $generated@@360) $generated@@359)))
)))
(assert  (and (forall (($generated@@363 T@U) ) (! (= (type ($generated@@361 $generated@@363)) ($generated@@80 $generated@@153 $generated@@4))
 :pattern ( ($generated@@361 $generated@@363))
)) (forall (($generated@@364 T@U) ) (! (let (($generated@@365 ($generated@@285 (type $generated@@364))))
(let (($generated@@366 ($generated@@284 (type $generated@@364))))
(= (type ($generated@@362 $generated@@364)) ($generated@@80 $generated@@366 $generated@@365))))
 :pattern ( ($generated@@362 $generated@@364))
))))
(assert (forall (($generated@@367 T@U) ($generated@@368 T@U) ) (!  (=> (and (= (type $generated@@367) ($generated@@283 $generated@@153 $generated@@153)) (= (type $generated@@368) $generated@@153)) (= ($generated@@0 ($generated@@85 ($generated@@361 $generated@@367) $generated@@368))  (and ($generated@@0 ($generated@@85 ($generated@@281 $generated@@367) ($generated@@151 ($generated@@320 $generated@@144 $generated@@368)))) (= ($generated@@85 ($generated@@362 $generated@@367) ($generated@@151 ($generated@@320 $generated@@144 $generated@@368))) ($generated@@152 ($generated@@320 $generated@@144 $generated@@368))))))
 :pattern ( ($generated@@85 ($generated@@361 $generated@@367) $generated@@368))
)))
(assert  (and (forall (($generated@@371 T@U) ) (! (= (type ($generated@@369 $generated@@371)) ($generated@@80 $generated@@153 $generated@@4))
 :pattern ( ($generated@@369 $generated@@371))
)) (forall (($generated@@372 T@U) ) (! (let (($generated@@373 ($generated@@303 (type $generated@@372))))
(let (($generated@@374 ($generated@@302 (type $generated@@372))))
(= (type ($generated@@370 $generated@@372)) ($generated@@80 $generated@@374 $generated@@373))))
 :pattern ( ($generated@@370 $generated@@372))
))))
(assert (forall (($generated@@375 T@U) ($generated@@376 T@U) ) (!  (=> (and (= (type $generated@@375) ($generated@@301 $generated@@153 $generated@@153)) (= (type $generated@@376) $generated@@153)) (= ($generated@@0 ($generated@@85 ($generated@@369 $generated@@375) $generated@@376))  (and ($generated@@0 ($generated@@85 ($generated@@299 $generated@@375) ($generated@@151 ($generated@@320 $generated@@144 $generated@@376)))) (= ($generated@@85 ($generated@@370 $generated@@375) ($generated@@151 ($generated@@320 $generated@@144 $generated@@376))) ($generated@@152 ($generated@@320 $generated@@144 $generated@@376))))))
 :pattern ( ($generated@@85 ($generated@@369 $generated@@375) $generated@@376))
)))
(assert (forall (($generated@@377 T@U) ($generated@@378 T@U) ) (! (let (($generated@@379 (type $generated@@378)))
(let (($generated@@380 ($generated@@284 (type $generated@@377))))
 (=> (= (type $generated@@377) ($generated@@283 $generated@@380 $generated@@379)) (= ($generated@@0 ($generated@@85 ($generated@@330 $generated@@377) $generated@@378)) (exists (($generated@@381 T@U) ) (!  (and (= (type $generated@@381) $generated@@380) (and ($generated@@0 ($generated@@85 ($generated@@281 $generated@@377) $generated@@381)) (= $generated@@378 ($generated@@85 ($generated@@362 $generated@@377) $generated@@381))))
 :pattern ( ($generated@@85 ($generated@@281 $generated@@377) $generated@@381))
 :pattern ( ($generated@@85 ($generated@@362 $generated@@377) $generated@@381))
))))))
 :pattern ( ($generated@@85 ($generated@@330 $generated@@377) $generated@@378))
)))
(assert (forall (($generated@@382 T@U) ($generated@@383 T@U) ) (! (let (($generated@@384 (type $generated@@383)))
(let (($generated@@385 ($generated@@302 (type $generated@@382))))
 (=> (= (type $generated@@382) ($generated@@301 $generated@@385 $generated@@384)) (= ($generated@@0 ($generated@@85 ($generated@@341 $generated@@382) $generated@@383)) (exists (($generated@@386 T@U) ) (!  (and (= (type $generated@@386) $generated@@385) (and ($generated@@0 ($generated@@85 ($generated@@299 $generated@@382) $generated@@386)) (= $generated@@383 ($generated@@85 ($generated@@370 $generated@@382) $generated@@386))))
 :pattern ( ($generated@@85 ($generated@@299 $generated@@382) $generated@@386))
 :pattern ( ($generated@@85 ($generated@@370 $generated@@382) $generated@@386))
))))))
 :pattern ( ($generated@@85 ($generated@@341 $generated@@382) $generated@@383))
)))
(assert (forall (($generated@@388 T@U) ($generated@@389 T@U) ) (! (= (type ($generated@@387 $generated@@388 $generated@@389)) $generated@@68)
 :pattern ( ($generated@@387 $generated@@388 $generated@@389))
)))
(assert (forall (($generated@@390 T@U) ($generated@@391 T@U) ($generated@@392 T@U) ($generated@@393 T@U) ) (!  (=> (and (and (and (= (type $generated@@390) ($generated@@283 $generated@@153 $generated@@153)) (= (type $generated@@391) $generated@@68)) (= (type $generated@@392) $generated@@68)) (= (type $generated@@393) ($generated@@80 $generated@@81 $generated@@82))) (= ($generated@@78 $generated@@390 ($generated@@387 $generated@@391 $generated@@392) $generated@@393) (forall (($generated@@394 T@U) ) (!  (=> (and (= (type $generated@@394) $generated@@153) ($generated@@0 ($generated@@85 ($generated@@281 $generated@@390) $generated@@394))) (and ($generated@@250 ($generated@@85 ($generated@@362 $generated@@390) $generated@@394) $generated@@392 $generated@@393) ($generated@@250 $generated@@394 $generated@@391 $generated@@393)))
 :pattern ( ($generated@@85 ($generated@@362 $generated@@390) $generated@@394))
 :pattern ( ($generated@@85 ($generated@@281 $generated@@390) $generated@@394))
))))
 :pattern ( ($generated@@78 $generated@@390 ($generated@@387 $generated@@391 $generated@@392) $generated@@393))
)))
(assert (forall (($generated@@396 T@U) ($generated@@397 T@U) ) (! (= (type ($generated@@395 $generated@@396 $generated@@397)) $generated@@68)
 :pattern ( ($generated@@395 $generated@@396 $generated@@397))
)))
(assert (forall (($generated@@398 T@U) ($generated@@399 T@U) ($generated@@400 T@U) ($generated@@401 T@U) ) (!  (=> (and (and (and (= (type $generated@@398) ($generated@@301 $generated@@153 $generated@@153)) (= (type $generated@@399) $generated@@68)) (= (type $generated@@400) $generated@@68)) (= (type $generated@@401) ($generated@@80 $generated@@81 $generated@@82))) (= ($generated@@78 $generated@@398 ($generated@@395 $generated@@399 $generated@@400) $generated@@401) (forall (($generated@@402 T@U) ) (!  (=> (and (= (type $generated@@402) $generated@@153) ($generated@@0 ($generated@@85 ($generated@@299 $generated@@398) $generated@@402))) (and ($generated@@250 ($generated@@85 ($generated@@370 $generated@@398) $generated@@402) $generated@@400 $generated@@401) ($generated@@250 $generated@@402 $generated@@399 $generated@@401)))
 :pattern ( ($generated@@85 ($generated@@370 $generated@@398) $generated@@402))
 :pattern ( ($generated@@85 ($generated@@299 $generated@@398) $generated@@402))
))))
 :pattern ( ($generated@@78 $generated@@398 ($generated@@395 $generated@@399 $generated@@400) $generated@@401))
)))
(assert (forall (($generated@@404 T@T) ) (! (= (type ($generated@@403 $generated@@404)) ($generated@@80 $generated@@404 $generated@@4))
 :pattern ( ($generated@@403 $generated@@404))
)))
(assert (forall (($generated@@405 T@U) ) (! (let (($generated@@406 ($generated@@303 (type $generated@@405))))
(let (($generated@@407 ($generated@@302 (type $generated@@405))))
 (=> (= (type $generated@@405) ($generated@@301 $generated@@407 $generated@@406)) (= (= $generated@@405 ($generated@@300 $generated@@407 $generated@@406)) (= ($generated@@299 $generated@@405) ($generated@@403 $generated@@407))))))
 :pattern ( ($generated@@299 $generated@@405))
)))
(assert (forall (($generated@@408 T@U) ) (! (let (($generated@@409 ($generated@@303 (type $generated@@408))))
(let (($generated@@410 ($generated@@302 (type $generated@@408))))
 (=> (= (type $generated@@408) ($generated@@301 $generated@@410 $generated@@409)) (= (= $generated@@408 ($generated@@300 $generated@@410 $generated@@409)) (= ($generated@@341 $generated@@408) ($generated@@403 $generated@@409))))))
 :pattern ( ($generated@@341 $generated@@408))
)))
(assert (forall (($generated@@411 T@U) ) (! (let (($generated@@412 ($generated@@303 (type $generated@@411))))
(let (($generated@@413 ($generated@@302 (type $generated@@411))))
 (=> (= (type $generated@@411) ($generated@@301 $generated@@413 $generated@@412)) (= (= $generated@@411 ($generated@@300 $generated@@413 $generated@@412)) (= ($generated@@369 $generated@@411) ($generated@@403 $generated@@153))))))
 :pattern ( ($generated@@369 $generated@@411))
)))
(assert (forall (($generated@@414 T@U) ) (! (let (($generated@@415 ($generated@@285 (type $generated@@414))))
(let (($generated@@416 ($generated@@284 (type $generated@@414))))
 (=> (= (type $generated@@414) ($generated@@283 $generated@@416 $generated@@415)) (or (= $generated@@414 ($generated@@282 $generated@@416 $generated@@415)) (exists (($generated@@417 T@U) ($generated@@418 T@U) ) (!  (and (and (= (type $generated@@417) $generated@@153) (= (type $generated@@418) $generated@@153)) ($generated@@0 ($generated@@85 ($generated@@361 $generated@@414) ($generated@@270 ($generated@@225 $generated@@417 $generated@@418)))))
 :no-pattern (type $generated@@417)
 :no-pattern (type $generated@@418)
 :no-pattern ($generated $generated@@417)
 :no-pattern ($generated@@0 $generated@@417)
 :no-pattern ($generated $generated@@418)
 :no-pattern ($generated@@0 $generated@@418)
))))))
 :pattern ( ($generated@@361 $generated@@414))
)))
(assert (forall (($generated@@419 T@U) ) (! (let (($generated@@420 ($generated@@303 (type $generated@@419))))
(let (($generated@@421 ($generated@@302 (type $generated@@419))))
 (=> (= (type $generated@@419) ($generated@@301 $generated@@421 $generated@@420)) (or (= $generated@@419 ($generated@@300 $generated@@421 $generated@@420)) (exists (($generated@@422 T@U) ($generated@@423 T@U) ) (!  (and (and (= (type $generated@@422) $generated@@153) (= (type $generated@@423) $generated@@153)) ($generated@@0 ($generated@@85 ($generated@@369 $generated@@419) ($generated@@270 ($generated@@225 $generated@@422 $generated@@423)))))
 :no-pattern (type $generated@@422)
 :no-pattern (type $generated@@423)
 :no-pattern ($generated $generated@@422)
 :no-pattern ($generated@@0 $generated@@422)
 :no-pattern ($generated $generated@@423)
 :no-pattern ($generated@@0 $generated@@423)
))))))
 :pattern ( ($generated@@369 $generated@@419))
)))
(assert (forall (($generated@@424 T@U) ) (!  (=> (and (= (type $generated@@424) $generated@@153) ($generated@@226 $generated@@424 $generated@@46)) (and (= ($generated@@270 ($generated@@320 $generated@@2 $generated@@424)) $generated@@424) ($generated@@140 ($generated@@320 $generated@@2 $generated@@424) $generated@@46)))
 :pattern ( ($generated@@226 $generated@@424 $generated@@46))
)))
(assert (forall (($generated@@425 T@U) ) (!  (=> (and (= (type $generated@@425) $generated@@153) ($generated@@226 $generated@@425 $generated@@47)) (and (= ($generated@@270 ($generated@@320 $generated@@3 $generated@@425)) $generated@@425) ($generated@@140 ($generated@@320 $generated@@3 $generated@@425) $generated@@47)))
 :pattern ( ($generated@@226 $generated@@425 $generated@@47))
)))
(assert (forall (($generated@@426 T@U) ) (!  (=> (and (= (type $generated@@426) $generated@@153) ($generated@@226 $generated@@426 $generated@@44)) (and (= ($generated@@270 ($generated@@320 $generated@@4 $generated@@426)) $generated@@426) ($generated@@140 ($generated@@320 $generated@@4 $generated@@426) $generated@@44)))
 :pattern ( ($generated@@226 $generated@@426 $generated@@44))
)))
(assert (= ($generated@@1 $generated@@427) 20))
(assert (forall (($generated@@428 T@U) ) (!  (=> (and (= (type $generated@@428) $generated@@153) ($generated@@226 $generated@@428 $generated@@45)) (and (= ($generated@@270 ($generated@@320 $generated@@427 $generated@@428)) $generated@@428) ($generated@@140 ($generated@@320 $generated@@427 $generated@@428) $generated@@45)))
 :pattern ( ($generated@@226 $generated@@428 $generated@@45))
)))
(assert (forall (($generated@@429 T@U) ($generated@@430 T@U) ) (!  (=> (= (type $generated@@430) $generated@@68) (= ($generated@@226 ($generated@@270 $generated@@429) $generated@@430) ($generated@@140 $generated@@429 $generated@@430)))
 :pattern ( ($generated@@226 ($generated@@270 $generated@@429) $generated@@430))
)))
(assert (forall (($generated@@431 T@U) ) (! (let (($generated@@432 ($generated@@83 (type $generated@@431))))
 (=> (= (type $generated@@431) ($generated@@80 $generated@@432 $generated@@2)) (<= 0 ($generated@@275 $generated@@431))))
 :pattern ( ($generated@@275 $generated@@431))
)))
(assert (forall (($generated@@433 T@U) ) (! (let (($generated@@434 ($generated@@265 (type $generated@@433))))
 (=> (= (type $generated@@433) ($generated@@264 $generated@@434)) (<= 0 ($generated@@263 $generated@@433))))
 :pattern ( ($generated@@263 $generated@@433))
)))
(assert (forall (($generated@@436 T@U) ) (! (= (type ($generated@@435 $generated@@436)) $generated@@68)
 :pattern ( ($generated@@435 $generated@@436))
)))
(assert (forall (($generated@@437 T@U) ($generated@@438 T@U) ) (!  (=> (and (= (type $generated@@437) $generated@@68) (= (type $generated@@438) $generated@@68)) (= ($generated@@435 ($generated@@387 $generated@@437 $generated@@438)) $generated@@437))
 :pattern ( ($generated@@387 $generated@@437 $generated@@438))
)))
(assert (forall (($generated@@440 T@U) ) (! (= (type ($generated@@439 $generated@@440)) $generated@@68)
 :pattern ( ($generated@@439 $generated@@440))
)))
(assert (forall (($generated@@441 T@U) ($generated@@442 T@U) ) (!  (=> (and (= (type $generated@@441) $generated@@68) (= (type $generated@@442) $generated@@68)) (= ($generated@@439 ($generated@@387 $generated@@441 $generated@@442)) $generated@@442))
 :pattern ( ($generated@@387 $generated@@441 $generated@@442))
)))
(assert (forall (($generated@@443 T@U) ($generated@@444 T@U) ) (!  (=> (and (= (type $generated@@443) $generated@@68) (= (type $generated@@444) $generated@@68)) (= ($generated@@76 ($generated@@387 $generated@@443 $generated@@444)) $generated@@58))
 :pattern ( ($generated@@387 $generated@@443 $generated@@444))
)))
(assert (forall (($generated@@446 T@U) ) (! (= (type ($generated@@445 $generated@@446)) $generated@@68)
 :pattern ( ($generated@@445 $generated@@446))
)))
(assert (forall (($generated@@447 T@U) ($generated@@448 T@U) ) (!  (=> (and (= (type $generated@@447) $generated@@68) (= (type $generated@@448) $generated@@68)) (= ($generated@@445 ($generated@@395 $generated@@447 $generated@@448)) $generated@@447))
 :pattern ( ($generated@@395 $generated@@447 $generated@@448))
)))
(assert (forall (($generated@@450 T@U) ) (! (= (type ($generated@@449 $generated@@450)) $generated@@68)
 :pattern ( ($generated@@449 $generated@@450))
)))
(assert (forall (($generated@@451 T@U) ($generated@@452 T@U) ) (!  (=> (and (= (type $generated@@451) $generated@@68) (= (type $generated@@452) $generated@@68)) (= ($generated@@449 ($generated@@395 $generated@@451 $generated@@452)) $generated@@452))
 :pattern ( ($generated@@395 $generated@@451 $generated@@452))
)))
(assert (forall (($generated@@453 T@U) ($generated@@454 T@U) ) (!  (=> (and (= (type $generated@@453) $generated@@68) (= (type $generated@@454) $generated@@68)) (= ($generated@@76 ($generated@@395 $generated@@453 $generated@@454)) $generated@@59))
 :pattern ( ($generated@@395 $generated@@453 $generated@@454))
)))
(assert (forall (($generated@@455 T@U) ($generated@@456 T@U) ) (!  (=> (and (= (type $generated@@455) $generated@@153) (= (type $generated@@456) $generated@@153)) (= ($generated@@256 ($generated@@225 $generated@@455 $generated@@456)) $generated@@61))
 :pattern ( ($generated@@225 $generated@@455 $generated@@456))
)))
(assert (forall (($generated@@458 T@U) ) (! (= (type ($generated@@457 $generated@@458)) $generated@@68)
 :pattern ( ($generated@@457 $generated@@458))
)))
(assert (forall (($generated@@459 T@U) ($generated@@460 T@U) ) (!  (=> (and (= (type $generated@@459) $generated@@68) (= (type $generated@@460) $generated@@68)) (= ($generated@@457 ($generated@@143 $generated@@459 $generated@@460)) $generated@@459))
 :pattern ( ($generated@@143 $generated@@459 $generated@@460))
)))
(assert (forall (($generated@@462 T@U) ) (! (= (type ($generated@@461 $generated@@462)) $generated@@68)
 :pattern ( ($generated@@461 $generated@@462))
)))
(assert (forall (($generated@@463 T@U) ($generated@@464 T@U) ) (!  (=> (and (= (type $generated@@463) $generated@@68) (= (type $generated@@464) $generated@@68)) (= ($generated@@461 ($generated@@143 $generated@@463 $generated@@464)) $generated@@464))
 :pattern ( ($generated@@143 $generated@@463 $generated@@464))
)))
(assert (forall (($generated@@465 T@U) ($generated@@466 T@U) ) (!  (=> (and (= (type $generated@@465) $generated@@153) (= (type $generated@@466) $generated@@153)) (= ($generated@@151 ($generated@@225 $generated@@465 $generated@@466)) $generated@@465))
 :pattern ( ($generated@@225 $generated@@465 $generated@@466))
)))
(assert (forall (($generated@@467 T@U) ($generated@@468 T@U) ) (!  (=> (and (= (type $generated@@467) $generated@@153) (= (type $generated@@468) $generated@@153)) (= ($generated@@152 ($generated@@225 $generated@@467 $generated@@468)) $generated@@468))
 :pattern ( ($generated@@225 $generated@@467 $generated@@468))
)))
(assert  (and (forall (($generated@@471 T@U) ) (! (= (type ($generated@@469 $generated@@471)) $generated@@68)
 :pattern ( ($generated@@469 $generated@@471))
)) (forall (($generated@@472 T@U) ($generated@@473 Int) ) (! (let (($generated@@474 ($generated@@265 (type $generated@@472))))
(= (type ($generated@@470 $generated@@472 $generated@@473)) $generated@@474))
 :pattern ( ($generated@@470 $generated@@472 $generated@@473))
))))
(assert (forall (($generated@@475 T@U) ($generated@@476 T@U) ($generated@@477 T@U) ) (!  (=> (and (and (= (type $generated@@475) ($generated@@264 $generated@@153)) (= (type $generated@@476) $generated@@68)) (= (type $generated@@477) ($generated@@80 $generated@@81 $generated@@82))) (= ($generated@@78 $generated@@475 ($generated@@469 $generated@@476) $generated@@477) (forall (($generated@@478 Int) ) (!  (=> (and (<= 0 $generated@@478) (< $generated@@478 ($generated@@263 $generated@@475))) ($generated@@250 ($generated@@470 $generated@@475 $generated@@478) $generated@@476 $generated@@477))
 :pattern ( ($generated@@470 $generated@@475 $generated@@478))
))))
 :pattern ( ($generated@@78 $generated@@475 ($generated@@469 $generated@@476) $generated@@477))
)))
(assert (forall (($generated@@480 Int) ) (! (= ($generated@@479 ($generated@@79 $generated@@480)) $generated@@480)
 :pattern ( ($generated@@79 $generated@@480))
)))
(assert (forall (($generated@@482 T@U) ) (! (= (type ($generated@@481 $generated@@482)) $generated@@68)
 :pattern ( ($generated@@481 $generated@@482))
)))
(assert (forall (($generated@@483 T@U) ) (!  (=> (= (type $generated@@483) $generated@@68) (= ($generated@@481 ($generated@@235 $generated@@483)) $generated@@483))
 :pattern ( ($generated@@235 $generated@@483))
)))
(assert (forall (($generated@@484 T@U) ) (!  (=> (= (type $generated@@484) $generated@@68) (= ($generated@@76 ($generated@@235 $generated@@484)) $generated@@54))
 :pattern ( ($generated@@235 $generated@@484))
)))
(assert (forall (($generated@@486 T@U) ) (! (= (type ($generated@@485 $generated@@486)) $generated@@68)
 :pattern ( ($generated@@485 $generated@@486))
)))
(assert (forall (($generated@@487 T@U) ) (!  (=> (= (type $generated@@487) $generated@@68) (= ($generated@@485 ($generated@@240 $generated@@487)) $generated@@487))
 :pattern ( ($generated@@240 $generated@@487))
)))
(assert (forall (($generated@@488 T@U) ) (!  (=> (= (type $generated@@488) $generated@@68) (= ($generated@@76 ($generated@@240 $generated@@488)) $generated@@55))
 :pattern ( ($generated@@240 $generated@@488))
)))
(assert (forall (($generated@@490 T@U) ) (! (= (type ($generated@@489 $generated@@490)) $generated@@68)
 :pattern ( ($generated@@489 $generated@@490))
)))
(assert (forall (($generated@@491 T@U) ) (!  (=> (= (type $generated@@491) $generated@@68) (= ($generated@@489 ($generated@@158 $generated@@491)) $generated@@491))
 :pattern ( ($generated@@158 $generated@@491))
)))
(assert (forall (($generated@@492 T@U) ) (!  (=> (= (type $generated@@492) $generated@@68) (= ($generated@@76 ($generated@@158 $generated@@492)) $generated@@56))
 :pattern ( ($generated@@158 $generated@@492))
)))
(assert (forall (($generated@@494 T@U) ) (! (= (type ($generated@@493 $generated@@494)) $generated@@68)
 :pattern ( ($generated@@493 $generated@@494))
)))
(assert (forall (($generated@@495 T@U) ) (!  (=> (= (type $generated@@495) $generated@@68) (= ($generated@@493 ($generated@@469 $generated@@495)) $generated@@495))
 :pattern ( ($generated@@469 $generated@@495))
)))
(assert (forall (($generated@@496 T@U) ) (!  (=> (= (type $generated@@496) $generated@@68) (= ($generated@@76 ($generated@@469 $generated@@496)) $generated@@57))
 :pattern ( ($generated@@469 $generated@@496))
)))
(assert (forall (($generated@@497 T@U) ) (! (let (($generated@@498 (type $generated@@497)))
(= ($generated@@320 $generated@@498 ($generated@@270 $generated@@497)) $generated@@497))
 :pattern ( ($generated@@270 $generated@@497))
)))
(assert (forall (($generated@@499 T@U) ($generated@@500 T@U) ($generated@@501 T@U) ) (!  (=> (and (and (= (type $generated@@499) ($generated@@283 $generated@@153 $generated@@153)) (= (type $generated@@500) $generated@@68)) (= (type $generated@@501) $generated@@68)) (= ($generated@@140 $generated@@499 ($generated@@387 $generated@@500 $generated@@501)) (forall (($generated@@502 T@U) ) (!  (=> (and (= (type $generated@@502) $generated@@153) ($generated@@0 ($generated@@85 ($generated@@281 $generated@@499) $generated@@502))) (and ($generated@@226 ($generated@@85 ($generated@@362 $generated@@499) $generated@@502) $generated@@501) ($generated@@226 $generated@@502 $generated@@500)))
 :pattern ( ($generated@@85 ($generated@@362 $generated@@499) $generated@@502))
 :pattern ( ($generated@@85 ($generated@@281 $generated@@499) $generated@@502))
))))
 :pattern ( ($generated@@140 $generated@@499 ($generated@@387 $generated@@500 $generated@@501)))
)))
(assert (forall (($generated@@503 T@U) ($generated@@504 T@U) ($generated@@505 T@U) ) (!  (=> (and (and (= (type $generated@@503) ($generated@@301 $generated@@153 $generated@@153)) (= (type $generated@@504) $generated@@68)) (= (type $generated@@505) $generated@@68)) (= ($generated@@140 $generated@@503 ($generated@@395 $generated@@504 $generated@@505)) (forall (($generated@@506 T@U) ) (!  (=> (and (= (type $generated@@506) $generated@@153) ($generated@@0 ($generated@@85 ($generated@@299 $generated@@503) $generated@@506))) (and ($generated@@226 ($generated@@85 ($generated@@370 $generated@@503) $generated@@506) $generated@@505) ($generated@@226 $generated@@506 $generated@@504)))
 :pattern ( ($generated@@85 ($generated@@370 $generated@@503) $generated@@506))
 :pattern ( ($generated@@85 ($generated@@299 $generated@@503) $generated@@506))
))))
 :pattern ( ($generated@@140 $generated@@503 ($generated@@395 $generated@@504 $generated@@505)))
)))
(assert (forall (($generated@@509 T@U) ($generated@@510 T@U) ) (!  (=> (and (= (type $generated@@509) $generated@@153) (= (type $generated@@510) $generated@@153)) (< ($generated@@507 $generated@@509) ($generated@@508 ($generated@@225 $generated@@509 $generated@@510))))
 :pattern ( ($generated@@225 $generated@@509 $generated@@510))
)))
(assert (forall (($generated@@511 T@U) ($generated@@512 T@U) ) (!  (=> (and (= (type $generated@@511) $generated@@153) (= (type $generated@@512) $generated@@153)) (< ($generated@@507 $generated@@512) ($generated@@508 ($generated@@225 $generated@@511 $generated@@512))))
 :pattern ( ($generated@@225 $generated@@511 $generated@@512))
)))
(assert (forall (($generated@@513 T@U) ($generated@@514 T@U) ($generated@@515 T@U) ) (!  (=> (and (and (and (= (type $generated@@513) $generated@@153) (= (type $generated@@514) $generated@@68)) (= (type $generated@@515) $generated@@68)) ($generated@@226 $generated@@513 ($generated@@387 $generated@@514 $generated@@515))) (and (= ($generated@@270 ($generated@@320 ($generated@@283 $generated@@153 $generated@@153) $generated@@513)) $generated@@513) ($generated@@140 ($generated@@320 ($generated@@283 $generated@@153 $generated@@153) $generated@@513) ($generated@@387 $generated@@514 $generated@@515))))
 :pattern ( ($generated@@226 $generated@@513 ($generated@@387 $generated@@514 $generated@@515)))
)))
(assert (forall (($generated@@516 T@U) ($generated@@517 T@U) ($generated@@518 T@U) ) (!  (=> (and (and (and (= (type $generated@@516) $generated@@153) (= (type $generated@@517) $generated@@68)) (= (type $generated@@518) $generated@@68)) ($generated@@226 $generated@@516 ($generated@@395 $generated@@517 $generated@@518))) (and (= ($generated@@270 ($generated@@320 ($generated@@301 $generated@@153 $generated@@153) $generated@@516)) $generated@@516) ($generated@@140 ($generated@@320 ($generated@@301 $generated@@153 $generated@@153) $generated@@516) ($generated@@395 $generated@@517 $generated@@518))))
 :pattern ( ($generated@@226 $generated@@516 ($generated@@395 $generated@@517 $generated@@518)))
)))
(assert (forall (($generated@@519 T@U) ($generated@@520 T@U) ($generated@@521 T@U) ) (!  (=> (and (and (and (= (type $generated@@519) $generated@@68) (= (type $generated@@520) $generated@@68)) (= (type $generated@@521) $generated@@153)) ($generated@@226 $generated@@521 ($generated@@143 $generated@@519 $generated@@520))) (and (= ($generated@@270 ($generated@@320 $generated@@144 $generated@@521)) $generated@@521) ($generated@@140 ($generated@@320 $generated@@144 $generated@@521) ($generated@@143 $generated@@519 $generated@@520))))
 :pattern ( ($generated@@226 $generated@@521 ($generated@@143 $generated@@519 $generated@@520)))
)))
(assert (forall (($generated@@522 T@U) ) (! (let (($generated@@523 (type $generated@@522)))
 (not ($generated@@0 ($generated@@85 ($generated@@403 $generated@@523) $generated@@522))))
 :pattern ( (let (($generated@@523 (type $generated@@522)))
($generated@@85 ($generated@@403 $generated@@523) $generated@@522)))
)))
(assert (forall (($generated@@525 T@U) ) (! (= (type ($generated@@524 $generated@@525)) $generated@@73)
 :pattern ( ($generated@@524 $generated@@525))
)))
(assert (forall (($generated@@526 T@U) ($generated@@527 T@U) ) (!  (=> (and (= (type $generated@@526) $generated@@68) (= (type $generated@@527) $generated@@68)) (and (= ($generated@@76 ($generated@@143 $generated@@526 $generated@@527)) $generated@@62) (= ($generated@@524 ($generated@@143 $generated@@526 $generated@@527)) $generated@@65)))
 :pattern ( ($generated@@143 $generated@@526 $generated@@527))
)))
(assert (forall (($generated@@528 T@U) ) (!  (=> (= (type $generated@@528) $generated@@144) (= ($generated@@507 ($generated@@270 $generated@@528)) ($generated@@508 $generated@@528)))
 :pattern ( ($generated@@507 ($generated@@270 $generated@@528)))
)))
(assert (forall (($generated@@529 T@U) ) (!  (=> (and (= (type $generated@@529) $generated@@153) ($generated@@226 $generated@@529 ($generated@@79 0))) (and (= ($generated@@270 ($generated@@320 $generated@@2 $generated@@529)) $generated@@529) ($generated@@140 ($generated@@320 ($generated@@80 $generated@@153 $generated@@4) $generated@@529) ($generated@@79 0))))
 :pattern ( ($generated@@226 $generated@@529 ($generated@@79 0)))
)))
(assert (forall (($generated@@530 T@U) ($generated@@531 T@U) ) (!  (=> (and (and (= (type $generated@@530) $generated@@153) (= (type $generated@@531) $generated@@68)) ($generated@@226 $generated@@530 ($generated@@235 $generated@@531))) (and (= ($generated@@270 ($generated@@320 ($generated@@80 $generated@@153 $generated@@4) $generated@@530)) $generated@@530) ($generated@@140 ($generated@@320 ($generated@@80 $generated@@153 $generated@@4) $generated@@530) ($generated@@235 $generated@@531))))
 :pattern ( ($generated@@226 $generated@@530 ($generated@@235 $generated@@531)))
)))
(assert (forall (($generated@@532 T@U) ($generated@@533 T@U) ) (!  (=> (and (and (= (type $generated@@532) $generated@@153) (= (type $generated@@533) $generated@@68)) ($generated@@226 $generated@@532 ($generated@@240 $generated@@533))) (and (= ($generated@@270 ($generated@@320 ($generated@@80 $generated@@153 $generated@@4) $generated@@532)) $generated@@532) ($generated@@140 ($generated@@320 ($generated@@80 $generated@@153 $generated@@4) $generated@@532) ($generated@@240 $generated@@533))))
 :pattern ( ($generated@@226 $generated@@532 ($generated@@240 $generated@@533)))
)))
(assert (forall (($generated@@534 T@U) ($generated@@535 T@U) ) (!  (=> (and (and (= (type $generated@@534) $generated@@153) (= (type $generated@@535) $generated@@68)) ($generated@@226 $generated@@534 ($generated@@158 $generated@@535))) (and (= ($generated@@270 ($generated@@320 ($generated@@80 $generated@@153 $generated@@2) $generated@@534)) $generated@@534) ($generated@@140 ($generated@@320 ($generated@@80 $generated@@153 $generated@@2) $generated@@534) ($generated@@158 $generated@@535))))
 :pattern ( ($generated@@226 $generated@@534 ($generated@@158 $generated@@535)))
)))
(assert (forall (($generated@@536 T@U) ($generated@@537 T@U) ) (!  (=> (and (and (= (type $generated@@536) $generated@@153) (= (type $generated@@537) $generated@@68)) ($generated@@226 $generated@@536 ($generated@@469 $generated@@537))) (and (= ($generated@@270 ($generated@@320 ($generated@@264 $generated@@153) $generated@@536)) $generated@@536) ($generated@@140 ($generated@@320 ($generated@@264 $generated@@153) $generated@@536) ($generated@@469 $generated@@537))))
 :pattern ( ($generated@@226 $generated@@536 ($generated@@469 $generated@@537)))
)))
(assert (= ($generated@@76 $generated@@136) $generated@@63))
(assert (= ($generated@@524 $generated@@136) $generated@@66))
(assert (= ($generated@@76 $generated@@222) $generated@@64))
(assert (= ($generated@@524 $generated@@222) $generated@@67))
(assert (forall (($generated@@538 T@U) ($generated@@539 T@U) ($generated@@540 T@U) ) (!  (=> (and (and (= (type $generated@@538) ($generated@@80 $generated@@153 $generated@@2)) (= (type $generated@@539) $generated@@68)) (= (type $generated@@540) ($generated@@80 $generated@@81 $generated@@82))) (= ($generated@@78 $generated@@538 ($generated@@158 $generated@@539) $generated@@540) (forall (($generated@@541 T@U) ) (!  (=> (and (= (type $generated@@541) $generated@@153) (< 0 ($generated ($generated@@85 $generated@@538 $generated@@541)))) ($generated@@250 $generated@@541 $generated@@539 $generated@@540))
 :pattern ( ($generated@@85 $generated@@538 $generated@@541))
))))
 :pattern ( ($generated@@78 $generated@@538 ($generated@@158 $generated@@539) $generated@@540))
)))
(assert (forall (($generated@@542 T@U) ($generated@@543 T@U) ($generated@@544 T@U) ) (!  (=> (and (and (and (= (type $generated@@542) $generated@@144) (= (type $generated@@543) $generated@@68)) (= (type $generated@@544) ($generated@@80 $generated@@81 $generated@@82))) (and ($generated@@249 $generated@@544) (and ($generated@@142 $generated@@542) (exists (($generated@@545 T@U) ) (!  (and (= (type $generated@@545) $generated@@68) ($generated@@78 $generated@@542 ($generated@@143 $generated@@543 $generated@@545) $generated@@544))
 :pattern ( ($generated@@78 $generated@@542 ($generated@@143 $generated@@543 $generated@@545) $generated@@544))
))))) ($generated@@250 ($generated@@151 $generated@@542) $generated@@543 $generated@@544))
 :pattern ( ($generated@@250 ($generated@@151 $generated@@542) $generated@@543 $generated@@544))
)))
(assert (forall (($generated@@546 T@U) ($generated@@547 T@U) ($generated@@548 T@U) ) (!  (=> (and (and (and (= (type $generated@@546) $generated@@144) (= (type $generated@@547) $generated@@68)) (= (type $generated@@548) ($generated@@80 $generated@@81 $generated@@82))) (and ($generated@@249 $generated@@548) (and ($generated@@142 $generated@@546) (exists (($generated@@549 T@U) ) (!  (and (= (type $generated@@549) $generated@@68) ($generated@@78 $generated@@546 ($generated@@143 $generated@@549 $generated@@547) $generated@@548))
 :pattern ( ($generated@@78 $generated@@546 ($generated@@143 $generated@@549 $generated@@547) $generated@@548))
))))) ($generated@@250 ($generated@@152 $generated@@546) $generated@@547 $generated@@548))
 :pattern ( ($generated@@250 ($generated@@152 $generated@@546) $generated@@547 $generated@@548))
)))
(assert (forall (($generated@@550 T@U) ($generated@@551 T@U) ) (!  (=> (and (= (type $generated@@550) $generated@@153) (= (type $generated@@551) $generated@@153)) (= ($generated@@225 ($generated@@245 $generated@@550) ($generated@@245 $generated@@551)) ($generated@@245 ($generated@@225 $generated@@550 $generated@@551))))
 :pattern ( ($generated@@225 ($generated@@245 $generated@@550) ($generated@@245 $generated@@551)))
)))
(assert (forall (($generated@@552 T@U) ) (! (= ($generated@@270 ($generated@@245 $generated@@552)) ($generated@@245 ($generated@@270 $generated@@552)))
 :pattern ( ($generated@@270 ($generated@@245 $generated@@552)))
)))
(assert (forall (($generated@@553 T@U) ) (! (let (($generated@@554 ($generated@@265 (type $generated@@553))))
 (=> (and (= (type $generated@@553) ($generated@@264 $generated@@554)) (= ($generated@@263 $generated@@553) 0)) (= $generated@@553 ($generated@@262 $generated@@554))))
 :pattern ( ($generated@@263 $generated@@553))
)))
(assert (forall (($generated@@555 T@U) ($generated@@556 T@U) ($generated@@557 T@U) ) (! (let (($generated@@558 (type $generated@@556)))
 (=> (and (and (= (type $generated@@555) ($generated@@80 $generated@@558 $generated@@2)) (= (type $generated@@557) $generated@@2)) (<= 0 ($generated $generated@@557))) (= ($generated@@275 ($generated@@86 $generated@@555 $generated@@556 $generated@@557)) (+ (- ($generated@@275 $generated@@555) ($generated ($generated@@85 $generated@@555 $generated@@556))) ($generated $generated@@557)))))
 :pattern ( ($generated@@275 ($generated@@86 $generated@@555 $generated@@556 $generated@@557)))
)))
(assert (forall (($generated@@559 T@U) ($generated@@560 T@U) ) (!  (=> (and (= (type $generated@@559) ($generated@@80 $generated@@81 $generated@@82)) (= (type $generated@@560) $generated@@2)) ($generated@@78 $generated@@560 $generated@@46 $generated@@559))
 :pattern ( ($generated@@78 $generated@@560 $generated@@46 $generated@@559))
)))
(assert (forall (($generated@@561 T@U) ($generated@@562 T@U) ) (!  (=> (and (= (type $generated@@561) ($generated@@80 $generated@@81 $generated@@82)) (= (type $generated@@562) $generated@@3)) ($generated@@78 $generated@@562 $generated@@47 $generated@@561))
 :pattern ( ($generated@@78 $generated@@562 $generated@@47 $generated@@561))
)))
(assert (forall (($generated@@563 T@U) ($generated@@564 T@U) ) (!  (=> (and (= (type $generated@@563) ($generated@@80 $generated@@81 $generated@@82)) (= (type $generated@@564) $generated@@4)) ($generated@@78 $generated@@564 $generated@@44 $generated@@563))
 :pattern ( ($generated@@78 $generated@@564 $generated@@44 $generated@@563))
)))
(assert (forall (($generated@@565 T@U) ($generated@@566 T@U) ) (!  (=> (and (= (type $generated@@565) ($generated@@80 $generated@@81 $generated@@82)) (= (type $generated@@566) $generated@@427)) ($generated@@78 $generated@@566 $generated@@45 $generated@@565))
 :pattern ( ($generated@@78 $generated@@566 $generated@@45 $generated@@565))
)))
(assert (forall (($generated@@567 T@U) ($generated@@568 T@U) ) (!  (=> (and (= (type $generated@@567) ($generated@@80 $generated@@81 $generated@@82)) (= (type $generated@@568) $generated@@153)) ($generated@@78 $generated@@568 $generated@@48 $generated@@567))
 :pattern ( ($generated@@78 $generated@@568 $generated@@48 $generated@@567))
)))
(assert (forall (($generated@@569 T@U) ($generated@@570 T@U) ) (!  (=> (and (= (type $generated@@569) ($generated@@264 $generated@@153)) (= (type $generated@@570) $generated@@68)) (= ($generated@@140 $generated@@569 ($generated@@469 $generated@@570)) (forall (($generated@@571 Int) ) (!  (=> (and (<= 0 $generated@@571) (< $generated@@571 ($generated@@263 $generated@@569))) ($generated@@226 ($generated@@470 $generated@@569 $generated@@571) $generated@@570))
 :pattern ( ($generated@@470 $generated@@569 $generated@@571))
))))
 :pattern ( ($generated@@140 $generated@@569 ($generated@@469 $generated@@570)))
)))
(assert (forall (($generated@@573 T@U) ($generated@@574 Int) ) (!  (=> (= (type $generated@@573) ($generated@@264 $generated@@153)) (=> (and (<= 0 $generated@@574) (< $generated@@574 ($generated@@263 $generated@@573))) (< ($generated@@508 ($generated@@320 $generated@@144 ($generated@@470 $generated@@573 $generated@@574))) ($generated@@572 $generated@@573))))
 :pattern ( ($generated@@508 ($generated@@320 $generated@@144 ($generated@@470 $generated@@573 $generated@@574))))
)))
(assert (forall (($generated@@575 T@U) ($generated@@576 T@U) ($generated@@577 T@U) ) (!  (=> (and (and (and (= (type $generated@@575) ($generated@@283 $generated@@153 $generated@@153)) (= (type $generated@@576) $generated@@68)) (= (type $generated@@577) $generated@@68)) ($generated@@140 $generated@@575 ($generated@@387 $generated@@576 $generated@@577))) (and (and ($generated@@140 ($generated@@281 $generated@@575) ($generated@@235 $generated@@576)) ($generated@@140 ($generated@@330 $generated@@575) ($generated@@235 $generated@@577))) ($generated@@140 ($generated@@361 $generated@@575) ($generated@@235 ($generated@@143 $generated@@576 $generated@@577)))))
 :pattern ( ($generated@@140 $generated@@575 ($generated@@387 $generated@@576 $generated@@577)))
)))
(assert (forall (($generated@@578 T@U) ($generated@@579 T@U) ($generated@@580 T@U) ) (!  (=> (and (and (and (= (type $generated@@578) ($generated@@301 $generated@@153 $generated@@153)) (= (type $generated@@579) $generated@@68)) (= (type $generated@@580) $generated@@68)) ($generated@@140 $generated@@578 ($generated@@395 $generated@@579 $generated@@580))) (and (and ($generated@@140 ($generated@@299 $generated@@578) ($generated@@240 $generated@@579)) ($generated@@140 ($generated@@341 $generated@@578) ($generated@@240 $generated@@580))) ($generated@@140 ($generated@@369 $generated@@578) ($generated@@240 ($generated@@143 $generated@@579 $generated@@580)))))
 :pattern ( ($generated@@140 $generated@@578 ($generated@@395 $generated@@579 $generated@@580)))
)))
(assert (forall (($generated@@581 T@U) ) (!  (=> (= (type $generated@@581) $generated@@2) ($generated@@140 $generated@@581 $generated@@46))
 :pattern ( ($generated@@140 $generated@@581 $generated@@46))
)))
(assert (forall (($generated@@582 T@U) ) (!  (=> (= (type $generated@@582) $generated@@3) ($generated@@140 $generated@@582 $generated@@47))
 :pattern ( ($generated@@140 $generated@@582 $generated@@47))
)))
(assert (forall (($generated@@583 T@U) ) (!  (=> (= (type $generated@@583) $generated@@4) ($generated@@140 $generated@@583 $generated@@44))
 :pattern ( ($generated@@140 $generated@@583 $generated@@44))
)))
(assert (forall (($generated@@584 T@U) ) (!  (=> (= (type $generated@@584) $generated@@427) ($generated@@140 $generated@@584 $generated@@45))
 :pattern ( ($generated@@140 $generated@@584 $generated@@45))
)))
(assert (forall (($generated@@585 T@U) ) (!  (=> (= (type $generated@@585) $generated@@153) ($generated@@140 $generated@@585 $generated@@48))
 :pattern ( ($generated@@140 $generated@@585 $generated@@48))
)))
(push 1)
(declare-fun ControlFlow (Int Int) Int)
(declare-fun $generated@@586 () T@U)
(declare-fun $generated@@587 () T@U)
(declare-fun $generated@@588 () T@U)
(declare-fun $generated@@589 (T@U) Bool)
(declare-fun $generated@@590 () T@U)
(declare-fun $generated@@591 () Int)
(assert  (and (and (and (= (type $generated@@586) ($generated@@168 $generated@@81 $generated@@4)) (= (type $generated@@587) ($generated@@80 $generated@@81 $generated@@82))) (= (type $generated@@588) $generated@@81)) (= (type $generated@@590) $generated@@81)))
(set-option :timeout 0)
(set-option :rlimit 0)
(assert (not
 (=> (= (ControlFlow 0 0) 3) (let (($generated@@592  (=> (and (= $generated@@586 ($generated@@167 $generated@@137 $generated@@587 $generated@@60 false)) (= (ControlFlow 0 2) (- 0 1))) (not (= $generated@@588 $generated@@137)))))
(let (($generated@@593  (=> (and (and ($generated@@249 $generated@@587) ($generated@@589 $generated@@587)) (and ($generated@@140 $generated@@588 $generated@@222) ($generated@@78 $generated@@588 $generated@@222 $generated@@587))) (=> (and (and (and ($generated@@140 $generated@@590 $generated@@136) ($generated@@78 $generated@@590 $generated@@136 $generated@@587)) true) (and (= 3 $generated@@591) (= (ControlFlow 0 3) 2))) $generated@@592))))
$generated@@593)))
))
(check-sat)
(pop 1)
; Valid
(get-info :rlimit)
(reset)
(set-option :rlimit 0)
; did a full reset
(reset)
(set-option :print-success false)
(set-info :smt-lib-version 2.6)
(set-option :auto_config false)
(set-option :type_check true)
(set-option :smt.case_split 3)
(set-option :smt.qi.eager_threshold 100)
(set-option :smt.delay_units true)
(set-option :smt.arith.solver 2)
(set-option :smt.mbqi false)
(set-option :model.compact false)
(set-option :model.v2 true)
(set-option :pp.bv_literals false)
; done setting options


(set-info :category "industrial")
(declare-sort |T@U| 0)
(declare-sort |T@T| 0)
(declare-fun real_pow (Real Real) Real)
(declare-fun UOrdering2 (|T@U| |T@U|) Bool)
(declare-fun UOrdering3 (|T@T| |T@U| |T@U|) Bool)
(declare-fun tickleBool (Bool) Bool)
(assert (and (tickleBool true) (tickleBool false)))
(declare-fun $generated (T@U) Int)
(declare-fun $generated@@0 (T@U) Bool)
(declare-fun $generated@@1 (T@T) Int)
(declare-fun $generated@@2 () T@T)
(declare-fun $generated@@3 () T@T)
(declare-fun $generated@@4 () T@T)
(declare-fun $generated@@5 () T@T)
(declare-fun $generated@@6 () T@T)
(declare-fun $generated@@7 () T@T)
(declare-fun $generated@@8 (Int) T@U)
(declare-fun type (T@U) T@T)
(declare-fun $generated@@9 (Real) T@U)
(declare-fun $generated@@10 (T@U) Real)
(declare-fun $generated@@11 (Bool) T@U)
(declare-fun $generated@@12 (RoundingMode) T@U)
(declare-fun $generated@@13 (T@U) RoundingMode)
(declare-fun $generated@@14 (String) T@U)
(declare-fun $generated@@15 (T@U) String)
(declare-fun $generated@@16 ((RegEx String)) T@U)
(declare-fun $generated@@17 (T@U) (RegEx String))
(declare-fun $generated@@44 () T@U)
(declare-fun $generated@@45 () T@U)
(declare-fun $generated@@46 () T@U)
(declare-fun $generated@@47 () T@U)
(declare-fun $generated@@48 () T@U)
(declare-fun $generated@@49 () T@U)
(declare-fun $generated@@50 () T@U)
(declare-fun $generated@@51 () T@U)
(declare-fun $generated@@52 () T@U)
(declare-fun $generated@@53 () T@U)
(declare-fun $generated@@54 () T@U)
(declare-fun $generated@@55 () T@U)
(declare-fun $generated@@56 () T@U)
(declare-fun $generated@@57 () T@U)
(declare-fun $generated@@58 () T@U)
(declare-fun $generated@@59 () T@U)
(declare-fun $generated@@60 () T@U)
(declare-fun $generated@@61 () T@U)
(declare-fun $generated@@62 () T@U)
(declare-fun $generated@@63 () T@U)
(declare-fun $generated@@64 () T@U)
(declare-fun $generated@@65 () T@U)
(declare-fun $generated@@66 () T@U)
(declare-fun $generated@@67 () T@U)
(declare-fun $generated@@68 () T@U)
(declare-fun $generated@@69 () T@U)
(declare-fun $generated@@70 () T@T)
(declare-fun $generated@@71 () T@T)
(declare-fun $generated@@72 (T@T) T@T)
(declare-fun $generated@@73 (T@T) T@T)
(declare-fun $generated@@74 () T@T)
(declare-fun $generated@@75 () T@T)
(declare-fun $generated@@78 (T@U) T@U)
(declare-fun $generated@@80 (T@U T@U T@U) Bool)
(declare-fun $generated@@81 (Int) T@U)
(declare-fun $generated@@82 (T@T T@T) T@T)
(declare-fun $generated@@83 () T@T)
(declare-fun $generated@@84 () T@T)
(declare-fun $generated@@85 (T@T) T@T)
(declare-fun $generated@@86 (T@T) T@T)
(declare-fun $generated@@87 (T@U T@U) T@U)
(declare-fun $generated@@88 (T@U T@U T@U) T@U)
(declare-fun $generated@@89 (T@U T@U) T@U)
(declare-fun $generated@@90 (T@U T@U T@U) T@U)
(declare-fun $generated@@138 () T@U)
(declare-fun $generated@@141 (T@U T@U) Bool)
(declare-fun $generated@@143 (T@U) Bool)
(declare-fun $generated@@144 (T@U T@U) T@U)
(declare-fun $generated@@145 () T@T)
(declare-fun $generated@@151 (T@U T@U) Bool)
(declare-fun $generated@@152 (T@U) T@U)
(declare-fun $generated@@153 (T@U) T@U)
(declare-fun $generated@@154 () T@T)
(declare-fun $generated@@159 (T@U) T@U)
(declare-fun $generated@@160 () T@U)
(declare-fun $generated@@162 (T@U) T@U)
(declare-fun $generated@@163 (T@U) Bool)
(declare-fun $generated@@167 (T@U T@U T@U) T@U)
(declare-fun $generated@@168 (T@U T@U T@U Bool) T@U)
(declare-fun $generated@@169 (T@T T@T) T@T)
(declare-fun $generated@@170 (T@T) T@T)
(declare-fun $generated@@171 (T@T) T@T)
(declare-fun $generated@@172 (T@U T@U T@U T@U) T@U)
(declare-fun $generated@@223 (T@U) T@U)
(declare-fun $generated@@224 (T@U) Bool)
(declare-fun $generated@@228 (T@U T@U) T@U)
(declare-fun $generated@@229 (T@U T@U) Bool)
(declare-fun $generated@@239 (T@U T@U) Bool)
(declare-fun $generated@@242 (T@U) Bool)
(declare-fun $generated@@243 (T@U) T@U)
(declare-fun $generated@@244 (T@U) T@U)
(declare-fun $generated@@249 (T@U) T@U)
(declare-fun $generated@@254 (T@U) T@U)
(declare-fun $generated@@259 (Int) Int)
(declare-fun $generated@@261 (T@U) T@U)
(declare-fun $generated@@265 (T@U) Bool)
(declare-fun $generated@@268 (T@U T@U) T@U)
(declare-fun $generated@@274 (T@U T@U T@U) Bool)
(declare-fun $generated@@289 (T@T) T@U)
(declare-fun $generated@@290 (T@U) Int)
(declare-fun $generated@@291 (T@T) T@T)
(declare-fun $generated@@292 (T@T) T@T)
(declare-fun $generated@@299 (T@U) T@U)
(declare-fun $generated@@304 (T@U) Int)
(declare-fun $generated@@305 (T@T) T@U)
(declare-fun $generated@@310 (T@U) T@U)
(declare-fun $generated@@313 (T@U) T@U)
(declare-fun $generated@@314 (T@T T@T) T@U)
(declare-fun $generated@@315 (T@T T@T) T@T)
(declare-fun $generated@@316 (T@T) T@T)
(declare-fun $generated@@317 (T@T) T@T)
(declare-fun $generated@@331 (T@U) T@U)
(declare-fun $generated@@332 (T@T T@T) T@U)
(declare-fun $generated@@333 (T@T T@T) T@T)
(declare-fun $generated@@334 (T@T) T@T)
(declare-fun $generated@@335 (T@T) T@T)
(declare-fun $generated@@352 (T@T T@U) T@U)
(declare-fun $generated@@360 (T@U) T@U)
(declare-fun $generated@@371 (T@U) T@U)
(declare-fun $generated@@381 (T@U) Bool)
(declare-fun $generated@@393 (T@U) T@U)
(declare-fun $generated@@394 (T@U) T@U)
(declare-fun $generated@@401 (T@U) T@U)
(declare-fun $generated@@402 (T@U) T@U)
(declare-fun $generated@@419 (T@U T@U) T@U)
(declare-fun $generated@@427 (T@U T@U) T@U)
(declare-fun $generated@@437 (T@T) T@U)
(declare-fun $generated@@461 () T@T)
(declare-fun $generated@@469 (T@U) T@U)
(declare-fun $generated@@473 (T@U) T@U)
(declare-fun $generated@@479 (T@U) T@U)
(declare-fun $generated@@483 (T@U) T@U)
(declare-fun $generated@@491 (T@U) T@U)
(declare-fun $generated@@495 (T@U) T@U)
(declare-fun $generated@@509 (T@U) T@U)
(declare-fun $generated@@510 (T@U Int) T@U)
(declare-fun $generated@@519 (T@U) Int)
(declare-fun $generated@@521 (T@U) T@U)
(declare-fun $generated@@525 (T@U) T@U)
(declare-fun $generated@@529 (T@U) T@U)
(declare-fun $generated@@533 (T@U) T@U)
(declare-fun $generated@@537 (T@U) T@U)
(declare-fun $generated@@550 (T@U) Int)
(declare-fun $generated@@551 (T@U) Int)
(declare-fun $generated@@632 (T@U) Int)
(assert  (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (= ($generated@@1 $generated@@2) 0) (= ($generated@@1 $generated@@3) 1)) (= ($generated@@1 $generated@@4) 2)) (= ($generated@@1 $generated@@5) 3)) (= ($generated@@1 $generated@@6) 4)) (= ($generated@@1 $generated@@7) 5)) (forall (($generated@@18 Int) ) (! (= ($generated ($generated@@8 $generated@@18)) $generated@@18)
 :pattern ( ($generated@@8 $generated@@18))
))) (forall (($generated@@19 T@U) ) (!  (=> (= (type $generated@@19) $generated@@2) (= ($generated@@8 ($generated $generated@@19)) $generated@@19))
 :pattern ( ($generated $generated@@19))
))) (forall (($generated@@20 Int) ) (! (= (type ($generated@@8 $generated@@20)) $generated@@2)
 :pattern ( ($generated@@8 $generated@@20))
))) (forall (($generated@@21 Real) ) (! (= ($generated@@10 ($generated@@9 $generated@@21)) $generated@@21)
 :pattern ( ($generated@@9 $generated@@21))
))) (forall (($generated@@22 T@U) ) (!  (=> (= (type $generated@@22) $generated@@3) (= ($generated@@9 ($generated@@10 $generated@@22)) $generated@@22))
 :pattern ( ($generated@@10 $generated@@22))
))) (forall (($generated@@23 Real) ) (! (= (type ($generated@@9 $generated@@23)) $generated@@3)
 :pattern ( ($generated@@9 $generated@@23))
))) (forall (($generated@@24 Bool) ) (! (= ($generated@@0 ($generated@@11 $generated@@24)) $generated@@24)
 :pattern ( ($generated@@11 $generated@@24))
))) (forall (($generated@@25 T@U) ) (!  (=> (= (type $generated@@25) $generated@@4) (= ($generated@@11 ($generated@@0 $generated@@25)) $generated@@25))
 :pattern ( ($generated@@0 $generated@@25))
))) (forall (($generated@@26 Bool) ) (! (= (type ($generated@@11 $generated@@26)) $generated@@4)
 :pattern ( ($generated@@11 $generated@@26))
))) (forall (($generated@@27 RoundingMode) ) (! (= ($generated@@13 ($generated@@12 $generated@@27)) $generated@@27)
 :pattern ( ($generated@@12 $generated@@27))
))) (forall (($generated@@28 T@U) ) (!  (=> (= (type $generated@@28) $generated@@5) (= ($generated@@12 ($generated@@13 $generated@@28)) $generated@@28))
 :pattern ( ($generated@@13 $generated@@28))
))) (forall (($generated@@29 RoundingMode) ) (! (= (type ($generated@@12 $generated@@29)) $generated@@5)
 :pattern ( ($generated@@12 $generated@@29))
))) (forall (($generated@@30 String) ) (! (= ($generated@@15 ($generated@@14 $generated@@30)) $generated@@30)
 :pattern ( ($generated@@14 $generated@@30))
))) (forall (($generated@@31 T@U) ) (!  (=> (= (type $generated@@31) $generated@@6) (= ($generated@@14 ($generated@@15 $generated@@31)) $generated@@31))
 :pattern ( ($generated@@15 $generated@@31))
))) (forall (($generated@@32 String) ) (! (= (type ($generated@@14 $generated@@32)) $generated@@6)
 :pattern ( ($generated@@14 $generated@@32))
))) (forall (($generated@@33 (RegEx String)) ) (! (= ($generated@@17 ($generated@@16 $generated@@33)) $generated@@33)
 :pattern ( ($generated@@16 $generated@@33))
))) (forall (($generated@@34 T@U) ) (!  (=> (= (type $generated@@34) $generated@@7) (= ($generated@@16 ($generated@@17 $generated@@34)) $generated@@34))
 :pattern ( ($generated@@17 $generated@@34))
))) (forall (($generated@@35 (RegEx String)) ) (! (= (type ($generated@@16 $generated@@35)) $generated@@7)
 :pattern ( ($generated@@16 $generated@@35))
))))
(assert (forall (($generated@@36 T@U) ) (! (UOrdering2 $generated@@36 $generated@@36)
 :no-pattern ($generated $generated@@36)
 :no-pattern ($generated@@0 $generated@@36)
)))
(assert (forall (($generated@@37 T@U) ($generated@@38 T@U) ($generated@@39 T@U) ) (! (let (($generated@@40 (type $generated@@37)))
 (=> (and (and (= (type $generated@@38) $generated@@40) (= (type $generated@@39) $generated@@40)) (and (UOrdering2 $generated@@37 $generated@@38) (UOrdering2 $generated@@38 $generated@@39))) (UOrdering2 $generated@@37 $generated@@39)))
 :pattern ( (UOrdering2 $generated@@37 $generated@@38) (UOrdering2 $generated@@38 $generated@@39))
)))
(assert (forall (($generated@@41 T@U) ($generated@@42 T@U) ) (! (let (($generated@@43 (type $generated@@41)))
 (=> (= (type $generated@@42) $generated@@43) (=> (and (UOrdering2 $generated@@41 $generated@@42) (UOrdering2 $generated@@42 $generated@@41)) (= $generated@@41 $generated@@42))))
 :pattern ( (UOrdering2 $generated@@41 $generated@@42) (UOrdering2 $generated@@42 $generated@@41))
)))
(assert  (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (= ($generated@@1 $generated@@70) 6) (= (type $generated@@44) $generated@@70)) (= (type $generated@@45) $generated@@70)) (= (type $generated@@46) $generated@@70)) (= (type $generated@@47) $generated@@70)) (= (type $generated@@48) $generated@@70)) (= ($generated@@1 $generated@@71) 7)) (= (type $generated@@49) $generated@@71)) (= (type $generated@@50) $generated@@71)) (= (type $generated@@51) $generated@@71)) (= (type $generated@@52) $generated@@71)) (= (type $generated@@53) $generated@@71)) (= (type $generated@@54) $generated@@71)) (= (type $generated@@55) $generated@@71)) (= (type $generated@@56) $generated@@71)) (= (type $generated@@57) $generated@@71)) (= (type $generated@@58) $generated@@71)) (= (type $generated@@59) $generated@@71)) (forall (($generated@@76 T@T) ) (= ($generated@@1 ($generated@@72 $generated@@76)) 8))) (forall (($generated@@77 T@T) ) (! (= ($generated@@73 ($generated@@72 $generated@@77)) $generated@@77)
 :pattern ( ($generated@@72 $generated@@77))
))) (= (type $generated@@60) ($generated@@72 $generated@@4))) (= (type $generated@@61) $generated@@71)) (= ($generated@@1 $generated@@74) 9)) (= (type $generated@@62) $generated@@74)) (= (type $generated@@63) $generated@@71)) (= (type $generated@@64) $generated@@74)) (= (type $generated@@65) $generated@@71)) (= (type $generated@@66) $generated@@74)) (= ($generated@@1 $generated@@75) 10)) (= (type $generated@@67) $generated@@75)) (= (type $generated@@68) $generated@@75)) (= (type $generated@@69) $generated@@75)))
(assert (distinct $generated@@44 $generated@@45 $generated@@46 $generated@@47 $generated@@48 $generated@@49 $generated@@50 $generated@@51 $generated@@52 $generated@@53 $generated@@54 $generated@@55 $generated@@56 $generated@@57 $generated@@58 $generated@@59 $generated@@60 $generated@@61 $generated@@62 $generated@@63 $generated@@64 $generated@@65 $generated@@66 $generated@@67 $generated@@68 $generated@@69)
)
(assert (forall (($generated@@79 T@U) ) (! (= (type ($generated@@78 $generated@@79)) $generated@@71)
 :pattern ( ($generated@@78 $generated@@79))
)))
(assert (= ($generated@@78 $generated@@44) $generated@@49))
(assert (= ($generated@@78 $generated@@45) $generated@@50))
(assert (= ($generated@@78 $generated@@46) $generated@@51))
(assert (= ($generated@@78 $generated@@47) $generated@@52))
(assert (= ($generated@@78 $generated@@48) $generated@@53))
(assert  (and (and (and (and (and (and (and (and (and (and (and (and (and (forall (($generated@@91 T@T) ($generated@@92 T@T) ) (= ($generated@@1 ($generated@@82 $generated@@91 $generated@@92)) 11)) (forall (($generated@@93 T@T) ($generated@@94 T@T) ) (! (= ($generated@@85 ($generated@@82 $generated@@93 $generated@@94)) $generated@@93)
 :pattern ( ($generated@@82 $generated@@93 $generated@@94))
))) (forall (($generated@@95 T@T) ($generated@@96 T@T) ) (! (= ($generated@@86 ($generated@@82 $generated@@95 $generated@@96)) $generated@@96)
 :pattern ( ($generated@@82 $generated@@95 $generated@@96))
))) (forall (($generated@@97 T@U) ($generated@@98 T@U) ) (! (let (($generated@@99 ($generated@@86 (type $generated@@97))))
(= (type ($generated@@87 $generated@@97 $generated@@98)) $generated@@99))
 :pattern ( ($generated@@87 $generated@@97 $generated@@98))
))) (forall (($generated@@100 T@U) ($generated@@101 T@U) ($generated@@102 T@U) ) (! (let (($generated@@103 (type $generated@@102)))
(let (($generated@@104 (type $generated@@101)))
(= (type ($generated@@88 $generated@@100 $generated@@101 $generated@@102)) ($generated@@82 $generated@@104 $generated@@103))))
 :pattern ( ($generated@@88 $generated@@100 $generated@@101 $generated@@102))
))) (forall (($generated@@105 T@U) ($generated@@106 T@U) ($generated@@107 T@U) ) (! (let (($generated@@108 ($generated@@86 (type $generated@@105))))
 (=> (= (type $generated@@107) $generated@@108) (= ($generated@@87 ($generated@@88 $generated@@105 $generated@@106 $generated@@107) $generated@@106) $generated@@107)))
 :weight 0
))) (and (forall (($generated@@109 T@U) ($generated@@110 T@U) ($generated@@111 T@U) ($generated@@112 T@U) ) (!  (or (= $generated@@111 $generated@@112) (= ($generated@@87 ($generated@@88 $generated@@110 $generated@@111 $generated@@109) $generated@@112) ($generated@@87 $generated@@110 $generated@@112)))
 :weight 0
)) (forall (($generated@@113 T@U) ($generated@@114 T@U) ($generated@@115 T@U) ($generated@@116 T@U) ) (!  (or true (= ($generated@@87 ($generated@@88 $generated@@114 $generated@@115 $generated@@113) $generated@@116) ($generated@@87 $generated@@114 $generated@@116)))
 :weight 0
)))) (= ($generated@@1 $generated@@83) 12)) (forall (($generated@@117 T@U) ($generated@@118 T@U) ) (! (let (($generated@@119 ($generated@@73 (type $generated@@118))))
(= (type ($generated@@89 $generated@@117 $generated@@118)) $generated@@119))
 :pattern ( ($generated@@89 $generated@@117 $generated@@118))
))) (= ($generated@@1 $generated@@84) 13)) (forall (($generated@@120 T@U) ($generated@@121 T@U) ($generated@@122 T@U) ) (! (= (type ($generated@@90 $generated@@120 $generated@@121 $generated@@122)) $generated@@84)
 :pattern ( ($generated@@90 $generated@@120 $generated@@121 $generated@@122))
))) (forall (($generated@@123 T@U) ($generated@@124 T@U) ($generated@@125 T@U) ) (! (let (($generated@@126 ($generated@@73 (type $generated@@124))))
 (=> (= (type $generated@@125) $generated@@126) (= ($generated@@89 ($generated@@90 $generated@@123 $generated@@124 $generated@@125) $generated@@124) $generated@@125)))
 :weight 0
))) (and (forall (($generated@@127 T@U) ($generated@@128 T@U) ($generated@@129 T@U) ($generated@@130 T@U) ) (!  (or (= $generated@@129 $generated@@130) (= ($generated@@89 ($generated@@90 $generated@@128 $generated@@129 $generated@@127) $generated@@130) ($generated@@89 $generated@@128 $generated@@130)))
 :weight 0
)) (forall (($generated@@131 T@U) ($generated@@132 T@U) ($generated@@133 T@U) ($generated@@134 T@U) ) (!  (or true (= ($generated@@89 ($generated@@90 $generated@@132 $generated@@133 $generated@@131) $generated@@134) ($generated@@89 $generated@@132 $generated@@134)))
 :weight 0
)))) (forall (($generated@@135 Int) ) (! (= (type ($generated@@81 $generated@@135)) $generated@@70)
 :pattern ( ($generated@@81 $generated@@135))
))))
(assert (forall (($generated@@136 T@U) ($generated@@137 T@U) ) (!  (=> (and (= (type $generated@@136) $generated@@2) (= (type $generated@@137) ($generated@@82 $generated@@83 $generated@@84))) ($generated@@80 $generated@@136 ($generated@@81 0) $generated@@137))
 :pattern ( ($generated@@80 $generated@@136 ($generated@@81 0) $generated@@137))
)))
(assert (= (type $generated@@138) $generated@@70))
(assert (forall (($generated@@139 T@U) ($generated@@140 T@U) ) (!  (=> (and (= (type $generated@@139) $generated@@2) (= (type $generated@@140) ($generated@@82 $generated@@83 $generated@@84))) ($generated@@80 $generated@@139 $generated@@138 $generated@@140))
 :pattern ( ($generated@@80 $generated@@139 $generated@@138 $generated@@140))
)))
(assert (forall (($generated@@142 T@U) ) (!  (=> (= (type $generated@@142) $generated@@2) ($generated@@141 $generated@@142 ($generated@@81 0)))
 :pattern ( ($generated@@141 $generated@@142 ($generated@@81 0)))
)))
(assert  (and (= ($generated@@1 $generated@@145) 14) (forall (($generated@@146 T@U) ($generated@@147 T@U) ) (! (= (type ($generated@@144 $generated@@146 $generated@@147)) $generated@@70)
 :pattern ( ($generated@@144 $generated@@146 $generated@@147))
))))
(assert (forall (($generated@@148 T@U) ($generated@@149 T@U) ($generated@@150 T@U) ) (!  (=> (and (and (and (= (type $generated@@148) $generated@@70) (= (type $generated@@149) $generated@@70)) (= (type $generated@@150) $generated@@145)) ($generated@@141 $generated@@150 ($generated@@144 $generated@@148 $generated@@149))) ($generated@@143 $generated@@150))
 :pattern ( ($generated@@143 $generated@@150) ($generated@@141 $generated@@150 ($generated@@144 $generated@@148 $generated@@149)))
)))
(assert  (and (and (= ($generated@@1 $generated@@154) 15) (forall (($generated@@155 T@U) ) (! (= (type ($generated@@152 $generated@@155)) $generated@@154)
 :pattern ( ($generated@@152 $generated@@155))
))) (forall (($generated@@156 T@U) ) (! (= (type ($generated@@153 $generated@@156)) $generated@@154)
 :pattern ( ($generated@@153 $generated@@156))
))))
(assert (forall (($generated@@157 T@U) ($generated@@158 T@U) ) (!  (=> (and (and (= (type $generated@@157) $generated@@145) (= (type $generated@@158) $generated@@145)) true) (= ($generated@@151 $generated@@157 $generated@@158)  (and (= ($generated@@152 $generated@@157) ($generated@@152 $generated@@158)) (= ($generated@@153 $generated@@157) ($generated@@153 $generated@@158)))))
 :pattern ( ($generated@@151 $generated@@157 $generated@@158))
)))
(assert  (and (forall (($generated@@161 T@U) ) (! (= (type ($generated@@159 $generated@@161)) $generated@@74)
 :pattern ( ($generated@@159 $generated@@161))
)) (= (type $generated@@160) $generated@@145)))
(assert (= ($generated@@159 $generated@@160) $generated@@64))
(assert (forall (($generated@@164 T@U) ) (! (= (type ($generated@@162 $generated@@164)) $generated@@70)
 :pattern ( ($generated@@162 $generated@@164))
)))
(assert (forall (($generated@@165 T@U) ($generated@@166 T@U) ) (!  (=> (and (and (= (type $generated@@165) ($generated@@82 $generated@@154 $generated@@2)) (= (type $generated@@166) $generated@@70)) ($generated@@141 $generated@@165 ($generated@@162 $generated@@166))) ($generated@@163 $generated@@165))
 :pattern ( ($generated@@141 $generated@@165 ($generated@@162 $generated@@166)))
)))
(assert  (and (and (and (and (and (and (and (forall (($generated@@173 T@T) ($generated@@174 T@T) ) (= ($generated@@1 ($generated@@169 $generated@@173 $generated@@174)) 16)) (forall (($generated@@175 T@T) ($generated@@176 T@T) ) (! (= ($generated@@170 ($generated@@169 $generated@@175 $generated@@176)) $generated@@175)
 :pattern ( ($generated@@169 $generated@@175 $generated@@176))
))) (forall (($generated@@177 T@T) ($generated@@178 T@T) ) (! (= ($generated@@171 ($generated@@169 $generated@@177 $generated@@178)) $generated@@178)
 :pattern ( ($generated@@169 $generated@@177 $generated@@178))
))) (forall (($generated@@179 T@U) ($generated@@180 T@U) ($generated@@181 T@U) ) (! (let (($generated@@182 ($generated@@171 (type $generated@@179))))
(= (type ($generated@@167 $generated@@179 $generated@@180 $generated@@181)) $generated@@182))
 :pattern ( ($generated@@167 $generated@@179 $generated@@180 $generated@@181))
))) (forall (($generated@@183 T@U) ($generated@@184 T@U) ($generated@@185 T@U) ($generated@@186 T@U) ) (! (let (($generated@@187 (type $generated@@186)))
(let (($generated@@188 (type $generated@@184)))
(= (type ($generated@@172 $generated@@183 $generated@@184 $generated@@185 $generated@@186)) ($generated@@169 $generated@@188 $generated@@187))))
 :pattern ( ($generated@@172 $generated@@183 $generated@@184 $generated@@185 $generated@@186))
))) (forall (($generated@@189 T@U) ($generated@@190 T@U) ($generated@@191 T@U) ($generated@@192 T@U) ) (! (let (($generated@@193 ($generated@@171 (type $generated@@189))))
 (=> (= (type $generated@@192) $generated@@193) (= ($generated@@167 ($generated@@172 $generated@@189 $generated@@190 $generated@@191 $generated@@192) $generated@@190 $generated@@191) $generated@@192)))
 :weight 0
))) (and (and (forall (($generated@@194 T@U) ($generated@@195 T@U) ($generated@@196 T@U) ($generated@@197 T@U) ($generated@@198 T@U) ($generated@@199 T@U) ) (!  (or (= $generated@@196 $generated@@198) (= ($generated@@167 ($generated@@172 $generated@@195 $generated@@196 $generated@@197 $generated@@194) $generated@@198 $generated@@199) ($generated@@167 $generated@@195 $generated@@198 $generated@@199)))
 :weight 0
)) (forall (($generated@@200 T@U) ($generated@@201 T@U) ($generated@@202 T@U) ($generated@@203 T@U) ($generated@@204 T@U) ($generated@@205 T@U) ) (!  (or (= $generated@@203 $generated@@205) (= ($generated@@167 ($generated@@172 $generated@@201 $generated@@202 $generated@@203 $generated@@200) $generated@@204 $generated@@205) ($generated@@167 $generated@@201 $generated@@204 $generated@@205)))
 :weight 0
))) (forall (($generated@@206 T@U) ($generated@@207 T@U) ($generated@@208 T@U) ($generated@@209 T@U) ($generated@@210 T@U) ($generated@@211 T@U) ) (!  (or true (= ($generated@@167 ($generated@@172 $generated@@207 $generated@@208 $generated@@209 $generated@@206) $generated@@210 $generated@@211) ($generated@@167 $generated@@207 $generated@@210 $generated@@211)))
 :weight 0
)))) (forall (($generated@@212 T@U) ($generated@@213 T@U) ($generated@@214 T@U) ($generated@@215 Bool) ) (! (= (type ($generated@@168 $generated@@212 $generated@@213 $generated@@214 $generated@@215)) ($generated@@169 $generated@@83 $generated@@4))
 :pattern ( ($generated@@168 $generated@@212 $generated@@213 $generated@@214 $generated@@215))
))))
(assert (forall (($generated@@216 T@U) ($generated@@217 T@U) ($generated@@218 T@U) ($generated@@219 Bool) ($generated@@220 T@U) ($generated@@221 T@U) ) (! (let (($generated@@222 ($generated@@73 (type $generated@@221))))
 (=> (and (and (and (and (= (type $generated@@216) $generated@@83) (= (type $generated@@217) ($generated@@82 $generated@@83 $generated@@84))) (= (type $generated@@218) ($generated@@72 $generated@@4))) (= (type $generated@@220) $generated@@83)) (= (type $generated@@221) ($generated@@72 $generated@@222))) (= ($generated@@0 ($generated@@167 ($generated@@168 $generated@@216 $generated@@217 $generated@@218 $generated@@219) $generated@@220 $generated@@221))  (=> (and (not (= $generated@@220 $generated@@216)) ($generated@@0 ($generated@@89 ($generated@@87 $generated@@217 $generated@@220) $generated@@218))) $generated@@219))))
 :pattern ( ($generated@@167 ($generated@@168 $generated@@216 $generated@@217 $generated@@218 $generated@@219) $generated@@220 $generated@@221))
)))
(assert (forall (($generated@@225 T@U) ) (! (= (type ($generated@@223 $generated@@225)) $generated@@70)
 :pattern ( ($generated@@223 $generated@@225))
)))
(assert (forall (($generated@@226 T@U) ($generated@@227 T@U) ) (!  (=> (and (and (= (type $generated@@226) $generated@@70) (= (type $generated@@227) ($generated@@82 $generated@@83 $generated@@84))) ($generated@@224 $generated@@227)) ($generated@@80 $generated@@160 ($generated@@223 $generated@@226) $generated@@227))
 :pattern ( ($generated@@80 $generated@@160 ($generated@@223 $generated@@226) $generated@@227))
)))
(assert (forall (($generated@@230 T@U) ($generated@@231 T@U) ) (! (= (type ($generated@@228 $generated@@230 $generated@@231)) $generated@@145)
 :pattern ( ($generated@@228 $generated@@230 $generated@@231))
)))
(assert (forall (($generated@@232 T@U) ($generated@@233 T@U) ($generated@@234 T@U) ($generated@@235 T@U) ) (!  (=> (and (and (and (= (type $generated@@232) $generated@@70) (= (type $generated@@233) $generated@@70)) (= (type $generated@@234) $generated@@154)) (= (type $generated@@235) $generated@@154)) (= ($generated@@141 ($generated@@228 $generated@@234 $generated@@235) ($generated@@144 $generated@@232 $generated@@233))  (and ($generated@@229 $generated@@234 $generated@@232) ($generated@@229 $generated@@235 $generated@@233))))
 :pattern ( ($generated@@141 ($generated@@228 $generated@@234 $generated@@235) ($generated@@144 $generated@@232 $generated@@233)))
)))
(assert (forall (($generated@@236 T@U) ) (!  (=> (= (type $generated@@236) $generated@@70) ($generated@@141 $generated@@160 ($generated@@223 $generated@@236)))
 :pattern ( ($generated@@141 $generated@@160 ($generated@@223 $generated@@236)))
)))
(assert (forall (($generated@@237 T@U) ($generated@@238 T@U) ) (!  (=> (and (= (type $generated@@237) $generated@@145) (= (type $generated@@238) $generated@@145)) (= ($generated@@151 $generated@@237 $generated@@238) (= $generated@@237 $generated@@238)))
 :pattern ( ($generated@@151 $generated@@237 $generated@@238))
)))
(assert (forall (($generated@@240 T@U) ($generated@@241 T@U) ) (!  (=> (and (= (type $generated@@240) $generated@@145) (= (type $generated@@241) $generated@@145)) (= ($generated@@239 $generated@@240 $generated@@241) (= $generated@@240 $generated@@241)))
 :pattern ( ($generated@@239 $generated@@240 $generated@@241))
)))
(assert  (and (forall (($generated@@245 T@U) ) (! (= (type ($generated@@243 $generated@@245)) $generated@@154)
 :pattern ( ($generated@@243 $generated@@245))
)) (forall (($generated@@246 T@U) ) (! (= (type ($generated@@244 $generated@@246)) $generated@@145)
 :pattern ( ($generated@@244 $generated@@246))
))))
(assert (forall (($generated@@247 T@U) ($generated@@248 T@U) ) (!  (=> (and (and (= (type $generated@@247) $generated@@145) (= (type $generated@@248) $generated@@145)) (and ($generated@@242 $generated@@247) ($generated@@242 $generated@@248))) (= ($generated@@239 $generated@@247 $generated@@248)  (and (= ($generated@@243 $generated@@247) ($generated@@243 $generated@@248)) ($generated@@239 ($generated@@244 $generated@@247) ($generated@@244 $generated@@248)))))
 :pattern ( ($generated@@239 $generated@@247 $generated@@248) ($generated@@242 $generated@@247))
 :pattern ( ($generated@@239 $generated@@247 $generated@@248) ($generated@@242 $generated@@248))
)))
(assert (forall (($generated@@250 T@U) ) (! (= (type ($generated@@249 $generated@@250)) $generated@@70)
 :pattern ( ($generated@@249 $generated@@250))
)))
(assert (forall (($generated@@251 T@U) ($generated@@252 T@U) ) (!  (=> (and (= (type $generated@@251) ($generated@@82 $generated@@154 $generated@@4)) (= (type $generated@@252) $generated@@70)) (= ($generated@@141 $generated@@251 ($generated@@249 $generated@@252)) (forall (($generated@@253 T@U) ) (!  (=> (and (= (type $generated@@253) $generated@@154) ($generated@@0 ($generated@@87 $generated@@251 $generated@@253))) ($generated@@229 $generated@@253 $generated@@252))
 :pattern ( ($generated@@87 $generated@@251 $generated@@253))
))))
 :pattern ( ($generated@@141 $generated@@251 ($generated@@249 $generated@@252)))
)))
(assert (forall (($generated@@255 T@U) ) (! (= (type ($generated@@254 $generated@@255)) $generated@@70)
 :pattern ( ($generated@@254 $generated@@255))
)))
(assert (forall (($generated@@256 T@U) ($generated@@257 T@U) ) (!  (=> (and (= (type $generated@@256) ($generated@@82 $generated@@154 $generated@@4)) (= (type $generated@@257) $generated@@70)) (= ($generated@@141 $generated@@256 ($generated@@254 $generated@@257)) (forall (($generated@@258 T@U) ) (!  (=> (and (= (type $generated@@258) $generated@@154) ($generated@@0 ($generated@@87 $generated@@256 $generated@@258))) ($generated@@229 $generated@@258 $generated@@257))
 :pattern ( ($generated@@87 $generated@@256 $generated@@258))
))))
 :pattern ( ($generated@@141 $generated@@256 ($generated@@254 $generated@@257)))
)))
(assert (forall (($generated@@260 Int) ) (! (= ($generated@@259 $generated@@260) $generated@@260)
 :pattern ( ($generated@@259 $generated@@260))
)))
(assert (forall (($generated@@262 T@U) ) (! (let (($generated@@263 (type $generated@@262)))
(= (type ($generated@@261 $generated@@262)) $generated@@263))
 :pattern ( ($generated@@261 $generated@@262))
)))
(assert (forall (($generated@@264 T@U) ) (! (= ($generated@@261 $generated@@264) $generated@@264)
 :pattern ( ($generated@@261 $generated@@264))
)))
(assert (forall (($generated@@266 T@U) ($generated@@267 T@U) ) (!  (=> (and (and (= (type $generated@@266) $generated@@145) (= (type $generated@@267) $generated@@145)) (and ($generated@@265 $generated@@266) ($generated@@265 $generated@@267))) (= ($generated@@239 $generated@@266 $generated@@267) true))
 :pattern ( ($generated@@239 $generated@@266 $generated@@267) ($generated@@265 $generated@@266))
 :pattern ( ($generated@@239 $generated@@266 $generated@@267) ($generated@@265 $generated@@267))
)))
(assert (forall (($generated@@269 T@U) ($generated@@270 T@U) ) (! (= (type ($generated@@268 $generated@@269 $generated@@270)) $generated@@145)
 :pattern ( ($generated@@268 $generated@@269 $generated@@270))
)))
(assert (forall (($generated@@271 T@U) ($generated@@272 T@U) ($generated@@273 T@U) ) (!  (=> (and (and (= (type $generated@@271) $generated@@70) (= (type $generated@@272) $generated@@154)) (= (type $generated@@273) $generated@@145)) (= ($generated@@141 ($generated@@268 $generated@@272 $generated@@273) ($generated@@223 $generated@@271))  (and ($generated@@229 $generated@@272 $generated@@271) ($generated@@141 $generated@@273 ($generated@@223 $generated@@271)))))
 :pattern ( ($generated@@141 ($generated@@268 $generated@@272 $generated@@273) ($generated@@223 $generated@@271)))
)))
(assert (forall (($generated@@275 T@U) ($generated@@276 T@U) ($generated@@277 T@U) ($generated@@278 T@U) ($generated@@279 T@U) ) (!  (=> (and (and (and (and (and (= (type $generated@@275) $generated@@70) (= (type $generated@@276) $generated@@70)) (= (type $generated@@277) $generated@@154)) (= (type $generated@@278) $generated@@154)) (= (type $generated@@279) ($generated@@82 $generated@@83 $generated@@84))) ($generated@@224 $generated@@279)) (= ($generated@@80 ($generated@@228 $generated@@277 $generated@@278) ($generated@@144 $generated@@275 $generated@@276) $generated@@279)  (and ($generated@@274 $generated@@277 $generated@@275 $generated@@279) ($generated@@274 $generated@@278 $generated@@276 $generated@@279))))
 :pattern ( ($generated@@80 ($generated@@228 $generated@@277 $generated@@278) ($generated@@144 $generated@@275 $generated@@276) $generated@@279))
)))
(assert (forall (($generated@@280 T@U) ) (!  (=> (= (type $generated@@280) $generated@@145) (= ($generated@@143 $generated@@280) (= ($generated@@159 $generated@@280) $generated@@62)))
 :pattern ( ($generated@@143 $generated@@280))
)))
(assert (forall (($generated@@281 T@U) ) (!  (=> (= (type $generated@@281) $generated@@145) (= ($generated@@265 $generated@@281) (= ($generated@@159 $generated@@281) $generated@@64)))
 :pattern ( ($generated@@265 $generated@@281))
)))
(assert (forall (($generated@@282 T@U) ) (!  (=> (= (type $generated@@282) $generated@@145) (= ($generated@@242 $generated@@282) (= ($generated@@159 $generated@@282) $generated@@66)))
 :pattern ( ($generated@@242 $generated@@282))
)))
(assert (forall (($generated@@283 T@U) ) (!  (=> (and (= (type $generated@@283) $generated@@145) ($generated@@143 $generated@@283)) (exists (($generated@@284 T@U) ($generated@@285 T@U) ) (!  (and (and (= (type $generated@@284) $generated@@154) (= (type $generated@@285) $generated@@154)) (= $generated@@283 ($generated@@228 $generated@@284 $generated@@285)))
 :no-pattern (type $generated@@284)
 :no-pattern (type $generated@@285)
 :no-pattern ($generated $generated@@284)
 :no-pattern ($generated@@0 $generated@@284)
 :no-pattern ($generated $generated@@285)
 :no-pattern ($generated@@0 $generated@@285)
)))
 :pattern ( ($generated@@143 $generated@@283))
)))
(assert (forall (($generated@@286 T@U) ) (!  (=> (and (= (type $generated@@286) $generated@@145) ($generated@@242 $generated@@286)) (exists (($generated@@287 T@U) ($generated@@288 T@U) ) (!  (and (and (= (type $generated@@287) $generated@@154) (= (type $generated@@288) $generated@@145)) (= $generated@@286 ($generated@@268 $generated@@287 $generated@@288)))
 :no-pattern (type $generated@@287)
 :no-pattern (type $generated@@288)
 :no-pattern ($generated $generated@@287)
 :no-pattern ($generated@@0 $generated@@287)
 :no-pattern ($generated $generated@@288)
 :no-pattern ($generated@@0 $generated@@288)
)))
 :pattern ( ($generated@@242 $generated@@286))
)))
(assert  (and (and (forall (($generated@@293 T@T) ) (= ($generated@@1 ($generated@@291 $generated@@293)) 17)) (forall (($generated@@294 T@T) ) (! (= ($generated@@292 ($generated@@291 $generated@@294)) $generated@@294)
 :pattern ( ($generated@@291 $generated@@294))
))) (forall (($generated@@295 T@T) ) (! (= (type ($generated@@289 $generated@@295)) ($generated@@291 $generated@@295))
 :pattern ( ($generated@@289 $generated@@295))
))))
(assert (forall (($generated@@296 T@T) ) (! (= ($generated@@290 ($generated@@289 $generated@@296)) 0)
 :pattern ( ($generated@@289 $generated@@296))
)))
(assert (forall (($generated@@297 T@U) ) (!  (=> (and (= (type $generated@@297) $generated@@145) ($generated@@265 $generated@@297)) (= $generated@@297 $generated@@160))
 :pattern ( ($generated@@265 $generated@@297))
)))
(assert (forall (($generated@@298 T@U) ) (!  (=> (= (type $generated@@298) $generated@@2) (= ($generated@@141 $generated@@298 $generated@@138) (<= ($generated@@259 0) ($generated $generated@@298))))
 :pattern ( ($generated@@141 $generated@@298 $generated@@138))
)))
(assert (forall (($generated@@300 T@U) ) (! (= (type ($generated@@299 $generated@@300)) $generated@@154)
 :pattern ( ($generated@@299 $generated@@300))
)))
(assert (forall (($generated@@301 T@U) ($generated@@302 T@U) ($generated@@303 T@U) ) (!  (=> (and (= (type $generated@@302) $generated@@70) (= (type $generated@@303) ($generated@@82 $generated@@83 $generated@@84))) (= ($generated@@274 ($generated@@299 $generated@@301) $generated@@302 $generated@@303) ($generated@@80 $generated@@301 $generated@@302 $generated@@303)))
 :pattern ( ($generated@@274 ($generated@@299 $generated@@301) $generated@@302 $generated@@303))
)))
(assert (forall (($generated@@306 T@T) ) (! (= (type ($generated@@305 $generated@@306)) ($generated@@82 $generated@@306 $generated@@2))
 :pattern ( ($generated@@305 $generated@@306))
)))
(assert (forall (($generated@@307 T@U) ) (! (let (($generated@@308 ($generated@@85 (type $generated@@307))))
 (=> (= (type $generated@@307) ($generated@@82 $generated@@308 $generated@@2)) (and (= (= ($generated@@304 $generated@@307) 0) (= $generated@@307 ($generated@@305 $generated@@308))) (=> (not (= ($generated@@304 $generated@@307) 0)) (exists (($generated@@309 T@U) ) (!  (and (= (type $generated@@309) $generated@@308) (< 0 ($generated ($generated@@87 $generated@@307 $generated@@309))))
 :no-pattern (type $generated@@309)
 :no-pattern ($generated $generated@@309)
 :no-pattern ($generated@@0 $generated@@309)
))))))
 :pattern ( ($generated@@304 $generated@@307))
)))
(assert (forall (($generated@@311 T@U) ) (! (= (type ($generated@@310 $generated@@311)) $generated@@75)
 :pattern ( ($generated@@310 $generated@@311))
)))
(assert (forall (($generated@@312 T@U) ) (!  (=> (= (type $generated@@312) $generated@@70) (and (= ($generated@@78 ($generated@@223 $generated@@312)) $generated@@65) (= ($generated@@310 ($generated@@223 $generated@@312)) $generated@@69)))
 :pattern ( ($generated@@223 $generated@@312))
)))
(assert  (and (and (and (and (forall (($generated@@318 T@T) ($generated@@319 T@T) ) (= ($generated@@1 ($generated@@315 $generated@@318 $generated@@319)) 18)) (forall (($generated@@320 T@T) ($generated@@321 T@T) ) (! (= ($generated@@316 ($generated@@315 $generated@@320 $generated@@321)) $generated@@320)
 :pattern ( ($generated@@315 $generated@@320 $generated@@321))
))) (forall (($generated@@322 T@T) ($generated@@323 T@T) ) (! (= ($generated@@317 ($generated@@315 $generated@@322 $generated@@323)) $generated@@323)
 :pattern ( ($generated@@315 $generated@@322 $generated@@323))
))) (forall (($generated@@324 T@U) ) (! (let (($generated@@325 ($generated@@316 (type $generated@@324))))
(= (type ($generated@@313 $generated@@324)) ($generated@@82 $generated@@325 $generated@@4)))
 :pattern ( ($generated@@313 $generated@@324))
))) (forall (($generated@@326 T@T) ($generated@@327 T@T) ) (! (= (type ($generated@@314 $generated@@326 $generated@@327)) ($generated@@315 $generated@@326 $generated@@327))
 :pattern ( ($generated@@314 $generated@@326 $generated@@327))
))))
(assert (forall (($generated@@328 T@U) ($generated@@329 T@T) ) (! (let (($generated@@330 (type $generated@@328)))
 (not ($generated@@0 ($generated@@87 ($generated@@313 ($generated@@314 $generated@@330 $generated@@329)) $generated@@328))))
 :pattern ( (let (($generated@@330 (type $generated@@328)))
($generated@@87 ($generated@@313 ($generated@@314 $generated@@330 $generated@@329)) $generated@@328)))
)))
(assert  (and (and (and (and (forall (($generated@@336 T@T) ($generated@@337 T@T) ) (= ($generated@@1 ($generated@@333 $generated@@336 $generated@@337)) 19)) (forall (($generated@@338 T@T) ($generated@@339 T@T) ) (! (= ($generated@@334 ($generated@@333 $generated@@338 $generated@@339)) $generated@@338)
 :pattern ( ($generated@@333 $generated@@338 $generated@@339))
))) (forall (($generated@@340 T@T) ($generated@@341 T@T) ) (! (= ($generated@@335 ($generated@@333 $generated@@340 $generated@@341)) $generated@@341)
 :pattern ( ($generated@@333 $generated@@340 $generated@@341))
))) (forall (($generated@@342 T@U) ) (! (let (($generated@@343 ($generated@@334 (type $generated@@342))))
(= (type ($generated@@331 $generated@@342)) ($generated@@82 $generated@@343 $generated@@4)))
 :pattern ( ($generated@@331 $generated@@342))
))) (forall (($generated@@344 T@T) ($generated@@345 T@T) ) (! (= (type ($generated@@332 $generated@@344 $generated@@345)) ($generated@@333 $generated@@344 $generated@@345))
 :pattern ( ($generated@@332 $generated@@344 $generated@@345))
))))
(assert (forall (($generated@@346 T@U) ($generated@@347 T@T) ) (! (let (($generated@@348 (type $generated@@346)))
 (not ($generated@@0 ($generated@@87 ($generated@@331 ($generated@@332 $generated@@348 $generated@@347)) $generated@@346))))
 :pattern ( (let (($generated@@348 (type $generated@@346)))
($generated@@87 ($generated@@331 ($generated@@332 $generated@@348 $generated@@347)) $generated@@346)))
)))
(assert (forall (($generated@@349 T@U) ) (! (let (($generated@@350 ($generated@@85 (type $generated@@349))))
 (=> (= (type $generated@@349) ($generated@@82 $generated@@350 $generated@@2)) (= ($generated@@163 $generated@@349) (forall (($generated@@351 T@U) ) (!  (=> (= (type $generated@@351) $generated@@350) (and (<= 0 ($generated ($generated@@87 $generated@@349 $generated@@351))) (<= ($generated ($generated@@87 $generated@@349 $generated@@351)) ($generated@@304 $generated@@349))))
 :pattern ( ($generated@@87 $generated@@349 $generated@@351))
)))))
 :pattern ( ($generated@@163 $generated@@349))
)))
(assert (forall (($generated@@353 T@T) ($generated@@354 T@U) ) (! (= (type ($generated@@352 $generated@@353 $generated@@354)) $generated@@353)
 :pattern ( ($generated@@352 $generated@@353 $generated@@354))
)))
(assert (forall (($generated@@355 T@U) ) (!  (=> (and (= (type $generated@@355) $generated@@154) ($generated@@229 $generated@@355 $generated@@138)) (and (= ($generated@@299 ($generated@@352 $generated@@2 $generated@@355)) $generated@@355) ($generated@@141 ($generated@@352 $generated@@2 $generated@@355) $generated@@138)))
 :pattern ( ($generated@@229 $generated@@355 $generated@@138))
)))
(assert (forall (($generated@@356 T@U) ) (! (let (($generated@@357 ($generated@@317 (type $generated@@356))))
(let (($generated@@358 ($generated@@316 (type $generated@@356))))
 (=> (= (type $generated@@356) ($generated@@315 $generated@@358 $generated@@357)) (or (= $generated@@356 ($generated@@314 $generated@@358 $generated@@357)) (exists (($generated@@359 T@U) ) (!  (and (= (type $generated@@359) $generated@@358) ($generated@@0 ($generated@@87 ($generated@@313 $generated@@356) $generated@@359)))
 :no-pattern (type $generated@@359)
 :no-pattern ($generated $generated@@359)
 :no-pattern ($generated@@0 $generated@@359)
))))))
 :pattern ( ($generated@@313 $generated@@356))
)))
(assert (forall (($generated@@361 T@U) ) (! (let (($generated@@362 ($generated@@317 (type $generated@@361))))
(= (type ($generated@@360 $generated@@361)) ($generated@@82 $generated@@362 $generated@@4)))
 :pattern ( ($generated@@360 $generated@@361))
)))
(assert (forall (($generated@@363 T@U) ) (! (let (($generated@@364 ($generated@@317 (type $generated@@363))))
(let (($generated@@365 ($generated@@316 (type $generated@@363))))
 (=> (= (type $generated@@363) ($generated@@315 $generated@@365 $generated@@364)) (or (= $generated@@363 ($generated@@314 $generated@@365 $generated@@364)) (exists (($generated@@366 T@U) ) (!  (and (= (type $generated@@366) $generated@@364) ($generated@@0 ($generated@@87 ($generated@@360 $generated@@363) $generated@@366)))
 :no-pattern (type $generated@@366)
 :no-pattern ($generated $generated@@366)
 :no-pattern ($generated@@0 $generated@@366)
))))))
 :pattern ( ($generated@@360 $generated@@363))
)))
(assert (forall (($generated@@367 T@U) ) (! (let (($generated@@368 ($generated@@335 (type $generated@@367))))
(let (($generated@@369 ($generated@@334 (type $generated@@367))))
 (=> (= (type $generated@@367) ($generated@@333 $generated@@369 $generated@@368)) (or (= $generated@@367 ($generated@@332 $generated@@369 $generated@@368)) (exists (($generated@@370 T@U) ) (!  (and (= (type $generated@@370) $generated@@369) ($generated@@0 ($generated@@87 ($generated@@331 $generated@@367) $generated@@370)))
 :no-pattern (type $generated@@370)
 :no-pattern ($generated $generated@@370)
 :no-pattern ($generated@@0 $generated@@370)
))))))
 :pattern ( ($generated@@331 $generated@@367))
)))
(assert (forall (($generated@@372 T@U) ) (! (let (($generated@@373 ($generated@@335 (type $generated@@372))))
(= (type ($generated@@371 $generated@@372)) ($generated@@82 $generated@@373 $generated@@4)))
 :pattern ( ($generated@@371 $generated@@372))
)))
(assert (forall (($generated@@374 T@U) ) (! (let (($generated@@375 ($generated@@335 (type $generated@@374))))
(let (($generated@@376 ($generated@@334 (type $generated@@374))))
 (=> (= (type $generated@@374) ($generated@@333 $generated@@376 $generated@@375)) (or (= $generated@@374 ($generated@@332 $generated@@376 $generated@@375)) (exists (($generated@@377 T@U) ) (!  (and (= (type $generated@@377) $generated@@375) ($generated@@0 ($generated@@87 ($generated@@371 $generated@@374) $generated@@377)))
 :no-pattern (type $generated@@377)
 :no-pattern ($generated $generated@@377)
 :no-pattern ($generated@@0 $generated@@377)
))))))
 :pattern ( ($generated@@371 $generated@@374))
)))
(assert (forall (($generated@@378 T@U) ($generated@@379 T@U) ) (!  (=> (and (= (type $generated@@378) ($generated@@82 $generated@@154 $generated@@2)) (= (type $generated@@379) $generated@@70)) (= ($generated@@141 $generated@@378 ($generated@@162 $generated@@379)) (forall (($generated@@380 T@U) ) (!  (=> (and (= (type $generated@@380) $generated@@154) (< 0 ($generated ($generated@@87 $generated@@378 $generated@@380)))) ($generated@@229 $generated@@380 $generated@@379))
 :pattern ( ($generated@@87 $generated@@378 $generated@@380))
))))
 :pattern ( ($generated@@141 $generated@@378 ($generated@@162 $generated@@379)))
)))
(assert (forall (($generated@@382 T@U) ) (!  (=> (and (= (type $generated@@382) $generated@@145) ($generated@@381 $generated@@382)) (or ($generated@@265 $generated@@382) ($generated@@242 $generated@@382)))
 :pattern ( ($generated@@381 $generated@@382))
)))
(assert (forall (($generated@@383 T@U) ($generated@@384 T@U) ($generated@@385 T@U) ) (!  (=> (and (and (= (type $generated@@383) ($generated@@82 $generated@@154 $generated@@4)) (= (type $generated@@384) $generated@@70)) (= (type $generated@@385) ($generated@@82 $generated@@83 $generated@@84))) (= ($generated@@80 $generated@@383 ($generated@@249 $generated@@384) $generated@@385) (forall (($generated@@386 T@U) ) (!  (=> (and (= (type $generated@@386) $generated@@154) ($generated@@0 ($generated@@87 $generated@@383 $generated@@386))) ($generated@@274 $generated@@386 $generated@@384 $generated@@385))
 :pattern ( ($generated@@87 $generated@@383 $generated@@386))
))))
 :pattern ( ($generated@@80 $generated@@383 ($generated@@249 $generated@@384) $generated@@385))
)))
(assert (forall (($generated@@387 T@U) ($generated@@388 T@U) ($generated@@389 T@U) ) (!  (=> (and (and (= (type $generated@@387) ($generated@@82 $generated@@154 $generated@@4)) (= (type $generated@@388) $generated@@70)) (= (type $generated@@389) ($generated@@82 $generated@@83 $generated@@84))) (= ($generated@@80 $generated@@387 ($generated@@254 $generated@@388) $generated@@389) (forall (($generated@@390 T@U) ) (!  (=> (and (= (type $generated@@390) $generated@@154) ($generated@@0 ($generated@@87 $generated@@387 $generated@@390))) ($generated@@274 $generated@@390 $generated@@388 $generated@@389))
 :pattern ( ($generated@@87 $generated@@387 $generated@@390))
))))
 :pattern ( ($generated@@80 $generated@@387 ($generated@@254 $generated@@388) $generated@@389))
)))
(assert (forall (($generated@@391 T@U) ) (! (let (($generated@@392 (type $generated@@391)))
(= ($generated ($generated@@87 ($generated@@305 $generated@@392) $generated@@391)) 0))
 :pattern ( (let (($generated@@392 (type $generated@@391)))
($generated@@87 ($generated@@305 $generated@@392) $generated@@391)))
)))
(assert  (and (forall (($generated@@395 T@U) ) (! (= (type ($generated@@393 $generated@@395)) ($generated@@82 $generated@@154 $generated@@4))
 :pattern ( ($generated@@393 $generated@@395))
)) (forall (($generated@@396 T@U) ) (! (let (($generated@@397 ($generated@@317 (type $generated@@396))))
(let (($generated@@398 ($generated@@316 (type $generated@@396))))
(= (type ($generated@@394 $generated@@396)) ($generated@@82 $generated@@398 $generated@@397))))
 :pattern ( ($generated@@394 $generated@@396))
))))
(assert (forall (($generated@@399 T@U) ($generated@@400 T@U) ) (!  (=> (and (= (type $generated@@399) ($generated@@315 $generated@@154 $generated@@154)) (= (type $generated@@400) $generated@@154)) (= ($generated@@0 ($generated@@87 ($generated@@393 $generated@@399) $generated@@400))  (and ($generated@@0 ($generated@@87 ($generated@@313 $generated@@399) ($generated@@152 ($generated@@352 $generated@@145 $generated@@400)))) (= ($generated@@87 ($generated@@394 $generated@@399) ($generated@@152 ($generated@@352 $generated@@145 $generated@@400))) ($generated@@153 ($generated@@352 $generated@@145 $generated@@400))))))
 :pattern ( ($generated@@87 ($generated@@393 $generated@@399) $generated@@400))
)))
(assert  (and (forall (($generated@@403 T@U) ) (! (= (type ($generated@@401 $generated@@403)) ($generated@@82 $generated@@154 $generated@@4))
 :pattern ( ($generated@@401 $generated@@403))
)) (forall (($generated@@404 T@U) ) (! (let (($generated@@405 ($generated@@335 (type $generated@@404))))
(let (($generated@@406 ($generated@@334 (type $generated@@404))))
(= (type ($generated@@402 $generated@@404)) ($generated@@82 $generated@@406 $generated@@405))))
 :pattern ( ($generated@@402 $generated@@404))
))))
(assert (forall (($generated@@407 T@U) ($generated@@408 T@U) ) (!  (=> (and (= (type $generated@@407) ($generated@@333 $generated@@154 $generated@@154)) (= (type $generated@@408) $generated@@154)) (= ($generated@@0 ($generated@@87 ($generated@@401 $generated@@407) $generated@@408))  (and ($generated@@0 ($generated@@87 ($generated@@331 $generated@@407) ($generated@@152 ($generated@@352 $generated@@145 $generated@@408)))) (= ($generated@@87 ($generated@@402 $generated@@407) ($generated@@152 ($generated@@352 $generated@@145 $generated@@408))) ($generated@@153 ($generated@@352 $generated@@145 $generated@@408))))))
 :pattern ( ($generated@@87 ($generated@@401 $generated@@407) $generated@@408))
)))
(assert (forall (($generated@@409 T@U) ($generated@@410 T@U) ) (! (let (($generated@@411 (type $generated@@410)))
(let (($generated@@412 ($generated@@316 (type $generated@@409))))
 (=> (= (type $generated@@409) ($generated@@315 $generated@@412 $generated@@411)) (= ($generated@@0 ($generated@@87 ($generated@@360 $generated@@409) $generated@@410)) (exists (($generated@@413 T@U) ) (!  (and (= (type $generated@@413) $generated@@412) (and ($generated@@0 ($generated@@87 ($generated@@313 $generated@@409) $generated@@413)) (= $generated@@410 ($generated@@87 ($generated@@394 $generated@@409) $generated@@413))))
 :pattern ( ($generated@@87 ($generated@@313 $generated@@409) $generated@@413))
 :pattern ( ($generated@@87 ($generated@@394 $generated@@409) $generated@@413))
))))))
 :pattern ( ($generated@@87 ($generated@@360 $generated@@409) $generated@@410))
)))
(assert (forall (($generated@@414 T@U) ($generated@@415 T@U) ) (! (let (($generated@@416 (type $generated@@415)))
(let (($generated@@417 ($generated@@334 (type $generated@@414))))
 (=> (= (type $generated@@414) ($generated@@333 $generated@@417 $generated@@416)) (= ($generated@@0 ($generated@@87 ($generated@@371 $generated@@414) $generated@@415)) (exists (($generated@@418 T@U) ) (!  (and (= (type $generated@@418) $generated@@417) (and ($generated@@0 ($generated@@87 ($generated@@331 $generated@@414) $generated@@418)) (= $generated@@415 ($generated@@87 ($generated@@402 $generated@@414) $generated@@418))))
 :pattern ( ($generated@@87 ($generated@@331 $generated@@414) $generated@@418))
 :pattern ( ($generated@@87 ($generated@@402 $generated@@414) $generated@@418))
))))))
 :pattern ( ($generated@@87 ($generated@@371 $generated@@414) $generated@@415))
)))
(assert (forall (($generated@@420 T@U) ($generated@@421 T@U) ) (! (= (type ($generated@@419 $generated@@420 $generated@@421)) $generated@@70)
 :pattern ( ($generated@@419 $generated@@420 $generated@@421))
)))
(assert (forall (($generated@@422 T@U) ($generated@@423 T@U) ($generated@@424 T@U) ($generated@@425 T@U) ) (!  (=> (and (and (and (= (type $generated@@422) ($generated@@315 $generated@@154 $generated@@154)) (= (type $generated@@423) $generated@@70)) (= (type $generated@@424) $generated@@70)) (= (type $generated@@425) ($generated@@82 $generated@@83 $generated@@84))) (= ($generated@@80 $generated@@422 ($generated@@419 $generated@@423 $generated@@424) $generated@@425) (forall (($generated@@426 T@U) ) (!  (=> (and (= (type $generated@@426) $generated@@154) ($generated@@0 ($generated@@87 ($generated@@313 $generated@@422) $generated@@426))) (and ($generated@@274 ($generated@@87 ($generated@@394 $generated@@422) $generated@@426) $generated@@424 $generated@@425) ($generated@@274 $generated@@426 $generated@@423 $generated@@425)))
 :pattern ( ($generated@@87 ($generated@@394 $generated@@422) $generated@@426))
 :pattern ( ($generated@@87 ($generated@@313 $generated@@422) $generated@@426))
))))
 :pattern ( ($generated@@80 $generated@@422 ($generated@@419 $generated@@423 $generated@@424) $generated@@425))
)))
(assert (forall (($generated@@428 T@U) ($generated@@429 T@U) ) (! (= (type ($generated@@427 $generated@@428 $generated@@429)) $generated@@70)
 :pattern ( ($generated@@427 $generated@@428 $generated@@429))
)))
(assert (forall (($generated@@430 T@U) ($generated@@431 T@U) ($generated@@432 T@U) ($generated@@433 T@U) ) (!  (=> (and (and (and (= (type $generated@@430) ($generated@@333 $generated@@154 $generated@@154)) (= (type $generated@@431) $generated@@70)) (= (type $generated@@432) $generated@@70)) (= (type $generated@@433) ($generated@@82 $generated@@83 $generated@@84))) (= ($generated@@80 $generated@@430 ($generated@@427 $generated@@431 $generated@@432) $generated@@433) (forall (($generated@@434 T@U) ) (!  (=> (and (= (type $generated@@434) $generated@@154) ($generated@@0 ($generated@@87 ($generated@@331 $generated@@430) $generated@@434))) (and ($generated@@274 ($generated@@87 ($generated@@402 $generated@@430) $generated@@434) $generated@@432 $generated@@433) ($generated@@274 $generated@@434 $generated@@431 $generated@@433)))
 :pattern ( ($generated@@87 ($generated@@402 $generated@@430) $generated@@434))
 :pattern ( ($generated@@87 ($generated@@331 $generated@@430) $generated@@434))
))))
 :pattern ( ($generated@@80 $generated@@430 ($generated@@427 $generated@@431 $generated@@432) $generated@@433))
)))
(assert (forall (($generated@@435 T@U) ($generated@@436 T@U) ) (!  (=> (and (and (= (type $generated@@435) $generated@@70) (= (type $generated@@436) $generated@@145)) ($generated@@141 $generated@@436 ($generated@@223 $generated@@435))) (or ($generated@@265 $generated@@436) ($generated@@242 $generated@@436)))
 :pattern ( ($generated@@242 $generated@@436) ($generated@@141 $generated@@436 ($generated@@223 $generated@@435)))
 :pattern ( ($generated@@265 $generated@@436) ($generated@@141 $generated@@436 ($generated@@223 $generated@@435)))
)))
(assert (forall (($generated@@438 T@T) ) (! (= (type ($generated@@437 $generated@@438)) ($generated@@82 $generated@@438 $generated@@4))
 :pattern ( ($generated@@437 $generated@@438))
)))
(assert (forall (($generated@@439 T@U) ) (! (let (($generated@@440 ($generated@@335 (type $generated@@439))))
(let (($generated@@441 ($generated@@334 (type $generated@@439))))
 (=> (= (type $generated@@439) ($generated@@333 $generated@@441 $generated@@440)) (= (= $generated@@439 ($generated@@332 $generated@@441 $generated@@440)) (= ($generated@@331 $generated@@439) ($generated@@437 $generated@@441))))))
 :pattern ( ($generated@@331 $generated@@439))
)))
(assert (forall (($generated@@442 T@U) ) (! (let (($generated@@443 ($generated@@335 (type $generated@@442))))
(let (($generated@@444 ($generated@@334 (type $generated@@442))))
 (=> (= (type $generated@@442) ($generated@@333 $generated@@444 $generated@@443)) (= (= $generated@@442 ($generated@@332 $generated@@444 $generated@@443)) (= ($generated@@371 $generated@@442) ($generated@@437 $generated@@443))))))
 :pattern ( ($generated@@371 $generated@@442))
)))
(assert (forall (($generated@@445 T@U) ) (! (let (($generated@@446 ($generated@@335 (type $generated@@445))))
(let (($generated@@447 ($generated@@334 (type $generated@@445))))
 (=> (= (type $generated@@445) ($generated@@333 $generated@@447 $generated@@446)) (= (= $generated@@445 ($generated@@332 $generated@@447 $generated@@446)) (= ($generated@@401 $generated@@445) ($generated@@437 $generated@@154))))))
 :pattern ( ($generated@@401 $generated@@445))
)))
(assert (forall (($generated@@448 T@U) ) (! (let (($generated@@449 ($generated@@317 (type $generated@@448))))
(let (($generated@@450 ($generated@@316 (type $generated@@448))))
 (=> (= (type $generated@@448) ($generated@@315 $generated@@450 $generated@@449)) (or (= $generated@@448 ($generated@@314 $generated@@450 $generated@@449)) (exists (($generated@@451 T@U) ($generated@@452 T@U) ) (!  (and (and (= (type $generated@@451) $generated@@154) (= (type $generated@@452) $generated@@154)) ($generated@@0 ($generated@@87 ($generated@@393 $generated@@448) ($generated@@299 ($generated@@228 $generated@@451 $generated@@452)))))
 :no-pattern (type $generated@@451)
 :no-pattern (type $generated@@452)
 :no-pattern ($generated $generated@@451)
 :no-pattern ($generated@@0 $generated@@451)
 :no-pattern ($generated $generated@@452)
 :no-pattern ($generated@@0 $generated@@452)
))))))
 :pattern ( ($generated@@393 $generated@@448))
)))
(assert (forall (($generated@@453 T@U) ) (! (let (($generated@@454 ($generated@@335 (type $generated@@453))))
(let (($generated@@455 ($generated@@334 (type $generated@@453))))
 (=> (= (type $generated@@453) ($generated@@333 $generated@@455 $generated@@454)) (or (= $generated@@453 ($generated@@332 $generated@@455 $generated@@454)) (exists (($generated@@456 T@U) ($generated@@457 T@U) ) (!  (and (and (= (type $generated@@456) $generated@@154) (= (type $generated@@457) $generated@@154)) ($generated@@0 ($generated@@87 ($generated@@401 $generated@@453) ($generated@@299 ($generated@@228 $generated@@456 $generated@@457)))))
 :no-pattern (type $generated@@456)
 :no-pattern (type $generated@@457)
 :no-pattern ($generated $generated@@456)
 :no-pattern ($generated@@0 $generated@@456)
 :no-pattern ($generated $generated@@457)
 :no-pattern ($generated@@0 $generated@@457)
))))))
 :pattern ( ($generated@@401 $generated@@453))
)))
(assert (forall (($generated@@458 T@U) ) (!  (=> (and (= (type $generated@@458) $generated@@154) ($generated@@229 $generated@@458 $generated@@46)) (and (= ($generated@@299 ($generated@@352 $generated@@2 $generated@@458)) $generated@@458) ($generated@@141 ($generated@@352 $generated@@2 $generated@@458) $generated@@46)))
 :pattern ( ($generated@@229 $generated@@458 $generated@@46))
)))
(assert (forall (($generated@@459 T@U) ) (!  (=> (and (= (type $generated@@459) $generated@@154) ($generated@@229 $generated@@459 $generated@@47)) (and (= ($generated@@299 ($generated@@352 $generated@@3 $generated@@459)) $generated@@459) ($generated@@141 ($generated@@352 $generated@@3 $generated@@459) $generated@@47)))
 :pattern ( ($generated@@229 $generated@@459 $generated@@47))
)))
(assert (forall (($generated@@460 T@U) ) (!  (=> (and (= (type $generated@@460) $generated@@154) ($generated@@229 $generated@@460 $generated@@44)) (and (= ($generated@@299 ($generated@@352 $generated@@4 $generated@@460)) $generated@@460) ($generated@@141 ($generated@@352 $generated@@4 $generated@@460) $generated@@44)))
 :pattern ( ($generated@@229 $generated@@460 $generated@@44))
)))
(assert (= ($generated@@1 $generated@@461) 20))
(assert (forall (($generated@@462 T@U) ) (!  (=> (and (= (type $generated@@462) $generated@@154) ($generated@@229 $generated@@462 $generated@@45)) (and (= ($generated@@299 ($generated@@352 $generated@@461 $generated@@462)) $generated@@462) ($generated@@141 ($generated@@352 $generated@@461 $generated@@462) $generated@@45)))
 :pattern ( ($generated@@229 $generated@@462 $generated@@45))
)))
(assert (forall (($generated@@463 T@U) ($generated@@464 T@U) ) (!  (=> (= (type $generated@@464) $generated@@70) (= ($generated@@229 ($generated@@299 $generated@@463) $generated@@464) ($generated@@141 $generated@@463 $generated@@464)))
 :pattern ( ($generated@@229 ($generated@@299 $generated@@463) $generated@@464))
)))
(assert (forall (($generated@@465 T@U) ) (! (let (($generated@@466 ($generated@@85 (type $generated@@465))))
 (=> (= (type $generated@@465) ($generated@@82 $generated@@466 $generated@@2)) (<= 0 ($generated@@304 $generated@@465))))
 :pattern ( ($generated@@304 $generated@@465))
)))
(assert (forall (($generated@@467 T@U) ) (! (let (($generated@@468 ($generated@@292 (type $generated@@467))))
 (=> (= (type $generated@@467) ($generated@@291 $generated@@468)) (<= 0 ($generated@@290 $generated@@467))))
 :pattern ( ($generated@@290 $generated@@467))
)))
(assert (forall (($generated@@470 T@U) ) (! (= (type ($generated@@469 $generated@@470)) $generated@@70)
 :pattern ( ($generated@@469 $generated@@470))
)))
(assert (forall (($generated@@471 T@U) ($generated@@472 T@U) ) (!  (=> (and (= (type $generated@@471) $generated@@70) (= (type $generated@@472) $generated@@70)) (= ($generated@@469 ($generated@@419 $generated@@471 $generated@@472)) $generated@@471))
 :pattern ( ($generated@@419 $generated@@471 $generated@@472))
)))
(assert (forall (($generated@@474 T@U) ) (! (= (type ($generated@@473 $generated@@474)) $generated@@70)
 :pattern ( ($generated@@473 $generated@@474))
)))
(assert (forall (($generated@@475 T@U) ($generated@@476 T@U) ) (!  (=> (and (= (type $generated@@475) $generated@@70) (= (type $generated@@476) $generated@@70)) (= ($generated@@473 ($generated@@419 $generated@@475 $generated@@476)) $generated@@476))
 :pattern ( ($generated@@419 $generated@@475 $generated@@476))
)))
(assert (forall (($generated@@477 T@U) ($generated@@478 T@U) ) (!  (=> (and (= (type $generated@@477) $generated@@70) (= (type $generated@@478) $generated@@70)) (= ($generated@@78 ($generated@@419 $generated@@477 $generated@@478)) $generated@@58))
 :pattern ( ($generated@@419 $generated@@477 $generated@@478))
)))
(assert (forall (($generated@@480 T@U) ) (! (= (type ($generated@@479 $generated@@480)) $generated@@70)
 :pattern ( ($generated@@479 $generated@@480))
)))
(assert (forall (($generated@@481 T@U) ($generated@@482 T@U) ) (!  (=> (and (= (type $generated@@481) $generated@@70) (= (type $generated@@482) $generated@@70)) (= ($generated@@479 ($generated@@427 $generated@@481 $generated@@482)) $generated@@481))
 :pattern ( ($generated@@427 $generated@@481 $generated@@482))
)))
(assert (forall (($generated@@484 T@U) ) (! (= (type ($generated@@483 $generated@@484)) $generated@@70)
 :pattern ( ($generated@@483 $generated@@484))
)))
(assert (forall (($generated@@485 T@U) ($generated@@486 T@U) ) (!  (=> (and (= (type $generated@@485) $generated@@70) (= (type $generated@@486) $generated@@70)) (= ($generated@@483 ($generated@@427 $generated@@485 $generated@@486)) $generated@@486))
 :pattern ( ($generated@@427 $generated@@485 $generated@@486))
)))
(assert (forall (($generated@@487 T@U) ($generated@@488 T@U) ) (!  (=> (and (= (type $generated@@487) $generated@@70) (= (type $generated@@488) $generated@@70)) (= ($generated@@78 ($generated@@427 $generated@@487 $generated@@488)) $generated@@59))
 :pattern ( ($generated@@427 $generated@@487 $generated@@488))
)))
(assert (forall (($generated@@489 T@U) ($generated@@490 T@U) ) (!  (=> (and (= (type $generated@@489) $generated@@154) (= (type $generated@@490) $generated@@154)) (= ($generated@@159 ($generated@@228 $generated@@489 $generated@@490)) $generated@@62))
 :pattern ( ($generated@@228 $generated@@489 $generated@@490))
)))
(assert (forall (($generated@@492 T@U) ) (! (= (type ($generated@@491 $generated@@492)) $generated@@70)
 :pattern ( ($generated@@491 $generated@@492))
)))
(assert (forall (($generated@@493 T@U) ($generated@@494 T@U) ) (!  (=> (and (= (type $generated@@493) $generated@@70) (= (type $generated@@494) $generated@@70)) (= ($generated@@491 ($generated@@144 $generated@@493 $generated@@494)) $generated@@493))
 :pattern ( ($generated@@144 $generated@@493 $generated@@494))
)))
(assert (forall (($generated@@496 T@U) ) (! (= (type ($generated@@495 $generated@@496)) $generated@@70)
 :pattern ( ($generated@@495 $generated@@496))
)))
(assert (forall (($generated@@497 T@U) ($generated@@498 T@U) ) (!  (=> (and (= (type $generated@@497) $generated@@70) (= (type $generated@@498) $generated@@70)) (= ($generated@@495 ($generated@@144 $generated@@497 $generated@@498)) $generated@@498))
 :pattern ( ($generated@@144 $generated@@497 $generated@@498))
)))
(assert (forall (($generated@@499 T@U) ($generated@@500 T@U) ) (!  (=> (and (= (type $generated@@499) $generated@@154) (= (type $generated@@500) $generated@@154)) (= ($generated@@152 ($generated@@228 $generated@@499 $generated@@500)) $generated@@499))
 :pattern ( ($generated@@228 $generated@@499 $generated@@500))
)))
(assert (forall (($generated@@501 T@U) ($generated@@502 T@U) ) (!  (=> (and (= (type $generated@@501) $generated@@154) (= (type $generated@@502) $generated@@154)) (= ($generated@@153 ($generated@@228 $generated@@501 $generated@@502)) $generated@@502))
 :pattern ( ($generated@@228 $generated@@501 $generated@@502))
)))
(assert (forall (($generated@@503 T@U) ($generated@@504 T@U) ) (!  (=> (and (= (type $generated@@503) $generated@@154) (= (type $generated@@504) $generated@@145)) (= ($generated@@159 ($generated@@268 $generated@@503 $generated@@504)) $generated@@66))
 :pattern ( ($generated@@268 $generated@@503 $generated@@504))
)))
(assert (forall (($generated@@505 T@U) ($generated@@506 T@U) ) (!  (=> (and (= (type $generated@@505) $generated@@154) (= (type $generated@@506) $generated@@145)) (= ($generated@@243 ($generated@@268 $generated@@505 $generated@@506)) $generated@@505))
 :pattern ( ($generated@@268 $generated@@505 $generated@@506))
)))
(assert (forall (($generated@@507 T@U) ($generated@@508 T@U) ) (!  (=> (and (= (type $generated@@507) $generated@@154) (= (type $generated@@508) $generated@@145)) (= ($generated@@244 ($generated@@268 $generated@@507 $generated@@508)) $generated@@508))
 :pattern ( ($generated@@268 $generated@@507 $generated@@508))
)))
(assert  (and (forall (($generated@@511 T@U) ) (! (= (type ($generated@@509 $generated@@511)) $generated@@70)
 :pattern ( ($generated@@509 $generated@@511))
)) (forall (($generated@@512 T@U) ($generated@@513 Int) ) (! (let (($generated@@514 ($generated@@292 (type $generated@@512))))
(= (type ($generated@@510 $generated@@512 $generated@@513)) $generated@@514))
 :pattern ( ($generated@@510 $generated@@512 $generated@@513))
))))
(assert (forall (($generated@@515 T@U) ($generated@@516 T@U) ($generated@@517 T@U) ) (!  (=> (and (and (= (type $generated@@515) ($generated@@291 $generated@@154)) (= (type $generated@@516) $generated@@70)) (= (type $generated@@517) ($generated@@82 $generated@@83 $generated@@84))) (= ($generated@@80 $generated@@515 ($generated@@509 $generated@@516) $generated@@517) (forall (($generated@@518 Int) ) (!  (=> (and (<= 0 $generated@@518) (< $generated@@518 ($generated@@290 $generated@@515))) ($generated@@274 ($generated@@510 $generated@@515 $generated@@518) $generated@@516 $generated@@517))
 :pattern ( ($generated@@510 $generated@@515 $generated@@518))
))))
 :pattern ( ($generated@@80 $generated@@515 ($generated@@509 $generated@@516) $generated@@517))
)))
(assert (forall (($generated@@520 Int) ) (! (= ($generated@@519 ($generated@@81 $generated@@520)) $generated@@520)
 :pattern ( ($generated@@81 $generated@@520))
)))
(assert (forall (($generated@@522 T@U) ) (! (= (type ($generated@@521 $generated@@522)) $generated@@70)
 :pattern ( ($generated@@521 $generated@@522))
)))
(assert (forall (($generated@@523 T@U) ) (!  (=> (= (type $generated@@523) $generated@@70) (= ($generated@@521 ($generated@@249 $generated@@523)) $generated@@523))
 :pattern ( ($generated@@249 $generated@@523))
)))
(assert (forall (($generated@@524 T@U) ) (!  (=> (= (type $generated@@524) $generated@@70) (= ($generated@@78 ($generated@@249 $generated@@524)) $generated@@54))
 :pattern ( ($generated@@249 $generated@@524))
)))
(assert (forall (($generated@@526 T@U) ) (! (= (type ($generated@@525 $generated@@526)) $generated@@70)
 :pattern ( ($generated@@525 $generated@@526))
)))
(assert (forall (($generated@@527 T@U) ) (!  (=> (= (type $generated@@527) $generated@@70) (= ($generated@@525 ($generated@@254 $generated@@527)) $generated@@527))
 :pattern ( ($generated@@254 $generated@@527))
)))
(assert (forall (($generated@@528 T@U) ) (!  (=> (= (type $generated@@528) $generated@@70) (= ($generated@@78 ($generated@@254 $generated@@528)) $generated@@55))
 :pattern ( ($generated@@254 $generated@@528))
)))
(assert (forall (($generated@@530 T@U) ) (! (= (type ($generated@@529 $generated@@530)) $generated@@70)
 :pattern ( ($generated@@529 $generated@@530))
)))
(assert (forall (($generated@@531 T@U) ) (!  (=> (= (type $generated@@531) $generated@@70) (= ($generated@@529 ($generated@@162 $generated@@531)) $generated@@531))
 :pattern ( ($generated@@162 $generated@@531))
)))
(assert (forall (($generated@@532 T@U) ) (!  (=> (= (type $generated@@532) $generated@@70) (= ($generated@@78 ($generated@@162 $generated@@532)) $generated@@56))
 :pattern ( ($generated@@162 $generated@@532))
)))
(assert (forall (($generated@@534 T@U) ) (! (= (type ($generated@@533 $generated@@534)) $generated@@70)
 :pattern ( ($generated@@533 $generated@@534))
)))
(assert (forall (($generated@@535 T@U) ) (!  (=> (= (type $generated@@535) $generated@@70) (= ($generated@@533 ($generated@@509 $generated@@535)) $generated@@535))
 :pattern ( ($generated@@509 $generated@@535))
)))
(assert (forall (($generated@@536 T@U) ) (!  (=> (= (type $generated@@536) $generated@@70) (= ($generated@@78 ($generated@@509 $generated@@536)) $generated@@57))
 :pattern ( ($generated@@509 $generated@@536))
)))
(assert (forall (($generated@@538 T@U) ) (! (= (type ($generated@@537 $generated@@538)) $generated@@70)
 :pattern ( ($generated@@537 $generated@@538))
)))
(assert (forall (($generated@@539 T@U) ) (!  (=> (= (type $generated@@539) $generated@@70) (= ($generated@@537 ($generated@@223 $generated@@539)) $generated@@539))
 :pattern ( ($generated@@223 $generated@@539))
)))
(assert (forall (($generated@@540 T@U) ) (! (let (($generated@@541 (type $generated@@540)))
(= ($generated@@352 $generated@@541 ($generated@@299 $generated@@540)) $generated@@540))
 :pattern ( ($generated@@299 $generated@@540))
)))
(assert (forall (($generated@@542 T@U) ($generated@@543 T@U) ($generated@@544 T@U) ) (!  (=> (and (and (= (type $generated@@542) ($generated@@315 $generated@@154 $generated@@154)) (= (type $generated@@543) $generated@@70)) (= (type $generated@@544) $generated@@70)) (= ($generated@@141 $generated@@542 ($generated@@419 $generated@@543 $generated@@544)) (forall (($generated@@545 T@U) ) (!  (=> (and (= (type $generated@@545) $generated@@154) ($generated@@0 ($generated@@87 ($generated@@313 $generated@@542) $generated@@545))) (and ($generated@@229 ($generated@@87 ($generated@@394 $generated@@542) $generated@@545) $generated@@544) ($generated@@229 $generated@@545 $generated@@543)))
 :pattern ( ($generated@@87 ($generated@@394 $generated@@542) $generated@@545))
 :pattern ( ($generated@@87 ($generated@@313 $generated@@542) $generated@@545))
))))
 :pattern ( ($generated@@141 $generated@@542 ($generated@@419 $generated@@543 $generated@@544)))
)))
(assert (forall (($generated@@546 T@U) ($generated@@547 T@U) ($generated@@548 T@U) ) (!  (=> (and (and (= (type $generated@@546) ($generated@@333 $generated@@154 $generated@@154)) (= (type $generated@@547) $generated@@70)) (= (type $generated@@548) $generated@@70)) (= ($generated@@141 $generated@@546 ($generated@@427 $generated@@547 $generated@@548)) (forall (($generated@@549 T@U) ) (!  (=> (and (= (type $generated@@549) $generated@@154) ($generated@@0 ($generated@@87 ($generated@@331 $generated@@546) $generated@@549))) (and ($generated@@229 ($generated@@87 ($generated@@402 $generated@@546) $generated@@549) $generated@@548) ($generated@@229 $generated@@549 $generated@@547)))
 :pattern ( ($generated@@87 ($generated@@402 $generated@@546) $generated@@549))
 :pattern ( ($generated@@87 ($generated@@331 $generated@@546) $generated@@549))
))))
 :pattern ( ($generated@@141 $generated@@546 ($generated@@427 $generated@@547 $generated@@548)))
)))
(assert (forall (($generated@@552 T@U) ($generated@@553 T@U) ) (!  (=> (and (= (type $generated@@552) $generated@@154) (= (type $generated@@553) $generated@@154)) (< ($generated@@550 $generated@@552) ($generated@@551 ($generated@@228 $generated@@552 $generated@@553))))
 :pattern ( ($generated@@228 $generated@@552 $generated@@553))
)))
(assert (forall (($generated@@554 T@U) ($generated@@555 T@U) ) (!  (=> (and (= (type $generated@@554) $generated@@154) (= (type $generated@@555) $generated@@154)) (< ($generated@@550 $generated@@555) ($generated@@551 ($generated@@228 $generated@@554 $generated@@555))))
 :pattern ( ($generated@@228 $generated@@554 $generated@@555))
)))
(assert (forall (($generated@@556 T@U) ($generated@@557 T@U) ) (!  (=> (and (= (type $generated@@556) $generated@@154) (= (type $generated@@557) $generated@@145)) (< ($generated@@550 $generated@@556) ($generated@@551 ($generated@@268 $generated@@556 $generated@@557))))
 :pattern ( ($generated@@268 $generated@@556 $generated@@557))
)))
(assert (forall (($generated@@558 T@U) ($generated@@559 T@U) ) (!  (=> (and (= (type $generated@@558) $generated@@154) (= (type $generated@@559) $generated@@145)) (< ($generated@@551 $generated@@559) ($generated@@551 ($generated@@268 $generated@@558 $generated@@559))))
 :pattern ( ($generated@@268 $generated@@558 $generated@@559))
)))
(assert (forall (($generated@@560 T@U) ($generated@@561 T@U) ($generated@@562 T@U) ) (!  (=> (and (and (and (= (type $generated@@560) $generated@@154) (= (type $generated@@561) $generated@@70)) (= (type $generated@@562) $generated@@70)) ($generated@@229 $generated@@560 ($generated@@419 $generated@@561 $generated@@562))) (and (= ($generated@@299 ($generated@@352 ($generated@@315 $generated@@154 $generated@@154) $generated@@560)) $generated@@560) ($generated@@141 ($generated@@352 ($generated@@315 $generated@@154 $generated@@154) $generated@@560) ($generated@@419 $generated@@561 $generated@@562))))
 :pattern ( ($generated@@229 $generated@@560 ($generated@@419 $generated@@561 $generated@@562)))
)))
(assert (forall (($generated@@563 T@U) ($generated@@564 T@U) ($generated@@565 T@U) ) (!  (=> (and (and (and (= (type $generated@@563) $generated@@154) (= (type $generated@@564) $generated@@70)) (= (type $generated@@565) $generated@@70)) ($generated@@229 $generated@@563 ($generated@@427 $generated@@564 $generated@@565))) (and (= ($generated@@299 ($generated@@352 ($generated@@333 $generated@@154 $generated@@154) $generated@@563)) $generated@@563) ($generated@@141 ($generated@@352 ($generated@@333 $generated@@154 $generated@@154) $generated@@563) ($generated@@427 $generated@@564 $generated@@565))))
 :pattern ( ($generated@@229 $generated@@563 ($generated@@427 $generated@@564 $generated@@565)))
)))
(assert (forall (($generated@@566 T@U) ($generated@@567 T@U) ($generated@@568 T@U) ) (!  (=> (and (and (and (= (type $generated@@566) $generated@@70) (= (type $generated@@567) $generated@@70)) (= (type $generated@@568) $generated@@154)) ($generated@@229 $generated@@568 ($generated@@144 $generated@@566 $generated@@567))) (and (= ($generated@@299 ($generated@@352 $generated@@145 $generated@@568)) $generated@@568) ($generated@@141 ($generated@@352 $generated@@145 $generated@@568) ($generated@@144 $generated@@566 $generated@@567))))
 :pattern ( ($generated@@229 $generated@@568 ($generated@@144 $generated@@566 $generated@@567)))
)))
(assert (forall (($generated@@569 T@U) ($generated@@570 T@U) ($generated@@571 T@U) ) (!  (=> (and (and (and (= (type $generated@@569) $generated@@145) (= (type $generated@@570) $generated@@70)) (= (type $generated@@571) ($generated@@82 $generated@@83 $generated@@84))) (and ($generated@@224 $generated@@571) (and ($generated@@242 $generated@@569) ($generated@@80 $generated@@569 ($generated@@223 $generated@@570) $generated@@571)))) ($generated@@274 ($generated@@243 $generated@@569) $generated@@570 $generated@@571))
 :pattern ( ($generated@@274 ($generated@@243 $generated@@569) $generated@@570 $generated@@571))
)))
(assert (forall (($generated@@572 T@U) ) (! (let (($generated@@573 (type $generated@@572)))
 (not ($generated@@0 ($generated@@87 ($generated@@437 $generated@@573) $generated@@572))))
 :pattern ( (let (($generated@@573 (type $generated@@572)))
($generated@@87 ($generated@@437 $generated@@573) $generated@@572)))
)))
(assert (forall (($generated@@574 T@U) ($generated@@575 T@U) ) (!  (=> (and (= (type $generated@@574) $generated@@70) (= (type $generated@@575) $generated@@70)) (and (= ($generated@@78 ($generated@@144 $generated@@574 $generated@@575)) $generated@@63) (= ($generated@@310 ($generated@@144 $generated@@574 $generated@@575)) $generated@@68)))
 :pattern ( ($generated@@144 $generated@@574 $generated@@575))
)))
(assert (forall (($generated@@576 T@U) ) (!  (=> (= (type $generated@@576) $generated@@145) (= ($generated@@550 ($generated@@299 $generated@@576)) ($generated@@551 $generated@@576)))
 :pattern ( ($generated@@550 ($generated@@299 $generated@@576)))
)))
(assert (forall (($generated@@577 T@U) ) (!  (=> (and (= (type $generated@@577) $generated@@154) ($generated@@229 $generated@@577 ($generated@@81 0))) (and (= ($generated@@299 ($generated@@352 $generated@@2 $generated@@577)) $generated@@577) ($generated@@141 ($generated@@352 ($generated@@82 $generated@@154 $generated@@4) $generated@@577) ($generated@@81 0))))
 :pattern ( ($generated@@229 $generated@@577 ($generated@@81 0)))
)))
(assert (forall (($generated@@578 T@U) ($generated@@579 T@U) ) (!  (=> (and (and (= (type $generated@@578) $generated@@154) (= (type $generated@@579) $generated@@70)) ($generated@@229 $generated@@578 ($generated@@249 $generated@@579))) (and (= ($generated@@299 ($generated@@352 ($generated@@82 $generated@@154 $generated@@4) $generated@@578)) $generated@@578) ($generated@@141 ($generated@@352 ($generated@@82 $generated@@154 $generated@@4) $generated@@578) ($generated@@249 $generated@@579))))
 :pattern ( ($generated@@229 $generated@@578 ($generated@@249 $generated@@579)))
)))
(assert (forall (($generated@@580 T@U) ($generated@@581 T@U) ) (!  (=> (and (and (= (type $generated@@580) $generated@@154) (= (type $generated@@581) $generated@@70)) ($generated@@229 $generated@@580 ($generated@@254 $generated@@581))) (and (= ($generated@@299 ($generated@@352 ($generated@@82 $generated@@154 $generated@@4) $generated@@580)) $generated@@580) ($generated@@141 ($generated@@352 ($generated@@82 $generated@@154 $generated@@4) $generated@@580) ($generated@@254 $generated@@581))))
 :pattern ( ($generated@@229 $generated@@580 ($generated@@254 $generated@@581)))
)))
(assert (forall (($generated@@582 T@U) ($generated@@583 T@U) ) (!  (=> (and (and (= (type $generated@@582) $generated@@154) (= (type $generated@@583) $generated@@70)) ($generated@@229 $generated@@582 ($generated@@162 $generated@@583))) (and (= ($generated@@299 ($generated@@352 ($generated@@82 $generated@@154 $generated@@2) $generated@@582)) $generated@@582) ($generated@@141 ($generated@@352 ($generated@@82 $generated@@154 $generated@@2) $generated@@582) ($generated@@162 $generated@@583))))
 :pattern ( ($generated@@229 $generated@@582 ($generated@@162 $generated@@583)))
)))
(assert (forall (($generated@@584 T@U) ($generated@@585 T@U) ) (!  (=> (and (and (= (type $generated@@584) $generated@@154) (= (type $generated@@585) $generated@@70)) ($generated@@229 $generated@@584 ($generated@@509 $generated@@585))) (and (= ($generated@@299 ($generated@@352 ($generated@@291 $generated@@154) $generated@@584)) $generated@@584) ($generated@@141 ($generated@@352 ($generated@@291 $generated@@154) $generated@@584) ($generated@@509 $generated@@585))))
 :pattern ( ($generated@@229 $generated@@584 ($generated@@509 $generated@@585)))
)))
(assert (forall (($generated@@586 T@U) ($generated@@587 T@U) ) (!  (=> (and (and (= (type $generated@@586) $generated@@70) (= (type $generated@@587) $generated@@154)) ($generated@@229 $generated@@587 ($generated@@223 $generated@@586))) (and (= ($generated@@299 ($generated@@352 $generated@@145 $generated@@587)) $generated@@587) ($generated@@141 ($generated@@352 $generated@@145 $generated@@587) ($generated@@223 $generated@@586))))
 :pattern ( ($generated@@229 $generated@@587 ($generated@@223 $generated@@586)))
)))
(assert (forall (($generated@@588 T@U) ($generated@@589 T@U) ($generated@@590 T@U) ) (!  (=> (and (and (and (= (type $generated@@588) $generated@@145) (= (type $generated@@589) $generated@@70)) (= (type $generated@@590) ($generated@@82 $generated@@83 $generated@@84))) (and ($generated@@224 $generated@@590) (and ($generated@@242 $generated@@588) ($generated@@80 $generated@@588 ($generated@@223 $generated@@589) $generated@@590)))) ($generated@@80 ($generated@@244 $generated@@588) ($generated@@223 $generated@@589) $generated@@590))
 :pattern ( ($generated@@80 ($generated@@244 $generated@@588) ($generated@@223 $generated@@589) $generated@@590))
)))
(assert (= ($generated@@78 $generated@@138) $generated@@61))
(assert (= ($generated@@310 $generated@@138) $generated@@67))
(assert (forall (($generated@@591 T@U) ($generated@@592 T@U) ($generated@@593 T@U) ) (!  (=> (and (and (= (type $generated@@591) ($generated@@82 $generated@@154 $generated@@2)) (= (type $generated@@592) $generated@@70)) (= (type $generated@@593) ($generated@@82 $generated@@83 $generated@@84))) (= ($generated@@80 $generated@@591 ($generated@@162 $generated@@592) $generated@@593) (forall (($generated@@594 T@U) ) (!  (=> (and (= (type $generated@@594) $generated@@154) (< 0 ($generated ($generated@@87 $generated@@591 $generated@@594)))) ($generated@@274 $generated@@594 $generated@@592 $generated@@593))
 :pattern ( ($generated@@87 $generated@@591 $generated@@594))
))))
 :pattern ( ($generated@@80 $generated@@591 ($generated@@162 $generated@@592) $generated@@593))
)))
(assert (= $generated@@160 ($generated@@261 $generated@@160)))
(assert (forall (($generated@@595 T@U) ($generated@@596 T@U) ($generated@@597 T@U) ) (!  (=> (and (and (and (= (type $generated@@595) $generated@@145) (= (type $generated@@596) $generated@@70)) (= (type $generated@@597) ($generated@@82 $generated@@83 $generated@@84))) (and ($generated@@224 $generated@@597) (and ($generated@@143 $generated@@595) (exists (($generated@@598 T@U) ) (!  (and (= (type $generated@@598) $generated@@70) ($generated@@80 $generated@@595 ($generated@@144 $generated@@596 $generated@@598) $generated@@597))
 :pattern ( ($generated@@80 $generated@@595 ($generated@@144 $generated@@596 $generated@@598) $generated@@597))
))))) ($generated@@274 ($generated@@152 $generated@@595) $generated@@596 $generated@@597))
 :pattern ( ($generated@@274 ($generated@@152 $generated@@595) $generated@@596 $generated@@597))
)))
(assert (forall (($generated@@599 T@U) ($generated@@600 T@U) ($generated@@601 T@U) ) (!  (=> (and (and (and (= (type $generated@@599) $generated@@145) (= (type $generated@@600) $generated@@70)) (= (type $generated@@601) ($generated@@82 $generated@@83 $generated@@84))) (and ($generated@@224 $generated@@601) (and ($generated@@143 $generated@@599) (exists (($generated@@602 T@U) ) (!  (and (= (type $generated@@602) $generated@@70) ($generated@@80 $generated@@599 ($generated@@144 $generated@@602 $generated@@600) $generated@@601))
 :pattern ( ($generated@@80 $generated@@599 ($generated@@144 $generated@@602 $generated@@600) $generated@@601))
))))) ($generated@@274 ($generated@@153 $generated@@599) $generated@@600 $generated@@601))
 :pattern ( ($generated@@274 ($generated@@153 $generated@@599) $generated@@600 $generated@@601))
)))
(assert (forall (($generated@@603 T@U) ($generated@@604 T@U) ) (!  (=> (and (= (type $generated@@603) $generated@@154) (= (type $generated@@604) $generated@@154)) (= ($generated@@228 ($generated@@261 $generated@@603) ($generated@@261 $generated@@604)) ($generated@@261 ($generated@@228 $generated@@603 $generated@@604))))
 :pattern ( ($generated@@228 ($generated@@261 $generated@@603) ($generated@@261 $generated@@604)))
)))
(assert (forall (($generated@@605 T@U) ($generated@@606 T@U) ) (!  (=> (and (= (type $generated@@605) $generated@@154) (= (type $generated@@606) $generated@@145)) (= ($generated@@268 ($generated@@261 $generated@@605) ($generated@@261 $generated@@606)) ($generated@@261 ($generated@@268 $generated@@605 $generated@@606))))
 :pattern ( ($generated@@268 ($generated@@261 $generated@@605) ($generated@@261 $generated@@606)))
)))
(assert (forall (($generated@@607 Int) ) (! (= ($generated@@299 ($generated@@8 ($generated@@259 $generated@@607))) ($generated@@261 ($generated@@299 ($generated@@8 $generated@@607))))
 :pattern ( ($generated@@299 ($generated@@8 ($generated@@259 $generated@@607))))
)))
(assert (forall (($generated@@608 T@U) ) (! (= ($generated@@299 ($generated@@261 $generated@@608)) ($generated@@261 ($generated@@299 $generated@@608)))
 :pattern ( ($generated@@299 ($generated@@261 $generated@@608)))
)))
(assert (forall (($generated@@609 T@U) ) (! (let (($generated@@610 ($generated@@292 (type $generated@@609))))
 (=> (and (= (type $generated@@609) ($generated@@291 $generated@@610)) (= ($generated@@290 $generated@@609) 0)) (= $generated@@609 ($generated@@289 $generated@@610))))
 :pattern ( ($generated@@290 $generated@@609))
)))
(assert (forall (($generated@@611 T@U) ($generated@@612 T@U) ($generated@@613 T@U) ) (! (let (($generated@@614 (type $generated@@612)))
 (=> (and (and (= (type $generated@@611) ($generated@@82 $generated@@614 $generated@@2)) (= (type $generated@@613) $generated@@2)) (<= 0 ($generated $generated@@613))) (= ($generated@@304 ($generated@@88 $generated@@611 $generated@@612 $generated@@613)) (+ (- ($generated@@304 $generated@@611) ($generated ($generated@@87 $generated@@611 $generated@@612))) ($generated $generated@@613)))))
 :pattern ( ($generated@@304 ($generated@@88 $generated@@611 $generated@@612 $generated@@613)))
)))
(assert (forall (($generated@@615 T@U) ($generated@@616 T@U) ) (!  (=> (and (= (type $generated@@615) ($generated@@82 $generated@@83 $generated@@84)) (= (type $generated@@616) $generated@@2)) ($generated@@80 $generated@@616 $generated@@46 $generated@@615))
 :pattern ( ($generated@@80 $generated@@616 $generated@@46 $generated@@615))
)))
(assert (forall (($generated@@617 T@U) ($generated@@618 T@U) ) (!  (=> (and (= (type $generated@@617) ($generated@@82 $generated@@83 $generated@@84)) (= (type $generated@@618) $generated@@3)) ($generated@@80 $generated@@618 $generated@@47 $generated@@617))
 :pattern ( ($generated@@80 $generated@@618 $generated@@47 $generated@@617))
)))
(assert (forall (($generated@@619 T@U) ($generated@@620 T@U) ) (!  (=> (and (= (type $generated@@619) ($generated@@82 $generated@@83 $generated@@84)) (= (type $generated@@620) $generated@@4)) ($generated@@80 $generated@@620 $generated@@44 $generated@@619))
 :pattern ( ($generated@@80 $generated@@620 $generated@@44 $generated@@619))
)))
(assert (forall (($generated@@621 T@U) ($generated@@622 T@U) ) (!  (=> (and (= (type $generated@@621) ($generated@@82 $generated@@83 $generated@@84)) (= (type $generated@@622) $generated@@461)) ($generated@@80 $generated@@622 $generated@@45 $generated@@621))
 :pattern ( ($generated@@80 $generated@@622 $generated@@45 $generated@@621))
)))
(assert (forall (($generated@@623 T@U) ($generated@@624 T@U) ) (!  (=> (and (= (type $generated@@623) ($generated@@82 $generated@@83 $generated@@84)) (= (type $generated@@624) $generated@@154)) ($generated@@80 $generated@@624 $generated@@48 $generated@@623))
 :pattern ( ($generated@@80 $generated@@624 $generated@@48 $generated@@623))
)))
(assert (forall (($generated@@625 T@U) ($generated@@626 T@U) ($generated@@627 T@U) ($generated@@628 T@U) ) (!  (=> (and (and (and (and (= (type $generated@@625) $generated@@70) (= (type $generated@@626) $generated@@154)) (= (type $generated@@627) $generated@@145)) (= (type $generated@@628) ($generated@@82 $generated@@83 $generated@@84))) ($generated@@224 $generated@@628)) (= ($generated@@80 ($generated@@268 $generated@@626 $generated@@627) ($generated@@223 $generated@@625) $generated@@628)  (and ($generated@@274 $generated@@626 $generated@@625 $generated@@628) ($generated@@80 $generated@@627 ($generated@@223 $generated@@625) $generated@@628))))
 :pattern ( ($generated@@80 ($generated@@268 $generated@@626 $generated@@627) ($generated@@223 $generated@@625) $generated@@628))
)))
(assert (forall (($generated@@629 T@U) ($generated@@630 T@U) ) (!  (=> (and (= (type $generated@@629) ($generated@@291 $generated@@154)) (= (type $generated@@630) $generated@@70)) (= ($generated@@141 $generated@@629 ($generated@@509 $generated@@630)) (forall (($generated@@631 Int) ) (!  (=> (and (<= 0 $generated@@631) (< $generated@@631 ($generated@@290 $generated@@629))) ($generated@@229 ($generated@@510 $generated@@629 $generated@@631) $generated@@630))
 :pattern ( ($generated@@510 $generated@@629 $generated@@631))
))))
 :pattern ( ($generated@@141 $generated@@629 ($generated@@509 $generated@@630)))
)))
(assert (forall (($generated@@633 T@U) ($generated@@634 Int) ) (!  (=> (= (type $generated@@633) ($generated@@291 $generated@@154)) (=> (and (<= 0 $generated@@634) (< $generated@@634 ($generated@@290 $generated@@633))) (< ($generated@@551 ($generated@@352 $generated@@145 ($generated@@510 $generated@@633 $generated@@634))) ($generated@@632 $generated@@633))))
 :pattern ( ($generated@@551 ($generated@@352 $generated@@145 ($generated@@510 $generated@@633 $generated@@634))))
)))
(assert (forall (($generated@@635 T@U) ($generated@@636 T@U) ($generated@@637 T@U) ) (!  (=> (and (and (and (= (type $generated@@635) ($generated@@315 $generated@@154 $generated@@154)) (= (type $generated@@636) $generated@@70)) (= (type $generated@@637) $generated@@70)) ($generated@@141 $generated@@635 ($generated@@419 $generated@@636 $generated@@637))) (and (and ($generated@@141 ($generated@@313 $generated@@635) ($generated@@249 $generated@@636)) ($generated@@141 ($generated@@360 $generated@@635) ($generated@@249 $generated@@637))) ($generated@@141 ($generated@@393 $generated@@635) ($generated@@249 ($generated@@144 $generated@@636 $generated@@637)))))
 :pattern ( ($generated@@141 $generated@@635 ($generated@@419 $generated@@636 $generated@@637)))
)))
(assert (forall (($generated@@638 T@U) ($generated@@639 T@U) ($generated@@640 T@U) ) (!  (=> (and (and (and (= (type $generated@@638) ($generated@@333 $generated@@154 $generated@@154)) (= (type $generated@@639) $generated@@70)) (= (type $generated@@640) $generated@@70)) ($generated@@141 $generated@@638 ($generated@@427 $generated@@639 $generated@@640))) (and (and ($generated@@141 ($generated@@331 $generated@@638) ($generated@@254 $generated@@639)) ($generated@@141 ($generated@@371 $generated@@638) ($generated@@254 $generated@@640))) ($generated@@141 ($generated@@401 $generated@@638) ($generated@@254 ($generated@@144 $generated@@639 $generated@@640)))))
 :pattern ( ($generated@@141 $generated@@638 ($generated@@427 $generated@@639 $generated@@640)))
)))
(assert (forall (($generated@@641 T@U) ) (!  (=> (= (type $generated@@641) $generated@@2) ($generated@@141 $generated@@641 $generated@@46))
 :pattern ( ($generated@@141 $generated@@641 $generated@@46))
)))
(assert (forall (($generated@@642 T@U) ) (!  (=> (= (type $generated@@642) $generated@@3) ($generated@@141 $generated@@642 $generated@@47))
 :pattern ( ($generated@@141 $generated@@642 $generated@@47))
)))
(assert (forall (($generated@@643 T@U) ) (!  (=> (= (type $generated@@643) $generated@@4) ($generated@@141 $generated@@643 $generated@@44))
 :pattern ( ($generated@@141 $generated@@643 $generated@@44))
)))
(assert (forall (($generated@@644 T@U) ) (!  (=> (= (type $generated@@644) $generated@@461) ($generated@@141 $generated@@644 $generated@@45))
 :pattern ( ($generated@@141 $generated@@644 $generated@@45))
)))
(assert (forall (($generated@@645 T@U) ) (!  (=> (= (type $generated@@645) $generated@@154) ($generated@@141 $generated@@645 $generated@@48))
 :pattern ( ($generated@@141 $generated@@645 $generated@@48))
)))
(push 1)
(declare-fun ControlFlow (Int Int) Int)
(declare-fun $generated@@646 () T@U)
(declare-fun $generated@@647 () T@U)
(declare-fun $generated@@648 () T@U)
(declare-fun $generated@@649 (T@U) Bool)
(declare-fun $generated@@650 () T@U)
(declare-fun $generated@@651 () T@U)
(declare-fun $generated@@652 () Int)
(assert  (and (and (and (and (= (type $generated@@646) ($generated@@169 $generated@@83 $generated@@4)) (= (type $generated@@647) $generated@@83)) (= (type $generated@@648) ($generated@@82 $generated@@83 $generated@@84))) (= (type $generated@@650) $generated@@145)) (= (type $generated@@651) $generated@@145)))
(set-option :timeout 0)
(set-option :rlimit 0)
(assert (not
 (=> (= (ControlFlow 0 0) 3) (let (($generated@@653  (=> (and (= $generated@@646 ($generated@@168 $generated@@647 $generated@@648 $generated@@60 false)) (= (ControlFlow 0 2) (- 0 1))) ($generated@@141 ($generated@@8 ($generated@@259 (- 0 55))) $generated@@138))))
(let (($generated@@654  (=> (and ($generated@@224 $generated@@648) ($generated@@649 $generated@@648)) (=> (and (and (and ($generated@@141 $generated@@650 ($generated@@223 $generated@@138)) ($generated@@80 $generated@@650 ($generated@@223 $generated@@138) $generated@@648)) ($generated@@381 $generated@@650)) (and (and ($generated@@141 $generated@@651 ($generated@@223 $generated@@138)) ($generated@@80 $generated@@651 ($generated@@223 $generated@@138) $generated@@648)) (and (= 1 $generated@@652) (= (ControlFlow 0 3) 2)))) $generated@@653))))
$generated@@654)))
))
(check-sat)
(get-info :reason-unknown)
(assert (not (= (ControlFlow 0 2) (- 1))))
(check-sat)
(pop 1)
; Invalid
(get-info :rlimit)
(reset)
(set-option :rlimit 0)
; did a full reset
(reset)
(set-option :print-success false)
(set-info :smt-lib-version 2.6)
(set-option :auto_config false)
(set-option :type_check true)
(set-option :smt.case_split 3)
(set-option :smt.qi.eager_threshold 100)
(set-option :smt.delay_units true)
(set-option :smt.arith.solver 2)
(set-option :smt.mbqi false)
(set-option :model.compact false)
(set-option :model.v2 true)
(set-option :pp.bv_literals false)
; done setting options


(set-info :category "industrial")
(declare-sort |T@U| 0)
(declare-sort |T@T| 0)
(declare-fun real_pow (Real Real) Real)
(declare-fun UOrdering2 (|T@U| |T@U|) Bool)
(declare-fun UOrdering3 (|T@T| |T@U| |T@U|) Bool)
(declare-fun tickleBool (Bool) Bool)
(assert (and (tickleBool true) (tickleBool false)))
(declare-fun $generated (T@U) Int)
(declare-fun $generated@@0 (T@U) Bool)
(declare-fun $generated@@1 (T@T) Int)
(declare-fun $generated@@2 () T@T)
(declare-fun $generated@@3 () T@T)
(declare-fun $generated@@4 () T@T)
(declare-fun $generated@@5 () T@T)
(declare-fun $generated@@6 () T@T)
(declare-fun $generated@@7 () T@T)
(declare-fun $generated@@8 (Int) T@U)
(declare-fun type (T@U) T@T)
(declare-fun $generated@@9 (Real) T@U)
(declare-fun $generated@@10 (T@U) Real)
(declare-fun $generated@@11 (Bool) T@U)
(declare-fun $generated@@12 (RoundingMode) T@U)
(declare-fun $generated@@13 (T@U) RoundingMode)
(declare-fun $generated@@14 (String) T@U)
(declare-fun $generated@@15 (T@U) String)
(declare-fun $generated@@16 ((RegEx String)) T@U)
(declare-fun $generated@@17 (T@U) (RegEx String))
(declare-fun $generated@@44 () T@U)
(declare-fun $generated@@45 () T@U)
(declare-fun $generated@@46 () T@U)
(declare-fun $generated@@47 () T@U)
(declare-fun $generated@@48 () T@U)
(declare-fun $generated@@49 () T@U)
(declare-fun $generated@@50 () T@U)
(declare-fun $generated@@51 () T@U)
(declare-fun $generated@@52 () T@U)
(declare-fun $generated@@53 () T@U)
(declare-fun $generated@@54 () T@U)
(declare-fun $generated@@55 () T@U)
(declare-fun $generated@@56 () T@U)
(declare-fun $generated@@57 () T@U)
(declare-fun $generated@@58 () T@U)
(declare-fun $generated@@59 () T@U)
(declare-fun $generated@@60 () T@U)
(declare-fun $generated@@61 () T@U)
(declare-fun $generated@@62 () T@U)
(declare-fun $generated@@63 () T@U)
(declare-fun $generated@@64 () T@U)
(declare-fun $generated@@65 () T@U)
(declare-fun $generated@@66 () T@U)
(declare-fun $generated@@67 () T@T)
(declare-fun $generated@@68 () T@T)
(declare-fun $generated@@69 (T@T) T@T)
(declare-fun $generated@@70 (T@T) T@T)
(declare-fun $generated@@71 () T@T)
(declare-fun $generated@@72 () T@T)
(declare-fun $generated@@75 (T@U) T@U)
(declare-fun $generated@@77 (T@U T@U T@U) Bool)
(declare-fun $generated@@78 (Int) T@U)
(declare-fun $generated@@79 (T@T T@T) T@T)
(declare-fun $generated@@80 () T@T)
(declare-fun $generated@@81 () T@T)
(declare-fun $generated@@82 (T@T) T@T)
(declare-fun $generated@@83 (T@T) T@T)
(declare-fun $generated@@84 (T@U T@U) T@U)
(declare-fun $generated@@85 (T@U T@U T@U) T@U)
(declare-fun $generated@@86 (T@U T@U) T@U)
(declare-fun $generated@@87 (T@U T@U T@U) T@U)
(declare-fun $generated@@135 (T@U T@U) Bool)
(declare-fun $generated@@139 () T@U)
(declare-fun $generated@@140 () T@U)
(declare-fun $generated@@143 (T@U T@U) Bool)
(declare-fun $generated@@145 (T@U) Bool)
(declare-fun $generated@@146 (T@U T@U) T@U)
(declare-fun $generated@@147 () T@T)
(declare-fun $generated@@153 (T@U T@U) Bool)
(declare-fun $generated@@154 (T@U) T@U)
(declare-fun $generated@@155 (T@U) T@U)
(declare-fun $generated@@156 () T@T)
(declare-fun $generated@@161 (T@U) T@U)
(declare-fun $generated@@162 (T@U) Bool)
(declare-fun $generated@@166 (T@U) T@U)
(declare-fun $generated@@169 (T@U T@U T@U) T@U)
(declare-fun $generated@@170 (T@U T@U T@U Bool) T@U)
(declare-fun $generated@@171 (T@T T@T) T@T)
(declare-fun $generated@@172 (T@T) T@T)
(declare-fun $generated@@173 (T@T) T@T)
(declare-fun $generated@@174 (T@U T@U T@U T@U) T@U)
(declare-fun $generated@@225 () T@U)
(declare-fun $generated@@228 (T@U T@U) T@U)
(declare-fun $generated@@229 (T@U T@U) Bool)
(declare-fun $generated@@238 (T@U) T@U)
(declare-fun $generated@@243 (T@U) T@U)
(declare-fun $generated@@248 (T@U) T@U)
(declare-fun $generated@@252 (T@U) Bool)
(declare-fun $generated@@253 (T@U T@U T@U) Bool)
(declare-fun $generated@@259 (T@U) T@U)
(declare-fun $generated@@265 (T@T) T@U)
(declare-fun $generated@@266 (T@U) Int)
(declare-fun $generated@@267 (T@T) T@T)
(declare-fun $generated@@268 (T@T) T@T)
(declare-fun $generated@@273 (T@U) T@U)
(declare-fun $generated@@286 (T@U) Int)
(declare-fun $generated@@287 (T@T) T@U)
(declare-fun $generated@@292 (T@U) T@U)
(declare-fun $generated@@293 (T@T T@T) T@U)
(declare-fun $generated@@294 (T@T T@T) T@T)
(declare-fun $generated@@295 (T@T) T@T)
(declare-fun $generated@@296 (T@T) T@T)
(declare-fun $generated@@310 (T@U) T@U)
(declare-fun $generated@@311 (T@T T@T) T@U)
(declare-fun $generated@@312 (T@T T@T) T@T)
(declare-fun $generated@@313 (T@T) T@T)
(declare-fun $generated@@314 (T@T) T@T)
(declare-fun $generated@@331 (T@T T@U) T@U)
(declare-fun $generated@@341 (T@U) T@U)
(declare-fun $generated@@352 (T@U) T@U)
(declare-fun $generated@@372 (T@U) T@U)
(declare-fun $generated@@373 (T@U) T@U)
(declare-fun $generated@@380 (T@U) T@U)
(declare-fun $generated@@381 (T@U) T@U)
(declare-fun $generated@@398 (T@U T@U) T@U)
(declare-fun $generated@@406 (T@U T@U) T@U)
(declare-fun $generated@@417 (T@T) T@U)
(declare-fun $generated@@441 () T@T)
(declare-fun $generated@@449 (T@U) T@U)
(declare-fun $generated@@453 (T@U) T@U)
(declare-fun $generated@@459 (T@U) T@U)
(declare-fun $generated@@463 (T@U) T@U)
(declare-fun $generated@@471 (T@U) T@U)
(declare-fun $generated@@475 (T@U) T@U)
(declare-fun $generated@@483 (T@U) T@U)
(declare-fun $generated@@484 (T@U Int) T@U)
(declare-fun $generated@@493 (T@U) Int)
(declare-fun $generated@@495 (T@U) T@U)
(declare-fun $generated@@499 (T@U) T@U)
(declare-fun $generated@@503 (T@U) T@U)
(declare-fun $generated@@507 (T@U) T@U)
(declare-fun $generated@@521 (T@U) Int)
(declare-fun $generated@@522 (T@U) Int)
(declare-fun $generated@@536 (T@T) T@U)
(declare-fun $generated@@542 (T@U) T@U)
(declare-fun $generated@@595 (T@U) Int)
(assert  (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (= ($generated@@1 $generated@@2) 0) (= ($generated@@1 $generated@@3) 1)) (= ($generated@@1 $generated@@4) 2)) (= ($generated@@1 $generated@@5) 3)) (= ($generated@@1 $generated@@6) 4)) (= ($generated@@1 $generated@@7) 5)) (forall (($generated@@18 Int) ) (! (= ($generated ($generated@@8 $generated@@18)) $generated@@18)
 :pattern ( ($generated@@8 $generated@@18))
))) (forall (($generated@@19 T@U) ) (!  (=> (= (type $generated@@19) $generated@@2) (= ($generated@@8 ($generated $generated@@19)) $generated@@19))
 :pattern ( ($generated $generated@@19))
))) (forall (($generated@@20 Int) ) (! (= (type ($generated@@8 $generated@@20)) $generated@@2)
 :pattern ( ($generated@@8 $generated@@20))
))) (forall (($generated@@21 Real) ) (! (= ($generated@@10 ($generated@@9 $generated@@21)) $generated@@21)
 :pattern ( ($generated@@9 $generated@@21))
))) (forall (($generated@@22 T@U) ) (!  (=> (= (type $generated@@22) $generated@@3) (= ($generated@@9 ($generated@@10 $generated@@22)) $generated@@22))
 :pattern ( ($generated@@10 $generated@@22))
))) (forall (($generated@@23 Real) ) (! (= (type ($generated@@9 $generated@@23)) $generated@@3)
 :pattern ( ($generated@@9 $generated@@23))
))) (forall (($generated@@24 Bool) ) (! (= ($generated@@0 ($generated@@11 $generated@@24)) $generated@@24)
 :pattern ( ($generated@@11 $generated@@24))
))) (forall (($generated@@25 T@U) ) (!  (=> (= (type $generated@@25) $generated@@4) (= ($generated@@11 ($generated@@0 $generated@@25)) $generated@@25))
 :pattern ( ($generated@@0 $generated@@25))
))) (forall (($generated@@26 Bool) ) (! (= (type ($generated@@11 $generated@@26)) $generated@@4)
 :pattern ( ($generated@@11 $generated@@26))
))) (forall (($generated@@27 RoundingMode) ) (! (= ($generated@@13 ($generated@@12 $generated@@27)) $generated@@27)
 :pattern ( ($generated@@12 $generated@@27))
))) (forall (($generated@@28 T@U) ) (!  (=> (= (type $generated@@28) $generated@@5) (= ($generated@@12 ($generated@@13 $generated@@28)) $generated@@28))
 :pattern ( ($generated@@13 $generated@@28))
))) (forall (($generated@@29 RoundingMode) ) (! (= (type ($generated@@12 $generated@@29)) $generated@@5)
 :pattern ( ($generated@@12 $generated@@29))
))) (forall (($generated@@30 String) ) (! (= ($generated@@15 ($generated@@14 $generated@@30)) $generated@@30)
 :pattern ( ($generated@@14 $generated@@30))
))) (forall (($generated@@31 T@U) ) (!  (=> (= (type $generated@@31) $generated@@6) (= ($generated@@14 ($generated@@15 $generated@@31)) $generated@@31))
 :pattern ( ($generated@@15 $generated@@31))
))) (forall (($generated@@32 String) ) (! (= (type ($generated@@14 $generated@@32)) $generated@@6)
 :pattern ( ($generated@@14 $generated@@32))
))) (forall (($generated@@33 (RegEx String)) ) (! (= ($generated@@17 ($generated@@16 $generated@@33)) $generated@@33)
 :pattern ( ($generated@@16 $generated@@33))
))) (forall (($generated@@34 T@U) ) (!  (=> (= (type $generated@@34) $generated@@7) (= ($generated@@16 ($generated@@17 $generated@@34)) $generated@@34))
 :pattern ( ($generated@@17 $generated@@34))
))) (forall (($generated@@35 (RegEx String)) ) (! (= (type ($generated@@16 $generated@@35)) $generated@@7)
 :pattern ( ($generated@@16 $generated@@35))
))))
(assert (forall (($generated@@36 T@U) ) (! (UOrdering2 $generated@@36 $generated@@36)
 :no-pattern ($generated $generated@@36)
 :no-pattern ($generated@@0 $generated@@36)
)))
(assert (forall (($generated@@37 T@U) ($generated@@38 T@U) ($generated@@39 T@U) ) (! (let (($generated@@40 (type $generated@@37)))
 (=> (and (and (= (type $generated@@38) $generated@@40) (= (type $generated@@39) $generated@@40)) (and (UOrdering2 $generated@@37 $generated@@38) (UOrdering2 $generated@@38 $generated@@39))) (UOrdering2 $generated@@37 $generated@@39)))
 :pattern ( (UOrdering2 $generated@@37 $generated@@38) (UOrdering2 $generated@@38 $generated@@39))
)))
(assert (forall (($generated@@41 T@U) ($generated@@42 T@U) ) (! (let (($generated@@43 (type $generated@@41)))
 (=> (= (type $generated@@42) $generated@@43) (=> (and (UOrdering2 $generated@@41 $generated@@42) (UOrdering2 $generated@@42 $generated@@41)) (= $generated@@41 $generated@@42))))
 :pattern ( (UOrdering2 $generated@@41 $generated@@42) (UOrdering2 $generated@@42 $generated@@41))
)))
(assert  (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (= ($generated@@1 $generated@@67) 6) (= (type $generated@@44) $generated@@67)) (= (type $generated@@45) $generated@@67)) (= (type $generated@@46) $generated@@67)) (= (type $generated@@47) $generated@@67)) (= (type $generated@@48) $generated@@67)) (= ($generated@@1 $generated@@68) 7)) (= (type $generated@@49) $generated@@68)) (= (type $generated@@50) $generated@@68)) (= (type $generated@@51) $generated@@68)) (= (type $generated@@52) $generated@@68)) (= (type $generated@@53) $generated@@68)) (= (type $generated@@54) $generated@@68)) (= (type $generated@@55) $generated@@68)) (= (type $generated@@56) $generated@@68)) (= (type $generated@@57) $generated@@68)) (= (type $generated@@58) $generated@@68)) (= (type $generated@@59) $generated@@68)) (forall (($generated@@73 T@T) ) (= ($generated@@1 ($generated@@69 $generated@@73)) 8))) (forall (($generated@@74 T@T) ) (! (= ($generated@@70 ($generated@@69 $generated@@74)) $generated@@74)
 :pattern ( ($generated@@69 $generated@@74))
))) (= (type $generated@@60) ($generated@@69 $generated@@4))) (= ($generated@@1 $generated@@71) 9)) (= (type $generated@@61) $generated@@71)) (= (type $generated@@62) $generated@@68)) (= (type $generated@@63) $generated@@68)) (= (type $generated@@64) $generated@@68)) (= ($generated@@1 $generated@@72) 10)) (= (type $generated@@65) $generated@@72)) (= (type $generated@@66) $generated@@72)))
(assert (distinct $generated@@44 $generated@@45 $generated@@46 $generated@@47 $generated@@48 $generated@@49 $generated@@50 $generated@@51 $generated@@52 $generated@@53 $generated@@54 $generated@@55 $generated@@56 $generated@@57 $generated@@58 $generated@@59 $generated@@60 $generated@@61 $generated@@62 $generated@@63 $generated@@64 $generated@@65 $generated@@66)
)
(assert (forall (($generated@@76 T@U) ) (! (= (type ($generated@@75 $generated@@76)) $generated@@68)
 :pattern ( ($generated@@75 $generated@@76))
)))
(assert (= ($generated@@75 $generated@@44) $generated@@49))
(assert (= ($generated@@75 $generated@@45) $generated@@50))
(assert (= ($generated@@75 $generated@@46) $generated@@51))
(assert (= ($generated@@75 $generated@@47) $generated@@52))
(assert (= ($generated@@75 $generated@@48) $generated@@53))
(assert  (and (and (and (and (and (and (and (and (and (and (and (and (and (forall (($generated@@88 T@T) ($generated@@89 T@T) ) (= ($generated@@1 ($generated@@79 $generated@@88 $generated@@89)) 11)) (forall (($generated@@90 T@T) ($generated@@91 T@T) ) (! (= ($generated@@82 ($generated@@79 $generated@@90 $generated@@91)) $generated@@90)
 :pattern ( ($generated@@79 $generated@@90 $generated@@91))
))) (forall (($generated@@92 T@T) ($generated@@93 T@T) ) (! (= ($generated@@83 ($generated@@79 $generated@@92 $generated@@93)) $generated@@93)
 :pattern ( ($generated@@79 $generated@@92 $generated@@93))
))) (forall (($generated@@94 T@U) ($generated@@95 T@U) ) (! (let (($generated@@96 ($generated@@83 (type $generated@@94))))
(= (type ($generated@@84 $generated@@94 $generated@@95)) $generated@@96))
 :pattern ( ($generated@@84 $generated@@94 $generated@@95))
))) (forall (($generated@@97 T@U) ($generated@@98 T@U) ($generated@@99 T@U) ) (! (let (($generated@@100 (type $generated@@99)))
(let (($generated@@101 (type $generated@@98)))
(= (type ($generated@@85 $generated@@97 $generated@@98 $generated@@99)) ($generated@@79 $generated@@101 $generated@@100))))
 :pattern ( ($generated@@85 $generated@@97 $generated@@98 $generated@@99))
))) (forall (($generated@@102 T@U) ($generated@@103 T@U) ($generated@@104 T@U) ) (! (let (($generated@@105 ($generated@@83 (type $generated@@102))))
 (=> (= (type $generated@@104) $generated@@105) (= ($generated@@84 ($generated@@85 $generated@@102 $generated@@103 $generated@@104) $generated@@103) $generated@@104)))
 :weight 0
))) (and (forall (($generated@@106 T@U) ($generated@@107 T@U) ($generated@@108 T@U) ($generated@@109 T@U) ) (!  (or (= $generated@@108 $generated@@109) (= ($generated@@84 ($generated@@85 $generated@@107 $generated@@108 $generated@@106) $generated@@109) ($generated@@84 $generated@@107 $generated@@109)))
 :weight 0
)) (forall (($generated@@110 T@U) ($generated@@111 T@U) ($generated@@112 T@U) ($generated@@113 T@U) ) (!  (or true (= ($generated@@84 ($generated@@85 $generated@@111 $generated@@112 $generated@@110) $generated@@113) ($generated@@84 $generated@@111 $generated@@113)))
 :weight 0
)))) (= ($generated@@1 $generated@@80) 12)) (forall (($generated@@114 T@U) ($generated@@115 T@U) ) (! (let (($generated@@116 ($generated@@70 (type $generated@@115))))
(= (type ($generated@@86 $generated@@114 $generated@@115)) $generated@@116))
 :pattern ( ($generated@@86 $generated@@114 $generated@@115))
))) (= ($generated@@1 $generated@@81) 13)) (forall (($generated@@117 T@U) ($generated@@118 T@U) ($generated@@119 T@U) ) (! (= (type ($generated@@87 $generated@@117 $generated@@118 $generated@@119)) $generated@@81)
 :pattern ( ($generated@@87 $generated@@117 $generated@@118 $generated@@119))
))) (forall (($generated@@120 T@U) ($generated@@121 T@U) ($generated@@122 T@U) ) (! (let (($generated@@123 ($generated@@70 (type $generated@@121))))
 (=> (= (type $generated@@122) $generated@@123) (= ($generated@@86 ($generated@@87 $generated@@120 $generated@@121 $generated@@122) $generated@@121) $generated@@122)))
 :weight 0
))) (and (forall (($generated@@124 T@U) ($generated@@125 T@U) ($generated@@126 T@U) ($generated@@127 T@U) ) (!  (or (= $generated@@126 $generated@@127) (= ($generated@@86 ($generated@@87 $generated@@125 $generated@@126 $generated@@124) $generated@@127) ($generated@@86 $generated@@125 $generated@@127)))
 :weight 0
)) (forall (($generated@@128 T@U) ($generated@@129 T@U) ($generated@@130 T@U) ($generated@@131 T@U) ) (!  (or true (= ($generated@@86 ($generated@@87 $generated@@129 $generated@@130 $generated@@128) $generated@@131) ($generated@@86 $generated@@129 $generated@@131)))
 :weight 0
)))) (forall (($generated@@132 Int) ) (! (= (type ($generated@@78 $generated@@132)) $generated@@67)
 :pattern ( ($generated@@78 $generated@@132))
))))
(assert (forall (($generated@@133 T@U) ($generated@@134 T@U) ) (!  (=> (and (= (type $generated@@133) $generated@@2) (= (type $generated@@134) ($generated@@79 $generated@@80 $generated@@81))) ($generated@@77 $generated@@133 ($generated@@78 0) $generated@@134))
 :pattern ( ($generated@@77 $generated@@133 ($generated@@78 0) $generated@@134))
)))
(assert (forall (($generated@@136 T@U) ($generated@@137 T@U) ) (!  (=> (and (and (= (type $generated@@136) ($generated@@79 $generated@@80 $generated@@81)) (= (type $generated@@137) ($generated@@79 $generated@@80 $generated@@81))) ($generated@@135 $generated@@136 $generated@@137)) (forall (($generated@@138 T@U) ) (!  (=> (and (= (type $generated@@138) $generated@@80) ($generated@@0 ($generated@@86 ($generated@@84 $generated@@136 $generated@@138) $generated@@60))) ($generated@@0 ($generated@@86 ($generated@@84 $generated@@137 $generated@@138) $generated@@60)))
 :pattern ( ($generated@@86 ($generated@@84 $generated@@137 $generated@@138) $generated@@60))
)))
 :pattern ( ($generated@@135 $generated@@136 $generated@@137))
)))
(assert  (and (= (type $generated@@139) $generated@@67) (= (type $generated@@140) $generated@@80)))
(assert (forall (($generated@@141 T@U) ($generated@@142 T@U) ) (!  (=> (and (= (type $generated@@141) $generated@@80) (= (type $generated@@142) ($generated@@79 $generated@@80 $generated@@81))) (= ($generated@@77 $generated@@141 $generated@@139 $generated@@142)  (or (= $generated@@141 $generated@@140) ($generated@@0 ($generated@@86 ($generated@@84 $generated@@142 $generated@@141) $generated@@60)))))
 :pattern ( ($generated@@77 $generated@@141 $generated@@139 $generated@@142))
)))
(assert (forall (($generated@@144 T@U) ) (!  (=> (= (type $generated@@144) $generated@@2) ($generated@@143 $generated@@144 ($generated@@78 0)))
 :pattern ( ($generated@@143 $generated@@144 ($generated@@78 0)))
)))
(assert  (and (= ($generated@@1 $generated@@147) 14) (forall (($generated@@148 T@U) ($generated@@149 T@U) ) (! (= (type ($generated@@146 $generated@@148 $generated@@149)) $generated@@67)
 :pattern ( ($generated@@146 $generated@@148 $generated@@149))
))))
(assert (forall (($generated@@150 T@U) ($generated@@151 T@U) ($generated@@152 T@U) ) (!  (=> (and (and (and (= (type $generated@@150) $generated@@67) (= (type $generated@@151) $generated@@67)) (= (type $generated@@152) $generated@@147)) ($generated@@143 $generated@@152 ($generated@@146 $generated@@150 $generated@@151))) ($generated@@145 $generated@@152))
 :pattern ( ($generated@@145 $generated@@152) ($generated@@143 $generated@@152 ($generated@@146 $generated@@150 $generated@@151)))
)))
(assert  (and (and (= ($generated@@1 $generated@@156) 15) (forall (($generated@@157 T@U) ) (! (= (type ($generated@@154 $generated@@157)) $generated@@156)
 :pattern ( ($generated@@154 $generated@@157))
))) (forall (($generated@@158 T@U) ) (! (= (type ($generated@@155 $generated@@158)) $generated@@156)
 :pattern ( ($generated@@155 $generated@@158))
))))
(assert (forall (($generated@@159 T@U) ($generated@@160 T@U) ) (!  (=> (and (and (= (type $generated@@159) $generated@@147) (= (type $generated@@160) $generated@@147)) true) (= ($generated@@153 $generated@@159 $generated@@160)  (and (= ($generated@@154 $generated@@159) ($generated@@154 $generated@@160)) (= ($generated@@155 $generated@@159) ($generated@@155 $generated@@160)))))
 :pattern ( ($generated@@153 $generated@@159 $generated@@160))
)))
(assert (forall (($generated@@163 T@U) ) (! (= (type ($generated@@161 $generated@@163)) $generated@@67)
 :pattern ( ($generated@@161 $generated@@163))
)))
(assert (forall (($generated@@164 T@U) ($generated@@165 T@U) ) (!  (=> (and (and (= (type $generated@@164) ($generated@@79 $generated@@156 $generated@@2)) (= (type $generated@@165) $generated@@67)) ($generated@@143 $generated@@164 ($generated@@161 $generated@@165))) ($generated@@162 $generated@@164))
 :pattern ( ($generated@@143 $generated@@164 ($generated@@161 $generated@@165)))
)))
(assert (forall (($generated@@167 T@U) ) (! (= (type ($generated@@166 $generated@@167)) $generated@@67)
 :pattern ( ($generated@@166 $generated@@167))
)))
(assert (forall (($generated@@168 T@U) ) (!  (=> (= (type $generated@@168) $generated@@80) (= ($generated@@143 $generated@@168 $generated@@139)  (or (= $generated@@168 $generated@@140) (= ($generated@@166 $generated@@168) $generated@@139))))
 :pattern ( ($generated@@143 $generated@@168 $generated@@139))
)))
(assert  (and (and (and (and (and (and (and (forall (($generated@@175 T@T) ($generated@@176 T@T) ) (= ($generated@@1 ($generated@@171 $generated@@175 $generated@@176)) 16)) (forall (($generated@@177 T@T) ($generated@@178 T@T) ) (! (= ($generated@@172 ($generated@@171 $generated@@177 $generated@@178)) $generated@@177)
 :pattern ( ($generated@@171 $generated@@177 $generated@@178))
))) (forall (($generated@@179 T@T) ($generated@@180 T@T) ) (! (= ($generated@@173 ($generated@@171 $generated@@179 $generated@@180)) $generated@@180)
 :pattern ( ($generated@@171 $generated@@179 $generated@@180))
))) (forall (($generated@@181 T@U) ($generated@@182 T@U) ($generated@@183 T@U) ) (! (let (($generated@@184 ($generated@@173 (type $generated@@181))))
(= (type ($generated@@169 $generated@@181 $generated@@182 $generated@@183)) $generated@@184))
 :pattern ( ($generated@@169 $generated@@181 $generated@@182 $generated@@183))
))) (forall (($generated@@185 T@U) ($generated@@186 T@U) ($generated@@187 T@U) ($generated@@188 T@U) ) (! (let (($generated@@189 (type $generated@@188)))
(let (($generated@@190 (type $generated@@186)))
(= (type ($generated@@174 $generated@@185 $generated@@186 $generated@@187 $generated@@188)) ($generated@@171 $generated@@190 $generated@@189))))
 :pattern ( ($generated@@174 $generated@@185 $generated@@186 $generated@@187 $generated@@188))
))) (forall (($generated@@191 T@U) ($generated@@192 T@U) ($generated@@193 T@U) ($generated@@194 T@U) ) (! (let (($generated@@195 ($generated@@173 (type $generated@@191))))
 (=> (= (type $generated@@194) $generated@@195) (= ($generated@@169 ($generated@@174 $generated@@191 $generated@@192 $generated@@193 $generated@@194) $generated@@192 $generated@@193) $generated@@194)))
 :weight 0
))) (and (and (forall (($generated@@196 T@U) ($generated@@197 T@U) ($generated@@198 T@U) ($generated@@199 T@U) ($generated@@200 T@U) ($generated@@201 T@U) ) (!  (or (= $generated@@198 $generated@@200) (= ($generated@@169 ($generated@@174 $generated@@197 $generated@@198 $generated@@199 $generated@@196) $generated@@200 $generated@@201) ($generated@@169 $generated@@197 $generated@@200 $generated@@201)))
 :weight 0
)) (forall (($generated@@202 T@U) ($generated@@203 T@U) ($generated@@204 T@U) ($generated@@205 T@U) ($generated@@206 T@U) ($generated@@207 T@U) ) (!  (or (= $generated@@205 $generated@@207) (= ($generated@@169 ($generated@@174 $generated@@203 $generated@@204 $generated@@205 $generated@@202) $generated@@206 $generated@@207) ($generated@@169 $generated@@203 $generated@@206 $generated@@207)))
 :weight 0
))) (forall (($generated@@208 T@U) ($generated@@209 T@U) ($generated@@210 T@U) ($generated@@211 T@U) ($generated@@212 T@U) ($generated@@213 T@U) ) (!  (or true (= ($generated@@169 ($generated@@174 $generated@@209 $generated@@210 $generated@@211 $generated@@208) $generated@@212 $generated@@213) ($generated@@169 $generated@@209 $generated@@212 $generated@@213)))
 :weight 0
)))) (forall (($generated@@214 T@U) ($generated@@215 T@U) ($generated@@216 T@U) ($generated@@217 Bool) ) (! (= (type ($generated@@170 $generated@@214 $generated@@215 $generated@@216 $generated@@217)) ($generated@@171 $generated@@80 $generated@@4))
 :pattern ( ($generated@@170 $generated@@214 $generated@@215 $generated@@216 $generated@@217))
))))
(assert (forall (($generated@@218 T@U) ($generated@@219 T@U) ($generated@@220 T@U) ($generated@@221 Bool) ($generated@@222 T@U) ($generated@@223 T@U) ) (! (let (($generated@@224 ($generated@@70 (type $generated@@223))))
 (=> (and (and (and (and (= (type $generated@@218) $generated@@80) (= (type $generated@@219) ($generated@@79 $generated@@80 $generated@@81))) (= (type $generated@@220) ($generated@@69 $generated@@4))) (= (type $generated@@222) $generated@@80)) (= (type $generated@@223) ($generated@@69 $generated@@224))) (= ($generated@@0 ($generated@@169 ($generated@@170 $generated@@218 $generated@@219 $generated@@220 $generated@@221) $generated@@222 $generated@@223))  (=> (and (not (= $generated@@222 $generated@@218)) ($generated@@0 ($generated@@86 ($generated@@84 $generated@@219 $generated@@222) $generated@@220))) $generated@@221))))
 :pattern ( ($generated@@169 ($generated@@170 $generated@@218 $generated@@219 $generated@@220 $generated@@221) $generated@@222 $generated@@223))
)))
(assert (= (type $generated@@225) $generated@@67))
(assert (forall (($generated@@226 T@U) ($generated@@227 T@U) ) (!  (=> (and (= (type $generated@@226) $generated@@80) (= (type $generated@@227) ($generated@@79 $generated@@80 $generated@@81))) (= ($generated@@77 $generated@@226 $generated@@225 $generated@@227) ($generated@@77 $generated@@226 $generated@@139 $generated@@227)))
 :pattern ( ($generated@@77 $generated@@226 $generated@@225 $generated@@227))
)))
(assert (forall (($generated@@230 T@U) ($generated@@231 T@U) ) (! (= (type ($generated@@228 $generated@@230 $generated@@231)) $generated@@147)
 :pattern ( ($generated@@228 $generated@@230 $generated@@231))
)))
(assert (forall (($generated@@232 T@U) ($generated@@233 T@U) ($generated@@234 T@U) ($generated@@235 T@U) ) (!  (=> (and (and (and (= (type $generated@@232) $generated@@67) (= (type $generated@@233) $generated@@67)) (= (type $generated@@234) $generated@@156)) (= (type $generated@@235) $generated@@156)) (= ($generated@@143 ($generated@@228 $generated@@234 $generated@@235) ($generated@@146 $generated@@232 $generated@@233))  (and ($generated@@229 $generated@@234 $generated@@232) ($generated@@229 $generated@@235 $generated@@233))))
 :pattern ( ($generated@@143 ($generated@@228 $generated@@234 $generated@@235) ($generated@@146 $generated@@232 $generated@@233)))
)))
(assert (forall (($generated@@236 T@U) ($generated@@237 T@U) ) (!  (=> (and (= (type $generated@@236) $generated@@147) (= (type $generated@@237) $generated@@147)) (= ($generated@@153 $generated@@236 $generated@@237) (= $generated@@236 $generated@@237)))
 :pattern ( ($generated@@153 $generated@@236 $generated@@237))
)))
(assert (forall (($generated@@239 T@U) ) (! (= (type ($generated@@238 $generated@@239)) $generated@@67)
 :pattern ( ($generated@@238 $generated@@239))
)))
(assert (forall (($generated@@240 T@U) ($generated@@241 T@U) ) (!  (=> (and (= (type $generated@@240) ($generated@@79 $generated@@156 $generated@@4)) (= (type $generated@@241) $generated@@67)) (= ($generated@@143 $generated@@240 ($generated@@238 $generated@@241)) (forall (($generated@@242 T@U) ) (!  (=> (and (= (type $generated@@242) $generated@@156) ($generated@@0 ($generated@@84 $generated@@240 $generated@@242))) ($generated@@229 $generated@@242 $generated@@241))
 :pattern ( ($generated@@84 $generated@@240 $generated@@242))
))))
 :pattern ( ($generated@@143 $generated@@240 ($generated@@238 $generated@@241)))
)))
(assert (forall (($generated@@244 T@U) ) (! (= (type ($generated@@243 $generated@@244)) $generated@@67)
 :pattern ( ($generated@@243 $generated@@244))
)))
(assert (forall (($generated@@245 T@U) ($generated@@246 T@U) ) (!  (=> (and (= (type $generated@@245) ($generated@@79 $generated@@156 $generated@@4)) (= (type $generated@@246) $generated@@67)) (= ($generated@@143 $generated@@245 ($generated@@243 $generated@@246)) (forall (($generated@@247 T@U) ) (!  (=> (and (= (type $generated@@247) $generated@@156) ($generated@@0 ($generated@@84 $generated@@245 $generated@@247))) ($generated@@229 $generated@@247 $generated@@246))
 :pattern ( ($generated@@84 $generated@@245 $generated@@247))
))))
 :pattern ( ($generated@@143 $generated@@245 ($generated@@243 $generated@@246)))
)))
(assert (forall (($generated@@249 T@U) ) (! (let (($generated@@250 (type $generated@@249)))
(= (type ($generated@@248 $generated@@249)) $generated@@250))
 :pattern ( ($generated@@248 $generated@@249))
)))
(assert (forall (($generated@@251 T@U) ) (! (= ($generated@@248 $generated@@251) $generated@@251)
 :pattern ( ($generated@@248 $generated@@251))
)))
(assert (forall (($generated@@254 T@U) ($generated@@255 T@U) ($generated@@256 T@U) ($generated@@257 T@U) ($generated@@258 T@U) ) (!  (=> (and (and (and (and (and (= (type $generated@@254) $generated@@67) (= (type $generated@@255) $generated@@67)) (= (type $generated@@256) $generated@@156)) (= (type $generated@@257) $generated@@156)) (= (type $generated@@258) ($generated@@79 $generated@@80 $generated@@81))) ($generated@@252 $generated@@258)) (= ($generated@@77 ($generated@@228 $generated@@256 $generated@@257) ($generated@@146 $generated@@254 $generated@@255) $generated@@258)  (and ($generated@@253 $generated@@256 $generated@@254 $generated@@258) ($generated@@253 $generated@@257 $generated@@255 $generated@@258))))
 :pattern ( ($generated@@77 ($generated@@228 $generated@@256 $generated@@257) ($generated@@146 $generated@@254 $generated@@255) $generated@@258))
)))
(assert (forall (($generated@@260 T@U) ) (! (= (type ($generated@@259 $generated@@260)) $generated@@71)
 :pattern ( ($generated@@259 $generated@@260))
)))
(assert (forall (($generated@@261 T@U) ) (!  (=> (= (type $generated@@261) $generated@@147) (= ($generated@@145 $generated@@261) (= ($generated@@259 $generated@@261) $generated@@61)))
 :pattern ( ($generated@@145 $generated@@261))
)))
(assert (forall (($generated@@262 T@U) ) (!  (=> (and (= (type $generated@@262) $generated@@147) ($generated@@145 $generated@@262)) (exists (($generated@@263 T@U) ($generated@@264 T@U) ) (!  (and (and (= (type $generated@@263) $generated@@156) (= (type $generated@@264) $generated@@156)) (= $generated@@262 ($generated@@228 $generated@@263 $generated@@264)))
 :no-pattern (type $generated@@263)
 :no-pattern (type $generated@@264)
 :no-pattern ($generated $generated@@263)
 :no-pattern ($generated@@0 $generated@@263)
 :no-pattern ($generated $generated@@264)
 :no-pattern ($generated@@0 $generated@@264)
)))
 :pattern ( ($generated@@145 $generated@@262))
)))
(assert  (and (and (forall (($generated@@269 T@T) ) (= ($generated@@1 ($generated@@267 $generated@@269)) 17)) (forall (($generated@@270 T@T) ) (! (= ($generated@@268 ($generated@@267 $generated@@270)) $generated@@270)
 :pattern ( ($generated@@267 $generated@@270))
))) (forall (($generated@@271 T@T) ) (! (= (type ($generated@@265 $generated@@271)) ($generated@@267 $generated@@271))
 :pattern ( ($generated@@265 $generated@@271))
))))
(assert (forall (($generated@@272 T@T) ) (! (= ($generated@@266 ($generated@@265 $generated@@272)) 0)
 :pattern ( ($generated@@265 $generated@@272))
)))
(assert (forall (($generated@@274 T@U) ) (! (= (type ($generated@@273 $generated@@274)) $generated@@156)
 :pattern ( ($generated@@273 $generated@@274))
)))
(assert (forall (($generated@@275 T@U) ($generated@@276 T@U) ($generated@@277 T@U) ) (!  (=> (and (= (type $generated@@276) $generated@@67) (= (type $generated@@277) ($generated@@79 $generated@@80 $generated@@81))) (= ($generated@@253 ($generated@@273 $generated@@275) $generated@@276 $generated@@277) ($generated@@77 $generated@@275 $generated@@276 $generated@@277)))
 :pattern ( ($generated@@253 ($generated@@273 $generated@@275) $generated@@276 $generated@@277))
)))
(assert (forall (($generated@@278 T@U) ($generated@@279 T@U) ($generated@@280 T@U) ($generated@@281 T@U) ) (!  (=> (and (and (and (and (and (= (type $generated@@278) ($generated@@79 $generated@@80 $generated@@81)) (= (type $generated@@279) ($generated@@79 $generated@@80 $generated@@81))) (= (type $generated@@280) $generated@@156)) (= (type $generated@@281) $generated@@67)) ($generated@@135 $generated@@278 $generated@@279)) ($generated@@253 $generated@@280 $generated@@281 $generated@@278)) ($generated@@253 $generated@@280 $generated@@281 $generated@@279))
 :pattern ( ($generated@@135 $generated@@278 $generated@@279) ($generated@@253 $generated@@280 $generated@@281 $generated@@278))
)))
(assert (forall (($generated@@282 T@U) ($generated@@283 T@U) ($generated@@284 T@U) ($generated@@285 T@U) ) (!  (=> (and (and (and (and (= (type $generated@@282) ($generated@@79 $generated@@80 $generated@@81)) (= (type $generated@@283) ($generated@@79 $generated@@80 $generated@@81))) (= (type $generated@@285) $generated@@67)) ($generated@@135 $generated@@282 $generated@@283)) ($generated@@77 $generated@@284 $generated@@285 $generated@@282)) ($generated@@77 $generated@@284 $generated@@285 $generated@@283))
 :pattern ( ($generated@@135 $generated@@282 $generated@@283) ($generated@@77 $generated@@284 $generated@@285 $generated@@282))
)))
(assert (forall (($generated@@288 T@T) ) (! (= (type ($generated@@287 $generated@@288)) ($generated@@79 $generated@@288 $generated@@2))
 :pattern ( ($generated@@287 $generated@@288))
)))
(assert (forall (($generated@@289 T@U) ) (! (let (($generated@@290 ($generated@@82 (type $generated@@289))))
 (=> (= (type $generated@@289) ($generated@@79 $generated@@290 $generated@@2)) (and (= (= ($generated@@286 $generated@@289) 0) (= $generated@@289 ($generated@@287 $generated@@290))) (=> (not (= ($generated@@286 $generated@@289) 0)) (exists (($generated@@291 T@U) ) (!  (and (= (type $generated@@291) $generated@@290) (< 0 ($generated ($generated@@84 $generated@@289 $generated@@291))))
 :no-pattern (type $generated@@291)
 :no-pattern ($generated $generated@@291)
 :no-pattern ($generated@@0 $generated@@291)
))))))
 :pattern ( ($generated@@286 $generated@@289))
)))
(assert  (and (and (and (and (forall (($generated@@297 T@T) ($generated@@298 T@T) ) (= ($generated@@1 ($generated@@294 $generated@@297 $generated@@298)) 18)) (forall (($generated@@299 T@T) ($generated@@300 T@T) ) (! (= ($generated@@295 ($generated@@294 $generated@@299 $generated@@300)) $generated@@299)
 :pattern ( ($generated@@294 $generated@@299 $generated@@300))
))) (forall (($generated@@301 T@T) ($generated@@302 T@T) ) (! (= ($generated@@296 ($generated@@294 $generated@@301 $generated@@302)) $generated@@302)
 :pattern ( ($generated@@294 $generated@@301 $generated@@302))
))) (forall (($generated@@303 T@U) ) (! (let (($generated@@304 ($generated@@295 (type $generated@@303))))
(= (type ($generated@@292 $generated@@303)) ($generated@@79 $generated@@304 $generated@@4)))
 :pattern ( ($generated@@292 $generated@@303))
))) (forall (($generated@@305 T@T) ($generated@@306 T@T) ) (! (= (type ($generated@@293 $generated@@305 $generated@@306)) ($generated@@294 $generated@@305 $generated@@306))
 :pattern ( ($generated@@293 $generated@@305 $generated@@306))
))))
(assert (forall (($generated@@307 T@U) ($generated@@308 T@T) ) (! (let (($generated@@309 (type $generated@@307)))
 (not ($generated@@0 ($generated@@84 ($generated@@292 ($generated@@293 $generated@@309 $generated@@308)) $generated@@307))))
 :pattern ( (let (($generated@@309 (type $generated@@307)))
($generated@@84 ($generated@@292 ($generated@@293 $generated@@309 $generated@@308)) $generated@@307)))
)))
(assert  (and (and (and (and (forall (($generated@@315 T@T) ($generated@@316 T@T) ) (= ($generated@@1 ($generated@@312 $generated@@315 $generated@@316)) 19)) (forall (($generated@@317 T@T) ($generated@@318 T@T) ) (! (= ($generated@@313 ($generated@@312 $generated@@317 $generated@@318)) $generated@@317)
 :pattern ( ($generated@@312 $generated@@317 $generated@@318))
))) (forall (($generated@@319 T@T) ($generated@@320 T@T) ) (! (= ($generated@@314 ($generated@@312 $generated@@319 $generated@@320)) $generated@@320)
 :pattern ( ($generated@@312 $generated@@319 $generated@@320))
))) (forall (($generated@@321 T@U) ) (! (let (($generated@@322 ($generated@@313 (type $generated@@321))))
(= (type ($generated@@310 $generated@@321)) ($generated@@79 $generated@@322 $generated@@4)))
 :pattern ( ($generated@@310 $generated@@321))
))) (forall (($generated@@323 T@T) ($generated@@324 T@T) ) (! (= (type ($generated@@311 $generated@@323 $generated@@324)) ($generated@@312 $generated@@323 $generated@@324))
 :pattern ( ($generated@@311 $generated@@323 $generated@@324))
))))
(assert (forall (($generated@@325 T@U) ($generated@@326 T@T) ) (! (let (($generated@@327 (type $generated@@325)))
 (not ($generated@@0 ($generated@@84 ($generated@@310 ($generated@@311 $generated@@327 $generated@@326)) $generated@@325))))
 :pattern ( (let (($generated@@327 (type $generated@@325)))
($generated@@84 ($generated@@310 ($generated@@311 $generated@@327 $generated@@326)) $generated@@325)))
)))
(assert (forall (($generated@@328 T@U) ) (! (let (($generated@@329 ($generated@@82 (type $generated@@328))))
 (=> (= (type $generated@@328) ($generated@@79 $generated@@329 $generated@@2)) (= ($generated@@162 $generated@@328) (forall (($generated@@330 T@U) ) (!  (=> (= (type $generated@@330) $generated@@329) (and (<= 0 ($generated ($generated@@84 $generated@@328 $generated@@330))) (<= ($generated ($generated@@84 $generated@@328 $generated@@330)) ($generated@@286 $generated@@328))))
 :pattern ( ($generated@@84 $generated@@328 $generated@@330))
)))))
 :pattern ( ($generated@@162 $generated@@328))
)))
(assert (forall (($generated@@332 T@T) ($generated@@333 T@U) ) (! (= (type ($generated@@331 $generated@@332 $generated@@333)) $generated@@332)
 :pattern ( ($generated@@331 $generated@@332 $generated@@333))
)))
(assert (forall (($generated@@334 T@U) ) (!  (=> (and (= (type $generated@@334) $generated@@156) ($generated@@229 $generated@@334 $generated@@139)) (and (= ($generated@@273 ($generated@@331 $generated@@80 $generated@@334)) $generated@@334) ($generated@@143 ($generated@@331 $generated@@80 $generated@@334) $generated@@139)))
 :pattern ( ($generated@@229 $generated@@334 $generated@@139))
)))
(assert (forall (($generated@@335 T@U) ) (!  (=> (and (= (type $generated@@335) $generated@@156) ($generated@@229 $generated@@335 $generated@@225)) (and (= ($generated@@273 ($generated@@331 $generated@@80 $generated@@335)) $generated@@335) ($generated@@143 ($generated@@331 $generated@@80 $generated@@335) $generated@@225)))
 :pattern ( ($generated@@229 $generated@@335 $generated@@225))
)))
(assert (forall (($generated@@336 T@U) ) (!  (=> (= (type $generated@@336) $generated@@80) (= ($generated@@143 $generated@@336 $generated@@225)  (and ($generated@@143 $generated@@336 $generated@@139) (not (= $generated@@336 $generated@@140)))))
 :pattern ( ($generated@@143 $generated@@336 $generated@@225))
)))
(assert (forall (($generated@@337 T@U) ) (! (let (($generated@@338 ($generated@@296 (type $generated@@337))))
(let (($generated@@339 ($generated@@295 (type $generated@@337))))
 (=> (= (type $generated@@337) ($generated@@294 $generated@@339 $generated@@338)) (or (= $generated@@337 ($generated@@293 $generated@@339 $generated@@338)) (exists (($generated@@340 T@U) ) (!  (and (= (type $generated@@340) $generated@@339) ($generated@@0 ($generated@@84 ($generated@@292 $generated@@337) $generated@@340)))
 :no-pattern (type $generated@@340)
 :no-pattern ($generated $generated@@340)
 :no-pattern ($generated@@0 $generated@@340)
))))))
 :pattern ( ($generated@@292 $generated@@337))
)))
(assert (forall (($generated@@342 T@U) ) (! (let (($generated@@343 ($generated@@296 (type $generated@@342))))
(= (type ($generated@@341 $generated@@342)) ($generated@@79 $generated@@343 $generated@@4)))
 :pattern ( ($generated@@341 $generated@@342))
)))
(assert (forall (($generated@@344 T@U) ) (! (let (($generated@@345 ($generated@@296 (type $generated@@344))))
(let (($generated@@346 ($generated@@295 (type $generated@@344))))
 (=> (= (type $generated@@344) ($generated@@294 $generated@@346 $generated@@345)) (or (= $generated@@344 ($generated@@293 $generated@@346 $generated@@345)) (exists (($generated@@347 T@U) ) (!  (and (= (type $generated@@347) $generated@@345) ($generated@@0 ($generated@@84 ($generated@@341 $generated@@344) $generated@@347)))
 :no-pattern (type $generated@@347)
 :no-pattern ($generated $generated@@347)
 :no-pattern ($generated@@0 $generated@@347)
))))))
 :pattern ( ($generated@@341 $generated@@344))
)))
(assert (forall (($generated@@348 T@U) ) (! (let (($generated@@349 ($generated@@314 (type $generated@@348))))
(let (($generated@@350 ($generated@@313 (type $generated@@348))))
 (=> (= (type $generated@@348) ($generated@@312 $generated@@350 $generated@@349)) (or (= $generated@@348 ($generated@@311 $generated@@350 $generated@@349)) (exists (($generated@@351 T@U) ) (!  (and (= (type $generated@@351) $generated@@350) ($generated@@0 ($generated@@84 ($generated@@310 $generated@@348) $generated@@351)))
 :no-pattern (type $generated@@351)
 :no-pattern ($generated $generated@@351)
 :no-pattern ($generated@@0 $generated@@351)
))))))
 :pattern ( ($generated@@310 $generated@@348))
)))
(assert (forall (($generated@@353 T@U) ) (! (let (($generated@@354 ($generated@@314 (type $generated@@353))))
(= (type ($generated@@352 $generated@@353)) ($generated@@79 $generated@@354 $generated@@4)))
 :pattern ( ($generated@@352 $generated@@353))
)))
(assert (forall (($generated@@355 T@U) ) (! (let (($generated@@356 ($generated@@314 (type $generated@@355))))
(let (($generated@@357 ($generated@@313 (type $generated@@355))))
 (=> (= (type $generated@@355) ($generated@@312 $generated@@357 $generated@@356)) (or (= $generated@@355 ($generated@@311 $generated@@357 $generated@@356)) (exists (($generated@@358 T@U) ) (!  (and (= (type $generated@@358) $generated@@356) ($generated@@0 ($generated@@84 ($generated@@352 $generated@@355) $generated@@358)))
 :no-pattern (type $generated@@358)
 :no-pattern ($generated $generated@@358)
 :no-pattern ($generated@@0 $generated@@358)
))))))
 :pattern ( ($generated@@352 $generated@@355))
)))
(assert (forall (($generated@@359 T@U) ($generated@@360 T@U) ) (!  (=> (and (= (type $generated@@359) ($generated@@79 $generated@@156 $generated@@2)) (= (type $generated@@360) $generated@@67)) (= ($generated@@143 $generated@@359 ($generated@@161 $generated@@360)) (forall (($generated@@361 T@U) ) (!  (=> (and (= (type $generated@@361) $generated@@156) (< 0 ($generated ($generated@@84 $generated@@359 $generated@@361)))) ($generated@@229 $generated@@361 $generated@@360))
 :pattern ( ($generated@@84 $generated@@359 $generated@@361))
))))
 :pattern ( ($generated@@143 $generated@@359 ($generated@@161 $generated@@360)))
)))
(assert (forall (($generated@@362 T@U) ($generated@@363 T@U) ($generated@@364 T@U) ) (!  (=> (and (and (= (type $generated@@362) ($generated@@79 $generated@@156 $generated@@4)) (= (type $generated@@363) $generated@@67)) (= (type $generated@@364) ($generated@@79 $generated@@80 $generated@@81))) (= ($generated@@77 $generated@@362 ($generated@@238 $generated@@363) $generated@@364) (forall (($generated@@365 T@U) ) (!  (=> (and (= (type $generated@@365) $generated@@156) ($generated@@0 ($generated@@84 $generated@@362 $generated@@365))) ($generated@@253 $generated@@365 $generated@@363 $generated@@364))
 :pattern ( ($generated@@84 $generated@@362 $generated@@365))
))))
 :pattern ( ($generated@@77 $generated@@362 ($generated@@238 $generated@@363) $generated@@364))
)))
(assert (forall (($generated@@366 T@U) ($generated@@367 T@U) ($generated@@368 T@U) ) (!  (=> (and (and (= (type $generated@@366) ($generated@@79 $generated@@156 $generated@@4)) (= (type $generated@@367) $generated@@67)) (= (type $generated@@368) ($generated@@79 $generated@@80 $generated@@81))) (= ($generated@@77 $generated@@366 ($generated@@243 $generated@@367) $generated@@368) (forall (($generated@@369 T@U) ) (!  (=> (and (= (type $generated@@369) $generated@@156) ($generated@@0 ($generated@@84 $generated@@366 $generated@@369))) ($generated@@253 $generated@@369 $generated@@367 $generated@@368))
 :pattern ( ($generated@@84 $generated@@366 $generated@@369))
))))
 :pattern ( ($generated@@77 $generated@@366 ($generated@@243 $generated@@367) $generated@@368))
)))
(assert (forall (($generated@@370 T@U) ) (! (let (($generated@@371 (type $generated@@370)))
(= ($generated ($generated@@84 ($generated@@287 $generated@@371) $generated@@370)) 0))
 :pattern ( (let (($generated@@371 (type $generated@@370)))
($generated@@84 ($generated@@287 $generated@@371) $generated@@370)))
)))
(assert  (and (forall (($generated@@374 T@U) ) (! (= (type ($generated@@372 $generated@@374)) ($generated@@79 $generated@@156 $generated@@4))
 :pattern ( ($generated@@372 $generated@@374))
)) (forall (($generated@@375 T@U) ) (! (let (($generated@@376 ($generated@@296 (type $generated@@375))))
(let (($generated@@377 ($generated@@295 (type $generated@@375))))
(= (type ($generated@@373 $generated@@375)) ($generated@@79 $generated@@377 $generated@@376))))
 :pattern ( ($generated@@373 $generated@@375))
))))
(assert (forall (($generated@@378 T@U) ($generated@@379 T@U) ) (!  (=> (and (= (type $generated@@378) ($generated@@294 $generated@@156 $generated@@156)) (= (type $generated@@379) $generated@@156)) (= ($generated@@0 ($generated@@84 ($generated@@372 $generated@@378) $generated@@379))  (and ($generated@@0 ($generated@@84 ($generated@@292 $generated@@378) ($generated@@154 ($generated@@331 $generated@@147 $generated@@379)))) (= ($generated@@84 ($generated@@373 $generated@@378) ($generated@@154 ($generated@@331 $generated@@147 $generated@@379))) ($generated@@155 ($generated@@331 $generated@@147 $generated@@379))))))
 :pattern ( ($generated@@84 ($generated@@372 $generated@@378) $generated@@379))
)))
(assert  (and (forall (($generated@@382 T@U) ) (! (= (type ($generated@@380 $generated@@382)) ($generated@@79 $generated@@156 $generated@@4))
 :pattern ( ($generated@@380 $generated@@382))
)) (forall (($generated@@383 T@U) ) (! (let (($generated@@384 ($generated@@314 (type $generated@@383))))
(let (($generated@@385 ($generated@@313 (type $generated@@383))))
(= (type ($generated@@381 $generated@@383)) ($generated@@79 $generated@@385 $generated@@384))))
 :pattern ( ($generated@@381 $generated@@383))
))))
(assert (forall (($generated@@386 T@U) ($generated@@387 T@U) ) (!  (=> (and (= (type $generated@@386) ($generated@@312 $generated@@156 $generated@@156)) (= (type $generated@@387) $generated@@156)) (= ($generated@@0 ($generated@@84 ($generated@@380 $generated@@386) $generated@@387))  (and ($generated@@0 ($generated@@84 ($generated@@310 $generated@@386) ($generated@@154 ($generated@@331 $generated@@147 $generated@@387)))) (= ($generated@@84 ($generated@@381 $generated@@386) ($generated@@154 ($generated@@331 $generated@@147 $generated@@387))) ($generated@@155 ($generated@@331 $generated@@147 $generated@@387))))))
 :pattern ( ($generated@@84 ($generated@@380 $generated@@386) $generated@@387))
)))
(assert (forall (($generated@@388 T@U) ($generated@@389 T@U) ) (! (let (($generated@@390 (type $generated@@389)))
(let (($generated@@391 ($generated@@295 (type $generated@@388))))
 (=> (= (type $generated@@388) ($generated@@294 $generated@@391 $generated@@390)) (= ($generated@@0 ($generated@@84 ($generated@@341 $generated@@388) $generated@@389)) (exists (($generated@@392 T@U) ) (!  (and (= (type $generated@@392) $generated@@391) (and ($generated@@0 ($generated@@84 ($generated@@292 $generated@@388) $generated@@392)) (= $generated@@389 ($generated@@84 ($generated@@373 $generated@@388) $generated@@392))))
 :pattern ( ($generated@@84 ($generated@@292 $generated@@388) $generated@@392))
 :pattern ( ($generated@@84 ($generated@@373 $generated@@388) $generated@@392))
))))))
 :pattern ( ($generated@@84 ($generated@@341 $generated@@388) $generated@@389))
)))
(assert (forall (($generated@@393 T@U) ($generated@@394 T@U) ) (! (let (($generated@@395 (type $generated@@394)))
(let (($generated@@396 ($generated@@313 (type $generated@@393))))
 (=> (= (type $generated@@393) ($generated@@312 $generated@@396 $generated@@395)) (= ($generated@@0 ($generated@@84 ($generated@@352 $generated@@393) $generated@@394)) (exists (($generated@@397 T@U) ) (!  (and (= (type $generated@@397) $generated@@396) (and ($generated@@0 ($generated@@84 ($generated@@310 $generated@@393) $generated@@397)) (= $generated@@394 ($generated@@84 ($generated@@381 $generated@@393) $generated@@397))))
 :pattern ( ($generated@@84 ($generated@@310 $generated@@393) $generated@@397))
 :pattern ( ($generated@@84 ($generated@@381 $generated@@393) $generated@@397))
))))))
 :pattern ( ($generated@@84 ($generated@@352 $generated@@393) $generated@@394))
)))
(assert (forall (($generated@@399 T@U) ($generated@@400 T@U) ) (! (= (type ($generated@@398 $generated@@399 $generated@@400)) $generated@@67)
 :pattern ( ($generated@@398 $generated@@399 $generated@@400))
)))
(assert (forall (($generated@@401 T@U) ($generated@@402 T@U) ($generated@@403 T@U) ($generated@@404 T@U) ) (!  (=> (and (and (and (= (type $generated@@401) ($generated@@294 $generated@@156 $generated@@156)) (= (type $generated@@402) $generated@@67)) (= (type $generated@@403) $generated@@67)) (= (type $generated@@404) ($generated@@79 $generated@@80 $generated@@81))) (= ($generated@@77 $generated@@401 ($generated@@398 $generated@@402 $generated@@403) $generated@@404) (forall (($generated@@405 T@U) ) (!  (=> (and (= (type $generated@@405) $generated@@156) ($generated@@0 ($generated@@84 ($generated@@292 $generated@@401) $generated@@405))) (and ($generated@@253 ($generated@@84 ($generated@@373 $generated@@401) $generated@@405) $generated@@403 $generated@@404) ($generated@@253 $generated@@405 $generated@@402 $generated@@404)))
 :pattern ( ($generated@@84 ($generated@@373 $generated@@401) $generated@@405))
 :pattern ( ($generated@@84 ($generated@@292 $generated@@401) $generated@@405))
))))
 :pattern ( ($generated@@77 $generated@@401 ($generated@@398 $generated@@402 $generated@@403) $generated@@404))
)))
(assert (forall (($generated@@407 T@U) ($generated@@408 T@U) ) (! (= (type ($generated@@406 $generated@@407 $generated@@408)) $generated@@67)
 :pattern ( ($generated@@406 $generated@@407 $generated@@408))
)))
(assert (forall (($generated@@409 T@U) ($generated@@410 T@U) ($generated@@411 T@U) ($generated@@412 T@U) ) (!  (=> (and (and (and (= (type $generated@@409) ($generated@@312 $generated@@156 $generated@@156)) (= (type $generated@@410) $generated@@67)) (= (type $generated@@411) $generated@@67)) (= (type $generated@@412) ($generated@@79 $generated@@80 $generated@@81))) (= ($generated@@77 $generated@@409 ($generated@@406 $generated@@410 $generated@@411) $generated@@412) (forall (($generated@@413 T@U) ) (!  (=> (and (= (type $generated@@413) $generated@@156) ($generated@@0 ($generated@@84 ($generated@@310 $generated@@409) $generated@@413))) (and ($generated@@253 ($generated@@84 ($generated@@381 $generated@@409) $generated@@413) $generated@@411 $generated@@412) ($generated@@253 $generated@@413 $generated@@410 $generated@@412)))
 :pattern ( ($generated@@84 ($generated@@381 $generated@@409) $generated@@413))
 :pattern ( ($generated@@84 ($generated@@310 $generated@@409) $generated@@413))
))))
 :pattern ( ($generated@@77 $generated@@409 ($generated@@406 $generated@@410 $generated@@411) $generated@@412))
)))
(assert (forall (($generated@@414 T@U) ($generated@@415 T@U) ($generated@@416 T@U) ) (!  (=> (and (and (and (and (= (type $generated@@414) ($generated@@79 $generated@@80 $generated@@81)) (= (type $generated@@415) ($generated@@79 $generated@@80 $generated@@81))) (= (type $generated@@416) ($generated@@79 $generated@@80 $generated@@81))) (not (= $generated@@414 $generated@@416))) (and ($generated@@135 $generated@@414 $generated@@415) ($generated@@135 $generated@@415 $generated@@416))) ($generated@@135 $generated@@414 $generated@@416))
 :pattern ( ($generated@@135 $generated@@414 $generated@@415) ($generated@@135 $generated@@415 $generated@@416))
)))
(assert (forall (($generated@@418 T@T) ) (! (= (type ($generated@@417 $generated@@418)) ($generated@@79 $generated@@418 $generated@@4))
 :pattern ( ($generated@@417 $generated@@418))
)))
(assert (forall (($generated@@419 T@U) ) (! (let (($generated@@420 ($generated@@314 (type $generated@@419))))
(let (($generated@@421 ($generated@@313 (type $generated@@419))))
 (=> (= (type $generated@@419) ($generated@@312 $generated@@421 $generated@@420)) (= (= $generated@@419 ($generated@@311 $generated@@421 $generated@@420)) (= ($generated@@310 $generated@@419) ($generated@@417 $generated@@421))))))
 :pattern ( ($generated@@310 $generated@@419))
)))
(assert (forall (($generated@@422 T@U) ) (! (let (($generated@@423 ($generated@@314 (type $generated@@422))))
(let (($generated@@424 ($generated@@313 (type $generated@@422))))
 (=> (= (type $generated@@422) ($generated@@312 $generated@@424 $generated@@423)) (= (= $generated@@422 ($generated@@311 $generated@@424 $generated@@423)) (= ($generated@@352 $generated@@422) ($generated@@417 $generated@@423))))))
 :pattern ( ($generated@@352 $generated@@422))
)))
(assert (forall (($generated@@425 T@U) ) (! (let (($generated@@426 ($generated@@314 (type $generated@@425))))
(let (($generated@@427 ($generated@@313 (type $generated@@425))))
 (=> (= (type $generated@@425) ($generated@@312 $generated@@427 $generated@@426)) (= (= $generated@@425 ($generated@@311 $generated@@427 $generated@@426)) (= ($generated@@380 $generated@@425) ($generated@@417 $generated@@156))))))
 :pattern ( ($generated@@380 $generated@@425))
)))
(assert (forall (($generated@@428 T@U) ) (! (let (($generated@@429 ($generated@@296 (type $generated@@428))))
(let (($generated@@430 ($generated@@295 (type $generated@@428))))
 (=> (= (type $generated@@428) ($generated@@294 $generated@@430 $generated@@429)) (or (= $generated@@428 ($generated@@293 $generated@@430 $generated@@429)) (exists (($generated@@431 T@U) ($generated@@432 T@U) ) (!  (and (and (= (type $generated@@431) $generated@@156) (= (type $generated@@432) $generated@@156)) ($generated@@0 ($generated@@84 ($generated@@372 $generated@@428) ($generated@@273 ($generated@@228 $generated@@431 $generated@@432)))))
 :no-pattern (type $generated@@431)
 :no-pattern (type $generated@@432)
 :no-pattern ($generated $generated@@431)
 :no-pattern ($generated@@0 $generated@@431)
 :no-pattern ($generated $generated@@432)
 :no-pattern ($generated@@0 $generated@@432)
))))))
 :pattern ( ($generated@@372 $generated@@428))
)))
(assert (forall (($generated@@433 T@U) ) (! (let (($generated@@434 ($generated@@314 (type $generated@@433))))
(let (($generated@@435 ($generated@@313 (type $generated@@433))))
 (=> (= (type $generated@@433) ($generated@@312 $generated@@435 $generated@@434)) (or (= $generated@@433 ($generated@@311 $generated@@435 $generated@@434)) (exists (($generated@@436 T@U) ($generated@@437 T@U) ) (!  (and (and (= (type $generated@@436) $generated@@156) (= (type $generated@@437) $generated@@156)) ($generated@@0 ($generated@@84 ($generated@@380 $generated@@433) ($generated@@273 ($generated@@228 $generated@@436 $generated@@437)))))
 :no-pattern (type $generated@@436)
 :no-pattern (type $generated@@437)
 :no-pattern ($generated $generated@@436)
 :no-pattern ($generated@@0 $generated@@436)
 :no-pattern ($generated $generated@@437)
 :no-pattern ($generated@@0 $generated@@437)
))))))
 :pattern ( ($generated@@380 $generated@@433))
)))
(assert (forall (($generated@@438 T@U) ) (!  (=> (and (= (type $generated@@438) $generated@@156) ($generated@@229 $generated@@438 $generated@@46)) (and (= ($generated@@273 ($generated@@331 $generated@@2 $generated@@438)) $generated@@438) ($generated@@143 ($generated@@331 $generated@@2 $generated@@438) $generated@@46)))
 :pattern ( ($generated@@229 $generated@@438 $generated@@46))
)))
(assert (forall (($generated@@439 T@U) ) (!  (=> (and (= (type $generated@@439) $generated@@156) ($generated@@229 $generated@@439 $generated@@47)) (and (= ($generated@@273 ($generated@@331 $generated@@3 $generated@@439)) $generated@@439) ($generated@@143 ($generated@@331 $generated@@3 $generated@@439) $generated@@47)))
 :pattern ( ($generated@@229 $generated@@439 $generated@@47))
)))
(assert (forall (($generated@@440 T@U) ) (!  (=> (and (= (type $generated@@440) $generated@@156) ($generated@@229 $generated@@440 $generated@@44)) (and (= ($generated@@273 ($generated@@331 $generated@@4 $generated@@440)) $generated@@440) ($generated@@143 ($generated@@331 $generated@@4 $generated@@440) $generated@@44)))
 :pattern ( ($generated@@229 $generated@@440 $generated@@44))
)))
(assert (= ($generated@@1 $generated@@441) 20))
(assert (forall (($generated@@442 T@U) ) (!  (=> (and (= (type $generated@@442) $generated@@156) ($generated@@229 $generated@@442 $generated@@45)) (and (= ($generated@@273 ($generated@@331 $generated@@441 $generated@@442)) $generated@@442) ($generated@@143 ($generated@@331 $generated@@441 $generated@@442) $generated@@45)))
 :pattern ( ($generated@@229 $generated@@442 $generated@@45))
)))
(assert (forall (($generated@@443 T@U) ($generated@@444 T@U) ) (!  (=> (= (type $generated@@444) $generated@@67) (= ($generated@@229 ($generated@@273 $generated@@443) $generated@@444) ($generated@@143 $generated@@443 $generated@@444)))
 :pattern ( ($generated@@229 ($generated@@273 $generated@@443) $generated@@444))
)))
(assert (forall (($generated@@445 T@U) ) (! (let (($generated@@446 ($generated@@82 (type $generated@@445))))
 (=> (= (type $generated@@445) ($generated@@79 $generated@@446 $generated@@2)) (<= 0 ($generated@@286 $generated@@445))))
 :pattern ( ($generated@@286 $generated@@445))
)))
(assert (forall (($generated@@447 T@U) ) (! (let (($generated@@448 ($generated@@268 (type $generated@@447))))
 (=> (= (type $generated@@447) ($generated@@267 $generated@@448)) (<= 0 ($generated@@266 $generated@@447))))
 :pattern ( ($generated@@266 $generated@@447))
)))
(assert (forall (($generated@@450 T@U) ) (! (= (type ($generated@@449 $generated@@450)) $generated@@67)
 :pattern ( ($generated@@449 $generated@@450))
)))
(assert (forall (($generated@@451 T@U) ($generated@@452 T@U) ) (!  (=> (and (= (type $generated@@451) $generated@@67) (= (type $generated@@452) $generated@@67)) (= ($generated@@449 ($generated@@398 $generated@@451 $generated@@452)) $generated@@451))
 :pattern ( ($generated@@398 $generated@@451 $generated@@452))
)))
(assert (forall (($generated@@454 T@U) ) (! (= (type ($generated@@453 $generated@@454)) $generated@@67)
 :pattern ( ($generated@@453 $generated@@454))
)))
(assert (forall (($generated@@455 T@U) ($generated@@456 T@U) ) (!  (=> (and (= (type $generated@@455) $generated@@67) (= (type $generated@@456) $generated@@67)) (= ($generated@@453 ($generated@@398 $generated@@455 $generated@@456)) $generated@@456))
 :pattern ( ($generated@@398 $generated@@455 $generated@@456))
)))
(assert (forall (($generated@@457 T@U) ($generated@@458 T@U) ) (!  (=> (and (= (type $generated@@457) $generated@@67) (= (type $generated@@458) $generated@@67)) (= ($generated@@75 ($generated@@398 $generated@@457 $generated@@458)) $generated@@58))
 :pattern ( ($generated@@398 $generated@@457 $generated@@458))
)))
(assert (forall (($generated@@460 T@U) ) (! (= (type ($generated@@459 $generated@@460)) $generated@@67)
 :pattern ( ($generated@@459 $generated@@460))
)))
(assert (forall (($generated@@461 T@U) ($generated@@462 T@U) ) (!  (=> (and (= (type $generated@@461) $generated@@67) (= (type $generated@@462) $generated@@67)) (= ($generated@@459 ($generated@@406 $generated@@461 $generated@@462)) $generated@@461))
 :pattern ( ($generated@@406 $generated@@461 $generated@@462))
)))
(assert (forall (($generated@@464 T@U) ) (! (= (type ($generated@@463 $generated@@464)) $generated@@67)
 :pattern ( ($generated@@463 $generated@@464))
)))
(assert (forall (($generated@@465 T@U) ($generated@@466 T@U) ) (!  (=> (and (= (type $generated@@465) $generated@@67) (= (type $generated@@466) $generated@@67)) (= ($generated@@463 ($generated@@406 $generated@@465 $generated@@466)) $generated@@466))
 :pattern ( ($generated@@406 $generated@@465 $generated@@466))
)))
(assert (forall (($generated@@467 T@U) ($generated@@468 T@U) ) (!  (=> (and (= (type $generated@@467) $generated@@67) (= (type $generated@@468) $generated@@67)) (= ($generated@@75 ($generated@@406 $generated@@467 $generated@@468)) $generated@@59))
 :pattern ( ($generated@@406 $generated@@467 $generated@@468))
)))
(assert (forall (($generated@@469 T@U) ($generated@@470 T@U) ) (!  (=> (and (= (type $generated@@469) $generated@@156) (= (type $generated@@470) $generated@@156)) (= ($generated@@259 ($generated@@228 $generated@@469 $generated@@470)) $generated@@61))
 :pattern ( ($generated@@228 $generated@@469 $generated@@470))
)))
(assert (forall (($generated@@472 T@U) ) (! (= (type ($generated@@471 $generated@@472)) $generated@@67)
 :pattern ( ($generated@@471 $generated@@472))
)))
(assert (forall (($generated@@473 T@U) ($generated@@474 T@U) ) (!  (=> (and (= (type $generated@@473) $generated@@67) (= (type $generated@@474) $generated@@67)) (= ($generated@@471 ($generated@@146 $generated@@473 $generated@@474)) $generated@@473))
 :pattern ( ($generated@@146 $generated@@473 $generated@@474))
)))
(assert (forall (($generated@@476 T@U) ) (! (= (type ($generated@@475 $generated@@476)) $generated@@67)
 :pattern ( ($generated@@475 $generated@@476))
)))
(assert (forall (($generated@@477 T@U) ($generated@@478 T@U) ) (!  (=> (and (= (type $generated@@477) $generated@@67) (= (type $generated@@478) $generated@@67)) (= ($generated@@475 ($generated@@146 $generated@@477 $generated@@478)) $generated@@478))
 :pattern ( ($generated@@146 $generated@@477 $generated@@478))
)))
(assert (forall (($generated@@479 T@U) ($generated@@480 T@U) ) (!  (=> (and (= (type $generated@@479) $generated@@156) (= (type $generated@@480) $generated@@156)) (= ($generated@@154 ($generated@@228 $generated@@479 $generated@@480)) $generated@@479))
 :pattern ( ($generated@@228 $generated@@479 $generated@@480))
)))
(assert (forall (($generated@@481 T@U) ($generated@@482 T@U) ) (!  (=> (and (= (type $generated@@481) $generated@@156) (= (type $generated@@482) $generated@@156)) (= ($generated@@155 ($generated@@228 $generated@@481 $generated@@482)) $generated@@482))
 :pattern ( ($generated@@228 $generated@@481 $generated@@482))
)))
(assert  (and (forall (($generated@@485 T@U) ) (! (= (type ($generated@@483 $generated@@485)) $generated@@67)
 :pattern ( ($generated@@483 $generated@@485))
)) (forall (($generated@@486 T@U) ($generated@@487 Int) ) (! (let (($generated@@488 ($generated@@268 (type $generated@@486))))
(= (type ($generated@@484 $generated@@486 $generated@@487)) $generated@@488))
 :pattern ( ($generated@@484 $generated@@486 $generated@@487))
))))
(assert (forall (($generated@@489 T@U) ($generated@@490 T@U) ($generated@@491 T@U) ) (!  (=> (and (and (= (type $generated@@489) ($generated@@267 $generated@@156)) (= (type $generated@@490) $generated@@67)) (= (type $generated@@491) ($generated@@79 $generated@@80 $generated@@81))) (= ($generated@@77 $generated@@489 ($generated@@483 $generated@@490) $generated@@491) (forall (($generated@@492 Int) ) (!  (=> (and (<= 0 $generated@@492) (< $generated@@492 ($generated@@266 $generated@@489))) ($generated@@253 ($generated@@484 $generated@@489 $generated@@492) $generated@@490 $generated@@491))
 :pattern ( ($generated@@484 $generated@@489 $generated@@492))
))))
 :pattern ( ($generated@@77 $generated@@489 ($generated@@483 $generated@@490) $generated@@491))
)))
(assert (forall (($generated@@494 Int) ) (! (= ($generated@@493 ($generated@@78 $generated@@494)) $generated@@494)
 :pattern ( ($generated@@78 $generated@@494))
)))
(assert (forall (($generated@@496 T@U) ) (! (= (type ($generated@@495 $generated@@496)) $generated@@67)
 :pattern ( ($generated@@495 $generated@@496))
)))
(assert (forall (($generated@@497 T@U) ) (!  (=> (= (type $generated@@497) $generated@@67) (= ($generated@@495 ($generated@@238 $generated@@497)) $generated@@497))
 :pattern ( ($generated@@238 $generated@@497))
)))
(assert (forall (($generated@@498 T@U) ) (!  (=> (= (type $generated@@498) $generated@@67) (= ($generated@@75 ($generated@@238 $generated@@498)) $generated@@54))
 :pattern ( ($generated@@238 $generated@@498))
)))
(assert (forall (($generated@@500 T@U) ) (! (= (type ($generated@@499 $generated@@500)) $generated@@67)
 :pattern ( ($generated@@499 $generated@@500))
)))
(assert (forall (($generated@@501 T@U) ) (!  (=> (= (type $generated@@501) $generated@@67) (= ($generated@@499 ($generated@@243 $generated@@501)) $generated@@501))
 :pattern ( ($generated@@243 $generated@@501))
)))
(assert (forall (($generated@@502 T@U) ) (!  (=> (= (type $generated@@502) $generated@@67) (= ($generated@@75 ($generated@@243 $generated@@502)) $generated@@55))
 :pattern ( ($generated@@243 $generated@@502))
)))
(assert (forall (($generated@@504 T@U) ) (! (= (type ($generated@@503 $generated@@504)) $generated@@67)
 :pattern ( ($generated@@503 $generated@@504))
)))
(assert (forall (($generated@@505 T@U) ) (!  (=> (= (type $generated@@505) $generated@@67) (= ($generated@@503 ($generated@@161 $generated@@505)) $generated@@505))
 :pattern ( ($generated@@161 $generated@@505))
)))
(assert (forall (($generated@@506 T@U) ) (!  (=> (= (type $generated@@506) $generated@@67) (= ($generated@@75 ($generated@@161 $generated@@506)) $generated@@56))
 :pattern ( ($generated@@161 $generated@@506))
)))
(assert (forall (($generated@@508 T@U) ) (! (= (type ($generated@@507 $generated@@508)) $generated@@67)
 :pattern ( ($generated@@507 $generated@@508))
)))
(assert (forall (($generated@@509 T@U) ) (!  (=> (= (type $generated@@509) $generated@@67) (= ($generated@@507 ($generated@@483 $generated@@509)) $generated@@509))
 :pattern ( ($generated@@483 $generated@@509))
)))
(assert (forall (($generated@@510 T@U) ) (!  (=> (= (type $generated@@510) $generated@@67) (= ($generated@@75 ($generated@@483 $generated@@510)) $generated@@57))
 :pattern ( ($generated@@483 $generated@@510))
)))
(assert (forall (($generated@@511 T@U) ) (! (let (($generated@@512 (type $generated@@511)))
(= ($generated@@331 $generated@@512 ($generated@@273 $generated@@511)) $generated@@511))
 :pattern ( ($generated@@273 $generated@@511))
)))
(assert (forall (($generated@@513 T@U) ($generated@@514 T@U) ($generated@@515 T@U) ) (!  (=> (and (and (= (type $generated@@513) ($generated@@294 $generated@@156 $generated@@156)) (= (type $generated@@514) $generated@@67)) (= (type $generated@@515) $generated@@67)) (= ($generated@@143 $generated@@513 ($generated@@398 $generated@@514 $generated@@515)) (forall (($generated@@516 T@U) ) (!  (=> (and (= (type $generated@@516) $generated@@156) ($generated@@0 ($generated@@84 ($generated@@292 $generated@@513) $generated@@516))) (and ($generated@@229 ($generated@@84 ($generated@@373 $generated@@513) $generated@@516) $generated@@515) ($generated@@229 $generated@@516 $generated@@514)))
 :pattern ( ($generated@@84 ($generated@@373 $generated@@513) $generated@@516))
 :pattern ( ($generated@@84 ($generated@@292 $generated@@513) $generated@@516))
))))
 :pattern ( ($generated@@143 $generated@@513 ($generated@@398 $generated@@514 $generated@@515)))
)))
(assert (forall (($generated@@517 T@U) ($generated@@518 T@U) ($generated@@519 T@U) ) (!  (=> (and (and (= (type $generated@@517) ($generated@@312 $generated@@156 $generated@@156)) (= (type $generated@@518) $generated@@67)) (= (type $generated@@519) $generated@@67)) (= ($generated@@143 $generated@@517 ($generated@@406 $generated@@518 $generated@@519)) (forall (($generated@@520 T@U) ) (!  (=> (and (= (type $generated@@520) $generated@@156) ($generated@@0 ($generated@@84 ($generated@@310 $generated@@517) $generated@@520))) (and ($generated@@229 ($generated@@84 ($generated@@381 $generated@@517) $generated@@520) $generated@@519) ($generated@@229 $generated@@520 $generated@@518)))
 :pattern ( ($generated@@84 ($generated@@381 $generated@@517) $generated@@520))
 :pattern ( ($generated@@84 ($generated@@310 $generated@@517) $generated@@520))
))))
 :pattern ( ($generated@@143 $generated@@517 ($generated@@406 $generated@@518 $generated@@519)))
)))
(assert (forall (($generated@@523 T@U) ($generated@@524 T@U) ) (!  (=> (and (= (type $generated@@523) $generated@@156) (= (type $generated@@524) $generated@@156)) (< ($generated@@521 $generated@@523) ($generated@@522 ($generated@@228 $generated@@523 $generated@@524))))
 :pattern ( ($generated@@228 $generated@@523 $generated@@524))
)))
(assert (forall (($generated@@525 T@U) ($generated@@526 T@U) ) (!  (=> (and (= (type $generated@@525) $generated@@156) (= (type $generated@@526) $generated@@156)) (< ($generated@@521 $generated@@526) ($generated@@522 ($generated@@228 $generated@@525 $generated@@526))))
 :pattern ( ($generated@@228 $generated@@525 $generated@@526))
)))
(assert (forall (($generated@@527 T@U) ($generated@@528 T@U) ($generated@@529 T@U) ) (!  (=> (and (and (and (= (type $generated@@527) $generated@@156) (= (type $generated@@528) $generated@@67)) (= (type $generated@@529) $generated@@67)) ($generated@@229 $generated@@527 ($generated@@398 $generated@@528 $generated@@529))) (and (= ($generated@@273 ($generated@@331 ($generated@@294 $generated@@156 $generated@@156) $generated@@527)) $generated@@527) ($generated@@143 ($generated@@331 ($generated@@294 $generated@@156 $generated@@156) $generated@@527) ($generated@@398 $generated@@528 $generated@@529))))
 :pattern ( ($generated@@229 $generated@@527 ($generated@@398 $generated@@528 $generated@@529)))
)))
(assert (forall (($generated@@530 T@U) ($generated@@531 T@U) ($generated@@532 T@U) ) (!  (=> (and (and (and (= (type $generated@@530) $generated@@156) (= (type $generated@@531) $generated@@67)) (= (type $generated@@532) $generated@@67)) ($generated@@229 $generated@@530 ($generated@@406 $generated@@531 $generated@@532))) (and (= ($generated@@273 ($generated@@331 ($generated@@312 $generated@@156 $generated@@156) $generated@@530)) $generated@@530) ($generated@@143 ($generated@@331 ($generated@@312 $generated@@156 $generated@@156) $generated@@530) ($generated@@406 $generated@@531 $generated@@532))))
 :pattern ( ($generated@@229 $generated@@530 ($generated@@406 $generated@@531 $generated@@532)))
)))
(assert (forall (($generated@@533 T@U) ($generated@@534 T@U) ($generated@@535 T@U) ) (!  (=> (and (and (and (= (type $generated@@533) $generated@@67) (= (type $generated@@534) $generated@@67)) (= (type $generated@@535) $generated@@156)) ($generated@@229 $generated@@535 ($generated@@146 $generated@@533 $generated@@534))) (and (= ($generated@@273 ($generated@@331 $generated@@147 $generated@@535)) $generated@@535) ($generated@@143 ($generated@@331 $generated@@147 $generated@@535) ($generated@@146 $generated@@533 $generated@@534))))
 :pattern ( ($generated@@229 $generated@@535 ($generated@@146 $generated@@533 $generated@@534)))
)))
(assert (forall (($generated@@537 T@T) ) (! (= (type ($generated@@536 $generated@@537)) ($generated@@79 $generated@@537 $generated@@4))
 :pattern ( ($generated@@536 $generated@@537))
)))
(assert (forall (($generated@@538 T@U) ) (! (let (($generated@@539 (type $generated@@538)))
 (not ($generated@@0 ($generated@@84 ($generated@@536 $generated@@539) $generated@@538))))
 :pattern ( (let (($generated@@539 (type $generated@@538)))
($generated@@84 ($generated@@536 $generated@@539) $generated@@538)))
)))
(assert (forall (($generated@@540 T@U) ) (! (let (($generated@@541 (type $generated@@540)))
 (not ($generated@@0 ($generated@@84 ($generated@@417 $generated@@541) $generated@@540))))
 :pattern ( (let (($generated@@541 (type $generated@@540)))
($generated@@84 ($generated@@417 $generated@@541) $generated@@540)))
)))
(assert (forall (($generated@@543 T@U) ) (! (= (type ($generated@@542 $generated@@543)) $generated@@72)
 :pattern ( ($generated@@542 $generated@@543))
)))
(assert (forall (($generated@@544 T@U) ($generated@@545 T@U) ) (!  (=> (and (= (type $generated@@544) $generated@@67) (= (type $generated@@545) $generated@@67)) (and (= ($generated@@75 ($generated@@146 $generated@@544 $generated@@545)) $generated@@62) (= ($generated@@542 ($generated@@146 $generated@@544 $generated@@545)) $generated@@65)))
 :pattern ( ($generated@@146 $generated@@544 $generated@@545))
)))
(assert (forall (($generated@@546 T@U) ) (!  (=> (= (type $generated@@546) $generated@@147) (= ($generated@@521 ($generated@@273 $generated@@546)) ($generated@@522 $generated@@546)))
 :pattern ( ($generated@@521 ($generated@@273 $generated@@546)))
)))
(assert (forall (($generated@@547 T@U) ) (!  (=> (and (= (type $generated@@547) $generated@@156) ($generated@@229 $generated@@547 ($generated@@78 0))) (and (= ($generated@@273 ($generated@@331 $generated@@2 $generated@@547)) $generated@@547) ($generated@@143 ($generated@@331 ($generated@@79 $generated@@156 $generated@@4) $generated@@547) ($generated@@78 0))))
 :pattern ( ($generated@@229 $generated@@547 ($generated@@78 0)))
)))
(assert (forall (($generated@@548 T@U) ($generated@@549 T@U) ) (!  (=> (and (and (= (type $generated@@548) $generated@@156) (= (type $generated@@549) $generated@@67)) ($generated@@229 $generated@@548 ($generated@@238 $generated@@549))) (and (= ($generated@@273 ($generated@@331 ($generated@@79 $generated@@156 $generated@@4) $generated@@548)) $generated@@548) ($generated@@143 ($generated@@331 ($generated@@79 $generated@@156 $generated@@4) $generated@@548) ($generated@@238 $generated@@549))))
 :pattern ( ($generated@@229 $generated@@548 ($generated@@238 $generated@@549)))
)))
(assert (forall (($generated@@550 T@U) ($generated@@551 T@U) ) (!  (=> (and (and (= (type $generated@@550) $generated@@156) (= (type $generated@@551) $generated@@67)) ($generated@@229 $generated@@550 ($generated@@243 $generated@@551))) (and (= ($generated@@273 ($generated@@331 ($generated@@79 $generated@@156 $generated@@4) $generated@@550)) $generated@@550) ($generated@@143 ($generated@@331 ($generated@@79 $generated@@156 $generated@@4) $generated@@550) ($generated@@243 $generated@@551))))
 :pattern ( ($generated@@229 $generated@@550 ($generated@@243 $generated@@551)))
)))
(assert (forall (($generated@@552 T@U) ($generated@@553 T@U) ) (!  (=> (and (and (= (type $generated@@552) $generated@@156) (= (type $generated@@553) $generated@@67)) ($generated@@229 $generated@@552 ($generated@@161 $generated@@553))) (and (= ($generated@@273 ($generated@@331 ($generated@@79 $generated@@156 $generated@@2) $generated@@552)) $generated@@552) ($generated@@143 ($generated@@331 ($generated@@79 $generated@@156 $generated@@2) $generated@@552) ($generated@@161 $generated@@553))))
 :pattern ( ($generated@@229 $generated@@552 ($generated@@161 $generated@@553)))
)))
(assert (forall (($generated@@554 T@U) ($generated@@555 T@U) ) (!  (=> (and (and (= (type $generated@@554) $generated@@156) (= (type $generated@@555) $generated@@67)) ($generated@@229 $generated@@554 ($generated@@483 $generated@@555))) (and (= ($generated@@273 ($generated@@331 ($generated@@267 $generated@@156) $generated@@554)) $generated@@554) ($generated@@143 ($generated@@331 ($generated@@267 $generated@@156) $generated@@554) ($generated@@483 $generated@@555))))
 :pattern ( ($generated@@229 $generated@@554 ($generated@@483 $generated@@555)))
)))
(assert (forall (($generated@@556 T@U) ($generated@@557 T@U) ($generated@@558 T@U) ($generated@@559 T@U) ) (! (let (($generated@@560 (type $generated@@559)))
 (=> (and (and (and (= (type $generated@@556) ($generated@@79 $generated@@80 $generated@@81)) (= (type $generated@@557) $generated@@80)) (= (type $generated@@558) ($generated@@69 $generated@@560))) ($generated@@252 ($generated@@85 $generated@@556 $generated@@557 ($generated@@87 ($generated@@84 $generated@@556 $generated@@557) $generated@@558 $generated@@559)))) ($generated@@135 $generated@@556 ($generated@@85 $generated@@556 $generated@@557 ($generated@@87 ($generated@@84 $generated@@556 $generated@@557) $generated@@558 $generated@@559)))))
 :pattern ( ($generated@@85 $generated@@556 $generated@@557 ($generated@@87 ($generated@@84 $generated@@556 $generated@@557) $generated@@558 $generated@@559)))
)))
(assert (= ($generated@@75 $generated@@139) $generated@@63))
(assert (= ($generated@@542 $generated@@139) $generated@@66))
(assert (= ($generated@@75 $generated@@225) $generated@@64))
(assert (= ($generated@@542 $generated@@225) $generated@@66))
(assert (forall (($generated@@561 T@U) ($generated@@562 T@U) ($generated@@563 T@U) ) (!  (=> (and (and (= (type $generated@@561) ($generated@@79 $generated@@156 $generated@@2)) (= (type $generated@@562) $generated@@67)) (= (type $generated@@563) ($generated@@79 $generated@@80 $generated@@81))) (= ($generated@@77 $generated@@561 ($generated@@161 $generated@@562) $generated@@563) (forall (($generated@@564 T@U) ) (!  (=> (and (= (type $generated@@564) $generated@@156) (< 0 ($generated ($generated@@84 $generated@@561 $generated@@564)))) ($generated@@253 $generated@@564 $generated@@562 $generated@@563))
 :pattern ( ($generated@@84 $generated@@561 $generated@@564))
))))
 :pattern ( ($generated@@77 $generated@@561 ($generated@@161 $generated@@562) $generated@@563))
)))
(assert (forall (($generated@@565 T@U) ($generated@@566 T@U) ($generated@@567 T@U) ) (!  (=> (and (and (and (= (type $generated@@565) $generated@@147) (= (type $generated@@566) $generated@@67)) (= (type $generated@@567) ($generated@@79 $generated@@80 $generated@@81))) (and ($generated@@252 $generated@@567) (and ($generated@@145 $generated@@565) (exists (($generated@@568 T@U) ) (!  (and (= (type $generated@@568) $generated@@67) ($generated@@77 $generated@@565 ($generated@@146 $generated@@566 $generated@@568) $generated@@567))
 :pattern ( ($generated@@77 $generated@@565 ($generated@@146 $generated@@566 $generated@@568) $generated@@567))
))))) ($generated@@253 ($generated@@154 $generated@@565) $generated@@566 $generated@@567))
 :pattern ( ($generated@@253 ($generated@@154 $generated@@565) $generated@@566 $generated@@567))
)))
(assert (forall (($generated@@569 T@U) ($generated@@570 T@U) ($generated@@571 T@U) ) (!  (=> (and (and (and (= (type $generated@@569) $generated@@147) (= (type $generated@@570) $generated@@67)) (= (type $generated@@571) ($generated@@79 $generated@@80 $generated@@81))) (and ($generated@@252 $generated@@571) (and ($generated@@145 $generated@@569) (exists (($generated@@572 T@U) ) (!  (and (= (type $generated@@572) $generated@@67) ($generated@@77 $generated@@569 ($generated@@146 $generated@@572 $generated@@570) $generated@@571))
 :pattern ( ($generated@@77 $generated@@569 ($generated@@146 $generated@@572 $generated@@570) $generated@@571))
))))) ($generated@@253 ($generated@@155 $generated@@569) $generated@@570 $generated@@571))
 :pattern ( ($generated@@253 ($generated@@155 $generated@@569) $generated@@570 $generated@@571))
)))
(assert (forall (($generated@@573 T@U) ($generated@@574 T@U) ) (!  (=> (and (= (type $generated@@573) $generated@@156) (= (type $generated@@574) $generated@@156)) (= ($generated@@228 ($generated@@248 $generated@@573) ($generated@@248 $generated@@574)) ($generated@@248 ($generated@@228 $generated@@573 $generated@@574))))
 :pattern ( ($generated@@228 ($generated@@248 $generated@@573) ($generated@@248 $generated@@574)))
)))
(assert (forall (($generated@@575 T@U) ) (! (= ($generated@@273 ($generated@@248 $generated@@575)) ($generated@@248 ($generated@@273 $generated@@575)))
 :pattern ( ($generated@@273 ($generated@@248 $generated@@575)))
)))
(assert (forall (($generated@@576 T@U) ) (! (let (($generated@@577 ($generated@@268 (type $generated@@576))))
 (=> (and (= (type $generated@@576) ($generated@@267 $generated@@577)) (= ($generated@@266 $generated@@576) 0)) (= $generated@@576 ($generated@@265 $generated@@577))))
 :pattern ( ($generated@@266 $generated@@576))
)))
(assert (forall (($generated@@578 T@U) ($generated@@579 T@U) ($generated@@580 T@U) ) (! (let (($generated@@581 (type $generated@@579)))
 (=> (and (and (= (type $generated@@578) ($generated@@79 $generated@@581 $generated@@2)) (= (type $generated@@580) $generated@@2)) (<= 0 ($generated $generated@@580))) (= ($generated@@286 ($generated@@85 $generated@@578 $generated@@579 $generated@@580)) (+ (- ($generated@@286 $generated@@578) ($generated ($generated@@84 $generated@@578 $generated@@579))) ($generated $generated@@580)))))
 :pattern ( ($generated@@286 ($generated@@85 $generated@@578 $generated@@579 $generated@@580)))
)))
(assert (forall (($generated@@582 T@U) ($generated@@583 T@U) ) (!  (=> (and (= (type $generated@@582) ($generated@@79 $generated@@80 $generated@@81)) (= (type $generated@@583) $generated@@2)) ($generated@@77 $generated@@583 $generated@@46 $generated@@582))
 :pattern ( ($generated@@77 $generated@@583 $generated@@46 $generated@@582))
)))
(assert (forall (($generated@@584 T@U) ($generated@@585 T@U) ) (!  (=> (and (= (type $generated@@584) ($generated@@79 $generated@@80 $generated@@81)) (= (type $generated@@585) $generated@@3)) ($generated@@77 $generated@@585 $generated@@47 $generated@@584))
 :pattern ( ($generated@@77 $generated@@585 $generated@@47 $generated@@584))
)))
(assert (forall (($generated@@586 T@U) ($generated@@587 T@U) ) (!  (=> (and (= (type $generated@@586) ($generated@@79 $generated@@80 $generated@@81)) (= (type $generated@@587) $generated@@4)) ($generated@@77 $generated@@587 $generated@@44 $generated@@586))
 :pattern ( ($generated@@77 $generated@@587 $generated@@44 $generated@@586))
)))
(assert (forall (($generated@@588 T@U) ($generated@@589 T@U) ) (!  (=> (and (= (type $generated@@588) ($generated@@79 $generated@@80 $generated@@81)) (= (type $generated@@589) $generated@@441)) ($generated@@77 $generated@@589 $generated@@45 $generated@@588))
 :pattern ( ($generated@@77 $generated@@589 $generated@@45 $generated@@588))
)))
(assert (forall (($generated@@590 T@U) ($generated@@591 T@U) ) (!  (=> (and (= (type $generated@@590) ($generated@@79 $generated@@80 $generated@@81)) (= (type $generated@@591) $generated@@156)) ($generated@@77 $generated@@591 $generated@@48 $generated@@590))
 :pattern ( ($generated@@77 $generated@@591 $generated@@48 $generated@@590))
)))
(assert (forall (($generated@@592 T@U) ($generated@@593 T@U) ) (!  (=> (and (= (type $generated@@592) ($generated@@267 $generated@@156)) (= (type $generated@@593) $generated@@67)) (= ($generated@@143 $generated@@592 ($generated@@483 $generated@@593)) (forall (($generated@@594 Int) ) (!  (=> (and (<= 0 $generated@@594) (< $generated@@594 ($generated@@266 $generated@@592))) ($generated@@229 ($generated@@484 $generated@@592 $generated@@594) $generated@@593))
 :pattern ( ($generated@@484 $generated@@592 $generated@@594))
))))
 :pattern ( ($generated@@143 $generated@@592 ($generated@@483 $generated@@593)))
)))
(assert (forall (($generated@@596 T@U) ($generated@@597 Int) ) (!  (=> (= (type $generated@@596) ($generated@@267 $generated@@156)) (=> (and (<= 0 $generated@@597) (< $generated@@597 ($generated@@266 $generated@@596))) (< ($generated@@522 ($generated@@331 $generated@@147 ($generated@@484 $generated@@596 $generated@@597))) ($generated@@595 $generated@@596))))
 :pattern ( ($generated@@522 ($generated@@331 $generated@@147 ($generated@@484 $generated@@596 $generated@@597))))
)))
(assert (forall (($generated@@598 T@U) ($generated@@599 T@U) ($generated@@600 T@U) ) (!  (=> (and (and (and (= (type $generated@@598) ($generated@@294 $generated@@156 $generated@@156)) (= (type $generated@@599) $generated@@67)) (= (type $generated@@600) $generated@@67)) ($generated@@143 $generated@@598 ($generated@@398 $generated@@599 $generated@@600))) (and (and ($generated@@143 ($generated@@292 $generated@@598) ($generated@@238 $generated@@599)) ($generated@@143 ($generated@@341 $generated@@598) ($generated@@238 $generated@@600))) ($generated@@143 ($generated@@372 $generated@@598) ($generated@@238 ($generated@@146 $generated@@599 $generated@@600)))))
 :pattern ( ($generated@@143 $generated@@598 ($generated@@398 $generated@@599 $generated@@600)))
)))
(assert (forall (($generated@@601 T@U) ($generated@@602 T@U) ($generated@@603 T@U) ) (!  (=> (and (and (and (= (type $generated@@601) ($generated@@312 $generated@@156 $generated@@156)) (= (type $generated@@602) $generated@@67)) (= (type $generated@@603) $generated@@67)) ($generated@@143 $generated@@601 ($generated@@406 $generated@@602 $generated@@603))) (and (and ($generated@@143 ($generated@@310 $generated@@601) ($generated@@243 $generated@@602)) ($generated@@143 ($generated@@352 $generated@@601) ($generated@@243 $generated@@603))) ($generated@@143 ($generated@@380 $generated@@601) ($generated@@243 ($generated@@146 $generated@@602 $generated@@603)))))
 :pattern ( ($generated@@143 $generated@@601 ($generated@@406 $generated@@602 $generated@@603)))
)))
(assert (forall (($generated@@604 T@U) ) (!  (=> (= (type $generated@@604) $generated@@2) ($generated@@143 $generated@@604 $generated@@46))
 :pattern ( ($generated@@143 $generated@@604 $generated@@46))
)))
(assert (forall (($generated@@605 T@U) ) (!  (=> (= (type $generated@@605) $generated@@3) ($generated@@143 $generated@@605 $generated@@47))
 :pattern ( ($generated@@143 $generated@@605 $generated@@47))
)))
(assert (forall (($generated@@606 T@U) ) (!  (=> (= (type $generated@@606) $generated@@4) ($generated@@143 $generated@@606 $generated@@44))
 :pattern ( ($generated@@143 $generated@@606 $generated@@44))
)))
(assert (forall (($generated@@607 T@U) ) (!  (=> (= (type $generated@@607) $generated@@441) ($generated@@143 $generated@@607 $generated@@45))
 :pattern ( ($generated@@143 $generated@@607 $generated@@45))
)))
(assert (forall (($generated@@608 T@U) ) (!  (=> (= (type $generated@@608) $generated@@156) ($generated@@143 $generated@@608 $generated@@48))
 :pattern ( ($generated@@143 $generated@@608 $generated@@48))
)))
(push 1)
(declare-fun ControlFlow (Int Int) Int)
(declare-fun $generated@@609 () T@U)
(declare-fun $generated@@610 () T@U)
(declare-fun $generated@@611 () T@U)
(declare-fun $generated@@612 () T@U)
(declare-fun $generated@@613 (T@U) Bool)
(declare-fun $generated@@614 () T@U)
(declare-fun $generated@@615 () T@U)
(declare-fun $generated@@616 () Bool)
(declare-fun $generated@@617 () T@U)
(declare-fun $generated@@618 () Int)
(assert  (and (and (and (and (and (and (= (type $generated@@609) ($generated@@171 $generated@@80 $generated@@4)) (= (type $generated@@610) ($generated@@79 $generated@@80 $generated@@81))) (= (type $generated@@611) ($generated@@79 $generated@@156 $generated@@4))) (= (type $generated@@612) ($generated@@79 $generated@@80 $generated@@81))) (= (type $generated@@614) $generated@@80)) (= (type $generated@@615) ($generated@@79 $generated@@80 $generated@@81))) (= (type $generated@@617) $generated@@80)))
(set-option :timeout 0)
(set-option :rlimit 0)
(assert (not
 (=> (= (ControlFlow 0 0) 3) (let (($generated@@619  (=> (and (= $generated@@609 ($generated@@170 $generated@@140 $generated@@610 $generated@@60 false)) (= $generated@@611 ($generated@@248 ($generated@@536 $generated@@156)))) (=> (and (and ($generated@@252 $generated@@612) ($generated@@613 $generated@@612)) (and (forall (($generated@@620 T@U) ) (!  (=> (= (type $generated@@620) $generated@@80) (=> (and (not (= $generated@@620 $generated@@140)) ($generated@@0 ($generated@@86 ($generated@@84 $generated@@610 $generated@@620) $generated@@60))) (= ($generated@@84 $generated@@612 $generated@@620) ($generated@@84 $generated@@610 $generated@@620))))
 :pattern ( ($generated@@84 $generated@@612 $generated@@620))
)) ($generated@@135 $generated@@610 $generated@@612))) (=> (and (and (and (not (= $generated@@614 $generated@@140)) (= ($generated@@166 $generated@@614) $generated@@139)) (not ($generated@@0 ($generated@@86 ($generated@@84 $generated@@612 $generated@@614) $generated@@60)))) (and (and (= $generated@@615 ($generated@@85 $generated@@612 $generated@@614 ($generated@@87 ($generated@@84 $generated@@612 $generated@@614) $generated@@60 ($generated@@11 true)))) ($generated@@252 $generated@@615)) (and ($generated@@613 $generated@@615) (= (ControlFlow 0 2) (- 0 1))))) true)))))
(let (($generated@@621  (=> (and ($generated@@252 $generated@@610) ($generated@@613 $generated@@610)) (=> (and (and (=> $generated@@616 (and ($generated@@143 $generated@@617 $generated@@225) ($generated@@77 $generated@@617 $generated@@225 $generated@@610))) true) (and (= 2 $generated@@618) (= (ControlFlow 0 3) 2))) $generated@@619))))
$generated@@621)))
))
(check-sat)
(pop 1)
; Valid
(get-info :rlimit)
(reset)
(set-option :rlimit 0)
; did a full reset
(reset)
(set-option :print-success false)
(set-info :smt-lib-version 2.6)
(set-option :auto_config false)
(set-option :type_check true)
(set-option :smt.case_split 3)
(set-option :smt.qi.eager_threshold 100)
(set-option :smt.delay_units true)
(set-option :smt.arith.solver 2)
(set-option :smt.mbqi false)
(set-option :model.compact false)
(set-option :model.v2 true)
(set-option :pp.bv_literals false)
; done setting options


(set-info :category "industrial")
(declare-sort |T@U| 0)
(declare-sort |T@T| 0)
(declare-fun real_pow (Real Real) Real)
(declare-fun UOrdering2 (|T@U| |T@U|) Bool)
(declare-fun UOrdering3 (|T@T| |T@U| |T@U|) Bool)
(declare-fun tickleBool (Bool) Bool)
(assert (and (tickleBool true) (tickleBool false)))
(declare-fun $generated (T@U) Int)
(declare-fun $generated@@0 (T@U) Bool)
(declare-fun $generated@@1 (T@T) Int)
(declare-fun $generated@@2 () T@T)
(declare-fun $generated@@3 () T@T)
(declare-fun $generated@@4 () T@T)
(declare-fun $generated@@5 () T@T)
(declare-fun $generated@@6 () T@T)
(declare-fun $generated@@7 () T@T)
(declare-fun $generated@@8 (Int) T@U)
(declare-fun type (T@U) T@T)
(declare-fun $generated@@9 (Real) T@U)
(declare-fun $generated@@10 (T@U) Real)
(declare-fun $generated@@11 (Bool) T@U)
(declare-fun $generated@@12 (RoundingMode) T@U)
(declare-fun $generated@@13 (T@U) RoundingMode)
(declare-fun $generated@@14 (String) T@U)
(declare-fun $generated@@15 (T@U) String)
(declare-fun $generated@@16 ((RegEx String)) T@U)
(declare-fun $generated@@17 (T@U) (RegEx String))
(declare-fun $generated@@44 () T@U)
(declare-fun $generated@@45 () T@U)
(declare-fun $generated@@46 () T@U)
(declare-fun $generated@@47 () T@U)
(declare-fun $generated@@48 () T@U)
(declare-fun $generated@@49 () T@U)
(declare-fun $generated@@50 () T@U)
(declare-fun $generated@@51 () T@U)
(declare-fun $generated@@52 () T@U)
(declare-fun $generated@@53 () T@U)
(declare-fun $generated@@54 () T@U)
(declare-fun $generated@@55 () T@U)
(declare-fun $generated@@56 () T@U)
(declare-fun $generated@@57 () T@U)
(declare-fun $generated@@58 () T@U)
(declare-fun $generated@@59 () T@U)
(declare-fun $generated@@60 () T@U)
(declare-fun $generated@@61 () T@U)
(declare-fun $generated@@62 () T@U)
(declare-fun $generated@@63 () T@U)
(declare-fun $generated@@64 () T@U)
(declare-fun $generated@@65 () T@U)
(declare-fun $generated@@66 () T@U)
(declare-fun $generated@@67 () T@T)
(declare-fun $generated@@68 () T@T)
(declare-fun $generated@@69 (T@T) T@T)
(declare-fun $generated@@70 (T@T) T@T)
(declare-fun $generated@@71 () T@T)
(declare-fun $generated@@72 () T@T)
(declare-fun $generated@@75 (T@U) T@U)
(declare-fun $generated@@77 (T@U T@U T@U) Bool)
(declare-fun $generated@@78 (Int) T@U)
(declare-fun $generated@@79 (T@T T@T) T@T)
(declare-fun $generated@@80 () T@T)
(declare-fun $generated@@81 () T@T)
(declare-fun $generated@@82 (T@T) T@T)
(declare-fun $generated@@83 (T@T) T@T)
(declare-fun $generated@@84 (T@U T@U) T@U)
(declare-fun $generated@@85 (T@U T@U T@U) T@U)
(declare-fun $generated@@86 (T@U T@U) T@U)
(declare-fun $generated@@87 (T@U T@U T@U) T@U)
(declare-fun $generated@@135 () T@U)
(declare-fun $generated@@136 () T@U)
(declare-fun $generated@@139 (T@U T@U) Bool)
(declare-fun $generated@@141 (T@U) Bool)
(declare-fun $generated@@142 (T@U T@U) T@U)
(declare-fun $generated@@143 () T@T)
(declare-fun $generated@@149 (T@U T@U) Bool)
(declare-fun $generated@@150 (T@U) T@U)
(declare-fun $generated@@151 (T@U) T@U)
(declare-fun $generated@@152 () T@T)
(declare-fun $generated@@157 (T@U) T@U)
(declare-fun $generated@@158 (T@U) Bool)
(declare-fun $generated@@162 (T@U) T@U)
(declare-fun $generated@@165 (T@U T@U T@U) T@U)
(declare-fun $generated@@166 (T@U T@U T@U Bool) T@U)
(declare-fun $generated@@167 (T@T T@T) T@T)
(declare-fun $generated@@168 (T@T) T@T)
(declare-fun $generated@@169 (T@T) T@T)
(declare-fun $generated@@170 (T@U T@U T@U T@U) T@U)
(declare-fun $generated@@221 () T@U)
(declare-fun $generated@@224 (T@U T@U) T@U)
(declare-fun $generated@@225 (T@U T@U) Bool)
(declare-fun $generated@@234 (T@U) T@U)
(declare-fun $generated@@239 (T@U) T@U)
(declare-fun $generated@@244 (T@U) T@U)
(declare-fun $generated@@248 (T@U) Bool)
(declare-fun $generated@@249 (T@U T@U T@U) Bool)
(declare-fun $generated@@255 (T@U) T@U)
(declare-fun $generated@@261 (T@T) T@U)
(declare-fun $generated@@262 (T@U) Int)
(declare-fun $generated@@263 (T@T) T@T)
(declare-fun $generated@@264 (T@T) T@T)
(declare-fun $generated@@269 (T@U) T@U)
(declare-fun $generated@@274 (T@U) Int)
(declare-fun $generated@@275 (T@T) T@U)
(declare-fun $generated@@280 (T@U) T@U)
(declare-fun $generated@@281 (T@T T@T) T@U)
(declare-fun $generated@@282 (T@T T@T) T@T)
(declare-fun $generated@@283 (T@T) T@T)
(declare-fun $generated@@284 (T@T) T@T)
(declare-fun $generated@@298 (T@U) T@U)
(declare-fun $generated@@299 (T@T T@T) T@U)
(declare-fun $generated@@300 (T@T T@T) T@T)
(declare-fun $generated@@301 (T@T) T@T)
(declare-fun $generated@@302 (T@T) T@T)
(declare-fun $generated@@319 (T@T T@U) T@U)
(declare-fun $generated@@329 (T@U) T@U)
(declare-fun $generated@@340 (T@U) T@U)
(declare-fun $generated@@360 (T@U) T@U)
(declare-fun $generated@@361 (T@U) T@U)
(declare-fun $generated@@368 (T@U) T@U)
(declare-fun $generated@@369 (T@U) T@U)
(declare-fun $generated@@386 (T@U T@U) T@U)
(declare-fun $generated@@394 (T@U T@U) T@U)
(declare-fun $generated@@402 (T@T) T@U)
(declare-fun $generated@@426 () T@T)
(declare-fun $generated@@434 (T@U) T@U)
(declare-fun $generated@@438 (T@U) T@U)
(declare-fun $generated@@444 (T@U) T@U)
(declare-fun $generated@@448 (T@U) T@U)
(declare-fun $generated@@456 (T@U) T@U)
(declare-fun $generated@@460 (T@U) T@U)
(declare-fun $generated@@468 (T@U) T@U)
(declare-fun $generated@@469 (T@U Int) T@U)
(declare-fun $generated@@478 (T@U) Int)
(declare-fun $generated@@480 (T@U) T@U)
(declare-fun $generated@@484 (T@U) T@U)
(declare-fun $generated@@488 (T@U) T@U)
(declare-fun $generated@@492 (T@U) T@U)
(declare-fun $generated@@506 (T@U) Int)
(declare-fun $generated@@507 (T@U) Int)
(declare-fun $generated@@523 (T@U) T@U)
(declare-fun $generated@@571 (T@U) Int)
(assert  (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (= ($generated@@1 $generated@@2) 0) (= ($generated@@1 $generated@@3) 1)) (= ($generated@@1 $generated@@4) 2)) (= ($generated@@1 $generated@@5) 3)) (= ($generated@@1 $generated@@6) 4)) (= ($generated@@1 $generated@@7) 5)) (forall (($generated@@18 Int) ) (! (= ($generated ($generated@@8 $generated@@18)) $generated@@18)
 :pattern ( ($generated@@8 $generated@@18))
))) (forall (($generated@@19 T@U) ) (!  (=> (= (type $generated@@19) $generated@@2) (= ($generated@@8 ($generated $generated@@19)) $generated@@19))
 :pattern ( ($generated $generated@@19))
))) (forall (($generated@@20 Int) ) (! (= (type ($generated@@8 $generated@@20)) $generated@@2)
 :pattern ( ($generated@@8 $generated@@20))
))) (forall (($generated@@21 Real) ) (! (= ($generated@@10 ($generated@@9 $generated@@21)) $generated@@21)
 :pattern ( ($generated@@9 $generated@@21))
))) (forall (($generated@@22 T@U) ) (!  (=> (= (type $generated@@22) $generated@@3) (= ($generated@@9 ($generated@@10 $generated@@22)) $generated@@22))
 :pattern ( ($generated@@10 $generated@@22))
))) (forall (($generated@@23 Real) ) (! (= (type ($generated@@9 $generated@@23)) $generated@@3)
 :pattern ( ($generated@@9 $generated@@23))
))) (forall (($generated@@24 Bool) ) (! (= ($generated@@0 ($generated@@11 $generated@@24)) $generated@@24)
 :pattern ( ($generated@@11 $generated@@24))
))) (forall (($generated@@25 T@U) ) (!  (=> (= (type $generated@@25) $generated@@4) (= ($generated@@11 ($generated@@0 $generated@@25)) $generated@@25))
 :pattern ( ($generated@@0 $generated@@25))
))) (forall (($generated@@26 Bool) ) (! (= (type ($generated@@11 $generated@@26)) $generated@@4)
 :pattern ( ($generated@@11 $generated@@26))
))) (forall (($generated@@27 RoundingMode) ) (! (= ($generated@@13 ($generated@@12 $generated@@27)) $generated@@27)
 :pattern ( ($generated@@12 $generated@@27))
))) (forall (($generated@@28 T@U) ) (!  (=> (= (type $generated@@28) $generated@@5) (= ($generated@@12 ($generated@@13 $generated@@28)) $generated@@28))
 :pattern ( ($generated@@13 $generated@@28))
))) (forall (($generated@@29 RoundingMode) ) (! (= (type ($generated@@12 $generated@@29)) $generated@@5)
 :pattern ( ($generated@@12 $generated@@29))
))) (forall (($generated@@30 String) ) (! (= ($generated@@15 ($generated@@14 $generated@@30)) $generated@@30)
 :pattern ( ($generated@@14 $generated@@30))
))) (forall (($generated@@31 T@U) ) (!  (=> (= (type $generated@@31) $generated@@6) (= ($generated@@14 ($generated@@15 $generated@@31)) $generated@@31))
 :pattern ( ($generated@@15 $generated@@31))
))) (forall (($generated@@32 String) ) (! (= (type ($generated@@14 $generated@@32)) $generated@@6)
 :pattern ( ($generated@@14 $generated@@32))
))) (forall (($generated@@33 (RegEx String)) ) (! (= ($generated@@17 ($generated@@16 $generated@@33)) $generated@@33)
 :pattern ( ($generated@@16 $generated@@33))
))) (forall (($generated@@34 T@U) ) (!  (=> (= (type $generated@@34) $generated@@7) (= ($generated@@16 ($generated@@17 $generated@@34)) $generated@@34))
 :pattern ( ($generated@@17 $generated@@34))
))) (forall (($generated@@35 (RegEx String)) ) (! (= (type ($generated@@16 $generated@@35)) $generated@@7)
 :pattern ( ($generated@@16 $generated@@35))
))))
(assert (forall (($generated@@36 T@U) ) (! (UOrdering2 $generated@@36 $generated@@36)
 :no-pattern ($generated $generated@@36)
 :no-pattern ($generated@@0 $generated@@36)
)))
(assert (forall (($generated@@37 T@U) ($generated@@38 T@U) ($generated@@39 T@U) ) (! (let (($generated@@40 (type $generated@@37)))
 (=> (and (and (= (type $generated@@38) $generated@@40) (= (type $generated@@39) $generated@@40)) (and (UOrdering2 $generated@@37 $generated@@38) (UOrdering2 $generated@@38 $generated@@39))) (UOrdering2 $generated@@37 $generated@@39)))
 :pattern ( (UOrdering2 $generated@@37 $generated@@38) (UOrdering2 $generated@@38 $generated@@39))
)))
(assert (forall (($generated@@41 T@U) ($generated@@42 T@U) ) (! (let (($generated@@43 (type $generated@@41)))
 (=> (= (type $generated@@42) $generated@@43) (=> (and (UOrdering2 $generated@@41 $generated@@42) (UOrdering2 $generated@@42 $generated@@41)) (= $generated@@41 $generated@@42))))
 :pattern ( (UOrdering2 $generated@@41 $generated@@42) (UOrdering2 $generated@@42 $generated@@41))
)))
(assert  (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (= ($generated@@1 $generated@@67) 6) (= (type $generated@@44) $generated@@67)) (= (type $generated@@45) $generated@@67)) (= (type $generated@@46) $generated@@67)) (= (type $generated@@47) $generated@@67)) (= (type $generated@@48) $generated@@67)) (= ($generated@@1 $generated@@68) 7)) (= (type $generated@@49) $generated@@68)) (= (type $generated@@50) $generated@@68)) (= (type $generated@@51) $generated@@68)) (= (type $generated@@52) $generated@@68)) (= (type $generated@@53) $generated@@68)) (= (type $generated@@54) $generated@@68)) (= (type $generated@@55) $generated@@68)) (= (type $generated@@56) $generated@@68)) (= (type $generated@@57) $generated@@68)) (= (type $generated@@58) $generated@@68)) (= (type $generated@@59) $generated@@68)) (forall (($generated@@73 T@T) ) (= ($generated@@1 ($generated@@69 $generated@@73)) 8))) (forall (($generated@@74 T@T) ) (! (= ($generated@@70 ($generated@@69 $generated@@74)) $generated@@74)
 :pattern ( ($generated@@69 $generated@@74))
))) (= (type $generated@@60) ($generated@@69 $generated@@4))) (= ($generated@@1 $generated@@71) 9)) (= (type $generated@@61) $generated@@71)) (= (type $generated@@62) $generated@@68)) (= (type $generated@@63) $generated@@68)) (= (type $generated@@64) $generated@@68)) (= ($generated@@1 $generated@@72) 10)) (= (type $generated@@65) $generated@@72)) (= (type $generated@@66) $generated@@72)))
(assert (distinct $generated@@44 $generated@@45 $generated@@46 $generated@@47 $generated@@48 $generated@@49 $generated@@50 $generated@@51 $generated@@52 $generated@@53 $generated@@54 $generated@@55 $generated@@56 $generated@@57 $generated@@58 $generated@@59 $generated@@60 $generated@@61 $generated@@62 $generated@@63 $generated@@64 $generated@@65 $generated@@66)
)
(assert (forall (($generated@@76 T@U) ) (! (= (type ($generated@@75 $generated@@76)) $generated@@68)
 :pattern ( ($generated@@75 $generated@@76))
)))
(assert (= ($generated@@75 $generated@@44) $generated@@49))
(assert (= ($generated@@75 $generated@@45) $generated@@50))
(assert (= ($generated@@75 $generated@@46) $generated@@51))
(assert (= ($generated@@75 $generated@@47) $generated@@52))
(assert (= ($generated@@75 $generated@@48) $generated@@53))
(assert  (and (and (and (and (and (and (and (and (and (and (and (and (and (forall (($generated@@88 T@T) ($generated@@89 T@T) ) (= ($generated@@1 ($generated@@79 $generated@@88 $generated@@89)) 11)) (forall (($generated@@90 T@T) ($generated@@91 T@T) ) (! (= ($generated@@82 ($generated@@79 $generated@@90 $generated@@91)) $generated@@90)
 :pattern ( ($generated@@79 $generated@@90 $generated@@91))
))) (forall (($generated@@92 T@T) ($generated@@93 T@T) ) (! (= ($generated@@83 ($generated@@79 $generated@@92 $generated@@93)) $generated@@93)
 :pattern ( ($generated@@79 $generated@@92 $generated@@93))
))) (forall (($generated@@94 T@U) ($generated@@95 T@U) ) (! (let (($generated@@96 ($generated@@83 (type $generated@@94))))
(= (type ($generated@@84 $generated@@94 $generated@@95)) $generated@@96))
 :pattern ( ($generated@@84 $generated@@94 $generated@@95))
))) (forall (($generated@@97 T@U) ($generated@@98 T@U) ($generated@@99 T@U) ) (! (let (($generated@@100 (type $generated@@99)))
(let (($generated@@101 (type $generated@@98)))
(= (type ($generated@@85 $generated@@97 $generated@@98 $generated@@99)) ($generated@@79 $generated@@101 $generated@@100))))
 :pattern ( ($generated@@85 $generated@@97 $generated@@98 $generated@@99))
))) (forall (($generated@@102 T@U) ($generated@@103 T@U) ($generated@@104 T@U) ) (! (let (($generated@@105 ($generated@@83 (type $generated@@102))))
 (=> (= (type $generated@@104) $generated@@105) (= ($generated@@84 ($generated@@85 $generated@@102 $generated@@103 $generated@@104) $generated@@103) $generated@@104)))
 :weight 0
))) (and (forall (($generated@@106 T@U) ($generated@@107 T@U) ($generated@@108 T@U) ($generated@@109 T@U) ) (!  (or (= $generated@@108 $generated@@109) (= ($generated@@84 ($generated@@85 $generated@@107 $generated@@108 $generated@@106) $generated@@109) ($generated@@84 $generated@@107 $generated@@109)))
 :weight 0
)) (forall (($generated@@110 T@U) ($generated@@111 T@U) ($generated@@112 T@U) ($generated@@113 T@U) ) (!  (or true (= ($generated@@84 ($generated@@85 $generated@@111 $generated@@112 $generated@@110) $generated@@113) ($generated@@84 $generated@@111 $generated@@113)))
 :weight 0
)))) (= ($generated@@1 $generated@@80) 12)) (forall (($generated@@114 T@U) ($generated@@115 T@U) ) (! (let (($generated@@116 ($generated@@70 (type $generated@@115))))
(= (type ($generated@@86 $generated@@114 $generated@@115)) $generated@@116))
 :pattern ( ($generated@@86 $generated@@114 $generated@@115))
))) (= ($generated@@1 $generated@@81) 13)) (forall (($generated@@117 T@U) ($generated@@118 T@U) ($generated@@119 T@U) ) (! (= (type ($generated@@87 $generated@@117 $generated@@118 $generated@@119)) $generated@@81)
 :pattern ( ($generated@@87 $generated@@117 $generated@@118 $generated@@119))
))) (forall (($generated@@120 T@U) ($generated@@121 T@U) ($generated@@122 T@U) ) (! (let (($generated@@123 ($generated@@70 (type $generated@@121))))
 (=> (= (type $generated@@122) $generated@@123) (= ($generated@@86 ($generated@@87 $generated@@120 $generated@@121 $generated@@122) $generated@@121) $generated@@122)))
 :weight 0
))) (and (forall (($generated@@124 T@U) ($generated@@125 T@U) ($generated@@126 T@U) ($generated@@127 T@U) ) (!  (or (= $generated@@126 $generated@@127) (= ($generated@@86 ($generated@@87 $generated@@125 $generated@@126 $generated@@124) $generated@@127) ($generated@@86 $generated@@125 $generated@@127)))
 :weight 0
)) (forall (($generated@@128 T@U) ($generated@@129 T@U) ($generated@@130 T@U) ($generated@@131 T@U) ) (!  (or true (= ($generated@@86 ($generated@@87 $generated@@129 $generated@@130 $generated@@128) $generated@@131) ($generated@@86 $generated@@129 $generated@@131)))
 :weight 0
)))) (forall (($generated@@132 Int) ) (! (= (type ($generated@@78 $generated@@132)) $generated@@67)
 :pattern ( ($generated@@78 $generated@@132))
))))
(assert (forall (($generated@@133 T@U) ($generated@@134 T@U) ) (!  (=> (and (= (type $generated@@133) $generated@@2) (= (type $generated@@134) ($generated@@79 $generated@@80 $generated@@81))) ($generated@@77 $generated@@133 ($generated@@78 0) $generated@@134))
 :pattern ( ($generated@@77 $generated@@133 ($generated@@78 0) $generated@@134))
)))
(assert  (and (= (type $generated@@135) $generated@@67) (= (type $generated@@136) $generated@@80)))
(assert (forall (($generated@@137 T@U) ($generated@@138 T@U) ) (!  (=> (and (= (type $generated@@137) $generated@@80) (= (type $generated@@138) ($generated@@79 $generated@@80 $generated@@81))) (= ($generated@@77 $generated@@137 $generated@@135 $generated@@138)  (or (= $generated@@137 $generated@@136) ($generated@@0 ($generated@@86 ($generated@@84 $generated@@138 $generated@@137) $generated@@60)))))
 :pattern ( ($generated@@77 $generated@@137 $generated@@135 $generated@@138))
)))
(assert (forall (($generated@@140 T@U) ) (!  (=> (= (type $generated@@140) $generated@@2) ($generated@@139 $generated@@140 ($generated@@78 0)))
 :pattern ( ($generated@@139 $generated@@140 ($generated@@78 0)))
)))
(assert  (and (= ($generated@@1 $generated@@143) 14) (forall (($generated@@144 T@U) ($generated@@145 T@U) ) (! (= (type ($generated@@142 $generated@@144 $generated@@145)) $generated@@67)
 :pattern ( ($generated@@142 $generated@@144 $generated@@145))
))))
(assert (forall (($generated@@146 T@U) ($generated@@147 T@U) ($generated@@148 T@U) ) (!  (=> (and (and (and (= (type $generated@@146) $generated@@67) (= (type $generated@@147) $generated@@67)) (= (type $generated@@148) $generated@@143)) ($generated@@139 $generated@@148 ($generated@@142 $generated@@146 $generated@@147))) ($generated@@141 $generated@@148))
 :pattern ( ($generated@@141 $generated@@148) ($generated@@139 $generated@@148 ($generated@@142 $generated@@146 $generated@@147)))
)))
(assert  (and (and (= ($generated@@1 $generated@@152) 15) (forall (($generated@@153 T@U) ) (! (= (type ($generated@@150 $generated@@153)) $generated@@152)
 :pattern ( ($generated@@150 $generated@@153))
))) (forall (($generated@@154 T@U) ) (! (= (type ($generated@@151 $generated@@154)) $generated@@152)
 :pattern ( ($generated@@151 $generated@@154))
))))
(assert (forall (($generated@@155 T@U) ($generated@@156 T@U) ) (!  (=> (and (and (= (type $generated@@155) $generated@@143) (= (type $generated@@156) $generated@@143)) true) (= ($generated@@149 $generated@@155 $generated@@156)  (and (= ($generated@@150 $generated@@155) ($generated@@150 $generated@@156)) (= ($generated@@151 $generated@@155) ($generated@@151 $generated@@156)))))
 :pattern ( ($generated@@149 $generated@@155 $generated@@156))
)))
(assert (forall (($generated@@159 T@U) ) (! (= (type ($generated@@157 $generated@@159)) $generated@@67)
 :pattern ( ($generated@@157 $generated@@159))
)))
(assert (forall (($generated@@160 T@U) ($generated@@161 T@U) ) (!  (=> (and (and (= (type $generated@@160) ($generated@@79 $generated@@152 $generated@@2)) (= (type $generated@@161) $generated@@67)) ($generated@@139 $generated@@160 ($generated@@157 $generated@@161))) ($generated@@158 $generated@@160))
 :pattern ( ($generated@@139 $generated@@160 ($generated@@157 $generated@@161)))
)))
(assert (forall (($generated@@163 T@U) ) (! (= (type ($generated@@162 $generated@@163)) $generated@@67)
 :pattern ( ($generated@@162 $generated@@163))
)))
(assert (forall (($generated@@164 T@U) ) (!  (=> (= (type $generated@@164) $generated@@80) (= ($generated@@139 $generated@@164 $generated@@135)  (or (= $generated@@164 $generated@@136) (= ($generated@@162 $generated@@164) $generated@@135))))
 :pattern ( ($generated@@139 $generated@@164 $generated@@135))
)))
(assert  (and (and (and (and (and (and (and (forall (($generated@@171 T@T) ($generated@@172 T@T) ) (= ($generated@@1 ($generated@@167 $generated@@171 $generated@@172)) 16)) (forall (($generated@@173 T@T) ($generated@@174 T@T) ) (! (= ($generated@@168 ($generated@@167 $generated@@173 $generated@@174)) $generated@@173)
 :pattern ( ($generated@@167 $generated@@173 $generated@@174))
))) (forall (($generated@@175 T@T) ($generated@@176 T@T) ) (! (= ($generated@@169 ($generated@@167 $generated@@175 $generated@@176)) $generated@@176)
 :pattern ( ($generated@@167 $generated@@175 $generated@@176))
))) (forall (($generated@@177 T@U) ($generated@@178 T@U) ($generated@@179 T@U) ) (! (let (($generated@@180 ($generated@@169 (type $generated@@177))))
(= (type ($generated@@165 $generated@@177 $generated@@178 $generated@@179)) $generated@@180))
 :pattern ( ($generated@@165 $generated@@177 $generated@@178 $generated@@179))
))) (forall (($generated@@181 T@U) ($generated@@182 T@U) ($generated@@183 T@U) ($generated@@184 T@U) ) (! (let (($generated@@185 (type $generated@@184)))
(let (($generated@@186 (type $generated@@182)))
(= (type ($generated@@170 $generated@@181 $generated@@182 $generated@@183 $generated@@184)) ($generated@@167 $generated@@186 $generated@@185))))
 :pattern ( ($generated@@170 $generated@@181 $generated@@182 $generated@@183 $generated@@184))
))) (forall (($generated@@187 T@U) ($generated@@188 T@U) ($generated@@189 T@U) ($generated@@190 T@U) ) (! (let (($generated@@191 ($generated@@169 (type $generated@@187))))
 (=> (= (type $generated@@190) $generated@@191) (= ($generated@@165 ($generated@@170 $generated@@187 $generated@@188 $generated@@189 $generated@@190) $generated@@188 $generated@@189) $generated@@190)))
 :weight 0
))) (and (and (forall (($generated@@192 T@U) ($generated@@193 T@U) ($generated@@194 T@U) ($generated@@195 T@U) ($generated@@196 T@U) ($generated@@197 T@U) ) (!  (or (= $generated@@194 $generated@@196) (= ($generated@@165 ($generated@@170 $generated@@193 $generated@@194 $generated@@195 $generated@@192) $generated@@196 $generated@@197) ($generated@@165 $generated@@193 $generated@@196 $generated@@197)))
 :weight 0
)) (forall (($generated@@198 T@U) ($generated@@199 T@U) ($generated@@200 T@U) ($generated@@201 T@U) ($generated@@202 T@U) ($generated@@203 T@U) ) (!  (or (= $generated@@201 $generated@@203) (= ($generated@@165 ($generated@@170 $generated@@199 $generated@@200 $generated@@201 $generated@@198) $generated@@202 $generated@@203) ($generated@@165 $generated@@199 $generated@@202 $generated@@203)))
 :weight 0
))) (forall (($generated@@204 T@U) ($generated@@205 T@U) ($generated@@206 T@U) ($generated@@207 T@U) ($generated@@208 T@U) ($generated@@209 T@U) ) (!  (or true (= ($generated@@165 ($generated@@170 $generated@@205 $generated@@206 $generated@@207 $generated@@204) $generated@@208 $generated@@209) ($generated@@165 $generated@@205 $generated@@208 $generated@@209)))
 :weight 0
)))) (forall (($generated@@210 T@U) ($generated@@211 T@U) ($generated@@212 T@U) ($generated@@213 Bool) ) (! (= (type ($generated@@166 $generated@@210 $generated@@211 $generated@@212 $generated@@213)) ($generated@@167 $generated@@80 $generated@@4))
 :pattern ( ($generated@@166 $generated@@210 $generated@@211 $generated@@212 $generated@@213))
))))
(assert (forall (($generated@@214 T@U) ($generated@@215 T@U) ($generated@@216 T@U) ($generated@@217 Bool) ($generated@@218 T@U) ($generated@@219 T@U) ) (! (let (($generated@@220 ($generated@@70 (type $generated@@219))))
 (=> (and (and (and (and (= (type $generated@@214) $generated@@80) (= (type $generated@@215) ($generated@@79 $generated@@80 $generated@@81))) (= (type $generated@@216) ($generated@@69 $generated@@4))) (= (type $generated@@218) $generated@@80)) (= (type $generated@@219) ($generated@@69 $generated@@220))) (= ($generated@@0 ($generated@@165 ($generated@@166 $generated@@214 $generated@@215 $generated@@216 $generated@@217) $generated@@218 $generated@@219))  (=> (and (not (= $generated@@218 $generated@@214)) ($generated@@0 ($generated@@86 ($generated@@84 $generated@@215 $generated@@218) $generated@@216))) $generated@@217))))
 :pattern ( ($generated@@165 ($generated@@166 $generated@@214 $generated@@215 $generated@@216 $generated@@217) $generated@@218 $generated@@219))
)))
(assert (= (type $generated@@221) $generated@@67))
(assert (forall (($generated@@222 T@U) ($generated@@223 T@U) ) (!  (=> (and (= (type $generated@@222) $generated@@80) (= (type $generated@@223) ($generated@@79 $generated@@80 $generated@@81))) (= ($generated@@77 $generated@@222 $generated@@221 $generated@@223) ($generated@@77 $generated@@222 $generated@@135 $generated@@223)))
 :pattern ( ($generated@@77 $generated@@222 $generated@@221 $generated@@223))
)))
(assert (forall (($generated@@226 T@U) ($generated@@227 T@U) ) (! (= (type ($generated@@224 $generated@@226 $generated@@227)) $generated@@143)
 :pattern ( ($generated@@224 $generated@@226 $generated@@227))
)))
(assert (forall (($generated@@228 T@U) ($generated@@229 T@U) ($generated@@230 T@U) ($generated@@231 T@U) ) (!  (=> (and (and (and (= (type $generated@@228) $generated@@67) (= (type $generated@@229) $generated@@67)) (= (type $generated@@230) $generated@@152)) (= (type $generated@@231) $generated@@152)) (= ($generated@@139 ($generated@@224 $generated@@230 $generated@@231) ($generated@@142 $generated@@228 $generated@@229))  (and ($generated@@225 $generated@@230 $generated@@228) ($generated@@225 $generated@@231 $generated@@229))))
 :pattern ( ($generated@@139 ($generated@@224 $generated@@230 $generated@@231) ($generated@@142 $generated@@228 $generated@@229)))
)))
(assert (forall (($generated@@232 T@U) ($generated@@233 T@U) ) (!  (=> (and (= (type $generated@@232) $generated@@143) (= (type $generated@@233) $generated@@143)) (= ($generated@@149 $generated@@232 $generated@@233) (= $generated@@232 $generated@@233)))
 :pattern ( ($generated@@149 $generated@@232 $generated@@233))
)))
(assert (forall (($generated@@235 T@U) ) (! (= (type ($generated@@234 $generated@@235)) $generated@@67)
 :pattern ( ($generated@@234 $generated@@235))
)))
(assert (forall (($generated@@236 T@U) ($generated@@237 T@U) ) (!  (=> (and (= (type $generated@@236) ($generated@@79 $generated@@152 $generated@@4)) (= (type $generated@@237) $generated@@67)) (= ($generated@@139 $generated@@236 ($generated@@234 $generated@@237)) (forall (($generated@@238 T@U) ) (!  (=> (and (= (type $generated@@238) $generated@@152) ($generated@@0 ($generated@@84 $generated@@236 $generated@@238))) ($generated@@225 $generated@@238 $generated@@237))
 :pattern ( ($generated@@84 $generated@@236 $generated@@238))
))))
 :pattern ( ($generated@@139 $generated@@236 ($generated@@234 $generated@@237)))
)))
(assert (forall (($generated@@240 T@U) ) (! (= (type ($generated@@239 $generated@@240)) $generated@@67)
 :pattern ( ($generated@@239 $generated@@240))
)))
(assert (forall (($generated@@241 T@U) ($generated@@242 T@U) ) (!  (=> (and (= (type $generated@@241) ($generated@@79 $generated@@152 $generated@@4)) (= (type $generated@@242) $generated@@67)) (= ($generated@@139 $generated@@241 ($generated@@239 $generated@@242)) (forall (($generated@@243 T@U) ) (!  (=> (and (= (type $generated@@243) $generated@@152) ($generated@@0 ($generated@@84 $generated@@241 $generated@@243))) ($generated@@225 $generated@@243 $generated@@242))
 :pattern ( ($generated@@84 $generated@@241 $generated@@243))
))))
 :pattern ( ($generated@@139 $generated@@241 ($generated@@239 $generated@@242)))
)))
(assert (forall (($generated@@245 T@U) ) (! (let (($generated@@246 (type $generated@@245)))
(= (type ($generated@@244 $generated@@245)) $generated@@246))
 :pattern ( ($generated@@244 $generated@@245))
)))
(assert (forall (($generated@@247 T@U) ) (! (= ($generated@@244 $generated@@247) $generated@@247)
 :pattern ( ($generated@@244 $generated@@247))
)))
(assert (forall (($generated@@250 T@U) ($generated@@251 T@U) ($generated@@252 T@U) ($generated@@253 T@U) ($generated@@254 T@U) ) (!  (=> (and (and (and (and (and (= (type $generated@@250) $generated@@67) (= (type $generated@@251) $generated@@67)) (= (type $generated@@252) $generated@@152)) (= (type $generated@@253) $generated@@152)) (= (type $generated@@254) ($generated@@79 $generated@@80 $generated@@81))) ($generated@@248 $generated@@254)) (= ($generated@@77 ($generated@@224 $generated@@252 $generated@@253) ($generated@@142 $generated@@250 $generated@@251) $generated@@254)  (and ($generated@@249 $generated@@252 $generated@@250 $generated@@254) ($generated@@249 $generated@@253 $generated@@251 $generated@@254))))
 :pattern ( ($generated@@77 ($generated@@224 $generated@@252 $generated@@253) ($generated@@142 $generated@@250 $generated@@251) $generated@@254))
)))
(assert (forall (($generated@@256 T@U) ) (! (= (type ($generated@@255 $generated@@256)) $generated@@71)
 :pattern ( ($generated@@255 $generated@@256))
)))
(assert (forall (($generated@@257 T@U) ) (!  (=> (= (type $generated@@257) $generated@@143) (= ($generated@@141 $generated@@257) (= ($generated@@255 $generated@@257) $generated@@61)))
 :pattern ( ($generated@@141 $generated@@257))
)))
(assert (forall (($generated@@258 T@U) ) (!  (=> (and (= (type $generated@@258) $generated@@143) ($generated@@141 $generated@@258)) (exists (($generated@@259 T@U) ($generated@@260 T@U) ) (!  (and (and (= (type $generated@@259) $generated@@152) (= (type $generated@@260) $generated@@152)) (= $generated@@258 ($generated@@224 $generated@@259 $generated@@260)))
 :no-pattern (type $generated@@259)
 :no-pattern (type $generated@@260)
 :no-pattern ($generated $generated@@259)
 :no-pattern ($generated@@0 $generated@@259)
 :no-pattern ($generated $generated@@260)
 :no-pattern ($generated@@0 $generated@@260)
)))
 :pattern ( ($generated@@141 $generated@@258))
)))
(assert  (and (and (forall (($generated@@265 T@T) ) (= ($generated@@1 ($generated@@263 $generated@@265)) 17)) (forall (($generated@@266 T@T) ) (! (= ($generated@@264 ($generated@@263 $generated@@266)) $generated@@266)
 :pattern ( ($generated@@263 $generated@@266))
))) (forall (($generated@@267 T@T) ) (! (= (type ($generated@@261 $generated@@267)) ($generated@@263 $generated@@267))
 :pattern ( ($generated@@261 $generated@@267))
))))
(assert (forall (($generated@@268 T@T) ) (! (= ($generated@@262 ($generated@@261 $generated@@268)) 0)
 :pattern ( ($generated@@261 $generated@@268))
)))
(assert (forall (($generated@@270 T@U) ) (! (= (type ($generated@@269 $generated@@270)) $generated@@152)
 :pattern ( ($generated@@269 $generated@@270))
)))
(assert (forall (($generated@@271 T@U) ($generated@@272 T@U) ($generated@@273 T@U) ) (!  (=> (and (= (type $generated@@272) $generated@@67) (= (type $generated@@273) ($generated@@79 $generated@@80 $generated@@81))) (= ($generated@@249 ($generated@@269 $generated@@271) $generated@@272 $generated@@273) ($generated@@77 $generated@@271 $generated@@272 $generated@@273)))
 :pattern ( ($generated@@249 ($generated@@269 $generated@@271) $generated@@272 $generated@@273))
)))
(assert (forall (($generated@@276 T@T) ) (! (= (type ($generated@@275 $generated@@276)) ($generated@@79 $generated@@276 $generated@@2))
 :pattern ( ($generated@@275 $generated@@276))
)))
(assert (forall (($generated@@277 T@U) ) (! (let (($generated@@278 ($generated@@82 (type $generated@@277))))
 (=> (= (type $generated@@277) ($generated@@79 $generated@@278 $generated@@2)) (and (= (= ($generated@@274 $generated@@277) 0) (= $generated@@277 ($generated@@275 $generated@@278))) (=> (not (= ($generated@@274 $generated@@277) 0)) (exists (($generated@@279 T@U) ) (!  (and (= (type $generated@@279) $generated@@278) (< 0 ($generated ($generated@@84 $generated@@277 $generated@@279))))
 :no-pattern (type $generated@@279)
 :no-pattern ($generated $generated@@279)
 :no-pattern ($generated@@0 $generated@@279)
))))))
 :pattern ( ($generated@@274 $generated@@277))
)))
(assert  (and (and (and (and (forall (($generated@@285 T@T) ($generated@@286 T@T) ) (= ($generated@@1 ($generated@@282 $generated@@285 $generated@@286)) 18)) (forall (($generated@@287 T@T) ($generated@@288 T@T) ) (! (= ($generated@@283 ($generated@@282 $generated@@287 $generated@@288)) $generated@@287)
 :pattern ( ($generated@@282 $generated@@287 $generated@@288))
))) (forall (($generated@@289 T@T) ($generated@@290 T@T) ) (! (= ($generated@@284 ($generated@@282 $generated@@289 $generated@@290)) $generated@@290)
 :pattern ( ($generated@@282 $generated@@289 $generated@@290))
))) (forall (($generated@@291 T@U) ) (! (let (($generated@@292 ($generated@@283 (type $generated@@291))))
(= (type ($generated@@280 $generated@@291)) ($generated@@79 $generated@@292 $generated@@4)))
 :pattern ( ($generated@@280 $generated@@291))
))) (forall (($generated@@293 T@T) ($generated@@294 T@T) ) (! (= (type ($generated@@281 $generated@@293 $generated@@294)) ($generated@@282 $generated@@293 $generated@@294))
 :pattern ( ($generated@@281 $generated@@293 $generated@@294))
))))
(assert (forall (($generated@@295 T@U) ($generated@@296 T@T) ) (! (let (($generated@@297 (type $generated@@295)))
 (not ($generated@@0 ($generated@@84 ($generated@@280 ($generated@@281 $generated@@297 $generated@@296)) $generated@@295))))
 :pattern ( (let (($generated@@297 (type $generated@@295)))
($generated@@84 ($generated@@280 ($generated@@281 $generated@@297 $generated@@296)) $generated@@295)))
)))
(assert  (and (and (and (and (forall (($generated@@303 T@T) ($generated@@304 T@T) ) (= ($generated@@1 ($generated@@300 $generated@@303 $generated@@304)) 19)) (forall (($generated@@305 T@T) ($generated@@306 T@T) ) (! (= ($generated@@301 ($generated@@300 $generated@@305 $generated@@306)) $generated@@305)
 :pattern ( ($generated@@300 $generated@@305 $generated@@306))
))) (forall (($generated@@307 T@T) ($generated@@308 T@T) ) (! (= ($generated@@302 ($generated@@300 $generated@@307 $generated@@308)) $generated@@308)
 :pattern ( ($generated@@300 $generated@@307 $generated@@308))
))) (forall (($generated@@309 T@U) ) (! (let (($generated@@310 ($generated@@301 (type $generated@@309))))
(= (type ($generated@@298 $generated@@309)) ($generated@@79 $generated@@310 $generated@@4)))
 :pattern ( ($generated@@298 $generated@@309))
))) (forall (($generated@@311 T@T) ($generated@@312 T@T) ) (! (= (type ($generated@@299 $generated@@311 $generated@@312)) ($generated@@300 $generated@@311 $generated@@312))
 :pattern ( ($generated@@299 $generated@@311 $generated@@312))
))))
(assert (forall (($generated@@313 T@U) ($generated@@314 T@T) ) (! (let (($generated@@315 (type $generated@@313)))
 (not ($generated@@0 ($generated@@84 ($generated@@298 ($generated@@299 $generated@@315 $generated@@314)) $generated@@313))))
 :pattern ( (let (($generated@@315 (type $generated@@313)))
($generated@@84 ($generated@@298 ($generated@@299 $generated@@315 $generated@@314)) $generated@@313)))
)))
(assert (forall (($generated@@316 T@U) ) (! (let (($generated@@317 ($generated@@82 (type $generated@@316))))
 (=> (= (type $generated@@316) ($generated@@79 $generated@@317 $generated@@2)) (= ($generated@@158 $generated@@316) (forall (($generated@@318 T@U) ) (!  (=> (= (type $generated@@318) $generated@@317) (and (<= 0 ($generated ($generated@@84 $generated@@316 $generated@@318))) (<= ($generated ($generated@@84 $generated@@316 $generated@@318)) ($generated@@274 $generated@@316))))
 :pattern ( ($generated@@84 $generated@@316 $generated@@318))
)))))
 :pattern ( ($generated@@158 $generated@@316))
)))
(assert (forall (($generated@@320 T@T) ($generated@@321 T@U) ) (! (= (type ($generated@@319 $generated@@320 $generated@@321)) $generated@@320)
 :pattern ( ($generated@@319 $generated@@320 $generated@@321))
)))
(assert (forall (($generated@@322 T@U) ) (!  (=> (and (= (type $generated@@322) $generated@@152) ($generated@@225 $generated@@322 $generated@@135)) (and (= ($generated@@269 ($generated@@319 $generated@@80 $generated@@322)) $generated@@322) ($generated@@139 ($generated@@319 $generated@@80 $generated@@322) $generated@@135)))
 :pattern ( ($generated@@225 $generated@@322 $generated@@135))
)))
(assert (forall (($generated@@323 T@U) ) (!  (=> (and (= (type $generated@@323) $generated@@152) ($generated@@225 $generated@@323 $generated@@221)) (and (= ($generated@@269 ($generated@@319 $generated@@80 $generated@@323)) $generated@@323) ($generated@@139 ($generated@@319 $generated@@80 $generated@@323) $generated@@221)))
 :pattern ( ($generated@@225 $generated@@323 $generated@@221))
)))
(assert (forall (($generated@@324 T@U) ) (!  (=> (= (type $generated@@324) $generated@@80) (= ($generated@@139 $generated@@324 $generated@@221)  (and ($generated@@139 $generated@@324 $generated@@135) (not (= $generated@@324 $generated@@136)))))
 :pattern ( ($generated@@139 $generated@@324 $generated@@221))
)))
(assert (forall (($generated@@325 T@U) ) (! (let (($generated@@326 ($generated@@284 (type $generated@@325))))
(let (($generated@@327 ($generated@@283 (type $generated@@325))))
 (=> (= (type $generated@@325) ($generated@@282 $generated@@327 $generated@@326)) (or (= $generated@@325 ($generated@@281 $generated@@327 $generated@@326)) (exists (($generated@@328 T@U) ) (!  (and (= (type $generated@@328) $generated@@327) ($generated@@0 ($generated@@84 ($generated@@280 $generated@@325) $generated@@328)))
 :no-pattern (type $generated@@328)
 :no-pattern ($generated $generated@@328)
 :no-pattern ($generated@@0 $generated@@328)
))))))
 :pattern ( ($generated@@280 $generated@@325))
)))
(assert (forall (($generated@@330 T@U) ) (! (let (($generated@@331 ($generated@@284 (type $generated@@330))))
(= (type ($generated@@329 $generated@@330)) ($generated@@79 $generated@@331 $generated@@4)))
 :pattern ( ($generated@@329 $generated@@330))
)))
(assert (forall (($generated@@332 T@U) ) (! (let (($generated@@333 ($generated@@284 (type $generated@@332))))
(let (($generated@@334 ($generated@@283 (type $generated@@332))))
 (=> (= (type $generated@@332) ($generated@@282 $generated@@334 $generated@@333)) (or (= $generated@@332 ($generated@@281 $generated@@334 $generated@@333)) (exists (($generated@@335 T@U) ) (!  (and (= (type $generated@@335) $generated@@333) ($generated@@0 ($generated@@84 ($generated@@329 $generated@@332) $generated@@335)))
 :no-pattern (type $generated@@335)
 :no-pattern ($generated $generated@@335)
 :no-pattern ($generated@@0 $generated@@335)
))))))
 :pattern ( ($generated@@329 $generated@@332))
)))
(assert (forall (($generated@@336 T@U) ) (! (let (($generated@@337 ($generated@@302 (type $generated@@336))))
(let (($generated@@338 ($generated@@301 (type $generated@@336))))
 (=> (= (type $generated@@336) ($generated@@300 $generated@@338 $generated@@337)) (or (= $generated@@336 ($generated@@299 $generated@@338 $generated@@337)) (exists (($generated@@339 T@U) ) (!  (and (= (type $generated@@339) $generated@@338) ($generated@@0 ($generated@@84 ($generated@@298 $generated@@336) $generated@@339)))
 :no-pattern (type $generated@@339)
 :no-pattern ($generated $generated@@339)
 :no-pattern ($generated@@0 $generated@@339)
))))))
 :pattern ( ($generated@@298 $generated@@336))
)))
(assert (forall (($generated@@341 T@U) ) (! (let (($generated@@342 ($generated@@302 (type $generated@@341))))
(= (type ($generated@@340 $generated@@341)) ($generated@@79 $generated@@342 $generated@@4)))
 :pattern ( ($generated@@340 $generated@@341))
)))
(assert (forall (($generated@@343 T@U) ) (! (let (($generated@@344 ($generated@@302 (type $generated@@343))))
(let (($generated@@345 ($generated@@301 (type $generated@@343))))
 (=> (= (type $generated@@343) ($generated@@300 $generated@@345 $generated@@344)) (or (= $generated@@343 ($generated@@299 $generated@@345 $generated@@344)) (exists (($generated@@346 T@U) ) (!  (and (= (type $generated@@346) $generated@@344) ($generated@@0 ($generated@@84 ($generated@@340 $generated@@343) $generated@@346)))
 :no-pattern (type $generated@@346)
 :no-pattern ($generated $generated@@346)
 :no-pattern ($generated@@0 $generated@@346)
))))))
 :pattern ( ($generated@@340 $generated@@343))
)))
(assert (forall (($generated@@347 T@U) ($generated@@348 T@U) ) (!  (=> (and (= (type $generated@@347) ($generated@@79 $generated@@152 $generated@@2)) (= (type $generated@@348) $generated@@67)) (= ($generated@@139 $generated@@347 ($generated@@157 $generated@@348)) (forall (($generated@@349 T@U) ) (!  (=> (and (= (type $generated@@349) $generated@@152) (< 0 ($generated ($generated@@84 $generated@@347 $generated@@349)))) ($generated@@225 $generated@@349 $generated@@348))
 :pattern ( ($generated@@84 $generated@@347 $generated@@349))
))))
 :pattern ( ($generated@@139 $generated@@347 ($generated@@157 $generated@@348)))
)))
(assert (forall (($generated@@350 T@U) ($generated@@351 T@U) ($generated@@352 T@U) ) (!  (=> (and (and (= (type $generated@@350) ($generated@@79 $generated@@152 $generated@@4)) (= (type $generated@@351) $generated@@67)) (= (type $generated@@352) ($generated@@79 $generated@@80 $generated@@81))) (= ($generated@@77 $generated@@350 ($generated@@234 $generated@@351) $generated@@352) (forall (($generated@@353 T@U) ) (!  (=> (and (= (type $generated@@353) $generated@@152) ($generated@@0 ($generated@@84 $generated@@350 $generated@@353))) ($generated@@249 $generated@@353 $generated@@351 $generated@@352))
 :pattern ( ($generated@@84 $generated@@350 $generated@@353))
))))
 :pattern ( ($generated@@77 $generated@@350 ($generated@@234 $generated@@351) $generated@@352))
)))
(assert (forall (($generated@@354 T@U) ($generated@@355 T@U) ($generated@@356 T@U) ) (!  (=> (and (and (= (type $generated@@354) ($generated@@79 $generated@@152 $generated@@4)) (= (type $generated@@355) $generated@@67)) (= (type $generated@@356) ($generated@@79 $generated@@80 $generated@@81))) (= ($generated@@77 $generated@@354 ($generated@@239 $generated@@355) $generated@@356) (forall (($generated@@357 T@U) ) (!  (=> (and (= (type $generated@@357) $generated@@152) ($generated@@0 ($generated@@84 $generated@@354 $generated@@357))) ($generated@@249 $generated@@357 $generated@@355 $generated@@356))
 :pattern ( ($generated@@84 $generated@@354 $generated@@357))
))))
 :pattern ( ($generated@@77 $generated@@354 ($generated@@239 $generated@@355) $generated@@356))
)))
(assert (forall (($generated@@358 T@U) ) (! (let (($generated@@359 (type $generated@@358)))
(= ($generated ($generated@@84 ($generated@@275 $generated@@359) $generated@@358)) 0))
 :pattern ( (let (($generated@@359 (type $generated@@358)))
($generated@@84 ($generated@@275 $generated@@359) $generated@@358)))
)))
(assert  (and (forall (($generated@@362 T@U) ) (! (= (type ($generated@@360 $generated@@362)) ($generated@@79 $generated@@152 $generated@@4))
 :pattern ( ($generated@@360 $generated@@362))
)) (forall (($generated@@363 T@U) ) (! (let (($generated@@364 ($generated@@284 (type $generated@@363))))
(let (($generated@@365 ($generated@@283 (type $generated@@363))))
(= (type ($generated@@361 $generated@@363)) ($generated@@79 $generated@@365 $generated@@364))))
 :pattern ( ($generated@@361 $generated@@363))
))))
(assert (forall (($generated@@366 T@U) ($generated@@367 T@U) ) (!  (=> (and (= (type $generated@@366) ($generated@@282 $generated@@152 $generated@@152)) (= (type $generated@@367) $generated@@152)) (= ($generated@@0 ($generated@@84 ($generated@@360 $generated@@366) $generated@@367))  (and ($generated@@0 ($generated@@84 ($generated@@280 $generated@@366) ($generated@@150 ($generated@@319 $generated@@143 $generated@@367)))) (= ($generated@@84 ($generated@@361 $generated@@366) ($generated@@150 ($generated@@319 $generated@@143 $generated@@367))) ($generated@@151 ($generated@@319 $generated@@143 $generated@@367))))))
 :pattern ( ($generated@@84 ($generated@@360 $generated@@366) $generated@@367))
)))
(assert  (and (forall (($generated@@370 T@U) ) (! (= (type ($generated@@368 $generated@@370)) ($generated@@79 $generated@@152 $generated@@4))
 :pattern ( ($generated@@368 $generated@@370))
)) (forall (($generated@@371 T@U) ) (! (let (($generated@@372 ($generated@@302 (type $generated@@371))))
(let (($generated@@373 ($generated@@301 (type $generated@@371))))
(= (type ($generated@@369 $generated@@371)) ($generated@@79 $generated@@373 $generated@@372))))
 :pattern ( ($generated@@369 $generated@@371))
))))
(assert (forall (($generated@@374 T@U) ($generated@@375 T@U) ) (!  (=> (and (= (type $generated@@374) ($generated@@300 $generated@@152 $generated@@152)) (= (type $generated@@375) $generated@@152)) (= ($generated@@0 ($generated@@84 ($generated@@368 $generated@@374) $generated@@375))  (and ($generated@@0 ($generated@@84 ($generated@@298 $generated@@374) ($generated@@150 ($generated@@319 $generated@@143 $generated@@375)))) (= ($generated@@84 ($generated@@369 $generated@@374) ($generated@@150 ($generated@@319 $generated@@143 $generated@@375))) ($generated@@151 ($generated@@319 $generated@@143 $generated@@375))))))
 :pattern ( ($generated@@84 ($generated@@368 $generated@@374) $generated@@375))
)))
(assert (forall (($generated@@376 T@U) ($generated@@377 T@U) ) (! (let (($generated@@378 (type $generated@@377)))
(let (($generated@@379 ($generated@@283 (type $generated@@376))))
 (=> (= (type $generated@@376) ($generated@@282 $generated@@379 $generated@@378)) (= ($generated@@0 ($generated@@84 ($generated@@329 $generated@@376) $generated@@377)) (exists (($generated@@380 T@U) ) (!  (and (= (type $generated@@380) $generated@@379) (and ($generated@@0 ($generated@@84 ($generated@@280 $generated@@376) $generated@@380)) (= $generated@@377 ($generated@@84 ($generated@@361 $generated@@376) $generated@@380))))
 :pattern ( ($generated@@84 ($generated@@280 $generated@@376) $generated@@380))
 :pattern ( ($generated@@84 ($generated@@361 $generated@@376) $generated@@380))
))))))
 :pattern ( ($generated@@84 ($generated@@329 $generated@@376) $generated@@377))
)))
(assert (forall (($generated@@381 T@U) ($generated@@382 T@U) ) (! (let (($generated@@383 (type $generated@@382)))
(let (($generated@@384 ($generated@@301 (type $generated@@381))))
 (=> (= (type $generated@@381) ($generated@@300 $generated@@384 $generated@@383)) (= ($generated@@0 ($generated@@84 ($generated@@340 $generated@@381) $generated@@382)) (exists (($generated@@385 T@U) ) (!  (and (= (type $generated@@385) $generated@@384) (and ($generated@@0 ($generated@@84 ($generated@@298 $generated@@381) $generated@@385)) (= $generated@@382 ($generated@@84 ($generated@@369 $generated@@381) $generated@@385))))
 :pattern ( ($generated@@84 ($generated@@298 $generated@@381) $generated@@385))
 :pattern ( ($generated@@84 ($generated@@369 $generated@@381) $generated@@385))
))))))
 :pattern ( ($generated@@84 ($generated@@340 $generated@@381) $generated@@382))
)))
(assert (forall (($generated@@387 T@U) ($generated@@388 T@U) ) (! (= (type ($generated@@386 $generated@@387 $generated@@388)) $generated@@67)
 :pattern ( ($generated@@386 $generated@@387 $generated@@388))
)))
(assert (forall (($generated@@389 T@U) ($generated@@390 T@U) ($generated@@391 T@U) ($generated@@392 T@U) ) (!  (=> (and (and (and (= (type $generated@@389) ($generated@@282 $generated@@152 $generated@@152)) (= (type $generated@@390) $generated@@67)) (= (type $generated@@391) $generated@@67)) (= (type $generated@@392) ($generated@@79 $generated@@80 $generated@@81))) (= ($generated@@77 $generated@@389 ($generated@@386 $generated@@390 $generated@@391) $generated@@392) (forall (($generated@@393 T@U) ) (!  (=> (and (= (type $generated@@393) $generated@@152) ($generated@@0 ($generated@@84 ($generated@@280 $generated@@389) $generated@@393))) (and ($generated@@249 ($generated@@84 ($generated@@361 $generated@@389) $generated@@393) $generated@@391 $generated@@392) ($generated@@249 $generated@@393 $generated@@390 $generated@@392)))
 :pattern ( ($generated@@84 ($generated@@361 $generated@@389) $generated@@393))
 :pattern ( ($generated@@84 ($generated@@280 $generated@@389) $generated@@393))
))))
 :pattern ( ($generated@@77 $generated@@389 ($generated@@386 $generated@@390 $generated@@391) $generated@@392))
)))
(assert (forall (($generated@@395 T@U) ($generated@@396 T@U) ) (! (= (type ($generated@@394 $generated@@395 $generated@@396)) $generated@@67)
 :pattern ( ($generated@@394 $generated@@395 $generated@@396))
)))
(assert (forall (($generated@@397 T@U) ($generated@@398 T@U) ($generated@@399 T@U) ($generated@@400 T@U) ) (!  (=> (and (and (and (= (type $generated@@397) ($generated@@300 $generated@@152 $generated@@152)) (= (type $generated@@398) $generated@@67)) (= (type $generated@@399) $generated@@67)) (= (type $generated@@400) ($generated@@79 $generated@@80 $generated@@81))) (= ($generated@@77 $generated@@397 ($generated@@394 $generated@@398 $generated@@399) $generated@@400) (forall (($generated@@401 T@U) ) (!  (=> (and (= (type $generated@@401) $generated@@152) ($generated@@0 ($generated@@84 ($generated@@298 $generated@@397) $generated@@401))) (and ($generated@@249 ($generated@@84 ($generated@@369 $generated@@397) $generated@@401) $generated@@399 $generated@@400) ($generated@@249 $generated@@401 $generated@@398 $generated@@400)))
 :pattern ( ($generated@@84 ($generated@@369 $generated@@397) $generated@@401))
 :pattern ( ($generated@@84 ($generated@@298 $generated@@397) $generated@@401))
))))
 :pattern ( ($generated@@77 $generated@@397 ($generated@@394 $generated@@398 $generated@@399) $generated@@400))
)))
(assert (forall (($generated@@403 T@T) ) (! (= (type ($generated@@402 $generated@@403)) ($generated@@79 $generated@@403 $generated@@4))
 :pattern ( ($generated@@402 $generated@@403))
)))
(assert (forall (($generated@@404 T@U) ) (! (let (($generated@@405 ($generated@@302 (type $generated@@404))))
(let (($generated@@406 ($generated@@301 (type $generated@@404))))
 (=> (= (type $generated@@404) ($generated@@300 $generated@@406 $generated@@405)) (= (= $generated@@404 ($generated@@299 $generated@@406 $generated@@405)) (= ($generated@@298 $generated@@404) ($generated@@402 $generated@@406))))))
 :pattern ( ($generated@@298 $generated@@404))
)))
(assert (forall (($generated@@407 T@U) ) (! (let (($generated@@408 ($generated@@302 (type $generated@@407))))
(let (($generated@@409 ($generated@@301 (type $generated@@407))))
 (=> (= (type $generated@@407) ($generated@@300 $generated@@409 $generated@@408)) (= (= $generated@@407 ($generated@@299 $generated@@409 $generated@@408)) (= ($generated@@340 $generated@@407) ($generated@@402 $generated@@408))))))
 :pattern ( ($generated@@340 $generated@@407))
)))
(assert (forall (($generated@@410 T@U) ) (! (let (($generated@@411 ($generated@@302 (type $generated@@410))))
(let (($generated@@412 ($generated@@301 (type $generated@@410))))
 (=> (= (type $generated@@410) ($generated@@300 $generated@@412 $generated@@411)) (= (= $generated@@410 ($generated@@299 $generated@@412 $generated@@411)) (= ($generated@@368 $generated@@410) ($generated@@402 $generated@@152))))))
 :pattern ( ($generated@@368 $generated@@410))
)))
(assert (forall (($generated@@413 T@U) ) (! (let (($generated@@414 ($generated@@284 (type $generated@@413))))
(let (($generated@@415 ($generated@@283 (type $generated@@413))))
 (=> (= (type $generated@@413) ($generated@@282 $generated@@415 $generated@@414)) (or (= $generated@@413 ($generated@@281 $generated@@415 $generated@@414)) (exists (($generated@@416 T@U) ($generated@@417 T@U) ) (!  (and (and (= (type $generated@@416) $generated@@152) (= (type $generated@@417) $generated@@152)) ($generated@@0 ($generated@@84 ($generated@@360 $generated@@413) ($generated@@269 ($generated@@224 $generated@@416 $generated@@417)))))
 :no-pattern (type $generated@@416)
 :no-pattern (type $generated@@417)
 :no-pattern ($generated $generated@@416)
 :no-pattern ($generated@@0 $generated@@416)
 :no-pattern ($generated $generated@@417)
 :no-pattern ($generated@@0 $generated@@417)
))))))
 :pattern ( ($generated@@360 $generated@@413))
)))
(assert (forall (($generated@@418 T@U) ) (! (let (($generated@@419 ($generated@@302 (type $generated@@418))))
(let (($generated@@420 ($generated@@301 (type $generated@@418))))
 (=> (= (type $generated@@418) ($generated@@300 $generated@@420 $generated@@419)) (or (= $generated@@418 ($generated@@299 $generated@@420 $generated@@419)) (exists (($generated@@421 T@U) ($generated@@422 T@U) ) (!  (and (and (= (type $generated@@421) $generated@@152) (= (type $generated@@422) $generated@@152)) ($generated@@0 ($generated@@84 ($generated@@368 $generated@@418) ($generated@@269 ($generated@@224 $generated@@421 $generated@@422)))))
 :no-pattern (type $generated@@421)
 :no-pattern (type $generated@@422)
 :no-pattern ($generated $generated@@421)
 :no-pattern ($generated@@0 $generated@@421)
 :no-pattern ($generated $generated@@422)
 :no-pattern ($generated@@0 $generated@@422)
))))))
 :pattern ( ($generated@@368 $generated@@418))
)))
(assert (forall (($generated@@423 T@U) ) (!  (=> (and (= (type $generated@@423) $generated@@152) ($generated@@225 $generated@@423 $generated@@46)) (and (= ($generated@@269 ($generated@@319 $generated@@2 $generated@@423)) $generated@@423) ($generated@@139 ($generated@@319 $generated@@2 $generated@@423) $generated@@46)))
 :pattern ( ($generated@@225 $generated@@423 $generated@@46))
)))
(assert (forall (($generated@@424 T@U) ) (!  (=> (and (= (type $generated@@424) $generated@@152) ($generated@@225 $generated@@424 $generated@@47)) (and (= ($generated@@269 ($generated@@319 $generated@@3 $generated@@424)) $generated@@424) ($generated@@139 ($generated@@319 $generated@@3 $generated@@424) $generated@@47)))
 :pattern ( ($generated@@225 $generated@@424 $generated@@47))
)))
(assert (forall (($generated@@425 T@U) ) (!  (=> (and (= (type $generated@@425) $generated@@152) ($generated@@225 $generated@@425 $generated@@44)) (and (= ($generated@@269 ($generated@@319 $generated@@4 $generated@@425)) $generated@@425) ($generated@@139 ($generated@@319 $generated@@4 $generated@@425) $generated@@44)))
 :pattern ( ($generated@@225 $generated@@425 $generated@@44))
)))
(assert (= ($generated@@1 $generated@@426) 20))
(assert (forall (($generated@@427 T@U) ) (!  (=> (and (= (type $generated@@427) $generated@@152) ($generated@@225 $generated@@427 $generated@@45)) (and (= ($generated@@269 ($generated@@319 $generated@@426 $generated@@427)) $generated@@427) ($generated@@139 ($generated@@319 $generated@@426 $generated@@427) $generated@@45)))
 :pattern ( ($generated@@225 $generated@@427 $generated@@45))
)))
(assert (forall (($generated@@428 T@U) ($generated@@429 T@U) ) (!  (=> (= (type $generated@@429) $generated@@67) (= ($generated@@225 ($generated@@269 $generated@@428) $generated@@429) ($generated@@139 $generated@@428 $generated@@429)))
 :pattern ( ($generated@@225 ($generated@@269 $generated@@428) $generated@@429))
)))
(assert (forall (($generated@@430 T@U) ) (! (let (($generated@@431 ($generated@@82 (type $generated@@430))))
 (=> (= (type $generated@@430) ($generated@@79 $generated@@431 $generated@@2)) (<= 0 ($generated@@274 $generated@@430))))
 :pattern ( ($generated@@274 $generated@@430))
)))
(assert (forall (($generated@@432 T@U) ) (! (let (($generated@@433 ($generated@@264 (type $generated@@432))))
 (=> (= (type $generated@@432) ($generated@@263 $generated@@433)) (<= 0 ($generated@@262 $generated@@432))))
 :pattern ( ($generated@@262 $generated@@432))
)))
(assert (forall (($generated@@435 T@U) ) (! (= (type ($generated@@434 $generated@@435)) $generated@@67)
 :pattern ( ($generated@@434 $generated@@435))
)))
(assert (forall (($generated@@436 T@U) ($generated@@437 T@U) ) (!  (=> (and (= (type $generated@@436) $generated@@67) (= (type $generated@@437) $generated@@67)) (= ($generated@@434 ($generated@@386 $generated@@436 $generated@@437)) $generated@@436))
 :pattern ( ($generated@@386 $generated@@436 $generated@@437))
)))
(assert (forall (($generated@@439 T@U) ) (! (= (type ($generated@@438 $generated@@439)) $generated@@67)
 :pattern ( ($generated@@438 $generated@@439))
)))
(assert (forall (($generated@@440 T@U) ($generated@@441 T@U) ) (!  (=> (and (= (type $generated@@440) $generated@@67) (= (type $generated@@441) $generated@@67)) (= ($generated@@438 ($generated@@386 $generated@@440 $generated@@441)) $generated@@441))
 :pattern ( ($generated@@386 $generated@@440 $generated@@441))
)))
(assert (forall (($generated@@442 T@U) ($generated@@443 T@U) ) (!  (=> (and (= (type $generated@@442) $generated@@67) (= (type $generated@@443) $generated@@67)) (= ($generated@@75 ($generated@@386 $generated@@442 $generated@@443)) $generated@@58))
 :pattern ( ($generated@@386 $generated@@442 $generated@@443))
)))
(assert (forall (($generated@@445 T@U) ) (! (= (type ($generated@@444 $generated@@445)) $generated@@67)
 :pattern ( ($generated@@444 $generated@@445))
)))
(assert (forall (($generated@@446 T@U) ($generated@@447 T@U) ) (!  (=> (and (= (type $generated@@446) $generated@@67) (= (type $generated@@447) $generated@@67)) (= ($generated@@444 ($generated@@394 $generated@@446 $generated@@447)) $generated@@446))
 :pattern ( ($generated@@394 $generated@@446 $generated@@447))
)))
(assert (forall (($generated@@449 T@U) ) (! (= (type ($generated@@448 $generated@@449)) $generated@@67)
 :pattern ( ($generated@@448 $generated@@449))
)))
(assert (forall (($generated@@450 T@U) ($generated@@451 T@U) ) (!  (=> (and (= (type $generated@@450) $generated@@67) (= (type $generated@@451) $generated@@67)) (= ($generated@@448 ($generated@@394 $generated@@450 $generated@@451)) $generated@@451))
 :pattern ( ($generated@@394 $generated@@450 $generated@@451))
)))
(assert (forall (($generated@@452 T@U) ($generated@@453 T@U) ) (!  (=> (and (= (type $generated@@452) $generated@@67) (= (type $generated@@453) $generated@@67)) (= ($generated@@75 ($generated@@394 $generated@@452 $generated@@453)) $generated@@59))
 :pattern ( ($generated@@394 $generated@@452 $generated@@453))
)))
(assert (forall (($generated@@454 T@U) ($generated@@455 T@U) ) (!  (=> (and (= (type $generated@@454) $generated@@152) (= (type $generated@@455) $generated@@152)) (= ($generated@@255 ($generated@@224 $generated@@454 $generated@@455)) $generated@@61))
 :pattern ( ($generated@@224 $generated@@454 $generated@@455))
)))
(assert (forall (($generated@@457 T@U) ) (! (= (type ($generated@@456 $generated@@457)) $generated@@67)
 :pattern ( ($generated@@456 $generated@@457))
)))
(assert (forall (($generated@@458 T@U) ($generated@@459 T@U) ) (!  (=> (and (= (type $generated@@458) $generated@@67) (= (type $generated@@459) $generated@@67)) (= ($generated@@456 ($generated@@142 $generated@@458 $generated@@459)) $generated@@458))
 :pattern ( ($generated@@142 $generated@@458 $generated@@459))
)))
(assert (forall (($generated@@461 T@U) ) (! (= (type ($generated@@460 $generated@@461)) $generated@@67)
 :pattern ( ($generated@@460 $generated@@461))
)))
(assert (forall (($generated@@462 T@U) ($generated@@463 T@U) ) (!  (=> (and (= (type $generated@@462) $generated@@67) (= (type $generated@@463) $generated@@67)) (= ($generated@@460 ($generated@@142 $generated@@462 $generated@@463)) $generated@@463))
 :pattern ( ($generated@@142 $generated@@462 $generated@@463))
)))
(assert (forall (($generated@@464 T@U) ($generated@@465 T@U) ) (!  (=> (and (= (type $generated@@464) $generated@@152) (= (type $generated@@465) $generated@@152)) (= ($generated@@150 ($generated@@224 $generated@@464 $generated@@465)) $generated@@464))
 :pattern ( ($generated@@224 $generated@@464 $generated@@465))
)))
(assert (forall (($generated@@466 T@U) ($generated@@467 T@U) ) (!  (=> (and (= (type $generated@@466) $generated@@152) (= (type $generated@@467) $generated@@152)) (= ($generated@@151 ($generated@@224 $generated@@466 $generated@@467)) $generated@@467))
 :pattern ( ($generated@@224 $generated@@466 $generated@@467))
)))
(assert  (and (forall (($generated@@470 T@U) ) (! (= (type ($generated@@468 $generated@@470)) $generated@@67)
 :pattern ( ($generated@@468 $generated@@470))
)) (forall (($generated@@471 T@U) ($generated@@472 Int) ) (! (let (($generated@@473 ($generated@@264 (type $generated@@471))))
(= (type ($generated@@469 $generated@@471 $generated@@472)) $generated@@473))
 :pattern ( ($generated@@469 $generated@@471 $generated@@472))
))))
(assert (forall (($generated@@474 T@U) ($generated@@475 T@U) ($generated@@476 T@U) ) (!  (=> (and (and (= (type $generated@@474) ($generated@@263 $generated@@152)) (= (type $generated@@475) $generated@@67)) (= (type $generated@@476) ($generated@@79 $generated@@80 $generated@@81))) (= ($generated@@77 $generated@@474 ($generated@@468 $generated@@475) $generated@@476) (forall (($generated@@477 Int) ) (!  (=> (and (<= 0 $generated@@477) (< $generated@@477 ($generated@@262 $generated@@474))) ($generated@@249 ($generated@@469 $generated@@474 $generated@@477) $generated@@475 $generated@@476))
 :pattern ( ($generated@@469 $generated@@474 $generated@@477))
))))
 :pattern ( ($generated@@77 $generated@@474 ($generated@@468 $generated@@475) $generated@@476))
)))
(assert (forall (($generated@@479 Int) ) (! (= ($generated@@478 ($generated@@78 $generated@@479)) $generated@@479)
 :pattern ( ($generated@@78 $generated@@479))
)))
(assert (forall (($generated@@481 T@U) ) (! (= (type ($generated@@480 $generated@@481)) $generated@@67)
 :pattern ( ($generated@@480 $generated@@481))
)))
(assert (forall (($generated@@482 T@U) ) (!  (=> (= (type $generated@@482) $generated@@67) (= ($generated@@480 ($generated@@234 $generated@@482)) $generated@@482))
 :pattern ( ($generated@@234 $generated@@482))
)))
(assert (forall (($generated@@483 T@U) ) (!  (=> (= (type $generated@@483) $generated@@67) (= ($generated@@75 ($generated@@234 $generated@@483)) $generated@@54))
 :pattern ( ($generated@@234 $generated@@483))
)))
(assert (forall (($generated@@485 T@U) ) (! (= (type ($generated@@484 $generated@@485)) $generated@@67)
 :pattern ( ($generated@@484 $generated@@485))
)))
(assert (forall (($generated@@486 T@U) ) (!  (=> (= (type $generated@@486) $generated@@67) (= ($generated@@484 ($generated@@239 $generated@@486)) $generated@@486))
 :pattern ( ($generated@@239 $generated@@486))
)))
(assert (forall (($generated@@487 T@U) ) (!  (=> (= (type $generated@@487) $generated@@67) (= ($generated@@75 ($generated@@239 $generated@@487)) $generated@@55))
 :pattern ( ($generated@@239 $generated@@487))
)))
(assert (forall (($generated@@489 T@U) ) (! (= (type ($generated@@488 $generated@@489)) $generated@@67)
 :pattern ( ($generated@@488 $generated@@489))
)))
(assert (forall (($generated@@490 T@U) ) (!  (=> (= (type $generated@@490) $generated@@67) (= ($generated@@488 ($generated@@157 $generated@@490)) $generated@@490))
 :pattern ( ($generated@@157 $generated@@490))
)))
(assert (forall (($generated@@491 T@U) ) (!  (=> (= (type $generated@@491) $generated@@67) (= ($generated@@75 ($generated@@157 $generated@@491)) $generated@@56))
 :pattern ( ($generated@@157 $generated@@491))
)))
(assert (forall (($generated@@493 T@U) ) (! (= (type ($generated@@492 $generated@@493)) $generated@@67)
 :pattern ( ($generated@@492 $generated@@493))
)))
(assert (forall (($generated@@494 T@U) ) (!  (=> (= (type $generated@@494) $generated@@67) (= ($generated@@492 ($generated@@468 $generated@@494)) $generated@@494))
 :pattern ( ($generated@@468 $generated@@494))
)))
(assert (forall (($generated@@495 T@U) ) (!  (=> (= (type $generated@@495) $generated@@67) (= ($generated@@75 ($generated@@468 $generated@@495)) $generated@@57))
 :pattern ( ($generated@@468 $generated@@495))
)))
(assert (forall (($generated@@496 T@U) ) (! (let (($generated@@497 (type $generated@@496)))
(= ($generated@@319 $generated@@497 ($generated@@269 $generated@@496)) $generated@@496))
 :pattern ( ($generated@@269 $generated@@496))
)))
(assert (forall (($generated@@498 T@U) ($generated@@499 T@U) ($generated@@500 T@U) ) (!  (=> (and (and (= (type $generated@@498) ($generated@@282 $generated@@152 $generated@@152)) (= (type $generated@@499) $generated@@67)) (= (type $generated@@500) $generated@@67)) (= ($generated@@139 $generated@@498 ($generated@@386 $generated@@499 $generated@@500)) (forall (($generated@@501 T@U) ) (!  (=> (and (= (type $generated@@501) $generated@@152) ($generated@@0 ($generated@@84 ($generated@@280 $generated@@498) $generated@@501))) (and ($generated@@225 ($generated@@84 ($generated@@361 $generated@@498) $generated@@501) $generated@@500) ($generated@@225 $generated@@501 $generated@@499)))
 :pattern ( ($generated@@84 ($generated@@361 $generated@@498) $generated@@501))
 :pattern ( ($generated@@84 ($generated@@280 $generated@@498) $generated@@501))
))))
 :pattern ( ($generated@@139 $generated@@498 ($generated@@386 $generated@@499 $generated@@500)))
)))
(assert (forall (($generated@@502 T@U) ($generated@@503 T@U) ($generated@@504 T@U) ) (!  (=> (and (and (= (type $generated@@502) ($generated@@300 $generated@@152 $generated@@152)) (= (type $generated@@503) $generated@@67)) (= (type $generated@@504) $generated@@67)) (= ($generated@@139 $generated@@502 ($generated@@394 $generated@@503 $generated@@504)) (forall (($generated@@505 T@U) ) (!  (=> (and (= (type $generated@@505) $generated@@152) ($generated@@0 ($generated@@84 ($generated@@298 $generated@@502) $generated@@505))) (and ($generated@@225 ($generated@@84 ($generated@@369 $generated@@502) $generated@@505) $generated@@504) ($generated@@225 $generated@@505 $generated@@503)))
 :pattern ( ($generated@@84 ($generated@@369 $generated@@502) $generated@@505))
 :pattern ( ($generated@@84 ($generated@@298 $generated@@502) $generated@@505))
))))
 :pattern ( ($generated@@139 $generated@@502 ($generated@@394 $generated@@503 $generated@@504)))
)))
(assert (forall (($generated@@508 T@U) ($generated@@509 T@U) ) (!  (=> (and (= (type $generated@@508) $generated@@152) (= (type $generated@@509) $generated@@152)) (< ($generated@@506 $generated@@508) ($generated@@507 ($generated@@224 $generated@@508 $generated@@509))))
 :pattern ( ($generated@@224 $generated@@508 $generated@@509))
)))
(assert (forall (($generated@@510 T@U) ($generated@@511 T@U) ) (!  (=> (and (= (type $generated@@510) $generated@@152) (= (type $generated@@511) $generated@@152)) (< ($generated@@506 $generated@@511) ($generated@@507 ($generated@@224 $generated@@510 $generated@@511))))
 :pattern ( ($generated@@224 $generated@@510 $generated@@511))
)))
(assert (forall (($generated@@512 T@U) ($generated@@513 T@U) ($generated@@514 T@U) ) (!  (=> (and (and (and (= (type $generated@@512) $generated@@152) (= (type $generated@@513) $generated@@67)) (= (type $generated@@514) $generated@@67)) ($generated@@225 $generated@@512 ($generated@@386 $generated@@513 $generated@@514))) (and (= ($generated@@269 ($generated@@319 ($generated@@282 $generated@@152 $generated@@152) $generated@@512)) $generated@@512) ($generated@@139 ($generated@@319 ($generated@@282 $generated@@152 $generated@@152) $generated@@512) ($generated@@386 $generated@@513 $generated@@514))))
 :pattern ( ($generated@@225 $generated@@512 ($generated@@386 $generated@@513 $generated@@514)))
)))
(assert (forall (($generated@@515 T@U) ($generated@@516 T@U) ($generated@@517 T@U) ) (!  (=> (and (and (and (= (type $generated@@515) $generated@@152) (= (type $generated@@516) $generated@@67)) (= (type $generated@@517) $generated@@67)) ($generated@@225 $generated@@515 ($generated@@394 $generated@@516 $generated@@517))) (and (= ($generated@@269 ($generated@@319 ($generated@@300 $generated@@152 $generated@@152) $generated@@515)) $generated@@515) ($generated@@139 ($generated@@319 ($generated@@300 $generated@@152 $generated@@152) $generated@@515) ($generated@@394 $generated@@516 $generated@@517))))
 :pattern ( ($generated@@225 $generated@@515 ($generated@@394 $generated@@516 $generated@@517)))
)))
(assert (forall (($generated@@518 T@U) ($generated@@519 T@U) ($generated@@520 T@U) ) (!  (=> (and (and (and (= (type $generated@@518) $generated@@67) (= (type $generated@@519) $generated@@67)) (= (type $generated@@520) $generated@@152)) ($generated@@225 $generated@@520 ($generated@@142 $generated@@518 $generated@@519))) (and (= ($generated@@269 ($generated@@319 $generated@@143 $generated@@520)) $generated@@520) ($generated@@139 ($generated@@319 $generated@@143 $generated@@520) ($generated@@142 $generated@@518 $generated@@519))))
 :pattern ( ($generated@@225 $generated@@520 ($generated@@142 $generated@@518 $generated@@519)))
)))
(assert (forall (($generated@@521 T@U) ) (! (let (($generated@@522 (type $generated@@521)))
 (not ($generated@@0 ($generated@@84 ($generated@@402 $generated@@522) $generated@@521))))
 :pattern ( (let (($generated@@522 (type $generated@@521)))
($generated@@84 ($generated@@402 $generated@@522) $generated@@521)))
)))
(assert (forall (($generated@@524 T@U) ) (! (= (type ($generated@@523 $generated@@524)) $generated@@72)
 :pattern ( ($generated@@523 $generated@@524))
)))
(assert (forall (($generated@@525 T@U) ($generated@@526 T@U) ) (!  (=> (and (= (type $generated@@525) $generated@@67) (= (type $generated@@526) $generated@@67)) (and (= ($generated@@75 ($generated@@142 $generated@@525 $generated@@526)) $generated@@62) (= ($generated@@523 ($generated@@142 $generated@@525 $generated@@526)) $generated@@65)))
 :pattern ( ($generated@@142 $generated@@525 $generated@@526))
)))
(assert (forall (($generated@@527 T@U) ) (!  (=> (= (type $generated@@527) $generated@@143) (= ($generated@@506 ($generated@@269 $generated@@527)) ($generated@@507 $generated@@527)))
 :pattern ( ($generated@@506 ($generated@@269 $generated@@527)))
)))
(assert (forall (($generated@@528 T@U) ) (!  (=> (and (= (type $generated@@528) $generated@@152) ($generated@@225 $generated@@528 ($generated@@78 0))) (and (= ($generated@@269 ($generated@@319 $generated@@2 $generated@@528)) $generated@@528) ($generated@@139 ($generated@@319 ($generated@@79 $generated@@152 $generated@@4) $generated@@528) ($generated@@78 0))))
 :pattern ( ($generated@@225 $generated@@528 ($generated@@78 0)))
)))
(assert (forall (($generated@@529 T@U) ($generated@@530 T@U) ) (!  (=> (and (and (= (type $generated@@529) $generated@@152) (= (type $generated@@530) $generated@@67)) ($generated@@225 $generated@@529 ($generated@@234 $generated@@530))) (and (= ($generated@@269 ($generated@@319 ($generated@@79 $generated@@152 $generated@@4) $generated@@529)) $generated@@529) ($generated@@139 ($generated@@319 ($generated@@79 $generated@@152 $generated@@4) $generated@@529) ($generated@@234 $generated@@530))))
 :pattern ( ($generated@@225 $generated@@529 ($generated@@234 $generated@@530)))
)))
(assert (forall (($generated@@531 T@U) ($generated@@532 T@U) ) (!  (=> (and (and (= (type $generated@@531) $generated@@152) (= (type $generated@@532) $generated@@67)) ($generated@@225 $generated@@531 ($generated@@239 $generated@@532))) (and (= ($generated@@269 ($generated@@319 ($generated@@79 $generated@@152 $generated@@4) $generated@@531)) $generated@@531) ($generated@@139 ($generated@@319 ($generated@@79 $generated@@152 $generated@@4) $generated@@531) ($generated@@239 $generated@@532))))
 :pattern ( ($generated@@225 $generated@@531 ($generated@@239 $generated@@532)))
)))
(assert (forall (($generated@@533 T@U) ($generated@@534 T@U) ) (!  (=> (and (and (= (type $generated@@533) $generated@@152) (= (type $generated@@534) $generated@@67)) ($generated@@225 $generated@@533 ($generated@@157 $generated@@534))) (and (= ($generated@@269 ($generated@@319 ($generated@@79 $generated@@152 $generated@@2) $generated@@533)) $generated@@533) ($generated@@139 ($generated@@319 ($generated@@79 $generated@@152 $generated@@2) $generated@@533) ($generated@@157 $generated@@534))))
 :pattern ( ($generated@@225 $generated@@533 ($generated@@157 $generated@@534)))
)))
(assert (forall (($generated@@535 T@U) ($generated@@536 T@U) ) (!  (=> (and (and (= (type $generated@@535) $generated@@152) (= (type $generated@@536) $generated@@67)) ($generated@@225 $generated@@535 ($generated@@468 $generated@@536))) (and (= ($generated@@269 ($generated@@319 ($generated@@263 $generated@@152) $generated@@535)) $generated@@535) ($generated@@139 ($generated@@319 ($generated@@263 $generated@@152) $generated@@535) ($generated@@468 $generated@@536))))
 :pattern ( ($generated@@225 $generated@@535 ($generated@@468 $generated@@536)))
)))
(assert (= ($generated@@75 $generated@@135) $generated@@63))
(assert (= ($generated@@523 $generated@@135) $generated@@66))
(assert (= ($generated@@75 $generated@@221) $generated@@64))
(assert (= ($generated@@523 $generated@@221) $generated@@66))
(assert (forall (($generated@@537 T@U) ($generated@@538 T@U) ($generated@@539 T@U) ) (!  (=> (and (and (= (type $generated@@537) ($generated@@79 $generated@@152 $generated@@2)) (= (type $generated@@538) $generated@@67)) (= (type $generated@@539) ($generated@@79 $generated@@80 $generated@@81))) (= ($generated@@77 $generated@@537 ($generated@@157 $generated@@538) $generated@@539) (forall (($generated@@540 T@U) ) (!  (=> (and (= (type $generated@@540) $generated@@152) (< 0 ($generated ($generated@@84 $generated@@537 $generated@@540)))) ($generated@@249 $generated@@540 $generated@@538 $generated@@539))
 :pattern ( ($generated@@84 $generated@@537 $generated@@540))
))))
 :pattern ( ($generated@@77 $generated@@537 ($generated@@157 $generated@@538) $generated@@539))
)))
(assert (forall (($generated@@541 T@U) ($generated@@542 T@U) ($generated@@543 T@U) ) (!  (=> (and (and (and (= (type $generated@@541) $generated@@143) (= (type $generated@@542) $generated@@67)) (= (type $generated@@543) ($generated@@79 $generated@@80 $generated@@81))) (and ($generated@@248 $generated@@543) (and ($generated@@141 $generated@@541) (exists (($generated@@544 T@U) ) (!  (and (= (type $generated@@544) $generated@@67) ($generated@@77 $generated@@541 ($generated@@142 $generated@@542 $generated@@544) $generated@@543))
 :pattern ( ($generated@@77 $generated@@541 ($generated@@142 $generated@@542 $generated@@544) $generated@@543))
))))) ($generated@@249 ($generated@@150 $generated@@541) $generated@@542 $generated@@543))
 :pattern ( ($generated@@249 ($generated@@150 $generated@@541) $generated@@542 $generated@@543))
)))
(assert (forall (($generated@@545 T@U) ($generated@@546 T@U) ($generated@@547 T@U) ) (!  (=> (and (and (and (= (type $generated@@545) $generated@@143) (= (type $generated@@546) $generated@@67)) (= (type $generated@@547) ($generated@@79 $generated@@80 $generated@@81))) (and ($generated@@248 $generated@@547) (and ($generated@@141 $generated@@545) (exists (($generated@@548 T@U) ) (!  (and (= (type $generated@@548) $generated@@67) ($generated@@77 $generated@@545 ($generated@@142 $generated@@548 $generated@@546) $generated@@547))
 :pattern ( ($generated@@77 $generated@@545 ($generated@@142 $generated@@548 $generated@@546) $generated@@547))
))))) ($generated@@249 ($generated@@151 $generated@@545) $generated@@546 $generated@@547))
 :pattern ( ($generated@@249 ($generated@@151 $generated@@545) $generated@@546 $generated@@547))
)))
(assert (forall (($generated@@549 T@U) ($generated@@550 T@U) ) (!  (=> (and (= (type $generated@@549) $generated@@152) (= (type $generated@@550) $generated@@152)) (= ($generated@@224 ($generated@@244 $generated@@549) ($generated@@244 $generated@@550)) ($generated@@244 ($generated@@224 $generated@@549 $generated@@550))))
 :pattern ( ($generated@@224 ($generated@@244 $generated@@549) ($generated@@244 $generated@@550)))
)))
(assert (forall (($generated@@551 T@U) ) (! (= ($generated@@269 ($generated@@244 $generated@@551)) ($generated@@244 ($generated@@269 $generated@@551)))
 :pattern ( ($generated@@269 ($generated@@244 $generated@@551)))
)))
(assert (forall (($generated@@552 T@U) ) (! (let (($generated@@553 ($generated@@264 (type $generated@@552))))
 (=> (and (= (type $generated@@552) ($generated@@263 $generated@@553)) (= ($generated@@262 $generated@@552) 0)) (= $generated@@552 ($generated@@261 $generated@@553))))
 :pattern ( ($generated@@262 $generated@@552))
)))
(assert (forall (($generated@@554 T@U) ($generated@@555 T@U) ($generated@@556 T@U) ) (! (let (($generated@@557 (type $generated@@555)))
 (=> (and (and (= (type $generated@@554) ($generated@@79 $generated@@557 $generated@@2)) (= (type $generated@@556) $generated@@2)) (<= 0 ($generated $generated@@556))) (= ($generated@@274 ($generated@@85 $generated@@554 $generated@@555 $generated@@556)) (+ (- ($generated@@274 $generated@@554) ($generated ($generated@@84 $generated@@554 $generated@@555))) ($generated $generated@@556)))))
 :pattern ( ($generated@@274 ($generated@@85 $generated@@554 $generated@@555 $generated@@556)))
)))
(assert (forall (($generated@@558 T@U) ($generated@@559 T@U) ) (!  (=> (and (= (type $generated@@558) ($generated@@79 $generated@@80 $generated@@81)) (= (type $generated@@559) $generated@@2)) ($generated@@77 $generated@@559 $generated@@46 $generated@@558))
 :pattern ( ($generated@@77 $generated@@559 $generated@@46 $generated@@558))
)))
(assert (forall (($generated@@560 T@U) ($generated@@561 T@U) ) (!  (=> (and (= (type $generated@@560) ($generated@@79 $generated@@80 $generated@@81)) (= (type $generated@@561) $generated@@3)) ($generated@@77 $generated@@561 $generated@@47 $generated@@560))
 :pattern ( ($generated@@77 $generated@@561 $generated@@47 $generated@@560))
)))
(assert (forall (($generated@@562 T@U) ($generated@@563 T@U) ) (!  (=> (and (= (type $generated@@562) ($generated@@79 $generated@@80 $generated@@81)) (= (type $generated@@563) $generated@@4)) ($generated@@77 $generated@@563 $generated@@44 $generated@@562))
 :pattern ( ($generated@@77 $generated@@563 $generated@@44 $generated@@562))
)))
(assert (forall (($generated@@564 T@U) ($generated@@565 T@U) ) (!  (=> (and (= (type $generated@@564) ($generated@@79 $generated@@80 $generated@@81)) (= (type $generated@@565) $generated@@426)) ($generated@@77 $generated@@565 $generated@@45 $generated@@564))
 :pattern ( ($generated@@77 $generated@@565 $generated@@45 $generated@@564))
)))
(assert (forall (($generated@@566 T@U) ($generated@@567 T@U) ) (!  (=> (and (= (type $generated@@566) ($generated@@79 $generated@@80 $generated@@81)) (= (type $generated@@567) $generated@@152)) ($generated@@77 $generated@@567 $generated@@48 $generated@@566))
 :pattern ( ($generated@@77 $generated@@567 $generated@@48 $generated@@566))
)))
(assert (forall (($generated@@568 T@U) ($generated@@569 T@U) ) (!  (=> (and (= (type $generated@@568) ($generated@@263 $generated@@152)) (= (type $generated@@569) $generated@@67)) (= ($generated@@139 $generated@@568 ($generated@@468 $generated@@569)) (forall (($generated@@570 Int) ) (!  (=> (and (<= 0 $generated@@570) (< $generated@@570 ($generated@@262 $generated@@568))) ($generated@@225 ($generated@@469 $generated@@568 $generated@@570) $generated@@569))
 :pattern ( ($generated@@469 $generated@@568 $generated@@570))
))))
 :pattern ( ($generated@@139 $generated@@568 ($generated@@468 $generated@@569)))
)))
(assert (forall (($generated@@572 T@U) ($generated@@573 Int) ) (!  (=> (= (type $generated@@572) ($generated@@263 $generated@@152)) (=> (and (<= 0 $generated@@573) (< $generated@@573 ($generated@@262 $generated@@572))) (< ($generated@@507 ($generated@@319 $generated@@143 ($generated@@469 $generated@@572 $generated@@573))) ($generated@@571 $generated@@572))))
 :pattern ( ($generated@@507 ($generated@@319 $generated@@143 ($generated@@469 $generated@@572 $generated@@573))))
)))
(assert (forall (($generated@@574 T@U) ($generated@@575 T@U) ($generated@@576 T@U) ) (!  (=> (and (and (and (= (type $generated@@574) ($generated@@282 $generated@@152 $generated@@152)) (= (type $generated@@575) $generated@@67)) (= (type $generated@@576) $generated@@67)) ($generated@@139 $generated@@574 ($generated@@386 $generated@@575 $generated@@576))) (and (and ($generated@@139 ($generated@@280 $generated@@574) ($generated@@234 $generated@@575)) ($generated@@139 ($generated@@329 $generated@@574) ($generated@@234 $generated@@576))) ($generated@@139 ($generated@@360 $generated@@574) ($generated@@234 ($generated@@142 $generated@@575 $generated@@576)))))
 :pattern ( ($generated@@139 $generated@@574 ($generated@@386 $generated@@575 $generated@@576)))
)))
(assert (forall (($generated@@577 T@U) ($generated@@578 T@U) ($generated@@579 T@U) ) (!  (=> (and (and (and (= (type $generated@@577) ($generated@@300 $generated@@152 $generated@@152)) (= (type $generated@@578) $generated@@67)) (= (type $generated@@579) $generated@@67)) ($generated@@139 $generated@@577 ($generated@@394 $generated@@578 $generated@@579))) (and (and ($generated@@139 ($generated@@298 $generated@@577) ($generated@@239 $generated@@578)) ($generated@@139 ($generated@@340 $generated@@577) ($generated@@239 $generated@@579))) ($generated@@139 ($generated@@368 $generated@@577) ($generated@@239 ($generated@@142 $generated@@578 $generated@@579)))))
 :pattern ( ($generated@@139 $generated@@577 ($generated@@394 $generated@@578 $generated@@579)))
)))
(assert (forall (($generated@@580 T@U) ) (!  (=> (= (type $generated@@580) $generated@@2) ($generated@@139 $generated@@580 $generated@@46))
 :pattern ( ($generated@@139 $generated@@580 $generated@@46))
)))
(assert (forall (($generated@@581 T@U) ) (!  (=> (= (type $generated@@581) $generated@@3) ($generated@@139 $generated@@581 $generated@@47))
 :pattern ( ($generated@@139 $generated@@581 $generated@@47))
)))
(assert (forall (($generated@@582 T@U) ) (!  (=> (= (type $generated@@582) $generated@@4) ($generated@@139 $generated@@582 $generated@@44))
 :pattern ( ($generated@@139 $generated@@582 $generated@@44))
)))
(assert (forall (($generated@@583 T@U) ) (!  (=> (= (type $generated@@583) $generated@@426) ($generated@@139 $generated@@583 $generated@@45))
 :pattern ( ($generated@@139 $generated@@583 $generated@@45))
)))
(assert (forall (($generated@@584 T@U) ) (!  (=> (= (type $generated@@584) $generated@@152) ($generated@@139 $generated@@584 $generated@@48))
 :pattern ( ($generated@@139 $generated@@584 $generated@@48))
)))
(push 1)
(declare-fun ControlFlow (Int Int) Int)
(declare-fun $generated@@585 () T@U)
(declare-fun $generated@@586 () T@U)
(declare-fun $generated@@587 () T@U)
(declare-fun $generated@@588 (T@U) Bool)
(declare-fun $generated@@589 () Int)
(assert  (and (and (= (type $generated@@585) ($generated@@167 $generated@@80 $generated@@4)) (= (type $generated@@586) ($generated@@79 $generated@@80 $generated@@81))) (= (type $generated@@587) ($generated@@79 $generated@@152 $generated@@4))))
(set-option :timeout 0)
(set-option :rlimit 0)
(assert (not
 (=> (= (ControlFlow 0 0) 3) (let (($generated@@590  (=> (and (= $generated@@585 ($generated@@166 $generated@@136 $generated@@586 $generated@@60 false)) (= (ControlFlow 0 2) (- 0 1))) (not ($generated@@0 ($generated@@84 $generated@@587 ($generated@@269 $generated@@136)))))))
(let (($generated@@591  (=> (and ($generated@@248 $generated@@586) ($generated@@588 $generated@@586)) (=> (and (and ($generated@@139 $generated@@587 ($generated@@234 $generated@@221)) ($generated@@77 $generated@@587 ($generated@@234 $generated@@221) $generated@@586)) (and (= 1 $generated@@589) (= (ControlFlow 0 3) 2))) $generated@@590))))
$generated@@591)))
))
(check-sat)
(pop 1)
; Valid
(get-info :rlimit)
(reset)
(set-option :rlimit 0)
; did a full reset
(reset)
(set-option :print-success false)
(set-info :smt-lib-version 2.6)
(set-option :auto_config false)
(set-option :type_check true)
(set-option :smt.case_split 3)
(set-option :smt.qi.eager_threshold 100)
(set-option :smt.delay_units true)
(set-option :smt.arith.solver 2)
(set-option :smt.mbqi false)
(set-option :model.compact false)
(set-option :model.v2 true)
(set-option :pp.bv_literals false)
; done setting options


(set-info :category "industrial")
(declare-sort |T@U| 0)
(declare-sort |T@T| 0)
(declare-fun real_pow (Real Real) Real)
(declare-fun UOrdering2 (|T@U| |T@U|) Bool)
(declare-fun UOrdering3 (|T@T| |T@U| |T@U|) Bool)
(declare-fun tickleBool (Bool) Bool)
(assert (and (tickleBool true) (tickleBool false)))
(declare-fun $generated (T@U) Int)
(declare-fun $generated@@0 (T@U) Bool)
(declare-fun $generated@@1 (T@T) Int)
(declare-fun $generated@@2 () T@T)
(declare-fun $generated@@3 () T@T)
(declare-fun $generated@@4 () T@T)
(declare-fun $generated@@5 () T@T)
(declare-fun $generated@@6 () T@T)
(declare-fun $generated@@7 () T@T)
(declare-fun $generated@@8 (Int) T@U)
(declare-fun type (T@U) T@T)
(declare-fun $generated@@9 (Real) T@U)
(declare-fun $generated@@10 (T@U) Real)
(declare-fun $generated@@11 (Bool) T@U)
(declare-fun $generated@@12 (RoundingMode) T@U)
(declare-fun $generated@@13 (T@U) RoundingMode)
(declare-fun $generated@@14 (String) T@U)
(declare-fun $generated@@15 (T@U) String)
(declare-fun $generated@@16 ((RegEx String)) T@U)
(declare-fun $generated@@17 (T@U) (RegEx String))
(declare-fun $generated@@44 () T@U)
(declare-fun $generated@@45 () T@U)
(declare-fun $generated@@46 () T@U)
(declare-fun $generated@@47 () T@U)
(declare-fun $generated@@48 () T@U)
(declare-fun $generated@@49 () T@U)
(declare-fun $generated@@50 () T@U)
(declare-fun $generated@@51 () T@U)
(declare-fun $generated@@52 () T@U)
(declare-fun $generated@@53 () T@U)
(declare-fun $generated@@54 () T@U)
(declare-fun $generated@@55 () T@U)
(declare-fun $generated@@56 () T@U)
(declare-fun $generated@@57 () T@U)
(declare-fun $generated@@58 () T@U)
(declare-fun $generated@@59 () T@U)
(declare-fun $generated@@60 () T@U)
(declare-fun $generated@@61 () T@U)
(declare-fun $generated@@62 () T@U)
(declare-fun $generated@@63 () T@U)
(declare-fun $generated@@64 () T@U)
(declare-fun $generated@@65 () T@U)
(declare-fun $generated@@66 () T@U)
(declare-fun $generated@@67 () T@U)
(declare-fun $generated@@68 () T@U)
(declare-fun $generated@@69 () T@U)
(declare-fun $generated@@70 () T@T)
(declare-fun $generated@@71 () T@T)
(declare-fun $generated@@72 (T@T) T@T)
(declare-fun $generated@@73 (T@T) T@T)
(declare-fun $generated@@74 () T@T)
(declare-fun $generated@@75 () T@T)
(declare-fun $generated@@78 (T@U) T@U)
(declare-fun $generated@@80 (T@U T@U T@U) Bool)
(declare-fun $generated@@81 (Int) T@U)
(declare-fun $generated@@82 (T@T T@T) T@T)
(declare-fun $generated@@83 () T@T)
(declare-fun $generated@@84 () T@T)
(declare-fun $generated@@85 (T@T) T@T)
(declare-fun $generated@@86 (T@T) T@T)
(declare-fun $generated@@87 (T@U T@U) T@U)
(declare-fun $generated@@88 (T@U T@U T@U) T@U)
(declare-fun $generated@@89 (T@U T@U) T@U)
(declare-fun $generated@@90 (T@U T@U T@U) T@U)
(declare-fun $generated@@138 () T@U)
(declare-fun $generated@@141 (T@U T@U) Bool)
(declare-fun $generated@@143 (T@U) Bool)
(declare-fun $generated@@144 (T@U T@U) T@U)
(declare-fun $generated@@145 () T@T)
(declare-fun $generated@@151 (T@U T@U) Bool)
(declare-fun $generated@@152 (T@U) T@U)
(declare-fun $generated@@153 (T@U) T@U)
(declare-fun $generated@@154 () T@T)
(declare-fun $generated@@159 (T@U) T@U)
(declare-fun $generated@@160 () T@U)
(declare-fun $generated@@162 (T@U) T@U)
(declare-fun $generated@@163 (T@U) Bool)
(declare-fun $generated@@167 (T@U T@U T@U) T@U)
(declare-fun $generated@@168 (T@U T@U T@U Bool) T@U)
(declare-fun $generated@@169 (T@T T@T) T@T)
(declare-fun $generated@@170 (T@T) T@T)
(declare-fun $generated@@171 (T@T) T@T)
(declare-fun $generated@@172 (T@U T@U T@U T@U) T@U)
(declare-fun $generated@@223 (T@U) T@U)
(declare-fun $generated@@224 (T@U) Bool)
(declare-fun $generated@@228 (T@U T@U) T@U)
(declare-fun $generated@@229 (T@U T@U) Bool)
(declare-fun $generated@@239 (T@U T@U) Bool)
(declare-fun $generated@@242 (T@U) Bool)
(declare-fun $generated@@243 (T@U) T@U)
(declare-fun $generated@@244 (T@U) T@U)
(declare-fun $generated@@249 (T@U) T@U)
(declare-fun $generated@@254 (T@U) T@U)
(declare-fun $generated@@259 (Int) Int)
(declare-fun $generated@@261 (T@U) T@U)
(declare-fun $generated@@265 (T@U) Bool)
(declare-fun $generated@@268 (T@U T@U) T@U)
(declare-fun $generated@@274 (T@U T@U T@U) Bool)
(declare-fun $generated@@289 (T@T) T@U)
(declare-fun $generated@@290 (T@U) Int)
(declare-fun $generated@@291 (T@T) T@T)
(declare-fun $generated@@292 (T@T) T@T)
(declare-fun $generated@@299 (T@U) T@U)
(declare-fun $generated@@304 (T@U) Int)
(declare-fun $generated@@305 (T@T) T@U)
(declare-fun $generated@@310 (T@U) T@U)
(declare-fun $generated@@313 (T@U) T@U)
(declare-fun $generated@@314 (T@T T@T) T@U)
(declare-fun $generated@@315 (T@T T@T) T@T)
(declare-fun $generated@@316 (T@T) T@T)
(declare-fun $generated@@317 (T@T) T@T)
(declare-fun $generated@@331 (T@U) T@U)
(declare-fun $generated@@332 (T@T T@T) T@U)
(declare-fun $generated@@333 (T@T T@T) T@T)
(declare-fun $generated@@334 (T@T) T@T)
(declare-fun $generated@@335 (T@T) T@T)
(declare-fun $generated@@352 (T@T T@U) T@U)
(declare-fun $generated@@360 (T@U) T@U)
(declare-fun $generated@@371 (T@U) T@U)
(declare-fun $generated@@381 (T@U) Bool)
(declare-fun $generated@@393 (T@U) T@U)
(declare-fun $generated@@394 (T@U) T@U)
(declare-fun $generated@@401 (T@U) T@U)
(declare-fun $generated@@402 (T@U) T@U)
(declare-fun $generated@@419 (T@U T@U) T@U)
(declare-fun $generated@@427 (T@U T@U) T@U)
(declare-fun $generated@@437 (T@T) T@U)
(declare-fun $generated@@461 () T@T)
(declare-fun $generated@@469 (T@U) T@U)
(declare-fun $generated@@473 (T@U) T@U)
(declare-fun $generated@@479 (T@U) T@U)
(declare-fun $generated@@483 (T@U) T@U)
(declare-fun $generated@@491 (T@U) T@U)
(declare-fun $generated@@495 (T@U) T@U)
(declare-fun $generated@@509 (T@U) T@U)
(declare-fun $generated@@510 (T@U Int) T@U)
(declare-fun $generated@@519 (T@U) Int)
(declare-fun $generated@@521 (T@U) T@U)
(declare-fun $generated@@525 (T@U) T@U)
(declare-fun $generated@@529 (T@U) T@U)
(declare-fun $generated@@533 (T@U) T@U)
(declare-fun $generated@@537 (T@U) T@U)
(declare-fun $generated@@550 (T@U) Int)
(declare-fun $generated@@551 (T@U) Int)
(declare-fun $generated@@632 (T@U) Int)
(assert  (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (= ($generated@@1 $generated@@2) 0) (= ($generated@@1 $generated@@3) 1)) (= ($generated@@1 $generated@@4) 2)) (= ($generated@@1 $generated@@5) 3)) (= ($generated@@1 $generated@@6) 4)) (= ($generated@@1 $generated@@7) 5)) (forall (($generated@@18 Int) ) (! (= ($generated ($generated@@8 $generated@@18)) $generated@@18)
 :pattern ( ($generated@@8 $generated@@18))
))) (forall (($generated@@19 T@U) ) (!  (=> (= (type $generated@@19) $generated@@2) (= ($generated@@8 ($generated $generated@@19)) $generated@@19))
 :pattern ( ($generated $generated@@19))
))) (forall (($generated@@20 Int) ) (! (= (type ($generated@@8 $generated@@20)) $generated@@2)
 :pattern ( ($generated@@8 $generated@@20))
))) (forall (($generated@@21 Real) ) (! (= ($generated@@10 ($generated@@9 $generated@@21)) $generated@@21)
 :pattern ( ($generated@@9 $generated@@21))
))) (forall (($generated@@22 T@U) ) (!  (=> (= (type $generated@@22) $generated@@3) (= ($generated@@9 ($generated@@10 $generated@@22)) $generated@@22))
 :pattern ( ($generated@@10 $generated@@22))
))) (forall (($generated@@23 Real) ) (! (= (type ($generated@@9 $generated@@23)) $generated@@3)
 :pattern ( ($generated@@9 $generated@@23))
))) (forall (($generated@@24 Bool) ) (! (= ($generated@@0 ($generated@@11 $generated@@24)) $generated@@24)
 :pattern ( ($generated@@11 $generated@@24))
))) (forall (($generated@@25 T@U) ) (!  (=> (= (type $generated@@25) $generated@@4) (= ($generated@@11 ($generated@@0 $generated@@25)) $generated@@25))
 :pattern ( ($generated@@0 $generated@@25))
))) (forall (($generated@@26 Bool) ) (! (= (type ($generated@@11 $generated@@26)) $generated@@4)
 :pattern ( ($generated@@11 $generated@@26))
))) (forall (($generated@@27 RoundingMode) ) (! (= ($generated@@13 ($generated@@12 $generated@@27)) $generated@@27)
 :pattern ( ($generated@@12 $generated@@27))
))) (forall (($generated@@28 T@U) ) (!  (=> (= (type $generated@@28) $generated@@5) (= ($generated@@12 ($generated@@13 $generated@@28)) $generated@@28))
 :pattern ( ($generated@@13 $generated@@28))
))) (forall (($generated@@29 RoundingMode) ) (! (= (type ($generated@@12 $generated@@29)) $generated@@5)
 :pattern ( ($generated@@12 $generated@@29))
))) (forall (($generated@@30 String) ) (! (= ($generated@@15 ($generated@@14 $generated@@30)) $generated@@30)
 :pattern ( ($generated@@14 $generated@@30))
))) (forall (($generated@@31 T@U) ) (!  (=> (= (type $generated@@31) $generated@@6) (= ($generated@@14 ($generated@@15 $generated@@31)) $generated@@31))
 :pattern ( ($generated@@15 $generated@@31))
))) (forall (($generated@@32 String) ) (! (= (type ($generated@@14 $generated@@32)) $generated@@6)
 :pattern ( ($generated@@14 $generated@@32))
))) (forall (($generated@@33 (RegEx String)) ) (! (= ($generated@@17 ($generated@@16 $generated@@33)) $generated@@33)
 :pattern ( ($generated@@16 $generated@@33))
))) (forall (($generated@@34 T@U) ) (!  (=> (= (type $generated@@34) $generated@@7) (= ($generated@@16 ($generated@@17 $generated@@34)) $generated@@34))
 :pattern ( ($generated@@17 $generated@@34))
))) (forall (($generated@@35 (RegEx String)) ) (! (= (type ($generated@@16 $generated@@35)) $generated@@7)
 :pattern ( ($generated@@16 $generated@@35))
))))
(assert (forall (($generated@@36 T@U) ) (! (UOrdering2 $generated@@36 $generated@@36)
 :no-pattern ($generated $generated@@36)
 :no-pattern ($generated@@0 $generated@@36)
)))
(assert (forall (($generated@@37 T@U) ($generated@@38 T@U) ($generated@@39 T@U) ) (! (let (($generated@@40 (type $generated@@37)))
 (=> (and (and (= (type $generated@@38) $generated@@40) (= (type $generated@@39) $generated@@40)) (and (UOrdering2 $generated@@37 $generated@@38) (UOrdering2 $generated@@38 $generated@@39))) (UOrdering2 $generated@@37 $generated@@39)))
 :pattern ( (UOrdering2 $generated@@37 $generated@@38) (UOrdering2 $generated@@38 $generated@@39))
)))
(assert (forall (($generated@@41 T@U) ($generated@@42 T@U) ) (! (let (($generated@@43 (type $generated@@41)))
 (=> (= (type $generated@@42) $generated@@43) (=> (and (UOrdering2 $generated@@41 $generated@@42) (UOrdering2 $generated@@42 $generated@@41)) (= $generated@@41 $generated@@42))))
 :pattern ( (UOrdering2 $generated@@41 $generated@@42) (UOrdering2 $generated@@42 $generated@@41))
)))
(assert  (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (= ($generated@@1 $generated@@70) 6) (= (type $generated@@44) $generated@@70)) (= (type $generated@@45) $generated@@70)) (= (type $generated@@46) $generated@@70)) (= (type $generated@@47) $generated@@70)) (= (type $generated@@48) $generated@@70)) (= ($generated@@1 $generated@@71) 7)) (= (type $generated@@49) $generated@@71)) (= (type $generated@@50) $generated@@71)) (= (type $generated@@51) $generated@@71)) (= (type $generated@@52) $generated@@71)) (= (type $generated@@53) $generated@@71)) (= (type $generated@@54) $generated@@71)) (= (type $generated@@55) $generated@@71)) (= (type $generated@@56) $generated@@71)) (= (type $generated@@57) $generated@@71)) (= (type $generated@@58) $generated@@71)) (= (type $generated@@59) $generated@@71)) (forall (($generated@@76 T@T) ) (= ($generated@@1 ($generated@@72 $generated@@76)) 8))) (forall (($generated@@77 T@T) ) (! (= ($generated@@73 ($generated@@72 $generated@@77)) $generated@@77)
 :pattern ( ($generated@@72 $generated@@77))
))) (= (type $generated@@60) ($generated@@72 $generated@@4))) (= (type $generated@@61) $generated@@71)) (= ($generated@@1 $generated@@74) 9)) (= (type $generated@@62) $generated@@74)) (= (type $generated@@63) $generated@@71)) (= (type $generated@@64) $generated@@74)) (= (type $generated@@65) $generated@@71)) (= (type $generated@@66) $generated@@74)) (= ($generated@@1 $generated@@75) 10)) (= (type $generated@@67) $generated@@75)) (= (type $generated@@68) $generated@@75)) (= (type $generated@@69) $generated@@75)))
(assert (distinct $generated@@44 $generated@@45 $generated@@46 $generated@@47 $generated@@48 $generated@@49 $generated@@50 $generated@@51 $generated@@52 $generated@@53 $generated@@54 $generated@@55 $generated@@56 $generated@@57 $generated@@58 $generated@@59 $generated@@60 $generated@@61 $generated@@62 $generated@@63 $generated@@64 $generated@@65 $generated@@66 $generated@@67 $generated@@68 $generated@@69)
)
(assert (forall (($generated@@79 T@U) ) (! (= (type ($generated@@78 $generated@@79)) $generated@@71)
 :pattern ( ($generated@@78 $generated@@79))
)))
(assert (= ($generated@@78 $generated@@44) $generated@@49))
(assert (= ($generated@@78 $generated@@45) $generated@@50))
(assert (= ($generated@@78 $generated@@46) $generated@@51))
(assert (= ($generated@@78 $generated@@47) $generated@@52))
(assert (= ($generated@@78 $generated@@48) $generated@@53))
(assert  (and (and (and (and (and (and (and (and (and (and (and (and (and (forall (($generated@@91 T@T) ($generated@@92 T@T) ) (= ($generated@@1 ($generated@@82 $generated@@91 $generated@@92)) 11)) (forall (($generated@@93 T@T) ($generated@@94 T@T) ) (! (= ($generated@@85 ($generated@@82 $generated@@93 $generated@@94)) $generated@@93)
 :pattern ( ($generated@@82 $generated@@93 $generated@@94))
))) (forall (($generated@@95 T@T) ($generated@@96 T@T) ) (! (= ($generated@@86 ($generated@@82 $generated@@95 $generated@@96)) $generated@@96)
 :pattern ( ($generated@@82 $generated@@95 $generated@@96))
))) (forall (($generated@@97 T@U) ($generated@@98 T@U) ) (! (let (($generated@@99 ($generated@@86 (type $generated@@97))))
(= (type ($generated@@87 $generated@@97 $generated@@98)) $generated@@99))
 :pattern ( ($generated@@87 $generated@@97 $generated@@98))
))) (forall (($generated@@100 T@U) ($generated@@101 T@U) ($generated@@102 T@U) ) (! (let (($generated@@103 (type $generated@@102)))
(let (($generated@@104 (type $generated@@101)))
(= (type ($generated@@88 $generated@@100 $generated@@101 $generated@@102)) ($generated@@82 $generated@@104 $generated@@103))))
 :pattern ( ($generated@@88 $generated@@100 $generated@@101 $generated@@102))
))) (forall (($generated@@105 T@U) ($generated@@106 T@U) ($generated@@107 T@U) ) (! (let (($generated@@108 ($generated@@86 (type $generated@@105))))
 (=> (= (type $generated@@107) $generated@@108) (= ($generated@@87 ($generated@@88 $generated@@105 $generated@@106 $generated@@107) $generated@@106) $generated@@107)))
 :weight 0
))) (and (forall (($generated@@109 T@U) ($generated@@110 T@U) ($generated@@111 T@U) ($generated@@112 T@U) ) (!  (or (= $generated@@111 $generated@@112) (= ($generated@@87 ($generated@@88 $generated@@110 $generated@@111 $generated@@109) $generated@@112) ($generated@@87 $generated@@110 $generated@@112)))
 :weight 0
)) (forall (($generated@@113 T@U) ($generated@@114 T@U) ($generated@@115 T@U) ($generated@@116 T@U) ) (!  (or true (= ($generated@@87 ($generated@@88 $generated@@114 $generated@@115 $generated@@113) $generated@@116) ($generated@@87 $generated@@114 $generated@@116)))
 :weight 0
)))) (= ($generated@@1 $generated@@83) 12)) (forall (($generated@@117 T@U) ($generated@@118 T@U) ) (! (let (($generated@@119 ($generated@@73 (type $generated@@118))))
(= (type ($generated@@89 $generated@@117 $generated@@118)) $generated@@119))
 :pattern ( ($generated@@89 $generated@@117 $generated@@118))
))) (= ($generated@@1 $generated@@84) 13)) (forall (($generated@@120 T@U) ($generated@@121 T@U) ($generated@@122 T@U) ) (! (= (type ($generated@@90 $generated@@120 $generated@@121 $generated@@122)) $generated@@84)
 :pattern ( ($generated@@90 $generated@@120 $generated@@121 $generated@@122))
))) (forall (($generated@@123 T@U) ($generated@@124 T@U) ($generated@@125 T@U) ) (! (let (($generated@@126 ($generated@@73 (type $generated@@124))))
 (=> (= (type $generated@@125) $generated@@126) (= ($generated@@89 ($generated@@90 $generated@@123 $generated@@124 $generated@@125) $generated@@124) $generated@@125)))
 :weight 0
))) (and (forall (($generated@@127 T@U) ($generated@@128 T@U) ($generated@@129 T@U) ($generated@@130 T@U) ) (!  (or (= $generated@@129 $generated@@130) (= ($generated@@89 ($generated@@90 $generated@@128 $generated@@129 $generated@@127) $generated@@130) ($generated@@89 $generated@@128 $generated@@130)))
 :weight 0
)) (forall (($generated@@131 T@U) ($generated@@132 T@U) ($generated@@133 T@U) ($generated@@134 T@U) ) (!  (or true (= ($generated@@89 ($generated@@90 $generated@@132 $generated@@133 $generated@@131) $generated@@134) ($generated@@89 $generated@@132 $generated@@134)))
 :weight 0
)))) (forall (($generated@@135 Int) ) (! (= (type ($generated@@81 $generated@@135)) $generated@@70)
 :pattern ( ($generated@@81 $generated@@135))
))))
(assert (forall (($generated@@136 T@U) ($generated@@137 T@U) ) (!  (=> (and (= (type $generated@@136) $generated@@2) (= (type $generated@@137) ($generated@@82 $generated@@83 $generated@@84))) ($generated@@80 $generated@@136 ($generated@@81 0) $generated@@137))
 :pattern ( ($generated@@80 $generated@@136 ($generated@@81 0) $generated@@137))
)))
(assert (= (type $generated@@138) $generated@@70))
(assert (forall (($generated@@139 T@U) ($generated@@140 T@U) ) (!  (=> (and (= (type $generated@@139) $generated@@2) (= (type $generated@@140) ($generated@@82 $generated@@83 $generated@@84))) ($generated@@80 $generated@@139 $generated@@138 $generated@@140))
 :pattern ( ($generated@@80 $generated@@139 $generated@@138 $generated@@140))
)))
(assert (forall (($generated@@142 T@U) ) (!  (=> (= (type $generated@@142) $generated@@2) ($generated@@141 $generated@@142 ($generated@@81 0)))
 :pattern ( ($generated@@141 $generated@@142 ($generated@@81 0)))
)))
(assert  (and (= ($generated@@1 $generated@@145) 14) (forall (($generated@@146 T@U) ($generated@@147 T@U) ) (! (= (type ($generated@@144 $generated@@146 $generated@@147)) $generated@@70)
 :pattern ( ($generated@@144 $generated@@146 $generated@@147))
))))
(assert (forall (($generated@@148 T@U) ($generated@@149 T@U) ($generated@@150 T@U) ) (!  (=> (and (and (and (= (type $generated@@148) $generated@@70) (= (type $generated@@149) $generated@@70)) (= (type $generated@@150) $generated@@145)) ($generated@@141 $generated@@150 ($generated@@144 $generated@@148 $generated@@149))) ($generated@@143 $generated@@150))
 :pattern ( ($generated@@143 $generated@@150) ($generated@@141 $generated@@150 ($generated@@144 $generated@@148 $generated@@149)))
)))
(assert  (and (and (= ($generated@@1 $generated@@154) 15) (forall (($generated@@155 T@U) ) (! (= (type ($generated@@152 $generated@@155)) $generated@@154)
 :pattern ( ($generated@@152 $generated@@155))
))) (forall (($generated@@156 T@U) ) (! (= (type ($generated@@153 $generated@@156)) $generated@@154)
 :pattern ( ($generated@@153 $generated@@156))
))))
(assert (forall (($generated@@157 T@U) ($generated@@158 T@U) ) (!  (=> (and (and (= (type $generated@@157) $generated@@145) (= (type $generated@@158) $generated@@145)) true) (= ($generated@@151 $generated@@157 $generated@@158)  (and (= ($generated@@152 $generated@@157) ($generated@@152 $generated@@158)) (= ($generated@@153 $generated@@157) ($generated@@153 $generated@@158)))))
 :pattern ( ($generated@@151 $generated@@157 $generated@@158))
)))
(assert  (and (forall (($generated@@161 T@U) ) (! (= (type ($generated@@159 $generated@@161)) $generated@@74)
 :pattern ( ($generated@@159 $generated@@161))
)) (= (type $generated@@160) $generated@@145)))
(assert (= ($generated@@159 $generated@@160) $generated@@64))
(assert (forall (($generated@@164 T@U) ) (! (= (type ($generated@@162 $generated@@164)) $generated@@70)
 :pattern ( ($generated@@162 $generated@@164))
)))
(assert (forall (($generated@@165 T@U) ($generated@@166 T@U) ) (!  (=> (and (and (= (type $generated@@165) ($generated@@82 $generated@@154 $generated@@2)) (= (type $generated@@166) $generated@@70)) ($generated@@141 $generated@@165 ($generated@@162 $generated@@166))) ($generated@@163 $generated@@165))
 :pattern ( ($generated@@141 $generated@@165 ($generated@@162 $generated@@166)))
)))
(assert  (and (and (and (and (and (and (and (forall (($generated@@173 T@T) ($generated@@174 T@T) ) (= ($generated@@1 ($generated@@169 $generated@@173 $generated@@174)) 16)) (forall (($generated@@175 T@T) ($generated@@176 T@T) ) (! (= ($generated@@170 ($generated@@169 $generated@@175 $generated@@176)) $generated@@175)
 :pattern ( ($generated@@169 $generated@@175 $generated@@176))
))) (forall (($generated@@177 T@T) ($generated@@178 T@T) ) (! (= ($generated@@171 ($generated@@169 $generated@@177 $generated@@178)) $generated@@178)
 :pattern ( ($generated@@169 $generated@@177 $generated@@178))
))) (forall (($generated@@179 T@U) ($generated@@180 T@U) ($generated@@181 T@U) ) (! (let (($generated@@182 ($generated@@171 (type $generated@@179))))
(= (type ($generated@@167 $generated@@179 $generated@@180 $generated@@181)) $generated@@182))
 :pattern ( ($generated@@167 $generated@@179 $generated@@180 $generated@@181))
))) (forall (($generated@@183 T@U) ($generated@@184 T@U) ($generated@@185 T@U) ($generated@@186 T@U) ) (! (let (($generated@@187 (type $generated@@186)))
(let (($generated@@188 (type $generated@@184)))
(= (type ($generated@@172 $generated@@183 $generated@@184 $generated@@185 $generated@@186)) ($generated@@169 $generated@@188 $generated@@187))))
 :pattern ( ($generated@@172 $generated@@183 $generated@@184 $generated@@185 $generated@@186))
))) (forall (($generated@@189 T@U) ($generated@@190 T@U) ($generated@@191 T@U) ($generated@@192 T@U) ) (! (let (($generated@@193 ($generated@@171 (type $generated@@189))))
 (=> (= (type $generated@@192) $generated@@193) (= ($generated@@167 ($generated@@172 $generated@@189 $generated@@190 $generated@@191 $generated@@192) $generated@@190 $generated@@191) $generated@@192)))
 :weight 0
))) (and (and (forall (($generated@@194 T@U) ($generated@@195 T@U) ($generated@@196 T@U) ($generated@@197 T@U) ($generated@@198 T@U) ($generated@@199 T@U) ) (!  (or (= $generated@@196 $generated@@198) (= ($generated@@167 ($generated@@172 $generated@@195 $generated@@196 $generated@@197 $generated@@194) $generated@@198 $generated@@199) ($generated@@167 $generated@@195 $generated@@198 $generated@@199)))
 :weight 0
)) (forall (($generated@@200 T@U) ($generated@@201 T@U) ($generated@@202 T@U) ($generated@@203 T@U) ($generated@@204 T@U) ($generated@@205 T@U) ) (!  (or (= $generated@@203 $generated@@205) (= ($generated@@167 ($generated@@172 $generated@@201 $generated@@202 $generated@@203 $generated@@200) $generated@@204 $generated@@205) ($generated@@167 $generated@@201 $generated@@204 $generated@@205)))
 :weight 0
))) (forall (($generated@@206 T@U) ($generated@@207 T@U) ($generated@@208 T@U) ($generated@@209 T@U) ($generated@@210 T@U) ($generated@@211 T@U) ) (!  (or true (= ($generated@@167 ($generated@@172 $generated@@207 $generated@@208 $generated@@209 $generated@@206) $generated@@210 $generated@@211) ($generated@@167 $generated@@207 $generated@@210 $generated@@211)))
 :weight 0
)))) (forall (($generated@@212 T@U) ($generated@@213 T@U) ($generated@@214 T@U) ($generated@@215 Bool) ) (! (= (type ($generated@@168 $generated@@212 $generated@@213 $generated@@214 $generated@@215)) ($generated@@169 $generated@@83 $generated@@4))
 :pattern ( ($generated@@168 $generated@@212 $generated@@213 $generated@@214 $generated@@215))
))))
(assert (forall (($generated@@216 T@U) ($generated@@217 T@U) ($generated@@218 T@U) ($generated@@219 Bool) ($generated@@220 T@U) ($generated@@221 T@U) ) (! (let (($generated@@222 ($generated@@73 (type $generated@@221))))
 (=> (and (and (and (and (= (type $generated@@216) $generated@@83) (= (type $generated@@217) ($generated@@82 $generated@@83 $generated@@84))) (= (type $generated@@218) ($generated@@72 $generated@@4))) (= (type $generated@@220) $generated@@83)) (= (type $generated@@221) ($generated@@72 $generated@@222))) (= ($generated@@0 ($generated@@167 ($generated@@168 $generated@@216 $generated@@217 $generated@@218 $generated@@219) $generated@@220 $generated@@221))  (=> (and (not (= $generated@@220 $generated@@216)) ($generated@@0 ($generated@@89 ($generated@@87 $generated@@217 $generated@@220) $generated@@218))) $generated@@219))))
 :pattern ( ($generated@@167 ($generated@@168 $generated@@216 $generated@@217 $generated@@218 $generated@@219) $generated@@220 $generated@@221))
)))
(assert (forall (($generated@@225 T@U) ) (! (= (type ($generated@@223 $generated@@225)) $generated@@70)
 :pattern ( ($generated@@223 $generated@@225))
)))
(assert (forall (($generated@@226 T@U) ($generated@@227 T@U) ) (!  (=> (and (and (= (type $generated@@226) $generated@@70) (= (type $generated@@227) ($generated@@82 $generated@@83 $generated@@84))) ($generated@@224 $generated@@227)) ($generated@@80 $generated@@160 ($generated@@223 $generated@@226) $generated@@227))
 :pattern ( ($generated@@80 $generated@@160 ($generated@@223 $generated@@226) $generated@@227))
)))
(assert (forall (($generated@@230 T@U) ($generated@@231 T@U) ) (! (= (type ($generated@@228 $generated@@230 $generated@@231)) $generated@@145)
 :pattern ( ($generated@@228 $generated@@230 $generated@@231))
)))
(assert (forall (($generated@@232 T@U) ($generated@@233 T@U) ($generated@@234 T@U) ($generated@@235 T@U) ) (!  (=> (and (and (and (= (type $generated@@232) $generated@@70) (= (type $generated@@233) $generated@@70)) (= (type $generated@@234) $generated@@154)) (= (type $generated@@235) $generated@@154)) (= ($generated@@141 ($generated@@228 $generated@@234 $generated@@235) ($generated@@144 $generated@@232 $generated@@233))  (and ($generated@@229 $generated@@234 $generated@@232) ($generated@@229 $generated@@235 $generated@@233))))
 :pattern ( ($generated@@141 ($generated@@228 $generated@@234 $generated@@235) ($generated@@144 $generated@@232 $generated@@233)))
)))
(assert (forall (($generated@@236 T@U) ) (!  (=> (= (type $generated@@236) $generated@@70) ($generated@@141 $generated@@160 ($generated@@223 $generated@@236)))
 :pattern ( ($generated@@141 $generated@@160 ($generated@@223 $generated@@236)))
)))
(assert (forall (($generated@@237 T@U) ($generated@@238 T@U) ) (!  (=> (and (= (type $generated@@237) $generated@@145) (= (type $generated@@238) $generated@@145)) (= ($generated@@151 $generated@@237 $generated@@238) (= $generated@@237 $generated@@238)))
 :pattern ( ($generated@@151 $generated@@237 $generated@@238))
)))
(assert (forall (($generated@@240 T@U) ($generated@@241 T@U) ) (!  (=> (and (= (type $generated@@240) $generated@@145) (= (type $generated@@241) $generated@@145)) (= ($generated@@239 $generated@@240 $generated@@241) (= $generated@@240 $generated@@241)))
 :pattern ( ($generated@@239 $generated@@240 $generated@@241))
)))
(assert  (and (forall (($generated@@245 T@U) ) (! (= (type ($generated@@243 $generated@@245)) $generated@@154)
 :pattern ( ($generated@@243 $generated@@245))
)) (forall (($generated@@246 T@U) ) (! (= (type ($generated@@244 $generated@@246)) $generated@@145)
 :pattern ( ($generated@@244 $generated@@246))
))))
(assert (forall (($generated@@247 T@U) ($generated@@248 T@U) ) (!  (=> (and (and (= (type $generated@@247) $generated@@145) (= (type $generated@@248) $generated@@145)) (and ($generated@@242 $generated@@247) ($generated@@242 $generated@@248))) (= ($generated@@239 $generated@@247 $generated@@248)  (and (= ($generated@@243 $generated@@247) ($generated@@243 $generated@@248)) ($generated@@239 ($generated@@244 $generated@@247) ($generated@@244 $generated@@248)))))
 :pattern ( ($generated@@239 $generated@@247 $generated@@248) ($generated@@242 $generated@@247))
 :pattern ( ($generated@@239 $generated@@247 $generated@@248) ($generated@@242 $generated@@248))
)))
(assert (forall (($generated@@250 T@U) ) (! (= (type ($generated@@249 $generated@@250)) $generated@@70)
 :pattern ( ($generated@@249 $generated@@250))
)))
(assert (forall (($generated@@251 T@U) ($generated@@252 T@U) ) (!  (=> (and (= (type $generated@@251) ($generated@@82 $generated@@154 $generated@@4)) (= (type $generated@@252) $generated@@70)) (= ($generated@@141 $generated@@251 ($generated@@249 $generated@@252)) (forall (($generated@@253 T@U) ) (!  (=> (and (= (type $generated@@253) $generated@@154) ($generated@@0 ($generated@@87 $generated@@251 $generated@@253))) ($generated@@229 $generated@@253 $generated@@252))
 :pattern ( ($generated@@87 $generated@@251 $generated@@253))
))))
 :pattern ( ($generated@@141 $generated@@251 ($generated@@249 $generated@@252)))
)))
(assert (forall (($generated@@255 T@U) ) (! (= (type ($generated@@254 $generated@@255)) $generated@@70)
 :pattern ( ($generated@@254 $generated@@255))
)))
(assert (forall (($generated@@256 T@U) ($generated@@257 T@U) ) (!  (=> (and (= (type $generated@@256) ($generated@@82 $generated@@154 $generated@@4)) (= (type $generated@@257) $generated@@70)) (= ($generated@@141 $generated@@256 ($generated@@254 $generated@@257)) (forall (($generated@@258 T@U) ) (!  (=> (and (= (type $generated@@258) $generated@@154) ($generated@@0 ($generated@@87 $generated@@256 $generated@@258))) ($generated@@229 $generated@@258 $generated@@257))
 :pattern ( ($generated@@87 $generated@@256 $generated@@258))
))))
 :pattern ( ($generated@@141 $generated@@256 ($generated@@254 $generated@@257)))
)))
(assert (forall (($generated@@260 Int) ) (! (= ($generated@@259 $generated@@260) $generated@@260)
 :pattern ( ($generated@@259 $generated@@260))
)))
(assert (forall (($generated@@262 T@U) ) (! (let (($generated@@263 (type $generated@@262)))
(= (type ($generated@@261 $generated@@262)) $generated@@263))
 :pattern ( ($generated@@261 $generated@@262))
)))
(assert (forall (($generated@@264 T@U) ) (! (= ($generated@@261 $generated@@264) $generated@@264)
 :pattern ( ($generated@@261 $generated@@264))
)))
(assert (forall (($generated@@266 T@U) ($generated@@267 T@U) ) (!  (=> (and (and (= (type $generated@@266) $generated@@145) (= (type $generated@@267) $generated@@145)) (and ($generated@@265 $generated@@266) ($generated@@265 $generated@@267))) (= ($generated@@239 $generated@@266 $generated@@267) true))
 :pattern ( ($generated@@239 $generated@@266 $generated@@267) ($generated@@265 $generated@@266))
 :pattern ( ($generated@@239 $generated@@266 $generated@@267) ($generated@@265 $generated@@267))
)))
(assert (forall (($generated@@269 T@U) ($generated@@270 T@U) ) (! (= (type ($generated@@268 $generated@@269 $generated@@270)) $generated@@145)
 :pattern ( ($generated@@268 $generated@@269 $generated@@270))
)))
(assert (forall (($generated@@271 T@U) ($generated@@272 T@U) ($generated@@273 T@U) ) (!  (=> (and (and (= (type $generated@@271) $generated@@70) (= (type $generated@@272) $generated@@154)) (= (type $generated@@273) $generated@@145)) (= ($generated@@141 ($generated@@268 $generated@@272 $generated@@273) ($generated@@223 $generated@@271))  (and ($generated@@229 $generated@@272 $generated@@271) ($generated@@141 $generated@@273 ($generated@@223 $generated@@271)))))
 :pattern ( ($generated@@141 ($generated@@268 $generated@@272 $generated@@273) ($generated@@223 $generated@@271)))
)))
(assert (forall (($generated@@275 T@U) ($generated@@276 T@U) ($generated@@277 T@U) ($generated@@278 T@U) ($generated@@279 T@U) ) (!  (=> (and (and (and (and (and (= (type $generated@@275) $generated@@70) (= (type $generated@@276) $generated@@70)) (= (type $generated@@277) $generated@@154)) (= (type $generated@@278) $generated@@154)) (= (type $generated@@279) ($generated@@82 $generated@@83 $generated@@84))) ($generated@@224 $generated@@279)) (= ($generated@@80 ($generated@@228 $generated@@277 $generated@@278) ($generated@@144 $generated@@275 $generated@@276) $generated@@279)  (and ($generated@@274 $generated@@277 $generated@@275 $generated@@279) ($generated@@274 $generated@@278 $generated@@276 $generated@@279))))
 :pattern ( ($generated@@80 ($generated@@228 $generated@@277 $generated@@278) ($generated@@144 $generated@@275 $generated@@276) $generated@@279))
)))
(assert (forall (($generated@@280 T@U) ) (!  (=> (= (type $generated@@280) $generated@@145) (= ($generated@@143 $generated@@280) (= ($generated@@159 $generated@@280) $generated@@62)))
 :pattern ( ($generated@@143 $generated@@280))
)))
(assert (forall (($generated@@281 T@U) ) (!  (=> (= (type $generated@@281) $generated@@145) (= ($generated@@265 $generated@@281) (= ($generated@@159 $generated@@281) $generated@@64)))
 :pattern ( ($generated@@265 $generated@@281))
)))
(assert (forall (($generated@@282 T@U) ) (!  (=> (= (type $generated@@282) $generated@@145) (= ($generated@@242 $generated@@282) (= ($generated@@159 $generated@@282) $generated@@66)))
 :pattern ( ($generated@@242 $generated@@282))
)))
(assert (forall (($generated@@283 T@U) ) (!  (=> (and (= (type $generated@@283) $generated@@145) ($generated@@143 $generated@@283)) (exists (($generated@@284 T@U) ($generated@@285 T@U) ) (!  (and (and (= (type $generated@@284) $generated@@154) (= (type $generated@@285) $generated@@154)) (= $generated@@283 ($generated@@228 $generated@@284 $generated@@285)))
 :no-pattern (type $generated@@284)
 :no-pattern (type $generated@@285)
 :no-pattern ($generated $generated@@284)
 :no-pattern ($generated@@0 $generated@@284)
 :no-pattern ($generated $generated@@285)
 :no-pattern ($generated@@0 $generated@@285)
)))
 :pattern ( ($generated@@143 $generated@@283))
)))
(assert (forall (($generated@@286 T@U) ) (!  (=> (and (= (type $generated@@286) $generated@@145) ($generated@@242 $generated@@286)) (exists (($generated@@287 T@U) ($generated@@288 T@U) ) (!  (and (and (= (type $generated@@287) $generated@@154) (= (type $generated@@288) $generated@@145)) (= $generated@@286 ($generated@@268 $generated@@287 $generated@@288)))
 :no-pattern (type $generated@@287)
 :no-pattern (type $generated@@288)
 :no-pattern ($generated $generated@@287)
 :no-pattern ($generated@@0 $generated@@287)
 :no-pattern ($generated $generated@@288)
 :no-pattern ($generated@@0 $generated@@288)
)))
 :pattern ( ($generated@@242 $generated@@286))
)))
(assert  (and (and (forall (($generated@@293 T@T) ) (= ($generated@@1 ($generated@@291 $generated@@293)) 17)) (forall (($generated@@294 T@T) ) (! (= ($generated@@292 ($generated@@291 $generated@@294)) $generated@@294)
 :pattern ( ($generated@@291 $generated@@294))
))) (forall (($generated@@295 T@T) ) (! (= (type ($generated@@289 $generated@@295)) ($generated@@291 $generated@@295))
 :pattern ( ($generated@@289 $generated@@295))
))))
(assert (forall (($generated@@296 T@T) ) (! (= ($generated@@290 ($generated@@289 $generated@@296)) 0)
 :pattern ( ($generated@@289 $generated@@296))
)))
(assert (forall (($generated@@297 T@U) ) (!  (=> (and (= (type $generated@@297) $generated@@145) ($generated@@265 $generated@@297)) (= $generated@@297 $generated@@160))
 :pattern ( ($generated@@265 $generated@@297))
)))
(assert (forall (($generated@@298 T@U) ) (!  (=> (= (type $generated@@298) $generated@@2) (= ($generated@@141 $generated@@298 $generated@@138) (<= ($generated@@259 0) ($generated $generated@@298))))
 :pattern ( ($generated@@141 $generated@@298 $generated@@138))
)))
(assert (forall (($generated@@300 T@U) ) (! (= (type ($generated@@299 $generated@@300)) $generated@@154)
 :pattern ( ($generated@@299 $generated@@300))
)))
(assert (forall (($generated@@301 T@U) ($generated@@302 T@U) ($generated@@303 T@U) ) (!  (=> (and (= (type $generated@@302) $generated@@70) (= (type $generated@@303) ($generated@@82 $generated@@83 $generated@@84))) (= ($generated@@274 ($generated@@299 $generated@@301) $generated@@302 $generated@@303) ($generated@@80 $generated@@301 $generated@@302 $generated@@303)))
 :pattern ( ($generated@@274 ($generated@@299 $generated@@301) $generated@@302 $generated@@303))
)))
(assert (forall (($generated@@306 T@T) ) (! (= (type ($generated@@305 $generated@@306)) ($generated@@82 $generated@@306 $generated@@2))
 :pattern ( ($generated@@305 $generated@@306))
)))
(assert (forall (($generated@@307 T@U) ) (! (let (($generated@@308 ($generated@@85 (type $generated@@307))))
 (=> (= (type $generated@@307) ($generated@@82 $generated@@308 $generated@@2)) (and (= (= ($generated@@304 $generated@@307) 0) (= $generated@@307 ($generated@@305 $generated@@308))) (=> (not (= ($generated@@304 $generated@@307) 0)) (exists (($generated@@309 T@U) ) (!  (and (= (type $generated@@309) $generated@@308) (< 0 ($generated ($generated@@87 $generated@@307 $generated@@309))))
 :no-pattern (type $generated@@309)
 :no-pattern ($generated $generated@@309)
 :no-pattern ($generated@@0 $generated@@309)
))))))
 :pattern ( ($generated@@304 $generated@@307))
)))
(assert (forall (($generated@@311 T@U) ) (! (= (type ($generated@@310 $generated@@311)) $generated@@75)
 :pattern ( ($generated@@310 $generated@@311))
)))
(assert (forall (($generated@@312 T@U) ) (!  (=> (= (type $generated@@312) $generated@@70) (and (= ($generated@@78 ($generated@@223 $generated@@312)) $generated@@65) (= ($generated@@310 ($generated@@223 $generated@@312)) $generated@@69)))
 :pattern ( ($generated@@223 $generated@@312))
)))
(assert  (and (and (and (and (forall (($generated@@318 T@T) ($generated@@319 T@T) ) (= ($generated@@1 ($generated@@315 $generated@@318 $generated@@319)) 18)) (forall (($generated@@320 T@T) ($generated@@321 T@T) ) (! (= ($generated@@316 ($generated@@315 $generated@@320 $generated@@321)) $generated@@320)
 :pattern ( ($generated@@315 $generated@@320 $generated@@321))
))) (forall (($generated@@322 T@T) ($generated@@323 T@T) ) (! (= ($generated@@317 ($generated@@315 $generated@@322 $generated@@323)) $generated@@323)
 :pattern ( ($generated@@315 $generated@@322 $generated@@323))
))) (forall (($generated@@324 T@U) ) (! (let (($generated@@325 ($generated@@316 (type $generated@@324))))
(= (type ($generated@@313 $generated@@324)) ($generated@@82 $generated@@325 $generated@@4)))
 :pattern ( ($generated@@313 $generated@@324))
))) (forall (($generated@@326 T@T) ($generated@@327 T@T) ) (! (= (type ($generated@@314 $generated@@326 $generated@@327)) ($generated@@315 $generated@@326 $generated@@327))
 :pattern ( ($generated@@314 $generated@@326 $generated@@327))
))))
(assert (forall (($generated@@328 T@U) ($generated@@329 T@T) ) (! (let (($generated@@330 (type $generated@@328)))
 (not ($generated@@0 ($generated@@87 ($generated@@313 ($generated@@314 $generated@@330 $generated@@329)) $generated@@328))))
 :pattern ( (let (($generated@@330 (type $generated@@328)))
($generated@@87 ($generated@@313 ($generated@@314 $generated@@330 $generated@@329)) $generated@@328)))
)))
(assert  (and (and (and (and (forall (($generated@@336 T@T) ($generated@@337 T@T) ) (= ($generated@@1 ($generated@@333 $generated@@336 $generated@@337)) 19)) (forall (($generated@@338 T@T) ($generated@@339 T@T) ) (! (= ($generated@@334 ($generated@@333 $generated@@338 $generated@@339)) $generated@@338)
 :pattern ( ($generated@@333 $generated@@338 $generated@@339))
))) (forall (($generated@@340 T@T) ($generated@@341 T@T) ) (! (= ($generated@@335 ($generated@@333 $generated@@340 $generated@@341)) $generated@@341)
 :pattern ( ($generated@@333 $generated@@340 $generated@@341))
))) (forall (($generated@@342 T@U) ) (! (let (($generated@@343 ($generated@@334 (type $generated@@342))))
(= (type ($generated@@331 $generated@@342)) ($generated@@82 $generated@@343 $generated@@4)))
 :pattern ( ($generated@@331 $generated@@342))
))) (forall (($generated@@344 T@T) ($generated@@345 T@T) ) (! (= (type ($generated@@332 $generated@@344 $generated@@345)) ($generated@@333 $generated@@344 $generated@@345))
 :pattern ( ($generated@@332 $generated@@344 $generated@@345))
))))
(assert (forall (($generated@@346 T@U) ($generated@@347 T@T) ) (! (let (($generated@@348 (type $generated@@346)))
 (not ($generated@@0 ($generated@@87 ($generated@@331 ($generated@@332 $generated@@348 $generated@@347)) $generated@@346))))
 :pattern ( (let (($generated@@348 (type $generated@@346)))
($generated@@87 ($generated@@331 ($generated@@332 $generated@@348 $generated@@347)) $generated@@346)))
)))
(assert (forall (($generated@@349 T@U) ) (! (let (($generated@@350 ($generated@@85 (type $generated@@349))))
 (=> (= (type $generated@@349) ($generated@@82 $generated@@350 $generated@@2)) (= ($generated@@163 $generated@@349) (forall (($generated@@351 T@U) ) (!  (=> (= (type $generated@@351) $generated@@350) (and (<= 0 ($generated ($generated@@87 $generated@@349 $generated@@351))) (<= ($generated ($generated@@87 $generated@@349 $generated@@351)) ($generated@@304 $generated@@349))))
 :pattern ( ($generated@@87 $generated@@349 $generated@@351))
)))))
 :pattern ( ($generated@@163 $generated@@349))
)))
(assert (forall (($generated@@353 T@T) ($generated@@354 T@U) ) (! (= (type ($generated@@352 $generated@@353 $generated@@354)) $generated@@353)
 :pattern ( ($generated@@352 $generated@@353 $generated@@354))
)))
(assert (forall (($generated@@355 T@U) ) (!  (=> (and (= (type $generated@@355) $generated@@154) ($generated@@229 $generated@@355 $generated@@138)) (and (= ($generated@@299 ($generated@@352 $generated@@2 $generated@@355)) $generated@@355) ($generated@@141 ($generated@@352 $generated@@2 $generated@@355) $generated@@138)))
 :pattern ( ($generated@@229 $generated@@355 $generated@@138))
)))
(assert (forall (($generated@@356 T@U) ) (! (let (($generated@@357 ($generated@@317 (type $generated@@356))))
(let (($generated@@358 ($generated@@316 (type $generated@@356))))
 (=> (= (type $generated@@356) ($generated@@315 $generated@@358 $generated@@357)) (or (= $generated@@356 ($generated@@314 $generated@@358 $generated@@357)) (exists (($generated@@359 T@U) ) (!  (and (= (type $generated@@359) $generated@@358) ($generated@@0 ($generated@@87 ($generated@@313 $generated@@356) $generated@@359)))
 :no-pattern (type $generated@@359)
 :no-pattern ($generated $generated@@359)
 :no-pattern ($generated@@0 $generated@@359)
))))))
 :pattern ( ($generated@@313 $generated@@356))
)))
(assert (forall (($generated@@361 T@U) ) (! (let (($generated@@362 ($generated@@317 (type $generated@@361))))
(= (type ($generated@@360 $generated@@361)) ($generated@@82 $generated@@362 $generated@@4)))
 :pattern ( ($generated@@360 $generated@@361))
)))
(assert (forall (($generated@@363 T@U) ) (! (let (($generated@@364 ($generated@@317 (type $generated@@363))))
(let (($generated@@365 ($generated@@316 (type $generated@@363))))
 (=> (= (type $generated@@363) ($generated@@315 $generated@@365 $generated@@364)) (or (= $generated@@363 ($generated@@314 $generated@@365 $generated@@364)) (exists (($generated@@366 T@U) ) (!  (and (= (type $generated@@366) $generated@@364) ($generated@@0 ($generated@@87 ($generated@@360 $generated@@363) $generated@@366)))
 :no-pattern (type $generated@@366)
 :no-pattern ($generated $generated@@366)
 :no-pattern ($generated@@0 $generated@@366)
))))))
 :pattern ( ($generated@@360 $generated@@363))
)))
(assert (forall (($generated@@367 T@U) ) (! (let (($generated@@368 ($generated@@335 (type $generated@@367))))
(let (($generated@@369 ($generated@@334 (type $generated@@367))))
 (=> (= (type $generated@@367) ($generated@@333 $generated@@369 $generated@@368)) (or (= $generated@@367 ($generated@@332 $generated@@369 $generated@@368)) (exists (($generated@@370 T@U) ) (!  (and (= (type $generated@@370) $generated@@369) ($generated@@0 ($generated@@87 ($generated@@331 $generated@@367) $generated@@370)))
 :no-pattern (type $generated@@370)
 :no-pattern ($generated $generated@@370)
 :no-pattern ($generated@@0 $generated@@370)
))))))
 :pattern ( ($generated@@331 $generated@@367))
)))
(assert (forall (($generated@@372 T@U) ) (! (let (($generated@@373 ($generated@@335 (type $generated@@372))))
(= (type ($generated@@371 $generated@@372)) ($generated@@82 $generated@@373 $generated@@4)))
 :pattern ( ($generated@@371 $generated@@372))
)))
(assert (forall (($generated@@374 T@U) ) (! (let (($generated@@375 ($generated@@335 (type $generated@@374))))
(let (($generated@@376 ($generated@@334 (type $generated@@374))))
 (=> (= (type $generated@@374) ($generated@@333 $generated@@376 $generated@@375)) (or (= $generated@@374 ($generated@@332 $generated@@376 $generated@@375)) (exists (($generated@@377 T@U) ) (!  (and (= (type $generated@@377) $generated@@375) ($generated@@0 ($generated@@87 ($generated@@371 $generated@@374) $generated@@377)))
 :no-pattern (type $generated@@377)
 :no-pattern ($generated $generated@@377)
 :no-pattern ($generated@@0 $generated@@377)
))))))
 :pattern ( ($generated@@371 $generated@@374))
)))
(assert (forall (($generated@@378 T@U) ($generated@@379 T@U) ) (!  (=> (and (= (type $generated@@378) ($generated@@82 $generated@@154 $generated@@2)) (= (type $generated@@379) $generated@@70)) (= ($generated@@141 $generated@@378 ($generated@@162 $generated@@379)) (forall (($generated@@380 T@U) ) (!  (=> (and (= (type $generated@@380) $generated@@154) (< 0 ($generated ($generated@@87 $generated@@378 $generated@@380)))) ($generated@@229 $generated@@380 $generated@@379))
 :pattern ( ($generated@@87 $generated@@378 $generated@@380))
))))
 :pattern ( ($generated@@141 $generated@@378 ($generated@@162 $generated@@379)))
)))
(assert (forall (($generated@@382 T@U) ) (!  (=> (and (= (type $generated@@382) $generated@@145) ($generated@@381 $generated@@382)) (or ($generated@@265 $generated@@382) ($generated@@242 $generated@@382)))
 :pattern ( ($generated@@381 $generated@@382))
)))
(assert (forall (($generated@@383 T@U) ($generated@@384 T@U) ($generated@@385 T@U) ) (!  (=> (and (and (= (type $generated@@383) ($generated@@82 $generated@@154 $generated@@4)) (= (type $generated@@384) $generated@@70)) (= (type $generated@@385) ($generated@@82 $generated@@83 $generated@@84))) (= ($generated@@80 $generated@@383 ($generated@@249 $generated@@384) $generated@@385) (forall (($generated@@386 T@U) ) (!  (=> (and (= (type $generated@@386) $generated@@154) ($generated@@0 ($generated@@87 $generated@@383 $generated@@386))) ($generated@@274 $generated@@386 $generated@@384 $generated@@385))
 :pattern ( ($generated@@87 $generated@@383 $generated@@386))
))))
 :pattern ( ($generated@@80 $generated@@383 ($generated@@249 $generated@@384) $generated@@385))
)))
(assert (forall (($generated@@387 T@U) ($generated@@388 T@U) ($generated@@389 T@U) ) (!  (=> (and (and (= (type $generated@@387) ($generated@@82 $generated@@154 $generated@@4)) (= (type $generated@@388) $generated@@70)) (= (type $generated@@389) ($generated@@82 $generated@@83 $generated@@84))) (= ($generated@@80 $generated@@387 ($generated@@254 $generated@@388) $generated@@389) (forall (($generated@@390 T@U) ) (!  (=> (and (= (type $generated@@390) $generated@@154) ($generated@@0 ($generated@@87 $generated@@387 $generated@@390))) ($generated@@274 $generated@@390 $generated@@388 $generated@@389))
 :pattern ( ($generated@@87 $generated@@387 $generated@@390))
))))
 :pattern ( ($generated@@80 $generated@@387 ($generated@@254 $generated@@388) $generated@@389))
)))
(assert (forall (($generated@@391 T@U) ) (! (let (($generated@@392 (type $generated@@391)))
(= ($generated ($generated@@87 ($generated@@305 $generated@@392) $generated@@391)) 0))
 :pattern ( (let (($generated@@392 (type $generated@@391)))
($generated@@87 ($generated@@305 $generated@@392) $generated@@391)))
)))
(assert  (and (forall (($generated@@395 T@U) ) (! (= (type ($generated@@393 $generated@@395)) ($generated@@82 $generated@@154 $generated@@4))
 :pattern ( ($generated@@393 $generated@@395))
)) (forall (($generated@@396 T@U) ) (! (let (($generated@@397 ($generated@@317 (type $generated@@396))))
(let (($generated@@398 ($generated@@316 (type $generated@@396))))
(= (type ($generated@@394 $generated@@396)) ($generated@@82 $generated@@398 $generated@@397))))
 :pattern ( ($generated@@394 $generated@@396))
))))
(assert (forall (($generated@@399 T@U) ($generated@@400 T@U) ) (!  (=> (and (= (type $generated@@399) ($generated@@315 $generated@@154 $generated@@154)) (= (type $generated@@400) $generated@@154)) (= ($generated@@0 ($generated@@87 ($generated@@393 $generated@@399) $generated@@400))  (and ($generated@@0 ($generated@@87 ($generated@@313 $generated@@399) ($generated@@152 ($generated@@352 $generated@@145 $generated@@400)))) (= ($generated@@87 ($generated@@394 $generated@@399) ($generated@@152 ($generated@@352 $generated@@145 $generated@@400))) ($generated@@153 ($generated@@352 $generated@@145 $generated@@400))))))
 :pattern ( ($generated@@87 ($generated@@393 $generated@@399) $generated@@400))
)))
(assert  (and (forall (($generated@@403 T@U) ) (! (= (type ($generated@@401 $generated@@403)) ($generated@@82 $generated@@154 $generated@@4))
 :pattern ( ($generated@@401 $generated@@403))
)) (forall (($generated@@404 T@U) ) (! (let (($generated@@405 ($generated@@335 (type $generated@@404))))
(let (($generated@@406 ($generated@@334 (type $generated@@404))))
(= (type ($generated@@402 $generated@@404)) ($generated@@82 $generated@@406 $generated@@405))))
 :pattern ( ($generated@@402 $generated@@404))
))))
(assert (forall (($generated@@407 T@U) ($generated@@408 T@U) ) (!  (=> (and (= (type $generated@@407) ($generated@@333 $generated@@154 $generated@@154)) (= (type $generated@@408) $generated@@154)) (= ($generated@@0 ($generated@@87 ($generated@@401 $generated@@407) $generated@@408))  (and ($generated@@0 ($generated@@87 ($generated@@331 $generated@@407) ($generated@@152 ($generated@@352 $generated@@145 $generated@@408)))) (= ($generated@@87 ($generated@@402 $generated@@407) ($generated@@152 ($generated@@352 $generated@@145 $generated@@408))) ($generated@@153 ($generated@@352 $generated@@145 $generated@@408))))))
 :pattern ( ($generated@@87 ($generated@@401 $generated@@407) $generated@@408))
)))
(assert (forall (($generated@@409 T@U) ($generated@@410 T@U) ) (! (let (($generated@@411 (type $generated@@410)))
(let (($generated@@412 ($generated@@316 (type $generated@@409))))
 (=> (= (type $generated@@409) ($generated@@315 $generated@@412 $generated@@411)) (= ($generated@@0 ($generated@@87 ($generated@@360 $generated@@409) $generated@@410)) (exists (($generated@@413 T@U) ) (!  (and (= (type $generated@@413) $generated@@412) (and ($generated@@0 ($generated@@87 ($generated@@313 $generated@@409) $generated@@413)) (= $generated@@410 ($generated@@87 ($generated@@394 $generated@@409) $generated@@413))))
 :pattern ( ($generated@@87 ($generated@@313 $generated@@409) $generated@@413))
 :pattern ( ($generated@@87 ($generated@@394 $generated@@409) $generated@@413))
))))))
 :pattern ( ($generated@@87 ($generated@@360 $generated@@409) $generated@@410))
)))
(assert (forall (($generated@@414 T@U) ($generated@@415 T@U) ) (! (let (($generated@@416 (type $generated@@415)))
(let (($generated@@417 ($generated@@334 (type $generated@@414))))
 (=> (= (type $generated@@414) ($generated@@333 $generated@@417 $generated@@416)) (= ($generated@@0 ($generated@@87 ($generated@@371 $generated@@414) $generated@@415)) (exists (($generated@@418 T@U) ) (!  (and (= (type $generated@@418) $generated@@417) (and ($generated@@0 ($generated@@87 ($generated@@331 $generated@@414) $generated@@418)) (= $generated@@415 ($generated@@87 ($generated@@402 $generated@@414) $generated@@418))))
 :pattern ( ($generated@@87 ($generated@@331 $generated@@414) $generated@@418))
 :pattern ( ($generated@@87 ($generated@@402 $generated@@414) $generated@@418))
))))))
 :pattern ( ($generated@@87 ($generated@@371 $generated@@414) $generated@@415))
)))
(assert (forall (($generated@@420 T@U) ($generated@@421 T@U) ) (! (= (type ($generated@@419 $generated@@420 $generated@@421)) $generated@@70)
 :pattern ( ($generated@@419 $generated@@420 $generated@@421))
)))
(assert (forall (($generated@@422 T@U) ($generated@@423 T@U) ($generated@@424 T@U) ($generated@@425 T@U) ) (!  (=> (and (and (and (= (type $generated@@422) ($generated@@315 $generated@@154 $generated@@154)) (= (type $generated@@423) $generated@@70)) (= (type $generated@@424) $generated@@70)) (= (type $generated@@425) ($generated@@82 $generated@@83 $generated@@84))) (= ($generated@@80 $generated@@422 ($generated@@419 $generated@@423 $generated@@424) $generated@@425) (forall (($generated@@426 T@U) ) (!  (=> (and (= (type $generated@@426) $generated@@154) ($generated@@0 ($generated@@87 ($generated@@313 $generated@@422) $generated@@426))) (and ($generated@@274 ($generated@@87 ($generated@@394 $generated@@422) $generated@@426) $generated@@424 $generated@@425) ($generated@@274 $generated@@426 $generated@@423 $generated@@425)))
 :pattern ( ($generated@@87 ($generated@@394 $generated@@422) $generated@@426))
 :pattern ( ($generated@@87 ($generated@@313 $generated@@422) $generated@@426))
))))
 :pattern ( ($generated@@80 $generated@@422 ($generated@@419 $generated@@423 $generated@@424) $generated@@425))
)))
(assert (forall (($generated@@428 T@U) ($generated@@429 T@U) ) (! (= (type ($generated@@427 $generated@@428 $generated@@429)) $generated@@70)
 :pattern ( ($generated@@427 $generated@@428 $generated@@429))
)))
(assert (forall (($generated@@430 T@U) ($generated@@431 T@U) ($generated@@432 T@U) ($generated@@433 T@U) ) (!  (=> (and (and (and (= (type $generated@@430) ($generated@@333 $generated@@154 $generated@@154)) (= (type $generated@@431) $generated@@70)) (= (type $generated@@432) $generated@@70)) (= (type $generated@@433) ($generated@@82 $generated@@83 $generated@@84))) (= ($generated@@80 $generated@@430 ($generated@@427 $generated@@431 $generated@@432) $generated@@433) (forall (($generated@@434 T@U) ) (!  (=> (and (= (type $generated@@434) $generated@@154) ($generated@@0 ($generated@@87 ($generated@@331 $generated@@430) $generated@@434))) (and ($generated@@274 ($generated@@87 ($generated@@402 $generated@@430) $generated@@434) $generated@@432 $generated@@433) ($generated@@274 $generated@@434 $generated@@431 $generated@@433)))
 :pattern ( ($generated@@87 ($generated@@402 $generated@@430) $generated@@434))
 :pattern ( ($generated@@87 ($generated@@331 $generated@@430) $generated@@434))
))))
 :pattern ( ($generated@@80 $generated@@430 ($generated@@427 $generated@@431 $generated@@432) $generated@@433))
)))
(assert (forall (($generated@@435 T@U) ($generated@@436 T@U) ) (!  (=> (and (and (= (type $generated@@435) $generated@@70) (= (type $generated@@436) $generated@@145)) ($generated@@141 $generated@@436 ($generated@@223 $generated@@435))) (or ($generated@@265 $generated@@436) ($generated@@242 $generated@@436)))
 :pattern ( ($generated@@242 $generated@@436) ($generated@@141 $generated@@436 ($generated@@223 $generated@@435)))
 :pattern ( ($generated@@265 $generated@@436) ($generated@@141 $generated@@436 ($generated@@223 $generated@@435)))
)))
(assert (forall (($generated@@438 T@T) ) (! (= (type ($generated@@437 $generated@@438)) ($generated@@82 $generated@@438 $generated@@4))
 :pattern ( ($generated@@437 $generated@@438))
)))
(assert (forall (($generated@@439 T@U) ) (! (let (($generated@@440 ($generated@@335 (type $generated@@439))))
(let (($generated@@441 ($generated@@334 (type $generated@@439))))
 (=> (= (type $generated@@439) ($generated@@333 $generated@@441 $generated@@440)) (= (= $generated@@439 ($generated@@332 $generated@@441 $generated@@440)) (= ($generated@@331 $generated@@439) ($generated@@437 $generated@@441))))))
 :pattern ( ($generated@@331 $generated@@439))
)))
(assert (forall (($generated@@442 T@U) ) (! (let (($generated@@443 ($generated@@335 (type $generated@@442))))
(let (($generated@@444 ($generated@@334 (type $generated@@442))))
 (=> (= (type $generated@@442) ($generated@@333 $generated@@444 $generated@@443)) (= (= $generated@@442 ($generated@@332 $generated@@444 $generated@@443)) (= ($generated@@371 $generated@@442) ($generated@@437 $generated@@443))))))
 :pattern ( ($generated@@371 $generated@@442))
)))
(assert (forall (($generated@@445 T@U) ) (! (let (($generated@@446 ($generated@@335 (type $generated@@445))))
(let (($generated@@447 ($generated@@334 (type $generated@@445))))
 (=> (= (type $generated@@445) ($generated@@333 $generated@@447 $generated@@446)) (= (= $generated@@445 ($generated@@332 $generated@@447 $generated@@446)) (= ($generated@@401 $generated@@445) ($generated@@437 $generated@@154))))))
 :pattern ( ($generated@@401 $generated@@445))
)))
(assert (forall (($generated@@448 T@U) ) (! (let (($generated@@449 ($generated@@317 (type $generated@@448))))
(let (($generated@@450 ($generated@@316 (type $generated@@448))))
 (=> (= (type $generated@@448) ($generated@@315 $generated@@450 $generated@@449)) (or (= $generated@@448 ($generated@@314 $generated@@450 $generated@@449)) (exists (($generated@@451 T@U) ($generated@@452 T@U) ) (!  (and (and (= (type $generated@@451) $generated@@154) (= (type $generated@@452) $generated@@154)) ($generated@@0 ($generated@@87 ($generated@@393 $generated@@448) ($generated@@299 ($generated@@228 $generated@@451 $generated@@452)))))
 :no-pattern (type $generated@@451)
 :no-pattern (type $generated@@452)
 :no-pattern ($generated $generated@@451)
 :no-pattern ($generated@@0 $generated@@451)
 :no-pattern ($generated $generated@@452)
 :no-pattern ($generated@@0 $generated@@452)
))))))
 :pattern ( ($generated@@393 $generated@@448))
)))
(assert (forall (($generated@@453 T@U) ) (! (let (($generated@@454 ($generated@@335 (type $generated@@453))))
(let (($generated@@455 ($generated@@334 (type $generated@@453))))
 (=> (= (type $generated@@453) ($generated@@333 $generated@@455 $generated@@454)) (or (= $generated@@453 ($generated@@332 $generated@@455 $generated@@454)) (exists (($generated@@456 T@U) ($generated@@457 T@U) ) (!  (and (and (= (type $generated@@456) $generated@@154) (= (type $generated@@457) $generated@@154)) ($generated@@0 ($generated@@87 ($generated@@401 $generated@@453) ($generated@@299 ($generated@@228 $generated@@456 $generated@@457)))))
 :no-pattern (type $generated@@456)
 :no-pattern (type $generated@@457)
 :no-pattern ($generated $generated@@456)
 :no-pattern ($generated@@0 $generated@@456)
 :no-pattern ($generated $generated@@457)
 :no-pattern ($generated@@0 $generated@@457)
))))))
 :pattern ( ($generated@@401 $generated@@453))
)))
(assert (forall (($generated@@458 T@U) ) (!  (=> (and (= (type $generated@@458) $generated@@154) ($generated@@229 $generated@@458 $generated@@46)) (and (= ($generated@@299 ($generated@@352 $generated@@2 $generated@@458)) $generated@@458) ($generated@@141 ($generated@@352 $generated@@2 $generated@@458) $generated@@46)))
 :pattern ( ($generated@@229 $generated@@458 $generated@@46))
)))
(assert (forall (($generated@@459 T@U) ) (!  (=> (and (= (type $generated@@459) $generated@@154) ($generated@@229 $generated@@459 $generated@@47)) (and (= ($generated@@299 ($generated@@352 $generated@@3 $generated@@459)) $generated@@459) ($generated@@141 ($generated@@352 $generated@@3 $generated@@459) $generated@@47)))
 :pattern ( ($generated@@229 $generated@@459 $generated@@47))
)))
(assert (forall (($generated@@460 T@U) ) (!  (=> (and (= (type $generated@@460) $generated@@154) ($generated@@229 $generated@@460 $generated@@44)) (and (= ($generated@@299 ($generated@@352 $generated@@4 $generated@@460)) $generated@@460) ($generated@@141 ($generated@@352 $generated@@4 $generated@@460) $generated@@44)))
 :pattern ( ($generated@@229 $generated@@460 $generated@@44))
)))
(assert (= ($generated@@1 $generated@@461) 20))
(assert (forall (($generated@@462 T@U) ) (!  (=> (and (= (type $generated@@462) $generated@@154) ($generated@@229 $generated@@462 $generated@@45)) (and (= ($generated@@299 ($generated@@352 $generated@@461 $generated@@462)) $generated@@462) ($generated@@141 ($generated@@352 $generated@@461 $generated@@462) $generated@@45)))
 :pattern ( ($generated@@229 $generated@@462 $generated@@45))
)))
(assert (forall (($generated@@463 T@U) ($generated@@464 T@U) ) (!  (=> (= (type $generated@@464) $generated@@70) (= ($generated@@229 ($generated@@299 $generated@@463) $generated@@464) ($generated@@141 $generated@@463 $generated@@464)))
 :pattern ( ($generated@@229 ($generated@@299 $generated@@463) $generated@@464))
)))
(assert (forall (($generated@@465 T@U) ) (! (let (($generated@@466 ($generated@@85 (type $generated@@465))))
 (=> (= (type $generated@@465) ($generated@@82 $generated@@466 $generated@@2)) (<= 0 ($generated@@304 $generated@@465))))
 :pattern ( ($generated@@304 $generated@@465))
)))
(assert (forall (($generated@@467 T@U) ) (! (let (($generated@@468 ($generated@@292 (type $generated@@467))))
 (=> (= (type $generated@@467) ($generated@@291 $generated@@468)) (<= 0 ($generated@@290 $generated@@467))))
 :pattern ( ($generated@@290 $generated@@467))
)))
(assert (forall (($generated@@470 T@U) ) (! (= (type ($generated@@469 $generated@@470)) $generated@@70)
 :pattern ( ($generated@@469 $generated@@470))
)))
(assert (forall (($generated@@471 T@U) ($generated@@472 T@U) ) (!  (=> (and (= (type $generated@@471) $generated@@70) (= (type $generated@@472) $generated@@70)) (= ($generated@@469 ($generated@@419 $generated@@471 $generated@@472)) $generated@@471))
 :pattern ( ($generated@@419 $generated@@471 $generated@@472))
)))
(assert (forall (($generated@@474 T@U) ) (! (= (type ($generated@@473 $generated@@474)) $generated@@70)
 :pattern ( ($generated@@473 $generated@@474))
)))
(assert (forall (($generated@@475 T@U) ($generated@@476 T@U) ) (!  (=> (and (= (type $generated@@475) $generated@@70) (= (type $generated@@476) $generated@@70)) (= ($generated@@473 ($generated@@419 $generated@@475 $generated@@476)) $generated@@476))
 :pattern ( ($generated@@419 $generated@@475 $generated@@476))
)))
(assert (forall (($generated@@477 T@U) ($generated@@478 T@U) ) (!  (=> (and (= (type $generated@@477) $generated@@70) (= (type $generated@@478) $generated@@70)) (= ($generated@@78 ($generated@@419 $generated@@477 $generated@@478)) $generated@@58))
 :pattern ( ($generated@@419 $generated@@477 $generated@@478))
)))
(assert (forall (($generated@@480 T@U) ) (! (= (type ($generated@@479 $generated@@480)) $generated@@70)
 :pattern ( ($generated@@479 $generated@@480))
)))
(assert (forall (($generated@@481 T@U) ($generated@@482 T@U) ) (!  (=> (and (= (type $generated@@481) $generated@@70) (= (type $generated@@482) $generated@@70)) (= ($generated@@479 ($generated@@427 $generated@@481 $generated@@482)) $generated@@481))
 :pattern ( ($generated@@427 $generated@@481 $generated@@482))
)))
(assert (forall (($generated@@484 T@U) ) (! (= (type ($generated@@483 $generated@@484)) $generated@@70)
 :pattern ( ($generated@@483 $generated@@484))
)))
(assert (forall (($generated@@485 T@U) ($generated@@486 T@U) ) (!  (=> (and (= (type $generated@@485) $generated@@70) (= (type $generated@@486) $generated@@70)) (= ($generated@@483 ($generated@@427 $generated@@485 $generated@@486)) $generated@@486))
 :pattern ( ($generated@@427 $generated@@485 $generated@@486))
)))
(assert (forall (($generated@@487 T@U) ($generated@@488 T@U) ) (!  (=> (and (= (type $generated@@487) $generated@@70) (= (type $generated@@488) $generated@@70)) (= ($generated@@78 ($generated@@427 $generated@@487 $generated@@488)) $generated@@59))
 :pattern ( ($generated@@427 $generated@@487 $generated@@488))
)))
(assert (forall (($generated@@489 T@U) ($generated@@490 T@U) ) (!  (=> (and (= (type $generated@@489) $generated@@154) (= (type $generated@@490) $generated@@154)) (= ($generated@@159 ($generated@@228 $generated@@489 $generated@@490)) $generated@@62))
 :pattern ( ($generated@@228 $generated@@489 $generated@@490))
)))
(assert (forall (($generated@@492 T@U) ) (! (= (type ($generated@@491 $generated@@492)) $generated@@70)
 :pattern ( ($generated@@491 $generated@@492))
)))
(assert (forall (($generated@@493 T@U) ($generated@@494 T@U) ) (!  (=> (and (= (type $generated@@493) $generated@@70) (= (type $generated@@494) $generated@@70)) (= ($generated@@491 ($generated@@144 $generated@@493 $generated@@494)) $generated@@493))
 :pattern ( ($generated@@144 $generated@@493 $generated@@494))
)))
(assert (forall (($generated@@496 T@U) ) (! (= (type ($generated@@495 $generated@@496)) $generated@@70)
 :pattern ( ($generated@@495 $generated@@496))
)))
(assert (forall (($generated@@497 T@U) ($generated@@498 T@U) ) (!  (=> (and (= (type $generated@@497) $generated@@70) (= (type $generated@@498) $generated@@70)) (= ($generated@@495 ($generated@@144 $generated@@497 $generated@@498)) $generated@@498))
 :pattern ( ($generated@@144 $generated@@497 $generated@@498))
)))
(assert (forall (($generated@@499 T@U) ($generated@@500 T@U) ) (!  (=> (and (= (type $generated@@499) $generated@@154) (= (type $generated@@500) $generated@@154)) (= ($generated@@152 ($generated@@228 $generated@@499 $generated@@500)) $generated@@499))
 :pattern ( ($generated@@228 $generated@@499 $generated@@500))
)))
(assert (forall (($generated@@501 T@U) ($generated@@502 T@U) ) (!  (=> (and (= (type $generated@@501) $generated@@154) (= (type $generated@@502) $generated@@154)) (= ($generated@@153 ($generated@@228 $generated@@501 $generated@@502)) $generated@@502))
 :pattern ( ($generated@@228 $generated@@501 $generated@@502))
)))
(assert (forall (($generated@@503 T@U) ($generated@@504 T@U) ) (!  (=> (and (= (type $generated@@503) $generated@@154) (= (type $generated@@504) $generated@@145)) (= ($generated@@159 ($generated@@268 $generated@@503 $generated@@504)) $generated@@66))
 :pattern ( ($generated@@268 $generated@@503 $generated@@504))
)))
(assert (forall (($generated@@505 T@U) ($generated@@506 T@U) ) (!  (=> (and (= (type $generated@@505) $generated@@154) (= (type $generated@@506) $generated@@145)) (= ($generated@@243 ($generated@@268 $generated@@505 $generated@@506)) $generated@@505))
 :pattern ( ($generated@@268 $generated@@505 $generated@@506))
)))
(assert (forall (($generated@@507 T@U) ($generated@@508 T@U) ) (!  (=> (and (= (type $generated@@507) $generated@@154) (= (type $generated@@508) $generated@@145)) (= ($generated@@244 ($generated@@268 $generated@@507 $generated@@508)) $generated@@508))
 :pattern ( ($generated@@268 $generated@@507 $generated@@508))
)))
(assert  (and (forall (($generated@@511 T@U) ) (! (= (type ($generated@@509 $generated@@511)) $generated@@70)
 :pattern ( ($generated@@509 $generated@@511))
)) (forall (($generated@@512 T@U) ($generated@@513 Int) ) (! (let (($generated@@514 ($generated@@292 (type $generated@@512))))
(= (type ($generated@@510 $generated@@512 $generated@@513)) $generated@@514))
 :pattern ( ($generated@@510 $generated@@512 $generated@@513))
))))
(assert (forall (($generated@@515 T@U) ($generated@@516 T@U) ($generated@@517 T@U) ) (!  (=> (and (and (= (type $generated@@515) ($generated@@291 $generated@@154)) (= (type $generated@@516) $generated@@70)) (= (type $generated@@517) ($generated@@82 $generated@@83 $generated@@84))) (= ($generated@@80 $generated@@515 ($generated@@509 $generated@@516) $generated@@517) (forall (($generated@@518 Int) ) (!  (=> (and (<= 0 $generated@@518) (< $generated@@518 ($generated@@290 $generated@@515))) ($generated@@274 ($generated@@510 $generated@@515 $generated@@518) $generated@@516 $generated@@517))
 :pattern ( ($generated@@510 $generated@@515 $generated@@518))
))))
 :pattern ( ($generated@@80 $generated@@515 ($generated@@509 $generated@@516) $generated@@517))
)))
(assert (forall (($generated@@520 Int) ) (! (= ($generated@@519 ($generated@@81 $generated@@520)) $generated@@520)
 :pattern ( ($generated@@81 $generated@@520))
)))
(assert (forall (($generated@@522 T@U) ) (! (= (type ($generated@@521 $generated@@522)) $generated@@70)
 :pattern ( ($generated@@521 $generated@@522))
)))
(assert (forall (($generated@@523 T@U) ) (!  (=> (= (type $generated@@523) $generated@@70) (= ($generated@@521 ($generated@@249 $generated@@523)) $generated@@523))
 :pattern ( ($generated@@249 $generated@@523))
)))
(assert (forall (($generated@@524 T@U) ) (!  (=> (= (type $generated@@524) $generated@@70) (= ($generated@@78 ($generated@@249 $generated@@524)) $generated@@54))
 :pattern ( ($generated@@249 $generated@@524))
)))
(assert (forall (($generated@@526 T@U) ) (! (= (type ($generated@@525 $generated@@526)) $generated@@70)
 :pattern ( ($generated@@525 $generated@@526))
)))
(assert (forall (($generated@@527 T@U) ) (!  (=> (= (type $generated@@527) $generated@@70) (= ($generated@@525 ($generated@@254 $generated@@527)) $generated@@527))
 :pattern ( ($generated@@254 $generated@@527))
)))
(assert (forall (($generated@@528 T@U) ) (!  (=> (= (type $generated@@528) $generated@@70) (= ($generated@@78 ($generated@@254 $generated@@528)) $generated@@55))
 :pattern ( ($generated@@254 $generated@@528))
)))
(assert (forall (($generated@@530 T@U) ) (! (= (type ($generated@@529 $generated@@530)) $generated@@70)
 :pattern ( ($generated@@529 $generated@@530))
)))
(assert (forall (($generated@@531 T@U) ) (!  (=> (= (type $generated@@531) $generated@@70) (= ($generated@@529 ($generated@@162 $generated@@531)) $generated@@531))
 :pattern ( ($generated@@162 $generated@@531))
)))
(assert (forall (($generated@@532 T@U) ) (!  (=> (= (type $generated@@532) $generated@@70) (= ($generated@@78 ($generated@@162 $generated@@532)) $generated@@56))
 :pattern ( ($generated@@162 $generated@@532))
)))
(assert (forall (($generated@@534 T@U) ) (! (= (type ($generated@@533 $generated@@534)) $generated@@70)
 :pattern ( ($generated@@533 $generated@@534))
)))
(assert (forall (($generated@@535 T@U) ) (!  (=> (= (type $generated@@535) $generated@@70) (= ($generated@@533 ($generated@@509 $generated@@535)) $generated@@535))
 :pattern ( ($generated@@509 $generated@@535))
)))
(assert (forall (($generated@@536 T@U) ) (!  (=> (= (type $generated@@536) $generated@@70) (= ($generated@@78 ($generated@@509 $generated@@536)) $generated@@57))
 :pattern ( ($generated@@509 $generated@@536))
)))
(assert (forall (($generated@@538 T@U) ) (! (= (type ($generated@@537 $generated@@538)) $generated@@70)
 :pattern ( ($generated@@537 $generated@@538))
)))
(assert (forall (($generated@@539 T@U) ) (!  (=> (= (type $generated@@539) $generated@@70) (= ($generated@@537 ($generated@@223 $generated@@539)) $generated@@539))
 :pattern ( ($generated@@223 $generated@@539))
)))
(assert (forall (($generated@@540 T@U) ) (! (let (($generated@@541 (type $generated@@540)))
(= ($generated@@352 $generated@@541 ($generated@@299 $generated@@540)) $generated@@540))
 :pattern ( ($generated@@299 $generated@@540))
)))
(assert (forall (($generated@@542 T@U) ($generated@@543 T@U) ($generated@@544 T@U) ) (!  (=> (and (and (= (type $generated@@542) ($generated@@315 $generated@@154 $generated@@154)) (= (type $generated@@543) $generated@@70)) (= (type $generated@@544) $generated@@70)) (= ($generated@@141 $generated@@542 ($generated@@419 $generated@@543 $generated@@544)) (forall (($generated@@545 T@U) ) (!  (=> (and (= (type $generated@@545) $generated@@154) ($generated@@0 ($generated@@87 ($generated@@313 $generated@@542) $generated@@545))) (and ($generated@@229 ($generated@@87 ($generated@@394 $generated@@542) $generated@@545) $generated@@544) ($generated@@229 $generated@@545 $generated@@543)))
 :pattern ( ($generated@@87 ($generated@@394 $generated@@542) $generated@@545))
 :pattern ( ($generated@@87 ($generated@@313 $generated@@542) $generated@@545))
))))
 :pattern ( ($generated@@141 $generated@@542 ($generated@@419 $generated@@543 $generated@@544)))
)))
(assert (forall (($generated@@546 T@U) ($generated@@547 T@U) ($generated@@548 T@U) ) (!  (=> (and (and (= (type $generated@@546) ($generated@@333 $generated@@154 $generated@@154)) (= (type $generated@@547) $generated@@70)) (= (type $generated@@548) $generated@@70)) (= ($generated@@141 $generated@@546 ($generated@@427 $generated@@547 $generated@@548)) (forall (($generated@@549 T@U) ) (!  (=> (and (= (type $generated@@549) $generated@@154) ($generated@@0 ($generated@@87 ($generated@@331 $generated@@546) $generated@@549))) (and ($generated@@229 ($generated@@87 ($generated@@402 $generated@@546) $generated@@549) $generated@@548) ($generated@@229 $generated@@549 $generated@@547)))
 :pattern ( ($generated@@87 ($generated@@402 $generated@@546) $generated@@549))
 :pattern ( ($generated@@87 ($generated@@331 $generated@@546) $generated@@549))
))))
 :pattern ( ($generated@@141 $generated@@546 ($generated@@427 $generated@@547 $generated@@548)))
)))
(assert (forall (($generated@@552 T@U) ($generated@@553 T@U) ) (!  (=> (and (= (type $generated@@552) $generated@@154) (= (type $generated@@553) $generated@@154)) (< ($generated@@550 $generated@@552) ($generated@@551 ($generated@@228 $generated@@552 $generated@@553))))
 :pattern ( ($generated@@228 $generated@@552 $generated@@553))
)))
(assert (forall (($generated@@554 T@U) ($generated@@555 T@U) ) (!  (=> (and (= (type $generated@@554) $generated@@154) (= (type $generated@@555) $generated@@154)) (< ($generated@@550 $generated@@555) ($generated@@551 ($generated@@228 $generated@@554 $generated@@555))))
 :pattern ( ($generated@@228 $generated@@554 $generated@@555))
)))
(assert (forall (($generated@@556 T@U) ($generated@@557 T@U) ) (!  (=> (and (= (type $generated@@556) $generated@@154) (= (type $generated@@557) $generated@@145)) (< ($generated@@550 $generated@@556) ($generated@@551 ($generated@@268 $generated@@556 $generated@@557))))
 :pattern ( ($generated@@268 $generated@@556 $generated@@557))
)))
(assert (forall (($generated@@558 T@U) ($generated@@559 T@U) ) (!  (=> (and (= (type $generated@@558) $generated@@154) (= (type $generated@@559) $generated@@145)) (< ($generated@@551 $generated@@559) ($generated@@551 ($generated@@268 $generated@@558 $generated@@559))))
 :pattern ( ($generated@@268 $generated@@558 $generated@@559))
)))
(assert (forall (($generated@@560 T@U) ($generated@@561 T@U) ($generated@@562 T@U) ) (!  (=> (and (and (and (= (type $generated@@560) $generated@@154) (= (type $generated@@561) $generated@@70)) (= (type $generated@@562) $generated@@70)) ($generated@@229 $generated@@560 ($generated@@419 $generated@@561 $generated@@562))) (and (= ($generated@@299 ($generated@@352 ($generated@@315 $generated@@154 $generated@@154) $generated@@560)) $generated@@560) ($generated@@141 ($generated@@352 ($generated@@315 $generated@@154 $generated@@154) $generated@@560) ($generated@@419 $generated@@561 $generated@@562))))
 :pattern ( ($generated@@229 $generated@@560 ($generated@@419 $generated@@561 $generated@@562)))
)))
(assert (forall (($generated@@563 T@U) ($generated@@564 T@U) ($generated@@565 T@U) ) (!  (=> (and (and (and (= (type $generated@@563) $generated@@154) (= (type $generated@@564) $generated@@70)) (= (type $generated@@565) $generated@@70)) ($generated@@229 $generated@@563 ($generated@@427 $generated@@564 $generated@@565))) (and (= ($generated@@299 ($generated@@352 ($generated@@333 $generated@@154 $generated@@154) $generated@@563)) $generated@@563) ($generated@@141 ($generated@@352 ($generated@@333 $generated@@154 $generated@@154) $generated@@563) ($generated@@427 $generated@@564 $generated@@565))))
 :pattern ( ($generated@@229 $generated@@563 ($generated@@427 $generated@@564 $generated@@565)))
)))
(assert (forall (($generated@@566 T@U) ($generated@@567 T@U) ($generated@@568 T@U) ) (!  (=> (and (and (and (= (type $generated@@566) $generated@@70) (= (type $generated@@567) $generated@@70)) (= (type $generated@@568) $generated@@154)) ($generated@@229 $generated@@568 ($generated@@144 $generated@@566 $generated@@567))) (and (= ($generated@@299 ($generated@@352 $generated@@145 $generated@@568)) $generated@@568) ($generated@@141 ($generated@@352 $generated@@145 $generated@@568) ($generated@@144 $generated@@566 $generated@@567))))
 :pattern ( ($generated@@229 $generated@@568 ($generated@@144 $generated@@566 $generated@@567)))
)))
(assert (forall (($generated@@569 T@U) ($generated@@570 T@U) ($generated@@571 T@U) ) (!  (=> (and (and (and (= (type $generated@@569) $generated@@145) (= (type $generated@@570) $generated@@70)) (= (type $generated@@571) ($generated@@82 $generated@@83 $generated@@84))) (and ($generated@@224 $generated@@571) (and ($generated@@242 $generated@@569) ($generated@@80 $generated@@569 ($generated@@223 $generated@@570) $generated@@571)))) ($generated@@274 ($generated@@243 $generated@@569) $generated@@570 $generated@@571))
 :pattern ( ($generated@@274 ($generated@@243 $generated@@569) $generated@@570 $generated@@571))
)))
(assert (forall (($generated@@572 T@U) ) (! (let (($generated@@573 (type $generated@@572)))
 (not ($generated@@0 ($generated@@87 ($generated@@437 $generated@@573) $generated@@572))))
 :pattern ( (let (($generated@@573 (type $generated@@572)))
($generated@@87 ($generated@@437 $generated@@573) $generated@@572)))
)))
(assert (forall (($generated@@574 T@U) ($generated@@575 T@U) ) (!  (=> (and (= (type $generated@@574) $generated@@70) (= (type $generated@@575) $generated@@70)) (and (= ($generated@@78 ($generated@@144 $generated@@574 $generated@@575)) $generated@@63) (= ($generated@@310 ($generated@@144 $generated@@574 $generated@@575)) $generated@@68)))
 :pattern ( ($generated@@144 $generated@@574 $generated@@575))
)))
(assert (forall (($generated@@576 T@U) ) (!  (=> (= (type $generated@@576) $generated@@145) (= ($generated@@550 ($generated@@299 $generated@@576)) ($generated@@551 $generated@@576)))
 :pattern ( ($generated@@550 ($generated@@299 $generated@@576)))
)))
(assert (forall (($generated@@577 T@U) ) (!  (=> (and (= (type $generated@@577) $generated@@154) ($generated@@229 $generated@@577 ($generated@@81 0))) (and (= ($generated@@299 ($generated@@352 $generated@@2 $generated@@577)) $generated@@577) ($generated@@141 ($generated@@352 ($generated@@82 $generated@@154 $generated@@4) $generated@@577) ($generated@@81 0))))
 :pattern ( ($generated@@229 $generated@@577 ($generated@@81 0)))
)))
(assert (forall (($generated@@578 T@U) ($generated@@579 T@U) ) (!  (=> (and (and (= (type $generated@@578) $generated@@154) (= (type $generated@@579) $generated@@70)) ($generated@@229 $generated@@578 ($generated@@249 $generated@@579))) (and (= ($generated@@299 ($generated@@352 ($generated@@82 $generated@@154 $generated@@4) $generated@@578)) $generated@@578) ($generated@@141 ($generated@@352 ($generated@@82 $generated@@154 $generated@@4) $generated@@578) ($generated@@249 $generated@@579))))
 :pattern ( ($generated@@229 $generated@@578 ($generated@@249 $generated@@579)))
)))
(assert (forall (($generated@@580 T@U) ($generated@@581 T@U) ) (!  (=> (and (and (= (type $generated@@580) $generated@@154) (= (type $generated@@581) $generated@@70)) ($generated@@229 $generated@@580 ($generated@@254 $generated@@581))) (and (= ($generated@@299 ($generated@@352 ($generated@@82 $generated@@154 $generated@@4) $generated@@580)) $generated@@580) ($generated@@141 ($generated@@352 ($generated@@82 $generated@@154 $generated@@4) $generated@@580) ($generated@@254 $generated@@581))))
 :pattern ( ($generated@@229 $generated@@580 ($generated@@254 $generated@@581)))
)))
(assert (forall (($generated@@582 T@U) ($generated@@583 T@U) ) (!  (=> (and (and (= (type $generated@@582) $generated@@154) (= (type $generated@@583) $generated@@70)) ($generated@@229 $generated@@582 ($generated@@162 $generated@@583))) (and (= ($generated@@299 ($generated@@352 ($generated@@82 $generated@@154 $generated@@2) $generated@@582)) $generated@@582) ($generated@@141 ($generated@@352 ($generated@@82 $generated@@154 $generated@@2) $generated@@582) ($generated@@162 $generated@@583))))
 :pattern ( ($generated@@229 $generated@@582 ($generated@@162 $generated@@583)))
)))
(assert (forall (($generated@@584 T@U) ($generated@@585 T@U) ) (!  (=> (and (and (= (type $generated@@584) $generated@@154) (= (type $generated@@585) $generated@@70)) ($generated@@229 $generated@@584 ($generated@@509 $generated@@585))) (and (= ($generated@@299 ($generated@@352 ($generated@@291 $generated@@154) $generated@@584)) $generated@@584) ($generated@@141 ($generated@@352 ($generated@@291 $generated@@154) $generated@@584) ($generated@@509 $generated@@585))))
 :pattern ( ($generated@@229 $generated@@584 ($generated@@509 $generated@@585)))
)))
(assert (forall (($generated@@586 T@U) ($generated@@587 T@U) ) (!  (=> (and (and (= (type $generated@@586) $generated@@70) (= (type $generated@@587) $generated@@154)) ($generated@@229 $generated@@587 ($generated@@223 $generated@@586))) (and (= ($generated@@299 ($generated@@352 $generated@@145 $generated@@587)) $generated@@587) ($generated@@141 ($generated@@352 $generated@@145 $generated@@587) ($generated@@223 $generated@@586))))
 :pattern ( ($generated@@229 $generated@@587 ($generated@@223 $generated@@586)))
)))
(assert (forall (($generated@@588 T@U) ($generated@@589 T@U) ($generated@@590 T@U) ) (!  (=> (and (and (and (= (type $generated@@588) $generated@@145) (= (type $generated@@589) $generated@@70)) (= (type $generated@@590) ($generated@@82 $generated@@83 $generated@@84))) (and ($generated@@224 $generated@@590) (and ($generated@@242 $generated@@588) ($generated@@80 $generated@@588 ($generated@@223 $generated@@589) $generated@@590)))) ($generated@@80 ($generated@@244 $generated@@588) ($generated@@223 $generated@@589) $generated@@590))
 :pattern ( ($generated@@80 ($generated@@244 $generated@@588) ($generated@@223 $generated@@589) $generated@@590))
)))
(assert (= ($generated@@78 $generated@@138) $generated@@61))
(assert (= ($generated@@310 $generated@@138) $generated@@67))
(assert (forall (($generated@@591 T@U) ($generated@@592 T@U) ($generated@@593 T@U) ) (!  (=> (and (and (= (type $generated@@591) ($generated@@82 $generated@@154 $generated@@2)) (= (type $generated@@592) $generated@@70)) (= (type $generated@@593) ($generated@@82 $generated@@83 $generated@@84))) (= ($generated@@80 $generated@@591 ($generated@@162 $generated@@592) $generated@@593) (forall (($generated@@594 T@U) ) (!  (=> (and (= (type $generated@@594) $generated@@154) (< 0 ($generated ($generated@@87 $generated@@591 $generated@@594)))) ($generated@@274 $generated@@594 $generated@@592 $generated@@593))
 :pattern ( ($generated@@87 $generated@@591 $generated@@594))
))))
 :pattern ( ($generated@@80 $generated@@591 ($generated@@162 $generated@@592) $generated@@593))
)))
(assert (= $generated@@160 ($generated@@261 $generated@@160)))
(assert (forall (($generated@@595 T@U) ($generated@@596 T@U) ($generated@@597 T@U) ) (!  (=> (and (and (and (= (type $generated@@595) $generated@@145) (= (type $generated@@596) $generated@@70)) (= (type $generated@@597) ($generated@@82 $generated@@83 $generated@@84))) (and ($generated@@224 $generated@@597) (and ($generated@@143 $generated@@595) (exists (($generated@@598 T@U) ) (!  (and (= (type $generated@@598) $generated@@70) ($generated@@80 $generated@@595 ($generated@@144 $generated@@596 $generated@@598) $generated@@597))
 :pattern ( ($generated@@80 $generated@@595 ($generated@@144 $generated@@596 $generated@@598) $generated@@597))
))))) ($generated@@274 ($generated@@152 $generated@@595) $generated@@596 $generated@@597))
 :pattern ( ($generated@@274 ($generated@@152 $generated@@595) $generated@@596 $generated@@597))
)))
(assert (forall (($generated@@599 T@U) ($generated@@600 T@U) ($generated@@601 T@U) ) (!  (=> (and (and (and (= (type $generated@@599) $generated@@145) (= (type $generated@@600) $generated@@70)) (= (type $generated@@601) ($generated@@82 $generated@@83 $generated@@84))) (and ($generated@@224 $generated@@601) (and ($generated@@143 $generated@@599) (exists (($generated@@602 T@U) ) (!  (and (= (type $generated@@602) $generated@@70) ($generated@@80 $generated@@599 ($generated@@144 $generated@@602 $generated@@600) $generated@@601))
 :pattern ( ($generated@@80 $generated@@599 ($generated@@144 $generated@@602 $generated@@600) $generated@@601))
))))) ($generated@@274 ($generated@@153 $generated@@599) $generated@@600 $generated@@601))
 :pattern ( ($generated@@274 ($generated@@153 $generated@@599) $generated@@600 $generated@@601))
)))
(assert (forall (($generated@@603 T@U) ($generated@@604 T@U) ) (!  (=> (and (= (type $generated@@603) $generated@@154) (= (type $generated@@604) $generated@@154)) (= ($generated@@228 ($generated@@261 $generated@@603) ($generated@@261 $generated@@604)) ($generated@@261 ($generated@@228 $generated@@603 $generated@@604))))
 :pattern ( ($generated@@228 ($generated@@261 $generated@@603) ($generated@@261 $generated@@604)))
)))
(assert (forall (($generated@@605 T@U) ($generated@@606 T@U) ) (!  (=> (and (= (type $generated@@605) $generated@@154) (= (type $generated@@606) $generated@@145)) (= ($generated@@268 ($generated@@261 $generated@@605) ($generated@@261 $generated@@606)) ($generated@@261 ($generated@@268 $generated@@605 $generated@@606))))
 :pattern ( ($generated@@268 ($generated@@261 $generated@@605) ($generated@@261 $generated@@606)))
)))
(assert (forall (($generated@@607 Int) ) (! (= ($generated@@299 ($generated@@8 ($generated@@259 $generated@@607))) ($generated@@261 ($generated@@299 ($generated@@8 $generated@@607))))
 :pattern ( ($generated@@299 ($generated@@8 ($generated@@259 $generated@@607))))
)))
(assert (forall (($generated@@608 T@U) ) (! (= ($generated@@299 ($generated@@261 $generated@@608)) ($generated@@261 ($generated@@299 $generated@@608)))
 :pattern ( ($generated@@299 ($generated@@261 $generated@@608)))
)))
(assert (forall (($generated@@609 T@U) ) (! (let (($generated@@610 ($generated@@292 (type $generated@@609))))
 (=> (and (= (type $generated@@609) ($generated@@291 $generated@@610)) (= ($generated@@290 $generated@@609) 0)) (= $generated@@609 ($generated@@289 $generated@@610))))
 :pattern ( ($generated@@290 $generated@@609))
)))
(assert (forall (($generated@@611 T@U) ($generated@@612 T@U) ($generated@@613 T@U) ) (! (let (($generated@@614 (type $generated@@612)))
 (=> (and (and (= (type $generated@@611) ($generated@@82 $generated@@614 $generated@@2)) (= (type $generated@@613) $generated@@2)) (<= 0 ($generated $generated@@613))) (= ($generated@@304 ($generated@@88 $generated@@611 $generated@@612 $generated@@613)) (+ (- ($generated@@304 $generated@@611) ($generated ($generated@@87 $generated@@611 $generated@@612))) ($generated $generated@@613)))))
 :pattern ( ($generated@@304 ($generated@@88 $generated@@611 $generated@@612 $generated@@613)))
)))
(assert (forall (($generated@@615 T@U) ($generated@@616 T@U) ) (!  (=> (and (= (type $generated@@615) ($generated@@82 $generated@@83 $generated@@84)) (= (type $generated@@616) $generated@@2)) ($generated@@80 $generated@@616 $generated@@46 $generated@@615))
 :pattern ( ($generated@@80 $generated@@616 $generated@@46 $generated@@615))
)))
(assert (forall (($generated@@617 T@U) ($generated@@618 T@U) ) (!  (=> (and (= (type $generated@@617) ($generated@@82 $generated@@83 $generated@@84)) (= (type $generated@@618) $generated@@3)) ($generated@@80 $generated@@618 $generated@@47 $generated@@617))
 :pattern ( ($generated@@80 $generated@@618 $generated@@47 $generated@@617))
)))
(assert (forall (($generated@@619 T@U) ($generated@@620 T@U) ) (!  (=> (and (= (type $generated@@619) ($generated@@82 $generated@@83 $generated@@84)) (= (type $generated@@620) $generated@@4)) ($generated@@80 $generated@@620 $generated@@44 $generated@@619))
 :pattern ( ($generated@@80 $generated@@620 $generated@@44 $generated@@619))
)))
(assert (forall (($generated@@621 T@U) ($generated@@622 T@U) ) (!  (=> (and (= (type $generated@@621) ($generated@@82 $generated@@83 $generated@@84)) (= (type $generated@@622) $generated@@461)) ($generated@@80 $generated@@622 $generated@@45 $generated@@621))
 :pattern ( ($generated@@80 $generated@@622 $generated@@45 $generated@@621))
)))
(assert (forall (($generated@@623 T@U) ($generated@@624 T@U) ) (!  (=> (and (= (type $generated@@623) ($generated@@82 $generated@@83 $generated@@84)) (= (type $generated@@624) $generated@@154)) ($generated@@80 $generated@@624 $generated@@48 $generated@@623))
 :pattern ( ($generated@@80 $generated@@624 $generated@@48 $generated@@623))
)))
(assert (forall (($generated@@625 T@U) ($generated@@626 T@U) ($generated@@627 T@U) ($generated@@628 T@U) ) (!  (=> (and (and (and (and (= (type $generated@@625) $generated@@70) (= (type $generated@@626) $generated@@154)) (= (type $generated@@627) $generated@@145)) (= (type $generated@@628) ($generated@@82 $generated@@83 $generated@@84))) ($generated@@224 $generated@@628)) (= ($generated@@80 ($generated@@268 $generated@@626 $generated@@627) ($generated@@223 $generated@@625) $generated@@628)  (and ($generated@@274 $generated@@626 $generated@@625 $generated@@628) ($generated@@80 $generated@@627 ($generated@@223 $generated@@625) $generated@@628))))
 :pattern ( ($generated@@80 ($generated@@268 $generated@@626 $generated@@627) ($generated@@223 $generated@@625) $generated@@628))
)))
(assert (forall (($generated@@629 T@U) ($generated@@630 T@U) ) (!  (=> (and (= (type $generated@@629) ($generated@@291 $generated@@154)) (= (type $generated@@630) $generated@@70)) (= ($generated@@141 $generated@@629 ($generated@@509 $generated@@630)) (forall (($generated@@631 Int) ) (!  (=> (and (<= 0 $generated@@631) (< $generated@@631 ($generated@@290 $generated@@629))) ($generated@@229 ($generated@@510 $generated@@629 $generated@@631) $generated@@630))
 :pattern ( ($generated@@510 $generated@@629 $generated@@631))
))))
 :pattern ( ($generated@@141 $generated@@629 ($generated@@509 $generated@@630)))
)))
(assert (forall (($generated@@633 T@U) ($generated@@634 Int) ) (!  (=> (= (type $generated@@633) ($generated@@291 $generated@@154)) (=> (and (<= 0 $generated@@634) (< $generated@@634 ($generated@@290 $generated@@633))) (< ($generated@@551 ($generated@@352 $generated@@145 ($generated@@510 $generated@@633 $generated@@634))) ($generated@@632 $generated@@633))))
 :pattern ( ($generated@@551 ($generated@@352 $generated@@145 ($generated@@510 $generated@@633 $generated@@634))))
)))
(assert (forall (($generated@@635 T@U) ($generated@@636 T@U) ($generated@@637 T@U) ) (!  (=> (and (and (and (= (type $generated@@635) ($generated@@315 $generated@@154 $generated@@154)) (= (type $generated@@636) $generated@@70)) (= (type $generated@@637) $generated@@70)) ($generated@@141 $generated@@635 ($generated@@419 $generated@@636 $generated@@637))) (and (and ($generated@@141 ($generated@@313 $generated@@635) ($generated@@249 $generated@@636)) ($generated@@141 ($generated@@360 $generated@@635) ($generated@@249 $generated@@637))) ($generated@@141 ($generated@@393 $generated@@635) ($generated@@249 ($generated@@144 $generated@@636 $generated@@637)))))
 :pattern ( ($generated@@141 $generated@@635 ($generated@@419 $generated@@636 $generated@@637)))
)))
(assert (forall (($generated@@638 T@U) ($generated@@639 T@U) ($generated@@640 T@U) ) (!  (=> (and (and (and (= (type $generated@@638) ($generated@@333 $generated@@154 $generated@@154)) (= (type $generated@@639) $generated@@70)) (= (type $generated@@640) $generated@@70)) ($generated@@141 $generated@@638 ($generated@@427 $generated@@639 $generated@@640))) (and (and ($generated@@141 ($generated@@331 $generated@@638) ($generated@@254 $generated@@639)) ($generated@@141 ($generated@@371 $generated@@638) ($generated@@254 $generated@@640))) ($generated@@141 ($generated@@401 $generated@@638) ($generated@@254 ($generated@@144 $generated@@639 $generated@@640)))))
 :pattern ( ($generated@@141 $generated@@638 ($generated@@427 $generated@@639 $generated@@640)))
)))
(assert (forall (($generated@@641 T@U) ) (!  (=> (= (type $generated@@641) $generated@@2) ($generated@@141 $generated@@641 $generated@@46))
 :pattern ( ($generated@@141 $generated@@641 $generated@@46))
)))
(assert (forall (($generated@@642 T@U) ) (!  (=> (= (type $generated@@642) $generated@@3) ($generated@@141 $generated@@642 $generated@@47))
 :pattern ( ($generated@@141 $generated@@642 $generated@@47))
)))
(assert (forall (($generated@@643 T@U) ) (!  (=> (= (type $generated@@643) $generated@@4) ($generated@@141 $generated@@643 $generated@@44))
 :pattern ( ($generated@@141 $generated@@643 $generated@@44))
)))
(assert (forall (($generated@@644 T@U) ) (!  (=> (= (type $generated@@644) $generated@@461) ($generated@@141 $generated@@644 $generated@@45))
 :pattern ( ($generated@@141 $generated@@644 $generated@@45))
)))
(assert (forall (($generated@@645 T@U) ) (!  (=> (= (type $generated@@645) $generated@@154) ($generated@@141 $generated@@645 $generated@@48))
 :pattern ( ($generated@@141 $generated@@645 $generated@@48))
)))
(push 1)
(declare-fun ControlFlow (Int Int) Int)
(declare-fun $generated@@646 () T@U)
(declare-fun $generated@@647 () T@U)
(declare-fun $generated@@648 () T@U)
(declare-fun $generated@@649 (T@U) Bool)
(declare-fun $generated@@650 () T@U)
(declare-fun $generated@@651 () T@U)
(declare-fun $generated@@652 () Int)
(assert  (and (and (and (and (= (type $generated@@646) ($generated@@169 $generated@@83 $generated@@4)) (= (type $generated@@647) $generated@@83)) (= (type $generated@@648) ($generated@@82 $generated@@83 $generated@@84))) (= (type $generated@@650) $generated@@145)) (= (type $generated@@651) $generated@@145)))
(set-option :timeout 0)
(set-option :rlimit 0)
(assert (not
 (=> (= (ControlFlow 0 0) 3) (let (($generated@@653  (=> (and (= $generated@@646 ($generated@@168 $generated@@647 $generated@@648 $generated@@60 false)) (= (ControlFlow 0 2) (- 0 1))) ($generated@@141 ($generated@@8 ($generated@@259 55)) $generated@@138))))
(let (($generated@@654  (=> (and ($generated@@224 $generated@@648) ($generated@@649 $generated@@648)) (=> (and (and (and ($generated@@141 $generated@@650 ($generated@@223 $generated@@138)) ($generated@@80 $generated@@650 ($generated@@223 $generated@@138) $generated@@648)) ($generated@@381 $generated@@650)) (and (and ($generated@@141 $generated@@651 ($generated@@223 $generated@@138)) ($generated@@80 $generated@@651 ($generated@@223 $generated@@138) $generated@@648)) (and (= 1 $generated@@652) (= (ControlFlow 0 3) 2)))) $generated@@653))))
$generated@@654)))
))
(check-sat)
(pop 1)
; Valid
(get-info :rlimit)
(reset)
(set-option :rlimit 0)
; did a full reset
(reset)
(set-option :print-success false)
(set-info :smt-lib-version 2.6)
(set-option :auto_config false)
(set-option :type_check true)
(set-option :smt.case_split 3)
(set-option :smt.qi.eager_threshold 100)
(set-option :smt.delay_units true)
(set-option :smt.arith.solver 2)
(set-option :smt.mbqi false)
(set-option :model.compact false)
(set-option :model.v2 true)
(set-option :pp.bv_literals false)
; done setting options


(set-info :category "industrial")
(declare-sort |T@U| 0)
(declare-sort |T@T| 0)
(declare-fun real_pow (Real Real) Real)
(declare-fun UOrdering2 (|T@U| |T@U|) Bool)
(declare-fun UOrdering3 (|T@T| |T@U| |T@U|) Bool)
(declare-fun tickleBool (Bool) Bool)
(assert (and (tickleBool true) (tickleBool false)))
(declare-fun $generated (T@U) Int)
(declare-fun $generated@@0 (T@U) Bool)
(declare-fun $generated@@1 (T@T) Int)
(declare-fun $generated@@2 () T@T)
(declare-fun $generated@@3 () T@T)
(declare-fun $generated@@4 () T@T)
(declare-fun $generated@@5 () T@T)
(declare-fun $generated@@6 () T@T)
(declare-fun $generated@@7 () T@T)
(declare-fun $generated@@8 (Int) T@U)
(declare-fun type (T@U) T@T)
(declare-fun $generated@@9 (Real) T@U)
(declare-fun $generated@@10 (T@U) Real)
(declare-fun $generated@@11 (Bool) T@U)
(declare-fun $generated@@12 (RoundingMode) T@U)
(declare-fun $generated@@13 (T@U) RoundingMode)
(declare-fun $generated@@14 (String) T@U)
(declare-fun $generated@@15 (T@U) String)
(declare-fun $generated@@16 ((RegEx String)) T@U)
(declare-fun $generated@@17 (T@U) (RegEx String))
(declare-fun $generated@@44 () T@U)
(declare-fun $generated@@45 () T@U)
(declare-fun $generated@@46 () T@U)
(declare-fun $generated@@47 () T@U)
(declare-fun $generated@@48 () T@U)
(declare-fun $generated@@49 () T@U)
(declare-fun $generated@@50 () T@U)
(declare-fun $generated@@51 () T@U)
(declare-fun $generated@@52 () T@U)
(declare-fun $generated@@53 () T@U)
(declare-fun $generated@@54 () T@U)
(declare-fun $generated@@55 () T@U)
(declare-fun $generated@@56 () T@U)
(declare-fun $generated@@57 () T@U)
(declare-fun $generated@@58 () T@U)
(declare-fun $generated@@59 () T@U)
(declare-fun $generated@@60 () T@U)
(declare-fun $generated@@61 () T@U)
(declare-fun $generated@@62 () T@U)
(declare-fun $generated@@63 () T@U)
(declare-fun $generated@@64 () T@U)
(declare-fun $generated@@65 () T@U)
(declare-fun $generated@@66 () T@U)
(declare-fun $generated@@67 () T@U)
(declare-fun $generated@@68 () T@U)
(declare-fun $generated@@69 () T@U)
(declare-fun $generated@@70 () T@T)
(declare-fun $generated@@71 () T@T)
(declare-fun $generated@@72 (T@T) T@T)
(declare-fun $generated@@73 (T@T) T@T)
(declare-fun $generated@@74 () T@T)
(declare-fun $generated@@75 () T@T)
(declare-fun $generated@@78 (T@U) T@U)
(declare-fun $generated@@80 (T@U T@U T@U) Bool)
(declare-fun $generated@@81 (Int) T@U)
(declare-fun $generated@@82 (T@T T@T) T@T)
(declare-fun $generated@@83 () T@T)
(declare-fun $generated@@84 () T@T)
(declare-fun $generated@@85 (T@T) T@T)
(declare-fun $generated@@86 (T@T) T@T)
(declare-fun $generated@@87 (T@U T@U) T@U)
(declare-fun $generated@@88 (T@U T@U T@U) T@U)
(declare-fun $generated@@89 (T@U T@U) T@U)
(declare-fun $generated@@90 (T@U T@U T@U) T@U)
(declare-fun $generated@@138 () T@U)
(declare-fun $generated@@141 (T@U T@U) Bool)
(declare-fun $generated@@143 (T@U) Bool)
(declare-fun $generated@@144 (T@U T@U) T@U)
(declare-fun $generated@@145 () T@T)
(declare-fun $generated@@151 (T@U T@U) Bool)
(declare-fun $generated@@152 (T@U) T@U)
(declare-fun $generated@@153 (T@U) T@U)
(declare-fun $generated@@154 () T@T)
(declare-fun $generated@@159 (T@U) T@U)
(declare-fun $generated@@160 () T@U)
(declare-fun $generated@@162 (T@U) T@U)
(declare-fun $generated@@163 (T@U) Bool)
(declare-fun $generated@@167 (T@U T@U T@U) T@U)
(declare-fun $generated@@168 (T@U T@U T@U Bool) T@U)
(declare-fun $generated@@169 (T@T T@T) T@T)
(declare-fun $generated@@170 (T@T) T@T)
(declare-fun $generated@@171 (T@T) T@T)
(declare-fun $generated@@172 (T@U T@U T@U T@U) T@U)
(declare-fun $generated@@223 (T@U) T@U)
(declare-fun $generated@@224 (T@U) Bool)
(declare-fun $generated@@228 (T@U T@U) T@U)
(declare-fun $generated@@229 (T@U T@U) Bool)
(declare-fun $generated@@239 (T@U T@U) Bool)
(declare-fun $generated@@242 (T@U) Bool)
(declare-fun $generated@@243 (T@U) T@U)
(declare-fun $generated@@244 (T@U) T@U)
(declare-fun $generated@@249 (T@U) T@U)
(declare-fun $generated@@254 (T@U) T@U)
(declare-fun $generated@@259 (Int) Int)
(declare-fun $generated@@261 (T@U) T@U)
(declare-fun $generated@@265 (T@U) Bool)
(declare-fun $generated@@268 (T@U T@U) T@U)
(declare-fun $generated@@274 (T@U T@U T@U) Bool)
(declare-fun $generated@@289 (T@T) T@U)
(declare-fun $generated@@290 (T@U) Int)
(declare-fun $generated@@291 (T@T) T@T)
(declare-fun $generated@@292 (T@T) T@T)
(declare-fun $generated@@299 (T@U) T@U)
(declare-fun $generated@@304 (T@U) Int)
(declare-fun $generated@@305 (T@T) T@U)
(declare-fun $generated@@310 (T@U) T@U)
(declare-fun $generated@@313 (T@U) T@U)
(declare-fun $generated@@314 (T@T T@T) T@U)
(declare-fun $generated@@315 (T@T T@T) T@T)
(declare-fun $generated@@316 (T@T) T@T)
(declare-fun $generated@@317 (T@T) T@T)
(declare-fun $generated@@331 (T@U) T@U)
(declare-fun $generated@@332 (T@T T@T) T@U)
(declare-fun $generated@@333 (T@T T@T) T@T)
(declare-fun $generated@@334 (T@T) T@T)
(declare-fun $generated@@335 (T@T) T@T)
(declare-fun $generated@@352 (T@T T@U) T@U)
(declare-fun $generated@@360 (T@U) T@U)
(declare-fun $generated@@371 (T@U) T@U)
(declare-fun $generated@@381 (T@U) Bool)
(declare-fun $generated@@393 (T@U) T@U)
(declare-fun $generated@@394 (T@U) T@U)
(declare-fun $generated@@401 (T@U) T@U)
(declare-fun $generated@@402 (T@U) T@U)
(declare-fun $generated@@419 (T@U T@U) T@U)
(declare-fun $generated@@427 (T@U T@U) T@U)
(declare-fun $generated@@437 (T@T) T@U)
(declare-fun $generated@@461 () T@T)
(declare-fun $generated@@469 (T@U) T@U)
(declare-fun $generated@@473 (T@U) T@U)
(declare-fun $generated@@479 (T@U) T@U)
(declare-fun $generated@@483 (T@U) T@U)
(declare-fun $generated@@491 (T@U) T@U)
(declare-fun $generated@@495 (T@U) T@U)
(declare-fun $generated@@509 (T@U) T@U)
(declare-fun $generated@@510 (T@U Int) T@U)
(declare-fun $generated@@519 (T@U) Int)
(declare-fun $generated@@521 (T@U) T@U)
(declare-fun $generated@@525 (T@U) T@U)
(declare-fun $generated@@529 (T@U) T@U)
(declare-fun $generated@@533 (T@U) T@U)
(declare-fun $generated@@537 (T@U) T@U)
(declare-fun $generated@@550 (T@U) Int)
(declare-fun $generated@@551 (T@U) Int)
(declare-fun $generated@@632 (T@U) Int)
(assert  (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (= ($generated@@1 $generated@@2) 0) (= ($generated@@1 $generated@@3) 1)) (= ($generated@@1 $generated@@4) 2)) (= ($generated@@1 $generated@@5) 3)) (= ($generated@@1 $generated@@6) 4)) (= ($generated@@1 $generated@@7) 5)) (forall (($generated@@18 Int) ) (! (= ($generated ($generated@@8 $generated@@18)) $generated@@18)
 :pattern ( ($generated@@8 $generated@@18))
))) (forall (($generated@@19 T@U) ) (!  (=> (= (type $generated@@19) $generated@@2) (= ($generated@@8 ($generated $generated@@19)) $generated@@19))
 :pattern ( ($generated $generated@@19))
))) (forall (($generated@@20 Int) ) (! (= (type ($generated@@8 $generated@@20)) $generated@@2)
 :pattern ( ($generated@@8 $generated@@20))
))) (forall (($generated@@21 Real) ) (! (= ($generated@@10 ($generated@@9 $generated@@21)) $generated@@21)
 :pattern ( ($generated@@9 $generated@@21))
))) (forall (($generated@@22 T@U) ) (!  (=> (= (type $generated@@22) $generated@@3) (= ($generated@@9 ($generated@@10 $generated@@22)) $generated@@22))
 :pattern ( ($generated@@10 $generated@@22))
))) (forall (($generated@@23 Real) ) (! (= (type ($generated@@9 $generated@@23)) $generated@@3)
 :pattern ( ($generated@@9 $generated@@23))
))) (forall (($generated@@24 Bool) ) (! (= ($generated@@0 ($generated@@11 $generated@@24)) $generated@@24)
 :pattern ( ($generated@@11 $generated@@24))
))) (forall (($generated@@25 T@U) ) (!  (=> (= (type $generated@@25) $generated@@4) (= ($generated@@11 ($generated@@0 $generated@@25)) $generated@@25))
 :pattern ( ($generated@@0 $generated@@25))
))) (forall (($generated@@26 Bool) ) (! (= (type ($generated@@11 $generated@@26)) $generated@@4)
 :pattern ( ($generated@@11 $generated@@26))
))) (forall (($generated@@27 RoundingMode) ) (! (= ($generated@@13 ($generated@@12 $generated@@27)) $generated@@27)
 :pattern ( ($generated@@12 $generated@@27))
))) (forall (($generated@@28 T@U) ) (!  (=> (= (type $generated@@28) $generated@@5) (= ($generated@@12 ($generated@@13 $generated@@28)) $generated@@28))
 :pattern ( ($generated@@13 $generated@@28))
))) (forall (($generated@@29 RoundingMode) ) (! (= (type ($generated@@12 $generated@@29)) $generated@@5)
 :pattern ( ($generated@@12 $generated@@29))
))) (forall (($generated@@30 String) ) (! (= ($generated@@15 ($generated@@14 $generated@@30)) $generated@@30)
 :pattern ( ($generated@@14 $generated@@30))
))) (forall (($generated@@31 T@U) ) (!  (=> (= (type $generated@@31) $generated@@6) (= ($generated@@14 ($generated@@15 $generated@@31)) $generated@@31))
 :pattern ( ($generated@@15 $generated@@31))
))) (forall (($generated@@32 String) ) (! (= (type ($generated@@14 $generated@@32)) $generated@@6)
 :pattern ( ($generated@@14 $generated@@32))
))) (forall (($generated@@33 (RegEx String)) ) (! (= ($generated@@17 ($generated@@16 $generated@@33)) $generated@@33)
 :pattern ( ($generated@@16 $generated@@33))
))) (forall (($generated@@34 T@U) ) (!  (=> (= (type $generated@@34) $generated@@7) (= ($generated@@16 ($generated@@17 $generated@@34)) $generated@@34))
 :pattern ( ($generated@@17 $generated@@34))
))) (forall (($generated@@35 (RegEx String)) ) (! (= (type ($generated@@16 $generated@@35)) $generated@@7)
 :pattern ( ($generated@@16 $generated@@35))
))))
(assert (forall (($generated@@36 T@U) ) (! (UOrdering2 $generated@@36 $generated@@36)
 :no-pattern ($generated $generated@@36)
 :no-pattern ($generated@@0 $generated@@36)
)))
(assert (forall (($generated@@37 T@U) ($generated@@38 T@U) ($generated@@39 T@U) ) (! (let (($generated@@40 (type $generated@@37)))
 (=> (and (and (= (type $generated@@38) $generated@@40) (= (type $generated@@39) $generated@@40)) (and (UOrdering2 $generated@@37 $generated@@38) (UOrdering2 $generated@@38 $generated@@39))) (UOrdering2 $generated@@37 $generated@@39)))
 :pattern ( (UOrdering2 $generated@@37 $generated@@38) (UOrdering2 $generated@@38 $generated@@39))
)))
(assert (forall (($generated@@41 T@U) ($generated@@42 T@U) ) (! (let (($generated@@43 (type $generated@@41)))
 (=> (= (type $generated@@42) $generated@@43) (=> (and (UOrdering2 $generated@@41 $generated@@42) (UOrdering2 $generated@@42 $generated@@41)) (= $generated@@41 $generated@@42))))
 :pattern ( (UOrdering2 $generated@@41 $generated@@42) (UOrdering2 $generated@@42 $generated@@41))
)))
(assert  (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (= ($generated@@1 $generated@@70) 6) (= (type $generated@@44) $generated@@70)) (= (type $generated@@45) $generated@@70)) (= (type $generated@@46) $generated@@70)) (= (type $generated@@47) $generated@@70)) (= (type $generated@@48) $generated@@70)) (= ($generated@@1 $generated@@71) 7)) (= (type $generated@@49) $generated@@71)) (= (type $generated@@50) $generated@@71)) (= (type $generated@@51) $generated@@71)) (= (type $generated@@52) $generated@@71)) (= (type $generated@@53) $generated@@71)) (= (type $generated@@54) $generated@@71)) (= (type $generated@@55) $generated@@71)) (= (type $generated@@56) $generated@@71)) (= (type $generated@@57) $generated@@71)) (= (type $generated@@58) $generated@@71)) (= (type $generated@@59) $generated@@71)) (forall (($generated@@76 T@T) ) (= ($generated@@1 ($generated@@72 $generated@@76)) 8))) (forall (($generated@@77 T@T) ) (! (= ($generated@@73 ($generated@@72 $generated@@77)) $generated@@77)
 :pattern ( ($generated@@72 $generated@@77))
))) (= (type $generated@@60) ($generated@@72 $generated@@4))) (= (type $generated@@61) $generated@@71)) (= ($generated@@1 $generated@@74) 9)) (= (type $generated@@62) $generated@@74)) (= (type $generated@@63) $generated@@71)) (= (type $generated@@64) $generated@@74)) (= (type $generated@@65) $generated@@71)) (= (type $generated@@66) $generated@@74)) (= ($generated@@1 $generated@@75) 10)) (= (type $generated@@67) $generated@@75)) (= (type $generated@@68) $generated@@75)) (= (type $generated@@69) $generated@@75)))
(assert (distinct $generated@@44 $generated@@45 $generated@@46 $generated@@47 $generated@@48 $generated@@49 $generated@@50 $generated@@51 $generated@@52 $generated@@53 $generated@@54 $generated@@55 $generated@@56 $generated@@57 $generated@@58 $generated@@59 $generated@@60 $generated@@61 $generated@@62 $generated@@63 $generated@@64 $generated@@65 $generated@@66 $generated@@67 $generated@@68 $generated@@69)
)
(assert (forall (($generated@@79 T@U) ) (! (= (type ($generated@@78 $generated@@79)) $generated@@71)
 :pattern ( ($generated@@78 $generated@@79))
)))
(assert (= ($generated@@78 $generated@@44) $generated@@49))
(assert (= ($generated@@78 $generated@@45) $generated@@50))
(assert (= ($generated@@78 $generated@@46) $generated@@51))
(assert (= ($generated@@78 $generated@@47) $generated@@52))
(assert (= ($generated@@78 $generated@@48) $generated@@53))
(assert  (and (and (and (and (and (and (and (and (and (and (and (and (and (forall (($generated@@91 T@T) ($generated@@92 T@T) ) (= ($generated@@1 ($generated@@82 $generated@@91 $generated@@92)) 11)) (forall (($generated@@93 T@T) ($generated@@94 T@T) ) (! (= ($generated@@85 ($generated@@82 $generated@@93 $generated@@94)) $generated@@93)
 :pattern ( ($generated@@82 $generated@@93 $generated@@94))
))) (forall (($generated@@95 T@T) ($generated@@96 T@T) ) (! (= ($generated@@86 ($generated@@82 $generated@@95 $generated@@96)) $generated@@96)
 :pattern ( ($generated@@82 $generated@@95 $generated@@96))
))) (forall (($generated@@97 T@U) ($generated@@98 T@U) ) (! (let (($generated@@99 ($generated@@86 (type $generated@@97))))
(= (type ($generated@@87 $generated@@97 $generated@@98)) $generated@@99))
 :pattern ( ($generated@@87 $generated@@97 $generated@@98))
))) (forall (($generated@@100 T@U) ($generated@@101 T@U) ($generated@@102 T@U) ) (! (let (($generated@@103 (type $generated@@102)))
(let (($generated@@104 (type $generated@@101)))
(= (type ($generated@@88 $generated@@100 $generated@@101 $generated@@102)) ($generated@@82 $generated@@104 $generated@@103))))
 :pattern ( ($generated@@88 $generated@@100 $generated@@101 $generated@@102))
))) (forall (($generated@@105 T@U) ($generated@@106 T@U) ($generated@@107 T@U) ) (! (let (($generated@@108 ($generated@@86 (type $generated@@105))))
 (=> (= (type $generated@@107) $generated@@108) (= ($generated@@87 ($generated@@88 $generated@@105 $generated@@106 $generated@@107) $generated@@106) $generated@@107)))
 :weight 0
))) (and (forall (($generated@@109 T@U) ($generated@@110 T@U) ($generated@@111 T@U) ($generated@@112 T@U) ) (!  (or (= $generated@@111 $generated@@112) (= ($generated@@87 ($generated@@88 $generated@@110 $generated@@111 $generated@@109) $generated@@112) ($generated@@87 $generated@@110 $generated@@112)))
 :weight 0
)) (forall (($generated@@113 T@U) ($generated@@114 T@U) ($generated@@115 T@U) ($generated@@116 T@U) ) (!  (or true (= ($generated@@87 ($generated@@88 $generated@@114 $generated@@115 $generated@@113) $generated@@116) ($generated@@87 $generated@@114 $generated@@116)))
 :weight 0
)))) (= ($generated@@1 $generated@@83) 12)) (forall (($generated@@117 T@U) ($generated@@118 T@U) ) (! (let (($generated@@119 ($generated@@73 (type $generated@@118))))
(= (type ($generated@@89 $generated@@117 $generated@@118)) $generated@@119))
 :pattern ( ($generated@@89 $generated@@117 $generated@@118))
))) (= ($generated@@1 $generated@@84) 13)) (forall (($generated@@120 T@U) ($generated@@121 T@U) ($generated@@122 T@U) ) (! (= (type ($generated@@90 $generated@@120 $generated@@121 $generated@@122)) $generated@@84)
 :pattern ( ($generated@@90 $generated@@120 $generated@@121 $generated@@122))
))) (forall (($generated@@123 T@U) ($generated@@124 T@U) ($generated@@125 T@U) ) (! (let (($generated@@126 ($generated@@73 (type $generated@@124))))
 (=> (= (type $generated@@125) $generated@@126) (= ($generated@@89 ($generated@@90 $generated@@123 $generated@@124 $generated@@125) $generated@@124) $generated@@125)))
 :weight 0
))) (and (forall (($generated@@127 T@U) ($generated@@128 T@U) ($generated@@129 T@U) ($generated@@130 T@U) ) (!  (or (= $generated@@129 $generated@@130) (= ($generated@@89 ($generated@@90 $generated@@128 $generated@@129 $generated@@127) $generated@@130) ($generated@@89 $generated@@128 $generated@@130)))
 :weight 0
)) (forall (($generated@@131 T@U) ($generated@@132 T@U) ($generated@@133 T@U) ($generated@@134 T@U) ) (!  (or true (= ($generated@@89 ($generated@@90 $generated@@132 $generated@@133 $generated@@131) $generated@@134) ($generated@@89 $generated@@132 $generated@@134)))
 :weight 0
)))) (forall (($generated@@135 Int) ) (! (= (type ($generated@@81 $generated@@135)) $generated@@70)
 :pattern ( ($generated@@81 $generated@@135))
))))
(assert (forall (($generated@@136 T@U) ($generated@@137 T@U) ) (!  (=> (and (= (type $generated@@136) $generated@@2) (= (type $generated@@137) ($generated@@82 $generated@@83 $generated@@84))) ($generated@@80 $generated@@136 ($generated@@81 0) $generated@@137))
 :pattern ( ($generated@@80 $generated@@136 ($generated@@81 0) $generated@@137))
)))
(assert (= (type $generated@@138) $generated@@70))
(assert (forall (($generated@@139 T@U) ($generated@@140 T@U) ) (!  (=> (and (= (type $generated@@139) $generated@@2) (= (type $generated@@140) ($generated@@82 $generated@@83 $generated@@84))) ($generated@@80 $generated@@139 $generated@@138 $generated@@140))
 :pattern ( ($generated@@80 $generated@@139 $generated@@138 $generated@@140))
)))
(assert (forall (($generated@@142 T@U) ) (!  (=> (= (type $generated@@142) $generated@@2) ($generated@@141 $generated@@142 ($generated@@81 0)))
 :pattern ( ($generated@@141 $generated@@142 ($generated@@81 0)))
)))
(assert  (and (= ($generated@@1 $generated@@145) 14) (forall (($generated@@146 T@U) ($generated@@147 T@U) ) (! (= (type ($generated@@144 $generated@@146 $generated@@147)) $generated@@70)
 :pattern ( ($generated@@144 $generated@@146 $generated@@147))
))))
(assert (forall (($generated@@148 T@U) ($generated@@149 T@U) ($generated@@150 T@U) ) (!  (=> (and (and (and (= (type $generated@@148) $generated@@70) (= (type $generated@@149) $generated@@70)) (= (type $generated@@150) $generated@@145)) ($generated@@141 $generated@@150 ($generated@@144 $generated@@148 $generated@@149))) ($generated@@143 $generated@@150))
 :pattern ( ($generated@@143 $generated@@150) ($generated@@141 $generated@@150 ($generated@@144 $generated@@148 $generated@@149)))
)))
(assert  (and (and (= ($generated@@1 $generated@@154) 15) (forall (($generated@@155 T@U) ) (! (= (type ($generated@@152 $generated@@155)) $generated@@154)
 :pattern ( ($generated@@152 $generated@@155))
))) (forall (($generated@@156 T@U) ) (! (= (type ($generated@@153 $generated@@156)) $generated@@154)
 :pattern ( ($generated@@153 $generated@@156))
))))
(assert (forall (($generated@@157 T@U) ($generated@@158 T@U) ) (!  (=> (and (and (= (type $generated@@157) $generated@@145) (= (type $generated@@158) $generated@@145)) true) (= ($generated@@151 $generated@@157 $generated@@158)  (and (= ($generated@@152 $generated@@157) ($generated@@152 $generated@@158)) (= ($generated@@153 $generated@@157) ($generated@@153 $generated@@158)))))
 :pattern ( ($generated@@151 $generated@@157 $generated@@158))
)))
(assert  (and (forall (($generated@@161 T@U) ) (! (= (type ($generated@@159 $generated@@161)) $generated@@74)
 :pattern ( ($generated@@159 $generated@@161))
)) (= (type $generated@@160) $generated@@145)))
(assert (= ($generated@@159 $generated@@160) $generated@@64))
(assert (forall (($generated@@164 T@U) ) (! (= (type ($generated@@162 $generated@@164)) $generated@@70)
 :pattern ( ($generated@@162 $generated@@164))
)))
(assert (forall (($generated@@165 T@U) ($generated@@166 T@U) ) (!  (=> (and (and (= (type $generated@@165) ($generated@@82 $generated@@154 $generated@@2)) (= (type $generated@@166) $generated@@70)) ($generated@@141 $generated@@165 ($generated@@162 $generated@@166))) ($generated@@163 $generated@@165))
 :pattern ( ($generated@@141 $generated@@165 ($generated@@162 $generated@@166)))
)))
(assert  (and (and (and (and (and (and (and (forall (($generated@@173 T@T) ($generated@@174 T@T) ) (= ($generated@@1 ($generated@@169 $generated@@173 $generated@@174)) 16)) (forall (($generated@@175 T@T) ($generated@@176 T@T) ) (! (= ($generated@@170 ($generated@@169 $generated@@175 $generated@@176)) $generated@@175)
 :pattern ( ($generated@@169 $generated@@175 $generated@@176))
))) (forall (($generated@@177 T@T) ($generated@@178 T@T) ) (! (= ($generated@@171 ($generated@@169 $generated@@177 $generated@@178)) $generated@@178)
 :pattern ( ($generated@@169 $generated@@177 $generated@@178))
))) (forall (($generated@@179 T@U) ($generated@@180 T@U) ($generated@@181 T@U) ) (! (let (($generated@@182 ($generated@@171 (type $generated@@179))))
(= (type ($generated@@167 $generated@@179 $generated@@180 $generated@@181)) $generated@@182))
 :pattern ( ($generated@@167 $generated@@179 $generated@@180 $generated@@181))
))) (forall (($generated@@183 T@U) ($generated@@184 T@U) ($generated@@185 T@U) ($generated@@186 T@U) ) (! (let (($generated@@187 (type $generated@@186)))
(let (($generated@@188 (type $generated@@184)))
(= (type ($generated@@172 $generated@@183 $generated@@184 $generated@@185 $generated@@186)) ($generated@@169 $generated@@188 $generated@@187))))
 :pattern ( ($generated@@172 $generated@@183 $generated@@184 $generated@@185 $generated@@186))
))) (forall (($generated@@189 T@U) ($generated@@190 T@U) ($generated@@191 T@U) ($generated@@192 T@U) ) (! (let (($generated@@193 ($generated@@171 (type $generated@@189))))
 (=> (= (type $generated@@192) $generated@@193) (= ($generated@@167 ($generated@@172 $generated@@189 $generated@@190 $generated@@191 $generated@@192) $generated@@190 $generated@@191) $generated@@192)))
 :weight 0
))) (and (and (forall (($generated@@194 T@U) ($generated@@195 T@U) ($generated@@196 T@U) ($generated@@197 T@U) ($generated@@198 T@U) ($generated@@199 T@U) ) (!  (or (= $generated@@196 $generated@@198) (= ($generated@@167 ($generated@@172 $generated@@195 $generated@@196 $generated@@197 $generated@@194) $generated@@198 $generated@@199) ($generated@@167 $generated@@195 $generated@@198 $generated@@199)))
 :weight 0
)) (forall (($generated@@200 T@U) ($generated@@201 T@U) ($generated@@202 T@U) ($generated@@203 T@U) ($generated@@204 T@U) ($generated@@205 T@U) ) (!  (or (= $generated@@203 $generated@@205) (= ($generated@@167 ($generated@@172 $generated@@201 $generated@@202 $generated@@203 $generated@@200) $generated@@204 $generated@@205) ($generated@@167 $generated@@201 $generated@@204 $generated@@205)))
 :weight 0
))) (forall (($generated@@206 T@U) ($generated@@207 T@U) ($generated@@208 T@U) ($generated@@209 T@U) ($generated@@210 T@U) ($generated@@211 T@U) ) (!  (or true (= ($generated@@167 ($generated@@172 $generated@@207 $generated@@208 $generated@@209 $generated@@206) $generated@@210 $generated@@211) ($generated@@167 $generated@@207 $generated@@210 $generated@@211)))
 :weight 0
)))) (forall (($generated@@212 T@U) ($generated@@213 T@U) ($generated@@214 T@U) ($generated@@215 Bool) ) (! (= (type ($generated@@168 $generated@@212 $generated@@213 $generated@@214 $generated@@215)) ($generated@@169 $generated@@83 $generated@@4))
 :pattern ( ($generated@@168 $generated@@212 $generated@@213 $generated@@214 $generated@@215))
))))
(assert (forall (($generated@@216 T@U) ($generated@@217 T@U) ($generated@@218 T@U) ($generated@@219 Bool) ($generated@@220 T@U) ($generated@@221 T@U) ) (! (let (($generated@@222 ($generated@@73 (type $generated@@221))))
 (=> (and (and (and (and (= (type $generated@@216) $generated@@83) (= (type $generated@@217) ($generated@@82 $generated@@83 $generated@@84))) (= (type $generated@@218) ($generated@@72 $generated@@4))) (= (type $generated@@220) $generated@@83)) (= (type $generated@@221) ($generated@@72 $generated@@222))) (= ($generated@@0 ($generated@@167 ($generated@@168 $generated@@216 $generated@@217 $generated@@218 $generated@@219) $generated@@220 $generated@@221))  (=> (and (not (= $generated@@220 $generated@@216)) ($generated@@0 ($generated@@89 ($generated@@87 $generated@@217 $generated@@220) $generated@@218))) $generated@@219))))
 :pattern ( ($generated@@167 ($generated@@168 $generated@@216 $generated@@217 $generated@@218 $generated@@219) $generated@@220 $generated@@221))
)))
(assert (forall (($generated@@225 T@U) ) (! (= (type ($generated@@223 $generated@@225)) $generated@@70)
 :pattern ( ($generated@@223 $generated@@225))
)))
(assert (forall (($generated@@226 T@U) ($generated@@227 T@U) ) (!  (=> (and (and (= (type $generated@@226) $generated@@70) (= (type $generated@@227) ($generated@@82 $generated@@83 $generated@@84))) ($generated@@224 $generated@@227)) ($generated@@80 $generated@@160 ($generated@@223 $generated@@226) $generated@@227))
 :pattern ( ($generated@@80 $generated@@160 ($generated@@223 $generated@@226) $generated@@227))
)))
(assert (forall (($generated@@230 T@U) ($generated@@231 T@U) ) (! (= (type ($generated@@228 $generated@@230 $generated@@231)) $generated@@145)
 :pattern ( ($generated@@228 $generated@@230 $generated@@231))
)))
(assert (forall (($generated@@232 T@U) ($generated@@233 T@U) ($generated@@234 T@U) ($generated@@235 T@U) ) (!  (=> (and (and (and (= (type $generated@@232) $generated@@70) (= (type $generated@@233) $generated@@70)) (= (type $generated@@234) $generated@@154)) (= (type $generated@@235) $generated@@154)) (= ($generated@@141 ($generated@@228 $generated@@234 $generated@@235) ($generated@@144 $generated@@232 $generated@@233))  (and ($generated@@229 $generated@@234 $generated@@232) ($generated@@229 $generated@@235 $generated@@233))))
 :pattern ( ($generated@@141 ($generated@@228 $generated@@234 $generated@@235) ($generated@@144 $generated@@232 $generated@@233)))
)))
(assert (forall (($generated@@236 T@U) ) (!  (=> (= (type $generated@@236) $generated@@70) ($generated@@141 $generated@@160 ($generated@@223 $generated@@236)))
 :pattern ( ($generated@@141 $generated@@160 ($generated@@223 $generated@@236)))
)))
(assert (forall (($generated@@237 T@U) ($generated@@238 T@U) ) (!  (=> (and (= (type $generated@@237) $generated@@145) (= (type $generated@@238) $generated@@145)) (= ($generated@@151 $generated@@237 $generated@@238) (= $generated@@237 $generated@@238)))
 :pattern ( ($generated@@151 $generated@@237 $generated@@238))
)))
(assert (forall (($generated@@240 T@U) ($generated@@241 T@U) ) (!  (=> (and (= (type $generated@@240) $generated@@145) (= (type $generated@@241) $generated@@145)) (= ($generated@@239 $generated@@240 $generated@@241) (= $generated@@240 $generated@@241)))
 :pattern ( ($generated@@239 $generated@@240 $generated@@241))
)))
(assert  (and (forall (($generated@@245 T@U) ) (! (= (type ($generated@@243 $generated@@245)) $generated@@154)
 :pattern ( ($generated@@243 $generated@@245))
)) (forall (($generated@@246 T@U) ) (! (= (type ($generated@@244 $generated@@246)) $generated@@145)
 :pattern ( ($generated@@244 $generated@@246))
))))
(assert (forall (($generated@@247 T@U) ($generated@@248 T@U) ) (!  (=> (and (and (= (type $generated@@247) $generated@@145) (= (type $generated@@248) $generated@@145)) (and ($generated@@242 $generated@@247) ($generated@@242 $generated@@248))) (= ($generated@@239 $generated@@247 $generated@@248)  (and (= ($generated@@243 $generated@@247) ($generated@@243 $generated@@248)) ($generated@@239 ($generated@@244 $generated@@247) ($generated@@244 $generated@@248)))))
 :pattern ( ($generated@@239 $generated@@247 $generated@@248) ($generated@@242 $generated@@247))
 :pattern ( ($generated@@239 $generated@@247 $generated@@248) ($generated@@242 $generated@@248))
)))
(assert (forall (($generated@@250 T@U) ) (! (= (type ($generated@@249 $generated@@250)) $generated@@70)
 :pattern ( ($generated@@249 $generated@@250))
)))
(assert (forall (($generated@@251 T@U) ($generated@@252 T@U) ) (!  (=> (and (= (type $generated@@251) ($generated@@82 $generated@@154 $generated@@4)) (= (type $generated@@252) $generated@@70)) (= ($generated@@141 $generated@@251 ($generated@@249 $generated@@252)) (forall (($generated@@253 T@U) ) (!  (=> (and (= (type $generated@@253) $generated@@154) ($generated@@0 ($generated@@87 $generated@@251 $generated@@253))) ($generated@@229 $generated@@253 $generated@@252))
 :pattern ( ($generated@@87 $generated@@251 $generated@@253))
))))
 :pattern ( ($generated@@141 $generated@@251 ($generated@@249 $generated@@252)))
)))
(assert (forall (($generated@@255 T@U) ) (! (= (type ($generated@@254 $generated@@255)) $generated@@70)
 :pattern ( ($generated@@254 $generated@@255))
)))
(assert (forall (($generated@@256 T@U) ($generated@@257 T@U) ) (!  (=> (and (= (type $generated@@256) ($generated@@82 $generated@@154 $generated@@4)) (= (type $generated@@257) $generated@@70)) (= ($generated@@141 $generated@@256 ($generated@@254 $generated@@257)) (forall (($generated@@258 T@U) ) (!  (=> (and (= (type $generated@@258) $generated@@154) ($generated@@0 ($generated@@87 $generated@@256 $generated@@258))) ($generated@@229 $generated@@258 $generated@@257))
 :pattern ( ($generated@@87 $generated@@256 $generated@@258))
))))
 :pattern ( ($generated@@141 $generated@@256 ($generated@@254 $generated@@257)))
)))
(assert (forall (($generated@@260 Int) ) (! (= ($generated@@259 $generated@@260) $generated@@260)
 :pattern ( ($generated@@259 $generated@@260))
)))
(assert (forall (($generated@@262 T@U) ) (! (let (($generated@@263 (type $generated@@262)))
(= (type ($generated@@261 $generated@@262)) $generated@@263))
 :pattern ( ($generated@@261 $generated@@262))
)))
(assert (forall (($generated@@264 T@U) ) (! (= ($generated@@261 $generated@@264) $generated@@264)
 :pattern ( ($generated@@261 $generated@@264))
)))
(assert (forall (($generated@@266 T@U) ($generated@@267 T@U) ) (!  (=> (and (and (= (type $generated@@266) $generated@@145) (= (type $generated@@267) $generated@@145)) (and ($generated@@265 $generated@@266) ($generated@@265 $generated@@267))) (= ($generated@@239 $generated@@266 $generated@@267) true))
 :pattern ( ($generated@@239 $generated@@266 $generated@@267) ($generated@@265 $generated@@266))
 :pattern ( ($generated@@239 $generated@@266 $generated@@267) ($generated@@265 $generated@@267))
)))
(assert (forall (($generated@@269 T@U) ($generated@@270 T@U) ) (! (= (type ($generated@@268 $generated@@269 $generated@@270)) $generated@@145)
 :pattern ( ($generated@@268 $generated@@269 $generated@@270))
)))
(assert (forall (($generated@@271 T@U) ($generated@@272 T@U) ($generated@@273 T@U) ) (!  (=> (and (and (= (type $generated@@271) $generated@@70) (= (type $generated@@272) $generated@@154)) (= (type $generated@@273) $generated@@145)) (= ($generated@@141 ($generated@@268 $generated@@272 $generated@@273) ($generated@@223 $generated@@271))  (and ($generated@@229 $generated@@272 $generated@@271) ($generated@@141 $generated@@273 ($generated@@223 $generated@@271)))))
 :pattern ( ($generated@@141 ($generated@@268 $generated@@272 $generated@@273) ($generated@@223 $generated@@271)))
)))
(assert (forall (($generated@@275 T@U) ($generated@@276 T@U) ($generated@@277 T@U) ($generated@@278 T@U) ($generated@@279 T@U) ) (!  (=> (and (and (and (and (and (= (type $generated@@275) $generated@@70) (= (type $generated@@276) $generated@@70)) (= (type $generated@@277) $generated@@154)) (= (type $generated@@278) $generated@@154)) (= (type $generated@@279) ($generated@@82 $generated@@83 $generated@@84))) ($generated@@224 $generated@@279)) (= ($generated@@80 ($generated@@228 $generated@@277 $generated@@278) ($generated@@144 $generated@@275 $generated@@276) $generated@@279)  (and ($generated@@274 $generated@@277 $generated@@275 $generated@@279) ($generated@@274 $generated@@278 $generated@@276 $generated@@279))))
 :pattern ( ($generated@@80 ($generated@@228 $generated@@277 $generated@@278) ($generated@@144 $generated@@275 $generated@@276) $generated@@279))
)))
(assert (forall (($generated@@280 T@U) ) (!  (=> (= (type $generated@@280) $generated@@145) (= ($generated@@143 $generated@@280) (= ($generated@@159 $generated@@280) $generated@@62)))
 :pattern ( ($generated@@143 $generated@@280))
)))
(assert (forall (($generated@@281 T@U) ) (!  (=> (= (type $generated@@281) $generated@@145) (= ($generated@@265 $generated@@281) (= ($generated@@159 $generated@@281) $generated@@64)))
 :pattern ( ($generated@@265 $generated@@281))
)))
(assert (forall (($generated@@282 T@U) ) (!  (=> (= (type $generated@@282) $generated@@145) (= ($generated@@242 $generated@@282) (= ($generated@@159 $generated@@282) $generated@@66)))
 :pattern ( ($generated@@242 $generated@@282))
)))
(assert (forall (($generated@@283 T@U) ) (!  (=> (and (= (type $generated@@283) $generated@@145) ($generated@@143 $generated@@283)) (exists (($generated@@284 T@U) ($generated@@285 T@U) ) (!  (and (and (= (type $generated@@284) $generated@@154) (= (type $generated@@285) $generated@@154)) (= $generated@@283 ($generated@@228 $generated@@284 $generated@@285)))
 :no-pattern (type $generated@@284)
 :no-pattern (type $generated@@285)
 :no-pattern ($generated $generated@@284)
 :no-pattern ($generated@@0 $generated@@284)
 :no-pattern ($generated $generated@@285)
 :no-pattern ($generated@@0 $generated@@285)
)))
 :pattern ( ($generated@@143 $generated@@283))
)))
(assert (forall (($generated@@286 T@U) ) (!  (=> (and (= (type $generated@@286) $generated@@145) ($generated@@242 $generated@@286)) (exists (($generated@@287 T@U) ($generated@@288 T@U) ) (!  (and (and (= (type $generated@@287) $generated@@154) (= (type $generated@@288) $generated@@145)) (= $generated@@286 ($generated@@268 $generated@@287 $generated@@288)))
 :no-pattern (type $generated@@287)
 :no-pattern (type $generated@@288)
 :no-pattern ($generated $generated@@287)
 :no-pattern ($generated@@0 $generated@@287)
 :no-pattern ($generated $generated@@288)
 :no-pattern ($generated@@0 $generated@@288)
)))
 :pattern ( ($generated@@242 $generated@@286))
)))
(assert  (and (and (forall (($generated@@293 T@T) ) (= ($generated@@1 ($generated@@291 $generated@@293)) 17)) (forall (($generated@@294 T@T) ) (! (= ($generated@@292 ($generated@@291 $generated@@294)) $generated@@294)
 :pattern ( ($generated@@291 $generated@@294))
))) (forall (($generated@@295 T@T) ) (! (= (type ($generated@@289 $generated@@295)) ($generated@@291 $generated@@295))
 :pattern ( ($generated@@289 $generated@@295))
))))
(assert (forall (($generated@@296 T@T) ) (! (= ($generated@@290 ($generated@@289 $generated@@296)) 0)
 :pattern ( ($generated@@289 $generated@@296))
)))
(assert (forall (($generated@@297 T@U) ) (!  (=> (and (= (type $generated@@297) $generated@@145) ($generated@@265 $generated@@297)) (= $generated@@297 $generated@@160))
 :pattern ( ($generated@@265 $generated@@297))
)))
(assert (forall (($generated@@298 T@U) ) (!  (=> (= (type $generated@@298) $generated@@2) (= ($generated@@141 $generated@@298 $generated@@138) (<= ($generated@@259 0) ($generated $generated@@298))))
 :pattern ( ($generated@@141 $generated@@298 $generated@@138))
)))
(assert (forall (($generated@@300 T@U) ) (! (= (type ($generated@@299 $generated@@300)) $generated@@154)
 :pattern ( ($generated@@299 $generated@@300))
)))
(assert (forall (($generated@@301 T@U) ($generated@@302 T@U) ($generated@@303 T@U) ) (!  (=> (and (= (type $generated@@302) $generated@@70) (= (type $generated@@303) ($generated@@82 $generated@@83 $generated@@84))) (= ($generated@@274 ($generated@@299 $generated@@301) $generated@@302 $generated@@303) ($generated@@80 $generated@@301 $generated@@302 $generated@@303)))
 :pattern ( ($generated@@274 ($generated@@299 $generated@@301) $generated@@302 $generated@@303))
)))
(assert (forall (($generated@@306 T@T) ) (! (= (type ($generated@@305 $generated@@306)) ($generated@@82 $generated@@306 $generated@@2))
 :pattern ( ($generated@@305 $generated@@306))
)))
(assert (forall (($generated@@307 T@U) ) (! (let (($generated@@308 ($generated@@85 (type $generated@@307))))
 (=> (= (type $generated@@307) ($generated@@82 $generated@@308 $generated@@2)) (and (= (= ($generated@@304 $generated@@307) 0) (= $generated@@307 ($generated@@305 $generated@@308))) (=> (not (= ($generated@@304 $generated@@307) 0)) (exists (($generated@@309 T@U) ) (!  (and (= (type $generated@@309) $generated@@308) (< 0 ($generated ($generated@@87 $generated@@307 $generated@@309))))
 :no-pattern (type $generated@@309)
 :no-pattern ($generated $generated@@309)
 :no-pattern ($generated@@0 $generated@@309)
))))))
 :pattern ( ($generated@@304 $generated@@307))
)))
(assert (forall (($generated@@311 T@U) ) (! (= (type ($generated@@310 $generated@@311)) $generated@@75)
 :pattern ( ($generated@@310 $generated@@311))
)))
(assert (forall (($generated@@312 T@U) ) (!  (=> (= (type $generated@@312) $generated@@70) (and (= ($generated@@78 ($generated@@223 $generated@@312)) $generated@@65) (= ($generated@@310 ($generated@@223 $generated@@312)) $generated@@69)))
 :pattern ( ($generated@@223 $generated@@312))
)))
(assert  (and (and (and (and (forall (($generated@@318 T@T) ($generated@@319 T@T) ) (= ($generated@@1 ($generated@@315 $generated@@318 $generated@@319)) 18)) (forall (($generated@@320 T@T) ($generated@@321 T@T) ) (! (= ($generated@@316 ($generated@@315 $generated@@320 $generated@@321)) $generated@@320)
 :pattern ( ($generated@@315 $generated@@320 $generated@@321))
))) (forall (($generated@@322 T@T) ($generated@@323 T@T) ) (! (= ($generated@@317 ($generated@@315 $generated@@322 $generated@@323)) $generated@@323)
 :pattern ( ($generated@@315 $generated@@322 $generated@@323))
))) (forall (($generated@@324 T@U) ) (! (let (($generated@@325 ($generated@@316 (type $generated@@324))))
(= (type ($generated@@313 $generated@@324)) ($generated@@82 $generated@@325 $generated@@4)))
 :pattern ( ($generated@@313 $generated@@324))
))) (forall (($generated@@326 T@T) ($generated@@327 T@T) ) (! (= (type ($generated@@314 $generated@@326 $generated@@327)) ($generated@@315 $generated@@326 $generated@@327))
 :pattern ( ($generated@@314 $generated@@326 $generated@@327))
))))
(assert (forall (($generated@@328 T@U) ($generated@@329 T@T) ) (! (let (($generated@@330 (type $generated@@328)))
 (not ($generated@@0 ($generated@@87 ($generated@@313 ($generated@@314 $generated@@330 $generated@@329)) $generated@@328))))
 :pattern ( (let (($generated@@330 (type $generated@@328)))
($generated@@87 ($generated@@313 ($generated@@314 $generated@@330 $generated@@329)) $generated@@328)))
)))
(assert  (and (and (and (and (forall (($generated@@336 T@T) ($generated@@337 T@T) ) (= ($generated@@1 ($generated@@333 $generated@@336 $generated@@337)) 19)) (forall (($generated@@338 T@T) ($generated@@339 T@T) ) (! (= ($generated@@334 ($generated@@333 $generated@@338 $generated@@339)) $generated@@338)
 :pattern ( ($generated@@333 $generated@@338 $generated@@339))
))) (forall (($generated@@340 T@T) ($generated@@341 T@T) ) (! (= ($generated@@335 ($generated@@333 $generated@@340 $generated@@341)) $generated@@341)
 :pattern ( ($generated@@333 $generated@@340 $generated@@341))
))) (forall (($generated@@342 T@U) ) (! (let (($generated@@343 ($generated@@334 (type $generated@@342))))
(= (type ($generated@@331 $generated@@342)) ($generated@@82 $generated@@343 $generated@@4)))
 :pattern ( ($generated@@331 $generated@@342))
))) (forall (($generated@@344 T@T) ($generated@@345 T@T) ) (! (= (type ($generated@@332 $generated@@344 $generated@@345)) ($generated@@333 $generated@@344 $generated@@345))
 :pattern ( ($generated@@332 $generated@@344 $generated@@345))
))))
(assert (forall (($generated@@346 T@U) ($generated@@347 T@T) ) (! (let (($generated@@348 (type $generated@@346)))
 (not ($generated@@0 ($generated@@87 ($generated@@331 ($generated@@332 $generated@@348 $generated@@347)) $generated@@346))))
 :pattern ( (let (($generated@@348 (type $generated@@346)))
($generated@@87 ($generated@@331 ($generated@@332 $generated@@348 $generated@@347)) $generated@@346)))
)))
(assert (forall (($generated@@349 T@U) ) (! (let (($generated@@350 ($generated@@85 (type $generated@@349))))
 (=> (= (type $generated@@349) ($generated@@82 $generated@@350 $generated@@2)) (= ($generated@@163 $generated@@349) (forall (($generated@@351 T@U) ) (!  (=> (= (type $generated@@351) $generated@@350) (and (<= 0 ($generated ($generated@@87 $generated@@349 $generated@@351))) (<= ($generated ($generated@@87 $generated@@349 $generated@@351)) ($generated@@304 $generated@@349))))
 :pattern ( ($generated@@87 $generated@@349 $generated@@351))
)))))
 :pattern ( ($generated@@163 $generated@@349))
)))
(assert (forall (($generated@@353 T@T) ($generated@@354 T@U) ) (! (= (type ($generated@@352 $generated@@353 $generated@@354)) $generated@@353)
 :pattern ( ($generated@@352 $generated@@353 $generated@@354))
)))
(assert (forall (($generated@@355 T@U) ) (!  (=> (and (= (type $generated@@355) $generated@@154) ($generated@@229 $generated@@355 $generated@@138)) (and (= ($generated@@299 ($generated@@352 $generated@@2 $generated@@355)) $generated@@355) ($generated@@141 ($generated@@352 $generated@@2 $generated@@355) $generated@@138)))
 :pattern ( ($generated@@229 $generated@@355 $generated@@138))
)))
(assert (forall (($generated@@356 T@U) ) (! (let (($generated@@357 ($generated@@317 (type $generated@@356))))
(let (($generated@@358 ($generated@@316 (type $generated@@356))))
 (=> (= (type $generated@@356) ($generated@@315 $generated@@358 $generated@@357)) (or (= $generated@@356 ($generated@@314 $generated@@358 $generated@@357)) (exists (($generated@@359 T@U) ) (!  (and (= (type $generated@@359) $generated@@358) ($generated@@0 ($generated@@87 ($generated@@313 $generated@@356) $generated@@359)))
 :no-pattern (type $generated@@359)
 :no-pattern ($generated $generated@@359)
 :no-pattern ($generated@@0 $generated@@359)
))))))
 :pattern ( ($generated@@313 $generated@@356))
)))
(assert (forall (($generated@@361 T@U) ) (! (let (($generated@@362 ($generated@@317 (type $generated@@361))))
(= (type ($generated@@360 $generated@@361)) ($generated@@82 $generated@@362 $generated@@4)))
 :pattern ( ($generated@@360 $generated@@361))
)))
(assert (forall (($generated@@363 T@U) ) (! (let (($generated@@364 ($generated@@317 (type $generated@@363))))
(let (($generated@@365 ($generated@@316 (type $generated@@363))))
 (=> (= (type $generated@@363) ($generated@@315 $generated@@365 $generated@@364)) (or (= $generated@@363 ($generated@@314 $generated@@365 $generated@@364)) (exists (($generated@@366 T@U) ) (!  (and (= (type $generated@@366) $generated@@364) ($generated@@0 ($generated@@87 ($generated@@360 $generated@@363) $generated@@366)))
 :no-pattern (type $generated@@366)
 :no-pattern ($generated $generated@@366)
 :no-pattern ($generated@@0 $generated@@366)
))))))
 :pattern ( ($generated@@360 $generated@@363))
)))
(assert (forall (($generated@@367 T@U) ) (! (let (($generated@@368 ($generated@@335 (type $generated@@367))))
(let (($generated@@369 ($generated@@334 (type $generated@@367))))
 (=> (= (type $generated@@367) ($generated@@333 $generated@@369 $generated@@368)) (or (= $generated@@367 ($generated@@332 $generated@@369 $generated@@368)) (exists (($generated@@370 T@U) ) (!  (and (= (type $generated@@370) $generated@@369) ($generated@@0 ($generated@@87 ($generated@@331 $generated@@367) $generated@@370)))
 :no-pattern (type $generated@@370)
 :no-pattern ($generated $generated@@370)
 :no-pattern ($generated@@0 $generated@@370)
))))))
 :pattern ( ($generated@@331 $generated@@367))
)))
(assert (forall (($generated@@372 T@U) ) (! (let (($generated@@373 ($generated@@335 (type $generated@@372))))
(= (type ($generated@@371 $generated@@372)) ($generated@@82 $generated@@373 $generated@@4)))
 :pattern ( ($generated@@371 $generated@@372))
)))
(assert (forall (($generated@@374 T@U) ) (! (let (($generated@@375 ($generated@@335 (type $generated@@374))))
(let (($generated@@376 ($generated@@334 (type $generated@@374))))
 (=> (= (type $generated@@374) ($generated@@333 $generated@@376 $generated@@375)) (or (= $generated@@374 ($generated@@332 $generated@@376 $generated@@375)) (exists (($generated@@377 T@U) ) (!  (and (= (type $generated@@377) $generated@@375) ($generated@@0 ($generated@@87 ($generated@@371 $generated@@374) $generated@@377)))
 :no-pattern (type $generated@@377)
 :no-pattern ($generated $generated@@377)
 :no-pattern ($generated@@0 $generated@@377)
))))))
 :pattern ( ($generated@@371 $generated@@374))
)))
(assert (forall (($generated@@378 T@U) ($generated@@379 T@U) ) (!  (=> (and (= (type $generated@@378) ($generated@@82 $generated@@154 $generated@@2)) (= (type $generated@@379) $generated@@70)) (= ($generated@@141 $generated@@378 ($generated@@162 $generated@@379)) (forall (($generated@@380 T@U) ) (!  (=> (and (= (type $generated@@380) $generated@@154) (< 0 ($generated ($generated@@87 $generated@@378 $generated@@380)))) ($generated@@229 $generated@@380 $generated@@379))
 :pattern ( ($generated@@87 $generated@@378 $generated@@380))
))))
 :pattern ( ($generated@@141 $generated@@378 ($generated@@162 $generated@@379)))
)))
(assert (forall (($generated@@382 T@U) ) (!  (=> (and (= (type $generated@@382) $generated@@145) ($generated@@381 $generated@@382)) (or ($generated@@265 $generated@@382) ($generated@@242 $generated@@382)))
 :pattern ( ($generated@@381 $generated@@382))
)))
(assert (forall (($generated@@383 T@U) ($generated@@384 T@U) ($generated@@385 T@U) ) (!  (=> (and (and (= (type $generated@@383) ($generated@@82 $generated@@154 $generated@@4)) (= (type $generated@@384) $generated@@70)) (= (type $generated@@385) ($generated@@82 $generated@@83 $generated@@84))) (= ($generated@@80 $generated@@383 ($generated@@249 $generated@@384) $generated@@385) (forall (($generated@@386 T@U) ) (!  (=> (and (= (type $generated@@386) $generated@@154) ($generated@@0 ($generated@@87 $generated@@383 $generated@@386))) ($generated@@274 $generated@@386 $generated@@384 $generated@@385))
 :pattern ( ($generated@@87 $generated@@383 $generated@@386))
))))
 :pattern ( ($generated@@80 $generated@@383 ($generated@@249 $generated@@384) $generated@@385))
)))
(assert (forall (($generated@@387 T@U) ($generated@@388 T@U) ($generated@@389 T@U) ) (!  (=> (and (and (= (type $generated@@387) ($generated@@82 $generated@@154 $generated@@4)) (= (type $generated@@388) $generated@@70)) (= (type $generated@@389) ($generated@@82 $generated@@83 $generated@@84))) (= ($generated@@80 $generated@@387 ($generated@@254 $generated@@388) $generated@@389) (forall (($generated@@390 T@U) ) (!  (=> (and (= (type $generated@@390) $generated@@154) ($generated@@0 ($generated@@87 $generated@@387 $generated@@390))) ($generated@@274 $generated@@390 $generated@@388 $generated@@389))
 :pattern ( ($generated@@87 $generated@@387 $generated@@390))
))))
 :pattern ( ($generated@@80 $generated@@387 ($generated@@254 $generated@@388) $generated@@389))
)))
(assert (forall (($generated@@391 T@U) ) (! (let (($generated@@392 (type $generated@@391)))
(= ($generated ($generated@@87 ($generated@@305 $generated@@392) $generated@@391)) 0))
 :pattern ( (let (($generated@@392 (type $generated@@391)))
($generated@@87 ($generated@@305 $generated@@392) $generated@@391)))
)))
(assert  (and (forall (($generated@@395 T@U) ) (! (= (type ($generated@@393 $generated@@395)) ($generated@@82 $generated@@154 $generated@@4))
 :pattern ( ($generated@@393 $generated@@395))
)) (forall (($generated@@396 T@U) ) (! (let (($generated@@397 ($generated@@317 (type $generated@@396))))
(let (($generated@@398 ($generated@@316 (type $generated@@396))))
(= (type ($generated@@394 $generated@@396)) ($generated@@82 $generated@@398 $generated@@397))))
 :pattern ( ($generated@@394 $generated@@396))
))))
(assert (forall (($generated@@399 T@U) ($generated@@400 T@U) ) (!  (=> (and (= (type $generated@@399) ($generated@@315 $generated@@154 $generated@@154)) (= (type $generated@@400) $generated@@154)) (= ($generated@@0 ($generated@@87 ($generated@@393 $generated@@399) $generated@@400))  (and ($generated@@0 ($generated@@87 ($generated@@313 $generated@@399) ($generated@@152 ($generated@@352 $generated@@145 $generated@@400)))) (= ($generated@@87 ($generated@@394 $generated@@399) ($generated@@152 ($generated@@352 $generated@@145 $generated@@400))) ($generated@@153 ($generated@@352 $generated@@145 $generated@@400))))))
 :pattern ( ($generated@@87 ($generated@@393 $generated@@399) $generated@@400))
)))
(assert  (and (forall (($generated@@403 T@U) ) (! (= (type ($generated@@401 $generated@@403)) ($generated@@82 $generated@@154 $generated@@4))
 :pattern ( ($generated@@401 $generated@@403))
)) (forall (($generated@@404 T@U) ) (! (let (($generated@@405 ($generated@@335 (type $generated@@404))))
(let (($generated@@406 ($generated@@334 (type $generated@@404))))
(= (type ($generated@@402 $generated@@404)) ($generated@@82 $generated@@406 $generated@@405))))
 :pattern ( ($generated@@402 $generated@@404))
))))
(assert (forall (($generated@@407 T@U) ($generated@@408 T@U) ) (!  (=> (and (= (type $generated@@407) ($generated@@333 $generated@@154 $generated@@154)) (= (type $generated@@408) $generated@@154)) (= ($generated@@0 ($generated@@87 ($generated@@401 $generated@@407) $generated@@408))  (and ($generated@@0 ($generated@@87 ($generated@@331 $generated@@407) ($generated@@152 ($generated@@352 $generated@@145 $generated@@408)))) (= ($generated@@87 ($generated@@402 $generated@@407) ($generated@@152 ($generated@@352 $generated@@145 $generated@@408))) ($generated@@153 ($generated@@352 $generated@@145 $generated@@408))))))
 :pattern ( ($generated@@87 ($generated@@401 $generated@@407) $generated@@408))
)))
(assert (forall (($generated@@409 T@U) ($generated@@410 T@U) ) (! (let (($generated@@411 (type $generated@@410)))
(let (($generated@@412 ($generated@@316 (type $generated@@409))))
 (=> (= (type $generated@@409) ($generated@@315 $generated@@412 $generated@@411)) (= ($generated@@0 ($generated@@87 ($generated@@360 $generated@@409) $generated@@410)) (exists (($generated@@413 T@U) ) (!  (and (= (type $generated@@413) $generated@@412) (and ($generated@@0 ($generated@@87 ($generated@@313 $generated@@409) $generated@@413)) (= $generated@@410 ($generated@@87 ($generated@@394 $generated@@409) $generated@@413))))
 :pattern ( ($generated@@87 ($generated@@313 $generated@@409) $generated@@413))
 :pattern ( ($generated@@87 ($generated@@394 $generated@@409) $generated@@413))
))))))
 :pattern ( ($generated@@87 ($generated@@360 $generated@@409) $generated@@410))
)))
(assert (forall (($generated@@414 T@U) ($generated@@415 T@U) ) (! (let (($generated@@416 (type $generated@@415)))
(let (($generated@@417 ($generated@@334 (type $generated@@414))))
 (=> (= (type $generated@@414) ($generated@@333 $generated@@417 $generated@@416)) (= ($generated@@0 ($generated@@87 ($generated@@371 $generated@@414) $generated@@415)) (exists (($generated@@418 T@U) ) (!  (and (= (type $generated@@418) $generated@@417) (and ($generated@@0 ($generated@@87 ($generated@@331 $generated@@414) $generated@@418)) (= $generated@@415 ($generated@@87 ($generated@@402 $generated@@414) $generated@@418))))
 :pattern ( ($generated@@87 ($generated@@331 $generated@@414) $generated@@418))
 :pattern ( ($generated@@87 ($generated@@402 $generated@@414) $generated@@418))
))))))
 :pattern ( ($generated@@87 ($generated@@371 $generated@@414) $generated@@415))
)))
(assert (forall (($generated@@420 T@U) ($generated@@421 T@U) ) (! (= (type ($generated@@419 $generated@@420 $generated@@421)) $generated@@70)
 :pattern ( ($generated@@419 $generated@@420 $generated@@421))
)))
(assert (forall (($generated@@422 T@U) ($generated@@423 T@U) ($generated@@424 T@U) ($generated@@425 T@U) ) (!  (=> (and (and (and (= (type $generated@@422) ($generated@@315 $generated@@154 $generated@@154)) (= (type $generated@@423) $generated@@70)) (= (type $generated@@424) $generated@@70)) (= (type $generated@@425) ($generated@@82 $generated@@83 $generated@@84))) (= ($generated@@80 $generated@@422 ($generated@@419 $generated@@423 $generated@@424) $generated@@425) (forall (($generated@@426 T@U) ) (!  (=> (and (= (type $generated@@426) $generated@@154) ($generated@@0 ($generated@@87 ($generated@@313 $generated@@422) $generated@@426))) (and ($generated@@274 ($generated@@87 ($generated@@394 $generated@@422) $generated@@426) $generated@@424 $generated@@425) ($generated@@274 $generated@@426 $generated@@423 $generated@@425)))
 :pattern ( ($generated@@87 ($generated@@394 $generated@@422) $generated@@426))
 :pattern ( ($generated@@87 ($generated@@313 $generated@@422) $generated@@426))
))))
 :pattern ( ($generated@@80 $generated@@422 ($generated@@419 $generated@@423 $generated@@424) $generated@@425))
)))
(assert (forall (($generated@@428 T@U) ($generated@@429 T@U) ) (! (= (type ($generated@@427 $generated@@428 $generated@@429)) $generated@@70)
 :pattern ( ($generated@@427 $generated@@428 $generated@@429))
)))
(assert (forall (($generated@@430 T@U) ($generated@@431 T@U) ($generated@@432 T@U) ($generated@@433 T@U) ) (!  (=> (and (and (and (= (type $generated@@430) ($generated@@333 $generated@@154 $generated@@154)) (= (type $generated@@431) $generated@@70)) (= (type $generated@@432) $generated@@70)) (= (type $generated@@433) ($generated@@82 $generated@@83 $generated@@84))) (= ($generated@@80 $generated@@430 ($generated@@427 $generated@@431 $generated@@432) $generated@@433) (forall (($generated@@434 T@U) ) (!  (=> (and (= (type $generated@@434) $generated@@154) ($generated@@0 ($generated@@87 ($generated@@331 $generated@@430) $generated@@434))) (and ($generated@@274 ($generated@@87 ($generated@@402 $generated@@430) $generated@@434) $generated@@432 $generated@@433) ($generated@@274 $generated@@434 $generated@@431 $generated@@433)))
 :pattern ( ($generated@@87 ($generated@@402 $generated@@430) $generated@@434))
 :pattern ( ($generated@@87 ($generated@@331 $generated@@430) $generated@@434))
))))
 :pattern ( ($generated@@80 $generated@@430 ($generated@@427 $generated@@431 $generated@@432) $generated@@433))
)))
(assert (forall (($generated@@435 T@U) ($generated@@436 T@U) ) (!  (=> (and (and (= (type $generated@@435) $generated@@70) (= (type $generated@@436) $generated@@145)) ($generated@@141 $generated@@436 ($generated@@223 $generated@@435))) (or ($generated@@265 $generated@@436) ($generated@@242 $generated@@436)))
 :pattern ( ($generated@@242 $generated@@436) ($generated@@141 $generated@@436 ($generated@@223 $generated@@435)))
 :pattern ( ($generated@@265 $generated@@436) ($generated@@141 $generated@@436 ($generated@@223 $generated@@435)))
)))
(assert (forall (($generated@@438 T@T) ) (! (= (type ($generated@@437 $generated@@438)) ($generated@@82 $generated@@438 $generated@@4))
 :pattern ( ($generated@@437 $generated@@438))
)))
(assert (forall (($generated@@439 T@U) ) (! (let (($generated@@440 ($generated@@335 (type $generated@@439))))
(let (($generated@@441 ($generated@@334 (type $generated@@439))))
 (=> (= (type $generated@@439) ($generated@@333 $generated@@441 $generated@@440)) (= (= $generated@@439 ($generated@@332 $generated@@441 $generated@@440)) (= ($generated@@331 $generated@@439) ($generated@@437 $generated@@441))))))
 :pattern ( ($generated@@331 $generated@@439))
)))
(assert (forall (($generated@@442 T@U) ) (! (let (($generated@@443 ($generated@@335 (type $generated@@442))))
(let (($generated@@444 ($generated@@334 (type $generated@@442))))
 (=> (= (type $generated@@442) ($generated@@333 $generated@@444 $generated@@443)) (= (= $generated@@442 ($generated@@332 $generated@@444 $generated@@443)) (= ($generated@@371 $generated@@442) ($generated@@437 $generated@@443))))))
 :pattern ( ($generated@@371 $generated@@442))
)))
(assert (forall (($generated@@445 T@U) ) (! (let (($generated@@446 ($generated@@335 (type $generated@@445))))
(let (($generated@@447 ($generated@@334 (type $generated@@445))))
 (=> (= (type $generated@@445) ($generated@@333 $generated@@447 $generated@@446)) (= (= $generated@@445 ($generated@@332 $generated@@447 $generated@@446)) (= ($generated@@401 $generated@@445) ($generated@@437 $generated@@154))))))
 :pattern ( ($generated@@401 $generated@@445))
)))
(assert (forall (($generated@@448 T@U) ) (! (let (($generated@@449 ($generated@@317 (type $generated@@448))))
(let (($generated@@450 ($generated@@316 (type $generated@@448))))
 (=> (= (type $generated@@448) ($generated@@315 $generated@@450 $generated@@449)) (or (= $generated@@448 ($generated@@314 $generated@@450 $generated@@449)) (exists (($generated@@451 T@U) ($generated@@452 T@U) ) (!  (and (and (= (type $generated@@451) $generated@@154) (= (type $generated@@452) $generated@@154)) ($generated@@0 ($generated@@87 ($generated@@393 $generated@@448) ($generated@@299 ($generated@@228 $generated@@451 $generated@@452)))))
 :no-pattern (type $generated@@451)
 :no-pattern (type $generated@@452)
 :no-pattern ($generated $generated@@451)
 :no-pattern ($generated@@0 $generated@@451)
 :no-pattern ($generated $generated@@452)
 :no-pattern ($generated@@0 $generated@@452)
))))))
 :pattern ( ($generated@@393 $generated@@448))
)))
(assert (forall (($generated@@453 T@U) ) (! (let (($generated@@454 ($generated@@335 (type $generated@@453))))
(let (($generated@@455 ($generated@@334 (type $generated@@453))))
 (=> (= (type $generated@@453) ($generated@@333 $generated@@455 $generated@@454)) (or (= $generated@@453 ($generated@@332 $generated@@455 $generated@@454)) (exists (($generated@@456 T@U) ($generated@@457 T@U) ) (!  (and (and (= (type $generated@@456) $generated@@154) (= (type $generated@@457) $generated@@154)) ($generated@@0 ($generated@@87 ($generated@@401 $generated@@453) ($generated@@299 ($generated@@228 $generated@@456 $generated@@457)))))
 :no-pattern (type $generated@@456)
 :no-pattern (type $generated@@457)
 :no-pattern ($generated $generated@@456)
 :no-pattern ($generated@@0 $generated@@456)
 :no-pattern ($generated $generated@@457)
 :no-pattern ($generated@@0 $generated@@457)
))))))
 :pattern ( ($generated@@401 $generated@@453))
)))
(assert (forall (($generated@@458 T@U) ) (!  (=> (and (= (type $generated@@458) $generated@@154) ($generated@@229 $generated@@458 $generated@@46)) (and (= ($generated@@299 ($generated@@352 $generated@@2 $generated@@458)) $generated@@458) ($generated@@141 ($generated@@352 $generated@@2 $generated@@458) $generated@@46)))
 :pattern ( ($generated@@229 $generated@@458 $generated@@46))
)))
(assert (forall (($generated@@459 T@U) ) (!  (=> (and (= (type $generated@@459) $generated@@154) ($generated@@229 $generated@@459 $generated@@47)) (and (= ($generated@@299 ($generated@@352 $generated@@3 $generated@@459)) $generated@@459) ($generated@@141 ($generated@@352 $generated@@3 $generated@@459) $generated@@47)))
 :pattern ( ($generated@@229 $generated@@459 $generated@@47))
)))
(assert (forall (($generated@@460 T@U) ) (!  (=> (and (= (type $generated@@460) $generated@@154) ($generated@@229 $generated@@460 $generated@@44)) (and (= ($generated@@299 ($generated@@352 $generated@@4 $generated@@460)) $generated@@460) ($generated@@141 ($generated@@352 $generated@@4 $generated@@460) $generated@@44)))
 :pattern ( ($generated@@229 $generated@@460 $generated@@44))
)))
(assert (= ($generated@@1 $generated@@461) 20))
(assert (forall (($generated@@462 T@U) ) (!  (=> (and (= (type $generated@@462) $generated@@154) ($generated@@229 $generated@@462 $generated@@45)) (and (= ($generated@@299 ($generated@@352 $generated@@461 $generated@@462)) $generated@@462) ($generated@@141 ($generated@@352 $generated@@461 $generated@@462) $generated@@45)))
 :pattern ( ($generated@@229 $generated@@462 $generated@@45))
)))
(assert (forall (($generated@@463 T@U) ($generated@@464 T@U) ) (!  (=> (= (type $generated@@464) $generated@@70) (= ($generated@@229 ($generated@@299 $generated@@463) $generated@@464) ($generated@@141 $generated@@463 $generated@@464)))
 :pattern ( ($generated@@229 ($generated@@299 $generated@@463) $generated@@464))
)))
(assert (forall (($generated@@465 T@U) ) (! (let (($generated@@466 ($generated@@85 (type $generated@@465))))
 (=> (= (type $generated@@465) ($generated@@82 $generated@@466 $generated@@2)) (<= 0 ($generated@@304 $generated@@465))))
 :pattern ( ($generated@@304 $generated@@465))
)))
(assert (forall (($generated@@467 T@U) ) (! (let (($generated@@468 ($generated@@292 (type $generated@@467))))
 (=> (= (type $generated@@467) ($generated@@291 $generated@@468)) (<= 0 ($generated@@290 $generated@@467))))
 :pattern ( ($generated@@290 $generated@@467))
)))
(assert (forall (($generated@@470 T@U) ) (! (= (type ($generated@@469 $generated@@470)) $generated@@70)
 :pattern ( ($generated@@469 $generated@@470))
)))
(assert (forall (($generated@@471 T@U) ($generated@@472 T@U) ) (!  (=> (and (= (type $generated@@471) $generated@@70) (= (type $generated@@472) $generated@@70)) (= ($generated@@469 ($generated@@419 $generated@@471 $generated@@472)) $generated@@471))
 :pattern ( ($generated@@419 $generated@@471 $generated@@472))
)))
(assert (forall (($generated@@474 T@U) ) (! (= (type ($generated@@473 $generated@@474)) $generated@@70)
 :pattern ( ($generated@@473 $generated@@474))
)))
(assert (forall (($generated@@475 T@U) ($generated@@476 T@U) ) (!  (=> (and (= (type $generated@@475) $generated@@70) (= (type $generated@@476) $generated@@70)) (= ($generated@@473 ($generated@@419 $generated@@475 $generated@@476)) $generated@@476))
 :pattern ( ($generated@@419 $generated@@475 $generated@@476))
)))
(assert (forall (($generated@@477 T@U) ($generated@@478 T@U) ) (!  (=> (and (= (type $generated@@477) $generated@@70) (= (type $generated@@478) $generated@@70)) (= ($generated@@78 ($generated@@419 $generated@@477 $generated@@478)) $generated@@58))
 :pattern ( ($generated@@419 $generated@@477 $generated@@478))
)))
(assert (forall (($generated@@480 T@U) ) (! (= (type ($generated@@479 $generated@@480)) $generated@@70)
 :pattern ( ($generated@@479 $generated@@480))
)))
(assert (forall (($generated@@481 T@U) ($generated@@482 T@U) ) (!  (=> (and (= (type $generated@@481) $generated@@70) (= (type $generated@@482) $generated@@70)) (= ($generated@@479 ($generated@@427 $generated@@481 $generated@@482)) $generated@@481))
 :pattern ( ($generated@@427 $generated@@481 $generated@@482))
)))
(assert (forall (($generated@@484 T@U) ) (! (= (type ($generated@@483 $generated@@484)) $generated@@70)
 :pattern ( ($generated@@483 $generated@@484))
)))
(assert (forall (($generated@@485 T@U) ($generated@@486 T@U) ) (!  (=> (and (= (type $generated@@485) $generated@@70) (= (type $generated@@486) $generated@@70)) (= ($generated@@483 ($generated@@427 $generated@@485 $generated@@486)) $generated@@486))
 :pattern ( ($generated@@427 $generated@@485 $generated@@486))
)))
(assert (forall (($generated@@487 T@U) ($generated@@488 T@U) ) (!  (=> (and (= (type $generated@@487) $generated@@70) (= (type $generated@@488) $generated@@70)) (= ($generated@@78 ($generated@@427 $generated@@487 $generated@@488)) $generated@@59))
 :pattern ( ($generated@@427 $generated@@487 $generated@@488))
)))
(assert (forall (($generated@@489 T@U) ($generated@@490 T@U) ) (!  (=> (and (= (type $generated@@489) $generated@@154) (= (type $generated@@490) $generated@@154)) (= ($generated@@159 ($generated@@228 $generated@@489 $generated@@490)) $generated@@62))
 :pattern ( ($generated@@228 $generated@@489 $generated@@490))
)))
(assert (forall (($generated@@492 T@U) ) (! (= (type ($generated@@491 $generated@@492)) $generated@@70)
 :pattern ( ($generated@@491 $generated@@492))
)))
(assert (forall (($generated@@493 T@U) ($generated@@494 T@U) ) (!  (=> (and (= (type $generated@@493) $generated@@70) (= (type $generated@@494) $generated@@70)) (= ($generated@@491 ($generated@@144 $generated@@493 $generated@@494)) $generated@@493))
 :pattern ( ($generated@@144 $generated@@493 $generated@@494))
)))
(assert (forall (($generated@@496 T@U) ) (! (= (type ($generated@@495 $generated@@496)) $generated@@70)
 :pattern ( ($generated@@495 $generated@@496))
)))
(assert (forall (($generated@@497 T@U) ($generated@@498 T@U) ) (!  (=> (and (= (type $generated@@497) $generated@@70) (= (type $generated@@498) $generated@@70)) (= ($generated@@495 ($generated@@144 $generated@@497 $generated@@498)) $generated@@498))
 :pattern ( ($generated@@144 $generated@@497 $generated@@498))
)))
(assert (forall (($generated@@499 T@U) ($generated@@500 T@U) ) (!  (=> (and (= (type $generated@@499) $generated@@154) (= (type $generated@@500) $generated@@154)) (= ($generated@@152 ($generated@@228 $generated@@499 $generated@@500)) $generated@@499))
 :pattern ( ($generated@@228 $generated@@499 $generated@@500))
)))
(assert (forall (($generated@@501 T@U) ($generated@@502 T@U) ) (!  (=> (and (= (type $generated@@501) $generated@@154) (= (type $generated@@502) $generated@@154)) (= ($generated@@153 ($generated@@228 $generated@@501 $generated@@502)) $generated@@502))
 :pattern ( ($generated@@228 $generated@@501 $generated@@502))
)))
(assert (forall (($generated@@503 T@U) ($generated@@504 T@U) ) (!  (=> (and (= (type $generated@@503) $generated@@154) (= (type $generated@@504) $generated@@145)) (= ($generated@@159 ($generated@@268 $generated@@503 $generated@@504)) $generated@@66))
 :pattern ( ($generated@@268 $generated@@503 $generated@@504))
)))
(assert (forall (($generated@@505 T@U) ($generated@@506 T@U) ) (!  (=> (and (= (type $generated@@505) $generated@@154) (= (type $generated@@506) $generated@@145)) (= ($generated@@243 ($generated@@268 $generated@@505 $generated@@506)) $generated@@505))
 :pattern ( ($generated@@268 $generated@@505 $generated@@506))
)))
(assert (forall (($generated@@507 T@U) ($generated@@508 T@U) ) (!  (=> (and (= (type $generated@@507) $generated@@154) (= (type $generated@@508) $generated@@145)) (= ($generated@@244 ($generated@@268 $generated@@507 $generated@@508)) $generated@@508))
 :pattern ( ($generated@@268 $generated@@507 $generated@@508))
)))
(assert  (and (forall (($generated@@511 T@U) ) (! (= (type ($generated@@509 $generated@@511)) $generated@@70)
 :pattern ( ($generated@@509 $generated@@511))
)) (forall (($generated@@512 T@U) ($generated@@513 Int) ) (! (let (($generated@@514 ($generated@@292 (type $generated@@512))))
(= (type ($generated@@510 $generated@@512 $generated@@513)) $generated@@514))
 :pattern ( ($generated@@510 $generated@@512 $generated@@513))
))))
(assert (forall (($generated@@515 T@U) ($generated@@516 T@U) ($generated@@517 T@U) ) (!  (=> (and (and (= (type $generated@@515) ($generated@@291 $generated@@154)) (= (type $generated@@516) $generated@@70)) (= (type $generated@@517) ($generated@@82 $generated@@83 $generated@@84))) (= ($generated@@80 $generated@@515 ($generated@@509 $generated@@516) $generated@@517) (forall (($generated@@518 Int) ) (!  (=> (and (<= 0 $generated@@518) (< $generated@@518 ($generated@@290 $generated@@515))) ($generated@@274 ($generated@@510 $generated@@515 $generated@@518) $generated@@516 $generated@@517))
 :pattern ( ($generated@@510 $generated@@515 $generated@@518))
))))
 :pattern ( ($generated@@80 $generated@@515 ($generated@@509 $generated@@516) $generated@@517))
)))
(assert (forall (($generated@@520 Int) ) (! (= ($generated@@519 ($generated@@81 $generated@@520)) $generated@@520)
 :pattern ( ($generated@@81 $generated@@520))
)))
(assert (forall (($generated@@522 T@U) ) (! (= (type ($generated@@521 $generated@@522)) $generated@@70)
 :pattern ( ($generated@@521 $generated@@522))
)))
(assert (forall (($generated@@523 T@U) ) (!  (=> (= (type $generated@@523) $generated@@70) (= ($generated@@521 ($generated@@249 $generated@@523)) $generated@@523))
 :pattern ( ($generated@@249 $generated@@523))
)))
(assert (forall (($generated@@524 T@U) ) (!  (=> (= (type $generated@@524) $generated@@70) (= ($generated@@78 ($generated@@249 $generated@@524)) $generated@@54))
 :pattern ( ($generated@@249 $generated@@524))
)))
(assert (forall (($generated@@526 T@U) ) (! (= (type ($generated@@525 $generated@@526)) $generated@@70)
 :pattern ( ($generated@@525 $generated@@526))
)))
(assert (forall (($generated@@527 T@U) ) (!  (=> (= (type $generated@@527) $generated@@70) (= ($generated@@525 ($generated@@254 $generated@@527)) $generated@@527))
 :pattern ( ($generated@@254 $generated@@527))
)))
(assert (forall (($generated@@528 T@U) ) (!  (=> (= (type $generated@@528) $generated@@70) (= ($generated@@78 ($generated@@254 $generated@@528)) $generated@@55))
 :pattern ( ($generated@@254 $generated@@528))
)))
(assert (forall (($generated@@530 T@U) ) (! (= (type ($generated@@529 $generated@@530)) $generated@@70)
 :pattern ( ($generated@@529 $generated@@530))
)))
(assert (forall (($generated@@531 T@U) ) (!  (=> (= (type $generated@@531) $generated@@70) (= ($generated@@529 ($generated@@162 $generated@@531)) $generated@@531))
 :pattern ( ($generated@@162 $generated@@531))
)))
(assert (forall (($generated@@532 T@U) ) (!  (=> (= (type $generated@@532) $generated@@70) (= ($generated@@78 ($generated@@162 $generated@@532)) $generated@@56))
 :pattern ( ($generated@@162 $generated@@532))
)))
(assert (forall (($generated@@534 T@U) ) (! (= (type ($generated@@533 $generated@@534)) $generated@@70)
 :pattern ( ($generated@@533 $generated@@534))
)))
(assert (forall (($generated@@535 T@U) ) (!  (=> (= (type $generated@@535) $generated@@70) (= ($generated@@533 ($generated@@509 $generated@@535)) $generated@@535))
 :pattern ( ($generated@@509 $generated@@535))
)))
(assert (forall (($generated@@536 T@U) ) (!  (=> (= (type $generated@@536) $generated@@70) (= ($generated@@78 ($generated@@509 $generated@@536)) $generated@@57))
 :pattern ( ($generated@@509 $generated@@536))
)))
(assert (forall (($generated@@538 T@U) ) (! (= (type ($generated@@537 $generated@@538)) $generated@@70)
 :pattern ( ($generated@@537 $generated@@538))
)))
(assert (forall (($generated@@539 T@U) ) (!  (=> (= (type $generated@@539) $generated@@70) (= ($generated@@537 ($generated@@223 $generated@@539)) $generated@@539))
 :pattern ( ($generated@@223 $generated@@539))
)))
(assert (forall (($generated@@540 T@U) ) (! (let (($generated@@541 (type $generated@@540)))
(= ($generated@@352 $generated@@541 ($generated@@299 $generated@@540)) $generated@@540))
 :pattern ( ($generated@@299 $generated@@540))
)))
(assert (forall (($generated@@542 T@U) ($generated@@543 T@U) ($generated@@544 T@U) ) (!  (=> (and (and (= (type $generated@@542) ($generated@@315 $generated@@154 $generated@@154)) (= (type $generated@@543) $generated@@70)) (= (type $generated@@544) $generated@@70)) (= ($generated@@141 $generated@@542 ($generated@@419 $generated@@543 $generated@@544)) (forall (($generated@@545 T@U) ) (!  (=> (and (= (type $generated@@545) $generated@@154) ($generated@@0 ($generated@@87 ($generated@@313 $generated@@542) $generated@@545))) (and ($generated@@229 ($generated@@87 ($generated@@394 $generated@@542) $generated@@545) $generated@@544) ($generated@@229 $generated@@545 $generated@@543)))
 :pattern ( ($generated@@87 ($generated@@394 $generated@@542) $generated@@545))
 :pattern ( ($generated@@87 ($generated@@313 $generated@@542) $generated@@545))
))))
 :pattern ( ($generated@@141 $generated@@542 ($generated@@419 $generated@@543 $generated@@544)))
)))
(assert (forall (($generated@@546 T@U) ($generated@@547 T@U) ($generated@@548 T@U) ) (!  (=> (and (and (= (type $generated@@546) ($generated@@333 $generated@@154 $generated@@154)) (= (type $generated@@547) $generated@@70)) (= (type $generated@@548) $generated@@70)) (= ($generated@@141 $generated@@546 ($generated@@427 $generated@@547 $generated@@548)) (forall (($generated@@549 T@U) ) (!  (=> (and (= (type $generated@@549) $generated@@154) ($generated@@0 ($generated@@87 ($generated@@331 $generated@@546) $generated@@549))) (and ($generated@@229 ($generated@@87 ($generated@@402 $generated@@546) $generated@@549) $generated@@548) ($generated@@229 $generated@@549 $generated@@547)))
 :pattern ( ($generated@@87 ($generated@@402 $generated@@546) $generated@@549))
 :pattern ( ($generated@@87 ($generated@@331 $generated@@546) $generated@@549))
))))
 :pattern ( ($generated@@141 $generated@@546 ($generated@@427 $generated@@547 $generated@@548)))
)))
(assert (forall (($generated@@552 T@U) ($generated@@553 T@U) ) (!  (=> (and (= (type $generated@@552) $generated@@154) (= (type $generated@@553) $generated@@154)) (< ($generated@@550 $generated@@552) ($generated@@551 ($generated@@228 $generated@@552 $generated@@553))))
 :pattern ( ($generated@@228 $generated@@552 $generated@@553))
)))
(assert (forall (($generated@@554 T@U) ($generated@@555 T@U) ) (!  (=> (and (= (type $generated@@554) $generated@@154) (= (type $generated@@555) $generated@@154)) (< ($generated@@550 $generated@@555) ($generated@@551 ($generated@@228 $generated@@554 $generated@@555))))
 :pattern ( ($generated@@228 $generated@@554 $generated@@555))
)))
(assert (forall (($generated@@556 T@U) ($generated@@557 T@U) ) (!  (=> (and (= (type $generated@@556) $generated@@154) (= (type $generated@@557) $generated@@145)) (< ($generated@@550 $generated@@556) ($generated@@551 ($generated@@268 $generated@@556 $generated@@557))))
 :pattern ( ($generated@@268 $generated@@556 $generated@@557))
)))
(assert (forall (($generated@@558 T@U) ($generated@@559 T@U) ) (!  (=> (and (= (type $generated@@558) $generated@@154) (= (type $generated@@559) $generated@@145)) (< ($generated@@551 $generated@@559) ($generated@@551 ($generated@@268 $generated@@558 $generated@@559))))
 :pattern ( ($generated@@268 $generated@@558 $generated@@559))
)))
(assert (forall (($generated@@560 T@U) ($generated@@561 T@U) ($generated@@562 T@U) ) (!  (=> (and (and (and (= (type $generated@@560) $generated@@154) (= (type $generated@@561) $generated@@70)) (= (type $generated@@562) $generated@@70)) ($generated@@229 $generated@@560 ($generated@@419 $generated@@561 $generated@@562))) (and (= ($generated@@299 ($generated@@352 ($generated@@315 $generated@@154 $generated@@154) $generated@@560)) $generated@@560) ($generated@@141 ($generated@@352 ($generated@@315 $generated@@154 $generated@@154) $generated@@560) ($generated@@419 $generated@@561 $generated@@562))))
 :pattern ( ($generated@@229 $generated@@560 ($generated@@419 $generated@@561 $generated@@562)))
)))
(assert (forall (($generated@@563 T@U) ($generated@@564 T@U) ($generated@@565 T@U) ) (!  (=> (and (and (and (= (type $generated@@563) $generated@@154) (= (type $generated@@564) $generated@@70)) (= (type $generated@@565) $generated@@70)) ($generated@@229 $generated@@563 ($generated@@427 $generated@@564 $generated@@565))) (and (= ($generated@@299 ($generated@@352 ($generated@@333 $generated@@154 $generated@@154) $generated@@563)) $generated@@563) ($generated@@141 ($generated@@352 ($generated@@333 $generated@@154 $generated@@154) $generated@@563) ($generated@@427 $generated@@564 $generated@@565))))
 :pattern ( ($generated@@229 $generated@@563 ($generated@@427 $generated@@564 $generated@@565)))
)))
(assert (forall (($generated@@566 T@U) ($generated@@567 T@U) ($generated@@568 T@U) ) (!  (=> (and (and (and (= (type $generated@@566) $generated@@70) (= (type $generated@@567) $generated@@70)) (= (type $generated@@568) $generated@@154)) ($generated@@229 $generated@@568 ($generated@@144 $generated@@566 $generated@@567))) (and (= ($generated@@299 ($generated@@352 $generated@@145 $generated@@568)) $generated@@568) ($generated@@141 ($generated@@352 $generated@@145 $generated@@568) ($generated@@144 $generated@@566 $generated@@567))))
 :pattern ( ($generated@@229 $generated@@568 ($generated@@144 $generated@@566 $generated@@567)))
)))
(assert (forall (($generated@@569 T@U) ($generated@@570 T@U) ($generated@@571 T@U) ) (!  (=> (and (and (and (= (type $generated@@569) $generated@@145) (= (type $generated@@570) $generated@@70)) (= (type $generated@@571) ($generated@@82 $generated@@83 $generated@@84))) (and ($generated@@224 $generated@@571) (and ($generated@@242 $generated@@569) ($generated@@80 $generated@@569 ($generated@@223 $generated@@570) $generated@@571)))) ($generated@@274 ($generated@@243 $generated@@569) $generated@@570 $generated@@571))
 :pattern ( ($generated@@274 ($generated@@243 $generated@@569) $generated@@570 $generated@@571))
)))
(assert (forall (($generated@@572 T@U) ) (! (let (($generated@@573 (type $generated@@572)))
 (not ($generated@@0 ($generated@@87 ($generated@@437 $generated@@573) $generated@@572))))
 :pattern ( (let (($generated@@573 (type $generated@@572)))
($generated@@87 ($generated@@437 $generated@@573) $generated@@572)))
)))
(assert (forall (($generated@@574 T@U) ($generated@@575 T@U) ) (!  (=> (and (= (type $generated@@574) $generated@@70) (= (type $generated@@575) $generated@@70)) (and (= ($generated@@78 ($generated@@144 $generated@@574 $generated@@575)) $generated@@63) (= ($generated@@310 ($generated@@144 $generated@@574 $generated@@575)) $generated@@68)))
 :pattern ( ($generated@@144 $generated@@574 $generated@@575))
)))
(assert (forall (($generated@@576 T@U) ) (!  (=> (= (type $generated@@576) $generated@@145) (= ($generated@@550 ($generated@@299 $generated@@576)) ($generated@@551 $generated@@576)))
 :pattern ( ($generated@@550 ($generated@@299 $generated@@576)))
)))
(assert (forall (($generated@@577 T@U) ) (!  (=> (and (= (type $generated@@577) $generated@@154) ($generated@@229 $generated@@577 ($generated@@81 0))) (and (= ($generated@@299 ($generated@@352 $generated@@2 $generated@@577)) $generated@@577) ($generated@@141 ($generated@@352 ($generated@@82 $generated@@154 $generated@@4) $generated@@577) ($generated@@81 0))))
 :pattern ( ($generated@@229 $generated@@577 ($generated@@81 0)))
)))
(assert (forall (($generated@@578 T@U) ($generated@@579 T@U) ) (!  (=> (and (and (= (type $generated@@578) $generated@@154) (= (type $generated@@579) $generated@@70)) ($generated@@229 $generated@@578 ($generated@@249 $generated@@579))) (and (= ($generated@@299 ($generated@@352 ($generated@@82 $generated@@154 $generated@@4) $generated@@578)) $generated@@578) ($generated@@141 ($generated@@352 ($generated@@82 $generated@@154 $generated@@4) $generated@@578) ($generated@@249 $generated@@579))))
 :pattern ( ($generated@@229 $generated@@578 ($generated@@249 $generated@@579)))
)))
(assert (forall (($generated@@580 T@U) ($generated@@581 T@U) ) (!  (=> (and (and (= (type $generated@@580) $generated@@154) (= (type $generated@@581) $generated@@70)) ($generated@@229 $generated@@580 ($generated@@254 $generated@@581))) (and (= ($generated@@299 ($generated@@352 ($generated@@82 $generated@@154 $generated@@4) $generated@@580)) $generated@@580) ($generated@@141 ($generated@@352 ($generated@@82 $generated@@154 $generated@@4) $generated@@580) ($generated@@254 $generated@@581))))
 :pattern ( ($generated@@229 $generated@@580 ($generated@@254 $generated@@581)))
)))
(assert (forall (($generated@@582 T@U) ($generated@@583 T@U) ) (!  (=> (and (and (= (type $generated@@582) $generated@@154) (= (type $generated@@583) $generated@@70)) ($generated@@229 $generated@@582 ($generated@@162 $generated@@583))) (and (= ($generated@@299 ($generated@@352 ($generated@@82 $generated@@154 $generated@@2) $generated@@582)) $generated@@582) ($generated@@141 ($generated@@352 ($generated@@82 $generated@@154 $generated@@2) $generated@@582) ($generated@@162 $generated@@583))))
 :pattern ( ($generated@@229 $generated@@582 ($generated@@162 $generated@@583)))
)))
(assert (forall (($generated@@584 T@U) ($generated@@585 T@U) ) (!  (=> (and (and (= (type $generated@@584) $generated@@154) (= (type $generated@@585) $generated@@70)) ($generated@@229 $generated@@584 ($generated@@509 $generated@@585))) (and (= ($generated@@299 ($generated@@352 ($generated@@291 $generated@@154) $generated@@584)) $generated@@584) ($generated@@141 ($generated@@352 ($generated@@291 $generated@@154) $generated@@584) ($generated@@509 $generated@@585))))
 :pattern ( ($generated@@229 $generated@@584 ($generated@@509 $generated@@585)))
)))
(assert (forall (($generated@@586 T@U) ($generated@@587 T@U) ) (!  (=> (and (and (= (type $generated@@586) $generated@@70) (= (type $generated@@587) $generated@@154)) ($generated@@229 $generated@@587 ($generated@@223 $generated@@586))) (and (= ($generated@@299 ($generated@@352 $generated@@145 $generated@@587)) $generated@@587) ($generated@@141 ($generated@@352 $generated@@145 $generated@@587) ($generated@@223 $generated@@586))))
 :pattern ( ($generated@@229 $generated@@587 ($generated@@223 $generated@@586)))
)))
(assert (forall (($generated@@588 T@U) ($generated@@589 T@U) ($generated@@590 T@U) ) (!  (=> (and (and (and (= (type $generated@@588) $generated@@145) (= (type $generated@@589) $generated@@70)) (= (type $generated@@590) ($generated@@82 $generated@@83 $generated@@84))) (and ($generated@@224 $generated@@590) (and ($generated@@242 $generated@@588) ($generated@@80 $generated@@588 ($generated@@223 $generated@@589) $generated@@590)))) ($generated@@80 ($generated@@244 $generated@@588) ($generated@@223 $generated@@589) $generated@@590))
 :pattern ( ($generated@@80 ($generated@@244 $generated@@588) ($generated@@223 $generated@@589) $generated@@590))
)))
(assert (= ($generated@@78 $generated@@138) $generated@@61))
(assert (= ($generated@@310 $generated@@138) $generated@@67))
(assert (forall (($generated@@591 T@U) ($generated@@592 T@U) ($generated@@593 T@U) ) (!  (=> (and (and (= (type $generated@@591) ($generated@@82 $generated@@154 $generated@@2)) (= (type $generated@@592) $generated@@70)) (= (type $generated@@593) ($generated@@82 $generated@@83 $generated@@84))) (= ($generated@@80 $generated@@591 ($generated@@162 $generated@@592) $generated@@593) (forall (($generated@@594 T@U) ) (!  (=> (and (= (type $generated@@594) $generated@@154) (< 0 ($generated ($generated@@87 $generated@@591 $generated@@594)))) ($generated@@274 $generated@@594 $generated@@592 $generated@@593))
 :pattern ( ($generated@@87 $generated@@591 $generated@@594))
))))
 :pattern ( ($generated@@80 $generated@@591 ($generated@@162 $generated@@592) $generated@@593))
)))
(assert (= $generated@@160 ($generated@@261 $generated@@160)))
(assert (forall (($generated@@595 T@U) ($generated@@596 T@U) ($generated@@597 T@U) ) (!  (=> (and (and (and (= (type $generated@@595) $generated@@145) (= (type $generated@@596) $generated@@70)) (= (type $generated@@597) ($generated@@82 $generated@@83 $generated@@84))) (and ($generated@@224 $generated@@597) (and ($generated@@143 $generated@@595) (exists (($generated@@598 T@U) ) (!  (and (= (type $generated@@598) $generated@@70) ($generated@@80 $generated@@595 ($generated@@144 $generated@@596 $generated@@598) $generated@@597))
 :pattern ( ($generated@@80 $generated@@595 ($generated@@144 $generated@@596 $generated@@598) $generated@@597))
))))) ($generated@@274 ($generated@@152 $generated@@595) $generated@@596 $generated@@597))
 :pattern ( ($generated@@274 ($generated@@152 $generated@@595) $generated@@596 $generated@@597))
)))
(assert (forall (($generated@@599 T@U) ($generated@@600 T@U) ($generated@@601 T@U) ) (!  (=> (and (and (and (= (type $generated@@599) $generated@@145) (= (type $generated@@600) $generated@@70)) (= (type $generated@@601) ($generated@@82 $generated@@83 $generated@@84))) (and ($generated@@224 $generated@@601) (and ($generated@@143 $generated@@599) (exists (($generated@@602 T@U) ) (!  (and (= (type $generated@@602) $generated@@70) ($generated@@80 $generated@@599 ($generated@@144 $generated@@602 $generated@@600) $generated@@601))
 :pattern ( ($generated@@80 $generated@@599 ($generated@@144 $generated@@602 $generated@@600) $generated@@601))
))))) ($generated@@274 ($generated@@153 $generated@@599) $generated@@600 $generated@@601))
 :pattern ( ($generated@@274 ($generated@@153 $generated@@599) $generated@@600 $generated@@601))
)))
(assert (forall (($generated@@603 T@U) ($generated@@604 T@U) ) (!  (=> (and (= (type $generated@@603) $generated@@154) (= (type $generated@@604) $generated@@154)) (= ($generated@@228 ($generated@@261 $generated@@603) ($generated@@261 $generated@@604)) ($generated@@261 ($generated@@228 $generated@@603 $generated@@604))))
 :pattern ( ($generated@@228 ($generated@@261 $generated@@603) ($generated@@261 $generated@@604)))
)))
(assert (forall (($generated@@605 T@U) ($generated@@606 T@U) ) (!  (=> (and (= (type $generated@@605) $generated@@154) (= (type $generated@@606) $generated@@145)) (= ($generated@@268 ($generated@@261 $generated@@605) ($generated@@261 $generated@@606)) ($generated@@261 ($generated@@268 $generated@@605 $generated@@606))))
 :pattern ( ($generated@@268 ($generated@@261 $generated@@605) ($generated@@261 $generated@@606)))
)))
(assert (forall (($generated@@607 Int) ) (! (= ($generated@@299 ($generated@@8 ($generated@@259 $generated@@607))) ($generated@@261 ($generated@@299 ($generated@@8 $generated@@607))))
 :pattern ( ($generated@@299 ($generated@@8 ($generated@@259 $generated@@607))))
)))
(assert (forall (($generated@@608 T@U) ) (! (= ($generated@@299 ($generated@@261 $generated@@608)) ($generated@@261 ($generated@@299 $generated@@608)))
 :pattern ( ($generated@@299 ($generated@@261 $generated@@608)))
)))
(assert (forall (($generated@@609 T@U) ) (! (let (($generated@@610 ($generated@@292 (type $generated@@609))))
 (=> (and (= (type $generated@@609) ($generated@@291 $generated@@610)) (= ($generated@@290 $generated@@609) 0)) (= $generated@@609 ($generated@@289 $generated@@610))))
 :pattern ( ($generated@@290 $generated@@609))
)))
(assert (forall (($generated@@611 T@U) ($generated@@612 T@U) ($generated@@613 T@U) ) (! (let (($generated@@614 (type $generated@@612)))
 (=> (and (and (= (type $generated@@611) ($generated@@82 $generated@@614 $generated@@2)) (= (type $generated@@613) $generated@@2)) (<= 0 ($generated $generated@@613))) (= ($generated@@304 ($generated@@88 $generated@@611 $generated@@612 $generated@@613)) (+ (- ($generated@@304 $generated@@611) ($generated ($generated@@87 $generated@@611 $generated@@612))) ($generated $generated@@613)))))
 :pattern ( ($generated@@304 ($generated@@88 $generated@@611 $generated@@612 $generated@@613)))
)))
(assert (forall (($generated@@615 T@U) ($generated@@616 T@U) ) (!  (=> (and (= (type $generated@@615) ($generated@@82 $generated@@83 $generated@@84)) (= (type $generated@@616) $generated@@2)) ($generated@@80 $generated@@616 $generated@@46 $generated@@615))
 :pattern ( ($generated@@80 $generated@@616 $generated@@46 $generated@@615))
)))
(assert (forall (($generated@@617 T@U) ($generated@@618 T@U) ) (!  (=> (and (= (type $generated@@617) ($generated@@82 $generated@@83 $generated@@84)) (= (type $generated@@618) $generated@@3)) ($generated@@80 $generated@@618 $generated@@47 $generated@@617))
 :pattern ( ($generated@@80 $generated@@618 $generated@@47 $generated@@617))
)))
(assert (forall (($generated@@619 T@U) ($generated@@620 T@U) ) (!  (=> (and (= (type $generated@@619) ($generated@@82 $generated@@83 $generated@@84)) (= (type $generated@@620) $generated@@4)) ($generated@@80 $generated@@620 $generated@@44 $generated@@619))
 :pattern ( ($generated@@80 $generated@@620 $generated@@44 $generated@@619))
)))
(assert (forall (($generated@@621 T@U) ($generated@@622 T@U) ) (!  (=> (and (= (type $generated@@621) ($generated@@82 $generated@@83 $generated@@84)) (= (type $generated@@622) $generated@@461)) ($generated@@80 $generated@@622 $generated@@45 $generated@@621))
 :pattern ( ($generated@@80 $generated@@622 $generated@@45 $generated@@621))
)))
(assert (forall (($generated@@623 T@U) ($generated@@624 T@U) ) (!  (=> (and (= (type $generated@@623) ($generated@@82 $generated@@83 $generated@@84)) (= (type $generated@@624) $generated@@154)) ($generated@@80 $generated@@624 $generated@@48 $generated@@623))
 :pattern ( ($generated@@80 $generated@@624 $generated@@48 $generated@@623))
)))
(assert (forall (($generated@@625 T@U) ($generated@@626 T@U) ($generated@@627 T@U) ($generated@@628 T@U) ) (!  (=> (and (and (and (and (= (type $generated@@625) $generated@@70) (= (type $generated@@626) $generated@@154)) (= (type $generated@@627) $generated@@145)) (= (type $generated@@628) ($generated@@82 $generated@@83 $generated@@84))) ($generated@@224 $generated@@628)) (= ($generated@@80 ($generated@@268 $generated@@626 $generated@@627) ($generated@@223 $generated@@625) $generated@@628)  (and ($generated@@274 $generated@@626 $generated@@625 $generated@@628) ($generated@@80 $generated@@627 ($generated@@223 $generated@@625) $generated@@628))))
 :pattern ( ($generated@@80 ($generated@@268 $generated@@626 $generated@@627) ($generated@@223 $generated@@625) $generated@@628))
)))
(assert (forall (($generated@@629 T@U) ($generated@@630 T@U) ) (!  (=> (and (= (type $generated@@629) ($generated@@291 $generated@@154)) (= (type $generated@@630) $generated@@70)) (= ($generated@@141 $generated@@629 ($generated@@509 $generated@@630)) (forall (($generated@@631 Int) ) (!  (=> (and (<= 0 $generated@@631) (< $generated@@631 ($generated@@290 $generated@@629))) ($generated@@229 ($generated@@510 $generated@@629 $generated@@631) $generated@@630))
 :pattern ( ($generated@@510 $generated@@629 $generated@@631))
))))
 :pattern ( ($generated@@141 $generated@@629 ($generated@@509 $generated@@630)))
)))
(assert (forall (($generated@@633 T@U) ($generated@@634 Int) ) (!  (=> (= (type $generated@@633) ($generated@@291 $generated@@154)) (=> (and (<= 0 $generated@@634) (< $generated@@634 ($generated@@290 $generated@@633))) (< ($generated@@551 ($generated@@352 $generated@@145 ($generated@@510 $generated@@633 $generated@@634))) ($generated@@632 $generated@@633))))
 :pattern ( ($generated@@551 ($generated@@352 $generated@@145 ($generated@@510 $generated@@633 $generated@@634))))
)))
(assert (forall (($generated@@635 T@U) ($generated@@636 T@U) ($generated@@637 T@U) ) (!  (=> (and (and (and (= (type $generated@@635) ($generated@@315 $generated@@154 $generated@@154)) (= (type $generated@@636) $generated@@70)) (= (type $generated@@637) $generated@@70)) ($generated@@141 $generated@@635 ($generated@@419 $generated@@636 $generated@@637))) (and (and ($generated@@141 ($generated@@313 $generated@@635) ($generated@@249 $generated@@636)) ($generated@@141 ($generated@@360 $generated@@635) ($generated@@249 $generated@@637))) ($generated@@141 ($generated@@393 $generated@@635) ($generated@@249 ($generated@@144 $generated@@636 $generated@@637)))))
 :pattern ( ($generated@@141 $generated@@635 ($generated@@419 $generated@@636 $generated@@637)))
)))
(assert (forall (($generated@@638 T@U) ($generated@@639 T@U) ($generated@@640 T@U) ) (!  (=> (and (and (and (= (type $generated@@638) ($generated@@333 $generated@@154 $generated@@154)) (= (type $generated@@639) $generated@@70)) (= (type $generated@@640) $generated@@70)) ($generated@@141 $generated@@638 ($generated@@427 $generated@@639 $generated@@640))) (and (and ($generated@@141 ($generated@@331 $generated@@638) ($generated@@254 $generated@@639)) ($generated@@141 ($generated@@371 $generated@@638) ($generated@@254 $generated@@640))) ($generated@@141 ($generated@@401 $generated@@638) ($generated@@254 ($generated@@144 $generated@@639 $generated@@640)))))
 :pattern ( ($generated@@141 $generated@@638 ($generated@@427 $generated@@639 $generated@@640)))
)))
(assert (forall (($generated@@641 T@U) ) (!  (=> (= (type $generated@@641) $generated@@2) ($generated@@141 $generated@@641 $generated@@46))
 :pattern ( ($generated@@141 $generated@@641 $generated@@46))
)))
(assert (forall (($generated@@642 T@U) ) (!  (=> (= (type $generated@@642) $generated@@3) ($generated@@141 $generated@@642 $generated@@47))
 :pattern ( ($generated@@141 $generated@@642 $generated@@47))
)))
(assert (forall (($generated@@643 T@U) ) (!  (=> (= (type $generated@@643) $generated@@4) ($generated@@141 $generated@@643 $generated@@44))
 :pattern ( ($generated@@141 $generated@@643 $generated@@44))
)))
(assert (forall (($generated@@644 T@U) ) (!  (=> (= (type $generated@@644) $generated@@461) ($generated@@141 $generated@@644 $generated@@45))
 :pattern ( ($generated@@141 $generated@@644 $generated@@45))
)))
(assert (forall (($generated@@645 T@U) ) (!  (=> (= (type $generated@@645) $generated@@154) ($generated@@141 $generated@@645 $generated@@48))
 :pattern ( ($generated@@141 $generated@@645 $generated@@48))
)))
(push 1)
(declare-fun ControlFlow (Int Int) Int)
(declare-fun $generated@@646 () T@U)
(declare-fun $generated@@647 () T@U)
(declare-fun $generated@@648 () T@U)
(declare-fun $generated@@649 (T@U) Bool)
(declare-fun $generated@@650 () T@U)
(declare-fun $generated@@651 () T@U)
(declare-fun $generated@@652 () Int)
(assert  (and (and (and (and (= (type $generated@@646) ($generated@@169 $generated@@83 $generated@@4)) (= (type $generated@@647) $generated@@83)) (= (type $generated@@648) ($generated@@82 $generated@@83 $generated@@84))) (= (type $generated@@650) $generated@@145)) (= (type $generated@@651) $generated@@145)))
(set-option :timeout 0)
(set-option :rlimit 0)
(assert (not
 (=> (= (ControlFlow 0 0) 3) (let (($generated@@653  (=> (and (= $generated@@646 ($generated@@168 $generated@@647 $generated@@648 $generated@@60 false)) (= (ControlFlow 0 2) (- 0 1))) ($generated@@141 ($generated@@8 ($generated@@259 (- 0 55))) $generated@@138))))
(let (($generated@@654  (=> (and ($generated@@224 $generated@@648) ($generated@@649 $generated@@648)) (=> (and (and (and ($generated@@141 $generated@@650 ($generated@@223 $generated@@138)) ($generated@@80 $generated@@650 ($generated@@223 $generated@@138) $generated@@648)) ($generated@@381 $generated@@650)) (and (and ($generated@@141 $generated@@651 ($generated@@223 $generated@@138)) ($generated@@80 $generated@@651 ($generated@@223 $generated@@138) $generated@@648)) (and (= 1 $generated@@652) (= (ControlFlow 0 3) 2)))) $generated@@653))))
$generated@@654)))
))
(check-sat)
(get-info :reason-unknown)
(assert (not (= (ControlFlow 0 2) (- 1))))
(check-sat)
(pop 1)
; Invalid
(get-info :rlimit)
