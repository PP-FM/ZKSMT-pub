(set-option :print-success false)
(set-info :smt-lib-version 2.6)
(set-option :auto_config false)
(set-option :type_check true)
(set-option :smt.case_split 3)
(set-option :smt.qi.eager_threshold 100)
(set-option :smt.delay_units true)
(set-option :smt.arith.solver 2)
(set-option :smt.mbqi false)
(set-option :model.compact false)
(set-option :model.v2 true)
(set-option :pp.bv_literals false)
; done setting options


(set-info :category "industrial")
(declare-sort |T@U| 0)
(declare-sort |T@T| 0)
(declare-fun real_pow (Real Real) Real)
(declare-fun UOrdering2 (|T@U| |T@U|) Bool)
(declare-fun UOrdering3 (|T@T| |T@U| |T@U|) Bool)
(declare-fun tickleBool (Bool) Bool)
(assert (and (tickleBool true) (tickleBool false)))
(declare-fun $generated (T@U) Int)
(declare-fun $generated@@0 (T@U) Bool)
(declare-fun $generated@@1 (T@T) Int)
(declare-fun $generated@@2 () T@T)
(declare-fun $generated@@3 () T@T)
(declare-fun $generated@@4 () T@T)
(declare-fun $generated@@5 () T@T)
(declare-fun $generated@@6 () T@T)
(declare-fun $generated@@7 () T@T)
(declare-fun $generated@@8 (Int) T@U)
(declare-fun type (T@U) T@T)
(declare-fun $generated@@9 (Real) T@U)
(declare-fun $generated@@10 (T@U) Real)
(declare-fun $generated@@11 (Bool) T@U)
(declare-fun $generated@@12 (RoundingMode) T@U)
(declare-fun $generated@@13 (T@U) RoundingMode)
(declare-fun $generated@@14 (String) T@U)
(declare-fun $generated@@15 (T@U) String)
(declare-fun $generated@@16 ((RegEx String)) T@U)
(declare-fun $generated@@17 (T@U) (RegEx String))
(declare-fun $generated@@44 () T@U)
(declare-fun $generated@@45 () T@U)
(declare-fun $generated@@46 () T@U)
(declare-fun $generated@@47 () T@U)
(declare-fun $generated@@48 () T@U)
(declare-fun $generated@@49 () T@U)
(declare-fun $generated@@50 () T@U)
(declare-fun $generated@@51 () T@U)
(declare-fun $generated@@52 () T@U)
(declare-fun $generated@@53 () T@U)
(declare-fun $generated@@54 () T@U)
(declare-fun $generated@@55 () T@U)
(declare-fun $generated@@56 () T@U)
(declare-fun $generated@@57 () T@U)
(declare-fun $generated@@58 () T@U)
(declare-fun $generated@@59 () T@U)
(declare-fun $generated@@60 () T@U)
(declare-fun $generated@@61 () T@U)
(declare-fun $generated@@62 () T@U)
(declare-fun $generated@@63 () T@U)
(declare-fun $generated@@64 () T@U)
(declare-fun $generated@@65 () T@U)
(declare-fun $generated@@66 () T@U)
(declare-fun $generated@@67 () T@U)
(declare-fun $generated@@68 () T@U)
(declare-fun $generated@@69 () T@U)
(declare-fun $generated@@70 () T@T)
(declare-fun $generated@@71 () T@T)
(declare-fun $generated@@72 (T@T) T@T)
(declare-fun $generated@@73 (T@T) T@T)
(declare-fun $generated@@74 () T@T)
(declare-fun $generated@@75 () T@T)
(declare-fun $generated@@78 (T@U) T@U)
(declare-fun $generated@@80 (T@U T@U T@U) Bool)
(declare-fun $generated@@81 (Int) T@U)
(declare-fun $generated@@82 (T@T T@T) T@T)
(declare-fun $generated@@83 () T@T)
(declare-fun $generated@@84 () T@T)
(declare-fun $generated@@85 (T@T) T@T)
(declare-fun $generated@@86 (T@T) T@T)
(declare-fun $generated@@87 (T@U T@U) T@U)
(declare-fun $generated@@88 (T@U T@U T@U) T@U)
(declare-fun $generated@@89 (T@U T@U) T@U)
(declare-fun $generated@@90 (T@U T@U T@U) T@U)
(declare-fun $generated@@138 (T@U) Int)
(declare-fun $generated@@139 (T@U) T@U)
(declare-fun $generated@@140 () T@U)
(declare-fun $generated@@141 (T@U) T@U)
(declare-fun $generated@@142 (T@U T@U) Bool)
(declare-fun $generated@@147 (T@U) Int)
(declare-fun $generated@@148 (T@U) T@U)
(declare-fun $generated@@152 (T@U) Int)
(declare-fun $generated@@155 (T@U T@U) Bool)
(declare-fun $generated@@165 (T@U) Bool)
(declare-fun $generated@@176 (T@U) T@U)
(declare-fun $generated@@181 (T@U) T@U)
(declare-fun $generated@@186 (T@U) Bool)
(declare-fun $generated@@187 (T@U T@U) T@U)
(declare-fun $generated@@188 () T@T)
(declare-fun $generated@@194 (T@U T@U) Bool)
(declare-fun $generated@@195 (T@U) T@U)
(declare-fun $generated@@196 (T@U) T@U)
(declare-fun $generated@@197 () T@T)
(declare-fun $generated@@202 (T@U) T@U)
(declare-fun $generated@@203 (T@U) Bool)
(declare-fun $generated@@207 (T@U T@U T@U) T@U)
(declare-fun $generated@@208 (T@U T@U T@U Bool) T@U)
(declare-fun $generated@@209 (T@T T@T) T@T)
(declare-fun $generated@@210 (T@T) T@T)
(declare-fun $generated@@211 (T@T) T@T)
(declare-fun $generated@@212 (T@U T@U T@U T@U) T@U)
(declare-fun $generated@@263 (T@U T@U) T@U)
(declare-fun $generated@@264 (T@U T@U) Bool)
(declare-fun $generated@@273 (T@U) T@U)
(declare-fun $generated@@278 (T@U) T@U)
(declare-fun $generated@@283 (Int) Int)
(declare-fun $generated@@285 (T@U) T@U)
(declare-fun $generated@@289 (T@U T@U T@U) Bool)
(declare-fun $generated@@295 (T@U) T@U)
(declare-fun $generated@@301 (T@T) T@U)
(declare-fun $generated@@302 (T@U) Int)
(declare-fun $generated@@303 (T@T) T@T)
(declare-fun $generated@@304 (T@T) T@T)
(declare-fun $generated@@313 (T@U) T@U)
(declare-fun $generated@@326 (T@U) Int)
(declare-fun $generated@@327 (T@T) T@U)
(declare-fun $generated@@332 (T@U) T@U)
(declare-fun $generated@@338 (T@U) T@U)
(declare-fun $generated@@339 (T@T T@T) T@U)
(declare-fun $generated@@340 (T@T T@T) T@T)
(declare-fun $generated@@341 (T@T) T@T)
(declare-fun $generated@@342 (T@T) T@T)
(declare-fun $generated@@356 (T@U) T@U)
(declare-fun $generated@@357 (T@T T@T) T@U)
(declare-fun $generated@@358 (T@T T@T) T@T)
(declare-fun $generated@@359 (T@T) T@T)
(declare-fun $generated@@360 (T@T) T@T)
(declare-fun $generated@@385 (T@U) T@U)
(declare-fun $generated@@396 (T@U) T@U)
(declare-fun $generated@@416 (T@U) T@U)
(declare-fun $generated@@417 (T@T T@U) T@U)
(declare-fun $generated@@418 (T@U) T@U)
(declare-fun $generated@@427 (T@U) T@U)
(declare-fun $generated@@428 (T@U) T@U)
(declare-fun $generated@@445 (T@U T@U) T@U)
(declare-fun $generated@@453 (T@U T@U) T@U)
(declare-fun $generated@@464 (T@T) T@U)
(declare-fun $generated@@488 () T@T)
(declare-fun $generated@@499 (T@U) T@U)
(declare-fun $generated@@503 (T@U) T@U)
(declare-fun $generated@@509 (T@U) T@U)
(declare-fun $generated@@513 (T@U) T@U)
(declare-fun $generated@@521 (T@U) T@U)
(declare-fun $generated@@525 (T@U) T@U)
(declare-fun $generated@@533 (T@U) T@U)
(declare-fun $generated@@534 (T@U Int) T@U)
(declare-fun $generated@@543 (T@U) Int)
(declare-fun $generated@@545 (T@U) T@U)
(declare-fun $generated@@549 (T@U) T@U)
(declare-fun $generated@@553 (T@U) T@U)
(declare-fun $generated@@557 (T@U) T@U)
(declare-fun $generated@@561 (T@U) T@U)
(declare-fun $generated@@564 (T@U) T@U)
(declare-fun $generated@@567 (T@U) T@U)
(declare-fun $generated@@570 (T@U) T@U)
(declare-fun $generated@@583 (T@U) Int)
(declare-fun $generated@@584 (T@U) Int)
(declare-fun $generated@@660 (T@U) Int)
(assert  (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (= ($generated@@1 $generated@@2) 0) (= ($generated@@1 $generated@@3) 1)) (= ($generated@@1 $generated@@4) 2)) (= ($generated@@1 $generated@@5) 3)) (= ($generated@@1 $generated@@6) 4)) (= ($generated@@1 $generated@@7) 5)) (forall (($generated@@18 Int) ) (! (= ($generated ($generated@@8 $generated@@18)) $generated@@18)
 :pattern ( ($generated@@8 $generated@@18))
))) (forall (($generated@@19 T@U) ) (!  (=> (= (type $generated@@19) $generated@@2) (= ($generated@@8 ($generated $generated@@19)) $generated@@19))
 :pattern ( ($generated $generated@@19))
))) (forall (($generated@@20 Int) ) (! (= (type ($generated@@8 $generated@@20)) $generated@@2)
 :pattern ( ($generated@@8 $generated@@20))
))) (forall (($generated@@21 Real) ) (! (= ($generated@@10 ($generated@@9 $generated@@21)) $generated@@21)
 :pattern ( ($generated@@9 $generated@@21))
))) (forall (($generated@@22 T@U) ) (!  (=> (= (type $generated@@22) $generated@@3) (= ($generated@@9 ($generated@@10 $generated@@22)) $generated@@22))
 :pattern ( ($generated@@10 $generated@@22))
))) (forall (($generated@@23 Real) ) (! (= (type ($generated@@9 $generated@@23)) $generated@@3)
 :pattern ( ($generated@@9 $generated@@23))
))) (forall (($generated@@24 Bool) ) (! (= ($generated@@0 ($generated@@11 $generated@@24)) $generated@@24)
 :pattern ( ($generated@@11 $generated@@24))
))) (forall (($generated@@25 T@U) ) (!  (=> (= (type $generated@@25) $generated@@4) (= ($generated@@11 ($generated@@0 $generated@@25)) $generated@@25))
 :pattern ( ($generated@@0 $generated@@25))
))) (forall (($generated@@26 Bool) ) (! (= (type ($generated@@11 $generated@@26)) $generated@@4)
 :pattern ( ($generated@@11 $generated@@26))
))) (forall (($generated@@27 RoundingMode) ) (! (= ($generated@@13 ($generated@@12 $generated@@27)) $generated@@27)
 :pattern ( ($generated@@12 $generated@@27))
))) (forall (($generated@@28 T@U) ) (!  (=> (= (type $generated@@28) $generated@@5) (= ($generated@@12 ($generated@@13 $generated@@28)) $generated@@28))
 :pattern ( ($generated@@13 $generated@@28))
))) (forall (($generated@@29 RoundingMode) ) (! (= (type ($generated@@12 $generated@@29)) $generated@@5)
 :pattern ( ($generated@@12 $generated@@29))
))) (forall (($generated@@30 String) ) (! (= ($generated@@15 ($generated@@14 $generated@@30)) $generated@@30)
 :pattern ( ($generated@@14 $generated@@30))
))) (forall (($generated@@31 T@U) ) (!  (=> (= (type $generated@@31) $generated@@6) (= ($generated@@14 ($generated@@15 $generated@@31)) $generated@@31))
 :pattern ( ($generated@@15 $generated@@31))
))) (forall (($generated@@32 String) ) (! (= (type ($generated@@14 $generated@@32)) $generated@@6)
 :pattern ( ($generated@@14 $generated@@32))
))) (forall (($generated@@33 (RegEx String)) ) (! (= ($generated@@17 ($generated@@16 $generated@@33)) $generated@@33)
 :pattern ( ($generated@@16 $generated@@33))
))) (forall (($generated@@34 T@U) ) (!  (=> (= (type $generated@@34) $generated@@7) (= ($generated@@16 ($generated@@17 $generated@@34)) $generated@@34))
 :pattern ( ($generated@@17 $generated@@34))
))) (forall (($generated@@35 (RegEx String)) ) (! (= (type ($generated@@16 $generated@@35)) $generated@@7)
 :pattern ( ($generated@@16 $generated@@35))
))))
(assert (forall (($generated@@36 T@U) ) (! (UOrdering2 $generated@@36 $generated@@36)
 :no-pattern ($generated $generated@@36)
 :no-pattern ($generated@@0 $generated@@36)
)))
(assert (forall (($generated@@37 T@U) ($generated@@38 T@U) ($generated@@39 T@U) ) (! (let (($generated@@40 (type $generated@@37)))
 (=> (and (and (= (type $generated@@38) $generated@@40) (= (type $generated@@39) $generated@@40)) (and (UOrdering2 $generated@@37 $generated@@38) (UOrdering2 $generated@@38 $generated@@39))) (UOrdering2 $generated@@37 $generated@@39)))
 :pattern ( (UOrdering2 $generated@@37 $generated@@38) (UOrdering2 $generated@@38 $generated@@39))
)))
(assert (forall (($generated@@41 T@U) ($generated@@42 T@U) ) (! (let (($generated@@43 (type $generated@@41)))
 (=> (= (type $generated@@42) $generated@@43) (=> (and (UOrdering2 $generated@@41 $generated@@42) (UOrdering2 $generated@@42 $generated@@41)) (= $generated@@41 $generated@@42))))
 :pattern ( (UOrdering2 $generated@@41 $generated@@42) (UOrdering2 $generated@@42 $generated@@41))
)))
(assert  (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (= ($generated@@1 $generated@@70) 6) (= (type $generated@@44) $generated@@70)) (= (type $generated@@45) $generated@@70)) (= (type $generated@@46) $generated@@70)) (= (type $generated@@47) $generated@@70)) (= (type $generated@@48) $generated@@70)) (= ($generated@@1 $generated@@71) 7)) (= (type $generated@@49) $generated@@71)) (= (type $generated@@50) $generated@@71)) (= (type $generated@@51) $generated@@71)) (= (type $generated@@52) $generated@@71)) (= (type $generated@@53) $generated@@71)) (= (type $generated@@54) $generated@@71)) (= (type $generated@@55) $generated@@71)) (= (type $generated@@56) $generated@@71)) (= (type $generated@@57) $generated@@71)) (= (type $generated@@58) $generated@@71)) (= (type $generated@@59) $generated@@71)) (forall (($generated@@76 T@T) ) (= ($generated@@1 ($generated@@72 $generated@@76)) 8))) (forall (($generated@@77 T@T) ) (! (= ($generated@@73 ($generated@@72 $generated@@77)) $generated@@77)
 :pattern ( ($generated@@72 $generated@@77))
))) (= (type $generated@@60) ($generated@@72 $generated@@4))) (= (type $generated@@61) $generated@@71)) (= (type $generated@@62) $generated@@71)) (= (type $generated@@63) $generated@@71)) (= (type $generated@@64) $generated@@71)) (= ($generated@@1 $generated@@74) 9)) (= (type $generated@@65) $generated@@74)) (= (type $generated@@66) $generated@@71)) (= ($generated@@1 $generated@@75) 10)) (= (type $generated@@67) $generated@@75)) (= (type $generated@@68) $generated@@75)) (= (type $generated@@69) $generated@@75)))
(assert (distinct $generated@@44 $generated@@45 $generated@@46 $generated@@47 $generated@@48 $generated@@49 $generated@@50 $generated@@51 $generated@@52 $generated@@53 $generated@@54 $generated@@55 $generated@@56 $generated@@57 $generated@@58 $generated@@59 $generated@@60 $generated@@61 $generated@@62 $generated@@63 $generated@@64 $generated@@65 $generated@@66 $generated@@67 $generated@@68 $generated@@69)
)
(assert (forall (($generated@@79 T@U) ) (! (= (type ($generated@@78 $generated@@79)) $generated@@71)
 :pattern ( ($generated@@78 $generated@@79))
)))
(assert (= ($generated@@78 $generated@@44) $generated@@49))
(assert (= ($generated@@78 $generated@@45) $generated@@50))
(assert (= ($generated@@78 $generated@@46) $generated@@51))
(assert (= ($generated@@78 $generated@@47) $generated@@52))
(assert (= ($generated@@78 $generated@@48) $generated@@53))
(assert  (and (and (and (and (and (and (and (and (and (and (and (and (and (forall (($generated@@91 T@T) ($generated@@92 T@T) ) (= ($generated@@1 ($generated@@82 $generated@@91 $generated@@92)) 11)) (forall (($generated@@93 T@T) ($generated@@94 T@T) ) (! (= ($generated@@85 ($generated@@82 $generated@@93 $generated@@94)) $generated@@93)
 :pattern ( ($generated@@82 $generated@@93 $generated@@94))
))) (forall (($generated@@95 T@T) ($generated@@96 T@T) ) (! (= ($generated@@86 ($generated@@82 $generated@@95 $generated@@96)) $generated@@96)
 :pattern ( ($generated@@82 $generated@@95 $generated@@96))
))) (forall (($generated@@97 T@U) ($generated@@98 T@U) ) (! (let (($generated@@99 ($generated@@86 (type $generated@@97))))
(= (type ($generated@@87 $generated@@97 $generated@@98)) $generated@@99))
 :pattern ( ($generated@@87 $generated@@97 $generated@@98))
))) (forall (($generated@@100 T@U) ($generated@@101 T@U) ($generated@@102 T@U) ) (! (let (($generated@@103 (type $generated@@102)))
(let (($generated@@104 (type $generated@@101)))
(= (type ($generated@@88 $generated@@100 $generated@@101 $generated@@102)) ($generated@@82 $generated@@104 $generated@@103))))
 :pattern ( ($generated@@88 $generated@@100 $generated@@101 $generated@@102))
))) (forall (($generated@@105 T@U) ($generated@@106 T@U) ($generated@@107 T@U) ) (! (let (($generated@@108 ($generated@@86 (type $generated@@105))))
 (=> (= (type $generated@@107) $generated@@108) (= ($generated@@87 ($generated@@88 $generated@@105 $generated@@106 $generated@@107) $generated@@106) $generated@@107)))
 :weight 0
))) (and (forall (($generated@@109 T@U) ($generated@@110 T@U) ($generated@@111 T@U) ($generated@@112 T@U) ) (!  (or (= $generated@@111 $generated@@112) (= ($generated@@87 ($generated@@88 $generated@@110 $generated@@111 $generated@@109) $generated@@112) ($generated@@87 $generated@@110 $generated@@112)))
 :weight 0
)) (forall (($generated@@113 T@U) ($generated@@114 T@U) ($generated@@115 T@U) ($generated@@116 T@U) ) (!  (or true (= ($generated@@87 ($generated@@88 $generated@@114 $generated@@115 $generated@@113) $generated@@116) ($generated@@87 $generated@@114 $generated@@116)))
 :weight 0
)))) (= ($generated@@1 $generated@@83) 12)) (forall (($generated@@117 T@U) ($generated@@118 T@U) ) (! (let (($generated@@119 ($generated@@73 (type $generated@@118))))
(= (type ($generated@@89 $generated@@117 $generated@@118)) $generated@@119))
 :pattern ( ($generated@@89 $generated@@117 $generated@@118))
))) (= ($generated@@1 $generated@@84) 13)) (forall (($generated@@120 T@U) ($generated@@121 T@U) ($generated@@122 T@U) ) (! (= (type ($generated@@90 $generated@@120 $generated@@121 $generated@@122)) $generated@@84)
 :pattern ( ($generated@@90 $generated@@120 $generated@@121 $generated@@122))
))) (forall (($generated@@123 T@U) ($generated@@124 T@U) ($generated@@125 T@U) ) (! (let (($generated@@126 ($generated@@73 (type $generated@@124))))
 (=> (= (type $generated@@125) $generated@@126) (= ($generated@@89 ($generated@@90 $generated@@123 $generated@@124 $generated@@125) $generated@@124) $generated@@125)))
 :weight 0
))) (and (forall (($generated@@127 T@U) ($generated@@128 T@U) ($generated@@129 T@U) ($generated@@130 T@U) ) (!  (or (= $generated@@129 $generated@@130) (= ($generated@@89 ($generated@@90 $generated@@128 $generated@@129 $generated@@127) $generated@@130) ($generated@@89 $generated@@128 $generated@@130)))
 :weight 0
)) (forall (($generated@@131 T@U) ($generated@@132 T@U) ($generated@@133 T@U) ($generated@@134 T@U) ) (!  (or true (= ($generated@@89 ($generated@@90 $generated@@132 $generated@@133 $generated@@131) $generated@@134) ($generated@@89 $generated@@132 $generated@@134)))
 :weight 0
)))) (forall (($generated@@135 Int) ) (! (= (type ($generated@@81 $generated@@135)) $generated@@70)
 :pattern ( ($generated@@81 $generated@@135))
))))
(assert (forall (($generated@@136 T@U) ($generated@@137 T@U) ) (!  (=> (and (= (type $generated@@136) $generated@@2) (= (type $generated@@137) ($generated@@82 $generated@@83 $generated@@84))) ($generated@@80 $generated@@136 ($generated@@81 0) $generated@@137))
 :pattern ( ($generated@@80 $generated@@136 ($generated@@81 0) $generated@@137))
)))
(assert  (and (and (forall (($generated@@143 T@U) ) (! (= (type ($generated@@139 $generated@@143)) $generated@@70)
 :pattern ( ($generated@@139 $generated@@143))
)) (= (type $generated@@140) $generated@@83)) (forall (($generated@@144 T@U) ) (! (= (type ($generated@@141 $generated@@144)) $generated@@70)
 :pattern ( ($generated@@141 $generated@@144))
))))
(assert (forall (($generated@@145 T@U) ($generated@@146 T@U) ) (!  (=> (and (and (= (type $generated@@145) $generated@@70) (= (type $generated@@146) $generated@@83)) (and (not (= $generated@@146 $generated@@140)) (= ($generated@@141 $generated@@146) ($generated@@139 $generated@@145)))) ($generated@@142 ($generated@@8 ($generated@@138 $generated@@146)) $generated@@46))
 :pattern ( ($generated@@138 $generated@@146) ($generated@@139 $generated@@145))
)))
(assert (forall (($generated@@149 T@U) ) (! (= (type ($generated@@148 $generated@@149)) $generated@@70)
 :pattern ( ($generated@@148 $generated@@149))
)))
(assert (forall (($generated@@150 T@U) ($generated@@151 T@U) ) (!  (=> (and (and (= (type $generated@@150) $generated@@70) (= (type $generated@@151) $generated@@83)) (and (not (= $generated@@151 $generated@@140)) (= ($generated@@141 $generated@@151) ($generated@@148 $generated@@150)))) ($generated@@142 ($generated@@8 ($generated@@147 $generated@@151)) $generated@@46))
 :pattern ( ($generated@@147 $generated@@151) ($generated@@148 $generated@@150))
)))
(assert (forall (($generated@@153 T@U) ($generated@@154 T@U) ) (!  (=> (and (and (= (type $generated@@153) $generated@@70) (= (type $generated@@154) $generated@@83)) (and (not (= $generated@@154 $generated@@140)) (= ($generated@@141 $generated@@154) ($generated@@148 $generated@@153)))) ($generated@@142 ($generated@@8 ($generated@@152 $generated@@154)) $generated@@46))
 :pattern ( ($generated@@152 $generated@@154) ($generated@@148 $generated@@153))
)))
(assert (forall (($generated@@156 T@U) ($generated@@157 T@U) ) (!  (=> (and (and (= (type $generated@@156) ($generated@@82 $generated@@83 $generated@@84)) (= (type $generated@@157) ($generated@@82 $generated@@83 $generated@@84))) ($generated@@155 $generated@@156 $generated@@157)) (forall (($generated@@158 T@U) ) (!  (=> (and (= (type $generated@@158) $generated@@83) ($generated@@0 ($generated@@89 ($generated@@87 $generated@@156 $generated@@158) $generated@@60))) ($generated@@0 ($generated@@89 ($generated@@87 $generated@@157 $generated@@158) $generated@@60)))
 :pattern ( ($generated@@89 ($generated@@87 $generated@@157 $generated@@158) $generated@@60))
)))
 :pattern ( ($generated@@155 $generated@@156 $generated@@157))
)))
(assert (forall (($generated@@159 T@U) ($generated@@160 T@U) ($generated@@161 T@U) ) (!  (=> (and (and (= (type $generated@@159) $generated@@70) (= (type $generated@@160) $generated@@83)) (= (type $generated@@161) ($generated@@82 $generated@@83 $generated@@84))) (= ($generated@@80 $generated@@160 ($generated@@139 $generated@@159) $generated@@161)  (or (= $generated@@160 $generated@@140) ($generated@@0 ($generated@@89 ($generated@@87 $generated@@161 $generated@@160) $generated@@60)))))
 :pattern ( ($generated@@80 $generated@@160 ($generated@@139 $generated@@159) $generated@@161))
)))
(assert (forall (($generated@@162 T@U) ($generated@@163 T@U) ($generated@@164 T@U) ) (!  (=> (and (and (= (type $generated@@162) $generated@@70) (= (type $generated@@163) $generated@@83)) (= (type $generated@@164) ($generated@@82 $generated@@83 $generated@@84))) (= ($generated@@80 $generated@@163 ($generated@@148 $generated@@162) $generated@@164)  (or (= $generated@@163 $generated@@140) ($generated@@0 ($generated@@89 ($generated@@87 $generated@@164 $generated@@163) $generated@@60)))))
 :pattern ( ($generated@@80 $generated@@163 ($generated@@148 $generated@@162) $generated@@164))
)))
(assert (forall (($generated@@166 T@U) ($generated@@167 T@U) ($generated@@168 T@U) ) (!  (=> (and (and (and (= (type $generated@@166) $generated@@70) (= (type $generated@@167) ($generated@@82 $generated@@83 $generated@@84))) (= (type $generated@@168) $generated@@83)) (and (and ($generated@@165 $generated@@167) (and (not (= $generated@@168 $generated@@140)) (= ($generated@@141 $generated@@168) ($generated@@139 $generated@@166)))) ($generated@@0 ($generated@@89 ($generated@@87 $generated@@167 $generated@@168) $generated@@60)))) ($generated@@80 ($generated@@8 ($generated@@138 $generated@@168)) $generated@@46 $generated@@167))
 :pattern ( ($generated@@138 $generated@@168) ($generated@@89 ($generated@@87 $generated@@167 $generated@@168) $generated@@60) ($generated@@139 $generated@@166))
)))
(assert (forall (($generated@@169 T@U) ($generated@@170 T@U) ($generated@@171 T@U) ) (!  (=> (and (and (and (= (type $generated@@169) $generated@@70) (= (type $generated@@170) ($generated@@82 $generated@@83 $generated@@84))) (= (type $generated@@171) $generated@@83)) (and (and ($generated@@165 $generated@@170) (and (not (= $generated@@171 $generated@@140)) (= ($generated@@141 $generated@@171) ($generated@@148 $generated@@169)))) ($generated@@0 ($generated@@89 ($generated@@87 $generated@@170 $generated@@171) $generated@@60)))) ($generated@@80 ($generated@@8 ($generated@@147 $generated@@171)) $generated@@46 $generated@@170))
 :pattern ( ($generated@@147 $generated@@171) ($generated@@89 ($generated@@87 $generated@@170 $generated@@171) $generated@@60) ($generated@@148 $generated@@169))
)))
(assert (forall (($generated@@172 T@U) ($generated@@173 T@U) ($generated@@174 T@U) ) (!  (=> (and (and (and (= (type $generated@@172) $generated@@70) (= (type $generated@@173) ($generated@@82 $generated@@83 $generated@@84))) (= (type $generated@@174) $generated@@83)) (and (and ($generated@@165 $generated@@173) (and (not (= $generated@@174 $generated@@140)) (= ($generated@@141 $generated@@174) ($generated@@148 $generated@@172)))) ($generated@@0 ($generated@@89 ($generated@@87 $generated@@173 $generated@@174) $generated@@60)))) ($generated@@80 ($generated@@8 ($generated@@152 $generated@@174)) $generated@@46 $generated@@173))
 :pattern ( ($generated@@152 $generated@@174) ($generated@@89 ($generated@@87 $generated@@173 $generated@@174) $generated@@60) ($generated@@148 $generated@@172))
)))
(assert (forall (($generated@@175 T@U) ) (!  (=> (= (type $generated@@175) $generated@@2) ($generated@@142 $generated@@175 ($generated@@81 0)))
 :pattern ( ($generated@@142 $generated@@175 ($generated@@81 0)))
)))
(assert (forall (($generated@@177 T@U) ) (! (= (type ($generated@@176 $generated@@177)) $generated@@70)
 :pattern ( ($generated@@176 $generated@@177))
)))
(assert (forall (($generated@@178 T@U) ($generated@@179 T@U) ($generated@@180 T@U) ) (!  (=> (and (and (= (type $generated@@178) $generated@@70) (= (type $generated@@179) $generated@@83)) (= (type $generated@@180) ($generated@@82 $generated@@83 $generated@@84))) (= ($generated@@80 $generated@@179 ($generated@@176 $generated@@178) $generated@@180) ($generated@@80 $generated@@179 ($generated@@139 $generated@@178) $generated@@180)))
 :pattern ( ($generated@@80 $generated@@179 ($generated@@176 $generated@@178) $generated@@180))
)))
(assert (forall (($generated@@182 T@U) ) (! (= (type ($generated@@181 $generated@@182)) $generated@@70)
 :pattern ( ($generated@@181 $generated@@182))
)))
(assert (forall (($generated@@183 T@U) ($generated@@184 T@U) ($generated@@185 T@U) ) (!  (=> (and (and (= (type $generated@@183) $generated@@70) (= (type $generated@@184) $generated@@83)) (= (type $generated@@185) ($generated@@82 $generated@@83 $generated@@84))) (= ($generated@@80 $generated@@184 ($generated@@181 $generated@@183) $generated@@185) ($generated@@80 $generated@@184 ($generated@@148 $generated@@183) $generated@@185)))
 :pattern ( ($generated@@80 $generated@@184 ($generated@@181 $generated@@183) $generated@@185))
)))
(assert  (and (= ($generated@@1 $generated@@188) 14) (forall (($generated@@189 T@U) ($generated@@190 T@U) ) (! (= (type ($generated@@187 $generated@@189 $generated@@190)) $generated@@70)
 :pattern ( ($generated@@187 $generated@@189 $generated@@190))
))))
(assert (forall (($generated@@191 T@U) ($generated@@192 T@U) ($generated@@193 T@U) ) (!  (=> (and (and (and (= (type $generated@@191) $generated@@70) (= (type $generated@@192) $generated@@70)) (= (type $generated@@193) $generated@@188)) ($generated@@142 $generated@@193 ($generated@@187 $generated@@191 $generated@@192))) ($generated@@186 $generated@@193))
 :pattern ( ($generated@@186 $generated@@193) ($generated@@142 $generated@@193 ($generated@@187 $generated@@191 $generated@@192)))
)))
(assert  (and (and (= ($generated@@1 $generated@@197) 15) (forall (($generated@@198 T@U) ) (! (= (type ($generated@@195 $generated@@198)) $generated@@197)
 :pattern ( ($generated@@195 $generated@@198))
))) (forall (($generated@@199 T@U) ) (! (= (type ($generated@@196 $generated@@199)) $generated@@197)
 :pattern ( ($generated@@196 $generated@@199))
))))
(assert (forall (($generated@@200 T@U) ($generated@@201 T@U) ) (!  (=> (and (and (= (type $generated@@200) $generated@@188) (= (type $generated@@201) $generated@@188)) true) (= ($generated@@194 $generated@@200 $generated@@201)  (and (= ($generated@@195 $generated@@200) ($generated@@195 $generated@@201)) (= ($generated@@196 $generated@@200) ($generated@@196 $generated@@201)))))
 :pattern ( ($generated@@194 $generated@@200 $generated@@201))
)))
(assert (forall (($generated@@204 T@U) ) (! (= (type ($generated@@202 $generated@@204)) $generated@@70)
 :pattern ( ($generated@@202 $generated@@204))
)))
(assert (forall (($generated@@205 T@U) ($generated@@206 T@U) ) (!  (=> (and (and (= (type $generated@@205) ($generated@@82 $generated@@197 $generated@@2)) (= (type $generated@@206) $generated@@70)) ($generated@@142 $generated@@205 ($generated@@202 $generated@@206))) ($generated@@203 $generated@@205))
 :pattern ( ($generated@@142 $generated@@205 ($generated@@202 $generated@@206)))
)))
(assert  (and (and (and (and (and (and (and (forall (($generated@@213 T@T) ($generated@@214 T@T) ) (= ($generated@@1 ($generated@@209 $generated@@213 $generated@@214)) 16)) (forall (($generated@@215 T@T) ($generated@@216 T@T) ) (! (= ($generated@@210 ($generated@@209 $generated@@215 $generated@@216)) $generated@@215)
 :pattern ( ($generated@@209 $generated@@215 $generated@@216))
))) (forall (($generated@@217 T@T) ($generated@@218 T@T) ) (! (= ($generated@@211 ($generated@@209 $generated@@217 $generated@@218)) $generated@@218)
 :pattern ( ($generated@@209 $generated@@217 $generated@@218))
))) (forall (($generated@@219 T@U) ($generated@@220 T@U) ($generated@@221 T@U) ) (! (let (($generated@@222 ($generated@@211 (type $generated@@219))))
(= (type ($generated@@207 $generated@@219 $generated@@220 $generated@@221)) $generated@@222))
 :pattern ( ($generated@@207 $generated@@219 $generated@@220 $generated@@221))
))) (forall (($generated@@223 T@U) ($generated@@224 T@U) ($generated@@225 T@U) ($generated@@226 T@U) ) (! (let (($generated@@227 (type $generated@@226)))
(let (($generated@@228 (type $generated@@224)))
(= (type ($generated@@212 $generated@@223 $generated@@224 $generated@@225 $generated@@226)) ($generated@@209 $generated@@228 $generated@@227))))
 :pattern ( ($generated@@212 $generated@@223 $generated@@224 $generated@@225 $generated@@226))
))) (forall (($generated@@229 T@U) ($generated@@230 T@U) ($generated@@231 T@U) ($generated@@232 T@U) ) (! (let (($generated@@233 ($generated@@211 (type $generated@@229))))
 (=> (= (type $generated@@232) $generated@@233) (= ($generated@@207 ($generated@@212 $generated@@229 $generated@@230 $generated@@231 $generated@@232) $generated@@230 $generated@@231) $generated@@232)))
 :weight 0
))) (and (and (forall (($generated@@234 T@U) ($generated@@235 T@U) ($generated@@236 T@U) ($generated@@237 T@U) ($generated@@238 T@U) ($generated@@239 T@U) ) (!  (or (= $generated@@236 $generated@@238) (= ($generated@@207 ($generated@@212 $generated@@235 $generated@@236 $generated@@237 $generated@@234) $generated@@238 $generated@@239) ($generated@@207 $generated@@235 $generated@@238 $generated@@239)))
 :weight 0
)) (forall (($generated@@240 T@U) ($generated@@241 T@U) ($generated@@242 T@U) ($generated@@243 T@U) ($generated@@244 T@U) ($generated@@245 T@U) ) (!  (or (= $generated@@243 $generated@@245) (= ($generated@@207 ($generated@@212 $generated@@241 $generated@@242 $generated@@243 $generated@@240) $generated@@244 $generated@@245) ($generated@@207 $generated@@241 $generated@@244 $generated@@245)))
 :weight 0
))) (forall (($generated@@246 T@U) ($generated@@247 T@U) ($generated@@248 T@U) ($generated@@249 T@U) ($generated@@250 T@U) ($generated@@251 T@U) ) (!  (or true (= ($generated@@207 ($generated@@212 $generated@@247 $generated@@248 $generated@@249 $generated@@246) $generated@@250 $generated@@251) ($generated@@207 $generated@@247 $generated@@250 $generated@@251)))
 :weight 0
)))) (forall (($generated@@252 T@U) ($generated@@253 T@U) ($generated@@254 T@U) ($generated@@255 Bool) ) (! (= (type ($generated@@208 $generated@@252 $generated@@253 $generated@@254 $generated@@255)) ($generated@@209 $generated@@83 $generated@@4))
 :pattern ( ($generated@@208 $generated@@252 $generated@@253 $generated@@254 $generated@@255))
))))
(assert (forall (($generated@@256 T@U) ($generated@@257 T@U) ($generated@@258 T@U) ($generated@@259 Bool) ($generated@@260 T@U) ($generated@@261 T@U) ) (! (let (($generated@@262 ($generated@@73 (type $generated@@261))))
 (=> (and (and (and (and (= (type $generated@@256) $generated@@83) (= (type $generated@@257) ($generated@@82 $generated@@83 $generated@@84))) (= (type $generated@@258) ($generated@@72 $generated@@4))) (= (type $generated@@260) $generated@@83)) (= (type $generated@@261) ($generated@@72 $generated@@262))) (= ($generated@@0 ($generated@@207 ($generated@@208 $generated@@256 $generated@@257 $generated@@258 $generated@@259) $generated@@260 $generated@@261))  (=> (and (not (= $generated@@260 $generated@@256)) ($generated@@0 ($generated@@89 ($generated@@87 $generated@@257 $generated@@260) $generated@@258))) $generated@@259))))
 :pattern ( ($generated@@207 ($generated@@208 $generated@@256 $generated@@257 $generated@@258 $generated@@259) $generated@@260 $generated@@261))
)))
(assert (forall (($generated@@265 T@U) ($generated@@266 T@U) ) (! (= (type ($generated@@263 $generated@@265 $generated@@266)) $generated@@188)
 :pattern ( ($generated@@263 $generated@@265 $generated@@266))
)))
(assert (forall (($generated@@267 T@U) ($generated@@268 T@U) ($generated@@269 T@U) ($generated@@270 T@U) ) (!  (=> (and (and (and (= (type $generated@@267) $generated@@70) (= (type $generated@@268) $generated@@70)) (= (type $generated@@269) $generated@@197)) (= (type $generated@@270) $generated@@197)) (= ($generated@@142 ($generated@@263 $generated@@269 $generated@@270) ($generated@@187 $generated@@267 $generated@@268))  (and ($generated@@264 $generated@@269 $generated@@267) ($generated@@264 $generated@@270 $generated@@268))))
 :pattern ( ($generated@@142 ($generated@@263 $generated@@269 $generated@@270) ($generated@@187 $generated@@267 $generated@@268)))
)))
(assert (forall (($generated@@271 T@U) ($generated@@272 T@U) ) (!  (=> (and (= (type $generated@@271) $generated@@188) (= (type $generated@@272) $generated@@188)) (= ($generated@@194 $generated@@271 $generated@@272) (= $generated@@271 $generated@@272)))
 :pattern ( ($generated@@194 $generated@@271 $generated@@272))
)))
(assert (forall (($generated@@274 T@U) ) (! (= (type ($generated@@273 $generated@@274)) $generated@@70)
 :pattern ( ($generated@@273 $generated@@274))
)))
(assert (forall (($generated@@275 T@U) ($generated@@276 T@U) ) (!  (=> (and (= (type $generated@@275) ($generated@@82 $generated@@197 $generated@@4)) (= (type $generated@@276) $generated@@70)) (= ($generated@@142 $generated@@275 ($generated@@273 $generated@@276)) (forall (($generated@@277 T@U) ) (!  (=> (and (= (type $generated@@277) $generated@@197) ($generated@@0 ($generated@@87 $generated@@275 $generated@@277))) ($generated@@264 $generated@@277 $generated@@276))
 :pattern ( ($generated@@87 $generated@@275 $generated@@277))
))))
 :pattern ( ($generated@@142 $generated@@275 ($generated@@273 $generated@@276)))
)))
(assert (forall (($generated@@279 T@U) ) (! (= (type ($generated@@278 $generated@@279)) $generated@@70)
 :pattern ( ($generated@@278 $generated@@279))
)))
(assert (forall (($generated@@280 T@U) ($generated@@281 T@U) ) (!  (=> (and (= (type $generated@@280) ($generated@@82 $generated@@197 $generated@@4)) (= (type $generated@@281) $generated@@70)) (= ($generated@@142 $generated@@280 ($generated@@278 $generated@@281)) (forall (($generated@@282 T@U) ) (!  (=> (and (= (type $generated@@282) $generated@@197) ($generated@@0 ($generated@@87 $generated@@280 $generated@@282))) ($generated@@264 $generated@@282 $generated@@281))
 :pattern ( ($generated@@87 $generated@@280 $generated@@282))
))))
 :pattern ( ($generated@@142 $generated@@280 ($generated@@278 $generated@@281)))
)))
(assert (forall (($generated@@284 Int) ) (! (= ($generated@@283 $generated@@284) $generated@@284)
 :pattern ( ($generated@@283 $generated@@284))
)))
(assert (forall (($generated@@286 T@U) ) (! (let (($generated@@287 (type $generated@@286)))
(= (type ($generated@@285 $generated@@286)) $generated@@287))
 :pattern ( ($generated@@285 $generated@@286))
)))
(assert (forall (($generated@@288 T@U) ) (! (= ($generated@@285 $generated@@288) $generated@@288)
 :pattern ( ($generated@@285 $generated@@288))
)))
(assert (forall (($generated@@290 T@U) ($generated@@291 T@U) ($generated@@292 T@U) ($generated@@293 T@U) ($generated@@294 T@U) ) (!  (=> (and (and (and (and (and (= (type $generated@@290) $generated@@70) (= (type $generated@@291) $generated@@70)) (= (type $generated@@292) $generated@@197)) (= (type $generated@@293) $generated@@197)) (= (type $generated@@294) ($generated@@82 $generated@@83 $generated@@84))) ($generated@@165 $generated@@294)) (= ($generated@@80 ($generated@@263 $generated@@292 $generated@@293) ($generated@@187 $generated@@290 $generated@@291) $generated@@294)  (and ($generated@@289 $generated@@292 $generated@@290 $generated@@294) ($generated@@289 $generated@@293 $generated@@291 $generated@@294))))
 :pattern ( ($generated@@80 ($generated@@263 $generated@@292 $generated@@293) ($generated@@187 $generated@@290 $generated@@291) $generated@@294))
)))
(assert (forall (($generated@@296 T@U) ) (! (= (type ($generated@@295 $generated@@296)) $generated@@74)
 :pattern ( ($generated@@295 $generated@@296))
)))
(assert (forall (($generated@@297 T@U) ) (!  (=> (= (type $generated@@297) $generated@@188) (= ($generated@@186 $generated@@297) (= ($generated@@295 $generated@@297) $generated@@65)))
 :pattern ( ($generated@@186 $generated@@297))
)))
(assert (forall (($generated@@298 T@U) ) (!  (=> (and (= (type $generated@@298) $generated@@188) ($generated@@186 $generated@@298)) (exists (($generated@@299 T@U) ($generated@@300 T@U) ) (!  (and (and (= (type $generated@@299) $generated@@197) (= (type $generated@@300) $generated@@197)) (= $generated@@298 ($generated@@263 $generated@@299 $generated@@300)))
 :no-pattern (type $generated@@299)
 :no-pattern (type $generated@@300)
 :no-pattern ($generated $generated@@299)
 :no-pattern ($generated@@0 $generated@@299)
 :no-pattern ($generated $generated@@300)
 :no-pattern ($generated@@0 $generated@@300)
)))
 :pattern ( ($generated@@186 $generated@@298))
)))
(assert  (and (and (forall (($generated@@305 T@T) ) (= ($generated@@1 ($generated@@303 $generated@@305)) 17)) (forall (($generated@@306 T@T) ) (! (= ($generated@@304 ($generated@@303 $generated@@306)) $generated@@306)
 :pattern ( ($generated@@303 $generated@@306))
))) (forall (($generated@@307 T@T) ) (! (= (type ($generated@@301 $generated@@307)) ($generated@@303 $generated@@307))
 :pattern ( ($generated@@301 $generated@@307))
))))
(assert (forall (($generated@@308 T@T) ) (! (= ($generated@@302 ($generated@@301 $generated@@308)) 0)
 :pattern ( ($generated@@301 $generated@@308))
)))
(assert (forall (($generated@@309 T@U) ($generated@@310 T@U) ) (!  (=> (and (= (type $generated@@309) $generated@@70) (= (type $generated@@310) $generated@@83)) (= ($generated@@142 $generated@@310 ($generated@@176 $generated@@309))  (and ($generated@@142 $generated@@310 ($generated@@139 $generated@@309)) (not (= $generated@@310 $generated@@140)))))
 :pattern ( ($generated@@142 $generated@@310 ($generated@@176 $generated@@309)))
)))
(assert (forall (($generated@@311 T@U) ($generated@@312 T@U) ) (!  (=> (and (= (type $generated@@311) $generated@@70) (= (type $generated@@312) $generated@@83)) (= ($generated@@142 $generated@@312 ($generated@@181 $generated@@311))  (and ($generated@@142 $generated@@312 ($generated@@148 $generated@@311)) (not (= $generated@@312 $generated@@140)))))
 :pattern ( ($generated@@142 $generated@@312 ($generated@@181 $generated@@311)))
)))
(assert (forall (($generated@@314 T@U) ) (! (= (type ($generated@@313 $generated@@314)) $generated@@197)
 :pattern ( ($generated@@313 $generated@@314))
)))
(assert (forall (($generated@@315 T@U) ($generated@@316 T@U) ($generated@@317 T@U) ) (!  (=> (and (= (type $generated@@316) $generated@@70) (= (type $generated@@317) ($generated@@82 $generated@@83 $generated@@84))) (= ($generated@@289 ($generated@@313 $generated@@315) $generated@@316 $generated@@317) ($generated@@80 $generated@@315 $generated@@316 $generated@@317)))
 :pattern ( ($generated@@289 ($generated@@313 $generated@@315) $generated@@316 $generated@@317))
)))
(assert (forall (($generated@@318 T@U) ($generated@@319 T@U) ($generated@@320 T@U) ($generated@@321 T@U) ) (!  (=> (and (and (and (and (and (= (type $generated@@318) ($generated@@82 $generated@@83 $generated@@84)) (= (type $generated@@319) ($generated@@82 $generated@@83 $generated@@84))) (= (type $generated@@320) $generated@@197)) (= (type $generated@@321) $generated@@70)) ($generated@@155 $generated@@318 $generated@@319)) ($generated@@289 $generated@@320 $generated@@321 $generated@@318)) ($generated@@289 $generated@@320 $generated@@321 $generated@@319))
 :pattern ( ($generated@@155 $generated@@318 $generated@@319) ($generated@@289 $generated@@320 $generated@@321 $generated@@318))
)))
(assert (forall (($generated@@322 T@U) ($generated@@323 T@U) ($generated@@324 T@U) ($generated@@325 T@U) ) (!  (=> (and (and (and (and (= (type $generated@@322) ($generated@@82 $generated@@83 $generated@@84)) (= (type $generated@@323) ($generated@@82 $generated@@83 $generated@@84))) (= (type $generated@@325) $generated@@70)) ($generated@@155 $generated@@322 $generated@@323)) ($generated@@80 $generated@@324 $generated@@325 $generated@@322)) ($generated@@80 $generated@@324 $generated@@325 $generated@@323))
 :pattern ( ($generated@@155 $generated@@322 $generated@@323) ($generated@@80 $generated@@324 $generated@@325 $generated@@322))
)))
(assert (forall (($generated@@328 T@T) ) (! (= (type ($generated@@327 $generated@@328)) ($generated@@82 $generated@@328 $generated@@2))
 :pattern ( ($generated@@327 $generated@@328))
)))
(assert (forall (($generated@@329 T@U) ) (! (let (($generated@@330 ($generated@@85 (type $generated@@329))))
 (=> (= (type $generated@@329) ($generated@@82 $generated@@330 $generated@@2)) (and (= (= ($generated@@326 $generated@@329) 0) (= $generated@@329 ($generated@@327 $generated@@330))) (=> (not (= ($generated@@326 $generated@@329) 0)) (exists (($generated@@331 T@U) ) (!  (and (= (type $generated@@331) $generated@@330) (< 0 ($generated ($generated@@87 $generated@@329 $generated@@331))))
 :no-pattern (type $generated@@331)
 :no-pattern ($generated $generated@@331)
 :no-pattern ($generated@@0 $generated@@331)
))))))
 :pattern ( ($generated@@326 $generated@@329))
)))
(assert (forall (($generated@@333 T@U) ) (! (= (type ($generated@@332 $generated@@333)) $generated@@75)
 :pattern ( ($generated@@332 $generated@@333))
)))
(assert (forall (($generated@@334 T@U) ) (!  (=> (= (type $generated@@334) $generated@@70) (and (= ($generated@@78 ($generated@@139 $generated@@334)) $generated@@61) (= ($generated@@332 ($generated@@139 $generated@@334)) $generated@@67)))
 :pattern ( ($generated@@139 $generated@@334))
)))
(assert (forall (($generated@@335 T@U) ) (!  (=> (= (type $generated@@335) $generated@@70) (and (= ($generated@@78 ($generated@@176 $generated@@335)) $generated@@62) (= ($generated@@332 ($generated@@176 $generated@@335)) $generated@@67)))
 :pattern ( ($generated@@176 $generated@@335))
)))
(assert (forall (($generated@@336 T@U) ) (!  (=> (= (type $generated@@336) $generated@@70) (and (= ($generated@@78 ($generated@@148 $generated@@336)) $generated@@63) (= ($generated@@332 ($generated@@148 $generated@@336)) $generated@@68)))
 :pattern ( ($generated@@148 $generated@@336))
)))
(assert (forall (($generated@@337 T@U) ) (!  (=> (= (type $generated@@337) $generated@@70) (and (= ($generated@@78 ($generated@@181 $generated@@337)) $generated@@64) (= ($generated@@332 ($generated@@181 $generated@@337)) $generated@@68)))
 :pattern ( ($generated@@181 $generated@@337))
)))
(assert  (and (and (and (and (forall (($generated@@343 T@T) ($generated@@344 T@T) ) (= ($generated@@1 ($generated@@340 $generated@@343 $generated@@344)) 18)) (forall (($generated@@345 T@T) ($generated@@346 T@T) ) (! (= ($generated@@341 ($generated@@340 $generated@@345 $generated@@346)) $generated@@345)
 :pattern ( ($generated@@340 $generated@@345 $generated@@346))
))) (forall (($generated@@347 T@T) ($generated@@348 T@T) ) (! (= ($generated@@342 ($generated@@340 $generated@@347 $generated@@348)) $generated@@348)
 :pattern ( ($generated@@340 $generated@@347 $generated@@348))
))) (forall (($generated@@349 T@U) ) (! (let (($generated@@350 ($generated@@341 (type $generated@@349))))
(= (type ($generated@@338 $generated@@349)) ($generated@@82 $generated@@350 $generated@@4)))
 :pattern ( ($generated@@338 $generated@@349))
))) (forall (($generated@@351 T@T) ($generated@@352 T@T) ) (! (= (type ($generated@@339 $generated@@351 $generated@@352)) ($generated@@340 $generated@@351 $generated@@352))
 :pattern ( ($generated@@339 $generated@@351 $generated@@352))
))))
(assert (forall (($generated@@353 T@U) ($generated@@354 T@T) ) (! (let (($generated@@355 (type $generated@@353)))
 (not ($generated@@0 ($generated@@87 ($generated@@338 ($generated@@339 $generated@@355 $generated@@354)) $generated@@353))))
 :pattern ( (let (($generated@@355 (type $generated@@353)))
($generated@@87 ($generated@@338 ($generated@@339 $generated@@355 $generated@@354)) $generated@@353)))
)))
(assert  (and (and (and (and (forall (($generated@@361 T@T) ($generated@@362 T@T) ) (= ($generated@@1 ($generated@@358 $generated@@361 $generated@@362)) 19)) (forall (($generated@@363 T@T) ($generated@@364 T@T) ) (! (= ($generated@@359 ($generated@@358 $generated@@363 $generated@@364)) $generated@@363)
 :pattern ( ($generated@@358 $generated@@363 $generated@@364))
))) (forall (($generated@@365 T@T) ($generated@@366 T@T) ) (! (= ($generated@@360 ($generated@@358 $generated@@365 $generated@@366)) $generated@@366)
 :pattern ( ($generated@@358 $generated@@365 $generated@@366))
))) (forall (($generated@@367 T@U) ) (! (let (($generated@@368 ($generated@@359 (type $generated@@367))))
(= (type ($generated@@356 $generated@@367)) ($generated@@82 $generated@@368 $generated@@4)))
 :pattern ( ($generated@@356 $generated@@367))
))) (forall (($generated@@369 T@T) ($generated@@370 T@T) ) (! (= (type ($generated@@357 $generated@@369 $generated@@370)) ($generated@@358 $generated@@369 $generated@@370))
 :pattern ( ($generated@@357 $generated@@369 $generated@@370))
))))
(assert (forall (($generated@@371 T@U) ($generated@@372 T@T) ) (! (let (($generated@@373 (type $generated@@371)))
 (not ($generated@@0 ($generated@@87 ($generated@@356 ($generated@@357 $generated@@373 $generated@@372)) $generated@@371))))
 :pattern ( (let (($generated@@373 (type $generated@@371)))
($generated@@87 ($generated@@356 ($generated@@357 $generated@@373 $generated@@372)) $generated@@371)))
)))
(assert (forall (($generated@@374 T@U) ) (! (let (($generated@@375 ($generated@@85 (type $generated@@374))))
 (=> (= (type $generated@@374) ($generated@@82 $generated@@375 $generated@@2)) (= ($generated@@203 $generated@@374) (forall (($generated@@376 T@U) ) (!  (=> (= (type $generated@@376) $generated@@375) (and (<= 0 ($generated ($generated@@87 $generated@@374 $generated@@376))) (<= ($generated ($generated@@87 $generated@@374 $generated@@376)) ($generated@@326 $generated@@374))))
 :pattern ( ($generated@@87 $generated@@374 $generated@@376))
)))))
 :pattern ( ($generated@@203 $generated@@374))
)))
(assert (forall (($generated@@377 T@U) ($generated@@378 T@U) ) (!  (=> (and (= (type $generated@@377) $generated@@70) (= (type $generated@@378) $generated@@83)) (= ($generated@@142 $generated@@378 ($generated@@139 $generated@@377))  (or (= $generated@@378 $generated@@140) (= ($generated@@141 $generated@@378) ($generated@@139 $generated@@377)))))
 :pattern ( ($generated@@142 $generated@@378 ($generated@@139 $generated@@377)))
)))
(assert (forall (($generated@@379 T@U) ($generated@@380 T@U) ) (!  (=> (and (= (type $generated@@379) $generated@@70) (= (type $generated@@380) $generated@@83)) (= ($generated@@142 $generated@@380 ($generated@@148 $generated@@379))  (or (= $generated@@380 $generated@@140) (= ($generated@@141 $generated@@380) ($generated@@148 $generated@@379)))))
 :pattern ( ($generated@@142 $generated@@380 ($generated@@148 $generated@@379)))
)))
(assert (forall (($generated@@381 T@U) ) (! (let (($generated@@382 ($generated@@342 (type $generated@@381))))
(let (($generated@@383 ($generated@@341 (type $generated@@381))))
 (=> (= (type $generated@@381) ($generated@@340 $generated@@383 $generated@@382)) (or (= $generated@@381 ($generated@@339 $generated@@383 $generated@@382)) (exists (($generated@@384 T@U) ) (!  (and (= (type $generated@@384) $generated@@383) ($generated@@0 ($generated@@87 ($generated@@338 $generated@@381) $generated@@384)))
 :no-pattern (type $generated@@384)
 :no-pattern ($generated $generated@@384)
 :no-pattern ($generated@@0 $generated@@384)
))))))
 :pattern ( ($generated@@338 $generated@@381))
)))
(assert (forall (($generated@@386 T@U) ) (! (let (($generated@@387 ($generated@@342 (type $generated@@386))))
(= (type ($generated@@385 $generated@@386)) ($generated@@82 $generated@@387 $generated@@4)))
 :pattern ( ($generated@@385 $generated@@386))
)))
(assert (forall (($generated@@388 T@U) ) (! (let (($generated@@389 ($generated@@342 (type $generated@@388))))
(let (($generated@@390 ($generated@@341 (type $generated@@388))))
 (=> (= (type $generated@@388) ($generated@@340 $generated@@390 $generated@@389)) (or (= $generated@@388 ($generated@@339 $generated@@390 $generated@@389)) (exists (($generated@@391 T@U) ) (!  (and (= (type $generated@@391) $generated@@389) ($generated@@0 ($generated@@87 ($generated@@385 $generated@@388) $generated@@391)))
 :no-pattern (type $generated@@391)
 :no-pattern ($generated $generated@@391)
 :no-pattern ($generated@@0 $generated@@391)
))))))
 :pattern ( ($generated@@385 $generated@@388))
)))
(assert (forall (($generated@@392 T@U) ) (! (let (($generated@@393 ($generated@@360 (type $generated@@392))))
(let (($generated@@394 ($generated@@359 (type $generated@@392))))
 (=> (= (type $generated@@392) ($generated@@358 $generated@@394 $generated@@393)) (or (= $generated@@392 ($generated@@357 $generated@@394 $generated@@393)) (exists (($generated@@395 T@U) ) (!  (and (= (type $generated@@395) $generated@@394) ($generated@@0 ($generated@@87 ($generated@@356 $generated@@392) $generated@@395)))
 :no-pattern (type $generated@@395)
 :no-pattern ($generated $generated@@395)
 :no-pattern ($generated@@0 $generated@@395)
))))))
 :pattern ( ($generated@@356 $generated@@392))
)))
(assert (forall (($generated@@397 T@U) ) (! (let (($generated@@398 ($generated@@360 (type $generated@@397))))
(= (type ($generated@@396 $generated@@397)) ($generated@@82 $generated@@398 $generated@@4)))
 :pattern ( ($generated@@396 $generated@@397))
)))
(assert (forall (($generated@@399 T@U) ) (! (let (($generated@@400 ($generated@@360 (type $generated@@399))))
(let (($generated@@401 ($generated@@359 (type $generated@@399))))
 (=> (= (type $generated@@399) ($generated@@358 $generated@@401 $generated@@400)) (or (= $generated@@399 ($generated@@357 $generated@@401 $generated@@400)) (exists (($generated@@402 T@U) ) (!  (and (= (type $generated@@402) $generated@@400) ($generated@@0 ($generated@@87 ($generated@@396 $generated@@399) $generated@@402)))
 :no-pattern (type $generated@@402)
 :no-pattern ($generated $generated@@402)
 :no-pattern ($generated@@0 $generated@@402)
))))))
 :pattern ( ($generated@@396 $generated@@399))
)))
(assert (forall (($generated@@403 T@U) ($generated@@404 T@U) ) (!  (=> (and (= (type $generated@@403) ($generated@@82 $generated@@197 $generated@@2)) (= (type $generated@@404) $generated@@70)) (= ($generated@@142 $generated@@403 ($generated@@202 $generated@@404)) (forall (($generated@@405 T@U) ) (!  (=> (and (= (type $generated@@405) $generated@@197) (< 0 ($generated ($generated@@87 $generated@@403 $generated@@405)))) ($generated@@264 $generated@@405 $generated@@404))
 :pattern ( ($generated@@87 $generated@@403 $generated@@405))
))))
 :pattern ( ($generated@@142 $generated@@403 ($generated@@202 $generated@@404)))
)))
(assert (forall (($generated@@406 T@U) ($generated@@407 T@U) ($generated@@408 T@U) ) (!  (=> (and (and (= (type $generated@@406) ($generated@@82 $generated@@197 $generated@@4)) (= (type $generated@@407) $generated@@70)) (= (type $generated@@408) ($generated@@82 $generated@@83 $generated@@84))) (= ($generated@@80 $generated@@406 ($generated@@273 $generated@@407) $generated@@408) (forall (($generated@@409 T@U) ) (!  (=> (and (= (type $generated@@409) $generated@@197) ($generated@@0 ($generated@@87 $generated@@406 $generated@@409))) ($generated@@289 $generated@@409 $generated@@407 $generated@@408))
 :pattern ( ($generated@@87 $generated@@406 $generated@@409))
))))
 :pattern ( ($generated@@80 $generated@@406 ($generated@@273 $generated@@407) $generated@@408))
)))
(assert (forall (($generated@@410 T@U) ($generated@@411 T@U) ($generated@@412 T@U) ) (!  (=> (and (and (= (type $generated@@410) ($generated@@82 $generated@@197 $generated@@4)) (= (type $generated@@411) $generated@@70)) (= (type $generated@@412) ($generated@@82 $generated@@83 $generated@@84))) (= ($generated@@80 $generated@@410 ($generated@@278 $generated@@411) $generated@@412) (forall (($generated@@413 T@U) ) (!  (=> (and (= (type $generated@@413) $generated@@197) ($generated@@0 ($generated@@87 $generated@@410 $generated@@413))) ($generated@@289 $generated@@413 $generated@@411 $generated@@412))
 :pattern ( ($generated@@87 $generated@@410 $generated@@413))
))))
 :pattern ( ($generated@@80 $generated@@410 ($generated@@278 $generated@@411) $generated@@412))
)))
(assert (forall (($generated@@414 T@U) ) (! (let (($generated@@415 (type $generated@@414)))
(= ($generated ($generated@@87 ($generated@@327 $generated@@415) $generated@@414)) 0))
 :pattern ( (let (($generated@@415 (type $generated@@414)))
($generated@@87 ($generated@@327 $generated@@415) $generated@@414)))
)))
(assert  (and (and (forall (($generated@@419 T@U) ) (! (= (type ($generated@@416 $generated@@419)) ($generated@@82 $generated@@197 $generated@@4))
 :pattern ( ($generated@@416 $generated@@419))
)) (forall (($generated@@420 T@T) ($generated@@421 T@U) ) (! (= (type ($generated@@417 $generated@@420 $generated@@421)) $generated@@420)
 :pattern ( ($generated@@417 $generated@@420 $generated@@421))
))) (forall (($generated@@422 T@U) ) (! (let (($generated@@423 ($generated@@342 (type $generated@@422))))
(let (($generated@@424 ($generated@@341 (type $generated@@422))))
(= (type ($generated@@418 $generated@@422)) ($generated@@82 $generated@@424 $generated@@423))))
 :pattern ( ($generated@@418 $generated@@422))
))))
(assert (forall (($generated@@425 T@U) ($generated@@426 T@U) ) (!  (=> (and (= (type $generated@@425) ($generated@@340 $generated@@197 $generated@@197)) (= (type $generated@@426) $generated@@197)) (= ($generated@@0 ($generated@@87 ($generated@@416 $generated@@425) $generated@@426))  (and ($generated@@0 ($generated@@87 ($generated@@338 $generated@@425) ($generated@@195 ($generated@@417 $generated@@188 $generated@@426)))) (= ($generated@@87 ($generated@@418 $generated@@425) ($generated@@195 ($generated@@417 $generated@@188 $generated@@426))) ($generated@@196 ($generated@@417 $generated@@188 $generated@@426))))))
 :pattern ( ($generated@@87 ($generated@@416 $generated@@425) $generated@@426))
)))
(assert  (and (forall (($generated@@429 T@U) ) (! (= (type ($generated@@427 $generated@@429)) ($generated@@82 $generated@@197 $generated@@4))
 :pattern ( ($generated@@427 $generated@@429))
)) (forall (($generated@@430 T@U) ) (! (let (($generated@@431 ($generated@@360 (type $generated@@430))))
(let (($generated@@432 ($generated@@359 (type $generated@@430))))
(= (type ($generated@@428 $generated@@430)) ($generated@@82 $generated@@432 $generated@@431))))
 :pattern ( ($generated@@428 $generated@@430))
))))
(assert (forall (($generated@@433 T@U) ($generated@@434 T@U) ) (!  (=> (and (= (type $generated@@433) ($generated@@358 $generated@@197 $generated@@197)) (= (type $generated@@434) $generated@@197)) (= ($generated@@0 ($generated@@87 ($generated@@427 $generated@@433) $generated@@434))  (and ($generated@@0 ($generated@@87 ($generated@@356 $generated@@433) ($generated@@195 ($generated@@417 $generated@@188 $generated@@434)))) (= ($generated@@87 ($generated@@428 $generated@@433) ($generated@@195 ($generated@@417 $generated@@188 $generated@@434))) ($generated@@196 ($generated@@417 $generated@@188 $generated@@434))))))
 :pattern ( ($generated@@87 ($generated@@427 $generated@@433) $generated@@434))
)))
(assert (forall (($generated@@435 T@U) ($generated@@436 T@U) ) (! (let (($generated@@437 (type $generated@@436)))
(let (($generated@@438 ($generated@@341 (type $generated@@435))))
 (=> (= (type $generated@@435) ($generated@@340 $generated@@438 $generated@@437)) (= ($generated@@0 ($generated@@87 ($generated@@385 $generated@@435) $generated@@436)) (exists (($generated@@439 T@U) ) (!  (and (= (type $generated@@439) $generated@@438) (and ($generated@@0 ($generated@@87 ($generated@@338 $generated@@435) $generated@@439)) (= $generated@@436 ($generated@@87 ($generated@@418 $generated@@435) $generated@@439))))
 :pattern ( ($generated@@87 ($generated@@338 $generated@@435) $generated@@439))
 :pattern ( ($generated@@87 ($generated@@418 $generated@@435) $generated@@439))
))))))
 :pattern ( ($generated@@87 ($generated@@385 $generated@@435) $generated@@436))
)))
(assert (forall (($generated@@440 T@U) ($generated@@441 T@U) ) (! (let (($generated@@442 (type $generated@@441)))
(let (($generated@@443 ($generated@@359 (type $generated@@440))))
 (=> (= (type $generated@@440) ($generated@@358 $generated@@443 $generated@@442)) (= ($generated@@0 ($generated@@87 ($generated@@396 $generated@@440) $generated@@441)) (exists (($generated@@444 T@U) ) (!  (and (= (type $generated@@444) $generated@@443) (and ($generated@@0 ($generated@@87 ($generated@@356 $generated@@440) $generated@@444)) (= $generated@@441 ($generated@@87 ($generated@@428 $generated@@440) $generated@@444))))
 :pattern ( ($generated@@87 ($generated@@356 $generated@@440) $generated@@444))
 :pattern ( ($generated@@87 ($generated@@428 $generated@@440) $generated@@444))
))))))
 :pattern ( ($generated@@87 ($generated@@396 $generated@@440) $generated@@441))
)))
(assert (forall (($generated@@446 T@U) ($generated@@447 T@U) ) (! (= (type ($generated@@445 $generated@@446 $generated@@447)) $generated@@70)
 :pattern ( ($generated@@445 $generated@@446 $generated@@447))
)))
(assert (forall (($generated@@448 T@U) ($generated@@449 T@U) ($generated@@450 T@U) ($generated@@451 T@U) ) (!  (=> (and (and (and (= (type $generated@@448) ($generated@@340 $generated@@197 $generated@@197)) (= (type $generated@@449) $generated@@70)) (= (type $generated@@450) $generated@@70)) (= (type $generated@@451) ($generated@@82 $generated@@83 $generated@@84))) (= ($generated@@80 $generated@@448 ($generated@@445 $generated@@449 $generated@@450) $generated@@451) (forall (($generated@@452 T@U) ) (!  (=> (and (= (type $generated@@452) $generated@@197) ($generated@@0 ($generated@@87 ($generated@@338 $generated@@448) $generated@@452))) (and ($generated@@289 ($generated@@87 ($generated@@418 $generated@@448) $generated@@452) $generated@@450 $generated@@451) ($generated@@289 $generated@@452 $generated@@449 $generated@@451)))
 :pattern ( ($generated@@87 ($generated@@418 $generated@@448) $generated@@452))
 :pattern ( ($generated@@87 ($generated@@338 $generated@@448) $generated@@452))
))))
 :pattern ( ($generated@@80 $generated@@448 ($generated@@445 $generated@@449 $generated@@450) $generated@@451))
)))
(assert (forall (($generated@@454 T@U) ($generated@@455 T@U) ) (! (= (type ($generated@@453 $generated@@454 $generated@@455)) $generated@@70)
 :pattern ( ($generated@@453 $generated@@454 $generated@@455))
)))
(assert (forall (($generated@@456 T@U) ($generated@@457 T@U) ($generated@@458 T@U) ($generated@@459 T@U) ) (!  (=> (and (and (and (= (type $generated@@456) ($generated@@358 $generated@@197 $generated@@197)) (= (type $generated@@457) $generated@@70)) (= (type $generated@@458) $generated@@70)) (= (type $generated@@459) ($generated@@82 $generated@@83 $generated@@84))) (= ($generated@@80 $generated@@456 ($generated@@453 $generated@@457 $generated@@458) $generated@@459) (forall (($generated@@460 T@U) ) (!  (=> (and (= (type $generated@@460) $generated@@197) ($generated@@0 ($generated@@87 ($generated@@356 $generated@@456) $generated@@460))) (and ($generated@@289 ($generated@@87 ($generated@@428 $generated@@456) $generated@@460) $generated@@458 $generated@@459) ($generated@@289 $generated@@460 $generated@@457 $generated@@459)))
 :pattern ( ($generated@@87 ($generated@@428 $generated@@456) $generated@@460))
 :pattern ( ($generated@@87 ($generated@@356 $generated@@456) $generated@@460))
))))
 :pattern ( ($generated@@80 $generated@@456 ($generated@@453 $generated@@457 $generated@@458) $generated@@459))
)))
(assert (forall (($generated@@461 T@U) ($generated@@462 T@U) ($generated@@463 T@U) ) (!  (=> (and (and (and (and (= (type $generated@@461) ($generated@@82 $generated@@83 $generated@@84)) (= (type $generated@@462) ($generated@@82 $generated@@83 $generated@@84))) (= (type $generated@@463) ($generated@@82 $generated@@83 $generated@@84))) (not (= $generated@@461 $generated@@463))) (and ($generated@@155 $generated@@461 $generated@@462) ($generated@@155 $generated@@462 $generated@@463))) ($generated@@155 $generated@@461 $generated@@463))
 :pattern ( ($generated@@155 $generated@@461 $generated@@462) ($generated@@155 $generated@@462 $generated@@463))
)))
(assert (forall (($generated@@465 T@T) ) (! (= (type ($generated@@464 $generated@@465)) ($generated@@82 $generated@@465 $generated@@4))
 :pattern ( ($generated@@464 $generated@@465))
)))
(assert (forall (($generated@@466 T@U) ) (! (let (($generated@@467 ($generated@@360 (type $generated@@466))))
(let (($generated@@468 ($generated@@359 (type $generated@@466))))
 (=> (= (type $generated@@466) ($generated@@358 $generated@@468 $generated@@467)) (= (= $generated@@466 ($generated@@357 $generated@@468 $generated@@467)) (= ($generated@@356 $generated@@466) ($generated@@464 $generated@@468))))))
 :pattern ( ($generated@@356 $generated@@466))
)))
(assert (forall (($generated@@469 T@U) ) (! (let (($generated@@470 ($generated@@360 (type $generated@@469))))
(let (($generated@@471 ($generated@@359 (type $generated@@469))))
 (=> (= (type $generated@@469) ($generated@@358 $generated@@471 $generated@@470)) (= (= $generated@@469 ($generated@@357 $generated@@471 $generated@@470)) (= ($generated@@396 $generated@@469) ($generated@@464 $generated@@470))))))
 :pattern ( ($generated@@396 $generated@@469))
)))
(assert (forall (($generated@@472 T@U) ) (! (let (($generated@@473 ($generated@@360 (type $generated@@472))))
(let (($generated@@474 ($generated@@359 (type $generated@@472))))
 (=> (= (type $generated@@472) ($generated@@358 $generated@@474 $generated@@473)) (= (= $generated@@472 ($generated@@357 $generated@@474 $generated@@473)) (= ($generated@@427 $generated@@472) ($generated@@464 $generated@@197))))))
 :pattern ( ($generated@@427 $generated@@472))
)))
(assert (forall (($generated@@475 T@U) ) (! (let (($generated@@476 ($generated@@342 (type $generated@@475))))
(let (($generated@@477 ($generated@@341 (type $generated@@475))))
 (=> (= (type $generated@@475) ($generated@@340 $generated@@477 $generated@@476)) (or (= $generated@@475 ($generated@@339 $generated@@477 $generated@@476)) (exists (($generated@@478 T@U) ($generated@@479 T@U) ) (!  (and (and (= (type $generated@@478) $generated@@197) (= (type $generated@@479) $generated@@197)) ($generated@@0 ($generated@@87 ($generated@@416 $generated@@475) ($generated@@313 ($generated@@263 $generated@@478 $generated@@479)))))
 :no-pattern (type $generated@@478)
 :no-pattern (type $generated@@479)
 :no-pattern ($generated $generated@@478)
 :no-pattern ($generated@@0 $generated@@478)
 :no-pattern ($generated $generated@@479)
 :no-pattern ($generated@@0 $generated@@479)
))))))
 :pattern ( ($generated@@416 $generated@@475))
)))
(assert (forall (($generated@@480 T@U) ) (! (let (($generated@@481 ($generated@@360 (type $generated@@480))))
(let (($generated@@482 ($generated@@359 (type $generated@@480))))
 (=> (= (type $generated@@480) ($generated@@358 $generated@@482 $generated@@481)) (or (= $generated@@480 ($generated@@357 $generated@@482 $generated@@481)) (exists (($generated@@483 T@U) ($generated@@484 T@U) ) (!  (and (and (= (type $generated@@483) $generated@@197) (= (type $generated@@484) $generated@@197)) ($generated@@0 ($generated@@87 ($generated@@427 $generated@@480) ($generated@@313 ($generated@@263 $generated@@483 $generated@@484)))))
 :no-pattern (type $generated@@483)
 :no-pattern (type $generated@@484)
 :no-pattern ($generated $generated@@483)
 :no-pattern ($generated@@0 $generated@@483)
 :no-pattern ($generated $generated@@484)
 :no-pattern ($generated@@0 $generated@@484)
))))))
 :pattern ( ($generated@@427 $generated@@480))
)))
(assert (forall (($generated@@485 T@U) ) (!  (=> (and (= (type $generated@@485) $generated@@197) ($generated@@264 $generated@@485 $generated@@46)) (and (= ($generated@@313 ($generated@@417 $generated@@2 $generated@@485)) $generated@@485) ($generated@@142 ($generated@@417 $generated@@2 $generated@@485) $generated@@46)))
 :pattern ( ($generated@@264 $generated@@485 $generated@@46))
)))
(assert (forall (($generated@@486 T@U) ) (!  (=> (and (= (type $generated@@486) $generated@@197) ($generated@@264 $generated@@486 $generated@@47)) (and (= ($generated@@313 ($generated@@417 $generated@@3 $generated@@486)) $generated@@486) ($generated@@142 ($generated@@417 $generated@@3 $generated@@486) $generated@@47)))
 :pattern ( ($generated@@264 $generated@@486 $generated@@47))
)))
(assert (forall (($generated@@487 T@U) ) (!  (=> (and (= (type $generated@@487) $generated@@197) ($generated@@264 $generated@@487 $generated@@44)) (and (= ($generated@@313 ($generated@@417 $generated@@4 $generated@@487)) $generated@@487) ($generated@@142 ($generated@@417 $generated@@4 $generated@@487) $generated@@44)))
 :pattern ( ($generated@@264 $generated@@487 $generated@@44))
)))
(assert (= ($generated@@1 $generated@@488) 20))
(assert (forall (($generated@@489 T@U) ) (!  (=> (and (= (type $generated@@489) $generated@@197) ($generated@@264 $generated@@489 $generated@@45)) (and (= ($generated@@313 ($generated@@417 $generated@@488 $generated@@489)) $generated@@489) ($generated@@142 ($generated@@417 $generated@@488 $generated@@489) $generated@@45)))
 :pattern ( ($generated@@264 $generated@@489 $generated@@45))
)))
(assert (forall (($generated@@490 T@U) ($generated@@491 T@U) ) (!  (=> (= (type $generated@@491) $generated@@70) (= ($generated@@264 ($generated@@313 $generated@@490) $generated@@491) ($generated@@142 $generated@@490 $generated@@491)))
 :pattern ( ($generated@@264 ($generated@@313 $generated@@490) $generated@@491))
)))
(assert (forall (($generated@@492 T@U) ) (!  (=> (= (type $generated@@492) $generated@@83) (<= 0 ($generated@@138 $generated@@492)))
 :no-pattern (type $generated@@492)
 :no-pattern ($generated $generated@@492)
 :no-pattern ($generated@@0 $generated@@492)
)))
(assert (forall (($generated@@493 T@U) ) (!  (=> (= (type $generated@@493) $generated@@83) (<= 0 ($generated@@147 $generated@@493)))
 :pattern ( ($generated@@147 $generated@@493))
)))
(assert (forall (($generated@@494 T@U) ) (!  (=> (= (type $generated@@494) $generated@@83) (<= 0 ($generated@@152 $generated@@494)))
 :pattern ( ($generated@@152 $generated@@494))
)))
(assert (forall (($generated@@495 T@U) ) (! (let (($generated@@496 ($generated@@85 (type $generated@@495))))
 (=> (= (type $generated@@495) ($generated@@82 $generated@@496 $generated@@2)) (<= 0 ($generated@@326 $generated@@495))))
 :pattern ( ($generated@@326 $generated@@495))
)))
(assert (forall (($generated@@497 T@U) ) (! (let (($generated@@498 ($generated@@304 (type $generated@@497))))
 (=> (= (type $generated@@497) ($generated@@303 $generated@@498)) (<= 0 ($generated@@302 $generated@@497))))
 :pattern ( ($generated@@302 $generated@@497))
)))
(assert (forall (($generated@@500 T@U) ) (! (= (type ($generated@@499 $generated@@500)) $generated@@70)
 :pattern ( ($generated@@499 $generated@@500))
)))
(assert (forall (($generated@@501 T@U) ($generated@@502 T@U) ) (!  (=> (and (= (type $generated@@501) $generated@@70) (= (type $generated@@502) $generated@@70)) (= ($generated@@499 ($generated@@445 $generated@@501 $generated@@502)) $generated@@501))
 :pattern ( ($generated@@445 $generated@@501 $generated@@502))
)))
(assert (forall (($generated@@504 T@U) ) (! (= (type ($generated@@503 $generated@@504)) $generated@@70)
 :pattern ( ($generated@@503 $generated@@504))
)))
(assert (forall (($generated@@505 T@U) ($generated@@506 T@U) ) (!  (=> (and (= (type $generated@@505) $generated@@70) (= (type $generated@@506) $generated@@70)) (= ($generated@@503 ($generated@@445 $generated@@505 $generated@@506)) $generated@@506))
 :pattern ( ($generated@@445 $generated@@505 $generated@@506))
)))
(assert (forall (($generated@@507 T@U) ($generated@@508 T@U) ) (!  (=> (and (= (type $generated@@507) $generated@@70) (= (type $generated@@508) $generated@@70)) (= ($generated@@78 ($generated@@445 $generated@@507 $generated@@508)) $generated@@58))
 :pattern ( ($generated@@445 $generated@@507 $generated@@508))
)))
(assert (forall (($generated@@510 T@U) ) (! (= (type ($generated@@509 $generated@@510)) $generated@@70)
 :pattern ( ($generated@@509 $generated@@510))
)))
(assert (forall (($generated@@511 T@U) ($generated@@512 T@U) ) (!  (=> (and (= (type $generated@@511) $generated@@70) (= (type $generated@@512) $generated@@70)) (= ($generated@@509 ($generated@@453 $generated@@511 $generated@@512)) $generated@@511))
 :pattern ( ($generated@@453 $generated@@511 $generated@@512))
)))
(assert (forall (($generated@@514 T@U) ) (! (= (type ($generated@@513 $generated@@514)) $generated@@70)
 :pattern ( ($generated@@513 $generated@@514))
)))
(assert (forall (($generated@@515 T@U) ($generated@@516 T@U) ) (!  (=> (and (= (type $generated@@515) $generated@@70) (= (type $generated@@516) $generated@@70)) (= ($generated@@513 ($generated@@453 $generated@@515 $generated@@516)) $generated@@516))
 :pattern ( ($generated@@453 $generated@@515 $generated@@516))
)))
(assert (forall (($generated@@517 T@U) ($generated@@518 T@U) ) (!  (=> (and (= (type $generated@@517) $generated@@70) (= (type $generated@@518) $generated@@70)) (= ($generated@@78 ($generated@@453 $generated@@517 $generated@@518)) $generated@@59))
 :pattern ( ($generated@@453 $generated@@517 $generated@@518))
)))
(assert (forall (($generated@@519 T@U) ($generated@@520 T@U) ) (!  (=> (and (= (type $generated@@519) $generated@@197) (= (type $generated@@520) $generated@@197)) (= ($generated@@295 ($generated@@263 $generated@@519 $generated@@520)) $generated@@65))
 :pattern ( ($generated@@263 $generated@@519 $generated@@520))
)))
(assert (forall (($generated@@522 T@U) ) (! (= (type ($generated@@521 $generated@@522)) $generated@@70)
 :pattern ( ($generated@@521 $generated@@522))
)))
(assert (forall (($generated@@523 T@U) ($generated@@524 T@U) ) (!  (=> (and (= (type $generated@@523) $generated@@70) (= (type $generated@@524) $generated@@70)) (= ($generated@@521 ($generated@@187 $generated@@523 $generated@@524)) $generated@@523))
 :pattern ( ($generated@@187 $generated@@523 $generated@@524))
)))
(assert (forall (($generated@@526 T@U) ) (! (= (type ($generated@@525 $generated@@526)) $generated@@70)
 :pattern ( ($generated@@525 $generated@@526))
)))
(assert (forall (($generated@@527 T@U) ($generated@@528 T@U) ) (!  (=> (and (= (type $generated@@527) $generated@@70) (= (type $generated@@528) $generated@@70)) (= ($generated@@525 ($generated@@187 $generated@@527 $generated@@528)) $generated@@528))
 :pattern ( ($generated@@187 $generated@@527 $generated@@528))
)))
(assert (forall (($generated@@529 T@U) ($generated@@530 T@U) ) (!  (=> (and (= (type $generated@@529) $generated@@197) (= (type $generated@@530) $generated@@197)) (= ($generated@@195 ($generated@@263 $generated@@529 $generated@@530)) $generated@@529))
 :pattern ( ($generated@@263 $generated@@529 $generated@@530))
)))
(assert (forall (($generated@@531 T@U) ($generated@@532 T@U) ) (!  (=> (and (= (type $generated@@531) $generated@@197) (= (type $generated@@532) $generated@@197)) (= ($generated@@196 ($generated@@263 $generated@@531 $generated@@532)) $generated@@532))
 :pattern ( ($generated@@263 $generated@@531 $generated@@532))
)))
(assert  (and (forall (($generated@@535 T@U) ) (! (= (type ($generated@@533 $generated@@535)) $generated@@70)
 :pattern ( ($generated@@533 $generated@@535))
)) (forall (($generated@@536 T@U) ($generated@@537 Int) ) (! (let (($generated@@538 ($generated@@304 (type $generated@@536))))
(= (type ($generated@@534 $generated@@536 $generated@@537)) $generated@@538))
 :pattern ( ($generated@@534 $generated@@536 $generated@@537))
))))
(assert (forall (($generated@@539 T@U) ($generated@@540 T@U) ($generated@@541 T@U) ) (!  (=> (and (and (= (type $generated@@539) ($generated@@303 $generated@@197)) (= (type $generated@@540) $generated@@70)) (= (type $generated@@541) ($generated@@82 $generated@@83 $generated@@84))) (= ($generated@@80 $generated@@539 ($generated@@533 $generated@@540) $generated@@541) (forall (($generated@@542 Int) ) (!  (=> (and (<= 0 $generated@@542) (< $generated@@542 ($generated@@302 $generated@@539))) ($generated@@289 ($generated@@534 $generated@@539 $generated@@542) $generated@@540 $generated@@541))
 :pattern ( ($generated@@534 $generated@@539 $generated@@542))
))))
 :pattern ( ($generated@@80 $generated@@539 ($generated@@533 $generated@@540) $generated@@541))
)))
(assert (forall (($generated@@544 Int) ) (! (= ($generated@@543 ($generated@@81 $generated@@544)) $generated@@544)
 :pattern ( ($generated@@81 $generated@@544))
)))
(assert (forall (($generated@@546 T@U) ) (! (= (type ($generated@@545 $generated@@546)) $generated@@70)
 :pattern ( ($generated@@545 $generated@@546))
)))
(assert (forall (($generated@@547 T@U) ) (!  (=> (= (type $generated@@547) $generated@@70) (= ($generated@@545 ($generated@@273 $generated@@547)) $generated@@547))
 :pattern ( ($generated@@273 $generated@@547))
)))
(assert (forall (($generated@@548 T@U) ) (!  (=> (= (type $generated@@548) $generated@@70) (= ($generated@@78 ($generated@@273 $generated@@548)) $generated@@54))
 :pattern ( ($generated@@273 $generated@@548))
)))
(assert (forall (($generated@@550 T@U) ) (! (= (type ($generated@@549 $generated@@550)) $generated@@70)
 :pattern ( ($generated@@549 $generated@@550))
)))
(assert (forall (($generated@@551 T@U) ) (!  (=> (= (type $generated@@551) $generated@@70) (= ($generated@@549 ($generated@@278 $generated@@551)) $generated@@551))
 :pattern ( ($generated@@278 $generated@@551))
)))
(assert (forall (($generated@@552 T@U) ) (!  (=> (= (type $generated@@552) $generated@@70) (= ($generated@@78 ($generated@@278 $generated@@552)) $generated@@55))
 :pattern ( ($generated@@278 $generated@@552))
)))
(assert (forall (($generated@@554 T@U) ) (! (= (type ($generated@@553 $generated@@554)) $generated@@70)
 :pattern ( ($generated@@553 $generated@@554))
)))
(assert (forall (($generated@@555 T@U) ) (!  (=> (= (type $generated@@555) $generated@@70) (= ($generated@@553 ($generated@@202 $generated@@555)) $generated@@555))
 :pattern ( ($generated@@202 $generated@@555))
)))
(assert (forall (($generated@@556 T@U) ) (!  (=> (= (type $generated@@556) $generated@@70) (= ($generated@@78 ($generated@@202 $generated@@556)) $generated@@56))
 :pattern ( ($generated@@202 $generated@@556))
)))
(assert (forall (($generated@@558 T@U) ) (! (= (type ($generated@@557 $generated@@558)) $generated@@70)
 :pattern ( ($generated@@557 $generated@@558))
)))
(assert (forall (($generated@@559 T@U) ) (!  (=> (= (type $generated@@559) $generated@@70) (= ($generated@@557 ($generated@@533 $generated@@559)) $generated@@559))
 :pattern ( ($generated@@533 $generated@@559))
)))
(assert (forall (($generated@@560 T@U) ) (!  (=> (= (type $generated@@560) $generated@@70) (= ($generated@@78 ($generated@@533 $generated@@560)) $generated@@57))
 :pattern ( ($generated@@533 $generated@@560))
)))
(assert (forall (($generated@@562 T@U) ) (! (= (type ($generated@@561 $generated@@562)) $generated@@70)
 :pattern ( ($generated@@561 $generated@@562))
)))
(assert (forall (($generated@@563 T@U) ) (!  (=> (= (type $generated@@563) $generated@@70) (= ($generated@@561 ($generated@@139 $generated@@563)) $generated@@563))
 :pattern ( ($generated@@139 $generated@@563))
)))
(assert (forall (($generated@@565 T@U) ) (! (= (type ($generated@@564 $generated@@565)) $generated@@70)
 :pattern ( ($generated@@564 $generated@@565))
)))
(assert (forall (($generated@@566 T@U) ) (!  (=> (= (type $generated@@566) $generated@@70) (= ($generated@@564 ($generated@@176 $generated@@566)) $generated@@566))
 :pattern ( ($generated@@176 $generated@@566))
)))
(assert (forall (($generated@@568 T@U) ) (! (= (type ($generated@@567 $generated@@568)) $generated@@70)
 :pattern ( ($generated@@567 $generated@@568))
)))
(assert (forall (($generated@@569 T@U) ) (!  (=> (= (type $generated@@569) $generated@@70) (= ($generated@@567 ($generated@@148 $generated@@569)) $generated@@569))
 :pattern ( ($generated@@148 $generated@@569))
)))
(assert (forall (($generated@@571 T@U) ) (! (= (type ($generated@@570 $generated@@571)) $generated@@70)
 :pattern ( ($generated@@570 $generated@@571))
)))
(assert (forall (($generated@@572 T@U) ) (!  (=> (= (type $generated@@572) $generated@@70) (= ($generated@@570 ($generated@@181 $generated@@572)) $generated@@572))
 :pattern ( ($generated@@181 $generated@@572))
)))
(assert (forall (($generated@@573 T@U) ) (! (let (($generated@@574 (type $generated@@573)))
(= ($generated@@417 $generated@@574 ($generated@@313 $generated@@573)) $generated@@573))
 :pattern ( ($generated@@313 $generated@@573))
)))
(assert (forall (($generated@@575 T@U) ($generated@@576 T@U) ($generated@@577 T@U) ) (!  (=> (and (and (= (type $generated@@575) ($generated@@340 $generated@@197 $generated@@197)) (= (type $generated@@576) $generated@@70)) (= (type $generated@@577) $generated@@70)) (= ($generated@@142 $generated@@575 ($generated@@445 $generated@@576 $generated@@577)) (forall (($generated@@578 T@U) ) (!  (=> (and (= (type $generated@@578) $generated@@197) ($generated@@0 ($generated@@87 ($generated@@338 $generated@@575) $generated@@578))) (and ($generated@@264 ($generated@@87 ($generated@@418 $generated@@575) $generated@@578) $generated@@577) ($generated@@264 $generated@@578 $generated@@576)))
 :pattern ( ($generated@@87 ($generated@@418 $generated@@575) $generated@@578))
 :pattern ( ($generated@@87 ($generated@@338 $generated@@575) $generated@@578))
))))
 :pattern ( ($generated@@142 $generated@@575 ($generated@@445 $generated@@576 $generated@@577)))
)))
(assert (forall (($generated@@579 T@U) ($generated@@580 T@U) ($generated@@581 T@U) ) (!  (=> (and (and (= (type $generated@@579) ($generated@@358 $generated@@197 $generated@@197)) (= (type $generated@@580) $generated@@70)) (= (type $generated@@581) $generated@@70)) (= ($generated@@142 $generated@@579 ($generated@@453 $generated@@580 $generated@@581)) (forall (($generated@@582 T@U) ) (!  (=> (and (= (type $generated@@582) $generated@@197) ($generated@@0 ($generated@@87 ($generated@@356 $generated@@579) $generated@@582))) (and ($generated@@264 ($generated@@87 ($generated@@428 $generated@@579) $generated@@582) $generated@@581) ($generated@@264 $generated@@582 $generated@@580)))
 :pattern ( ($generated@@87 ($generated@@428 $generated@@579) $generated@@582))
 :pattern ( ($generated@@87 ($generated@@356 $generated@@579) $generated@@582))
))))
 :pattern ( ($generated@@142 $generated@@579 ($generated@@453 $generated@@580 $generated@@581)))
)))
(assert (forall (($generated@@585 T@U) ($generated@@586 T@U) ) (!  (=> (and (= (type $generated@@585) $generated@@197) (= (type $generated@@586) $generated@@197)) (< ($generated@@583 $generated@@585) ($generated@@584 ($generated@@263 $generated@@585 $generated@@586))))
 :pattern ( ($generated@@263 $generated@@585 $generated@@586))
)))
(assert (forall (($generated@@587 T@U) ($generated@@588 T@U) ) (!  (=> (and (= (type $generated@@587) $generated@@197) (= (type $generated@@588) $generated@@197)) (< ($generated@@583 $generated@@588) ($generated@@584 ($generated@@263 $generated@@587 $generated@@588))))
 :pattern ( ($generated@@263 $generated@@587 $generated@@588))
)))
(assert (forall (($generated@@589 T@U) ($generated@@590 T@U) ($generated@@591 T@U) ) (!  (=> (and (and (and (= (type $generated@@589) $generated@@197) (= (type $generated@@590) $generated@@70)) (= (type $generated@@591) $generated@@70)) ($generated@@264 $generated@@589 ($generated@@445 $generated@@590 $generated@@591))) (and (= ($generated@@313 ($generated@@417 ($generated@@340 $generated@@197 $generated@@197) $generated@@589)) $generated@@589) ($generated@@142 ($generated@@417 ($generated@@340 $generated@@197 $generated@@197) $generated@@589) ($generated@@445 $generated@@590 $generated@@591))))
 :pattern ( ($generated@@264 $generated@@589 ($generated@@445 $generated@@590 $generated@@591)))
)))
(assert (forall (($generated@@592 T@U) ($generated@@593 T@U) ($generated@@594 T@U) ) (!  (=> (and (and (and (= (type $generated@@592) $generated@@197) (= (type $generated@@593) $generated@@70)) (= (type $generated@@594) $generated@@70)) ($generated@@264 $generated@@592 ($generated@@453 $generated@@593 $generated@@594))) (and (= ($generated@@313 ($generated@@417 ($generated@@358 $generated@@197 $generated@@197) $generated@@592)) $generated@@592) ($generated@@142 ($generated@@417 ($generated@@358 $generated@@197 $generated@@197) $generated@@592) ($generated@@453 $generated@@593 $generated@@594))))
 :pattern ( ($generated@@264 $generated@@592 ($generated@@453 $generated@@593 $generated@@594)))
)))
(assert (forall (($generated@@595 T@U) ($generated@@596 T@U) ($generated@@597 T@U) ) (!  (=> (and (and (and (= (type $generated@@595) $generated@@70) (= (type $generated@@596) $generated@@70)) (= (type $generated@@597) $generated@@197)) ($generated@@264 $generated@@597 ($generated@@187 $generated@@595 $generated@@596))) (and (= ($generated@@313 ($generated@@417 $generated@@188 $generated@@597)) $generated@@597) ($generated@@142 ($generated@@417 $generated@@188 $generated@@597) ($generated@@187 $generated@@595 $generated@@596))))
 :pattern ( ($generated@@264 $generated@@597 ($generated@@187 $generated@@595 $generated@@596)))
)))
(assert (forall (($generated@@598 T@U) ) (! (let (($generated@@599 (type $generated@@598)))
 (not ($generated@@0 ($generated@@87 ($generated@@464 $generated@@599) $generated@@598))))
 :pattern ( (let (($generated@@599 (type $generated@@598)))
($generated@@87 ($generated@@464 $generated@@599) $generated@@598)))
)))
(assert (forall (($generated@@600 T@U) ($generated@@601 T@U) ) (!  (=> (and (= (type $generated@@600) $generated@@70) (= (type $generated@@601) $generated@@70)) (and (= ($generated@@78 ($generated@@187 $generated@@600 $generated@@601)) $generated@@66) (= ($generated@@332 ($generated@@187 $generated@@600 $generated@@601)) $generated@@69)))
 :pattern ( ($generated@@187 $generated@@600 $generated@@601))
)))
(assert (forall (($generated@@602 T@U) ) (!  (=> (= (type $generated@@602) $generated@@188) (= ($generated@@583 ($generated@@313 $generated@@602)) ($generated@@584 $generated@@602)))
 :pattern ( ($generated@@583 ($generated@@313 $generated@@602)))
)))
(assert (forall (($generated@@603 T@U) ) (!  (=> (and (= (type $generated@@603) $generated@@197) ($generated@@264 $generated@@603 ($generated@@81 0))) (and (= ($generated@@313 ($generated@@417 $generated@@2 $generated@@603)) $generated@@603) ($generated@@142 ($generated@@417 ($generated@@82 $generated@@197 $generated@@4) $generated@@603) ($generated@@81 0))))
 :pattern ( ($generated@@264 $generated@@603 ($generated@@81 0)))
)))
(assert (forall (($generated@@604 T@U) ($generated@@605 T@U) ) (!  (=> (and (and (= (type $generated@@604) $generated@@197) (= (type $generated@@605) $generated@@70)) ($generated@@264 $generated@@604 ($generated@@273 $generated@@605))) (and (= ($generated@@313 ($generated@@417 ($generated@@82 $generated@@197 $generated@@4) $generated@@604)) $generated@@604) ($generated@@142 ($generated@@417 ($generated@@82 $generated@@197 $generated@@4) $generated@@604) ($generated@@273 $generated@@605))))
 :pattern ( ($generated@@264 $generated@@604 ($generated@@273 $generated@@605)))
)))
(assert (forall (($generated@@606 T@U) ($generated@@607 T@U) ) (!  (=> (and (and (= (type $generated@@606) $generated@@197) (= (type $generated@@607) $generated@@70)) ($generated@@264 $generated@@606 ($generated@@278 $generated@@607))) (and (= ($generated@@313 ($generated@@417 ($generated@@82 $generated@@197 $generated@@4) $generated@@606)) $generated@@606) ($generated@@142 ($generated@@417 ($generated@@82 $generated@@197 $generated@@4) $generated@@606) ($generated@@278 $generated@@607))))
 :pattern ( ($generated@@264 $generated@@606 ($generated@@278 $generated@@607)))
)))
(assert (forall (($generated@@608 T@U) ($generated@@609 T@U) ) (!  (=> (and (and (= (type $generated@@608) $generated@@197) (= (type $generated@@609) $generated@@70)) ($generated@@264 $generated@@608 ($generated@@202 $generated@@609))) (and (= ($generated@@313 ($generated@@417 ($generated@@82 $generated@@197 $generated@@2) $generated@@608)) $generated@@608) ($generated@@142 ($generated@@417 ($generated@@82 $generated@@197 $generated@@2) $generated@@608) ($generated@@202 $generated@@609))))
 :pattern ( ($generated@@264 $generated@@608 ($generated@@202 $generated@@609)))
)))
(assert (forall (($generated@@610 T@U) ($generated@@611 T@U) ) (!  (=> (and (and (= (type $generated@@610) $generated@@197) (= (type $generated@@611) $generated@@70)) ($generated@@264 $generated@@610 ($generated@@533 $generated@@611))) (and (= ($generated@@313 ($generated@@417 ($generated@@303 $generated@@197) $generated@@610)) $generated@@610) ($generated@@142 ($generated@@417 ($generated@@303 $generated@@197) $generated@@610) ($generated@@533 $generated@@611))))
 :pattern ( ($generated@@264 $generated@@610 ($generated@@533 $generated@@611)))
)))
(assert (forall (($generated@@612 T@U) ($generated@@613 T@U) ) (!  (=> (and (and (= (type $generated@@612) $generated@@70) (= (type $generated@@613) $generated@@197)) ($generated@@264 $generated@@613 ($generated@@139 $generated@@612))) (and (= ($generated@@313 ($generated@@417 $generated@@83 $generated@@613)) $generated@@613) ($generated@@142 ($generated@@417 $generated@@83 $generated@@613) ($generated@@139 $generated@@612))))
 :pattern ( ($generated@@264 $generated@@613 ($generated@@139 $generated@@612)))
)))
(assert (forall (($generated@@614 T@U) ($generated@@615 T@U) ) (!  (=> (and (and (= (type $generated@@614) $generated@@70) (= (type $generated@@615) $generated@@197)) ($generated@@264 $generated@@615 ($generated@@176 $generated@@614))) (and (= ($generated@@313 ($generated@@417 $generated@@83 $generated@@615)) $generated@@615) ($generated@@142 ($generated@@417 $generated@@83 $generated@@615) ($generated@@176 $generated@@614))))
 :pattern ( ($generated@@264 $generated@@615 ($generated@@176 $generated@@614)))
)))
(assert (forall (($generated@@616 T@U) ($generated@@617 T@U) ) (!  (=> (and (and (= (type $generated@@616) $generated@@70) (= (type $generated@@617) $generated@@197)) ($generated@@264 $generated@@617 ($generated@@148 $generated@@616))) (and (= ($generated@@313 ($generated@@417 $generated@@83 $generated@@617)) $generated@@617) ($generated@@142 ($generated@@417 $generated@@83 $generated@@617) ($generated@@148 $generated@@616))))
 :pattern ( ($generated@@264 $generated@@617 ($generated@@148 $generated@@616)))
)))
(assert (forall (($generated@@618 T@U) ($generated@@619 T@U) ) (!  (=> (and (and (= (type $generated@@618) $generated@@70) (= (type $generated@@619) $generated@@197)) ($generated@@264 $generated@@619 ($generated@@181 $generated@@618))) (and (= ($generated@@313 ($generated@@417 $generated@@83 $generated@@619)) $generated@@619) ($generated@@142 ($generated@@417 $generated@@83 $generated@@619) ($generated@@181 $generated@@618))))
 :pattern ( ($generated@@264 $generated@@619 ($generated@@181 $generated@@618)))
)))
(assert (forall (($generated@@620 T@U) ($generated@@621 T@U) ($generated@@622 T@U) ($generated@@623 T@U) ) (! (let (($generated@@624 (type $generated@@623)))
 (=> (and (and (and (= (type $generated@@620) ($generated@@82 $generated@@83 $generated@@84)) (= (type $generated@@621) $generated@@83)) (= (type $generated@@622) ($generated@@72 $generated@@624))) ($generated@@165 ($generated@@88 $generated@@620 $generated@@621 ($generated@@90 ($generated@@87 $generated@@620 $generated@@621) $generated@@622 $generated@@623)))) ($generated@@155 $generated@@620 ($generated@@88 $generated@@620 $generated@@621 ($generated@@90 ($generated@@87 $generated@@620 $generated@@621) $generated@@622 $generated@@623)))))
 :pattern ( ($generated@@88 $generated@@620 $generated@@621 ($generated@@90 ($generated@@87 $generated@@620 $generated@@621) $generated@@622 $generated@@623)))
)))
(assert (forall (($generated@@625 T@U) ($generated@@626 T@U) ($generated@@627 T@U) ) (!  (=> (and (and (= (type $generated@@625) ($generated@@82 $generated@@197 $generated@@2)) (= (type $generated@@626) $generated@@70)) (= (type $generated@@627) ($generated@@82 $generated@@83 $generated@@84))) (= ($generated@@80 $generated@@625 ($generated@@202 $generated@@626) $generated@@627) (forall (($generated@@628 T@U) ) (!  (=> (and (= (type $generated@@628) $generated@@197) (< 0 ($generated ($generated@@87 $generated@@625 $generated@@628)))) ($generated@@289 $generated@@628 $generated@@626 $generated@@627))
 :pattern ( ($generated@@87 $generated@@625 $generated@@628))
))))
 :pattern ( ($generated@@80 $generated@@625 ($generated@@202 $generated@@626) $generated@@627))
)))
(assert (forall (($generated@@629 T@U) ($generated@@630 T@U) ($generated@@631 T@U) ) (!  (=> (and (and (and (= (type $generated@@629) $generated@@188) (= (type $generated@@630) $generated@@70)) (= (type $generated@@631) ($generated@@82 $generated@@83 $generated@@84))) (and ($generated@@165 $generated@@631) (and ($generated@@186 $generated@@629) (exists (($generated@@632 T@U) ) (!  (and (= (type $generated@@632) $generated@@70) ($generated@@80 $generated@@629 ($generated@@187 $generated@@630 $generated@@632) $generated@@631))
 :pattern ( ($generated@@80 $generated@@629 ($generated@@187 $generated@@630 $generated@@632) $generated@@631))
))))) ($generated@@289 ($generated@@195 $generated@@629) $generated@@630 $generated@@631))
 :pattern ( ($generated@@289 ($generated@@195 $generated@@629) $generated@@630 $generated@@631))
)))
(assert (forall (($generated@@633 T@U) ($generated@@634 T@U) ($generated@@635 T@U) ) (!  (=> (and (and (and (= (type $generated@@633) $generated@@188) (= (type $generated@@634) $generated@@70)) (= (type $generated@@635) ($generated@@82 $generated@@83 $generated@@84))) (and ($generated@@165 $generated@@635) (and ($generated@@186 $generated@@633) (exists (($generated@@636 T@U) ) (!  (and (= (type $generated@@636) $generated@@70) ($generated@@80 $generated@@633 ($generated@@187 $generated@@636 $generated@@634) $generated@@635))
 :pattern ( ($generated@@80 $generated@@633 ($generated@@187 $generated@@636 $generated@@634) $generated@@635))
))))) ($generated@@289 ($generated@@196 $generated@@633) $generated@@634 $generated@@635))
 :pattern ( ($generated@@289 ($generated@@196 $generated@@633) $generated@@634 $generated@@635))
)))
(assert (forall (($generated@@637 T@U) ($generated@@638 T@U) ) (!  (=> (and (= (type $generated@@637) $generated@@197) (= (type $generated@@638) $generated@@197)) (= ($generated@@263 ($generated@@285 $generated@@637) ($generated@@285 $generated@@638)) ($generated@@285 ($generated@@263 $generated@@637 $generated@@638))))
 :pattern ( ($generated@@263 ($generated@@285 $generated@@637) ($generated@@285 $generated@@638)))
)))
(assert (forall (($generated@@639 Int) ) (! (= ($generated@@313 ($generated@@8 ($generated@@283 $generated@@639))) ($generated@@285 ($generated@@313 ($generated@@8 $generated@@639))))
 :pattern ( ($generated@@313 ($generated@@8 ($generated@@283 $generated@@639))))
)))
(assert (forall (($generated@@640 T@U) ) (! (= ($generated@@313 ($generated@@285 $generated@@640)) ($generated@@285 ($generated@@313 $generated@@640)))
 :pattern ( ($generated@@313 ($generated@@285 $generated@@640)))
)))
(assert (forall (($generated@@641 T@U) ) (! (let (($generated@@642 ($generated@@304 (type $generated@@641))))
 (=> (and (= (type $generated@@641) ($generated@@303 $generated@@642)) (= ($generated@@302 $generated@@641) 0)) (= $generated@@641 ($generated@@301 $generated@@642))))
 :pattern ( ($generated@@302 $generated@@641))
)))
(assert (forall (($generated@@643 T@U) ($generated@@644 T@U) ($generated@@645 T@U) ) (! (let (($generated@@646 (type $generated@@644)))
 (=> (and (and (= (type $generated@@643) ($generated@@82 $generated@@646 $generated@@2)) (= (type $generated@@645) $generated@@2)) (<= 0 ($generated $generated@@645))) (= ($generated@@326 ($generated@@88 $generated@@643 $generated@@644 $generated@@645)) (+ (- ($generated@@326 $generated@@643) ($generated ($generated@@87 $generated@@643 $generated@@644))) ($generated $generated@@645)))))
 :pattern ( ($generated@@326 ($generated@@88 $generated@@643 $generated@@644 $generated@@645)))
)))
(assert (forall (($generated@@647 T@U) ($generated@@648 T@U) ) (!  (=> (and (= (type $generated@@647) ($generated@@82 $generated@@83 $generated@@84)) (= (type $generated@@648) $generated@@2)) ($generated@@80 $generated@@648 $generated@@46 $generated@@647))
 :pattern ( ($generated@@80 $generated@@648 $generated@@46 $generated@@647))
)))
(assert (forall (($generated@@649 T@U) ($generated@@650 T@U) ) (!  (=> (and (= (type $generated@@649) ($generated@@82 $generated@@83 $generated@@84)) (= (type $generated@@650) $generated@@3)) ($generated@@80 $generated@@650 $generated@@47 $generated@@649))
 :pattern ( ($generated@@80 $generated@@650 $generated@@47 $generated@@649))
)))
(assert (forall (($generated@@651 T@U) ($generated@@652 T@U) ) (!  (=> (and (= (type $generated@@651) ($generated@@82 $generated@@83 $generated@@84)) (= (type $generated@@652) $generated@@4)) ($generated@@80 $generated@@652 $generated@@44 $generated@@651))
 :pattern ( ($generated@@80 $generated@@652 $generated@@44 $generated@@651))
)))
(assert (forall (($generated@@653 T@U) ($generated@@654 T@U) ) (!  (=> (and (= (type $generated@@653) ($generated@@82 $generated@@83 $generated@@84)) (= (type $generated@@654) $generated@@488)) ($generated@@80 $generated@@654 $generated@@45 $generated@@653))
 :pattern ( ($generated@@80 $generated@@654 $generated@@45 $generated@@653))
)))
(assert (forall (($generated@@655 T@U) ($generated@@656 T@U) ) (!  (=> (and (= (type $generated@@655) ($generated@@82 $generated@@83 $generated@@84)) (= (type $generated@@656) $generated@@197)) ($generated@@80 $generated@@656 $generated@@48 $generated@@655))
 :pattern ( ($generated@@80 $generated@@656 $generated@@48 $generated@@655))
)))
(assert (forall (($generated@@657 T@U) ($generated@@658 T@U) ) (!  (=> (and (= (type $generated@@657) ($generated@@303 $generated@@197)) (= (type $generated@@658) $generated@@70)) (= ($generated@@142 $generated@@657 ($generated@@533 $generated@@658)) (forall (($generated@@659 Int) ) (!  (=> (and (<= 0 $generated@@659) (< $generated@@659 ($generated@@302 $generated@@657))) ($generated@@264 ($generated@@534 $generated@@657 $generated@@659) $generated@@658))
 :pattern ( ($generated@@534 $generated@@657 $generated@@659))
))))
 :pattern ( ($generated@@142 $generated@@657 ($generated@@533 $generated@@658)))
)))
(assert (forall (($generated@@661 T@U) ($generated@@662 Int) ) (!  (=> (= (type $generated@@661) ($generated@@303 $generated@@197)) (=> (and (<= 0 $generated@@662) (< $generated@@662 ($generated@@302 $generated@@661))) (< ($generated@@584 ($generated@@417 $generated@@188 ($generated@@534 $generated@@661 $generated@@662))) ($generated@@660 $generated@@661))))
 :pattern ( ($generated@@584 ($generated@@417 $generated@@188 ($generated@@534 $generated@@661 $generated@@662))))
)))
(assert (forall (($generated@@663 T@U) ($generated@@664 T@U) ($generated@@665 T@U) ) (!  (=> (and (and (and (= (type $generated@@663) ($generated@@340 $generated@@197 $generated@@197)) (= (type $generated@@664) $generated@@70)) (= (type $generated@@665) $generated@@70)) ($generated@@142 $generated@@663 ($generated@@445 $generated@@664 $generated@@665))) (and (and ($generated@@142 ($generated@@338 $generated@@663) ($generated@@273 $generated@@664)) ($generated@@142 ($generated@@385 $generated@@663) ($generated@@273 $generated@@665))) ($generated@@142 ($generated@@416 $generated@@663) ($generated@@273 ($generated@@187 $generated@@664 $generated@@665)))))
 :pattern ( ($generated@@142 $generated@@663 ($generated@@445 $generated@@664 $generated@@665)))
)))
(assert (forall (($generated@@666 T@U) ($generated@@667 T@U) ($generated@@668 T@U) ) (!  (=> (and (and (and (= (type $generated@@666) ($generated@@358 $generated@@197 $generated@@197)) (= (type $generated@@667) $generated@@70)) (= (type $generated@@668) $generated@@70)) ($generated@@142 $generated@@666 ($generated@@453 $generated@@667 $generated@@668))) (and (and ($generated@@142 ($generated@@356 $generated@@666) ($generated@@278 $generated@@667)) ($generated@@142 ($generated@@396 $generated@@666) ($generated@@278 $generated@@668))) ($generated@@142 ($generated@@427 $generated@@666) ($generated@@278 ($generated@@187 $generated@@667 $generated@@668)))))
 :pattern ( ($generated@@142 $generated@@666 ($generated@@453 $generated@@667 $generated@@668)))
)))
(assert (forall (($generated@@669 T@U) ) (!  (=> (= (type $generated@@669) $generated@@2) ($generated@@142 $generated@@669 $generated@@46))
 :pattern ( ($generated@@142 $generated@@669 $generated@@46))
)))
(assert (forall (($generated@@670 T@U) ) (!  (=> (= (type $generated@@670) $generated@@3) ($generated@@142 $generated@@670 $generated@@47))
 :pattern ( ($generated@@142 $generated@@670 $generated@@47))
)))
(assert (forall (($generated@@671 T@U) ) (!  (=> (= (type $generated@@671) $generated@@4) ($generated@@142 $generated@@671 $generated@@44))
 :pattern ( ($generated@@142 $generated@@671 $generated@@44))
)))
(assert (forall (($generated@@672 T@U) ) (!  (=> (= (type $generated@@672) $generated@@488) ($generated@@142 $generated@@672 $generated@@45))
 :pattern ( ($generated@@142 $generated@@672 $generated@@45))
)))
(assert (forall (($generated@@673 T@U) ) (!  (=> (= (type $generated@@673) $generated@@197) ($generated@@142 $generated@@673 $generated@@48))
 :pattern ( ($generated@@142 $generated@@673 $generated@@48))
)))
(push 1)
(declare-fun ControlFlow (Int Int) Int)
(declare-fun $generated@@674 () T@U)
(declare-fun $generated@@675 () T@U)
(declare-fun $generated@@676 () Int)
(declare-fun $generated@@677 () T@U)
(declare-fun $generated@@678 () T@U)
(declare-fun $generated@@679 (T@U) Bool)
(declare-fun $generated@@680 () Int)
(declare-fun $generated@@681 () Int)
(declare-fun $generated@@682 () T@U)
(declare-fun $generated@@683 () T@U)
(declare-fun $generated@@684 () Int)
(assert  (and (and (and (and (and (= (type $generated@@674) ($generated@@209 $generated@@83 $generated@@4)) (= (type $generated@@675) ($generated@@82 $generated@@83 $generated@@84))) (= (type $generated@@677) $generated@@83)) (= (type $generated@@678) ($generated@@82 $generated@@83 $generated@@84))) (= (type $generated@@682) $generated@@83)) (= (type $generated@@683) $generated@@83)))
(set-option :timeout 0)
(set-option :rlimit 0)
(assert (not
 (=> (= (ControlFlow 0 0) 5) (let (($generated@@685  (=> (= $generated@@674 ($generated@@208 $generated@@140 $generated@@675 $generated@@60 false)) (and (=> (= (ControlFlow 0 2) (- 0 4)) (<= 0 $generated@@676)) (=> (<= 0 $generated@@676) (=> (and (and (and (not (= $generated@@677 $generated@@140)) (= ($generated@@141 $generated@@677) ($generated@@139 $generated@@46))) (not ($generated@@0 ($generated@@89 ($generated@@87 $generated@@675 $generated@@677) $generated@@60)))) (and (and (= ($generated@@138 $generated@@677) $generated@@676) (= $generated@@678 ($generated@@88 $generated@@675 $generated@@677 ($generated@@90 ($generated@@87 $generated@@675 $generated@@677) $generated@@60 ($generated@@11 true))))) (and ($generated@@165 $generated@@678) ($generated@@679 $generated@@678)))) (and (=> (= (ControlFlow 0 2) (- 0 3)) (<= 0 $generated@@680)) (=> (<= 0 $generated@@680) (=> (= (ControlFlow 0 2) (- 0 1)) (<= 0 $generated@@681))))))))))
(let (($generated@@686  (=> (and (and (and (and (and ($generated@@165 $generated@@675) ($generated@@679 $generated@@675)) (<= ($generated@@283 0) $generated@@676)) (and (<= ($generated@@283 0) $generated@@680) (<= ($generated@@283 0) $generated@@681))) (and (and ($generated@@142 $generated@@682 ($generated@@176 $generated@@46)) ($generated@@80 $generated@@682 ($generated@@176 $generated@@46) $generated@@675)) true)) (and (and (and ($generated@@142 $generated@@683 ($generated@@181 $generated@@44)) ($generated@@80 $generated@@683 ($generated@@181 $generated@@44) $generated@@675)) true) (and (= 1 $generated@@684) (= (ControlFlow 0 5) 2)))) $generated@@685)))
$generated@@686)))
))
(check-sat)
(pop 1)
; Valid
(get-info :rlimit)
