(set-logic UFLIRA)
(set-option :print-success false)
(set-info :smt-lib-version 2.6)
(set-option :auto_config false)
(set-option :type_check true)
(set-option :smt.case_split 3)
(set-option :smt.qi.eager_threshold 100)
(set-option :smt.delay_units true)
(set-option :smt.arith.solver 2)
(set-option :smt.mbqi false)
(set-option :model.compact false)
(set-option :model.v2 true)
(set-option :pp.bv_literals false)
; done setting options


(set-info :category "industrial")
(declare-sort |T@U| 0)
(declare-sort |T@T| 0)
(declare-fun real_pow (Real Real) Real)
(declare-fun UOrdering2 (|T@U| |T@U|) Bool)
(declare-fun UOrdering3 (|T@T| |T@U| |T@U|) Bool)
(declare-fun tickleBool (Bool) Bool)
(assert (and (tickleBool true) (tickleBool false)))
(declare-fun $generated (T@U) Int)
(declare-fun $generated@@0 (T@U) Bool)
(declare-fun $generated@@1 (T@T) Int)
(declare-fun $generated@@2 () T@T)
(declare-fun $generated@@3 () T@T)
(declare-fun $generated@@4 () T@T)
(declare-fun $generated@@5 () T@T)
(declare-fun $generated@@6 () T@T)
(declare-fun $generated@@7 () T@T)
(declare-fun $generated@@8 (Int) T@U)
(declare-fun type (T@U) T@T)
(declare-fun $generated@@9 (Real) T@U)
(declare-fun $generated@@10 (T@U) Real)
(declare-fun $generated@@11 (Bool) T@U)
(declare-fun $generated@@12 (RoundingMode) T@U)
(declare-fun $generated@@13 (T@U) RoundingMode)
(declare-fun $generated@@14 (String) T@U)
(declare-fun $generated@@15 (T@U) String)
(declare-fun $generated@@16 ((RegEx String)) T@U)
(declare-fun $generated@@17 (T@U) (RegEx String))
(declare-fun $generated@@44 () T@U)
(declare-fun $generated@@45 () T@U)
(declare-fun $generated@@46 () T@U)
(declare-fun $generated@@47 () T@U)
(declare-fun $generated@@48 () T@U)
(declare-fun $generated@@49 () T@U)
(declare-fun $generated@@50 () T@U)
(declare-fun $generated@@51 () T@U)
(declare-fun $generated@@52 () T@U)
(declare-fun $generated@@53 () T@U)
(declare-fun $generated@@54 () T@U)
(declare-fun $generated@@55 () T@U)
(declare-fun $generated@@56 () T@U)
(declare-fun $generated@@57 () T@U)
(declare-fun $generated@@58 () T@U)
(declare-fun $generated@@59 () T@U)
(declare-fun $generated@@60 () T@U)
(declare-fun $generated@@61 () T@U)
(declare-fun $generated@@62 () T@U)
(declare-fun $generated@@63 () T@U)
(declare-fun $generated@@64 () T@T)
(declare-fun $generated@@65 () T@T)
(declare-fun $generated@@66 (T@T) T@T)
(declare-fun $generated@@67 (T@T) T@T)
(declare-fun $generated@@68 () T@T)
(declare-fun $generated@@69 () T@T)
(declare-fun $generated@@72 (T@U) T@U)
(declare-fun $generated@@74 (T@U T@U T@U) Bool)
(declare-fun $generated@@75 (Int) T@U)
(declare-fun $generated@@76 (T@T T@T) T@T)
(declare-fun $generated@@77 () T@T)
(declare-fun $generated@@78 () T@T)
(declare-fun $generated@@79 (T@T) T@T)
(declare-fun $generated@@80 (T@T) T@T)
(declare-fun $generated@@81 (T@U T@U) T@U)
(declare-fun $generated@@82 (T@U T@U T@U) T@U)
(declare-fun $generated@@83 (T@U T@U) T@U)
(declare-fun $generated@@84 (T@U T@U T@U) T@U)
(declare-fun $generated@@132 (T@U T@U) Bool)
(declare-fun $generated@@134 (T@U) Bool)
(declare-fun $generated@@135 (T@U T@U) T@U)
(declare-fun $generated@@136 () T@T)
(declare-fun $generated@@142 (T@U T@U) Bool)
(declare-fun $generated@@143 (T@U) T@U)
(declare-fun $generated@@144 (T@U) T@U)
(declare-fun $generated@@145 () T@T)
(declare-fun $generated@@150 (T@U) T@U)
(declare-fun $generated@@151 (T@U) Bool)
(declare-fun $generated@@155 (T@U T@U T@U) T@U)
(declare-fun $generated@@156 (T@U T@U T@U Bool) T@U)
(declare-fun $generated@@157 (T@T T@T) T@T)
(declare-fun $generated@@158 (T@T) T@T)
(declare-fun $generated@@159 (T@T) T@T)
(declare-fun $generated@@160 (T@U T@U T@U T@U) T@U)
(declare-fun $generated@@211 (T@U T@U T@U Bool) T@U)
(declare-fun $generated@@223 () Int)
(declare-fun $generated@@224 (T@U Int) Int)
(declare-fun $generated@@225 (T@U) T@U)
(declare-fun $generated@@226 (Int) Int)
(declare-fun $generated@@227 () T@T)
(declare-fun $generated@@228 (Int) Bool)
(declare-fun $generated@@232 (T@U T@U) T@U)
(declare-fun $generated@@233 (T@U T@U) Bool)
(declare-fun $generated@@242 (T@U) T@U)
(declare-fun $generated@@247 (T@U) T@U)
(declare-fun $generated@@253 (T@U) T@U)
(declare-fun $generated@@259 (T@U) Bool)
(declare-fun $generated@@260 (T@U T@U T@U) Bool)
(declare-fun $generated@@266 (T@U) T@U)
(declare-fun $generated@@272 (T@T) T@U)
(declare-fun $generated@@273 (T@U) Int)
(declare-fun $generated@@274 (T@T) T@T)
(declare-fun $generated@@275 (T@T) T@T)
(declare-fun $generated@@280 (T@U) T@U)
(declare-fun $generated@@285 (T@U) Int)
(declare-fun $generated@@286 (T@T) T@U)
(declare-fun $generated@@291 (T@U) T@U)
(declare-fun $generated@@292 (T@T T@T) T@U)
(declare-fun $generated@@293 (T@T T@T) T@T)
(declare-fun $generated@@294 (T@T) T@T)
(declare-fun $generated@@295 (T@T) T@T)
(declare-fun $generated@@309 (T@U) T@U)
(declare-fun $generated@@310 (T@T T@T) T@U)
(declare-fun $generated@@311 (T@T T@T) T@T)
(declare-fun $generated@@312 (T@T) T@T)
(declare-fun $generated@@313 (T@T) T@T)
(declare-fun $generated@@334 (T@U) T@U)
(declare-fun $generated@@345 (T@U) T@U)
(declare-fun $generated@@365 (T@U) T@U)
(declare-fun $generated@@366 (T@T T@U) T@U)
(declare-fun $generated@@367 (T@U) T@U)
(declare-fun $generated@@376 (T@U) T@U)
(declare-fun $generated@@377 (T@U) T@U)
(declare-fun $generated@@394 (T@U T@U) T@U)
(declare-fun $generated@@402 (T@U T@U) T@U)
(declare-fun $generated@@410 (T@T) T@U)
(declare-fun $generated@@434 () T@T)
(declare-fun $generated@@442 (T@U) T@U)
(declare-fun $generated@@446 (T@U) T@U)
(declare-fun $generated@@452 (T@U) T@U)
(declare-fun $generated@@456 (T@U) T@U)
(declare-fun $generated@@464 (T@U) T@U)
(declare-fun $generated@@468 (T@U) T@U)
(declare-fun $generated@@476 (T@U) T@U)
(declare-fun $generated@@477 () T@U)
(declare-fun $generated@@481 (T@U) T@U)
(declare-fun $generated@@482 (T@U Int) T@U)
(declare-fun $generated@@491 (T@U) Int)
(declare-fun $generated@@493 (T@U) T@U)
(declare-fun $generated@@497 (T@U) T@U)
(declare-fun $generated@@501 (T@U) T@U)
(declare-fun $generated@@505 (T@U) T@U)
(declare-fun $generated@@521 (T@U) Int)
(declare-fun $generated@@522 (T@U) Int)
(declare-fun $generated@@540 (T@U) T@U)
(declare-fun $generated@@589 (T@U) Int)
(assert  (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (= ($generated@@1 $generated@@2) 0) (= ($generated@@1 $generated@@3) 1)) (= ($generated@@1 $generated@@4) 2)) (= ($generated@@1 $generated@@5) 3)) (= ($generated@@1 $generated@@6) 4)) (= ($generated@@1 $generated@@7) 5)) (forall (($generated@@18 Int) ) (! (= ($generated ($generated@@8 $generated@@18)) $generated@@18)
 :pattern ( ($generated@@8 $generated@@18))
))) (forall (($generated@@19 T@U) ) (!  (=> (= (type $generated@@19) $generated@@2) (= ($generated@@8 ($generated $generated@@19)) $generated@@19))
 :pattern ( ($generated $generated@@19))
))) (forall (($generated@@20 Int) ) (! (= (type ($generated@@8 $generated@@20)) $generated@@2)
 :pattern ( ($generated@@8 $generated@@20))
))) (forall (($generated@@21 Real) ) (! (= ($generated@@10 ($generated@@9 $generated@@21)) $generated@@21)
 :pattern ( ($generated@@9 $generated@@21))
))) (forall (($generated@@22 T@U) ) (!  (=> (= (type $generated@@22) $generated@@3) (= ($generated@@9 ($generated@@10 $generated@@22)) $generated@@22))
 :pattern ( ($generated@@10 $generated@@22))
))) (forall (($generated@@23 Real) ) (! (= (type ($generated@@9 $generated@@23)) $generated@@3)
 :pattern ( ($generated@@9 $generated@@23))
))) (forall (($generated@@24 Bool) ) (! (= ($generated@@0 ($generated@@11 $generated@@24)) $generated@@24)
 :pattern ( ($generated@@11 $generated@@24))
))) (forall (($generated@@25 T@U) ) (!  (=> (= (type $generated@@25) $generated@@4) (= ($generated@@11 ($generated@@0 $generated@@25)) $generated@@25))
 :pattern ( ($generated@@0 $generated@@25))
))) (forall (($generated@@26 Bool) ) (! (= (type ($generated@@11 $generated@@26)) $generated@@4)
 :pattern ( ($generated@@11 $generated@@26))
))) (forall (($generated@@27 RoundingMode) ) (! (= ($generated@@13 ($generated@@12 $generated@@27)) $generated@@27)
 :pattern ( ($generated@@12 $generated@@27))
))) (forall (($generated@@28 T@U) ) (!  (=> (= (type $generated@@28) $generated@@5) (= ($generated@@12 ($generated@@13 $generated@@28)) $generated@@28))
 :pattern ( ($generated@@13 $generated@@28))
))) (forall (($generated@@29 RoundingMode) ) (! (= (type ($generated@@12 $generated@@29)) $generated@@5)
 :pattern ( ($generated@@12 $generated@@29))
))) (forall (($generated@@30 String) ) (! (= ($generated@@15 ($generated@@14 $generated@@30)) $generated@@30)
 :pattern ( ($generated@@14 $generated@@30))
))) (forall (($generated@@31 T@U) ) (!  (=> (= (type $generated@@31) $generated@@6) (= ($generated@@14 ($generated@@15 $generated@@31)) $generated@@31))
 :pattern ( ($generated@@15 $generated@@31))
))) (forall (($generated@@32 String) ) (! (= (type ($generated@@14 $generated@@32)) $generated@@6)
 :pattern ( ($generated@@14 $generated@@32))
))) (forall (($generated@@33 (RegEx String)) ) (! (= ($generated@@17 ($generated@@16 $generated@@33)) $generated@@33)
 :pattern ( ($generated@@16 $generated@@33))
))) (forall (($generated@@34 T@U) ) (!  (=> (= (type $generated@@34) $generated@@7) (= ($generated@@16 ($generated@@17 $generated@@34)) $generated@@34))
 :pattern ( ($generated@@17 $generated@@34))
))) (forall (($generated@@35 (RegEx String)) ) (! (= (type ($generated@@16 $generated@@35)) $generated@@7)
 :pattern ( ($generated@@16 $generated@@35))
))))
(assert (forall (($generated@@36 T@U) ) (! (UOrdering2 $generated@@36 $generated@@36)
 :no-pattern ($generated $generated@@36)
 :no-pattern ($generated@@0 $generated@@36)
)))
(assert (forall (($generated@@37 T@U) ($generated@@38 T@U) ($generated@@39 T@U) ) (! (let (($generated@@40 (type $generated@@37)))
 (=> (and (and (= (type $generated@@38) $generated@@40) (= (type $generated@@39) $generated@@40)) (and (UOrdering2 $generated@@37 $generated@@38) (UOrdering2 $generated@@38 $generated@@39))) (UOrdering2 $generated@@37 $generated@@39)))
 :pattern ( (UOrdering2 $generated@@37 $generated@@38) (UOrdering2 $generated@@38 $generated@@39))
)))
(assert (forall (($generated@@41 T@U) ($generated@@42 T@U) ) (! (let (($generated@@43 (type $generated@@41)))
 (=> (= (type $generated@@42) $generated@@43) (=> (and (UOrdering2 $generated@@41 $generated@@42) (UOrdering2 $generated@@42 $generated@@41)) (= $generated@@41 $generated@@42))))
 :pattern ( (UOrdering2 $generated@@41 $generated@@42) (UOrdering2 $generated@@42 $generated@@41))
)))
(assert  (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (= ($generated@@1 $generated@@64) 6) (= (type $generated@@44) $generated@@64)) (= (type $generated@@45) $generated@@64)) (= (type $generated@@46) $generated@@64)) (= (type $generated@@47) $generated@@64)) (= (type $generated@@48) $generated@@64)) (= ($generated@@1 $generated@@65) 7)) (= (type $generated@@49) $generated@@65)) (= (type $generated@@50) $generated@@65)) (= (type $generated@@51) $generated@@65)) (= (type $generated@@52) $generated@@65)) (= (type $generated@@53) $generated@@65)) (= (type $generated@@54) $generated@@65)) (= (type $generated@@55) $generated@@65)) (= (type $generated@@56) $generated@@65)) (= (type $generated@@57) $generated@@65)) (= (type $generated@@58) $generated@@65)) (= (type $generated@@59) $generated@@65)) (forall (($generated@@70 T@T) ) (= ($generated@@1 ($generated@@66 $generated@@70)) 8))) (forall (($generated@@71 T@T) ) (! (= ($generated@@67 ($generated@@66 $generated@@71)) $generated@@71)
 :pattern ( ($generated@@66 $generated@@71))
))) (= (type $generated@@60) ($generated@@66 $generated@@4))) (= ($generated@@1 $generated@@68) 9)) (= (type $generated@@61) $generated@@68)) (= (type $generated@@62) $generated@@65)) (= ($generated@@1 $generated@@69) 10)) (= (type $generated@@63) $generated@@69)))
(assert (distinct $generated@@44 $generated@@45 $generated@@46 $generated@@47 $generated@@48 $generated@@49 $generated@@50 $generated@@51 $generated@@52 $generated@@53 $generated@@54 $generated@@55 $generated@@56 $generated@@57 $generated@@58 $generated@@59 $generated@@60 $generated@@61 $generated@@62 $generated@@63)
)
(assert (forall (($generated@@73 T@U) ) (! (= (type ($generated@@72 $generated@@73)) $generated@@65)
 :pattern ( ($generated@@72 $generated@@73))
)))
(assert (= ($generated@@72 $generated@@44) $generated@@49))
(assert (= ($generated@@72 $generated@@45) $generated@@50))
(assert (= ($generated@@72 $generated@@46) $generated@@51))
(assert (= ($generated@@72 $generated@@47) $generated@@52))
(assert (= ($generated@@72 $generated@@48) $generated@@53))
(assert  (and (and (and (and (and (and (and (and (and (and (and (and (and (forall (($generated@@85 T@T) ($generated@@86 T@T) ) (= ($generated@@1 ($generated@@76 $generated@@85 $generated@@86)) 11)) (forall (($generated@@87 T@T) ($generated@@88 T@T) ) (! (= ($generated@@79 ($generated@@76 $generated@@87 $generated@@88)) $generated@@87)
 :pattern ( ($generated@@76 $generated@@87 $generated@@88))
))) (forall (($generated@@89 T@T) ($generated@@90 T@T) ) (! (= ($generated@@80 ($generated@@76 $generated@@89 $generated@@90)) $generated@@90)
 :pattern ( ($generated@@76 $generated@@89 $generated@@90))
))) (forall (($generated@@91 T@U) ($generated@@92 T@U) ) (! (let (($generated@@93 ($generated@@80 (type $generated@@91))))
(= (type ($generated@@81 $generated@@91 $generated@@92)) $generated@@93))
 :pattern ( ($generated@@81 $generated@@91 $generated@@92))
))) (forall (($generated@@94 T@U) ($generated@@95 T@U) ($generated@@96 T@U) ) (! (let (($generated@@97 (type $generated@@96)))
(let (($generated@@98 (type $generated@@95)))
(= (type ($generated@@82 $generated@@94 $generated@@95 $generated@@96)) ($generated@@76 $generated@@98 $generated@@97))))
 :pattern ( ($generated@@82 $generated@@94 $generated@@95 $generated@@96))
))) (forall (($generated@@99 T@U) ($generated@@100 T@U) ($generated@@101 T@U) ) (! (let (($generated@@102 ($generated@@80 (type $generated@@99))))
 (=> (= (type $generated@@101) $generated@@102) (= ($generated@@81 ($generated@@82 $generated@@99 $generated@@100 $generated@@101) $generated@@100) $generated@@101)))
 :weight 0
))) (and (forall (($generated@@103 T@U) ($generated@@104 T@U) ($generated@@105 T@U) ($generated@@106 T@U) ) (!  (or (= $generated@@105 $generated@@106) (= ($generated@@81 ($generated@@82 $generated@@104 $generated@@105 $generated@@103) $generated@@106) ($generated@@81 $generated@@104 $generated@@106)))
 :weight 0
)) (forall (($generated@@107 T@U) ($generated@@108 T@U) ($generated@@109 T@U) ($generated@@110 T@U) ) (!  (or true (= ($generated@@81 ($generated@@82 $generated@@108 $generated@@109 $generated@@107) $generated@@110) ($generated@@81 $generated@@108 $generated@@110)))
 :weight 0
)))) (= ($generated@@1 $generated@@77) 12)) (forall (($generated@@111 T@U) ($generated@@112 T@U) ) (! (let (($generated@@113 ($generated@@67 (type $generated@@112))))
(= (type ($generated@@83 $generated@@111 $generated@@112)) $generated@@113))
 :pattern ( ($generated@@83 $generated@@111 $generated@@112))
))) (= ($generated@@1 $generated@@78) 13)) (forall (($generated@@114 T@U) ($generated@@115 T@U) ($generated@@116 T@U) ) (! (= (type ($generated@@84 $generated@@114 $generated@@115 $generated@@116)) $generated@@78)
 :pattern ( ($generated@@84 $generated@@114 $generated@@115 $generated@@116))
))) (forall (($generated@@117 T@U) ($generated@@118 T@U) ($generated@@119 T@U) ) (! (let (($generated@@120 ($generated@@67 (type $generated@@118))))
 (=> (= (type $generated@@119) $generated@@120) (= ($generated@@83 ($generated@@84 $generated@@117 $generated@@118 $generated@@119) $generated@@118) $generated@@119)))
 :weight 0
))) (and (forall (($generated@@121 T@U) ($generated@@122 T@U) ($generated@@123 T@U) ($generated@@124 T@U) ) (!  (or (= $generated@@123 $generated@@124) (= ($generated@@83 ($generated@@84 $generated@@122 $generated@@123 $generated@@121) $generated@@124) ($generated@@83 $generated@@122 $generated@@124)))
 :weight 0
)) (forall (($generated@@125 T@U) ($generated@@126 T@U) ($generated@@127 T@U) ($generated@@128 T@U) ) (!  (or true (= ($generated@@83 ($generated@@84 $generated@@126 $generated@@127 $generated@@125) $generated@@128) ($generated@@83 $generated@@126 $generated@@128)))
 :weight 0
)))) (forall (($generated@@129 Int) ) (! (= (type ($generated@@75 $generated@@129)) $generated@@64)
 :pattern ( ($generated@@75 $generated@@129))
))))
(assert (forall (($generated@@130 T@U) ($generated@@131 T@U) ) (!  (=> (and (= (type $generated@@130) $generated@@2) (= (type $generated@@131) ($generated@@76 $generated@@77 $generated@@78))) ($generated@@74 $generated@@130 ($generated@@75 0) $generated@@131))
 :pattern ( ($generated@@74 $generated@@130 ($generated@@75 0) $generated@@131))
)))
(assert (forall (($generated@@133 T@U) ) (!  (=> (= (type $generated@@133) $generated@@2) ($generated@@132 $generated@@133 ($generated@@75 0)))
 :pattern ( ($generated@@132 $generated@@133 ($generated@@75 0)))
)))
(assert  (and (= ($generated@@1 $generated@@136) 14) (forall (($generated@@137 T@U) ($generated@@138 T@U) ) (! (= (type ($generated@@135 $generated@@137 $generated@@138)) $generated@@64)
 :pattern ( ($generated@@135 $generated@@137 $generated@@138))
))))
(assert (forall (($generated@@139 T@U) ($generated@@140 T@U) ($generated@@141 T@U) ) (!  (=> (and (and (and (= (type $generated@@139) $generated@@64) (= (type $generated@@140) $generated@@64)) (= (type $generated@@141) $generated@@136)) ($generated@@132 $generated@@141 ($generated@@135 $generated@@139 $generated@@140))) ($generated@@134 $generated@@141))
 :pattern ( ($generated@@134 $generated@@141) ($generated@@132 $generated@@141 ($generated@@135 $generated@@139 $generated@@140)))
)))
(assert  (and (and (= ($generated@@1 $generated@@145) 15) (forall (($generated@@146 T@U) ) (! (= (type ($generated@@143 $generated@@146)) $generated@@145)
 :pattern ( ($generated@@143 $generated@@146))
))) (forall (($generated@@147 T@U) ) (! (= (type ($generated@@144 $generated@@147)) $generated@@145)
 :pattern ( ($generated@@144 $generated@@147))
))))
(assert (forall (($generated@@148 T@U) ($generated@@149 T@U) ) (!  (=> (and (and (= (type $generated@@148) $generated@@136) (= (type $generated@@149) $generated@@136)) true) (= ($generated@@142 $generated@@148 $generated@@149)  (and (= ($generated@@143 $generated@@148) ($generated@@143 $generated@@149)) (= ($generated@@144 $generated@@148) ($generated@@144 $generated@@149)))))
 :pattern ( ($generated@@142 $generated@@148 $generated@@149))
)))
(assert (forall (($generated@@152 T@U) ) (! (= (type ($generated@@150 $generated@@152)) $generated@@64)
 :pattern ( ($generated@@150 $generated@@152))
)))
(assert (forall (($generated@@153 T@U) ($generated@@154 T@U) ) (!  (=> (and (and (= (type $generated@@153) ($generated@@76 $generated@@145 $generated@@2)) (= (type $generated@@154) $generated@@64)) ($generated@@132 $generated@@153 ($generated@@150 $generated@@154))) ($generated@@151 $generated@@153))
 :pattern ( ($generated@@132 $generated@@153 ($generated@@150 $generated@@154)))
)))
(assert  (and (and (and (and (and (and (and (forall (($generated@@161 T@T) ($generated@@162 T@T) ) (= ($generated@@1 ($generated@@157 $generated@@161 $generated@@162)) 16)) (forall (($generated@@163 T@T) ($generated@@164 T@T) ) (! (= ($generated@@158 ($generated@@157 $generated@@163 $generated@@164)) $generated@@163)
 :pattern ( ($generated@@157 $generated@@163 $generated@@164))
))) (forall (($generated@@165 T@T) ($generated@@166 T@T) ) (! (= ($generated@@159 ($generated@@157 $generated@@165 $generated@@166)) $generated@@166)
 :pattern ( ($generated@@157 $generated@@165 $generated@@166))
))) (forall (($generated@@167 T@U) ($generated@@168 T@U) ($generated@@169 T@U) ) (! (let (($generated@@170 ($generated@@159 (type $generated@@167))))
(= (type ($generated@@155 $generated@@167 $generated@@168 $generated@@169)) $generated@@170))
 :pattern ( ($generated@@155 $generated@@167 $generated@@168 $generated@@169))
))) (forall (($generated@@171 T@U) ($generated@@172 T@U) ($generated@@173 T@U) ($generated@@174 T@U) ) (! (let (($generated@@175 (type $generated@@174)))
(let (($generated@@176 (type $generated@@172)))
(= (type ($generated@@160 $generated@@171 $generated@@172 $generated@@173 $generated@@174)) ($generated@@157 $generated@@176 $generated@@175))))
 :pattern ( ($generated@@160 $generated@@171 $generated@@172 $generated@@173 $generated@@174))
))) (forall (($generated@@177 T@U) ($generated@@178 T@U) ($generated@@179 T@U) ($generated@@180 T@U) ) (! (let (($generated@@181 ($generated@@159 (type $generated@@177))))
 (=> (= (type $generated@@180) $generated@@181) (= ($generated@@155 ($generated@@160 $generated@@177 $generated@@178 $generated@@179 $generated@@180) $generated@@178 $generated@@179) $generated@@180)))
 :weight 0
))) (and (and (forall (($generated@@182 T@U) ($generated@@183 T@U) ($generated@@184 T@U) ($generated@@185 T@U) ($generated@@186 T@U) ($generated@@187 T@U) ) (!  (or (= $generated@@184 $generated@@186) (= ($generated@@155 ($generated@@160 $generated@@183 $generated@@184 $generated@@185 $generated@@182) $generated@@186 $generated@@187) ($generated@@155 $generated@@183 $generated@@186 $generated@@187)))
 :weight 0
)) (forall (($generated@@188 T@U) ($generated@@189 T@U) ($generated@@190 T@U) ($generated@@191 T@U) ($generated@@192 T@U) ($generated@@193 T@U) ) (!  (or (= $generated@@191 $generated@@193) (= ($generated@@155 ($generated@@160 $generated@@189 $generated@@190 $generated@@191 $generated@@188) $generated@@192 $generated@@193) ($generated@@155 $generated@@189 $generated@@192 $generated@@193)))
 :weight 0
))) (forall (($generated@@194 T@U) ($generated@@195 T@U) ($generated@@196 T@U) ($generated@@197 T@U) ($generated@@198 T@U) ($generated@@199 T@U) ) (!  (or true (= ($generated@@155 ($generated@@160 $generated@@195 $generated@@196 $generated@@197 $generated@@194) $generated@@198 $generated@@199) ($generated@@155 $generated@@195 $generated@@198 $generated@@199)))
 :weight 0
)))) (forall (($generated@@200 T@U) ($generated@@201 T@U) ($generated@@202 T@U) ($generated@@203 Bool) ) (! (= (type ($generated@@156 $generated@@200 $generated@@201 $generated@@202 $generated@@203)) ($generated@@157 $generated@@77 $generated@@4))
 :pattern ( ($generated@@156 $generated@@200 $generated@@201 $generated@@202 $generated@@203))
))))
(assert (forall (($generated@@204 T@U) ($generated@@205 T@U) ($generated@@206 T@U) ($generated@@207 Bool) ($generated@@208 T@U) ($generated@@209 T@U) ) (! (let (($generated@@210 ($generated@@67 (type $generated@@209))))
 (=> (and (and (and (and (= (type $generated@@204) $generated@@77) (= (type $generated@@205) ($generated@@76 $generated@@77 $generated@@78))) (= (type $generated@@206) ($generated@@66 $generated@@4))) (= (type $generated@@208) $generated@@77)) (= (type $generated@@209) ($generated@@66 $generated@@210))) (= ($generated@@0 ($generated@@155 ($generated@@156 $generated@@204 $generated@@205 $generated@@206 $generated@@207) $generated@@208 $generated@@209))  (=> (and (not (= $generated@@208 $generated@@204)) ($generated@@0 ($generated@@83 ($generated@@81 $generated@@205 $generated@@208) $generated@@206))) $generated@@207))))
 :pattern ( ($generated@@155 ($generated@@156 $generated@@204 $generated@@205 $generated@@206 $generated@@207) $generated@@208 $generated@@209))
)))
(assert (forall (($generated@@212 T@U) ($generated@@213 T@U) ($generated@@214 T@U) ($generated@@215 Bool) ) (! (= (type ($generated@@211 $generated@@212 $generated@@213 $generated@@214 $generated@@215)) ($generated@@157 $generated@@77 $generated@@4))
 :pattern ( ($generated@@211 $generated@@212 $generated@@213 $generated@@214 $generated@@215))
)))
(assert (forall (($generated@@216 T@U) ($generated@@217 T@U) ($generated@@218 T@U) ($generated@@219 Bool) ($generated@@220 T@U) ($generated@@221 T@U) ) (! (let (($generated@@222 ($generated@@67 (type $generated@@221))))
 (=> (and (and (and (and (= (type $generated@@216) $generated@@77) (= (type $generated@@217) ($generated@@76 $generated@@77 $generated@@78))) (= (type $generated@@218) ($generated@@66 $generated@@4))) (= (type $generated@@220) $generated@@77)) (= (type $generated@@221) ($generated@@66 $generated@@222))) (= ($generated@@0 ($generated@@155 ($generated@@211 $generated@@216 $generated@@217 $generated@@218 $generated@@219) $generated@@220 $generated@@221))  (=> (and (not (= $generated@@220 $generated@@216)) ($generated@@0 ($generated@@83 ($generated@@81 $generated@@217 $generated@@220) $generated@@218))) $generated@@219))))
 :pattern ( ($generated@@155 ($generated@@211 $generated@@216 $generated@@217 $generated@@218 $generated@@219) $generated@@220 $generated@@221))
)))
(assert  (and (= ($generated@@1 $generated@@227) 17) (forall (($generated@@229 T@U) ) (! (= (type ($generated@@225 $generated@@229)) $generated@@227)
 :pattern ( ($generated@@225 $generated@@229))
))))
(assert  (=> (<= 0 $generated@@223) (forall (($generated@@230 T@U) ($generated@@231 Int) ) (!  (=> (and (= (type $generated@@230) $generated@@227) (or ($generated@@228 ($generated@@226 $generated@@231)) (not (= 0 $generated@@223)))) (and ($generated@@228 ($generated@@226 $generated@@231)) (= ($generated@@224 ($generated@@225 $generated@@230) ($generated@@226 $generated@@231)) ($generated@@226 (+ ($generated@@224 ($generated@@225 $generated@@230) ($generated@@226 $generated@@231)) 1)))))
 :weight 3
 :pattern ( ($generated@@224 ($generated@@225 $generated@@230) ($generated@@226 $generated@@231)))
))))
(assert (forall (($generated@@234 T@U) ($generated@@235 T@U) ) (! (= (type ($generated@@232 $generated@@234 $generated@@235)) $generated@@136)
 :pattern ( ($generated@@232 $generated@@234 $generated@@235))
)))
(assert (forall (($generated@@236 T@U) ($generated@@237 T@U) ($generated@@238 T@U) ($generated@@239 T@U) ) (!  (=> (and (and (and (= (type $generated@@236) $generated@@64) (= (type $generated@@237) $generated@@64)) (= (type $generated@@238) $generated@@145)) (= (type $generated@@239) $generated@@145)) (= ($generated@@132 ($generated@@232 $generated@@238 $generated@@239) ($generated@@135 $generated@@236 $generated@@237))  (and ($generated@@233 $generated@@238 $generated@@236) ($generated@@233 $generated@@239 $generated@@237))))
 :pattern ( ($generated@@132 ($generated@@232 $generated@@238 $generated@@239) ($generated@@135 $generated@@236 $generated@@237)))
)))
(assert (forall (($generated@@240 T@U) ($generated@@241 T@U) ) (!  (=> (and (= (type $generated@@240) $generated@@136) (= (type $generated@@241) $generated@@136)) (= ($generated@@142 $generated@@240 $generated@@241) (= $generated@@240 $generated@@241)))
 :pattern ( ($generated@@142 $generated@@240 $generated@@241))
)))
(assert (forall (($generated@@243 T@U) ) (! (= (type ($generated@@242 $generated@@243)) $generated@@64)
 :pattern ( ($generated@@242 $generated@@243))
)))
(assert (forall (($generated@@244 T@U) ($generated@@245 T@U) ) (!  (=> (and (= (type $generated@@244) ($generated@@76 $generated@@145 $generated@@4)) (= (type $generated@@245) $generated@@64)) (= ($generated@@132 $generated@@244 ($generated@@242 $generated@@245)) (forall (($generated@@246 T@U) ) (!  (=> (and (= (type $generated@@246) $generated@@145) ($generated@@0 ($generated@@81 $generated@@244 $generated@@246))) ($generated@@233 $generated@@246 $generated@@245))
 :pattern ( ($generated@@81 $generated@@244 $generated@@246))
))))
 :pattern ( ($generated@@132 $generated@@244 ($generated@@242 $generated@@245)))
)))
(assert (forall (($generated@@248 T@U) ) (! (= (type ($generated@@247 $generated@@248)) $generated@@64)
 :pattern ( ($generated@@247 $generated@@248))
)))
(assert (forall (($generated@@249 T@U) ($generated@@250 T@U) ) (!  (=> (and (= (type $generated@@249) ($generated@@76 $generated@@145 $generated@@4)) (= (type $generated@@250) $generated@@64)) (= ($generated@@132 $generated@@249 ($generated@@247 $generated@@250)) (forall (($generated@@251 T@U) ) (!  (=> (and (= (type $generated@@251) $generated@@145) ($generated@@0 ($generated@@81 $generated@@249 $generated@@251))) ($generated@@233 $generated@@251 $generated@@250))
 :pattern ( ($generated@@81 $generated@@249 $generated@@251))
))))
 :pattern ( ($generated@@132 $generated@@249 ($generated@@247 $generated@@250)))
)))
(assert (forall (($generated@@252 Int) ) (! (= ($generated@@226 $generated@@252) $generated@@252)
 :pattern ( ($generated@@226 $generated@@252))
)))
(assert (forall (($generated@@254 T@U) ) (! (let (($generated@@255 (type $generated@@254)))
(= (type ($generated@@253 $generated@@254)) $generated@@255))
 :pattern ( ($generated@@253 $generated@@254))
)))
(assert (forall (($generated@@256 T@U) ) (! (= ($generated@@253 $generated@@256) $generated@@256)
 :pattern ( ($generated@@253 $generated@@256))
)))
(assert  (=> (<= 0 $generated@@223) (forall (($generated@@257 T@U) ($generated@@258 Int) ) (!  (=> (and (= (type $generated@@257) $generated@@227) (or ($generated@@228 $generated@@258) (not (= 0 $generated@@223)))) true)
 :pattern ( ($generated@@224 $generated@@257 $generated@@258))
))))
(assert (forall (($generated@@261 T@U) ($generated@@262 T@U) ($generated@@263 T@U) ($generated@@264 T@U) ($generated@@265 T@U) ) (!  (=> (and (and (and (and (and (= (type $generated@@261) $generated@@64) (= (type $generated@@262) $generated@@64)) (= (type $generated@@263) $generated@@145)) (= (type $generated@@264) $generated@@145)) (= (type $generated@@265) ($generated@@76 $generated@@77 $generated@@78))) ($generated@@259 $generated@@265)) (= ($generated@@74 ($generated@@232 $generated@@263 $generated@@264) ($generated@@135 $generated@@261 $generated@@262) $generated@@265)  (and ($generated@@260 $generated@@263 $generated@@261 $generated@@265) ($generated@@260 $generated@@264 $generated@@262 $generated@@265))))
 :pattern ( ($generated@@74 ($generated@@232 $generated@@263 $generated@@264) ($generated@@135 $generated@@261 $generated@@262) $generated@@265))
)))
(assert (forall (($generated@@267 T@U) ) (! (= (type ($generated@@266 $generated@@267)) $generated@@68)
 :pattern ( ($generated@@266 $generated@@267))
)))
(assert (forall (($generated@@268 T@U) ) (!  (=> (= (type $generated@@268) $generated@@136) (= ($generated@@134 $generated@@268) (= ($generated@@266 $generated@@268) $generated@@61)))
 :pattern ( ($generated@@134 $generated@@268))
)))
(assert (forall (($generated@@269 T@U) ) (!  (=> (and (= (type $generated@@269) $generated@@136) ($generated@@134 $generated@@269)) (exists (($generated@@270 T@U) ($generated@@271 T@U) ) (!  (and (and (= (type $generated@@270) $generated@@145) (= (type $generated@@271) $generated@@145)) (= $generated@@269 ($generated@@232 $generated@@270 $generated@@271)))
 :no-pattern (type $generated@@270)
 :no-pattern (type $generated@@271)
 :no-pattern ($generated $generated@@270)
 :no-pattern ($generated@@0 $generated@@270)
 :no-pattern ($generated $generated@@271)
 :no-pattern ($generated@@0 $generated@@271)
)))
 :pattern ( ($generated@@134 $generated@@269))
)))
(assert  (and (and (forall (($generated@@276 T@T) ) (= ($generated@@1 ($generated@@274 $generated@@276)) 18)) (forall (($generated@@277 T@T) ) (! (= ($generated@@275 ($generated@@274 $generated@@277)) $generated@@277)
 :pattern ( ($generated@@274 $generated@@277))
))) (forall (($generated@@278 T@T) ) (! (= (type ($generated@@272 $generated@@278)) ($generated@@274 $generated@@278))
 :pattern ( ($generated@@272 $generated@@278))
))))
(assert (forall (($generated@@279 T@T) ) (! (= ($generated@@273 ($generated@@272 $generated@@279)) 0)
 :pattern ( ($generated@@272 $generated@@279))
)))
(assert (forall (($generated@@281 T@U) ) (! (= (type ($generated@@280 $generated@@281)) $generated@@145)
 :pattern ( ($generated@@280 $generated@@281))
)))
(assert (forall (($generated@@282 T@U) ($generated@@283 T@U) ($generated@@284 T@U) ) (!  (=> (and (= (type $generated@@283) $generated@@64) (= (type $generated@@284) ($generated@@76 $generated@@77 $generated@@78))) (= ($generated@@260 ($generated@@280 $generated@@282) $generated@@283 $generated@@284) ($generated@@74 $generated@@282 $generated@@283 $generated@@284)))
 :pattern ( ($generated@@260 ($generated@@280 $generated@@282) $generated@@283 $generated@@284))
)))
(assert (forall (($generated@@287 T@T) ) (! (= (type ($generated@@286 $generated@@287)) ($generated@@76 $generated@@287 $generated@@2))
 :pattern ( ($generated@@286 $generated@@287))
)))
(assert (forall (($generated@@288 T@U) ) (! (let (($generated@@289 ($generated@@79 (type $generated@@288))))
 (=> (= (type $generated@@288) ($generated@@76 $generated@@289 $generated@@2)) (and (= (= ($generated@@285 $generated@@288) 0) (= $generated@@288 ($generated@@286 $generated@@289))) (=> (not (= ($generated@@285 $generated@@288) 0)) (exists (($generated@@290 T@U) ) (!  (and (= (type $generated@@290) $generated@@289) (< 0 ($generated ($generated@@81 $generated@@288 $generated@@290))))
 :no-pattern (type $generated@@290)
 :no-pattern ($generated $generated@@290)
 :no-pattern ($generated@@0 $generated@@290)
))))))
 :pattern ( ($generated@@285 $generated@@288))
)))
(assert  (and (and (and (and (forall (($generated@@296 T@T) ($generated@@297 T@T) ) (= ($generated@@1 ($generated@@293 $generated@@296 $generated@@297)) 19)) (forall (($generated@@298 T@T) ($generated@@299 T@T) ) (! (= ($generated@@294 ($generated@@293 $generated@@298 $generated@@299)) $generated@@298)
 :pattern ( ($generated@@293 $generated@@298 $generated@@299))
))) (forall (($generated@@300 T@T) ($generated@@301 T@T) ) (! (= ($generated@@295 ($generated@@293 $generated@@300 $generated@@301)) $generated@@301)
 :pattern ( ($generated@@293 $generated@@300 $generated@@301))
))) (forall (($generated@@302 T@U) ) (! (let (($generated@@303 ($generated@@294 (type $generated@@302))))
(= (type ($generated@@291 $generated@@302)) ($generated@@76 $generated@@303 $generated@@4)))
 :pattern ( ($generated@@291 $generated@@302))
))) (forall (($generated@@304 T@T) ($generated@@305 T@T) ) (! (= (type ($generated@@292 $generated@@304 $generated@@305)) ($generated@@293 $generated@@304 $generated@@305))
 :pattern ( ($generated@@292 $generated@@304 $generated@@305))
))))
(assert (forall (($generated@@306 T@U) ($generated@@307 T@T) ) (! (let (($generated@@308 (type $generated@@306)))
 (not ($generated@@0 ($generated@@81 ($generated@@291 ($generated@@292 $generated@@308 $generated@@307)) $generated@@306))))
 :pattern ( (let (($generated@@308 (type $generated@@306)))
($generated@@81 ($generated@@291 ($generated@@292 $generated@@308 $generated@@307)) $generated@@306)))
)))
(assert  (and (and (and (and (forall (($generated@@314 T@T) ($generated@@315 T@T) ) (= ($generated@@1 ($generated@@311 $generated@@314 $generated@@315)) 20)) (forall (($generated@@316 T@T) ($generated@@317 T@T) ) (! (= ($generated@@312 ($generated@@311 $generated@@316 $generated@@317)) $generated@@316)
 :pattern ( ($generated@@311 $generated@@316 $generated@@317))
))) (forall (($generated@@318 T@T) ($generated@@319 T@T) ) (! (= ($generated@@313 ($generated@@311 $generated@@318 $generated@@319)) $generated@@319)
 :pattern ( ($generated@@311 $generated@@318 $generated@@319))
))) (forall (($generated@@320 T@U) ) (! (let (($generated@@321 ($generated@@312 (type $generated@@320))))
(= (type ($generated@@309 $generated@@320)) ($generated@@76 $generated@@321 $generated@@4)))
 :pattern ( ($generated@@309 $generated@@320))
))) (forall (($generated@@322 T@T) ($generated@@323 T@T) ) (! (= (type ($generated@@310 $generated@@322 $generated@@323)) ($generated@@311 $generated@@322 $generated@@323))
 :pattern ( ($generated@@310 $generated@@322 $generated@@323))
))))
(assert (forall (($generated@@324 T@U) ($generated@@325 T@T) ) (! (let (($generated@@326 (type $generated@@324)))
 (not ($generated@@0 ($generated@@81 ($generated@@309 ($generated@@310 $generated@@326 $generated@@325)) $generated@@324))))
 :pattern ( (let (($generated@@326 (type $generated@@324)))
($generated@@81 ($generated@@309 ($generated@@310 $generated@@326 $generated@@325)) $generated@@324)))
)))
(assert (forall (($generated@@327 T@U) ) (! (let (($generated@@328 ($generated@@79 (type $generated@@327))))
 (=> (= (type $generated@@327) ($generated@@76 $generated@@328 $generated@@2)) (= ($generated@@151 $generated@@327) (forall (($generated@@329 T@U) ) (!  (=> (= (type $generated@@329) $generated@@328) (and (<= 0 ($generated ($generated@@81 $generated@@327 $generated@@329))) (<= ($generated ($generated@@81 $generated@@327 $generated@@329)) ($generated@@285 $generated@@327))))
 :pattern ( ($generated@@81 $generated@@327 $generated@@329))
)))))
 :pattern ( ($generated@@151 $generated@@327))
)))
(assert (forall (($generated@@330 T@U) ) (! (let (($generated@@331 ($generated@@295 (type $generated@@330))))
(let (($generated@@332 ($generated@@294 (type $generated@@330))))
 (=> (= (type $generated@@330) ($generated@@293 $generated@@332 $generated@@331)) (or (= $generated@@330 ($generated@@292 $generated@@332 $generated@@331)) (exists (($generated@@333 T@U) ) (!  (and (= (type $generated@@333) $generated@@332) ($generated@@0 ($generated@@81 ($generated@@291 $generated@@330) $generated@@333)))
 :no-pattern (type $generated@@333)
 :no-pattern ($generated $generated@@333)
 :no-pattern ($generated@@0 $generated@@333)
))))))
 :pattern ( ($generated@@291 $generated@@330))
)))
(assert (forall (($generated@@335 T@U) ) (! (let (($generated@@336 ($generated@@295 (type $generated@@335))))
(= (type ($generated@@334 $generated@@335)) ($generated@@76 $generated@@336 $generated@@4)))
 :pattern ( ($generated@@334 $generated@@335))
)))
(assert (forall (($generated@@337 T@U) ) (! (let (($generated@@338 ($generated@@295 (type $generated@@337))))
(let (($generated@@339 ($generated@@294 (type $generated@@337))))
 (=> (= (type $generated@@337) ($generated@@293 $generated@@339 $generated@@338)) (or (= $generated@@337 ($generated@@292 $generated@@339 $generated@@338)) (exists (($generated@@340 T@U) ) (!  (and (= (type $generated@@340) $generated@@338) ($generated@@0 ($generated@@81 ($generated@@334 $generated@@337) $generated@@340)))
 :no-pattern (type $generated@@340)
 :no-pattern ($generated $generated@@340)
 :no-pattern ($generated@@0 $generated@@340)
))))))
 :pattern ( ($generated@@334 $generated@@337))
)))
(assert (forall (($generated@@341 T@U) ) (! (let (($generated@@342 ($generated@@313 (type $generated@@341))))
(let (($generated@@343 ($generated@@312 (type $generated@@341))))
 (=> (= (type $generated@@341) ($generated@@311 $generated@@343 $generated@@342)) (or (= $generated@@341 ($generated@@310 $generated@@343 $generated@@342)) (exists (($generated@@344 T@U) ) (!  (and (= (type $generated@@344) $generated@@343) ($generated@@0 ($generated@@81 ($generated@@309 $generated@@341) $generated@@344)))
 :no-pattern (type $generated@@344)
 :no-pattern ($generated $generated@@344)
 :no-pattern ($generated@@0 $generated@@344)
))))))
 :pattern ( ($generated@@309 $generated@@341))
)))
(assert (forall (($generated@@346 T@U) ) (! (let (($generated@@347 ($generated@@313 (type $generated@@346))))
(= (type ($generated@@345 $generated@@346)) ($generated@@76 $generated@@347 $generated@@4)))
 :pattern ( ($generated@@345 $generated@@346))
)))
(assert (forall (($generated@@348 T@U) ) (! (let (($generated@@349 ($generated@@313 (type $generated@@348))))
(let (($generated@@350 ($generated@@312 (type $generated@@348))))
 (=> (= (type $generated@@348) ($generated@@311 $generated@@350 $generated@@349)) (or (= $generated@@348 ($generated@@310 $generated@@350 $generated@@349)) (exists (($generated@@351 T@U) ) (!  (and (= (type $generated@@351) $generated@@349) ($generated@@0 ($generated@@81 ($generated@@345 $generated@@348) $generated@@351)))
 :no-pattern (type $generated@@351)
 :no-pattern ($generated $generated@@351)
 :no-pattern ($generated@@0 $generated@@351)
))))))
 :pattern ( ($generated@@345 $generated@@348))
)))
(assert (forall (($generated@@352 T@U) ($generated@@353 T@U) ) (!  (=> (and (= (type $generated@@352) ($generated@@76 $generated@@145 $generated@@2)) (= (type $generated@@353) $generated@@64)) (= ($generated@@132 $generated@@352 ($generated@@150 $generated@@353)) (forall (($generated@@354 T@U) ) (!  (=> (and (= (type $generated@@354) $generated@@145) (< 0 ($generated ($generated@@81 $generated@@352 $generated@@354)))) ($generated@@233 $generated@@354 $generated@@353))
 :pattern ( ($generated@@81 $generated@@352 $generated@@354))
))))
 :pattern ( ($generated@@132 $generated@@352 ($generated@@150 $generated@@353)))
)))
(assert (forall (($generated@@355 T@U) ($generated@@356 T@U) ($generated@@357 T@U) ) (!  (=> (and (and (= (type $generated@@355) ($generated@@76 $generated@@145 $generated@@4)) (= (type $generated@@356) $generated@@64)) (= (type $generated@@357) ($generated@@76 $generated@@77 $generated@@78))) (= ($generated@@74 $generated@@355 ($generated@@242 $generated@@356) $generated@@357) (forall (($generated@@358 T@U) ) (!  (=> (and (= (type $generated@@358) $generated@@145) ($generated@@0 ($generated@@81 $generated@@355 $generated@@358))) ($generated@@260 $generated@@358 $generated@@356 $generated@@357))
 :pattern ( ($generated@@81 $generated@@355 $generated@@358))
))))
 :pattern ( ($generated@@74 $generated@@355 ($generated@@242 $generated@@356) $generated@@357))
)))
(assert (forall (($generated@@359 T@U) ($generated@@360 T@U) ($generated@@361 T@U) ) (!  (=> (and (and (= (type $generated@@359) ($generated@@76 $generated@@145 $generated@@4)) (= (type $generated@@360) $generated@@64)) (= (type $generated@@361) ($generated@@76 $generated@@77 $generated@@78))) (= ($generated@@74 $generated@@359 ($generated@@247 $generated@@360) $generated@@361) (forall (($generated@@362 T@U) ) (!  (=> (and (= (type $generated@@362) $generated@@145) ($generated@@0 ($generated@@81 $generated@@359 $generated@@362))) ($generated@@260 $generated@@362 $generated@@360 $generated@@361))
 :pattern ( ($generated@@81 $generated@@359 $generated@@362))
))))
 :pattern ( ($generated@@74 $generated@@359 ($generated@@247 $generated@@360) $generated@@361))
)))
(assert (forall (($generated@@363 T@U) ) (! (let (($generated@@364 (type $generated@@363)))
(= ($generated ($generated@@81 ($generated@@286 $generated@@364) $generated@@363)) 0))
 :pattern ( (let (($generated@@364 (type $generated@@363)))
($generated@@81 ($generated@@286 $generated@@364) $generated@@363)))
)))
(assert  (and (and (forall (($generated@@368 T@U) ) (! (= (type ($generated@@365 $generated@@368)) ($generated@@76 $generated@@145 $generated@@4))
 :pattern ( ($generated@@365 $generated@@368))
)) (forall (($generated@@369 T@T) ($generated@@370 T@U) ) (! (= (type ($generated@@366 $generated@@369 $generated@@370)) $generated@@369)
 :pattern ( ($generated@@366 $generated@@369 $generated@@370))
))) (forall (($generated@@371 T@U) ) (! (let (($generated@@372 ($generated@@295 (type $generated@@371))))
(let (($generated@@373 ($generated@@294 (type $generated@@371))))
(= (type ($generated@@367 $generated@@371)) ($generated@@76 $generated@@373 $generated@@372))))
 :pattern ( ($generated@@367 $generated@@371))
))))
(assert (forall (($generated@@374 T@U) ($generated@@375 T@U) ) (!  (=> (and (= (type $generated@@374) ($generated@@293 $generated@@145 $generated@@145)) (= (type $generated@@375) $generated@@145)) (= ($generated@@0 ($generated@@81 ($generated@@365 $generated@@374) $generated@@375))  (and ($generated@@0 ($generated@@81 ($generated@@291 $generated@@374) ($generated@@143 ($generated@@366 $generated@@136 $generated@@375)))) (= ($generated@@81 ($generated@@367 $generated@@374) ($generated@@143 ($generated@@366 $generated@@136 $generated@@375))) ($generated@@144 ($generated@@366 $generated@@136 $generated@@375))))))
 :pattern ( ($generated@@81 ($generated@@365 $generated@@374) $generated@@375))
)))
(assert  (and (forall (($generated@@378 T@U) ) (! (= (type ($generated@@376 $generated@@378)) ($generated@@76 $generated@@145 $generated@@4))
 :pattern ( ($generated@@376 $generated@@378))
)) (forall (($generated@@379 T@U) ) (! (let (($generated@@380 ($generated@@313 (type $generated@@379))))
(let (($generated@@381 ($generated@@312 (type $generated@@379))))
(= (type ($generated@@377 $generated@@379)) ($generated@@76 $generated@@381 $generated@@380))))
 :pattern ( ($generated@@377 $generated@@379))
))))
(assert (forall (($generated@@382 T@U) ($generated@@383 T@U) ) (!  (=> (and (= (type $generated@@382) ($generated@@311 $generated@@145 $generated@@145)) (= (type $generated@@383) $generated@@145)) (= ($generated@@0 ($generated@@81 ($generated@@376 $generated@@382) $generated@@383))  (and ($generated@@0 ($generated@@81 ($generated@@309 $generated@@382) ($generated@@143 ($generated@@366 $generated@@136 $generated@@383)))) (= ($generated@@81 ($generated@@377 $generated@@382) ($generated@@143 ($generated@@366 $generated@@136 $generated@@383))) ($generated@@144 ($generated@@366 $generated@@136 $generated@@383))))))
 :pattern ( ($generated@@81 ($generated@@376 $generated@@382) $generated@@383))
)))
(assert (forall (($generated@@384 T@U) ($generated@@385 T@U) ) (! (let (($generated@@386 (type $generated@@385)))
(let (($generated@@387 ($generated@@294 (type $generated@@384))))
 (=> (= (type $generated@@384) ($generated@@293 $generated@@387 $generated@@386)) (= ($generated@@0 ($generated@@81 ($generated@@334 $generated@@384) $generated@@385)) (exists (($generated@@388 T@U) ) (!  (and (= (type $generated@@388) $generated@@387) (and ($generated@@0 ($generated@@81 ($generated@@291 $generated@@384) $generated@@388)) (= $generated@@385 ($generated@@81 ($generated@@367 $generated@@384) $generated@@388))))
 :pattern ( ($generated@@81 ($generated@@291 $generated@@384) $generated@@388))
 :pattern ( ($generated@@81 ($generated@@367 $generated@@384) $generated@@388))
))))))
 :pattern ( ($generated@@81 ($generated@@334 $generated@@384) $generated@@385))
)))
(assert (forall (($generated@@389 T@U) ($generated@@390 T@U) ) (! (let (($generated@@391 (type $generated@@390)))
(let (($generated@@392 ($generated@@312 (type $generated@@389))))
 (=> (= (type $generated@@389) ($generated@@311 $generated@@392 $generated@@391)) (= ($generated@@0 ($generated@@81 ($generated@@345 $generated@@389) $generated@@390)) (exists (($generated@@393 T@U) ) (!  (and (= (type $generated@@393) $generated@@392) (and ($generated@@0 ($generated@@81 ($generated@@309 $generated@@389) $generated@@393)) (= $generated@@390 ($generated@@81 ($generated@@377 $generated@@389) $generated@@393))))
 :pattern ( ($generated@@81 ($generated@@309 $generated@@389) $generated@@393))
 :pattern ( ($generated@@81 ($generated@@377 $generated@@389) $generated@@393))
))))))
 :pattern ( ($generated@@81 ($generated@@345 $generated@@389) $generated@@390))
)))
(assert (forall (($generated@@395 T@U) ($generated@@396 T@U) ) (! (= (type ($generated@@394 $generated@@395 $generated@@396)) $generated@@64)
 :pattern ( ($generated@@394 $generated@@395 $generated@@396))
)))
(assert (forall (($generated@@397 T@U) ($generated@@398 T@U) ($generated@@399 T@U) ($generated@@400 T@U) ) (!  (=> (and (and (and (= (type $generated@@397) ($generated@@293 $generated@@145 $generated@@145)) (= (type $generated@@398) $generated@@64)) (= (type $generated@@399) $generated@@64)) (= (type $generated@@400) ($generated@@76 $generated@@77 $generated@@78))) (= ($generated@@74 $generated@@397 ($generated@@394 $generated@@398 $generated@@399) $generated@@400) (forall (($generated@@401 T@U) ) (!  (=> (and (= (type $generated@@401) $generated@@145) ($generated@@0 ($generated@@81 ($generated@@291 $generated@@397) $generated@@401))) (and ($generated@@260 ($generated@@81 ($generated@@367 $generated@@397) $generated@@401) $generated@@399 $generated@@400) ($generated@@260 $generated@@401 $generated@@398 $generated@@400)))
 :pattern ( ($generated@@81 ($generated@@367 $generated@@397) $generated@@401))
 :pattern ( ($generated@@81 ($generated@@291 $generated@@397) $generated@@401))
))))
 :pattern ( ($generated@@74 $generated@@397 ($generated@@394 $generated@@398 $generated@@399) $generated@@400))
)))
(assert (forall (($generated@@403 T@U) ($generated@@404 T@U) ) (! (= (type ($generated@@402 $generated@@403 $generated@@404)) $generated@@64)
 :pattern ( ($generated@@402 $generated@@403 $generated@@404))
)))
(assert (forall (($generated@@405 T@U) ($generated@@406 T@U) ($generated@@407 T@U) ($generated@@408 T@U) ) (!  (=> (and (and (and (= (type $generated@@405) ($generated@@311 $generated@@145 $generated@@145)) (= (type $generated@@406) $generated@@64)) (= (type $generated@@407) $generated@@64)) (= (type $generated@@408) ($generated@@76 $generated@@77 $generated@@78))) (= ($generated@@74 $generated@@405 ($generated@@402 $generated@@406 $generated@@407) $generated@@408) (forall (($generated@@409 T@U) ) (!  (=> (and (= (type $generated@@409) $generated@@145) ($generated@@0 ($generated@@81 ($generated@@309 $generated@@405) $generated@@409))) (and ($generated@@260 ($generated@@81 ($generated@@377 $generated@@405) $generated@@409) $generated@@407 $generated@@408) ($generated@@260 $generated@@409 $generated@@406 $generated@@408)))
 :pattern ( ($generated@@81 ($generated@@377 $generated@@405) $generated@@409))
 :pattern ( ($generated@@81 ($generated@@309 $generated@@405) $generated@@409))
))))
 :pattern ( ($generated@@74 $generated@@405 ($generated@@402 $generated@@406 $generated@@407) $generated@@408))
)))
(assert (forall (($generated@@411 T@T) ) (! (= (type ($generated@@410 $generated@@411)) ($generated@@76 $generated@@411 $generated@@4))
 :pattern ( ($generated@@410 $generated@@411))
)))
(assert (forall (($generated@@412 T@U) ) (! (let (($generated@@413 ($generated@@313 (type $generated@@412))))
(let (($generated@@414 ($generated@@312 (type $generated@@412))))
 (=> (= (type $generated@@412) ($generated@@311 $generated@@414 $generated@@413)) (= (= $generated@@412 ($generated@@310 $generated@@414 $generated@@413)) (= ($generated@@309 $generated@@412) ($generated@@410 $generated@@414))))))
 :pattern ( ($generated@@309 $generated@@412))
)))
(assert (forall (($generated@@415 T@U) ) (! (let (($generated@@416 ($generated@@313 (type $generated@@415))))
(let (($generated@@417 ($generated@@312 (type $generated@@415))))
 (=> (= (type $generated@@415) ($generated@@311 $generated@@417 $generated@@416)) (= (= $generated@@415 ($generated@@310 $generated@@417 $generated@@416)) (= ($generated@@345 $generated@@415) ($generated@@410 $generated@@416))))))
 :pattern ( ($generated@@345 $generated@@415))
)))
(assert (forall (($generated@@418 T@U) ) (! (let (($generated@@419 ($generated@@313 (type $generated@@418))))
(let (($generated@@420 ($generated@@312 (type $generated@@418))))
 (=> (= (type $generated@@418) ($generated@@311 $generated@@420 $generated@@419)) (= (= $generated@@418 ($generated@@310 $generated@@420 $generated@@419)) (= ($generated@@376 $generated@@418) ($generated@@410 $generated@@145))))))
 :pattern ( ($generated@@376 $generated@@418))
)))
(assert (forall (($generated@@421 T@U) ) (! (let (($generated@@422 ($generated@@295 (type $generated@@421))))
(let (($generated@@423 ($generated@@294 (type $generated@@421))))
 (=> (= (type $generated@@421) ($generated@@293 $generated@@423 $generated@@422)) (or (= $generated@@421 ($generated@@292 $generated@@423 $generated@@422)) (exists (($generated@@424 T@U) ($generated@@425 T@U) ) (!  (and (and (= (type $generated@@424) $generated@@145) (= (type $generated@@425) $generated@@145)) ($generated@@0 ($generated@@81 ($generated@@365 $generated@@421) ($generated@@280 ($generated@@232 $generated@@424 $generated@@425)))))
 :no-pattern (type $generated@@424)
 :no-pattern (type $generated@@425)
 :no-pattern ($generated $generated@@424)
 :no-pattern ($generated@@0 $generated@@424)
 :no-pattern ($generated $generated@@425)
 :no-pattern ($generated@@0 $generated@@425)
))))))
 :pattern ( ($generated@@365 $generated@@421))
)))
(assert (forall (($generated@@426 T@U) ) (! (let (($generated@@427 ($generated@@313 (type $generated@@426))))
(let (($generated@@428 ($generated@@312 (type $generated@@426))))
 (=> (= (type $generated@@426) ($generated@@311 $generated@@428 $generated@@427)) (or (= $generated@@426 ($generated@@310 $generated@@428 $generated@@427)) (exists (($generated@@429 T@U) ($generated@@430 T@U) ) (!  (and (and (= (type $generated@@429) $generated@@145) (= (type $generated@@430) $generated@@145)) ($generated@@0 ($generated@@81 ($generated@@376 $generated@@426) ($generated@@280 ($generated@@232 $generated@@429 $generated@@430)))))
 :no-pattern (type $generated@@429)
 :no-pattern (type $generated@@430)
 :no-pattern ($generated $generated@@429)
 :no-pattern ($generated@@0 $generated@@429)
 :no-pattern ($generated $generated@@430)
 :no-pattern ($generated@@0 $generated@@430)
))))))
 :pattern ( ($generated@@376 $generated@@426))
)))
(assert (forall (($generated@@431 T@U) ) (!  (=> (and (= (type $generated@@431) $generated@@145) ($generated@@233 $generated@@431 $generated@@46)) (and (= ($generated@@280 ($generated@@366 $generated@@2 $generated@@431)) $generated@@431) ($generated@@132 ($generated@@366 $generated@@2 $generated@@431) $generated@@46)))
 :pattern ( ($generated@@233 $generated@@431 $generated@@46))
)))
(assert (forall (($generated@@432 T@U) ) (!  (=> (and (= (type $generated@@432) $generated@@145) ($generated@@233 $generated@@432 $generated@@47)) (and (= ($generated@@280 ($generated@@366 $generated@@3 $generated@@432)) $generated@@432) ($generated@@132 ($generated@@366 $generated@@3 $generated@@432) $generated@@47)))
 :pattern ( ($generated@@233 $generated@@432 $generated@@47))
)))
(assert (forall (($generated@@433 T@U) ) (!  (=> (and (= (type $generated@@433) $generated@@145) ($generated@@233 $generated@@433 $generated@@44)) (and (= ($generated@@280 ($generated@@366 $generated@@4 $generated@@433)) $generated@@433) ($generated@@132 ($generated@@366 $generated@@4 $generated@@433) $generated@@44)))
 :pattern ( ($generated@@233 $generated@@433 $generated@@44))
)))
(assert (= ($generated@@1 $generated@@434) 21))
(assert (forall (($generated@@435 T@U) ) (!  (=> (and (= (type $generated@@435) $generated@@145) ($generated@@233 $generated@@435 $generated@@45)) (and (= ($generated@@280 ($generated@@366 $generated@@434 $generated@@435)) $generated@@435) ($generated@@132 ($generated@@366 $generated@@434 $generated@@435) $generated@@45)))
 :pattern ( ($generated@@233 $generated@@435 $generated@@45))
)))
(assert (forall (($generated@@436 T@U) ($generated@@437 T@U) ) (!  (=> (= (type $generated@@437) $generated@@64) (= ($generated@@233 ($generated@@280 $generated@@436) $generated@@437) ($generated@@132 $generated@@436 $generated@@437)))
 :pattern ( ($generated@@233 ($generated@@280 $generated@@436) $generated@@437))
)))
(assert (forall (($generated@@438 T@U) ) (! (let (($generated@@439 ($generated@@79 (type $generated@@438))))
 (=> (= (type $generated@@438) ($generated@@76 $generated@@439 $generated@@2)) (<= 0 ($generated@@285 $generated@@438))))
 :pattern ( ($generated@@285 $generated@@438))
)))
(assert (forall (($generated@@440 T@U) ) (! (let (($generated@@441 ($generated@@275 (type $generated@@440))))
 (=> (= (type $generated@@440) ($generated@@274 $generated@@441)) (<= 0 ($generated@@273 $generated@@440))))
 :pattern ( ($generated@@273 $generated@@440))
)))
(assert (forall (($generated@@443 T@U) ) (! (= (type ($generated@@442 $generated@@443)) $generated@@64)
 :pattern ( ($generated@@442 $generated@@443))
)))
(assert (forall (($generated@@444 T@U) ($generated@@445 T@U) ) (!  (=> (and (= (type $generated@@444) $generated@@64) (= (type $generated@@445) $generated@@64)) (= ($generated@@442 ($generated@@394 $generated@@444 $generated@@445)) $generated@@444))
 :pattern ( ($generated@@394 $generated@@444 $generated@@445))
)))
(assert (forall (($generated@@447 T@U) ) (! (= (type ($generated@@446 $generated@@447)) $generated@@64)
 :pattern ( ($generated@@446 $generated@@447))
)))
(assert (forall (($generated@@448 T@U) ($generated@@449 T@U) ) (!  (=> (and (= (type $generated@@448) $generated@@64) (= (type $generated@@449) $generated@@64)) (= ($generated@@446 ($generated@@394 $generated@@448 $generated@@449)) $generated@@449))
 :pattern ( ($generated@@394 $generated@@448 $generated@@449))
)))
(assert (forall (($generated@@450 T@U) ($generated@@451 T@U) ) (!  (=> (and (= (type $generated@@450) $generated@@64) (= (type $generated@@451) $generated@@64)) (= ($generated@@72 ($generated@@394 $generated@@450 $generated@@451)) $generated@@58))
 :pattern ( ($generated@@394 $generated@@450 $generated@@451))
)))
(assert (forall (($generated@@453 T@U) ) (! (= (type ($generated@@452 $generated@@453)) $generated@@64)
 :pattern ( ($generated@@452 $generated@@453))
)))
(assert (forall (($generated@@454 T@U) ($generated@@455 T@U) ) (!  (=> (and (= (type $generated@@454) $generated@@64) (= (type $generated@@455) $generated@@64)) (= ($generated@@452 ($generated@@402 $generated@@454 $generated@@455)) $generated@@454))
 :pattern ( ($generated@@402 $generated@@454 $generated@@455))
)))
(assert (forall (($generated@@457 T@U) ) (! (= (type ($generated@@456 $generated@@457)) $generated@@64)
 :pattern ( ($generated@@456 $generated@@457))
)))
(assert (forall (($generated@@458 T@U) ($generated@@459 T@U) ) (!  (=> (and (= (type $generated@@458) $generated@@64) (= (type $generated@@459) $generated@@64)) (= ($generated@@456 ($generated@@402 $generated@@458 $generated@@459)) $generated@@459))
 :pattern ( ($generated@@402 $generated@@458 $generated@@459))
)))
(assert (forall (($generated@@460 T@U) ($generated@@461 T@U) ) (!  (=> (and (= (type $generated@@460) $generated@@64) (= (type $generated@@461) $generated@@64)) (= ($generated@@72 ($generated@@402 $generated@@460 $generated@@461)) $generated@@59))
 :pattern ( ($generated@@402 $generated@@460 $generated@@461))
)))
(assert (forall (($generated@@462 T@U) ($generated@@463 T@U) ) (!  (=> (and (= (type $generated@@462) $generated@@145) (= (type $generated@@463) $generated@@145)) (= ($generated@@266 ($generated@@232 $generated@@462 $generated@@463)) $generated@@61))
 :pattern ( ($generated@@232 $generated@@462 $generated@@463))
)))
(assert (forall (($generated@@465 T@U) ) (! (= (type ($generated@@464 $generated@@465)) $generated@@64)
 :pattern ( ($generated@@464 $generated@@465))
)))
(assert (forall (($generated@@466 T@U) ($generated@@467 T@U) ) (!  (=> (and (= (type $generated@@466) $generated@@64) (= (type $generated@@467) $generated@@64)) (= ($generated@@464 ($generated@@135 $generated@@466 $generated@@467)) $generated@@466))
 :pattern ( ($generated@@135 $generated@@466 $generated@@467))
)))
(assert (forall (($generated@@469 T@U) ) (! (= (type ($generated@@468 $generated@@469)) $generated@@64)
 :pattern ( ($generated@@468 $generated@@469))
)))
(assert (forall (($generated@@470 T@U) ($generated@@471 T@U) ) (!  (=> (and (= (type $generated@@470) $generated@@64) (= (type $generated@@471) $generated@@64)) (= ($generated@@468 ($generated@@135 $generated@@470 $generated@@471)) $generated@@471))
 :pattern ( ($generated@@135 $generated@@470 $generated@@471))
)))
(assert (forall (($generated@@472 T@U) ($generated@@473 T@U) ) (!  (=> (and (= (type $generated@@472) $generated@@145) (= (type $generated@@473) $generated@@145)) (= ($generated@@143 ($generated@@232 $generated@@472 $generated@@473)) $generated@@472))
 :pattern ( ($generated@@232 $generated@@472 $generated@@473))
)))
(assert (forall (($generated@@474 T@U) ($generated@@475 T@U) ) (!  (=> (and (= (type $generated@@474) $generated@@145) (= (type $generated@@475) $generated@@145)) (= ($generated@@144 ($generated@@232 $generated@@474 $generated@@475)) $generated@@475))
 :pattern ( ($generated@@232 $generated@@474 $generated@@475))
)))
(assert  (and (forall (($generated@@478 T@U) ) (! (= (type ($generated@@476 $generated@@478)) $generated@@227)
 :pattern ( ($generated@@476 $generated@@478))
)) (= (type $generated@@477) $generated@@227)))
(assert (forall (($generated@@479 T@U) ($generated@@480 Int) ) (!  (=> (= (type $generated@@479) $generated@@227) (= ($generated@@224 $generated@@479 $generated@@480) ($generated@@224 $generated@@477 $generated@@480)))
 :pattern ( ($generated@@224 ($generated@@476 $generated@@479) $generated@@480))
)))
(assert  (and (forall (($generated@@483 T@U) ) (! (= (type ($generated@@481 $generated@@483)) $generated@@64)
 :pattern ( ($generated@@481 $generated@@483))
)) (forall (($generated@@484 T@U) ($generated@@485 Int) ) (! (let (($generated@@486 ($generated@@275 (type $generated@@484))))
(= (type ($generated@@482 $generated@@484 $generated@@485)) $generated@@486))
 :pattern ( ($generated@@482 $generated@@484 $generated@@485))
))))
(assert (forall (($generated@@487 T@U) ($generated@@488 T@U) ($generated@@489 T@U) ) (!  (=> (and (and (= (type $generated@@487) ($generated@@274 $generated@@145)) (= (type $generated@@488) $generated@@64)) (= (type $generated@@489) ($generated@@76 $generated@@77 $generated@@78))) (= ($generated@@74 $generated@@487 ($generated@@481 $generated@@488) $generated@@489) (forall (($generated@@490 Int) ) (!  (=> (and (<= 0 $generated@@490) (< $generated@@490 ($generated@@273 $generated@@487))) ($generated@@260 ($generated@@482 $generated@@487 $generated@@490) $generated@@488 $generated@@489))
 :pattern ( ($generated@@482 $generated@@487 $generated@@490))
))))
 :pattern ( ($generated@@74 $generated@@487 ($generated@@481 $generated@@488) $generated@@489))
)))
(assert (forall (($generated@@492 Int) ) (! (= ($generated@@491 ($generated@@75 $generated@@492)) $generated@@492)
 :pattern ( ($generated@@75 $generated@@492))
)))
(assert (forall (($generated@@494 T@U) ) (! (= (type ($generated@@493 $generated@@494)) $generated@@64)
 :pattern ( ($generated@@493 $generated@@494))
)))
(assert (forall (($generated@@495 T@U) ) (!  (=> (= (type $generated@@495) $generated@@64) (= ($generated@@493 ($generated@@242 $generated@@495)) $generated@@495))
 :pattern ( ($generated@@242 $generated@@495))
)))
(assert (forall (($generated@@496 T@U) ) (!  (=> (= (type $generated@@496) $generated@@64) (= ($generated@@72 ($generated@@242 $generated@@496)) $generated@@54))
 :pattern ( ($generated@@242 $generated@@496))
)))
(assert (forall (($generated@@498 T@U) ) (! (= (type ($generated@@497 $generated@@498)) $generated@@64)
 :pattern ( ($generated@@497 $generated@@498))
)))
(assert (forall (($generated@@499 T@U) ) (!  (=> (= (type $generated@@499) $generated@@64) (= ($generated@@497 ($generated@@247 $generated@@499)) $generated@@499))
 :pattern ( ($generated@@247 $generated@@499))
)))
(assert (forall (($generated@@500 T@U) ) (!  (=> (= (type $generated@@500) $generated@@64) (= ($generated@@72 ($generated@@247 $generated@@500)) $generated@@55))
 :pattern ( ($generated@@247 $generated@@500))
)))
(assert (forall (($generated@@502 T@U) ) (! (= (type ($generated@@501 $generated@@502)) $generated@@64)
 :pattern ( ($generated@@501 $generated@@502))
)))
(assert (forall (($generated@@503 T@U) ) (!  (=> (= (type $generated@@503) $generated@@64) (= ($generated@@501 ($generated@@150 $generated@@503)) $generated@@503))
 :pattern ( ($generated@@150 $generated@@503))
)))
(assert (forall (($generated@@504 T@U) ) (!  (=> (= (type $generated@@504) $generated@@64) (= ($generated@@72 ($generated@@150 $generated@@504)) $generated@@56))
 :pattern ( ($generated@@150 $generated@@504))
)))
(assert (forall (($generated@@506 T@U) ) (! (= (type ($generated@@505 $generated@@506)) $generated@@64)
 :pattern ( ($generated@@505 $generated@@506))
)))
(assert (forall (($generated@@507 T@U) ) (!  (=> (= (type $generated@@507) $generated@@64) (= ($generated@@505 ($generated@@481 $generated@@507)) $generated@@507))
 :pattern ( ($generated@@481 $generated@@507))
)))
(assert (forall (($generated@@508 T@U) ) (!  (=> (= (type $generated@@508) $generated@@64) (= ($generated@@72 ($generated@@481 $generated@@508)) $generated@@57))
 :pattern ( ($generated@@481 $generated@@508))
)))
(assert (forall (($generated@@509 T@U) ) (! (let (($generated@@510 (type $generated@@509)))
(= ($generated@@366 $generated@@510 ($generated@@280 $generated@@509)) $generated@@509))
 :pattern ( ($generated@@280 $generated@@509))
)))
(assert (forall (($generated@@511 T@U) ($generated@@512 T@U) ($generated@@513 T@U) ) (!  (=> (and (and (= (type $generated@@511) ($generated@@293 $generated@@145 $generated@@145)) (= (type $generated@@512) $generated@@64)) (= (type $generated@@513) $generated@@64)) (= ($generated@@132 $generated@@511 ($generated@@394 $generated@@512 $generated@@513)) (forall (($generated@@514 T@U) ) (!  (=> (and (= (type $generated@@514) $generated@@145) ($generated@@0 ($generated@@81 ($generated@@291 $generated@@511) $generated@@514))) (and ($generated@@233 ($generated@@81 ($generated@@367 $generated@@511) $generated@@514) $generated@@513) ($generated@@233 $generated@@514 $generated@@512)))
 :pattern ( ($generated@@81 ($generated@@367 $generated@@511) $generated@@514))
 :pattern ( ($generated@@81 ($generated@@291 $generated@@511) $generated@@514))
))))
 :pattern ( ($generated@@132 $generated@@511 ($generated@@394 $generated@@512 $generated@@513)))
)))
(assert (forall (($generated@@515 T@U) ($generated@@516 T@U) ($generated@@517 T@U) ) (!  (=> (and (and (= (type $generated@@515) ($generated@@311 $generated@@145 $generated@@145)) (= (type $generated@@516) $generated@@64)) (= (type $generated@@517) $generated@@64)) (= ($generated@@132 $generated@@515 ($generated@@402 $generated@@516 $generated@@517)) (forall (($generated@@518 T@U) ) (!  (=> (and (= (type $generated@@518) $generated@@145) ($generated@@0 ($generated@@81 ($generated@@309 $generated@@515) $generated@@518))) (and ($generated@@233 ($generated@@81 ($generated@@377 $generated@@515) $generated@@518) $generated@@517) ($generated@@233 $generated@@518 $generated@@516)))
 :pattern ( ($generated@@81 ($generated@@377 $generated@@515) $generated@@518))
 :pattern ( ($generated@@81 ($generated@@309 $generated@@515) $generated@@518))
))))
 :pattern ( ($generated@@132 $generated@@515 ($generated@@402 $generated@@516 $generated@@517)))
)))
(assert  (=> (<= 0 $generated@@223) (forall (($generated@@519 T@U) ($generated@@520 Int) ) (!  (=> (and (= (type $generated@@519) $generated@@227) (or ($generated@@228 $generated@@520) (not (= 0 $generated@@223)))) (and ($generated@@228 $generated@@520) (= ($generated@@224 ($generated@@225 $generated@@519) $generated@@520) (+ ($generated@@224 $generated@@519 $generated@@520) 1))))
 :pattern ( ($generated@@224 ($generated@@225 $generated@@519) $generated@@520))
))))
(assert (forall (($generated@@523 T@U) ($generated@@524 T@U) ) (!  (=> (and (= (type $generated@@523) $generated@@145) (= (type $generated@@524) $generated@@145)) (< ($generated@@521 $generated@@523) ($generated@@522 ($generated@@232 $generated@@523 $generated@@524))))
 :pattern ( ($generated@@232 $generated@@523 $generated@@524))
)))
(assert (forall (($generated@@525 T@U) ($generated@@526 T@U) ) (!  (=> (and (= (type $generated@@525) $generated@@145) (= (type $generated@@526) $generated@@145)) (< ($generated@@521 $generated@@526) ($generated@@522 ($generated@@232 $generated@@525 $generated@@526))))
 :pattern ( ($generated@@232 $generated@@525 $generated@@526))
)))
(assert (forall (($generated@@527 T@U) ($generated@@528 Int) ) (!  (=> (= (type $generated@@527) $generated@@227) (= ($generated@@224 ($generated@@225 $generated@@527) $generated@@528) ($generated@@224 $generated@@527 $generated@@528)))
 :pattern ( ($generated@@224 ($generated@@225 $generated@@527) $generated@@528))
)))
(assert (forall (($generated@@529 T@U) ($generated@@530 T@U) ($generated@@531 T@U) ) (!  (=> (and (and (and (= (type $generated@@529) $generated@@145) (= (type $generated@@530) $generated@@64)) (= (type $generated@@531) $generated@@64)) ($generated@@233 $generated@@529 ($generated@@394 $generated@@530 $generated@@531))) (and (= ($generated@@280 ($generated@@366 ($generated@@293 $generated@@145 $generated@@145) $generated@@529)) $generated@@529) ($generated@@132 ($generated@@366 ($generated@@293 $generated@@145 $generated@@145) $generated@@529) ($generated@@394 $generated@@530 $generated@@531))))
 :pattern ( ($generated@@233 $generated@@529 ($generated@@394 $generated@@530 $generated@@531)))
)))
(assert (forall (($generated@@532 T@U) ($generated@@533 T@U) ($generated@@534 T@U) ) (!  (=> (and (and (and (= (type $generated@@532) $generated@@145) (= (type $generated@@533) $generated@@64)) (= (type $generated@@534) $generated@@64)) ($generated@@233 $generated@@532 ($generated@@402 $generated@@533 $generated@@534))) (and (= ($generated@@280 ($generated@@366 ($generated@@311 $generated@@145 $generated@@145) $generated@@532)) $generated@@532) ($generated@@132 ($generated@@366 ($generated@@311 $generated@@145 $generated@@145) $generated@@532) ($generated@@402 $generated@@533 $generated@@534))))
 :pattern ( ($generated@@233 $generated@@532 ($generated@@402 $generated@@533 $generated@@534)))
)))
(assert (forall (($generated@@535 T@U) ($generated@@536 T@U) ($generated@@537 T@U) ) (!  (=> (and (and (and (= (type $generated@@535) $generated@@64) (= (type $generated@@536) $generated@@64)) (= (type $generated@@537) $generated@@145)) ($generated@@233 $generated@@537 ($generated@@135 $generated@@535 $generated@@536))) (and (= ($generated@@280 ($generated@@366 $generated@@136 $generated@@537)) $generated@@537) ($generated@@132 ($generated@@366 $generated@@136 $generated@@537) ($generated@@135 $generated@@535 $generated@@536))))
 :pattern ( ($generated@@233 $generated@@537 ($generated@@135 $generated@@535 $generated@@536)))
)))
(assert (forall (($generated@@538 T@U) ) (! (let (($generated@@539 (type $generated@@538)))
 (not ($generated@@0 ($generated@@81 ($generated@@410 $generated@@539) $generated@@538))))
 :pattern ( (let (($generated@@539 (type $generated@@538)))
($generated@@81 ($generated@@410 $generated@@539) $generated@@538)))
)))
(assert (forall (($generated@@541 T@U) ) (! (= (type ($generated@@540 $generated@@541)) $generated@@69)
 :pattern ( ($generated@@540 $generated@@541))
)))
(assert (forall (($generated@@542 T@U) ($generated@@543 T@U) ) (!  (=> (and (= (type $generated@@542) $generated@@64) (= (type $generated@@543) $generated@@64)) (and (= ($generated@@72 ($generated@@135 $generated@@542 $generated@@543)) $generated@@62) (= ($generated@@540 ($generated@@135 $generated@@542 $generated@@543)) $generated@@63)))
 :pattern ( ($generated@@135 $generated@@542 $generated@@543))
)))
(assert (forall (($generated@@544 T@U) ) (!  (=> (= (type $generated@@544) $generated@@136) (= ($generated@@521 ($generated@@280 $generated@@544)) ($generated@@522 $generated@@544)))
 :pattern ( ($generated@@521 ($generated@@280 $generated@@544)))
)))
(assert (forall (($generated@@545 T@U) ) (!  (=> (and (= (type $generated@@545) $generated@@145) ($generated@@233 $generated@@545 ($generated@@75 0))) (and (= ($generated@@280 ($generated@@366 $generated@@2 $generated@@545)) $generated@@545) ($generated@@132 ($generated@@366 ($generated@@76 $generated@@145 $generated@@4) $generated@@545) ($generated@@75 0))))
 :pattern ( ($generated@@233 $generated@@545 ($generated@@75 0)))
)))
(assert (forall (($generated@@546 T@U) ($generated@@547 T@U) ) (!  (=> (and (and (= (type $generated@@546) $generated@@145) (= (type $generated@@547) $generated@@64)) ($generated@@233 $generated@@546 ($generated@@242 $generated@@547))) (and (= ($generated@@280 ($generated@@366 ($generated@@76 $generated@@145 $generated@@4) $generated@@546)) $generated@@546) ($generated@@132 ($generated@@366 ($generated@@76 $generated@@145 $generated@@4) $generated@@546) ($generated@@242 $generated@@547))))
 :pattern ( ($generated@@233 $generated@@546 ($generated@@242 $generated@@547)))
)))
(assert (forall (($generated@@548 T@U) ($generated@@549 T@U) ) (!  (=> (and (and (= (type $generated@@548) $generated@@145) (= (type $generated@@549) $generated@@64)) ($generated@@233 $generated@@548 ($generated@@247 $generated@@549))) (and (= ($generated@@280 ($generated@@366 ($generated@@76 $generated@@145 $generated@@4) $generated@@548)) $generated@@548) ($generated@@132 ($generated@@366 ($generated@@76 $generated@@145 $generated@@4) $generated@@548) ($generated@@247 $generated@@549))))
 :pattern ( ($generated@@233 $generated@@548 ($generated@@247 $generated@@549)))
)))
(assert (forall (($generated@@550 T@U) ($generated@@551 T@U) ) (!  (=> (and (and (= (type $generated@@550) $generated@@145) (= (type $generated@@551) $generated@@64)) ($generated@@233 $generated@@550 ($generated@@150 $generated@@551))) (and (= ($generated@@280 ($generated@@366 ($generated@@76 $generated@@145 $generated@@2) $generated@@550)) $generated@@550) ($generated@@132 ($generated@@366 ($generated@@76 $generated@@145 $generated@@2) $generated@@550) ($generated@@150 $generated@@551))))
 :pattern ( ($generated@@233 $generated@@550 ($generated@@150 $generated@@551)))
)))
(assert (forall (($generated@@552 T@U) ($generated@@553 T@U) ) (!  (=> (and (and (= (type $generated@@552) $generated@@145) (= (type $generated@@553) $generated@@64)) ($generated@@233 $generated@@552 ($generated@@481 $generated@@553))) (and (= ($generated@@280 ($generated@@366 ($generated@@274 $generated@@145) $generated@@552)) $generated@@552) ($generated@@132 ($generated@@366 ($generated@@274 $generated@@145) $generated@@552) ($generated@@481 $generated@@553))))
 :pattern ( ($generated@@233 $generated@@552 ($generated@@481 $generated@@553)))
)))
(assert (forall (($generated@@554 T@U) ($generated@@555 T@U) ($generated@@556 T@U) ) (!  (=> (and (and (= (type $generated@@554) ($generated@@76 $generated@@145 $generated@@2)) (= (type $generated@@555) $generated@@64)) (= (type $generated@@556) ($generated@@76 $generated@@77 $generated@@78))) (= ($generated@@74 $generated@@554 ($generated@@150 $generated@@555) $generated@@556) (forall (($generated@@557 T@U) ) (!  (=> (and (= (type $generated@@557) $generated@@145) (< 0 ($generated ($generated@@81 $generated@@554 $generated@@557)))) ($generated@@260 $generated@@557 $generated@@555 $generated@@556))
 :pattern ( ($generated@@81 $generated@@554 $generated@@557))
))))
 :pattern ( ($generated@@74 $generated@@554 ($generated@@150 $generated@@555) $generated@@556))
)))
(assert (forall (($generated@@558 T@U) ($generated@@559 T@U) ($generated@@560 T@U) ) (!  (=> (and (and (and (= (type $generated@@558) $generated@@136) (= (type $generated@@559) $generated@@64)) (= (type $generated@@560) ($generated@@76 $generated@@77 $generated@@78))) (and ($generated@@259 $generated@@560) (and ($generated@@134 $generated@@558) (exists (($generated@@561 T@U) ) (!  (and (= (type $generated@@561) $generated@@64) ($generated@@74 $generated@@558 ($generated@@135 $generated@@559 $generated@@561) $generated@@560))
 :pattern ( ($generated@@74 $generated@@558 ($generated@@135 $generated@@559 $generated@@561) $generated@@560))
))))) ($generated@@260 ($generated@@143 $generated@@558) $generated@@559 $generated@@560))
 :pattern ( ($generated@@260 ($generated@@143 $generated@@558) $generated@@559 $generated@@560))
)))
(assert (forall (($generated@@562 T@U) ($generated@@563 T@U) ($generated@@564 T@U) ) (!  (=> (and (and (and (= (type $generated@@562) $generated@@136) (= (type $generated@@563) $generated@@64)) (= (type $generated@@564) ($generated@@76 $generated@@77 $generated@@78))) (and ($generated@@259 $generated@@564) (and ($generated@@134 $generated@@562) (exists (($generated@@565 T@U) ) (!  (and (= (type $generated@@565) $generated@@64) ($generated@@74 $generated@@562 ($generated@@135 $generated@@565 $generated@@563) $generated@@564))
 :pattern ( ($generated@@74 $generated@@562 ($generated@@135 $generated@@565 $generated@@563) $generated@@564))
))))) ($generated@@260 ($generated@@144 $generated@@562) $generated@@563 $generated@@564))
 :pattern ( ($generated@@260 ($generated@@144 $generated@@562) $generated@@563 $generated@@564))
)))
(assert (forall (($generated@@566 T@U) ($generated@@567 T@U) ) (!  (=> (and (= (type $generated@@566) $generated@@145) (= (type $generated@@567) $generated@@145)) (= ($generated@@232 ($generated@@253 $generated@@566) ($generated@@253 $generated@@567)) ($generated@@253 ($generated@@232 $generated@@566 $generated@@567))))
 :pattern ( ($generated@@232 ($generated@@253 $generated@@566) ($generated@@253 $generated@@567)))
)))
(assert (forall (($generated@@568 Int) ) (! (= ($generated@@280 ($generated@@8 ($generated@@226 $generated@@568))) ($generated@@253 ($generated@@280 ($generated@@8 $generated@@568))))
 :pattern ( ($generated@@280 ($generated@@8 ($generated@@226 $generated@@568))))
)))
(assert (forall (($generated@@569 T@U) ) (! (= ($generated@@280 ($generated@@253 $generated@@569)) ($generated@@253 ($generated@@280 $generated@@569)))
 :pattern ( ($generated@@280 ($generated@@253 $generated@@569)))
)))
(assert (forall (($generated@@570 T@U) ) (! (let (($generated@@571 ($generated@@275 (type $generated@@570))))
 (=> (and (= (type $generated@@570) ($generated@@274 $generated@@571)) (= ($generated@@273 $generated@@570) 0)) (= $generated@@570 ($generated@@272 $generated@@571))))
 :pattern ( ($generated@@273 $generated@@570))
)))
(assert (forall (($generated@@572 T@U) ($generated@@573 T@U) ($generated@@574 T@U) ) (! (let (($generated@@575 (type $generated@@573)))
 (=> (and (and (= (type $generated@@572) ($generated@@76 $generated@@575 $generated@@2)) (= (type $generated@@574) $generated@@2)) (<= 0 ($generated $generated@@574))) (= ($generated@@285 ($generated@@82 $generated@@572 $generated@@573 $generated@@574)) (+ (- ($generated@@285 $generated@@572) ($generated ($generated@@81 $generated@@572 $generated@@573))) ($generated $generated@@574)))))
 :pattern ( ($generated@@285 ($generated@@82 $generated@@572 $generated@@573 $generated@@574)))
)))
(assert (forall (($generated@@576 T@U) ($generated@@577 T@U) ) (!  (=> (and (= (type $generated@@576) ($generated@@76 $generated@@77 $generated@@78)) (= (type $generated@@577) $generated@@2)) ($generated@@74 $generated@@577 $generated@@46 $generated@@576))
 :pattern ( ($generated@@74 $generated@@577 $generated@@46 $generated@@576))
)))
(assert (forall (($generated@@578 T@U) ($generated@@579 T@U) ) (!  (=> (and (= (type $generated@@578) ($generated@@76 $generated@@77 $generated@@78)) (= (type $generated@@579) $generated@@3)) ($generated@@74 $generated@@579 $generated@@47 $generated@@578))
 :pattern ( ($generated@@74 $generated@@579 $generated@@47 $generated@@578))
)))
(assert (forall (($generated@@580 T@U) ($generated@@581 T@U) ) (!  (=> (and (= (type $generated@@580) ($generated@@76 $generated@@77 $generated@@78)) (= (type $generated@@581) $generated@@4)) ($generated@@74 $generated@@581 $generated@@44 $generated@@580))
 :pattern ( ($generated@@74 $generated@@581 $generated@@44 $generated@@580))
)))
(assert (forall (($generated@@582 T@U) ($generated@@583 T@U) ) (!  (=> (and (= (type $generated@@582) ($generated@@76 $generated@@77 $generated@@78)) (= (type $generated@@583) $generated@@434)) ($generated@@74 $generated@@583 $generated@@45 $generated@@582))
 :pattern ( ($generated@@74 $generated@@583 $generated@@45 $generated@@582))
)))
(assert (forall (($generated@@584 T@U) ($generated@@585 T@U) ) (!  (=> (and (= (type $generated@@584) ($generated@@76 $generated@@77 $generated@@78)) (= (type $generated@@585) $generated@@145)) ($generated@@74 $generated@@585 $generated@@48 $generated@@584))
 :pattern ( ($generated@@74 $generated@@585 $generated@@48 $generated@@584))
)))
(assert (forall (($generated@@586 T@U) ($generated@@587 T@U) ) (!  (=> (and (= (type $generated@@586) ($generated@@274 $generated@@145)) (= (type $generated@@587) $generated@@64)) (= ($generated@@132 $generated@@586 ($generated@@481 $generated@@587)) (forall (($generated@@588 Int) ) (!  (=> (and (<= 0 $generated@@588) (< $generated@@588 ($generated@@273 $generated@@586))) ($generated@@233 ($generated@@482 $generated@@586 $generated@@588) $generated@@587))
 :pattern ( ($generated@@482 $generated@@586 $generated@@588))
))))
 :pattern ( ($generated@@132 $generated@@586 ($generated@@481 $generated@@587)))
)))
(assert (forall (($generated@@590 T@U) ($generated@@591 Int) ) (!  (=> (= (type $generated@@590) ($generated@@274 $generated@@145)) (=> (and (<= 0 $generated@@591) (< $generated@@591 ($generated@@273 $generated@@590))) (< ($generated@@522 ($generated@@366 $generated@@136 ($generated@@482 $generated@@590 $generated@@591))) ($generated@@589 $generated@@590))))
 :pattern ( ($generated@@522 ($generated@@366 $generated@@136 ($generated@@482 $generated@@590 $generated@@591))))
)))
(assert (forall (($generated@@592 T@U) ($generated@@593 T@U) ($generated@@594 T@U) ) (!  (=> (and (and (and (= (type $generated@@592) ($generated@@293 $generated@@145 $generated@@145)) (= (type $generated@@593) $generated@@64)) (= (type $generated@@594) $generated@@64)) ($generated@@132 $generated@@592 ($generated@@394 $generated@@593 $generated@@594))) (and (and ($generated@@132 ($generated@@291 $generated@@592) ($generated@@242 $generated@@593)) ($generated@@132 ($generated@@334 $generated@@592) ($generated@@242 $generated@@594))) ($generated@@132 ($generated@@365 $generated@@592) ($generated@@242 ($generated@@135 $generated@@593 $generated@@594)))))
 :pattern ( ($generated@@132 $generated@@592 ($generated@@394 $generated@@593 $generated@@594)))
)))
(assert (forall (($generated@@595 T@U) ($generated@@596 T@U) ($generated@@597 T@U) ) (!  (=> (and (and (and (= (type $generated@@595) ($generated@@311 $generated@@145 $generated@@145)) (= (type $generated@@596) $generated@@64)) (= (type $generated@@597) $generated@@64)) ($generated@@132 $generated@@595 ($generated@@402 $generated@@596 $generated@@597))) (and (and ($generated@@132 ($generated@@309 $generated@@595) ($generated@@247 $generated@@596)) ($generated@@132 ($generated@@345 $generated@@595) ($generated@@247 $generated@@597))) ($generated@@132 ($generated@@376 $generated@@595) ($generated@@247 ($generated@@135 $generated@@596 $generated@@597)))))
 :pattern ( ($generated@@132 $generated@@595 ($generated@@402 $generated@@596 $generated@@597)))
)))
(assert (forall (($generated@@598 T@U) ) (!  (=> (= (type $generated@@598) $generated@@2) ($generated@@132 $generated@@598 $generated@@46))
 :pattern ( ($generated@@132 $generated@@598 $generated@@46))
)))
(assert (forall (($generated@@599 T@U) ) (!  (=> (= (type $generated@@599) $generated@@3) ($generated@@132 $generated@@599 $generated@@47))
 :pattern ( ($generated@@132 $generated@@599 $generated@@47))
)))
(assert (forall (($generated@@600 T@U) ) (!  (=> (= (type $generated@@600) $generated@@4) ($generated@@132 $generated@@600 $generated@@44))
 :pattern ( ($generated@@132 $generated@@600 $generated@@44))
)))
(assert (forall (($generated@@601 T@U) ) (!  (=> (= (type $generated@@601) $generated@@434) ($generated@@132 $generated@@601 $generated@@45))
 :pattern ( ($generated@@132 $generated@@601 $generated@@45))
)))
(assert (forall (($generated@@602 T@U) ) (!  (=> (= (type $generated@@602) $generated@@145) ($generated@@132 $generated@@602 $generated@@48))
 :pattern ( ($generated@@132 $generated@@602 $generated@@48))
)))
(push 1)
(declare-fun ControlFlow (Int Int) Int)
(declare-fun $generated@@603 () T@U)
(declare-fun $generated@@604 () T@U)
(declare-fun $generated@@605 () T@U)
(declare-fun $generated@@606 () Int)
(declare-fun $generated@@607 () T@U)
(declare-fun $generated@@608 (T@U) Bool)
(assert  (and (and (and (= (type $generated@@603) ($generated@@157 $generated@@77 $generated@@4)) (= (type $generated@@604) $generated@@77)) (= (type $generated@@605) ($generated@@76 $generated@@77 $generated@@78))) (= (type $generated@@607) ($generated@@157 $generated@@77 $generated@@4))))
(set-option :timeout 0)
(set-option :rlimit 0)
(assert (not
 (=> (= (ControlFlow 0 0) 6) (let (($generated@@609  (=> (and (= $generated@@603 ($generated@@211 $generated@@604 $generated@@605 $generated@@60 false)) ($generated@@74 ($generated@@8 $generated@@606) $generated@@46 $generated@@605)) (and (=> (= (ControlFlow 0 3) (- 0 4)) (or (<= 0 $generated@@606) (= $generated@@606 $generated@@606))) (=> (or (<= 0 $generated@@606) (= $generated@@606 $generated@@606)) (=> (= (ControlFlow 0 3) (- 0 2)) (< $generated@@606 $generated@@606)))))))
(let (($generated@@610 true))
(let (($generated@@611  (=> (= $generated@@607 ($generated@@156 $generated@@604 $generated@@605 $generated@@60 false)) (and (=> (= (ControlFlow 0 5) 1) $generated@@610) (=> (= (ControlFlow 0 5) 3) $generated@@609)))))
(let (($generated@@612  (=> (and (and ($generated@@259 $generated@@605) ($generated@@608 $generated@@605)) (and (= 0 $generated@@223) (= (ControlFlow 0 6) 5))) $generated@@611)))
$generated@@612)))))
))
(check-sat)
(get-info :reason-unknown)
(assert (not (= (ControlFlow 0 3) (- 2))))
(check-sat)
(pop 1)
; Invalid
(get-info :rlimit)
(reset)
(set-option :rlimit 0)
; did a full reset
(reset)
(set-option :print-success false)
(set-info :smt-lib-version 2.6)
(set-option :auto_config false)
(set-option :type_check true)
(set-option :smt.case_split 3)
(set-option :smt.qi.eager_threshold 100)
(set-option :smt.delay_units true)
(set-option :smt.arith.solver 2)
(set-option :smt.mbqi false)
(set-option :model.compact false)
(set-option :model.v2 true)
(set-option :pp.bv_literals false)
; done setting options


(set-info :category "industrial")
(declare-sort |T@U| 0)
(declare-sort |T@T| 0)
(declare-fun real_pow (Real Real) Real)
(declare-fun UOrdering2 (|T@U| |T@U|) Bool)
(declare-fun UOrdering3 (|T@T| |T@U| |T@U|) Bool)
(declare-fun tickleBool (Bool) Bool)
(assert (and (tickleBool true) (tickleBool false)))
(declare-fun $generated (T@U) Int)
(declare-fun $generated@@0 (T@U) Bool)
(declare-fun $generated@@1 (T@T) Int)
(declare-fun $generated@@2 () T@T)
(declare-fun $generated@@3 () T@T)
(declare-fun $generated@@4 () T@T)
(declare-fun $generated@@5 () T@T)
(declare-fun $generated@@6 () T@T)
(declare-fun $generated@@7 () T@T)
(declare-fun $generated@@8 (Int) T@U)
(declare-fun type (T@U) T@T)
(declare-fun $generated@@9 (Real) T@U)
(declare-fun $generated@@10 (T@U) Real)
(declare-fun $generated@@11 (Bool) T@U)
(declare-fun $generated@@12 (RoundingMode) T@U)
(declare-fun $generated@@13 (T@U) RoundingMode)
(declare-fun $generated@@14 (String) T@U)
(declare-fun $generated@@15 (T@U) String)
(declare-fun $generated@@16 ((RegEx String)) T@U)
(declare-fun $generated@@17 (T@U) (RegEx String))
(declare-fun $generated@@44 () T@U)
(declare-fun $generated@@45 () T@U)
(declare-fun $generated@@46 () T@U)
(declare-fun $generated@@47 () T@U)
(declare-fun $generated@@48 () T@U)
(declare-fun $generated@@49 () T@U)
(declare-fun $generated@@50 () T@U)
(declare-fun $generated@@51 () T@U)
(declare-fun $generated@@52 () T@U)
(declare-fun $generated@@53 () T@U)
(declare-fun $generated@@54 () T@U)
(declare-fun $generated@@55 () T@U)
(declare-fun $generated@@56 () T@U)
(declare-fun $generated@@57 () T@U)
(declare-fun $generated@@58 () T@U)
(declare-fun $generated@@59 () T@U)
(declare-fun $generated@@60 () T@U)
(declare-fun $generated@@61 () T@T)
(declare-fun $generated@@62 () T@T)
(declare-fun $generated@@63 (T@T) T@T)
(declare-fun $generated@@64 (T@T) T@T)
(declare-fun $generated@@67 (T@U) T@U)
(declare-fun $generated@@69 (T@U T@U T@U) Bool)
(declare-fun $generated@@70 (Int) T@U)
(declare-fun $generated@@71 (T@T T@T) T@T)
(declare-fun $generated@@72 () T@T)
(declare-fun $generated@@73 () T@T)
(declare-fun $generated@@74 (T@T) T@T)
(declare-fun $generated@@75 (T@T) T@T)
(declare-fun $generated@@76 (T@U T@U) T@U)
(declare-fun $generated@@77 (T@U T@U T@U) T@U)
(declare-fun $generated@@78 (T@U T@U) T@U)
(declare-fun $generated@@79 (T@U T@U T@U) T@U)
(declare-fun $generated@@127 (T@U T@U T@U) T@U)
(declare-fun $generated@@128 (T@U T@U T@U Bool) T@U)
(declare-fun $generated@@129 (T@T T@T) T@T)
(declare-fun $generated@@130 (T@T) T@T)
(declare-fun $generated@@131 (T@T) T@T)
(declare-fun $generated@@132 (T@U T@U T@U T@U) T@U)
(declare-fun $generated@@183 () Int)
(declare-fun $generated@@184 (T@U Int) Int)
(declare-fun $generated@@185 (T@U) T@U)
(declare-fun $generated@@186 (Int) Int)
(declare-fun $generated@@187 () T@T)
(declare-fun $generated@@188 (Int) Bool)
(declare-fun $generated@@193 (T@U) T@U)
(declare-fun $generated@@199 (T@T) T@U)
(declare-fun $generated@@200 (T@U) Int)
(declare-fun $generated@@201 (T@T) T@T)
(declare-fun $generated@@202 (T@T) T@T)
(declare-fun $generated@@207 (T@U T@U T@U) Bool)
(declare-fun $generated@@208 (T@U) T@U)
(declare-fun $generated@@209 () T@T)
(declare-fun $generated@@214 (T@U) T@U)
(declare-fun $generated@@215 (T@T T@T) T@U)
(declare-fun $generated@@216 (T@T T@T) T@T)
(declare-fun $generated@@217 (T@T) T@T)
(declare-fun $generated@@218 (T@T) T@T)
(declare-fun $generated@@232 (T@U) T@U)
(declare-fun $generated@@233 (T@T T@T) T@U)
(declare-fun $generated@@234 (T@T T@T) T@T)
(declare-fun $generated@@235 (T@T) T@T)
(declare-fun $generated@@236 (T@T) T@T)
(declare-fun $generated@@258 (T@U) T@U)
(declare-fun $generated@@264 (T@U) T@U)
(declare-fun $generated@@270 (T@U T@U) T@U)
(declare-fun $generated@@271 (T@U) T@U)
(declare-fun $generated@@282 (T@U T@U) T@U)
(declare-fun $generated@@283 (T@U) T@U)
(declare-fun $generated@@294 (T@T) T@U)
(declare-fun $generated@@301 (T@U) T@U)
(declare-fun $generated@@305 (T@U) T@U)
(declare-fun $generated@@311 (T@U) T@U)
(declare-fun $generated@@315 (T@U) T@U)
(declare-fun $generated@@321 (T@U) T@U)
(declare-fun $generated@@322 () T@U)
(declare-fun $generated@@326 (T@U) T@U)
(declare-fun $generated@@327 (T@U Int) T@U)
(declare-fun $generated@@336 (T@U) Int)
(declare-fun $generated@@338 (T@U) T@U)
(declare-fun $generated@@342 (T@U) T@U)
(declare-fun $generated@@346 (T@U) T@U)
(declare-fun $generated@@347 (T@U) T@U)
(declare-fun $generated@@352 (T@U) T@U)
(declare-fun $generated@@356 (T@T T@U) T@U)
(declare-fun $generated@@381 () T@T)
(assert  (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (= ($generated@@1 $generated@@2) 0) (= ($generated@@1 $generated@@3) 1)) (= ($generated@@1 $generated@@4) 2)) (= ($generated@@1 $generated@@5) 3)) (= ($generated@@1 $generated@@6) 4)) (= ($generated@@1 $generated@@7) 5)) (forall (($generated@@18 Int) ) (! (= ($generated ($generated@@8 $generated@@18)) $generated@@18)
 :pattern ( ($generated@@8 $generated@@18))
))) (forall (($generated@@19 T@U) ) (!  (=> (= (type $generated@@19) $generated@@2) (= ($generated@@8 ($generated $generated@@19)) $generated@@19))
 :pattern ( ($generated $generated@@19))
))) (forall (($generated@@20 Int) ) (! (= (type ($generated@@8 $generated@@20)) $generated@@2)
 :pattern ( ($generated@@8 $generated@@20))
))) (forall (($generated@@21 Real) ) (! (= ($generated@@10 ($generated@@9 $generated@@21)) $generated@@21)
 :pattern ( ($generated@@9 $generated@@21))
))) (forall (($generated@@22 T@U) ) (!  (=> (= (type $generated@@22) $generated@@3) (= ($generated@@9 ($generated@@10 $generated@@22)) $generated@@22))
 :pattern ( ($generated@@10 $generated@@22))
))) (forall (($generated@@23 Real) ) (! (= (type ($generated@@9 $generated@@23)) $generated@@3)
 :pattern ( ($generated@@9 $generated@@23))
))) (forall (($generated@@24 Bool) ) (! (= ($generated@@0 ($generated@@11 $generated@@24)) $generated@@24)
 :pattern ( ($generated@@11 $generated@@24))
))) (forall (($generated@@25 T@U) ) (!  (=> (= (type $generated@@25) $generated@@4) (= ($generated@@11 ($generated@@0 $generated@@25)) $generated@@25))
 :pattern ( ($generated@@0 $generated@@25))
))) (forall (($generated@@26 Bool) ) (! (= (type ($generated@@11 $generated@@26)) $generated@@4)
 :pattern ( ($generated@@11 $generated@@26))
))) (forall (($generated@@27 RoundingMode) ) (! (= ($generated@@13 ($generated@@12 $generated@@27)) $generated@@27)
 :pattern ( ($generated@@12 $generated@@27))
))) (forall (($generated@@28 T@U) ) (!  (=> (= (type $generated@@28) $generated@@5) (= ($generated@@12 ($generated@@13 $generated@@28)) $generated@@28))
 :pattern ( ($generated@@13 $generated@@28))
))) (forall (($generated@@29 RoundingMode) ) (! (= (type ($generated@@12 $generated@@29)) $generated@@5)
 :pattern ( ($generated@@12 $generated@@29))
))) (forall (($generated@@30 String) ) (! (= ($generated@@15 ($generated@@14 $generated@@30)) $generated@@30)
 :pattern ( ($generated@@14 $generated@@30))
))) (forall (($generated@@31 T@U) ) (!  (=> (= (type $generated@@31) $generated@@6) (= ($generated@@14 ($generated@@15 $generated@@31)) $generated@@31))
 :pattern ( ($generated@@15 $generated@@31))
))) (forall (($generated@@32 String) ) (! (= (type ($generated@@14 $generated@@32)) $generated@@6)
 :pattern ( ($generated@@14 $generated@@32))
))) (forall (($generated@@33 (RegEx String)) ) (! (= ($generated@@17 ($generated@@16 $generated@@33)) $generated@@33)
 :pattern ( ($generated@@16 $generated@@33))
))) (forall (($generated@@34 T@U) ) (!  (=> (= (type $generated@@34) $generated@@7) (= ($generated@@16 ($generated@@17 $generated@@34)) $generated@@34))
 :pattern ( ($generated@@17 $generated@@34))
))) (forall (($generated@@35 (RegEx String)) ) (! (= (type ($generated@@16 $generated@@35)) $generated@@7)
 :pattern ( ($generated@@16 $generated@@35))
))))
(assert (forall (($generated@@36 T@U) ) (! (UOrdering2 $generated@@36 $generated@@36)
 :no-pattern ($generated $generated@@36)
 :no-pattern ($generated@@0 $generated@@36)
)))
(assert (forall (($generated@@37 T@U) ($generated@@38 T@U) ($generated@@39 T@U) ) (! (let (($generated@@40 (type $generated@@37)))
 (=> (and (and (= (type $generated@@38) $generated@@40) (= (type $generated@@39) $generated@@40)) (and (UOrdering2 $generated@@37 $generated@@38) (UOrdering2 $generated@@38 $generated@@39))) (UOrdering2 $generated@@37 $generated@@39)))
 :pattern ( (UOrdering2 $generated@@37 $generated@@38) (UOrdering2 $generated@@38 $generated@@39))
)))
(assert (forall (($generated@@41 T@U) ($generated@@42 T@U) ) (! (let (($generated@@43 (type $generated@@41)))
 (=> (= (type $generated@@42) $generated@@43) (=> (and (UOrdering2 $generated@@41 $generated@@42) (UOrdering2 $generated@@42 $generated@@41)) (= $generated@@41 $generated@@42))))
 :pattern ( (UOrdering2 $generated@@41 $generated@@42) (UOrdering2 $generated@@42 $generated@@41))
)))
(assert  (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (= ($generated@@1 $generated@@61) 6) (= (type $generated@@44) $generated@@61)) (= (type $generated@@45) $generated@@61)) (= (type $generated@@46) $generated@@61)) (= (type $generated@@47) $generated@@61)) (= (type $generated@@48) $generated@@61)) (= ($generated@@1 $generated@@62) 7)) (= (type $generated@@49) $generated@@62)) (= (type $generated@@50) $generated@@62)) (= (type $generated@@51) $generated@@62)) (= (type $generated@@52) $generated@@62)) (= (type $generated@@53) $generated@@62)) (= (type $generated@@54) $generated@@62)) (= (type $generated@@55) $generated@@62)) (= (type $generated@@56) $generated@@62)) (= (type $generated@@57) $generated@@62)) (= (type $generated@@58) $generated@@62)) (= (type $generated@@59) $generated@@62)) (forall (($generated@@65 T@T) ) (= ($generated@@1 ($generated@@63 $generated@@65)) 8))) (forall (($generated@@66 T@T) ) (! (= ($generated@@64 ($generated@@63 $generated@@66)) $generated@@66)
 :pattern ( ($generated@@63 $generated@@66))
))) (= (type $generated@@60) ($generated@@63 $generated@@4))))
(assert (distinct $generated@@44 $generated@@45 $generated@@46 $generated@@47 $generated@@48 $generated@@49 $generated@@50 $generated@@51 $generated@@52 $generated@@53 $generated@@54 $generated@@55 $generated@@56 $generated@@57 $generated@@58 $generated@@59 $generated@@60)
)
(assert (forall (($generated@@68 T@U) ) (! (= (type ($generated@@67 $generated@@68)) $generated@@62)
 :pattern ( ($generated@@67 $generated@@68))
)))
(assert (= ($generated@@67 $generated@@44) $generated@@49))
(assert (= ($generated@@67 $generated@@45) $generated@@50))
(assert (= ($generated@@67 $generated@@46) $generated@@51))
(assert (= ($generated@@67 $generated@@47) $generated@@52))
(assert (= ($generated@@67 $generated@@48) $generated@@53))
(assert  (and (and (and (and (and (and (and (and (and (and (and (and (and (forall (($generated@@80 T@T) ($generated@@81 T@T) ) (= ($generated@@1 ($generated@@71 $generated@@80 $generated@@81)) 9)) (forall (($generated@@82 T@T) ($generated@@83 T@T) ) (! (= ($generated@@74 ($generated@@71 $generated@@82 $generated@@83)) $generated@@82)
 :pattern ( ($generated@@71 $generated@@82 $generated@@83))
))) (forall (($generated@@84 T@T) ($generated@@85 T@T) ) (! (= ($generated@@75 ($generated@@71 $generated@@84 $generated@@85)) $generated@@85)
 :pattern ( ($generated@@71 $generated@@84 $generated@@85))
))) (forall (($generated@@86 T@U) ($generated@@87 T@U) ) (! (let (($generated@@88 ($generated@@75 (type $generated@@86))))
(= (type ($generated@@76 $generated@@86 $generated@@87)) $generated@@88))
 :pattern ( ($generated@@76 $generated@@86 $generated@@87))
))) (forall (($generated@@89 T@U) ($generated@@90 T@U) ($generated@@91 T@U) ) (! (let (($generated@@92 (type $generated@@91)))
(let (($generated@@93 (type $generated@@90)))
(= (type ($generated@@77 $generated@@89 $generated@@90 $generated@@91)) ($generated@@71 $generated@@93 $generated@@92))))
 :pattern ( ($generated@@77 $generated@@89 $generated@@90 $generated@@91))
))) (forall (($generated@@94 T@U) ($generated@@95 T@U) ($generated@@96 T@U) ) (! (let (($generated@@97 ($generated@@75 (type $generated@@94))))
 (=> (= (type $generated@@96) $generated@@97) (= ($generated@@76 ($generated@@77 $generated@@94 $generated@@95 $generated@@96) $generated@@95) $generated@@96)))
 :weight 0
))) (and (forall (($generated@@98 T@U) ($generated@@99 T@U) ($generated@@100 T@U) ($generated@@101 T@U) ) (!  (or (= $generated@@100 $generated@@101) (= ($generated@@76 ($generated@@77 $generated@@99 $generated@@100 $generated@@98) $generated@@101) ($generated@@76 $generated@@99 $generated@@101)))
 :weight 0
)) (forall (($generated@@102 T@U) ($generated@@103 T@U) ($generated@@104 T@U) ($generated@@105 T@U) ) (!  (or true (= ($generated@@76 ($generated@@77 $generated@@103 $generated@@104 $generated@@102) $generated@@105) ($generated@@76 $generated@@103 $generated@@105)))
 :weight 0
)))) (= ($generated@@1 $generated@@72) 10)) (forall (($generated@@106 T@U) ($generated@@107 T@U) ) (! (let (($generated@@108 ($generated@@64 (type $generated@@107))))
(= (type ($generated@@78 $generated@@106 $generated@@107)) $generated@@108))
 :pattern ( ($generated@@78 $generated@@106 $generated@@107))
))) (= ($generated@@1 $generated@@73) 11)) (forall (($generated@@109 T@U) ($generated@@110 T@U) ($generated@@111 T@U) ) (! (= (type ($generated@@79 $generated@@109 $generated@@110 $generated@@111)) $generated@@73)
 :pattern ( ($generated@@79 $generated@@109 $generated@@110 $generated@@111))
))) (forall (($generated@@112 T@U) ($generated@@113 T@U) ($generated@@114 T@U) ) (! (let (($generated@@115 ($generated@@64 (type $generated@@113))))
 (=> (= (type $generated@@114) $generated@@115) (= ($generated@@78 ($generated@@79 $generated@@112 $generated@@113 $generated@@114) $generated@@113) $generated@@114)))
 :weight 0
))) (and (forall (($generated@@116 T@U) ($generated@@117 T@U) ($generated@@118 T@U) ($generated@@119 T@U) ) (!  (or (= $generated@@118 $generated@@119) (= ($generated@@78 ($generated@@79 $generated@@117 $generated@@118 $generated@@116) $generated@@119) ($generated@@78 $generated@@117 $generated@@119)))
 :weight 0
)) (forall (($generated@@120 T@U) ($generated@@121 T@U) ($generated@@122 T@U) ($generated@@123 T@U) ) (!  (or true (= ($generated@@78 ($generated@@79 $generated@@121 $generated@@122 $generated@@120) $generated@@123) ($generated@@78 $generated@@121 $generated@@123)))
 :weight 0
)))) (forall (($generated@@124 Int) ) (! (= (type ($generated@@70 $generated@@124)) $generated@@61)
 :pattern ( ($generated@@70 $generated@@124))
))))
(assert (forall (($generated@@125 T@U) ($generated@@126 T@U) ) (!  (=> (and (= (type $generated@@125) $generated@@2) (= (type $generated@@126) ($generated@@71 $generated@@72 $generated@@73))) ($generated@@69 $generated@@125 ($generated@@70 0) $generated@@126))
 :pattern ( ($generated@@69 $generated@@125 ($generated@@70 0) $generated@@126))
)))
(assert  (and (and (and (and (and (and (and (forall (($generated@@133 T@T) ($generated@@134 T@T) ) (= ($generated@@1 ($generated@@129 $generated@@133 $generated@@134)) 12)) (forall (($generated@@135 T@T) ($generated@@136 T@T) ) (! (= ($generated@@130 ($generated@@129 $generated@@135 $generated@@136)) $generated@@135)
 :pattern ( ($generated@@129 $generated@@135 $generated@@136))
))) (forall (($generated@@137 T@T) ($generated@@138 T@T) ) (! (= ($generated@@131 ($generated@@129 $generated@@137 $generated@@138)) $generated@@138)
 :pattern ( ($generated@@129 $generated@@137 $generated@@138))
))) (forall (($generated@@139 T@U) ($generated@@140 T@U) ($generated@@141 T@U) ) (! (let (($generated@@142 ($generated@@131 (type $generated@@139))))
(= (type ($generated@@127 $generated@@139 $generated@@140 $generated@@141)) $generated@@142))
 :pattern ( ($generated@@127 $generated@@139 $generated@@140 $generated@@141))
))) (forall (($generated@@143 T@U) ($generated@@144 T@U) ($generated@@145 T@U) ($generated@@146 T@U) ) (! (let (($generated@@147 (type $generated@@146)))
(let (($generated@@148 (type $generated@@144)))
(= (type ($generated@@132 $generated@@143 $generated@@144 $generated@@145 $generated@@146)) ($generated@@129 $generated@@148 $generated@@147))))
 :pattern ( ($generated@@132 $generated@@143 $generated@@144 $generated@@145 $generated@@146))
))) (forall (($generated@@149 T@U) ($generated@@150 T@U) ($generated@@151 T@U) ($generated@@152 T@U) ) (! (let (($generated@@153 ($generated@@131 (type $generated@@149))))
 (=> (= (type $generated@@152) $generated@@153) (= ($generated@@127 ($generated@@132 $generated@@149 $generated@@150 $generated@@151 $generated@@152) $generated@@150 $generated@@151) $generated@@152)))
 :weight 0
))) (and (and (forall (($generated@@154 T@U) ($generated@@155 T@U) ($generated@@156 T@U) ($generated@@157 T@U) ($generated@@158 T@U) ($generated@@159 T@U) ) (!  (or (= $generated@@156 $generated@@158) (= ($generated@@127 ($generated@@132 $generated@@155 $generated@@156 $generated@@157 $generated@@154) $generated@@158 $generated@@159) ($generated@@127 $generated@@155 $generated@@158 $generated@@159)))
 :weight 0
)) (forall (($generated@@160 T@U) ($generated@@161 T@U) ($generated@@162 T@U) ($generated@@163 T@U) ($generated@@164 T@U) ($generated@@165 T@U) ) (!  (or (= $generated@@163 $generated@@165) (= ($generated@@127 ($generated@@132 $generated@@161 $generated@@162 $generated@@163 $generated@@160) $generated@@164 $generated@@165) ($generated@@127 $generated@@161 $generated@@164 $generated@@165)))
 :weight 0
))) (forall (($generated@@166 T@U) ($generated@@167 T@U) ($generated@@168 T@U) ($generated@@169 T@U) ($generated@@170 T@U) ($generated@@171 T@U) ) (!  (or true (= ($generated@@127 ($generated@@132 $generated@@167 $generated@@168 $generated@@169 $generated@@166) $generated@@170 $generated@@171) ($generated@@127 $generated@@167 $generated@@170 $generated@@171)))
 :weight 0
)))) (forall (($generated@@172 T@U) ($generated@@173 T@U) ($generated@@174 T@U) ($generated@@175 Bool) ) (! (= (type ($generated@@128 $generated@@172 $generated@@173 $generated@@174 $generated@@175)) ($generated@@129 $generated@@72 $generated@@4))
 :pattern ( ($generated@@128 $generated@@172 $generated@@173 $generated@@174 $generated@@175))
))))
(assert (forall (($generated@@176 T@U) ($generated@@177 T@U) ($generated@@178 T@U) ($generated@@179 Bool) ($generated@@180 T@U) ($generated@@181 T@U) ) (! (let (($generated@@182 ($generated@@64 (type $generated@@181))))
 (=> (and (and (and (and (= (type $generated@@176) $generated@@72) (= (type $generated@@177) ($generated@@71 $generated@@72 $generated@@73))) (= (type $generated@@178) ($generated@@63 $generated@@4))) (= (type $generated@@180) $generated@@72)) (= (type $generated@@181) ($generated@@63 $generated@@182))) (= ($generated@@0 ($generated@@127 ($generated@@128 $generated@@176 $generated@@177 $generated@@178 $generated@@179) $generated@@180 $generated@@181))  (=> (and (not (= $generated@@180 $generated@@176)) ($generated@@0 ($generated@@78 ($generated@@76 $generated@@177 $generated@@180) $generated@@178))) $generated@@179))))
 :pattern ( ($generated@@127 ($generated@@128 $generated@@176 $generated@@177 $generated@@178 $generated@@179) $generated@@180 $generated@@181))
)))
(assert  (and (= ($generated@@1 $generated@@187) 13) (forall (($generated@@189 T@U) ) (! (= (type ($generated@@185 $generated@@189)) $generated@@187)
 :pattern ( ($generated@@185 $generated@@189))
))))
(assert  (=> (<= 0 $generated@@183) (forall (($generated@@190 T@U) ($generated@@191 Int) ) (!  (=> (and (= (type $generated@@190) $generated@@187) (or ($generated@@188 ($generated@@186 $generated@@191)) (not (= 0 $generated@@183)))) (and ($generated@@188 ($generated@@186 $generated@@191)) (= ($generated@@184 ($generated@@185 $generated@@190) ($generated@@186 $generated@@191)) ($generated@@186 (+ ($generated@@184 ($generated@@185 $generated@@190) ($generated@@186 $generated@@191)) 1)))))
 :weight 3
 :pattern ( ($generated@@184 ($generated@@185 $generated@@190) ($generated@@186 $generated@@191)))
))))
(assert (forall (($generated@@192 Int) ) (! (= ($generated@@186 $generated@@192) $generated@@192)
 :pattern ( ($generated@@186 $generated@@192))
)))
(assert (forall (($generated@@194 T@U) ) (! (let (($generated@@195 (type $generated@@194)))
(= (type ($generated@@193 $generated@@194)) $generated@@195))
 :pattern ( ($generated@@193 $generated@@194))
)))
(assert (forall (($generated@@196 T@U) ) (! (= ($generated@@193 $generated@@196) $generated@@196)
 :pattern ( ($generated@@193 $generated@@196))
)))
(assert  (=> (<= 0 $generated@@183) (forall (($generated@@197 T@U) ($generated@@198 Int) ) (!  (=> (and (= (type $generated@@197) $generated@@187) (or ($generated@@188 $generated@@198) (not (= 0 $generated@@183)))) true)
 :pattern ( ($generated@@184 $generated@@197 $generated@@198))
))))
(assert  (and (and (forall (($generated@@203 T@T) ) (= ($generated@@1 ($generated@@201 $generated@@203)) 14)) (forall (($generated@@204 T@T) ) (! (= ($generated@@202 ($generated@@201 $generated@@204)) $generated@@204)
 :pattern ( ($generated@@201 $generated@@204))
))) (forall (($generated@@205 T@T) ) (! (= (type ($generated@@199 $generated@@205)) ($generated@@201 $generated@@205))
 :pattern ( ($generated@@199 $generated@@205))
))))
(assert (forall (($generated@@206 T@T) ) (! (= ($generated@@200 ($generated@@199 $generated@@206)) 0)
 :pattern ( ($generated@@199 $generated@@206))
)))
(assert  (and (= ($generated@@1 $generated@@209) 15) (forall (($generated@@210 T@U) ) (! (= (type ($generated@@208 $generated@@210)) $generated@@209)
 :pattern ( ($generated@@208 $generated@@210))
))))
(assert (forall (($generated@@211 T@U) ($generated@@212 T@U) ($generated@@213 T@U) ) (!  (=> (and (= (type $generated@@212) $generated@@61) (= (type $generated@@213) ($generated@@71 $generated@@72 $generated@@73))) (= ($generated@@207 ($generated@@208 $generated@@211) $generated@@212 $generated@@213) ($generated@@69 $generated@@211 $generated@@212 $generated@@213)))
 :pattern ( ($generated@@207 ($generated@@208 $generated@@211) $generated@@212 $generated@@213))
)))
(assert  (and (and (and (and (forall (($generated@@219 T@T) ($generated@@220 T@T) ) (= ($generated@@1 ($generated@@216 $generated@@219 $generated@@220)) 16)) (forall (($generated@@221 T@T) ($generated@@222 T@T) ) (! (= ($generated@@217 ($generated@@216 $generated@@221 $generated@@222)) $generated@@221)
 :pattern ( ($generated@@216 $generated@@221 $generated@@222))
))) (forall (($generated@@223 T@T) ($generated@@224 T@T) ) (! (= ($generated@@218 ($generated@@216 $generated@@223 $generated@@224)) $generated@@224)
 :pattern ( ($generated@@216 $generated@@223 $generated@@224))
))) (forall (($generated@@225 T@U) ) (! (let (($generated@@226 ($generated@@217 (type $generated@@225))))
(= (type ($generated@@214 $generated@@225)) ($generated@@71 $generated@@226 $generated@@4)))
 :pattern ( ($generated@@214 $generated@@225))
))) (forall (($generated@@227 T@T) ($generated@@228 T@T) ) (! (= (type ($generated@@215 $generated@@227 $generated@@228)) ($generated@@216 $generated@@227 $generated@@228))
 :pattern ( ($generated@@215 $generated@@227 $generated@@228))
))))
(assert (forall (($generated@@229 T@U) ($generated@@230 T@T) ) (! (let (($generated@@231 (type $generated@@229)))
 (not ($generated@@0 ($generated@@76 ($generated@@214 ($generated@@215 $generated@@231 $generated@@230)) $generated@@229))))
 :pattern ( (let (($generated@@231 (type $generated@@229)))
($generated@@76 ($generated@@214 ($generated@@215 $generated@@231 $generated@@230)) $generated@@229)))
)))
(assert  (and (and (and (and (forall (($generated@@237 T@T) ($generated@@238 T@T) ) (= ($generated@@1 ($generated@@234 $generated@@237 $generated@@238)) 17)) (forall (($generated@@239 T@T) ($generated@@240 T@T) ) (! (= ($generated@@235 ($generated@@234 $generated@@239 $generated@@240)) $generated@@239)
 :pattern ( ($generated@@234 $generated@@239 $generated@@240))
))) (forall (($generated@@241 T@T) ($generated@@242 T@T) ) (! (= ($generated@@236 ($generated@@234 $generated@@241 $generated@@242)) $generated@@242)
 :pattern ( ($generated@@234 $generated@@241 $generated@@242))
))) (forall (($generated@@243 T@U) ) (! (let (($generated@@244 ($generated@@235 (type $generated@@243))))
(= (type ($generated@@232 $generated@@243)) ($generated@@71 $generated@@244 $generated@@4)))
 :pattern ( ($generated@@232 $generated@@243))
))) (forall (($generated@@245 T@T) ($generated@@246 T@T) ) (! (= (type ($generated@@233 $generated@@245 $generated@@246)) ($generated@@234 $generated@@245 $generated@@246))
 :pattern ( ($generated@@233 $generated@@245 $generated@@246))
))))
(assert (forall (($generated@@247 T@U) ($generated@@248 T@T) ) (! (let (($generated@@249 (type $generated@@247)))
 (not ($generated@@0 ($generated@@76 ($generated@@232 ($generated@@233 $generated@@249 $generated@@248)) $generated@@247))))
 :pattern ( (let (($generated@@249 (type $generated@@247)))
($generated@@76 ($generated@@232 ($generated@@233 $generated@@249 $generated@@248)) $generated@@247)))
)))
(assert (forall (($generated@@250 T@U) ) (! (let (($generated@@251 ($generated@@218 (type $generated@@250))))
(let (($generated@@252 ($generated@@217 (type $generated@@250))))
 (=> (= (type $generated@@250) ($generated@@216 $generated@@252 $generated@@251)) (or (= $generated@@250 ($generated@@215 $generated@@252 $generated@@251)) (exists (($generated@@253 T@U) ) (!  (and (= (type $generated@@253) $generated@@252) ($generated@@0 ($generated@@76 ($generated@@214 $generated@@250) $generated@@253)))
 :no-pattern (type $generated@@253)
 :no-pattern ($generated $generated@@253)
 :no-pattern ($generated@@0 $generated@@253)
))))))
 :pattern ( ($generated@@214 $generated@@250))
)))
(assert (forall (($generated@@254 T@U) ) (! (let (($generated@@255 ($generated@@236 (type $generated@@254))))
(let (($generated@@256 ($generated@@235 (type $generated@@254))))
 (=> (= (type $generated@@254) ($generated@@234 $generated@@256 $generated@@255)) (or (= $generated@@254 ($generated@@233 $generated@@256 $generated@@255)) (exists (($generated@@257 T@U) ) (!  (and (= (type $generated@@257) $generated@@256) ($generated@@0 ($generated@@76 ($generated@@232 $generated@@254) $generated@@257)))
 :no-pattern (type $generated@@257)
 :no-pattern ($generated $generated@@257)
 :no-pattern ($generated@@0 $generated@@257)
))))))
 :pattern ( ($generated@@232 $generated@@254))
)))
(assert (forall (($generated@@259 T@U) ) (! (= (type ($generated@@258 $generated@@259)) $generated@@61)
 :pattern ( ($generated@@258 $generated@@259))
)))
(assert (forall (($generated@@260 T@U) ($generated@@261 T@U) ($generated@@262 T@U) ) (!  (=> (and (and (= (type $generated@@260) ($generated@@71 $generated@@209 $generated@@4)) (= (type $generated@@261) $generated@@61)) (= (type $generated@@262) ($generated@@71 $generated@@72 $generated@@73))) (= ($generated@@69 $generated@@260 ($generated@@258 $generated@@261) $generated@@262) (forall (($generated@@263 T@U) ) (!  (=> (and (= (type $generated@@263) $generated@@209) ($generated@@0 ($generated@@76 $generated@@260 $generated@@263))) ($generated@@207 $generated@@263 $generated@@261 $generated@@262))
 :pattern ( ($generated@@76 $generated@@260 $generated@@263))
))))
 :pattern ( ($generated@@69 $generated@@260 ($generated@@258 $generated@@261) $generated@@262))
)))
(assert (forall (($generated@@265 T@U) ) (! (= (type ($generated@@264 $generated@@265)) $generated@@61)
 :pattern ( ($generated@@264 $generated@@265))
)))
(assert (forall (($generated@@266 T@U) ($generated@@267 T@U) ($generated@@268 T@U) ) (!  (=> (and (and (= (type $generated@@266) ($generated@@71 $generated@@209 $generated@@4)) (= (type $generated@@267) $generated@@61)) (= (type $generated@@268) ($generated@@71 $generated@@72 $generated@@73))) (= ($generated@@69 $generated@@266 ($generated@@264 $generated@@267) $generated@@268) (forall (($generated@@269 T@U) ) (!  (=> (and (= (type $generated@@269) $generated@@209) ($generated@@0 ($generated@@76 $generated@@266 $generated@@269))) ($generated@@207 $generated@@269 $generated@@267 $generated@@268))
 :pattern ( ($generated@@76 $generated@@266 $generated@@269))
))))
 :pattern ( ($generated@@69 $generated@@266 ($generated@@264 $generated@@267) $generated@@268))
)))
(assert  (and (forall (($generated@@272 T@U) ($generated@@273 T@U) ) (! (= (type ($generated@@270 $generated@@272 $generated@@273)) $generated@@61)
 :pattern ( ($generated@@270 $generated@@272 $generated@@273))
)) (forall (($generated@@274 T@U) ) (! (let (($generated@@275 ($generated@@218 (type $generated@@274))))
(let (($generated@@276 ($generated@@217 (type $generated@@274))))
(= (type ($generated@@271 $generated@@274)) ($generated@@71 $generated@@276 $generated@@275))))
 :pattern ( ($generated@@271 $generated@@274))
))))
(assert (forall (($generated@@277 T@U) ($generated@@278 T@U) ($generated@@279 T@U) ($generated@@280 T@U) ) (!  (=> (and (and (and (= (type $generated@@277) ($generated@@216 $generated@@209 $generated@@209)) (= (type $generated@@278) $generated@@61)) (= (type $generated@@279) $generated@@61)) (= (type $generated@@280) ($generated@@71 $generated@@72 $generated@@73))) (= ($generated@@69 $generated@@277 ($generated@@270 $generated@@278 $generated@@279) $generated@@280) (forall (($generated@@281 T@U) ) (!  (=> (and (= (type $generated@@281) $generated@@209) ($generated@@0 ($generated@@76 ($generated@@214 $generated@@277) $generated@@281))) (and ($generated@@207 ($generated@@76 ($generated@@271 $generated@@277) $generated@@281) $generated@@279 $generated@@280) ($generated@@207 $generated@@281 $generated@@278 $generated@@280)))
 :pattern ( ($generated@@76 ($generated@@271 $generated@@277) $generated@@281))
 :pattern ( ($generated@@76 ($generated@@214 $generated@@277) $generated@@281))
))))
 :pattern ( ($generated@@69 $generated@@277 ($generated@@270 $generated@@278 $generated@@279) $generated@@280))
)))
(assert  (and (forall (($generated@@284 T@U) ($generated@@285 T@U) ) (! (= (type ($generated@@282 $generated@@284 $generated@@285)) $generated@@61)
 :pattern ( ($generated@@282 $generated@@284 $generated@@285))
)) (forall (($generated@@286 T@U) ) (! (let (($generated@@287 ($generated@@236 (type $generated@@286))))
(let (($generated@@288 ($generated@@235 (type $generated@@286))))
(= (type ($generated@@283 $generated@@286)) ($generated@@71 $generated@@288 $generated@@287))))
 :pattern ( ($generated@@283 $generated@@286))
))))
(assert (forall (($generated@@289 T@U) ($generated@@290 T@U) ($generated@@291 T@U) ($generated@@292 T@U) ) (!  (=> (and (and (and (= (type $generated@@289) ($generated@@234 $generated@@209 $generated@@209)) (= (type $generated@@290) $generated@@61)) (= (type $generated@@291) $generated@@61)) (= (type $generated@@292) ($generated@@71 $generated@@72 $generated@@73))) (= ($generated@@69 $generated@@289 ($generated@@282 $generated@@290 $generated@@291) $generated@@292) (forall (($generated@@293 T@U) ) (!  (=> (and (= (type $generated@@293) $generated@@209) ($generated@@0 ($generated@@76 ($generated@@232 $generated@@289) $generated@@293))) (and ($generated@@207 ($generated@@76 ($generated@@283 $generated@@289) $generated@@293) $generated@@291 $generated@@292) ($generated@@207 $generated@@293 $generated@@290 $generated@@292)))
 :pattern ( ($generated@@76 ($generated@@283 $generated@@289) $generated@@293))
 :pattern ( ($generated@@76 ($generated@@232 $generated@@289) $generated@@293))
))))
 :pattern ( ($generated@@69 $generated@@289 ($generated@@282 $generated@@290 $generated@@291) $generated@@292))
)))
(assert (forall (($generated@@295 T@T) ) (! (= (type ($generated@@294 $generated@@295)) ($generated@@71 $generated@@295 $generated@@4))
 :pattern ( ($generated@@294 $generated@@295))
)))
(assert (forall (($generated@@296 T@U) ) (! (let (($generated@@297 ($generated@@236 (type $generated@@296))))
(let (($generated@@298 ($generated@@235 (type $generated@@296))))
 (=> (= (type $generated@@296) ($generated@@234 $generated@@298 $generated@@297)) (= (= $generated@@296 ($generated@@233 $generated@@298 $generated@@297)) (= ($generated@@232 $generated@@296) ($generated@@294 $generated@@298))))))
 :pattern ( ($generated@@232 $generated@@296))
)))
(assert (forall (($generated@@299 T@U) ) (! (let (($generated@@300 ($generated@@202 (type $generated@@299))))
 (=> (= (type $generated@@299) ($generated@@201 $generated@@300)) (<= 0 ($generated@@200 $generated@@299))))
 :pattern ( ($generated@@200 $generated@@299))
)))
(assert (forall (($generated@@302 T@U) ) (! (= (type ($generated@@301 $generated@@302)) $generated@@61)
 :pattern ( ($generated@@301 $generated@@302))
)))
(assert (forall (($generated@@303 T@U) ($generated@@304 T@U) ) (!  (=> (and (= (type $generated@@303) $generated@@61) (= (type $generated@@304) $generated@@61)) (= ($generated@@301 ($generated@@270 $generated@@303 $generated@@304)) $generated@@303))
 :pattern ( ($generated@@270 $generated@@303 $generated@@304))
)))
(assert (forall (($generated@@306 T@U) ) (! (= (type ($generated@@305 $generated@@306)) $generated@@61)
 :pattern ( ($generated@@305 $generated@@306))
)))
(assert (forall (($generated@@307 T@U) ($generated@@308 T@U) ) (!  (=> (and (= (type $generated@@307) $generated@@61) (= (type $generated@@308) $generated@@61)) (= ($generated@@305 ($generated@@270 $generated@@307 $generated@@308)) $generated@@308))
 :pattern ( ($generated@@270 $generated@@307 $generated@@308))
)))
(assert (forall (($generated@@309 T@U) ($generated@@310 T@U) ) (!  (=> (and (= (type $generated@@309) $generated@@61) (= (type $generated@@310) $generated@@61)) (= ($generated@@67 ($generated@@270 $generated@@309 $generated@@310)) $generated@@58))
 :pattern ( ($generated@@270 $generated@@309 $generated@@310))
)))
(assert (forall (($generated@@312 T@U) ) (! (= (type ($generated@@311 $generated@@312)) $generated@@61)
 :pattern ( ($generated@@311 $generated@@312))
)))
(assert (forall (($generated@@313 T@U) ($generated@@314 T@U) ) (!  (=> (and (= (type $generated@@313) $generated@@61) (= (type $generated@@314) $generated@@61)) (= ($generated@@311 ($generated@@282 $generated@@313 $generated@@314)) $generated@@313))
 :pattern ( ($generated@@282 $generated@@313 $generated@@314))
)))
(assert (forall (($generated@@316 T@U) ) (! (= (type ($generated@@315 $generated@@316)) $generated@@61)
 :pattern ( ($generated@@315 $generated@@316))
)))
(assert (forall (($generated@@317 T@U) ($generated@@318 T@U) ) (!  (=> (and (= (type $generated@@317) $generated@@61) (= (type $generated@@318) $generated@@61)) (= ($generated@@315 ($generated@@282 $generated@@317 $generated@@318)) $generated@@318))
 :pattern ( ($generated@@282 $generated@@317 $generated@@318))
)))
(assert (forall (($generated@@319 T@U) ($generated@@320 T@U) ) (!  (=> (and (= (type $generated@@319) $generated@@61) (= (type $generated@@320) $generated@@61)) (= ($generated@@67 ($generated@@282 $generated@@319 $generated@@320)) $generated@@59))
 :pattern ( ($generated@@282 $generated@@319 $generated@@320))
)))
(assert  (and (forall (($generated@@323 T@U) ) (! (= (type ($generated@@321 $generated@@323)) $generated@@187)
 :pattern ( ($generated@@321 $generated@@323))
)) (= (type $generated@@322) $generated@@187)))
(assert (forall (($generated@@324 T@U) ($generated@@325 Int) ) (!  (=> (= (type $generated@@324) $generated@@187) (= ($generated@@184 $generated@@324 $generated@@325) ($generated@@184 $generated@@322 $generated@@325)))
 :pattern ( ($generated@@184 ($generated@@321 $generated@@324) $generated@@325))
)))
(assert  (and (forall (($generated@@328 T@U) ) (! (= (type ($generated@@326 $generated@@328)) $generated@@61)
 :pattern ( ($generated@@326 $generated@@328))
)) (forall (($generated@@329 T@U) ($generated@@330 Int) ) (! (let (($generated@@331 ($generated@@202 (type $generated@@329))))
(= (type ($generated@@327 $generated@@329 $generated@@330)) $generated@@331))
 :pattern ( ($generated@@327 $generated@@329 $generated@@330))
))))
(assert (forall (($generated@@332 T@U) ($generated@@333 T@U) ($generated@@334 T@U) ) (!  (=> (and (and (= (type $generated@@332) ($generated@@201 $generated@@209)) (= (type $generated@@333) $generated@@61)) (= (type $generated@@334) ($generated@@71 $generated@@72 $generated@@73))) (= ($generated@@69 $generated@@332 ($generated@@326 $generated@@333) $generated@@334) (forall (($generated@@335 Int) ) (!  (=> (and (<= 0 $generated@@335) (< $generated@@335 ($generated@@200 $generated@@332))) ($generated@@207 ($generated@@327 $generated@@332 $generated@@335) $generated@@333 $generated@@334))
 :pattern ( ($generated@@327 $generated@@332 $generated@@335))
))))
 :pattern ( ($generated@@69 $generated@@332 ($generated@@326 $generated@@333) $generated@@334))
)))
(assert (forall (($generated@@337 Int) ) (! (= ($generated@@336 ($generated@@70 $generated@@337)) $generated@@337)
 :pattern ( ($generated@@70 $generated@@337))
)))
(assert (forall (($generated@@339 T@U) ) (! (= (type ($generated@@338 $generated@@339)) $generated@@61)
 :pattern ( ($generated@@338 $generated@@339))
)))
(assert (forall (($generated@@340 T@U) ) (!  (=> (= (type $generated@@340) $generated@@61) (= ($generated@@338 ($generated@@258 $generated@@340)) $generated@@340))
 :pattern ( ($generated@@258 $generated@@340))
)))
(assert (forall (($generated@@341 T@U) ) (!  (=> (= (type $generated@@341) $generated@@61) (= ($generated@@67 ($generated@@258 $generated@@341)) $generated@@54))
 :pattern ( ($generated@@258 $generated@@341))
)))
(assert (forall (($generated@@343 T@U) ) (! (= (type ($generated@@342 $generated@@343)) $generated@@61)
 :pattern ( ($generated@@342 $generated@@343))
)))
(assert (forall (($generated@@344 T@U) ) (!  (=> (= (type $generated@@344) $generated@@61) (= ($generated@@342 ($generated@@264 $generated@@344)) $generated@@344))
 :pattern ( ($generated@@264 $generated@@344))
)))
(assert (forall (($generated@@345 T@U) ) (!  (=> (= (type $generated@@345) $generated@@61) (= ($generated@@67 ($generated@@264 $generated@@345)) $generated@@55))
 :pattern ( ($generated@@264 $generated@@345))
)))
(assert  (and (forall (($generated@@348 T@U) ) (! (= (type ($generated@@346 $generated@@348)) $generated@@61)
 :pattern ( ($generated@@346 $generated@@348))
)) (forall (($generated@@349 T@U) ) (! (= (type ($generated@@347 $generated@@349)) $generated@@61)
 :pattern ( ($generated@@347 $generated@@349))
))))
(assert (forall (($generated@@350 T@U) ) (!  (=> (= (type $generated@@350) $generated@@61) (= ($generated@@347 ($generated@@346 $generated@@350)) $generated@@350))
 :pattern ( ($generated@@346 $generated@@350))
)))
(assert (forall (($generated@@351 T@U) ) (!  (=> (= (type $generated@@351) $generated@@61) (= ($generated@@67 ($generated@@346 $generated@@351)) $generated@@56))
 :pattern ( ($generated@@346 $generated@@351))
)))
(assert (forall (($generated@@353 T@U) ) (! (= (type ($generated@@352 $generated@@353)) $generated@@61)
 :pattern ( ($generated@@352 $generated@@353))
)))
(assert (forall (($generated@@354 T@U) ) (!  (=> (= (type $generated@@354) $generated@@61) (= ($generated@@352 ($generated@@326 $generated@@354)) $generated@@354))
 :pattern ( ($generated@@326 $generated@@354))
)))
(assert (forall (($generated@@355 T@U) ) (!  (=> (= (type $generated@@355) $generated@@61) (= ($generated@@67 ($generated@@326 $generated@@355)) $generated@@57))
 :pattern ( ($generated@@326 $generated@@355))
)))
(assert (forall (($generated@@357 T@T) ($generated@@358 T@U) ) (! (= (type ($generated@@356 $generated@@357 $generated@@358)) $generated@@357)
 :pattern ( ($generated@@356 $generated@@357 $generated@@358))
)))
(assert (forall (($generated@@359 T@U) ) (! (let (($generated@@360 (type $generated@@359)))
(= ($generated@@356 $generated@@360 ($generated@@208 $generated@@359)) $generated@@359))
 :pattern ( ($generated@@208 $generated@@359))
)))
(assert  (=> (<= 0 $generated@@183) (forall (($generated@@361 T@U) ($generated@@362 Int) ) (!  (=> (and (= (type $generated@@361) $generated@@187) (or ($generated@@188 $generated@@362) (not (= 0 $generated@@183)))) (and ($generated@@188 $generated@@362) (= ($generated@@184 ($generated@@185 $generated@@361) $generated@@362) (+ ($generated@@184 $generated@@361 $generated@@362) 1))))
 :pattern ( ($generated@@184 ($generated@@185 $generated@@361) $generated@@362))
))))
(assert (forall (($generated@@363 T@U) ($generated@@364 Int) ) (!  (=> (= (type $generated@@363) $generated@@187) (= ($generated@@184 ($generated@@185 $generated@@363) $generated@@364) ($generated@@184 $generated@@363 $generated@@364)))
 :pattern ( ($generated@@184 ($generated@@185 $generated@@363) $generated@@364))
)))
(assert (forall (($generated@@365 T@U) ) (! (let (($generated@@366 (type $generated@@365)))
 (not ($generated@@0 ($generated@@76 ($generated@@294 $generated@@366) $generated@@365))))
 :pattern ( (let (($generated@@366 (type $generated@@365)))
($generated@@76 ($generated@@294 $generated@@366) $generated@@365)))
)))
(assert (forall (($generated@@367 T@U) ($generated@@368 T@U) ($generated@@369 T@U) ) (!  (=> (and (and (= (type $generated@@367) ($generated@@71 $generated@@209 $generated@@2)) (= (type $generated@@368) $generated@@61)) (= (type $generated@@369) ($generated@@71 $generated@@72 $generated@@73))) (= ($generated@@69 $generated@@367 ($generated@@346 $generated@@368) $generated@@369) (forall (($generated@@370 T@U) ) (!  (=> (and (= (type $generated@@370) $generated@@209) (< 0 ($generated ($generated@@76 $generated@@367 $generated@@370)))) ($generated@@207 $generated@@370 $generated@@368 $generated@@369))
 :pattern ( ($generated@@76 $generated@@367 $generated@@370))
))))
 :pattern ( ($generated@@69 $generated@@367 ($generated@@346 $generated@@368) $generated@@369))
)))
(assert (forall (($generated@@371 Int) ) (! (= ($generated@@208 ($generated@@8 ($generated@@186 $generated@@371))) ($generated@@193 ($generated@@208 ($generated@@8 $generated@@371))))
 :pattern ( ($generated@@208 ($generated@@8 ($generated@@186 $generated@@371))))
)))
(assert (forall (($generated@@372 T@U) ) (! (= ($generated@@208 ($generated@@193 $generated@@372)) ($generated@@193 ($generated@@208 $generated@@372)))
 :pattern ( ($generated@@208 ($generated@@193 $generated@@372)))
)))
(assert (forall (($generated@@373 T@U) ) (! (let (($generated@@374 ($generated@@202 (type $generated@@373))))
 (=> (and (= (type $generated@@373) ($generated@@201 $generated@@374)) (= ($generated@@200 $generated@@373) 0)) (= $generated@@373 ($generated@@199 $generated@@374))))
 :pattern ( ($generated@@200 $generated@@373))
)))
(assert (forall (($generated@@375 T@U) ($generated@@376 T@U) ) (!  (=> (and (= (type $generated@@375) ($generated@@71 $generated@@72 $generated@@73)) (= (type $generated@@376) $generated@@2)) ($generated@@69 $generated@@376 $generated@@46 $generated@@375))
 :pattern ( ($generated@@69 $generated@@376 $generated@@46 $generated@@375))
)))
(assert (forall (($generated@@377 T@U) ($generated@@378 T@U) ) (!  (=> (and (= (type $generated@@377) ($generated@@71 $generated@@72 $generated@@73)) (= (type $generated@@378) $generated@@3)) ($generated@@69 $generated@@378 $generated@@47 $generated@@377))
 :pattern ( ($generated@@69 $generated@@378 $generated@@47 $generated@@377))
)))
(assert (forall (($generated@@379 T@U) ($generated@@380 T@U) ) (!  (=> (and (= (type $generated@@379) ($generated@@71 $generated@@72 $generated@@73)) (= (type $generated@@380) $generated@@4)) ($generated@@69 $generated@@380 $generated@@44 $generated@@379))
 :pattern ( ($generated@@69 $generated@@380 $generated@@44 $generated@@379))
)))
(assert (= ($generated@@1 $generated@@381) 18))
(assert (forall (($generated@@382 T@U) ($generated@@383 T@U) ) (!  (=> (and (= (type $generated@@382) ($generated@@71 $generated@@72 $generated@@73)) (= (type $generated@@383) $generated@@381)) ($generated@@69 $generated@@383 $generated@@45 $generated@@382))
 :pattern ( ($generated@@69 $generated@@383 $generated@@45 $generated@@382))
)))
(assert (forall (($generated@@384 T@U) ($generated@@385 T@U) ) (!  (=> (and (= (type $generated@@384) ($generated@@71 $generated@@72 $generated@@73)) (= (type $generated@@385) $generated@@209)) ($generated@@69 $generated@@385 $generated@@48 $generated@@384))
 :pattern ( ($generated@@69 $generated@@385 $generated@@48 $generated@@384))
)))
(push 1)
(declare-fun ControlFlow (Int Int) Int)
(declare-fun $generated@@386 () T@U)
(declare-fun $generated@@387 () T@U)
(declare-fun $generated@@388 () T@U)
(declare-fun $generated@@389 () Int)
(declare-fun $generated@@390 (T@U) Bool)
(declare-fun $generated@@391 (T@U) Bool)
(assert  (and (and (= (type $generated@@386) ($generated@@129 $generated@@72 $generated@@4)) (= (type $generated@@387) $generated@@72)) (= (type $generated@@388) ($generated@@71 $generated@@72 $generated@@73))))
(set-option :timeout 0)
(set-option :rlimit 0)
(assert (not
 (=> (= (ControlFlow 0 0) 4) (let (($generated@@392  (=> (= $generated@@386 ($generated@@128 $generated@@387 $generated@@388 $generated@@60 false)) (=> (and (and (= $generated@@389 ($generated@@186 5)) ($generated@@69 ($generated@@8 $generated@@389) $generated@@46 $generated@@388)) (and ($generated@@188 ($generated@@186 5)) ($generated@@188 ($generated@@186 5)))) (and (=> (= (ControlFlow 0 2) (- 0 3)) (= ($generated@@186 ($generated@@184 ($generated@@185 ($generated@@185 $generated@@322)) ($generated@@186 5))) ($generated@@186 0))) (=> (and (= ($generated@@186 ($generated@@184 ($generated@@185 $generated@@322) ($generated@@186 5))) ($generated@@186 0)) (= (ControlFlow 0 2) (- 0 1))) ($generated@@0 ($generated@@193 ($generated@@11 false)))))))))
(let (($generated@@393  (=> (and (and ($generated@@390 $generated@@388) ($generated@@391 $generated@@388)) (and (= 1 $generated@@183) (= (ControlFlow 0 4) 2))) $generated@@392)))
$generated@@393)))
))
(check-sat)
(pop 1)
; Valid
(get-info :rlimit)
