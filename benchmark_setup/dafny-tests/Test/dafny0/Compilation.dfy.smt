(set-option :print-success false)
(set-info :smt-lib-version 2.6)
(set-option :auto_config false)
(set-option :type_check true)
(set-option :smt.case_split 3)
(set-option :smt.qi.eager_threshold 100)
(set-option :smt.delay_units true)
(set-option :smt.arith.solver 2)
(set-option :smt.mbqi false)
(set-option :model.compact false)
(set-option :model.v2 true)
(set-option :pp.bv_literals false)
; done setting options


(set-info :category "industrial")
(declare-sort |T@U| 0)
(declare-sort |T@T| 0)
(declare-fun real_pow (Real Real) Real)
(declare-fun UOrdering2 (|T@U| |T@U|) Bool)
(declare-fun UOrdering3 (|T@T| |T@U| |T@U|) Bool)
(declare-fun tickleBool (Bool) Bool)
(assert (and (tickleBool true) (tickleBool false)))
(declare-fun $generated (T@U) Int)
(declare-fun $generated@@0 (T@U) Bool)
(declare-fun $generated@@1 (T@T) Int)
(declare-fun $generated@@2 () T@T)
(declare-fun $generated@@3 () T@T)
(declare-fun $generated@@4 () T@T)
(declare-fun $generated@@5 () T@T)
(declare-fun $generated@@6 () T@T)
(declare-fun $generated@@7 () T@T)
(declare-fun $generated@@8 (Int) T@U)
(declare-fun type (T@U) T@T)
(declare-fun $generated@@9 (Real) T@U)
(declare-fun $generated@@10 (T@U) Real)
(declare-fun $generated@@11 (Bool) T@U)
(declare-fun $generated@@12 (RoundingMode) T@U)
(declare-fun $generated@@13 (T@U) RoundingMode)
(declare-fun $generated@@14 (String) T@U)
(declare-fun $generated@@15 (T@U) String)
(declare-fun $generated@@16 ((RegEx String)) T@U)
(declare-fun $generated@@17 (T@U) (RegEx String))
(declare-fun $generated@@44 () T@U)
(declare-fun $generated@@45 () T@U)
(declare-fun $generated@@46 () T@U)
(declare-fun $generated@@47 () T@U)
(declare-fun $generated@@48 () T@U)
(declare-fun $generated@@49 () T@U)
(declare-fun $generated@@50 () T@U)
(declare-fun $generated@@51 () T@U)
(declare-fun $generated@@52 () T@U)
(declare-fun $generated@@53 () T@U)
(declare-fun $generated@@54 () T@U)
(declare-fun $generated@@55 () T@U)
(declare-fun $generated@@56 () T@U)
(declare-fun $generated@@57 () T@U)
(declare-fun $generated@@58 () T@U)
(declare-fun $generated@@59 () T@U)
(declare-fun $generated@@60 () T@U)
(declare-fun $generated@@61 () T@U)
(declare-fun $generated@@62 () T@U)
(declare-fun $generated@@63 () T@U)
(declare-fun $generated@@64 () T@U)
(declare-fun $generated@@65 () T@U)
(declare-fun $generated@@66 () T@U)
(declare-fun $generated@@67 () T@U)
(declare-fun $generated@@68 () T@U)
(declare-fun $generated@@69 () T@U)
(declare-fun $generated@@70 () T@U)
(declare-fun $generated@@71 () T@U)
(declare-fun $generated@@72 () T@U)
(declare-fun $generated@@73 () T@T)
(declare-fun $generated@@74 () T@T)
(declare-fun $generated@@75 (T@T) T@T)
(declare-fun $generated@@76 (T@T) T@T)
(declare-fun $generated@@77 () T@T)
(declare-fun $generated@@78 () T@T)
(declare-fun $generated@@81 (T@U) T@U)
(declare-fun $generated@@83 (T@U T@U T@U T@U T@U T@U) Bool)
(declare-fun $generated@@84 (T@U) T@U)
(declare-fun $generated@@85 () T@T)
(declare-fun $generated@@86 () T@T)
(declare-fun $generated@@87 () T@T)
(declare-fun $generated@@88 (T@U T@U) Bool)
(declare-fun $generated@@89 (T@U) T@U)
(declare-fun $generated@@90 (T@U) Int)
(declare-fun $generated@@91 (T@U) Bool)
(declare-fun $generated@@92 (T@U) T@U)
(declare-fun $generated@@93 (T@U T@U) T@U)
(declare-fun $generated@@94 (Int) T@U)
(declare-fun $generated@@95 (T@U) T@U)
(declare-fun $generated@@96 (T@U T@U T@U T@U T@U) Bool)
(declare-fun $generated@@110 (T@U T@U T@U) Bool)
(declare-fun $generated@@111 (Int) T@U)
(declare-fun $generated@@112 (T@T T@T) T@T)
(declare-fun $generated@@113 () T@T)
(declare-fun $generated@@114 () T@T)
(declare-fun $generated@@115 (T@T) T@T)
(declare-fun $generated@@116 (T@T) T@T)
(declare-fun $generated@@117 (T@U T@U) T@U)
(declare-fun $generated@@118 (T@U T@U T@U) T@U)
(declare-fun $generated@@119 (T@U T@U) T@U)
(declare-fun $generated@@120 (T@U T@U T@U) T@U)
(declare-fun $generated@@174 (T@U T@U) Bool)
(declare-fun $generated@@178 () T@U)
(declare-fun $generated@@185 (T@U) Bool)
(declare-fun $generated@@186 (T@U T@U) T@U)
(declare-fun $generated@@192 (T@U T@U) Bool)
(declare-fun $generated@@193 (T@U) T@U)
(declare-fun $generated@@194 (T@U) T@U)
(declare-fun $generated@@199 (T@U) T@U)
(declare-fun $generated@@200 () T@U)
(declare-fun $generated@@202 (T@U) T@U)
(declare-fun $generated@@203 (T@U) Bool)
(declare-fun $generated@@209 (T@U T@U T@U) T@U)
(declare-fun $generated@@210 (T@U T@U T@U Bool) T@U)
(declare-fun $generated@@211 (T@T T@T) T@T)
(declare-fun $generated@@212 (T@T) T@T)
(declare-fun $generated@@213 (T@T) T@T)
(declare-fun $generated@@214 (T@U T@U T@U T@U) T@U)
(declare-fun $generated@@265 (T@U T@U T@U Bool) T@U)
(declare-fun $generated@@283 (T@U) T@U)
(declare-fun $generated@@284 (T@U) Bool)
(declare-fun $generated@@288 (T@U T@U) T@U)
(declare-fun $generated@@289 (T@U T@U) Bool)
(declare-fun $generated@@304 (T@U T@U) Bool)
(declare-fun $generated@@307 (T@U) Bool)
(declare-fun $generated@@308 (T@U) T@U)
(declare-fun $generated@@309 (T@U) T@U)
(declare-fun $generated@@314 () Int)
(declare-fun $generated@@315 (T@U T@U Int T@U) T@U)
(declare-fun $generated@@316 (T@U Int T@U) Bool)
(declare-fun $generated@@317 (Int) Int)
(declare-fun $generated@@318 (T@U T@U) T@U)
(declare-fun $generated@@329 (T@U) T@U)
(declare-fun $generated@@334 (T@U) T@U)
(declare-fun $generated@@340 (T@U) T@U)
(declare-fun $generated@@344 (T@U) Bool)
(declare-fun $generated@@347 (T@U T@U) T@U)
(declare-fun $generated@@356 (T@U T@U T@U) Bool)
(declare-fun $generated@@375 (T@T) T@U)
(declare-fun $generated@@376 (T@U) Int)
(declare-fun $generated@@377 (T@T) T@T)
(declare-fun $generated@@378 (T@T) T@T)
(declare-fun $generated@@385 (T@U) T@U)
(declare-fun $generated@@386 () T@U)
(declare-fun $generated@@397 (T@U) T@U)
(declare-fun $generated@@402 (T@U) Int)
(declare-fun $generated@@403 (T@T) T@U)
(declare-fun $generated@@408 (T@U) T@U)
(declare-fun $generated@@412 (T@U) T@U)
(declare-fun $generated@@413 (T@T T@T) T@U)
(declare-fun $generated@@414 (T@T T@T) T@T)
(declare-fun $generated@@415 (T@T) T@T)
(declare-fun $generated@@416 (T@T) T@T)
(declare-fun $generated@@430 (T@U) T@U)
(declare-fun $generated@@431 (T@T T@T) T@U)
(declare-fun $generated@@432 (T@T T@T) T@T)
(declare-fun $generated@@433 (T@T) T@T)
(declare-fun $generated@@434 (T@T) T@T)
(declare-fun $generated@@448 (T@U) Bool)
(declare-fun $generated@@455 (T@T T@U) T@U)
(declare-fun $generated@@463 (T@U) T@U)
(declare-fun $generated@@474 (T@U) T@U)
(declare-fun $generated@@500 (T@U) T@U)
(declare-fun $generated@@501 (T@U) T@U)
(declare-fun $generated@@508 (T@U) T@U)
(declare-fun $generated@@509 (T@U) T@U)
(declare-fun $generated@@526 (T@U T@U) T@U)
(declare-fun $generated@@534 (T@U T@U) T@U)
(declare-fun $generated@@548 (T@T) T@U)
(declare-fun $generated@@572 () T@T)
(declare-fun $generated@@581 (T@U) T@U)
(declare-fun $generated@@585 (T@U) T@U)
(declare-fun $generated@@591 (T@U) T@U)
(declare-fun $generated@@595 (T@U) T@U)
(declare-fun $generated@@603 (T@U) T@U)
(declare-fun $generated@@607 (T@U) T@U)
(declare-fun $generated@@627 (T@U) T@U)
(declare-fun $generated@@628 (T@U Int) T@U)
(declare-fun $generated@@637 (T@U) Int)
(declare-fun $generated@@639 (T@U) T@U)
(declare-fun $generated@@643 (T@U) T@U)
(declare-fun $generated@@647 (T@U) T@U)
(declare-fun $generated@@651 (T@U) T@U)
(declare-fun $generated@@655 (T@U) T@U)
(declare-fun $generated@@658 (T@U) T@U)
(declare-fun $generated@@677 (T@U) Int)
(declare-fun $generated@@678 (T@U) Int)
(declare-fun $generated@@802 (T@U) Int)
(assert  (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (= ($generated@@1 $generated@@2) 0) (= ($generated@@1 $generated@@3) 1)) (= ($generated@@1 $generated@@4) 2)) (= ($generated@@1 $generated@@5) 3)) (= ($generated@@1 $generated@@6) 4)) (= ($generated@@1 $generated@@7) 5)) (forall (($generated@@18 Int) ) (! (= ($generated ($generated@@8 $generated@@18)) $generated@@18)
 :pattern ( ($generated@@8 $generated@@18))
))) (forall (($generated@@19 T@U) ) (!  (=> (= (type $generated@@19) $generated@@2) (= ($generated@@8 ($generated $generated@@19)) $generated@@19))
 :pattern ( ($generated $generated@@19))
))) (forall (($generated@@20 Int) ) (! (= (type ($generated@@8 $generated@@20)) $generated@@2)
 :pattern ( ($generated@@8 $generated@@20))
))) (forall (($generated@@21 Real) ) (! (= ($generated@@10 ($generated@@9 $generated@@21)) $generated@@21)
 :pattern ( ($generated@@9 $generated@@21))
))) (forall (($generated@@22 T@U) ) (!  (=> (= (type $generated@@22) $generated@@3) (= ($generated@@9 ($generated@@10 $generated@@22)) $generated@@22))
 :pattern ( ($generated@@10 $generated@@22))
))) (forall (($generated@@23 Real) ) (! (= (type ($generated@@9 $generated@@23)) $generated@@3)
 :pattern ( ($generated@@9 $generated@@23))
))) (forall (($generated@@24 Bool) ) (! (= ($generated@@0 ($generated@@11 $generated@@24)) $generated@@24)
 :pattern ( ($generated@@11 $generated@@24))
))) (forall (($generated@@25 T@U) ) (!  (=> (= (type $generated@@25) $generated@@4) (= ($generated@@11 ($generated@@0 $generated@@25)) $generated@@25))
 :pattern ( ($generated@@0 $generated@@25))
))) (forall (($generated@@26 Bool) ) (! (= (type ($generated@@11 $generated@@26)) $generated@@4)
 :pattern ( ($generated@@11 $generated@@26))
))) (forall (($generated@@27 RoundingMode) ) (! (= ($generated@@13 ($generated@@12 $generated@@27)) $generated@@27)
 :pattern ( ($generated@@12 $generated@@27))
))) (forall (($generated@@28 T@U) ) (!  (=> (= (type $generated@@28) $generated@@5) (= ($generated@@12 ($generated@@13 $generated@@28)) $generated@@28))
 :pattern ( ($generated@@13 $generated@@28))
))) (forall (($generated@@29 RoundingMode) ) (! (= (type ($generated@@12 $generated@@29)) $generated@@5)
 :pattern ( ($generated@@12 $generated@@29))
))) (forall (($generated@@30 String) ) (! (= ($generated@@15 ($generated@@14 $generated@@30)) $generated@@30)
 :pattern ( ($generated@@14 $generated@@30))
))) (forall (($generated@@31 T@U) ) (!  (=> (= (type $generated@@31) $generated@@6) (= ($generated@@14 ($generated@@15 $generated@@31)) $generated@@31))
 :pattern ( ($generated@@15 $generated@@31))
))) (forall (($generated@@32 String) ) (! (= (type ($generated@@14 $generated@@32)) $generated@@6)
 :pattern ( ($generated@@14 $generated@@32))
))) (forall (($generated@@33 (RegEx String)) ) (! (= ($generated@@17 ($generated@@16 $generated@@33)) $generated@@33)
 :pattern ( ($generated@@16 $generated@@33))
))) (forall (($generated@@34 T@U) ) (!  (=> (= (type $generated@@34) $generated@@7) (= ($generated@@16 ($generated@@17 $generated@@34)) $generated@@34))
 :pattern ( ($generated@@17 $generated@@34))
))) (forall (($generated@@35 (RegEx String)) ) (! (= (type ($generated@@16 $generated@@35)) $generated@@7)
 :pattern ( ($generated@@16 $generated@@35))
))))
(assert (forall (($generated@@36 T@U) ) (! (UOrdering2 $generated@@36 $generated@@36)
 :no-pattern ($generated $generated@@36)
 :no-pattern ($generated@@0 $generated@@36)
)))
(assert (forall (($generated@@37 T@U) ($generated@@38 T@U) ($generated@@39 T@U) ) (! (let (($generated@@40 (type $generated@@37)))
 (=> (and (and (= (type $generated@@38) $generated@@40) (= (type $generated@@39) $generated@@40)) (and (UOrdering2 $generated@@37 $generated@@38) (UOrdering2 $generated@@38 $generated@@39))) (UOrdering2 $generated@@37 $generated@@39)))
 :pattern ( (UOrdering2 $generated@@37 $generated@@38) (UOrdering2 $generated@@38 $generated@@39))
)))
(assert (forall (($generated@@41 T@U) ($generated@@42 T@U) ) (! (let (($generated@@43 (type $generated@@41)))
 (=> (= (type $generated@@42) $generated@@43) (=> (and (UOrdering2 $generated@@41 $generated@@42) (UOrdering2 $generated@@42 $generated@@41)) (= $generated@@41 $generated@@42))))
 :pattern ( (UOrdering2 $generated@@41 $generated@@42) (UOrdering2 $generated@@42 $generated@@41))
)))
(assert  (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (= ($generated@@1 $generated@@73) 6) (= (type $generated@@44) $generated@@73)) (= (type $generated@@45) $generated@@73)) (= (type $generated@@46) $generated@@73)) (= (type $generated@@47) $generated@@73)) (= (type $generated@@48) $generated@@73)) (= ($generated@@1 $generated@@74) 7)) (= (type $generated@@49) $generated@@74)) (= (type $generated@@50) $generated@@74)) (= (type $generated@@51) $generated@@74)) (= (type $generated@@52) $generated@@74)) (= (type $generated@@53) $generated@@74)) (= (type $generated@@54) $generated@@74)) (= (type $generated@@55) $generated@@74)) (= (type $generated@@56) $generated@@74)) (= (type $generated@@57) $generated@@74)) (= (type $generated@@58) $generated@@74)) (= (type $generated@@59) $generated@@74)) (forall (($generated@@79 T@T) ) (= ($generated@@1 ($generated@@75 $generated@@79)) 8))) (forall (($generated@@80 T@T) ) (! (= ($generated@@76 ($generated@@75 $generated@@80)) $generated@@80)
 :pattern ( ($generated@@75 $generated@@80))
))) (= (type $generated@@60) ($generated@@75 $generated@@4))) (= (type $generated@@61) $generated@@74)) (= ($generated@@1 $generated@@77) 9)) (= (type $generated@@62) $generated@@77)) (= (type $generated@@63) $generated@@74)) (= (type $generated@@64) $generated@@77)) (= (type $generated@@65) $generated@@74)) (= (type $generated@@66) $generated@@77)) (= (type $generated@@67) $generated@@74)) (= (type $generated@@68) $generated@@77)) (= ($generated@@1 $generated@@78) 10)) (= (type $generated@@69) $generated@@78)) (= (type $generated@@70) $generated@@78)) (= (type $generated@@71) $generated@@78)) (= (type $generated@@72) $generated@@78)))
(assert (distinct $generated@@44 $generated@@45 $generated@@46 $generated@@47 $generated@@48 $generated@@49 $generated@@50 $generated@@51 $generated@@52 $generated@@53 $generated@@54 $generated@@55 $generated@@56 $generated@@57 $generated@@58 $generated@@59 $generated@@60 $generated@@61 $generated@@62 $generated@@63 $generated@@64 $generated@@65 $generated@@66 $generated@@67 $generated@@68 $generated@@69 $generated@@70 $generated@@71 $generated@@72)
)
(assert (forall (($generated@@82 T@U) ) (! (= (type ($generated@@81 $generated@@82)) $generated@@74)
 :pattern ( ($generated@@81 $generated@@82))
)))
(assert (= ($generated@@81 $generated@@44) $generated@@49))
(assert (= ($generated@@81 $generated@@45) $generated@@50))
(assert (= ($generated@@81 $generated@@46) $generated@@51))
(assert (= ($generated@@81 $generated@@47) $generated@@52))
(assert (= ($generated@@81 $generated@@48) $generated@@53))
(assert  (and (and (and (and (and (and (and (and (= ($generated@@1 $generated@@85) 11) (= ($generated@@1 $generated@@86) 12)) (= ($generated@@1 $generated@@87) 13)) (forall (($generated@@97 T@U) ) (! (= (type ($generated@@84 $generated@@97)) $generated@@86)
 :pattern ( ($generated@@84 $generated@@97))
))) (forall (($generated@@98 T@U) ) (! (= (type ($generated@@89 $generated@@98)) $generated@@73)
 :pattern ( ($generated@@89 $generated@@98))
))) (forall (($generated@@99 T@U) ) (! (= (type ($generated@@92 $generated@@99)) $generated@@85)
 :pattern ( ($generated@@92 $generated@@99))
))) (forall (($generated@@100 T@U) ($generated@@101 T@U) ) (! (= (type ($generated@@93 $generated@@100 $generated@@101)) $generated@@85)
 :pattern ( ($generated@@93 $generated@@100 $generated@@101))
))) (forall (($generated@@102 Int) ) (! (= (type ($generated@@94 $generated@@102)) $generated@@85)
 :pattern ( ($generated@@94 $generated@@102))
))) (forall (($generated@@103 T@U) ) (! (= (type ($generated@@95 $generated@@103)) $generated@@87)
 :pattern ( ($generated@@95 $generated@@103))
))))
(assert (forall (($generated@@104 T@U) ($generated@@105 T@U) ($generated@@106 T@U) ($generated@@107 T@U) ($generated@@108 T@U) ($generated@@109 T@U) ) (!  (=> (and (and (and (and (and (and (= (type $generated@@104) $generated@@73) (= (type $generated@@105) $generated@@73)) (= (type $generated@@106) $generated@@85)) (= (type $generated@@107) $generated@@86)) (= (type $generated@@108) $generated@@87)) (= (type $generated@@109) $generated@@87)) (and ($generated@@88 $generated@@108 ($generated@@89 $generated@@104)) ($generated@@88 $generated@@109 ($generated@@89 $generated@@105)))) (= ($generated@@83 $generated@@104 $generated@@105 $generated@@106 ($generated@@84 $generated@@107) $generated@@108 $generated@@109)  (and (=> (< 0 ($generated@@90 $generated@@106)) (and (and ($generated@@91 $generated@@108) ($generated@@91 $generated@@109)) (=> (and ($generated@@91 $generated@@108) ($generated@@91 $generated@@109)) (and (= ($generated@@92 $generated@@108) ($generated@@92 $generated@@109)) ($generated@@83 $generated@@104 $generated@@105 ($generated@@93 $generated@@106 ($generated@@94 1)) $generated@@107 ($generated@@95 $generated@@108) ($generated@@95 $generated@@109)))))) (=> (and (not (= $generated@@106 ($generated@@94 0))) (= ($generated@@90 $generated@@106) 0)) ($generated@@96 $generated@@104 $generated@@105 $generated@@107 $generated@@108 $generated@@109)))))
 :pattern ( ($generated@@83 $generated@@104 $generated@@105 $generated@@106 ($generated@@84 $generated@@107) $generated@@108 $generated@@109))
)))
(assert  (and (and (and (and (and (and (and (and (and (and (and (and (and (forall (($generated@@121 T@T) ($generated@@122 T@T) ) (= ($generated@@1 ($generated@@112 $generated@@121 $generated@@122)) 14)) (forall (($generated@@123 T@T) ($generated@@124 T@T) ) (! (= ($generated@@115 ($generated@@112 $generated@@123 $generated@@124)) $generated@@123)
 :pattern ( ($generated@@112 $generated@@123 $generated@@124))
))) (forall (($generated@@125 T@T) ($generated@@126 T@T) ) (! (= ($generated@@116 ($generated@@112 $generated@@125 $generated@@126)) $generated@@126)
 :pattern ( ($generated@@112 $generated@@125 $generated@@126))
))) (forall (($generated@@127 T@U) ($generated@@128 T@U) ) (! (let (($generated@@129 ($generated@@116 (type $generated@@127))))
(= (type ($generated@@117 $generated@@127 $generated@@128)) $generated@@129))
 :pattern ( ($generated@@117 $generated@@127 $generated@@128))
))) (forall (($generated@@130 T@U) ($generated@@131 T@U) ($generated@@132 T@U) ) (! (let (($generated@@133 (type $generated@@132)))
(let (($generated@@134 (type $generated@@131)))
(= (type ($generated@@118 $generated@@130 $generated@@131 $generated@@132)) ($generated@@112 $generated@@134 $generated@@133))))
 :pattern ( ($generated@@118 $generated@@130 $generated@@131 $generated@@132))
))) (forall (($generated@@135 T@U) ($generated@@136 T@U) ($generated@@137 T@U) ) (! (let (($generated@@138 ($generated@@116 (type $generated@@135))))
 (=> (= (type $generated@@137) $generated@@138) (= ($generated@@117 ($generated@@118 $generated@@135 $generated@@136 $generated@@137) $generated@@136) $generated@@137)))
 :weight 0
))) (and (forall (($generated@@139 T@U) ($generated@@140 T@U) ($generated@@141 T@U) ($generated@@142 T@U) ) (!  (or (= $generated@@141 $generated@@142) (= ($generated@@117 ($generated@@118 $generated@@140 $generated@@141 $generated@@139) $generated@@142) ($generated@@117 $generated@@140 $generated@@142)))
 :weight 0
)) (forall (($generated@@143 T@U) ($generated@@144 T@U) ($generated@@145 T@U) ($generated@@146 T@U) ) (!  (or true (= ($generated@@117 ($generated@@118 $generated@@144 $generated@@145 $generated@@143) $generated@@146) ($generated@@117 $generated@@144 $generated@@146)))
 :weight 0
)))) (= ($generated@@1 $generated@@113) 15)) (forall (($generated@@147 T@U) ($generated@@148 T@U) ) (! (let (($generated@@149 ($generated@@76 (type $generated@@148))))
(= (type ($generated@@119 $generated@@147 $generated@@148)) $generated@@149))
 :pattern ( ($generated@@119 $generated@@147 $generated@@148))
))) (= ($generated@@1 $generated@@114) 16)) (forall (($generated@@150 T@U) ($generated@@151 T@U) ($generated@@152 T@U) ) (! (= (type ($generated@@120 $generated@@150 $generated@@151 $generated@@152)) $generated@@114)
 :pattern ( ($generated@@120 $generated@@150 $generated@@151 $generated@@152))
))) (forall (($generated@@153 T@U) ($generated@@154 T@U) ($generated@@155 T@U) ) (! (let (($generated@@156 ($generated@@76 (type $generated@@154))))
 (=> (= (type $generated@@155) $generated@@156) (= ($generated@@119 ($generated@@120 $generated@@153 $generated@@154 $generated@@155) $generated@@154) $generated@@155)))
 :weight 0
))) (and (forall (($generated@@157 T@U) ($generated@@158 T@U) ($generated@@159 T@U) ($generated@@160 T@U) ) (!  (or (= $generated@@159 $generated@@160) (= ($generated@@119 ($generated@@120 $generated@@158 $generated@@159 $generated@@157) $generated@@160) ($generated@@119 $generated@@158 $generated@@160)))
 :weight 0
)) (forall (($generated@@161 T@U) ($generated@@162 T@U) ($generated@@163 T@U) ($generated@@164 T@U) ) (!  (or true (= ($generated@@119 ($generated@@120 $generated@@162 $generated@@163 $generated@@161) $generated@@164) ($generated@@119 $generated@@162 $generated@@164)))
 :weight 0
)))) (forall (($generated@@165 Int) ) (! (= (type ($generated@@111 $generated@@165)) $generated@@73)
 :pattern ( ($generated@@111 $generated@@165))
))))
(assert (forall (($generated@@166 T@U) ($generated@@167 T@U) ) (!  (=> (and (= (type $generated@@166) $generated@@2) (= (type $generated@@167) ($generated@@112 $generated@@113 $generated@@114))) ($generated@@110 $generated@@166 ($generated@@111 0) $generated@@167))
 :pattern ( ($generated@@110 $generated@@166 ($generated@@111 0) $generated@@167))
)))
(assert (forall (($generated@@168 T@U) ($generated@@169 T@U) ($generated@@170 T@U) ($generated@@171 T@U) ($generated@@172 T@U) ($generated@@173 T@U) ) (!  (=> (and (and (and (and (and (and (= (type $generated@@168) $generated@@73) (= (type $generated@@169) $generated@@73)) (= (type $generated@@170) $generated@@85)) (= (type $generated@@171) $generated@@86)) (= (type $generated@@172) $generated@@87)) (= (type $generated@@173) $generated@@87)) (not (= $generated@@170 ($generated@@94 0)))) (= ($generated@@83 $generated@@168 $generated@@169 $generated@@170 ($generated@@84 $generated@@171) $generated@@172 $generated@@173) ($generated@@83 $generated@@168 $generated@@169 $generated@@170 $generated@@171 $generated@@172 $generated@@173)))
 :pattern ( ($generated@@83 $generated@@168 $generated@@169 $generated@@170 ($generated@@84 $generated@@171) $generated@@172 $generated@@173))
)))
(assert (forall (($generated@@175 T@U) ($generated@@176 T@U) ($generated@@177 T@U) ) (!  (=> (and (and (and (= (type $generated@@175) $generated@@85) (= (type $generated@@176) $generated@@85)) (= (type $generated@@177) $generated@@85)) (and ($generated@@174 $generated@@175 $generated@@176) ($generated@@174 $generated@@176 $generated@@177))) ($generated@@174 $generated@@175 $generated@@177))
 :pattern ( ($generated@@174 $generated@@175 $generated@@176) ($generated@@174 $generated@@176 $generated@@177))
 :pattern ( ($generated@@174 $generated@@175 $generated@@176) ($generated@@174 $generated@@175 $generated@@177))
)))
(assert (= (type $generated@@178) $generated@@73))
(assert (forall (($generated@@179 T@U) ($generated@@180 T@U) ) (!  (=> (and (= (type $generated@@179) $generated@@2) (= (type $generated@@180) ($generated@@112 $generated@@113 $generated@@114))) ($generated@@110 $generated@@179 $generated@@178 $generated@@180))
 :pattern ( ($generated@@110 $generated@@179 $generated@@178 $generated@@180))
)))
(assert (forall (($generated@@181 T@U) ) (!  (=> (= (type $generated@@181) $generated@@2) ($generated@@88 $generated@@181 ($generated@@111 0)))
 :pattern ( ($generated@@88 $generated@@181 ($generated@@111 0)))
)))
(assert (forall (($generated@@182 T@U) ($generated@@183 Int) ($generated@@184 Int) ) (!  (=> (= (type $generated@@182) $generated@@85) (=> (and (and (<= 0 $generated@@183) (<= 0 $generated@@184)) (<= (+ $generated@@183 $generated@@184) ($generated@@90 $generated@@182))) (= ($generated@@93 ($generated@@93 $generated@@182 ($generated@@94 $generated@@183)) ($generated@@94 $generated@@184)) ($generated@@93 $generated@@182 ($generated@@94 (+ $generated@@183 $generated@@184))))))
 :pattern ( ($generated@@93 ($generated@@93 $generated@@182 ($generated@@94 $generated@@183)) ($generated@@94 $generated@@184)))
)))
(assert (forall (($generated@@187 T@U) ($generated@@188 T@U) ) (! (= (type ($generated@@186 $generated@@187 $generated@@188)) $generated@@73)
 :pattern ( ($generated@@186 $generated@@187 $generated@@188))
)))
(assert (forall (($generated@@189 T@U) ($generated@@190 T@U) ($generated@@191 T@U) ) (!  (=> (and (and (and (= (type $generated@@189) $generated@@73) (= (type $generated@@190) $generated@@73)) (= (type $generated@@191) $generated@@87)) ($generated@@88 $generated@@191 ($generated@@186 $generated@@189 $generated@@190))) ($generated@@185 $generated@@191))
 :pattern ( ($generated@@185 $generated@@191) ($generated@@88 $generated@@191 ($generated@@186 $generated@@189 $generated@@190)))
)))
(assert  (and (forall (($generated@@195 T@U) ) (! (= (type ($generated@@193 $generated@@195)) $generated@@85)
 :pattern ( ($generated@@193 $generated@@195))
)) (forall (($generated@@196 T@U) ) (! (= (type ($generated@@194 $generated@@196)) $generated@@85)
 :pattern ( ($generated@@194 $generated@@196))
))))
(assert (forall (($generated@@197 T@U) ($generated@@198 T@U) ) (!  (=> (and (and (= (type $generated@@197) $generated@@87) (= (type $generated@@198) $generated@@87)) true) (= ($generated@@192 $generated@@197 $generated@@198)  (and (= ($generated@@193 $generated@@197) ($generated@@193 $generated@@198)) (= ($generated@@194 $generated@@197) ($generated@@194 $generated@@198)))))
 :pattern ( ($generated@@192 $generated@@197 $generated@@198))
)))
(assert  (and (forall (($generated@@201 T@U) ) (! (= (type ($generated@@199 $generated@@201)) $generated@@77)
 :pattern ( ($generated@@199 $generated@@201))
)) (= (type $generated@@200) $generated@@87)))
(assert (= ($generated@@199 $generated@@200) $generated@@66))
(assert (forall (($generated@@204 T@U) ) (! (= (type ($generated@@202 $generated@@204)) $generated@@73)
 :pattern ( ($generated@@202 $generated@@204))
)))
(assert (forall (($generated@@205 T@U) ($generated@@206 T@U) ) (!  (=> (and (and (= (type $generated@@205) ($generated@@112 $generated@@85 $generated@@2)) (= (type $generated@@206) $generated@@73)) ($generated@@88 $generated@@205 ($generated@@202 $generated@@206))) ($generated@@203 $generated@@205))
 :pattern ( ($generated@@88 $generated@@205 ($generated@@202 $generated@@206)))
)))
(assert (forall (($generated@@207 T@U) ($generated@@208 T@U) ) (!  (=> (and (and (= (type $generated@@207) $generated@@73) (= (type $generated@@208) $generated@@87)) ($generated@@88 $generated@@208 ($generated@@89 $generated@@207))) ($generated@@91 $generated@@208))
 :pattern ( ($generated@@91 $generated@@208) ($generated@@88 $generated@@208 ($generated@@89 $generated@@207)))
)))
(assert  (and (and (and (and (and (and (and (forall (($generated@@215 T@T) ($generated@@216 T@T) ) (= ($generated@@1 ($generated@@211 $generated@@215 $generated@@216)) 17)) (forall (($generated@@217 T@T) ($generated@@218 T@T) ) (! (= ($generated@@212 ($generated@@211 $generated@@217 $generated@@218)) $generated@@217)
 :pattern ( ($generated@@211 $generated@@217 $generated@@218))
))) (forall (($generated@@219 T@T) ($generated@@220 T@T) ) (! (= ($generated@@213 ($generated@@211 $generated@@219 $generated@@220)) $generated@@220)
 :pattern ( ($generated@@211 $generated@@219 $generated@@220))
))) (forall (($generated@@221 T@U) ($generated@@222 T@U) ($generated@@223 T@U) ) (! (let (($generated@@224 ($generated@@213 (type $generated@@221))))
(= (type ($generated@@209 $generated@@221 $generated@@222 $generated@@223)) $generated@@224))
 :pattern ( ($generated@@209 $generated@@221 $generated@@222 $generated@@223))
))) (forall (($generated@@225 T@U) ($generated@@226 T@U) ($generated@@227 T@U) ($generated@@228 T@U) ) (! (let (($generated@@229 (type $generated@@228)))
(let (($generated@@230 (type $generated@@226)))
(= (type ($generated@@214 $generated@@225 $generated@@226 $generated@@227 $generated@@228)) ($generated@@211 $generated@@230 $generated@@229))))
 :pattern ( ($generated@@214 $generated@@225 $generated@@226 $generated@@227 $generated@@228))
))) (forall (($generated@@231 T@U) ($generated@@232 T@U) ($generated@@233 T@U) ($generated@@234 T@U) ) (! (let (($generated@@235 ($generated@@213 (type $generated@@231))))
 (=> (= (type $generated@@234) $generated@@235) (= ($generated@@209 ($generated@@214 $generated@@231 $generated@@232 $generated@@233 $generated@@234) $generated@@232 $generated@@233) $generated@@234)))
 :weight 0
))) (and (and (forall (($generated@@236 T@U) ($generated@@237 T@U) ($generated@@238 T@U) ($generated@@239 T@U) ($generated@@240 T@U) ($generated@@241 T@U) ) (!  (or (= $generated@@238 $generated@@240) (= ($generated@@209 ($generated@@214 $generated@@237 $generated@@238 $generated@@239 $generated@@236) $generated@@240 $generated@@241) ($generated@@209 $generated@@237 $generated@@240 $generated@@241)))
 :weight 0
)) (forall (($generated@@242 T@U) ($generated@@243 T@U) ($generated@@244 T@U) ($generated@@245 T@U) ($generated@@246 T@U) ($generated@@247 T@U) ) (!  (or (= $generated@@245 $generated@@247) (= ($generated@@209 ($generated@@214 $generated@@243 $generated@@244 $generated@@245 $generated@@242) $generated@@246 $generated@@247) ($generated@@209 $generated@@243 $generated@@246 $generated@@247)))
 :weight 0
))) (forall (($generated@@248 T@U) ($generated@@249 T@U) ($generated@@250 T@U) ($generated@@251 T@U) ($generated@@252 T@U) ($generated@@253 T@U) ) (!  (or true (= ($generated@@209 ($generated@@214 $generated@@249 $generated@@250 $generated@@251 $generated@@248) $generated@@252 $generated@@253) ($generated@@209 $generated@@249 $generated@@252 $generated@@253)))
 :weight 0
)))) (forall (($generated@@254 T@U) ($generated@@255 T@U) ($generated@@256 T@U) ($generated@@257 Bool) ) (! (= (type ($generated@@210 $generated@@254 $generated@@255 $generated@@256 $generated@@257)) ($generated@@211 $generated@@113 $generated@@4))
 :pattern ( ($generated@@210 $generated@@254 $generated@@255 $generated@@256 $generated@@257))
))))
(assert (forall (($generated@@258 T@U) ($generated@@259 T@U) ($generated@@260 T@U) ($generated@@261 Bool) ($generated@@262 T@U) ($generated@@263 T@U) ) (! (let (($generated@@264 ($generated@@76 (type $generated@@263))))
 (=> (and (and (and (and (= (type $generated@@258) $generated@@113) (= (type $generated@@259) ($generated@@112 $generated@@113 $generated@@114))) (= (type $generated@@260) ($generated@@75 $generated@@4))) (= (type $generated@@262) $generated@@113)) (= (type $generated@@263) ($generated@@75 $generated@@264))) (= ($generated@@0 ($generated@@209 ($generated@@210 $generated@@258 $generated@@259 $generated@@260 $generated@@261) $generated@@262 $generated@@263))  (=> (and (not (= $generated@@262 $generated@@258)) ($generated@@0 ($generated@@119 ($generated@@117 $generated@@259 $generated@@262) $generated@@260))) $generated@@261))))
 :pattern ( ($generated@@209 ($generated@@210 $generated@@258 $generated@@259 $generated@@260 $generated@@261) $generated@@262 $generated@@263))
)))
(assert (forall (($generated@@266 T@U) ($generated@@267 T@U) ($generated@@268 T@U) ($generated@@269 Bool) ) (! (= (type ($generated@@265 $generated@@266 $generated@@267 $generated@@268 $generated@@269)) ($generated@@211 $generated@@113 $generated@@4))
 :pattern ( ($generated@@265 $generated@@266 $generated@@267 $generated@@268 $generated@@269))
)))
(assert (forall (($generated@@270 T@U) ($generated@@271 T@U) ($generated@@272 T@U) ($generated@@273 Bool) ($generated@@274 T@U) ($generated@@275 T@U) ) (! (let (($generated@@276 ($generated@@76 (type $generated@@275))))
 (=> (and (and (and (and (= (type $generated@@270) $generated@@113) (= (type $generated@@271) ($generated@@112 $generated@@113 $generated@@114))) (= (type $generated@@272) ($generated@@75 $generated@@4))) (= (type $generated@@274) $generated@@113)) (= (type $generated@@275) ($generated@@75 $generated@@276))) (= ($generated@@0 ($generated@@209 ($generated@@265 $generated@@270 $generated@@271 $generated@@272 $generated@@273) $generated@@274 $generated@@275))  (=> (and (not (= $generated@@274 $generated@@270)) ($generated@@0 ($generated@@119 ($generated@@117 $generated@@271 $generated@@274) $generated@@272))) $generated@@273))))
 :pattern ( ($generated@@209 ($generated@@265 $generated@@270 $generated@@271 $generated@@272 $generated@@273) $generated@@274 $generated@@275))
)))
(assert (forall (($generated@@277 T@U) ($generated@@278 T@U) ($generated@@279 T@U) ($generated@@280 T@U) ($generated@@281 T@U) ($generated@@282 T@U) ) (!  (=> (and (and (and (and (and (and (= (type $generated@@277) $generated@@73) (= (type $generated@@278) $generated@@73)) (= (type $generated@@279) $generated@@85)) (= (type $generated@@280) $generated@@86)) (= (type $generated@@281) $generated@@87)) (= (type $generated@@282) $generated@@87)) (= $generated@@281 $generated@@282)) ($generated@@83 $generated@@277 $generated@@278 $generated@@279 ($generated@@84 $generated@@280) $generated@@281 $generated@@282))
 :pattern ( ($generated@@83 $generated@@277 $generated@@278 $generated@@279 ($generated@@84 $generated@@280) $generated@@281 $generated@@282))
)))
(assert (forall (($generated@@285 T@U) ) (! (= (type ($generated@@283 $generated@@285)) $generated@@73)
 :pattern ( ($generated@@283 $generated@@285))
)))
(assert (forall (($generated@@286 T@U) ($generated@@287 T@U) ) (!  (=> (and (and (= (type $generated@@286) $generated@@73) (= (type $generated@@287) ($generated@@112 $generated@@113 $generated@@114))) ($generated@@284 $generated@@287)) ($generated@@110 $generated@@200 ($generated@@283 $generated@@286) $generated@@287))
 :pattern ( ($generated@@110 $generated@@200 ($generated@@283 $generated@@286) $generated@@287))
)))
(assert (forall (($generated@@290 T@U) ($generated@@291 T@U) ) (! (= (type ($generated@@288 $generated@@290 $generated@@291)) $generated@@87)
 :pattern ( ($generated@@288 $generated@@290 $generated@@291))
)))
(assert (forall (($generated@@292 T@U) ($generated@@293 T@U) ($generated@@294 T@U) ($generated@@295 T@U) ) (!  (=> (and (and (and (= (type $generated@@292) $generated@@73) (= (type $generated@@293) $generated@@73)) (= (type $generated@@294) $generated@@85)) (= (type $generated@@295) $generated@@85)) (= ($generated@@88 ($generated@@288 $generated@@294 $generated@@295) ($generated@@186 $generated@@292 $generated@@293))  (and ($generated@@289 $generated@@294 $generated@@292) ($generated@@289 $generated@@295 $generated@@293))))
 :pattern ( ($generated@@88 ($generated@@288 $generated@@294 $generated@@295) ($generated@@186 $generated@@292 $generated@@293)))
)))
(assert (forall (($generated@@296 T@U) ($generated@@297 T@U) ($generated@@298 T@U) ($generated@@299 T@U) ($generated@@300 T@U) ) (!  (=> (and (and (and (and (= (type $generated@@296) $generated@@73) (= (type $generated@@297) $generated@@73)) (= (type $generated@@298) $generated@@86)) (= (type $generated@@299) $generated@@87)) (= (type $generated@@300) $generated@@87)) (= ($generated@@96 $generated@@296 $generated@@297 ($generated@@84 $generated@@298) $generated@@299 $generated@@300) (= $generated@@299 $generated@@300)))
 :pattern ( ($generated@@96 $generated@@296 $generated@@297 ($generated@@84 $generated@@298) $generated@@299 $generated@@300))
)))
(assert (forall (($generated@@301 T@U) ) (!  (=> (= (type $generated@@301) $generated@@73) ($generated@@88 $generated@@200 ($generated@@283 $generated@@301)))
 :pattern ( ($generated@@88 $generated@@200 ($generated@@283 $generated@@301)))
)))
(assert (forall (($generated@@302 T@U) ($generated@@303 T@U) ) (!  (=> (and (= (type $generated@@302) $generated@@87) (= (type $generated@@303) $generated@@87)) (= ($generated@@192 $generated@@302 $generated@@303) (= $generated@@302 $generated@@303)))
 :pattern ( ($generated@@192 $generated@@302 $generated@@303))
)))
(assert (forall (($generated@@305 T@U) ($generated@@306 T@U) ) (!  (=> (and (= (type $generated@@305) $generated@@87) (= (type $generated@@306) $generated@@87)) (= ($generated@@304 $generated@@305 $generated@@306) (= $generated@@305 $generated@@306)))
 :pattern ( ($generated@@304 $generated@@305 $generated@@306))
)))
(assert  (and (forall (($generated@@310 T@U) ) (! (= (type ($generated@@308 $generated@@310)) $generated@@85)
 :pattern ( ($generated@@308 $generated@@310))
)) (forall (($generated@@311 T@U) ) (! (= (type ($generated@@309 $generated@@311)) $generated@@87)
 :pattern ( ($generated@@309 $generated@@311))
))))
(assert (forall (($generated@@312 T@U) ($generated@@313 T@U) ) (!  (=> (and (and (= (type $generated@@312) $generated@@87) (= (type $generated@@313) $generated@@87)) (and ($generated@@307 $generated@@312) ($generated@@307 $generated@@313))) (= ($generated@@304 $generated@@312 $generated@@313)  (and (= ($generated@@308 $generated@@312) ($generated@@308 $generated@@313)) ($generated@@304 ($generated@@309 $generated@@312) ($generated@@309 $generated@@313)))))
 :pattern ( ($generated@@304 $generated@@312 $generated@@313) ($generated@@307 $generated@@312))
 :pattern ( ($generated@@304 $generated@@312 $generated@@313) ($generated@@307 $generated@@313))
)))
(assert  (and (forall (($generated@@319 T@U) ($generated@@320 T@U) ($generated@@321 Int) ($generated@@322 T@U) ) (! (= (type ($generated@@315 $generated@@319 $generated@@320 $generated@@321 $generated@@322)) $generated@@87)
 :pattern ( ($generated@@315 $generated@@319 $generated@@320 $generated@@321 $generated@@322))
)) (forall (($generated@@323 T@U) ($generated@@324 T@U) ) (! (= (type ($generated@@318 $generated@@323 $generated@@324)) $generated@@87)
 :pattern ( ($generated@@318 $generated@@323 $generated@@324))
))))
(assert  (=> (<= 1 $generated@@314) (forall (($generated@@325 T@U) ($generated@@326 T@U) ($generated@@327 Int) ($generated@@328 T@U) ) (!  (=> (and (and (and (= (type $generated@@325) $generated@@73) (= (type $generated@@326) $generated@@86)) (= (type $generated@@328) $generated@@87)) (or ($generated@@316 $generated@@325 $generated@@327 $generated@@328) (and (not (= 1 $generated@@314)) (and (<= ($generated@@317 0) $generated@@327) ($generated@@88 $generated@@328 ($generated@@89 $generated@@325)))))) (and (=> (not (= $generated@@327 ($generated@@317 0))) (and ($generated@@91 $generated@@328) (and ($generated@@91 $generated@@328) ($generated@@316 $generated@@325 (- $generated@@327 1) ($generated@@95 $generated@@328))))) (= ($generated@@315 $generated@@325 ($generated@@84 $generated@@326) $generated@@327 $generated@@328) (ite (= $generated@@327 ($generated@@317 0)) $generated@@200 ($generated@@318 ($generated@@92 $generated@@328) ($generated@@315 $generated@@325 $generated@@326 (- $generated@@327 1) ($generated@@95 $generated@@328)))))))
 :pattern ( ($generated@@315 $generated@@325 ($generated@@84 $generated@@326) $generated@@327 $generated@@328))
))))
(assert (forall (($generated@@330 T@U) ) (! (= (type ($generated@@329 $generated@@330)) $generated@@73)
 :pattern ( ($generated@@329 $generated@@330))
)))
(assert (forall (($generated@@331 T@U) ($generated@@332 T@U) ) (!  (=> (and (= (type $generated@@331) ($generated@@112 $generated@@85 $generated@@4)) (= (type $generated@@332) $generated@@73)) (= ($generated@@88 $generated@@331 ($generated@@329 $generated@@332)) (forall (($generated@@333 T@U) ) (!  (=> (and (= (type $generated@@333) $generated@@85) ($generated@@0 ($generated@@117 $generated@@331 $generated@@333))) ($generated@@289 $generated@@333 $generated@@332))
 :pattern ( ($generated@@117 $generated@@331 $generated@@333))
))))
 :pattern ( ($generated@@88 $generated@@331 ($generated@@329 $generated@@332)))
)))
(assert (forall (($generated@@335 T@U) ) (! (= (type ($generated@@334 $generated@@335)) $generated@@73)
 :pattern ( ($generated@@334 $generated@@335))
)))
(assert (forall (($generated@@336 T@U) ($generated@@337 T@U) ) (!  (=> (and (= (type $generated@@336) ($generated@@112 $generated@@85 $generated@@4)) (= (type $generated@@337) $generated@@73)) (= ($generated@@88 $generated@@336 ($generated@@334 $generated@@337)) (forall (($generated@@338 T@U) ) (!  (=> (and (= (type $generated@@338) $generated@@85) ($generated@@0 ($generated@@117 $generated@@336 $generated@@338))) ($generated@@289 $generated@@338 $generated@@337))
 :pattern ( ($generated@@117 $generated@@336 $generated@@338))
))))
 :pattern ( ($generated@@88 $generated@@336 ($generated@@334 $generated@@337)))
)))
(assert (forall (($generated@@339 Int) ) (! (= ($generated@@317 $generated@@339) $generated@@339)
 :pattern ( ($generated@@317 $generated@@339))
)))
(assert (forall (($generated@@341 T@U) ) (! (let (($generated@@342 (type $generated@@341)))
(= (type ($generated@@340 $generated@@341)) $generated@@342))
 :pattern ( ($generated@@340 $generated@@341))
)))
(assert (forall (($generated@@343 T@U) ) (! (= ($generated@@340 $generated@@343) $generated@@343)
 :pattern ( ($generated@@340 $generated@@343))
)))
(assert (forall (($generated@@345 T@U) ($generated@@346 T@U) ) (!  (=> (and (and (= (type $generated@@345) $generated@@87) (= (type $generated@@346) $generated@@87)) (and ($generated@@344 $generated@@345) ($generated@@344 $generated@@346))) (= ($generated@@304 $generated@@345 $generated@@346) true))
 :pattern ( ($generated@@304 $generated@@345 $generated@@346) ($generated@@344 $generated@@345))
 :pattern ( ($generated@@304 $generated@@345 $generated@@346) ($generated@@344 $generated@@346))
)))
(assert (forall (($generated@@348 T@U) ($generated@@349 T@U) ) (! (= (type ($generated@@347 $generated@@348 $generated@@349)) $generated@@87)
 :pattern ( ($generated@@347 $generated@@348 $generated@@349))
)))
(assert (forall (($generated@@350 T@U) ($generated@@351 T@U) ($generated@@352 T@U) ) (!  (=> (and (and (= (type $generated@@350) $generated@@73) (= (type $generated@@351) $generated@@85)) (= (type $generated@@352) $generated@@87)) (= ($generated@@88 ($generated@@347 $generated@@351 $generated@@352) ($generated@@89 $generated@@350))  (and ($generated@@289 $generated@@351 $generated@@350) ($generated@@88 $generated@@352 ($generated@@89 $generated@@350)))))
 :pattern ( ($generated@@88 ($generated@@347 $generated@@351 $generated@@352) ($generated@@89 $generated@@350)))
)))
(assert (forall (($generated@@353 T@U) ($generated@@354 T@U) ($generated@@355 T@U) ) (!  (=> (and (and (= (type $generated@@353) $generated@@73) (= (type $generated@@354) $generated@@85)) (= (type $generated@@355) $generated@@87)) (= ($generated@@88 ($generated@@318 $generated@@354 $generated@@355) ($generated@@283 $generated@@353))  (and ($generated@@289 $generated@@354 $generated@@353) ($generated@@88 $generated@@355 ($generated@@283 $generated@@353)))))
 :pattern ( ($generated@@88 ($generated@@318 $generated@@354 $generated@@355) ($generated@@283 $generated@@353)))
)))
(assert (forall (($generated@@357 T@U) ($generated@@358 T@U) ($generated@@359 T@U) ($generated@@360 T@U) ($generated@@361 T@U) ) (!  (=> (and (and (and (and (and (= (type $generated@@357) $generated@@73) (= (type $generated@@358) $generated@@73)) (= (type $generated@@359) $generated@@85)) (= (type $generated@@360) $generated@@85)) (= (type $generated@@361) ($generated@@112 $generated@@113 $generated@@114))) ($generated@@284 $generated@@361)) (= ($generated@@110 ($generated@@288 $generated@@359 $generated@@360) ($generated@@186 $generated@@357 $generated@@358) $generated@@361)  (and ($generated@@356 $generated@@359 $generated@@357 $generated@@361) ($generated@@356 $generated@@360 $generated@@358 $generated@@361))))
 :pattern ( ($generated@@110 ($generated@@288 $generated@@359 $generated@@360) ($generated@@186 $generated@@357 $generated@@358) $generated@@361))
)))
(assert (forall (($generated@@362 T@U) ) (!  (=> (= (type $generated@@362) $generated@@87) (= ($generated@@185 $generated@@362) (= ($generated@@199 $generated@@362) $generated@@62)))
 :pattern ( ($generated@@185 $generated@@362))
)))
(assert (forall (($generated@@363 T@U) ) (!  (=> (= (type $generated@@363) $generated@@87) (= ($generated@@91 $generated@@363) (= ($generated@@199 $generated@@363) $generated@@64)))
 :pattern ( ($generated@@91 $generated@@363))
)))
(assert (forall (($generated@@364 T@U) ) (!  (=> (= (type $generated@@364) $generated@@87) (= ($generated@@344 $generated@@364) (= ($generated@@199 $generated@@364) $generated@@66)))
 :pattern ( ($generated@@344 $generated@@364))
)))
(assert (forall (($generated@@365 T@U) ) (!  (=> (= (type $generated@@365) $generated@@87) (= ($generated@@307 $generated@@365) (= ($generated@@199 $generated@@365) $generated@@68)))
 :pattern ( ($generated@@307 $generated@@365))
)))
(assert (forall (($generated@@366 T@U) ) (!  (=> (and (= (type $generated@@366) $generated@@87) ($generated@@185 $generated@@366)) (exists (($generated@@367 T@U) ($generated@@368 T@U) ) (!  (and (and (= (type $generated@@367) $generated@@85) (= (type $generated@@368) $generated@@85)) (= $generated@@366 ($generated@@288 $generated@@367 $generated@@368)))
 :no-pattern (type $generated@@367)
 :no-pattern (type $generated@@368)
 :no-pattern ($generated $generated@@367)
 :no-pattern ($generated@@0 $generated@@367)
 :no-pattern ($generated $generated@@368)
 :no-pattern ($generated@@0 $generated@@368)
)))
 :pattern ( ($generated@@185 $generated@@366))
)))
(assert (forall (($generated@@369 T@U) ) (!  (=> (and (= (type $generated@@369) $generated@@87) ($generated@@91 $generated@@369)) (exists (($generated@@370 T@U) ($generated@@371 T@U) ) (!  (and (and (= (type $generated@@370) $generated@@85) (= (type $generated@@371) $generated@@87)) (= $generated@@369 ($generated@@347 $generated@@370 $generated@@371)))
 :no-pattern (type $generated@@370)
 :no-pattern (type $generated@@371)
 :no-pattern ($generated $generated@@370)
 :no-pattern ($generated@@0 $generated@@370)
 :no-pattern ($generated $generated@@371)
 :no-pattern ($generated@@0 $generated@@371)
)))
 :pattern ( ($generated@@91 $generated@@369))
)))
(assert (forall (($generated@@372 T@U) ) (!  (=> (and (= (type $generated@@372) $generated@@87) ($generated@@307 $generated@@372)) (exists (($generated@@373 T@U) ($generated@@374 T@U) ) (!  (and (and (= (type $generated@@373) $generated@@85) (= (type $generated@@374) $generated@@87)) (= $generated@@372 ($generated@@318 $generated@@373 $generated@@374)))
 :no-pattern (type $generated@@373)
 :no-pattern (type $generated@@374)
 :no-pattern ($generated $generated@@373)
 :no-pattern ($generated@@0 $generated@@373)
 :no-pattern ($generated $generated@@374)
 :no-pattern ($generated@@0 $generated@@374)
)))
 :pattern ( ($generated@@307 $generated@@372))
)))
(assert  (and (and (forall (($generated@@379 T@T) ) (= ($generated@@1 ($generated@@377 $generated@@379)) 18)) (forall (($generated@@380 T@T) ) (! (= ($generated@@378 ($generated@@377 $generated@@380)) $generated@@380)
 :pattern ( ($generated@@377 $generated@@380))
))) (forall (($generated@@381 T@T) ) (! (= (type ($generated@@375 $generated@@381)) ($generated@@377 $generated@@381))
 :pattern ( ($generated@@375 $generated@@381))
))))
(assert (forall (($generated@@382 T@T) ) (! (= ($generated@@376 ($generated@@375 $generated@@382)) 0)
 :pattern ( ($generated@@375 $generated@@382))
)))
(assert (forall (($generated@@383 T@U) ) (!  (=> (and (= (type $generated@@383) $generated@@87) ($generated@@344 $generated@@383)) (= $generated@@383 $generated@@200))
 :pattern ( ($generated@@344 $generated@@383))
)))
(assert (forall (($generated@@384 T@U) ) (!  (=> (= (type $generated@@384) $generated@@2) (= ($generated@@88 $generated@@384 $generated@@178) (<= ($generated@@317 0) ($generated $generated@@384))))
 :pattern ( ($generated@@88 $generated@@384 $generated@@178))
)))
(assert  (and (forall (($generated@@387 T@U) ) (! (= (type ($generated@@385 $generated@@387)) $generated@@86)
 :pattern ( ($generated@@385 $generated@@387))
)) (= (type $generated@@386) $generated@@86)))
(assert (forall (($generated@@388 T@U) ($generated@@389 T@U) ($generated@@390 Int) ($generated@@391 T@U) ) (!  (=> (and (and (= (type $generated@@388) $generated@@73) (= (type $generated@@389) $generated@@86)) (= (type $generated@@391) $generated@@87)) (= ($generated@@315 $generated@@388 $generated@@389 $generated@@390 $generated@@391) ($generated@@315 $generated@@388 $generated@@386 $generated@@390 $generated@@391)))
 :pattern ( ($generated@@315 $generated@@388 ($generated@@385 $generated@@389) $generated@@390 $generated@@391))
)))
(assert (forall (($generated@@392 T@U) ($generated@@393 T@U) ($generated@@394 T@U) ($generated@@395 T@U) ($generated@@396 T@U) ) (!  (=> (and (and (and (and (and (= (type $generated@@392) $generated@@73) (= (type $generated@@393) $generated@@73)) (= (type $generated@@394) $generated@@86)) (= (type $generated@@395) $generated@@87)) (= (type $generated@@396) $generated@@87)) (and ($generated@@88 $generated@@395 ($generated@@89 $generated@@392)) ($generated@@88 $generated@@396 ($generated@@89 $generated@@393)))) (= ($generated@@96 $generated@@392 $generated@@393 ($generated@@84 $generated@@394) $generated@@395 $generated@@396)  (and (and ($generated@@91 $generated@@395) ($generated@@91 $generated@@396)) (=> (and ($generated@@91 $generated@@395) ($generated@@91 $generated@@396)) (and (= ($generated@@92 $generated@@395) ($generated@@92 $generated@@396)) ($generated@@96 $generated@@392 $generated@@393 $generated@@394 ($generated@@95 $generated@@395) ($generated@@95 $generated@@396)))))))
 :pattern ( ($generated@@96 $generated@@392 $generated@@393 ($generated@@84 $generated@@394) $generated@@395 $generated@@396))
)))
(assert (forall (($generated@@398 T@U) ) (! (= (type ($generated@@397 $generated@@398)) $generated@@85)
 :pattern ( ($generated@@397 $generated@@398))
)))
(assert (forall (($generated@@399 T@U) ($generated@@400 T@U) ($generated@@401 T@U) ) (!  (=> (and (= (type $generated@@400) $generated@@73) (= (type $generated@@401) ($generated@@112 $generated@@113 $generated@@114))) (= ($generated@@356 ($generated@@397 $generated@@399) $generated@@400 $generated@@401) ($generated@@110 $generated@@399 $generated@@400 $generated@@401)))
 :pattern ( ($generated@@356 ($generated@@397 $generated@@399) $generated@@400 $generated@@401))
)))
(assert (forall (($generated@@404 T@T) ) (! (= (type ($generated@@403 $generated@@404)) ($generated@@112 $generated@@404 $generated@@2))
 :pattern ( ($generated@@403 $generated@@404))
)))
(assert (forall (($generated@@405 T@U) ) (! (let (($generated@@406 ($generated@@115 (type $generated@@405))))
 (=> (= (type $generated@@405) ($generated@@112 $generated@@406 $generated@@2)) (and (= (= ($generated@@402 $generated@@405) 0) (= $generated@@405 ($generated@@403 $generated@@406))) (=> (not (= ($generated@@402 $generated@@405) 0)) (exists (($generated@@407 T@U) ) (!  (and (= (type $generated@@407) $generated@@406) (< 0 ($generated ($generated@@117 $generated@@405 $generated@@407))))
 :no-pattern (type $generated@@407)
 :no-pattern ($generated $generated@@407)
 :no-pattern ($generated@@0 $generated@@407)
))))))
 :pattern ( ($generated@@402 $generated@@405))
)))
(assert (forall (($generated@@409 T@U) ) (! (= (type ($generated@@408 $generated@@409)) $generated@@78)
 :pattern ( ($generated@@408 $generated@@409))
)))
(assert (forall (($generated@@410 T@U) ) (!  (=> (= (type $generated@@410) $generated@@73) (and (= ($generated@@81 ($generated@@89 $generated@@410)) $generated@@65) (= ($generated@@408 ($generated@@89 $generated@@410)) $generated@@71)))
 :pattern ( ($generated@@89 $generated@@410))
)))
(assert (forall (($generated@@411 T@U) ) (!  (=> (= (type $generated@@411) $generated@@73) (and (= ($generated@@81 ($generated@@283 $generated@@411)) $generated@@67) (= ($generated@@408 ($generated@@283 $generated@@411)) $generated@@72)))
 :pattern ( ($generated@@283 $generated@@411))
)))
(assert  (and (and (and (and (forall (($generated@@417 T@T) ($generated@@418 T@T) ) (= ($generated@@1 ($generated@@414 $generated@@417 $generated@@418)) 19)) (forall (($generated@@419 T@T) ($generated@@420 T@T) ) (! (= ($generated@@415 ($generated@@414 $generated@@419 $generated@@420)) $generated@@419)
 :pattern ( ($generated@@414 $generated@@419 $generated@@420))
))) (forall (($generated@@421 T@T) ($generated@@422 T@T) ) (! (= ($generated@@416 ($generated@@414 $generated@@421 $generated@@422)) $generated@@422)
 :pattern ( ($generated@@414 $generated@@421 $generated@@422))
))) (forall (($generated@@423 T@U) ) (! (let (($generated@@424 ($generated@@415 (type $generated@@423))))
(= (type ($generated@@412 $generated@@423)) ($generated@@112 $generated@@424 $generated@@4)))
 :pattern ( ($generated@@412 $generated@@423))
))) (forall (($generated@@425 T@T) ($generated@@426 T@T) ) (! (= (type ($generated@@413 $generated@@425 $generated@@426)) ($generated@@414 $generated@@425 $generated@@426))
 :pattern ( ($generated@@413 $generated@@425 $generated@@426))
))))
(assert (forall (($generated@@427 T@U) ($generated@@428 T@T) ) (! (let (($generated@@429 (type $generated@@427)))
 (not ($generated@@0 ($generated@@117 ($generated@@412 ($generated@@413 $generated@@429 $generated@@428)) $generated@@427))))
 :pattern ( (let (($generated@@429 (type $generated@@427)))
($generated@@117 ($generated@@412 ($generated@@413 $generated@@429 $generated@@428)) $generated@@427)))
)))
(assert  (and (and (and (and (forall (($generated@@435 T@T) ($generated@@436 T@T) ) (= ($generated@@1 ($generated@@432 $generated@@435 $generated@@436)) 20)) (forall (($generated@@437 T@T) ($generated@@438 T@T) ) (! (= ($generated@@433 ($generated@@432 $generated@@437 $generated@@438)) $generated@@437)
 :pattern ( ($generated@@432 $generated@@437 $generated@@438))
))) (forall (($generated@@439 T@T) ($generated@@440 T@T) ) (! (= ($generated@@434 ($generated@@432 $generated@@439 $generated@@440)) $generated@@440)
 :pattern ( ($generated@@432 $generated@@439 $generated@@440))
))) (forall (($generated@@441 T@U) ) (! (let (($generated@@442 ($generated@@433 (type $generated@@441))))
(= (type ($generated@@430 $generated@@441)) ($generated@@112 $generated@@442 $generated@@4)))
 :pattern ( ($generated@@430 $generated@@441))
))) (forall (($generated@@443 T@T) ($generated@@444 T@T) ) (! (= (type ($generated@@431 $generated@@443 $generated@@444)) ($generated@@432 $generated@@443 $generated@@444))
 :pattern ( ($generated@@431 $generated@@443 $generated@@444))
))))
(assert (forall (($generated@@445 T@U) ($generated@@446 T@T) ) (! (let (($generated@@447 (type $generated@@445)))
 (not ($generated@@0 ($generated@@117 ($generated@@430 ($generated@@431 $generated@@447 $generated@@446)) $generated@@445))))
 :pattern ( (let (($generated@@447 (type $generated@@445)))
($generated@@117 ($generated@@430 ($generated@@431 $generated@@447 $generated@@446)) $generated@@445)))
)))
(assert (forall (($generated@@449 T@U) ($generated@@450 T@U) ) (!  (=> (and (and (= (type $generated@@449) $generated@@85) (= (type $generated@@450) $generated@@85)) (and ($generated@@448 $generated@@450) (<= ($generated@@90 $generated@@450) ($generated@@90 $generated@@449)))) (and (= ($generated@@448 ($generated@@93 $generated@@449 $generated@@450)) ($generated@@448 $generated@@449)) (= ($generated@@90 ($generated@@93 $generated@@449 $generated@@450)) (- ($generated@@90 $generated@@449) ($generated@@90 $generated@@450)))))
 :pattern ( ($generated@@93 $generated@@449 $generated@@450))
)))
(assert (forall (($generated@@451 Int) ) (!  (=> (<= 0 $generated@@451) (and ($generated@@448 ($generated@@94 $generated@@451)) (= ($generated@@90 ($generated@@94 $generated@@451)) $generated@@451)))
 :pattern ( ($generated@@94 $generated@@451))
)))
(assert (forall (($generated@@452 T@U) ) (! (let (($generated@@453 ($generated@@115 (type $generated@@452))))
 (=> (= (type $generated@@452) ($generated@@112 $generated@@453 $generated@@2)) (= ($generated@@203 $generated@@452) (forall (($generated@@454 T@U) ) (!  (=> (= (type $generated@@454) $generated@@453) (and (<= 0 ($generated ($generated@@117 $generated@@452 $generated@@454))) (<= ($generated ($generated@@117 $generated@@452 $generated@@454)) ($generated@@402 $generated@@452))))
 :pattern ( ($generated@@117 $generated@@452 $generated@@454))
)))))
 :pattern ( ($generated@@203 $generated@@452))
)))
(assert (forall (($generated@@456 T@T) ($generated@@457 T@U) ) (! (= (type ($generated@@455 $generated@@456 $generated@@457)) $generated@@456)
 :pattern ( ($generated@@455 $generated@@456 $generated@@457))
)))
(assert (forall (($generated@@458 T@U) ) (!  (=> (and (= (type $generated@@458) $generated@@85) ($generated@@289 $generated@@458 $generated@@178)) (and (= ($generated@@397 ($generated@@455 $generated@@2 $generated@@458)) $generated@@458) ($generated@@88 ($generated@@455 $generated@@2 $generated@@458) $generated@@178)))
 :pattern ( ($generated@@289 $generated@@458 $generated@@178))
)))
(assert (forall (($generated@@459 T@U) ) (! (let (($generated@@460 ($generated@@416 (type $generated@@459))))
(let (($generated@@461 ($generated@@415 (type $generated@@459))))
 (=> (= (type $generated@@459) ($generated@@414 $generated@@461 $generated@@460)) (or (= $generated@@459 ($generated@@413 $generated@@461 $generated@@460)) (exists (($generated@@462 T@U) ) (!  (and (= (type $generated@@462) $generated@@461) ($generated@@0 ($generated@@117 ($generated@@412 $generated@@459) $generated@@462)))
 :no-pattern (type $generated@@462)
 :no-pattern ($generated $generated@@462)
 :no-pattern ($generated@@0 $generated@@462)
))))))
 :pattern ( ($generated@@412 $generated@@459))
)))
(assert (forall (($generated@@464 T@U) ) (! (let (($generated@@465 ($generated@@416 (type $generated@@464))))
(= (type ($generated@@463 $generated@@464)) ($generated@@112 $generated@@465 $generated@@4)))
 :pattern ( ($generated@@463 $generated@@464))
)))
(assert (forall (($generated@@466 T@U) ) (! (let (($generated@@467 ($generated@@416 (type $generated@@466))))
(let (($generated@@468 ($generated@@415 (type $generated@@466))))
 (=> (= (type $generated@@466) ($generated@@414 $generated@@468 $generated@@467)) (or (= $generated@@466 ($generated@@413 $generated@@468 $generated@@467)) (exists (($generated@@469 T@U) ) (!  (and (= (type $generated@@469) $generated@@467) ($generated@@0 ($generated@@117 ($generated@@463 $generated@@466) $generated@@469)))
 :no-pattern (type $generated@@469)
 :no-pattern ($generated $generated@@469)
 :no-pattern ($generated@@0 $generated@@469)
))))))
 :pattern ( ($generated@@463 $generated@@466))
)))
(assert (forall (($generated@@470 T@U) ) (! (let (($generated@@471 ($generated@@434 (type $generated@@470))))
(let (($generated@@472 ($generated@@433 (type $generated@@470))))
 (=> (= (type $generated@@470) ($generated@@432 $generated@@472 $generated@@471)) (or (= $generated@@470 ($generated@@431 $generated@@472 $generated@@471)) (exists (($generated@@473 T@U) ) (!  (and (= (type $generated@@473) $generated@@472) ($generated@@0 ($generated@@117 ($generated@@430 $generated@@470) $generated@@473)))
 :no-pattern (type $generated@@473)
 :no-pattern ($generated $generated@@473)
 :no-pattern ($generated@@0 $generated@@473)
))))))
 :pattern ( ($generated@@430 $generated@@470))
)))
(assert (forall (($generated@@475 T@U) ) (! (let (($generated@@476 ($generated@@434 (type $generated@@475))))
(= (type ($generated@@474 $generated@@475)) ($generated@@112 $generated@@476 $generated@@4)))
 :pattern ( ($generated@@474 $generated@@475))
)))
(assert (forall (($generated@@477 T@U) ) (! (let (($generated@@478 ($generated@@434 (type $generated@@477))))
(let (($generated@@479 ($generated@@433 (type $generated@@477))))
 (=> (= (type $generated@@477) ($generated@@432 $generated@@479 $generated@@478)) (or (= $generated@@477 ($generated@@431 $generated@@479 $generated@@478)) (exists (($generated@@480 T@U) ) (!  (and (= (type $generated@@480) $generated@@478) ($generated@@0 ($generated@@117 ($generated@@474 $generated@@477) $generated@@480)))
 :no-pattern (type $generated@@480)
 :no-pattern ($generated $generated@@480)
 :no-pattern ($generated@@0 $generated@@480)
))))))
 :pattern ( ($generated@@474 $generated@@477))
)))
(assert  (=> (<= 1 $generated@@314) (forall (($generated@@481 T@U) ($generated@@482 T@U) ($generated@@483 Int) ($generated@@484 T@U) ) (!  (=> (and (and (and (= (type $generated@@481) $generated@@73) (= (type $generated@@482) $generated@@86)) (= (type $generated@@484) $generated@@87)) (or ($generated@@316 $generated@@481 ($generated@@317 $generated@@483) ($generated@@340 $generated@@484)) (and (not (= 1 $generated@@314)) (and (<= ($generated@@317 0) $generated@@483) ($generated@@88 $generated@@484 ($generated@@89 $generated@@481)))))) (and (=> (not (= ($generated@@317 $generated@@483) ($generated@@317 0))) (and ($generated@@91 ($generated@@340 $generated@@484)) (and ($generated@@91 ($generated@@340 $generated@@484)) ($generated@@316 $generated@@481 ($generated@@317 (- $generated@@483 1)) ($generated@@340 ($generated@@95 ($generated@@340 $generated@@484))))))) (= ($generated@@315 $generated@@481 ($generated@@84 $generated@@482) ($generated@@317 $generated@@483) ($generated@@340 $generated@@484)) (ite (= ($generated@@317 $generated@@483) ($generated@@317 0)) $generated@@200 ($generated@@318 ($generated@@340 ($generated@@92 ($generated@@340 $generated@@484))) ($generated@@340 ($generated@@315 $generated@@481 ($generated@@84 $generated@@482) ($generated@@317 (- $generated@@483 1)) ($generated@@340 ($generated@@95 ($generated@@340 $generated@@484))))))))))
 :weight 3
 :pattern ( ($generated@@315 $generated@@481 ($generated@@84 $generated@@482) ($generated@@317 $generated@@483) ($generated@@340 $generated@@484)))
))))
(assert (forall (($generated@@485 T@U) ($generated@@486 T@U) ) (!  (=> (and (= (type $generated@@485) ($generated@@112 $generated@@85 $generated@@2)) (= (type $generated@@486) $generated@@73)) (= ($generated@@88 $generated@@485 ($generated@@202 $generated@@486)) (forall (($generated@@487 T@U) ) (!  (=> (and (= (type $generated@@487) $generated@@85) (< 0 ($generated ($generated@@117 $generated@@485 $generated@@487)))) ($generated@@289 $generated@@487 $generated@@486))
 :pattern ( ($generated@@117 $generated@@485 $generated@@487))
))))
 :pattern ( ($generated@@88 $generated@@485 ($generated@@202 $generated@@486)))
)))
(assert (forall (($generated@@488 T@U) ($generated@@489 T@U) ) (!  (=> (and (= (type $generated@@488) $generated@@85) (= (type $generated@@489) $generated@@85)) (or (or ($generated@@174 $generated@@488 $generated@@489) (= $generated@@488 $generated@@489)) ($generated@@174 $generated@@489 $generated@@488)))
 :pattern ( ($generated@@174 $generated@@488 $generated@@489) ($generated@@174 $generated@@489 $generated@@488))
)))
(assert (forall (($generated@@490 T@U) ($generated@@491 T@U) ($generated@@492 T@U) ) (!  (=> (and (and (= (type $generated@@490) ($generated@@112 $generated@@85 $generated@@4)) (= (type $generated@@491) $generated@@73)) (= (type $generated@@492) ($generated@@112 $generated@@113 $generated@@114))) (= ($generated@@110 $generated@@490 ($generated@@329 $generated@@491) $generated@@492) (forall (($generated@@493 T@U) ) (!  (=> (and (= (type $generated@@493) $generated@@85) ($generated@@0 ($generated@@117 $generated@@490 $generated@@493))) ($generated@@356 $generated@@493 $generated@@491 $generated@@492))
 :pattern ( ($generated@@117 $generated@@490 $generated@@493))
))))
 :pattern ( ($generated@@110 $generated@@490 ($generated@@329 $generated@@491) $generated@@492))
)))
(assert (forall (($generated@@494 T@U) ($generated@@495 T@U) ($generated@@496 T@U) ) (!  (=> (and (and (= (type $generated@@494) ($generated@@112 $generated@@85 $generated@@4)) (= (type $generated@@495) $generated@@73)) (= (type $generated@@496) ($generated@@112 $generated@@113 $generated@@114))) (= ($generated@@110 $generated@@494 ($generated@@334 $generated@@495) $generated@@496) (forall (($generated@@497 T@U) ) (!  (=> (and (= (type $generated@@497) $generated@@85) ($generated@@0 ($generated@@117 $generated@@494 $generated@@497))) ($generated@@356 $generated@@497 $generated@@495 $generated@@496))
 :pattern ( ($generated@@117 $generated@@494 $generated@@497))
))))
 :pattern ( ($generated@@110 $generated@@494 ($generated@@334 $generated@@495) $generated@@496))
)))
(assert (forall (($generated@@498 T@U) ) (! (let (($generated@@499 (type $generated@@498)))
(= ($generated ($generated@@117 ($generated@@403 $generated@@499) $generated@@498)) 0))
 :pattern ( (let (($generated@@499 (type $generated@@498)))
($generated@@117 ($generated@@403 $generated@@499) $generated@@498)))
)))
(assert  (and (forall (($generated@@502 T@U) ) (! (= (type ($generated@@500 $generated@@502)) ($generated@@112 $generated@@85 $generated@@4))
 :pattern ( ($generated@@500 $generated@@502))
)) (forall (($generated@@503 T@U) ) (! (let (($generated@@504 ($generated@@416 (type $generated@@503))))
(let (($generated@@505 ($generated@@415 (type $generated@@503))))
(= (type ($generated@@501 $generated@@503)) ($generated@@112 $generated@@505 $generated@@504))))
 :pattern ( ($generated@@501 $generated@@503))
))))
(assert (forall (($generated@@506 T@U) ($generated@@507 T@U) ) (!  (=> (and (= (type $generated@@506) ($generated@@414 $generated@@85 $generated@@85)) (= (type $generated@@507) $generated@@85)) (= ($generated@@0 ($generated@@117 ($generated@@500 $generated@@506) $generated@@507))  (and ($generated@@0 ($generated@@117 ($generated@@412 $generated@@506) ($generated@@193 ($generated@@455 $generated@@87 $generated@@507)))) (= ($generated@@117 ($generated@@501 $generated@@506) ($generated@@193 ($generated@@455 $generated@@87 $generated@@507))) ($generated@@194 ($generated@@455 $generated@@87 $generated@@507))))))
 :pattern ( ($generated@@117 ($generated@@500 $generated@@506) $generated@@507))
)))
(assert  (and (forall (($generated@@510 T@U) ) (! (= (type ($generated@@508 $generated@@510)) ($generated@@112 $generated@@85 $generated@@4))
 :pattern ( ($generated@@508 $generated@@510))
)) (forall (($generated@@511 T@U) ) (! (let (($generated@@512 ($generated@@434 (type $generated@@511))))
(let (($generated@@513 ($generated@@433 (type $generated@@511))))
(= (type ($generated@@509 $generated@@511)) ($generated@@112 $generated@@513 $generated@@512))))
 :pattern ( ($generated@@509 $generated@@511))
))))
(assert (forall (($generated@@514 T@U) ($generated@@515 T@U) ) (!  (=> (and (= (type $generated@@514) ($generated@@432 $generated@@85 $generated@@85)) (= (type $generated@@515) $generated@@85)) (= ($generated@@0 ($generated@@117 ($generated@@508 $generated@@514) $generated@@515))  (and ($generated@@0 ($generated@@117 ($generated@@430 $generated@@514) ($generated@@193 ($generated@@455 $generated@@87 $generated@@515)))) (= ($generated@@117 ($generated@@509 $generated@@514) ($generated@@193 ($generated@@455 $generated@@87 $generated@@515))) ($generated@@194 ($generated@@455 $generated@@87 $generated@@515))))))
 :pattern ( ($generated@@117 ($generated@@508 $generated@@514) $generated@@515))
)))
(assert (forall (($generated@@516 T@U) ($generated@@517 T@U) ) (! (let (($generated@@518 (type $generated@@517)))
(let (($generated@@519 ($generated@@415 (type $generated@@516))))
 (=> (= (type $generated@@516) ($generated@@414 $generated@@519 $generated@@518)) (= ($generated@@0 ($generated@@117 ($generated@@463 $generated@@516) $generated@@517)) (exists (($generated@@520 T@U) ) (!  (and (= (type $generated@@520) $generated@@519) (and ($generated@@0 ($generated@@117 ($generated@@412 $generated@@516) $generated@@520)) (= $generated@@517 ($generated@@117 ($generated@@501 $generated@@516) $generated@@520))))
 :pattern ( ($generated@@117 ($generated@@412 $generated@@516) $generated@@520))
 :pattern ( ($generated@@117 ($generated@@501 $generated@@516) $generated@@520))
))))))
 :pattern ( ($generated@@117 ($generated@@463 $generated@@516) $generated@@517))
)))
(assert (forall (($generated@@521 T@U) ($generated@@522 T@U) ) (! (let (($generated@@523 (type $generated@@522)))
(let (($generated@@524 ($generated@@433 (type $generated@@521))))
 (=> (= (type $generated@@521) ($generated@@432 $generated@@524 $generated@@523)) (= ($generated@@0 ($generated@@117 ($generated@@474 $generated@@521) $generated@@522)) (exists (($generated@@525 T@U) ) (!  (and (= (type $generated@@525) $generated@@524) (and ($generated@@0 ($generated@@117 ($generated@@430 $generated@@521) $generated@@525)) (= $generated@@522 ($generated@@117 ($generated@@509 $generated@@521) $generated@@525))))
 :pattern ( ($generated@@117 ($generated@@430 $generated@@521) $generated@@525))
 :pattern ( ($generated@@117 ($generated@@509 $generated@@521) $generated@@525))
))))))
 :pattern ( ($generated@@117 ($generated@@474 $generated@@521) $generated@@522))
)))
(assert (forall (($generated@@527 T@U) ($generated@@528 T@U) ) (! (= (type ($generated@@526 $generated@@527 $generated@@528)) $generated@@73)
 :pattern ( ($generated@@526 $generated@@527 $generated@@528))
)))
(assert (forall (($generated@@529 T@U) ($generated@@530 T@U) ($generated@@531 T@U) ($generated@@532 T@U) ) (!  (=> (and (and (and (= (type $generated@@529) ($generated@@414 $generated@@85 $generated@@85)) (= (type $generated@@530) $generated@@73)) (= (type $generated@@531) $generated@@73)) (= (type $generated@@532) ($generated@@112 $generated@@113 $generated@@114))) (= ($generated@@110 $generated@@529 ($generated@@526 $generated@@530 $generated@@531) $generated@@532) (forall (($generated@@533 T@U) ) (!  (=> (and (= (type $generated@@533) $generated@@85) ($generated@@0 ($generated@@117 ($generated@@412 $generated@@529) $generated@@533))) (and ($generated@@356 ($generated@@117 ($generated@@501 $generated@@529) $generated@@533) $generated@@531 $generated@@532) ($generated@@356 $generated@@533 $generated@@530 $generated@@532)))
 :pattern ( ($generated@@117 ($generated@@501 $generated@@529) $generated@@533))
 :pattern ( ($generated@@117 ($generated@@412 $generated@@529) $generated@@533))
))))
 :pattern ( ($generated@@110 $generated@@529 ($generated@@526 $generated@@530 $generated@@531) $generated@@532))
)))
(assert (forall (($generated@@535 T@U) ($generated@@536 T@U) ) (! (= (type ($generated@@534 $generated@@535 $generated@@536)) $generated@@73)
 :pattern ( ($generated@@534 $generated@@535 $generated@@536))
)))
(assert (forall (($generated@@537 T@U) ($generated@@538 T@U) ($generated@@539 T@U) ($generated@@540 T@U) ) (!  (=> (and (and (and (= (type $generated@@537) ($generated@@432 $generated@@85 $generated@@85)) (= (type $generated@@538) $generated@@73)) (= (type $generated@@539) $generated@@73)) (= (type $generated@@540) ($generated@@112 $generated@@113 $generated@@114))) (= ($generated@@110 $generated@@537 ($generated@@534 $generated@@538 $generated@@539) $generated@@540) (forall (($generated@@541 T@U) ) (!  (=> (and (= (type $generated@@541) $generated@@85) ($generated@@0 ($generated@@117 ($generated@@430 $generated@@537) $generated@@541))) (and ($generated@@356 ($generated@@117 ($generated@@509 $generated@@537) $generated@@541) $generated@@539 $generated@@540) ($generated@@356 $generated@@541 $generated@@538 $generated@@540)))
 :pattern ( ($generated@@117 ($generated@@509 $generated@@537) $generated@@541))
 :pattern ( ($generated@@117 ($generated@@430 $generated@@537) $generated@@541))
))))
 :pattern ( ($generated@@110 $generated@@537 ($generated@@534 $generated@@538 $generated@@539) $generated@@540))
)))
(assert (forall (($generated@@542 T@U) ($generated@@543 T@U) ) (!  (=> (and (and (= (type $generated@@542) $generated@@73) (= (type $generated@@543) $generated@@87)) ($generated@@88 $generated@@543 ($generated@@283 $generated@@542))) (or ($generated@@344 $generated@@543) ($generated@@307 $generated@@543)))
 :pattern ( ($generated@@307 $generated@@543) ($generated@@88 $generated@@543 ($generated@@283 $generated@@542)))
 :pattern ( ($generated@@344 $generated@@543) ($generated@@88 $generated@@543 ($generated@@283 $generated@@542)))
)))
(assert  (=> (<= 1 $generated@@314) (forall (($generated@@544 T@U) ($generated@@545 T@U) ($generated@@546 Int) ($generated@@547 T@U) ) (!  (=> (and (and (and (= (type $generated@@544) $generated@@73) (= (type $generated@@545) $generated@@86)) (= (type $generated@@547) $generated@@87)) (or ($generated@@316 $generated@@544 $generated@@546 $generated@@547) (and (not (= 1 $generated@@314)) (and (<= ($generated@@317 0) $generated@@546) ($generated@@88 $generated@@547 ($generated@@89 $generated@@544)))))) ($generated@@88 ($generated@@315 $generated@@544 $generated@@545 $generated@@546 $generated@@547) ($generated@@283 $generated@@544)))
 :pattern ( ($generated@@315 $generated@@544 $generated@@545 $generated@@546 $generated@@547))
))))
(assert (forall (($generated@@549 T@T) ) (! (= (type ($generated@@548 $generated@@549)) ($generated@@112 $generated@@549 $generated@@4))
 :pattern ( ($generated@@548 $generated@@549))
)))
(assert (forall (($generated@@550 T@U) ) (! (let (($generated@@551 ($generated@@434 (type $generated@@550))))
(let (($generated@@552 ($generated@@433 (type $generated@@550))))
 (=> (= (type $generated@@550) ($generated@@432 $generated@@552 $generated@@551)) (= (= $generated@@550 ($generated@@431 $generated@@552 $generated@@551)) (= ($generated@@430 $generated@@550) ($generated@@548 $generated@@552))))))
 :pattern ( ($generated@@430 $generated@@550))
)))
(assert (forall (($generated@@553 T@U) ) (! (let (($generated@@554 ($generated@@434 (type $generated@@553))))
(let (($generated@@555 ($generated@@433 (type $generated@@553))))
 (=> (= (type $generated@@553) ($generated@@432 $generated@@555 $generated@@554)) (= (= $generated@@553 ($generated@@431 $generated@@555 $generated@@554)) (= ($generated@@474 $generated@@553) ($generated@@548 $generated@@554))))))
 :pattern ( ($generated@@474 $generated@@553))
)))
(assert (forall (($generated@@556 T@U) ) (! (let (($generated@@557 ($generated@@434 (type $generated@@556))))
(let (($generated@@558 ($generated@@433 (type $generated@@556))))
 (=> (= (type $generated@@556) ($generated@@432 $generated@@558 $generated@@557)) (= (= $generated@@556 ($generated@@431 $generated@@558 $generated@@557)) (= ($generated@@508 $generated@@556) ($generated@@548 $generated@@85))))))
 :pattern ( ($generated@@508 $generated@@556))
)))
(assert (forall (($generated@@559 T@U) ) (! (let (($generated@@560 ($generated@@416 (type $generated@@559))))
(let (($generated@@561 ($generated@@415 (type $generated@@559))))
 (=> (= (type $generated@@559) ($generated@@414 $generated@@561 $generated@@560)) (or (= $generated@@559 ($generated@@413 $generated@@561 $generated@@560)) (exists (($generated@@562 T@U) ($generated@@563 T@U) ) (!  (and (and (= (type $generated@@562) $generated@@85) (= (type $generated@@563) $generated@@85)) ($generated@@0 ($generated@@117 ($generated@@500 $generated@@559) ($generated@@397 ($generated@@288 $generated@@562 $generated@@563)))))
 :no-pattern (type $generated@@562)
 :no-pattern (type $generated@@563)
 :no-pattern ($generated $generated@@562)
 :no-pattern ($generated@@0 $generated@@562)
 :no-pattern ($generated $generated@@563)
 :no-pattern ($generated@@0 $generated@@563)
))))))
 :pattern ( ($generated@@500 $generated@@559))
)))
(assert (forall (($generated@@564 T@U) ) (! (let (($generated@@565 ($generated@@434 (type $generated@@564))))
(let (($generated@@566 ($generated@@433 (type $generated@@564))))
 (=> (= (type $generated@@564) ($generated@@432 $generated@@566 $generated@@565)) (or (= $generated@@564 ($generated@@431 $generated@@566 $generated@@565)) (exists (($generated@@567 T@U) ($generated@@568 T@U) ) (!  (and (and (= (type $generated@@567) $generated@@85) (= (type $generated@@568) $generated@@85)) ($generated@@0 ($generated@@117 ($generated@@508 $generated@@564) ($generated@@397 ($generated@@288 $generated@@567 $generated@@568)))))
 :no-pattern (type $generated@@567)
 :no-pattern (type $generated@@568)
 :no-pattern ($generated $generated@@567)
 :no-pattern ($generated@@0 $generated@@567)
 :no-pattern ($generated $generated@@568)
 :no-pattern ($generated@@0 $generated@@568)
))))))
 :pattern ( ($generated@@508 $generated@@564))
)))
(assert (forall (($generated@@569 T@U) ) (!  (=> (and (= (type $generated@@569) $generated@@85) ($generated@@289 $generated@@569 $generated@@46)) (and (= ($generated@@397 ($generated@@455 $generated@@2 $generated@@569)) $generated@@569) ($generated@@88 ($generated@@455 $generated@@2 $generated@@569) $generated@@46)))
 :pattern ( ($generated@@289 $generated@@569 $generated@@46))
)))
(assert (forall (($generated@@570 T@U) ) (!  (=> (and (= (type $generated@@570) $generated@@85) ($generated@@289 $generated@@570 $generated@@47)) (and (= ($generated@@397 ($generated@@455 $generated@@3 $generated@@570)) $generated@@570) ($generated@@88 ($generated@@455 $generated@@3 $generated@@570) $generated@@47)))
 :pattern ( ($generated@@289 $generated@@570 $generated@@47))
)))
(assert (forall (($generated@@571 T@U) ) (!  (=> (and (= (type $generated@@571) $generated@@85) ($generated@@289 $generated@@571 $generated@@44)) (and (= ($generated@@397 ($generated@@455 $generated@@4 $generated@@571)) $generated@@571) ($generated@@88 ($generated@@455 $generated@@4 $generated@@571) $generated@@44)))
 :pattern ( ($generated@@289 $generated@@571 $generated@@44))
)))
(assert (= ($generated@@1 $generated@@572) 21))
(assert (forall (($generated@@573 T@U) ) (!  (=> (and (= (type $generated@@573) $generated@@85) ($generated@@289 $generated@@573 $generated@@45)) (and (= ($generated@@397 ($generated@@455 $generated@@572 $generated@@573)) $generated@@573) ($generated@@88 ($generated@@455 $generated@@572 $generated@@573) $generated@@45)))
 :pattern ( ($generated@@289 $generated@@573 $generated@@45))
)))
(assert (forall (($generated@@574 T@U) ($generated@@575 T@U) ) (!  (=> (= (type $generated@@575) $generated@@73) (= ($generated@@289 ($generated@@397 $generated@@574) $generated@@575) ($generated@@88 $generated@@574 $generated@@575)))
 :pattern ( ($generated@@289 ($generated@@397 $generated@@574) $generated@@575))
)))
(assert (forall (($generated@@576 T@U) ) (!  (=> (= (type $generated@@576) $generated@@85) (<= 0 ($generated@@90 $generated@@576)))
 :pattern ( ($generated@@90 $generated@@576))
)))
(assert (forall (($generated@@577 T@U) ) (! (let (($generated@@578 ($generated@@115 (type $generated@@577))))
 (=> (= (type $generated@@577) ($generated@@112 $generated@@578 $generated@@2)) (<= 0 ($generated@@402 $generated@@577))))
 :pattern ( ($generated@@402 $generated@@577))
)))
(assert (forall (($generated@@579 T@U) ) (! (let (($generated@@580 ($generated@@378 (type $generated@@579))))
 (=> (= (type $generated@@579) ($generated@@377 $generated@@580)) (<= 0 ($generated@@376 $generated@@579))))
 :pattern ( ($generated@@376 $generated@@579))
)))
(assert (forall (($generated@@582 T@U) ) (! (= (type ($generated@@581 $generated@@582)) $generated@@73)
 :pattern ( ($generated@@581 $generated@@582))
)))
(assert (forall (($generated@@583 T@U) ($generated@@584 T@U) ) (!  (=> (and (= (type $generated@@583) $generated@@73) (= (type $generated@@584) $generated@@73)) (= ($generated@@581 ($generated@@526 $generated@@583 $generated@@584)) $generated@@583))
 :pattern ( ($generated@@526 $generated@@583 $generated@@584))
)))
(assert (forall (($generated@@586 T@U) ) (! (= (type ($generated@@585 $generated@@586)) $generated@@73)
 :pattern ( ($generated@@585 $generated@@586))
)))
(assert (forall (($generated@@587 T@U) ($generated@@588 T@U) ) (!  (=> (and (= (type $generated@@587) $generated@@73) (= (type $generated@@588) $generated@@73)) (= ($generated@@585 ($generated@@526 $generated@@587 $generated@@588)) $generated@@588))
 :pattern ( ($generated@@526 $generated@@587 $generated@@588))
)))
(assert (forall (($generated@@589 T@U) ($generated@@590 T@U) ) (!  (=> (and (= (type $generated@@589) $generated@@73) (= (type $generated@@590) $generated@@73)) (= ($generated@@81 ($generated@@526 $generated@@589 $generated@@590)) $generated@@58))
 :pattern ( ($generated@@526 $generated@@589 $generated@@590))
)))
(assert (forall (($generated@@592 T@U) ) (! (= (type ($generated@@591 $generated@@592)) $generated@@73)
 :pattern ( ($generated@@591 $generated@@592))
)))
(assert (forall (($generated@@593 T@U) ($generated@@594 T@U) ) (!  (=> (and (= (type $generated@@593) $generated@@73) (= (type $generated@@594) $generated@@73)) (= ($generated@@591 ($generated@@534 $generated@@593 $generated@@594)) $generated@@593))
 :pattern ( ($generated@@534 $generated@@593 $generated@@594))
)))
(assert (forall (($generated@@596 T@U) ) (! (= (type ($generated@@595 $generated@@596)) $generated@@73)
 :pattern ( ($generated@@595 $generated@@596))
)))
(assert (forall (($generated@@597 T@U) ($generated@@598 T@U) ) (!  (=> (and (= (type $generated@@597) $generated@@73) (= (type $generated@@598) $generated@@73)) (= ($generated@@595 ($generated@@534 $generated@@597 $generated@@598)) $generated@@598))
 :pattern ( ($generated@@534 $generated@@597 $generated@@598))
)))
(assert (forall (($generated@@599 T@U) ($generated@@600 T@U) ) (!  (=> (and (= (type $generated@@599) $generated@@73) (= (type $generated@@600) $generated@@73)) (= ($generated@@81 ($generated@@534 $generated@@599 $generated@@600)) $generated@@59))
 :pattern ( ($generated@@534 $generated@@599 $generated@@600))
)))
(assert (forall (($generated@@601 T@U) ($generated@@602 T@U) ) (!  (=> (and (= (type $generated@@601) $generated@@85) (= (type $generated@@602) $generated@@85)) (= ($generated@@199 ($generated@@288 $generated@@601 $generated@@602)) $generated@@62))
 :pattern ( ($generated@@288 $generated@@601 $generated@@602))
)))
(assert (forall (($generated@@604 T@U) ) (! (= (type ($generated@@603 $generated@@604)) $generated@@73)
 :pattern ( ($generated@@603 $generated@@604))
)))
(assert (forall (($generated@@605 T@U) ($generated@@606 T@U) ) (!  (=> (and (= (type $generated@@605) $generated@@73) (= (type $generated@@606) $generated@@73)) (= ($generated@@603 ($generated@@186 $generated@@605 $generated@@606)) $generated@@605))
 :pattern ( ($generated@@186 $generated@@605 $generated@@606))
)))
(assert (forall (($generated@@608 T@U) ) (! (= (type ($generated@@607 $generated@@608)) $generated@@73)
 :pattern ( ($generated@@607 $generated@@608))
)))
(assert (forall (($generated@@609 T@U) ($generated@@610 T@U) ) (!  (=> (and (= (type $generated@@609) $generated@@73) (= (type $generated@@610) $generated@@73)) (= ($generated@@607 ($generated@@186 $generated@@609 $generated@@610)) $generated@@610))
 :pattern ( ($generated@@186 $generated@@609 $generated@@610))
)))
(assert (forall (($generated@@611 T@U) ($generated@@612 T@U) ) (!  (=> (and (= (type $generated@@611) $generated@@85) (= (type $generated@@612) $generated@@85)) (= ($generated@@193 ($generated@@288 $generated@@611 $generated@@612)) $generated@@611))
 :pattern ( ($generated@@288 $generated@@611 $generated@@612))
)))
(assert (forall (($generated@@613 T@U) ($generated@@614 T@U) ) (!  (=> (and (= (type $generated@@613) $generated@@85) (= (type $generated@@614) $generated@@85)) (= ($generated@@194 ($generated@@288 $generated@@613 $generated@@614)) $generated@@614))
 :pattern ( ($generated@@288 $generated@@613 $generated@@614))
)))
(assert (forall (($generated@@615 T@U) ($generated@@616 T@U) ) (!  (=> (and (= (type $generated@@615) $generated@@85) (= (type $generated@@616) $generated@@87)) (= ($generated@@199 ($generated@@347 $generated@@615 $generated@@616)) $generated@@64))
 :pattern ( ($generated@@347 $generated@@615 $generated@@616))
)))
(assert (forall (($generated@@617 T@U) ($generated@@618 T@U) ) (!  (=> (and (= (type $generated@@617) $generated@@85) (= (type $generated@@618) $generated@@87)) (= ($generated@@92 ($generated@@347 $generated@@617 $generated@@618)) $generated@@617))
 :pattern ( ($generated@@347 $generated@@617 $generated@@618))
)))
(assert (forall (($generated@@619 T@U) ($generated@@620 T@U) ) (!  (=> (and (= (type $generated@@619) $generated@@85) (= (type $generated@@620) $generated@@87)) (= ($generated@@95 ($generated@@347 $generated@@619 $generated@@620)) $generated@@620))
 :pattern ( ($generated@@347 $generated@@619 $generated@@620))
)))
(assert (forall (($generated@@621 T@U) ($generated@@622 T@U) ) (!  (=> (and (= (type $generated@@621) $generated@@85) (= (type $generated@@622) $generated@@87)) (= ($generated@@199 ($generated@@318 $generated@@621 $generated@@622)) $generated@@68))
 :pattern ( ($generated@@318 $generated@@621 $generated@@622))
)))
(assert (forall (($generated@@623 T@U) ($generated@@624 T@U) ) (!  (=> (and (= (type $generated@@623) $generated@@85) (= (type $generated@@624) $generated@@87)) (= ($generated@@308 ($generated@@318 $generated@@623 $generated@@624)) $generated@@623))
 :pattern ( ($generated@@318 $generated@@623 $generated@@624))
)))
(assert (forall (($generated@@625 T@U) ($generated@@626 T@U) ) (!  (=> (and (= (type $generated@@625) $generated@@85) (= (type $generated@@626) $generated@@87)) (= ($generated@@309 ($generated@@318 $generated@@625 $generated@@626)) $generated@@626))
 :pattern ( ($generated@@318 $generated@@625 $generated@@626))
)))
(assert  (and (forall (($generated@@629 T@U) ) (! (= (type ($generated@@627 $generated@@629)) $generated@@73)
 :pattern ( ($generated@@627 $generated@@629))
)) (forall (($generated@@630 T@U) ($generated@@631 Int) ) (! (let (($generated@@632 ($generated@@378 (type $generated@@630))))
(= (type ($generated@@628 $generated@@630 $generated@@631)) $generated@@632))
 :pattern ( ($generated@@628 $generated@@630 $generated@@631))
))))
(assert (forall (($generated@@633 T@U) ($generated@@634 T@U) ($generated@@635 T@U) ) (!  (=> (and (and (= (type $generated@@633) ($generated@@377 $generated@@85)) (= (type $generated@@634) $generated@@73)) (= (type $generated@@635) ($generated@@112 $generated@@113 $generated@@114))) (= ($generated@@110 $generated@@633 ($generated@@627 $generated@@634) $generated@@635) (forall (($generated@@636 Int) ) (!  (=> (and (<= 0 $generated@@636) (< $generated@@636 ($generated@@376 $generated@@633))) ($generated@@356 ($generated@@628 $generated@@633 $generated@@636) $generated@@634 $generated@@635))
 :pattern ( ($generated@@628 $generated@@633 $generated@@636))
))))
 :pattern ( ($generated@@110 $generated@@633 ($generated@@627 $generated@@634) $generated@@635))
)))
(assert (forall (($generated@@638 Int) ) (! (= ($generated@@637 ($generated@@111 $generated@@638)) $generated@@638)
 :pattern ( ($generated@@111 $generated@@638))
)))
(assert (forall (($generated@@640 T@U) ) (! (= (type ($generated@@639 $generated@@640)) $generated@@73)
 :pattern ( ($generated@@639 $generated@@640))
)))
(assert (forall (($generated@@641 T@U) ) (!  (=> (= (type $generated@@641) $generated@@73) (= ($generated@@639 ($generated@@329 $generated@@641)) $generated@@641))
 :pattern ( ($generated@@329 $generated@@641))
)))
(assert (forall (($generated@@642 T@U) ) (!  (=> (= (type $generated@@642) $generated@@73) (= ($generated@@81 ($generated@@329 $generated@@642)) $generated@@54))
 :pattern ( ($generated@@329 $generated@@642))
)))
(assert (forall (($generated@@644 T@U) ) (! (= (type ($generated@@643 $generated@@644)) $generated@@73)
 :pattern ( ($generated@@643 $generated@@644))
)))
(assert (forall (($generated@@645 T@U) ) (!  (=> (= (type $generated@@645) $generated@@73) (= ($generated@@643 ($generated@@334 $generated@@645)) $generated@@645))
 :pattern ( ($generated@@334 $generated@@645))
)))
(assert (forall (($generated@@646 T@U) ) (!  (=> (= (type $generated@@646) $generated@@73) (= ($generated@@81 ($generated@@334 $generated@@646)) $generated@@55))
 :pattern ( ($generated@@334 $generated@@646))
)))
(assert (forall (($generated@@648 T@U) ) (! (= (type ($generated@@647 $generated@@648)) $generated@@73)
 :pattern ( ($generated@@647 $generated@@648))
)))
(assert (forall (($generated@@649 T@U) ) (!  (=> (= (type $generated@@649) $generated@@73) (= ($generated@@647 ($generated@@202 $generated@@649)) $generated@@649))
 :pattern ( ($generated@@202 $generated@@649))
)))
(assert (forall (($generated@@650 T@U) ) (!  (=> (= (type $generated@@650) $generated@@73) (= ($generated@@81 ($generated@@202 $generated@@650)) $generated@@56))
 :pattern ( ($generated@@202 $generated@@650))
)))
(assert (forall (($generated@@652 T@U) ) (! (= (type ($generated@@651 $generated@@652)) $generated@@73)
 :pattern ( ($generated@@651 $generated@@652))
)))
(assert (forall (($generated@@653 T@U) ) (!  (=> (= (type $generated@@653) $generated@@73) (= ($generated@@651 ($generated@@627 $generated@@653)) $generated@@653))
 :pattern ( ($generated@@627 $generated@@653))
)))
(assert (forall (($generated@@654 T@U) ) (!  (=> (= (type $generated@@654) $generated@@73) (= ($generated@@81 ($generated@@627 $generated@@654)) $generated@@57))
 :pattern ( ($generated@@627 $generated@@654))
)))
(assert (forall (($generated@@656 T@U) ) (! (= (type ($generated@@655 $generated@@656)) $generated@@73)
 :pattern ( ($generated@@655 $generated@@656))
)))
(assert (forall (($generated@@657 T@U) ) (!  (=> (= (type $generated@@657) $generated@@73) (= ($generated@@655 ($generated@@89 $generated@@657)) $generated@@657))
 :pattern ( ($generated@@89 $generated@@657))
)))
(assert (forall (($generated@@659 T@U) ) (! (= (type ($generated@@658 $generated@@659)) $generated@@73)
 :pattern ( ($generated@@658 $generated@@659))
)))
(assert (forall (($generated@@660 T@U) ) (!  (=> (= (type $generated@@660) $generated@@73) (= ($generated@@658 ($generated@@283 $generated@@660)) $generated@@660))
 :pattern ( ($generated@@283 $generated@@660))
)))
(assert (forall (($generated@@661 T@U) ) (! (let (($generated@@662 (type $generated@@661)))
(= ($generated@@455 $generated@@662 ($generated@@397 $generated@@661)) $generated@@661))
 :pattern ( ($generated@@397 $generated@@661))
)))
(assert (forall (($generated@@663 T@U) ($generated@@664 T@U) ($generated@@665 T@U) ) (!  (=> (and (and (= (type $generated@@663) ($generated@@414 $generated@@85 $generated@@85)) (= (type $generated@@664) $generated@@73)) (= (type $generated@@665) $generated@@73)) (= ($generated@@88 $generated@@663 ($generated@@526 $generated@@664 $generated@@665)) (forall (($generated@@666 T@U) ) (!  (=> (and (= (type $generated@@666) $generated@@85) ($generated@@0 ($generated@@117 ($generated@@412 $generated@@663) $generated@@666))) (and ($generated@@289 ($generated@@117 ($generated@@501 $generated@@663) $generated@@666) $generated@@665) ($generated@@289 $generated@@666 $generated@@664)))
 :pattern ( ($generated@@117 ($generated@@501 $generated@@663) $generated@@666))
 :pattern ( ($generated@@117 ($generated@@412 $generated@@663) $generated@@666))
))))
 :pattern ( ($generated@@88 $generated@@663 ($generated@@526 $generated@@664 $generated@@665)))
)))
(assert (forall (($generated@@667 T@U) ($generated@@668 T@U) ($generated@@669 T@U) ) (!  (=> (and (and (= (type $generated@@667) ($generated@@432 $generated@@85 $generated@@85)) (= (type $generated@@668) $generated@@73)) (= (type $generated@@669) $generated@@73)) (= ($generated@@88 $generated@@667 ($generated@@534 $generated@@668 $generated@@669)) (forall (($generated@@670 T@U) ) (!  (=> (and (= (type $generated@@670) $generated@@85) ($generated@@0 ($generated@@117 ($generated@@430 $generated@@667) $generated@@670))) (and ($generated@@289 ($generated@@117 ($generated@@509 $generated@@667) $generated@@670) $generated@@669) ($generated@@289 $generated@@670 $generated@@668)))
 :pattern ( ($generated@@117 ($generated@@509 $generated@@667) $generated@@670))
 :pattern ( ($generated@@117 ($generated@@430 $generated@@667) $generated@@670))
))))
 :pattern ( ($generated@@88 $generated@@667 ($generated@@534 $generated@@668 $generated@@669)))
)))
(assert (forall (($generated@@671 T@U) ($generated@@672 T@U) ) (!  (=> (and (= (type $generated@@671) $generated@@85) (= (type $generated@@672) $generated@@85)) (and (and (and (=> ($generated@@174 $generated@@671 $generated@@672) (not (= $generated@@671 $generated@@672))) (=> (and ($generated@@448 $generated@@671) (not ($generated@@448 $generated@@672))) ($generated@@174 $generated@@671 $generated@@672))) (=> (and ($generated@@448 $generated@@671) ($generated@@448 $generated@@672)) (= ($generated@@174 $generated@@671 $generated@@672) (< ($generated@@90 $generated@@671) ($generated@@90 $generated@@672))))) (=> (and ($generated@@174 $generated@@671 $generated@@672) ($generated@@448 $generated@@672)) ($generated@@448 $generated@@671))))
 :pattern ( ($generated@@174 $generated@@671 $generated@@672))
)))
(assert  (=> (<= 1 $generated@@314) (forall (($generated@@673 T@U) ($generated@@674 T@U) ($generated@@675 Int) ($generated@@676 T@U) ) (!  (=> (and (and (and (= (type $generated@@673) $generated@@73) (= (type $generated@@674) $generated@@86)) (= (type $generated@@676) $generated@@87)) (or ($generated@@316 $generated@@673 ($generated@@317 $generated@@675) $generated@@676) (and (not (= 1 $generated@@314)) (and (<= ($generated@@317 0) $generated@@675) ($generated@@88 $generated@@676 ($generated@@89 $generated@@673)))))) (and (=> (not (= ($generated@@317 $generated@@675) ($generated@@317 0))) (and ($generated@@91 $generated@@676) (and ($generated@@91 $generated@@676) ($generated@@316 $generated@@673 ($generated@@317 (- $generated@@675 1)) ($generated@@95 $generated@@676))))) (= ($generated@@315 $generated@@673 ($generated@@84 $generated@@674) ($generated@@317 $generated@@675) $generated@@676) (ite (= ($generated@@317 $generated@@675) ($generated@@317 0)) $generated@@200 ($generated@@318 ($generated@@92 $generated@@676) ($generated@@315 $generated@@673 ($generated@@84 $generated@@674) ($generated@@317 (- $generated@@675 1)) ($generated@@95 $generated@@676)))))))
 :weight 3
 :pattern ( ($generated@@315 $generated@@673 ($generated@@84 $generated@@674) ($generated@@317 $generated@@675) $generated@@676))
))))
(assert (forall (($generated@@679 T@U) ($generated@@680 T@U) ) (!  (=> (and (= (type $generated@@679) $generated@@85) (= (type $generated@@680) $generated@@85)) (< ($generated@@677 $generated@@679) ($generated@@678 ($generated@@288 $generated@@679 $generated@@680))))
 :pattern ( ($generated@@288 $generated@@679 $generated@@680))
)))
(assert (forall (($generated@@681 T@U) ($generated@@682 T@U) ) (!  (=> (and (= (type $generated@@681) $generated@@85) (= (type $generated@@682) $generated@@85)) (< ($generated@@677 $generated@@682) ($generated@@678 ($generated@@288 $generated@@681 $generated@@682))))
 :pattern ( ($generated@@288 $generated@@681 $generated@@682))
)))
(assert (forall (($generated@@683 T@U) ($generated@@684 T@U) ) (!  (=> (and (= (type $generated@@683) $generated@@85) (= (type $generated@@684) $generated@@87)) (< ($generated@@677 $generated@@683) ($generated@@678 ($generated@@318 $generated@@683 $generated@@684))))
 :pattern ( ($generated@@318 $generated@@683 $generated@@684))
)))
(assert (forall (($generated@@685 T@U) ($generated@@686 T@U) ) (!  (=> (and (= (type $generated@@685) $generated@@85) (= (type $generated@@686) $generated@@87)) (< ($generated@@678 $generated@@686) ($generated@@678 ($generated@@318 $generated@@685 $generated@@686))))
 :pattern ( ($generated@@318 $generated@@685 $generated@@686))
)))
(assert (forall (($generated@@687 T@U) ($generated@@688 T@U) ($generated@@689 T@U) ) (!  (=> (and (and (and (= (type $generated@@687) $generated@@85) (= (type $generated@@688) $generated@@73)) (= (type $generated@@689) $generated@@73)) ($generated@@289 $generated@@687 ($generated@@526 $generated@@688 $generated@@689))) (and (= ($generated@@397 ($generated@@455 ($generated@@414 $generated@@85 $generated@@85) $generated@@687)) $generated@@687) ($generated@@88 ($generated@@455 ($generated@@414 $generated@@85 $generated@@85) $generated@@687) ($generated@@526 $generated@@688 $generated@@689))))
 :pattern ( ($generated@@289 $generated@@687 ($generated@@526 $generated@@688 $generated@@689)))
)))
(assert (forall (($generated@@690 T@U) ($generated@@691 T@U) ($generated@@692 T@U) ) (!  (=> (and (and (and (= (type $generated@@690) $generated@@85) (= (type $generated@@691) $generated@@73)) (= (type $generated@@692) $generated@@73)) ($generated@@289 $generated@@690 ($generated@@534 $generated@@691 $generated@@692))) (and (= ($generated@@397 ($generated@@455 ($generated@@432 $generated@@85 $generated@@85) $generated@@690)) $generated@@690) ($generated@@88 ($generated@@455 ($generated@@432 $generated@@85 $generated@@85) $generated@@690) ($generated@@534 $generated@@691 $generated@@692))))
 :pattern ( ($generated@@289 $generated@@690 ($generated@@534 $generated@@691 $generated@@692)))
)))
(assert (forall (($generated@@693 T@U) ($generated@@694 T@U) ($generated@@695 T@U) ) (!  (=> (and (and (and (= (type $generated@@693) $generated@@73) (= (type $generated@@694) $generated@@73)) (= (type $generated@@695) $generated@@85)) ($generated@@289 $generated@@695 ($generated@@186 $generated@@693 $generated@@694))) (and (= ($generated@@397 ($generated@@455 $generated@@87 $generated@@695)) $generated@@695) ($generated@@88 ($generated@@455 $generated@@87 $generated@@695) ($generated@@186 $generated@@693 $generated@@694))))
 :pattern ( ($generated@@289 $generated@@695 ($generated@@186 $generated@@693 $generated@@694)))
)))
(assert (forall (($generated@@696 T@U) ($generated@@697 T@U) ($generated@@698 T@U) ($generated@@699 T@U) ($generated@@700 T@U) ) (!  (=> (and (and (and (and (= (type $generated@@696) $generated@@73) (= (type $generated@@697) $generated@@73)) (= (type $generated@@698) $generated@@86)) (= (type $generated@@699) $generated@@87)) (= (type $generated@@700) $generated@@87)) (= ($generated@@96 $generated@@696 $generated@@697 ($generated@@84 $generated@@698) $generated@@699 $generated@@700) (forall (($generated@@701 T@U) ) (!  (=> (= (type $generated@@701) $generated@@85) ($generated@@83 $generated@@696 $generated@@697 $generated@@701 ($generated@@84 $generated@@698) $generated@@699 $generated@@700))
 :pattern ( ($generated@@83 $generated@@696 $generated@@697 $generated@@701 ($generated@@84 $generated@@698) $generated@@699 $generated@@700))
))))
 :pattern ( ($generated@@96 $generated@@696 $generated@@697 ($generated@@84 $generated@@698) $generated@@699 $generated@@700))
)))
(assert (forall (($generated@@702 T@U) ($generated@@703 T@U) ($generated@@704 T@U) ) (!  (=> (and (and (and (= (type $generated@@702) $generated@@87) (= (type $generated@@703) $generated@@73)) (= (type $generated@@704) ($generated@@112 $generated@@113 $generated@@114))) (and ($generated@@284 $generated@@704) (and ($generated@@91 $generated@@702) ($generated@@110 $generated@@702 ($generated@@89 $generated@@703) $generated@@704)))) ($generated@@356 ($generated@@92 $generated@@702) $generated@@703 $generated@@704))
 :pattern ( ($generated@@356 ($generated@@92 $generated@@702) $generated@@703 $generated@@704))
)))
(assert (forall (($generated@@705 T@U) ($generated@@706 T@U) ($generated@@707 T@U) ) (!  (=> (and (and (and (= (type $generated@@705) $generated@@87) (= (type $generated@@706) $generated@@73)) (= (type $generated@@707) ($generated@@112 $generated@@113 $generated@@114))) (and ($generated@@284 $generated@@707) (and ($generated@@307 $generated@@705) ($generated@@110 $generated@@705 ($generated@@283 $generated@@706) $generated@@707)))) ($generated@@356 ($generated@@308 $generated@@705) $generated@@706 $generated@@707))
 :pattern ( ($generated@@356 ($generated@@308 $generated@@705) $generated@@706 $generated@@707))
)))
(assert (forall (($generated@@708 T@U) ) (! (let (($generated@@709 (type $generated@@708)))
 (not ($generated@@0 ($generated@@117 ($generated@@548 $generated@@709) $generated@@708))))
 :pattern ( (let (($generated@@709 (type $generated@@708)))
($generated@@117 ($generated@@548 $generated@@709) $generated@@708)))
)))
(assert (forall (($generated@@710 T@U) ($generated@@711 T@U) ) (!  (=> (and (= (type $generated@@710) $generated@@73) (= (type $generated@@711) $generated@@73)) (and (= ($generated@@81 ($generated@@186 $generated@@710 $generated@@711)) $generated@@63) (= ($generated@@408 ($generated@@186 $generated@@710 $generated@@711)) $generated@@70)))
 :pattern ( ($generated@@186 $generated@@710 $generated@@711))
)))
(assert (forall (($generated@@712 T@U) ) (!  (=> (= (type $generated@@712) $generated@@87) (= ($generated@@677 ($generated@@397 $generated@@712)) ($generated@@678 $generated@@712)))
 :pattern ( ($generated@@677 ($generated@@397 $generated@@712)))
)))
(assert (forall (($generated@@713 T@U) ($generated@@714 T@U) ($generated@@715 Int) ($generated@@716 T@U) ) (!  (=> (and (and (= (type $generated@@713) $generated@@73) (= (type $generated@@714) $generated@@86)) (= (type $generated@@716) $generated@@87)) (= ($generated@@315 $generated@@713 ($generated@@84 $generated@@714) $generated@@715 $generated@@716) ($generated@@315 $generated@@713 $generated@@714 $generated@@715 $generated@@716)))
 :pattern ( ($generated@@315 $generated@@713 ($generated@@84 $generated@@714) $generated@@715 $generated@@716))
)))
(assert (forall (($generated@@717 T@U) ) (!  (=> (and (= (type $generated@@717) $generated@@85) ($generated@@289 $generated@@717 ($generated@@111 0))) (and (= ($generated@@397 ($generated@@455 $generated@@2 $generated@@717)) $generated@@717) ($generated@@88 ($generated@@455 ($generated@@112 $generated@@85 $generated@@4) $generated@@717) ($generated@@111 0))))
 :pattern ( ($generated@@289 $generated@@717 ($generated@@111 0)))
)))
(assert (forall (($generated@@718 T@U) ($generated@@719 T@U) ) (!  (=> (and (and (= (type $generated@@718) $generated@@85) (= (type $generated@@719) $generated@@73)) ($generated@@289 $generated@@718 ($generated@@329 $generated@@719))) (and (= ($generated@@397 ($generated@@455 ($generated@@112 $generated@@85 $generated@@4) $generated@@718)) $generated@@718) ($generated@@88 ($generated@@455 ($generated@@112 $generated@@85 $generated@@4) $generated@@718) ($generated@@329 $generated@@719))))
 :pattern ( ($generated@@289 $generated@@718 ($generated@@329 $generated@@719)))
)))
(assert (forall (($generated@@720 T@U) ($generated@@721 T@U) ) (!  (=> (and (and (= (type $generated@@720) $generated@@85) (= (type $generated@@721) $generated@@73)) ($generated@@289 $generated@@720 ($generated@@334 $generated@@721))) (and (= ($generated@@397 ($generated@@455 ($generated@@112 $generated@@85 $generated@@4) $generated@@720)) $generated@@720) ($generated@@88 ($generated@@455 ($generated@@112 $generated@@85 $generated@@4) $generated@@720) ($generated@@334 $generated@@721))))
 :pattern ( ($generated@@289 $generated@@720 ($generated@@334 $generated@@721)))
)))
(assert (forall (($generated@@722 T@U) ($generated@@723 T@U) ) (!  (=> (and (and (= (type $generated@@722) $generated@@85) (= (type $generated@@723) $generated@@73)) ($generated@@289 $generated@@722 ($generated@@202 $generated@@723))) (and (= ($generated@@397 ($generated@@455 ($generated@@112 $generated@@85 $generated@@2) $generated@@722)) $generated@@722) ($generated@@88 ($generated@@455 ($generated@@112 $generated@@85 $generated@@2) $generated@@722) ($generated@@202 $generated@@723))))
 :pattern ( ($generated@@289 $generated@@722 ($generated@@202 $generated@@723)))
)))
(assert (forall (($generated@@724 T@U) ($generated@@725 T@U) ) (!  (=> (and (and (= (type $generated@@724) $generated@@85) (= (type $generated@@725) $generated@@73)) ($generated@@289 $generated@@724 ($generated@@627 $generated@@725))) (and (= ($generated@@397 ($generated@@455 ($generated@@377 $generated@@85) $generated@@724)) $generated@@724) ($generated@@88 ($generated@@455 ($generated@@377 $generated@@85) $generated@@724) ($generated@@627 $generated@@725))))
 :pattern ( ($generated@@289 $generated@@724 ($generated@@627 $generated@@725)))
)))
(assert (forall (($generated@@726 T@U) ($generated@@727 T@U) ) (!  (=> (and (and (= (type $generated@@726) $generated@@73) (= (type $generated@@727) $generated@@85)) ($generated@@289 $generated@@727 ($generated@@89 $generated@@726))) (and (= ($generated@@397 ($generated@@455 $generated@@87 $generated@@727)) $generated@@727) ($generated@@88 ($generated@@455 $generated@@87 $generated@@727) ($generated@@89 $generated@@726))))
 :pattern ( ($generated@@289 $generated@@727 ($generated@@89 $generated@@726)))
)))
(assert (forall (($generated@@728 T@U) ($generated@@729 T@U) ) (!  (=> (and (and (= (type $generated@@728) $generated@@73) (= (type $generated@@729) $generated@@85)) ($generated@@289 $generated@@729 ($generated@@283 $generated@@728))) (and (= ($generated@@397 ($generated@@455 $generated@@87 $generated@@729)) $generated@@729) ($generated@@88 ($generated@@455 $generated@@87 $generated@@729) ($generated@@283 $generated@@728))))
 :pattern ( ($generated@@289 $generated@@729 ($generated@@283 $generated@@728)))
)))
(assert (forall (($generated@@730 T@U) ) (!  (=> (and (= (type $generated@@730) $generated@@85) ($generated@@448 $generated@@730)) (= $generated@@730 ($generated@@94 ($generated@@90 $generated@@730))))
 :pattern ( ($generated@@90 $generated@@730))
 :pattern ( ($generated@@448 $generated@@730))
)))
(assert (forall (($generated@@731 T@U) ($generated@@732 T@U) ($generated@@733 T@U) ) (!  (=> (and (and (and (= (type $generated@@731) $generated@@87) (= (type $generated@@732) $generated@@73)) (= (type $generated@@733) ($generated@@112 $generated@@113 $generated@@114))) (and ($generated@@284 $generated@@733) (and ($generated@@91 $generated@@731) ($generated@@110 $generated@@731 ($generated@@89 $generated@@732) $generated@@733)))) ($generated@@110 ($generated@@95 $generated@@731) ($generated@@89 $generated@@732) $generated@@733))
 :pattern ( ($generated@@110 ($generated@@95 $generated@@731) ($generated@@89 $generated@@732) $generated@@733))
)))
(assert (forall (($generated@@734 T@U) ($generated@@735 T@U) ($generated@@736 T@U) ) (!  (=> (and (and (and (= (type $generated@@734) $generated@@87) (= (type $generated@@735) $generated@@73)) (= (type $generated@@736) ($generated@@112 $generated@@113 $generated@@114))) (and ($generated@@284 $generated@@736) (and ($generated@@307 $generated@@734) ($generated@@110 $generated@@734 ($generated@@283 $generated@@735) $generated@@736)))) ($generated@@110 ($generated@@309 $generated@@734) ($generated@@283 $generated@@735) $generated@@736))
 :pattern ( ($generated@@110 ($generated@@309 $generated@@734) ($generated@@283 $generated@@735) $generated@@736))
)))
(assert (= ($generated@@81 $generated@@178) $generated@@61))
(assert (= ($generated@@408 $generated@@178) $generated@@69))
(assert (forall (($generated@@737 T@U) ($generated@@738 T@U) ($generated@@739 T@U) ) (!  (=> (and (and (= (type $generated@@737) ($generated@@112 $generated@@85 $generated@@2)) (= (type $generated@@738) $generated@@73)) (= (type $generated@@739) ($generated@@112 $generated@@113 $generated@@114))) (= ($generated@@110 $generated@@737 ($generated@@202 $generated@@738) $generated@@739) (forall (($generated@@740 T@U) ) (!  (=> (and (= (type $generated@@740) $generated@@85) (< 0 ($generated ($generated@@117 $generated@@737 $generated@@740)))) ($generated@@356 $generated@@740 $generated@@738 $generated@@739))
 :pattern ( ($generated@@117 $generated@@737 $generated@@740))
))))
 :pattern ( ($generated@@110 $generated@@737 ($generated@@202 $generated@@738) $generated@@739))
)))
(assert (= $generated@@200 ($generated@@340 $generated@@200)))
(assert (forall (($generated@@741 T@U) ($generated@@742 T@U) ) (!  (=> (and (and (= (type $generated@@741) $generated@@85) (= (type $generated@@742) $generated@@85)) (and ($generated@@448 $generated@@742) (<= ($generated@@90 $generated@@742) ($generated@@90 $generated@@741)))) (or (and (= $generated@@742 ($generated@@94 0)) (= ($generated@@93 $generated@@741 $generated@@742) $generated@@741)) (and (not (= $generated@@742 ($generated@@94 0))) ($generated@@174 ($generated@@93 $generated@@741 $generated@@742) $generated@@741))))
 :pattern ( ($generated@@93 $generated@@741 $generated@@742))
)))
(assert (forall (($generated@@743 T@U) ($generated@@744 T@U) ($generated@@745 T@U) ($generated@@746 T@U) ($generated@@747 T@U) ($generated@@748 T@U) ($generated@@749 T@U) ) (!  (=> (and (and (and (and (and (and (and (= (type $generated@@743) $generated@@73) (= (type $generated@@744) $generated@@73)) (= (type $generated@@745) $generated@@85)) (= (type $generated@@746) $generated@@86)) (= (type $generated@@747) $generated@@87)) (= (type $generated@@748) $generated@@87)) (= (type $generated@@749) $generated@@85)) (and ($generated@@174 $generated@@745 $generated@@749) ($generated@@83 $generated@@743 $generated@@744 $generated@@749 ($generated@@84 $generated@@746) $generated@@747 $generated@@748))) ($generated@@83 $generated@@743 $generated@@744 $generated@@745 ($generated@@84 $generated@@746) $generated@@747 $generated@@748))
 :pattern ( ($generated@@83 $generated@@743 $generated@@744 $generated@@745 ($generated@@84 $generated@@746) $generated@@747 $generated@@748) ($generated@@83 $generated@@743 $generated@@744 $generated@@749 ($generated@@84 $generated@@746) $generated@@747 $generated@@748))
)))
(assert (forall (($generated@@750 T@U) ($generated@@751 T@U) ($generated@@752 T@U) ($generated@@753 T@U) ($generated@@754 T@U) ) (!  (=> (and (and (and (and (= (type $generated@@750) $generated@@73) (= (type $generated@@751) $generated@@73)) (= (type $generated@@752) $generated@@86)) (= (type $generated@@753) $generated@@87)) (= (type $generated@@754) $generated@@87)) (= ($generated@@96 $generated@@750 $generated@@751 ($generated@@84 $generated@@752) $generated@@753 $generated@@754) ($generated@@96 $generated@@750 $generated@@751 $generated@@752 $generated@@753 $generated@@754)))
 :pattern ( ($generated@@96 $generated@@750 $generated@@751 ($generated@@84 $generated@@752) $generated@@753 $generated@@754))
)))
(assert (forall (($generated@@755 T@U) ($generated@@756 T@U) ($generated@@757 T@U) ) (!  (=> (and (and (and (= (type $generated@@755) $generated@@87) (= (type $generated@@756) $generated@@73)) (= (type $generated@@757) ($generated@@112 $generated@@113 $generated@@114))) (and ($generated@@284 $generated@@757) (and ($generated@@185 $generated@@755) (exists (($generated@@758 T@U) ) (!  (and (= (type $generated@@758) $generated@@73) ($generated@@110 $generated@@755 ($generated@@186 $generated@@756 $generated@@758) $generated@@757))
 :pattern ( ($generated@@110 $generated@@755 ($generated@@186 $generated@@756 $generated@@758) $generated@@757))
))))) ($generated@@356 ($generated@@193 $generated@@755) $generated@@756 $generated@@757))
 :pattern ( ($generated@@356 ($generated@@193 $generated@@755) $generated@@756 $generated@@757))
)))
(assert (forall (($generated@@759 T@U) ($generated@@760 T@U) ($generated@@761 T@U) ) (!  (=> (and (and (and (= (type $generated@@759) $generated@@87) (= (type $generated@@760) $generated@@73)) (= (type $generated@@761) ($generated@@112 $generated@@113 $generated@@114))) (and ($generated@@284 $generated@@761) (and ($generated@@185 $generated@@759) (exists (($generated@@762 T@U) ) (!  (and (= (type $generated@@762) $generated@@73) ($generated@@110 $generated@@759 ($generated@@186 $generated@@762 $generated@@760) $generated@@761))
 :pattern ( ($generated@@110 $generated@@759 ($generated@@186 $generated@@762 $generated@@760) $generated@@761))
))))) ($generated@@356 ($generated@@194 $generated@@759) $generated@@760 $generated@@761))
 :pattern ( ($generated@@356 ($generated@@194 $generated@@759) $generated@@760 $generated@@761))
)))
(assert (forall (($generated@@763 T@U) ($generated@@764 T@U) ) (!  (=> (and (= (type $generated@@763) $generated@@85) (= (type $generated@@764) $generated@@85)) (= ($generated@@288 ($generated@@340 $generated@@763) ($generated@@340 $generated@@764)) ($generated@@340 ($generated@@288 $generated@@763 $generated@@764))))
 :pattern ( ($generated@@288 ($generated@@340 $generated@@763) ($generated@@340 $generated@@764)))
)))
(assert (forall (($generated@@765 T@U) ($generated@@766 T@U) ) (!  (=> (and (= (type $generated@@765) $generated@@85) (= (type $generated@@766) $generated@@87)) (= ($generated@@318 ($generated@@340 $generated@@765) ($generated@@340 $generated@@766)) ($generated@@340 ($generated@@318 $generated@@765 $generated@@766))))
 :pattern ( ($generated@@318 ($generated@@340 $generated@@765) ($generated@@340 $generated@@766)))
)))
(assert (forall (($generated@@767 Int) ) (! (= ($generated@@397 ($generated@@8 ($generated@@317 $generated@@767))) ($generated@@340 ($generated@@397 ($generated@@8 $generated@@767))))
 :pattern ( ($generated@@397 ($generated@@8 ($generated@@317 $generated@@767))))
)))
(assert (forall (($generated@@768 T@U) ) (! (= ($generated@@397 ($generated@@340 $generated@@768)) ($generated@@340 ($generated@@397 $generated@@768)))
 :pattern ( ($generated@@397 ($generated@@340 $generated@@768)))
)))
(assert (forall (($generated@@769 T@U) ) (! (let (($generated@@770 ($generated@@378 (type $generated@@769))))
 (=> (and (= (type $generated@@769) ($generated@@377 $generated@@770)) (= ($generated@@376 $generated@@769) 0)) (= $generated@@769 ($generated@@375 $generated@@770))))
 :pattern ( ($generated@@376 $generated@@769))
)))
(assert (forall (($generated@@771 T@U) ($generated@@772 T@U) ($generated@@773 T@U) ) (! (let (($generated@@774 (type $generated@@772)))
 (=> (and (and (= (type $generated@@771) ($generated@@112 $generated@@774 $generated@@2)) (= (type $generated@@773) $generated@@2)) (<= 0 ($generated $generated@@773))) (= ($generated@@402 ($generated@@118 $generated@@771 $generated@@772 $generated@@773)) (+ (- ($generated@@402 $generated@@771) ($generated ($generated@@117 $generated@@771 $generated@@772))) ($generated $generated@@773)))))
 :pattern ( ($generated@@402 ($generated@@118 $generated@@771 $generated@@772 $generated@@773)))
)))
(assert (forall (($generated@@775 T@U) ($generated@@776 T@U) ($generated@@777 T@U) ($generated@@778 T@U) ($generated@@779 T@U) ) (!  (=> (and (and (and (and (and (= (type $generated@@775) $generated@@73) (= (type $generated@@776) $generated@@73)) (= (type $generated@@777) $generated@@86)) (= (type $generated@@778) $generated@@87)) (= (type $generated@@779) $generated@@87)) (forall (($generated@@780 Int) ) (!  (=> (<= 0 $generated@@780) ($generated@@83 $generated@@775 $generated@@776 ($generated@@94 $generated@@780) ($generated@@84 $generated@@777) $generated@@778 $generated@@779))
 :pattern ( ($generated@@83 $generated@@775 $generated@@776 ($generated@@94 $generated@@780) ($generated@@84 $generated@@777) $generated@@778 $generated@@779))
))) ($generated@@96 $generated@@775 $generated@@776 ($generated@@84 $generated@@777) $generated@@778 $generated@@779))
 :pattern ( ($generated@@96 $generated@@775 $generated@@776 ($generated@@84 $generated@@777) $generated@@778 $generated@@779))
)))
(assert (forall (($generated@@781 T@U) ($generated@@782 T@U) ) (!  (=> (and (= (type $generated@@781) ($generated@@112 $generated@@113 $generated@@114)) (= (type $generated@@782) $generated@@2)) ($generated@@110 $generated@@782 $generated@@46 $generated@@781))
 :pattern ( ($generated@@110 $generated@@782 $generated@@46 $generated@@781))
)))
(assert (forall (($generated@@783 T@U) ($generated@@784 T@U) ) (!  (=> (and (= (type $generated@@783) ($generated@@112 $generated@@113 $generated@@114)) (= (type $generated@@784) $generated@@3)) ($generated@@110 $generated@@784 $generated@@47 $generated@@783))
 :pattern ( ($generated@@110 $generated@@784 $generated@@47 $generated@@783))
)))
(assert (forall (($generated@@785 T@U) ($generated@@786 T@U) ) (!  (=> (and (= (type $generated@@785) ($generated@@112 $generated@@113 $generated@@114)) (= (type $generated@@786) $generated@@4)) ($generated@@110 $generated@@786 $generated@@44 $generated@@785))
 :pattern ( ($generated@@110 $generated@@786 $generated@@44 $generated@@785))
)))
(assert (forall (($generated@@787 T@U) ($generated@@788 T@U) ) (!  (=> (and (= (type $generated@@787) ($generated@@112 $generated@@113 $generated@@114)) (= (type $generated@@788) $generated@@572)) ($generated@@110 $generated@@788 $generated@@45 $generated@@787))
 :pattern ( ($generated@@110 $generated@@788 $generated@@45 $generated@@787))
)))
(assert (forall (($generated@@789 T@U) ($generated@@790 T@U) ) (!  (=> (and (= (type $generated@@789) ($generated@@112 $generated@@113 $generated@@114)) (= (type $generated@@790) $generated@@85)) ($generated@@110 $generated@@790 $generated@@48 $generated@@789))
 :pattern ( ($generated@@110 $generated@@790 $generated@@48 $generated@@789))
)))
(assert (forall (($generated@@791 T@U) ($generated@@792 T@U) ($generated@@793 T@U) ($generated@@794 T@U) ) (!  (=> (and (and (and (and (= (type $generated@@791) $generated@@73) (= (type $generated@@792) $generated@@85)) (= (type $generated@@793) $generated@@87)) (= (type $generated@@794) ($generated@@112 $generated@@113 $generated@@114))) ($generated@@284 $generated@@794)) (= ($generated@@110 ($generated@@347 $generated@@792 $generated@@793) ($generated@@89 $generated@@791) $generated@@794)  (and ($generated@@356 $generated@@792 $generated@@791 $generated@@794) ($generated@@110 $generated@@793 ($generated@@89 $generated@@791) $generated@@794))))
 :pattern ( ($generated@@110 ($generated@@347 $generated@@792 $generated@@793) ($generated@@89 $generated@@791) $generated@@794))
)))
(assert (forall (($generated@@795 T@U) ($generated@@796 T@U) ($generated@@797 T@U) ($generated@@798 T@U) ) (!  (=> (and (and (and (and (= (type $generated@@795) $generated@@73) (= (type $generated@@796) $generated@@85)) (= (type $generated@@797) $generated@@87)) (= (type $generated@@798) ($generated@@112 $generated@@113 $generated@@114))) ($generated@@284 $generated@@798)) (= ($generated@@110 ($generated@@318 $generated@@796 $generated@@797) ($generated@@283 $generated@@795) $generated@@798)  (and ($generated@@356 $generated@@796 $generated@@795 $generated@@798) ($generated@@110 $generated@@797 ($generated@@283 $generated@@795) $generated@@798))))
 :pattern ( ($generated@@110 ($generated@@318 $generated@@796 $generated@@797) ($generated@@283 $generated@@795) $generated@@798))
)))
(assert (forall (($generated@@799 T@U) ($generated@@800 T@U) ) (!  (=> (and (= (type $generated@@799) ($generated@@377 $generated@@85)) (= (type $generated@@800) $generated@@73)) (= ($generated@@88 $generated@@799 ($generated@@627 $generated@@800)) (forall (($generated@@801 Int) ) (!  (=> (and (<= 0 $generated@@801) (< $generated@@801 ($generated@@376 $generated@@799))) ($generated@@289 ($generated@@628 $generated@@799 $generated@@801) $generated@@800))
 :pattern ( ($generated@@628 $generated@@799 $generated@@801))
))))
 :pattern ( ($generated@@88 $generated@@799 ($generated@@627 $generated@@800)))
)))
(assert (forall (($generated@@803 T@U) ($generated@@804 Int) ) (!  (=> (= (type $generated@@803) ($generated@@377 $generated@@85)) (=> (and (<= 0 $generated@@804) (< $generated@@804 ($generated@@376 $generated@@803))) (< ($generated@@678 ($generated@@455 $generated@@87 ($generated@@628 $generated@@803 $generated@@804))) ($generated@@802 $generated@@803))))
 :pattern ( ($generated@@678 ($generated@@455 $generated@@87 ($generated@@628 $generated@@803 $generated@@804))))
)))
(assert (forall (($generated@@805 T@U) ($generated@@806 T@U) ($generated@@807 T@U) ) (!  (=> (and (and (and (= (type $generated@@805) ($generated@@414 $generated@@85 $generated@@85)) (= (type $generated@@806) $generated@@73)) (= (type $generated@@807) $generated@@73)) ($generated@@88 $generated@@805 ($generated@@526 $generated@@806 $generated@@807))) (and (and ($generated@@88 ($generated@@412 $generated@@805) ($generated@@329 $generated@@806)) ($generated@@88 ($generated@@463 $generated@@805) ($generated@@329 $generated@@807))) ($generated@@88 ($generated@@500 $generated@@805) ($generated@@329 ($generated@@186 $generated@@806 $generated@@807)))))
 :pattern ( ($generated@@88 $generated@@805 ($generated@@526 $generated@@806 $generated@@807)))
)))
(assert (forall (($generated@@808 T@U) ($generated@@809 T@U) ($generated@@810 T@U) ) (!  (=> (and (and (and (= (type $generated@@808) ($generated@@432 $generated@@85 $generated@@85)) (= (type $generated@@809) $generated@@73)) (= (type $generated@@810) $generated@@73)) ($generated@@88 $generated@@808 ($generated@@534 $generated@@809 $generated@@810))) (and (and ($generated@@88 ($generated@@430 $generated@@808) ($generated@@334 $generated@@809)) ($generated@@88 ($generated@@474 $generated@@808) ($generated@@334 $generated@@810))) ($generated@@88 ($generated@@508 $generated@@808) ($generated@@334 ($generated@@186 $generated@@809 $generated@@810)))))
 :pattern ( ($generated@@88 $generated@@808 ($generated@@534 $generated@@809 $generated@@810)))
)))
(assert (forall (($generated@@811 T@U) ) (!  (=> (= (type $generated@@811) $generated@@2) ($generated@@88 $generated@@811 $generated@@46))
 :pattern ( ($generated@@88 $generated@@811 $generated@@46))
)))
(assert (forall (($generated@@812 T@U) ) (!  (=> (= (type $generated@@812) $generated@@3) ($generated@@88 $generated@@812 $generated@@47))
 :pattern ( ($generated@@88 $generated@@812 $generated@@47))
)))
(assert (forall (($generated@@813 T@U) ) (!  (=> (= (type $generated@@813) $generated@@4) ($generated@@88 $generated@@813 $generated@@44))
 :pattern ( ($generated@@88 $generated@@813 $generated@@44))
)))
(assert (forall (($generated@@814 T@U) ) (!  (=> (= (type $generated@@814) $generated@@572) ($generated@@88 $generated@@814 $generated@@45))
 :pattern ( ($generated@@88 $generated@@814 $generated@@45))
)))
(assert (forall (($generated@@815 T@U) ) (!  (=> (= (type $generated@@815) $generated@@85) ($generated@@88 $generated@@815 $generated@@48))
 :pattern ( ($generated@@88 $generated@@815 $generated@@48))
)))
(push 1)
(declare-fun ControlFlow (Int Int) Int)
(declare-fun $generated@@816 () Int)
(declare-fun $generated@@817 () T@U)
(declare-fun $generated@@818 () Int)
(declare-fun $generated@@819 () T@U)
(declare-fun $generated@@820 () T@U)
(declare-fun $generated@@821 () T@U)
(declare-fun $generated@@822 () T@U)
(declare-fun $generated@@823 () T@U)
(declare-fun $generated@@824 () T@U)
(declare-fun $generated@@825 (T@U) Bool)
(assert  (and (and (and (and (and (and (= (type $generated@@817) $generated@@87) (= (type $generated@@819) ($generated@@112 $generated@@113 $generated@@114))) (= (type $generated@@820) $generated@@87)) (= (type $generated@@821) $generated@@73)) (= (type $generated@@822) ($generated@@211 $generated@@113 $generated@@4))) (= (type $generated@@823) $generated@@113)) (= (type $generated@@824) ($generated@@211 $generated@@113 $generated@@4))))
(set-option :timeout 0)
(set-option :rlimit 0)
(assert (not
 (=> (= (ControlFlow 0 0) 9) (let (($generated@@826  (=> (not (= $generated@@816 ($generated@@317 0))) (=> (and ($generated@@91 $generated@@817) ($generated@@91 $generated@@817)) (and (=> (= (ControlFlow 0 4) (- 0 6)) ($generated@@88 ($generated@@8 (- $generated@@816 1)) $generated@@178)) (=> ($generated@@88 ($generated@@8 (- $generated@@816 1)) $generated@@178) (=> (and (and (= $generated@@818 (- $generated@@816 1)) ($generated@@110 ($generated@@8 $generated@@818) $generated@@178 $generated@@819)) (and (= $generated@@820 ($generated@@95 $generated@@817)) ($generated@@110 $generated@@820 ($generated@@89 $generated@@821) $generated@@819))) (and (=> (= (ControlFlow 0 4) (- 0 5)) (or (<= 0 $generated@@816) (= $generated@@818 $generated@@816))) (=> (or (<= 0 $generated@@816) (= $generated@@818 $generated@@816)) (=> (= (ControlFlow 0 4) (- 0 3)) (< $generated@@818 $generated@@816)))))))))))
(let (($generated@@827 true))
(let (($generated@@828  (=> (= $generated@@822 ($generated@@265 $generated@@823 $generated@@819 $generated@@60 false)) (and (=> (= (ControlFlow 0 7) 2) $generated@@827) (=> (= (ControlFlow 0 7) 4) $generated@@826)))))
(let (($generated@@829 true))
(let (($generated@@830  (=> (= $generated@@824 ($generated@@210 $generated@@823 $generated@@819 $generated@@60 false)) (and (=> (= (ControlFlow 0 8) 1) $generated@@829) (=> (= (ControlFlow 0 8) 7) $generated@@828)))))
(let (($generated@@831  (=> (and ($generated@@284 $generated@@819) ($generated@@825 $generated@@819)) (=> (and (and (<= ($generated@@317 0) $generated@@816) ($generated@@88 $generated@@817 ($generated@@89 $generated@@821))) (and (= 1 $generated@@314) (= (ControlFlow 0 9) 8))) $generated@@830))))
$generated@@831)))))))
))
(check-sat)
(pop 1)
; Valid
(get-info :rlimit)
(reset)
(set-option :rlimit 0)
; did a full reset
(reset)
(set-option :print-success false)
(set-info :smt-lib-version 2.6)
(set-option :auto_config false)
(set-option :type_check true)
(set-option :smt.case_split 3)
(set-option :smt.qi.eager_threshold 100)
(set-option :smt.delay_units true)
(set-option :smt.arith.solver 2)
(set-option :smt.mbqi false)
(set-option :model.compact false)
(set-option :model.v2 true)
(set-option :pp.bv_literals false)
; done setting options


(set-info :category "industrial")
(declare-sort |T@U| 0)
(declare-sort |T@T| 0)
(declare-fun real_pow (Real Real) Real)
(declare-fun UOrdering2 (|T@U| |T@U|) Bool)
(declare-fun UOrdering3 (|T@T| |T@U| |T@U|) Bool)
(declare-fun tickleBool (Bool) Bool)
(assert (and (tickleBool true) (tickleBool false)))
(declare-fun $generated (T@U) Int)
(declare-fun $generated@@0 (T@U) Bool)
(declare-fun $generated@@1 (T@T) Int)
(declare-fun $generated@@2 () T@T)
(declare-fun $generated@@3 () T@T)
(declare-fun $generated@@4 () T@T)
(declare-fun $generated@@5 () T@T)
(declare-fun $generated@@6 () T@T)
(declare-fun $generated@@7 () T@T)
(declare-fun $generated@@8 (Int) T@U)
(declare-fun type (T@U) T@T)
(declare-fun $generated@@9 (Real) T@U)
(declare-fun $generated@@10 (T@U) Real)
(declare-fun $generated@@11 (Bool) T@U)
(declare-fun $generated@@12 (RoundingMode) T@U)
(declare-fun $generated@@13 (T@U) RoundingMode)
(declare-fun $generated@@14 (String) T@U)
(declare-fun $generated@@15 (T@U) String)
(declare-fun $generated@@16 ((RegEx String)) T@U)
(declare-fun $generated@@17 (T@U) (RegEx String))
(declare-fun $generated@@44 () T@U)
(declare-fun $generated@@45 () T@U)
(declare-fun $generated@@46 () T@U)
(declare-fun $generated@@47 () T@U)
(declare-fun $generated@@48 () T@U)
(declare-fun $generated@@49 () T@U)
(declare-fun $generated@@50 () T@U)
(declare-fun $generated@@51 () T@U)
(declare-fun $generated@@52 () T@U)
(declare-fun $generated@@53 () T@U)
(declare-fun $generated@@54 () T@U)
(declare-fun $generated@@55 () T@U)
(declare-fun $generated@@56 () T@U)
(declare-fun $generated@@57 () T@U)
(declare-fun $generated@@58 () T@U)
(declare-fun $generated@@59 () T@U)
(declare-fun $generated@@60 () T@U)
(declare-fun $generated@@61 () T@U)
(declare-fun $generated@@62 () T@U)
(declare-fun $generated@@63 () T@U)
(declare-fun $generated@@64 () T@U)
(declare-fun $generated@@65 () T@T)
(declare-fun $generated@@66 () T@T)
(declare-fun $generated@@67 (T@T) T@T)
(declare-fun $generated@@68 (T@T) T@T)
(declare-fun $generated@@69 () T@T)
(declare-fun $generated@@70 () T@T)
(declare-fun $generated@@73 (T@U) T@U)
(declare-fun $generated@@75 (T@U T@U T@U) Bool)
(declare-fun $generated@@76 (Int) T@U)
(declare-fun $generated@@77 (T@T T@T) T@T)
(declare-fun $generated@@78 () T@T)
(declare-fun $generated@@79 () T@T)
(declare-fun $generated@@80 (T@T) T@T)
(declare-fun $generated@@81 (T@T) T@T)
(declare-fun $generated@@82 (T@U T@U) T@U)
(declare-fun $generated@@83 (T@U T@U T@U) T@U)
(declare-fun $generated@@84 (T@U T@U) T@U)
(declare-fun $generated@@85 (T@U T@U T@U) T@U)
(declare-fun $generated@@133 (T@U T@U) Bool)
(declare-fun $generated@@137 () T@U)
(declare-fun $generated@@138 () T@U)
(declare-fun $generated@@141 (T@U T@U) Bool)
(declare-fun $generated@@143 (T@U) Bool)
(declare-fun $generated@@144 (T@U T@U) T@U)
(declare-fun $generated@@145 () T@T)
(declare-fun $generated@@151 (T@U T@U) Bool)
(declare-fun $generated@@152 (T@U) T@U)
(declare-fun $generated@@153 (T@U) T@U)
(declare-fun $generated@@154 () T@T)
(declare-fun $generated@@159 (T@U) T@U)
(declare-fun $generated@@160 () T@U)
(declare-fun $generated@@162 (T@U) T@U)
(declare-fun $generated@@163 (T@U) Bool)
(declare-fun $generated@@167 (T@U) T@U)
(declare-fun $generated@@170 (T@U T@U T@U) T@U)
(declare-fun $generated@@171 (T@U T@U T@U Bool) T@U)
(declare-fun $generated@@172 (T@T T@T) T@T)
(declare-fun $generated@@173 (T@T) T@T)
(declare-fun $generated@@174 (T@T) T@T)
(declare-fun $generated@@175 (T@U T@U T@U T@U) T@U)
(declare-fun $generated@@228 (T@U T@U) T@U)
(declare-fun $generated@@229 (T@U T@U) Bool)
(declare-fun $generated@@238 (T@U) T@U)
(declare-fun $generated@@243 (T@U) T@U)
(declare-fun $generated@@248 (T@U) T@U)
(declare-fun $generated@@252 (T@U) Bool)
(declare-fun $generated@@253 (T@U T@U T@U) Bool)
(declare-fun $generated@@259 (T@U) T@U)
(declare-fun $generated@@265 (T@T) T@U)
(declare-fun $generated@@266 (T@U) Int)
(declare-fun $generated@@267 (T@T) T@T)
(declare-fun $generated@@268 (T@T) T@T)
(declare-fun $generated@@273 (T@U) T@U)
(declare-fun $generated@@286 (T@U) Int)
(declare-fun $generated@@287 (T@T) T@U)
(declare-fun $generated@@292 (T@U) T@U)
(declare-fun $generated@@293 (T@T T@T) T@U)
(declare-fun $generated@@294 (T@T T@T) T@T)
(declare-fun $generated@@295 (T@T) T@T)
(declare-fun $generated@@296 (T@T) T@T)
(declare-fun $generated@@310 (T@U) T@U)
(declare-fun $generated@@311 (T@T T@T) T@U)
(declare-fun $generated@@312 (T@T T@T) T@T)
(declare-fun $generated@@313 (T@T) T@T)
(declare-fun $generated@@314 (T@T) T@T)
(declare-fun $generated@@331 (T@T T@U) T@U)
(declare-fun $generated@@341 (T@U) T@U)
(declare-fun $generated@@352 (T@U) T@U)
(declare-fun $generated@@372 (T@U) T@U)
(declare-fun $generated@@373 (T@U) T@U)
(declare-fun $generated@@380 (T@U) T@U)
(declare-fun $generated@@381 (T@U) T@U)
(declare-fun $generated@@398 (T@U T@U) T@U)
(declare-fun $generated@@406 (T@U T@U) T@U)
(declare-fun $generated@@417 (T@T) T@U)
(declare-fun $generated@@441 () T@T)
(declare-fun $generated@@449 (T@U) T@U)
(declare-fun $generated@@453 (T@U) T@U)
(declare-fun $generated@@459 (T@U) T@U)
(declare-fun $generated@@463 (T@U) T@U)
(declare-fun $generated@@471 (T@U) T@U)
(declare-fun $generated@@475 (T@U) T@U)
(declare-fun $generated@@483 (T@U) T@U)
(declare-fun $generated@@484 (T@U Int) T@U)
(declare-fun $generated@@493 (T@U) Int)
(declare-fun $generated@@495 (T@U) T@U)
(declare-fun $generated@@499 (T@U) T@U)
(declare-fun $generated@@503 (T@U) T@U)
(declare-fun $generated@@507 (T@U) T@U)
(declare-fun $generated@@521 (T@U) Int)
(declare-fun $generated@@522 (T@U) Int)
(declare-fun $generated@@584 (T@U) Int)
(assert  (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (= ($generated@@1 $generated@@2) 0) (= ($generated@@1 $generated@@3) 1)) (= ($generated@@1 $generated@@4) 2)) (= ($generated@@1 $generated@@5) 3)) (= ($generated@@1 $generated@@6) 4)) (= ($generated@@1 $generated@@7) 5)) (forall (($generated@@18 Int) ) (! (= ($generated ($generated@@8 $generated@@18)) $generated@@18)
 :pattern ( ($generated@@8 $generated@@18))
))) (forall (($generated@@19 T@U) ) (!  (=> (= (type $generated@@19) $generated@@2) (= ($generated@@8 ($generated $generated@@19)) $generated@@19))
 :pattern ( ($generated $generated@@19))
))) (forall (($generated@@20 Int) ) (! (= (type ($generated@@8 $generated@@20)) $generated@@2)
 :pattern ( ($generated@@8 $generated@@20))
))) (forall (($generated@@21 Real) ) (! (= ($generated@@10 ($generated@@9 $generated@@21)) $generated@@21)
 :pattern ( ($generated@@9 $generated@@21))
))) (forall (($generated@@22 T@U) ) (!  (=> (= (type $generated@@22) $generated@@3) (= ($generated@@9 ($generated@@10 $generated@@22)) $generated@@22))
 :pattern ( ($generated@@10 $generated@@22))
))) (forall (($generated@@23 Real) ) (! (= (type ($generated@@9 $generated@@23)) $generated@@3)
 :pattern ( ($generated@@9 $generated@@23))
))) (forall (($generated@@24 Bool) ) (! (= ($generated@@0 ($generated@@11 $generated@@24)) $generated@@24)
 :pattern ( ($generated@@11 $generated@@24))
))) (forall (($generated@@25 T@U) ) (!  (=> (= (type $generated@@25) $generated@@4) (= ($generated@@11 ($generated@@0 $generated@@25)) $generated@@25))
 :pattern ( ($generated@@0 $generated@@25))
))) (forall (($generated@@26 Bool) ) (! (= (type ($generated@@11 $generated@@26)) $generated@@4)
 :pattern ( ($generated@@11 $generated@@26))
))) (forall (($generated@@27 RoundingMode) ) (! (= ($generated@@13 ($generated@@12 $generated@@27)) $generated@@27)
 :pattern ( ($generated@@12 $generated@@27))
))) (forall (($generated@@28 T@U) ) (!  (=> (= (type $generated@@28) $generated@@5) (= ($generated@@12 ($generated@@13 $generated@@28)) $generated@@28))
 :pattern ( ($generated@@13 $generated@@28))
))) (forall (($generated@@29 RoundingMode) ) (! (= (type ($generated@@12 $generated@@29)) $generated@@5)
 :pattern ( ($generated@@12 $generated@@29))
))) (forall (($generated@@30 String) ) (! (= ($generated@@15 ($generated@@14 $generated@@30)) $generated@@30)
 :pattern ( ($generated@@14 $generated@@30))
))) (forall (($generated@@31 T@U) ) (!  (=> (= (type $generated@@31) $generated@@6) (= ($generated@@14 ($generated@@15 $generated@@31)) $generated@@31))
 :pattern ( ($generated@@15 $generated@@31))
))) (forall (($generated@@32 String) ) (! (= (type ($generated@@14 $generated@@32)) $generated@@6)
 :pattern ( ($generated@@14 $generated@@32))
))) (forall (($generated@@33 (RegEx String)) ) (! (= ($generated@@17 ($generated@@16 $generated@@33)) $generated@@33)
 :pattern ( ($generated@@16 $generated@@33))
))) (forall (($generated@@34 T@U) ) (!  (=> (= (type $generated@@34) $generated@@7) (= ($generated@@16 ($generated@@17 $generated@@34)) $generated@@34))
 :pattern ( ($generated@@17 $generated@@34))
))) (forall (($generated@@35 (RegEx String)) ) (! (= (type ($generated@@16 $generated@@35)) $generated@@7)
 :pattern ( ($generated@@16 $generated@@35))
))))
(assert (forall (($generated@@36 T@U) ) (! (UOrdering2 $generated@@36 $generated@@36)
 :no-pattern ($generated $generated@@36)
 :no-pattern ($generated@@0 $generated@@36)
)))
(assert (forall (($generated@@37 T@U) ($generated@@38 T@U) ($generated@@39 T@U) ) (! (let (($generated@@40 (type $generated@@37)))
 (=> (and (and (= (type $generated@@38) $generated@@40) (= (type $generated@@39) $generated@@40)) (and (UOrdering2 $generated@@37 $generated@@38) (UOrdering2 $generated@@38 $generated@@39))) (UOrdering2 $generated@@37 $generated@@39)))
 :pattern ( (UOrdering2 $generated@@37 $generated@@38) (UOrdering2 $generated@@38 $generated@@39))
)))
(assert (forall (($generated@@41 T@U) ($generated@@42 T@U) ) (! (let (($generated@@43 (type $generated@@41)))
 (=> (= (type $generated@@42) $generated@@43) (=> (and (UOrdering2 $generated@@41 $generated@@42) (UOrdering2 $generated@@42 $generated@@41)) (= $generated@@41 $generated@@42))))
 :pattern ( (UOrdering2 $generated@@41 $generated@@42) (UOrdering2 $generated@@42 $generated@@41))
)))
(assert  (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (= ($generated@@1 $generated@@65) 6) (= (type $generated@@44) $generated@@65)) (= (type $generated@@45) $generated@@65)) (= (type $generated@@46) $generated@@65)) (= (type $generated@@47) $generated@@65)) (= (type $generated@@48) $generated@@65)) (= ($generated@@1 $generated@@66) 7)) (= (type $generated@@49) $generated@@66)) (= (type $generated@@50) $generated@@66)) (= (type $generated@@51) $generated@@66)) (= (type $generated@@52) $generated@@66)) (= (type $generated@@53) $generated@@66)) (= (type $generated@@54) $generated@@66)) (= (type $generated@@55) $generated@@66)) (= (type $generated@@56) $generated@@66)) (= (type $generated@@57) $generated@@66)) (= (type $generated@@58) $generated@@66)) (= (type $generated@@59) $generated@@66)) (forall (($generated@@71 T@T) ) (= ($generated@@1 ($generated@@67 $generated@@71)) 8))) (forall (($generated@@72 T@T) ) (! (= ($generated@@68 ($generated@@67 $generated@@72)) $generated@@72)
 :pattern ( ($generated@@67 $generated@@72))
))) (= (type $generated@@60) ($generated@@67 $generated@@4))) (= ($generated@@1 $generated@@69) 9)) (= (type $generated@@61) $generated@@69)) (= (type $generated@@62) $generated@@66)) (= ($generated@@1 $generated@@70) 10)) (= (type $generated@@63) $generated@@70)) (= (type $generated@@64) $generated@@70)))
(assert (distinct $generated@@44 $generated@@45 $generated@@46 $generated@@47 $generated@@48 $generated@@49 $generated@@50 $generated@@51 $generated@@52 $generated@@53 $generated@@54 $generated@@55 $generated@@56 $generated@@57 $generated@@58 $generated@@59 $generated@@60 $generated@@61 $generated@@62 $generated@@63 $generated@@64)
)
(assert (forall (($generated@@74 T@U) ) (! (= (type ($generated@@73 $generated@@74)) $generated@@66)
 :pattern ( ($generated@@73 $generated@@74))
)))
(assert (= ($generated@@73 $generated@@44) $generated@@49))
(assert (= ($generated@@73 $generated@@45) $generated@@50))
(assert (= ($generated@@73 $generated@@46) $generated@@51))
(assert (= ($generated@@73 $generated@@47) $generated@@52))
(assert (= ($generated@@73 $generated@@48) $generated@@53))
(assert  (and (and (and (and (and (and (and (and (and (and (and (and (and (forall (($generated@@86 T@T) ($generated@@87 T@T) ) (= ($generated@@1 ($generated@@77 $generated@@86 $generated@@87)) 11)) (forall (($generated@@88 T@T) ($generated@@89 T@T) ) (! (= ($generated@@80 ($generated@@77 $generated@@88 $generated@@89)) $generated@@88)
 :pattern ( ($generated@@77 $generated@@88 $generated@@89))
))) (forall (($generated@@90 T@T) ($generated@@91 T@T) ) (! (= ($generated@@81 ($generated@@77 $generated@@90 $generated@@91)) $generated@@91)
 :pattern ( ($generated@@77 $generated@@90 $generated@@91))
))) (forall (($generated@@92 T@U) ($generated@@93 T@U) ) (! (let (($generated@@94 ($generated@@81 (type $generated@@92))))
(= (type ($generated@@82 $generated@@92 $generated@@93)) $generated@@94))
 :pattern ( ($generated@@82 $generated@@92 $generated@@93))
))) (forall (($generated@@95 T@U) ($generated@@96 T@U) ($generated@@97 T@U) ) (! (let (($generated@@98 (type $generated@@97)))
(let (($generated@@99 (type $generated@@96)))
(= (type ($generated@@83 $generated@@95 $generated@@96 $generated@@97)) ($generated@@77 $generated@@99 $generated@@98))))
 :pattern ( ($generated@@83 $generated@@95 $generated@@96 $generated@@97))
))) (forall (($generated@@100 T@U) ($generated@@101 T@U) ($generated@@102 T@U) ) (! (let (($generated@@103 ($generated@@81 (type $generated@@100))))
 (=> (= (type $generated@@102) $generated@@103) (= ($generated@@82 ($generated@@83 $generated@@100 $generated@@101 $generated@@102) $generated@@101) $generated@@102)))
 :weight 0
))) (and (forall (($generated@@104 T@U) ($generated@@105 T@U) ($generated@@106 T@U) ($generated@@107 T@U) ) (!  (or (= $generated@@106 $generated@@107) (= ($generated@@82 ($generated@@83 $generated@@105 $generated@@106 $generated@@104) $generated@@107) ($generated@@82 $generated@@105 $generated@@107)))
 :weight 0
)) (forall (($generated@@108 T@U) ($generated@@109 T@U) ($generated@@110 T@U) ($generated@@111 T@U) ) (!  (or true (= ($generated@@82 ($generated@@83 $generated@@109 $generated@@110 $generated@@108) $generated@@111) ($generated@@82 $generated@@109 $generated@@111)))
 :weight 0
)))) (= ($generated@@1 $generated@@78) 12)) (forall (($generated@@112 T@U) ($generated@@113 T@U) ) (! (let (($generated@@114 ($generated@@68 (type $generated@@113))))
(= (type ($generated@@84 $generated@@112 $generated@@113)) $generated@@114))
 :pattern ( ($generated@@84 $generated@@112 $generated@@113))
))) (= ($generated@@1 $generated@@79) 13)) (forall (($generated@@115 T@U) ($generated@@116 T@U) ($generated@@117 T@U) ) (! (= (type ($generated@@85 $generated@@115 $generated@@116 $generated@@117)) $generated@@79)
 :pattern ( ($generated@@85 $generated@@115 $generated@@116 $generated@@117))
))) (forall (($generated@@118 T@U) ($generated@@119 T@U) ($generated@@120 T@U) ) (! (let (($generated@@121 ($generated@@68 (type $generated@@119))))
 (=> (= (type $generated@@120) $generated@@121) (= ($generated@@84 ($generated@@85 $generated@@118 $generated@@119 $generated@@120) $generated@@119) $generated@@120)))
 :weight 0
))) (and (forall (($generated@@122 T@U) ($generated@@123 T@U) ($generated@@124 T@U) ($generated@@125 T@U) ) (!  (or (= $generated@@124 $generated@@125) (= ($generated@@84 ($generated@@85 $generated@@123 $generated@@124 $generated@@122) $generated@@125) ($generated@@84 $generated@@123 $generated@@125)))
 :weight 0
)) (forall (($generated@@126 T@U) ($generated@@127 T@U) ($generated@@128 T@U) ($generated@@129 T@U) ) (!  (or true (= ($generated@@84 ($generated@@85 $generated@@127 $generated@@128 $generated@@126) $generated@@129) ($generated@@84 $generated@@127 $generated@@129)))
 :weight 0
)))) (forall (($generated@@130 Int) ) (! (= (type ($generated@@76 $generated@@130)) $generated@@65)
 :pattern ( ($generated@@76 $generated@@130))
))))
(assert (forall (($generated@@131 T@U) ($generated@@132 T@U) ) (!  (=> (and (= (type $generated@@131) $generated@@2) (= (type $generated@@132) ($generated@@77 $generated@@78 $generated@@79))) ($generated@@75 $generated@@131 ($generated@@76 0) $generated@@132))
 :pattern ( ($generated@@75 $generated@@131 ($generated@@76 0) $generated@@132))
)))
(assert (forall (($generated@@134 T@U) ($generated@@135 T@U) ) (!  (=> (and (and (= (type $generated@@134) ($generated@@77 $generated@@78 $generated@@79)) (= (type $generated@@135) ($generated@@77 $generated@@78 $generated@@79))) ($generated@@133 $generated@@134 $generated@@135)) (forall (($generated@@136 T@U) ) (!  (=> (and (= (type $generated@@136) $generated@@78) ($generated@@0 ($generated@@84 ($generated@@82 $generated@@134 $generated@@136) $generated@@60))) ($generated@@0 ($generated@@84 ($generated@@82 $generated@@135 $generated@@136) $generated@@60)))
 :pattern ( ($generated@@84 ($generated@@82 $generated@@135 $generated@@136) $generated@@60))
)))
 :pattern ( ($generated@@133 $generated@@134 $generated@@135))
)))
(assert  (and (= (type $generated@@137) $generated@@65) (= (type $generated@@138) $generated@@78)))
(assert (forall (($generated@@139 T@U) ($generated@@140 T@U) ) (!  (=> (and (= (type $generated@@139) $generated@@78) (= (type $generated@@140) ($generated@@77 $generated@@78 $generated@@79))) (= ($generated@@75 $generated@@139 $generated@@137 $generated@@140)  (or (= $generated@@139 $generated@@138) ($generated@@0 ($generated@@84 ($generated@@82 $generated@@140 $generated@@139) $generated@@60)))))
 :pattern ( ($generated@@75 $generated@@139 $generated@@137 $generated@@140))
)))
(assert (forall (($generated@@142 T@U) ) (!  (=> (= (type $generated@@142) $generated@@2) ($generated@@141 $generated@@142 ($generated@@76 0)))
 :pattern ( ($generated@@141 $generated@@142 ($generated@@76 0)))
)))
(assert  (and (= ($generated@@1 $generated@@145) 14) (forall (($generated@@146 T@U) ($generated@@147 T@U) ) (! (= (type ($generated@@144 $generated@@146 $generated@@147)) $generated@@65)
 :pattern ( ($generated@@144 $generated@@146 $generated@@147))
))))
(assert (forall (($generated@@148 T@U) ($generated@@149 T@U) ($generated@@150 T@U) ) (!  (=> (and (and (and (= (type $generated@@148) $generated@@65) (= (type $generated@@149) $generated@@65)) (= (type $generated@@150) $generated@@145)) ($generated@@141 $generated@@150 ($generated@@144 $generated@@148 $generated@@149))) ($generated@@143 $generated@@150))
 :pattern ( ($generated@@143 $generated@@150) ($generated@@141 $generated@@150 ($generated@@144 $generated@@148 $generated@@149)))
)))
(assert  (and (and (= ($generated@@1 $generated@@154) 15) (forall (($generated@@155 T@U) ) (! (= (type ($generated@@152 $generated@@155)) $generated@@154)
 :pattern ( ($generated@@152 $generated@@155))
))) (forall (($generated@@156 T@U) ) (! (= (type ($generated@@153 $generated@@156)) $generated@@154)
 :pattern ( ($generated@@153 $generated@@156))
))))
(assert (forall (($generated@@157 T@U) ($generated@@158 T@U) ) (!  (=> (and (and (= (type $generated@@157) $generated@@145) (= (type $generated@@158) $generated@@145)) true) (= ($generated@@151 $generated@@157 $generated@@158)  (and (= ($generated@@152 $generated@@157) ($generated@@152 $generated@@158)) (= ($generated@@153 $generated@@157) ($generated@@153 $generated@@158)))))
 :pattern ( ($generated@@151 $generated@@157 $generated@@158))
)))
(assert  (and (forall (($generated@@161 T@U) ) (! (= (type ($generated@@159 $generated@@161)) $generated@@70)
 :pattern ( ($generated@@159 $generated@@161))
)) (= (type $generated@@160) $generated@@65)))
(assert (= ($generated@@159 $generated@@160) $generated@@64))
(assert (= ($generated@@159 $generated@@137) $generated@@64))
(assert (forall (($generated@@164 T@U) ) (! (= (type ($generated@@162 $generated@@164)) $generated@@65)
 :pattern ( ($generated@@162 $generated@@164))
)))
(assert (forall (($generated@@165 T@U) ($generated@@166 T@U) ) (!  (=> (and (and (= (type $generated@@165) ($generated@@77 $generated@@154 $generated@@2)) (= (type $generated@@166) $generated@@65)) ($generated@@141 $generated@@165 ($generated@@162 $generated@@166))) ($generated@@163 $generated@@165))
 :pattern ( ($generated@@141 $generated@@165 ($generated@@162 $generated@@166)))
)))
(assert (forall (($generated@@168 T@U) ) (! (= (type ($generated@@167 $generated@@168)) $generated@@65)
 :pattern ( ($generated@@167 $generated@@168))
)))
(assert (forall (($generated@@169 T@U) ) (!  (=> (= (type $generated@@169) $generated@@78) (= ($generated@@141 $generated@@169 $generated@@137)  (or (= $generated@@169 $generated@@138) (= ($generated@@167 $generated@@169) $generated@@137))))
 :pattern ( ($generated@@141 $generated@@169 $generated@@137))
)))
(assert  (and (and (and (and (and (and (and (forall (($generated@@176 T@T) ($generated@@177 T@T) ) (= ($generated@@1 ($generated@@172 $generated@@176 $generated@@177)) 16)) (forall (($generated@@178 T@T) ($generated@@179 T@T) ) (! (= ($generated@@173 ($generated@@172 $generated@@178 $generated@@179)) $generated@@178)
 :pattern ( ($generated@@172 $generated@@178 $generated@@179))
))) (forall (($generated@@180 T@T) ($generated@@181 T@T) ) (! (= ($generated@@174 ($generated@@172 $generated@@180 $generated@@181)) $generated@@181)
 :pattern ( ($generated@@172 $generated@@180 $generated@@181))
))) (forall (($generated@@182 T@U) ($generated@@183 T@U) ($generated@@184 T@U) ) (! (let (($generated@@185 ($generated@@174 (type $generated@@182))))
(= (type ($generated@@170 $generated@@182 $generated@@183 $generated@@184)) $generated@@185))
 :pattern ( ($generated@@170 $generated@@182 $generated@@183 $generated@@184))
))) (forall (($generated@@186 T@U) ($generated@@187 T@U) ($generated@@188 T@U) ($generated@@189 T@U) ) (! (let (($generated@@190 (type $generated@@189)))
(let (($generated@@191 (type $generated@@187)))
(= (type ($generated@@175 $generated@@186 $generated@@187 $generated@@188 $generated@@189)) ($generated@@172 $generated@@191 $generated@@190))))
 :pattern ( ($generated@@175 $generated@@186 $generated@@187 $generated@@188 $generated@@189))
))) (forall (($generated@@192 T@U) ($generated@@193 T@U) ($generated@@194 T@U) ($generated@@195 T@U) ) (! (let (($generated@@196 ($generated@@174 (type $generated@@192))))
 (=> (= (type $generated@@195) $generated@@196) (= ($generated@@170 ($generated@@175 $generated@@192 $generated@@193 $generated@@194 $generated@@195) $generated@@193 $generated@@194) $generated@@195)))
 :weight 0
))) (and (and (forall (($generated@@197 T@U) ($generated@@198 T@U) ($generated@@199 T@U) ($generated@@200 T@U) ($generated@@201 T@U) ($generated@@202 T@U) ) (!  (or (= $generated@@199 $generated@@201) (= ($generated@@170 ($generated@@175 $generated@@198 $generated@@199 $generated@@200 $generated@@197) $generated@@201 $generated@@202) ($generated@@170 $generated@@198 $generated@@201 $generated@@202)))
 :weight 0
)) (forall (($generated@@203 T@U) ($generated@@204 T@U) ($generated@@205 T@U) ($generated@@206 T@U) ($generated@@207 T@U) ($generated@@208 T@U) ) (!  (or (= $generated@@206 $generated@@208) (= ($generated@@170 ($generated@@175 $generated@@204 $generated@@205 $generated@@206 $generated@@203) $generated@@207 $generated@@208) ($generated@@170 $generated@@204 $generated@@207 $generated@@208)))
 :weight 0
))) (forall (($generated@@209 T@U) ($generated@@210 T@U) ($generated@@211 T@U) ($generated@@212 T@U) ($generated@@213 T@U) ($generated@@214 T@U) ) (!  (or true (= ($generated@@170 ($generated@@175 $generated@@210 $generated@@211 $generated@@212 $generated@@209) $generated@@213 $generated@@214) ($generated@@170 $generated@@210 $generated@@213 $generated@@214)))
 :weight 0
)))) (forall (($generated@@215 T@U) ($generated@@216 T@U) ($generated@@217 T@U) ($generated@@218 Bool) ) (! (= (type ($generated@@171 $generated@@215 $generated@@216 $generated@@217 $generated@@218)) ($generated@@172 $generated@@78 $generated@@4))
 :pattern ( ($generated@@171 $generated@@215 $generated@@216 $generated@@217 $generated@@218))
))))
(assert (forall (($generated@@219 T@U) ($generated@@220 T@U) ($generated@@221 T@U) ($generated@@222 Bool) ($generated@@223 T@U) ($generated@@224 T@U) ) (! (let (($generated@@225 ($generated@@68 (type $generated@@224))))
 (=> (and (and (and (and (= (type $generated@@219) $generated@@78) (= (type $generated@@220) ($generated@@77 $generated@@78 $generated@@79))) (= (type $generated@@221) ($generated@@67 $generated@@4))) (= (type $generated@@223) $generated@@78)) (= (type $generated@@224) ($generated@@67 $generated@@225))) (= ($generated@@0 ($generated@@170 ($generated@@171 $generated@@219 $generated@@220 $generated@@221 $generated@@222) $generated@@223 $generated@@224))  (=> (and (not (= $generated@@223 $generated@@219)) ($generated@@0 ($generated@@84 ($generated@@82 $generated@@220 $generated@@223) $generated@@221))) $generated@@222))))
 :pattern ( ($generated@@170 ($generated@@171 $generated@@219 $generated@@220 $generated@@221 $generated@@222) $generated@@223 $generated@@224))
)))
(assert (forall (($generated@@226 T@U) ($generated@@227 T@U) ) (!  (=> (and (= (type $generated@@226) $generated@@78) (= (type $generated@@227) ($generated@@77 $generated@@78 $generated@@79))) (= ($generated@@75 $generated@@226 $generated@@160 $generated@@227) ($generated@@75 $generated@@226 $generated@@137 $generated@@227)))
 :pattern ( ($generated@@75 $generated@@226 $generated@@160 $generated@@227))
)))
(assert (forall (($generated@@230 T@U) ($generated@@231 T@U) ) (! (= (type ($generated@@228 $generated@@230 $generated@@231)) $generated@@145)
 :pattern ( ($generated@@228 $generated@@230 $generated@@231))
)))
(assert (forall (($generated@@232 T@U) ($generated@@233 T@U) ($generated@@234 T@U) ($generated@@235 T@U) ) (!  (=> (and (and (and (= (type $generated@@232) $generated@@65) (= (type $generated@@233) $generated@@65)) (= (type $generated@@234) $generated@@154)) (= (type $generated@@235) $generated@@154)) (= ($generated@@141 ($generated@@228 $generated@@234 $generated@@235) ($generated@@144 $generated@@232 $generated@@233))  (and ($generated@@229 $generated@@234 $generated@@232) ($generated@@229 $generated@@235 $generated@@233))))
 :pattern ( ($generated@@141 ($generated@@228 $generated@@234 $generated@@235) ($generated@@144 $generated@@232 $generated@@233)))
)))
(assert (forall (($generated@@236 T@U) ($generated@@237 T@U) ) (!  (=> (and (= (type $generated@@236) $generated@@145) (= (type $generated@@237) $generated@@145)) (= ($generated@@151 $generated@@236 $generated@@237) (= $generated@@236 $generated@@237)))
 :pattern ( ($generated@@151 $generated@@236 $generated@@237))
)))
(assert (forall (($generated@@239 T@U) ) (! (= (type ($generated@@238 $generated@@239)) $generated@@65)
 :pattern ( ($generated@@238 $generated@@239))
)))
(assert (forall (($generated@@240 T@U) ($generated@@241 T@U) ) (!  (=> (and (= (type $generated@@240) ($generated@@77 $generated@@154 $generated@@4)) (= (type $generated@@241) $generated@@65)) (= ($generated@@141 $generated@@240 ($generated@@238 $generated@@241)) (forall (($generated@@242 T@U) ) (!  (=> (and (= (type $generated@@242) $generated@@154) ($generated@@0 ($generated@@82 $generated@@240 $generated@@242))) ($generated@@229 $generated@@242 $generated@@241))
 :pattern ( ($generated@@82 $generated@@240 $generated@@242))
))))
 :pattern ( ($generated@@141 $generated@@240 ($generated@@238 $generated@@241)))
)))
(assert (forall (($generated@@244 T@U) ) (! (= (type ($generated@@243 $generated@@244)) $generated@@65)
 :pattern ( ($generated@@243 $generated@@244))
)))
(assert (forall (($generated@@245 T@U) ($generated@@246 T@U) ) (!  (=> (and (= (type $generated@@245) ($generated@@77 $generated@@154 $generated@@4)) (= (type $generated@@246) $generated@@65)) (= ($generated@@141 $generated@@245 ($generated@@243 $generated@@246)) (forall (($generated@@247 T@U) ) (!  (=> (and (= (type $generated@@247) $generated@@154) ($generated@@0 ($generated@@82 $generated@@245 $generated@@247))) ($generated@@229 $generated@@247 $generated@@246))
 :pattern ( ($generated@@82 $generated@@245 $generated@@247))
))))
 :pattern ( ($generated@@141 $generated@@245 ($generated@@243 $generated@@246)))
)))
(assert (forall (($generated@@249 T@U) ) (! (let (($generated@@250 (type $generated@@249)))
(= (type ($generated@@248 $generated@@249)) $generated@@250))
 :pattern ( ($generated@@248 $generated@@249))
)))
(assert (forall (($generated@@251 T@U) ) (! (= ($generated@@248 $generated@@251) $generated@@251)
 :pattern ( ($generated@@248 $generated@@251))
)))
(assert (forall (($generated@@254 T@U) ($generated@@255 T@U) ($generated@@256 T@U) ($generated@@257 T@U) ($generated@@258 T@U) ) (!  (=> (and (and (and (and (and (= (type $generated@@254) $generated@@65) (= (type $generated@@255) $generated@@65)) (= (type $generated@@256) $generated@@154)) (= (type $generated@@257) $generated@@154)) (= (type $generated@@258) ($generated@@77 $generated@@78 $generated@@79))) ($generated@@252 $generated@@258)) (= ($generated@@75 ($generated@@228 $generated@@256 $generated@@257) ($generated@@144 $generated@@254 $generated@@255) $generated@@258)  (and ($generated@@253 $generated@@256 $generated@@254 $generated@@258) ($generated@@253 $generated@@257 $generated@@255 $generated@@258))))
 :pattern ( ($generated@@75 ($generated@@228 $generated@@256 $generated@@257) ($generated@@144 $generated@@254 $generated@@255) $generated@@258))
)))
(assert (forall (($generated@@260 T@U) ) (! (= (type ($generated@@259 $generated@@260)) $generated@@69)
 :pattern ( ($generated@@259 $generated@@260))
)))
(assert (forall (($generated@@261 T@U) ) (!  (=> (= (type $generated@@261) $generated@@145) (= ($generated@@143 $generated@@261) (= ($generated@@259 $generated@@261) $generated@@61)))
 :pattern ( ($generated@@143 $generated@@261))
)))
(assert (forall (($generated@@262 T@U) ) (!  (=> (and (= (type $generated@@262) $generated@@145) ($generated@@143 $generated@@262)) (exists (($generated@@263 T@U) ($generated@@264 T@U) ) (!  (and (and (= (type $generated@@263) $generated@@154) (= (type $generated@@264) $generated@@154)) (= $generated@@262 ($generated@@228 $generated@@263 $generated@@264)))
 :no-pattern (type $generated@@263)
 :no-pattern (type $generated@@264)
 :no-pattern ($generated $generated@@263)
 :no-pattern ($generated@@0 $generated@@263)
 :no-pattern ($generated $generated@@264)
 :no-pattern ($generated@@0 $generated@@264)
)))
 :pattern ( ($generated@@143 $generated@@262))
)))
(assert  (and (and (forall (($generated@@269 T@T) ) (= ($generated@@1 ($generated@@267 $generated@@269)) 17)) (forall (($generated@@270 T@T) ) (! (= ($generated@@268 ($generated@@267 $generated@@270)) $generated@@270)
 :pattern ( ($generated@@267 $generated@@270))
))) (forall (($generated@@271 T@T) ) (! (= (type ($generated@@265 $generated@@271)) ($generated@@267 $generated@@271))
 :pattern ( ($generated@@265 $generated@@271))
))))
(assert (forall (($generated@@272 T@T) ) (! (= ($generated@@266 ($generated@@265 $generated@@272)) 0)
 :pattern ( ($generated@@265 $generated@@272))
)))
(assert (forall (($generated@@274 T@U) ) (! (= (type ($generated@@273 $generated@@274)) $generated@@154)
 :pattern ( ($generated@@273 $generated@@274))
)))
(assert (forall (($generated@@275 T@U) ($generated@@276 T@U) ($generated@@277 T@U) ) (!  (=> (and (= (type $generated@@276) $generated@@65) (= (type $generated@@277) ($generated@@77 $generated@@78 $generated@@79))) (= ($generated@@253 ($generated@@273 $generated@@275) $generated@@276 $generated@@277) ($generated@@75 $generated@@275 $generated@@276 $generated@@277)))
 :pattern ( ($generated@@253 ($generated@@273 $generated@@275) $generated@@276 $generated@@277))
)))
(assert (forall (($generated@@278 T@U) ($generated@@279 T@U) ($generated@@280 T@U) ($generated@@281 T@U) ) (!  (=> (and (and (and (and (and (= (type $generated@@278) ($generated@@77 $generated@@78 $generated@@79)) (= (type $generated@@279) ($generated@@77 $generated@@78 $generated@@79))) (= (type $generated@@280) $generated@@154)) (= (type $generated@@281) $generated@@65)) ($generated@@133 $generated@@278 $generated@@279)) ($generated@@253 $generated@@280 $generated@@281 $generated@@278)) ($generated@@253 $generated@@280 $generated@@281 $generated@@279))
 :pattern ( ($generated@@133 $generated@@278 $generated@@279) ($generated@@253 $generated@@280 $generated@@281 $generated@@278))
)))
(assert (forall (($generated@@282 T@U) ($generated@@283 T@U) ($generated@@284 T@U) ($generated@@285 T@U) ) (!  (=> (and (and (and (and (= (type $generated@@282) ($generated@@77 $generated@@78 $generated@@79)) (= (type $generated@@283) ($generated@@77 $generated@@78 $generated@@79))) (= (type $generated@@285) $generated@@65)) ($generated@@133 $generated@@282 $generated@@283)) ($generated@@75 $generated@@284 $generated@@285 $generated@@282)) ($generated@@75 $generated@@284 $generated@@285 $generated@@283))
 :pattern ( ($generated@@133 $generated@@282 $generated@@283) ($generated@@75 $generated@@284 $generated@@285 $generated@@282))
)))
(assert (forall (($generated@@288 T@T) ) (! (= (type ($generated@@287 $generated@@288)) ($generated@@77 $generated@@288 $generated@@2))
 :pattern ( ($generated@@287 $generated@@288))
)))
(assert (forall (($generated@@289 T@U) ) (! (let (($generated@@290 ($generated@@80 (type $generated@@289))))
 (=> (= (type $generated@@289) ($generated@@77 $generated@@290 $generated@@2)) (and (= (= ($generated@@286 $generated@@289) 0) (= $generated@@289 ($generated@@287 $generated@@290))) (=> (not (= ($generated@@286 $generated@@289) 0)) (exists (($generated@@291 T@U) ) (!  (and (= (type $generated@@291) $generated@@290) (< 0 ($generated ($generated@@82 $generated@@289 $generated@@291))))
 :no-pattern (type $generated@@291)
 :no-pattern ($generated $generated@@291)
 :no-pattern ($generated@@0 $generated@@291)
))))))
 :pattern ( ($generated@@286 $generated@@289))
)))
(assert  (and (and (and (and (forall (($generated@@297 T@T) ($generated@@298 T@T) ) (= ($generated@@1 ($generated@@294 $generated@@297 $generated@@298)) 18)) (forall (($generated@@299 T@T) ($generated@@300 T@T) ) (! (= ($generated@@295 ($generated@@294 $generated@@299 $generated@@300)) $generated@@299)
 :pattern ( ($generated@@294 $generated@@299 $generated@@300))
))) (forall (($generated@@301 T@T) ($generated@@302 T@T) ) (! (= ($generated@@296 ($generated@@294 $generated@@301 $generated@@302)) $generated@@302)
 :pattern ( ($generated@@294 $generated@@301 $generated@@302))
))) (forall (($generated@@303 T@U) ) (! (let (($generated@@304 ($generated@@295 (type $generated@@303))))
(= (type ($generated@@292 $generated@@303)) ($generated@@77 $generated@@304 $generated@@4)))
 :pattern ( ($generated@@292 $generated@@303))
))) (forall (($generated@@305 T@T) ($generated@@306 T@T) ) (! (= (type ($generated@@293 $generated@@305 $generated@@306)) ($generated@@294 $generated@@305 $generated@@306))
 :pattern ( ($generated@@293 $generated@@305 $generated@@306))
))))
(assert (forall (($generated@@307 T@U) ($generated@@308 T@T) ) (! (let (($generated@@309 (type $generated@@307)))
 (not ($generated@@0 ($generated@@82 ($generated@@292 ($generated@@293 $generated@@309 $generated@@308)) $generated@@307))))
 :pattern ( (let (($generated@@309 (type $generated@@307)))
($generated@@82 ($generated@@292 ($generated@@293 $generated@@309 $generated@@308)) $generated@@307)))
)))
(assert  (and (and (and (and (forall (($generated@@315 T@T) ($generated@@316 T@T) ) (= ($generated@@1 ($generated@@312 $generated@@315 $generated@@316)) 19)) (forall (($generated@@317 T@T) ($generated@@318 T@T) ) (! (= ($generated@@313 ($generated@@312 $generated@@317 $generated@@318)) $generated@@317)
 :pattern ( ($generated@@312 $generated@@317 $generated@@318))
))) (forall (($generated@@319 T@T) ($generated@@320 T@T) ) (! (= ($generated@@314 ($generated@@312 $generated@@319 $generated@@320)) $generated@@320)
 :pattern ( ($generated@@312 $generated@@319 $generated@@320))
))) (forall (($generated@@321 T@U) ) (! (let (($generated@@322 ($generated@@313 (type $generated@@321))))
(= (type ($generated@@310 $generated@@321)) ($generated@@77 $generated@@322 $generated@@4)))
 :pattern ( ($generated@@310 $generated@@321))
))) (forall (($generated@@323 T@T) ($generated@@324 T@T) ) (! (= (type ($generated@@311 $generated@@323 $generated@@324)) ($generated@@312 $generated@@323 $generated@@324))
 :pattern ( ($generated@@311 $generated@@323 $generated@@324))
))))
(assert (forall (($generated@@325 T@U) ($generated@@326 T@T) ) (! (let (($generated@@327 (type $generated@@325)))
 (not ($generated@@0 ($generated@@82 ($generated@@310 ($generated@@311 $generated@@327 $generated@@326)) $generated@@325))))
 :pattern ( (let (($generated@@327 (type $generated@@325)))
($generated@@82 ($generated@@310 ($generated@@311 $generated@@327 $generated@@326)) $generated@@325)))
)))
(assert (forall (($generated@@328 T@U) ) (! (let (($generated@@329 ($generated@@80 (type $generated@@328))))
 (=> (= (type $generated@@328) ($generated@@77 $generated@@329 $generated@@2)) (= ($generated@@163 $generated@@328) (forall (($generated@@330 T@U) ) (!  (=> (= (type $generated@@330) $generated@@329) (and (<= 0 ($generated ($generated@@82 $generated@@328 $generated@@330))) (<= ($generated ($generated@@82 $generated@@328 $generated@@330)) ($generated@@286 $generated@@328))))
 :pattern ( ($generated@@82 $generated@@328 $generated@@330))
)))))
 :pattern ( ($generated@@163 $generated@@328))
)))
(assert (forall (($generated@@332 T@T) ($generated@@333 T@U) ) (! (= (type ($generated@@331 $generated@@332 $generated@@333)) $generated@@332)
 :pattern ( ($generated@@331 $generated@@332 $generated@@333))
)))
(assert (forall (($generated@@334 T@U) ) (!  (=> (and (= (type $generated@@334) $generated@@154) ($generated@@229 $generated@@334 $generated@@160)) (and (= ($generated@@273 ($generated@@331 $generated@@78 $generated@@334)) $generated@@334) ($generated@@141 ($generated@@331 $generated@@78 $generated@@334) $generated@@160)))
 :pattern ( ($generated@@229 $generated@@334 $generated@@160))
)))
(assert (forall (($generated@@335 T@U) ) (!  (=> (and (= (type $generated@@335) $generated@@154) ($generated@@229 $generated@@335 $generated@@137)) (and (= ($generated@@273 ($generated@@331 $generated@@78 $generated@@335)) $generated@@335) ($generated@@141 ($generated@@331 $generated@@78 $generated@@335) $generated@@137)))
 :pattern ( ($generated@@229 $generated@@335 $generated@@137))
)))
(assert (forall (($generated@@336 T@U) ) (!  (=> (= (type $generated@@336) $generated@@78) (= ($generated@@141 $generated@@336 $generated@@160)  (and ($generated@@141 $generated@@336 $generated@@137) (not (= $generated@@336 $generated@@138)))))
 :pattern ( ($generated@@141 $generated@@336 $generated@@160))
)))
(assert (forall (($generated@@337 T@U) ) (! (let (($generated@@338 ($generated@@296 (type $generated@@337))))
(let (($generated@@339 ($generated@@295 (type $generated@@337))))
 (=> (= (type $generated@@337) ($generated@@294 $generated@@339 $generated@@338)) (or (= $generated@@337 ($generated@@293 $generated@@339 $generated@@338)) (exists (($generated@@340 T@U) ) (!  (and (= (type $generated@@340) $generated@@339) ($generated@@0 ($generated@@82 ($generated@@292 $generated@@337) $generated@@340)))
 :no-pattern (type $generated@@340)
 :no-pattern ($generated $generated@@340)
 :no-pattern ($generated@@0 $generated@@340)
))))))
 :pattern ( ($generated@@292 $generated@@337))
)))
(assert (forall (($generated@@342 T@U) ) (! (let (($generated@@343 ($generated@@296 (type $generated@@342))))
(= (type ($generated@@341 $generated@@342)) ($generated@@77 $generated@@343 $generated@@4)))
 :pattern ( ($generated@@341 $generated@@342))
)))
(assert (forall (($generated@@344 T@U) ) (! (let (($generated@@345 ($generated@@296 (type $generated@@344))))
(let (($generated@@346 ($generated@@295 (type $generated@@344))))
 (=> (= (type $generated@@344) ($generated@@294 $generated@@346 $generated@@345)) (or (= $generated@@344 ($generated@@293 $generated@@346 $generated@@345)) (exists (($generated@@347 T@U) ) (!  (and (= (type $generated@@347) $generated@@345) ($generated@@0 ($generated@@82 ($generated@@341 $generated@@344) $generated@@347)))
 :no-pattern (type $generated@@347)
 :no-pattern ($generated $generated@@347)
 :no-pattern ($generated@@0 $generated@@347)
))))))
 :pattern ( ($generated@@341 $generated@@344))
)))
(assert (forall (($generated@@348 T@U) ) (! (let (($generated@@349 ($generated@@314 (type $generated@@348))))
(let (($generated@@350 ($generated@@313 (type $generated@@348))))
 (=> (= (type $generated@@348) ($generated@@312 $generated@@350 $generated@@349)) (or (= $generated@@348 ($generated@@311 $generated@@350 $generated@@349)) (exists (($generated@@351 T@U) ) (!  (and (= (type $generated@@351) $generated@@350) ($generated@@0 ($generated@@82 ($generated@@310 $generated@@348) $generated@@351)))
 :no-pattern (type $generated@@351)
 :no-pattern ($generated $generated@@351)
 :no-pattern ($generated@@0 $generated@@351)
))))))
 :pattern ( ($generated@@310 $generated@@348))
)))
(assert (forall (($generated@@353 T@U) ) (! (let (($generated@@354 ($generated@@314 (type $generated@@353))))
(= (type ($generated@@352 $generated@@353)) ($generated@@77 $generated@@354 $generated@@4)))
 :pattern ( ($generated@@352 $generated@@353))
)))
(assert (forall (($generated@@355 T@U) ) (! (let (($generated@@356 ($generated@@314 (type $generated@@355))))
(let (($generated@@357 ($generated@@313 (type $generated@@355))))
 (=> (= (type $generated@@355) ($generated@@312 $generated@@357 $generated@@356)) (or (= $generated@@355 ($generated@@311 $generated@@357 $generated@@356)) (exists (($generated@@358 T@U) ) (!  (and (= (type $generated@@358) $generated@@356) ($generated@@0 ($generated@@82 ($generated@@352 $generated@@355) $generated@@358)))
 :no-pattern (type $generated@@358)
 :no-pattern ($generated $generated@@358)
 :no-pattern ($generated@@0 $generated@@358)
))))))
 :pattern ( ($generated@@352 $generated@@355))
)))
(assert (forall (($generated@@359 T@U) ($generated@@360 T@U) ) (!  (=> (and (= (type $generated@@359) ($generated@@77 $generated@@154 $generated@@2)) (= (type $generated@@360) $generated@@65)) (= ($generated@@141 $generated@@359 ($generated@@162 $generated@@360)) (forall (($generated@@361 T@U) ) (!  (=> (and (= (type $generated@@361) $generated@@154) (< 0 ($generated ($generated@@82 $generated@@359 $generated@@361)))) ($generated@@229 $generated@@361 $generated@@360))
 :pattern ( ($generated@@82 $generated@@359 $generated@@361))
))))
 :pattern ( ($generated@@141 $generated@@359 ($generated@@162 $generated@@360)))
)))
(assert (forall (($generated@@362 T@U) ($generated@@363 T@U) ($generated@@364 T@U) ) (!  (=> (and (and (= (type $generated@@362) ($generated@@77 $generated@@154 $generated@@4)) (= (type $generated@@363) $generated@@65)) (= (type $generated@@364) ($generated@@77 $generated@@78 $generated@@79))) (= ($generated@@75 $generated@@362 ($generated@@238 $generated@@363) $generated@@364) (forall (($generated@@365 T@U) ) (!  (=> (and (= (type $generated@@365) $generated@@154) ($generated@@0 ($generated@@82 $generated@@362 $generated@@365))) ($generated@@253 $generated@@365 $generated@@363 $generated@@364))
 :pattern ( ($generated@@82 $generated@@362 $generated@@365))
))))
 :pattern ( ($generated@@75 $generated@@362 ($generated@@238 $generated@@363) $generated@@364))
)))
(assert (forall (($generated@@366 T@U) ($generated@@367 T@U) ($generated@@368 T@U) ) (!  (=> (and (and (= (type $generated@@366) ($generated@@77 $generated@@154 $generated@@4)) (= (type $generated@@367) $generated@@65)) (= (type $generated@@368) ($generated@@77 $generated@@78 $generated@@79))) (= ($generated@@75 $generated@@366 ($generated@@243 $generated@@367) $generated@@368) (forall (($generated@@369 T@U) ) (!  (=> (and (= (type $generated@@369) $generated@@154) ($generated@@0 ($generated@@82 $generated@@366 $generated@@369))) ($generated@@253 $generated@@369 $generated@@367 $generated@@368))
 :pattern ( ($generated@@82 $generated@@366 $generated@@369))
))))
 :pattern ( ($generated@@75 $generated@@366 ($generated@@243 $generated@@367) $generated@@368))
)))
(assert (forall (($generated@@370 T@U) ) (! (let (($generated@@371 (type $generated@@370)))
(= ($generated ($generated@@82 ($generated@@287 $generated@@371) $generated@@370)) 0))
 :pattern ( (let (($generated@@371 (type $generated@@370)))
($generated@@82 ($generated@@287 $generated@@371) $generated@@370)))
)))
(assert  (and (forall (($generated@@374 T@U) ) (! (= (type ($generated@@372 $generated@@374)) ($generated@@77 $generated@@154 $generated@@4))
 :pattern ( ($generated@@372 $generated@@374))
)) (forall (($generated@@375 T@U) ) (! (let (($generated@@376 ($generated@@296 (type $generated@@375))))
(let (($generated@@377 ($generated@@295 (type $generated@@375))))
(= (type ($generated@@373 $generated@@375)) ($generated@@77 $generated@@377 $generated@@376))))
 :pattern ( ($generated@@373 $generated@@375))
))))
(assert (forall (($generated@@378 T@U) ($generated@@379 T@U) ) (!  (=> (and (= (type $generated@@378) ($generated@@294 $generated@@154 $generated@@154)) (= (type $generated@@379) $generated@@154)) (= ($generated@@0 ($generated@@82 ($generated@@372 $generated@@378) $generated@@379))  (and ($generated@@0 ($generated@@82 ($generated@@292 $generated@@378) ($generated@@152 ($generated@@331 $generated@@145 $generated@@379)))) (= ($generated@@82 ($generated@@373 $generated@@378) ($generated@@152 ($generated@@331 $generated@@145 $generated@@379))) ($generated@@153 ($generated@@331 $generated@@145 $generated@@379))))))
 :pattern ( ($generated@@82 ($generated@@372 $generated@@378) $generated@@379))
)))
(assert  (and (forall (($generated@@382 T@U) ) (! (= (type ($generated@@380 $generated@@382)) ($generated@@77 $generated@@154 $generated@@4))
 :pattern ( ($generated@@380 $generated@@382))
)) (forall (($generated@@383 T@U) ) (! (let (($generated@@384 ($generated@@314 (type $generated@@383))))
(let (($generated@@385 ($generated@@313 (type $generated@@383))))
(= (type ($generated@@381 $generated@@383)) ($generated@@77 $generated@@385 $generated@@384))))
 :pattern ( ($generated@@381 $generated@@383))
))))
(assert (forall (($generated@@386 T@U) ($generated@@387 T@U) ) (!  (=> (and (= (type $generated@@386) ($generated@@312 $generated@@154 $generated@@154)) (= (type $generated@@387) $generated@@154)) (= ($generated@@0 ($generated@@82 ($generated@@380 $generated@@386) $generated@@387))  (and ($generated@@0 ($generated@@82 ($generated@@310 $generated@@386) ($generated@@152 ($generated@@331 $generated@@145 $generated@@387)))) (= ($generated@@82 ($generated@@381 $generated@@386) ($generated@@152 ($generated@@331 $generated@@145 $generated@@387))) ($generated@@153 ($generated@@331 $generated@@145 $generated@@387))))))
 :pattern ( ($generated@@82 ($generated@@380 $generated@@386) $generated@@387))
)))
(assert (forall (($generated@@388 T@U) ($generated@@389 T@U) ) (! (let (($generated@@390 (type $generated@@389)))
(let (($generated@@391 ($generated@@295 (type $generated@@388))))
 (=> (= (type $generated@@388) ($generated@@294 $generated@@391 $generated@@390)) (= ($generated@@0 ($generated@@82 ($generated@@341 $generated@@388) $generated@@389)) (exists (($generated@@392 T@U) ) (!  (and (= (type $generated@@392) $generated@@391) (and ($generated@@0 ($generated@@82 ($generated@@292 $generated@@388) $generated@@392)) (= $generated@@389 ($generated@@82 ($generated@@373 $generated@@388) $generated@@392))))
 :pattern ( ($generated@@82 ($generated@@292 $generated@@388) $generated@@392))
 :pattern ( ($generated@@82 ($generated@@373 $generated@@388) $generated@@392))
))))))
 :pattern ( ($generated@@82 ($generated@@341 $generated@@388) $generated@@389))
)))
(assert (forall (($generated@@393 T@U) ($generated@@394 T@U) ) (! (let (($generated@@395 (type $generated@@394)))
(let (($generated@@396 ($generated@@313 (type $generated@@393))))
 (=> (= (type $generated@@393) ($generated@@312 $generated@@396 $generated@@395)) (= ($generated@@0 ($generated@@82 ($generated@@352 $generated@@393) $generated@@394)) (exists (($generated@@397 T@U) ) (!  (and (= (type $generated@@397) $generated@@396) (and ($generated@@0 ($generated@@82 ($generated@@310 $generated@@393) $generated@@397)) (= $generated@@394 ($generated@@82 ($generated@@381 $generated@@393) $generated@@397))))
 :pattern ( ($generated@@82 ($generated@@310 $generated@@393) $generated@@397))
 :pattern ( ($generated@@82 ($generated@@381 $generated@@393) $generated@@397))
))))))
 :pattern ( ($generated@@82 ($generated@@352 $generated@@393) $generated@@394))
)))
(assert (forall (($generated@@399 T@U) ($generated@@400 T@U) ) (! (= (type ($generated@@398 $generated@@399 $generated@@400)) $generated@@65)
 :pattern ( ($generated@@398 $generated@@399 $generated@@400))
)))
(assert (forall (($generated@@401 T@U) ($generated@@402 T@U) ($generated@@403 T@U) ($generated@@404 T@U) ) (!  (=> (and (and (and (= (type $generated@@401) ($generated@@294 $generated@@154 $generated@@154)) (= (type $generated@@402) $generated@@65)) (= (type $generated@@403) $generated@@65)) (= (type $generated@@404) ($generated@@77 $generated@@78 $generated@@79))) (= ($generated@@75 $generated@@401 ($generated@@398 $generated@@402 $generated@@403) $generated@@404) (forall (($generated@@405 T@U) ) (!  (=> (and (= (type $generated@@405) $generated@@154) ($generated@@0 ($generated@@82 ($generated@@292 $generated@@401) $generated@@405))) (and ($generated@@253 ($generated@@82 ($generated@@373 $generated@@401) $generated@@405) $generated@@403 $generated@@404) ($generated@@253 $generated@@405 $generated@@402 $generated@@404)))
 :pattern ( ($generated@@82 ($generated@@373 $generated@@401) $generated@@405))
 :pattern ( ($generated@@82 ($generated@@292 $generated@@401) $generated@@405))
))))
 :pattern ( ($generated@@75 $generated@@401 ($generated@@398 $generated@@402 $generated@@403) $generated@@404))
)))
(assert (forall (($generated@@407 T@U) ($generated@@408 T@U) ) (! (= (type ($generated@@406 $generated@@407 $generated@@408)) $generated@@65)
 :pattern ( ($generated@@406 $generated@@407 $generated@@408))
)))
(assert (forall (($generated@@409 T@U) ($generated@@410 T@U) ($generated@@411 T@U) ($generated@@412 T@U) ) (!  (=> (and (and (and (= (type $generated@@409) ($generated@@312 $generated@@154 $generated@@154)) (= (type $generated@@410) $generated@@65)) (= (type $generated@@411) $generated@@65)) (= (type $generated@@412) ($generated@@77 $generated@@78 $generated@@79))) (= ($generated@@75 $generated@@409 ($generated@@406 $generated@@410 $generated@@411) $generated@@412) (forall (($generated@@413 T@U) ) (!  (=> (and (= (type $generated@@413) $generated@@154) ($generated@@0 ($generated@@82 ($generated@@310 $generated@@409) $generated@@413))) (and ($generated@@253 ($generated@@82 ($generated@@381 $generated@@409) $generated@@413) $generated@@411 $generated@@412) ($generated@@253 $generated@@413 $generated@@410 $generated@@412)))
 :pattern ( ($generated@@82 ($generated@@381 $generated@@409) $generated@@413))
 :pattern ( ($generated@@82 ($generated@@310 $generated@@409) $generated@@413))
))))
 :pattern ( ($generated@@75 $generated@@409 ($generated@@406 $generated@@410 $generated@@411) $generated@@412))
)))
(assert (forall (($generated@@414 T@U) ($generated@@415 T@U) ($generated@@416 T@U) ) (!  (=> (and (and (and (and (= (type $generated@@414) ($generated@@77 $generated@@78 $generated@@79)) (= (type $generated@@415) ($generated@@77 $generated@@78 $generated@@79))) (= (type $generated@@416) ($generated@@77 $generated@@78 $generated@@79))) (not (= $generated@@414 $generated@@416))) (and ($generated@@133 $generated@@414 $generated@@415) ($generated@@133 $generated@@415 $generated@@416))) ($generated@@133 $generated@@414 $generated@@416))
 :pattern ( ($generated@@133 $generated@@414 $generated@@415) ($generated@@133 $generated@@415 $generated@@416))
)))
(assert (forall (($generated@@418 T@T) ) (! (= (type ($generated@@417 $generated@@418)) ($generated@@77 $generated@@418 $generated@@4))
 :pattern ( ($generated@@417 $generated@@418))
)))
(assert (forall (($generated@@419 T@U) ) (! (let (($generated@@420 ($generated@@314 (type $generated@@419))))
(let (($generated@@421 ($generated@@313 (type $generated@@419))))
 (=> (= (type $generated@@419) ($generated@@312 $generated@@421 $generated@@420)) (= (= $generated@@419 ($generated@@311 $generated@@421 $generated@@420)) (= ($generated@@310 $generated@@419) ($generated@@417 $generated@@421))))))
 :pattern ( ($generated@@310 $generated@@419))
)))
(assert (forall (($generated@@422 T@U) ) (! (let (($generated@@423 ($generated@@314 (type $generated@@422))))
(let (($generated@@424 ($generated@@313 (type $generated@@422))))
 (=> (= (type $generated@@422) ($generated@@312 $generated@@424 $generated@@423)) (= (= $generated@@422 ($generated@@311 $generated@@424 $generated@@423)) (= ($generated@@352 $generated@@422) ($generated@@417 $generated@@423))))))
 :pattern ( ($generated@@352 $generated@@422))
)))
(assert (forall (($generated@@425 T@U) ) (! (let (($generated@@426 ($generated@@314 (type $generated@@425))))
(let (($generated@@427 ($generated@@313 (type $generated@@425))))
 (=> (= (type $generated@@425) ($generated@@312 $generated@@427 $generated@@426)) (= (= $generated@@425 ($generated@@311 $generated@@427 $generated@@426)) (= ($generated@@380 $generated@@425) ($generated@@417 $generated@@154))))))
 :pattern ( ($generated@@380 $generated@@425))
)))
(assert (forall (($generated@@428 T@U) ) (! (let (($generated@@429 ($generated@@296 (type $generated@@428))))
(let (($generated@@430 ($generated@@295 (type $generated@@428))))
 (=> (= (type $generated@@428) ($generated@@294 $generated@@430 $generated@@429)) (or (= $generated@@428 ($generated@@293 $generated@@430 $generated@@429)) (exists (($generated@@431 T@U) ($generated@@432 T@U) ) (!  (and (and (= (type $generated@@431) $generated@@154) (= (type $generated@@432) $generated@@154)) ($generated@@0 ($generated@@82 ($generated@@372 $generated@@428) ($generated@@273 ($generated@@228 $generated@@431 $generated@@432)))))
 :no-pattern (type $generated@@431)
 :no-pattern (type $generated@@432)
 :no-pattern ($generated $generated@@431)
 :no-pattern ($generated@@0 $generated@@431)
 :no-pattern ($generated $generated@@432)
 :no-pattern ($generated@@0 $generated@@432)
))))))
 :pattern ( ($generated@@372 $generated@@428))
)))
(assert (forall (($generated@@433 T@U) ) (! (let (($generated@@434 ($generated@@314 (type $generated@@433))))
(let (($generated@@435 ($generated@@313 (type $generated@@433))))
 (=> (= (type $generated@@433) ($generated@@312 $generated@@435 $generated@@434)) (or (= $generated@@433 ($generated@@311 $generated@@435 $generated@@434)) (exists (($generated@@436 T@U) ($generated@@437 T@U) ) (!  (and (and (= (type $generated@@436) $generated@@154) (= (type $generated@@437) $generated@@154)) ($generated@@0 ($generated@@82 ($generated@@380 $generated@@433) ($generated@@273 ($generated@@228 $generated@@436 $generated@@437)))))
 :no-pattern (type $generated@@436)
 :no-pattern (type $generated@@437)
 :no-pattern ($generated $generated@@436)
 :no-pattern ($generated@@0 $generated@@436)
 :no-pattern ($generated $generated@@437)
 :no-pattern ($generated@@0 $generated@@437)
))))))
 :pattern ( ($generated@@380 $generated@@433))
)))
(assert (forall (($generated@@438 T@U) ) (!  (=> (and (= (type $generated@@438) $generated@@154) ($generated@@229 $generated@@438 $generated@@46)) (and (= ($generated@@273 ($generated@@331 $generated@@2 $generated@@438)) $generated@@438) ($generated@@141 ($generated@@331 $generated@@2 $generated@@438) $generated@@46)))
 :pattern ( ($generated@@229 $generated@@438 $generated@@46))
)))
(assert (forall (($generated@@439 T@U) ) (!  (=> (and (= (type $generated@@439) $generated@@154) ($generated@@229 $generated@@439 $generated@@47)) (and (= ($generated@@273 ($generated@@331 $generated@@3 $generated@@439)) $generated@@439) ($generated@@141 ($generated@@331 $generated@@3 $generated@@439) $generated@@47)))
 :pattern ( ($generated@@229 $generated@@439 $generated@@47))
)))
(assert (forall (($generated@@440 T@U) ) (!  (=> (and (= (type $generated@@440) $generated@@154) ($generated@@229 $generated@@440 $generated@@44)) (and (= ($generated@@273 ($generated@@331 $generated@@4 $generated@@440)) $generated@@440) ($generated@@141 ($generated@@331 $generated@@4 $generated@@440) $generated@@44)))
 :pattern ( ($generated@@229 $generated@@440 $generated@@44))
)))
(assert (= ($generated@@1 $generated@@441) 20))
(assert (forall (($generated@@442 T@U) ) (!  (=> (and (= (type $generated@@442) $generated@@154) ($generated@@229 $generated@@442 $generated@@45)) (and (= ($generated@@273 ($generated@@331 $generated@@441 $generated@@442)) $generated@@442) ($generated@@141 ($generated@@331 $generated@@441 $generated@@442) $generated@@45)))
 :pattern ( ($generated@@229 $generated@@442 $generated@@45))
)))
(assert (forall (($generated@@443 T@U) ($generated@@444 T@U) ) (!  (=> (= (type $generated@@444) $generated@@65) (= ($generated@@229 ($generated@@273 $generated@@443) $generated@@444) ($generated@@141 $generated@@443 $generated@@444)))
 :pattern ( ($generated@@229 ($generated@@273 $generated@@443) $generated@@444))
)))
(assert (forall (($generated@@445 T@U) ) (! (let (($generated@@446 ($generated@@80 (type $generated@@445))))
 (=> (= (type $generated@@445) ($generated@@77 $generated@@446 $generated@@2)) (<= 0 ($generated@@286 $generated@@445))))
 :pattern ( ($generated@@286 $generated@@445))
)))
(assert (forall (($generated@@447 T@U) ) (! (let (($generated@@448 ($generated@@268 (type $generated@@447))))
 (=> (= (type $generated@@447) ($generated@@267 $generated@@448)) (<= 0 ($generated@@266 $generated@@447))))
 :pattern ( ($generated@@266 $generated@@447))
)))
(assert (forall (($generated@@450 T@U) ) (! (= (type ($generated@@449 $generated@@450)) $generated@@65)
 :pattern ( ($generated@@449 $generated@@450))
)))
(assert (forall (($generated@@451 T@U) ($generated@@452 T@U) ) (!  (=> (and (= (type $generated@@451) $generated@@65) (= (type $generated@@452) $generated@@65)) (= ($generated@@449 ($generated@@398 $generated@@451 $generated@@452)) $generated@@451))
 :pattern ( ($generated@@398 $generated@@451 $generated@@452))
)))
(assert (forall (($generated@@454 T@U) ) (! (= (type ($generated@@453 $generated@@454)) $generated@@65)
 :pattern ( ($generated@@453 $generated@@454))
)))
(assert (forall (($generated@@455 T@U) ($generated@@456 T@U) ) (!  (=> (and (= (type $generated@@455) $generated@@65) (= (type $generated@@456) $generated@@65)) (= ($generated@@453 ($generated@@398 $generated@@455 $generated@@456)) $generated@@456))
 :pattern ( ($generated@@398 $generated@@455 $generated@@456))
)))
(assert (forall (($generated@@457 T@U) ($generated@@458 T@U) ) (!  (=> (and (= (type $generated@@457) $generated@@65) (= (type $generated@@458) $generated@@65)) (= ($generated@@73 ($generated@@398 $generated@@457 $generated@@458)) $generated@@58))
 :pattern ( ($generated@@398 $generated@@457 $generated@@458))
)))
(assert (forall (($generated@@460 T@U) ) (! (= (type ($generated@@459 $generated@@460)) $generated@@65)
 :pattern ( ($generated@@459 $generated@@460))
)))
(assert (forall (($generated@@461 T@U) ($generated@@462 T@U) ) (!  (=> (and (= (type $generated@@461) $generated@@65) (= (type $generated@@462) $generated@@65)) (= ($generated@@459 ($generated@@406 $generated@@461 $generated@@462)) $generated@@461))
 :pattern ( ($generated@@406 $generated@@461 $generated@@462))
)))
(assert (forall (($generated@@464 T@U) ) (! (= (type ($generated@@463 $generated@@464)) $generated@@65)
 :pattern ( ($generated@@463 $generated@@464))
)))
(assert (forall (($generated@@465 T@U) ($generated@@466 T@U) ) (!  (=> (and (= (type $generated@@465) $generated@@65) (= (type $generated@@466) $generated@@65)) (= ($generated@@463 ($generated@@406 $generated@@465 $generated@@466)) $generated@@466))
 :pattern ( ($generated@@406 $generated@@465 $generated@@466))
)))
(assert (forall (($generated@@467 T@U) ($generated@@468 T@U) ) (!  (=> (and (= (type $generated@@467) $generated@@65) (= (type $generated@@468) $generated@@65)) (= ($generated@@73 ($generated@@406 $generated@@467 $generated@@468)) $generated@@59))
 :pattern ( ($generated@@406 $generated@@467 $generated@@468))
)))
(assert (forall (($generated@@469 T@U) ($generated@@470 T@U) ) (!  (=> (and (= (type $generated@@469) $generated@@154) (= (type $generated@@470) $generated@@154)) (= ($generated@@259 ($generated@@228 $generated@@469 $generated@@470)) $generated@@61))
 :pattern ( ($generated@@228 $generated@@469 $generated@@470))
)))
(assert (forall (($generated@@472 T@U) ) (! (= (type ($generated@@471 $generated@@472)) $generated@@65)
 :pattern ( ($generated@@471 $generated@@472))
)))
(assert (forall (($generated@@473 T@U) ($generated@@474 T@U) ) (!  (=> (and (= (type $generated@@473) $generated@@65) (= (type $generated@@474) $generated@@65)) (= ($generated@@471 ($generated@@144 $generated@@473 $generated@@474)) $generated@@473))
 :pattern ( ($generated@@144 $generated@@473 $generated@@474))
)))
(assert (forall (($generated@@476 T@U) ) (! (= (type ($generated@@475 $generated@@476)) $generated@@65)
 :pattern ( ($generated@@475 $generated@@476))
)))
(assert (forall (($generated@@477 T@U) ($generated@@478 T@U) ) (!  (=> (and (= (type $generated@@477) $generated@@65) (= (type $generated@@478) $generated@@65)) (= ($generated@@475 ($generated@@144 $generated@@477 $generated@@478)) $generated@@478))
 :pattern ( ($generated@@144 $generated@@477 $generated@@478))
)))
(assert (forall (($generated@@479 T@U) ($generated@@480 T@U) ) (!  (=> (and (= (type $generated@@479) $generated@@154) (= (type $generated@@480) $generated@@154)) (= ($generated@@152 ($generated@@228 $generated@@479 $generated@@480)) $generated@@479))
 :pattern ( ($generated@@228 $generated@@479 $generated@@480))
)))
(assert (forall (($generated@@481 T@U) ($generated@@482 T@U) ) (!  (=> (and (= (type $generated@@481) $generated@@154) (= (type $generated@@482) $generated@@154)) (= ($generated@@153 ($generated@@228 $generated@@481 $generated@@482)) $generated@@482))
 :pattern ( ($generated@@228 $generated@@481 $generated@@482))
)))
(assert  (and (forall (($generated@@485 T@U) ) (! (= (type ($generated@@483 $generated@@485)) $generated@@65)
 :pattern ( ($generated@@483 $generated@@485))
)) (forall (($generated@@486 T@U) ($generated@@487 Int) ) (! (let (($generated@@488 ($generated@@268 (type $generated@@486))))
(= (type ($generated@@484 $generated@@486 $generated@@487)) $generated@@488))
 :pattern ( ($generated@@484 $generated@@486 $generated@@487))
))))
(assert (forall (($generated@@489 T@U) ($generated@@490 T@U) ($generated@@491 T@U) ) (!  (=> (and (and (= (type $generated@@489) ($generated@@267 $generated@@154)) (= (type $generated@@490) $generated@@65)) (= (type $generated@@491) ($generated@@77 $generated@@78 $generated@@79))) (= ($generated@@75 $generated@@489 ($generated@@483 $generated@@490) $generated@@491) (forall (($generated@@492 Int) ) (!  (=> (and (<= 0 $generated@@492) (< $generated@@492 ($generated@@266 $generated@@489))) ($generated@@253 ($generated@@484 $generated@@489 $generated@@492) $generated@@490 $generated@@491))
 :pattern ( ($generated@@484 $generated@@489 $generated@@492))
))))
 :pattern ( ($generated@@75 $generated@@489 ($generated@@483 $generated@@490) $generated@@491))
)))
(assert (forall (($generated@@494 Int) ) (! (= ($generated@@493 ($generated@@76 $generated@@494)) $generated@@494)
 :pattern ( ($generated@@76 $generated@@494))
)))
(assert (forall (($generated@@496 T@U) ) (! (= (type ($generated@@495 $generated@@496)) $generated@@65)
 :pattern ( ($generated@@495 $generated@@496))
)))
(assert (forall (($generated@@497 T@U) ) (!  (=> (= (type $generated@@497) $generated@@65) (= ($generated@@495 ($generated@@238 $generated@@497)) $generated@@497))
 :pattern ( ($generated@@238 $generated@@497))
)))
(assert (forall (($generated@@498 T@U) ) (!  (=> (= (type $generated@@498) $generated@@65) (= ($generated@@73 ($generated@@238 $generated@@498)) $generated@@54))
 :pattern ( ($generated@@238 $generated@@498))
)))
(assert (forall (($generated@@500 T@U) ) (! (= (type ($generated@@499 $generated@@500)) $generated@@65)
 :pattern ( ($generated@@499 $generated@@500))
)))
(assert (forall (($generated@@501 T@U) ) (!  (=> (= (type $generated@@501) $generated@@65) (= ($generated@@499 ($generated@@243 $generated@@501)) $generated@@501))
 :pattern ( ($generated@@243 $generated@@501))
)))
(assert (forall (($generated@@502 T@U) ) (!  (=> (= (type $generated@@502) $generated@@65) (= ($generated@@73 ($generated@@243 $generated@@502)) $generated@@55))
 :pattern ( ($generated@@243 $generated@@502))
)))
(assert (forall (($generated@@504 T@U) ) (! (= (type ($generated@@503 $generated@@504)) $generated@@65)
 :pattern ( ($generated@@503 $generated@@504))
)))
(assert (forall (($generated@@505 T@U) ) (!  (=> (= (type $generated@@505) $generated@@65) (= ($generated@@503 ($generated@@162 $generated@@505)) $generated@@505))
 :pattern ( ($generated@@162 $generated@@505))
)))
(assert (forall (($generated@@506 T@U) ) (!  (=> (= (type $generated@@506) $generated@@65) (= ($generated@@73 ($generated@@162 $generated@@506)) $generated@@56))
 :pattern ( ($generated@@162 $generated@@506))
)))
(assert (forall (($generated@@508 T@U) ) (! (= (type ($generated@@507 $generated@@508)) $generated@@65)
 :pattern ( ($generated@@507 $generated@@508))
)))
(assert (forall (($generated@@509 T@U) ) (!  (=> (= (type $generated@@509) $generated@@65) (= ($generated@@507 ($generated@@483 $generated@@509)) $generated@@509))
 :pattern ( ($generated@@483 $generated@@509))
)))
(assert (forall (($generated@@510 T@U) ) (!  (=> (= (type $generated@@510) $generated@@65) (= ($generated@@73 ($generated@@483 $generated@@510)) $generated@@57))
 :pattern ( ($generated@@483 $generated@@510))
)))
(assert (forall (($generated@@511 T@U) ) (! (let (($generated@@512 (type $generated@@511)))
(= ($generated@@331 $generated@@512 ($generated@@273 $generated@@511)) $generated@@511))
 :pattern ( ($generated@@273 $generated@@511))
)))
(assert (forall (($generated@@513 T@U) ($generated@@514 T@U) ($generated@@515 T@U) ) (!  (=> (and (and (= (type $generated@@513) ($generated@@294 $generated@@154 $generated@@154)) (= (type $generated@@514) $generated@@65)) (= (type $generated@@515) $generated@@65)) (= ($generated@@141 $generated@@513 ($generated@@398 $generated@@514 $generated@@515)) (forall (($generated@@516 T@U) ) (!  (=> (and (= (type $generated@@516) $generated@@154) ($generated@@0 ($generated@@82 ($generated@@292 $generated@@513) $generated@@516))) (and ($generated@@229 ($generated@@82 ($generated@@373 $generated@@513) $generated@@516) $generated@@515) ($generated@@229 $generated@@516 $generated@@514)))
 :pattern ( ($generated@@82 ($generated@@373 $generated@@513) $generated@@516))
 :pattern ( ($generated@@82 ($generated@@292 $generated@@513) $generated@@516))
))))
 :pattern ( ($generated@@141 $generated@@513 ($generated@@398 $generated@@514 $generated@@515)))
)))
(assert (forall (($generated@@517 T@U) ($generated@@518 T@U) ($generated@@519 T@U) ) (!  (=> (and (and (= (type $generated@@517) ($generated@@312 $generated@@154 $generated@@154)) (= (type $generated@@518) $generated@@65)) (= (type $generated@@519) $generated@@65)) (= ($generated@@141 $generated@@517 ($generated@@406 $generated@@518 $generated@@519)) (forall (($generated@@520 T@U) ) (!  (=> (and (= (type $generated@@520) $generated@@154) ($generated@@0 ($generated@@82 ($generated@@310 $generated@@517) $generated@@520))) (and ($generated@@229 ($generated@@82 ($generated@@381 $generated@@517) $generated@@520) $generated@@519) ($generated@@229 $generated@@520 $generated@@518)))
 :pattern ( ($generated@@82 ($generated@@381 $generated@@517) $generated@@520))
 :pattern ( ($generated@@82 ($generated@@310 $generated@@517) $generated@@520))
))))
 :pattern ( ($generated@@141 $generated@@517 ($generated@@406 $generated@@518 $generated@@519)))
)))
(assert (forall (($generated@@523 T@U) ($generated@@524 T@U) ) (!  (=> (and (= (type $generated@@523) $generated@@154) (= (type $generated@@524) $generated@@154)) (< ($generated@@521 $generated@@523) ($generated@@522 ($generated@@228 $generated@@523 $generated@@524))))
 :pattern ( ($generated@@228 $generated@@523 $generated@@524))
)))
(assert (forall (($generated@@525 T@U) ($generated@@526 T@U) ) (!  (=> (and (= (type $generated@@525) $generated@@154) (= (type $generated@@526) $generated@@154)) (< ($generated@@521 $generated@@526) ($generated@@522 ($generated@@228 $generated@@525 $generated@@526))))
 :pattern ( ($generated@@228 $generated@@525 $generated@@526))
)))
(assert (forall (($generated@@527 T@U) ($generated@@528 T@U) ($generated@@529 T@U) ) (!  (=> (and (and (and (= (type $generated@@527) $generated@@154) (= (type $generated@@528) $generated@@65)) (= (type $generated@@529) $generated@@65)) ($generated@@229 $generated@@527 ($generated@@398 $generated@@528 $generated@@529))) (and (= ($generated@@273 ($generated@@331 ($generated@@294 $generated@@154 $generated@@154) $generated@@527)) $generated@@527) ($generated@@141 ($generated@@331 ($generated@@294 $generated@@154 $generated@@154) $generated@@527) ($generated@@398 $generated@@528 $generated@@529))))
 :pattern ( ($generated@@229 $generated@@527 ($generated@@398 $generated@@528 $generated@@529)))
)))
(assert (forall (($generated@@530 T@U) ($generated@@531 T@U) ($generated@@532 T@U) ) (!  (=> (and (and (and (= (type $generated@@530) $generated@@154) (= (type $generated@@531) $generated@@65)) (= (type $generated@@532) $generated@@65)) ($generated@@229 $generated@@530 ($generated@@406 $generated@@531 $generated@@532))) (and (= ($generated@@273 ($generated@@331 ($generated@@312 $generated@@154 $generated@@154) $generated@@530)) $generated@@530) ($generated@@141 ($generated@@331 ($generated@@312 $generated@@154 $generated@@154) $generated@@530) ($generated@@406 $generated@@531 $generated@@532))))
 :pattern ( ($generated@@229 $generated@@530 ($generated@@406 $generated@@531 $generated@@532)))
)))
(assert (forall (($generated@@533 T@U) ($generated@@534 T@U) ($generated@@535 T@U) ) (!  (=> (and (and (and (= (type $generated@@533) $generated@@65) (= (type $generated@@534) $generated@@65)) (= (type $generated@@535) $generated@@154)) ($generated@@229 $generated@@535 ($generated@@144 $generated@@533 $generated@@534))) (and (= ($generated@@273 ($generated@@331 $generated@@145 $generated@@535)) $generated@@535) ($generated@@141 ($generated@@331 $generated@@145 $generated@@535) ($generated@@144 $generated@@533 $generated@@534))))
 :pattern ( ($generated@@229 $generated@@535 ($generated@@144 $generated@@533 $generated@@534)))
)))
(assert (forall (($generated@@536 T@U) ) (! (let (($generated@@537 (type $generated@@536)))
 (not ($generated@@0 ($generated@@82 ($generated@@417 $generated@@537) $generated@@536))))
 :pattern ( (let (($generated@@537 (type $generated@@536)))
($generated@@82 ($generated@@417 $generated@@537) $generated@@536)))
)))
(assert (forall (($generated@@538 T@U) ($generated@@539 T@U) ) (!  (=> (and (= (type $generated@@538) $generated@@65) (= (type $generated@@539) $generated@@65)) (and (= ($generated@@73 ($generated@@144 $generated@@538 $generated@@539)) $generated@@62) (= ($generated@@159 ($generated@@144 $generated@@538 $generated@@539)) $generated@@63)))
 :pattern ( ($generated@@144 $generated@@538 $generated@@539))
)))
(assert (forall (($generated@@540 T@U) ) (!  (=> (= (type $generated@@540) $generated@@145) (= ($generated@@521 ($generated@@273 $generated@@540)) ($generated@@522 $generated@@540)))
 :pattern ( ($generated@@521 ($generated@@273 $generated@@540)))
)))
(assert (forall (($generated@@541 T@U) ) (!  (=> (and (= (type $generated@@541) $generated@@154) ($generated@@229 $generated@@541 ($generated@@76 0))) (and (= ($generated@@273 ($generated@@331 $generated@@2 $generated@@541)) $generated@@541) ($generated@@141 ($generated@@331 ($generated@@77 $generated@@154 $generated@@4) $generated@@541) ($generated@@76 0))))
 :pattern ( ($generated@@229 $generated@@541 ($generated@@76 0)))
)))
(assert (forall (($generated@@542 T@U) ($generated@@543 T@U) ) (!  (=> (and (and (= (type $generated@@542) $generated@@154) (= (type $generated@@543) $generated@@65)) ($generated@@229 $generated@@542 ($generated@@238 $generated@@543))) (and (= ($generated@@273 ($generated@@331 ($generated@@77 $generated@@154 $generated@@4) $generated@@542)) $generated@@542) ($generated@@141 ($generated@@331 ($generated@@77 $generated@@154 $generated@@4) $generated@@542) ($generated@@238 $generated@@543))))
 :pattern ( ($generated@@229 $generated@@542 ($generated@@238 $generated@@543)))
)))
(assert (forall (($generated@@544 T@U) ($generated@@545 T@U) ) (!  (=> (and (and (= (type $generated@@544) $generated@@154) (= (type $generated@@545) $generated@@65)) ($generated@@229 $generated@@544 ($generated@@243 $generated@@545))) (and (= ($generated@@273 ($generated@@331 ($generated@@77 $generated@@154 $generated@@4) $generated@@544)) $generated@@544) ($generated@@141 ($generated@@331 ($generated@@77 $generated@@154 $generated@@4) $generated@@544) ($generated@@243 $generated@@545))))
 :pattern ( ($generated@@229 $generated@@544 ($generated@@243 $generated@@545)))
)))
(assert (forall (($generated@@546 T@U) ($generated@@547 T@U) ) (!  (=> (and (and (= (type $generated@@546) $generated@@154) (= (type $generated@@547) $generated@@65)) ($generated@@229 $generated@@546 ($generated@@162 $generated@@547))) (and (= ($generated@@273 ($generated@@331 ($generated@@77 $generated@@154 $generated@@2) $generated@@546)) $generated@@546) ($generated@@141 ($generated@@331 ($generated@@77 $generated@@154 $generated@@2) $generated@@546) ($generated@@162 $generated@@547))))
 :pattern ( ($generated@@229 $generated@@546 ($generated@@162 $generated@@547)))
)))
(assert (forall (($generated@@548 T@U) ($generated@@549 T@U) ) (!  (=> (and (and (= (type $generated@@548) $generated@@154) (= (type $generated@@549) $generated@@65)) ($generated@@229 $generated@@548 ($generated@@483 $generated@@549))) (and (= ($generated@@273 ($generated@@331 ($generated@@267 $generated@@154) $generated@@548)) $generated@@548) ($generated@@141 ($generated@@331 ($generated@@267 $generated@@154) $generated@@548) ($generated@@483 $generated@@549))))
 :pattern ( ($generated@@229 $generated@@548 ($generated@@483 $generated@@549)))
)))
(assert (forall (($generated@@550 T@U) ($generated@@551 T@U) ($generated@@552 T@U) ) (!  (=> (and (and (= (type $generated@@550) ($generated@@77 $generated@@154 $generated@@2)) (= (type $generated@@551) $generated@@65)) (= (type $generated@@552) ($generated@@77 $generated@@78 $generated@@79))) (= ($generated@@75 $generated@@550 ($generated@@162 $generated@@551) $generated@@552) (forall (($generated@@553 T@U) ) (!  (=> (and (= (type $generated@@553) $generated@@154) (< 0 ($generated ($generated@@82 $generated@@550 $generated@@553)))) ($generated@@253 $generated@@553 $generated@@551 $generated@@552))
 :pattern ( ($generated@@82 $generated@@550 $generated@@553))
))))
 :pattern ( ($generated@@75 $generated@@550 ($generated@@162 $generated@@551) $generated@@552))
)))
(assert (forall (($generated@@554 T@U) ($generated@@555 T@U) ($generated@@556 T@U) ) (!  (=> (and (and (and (= (type $generated@@554) $generated@@145) (= (type $generated@@555) $generated@@65)) (= (type $generated@@556) ($generated@@77 $generated@@78 $generated@@79))) (and ($generated@@252 $generated@@556) (and ($generated@@143 $generated@@554) (exists (($generated@@557 T@U) ) (!  (and (= (type $generated@@557) $generated@@65) ($generated@@75 $generated@@554 ($generated@@144 $generated@@555 $generated@@557) $generated@@556))
 :pattern ( ($generated@@75 $generated@@554 ($generated@@144 $generated@@555 $generated@@557) $generated@@556))
))))) ($generated@@253 ($generated@@152 $generated@@554) $generated@@555 $generated@@556))
 :pattern ( ($generated@@253 ($generated@@152 $generated@@554) $generated@@555 $generated@@556))
)))
(assert (forall (($generated@@558 T@U) ($generated@@559 T@U) ($generated@@560 T@U) ) (!  (=> (and (and (and (= (type $generated@@558) $generated@@145) (= (type $generated@@559) $generated@@65)) (= (type $generated@@560) ($generated@@77 $generated@@78 $generated@@79))) (and ($generated@@252 $generated@@560) (and ($generated@@143 $generated@@558) (exists (($generated@@561 T@U) ) (!  (and (= (type $generated@@561) $generated@@65) ($generated@@75 $generated@@558 ($generated@@144 $generated@@561 $generated@@559) $generated@@560))
 :pattern ( ($generated@@75 $generated@@558 ($generated@@144 $generated@@561 $generated@@559) $generated@@560))
))))) ($generated@@253 ($generated@@153 $generated@@558) $generated@@559 $generated@@560))
 :pattern ( ($generated@@253 ($generated@@153 $generated@@558) $generated@@559 $generated@@560))
)))
(assert (forall (($generated@@562 T@U) ($generated@@563 T@U) ) (!  (=> (and (= (type $generated@@562) $generated@@154) (= (type $generated@@563) $generated@@154)) (= ($generated@@228 ($generated@@248 $generated@@562) ($generated@@248 $generated@@563)) ($generated@@248 ($generated@@228 $generated@@562 $generated@@563))))
 :pattern ( ($generated@@228 ($generated@@248 $generated@@562) ($generated@@248 $generated@@563)))
)))
(assert (forall (($generated@@564 T@U) ) (! (= ($generated@@273 ($generated@@248 $generated@@564)) ($generated@@248 ($generated@@273 $generated@@564)))
 :pattern ( ($generated@@273 ($generated@@248 $generated@@564)))
)))
(assert (forall (($generated@@565 T@U) ) (! (let (($generated@@566 ($generated@@268 (type $generated@@565))))
 (=> (and (= (type $generated@@565) ($generated@@267 $generated@@566)) (= ($generated@@266 $generated@@565) 0)) (= $generated@@565 ($generated@@265 $generated@@566))))
 :pattern ( ($generated@@266 $generated@@565))
)))
(assert (forall (($generated@@567 T@U) ($generated@@568 T@U) ($generated@@569 T@U) ) (! (let (($generated@@570 (type $generated@@568)))
 (=> (and (and (= (type $generated@@567) ($generated@@77 $generated@@570 $generated@@2)) (= (type $generated@@569) $generated@@2)) (<= 0 ($generated $generated@@569))) (= ($generated@@286 ($generated@@83 $generated@@567 $generated@@568 $generated@@569)) (+ (- ($generated@@286 $generated@@567) ($generated ($generated@@82 $generated@@567 $generated@@568))) ($generated $generated@@569)))))
 :pattern ( ($generated@@286 ($generated@@83 $generated@@567 $generated@@568 $generated@@569)))
)))
(assert (forall (($generated@@571 T@U) ($generated@@572 T@U) ) (!  (=> (and (= (type $generated@@571) ($generated@@77 $generated@@78 $generated@@79)) (= (type $generated@@572) $generated@@2)) ($generated@@75 $generated@@572 $generated@@46 $generated@@571))
 :pattern ( ($generated@@75 $generated@@572 $generated@@46 $generated@@571))
)))
(assert (forall (($generated@@573 T@U) ($generated@@574 T@U) ) (!  (=> (and (= (type $generated@@573) ($generated@@77 $generated@@78 $generated@@79)) (= (type $generated@@574) $generated@@3)) ($generated@@75 $generated@@574 $generated@@47 $generated@@573))
 :pattern ( ($generated@@75 $generated@@574 $generated@@47 $generated@@573))
)))
(assert (forall (($generated@@575 T@U) ($generated@@576 T@U) ) (!  (=> (and (= (type $generated@@575) ($generated@@77 $generated@@78 $generated@@79)) (= (type $generated@@576) $generated@@4)) ($generated@@75 $generated@@576 $generated@@44 $generated@@575))
 :pattern ( ($generated@@75 $generated@@576 $generated@@44 $generated@@575))
)))
(assert (forall (($generated@@577 T@U) ($generated@@578 T@U) ) (!  (=> (and (= (type $generated@@577) ($generated@@77 $generated@@78 $generated@@79)) (= (type $generated@@578) $generated@@441)) ($generated@@75 $generated@@578 $generated@@45 $generated@@577))
 :pattern ( ($generated@@75 $generated@@578 $generated@@45 $generated@@577))
)))
(assert (forall (($generated@@579 T@U) ($generated@@580 T@U) ) (!  (=> (and (= (type $generated@@579) ($generated@@77 $generated@@78 $generated@@79)) (= (type $generated@@580) $generated@@154)) ($generated@@75 $generated@@580 $generated@@48 $generated@@579))
 :pattern ( ($generated@@75 $generated@@580 $generated@@48 $generated@@579))
)))
(assert (forall (($generated@@581 T@U) ($generated@@582 T@U) ) (!  (=> (and (= (type $generated@@581) ($generated@@267 $generated@@154)) (= (type $generated@@582) $generated@@65)) (= ($generated@@141 $generated@@581 ($generated@@483 $generated@@582)) (forall (($generated@@583 Int) ) (!  (=> (and (<= 0 $generated@@583) (< $generated@@583 ($generated@@266 $generated@@581))) ($generated@@229 ($generated@@484 $generated@@581 $generated@@583) $generated@@582))
 :pattern ( ($generated@@484 $generated@@581 $generated@@583))
))))
 :pattern ( ($generated@@141 $generated@@581 ($generated@@483 $generated@@582)))
)))
(assert (forall (($generated@@585 T@U) ($generated@@586 Int) ) (!  (=> (= (type $generated@@585) ($generated@@267 $generated@@154)) (=> (and (<= 0 $generated@@586) (< $generated@@586 ($generated@@266 $generated@@585))) (< ($generated@@522 ($generated@@331 $generated@@145 ($generated@@484 $generated@@585 $generated@@586))) ($generated@@584 $generated@@585))))
 :pattern ( ($generated@@522 ($generated@@331 $generated@@145 ($generated@@484 $generated@@585 $generated@@586))))
)))
(assert (forall (($generated@@587 T@U) ($generated@@588 T@U) ($generated@@589 T@U) ) (!  (=> (and (and (and (= (type $generated@@587) ($generated@@294 $generated@@154 $generated@@154)) (= (type $generated@@588) $generated@@65)) (= (type $generated@@589) $generated@@65)) ($generated@@141 $generated@@587 ($generated@@398 $generated@@588 $generated@@589))) (and (and ($generated@@141 ($generated@@292 $generated@@587) ($generated@@238 $generated@@588)) ($generated@@141 ($generated@@341 $generated@@587) ($generated@@238 $generated@@589))) ($generated@@141 ($generated@@372 $generated@@587) ($generated@@238 ($generated@@144 $generated@@588 $generated@@589)))))
 :pattern ( ($generated@@141 $generated@@587 ($generated@@398 $generated@@588 $generated@@589)))
)))
(assert (forall (($generated@@590 T@U) ($generated@@591 T@U) ($generated@@592 T@U) ) (!  (=> (and (and (and (= (type $generated@@590) ($generated@@312 $generated@@154 $generated@@154)) (= (type $generated@@591) $generated@@65)) (= (type $generated@@592) $generated@@65)) ($generated@@141 $generated@@590 ($generated@@406 $generated@@591 $generated@@592))) (and (and ($generated@@141 ($generated@@310 $generated@@590) ($generated@@243 $generated@@591)) ($generated@@141 ($generated@@352 $generated@@590) ($generated@@243 $generated@@592))) ($generated@@141 ($generated@@380 $generated@@590) ($generated@@243 ($generated@@144 $generated@@591 $generated@@592)))))
 :pattern ( ($generated@@141 $generated@@590 ($generated@@406 $generated@@591 $generated@@592)))
)))
(assert (forall (($generated@@593 T@U) ) (!  (=> (= (type $generated@@593) $generated@@2) ($generated@@141 $generated@@593 $generated@@46))
 :pattern ( ($generated@@141 $generated@@593 $generated@@46))
)))
(assert (forall (($generated@@594 T@U) ) (!  (=> (= (type $generated@@594) $generated@@3) ($generated@@141 $generated@@594 $generated@@47))
 :pattern ( ($generated@@141 $generated@@594 $generated@@47))
)))
(assert (forall (($generated@@595 T@U) ) (!  (=> (= (type $generated@@595) $generated@@4) ($generated@@141 $generated@@595 $generated@@44))
 :pattern ( ($generated@@141 $generated@@595 $generated@@44))
)))
(assert (forall (($generated@@596 T@U) ) (!  (=> (= (type $generated@@596) $generated@@441) ($generated@@141 $generated@@596 $generated@@45))
 :pattern ( ($generated@@141 $generated@@596 $generated@@45))
)))
(assert (forall (($generated@@597 T@U) ) (!  (=> (= (type $generated@@597) $generated@@154) ($generated@@141 $generated@@597 $generated@@48))
 :pattern ( ($generated@@141 $generated@@597 $generated@@48))
)))
(push 1)
(declare-fun ControlFlow (Int Int) Int)
(declare-fun $generated@@598 () T@U)
(declare-fun $generated@@599 () T@U)
(declare-fun $generated@@600 () T@U)
(declare-fun $generated@@601 (T@U) Bool)
(declare-fun $generated@@602 () T@U)
(declare-fun $generated@@603 () T@U)
(declare-fun $generated@@604 () T@U)
(declare-fun $generated@@605 () Bool)
(declare-fun $generated@@606 () T@U)
(declare-fun $generated@@607 () Int)
(assert  (and (and (and (and (and (and (= (type $generated@@598) ($generated@@172 $generated@@78 $generated@@4)) (= (type $generated@@599) ($generated@@77 $generated@@78 $generated@@79))) (= (type $generated@@600) ($generated@@77 $generated@@78 $generated@@79))) (= (type $generated@@602) $generated@@78)) (= (type $generated@@603) ($generated@@77 $generated@@78 $generated@@79))) (= (type $generated@@604) $generated@@78)) (= (type $generated@@606) $generated@@78)))
(set-option :timeout 0)
(set-option :rlimit 0)
(assert (not
 (=> (= (ControlFlow 0 0) 4) (let (($generated@@608  (=> (= $generated@@598 ($generated@@171 $generated@@138 $generated@@599 $generated@@60 false)) (=> (and (and (and (and ($generated@@252 $generated@@600) ($generated@@601 $generated@@600)) (and (forall (($generated@@609 T@U) ) (!  (=> (= (type $generated@@609) $generated@@78) (=> (and (not (= $generated@@609 $generated@@138)) ($generated@@0 ($generated@@84 ($generated@@82 $generated@@599 $generated@@609) $generated@@60))) (= ($generated@@82 $generated@@600 $generated@@609) ($generated@@82 $generated@@599 $generated@@609))))
 :pattern ( ($generated@@82 $generated@@600 $generated@@609))
)) ($generated@@133 $generated@@599 $generated@@600))) (and (and (not (= $generated@@602 $generated@@138)) (and ($generated@@141 $generated@@602 $generated@@160) ($generated@@75 $generated@@602 $generated@@160 $generated@@599))) (and ($generated@@252 $generated@@603) ($generated@@601 $generated@@603)))) (and (and (and (not (= $generated@@604 $generated@@138)) (and ($generated@@141 $generated@@604 $generated@@160) ($generated@@75 $generated@@604 $generated@@160 $generated@@603))) (not ($generated@@0 ($generated@@84 ($generated@@82 $generated@@600 $generated@@604) $generated@@60)))) (and (forall (($generated@@610 T@U) ) (!  (=> (= (type $generated@@610) $generated@@78) (=> (and (not (= $generated@@610 $generated@@138)) ($generated@@0 ($generated@@84 ($generated@@82 $generated@@600 $generated@@610) $generated@@60))) (= ($generated@@82 $generated@@603 $generated@@610) ($generated@@82 $generated@@600 $generated@@610))))
 :pattern ( ($generated@@82 $generated@@603 $generated@@610))
)) ($generated@@133 $generated@@600 $generated@@603)))) (and (=> (= (ControlFlow 0 2) (- 0 3)) true) (=> (= (ControlFlow 0 2) (- 0 1)) (not (= $generated@@604 $generated@@138))))))))
(let (($generated@@611  (=> (and ($generated@@252 $generated@@599) ($generated@@601 $generated@@599)) (=> (and (and (=> $generated@@605 (and ($generated@@141 $generated@@606 $generated@@160) ($generated@@75 $generated@@606 $generated@@160 $generated@@599))) true) (and (= 1 $generated@@607) (= (ControlFlow 0 4) 2))) $generated@@608))))
$generated@@611)))
))
(check-sat)
(pop 1)
; Valid
(get-info :rlimit)
(reset)
(set-option :rlimit 0)
; did a full reset
(reset)
(set-option :print-success false)
(set-info :smt-lib-version 2.6)
(set-option :auto_config false)
(set-option :type_check true)
(set-option :smt.case_split 3)
(set-option :smt.qi.eager_threshold 100)
(set-option :smt.delay_units true)
(set-option :smt.arith.solver 2)
(set-option :smt.mbqi false)
(set-option :model.compact false)
(set-option :model.v2 true)
(set-option :pp.bv_literals false)
; done setting options


(set-info :category "industrial")
(declare-sort |T@U| 0)
(declare-sort |T@T| 0)
(declare-fun real_pow (Real Real) Real)
(declare-fun UOrdering2 (|T@U| |T@U|) Bool)
(declare-fun UOrdering3 (|T@T| |T@U| |T@U|) Bool)
(declare-fun tickleBool (Bool) Bool)
(assert (and (tickleBool true) (tickleBool false)))
(declare-fun $generated (T@U) Int)
(declare-fun $generated@@0 (T@U) Bool)
(declare-fun $generated@@1 (T@T) Int)
(declare-fun $generated@@2 () T@T)
(declare-fun $generated@@3 () T@T)
(declare-fun $generated@@4 () T@T)
(declare-fun $generated@@5 () T@T)
(declare-fun $generated@@6 () T@T)
(declare-fun $generated@@7 () T@T)
(declare-fun $generated@@8 (Int) T@U)
(declare-fun type (T@U) T@T)
(declare-fun $generated@@9 (Real) T@U)
(declare-fun $generated@@10 (T@U) Real)
(declare-fun $generated@@11 (Bool) T@U)
(declare-fun $generated@@12 (RoundingMode) T@U)
(declare-fun $generated@@13 (T@U) RoundingMode)
(declare-fun $generated@@14 (String) T@U)
(declare-fun $generated@@15 (T@U) String)
(declare-fun $generated@@16 ((RegEx String)) T@U)
(declare-fun $generated@@17 (T@U) (RegEx String))
(declare-fun $generated@@44 () T@U)
(declare-fun $generated@@45 () T@U)
(declare-fun $generated@@46 () T@U)
(declare-fun $generated@@47 () T@U)
(declare-fun $generated@@48 () T@U)
(declare-fun $generated@@49 () T@U)
(declare-fun $generated@@50 () T@U)
(declare-fun $generated@@51 () T@U)
(declare-fun $generated@@52 () T@U)
(declare-fun $generated@@53 () T@U)
(declare-fun $generated@@54 () T@U)
(declare-fun $generated@@55 () T@U)
(declare-fun $generated@@56 () T@U)
(declare-fun $generated@@57 () T@U)
(declare-fun $generated@@58 () T@U)
(declare-fun $generated@@59 () T@U)
(declare-fun $generated@@60 () T@U)
(declare-fun $generated@@61 () T@U)
(declare-fun $generated@@62 () T@U)
(declare-fun $generated@@63 () T@U)
(declare-fun $generated@@64 () T@U)
(declare-fun $generated@@65 () T@U)
(declare-fun $generated@@66 () T@U)
(declare-fun $generated@@67 () T@T)
(declare-fun $generated@@68 () T@T)
(declare-fun $generated@@69 (T@T) T@T)
(declare-fun $generated@@70 (T@T) T@T)
(declare-fun $generated@@71 () T@T)
(declare-fun $generated@@72 () T@T)
(declare-fun $generated@@75 (T@U) T@U)
(declare-fun $generated@@77 (T@U T@U T@U) Bool)
(declare-fun $generated@@78 (Int) T@U)
(declare-fun $generated@@79 (T@T T@T) T@T)
(declare-fun $generated@@80 () T@T)
(declare-fun $generated@@81 () T@T)
(declare-fun $generated@@82 (T@T) T@T)
(declare-fun $generated@@83 (T@T) T@T)
(declare-fun $generated@@84 (T@U T@U) T@U)
(declare-fun $generated@@85 (T@U T@U T@U) T@U)
(declare-fun $generated@@86 (T@U T@U) T@U)
(declare-fun $generated@@87 (T@U T@U T@U) T@U)
(declare-fun $generated@@135 (T@U T@U) Bool)
(declare-fun $generated@@139 () T@U)
(declare-fun $generated@@140 () T@U)
(declare-fun $generated@@143 (T@U T@U) Bool)
(declare-fun $generated@@145 (T@U) Bool)
(declare-fun $generated@@146 (T@U T@U) T@U)
(declare-fun $generated@@147 () T@T)
(declare-fun $generated@@153 (T@U T@U) Bool)
(declare-fun $generated@@154 (T@U) T@U)
(declare-fun $generated@@155 (T@U) T@U)
(declare-fun $generated@@156 () T@T)
(declare-fun $generated@@161 (T@U) T@U)
(declare-fun $generated@@162 (T@U) Bool)
(declare-fun $generated@@166 (T@U) T@U)
(declare-fun $generated@@169 (T@U T@U T@U) T@U)
(declare-fun $generated@@170 (T@U T@U T@U Bool) T@U)
(declare-fun $generated@@171 (T@T T@T) T@T)
(declare-fun $generated@@172 (T@T) T@T)
(declare-fun $generated@@173 (T@T) T@T)
(declare-fun $generated@@174 (T@U T@U T@U T@U) T@U)
(declare-fun $generated@@225 () T@U)
(declare-fun $generated@@228 (T@U T@U) T@U)
(declare-fun $generated@@229 (T@U T@U) Bool)
(declare-fun $generated@@238 (T@U) T@U)
(declare-fun $generated@@243 (T@U) T@U)
(declare-fun $generated@@248 (T@U) T@U)
(declare-fun $generated@@252 (T@U) Bool)
(declare-fun $generated@@253 (T@U T@U T@U) Bool)
(declare-fun $generated@@259 (T@U) T@U)
(declare-fun $generated@@265 (T@T) T@U)
(declare-fun $generated@@266 (T@U) Int)
(declare-fun $generated@@267 (T@T) T@T)
(declare-fun $generated@@268 (T@T) T@T)
(declare-fun $generated@@273 (T@U) T@U)
(declare-fun $generated@@286 (T@U) Int)
(declare-fun $generated@@287 (T@T) T@U)
(declare-fun $generated@@292 (T@U) T@U)
(declare-fun $generated@@293 (T@T T@T) T@U)
(declare-fun $generated@@294 (T@T T@T) T@T)
(declare-fun $generated@@295 (T@T) T@T)
(declare-fun $generated@@296 (T@T) T@T)
(declare-fun $generated@@310 (T@U) T@U)
(declare-fun $generated@@311 (T@T T@T) T@U)
(declare-fun $generated@@312 (T@T T@T) T@T)
(declare-fun $generated@@313 (T@T) T@T)
(declare-fun $generated@@314 (T@T) T@T)
(declare-fun $generated@@331 (T@T T@U) T@U)
(declare-fun $generated@@341 (T@U) T@U)
(declare-fun $generated@@352 (T@U) T@U)
(declare-fun $generated@@372 (T@U) T@U)
(declare-fun $generated@@373 (T@U) T@U)
(declare-fun $generated@@380 (T@U) T@U)
(declare-fun $generated@@381 (T@U) T@U)
(declare-fun $generated@@398 (T@U T@U) T@U)
(declare-fun $generated@@406 (T@U T@U) T@U)
(declare-fun $generated@@417 (T@T) T@U)
(declare-fun $generated@@441 () T@T)
(declare-fun $generated@@449 (T@U) T@U)
(declare-fun $generated@@453 (T@U) T@U)
(declare-fun $generated@@459 (T@U) T@U)
(declare-fun $generated@@463 (T@U) T@U)
(declare-fun $generated@@471 (T@U) T@U)
(declare-fun $generated@@475 (T@U) T@U)
(declare-fun $generated@@483 (T@U) T@U)
(declare-fun $generated@@484 (T@U Int) T@U)
(declare-fun $generated@@493 (T@U) Int)
(declare-fun $generated@@495 (T@U) T@U)
(declare-fun $generated@@499 (T@U) T@U)
(declare-fun $generated@@503 (T@U) T@U)
(declare-fun $generated@@507 (T@U) T@U)
(declare-fun $generated@@521 (T@U) Int)
(declare-fun $generated@@522 (T@U) Int)
(declare-fun $generated@@538 (T@U) T@U)
(declare-fun $generated@@586 (T@U) Int)
(assert  (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (= ($generated@@1 $generated@@2) 0) (= ($generated@@1 $generated@@3) 1)) (= ($generated@@1 $generated@@4) 2)) (= ($generated@@1 $generated@@5) 3)) (= ($generated@@1 $generated@@6) 4)) (= ($generated@@1 $generated@@7) 5)) (forall (($generated@@18 Int) ) (! (= ($generated ($generated@@8 $generated@@18)) $generated@@18)
 :pattern ( ($generated@@8 $generated@@18))
))) (forall (($generated@@19 T@U) ) (!  (=> (= (type $generated@@19) $generated@@2) (= ($generated@@8 ($generated $generated@@19)) $generated@@19))
 :pattern ( ($generated $generated@@19))
))) (forall (($generated@@20 Int) ) (! (= (type ($generated@@8 $generated@@20)) $generated@@2)
 :pattern ( ($generated@@8 $generated@@20))
))) (forall (($generated@@21 Real) ) (! (= ($generated@@10 ($generated@@9 $generated@@21)) $generated@@21)
 :pattern ( ($generated@@9 $generated@@21))
))) (forall (($generated@@22 T@U) ) (!  (=> (= (type $generated@@22) $generated@@3) (= ($generated@@9 ($generated@@10 $generated@@22)) $generated@@22))
 :pattern ( ($generated@@10 $generated@@22))
))) (forall (($generated@@23 Real) ) (! (= (type ($generated@@9 $generated@@23)) $generated@@3)
 :pattern ( ($generated@@9 $generated@@23))
))) (forall (($generated@@24 Bool) ) (! (= ($generated@@0 ($generated@@11 $generated@@24)) $generated@@24)
 :pattern ( ($generated@@11 $generated@@24))
))) (forall (($generated@@25 T@U) ) (!  (=> (= (type $generated@@25) $generated@@4) (= ($generated@@11 ($generated@@0 $generated@@25)) $generated@@25))
 :pattern ( ($generated@@0 $generated@@25))
))) (forall (($generated@@26 Bool) ) (! (= (type ($generated@@11 $generated@@26)) $generated@@4)
 :pattern ( ($generated@@11 $generated@@26))
))) (forall (($generated@@27 RoundingMode) ) (! (= ($generated@@13 ($generated@@12 $generated@@27)) $generated@@27)
 :pattern ( ($generated@@12 $generated@@27))
))) (forall (($generated@@28 T@U) ) (!  (=> (= (type $generated@@28) $generated@@5) (= ($generated@@12 ($generated@@13 $generated@@28)) $generated@@28))
 :pattern ( ($generated@@13 $generated@@28))
))) (forall (($generated@@29 RoundingMode) ) (! (= (type ($generated@@12 $generated@@29)) $generated@@5)
 :pattern ( ($generated@@12 $generated@@29))
))) (forall (($generated@@30 String) ) (! (= ($generated@@15 ($generated@@14 $generated@@30)) $generated@@30)
 :pattern ( ($generated@@14 $generated@@30))
))) (forall (($generated@@31 T@U) ) (!  (=> (= (type $generated@@31) $generated@@6) (= ($generated@@14 ($generated@@15 $generated@@31)) $generated@@31))
 :pattern ( ($generated@@15 $generated@@31))
))) (forall (($generated@@32 String) ) (! (= (type ($generated@@14 $generated@@32)) $generated@@6)
 :pattern ( ($generated@@14 $generated@@32))
))) (forall (($generated@@33 (RegEx String)) ) (! (= ($generated@@17 ($generated@@16 $generated@@33)) $generated@@33)
 :pattern ( ($generated@@16 $generated@@33))
))) (forall (($generated@@34 T@U) ) (!  (=> (= (type $generated@@34) $generated@@7) (= ($generated@@16 ($generated@@17 $generated@@34)) $generated@@34))
 :pattern ( ($generated@@17 $generated@@34))
))) (forall (($generated@@35 (RegEx String)) ) (! (= (type ($generated@@16 $generated@@35)) $generated@@7)
 :pattern ( ($generated@@16 $generated@@35))
))))
(assert (forall (($generated@@36 T@U) ) (! (UOrdering2 $generated@@36 $generated@@36)
 :no-pattern ($generated $generated@@36)
 :no-pattern ($generated@@0 $generated@@36)
)))
(assert (forall (($generated@@37 T@U) ($generated@@38 T@U) ($generated@@39 T@U) ) (! (let (($generated@@40 (type $generated@@37)))
 (=> (and (and (= (type $generated@@38) $generated@@40) (= (type $generated@@39) $generated@@40)) (and (UOrdering2 $generated@@37 $generated@@38) (UOrdering2 $generated@@38 $generated@@39))) (UOrdering2 $generated@@37 $generated@@39)))
 :pattern ( (UOrdering2 $generated@@37 $generated@@38) (UOrdering2 $generated@@38 $generated@@39))
)))
(assert (forall (($generated@@41 T@U) ($generated@@42 T@U) ) (! (let (($generated@@43 (type $generated@@41)))
 (=> (= (type $generated@@42) $generated@@43) (=> (and (UOrdering2 $generated@@41 $generated@@42) (UOrdering2 $generated@@42 $generated@@41)) (= $generated@@41 $generated@@42))))
 :pattern ( (UOrdering2 $generated@@41 $generated@@42) (UOrdering2 $generated@@42 $generated@@41))
)))
(assert  (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (= ($generated@@1 $generated@@67) 6) (= (type $generated@@44) $generated@@67)) (= (type $generated@@45) $generated@@67)) (= (type $generated@@46) $generated@@67)) (= (type $generated@@47) $generated@@67)) (= (type $generated@@48) $generated@@67)) (= ($generated@@1 $generated@@68) 7)) (= (type $generated@@49) $generated@@68)) (= (type $generated@@50) $generated@@68)) (= (type $generated@@51) $generated@@68)) (= (type $generated@@52) $generated@@68)) (= (type $generated@@53) $generated@@68)) (= (type $generated@@54) $generated@@68)) (= (type $generated@@55) $generated@@68)) (= (type $generated@@56) $generated@@68)) (= (type $generated@@57) $generated@@68)) (= (type $generated@@58) $generated@@68)) (= (type $generated@@59) $generated@@68)) (forall (($generated@@73 T@T) ) (= ($generated@@1 ($generated@@69 $generated@@73)) 8))) (forall (($generated@@74 T@T) ) (! (= ($generated@@70 ($generated@@69 $generated@@74)) $generated@@74)
 :pattern ( ($generated@@69 $generated@@74))
))) (= (type $generated@@60) ($generated@@69 $generated@@4))) (= ($generated@@1 $generated@@71) 9)) (= (type $generated@@61) $generated@@71)) (= (type $generated@@62) $generated@@68)) (= (type $generated@@63) $generated@@68)) (= (type $generated@@64) $generated@@68)) (= ($generated@@1 $generated@@72) 10)) (= (type $generated@@65) $generated@@72)) (= (type $generated@@66) $generated@@72)))
(assert (distinct $generated@@44 $generated@@45 $generated@@46 $generated@@47 $generated@@48 $generated@@49 $generated@@50 $generated@@51 $generated@@52 $generated@@53 $generated@@54 $generated@@55 $generated@@56 $generated@@57 $generated@@58 $generated@@59 $generated@@60 $generated@@61 $generated@@62 $generated@@63 $generated@@64 $generated@@65 $generated@@66)
)
(assert (forall (($generated@@76 T@U) ) (! (= (type ($generated@@75 $generated@@76)) $generated@@68)
 :pattern ( ($generated@@75 $generated@@76))
)))
(assert (= ($generated@@75 $generated@@44) $generated@@49))
(assert (= ($generated@@75 $generated@@45) $generated@@50))
(assert (= ($generated@@75 $generated@@46) $generated@@51))
(assert (= ($generated@@75 $generated@@47) $generated@@52))
(assert (= ($generated@@75 $generated@@48) $generated@@53))
(assert  (and (and (and (and (and (and (and (and (and (and (and (and (and (forall (($generated@@88 T@T) ($generated@@89 T@T) ) (= ($generated@@1 ($generated@@79 $generated@@88 $generated@@89)) 11)) (forall (($generated@@90 T@T) ($generated@@91 T@T) ) (! (= ($generated@@82 ($generated@@79 $generated@@90 $generated@@91)) $generated@@90)
 :pattern ( ($generated@@79 $generated@@90 $generated@@91))
))) (forall (($generated@@92 T@T) ($generated@@93 T@T) ) (! (= ($generated@@83 ($generated@@79 $generated@@92 $generated@@93)) $generated@@93)
 :pattern ( ($generated@@79 $generated@@92 $generated@@93))
))) (forall (($generated@@94 T@U) ($generated@@95 T@U) ) (! (let (($generated@@96 ($generated@@83 (type $generated@@94))))
(= (type ($generated@@84 $generated@@94 $generated@@95)) $generated@@96))
 :pattern ( ($generated@@84 $generated@@94 $generated@@95))
))) (forall (($generated@@97 T@U) ($generated@@98 T@U) ($generated@@99 T@U) ) (! (let (($generated@@100 (type $generated@@99)))
(let (($generated@@101 (type $generated@@98)))
(= (type ($generated@@85 $generated@@97 $generated@@98 $generated@@99)) ($generated@@79 $generated@@101 $generated@@100))))
 :pattern ( ($generated@@85 $generated@@97 $generated@@98 $generated@@99))
))) (forall (($generated@@102 T@U) ($generated@@103 T@U) ($generated@@104 T@U) ) (! (let (($generated@@105 ($generated@@83 (type $generated@@102))))
 (=> (= (type $generated@@104) $generated@@105) (= ($generated@@84 ($generated@@85 $generated@@102 $generated@@103 $generated@@104) $generated@@103) $generated@@104)))
 :weight 0
))) (and (forall (($generated@@106 T@U) ($generated@@107 T@U) ($generated@@108 T@U) ($generated@@109 T@U) ) (!  (or (= $generated@@108 $generated@@109) (= ($generated@@84 ($generated@@85 $generated@@107 $generated@@108 $generated@@106) $generated@@109) ($generated@@84 $generated@@107 $generated@@109)))
 :weight 0
)) (forall (($generated@@110 T@U) ($generated@@111 T@U) ($generated@@112 T@U) ($generated@@113 T@U) ) (!  (or true (= ($generated@@84 ($generated@@85 $generated@@111 $generated@@112 $generated@@110) $generated@@113) ($generated@@84 $generated@@111 $generated@@113)))
 :weight 0
)))) (= ($generated@@1 $generated@@80) 12)) (forall (($generated@@114 T@U) ($generated@@115 T@U) ) (! (let (($generated@@116 ($generated@@70 (type $generated@@115))))
(= (type ($generated@@86 $generated@@114 $generated@@115)) $generated@@116))
 :pattern ( ($generated@@86 $generated@@114 $generated@@115))
))) (= ($generated@@1 $generated@@81) 13)) (forall (($generated@@117 T@U) ($generated@@118 T@U) ($generated@@119 T@U) ) (! (= (type ($generated@@87 $generated@@117 $generated@@118 $generated@@119)) $generated@@81)
 :pattern ( ($generated@@87 $generated@@117 $generated@@118 $generated@@119))
))) (forall (($generated@@120 T@U) ($generated@@121 T@U) ($generated@@122 T@U) ) (! (let (($generated@@123 ($generated@@70 (type $generated@@121))))
 (=> (= (type $generated@@122) $generated@@123) (= ($generated@@86 ($generated@@87 $generated@@120 $generated@@121 $generated@@122) $generated@@121) $generated@@122)))
 :weight 0
))) (and (forall (($generated@@124 T@U) ($generated@@125 T@U) ($generated@@126 T@U) ($generated@@127 T@U) ) (!  (or (= $generated@@126 $generated@@127) (= ($generated@@86 ($generated@@87 $generated@@125 $generated@@126 $generated@@124) $generated@@127) ($generated@@86 $generated@@125 $generated@@127)))
 :weight 0
)) (forall (($generated@@128 T@U) ($generated@@129 T@U) ($generated@@130 T@U) ($generated@@131 T@U) ) (!  (or true (= ($generated@@86 ($generated@@87 $generated@@129 $generated@@130 $generated@@128) $generated@@131) ($generated@@86 $generated@@129 $generated@@131)))
 :weight 0
)))) (forall (($generated@@132 Int) ) (! (= (type ($generated@@78 $generated@@132)) $generated@@67)
 :pattern ( ($generated@@78 $generated@@132))
))))
(assert (forall (($generated@@133 T@U) ($generated@@134 T@U) ) (!  (=> (and (= (type $generated@@133) $generated@@2) (= (type $generated@@134) ($generated@@79 $generated@@80 $generated@@81))) ($generated@@77 $generated@@133 ($generated@@78 0) $generated@@134))
 :pattern ( ($generated@@77 $generated@@133 ($generated@@78 0) $generated@@134))
)))
(assert (forall (($generated@@136 T@U) ($generated@@137 T@U) ) (!  (=> (and (and (= (type $generated@@136) ($generated@@79 $generated@@80 $generated@@81)) (= (type $generated@@137) ($generated@@79 $generated@@80 $generated@@81))) ($generated@@135 $generated@@136 $generated@@137)) (forall (($generated@@138 T@U) ) (!  (=> (and (= (type $generated@@138) $generated@@80) ($generated@@0 ($generated@@86 ($generated@@84 $generated@@136 $generated@@138) $generated@@60))) ($generated@@0 ($generated@@86 ($generated@@84 $generated@@137 $generated@@138) $generated@@60)))
 :pattern ( ($generated@@86 ($generated@@84 $generated@@137 $generated@@138) $generated@@60))
)))
 :pattern ( ($generated@@135 $generated@@136 $generated@@137))
)))
(assert  (and (= (type $generated@@139) $generated@@67) (= (type $generated@@140) $generated@@80)))
(assert (forall (($generated@@141 T@U) ($generated@@142 T@U) ) (!  (=> (and (= (type $generated@@141) $generated@@80) (= (type $generated@@142) ($generated@@79 $generated@@80 $generated@@81))) (= ($generated@@77 $generated@@141 $generated@@139 $generated@@142)  (or (= $generated@@141 $generated@@140) ($generated@@0 ($generated@@86 ($generated@@84 $generated@@142 $generated@@141) $generated@@60)))))
 :pattern ( ($generated@@77 $generated@@141 $generated@@139 $generated@@142))
)))
(assert (forall (($generated@@144 T@U) ) (!  (=> (= (type $generated@@144) $generated@@2) ($generated@@143 $generated@@144 ($generated@@78 0)))
 :pattern ( ($generated@@143 $generated@@144 ($generated@@78 0)))
)))
(assert  (and (= ($generated@@1 $generated@@147) 14) (forall (($generated@@148 T@U) ($generated@@149 T@U) ) (! (= (type ($generated@@146 $generated@@148 $generated@@149)) $generated@@67)
 :pattern ( ($generated@@146 $generated@@148 $generated@@149))
))))
(assert (forall (($generated@@150 T@U) ($generated@@151 T@U) ($generated@@152 T@U) ) (!  (=> (and (and (and (= (type $generated@@150) $generated@@67) (= (type $generated@@151) $generated@@67)) (= (type $generated@@152) $generated@@147)) ($generated@@143 $generated@@152 ($generated@@146 $generated@@150 $generated@@151))) ($generated@@145 $generated@@152))
 :pattern ( ($generated@@145 $generated@@152) ($generated@@143 $generated@@152 ($generated@@146 $generated@@150 $generated@@151)))
)))
(assert  (and (and (= ($generated@@1 $generated@@156) 15) (forall (($generated@@157 T@U) ) (! (= (type ($generated@@154 $generated@@157)) $generated@@156)
 :pattern ( ($generated@@154 $generated@@157))
))) (forall (($generated@@158 T@U) ) (! (= (type ($generated@@155 $generated@@158)) $generated@@156)
 :pattern ( ($generated@@155 $generated@@158))
))))
(assert (forall (($generated@@159 T@U) ($generated@@160 T@U) ) (!  (=> (and (and (= (type $generated@@159) $generated@@147) (= (type $generated@@160) $generated@@147)) true) (= ($generated@@153 $generated@@159 $generated@@160)  (and (= ($generated@@154 $generated@@159) ($generated@@154 $generated@@160)) (= ($generated@@155 $generated@@159) ($generated@@155 $generated@@160)))))
 :pattern ( ($generated@@153 $generated@@159 $generated@@160))
)))
(assert (forall (($generated@@163 T@U) ) (! (= (type ($generated@@161 $generated@@163)) $generated@@67)
 :pattern ( ($generated@@161 $generated@@163))
)))
(assert (forall (($generated@@164 T@U) ($generated@@165 T@U) ) (!  (=> (and (and (= (type $generated@@164) ($generated@@79 $generated@@156 $generated@@2)) (= (type $generated@@165) $generated@@67)) ($generated@@143 $generated@@164 ($generated@@161 $generated@@165))) ($generated@@162 $generated@@164))
 :pattern ( ($generated@@143 $generated@@164 ($generated@@161 $generated@@165)))
)))
(assert (forall (($generated@@167 T@U) ) (! (= (type ($generated@@166 $generated@@167)) $generated@@67)
 :pattern ( ($generated@@166 $generated@@167))
)))
(assert (forall (($generated@@168 T@U) ) (!  (=> (= (type $generated@@168) $generated@@80) (= ($generated@@143 $generated@@168 $generated@@139)  (or (= $generated@@168 $generated@@140) (= ($generated@@166 $generated@@168) $generated@@139))))
 :pattern ( ($generated@@143 $generated@@168 $generated@@139))
)))
(assert  (and (and (and (and (and (and (and (forall (($generated@@175 T@T) ($generated@@176 T@T) ) (= ($generated@@1 ($generated@@171 $generated@@175 $generated@@176)) 16)) (forall (($generated@@177 T@T) ($generated@@178 T@T) ) (! (= ($generated@@172 ($generated@@171 $generated@@177 $generated@@178)) $generated@@177)
 :pattern ( ($generated@@171 $generated@@177 $generated@@178))
))) (forall (($generated@@179 T@T) ($generated@@180 T@T) ) (! (= ($generated@@173 ($generated@@171 $generated@@179 $generated@@180)) $generated@@180)
 :pattern ( ($generated@@171 $generated@@179 $generated@@180))
))) (forall (($generated@@181 T@U) ($generated@@182 T@U) ($generated@@183 T@U) ) (! (let (($generated@@184 ($generated@@173 (type $generated@@181))))
(= (type ($generated@@169 $generated@@181 $generated@@182 $generated@@183)) $generated@@184))
 :pattern ( ($generated@@169 $generated@@181 $generated@@182 $generated@@183))
))) (forall (($generated@@185 T@U) ($generated@@186 T@U) ($generated@@187 T@U) ($generated@@188 T@U) ) (! (let (($generated@@189 (type $generated@@188)))
(let (($generated@@190 (type $generated@@186)))
(= (type ($generated@@174 $generated@@185 $generated@@186 $generated@@187 $generated@@188)) ($generated@@171 $generated@@190 $generated@@189))))
 :pattern ( ($generated@@174 $generated@@185 $generated@@186 $generated@@187 $generated@@188))
))) (forall (($generated@@191 T@U) ($generated@@192 T@U) ($generated@@193 T@U) ($generated@@194 T@U) ) (! (let (($generated@@195 ($generated@@173 (type $generated@@191))))
 (=> (= (type $generated@@194) $generated@@195) (= ($generated@@169 ($generated@@174 $generated@@191 $generated@@192 $generated@@193 $generated@@194) $generated@@192 $generated@@193) $generated@@194)))
 :weight 0
))) (and (and (forall (($generated@@196 T@U) ($generated@@197 T@U) ($generated@@198 T@U) ($generated@@199 T@U) ($generated@@200 T@U) ($generated@@201 T@U) ) (!  (or (= $generated@@198 $generated@@200) (= ($generated@@169 ($generated@@174 $generated@@197 $generated@@198 $generated@@199 $generated@@196) $generated@@200 $generated@@201) ($generated@@169 $generated@@197 $generated@@200 $generated@@201)))
 :weight 0
)) (forall (($generated@@202 T@U) ($generated@@203 T@U) ($generated@@204 T@U) ($generated@@205 T@U) ($generated@@206 T@U) ($generated@@207 T@U) ) (!  (or (= $generated@@205 $generated@@207) (= ($generated@@169 ($generated@@174 $generated@@203 $generated@@204 $generated@@205 $generated@@202) $generated@@206 $generated@@207) ($generated@@169 $generated@@203 $generated@@206 $generated@@207)))
 :weight 0
))) (forall (($generated@@208 T@U) ($generated@@209 T@U) ($generated@@210 T@U) ($generated@@211 T@U) ($generated@@212 T@U) ($generated@@213 T@U) ) (!  (or true (= ($generated@@169 ($generated@@174 $generated@@209 $generated@@210 $generated@@211 $generated@@208) $generated@@212 $generated@@213) ($generated@@169 $generated@@209 $generated@@212 $generated@@213)))
 :weight 0
)))) (forall (($generated@@214 T@U) ($generated@@215 T@U) ($generated@@216 T@U) ($generated@@217 Bool) ) (! (= (type ($generated@@170 $generated@@214 $generated@@215 $generated@@216 $generated@@217)) ($generated@@171 $generated@@80 $generated@@4))
 :pattern ( ($generated@@170 $generated@@214 $generated@@215 $generated@@216 $generated@@217))
))))
(assert (forall (($generated@@218 T@U) ($generated@@219 T@U) ($generated@@220 T@U) ($generated@@221 Bool) ($generated@@222 T@U) ($generated@@223 T@U) ) (! (let (($generated@@224 ($generated@@70 (type $generated@@223))))
 (=> (and (and (and (and (= (type $generated@@218) $generated@@80) (= (type $generated@@219) ($generated@@79 $generated@@80 $generated@@81))) (= (type $generated@@220) ($generated@@69 $generated@@4))) (= (type $generated@@222) $generated@@80)) (= (type $generated@@223) ($generated@@69 $generated@@224))) (= ($generated@@0 ($generated@@169 ($generated@@170 $generated@@218 $generated@@219 $generated@@220 $generated@@221) $generated@@222 $generated@@223))  (=> (and (not (= $generated@@222 $generated@@218)) ($generated@@0 ($generated@@86 ($generated@@84 $generated@@219 $generated@@222) $generated@@220))) $generated@@221))))
 :pattern ( ($generated@@169 ($generated@@170 $generated@@218 $generated@@219 $generated@@220 $generated@@221) $generated@@222 $generated@@223))
)))
(assert (= (type $generated@@225) $generated@@67))
(assert (forall (($generated@@226 T@U) ($generated@@227 T@U) ) (!  (=> (and (= (type $generated@@226) $generated@@80) (= (type $generated@@227) ($generated@@79 $generated@@80 $generated@@81))) (= ($generated@@77 $generated@@226 $generated@@225 $generated@@227) ($generated@@77 $generated@@226 $generated@@139 $generated@@227)))
 :pattern ( ($generated@@77 $generated@@226 $generated@@225 $generated@@227))
)))
(assert (forall (($generated@@230 T@U) ($generated@@231 T@U) ) (! (= (type ($generated@@228 $generated@@230 $generated@@231)) $generated@@147)
 :pattern ( ($generated@@228 $generated@@230 $generated@@231))
)))
(assert (forall (($generated@@232 T@U) ($generated@@233 T@U) ($generated@@234 T@U) ($generated@@235 T@U) ) (!  (=> (and (and (and (= (type $generated@@232) $generated@@67) (= (type $generated@@233) $generated@@67)) (= (type $generated@@234) $generated@@156)) (= (type $generated@@235) $generated@@156)) (= ($generated@@143 ($generated@@228 $generated@@234 $generated@@235) ($generated@@146 $generated@@232 $generated@@233))  (and ($generated@@229 $generated@@234 $generated@@232) ($generated@@229 $generated@@235 $generated@@233))))
 :pattern ( ($generated@@143 ($generated@@228 $generated@@234 $generated@@235) ($generated@@146 $generated@@232 $generated@@233)))
)))
(assert (forall (($generated@@236 T@U) ($generated@@237 T@U) ) (!  (=> (and (= (type $generated@@236) $generated@@147) (= (type $generated@@237) $generated@@147)) (= ($generated@@153 $generated@@236 $generated@@237) (= $generated@@236 $generated@@237)))
 :pattern ( ($generated@@153 $generated@@236 $generated@@237))
)))
(assert (forall (($generated@@239 T@U) ) (! (= (type ($generated@@238 $generated@@239)) $generated@@67)
 :pattern ( ($generated@@238 $generated@@239))
)))
(assert (forall (($generated@@240 T@U) ($generated@@241 T@U) ) (!  (=> (and (= (type $generated@@240) ($generated@@79 $generated@@156 $generated@@4)) (= (type $generated@@241) $generated@@67)) (= ($generated@@143 $generated@@240 ($generated@@238 $generated@@241)) (forall (($generated@@242 T@U) ) (!  (=> (and (= (type $generated@@242) $generated@@156) ($generated@@0 ($generated@@84 $generated@@240 $generated@@242))) ($generated@@229 $generated@@242 $generated@@241))
 :pattern ( ($generated@@84 $generated@@240 $generated@@242))
))))
 :pattern ( ($generated@@143 $generated@@240 ($generated@@238 $generated@@241)))
)))
(assert (forall (($generated@@244 T@U) ) (! (= (type ($generated@@243 $generated@@244)) $generated@@67)
 :pattern ( ($generated@@243 $generated@@244))
)))
(assert (forall (($generated@@245 T@U) ($generated@@246 T@U) ) (!  (=> (and (= (type $generated@@245) ($generated@@79 $generated@@156 $generated@@4)) (= (type $generated@@246) $generated@@67)) (= ($generated@@143 $generated@@245 ($generated@@243 $generated@@246)) (forall (($generated@@247 T@U) ) (!  (=> (and (= (type $generated@@247) $generated@@156) ($generated@@0 ($generated@@84 $generated@@245 $generated@@247))) ($generated@@229 $generated@@247 $generated@@246))
 :pattern ( ($generated@@84 $generated@@245 $generated@@247))
))))
 :pattern ( ($generated@@143 $generated@@245 ($generated@@243 $generated@@246)))
)))
(assert (forall (($generated@@249 T@U) ) (! (let (($generated@@250 (type $generated@@249)))
(= (type ($generated@@248 $generated@@249)) $generated@@250))
 :pattern ( ($generated@@248 $generated@@249))
)))
(assert (forall (($generated@@251 T@U) ) (! (= ($generated@@248 $generated@@251) $generated@@251)
 :pattern ( ($generated@@248 $generated@@251))
)))
(assert (forall (($generated@@254 T@U) ($generated@@255 T@U) ($generated@@256 T@U) ($generated@@257 T@U) ($generated@@258 T@U) ) (!  (=> (and (and (and (and (and (= (type $generated@@254) $generated@@67) (= (type $generated@@255) $generated@@67)) (= (type $generated@@256) $generated@@156)) (= (type $generated@@257) $generated@@156)) (= (type $generated@@258) ($generated@@79 $generated@@80 $generated@@81))) ($generated@@252 $generated@@258)) (= ($generated@@77 ($generated@@228 $generated@@256 $generated@@257) ($generated@@146 $generated@@254 $generated@@255) $generated@@258)  (and ($generated@@253 $generated@@256 $generated@@254 $generated@@258) ($generated@@253 $generated@@257 $generated@@255 $generated@@258))))
 :pattern ( ($generated@@77 ($generated@@228 $generated@@256 $generated@@257) ($generated@@146 $generated@@254 $generated@@255) $generated@@258))
)))
(assert (forall (($generated@@260 T@U) ) (! (= (type ($generated@@259 $generated@@260)) $generated@@71)
 :pattern ( ($generated@@259 $generated@@260))
)))
(assert (forall (($generated@@261 T@U) ) (!  (=> (= (type $generated@@261) $generated@@147) (= ($generated@@145 $generated@@261) (= ($generated@@259 $generated@@261) $generated@@61)))
 :pattern ( ($generated@@145 $generated@@261))
)))
(assert (forall (($generated@@262 T@U) ) (!  (=> (and (= (type $generated@@262) $generated@@147) ($generated@@145 $generated@@262)) (exists (($generated@@263 T@U) ($generated@@264 T@U) ) (!  (and (and (= (type $generated@@263) $generated@@156) (= (type $generated@@264) $generated@@156)) (= $generated@@262 ($generated@@228 $generated@@263 $generated@@264)))
 :no-pattern (type $generated@@263)
 :no-pattern (type $generated@@264)
 :no-pattern ($generated $generated@@263)
 :no-pattern ($generated@@0 $generated@@263)
 :no-pattern ($generated $generated@@264)
 :no-pattern ($generated@@0 $generated@@264)
)))
 :pattern ( ($generated@@145 $generated@@262))
)))
(assert  (and (and (forall (($generated@@269 T@T) ) (= ($generated@@1 ($generated@@267 $generated@@269)) 17)) (forall (($generated@@270 T@T) ) (! (= ($generated@@268 ($generated@@267 $generated@@270)) $generated@@270)
 :pattern ( ($generated@@267 $generated@@270))
))) (forall (($generated@@271 T@T) ) (! (= (type ($generated@@265 $generated@@271)) ($generated@@267 $generated@@271))
 :pattern ( ($generated@@265 $generated@@271))
))))
(assert (forall (($generated@@272 T@T) ) (! (= ($generated@@266 ($generated@@265 $generated@@272)) 0)
 :pattern ( ($generated@@265 $generated@@272))
)))
(assert (forall (($generated@@274 T@U) ) (! (= (type ($generated@@273 $generated@@274)) $generated@@156)
 :pattern ( ($generated@@273 $generated@@274))
)))
(assert (forall (($generated@@275 T@U) ($generated@@276 T@U) ($generated@@277 T@U) ) (!  (=> (and (= (type $generated@@276) $generated@@67) (= (type $generated@@277) ($generated@@79 $generated@@80 $generated@@81))) (= ($generated@@253 ($generated@@273 $generated@@275) $generated@@276 $generated@@277) ($generated@@77 $generated@@275 $generated@@276 $generated@@277)))
 :pattern ( ($generated@@253 ($generated@@273 $generated@@275) $generated@@276 $generated@@277))
)))
(assert (forall (($generated@@278 T@U) ($generated@@279 T@U) ($generated@@280 T@U) ($generated@@281 T@U) ) (!  (=> (and (and (and (and (and (= (type $generated@@278) ($generated@@79 $generated@@80 $generated@@81)) (= (type $generated@@279) ($generated@@79 $generated@@80 $generated@@81))) (= (type $generated@@280) $generated@@156)) (= (type $generated@@281) $generated@@67)) ($generated@@135 $generated@@278 $generated@@279)) ($generated@@253 $generated@@280 $generated@@281 $generated@@278)) ($generated@@253 $generated@@280 $generated@@281 $generated@@279))
 :pattern ( ($generated@@135 $generated@@278 $generated@@279) ($generated@@253 $generated@@280 $generated@@281 $generated@@278))
)))
(assert (forall (($generated@@282 T@U) ($generated@@283 T@U) ($generated@@284 T@U) ($generated@@285 T@U) ) (!  (=> (and (and (and (and (= (type $generated@@282) ($generated@@79 $generated@@80 $generated@@81)) (= (type $generated@@283) ($generated@@79 $generated@@80 $generated@@81))) (= (type $generated@@285) $generated@@67)) ($generated@@135 $generated@@282 $generated@@283)) ($generated@@77 $generated@@284 $generated@@285 $generated@@282)) ($generated@@77 $generated@@284 $generated@@285 $generated@@283))
 :pattern ( ($generated@@135 $generated@@282 $generated@@283) ($generated@@77 $generated@@284 $generated@@285 $generated@@282))
)))
(assert (forall (($generated@@288 T@T) ) (! (= (type ($generated@@287 $generated@@288)) ($generated@@79 $generated@@288 $generated@@2))
 :pattern ( ($generated@@287 $generated@@288))
)))
(assert (forall (($generated@@289 T@U) ) (! (let (($generated@@290 ($generated@@82 (type $generated@@289))))
 (=> (= (type $generated@@289) ($generated@@79 $generated@@290 $generated@@2)) (and (= (= ($generated@@286 $generated@@289) 0) (= $generated@@289 ($generated@@287 $generated@@290))) (=> (not (= ($generated@@286 $generated@@289) 0)) (exists (($generated@@291 T@U) ) (!  (and (= (type $generated@@291) $generated@@290) (< 0 ($generated ($generated@@84 $generated@@289 $generated@@291))))
 :no-pattern (type $generated@@291)
 :no-pattern ($generated $generated@@291)
 :no-pattern ($generated@@0 $generated@@291)
))))))
 :pattern ( ($generated@@286 $generated@@289))
)))
(assert  (and (and (and (and (forall (($generated@@297 T@T) ($generated@@298 T@T) ) (= ($generated@@1 ($generated@@294 $generated@@297 $generated@@298)) 18)) (forall (($generated@@299 T@T) ($generated@@300 T@T) ) (! (= ($generated@@295 ($generated@@294 $generated@@299 $generated@@300)) $generated@@299)
 :pattern ( ($generated@@294 $generated@@299 $generated@@300))
))) (forall (($generated@@301 T@T) ($generated@@302 T@T) ) (! (= ($generated@@296 ($generated@@294 $generated@@301 $generated@@302)) $generated@@302)
 :pattern ( ($generated@@294 $generated@@301 $generated@@302))
))) (forall (($generated@@303 T@U) ) (! (let (($generated@@304 ($generated@@295 (type $generated@@303))))
(= (type ($generated@@292 $generated@@303)) ($generated@@79 $generated@@304 $generated@@4)))
 :pattern ( ($generated@@292 $generated@@303))
))) (forall (($generated@@305 T@T) ($generated@@306 T@T) ) (! (= (type ($generated@@293 $generated@@305 $generated@@306)) ($generated@@294 $generated@@305 $generated@@306))
 :pattern ( ($generated@@293 $generated@@305 $generated@@306))
))))
(assert (forall (($generated@@307 T@U) ($generated@@308 T@T) ) (! (let (($generated@@309 (type $generated@@307)))
 (not ($generated@@0 ($generated@@84 ($generated@@292 ($generated@@293 $generated@@309 $generated@@308)) $generated@@307))))
 :pattern ( (let (($generated@@309 (type $generated@@307)))
($generated@@84 ($generated@@292 ($generated@@293 $generated@@309 $generated@@308)) $generated@@307)))
)))
(assert  (and (and (and (and (forall (($generated@@315 T@T) ($generated@@316 T@T) ) (= ($generated@@1 ($generated@@312 $generated@@315 $generated@@316)) 19)) (forall (($generated@@317 T@T) ($generated@@318 T@T) ) (! (= ($generated@@313 ($generated@@312 $generated@@317 $generated@@318)) $generated@@317)
 :pattern ( ($generated@@312 $generated@@317 $generated@@318))
))) (forall (($generated@@319 T@T) ($generated@@320 T@T) ) (! (= ($generated@@314 ($generated@@312 $generated@@319 $generated@@320)) $generated@@320)
 :pattern ( ($generated@@312 $generated@@319 $generated@@320))
))) (forall (($generated@@321 T@U) ) (! (let (($generated@@322 ($generated@@313 (type $generated@@321))))
(= (type ($generated@@310 $generated@@321)) ($generated@@79 $generated@@322 $generated@@4)))
 :pattern ( ($generated@@310 $generated@@321))
))) (forall (($generated@@323 T@T) ($generated@@324 T@T) ) (! (= (type ($generated@@311 $generated@@323 $generated@@324)) ($generated@@312 $generated@@323 $generated@@324))
 :pattern ( ($generated@@311 $generated@@323 $generated@@324))
))))
(assert (forall (($generated@@325 T@U) ($generated@@326 T@T) ) (! (let (($generated@@327 (type $generated@@325)))
 (not ($generated@@0 ($generated@@84 ($generated@@310 ($generated@@311 $generated@@327 $generated@@326)) $generated@@325))))
 :pattern ( (let (($generated@@327 (type $generated@@325)))
($generated@@84 ($generated@@310 ($generated@@311 $generated@@327 $generated@@326)) $generated@@325)))
)))
(assert (forall (($generated@@328 T@U) ) (! (let (($generated@@329 ($generated@@82 (type $generated@@328))))
 (=> (= (type $generated@@328) ($generated@@79 $generated@@329 $generated@@2)) (= ($generated@@162 $generated@@328) (forall (($generated@@330 T@U) ) (!  (=> (= (type $generated@@330) $generated@@329) (and (<= 0 ($generated ($generated@@84 $generated@@328 $generated@@330))) (<= ($generated ($generated@@84 $generated@@328 $generated@@330)) ($generated@@286 $generated@@328))))
 :pattern ( ($generated@@84 $generated@@328 $generated@@330))
)))))
 :pattern ( ($generated@@162 $generated@@328))
)))
(assert (forall (($generated@@332 T@T) ($generated@@333 T@U) ) (! (= (type ($generated@@331 $generated@@332 $generated@@333)) $generated@@332)
 :pattern ( ($generated@@331 $generated@@332 $generated@@333))
)))
(assert (forall (($generated@@334 T@U) ) (!  (=> (and (= (type $generated@@334) $generated@@156) ($generated@@229 $generated@@334 $generated@@225)) (and (= ($generated@@273 ($generated@@331 $generated@@80 $generated@@334)) $generated@@334) ($generated@@143 ($generated@@331 $generated@@80 $generated@@334) $generated@@225)))
 :pattern ( ($generated@@229 $generated@@334 $generated@@225))
)))
(assert (forall (($generated@@335 T@U) ) (!  (=> (and (= (type $generated@@335) $generated@@156) ($generated@@229 $generated@@335 $generated@@139)) (and (= ($generated@@273 ($generated@@331 $generated@@80 $generated@@335)) $generated@@335) ($generated@@143 ($generated@@331 $generated@@80 $generated@@335) $generated@@139)))
 :pattern ( ($generated@@229 $generated@@335 $generated@@139))
)))
(assert (forall (($generated@@336 T@U) ) (!  (=> (= (type $generated@@336) $generated@@80) (= ($generated@@143 $generated@@336 $generated@@225)  (and ($generated@@143 $generated@@336 $generated@@139) (not (= $generated@@336 $generated@@140)))))
 :pattern ( ($generated@@143 $generated@@336 $generated@@225))
)))
(assert (forall (($generated@@337 T@U) ) (! (let (($generated@@338 ($generated@@296 (type $generated@@337))))
(let (($generated@@339 ($generated@@295 (type $generated@@337))))
 (=> (= (type $generated@@337) ($generated@@294 $generated@@339 $generated@@338)) (or (= $generated@@337 ($generated@@293 $generated@@339 $generated@@338)) (exists (($generated@@340 T@U) ) (!  (and (= (type $generated@@340) $generated@@339) ($generated@@0 ($generated@@84 ($generated@@292 $generated@@337) $generated@@340)))
 :no-pattern (type $generated@@340)
 :no-pattern ($generated $generated@@340)
 :no-pattern ($generated@@0 $generated@@340)
))))))
 :pattern ( ($generated@@292 $generated@@337))
)))
(assert (forall (($generated@@342 T@U) ) (! (let (($generated@@343 ($generated@@296 (type $generated@@342))))
(= (type ($generated@@341 $generated@@342)) ($generated@@79 $generated@@343 $generated@@4)))
 :pattern ( ($generated@@341 $generated@@342))
)))
(assert (forall (($generated@@344 T@U) ) (! (let (($generated@@345 ($generated@@296 (type $generated@@344))))
(let (($generated@@346 ($generated@@295 (type $generated@@344))))
 (=> (= (type $generated@@344) ($generated@@294 $generated@@346 $generated@@345)) (or (= $generated@@344 ($generated@@293 $generated@@346 $generated@@345)) (exists (($generated@@347 T@U) ) (!  (and (= (type $generated@@347) $generated@@345) ($generated@@0 ($generated@@84 ($generated@@341 $generated@@344) $generated@@347)))
 :no-pattern (type $generated@@347)
 :no-pattern ($generated $generated@@347)
 :no-pattern ($generated@@0 $generated@@347)
))))))
 :pattern ( ($generated@@341 $generated@@344))
)))
(assert (forall (($generated@@348 T@U) ) (! (let (($generated@@349 ($generated@@314 (type $generated@@348))))
(let (($generated@@350 ($generated@@313 (type $generated@@348))))
 (=> (= (type $generated@@348) ($generated@@312 $generated@@350 $generated@@349)) (or (= $generated@@348 ($generated@@311 $generated@@350 $generated@@349)) (exists (($generated@@351 T@U) ) (!  (and (= (type $generated@@351) $generated@@350) ($generated@@0 ($generated@@84 ($generated@@310 $generated@@348) $generated@@351)))
 :no-pattern (type $generated@@351)
 :no-pattern ($generated $generated@@351)
 :no-pattern ($generated@@0 $generated@@351)
))))))
 :pattern ( ($generated@@310 $generated@@348))
)))
(assert (forall (($generated@@353 T@U) ) (! (let (($generated@@354 ($generated@@314 (type $generated@@353))))
(= (type ($generated@@352 $generated@@353)) ($generated@@79 $generated@@354 $generated@@4)))
 :pattern ( ($generated@@352 $generated@@353))
)))
(assert (forall (($generated@@355 T@U) ) (! (let (($generated@@356 ($generated@@314 (type $generated@@355))))
(let (($generated@@357 ($generated@@313 (type $generated@@355))))
 (=> (= (type $generated@@355) ($generated@@312 $generated@@357 $generated@@356)) (or (= $generated@@355 ($generated@@311 $generated@@357 $generated@@356)) (exists (($generated@@358 T@U) ) (!  (and (= (type $generated@@358) $generated@@356) ($generated@@0 ($generated@@84 ($generated@@352 $generated@@355) $generated@@358)))
 :no-pattern (type $generated@@358)
 :no-pattern ($generated $generated@@358)
 :no-pattern ($generated@@0 $generated@@358)
))))))
 :pattern ( ($generated@@352 $generated@@355))
)))
(assert (forall (($generated@@359 T@U) ($generated@@360 T@U) ) (!  (=> (and (= (type $generated@@359) ($generated@@79 $generated@@156 $generated@@2)) (= (type $generated@@360) $generated@@67)) (= ($generated@@143 $generated@@359 ($generated@@161 $generated@@360)) (forall (($generated@@361 T@U) ) (!  (=> (and (= (type $generated@@361) $generated@@156) (< 0 ($generated ($generated@@84 $generated@@359 $generated@@361)))) ($generated@@229 $generated@@361 $generated@@360))
 :pattern ( ($generated@@84 $generated@@359 $generated@@361))
))))
 :pattern ( ($generated@@143 $generated@@359 ($generated@@161 $generated@@360)))
)))
(assert (forall (($generated@@362 T@U) ($generated@@363 T@U) ($generated@@364 T@U) ) (!  (=> (and (and (= (type $generated@@362) ($generated@@79 $generated@@156 $generated@@4)) (= (type $generated@@363) $generated@@67)) (= (type $generated@@364) ($generated@@79 $generated@@80 $generated@@81))) (= ($generated@@77 $generated@@362 ($generated@@238 $generated@@363) $generated@@364) (forall (($generated@@365 T@U) ) (!  (=> (and (= (type $generated@@365) $generated@@156) ($generated@@0 ($generated@@84 $generated@@362 $generated@@365))) ($generated@@253 $generated@@365 $generated@@363 $generated@@364))
 :pattern ( ($generated@@84 $generated@@362 $generated@@365))
))))
 :pattern ( ($generated@@77 $generated@@362 ($generated@@238 $generated@@363) $generated@@364))
)))
(assert (forall (($generated@@366 T@U) ($generated@@367 T@U) ($generated@@368 T@U) ) (!  (=> (and (and (= (type $generated@@366) ($generated@@79 $generated@@156 $generated@@4)) (= (type $generated@@367) $generated@@67)) (= (type $generated@@368) ($generated@@79 $generated@@80 $generated@@81))) (= ($generated@@77 $generated@@366 ($generated@@243 $generated@@367) $generated@@368) (forall (($generated@@369 T@U) ) (!  (=> (and (= (type $generated@@369) $generated@@156) ($generated@@0 ($generated@@84 $generated@@366 $generated@@369))) ($generated@@253 $generated@@369 $generated@@367 $generated@@368))
 :pattern ( ($generated@@84 $generated@@366 $generated@@369))
))))
 :pattern ( ($generated@@77 $generated@@366 ($generated@@243 $generated@@367) $generated@@368))
)))
(assert (forall (($generated@@370 T@U) ) (! (let (($generated@@371 (type $generated@@370)))
(= ($generated ($generated@@84 ($generated@@287 $generated@@371) $generated@@370)) 0))
 :pattern ( (let (($generated@@371 (type $generated@@370)))
($generated@@84 ($generated@@287 $generated@@371) $generated@@370)))
)))
(assert  (and (forall (($generated@@374 T@U) ) (! (= (type ($generated@@372 $generated@@374)) ($generated@@79 $generated@@156 $generated@@4))
 :pattern ( ($generated@@372 $generated@@374))
)) (forall (($generated@@375 T@U) ) (! (let (($generated@@376 ($generated@@296 (type $generated@@375))))
(let (($generated@@377 ($generated@@295 (type $generated@@375))))
(= (type ($generated@@373 $generated@@375)) ($generated@@79 $generated@@377 $generated@@376))))
 :pattern ( ($generated@@373 $generated@@375))
))))
(assert (forall (($generated@@378 T@U) ($generated@@379 T@U) ) (!  (=> (and (= (type $generated@@378) ($generated@@294 $generated@@156 $generated@@156)) (= (type $generated@@379) $generated@@156)) (= ($generated@@0 ($generated@@84 ($generated@@372 $generated@@378) $generated@@379))  (and ($generated@@0 ($generated@@84 ($generated@@292 $generated@@378) ($generated@@154 ($generated@@331 $generated@@147 $generated@@379)))) (= ($generated@@84 ($generated@@373 $generated@@378) ($generated@@154 ($generated@@331 $generated@@147 $generated@@379))) ($generated@@155 ($generated@@331 $generated@@147 $generated@@379))))))
 :pattern ( ($generated@@84 ($generated@@372 $generated@@378) $generated@@379))
)))
(assert  (and (forall (($generated@@382 T@U) ) (! (= (type ($generated@@380 $generated@@382)) ($generated@@79 $generated@@156 $generated@@4))
 :pattern ( ($generated@@380 $generated@@382))
)) (forall (($generated@@383 T@U) ) (! (let (($generated@@384 ($generated@@314 (type $generated@@383))))
(let (($generated@@385 ($generated@@313 (type $generated@@383))))
(= (type ($generated@@381 $generated@@383)) ($generated@@79 $generated@@385 $generated@@384))))
 :pattern ( ($generated@@381 $generated@@383))
))))
(assert (forall (($generated@@386 T@U) ($generated@@387 T@U) ) (!  (=> (and (= (type $generated@@386) ($generated@@312 $generated@@156 $generated@@156)) (= (type $generated@@387) $generated@@156)) (= ($generated@@0 ($generated@@84 ($generated@@380 $generated@@386) $generated@@387))  (and ($generated@@0 ($generated@@84 ($generated@@310 $generated@@386) ($generated@@154 ($generated@@331 $generated@@147 $generated@@387)))) (= ($generated@@84 ($generated@@381 $generated@@386) ($generated@@154 ($generated@@331 $generated@@147 $generated@@387))) ($generated@@155 ($generated@@331 $generated@@147 $generated@@387))))))
 :pattern ( ($generated@@84 ($generated@@380 $generated@@386) $generated@@387))
)))
(assert (forall (($generated@@388 T@U) ($generated@@389 T@U) ) (! (let (($generated@@390 (type $generated@@389)))
(let (($generated@@391 ($generated@@295 (type $generated@@388))))
 (=> (= (type $generated@@388) ($generated@@294 $generated@@391 $generated@@390)) (= ($generated@@0 ($generated@@84 ($generated@@341 $generated@@388) $generated@@389)) (exists (($generated@@392 T@U) ) (!  (and (= (type $generated@@392) $generated@@391) (and ($generated@@0 ($generated@@84 ($generated@@292 $generated@@388) $generated@@392)) (= $generated@@389 ($generated@@84 ($generated@@373 $generated@@388) $generated@@392))))
 :pattern ( ($generated@@84 ($generated@@292 $generated@@388) $generated@@392))
 :pattern ( ($generated@@84 ($generated@@373 $generated@@388) $generated@@392))
))))))
 :pattern ( ($generated@@84 ($generated@@341 $generated@@388) $generated@@389))
)))
(assert (forall (($generated@@393 T@U) ($generated@@394 T@U) ) (! (let (($generated@@395 (type $generated@@394)))
(let (($generated@@396 ($generated@@313 (type $generated@@393))))
 (=> (= (type $generated@@393) ($generated@@312 $generated@@396 $generated@@395)) (= ($generated@@0 ($generated@@84 ($generated@@352 $generated@@393) $generated@@394)) (exists (($generated@@397 T@U) ) (!  (and (= (type $generated@@397) $generated@@396) (and ($generated@@0 ($generated@@84 ($generated@@310 $generated@@393) $generated@@397)) (= $generated@@394 ($generated@@84 ($generated@@381 $generated@@393) $generated@@397))))
 :pattern ( ($generated@@84 ($generated@@310 $generated@@393) $generated@@397))
 :pattern ( ($generated@@84 ($generated@@381 $generated@@393) $generated@@397))
))))))
 :pattern ( ($generated@@84 ($generated@@352 $generated@@393) $generated@@394))
)))
(assert (forall (($generated@@399 T@U) ($generated@@400 T@U) ) (! (= (type ($generated@@398 $generated@@399 $generated@@400)) $generated@@67)
 :pattern ( ($generated@@398 $generated@@399 $generated@@400))
)))
(assert (forall (($generated@@401 T@U) ($generated@@402 T@U) ($generated@@403 T@U) ($generated@@404 T@U) ) (!  (=> (and (and (and (= (type $generated@@401) ($generated@@294 $generated@@156 $generated@@156)) (= (type $generated@@402) $generated@@67)) (= (type $generated@@403) $generated@@67)) (= (type $generated@@404) ($generated@@79 $generated@@80 $generated@@81))) (= ($generated@@77 $generated@@401 ($generated@@398 $generated@@402 $generated@@403) $generated@@404) (forall (($generated@@405 T@U) ) (!  (=> (and (= (type $generated@@405) $generated@@156) ($generated@@0 ($generated@@84 ($generated@@292 $generated@@401) $generated@@405))) (and ($generated@@253 ($generated@@84 ($generated@@373 $generated@@401) $generated@@405) $generated@@403 $generated@@404) ($generated@@253 $generated@@405 $generated@@402 $generated@@404)))
 :pattern ( ($generated@@84 ($generated@@373 $generated@@401) $generated@@405))
 :pattern ( ($generated@@84 ($generated@@292 $generated@@401) $generated@@405))
))))
 :pattern ( ($generated@@77 $generated@@401 ($generated@@398 $generated@@402 $generated@@403) $generated@@404))
)))
(assert (forall (($generated@@407 T@U) ($generated@@408 T@U) ) (! (= (type ($generated@@406 $generated@@407 $generated@@408)) $generated@@67)
 :pattern ( ($generated@@406 $generated@@407 $generated@@408))
)))
(assert (forall (($generated@@409 T@U) ($generated@@410 T@U) ($generated@@411 T@U) ($generated@@412 T@U) ) (!  (=> (and (and (and (= (type $generated@@409) ($generated@@312 $generated@@156 $generated@@156)) (= (type $generated@@410) $generated@@67)) (= (type $generated@@411) $generated@@67)) (= (type $generated@@412) ($generated@@79 $generated@@80 $generated@@81))) (= ($generated@@77 $generated@@409 ($generated@@406 $generated@@410 $generated@@411) $generated@@412) (forall (($generated@@413 T@U) ) (!  (=> (and (= (type $generated@@413) $generated@@156) ($generated@@0 ($generated@@84 ($generated@@310 $generated@@409) $generated@@413))) (and ($generated@@253 ($generated@@84 ($generated@@381 $generated@@409) $generated@@413) $generated@@411 $generated@@412) ($generated@@253 $generated@@413 $generated@@410 $generated@@412)))
 :pattern ( ($generated@@84 ($generated@@381 $generated@@409) $generated@@413))
 :pattern ( ($generated@@84 ($generated@@310 $generated@@409) $generated@@413))
))))
 :pattern ( ($generated@@77 $generated@@409 ($generated@@406 $generated@@410 $generated@@411) $generated@@412))
)))
(assert (forall (($generated@@414 T@U) ($generated@@415 T@U) ($generated@@416 T@U) ) (!  (=> (and (and (and (and (= (type $generated@@414) ($generated@@79 $generated@@80 $generated@@81)) (= (type $generated@@415) ($generated@@79 $generated@@80 $generated@@81))) (= (type $generated@@416) ($generated@@79 $generated@@80 $generated@@81))) (not (= $generated@@414 $generated@@416))) (and ($generated@@135 $generated@@414 $generated@@415) ($generated@@135 $generated@@415 $generated@@416))) ($generated@@135 $generated@@414 $generated@@416))
 :pattern ( ($generated@@135 $generated@@414 $generated@@415) ($generated@@135 $generated@@415 $generated@@416))
)))
(assert (forall (($generated@@418 T@T) ) (! (= (type ($generated@@417 $generated@@418)) ($generated@@79 $generated@@418 $generated@@4))
 :pattern ( ($generated@@417 $generated@@418))
)))
(assert (forall (($generated@@419 T@U) ) (! (let (($generated@@420 ($generated@@314 (type $generated@@419))))
(let (($generated@@421 ($generated@@313 (type $generated@@419))))
 (=> (= (type $generated@@419) ($generated@@312 $generated@@421 $generated@@420)) (= (= $generated@@419 ($generated@@311 $generated@@421 $generated@@420)) (= ($generated@@310 $generated@@419) ($generated@@417 $generated@@421))))))
 :pattern ( ($generated@@310 $generated@@419))
)))
(assert (forall (($generated@@422 T@U) ) (! (let (($generated@@423 ($generated@@314 (type $generated@@422))))
(let (($generated@@424 ($generated@@313 (type $generated@@422))))
 (=> (= (type $generated@@422) ($generated@@312 $generated@@424 $generated@@423)) (= (= $generated@@422 ($generated@@311 $generated@@424 $generated@@423)) (= ($generated@@352 $generated@@422) ($generated@@417 $generated@@423))))))
 :pattern ( ($generated@@352 $generated@@422))
)))
(assert (forall (($generated@@425 T@U) ) (! (let (($generated@@426 ($generated@@314 (type $generated@@425))))
(let (($generated@@427 ($generated@@313 (type $generated@@425))))
 (=> (= (type $generated@@425) ($generated@@312 $generated@@427 $generated@@426)) (= (= $generated@@425 ($generated@@311 $generated@@427 $generated@@426)) (= ($generated@@380 $generated@@425) ($generated@@417 $generated@@156))))))
 :pattern ( ($generated@@380 $generated@@425))
)))
(assert (forall (($generated@@428 T@U) ) (! (let (($generated@@429 ($generated@@296 (type $generated@@428))))
(let (($generated@@430 ($generated@@295 (type $generated@@428))))
 (=> (= (type $generated@@428) ($generated@@294 $generated@@430 $generated@@429)) (or (= $generated@@428 ($generated@@293 $generated@@430 $generated@@429)) (exists (($generated@@431 T@U) ($generated@@432 T@U) ) (!  (and (and (= (type $generated@@431) $generated@@156) (= (type $generated@@432) $generated@@156)) ($generated@@0 ($generated@@84 ($generated@@372 $generated@@428) ($generated@@273 ($generated@@228 $generated@@431 $generated@@432)))))
 :no-pattern (type $generated@@431)
 :no-pattern (type $generated@@432)
 :no-pattern ($generated $generated@@431)
 :no-pattern ($generated@@0 $generated@@431)
 :no-pattern ($generated $generated@@432)
 :no-pattern ($generated@@0 $generated@@432)
))))))
 :pattern ( ($generated@@372 $generated@@428))
)))
(assert (forall (($generated@@433 T@U) ) (! (let (($generated@@434 ($generated@@314 (type $generated@@433))))
(let (($generated@@435 ($generated@@313 (type $generated@@433))))
 (=> (= (type $generated@@433) ($generated@@312 $generated@@435 $generated@@434)) (or (= $generated@@433 ($generated@@311 $generated@@435 $generated@@434)) (exists (($generated@@436 T@U) ($generated@@437 T@U) ) (!  (and (and (= (type $generated@@436) $generated@@156) (= (type $generated@@437) $generated@@156)) ($generated@@0 ($generated@@84 ($generated@@380 $generated@@433) ($generated@@273 ($generated@@228 $generated@@436 $generated@@437)))))
 :no-pattern (type $generated@@436)
 :no-pattern (type $generated@@437)
 :no-pattern ($generated $generated@@436)
 :no-pattern ($generated@@0 $generated@@436)
 :no-pattern ($generated $generated@@437)
 :no-pattern ($generated@@0 $generated@@437)
))))))
 :pattern ( ($generated@@380 $generated@@433))
)))
(assert (forall (($generated@@438 T@U) ) (!  (=> (and (= (type $generated@@438) $generated@@156) ($generated@@229 $generated@@438 $generated@@46)) (and (= ($generated@@273 ($generated@@331 $generated@@2 $generated@@438)) $generated@@438) ($generated@@143 ($generated@@331 $generated@@2 $generated@@438) $generated@@46)))
 :pattern ( ($generated@@229 $generated@@438 $generated@@46))
)))
(assert (forall (($generated@@439 T@U) ) (!  (=> (and (= (type $generated@@439) $generated@@156) ($generated@@229 $generated@@439 $generated@@47)) (and (= ($generated@@273 ($generated@@331 $generated@@3 $generated@@439)) $generated@@439) ($generated@@143 ($generated@@331 $generated@@3 $generated@@439) $generated@@47)))
 :pattern ( ($generated@@229 $generated@@439 $generated@@47))
)))
(assert (forall (($generated@@440 T@U) ) (!  (=> (and (= (type $generated@@440) $generated@@156) ($generated@@229 $generated@@440 $generated@@44)) (and (= ($generated@@273 ($generated@@331 $generated@@4 $generated@@440)) $generated@@440) ($generated@@143 ($generated@@331 $generated@@4 $generated@@440) $generated@@44)))
 :pattern ( ($generated@@229 $generated@@440 $generated@@44))
)))
(assert (= ($generated@@1 $generated@@441) 20))
(assert (forall (($generated@@442 T@U) ) (!  (=> (and (= (type $generated@@442) $generated@@156) ($generated@@229 $generated@@442 $generated@@45)) (and (= ($generated@@273 ($generated@@331 $generated@@441 $generated@@442)) $generated@@442) ($generated@@143 ($generated@@331 $generated@@441 $generated@@442) $generated@@45)))
 :pattern ( ($generated@@229 $generated@@442 $generated@@45))
)))
(assert (forall (($generated@@443 T@U) ($generated@@444 T@U) ) (!  (=> (= (type $generated@@444) $generated@@67) (= ($generated@@229 ($generated@@273 $generated@@443) $generated@@444) ($generated@@143 $generated@@443 $generated@@444)))
 :pattern ( ($generated@@229 ($generated@@273 $generated@@443) $generated@@444))
)))
(assert (forall (($generated@@445 T@U) ) (! (let (($generated@@446 ($generated@@82 (type $generated@@445))))
 (=> (= (type $generated@@445) ($generated@@79 $generated@@446 $generated@@2)) (<= 0 ($generated@@286 $generated@@445))))
 :pattern ( ($generated@@286 $generated@@445))
)))
(assert (forall (($generated@@447 T@U) ) (! (let (($generated@@448 ($generated@@268 (type $generated@@447))))
 (=> (= (type $generated@@447) ($generated@@267 $generated@@448)) (<= 0 ($generated@@266 $generated@@447))))
 :pattern ( ($generated@@266 $generated@@447))
)))
(assert (forall (($generated@@450 T@U) ) (! (= (type ($generated@@449 $generated@@450)) $generated@@67)
 :pattern ( ($generated@@449 $generated@@450))
)))
(assert (forall (($generated@@451 T@U) ($generated@@452 T@U) ) (!  (=> (and (= (type $generated@@451) $generated@@67) (= (type $generated@@452) $generated@@67)) (= ($generated@@449 ($generated@@398 $generated@@451 $generated@@452)) $generated@@451))
 :pattern ( ($generated@@398 $generated@@451 $generated@@452))
)))
(assert (forall (($generated@@454 T@U) ) (! (= (type ($generated@@453 $generated@@454)) $generated@@67)
 :pattern ( ($generated@@453 $generated@@454))
)))
(assert (forall (($generated@@455 T@U) ($generated@@456 T@U) ) (!  (=> (and (= (type $generated@@455) $generated@@67) (= (type $generated@@456) $generated@@67)) (= ($generated@@453 ($generated@@398 $generated@@455 $generated@@456)) $generated@@456))
 :pattern ( ($generated@@398 $generated@@455 $generated@@456))
)))
(assert (forall (($generated@@457 T@U) ($generated@@458 T@U) ) (!  (=> (and (= (type $generated@@457) $generated@@67) (= (type $generated@@458) $generated@@67)) (= ($generated@@75 ($generated@@398 $generated@@457 $generated@@458)) $generated@@58))
 :pattern ( ($generated@@398 $generated@@457 $generated@@458))
)))
(assert (forall (($generated@@460 T@U) ) (! (= (type ($generated@@459 $generated@@460)) $generated@@67)
 :pattern ( ($generated@@459 $generated@@460))
)))
(assert (forall (($generated@@461 T@U) ($generated@@462 T@U) ) (!  (=> (and (= (type $generated@@461) $generated@@67) (= (type $generated@@462) $generated@@67)) (= ($generated@@459 ($generated@@406 $generated@@461 $generated@@462)) $generated@@461))
 :pattern ( ($generated@@406 $generated@@461 $generated@@462))
)))
(assert (forall (($generated@@464 T@U) ) (! (= (type ($generated@@463 $generated@@464)) $generated@@67)
 :pattern ( ($generated@@463 $generated@@464))
)))
(assert (forall (($generated@@465 T@U) ($generated@@466 T@U) ) (!  (=> (and (= (type $generated@@465) $generated@@67) (= (type $generated@@466) $generated@@67)) (= ($generated@@463 ($generated@@406 $generated@@465 $generated@@466)) $generated@@466))
 :pattern ( ($generated@@406 $generated@@465 $generated@@466))
)))
(assert (forall (($generated@@467 T@U) ($generated@@468 T@U) ) (!  (=> (and (= (type $generated@@467) $generated@@67) (= (type $generated@@468) $generated@@67)) (= ($generated@@75 ($generated@@406 $generated@@467 $generated@@468)) $generated@@59))
 :pattern ( ($generated@@406 $generated@@467 $generated@@468))
)))
(assert (forall (($generated@@469 T@U) ($generated@@470 T@U) ) (!  (=> (and (= (type $generated@@469) $generated@@156) (= (type $generated@@470) $generated@@156)) (= ($generated@@259 ($generated@@228 $generated@@469 $generated@@470)) $generated@@61))
 :pattern ( ($generated@@228 $generated@@469 $generated@@470))
)))
(assert (forall (($generated@@472 T@U) ) (! (= (type ($generated@@471 $generated@@472)) $generated@@67)
 :pattern ( ($generated@@471 $generated@@472))
)))
(assert (forall (($generated@@473 T@U) ($generated@@474 T@U) ) (!  (=> (and (= (type $generated@@473) $generated@@67) (= (type $generated@@474) $generated@@67)) (= ($generated@@471 ($generated@@146 $generated@@473 $generated@@474)) $generated@@473))
 :pattern ( ($generated@@146 $generated@@473 $generated@@474))
)))
(assert (forall (($generated@@476 T@U) ) (! (= (type ($generated@@475 $generated@@476)) $generated@@67)
 :pattern ( ($generated@@475 $generated@@476))
)))
(assert (forall (($generated@@477 T@U) ($generated@@478 T@U) ) (!  (=> (and (= (type $generated@@477) $generated@@67) (= (type $generated@@478) $generated@@67)) (= ($generated@@475 ($generated@@146 $generated@@477 $generated@@478)) $generated@@478))
 :pattern ( ($generated@@146 $generated@@477 $generated@@478))
)))
(assert (forall (($generated@@479 T@U) ($generated@@480 T@U) ) (!  (=> (and (= (type $generated@@479) $generated@@156) (= (type $generated@@480) $generated@@156)) (= ($generated@@154 ($generated@@228 $generated@@479 $generated@@480)) $generated@@479))
 :pattern ( ($generated@@228 $generated@@479 $generated@@480))
)))
(assert (forall (($generated@@481 T@U) ($generated@@482 T@U) ) (!  (=> (and (= (type $generated@@481) $generated@@156) (= (type $generated@@482) $generated@@156)) (= ($generated@@155 ($generated@@228 $generated@@481 $generated@@482)) $generated@@482))
 :pattern ( ($generated@@228 $generated@@481 $generated@@482))
)))
(assert  (and (forall (($generated@@485 T@U) ) (! (= (type ($generated@@483 $generated@@485)) $generated@@67)
 :pattern ( ($generated@@483 $generated@@485))
)) (forall (($generated@@486 T@U) ($generated@@487 Int) ) (! (let (($generated@@488 ($generated@@268 (type $generated@@486))))
(= (type ($generated@@484 $generated@@486 $generated@@487)) $generated@@488))
 :pattern ( ($generated@@484 $generated@@486 $generated@@487))
))))
(assert (forall (($generated@@489 T@U) ($generated@@490 T@U) ($generated@@491 T@U) ) (!  (=> (and (and (= (type $generated@@489) ($generated@@267 $generated@@156)) (= (type $generated@@490) $generated@@67)) (= (type $generated@@491) ($generated@@79 $generated@@80 $generated@@81))) (= ($generated@@77 $generated@@489 ($generated@@483 $generated@@490) $generated@@491) (forall (($generated@@492 Int) ) (!  (=> (and (<= 0 $generated@@492) (< $generated@@492 ($generated@@266 $generated@@489))) ($generated@@253 ($generated@@484 $generated@@489 $generated@@492) $generated@@490 $generated@@491))
 :pattern ( ($generated@@484 $generated@@489 $generated@@492))
))))
 :pattern ( ($generated@@77 $generated@@489 ($generated@@483 $generated@@490) $generated@@491))
)))
(assert (forall (($generated@@494 Int) ) (! (= ($generated@@493 ($generated@@78 $generated@@494)) $generated@@494)
 :pattern ( ($generated@@78 $generated@@494))
)))
(assert (forall (($generated@@496 T@U) ) (! (= (type ($generated@@495 $generated@@496)) $generated@@67)
 :pattern ( ($generated@@495 $generated@@496))
)))
(assert (forall (($generated@@497 T@U) ) (!  (=> (= (type $generated@@497) $generated@@67) (= ($generated@@495 ($generated@@238 $generated@@497)) $generated@@497))
 :pattern ( ($generated@@238 $generated@@497))
)))
(assert (forall (($generated@@498 T@U) ) (!  (=> (= (type $generated@@498) $generated@@67) (= ($generated@@75 ($generated@@238 $generated@@498)) $generated@@54))
 :pattern ( ($generated@@238 $generated@@498))
)))
(assert (forall (($generated@@500 T@U) ) (! (= (type ($generated@@499 $generated@@500)) $generated@@67)
 :pattern ( ($generated@@499 $generated@@500))
)))
(assert (forall (($generated@@501 T@U) ) (!  (=> (= (type $generated@@501) $generated@@67) (= ($generated@@499 ($generated@@243 $generated@@501)) $generated@@501))
 :pattern ( ($generated@@243 $generated@@501))
)))
(assert (forall (($generated@@502 T@U) ) (!  (=> (= (type $generated@@502) $generated@@67) (= ($generated@@75 ($generated@@243 $generated@@502)) $generated@@55))
 :pattern ( ($generated@@243 $generated@@502))
)))
(assert (forall (($generated@@504 T@U) ) (! (= (type ($generated@@503 $generated@@504)) $generated@@67)
 :pattern ( ($generated@@503 $generated@@504))
)))
(assert (forall (($generated@@505 T@U) ) (!  (=> (= (type $generated@@505) $generated@@67) (= ($generated@@503 ($generated@@161 $generated@@505)) $generated@@505))
 :pattern ( ($generated@@161 $generated@@505))
)))
(assert (forall (($generated@@506 T@U) ) (!  (=> (= (type $generated@@506) $generated@@67) (= ($generated@@75 ($generated@@161 $generated@@506)) $generated@@56))
 :pattern ( ($generated@@161 $generated@@506))
)))
(assert (forall (($generated@@508 T@U) ) (! (= (type ($generated@@507 $generated@@508)) $generated@@67)
 :pattern ( ($generated@@507 $generated@@508))
)))
(assert (forall (($generated@@509 T@U) ) (!  (=> (= (type $generated@@509) $generated@@67) (= ($generated@@507 ($generated@@483 $generated@@509)) $generated@@509))
 :pattern ( ($generated@@483 $generated@@509))
)))
(assert (forall (($generated@@510 T@U) ) (!  (=> (= (type $generated@@510) $generated@@67) (= ($generated@@75 ($generated@@483 $generated@@510)) $generated@@57))
 :pattern ( ($generated@@483 $generated@@510))
)))
(assert (forall (($generated@@511 T@U) ) (! (let (($generated@@512 (type $generated@@511)))
(= ($generated@@331 $generated@@512 ($generated@@273 $generated@@511)) $generated@@511))
 :pattern ( ($generated@@273 $generated@@511))
)))
(assert (forall (($generated@@513 T@U) ($generated@@514 T@U) ($generated@@515 T@U) ) (!  (=> (and (and (= (type $generated@@513) ($generated@@294 $generated@@156 $generated@@156)) (= (type $generated@@514) $generated@@67)) (= (type $generated@@515) $generated@@67)) (= ($generated@@143 $generated@@513 ($generated@@398 $generated@@514 $generated@@515)) (forall (($generated@@516 T@U) ) (!  (=> (and (= (type $generated@@516) $generated@@156) ($generated@@0 ($generated@@84 ($generated@@292 $generated@@513) $generated@@516))) (and ($generated@@229 ($generated@@84 ($generated@@373 $generated@@513) $generated@@516) $generated@@515) ($generated@@229 $generated@@516 $generated@@514)))
 :pattern ( ($generated@@84 ($generated@@373 $generated@@513) $generated@@516))
 :pattern ( ($generated@@84 ($generated@@292 $generated@@513) $generated@@516))
))))
 :pattern ( ($generated@@143 $generated@@513 ($generated@@398 $generated@@514 $generated@@515)))
)))
(assert (forall (($generated@@517 T@U) ($generated@@518 T@U) ($generated@@519 T@U) ) (!  (=> (and (and (= (type $generated@@517) ($generated@@312 $generated@@156 $generated@@156)) (= (type $generated@@518) $generated@@67)) (= (type $generated@@519) $generated@@67)) (= ($generated@@143 $generated@@517 ($generated@@406 $generated@@518 $generated@@519)) (forall (($generated@@520 T@U) ) (!  (=> (and (= (type $generated@@520) $generated@@156) ($generated@@0 ($generated@@84 ($generated@@310 $generated@@517) $generated@@520))) (and ($generated@@229 ($generated@@84 ($generated@@381 $generated@@517) $generated@@520) $generated@@519) ($generated@@229 $generated@@520 $generated@@518)))
 :pattern ( ($generated@@84 ($generated@@381 $generated@@517) $generated@@520))
 :pattern ( ($generated@@84 ($generated@@310 $generated@@517) $generated@@520))
))))
 :pattern ( ($generated@@143 $generated@@517 ($generated@@406 $generated@@518 $generated@@519)))
)))
(assert (forall (($generated@@523 T@U) ($generated@@524 T@U) ) (!  (=> (and (= (type $generated@@523) $generated@@156) (= (type $generated@@524) $generated@@156)) (< ($generated@@521 $generated@@523) ($generated@@522 ($generated@@228 $generated@@523 $generated@@524))))
 :pattern ( ($generated@@228 $generated@@523 $generated@@524))
)))
(assert (forall (($generated@@525 T@U) ($generated@@526 T@U) ) (!  (=> (and (= (type $generated@@525) $generated@@156) (= (type $generated@@526) $generated@@156)) (< ($generated@@521 $generated@@526) ($generated@@522 ($generated@@228 $generated@@525 $generated@@526))))
 :pattern ( ($generated@@228 $generated@@525 $generated@@526))
)))
(assert (forall (($generated@@527 T@U) ($generated@@528 T@U) ($generated@@529 T@U) ) (!  (=> (and (and (and (= (type $generated@@527) $generated@@156) (= (type $generated@@528) $generated@@67)) (= (type $generated@@529) $generated@@67)) ($generated@@229 $generated@@527 ($generated@@398 $generated@@528 $generated@@529))) (and (= ($generated@@273 ($generated@@331 ($generated@@294 $generated@@156 $generated@@156) $generated@@527)) $generated@@527) ($generated@@143 ($generated@@331 ($generated@@294 $generated@@156 $generated@@156) $generated@@527) ($generated@@398 $generated@@528 $generated@@529))))
 :pattern ( ($generated@@229 $generated@@527 ($generated@@398 $generated@@528 $generated@@529)))
)))
(assert (forall (($generated@@530 T@U) ($generated@@531 T@U) ($generated@@532 T@U) ) (!  (=> (and (and (and (= (type $generated@@530) $generated@@156) (= (type $generated@@531) $generated@@67)) (= (type $generated@@532) $generated@@67)) ($generated@@229 $generated@@530 ($generated@@406 $generated@@531 $generated@@532))) (and (= ($generated@@273 ($generated@@331 ($generated@@312 $generated@@156 $generated@@156) $generated@@530)) $generated@@530) ($generated@@143 ($generated@@331 ($generated@@312 $generated@@156 $generated@@156) $generated@@530) ($generated@@406 $generated@@531 $generated@@532))))
 :pattern ( ($generated@@229 $generated@@530 ($generated@@406 $generated@@531 $generated@@532)))
)))
(assert (forall (($generated@@533 T@U) ($generated@@534 T@U) ($generated@@535 T@U) ) (!  (=> (and (and (and (= (type $generated@@533) $generated@@67) (= (type $generated@@534) $generated@@67)) (= (type $generated@@535) $generated@@156)) ($generated@@229 $generated@@535 ($generated@@146 $generated@@533 $generated@@534))) (and (= ($generated@@273 ($generated@@331 $generated@@147 $generated@@535)) $generated@@535) ($generated@@143 ($generated@@331 $generated@@147 $generated@@535) ($generated@@146 $generated@@533 $generated@@534))))
 :pattern ( ($generated@@229 $generated@@535 ($generated@@146 $generated@@533 $generated@@534)))
)))
(assert (forall (($generated@@536 T@U) ) (! (let (($generated@@537 (type $generated@@536)))
 (not ($generated@@0 ($generated@@84 ($generated@@417 $generated@@537) $generated@@536))))
 :pattern ( (let (($generated@@537 (type $generated@@536)))
($generated@@84 ($generated@@417 $generated@@537) $generated@@536)))
)))
(assert (forall (($generated@@539 T@U) ) (! (= (type ($generated@@538 $generated@@539)) $generated@@72)
 :pattern ( ($generated@@538 $generated@@539))
)))
(assert (forall (($generated@@540 T@U) ($generated@@541 T@U) ) (!  (=> (and (= (type $generated@@540) $generated@@67) (= (type $generated@@541) $generated@@67)) (and (= ($generated@@75 ($generated@@146 $generated@@540 $generated@@541)) $generated@@62) (= ($generated@@538 ($generated@@146 $generated@@540 $generated@@541)) $generated@@65)))
 :pattern ( ($generated@@146 $generated@@540 $generated@@541))
)))
(assert (forall (($generated@@542 T@U) ) (!  (=> (= (type $generated@@542) $generated@@147) (= ($generated@@521 ($generated@@273 $generated@@542)) ($generated@@522 $generated@@542)))
 :pattern ( ($generated@@521 ($generated@@273 $generated@@542)))
)))
(assert (forall (($generated@@543 T@U) ) (!  (=> (and (= (type $generated@@543) $generated@@156) ($generated@@229 $generated@@543 ($generated@@78 0))) (and (= ($generated@@273 ($generated@@331 $generated@@2 $generated@@543)) $generated@@543) ($generated@@143 ($generated@@331 ($generated@@79 $generated@@156 $generated@@4) $generated@@543) ($generated@@78 0))))
 :pattern ( ($generated@@229 $generated@@543 ($generated@@78 0)))
)))
(assert (forall (($generated@@544 T@U) ($generated@@545 T@U) ) (!  (=> (and (and (= (type $generated@@544) $generated@@156) (= (type $generated@@545) $generated@@67)) ($generated@@229 $generated@@544 ($generated@@238 $generated@@545))) (and (= ($generated@@273 ($generated@@331 ($generated@@79 $generated@@156 $generated@@4) $generated@@544)) $generated@@544) ($generated@@143 ($generated@@331 ($generated@@79 $generated@@156 $generated@@4) $generated@@544) ($generated@@238 $generated@@545))))
 :pattern ( ($generated@@229 $generated@@544 ($generated@@238 $generated@@545)))
)))
(assert (forall (($generated@@546 T@U) ($generated@@547 T@U) ) (!  (=> (and (and (= (type $generated@@546) $generated@@156) (= (type $generated@@547) $generated@@67)) ($generated@@229 $generated@@546 ($generated@@243 $generated@@547))) (and (= ($generated@@273 ($generated@@331 ($generated@@79 $generated@@156 $generated@@4) $generated@@546)) $generated@@546) ($generated@@143 ($generated@@331 ($generated@@79 $generated@@156 $generated@@4) $generated@@546) ($generated@@243 $generated@@547))))
 :pattern ( ($generated@@229 $generated@@546 ($generated@@243 $generated@@547)))
)))
(assert (forall (($generated@@548 T@U) ($generated@@549 T@U) ) (!  (=> (and (and (= (type $generated@@548) $generated@@156) (= (type $generated@@549) $generated@@67)) ($generated@@229 $generated@@548 ($generated@@161 $generated@@549))) (and (= ($generated@@273 ($generated@@331 ($generated@@79 $generated@@156 $generated@@2) $generated@@548)) $generated@@548) ($generated@@143 ($generated@@331 ($generated@@79 $generated@@156 $generated@@2) $generated@@548) ($generated@@161 $generated@@549))))
 :pattern ( ($generated@@229 $generated@@548 ($generated@@161 $generated@@549)))
)))
(assert (forall (($generated@@550 T@U) ($generated@@551 T@U) ) (!  (=> (and (and (= (type $generated@@550) $generated@@156) (= (type $generated@@551) $generated@@67)) ($generated@@229 $generated@@550 ($generated@@483 $generated@@551))) (and (= ($generated@@273 ($generated@@331 ($generated@@267 $generated@@156) $generated@@550)) $generated@@550) ($generated@@143 ($generated@@331 ($generated@@267 $generated@@156) $generated@@550) ($generated@@483 $generated@@551))))
 :pattern ( ($generated@@229 $generated@@550 ($generated@@483 $generated@@551)))
)))
(assert (= ($generated@@75 $generated@@225) $generated@@63))
(assert (= ($generated@@538 $generated@@225) $generated@@66))
(assert (= ($generated@@75 $generated@@139) $generated@@64))
(assert (= ($generated@@538 $generated@@139) $generated@@66))
(assert (forall (($generated@@552 T@U) ($generated@@553 T@U) ($generated@@554 T@U) ) (!  (=> (and (and (= (type $generated@@552) ($generated@@79 $generated@@156 $generated@@2)) (= (type $generated@@553) $generated@@67)) (= (type $generated@@554) ($generated@@79 $generated@@80 $generated@@81))) (= ($generated@@77 $generated@@552 ($generated@@161 $generated@@553) $generated@@554) (forall (($generated@@555 T@U) ) (!  (=> (and (= (type $generated@@555) $generated@@156) (< 0 ($generated ($generated@@84 $generated@@552 $generated@@555)))) ($generated@@253 $generated@@555 $generated@@553 $generated@@554))
 :pattern ( ($generated@@84 $generated@@552 $generated@@555))
))))
 :pattern ( ($generated@@77 $generated@@552 ($generated@@161 $generated@@553) $generated@@554))
)))
(assert (forall (($generated@@556 T@U) ($generated@@557 T@U) ($generated@@558 T@U) ) (!  (=> (and (and (and (= (type $generated@@556) $generated@@147) (= (type $generated@@557) $generated@@67)) (= (type $generated@@558) ($generated@@79 $generated@@80 $generated@@81))) (and ($generated@@252 $generated@@558) (and ($generated@@145 $generated@@556) (exists (($generated@@559 T@U) ) (!  (and (= (type $generated@@559) $generated@@67) ($generated@@77 $generated@@556 ($generated@@146 $generated@@557 $generated@@559) $generated@@558))
 :pattern ( ($generated@@77 $generated@@556 ($generated@@146 $generated@@557 $generated@@559) $generated@@558))
))))) ($generated@@253 ($generated@@154 $generated@@556) $generated@@557 $generated@@558))
 :pattern ( ($generated@@253 ($generated@@154 $generated@@556) $generated@@557 $generated@@558))
)))
(assert (forall (($generated@@560 T@U) ($generated@@561 T@U) ($generated@@562 T@U) ) (!  (=> (and (and (and (= (type $generated@@560) $generated@@147) (= (type $generated@@561) $generated@@67)) (= (type $generated@@562) ($generated@@79 $generated@@80 $generated@@81))) (and ($generated@@252 $generated@@562) (and ($generated@@145 $generated@@560) (exists (($generated@@563 T@U) ) (!  (and (= (type $generated@@563) $generated@@67) ($generated@@77 $generated@@560 ($generated@@146 $generated@@563 $generated@@561) $generated@@562))
 :pattern ( ($generated@@77 $generated@@560 ($generated@@146 $generated@@563 $generated@@561) $generated@@562))
))))) ($generated@@253 ($generated@@155 $generated@@560) $generated@@561 $generated@@562))
 :pattern ( ($generated@@253 ($generated@@155 $generated@@560) $generated@@561 $generated@@562))
)))
(assert (forall (($generated@@564 T@U) ($generated@@565 T@U) ) (!  (=> (and (= (type $generated@@564) $generated@@156) (= (type $generated@@565) $generated@@156)) (= ($generated@@228 ($generated@@248 $generated@@564) ($generated@@248 $generated@@565)) ($generated@@248 ($generated@@228 $generated@@564 $generated@@565))))
 :pattern ( ($generated@@228 ($generated@@248 $generated@@564) ($generated@@248 $generated@@565)))
)))
(assert (forall (($generated@@566 T@U) ) (! (= ($generated@@273 ($generated@@248 $generated@@566)) ($generated@@248 ($generated@@273 $generated@@566)))
 :pattern ( ($generated@@273 ($generated@@248 $generated@@566)))
)))
(assert (forall (($generated@@567 T@U) ) (! (let (($generated@@568 ($generated@@268 (type $generated@@567))))
 (=> (and (= (type $generated@@567) ($generated@@267 $generated@@568)) (= ($generated@@266 $generated@@567) 0)) (= $generated@@567 ($generated@@265 $generated@@568))))
 :pattern ( ($generated@@266 $generated@@567))
)))
(assert (forall (($generated@@569 T@U) ($generated@@570 T@U) ($generated@@571 T@U) ) (! (let (($generated@@572 (type $generated@@570)))
 (=> (and (and (= (type $generated@@569) ($generated@@79 $generated@@572 $generated@@2)) (= (type $generated@@571) $generated@@2)) (<= 0 ($generated $generated@@571))) (= ($generated@@286 ($generated@@85 $generated@@569 $generated@@570 $generated@@571)) (+ (- ($generated@@286 $generated@@569) ($generated ($generated@@84 $generated@@569 $generated@@570))) ($generated $generated@@571)))))
 :pattern ( ($generated@@286 ($generated@@85 $generated@@569 $generated@@570 $generated@@571)))
)))
(assert (forall (($generated@@573 T@U) ($generated@@574 T@U) ) (!  (=> (and (= (type $generated@@573) ($generated@@79 $generated@@80 $generated@@81)) (= (type $generated@@574) $generated@@2)) ($generated@@77 $generated@@574 $generated@@46 $generated@@573))
 :pattern ( ($generated@@77 $generated@@574 $generated@@46 $generated@@573))
)))
(assert (forall (($generated@@575 T@U) ($generated@@576 T@U) ) (!  (=> (and (= (type $generated@@575) ($generated@@79 $generated@@80 $generated@@81)) (= (type $generated@@576) $generated@@3)) ($generated@@77 $generated@@576 $generated@@47 $generated@@575))
 :pattern ( ($generated@@77 $generated@@576 $generated@@47 $generated@@575))
)))
(assert (forall (($generated@@577 T@U) ($generated@@578 T@U) ) (!  (=> (and (= (type $generated@@577) ($generated@@79 $generated@@80 $generated@@81)) (= (type $generated@@578) $generated@@4)) ($generated@@77 $generated@@578 $generated@@44 $generated@@577))
 :pattern ( ($generated@@77 $generated@@578 $generated@@44 $generated@@577))
)))
(assert (forall (($generated@@579 T@U) ($generated@@580 T@U) ) (!  (=> (and (= (type $generated@@579) ($generated@@79 $generated@@80 $generated@@81)) (= (type $generated@@580) $generated@@441)) ($generated@@77 $generated@@580 $generated@@45 $generated@@579))
 :pattern ( ($generated@@77 $generated@@580 $generated@@45 $generated@@579))
)))
(assert (forall (($generated@@581 T@U) ($generated@@582 T@U) ) (!  (=> (and (= (type $generated@@581) ($generated@@79 $generated@@80 $generated@@81)) (= (type $generated@@582) $generated@@156)) ($generated@@77 $generated@@582 $generated@@48 $generated@@581))
 :pattern ( ($generated@@77 $generated@@582 $generated@@48 $generated@@581))
)))
(assert (forall (($generated@@583 T@U) ($generated@@584 T@U) ) (!  (=> (and (= (type $generated@@583) ($generated@@267 $generated@@156)) (= (type $generated@@584) $generated@@67)) (= ($generated@@143 $generated@@583 ($generated@@483 $generated@@584)) (forall (($generated@@585 Int) ) (!  (=> (and (<= 0 $generated@@585) (< $generated@@585 ($generated@@266 $generated@@583))) ($generated@@229 ($generated@@484 $generated@@583 $generated@@585) $generated@@584))
 :pattern ( ($generated@@484 $generated@@583 $generated@@585))
))))
 :pattern ( ($generated@@143 $generated@@583 ($generated@@483 $generated@@584)))
)))
(assert (forall (($generated@@587 T@U) ($generated@@588 Int) ) (!  (=> (= (type $generated@@587) ($generated@@267 $generated@@156)) (=> (and (<= 0 $generated@@588) (< $generated@@588 ($generated@@266 $generated@@587))) (< ($generated@@522 ($generated@@331 $generated@@147 ($generated@@484 $generated@@587 $generated@@588))) ($generated@@586 $generated@@587))))
 :pattern ( ($generated@@522 ($generated@@331 $generated@@147 ($generated@@484 $generated@@587 $generated@@588))))
)))
(assert (forall (($generated@@589 T@U) ($generated@@590 T@U) ($generated@@591 T@U) ) (!  (=> (and (and (and (= (type $generated@@589) ($generated@@294 $generated@@156 $generated@@156)) (= (type $generated@@590) $generated@@67)) (= (type $generated@@591) $generated@@67)) ($generated@@143 $generated@@589 ($generated@@398 $generated@@590 $generated@@591))) (and (and ($generated@@143 ($generated@@292 $generated@@589) ($generated@@238 $generated@@590)) ($generated@@143 ($generated@@341 $generated@@589) ($generated@@238 $generated@@591))) ($generated@@143 ($generated@@372 $generated@@589) ($generated@@238 ($generated@@146 $generated@@590 $generated@@591)))))
 :pattern ( ($generated@@143 $generated@@589 ($generated@@398 $generated@@590 $generated@@591)))
)))
(assert (forall (($generated@@592 T@U) ($generated@@593 T@U) ($generated@@594 T@U) ) (!  (=> (and (and (and (= (type $generated@@592) ($generated@@312 $generated@@156 $generated@@156)) (= (type $generated@@593) $generated@@67)) (= (type $generated@@594) $generated@@67)) ($generated@@143 $generated@@592 ($generated@@406 $generated@@593 $generated@@594))) (and (and ($generated@@143 ($generated@@310 $generated@@592) ($generated@@243 $generated@@593)) ($generated@@143 ($generated@@352 $generated@@592) ($generated@@243 $generated@@594))) ($generated@@143 ($generated@@380 $generated@@592) ($generated@@243 ($generated@@146 $generated@@593 $generated@@594)))))
 :pattern ( ($generated@@143 $generated@@592 ($generated@@406 $generated@@593 $generated@@594)))
)))
(assert (forall (($generated@@595 T@U) ) (!  (=> (= (type $generated@@595) $generated@@2) ($generated@@143 $generated@@595 $generated@@46))
 :pattern ( ($generated@@143 $generated@@595 $generated@@46))
)))
(assert (forall (($generated@@596 T@U) ) (!  (=> (= (type $generated@@596) $generated@@3) ($generated@@143 $generated@@596 $generated@@47))
 :pattern ( ($generated@@143 $generated@@596 $generated@@47))
)))
(assert (forall (($generated@@597 T@U) ) (!  (=> (= (type $generated@@597) $generated@@4) ($generated@@143 $generated@@597 $generated@@44))
 :pattern ( ($generated@@143 $generated@@597 $generated@@44))
)))
(assert (forall (($generated@@598 T@U) ) (!  (=> (= (type $generated@@598) $generated@@441) ($generated@@143 $generated@@598 $generated@@45))
 :pattern ( ($generated@@143 $generated@@598 $generated@@45))
)))
(assert (forall (($generated@@599 T@U) ) (!  (=> (= (type $generated@@599) $generated@@156) ($generated@@143 $generated@@599 $generated@@48))
 :pattern ( ($generated@@143 $generated@@599 $generated@@48))
)))
(push 1)
(declare-fun ControlFlow (Int Int) Int)
(declare-fun $generated@@600 () T@U)
(declare-fun $generated@@601 () T@U)
(declare-fun $generated@@602 () T@U)
(declare-fun $generated@@603 () T@U)
(declare-fun $generated@@604 (T@U) Bool)
(declare-fun $generated@@605 () T@U)
(declare-fun $generated@@606 () T@U)
(declare-fun $generated@@607 () T@U)
(declare-fun $generated@@608 () T@U)
(declare-fun $generated@@609 () T@U)
(declare-fun $generated@@610 () T@U)
(declare-fun $generated@@611 () T@U)
(declare-fun $generated@@612 () T@U)
(declare-fun $generated@@613 () T@U)
(declare-fun $generated@@614 () Bool)
(declare-fun $generated@@615 () T@U)
(declare-fun $generated@@616 () Bool)
(declare-fun $generated@@617 () T@U)
(declare-fun $generated@@618 () Bool)
(declare-fun $generated@@619 () T@U)
(declare-fun $generated@@620 () Int)
(assert  (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (= (type $generated@@600) ($generated@@171 $generated@@80 $generated@@4)) (= (type $generated@@601) ($generated@@79 $generated@@80 $generated@@81))) (= (type $generated@@602) $generated@@80)) (= (type $generated@@603) ($generated@@79 $generated@@80 $generated@@81))) (= (type $generated@@605) $generated@@80)) (= (type $generated@@606) ($generated@@79 $generated@@80 $generated@@81))) (= (type $generated@@607) $generated@@80)) (= (type $generated@@608) ($generated@@79 $generated@@80 $generated@@81))) (= (type $generated@@609) $generated@@80)) (= (type $generated@@610) ($generated@@79 $generated@@80 $generated@@81))) (= (type $generated@@611) $generated@@80)) (= (type $generated@@612) ($generated@@79 $generated@@80 $generated@@81))) (= (type $generated@@613) $generated@@80)) (= (type $generated@@615) $generated@@80)) (= (type $generated@@617) $generated@@80)) (= (type $generated@@619) $generated@@80)))
(set-option :timeout 0)
(set-option :rlimit 0)
(assert (not
 (=> (= (ControlFlow 0 0) 8) (let (($generated@@621  (=> (= $generated@@600 ($generated@@170 $generated@@140 $generated@@601 $generated@@60 false)) (=> (and (and (not (= $generated@@602 $generated@@140)) (and ($generated@@143 $generated@@602 $generated@@225) ($generated@@77 $generated@@602 $generated@@225 $generated@@601))) (and ($generated@@252 $generated@@603) ($generated@@604 $generated@@603))) (=> (and (and (and (not (= $generated@@605 $generated@@140)) (and ($generated@@143 $generated@@605 $generated@@225) ($generated@@77 $generated@@605 $generated@@225 $generated@@603))) (not ($generated@@0 ($generated@@86 ($generated@@84 $generated@@601 $generated@@605) $generated@@60)))) (and (forall (($generated@@622 T@U) ) (!  (=> (= (type $generated@@622) $generated@@80) (=> (and (not (= $generated@@622 $generated@@140)) ($generated@@0 ($generated@@86 ($generated@@84 $generated@@601 $generated@@622) $generated@@60))) (= ($generated@@84 $generated@@603 $generated@@622) ($generated@@84 $generated@@601 $generated@@622))))
 :pattern ( ($generated@@84 $generated@@603 $generated@@622))
)) ($generated@@135 $generated@@601 $generated@@603))) (and (=> (= (ControlFlow 0 2) (- 0 7)) true) (and (=> (= (ControlFlow 0 2) (- 0 6)) (not (= $generated@@605 $generated@@140))) (=> (not (= $generated@@605 $generated@@140)) (=> (and (and (and (and ($generated@@252 $generated@@606) ($generated@@604 $generated@@606)) (and (forall (($generated@@623 T@U) ) (!  (=> (= (type $generated@@623) $generated@@80) (=> (and (not (= $generated@@623 $generated@@140)) ($generated@@0 ($generated@@86 ($generated@@84 $generated@@603 $generated@@623) $generated@@60))) (= ($generated@@84 $generated@@606 $generated@@623) ($generated@@84 $generated@@603 $generated@@623))))
 :pattern ( ($generated@@84 $generated@@606 $generated@@623))
)) ($generated@@135 $generated@@603 $generated@@606))) (and (and (not (= $generated@@607 $generated@@140)) (and ($generated@@143 $generated@@607 $generated@@225) ($generated@@77 $generated@@607 $generated@@225 $generated@@601))) (and ($generated@@252 $generated@@608) ($generated@@604 $generated@@608)))) (and (and (and (not (= $generated@@609 $generated@@140)) (and ($generated@@143 $generated@@609 $generated@@225) ($generated@@77 $generated@@609 $generated@@225 $generated@@608))) (not ($generated@@0 ($generated@@86 ($generated@@84 $generated@@606 $generated@@609) $generated@@60)))) (and (forall (($generated@@624 T@U) ) (!  (=> (= (type $generated@@624) $generated@@80) (=> (and (not (= $generated@@624 $generated@@140)) ($generated@@0 ($generated@@86 ($generated@@84 $generated@@606 $generated@@624) $generated@@60))) (= ($generated@@84 $generated@@608 $generated@@624) ($generated@@84 $generated@@606 $generated@@624))))
 :pattern ( ($generated@@84 $generated@@608 $generated@@624))
)) ($generated@@135 $generated@@606 $generated@@608)))) (and (=> (= (ControlFlow 0 2) (- 0 5)) true) (and (=> (= (ControlFlow 0 2) (- 0 4)) (not (= $generated@@609 $generated@@140))) (=> (not (= $generated@@609 $generated@@140)) (=> (and (and (and (and ($generated@@252 $generated@@610) ($generated@@604 $generated@@610)) (and (forall (($generated@@625 T@U) ) (!  (=> (= (type $generated@@625) $generated@@80) (=> (and (not (= $generated@@625 $generated@@140)) ($generated@@0 ($generated@@86 ($generated@@84 $generated@@608 $generated@@625) $generated@@60))) (= ($generated@@84 $generated@@610 $generated@@625) ($generated@@84 $generated@@608 $generated@@625))))
 :pattern ( ($generated@@84 $generated@@610 $generated@@625))
)) ($generated@@135 $generated@@608 $generated@@610))) (and (and (not (= $generated@@611 $generated@@140)) (and ($generated@@143 $generated@@611 $generated@@225) ($generated@@77 $generated@@611 $generated@@225 $generated@@601))) (and ($generated@@252 $generated@@612) ($generated@@604 $generated@@612)))) (and (and (and (not (= $generated@@613 $generated@@140)) (and ($generated@@143 $generated@@613 $generated@@225) ($generated@@77 $generated@@613 $generated@@225 $generated@@612))) (not ($generated@@0 ($generated@@86 ($generated@@84 $generated@@610 $generated@@613) $generated@@60)))) (and (forall (($generated@@626 T@U) ) (!  (=> (= (type $generated@@626) $generated@@80) (=> (and (not (= $generated@@626 $generated@@140)) ($generated@@0 ($generated@@86 ($generated@@84 $generated@@610 $generated@@626) $generated@@60))) (= ($generated@@84 $generated@@612 $generated@@626) ($generated@@84 $generated@@610 $generated@@626))))
 :pattern ( ($generated@@84 $generated@@612 $generated@@626))
)) ($generated@@135 $generated@@610 $generated@@612)))) (and (=> (= (ControlFlow 0 2) (- 0 3)) true) (=> (= (ControlFlow 0 2) (- 0 1)) (not (= $generated@@613 $generated@@140)))))))))))))))))
(let (($generated@@627  (=> (and ($generated@@252 $generated@@601) ($generated@@604 $generated@@601)) (=> (and (and (and (=> $generated@@614 (and ($generated@@143 $generated@@615 $generated@@225) ($generated@@77 $generated@@615 $generated@@225 $generated@@601))) true) (and (=> $generated@@616 (and ($generated@@143 $generated@@617 $generated@@225) ($generated@@77 $generated@@617 $generated@@225 $generated@@601))) true)) (and (and (=> $generated@@618 (and ($generated@@143 $generated@@619 $generated@@225) ($generated@@77 $generated@@619 $generated@@225 $generated@@601))) true) (and (= 1 $generated@@620) (= (ControlFlow 0 8) 2)))) $generated@@621))))
$generated@@627)))
))
(check-sat)
(pop 1)
; Valid
(get-info :rlimit)
(reset)
(set-option :rlimit 0)
; did a full reset
(reset)
(set-option :print-success false)
(set-info :smt-lib-version 2.6)
(set-option :auto_config false)
(set-option :type_check true)
(set-option :smt.case_split 3)
(set-option :smt.qi.eager_threshold 100)
(set-option :smt.delay_units true)
(set-option :smt.arith.solver 2)
(set-option :smt.mbqi false)
(set-option :model.compact false)
(set-option :model.v2 true)
(set-option :pp.bv_literals false)
; done setting options


(set-info :category "industrial")
(declare-sort |T@U| 0)
(declare-sort |T@T| 0)
(declare-fun real_pow (Real Real) Real)
(declare-fun UOrdering2 (|T@U| |T@U|) Bool)
(declare-fun UOrdering3 (|T@T| |T@U| |T@U|) Bool)
(declare-fun tickleBool (Bool) Bool)
(assert (and (tickleBool true) (tickleBool false)))
(declare-fun $generated (T@U) Int)
(declare-fun $generated@@0 (T@U) Bool)
(declare-fun $generated@@1 (T@T) Int)
(declare-fun $generated@@2 () T@T)
(declare-fun $generated@@3 () T@T)
(declare-fun $generated@@4 () T@T)
(declare-fun $generated@@5 () T@T)
(declare-fun $generated@@6 () T@T)
(declare-fun $generated@@7 () T@T)
(declare-fun $generated@@8 (Int) T@U)
(declare-fun type (T@U) T@T)
(declare-fun $generated@@9 (Real) T@U)
(declare-fun $generated@@10 (T@U) Real)
(declare-fun $generated@@11 (Bool) T@U)
(declare-fun $generated@@12 (RoundingMode) T@U)
(declare-fun $generated@@13 (T@U) RoundingMode)
(declare-fun $generated@@14 (String) T@U)
(declare-fun $generated@@15 (T@U) String)
(declare-fun $generated@@16 ((RegEx String)) T@U)
(declare-fun $generated@@17 (T@U) (RegEx String))
(declare-fun $generated@@44 () T@U)
(declare-fun $generated@@45 () T@U)
(declare-fun $generated@@46 () T@U)
(declare-fun $generated@@47 () T@U)
(declare-fun $generated@@48 () T@U)
(declare-fun $generated@@49 () T@U)
(declare-fun $generated@@50 () T@U)
(declare-fun $generated@@51 () T@U)
(declare-fun $generated@@52 () T@U)
(declare-fun $generated@@53 () T@U)
(declare-fun $generated@@54 () T@U)
(declare-fun $generated@@55 () T@U)
(declare-fun $generated@@56 () T@U)
(declare-fun $generated@@57 () T@U)
(declare-fun $generated@@58 () T@U)
(declare-fun $generated@@59 () T@U)
(declare-fun $generated@@60 () T@U)
(declare-fun $generated@@61 () T@U)
(declare-fun $generated@@62 () T@U)
(declare-fun $generated@@63 () T@U)
(declare-fun $generated@@64 () T@U)
(declare-fun $generated@@65 () T@U)
(declare-fun $generated@@66 () T@U)
(declare-fun $generated@@67 () T@U)
(declare-fun $generated@@68 () T@U)
(declare-fun $generated@@69 () T@U)
(declare-fun $generated@@70 () T@U)
(declare-fun $generated@@71 () T@U)
(declare-fun $generated@@72 () T@U)
(declare-fun $generated@@73 () T@U)
(declare-fun $generated@@74 () T@U)
(declare-fun $generated@@75 () T@U)
(declare-fun $generated@@76 () T@U)
(declare-fun $generated@@77 () T@U)
(declare-fun $generated@@78 () T@U)
(declare-fun $generated@@79 () T@T)
(declare-fun $generated@@80 () T@T)
(declare-fun $generated@@81 (T@T) T@T)
(declare-fun $generated@@82 (T@T) T@T)
(declare-fun $generated@@83 () T@T)
(declare-fun $generated@@84 () T@T)
(declare-fun $generated@@85 () T@T)
(declare-fun $generated@@86 () T@T)
(declare-fun $generated@@89 (T@U) Int)
(declare-fun $generated@@90 (T@U) T@U)
(declare-fun $generated@@92 (T@U) T@U)
(declare-fun $generated@@94 (T@U T@U T@U T@U T@U T@U) Bool)
(declare-fun $generated@@95 (T@U) T@U)
(declare-fun $generated@@96 () T@T)
(declare-fun $generated@@97 () T@T)
(declare-fun $generated@@98 () T@T)
(declare-fun $generated@@99 (T@U T@U) Bool)
(declare-fun $generated@@100 (T@U) T@U)
(declare-fun $generated@@101 (T@U) Int)
(declare-fun $generated@@102 (T@U) Bool)
(declare-fun $generated@@103 (T@U) T@U)
(declare-fun $generated@@104 (T@U T@U) T@U)
(declare-fun $generated@@105 (Int) T@U)
(declare-fun $generated@@106 (T@U) T@U)
(declare-fun $generated@@107 (T@U T@U T@U T@U T@U) Bool)
(declare-fun $generated@@121 (T@U T@U T@U) Bool)
(declare-fun $generated@@122 (Int) T@U)
(declare-fun $generated@@123 (T@T T@T) T@T)
(declare-fun $generated@@124 () T@T)
(declare-fun $generated@@125 () T@T)
(declare-fun $generated@@126 (T@T) T@T)
(declare-fun $generated@@127 (T@T) T@T)
(declare-fun $generated@@128 (T@U T@U) T@U)
(declare-fun $generated@@129 (T@U T@U T@U) T@U)
(declare-fun $generated@@130 (T@U T@U) T@U)
(declare-fun $generated@@131 (T@U T@U T@U) T@U)
(declare-fun $generated@@185 (T@U T@U) Bool)
(declare-fun $generated@@189 (T@U T@U) Bool)
(declare-fun $generated@@193 () T@U)
(declare-fun $generated@@196 () T@U)
(declare-fun $generated@@197 () T@U)
(declare-fun $generated@@200 () T@U)
(declare-fun $generated@@201 (T@U) Bool)
(declare-fun $generated@@202 (T@U) T@U)
(declare-fun $generated@@210 (T@U) Bool)
(declare-fun $generated@@211 (T@U T@U) T@U)
(declare-fun $generated@@217 (T@U T@U) Bool)
(declare-fun $generated@@218 (T@U) T@U)
(declare-fun $generated@@219 (T@U) T@U)
(declare-fun $generated@@224 (T@U) T@U)
(declare-fun $generated@@225 () T@U)
(declare-fun $generated@@227 (T@U) T@U)
(declare-fun $generated@@228 (T@U) Bool)
(declare-fun $generated@@235 (T@U T@U T@U) T@U)
(declare-fun $generated@@236 (T@U T@U T@U Bool) T@U)
(declare-fun $generated@@237 (T@T T@T) T@T)
(declare-fun $generated@@238 (T@T) T@T)
(declare-fun $generated@@239 (T@T) T@T)
(declare-fun $generated@@240 (T@U T@U T@U T@U) T@U)
(declare-fun $generated@@297 () T@U)
(declare-fun $generated@@300 (T@U) T@U)
(declare-fun $generated@@304 (T@U T@U) T@U)
(declare-fun $generated@@305 (T@U T@U) Bool)
(declare-fun $generated@@312 () Int)
(declare-fun $generated@@313 (T@U Int) T@U)
(declare-fun $generated@@314 (Int) Bool)
(declare-fun $generated@@315 (T@U T@U) T@U)
(declare-fun $generated@@316 (T@U) T@U)
(declare-fun $generated@@324 (T@T T@U T@U) T@U)
(declare-fun $generated@@328 (T@U) Bool)
(declare-fun $generated@@337 (T@U T@U) Bool)
(declare-fun $generated@@340 (T@U) Bool)
(declare-fun $generated@@341 (T@U) T@U)
(declare-fun $generated@@342 (T@U) T@U)
(declare-fun $generated@@347 (T@U T@U Int T@U) T@U)
(declare-fun $generated@@348 (T@U Int T@U) Bool)
(declare-fun $generated@@349 (Int) Int)
(declare-fun $generated@@350 (T@U T@U) T@U)
(declare-fun $generated@@361 (T@U) T@U)
(declare-fun $generated@@366 (T@U) T@U)
(declare-fun $generated@@372 (T@U) T@U)
(declare-fun $generated@@376 (T@U) Bool)
(declare-fun $generated@@385 (T@U T@U T@U) Bool)
(declare-fun $generated@@404 (T@T) T@U)
(declare-fun $generated@@405 (T@U) Int)
(declare-fun $generated@@406 (T@T) T@T)
(declare-fun $generated@@407 (T@T) T@T)
(declare-fun $generated@@414 (T@U) T@U)
(declare-fun $generated@@415 () T@U)
(declare-fun $generated@@439 (T@U) Int)
(declare-fun $generated@@440 (T@T) T@U)
(declare-fun $generated@@445 (T@U) T@U)
(declare-fun $generated@@449 (T@U) T@U)
(declare-fun $generated@@450 (T@T T@T) T@U)
(declare-fun $generated@@451 (T@T T@T) T@T)
(declare-fun $generated@@452 (T@T) T@T)
(declare-fun $generated@@453 (T@T) T@T)
(declare-fun $generated@@467 (T@U) T@U)
(declare-fun $generated@@468 (T@T T@T) T@U)
(declare-fun $generated@@469 (T@T T@T) T@T)
(declare-fun $generated@@470 (T@T) T@T)
(declare-fun $generated@@471 (T@T) T@T)
(declare-fun $generated@@485 (T@U T@U) Bool)
(declare-fun $generated@@491 (T@U) Bool)
(declare-fun $generated@@498 (T@T T@U) T@U)
(declare-fun $generated@@511 (T@U) T@U)
(declare-fun $generated@@522 (T@U) T@U)
(declare-fun $generated@@536 (T@U) Bool)
(declare-fun $generated@@550 (T@U) T@U)
(declare-fun $generated@@551 (T@U) T@U)
(declare-fun $generated@@558 (T@U) T@U)
(declare-fun $generated@@559 (T@U) T@U)
(declare-fun $generated@@576 (T@U T@U) T@U)
(declare-fun $generated@@584 (T@U T@U) T@U)
(declare-fun $generated@@601 (T@T) T@U)
(declare-fun $generated@@622 (T@U) T@U)
(declare-fun $generated@@630 () T@T)
(declare-fun $generated@@639 (T@U) T@U)
(declare-fun $generated@@643 (T@U) T@U)
(declare-fun $generated@@649 (T@U) T@U)
(declare-fun $generated@@653 (T@U) T@U)
(declare-fun $generated@@661 (T@U) T@U)
(declare-fun $generated@@665 (T@U) T@U)
(declare-fun $generated@@687 (T@U) T@U)
(declare-fun $generated@@688 (T@U Int) T@U)
(declare-fun $generated@@697 (T@U) Int)
(declare-fun $generated@@699 (T@U) T@U)
(declare-fun $generated@@703 (T@U) T@U)
(declare-fun $generated@@707 (T@U) T@U)
(declare-fun $generated@@711 (T@U) T@U)
(declare-fun $generated@@715 (T@U) T@U)
(declare-fun $generated@@718 (T@U) T@U)
(declare-fun $generated@@737 (T@U) Int)
(declare-fun $generated@@738 (T@U) Int)
(declare-fun $generated@@869 (T@U) Int)
(assert  (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (= ($generated@@1 $generated@@2) 0) (= ($generated@@1 $generated@@3) 1)) (= ($generated@@1 $generated@@4) 2)) (= ($generated@@1 $generated@@5) 3)) (= ($generated@@1 $generated@@6) 4)) (= ($generated@@1 $generated@@7) 5)) (forall (($generated@@18 Int) ) (! (= ($generated ($generated@@8 $generated@@18)) $generated@@18)
 :pattern ( ($generated@@8 $generated@@18))
))) (forall (($generated@@19 T@U) ) (!  (=> (= (type $generated@@19) $generated@@2) (= ($generated@@8 ($generated $generated@@19)) $generated@@19))
 :pattern ( ($generated $generated@@19))
))) (forall (($generated@@20 Int) ) (! (= (type ($generated@@8 $generated@@20)) $generated@@2)
 :pattern ( ($generated@@8 $generated@@20))
))) (forall (($generated@@21 Real) ) (! (= ($generated@@10 ($generated@@9 $generated@@21)) $generated@@21)
 :pattern ( ($generated@@9 $generated@@21))
))) (forall (($generated@@22 T@U) ) (!  (=> (= (type $generated@@22) $generated@@3) (= ($generated@@9 ($generated@@10 $generated@@22)) $generated@@22))
 :pattern ( ($generated@@10 $generated@@22))
))) (forall (($generated@@23 Real) ) (! (= (type ($generated@@9 $generated@@23)) $generated@@3)
 :pattern ( ($generated@@9 $generated@@23))
))) (forall (($generated@@24 Bool) ) (! (= ($generated@@0 ($generated@@11 $generated@@24)) $generated@@24)
 :pattern ( ($generated@@11 $generated@@24))
))) (forall (($generated@@25 T@U) ) (!  (=> (= (type $generated@@25) $generated@@4) (= ($generated@@11 ($generated@@0 $generated@@25)) $generated@@25))
 :pattern ( ($generated@@0 $generated@@25))
))) (forall (($generated@@26 Bool) ) (! (= (type ($generated@@11 $generated@@26)) $generated@@4)
 :pattern ( ($generated@@11 $generated@@26))
))) (forall (($generated@@27 RoundingMode) ) (! (= ($generated@@13 ($generated@@12 $generated@@27)) $generated@@27)
 :pattern ( ($generated@@12 $generated@@27))
))) (forall (($generated@@28 T@U) ) (!  (=> (= (type $generated@@28) $generated@@5) (= ($generated@@12 ($generated@@13 $generated@@28)) $generated@@28))
 :pattern ( ($generated@@13 $generated@@28))
))) (forall (($generated@@29 RoundingMode) ) (! (= (type ($generated@@12 $generated@@29)) $generated@@5)
 :pattern ( ($generated@@12 $generated@@29))
))) (forall (($generated@@30 String) ) (! (= ($generated@@15 ($generated@@14 $generated@@30)) $generated@@30)
 :pattern ( ($generated@@14 $generated@@30))
))) (forall (($generated@@31 T@U) ) (!  (=> (= (type $generated@@31) $generated@@6) (= ($generated@@14 ($generated@@15 $generated@@31)) $generated@@31))
 :pattern ( ($generated@@15 $generated@@31))
))) (forall (($generated@@32 String) ) (! (= (type ($generated@@14 $generated@@32)) $generated@@6)
 :pattern ( ($generated@@14 $generated@@32))
))) (forall (($generated@@33 (RegEx String)) ) (! (= ($generated@@17 ($generated@@16 $generated@@33)) $generated@@33)
 :pattern ( ($generated@@16 $generated@@33))
))) (forall (($generated@@34 T@U) ) (!  (=> (= (type $generated@@34) $generated@@7) (= ($generated@@16 ($generated@@17 $generated@@34)) $generated@@34))
 :pattern ( ($generated@@17 $generated@@34))
))) (forall (($generated@@35 (RegEx String)) ) (! (= (type ($generated@@16 $generated@@35)) $generated@@7)
 :pattern ( ($generated@@16 $generated@@35))
))))
(assert (forall (($generated@@36 T@U) ) (! (UOrdering2 $generated@@36 $generated@@36)
 :no-pattern ($generated $generated@@36)
 :no-pattern ($generated@@0 $generated@@36)
)))
(assert (forall (($generated@@37 T@U) ($generated@@38 T@U) ($generated@@39 T@U) ) (! (let (($generated@@40 (type $generated@@37)))
 (=> (and (and (= (type $generated@@38) $generated@@40) (= (type $generated@@39) $generated@@40)) (and (UOrdering2 $generated@@37 $generated@@38) (UOrdering2 $generated@@38 $generated@@39))) (UOrdering2 $generated@@37 $generated@@39)))
 :pattern ( (UOrdering2 $generated@@37 $generated@@38) (UOrdering2 $generated@@38 $generated@@39))
)))
(assert (forall (($generated@@41 T@U) ($generated@@42 T@U) ) (! (let (($generated@@43 (type $generated@@41)))
 (=> (= (type $generated@@42) $generated@@43) (=> (and (UOrdering2 $generated@@41 $generated@@42) (UOrdering2 $generated@@42 $generated@@41)) (= $generated@@41 $generated@@42))))
 :pattern ( (UOrdering2 $generated@@41 $generated@@42) (UOrdering2 $generated@@42 $generated@@41))
)))
(assert  (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (= ($generated@@1 $generated@@79) 6) (= (type $generated@@44) $generated@@79)) (= (type $generated@@45) $generated@@79)) (= (type $generated@@46) $generated@@79)) (= (type $generated@@47) $generated@@79)) (= (type $generated@@48) $generated@@79)) (= ($generated@@1 $generated@@80) 7)) (= (type $generated@@49) $generated@@80)) (= (type $generated@@50) $generated@@80)) (= (type $generated@@51) $generated@@80)) (= (type $generated@@52) $generated@@80)) (= (type $generated@@53) $generated@@80)) (= (type $generated@@54) $generated@@80)) (= (type $generated@@55) $generated@@80)) (= (type $generated@@56) $generated@@80)) (= (type $generated@@57) $generated@@80)) (= (type $generated@@58) $generated@@80)) (= (type $generated@@59) $generated@@80)) (forall (($generated@@87 T@T) ) (= ($generated@@1 ($generated@@81 $generated@@87)) 8))) (forall (($generated@@88 T@T) ) (! (= ($generated@@82 ($generated@@81 $generated@@88)) $generated@@88)
 :pattern ( ($generated@@81 $generated@@88))
))) (= (type $generated@@60) ($generated@@81 $generated@@4))) (= ($generated@@1 $generated@@83) 9)) (= (type $generated@@61) $generated@@83)) (= (type $generated@@62) $generated@@80)) (= ($generated@@1 $generated@@84) 10)) (= (type $generated@@63) $generated@@84)) (= (type $generated@@64) $generated@@80)) (= (type $generated@@65) $generated@@84)) (= (type $generated@@66) $generated@@80)) (= (type $generated@@67) $generated@@84)) (= (type $generated@@68) $generated@@80)) (= (type $generated@@69) $generated@@84)) (= ($generated@@1 $generated@@85) 11)) (= (type $generated@@70) $generated@@85)) (= (type $generated@@71) $generated@@80)) (= (type $generated@@72) $generated@@80)) (= ($generated@@1 $generated@@86) 12)) (= (type $generated@@73) $generated@@86)) (= (type $generated@@74) $generated@@86)) (= (type $generated@@75) $generated@@86)) (= (type $generated@@76) $generated@@86)) (= (type $generated@@77) $generated@@86)) (= (type $generated@@78) $generated@@83)))
(assert (distinct $generated@@44 $generated@@45 $generated@@46 $generated@@47 $generated@@48 $generated@@49 $generated@@50 $generated@@51 $generated@@52 $generated@@53 $generated@@54 $generated@@55 $generated@@56 $generated@@57 $generated@@58 $generated@@59 $generated@@60 $generated@@61 $generated@@62 $generated@@63 $generated@@64 $generated@@65 $generated@@66 $generated@@67 $generated@@68 $generated@@69 $generated@@70 $generated@@71 $generated@@72 $generated@@73 $generated@@74 $generated@@75 $generated@@76 $generated@@77 $generated@@78)
)
(assert (= ($generated@@89 $generated@@60) 0))
(assert (forall (($generated@@91 T@U) ) (! (= (type ($generated@@90 $generated@@91)) $generated@@80)
 :pattern ( ($generated@@90 $generated@@91))
)))
(assert (= ($generated@@90 $generated@@44) $generated@@49))
(assert (= ($generated@@90 $generated@@45) $generated@@50))
(assert (= ($generated@@90 $generated@@46) $generated@@51))
(assert (= ($generated@@90 $generated@@47) $generated@@52))
(assert (= ($generated@@90 $generated@@48) $generated@@53))
(assert (forall (($generated@@93 T@U) ) (! (= (type ($generated@@92 $generated@@93)) $generated@@83)
 :pattern ( ($generated@@92 $generated@@93))
)))
(assert (= ($generated@@92 $generated@@60) $generated@@61))
(assert  (and (and (and (and (and (and (and (and (= ($generated@@1 $generated@@96) 13) (= ($generated@@1 $generated@@97) 14)) (= ($generated@@1 $generated@@98) 15)) (forall (($generated@@108 T@U) ) (! (= (type ($generated@@95 $generated@@108)) $generated@@97)
 :pattern ( ($generated@@95 $generated@@108))
))) (forall (($generated@@109 T@U) ) (! (= (type ($generated@@100 $generated@@109)) $generated@@79)
 :pattern ( ($generated@@100 $generated@@109))
))) (forall (($generated@@110 T@U) ) (! (= (type ($generated@@103 $generated@@110)) $generated@@96)
 :pattern ( ($generated@@103 $generated@@110))
))) (forall (($generated@@111 T@U) ($generated@@112 T@U) ) (! (= (type ($generated@@104 $generated@@111 $generated@@112)) $generated@@96)
 :pattern ( ($generated@@104 $generated@@111 $generated@@112))
))) (forall (($generated@@113 Int) ) (! (= (type ($generated@@105 $generated@@113)) $generated@@96)
 :pattern ( ($generated@@105 $generated@@113))
))) (forall (($generated@@114 T@U) ) (! (= (type ($generated@@106 $generated@@114)) $generated@@98)
 :pattern ( ($generated@@106 $generated@@114))
))))
(assert (forall (($generated@@115 T@U) ($generated@@116 T@U) ($generated@@117 T@U) ($generated@@118 T@U) ($generated@@119 T@U) ($generated@@120 T@U) ) (!  (=> (and (and (and (and (and (and (= (type $generated@@115) $generated@@79) (= (type $generated@@116) $generated@@79)) (= (type $generated@@117) $generated@@96)) (= (type $generated@@118) $generated@@97)) (= (type $generated@@119) $generated@@98)) (= (type $generated@@120) $generated@@98)) (and ($generated@@99 $generated@@119 ($generated@@100 $generated@@115)) ($generated@@99 $generated@@120 ($generated@@100 $generated@@116)))) (= ($generated@@94 $generated@@115 $generated@@116 $generated@@117 ($generated@@95 $generated@@118) $generated@@119 $generated@@120)  (and (=> (< 0 ($generated@@101 $generated@@117)) (and (and ($generated@@102 $generated@@119) ($generated@@102 $generated@@120)) (=> (and ($generated@@102 $generated@@119) ($generated@@102 $generated@@120)) (and (= ($generated@@103 $generated@@119) ($generated@@103 $generated@@120)) ($generated@@94 $generated@@115 $generated@@116 ($generated@@104 $generated@@117 ($generated@@105 1)) $generated@@118 ($generated@@106 $generated@@119) ($generated@@106 $generated@@120)))))) (=> (and (not (= $generated@@117 ($generated@@105 0))) (= ($generated@@101 $generated@@117) 0)) ($generated@@107 $generated@@115 $generated@@116 $generated@@118 $generated@@119 $generated@@120)))))
 :pattern ( ($generated@@94 $generated@@115 $generated@@116 $generated@@117 ($generated@@95 $generated@@118) $generated@@119 $generated@@120))
)))
(assert  (and (and (and (and (and (and (and (and (and (and (and (and (and (forall (($generated@@132 T@T) ($generated@@133 T@T) ) (= ($generated@@1 ($generated@@123 $generated@@132 $generated@@133)) 16)) (forall (($generated@@134 T@T) ($generated@@135 T@T) ) (! (= ($generated@@126 ($generated@@123 $generated@@134 $generated@@135)) $generated@@134)
 :pattern ( ($generated@@123 $generated@@134 $generated@@135))
))) (forall (($generated@@136 T@T) ($generated@@137 T@T) ) (! (= ($generated@@127 ($generated@@123 $generated@@136 $generated@@137)) $generated@@137)
 :pattern ( ($generated@@123 $generated@@136 $generated@@137))
))) (forall (($generated@@138 T@U) ($generated@@139 T@U) ) (! (let (($generated@@140 ($generated@@127 (type $generated@@138))))
(= (type ($generated@@128 $generated@@138 $generated@@139)) $generated@@140))
 :pattern ( ($generated@@128 $generated@@138 $generated@@139))
))) (forall (($generated@@141 T@U) ($generated@@142 T@U) ($generated@@143 T@U) ) (! (let (($generated@@144 (type $generated@@143)))
(let (($generated@@145 (type $generated@@142)))
(= (type ($generated@@129 $generated@@141 $generated@@142 $generated@@143)) ($generated@@123 $generated@@145 $generated@@144))))
 :pattern ( ($generated@@129 $generated@@141 $generated@@142 $generated@@143))
))) (forall (($generated@@146 T@U) ($generated@@147 T@U) ($generated@@148 T@U) ) (! (let (($generated@@149 ($generated@@127 (type $generated@@146))))
 (=> (= (type $generated@@148) $generated@@149) (= ($generated@@128 ($generated@@129 $generated@@146 $generated@@147 $generated@@148) $generated@@147) $generated@@148)))
 :weight 0
))) (and (forall (($generated@@150 T@U) ($generated@@151 T@U) ($generated@@152 T@U) ($generated@@153 T@U) ) (!  (or (= $generated@@152 $generated@@153) (= ($generated@@128 ($generated@@129 $generated@@151 $generated@@152 $generated@@150) $generated@@153) ($generated@@128 $generated@@151 $generated@@153)))
 :weight 0
)) (forall (($generated@@154 T@U) ($generated@@155 T@U) ($generated@@156 T@U) ($generated@@157 T@U) ) (!  (or true (= ($generated@@128 ($generated@@129 $generated@@155 $generated@@156 $generated@@154) $generated@@157) ($generated@@128 $generated@@155 $generated@@157)))
 :weight 0
)))) (= ($generated@@1 $generated@@124) 17)) (forall (($generated@@158 T@U) ($generated@@159 T@U) ) (! (let (($generated@@160 ($generated@@82 (type $generated@@159))))
(= (type ($generated@@130 $generated@@158 $generated@@159)) $generated@@160))
 :pattern ( ($generated@@130 $generated@@158 $generated@@159))
))) (= ($generated@@1 $generated@@125) 18)) (forall (($generated@@161 T@U) ($generated@@162 T@U) ($generated@@163 T@U) ) (! (= (type ($generated@@131 $generated@@161 $generated@@162 $generated@@163)) $generated@@125)
 :pattern ( ($generated@@131 $generated@@161 $generated@@162 $generated@@163))
))) (forall (($generated@@164 T@U) ($generated@@165 T@U) ($generated@@166 T@U) ) (! (let (($generated@@167 ($generated@@82 (type $generated@@165))))
 (=> (= (type $generated@@166) $generated@@167) (= ($generated@@130 ($generated@@131 $generated@@164 $generated@@165 $generated@@166) $generated@@165) $generated@@166)))
 :weight 0
))) (and (forall (($generated@@168 T@U) ($generated@@169 T@U) ($generated@@170 T@U) ($generated@@171 T@U) ) (!  (or (= $generated@@170 $generated@@171) (= ($generated@@130 ($generated@@131 $generated@@169 $generated@@170 $generated@@168) $generated@@171) ($generated@@130 $generated@@169 $generated@@171)))
 :weight 0
)) (forall (($generated@@172 T@U) ($generated@@173 T@U) ($generated@@174 T@U) ($generated@@175 T@U) ) (!  (or true (= ($generated@@130 ($generated@@131 $generated@@173 $generated@@174 $generated@@172) $generated@@175) ($generated@@130 $generated@@173 $generated@@175)))
 :weight 0
)))) (forall (($generated@@176 Int) ) (! (= (type ($generated@@122 $generated@@176)) $generated@@79)
 :pattern ( ($generated@@122 $generated@@176))
))))
(assert (forall (($generated@@177 T@U) ($generated@@178 T@U) ) (!  (=> (and (= (type $generated@@177) $generated@@2) (= (type $generated@@178) ($generated@@123 $generated@@124 $generated@@125))) ($generated@@121 $generated@@177 ($generated@@122 0) $generated@@178))
 :pattern ( ($generated@@121 $generated@@177 ($generated@@122 0) $generated@@178))
)))
(assert (forall (($generated@@179 T@U) ($generated@@180 T@U) ($generated@@181 T@U) ($generated@@182 T@U) ($generated@@183 T@U) ($generated@@184 T@U) ) (!  (=> (and (and (and (and (and (and (= (type $generated@@179) $generated@@79) (= (type $generated@@180) $generated@@79)) (= (type $generated@@181) $generated@@96)) (= (type $generated@@182) $generated@@97)) (= (type $generated@@183) $generated@@98)) (= (type $generated@@184) $generated@@98)) (not (= $generated@@181 ($generated@@105 0)))) (= ($generated@@94 $generated@@179 $generated@@180 $generated@@181 ($generated@@95 $generated@@182) $generated@@183 $generated@@184) ($generated@@94 $generated@@179 $generated@@180 $generated@@181 $generated@@182 $generated@@183 $generated@@184)))
 :pattern ( ($generated@@94 $generated@@179 $generated@@180 $generated@@181 ($generated@@95 $generated@@182) $generated@@183 $generated@@184))
)))
(assert (forall (($generated@@186 T@U) ($generated@@187 T@U) ) (!  (=> (and (and (= (type $generated@@186) ($generated@@123 $generated@@124 $generated@@125)) (= (type $generated@@187) ($generated@@123 $generated@@124 $generated@@125))) ($generated@@185 $generated@@186 $generated@@187)) (forall (($generated@@188 T@U) ) (!  (=> (and (= (type $generated@@188) $generated@@124) ($generated@@0 ($generated@@130 ($generated@@128 $generated@@186 $generated@@188) $generated@@60))) ($generated@@0 ($generated@@130 ($generated@@128 $generated@@187 $generated@@188) $generated@@60)))
 :pattern ( ($generated@@130 ($generated@@128 $generated@@187 $generated@@188) $generated@@60))
)))
 :pattern ( ($generated@@185 $generated@@186 $generated@@187))
)))
(assert (forall (($generated@@190 T@U) ($generated@@191 T@U) ($generated@@192 T@U) ) (!  (=> (and (and (and (= (type $generated@@190) $generated@@96) (= (type $generated@@191) $generated@@96)) (= (type $generated@@192) $generated@@96)) (and ($generated@@189 $generated@@190 $generated@@191) ($generated@@189 $generated@@191 $generated@@192))) ($generated@@189 $generated@@190 $generated@@192))
 :pattern ( ($generated@@189 $generated@@190 $generated@@191) ($generated@@189 $generated@@191 $generated@@192))
 :pattern ( ($generated@@189 $generated@@190 $generated@@191) ($generated@@189 $generated@@190 $generated@@192))
)))
(assert (= (type $generated@@193) $generated@@79))
(assert (forall (($generated@@194 T@U) ($generated@@195 T@U) ) (!  (=> (and (= (type $generated@@194) $generated@@2) (= (type $generated@@195) ($generated@@123 $generated@@124 $generated@@125))) ($generated@@121 $generated@@194 $generated@@193 $generated@@195))
 :pattern ( ($generated@@121 $generated@@194 $generated@@193 $generated@@195))
)))
(assert  (and (= (type $generated@@196) $generated@@79) (= (type $generated@@197) $generated@@124)))
(assert (forall (($generated@@198 T@U) ($generated@@199 T@U) ) (!  (=> (and (= (type $generated@@198) $generated@@124) (= (type $generated@@199) ($generated@@123 $generated@@124 $generated@@125))) (= ($generated@@121 $generated@@198 $generated@@196 $generated@@199)  (or (= $generated@@198 $generated@@197) ($generated@@0 ($generated@@130 ($generated@@128 $generated@@199 $generated@@198) $generated@@60)))))
 :pattern ( ($generated@@121 $generated@@198 $generated@@196 $generated@@199))
)))
(assert  (and (= (type $generated@@200) ($generated@@81 $generated@@2)) (forall (($generated@@203 T@U) ) (! (= (type ($generated@@202 $generated@@203)) $generated@@79)
 :pattern ( ($generated@@202 $generated@@203))
))))
(assert (forall (($generated@@204 T@U) ($generated@@205 T@U) ) (!  (=> (and (and (= (type $generated@@204) ($generated@@123 $generated@@124 $generated@@125)) (= (type $generated@@205) $generated@@124)) (and ($generated@@201 $generated@@204) (and (not (= $generated@@205 $generated@@197)) (= ($generated@@202 $generated@@205) $generated@@196)))) ($generated@@99 ($generated@@130 ($generated@@128 $generated@@204 $generated@@205) $generated@@200) $generated@@46))
 :pattern ( ($generated@@130 ($generated@@128 $generated@@204 $generated@@205) $generated@@200))
)))
(assert (forall (($generated@@206 T@U) ) (!  (=> (= (type $generated@@206) $generated@@2) ($generated@@99 $generated@@206 ($generated@@122 0)))
 :pattern ( ($generated@@99 $generated@@206 ($generated@@122 0)))
)))
(assert (forall (($generated@@207 T@U) ($generated@@208 Int) ($generated@@209 Int) ) (!  (=> (= (type $generated@@207) $generated@@96) (=> (and (and (<= 0 $generated@@208) (<= 0 $generated@@209)) (<= (+ $generated@@208 $generated@@209) ($generated@@101 $generated@@207))) (= ($generated@@104 ($generated@@104 $generated@@207 ($generated@@105 $generated@@208)) ($generated@@105 $generated@@209)) ($generated@@104 $generated@@207 ($generated@@105 (+ $generated@@208 $generated@@209))))))
 :pattern ( ($generated@@104 ($generated@@104 $generated@@207 ($generated@@105 $generated@@208)) ($generated@@105 $generated@@209)))
)))
(assert (forall (($generated@@212 T@U) ($generated@@213 T@U) ) (! (= (type ($generated@@211 $generated@@212 $generated@@213)) $generated@@79)
 :pattern ( ($generated@@211 $generated@@212 $generated@@213))
)))
(assert (forall (($generated@@214 T@U) ($generated@@215 T@U) ($generated@@216 T@U) ) (!  (=> (and (and (and (= (type $generated@@214) $generated@@79) (= (type $generated@@215) $generated@@79)) (= (type $generated@@216) $generated@@98)) ($generated@@99 $generated@@216 ($generated@@211 $generated@@214 $generated@@215))) ($generated@@210 $generated@@216))
 :pattern ( ($generated@@210 $generated@@216) ($generated@@99 $generated@@216 ($generated@@211 $generated@@214 $generated@@215)))
)))
(assert  (and (forall (($generated@@220 T@U) ) (! (= (type ($generated@@218 $generated@@220)) $generated@@96)
 :pattern ( ($generated@@218 $generated@@220))
)) (forall (($generated@@221 T@U) ) (! (= (type ($generated@@219 $generated@@221)) $generated@@96)
 :pattern ( ($generated@@219 $generated@@221))
))))
(assert (forall (($generated@@222 T@U) ($generated@@223 T@U) ) (!  (=> (and (and (= (type $generated@@222) $generated@@98) (= (type $generated@@223) $generated@@98)) true) (= ($generated@@217 $generated@@222 $generated@@223)  (and (= ($generated@@218 $generated@@222) ($generated@@218 $generated@@223)) (= ($generated@@219 $generated@@222) ($generated@@219 $generated@@223)))))
 :pattern ( ($generated@@217 $generated@@222 $generated@@223))
)))
(assert  (and (forall (($generated@@226 T@U) ) (! (= (type ($generated@@224 $generated@@226)) $generated@@84)
 :pattern ( ($generated@@224 $generated@@226))
)) (= (type $generated@@225) $generated@@98)))
(assert (= ($generated@@224 $generated@@225) $generated@@67))
(assert (forall (($generated@@229 T@U) ) (! (= (type ($generated@@227 $generated@@229)) $generated@@79)
 :pattern ( ($generated@@227 $generated@@229))
)))
(assert (forall (($generated@@230 T@U) ($generated@@231 T@U) ) (!  (=> (and (and (= (type $generated@@230) ($generated@@123 $generated@@96 $generated@@2)) (= (type $generated@@231) $generated@@79)) ($generated@@99 $generated@@230 ($generated@@227 $generated@@231))) ($generated@@228 $generated@@230))
 :pattern ( ($generated@@99 $generated@@230 ($generated@@227 $generated@@231)))
)))
(assert (forall (($generated@@232 T@U) ($generated@@233 T@U) ) (!  (=> (and (and (= (type $generated@@232) $generated@@79) (= (type $generated@@233) $generated@@98)) ($generated@@99 $generated@@233 ($generated@@100 $generated@@232))) ($generated@@102 $generated@@233))
 :pattern ( ($generated@@102 $generated@@233) ($generated@@99 $generated@@233 ($generated@@100 $generated@@232)))
)))
(assert (forall (($generated@@234 T@U) ) (!  (=> (= (type $generated@@234) $generated@@124) (= ($generated@@99 $generated@@234 $generated@@196)  (or (= $generated@@234 $generated@@197) (= ($generated@@202 $generated@@234) $generated@@196))))
 :pattern ( ($generated@@99 $generated@@234 $generated@@196))
)))
(assert  (and (and (and (and (and (and (and (forall (($generated@@241 T@T) ($generated@@242 T@T) ) (= ($generated@@1 ($generated@@237 $generated@@241 $generated@@242)) 19)) (forall (($generated@@243 T@T) ($generated@@244 T@T) ) (! (= ($generated@@238 ($generated@@237 $generated@@243 $generated@@244)) $generated@@243)
 :pattern ( ($generated@@237 $generated@@243 $generated@@244))
))) (forall (($generated@@245 T@T) ($generated@@246 T@T) ) (! (= ($generated@@239 ($generated@@237 $generated@@245 $generated@@246)) $generated@@246)
 :pattern ( ($generated@@237 $generated@@245 $generated@@246))
))) (forall (($generated@@247 T@U) ($generated@@248 T@U) ($generated@@249 T@U) ) (! (let (($generated@@250 ($generated@@239 (type $generated@@247))))
(= (type ($generated@@235 $generated@@247 $generated@@248 $generated@@249)) $generated@@250))
 :pattern ( ($generated@@235 $generated@@247 $generated@@248 $generated@@249))
))) (forall (($generated@@251 T@U) ($generated@@252 T@U) ($generated@@253 T@U) ($generated@@254 T@U) ) (! (let (($generated@@255 (type $generated@@254)))
(let (($generated@@256 (type $generated@@252)))
(= (type ($generated@@240 $generated@@251 $generated@@252 $generated@@253 $generated@@254)) ($generated@@237 $generated@@256 $generated@@255))))
 :pattern ( ($generated@@240 $generated@@251 $generated@@252 $generated@@253 $generated@@254))
))) (forall (($generated@@257 T@U) ($generated@@258 T@U) ($generated@@259 T@U) ($generated@@260 T@U) ) (! (let (($generated@@261 ($generated@@239 (type $generated@@257))))
 (=> (= (type $generated@@260) $generated@@261) (= ($generated@@235 ($generated@@240 $generated@@257 $generated@@258 $generated@@259 $generated@@260) $generated@@258 $generated@@259) $generated@@260)))
 :weight 0
))) (and (and (forall (($generated@@262 T@U) ($generated@@263 T@U) ($generated@@264 T@U) ($generated@@265 T@U) ($generated@@266 T@U) ($generated@@267 T@U) ) (!  (or (= $generated@@264 $generated@@266) (= ($generated@@235 ($generated@@240 $generated@@263 $generated@@264 $generated@@265 $generated@@262) $generated@@266 $generated@@267) ($generated@@235 $generated@@263 $generated@@266 $generated@@267)))
 :weight 0
)) (forall (($generated@@268 T@U) ($generated@@269 T@U) ($generated@@270 T@U) ($generated@@271 T@U) ($generated@@272 T@U) ($generated@@273 T@U) ) (!  (or (= $generated@@271 $generated@@273) (= ($generated@@235 ($generated@@240 $generated@@269 $generated@@270 $generated@@271 $generated@@268) $generated@@272 $generated@@273) ($generated@@235 $generated@@269 $generated@@272 $generated@@273)))
 :weight 0
))) (forall (($generated@@274 T@U) ($generated@@275 T@U) ($generated@@276 T@U) ($generated@@277 T@U) ($generated@@278 T@U) ($generated@@279 T@U) ) (!  (or true (= ($generated@@235 ($generated@@240 $generated@@275 $generated@@276 $generated@@277 $generated@@274) $generated@@278 $generated@@279) ($generated@@235 $generated@@275 $generated@@278 $generated@@279)))
 :weight 0
)))) (forall (($generated@@280 T@U) ($generated@@281 T@U) ($generated@@282 T@U) ($generated@@283 Bool) ) (! (= (type ($generated@@236 $generated@@280 $generated@@281 $generated@@282 $generated@@283)) ($generated@@237 $generated@@124 $generated@@4))
 :pattern ( ($generated@@236 $generated@@280 $generated@@281 $generated@@282 $generated@@283))
))))
(assert (forall (($generated@@284 T@U) ($generated@@285 T@U) ($generated@@286 T@U) ($generated@@287 Bool) ($generated@@288 T@U) ($generated@@289 T@U) ) (! (let (($generated@@290 ($generated@@82 (type $generated@@289))))
 (=> (and (and (and (and (= (type $generated@@284) $generated@@124) (= (type $generated@@285) ($generated@@123 $generated@@124 $generated@@125))) (= (type $generated@@286) ($generated@@81 $generated@@4))) (= (type $generated@@288) $generated@@124)) (= (type $generated@@289) ($generated@@81 $generated@@290))) (= ($generated@@0 ($generated@@235 ($generated@@236 $generated@@284 $generated@@285 $generated@@286 $generated@@287) $generated@@288 $generated@@289))  (=> (and (not (= $generated@@288 $generated@@284)) ($generated@@0 ($generated@@130 ($generated@@128 $generated@@285 $generated@@288) $generated@@286))) $generated@@287))))
 :pattern ( ($generated@@235 ($generated@@236 $generated@@284 $generated@@285 $generated@@286 $generated@@287) $generated@@288 $generated@@289))
)))
(assert (forall (($generated@@291 T@U) ($generated@@292 T@U) ($generated@@293 T@U) ($generated@@294 T@U) ($generated@@295 T@U) ($generated@@296 T@U) ) (!  (=> (and (and (and (and (and (and (= (type $generated@@291) $generated@@79) (= (type $generated@@292) $generated@@79)) (= (type $generated@@293) $generated@@96)) (= (type $generated@@294) $generated@@97)) (= (type $generated@@295) $generated@@98)) (= (type $generated@@296) $generated@@98)) (= $generated@@295 $generated@@296)) ($generated@@94 $generated@@291 $generated@@292 $generated@@293 ($generated@@95 $generated@@294) $generated@@295 $generated@@296))
 :pattern ( ($generated@@94 $generated@@291 $generated@@292 $generated@@293 ($generated@@95 $generated@@294) $generated@@295 $generated@@296))
)))
(assert (= (type $generated@@297) $generated@@79))
(assert (forall (($generated@@298 T@U) ($generated@@299 T@U) ) (!  (=> (and (= (type $generated@@298) $generated@@124) (= (type $generated@@299) ($generated@@123 $generated@@124 $generated@@125))) (= ($generated@@121 $generated@@298 $generated@@297 $generated@@299) ($generated@@121 $generated@@298 $generated@@196 $generated@@299)))
 :pattern ( ($generated@@121 $generated@@298 $generated@@297 $generated@@299))
)))
(assert (forall (($generated@@301 T@U) ) (! (= (type ($generated@@300 $generated@@301)) $generated@@79)
 :pattern ( ($generated@@300 $generated@@301))
)))
(assert (forall (($generated@@302 T@U) ($generated@@303 T@U) ) (!  (=> (and (and (= (type $generated@@302) $generated@@79) (= (type $generated@@303) ($generated@@123 $generated@@124 $generated@@125))) ($generated@@201 $generated@@303)) ($generated@@121 $generated@@225 ($generated@@300 $generated@@302) $generated@@303))
 :pattern ( ($generated@@121 $generated@@225 ($generated@@300 $generated@@302) $generated@@303))
)))
(assert (forall (($generated@@306 T@U) ($generated@@307 T@U) ) (! (= (type ($generated@@304 $generated@@306 $generated@@307)) $generated@@98)
 :pattern ( ($generated@@304 $generated@@306 $generated@@307))
)))
(assert (forall (($generated@@308 T@U) ($generated@@309 T@U) ($generated@@310 T@U) ($generated@@311 T@U) ) (!  (=> (and (and (and (= (type $generated@@308) $generated@@79) (= (type $generated@@309) $generated@@79)) (= (type $generated@@310) $generated@@96)) (= (type $generated@@311) $generated@@96)) (= ($generated@@99 ($generated@@304 $generated@@310 $generated@@311) ($generated@@211 $generated@@308 $generated@@309))  (and ($generated@@305 $generated@@310 $generated@@308) ($generated@@305 $generated@@311 $generated@@309))))
 :pattern ( ($generated@@99 ($generated@@304 $generated@@310 $generated@@311) ($generated@@211 $generated@@308 $generated@@309)))
)))
(assert  (and (and (forall (($generated@@317 T@U) ($generated@@318 Int) ) (! (= (type ($generated@@313 $generated@@317 $generated@@318)) $generated@@98)
 :pattern ( ($generated@@313 $generated@@317 $generated@@318))
)) (forall (($generated@@319 T@U) ($generated@@320 T@U) ) (! (= (type ($generated@@315 $generated@@319 $generated@@320)) $generated@@98)
 :pattern ( ($generated@@315 $generated@@319 $generated@@320))
))) (forall (($generated@@321 T@U) ) (! (= (type ($generated@@316 $generated@@321)) $generated@@96)
 :pattern ( ($generated@@316 $generated@@321))
))))
(assert  (=> (<= 1 $generated@@312) (forall (($generated@@322 T@U) ($generated@@323 Int) ) (!  (=> (and (= (type $generated@@322) $generated@@97) (or ($generated@@314 $generated@@323) (not (= 1 $generated@@312)))) (and ($generated@@314 (+ $generated@@323 1)) (= ($generated@@313 ($generated@@95 $generated@@322) $generated@@323) ($generated@@315 ($generated@@316 ($generated@@8 $generated@@323)) ($generated@@313 $generated@@322 (+ $generated@@323 1))))))
 :pattern ( ($generated@@313 ($generated@@95 $generated@@322) $generated@@323))
))))
(assert (= ($generated@@89 $generated@@200) 0))
(assert (forall (($generated@@325 T@T) ($generated@@326 T@U) ($generated@@327 T@U) ) (! (= (type ($generated@@324 $generated@@325 $generated@@326 $generated@@327)) ($generated@@81 $generated@@325))
 :pattern ( ($generated@@324 $generated@@325 $generated@@326 $generated@@327))
)))
(assert (= ($generated@@324 $generated@@2 $generated@@70 $generated@@78) $generated@@200))
(assert  (not ($generated@@328 $generated@@200)))
(assert (forall (($generated@@329 T@U) ($generated@@330 T@U) ($generated@@331 T@U) ($generated@@332 T@U) ($generated@@333 T@U) ) (!  (=> (and (and (and (and (= (type $generated@@329) $generated@@79) (= (type $generated@@330) $generated@@79)) (= (type $generated@@331) $generated@@97)) (= (type $generated@@332) $generated@@98)) (= (type $generated@@333) $generated@@98)) (= ($generated@@107 $generated@@329 $generated@@330 ($generated@@95 $generated@@331) $generated@@332 $generated@@333) (= $generated@@332 $generated@@333)))
 :pattern ( ($generated@@107 $generated@@329 $generated@@330 ($generated@@95 $generated@@331) $generated@@332 $generated@@333))
)))
(assert (forall (($generated@@334 T@U) ) (!  (=> (= (type $generated@@334) $generated@@79) ($generated@@99 $generated@@225 ($generated@@300 $generated@@334)))
 :pattern ( ($generated@@99 $generated@@225 ($generated@@300 $generated@@334)))
)))
(assert (forall (($generated@@335 T@U) ($generated@@336 T@U) ) (!  (=> (and (= (type $generated@@335) $generated@@98) (= (type $generated@@336) $generated@@98)) (= ($generated@@217 $generated@@335 $generated@@336) (= $generated@@335 $generated@@336)))
 :pattern ( ($generated@@217 $generated@@335 $generated@@336))
)))
(assert (forall (($generated@@338 T@U) ($generated@@339 T@U) ) (!  (=> (and (= (type $generated@@338) $generated@@98) (= (type $generated@@339) $generated@@98)) (= ($generated@@337 $generated@@338 $generated@@339) (= $generated@@338 $generated@@339)))
 :pattern ( ($generated@@337 $generated@@338 $generated@@339))
)))
(assert  (and (forall (($generated@@343 T@U) ) (! (= (type ($generated@@341 $generated@@343)) $generated@@96)
 :pattern ( ($generated@@341 $generated@@343))
)) (forall (($generated@@344 T@U) ) (! (= (type ($generated@@342 $generated@@344)) $generated@@98)
 :pattern ( ($generated@@342 $generated@@344))
))))
(assert (forall (($generated@@345 T@U) ($generated@@346 T@U) ) (!  (=> (and (and (= (type $generated@@345) $generated@@98) (= (type $generated@@346) $generated@@98)) (and ($generated@@340 $generated@@345) ($generated@@340 $generated@@346))) (= ($generated@@337 $generated@@345 $generated@@346)  (and (= ($generated@@341 $generated@@345) ($generated@@341 $generated@@346)) ($generated@@337 ($generated@@342 $generated@@345) ($generated@@342 $generated@@346)))))
 :pattern ( ($generated@@337 $generated@@345 $generated@@346) ($generated@@340 $generated@@345))
 :pattern ( ($generated@@337 $generated@@345 $generated@@346) ($generated@@340 $generated@@346))
)))
(assert  (and (forall (($generated@@351 T@U) ($generated@@352 T@U) ($generated@@353 Int) ($generated@@354 T@U) ) (! (= (type ($generated@@347 $generated@@351 $generated@@352 $generated@@353 $generated@@354)) $generated@@98)
 :pattern ( ($generated@@347 $generated@@351 $generated@@352 $generated@@353 $generated@@354))
)) (forall (($generated@@355 T@U) ($generated@@356 T@U) ) (! (= (type ($generated@@350 $generated@@355 $generated@@356)) $generated@@98)
 :pattern ( ($generated@@350 $generated@@355 $generated@@356))
))))
(assert  (=> (<= 1 $generated@@312) (forall (($generated@@357 T@U) ($generated@@358 T@U) ($generated@@359 Int) ($generated@@360 T@U) ) (!  (=> (and (and (and (= (type $generated@@357) $generated@@79) (= (type $generated@@358) $generated@@97)) (= (type $generated@@360) $generated@@98)) (or ($generated@@348 $generated@@357 $generated@@359 $generated@@360) (and (not (= 1 $generated@@312)) (and (<= ($generated@@349 0) $generated@@359) ($generated@@99 $generated@@360 ($generated@@100 $generated@@357)))))) (and (=> (not (= $generated@@359 ($generated@@349 0))) (and ($generated@@102 $generated@@360) (and ($generated@@102 $generated@@360) ($generated@@348 $generated@@357 (- $generated@@359 1) ($generated@@106 $generated@@360))))) (= ($generated@@347 $generated@@357 ($generated@@95 $generated@@358) $generated@@359 $generated@@360) (ite (= $generated@@359 ($generated@@349 0)) $generated@@225 ($generated@@350 ($generated@@103 $generated@@360) ($generated@@347 $generated@@357 $generated@@358 (- $generated@@359 1) ($generated@@106 $generated@@360)))))))
 :pattern ( ($generated@@347 $generated@@357 ($generated@@95 $generated@@358) $generated@@359 $generated@@360))
))))
(assert (forall (($generated@@362 T@U) ) (! (= (type ($generated@@361 $generated@@362)) $generated@@79)
 :pattern ( ($generated@@361 $generated@@362))
)))
(assert (forall (($generated@@363 T@U) ($generated@@364 T@U) ) (!  (=> (and (= (type $generated@@363) ($generated@@123 $generated@@96 $generated@@4)) (= (type $generated@@364) $generated@@79)) (= ($generated@@99 $generated@@363 ($generated@@361 $generated@@364)) (forall (($generated@@365 T@U) ) (!  (=> (and (= (type $generated@@365) $generated@@96) ($generated@@0 ($generated@@128 $generated@@363 $generated@@365))) ($generated@@305 $generated@@365 $generated@@364))
 :pattern ( ($generated@@128 $generated@@363 $generated@@365))
))))
 :pattern ( ($generated@@99 $generated@@363 ($generated@@361 $generated@@364)))
)))
(assert (forall (($generated@@367 T@U) ) (! (= (type ($generated@@366 $generated@@367)) $generated@@79)
 :pattern ( ($generated@@366 $generated@@367))
)))
(assert (forall (($generated@@368 T@U) ($generated@@369 T@U) ) (!  (=> (and (= (type $generated@@368) ($generated@@123 $generated@@96 $generated@@4)) (= (type $generated@@369) $generated@@79)) (= ($generated@@99 $generated@@368 ($generated@@366 $generated@@369)) (forall (($generated@@370 T@U) ) (!  (=> (and (= (type $generated@@370) $generated@@96) ($generated@@0 ($generated@@128 $generated@@368 $generated@@370))) ($generated@@305 $generated@@370 $generated@@369))
 :pattern ( ($generated@@128 $generated@@368 $generated@@370))
))))
 :pattern ( ($generated@@99 $generated@@368 ($generated@@366 $generated@@369)))
)))
(assert (forall (($generated@@371 Int) ) (! (= ($generated@@349 $generated@@371) $generated@@371)
 :pattern ( ($generated@@349 $generated@@371))
)))
(assert (forall (($generated@@373 T@U) ) (! (let (($generated@@374 (type $generated@@373)))
(= (type ($generated@@372 $generated@@373)) $generated@@374))
 :pattern ( ($generated@@372 $generated@@373))
)))
(assert (forall (($generated@@375 T@U) ) (! (= ($generated@@372 $generated@@375) $generated@@375)
 :pattern ( ($generated@@372 $generated@@375))
)))
(assert (forall (($generated@@377 T@U) ($generated@@378 T@U) ) (!  (=> (and (and (= (type $generated@@377) $generated@@98) (= (type $generated@@378) $generated@@98)) (and ($generated@@376 $generated@@377) ($generated@@376 $generated@@378))) (= ($generated@@337 $generated@@377 $generated@@378) true))
 :pattern ( ($generated@@337 $generated@@377 $generated@@378) ($generated@@376 $generated@@377))
 :pattern ( ($generated@@337 $generated@@377 $generated@@378) ($generated@@376 $generated@@378))
)))
(assert (forall (($generated@@379 T@U) ($generated@@380 T@U) ($generated@@381 T@U) ) (!  (=> (and (and (= (type $generated@@379) $generated@@79) (= (type $generated@@380) $generated@@96)) (= (type $generated@@381) $generated@@98)) (= ($generated@@99 ($generated@@315 $generated@@380 $generated@@381) ($generated@@100 $generated@@379))  (and ($generated@@305 $generated@@380 $generated@@379) ($generated@@99 $generated@@381 ($generated@@100 $generated@@379)))))
 :pattern ( ($generated@@99 ($generated@@315 $generated@@380 $generated@@381) ($generated@@100 $generated@@379)))
)))
(assert (forall (($generated@@382 T@U) ($generated@@383 T@U) ($generated@@384 T@U) ) (!  (=> (and (and (= (type $generated@@382) $generated@@79) (= (type $generated@@383) $generated@@96)) (= (type $generated@@384) $generated@@98)) (= ($generated@@99 ($generated@@350 $generated@@383 $generated@@384) ($generated@@300 $generated@@382))  (and ($generated@@305 $generated@@383 $generated@@382) ($generated@@99 $generated@@384 ($generated@@300 $generated@@382)))))
 :pattern ( ($generated@@99 ($generated@@350 $generated@@383 $generated@@384) ($generated@@300 $generated@@382)))
)))
(assert (forall (($generated@@386 T@U) ($generated@@387 T@U) ($generated@@388 T@U) ($generated@@389 T@U) ($generated@@390 T@U) ) (!  (=> (and (and (and (and (and (= (type $generated@@386) $generated@@79) (= (type $generated@@387) $generated@@79)) (= (type $generated@@388) $generated@@96)) (= (type $generated@@389) $generated@@96)) (= (type $generated@@390) ($generated@@123 $generated@@124 $generated@@125))) ($generated@@201 $generated@@390)) (= ($generated@@121 ($generated@@304 $generated@@388 $generated@@389) ($generated@@211 $generated@@386 $generated@@387) $generated@@390)  (and ($generated@@385 $generated@@388 $generated@@386 $generated@@390) ($generated@@385 $generated@@389 $generated@@387 $generated@@390))))
 :pattern ( ($generated@@121 ($generated@@304 $generated@@388 $generated@@389) ($generated@@211 $generated@@386 $generated@@387) $generated@@390))
)))
(assert (forall (($generated@@391 T@U) ) (!  (=> (= (type $generated@@391) $generated@@98) (= ($generated@@210 $generated@@391) (= ($generated@@224 $generated@@391) $generated@@63)))
 :pattern ( ($generated@@210 $generated@@391))
)))
(assert (forall (($generated@@392 T@U) ) (!  (=> (= (type $generated@@392) $generated@@98) (= ($generated@@102 $generated@@392) (= ($generated@@224 $generated@@392) $generated@@65)))
 :pattern ( ($generated@@102 $generated@@392))
)))
(assert (forall (($generated@@393 T@U) ) (!  (=> (= (type $generated@@393) $generated@@98) (= ($generated@@376 $generated@@393) (= ($generated@@224 $generated@@393) $generated@@67)))
 :pattern ( ($generated@@376 $generated@@393))
)))
(assert (forall (($generated@@394 T@U) ) (!  (=> (= (type $generated@@394) $generated@@98) (= ($generated@@340 $generated@@394) (= ($generated@@224 $generated@@394) $generated@@69)))
 :pattern ( ($generated@@340 $generated@@394))
)))
(assert (forall (($generated@@395 T@U) ) (!  (=> (and (= (type $generated@@395) $generated@@98) ($generated@@210 $generated@@395)) (exists (($generated@@396 T@U) ($generated@@397 T@U) ) (!  (and (and (= (type $generated@@396) $generated@@96) (= (type $generated@@397) $generated@@96)) (= $generated@@395 ($generated@@304 $generated@@396 $generated@@397)))
 :no-pattern (type $generated@@396)
 :no-pattern (type $generated@@397)
 :no-pattern ($generated $generated@@396)
 :no-pattern ($generated@@0 $generated@@396)
 :no-pattern ($generated $generated@@397)
 :no-pattern ($generated@@0 $generated@@397)
)))
 :pattern ( ($generated@@210 $generated@@395))
)))
(assert (forall (($generated@@398 T@U) ) (!  (=> (and (= (type $generated@@398) $generated@@98) ($generated@@102 $generated@@398)) (exists (($generated@@399 T@U) ($generated@@400 T@U) ) (!  (and (and (= (type $generated@@399) $generated@@96) (= (type $generated@@400) $generated@@98)) (= $generated@@398 ($generated@@315 $generated@@399 $generated@@400)))
 :no-pattern (type $generated@@399)
 :no-pattern (type $generated@@400)
 :no-pattern ($generated $generated@@399)
 :no-pattern ($generated@@0 $generated@@399)
 :no-pattern ($generated $generated@@400)
 :no-pattern ($generated@@0 $generated@@400)
)))
 :pattern ( ($generated@@102 $generated@@398))
)))
(assert (forall (($generated@@401 T@U) ) (!  (=> (and (= (type $generated@@401) $generated@@98) ($generated@@340 $generated@@401)) (exists (($generated@@402 T@U) ($generated@@403 T@U) ) (!  (and (and (= (type $generated@@402) $generated@@96) (= (type $generated@@403) $generated@@98)) (= $generated@@401 ($generated@@350 $generated@@402 $generated@@403)))
 :no-pattern (type $generated@@402)
 :no-pattern (type $generated@@403)
 :no-pattern ($generated $generated@@402)
 :no-pattern ($generated@@0 $generated@@402)
 :no-pattern ($generated $generated@@403)
 :no-pattern ($generated@@0 $generated@@403)
)))
 :pattern ( ($generated@@340 $generated@@401))
)))
(assert  (and (and (forall (($generated@@408 T@T) ) (= ($generated@@1 ($generated@@406 $generated@@408)) 20)) (forall (($generated@@409 T@T) ) (! (= ($generated@@407 ($generated@@406 $generated@@409)) $generated@@409)
 :pattern ( ($generated@@406 $generated@@409))
))) (forall (($generated@@410 T@T) ) (! (= (type ($generated@@404 $generated@@410)) ($generated@@406 $generated@@410))
 :pattern ( ($generated@@404 $generated@@410))
))))
(assert (forall (($generated@@411 T@T) ) (! (= ($generated@@405 ($generated@@404 $generated@@411)) 0)
 :pattern ( ($generated@@404 $generated@@411))
)))
(assert (forall (($generated@@412 T@U) ) (!  (=> (and (= (type $generated@@412) $generated@@98) ($generated@@376 $generated@@412)) (= $generated@@412 $generated@@225))
 :pattern ( ($generated@@376 $generated@@412))
)))
(assert (forall (($generated@@413 T@U) ) (!  (=> (= (type $generated@@413) $generated@@2) (= ($generated@@99 $generated@@413 $generated@@193) (<= ($generated@@349 0) ($generated $generated@@413))))
 :pattern ( ($generated@@99 $generated@@413 $generated@@193))
)))
(assert ($generated@@328 $generated@@60))
(assert  (and (forall (($generated@@416 T@U) ) (! (= (type ($generated@@414 $generated@@416)) $generated@@97)
 :pattern ( ($generated@@414 $generated@@416))
)) (= (type $generated@@415) $generated@@97)))
(assert (forall (($generated@@417 T@U) ($generated@@418 T@U) ($generated@@419 Int) ($generated@@420 T@U) ) (!  (=> (and (and (= (type $generated@@417) $generated@@79) (= (type $generated@@418) $generated@@97)) (= (type $generated@@420) $generated@@98)) (= ($generated@@347 $generated@@417 $generated@@418 $generated@@419 $generated@@420) ($generated@@347 $generated@@417 $generated@@415 $generated@@419 $generated@@420)))
 :pattern ( ($generated@@347 $generated@@417 ($generated@@414 $generated@@418) $generated@@419 $generated@@420))
)))
(assert (forall (($generated@@421 T@U) ($generated@@422 T@U) ($generated@@423 T@U) ($generated@@424 T@U) ($generated@@425 T@U) ) (!  (=> (and (and (and (and (and (= (type $generated@@421) $generated@@79) (= (type $generated@@422) $generated@@79)) (= (type $generated@@423) $generated@@97)) (= (type $generated@@424) $generated@@98)) (= (type $generated@@425) $generated@@98)) (and ($generated@@99 $generated@@424 ($generated@@100 $generated@@421)) ($generated@@99 $generated@@425 ($generated@@100 $generated@@422)))) (= ($generated@@107 $generated@@421 $generated@@422 ($generated@@95 $generated@@423) $generated@@424 $generated@@425)  (and (and ($generated@@102 $generated@@424) ($generated@@102 $generated@@425)) (=> (and ($generated@@102 $generated@@424) ($generated@@102 $generated@@425)) (and (= ($generated@@103 $generated@@424) ($generated@@103 $generated@@425)) ($generated@@107 $generated@@421 $generated@@422 $generated@@423 ($generated@@106 $generated@@424) ($generated@@106 $generated@@425)))))))
 :pattern ( ($generated@@107 $generated@@421 $generated@@422 ($generated@@95 $generated@@423) $generated@@424 $generated@@425))
)))
(assert (forall (($generated@@426 T@U) ($generated@@427 T@U) ($generated@@428 T@U) ) (!  (=> (and (= (type $generated@@427) $generated@@79) (= (type $generated@@428) ($generated@@123 $generated@@124 $generated@@125))) (= ($generated@@385 ($generated@@316 $generated@@426) $generated@@427 $generated@@428) ($generated@@121 $generated@@426 $generated@@427 $generated@@428)))
 :pattern ( ($generated@@385 ($generated@@316 $generated@@426) $generated@@427 $generated@@428))
)))
(assert (forall (($generated@@429 T@U) ($generated@@430 T@U) ($generated@@431 T@U) ($generated@@432 T@U) ) (!  (=> (and (and (and (and (and (= (type $generated@@429) ($generated@@123 $generated@@124 $generated@@125)) (= (type $generated@@430) ($generated@@123 $generated@@124 $generated@@125))) (= (type $generated@@431) $generated@@96)) (= (type $generated@@432) $generated@@79)) ($generated@@185 $generated@@429 $generated@@430)) ($generated@@385 $generated@@431 $generated@@432 $generated@@429)) ($generated@@385 $generated@@431 $generated@@432 $generated@@430))
 :pattern ( ($generated@@185 $generated@@429 $generated@@430) ($generated@@385 $generated@@431 $generated@@432 $generated@@429))
)))
(assert (forall (($generated@@433 T@U) ($generated@@434 T@U) ($generated@@435 T@U) ($generated@@436 T@U) ) (!  (=> (and (and (and (and (= (type $generated@@433) ($generated@@123 $generated@@124 $generated@@125)) (= (type $generated@@434) ($generated@@123 $generated@@124 $generated@@125))) (= (type $generated@@436) $generated@@79)) ($generated@@185 $generated@@433 $generated@@434)) ($generated@@121 $generated@@435 $generated@@436 $generated@@433)) ($generated@@121 $generated@@435 $generated@@436 $generated@@434))
 :pattern ( ($generated@@185 $generated@@433 $generated@@434) ($generated@@121 $generated@@435 $generated@@436 $generated@@433))
)))
(assert (forall (($generated@@437 T@U) ($generated@@438 T@U) ) (!  (=> (and (= (type $generated@@437) ($generated@@123 $generated@@124 $generated@@125)) (= (type $generated@@438) $generated@@124)) (=> (and (and ($generated@@201 $generated@@437) (and (not (= $generated@@438 $generated@@197)) (= ($generated@@202 $generated@@438) $generated@@196))) ($generated@@0 ($generated@@130 ($generated@@128 $generated@@437 $generated@@438) $generated@@60))) ($generated@@121 ($generated@@130 ($generated@@128 $generated@@437 $generated@@438) $generated@@200) $generated@@46 $generated@@437)))
 :pattern ( ($generated@@130 ($generated@@128 $generated@@437 $generated@@438) $generated@@200))
)))
(assert (forall (($generated@@441 T@T) ) (! (= (type ($generated@@440 $generated@@441)) ($generated@@123 $generated@@441 $generated@@2))
 :pattern ( ($generated@@440 $generated@@441))
)))
(assert (forall (($generated@@442 T@U) ) (! (let (($generated@@443 ($generated@@126 (type $generated@@442))))
 (=> (= (type $generated@@442) ($generated@@123 $generated@@443 $generated@@2)) (and (= (= ($generated@@439 $generated@@442) 0) (= $generated@@442 ($generated@@440 $generated@@443))) (=> (not (= ($generated@@439 $generated@@442) 0)) (exists (($generated@@444 T@U) ) (!  (and (= (type $generated@@444) $generated@@443) (< 0 ($generated ($generated@@128 $generated@@442 $generated@@444))))
 :no-pattern (type $generated@@444)
 :no-pattern ($generated $generated@@444)
 :no-pattern ($generated@@0 $generated@@444)
))))))
 :pattern ( ($generated@@439 $generated@@442))
)))
(assert (forall (($generated@@446 T@U) ) (! (= (type ($generated@@445 $generated@@446)) $generated@@86)
 :pattern ( ($generated@@445 $generated@@446))
)))
(assert (forall (($generated@@447 T@U) ) (!  (=> (= (type $generated@@447) $generated@@79) (and (= ($generated@@90 ($generated@@100 $generated@@447)) $generated@@66) (= ($generated@@445 ($generated@@100 $generated@@447)) $generated@@75)))
 :pattern ( ($generated@@100 $generated@@447))
)))
(assert (forall (($generated@@448 T@U) ) (!  (=> (= (type $generated@@448) $generated@@79) (and (= ($generated@@90 ($generated@@300 $generated@@448)) $generated@@68) (= ($generated@@445 ($generated@@300 $generated@@448)) $generated@@76)))
 :pattern ( ($generated@@300 $generated@@448))
)))
(assert  (and (and (and (and (forall (($generated@@454 T@T) ($generated@@455 T@T) ) (= ($generated@@1 ($generated@@451 $generated@@454 $generated@@455)) 21)) (forall (($generated@@456 T@T) ($generated@@457 T@T) ) (! (= ($generated@@452 ($generated@@451 $generated@@456 $generated@@457)) $generated@@456)
 :pattern ( ($generated@@451 $generated@@456 $generated@@457))
))) (forall (($generated@@458 T@T) ($generated@@459 T@T) ) (! (= ($generated@@453 ($generated@@451 $generated@@458 $generated@@459)) $generated@@459)
 :pattern ( ($generated@@451 $generated@@458 $generated@@459))
))) (forall (($generated@@460 T@U) ) (! (let (($generated@@461 ($generated@@452 (type $generated@@460))))
(= (type ($generated@@449 $generated@@460)) ($generated@@123 $generated@@461 $generated@@4)))
 :pattern ( ($generated@@449 $generated@@460))
))) (forall (($generated@@462 T@T) ($generated@@463 T@T) ) (! (= (type ($generated@@450 $generated@@462 $generated@@463)) ($generated@@451 $generated@@462 $generated@@463))
 :pattern ( ($generated@@450 $generated@@462 $generated@@463))
))))
(assert (forall (($generated@@464 T@U) ($generated@@465 T@T) ) (! (let (($generated@@466 (type $generated@@464)))
 (not ($generated@@0 ($generated@@128 ($generated@@449 ($generated@@450 $generated@@466 $generated@@465)) $generated@@464))))
 :pattern ( (let (($generated@@466 (type $generated@@464)))
($generated@@128 ($generated@@449 ($generated@@450 $generated@@466 $generated@@465)) $generated@@464)))
)))
(assert  (and (and (and (and (forall (($generated@@472 T@T) ($generated@@473 T@T) ) (= ($generated@@1 ($generated@@469 $generated@@472 $generated@@473)) 22)) (forall (($generated@@474 T@T) ($generated@@475 T@T) ) (! (= ($generated@@470 ($generated@@469 $generated@@474 $generated@@475)) $generated@@474)
 :pattern ( ($generated@@469 $generated@@474 $generated@@475))
))) (forall (($generated@@476 T@T) ($generated@@477 T@T) ) (! (= ($generated@@471 ($generated@@469 $generated@@476 $generated@@477)) $generated@@477)
 :pattern ( ($generated@@469 $generated@@476 $generated@@477))
))) (forall (($generated@@478 T@U) ) (! (let (($generated@@479 ($generated@@470 (type $generated@@478))))
(= (type ($generated@@467 $generated@@478)) ($generated@@123 $generated@@479 $generated@@4)))
 :pattern ( ($generated@@467 $generated@@478))
))) (forall (($generated@@480 T@T) ($generated@@481 T@T) ) (! (= (type ($generated@@468 $generated@@480 $generated@@481)) ($generated@@469 $generated@@480 $generated@@481))
 :pattern ( ($generated@@468 $generated@@480 $generated@@481))
))))
(assert (forall (($generated@@482 T@U) ($generated@@483 T@T) ) (! (let (($generated@@484 (type $generated@@482)))
 (not ($generated@@0 ($generated@@128 ($generated@@467 ($generated@@468 $generated@@484 $generated@@483)) $generated@@482))))
 :pattern ( (let (($generated@@484 (type $generated@@482)))
($generated@@128 ($generated@@467 ($generated@@468 $generated@@484 $generated@@483)) $generated@@482)))
)))
(assert (forall (($generated@@486 T@U) ($generated@@487 T@U) ) (!  (=> (and (and (= (type $generated@@486) ($generated@@123 $generated@@124 $generated@@125)) (= (type $generated@@487) ($generated@@123 $generated@@124 $generated@@125))) ($generated@@485 $generated@@486 $generated@@487)) (and ($generated@@185 $generated@@486 $generated@@487) (forall (($generated@@488 T@U) ($generated@@489 T@U) ) (! (let (($generated@@490 ($generated@@82 (type $generated@@489))))
 (=> (and (and (= (type $generated@@488) $generated@@124) (= (type $generated@@489) ($generated@@81 $generated@@490))) (not ($generated@@328 $generated@@489))) (= ($generated@@130 ($generated@@128 $generated@@486 $generated@@488) $generated@@489) ($generated@@130 ($generated@@128 $generated@@487 $generated@@488) $generated@@489))))
 :pattern ( ($generated@@130 ($generated@@128 $generated@@487 $generated@@488) $generated@@489))
))))
 :pattern ( ($generated@@485 $generated@@486 $generated@@487))
)))
(assert (forall (($generated@@492 T@U) ($generated@@493 T@U) ) (!  (=> (and (and (= (type $generated@@492) $generated@@96) (= (type $generated@@493) $generated@@96)) (and ($generated@@491 $generated@@493) (<= ($generated@@101 $generated@@493) ($generated@@101 $generated@@492)))) (and (= ($generated@@491 ($generated@@104 $generated@@492 $generated@@493)) ($generated@@491 $generated@@492)) (= ($generated@@101 ($generated@@104 $generated@@492 $generated@@493)) (- ($generated@@101 $generated@@492) ($generated@@101 $generated@@493)))))
 :pattern ( ($generated@@104 $generated@@492 $generated@@493))
)))
(assert (forall (($generated@@494 Int) ) (!  (=> (<= 0 $generated@@494) (and ($generated@@491 ($generated@@105 $generated@@494)) (= ($generated@@101 ($generated@@105 $generated@@494)) $generated@@494)))
 :pattern ( ($generated@@105 $generated@@494))
)))
(assert (forall (($generated@@495 T@U) ) (! (let (($generated@@496 ($generated@@126 (type $generated@@495))))
 (=> (= (type $generated@@495) ($generated@@123 $generated@@496 $generated@@2)) (= ($generated@@228 $generated@@495) (forall (($generated@@497 T@U) ) (!  (=> (= (type $generated@@497) $generated@@496) (and (<= 0 ($generated ($generated@@128 $generated@@495 $generated@@497))) (<= ($generated ($generated@@128 $generated@@495 $generated@@497)) ($generated@@439 $generated@@495))))
 :pattern ( ($generated@@128 $generated@@495 $generated@@497))
)))))
 :pattern ( ($generated@@228 $generated@@495))
)))
(assert (forall (($generated@@499 T@T) ($generated@@500 T@U) ) (! (= (type ($generated@@498 $generated@@499 $generated@@500)) $generated@@499)
 :pattern ( ($generated@@498 $generated@@499 $generated@@500))
)))
(assert (forall (($generated@@501 T@U) ) (!  (=> (and (= (type $generated@@501) $generated@@96) ($generated@@305 $generated@@501 $generated@@193)) (and (= ($generated@@316 ($generated@@498 $generated@@2 $generated@@501)) $generated@@501) ($generated@@99 ($generated@@498 $generated@@2 $generated@@501) $generated@@193)))
 :pattern ( ($generated@@305 $generated@@501 $generated@@193))
)))
(assert (forall (($generated@@502 T@U) ) (!  (=> (and (= (type $generated@@502) $generated@@96) ($generated@@305 $generated@@502 $generated@@196)) (and (= ($generated@@316 ($generated@@498 $generated@@124 $generated@@502)) $generated@@502) ($generated@@99 ($generated@@498 $generated@@124 $generated@@502) $generated@@196)))
 :pattern ( ($generated@@305 $generated@@502 $generated@@196))
)))
(assert (forall (($generated@@503 T@U) ) (!  (=> (and (= (type $generated@@503) $generated@@96) ($generated@@305 $generated@@503 $generated@@297)) (and (= ($generated@@316 ($generated@@498 $generated@@124 $generated@@503)) $generated@@503) ($generated@@99 ($generated@@498 $generated@@124 $generated@@503) $generated@@297)))
 :pattern ( ($generated@@305 $generated@@503 $generated@@297))
)))
(assert  (=> (<= 1 $generated@@312) (forall (($generated@@504 T@U) ($generated@@505 Int) ) (!  (=> (and (= (type $generated@@504) $generated@@97) (or ($generated@@314 $generated@@505) (not (= 1 $generated@@312)))) ($generated@@99 ($generated@@313 $generated@@504 $generated@@505) ($generated@@100 $generated@@46)))
 :pattern ( ($generated@@313 $generated@@504 $generated@@505))
))))
(assert (forall (($generated@@506 T@U) ) (!  (=> (= (type $generated@@506) $generated@@124) (= ($generated@@99 $generated@@506 $generated@@297)  (and ($generated@@99 $generated@@506 $generated@@196) (not (= $generated@@506 $generated@@197)))))
 :pattern ( ($generated@@99 $generated@@506 $generated@@297))
)))
(assert (forall (($generated@@507 T@U) ) (! (let (($generated@@508 ($generated@@453 (type $generated@@507))))
(let (($generated@@509 ($generated@@452 (type $generated@@507))))
 (=> (= (type $generated@@507) ($generated@@451 $generated@@509 $generated@@508)) (or (= $generated@@507 ($generated@@450 $generated@@509 $generated@@508)) (exists (($generated@@510 T@U) ) (!  (and (= (type $generated@@510) $generated@@509) ($generated@@0 ($generated@@128 ($generated@@449 $generated@@507) $generated@@510)))
 :no-pattern (type $generated@@510)
 :no-pattern ($generated $generated@@510)
 :no-pattern ($generated@@0 $generated@@510)
))))))
 :pattern ( ($generated@@449 $generated@@507))
)))
(assert (forall (($generated@@512 T@U) ) (! (let (($generated@@513 ($generated@@453 (type $generated@@512))))
(= (type ($generated@@511 $generated@@512)) ($generated@@123 $generated@@513 $generated@@4)))
 :pattern ( ($generated@@511 $generated@@512))
)))
(assert (forall (($generated@@514 T@U) ) (! (let (($generated@@515 ($generated@@453 (type $generated@@514))))
(let (($generated@@516 ($generated@@452 (type $generated@@514))))
 (=> (= (type $generated@@514) ($generated@@451 $generated@@516 $generated@@515)) (or (= $generated@@514 ($generated@@450 $generated@@516 $generated@@515)) (exists (($generated@@517 T@U) ) (!  (and (= (type $generated@@517) $generated@@515) ($generated@@0 ($generated@@128 ($generated@@511 $generated@@514) $generated@@517)))
 :no-pattern (type $generated@@517)
 :no-pattern ($generated $generated@@517)
 :no-pattern ($generated@@0 $generated@@517)
))))))
 :pattern ( ($generated@@511 $generated@@514))
)))
(assert (forall (($generated@@518 T@U) ) (! (let (($generated@@519 ($generated@@471 (type $generated@@518))))
(let (($generated@@520 ($generated@@470 (type $generated@@518))))
 (=> (= (type $generated@@518) ($generated@@469 $generated@@520 $generated@@519)) (or (= $generated@@518 ($generated@@468 $generated@@520 $generated@@519)) (exists (($generated@@521 T@U) ) (!  (and (= (type $generated@@521) $generated@@520) ($generated@@0 ($generated@@128 ($generated@@467 $generated@@518) $generated@@521)))
 :no-pattern (type $generated@@521)
 :no-pattern ($generated $generated@@521)
 :no-pattern ($generated@@0 $generated@@521)
))))))
 :pattern ( ($generated@@467 $generated@@518))
)))
(assert (forall (($generated@@523 T@U) ) (! (let (($generated@@524 ($generated@@471 (type $generated@@523))))
(= (type ($generated@@522 $generated@@523)) ($generated@@123 $generated@@524 $generated@@4)))
 :pattern ( ($generated@@522 $generated@@523))
)))
(assert (forall (($generated@@525 T@U) ) (! (let (($generated@@526 ($generated@@471 (type $generated@@525))))
(let (($generated@@527 ($generated@@470 (type $generated@@525))))
 (=> (= (type $generated@@525) ($generated@@469 $generated@@527 $generated@@526)) (or (= $generated@@525 ($generated@@468 $generated@@527 $generated@@526)) (exists (($generated@@528 T@U) ) (!  (and (= (type $generated@@528) $generated@@526) ($generated@@0 ($generated@@128 ($generated@@522 $generated@@525) $generated@@528)))
 :no-pattern (type $generated@@528)
 :no-pattern ($generated $generated@@528)
 :no-pattern ($generated@@0 $generated@@528)
))))))
 :pattern ( ($generated@@522 $generated@@525))
)))
(assert  (=> (<= 1 $generated@@312) (forall (($generated@@529 T@U) ($generated@@530 T@U) ($generated@@531 Int) ($generated@@532 T@U) ) (!  (=> (and (and (and (= (type $generated@@529) $generated@@79) (= (type $generated@@530) $generated@@97)) (= (type $generated@@532) $generated@@98)) (or ($generated@@348 $generated@@529 ($generated@@349 $generated@@531) ($generated@@372 $generated@@532)) (and (not (= 1 $generated@@312)) (and (<= ($generated@@349 0) $generated@@531) ($generated@@99 $generated@@532 ($generated@@100 $generated@@529)))))) (and (=> (not (= ($generated@@349 $generated@@531) ($generated@@349 0))) (and ($generated@@102 ($generated@@372 $generated@@532)) (and ($generated@@102 ($generated@@372 $generated@@532)) ($generated@@348 $generated@@529 ($generated@@349 (- $generated@@531 1)) ($generated@@372 ($generated@@106 ($generated@@372 $generated@@532))))))) (= ($generated@@347 $generated@@529 ($generated@@95 $generated@@530) ($generated@@349 $generated@@531) ($generated@@372 $generated@@532)) (ite (= ($generated@@349 $generated@@531) ($generated@@349 0)) $generated@@225 ($generated@@350 ($generated@@372 ($generated@@103 ($generated@@372 $generated@@532))) ($generated@@372 ($generated@@347 $generated@@529 ($generated@@95 $generated@@530) ($generated@@349 (- $generated@@531 1)) ($generated@@372 ($generated@@106 ($generated@@372 $generated@@532))))))))))
 :weight 3
 :pattern ( ($generated@@347 $generated@@529 ($generated@@95 $generated@@530) ($generated@@349 $generated@@531) ($generated@@372 $generated@@532)))
))))
(assert (forall (($generated@@533 T@U) ($generated@@534 T@U) ) (!  (=> (and (= (type $generated@@533) ($generated@@123 $generated@@96 $generated@@2)) (= (type $generated@@534) $generated@@79)) (= ($generated@@99 $generated@@533 ($generated@@227 $generated@@534)) (forall (($generated@@535 T@U) ) (!  (=> (and (= (type $generated@@535) $generated@@96) (< 0 ($generated ($generated@@128 $generated@@533 $generated@@535)))) ($generated@@305 $generated@@535 $generated@@534))
 :pattern ( ($generated@@128 $generated@@533 $generated@@535))
))))
 :pattern ( ($generated@@99 $generated@@533 ($generated@@227 $generated@@534)))
)))
(assert (forall (($generated@@537 T@U) ) (!  (=> (and (= (type $generated@@537) $generated@@98) ($generated@@536 $generated@@537)) (or ($generated@@376 $generated@@537) ($generated@@340 $generated@@537)))
 :pattern ( ($generated@@536 $generated@@537))
)))
(assert (forall (($generated@@538 T@U) ($generated@@539 T@U) ) (!  (=> (and (= (type $generated@@538) $generated@@96) (= (type $generated@@539) $generated@@96)) (or (or ($generated@@189 $generated@@538 $generated@@539) (= $generated@@538 $generated@@539)) ($generated@@189 $generated@@539 $generated@@538)))
 :pattern ( ($generated@@189 $generated@@538 $generated@@539) ($generated@@189 $generated@@539 $generated@@538))
)))
(assert (forall (($generated@@540 T@U) ($generated@@541 T@U) ($generated@@542 T@U) ) (!  (=> (and (and (= (type $generated@@540) ($generated@@123 $generated@@96 $generated@@4)) (= (type $generated@@541) $generated@@79)) (= (type $generated@@542) ($generated@@123 $generated@@124 $generated@@125))) (= ($generated@@121 $generated@@540 ($generated@@361 $generated@@541) $generated@@542) (forall (($generated@@543 T@U) ) (!  (=> (and (= (type $generated@@543) $generated@@96) ($generated@@0 ($generated@@128 $generated@@540 $generated@@543))) ($generated@@385 $generated@@543 $generated@@541 $generated@@542))
 :pattern ( ($generated@@128 $generated@@540 $generated@@543))
))))
 :pattern ( ($generated@@121 $generated@@540 ($generated@@361 $generated@@541) $generated@@542))
)))
(assert (forall (($generated@@544 T@U) ($generated@@545 T@U) ($generated@@546 T@U) ) (!  (=> (and (and (= (type $generated@@544) ($generated@@123 $generated@@96 $generated@@4)) (= (type $generated@@545) $generated@@79)) (= (type $generated@@546) ($generated@@123 $generated@@124 $generated@@125))) (= ($generated@@121 $generated@@544 ($generated@@366 $generated@@545) $generated@@546) (forall (($generated@@547 T@U) ) (!  (=> (and (= (type $generated@@547) $generated@@96) ($generated@@0 ($generated@@128 $generated@@544 $generated@@547))) ($generated@@385 $generated@@547 $generated@@545 $generated@@546))
 :pattern ( ($generated@@128 $generated@@544 $generated@@547))
))))
 :pattern ( ($generated@@121 $generated@@544 ($generated@@366 $generated@@545) $generated@@546))
)))
(assert (forall (($generated@@548 T@U) ) (! (let (($generated@@549 (type $generated@@548)))
(= ($generated ($generated@@128 ($generated@@440 $generated@@549) $generated@@548)) 0))
 :pattern ( (let (($generated@@549 (type $generated@@548)))
($generated@@128 ($generated@@440 $generated@@549) $generated@@548)))
)))
(assert  (and (forall (($generated@@552 T@U) ) (! (= (type ($generated@@550 $generated@@552)) ($generated@@123 $generated@@96 $generated@@4))
 :pattern ( ($generated@@550 $generated@@552))
)) (forall (($generated@@553 T@U) ) (! (let (($generated@@554 ($generated@@453 (type $generated@@553))))
(let (($generated@@555 ($generated@@452 (type $generated@@553))))
(= (type ($generated@@551 $generated@@553)) ($generated@@123 $generated@@555 $generated@@554))))
 :pattern ( ($generated@@551 $generated@@553))
))))
(assert (forall (($generated@@556 T@U) ($generated@@557 T@U) ) (!  (=> (and (= (type $generated@@556) ($generated@@451 $generated@@96 $generated@@96)) (= (type $generated@@557) $generated@@96)) (= ($generated@@0 ($generated@@128 ($generated@@550 $generated@@556) $generated@@557))  (and ($generated@@0 ($generated@@128 ($generated@@449 $generated@@556) ($generated@@218 ($generated@@498 $generated@@98 $generated@@557)))) (= ($generated@@128 ($generated@@551 $generated@@556) ($generated@@218 ($generated@@498 $generated@@98 $generated@@557))) ($generated@@219 ($generated@@498 $generated@@98 $generated@@557))))))
 :pattern ( ($generated@@128 ($generated@@550 $generated@@556) $generated@@557))
)))
(assert  (and (forall (($generated@@560 T@U) ) (! (= (type ($generated@@558 $generated@@560)) ($generated@@123 $generated@@96 $generated@@4))
 :pattern ( ($generated@@558 $generated@@560))
)) (forall (($generated@@561 T@U) ) (! (let (($generated@@562 ($generated@@471 (type $generated@@561))))
(let (($generated@@563 ($generated@@470 (type $generated@@561))))
(= (type ($generated@@559 $generated@@561)) ($generated@@123 $generated@@563 $generated@@562))))
 :pattern ( ($generated@@559 $generated@@561))
))))
(assert (forall (($generated@@564 T@U) ($generated@@565 T@U) ) (!  (=> (and (= (type $generated@@564) ($generated@@469 $generated@@96 $generated@@96)) (= (type $generated@@565) $generated@@96)) (= ($generated@@0 ($generated@@128 ($generated@@558 $generated@@564) $generated@@565))  (and ($generated@@0 ($generated@@128 ($generated@@467 $generated@@564) ($generated@@218 ($generated@@498 $generated@@98 $generated@@565)))) (= ($generated@@128 ($generated@@559 $generated@@564) ($generated@@218 ($generated@@498 $generated@@98 $generated@@565))) ($generated@@219 ($generated@@498 $generated@@98 $generated@@565))))))
 :pattern ( ($generated@@128 ($generated@@558 $generated@@564) $generated@@565))
)))
(assert (forall (($generated@@566 T@U) ($generated@@567 T@U) ) (! (let (($generated@@568 (type $generated@@567)))
(let (($generated@@569 ($generated@@452 (type $generated@@566))))
 (=> (= (type $generated@@566) ($generated@@451 $generated@@569 $generated@@568)) (= ($generated@@0 ($generated@@128 ($generated@@511 $generated@@566) $generated@@567)) (exists (($generated@@570 T@U) ) (!  (and (= (type $generated@@570) $generated@@569) (and ($generated@@0 ($generated@@128 ($generated@@449 $generated@@566) $generated@@570)) (= $generated@@567 ($generated@@128 ($generated@@551 $generated@@566) $generated@@570))))
 :pattern ( ($generated@@128 ($generated@@449 $generated@@566) $generated@@570))
 :pattern ( ($generated@@128 ($generated@@551 $generated@@566) $generated@@570))
))))))
 :pattern ( ($generated@@128 ($generated@@511 $generated@@566) $generated@@567))
)))
(assert (forall (($generated@@571 T@U) ($generated@@572 T@U) ) (! (let (($generated@@573 (type $generated@@572)))
(let (($generated@@574 ($generated@@470 (type $generated@@571))))
 (=> (= (type $generated@@571) ($generated@@469 $generated@@574 $generated@@573)) (= ($generated@@0 ($generated@@128 ($generated@@522 $generated@@571) $generated@@572)) (exists (($generated@@575 T@U) ) (!  (and (= (type $generated@@575) $generated@@574) (and ($generated@@0 ($generated@@128 ($generated@@467 $generated@@571) $generated@@575)) (= $generated@@572 ($generated@@128 ($generated@@559 $generated@@571) $generated@@575))))
 :pattern ( ($generated@@128 ($generated@@467 $generated@@571) $generated@@575))
 :pattern ( ($generated@@128 ($generated@@559 $generated@@571) $generated@@575))
))))))
 :pattern ( ($generated@@128 ($generated@@522 $generated@@571) $generated@@572))
)))
(assert (forall (($generated@@577 T@U) ($generated@@578 T@U) ) (! (= (type ($generated@@576 $generated@@577 $generated@@578)) $generated@@79)
 :pattern ( ($generated@@576 $generated@@577 $generated@@578))
)))
(assert (forall (($generated@@579 T@U) ($generated@@580 T@U) ($generated@@581 T@U) ($generated@@582 T@U) ) (!  (=> (and (and (and (= (type $generated@@579) ($generated@@451 $generated@@96 $generated@@96)) (= (type $generated@@580) $generated@@79)) (= (type $generated@@581) $generated@@79)) (= (type $generated@@582) ($generated@@123 $generated@@124 $generated@@125))) (= ($generated@@121 $generated@@579 ($generated@@576 $generated@@580 $generated@@581) $generated@@582) (forall (($generated@@583 T@U) ) (!  (=> (and (= (type $generated@@583) $generated@@96) ($generated@@0 ($generated@@128 ($generated@@449 $generated@@579) $generated@@583))) (and ($generated@@385 ($generated@@128 ($generated@@551 $generated@@579) $generated@@583) $generated@@581 $generated@@582) ($generated@@385 $generated@@583 $generated@@580 $generated@@582)))
 :pattern ( ($generated@@128 ($generated@@551 $generated@@579) $generated@@583))
 :pattern ( ($generated@@128 ($generated@@449 $generated@@579) $generated@@583))
))))
 :pattern ( ($generated@@121 $generated@@579 ($generated@@576 $generated@@580 $generated@@581) $generated@@582))
)))
(assert (forall (($generated@@585 T@U) ($generated@@586 T@U) ) (! (= (type ($generated@@584 $generated@@585 $generated@@586)) $generated@@79)
 :pattern ( ($generated@@584 $generated@@585 $generated@@586))
)))
(assert (forall (($generated@@587 T@U) ($generated@@588 T@U) ($generated@@589 T@U) ($generated@@590 T@U) ) (!  (=> (and (and (and (= (type $generated@@587) ($generated@@469 $generated@@96 $generated@@96)) (= (type $generated@@588) $generated@@79)) (= (type $generated@@589) $generated@@79)) (= (type $generated@@590) ($generated@@123 $generated@@124 $generated@@125))) (= ($generated@@121 $generated@@587 ($generated@@584 $generated@@588 $generated@@589) $generated@@590) (forall (($generated@@591 T@U) ) (!  (=> (and (= (type $generated@@591) $generated@@96) ($generated@@0 ($generated@@128 ($generated@@467 $generated@@587) $generated@@591))) (and ($generated@@385 ($generated@@128 ($generated@@559 $generated@@587) $generated@@591) $generated@@589 $generated@@590) ($generated@@385 $generated@@591 $generated@@588 $generated@@590)))
 :pattern ( ($generated@@128 ($generated@@559 $generated@@587) $generated@@591))
 :pattern ( ($generated@@128 ($generated@@467 $generated@@587) $generated@@591))
))))
 :pattern ( ($generated@@121 $generated@@587 ($generated@@584 $generated@@588 $generated@@589) $generated@@590))
)))
(assert (forall (($generated@@592 T@U) ($generated@@593 T@U) ) (!  (=> (and (and (= (type $generated@@592) $generated@@79) (= (type $generated@@593) $generated@@98)) ($generated@@99 $generated@@593 ($generated@@300 $generated@@592))) (or ($generated@@376 $generated@@593) ($generated@@340 $generated@@593)))
 :pattern ( ($generated@@340 $generated@@593) ($generated@@99 $generated@@593 ($generated@@300 $generated@@592)))
 :pattern ( ($generated@@376 $generated@@593) ($generated@@99 $generated@@593 ($generated@@300 $generated@@592)))
)))
(assert  (=> (<= 1 $generated@@312) (forall (($generated@@594 T@U) ($generated@@595 T@U) ($generated@@596 Int) ($generated@@597 T@U) ) (!  (=> (and (and (and (= (type $generated@@594) $generated@@79) (= (type $generated@@595) $generated@@97)) (= (type $generated@@597) $generated@@98)) (or ($generated@@348 $generated@@594 $generated@@596 $generated@@597) (and (not (= 1 $generated@@312)) (and (<= ($generated@@349 0) $generated@@596) ($generated@@99 $generated@@597 ($generated@@100 $generated@@594)))))) ($generated@@99 ($generated@@347 $generated@@594 $generated@@595 $generated@@596 $generated@@597) ($generated@@300 $generated@@594)))
 :pattern ( ($generated@@347 $generated@@594 $generated@@595 $generated@@596 $generated@@597))
))))
(assert (forall (($generated@@598 T@U) ($generated@@599 T@U) ($generated@@600 T@U) ) (!  (=> (and (and (and (and (= (type $generated@@598) ($generated@@123 $generated@@124 $generated@@125)) (= (type $generated@@599) ($generated@@123 $generated@@124 $generated@@125))) (= (type $generated@@600) ($generated@@123 $generated@@124 $generated@@125))) (not (= $generated@@598 $generated@@600))) (and ($generated@@185 $generated@@598 $generated@@599) ($generated@@185 $generated@@599 $generated@@600))) ($generated@@185 $generated@@598 $generated@@600))
 :pattern ( ($generated@@185 $generated@@598 $generated@@599) ($generated@@185 $generated@@599 $generated@@600))
)))
(assert (forall (($generated@@602 T@T) ) (! (= (type ($generated@@601 $generated@@602)) ($generated@@123 $generated@@602 $generated@@4))
 :pattern ( ($generated@@601 $generated@@602))
)))
(assert (forall (($generated@@603 T@U) ) (! (let (($generated@@604 ($generated@@471 (type $generated@@603))))
(let (($generated@@605 ($generated@@470 (type $generated@@603))))
 (=> (= (type $generated@@603) ($generated@@469 $generated@@605 $generated@@604)) (= (= $generated@@603 ($generated@@468 $generated@@605 $generated@@604)) (= ($generated@@467 $generated@@603) ($generated@@601 $generated@@605))))))
 :pattern ( ($generated@@467 $generated@@603))
)))
(assert (forall (($generated@@606 T@U) ) (! (let (($generated@@607 ($generated@@471 (type $generated@@606))))
(let (($generated@@608 ($generated@@470 (type $generated@@606))))
 (=> (= (type $generated@@606) ($generated@@469 $generated@@608 $generated@@607)) (= (= $generated@@606 ($generated@@468 $generated@@608 $generated@@607)) (= ($generated@@522 $generated@@606) ($generated@@601 $generated@@607))))))
 :pattern ( ($generated@@522 $generated@@606))
)))
(assert (forall (($generated@@609 T@U) ) (! (let (($generated@@610 ($generated@@471 (type $generated@@609))))
(let (($generated@@611 ($generated@@470 (type $generated@@609))))
 (=> (= (type $generated@@609) ($generated@@469 $generated@@611 $generated@@610)) (= (= $generated@@609 ($generated@@468 $generated@@611 $generated@@610)) (= ($generated@@558 $generated@@609) ($generated@@601 $generated@@96))))))
 :pattern ( ($generated@@558 $generated@@609))
)))
(assert (forall (($generated@@612 T@U) ) (! (let (($generated@@613 ($generated@@453 (type $generated@@612))))
(let (($generated@@614 ($generated@@452 (type $generated@@612))))
 (=> (= (type $generated@@612) ($generated@@451 $generated@@614 $generated@@613)) (or (= $generated@@612 ($generated@@450 $generated@@614 $generated@@613)) (exists (($generated@@615 T@U) ($generated@@616 T@U) ) (!  (and (and (= (type $generated@@615) $generated@@96) (= (type $generated@@616) $generated@@96)) ($generated@@0 ($generated@@128 ($generated@@550 $generated@@612) ($generated@@316 ($generated@@304 $generated@@615 $generated@@616)))))
 :no-pattern (type $generated@@615)
 :no-pattern (type $generated@@616)
 :no-pattern ($generated $generated@@615)
 :no-pattern ($generated@@0 $generated@@615)
 :no-pattern ($generated $generated@@616)
 :no-pattern ($generated@@0 $generated@@616)
))))))
 :pattern ( ($generated@@550 $generated@@612))
)))
(assert (forall (($generated@@617 T@U) ) (! (let (($generated@@618 ($generated@@471 (type $generated@@617))))
(let (($generated@@619 ($generated@@470 (type $generated@@617))))
 (=> (= (type $generated@@617) ($generated@@469 $generated@@619 $generated@@618)) (or (= $generated@@617 ($generated@@468 $generated@@619 $generated@@618)) (exists (($generated@@620 T@U) ($generated@@621 T@U) ) (!  (and (and (= (type $generated@@620) $generated@@96) (= (type $generated@@621) $generated@@96)) ($generated@@0 ($generated@@128 ($generated@@558 $generated@@617) ($generated@@316 ($generated@@304 $generated@@620 $generated@@621)))))
 :no-pattern (type $generated@@620)
 :no-pattern (type $generated@@621)
 :no-pattern ($generated $generated@@620)
 :no-pattern ($generated@@0 $generated@@620)
 :no-pattern ($generated $generated@@621)
 :no-pattern ($generated@@0 $generated@@621)
))))))
 :pattern ( ($generated@@558 $generated@@617))
)))
(assert (forall (($generated@@623 T@U) ) (! (= (type ($generated@@622 $generated@@623)) $generated@@85)
 :pattern ( ($generated@@622 $generated@@623))
)))
(assert (forall (($generated@@624 T@U) ($generated@@625 T@U) ($generated@@626 T@T) ) (!  (=> (and (= (type $generated@@624) $generated@@85) (= (type $generated@@625) $generated@@83)) (and (= ($generated@@622 ($generated@@324 $generated@@626 $generated@@624 $generated@@625)) $generated@@624) (= ($generated@@92 ($generated@@324 $generated@@626 $generated@@624 $generated@@625)) $generated@@625)))
 :pattern ( ($generated@@324 $generated@@626 $generated@@624 $generated@@625))
)))
(assert (forall (($generated@@627 T@U) ) (!  (=> (and (= (type $generated@@627) $generated@@96) ($generated@@305 $generated@@627 $generated@@46)) (and (= ($generated@@316 ($generated@@498 $generated@@2 $generated@@627)) $generated@@627) ($generated@@99 ($generated@@498 $generated@@2 $generated@@627) $generated@@46)))
 :pattern ( ($generated@@305 $generated@@627 $generated@@46))
)))
(assert (forall (($generated@@628 T@U) ) (!  (=> (and (= (type $generated@@628) $generated@@96) ($generated@@305 $generated@@628 $generated@@47)) (and (= ($generated@@316 ($generated@@498 $generated@@3 $generated@@628)) $generated@@628) ($generated@@99 ($generated@@498 $generated@@3 $generated@@628) $generated@@47)))
 :pattern ( ($generated@@305 $generated@@628 $generated@@47))
)))
(assert (forall (($generated@@629 T@U) ) (!  (=> (and (= (type $generated@@629) $generated@@96) ($generated@@305 $generated@@629 $generated@@44)) (and (= ($generated@@316 ($generated@@498 $generated@@4 $generated@@629)) $generated@@629) ($generated@@99 ($generated@@498 $generated@@4 $generated@@629) $generated@@44)))
 :pattern ( ($generated@@305 $generated@@629 $generated@@44))
)))
(assert (= ($generated@@1 $generated@@630) 23))
(assert (forall (($generated@@631 T@U) ) (!  (=> (and (= (type $generated@@631) $generated@@96) ($generated@@305 $generated@@631 $generated@@45)) (and (= ($generated@@316 ($generated@@498 $generated@@630 $generated@@631)) $generated@@631) ($generated@@99 ($generated@@498 $generated@@630 $generated@@631) $generated@@45)))
 :pattern ( ($generated@@305 $generated@@631 $generated@@45))
)))
(assert (forall (($generated@@632 T@U) ($generated@@633 T@U) ) (!  (=> (= (type $generated@@633) $generated@@79) (= ($generated@@305 ($generated@@316 $generated@@632) $generated@@633) ($generated@@99 $generated@@632 $generated@@633)))
 :pattern ( ($generated@@305 ($generated@@316 $generated@@632) $generated@@633))
)))
(assert (forall (($generated@@634 T@U) ) (!  (=> (= (type $generated@@634) $generated@@96) (<= 0 ($generated@@101 $generated@@634)))
 :pattern ( ($generated@@101 $generated@@634))
)))
(assert (forall (($generated@@635 T@U) ) (! (let (($generated@@636 ($generated@@126 (type $generated@@635))))
 (=> (= (type $generated@@635) ($generated@@123 $generated@@636 $generated@@2)) (<= 0 ($generated@@439 $generated@@635))))
 :pattern ( ($generated@@439 $generated@@635))
)))
(assert (forall (($generated@@637 T@U) ) (! (let (($generated@@638 ($generated@@407 (type $generated@@637))))
 (=> (= (type $generated@@637) ($generated@@406 $generated@@638)) (<= 0 ($generated@@405 $generated@@637))))
 :pattern ( ($generated@@405 $generated@@637))
)))
(assert (forall (($generated@@640 T@U) ) (! (= (type ($generated@@639 $generated@@640)) $generated@@79)
 :pattern ( ($generated@@639 $generated@@640))
)))
(assert (forall (($generated@@641 T@U) ($generated@@642 T@U) ) (!  (=> (and (= (type $generated@@641) $generated@@79) (= (type $generated@@642) $generated@@79)) (= ($generated@@639 ($generated@@576 $generated@@641 $generated@@642)) $generated@@641))
 :pattern ( ($generated@@576 $generated@@641 $generated@@642))
)))
(assert (forall (($generated@@644 T@U) ) (! (= (type ($generated@@643 $generated@@644)) $generated@@79)
 :pattern ( ($generated@@643 $generated@@644))
)))
(assert (forall (($generated@@645 T@U) ($generated@@646 T@U) ) (!  (=> (and (= (type $generated@@645) $generated@@79) (= (type $generated@@646) $generated@@79)) (= ($generated@@643 ($generated@@576 $generated@@645 $generated@@646)) $generated@@646))
 :pattern ( ($generated@@576 $generated@@645 $generated@@646))
)))
(assert (forall (($generated@@647 T@U) ($generated@@648 T@U) ) (!  (=> (and (= (type $generated@@647) $generated@@79) (= (type $generated@@648) $generated@@79)) (= ($generated@@90 ($generated@@576 $generated@@647 $generated@@648)) $generated@@58))
 :pattern ( ($generated@@576 $generated@@647 $generated@@648))
)))
(assert (forall (($generated@@650 T@U) ) (! (= (type ($generated@@649 $generated@@650)) $generated@@79)
 :pattern ( ($generated@@649 $generated@@650))
)))
(assert (forall (($generated@@651 T@U) ($generated@@652 T@U) ) (!  (=> (and (= (type $generated@@651) $generated@@79) (= (type $generated@@652) $generated@@79)) (= ($generated@@649 ($generated@@584 $generated@@651 $generated@@652)) $generated@@651))
 :pattern ( ($generated@@584 $generated@@651 $generated@@652))
)))
(assert (forall (($generated@@654 T@U) ) (! (= (type ($generated@@653 $generated@@654)) $generated@@79)
 :pattern ( ($generated@@653 $generated@@654))
)))
(assert (forall (($generated@@655 T@U) ($generated@@656 T@U) ) (!  (=> (and (= (type $generated@@655) $generated@@79) (= (type $generated@@656) $generated@@79)) (= ($generated@@653 ($generated@@584 $generated@@655 $generated@@656)) $generated@@656))
 :pattern ( ($generated@@584 $generated@@655 $generated@@656))
)))
(assert (forall (($generated@@657 T@U) ($generated@@658 T@U) ) (!  (=> (and (= (type $generated@@657) $generated@@79) (= (type $generated@@658) $generated@@79)) (= ($generated@@90 ($generated@@584 $generated@@657 $generated@@658)) $generated@@59))
 :pattern ( ($generated@@584 $generated@@657 $generated@@658))
)))
(assert (forall (($generated@@659 T@U) ($generated@@660 T@U) ) (!  (=> (and (= (type $generated@@659) $generated@@96) (= (type $generated@@660) $generated@@96)) (= ($generated@@224 ($generated@@304 $generated@@659 $generated@@660)) $generated@@63))
 :pattern ( ($generated@@304 $generated@@659 $generated@@660))
)))
(assert (forall (($generated@@662 T@U) ) (! (= (type ($generated@@661 $generated@@662)) $generated@@79)
 :pattern ( ($generated@@661 $generated@@662))
)))
(assert (forall (($generated@@663 T@U) ($generated@@664 T@U) ) (!  (=> (and (= (type $generated@@663) $generated@@79) (= (type $generated@@664) $generated@@79)) (= ($generated@@661 ($generated@@211 $generated@@663 $generated@@664)) $generated@@663))
 :pattern ( ($generated@@211 $generated@@663 $generated@@664))
)))
(assert (forall (($generated@@666 T@U) ) (! (= (type ($generated@@665 $generated@@666)) $generated@@79)
 :pattern ( ($generated@@665 $generated@@666))
)))
(assert (forall (($generated@@667 T@U) ($generated@@668 T@U) ) (!  (=> (and (= (type $generated@@667) $generated@@79) (= (type $generated@@668) $generated@@79)) (= ($generated@@665 ($generated@@211 $generated@@667 $generated@@668)) $generated@@668))
 :pattern ( ($generated@@211 $generated@@667 $generated@@668))
)))
(assert (forall (($generated@@669 T@U) ($generated@@670 T@U) ) (!  (=> (and (= (type $generated@@669) $generated@@96) (= (type $generated@@670) $generated@@96)) (= ($generated@@218 ($generated@@304 $generated@@669 $generated@@670)) $generated@@669))
 :pattern ( ($generated@@304 $generated@@669 $generated@@670))
)))
(assert (forall (($generated@@671 T@U) ($generated@@672 T@U) ) (!  (=> (and (= (type $generated@@671) $generated@@96) (= (type $generated@@672) $generated@@96)) (= ($generated@@219 ($generated@@304 $generated@@671 $generated@@672)) $generated@@672))
 :pattern ( ($generated@@304 $generated@@671 $generated@@672))
)))
(assert (forall (($generated@@673 T@U) ($generated@@674 T@U) ) (!  (=> (and (= (type $generated@@673) $generated@@96) (= (type $generated@@674) $generated@@98)) (= ($generated@@224 ($generated@@315 $generated@@673 $generated@@674)) $generated@@65))
 :pattern ( ($generated@@315 $generated@@673 $generated@@674))
)))
(assert (forall (($generated@@675 T@U) ($generated@@676 T@U) ) (!  (=> (and (= (type $generated@@675) $generated@@96) (= (type $generated@@676) $generated@@98)) (= ($generated@@103 ($generated@@315 $generated@@675 $generated@@676)) $generated@@675))
 :pattern ( ($generated@@315 $generated@@675 $generated@@676))
)))
(assert (forall (($generated@@677 T@U) ($generated@@678 T@U) ) (!  (=> (and (= (type $generated@@677) $generated@@96) (= (type $generated@@678) $generated@@98)) (= ($generated@@106 ($generated@@315 $generated@@677 $generated@@678)) $generated@@678))
 :pattern ( ($generated@@315 $generated@@677 $generated@@678))
)))
(assert (forall (($generated@@679 T@U) ($generated@@680 T@U) ) (!  (=> (and (= (type $generated@@679) $generated@@96) (= (type $generated@@680) $generated@@98)) (= ($generated@@224 ($generated@@350 $generated@@679 $generated@@680)) $generated@@69))
 :pattern ( ($generated@@350 $generated@@679 $generated@@680))
)))
(assert (forall (($generated@@681 T@U) ($generated@@682 T@U) ) (!  (=> (and (= (type $generated@@681) $generated@@96) (= (type $generated@@682) $generated@@98)) (= ($generated@@341 ($generated@@350 $generated@@681 $generated@@682)) $generated@@681))
 :pattern ( ($generated@@350 $generated@@681 $generated@@682))
)))
(assert (forall (($generated@@683 T@U) ($generated@@684 T@U) ) (!  (=> (and (= (type $generated@@683) $generated@@96) (= (type $generated@@684) $generated@@98)) (= ($generated@@342 ($generated@@350 $generated@@683 $generated@@684)) $generated@@684))
 :pattern ( ($generated@@350 $generated@@683 $generated@@684))
)))
(assert (forall (($generated@@685 T@U) ($generated@@686 Int) ) (!  (=> (= (type $generated@@685) $generated@@97) (= ($generated@@313 $generated@@685 $generated@@686) ($generated@@313 $generated@@415 $generated@@686)))
 :pattern ( ($generated@@313 ($generated@@414 $generated@@685) $generated@@686))
)))
(assert  (and (forall (($generated@@689 T@U) ) (! (= (type ($generated@@687 $generated@@689)) $generated@@79)
 :pattern ( ($generated@@687 $generated@@689))
)) (forall (($generated@@690 T@U) ($generated@@691 Int) ) (! (let (($generated@@692 ($generated@@407 (type $generated@@690))))
(= (type ($generated@@688 $generated@@690 $generated@@691)) $generated@@692))
 :pattern ( ($generated@@688 $generated@@690 $generated@@691))
))))
(assert (forall (($generated@@693 T@U) ($generated@@694 T@U) ($generated@@695 T@U) ) (!  (=> (and (and (= (type $generated@@693) ($generated@@406 $generated@@96)) (= (type $generated@@694) $generated@@79)) (= (type $generated@@695) ($generated@@123 $generated@@124 $generated@@125))) (= ($generated@@121 $generated@@693 ($generated@@687 $generated@@694) $generated@@695) (forall (($generated@@696 Int) ) (!  (=> (and (<= 0 $generated@@696) (< $generated@@696 ($generated@@405 $generated@@693))) ($generated@@385 ($generated@@688 $generated@@693 $generated@@696) $generated@@694 $generated@@695))
 :pattern ( ($generated@@688 $generated@@693 $generated@@696))
))))
 :pattern ( ($generated@@121 $generated@@693 ($generated@@687 $generated@@694) $generated@@695))
)))
(assert (forall (($generated@@698 Int) ) (! (= ($generated@@697 ($generated@@122 $generated@@698)) $generated@@698)
 :pattern ( ($generated@@122 $generated@@698))
)))
(assert (forall (($generated@@700 T@U) ) (! (= (type ($generated@@699 $generated@@700)) $generated@@79)
 :pattern ( ($generated@@699 $generated@@700))
)))
(assert (forall (($generated@@701 T@U) ) (!  (=> (= (type $generated@@701) $generated@@79) (= ($generated@@699 ($generated@@361 $generated@@701)) $generated@@701))
 :pattern ( ($generated@@361 $generated@@701))
)))
(assert (forall (($generated@@702 T@U) ) (!  (=> (= (type $generated@@702) $generated@@79) (= ($generated@@90 ($generated@@361 $generated@@702)) $generated@@54))
 :pattern ( ($generated@@361 $generated@@702))
)))
(assert (forall (($generated@@704 T@U) ) (! (= (type ($generated@@703 $generated@@704)) $generated@@79)
 :pattern ( ($generated@@703 $generated@@704))
)))
(assert (forall (($generated@@705 T@U) ) (!  (=> (= (type $generated@@705) $generated@@79) (= ($generated@@703 ($generated@@366 $generated@@705)) $generated@@705))
 :pattern ( ($generated@@366 $generated@@705))
)))
(assert (forall (($generated@@706 T@U) ) (!  (=> (= (type $generated@@706) $generated@@79) (= ($generated@@90 ($generated@@366 $generated@@706)) $generated@@55))
 :pattern ( ($generated@@366 $generated@@706))
)))
(assert (forall (($generated@@708 T@U) ) (! (= (type ($generated@@707 $generated@@708)) $generated@@79)
 :pattern ( ($generated@@707 $generated@@708))
)))
(assert (forall (($generated@@709 T@U) ) (!  (=> (= (type $generated@@709) $generated@@79) (= ($generated@@707 ($generated@@227 $generated@@709)) $generated@@709))
 :pattern ( ($generated@@227 $generated@@709))
)))
(assert (forall (($generated@@710 T@U) ) (!  (=> (= (type $generated@@710) $generated@@79) (= ($generated@@90 ($generated@@227 $generated@@710)) $generated@@56))
 :pattern ( ($generated@@227 $generated@@710))
)))
(assert (forall (($generated@@712 T@U) ) (! (= (type ($generated@@711 $generated@@712)) $generated@@79)
 :pattern ( ($generated@@711 $generated@@712))
)))
(assert (forall (($generated@@713 T@U) ) (!  (=> (= (type $generated@@713) $generated@@79) (= ($generated@@711 ($generated@@687 $generated@@713)) $generated@@713))
 :pattern ( ($generated@@687 $generated@@713))
)))
(assert (forall (($generated@@714 T@U) ) (!  (=> (= (type $generated@@714) $generated@@79) (= ($generated@@90 ($generated@@687 $generated@@714)) $generated@@57))
 :pattern ( ($generated@@687 $generated@@714))
)))
(assert (forall (($generated@@716 T@U) ) (! (= (type ($generated@@715 $generated@@716)) $generated@@79)
 :pattern ( ($generated@@715 $generated@@716))
)))
(assert (forall (($generated@@717 T@U) ) (!  (=> (= (type $generated@@717) $generated@@79) (= ($generated@@715 ($generated@@100 $generated@@717)) $generated@@717))
 :pattern ( ($generated@@100 $generated@@717))
)))
(assert (forall (($generated@@719 T@U) ) (! (= (type ($generated@@718 $generated@@719)) $generated@@79)
 :pattern ( ($generated@@718 $generated@@719))
)))
(assert (forall (($generated@@720 T@U) ) (!  (=> (= (type $generated@@720) $generated@@79) (= ($generated@@718 ($generated@@300 $generated@@720)) $generated@@720))
 :pattern ( ($generated@@300 $generated@@720))
)))
(assert (forall (($generated@@721 T@U) ) (! (let (($generated@@722 (type $generated@@721)))
(= ($generated@@498 $generated@@722 ($generated@@316 $generated@@721)) $generated@@721))
 :pattern ( ($generated@@316 $generated@@721))
)))
(assert (forall (($generated@@723 T@U) ($generated@@724 T@U) ($generated@@725 T@U) ) (!  (=> (and (and (= (type $generated@@723) ($generated@@451 $generated@@96 $generated@@96)) (= (type $generated@@724) $generated@@79)) (= (type $generated@@725) $generated@@79)) (= ($generated@@99 $generated@@723 ($generated@@576 $generated@@724 $generated@@725)) (forall (($generated@@726 T@U) ) (!  (=> (and (= (type $generated@@726) $generated@@96) ($generated@@0 ($generated@@128 ($generated@@449 $generated@@723) $generated@@726))) (and ($generated@@305 ($generated@@128 ($generated@@551 $generated@@723) $generated@@726) $generated@@725) ($generated@@305 $generated@@726 $generated@@724)))
 :pattern ( ($generated@@128 ($generated@@551 $generated@@723) $generated@@726))
 :pattern ( ($generated@@128 ($generated@@449 $generated@@723) $generated@@726))
))))
 :pattern ( ($generated@@99 $generated@@723 ($generated@@576 $generated@@724 $generated@@725)))
)))
(assert (forall (($generated@@727 T@U) ($generated@@728 T@U) ($generated@@729 T@U) ) (!  (=> (and (and (= (type $generated@@727) ($generated@@469 $generated@@96 $generated@@96)) (= (type $generated@@728) $generated@@79)) (= (type $generated@@729) $generated@@79)) (= ($generated@@99 $generated@@727 ($generated@@584 $generated@@728 $generated@@729)) (forall (($generated@@730 T@U) ) (!  (=> (and (= (type $generated@@730) $generated@@96) ($generated@@0 ($generated@@128 ($generated@@467 $generated@@727) $generated@@730))) (and ($generated@@305 ($generated@@128 ($generated@@559 $generated@@727) $generated@@730) $generated@@729) ($generated@@305 $generated@@730 $generated@@728)))
 :pattern ( ($generated@@128 ($generated@@559 $generated@@727) $generated@@730))
 :pattern ( ($generated@@128 ($generated@@467 $generated@@727) $generated@@730))
))))
 :pattern ( ($generated@@99 $generated@@727 ($generated@@584 $generated@@728 $generated@@729)))
)))
(assert (forall (($generated@@731 T@U) ($generated@@732 T@U) ) (!  (=> (and (= (type $generated@@731) $generated@@96) (= (type $generated@@732) $generated@@96)) (and (and (and (=> ($generated@@189 $generated@@731 $generated@@732) (not (= $generated@@731 $generated@@732))) (=> (and ($generated@@491 $generated@@731) (not ($generated@@491 $generated@@732))) ($generated@@189 $generated@@731 $generated@@732))) (=> (and ($generated@@491 $generated@@731) ($generated@@491 $generated@@732)) (= ($generated@@189 $generated@@731 $generated@@732) (< ($generated@@101 $generated@@731) ($generated@@101 $generated@@732))))) (=> (and ($generated@@189 $generated@@731 $generated@@732) ($generated@@491 $generated@@732)) ($generated@@491 $generated@@731))))
 :pattern ( ($generated@@189 $generated@@731 $generated@@732))
)))
(assert  (=> (<= 1 $generated@@312) (forall (($generated@@733 T@U) ($generated@@734 T@U) ($generated@@735 Int) ($generated@@736 T@U) ) (!  (=> (and (and (and (= (type $generated@@733) $generated@@79) (= (type $generated@@734) $generated@@97)) (= (type $generated@@736) $generated@@98)) (or ($generated@@348 $generated@@733 ($generated@@349 $generated@@735) $generated@@736) (and (not (= 1 $generated@@312)) (and (<= ($generated@@349 0) $generated@@735) ($generated@@99 $generated@@736 ($generated@@100 $generated@@733)))))) (and (=> (not (= ($generated@@349 $generated@@735) ($generated@@349 0))) (and ($generated@@102 $generated@@736) (and ($generated@@102 $generated@@736) ($generated@@348 $generated@@733 ($generated@@349 (- $generated@@735 1)) ($generated@@106 $generated@@736))))) (= ($generated@@347 $generated@@733 ($generated@@95 $generated@@734) ($generated@@349 $generated@@735) $generated@@736) (ite (= ($generated@@349 $generated@@735) ($generated@@349 0)) $generated@@225 ($generated@@350 ($generated@@103 $generated@@736) ($generated@@347 $generated@@733 ($generated@@95 $generated@@734) ($generated@@349 (- $generated@@735 1)) ($generated@@106 $generated@@736)))))))
 :weight 3
 :pattern ( ($generated@@347 $generated@@733 ($generated@@95 $generated@@734) ($generated@@349 $generated@@735) $generated@@736))
))))
(assert (forall (($generated@@739 T@U) ($generated@@740 T@U) ) (!  (=> (and (= (type $generated@@739) $generated@@96) (= (type $generated@@740) $generated@@96)) (< ($generated@@737 $generated@@739) ($generated@@738 ($generated@@304 $generated@@739 $generated@@740))))
 :pattern ( ($generated@@304 $generated@@739 $generated@@740))
)))
(assert (forall (($generated@@741 T@U) ($generated@@742 T@U) ) (!  (=> (and (= (type $generated@@741) $generated@@96) (= (type $generated@@742) $generated@@96)) (< ($generated@@737 $generated@@742) ($generated@@738 ($generated@@304 $generated@@741 $generated@@742))))
 :pattern ( ($generated@@304 $generated@@741 $generated@@742))
)))
(assert (forall (($generated@@743 T@U) ($generated@@744 T@U) ) (!  (=> (and (= (type $generated@@743) $generated@@96) (= (type $generated@@744) $generated@@98)) (< ($generated@@737 $generated@@743) ($generated@@738 ($generated@@350 $generated@@743 $generated@@744))))
 :pattern ( ($generated@@350 $generated@@743 $generated@@744))
)))
(assert (forall (($generated@@745 T@U) ($generated@@746 T@U) ) (!  (=> (and (= (type $generated@@745) $generated@@96) (= (type $generated@@746) $generated@@98)) (< ($generated@@738 $generated@@746) ($generated@@738 ($generated@@350 $generated@@745 $generated@@746))))
 :pattern ( ($generated@@350 $generated@@745 $generated@@746))
)))
(assert (forall (($generated@@747 T@U) ($generated@@748 Int) ) (!  (=> (= (type $generated@@747) $generated@@97) (= ($generated@@313 ($generated@@95 $generated@@747) $generated@@748) ($generated@@313 $generated@@747 $generated@@748)))
 :pattern ( ($generated@@313 ($generated@@95 $generated@@747) $generated@@748))
)))
(assert (forall (($generated@@749 T@U) ($generated@@750 T@U) ($generated@@751 T@U) ) (!  (=> (and (and (and (= (type $generated@@749) $generated@@96) (= (type $generated@@750) $generated@@79)) (= (type $generated@@751) $generated@@79)) ($generated@@305 $generated@@749 ($generated@@576 $generated@@750 $generated@@751))) (and (= ($generated@@316 ($generated@@498 ($generated@@451 $generated@@96 $generated@@96) $generated@@749)) $generated@@749) ($generated@@99 ($generated@@498 ($generated@@451 $generated@@96 $generated@@96) $generated@@749) ($generated@@576 $generated@@750 $generated@@751))))
 :pattern ( ($generated@@305 $generated@@749 ($generated@@576 $generated@@750 $generated@@751)))
)))
(assert (forall (($generated@@752 T@U) ($generated@@753 T@U) ($generated@@754 T@U) ) (!  (=> (and (and (and (= (type $generated@@752) $generated@@96) (= (type $generated@@753) $generated@@79)) (= (type $generated@@754) $generated@@79)) ($generated@@305 $generated@@752 ($generated@@584 $generated@@753 $generated@@754))) (and (= ($generated@@316 ($generated@@498 ($generated@@469 $generated@@96 $generated@@96) $generated@@752)) $generated@@752) ($generated@@99 ($generated@@498 ($generated@@469 $generated@@96 $generated@@96) $generated@@752) ($generated@@584 $generated@@753 $generated@@754))))
 :pattern ( ($generated@@305 $generated@@752 ($generated@@584 $generated@@753 $generated@@754)))
)))
(assert (forall (($generated@@755 T@U) ($generated@@756 T@U) ($generated@@757 T@U) ) (!  (=> (and (and (and (= (type $generated@@755) $generated@@79) (= (type $generated@@756) $generated@@79)) (= (type $generated@@757) $generated@@96)) ($generated@@305 $generated@@757 ($generated@@211 $generated@@755 $generated@@756))) (and (= ($generated@@316 ($generated@@498 $generated@@98 $generated@@757)) $generated@@757) ($generated@@99 ($generated@@498 $generated@@98 $generated@@757) ($generated@@211 $generated@@755 $generated@@756))))
 :pattern ( ($generated@@305 $generated@@757 ($generated@@211 $generated@@755 $generated@@756)))
)))
(assert (forall (($generated@@758 T@U) ($generated@@759 T@U) ($generated@@760 T@U) ($generated@@761 T@U) ($generated@@762 T@U) ) (!  (=> (and (and (and (and (= (type $generated@@758) $generated@@79) (= (type $generated@@759) $generated@@79)) (= (type $generated@@760) $generated@@97)) (= (type $generated@@761) $generated@@98)) (= (type $generated@@762) $generated@@98)) (= ($generated@@107 $generated@@758 $generated@@759 ($generated@@95 $generated@@760) $generated@@761 $generated@@762) (forall (($generated@@763 T@U) ) (!  (=> (= (type $generated@@763) $generated@@96) ($generated@@94 $generated@@758 $generated@@759 $generated@@763 ($generated@@95 $generated@@760) $generated@@761 $generated@@762))
 :pattern ( ($generated@@94 $generated@@758 $generated@@759 $generated@@763 ($generated@@95 $generated@@760) $generated@@761 $generated@@762))
))))
 :pattern ( ($generated@@107 $generated@@758 $generated@@759 ($generated@@95 $generated@@760) $generated@@761 $generated@@762))
)))
(assert (forall (($generated@@764 T@U) ($generated@@765 T@U) ($generated@@766 T@U) ) (!  (=> (and (and (and (= (type $generated@@764) $generated@@98) (= (type $generated@@765) $generated@@79)) (= (type $generated@@766) ($generated@@123 $generated@@124 $generated@@125))) (and ($generated@@201 $generated@@766) (and ($generated@@102 $generated@@764) ($generated@@121 $generated@@764 ($generated@@100 $generated@@765) $generated@@766)))) ($generated@@385 ($generated@@103 $generated@@764) $generated@@765 $generated@@766))
 :pattern ( ($generated@@385 ($generated@@103 $generated@@764) $generated@@765 $generated@@766))
)))
(assert (forall (($generated@@767 T@U) ($generated@@768 T@U) ($generated@@769 T@U) ) (!  (=> (and (and (and (= (type $generated@@767) $generated@@98) (= (type $generated@@768) $generated@@79)) (= (type $generated@@769) ($generated@@123 $generated@@124 $generated@@125))) (and ($generated@@201 $generated@@769) (and ($generated@@340 $generated@@767) ($generated@@121 $generated@@767 ($generated@@300 $generated@@768) $generated@@769)))) ($generated@@385 ($generated@@341 $generated@@767) $generated@@768 $generated@@769))
 :pattern ( ($generated@@385 ($generated@@341 $generated@@767) $generated@@768 $generated@@769))
)))
(assert (forall (($generated@@770 T@U) ) (! (let (($generated@@771 (type $generated@@770)))
 (not ($generated@@0 ($generated@@128 ($generated@@601 $generated@@771) $generated@@770))))
 :pattern ( (let (($generated@@771 (type $generated@@770)))
($generated@@128 ($generated@@601 $generated@@771) $generated@@770)))
)))
(assert (forall (($generated@@772 T@U) ($generated@@773 T@U) ) (!  (=> (and (= (type $generated@@772) $generated@@79) (= (type $generated@@773) $generated@@79)) (and (= ($generated@@90 ($generated@@211 $generated@@772 $generated@@773)) $generated@@64) (= ($generated@@445 ($generated@@211 $generated@@772 $generated@@773)) $generated@@74)))
 :pattern ( ($generated@@211 $generated@@772 $generated@@773))
)))
(assert (forall (($generated@@774 T@U) ) (!  (=> (= (type $generated@@774) $generated@@98) (= ($generated@@737 ($generated@@316 $generated@@774)) ($generated@@738 $generated@@774)))
 :pattern ( ($generated@@737 ($generated@@316 $generated@@774)))
)))
(assert (forall (($generated@@775 T@U) ($generated@@776 T@U) ($generated@@777 Int) ($generated@@778 T@U) ) (!  (=> (and (and (= (type $generated@@775) $generated@@79) (= (type $generated@@776) $generated@@97)) (= (type $generated@@778) $generated@@98)) (= ($generated@@347 $generated@@775 ($generated@@95 $generated@@776) $generated@@777 $generated@@778) ($generated@@347 $generated@@775 $generated@@776 $generated@@777 $generated@@778)))
 :pattern ( ($generated@@347 $generated@@775 ($generated@@95 $generated@@776) $generated@@777 $generated@@778))
)))
(assert (forall (($generated@@779 T@U) ) (!  (=> (and (= (type $generated@@779) $generated@@96) ($generated@@305 $generated@@779 ($generated@@122 0))) (and (= ($generated@@316 ($generated@@498 $generated@@2 $generated@@779)) $generated@@779) ($generated@@99 ($generated@@498 ($generated@@123 $generated@@96 $generated@@4) $generated@@779) ($generated@@122 0))))
 :pattern ( ($generated@@305 $generated@@779 ($generated@@122 0)))
)))
(assert (forall (($generated@@780 T@U) ($generated@@781 T@U) ) (!  (=> (and (and (= (type $generated@@780) $generated@@96) (= (type $generated@@781) $generated@@79)) ($generated@@305 $generated@@780 ($generated@@361 $generated@@781))) (and (= ($generated@@316 ($generated@@498 ($generated@@123 $generated@@96 $generated@@4) $generated@@780)) $generated@@780) ($generated@@99 ($generated@@498 ($generated@@123 $generated@@96 $generated@@4) $generated@@780) ($generated@@361 $generated@@781))))
 :pattern ( ($generated@@305 $generated@@780 ($generated@@361 $generated@@781)))
)))
(assert (forall (($generated@@782 T@U) ($generated@@783 T@U) ) (!  (=> (and (and (= (type $generated@@782) $generated@@96) (= (type $generated@@783) $generated@@79)) ($generated@@305 $generated@@782 ($generated@@366 $generated@@783))) (and (= ($generated@@316 ($generated@@498 ($generated@@123 $generated@@96 $generated@@4) $generated@@782)) $generated@@782) ($generated@@99 ($generated@@498 ($generated@@123 $generated@@96 $generated@@4) $generated@@782) ($generated@@366 $generated@@783))))
 :pattern ( ($generated@@305 $generated@@782 ($generated@@366 $generated@@783)))
)))
(assert (forall (($generated@@784 T@U) ($generated@@785 T@U) ) (!  (=> (and (and (= (type $generated@@784) $generated@@96) (= (type $generated@@785) $generated@@79)) ($generated@@305 $generated@@784 ($generated@@227 $generated@@785))) (and (= ($generated@@316 ($generated@@498 ($generated@@123 $generated@@96 $generated@@2) $generated@@784)) $generated@@784) ($generated@@99 ($generated@@498 ($generated@@123 $generated@@96 $generated@@2) $generated@@784) ($generated@@227 $generated@@785))))
 :pattern ( ($generated@@305 $generated@@784 ($generated@@227 $generated@@785)))
)))
(assert (forall (($generated@@786 T@U) ($generated@@787 T@U) ) (!  (=> (and (and (= (type $generated@@786) $generated@@96) (= (type $generated@@787) $generated@@79)) ($generated@@305 $generated@@786 ($generated@@687 $generated@@787))) (and (= ($generated@@316 ($generated@@498 ($generated@@406 $generated@@96) $generated@@786)) $generated@@786) ($generated@@99 ($generated@@498 ($generated@@406 $generated@@96) $generated@@786) ($generated@@687 $generated@@787))))
 :pattern ( ($generated@@305 $generated@@786 ($generated@@687 $generated@@787)))
)))
(assert (forall (($generated@@788 T@U) ($generated@@789 T@U) ) (!  (=> (and (and (= (type $generated@@788) $generated@@79) (= (type $generated@@789) $generated@@96)) ($generated@@305 $generated@@789 ($generated@@100 $generated@@788))) (and (= ($generated@@316 ($generated@@498 $generated@@98 $generated@@789)) $generated@@789) ($generated@@99 ($generated@@498 $generated@@98 $generated@@789) ($generated@@100 $generated@@788))))
 :pattern ( ($generated@@305 $generated@@789 ($generated@@100 $generated@@788)))
)))
(assert (forall (($generated@@790 T@U) ($generated@@791 T@U) ) (!  (=> (and (and (= (type $generated@@790) $generated@@79) (= (type $generated@@791) $generated@@96)) ($generated@@305 $generated@@791 ($generated@@300 $generated@@790))) (and (= ($generated@@316 ($generated@@498 $generated@@98 $generated@@791)) $generated@@791) ($generated@@99 ($generated@@498 $generated@@98 $generated@@791) ($generated@@300 $generated@@790))))
 :pattern ( ($generated@@305 $generated@@791 ($generated@@300 $generated@@790)))
)))
(assert (forall (($generated@@792 T@U) ) (!  (=> (and (= (type $generated@@792) $generated@@96) ($generated@@491 $generated@@792)) (= $generated@@792 ($generated@@105 ($generated@@101 $generated@@792))))
 :pattern ( ($generated@@101 $generated@@792))
 :pattern ( ($generated@@491 $generated@@792))
)))
(assert (forall (($generated@@793 T@U) ($generated@@794 T@U) ($generated@@795 T@U) ($generated@@796 T@U) ) (! (let (($generated@@797 (type $generated@@796)))
 (=> (and (and (and (= (type $generated@@793) ($generated@@123 $generated@@124 $generated@@125)) (= (type $generated@@794) $generated@@124)) (= (type $generated@@795) ($generated@@81 $generated@@797))) ($generated@@201 ($generated@@129 $generated@@793 $generated@@794 ($generated@@131 ($generated@@128 $generated@@793 $generated@@794) $generated@@795 $generated@@796)))) ($generated@@185 $generated@@793 ($generated@@129 $generated@@793 $generated@@794 ($generated@@131 ($generated@@128 $generated@@793 $generated@@794) $generated@@795 $generated@@796)))))
 :pattern ( ($generated@@129 $generated@@793 $generated@@794 ($generated@@131 ($generated@@128 $generated@@793 $generated@@794) $generated@@795 $generated@@796)))
)))
(assert (forall (($generated@@798 T@U) ($generated@@799 T@U) ($generated@@800 T@U) ) (!  (=> (and (and (and (= (type $generated@@798) $generated@@98) (= (type $generated@@799) $generated@@79)) (= (type $generated@@800) ($generated@@123 $generated@@124 $generated@@125))) (and ($generated@@201 $generated@@800) (and ($generated@@102 $generated@@798) ($generated@@121 $generated@@798 ($generated@@100 $generated@@799) $generated@@800)))) ($generated@@121 ($generated@@106 $generated@@798) ($generated@@100 $generated@@799) $generated@@800))
 :pattern ( ($generated@@121 ($generated@@106 $generated@@798) ($generated@@100 $generated@@799) $generated@@800))
)))
(assert (forall (($generated@@801 T@U) ($generated@@802 T@U) ($generated@@803 T@U) ) (!  (=> (and (and (and (= (type $generated@@801) $generated@@98) (= (type $generated@@802) $generated@@79)) (= (type $generated@@803) ($generated@@123 $generated@@124 $generated@@125))) (and ($generated@@201 $generated@@803) (and ($generated@@340 $generated@@801) ($generated@@121 $generated@@801 ($generated@@300 $generated@@802) $generated@@803)))) ($generated@@121 ($generated@@342 $generated@@801) ($generated@@300 $generated@@802) $generated@@803))
 :pattern ( ($generated@@121 ($generated@@342 $generated@@801) ($generated@@300 $generated@@802) $generated@@803))
)))
(assert (= ($generated@@90 $generated@@193) $generated@@62))
(assert (= ($generated@@445 $generated@@193) $generated@@73))
(assert (= ($generated@@90 $generated@@196) $generated@@71))
(assert (= ($generated@@445 $generated@@196) $generated@@77))
(assert (= ($generated@@90 $generated@@297) $generated@@72))
(assert (= ($generated@@445 $generated@@297) $generated@@77))
(assert (forall (($generated@@804 T@U) ($generated@@805 T@U) ($generated@@806 T@U) ) (!  (=> (and (and (= (type $generated@@804) ($generated@@123 $generated@@96 $generated@@2)) (= (type $generated@@805) $generated@@79)) (= (type $generated@@806) ($generated@@123 $generated@@124 $generated@@125))) (= ($generated@@121 $generated@@804 ($generated@@227 $generated@@805) $generated@@806) (forall (($generated@@807 T@U) ) (!  (=> (and (= (type $generated@@807) $generated@@96) (< 0 ($generated ($generated@@128 $generated@@804 $generated@@807)))) ($generated@@385 $generated@@807 $generated@@805 $generated@@806))
 :pattern ( ($generated@@128 $generated@@804 $generated@@807))
))))
 :pattern ( ($generated@@121 $generated@@804 ($generated@@227 $generated@@805) $generated@@806))
)))
(assert (= $generated@@225 ($generated@@372 $generated@@225)))
(assert (forall (($generated@@808 T@U) ($generated@@809 T@U) ) (!  (=> (and (and (= (type $generated@@808) $generated@@96) (= (type $generated@@809) $generated@@96)) (and ($generated@@491 $generated@@809) (<= ($generated@@101 $generated@@809) ($generated@@101 $generated@@808)))) (or (and (= $generated@@809 ($generated@@105 0)) (= ($generated@@104 $generated@@808 $generated@@809) $generated@@808)) (and (not (= $generated@@809 ($generated@@105 0))) ($generated@@189 ($generated@@104 $generated@@808 $generated@@809) $generated@@808))))
 :pattern ( ($generated@@104 $generated@@808 $generated@@809))
)))
(assert (forall (($generated@@810 T@U) ($generated@@811 T@U) ($generated@@812 T@U) ($generated@@813 T@U) ($generated@@814 T@U) ($generated@@815 T@U) ($generated@@816 T@U) ) (!  (=> (and (and (and (and (and (and (and (= (type $generated@@810) $generated@@79) (= (type $generated@@811) $generated@@79)) (= (type $generated@@812) $generated@@96)) (= (type $generated@@813) $generated@@97)) (= (type $generated@@814) $generated@@98)) (= (type $generated@@815) $generated@@98)) (= (type $generated@@816) $generated@@96)) (and ($generated@@189 $generated@@812 $generated@@816) ($generated@@94 $generated@@810 $generated@@811 $generated@@816 ($generated@@95 $generated@@813) $generated@@814 $generated@@815))) ($generated@@94 $generated@@810 $generated@@811 $generated@@812 ($generated@@95 $generated@@813) $generated@@814 $generated@@815))
 :pattern ( ($generated@@94 $generated@@810 $generated@@811 $generated@@812 ($generated@@95 $generated@@813) $generated@@814 $generated@@815) ($generated@@94 $generated@@810 $generated@@811 $generated@@816 ($generated@@95 $generated@@813) $generated@@814 $generated@@815))
)))
(assert (forall (($generated@@817 T@U) ($generated@@818 T@U) ($generated@@819 T@U) ($generated@@820 T@U) ($generated@@821 T@U) ) (!  (=> (and (and (and (and (= (type $generated@@817) $generated@@79) (= (type $generated@@818) $generated@@79)) (= (type $generated@@819) $generated@@97)) (= (type $generated@@820) $generated@@98)) (= (type $generated@@821) $generated@@98)) (= ($generated@@107 $generated@@817 $generated@@818 ($generated@@95 $generated@@819) $generated@@820 $generated@@821) ($generated@@107 $generated@@817 $generated@@818 $generated@@819 $generated@@820 $generated@@821)))
 :pattern ( ($generated@@107 $generated@@817 $generated@@818 ($generated@@95 $generated@@819) $generated@@820 $generated@@821))
)))
(assert (forall (($generated@@822 T@U) ($generated@@823 T@U) ($generated@@824 T@U) ) (!  (=> (and (and (and (= (type $generated@@822) $generated@@98) (= (type $generated@@823) $generated@@79)) (= (type $generated@@824) ($generated@@123 $generated@@124 $generated@@125))) (and ($generated@@201 $generated@@824) (and ($generated@@210 $generated@@822) (exists (($generated@@825 T@U) ) (!  (and (= (type $generated@@825) $generated@@79) ($generated@@121 $generated@@822 ($generated@@211 $generated@@823 $generated@@825) $generated@@824))
 :pattern ( ($generated@@121 $generated@@822 ($generated@@211 $generated@@823 $generated@@825) $generated@@824))
))))) ($generated@@385 ($generated@@218 $generated@@822) $generated@@823 $generated@@824))
 :pattern ( ($generated@@385 ($generated@@218 $generated@@822) $generated@@823 $generated@@824))
)))
(assert (forall (($generated@@826 T@U) ($generated@@827 T@U) ($generated@@828 T@U) ) (!  (=> (and (and (and (= (type $generated@@826) $generated@@98) (= (type $generated@@827) $generated@@79)) (= (type $generated@@828) ($generated@@123 $generated@@124 $generated@@125))) (and ($generated@@201 $generated@@828) (and ($generated@@210 $generated@@826) (exists (($generated@@829 T@U) ) (!  (and (= (type $generated@@829) $generated@@79) ($generated@@121 $generated@@826 ($generated@@211 $generated@@829 $generated@@827) $generated@@828))
 :pattern ( ($generated@@121 $generated@@826 ($generated@@211 $generated@@829 $generated@@827) $generated@@828))
))))) ($generated@@385 ($generated@@219 $generated@@826) $generated@@827 $generated@@828))
 :pattern ( ($generated@@385 ($generated@@219 $generated@@826) $generated@@827 $generated@@828))
)))
(assert (forall (($generated@@830 T@U) ($generated@@831 T@U) ) (!  (=> (and (= (type $generated@@830) $generated@@96) (= (type $generated@@831) $generated@@96)) (= ($generated@@304 ($generated@@372 $generated@@830) ($generated@@372 $generated@@831)) ($generated@@372 ($generated@@304 $generated@@830 $generated@@831))))
 :pattern ( ($generated@@304 ($generated@@372 $generated@@830) ($generated@@372 $generated@@831)))
)))
(assert (forall (($generated@@832 T@U) ($generated@@833 T@U) ) (!  (=> (and (= (type $generated@@832) $generated@@96) (= (type $generated@@833) $generated@@98)) (= ($generated@@350 ($generated@@372 $generated@@832) ($generated@@372 $generated@@833)) ($generated@@372 ($generated@@350 $generated@@832 $generated@@833))))
 :pattern ( ($generated@@350 ($generated@@372 $generated@@832) ($generated@@372 $generated@@833)))
)))
(assert (forall (($generated@@834 Int) ) (! (= ($generated@@316 ($generated@@8 ($generated@@349 $generated@@834))) ($generated@@372 ($generated@@316 ($generated@@8 $generated@@834))))
 :pattern ( ($generated@@316 ($generated@@8 ($generated@@349 $generated@@834))))
)))
(assert (forall (($generated@@835 T@U) ) (! (= ($generated@@316 ($generated@@372 $generated@@835)) ($generated@@372 ($generated@@316 $generated@@835)))
 :pattern ( ($generated@@316 ($generated@@372 $generated@@835)))
)))
(assert (forall (($generated@@836 T@U) ) (! (let (($generated@@837 ($generated@@407 (type $generated@@836))))
 (=> (and (= (type $generated@@836) ($generated@@406 $generated@@837)) (= ($generated@@405 $generated@@836) 0)) (= $generated@@836 ($generated@@404 $generated@@837))))
 :pattern ( ($generated@@405 $generated@@836))
)))
(assert (forall (($generated@@838 T@U) ($generated@@839 T@U) ($generated@@840 T@U) ) (! (let (($generated@@841 (type $generated@@839)))
 (=> (and (and (= (type $generated@@838) ($generated@@123 $generated@@841 $generated@@2)) (= (type $generated@@840) $generated@@2)) (<= 0 ($generated $generated@@840))) (= ($generated@@439 ($generated@@129 $generated@@838 $generated@@839 $generated@@840)) (+ (- ($generated@@439 $generated@@838) ($generated ($generated@@128 $generated@@838 $generated@@839))) ($generated $generated@@840)))))
 :pattern ( ($generated@@439 ($generated@@129 $generated@@838 $generated@@839 $generated@@840)))
)))
(assert (forall (($generated@@842 T@U) ($generated@@843 T@U) ($generated@@844 T@U) ($generated@@845 T@U) ($generated@@846 T@U) ) (!  (=> (and (and (and (and (and (= (type $generated@@842) $generated@@79) (= (type $generated@@843) $generated@@79)) (= (type $generated@@844) $generated@@97)) (= (type $generated@@845) $generated@@98)) (= (type $generated@@846) $generated@@98)) (forall (($generated@@847 Int) ) (!  (=> (<= 0 $generated@@847) ($generated@@94 $generated@@842 $generated@@843 ($generated@@105 $generated@@847) ($generated@@95 $generated@@844) $generated@@845 $generated@@846))
 :pattern ( ($generated@@94 $generated@@842 $generated@@843 ($generated@@105 $generated@@847) ($generated@@95 $generated@@844) $generated@@845 $generated@@846))
))) ($generated@@107 $generated@@842 $generated@@843 ($generated@@95 $generated@@844) $generated@@845 $generated@@846))
 :pattern ( ($generated@@107 $generated@@842 $generated@@843 ($generated@@95 $generated@@844) $generated@@845 $generated@@846))
)))
(assert (forall (($generated@@848 T@U) ($generated@@849 T@U) ) (!  (=> (and (= (type $generated@@848) ($generated@@123 $generated@@124 $generated@@125)) (= (type $generated@@849) $generated@@2)) ($generated@@121 $generated@@849 $generated@@46 $generated@@848))
 :pattern ( ($generated@@121 $generated@@849 $generated@@46 $generated@@848))
)))
(assert (forall (($generated@@850 T@U) ($generated@@851 T@U) ) (!  (=> (and (= (type $generated@@850) ($generated@@123 $generated@@124 $generated@@125)) (= (type $generated@@851) $generated@@3)) ($generated@@121 $generated@@851 $generated@@47 $generated@@850))
 :pattern ( ($generated@@121 $generated@@851 $generated@@47 $generated@@850))
)))
(assert (forall (($generated@@852 T@U) ($generated@@853 T@U) ) (!  (=> (and (= (type $generated@@852) ($generated@@123 $generated@@124 $generated@@125)) (= (type $generated@@853) $generated@@4)) ($generated@@121 $generated@@853 $generated@@44 $generated@@852))
 :pattern ( ($generated@@121 $generated@@853 $generated@@44 $generated@@852))
)))
(assert (forall (($generated@@854 T@U) ($generated@@855 T@U) ) (!  (=> (and (= (type $generated@@854) ($generated@@123 $generated@@124 $generated@@125)) (= (type $generated@@855) $generated@@630)) ($generated@@121 $generated@@855 $generated@@45 $generated@@854))
 :pattern ( ($generated@@121 $generated@@855 $generated@@45 $generated@@854))
)))
(assert (forall (($generated@@856 T@U) ($generated@@857 T@U) ) (!  (=> (and (= (type $generated@@856) ($generated@@123 $generated@@124 $generated@@125)) (= (type $generated@@857) $generated@@96)) ($generated@@121 $generated@@857 $generated@@48 $generated@@856))
 :pattern ( ($generated@@121 $generated@@857 $generated@@48 $generated@@856))
)))
(assert (forall (($generated@@858 T@U) ($generated@@859 T@U) ($generated@@860 T@U) ($generated@@861 T@U) ) (!  (=> (and (and (and (and (= (type $generated@@858) $generated@@79) (= (type $generated@@859) $generated@@96)) (= (type $generated@@860) $generated@@98)) (= (type $generated@@861) ($generated@@123 $generated@@124 $generated@@125))) ($generated@@201 $generated@@861)) (= ($generated@@121 ($generated@@315 $generated@@859 $generated@@860) ($generated@@100 $generated@@858) $generated@@861)  (and ($generated@@385 $generated@@859 $generated@@858 $generated@@861) ($generated@@121 $generated@@860 ($generated@@100 $generated@@858) $generated@@861))))
 :pattern ( ($generated@@121 ($generated@@315 $generated@@859 $generated@@860) ($generated@@100 $generated@@858) $generated@@861))
)))
(assert (forall (($generated@@862 T@U) ($generated@@863 T@U) ($generated@@864 T@U) ($generated@@865 T@U) ) (!  (=> (and (and (and (and (= (type $generated@@862) $generated@@79) (= (type $generated@@863) $generated@@96)) (= (type $generated@@864) $generated@@98)) (= (type $generated@@865) ($generated@@123 $generated@@124 $generated@@125))) ($generated@@201 $generated@@865)) (= ($generated@@121 ($generated@@350 $generated@@863 $generated@@864) ($generated@@300 $generated@@862) $generated@@865)  (and ($generated@@385 $generated@@863 $generated@@862 $generated@@865) ($generated@@121 $generated@@864 ($generated@@300 $generated@@862) $generated@@865))))
 :pattern ( ($generated@@121 ($generated@@350 $generated@@863 $generated@@864) ($generated@@300 $generated@@862) $generated@@865))
)))
(assert (forall (($generated@@866 T@U) ($generated@@867 T@U) ) (!  (=> (and (= (type $generated@@866) ($generated@@406 $generated@@96)) (= (type $generated@@867) $generated@@79)) (= ($generated@@99 $generated@@866 ($generated@@687 $generated@@867)) (forall (($generated@@868 Int) ) (!  (=> (and (<= 0 $generated@@868) (< $generated@@868 ($generated@@405 $generated@@866))) ($generated@@305 ($generated@@688 $generated@@866 $generated@@868) $generated@@867))
 :pattern ( ($generated@@688 $generated@@866 $generated@@868))
))))
 :pattern ( ($generated@@99 $generated@@866 ($generated@@687 $generated@@867)))
)))
(assert (forall (($generated@@870 T@U) ($generated@@871 Int) ) (!  (=> (= (type $generated@@870) ($generated@@406 $generated@@96)) (=> (and (<= 0 $generated@@871) (< $generated@@871 ($generated@@405 $generated@@870))) (< ($generated@@738 ($generated@@498 $generated@@98 ($generated@@688 $generated@@870 $generated@@871))) ($generated@@869 $generated@@870))))
 :pattern ( ($generated@@738 ($generated@@498 $generated@@98 ($generated@@688 $generated@@870 $generated@@871))))
)))
(assert (forall (($generated@@872 T@U) ($generated@@873 T@U) ($generated@@874 T@U) ) (!  (=> (and (and (and (= (type $generated@@872) ($generated@@451 $generated@@96 $generated@@96)) (= (type $generated@@873) $generated@@79)) (= (type $generated@@874) $generated@@79)) ($generated@@99 $generated@@872 ($generated@@576 $generated@@873 $generated@@874))) (and (and ($generated@@99 ($generated@@449 $generated@@872) ($generated@@361 $generated@@873)) ($generated@@99 ($generated@@511 $generated@@872) ($generated@@361 $generated@@874))) ($generated@@99 ($generated@@550 $generated@@872) ($generated@@361 ($generated@@211 $generated@@873 $generated@@874)))))
 :pattern ( ($generated@@99 $generated@@872 ($generated@@576 $generated@@873 $generated@@874)))
)))
(assert (forall (($generated@@875 T@U) ($generated@@876 T@U) ($generated@@877 T@U) ) (!  (=> (and (and (and (= (type $generated@@875) ($generated@@469 $generated@@96 $generated@@96)) (= (type $generated@@876) $generated@@79)) (= (type $generated@@877) $generated@@79)) ($generated@@99 $generated@@875 ($generated@@584 $generated@@876 $generated@@877))) (and (and ($generated@@99 ($generated@@467 $generated@@875) ($generated@@366 $generated@@876)) ($generated@@99 ($generated@@522 $generated@@875) ($generated@@366 $generated@@877))) ($generated@@99 ($generated@@558 $generated@@875) ($generated@@366 ($generated@@211 $generated@@876 $generated@@877)))))
 :pattern ( ($generated@@99 $generated@@875 ($generated@@584 $generated@@876 $generated@@877)))
)))
(assert (forall (($generated@@878 T@U) ) (!  (=> (= (type $generated@@878) $generated@@2) ($generated@@99 $generated@@878 $generated@@46))
 :pattern ( ($generated@@99 $generated@@878 $generated@@46))
)))
(assert (forall (($generated@@879 T@U) ) (!  (=> (= (type $generated@@879) $generated@@3) ($generated@@99 $generated@@879 $generated@@47))
 :pattern ( ($generated@@99 $generated@@879 $generated@@47))
)))
(assert (forall (($generated@@880 T@U) ) (!  (=> (= (type $generated@@880) $generated@@4) ($generated@@99 $generated@@880 $generated@@44))
 :pattern ( ($generated@@99 $generated@@880 $generated@@44))
)))
(assert (forall (($generated@@881 T@U) ) (!  (=> (= (type $generated@@881) $generated@@630) ($generated@@99 $generated@@881 $generated@@45))
 :pattern ( ($generated@@99 $generated@@881 $generated@@45))
)))
(assert (forall (($generated@@882 T@U) ) (!  (=> (= (type $generated@@882) $generated@@96) ($generated@@99 $generated@@882 $generated@@48))
 :pattern ( ($generated@@99 $generated@@882 $generated@@48))
)))
(push 1)
(declare-fun ControlFlow (Int Int) Int)
(declare-fun $generated@@883 () T@U)
(declare-fun $generated@@884 () Int)
(declare-fun $generated@@885 () T@U)
(declare-fun $generated@@886 () T@U)
(declare-fun $generated@@887 () T@U)
(declare-fun $generated@@888 () T@U)
(declare-fun $generated@@889 () Int)
(declare-fun $generated@@890 () Int)
(declare-fun $generated@@891 () T@U)
(declare-fun $generated@@892 () Int)
(declare-fun $generated@@893 () Int)
(declare-fun $generated@@894 () T@U)
(declare-fun $generated@@895 (T@U) Bool)
(declare-fun $generated@@896 () Int)
(declare-fun $generated@@897 () Int)
(declare-fun $generated@@898 () Bool)
(declare-fun $generated@@899 () Int)
(declare-fun $generated@@900 () Int)
(declare-fun $generated@@901 () Int)
(declare-fun $generated@@902 () Int)
(declare-fun $generated@@903 () T@U)
(declare-fun $generated@@904 () T@U)
(declare-fun $generated@@905 () T@U)
(declare-fun $generated@@906 () Int)
(declare-fun $generated@@907 () T@U)
(declare-fun $generated@@908 () T@U)
(declare-fun $generated@@909 () T@U)
(declare-fun $generated@@910 () Int)
(declare-fun $generated@@911 () T@U)
(declare-fun $generated@@912 () Bool)
(declare-fun $generated@@913 () T@U)
(declare-fun $generated@@914 () T@U)
(declare-fun $generated@@915 () T@U)
(assert  (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (= (type $generated@@883) $generated@@98) (= (type $generated@@894) ($generated@@123 $generated@@124 $generated@@125))) (= (type $generated@@886) ($generated@@123 $generated@@124 $generated@@125))) (= (type $generated@@885) $generated@@98)) (= (type $generated@@887) $generated@@98)) (= (type $generated@@888) $generated@@98)) (= (type $generated@@891) $generated@@98)) (= (type $generated@@903) ($generated@@123 $generated@@124 $generated@@125))) (= (type $generated@@904) ($generated@@237 $generated@@124 $generated@@4))) (= (type $generated@@905) $generated@@98)) (= (type $generated@@907) $generated@@124)) (= (type $generated@@908) ($generated@@123 $generated@@124 $generated@@125))) (= (type $generated@@909) ($generated@@123 $generated@@124 $generated@@125))) (= (type $generated@@911) $generated@@98)) (= (type $generated@@913) $generated@@124)) (= (type $generated@@914) $generated@@98)) (= (type $generated@@915) $generated@@98)))
(set-option :timeout 0)
(set-option :rlimit 0)
(assert (not
 (=> (= (ControlFlow 0 0) 28) (let (($generated@@916 true))
(let (($generated@@917  (=> (and (= $generated@@883 $generated@@225) (= (ControlFlow 0 11) (- 0 10))) false)))
(let (($generated@@918  (=> (not (= $generated@@883 ($generated@@350 ($generated@@316 ($generated@@8 $generated@@884)) $generated@@885))) (and (=> (= (ControlFlow 0 13) 11) $generated@@917) (=> (= (ControlFlow 0 13) 12) $generated@@916)))))
(let (($generated@@919  (=> (= $generated@@883 ($generated@@350 ($generated@@316 ($generated@@8 $generated@@884)) $generated@@885)) (=> (and ($generated@@99 $generated@@885 ($generated@@300 $generated@@46)) ($generated@@121 $generated@@885 ($generated@@300 $generated@@46) $generated@@886)) (=> (and (and (and ($generated@@99 $generated@@887 ($generated@@300 $generated@@46)) ($generated@@121 $generated@@887 ($generated@@300 $generated@@46) $generated@@886)) (and (= $generated@@888 $generated@@885) ($generated@@99 $generated@@888 ($generated@@300 $generated@@46)))) (and (and (= $generated@@887 $generated@@888) (= $generated@@889 $generated@@884)) (and ($generated@@99 ($generated@@8 $generated@@889) $generated@@46) (= $generated@@890 $generated@@889)))) (and (=> (= (ControlFlow 0 7) (- 0 9)) ($generated@@340 $generated@@883)) (=> ($generated@@340 $generated@@883) (and (=> (= (ControlFlow 0 7) (- 0 8)) ($generated@@340 $generated@@883)) (=> ($generated@@340 $generated@@883) (=> (and (= $generated@@891 ($generated@@342 $generated@@883)) (= (ControlFlow 0 7) (- 0 6))) (< ($generated@@738 $generated@@891) ($generated@@738 $generated@@883))))))))))))
(let (($generated@@920  (=> (not ($generated@@337 $generated@@883 $generated@@225)) (and (=> (= (ControlFlow 0 14) 7) $generated@@919) (=> (= (ControlFlow 0 14) 13) $generated@@918)))))
(let (($generated@@921  (=> ($generated@@337 $generated@@883 $generated@@225) (=> (and (= $generated@@892 ($generated@@349 0)) (= $generated@@893 ($generated@@349 10))) (and (=> (= (ControlFlow 0 4) (- 0 5)) (< $generated@@892 $generated@@893)) (=> (< $generated@@892 $generated@@893) (=> (and (and (and ($generated@@201 $generated@@894) ($generated@@895 $generated@@894)) (forall (($generated@@922 T@U) ) (!  (=> (= (type $generated@@922) $generated@@124) (=> (and (not (= $generated@@922 $generated@@197)) ($generated@@0 ($generated@@130 ($generated@@128 $generated@@886 $generated@@922) $generated@@60))) (= ($generated@@128 $generated@@894 $generated@@922) ($generated@@128 $generated@@886 $generated@@922))))
 :pattern ( ($generated@@128 $generated@@894 $generated@@922))
))) (and (and ($generated@@185 $generated@@886 $generated@@894) (= $generated@@896 ($generated@@349 0))) (and (= $generated@@897 ($generated@@349 10)) (= (ControlFlow 0 4) (- 0 3))))) (< $generated@@896 $generated@@897))))))))
(let (($generated@@923  (=> (and $generated@@898 ($generated@@536 $generated@@883)) (and (=> (= (ControlFlow 0 15) 4) $generated@@921) (=> (= (ControlFlow 0 15) 14) $generated@@920)))))
(let (($generated@@924 true))
(let (($generated@@925  (and (=> (= (ControlFlow 0 16) 2) $generated@@924) (=> (= (ControlFlow 0 16) 15) $generated@@923))))
(let (($generated@@926 true))
(let (($generated@@927  (=> (and ($generated@@99 $generated@@883 ($generated@@300 $generated@@46)) ($generated@@121 $generated@@883 ($generated@@300 $generated@@46) $generated@@886)) (=> (and (and (and (and (and (and (and (and (not false) (= $generated@@899 30)) true) (= $generated@@900 40)) (= $generated@@901 60)) (= $generated@@902 5)) true) (and (forall (($generated@@928 T@U) ) (!  (=> (= (type $generated@@928) $generated@@124) (=> (and (not (= $generated@@928 $generated@@197)) ($generated@@0 ($generated@@130 ($generated@@128 $generated@@903 $generated@@928) $generated@@60))) (= ($generated@@128 $generated@@886 $generated@@928) ($generated@@128 $generated@@886 $generated@@928))))
 :pattern ( ($generated@@128 $generated@@886 $generated@@928))
)) ($generated@@185 $generated@@886 $generated@@886))) (and (and (forall (($generated@@929 T@U) ($generated@@930 T@U) ) (! (let (($generated@@931 ($generated@@82 (type $generated@@930))))
 (=> (and (and (= (type $generated@@929) $generated@@124) (= (type $generated@@930) ($generated@@81 $generated@@931))) (and (not (= $generated@@929 $generated@@197)) ($generated@@0 ($generated@@130 ($generated@@128 $generated@@886 $generated@@929) $generated@@60)))) (or (= ($generated@@130 ($generated@@128 $generated@@886 $generated@@929) $generated@@930) ($generated@@130 ($generated@@128 $generated@@886 $generated@@929) $generated@@930)) ($generated@@0 ($generated@@235 $generated@@904 $generated@@929 $generated@@930)))))
 :pattern ( ($generated@@130 ($generated@@128 $generated@@886 $generated@@929) $generated@@930))
)) (=> true true)) (and (<= ($generated@@738 $generated@@883) ($generated@@738 $generated@@905)) (=> (= ($generated@@738 $generated@@883) ($generated@@738 $generated@@905)) true)))) (and (=> (= (ControlFlow 0 17) 1) $generated@@926) (=> (= (ControlFlow 0 17) 16) $generated@@925))))))
(let (($generated@@932  (=> (and (and (and (= $generated@@904 ($generated@@236 $generated@@197 $generated@@903 $generated@@60 false)) (= $generated@@906 ($generated@@349 17))) (and (not (= $generated@@907 $generated@@197)) (= ($generated@@202 $generated@@907) $generated@@196))) (and (and (not ($generated@@0 ($generated@@130 ($generated@@128 $generated@@903 $generated@@907) $generated@@60))) (= $generated@@908 ($generated@@129 $generated@@903 $generated@@907 ($generated@@131 ($generated@@128 $generated@@903 $generated@@907) $generated@@60 ($generated@@11 true))))) (and ($generated@@201 $generated@@908) ($generated@@895 $generated@@908)))) (and (=> (= (ControlFlow 0 18) (- 0 27)) true) (and (=> (= (ControlFlow 0 18) (- 0 26)) (not (= $generated@@907 $generated@@197))) (=> (not (= $generated@@907 $generated@@197)) (and (=> (= (ControlFlow 0 18) (- 0 25)) ($generated@@0 ($generated@@235 $generated@@904 $generated@@907 $generated@@200))) (=> ($generated@@0 ($generated@@235 $generated@@904 $generated@@907 $generated@@200)) (=> (= $generated@@900 ($generated@@349 40)) (=> (and (= $generated@@909 ($generated@@129 $generated@@908 $generated@@907 ($generated@@131 ($generated@@128 $generated@@908 $generated@@907) $generated@@200 ($generated@@8 $generated@@900)))) ($generated@@201 $generated@@909)) (and (=> (= (ControlFlow 0 18) (- 0 24)) true) (and (=> (= (ControlFlow 0 18) (- 0 23)) (not (= $generated@@907 $generated@@197))) (=> (not (= $generated@@907 $generated@@197)) (=> (= $generated@@910 ($generated ($generated@@130 ($generated@@128 $generated@@909 $generated@@907) $generated@@200))) (=> (and ($generated@@121 ($generated@@8 $generated@@910) $generated@@46 $generated@@909) ($generated@@314 ($generated ($generated@@130 ($generated@@128 $generated@@909 $generated@@907) $generated@@200)))) (=> (and (and ($generated@@102 ($generated@@313 ($generated@@95 $generated@@415) ($generated ($generated@@130 ($generated@@128 $generated@@909 $generated@@907) $generated@@200)))) ($generated@@314 ($generated ($generated@@130 ($generated@@128 $generated@@909 $generated@@907) $generated@@200)))) (and (= $generated@@911 ($generated@@315 ($generated@@316 ($generated@@8 ($generated@@349 400))) ($generated@@315 ($generated@@316 ($generated@@8 ($generated@@349 320))) ($generated@@313 ($generated@@95 $generated@@415) ($generated ($generated@@130 ($generated@@128 $generated@@909 $generated@@907) $generated@@200)))))) (= $generated@@899 ($generated@@349 30)))) (and (=> (= (ControlFlow 0 18) (- 0 22)) true) (and (=> (= (ControlFlow 0 18) (- 0 21)) (not (= $generated@@907 $generated@@197))) (=> (not (= $generated@@907 $generated@@197)) (and (=> (= (ControlFlow 0 18) (- 0 20)) ($generated@@0 ($generated@@235 $generated@@904 $generated@@907 $generated@@200))) (=> ($generated@@0 ($generated@@235 $generated@@904 $generated@@907 $generated@@200)) (=> (= $generated@@901 ($generated@@349 60)) (=> (and (= $generated@@886 ($generated@@129 $generated@@909 $generated@@907 ($generated@@131 ($generated@@128 $generated@@909 $generated@@907) $generated@@200 ($generated@@8 $generated@@901)))) ($generated@@201 $generated@@886)) (and (=> (= (ControlFlow 0 18) (- 0 19)) ($generated@@99 ($generated@@8 ($generated@@349 5)) $generated@@193)) (=> ($generated@@99 ($generated@@8 ($generated@@349 5)) $generated@@193) (=> (= $generated@@902 ($generated@@349 5)) (=> (and ($generated@@121 ($generated@@8 $generated@@902) $generated@@193 $generated@@886) ($generated@@121 $generated@@911 ($generated@@100 $generated@@46) $generated@@886)) (=> (and (and ($generated@@348 $generated@@46 ($generated@@349 5) $generated@@911) ($generated@@348 $generated@@46 ($generated@@349 5) $generated@@911)) (and (= $generated@@905 ($generated@@347 $generated@@46 ($generated@@95 $generated@@415) ($generated@@349 5) $generated@@911)) (= (ControlFlow 0 18) 17))) $generated@@927))))))))))))))))))))))))))))
(let (($generated@@933  (=> (and (and (and (and ($generated@@201 $generated@@903) ($generated@@895 $generated@@903)) (and (=> $generated@@912 (and ($generated@@99 $generated@@913 $generated@@297) ($generated@@121 $generated@@913 $generated@@297 $generated@@903))) true)) (and (and ($generated@@99 $generated@@914 ($generated@@100 $generated@@46)) ($generated@@121 $generated@@914 ($generated@@100 $generated@@46) $generated@@903)) true)) (and (and (and ($generated@@99 $generated@@915 ($generated@@300 $generated@@46)) ($generated@@121 $generated@@915 ($generated@@300 $generated@@46) $generated@@903)) true) (and (= 2 $generated@@312) (= (ControlFlow 0 28) 18)))) $generated@@932)))
$generated@@933))))))))))))))
))
(check-sat)
(pop 1)
; Valid
(get-info :rlimit)
(reset)
(set-option :rlimit 0)
; did a full reset
(reset)
(set-option :print-success false)
(set-info :smt-lib-version 2.6)
(set-option :auto_config false)
(set-option :type_check true)
(set-option :smt.case_split 3)
(set-option :smt.qi.eager_threshold 100)
(set-option :smt.delay_units true)
(set-option :smt.arith.solver 2)
(set-option :smt.mbqi false)
(set-option :model.compact false)
(set-option :model.v2 true)
(set-option :pp.bv_literals false)
; done setting options


(set-info :category "industrial")
(declare-sort |T@U| 0)
(declare-sort |T@T| 0)
(declare-fun real_pow (Real Real) Real)
(declare-fun UOrdering2 (|T@U| |T@U|) Bool)
(declare-fun UOrdering3 (|T@T| |T@U| |T@U|) Bool)
(declare-fun tickleBool (Bool) Bool)
(assert (and (tickleBool true) (tickleBool false)))
(declare-fun $generated (T@U) Int)
(declare-fun $generated@@0 (T@U) Bool)
(declare-fun $generated@@1 (T@T) Int)
(declare-fun $generated@@2 () T@T)
(declare-fun $generated@@3 () T@T)
(declare-fun $generated@@4 () T@T)
(declare-fun $generated@@5 () T@T)
(declare-fun $generated@@6 () T@T)
(declare-fun $generated@@7 () T@T)
(declare-fun $generated@@8 (Int) T@U)
(declare-fun type (T@U) T@T)
(declare-fun $generated@@9 (Real) T@U)
(declare-fun $generated@@10 (T@U) Real)
(declare-fun $generated@@11 (Bool) T@U)
(declare-fun $generated@@12 (RoundingMode) T@U)
(declare-fun $generated@@13 (T@U) RoundingMode)
(declare-fun $generated@@14 (String) T@U)
(declare-fun $generated@@15 (T@U) String)
(declare-fun $generated@@16 ((RegEx String)) T@U)
(declare-fun $generated@@17 (T@U) (RegEx String))
(declare-fun $generated@@44 () T@U)
(declare-fun $generated@@45 () T@U)
(declare-fun $generated@@46 () T@U)
(declare-fun $generated@@47 () T@U)
(declare-fun $generated@@48 () T@U)
(declare-fun $generated@@49 () T@U)
(declare-fun $generated@@50 () T@U)
(declare-fun $generated@@51 () T@U)
(declare-fun $generated@@52 () T@U)
(declare-fun $generated@@53 () T@U)
(declare-fun $generated@@54 () T@U)
(declare-fun $generated@@55 () T@U)
(declare-fun $generated@@56 () T@U)
(declare-fun $generated@@57 () T@U)
(declare-fun $generated@@58 () T@U)
(declare-fun $generated@@59 () T@U)
(declare-fun $generated@@60 () T@U)
(declare-fun $generated@@61 () T@U)
(declare-fun $generated@@62 () T@U)
(declare-fun $generated@@63 () T@U)
(declare-fun $generated@@64 () T@U)
(declare-fun $generated@@65 () T@U)
(declare-fun $generated@@66 () T@U)
(declare-fun $generated@@67 () T@U)
(declare-fun $generated@@68 () T@U)
(declare-fun $generated@@69 () T@T)
(declare-fun $generated@@70 () T@T)
(declare-fun $generated@@71 (T@T) T@T)
(declare-fun $generated@@72 (T@T) T@T)
(declare-fun $generated@@73 () T@T)
(declare-fun $generated@@74 () T@T)
(declare-fun $generated@@77 (T@U) T@U)
(declare-fun $generated@@79 (T@U T@U T@U) Bool)
(declare-fun $generated@@80 (Int) T@U)
(declare-fun $generated@@81 (T@T T@T) T@T)
(declare-fun $generated@@82 () T@T)
(declare-fun $generated@@83 () T@T)
(declare-fun $generated@@84 (T@T) T@T)
(declare-fun $generated@@85 (T@T) T@T)
(declare-fun $generated@@86 (T@U T@U) T@U)
(declare-fun $generated@@87 (T@U T@U T@U) T@U)
(declare-fun $generated@@88 (T@U T@U) T@U)
(declare-fun $generated@@89 (T@U T@U T@U) T@U)
(declare-fun $generated@@137 (T@U) Int)
(declare-fun $generated@@138 (T@U) T@U)
(declare-fun $generated@@139 () T@U)
(declare-fun $generated@@140 (T@U) T@U)
(declare-fun $generated@@141 (T@U T@U) Bool)
(declare-fun $generated@@146 (T@U T@U) Bool)
(declare-fun $generated@@153 (T@U) T@U)
(declare-fun $generated@@158 (T@U) Bool)
(declare-fun $generated@@163 (T@U) T@U)
(declare-fun $generated@@168 (T@U) Bool)
(declare-fun $generated@@169 (T@U T@U) T@U)
(declare-fun $generated@@170 () T@T)
(declare-fun $generated@@176 (T@U T@U) Bool)
(declare-fun $generated@@177 (T@U) T@U)
(declare-fun $generated@@178 (T@U) T@U)
(declare-fun $generated@@179 () T@T)
(declare-fun $generated@@184 (T@U) T@U)
(declare-fun $generated@@185 (T@U) Bool)
(declare-fun $generated@@189 (T@U T@U T@U) T@U)
(declare-fun $generated@@190 (T@U T@U T@U Bool) T@U)
(declare-fun $generated@@191 (T@T T@T) T@T)
(declare-fun $generated@@192 (T@T) T@T)
(declare-fun $generated@@193 (T@T) T@T)
(declare-fun $generated@@194 (T@U T@U T@U T@U) T@U)
(declare-fun $generated@@245 (T@U T@U) T@U)
(declare-fun $generated@@246 (T@U T@U) Bool)
(declare-fun $generated@@255 (T@U) T@U)
(declare-fun $generated@@260 (T@U) T@U)
(declare-fun $generated@@265 (Int) Int)
(declare-fun $generated@@267 (T@U) T@U)
(declare-fun $generated@@271 (T@U T@U T@U) Bool)
(declare-fun $generated@@277 (T@U) T@U)
(declare-fun $generated@@283 (T@T) T@U)
(declare-fun $generated@@284 (T@U) Int)
(declare-fun $generated@@285 (T@T) T@T)
(declare-fun $generated@@286 (T@T) T@T)
(declare-fun $generated@@293 (T@U) T@U)
(declare-fun $generated@@306 (T@U) Int)
(declare-fun $generated@@307 (T@T) T@U)
(declare-fun $generated@@312 (T@U) T@U)
(declare-fun $generated@@317 (T@U) T@U)
(declare-fun $generated@@318 (T@T T@T) T@U)
(declare-fun $generated@@319 (T@T T@T) T@T)
(declare-fun $generated@@320 (T@T) T@T)
(declare-fun $generated@@321 (T@T) T@T)
(declare-fun $generated@@335 (T@U) T@U)
(declare-fun $generated@@336 (T@T T@T) T@U)
(declare-fun $generated@@337 (T@T T@T) T@T)
(declare-fun $generated@@338 (T@T) T@T)
(declare-fun $generated@@339 (T@T) T@T)
(declare-fun $generated@@364 (T@U) T@U)
(declare-fun $generated@@375 (T@U) T@U)
(declare-fun $generated@@395 (T@U) T@U)
(declare-fun $generated@@396 (T@T T@U) T@U)
(declare-fun $generated@@397 (T@U) T@U)
(declare-fun $generated@@406 (T@U) T@U)
(declare-fun $generated@@407 (T@U) T@U)
(declare-fun $generated@@424 (T@U T@U) T@U)
(declare-fun $generated@@432 (T@U T@U) T@U)
(declare-fun $generated@@443 (T@T) T@U)
(declare-fun $generated@@467 () T@T)
(declare-fun $generated@@476 (T@U) T@U)
(declare-fun $generated@@480 (T@U) T@U)
(declare-fun $generated@@486 (T@U) T@U)
(declare-fun $generated@@490 (T@U) T@U)
(declare-fun $generated@@498 (T@U) T@U)
(declare-fun $generated@@502 (T@U) T@U)
(declare-fun $generated@@510 (T@U) T@U)
(declare-fun $generated@@511 (T@U Int) T@U)
(declare-fun $generated@@520 (T@U) Int)
(declare-fun $generated@@522 (T@U) T@U)
(declare-fun $generated@@526 (T@U) T@U)
(declare-fun $generated@@530 (T@U) T@U)
(declare-fun $generated@@534 (T@U) T@U)
(declare-fun $generated@@538 (T@U) T@U)
(declare-fun $generated@@541 (T@U) T@U)
(declare-fun $generated@@544 (T@U) T@U)
(declare-fun $generated@@557 (T@U) Int)
(declare-fun $generated@@558 (T@U) Int)
(declare-fun $generated@@632 (T@U) Int)
(assert  (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (= ($generated@@1 $generated@@2) 0) (= ($generated@@1 $generated@@3) 1)) (= ($generated@@1 $generated@@4) 2)) (= ($generated@@1 $generated@@5) 3)) (= ($generated@@1 $generated@@6) 4)) (= ($generated@@1 $generated@@7) 5)) (forall (($generated@@18 Int) ) (! (= ($generated ($generated@@8 $generated@@18)) $generated@@18)
 :pattern ( ($generated@@8 $generated@@18))
))) (forall (($generated@@19 T@U) ) (!  (=> (= (type $generated@@19) $generated@@2) (= ($generated@@8 ($generated $generated@@19)) $generated@@19))
 :pattern ( ($generated $generated@@19))
))) (forall (($generated@@20 Int) ) (! (= (type ($generated@@8 $generated@@20)) $generated@@2)
 :pattern ( ($generated@@8 $generated@@20))
))) (forall (($generated@@21 Real) ) (! (= ($generated@@10 ($generated@@9 $generated@@21)) $generated@@21)
 :pattern ( ($generated@@9 $generated@@21))
))) (forall (($generated@@22 T@U) ) (!  (=> (= (type $generated@@22) $generated@@3) (= ($generated@@9 ($generated@@10 $generated@@22)) $generated@@22))
 :pattern ( ($generated@@10 $generated@@22))
))) (forall (($generated@@23 Real) ) (! (= (type ($generated@@9 $generated@@23)) $generated@@3)
 :pattern ( ($generated@@9 $generated@@23))
))) (forall (($generated@@24 Bool) ) (! (= ($generated@@0 ($generated@@11 $generated@@24)) $generated@@24)
 :pattern ( ($generated@@11 $generated@@24))
))) (forall (($generated@@25 T@U) ) (!  (=> (= (type $generated@@25) $generated@@4) (= ($generated@@11 ($generated@@0 $generated@@25)) $generated@@25))
 :pattern ( ($generated@@0 $generated@@25))
))) (forall (($generated@@26 Bool) ) (! (= (type ($generated@@11 $generated@@26)) $generated@@4)
 :pattern ( ($generated@@11 $generated@@26))
))) (forall (($generated@@27 RoundingMode) ) (! (= ($generated@@13 ($generated@@12 $generated@@27)) $generated@@27)
 :pattern ( ($generated@@12 $generated@@27))
))) (forall (($generated@@28 T@U) ) (!  (=> (= (type $generated@@28) $generated@@5) (= ($generated@@12 ($generated@@13 $generated@@28)) $generated@@28))
 :pattern ( ($generated@@13 $generated@@28))
))) (forall (($generated@@29 RoundingMode) ) (! (= (type ($generated@@12 $generated@@29)) $generated@@5)
 :pattern ( ($generated@@12 $generated@@29))
))) (forall (($generated@@30 String) ) (! (= ($generated@@15 ($generated@@14 $generated@@30)) $generated@@30)
 :pattern ( ($generated@@14 $generated@@30))
))) (forall (($generated@@31 T@U) ) (!  (=> (= (type $generated@@31) $generated@@6) (= ($generated@@14 ($generated@@15 $generated@@31)) $generated@@31))
 :pattern ( ($generated@@15 $generated@@31))
))) (forall (($generated@@32 String) ) (! (= (type ($generated@@14 $generated@@32)) $generated@@6)
 :pattern ( ($generated@@14 $generated@@32))
))) (forall (($generated@@33 (RegEx String)) ) (! (= ($generated@@17 ($generated@@16 $generated@@33)) $generated@@33)
 :pattern ( ($generated@@16 $generated@@33))
))) (forall (($generated@@34 T@U) ) (!  (=> (= (type $generated@@34) $generated@@7) (= ($generated@@16 ($generated@@17 $generated@@34)) $generated@@34))
 :pattern ( ($generated@@17 $generated@@34))
))) (forall (($generated@@35 (RegEx String)) ) (! (= (type ($generated@@16 $generated@@35)) $generated@@7)
 :pattern ( ($generated@@16 $generated@@35))
))))
(assert (forall (($generated@@36 T@U) ) (! (UOrdering2 $generated@@36 $generated@@36)
 :no-pattern ($generated $generated@@36)
 :no-pattern ($generated@@0 $generated@@36)
)))
(assert (forall (($generated@@37 T@U) ($generated@@38 T@U) ($generated@@39 T@U) ) (! (let (($generated@@40 (type $generated@@37)))
 (=> (and (and (= (type $generated@@38) $generated@@40) (= (type $generated@@39) $generated@@40)) (and (UOrdering2 $generated@@37 $generated@@38) (UOrdering2 $generated@@38 $generated@@39))) (UOrdering2 $generated@@37 $generated@@39)))
 :pattern ( (UOrdering2 $generated@@37 $generated@@38) (UOrdering2 $generated@@38 $generated@@39))
)))
(assert (forall (($generated@@41 T@U) ($generated@@42 T@U) ) (! (let (($generated@@43 (type $generated@@41)))
 (=> (= (type $generated@@42) $generated@@43) (=> (and (UOrdering2 $generated@@41 $generated@@42) (UOrdering2 $generated@@42 $generated@@41)) (= $generated@@41 $generated@@42))))
 :pattern ( (UOrdering2 $generated@@41 $generated@@42) (UOrdering2 $generated@@42 $generated@@41))
)))
(assert  (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (= ($generated@@1 $generated@@69) 6) (= (type $generated@@44) $generated@@69)) (= (type $generated@@45) $generated@@69)) (= (type $generated@@46) $generated@@69)) (= (type $generated@@47) $generated@@69)) (= (type $generated@@48) $generated@@69)) (= ($generated@@1 $generated@@70) 7)) (= (type $generated@@49) $generated@@70)) (= (type $generated@@50) $generated@@70)) (= (type $generated@@51) $generated@@70)) (= (type $generated@@52) $generated@@70)) (= (type $generated@@53) $generated@@70)) (= (type $generated@@54) $generated@@70)) (= (type $generated@@55) $generated@@70)) (= (type $generated@@56) $generated@@70)) (= (type $generated@@57) $generated@@70)) (= (type $generated@@58) $generated@@70)) (= (type $generated@@59) $generated@@70)) (forall (($generated@@75 T@T) ) (= ($generated@@1 ($generated@@71 $generated@@75)) 8))) (forall (($generated@@76 T@T) ) (! (= ($generated@@72 ($generated@@71 $generated@@76)) $generated@@76)
 :pattern ( ($generated@@71 $generated@@76))
))) (= (type $generated@@60) ($generated@@71 $generated@@4))) (= (type $generated@@61) $generated@@70)) (= (type $generated@@62) $generated@@70)) (= ($generated@@1 $generated@@73) 9)) (= (type $generated@@63) $generated@@73)) (= (type $generated@@64) $generated@@70)) (= (type $generated@@65) $generated@@70)) (= ($generated@@1 $generated@@74) 10)) (= (type $generated@@66) $generated@@74)) (= (type $generated@@67) $generated@@74)) (= (type $generated@@68) $generated@@74)))
(assert (distinct $generated@@44 $generated@@45 $generated@@46 $generated@@47 $generated@@48 $generated@@49 $generated@@50 $generated@@51 $generated@@52 $generated@@53 $generated@@54 $generated@@55 $generated@@56 $generated@@57 $generated@@58 $generated@@59 $generated@@60 $generated@@61 $generated@@62 $generated@@63 $generated@@64 $generated@@65 $generated@@66 $generated@@67 $generated@@68)
)
(assert (forall (($generated@@78 T@U) ) (! (= (type ($generated@@77 $generated@@78)) $generated@@70)
 :pattern ( ($generated@@77 $generated@@78))
)))
(assert (= ($generated@@77 $generated@@44) $generated@@49))
(assert (= ($generated@@77 $generated@@45) $generated@@50))
(assert (= ($generated@@77 $generated@@46) $generated@@51))
(assert (= ($generated@@77 $generated@@47) $generated@@52))
(assert (= ($generated@@77 $generated@@48) $generated@@53))
(assert  (and (and (and (and (and (and (and (and (and (and (and (and (and (forall (($generated@@90 T@T) ($generated@@91 T@T) ) (= ($generated@@1 ($generated@@81 $generated@@90 $generated@@91)) 11)) (forall (($generated@@92 T@T) ($generated@@93 T@T) ) (! (= ($generated@@84 ($generated@@81 $generated@@92 $generated@@93)) $generated@@92)
 :pattern ( ($generated@@81 $generated@@92 $generated@@93))
))) (forall (($generated@@94 T@T) ($generated@@95 T@T) ) (! (= ($generated@@85 ($generated@@81 $generated@@94 $generated@@95)) $generated@@95)
 :pattern ( ($generated@@81 $generated@@94 $generated@@95))
))) (forall (($generated@@96 T@U) ($generated@@97 T@U) ) (! (let (($generated@@98 ($generated@@85 (type $generated@@96))))
(= (type ($generated@@86 $generated@@96 $generated@@97)) $generated@@98))
 :pattern ( ($generated@@86 $generated@@96 $generated@@97))
))) (forall (($generated@@99 T@U) ($generated@@100 T@U) ($generated@@101 T@U) ) (! (let (($generated@@102 (type $generated@@101)))
(let (($generated@@103 (type $generated@@100)))
(= (type ($generated@@87 $generated@@99 $generated@@100 $generated@@101)) ($generated@@81 $generated@@103 $generated@@102))))
 :pattern ( ($generated@@87 $generated@@99 $generated@@100 $generated@@101))
))) (forall (($generated@@104 T@U) ($generated@@105 T@U) ($generated@@106 T@U) ) (! (let (($generated@@107 ($generated@@85 (type $generated@@104))))
 (=> (= (type $generated@@106) $generated@@107) (= ($generated@@86 ($generated@@87 $generated@@104 $generated@@105 $generated@@106) $generated@@105) $generated@@106)))
 :weight 0
))) (and (forall (($generated@@108 T@U) ($generated@@109 T@U) ($generated@@110 T@U) ($generated@@111 T@U) ) (!  (or (= $generated@@110 $generated@@111) (= ($generated@@86 ($generated@@87 $generated@@109 $generated@@110 $generated@@108) $generated@@111) ($generated@@86 $generated@@109 $generated@@111)))
 :weight 0
)) (forall (($generated@@112 T@U) ($generated@@113 T@U) ($generated@@114 T@U) ($generated@@115 T@U) ) (!  (or true (= ($generated@@86 ($generated@@87 $generated@@113 $generated@@114 $generated@@112) $generated@@115) ($generated@@86 $generated@@113 $generated@@115)))
 :weight 0
)))) (= ($generated@@1 $generated@@82) 12)) (forall (($generated@@116 T@U) ($generated@@117 T@U) ) (! (let (($generated@@118 ($generated@@72 (type $generated@@117))))
(= (type ($generated@@88 $generated@@116 $generated@@117)) $generated@@118))
 :pattern ( ($generated@@88 $generated@@116 $generated@@117))
))) (= ($generated@@1 $generated@@83) 13)) (forall (($generated@@119 T@U) ($generated@@120 T@U) ($generated@@121 T@U) ) (! (= (type ($generated@@89 $generated@@119 $generated@@120 $generated@@121)) $generated@@83)
 :pattern ( ($generated@@89 $generated@@119 $generated@@120 $generated@@121))
))) (forall (($generated@@122 T@U) ($generated@@123 T@U) ($generated@@124 T@U) ) (! (let (($generated@@125 ($generated@@72 (type $generated@@123))))
 (=> (= (type $generated@@124) $generated@@125) (= ($generated@@88 ($generated@@89 $generated@@122 $generated@@123 $generated@@124) $generated@@123) $generated@@124)))
 :weight 0
))) (and (forall (($generated@@126 T@U) ($generated@@127 T@U) ($generated@@128 T@U) ($generated@@129 T@U) ) (!  (or (= $generated@@128 $generated@@129) (= ($generated@@88 ($generated@@89 $generated@@127 $generated@@128 $generated@@126) $generated@@129) ($generated@@88 $generated@@127 $generated@@129)))
 :weight 0
)) (forall (($generated@@130 T@U) ($generated@@131 T@U) ($generated@@132 T@U) ($generated@@133 T@U) ) (!  (or true (= ($generated@@88 ($generated@@89 $generated@@131 $generated@@132 $generated@@130) $generated@@133) ($generated@@88 $generated@@131 $generated@@133)))
 :weight 0
)))) (forall (($generated@@134 Int) ) (! (= (type ($generated@@80 $generated@@134)) $generated@@69)
 :pattern ( ($generated@@80 $generated@@134))
))))
(assert (forall (($generated@@135 T@U) ($generated@@136 T@U) ) (!  (=> (and (= (type $generated@@135) $generated@@2) (= (type $generated@@136) ($generated@@81 $generated@@82 $generated@@83))) ($generated@@79 $generated@@135 ($generated@@80 0) $generated@@136))
 :pattern ( ($generated@@79 $generated@@135 ($generated@@80 0) $generated@@136))
)))
(assert  (and (and (forall (($generated@@142 T@U) ) (! (= (type ($generated@@138 $generated@@142)) $generated@@69)
 :pattern ( ($generated@@138 $generated@@142))
)) (= (type $generated@@139) $generated@@82)) (forall (($generated@@143 T@U) ) (! (= (type ($generated@@140 $generated@@143)) $generated@@69)
 :pattern ( ($generated@@140 $generated@@143))
))))
(assert (forall (($generated@@144 T@U) ($generated@@145 T@U) ) (!  (=> (and (and (= (type $generated@@144) $generated@@69) (= (type $generated@@145) $generated@@82)) (and (not (= $generated@@145 $generated@@139)) (= ($generated@@140 $generated@@145) ($generated@@138 $generated@@144)))) ($generated@@141 ($generated@@8 ($generated@@137 $generated@@145)) $generated@@46))
 :pattern ( ($generated@@137 $generated@@145) ($generated@@138 $generated@@144))
)))
(assert (forall (($generated@@147 T@U) ($generated@@148 T@U) ) (!  (=> (and (and (= (type $generated@@147) ($generated@@81 $generated@@82 $generated@@83)) (= (type $generated@@148) ($generated@@81 $generated@@82 $generated@@83))) ($generated@@146 $generated@@147 $generated@@148)) (forall (($generated@@149 T@U) ) (!  (=> (and (= (type $generated@@149) $generated@@82) ($generated@@0 ($generated@@88 ($generated@@86 $generated@@147 $generated@@149) $generated@@60))) ($generated@@0 ($generated@@88 ($generated@@86 $generated@@148 $generated@@149) $generated@@60)))
 :pattern ( ($generated@@88 ($generated@@86 $generated@@148 $generated@@149) $generated@@60))
)))
 :pattern ( ($generated@@146 $generated@@147 $generated@@148))
)))
(assert (forall (($generated@@150 T@U) ($generated@@151 T@U) ($generated@@152 T@U) ) (!  (=> (and (and (= (type $generated@@150) $generated@@69) (= (type $generated@@151) $generated@@82)) (= (type $generated@@152) ($generated@@81 $generated@@82 $generated@@83))) (= ($generated@@79 $generated@@151 ($generated@@138 $generated@@150) $generated@@152)  (or (= $generated@@151 $generated@@139) ($generated@@0 ($generated@@88 ($generated@@86 $generated@@152 $generated@@151) $generated@@60)))))
 :pattern ( ($generated@@79 $generated@@151 ($generated@@138 $generated@@150) $generated@@152))
)))
(assert (forall (($generated@@154 T@U) ) (! (= (type ($generated@@153 $generated@@154)) $generated@@69)
 :pattern ( ($generated@@153 $generated@@154))
)))
(assert (forall (($generated@@155 T@U) ($generated@@156 T@U) ($generated@@157 T@U) ) (!  (=> (and (and (= (type $generated@@155) $generated@@69) (= (type $generated@@156) $generated@@82)) (= (type $generated@@157) ($generated@@81 $generated@@82 $generated@@83))) (= ($generated@@79 $generated@@156 ($generated@@153 $generated@@155) $generated@@157)  (or (= $generated@@156 $generated@@139) ($generated@@0 ($generated@@88 ($generated@@86 $generated@@157 $generated@@156) $generated@@60)))))
 :pattern ( ($generated@@79 $generated@@156 ($generated@@153 $generated@@155) $generated@@157))
)))
(assert (forall (($generated@@159 T@U) ($generated@@160 T@U) ($generated@@161 T@U) ) (!  (=> (and (and (and (= (type $generated@@159) $generated@@69) (= (type $generated@@160) ($generated@@81 $generated@@82 $generated@@83))) (= (type $generated@@161) $generated@@82)) (and (and ($generated@@158 $generated@@160) (and (not (= $generated@@161 $generated@@139)) (= ($generated@@140 $generated@@161) ($generated@@138 $generated@@159)))) ($generated@@0 ($generated@@88 ($generated@@86 $generated@@160 $generated@@161) $generated@@60)))) ($generated@@79 ($generated@@8 ($generated@@137 $generated@@161)) $generated@@46 $generated@@160))
 :pattern ( ($generated@@137 $generated@@161) ($generated@@88 ($generated@@86 $generated@@160 $generated@@161) $generated@@60) ($generated@@138 $generated@@159))
)))
(assert (forall (($generated@@162 T@U) ) (!  (=> (= (type $generated@@162) $generated@@2) ($generated@@141 $generated@@162 ($generated@@80 0)))
 :pattern ( ($generated@@141 $generated@@162 ($generated@@80 0)))
)))
(assert (forall (($generated@@164 T@U) ) (! (= (type ($generated@@163 $generated@@164)) $generated@@69)
 :pattern ( ($generated@@163 $generated@@164))
)))
(assert (forall (($generated@@165 T@U) ($generated@@166 T@U) ($generated@@167 T@U) ) (!  (=> (and (and (= (type $generated@@165) $generated@@69) (= (type $generated@@166) $generated@@82)) (= (type $generated@@167) ($generated@@81 $generated@@82 $generated@@83))) (= ($generated@@79 $generated@@166 ($generated@@163 $generated@@165) $generated@@167) ($generated@@79 $generated@@166 ($generated@@138 $generated@@165) $generated@@167)))
 :pattern ( ($generated@@79 $generated@@166 ($generated@@163 $generated@@165) $generated@@167))
)))
(assert  (and (= ($generated@@1 $generated@@170) 14) (forall (($generated@@171 T@U) ($generated@@172 T@U) ) (! (= (type ($generated@@169 $generated@@171 $generated@@172)) $generated@@69)
 :pattern ( ($generated@@169 $generated@@171 $generated@@172))
))))
(assert (forall (($generated@@173 T@U) ($generated@@174 T@U) ($generated@@175 T@U) ) (!  (=> (and (and (and (= (type $generated@@173) $generated@@69) (= (type $generated@@174) $generated@@69)) (= (type $generated@@175) $generated@@170)) ($generated@@141 $generated@@175 ($generated@@169 $generated@@173 $generated@@174))) ($generated@@168 $generated@@175))
 :pattern ( ($generated@@168 $generated@@175) ($generated@@141 $generated@@175 ($generated@@169 $generated@@173 $generated@@174)))
)))
(assert  (and (and (= ($generated@@1 $generated@@179) 15) (forall (($generated@@180 T@U) ) (! (= (type ($generated@@177 $generated@@180)) $generated@@179)
 :pattern ( ($generated@@177 $generated@@180))
))) (forall (($generated@@181 T@U) ) (! (= (type ($generated@@178 $generated@@181)) $generated@@179)
 :pattern ( ($generated@@178 $generated@@181))
))))
(assert (forall (($generated@@182 T@U) ($generated@@183 T@U) ) (!  (=> (and (and (= (type $generated@@182) $generated@@170) (= (type $generated@@183) $generated@@170)) true) (= ($generated@@176 $generated@@182 $generated@@183)  (and (= ($generated@@177 $generated@@182) ($generated@@177 $generated@@183)) (= ($generated@@178 $generated@@182) ($generated@@178 $generated@@183)))))
 :pattern ( ($generated@@176 $generated@@182 $generated@@183))
)))
(assert (forall (($generated@@186 T@U) ) (! (= (type ($generated@@184 $generated@@186)) $generated@@69)
 :pattern ( ($generated@@184 $generated@@186))
)))
(assert (forall (($generated@@187 T@U) ($generated@@188 T@U) ) (!  (=> (and (and (= (type $generated@@187) ($generated@@81 $generated@@179 $generated@@2)) (= (type $generated@@188) $generated@@69)) ($generated@@141 $generated@@187 ($generated@@184 $generated@@188))) ($generated@@185 $generated@@187))
 :pattern ( ($generated@@141 $generated@@187 ($generated@@184 $generated@@188)))
)))
(assert  (and (and (and (and (and (and (and (forall (($generated@@195 T@T) ($generated@@196 T@T) ) (= ($generated@@1 ($generated@@191 $generated@@195 $generated@@196)) 16)) (forall (($generated@@197 T@T) ($generated@@198 T@T) ) (! (= ($generated@@192 ($generated@@191 $generated@@197 $generated@@198)) $generated@@197)
 :pattern ( ($generated@@191 $generated@@197 $generated@@198))
))) (forall (($generated@@199 T@T) ($generated@@200 T@T) ) (! (= ($generated@@193 ($generated@@191 $generated@@199 $generated@@200)) $generated@@200)
 :pattern ( ($generated@@191 $generated@@199 $generated@@200))
))) (forall (($generated@@201 T@U) ($generated@@202 T@U) ($generated@@203 T@U) ) (! (let (($generated@@204 ($generated@@193 (type $generated@@201))))
(= (type ($generated@@189 $generated@@201 $generated@@202 $generated@@203)) $generated@@204))
 :pattern ( ($generated@@189 $generated@@201 $generated@@202 $generated@@203))
))) (forall (($generated@@205 T@U) ($generated@@206 T@U) ($generated@@207 T@U) ($generated@@208 T@U) ) (! (let (($generated@@209 (type $generated@@208)))
(let (($generated@@210 (type $generated@@206)))
(= (type ($generated@@194 $generated@@205 $generated@@206 $generated@@207 $generated@@208)) ($generated@@191 $generated@@210 $generated@@209))))
 :pattern ( ($generated@@194 $generated@@205 $generated@@206 $generated@@207 $generated@@208))
))) (forall (($generated@@211 T@U) ($generated@@212 T@U) ($generated@@213 T@U) ($generated@@214 T@U) ) (! (let (($generated@@215 ($generated@@193 (type $generated@@211))))
 (=> (= (type $generated@@214) $generated@@215) (= ($generated@@189 ($generated@@194 $generated@@211 $generated@@212 $generated@@213 $generated@@214) $generated@@212 $generated@@213) $generated@@214)))
 :weight 0
))) (and (and (forall (($generated@@216 T@U) ($generated@@217 T@U) ($generated@@218 T@U) ($generated@@219 T@U) ($generated@@220 T@U) ($generated@@221 T@U) ) (!  (or (= $generated@@218 $generated@@220) (= ($generated@@189 ($generated@@194 $generated@@217 $generated@@218 $generated@@219 $generated@@216) $generated@@220 $generated@@221) ($generated@@189 $generated@@217 $generated@@220 $generated@@221)))
 :weight 0
)) (forall (($generated@@222 T@U) ($generated@@223 T@U) ($generated@@224 T@U) ($generated@@225 T@U) ($generated@@226 T@U) ($generated@@227 T@U) ) (!  (or (= $generated@@225 $generated@@227) (= ($generated@@189 ($generated@@194 $generated@@223 $generated@@224 $generated@@225 $generated@@222) $generated@@226 $generated@@227) ($generated@@189 $generated@@223 $generated@@226 $generated@@227)))
 :weight 0
))) (forall (($generated@@228 T@U) ($generated@@229 T@U) ($generated@@230 T@U) ($generated@@231 T@U) ($generated@@232 T@U) ($generated@@233 T@U) ) (!  (or true (= ($generated@@189 ($generated@@194 $generated@@229 $generated@@230 $generated@@231 $generated@@228) $generated@@232 $generated@@233) ($generated@@189 $generated@@229 $generated@@232 $generated@@233)))
 :weight 0
)))) (forall (($generated@@234 T@U) ($generated@@235 T@U) ($generated@@236 T@U) ($generated@@237 Bool) ) (! (= (type ($generated@@190 $generated@@234 $generated@@235 $generated@@236 $generated@@237)) ($generated@@191 $generated@@82 $generated@@4))
 :pattern ( ($generated@@190 $generated@@234 $generated@@235 $generated@@236 $generated@@237))
))))
(assert (forall (($generated@@238 T@U) ($generated@@239 T@U) ($generated@@240 T@U) ($generated@@241 Bool) ($generated@@242 T@U) ($generated@@243 T@U) ) (! (let (($generated@@244 ($generated@@72 (type $generated@@243))))
 (=> (and (and (and (and (= (type $generated@@238) $generated@@82) (= (type $generated@@239) ($generated@@81 $generated@@82 $generated@@83))) (= (type $generated@@240) ($generated@@71 $generated@@4))) (= (type $generated@@242) $generated@@82)) (= (type $generated@@243) ($generated@@71 $generated@@244))) (= ($generated@@0 ($generated@@189 ($generated@@190 $generated@@238 $generated@@239 $generated@@240 $generated@@241) $generated@@242 $generated@@243))  (=> (and (not (= $generated@@242 $generated@@238)) ($generated@@0 ($generated@@88 ($generated@@86 $generated@@239 $generated@@242) $generated@@240))) $generated@@241))))
 :pattern ( ($generated@@189 ($generated@@190 $generated@@238 $generated@@239 $generated@@240 $generated@@241) $generated@@242 $generated@@243))
)))
(assert (forall (($generated@@247 T@U) ($generated@@248 T@U) ) (! (= (type ($generated@@245 $generated@@247 $generated@@248)) $generated@@170)
 :pattern ( ($generated@@245 $generated@@247 $generated@@248))
)))
(assert (forall (($generated@@249 T@U) ($generated@@250 T@U) ($generated@@251 T@U) ($generated@@252 T@U) ) (!  (=> (and (and (and (= (type $generated@@249) $generated@@69) (= (type $generated@@250) $generated@@69)) (= (type $generated@@251) $generated@@179)) (= (type $generated@@252) $generated@@179)) (= ($generated@@141 ($generated@@245 $generated@@251 $generated@@252) ($generated@@169 $generated@@249 $generated@@250))  (and ($generated@@246 $generated@@251 $generated@@249) ($generated@@246 $generated@@252 $generated@@250))))
 :pattern ( ($generated@@141 ($generated@@245 $generated@@251 $generated@@252) ($generated@@169 $generated@@249 $generated@@250)))
)))
(assert (forall (($generated@@253 T@U) ($generated@@254 T@U) ) (!  (=> (and (= (type $generated@@253) $generated@@170) (= (type $generated@@254) $generated@@170)) (= ($generated@@176 $generated@@253 $generated@@254) (= $generated@@253 $generated@@254)))
 :pattern ( ($generated@@176 $generated@@253 $generated@@254))
)))
(assert (forall (($generated@@256 T@U) ) (! (= (type ($generated@@255 $generated@@256)) $generated@@69)
 :pattern ( ($generated@@255 $generated@@256))
)))
(assert (forall (($generated@@257 T@U) ($generated@@258 T@U) ) (!  (=> (and (= (type $generated@@257) ($generated@@81 $generated@@179 $generated@@4)) (= (type $generated@@258) $generated@@69)) (= ($generated@@141 $generated@@257 ($generated@@255 $generated@@258)) (forall (($generated@@259 T@U) ) (!  (=> (and (= (type $generated@@259) $generated@@179) ($generated@@0 ($generated@@86 $generated@@257 $generated@@259))) ($generated@@246 $generated@@259 $generated@@258))
 :pattern ( ($generated@@86 $generated@@257 $generated@@259))
))))
 :pattern ( ($generated@@141 $generated@@257 ($generated@@255 $generated@@258)))
)))
(assert (forall (($generated@@261 T@U) ) (! (= (type ($generated@@260 $generated@@261)) $generated@@69)
 :pattern ( ($generated@@260 $generated@@261))
)))
(assert (forall (($generated@@262 T@U) ($generated@@263 T@U) ) (!  (=> (and (= (type $generated@@262) ($generated@@81 $generated@@179 $generated@@4)) (= (type $generated@@263) $generated@@69)) (= ($generated@@141 $generated@@262 ($generated@@260 $generated@@263)) (forall (($generated@@264 T@U) ) (!  (=> (and (= (type $generated@@264) $generated@@179) ($generated@@0 ($generated@@86 $generated@@262 $generated@@264))) ($generated@@246 $generated@@264 $generated@@263))
 :pattern ( ($generated@@86 $generated@@262 $generated@@264))
))))
 :pattern ( ($generated@@141 $generated@@262 ($generated@@260 $generated@@263)))
)))
(assert (forall (($generated@@266 Int) ) (! (= ($generated@@265 $generated@@266) $generated@@266)
 :pattern ( ($generated@@265 $generated@@266))
)))
(assert (forall (($generated@@268 T@U) ) (! (let (($generated@@269 (type $generated@@268)))
(= (type ($generated@@267 $generated@@268)) $generated@@269))
 :pattern ( ($generated@@267 $generated@@268))
)))
(assert (forall (($generated@@270 T@U) ) (! (= ($generated@@267 $generated@@270) $generated@@270)
 :pattern ( ($generated@@267 $generated@@270))
)))
(assert (forall (($generated@@272 T@U) ($generated@@273 T@U) ($generated@@274 T@U) ($generated@@275 T@U) ($generated@@276 T@U) ) (!  (=> (and (and (and (and (and (= (type $generated@@272) $generated@@69) (= (type $generated@@273) $generated@@69)) (= (type $generated@@274) $generated@@179)) (= (type $generated@@275) $generated@@179)) (= (type $generated@@276) ($generated@@81 $generated@@82 $generated@@83))) ($generated@@158 $generated@@276)) (= ($generated@@79 ($generated@@245 $generated@@274 $generated@@275) ($generated@@169 $generated@@272 $generated@@273) $generated@@276)  (and ($generated@@271 $generated@@274 $generated@@272 $generated@@276) ($generated@@271 $generated@@275 $generated@@273 $generated@@276))))
 :pattern ( ($generated@@79 ($generated@@245 $generated@@274 $generated@@275) ($generated@@169 $generated@@272 $generated@@273) $generated@@276))
)))
(assert (forall (($generated@@278 T@U) ) (! (= (type ($generated@@277 $generated@@278)) $generated@@73)
 :pattern ( ($generated@@277 $generated@@278))
)))
(assert (forall (($generated@@279 T@U) ) (!  (=> (= (type $generated@@279) $generated@@170) (= ($generated@@168 $generated@@279) (= ($generated@@277 $generated@@279) $generated@@63)))
 :pattern ( ($generated@@168 $generated@@279))
)))
(assert (forall (($generated@@280 T@U) ) (!  (=> (and (= (type $generated@@280) $generated@@170) ($generated@@168 $generated@@280)) (exists (($generated@@281 T@U) ($generated@@282 T@U) ) (!  (and (and (= (type $generated@@281) $generated@@179) (= (type $generated@@282) $generated@@179)) (= $generated@@280 ($generated@@245 $generated@@281 $generated@@282)))
 :no-pattern (type $generated@@281)
 :no-pattern (type $generated@@282)
 :no-pattern ($generated $generated@@281)
 :no-pattern ($generated@@0 $generated@@281)
 :no-pattern ($generated $generated@@282)
 :no-pattern ($generated@@0 $generated@@282)
)))
 :pattern ( ($generated@@168 $generated@@280))
)))
(assert  (and (and (forall (($generated@@287 T@T) ) (= ($generated@@1 ($generated@@285 $generated@@287)) 17)) (forall (($generated@@288 T@T) ) (! (= ($generated@@286 ($generated@@285 $generated@@288)) $generated@@288)
 :pattern ( ($generated@@285 $generated@@288))
))) (forall (($generated@@289 T@T) ) (! (= (type ($generated@@283 $generated@@289)) ($generated@@285 $generated@@289))
 :pattern ( ($generated@@283 $generated@@289))
))))
(assert (forall (($generated@@290 T@T) ) (! (= ($generated@@284 ($generated@@283 $generated@@290)) 0)
 :pattern ( ($generated@@283 $generated@@290))
)))
(assert (forall (($generated@@291 T@U) ($generated@@292 T@U) ) (!  (=> (and (= (type $generated@@291) $generated@@69) (= (type $generated@@292) $generated@@82)) (= ($generated@@141 $generated@@292 ($generated@@163 $generated@@291))  (and ($generated@@141 $generated@@292 ($generated@@138 $generated@@291)) (not (= $generated@@292 $generated@@139)))))
 :pattern ( ($generated@@141 $generated@@292 ($generated@@163 $generated@@291)))
)))
(assert (forall (($generated@@294 T@U) ) (! (= (type ($generated@@293 $generated@@294)) $generated@@179)
 :pattern ( ($generated@@293 $generated@@294))
)))
(assert (forall (($generated@@295 T@U) ($generated@@296 T@U) ($generated@@297 T@U) ) (!  (=> (and (= (type $generated@@296) $generated@@69) (= (type $generated@@297) ($generated@@81 $generated@@82 $generated@@83))) (= ($generated@@271 ($generated@@293 $generated@@295) $generated@@296 $generated@@297) ($generated@@79 $generated@@295 $generated@@296 $generated@@297)))
 :pattern ( ($generated@@271 ($generated@@293 $generated@@295) $generated@@296 $generated@@297))
)))
(assert (forall (($generated@@298 T@U) ($generated@@299 T@U) ($generated@@300 T@U) ($generated@@301 T@U) ) (!  (=> (and (and (and (and (and (= (type $generated@@298) ($generated@@81 $generated@@82 $generated@@83)) (= (type $generated@@299) ($generated@@81 $generated@@82 $generated@@83))) (= (type $generated@@300) $generated@@179)) (= (type $generated@@301) $generated@@69)) ($generated@@146 $generated@@298 $generated@@299)) ($generated@@271 $generated@@300 $generated@@301 $generated@@298)) ($generated@@271 $generated@@300 $generated@@301 $generated@@299))
 :pattern ( ($generated@@146 $generated@@298 $generated@@299) ($generated@@271 $generated@@300 $generated@@301 $generated@@298))
)))
(assert (forall (($generated@@302 T@U) ($generated@@303 T@U) ($generated@@304 T@U) ($generated@@305 T@U) ) (!  (=> (and (and (and (and (= (type $generated@@302) ($generated@@81 $generated@@82 $generated@@83)) (= (type $generated@@303) ($generated@@81 $generated@@82 $generated@@83))) (= (type $generated@@305) $generated@@69)) ($generated@@146 $generated@@302 $generated@@303)) ($generated@@79 $generated@@304 $generated@@305 $generated@@302)) ($generated@@79 $generated@@304 $generated@@305 $generated@@303))
 :pattern ( ($generated@@146 $generated@@302 $generated@@303) ($generated@@79 $generated@@304 $generated@@305 $generated@@302))
)))
(assert (forall (($generated@@308 T@T) ) (! (= (type ($generated@@307 $generated@@308)) ($generated@@81 $generated@@308 $generated@@2))
 :pattern ( ($generated@@307 $generated@@308))
)))
(assert (forall (($generated@@309 T@U) ) (! (let (($generated@@310 ($generated@@84 (type $generated@@309))))
 (=> (= (type $generated@@309) ($generated@@81 $generated@@310 $generated@@2)) (and (= (= ($generated@@306 $generated@@309) 0) (= $generated@@309 ($generated@@307 $generated@@310))) (=> (not (= ($generated@@306 $generated@@309) 0)) (exists (($generated@@311 T@U) ) (!  (and (= (type $generated@@311) $generated@@310) (< 0 ($generated ($generated@@86 $generated@@309 $generated@@311))))
 :no-pattern (type $generated@@311)
 :no-pattern ($generated $generated@@311)
 :no-pattern ($generated@@0 $generated@@311)
))))))
 :pattern ( ($generated@@306 $generated@@309))
)))
(assert (forall (($generated@@313 T@U) ) (! (= (type ($generated@@312 $generated@@313)) $generated@@74)
 :pattern ( ($generated@@312 $generated@@313))
)))
(assert (forall (($generated@@314 T@U) ) (!  (=> (= (type $generated@@314) $generated@@69) (and (= ($generated@@77 ($generated@@138 $generated@@314)) $generated@@61) (= ($generated@@312 ($generated@@138 $generated@@314)) $generated@@66)))
 :pattern ( ($generated@@138 $generated@@314))
)))
(assert (forall (($generated@@315 T@U) ) (!  (=> (= (type $generated@@315) $generated@@69) (and (= ($generated@@77 ($generated@@163 $generated@@315)) $generated@@62) (= ($generated@@312 ($generated@@163 $generated@@315)) $generated@@66)))
 :pattern ( ($generated@@163 $generated@@315))
)))
(assert (forall (($generated@@316 T@U) ) (!  (=> (= (type $generated@@316) $generated@@69) (and (= ($generated@@77 ($generated@@153 $generated@@316)) $generated@@65) (= ($generated@@312 ($generated@@153 $generated@@316)) $generated@@68)))
 :pattern ( ($generated@@153 $generated@@316))
)))
(assert  (and (and (and (and (forall (($generated@@322 T@T) ($generated@@323 T@T) ) (= ($generated@@1 ($generated@@319 $generated@@322 $generated@@323)) 18)) (forall (($generated@@324 T@T) ($generated@@325 T@T) ) (! (= ($generated@@320 ($generated@@319 $generated@@324 $generated@@325)) $generated@@324)
 :pattern ( ($generated@@319 $generated@@324 $generated@@325))
))) (forall (($generated@@326 T@T) ($generated@@327 T@T) ) (! (= ($generated@@321 ($generated@@319 $generated@@326 $generated@@327)) $generated@@327)
 :pattern ( ($generated@@319 $generated@@326 $generated@@327))
))) (forall (($generated@@328 T@U) ) (! (let (($generated@@329 ($generated@@320 (type $generated@@328))))
(= (type ($generated@@317 $generated@@328)) ($generated@@81 $generated@@329 $generated@@4)))
 :pattern ( ($generated@@317 $generated@@328))
))) (forall (($generated@@330 T@T) ($generated@@331 T@T) ) (! (= (type ($generated@@318 $generated@@330 $generated@@331)) ($generated@@319 $generated@@330 $generated@@331))
 :pattern ( ($generated@@318 $generated@@330 $generated@@331))
))))
(assert (forall (($generated@@332 T@U) ($generated@@333 T@T) ) (! (let (($generated@@334 (type $generated@@332)))
 (not ($generated@@0 ($generated@@86 ($generated@@317 ($generated@@318 $generated@@334 $generated@@333)) $generated@@332))))
 :pattern ( (let (($generated@@334 (type $generated@@332)))
($generated@@86 ($generated@@317 ($generated@@318 $generated@@334 $generated@@333)) $generated@@332)))
)))
(assert  (and (and (and (and (forall (($generated@@340 T@T) ($generated@@341 T@T) ) (= ($generated@@1 ($generated@@337 $generated@@340 $generated@@341)) 19)) (forall (($generated@@342 T@T) ($generated@@343 T@T) ) (! (= ($generated@@338 ($generated@@337 $generated@@342 $generated@@343)) $generated@@342)
 :pattern ( ($generated@@337 $generated@@342 $generated@@343))
))) (forall (($generated@@344 T@T) ($generated@@345 T@T) ) (! (= ($generated@@339 ($generated@@337 $generated@@344 $generated@@345)) $generated@@345)
 :pattern ( ($generated@@337 $generated@@344 $generated@@345))
))) (forall (($generated@@346 T@U) ) (! (let (($generated@@347 ($generated@@338 (type $generated@@346))))
(= (type ($generated@@335 $generated@@346)) ($generated@@81 $generated@@347 $generated@@4)))
 :pattern ( ($generated@@335 $generated@@346))
))) (forall (($generated@@348 T@T) ($generated@@349 T@T) ) (! (= (type ($generated@@336 $generated@@348 $generated@@349)) ($generated@@337 $generated@@348 $generated@@349))
 :pattern ( ($generated@@336 $generated@@348 $generated@@349))
))))
(assert (forall (($generated@@350 T@U) ($generated@@351 T@T) ) (! (let (($generated@@352 (type $generated@@350)))
 (not ($generated@@0 ($generated@@86 ($generated@@335 ($generated@@336 $generated@@352 $generated@@351)) $generated@@350))))
 :pattern ( (let (($generated@@352 (type $generated@@350)))
($generated@@86 ($generated@@335 ($generated@@336 $generated@@352 $generated@@351)) $generated@@350)))
)))
(assert (forall (($generated@@353 T@U) ) (! (let (($generated@@354 ($generated@@84 (type $generated@@353))))
 (=> (= (type $generated@@353) ($generated@@81 $generated@@354 $generated@@2)) (= ($generated@@185 $generated@@353) (forall (($generated@@355 T@U) ) (!  (=> (= (type $generated@@355) $generated@@354) (and (<= 0 ($generated ($generated@@86 $generated@@353 $generated@@355))) (<= ($generated ($generated@@86 $generated@@353 $generated@@355)) ($generated@@306 $generated@@353))))
 :pattern ( ($generated@@86 $generated@@353 $generated@@355))
)))))
 :pattern ( ($generated@@185 $generated@@353))
)))
(assert (forall (($generated@@356 T@U) ($generated@@357 T@U) ) (!  (=> (and (= (type $generated@@356) $generated@@69) (= (type $generated@@357) $generated@@82)) (= ($generated@@141 $generated@@357 ($generated@@138 $generated@@356))  (or (= $generated@@357 $generated@@139) (= ($generated@@140 $generated@@357) ($generated@@138 $generated@@356)))))
 :pattern ( ($generated@@141 $generated@@357 ($generated@@138 $generated@@356)))
)))
(assert (forall (($generated@@358 T@U) ($generated@@359 T@U) ) (!  (=> (and (= (type $generated@@358) $generated@@69) (= (type $generated@@359) $generated@@82)) (= ($generated@@141 $generated@@359 ($generated@@153 $generated@@358))  (or (= $generated@@359 $generated@@139) (= ($generated@@140 $generated@@359) ($generated@@153 $generated@@358)))))
 :pattern ( ($generated@@141 $generated@@359 ($generated@@153 $generated@@358)))
)))
(assert (forall (($generated@@360 T@U) ) (! (let (($generated@@361 ($generated@@321 (type $generated@@360))))
(let (($generated@@362 ($generated@@320 (type $generated@@360))))
 (=> (= (type $generated@@360) ($generated@@319 $generated@@362 $generated@@361)) (or (= $generated@@360 ($generated@@318 $generated@@362 $generated@@361)) (exists (($generated@@363 T@U) ) (!  (and (= (type $generated@@363) $generated@@362) ($generated@@0 ($generated@@86 ($generated@@317 $generated@@360) $generated@@363)))
 :no-pattern (type $generated@@363)
 :no-pattern ($generated $generated@@363)
 :no-pattern ($generated@@0 $generated@@363)
))))))
 :pattern ( ($generated@@317 $generated@@360))
)))
(assert (forall (($generated@@365 T@U) ) (! (let (($generated@@366 ($generated@@321 (type $generated@@365))))
(= (type ($generated@@364 $generated@@365)) ($generated@@81 $generated@@366 $generated@@4)))
 :pattern ( ($generated@@364 $generated@@365))
)))
(assert (forall (($generated@@367 T@U) ) (! (let (($generated@@368 ($generated@@321 (type $generated@@367))))
(let (($generated@@369 ($generated@@320 (type $generated@@367))))
 (=> (= (type $generated@@367) ($generated@@319 $generated@@369 $generated@@368)) (or (= $generated@@367 ($generated@@318 $generated@@369 $generated@@368)) (exists (($generated@@370 T@U) ) (!  (and (= (type $generated@@370) $generated@@368) ($generated@@0 ($generated@@86 ($generated@@364 $generated@@367) $generated@@370)))
 :no-pattern (type $generated@@370)
 :no-pattern ($generated $generated@@370)
 :no-pattern ($generated@@0 $generated@@370)
))))))
 :pattern ( ($generated@@364 $generated@@367))
)))
(assert (forall (($generated@@371 T@U) ) (! (let (($generated@@372 ($generated@@339 (type $generated@@371))))
(let (($generated@@373 ($generated@@338 (type $generated@@371))))
 (=> (= (type $generated@@371) ($generated@@337 $generated@@373 $generated@@372)) (or (= $generated@@371 ($generated@@336 $generated@@373 $generated@@372)) (exists (($generated@@374 T@U) ) (!  (and (= (type $generated@@374) $generated@@373) ($generated@@0 ($generated@@86 ($generated@@335 $generated@@371) $generated@@374)))
 :no-pattern (type $generated@@374)
 :no-pattern ($generated $generated@@374)
 :no-pattern ($generated@@0 $generated@@374)
))))))
 :pattern ( ($generated@@335 $generated@@371))
)))
(assert (forall (($generated@@376 T@U) ) (! (let (($generated@@377 ($generated@@339 (type $generated@@376))))
(= (type ($generated@@375 $generated@@376)) ($generated@@81 $generated@@377 $generated@@4)))
 :pattern ( ($generated@@375 $generated@@376))
)))
(assert (forall (($generated@@378 T@U) ) (! (let (($generated@@379 ($generated@@339 (type $generated@@378))))
(let (($generated@@380 ($generated@@338 (type $generated@@378))))
 (=> (= (type $generated@@378) ($generated@@337 $generated@@380 $generated@@379)) (or (= $generated@@378 ($generated@@336 $generated@@380 $generated@@379)) (exists (($generated@@381 T@U) ) (!  (and (= (type $generated@@381) $generated@@379) ($generated@@0 ($generated@@86 ($generated@@375 $generated@@378) $generated@@381)))
 :no-pattern (type $generated@@381)
 :no-pattern ($generated $generated@@381)
 :no-pattern ($generated@@0 $generated@@381)
))))))
 :pattern ( ($generated@@375 $generated@@378))
)))
(assert (forall (($generated@@382 T@U) ($generated@@383 T@U) ) (!  (=> (and (= (type $generated@@382) ($generated@@81 $generated@@179 $generated@@2)) (= (type $generated@@383) $generated@@69)) (= ($generated@@141 $generated@@382 ($generated@@184 $generated@@383)) (forall (($generated@@384 T@U) ) (!  (=> (and (= (type $generated@@384) $generated@@179) (< 0 ($generated ($generated@@86 $generated@@382 $generated@@384)))) ($generated@@246 $generated@@384 $generated@@383))
 :pattern ( ($generated@@86 $generated@@382 $generated@@384))
))))
 :pattern ( ($generated@@141 $generated@@382 ($generated@@184 $generated@@383)))
)))
(assert (forall (($generated@@385 T@U) ($generated@@386 T@U) ($generated@@387 T@U) ) (!  (=> (and (and (= (type $generated@@385) ($generated@@81 $generated@@179 $generated@@4)) (= (type $generated@@386) $generated@@69)) (= (type $generated@@387) ($generated@@81 $generated@@82 $generated@@83))) (= ($generated@@79 $generated@@385 ($generated@@255 $generated@@386) $generated@@387) (forall (($generated@@388 T@U) ) (!  (=> (and (= (type $generated@@388) $generated@@179) ($generated@@0 ($generated@@86 $generated@@385 $generated@@388))) ($generated@@271 $generated@@388 $generated@@386 $generated@@387))
 :pattern ( ($generated@@86 $generated@@385 $generated@@388))
))))
 :pattern ( ($generated@@79 $generated@@385 ($generated@@255 $generated@@386) $generated@@387))
)))
(assert (forall (($generated@@389 T@U) ($generated@@390 T@U) ($generated@@391 T@U) ) (!  (=> (and (and (= (type $generated@@389) ($generated@@81 $generated@@179 $generated@@4)) (= (type $generated@@390) $generated@@69)) (= (type $generated@@391) ($generated@@81 $generated@@82 $generated@@83))) (= ($generated@@79 $generated@@389 ($generated@@260 $generated@@390) $generated@@391) (forall (($generated@@392 T@U) ) (!  (=> (and (= (type $generated@@392) $generated@@179) ($generated@@0 ($generated@@86 $generated@@389 $generated@@392))) ($generated@@271 $generated@@392 $generated@@390 $generated@@391))
 :pattern ( ($generated@@86 $generated@@389 $generated@@392))
))))
 :pattern ( ($generated@@79 $generated@@389 ($generated@@260 $generated@@390) $generated@@391))
)))
(assert (forall (($generated@@393 T@U) ) (! (let (($generated@@394 (type $generated@@393)))
(= ($generated ($generated@@86 ($generated@@307 $generated@@394) $generated@@393)) 0))
 :pattern ( (let (($generated@@394 (type $generated@@393)))
($generated@@86 ($generated@@307 $generated@@394) $generated@@393)))
)))
(assert  (and (and (forall (($generated@@398 T@U) ) (! (= (type ($generated@@395 $generated@@398)) ($generated@@81 $generated@@179 $generated@@4))
 :pattern ( ($generated@@395 $generated@@398))
)) (forall (($generated@@399 T@T) ($generated@@400 T@U) ) (! (= (type ($generated@@396 $generated@@399 $generated@@400)) $generated@@399)
 :pattern ( ($generated@@396 $generated@@399 $generated@@400))
))) (forall (($generated@@401 T@U) ) (! (let (($generated@@402 ($generated@@321 (type $generated@@401))))
(let (($generated@@403 ($generated@@320 (type $generated@@401))))
(= (type ($generated@@397 $generated@@401)) ($generated@@81 $generated@@403 $generated@@402))))
 :pattern ( ($generated@@397 $generated@@401))
))))
(assert (forall (($generated@@404 T@U) ($generated@@405 T@U) ) (!  (=> (and (= (type $generated@@404) ($generated@@319 $generated@@179 $generated@@179)) (= (type $generated@@405) $generated@@179)) (= ($generated@@0 ($generated@@86 ($generated@@395 $generated@@404) $generated@@405))  (and ($generated@@0 ($generated@@86 ($generated@@317 $generated@@404) ($generated@@177 ($generated@@396 $generated@@170 $generated@@405)))) (= ($generated@@86 ($generated@@397 $generated@@404) ($generated@@177 ($generated@@396 $generated@@170 $generated@@405))) ($generated@@178 ($generated@@396 $generated@@170 $generated@@405))))))
 :pattern ( ($generated@@86 ($generated@@395 $generated@@404) $generated@@405))
)))
(assert  (and (forall (($generated@@408 T@U) ) (! (= (type ($generated@@406 $generated@@408)) ($generated@@81 $generated@@179 $generated@@4))
 :pattern ( ($generated@@406 $generated@@408))
)) (forall (($generated@@409 T@U) ) (! (let (($generated@@410 ($generated@@339 (type $generated@@409))))
(let (($generated@@411 ($generated@@338 (type $generated@@409))))
(= (type ($generated@@407 $generated@@409)) ($generated@@81 $generated@@411 $generated@@410))))
 :pattern ( ($generated@@407 $generated@@409))
))))
(assert (forall (($generated@@412 T@U) ($generated@@413 T@U) ) (!  (=> (and (= (type $generated@@412) ($generated@@337 $generated@@179 $generated@@179)) (= (type $generated@@413) $generated@@179)) (= ($generated@@0 ($generated@@86 ($generated@@406 $generated@@412) $generated@@413))  (and ($generated@@0 ($generated@@86 ($generated@@335 $generated@@412) ($generated@@177 ($generated@@396 $generated@@170 $generated@@413)))) (= ($generated@@86 ($generated@@407 $generated@@412) ($generated@@177 ($generated@@396 $generated@@170 $generated@@413))) ($generated@@178 ($generated@@396 $generated@@170 $generated@@413))))))
 :pattern ( ($generated@@86 ($generated@@406 $generated@@412) $generated@@413))
)))
(assert (forall (($generated@@414 T@U) ($generated@@415 T@U) ) (! (let (($generated@@416 (type $generated@@415)))
(let (($generated@@417 ($generated@@320 (type $generated@@414))))
 (=> (= (type $generated@@414) ($generated@@319 $generated@@417 $generated@@416)) (= ($generated@@0 ($generated@@86 ($generated@@364 $generated@@414) $generated@@415)) (exists (($generated@@418 T@U) ) (!  (and (= (type $generated@@418) $generated@@417) (and ($generated@@0 ($generated@@86 ($generated@@317 $generated@@414) $generated@@418)) (= $generated@@415 ($generated@@86 ($generated@@397 $generated@@414) $generated@@418))))
 :pattern ( ($generated@@86 ($generated@@317 $generated@@414) $generated@@418))
 :pattern ( ($generated@@86 ($generated@@397 $generated@@414) $generated@@418))
))))))
 :pattern ( ($generated@@86 ($generated@@364 $generated@@414) $generated@@415))
)))
(assert (forall (($generated@@419 T@U) ($generated@@420 T@U) ) (! (let (($generated@@421 (type $generated@@420)))
(let (($generated@@422 ($generated@@338 (type $generated@@419))))
 (=> (= (type $generated@@419) ($generated@@337 $generated@@422 $generated@@421)) (= ($generated@@0 ($generated@@86 ($generated@@375 $generated@@419) $generated@@420)) (exists (($generated@@423 T@U) ) (!  (and (= (type $generated@@423) $generated@@422) (and ($generated@@0 ($generated@@86 ($generated@@335 $generated@@419) $generated@@423)) (= $generated@@420 ($generated@@86 ($generated@@407 $generated@@419) $generated@@423))))
 :pattern ( ($generated@@86 ($generated@@335 $generated@@419) $generated@@423))
 :pattern ( ($generated@@86 ($generated@@407 $generated@@419) $generated@@423))
))))))
 :pattern ( ($generated@@86 ($generated@@375 $generated@@419) $generated@@420))
)))
(assert (forall (($generated@@425 T@U) ($generated@@426 T@U) ) (! (= (type ($generated@@424 $generated@@425 $generated@@426)) $generated@@69)
 :pattern ( ($generated@@424 $generated@@425 $generated@@426))
)))
(assert (forall (($generated@@427 T@U) ($generated@@428 T@U) ($generated@@429 T@U) ($generated@@430 T@U) ) (!  (=> (and (and (and (= (type $generated@@427) ($generated@@319 $generated@@179 $generated@@179)) (= (type $generated@@428) $generated@@69)) (= (type $generated@@429) $generated@@69)) (= (type $generated@@430) ($generated@@81 $generated@@82 $generated@@83))) (= ($generated@@79 $generated@@427 ($generated@@424 $generated@@428 $generated@@429) $generated@@430) (forall (($generated@@431 T@U) ) (!  (=> (and (= (type $generated@@431) $generated@@179) ($generated@@0 ($generated@@86 ($generated@@317 $generated@@427) $generated@@431))) (and ($generated@@271 ($generated@@86 ($generated@@397 $generated@@427) $generated@@431) $generated@@429 $generated@@430) ($generated@@271 $generated@@431 $generated@@428 $generated@@430)))
 :pattern ( ($generated@@86 ($generated@@397 $generated@@427) $generated@@431))
 :pattern ( ($generated@@86 ($generated@@317 $generated@@427) $generated@@431))
))))
 :pattern ( ($generated@@79 $generated@@427 ($generated@@424 $generated@@428 $generated@@429) $generated@@430))
)))
(assert (forall (($generated@@433 T@U) ($generated@@434 T@U) ) (! (= (type ($generated@@432 $generated@@433 $generated@@434)) $generated@@69)
 :pattern ( ($generated@@432 $generated@@433 $generated@@434))
)))
(assert (forall (($generated@@435 T@U) ($generated@@436 T@U) ($generated@@437 T@U) ($generated@@438 T@U) ) (!  (=> (and (and (and (= (type $generated@@435) ($generated@@337 $generated@@179 $generated@@179)) (= (type $generated@@436) $generated@@69)) (= (type $generated@@437) $generated@@69)) (= (type $generated@@438) ($generated@@81 $generated@@82 $generated@@83))) (= ($generated@@79 $generated@@435 ($generated@@432 $generated@@436 $generated@@437) $generated@@438) (forall (($generated@@439 T@U) ) (!  (=> (and (= (type $generated@@439) $generated@@179) ($generated@@0 ($generated@@86 ($generated@@335 $generated@@435) $generated@@439))) (and ($generated@@271 ($generated@@86 ($generated@@407 $generated@@435) $generated@@439) $generated@@437 $generated@@438) ($generated@@271 $generated@@439 $generated@@436 $generated@@438)))
 :pattern ( ($generated@@86 ($generated@@407 $generated@@435) $generated@@439))
 :pattern ( ($generated@@86 ($generated@@335 $generated@@435) $generated@@439))
))))
 :pattern ( ($generated@@79 $generated@@435 ($generated@@432 $generated@@436 $generated@@437) $generated@@438))
)))
(assert (forall (($generated@@440 T@U) ($generated@@441 T@U) ($generated@@442 T@U) ) (!  (=> (and (and (and (and (= (type $generated@@440) ($generated@@81 $generated@@82 $generated@@83)) (= (type $generated@@441) ($generated@@81 $generated@@82 $generated@@83))) (= (type $generated@@442) ($generated@@81 $generated@@82 $generated@@83))) (not (= $generated@@440 $generated@@442))) (and ($generated@@146 $generated@@440 $generated@@441) ($generated@@146 $generated@@441 $generated@@442))) ($generated@@146 $generated@@440 $generated@@442))
 :pattern ( ($generated@@146 $generated@@440 $generated@@441) ($generated@@146 $generated@@441 $generated@@442))
)))
(assert (forall (($generated@@444 T@T) ) (! (= (type ($generated@@443 $generated@@444)) ($generated@@81 $generated@@444 $generated@@4))
 :pattern ( ($generated@@443 $generated@@444))
)))
(assert (forall (($generated@@445 T@U) ) (! (let (($generated@@446 ($generated@@339 (type $generated@@445))))
(let (($generated@@447 ($generated@@338 (type $generated@@445))))
 (=> (= (type $generated@@445) ($generated@@337 $generated@@447 $generated@@446)) (= (= $generated@@445 ($generated@@336 $generated@@447 $generated@@446)) (= ($generated@@335 $generated@@445) ($generated@@443 $generated@@447))))))
 :pattern ( ($generated@@335 $generated@@445))
)))
(assert (forall (($generated@@448 T@U) ) (! (let (($generated@@449 ($generated@@339 (type $generated@@448))))
(let (($generated@@450 ($generated@@338 (type $generated@@448))))
 (=> (= (type $generated@@448) ($generated@@337 $generated@@450 $generated@@449)) (= (= $generated@@448 ($generated@@336 $generated@@450 $generated@@449)) (= ($generated@@375 $generated@@448) ($generated@@443 $generated@@449))))))
 :pattern ( ($generated@@375 $generated@@448))
)))
(assert (forall (($generated@@451 T@U) ) (! (let (($generated@@452 ($generated@@339 (type $generated@@451))))
(let (($generated@@453 ($generated@@338 (type $generated@@451))))
 (=> (= (type $generated@@451) ($generated@@337 $generated@@453 $generated@@452)) (= (= $generated@@451 ($generated@@336 $generated@@453 $generated@@452)) (= ($generated@@406 $generated@@451) ($generated@@443 $generated@@179))))))
 :pattern ( ($generated@@406 $generated@@451))
)))
(assert (forall (($generated@@454 T@U) ) (! (let (($generated@@455 ($generated@@321 (type $generated@@454))))
(let (($generated@@456 ($generated@@320 (type $generated@@454))))
 (=> (= (type $generated@@454) ($generated@@319 $generated@@456 $generated@@455)) (or (= $generated@@454 ($generated@@318 $generated@@456 $generated@@455)) (exists (($generated@@457 T@U) ($generated@@458 T@U) ) (!  (and (and (= (type $generated@@457) $generated@@179) (= (type $generated@@458) $generated@@179)) ($generated@@0 ($generated@@86 ($generated@@395 $generated@@454) ($generated@@293 ($generated@@245 $generated@@457 $generated@@458)))))
 :no-pattern (type $generated@@457)
 :no-pattern (type $generated@@458)
 :no-pattern ($generated $generated@@457)
 :no-pattern ($generated@@0 $generated@@457)
 :no-pattern ($generated $generated@@458)
 :no-pattern ($generated@@0 $generated@@458)
))))))
 :pattern ( ($generated@@395 $generated@@454))
)))
(assert (forall (($generated@@459 T@U) ) (! (let (($generated@@460 ($generated@@339 (type $generated@@459))))
(let (($generated@@461 ($generated@@338 (type $generated@@459))))
 (=> (= (type $generated@@459) ($generated@@337 $generated@@461 $generated@@460)) (or (= $generated@@459 ($generated@@336 $generated@@461 $generated@@460)) (exists (($generated@@462 T@U) ($generated@@463 T@U) ) (!  (and (and (= (type $generated@@462) $generated@@179) (= (type $generated@@463) $generated@@179)) ($generated@@0 ($generated@@86 ($generated@@406 $generated@@459) ($generated@@293 ($generated@@245 $generated@@462 $generated@@463)))))
 :no-pattern (type $generated@@462)
 :no-pattern (type $generated@@463)
 :no-pattern ($generated $generated@@462)
 :no-pattern ($generated@@0 $generated@@462)
 :no-pattern ($generated $generated@@463)
 :no-pattern ($generated@@0 $generated@@463)
))))))
 :pattern ( ($generated@@406 $generated@@459))
)))
(assert (forall (($generated@@464 T@U) ) (!  (=> (and (= (type $generated@@464) $generated@@179) ($generated@@246 $generated@@464 $generated@@46)) (and (= ($generated@@293 ($generated@@396 $generated@@2 $generated@@464)) $generated@@464) ($generated@@141 ($generated@@396 $generated@@2 $generated@@464) $generated@@46)))
 :pattern ( ($generated@@246 $generated@@464 $generated@@46))
)))
(assert (forall (($generated@@465 T@U) ) (!  (=> (and (= (type $generated@@465) $generated@@179) ($generated@@246 $generated@@465 $generated@@47)) (and (= ($generated@@293 ($generated@@396 $generated@@3 $generated@@465)) $generated@@465) ($generated@@141 ($generated@@396 $generated@@3 $generated@@465) $generated@@47)))
 :pattern ( ($generated@@246 $generated@@465 $generated@@47))
)))
(assert (forall (($generated@@466 T@U) ) (!  (=> (and (= (type $generated@@466) $generated@@179) ($generated@@246 $generated@@466 $generated@@44)) (and (= ($generated@@293 ($generated@@396 $generated@@4 $generated@@466)) $generated@@466) ($generated@@141 ($generated@@396 $generated@@4 $generated@@466) $generated@@44)))
 :pattern ( ($generated@@246 $generated@@466 $generated@@44))
)))
(assert (= ($generated@@1 $generated@@467) 20))
(assert (forall (($generated@@468 T@U) ) (!  (=> (and (= (type $generated@@468) $generated@@179) ($generated@@246 $generated@@468 $generated@@45)) (and (= ($generated@@293 ($generated@@396 $generated@@467 $generated@@468)) $generated@@468) ($generated@@141 ($generated@@396 $generated@@467 $generated@@468) $generated@@45)))
 :pattern ( ($generated@@246 $generated@@468 $generated@@45))
)))
(assert (forall (($generated@@469 T@U) ($generated@@470 T@U) ) (!  (=> (= (type $generated@@470) $generated@@69) (= ($generated@@246 ($generated@@293 $generated@@469) $generated@@470) ($generated@@141 $generated@@469 $generated@@470)))
 :pattern ( ($generated@@246 ($generated@@293 $generated@@469) $generated@@470))
)))
(assert (forall (($generated@@471 T@U) ) (!  (=> (= (type $generated@@471) $generated@@82) (<= 0 ($generated@@137 $generated@@471)))
 :no-pattern (type $generated@@471)
 :no-pattern ($generated $generated@@471)
 :no-pattern ($generated@@0 $generated@@471)
)))
(assert (forall (($generated@@472 T@U) ) (! (let (($generated@@473 ($generated@@84 (type $generated@@472))))
 (=> (= (type $generated@@472) ($generated@@81 $generated@@473 $generated@@2)) (<= 0 ($generated@@306 $generated@@472))))
 :pattern ( ($generated@@306 $generated@@472))
)))
(assert (forall (($generated@@474 T@U) ) (! (let (($generated@@475 ($generated@@286 (type $generated@@474))))
 (=> (= (type $generated@@474) ($generated@@285 $generated@@475)) (<= 0 ($generated@@284 $generated@@474))))
 :pattern ( ($generated@@284 $generated@@474))
)))
(assert (forall (($generated@@477 T@U) ) (! (= (type ($generated@@476 $generated@@477)) $generated@@69)
 :pattern ( ($generated@@476 $generated@@477))
)))
(assert (forall (($generated@@478 T@U) ($generated@@479 T@U) ) (!  (=> (and (= (type $generated@@478) $generated@@69) (= (type $generated@@479) $generated@@69)) (= ($generated@@476 ($generated@@424 $generated@@478 $generated@@479)) $generated@@478))
 :pattern ( ($generated@@424 $generated@@478 $generated@@479))
)))
(assert (forall (($generated@@481 T@U) ) (! (= (type ($generated@@480 $generated@@481)) $generated@@69)
 :pattern ( ($generated@@480 $generated@@481))
)))
(assert (forall (($generated@@482 T@U) ($generated@@483 T@U) ) (!  (=> (and (= (type $generated@@482) $generated@@69) (= (type $generated@@483) $generated@@69)) (= ($generated@@480 ($generated@@424 $generated@@482 $generated@@483)) $generated@@483))
 :pattern ( ($generated@@424 $generated@@482 $generated@@483))
)))
(assert (forall (($generated@@484 T@U) ($generated@@485 T@U) ) (!  (=> (and (= (type $generated@@484) $generated@@69) (= (type $generated@@485) $generated@@69)) (= ($generated@@77 ($generated@@424 $generated@@484 $generated@@485)) $generated@@58))
 :pattern ( ($generated@@424 $generated@@484 $generated@@485))
)))
(assert (forall (($generated@@487 T@U) ) (! (= (type ($generated@@486 $generated@@487)) $generated@@69)
 :pattern ( ($generated@@486 $generated@@487))
)))
(assert (forall (($generated@@488 T@U) ($generated@@489 T@U) ) (!  (=> (and (= (type $generated@@488) $generated@@69) (= (type $generated@@489) $generated@@69)) (= ($generated@@486 ($generated@@432 $generated@@488 $generated@@489)) $generated@@488))
 :pattern ( ($generated@@432 $generated@@488 $generated@@489))
)))
(assert (forall (($generated@@491 T@U) ) (! (= (type ($generated@@490 $generated@@491)) $generated@@69)
 :pattern ( ($generated@@490 $generated@@491))
)))
(assert (forall (($generated@@492 T@U) ($generated@@493 T@U) ) (!  (=> (and (= (type $generated@@492) $generated@@69) (= (type $generated@@493) $generated@@69)) (= ($generated@@490 ($generated@@432 $generated@@492 $generated@@493)) $generated@@493))
 :pattern ( ($generated@@432 $generated@@492 $generated@@493))
)))
(assert (forall (($generated@@494 T@U) ($generated@@495 T@U) ) (!  (=> (and (= (type $generated@@494) $generated@@69) (= (type $generated@@495) $generated@@69)) (= ($generated@@77 ($generated@@432 $generated@@494 $generated@@495)) $generated@@59))
 :pattern ( ($generated@@432 $generated@@494 $generated@@495))
)))
(assert (forall (($generated@@496 T@U) ($generated@@497 T@U) ) (!  (=> (and (= (type $generated@@496) $generated@@179) (= (type $generated@@497) $generated@@179)) (= ($generated@@277 ($generated@@245 $generated@@496 $generated@@497)) $generated@@63))
 :pattern ( ($generated@@245 $generated@@496 $generated@@497))
)))
(assert (forall (($generated@@499 T@U) ) (! (= (type ($generated@@498 $generated@@499)) $generated@@69)
 :pattern ( ($generated@@498 $generated@@499))
)))
(assert (forall (($generated@@500 T@U) ($generated@@501 T@U) ) (!  (=> (and (= (type $generated@@500) $generated@@69) (= (type $generated@@501) $generated@@69)) (= ($generated@@498 ($generated@@169 $generated@@500 $generated@@501)) $generated@@500))
 :pattern ( ($generated@@169 $generated@@500 $generated@@501))
)))
(assert (forall (($generated@@503 T@U) ) (! (= (type ($generated@@502 $generated@@503)) $generated@@69)
 :pattern ( ($generated@@502 $generated@@503))
)))
(assert (forall (($generated@@504 T@U) ($generated@@505 T@U) ) (!  (=> (and (= (type $generated@@504) $generated@@69) (= (type $generated@@505) $generated@@69)) (= ($generated@@502 ($generated@@169 $generated@@504 $generated@@505)) $generated@@505))
 :pattern ( ($generated@@169 $generated@@504 $generated@@505))
)))
(assert (forall (($generated@@506 T@U) ($generated@@507 T@U) ) (!  (=> (and (= (type $generated@@506) $generated@@179) (= (type $generated@@507) $generated@@179)) (= ($generated@@177 ($generated@@245 $generated@@506 $generated@@507)) $generated@@506))
 :pattern ( ($generated@@245 $generated@@506 $generated@@507))
)))
(assert (forall (($generated@@508 T@U) ($generated@@509 T@U) ) (!  (=> (and (= (type $generated@@508) $generated@@179) (= (type $generated@@509) $generated@@179)) (= ($generated@@178 ($generated@@245 $generated@@508 $generated@@509)) $generated@@509))
 :pattern ( ($generated@@245 $generated@@508 $generated@@509))
)))
(assert  (and (forall (($generated@@512 T@U) ) (! (= (type ($generated@@510 $generated@@512)) $generated@@69)
 :pattern ( ($generated@@510 $generated@@512))
)) (forall (($generated@@513 T@U) ($generated@@514 Int) ) (! (let (($generated@@515 ($generated@@286 (type $generated@@513))))
(= (type ($generated@@511 $generated@@513 $generated@@514)) $generated@@515))
 :pattern ( ($generated@@511 $generated@@513 $generated@@514))
))))
(assert (forall (($generated@@516 T@U) ($generated@@517 T@U) ($generated@@518 T@U) ) (!  (=> (and (and (= (type $generated@@516) ($generated@@285 $generated@@179)) (= (type $generated@@517) $generated@@69)) (= (type $generated@@518) ($generated@@81 $generated@@82 $generated@@83))) (= ($generated@@79 $generated@@516 ($generated@@510 $generated@@517) $generated@@518) (forall (($generated@@519 Int) ) (!  (=> (and (<= 0 $generated@@519) (< $generated@@519 ($generated@@284 $generated@@516))) ($generated@@271 ($generated@@511 $generated@@516 $generated@@519) $generated@@517 $generated@@518))
 :pattern ( ($generated@@511 $generated@@516 $generated@@519))
))))
 :pattern ( ($generated@@79 $generated@@516 ($generated@@510 $generated@@517) $generated@@518))
)))
(assert (forall (($generated@@521 Int) ) (! (= ($generated@@520 ($generated@@80 $generated@@521)) $generated@@521)
 :pattern ( ($generated@@80 $generated@@521))
)))
(assert (forall (($generated@@523 T@U) ) (! (= (type ($generated@@522 $generated@@523)) $generated@@69)
 :pattern ( ($generated@@522 $generated@@523))
)))
(assert (forall (($generated@@524 T@U) ) (!  (=> (= (type $generated@@524) $generated@@69) (= ($generated@@522 ($generated@@255 $generated@@524)) $generated@@524))
 :pattern ( ($generated@@255 $generated@@524))
)))
(assert (forall (($generated@@525 T@U) ) (!  (=> (= (type $generated@@525) $generated@@69) (= ($generated@@77 ($generated@@255 $generated@@525)) $generated@@54))
 :pattern ( ($generated@@255 $generated@@525))
)))
(assert (forall (($generated@@527 T@U) ) (! (= (type ($generated@@526 $generated@@527)) $generated@@69)
 :pattern ( ($generated@@526 $generated@@527))
)))
(assert (forall (($generated@@528 T@U) ) (!  (=> (= (type $generated@@528) $generated@@69) (= ($generated@@526 ($generated@@260 $generated@@528)) $generated@@528))
 :pattern ( ($generated@@260 $generated@@528))
)))
(assert (forall (($generated@@529 T@U) ) (!  (=> (= (type $generated@@529) $generated@@69) (= ($generated@@77 ($generated@@260 $generated@@529)) $generated@@55))
 :pattern ( ($generated@@260 $generated@@529))
)))
(assert (forall (($generated@@531 T@U) ) (! (= (type ($generated@@530 $generated@@531)) $generated@@69)
 :pattern ( ($generated@@530 $generated@@531))
)))
(assert (forall (($generated@@532 T@U) ) (!  (=> (= (type $generated@@532) $generated@@69) (= ($generated@@530 ($generated@@184 $generated@@532)) $generated@@532))
 :pattern ( ($generated@@184 $generated@@532))
)))
(assert (forall (($generated@@533 T@U) ) (!  (=> (= (type $generated@@533) $generated@@69) (= ($generated@@77 ($generated@@184 $generated@@533)) $generated@@56))
 :pattern ( ($generated@@184 $generated@@533))
)))
(assert (forall (($generated@@535 T@U) ) (! (= (type ($generated@@534 $generated@@535)) $generated@@69)
 :pattern ( ($generated@@534 $generated@@535))
)))
(assert (forall (($generated@@536 T@U) ) (!  (=> (= (type $generated@@536) $generated@@69) (= ($generated@@534 ($generated@@510 $generated@@536)) $generated@@536))
 :pattern ( ($generated@@510 $generated@@536))
)))
(assert (forall (($generated@@537 T@U) ) (!  (=> (= (type $generated@@537) $generated@@69) (= ($generated@@77 ($generated@@510 $generated@@537)) $generated@@57))
 :pattern ( ($generated@@510 $generated@@537))
)))
(assert (forall (($generated@@539 T@U) ) (! (= (type ($generated@@538 $generated@@539)) $generated@@69)
 :pattern ( ($generated@@538 $generated@@539))
)))
(assert (forall (($generated@@540 T@U) ) (!  (=> (= (type $generated@@540) $generated@@69) (= ($generated@@538 ($generated@@138 $generated@@540)) $generated@@540))
 :pattern ( ($generated@@138 $generated@@540))
)))
(assert (forall (($generated@@542 T@U) ) (! (= (type ($generated@@541 $generated@@542)) $generated@@69)
 :pattern ( ($generated@@541 $generated@@542))
)))
(assert (forall (($generated@@543 T@U) ) (!  (=> (= (type $generated@@543) $generated@@69) (= ($generated@@541 ($generated@@163 $generated@@543)) $generated@@543))
 :pattern ( ($generated@@163 $generated@@543))
)))
(assert (forall (($generated@@545 T@U) ) (! (= (type ($generated@@544 $generated@@545)) $generated@@69)
 :pattern ( ($generated@@544 $generated@@545))
)))
(assert (forall (($generated@@546 T@U) ) (!  (=> (= (type $generated@@546) $generated@@69) (= ($generated@@544 ($generated@@153 $generated@@546)) $generated@@546))
 :pattern ( ($generated@@153 $generated@@546))
)))
(assert (forall (($generated@@547 T@U) ) (! (let (($generated@@548 (type $generated@@547)))
(= ($generated@@396 $generated@@548 ($generated@@293 $generated@@547)) $generated@@547))
 :pattern ( ($generated@@293 $generated@@547))
)))
(assert (forall (($generated@@549 T@U) ($generated@@550 T@U) ($generated@@551 T@U) ) (!  (=> (and (and (= (type $generated@@549) ($generated@@319 $generated@@179 $generated@@179)) (= (type $generated@@550) $generated@@69)) (= (type $generated@@551) $generated@@69)) (= ($generated@@141 $generated@@549 ($generated@@424 $generated@@550 $generated@@551)) (forall (($generated@@552 T@U) ) (!  (=> (and (= (type $generated@@552) $generated@@179) ($generated@@0 ($generated@@86 ($generated@@317 $generated@@549) $generated@@552))) (and ($generated@@246 ($generated@@86 ($generated@@397 $generated@@549) $generated@@552) $generated@@551) ($generated@@246 $generated@@552 $generated@@550)))
 :pattern ( ($generated@@86 ($generated@@397 $generated@@549) $generated@@552))
 :pattern ( ($generated@@86 ($generated@@317 $generated@@549) $generated@@552))
))))
 :pattern ( ($generated@@141 $generated@@549 ($generated@@424 $generated@@550 $generated@@551)))
)))
(assert (forall (($generated@@553 T@U) ($generated@@554 T@U) ($generated@@555 T@U) ) (!  (=> (and (and (= (type $generated@@553) ($generated@@337 $generated@@179 $generated@@179)) (= (type $generated@@554) $generated@@69)) (= (type $generated@@555) $generated@@69)) (= ($generated@@141 $generated@@553 ($generated@@432 $generated@@554 $generated@@555)) (forall (($generated@@556 T@U) ) (!  (=> (and (= (type $generated@@556) $generated@@179) ($generated@@0 ($generated@@86 ($generated@@335 $generated@@553) $generated@@556))) (and ($generated@@246 ($generated@@86 ($generated@@407 $generated@@553) $generated@@556) $generated@@555) ($generated@@246 $generated@@556 $generated@@554)))
 :pattern ( ($generated@@86 ($generated@@407 $generated@@553) $generated@@556))
 :pattern ( ($generated@@86 ($generated@@335 $generated@@553) $generated@@556))
))))
 :pattern ( ($generated@@141 $generated@@553 ($generated@@432 $generated@@554 $generated@@555)))
)))
(assert (forall (($generated@@559 T@U) ($generated@@560 T@U) ) (!  (=> (and (= (type $generated@@559) $generated@@179) (= (type $generated@@560) $generated@@179)) (< ($generated@@557 $generated@@559) ($generated@@558 ($generated@@245 $generated@@559 $generated@@560))))
 :pattern ( ($generated@@245 $generated@@559 $generated@@560))
)))
(assert (forall (($generated@@561 T@U) ($generated@@562 T@U) ) (!  (=> (and (= (type $generated@@561) $generated@@179) (= (type $generated@@562) $generated@@179)) (< ($generated@@557 $generated@@562) ($generated@@558 ($generated@@245 $generated@@561 $generated@@562))))
 :pattern ( ($generated@@245 $generated@@561 $generated@@562))
)))
(assert (forall (($generated@@563 T@U) ($generated@@564 T@U) ($generated@@565 T@U) ) (!  (=> (and (and (and (= (type $generated@@563) $generated@@179) (= (type $generated@@564) $generated@@69)) (= (type $generated@@565) $generated@@69)) ($generated@@246 $generated@@563 ($generated@@424 $generated@@564 $generated@@565))) (and (= ($generated@@293 ($generated@@396 ($generated@@319 $generated@@179 $generated@@179) $generated@@563)) $generated@@563) ($generated@@141 ($generated@@396 ($generated@@319 $generated@@179 $generated@@179) $generated@@563) ($generated@@424 $generated@@564 $generated@@565))))
 :pattern ( ($generated@@246 $generated@@563 ($generated@@424 $generated@@564 $generated@@565)))
)))
(assert (forall (($generated@@566 T@U) ($generated@@567 T@U) ($generated@@568 T@U) ) (!  (=> (and (and (and (= (type $generated@@566) $generated@@179) (= (type $generated@@567) $generated@@69)) (= (type $generated@@568) $generated@@69)) ($generated@@246 $generated@@566 ($generated@@432 $generated@@567 $generated@@568))) (and (= ($generated@@293 ($generated@@396 ($generated@@337 $generated@@179 $generated@@179) $generated@@566)) $generated@@566) ($generated@@141 ($generated@@396 ($generated@@337 $generated@@179 $generated@@179) $generated@@566) ($generated@@432 $generated@@567 $generated@@568))))
 :pattern ( ($generated@@246 $generated@@566 ($generated@@432 $generated@@567 $generated@@568)))
)))
(assert (forall (($generated@@569 T@U) ($generated@@570 T@U) ($generated@@571 T@U) ) (!  (=> (and (and (and (= (type $generated@@569) $generated@@69) (= (type $generated@@570) $generated@@69)) (= (type $generated@@571) $generated@@179)) ($generated@@246 $generated@@571 ($generated@@169 $generated@@569 $generated@@570))) (and (= ($generated@@293 ($generated@@396 $generated@@170 $generated@@571)) $generated@@571) ($generated@@141 ($generated@@396 $generated@@170 $generated@@571) ($generated@@169 $generated@@569 $generated@@570))))
 :pattern ( ($generated@@246 $generated@@571 ($generated@@169 $generated@@569 $generated@@570)))
)))
(assert (forall (($generated@@572 T@U) ) (! (let (($generated@@573 (type $generated@@572)))
 (not ($generated@@0 ($generated@@86 ($generated@@443 $generated@@573) $generated@@572))))
 :pattern ( (let (($generated@@573 (type $generated@@572)))
($generated@@86 ($generated@@443 $generated@@573) $generated@@572)))
)))
(assert (forall (($generated@@574 T@U) ($generated@@575 T@U) ) (!  (=> (and (= (type $generated@@574) $generated@@69) (= (type $generated@@575) $generated@@69)) (and (= ($generated@@77 ($generated@@169 $generated@@574 $generated@@575)) $generated@@64) (= ($generated@@312 ($generated@@169 $generated@@574 $generated@@575)) $generated@@67)))
 :pattern ( ($generated@@169 $generated@@574 $generated@@575))
)))
(assert (forall (($generated@@576 T@U) ) (!  (=> (= (type $generated@@576) $generated@@170) (= ($generated@@557 ($generated@@293 $generated@@576)) ($generated@@558 $generated@@576)))
 :pattern ( ($generated@@557 ($generated@@293 $generated@@576)))
)))
(assert (forall (($generated@@577 T@U) ) (!  (=> (and (= (type $generated@@577) $generated@@179) ($generated@@246 $generated@@577 ($generated@@80 0))) (and (= ($generated@@293 ($generated@@396 $generated@@2 $generated@@577)) $generated@@577) ($generated@@141 ($generated@@396 ($generated@@81 $generated@@179 $generated@@4) $generated@@577) ($generated@@80 0))))
 :pattern ( ($generated@@246 $generated@@577 ($generated@@80 0)))
)))
(assert (forall (($generated@@578 T@U) ($generated@@579 T@U) ) (!  (=> (and (and (= (type $generated@@578) $generated@@179) (= (type $generated@@579) $generated@@69)) ($generated@@246 $generated@@578 ($generated@@255 $generated@@579))) (and (= ($generated@@293 ($generated@@396 ($generated@@81 $generated@@179 $generated@@4) $generated@@578)) $generated@@578) ($generated@@141 ($generated@@396 ($generated@@81 $generated@@179 $generated@@4) $generated@@578) ($generated@@255 $generated@@579))))
 :pattern ( ($generated@@246 $generated@@578 ($generated@@255 $generated@@579)))
)))
(assert (forall (($generated@@580 T@U) ($generated@@581 T@U) ) (!  (=> (and (and (= (type $generated@@580) $generated@@179) (= (type $generated@@581) $generated@@69)) ($generated@@246 $generated@@580 ($generated@@260 $generated@@581))) (and (= ($generated@@293 ($generated@@396 ($generated@@81 $generated@@179 $generated@@4) $generated@@580)) $generated@@580) ($generated@@141 ($generated@@396 ($generated@@81 $generated@@179 $generated@@4) $generated@@580) ($generated@@260 $generated@@581))))
 :pattern ( ($generated@@246 $generated@@580 ($generated@@260 $generated@@581)))
)))
(assert (forall (($generated@@582 T@U) ($generated@@583 T@U) ) (!  (=> (and (and (= (type $generated@@582) $generated@@179) (= (type $generated@@583) $generated@@69)) ($generated@@246 $generated@@582 ($generated@@184 $generated@@583))) (and (= ($generated@@293 ($generated@@396 ($generated@@81 $generated@@179 $generated@@2) $generated@@582)) $generated@@582) ($generated@@141 ($generated@@396 ($generated@@81 $generated@@179 $generated@@2) $generated@@582) ($generated@@184 $generated@@583))))
 :pattern ( ($generated@@246 $generated@@582 ($generated@@184 $generated@@583)))
)))
(assert (forall (($generated@@584 T@U) ($generated@@585 T@U) ) (!  (=> (and (and (= (type $generated@@584) $generated@@179) (= (type $generated@@585) $generated@@69)) ($generated@@246 $generated@@584 ($generated@@510 $generated@@585))) (and (= ($generated@@293 ($generated@@396 ($generated@@285 $generated@@179) $generated@@584)) $generated@@584) ($generated@@141 ($generated@@396 ($generated@@285 $generated@@179) $generated@@584) ($generated@@510 $generated@@585))))
 :pattern ( ($generated@@246 $generated@@584 ($generated@@510 $generated@@585)))
)))
(assert (forall (($generated@@586 T@U) ($generated@@587 T@U) ) (!  (=> (and (and (= (type $generated@@586) $generated@@69) (= (type $generated@@587) $generated@@179)) ($generated@@246 $generated@@587 ($generated@@138 $generated@@586))) (and (= ($generated@@293 ($generated@@396 $generated@@82 $generated@@587)) $generated@@587) ($generated@@141 ($generated@@396 $generated@@82 $generated@@587) ($generated@@138 $generated@@586))))
 :pattern ( ($generated@@246 $generated@@587 ($generated@@138 $generated@@586)))
)))
(assert (forall (($generated@@588 T@U) ($generated@@589 T@U) ) (!  (=> (and (and (= (type $generated@@588) $generated@@69) (= (type $generated@@589) $generated@@179)) ($generated@@246 $generated@@589 ($generated@@163 $generated@@588))) (and (= ($generated@@293 ($generated@@396 $generated@@82 $generated@@589)) $generated@@589) ($generated@@141 ($generated@@396 $generated@@82 $generated@@589) ($generated@@163 $generated@@588))))
 :pattern ( ($generated@@246 $generated@@589 ($generated@@163 $generated@@588)))
)))
(assert (forall (($generated@@590 T@U) ($generated@@591 T@U) ) (!  (=> (and (and (= (type $generated@@590) $generated@@69) (= (type $generated@@591) $generated@@179)) ($generated@@246 $generated@@591 ($generated@@153 $generated@@590))) (and (= ($generated@@293 ($generated@@396 $generated@@82 $generated@@591)) $generated@@591) ($generated@@141 ($generated@@396 $generated@@82 $generated@@591) ($generated@@153 $generated@@590))))
 :pattern ( ($generated@@246 $generated@@591 ($generated@@153 $generated@@590)))
)))
(assert (forall (($generated@@592 T@U) ($generated@@593 T@U) ($generated@@594 T@U) ($generated@@595 T@U) ) (! (let (($generated@@596 (type $generated@@595)))
 (=> (and (and (and (= (type $generated@@592) ($generated@@81 $generated@@82 $generated@@83)) (= (type $generated@@593) $generated@@82)) (= (type $generated@@594) ($generated@@71 $generated@@596))) ($generated@@158 ($generated@@87 $generated@@592 $generated@@593 ($generated@@89 ($generated@@86 $generated@@592 $generated@@593) $generated@@594 $generated@@595)))) ($generated@@146 $generated@@592 ($generated@@87 $generated@@592 $generated@@593 ($generated@@89 ($generated@@86 $generated@@592 $generated@@593) $generated@@594 $generated@@595)))))
 :pattern ( ($generated@@87 $generated@@592 $generated@@593 ($generated@@89 ($generated@@86 $generated@@592 $generated@@593) $generated@@594 $generated@@595)))
)))
(assert (forall (($generated@@597 T@U) ($generated@@598 T@U) ($generated@@599 T@U) ) (!  (=> (and (and (= (type $generated@@597) ($generated@@81 $generated@@179 $generated@@2)) (= (type $generated@@598) $generated@@69)) (= (type $generated@@599) ($generated@@81 $generated@@82 $generated@@83))) (= ($generated@@79 $generated@@597 ($generated@@184 $generated@@598) $generated@@599) (forall (($generated@@600 T@U) ) (!  (=> (and (= (type $generated@@600) $generated@@179) (< 0 ($generated ($generated@@86 $generated@@597 $generated@@600)))) ($generated@@271 $generated@@600 $generated@@598 $generated@@599))
 :pattern ( ($generated@@86 $generated@@597 $generated@@600))
))))
 :pattern ( ($generated@@79 $generated@@597 ($generated@@184 $generated@@598) $generated@@599))
)))
(assert (forall (($generated@@601 T@U) ($generated@@602 T@U) ($generated@@603 T@U) ) (!  (=> (and (and (and (= (type $generated@@601) $generated@@170) (= (type $generated@@602) $generated@@69)) (= (type $generated@@603) ($generated@@81 $generated@@82 $generated@@83))) (and ($generated@@158 $generated@@603) (and ($generated@@168 $generated@@601) (exists (($generated@@604 T@U) ) (!  (and (= (type $generated@@604) $generated@@69) ($generated@@79 $generated@@601 ($generated@@169 $generated@@602 $generated@@604) $generated@@603))
 :pattern ( ($generated@@79 $generated@@601 ($generated@@169 $generated@@602 $generated@@604) $generated@@603))
))))) ($generated@@271 ($generated@@177 $generated@@601) $generated@@602 $generated@@603))
 :pattern ( ($generated@@271 ($generated@@177 $generated@@601) $generated@@602 $generated@@603))
)))
(assert (forall (($generated@@605 T@U) ($generated@@606 T@U) ($generated@@607 T@U) ) (!  (=> (and (and (and (= (type $generated@@605) $generated@@170) (= (type $generated@@606) $generated@@69)) (= (type $generated@@607) ($generated@@81 $generated@@82 $generated@@83))) (and ($generated@@158 $generated@@607) (and ($generated@@168 $generated@@605) (exists (($generated@@608 T@U) ) (!  (and (= (type $generated@@608) $generated@@69) ($generated@@79 $generated@@605 ($generated@@169 $generated@@608 $generated@@606) $generated@@607))
 :pattern ( ($generated@@79 $generated@@605 ($generated@@169 $generated@@608 $generated@@606) $generated@@607))
))))) ($generated@@271 ($generated@@178 $generated@@605) $generated@@606 $generated@@607))
 :pattern ( ($generated@@271 ($generated@@178 $generated@@605) $generated@@606 $generated@@607))
)))
(assert (forall (($generated@@609 T@U) ($generated@@610 T@U) ) (!  (=> (and (= (type $generated@@609) $generated@@179) (= (type $generated@@610) $generated@@179)) (= ($generated@@245 ($generated@@267 $generated@@609) ($generated@@267 $generated@@610)) ($generated@@267 ($generated@@245 $generated@@609 $generated@@610))))
 :pattern ( ($generated@@245 ($generated@@267 $generated@@609) ($generated@@267 $generated@@610)))
)))
(assert (forall (($generated@@611 Int) ) (! (= ($generated@@293 ($generated@@8 ($generated@@265 $generated@@611))) ($generated@@267 ($generated@@293 ($generated@@8 $generated@@611))))
 :pattern ( ($generated@@293 ($generated@@8 ($generated@@265 $generated@@611))))
)))
(assert (forall (($generated@@612 T@U) ) (! (= ($generated@@293 ($generated@@267 $generated@@612)) ($generated@@267 ($generated@@293 $generated@@612)))
 :pattern ( ($generated@@293 ($generated@@267 $generated@@612)))
)))
(assert (forall (($generated@@613 T@U) ) (! (let (($generated@@614 ($generated@@286 (type $generated@@613))))
 (=> (and (= (type $generated@@613) ($generated@@285 $generated@@614)) (= ($generated@@284 $generated@@613) 0)) (= $generated@@613 ($generated@@283 $generated@@614))))
 :pattern ( ($generated@@284 $generated@@613))
)))
(assert (forall (($generated@@615 T@U) ($generated@@616 T@U) ($generated@@617 T@U) ) (! (let (($generated@@618 (type $generated@@616)))
 (=> (and (and (= (type $generated@@615) ($generated@@81 $generated@@618 $generated@@2)) (= (type $generated@@617) $generated@@2)) (<= 0 ($generated $generated@@617))) (= ($generated@@306 ($generated@@87 $generated@@615 $generated@@616 $generated@@617)) (+ (- ($generated@@306 $generated@@615) ($generated ($generated@@86 $generated@@615 $generated@@616))) ($generated $generated@@617)))))
 :pattern ( ($generated@@306 ($generated@@87 $generated@@615 $generated@@616 $generated@@617)))
)))
(assert (forall (($generated@@619 T@U) ($generated@@620 T@U) ) (!  (=> (and (= (type $generated@@619) ($generated@@81 $generated@@82 $generated@@83)) (= (type $generated@@620) $generated@@2)) ($generated@@79 $generated@@620 $generated@@46 $generated@@619))
 :pattern ( ($generated@@79 $generated@@620 $generated@@46 $generated@@619))
)))
(assert (forall (($generated@@621 T@U) ($generated@@622 T@U) ) (!  (=> (and (= (type $generated@@621) ($generated@@81 $generated@@82 $generated@@83)) (= (type $generated@@622) $generated@@3)) ($generated@@79 $generated@@622 $generated@@47 $generated@@621))
 :pattern ( ($generated@@79 $generated@@622 $generated@@47 $generated@@621))
)))
(assert (forall (($generated@@623 T@U) ($generated@@624 T@U) ) (!  (=> (and (= (type $generated@@623) ($generated@@81 $generated@@82 $generated@@83)) (= (type $generated@@624) $generated@@4)) ($generated@@79 $generated@@624 $generated@@44 $generated@@623))
 :pattern ( ($generated@@79 $generated@@624 $generated@@44 $generated@@623))
)))
(assert (forall (($generated@@625 T@U) ($generated@@626 T@U) ) (!  (=> (and (= (type $generated@@625) ($generated@@81 $generated@@82 $generated@@83)) (= (type $generated@@626) $generated@@467)) ($generated@@79 $generated@@626 $generated@@45 $generated@@625))
 :pattern ( ($generated@@79 $generated@@626 $generated@@45 $generated@@625))
)))
(assert (forall (($generated@@627 T@U) ($generated@@628 T@U) ) (!  (=> (and (= (type $generated@@627) ($generated@@81 $generated@@82 $generated@@83)) (= (type $generated@@628) $generated@@179)) ($generated@@79 $generated@@628 $generated@@48 $generated@@627))
 :pattern ( ($generated@@79 $generated@@628 $generated@@48 $generated@@627))
)))
(assert (forall (($generated@@629 T@U) ($generated@@630 T@U) ) (!  (=> (and (= (type $generated@@629) ($generated@@285 $generated@@179)) (= (type $generated@@630) $generated@@69)) (= ($generated@@141 $generated@@629 ($generated@@510 $generated@@630)) (forall (($generated@@631 Int) ) (!  (=> (and (<= 0 $generated@@631) (< $generated@@631 ($generated@@284 $generated@@629))) ($generated@@246 ($generated@@511 $generated@@629 $generated@@631) $generated@@630))
 :pattern ( ($generated@@511 $generated@@629 $generated@@631))
))))
 :pattern ( ($generated@@141 $generated@@629 ($generated@@510 $generated@@630)))
)))
(assert (forall (($generated@@633 T@U) ($generated@@634 Int) ) (!  (=> (= (type $generated@@633) ($generated@@285 $generated@@179)) (=> (and (<= 0 $generated@@634) (< $generated@@634 ($generated@@284 $generated@@633))) (< ($generated@@558 ($generated@@396 $generated@@170 ($generated@@511 $generated@@633 $generated@@634))) ($generated@@632 $generated@@633))))
 :pattern ( ($generated@@558 ($generated@@396 $generated@@170 ($generated@@511 $generated@@633 $generated@@634))))
)))
(assert (forall (($generated@@635 T@U) ($generated@@636 T@U) ($generated@@637 T@U) ) (!  (=> (and (and (and (= (type $generated@@635) ($generated@@319 $generated@@179 $generated@@179)) (= (type $generated@@636) $generated@@69)) (= (type $generated@@637) $generated@@69)) ($generated@@141 $generated@@635 ($generated@@424 $generated@@636 $generated@@637))) (and (and ($generated@@141 ($generated@@317 $generated@@635) ($generated@@255 $generated@@636)) ($generated@@141 ($generated@@364 $generated@@635) ($generated@@255 $generated@@637))) ($generated@@141 ($generated@@395 $generated@@635) ($generated@@255 ($generated@@169 $generated@@636 $generated@@637)))))
 :pattern ( ($generated@@141 $generated@@635 ($generated@@424 $generated@@636 $generated@@637)))
)))
(assert (forall (($generated@@638 T@U) ($generated@@639 T@U) ($generated@@640 T@U) ) (!  (=> (and (and (and (= (type $generated@@638) ($generated@@337 $generated@@179 $generated@@179)) (= (type $generated@@639) $generated@@69)) (= (type $generated@@640) $generated@@69)) ($generated@@141 $generated@@638 ($generated@@432 $generated@@639 $generated@@640))) (and (and ($generated@@141 ($generated@@335 $generated@@638) ($generated@@260 $generated@@639)) ($generated@@141 ($generated@@375 $generated@@638) ($generated@@260 $generated@@640))) ($generated@@141 ($generated@@406 $generated@@638) ($generated@@260 ($generated@@169 $generated@@639 $generated@@640)))))
 :pattern ( ($generated@@141 $generated@@638 ($generated@@432 $generated@@639 $generated@@640)))
)))
(assert (forall (($generated@@641 T@U) ) (!  (=> (= (type $generated@@641) $generated@@2) ($generated@@141 $generated@@641 $generated@@46))
 :pattern ( ($generated@@141 $generated@@641 $generated@@46))
)))
(assert (forall (($generated@@642 T@U) ) (!  (=> (= (type $generated@@642) $generated@@3) ($generated@@141 $generated@@642 $generated@@47))
 :pattern ( ($generated@@141 $generated@@642 $generated@@47))
)))
(assert (forall (($generated@@643 T@U) ) (!  (=> (= (type $generated@@643) $generated@@4) ($generated@@141 $generated@@643 $generated@@44))
 :pattern ( ($generated@@141 $generated@@643 $generated@@44))
)))
(assert (forall (($generated@@644 T@U) ) (!  (=> (= (type $generated@@644) $generated@@467) ($generated@@141 $generated@@644 $generated@@45))
 :pattern ( ($generated@@141 $generated@@644 $generated@@45))
)))
(assert (forall (($generated@@645 T@U) ) (!  (=> (= (type $generated@@645) $generated@@179) ($generated@@141 $generated@@645 $generated@@48))
 :pattern ( ($generated@@141 $generated@@645 $generated@@48))
)))
(push 1)
(declare-fun ControlFlow (Int Int) Int)
(declare-fun $generated@@646 () T@U)
(declare-fun $generated@@647 () T@U)
(declare-fun $generated@@648 (T@U) Bool)
(declare-fun $generated@@649 () T@U)
(declare-fun $generated@@650 () T@U)
(declare-fun $generated@@651 () T@U)
(declare-fun $generated@@652 () Int)
(assert  (and (and (and (and (= (type $generated@@646) ($generated@@191 $generated@@82 $generated@@4)) (= (type $generated@@647) ($generated@@81 $generated@@82 $generated@@83))) (= (type $generated@@649) $generated@@82)) (= (type $generated@@650) $generated@@82)) (= (type $generated@@651) $generated@@82)))
(set-option :timeout 0)
(set-option :rlimit 0)
(assert (not
 (=> (= (ControlFlow 0 0) 15) (let (($generated@@653  (=> (= (ControlFlow 0 2) (- 0 1)) (<= 0 ($generated@@265 10)))))
(let (($generated@@654  (=> (and (= $generated@@139 $generated@@139) (= (ControlFlow 0 4) 2)) $generated@@653)))
(let (($generated@@655  (=> (and (not (= $generated@@139 $generated@@139)) (= (ControlFlow 0 3) 2)) $generated@@653)))
(let (($generated@@656  (and (=> (= (ControlFlow 0 5) 3) $generated@@655) (=> (= (ControlFlow 0 5) 4) $generated@@654))))
(let (($generated@@657  (=> (and (not (= $generated@@139 $generated@@139)) (= (ControlFlow 0 7) 5)) $generated@@656)))
(let (($generated@@658  (=> (and (= $generated@@139 $generated@@139) (= (ControlFlow 0 6) 5)) $generated@@656)))
(let (($generated@@659  (and (=> (= (ControlFlow 0 8) 6) $generated@@658) (=> (= (ControlFlow 0 8) 7) $generated@@657))))
(let (($generated@@660  (=> (and (= $generated@@139 $generated@@139) (= (ControlFlow 0 10) 8)) $generated@@659)))
(let (($generated@@661  (=> (and (not (= $generated@@139 $generated@@139)) (= (ControlFlow 0 9) 8)) $generated@@659)))
(let (($generated@@662  (and (=> (= (ControlFlow 0 11) 9) $generated@@661) (=> (= (ControlFlow 0 11) 10) $generated@@660))))
(let (($generated@@663  (=> (and (not (= $generated@@139 $generated@@139)) (= (ControlFlow 0 13) 11)) $generated@@662)))
(let (($generated@@664  (=> (and (= $generated@@139 $generated@@139) (= (ControlFlow 0 12) 11)) $generated@@662)))
(let (($generated@@665  (=> (= $generated@@646 ($generated@@190 $generated@@139 $generated@@647 $generated@@60 false)) (and (=> (= (ControlFlow 0 14) 12) $generated@@664) (=> (= (ControlFlow 0 14) 13) $generated@@663)))))
(let (($generated@@666  (=> (and ($generated@@158 $generated@@647) ($generated@@648 $generated@@647)) (=> (and (and (and (and ($generated@@141 $generated@@649 ($generated@@153 $generated@@46)) ($generated@@79 $generated@@649 ($generated@@153 $generated@@46) $generated@@647)) true) (and (and ($generated@@141 $generated@@650 ($generated@@153 $generated@@46)) ($generated@@79 $generated@@650 ($generated@@153 $generated@@46) $generated@@647)) true)) (and (and (and ($generated@@141 $generated@@651 ($generated@@163 $generated@@47)) ($generated@@79 $generated@@651 ($generated@@163 $generated@@47) $generated@@647)) true) (and (= 2 $generated@@652) (= (ControlFlow 0 15) 14)))) $generated@@665))))
$generated@@666)))))))))))))))
))
(check-sat)
(pop 1)
; Valid
(get-info :rlimit)
(reset)
(set-option :rlimit 0)
; did a full reset
(reset)
(set-option :print-success false)
(set-info :smt-lib-version 2.6)
(set-option :auto_config false)
(set-option :type_check true)
(set-option :smt.case_split 3)
(set-option :smt.qi.eager_threshold 100)
(set-option :smt.delay_units true)
(set-option :smt.arith.solver 2)
(set-option :smt.mbqi false)
(set-option :model.compact false)
(set-option :model.v2 true)
(set-option :pp.bv_literals false)
; done setting options


(set-info :category "industrial")
(declare-sort |T@U| 0)
(declare-sort |T@T| 0)
(declare-fun real_pow (Real Real) Real)
(declare-fun UOrdering2 (|T@U| |T@U|) Bool)
(declare-fun UOrdering3 (|T@T| |T@U| |T@U|) Bool)
(declare-fun tickleBool (Bool) Bool)
(assert (and (tickleBool true) (tickleBool false)))
(declare-fun $generated (T@U) Int)
(declare-fun $generated@@0 (T@U) Bool)
(declare-fun $generated@@1 (T@T) Int)
(declare-fun $generated@@2 () T@T)
(declare-fun $generated@@3 () T@T)
(declare-fun $generated@@4 () T@T)
(declare-fun $generated@@5 () T@T)
(declare-fun $generated@@6 () T@T)
(declare-fun $generated@@7 () T@T)
(declare-fun $generated@@8 (Int) T@U)
(declare-fun type (T@U) T@T)
(declare-fun $generated@@9 (Real) T@U)
(declare-fun $generated@@10 (T@U) Real)
(declare-fun $generated@@11 (Bool) T@U)
(declare-fun $generated@@12 (RoundingMode) T@U)
(declare-fun $generated@@13 (T@U) RoundingMode)
(declare-fun $generated@@14 (String) T@U)
(declare-fun $generated@@15 (T@U) String)
(declare-fun $generated@@16 ((RegEx String)) T@U)
(declare-fun $generated@@17 (T@U) (RegEx String))
(declare-fun $generated@@44 (T@U T@U) Bool)
(declare-fun $generated@@45 (T@T T@T) T@T)
(declare-fun $generated@@46 () T@T)
(declare-fun $generated@@47 () T@T)
(declare-fun $generated@@48 (T@U T@U) T@U)
(declare-fun $generated@@49 (T@U T@U) T@U)
(declare-fun $generated@@50 () T@U)
(declare-fun $generated@@51 (T@T) T@T)
(declare-fun $generated@@52 (T@T) T@T)
(declare-fun $generated@@53 (T@U T@U T@U) T@U)
(declare-fun $generated@@54 (T@T) T@T)
(declare-fun $generated@@55 (T@T) T@T)
(declare-fun $generated@@56 (T@U T@U T@U) T@U)
(declare-fun $generated@@106 (T@U T@U T@U) T@U)
(declare-fun $generated@@107 (T@U T@U T@U Bool) T@U)
(declare-fun $generated@@108 (T@T T@T) T@T)
(declare-fun $generated@@109 (T@T) T@T)
(declare-fun $generated@@110 (T@T) T@T)
(declare-fun $generated@@111 (T@U T@U T@U T@U) T@U)
(assert  (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (= ($generated@@1 $generated@@2) 0) (= ($generated@@1 $generated@@3) 1)) (= ($generated@@1 $generated@@4) 2)) (= ($generated@@1 $generated@@5) 3)) (= ($generated@@1 $generated@@6) 4)) (= ($generated@@1 $generated@@7) 5)) (forall (($generated@@18 Int) ) (! (= ($generated ($generated@@8 $generated@@18)) $generated@@18)
 :pattern ( ($generated@@8 $generated@@18))
))) (forall (($generated@@19 T@U) ) (!  (=> (= (type $generated@@19) $generated@@2) (= ($generated@@8 ($generated $generated@@19)) $generated@@19))
 :pattern ( ($generated $generated@@19))
))) (forall (($generated@@20 Int) ) (! (= (type ($generated@@8 $generated@@20)) $generated@@2)
 :pattern ( ($generated@@8 $generated@@20))
))) (forall (($generated@@21 Real) ) (! (= ($generated@@10 ($generated@@9 $generated@@21)) $generated@@21)
 :pattern ( ($generated@@9 $generated@@21))
))) (forall (($generated@@22 T@U) ) (!  (=> (= (type $generated@@22) $generated@@3) (= ($generated@@9 ($generated@@10 $generated@@22)) $generated@@22))
 :pattern ( ($generated@@10 $generated@@22))
))) (forall (($generated@@23 Real) ) (! (= (type ($generated@@9 $generated@@23)) $generated@@3)
 :pattern ( ($generated@@9 $generated@@23))
))) (forall (($generated@@24 Bool) ) (! (= ($generated@@0 ($generated@@11 $generated@@24)) $generated@@24)
 :pattern ( ($generated@@11 $generated@@24))
))) (forall (($generated@@25 T@U) ) (!  (=> (= (type $generated@@25) $generated@@4) (= ($generated@@11 ($generated@@0 $generated@@25)) $generated@@25))
 :pattern ( ($generated@@0 $generated@@25))
))) (forall (($generated@@26 Bool) ) (! (= (type ($generated@@11 $generated@@26)) $generated@@4)
 :pattern ( ($generated@@11 $generated@@26))
))) (forall (($generated@@27 RoundingMode) ) (! (= ($generated@@13 ($generated@@12 $generated@@27)) $generated@@27)
 :pattern ( ($generated@@12 $generated@@27))
))) (forall (($generated@@28 T@U) ) (!  (=> (= (type $generated@@28) $generated@@5) (= ($generated@@12 ($generated@@13 $generated@@28)) $generated@@28))
 :pattern ( ($generated@@13 $generated@@28))
))) (forall (($generated@@29 RoundingMode) ) (! (= (type ($generated@@12 $generated@@29)) $generated@@5)
 :pattern ( ($generated@@12 $generated@@29))
))) (forall (($generated@@30 String) ) (! (= ($generated@@15 ($generated@@14 $generated@@30)) $generated@@30)
 :pattern ( ($generated@@14 $generated@@30))
))) (forall (($generated@@31 T@U) ) (!  (=> (= (type $generated@@31) $generated@@6) (= ($generated@@14 ($generated@@15 $generated@@31)) $generated@@31))
 :pattern ( ($generated@@15 $generated@@31))
))) (forall (($generated@@32 String) ) (! (= (type ($generated@@14 $generated@@32)) $generated@@6)
 :pattern ( ($generated@@14 $generated@@32))
))) (forall (($generated@@33 (RegEx String)) ) (! (= ($generated@@17 ($generated@@16 $generated@@33)) $generated@@33)
 :pattern ( ($generated@@16 $generated@@33))
))) (forall (($generated@@34 T@U) ) (!  (=> (= (type $generated@@34) $generated@@7) (= ($generated@@16 ($generated@@17 $generated@@34)) $generated@@34))
 :pattern ( ($generated@@17 $generated@@34))
))) (forall (($generated@@35 (RegEx String)) ) (! (= (type ($generated@@16 $generated@@35)) $generated@@7)
 :pattern ( ($generated@@16 $generated@@35))
))))
(assert (forall (($generated@@36 T@U) ) (! (UOrdering2 $generated@@36 $generated@@36)
 :no-pattern ($generated $generated@@36)
 :no-pattern ($generated@@0 $generated@@36)
)))
(assert (forall (($generated@@37 T@U) ($generated@@38 T@U) ($generated@@39 T@U) ) (! (let (($generated@@40 (type $generated@@37)))
 (=> (and (and (= (type $generated@@38) $generated@@40) (= (type $generated@@39) $generated@@40)) (and (UOrdering2 $generated@@37 $generated@@38) (UOrdering2 $generated@@38 $generated@@39))) (UOrdering2 $generated@@37 $generated@@39)))
 :pattern ( (UOrdering2 $generated@@37 $generated@@38) (UOrdering2 $generated@@38 $generated@@39))
)))
(assert (forall (($generated@@41 T@U) ($generated@@42 T@U) ) (! (let (($generated@@43 (type $generated@@41)))
 (=> (= (type $generated@@42) $generated@@43) (=> (and (UOrdering2 $generated@@41 $generated@@42) (UOrdering2 $generated@@42 $generated@@41)) (= $generated@@41 $generated@@42))))
 :pattern ( (UOrdering2 $generated@@41 $generated@@42) (UOrdering2 $generated@@42 $generated@@41))
)))
(assert  (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (forall (($generated@@57 T@T) ($generated@@58 T@T) ) (= ($generated@@1 ($generated@@45 $generated@@57 $generated@@58)) 6)) (forall (($generated@@59 T@T) ($generated@@60 T@T) ) (! (= ($generated@@51 ($generated@@45 $generated@@59 $generated@@60)) $generated@@59)
 :pattern ( ($generated@@45 $generated@@59 $generated@@60))
))) (forall (($generated@@61 T@T) ($generated@@62 T@T) ) (! (= ($generated@@52 ($generated@@45 $generated@@61 $generated@@62)) $generated@@62)
 :pattern ( ($generated@@45 $generated@@61 $generated@@62))
))) (forall (($generated@@63 T@U) ($generated@@64 T@U) ) (! (let (($generated@@65 ($generated@@52 (type $generated@@63))))
(= (type ($generated@@49 $generated@@63 $generated@@64)) $generated@@65))
 :pattern ( ($generated@@49 $generated@@63 $generated@@64))
))) (forall (($generated@@66 T@U) ($generated@@67 T@U) ($generated@@68 T@U) ) (! (let (($generated@@69 (type $generated@@68)))
(let (($generated@@70 (type $generated@@67)))
(= (type ($generated@@53 $generated@@66 $generated@@67 $generated@@68)) ($generated@@45 $generated@@70 $generated@@69))))
 :pattern ( ($generated@@53 $generated@@66 $generated@@67 $generated@@68))
))) (forall (($generated@@71 T@U) ($generated@@72 T@U) ($generated@@73 T@U) ) (! (let (($generated@@74 ($generated@@52 (type $generated@@71))))
 (=> (= (type $generated@@73) $generated@@74) (= ($generated@@49 ($generated@@53 $generated@@71 $generated@@72 $generated@@73) $generated@@72) $generated@@73)))
 :weight 0
))) (and (forall (($generated@@75 T@U) ($generated@@76 T@U) ($generated@@77 T@U) ($generated@@78 T@U) ) (!  (or (= $generated@@77 $generated@@78) (= ($generated@@49 ($generated@@53 $generated@@76 $generated@@77 $generated@@75) $generated@@78) ($generated@@49 $generated@@76 $generated@@78)))
 :weight 0
)) (forall (($generated@@79 T@U) ($generated@@80 T@U) ($generated@@81 T@U) ($generated@@82 T@U) ) (!  (or true (= ($generated@@49 ($generated@@53 $generated@@80 $generated@@81 $generated@@79) $generated@@82) ($generated@@49 $generated@@80 $generated@@82)))
 :weight 0
)))) (= ($generated@@1 $generated@@46) 7)) (forall (($generated@@83 T@T) ) (= ($generated@@1 ($generated@@54 $generated@@83)) 8))) (forall (($generated@@84 T@T) ) (! (= ($generated@@55 ($generated@@54 $generated@@84)) $generated@@84)
 :pattern ( ($generated@@54 $generated@@84))
))) (forall (($generated@@85 T@U) ($generated@@86 T@U) ) (! (let (($generated@@87 ($generated@@55 (type $generated@@86))))
(= (type ($generated@@48 $generated@@85 $generated@@86)) $generated@@87))
 :pattern ( ($generated@@48 $generated@@85 $generated@@86))
))) (= ($generated@@1 $generated@@47) 9)) (forall (($generated@@88 T@U) ($generated@@89 T@U) ($generated@@90 T@U) ) (! (= (type ($generated@@56 $generated@@88 $generated@@89 $generated@@90)) $generated@@47)
 :pattern ( ($generated@@56 $generated@@88 $generated@@89 $generated@@90))
))) (forall (($generated@@91 T@U) ($generated@@92 T@U) ($generated@@93 T@U) ) (! (let (($generated@@94 ($generated@@55 (type $generated@@92))))
 (=> (= (type $generated@@93) $generated@@94) (= ($generated@@48 ($generated@@56 $generated@@91 $generated@@92 $generated@@93) $generated@@92) $generated@@93)))
 :weight 0
))) (and (forall (($generated@@95 T@U) ($generated@@96 T@U) ($generated@@97 T@U) ($generated@@98 T@U) ) (!  (or (= $generated@@97 $generated@@98) (= ($generated@@48 ($generated@@56 $generated@@96 $generated@@97 $generated@@95) $generated@@98) ($generated@@48 $generated@@96 $generated@@98)))
 :weight 0
)) (forall (($generated@@99 T@U) ($generated@@100 T@U) ($generated@@101 T@U) ($generated@@102 T@U) ) (!  (or true (= ($generated@@48 ($generated@@56 $generated@@100 $generated@@101 $generated@@99) $generated@@102) ($generated@@48 $generated@@100 $generated@@102)))
 :weight 0
)))) (= (type $generated@@50) ($generated@@54 $generated@@4))))
(assert (forall (($generated@@103 T@U) ($generated@@104 T@U) ) (!  (=> (and (and (= (type $generated@@103) ($generated@@45 $generated@@46 $generated@@47)) (= (type $generated@@104) ($generated@@45 $generated@@46 $generated@@47))) ($generated@@44 $generated@@103 $generated@@104)) (forall (($generated@@105 T@U) ) (!  (=> (and (= (type $generated@@105) $generated@@46) ($generated@@0 ($generated@@48 ($generated@@49 $generated@@103 $generated@@105) $generated@@50))) ($generated@@0 ($generated@@48 ($generated@@49 $generated@@104 $generated@@105) $generated@@50)))
 :pattern ( ($generated@@48 ($generated@@49 $generated@@104 $generated@@105) $generated@@50))
)))
 :pattern ( ($generated@@44 $generated@@103 $generated@@104))
)))
(assert  (and (and (and (and (and (and (and (forall (($generated@@112 T@T) ($generated@@113 T@T) ) (= ($generated@@1 ($generated@@108 $generated@@112 $generated@@113)) 10)) (forall (($generated@@114 T@T) ($generated@@115 T@T) ) (! (= ($generated@@109 ($generated@@108 $generated@@114 $generated@@115)) $generated@@114)
 :pattern ( ($generated@@108 $generated@@114 $generated@@115))
))) (forall (($generated@@116 T@T) ($generated@@117 T@T) ) (! (= ($generated@@110 ($generated@@108 $generated@@116 $generated@@117)) $generated@@117)
 :pattern ( ($generated@@108 $generated@@116 $generated@@117))
))) (forall (($generated@@118 T@U) ($generated@@119 T@U) ($generated@@120 T@U) ) (! (let (($generated@@121 ($generated@@110 (type $generated@@118))))
(= (type ($generated@@106 $generated@@118 $generated@@119 $generated@@120)) $generated@@121))
 :pattern ( ($generated@@106 $generated@@118 $generated@@119 $generated@@120))
))) (forall (($generated@@122 T@U) ($generated@@123 T@U) ($generated@@124 T@U) ($generated@@125 T@U) ) (! (let (($generated@@126 (type $generated@@125)))
(let (($generated@@127 (type $generated@@123)))
(= (type ($generated@@111 $generated@@122 $generated@@123 $generated@@124 $generated@@125)) ($generated@@108 $generated@@127 $generated@@126))))
 :pattern ( ($generated@@111 $generated@@122 $generated@@123 $generated@@124 $generated@@125))
))) (forall (($generated@@128 T@U) ($generated@@129 T@U) ($generated@@130 T@U) ($generated@@131 T@U) ) (! (let (($generated@@132 ($generated@@110 (type $generated@@128))))
 (=> (= (type $generated@@131) $generated@@132) (= ($generated@@106 ($generated@@111 $generated@@128 $generated@@129 $generated@@130 $generated@@131) $generated@@129 $generated@@130) $generated@@131)))
 :weight 0
))) (and (and (forall (($generated@@133 T@U) ($generated@@134 T@U) ($generated@@135 T@U) ($generated@@136 T@U) ($generated@@137 T@U) ($generated@@138 T@U) ) (!  (or (= $generated@@135 $generated@@137) (= ($generated@@106 ($generated@@111 $generated@@134 $generated@@135 $generated@@136 $generated@@133) $generated@@137 $generated@@138) ($generated@@106 $generated@@134 $generated@@137 $generated@@138)))
 :weight 0
)) (forall (($generated@@139 T@U) ($generated@@140 T@U) ($generated@@141 T@U) ($generated@@142 T@U) ($generated@@143 T@U) ($generated@@144 T@U) ) (!  (or (= $generated@@142 $generated@@144) (= ($generated@@106 ($generated@@111 $generated@@140 $generated@@141 $generated@@142 $generated@@139) $generated@@143 $generated@@144) ($generated@@106 $generated@@140 $generated@@143 $generated@@144)))
 :weight 0
))) (forall (($generated@@145 T@U) ($generated@@146 T@U) ($generated@@147 T@U) ($generated@@148 T@U) ($generated@@149 T@U) ($generated@@150 T@U) ) (!  (or true (= ($generated@@106 ($generated@@111 $generated@@146 $generated@@147 $generated@@148 $generated@@145) $generated@@149 $generated@@150) ($generated@@106 $generated@@146 $generated@@149 $generated@@150)))
 :weight 0
)))) (forall (($generated@@151 T@U) ($generated@@152 T@U) ($generated@@153 T@U) ($generated@@154 Bool) ) (! (= (type ($generated@@107 $generated@@151 $generated@@152 $generated@@153 $generated@@154)) ($generated@@108 $generated@@46 $generated@@4))
 :pattern ( ($generated@@107 $generated@@151 $generated@@152 $generated@@153 $generated@@154))
))))
(assert (forall (($generated@@155 T@U) ($generated@@156 T@U) ($generated@@157 T@U) ($generated@@158 Bool) ($generated@@159 T@U) ($generated@@160 T@U) ) (! (let (($generated@@161 ($generated@@55 (type $generated@@160))))
 (=> (and (and (and (and (= (type $generated@@155) $generated@@46) (= (type $generated@@156) ($generated@@45 $generated@@46 $generated@@47))) (= (type $generated@@157) ($generated@@54 $generated@@4))) (= (type $generated@@159) $generated@@46)) (= (type $generated@@160) ($generated@@54 $generated@@161))) (= ($generated@@0 ($generated@@106 ($generated@@107 $generated@@155 $generated@@156 $generated@@157 $generated@@158) $generated@@159 $generated@@160))  (=> (and (not (= $generated@@159 $generated@@155)) ($generated@@0 ($generated@@48 ($generated@@49 $generated@@156 $generated@@159) $generated@@157))) $generated@@158))))
 :pattern ( ($generated@@106 ($generated@@107 $generated@@155 $generated@@156 $generated@@157 $generated@@158) $generated@@159 $generated@@160))
)))
(assert (forall (($generated@@162 T@U) ($generated@@163 T@U) ($generated@@164 T@U) ) (!  (=> (and (and (and (and (= (type $generated@@162) ($generated@@45 $generated@@46 $generated@@47)) (= (type $generated@@163) ($generated@@45 $generated@@46 $generated@@47))) (= (type $generated@@164) ($generated@@45 $generated@@46 $generated@@47))) (not (= $generated@@162 $generated@@164))) (and ($generated@@44 $generated@@162 $generated@@163) ($generated@@44 $generated@@163 $generated@@164))) ($generated@@44 $generated@@162 $generated@@164))
 :pattern ( ($generated@@44 $generated@@162 $generated@@163) ($generated@@44 $generated@@163 $generated@@164))
)))
(push 1)
(declare-fun ControlFlow (Int Int) Int)
(declare-fun $generated@@165 () Int)
(declare-fun $generated@@166 () Int)
(declare-fun $generated@@167 () Int)
(declare-fun $generated@@168 () Int)
(declare-fun $generated@@169 () T@U)
(declare-fun $generated@@170 () T@U)
(declare-fun $generated@@171 () T@U)
(declare-fun $generated@@172 (T@U) Bool)
(declare-fun $generated@@173 (T@U) Bool)
(declare-fun $generated@@174 () Int)
(assert  (and (and (= (type $generated@@169) ($generated@@108 $generated@@46 $generated@@4)) (= (type $generated@@170) $generated@@46)) (= (type $generated@@171) ($generated@@45 $generated@@46 $generated@@47))))
(set-option :timeout 0)
(set-option :rlimit 0)
(assert (not
 (=> (= (ControlFlow 0 0) 12) (let (($generated@@175 true))
(let (($generated@@176  (=> (and (< $generated@@165 $generated@@166) (< $generated@@166 $generated@@167)) (and (=> (= (ControlFlow 0 3) (- 0 5)) (or (<= 0 (- $generated@@167 $generated@@165)) (= (- $generated@@167 $generated@@166) (- $generated@@167 $generated@@165)))) (=> (or (<= 0 (- $generated@@167 $generated@@165)) (= (- $generated@@167 $generated@@166) (- $generated@@167 $generated@@165))) (and (=> (= (ControlFlow 0 3) (- 0 4)) (< (- $generated@@167 $generated@@166) (- $generated@@167 $generated@@165))) (=> (< (- $generated@@167 $generated@@166) (- $generated@@167 $generated@@165)) (=> (= (ControlFlow 0 3) (- 0 2)) (< $generated@@166 $generated@@167)))))))))
(let (($generated@@177  (and (=> (= (ControlFlow 0 7) 3) $generated@@176) (=> (= (ControlFlow 0 7) 6) $generated@@175))))
(let (($generated@@178  (=> (and (<= $generated@@168 $generated@@165) (= (ControlFlow 0 9) 7)) $generated@@177)))
(let (($generated@@179  (=> (and (< $generated@@165 $generated@@168) (= (ControlFlow 0 8) 7)) $generated@@177)))
(let (($generated@@180  (and (=> (= (ControlFlow 0 10) 8) $generated@@179) (=> (= (ControlFlow 0 10) 9) $generated@@178))))
(let (($generated@@181 true))
(let (($generated@@182  (=> (= $generated@@169 ($generated@@107 $generated@@170 $generated@@171 $generated@@50 false)) (and (=> (= (ControlFlow 0 11) 10) $generated@@180) (=> (= (ControlFlow 0 11) 1) $generated@@181)))))
(let (($generated@@183  (=> (and (and (and ($generated@@172 $generated@@171) ($generated@@173 $generated@@171)) (= 0 $generated@@174)) (and (< $generated@@165 $generated@@167) (= (ControlFlow 0 12) 11))) $generated@@182)))
$generated@@183))))))))))
))
(check-sat)
(pop 1)
; Valid
(get-info :rlimit)
(reset)
(set-option :rlimit 0)
; did a full reset
(reset)
(set-option :print-success false)
(set-info :smt-lib-version 2.6)
(set-option :auto_config false)
(set-option :type_check true)
(set-option :smt.case_split 3)
(set-option :smt.qi.eager_threshold 100)
(set-option :smt.delay_units true)
(set-option :smt.arith.solver 2)
(set-option :smt.mbqi false)
(set-option :model.compact false)
(set-option :model.v2 true)
(set-option :pp.bv_literals false)
; done setting options


(set-info :category "industrial")
(declare-sort |T@U| 0)
(declare-sort |T@T| 0)
(declare-fun real_pow (Real Real) Real)
(declare-fun UOrdering2 (|T@U| |T@U|) Bool)
(declare-fun UOrdering3 (|T@T| |T@U| |T@U|) Bool)
(declare-fun tickleBool (Bool) Bool)
(assert (and (tickleBool true) (tickleBool false)))
(declare-fun $generated (T@U) Int)
(declare-fun $generated@@0 (T@U) Bool)
(declare-fun $generated@@1 (T@T) Int)
(declare-fun $generated@@2 () T@T)
(declare-fun $generated@@3 () T@T)
(declare-fun $generated@@4 () T@T)
(declare-fun $generated@@5 () T@T)
(declare-fun $generated@@6 () T@T)
(declare-fun $generated@@7 () T@T)
(declare-fun $generated@@8 (Int) T@U)
(declare-fun type (T@U) T@T)
(declare-fun $generated@@9 (Real) T@U)
(declare-fun $generated@@10 (T@U) Real)
(declare-fun $generated@@11 (Bool) T@U)
(declare-fun $generated@@12 (RoundingMode) T@U)
(declare-fun $generated@@13 (T@U) RoundingMode)
(declare-fun $generated@@14 (String) T@U)
(declare-fun $generated@@15 (T@U) String)
(declare-fun $generated@@16 ((RegEx String)) T@U)
(declare-fun $generated@@17 (T@U) (RegEx String))
(declare-fun $generated@@44 (T@U T@U) Bool)
(declare-fun $generated@@45 (T@T T@T) T@T)
(declare-fun $generated@@46 () T@T)
(declare-fun $generated@@47 () T@T)
(declare-fun $generated@@48 (T@U T@U) T@U)
(declare-fun $generated@@49 (T@U T@U) T@U)
(declare-fun $generated@@50 () T@U)
(declare-fun $generated@@51 (T@T) T@T)
(declare-fun $generated@@52 (T@T) T@T)
(declare-fun $generated@@53 (T@U T@U T@U) T@U)
(declare-fun $generated@@54 (T@T) T@T)
(declare-fun $generated@@55 (T@T) T@T)
(declare-fun $generated@@56 (T@U T@U T@U) T@U)
(declare-fun $generated@@106 (T@U T@U T@U) T@U)
(declare-fun $generated@@107 (T@U T@U T@U Bool) T@U)
(declare-fun $generated@@108 (T@T T@T) T@T)
(declare-fun $generated@@109 (T@T) T@T)
(declare-fun $generated@@110 (T@T) T@T)
(declare-fun $generated@@111 (T@U T@U T@U T@U) T@U)
(assert  (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (= ($generated@@1 $generated@@2) 0) (= ($generated@@1 $generated@@3) 1)) (= ($generated@@1 $generated@@4) 2)) (= ($generated@@1 $generated@@5) 3)) (= ($generated@@1 $generated@@6) 4)) (= ($generated@@1 $generated@@7) 5)) (forall (($generated@@18 Int) ) (! (= ($generated ($generated@@8 $generated@@18)) $generated@@18)
 :pattern ( ($generated@@8 $generated@@18))
))) (forall (($generated@@19 T@U) ) (!  (=> (= (type $generated@@19) $generated@@2) (= ($generated@@8 ($generated $generated@@19)) $generated@@19))
 :pattern ( ($generated $generated@@19))
))) (forall (($generated@@20 Int) ) (! (= (type ($generated@@8 $generated@@20)) $generated@@2)
 :pattern ( ($generated@@8 $generated@@20))
))) (forall (($generated@@21 Real) ) (! (= ($generated@@10 ($generated@@9 $generated@@21)) $generated@@21)
 :pattern ( ($generated@@9 $generated@@21))
))) (forall (($generated@@22 T@U) ) (!  (=> (= (type $generated@@22) $generated@@3) (= ($generated@@9 ($generated@@10 $generated@@22)) $generated@@22))
 :pattern ( ($generated@@10 $generated@@22))
))) (forall (($generated@@23 Real) ) (! (= (type ($generated@@9 $generated@@23)) $generated@@3)
 :pattern ( ($generated@@9 $generated@@23))
))) (forall (($generated@@24 Bool) ) (! (= ($generated@@0 ($generated@@11 $generated@@24)) $generated@@24)
 :pattern ( ($generated@@11 $generated@@24))
))) (forall (($generated@@25 T@U) ) (!  (=> (= (type $generated@@25) $generated@@4) (= ($generated@@11 ($generated@@0 $generated@@25)) $generated@@25))
 :pattern ( ($generated@@0 $generated@@25))
))) (forall (($generated@@26 Bool) ) (! (= (type ($generated@@11 $generated@@26)) $generated@@4)
 :pattern ( ($generated@@11 $generated@@26))
))) (forall (($generated@@27 RoundingMode) ) (! (= ($generated@@13 ($generated@@12 $generated@@27)) $generated@@27)
 :pattern ( ($generated@@12 $generated@@27))
))) (forall (($generated@@28 T@U) ) (!  (=> (= (type $generated@@28) $generated@@5) (= ($generated@@12 ($generated@@13 $generated@@28)) $generated@@28))
 :pattern ( ($generated@@13 $generated@@28))
))) (forall (($generated@@29 RoundingMode) ) (! (= (type ($generated@@12 $generated@@29)) $generated@@5)
 :pattern ( ($generated@@12 $generated@@29))
))) (forall (($generated@@30 String) ) (! (= ($generated@@15 ($generated@@14 $generated@@30)) $generated@@30)
 :pattern ( ($generated@@14 $generated@@30))
))) (forall (($generated@@31 T@U) ) (!  (=> (= (type $generated@@31) $generated@@6) (= ($generated@@14 ($generated@@15 $generated@@31)) $generated@@31))
 :pattern ( ($generated@@15 $generated@@31))
))) (forall (($generated@@32 String) ) (! (= (type ($generated@@14 $generated@@32)) $generated@@6)
 :pattern ( ($generated@@14 $generated@@32))
))) (forall (($generated@@33 (RegEx String)) ) (! (= ($generated@@17 ($generated@@16 $generated@@33)) $generated@@33)
 :pattern ( ($generated@@16 $generated@@33))
))) (forall (($generated@@34 T@U) ) (!  (=> (= (type $generated@@34) $generated@@7) (= ($generated@@16 ($generated@@17 $generated@@34)) $generated@@34))
 :pattern ( ($generated@@17 $generated@@34))
))) (forall (($generated@@35 (RegEx String)) ) (! (= (type ($generated@@16 $generated@@35)) $generated@@7)
 :pattern ( ($generated@@16 $generated@@35))
))))
(assert (forall (($generated@@36 T@U) ) (! (UOrdering2 $generated@@36 $generated@@36)
 :no-pattern ($generated $generated@@36)
 :no-pattern ($generated@@0 $generated@@36)
)))
(assert (forall (($generated@@37 T@U) ($generated@@38 T@U) ($generated@@39 T@U) ) (! (let (($generated@@40 (type $generated@@37)))
 (=> (and (and (= (type $generated@@38) $generated@@40) (= (type $generated@@39) $generated@@40)) (and (UOrdering2 $generated@@37 $generated@@38) (UOrdering2 $generated@@38 $generated@@39))) (UOrdering2 $generated@@37 $generated@@39)))
 :pattern ( (UOrdering2 $generated@@37 $generated@@38) (UOrdering2 $generated@@38 $generated@@39))
)))
(assert (forall (($generated@@41 T@U) ($generated@@42 T@U) ) (! (let (($generated@@43 (type $generated@@41)))
 (=> (= (type $generated@@42) $generated@@43) (=> (and (UOrdering2 $generated@@41 $generated@@42) (UOrdering2 $generated@@42 $generated@@41)) (= $generated@@41 $generated@@42))))
 :pattern ( (UOrdering2 $generated@@41 $generated@@42) (UOrdering2 $generated@@42 $generated@@41))
)))
(assert  (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (forall (($generated@@57 T@T) ($generated@@58 T@T) ) (= ($generated@@1 ($generated@@45 $generated@@57 $generated@@58)) 6)) (forall (($generated@@59 T@T) ($generated@@60 T@T) ) (! (= ($generated@@51 ($generated@@45 $generated@@59 $generated@@60)) $generated@@59)
 :pattern ( ($generated@@45 $generated@@59 $generated@@60))
))) (forall (($generated@@61 T@T) ($generated@@62 T@T) ) (! (= ($generated@@52 ($generated@@45 $generated@@61 $generated@@62)) $generated@@62)
 :pattern ( ($generated@@45 $generated@@61 $generated@@62))
))) (forall (($generated@@63 T@U) ($generated@@64 T@U) ) (! (let (($generated@@65 ($generated@@52 (type $generated@@63))))
(= (type ($generated@@49 $generated@@63 $generated@@64)) $generated@@65))
 :pattern ( ($generated@@49 $generated@@63 $generated@@64))
))) (forall (($generated@@66 T@U) ($generated@@67 T@U) ($generated@@68 T@U) ) (! (let (($generated@@69 (type $generated@@68)))
(let (($generated@@70 (type $generated@@67)))
(= (type ($generated@@53 $generated@@66 $generated@@67 $generated@@68)) ($generated@@45 $generated@@70 $generated@@69))))
 :pattern ( ($generated@@53 $generated@@66 $generated@@67 $generated@@68))
))) (forall (($generated@@71 T@U) ($generated@@72 T@U) ($generated@@73 T@U) ) (! (let (($generated@@74 ($generated@@52 (type $generated@@71))))
 (=> (= (type $generated@@73) $generated@@74) (= ($generated@@49 ($generated@@53 $generated@@71 $generated@@72 $generated@@73) $generated@@72) $generated@@73)))
 :weight 0
))) (and (forall (($generated@@75 T@U) ($generated@@76 T@U) ($generated@@77 T@U) ($generated@@78 T@U) ) (!  (or (= $generated@@77 $generated@@78) (= ($generated@@49 ($generated@@53 $generated@@76 $generated@@77 $generated@@75) $generated@@78) ($generated@@49 $generated@@76 $generated@@78)))
 :weight 0
)) (forall (($generated@@79 T@U) ($generated@@80 T@U) ($generated@@81 T@U) ($generated@@82 T@U) ) (!  (or true (= ($generated@@49 ($generated@@53 $generated@@80 $generated@@81 $generated@@79) $generated@@82) ($generated@@49 $generated@@80 $generated@@82)))
 :weight 0
)))) (= ($generated@@1 $generated@@46) 7)) (forall (($generated@@83 T@T) ) (= ($generated@@1 ($generated@@54 $generated@@83)) 8))) (forall (($generated@@84 T@T) ) (! (= ($generated@@55 ($generated@@54 $generated@@84)) $generated@@84)
 :pattern ( ($generated@@54 $generated@@84))
))) (forall (($generated@@85 T@U) ($generated@@86 T@U) ) (! (let (($generated@@87 ($generated@@55 (type $generated@@86))))
(= (type ($generated@@48 $generated@@85 $generated@@86)) $generated@@87))
 :pattern ( ($generated@@48 $generated@@85 $generated@@86))
))) (= ($generated@@1 $generated@@47) 9)) (forall (($generated@@88 T@U) ($generated@@89 T@U) ($generated@@90 T@U) ) (! (= (type ($generated@@56 $generated@@88 $generated@@89 $generated@@90)) $generated@@47)
 :pattern ( ($generated@@56 $generated@@88 $generated@@89 $generated@@90))
))) (forall (($generated@@91 T@U) ($generated@@92 T@U) ($generated@@93 T@U) ) (! (let (($generated@@94 ($generated@@55 (type $generated@@92))))
 (=> (= (type $generated@@93) $generated@@94) (= ($generated@@48 ($generated@@56 $generated@@91 $generated@@92 $generated@@93) $generated@@92) $generated@@93)))
 :weight 0
))) (and (forall (($generated@@95 T@U) ($generated@@96 T@U) ($generated@@97 T@U) ($generated@@98 T@U) ) (!  (or (= $generated@@97 $generated@@98) (= ($generated@@48 ($generated@@56 $generated@@96 $generated@@97 $generated@@95) $generated@@98) ($generated@@48 $generated@@96 $generated@@98)))
 :weight 0
)) (forall (($generated@@99 T@U) ($generated@@100 T@U) ($generated@@101 T@U) ($generated@@102 T@U) ) (!  (or true (= ($generated@@48 ($generated@@56 $generated@@100 $generated@@101 $generated@@99) $generated@@102) ($generated@@48 $generated@@100 $generated@@102)))
 :weight 0
)))) (= (type $generated@@50) ($generated@@54 $generated@@4))))
(assert (forall (($generated@@103 T@U) ($generated@@104 T@U) ) (!  (=> (and (and (= (type $generated@@103) ($generated@@45 $generated@@46 $generated@@47)) (= (type $generated@@104) ($generated@@45 $generated@@46 $generated@@47))) ($generated@@44 $generated@@103 $generated@@104)) (forall (($generated@@105 T@U) ) (!  (=> (and (= (type $generated@@105) $generated@@46) ($generated@@0 ($generated@@48 ($generated@@49 $generated@@103 $generated@@105) $generated@@50))) ($generated@@0 ($generated@@48 ($generated@@49 $generated@@104 $generated@@105) $generated@@50)))
 :pattern ( ($generated@@48 ($generated@@49 $generated@@104 $generated@@105) $generated@@50))
)))
 :pattern ( ($generated@@44 $generated@@103 $generated@@104))
)))
(assert  (and (and (and (and (and (and (and (forall (($generated@@112 T@T) ($generated@@113 T@T) ) (= ($generated@@1 ($generated@@108 $generated@@112 $generated@@113)) 10)) (forall (($generated@@114 T@T) ($generated@@115 T@T) ) (! (= ($generated@@109 ($generated@@108 $generated@@114 $generated@@115)) $generated@@114)
 :pattern ( ($generated@@108 $generated@@114 $generated@@115))
))) (forall (($generated@@116 T@T) ($generated@@117 T@T) ) (! (= ($generated@@110 ($generated@@108 $generated@@116 $generated@@117)) $generated@@117)
 :pattern ( ($generated@@108 $generated@@116 $generated@@117))
))) (forall (($generated@@118 T@U) ($generated@@119 T@U) ($generated@@120 T@U) ) (! (let (($generated@@121 ($generated@@110 (type $generated@@118))))
(= (type ($generated@@106 $generated@@118 $generated@@119 $generated@@120)) $generated@@121))
 :pattern ( ($generated@@106 $generated@@118 $generated@@119 $generated@@120))
))) (forall (($generated@@122 T@U) ($generated@@123 T@U) ($generated@@124 T@U) ($generated@@125 T@U) ) (! (let (($generated@@126 (type $generated@@125)))
(let (($generated@@127 (type $generated@@123)))
(= (type ($generated@@111 $generated@@122 $generated@@123 $generated@@124 $generated@@125)) ($generated@@108 $generated@@127 $generated@@126))))
 :pattern ( ($generated@@111 $generated@@122 $generated@@123 $generated@@124 $generated@@125))
))) (forall (($generated@@128 T@U) ($generated@@129 T@U) ($generated@@130 T@U) ($generated@@131 T@U) ) (! (let (($generated@@132 ($generated@@110 (type $generated@@128))))
 (=> (= (type $generated@@131) $generated@@132) (= ($generated@@106 ($generated@@111 $generated@@128 $generated@@129 $generated@@130 $generated@@131) $generated@@129 $generated@@130) $generated@@131)))
 :weight 0
))) (and (and (forall (($generated@@133 T@U) ($generated@@134 T@U) ($generated@@135 T@U) ($generated@@136 T@U) ($generated@@137 T@U) ($generated@@138 T@U) ) (!  (or (= $generated@@135 $generated@@137) (= ($generated@@106 ($generated@@111 $generated@@134 $generated@@135 $generated@@136 $generated@@133) $generated@@137 $generated@@138) ($generated@@106 $generated@@134 $generated@@137 $generated@@138)))
 :weight 0
)) (forall (($generated@@139 T@U) ($generated@@140 T@U) ($generated@@141 T@U) ($generated@@142 T@U) ($generated@@143 T@U) ($generated@@144 T@U) ) (!  (or (= $generated@@142 $generated@@144) (= ($generated@@106 ($generated@@111 $generated@@140 $generated@@141 $generated@@142 $generated@@139) $generated@@143 $generated@@144) ($generated@@106 $generated@@140 $generated@@143 $generated@@144)))
 :weight 0
))) (forall (($generated@@145 T@U) ($generated@@146 T@U) ($generated@@147 T@U) ($generated@@148 T@U) ($generated@@149 T@U) ($generated@@150 T@U) ) (!  (or true (= ($generated@@106 ($generated@@111 $generated@@146 $generated@@147 $generated@@148 $generated@@145) $generated@@149 $generated@@150) ($generated@@106 $generated@@146 $generated@@149 $generated@@150)))
 :weight 0
)))) (forall (($generated@@151 T@U) ($generated@@152 T@U) ($generated@@153 T@U) ($generated@@154 Bool) ) (! (= (type ($generated@@107 $generated@@151 $generated@@152 $generated@@153 $generated@@154)) ($generated@@108 $generated@@46 $generated@@4))
 :pattern ( ($generated@@107 $generated@@151 $generated@@152 $generated@@153 $generated@@154))
))))
(assert (forall (($generated@@155 T@U) ($generated@@156 T@U) ($generated@@157 T@U) ($generated@@158 Bool) ($generated@@159 T@U) ($generated@@160 T@U) ) (! (let (($generated@@161 ($generated@@55 (type $generated@@160))))
 (=> (and (and (and (and (= (type $generated@@155) $generated@@46) (= (type $generated@@156) ($generated@@45 $generated@@46 $generated@@47))) (= (type $generated@@157) ($generated@@54 $generated@@4))) (= (type $generated@@159) $generated@@46)) (= (type $generated@@160) ($generated@@54 $generated@@161))) (= ($generated@@0 ($generated@@106 ($generated@@107 $generated@@155 $generated@@156 $generated@@157 $generated@@158) $generated@@159 $generated@@160))  (=> (and (not (= $generated@@159 $generated@@155)) ($generated@@0 ($generated@@48 ($generated@@49 $generated@@156 $generated@@159) $generated@@157))) $generated@@158))))
 :pattern ( ($generated@@106 ($generated@@107 $generated@@155 $generated@@156 $generated@@157 $generated@@158) $generated@@159 $generated@@160))
)))
(assert (forall (($generated@@162 T@U) ($generated@@163 T@U) ($generated@@164 T@U) ) (!  (=> (and (and (and (and (= (type $generated@@162) ($generated@@45 $generated@@46 $generated@@47)) (= (type $generated@@163) ($generated@@45 $generated@@46 $generated@@47))) (= (type $generated@@164) ($generated@@45 $generated@@46 $generated@@47))) (not (= $generated@@162 $generated@@164))) (and ($generated@@44 $generated@@162 $generated@@163) ($generated@@44 $generated@@163 $generated@@164))) ($generated@@44 $generated@@162 $generated@@164))
 :pattern ( ($generated@@44 $generated@@162 $generated@@163) ($generated@@44 $generated@@163 $generated@@164))
)))
(push 1)
(declare-fun ControlFlow (Int Int) Int)
(declare-fun $generated@@165 () Int)
(declare-fun $generated@@166 () Int)
(declare-fun $generated@@167 () Int)
(declare-fun $generated@@168 () Int)
(declare-fun $generated@@169 () Int)
(declare-fun $generated@@170 () T@U)
(declare-fun $generated@@171 () T@U)
(declare-fun $generated@@172 () T@U)
(declare-fun $generated@@173 (T@U) Bool)
(declare-fun $generated@@174 (T@U) Bool)
(declare-fun $generated@@175 () Int)
(assert  (and (and (= (type $generated@@170) ($generated@@108 $generated@@46 $generated@@4)) (= (type $generated@@171) $generated@@46)) (= (type $generated@@172) ($generated@@45 $generated@@46 $generated@@47))))
(set-option :timeout 0)
(set-option :rlimit 0)
(assert (not
 (=> (= (ControlFlow 0 0) 17) (let (($generated@@176  (=> (and (< $generated@@165 $generated@@166) (< $generated@@166 $generated@@167)) (and (=> (= (ControlFlow 0 10) (- 0 12)) (or (<= 0 (- $generated@@167 $generated@@165)) (= (- $generated@@167 $generated@@166) (- $generated@@167 $generated@@165)))) (=> (or (<= 0 (- $generated@@167 $generated@@165)) (= (- $generated@@167 $generated@@166) (- $generated@@167 $generated@@165))) (and (=> (= (ControlFlow 0 10) (- 0 11)) (< (- $generated@@167 $generated@@166) (- $generated@@167 $generated@@165))) (=> (< (- $generated@@167 $generated@@166) (- $generated@@167 $generated@@165)) (=> (= (ControlFlow 0 10) (- 0 9)) (< $generated@@166 $generated@@167)))))))))
(let (($generated@@177  (=> (and (<= $generated@@168 $generated@@165) (= (ControlFlow 0 14) 10)) $generated@@176)))
(let (($generated@@178  (=> (and (< $generated@@165 $generated@@168) (= (ControlFlow 0 13) 10)) $generated@@176)))
(let (($generated@@179  (and (=> (= (ControlFlow 0 15) 13) $generated@@178) (=> (= (ControlFlow 0 15) 14) $generated@@177))))
(let (($generated@@180 true))
(let (($generated@@181  (=> (and (and (and (not (exists (($generated@@182 Int) )  (and (< $generated@@165 $generated@@182) (< $generated@@182 $generated@@167)))) (<= $generated@@167 (+ $generated@@165 1))) (not (= (+ $generated@@165 1) $generated@@167))) (= (ControlFlow 0 7) (- 0 6))) false)))
(let (($generated@@183 true))
(let (($generated@@184  (=> (and (< (+ $generated@@165 1) $generated@@167) (= $generated@@169 (+ $generated@@165 1))) (and (=> (= (ControlFlow 0 2) (- 0 4)) (or (<= 0 (- $generated@@167 $generated@@165)) (= (- $generated@@167 $generated@@169) (- $generated@@167 $generated@@165)))) (=> (or (<= 0 (- $generated@@167 $generated@@165)) (= (- $generated@@167 $generated@@169) (- $generated@@167 $generated@@165))) (and (=> (= (ControlFlow 0 2) (- 0 3)) (< (- $generated@@167 $generated@@169) (- $generated@@167 $generated@@165))) (=> (< (- $generated@@167 $generated@@169) (- $generated@@167 $generated@@165)) (=> (= (ControlFlow 0 2) (- 0 1)) (< $generated@@169 $generated@@167)))))))))
(let (($generated@@185  (=> (= $generated@@170 ($generated@@107 $generated@@171 $generated@@172 $generated@@50 false)) (and (and (and (and (=> (= (ControlFlow 0 16) 2) $generated@@184) (=> (= (ControlFlow 0 16) 5) $generated@@183)) (=> (= (ControlFlow 0 16) 7) $generated@@181)) (=> (= (ControlFlow 0 16) 15) $generated@@179)) (=> (= (ControlFlow 0 16) 8) $generated@@180)))))
(let (($generated@@186  (=> (and (and (and ($generated@@173 $generated@@172) ($generated@@174 $generated@@172)) (= 0 $generated@@175)) (and (< $generated@@165 $generated@@167) (= (ControlFlow 0 17) 16))) $generated@@185)))
$generated@@186)))))))))))
))
(check-sat)
(pop 1)
; Valid
(get-info :rlimit)
(reset)
(set-option :rlimit 0)
; did a full reset
(reset)
(set-option :print-success false)
(set-info :smt-lib-version 2.6)
(set-option :auto_config false)
(set-option :type_check true)
(set-option :smt.case_split 3)
(set-option :smt.qi.eager_threshold 100)
(set-option :smt.delay_units true)
(set-option :smt.arith.solver 2)
(set-option :smt.mbqi false)
(set-option :model.compact false)
(set-option :model.v2 true)
(set-option :pp.bv_literals false)
; done setting options


(set-info :category "industrial")
(declare-sort |T@U| 0)
(declare-sort |T@T| 0)
(declare-fun real_pow (Real Real) Real)
(declare-fun UOrdering2 (|T@U| |T@U|) Bool)
(declare-fun UOrdering3 (|T@T| |T@U| |T@U|) Bool)
(declare-fun tickleBool (Bool) Bool)
(assert (and (tickleBool true) (tickleBool false)))
(declare-fun $generated (T@U) Int)
(declare-fun $generated@@0 (T@U) Bool)
(declare-fun $generated@@1 (T@T) Int)
(declare-fun $generated@@2 () T@T)
(declare-fun $generated@@3 () T@T)
(declare-fun $generated@@4 () T@T)
(declare-fun $generated@@5 () T@T)
(declare-fun $generated@@6 () T@T)
(declare-fun $generated@@7 () T@T)
(declare-fun $generated@@8 (Int) T@U)
(declare-fun type (T@U) T@T)
(declare-fun $generated@@9 (Real) T@U)
(declare-fun $generated@@10 (T@U) Real)
(declare-fun $generated@@11 (Bool) T@U)
(declare-fun $generated@@12 (RoundingMode) T@U)
(declare-fun $generated@@13 (T@U) RoundingMode)
(declare-fun $generated@@14 (String) T@U)
(declare-fun $generated@@15 (T@U) String)
(declare-fun $generated@@16 ((RegEx String)) T@U)
(declare-fun $generated@@17 (T@U) (RegEx String))
(declare-fun $generated@@44 () T@U)
(declare-fun $generated@@45 () T@U)
(declare-fun $generated@@46 () T@U)
(declare-fun $generated@@47 () T@U)
(declare-fun $generated@@48 () T@U)
(declare-fun $generated@@49 () T@U)
(declare-fun $generated@@50 () T@U)
(declare-fun $generated@@51 () T@U)
(declare-fun $generated@@52 () T@U)
(declare-fun $generated@@53 () T@U)
(declare-fun $generated@@54 () T@U)
(declare-fun $generated@@55 () T@U)
(declare-fun $generated@@56 () T@U)
(declare-fun $generated@@57 () T@U)
(declare-fun $generated@@58 () T@U)
(declare-fun $generated@@59 () T@U)
(declare-fun $generated@@60 () T@U)
(declare-fun $generated@@61 () T@U)
(declare-fun $generated@@62 () T@U)
(declare-fun $generated@@63 () T@U)
(declare-fun $generated@@64 () T@U)
(declare-fun $generated@@65 () T@U)
(declare-fun $generated@@66 () T@U)
(declare-fun $generated@@67 () T@T)
(declare-fun $generated@@68 () T@T)
(declare-fun $generated@@69 (T@T) T@T)
(declare-fun $generated@@70 (T@T) T@T)
(declare-fun $generated@@71 () T@T)
(declare-fun $generated@@72 () T@T)
(declare-fun $generated@@75 (T@U) T@U)
(declare-fun $generated@@77 (T@U T@U T@U) Bool)
(declare-fun $generated@@78 (Int) T@U)
(declare-fun $generated@@79 (T@T T@T) T@T)
(declare-fun $generated@@80 () T@T)
(declare-fun $generated@@81 () T@T)
(declare-fun $generated@@82 (T@T) T@T)
(declare-fun $generated@@83 (T@T) T@T)
(declare-fun $generated@@84 (T@U T@U) T@U)
(declare-fun $generated@@85 (T@U T@U T@U) T@U)
(declare-fun $generated@@86 (T@U T@U) T@U)
(declare-fun $generated@@87 (T@U T@U T@U) T@U)
(declare-fun $generated@@135 (T@U) Int)
(declare-fun $generated@@136 (T@U) T@U)
(declare-fun $generated@@137 () T@U)
(declare-fun $generated@@138 (T@U) T@U)
(declare-fun $generated@@139 (T@U T@U) Bool)
(declare-fun $generated@@144 (T@U T@U) Bool)
(declare-fun $generated@@151 (T@U) Bool)
(declare-fun $generated@@156 (T@U) T@U)
(declare-fun $generated@@161 (T@U) Bool)
(declare-fun $generated@@162 (T@U T@U) T@U)
(declare-fun $generated@@163 () T@T)
(declare-fun $generated@@169 (T@U T@U) Bool)
(declare-fun $generated@@170 (T@U) T@U)
(declare-fun $generated@@171 (T@U) T@U)
(declare-fun $generated@@172 () T@T)
(declare-fun $generated@@177 (T@U) T@U)
(declare-fun $generated@@178 (T@U) Bool)
(declare-fun $generated@@182 (T@U T@U T@U) T@U)
(declare-fun $generated@@183 (T@U T@U T@U Bool) T@U)
(declare-fun $generated@@184 (T@T T@T) T@T)
(declare-fun $generated@@185 (T@T) T@T)
(declare-fun $generated@@186 (T@T) T@T)
(declare-fun $generated@@187 (T@U T@U T@U T@U) T@U)
(declare-fun $generated@@238 (T@U T@U) T@U)
(declare-fun $generated@@239 (T@U T@U) Bool)
(declare-fun $generated@@248 (T@U) T@U)
(declare-fun $generated@@253 (T@U) T@U)
(declare-fun $generated@@258 (Int) Int)
(declare-fun $generated@@260 (T@U) T@U)
(declare-fun $generated@@264 (T@U T@U T@U) Bool)
(declare-fun $generated@@270 (T@U) T@U)
(declare-fun $generated@@276 (T@T) T@U)
(declare-fun $generated@@277 (T@U) Int)
(declare-fun $generated@@278 (T@T) T@T)
(declare-fun $generated@@279 (T@T) T@T)
(declare-fun $generated@@286 (T@U) T@U)
(declare-fun $generated@@299 (T@U) Int)
(declare-fun $generated@@300 (T@T) T@U)
(declare-fun $generated@@305 (T@U) T@U)
(declare-fun $generated@@309 (T@U) T@U)
(declare-fun $generated@@310 (T@T T@T) T@U)
(declare-fun $generated@@311 (T@T T@T) T@T)
(declare-fun $generated@@312 (T@T) T@T)
(declare-fun $generated@@313 (T@T) T@T)
(declare-fun $generated@@327 (T@U) T@U)
(declare-fun $generated@@328 (T@T T@T) T@U)
(declare-fun $generated@@329 (T@T T@T) T@T)
(declare-fun $generated@@330 (T@T) T@T)
(declare-fun $generated@@331 (T@T) T@T)
(declare-fun $generated@@354 (T@U) T@U)
(declare-fun $generated@@365 (T@U) T@U)
(declare-fun $generated@@385 (T@U) T@U)
(declare-fun $generated@@386 (T@T T@U) T@U)
(declare-fun $generated@@387 (T@U) T@U)
(declare-fun $generated@@396 (T@U) T@U)
(declare-fun $generated@@397 (T@U) T@U)
(declare-fun $generated@@414 (T@U T@U) T@U)
(declare-fun $generated@@422 (T@U T@U) T@U)
(declare-fun $generated@@433 (T@T) T@U)
(declare-fun $generated@@457 () T@T)
(declare-fun $generated@@466 (T@U) T@U)
(declare-fun $generated@@470 (T@U) T@U)
(declare-fun $generated@@476 (T@U) T@U)
(declare-fun $generated@@480 (T@U) T@U)
(declare-fun $generated@@488 (T@U) T@U)
(declare-fun $generated@@492 (T@U) T@U)
(declare-fun $generated@@500 (T@U) T@U)
(declare-fun $generated@@501 (T@U Int) T@U)
(declare-fun $generated@@510 (T@U) Int)
(declare-fun $generated@@512 (T@U) T@U)
(declare-fun $generated@@516 (T@U) T@U)
(declare-fun $generated@@520 (T@U) T@U)
(declare-fun $generated@@524 (T@U) T@U)
(declare-fun $generated@@528 (T@U) T@U)
(declare-fun $generated@@531 (T@U) T@U)
(declare-fun $generated@@544 (T@U) Int)
(declare-fun $generated@@545 (T@U) Int)
(declare-fun $generated@@617 (T@U) Int)
(assert  (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (= ($generated@@1 $generated@@2) 0) (= ($generated@@1 $generated@@3) 1)) (= ($generated@@1 $generated@@4) 2)) (= ($generated@@1 $generated@@5) 3)) (= ($generated@@1 $generated@@6) 4)) (= ($generated@@1 $generated@@7) 5)) (forall (($generated@@18 Int) ) (! (= ($generated ($generated@@8 $generated@@18)) $generated@@18)
 :pattern ( ($generated@@8 $generated@@18))
))) (forall (($generated@@19 T@U) ) (!  (=> (= (type $generated@@19) $generated@@2) (= ($generated@@8 ($generated $generated@@19)) $generated@@19))
 :pattern ( ($generated $generated@@19))
))) (forall (($generated@@20 Int) ) (! (= (type ($generated@@8 $generated@@20)) $generated@@2)
 :pattern ( ($generated@@8 $generated@@20))
))) (forall (($generated@@21 Real) ) (! (= ($generated@@10 ($generated@@9 $generated@@21)) $generated@@21)
 :pattern ( ($generated@@9 $generated@@21))
))) (forall (($generated@@22 T@U) ) (!  (=> (= (type $generated@@22) $generated@@3) (= ($generated@@9 ($generated@@10 $generated@@22)) $generated@@22))
 :pattern ( ($generated@@10 $generated@@22))
))) (forall (($generated@@23 Real) ) (! (= (type ($generated@@9 $generated@@23)) $generated@@3)
 :pattern ( ($generated@@9 $generated@@23))
))) (forall (($generated@@24 Bool) ) (! (= ($generated@@0 ($generated@@11 $generated@@24)) $generated@@24)
 :pattern ( ($generated@@11 $generated@@24))
))) (forall (($generated@@25 T@U) ) (!  (=> (= (type $generated@@25) $generated@@4) (= ($generated@@11 ($generated@@0 $generated@@25)) $generated@@25))
 :pattern ( ($generated@@0 $generated@@25))
))) (forall (($generated@@26 Bool) ) (! (= (type ($generated@@11 $generated@@26)) $generated@@4)
 :pattern ( ($generated@@11 $generated@@26))
))) (forall (($generated@@27 RoundingMode) ) (! (= ($generated@@13 ($generated@@12 $generated@@27)) $generated@@27)
 :pattern ( ($generated@@12 $generated@@27))
))) (forall (($generated@@28 T@U) ) (!  (=> (= (type $generated@@28) $generated@@5) (= ($generated@@12 ($generated@@13 $generated@@28)) $generated@@28))
 :pattern ( ($generated@@13 $generated@@28))
))) (forall (($generated@@29 RoundingMode) ) (! (= (type ($generated@@12 $generated@@29)) $generated@@5)
 :pattern ( ($generated@@12 $generated@@29))
))) (forall (($generated@@30 String) ) (! (= ($generated@@15 ($generated@@14 $generated@@30)) $generated@@30)
 :pattern ( ($generated@@14 $generated@@30))
))) (forall (($generated@@31 T@U) ) (!  (=> (= (type $generated@@31) $generated@@6) (= ($generated@@14 ($generated@@15 $generated@@31)) $generated@@31))
 :pattern ( ($generated@@15 $generated@@31))
))) (forall (($generated@@32 String) ) (! (= (type ($generated@@14 $generated@@32)) $generated@@6)
 :pattern ( ($generated@@14 $generated@@32))
))) (forall (($generated@@33 (RegEx String)) ) (! (= ($generated@@17 ($generated@@16 $generated@@33)) $generated@@33)
 :pattern ( ($generated@@16 $generated@@33))
))) (forall (($generated@@34 T@U) ) (!  (=> (= (type $generated@@34) $generated@@7) (= ($generated@@16 ($generated@@17 $generated@@34)) $generated@@34))
 :pattern ( ($generated@@17 $generated@@34))
))) (forall (($generated@@35 (RegEx String)) ) (! (= (type ($generated@@16 $generated@@35)) $generated@@7)
 :pattern ( ($generated@@16 $generated@@35))
))))
(assert (forall (($generated@@36 T@U) ) (! (UOrdering2 $generated@@36 $generated@@36)
 :no-pattern ($generated $generated@@36)
 :no-pattern ($generated@@0 $generated@@36)
)))
(assert (forall (($generated@@37 T@U) ($generated@@38 T@U) ($generated@@39 T@U) ) (! (let (($generated@@40 (type $generated@@37)))
 (=> (and (and (= (type $generated@@38) $generated@@40) (= (type $generated@@39) $generated@@40)) (and (UOrdering2 $generated@@37 $generated@@38) (UOrdering2 $generated@@38 $generated@@39))) (UOrdering2 $generated@@37 $generated@@39)))
 :pattern ( (UOrdering2 $generated@@37 $generated@@38) (UOrdering2 $generated@@38 $generated@@39))
)))
(assert (forall (($generated@@41 T@U) ($generated@@42 T@U) ) (! (let (($generated@@43 (type $generated@@41)))
 (=> (= (type $generated@@42) $generated@@43) (=> (and (UOrdering2 $generated@@41 $generated@@42) (UOrdering2 $generated@@42 $generated@@41)) (= $generated@@41 $generated@@42))))
 :pattern ( (UOrdering2 $generated@@41 $generated@@42) (UOrdering2 $generated@@42 $generated@@41))
)))
(assert  (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (= ($generated@@1 $generated@@67) 6) (= (type $generated@@44) $generated@@67)) (= (type $generated@@45) $generated@@67)) (= (type $generated@@46) $generated@@67)) (= (type $generated@@47) $generated@@67)) (= (type $generated@@48) $generated@@67)) (= ($generated@@1 $generated@@68) 7)) (= (type $generated@@49) $generated@@68)) (= (type $generated@@50) $generated@@68)) (= (type $generated@@51) $generated@@68)) (= (type $generated@@52) $generated@@68)) (= (type $generated@@53) $generated@@68)) (= (type $generated@@54) $generated@@68)) (= (type $generated@@55) $generated@@68)) (= (type $generated@@56) $generated@@68)) (= (type $generated@@57) $generated@@68)) (= (type $generated@@58) $generated@@68)) (= (type $generated@@59) $generated@@68)) (forall (($generated@@73 T@T) ) (= ($generated@@1 ($generated@@69 $generated@@73)) 8))) (forall (($generated@@74 T@T) ) (! (= ($generated@@70 ($generated@@69 $generated@@74)) $generated@@74)
 :pattern ( ($generated@@69 $generated@@74))
))) (= (type $generated@@60) ($generated@@69 $generated@@4))) (= (type $generated@@61) $generated@@68)) (= (type $generated@@62) $generated@@68)) (= ($generated@@1 $generated@@71) 9)) (= (type $generated@@63) $generated@@71)) (= (type $generated@@64) $generated@@68)) (= ($generated@@1 $generated@@72) 10)) (= (type $generated@@65) $generated@@72)) (= (type $generated@@66) $generated@@72)))
(assert (distinct $generated@@44 $generated@@45 $generated@@46 $generated@@47 $generated@@48 $generated@@49 $generated@@50 $generated@@51 $generated@@52 $generated@@53 $generated@@54 $generated@@55 $generated@@56 $generated@@57 $generated@@58 $generated@@59 $generated@@60 $generated@@61 $generated@@62 $generated@@63 $generated@@64 $generated@@65 $generated@@66)
)
(assert (forall (($generated@@76 T@U) ) (! (= (type ($generated@@75 $generated@@76)) $generated@@68)
 :pattern ( ($generated@@75 $generated@@76))
)))
(assert (= ($generated@@75 $generated@@44) $generated@@49))
(assert (= ($generated@@75 $generated@@45) $generated@@50))
(assert (= ($generated@@75 $generated@@46) $generated@@51))
(assert (= ($generated@@75 $generated@@47) $generated@@52))
(assert (= ($generated@@75 $generated@@48) $generated@@53))
(assert  (and (and (and (and (and (and (and (and (and (and (and (and (and (forall (($generated@@88 T@T) ($generated@@89 T@T) ) (= ($generated@@1 ($generated@@79 $generated@@88 $generated@@89)) 11)) (forall (($generated@@90 T@T) ($generated@@91 T@T) ) (! (= ($generated@@82 ($generated@@79 $generated@@90 $generated@@91)) $generated@@90)
 :pattern ( ($generated@@79 $generated@@90 $generated@@91))
))) (forall (($generated@@92 T@T) ($generated@@93 T@T) ) (! (= ($generated@@83 ($generated@@79 $generated@@92 $generated@@93)) $generated@@93)
 :pattern ( ($generated@@79 $generated@@92 $generated@@93))
))) (forall (($generated@@94 T@U) ($generated@@95 T@U) ) (! (let (($generated@@96 ($generated@@83 (type $generated@@94))))
(= (type ($generated@@84 $generated@@94 $generated@@95)) $generated@@96))
 :pattern ( ($generated@@84 $generated@@94 $generated@@95))
))) (forall (($generated@@97 T@U) ($generated@@98 T@U) ($generated@@99 T@U) ) (! (let (($generated@@100 (type $generated@@99)))
(let (($generated@@101 (type $generated@@98)))
(= (type ($generated@@85 $generated@@97 $generated@@98 $generated@@99)) ($generated@@79 $generated@@101 $generated@@100))))
 :pattern ( ($generated@@85 $generated@@97 $generated@@98 $generated@@99))
))) (forall (($generated@@102 T@U) ($generated@@103 T@U) ($generated@@104 T@U) ) (! (let (($generated@@105 ($generated@@83 (type $generated@@102))))
 (=> (= (type $generated@@104) $generated@@105) (= ($generated@@84 ($generated@@85 $generated@@102 $generated@@103 $generated@@104) $generated@@103) $generated@@104)))
 :weight 0
))) (and (forall (($generated@@106 T@U) ($generated@@107 T@U) ($generated@@108 T@U) ($generated@@109 T@U) ) (!  (or (= $generated@@108 $generated@@109) (= ($generated@@84 ($generated@@85 $generated@@107 $generated@@108 $generated@@106) $generated@@109) ($generated@@84 $generated@@107 $generated@@109)))
 :weight 0
)) (forall (($generated@@110 T@U) ($generated@@111 T@U) ($generated@@112 T@U) ($generated@@113 T@U) ) (!  (or true (= ($generated@@84 ($generated@@85 $generated@@111 $generated@@112 $generated@@110) $generated@@113) ($generated@@84 $generated@@111 $generated@@113)))
 :weight 0
)))) (= ($generated@@1 $generated@@80) 12)) (forall (($generated@@114 T@U) ($generated@@115 T@U) ) (! (let (($generated@@116 ($generated@@70 (type $generated@@115))))
(= (type ($generated@@86 $generated@@114 $generated@@115)) $generated@@116))
 :pattern ( ($generated@@86 $generated@@114 $generated@@115))
))) (= ($generated@@1 $generated@@81) 13)) (forall (($generated@@117 T@U) ($generated@@118 T@U) ($generated@@119 T@U) ) (! (= (type ($generated@@87 $generated@@117 $generated@@118 $generated@@119)) $generated@@81)
 :pattern ( ($generated@@87 $generated@@117 $generated@@118 $generated@@119))
))) (forall (($generated@@120 T@U) ($generated@@121 T@U) ($generated@@122 T@U) ) (! (let (($generated@@123 ($generated@@70 (type $generated@@121))))
 (=> (= (type $generated@@122) $generated@@123) (= ($generated@@86 ($generated@@87 $generated@@120 $generated@@121 $generated@@122) $generated@@121) $generated@@122)))
 :weight 0
))) (and (forall (($generated@@124 T@U) ($generated@@125 T@U) ($generated@@126 T@U) ($generated@@127 T@U) ) (!  (or (= $generated@@126 $generated@@127) (= ($generated@@86 ($generated@@87 $generated@@125 $generated@@126 $generated@@124) $generated@@127) ($generated@@86 $generated@@125 $generated@@127)))
 :weight 0
)) (forall (($generated@@128 T@U) ($generated@@129 T@U) ($generated@@130 T@U) ($generated@@131 T@U) ) (!  (or true (= ($generated@@86 ($generated@@87 $generated@@129 $generated@@130 $generated@@128) $generated@@131) ($generated@@86 $generated@@129 $generated@@131)))
 :weight 0
)))) (forall (($generated@@132 Int) ) (! (= (type ($generated@@78 $generated@@132)) $generated@@67)
 :pattern ( ($generated@@78 $generated@@132))
))))
(assert (forall (($generated@@133 T@U) ($generated@@134 T@U) ) (!  (=> (and (= (type $generated@@133) $generated@@2) (= (type $generated@@134) ($generated@@79 $generated@@80 $generated@@81))) ($generated@@77 $generated@@133 ($generated@@78 0) $generated@@134))
 :pattern ( ($generated@@77 $generated@@133 ($generated@@78 0) $generated@@134))
)))
(assert  (and (and (forall (($generated@@140 T@U) ) (! (= (type ($generated@@136 $generated@@140)) $generated@@67)
 :pattern ( ($generated@@136 $generated@@140))
)) (= (type $generated@@137) $generated@@80)) (forall (($generated@@141 T@U) ) (! (= (type ($generated@@138 $generated@@141)) $generated@@67)
 :pattern ( ($generated@@138 $generated@@141))
))))
(assert (forall (($generated@@142 T@U) ($generated@@143 T@U) ) (!  (=> (and (and (= (type $generated@@142) $generated@@67) (= (type $generated@@143) $generated@@80)) (and (not (= $generated@@143 $generated@@137)) (= ($generated@@138 $generated@@143) ($generated@@136 $generated@@142)))) ($generated@@139 ($generated@@8 ($generated@@135 $generated@@143)) $generated@@46))
 :pattern ( ($generated@@135 $generated@@143) ($generated@@136 $generated@@142))
)))
(assert (forall (($generated@@145 T@U) ($generated@@146 T@U) ) (!  (=> (and (and (= (type $generated@@145) ($generated@@79 $generated@@80 $generated@@81)) (= (type $generated@@146) ($generated@@79 $generated@@80 $generated@@81))) ($generated@@144 $generated@@145 $generated@@146)) (forall (($generated@@147 T@U) ) (!  (=> (and (= (type $generated@@147) $generated@@80) ($generated@@0 ($generated@@86 ($generated@@84 $generated@@145 $generated@@147) $generated@@60))) ($generated@@0 ($generated@@86 ($generated@@84 $generated@@146 $generated@@147) $generated@@60)))
 :pattern ( ($generated@@86 ($generated@@84 $generated@@146 $generated@@147) $generated@@60))
)))
 :pattern ( ($generated@@144 $generated@@145 $generated@@146))
)))
(assert (forall (($generated@@148 T@U) ($generated@@149 T@U) ($generated@@150 T@U) ) (!  (=> (and (and (= (type $generated@@148) $generated@@67) (= (type $generated@@149) $generated@@80)) (= (type $generated@@150) ($generated@@79 $generated@@80 $generated@@81))) (= ($generated@@77 $generated@@149 ($generated@@136 $generated@@148) $generated@@150)  (or (= $generated@@149 $generated@@137) ($generated@@0 ($generated@@86 ($generated@@84 $generated@@150 $generated@@149) $generated@@60)))))
 :pattern ( ($generated@@77 $generated@@149 ($generated@@136 $generated@@148) $generated@@150))
)))
(assert (forall (($generated@@152 T@U) ($generated@@153 T@U) ($generated@@154 T@U) ) (!  (=> (and (and (and (= (type $generated@@152) $generated@@67) (= (type $generated@@153) ($generated@@79 $generated@@80 $generated@@81))) (= (type $generated@@154) $generated@@80)) (and (and ($generated@@151 $generated@@153) (and (not (= $generated@@154 $generated@@137)) (= ($generated@@138 $generated@@154) ($generated@@136 $generated@@152)))) ($generated@@0 ($generated@@86 ($generated@@84 $generated@@153 $generated@@154) $generated@@60)))) ($generated@@77 ($generated@@8 ($generated@@135 $generated@@154)) $generated@@46 $generated@@153))
 :pattern ( ($generated@@135 $generated@@154) ($generated@@86 ($generated@@84 $generated@@153 $generated@@154) $generated@@60) ($generated@@136 $generated@@152))
)))
(assert (forall (($generated@@155 T@U) ) (!  (=> (= (type $generated@@155) $generated@@2) ($generated@@139 $generated@@155 ($generated@@78 0)))
 :pattern ( ($generated@@139 $generated@@155 ($generated@@78 0)))
)))
(assert (forall (($generated@@157 T@U) ) (! (= (type ($generated@@156 $generated@@157)) $generated@@67)
 :pattern ( ($generated@@156 $generated@@157))
)))
(assert (forall (($generated@@158 T@U) ($generated@@159 T@U) ($generated@@160 T@U) ) (!  (=> (and (and (= (type $generated@@158) $generated@@67) (= (type $generated@@159) $generated@@80)) (= (type $generated@@160) ($generated@@79 $generated@@80 $generated@@81))) (= ($generated@@77 $generated@@159 ($generated@@156 $generated@@158) $generated@@160) ($generated@@77 $generated@@159 ($generated@@136 $generated@@158) $generated@@160)))
 :pattern ( ($generated@@77 $generated@@159 ($generated@@156 $generated@@158) $generated@@160))
)))
(assert  (and (= ($generated@@1 $generated@@163) 14) (forall (($generated@@164 T@U) ($generated@@165 T@U) ) (! (= (type ($generated@@162 $generated@@164 $generated@@165)) $generated@@67)
 :pattern ( ($generated@@162 $generated@@164 $generated@@165))
))))
(assert (forall (($generated@@166 T@U) ($generated@@167 T@U) ($generated@@168 T@U) ) (!  (=> (and (and (and (= (type $generated@@166) $generated@@67) (= (type $generated@@167) $generated@@67)) (= (type $generated@@168) $generated@@163)) ($generated@@139 $generated@@168 ($generated@@162 $generated@@166 $generated@@167))) ($generated@@161 $generated@@168))
 :pattern ( ($generated@@161 $generated@@168) ($generated@@139 $generated@@168 ($generated@@162 $generated@@166 $generated@@167)))
)))
(assert  (and (and (= ($generated@@1 $generated@@172) 15) (forall (($generated@@173 T@U) ) (! (= (type ($generated@@170 $generated@@173)) $generated@@172)
 :pattern ( ($generated@@170 $generated@@173))
))) (forall (($generated@@174 T@U) ) (! (= (type ($generated@@171 $generated@@174)) $generated@@172)
 :pattern ( ($generated@@171 $generated@@174))
))))
(assert (forall (($generated@@175 T@U) ($generated@@176 T@U) ) (!  (=> (and (and (= (type $generated@@175) $generated@@163) (= (type $generated@@176) $generated@@163)) true) (= ($generated@@169 $generated@@175 $generated@@176)  (and (= ($generated@@170 $generated@@175) ($generated@@170 $generated@@176)) (= ($generated@@171 $generated@@175) ($generated@@171 $generated@@176)))))
 :pattern ( ($generated@@169 $generated@@175 $generated@@176))
)))
(assert (forall (($generated@@179 T@U) ) (! (= (type ($generated@@177 $generated@@179)) $generated@@67)
 :pattern ( ($generated@@177 $generated@@179))
)))
(assert (forall (($generated@@180 T@U) ($generated@@181 T@U) ) (!  (=> (and (and (= (type $generated@@180) ($generated@@79 $generated@@172 $generated@@2)) (= (type $generated@@181) $generated@@67)) ($generated@@139 $generated@@180 ($generated@@177 $generated@@181))) ($generated@@178 $generated@@180))
 :pattern ( ($generated@@139 $generated@@180 ($generated@@177 $generated@@181)))
)))
(assert  (and (and (and (and (and (and (and (forall (($generated@@188 T@T) ($generated@@189 T@T) ) (= ($generated@@1 ($generated@@184 $generated@@188 $generated@@189)) 16)) (forall (($generated@@190 T@T) ($generated@@191 T@T) ) (! (= ($generated@@185 ($generated@@184 $generated@@190 $generated@@191)) $generated@@190)
 :pattern ( ($generated@@184 $generated@@190 $generated@@191))
))) (forall (($generated@@192 T@T) ($generated@@193 T@T) ) (! (= ($generated@@186 ($generated@@184 $generated@@192 $generated@@193)) $generated@@193)
 :pattern ( ($generated@@184 $generated@@192 $generated@@193))
))) (forall (($generated@@194 T@U) ($generated@@195 T@U) ($generated@@196 T@U) ) (! (let (($generated@@197 ($generated@@186 (type $generated@@194))))
(= (type ($generated@@182 $generated@@194 $generated@@195 $generated@@196)) $generated@@197))
 :pattern ( ($generated@@182 $generated@@194 $generated@@195 $generated@@196))
))) (forall (($generated@@198 T@U) ($generated@@199 T@U) ($generated@@200 T@U) ($generated@@201 T@U) ) (! (let (($generated@@202 (type $generated@@201)))
(let (($generated@@203 (type $generated@@199)))
(= (type ($generated@@187 $generated@@198 $generated@@199 $generated@@200 $generated@@201)) ($generated@@184 $generated@@203 $generated@@202))))
 :pattern ( ($generated@@187 $generated@@198 $generated@@199 $generated@@200 $generated@@201))
))) (forall (($generated@@204 T@U) ($generated@@205 T@U) ($generated@@206 T@U) ($generated@@207 T@U) ) (! (let (($generated@@208 ($generated@@186 (type $generated@@204))))
 (=> (= (type $generated@@207) $generated@@208) (= ($generated@@182 ($generated@@187 $generated@@204 $generated@@205 $generated@@206 $generated@@207) $generated@@205 $generated@@206) $generated@@207)))
 :weight 0
))) (and (and (forall (($generated@@209 T@U) ($generated@@210 T@U) ($generated@@211 T@U) ($generated@@212 T@U) ($generated@@213 T@U) ($generated@@214 T@U) ) (!  (or (= $generated@@211 $generated@@213) (= ($generated@@182 ($generated@@187 $generated@@210 $generated@@211 $generated@@212 $generated@@209) $generated@@213 $generated@@214) ($generated@@182 $generated@@210 $generated@@213 $generated@@214)))
 :weight 0
)) (forall (($generated@@215 T@U) ($generated@@216 T@U) ($generated@@217 T@U) ($generated@@218 T@U) ($generated@@219 T@U) ($generated@@220 T@U) ) (!  (or (= $generated@@218 $generated@@220) (= ($generated@@182 ($generated@@187 $generated@@216 $generated@@217 $generated@@218 $generated@@215) $generated@@219 $generated@@220) ($generated@@182 $generated@@216 $generated@@219 $generated@@220)))
 :weight 0
))) (forall (($generated@@221 T@U) ($generated@@222 T@U) ($generated@@223 T@U) ($generated@@224 T@U) ($generated@@225 T@U) ($generated@@226 T@U) ) (!  (or true (= ($generated@@182 ($generated@@187 $generated@@222 $generated@@223 $generated@@224 $generated@@221) $generated@@225 $generated@@226) ($generated@@182 $generated@@222 $generated@@225 $generated@@226)))
 :weight 0
)))) (forall (($generated@@227 T@U) ($generated@@228 T@U) ($generated@@229 T@U) ($generated@@230 Bool) ) (! (= (type ($generated@@183 $generated@@227 $generated@@228 $generated@@229 $generated@@230)) ($generated@@184 $generated@@80 $generated@@4))
 :pattern ( ($generated@@183 $generated@@227 $generated@@228 $generated@@229 $generated@@230))
))))
(assert (forall (($generated@@231 T@U) ($generated@@232 T@U) ($generated@@233 T@U) ($generated@@234 Bool) ($generated@@235 T@U) ($generated@@236 T@U) ) (! (let (($generated@@237 ($generated@@70 (type $generated@@236))))
 (=> (and (and (and (and (= (type $generated@@231) $generated@@80) (= (type $generated@@232) ($generated@@79 $generated@@80 $generated@@81))) (= (type $generated@@233) ($generated@@69 $generated@@4))) (= (type $generated@@235) $generated@@80)) (= (type $generated@@236) ($generated@@69 $generated@@237))) (= ($generated@@0 ($generated@@182 ($generated@@183 $generated@@231 $generated@@232 $generated@@233 $generated@@234) $generated@@235 $generated@@236))  (=> (and (not (= $generated@@235 $generated@@231)) ($generated@@0 ($generated@@86 ($generated@@84 $generated@@232 $generated@@235) $generated@@233))) $generated@@234))))
 :pattern ( ($generated@@182 ($generated@@183 $generated@@231 $generated@@232 $generated@@233 $generated@@234) $generated@@235 $generated@@236))
)))
(assert (forall (($generated@@240 T@U) ($generated@@241 T@U) ) (! (= (type ($generated@@238 $generated@@240 $generated@@241)) $generated@@163)
 :pattern ( ($generated@@238 $generated@@240 $generated@@241))
)))
(assert (forall (($generated@@242 T@U) ($generated@@243 T@U) ($generated@@244 T@U) ($generated@@245 T@U) ) (!  (=> (and (and (and (= (type $generated@@242) $generated@@67) (= (type $generated@@243) $generated@@67)) (= (type $generated@@244) $generated@@172)) (= (type $generated@@245) $generated@@172)) (= ($generated@@139 ($generated@@238 $generated@@244 $generated@@245) ($generated@@162 $generated@@242 $generated@@243))  (and ($generated@@239 $generated@@244 $generated@@242) ($generated@@239 $generated@@245 $generated@@243))))
 :pattern ( ($generated@@139 ($generated@@238 $generated@@244 $generated@@245) ($generated@@162 $generated@@242 $generated@@243)))
)))
(assert (forall (($generated@@246 T@U) ($generated@@247 T@U) ) (!  (=> (and (= (type $generated@@246) $generated@@163) (= (type $generated@@247) $generated@@163)) (= ($generated@@169 $generated@@246 $generated@@247) (= $generated@@246 $generated@@247)))
 :pattern ( ($generated@@169 $generated@@246 $generated@@247))
)))
(assert (forall (($generated@@249 T@U) ) (! (= (type ($generated@@248 $generated@@249)) $generated@@67)
 :pattern ( ($generated@@248 $generated@@249))
)))
(assert (forall (($generated@@250 T@U) ($generated@@251 T@U) ) (!  (=> (and (= (type $generated@@250) ($generated@@79 $generated@@172 $generated@@4)) (= (type $generated@@251) $generated@@67)) (= ($generated@@139 $generated@@250 ($generated@@248 $generated@@251)) (forall (($generated@@252 T@U) ) (!  (=> (and (= (type $generated@@252) $generated@@172) ($generated@@0 ($generated@@84 $generated@@250 $generated@@252))) ($generated@@239 $generated@@252 $generated@@251))
 :pattern ( ($generated@@84 $generated@@250 $generated@@252))
))))
 :pattern ( ($generated@@139 $generated@@250 ($generated@@248 $generated@@251)))
)))
(assert (forall (($generated@@254 T@U) ) (! (= (type ($generated@@253 $generated@@254)) $generated@@67)
 :pattern ( ($generated@@253 $generated@@254))
)))
(assert (forall (($generated@@255 T@U) ($generated@@256 T@U) ) (!  (=> (and (= (type $generated@@255) ($generated@@79 $generated@@172 $generated@@4)) (= (type $generated@@256) $generated@@67)) (= ($generated@@139 $generated@@255 ($generated@@253 $generated@@256)) (forall (($generated@@257 T@U) ) (!  (=> (and (= (type $generated@@257) $generated@@172) ($generated@@0 ($generated@@84 $generated@@255 $generated@@257))) ($generated@@239 $generated@@257 $generated@@256))
 :pattern ( ($generated@@84 $generated@@255 $generated@@257))
))))
 :pattern ( ($generated@@139 $generated@@255 ($generated@@253 $generated@@256)))
)))
(assert (forall (($generated@@259 Int) ) (! (= ($generated@@258 $generated@@259) $generated@@259)
 :pattern ( ($generated@@258 $generated@@259))
)))
(assert (forall (($generated@@261 T@U) ) (! (let (($generated@@262 (type $generated@@261)))
(= (type ($generated@@260 $generated@@261)) $generated@@262))
 :pattern ( ($generated@@260 $generated@@261))
)))
(assert (forall (($generated@@263 T@U) ) (! (= ($generated@@260 $generated@@263) $generated@@263)
 :pattern ( ($generated@@260 $generated@@263))
)))
(assert (forall (($generated@@265 T@U) ($generated@@266 T@U) ($generated@@267 T@U) ($generated@@268 T@U) ($generated@@269 T@U) ) (!  (=> (and (and (and (and (and (= (type $generated@@265) $generated@@67) (= (type $generated@@266) $generated@@67)) (= (type $generated@@267) $generated@@172)) (= (type $generated@@268) $generated@@172)) (= (type $generated@@269) ($generated@@79 $generated@@80 $generated@@81))) ($generated@@151 $generated@@269)) (= ($generated@@77 ($generated@@238 $generated@@267 $generated@@268) ($generated@@162 $generated@@265 $generated@@266) $generated@@269)  (and ($generated@@264 $generated@@267 $generated@@265 $generated@@269) ($generated@@264 $generated@@268 $generated@@266 $generated@@269))))
 :pattern ( ($generated@@77 ($generated@@238 $generated@@267 $generated@@268) ($generated@@162 $generated@@265 $generated@@266) $generated@@269))
)))
(assert (forall (($generated@@271 T@U) ) (! (= (type ($generated@@270 $generated@@271)) $generated@@71)
 :pattern ( ($generated@@270 $generated@@271))
)))
(assert (forall (($generated@@272 T@U) ) (!  (=> (= (type $generated@@272) $generated@@163) (= ($generated@@161 $generated@@272) (= ($generated@@270 $generated@@272) $generated@@63)))
 :pattern ( ($generated@@161 $generated@@272))
)))
(assert (forall (($generated@@273 T@U) ) (!  (=> (and (= (type $generated@@273) $generated@@163) ($generated@@161 $generated@@273)) (exists (($generated@@274 T@U) ($generated@@275 T@U) ) (!  (and (and (= (type $generated@@274) $generated@@172) (= (type $generated@@275) $generated@@172)) (= $generated@@273 ($generated@@238 $generated@@274 $generated@@275)))
 :no-pattern (type $generated@@274)
 :no-pattern (type $generated@@275)
 :no-pattern ($generated $generated@@274)
 :no-pattern ($generated@@0 $generated@@274)
 :no-pattern ($generated $generated@@275)
 :no-pattern ($generated@@0 $generated@@275)
)))
 :pattern ( ($generated@@161 $generated@@273))
)))
(assert  (and (and (forall (($generated@@280 T@T) ) (= ($generated@@1 ($generated@@278 $generated@@280)) 17)) (forall (($generated@@281 T@T) ) (! (= ($generated@@279 ($generated@@278 $generated@@281)) $generated@@281)
 :pattern ( ($generated@@278 $generated@@281))
))) (forall (($generated@@282 T@T) ) (! (= (type ($generated@@276 $generated@@282)) ($generated@@278 $generated@@282))
 :pattern ( ($generated@@276 $generated@@282))
))))
(assert (forall (($generated@@283 T@T) ) (! (= ($generated@@277 ($generated@@276 $generated@@283)) 0)
 :pattern ( ($generated@@276 $generated@@283))
)))
(assert (forall (($generated@@284 T@U) ($generated@@285 T@U) ) (!  (=> (and (= (type $generated@@284) $generated@@67) (= (type $generated@@285) $generated@@80)) (= ($generated@@139 $generated@@285 ($generated@@156 $generated@@284))  (and ($generated@@139 $generated@@285 ($generated@@136 $generated@@284)) (not (= $generated@@285 $generated@@137)))))
 :pattern ( ($generated@@139 $generated@@285 ($generated@@156 $generated@@284)))
)))
(assert (forall (($generated@@287 T@U) ) (! (= (type ($generated@@286 $generated@@287)) $generated@@172)
 :pattern ( ($generated@@286 $generated@@287))
)))
(assert (forall (($generated@@288 T@U) ($generated@@289 T@U) ($generated@@290 T@U) ) (!  (=> (and (= (type $generated@@289) $generated@@67) (= (type $generated@@290) ($generated@@79 $generated@@80 $generated@@81))) (= ($generated@@264 ($generated@@286 $generated@@288) $generated@@289 $generated@@290) ($generated@@77 $generated@@288 $generated@@289 $generated@@290)))
 :pattern ( ($generated@@264 ($generated@@286 $generated@@288) $generated@@289 $generated@@290))
)))
(assert (forall (($generated@@291 T@U) ($generated@@292 T@U) ($generated@@293 T@U) ($generated@@294 T@U) ) (!  (=> (and (and (and (and (and (= (type $generated@@291) ($generated@@79 $generated@@80 $generated@@81)) (= (type $generated@@292) ($generated@@79 $generated@@80 $generated@@81))) (= (type $generated@@293) $generated@@172)) (= (type $generated@@294) $generated@@67)) ($generated@@144 $generated@@291 $generated@@292)) ($generated@@264 $generated@@293 $generated@@294 $generated@@291)) ($generated@@264 $generated@@293 $generated@@294 $generated@@292))
 :pattern ( ($generated@@144 $generated@@291 $generated@@292) ($generated@@264 $generated@@293 $generated@@294 $generated@@291))
)))
(assert (forall (($generated@@295 T@U) ($generated@@296 T@U) ($generated@@297 T@U) ($generated@@298 T@U) ) (!  (=> (and (and (and (and (= (type $generated@@295) ($generated@@79 $generated@@80 $generated@@81)) (= (type $generated@@296) ($generated@@79 $generated@@80 $generated@@81))) (= (type $generated@@298) $generated@@67)) ($generated@@144 $generated@@295 $generated@@296)) ($generated@@77 $generated@@297 $generated@@298 $generated@@295)) ($generated@@77 $generated@@297 $generated@@298 $generated@@296))
 :pattern ( ($generated@@144 $generated@@295 $generated@@296) ($generated@@77 $generated@@297 $generated@@298 $generated@@295))
)))
(assert (forall (($generated@@301 T@T) ) (! (= (type ($generated@@300 $generated@@301)) ($generated@@79 $generated@@301 $generated@@2))
 :pattern ( ($generated@@300 $generated@@301))
)))
(assert (forall (($generated@@302 T@U) ) (! (let (($generated@@303 ($generated@@82 (type $generated@@302))))
 (=> (= (type $generated@@302) ($generated@@79 $generated@@303 $generated@@2)) (and (= (= ($generated@@299 $generated@@302) 0) (= $generated@@302 ($generated@@300 $generated@@303))) (=> (not (= ($generated@@299 $generated@@302) 0)) (exists (($generated@@304 T@U) ) (!  (and (= (type $generated@@304) $generated@@303) (< 0 ($generated ($generated@@84 $generated@@302 $generated@@304))))
 :no-pattern (type $generated@@304)
 :no-pattern ($generated $generated@@304)
 :no-pattern ($generated@@0 $generated@@304)
))))))
 :pattern ( ($generated@@299 $generated@@302))
)))
(assert (forall (($generated@@306 T@U) ) (! (= (type ($generated@@305 $generated@@306)) $generated@@72)
 :pattern ( ($generated@@305 $generated@@306))
)))
(assert (forall (($generated@@307 T@U) ) (!  (=> (= (type $generated@@307) $generated@@67) (and (= ($generated@@75 ($generated@@136 $generated@@307)) $generated@@61) (= ($generated@@305 ($generated@@136 $generated@@307)) $generated@@65)))
 :pattern ( ($generated@@136 $generated@@307))
)))
(assert (forall (($generated@@308 T@U) ) (!  (=> (= (type $generated@@308) $generated@@67) (and (= ($generated@@75 ($generated@@156 $generated@@308)) $generated@@62) (= ($generated@@305 ($generated@@156 $generated@@308)) $generated@@65)))
 :pattern ( ($generated@@156 $generated@@308))
)))
(assert  (and (and (and (and (forall (($generated@@314 T@T) ($generated@@315 T@T) ) (= ($generated@@1 ($generated@@311 $generated@@314 $generated@@315)) 18)) (forall (($generated@@316 T@T) ($generated@@317 T@T) ) (! (= ($generated@@312 ($generated@@311 $generated@@316 $generated@@317)) $generated@@316)
 :pattern ( ($generated@@311 $generated@@316 $generated@@317))
))) (forall (($generated@@318 T@T) ($generated@@319 T@T) ) (! (= ($generated@@313 ($generated@@311 $generated@@318 $generated@@319)) $generated@@319)
 :pattern ( ($generated@@311 $generated@@318 $generated@@319))
))) (forall (($generated@@320 T@U) ) (! (let (($generated@@321 ($generated@@312 (type $generated@@320))))
(= (type ($generated@@309 $generated@@320)) ($generated@@79 $generated@@321 $generated@@4)))
 :pattern ( ($generated@@309 $generated@@320))
))) (forall (($generated@@322 T@T) ($generated@@323 T@T) ) (! (= (type ($generated@@310 $generated@@322 $generated@@323)) ($generated@@311 $generated@@322 $generated@@323))
 :pattern ( ($generated@@310 $generated@@322 $generated@@323))
))))
(assert (forall (($generated@@324 T@U) ($generated@@325 T@T) ) (! (let (($generated@@326 (type $generated@@324)))
 (not ($generated@@0 ($generated@@84 ($generated@@309 ($generated@@310 $generated@@326 $generated@@325)) $generated@@324))))
 :pattern ( (let (($generated@@326 (type $generated@@324)))
($generated@@84 ($generated@@309 ($generated@@310 $generated@@326 $generated@@325)) $generated@@324)))
)))
(assert  (and (and (and (and (forall (($generated@@332 T@T) ($generated@@333 T@T) ) (= ($generated@@1 ($generated@@329 $generated@@332 $generated@@333)) 19)) (forall (($generated@@334 T@T) ($generated@@335 T@T) ) (! (= ($generated@@330 ($generated@@329 $generated@@334 $generated@@335)) $generated@@334)
 :pattern ( ($generated@@329 $generated@@334 $generated@@335))
))) (forall (($generated@@336 T@T) ($generated@@337 T@T) ) (! (= ($generated@@331 ($generated@@329 $generated@@336 $generated@@337)) $generated@@337)
 :pattern ( ($generated@@329 $generated@@336 $generated@@337))
))) (forall (($generated@@338 T@U) ) (! (let (($generated@@339 ($generated@@330 (type $generated@@338))))
(= (type ($generated@@327 $generated@@338)) ($generated@@79 $generated@@339 $generated@@4)))
 :pattern ( ($generated@@327 $generated@@338))
))) (forall (($generated@@340 T@T) ($generated@@341 T@T) ) (! (= (type ($generated@@328 $generated@@340 $generated@@341)) ($generated@@329 $generated@@340 $generated@@341))
 :pattern ( ($generated@@328 $generated@@340 $generated@@341))
))))
(assert (forall (($generated@@342 T@U) ($generated@@343 T@T) ) (! (let (($generated@@344 (type $generated@@342)))
 (not ($generated@@0 ($generated@@84 ($generated@@327 ($generated@@328 $generated@@344 $generated@@343)) $generated@@342))))
 :pattern ( (let (($generated@@344 (type $generated@@342)))
($generated@@84 ($generated@@327 ($generated@@328 $generated@@344 $generated@@343)) $generated@@342)))
)))
(assert (forall (($generated@@345 T@U) ) (! (let (($generated@@346 ($generated@@82 (type $generated@@345))))
 (=> (= (type $generated@@345) ($generated@@79 $generated@@346 $generated@@2)) (= ($generated@@178 $generated@@345) (forall (($generated@@347 T@U) ) (!  (=> (= (type $generated@@347) $generated@@346) (and (<= 0 ($generated ($generated@@84 $generated@@345 $generated@@347))) (<= ($generated ($generated@@84 $generated@@345 $generated@@347)) ($generated@@299 $generated@@345))))
 :pattern ( ($generated@@84 $generated@@345 $generated@@347))
)))))
 :pattern ( ($generated@@178 $generated@@345))
)))
(assert (forall (($generated@@348 T@U) ($generated@@349 T@U) ) (!  (=> (and (= (type $generated@@348) $generated@@67) (= (type $generated@@349) $generated@@80)) (= ($generated@@139 $generated@@349 ($generated@@136 $generated@@348))  (or (= $generated@@349 $generated@@137) (= ($generated@@138 $generated@@349) ($generated@@136 $generated@@348)))))
 :pattern ( ($generated@@139 $generated@@349 ($generated@@136 $generated@@348)))
)))
(assert (forall (($generated@@350 T@U) ) (! (let (($generated@@351 ($generated@@313 (type $generated@@350))))
(let (($generated@@352 ($generated@@312 (type $generated@@350))))
 (=> (= (type $generated@@350) ($generated@@311 $generated@@352 $generated@@351)) (or (= $generated@@350 ($generated@@310 $generated@@352 $generated@@351)) (exists (($generated@@353 T@U) ) (!  (and (= (type $generated@@353) $generated@@352) ($generated@@0 ($generated@@84 ($generated@@309 $generated@@350) $generated@@353)))
 :no-pattern (type $generated@@353)
 :no-pattern ($generated $generated@@353)
 :no-pattern ($generated@@0 $generated@@353)
))))))
 :pattern ( ($generated@@309 $generated@@350))
)))
(assert (forall (($generated@@355 T@U) ) (! (let (($generated@@356 ($generated@@313 (type $generated@@355))))
(= (type ($generated@@354 $generated@@355)) ($generated@@79 $generated@@356 $generated@@4)))
 :pattern ( ($generated@@354 $generated@@355))
)))
(assert (forall (($generated@@357 T@U) ) (! (let (($generated@@358 ($generated@@313 (type $generated@@357))))
(let (($generated@@359 ($generated@@312 (type $generated@@357))))
 (=> (= (type $generated@@357) ($generated@@311 $generated@@359 $generated@@358)) (or (= $generated@@357 ($generated@@310 $generated@@359 $generated@@358)) (exists (($generated@@360 T@U) ) (!  (and (= (type $generated@@360) $generated@@358) ($generated@@0 ($generated@@84 ($generated@@354 $generated@@357) $generated@@360)))
 :no-pattern (type $generated@@360)
 :no-pattern ($generated $generated@@360)
 :no-pattern ($generated@@0 $generated@@360)
))))))
 :pattern ( ($generated@@354 $generated@@357))
)))
(assert (forall (($generated@@361 T@U) ) (! (let (($generated@@362 ($generated@@331 (type $generated@@361))))
(let (($generated@@363 ($generated@@330 (type $generated@@361))))
 (=> (= (type $generated@@361) ($generated@@329 $generated@@363 $generated@@362)) (or (= $generated@@361 ($generated@@328 $generated@@363 $generated@@362)) (exists (($generated@@364 T@U) ) (!  (and (= (type $generated@@364) $generated@@363) ($generated@@0 ($generated@@84 ($generated@@327 $generated@@361) $generated@@364)))
 :no-pattern (type $generated@@364)
 :no-pattern ($generated $generated@@364)
 :no-pattern ($generated@@0 $generated@@364)
))))))
 :pattern ( ($generated@@327 $generated@@361))
)))
(assert (forall (($generated@@366 T@U) ) (! (let (($generated@@367 ($generated@@331 (type $generated@@366))))
(= (type ($generated@@365 $generated@@366)) ($generated@@79 $generated@@367 $generated@@4)))
 :pattern ( ($generated@@365 $generated@@366))
)))
(assert (forall (($generated@@368 T@U) ) (! (let (($generated@@369 ($generated@@331 (type $generated@@368))))
(let (($generated@@370 ($generated@@330 (type $generated@@368))))
 (=> (= (type $generated@@368) ($generated@@329 $generated@@370 $generated@@369)) (or (= $generated@@368 ($generated@@328 $generated@@370 $generated@@369)) (exists (($generated@@371 T@U) ) (!  (and (= (type $generated@@371) $generated@@369) ($generated@@0 ($generated@@84 ($generated@@365 $generated@@368) $generated@@371)))
 :no-pattern (type $generated@@371)
 :no-pattern ($generated $generated@@371)
 :no-pattern ($generated@@0 $generated@@371)
))))))
 :pattern ( ($generated@@365 $generated@@368))
)))
(assert (forall (($generated@@372 T@U) ($generated@@373 T@U) ) (!  (=> (and (= (type $generated@@372) ($generated@@79 $generated@@172 $generated@@2)) (= (type $generated@@373) $generated@@67)) (= ($generated@@139 $generated@@372 ($generated@@177 $generated@@373)) (forall (($generated@@374 T@U) ) (!  (=> (and (= (type $generated@@374) $generated@@172) (< 0 ($generated ($generated@@84 $generated@@372 $generated@@374)))) ($generated@@239 $generated@@374 $generated@@373))
 :pattern ( ($generated@@84 $generated@@372 $generated@@374))
))))
 :pattern ( ($generated@@139 $generated@@372 ($generated@@177 $generated@@373)))
)))
(assert (forall (($generated@@375 T@U) ($generated@@376 T@U) ($generated@@377 T@U) ) (!  (=> (and (and (= (type $generated@@375) ($generated@@79 $generated@@172 $generated@@4)) (= (type $generated@@376) $generated@@67)) (= (type $generated@@377) ($generated@@79 $generated@@80 $generated@@81))) (= ($generated@@77 $generated@@375 ($generated@@248 $generated@@376) $generated@@377) (forall (($generated@@378 T@U) ) (!  (=> (and (= (type $generated@@378) $generated@@172) ($generated@@0 ($generated@@84 $generated@@375 $generated@@378))) ($generated@@264 $generated@@378 $generated@@376 $generated@@377))
 :pattern ( ($generated@@84 $generated@@375 $generated@@378))
))))
 :pattern ( ($generated@@77 $generated@@375 ($generated@@248 $generated@@376) $generated@@377))
)))
(assert (forall (($generated@@379 T@U) ($generated@@380 T@U) ($generated@@381 T@U) ) (!  (=> (and (and (= (type $generated@@379) ($generated@@79 $generated@@172 $generated@@4)) (= (type $generated@@380) $generated@@67)) (= (type $generated@@381) ($generated@@79 $generated@@80 $generated@@81))) (= ($generated@@77 $generated@@379 ($generated@@253 $generated@@380) $generated@@381) (forall (($generated@@382 T@U) ) (!  (=> (and (= (type $generated@@382) $generated@@172) ($generated@@0 ($generated@@84 $generated@@379 $generated@@382))) ($generated@@264 $generated@@382 $generated@@380 $generated@@381))
 :pattern ( ($generated@@84 $generated@@379 $generated@@382))
))))
 :pattern ( ($generated@@77 $generated@@379 ($generated@@253 $generated@@380) $generated@@381))
)))
(assert (forall (($generated@@383 T@U) ) (! (let (($generated@@384 (type $generated@@383)))
(= ($generated ($generated@@84 ($generated@@300 $generated@@384) $generated@@383)) 0))
 :pattern ( (let (($generated@@384 (type $generated@@383)))
($generated@@84 ($generated@@300 $generated@@384) $generated@@383)))
)))
(assert  (and (and (forall (($generated@@388 T@U) ) (! (= (type ($generated@@385 $generated@@388)) ($generated@@79 $generated@@172 $generated@@4))
 :pattern ( ($generated@@385 $generated@@388))
)) (forall (($generated@@389 T@T) ($generated@@390 T@U) ) (! (= (type ($generated@@386 $generated@@389 $generated@@390)) $generated@@389)
 :pattern ( ($generated@@386 $generated@@389 $generated@@390))
))) (forall (($generated@@391 T@U) ) (! (let (($generated@@392 ($generated@@313 (type $generated@@391))))
(let (($generated@@393 ($generated@@312 (type $generated@@391))))
(= (type ($generated@@387 $generated@@391)) ($generated@@79 $generated@@393 $generated@@392))))
 :pattern ( ($generated@@387 $generated@@391))
))))
(assert (forall (($generated@@394 T@U) ($generated@@395 T@U) ) (!  (=> (and (= (type $generated@@394) ($generated@@311 $generated@@172 $generated@@172)) (= (type $generated@@395) $generated@@172)) (= ($generated@@0 ($generated@@84 ($generated@@385 $generated@@394) $generated@@395))  (and ($generated@@0 ($generated@@84 ($generated@@309 $generated@@394) ($generated@@170 ($generated@@386 $generated@@163 $generated@@395)))) (= ($generated@@84 ($generated@@387 $generated@@394) ($generated@@170 ($generated@@386 $generated@@163 $generated@@395))) ($generated@@171 ($generated@@386 $generated@@163 $generated@@395))))))
 :pattern ( ($generated@@84 ($generated@@385 $generated@@394) $generated@@395))
)))
(assert  (and (forall (($generated@@398 T@U) ) (! (= (type ($generated@@396 $generated@@398)) ($generated@@79 $generated@@172 $generated@@4))
 :pattern ( ($generated@@396 $generated@@398))
)) (forall (($generated@@399 T@U) ) (! (let (($generated@@400 ($generated@@331 (type $generated@@399))))
(let (($generated@@401 ($generated@@330 (type $generated@@399))))
(= (type ($generated@@397 $generated@@399)) ($generated@@79 $generated@@401 $generated@@400))))
 :pattern ( ($generated@@397 $generated@@399))
))))
(assert (forall (($generated@@402 T@U) ($generated@@403 T@U) ) (!  (=> (and (= (type $generated@@402) ($generated@@329 $generated@@172 $generated@@172)) (= (type $generated@@403) $generated@@172)) (= ($generated@@0 ($generated@@84 ($generated@@396 $generated@@402) $generated@@403))  (and ($generated@@0 ($generated@@84 ($generated@@327 $generated@@402) ($generated@@170 ($generated@@386 $generated@@163 $generated@@403)))) (= ($generated@@84 ($generated@@397 $generated@@402) ($generated@@170 ($generated@@386 $generated@@163 $generated@@403))) ($generated@@171 ($generated@@386 $generated@@163 $generated@@403))))))
 :pattern ( ($generated@@84 ($generated@@396 $generated@@402) $generated@@403))
)))
(assert (forall (($generated@@404 T@U) ($generated@@405 T@U) ) (! (let (($generated@@406 (type $generated@@405)))
(let (($generated@@407 ($generated@@312 (type $generated@@404))))
 (=> (= (type $generated@@404) ($generated@@311 $generated@@407 $generated@@406)) (= ($generated@@0 ($generated@@84 ($generated@@354 $generated@@404) $generated@@405)) (exists (($generated@@408 T@U) ) (!  (and (= (type $generated@@408) $generated@@407) (and ($generated@@0 ($generated@@84 ($generated@@309 $generated@@404) $generated@@408)) (= $generated@@405 ($generated@@84 ($generated@@387 $generated@@404) $generated@@408))))
 :pattern ( ($generated@@84 ($generated@@309 $generated@@404) $generated@@408))
 :pattern ( ($generated@@84 ($generated@@387 $generated@@404) $generated@@408))
))))))
 :pattern ( ($generated@@84 ($generated@@354 $generated@@404) $generated@@405))
)))
(assert (forall (($generated@@409 T@U) ($generated@@410 T@U) ) (! (let (($generated@@411 (type $generated@@410)))
(let (($generated@@412 ($generated@@330 (type $generated@@409))))
 (=> (= (type $generated@@409) ($generated@@329 $generated@@412 $generated@@411)) (= ($generated@@0 ($generated@@84 ($generated@@365 $generated@@409) $generated@@410)) (exists (($generated@@413 T@U) ) (!  (and (= (type $generated@@413) $generated@@412) (and ($generated@@0 ($generated@@84 ($generated@@327 $generated@@409) $generated@@413)) (= $generated@@410 ($generated@@84 ($generated@@397 $generated@@409) $generated@@413))))
 :pattern ( ($generated@@84 ($generated@@327 $generated@@409) $generated@@413))
 :pattern ( ($generated@@84 ($generated@@397 $generated@@409) $generated@@413))
))))))
 :pattern ( ($generated@@84 ($generated@@365 $generated@@409) $generated@@410))
)))
(assert (forall (($generated@@415 T@U) ($generated@@416 T@U) ) (! (= (type ($generated@@414 $generated@@415 $generated@@416)) $generated@@67)
 :pattern ( ($generated@@414 $generated@@415 $generated@@416))
)))
(assert (forall (($generated@@417 T@U) ($generated@@418 T@U) ($generated@@419 T@U) ($generated@@420 T@U) ) (!  (=> (and (and (and (= (type $generated@@417) ($generated@@311 $generated@@172 $generated@@172)) (= (type $generated@@418) $generated@@67)) (= (type $generated@@419) $generated@@67)) (= (type $generated@@420) ($generated@@79 $generated@@80 $generated@@81))) (= ($generated@@77 $generated@@417 ($generated@@414 $generated@@418 $generated@@419) $generated@@420) (forall (($generated@@421 T@U) ) (!  (=> (and (= (type $generated@@421) $generated@@172) ($generated@@0 ($generated@@84 ($generated@@309 $generated@@417) $generated@@421))) (and ($generated@@264 ($generated@@84 ($generated@@387 $generated@@417) $generated@@421) $generated@@419 $generated@@420) ($generated@@264 $generated@@421 $generated@@418 $generated@@420)))
 :pattern ( ($generated@@84 ($generated@@387 $generated@@417) $generated@@421))
 :pattern ( ($generated@@84 ($generated@@309 $generated@@417) $generated@@421))
))))
 :pattern ( ($generated@@77 $generated@@417 ($generated@@414 $generated@@418 $generated@@419) $generated@@420))
)))
(assert (forall (($generated@@423 T@U) ($generated@@424 T@U) ) (! (= (type ($generated@@422 $generated@@423 $generated@@424)) $generated@@67)
 :pattern ( ($generated@@422 $generated@@423 $generated@@424))
)))
(assert (forall (($generated@@425 T@U) ($generated@@426 T@U) ($generated@@427 T@U) ($generated@@428 T@U) ) (!  (=> (and (and (and (= (type $generated@@425) ($generated@@329 $generated@@172 $generated@@172)) (= (type $generated@@426) $generated@@67)) (= (type $generated@@427) $generated@@67)) (= (type $generated@@428) ($generated@@79 $generated@@80 $generated@@81))) (= ($generated@@77 $generated@@425 ($generated@@422 $generated@@426 $generated@@427) $generated@@428) (forall (($generated@@429 T@U) ) (!  (=> (and (= (type $generated@@429) $generated@@172) ($generated@@0 ($generated@@84 ($generated@@327 $generated@@425) $generated@@429))) (and ($generated@@264 ($generated@@84 ($generated@@397 $generated@@425) $generated@@429) $generated@@427 $generated@@428) ($generated@@264 $generated@@429 $generated@@426 $generated@@428)))
 :pattern ( ($generated@@84 ($generated@@397 $generated@@425) $generated@@429))
 :pattern ( ($generated@@84 ($generated@@327 $generated@@425) $generated@@429))
))))
 :pattern ( ($generated@@77 $generated@@425 ($generated@@422 $generated@@426 $generated@@427) $generated@@428))
)))
(assert (forall (($generated@@430 T@U) ($generated@@431 T@U) ($generated@@432 T@U) ) (!  (=> (and (and (and (and (= (type $generated@@430) ($generated@@79 $generated@@80 $generated@@81)) (= (type $generated@@431) ($generated@@79 $generated@@80 $generated@@81))) (= (type $generated@@432) ($generated@@79 $generated@@80 $generated@@81))) (not (= $generated@@430 $generated@@432))) (and ($generated@@144 $generated@@430 $generated@@431) ($generated@@144 $generated@@431 $generated@@432))) ($generated@@144 $generated@@430 $generated@@432))
 :pattern ( ($generated@@144 $generated@@430 $generated@@431) ($generated@@144 $generated@@431 $generated@@432))
)))
(assert (forall (($generated@@434 T@T) ) (! (= (type ($generated@@433 $generated@@434)) ($generated@@79 $generated@@434 $generated@@4))
 :pattern ( ($generated@@433 $generated@@434))
)))
(assert (forall (($generated@@435 T@U) ) (! (let (($generated@@436 ($generated@@331 (type $generated@@435))))
(let (($generated@@437 ($generated@@330 (type $generated@@435))))
 (=> (= (type $generated@@435) ($generated@@329 $generated@@437 $generated@@436)) (= (= $generated@@435 ($generated@@328 $generated@@437 $generated@@436)) (= ($generated@@327 $generated@@435) ($generated@@433 $generated@@437))))))
 :pattern ( ($generated@@327 $generated@@435))
)))
(assert (forall (($generated@@438 T@U) ) (! (let (($generated@@439 ($generated@@331 (type $generated@@438))))
(let (($generated@@440 ($generated@@330 (type $generated@@438))))
 (=> (= (type $generated@@438) ($generated@@329 $generated@@440 $generated@@439)) (= (= $generated@@438 ($generated@@328 $generated@@440 $generated@@439)) (= ($generated@@365 $generated@@438) ($generated@@433 $generated@@439))))))
 :pattern ( ($generated@@365 $generated@@438))
)))
(assert (forall (($generated@@441 T@U) ) (! (let (($generated@@442 ($generated@@331 (type $generated@@441))))
(let (($generated@@443 ($generated@@330 (type $generated@@441))))
 (=> (= (type $generated@@441) ($generated@@329 $generated@@443 $generated@@442)) (= (= $generated@@441 ($generated@@328 $generated@@443 $generated@@442)) (= ($generated@@396 $generated@@441) ($generated@@433 $generated@@172))))))
 :pattern ( ($generated@@396 $generated@@441))
)))
(assert (forall (($generated@@444 T@U) ) (! (let (($generated@@445 ($generated@@313 (type $generated@@444))))
(let (($generated@@446 ($generated@@312 (type $generated@@444))))
 (=> (= (type $generated@@444) ($generated@@311 $generated@@446 $generated@@445)) (or (= $generated@@444 ($generated@@310 $generated@@446 $generated@@445)) (exists (($generated@@447 T@U) ($generated@@448 T@U) ) (!  (and (and (= (type $generated@@447) $generated@@172) (= (type $generated@@448) $generated@@172)) ($generated@@0 ($generated@@84 ($generated@@385 $generated@@444) ($generated@@286 ($generated@@238 $generated@@447 $generated@@448)))))
 :no-pattern (type $generated@@447)
 :no-pattern (type $generated@@448)
 :no-pattern ($generated $generated@@447)
 :no-pattern ($generated@@0 $generated@@447)
 :no-pattern ($generated $generated@@448)
 :no-pattern ($generated@@0 $generated@@448)
))))))
 :pattern ( ($generated@@385 $generated@@444))
)))
(assert (forall (($generated@@449 T@U) ) (! (let (($generated@@450 ($generated@@331 (type $generated@@449))))
(let (($generated@@451 ($generated@@330 (type $generated@@449))))
 (=> (= (type $generated@@449) ($generated@@329 $generated@@451 $generated@@450)) (or (= $generated@@449 ($generated@@328 $generated@@451 $generated@@450)) (exists (($generated@@452 T@U) ($generated@@453 T@U) ) (!  (and (and (= (type $generated@@452) $generated@@172) (= (type $generated@@453) $generated@@172)) ($generated@@0 ($generated@@84 ($generated@@396 $generated@@449) ($generated@@286 ($generated@@238 $generated@@452 $generated@@453)))))
 :no-pattern (type $generated@@452)
 :no-pattern (type $generated@@453)
 :no-pattern ($generated $generated@@452)
 :no-pattern ($generated@@0 $generated@@452)
 :no-pattern ($generated $generated@@453)
 :no-pattern ($generated@@0 $generated@@453)
))))))
 :pattern ( ($generated@@396 $generated@@449))
)))
(assert (forall (($generated@@454 T@U) ) (!  (=> (and (= (type $generated@@454) $generated@@172) ($generated@@239 $generated@@454 $generated@@46)) (and (= ($generated@@286 ($generated@@386 $generated@@2 $generated@@454)) $generated@@454) ($generated@@139 ($generated@@386 $generated@@2 $generated@@454) $generated@@46)))
 :pattern ( ($generated@@239 $generated@@454 $generated@@46))
)))
(assert (forall (($generated@@455 T@U) ) (!  (=> (and (= (type $generated@@455) $generated@@172) ($generated@@239 $generated@@455 $generated@@47)) (and (= ($generated@@286 ($generated@@386 $generated@@3 $generated@@455)) $generated@@455) ($generated@@139 ($generated@@386 $generated@@3 $generated@@455) $generated@@47)))
 :pattern ( ($generated@@239 $generated@@455 $generated@@47))
)))
(assert (forall (($generated@@456 T@U) ) (!  (=> (and (= (type $generated@@456) $generated@@172) ($generated@@239 $generated@@456 $generated@@44)) (and (= ($generated@@286 ($generated@@386 $generated@@4 $generated@@456)) $generated@@456) ($generated@@139 ($generated@@386 $generated@@4 $generated@@456) $generated@@44)))
 :pattern ( ($generated@@239 $generated@@456 $generated@@44))
)))
(assert (= ($generated@@1 $generated@@457) 20))
(assert (forall (($generated@@458 T@U) ) (!  (=> (and (= (type $generated@@458) $generated@@172) ($generated@@239 $generated@@458 $generated@@45)) (and (= ($generated@@286 ($generated@@386 $generated@@457 $generated@@458)) $generated@@458) ($generated@@139 ($generated@@386 $generated@@457 $generated@@458) $generated@@45)))
 :pattern ( ($generated@@239 $generated@@458 $generated@@45))
)))
(assert (forall (($generated@@459 T@U) ($generated@@460 T@U) ) (!  (=> (= (type $generated@@460) $generated@@67) (= ($generated@@239 ($generated@@286 $generated@@459) $generated@@460) ($generated@@139 $generated@@459 $generated@@460)))
 :pattern ( ($generated@@239 ($generated@@286 $generated@@459) $generated@@460))
)))
(assert (forall (($generated@@461 T@U) ) (!  (=> (= (type $generated@@461) $generated@@80) (<= 0 ($generated@@135 $generated@@461)))
 :no-pattern (type $generated@@461)
 :no-pattern ($generated $generated@@461)
 :no-pattern ($generated@@0 $generated@@461)
)))
(assert (forall (($generated@@462 T@U) ) (! (let (($generated@@463 ($generated@@82 (type $generated@@462))))
 (=> (= (type $generated@@462) ($generated@@79 $generated@@463 $generated@@2)) (<= 0 ($generated@@299 $generated@@462))))
 :pattern ( ($generated@@299 $generated@@462))
)))
(assert (forall (($generated@@464 T@U) ) (! (let (($generated@@465 ($generated@@279 (type $generated@@464))))
 (=> (= (type $generated@@464) ($generated@@278 $generated@@465)) (<= 0 ($generated@@277 $generated@@464))))
 :pattern ( ($generated@@277 $generated@@464))
)))
(assert (forall (($generated@@467 T@U) ) (! (= (type ($generated@@466 $generated@@467)) $generated@@67)
 :pattern ( ($generated@@466 $generated@@467))
)))
(assert (forall (($generated@@468 T@U) ($generated@@469 T@U) ) (!  (=> (and (= (type $generated@@468) $generated@@67) (= (type $generated@@469) $generated@@67)) (= ($generated@@466 ($generated@@414 $generated@@468 $generated@@469)) $generated@@468))
 :pattern ( ($generated@@414 $generated@@468 $generated@@469))
)))
(assert (forall (($generated@@471 T@U) ) (! (= (type ($generated@@470 $generated@@471)) $generated@@67)
 :pattern ( ($generated@@470 $generated@@471))
)))
(assert (forall (($generated@@472 T@U) ($generated@@473 T@U) ) (!  (=> (and (= (type $generated@@472) $generated@@67) (= (type $generated@@473) $generated@@67)) (= ($generated@@470 ($generated@@414 $generated@@472 $generated@@473)) $generated@@473))
 :pattern ( ($generated@@414 $generated@@472 $generated@@473))
)))
(assert (forall (($generated@@474 T@U) ($generated@@475 T@U) ) (!  (=> (and (= (type $generated@@474) $generated@@67) (= (type $generated@@475) $generated@@67)) (= ($generated@@75 ($generated@@414 $generated@@474 $generated@@475)) $generated@@58))
 :pattern ( ($generated@@414 $generated@@474 $generated@@475))
)))
(assert (forall (($generated@@477 T@U) ) (! (= (type ($generated@@476 $generated@@477)) $generated@@67)
 :pattern ( ($generated@@476 $generated@@477))
)))
(assert (forall (($generated@@478 T@U) ($generated@@479 T@U) ) (!  (=> (and (= (type $generated@@478) $generated@@67) (= (type $generated@@479) $generated@@67)) (= ($generated@@476 ($generated@@422 $generated@@478 $generated@@479)) $generated@@478))
 :pattern ( ($generated@@422 $generated@@478 $generated@@479))
)))
(assert (forall (($generated@@481 T@U) ) (! (= (type ($generated@@480 $generated@@481)) $generated@@67)
 :pattern ( ($generated@@480 $generated@@481))
)))
(assert (forall (($generated@@482 T@U) ($generated@@483 T@U) ) (!  (=> (and (= (type $generated@@482) $generated@@67) (= (type $generated@@483) $generated@@67)) (= ($generated@@480 ($generated@@422 $generated@@482 $generated@@483)) $generated@@483))
 :pattern ( ($generated@@422 $generated@@482 $generated@@483))
)))
(assert (forall (($generated@@484 T@U) ($generated@@485 T@U) ) (!  (=> (and (= (type $generated@@484) $generated@@67) (= (type $generated@@485) $generated@@67)) (= ($generated@@75 ($generated@@422 $generated@@484 $generated@@485)) $generated@@59))
 :pattern ( ($generated@@422 $generated@@484 $generated@@485))
)))
(assert (forall (($generated@@486 T@U) ($generated@@487 T@U) ) (!  (=> (and (= (type $generated@@486) $generated@@172) (= (type $generated@@487) $generated@@172)) (= ($generated@@270 ($generated@@238 $generated@@486 $generated@@487)) $generated@@63))
 :pattern ( ($generated@@238 $generated@@486 $generated@@487))
)))
(assert (forall (($generated@@489 T@U) ) (! (= (type ($generated@@488 $generated@@489)) $generated@@67)
 :pattern ( ($generated@@488 $generated@@489))
)))
(assert (forall (($generated@@490 T@U) ($generated@@491 T@U) ) (!  (=> (and (= (type $generated@@490) $generated@@67) (= (type $generated@@491) $generated@@67)) (= ($generated@@488 ($generated@@162 $generated@@490 $generated@@491)) $generated@@490))
 :pattern ( ($generated@@162 $generated@@490 $generated@@491))
)))
(assert (forall (($generated@@493 T@U) ) (! (= (type ($generated@@492 $generated@@493)) $generated@@67)
 :pattern ( ($generated@@492 $generated@@493))
)))
(assert (forall (($generated@@494 T@U) ($generated@@495 T@U) ) (!  (=> (and (= (type $generated@@494) $generated@@67) (= (type $generated@@495) $generated@@67)) (= ($generated@@492 ($generated@@162 $generated@@494 $generated@@495)) $generated@@495))
 :pattern ( ($generated@@162 $generated@@494 $generated@@495))
)))
(assert (forall (($generated@@496 T@U) ($generated@@497 T@U) ) (!  (=> (and (= (type $generated@@496) $generated@@172) (= (type $generated@@497) $generated@@172)) (= ($generated@@170 ($generated@@238 $generated@@496 $generated@@497)) $generated@@496))
 :pattern ( ($generated@@238 $generated@@496 $generated@@497))
)))
(assert (forall (($generated@@498 T@U) ($generated@@499 T@U) ) (!  (=> (and (= (type $generated@@498) $generated@@172) (= (type $generated@@499) $generated@@172)) (= ($generated@@171 ($generated@@238 $generated@@498 $generated@@499)) $generated@@499))
 :pattern ( ($generated@@238 $generated@@498 $generated@@499))
)))
(assert  (and (forall (($generated@@502 T@U) ) (! (= (type ($generated@@500 $generated@@502)) $generated@@67)
 :pattern ( ($generated@@500 $generated@@502))
)) (forall (($generated@@503 T@U) ($generated@@504 Int) ) (! (let (($generated@@505 ($generated@@279 (type $generated@@503))))
(= (type ($generated@@501 $generated@@503 $generated@@504)) $generated@@505))
 :pattern ( ($generated@@501 $generated@@503 $generated@@504))
))))
(assert (forall (($generated@@506 T@U) ($generated@@507 T@U) ($generated@@508 T@U) ) (!  (=> (and (and (= (type $generated@@506) ($generated@@278 $generated@@172)) (= (type $generated@@507) $generated@@67)) (= (type $generated@@508) ($generated@@79 $generated@@80 $generated@@81))) (= ($generated@@77 $generated@@506 ($generated@@500 $generated@@507) $generated@@508) (forall (($generated@@509 Int) ) (!  (=> (and (<= 0 $generated@@509) (< $generated@@509 ($generated@@277 $generated@@506))) ($generated@@264 ($generated@@501 $generated@@506 $generated@@509) $generated@@507 $generated@@508))
 :pattern ( ($generated@@501 $generated@@506 $generated@@509))
))))
 :pattern ( ($generated@@77 $generated@@506 ($generated@@500 $generated@@507) $generated@@508))
)))
(assert (forall (($generated@@511 Int) ) (! (= ($generated@@510 ($generated@@78 $generated@@511)) $generated@@511)
 :pattern ( ($generated@@78 $generated@@511))
)))
(assert (forall (($generated@@513 T@U) ) (! (= (type ($generated@@512 $generated@@513)) $generated@@67)
 :pattern ( ($generated@@512 $generated@@513))
)))
(assert (forall (($generated@@514 T@U) ) (!  (=> (= (type $generated@@514) $generated@@67) (= ($generated@@512 ($generated@@248 $generated@@514)) $generated@@514))
 :pattern ( ($generated@@248 $generated@@514))
)))
(assert (forall (($generated@@515 T@U) ) (!  (=> (= (type $generated@@515) $generated@@67) (= ($generated@@75 ($generated@@248 $generated@@515)) $generated@@54))
 :pattern ( ($generated@@248 $generated@@515))
)))
(assert (forall (($generated@@517 T@U) ) (! (= (type ($generated@@516 $generated@@517)) $generated@@67)
 :pattern ( ($generated@@516 $generated@@517))
)))
(assert (forall (($generated@@518 T@U) ) (!  (=> (= (type $generated@@518) $generated@@67) (= ($generated@@516 ($generated@@253 $generated@@518)) $generated@@518))
 :pattern ( ($generated@@253 $generated@@518))
)))
(assert (forall (($generated@@519 T@U) ) (!  (=> (= (type $generated@@519) $generated@@67) (= ($generated@@75 ($generated@@253 $generated@@519)) $generated@@55))
 :pattern ( ($generated@@253 $generated@@519))
)))
(assert (forall (($generated@@521 T@U) ) (! (= (type ($generated@@520 $generated@@521)) $generated@@67)
 :pattern ( ($generated@@520 $generated@@521))
)))
(assert (forall (($generated@@522 T@U) ) (!  (=> (= (type $generated@@522) $generated@@67) (= ($generated@@520 ($generated@@177 $generated@@522)) $generated@@522))
 :pattern ( ($generated@@177 $generated@@522))
)))
(assert (forall (($generated@@523 T@U) ) (!  (=> (= (type $generated@@523) $generated@@67) (= ($generated@@75 ($generated@@177 $generated@@523)) $generated@@56))
 :pattern ( ($generated@@177 $generated@@523))
)))
(assert (forall (($generated@@525 T@U) ) (! (= (type ($generated@@524 $generated@@525)) $generated@@67)
 :pattern ( ($generated@@524 $generated@@525))
)))
(assert (forall (($generated@@526 T@U) ) (!  (=> (= (type $generated@@526) $generated@@67) (= ($generated@@524 ($generated@@500 $generated@@526)) $generated@@526))
 :pattern ( ($generated@@500 $generated@@526))
)))
(assert (forall (($generated@@527 T@U) ) (!  (=> (= (type $generated@@527) $generated@@67) (= ($generated@@75 ($generated@@500 $generated@@527)) $generated@@57))
 :pattern ( ($generated@@500 $generated@@527))
)))
(assert (forall (($generated@@529 T@U) ) (! (= (type ($generated@@528 $generated@@529)) $generated@@67)
 :pattern ( ($generated@@528 $generated@@529))
)))
(assert (forall (($generated@@530 T@U) ) (!  (=> (= (type $generated@@530) $generated@@67) (= ($generated@@528 ($generated@@136 $generated@@530)) $generated@@530))
 :pattern ( ($generated@@136 $generated@@530))
)))
(assert (forall (($generated@@532 T@U) ) (! (= (type ($generated@@531 $generated@@532)) $generated@@67)
 :pattern ( ($generated@@531 $generated@@532))
)))
(assert (forall (($generated@@533 T@U) ) (!  (=> (= (type $generated@@533) $generated@@67) (= ($generated@@531 ($generated@@156 $generated@@533)) $generated@@533))
 :pattern ( ($generated@@156 $generated@@533))
)))
(assert (forall (($generated@@534 T@U) ) (! (let (($generated@@535 (type $generated@@534)))
(= ($generated@@386 $generated@@535 ($generated@@286 $generated@@534)) $generated@@534))
 :pattern ( ($generated@@286 $generated@@534))
)))
(assert (forall (($generated@@536 T@U) ($generated@@537 T@U) ($generated@@538 T@U) ) (!  (=> (and (and (= (type $generated@@536) ($generated@@311 $generated@@172 $generated@@172)) (= (type $generated@@537) $generated@@67)) (= (type $generated@@538) $generated@@67)) (= ($generated@@139 $generated@@536 ($generated@@414 $generated@@537 $generated@@538)) (forall (($generated@@539 T@U) ) (!  (=> (and (= (type $generated@@539) $generated@@172) ($generated@@0 ($generated@@84 ($generated@@309 $generated@@536) $generated@@539))) (and ($generated@@239 ($generated@@84 ($generated@@387 $generated@@536) $generated@@539) $generated@@538) ($generated@@239 $generated@@539 $generated@@537)))
 :pattern ( ($generated@@84 ($generated@@387 $generated@@536) $generated@@539))
 :pattern ( ($generated@@84 ($generated@@309 $generated@@536) $generated@@539))
))))
 :pattern ( ($generated@@139 $generated@@536 ($generated@@414 $generated@@537 $generated@@538)))
)))
(assert (forall (($generated@@540 T@U) ($generated@@541 T@U) ($generated@@542 T@U) ) (!  (=> (and (and (= (type $generated@@540) ($generated@@329 $generated@@172 $generated@@172)) (= (type $generated@@541) $generated@@67)) (= (type $generated@@542) $generated@@67)) (= ($generated@@139 $generated@@540 ($generated@@422 $generated@@541 $generated@@542)) (forall (($generated@@543 T@U) ) (!  (=> (and (= (type $generated@@543) $generated@@172) ($generated@@0 ($generated@@84 ($generated@@327 $generated@@540) $generated@@543))) (and ($generated@@239 ($generated@@84 ($generated@@397 $generated@@540) $generated@@543) $generated@@542) ($generated@@239 $generated@@543 $generated@@541)))
 :pattern ( ($generated@@84 ($generated@@397 $generated@@540) $generated@@543))
 :pattern ( ($generated@@84 ($generated@@327 $generated@@540) $generated@@543))
))))
 :pattern ( ($generated@@139 $generated@@540 ($generated@@422 $generated@@541 $generated@@542)))
)))
(assert (forall (($generated@@546 T@U) ($generated@@547 T@U) ) (!  (=> (and (= (type $generated@@546) $generated@@172) (= (type $generated@@547) $generated@@172)) (< ($generated@@544 $generated@@546) ($generated@@545 ($generated@@238 $generated@@546 $generated@@547))))
 :pattern ( ($generated@@238 $generated@@546 $generated@@547))
)))
(assert (forall (($generated@@548 T@U) ($generated@@549 T@U) ) (!  (=> (and (= (type $generated@@548) $generated@@172) (= (type $generated@@549) $generated@@172)) (< ($generated@@544 $generated@@549) ($generated@@545 ($generated@@238 $generated@@548 $generated@@549))))
 :pattern ( ($generated@@238 $generated@@548 $generated@@549))
)))
(assert (forall (($generated@@550 T@U) ($generated@@551 T@U) ($generated@@552 T@U) ) (!  (=> (and (and (and (= (type $generated@@550) $generated@@172) (= (type $generated@@551) $generated@@67)) (= (type $generated@@552) $generated@@67)) ($generated@@239 $generated@@550 ($generated@@414 $generated@@551 $generated@@552))) (and (= ($generated@@286 ($generated@@386 ($generated@@311 $generated@@172 $generated@@172) $generated@@550)) $generated@@550) ($generated@@139 ($generated@@386 ($generated@@311 $generated@@172 $generated@@172) $generated@@550) ($generated@@414 $generated@@551 $generated@@552))))
 :pattern ( ($generated@@239 $generated@@550 ($generated@@414 $generated@@551 $generated@@552)))
)))
(assert (forall (($generated@@553 T@U) ($generated@@554 T@U) ($generated@@555 T@U) ) (!  (=> (and (and (and (= (type $generated@@553) $generated@@172) (= (type $generated@@554) $generated@@67)) (= (type $generated@@555) $generated@@67)) ($generated@@239 $generated@@553 ($generated@@422 $generated@@554 $generated@@555))) (and (= ($generated@@286 ($generated@@386 ($generated@@329 $generated@@172 $generated@@172) $generated@@553)) $generated@@553) ($generated@@139 ($generated@@386 ($generated@@329 $generated@@172 $generated@@172) $generated@@553) ($generated@@422 $generated@@554 $generated@@555))))
 :pattern ( ($generated@@239 $generated@@553 ($generated@@422 $generated@@554 $generated@@555)))
)))
(assert (forall (($generated@@556 T@U) ($generated@@557 T@U) ($generated@@558 T@U) ) (!  (=> (and (and (and (= (type $generated@@556) $generated@@67) (= (type $generated@@557) $generated@@67)) (= (type $generated@@558) $generated@@172)) ($generated@@239 $generated@@558 ($generated@@162 $generated@@556 $generated@@557))) (and (= ($generated@@286 ($generated@@386 $generated@@163 $generated@@558)) $generated@@558) ($generated@@139 ($generated@@386 $generated@@163 $generated@@558) ($generated@@162 $generated@@556 $generated@@557))))
 :pattern ( ($generated@@239 $generated@@558 ($generated@@162 $generated@@556 $generated@@557)))
)))
(assert (forall (($generated@@559 T@U) ) (! (let (($generated@@560 (type $generated@@559)))
 (not ($generated@@0 ($generated@@84 ($generated@@433 $generated@@560) $generated@@559))))
 :pattern ( (let (($generated@@560 (type $generated@@559)))
($generated@@84 ($generated@@433 $generated@@560) $generated@@559)))
)))
(assert (forall (($generated@@561 T@U) ($generated@@562 T@U) ) (!  (=> (and (= (type $generated@@561) $generated@@67) (= (type $generated@@562) $generated@@67)) (and (= ($generated@@75 ($generated@@162 $generated@@561 $generated@@562)) $generated@@64) (= ($generated@@305 ($generated@@162 $generated@@561 $generated@@562)) $generated@@66)))
 :pattern ( ($generated@@162 $generated@@561 $generated@@562))
)))
(assert (forall (($generated@@563 T@U) ) (!  (=> (= (type $generated@@563) $generated@@163) (= ($generated@@544 ($generated@@286 $generated@@563)) ($generated@@545 $generated@@563)))
 :pattern ( ($generated@@544 ($generated@@286 $generated@@563)))
)))
(assert (forall (($generated@@564 T@U) ) (!  (=> (and (= (type $generated@@564) $generated@@172) ($generated@@239 $generated@@564 ($generated@@78 0))) (and (= ($generated@@286 ($generated@@386 $generated@@2 $generated@@564)) $generated@@564) ($generated@@139 ($generated@@386 ($generated@@79 $generated@@172 $generated@@4) $generated@@564) ($generated@@78 0))))
 :pattern ( ($generated@@239 $generated@@564 ($generated@@78 0)))
)))
(assert (forall (($generated@@565 T@U) ($generated@@566 T@U) ) (!  (=> (and (and (= (type $generated@@565) $generated@@172) (= (type $generated@@566) $generated@@67)) ($generated@@239 $generated@@565 ($generated@@248 $generated@@566))) (and (= ($generated@@286 ($generated@@386 ($generated@@79 $generated@@172 $generated@@4) $generated@@565)) $generated@@565) ($generated@@139 ($generated@@386 ($generated@@79 $generated@@172 $generated@@4) $generated@@565) ($generated@@248 $generated@@566))))
 :pattern ( ($generated@@239 $generated@@565 ($generated@@248 $generated@@566)))
)))
(assert (forall (($generated@@567 T@U) ($generated@@568 T@U) ) (!  (=> (and (and (= (type $generated@@567) $generated@@172) (= (type $generated@@568) $generated@@67)) ($generated@@239 $generated@@567 ($generated@@253 $generated@@568))) (and (= ($generated@@286 ($generated@@386 ($generated@@79 $generated@@172 $generated@@4) $generated@@567)) $generated@@567) ($generated@@139 ($generated@@386 ($generated@@79 $generated@@172 $generated@@4) $generated@@567) ($generated@@253 $generated@@568))))
 :pattern ( ($generated@@239 $generated@@567 ($generated@@253 $generated@@568)))
)))
(assert (forall (($generated@@569 T@U) ($generated@@570 T@U) ) (!  (=> (and (and (= (type $generated@@569) $generated@@172) (= (type $generated@@570) $generated@@67)) ($generated@@239 $generated@@569 ($generated@@177 $generated@@570))) (and (= ($generated@@286 ($generated@@386 ($generated@@79 $generated@@172 $generated@@2) $generated@@569)) $generated@@569) ($generated@@139 ($generated@@386 ($generated@@79 $generated@@172 $generated@@2) $generated@@569) ($generated@@177 $generated@@570))))
 :pattern ( ($generated@@239 $generated@@569 ($generated@@177 $generated@@570)))
)))
(assert (forall (($generated@@571 T@U) ($generated@@572 T@U) ) (!  (=> (and (and (= (type $generated@@571) $generated@@172) (= (type $generated@@572) $generated@@67)) ($generated@@239 $generated@@571 ($generated@@500 $generated@@572))) (and (= ($generated@@286 ($generated@@386 ($generated@@278 $generated@@172) $generated@@571)) $generated@@571) ($generated@@139 ($generated@@386 ($generated@@278 $generated@@172) $generated@@571) ($generated@@500 $generated@@572))))
 :pattern ( ($generated@@239 $generated@@571 ($generated@@500 $generated@@572)))
)))
(assert (forall (($generated@@573 T@U) ($generated@@574 T@U) ) (!  (=> (and (and (= (type $generated@@573) $generated@@67) (= (type $generated@@574) $generated@@172)) ($generated@@239 $generated@@574 ($generated@@136 $generated@@573))) (and (= ($generated@@286 ($generated@@386 $generated@@80 $generated@@574)) $generated@@574) ($generated@@139 ($generated@@386 $generated@@80 $generated@@574) ($generated@@136 $generated@@573))))
 :pattern ( ($generated@@239 $generated@@574 ($generated@@136 $generated@@573)))
)))
(assert (forall (($generated@@575 T@U) ($generated@@576 T@U) ) (!  (=> (and (and (= (type $generated@@575) $generated@@67) (= (type $generated@@576) $generated@@172)) ($generated@@239 $generated@@576 ($generated@@156 $generated@@575))) (and (= ($generated@@286 ($generated@@386 $generated@@80 $generated@@576)) $generated@@576) ($generated@@139 ($generated@@386 $generated@@80 $generated@@576) ($generated@@156 $generated@@575))))
 :pattern ( ($generated@@239 $generated@@576 ($generated@@156 $generated@@575)))
)))
(assert (forall (($generated@@577 T@U) ($generated@@578 T@U) ($generated@@579 T@U) ($generated@@580 T@U) ) (! (let (($generated@@581 (type $generated@@580)))
 (=> (and (and (and (= (type $generated@@577) ($generated@@79 $generated@@80 $generated@@81)) (= (type $generated@@578) $generated@@80)) (= (type $generated@@579) ($generated@@69 $generated@@581))) ($generated@@151 ($generated@@85 $generated@@577 $generated@@578 ($generated@@87 ($generated@@84 $generated@@577 $generated@@578) $generated@@579 $generated@@580)))) ($generated@@144 $generated@@577 ($generated@@85 $generated@@577 $generated@@578 ($generated@@87 ($generated@@84 $generated@@577 $generated@@578) $generated@@579 $generated@@580)))))
 :pattern ( ($generated@@85 $generated@@577 $generated@@578 ($generated@@87 ($generated@@84 $generated@@577 $generated@@578) $generated@@579 $generated@@580)))
)))
(assert (forall (($generated@@582 T@U) ($generated@@583 T@U) ($generated@@584 T@U) ) (!  (=> (and (and (= (type $generated@@582) ($generated@@79 $generated@@172 $generated@@2)) (= (type $generated@@583) $generated@@67)) (= (type $generated@@584) ($generated@@79 $generated@@80 $generated@@81))) (= ($generated@@77 $generated@@582 ($generated@@177 $generated@@583) $generated@@584) (forall (($generated@@585 T@U) ) (!  (=> (and (= (type $generated@@585) $generated@@172) (< 0 ($generated ($generated@@84 $generated@@582 $generated@@585)))) ($generated@@264 $generated@@585 $generated@@583 $generated@@584))
 :pattern ( ($generated@@84 $generated@@582 $generated@@585))
))))
 :pattern ( ($generated@@77 $generated@@582 ($generated@@177 $generated@@583) $generated@@584))
)))
(assert (forall (($generated@@586 T@U) ($generated@@587 T@U) ($generated@@588 T@U) ) (!  (=> (and (and (and (= (type $generated@@586) $generated@@163) (= (type $generated@@587) $generated@@67)) (= (type $generated@@588) ($generated@@79 $generated@@80 $generated@@81))) (and ($generated@@151 $generated@@588) (and ($generated@@161 $generated@@586) (exists (($generated@@589 T@U) ) (!  (and (= (type $generated@@589) $generated@@67) ($generated@@77 $generated@@586 ($generated@@162 $generated@@587 $generated@@589) $generated@@588))
 :pattern ( ($generated@@77 $generated@@586 ($generated@@162 $generated@@587 $generated@@589) $generated@@588))
))))) ($generated@@264 ($generated@@170 $generated@@586) $generated@@587 $generated@@588))
 :pattern ( ($generated@@264 ($generated@@170 $generated@@586) $generated@@587 $generated@@588))
)))
(assert (forall (($generated@@590 T@U) ($generated@@591 T@U) ($generated@@592 T@U) ) (!  (=> (and (and (and (= (type $generated@@590) $generated@@163) (= (type $generated@@591) $generated@@67)) (= (type $generated@@592) ($generated@@79 $generated@@80 $generated@@81))) (and ($generated@@151 $generated@@592) (and ($generated@@161 $generated@@590) (exists (($generated@@593 T@U) ) (!  (and (= (type $generated@@593) $generated@@67) ($generated@@77 $generated@@590 ($generated@@162 $generated@@593 $generated@@591) $generated@@592))
 :pattern ( ($generated@@77 $generated@@590 ($generated@@162 $generated@@593 $generated@@591) $generated@@592))
))))) ($generated@@264 ($generated@@171 $generated@@590) $generated@@591 $generated@@592))
 :pattern ( ($generated@@264 ($generated@@171 $generated@@590) $generated@@591 $generated@@592))
)))
(assert (forall (($generated@@594 T@U) ($generated@@595 T@U) ) (!  (=> (and (= (type $generated@@594) $generated@@172) (= (type $generated@@595) $generated@@172)) (= ($generated@@238 ($generated@@260 $generated@@594) ($generated@@260 $generated@@595)) ($generated@@260 ($generated@@238 $generated@@594 $generated@@595))))
 :pattern ( ($generated@@238 ($generated@@260 $generated@@594) ($generated@@260 $generated@@595)))
)))
(assert (forall (($generated@@596 Int) ) (! (= ($generated@@286 ($generated@@8 ($generated@@258 $generated@@596))) ($generated@@260 ($generated@@286 ($generated@@8 $generated@@596))))
 :pattern ( ($generated@@286 ($generated@@8 ($generated@@258 $generated@@596))))
)))
(assert (forall (($generated@@597 T@U) ) (! (= ($generated@@286 ($generated@@260 $generated@@597)) ($generated@@260 ($generated@@286 $generated@@597)))
 :pattern ( ($generated@@286 ($generated@@260 $generated@@597)))
)))
(assert (forall (($generated@@598 T@U) ) (! (let (($generated@@599 ($generated@@279 (type $generated@@598))))
 (=> (and (= (type $generated@@598) ($generated@@278 $generated@@599)) (= ($generated@@277 $generated@@598) 0)) (= $generated@@598 ($generated@@276 $generated@@599))))
 :pattern ( ($generated@@277 $generated@@598))
)))
(assert (forall (($generated@@600 T@U) ($generated@@601 T@U) ($generated@@602 T@U) ) (! (let (($generated@@603 (type $generated@@601)))
 (=> (and (and (= (type $generated@@600) ($generated@@79 $generated@@603 $generated@@2)) (= (type $generated@@602) $generated@@2)) (<= 0 ($generated $generated@@602))) (= ($generated@@299 ($generated@@85 $generated@@600 $generated@@601 $generated@@602)) (+ (- ($generated@@299 $generated@@600) ($generated ($generated@@84 $generated@@600 $generated@@601))) ($generated $generated@@602)))))
 :pattern ( ($generated@@299 ($generated@@85 $generated@@600 $generated@@601 $generated@@602)))
)))
(assert (forall (($generated@@604 T@U) ($generated@@605 T@U) ) (!  (=> (and (= (type $generated@@604) ($generated@@79 $generated@@80 $generated@@81)) (= (type $generated@@605) $generated@@2)) ($generated@@77 $generated@@605 $generated@@46 $generated@@604))
 :pattern ( ($generated@@77 $generated@@605 $generated@@46 $generated@@604))
)))
(assert (forall (($generated@@606 T@U) ($generated@@607 T@U) ) (!  (=> (and (= (type $generated@@606) ($generated@@79 $generated@@80 $generated@@81)) (= (type $generated@@607) $generated@@3)) ($generated@@77 $generated@@607 $generated@@47 $generated@@606))
 :pattern ( ($generated@@77 $generated@@607 $generated@@47 $generated@@606))
)))
(assert (forall (($generated@@608 T@U) ($generated@@609 T@U) ) (!  (=> (and (= (type $generated@@608) ($generated@@79 $generated@@80 $generated@@81)) (= (type $generated@@609) $generated@@4)) ($generated@@77 $generated@@609 $generated@@44 $generated@@608))
 :pattern ( ($generated@@77 $generated@@609 $generated@@44 $generated@@608))
)))
(assert (forall (($generated@@610 T@U) ($generated@@611 T@U) ) (!  (=> (and (= (type $generated@@610) ($generated@@79 $generated@@80 $generated@@81)) (= (type $generated@@611) $generated@@457)) ($generated@@77 $generated@@611 $generated@@45 $generated@@610))
 :pattern ( ($generated@@77 $generated@@611 $generated@@45 $generated@@610))
)))
(assert (forall (($generated@@612 T@U) ($generated@@613 T@U) ) (!  (=> (and (= (type $generated@@612) ($generated@@79 $generated@@80 $generated@@81)) (= (type $generated@@613) $generated@@172)) ($generated@@77 $generated@@613 $generated@@48 $generated@@612))
 :pattern ( ($generated@@77 $generated@@613 $generated@@48 $generated@@612))
)))
(assert (forall (($generated@@614 T@U) ($generated@@615 T@U) ) (!  (=> (and (= (type $generated@@614) ($generated@@278 $generated@@172)) (= (type $generated@@615) $generated@@67)) (= ($generated@@139 $generated@@614 ($generated@@500 $generated@@615)) (forall (($generated@@616 Int) ) (!  (=> (and (<= 0 $generated@@616) (< $generated@@616 ($generated@@277 $generated@@614))) ($generated@@239 ($generated@@501 $generated@@614 $generated@@616) $generated@@615))
 :pattern ( ($generated@@501 $generated@@614 $generated@@616))
))))
 :pattern ( ($generated@@139 $generated@@614 ($generated@@500 $generated@@615)))
)))
(assert (forall (($generated@@618 T@U) ($generated@@619 Int) ) (!  (=> (= (type $generated@@618) ($generated@@278 $generated@@172)) (=> (and (<= 0 $generated@@619) (< $generated@@619 ($generated@@277 $generated@@618))) (< ($generated@@545 ($generated@@386 $generated@@163 ($generated@@501 $generated@@618 $generated@@619))) ($generated@@617 $generated@@618))))
 :pattern ( ($generated@@545 ($generated@@386 $generated@@163 ($generated@@501 $generated@@618 $generated@@619))))
)))
(assert (forall (($generated@@620 T@U) ($generated@@621 T@U) ($generated@@622 T@U) ) (!  (=> (and (and (and (= (type $generated@@620) ($generated@@311 $generated@@172 $generated@@172)) (= (type $generated@@621) $generated@@67)) (= (type $generated@@622) $generated@@67)) ($generated@@139 $generated@@620 ($generated@@414 $generated@@621 $generated@@622))) (and (and ($generated@@139 ($generated@@309 $generated@@620) ($generated@@248 $generated@@621)) ($generated@@139 ($generated@@354 $generated@@620) ($generated@@248 $generated@@622))) ($generated@@139 ($generated@@385 $generated@@620) ($generated@@248 ($generated@@162 $generated@@621 $generated@@622)))))
 :pattern ( ($generated@@139 $generated@@620 ($generated@@414 $generated@@621 $generated@@622)))
)))
(assert (forall (($generated@@623 T@U) ($generated@@624 T@U) ($generated@@625 T@U) ) (!  (=> (and (and (and (= (type $generated@@623) ($generated@@329 $generated@@172 $generated@@172)) (= (type $generated@@624) $generated@@67)) (= (type $generated@@625) $generated@@67)) ($generated@@139 $generated@@623 ($generated@@422 $generated@@624 $generated@@625))) (and (and ($generated@@139 ($generated@@327 $generated@@623) ($generated@@253 $generated@@624)) ($generated@@139 ($generated@@365 $generated@@623) ($generated@@253 $generated@@625))) ($generated@@139 ($generated@@396 $generated@@623) ($generated@@253 ($generated@@162 $generated@@624 $generated@@625)))))
 :pattern ( ($generated@@139 $generated@@623 ($generated@@422 $generated@@624 $generated@@625)))
)))
(assert (forall (($generated@@626 T@U) ) (!  (=> (= (type $generated@@626) $generated@@2) ($generated@@139 $generated@@626 $generated@@46))
 :pattern ( ($generated@@139 $generated@@626 $generated@@46))
)))
(assert (forall (($generated@@627 T@U) ) (!  (=> (= (type $generated@@627) $generated@@3) ($generated@@139 $generated@@627 $generated@@47))
 :pattern ( ($generated@@139 $generated@@627 $generated@@47))
)))
(assert (forall (($generated@@628 T@U) ) (!  (=> (= (type $generated@@628) $generated@@4) ($generated@@139 $generated@@628 $generated@@44))
 :pattern ( ($generated@@139 $generated@@628 $generated@@44))
)))
(assert (forall (($generated@@629 T@U) ) (!  (=> (= (type $generated@@629) $generated@@457) ($generated@@139 $generated@@629 $generated@@45))
 :pattern ( ($generated@@139 $generated@@629 $generated@@45))
)))
(assert (forall (($generated@@630 T@U) ) (!  (=> (= (type $generated@@630) $generated@@172) ($generated@@139 $generated@@630 $generated@@48))
 :pattern ( ($generated@@139 $generated@@630 $generated@@48))
)))
(push 1)
(declare-fun ControlFlow (Int Int) Int)
(declare-fun $generated@@631 () T@U)
(declare-fun $generated@@632 () T@U)
(declare-fun $generated@@633 () T@U)
(declare-fun $generated@@634 () T@U)
(declare-fun $generated@@635 () T@U)
(declare-fun $generated@@636 (T@U) Bool)
(declare-fun $generated@@637 () T@U)
(declare-fun $generated@@638 () T@U)
(declare-fun $generated@@639 () Int)
(assert  (and (and (and (and (and (and (= (type $generated@@631) $generated@@80) (= (type $generated@@632) $generated@@80)) (= (type $generated@@633) ($generated@@184 $generated@@80 $generated@@4))) (= (type $generated@@634) ($generated@@79 $generated@@80 $generated@@81))) (= (type $generated@@635) ($generated@@79 $generated@@80 $generated@@81))) (= (type $generated@@637) $generated@@67)) (= (type $generated@@638) $generated@@80)))
(set-option :timeout 0)
(set-option :rlimit 0)
(assert (not
 (=> (= (ControlFlow 0 0) 14) (let (($generated@@640 true))
(let (($generated@@641 true))
(let (($generated@@642  (and (=> (= (ControlFlow 0 3) 1) $generated@@641) (=> (= (ControlFlow 0 3) 2) $generated@@640))))
(let (($generated@@643  (=> (and (not (= $generated@@137 $generated@@631)) (= (ControlFlow 0 5) 3)) $generated@@642)))
(let (($generated@@644  (=> (and (= $generated@@137 $generated@@631) (= (ControlFlow 0 4) 3)) $generated@@642)))
(let (($generated@@645  (and (=> (= (ControlFlow 0 6) 4) $generated@@644) (=> (= (ControlFlow 0 6) 5) $generated@@643))))
(let (($generated@@646  (=> (and (= $generated@@632 $generated@@631) (= (ControlFlow 0 8) 6)) $generated@@645)))
(let (($generated@@647  (=> (and (not (= $generated@@632 $generated@@631)) (= (ControlFlow 0 7) 6)) $generated@@645)))
(let (($generated@@648  (and (=> (= (ControlFlow 0 9) 7) $generated@@647) (=> (= (ControlFlow 0 9) 8) $generated@@646))))
(let (($generated@@649  (=> (and (not (= $generated@@632 $generated@@631)) (= (ControlFlow 0 11) 9)) $generated@@648)))
(let (($generated@@650  (=> (and (= $generated@@632 $generated@@631) (= (ControlFlow 0 10) 9)) $generated@@648)))
(let (($generated@@651  (=> (= $generated@@633 ($generated@@183 $generated@@137 $generated@@634 $generated@@60 false)) (and (=> (= (ControlFlow 0 12) (- 0 13)) (<= 0 ($generated@@258 10))) (=> (<= 0 ($generated@@258 10)) (=> (and (and (and (not (= $generated@@632 $generated@@137)) (= ($generated@@138 $generated@@632) ($generated@@136 $generated@@46))) (not ($generated@@0 ($generated@@86 ($generated@@84 $generated@@634 $generated@@632) $generated@@60)))) (and (and (= ($generated@@135 $generated@@632) ($generated@@258 10)) (= $generated@@635 ($generated@@85 $generated@@634 $generated@@632 ($generated@@87 ($generated@@84 $generated@@634 $generated@@632) $generated@@60 ($generated@@11 true))))) (and ($generated@@151 $generated@@635) ($generated@@636 $generated@@635)))) (and (=> (= (ControlFlow 0 12) 10) $generated@@650) (=> (= (ControlFlow 0 12) 11) $generated@@649))))))))
(let (($generated@@652  (=> (and (and ($generated@@151 $generated@@634) ($generated@@636 $generated@@634)) (and ($generated@@139 $generated@@631 ($generated@@136 $generated@@637)) ($generated@@77 $generated@@631 ($generated@@136 $generated@@637) $generated@@634))) (=> (and (and (and ($generated@@139 $generated@@638 ($generated@@156 $generated@@46)) ($generated@@77 $generated@@638 ($generated@@156 $generated@@46) $generated@@634)) true) (and (= 1 $generated@@639) (= (ControlFlow 0 14) 12))) $generated@@651))))
$generated@@652))))))))))))))
))
(check-sat)
(pop 1)
; Valid
(get-info :rlimit)
(reset)
(set-option :rlimit 0)
; did a full reset
(reset)
(set-option :print-success false)
(set-info :smt-lib-version 2.6)
(set-option :auto_config false)
(set-option :type_check true)
(set-option :smt.case_split 3)
(set-option :smt.qi.eager_threshold 100)
(set-option :smt.delay_units true)
(set-option :smt.arith.solver 2)
(set-option :smt.mbqi false)
(set-option :model.compact false)
(set-option :model.v2 true)
(set-option :pp.bv_literals false)
; done setting options


(set-info :category "industrial")
(declare-sort |T@U| 0)
(declare-sort |T@T| 0)
(declare-fun real_pow (Real Real) Real)
(declare-fun UOrdering2 (|T@U| |T@U|) Bool)
(declare-fun UOrdering3 (|T@T| |T@U| |T@U|) Bool)
(declare-fun tickleBool (Bool) Bool)
(assert (and (tickleBool true) (tickleBool false)))
(declare-fun $generated (T@U) Int)
(declare-fun $generated@@0 (T@U) Bool)
(declare-fun $generated@@1 (T@T) Int)
(declare-fun $generated@@2 () T@T)
(declare-fun $generated@@3 () T@T)
(declare-fun $generated@@4 () T@T)
(declare-fun $generated@@5 () T@T)
(declare-fun $generated@@6 () T@T)
(declare-fun $generated@@7 () T@T)
(declare-fun $generated@@8 (Int) T@U)
(declare-fun type (T@U) T@T)
(declare-fun $generated@@9 (Real) T@U)
(declare-fun $generated@@10 (T@U) Real)
(declare-fun $generated@@11 (Bool) T@U)
(declare-fun $generated@@12 (RoundingMode) T@U)
(declare-fun $generated@@13 (T@U) RoundingMode)
(declare-fun $generated@@14 (String) T@U)
(declare-fun $generated@@15 (T@U) String)
(declare-fun $generated@@16 ((RegEx String)) T@U)
(declare-fun $generated@@17 (T@U) (RegEx String))
(declare-fun $generated@@44 () T@U)
(declare-fun $generated@@45 () T@U)
(declare-fun $generated@@46 () T@U)
(declare-fun $generated@@47 () T@U)
(declare-fun $generated@@48 () T@U)
(declare-fun $generated@@49 () T@U)
(declare-fun $generated@@50 () T@U)
(declare-fun $generated@@51 () T@U)
(declare-fun $generated@@52 () T@U)
(declare-fun $generated@@53 () T@U)
(declare-fun $generated@@54 () T@U)
(declare-fun $generated@@55 () T@U)
(declare-fun $generated@@56 () T@U)
(declare-fun $generated@@57 () T@U)
(declare-fun $generated@@58 () T@U)
(declare-fun $generated@@59 () T@U)
(declare-fun $generated@@60 () T@U)
(declare-fun $generated@@61 () T@U)
(declare-fun $generated@@62 () T@U)
(declare-fun $generated@@63 () T@U)
(declare-fun $generated@@64 () T@U)
(declare-fun $generated@@65 () T@U)
(declare-fun $generated@@66 () T@T)
(declare-fun $generated@@67 () T@T)
(declare-fun $generated@@68 (T@T) T@T)
(declare-fun $generated@@69 (T@T) T@T)
(declare-fun $generated@@70 () T@T)
(declare-fun $generated@@71 () T@T)
(declare-fun $generated@@74 (T@U) T@U)
(declare-fun $generated@@76 (T@U T@U T@U) Bool)
(declare-fun $generated@@77 (Int) T@U)
(declare-fun $generated@@78 (T@T T@T) T@T)
(declare-fun $generated@@79 () T@T)
(declare-fun $generated@@80 () T@T)
(declare-fun $generated@@81 (T@T) T@T)
(declare-fun $generated@@82 (T@T) T@T)
(declare-fun $generated@@83 (T@U T@U) T@U)
(declare-fun $generated@@84 (T@U T@U T@U) T@U)
(declare-fun $generated@@85 (T@U T@U) T@U)
(declare-fun $generated@@86 (T@U T@U T@U) T@U)
(declare-fun $generated@@134 (T@U T@U) Bool)
(declare-fun $generated@@138 () T@U)
(declare-fun $generated@@141 (T@U T@U) Bool)
(declare-fun $generated@@143 (T@U) Bool)
(declare-fun $generated@@144 (T@U T@U) T@U)
(declare-fun $generated@@145 () T@T)
(declare-fun $generated@@151 (T@U T@U) Bool)
(declare-fun $generated@@152 (T@U) T@U)
(declare-fun $generated@@153 (T@U) T@U)
(declare-fun $generated@@154 () T@T)
(declare-fun $generated@@159 (T@U) T@U)
(declare-fun $generated@@160 (T@U) Bool)
(declare-fun $generated@@164 (T@U T@U T@U) T@U)
(declare-fun $generated@@165 (T@U T@U T@U Bool) T@U)
(declare-fun $generated@@166 (T@T T@T) T@T)
(declare-fun $generated@@167 (T@T) T@T)
(declare-fun $generated@@168 (T@T) T@T)
(declare-fun $generated@@169 (T@U T@U T@U T@U) T@U)
(declare-fun $generated@@220 (T@U T@U) T@U)
(declare-fun $generated@@221 (T@U T@U) Bool)
(declare-fun $generated@@230 (T@U) T@U)
(declare-fun $generated@@235 (T@U) T@U)
(declare-fun $generated@@240 (Int) Int)
(declare-fun $generated@@242 (T@U) T@U)
(declare-fun $generated@@246 (T@U) Bool)
(declare-fun $generated@@247 (T@U T@U T@U) Bool)
(declare-fun $generated@@253 (T@U) T@U)
(declare-fun $generated@@259 (T@T) T@U)
(declare-fun $generated@@260 (T@U) Int)
(declare-fun $generated@@261 (T@T) T@T)
(declare-fun $generated@@262 (T@T) T@T)
(declare-fun $generated@@268 (T@U) T@U)
(declare-fun $generated@@281 (T@U) Int)
(declare-fun $generated@@282 (T@T) T@U)
(declare-fun $generated@@287 (T@U) T@U)
(declare-fun $generated@@288 (T@T T@T) T@U)
(declare-fun $generated@@289 (T@T T@T) T@T)
(declare-fun $generated@@290 (T@T) T@T)
(declare-fun $generated@@291 (T@T) T@T)
(declare-fun $generated@@305 (T@U) T@U)
(declare-fun $generated@@306 (T@T T@T) T@U)
(declare-fun $generated@@307 (T@T T@T) T@T)
(declare-fun $generated@@308 (T@T) T@T)
(declare-fun $generated@@309 (T@T) T@T)
(declare-fun $generated@@326 (T@T T@U) T@U)
(declare-fun $generated@@334 (T@U) T@U)
(declare-fun $generated@@345 (T@U) T@U)
(declare-fun $generated@@365 (T@U) T@U)
(declare-fun $generated@@366 (T@U) T@U)
(declare-fun $generated@@373 (T@U) T@U)
(declare-fun $generated@@374 (T@U) T@U)
(declare-fun $generated@@391 (T@U T@U) T@U)
(declare-fun $generated@@399 (T@U T@U) T@U)
(declare-fun $generated@@410 (T@T) T@U)
(declare-fun $generated@@434 () T@T)
(declare-fun $generated@@442 (T@U) T@U)
(declare-fun $generated@@446 (T@U) T@U)
(declare-fun $generated@@452 (T@U) T@U)
(declare-fun $generated@@456 (T@U) T@U)
(declare-fun $generated@@464 (T@U) T@U)
(declare-fun $generated@@468 (T@U) T@U)
(declare-fun $generated@@476 (T@U) T@U)
(declare-fun $generated@@477 (T@U Int) T@U)
(declare-fun $generated@@486 (T@U) Int)
(declare-fun $generated@@488 (T@U) T@U)
(declare-fun $generated@@492 (T@U) T@U)
(declare-fun $generated@@496 (T@U) T@U)
(declare-fun $generated@@500 (T@U) T@U)
(declare-fun $generated@@514 (T@U) Int)
(declare-fun $generated@@515 (T@U) Int)
(declare-fun $generated@@531 (T@U) T@U)
(declare-fun $generated@@580 (T@U) Int)
(assert  (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (= ($generated@@1 $generated@@2) 0) (= ($generated@@1 $generated@@3) 1)) (= ($generated@@1 $generated@@4) 2)) (= ($generated@@1 $generated@@5) 3)) (= ($generated@@1 $generated@@6) 4)) (= ($generated@@1 $generated@@7) 5)) (forall (($generated@@18 Int) ) (! (= ($generated ($generated@@8 $generated@@18)) $generated@@18)
 :pattern ( ($generated@@8 $generated@@18))
))) (forall (($generated@@19 T@U) ) (!  (=> (= (type $generated@@19) $generated@@2) (= ($generated@@8 ($generated $generated@@19)) $generated@@19))
 :pattern ( ($generated $generated@@19))
))) (forall (($generated@@20 Int) ) (! (= (type ($generated@@8 $generated@@20)) $generated@@2)
 :pattern ( ($generated@@8 $generated@@20))
))) (forall (($generated@@21 Real) ) (! (= ($generated@@10 ($generated@@9 $generated@@21)) $generated@@21)
 :pattern ( ($generated@@9 $generated@@21))
))) (forall (($generated@@22 T@U) ) (!  (=> (= (type $generated@@22) $generated@@3) (= ($generated@@9 ($generated@@10 $generated@@22)) $generated@@22))
 :pattern ( ($generated@@10 $generated@@22))
))) (forall (($generated@@23 Real) ) (! (= (type ($generated@@9 $generated@@23)) $generated@@3)
 :pattern ( ($generated@@9 $generated@@23))
))) (forall (($generated@@24 Bool) ) (! (= ($generated@@0 ($generated@@11 $generated@@24)) $generated@@24)
 :pattern ( ($generated@@11 $generated@@24))
))) (forall (($generated@@25 T@U) ) (!  (=> (= (type $generated@@25) $generated@@4) (= ($generated@@11 ($generated@@0 $generated@@25)) $generated@@25))
 :pattern ( ($generated@@0 $generated@@25))
))) (forall (($generated@@26 Bool) ) (! (= (type ($generated@@11 $generated@@26)) $generated@@4)
 :pattern ( ($generated@@11 $generated@@26))
))) (forall (($generated@@27 RoundingMode) ) (! (= ($generated@@13 ($generated@@12 $generated@@27)) $generated@@27)
 :pattern ( ($generated@@12 $generated@@27))
))) (forall (($generated@@28 T@U) ) (!  (=> (= (type $generated@@28) $generated@@5) (= ($generated@@12 ($generated@@13 $generated@@28)) $generated@@28))
 :pattern ( ($generated@@13 $generated@@28))
))) (forall (($generated@@29 RoundingMode) ) (! (= (type ($generated@@12 $generated@@29)) $generated@@5)
 :pattern ( ($generated@@12 $generated@@29))
))) (forall (($generated@@30 String) ) (! (= ($generated@@15 ($generated@@14 $generated@@30)) $generated@@30)
 :pattern ( ($generated@@14 $generated@@30))
))) (forall (($generated@@31 T@U) ) (!  (=> (= (type $generated@@31) $generated@@6) (= ($generated@@14 ($generated@@15 $generated@@31)) $generated@@31))
 :pattern ( ($generated@@15 $generated@@31))
))) (forall (($generated@@32 String) ) (! (= (type ($generated@@14 $generated@@32)) $generated@@6)
 :pattern ( ($generated@@14 $generated@@32))
))) (forall (($generated@@33 (RegEx String)) ) (! (= ($generated@@17 ($generated@@16 $generated@@33)) $generated@@33)
 :pattern ( ($generated@@16 $generated@@33))
))) (forall (($generated@@34 T@U) ) (!  (=> (= (type $generated@@34) $generated@@7) (= ($generated@@16 ($generated@@17 $generated@@34)) $generated@@34))
 :pattern ( ($generated@@17 $generated@@34))
))) (forall (($generated@@35 (RegEx String)) ) (! (= (type ($generated@@16 $generated@@35)) $generated@@7)
 :pattern ( ($generated@@16 $generated@@35))
))))
(assert (forall (($generated@@36 T@U) ) (! (UOrdering2 $generated@@36 $generated@@36)
 :no-pattern ($generated $generated@@36)
 :no-pattern ($generated@@0 $generated@@36)
)))
(assert (forall (($generated@@37 T@U) ($generated@@38 T@U) ($generated@@39 T@U) ) (! (let (($generated@@40 (type $generated@@37)))
 (=> (and (and (= (type $generated@@38) $generated@@40) (= (type $generated@@39) $generated@@40)) (and (UOrdering2 $generated@@37 $generated@@38) (UOrdering2 $generated@@38 $generated@@39))) (UOrdering2 $generated@@37 $generated@@39)))
 :pattern ( (UOrdering2 $generated@@37 $generated@@38) (UOrdering2 $generated@@38 $generated@@39))
)))
(assert (forall (($generated@@41 T@U) ($generated@@42 T@U) ) (! (let (($generated@@43 (type $generated@@41)))
 (=> (= (type $generated@@42) $generated@@43) (=> (and (UOrdering2 $generated@@41 $generated@@42) (UOrdering2 $generated@@42 $generated@@41)) (= $generated@@41 $generated@@42))))
 :pattern ( (UOrdering2 $generated@@41 $generated@@42) (UOrdering2 $generated@@42 $generated@@41))
)))
(assert  (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (= ($generated@@1 $generated@@66) 6) (= (type $generated@@44) $generated@@66)) (= (type $generated@@45) $generated@@66)) (= (type $generated@@46) $generated@@66)) (= (type $generated@@47) $generated@@66)) (= (type $generated@@48) $generated@@66)) (= ($generated@@1 $generated@@67) 7)) (= (type $generated@@49) $generated@@67)) (= (type $generated@@50) $generated@@67)) (= (type $generated@@51) $generated@@67)) (= (type $generated@@52) $generated@@67)) (= (type $generated@@53) $generated@@67)) (= (type $generated@@54) $generated@@67)) (= (type $generated@@55) $generated@@67)) (= (type $generated@@56) $generated@@67)) (= (type $generated@@57) $generated@@67)) (= (type $generated@@58) $generated@@67)) (= (type $generated@@59) $generated@@67)) (forall (($generated@@72 T@T) ) (= ($generated@@1 ($generated@@68 $generated@@72)) 8))) (forall (($generated@@73 T@T) ) (! (= ($generated@@69 ($generated@@68 $generated@@73)) $generated@@73)
 :pattern ( ($generated@@68 $generated@@73))
))) (= (type $generated@@60) ($generated@@68 $generated@@4))) (= (type $generated@@61) $generated@@67)) (= ($generated@@1 $generated@@70) 9)) (= (type $generated@@62) $generated@@70)) (= (type $generated@@63) $generated@@67)) (= ($generated@@1 $generated@@71) 10)) (= (type $generated@@64) $generated@@71)) (= (type $generated@@65) $generated@@71)))
(assert (distinct $generated@@44 $generated@@45 $generated@@46 $generated@@47 $generated@@48 $generated@@49 $generated@@50 $generated@@51 $generated@@52 $generated@@53 $generated@@54 $generated@@55 $generated@@56 $generated@@57 $generated@@58 $generated@@59 $generated@@60 $generated@@61 $generated@@62 $generated@@63 $generated@@64 $generated@@65)
)
(assert (forall (($generated@@75 T@U) ) (! (= (type ($generated@@74 $generated@@75)) $generated@@67)
 :pattern ( ($generated@@74 $generated@@75))
)))
(assert (= ($generated@@74 $generated@@44) $generated@@49))
(assert (= ($generated@@74 $generated@@45) $generated@@50))
(assert (= ($generated@@74 $generated@@46) $generated@@51))
(assert (= ($generated@@74 $generated@@47) $generated@@52))
(assert (= ($generated@@74 $generated@@48) $generated@@53))
(assert  (and (and (and (and (and (and (and (and (and (and (and (and (and (forall (($generated@@87 T@T) ($generated@@88 T@T) ) (= ($generated@@1 ($generated@@78 $generated@@87 $generated@@88)) 11)) (forall (($generated@@89 T@T) ($generated@@90 T@T) ) (! (= ($generated@@81 ($generated@@78 $generated@@89 $generated@@90)) $generated@@89)
 :pattern ( ($generated@@78 $generated@@89 $generated@@90))
))) (forall (($generated@@91 T@T) ($generated@@92 T@T) ) (! (= ($generated@@82 ($generated@@78 $generated@@91 $generated@@92)) $generated@@92)
 :pattern ( ($generated@@78 $generated@@91 $generated@@92))
))) (forall (($generated@@93 T@U) ($generated@@94 T@U) ) (! (let (($generated@@95 ($generated@@82 (type $generated@@93))))
(= (type ($generated@@83 $generated@@93 $generated@@94)) $generated@@95))
 :pattern ( ($generated@@83 $generated@@93 $generated@@94))
))) (forall (($generated@@96 T@U) ($generated@@97 T@U) ($generated@@98 T@U) ) (! (let (($generated@@99 (type $generated@@98)))
(let (($generated@@100 (type $generated@@97)))
(= (type ($generated@@84 $generated@@96 $generated@@97 $generated@@98)) ($generated@@78 $generated@@100 $generated@@99))))
 :pattern ( ($generated@@84 $generated@@96 $generated@@97 $generated@@98))
))) (forall (($generated@@101 T@U) ($generated@@102 T@U) ($generated@@103 T@U) ) (! (let (($generated@@104 ($generated@@82 (type $generated@@101))))
 (=> (= (type $generated@@103) $generated@@104) (= ($generated@@83 ($generated@@84 $generated@@101 $generated@@102 $generated@@103) $generated@@102) $generated@@103)))
 :weight 0
))) (and (forall (($generated@@105 T@U) ($generated@@106 T@U) ($generated@@107 T@U) ($generated@@108 T@U) ) (!  (or (= $generated@@107 $generated@@108) (= ($generated@@83 ($generated@@84 $generated@@106 $generated@@107 $generated@@105) $generated@@108) ($generated@@83 $generated@@106 $generated@@108)))
 :weight 0
)) (forall (($generated@@109 T@U) ($generated@@110 T@U) ($generated@@111 T@U) ($generated@@112 T@U) ) (!  (or true (= ($generated@@83 ($generated@@84 $generated@@110 $generated@@111 $generated@@109) $generated@@112) ($generated@@83 $generated@@110 $generated@@112)))
 :weight 0
)))) (= ($generated@@1 $generated@@79) 12)) (forall (($generated@@113 T@U) ($generated@@114 T@U) ) (! (let (($generated@@115 ($generated@@69 (type $generated@@114))))
(= (type ($generated@@85 $generated@@113 $generated@@114)) $generated@@115))
 :pattern ( ($generated@@85 $generated@@113 $generated@@114))
))) (= ($generated@@1 $generated@@80) 13)) (forall (($generated@@116 T@U) ($generated@@117 T@U) ($generated@@118 T@U) ) (! (= (type ($generated@@86 $generated@@116 $generated@@117 $generated@@118)) $generated@@80)
 :pattern ( ($generated@@86 $generated@@116 $generated@@117 $generated@@118))
))) (forall (($generated@@119 T@U) ($generated@@120 T@U) ($generated@@121 T@U) ) (! (let (($generated@@122 ($generated@@69 (type $generated@@120))))
 (=> (= (type $generated@@121) $generated@@122) (= ($generated@@85 ($generated@@86 $generated@@119 $generated@@120 $generated@@121) $generated@@120) $generated@@121)))
 :weight 0
))) (and (forall (($generated@@123 T@U) ($generated@@124 T@U) ($generated@@125 T@U) ($generated@@126 T@U) ) (!  (or (= $generated@@125 $generated@@126) (= ($generated@@85 ($generated@@86 $generated@@124 $generated@@125 $generated@@123) $generated@@126) ($generated@@85 $generated@@124 $generated@@126)))
 :weight 0
)) (forall (($generated@@127 T@U) ($generated@@128 T@U) ($generated@@129 T@U) ($generated@@130 T@U) ) (!  (or true (= ($generated@@85 ($generated@@86 $generated@@128 $generated@@129 $generated@@127) $generated@@130) ($generated@@85 $generated@@128 $generated@@130)))
 :weight 0
)))) (forall (($generated@@131 Int) ) (! (= (type ($generated@@77 $generated@@131)) $generated@@66)
 :pattern ( ($generated@@77 $generated@@131))
))))
(assert (forall (($generated@@132 T@U) ($generated@@133 T@U) ) (!  (=> (and (= (type $generated@@132) $generated@@2) (= (type $generated@@133) ($generated@@78 $generated@@79 $generated@@80))) ($generated@@76 $generated@@132 ($generated@@77 0) $generated@@133))
 :pattern ( ($generated@@76 $generated@@132 ($generated@@77 0) $generated@@133))
)))
(assert (forall (($generated@@135 T@U) ($generated@@136 T@U) ) (!  (=> (and (and (= (type $generated@@135) ($generated@@78 $generated@@79 $generated@@80)) (= (type $generated@@136) ($generated@@78 $generated@@79 $generated@@80))) ($generated@@134 $generated@@135 $generated@@136)) (forall (($generated@@137 T@U) ) (!  (=> (and (= (type $generated@@137) $generated@@79) ($generated@@0 ($generated@@85 ($generated@@83 $generated@@135 $generated@@137) $generated@@60))) ($generated@@0 ($generated@@85 ($generated@@83 $generated@@136 $generated@@137) $generated@@60)))
 :pattern ( ($generated@@85 ($generated@@83 $generated@@136 $generated@@137) $generated@@60))
)))
 :pattern ( ($generated@@134 $generated@@135 $generated@@136))
)))
(assert (= (type $generated@@138) $generated@@66))
(assert (forall (($generated@@139 T@U) ($generated@@140 T@U) ) (!  (=> (and (= (type $generated@@139) $generated@@2) (= (type $generated@@140) ($generated@@78 $generated@@79 $generated@@80))) ($generated@@76 $generated@@139 $generated@@138 $generated@@140))
 :pattern ( ($generated@@76 $generated@@139 $generated@@138 $generated@@140))
)))
(assert (forall (($generated@@142 T@U) ) (!  (=> (= (type $generated@@142) $generated@@2) ($generated@@141 $generated@@142 ($generated@@77 0)))
 :pattern ( ($generated@@141 $generated@@142 ($generated@@77 0)))
)))
(assert  (and (= ($generated@@1 $generated@@145) 14) (forall (($generated@@146 T@U) ($generated@@147 T@U) ) (! (= (type ($generated@@144 $generated@@146 $generated@@147)) $generated@@66)
 :pattern ( ($generated@@144 $generated@@146 $generated@@147))
))))
(assert (forall (($generated@@148 T@U) ($generated@@149 T@U) ($generated@@150 T@U) ) (!  (=> (and (and (and (= (type $generated@@148) $generated@@66) (= (type $generated@@149) $generated@@66)) (= (type $generated@@150) $generated@@145)) ($generated@@141 $generated@@150 ($generated@@144 $generated@@148 $generated@@149))) ($generated@@143 $generated@@150))
 :pattern ( ($generated@@143 $generated@@150) ($generated@@141 $generated@@150 ($generated@@144 $generated@@148 $generated@@149)))
)))
(assert  (and (and (= ($generated@@1 $generated@@154) 15) (forall (($generated@@155 T@U) ) (! (= (type ($generated@@152 $generated@@155)) $generated@@154)
 :pattern ( ($generated@@152 $generated@@155))
))) (forall (($generated@@156 T@U) ) (! (= (type ($generated@@153 $generated@@156)) $generated@@154)
 :pattern ( ($generated@@153 $generated@@156))
))))
(assert (forall (($generated@@157 T@U) ($generated@@158 T@U) ) (!  (=> (and (and (= (type $generated@@157) $generated@@145) (= (type $generated@@158) $generated@@145)) true) (= ($generated@@151 $generated@@157 $generated@@158)  (and (= ($generated@@152 $generated@@157) ($generated@@152 $generated@@158)) (= ($generated@@153 $generated@@157) ($generated@@153 $generated@@158)))))
 :pattern ( ($generated@@151 $generated@@157 $generated@@158))
)))
(assert (forall (($generated@@161 T@U) ) (! (= (type ($generated@@159 $generated@@161)) $generated@@66)
 :pattern ( ($generated@@159 $generated@@161))
)))
(assert (forall (($generated@@162 T@U) ($generated@@163 T@U) ) (!  (=> (and (and (= (type $generated@@162) ($generated@@78 $generated@@154 $generated@@2)) (= (type $generated@@163) $generated@@66)) ($generated@@141 $generated@@162 ($generated@@159 $generated@@163))) ($generated@@160 $generated@@162))
 :pattern ( ($generated@@141 $generated@@162 ($generated@@159 $generated@@163)))
)))
(assert  (and (and (and (and (and (and (and (forall (($generated@@170 T@T) ($generated@@171 T@T) ) (= ($generated@@1 ($generated@@166 $generated@@170 $generated@@171)) 16)) (forall (($generated@@172 T@T) ($generated@@173 T@T) ) (! (= ($generated@@167 ($generated@@166 $generated@@172 $generated@@173)) $generated@@172)
 :pattern ( ($generated@@166 $generated@@172 $generated@@173))
))) (forall (($generated@@174 T@T) ($generated@@175 T@T) ) (! (= ($generated@@168 ($generated@@166 $generated@@174 $generated@@175)) $generated@@175)
 :pattern ( ($generated@@166 $generated@@174 $generated@@175))
))) (forall (($generated@@176 T@U) ($generated@@177 T@U) ($generated@@178 T@U) ) (! (let (($generated@@179 ($generated@@168 (type $generated@@176))))
(= (type ($generated@@164 $generated@@176 $generated@@177 $generated@@178)) $generated@@179))
 :pattern ( ($generated@@164 $generated@@176 $generated@@177 $generated@@178))
))) (forall (($generated@@180 T@U) ($generated@@181 T@U) ($generated@@182 T@U) ($generated@@183 T@U) ) (! (let (($generated@@184 (type $generated@@183)))
(let (($generated@@185 (type $generated@@181)))
(= (type ($generated@@169 $generated@@180 $generated@@181 $generated@@182 $generated@@183)) ($generated@@166 $generated@@185 $generated@@184))))
 :pattern ( ($generated@@169 $generated@@180 $generated@@181 $generated@@182 $generated@@183))
))) (forall (($generated@@186 T@U) ($generated@@187 T@U) ($generated@@188 T@U) ($generated@@189 T@U) ) (! (let (($generated@@190 ($generated@@168 (type $generated@@186))))
 (=> (= (type $generated@@189) $generated@@190) (= ($generated@@164 ($generated@@169 $generated@@186 $generated@@187 $generated@@188 $generated@@189) $generated@@187 $generated@@188) $generated@@189)))
 :weight 0
))) (and (and (forall (($generated@@191 T@U) ($generated@@192 T@U) ($generated@@193 T@U) ($generated@@194 T@U) ($generated@@195 T@U) ($generated@@196 T@U) ) (!  (or (= $generated@@193 $generated@@195) (= ($generated@@164 ($generated@@169 $generated@@192 $generated@@193 $generated@@194 $generated@@191) $generated@@195 $generated@@196) ($generated@@164 $generated@@192 $generated@@195 $generated@@196)))
 :weight 0
)) (forall (($generated@@197 T@U) ($generated@@198 T@U) ($generated@@199 T@U) ($generated@@200 T@U) ($generated@@201 T@U) ($generated@@202 T@U) ) (!  (or (= $generated@@200 $generated@@202) (= ($generated@@164 ($generated@@169 $generated@@198 $generated@@199 $generated@@200 $generated@@197) $generated@@201 $generated@@202) ($generated@@164 $generated@@198 $generated@@201 $generated@@202)))
 :weight 0
))) (forall (($generated@@203 T@U) ($generated@@204 T@U) ($generated@@205 T@U) ($generated@@206 T@U) ($generated@@207 T@U) ($generated@@208 T@U) ) (!  (or true (= ($generated@@164 ($generated@@169 $generated@@204 $generated@@205 $generated@@206 $generated@@203) $generated@@207 $generated@@208) ($generated@@164 $generated@@204 $generated@@207 $generated@@208)))
 :weight 0
)))) (forall (($generated@@209 T@U) ($generated@@210 T@U) ($generated@@211 T@U) ($generated@@212 Bool) ) (! (= (type ($generated@@165 $generated@@209 $generated@@210 $generated@@211 $generated@@212)) ($generated@@166 $generated@@79 $generated@@4))
 :pattern ( ($generated@@165 $generated@@209 $generated@@210 $generated@@211 $generated@@212))
))))
(assert (forall (($generated@@213 T@U) ($generated@@214 T@U) ($generated@@215 T@U) ($generated@@216 Bool) ($generated@@217 T@U) ($generated@@218 T@U) ) (! (let (($generated@@219 ($generated@@69 (type $generated@@218))))
 (=> (and (and (and (and (= (type $generated@@213) $generated@@79) (= (type $generated@@214) ($generated@@78 $generated@@79 $generated@@80))) (= (type $generated@@215) ($generated@@68 $generated@@4))) (= (type $generated@@217) $generated@@79)) (= (type $generated@@218) ($generated@@68 $generated@@219))) (= ($generated@@0 ($generated@@164 ($generated@@165 $generated@@213 $generated@@214 $generated@@215 $generated@@216) $generated@@217 $generated@@218))  (=> (and (not (= $generated@@217 $generated@@213)) ($generated@@0 ($generated@@85 ($generated@@83 $generated@@214 $generated@@217) $generated@@215))) $generated@@216))))
 :pattern ( ($generated@@164 ($generated@@165 $generated@@213 $generated@@214 $generated@@215 $generated@@216) $generated@@217 $generated@@218))
)))
(assert (forall (($generated@@222 T@U) ($generated@@223 T@U) ) (! (= (type ($generated@@220 $generated@@222 $generated@@223)) $generated@@145)
 :pattern ( ($generated@@220 $generated@@222 $generated@@223))
)))
(assert (forall (($generated@@224 T@U) ($generated@@225 T@U) ($generated@@226 T@U) ($generated@@227 T@U) ) (!  (=> (and (and (and (= (type $generated@@224) $generated@@66) (= (type $generated@@225) $generated@@66)) (= (type $generated@@226) $generated@@154)) (= (type $generated@@227) $generated@@154)) (= ($generated@@141 ($generated@@220 $generated@@226 $generated@@227) ($generated@@144 $generated@@224 $generated@@225))  (and ($generated@@221 $generated@@226 $generated@@224) ($generated@@221 $generated@@227 $generated@@225))))
 :pattern ( ($generated@@141 ($generated@@220 $generated@@226 $generated@@227) ($generated@@144 $generated@@224 $generated@@225)))
)))
(assert (forall (($generated@@228 T@U) ($generated@@229 T@U) ) (!  (=> (and (= (type $generated@@228) $generated@@145) (= (type $generated@@229) $generated@@145)) (= ($generated@@151 $generated@@228 $generated@@229) (= $generated@@228 $generated@@229)))
 :pattern ( ($generated@@151 $generated@@228 $generated@@229))
)))
(assert (forall (($generated@@231 T@U) ) (! (= (type ($generated@@230 $generated@@231)) $generated@@66)
 :pattern ( ($generated@@230 $generated@@231))
)))
(assert (forall (($generated@@232 T@U) ($generated@@233 T@U) ) (!  (=> (and (= (type $generated@@232) ($generated@@78 $generated@@154 $generated@@4)) (= (type $generated@@233) $generated@@66)) (= ($generated@@141 $generated@@232 ($generated@@230 $generated@@233)) (forall (($generated@@234 T@U) ) (!  (=> (and (= (type $generated@@234) $generated@@154) ($generated@@0 ($generated@@83 $generated@@232 $generated@@234))) ($generated@@221 $generated@@234 $generated@@233))
 :pattern ( ($generated@@83 $generated@@232 $generated@@234))
))))
 :pattern ( ($generated@@141 $generated@@232 ($generated@@230 $generated@@233)))
)))
(assert (forall (($generated@@236 T@U) ) (! (= (type ($generated@@235 $generated@@236)) $generated@@66)
 :pattern ( ($generated@@235 $generated@@236))
)))
(assert (forall (($generated@@237 T@U) ($generated@@238 T@U) ) (!  (=> (and (= (type $generated@@237) ($generated@@78 $generated@@154 $generated@@4)) (= (type $generated@@238) $generated@@66)) (= ($generated@@141 $generated@@237 ($generated@@235 $generated@@238)) (forall (($generated@@239 T@U) ) (!  (=> (and (= (type $generated@@239) $generated@@154) ($generated@@0 ($generated@@83 $generated@@237 $generated@@239))) ($generated@@221 $generated@@239 $generated@@238))
 :pattern ( ($generated@@83 $generated@@237 $generated@@239))
))))
 :pattern ( ($generated@@141 $generated@@237 ($generated@@235 $generated@@238)))
)))
(assert (forall (($generated@@241 Int) ) (! (= ($generated@@240 $generated@@241) $generated@@241)
 :pattern ( ($generated@@240 $generated@@241))
)))
(assert (forall (($generated@@243 T@U) ) (! (let (($generated@@244 (type $generated@@243)))
(= (type ($generated@@242 $generated@@243)) $generated@@244))
 :pattern ( ($generated@@242 $generated@@243))
)))
(assert (forall (($generated@@245 T@U) ) (! (= ($generated@@242 $generated@@245) $generated@@245)
 :pattern ( ($generated@@242 $generated@@245))
)))
(assert (forall (($generated@@248 T@U) ($generated@@249 T@U) ($generated@@250 T@U) ($generated@@251 T@U) ($generated@@252 T@U) ) (!  (=> (and (and (and (and (and (= (type $generated@@248) $generated@@66) (= (type $generated@@249) $generated@@66)) (= (type $generated@@250) $generated@@154)) (= (type $generated@@251) $generated@@154)) (= (type $generated@@252) ($generated@@78 $generated@@79 $generated@@80))) ($generated@@246 $generated@@252)) (= ($generated@@76 ($generated@@220 $generated@@250 $generated@@251) ($generated@@144 $generated@@248 $generated@@249) $generated@@252)  (and ($generated@@247 $generated@@250 $generated@@248 $generated@@252) ($generated@@247 $generated@@251 $generated@@249 $generated@@252))))
 :pattern ( ($generated@@76 ($generated@@220 $generated@@250 $generated@@251) ($generated@@144 $generated@@248 $generated@@249) $generated@@252))
)))
(assert (forall (($generated@@254 T@U) ) (! (= (type ($generated@@253 $generated@@254)) $generated@@70)
 :pattern ( ($generated@@253 $generated@@254))
)))
(assert (forall (($generated@@255 T@U) ) (!  (=> (= (type $generated@@255) $generated@@145) (= ($generated@@143 $generated@@255) (= ($generated@@253 $generated@@255) $generated@@62)))
 :pattern ( ($generated@@143 $generated@@255))
)))
(assert (forall (($generated@@256 T@U) ) (!  (=> (and (= (type $generated@@256) $generated@@145) ($generated@@143 $generated@@256)) (exists (($generated@@257 T@U) ($generated@@258 T@U) ) (!  (and (and (= (type $generated@@257) $generated@@154) (= (type $generated@@258) $generated@@154)) (= $generated@@256 ($generated@@220 $generated@@257 $generated@@258)))
 :no-pattern (type $generated@@257)
 :no-pattern (type $generated@@258)
 :no-pattern ($generated $generated@@257)
 :no-pattern ($generated@@0 $generated@@257)
 :no-pattern ($generated $generated@@258)
 :no-pattern ($generated@@0 $generated@@258)
)))
 :pattern ( ($generated@@143 $generated@@256))
)))
(assert  (and (and (forall (($generated@@263 T@T) ) (= ($generated@@1 ($generated@@261 $generated@@263)) 17)) (forall (($generated@@264 T@T) ) (! (= ($generated@@262 ($generated@@261 $generated@@264)) $generated@@264)
 :pattern ( ($generated@@261 $generated@@264))
))) (forall (($generated@@265 T@T) ) (! (= (type ($generated@@259 $generated@@265)) ($generated@@261 $generated@@265))
 :pattern ( ($generated@@259 $generated@@265))
))))
(assert (forall (($generated@@266 T@T) ) (! (= ($generated@@260 ($generated@@259 $generated@@266)) 0)
 :pattern ( ($generated@@259 $generated@@266))
)))
(assert (forall (($generated@@267 T@U) ) (!  (=> (= (type $generated@@267) $generated@@2) (= ($generated@@141 $generated@@267 $generated@@138) (<= ($generated@@240 0) ($generated $generated@@267))))
 :pattern ( ($generated@@141 $generated@@267 $generated@@138))
)))
(assert (forall (($generated@@269 T@U) ) (! (= (type ($generated@@268 $generated@@269)) $generated@@154)
 :pattern ( ($generated@@268 $generated@@269))
)))
(assert (forall (($generated@@270 T@U) ($generated@@271 T@U) ($generated@@272 T@U) ) (!  (=> (and (= (type $generated@@271) $generated@@66) (= (type $generated@@272) ($generated@@78 $generated@@79 $generated@@80))) (= ($generated@@247 ($generated@@268 $generated@@270) $generated@@271 $generated@@272) ($generated@@76 $generated@@270 $generated@@271 $generated@@272)))
 :pattern ( ($generated@@247 ($generated@@268 $generated@@270) $generated@@271 $generated@@272))
)))
(assert (forall (($generated@@273 T@U) ($generated@@274 T@U) ($generated@@275 T@U) ($generated@@276 T@U) ) (!  (=> (and (and (and (and (and (= (type $generated@@273) ($generated@@78 $generated@@79 $generated@@80)) (= (type $generated@@274) ($generated@@78 $generated@@79 $generated@@80))) (= (type $generated@@275) $generated@@154)) (= (type $generated@@276) $generated@@66)) ($generated@@134 $generated@@273 $generated@@274)) ($generated@@247 $generated@@275 $generated@@276 $generated@@273)) ($generated@@247 $generated@@275 $generated@@276 $generated@@274))
 :pattern ( ($generated@@134 $generated@@273 $generated@@274) ($generated@@247 $generated@@275 $generated@@276 $generated@@273))
)))
(assert (forall (($generated@@277 T@U) ($generated@@278 T@U) ($generated@@279 T@U) ($generated@@280 T@U) ) (!  (=> (and (and (and (and (= (type $generated@@277) ($generated@@78 $generated@@79 $generated@@80)) (= (type $generated@@278) ($generated@@78 $generated@@79 $generated@@80))) (= (type $generated@@280) $generated@@66)) ($generated@@134 $generated@@277 $generated@@278)) ($generated@@76 $generated@@279 $generated@@280 $generated@@277)) ($generated@@76 $generated@@279 $generated@@280 $generated@@278))
 :pattern ( ($generated@@134 $generated@@277 $generated@@278) ($generated@@76 $generated@@279 $generated@@280 $generated@@277))
)))
(assert (forall (($generated@@283 T@T) ) (! (= (type ($generated@@282 $generated@@283)) ($generated@@78 $generated@@283 $generated@@2))
 :pattern ( ($generated@@282 $generated@@283))
)))
(assert (forall (($generated@@284 T@U) ) (! (let (($generated@@285 ($generated@@81 (type $generated@@284))))
 (=> (= (type $generated@@284) ($generated@@78 $generated@@285 $generated@@2)) (and (= (= ($generated@@281 $generated@@284) 0) (= $generated@@284 ($generated@@282 $generated@@285))) (=> (not (= ($generated@@281 $generated@@284) 0)) (exists (($generated@@286 T@U) ) (!  (and (= (type $generated@@286) $generated@@285) (< 0 ($generated ($generated@@83 $generated@@284 $generated@@286))))
 :no-pattern (type $generated@@286)
 :no-pattern ($generated $generated@@286)
 :no-pattern ($generated@@0 $generated@@286)
))))))
 :pattern ( ($generated@@281 $generated@@284))
)))
(assert  (and (and (and (and (forall (($generated@@292 T@T) ($generated@@293 T@T) ) (= ($generated@@1 ($generated@@289 $generated@@292 $generated@@293)) 18)) (forall (($generated@@294 T@T) ($generated@@295 T@T) ) (! (= ($generated@@290 ($generated@@289 $generated@@294 $generated@@295)) $generated@@294)
 :pattern ( ($generated@@289 $generated@@294 $generated@@295))
))) (forall (($generated@@296 T@T) ($generated@@297 T@T) ) (! (= ($generated@@291 ($generated@@289 $generated@@296 $generated@@297)) $generated@@297)
 :pattern ( ($generated@@289 $generated@@296 $generated@@297))
))) (forall (($generated@@298 T@U) ) (! (let (($generated@@299 ($generated@@290 (type $generated@@298))))
(= (type ($generated@@287 $generated@@298)) ($generated@@78 $generated@@299 $generated@@4)))
 :pattern ( ($generated@@287 $generated@@298))
))) (forall (($generated@@300 T@T) ($generated@@301 T@T) ) (! (= (type ($generated@@288 $generated@@300 $generated@@301)) ($generated@@289 $generated@@300 $generated@@301))
 :pattern ( ($generated@@288 $generated@@300 $generated@@301))
))))
(assert (forall (($generated@@302 T@U) ($generated@@303 T@T) ) (! (let (($generated@@304 (type $generated@@302)))
 (not ($generated@@0 ($generated@@83 ($generated@@287 ($generated@@288 $generated@@304 $generated@@303)) $generated@@302))))
 :pattern ( (let (($generated@@304 (type $generated@@302)))
($generated@@83 ($generated@@287 ($generated@@288 $generated@@304 $generated@@303)) $generated@@302)))
)))
(assert  (and (and (and (and (forall (($generated@@310 T@T) ($generated@@311 T@T) ) (= ($generated@@1 ($generated@@307 $generated@@310 $generated@@311)) 19)) (forall (($generated@@312 T@T) ($generated@@313 T@T) ) (! (= ($generated@@308 ($generated@@307 $generated@@312 $generated@@313)) $generated@@312)
 :pattern ( ($generated@@307 $generated@@312 $generated@@313))
))) (forall (($generated@@314 T@T) ($generated@@315 T@T) ) (! (= ($generated@@309 ($generated@@307 $generated@@314 $generated@@315)) $generated@@315)
 :pattern ( ($generated@@307 $generated@@314 $generated@@315))
))) (forall (($generated@@316 T@U) ) (! (let (($generated@@317 ($generated@@308 (type $generated@@316))))
(= (type ($generated@@305 $generated@@316)) ($generated@@78 $generated@@317 $generated@@4)))
 :pattern ( ($generated@@305 $generated@@316))
))) (forall (($generated@@318 T@T) ($generated@@319 T@T) ) (! (= (type ($generated@@306 $generated@@318 $generated@@319)) ($generated@@307 $generated@@318 $generated@@319))
 :pattern ( ($generated@@306 $generated@@318 $generated@@319))
))))
(assert (forall (($generated@@320 T@U) ($generated@@321 T@T) ) (! (let (($generated@@322 (type $generated@@320)))
 (not ($generated@@0 ($generated@@83 ($generated@@305 ($generated@@306 $generated@@322 $generated@@321)) $generated@@320))))
 :pattern ( (let (($generated@@322 (type $generated@@320)))
($generated@@83 ($generated@@305 ($generated@@306 $generated@@322 $generated@@321)) $generated@@320)))
)))
(assert (forall (($generated@@323 T@U) ) (! (let (($generated@@324 ($generated@@81 (type $generated@@323))))
 (=> (= (type $generated@@323) ($generated@@78 $generated@@324 $generated@@2)) (= ($generated@@160 $generated@@323) (forall (($generated@@325 T@U) ) (!  (=> (= (type $generated@@325) $generated@@324) (and (<= 0 ($generated ($generated@@83 $generated@@323 $generated@@325))) (<= ($generated ($generated@@83 $generated@@323 $generated@@325)) ($generated@@281 $generated@@323))))
 :pattern ( ($generated@@83 $generated@@323 $generated@@325))
)))))
 :pattern ( ($generated@@160 $generated@@323))
)))
(assert (forall (($generated@@327 T@T) ($generated@@328 T@U) ) (! (= (type ($generated@@326 $generated@@327 $generated@@328)) $generated@@327)
 :pattern ( ($generated@@326 $generated@@327 $generated@@328))
)))
(assert (forall (($generated@@329 T@U) ) (!  (=> (and (= (type $generated@@329) $generated@@154) ($generated@@221 $generated@@329 $generated@@138)) (and (= ($generated@@268 ($generated@@326 $generated@@2 $generated@@329)) $generated@@329) ($generated@@141 ($generated@@326 $generated@@2 $generated@@329) $generated@@138)))
 :pattern ( ($generated@@221 $generated@@329 $generated@@138))
)))
(assert (forall (($generated@@330 T@U) ) (! (let (($generated@@331 ($generated@@291 (type $generated@@330))))
(let (($generated@@332 ($generated@@290 (type $generated@@330))))
 (=> (= (type $generated@@330) ($generated@@289 $generated@@332 $generated@@331)) (or (= $generated@@330 ($generated@@288 $generated@@332 $generated@@331)) (exists (($generated@@333 T@U) ) (!  (and (= (type $generated@@333) $generated@@332) ($generated@@0 ($generated@@83 ($generated@@287 $generated@@330) $generated@@333)))
 :no-pattern (type $generated@@333)
 :no-pattern ($generated $generated@@333)
 :no-pattern ($generated@@0 $generated@@333)
))))))
 :pattern ( ($generated@@287 $generated@@330))
)))
(assert (forall (($generated@@335 T@U) ) (! (let (($generated@@336 ($generated@@291 (type $generated@@335))))
(= (type ($generated@@334 $generated@@335)) ($generated@@78 $generated@@336 $generated@@4)))
 :pattern ( ($generated@@334 $generated@@335))
)))
(assert (forall (($generated@@337 T@U) ) (! (let (($generated@@338 ($generated@@291 (type $generated@@337))))
(let (($generated@@339 ($generated@@290 (type $generated@@337))))
 (=> (= (type $generated@@337) ($generated@@289 $generated@@339 $generated@@338)) (or (= $generated@@337 ($generated@@288 $generated@@339 $generated@@338)) (exists (($generated@@340 T@U) ) (!  (and (= (type $generated@@340) $generated@@338) ($generated@@0 ($generated@@83 ($generated@@334 $generated@@337) $generated@@340)))
 :no-pattern (type $generated@@340)
 :no-pattern ($generated $generated@@340)
 :no-pattern ($generated@@0 $generated@@340)
))))))
 :pattern ( ($generated@@334 $generated@@337))
)))
(assert (forall (($generated@@341 T@U) ) (! (let (($generated@@342 ($generated@@309 (type $generated@@341))))
(let (($generated@@343 ($generated@@308 (type $generated@@341))))
 (=> (= (type $generated@@341) ($generated@@307 $generated@@343 $generated@@342)) (or (= $generated@@341 ($generated@@306 $generated@@343 $generated@@342)) (exists (($generated@@344 T@U) ) (!  (and (= (type $generated@@344) $generated@@343) ($generated@@0 ($generated@@83 ($generated@@305 $generated@@341) $generated@@344)))
 :no-pattern (type $generated@@344)
 :no-pattern ($generated $generated@@344)
 :no-pattern ($generated@@0 $generated@@344)
))))))
 :pattern ( ($generated@@305 $generated@@341))
)))
(assert (forall (($generated@@346 T@U) ) (! (let (($generated@@347 ($generated@@309 (type $generated@@346))))
(= (type ($generated@@345 $generated@@346)) ($generated@@78 $generated@@347 $generated@@4)))
 :pattern ( ($generated@@345 $generated@@346))
)))
(assert (forall (($generated@@348 T@U) ) (! (let (($generated@@349 ($generated@@309 (type $generated@@348))))
(let (($generated@@350 ($generated@@308 (type $generated@@348))))
 (=> (= (type $generated@@348) ($generated@@307 $generated@@350 $generated@@349)) (or (= $generated@@348 ($generated@@306 $generated@@350 $generated@@349)) (exists (($generated@@351 T@U) ) (!  (and (= (type $generated@@351) $generated@@349) ($generated@@0 ($generated@@83 ($generated@@345 $generated@@348) $generated@@351)))
 :no-pattern (type $generated@@351)
 :no-pattern ($generated $generated@@351)
 :no-pattern ($generated@@0 $generated@@351)
))))))
 :pattern ( ($generated@@345 $generated@@348))
)))
(assert (forall (($generated@@352 T@U) ($generated@@353 T@U) ) (!  (=> (and (= (type $generated@@352) ($generated@@78 $generated@@154 $generated@@2)) (= (type $generated@@353) $generated@@66)) (= ($generated@@141 $generated@@352 ($generated@@159 $generated@@353)) (forall (($generated@@354 T@U) ) (!  (=> (and (= (type $generated@@354) $generated@@154) (< 0 ($generated ($generated@@83 $generated@@352 $generated@@354)))) ($generated@@221 $generated@@354 $generated@@353))
 :pattern ( ($generated@@83 $generated@@352 $generated@@354))
))))
 :pattern ( ($generated@@141 $generated@@352 ($generated@@159 $generated@@353)))
)))
(assert (forall (($generated@@355 T@U) ($generated@@356 T@U) ($generated@@357 T@U) ) (!  (=> (and (and (= (type $generated@@355) ($generated@@78 $generated@@154 $generated@@4)) (= (type $generated@@356) $generated@@66)) (= (type $generated@@357) ($generated@@78 $generated@@79 $generated@@80))) (= ($generated@@76 $generated@@355 ($generated@@230 $generated@@356) $generated@@357) (forall (($generated@@358 T@U) ) (!  (=> (and (= (type $generated@@358) $generated@@154) ($generated@@0 ($generated@@83 $generated@@355 $generated@@358))) ($generated@@247 $generated@@358 $generated@@356 $generated@@357))
 :pattern ( ($generated@@83 $generated@@355 $generated@@358))
))))
 :pattern ( ($generated@@76 $generated@@355 ($generated@@230 $generated@@356) $generated@@357))
)))
(assert (forall (($generated@@359 T@U) ($generated@@360 T@U) ($generated@@361 T@U) ) (!  (=> (and (and (= (type $generated@@359) ($generated@@78 $generated@@154 $generated@@4)) (= (type $generated@@360) $generated@@66)) (= (type $generated@@361) ($generated@@78 $generated@@79 $generated@@80))) (= ($generated@@76 $generated@@359 ($generated@@235 $generated@@360) $generated@@361) (forall (($generated@@362 T@U) ) (!  (=> (and (= (type $generated@@362) $generated@@154) ($generated@@0 ($generated@@83 $generated@@359 $generated@@362))) ($generated@@247 $generated@@362 $generated@@360 $generated@@361))
 :pattern ( ($generated@@83 $generated@@359 $generated@@362))
))))
 :pattern ( ($generated@@76 $generated@@359 ($generated@@235 $generated@@360) $generated@@361))
)))
(assert (forall (($generated@@363 T@U) ) (! (let (($generated@@364 (type $generated@@363)))
(= ($generated ($generated@@83 ($generated@@282 $generated@@364) $generated@@363)) 0))
 :pattern ( (let (($generated@@364 (type $generated@@363)))
($generated@@83 ($generated@@282 $generated@@364) $generated@@363)))
)))
(assert  (and (forall (($generated@@367 T@U) ) (! (= (type ($generated@@365 $generated@@367)) ($generated@@78 $generated@@154 $generated@@4))
 :pattern ( ($generated@@365 $generated@@367))
)) (forall (($generated@@368 T@U) ) (! (let (($generated@@369 ($generated@@291 (type $generated@@368))))
(let (($generated@@370 ($generated@@290 (type $generated@@368))))
(= (type ($generated@@366 $generated@@368)) ($generated@@78 $generated@@370 $generated@@369))))
 :pattern ( ($generated@@366 $generated@@368))
))))
(assert (forall (($generated@@371 T@U) ($generated@@372 T@U) ) (!  (=> (and (= (type $generated@@371) ($generated@@289 $generated@@154 $generated@@154)) (= (type $generated@@372) $generated@@154)) (= ($generated@@0 ($generated@@83 ($generated@@365 $generated@@371) $generated@@372))  (and ($generated@@0 ($generated@@83 ($generated@@287 $generated@@371) ($generated@@152 ($generated@@326 $generated@@145 $generated@@372)))) (= ($generated@@83 ($generated@@366 $generated@@371) ($generated@@152 ($generated@@326 $generated@@145 $generated@@372))) ($generated@@153 ($generated@@326 $generated@@145 $generated@@372))))))
 :pattern ( ($generated@@83 ($generated@@365 $generated@@371) $generated@@372))
)))
(assert  (and (forall (($generated@@375 T@U) ) (! (= (type ($generated@@373 $generated@@375)) ($generated@@78 $generated@@154 $generated@@4))
 :pattern ( ($generated@@373 $generated@@375))
)) (forall (($generated@@376 T@U) ) (! (let (($generated@@377 ($generated@@309 (type $generated@@376))))
(let (($generated@@378 ($generated@@308 (type $generated@@376))))
(= (type ($generated@@374 $generated@@376)) ($generated@@78 $generated@@378 $generated@@377))))
 :pattern ( ($generated@@374 $generated@@376))
))))
(assert (forall (($generated@@379 T@U) ($generated@@380 T@U) ) (!  (=> (and (= (type $generated@@379) ($generated@@307 $generated@@154 $generated@@154)) (= (type $generated@@380) $generated@@154)) (= ($generated@@0 ($generated@@83 ($generated@@373 $generated@@379) $generated@@380))  (and ($generated@@0 ($generated@@83 ($generated@@305 $generated@@379) ($generated@@152 ($generated@@326 $generated@@145 $generated@@380)))) (= ($generated@@83 ($generated@@374 $generated@@379) ($generated@@152 ($generated@@326 $generated@@145 $generated@@380))) ($generated@@153 ($generated@@326 $generated@@145 $generated@@380))))))
 :pattern ( ($generated@@83 ($generated@@373 $generated@@379) $generated@@380))
)))
(assert (forall (($generated@@381 T@U) ($generated@@382 T@U) ) (! (let (($generated@@383 (type $generated@@382)))
(let (($generated@@384 ($generated@@290 (type $generated@@381))))
 (=> (= (type $generated@@381) ($generated@@289 $generated@@384 $generated@@383)) (= ($generated@@0 ($generated@@83 ($generated@@334 $generated@@381) $generated@@382)) (exists (($generated@@385 T@U) ) (!  (and (= (type $generated@@385) $generated@@384) (and ($generated@@0 ($generated@@83 ($generated@@287 $generated@@381) $generated@@385)) (= $generated@@382 ($generated@@83 ($generated@@366 $generated@@381) $generated@@385))))
 :pattern ( ($generated@@83 ($generated@@287 $generated@@381) $generated@@385))
 :pattern ( ($generated@@83 ($generated@@366 $generated@@381) $generated@@385))
))))))
 :pattern ( ($generated@@83 ($generated@@334 $generated@@381) $generated@@382))
)))
(assert (forall (($generated@@386 T@U) ($generated@@387 T@U) ) (! (let (($generated@@388 (type $generated@@387)))
(let (($generated@@389 ($generated@@308 (type $generated@@386))))
 (=> (= (type $generated@@386) ($generated@@307 $generated@@389 $generated@@388)) (= ($generated@@0 ($generated@@83 ($generated@@345 $generated@@386) $generated@@387)) (exists (($generated@@390 T@U) ) (!  (and (= (type $generated@@390) $generated@@389) (and ($generated@@0 ($generated@@83 ($generated@@305 $generated@@386) $generated@@390)) (= $generated@@387 ($generated@@83 ($generated@@374 $generated@@386) $generated@@390))))
 :pattern ( ($generated@@83 ($generated@@305 $generated@@386) $generated@@390))
 :pattern ( ($generated@@83 ($generated@@374 $generated@@386) $generated@@390))
))))))
 :pattern ( ($generated@@83 ($generated@@345 $generated@@386) $generated@@387))
)))
(assert (forall (($generated@@392 T@U) ($generated@@393 T@U) ) (! (= (type ($generated@@391 $generated@@392 $generated@@393)) $generated@@66)
 :pattern ( ($generated@@391 $generated@@392 $generated@@393))
)))
(assert (forall (($generated@@394 T@U) ($generated@@395 T@U) ($generated@@396 T@U) ($generated@@397 T@U) ) (!  (=> (and (and (and (= (type $generated@@394) ($generated@@289 $generated@@154 $generated@@154)) (= (type $generated@@395) $generated@@66)) (= (type $generated@@396) $generated@@66)) (= (type $generated@@397) ($generated@@78 $generated@@79 $generated@@80))) (= ($generated@@76 $generated@@394 ($generated@@391 $generated@@395 $generated@@396) $generated@@397) (forall (($generated@@398 T@U) ) (!  (=> (and (= (type $generated@@398) $generated@@154) ($generated@@0 ($generated@@83 ($generated@@287 $generated@@394) $generated@@398))) (and ($generated@@247 ($generated@@83 ($generated@@366 $generated@@394) $generated@@398) $generated@@396 $generated@@397) ($generated@@247 $generated@@398 $generated@@395 $generated@@397)))
 :pattern ( ($generated@@83 ($generated@@366 $generated@@394) $generated@@398))
 :pattern ( ($generated@@83 ($generated@@287 $generated@@394) $generated@@398))
))))
 :pattern ( ($generated@@76 $generated@@394 ($generated@@391 $generated@@395 $generated@@396) $generated@@397))
)))
(assert (forall (($generated@@400 T@U) ($generated@@401 T@U) ) (! (= (type ($generated@@399 $generated@@400 $generated@@401)) $generated@@66)
 :pattern ( ($generated@@399 $generated@@400 $generated@@401))
)))
(assert (forall (($generated@@402 T@U) ($generated@@403 T@U) ($generated@@404 T@U) ($generated@@405 T@U) ) (!  (=> (and (and (and (= (type $generated@@402) ($generated@@307 $generated@@154 $generated@@154)) (= (type $generated@@403) $generated@@66)) (= (type $generated@@404) $generated@@66)) (= (type $generated@@405) ($generated@@78 $generated@@79 $generated@@80))) (= ($generated@@76 $generated@@402 ($generated@@399 $generated@@403 $generated@@404) $generated@@405) (forall (($generated@@406 T@U) ) (!  (=> (and (= (type $generated@@406) $generated@@154) ($generated@@0 ($generated@@83 ($generated@@305 $generated@@402) $generated@@406))) (and ($generated@@247 ($generated@@83 ($generated@@374 $generated@@402) $generated@@406) $generated@@404 $generated@@405) ($generated@@247 $generated@@406 $generated@@403 $generated@@405)))
 :pattern ( ($generated@@83 ($generated@@374 $generated@@402) $generated@@406))
 :pattern ( ($generated@@83 ($generated@@305 $generated@@402) $generated@@406))
))))
 :pattern ( ($generated@@76 $generated@@402 ($generated@@399 $generated@@403 $generated@@404) $generated@@405))
)))
(assert (forall (($generated@@407 T@U) ($generated@@408 T@U) ($generated@@409 T@U) ) (!  (=> (and (and (and (and (= (type $generated@@407) ($generated@@78 $generated@@79 $generated@@80)) (= (type $generated@@408) ($generated@@78 $generated@@79 $generated@@80))) (= (type $generated@@409) ($generated@@78 $generated@@79 $generated@@80))) (not (= $generated@@407 $generated@@409))) (and ($generated@@134 $generated@@407 $generated@@408) ($generated@@134 $generated@@408 $generated@@409))) ($generated@@134 $generated@@407 $generated@@409))
 :pattern ( ($generated@@134 $generated@@407 $generated@@408) ($generated@@134 $generated@@408 $generated@@409))
)))
(assert (forall (($generated@@411 T@T) ) (! (= (type ($generated@@410 $generated@@411)) ($generated@@78 $generated@@411 $generated@@4))
 :pattern ( ($generated@@410 $generated@@411))
)))
(assert (forall (($generated@@412 T@U) ) (! (let (($generated@@413 ($generated@@309 (type $generated@@412))))
(let (($generated@@414 ($generated@@308 (type $generated@@412))))
 (=> (= (type $generated@@412) ($generated@@307 $generated@@414 $generated@@413)) (= (= $generated@@412 ($generated@@306 $generated@@414 $generated@@413)) (= ($generated@@305 $generated@@412) ($generated@@410 $generated@@414))))))
 :pattern ( ($generated@@305 $generated@@412))
)))
(assert (forall (($generated@@415 T@U) ) (! (let (($generated@@416 ($generated@@309 (type $generated@@415))))
(let (($generated@@417 ($generated@@308 (type $generated@@415))))
 (=> (= (type $generated@@415) ($generated@@307 $generated@@417 $generated@@416)) (= (= $generated@@415 ($generated@@306 $generated@@417 $generated@@416)) (= ($generated@@345 $generated@@415) ($generated@@410 $generated@@416))))))
 :pattern ( ($generated@@345 $generated@@415))
)))
(assert (forall (($generated@@418 T@U) ) (! (let (($generated@@419 ($generated@@309 (type $generated@@418))))
(let (($generated@@420 ($generated@@308 (type $generated@@418))))
 (=> (= (type $generated@@418) ($generated@@307 $generated@@420 $generated@@419)) (= (= $generated@@418 ($generated@@306 $generated@@420 $generated@@419)) (= ($generated@@373 $generated@@418) ($generated@@410 $generated@@154))))))
 :pattern ( ($generated@@373 $generated@@418))
)))
(assert (forall (($generated@@421 T@U) ) (! (let (($generated@@422 ($generated@@291 (type $generated@@421))))
(let (($generated@@423 ($generated@@290 (type $generated@@421))))
 (=> (= (type $generated@@421) ($generated@@289 $generated@@423 $generated@@422)) (or (= $generated@@421 ($generated@@288 $generated@@423 $generated@@422)) (exists (($generated@@424 T@U) ($generated@@425 T@U) ) (!  (and (and (= (type $generated@@424) $generated@@154) (= (type $generated@@425) $generated@@154)) ($generated@@0 ($generated@@83 ($generated@@365 $generated@@421) ($generated@@268 ($generated@@220 $generated@@424 $generated@@425)))))
 :no-pattern (type $generated@@424)
 :no-pattern (type $generated@@425)
 :no-pattern ($generated $generated@@424)
 :no-pattern ($generated@@0 $generated@@424)
 :no-pattern ($generated $generated@@425)
 :no-pattern ($generated@@0 $generated@@425)
))))))
 :pattern ( ($generated@@365 $generated@@421))
)))
(assert (forall (($generated@@426 T@U) ) (! (let (($generated@@427 ($generated@@309 (type $generated@@426))))
(let (($generated@@428 ($generated@@308 (type $generated@@426))))
 (=> (= (type $generated@@426) ($generated@@307 $generated@@428 $generated@@427)) (or (= $generated@@426 ($generated@@306 $generated@@428 $generated@@427)) (exists (($generated@@429 T@U) ($generated@@430 T@U) ) (!  (and (and (= (type $generated@@429) $generated@@154) (= (type $generated@@430) $generated@@154)) ($generated@@0 ($generated@@83 ($generated@@373 $generated@@426) ($generated@@268 ($generated@@220 $generated@@429 $generated@@430)))))
 :no-pattern (type $generated@@429)
 :no-pattern (type $generated@@430)
 :no-pattern ($generated $generated@@429)
 :no-pattern ($generated@@0 $generated@@429)
 :no-pattern ($generated $generated@@430)
 :no-pattern ($generated@@0 $generated@@430)
))))))
 :pattern ( ($generated@@373 $generated@@426))
)))
(assert (forall (($generated@@431 T@U) ) (!  (=> (and (= (type $generated@@431) $generated@@154) ($generated@@221 $generated@@431 $generated@@46)) (and (= ($generated@@268 ($generated@@326 $generated@@2 $generated@@431)) $generated@@431) ($generated@@141 ($generated@@326 $generated@@2 $generated@@431) $generated@@46)))
 :pattern ( ($generated@@221 $generated@@431 $generated@@46))
)))
(assert (forall (($generated@@432 T@U) ) (!  (=> (and (= (type $generated@@432) $generated@@154) ($generated@@221 $generated@@432 $generated@@47)) (and (= ($generated@@268 ($generated@@326 $generated@@3 $generated@@432)) $generated@@432) ($generated@@141 ($generated@@326 $generated@@3 $generated@@432) $generated@@47)))
 :pattern ( ($generated@@221 $generated@@432 $generated@@47))
)))
(assert (forall (($generated@@433 T@U) ) (!  (=> (and (= (type $generated@@433) $generated@@154) ($generated@@221 $generated@@433 $generated@@44)) (and (= ($generated@@268 ($generated@@326 $generated@@4 $generated@@433)) $generated@@433) ($generated@@141 ($generated@@326 $generated@@4 $generated@@433) $generated@@44)))
 :pattern ( ($generated@@221 $generated@@433 $generated@@44))
)))
(assert (= ($generated@@1 $generated@@434) 20))
(assert (forall (($generated@@435 T@U) ) (!  (=> (and (= (type $generated@@435) $generated@@154) ($generated@@221 $generated@@435 $generated@@45)) (and (= ($generated@@268 ($generated@@326 $generated@@434 $generated@@435)) $generated@@435) ($generated@@141 ($generated@@326 $generated@@434 $generated@@435) $generated@@45)))
 :pattern ( ($generated@@221 $generated@@435 $generated@@45))
)))
(assert (forall (($generated@@436 T@U) ($generated@@437 T@U) ) (!  (=> (= (type $generated@@437) $generated@@66) (= ($generated@@221 ($generated@@268 $generated@@436) $generated@@437) ($generated@@141 $generated@@436 $generated@@437)))
 :pattern ( ($generated@@221 ($generated@@268 $generated@@436) $generated@@437))
)))
(assert (forall (($generated@@438 T@U) ) (! (let (($generated@@439 ($generated@@81 (type $generated@@438))))
 (=> (= (type $generated@@438) ($generated@@78 $generated@@439 $generated@@2)) (<= 0 ($generated@@281 $generated@@438))))
 :pattern ( ($generated@@281 $generated@@438))
)))
(assert (forall (($generated@@440 T@U) ) (! (let (($generated@@441 ($generated@@262 (type $generated@@440))))
 (=> (= (type $generated@@440) ($generated@@261 $generated@@441)) (<= 0 ($generated@@260 $generated@@440))))
 :pattern ( ($generated@@260 $generated@@440))
)))
(assert (forall (($generated@@443 T@U) ) (! (= (type ($generated@@442 $generated@@443)) $generated@@66)
 :pattern ( ($generated@@442 $generated@@443))
)))
(assert (forall (($generated@@444 T@U) ($generated@@445 T@U) ) (!  (=> (and (= (type $generated@@444) $generated@@66) (= (type $generated@@445) $generated@@66)) (= ($generated@@442 ($generated@@391 $generated@@444 $generated@@445)) $generated@@444))
 :pattern ( ($generated@@391 $generated@@444 $generated@@445))
)))
(assert (forall (($generated@@447 T@U) ) (! (= (type ($generated@@446 $generated@@447)) $generated@@66)
 :pattern ( ($generated@@446 $generated@@447))
)))
(assert (forall (($generated@@448 T@U) ($generated@@449 T@U) ) (!  (=> (and (= (type $generated@@448) $generated@@66) (= (type $generated@@449) $generated@@66)) (= ($generated@@446 ($generated@@391 $generated@@448 $generated@@449)) $generated@@449))
 :pattern ( ($generated@@391 $generated@@448 $generated@@449))
)))
(assert (forall (($generated@@450 T@U) ($generated@@451 T@U) ) (!  (=> (and (= (type $generated@@450) $generated@@66) (= (type $generated@@451) $generated@@66)) (= ($generated@@74 ($generated@@391 $generated@@450 $generated@@451)) $generated@@58))
 :pattern ( ($generated@@391 $generated@@450 $generated@@451))
)))
(assert (forall (($generated@@453 T@U) ) (! (= (type ($generated@@452 $generated@@453)) $generated@@66)
 :pattern ( ($generated@@452 $generated@@453))
)))
(assert (forall (($generated@@454 T@U) ($generated@@455 T@U) ) (!  (=> (and (= (type $generated@@454) $generated@@66) (= (type $generated@@455) $generated@@66)) (= ($generated@@452 ($generated@@399 $generated@@454 $generated@@455)) $generated@@454))
 :pattern ( ($generated@@399 $generated@@454 $generated@@455))
)))
(assert (forall (($generated@@457 T@U) ) (! (= (type ($generated@@456 $generated@@457)) $generated@@66)
 :pattern ( ($generated@@456 $generated@@457))
)))
(assert (forall (($generated@@458 T@U) ($generated@@459 T@U) ) (!  (=> (and (= (type $generated@@458) $generated@@66) (= (type $generated@@459) $generated@@66)) (= ($generated@@456 ($generated@@399 $generated@@458 $generated@@459)) $generated@@459))
 :pattern ( ($generated@@399 $generated@@458 $generated@@459))
)))
(assert (forall (($generated@@460 T@U) ($generated@@461 T@U) ) (!  (=> (and (= (type $generated@@460) $generated@@66) (= (type $generated@@461) $generated@@66)) (= ($generated@@74 ($generated@@399 $generated@@460 $generated@@461)) $generated@@59))
 :pattern ( ($generated@@399 $generated@@460 $generated@@461))
)))
(assert (forall (($generated@@462 T@U) ($generated@@463 T@U) ) (!  (=> (and (= (type $generated@@462) $generated@@154) (= (type $generated@@463) $generated@@154)) (= ($generated@@253 ($generated@@220 $generated@@462 $generated@@463)) $generated@@62))
 :pattern ( ($generated@@220 $generated@@462 $generated@@463))
)))
(assert (forall (($generated@@465 T@U) ) (! (= (type ($generated@@464 $generated@@465)) $generated@@66)
 :pattern ( ($generated@@464 $generated@@465))
)))
(assert (forall (($generated@@466 T@U) ($generated@@467 T@U) ) (!  (=> (and (= (type $generated@@466) $generated@@66) (= (type $generated@@467) $generated@@66)) (= ($generated@@464 ($generated@@144 $generated@@466 $generated@@467)) $generated@@466))
 :pattern ( ($generated@@144 $generated@@466 $generated@@467))
)))
(assert (forall (($generated@@469 T@U) ) (! (= (type ($generated@@468 $generated@@469)) $generated@@66)
 :pattern ( ($generated@@468 $generated@@469))
)))
(assert (forall (($generated@@470 T@U) ($generated@@471 T@U) ) (!  (=> (and (= (type $generated@@470) $generated@@66) (= (type $generated@@471) $generated@@66)) (= ($generated@@468 ($generated@@144 $generated@@470 $generated@@471)) $generated@@471))
 :pattern ( ($generated@@144 $generated@@470 $generated@@471))
)))
(assert (forall (($generated@@472 T@U) ($generated@@473 T@U) ) (!  (=> (and (= (type $generated@@472) $generated@@154) (= (type $generated@@473) $generated@@154)) (= ($generated@@152 ($generated@@220 $generated@@472 $generated@@473)) $generated@@472))
 :pattern ( ($generated@@220 $generated@@472 $generated@@473))
)))
(assert (forall (($generated@@474 T@U) ($generated@@475 T@U) ) (!  (=> (and (= (type $generated@@474) $generated@@154) (= (type $generated@@475) $generated@@154)) (= ($generated@@153 ($generated@@220 $generated@@474 $generated@@475)) $generated@@475))
 :pattern ( ($generated@@220 $generated@@474 $generated@@475))
)))
(assert  (and (forall (($generated@@478 T@U) ) (! (= (type ($generated@@476 $generated@@478)) $generated@@66)
 :pattern ( ($generated@@476 $generated@@478))
)) (forall (($generated@@479 T@U) ($generated@@480 Int) ) (! (let (($generated@@481 ($generated@@262 (type $generated@@479))))
(= (type ($generated@@477 $generated@@479 $generated@@480)) $generated@@481))
 :pattern ( ($generated@@477 $generated@@479 $generated@@480))
))))
(assert (forall (($generated@@482 T@U) ($generated@@483 T@U) ($generated@@484 T@U) ) (!  (=> (and (and (= (type $generated@@482) ($generated@@261 $generated@@154)) (= (type $generated@@483) $generated@@66)) (= (type $generated@@484) ($generated@@78 $generated@@79 $generated@@80))) (= ($generated@@76 $generated@@482 ($generated@@476 $generated@@483) $generated@@484) (forall (($generated@@485 Int) ) (!  (=> (and (<= 0 $generated@@485) (< $generated@@485 ($generated@@260 $generated@@482))) ($generated@@247 ($generated@@477 $generated@@482 $generated@@485) $generated@@483 $generated@@484))
 :pattern ( ($generated@@477 $generated@@482 $generated@@485))
))))
 :pattern ( ($generated@@76 $generated@@482 ($generated@@476 $generated@@483) $generated@@484))
)))
(assert (forall (($generated@@487 Int) ) (! (= ($generated@@486 ($generated@@77 $generated@@487)) $generated@@487)
 :pattern ( ($generated@@77 $generated@@487))
)))
(assert (forall (($generated@@489 T@U) ) (! (= (type ($generated@@488 $generated@@489)) $generated@@66)
 :pattern ( ($generated@@488 $generated@@489))
)))
(assert (forall (($generated@@490 T@U) ) (!  (=> (= (type $generated@@490) $generated@@66) (= ($generated@@488 ($generated@@230 $generated@@490)) $generated@@490))
 :pattern ( ($generated@@230 $generated@@490))
)))
(assert (forall (($generated@@491 T@U) ) (!  (=> (= (type $generated@@491) $generated@@66) (= ($generated@@74 ($generated@@230 $generated@@491)) $generated@@54))
 :pattern ( ($generated@@230 $generated@@491))
)))
(assert (forall (($generated@@493 T@U) ) (! (= (type ($generated@@492 $generated@@493)) $generated@@66)
 :pattern ( ($generated@@492 $generated@@493))
)))
(assert (forall (($generated@@494 T@U) ) (!  (=> (= (type $generated@@494) $generated@@66) (= ($generated@@492 ($generated@@235 $generated@@494)) $generated@@494))
 :pattern ( ($generated@@235 $generated@@494))
)))
(assert (forall (($generated@@495 T@U) ) (!  (=> (= (type $generated@@495) $generated@@66) (= ($generated@@74 ($generated@@235 $generated@@495)) $generated@@55))
 :pattern ( ($generated@@235 $generated@@495))
)))
(assert (forall (($generated@@497 T@U) ) (! (= (type ($generated@@496 $generated@@497)) $generated@@66)
 :pattern ( ($generated@@496 $generated@@497))
)))
(assert (forall (($generated@@498 T@U) ) (!  (=> (= (type $generated@@498) $generated@@66) (= ($generated@@496 ($generated@@159 $generated@@498)) $generated@@498))
 :pattern ( ($generated@@159 $generated@@498))
)))
(assert (forall (($generated@@499 T@U) ) (!  (=> (= (type $generated@@499) $generated@@66) (= ($generated@@74 ($generated@@159 $generated@@499)) $generated@@56))
 :pattern ( ($generated@@159 $generated@@499))
)))
(assert (forall (($generated@@501 T@U) ) (! (= (type ($generated@@500 $generated@@501)) $generated@@66)
 :pattern ( ($generated@@500 $generated@@501))
)))
(assert (forall (($generated@@502 T@U) ) (!  (=> (= (type $generated@@502) $generated@@66) (= ($generated@@500 ($generated@@476 $generated@@502)) $generated@@502))
 :pattern ( ($generated@@476 $generated@@502))
)))
(assert (forall (($generated@@503 T@U) ) (!  (=> (= (type $generated@@503) $generated@@66) (= ($generated@@74 ($generated@@476 $generated@@503)) $generated@@57))
 :pattern ( ($generated@@476 $generated@@503))
)))
(assert (forall (($generated@@504 T@U) ) (! (let (($generated@@505 (type $generated@@504)))
(= ($generated@@326 $generated@@505 ($generated@@268 $generated@@504)) $generated@@504))
 :pattern ( ($generated@@268 $generated@@504))
)))
(assert (forall (($generated@@506 T@U) ($generated@@507 T@U) ($generated@@508 T@U) ) (!  (=> (and (and (= (type $generated@@506) ($generated@@289 $generated@@154 $generated@@154)) (= (type $generated@@507) $generated@@66)) (= (type $generated@@508) $generated@@66)) (= ($generated@@141 $generated@@506 ($generated@@391 $generated@@507 $generated@@508)) (forall (($generated@@509 T@U) ) (!  (=> (and (= (type $generated@@509) $generated@@154) ($generated@@0 ($generated@@83 ($generated@@287 $generated@@506) $generated@@509))) (and ($generated@@221 ($generated@@83 ($generated@@366 $generated@@506) $generated@@509) $generated@@508) ($generated@@221 $generated@@509 $generated@@507)))
 :pattern ( ($generated@@83 ($generated@@366 $generated@@506) $generated@@509))
 :pattern ( ($generated@@83 ($generated@@287 $generated@@506) $generated@@509))
))))
 :pattern ( ($generated@@141 $generated@@506 ($generated@@391 $generated@@507 $generated@@508)))
)))
(assert (forall (($generated@@510 T@U) ($generated@@511 T@U) ($generated@@512 T@U) ) (!  (=> (and (and (= (type $generated@@510) ($generated@@307 $generated@@154 $generated@@154)) (= (type $generated@@511) $generated@@66)) (= (type $generated@@512) $generated@@66)) (= ($generated@@141 $generated@@510 ($generated@@399 $generated@@511 $generated@@512)) (forall (($generated@@513 T@U) ) (!  (=> (and (= (type $generated@@513) $generated@@154) ($generated@@0 ($generated@@83 ($generated@@305 $generated@@510) $generated@@513))) (and ($generated@@221 ($generated@@83 ($generated@@374 $generated@@510) $generated@@513) $generated@@512) ($generated@@221 $generated@@513 $generated@@511)))
 :pattern ( ($generated@@83 ($generated@@374 $generated@@510) $generated@@513))
 :pattern ( ($generated@@83 ($generated@@305 $generated@@510) $generated@@513))
))))
 :pattern ( ($generated@@141 $generated@@510 ($generated@@399 $generated@@511 $generated@@512)))
)))
(assert (forall (($generated@@516 T@U) ($generated@@517 T@U) ) (!  (=> (and (= (type $generated@@516) $generated@@154) (= (type $generated@@517) $generated@@154)) (< ($generated@@514 $generated@@516) ($generated@@515 ($generated@@220 $generated@@516 $generated@@517))))
 :pattern ( ($generated@@220 $generated@@516 $generated@@517))
)))
(assert (forall (($generated@@518 T@U) ($generated@@519 T@U) ) (!  (=> (and (= (type $generated@@518) $generated@@154) (= (type $generated@@519) $generated@@154)) (< ($generated@@514 $generated@@519) ($generated@@515 ($generated@@220 $generated@@518 $generated@@519))))
 :pattern ( ($generated@@220 $generated@@518 $generated@@519))
)))
(assert (forall (($generated@@520 T@U) ($generated@@521 T@U) ($generated@@522 T@U) ) (!  (=> (and (and (and (= (type $generated@@520) $generated@@154) (= (type $generated@@521) $generated@@66)) (= (type $generated@@522) $generated@@66)) ($generated@@221 $generated@@520 ($generated@@391 $generated@@521 $generated@@522))) (and (= ($generated@@268 ($generated@@326 ($generated@@289 $generated@@154 $generated@@154) $generated@@520)) $generated@@520) ($generated@@141 ($generated@@326 ($generated@@289 $generated@@154 $generated@@154) $generated@@520) ($generated@@391 $generated@@521 $generated@@522))))
 :pattern ( ($generated@@221 $generated@@520 ($generated@@391 $generated@@521 $generated@@522)))
)))
(assert (forall (($generated@@523 T@U) ($generated@@524 T@U) ($generated@@525 T@U) ) (!  (=> (and (and (and (= (type $generated@@523) $generated@@154) (= (type $generated@@524) $generated@@66)) (= (type $generated@@525) $generated@@66)) ($generated@@221 $generated@@523 ($generated@@399 $generated@@524 $generated@@525))) (and (= ($generated@@268 ($generated@@326 ($generated@@307 $generated@@154 $generated@@154) $generated@@523)) $generated@@523) ($generated@@141 ($generated@@326 ($generated@@307 $generated@@154 $generated@@154) $generated@@523) ($generated@@399 $generated@@524 $generated@@525))))
 :pattern ( ($generated@@221 $generated@@523 ($generated@@399 $generated@@524 $generated@@525)))
)))
(assert (forall (($generated@@526 T@U) ($generated@@527 T@U) ($generated@@528 T@U) ) (!  (=> (and (and (and (= (type $generated@@526) $generated@@66) (= (type $generated@@527) $generated@@66)) (= (type $generated@@528) $generated@@154)) ($generated@@221 $generated@@528 ($generated@@144 $generated@@526 $generated@@527))) (and (= ($generated@@268 ($generated@@326 $generated@@145 $generated@@528)) $generated@@528) ($generated@@141 ($generated@@326 $generated@@145 $generated@@528) ($generated@@144 $generated@@526 $generated@@527))))
 :pattern ( ($generated@@221 $generated@@528 ($generated@@144 $generated@@526 $generated@@527)))
)))
(assert (forall (($generated@@529 T@U) ) (! (let (($generated@@530 (type $generated@@529)))
 (not ($generated@@0 ($generated@@83 ($generated@@410 $generated@@530) $generated@@529))))
 :pattern ( (let (($generated@@530 (type $generated@@529)))
($generated@@83 ($generated@@410 $generated@@530) $generated@@529)))
)))
(assert (forall (($generated@@532 T@U) ) (! (= (type ($generated@@531 $generated@@532)) $generated@@71)
 :pattern ( ($generated@@531 $generated@@532))
)))
(assert (forall (($generated@@533 T@U) ($generated@@534 T@U) ) (!  (=> (and (= (type $generated@@533) $generated@@66) (= (type $generated@@534) $generated@@66)) (and (= ($generated@@74 ($generated@@144 $generated@@533 $generated@@534)) $generated@@63) (= ($generated@@531 ($generated@@144 $generated@@533 $generated@@534)) $generated@@65)))
 :pattern ( ($generated@@144 $generated@@533 $generated@@534))
)))
(assert (forall (($generated@@535 T@U) ) (!  (=> (= (type $generated@@535) $generated@@145) (= ($generated@@514 ($generated@@268 $generated@@535)) ($generated@@515 $generated@@535)))
 :pattern ( ($generated@@514 ($generated@@268 $generated@@535)))
)))
(assert (forall (($generated@@536 T@U) ) (!  (=> (and (= (type $generated@@536) $generated@@154) ($generated@@221 $generated@@536 ($generated@@77 0))) (and (= ($generated@@268 ($generated@@326 $generated@@2 $generated@@536)) $generated@@536) ($generated@@141 ($generated@@326 ($generated@@78 $generated@@154 $generated@@4) $generated@@536) ($generated@@77 0))))
 :pattern ( ($generated@@221 $generated@@536 ($generated@@77 0)))
)))
(assert (forall (($generated@@537 T@U) ($generated@@538 T@U) ) (!  (=> (and (and (= (type $generated@@537) $generated@@154) (= (type $generated@@538) $generated@@66)) ($generated@@221 $generated@@537 ($generated@@230 $generated@@538))) (and (= ($generated@@268 ($generated@@326 ($generated@@78 $generated@@154 $generated@@4) $generated@@537)) $generated@@537) ($generated@@141 ($generated@@326 ($generated@@78 $generated@@154 $generated@@4) $generated@@537) ($generated@@230 $generated@@538))))
 :pattern ( ($generated@@221 $generated@@537 ($generated@@230 $generated@@538)))
)))
(assert (forall (($generated@@539 T@U) ($generated@@540 T@U) ) (!  (=> (and (and (= (type $generated@@539) $generated@@154) (= (type $generated@@540) $generated@@66)) ($generated@@221 $generated@@539 ($generated@@235 $generated@@540))) (and (= ($generated@@268 ($generated@@326 ($generated@@78 $generated@@154 $generated@@4) $generated@@539)) $generated@@539) ($generated@@141 ($generated@@326 ($generated@@78 $generated@@154 $generated@@4) $generated@@539) ($generated@@235 $generated@@540))))
 :pattern ( ($generated@@221 $generated@@539 ($generated@@235 $generated@@540)))
)))
(assert (forall (($generated@@541 T@U) ($generated@@542 T@U) ) (!  (=> (and (and (= (type $generated@@541) $generated@@154) (= (type $generated@@542) $generated@@66)) ($generated@@221 $generated@@541 ($generated@@159 $generated@@542))) (and (= ($generated@@268 ($generated@@326 ($generated@@78 $generated@@154 $generated@@2) $generated@@541)) $generated@@541) ($generated@@141 ($generated@@326 ($generated@@78 $generated@@154 $generated@@2) $generated@@541) ($generated@@159 $generated@@542))))
 :pattern ( ($generated@@221 $generated@@541 ($generated@@159 $generated@@542)))
)))
(assert (forall (($generated@@543 T@U) ($generated@@544 T@U) ) (!  (=> (and (and (= (type $generated@@543) $generated@@154) (= (type $generated@@544) $generated@@66)) ($generated@@221 $generated@@543 ($generated@@476 $generated@@544))) (and (= ($generated@@268 ($generated@@326 ($generated@@261 $generated@@154) $generated@@543)) $generated@@543) ($generated@@141 ($generated@@326 ($generated@@261 $generated@@154) $generated@@543) ($generated@@476 $generated@@544))))
 :pattern ( ($generated@@221 $generated@@543 ($generated@@476 $generated@@544)))
)))
(assert (= ($generated@@74 $generated@@138) $generated@@61))
(assert (= ($generated@@531 $generated@@138) $generated@@64))
(assert (forall (($generated@@545 T@U) ($generated@@546 T@U) ($generated@@547 T@U) ) (!  (=> (and (and (= (type $generated@@545) ($generated@@78 $generated@@154 $generated@@2)) (= (type $generated@@546) $generated@@66)) (= (type $generated@@547) ($generated@@78 $generated@@79 $generated@@80))) (= ($generated@@76 $generated@@545 ($generated@@159 $generated@@546) $generated@@547) (forall (($generated@@548 T@U) ) (!  (=> (and (= (type $generated@@548) $generated@@154) (< 0 ($generated ($generated@@83 $generated@@545 $generated@@548)))) ($generated@@247 $generated@@548 $generated@@546 $generated@@547))
 :pattern ( ($generated@@83 $generated@@545 $generated@@548))
))))
 :pattern ( ($generated@@76 $generated@@545 ($generated@@159 $generated@@546) $generated@@547))
)))
(assert (forall (($generated@@549 T@U) ($generated@@550 T@U) ($generated@@551 T@U) ) (!  (=> (and (and (and (= (type $generated@@549) $generated@@145) (= (type $generated@@550) $generated@@66)) (= (type $generated@@551) ($generated@@78 $generated@@79 $generated@@80))) (and ($generated@@246 $generated@@551) (and ($generated@@143 $generated@@549) (exists (($generated@@552 T@U) ) (!  (and (= (type $generated@@552) $generated@@66) ($generated@@76 $generated@@549 ($generated@@144 $generated@@550 $generated@@552) $generated@@551))
 :pattern ( ($generated@@76 $generated@@549 ($generated@@144 $generated@@550 $generated@@552) $generated@@551))
))))) ($generated@@247 ($generated@@152 $generated@@549) $generated@@550 $generated@@551))
 :pattern ( ($generated@@247 ($generated@@152 $generated@@549) $generated@@550 $generated@@551))
)))
(assert (forall (($generated@@553 T@U) ($generated@@554 T@U) ($generated@@555 T@U) ) (!  (=> (and (and (and (= (type $generated@@553) $generated@@145) (= (type $generated@@554) $generated@@66)) (= (type $generated@@555) ($generated@@78 $generated@@79 $generated@@80))) (and ($generated@@246 $generated@@555) (and ($generated@@143 $generated@@553) (exists (($generated@@556 T@U) ) (!  (and (= (type $generated@@556) $generated@@66) ($generated@@76 $generated@@553 ($generated@@144 $generated@@556 $generated@@554) $generated@@555))
 :pattern ( ($generated@@76 $generated@@553 ($generated@@144 $generated@@556 $generated@@554) $generated@@555))
))))) ($generated@@247 ($generated@@153 $generated@@553) $generated@@554 $generated@@555))
 :pattern ( ($generated@@247 ($generated@@153 $generated@@553) $generated@@554 $generated@@555))
)))
(assert (forall (($generated@@557 T@U) ($generated@@558 T@U) ) (!  (=> (and (= (type $generated@@557) $generated@@154) (= (type $generated@@558) $generated@@154)) (= ($generated@@220 ($generated@@242 $generated@@557) ($generated@@242 $generated@@558)) ($generated@@242 ($generated@@220 $generated@@557 $generated@@558))))
 :pattern ( ($generated@@220 ($generated@@242 $generated@@557) ($generated@@242 $generated@@558)))
)))
(assert (forall (($generated@@559 Int) ) (! (= ($generated@@268 ($generated@@8 ($generated@@240 $generated@@559))) ($generated@@242 ($generated@@268 ($generated@@8 $generated@@559))))
 :pattern ( ($generated@@268 ($generated@@8 ($generated@@240 $generated@@559))))
)))
(assert (forall (($generated@@560 T@U) ) (! (= ($generated@@268 ($generated@@242 $generated@@560)) ($generated@@242 ($generated@@268 $generated@@560)))
 :pattern ( ($generated@@268 ($generated@@242 $generated@@560)))
)))
(assert (forall (($generated@@561 T@U) ) (! (let (($generated@@562 ($generated@@262 (type $generated@@561))))
 (=> (and (= (type $generated@@561) ($generated@@261 $generated@@562)) (= ($generated@@260 $generated@@561) 0)) (= $generated@@561 ($generated@@259 $generated@@562))))
 :pattern ( ($generated@@260 $generated@@561))
)))
(assert (forall (($generated@@563 T@U) ($generated@@564 T@U) ($generated@@565 T@U) ) (! (let (($generated@@566 (type $generated@@564)))
 (=> (and (and (= (type $generated@@563) ($generated@@78 $generated@@566 $generated@@2)) (= (type $generated@@565) $generated@@2)) (<= 0 ($generated $generated@@565))) (= ($generated@@281 ($generated@@84 $generated@@563 $generated@@564 $generated@@565)) (+ (- ($generated@@281 $generated@@563) ($generated ($generated@@83 $generated@@563 $generated@@564))) ($generated $generated@@565)))))
 :pattern ( ($generated@@281 ($generated@@84 $generated@@563 $generated@@564 $generated@@565)))
)))
(assert (forall (($generated@@567 T@U) ($generated@@568 T@U) ) (!  (=> (and (= (type $generated@@567) ($generated@@78 $generated@@79 $generated@@80)) (= (type $generated@@568) $generated@@2)) ($generated@@76 $generated@@568 $generated@@46 $generated@@567))
 :pattern ( ($generated@@76 $generated@@568 $generated@@46 $generated@@567))
)))
(assert (forall (($generated@@569 T@U) ($generated@@570 T@U) ) (!  (=> (and (= (type $generated@@569) ($generated@@78 $generated@@79 $generated@@80)) (= (type $generated@@570) $generated@@3)) ($generated@@76 $generated@@570 $generated@@47 $generated@@569))
 :pattern ( ($generated@@76 $generated@@570 $generated@@47 $generated@@569))
)))
(assert (forall (($generated@@571 T@U) ($generated@@572 T@U) ) (!  (=> (and (= (type $generated@@571) ($generated@@78 $generated@@79 $generated@@80)) (= (type $generated@@572) $generated@@4)) ($generated@@76 $generated@@572 $generated@@44 $generated@@571))
 :pattern ( ($generated@@76 $generated@@572 $generated@@44 $generated@@571))
)))
(assert (forall (($generated@@573 T@U) ($generated@@574 T@U) ) (!  (=> (and (= (type $generated@@573) ($generated@@78 $generated@@79 $generated@@80)) (= (type $generated@@574) $generated@@434)) ($generated@@76 $generated@@574 $generated@@45 $generated@@573))
 :pattern ( ($generated@@76 $generated@@574 $generated@@45 $generated@@573))
)))
(assert (forall (($generated@@575 T@U) ($generated@@576 T@U) ) (!  (=> (and (= (type $generated@@575) ($generated@@78 $generated@@79 $generated@@80)) (= (type $generated@@576) $generated@@154)) ($generated@@76 $generated@@576 $generated@@48 $generated@@575))
 :pattern ( ($generated@@76 $generated@@576 $generated@@48 $generated@@575))
)))
(assert (forall (($generated@@577 T@U) ($generated@@578 T@U) ) (!  (=> (and (= (type $generated@@577) ($generated@@261 $generated@@154)) (= (type $generated@@578) $generated@@66)) (= ($generated@@141 $generated@@577 ($generated@@476 $generated@@578)) (forall (($generated@@579 Int) ) (!  (=> (and (<= 0 $generated@@579) (< $generated@@579 ($generated@@260 $generated@@577))) ($generated@@221 ($generated@@477 $generated@@577 $generated@@579) $generated@@578))
 :pattern ( ($generated@@477 $generated@@577 $generated@@579))
))))
 :pattern ( ($generated@@141 $generated@@577 ($generated@@476 $generated@@578)))
)))
(assert (forall (($generated@@581 T@U) ($generated@@582 Int) ) (!  (=> (= (type $generated@@581) ($generated@@261 $generated@@154)) (=> (and (<= 0 $generated@@582) (< $generated@@582 ($generated@@260 $generated@@581))) (< ($generated@@515 ($generated@@326 $generated@@145 ($generated@@477 $generated@@581 $generated@@582))) ($generated@@580 $generated@@581))))
 :pattern ( ($generated@@515 ($generated@@326 $generated@@145 ($generated@@477 $generated@@581 $generated@@582))))
)))
(assert (forall (($generated@@583 T@U) ($generated@@584 T@U) ($generated@@585 T@U) ) (!  (=> (and (and (and (= (type $generated@@583) ($generated@@289 $generated@@154 $generated@@154)) (= (type $generated@@584) $generated@@66)) (= (type $generated@@585) $generated@@66)) ($generated@@141 $generated@@583 ($generated@@391 $generated@@584 $generated@@585))) (and (and ($generated@@141 ($generated@@287 $generated@@583) ($generated@@230 $generated@@584)) ($generated@@141 ($generated@@334 $generated@@583) ($generated@@230 $generated@@585))) ($generated@@141 ($generated@@365 $generated@@583) ($generated@@230 ($generated@@144 $generated@@584 $generated@@585)))))
 :pattern ( ($generated@@141 $generated@@583 ($generated@@391 $generated@@584 $generated@@585)))
)))
(assert (forall (($generated@@586 T@U) ($generated@@587 T@U) ($generated@@588 T@U) ) (!  (=> (and (and (and (= (type $generated@@586) ($generated@@307 $generated@@154 $generated@@154)) (= (type $generated@@587) $generated@@66)) (= (type $generated@@588) $generated@@66)) ($generated@@141 $generated@@586 ($generated@@399 $generated@@587 $generated@@588))) (and (and ($generated@@141 ($generated@@305 $generated@@586) ($generated@@235 $generated@@587)) ($generated@@141 ($generated@@345 $generated@@586) ($generated@@235 $generated@@588))) ($generated@@141 ($generated@@373 $generated@@586) ($generated@@235 ($generated@@144 $generated@@587 $generated@@588)))))
 :pattern ( ($generated@@141 $generated@@586 ($generated@@399 $generated@@587 $generated@@588)))
)))
(assert (forall (($generated@@589 T@U) ) (!  (=> (= (type $generated@@589) $generated@@2) ($generated@@141 $generated@@589 $generated@@46))
 :pattern ( ($generated@@141 $generated@@589 $generated@@46))
)))
(assert (forall (($generated@@590 T@U) ) (!  (=> (= (type $generated@@590) $generated@@3) ($generated@@141 $generated@@590 $generated@@47))
 :pattern ( ($generated@@141 $generated@@590 $generated@@47))
)))
(assert (forall (($generated@@591 T@U) ) (!  (=> (= (type $generated@@591) $generated@@4) ($generated@@141 $generated@@591 $generated@@44))
 :pattern ( ($generated@@141 $generated@@591 $generated@@44))
)))
(assert (forall (($generated@@592 T@U) ) (!  (=> (= (type $generated@@592) $generated@@434) ($generated@@141 $generated@@592 $generated@@45))
 :pattern ( ($generated@@141 $generated@@592 $generated@@45))
)))
(assert (forall (($generated@@593 T@U) ) (!  (=> (= (type $generated@@593) $generated@@154) ($generated@@141 $generated@@593 $generated@@48))
 :pattern ( ($generated@@141 $generated@@593 $generated@@48))
)))
(push 1)
(declare-fun ControlFlow (Int Int) Int)
(declare-fun $generated@@594 () T@U)
(declare-fun $generated@@595 () T@U)
(declare-fun $generated@@596 () T@U)
(declare-fun $generated@@597 (T@U) Bool)
(declare-fun $generated@@598 () Int)
(assert  (and (and (= (type $generated@@594) ($generated@@166 $generated@@79 $generated@@4)) (= (type $generated@@595) $generated@@79)) (= (type $generated@@596) ($generated@@78 $generated@@79 $generated@@80))))
(set-option :timeout 0)
(set-option :rlimit 0)
(assert (not
 (=> (= (ControlFlow 0 0) 3) (let (($generated@@599  (=> (and (= $generated@@594 ($generated@@165 $generated@@595 $generated@@596 $generated@@60 false)) (= (ControlFlow 0 2) (- 0 1))) ($generated@@141 ($generated@@8 ($generated@@240 5)) $generated@@138))))
(let (($generated@@600  (=> (and (and ($generated@@246 $generated@@596) ($generated@@597 $generated@@596)) (and (= 2 $generated@@598) (= (ControlFlow 0 3) 2))) $generated@@599)))
$generated@@600)))
))
(check-sat)
(pop 1)
; Valid
(get-info :rlimit)
(reset)
(set-option :rlimit 0)
; did a full reset
(reset)
(set-option :print-success false)
(set-info :smt-lib-version 2.6)
(set-option :auto_config false)
(set-option :type_check true)
(set-option :smt.case_split 3)
(set-option :smt.qi.eager_threshold 100)
(set-option :smt.delay_units true)
(set-option :smt.arith.solver 2)
(set-option :smt.mbqi false)
(set-option :model.compact false)
(set-option :model.v2 true)
(set-option :pp.bv_literals false)
; done setting options


(set-info :category "industrial")
(declare-sort |T@U| 0)
(declare-sort |T@T| 0)
(declare-fun real_pow (Real Real) Real)
(declare-fun UOrdering2 (|T@U| |T@U|) Bool)
(declare-fun UOrdering3 (|T@T| |T@U| |T@U|) Bool)
(declare-fun tickleBool (Bool) Bool)
(assert (and (tickleBool true) (tickleBool false)))
(declare-fun $generated (T@U) Int)
(declare-fun $generated@@0 (T@U) Bool)
(declare-fun $generated@@1 (T@T) Int)
(declare-fun $generated@@2 () T@T)
(declare-fun $generated@@3 () T@T)
(declare-fun $generated@@4 () T@T)
(declare-fun $generated@@5 () T@T)
(declare-fun $generated@@6 () T@T)
(declare-fun $generated@@7 () T@T)
(declare-fun $generated@@8 (Int) T@U)
(declare-fun type (T@U) T@T)
(declare-fun $generated@@9 (Real) T@U)
(declare-fun $generated@@10 (T@U) Real)
(declare-fun $generated@@11 (Bool) T@U)
(declare-fun $generated@@12 (RoundingMode) T@U)
(declare-fun $generated@@13 (T@U) RoundingMode)
(declare-fun $generated@@14 (String) T@U)
(declare-fun $generated@@15 (T@U) String)
(declare-fun $generated@@16 ((RegEx String)) T@U)
(declare-fun $generated@@17 (T@U) (RegEx String))
(declare-fun $generated@@44 () T@U)
(declare-fun $generated@@45 () T@U)
(declare-fun $generated@@46 () T@U)
(declare-fun $generated@@47 () T@U)
(declare-fun $generated@@48 () T@U)
(declare-fun $generated@@49 () T@U)
(declare-fun $generated@@50 () T@U)
(declare-fun $generated@@51 () T@U)
(declare-fun $generated@@52 () T@U)
(declare-fun $generated@@53 () T@U)
(declare-fun $generated@@54 () T@U)
(declare-fun $generated@@55 () T@U)
(declare-fun $generated@@56 () T@U)
(declare-fun $generated@@57 () T@U)
(declare-fun $generated@@58 () T@U)
(declare-fun $generated@@59 () T@U)
(declare-fun $generated@@60 () T@U)
(declare-fun $generated@@61 () T@U)
(declare-fun $generated@@62 () T@U)
(declare-fun $generated@@63 () T@U)
(declare-fun $generated@@64 () T@U)
(declare-fun $generated@@65 () T@U)
(declare-fun $generated@@66 () T@T)
(declare-fun $generated@@67 () T@T)
(declare-fun $generated@@68 (T@T) T@T)
(declare-fun $generated@@69 (T@T) T@T)
(declare-fun $generated@@70 () T@T)
(declare-fun $generated@@71 () T@T)
(declare-fun $generated@@74 (T@U) T@U)
(declare-fun $generated@@76 (T@U T@U T@U) Bool)
(declare-fun $generated@@77 (Int) T@U)
(declare-fun $generated@@78 (T@T T@T) T@T)
(declare-fun $generated@@79 () T@T)
(declare-fun $generated@@80 () T@T)
(declare-fun $generated@@81 (T@T) T@T)
(declare-fun $generated@@82 (T@T) T@T)
(declare-fun $generated@@83 (T@U T@U) T@U)
(declare-fun $generated@@84 (T@U T@U T@U) T@U)
(declare-fun $generated@@85 (T@U T@U) T@U)
(declare-fun $generated@@86 (T@U T@U T@U) T@U)
(declare-fun $generated@@134 (T@U T@U) Bool)
(declare-fun $generated@@138 () T@U)
(declare-fun $generated@@141 (T@U T@U) Bool)
(declare-fun $generated@@143 (T@U) Bool)
(declare-fun $generated@@144 (T@U T@U) T@U)
(declare-fun $generated@@145 () T@T)
(declare-fun $generated@@151 (T@U T@U) Bool)
(declare-fun $generated@@152 (T@U) T@U)
(declare-fun $generated@@153 (T@U) T@U)
(declare-fun $generated@@154 () T@T)
(declare-fun $generated@@159 (T@U) T@U)
(declare-fun $generated@@160 (T@U) Bool)
(declare-fun $generated@@164 (T@U T@U T@U) T@U)
(declare-fun $generated@@165 (T@U T@U T@U Bool) T@U)
(declare-fun $generated@@166 (T@T T@T) T@T)
(declare-fun $generated@@167 (T@T) T@T)
(declare-fun $generated@@168 (T@T) T@T)
(declare-fun $generated@@169 (T@U T@U T@U T@U) T@U)
(declare-fun $generated@@220 (T@U T@U) T@U)
(declare-fun $generated@@221 (T@U T@U) Bool)
(declare-fun $generated@@230 (T@U) T@U)
(declare-fun $generated@@235 (T@U) T@U)
(declare-fun $generated@@240 (Int) Int)
(declare-fun $generated@@242 (T@U) T@U)
(declare-fun $generated@@246 (T@U) Bool)
(declare-fun $generated@@247 (T@U T@U T@U) Bool)
(declare-fun $generated@@253 (T@U) T@U)
(declare-fun $generated@@259 (T@T) T@U)
(declare-fun $generated@@260 (T@U) Int)
(declare-fun $generated@@261 (T@T) T@T)
(declare-fun $generated@@262 (T@T) T@T)
(declare-fun $generated@@268 (T@U) T@U)
(declare-fun $generated@@281 (T@U) Int)
(declare-fun $generated@@282 (T@T) T@U)
(declare-fun $generated@@287 (T@U) T@U)
(declare-fun $generated@@288 (T@T T@T) T@U)
(declare-fun $generated@@289 (T@T T@T) T@T)
(declare-fun $generated@@290 (T@T) T@T)
(declare-fun $generated@@291 (T@T) T@T)
(declare-fun $generated@@305 (T@U) T@U)
(declare-fun $generated@@306 (T@T T@T) T@U)
(declare-fun $generated@@307 (T@T T@T) T@T)
(declare-fun $generated@@308 (T@T) T@T)
(declare-fun $generated@@309 (T@T) T@T)
(declare-fun $generated@@326 (T@T T@U) T@U)
(declare-fun $generated@@334 (T@U) T@U)
(declare-fun $generated@@345 (T@U) T@U)
(declare-fun $generated@@365 (T@U) T@U)
(declare-fun $generated@@366 (T@U) T@U)
(declare-fun $generated@@373 (T@U) T@U)
(declare-fun $generated@@374 (T@U) T@U)
(declare-fun $generated@@391 (T@U T@U) T@U)
(declare-fun $generated@@399 (T@U T@U) T@U)
(declare-fun $generated@@410 (T@T) T@U)
(declare-fun $generated@@434 () T@T)
(declare-fun $generated@@442 (T@U) T@U)
(declare-fun $generated@@446 (T@U) T@U)
(declare-fun $generated@@452 (T@U) T@U)
(declare-fun $generated@@456 (T@U) T@U)
(declare-fun $generated@@464 (T@U) T@U)
(declare-fun $generated@@468 (T@U) T@U)
(declare-fun $generated@@476 (T@U) T@U)
(declare-fun $generated@@477 (T@U Int) T@U)
(declare-fun $generated@@486 (T@U) Int)
(declare-fun $generated@@488 (T@U) T@U)
(declare-fun $generated@@492 (T@U) T@U)
(declare-fun $generated@@496 (T@U) T@U)
(declare-fun $generated@@500 (T@U) T@U)
(declare-fun $generated@@514 (T@U) Int)
(declare-fun $generated@@515 (T@U) Int)
(declare-fun $generated@@531 (Int Int) Int)
(declare-fun $generated@@534 (T@U) T@U)
(declare-fun $generated@@583 (T@U) Int)
(assert  (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (= ($generated@@1 $generated@@2) 0) (= ($generated@@1 $generated@@3) 1)) (= ($generated@@1 $generated@@4) 2)) (= ($generated@@1 $generated@@5) 3)) (= ($generated@@1 $generated@@6) 4)) (= ($generated@@1 $generated@@7) 5)) (forall (($generated@@18 Int) ) (! (= ($generated ($generated@@8 $generated@@18)) $generated@@18)
 :pattern ( ($generated@@8 $generated@@18))
))) (forall (($generated@@19 T@U) ) (!  (=> (= (type $generated@@19) $generated@@2) (= ($generated@@8 ($generated $generated@@19)) $generated@@19))
 :pattern ( ($generated $generated@@19))
))) (forall (($generated@@20 Int) ) (! (= (type ($generated@@8 $generated@@20)) $generated@@2)
 :pattern ( ($generated@@8 $generated@@20))
))) (forall (($generated@@21 Real) ) (! (= ($generated@@10 ($generated@@9 $generated@@21)) $generated@@21)
 :pattern ( ($generated@@9 $generated@@21))
))) (forall (($generated@@22 T@U) ) (!  (=> (= (type $generated@@22) $generated@@3) (= ($generated@@9 ($generated@@10 $generated@@22)) $generated@@22))
 :pattern ( ($generated@@10 $generated@@22))
))) (forall (($generated@@23 Real) ) (! (= (type ($generated@@9 $generated@@23)) $generated@@3)
 :pattern ( ($generated@@9 $generated@@23))
))) (forall (($generated@@24 Bool) ) (! (= ($generated@@0 ($generated@@11 $generated@@24)) $generated@@24)
 :pattern ( ($generated@@11 $generated@@24))
))) (forall (($generated@@25 T@U) ) (!  (=> (= (type $generated@@25) $generated@@4) (= ($generated@@11 ($generated@@0 $generated@@25)) $generated@@25))
 :pattern ( ($generated@@0 $generated@@25))
))) (forall (($generated@@26 Bool) ) (! (= (type ($generated@@11 $generated@@26)) $generated@@4)
 :pattern ( ($generated@@11 $generated@@26))
))) (forall (($generated@@27 RoundingMode) ) (! (= ($generated@@13 ($generated@@12 $generated@@27)) $generated@@27)
 :pattern ( ($generated@@12 $generated@@27))
))) (forall (($generated@@28 T@U) ) (!  (=> (= (type $generated@@28) $generated@@5) (= ($generated@@12 ($generated@@13 $generated@@28)) $generated@@28))
 :pattern ( ($generated@@13 $generated@@28))
))) (forall (($generated@@29 RoundingMode) ) (! (= (type ($generated@@12 $generated@@29)) $generated@@5)
 :pattern ( ($generated@@12 $generated@@29))
))) (forall (($generated@@30 String) ) (! (= ($generated@@15 ($generated@@14 $generated@@30)) $generated@@30)
 :pattern ( ($generated@@14 $generated@@30))
))) (forall (($generated@@31 T@U) ) (!  (=> (= (type $generated@@31) $generated@@6) (= ($generated@@14 ($generated@@15 $generated@@31)) $generated@@31))
 :pattern ( ($generated@@15 $generated@@31))
))) (forall (($generated@@32 String) ) (! (= (type ($generated@@14 $generated@@32)) $generated@@6)
 :pattern ( ($generated@@14 $generated@@32))
))) (forall (($generated@@33 (RegEx String)) ) (! (= ($generated@@17 ($generated@@16 $generated@@33)) $generated@@33)
 :pattern ( ($generated@@16 $generated@@33))
))) (forall (($generated@@34 T@U) ) (!  (=> (= (type $generated@@34) $generated@@7) (= ($generated@@16 ($generated@@17 $generated@@34)) $generated@@34))
 :pattern ( ($generated@@17 $generated@@34))
))) (forall (($generated@@35 (RegEx String)) ) (! (= (type ($generated@@16 $generated@@35)) $generated@@7)
 :pattern ( ($generated@@16 $generated@@35))
))))
(assert (forall (($generated@@36 T@U) ) (! (UOrdering2 $generated@@36 $generated@@36)
 :no-pattern ($generated $generated@@36)
 :no-pattern ($generated@@0 $generated@@36)
)))
(assert (forall (($generated@@37 T@U) ($generated@@38 T@U) ($generated@@39 T@U) ) (! (let (($generated@@40 (type $generated@@37)))
 (=> (and (and (= (type $generated@@38) $generated@@40) (= (type $generated@@39) $generated@@40)) (and (UOrdering2 $generated@@37 $generated@@38) (UOrdering2 $generated@@38 $generated@@39))) (UOrdering2 $generated@@37 $generated@@39)))
 :pattern ( (UOrdering2 $generated@@37 $generated@@38) (UOrdering2 $generated@@38 $generated@@39))
)))
(assert (forall (($generated@@41 T@U) ($generated@@42 T@U) ) (! (let (($generated@@43 (type $generated@@41)))
 (=> (= (type $generated@@42) $generated@@43) (=> (and (UOrdering2 $generated@@41 $generated@@42) (UOrdering2 $generated@@42 $generated@@41)) (= $generated@@41 $generated@@42))))
 :pattern ( (UOrdering2 $generated@@41 $generated@@42) (UOrdering2 $generated@@42 $generated@@41))
)))
(assert  (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (= ($generated@@1 $generated@@66) 6) (= (type $generated@@44) $generated@@66)) (= (type $generated@@45) $generated@@66)) (= (type $generated@@46) $generated@@66)) (= (type $generated@@47) $generated@@66)) (= (type $generated@@48) $generated@@66)) (= ($generated@@1 $generated@@67) 7)) (= (type $generated@@49) $generated@@67)) (= (type $generated@@50) $generated@@67)) (= (type $generated@@51) $generated@@67)) (= (type $generated@@52) $generated@@67)) (= (type $generated@@53) $generated@@67)) (= (type $generated@@54) $generated@@67)) (= (type $generated@@55) $generated@@67)) (= (type $generated@@56) $generated@@67)) (= (type $generated@@57) $generated@@67)) (= (type $generated@@58) $generated@@67)) (= (type $generated@@59) $generated@@67)) (forall (($generated@@72 T@T) ) (= ($generated@@1 ($generated@@68 $generated@@72)) 8))) (forall (($generated@@73 T@T) ) (! (= ($generated@@69 ($generated@@68 $generated@@73)) $generated@@73)
 :pattern ( ($generated@@68 $generated@@73))
))) (= (type $generated@@60) ($generated@@68 $generated@@4))) (= (type $generated@@61) $generated@@67)) (= ($generated@@1 $generated@@70) 9)) (= (type $generated@@62) $generated@@70)) (= (type $generated@@63) $generated@@67)) (= ($generated@@1 $generated@@71) 10)) (= (type $generated@@64) $generated@@71)) (= (type $generated@@65) $generated@@71)))
(assert (distinct $generated@@44 $generated@@45 $generated@@46 $generated@@47 $generated@@48 $generated@@49 $generated@@50 $generated@@51 $generated@@52 $generated@@53 $generated@@54 $generated@@55 $generated@@56 $generated@@57 $generated@@58 $generated@@59 $generated@@60 $generated@@61 $generated@@62 $generated@@63 $generated@@64 $generated@@65)
)
(assert (forall (($generated@@75 T@U) ) (! (= (type ($generated@@74 $generated@@75)) $generated@@67)
 :pattern ( ($generated@@74 $generated@@75))
)))
(assert (= ($generated@@74 $generated@@44) $generated@@49))
(assert (= ($generated@@74 $generated@@45) $generated@@50))
(assert (= ($generated@@74 $generated@@46) $generated@@51))
(assert (= ($generated@@74 $generated@@47) $generated@@52))
(assert (= ($generated@@74 $generated@@48) $generated@@53))
(assert  (and (and (and (and (and (and (and (and (and (and (and (and (and (forall (($generated@@87 T@T) ($generated@@88 T@T) ) (= ($generated@@1 ($generated@@78 $generated@@87 $generated@@88)) 11)) (forall (($generated@@89 T@T) ($generated@@90 T@T) ) (! (= ($generated@@81 ($generated@@78 $generated@@89 $generated@@90)) $generated@@89)
 :pattern ( ($generated@@78 $generated@@89 $generated@@90))
))) (forall (($generated@@91 T@T) ($generated@@92 T@T) ) (! (= ($generated@@82 ($generated@@78 $generated@@91 $generated@@92)) $generated@@92)
 :pattern ( ($generated@@78 $generated@@91 $generated@@92))
))) (forall (($generated@@93 T@U) ($generated@@94 T@U) ) (! (let (($generated@@95 ($generated@@82 (type $generated@@93))))
(= (type ($generated@@83 $generated@@93 $generated@@94)) $generated@@95))
 :pattern ( ($generated@@83 $generated@@93 $generated@@94))
))) (forall (($generated@@96 T@U) ($generated@@97 T@U) ($generated@@98 T@U) ) (! (let (($generated@@99 (type $generated@@98)))
(let (($generated@@100 (type $generated@@97)))
(= (type ($generated@@84 $generated@@96 $generated@@97 $generated@@98)) ($generated@@78 $generated@@100 $generated@@99))))
 :pattern ( ($generated@@84 $generated@@96 $generated@@97 $generated@@98))
))) (forall (($generated@@101 T@U) ($generated@@102 T@U) ($generated@@103 T@U) ) (! (let (($generated@@104 ($generated@@82 (type $generated@@101))))
 (=> (= (type $generated@@103) $generated@@104) (= ($generated@@83 ($generated@@84 $generated@@101 $generated@@102 $generated@@103) $generated@@102) $generated@@103)))
 :weight 0
))) (and (forall (($generated@@105 T@U) ($generated@@106 T@U) ($generated@@107 T@U) ($generated@@108 T@U) ) (!  (or (= $generated@@107 $generated@@108) (= ($generated@@83 ($generated@@84 $generated@@106 $generated@@107 $generated@@105) $generated@@108) ($generated@@83 $generated@@106 $generated@@108)))
 :weight 0
)) (forall (($generated@@109 T@U) ($generated@@110 T@U) ($generated@@111 T@U) ($generated@@112 T@U) ) (!  (or true (= ($generated@@83 ($generated@@84 $generated@@110 $generated@@111 $generated@@109) $generated@@112) ($generated@@83 $generated@@110 $generated@@112)))
 :weight 0
)))) (= ($generated@@1 $generated@@79) 12)) (forall (($generated@@113 T@U) ($generated@@114 T@U) ) (! (let (($generated@@115 ($generated@@69 (type $generated@@114))))
(= (type ($generated@@85 $generated@@113 $generated@@114)) $generated@@115))
 :pattern ( ($generated@@85 $generated@@113 $generated@@114))
))) (= ($generated@@1 $generated@@80) 13)) (forall (($generated@@116 T@U) ($generated@@117 T@U) ($generated@@118 T@U) ) (! (= (type ($generated@@86 $generated@@116 $generated@@117 $generated@@118)) $generated@@80)
 :pattern ( ($generated@@86 $generated@@116 $generated@@117 $generated@@118))
))) (forall (($generated@@119 T@U) ($generated@@120 T@U) ($generated@@121 T@U) ) (! (let (($generated@@122 ($generated@@69 (type $generated@@120))))
 (=> (= (type $generated@@121) $generated@@122) (= ($generated@@85 ($generated@@86 $generated@@119 $generated@@120 $generated@@121) $generated@@120) $generated@@121)))
 :weight 0
))) (and (forall (($generated@@123 T@U) ($generated@@124 T@U) ($generated@@125 T@U) ($generated@@126 T@U) ) (!  (or (= $generated@@125 $generated@@126) (= ($generated@@85 ($generated@@86 $generated@@124 $generated@@125 $generated@@123) $generated@@126) ($generated@@85 $generated@@124 $generated@@126)))
 :weight 0
)) (forall (($generated@@127 T@U) ($generated@@128 T@U) ($generated@@129 T@U) ($generated@@130 T@U) ) (!  (or true (= ($generated@@85 ($generated@@86 $generated@@128 $generated@@129 $generated@@127) $generated@@130) ($generated@@85 $generated@@128 $generated@@130)))
 :weight 0
)))) (forall (($generated@@131 Int) ) (! (= (type ($generated@@77 $generated@@131)) $generated@@66)
 :pattern ( ($generated@@77 $generated@@131))
))))
(assert (forall (($generated@@132 T@U) ($generated@@133 T@U) ) (!  (=> (and (= (type $generated@@132) $generated@@2) (= (type $generated@@133) ($generated@@78 $generated@@79 $generated@@80))) ($generated@@76 $generated@@132 ($generated@@77 0) $generated@@133))
 :pattern ( ($generated@@76 $generated@@132 ($generated@@77 0) $generated@@133))
)))
(assert (forall (($generated@@135 T@U) ($generated@@136 T@U) ) (!  (=> (and (and (= (type $generated@@135) ($generated@@78 $generated@@79 $generated@@80)) (= (type $generated@@136) ($generated@@78 $generated@@79 $generated@@80))) ($generated@@134 $generated@@135 $generated@@136)) (forall (($generated@@137 T@U) ) (!  (=> (and (= (type $generated@@137) $generated@@79) ($generated@@0 ($generated@@85 ($generated@@83 $generated@@135 $generated@@137) $generated@@60))) ($generated@@0 ($generated@@85 ($generated@@83 $generated@@136 $generated@@137) $generated@@60)))
 :pattern ( ($generated@@85 ($generated@@83 $generated@@136 $generated@@137) $generated@@60))
)))
 :pattern ( ($generated@@134 $generated@@135 $generated@@136))
)))
(assert (= (type $generated@@138) $generated@@66))
(assert (forall (($generated@@139 T@U) ($generated@@140 T@U) ) (!  (=> (and (= (type $generated@@139) $generated@@2) (= (type $generated@@140) ($generated@@78 $generated@@79 $generated@@80))) ($generated@@76 $generated@@139 $generated@@138 $generated@@140))
 :pattern ( ($generated@@76 $generated@@139 $generated@@138 $generated@@140))
)))
(assert (forall (($generated@@142 T@U) ) (!  (=> (= (type $generated@@142) $generated@@2) ($generated@@141 $generated@@142 ($generated@@77 0)))
 :pattern ( ($generated@@141 $generated@@142 ($generated@@77 0)))
)))
(assert  (and (= ($generated@@1 $generated@@145) 14) (forall (($generated@@146 T@U) ($generated@@147 T@U) ) (! (= (type ($generated@@144 $generated@@146 $generated@@147)) $generated@@66)
 :pattern ( ($generated@@144 $generated@@146 $generated@@147))
))))
(assert (forall (($generated@@148 T@U) ($generated@@149 T@U) ($generated@@150 T@U) ) (!  (=> (and (and (and (= (type $generated@@148) $generated@@66) (= (type $generated@@149) $generated@@66)) (= (type $generated@@150) $generated@@145)) ($generated@@141 $generated@@150 ($generated@@144 $generated@@148 $generated@@149))) ($generated@@143 $generated@@150))
 :pattern ( ($generated@@143 $generated@@150) ($generated@@141 $generated@@150 ($generated@@144 $generated@@148 $generated@@149)))
)))
(assert  (and (and (= ($generated@@1 $generated@@154) 15) (forall (($generated@@155 T@U) ) (! (= (type ($generated@@152 $generated@@155)) $generated@@154)
 :pattern ( ($generated@@152 $generated@@155))
))) (forall (($generated@@156 T@U) ) (! (= (type ($generated@@153 $generated@@156)) $generated@@154)
 :pattern ( ($generated@@153 $generated@@156))
))))
(assert (forall (($generated@@157 T@U) ($generated@@158 T@U) ) (!  (=> (and (and (= (type $generated@@157) $generated@@145) (= (type $generated@@158) $generated@@145)) true) (= ($generated@@151 $generated@@157 $generated@@158)  (and (= ($generated@@152 $generated@@157) ($generated@@152 $generated@@158)) (= ($generated@@153 $generated@@157) ($generated@@153 $generated@@158)))))
 :pattern ( ($generated@@151 $generated@@157 $generated@@158))
)))
(assert (forall (($generated@@161 T@U) ) (! (= (type ($generated@@159 $generated@@161)) $generated@@66)
 :pattern ( ($generated@@159 $generated@@161))
)))
(assert (forall (($generated@@162 T@U) ($generated@@163 T@U) ) (!  (=> (and (and (= (type $generated@@162) ($generated@@78 $generated@@154 $generated@@2)) (= (type $generated@@163) $generated@@66)) ($generated@@141 $generated@@162 ($generated@@159 $generated@@163))) ($generated@@160 $generated@@162))
 :pattern ( ($generated@@141 $generated@@162 ($generated@@159 $generated@@163)))
)))
(assert  (and (and (and (and (and (and (and (forall (($generated@@170 T@T) ($generated@@171 T@T) ) (= ($generated@@1 ($generated@@166 $generated@@170 $generated@@171)) 16)) (forall (($generated@@172 T@T) ($generated@@173 T@T) ) (! (= ($generated@@167 ($generated@@166 $generated@@172 $generated@@173)) $generated@@172)
 :pattern ( ($generated@@166 $generated@@172 $generated@@173))
))) (forall (($generated@@174 T@T) ($generated@@175 T@T) ) (! (= ($generated@@168 ($generated@@166 $generated@@174 $generated@@175)) $generated@@175)
 :pattern ( ($generated@@166 $generated@@174 $generated@@175))
))) (forall (($generated@@176 T@U) ($generated@@177 T@U) ($generated@@178 T@U) ) (! (let (($generated@@179 ($generated@@168 (type $generated@@176))))
(= (type ($generated@@164 $generated@@176 $generated@@177 $generated@@178)) $generated@@179))
 :pattern ( ($generated@@164 $generated@@176 $generated@@177 $generated@@178))
))) (forall (($generated@@180 T@U) ($generated@@181 T@U) ($generated@@182 T@U) ($generated@@183 T@U) ) (! (let (($generated@@184 (type $generated@@183)))
(let (($generated@@185 (type $generated@@181)))
(= (type ($generated@@169 $generated@@180 $generated@@181 $generated@@182 $generated@@183)) ($generated@@166 $generated@@185 $generated@@184))))
 :pattern ( ($generated@@169 $generated@@180 $generated@@181 $generated@@182 $generated@@183))
))) (forall (($generated@@186 T@U) ($generated@@187 T@U) ($generated@@188 T@U) ($generated@@189 T@U) ) (! (let (($generated@@190 ($generated@@168 (type $generated@@186))))
 (=> (= (type $generated@@189) $generated@@190) (= ($generated@@164 ($generated@@169 $generated@@186 $generated@@187 $generated@@188 $generated@@189) $generated@@187 $generated@@188) $generated@@189)))
 :weight 0
))) (and (and (forall (($generated@@191 T@U) ($generated@@192 T@U) ($generated@@193 T@U) ($generated@@194 T@U) ($generated@@195 T@U) ($generated@@196 T@U) ) (!  (or (= $generated@@193 $generated@@195) (= ($generated@@164 ($generated@@169 $generated@@192 $generated@@193 $generated@@194 $generated@@191) $generated@@195 $generated@@196) ($generated@@164 $generated@@192 $generated@@195 $generated@@196)))
 :weight 0
)) (forall (($generated@@197 T@U) ($generated@@198 T@U) ($generated@@199 T@U) ($generated@@200 T@U) ($generated@@201 T@U) ($generated@@202 T@U) ) (!  (or (= $generated@@200 $generated@@202) (= ($generated@@164 ($generated@@169 $generated@@198 $generated@@199 $generated@@200 $generated@@197) $generated@@201 $generated@@202) ($generated@@164 $generated@@198 $generated@@201 $generated@@202)))
 :weight 0
))) (forall (($generated@@203 T@U) ($generated@@204 T@U) ($generated@@205 T@U) ($generated@@206 T@U) ($generated@@207 T@U) ($generated@@208 T@U) ) (!  (or true (= ($generated@@164 ($generated@@169 $generated@@204 $generated@@205 $generated@@206 $generated@@203) $generated@@207 $generated@@208) ($generated@@164 $generated@@204 $generated@@207 $generated@@208)))
 :weight 0
)))) (forall (($generated@@209 T@U) ($generated@@210 T@U) ($generated@@211 T@U) ($generated@@212 Bool) ) (! (= (type ($generated@@165 $generated@@209 $generated@@210 $generated@@211 $generated@@212)) ($generated@@166 $generated@@79 $generated@@4))
 :pattern ( ($generated@@165 $generated@@209 $generated@@210 $generated@@211 $generated@@212))
))))
(assert (forall (($generated@@213 T@U) ($generated@@214 T@U) ($generated@@215 T@U) ($generated@@216 Bool) ($generated@@217 T@U) ($generated@@218 T@U) ) (! (let (($generated@@219 ($generated@@69 (type $generated@@218))))
 (=> (and (and (and (and (= (type $generated@@213) $generated@@79) (= (type $generated@@214) ($generated@@78 $generated@@79 $generated@@80))) (= (type $generated@@215) ($generated@@68 $generated@@4))) (= (type $generated@@217) $generated@@79)) (= (type $generated@@218) ($generated@@68 $generated@@219))) (= ($generated@@0 ($generated@@164 ($generated@@165 $generated@@213 $generated@@214 $generated@@215 $generated@@216) $generated@@217 $generated@@218))  (=> (and (not (= $generated@@217 $generated@@213)) ($generated@@0 ($generated@@85 ($generated@@83 $generated@@214 $generated@@217) $generated@@215))) $generated@@216))))
 :pattern ( ($generated@@164 ($generated@@165 $generated@@213 $generated@@214 $generated@@215 $generated@@216) $generated@@217 $generated@@218))
)))
(assert (forall (($generated@@222 T@U) ($generated@@223 T@U) ) (! (= (type ($generated@@220 $generated@@222 $generated@@223)) $generated@@145)
 :pattern ( ($generated@@220 $generated@@222 $generated@@223))
)))
(assert (forall (($generated@@224 T@U) ($generated@@225 T@U) ($generated@@226 T@U) ($generated@@227 T@U) ) (!  (=> (and (and (and (= (type $generated@@224) $generated@@66) (= (type $generated@@225) $generated@@66)) (= (type $generated@@226) $generated@@154)) (= (type $generated@@227) $generated@@154)) (= ($generated@@141 ($generated@@220 $generated@@226 $generated@@227) ($generated@@144 $generated@@224 $generated@@225))  (and ($generated@@221 $generated@@226 $generated@@224) ($generated@@221 $generated@@227 $generated@@225))))
 :pattern ( ($generated@@141 ($generated@@220 $generated@@226 $generated@@227) ($generated@@144 $generated@@224 $generated@@225)))
)))
(assert (forall (($generated@@228 T@U) ($generated@@229 T@U) ) (!  (=> (and (= (type $generated@@228) $generated@@145) (= (type $generated@@229) $generated@@145)) (= ($generated@@151 $generated@@228 $generated@@229) (= $generated@@228 $generated@@229)))
 :pattern ( ($generated@@151 $generated@@228 $generated@@229))
)))
(assert (forall (($generated@@231 T@U) ) (! (= (type ($generated@@230 $generated@@231)) $generated@@66)
 :pattern ( ($generated@@230 $generated@@231))
)))
(assert (forall (($generated@@232 T@U) ($generated@@233 T@U) ) (!  (=> (and (= (type $generated@@232) ($generated@@78 $generated@@154 $generated@@4)) (= (type $generated@@233) $generated@@66)) (= ($generated@@141 $generated@@232 ($generated@@230 $generated@@233)) (forall (($generated@@234 T@U) ) (!  (=> (and (= (type $generated@@234) $generated@@154) ($generated@@0 ($generated@@83 $generated@@232 $generated@@234))) ($generated@@221 $generated@@234 $generated@@233))
 :pattern ( ($generated@@83 $generated@@232 $generated@@234))
))))
 :pattern ( ($generated@@141 $generated@@232 ($generated@@230 $generated@@233)))
)))
(assert (forall (($generated@@236 T@U) ) (! (= (type ($generated@@235 $generated@@236)) $generated@@66)
 :pattern ( ($generated@@235 $generated@@236))
)))
(assert (forall (($generated@@237 T@U) ($generated@@238 T@U) ) (!  (=> (and (= (type $generated@@237) ($generated@@78 $generated@@154 $generated@@4)) (= (type $generated@@238) $generated@@66)) (= ($generated@@141 $generated@@237 ($generated@@235 $generated@@238)) (forall (($generated@@239 T@U) ) (!  (=> (and (= (type $generated@@239) $generated@@154) ($generated@@0 ($generated@@83 $generated@@237 $generated@@239))) ($generated@@221 $generated@@239 $generated@@238))
 :pattern ( ($generated@@83 $generated@@237 $generated@@239))
))))
 :pattern ( ($generated@@141 $generated@@237 ($generated@@235 $generated@@238)))
)))
(assert (forall (($generated@@241 Int) ) (! (= ($generated@@240 $generated@@241) $generated@@241)
 :pattern ( ($generated@@240 $generated@@241))
)))
(assert (forall (($generated@@243 T@U) ) (! (let (($generated@@244 (type $generated@@243)))
(= (type ($generated@@242 $generated@@243)) $generated@@244))
 :pattern ( ($generated@@242 $generated@@243))
)))
(assert (forall (($generated@@245 T@U) ) (! (= ($generated@@242 $generated@@245) $generated@@245)
 :pattern ( ($generated@@242 $generated@@245))
)))
(assert (forall (($generated@@248 T@U) ($generated@@249 T@U) ($generated@@250 T@U) ($generated@@251 T@U) ($generated@@252 T@U) ) (!  (=> (and (and (and (and (and (= (type $generated@@248) $generated@@66) (= (type $generated@@249) $generated@@66)) (= (type $generated@@250) $generated@@154)) (= (type $generated@@251) $generated@@154)) (= (type $generated@@252) ($generated@@78 $generated@@79 $generated@@80))) ($generated@@246 $generated@@252)) (= ($generated@@76 ($generated@@220 $generated@@250 $generated@@251) ($generated@@144 $generated@@248 $generated@@249) $generated@@252)  (and ($generated@@247 $generated@@250 $generated@@248 $generated@@252) ($generated@@247 $generated@@251 $generated@@249 $generated@@252))))
 :pattern ( ($generated@@76 ($generated@@220 $generated@@250 $generated@@251) ($generated@@144 $generated@@248 $generated@@249) $generated@@252))
)))
(assert (forall (($generated@@254 T@U) ) (! (= (type ($generated@@253 $generated@@254)) $generated@@70)
 :pattern ( ($generated@@253 $generated@@254))
)))
(assert (forall (($generated@@255 T@U) ) (!  (=> (= (type $generated@@255) $generated@@145) (= ($generated@@143 $generated@@255) (= ($generated@@253 $generated@@255) $generated@@62)))
 :pattern ( ($generated@@143 $generated@@255))
)))
(assert (forall (($generated@@256 T@U) ) (!  (=> (and (= (type $generated@@256) $generated@@145) ($generated@@143 $generated@@256)) (exists (($generated@@257 T@U) ($generated@@258 T@U) ) (!  (and (and (= (type $generated@@257) $generated@@154) (= (type $generated@@258) $generated@@154)) (= $generated@@256 ($generated@@220 $generated@@257 $generated@@258)))
 :no-pattern (type $generated@@257)
 :no-pattern (type $generated@@258)
 :no-pattern ($generated $generated@@257)
 :no-pattern ($generated@@0 $generated@@257)
 :no-pattern ($generated $generated@@258)
 :no-pattern ($generated@@0 $generated@@258)
)))
 :pattern ( ($generated@@143 $generated@@256))
)))
(assert  (and (and (forall (($generated@@263 T@T) ) (= ($generated@@1 ($generated@@261 $generated@@263)) 17)) (forall (($generated@@264 T@T) ) (! (= ($generated@@262 ($generated@@261 $generated@@264)) $generated@@264)
 :pattern ( ($generated@@261 $generated@@264))
))) (forall (($generated@@265 T@T) ) (! (= (type ($generated@@259 $generated@@265)) ($generated@@261 $generated@@265))
 :pattern ( ($generated@@259 $generated@@265))
))))
(assert (forall (($generated@@266 T@T) ) (! (= ($generated@@260 ($generated@@259 $generated@@266)) 0)
 :pattern ( ($generated@@259 $generated@@266))
)))
(assert (forall (($generated@@267 T@U) ) (!  (=> (= (type $generated@@267) $generated@@2) (= ($generated@@141 $generated@@267 $generated@@138) (<= ($generated@@240 0) ($generated $generated@@267))))
 :pattern ( ($generated@@141 $generated@@267 $generated@@138))
)))
(assert (forall (($generated@@269 T@U) ) (! (= (type ($generated@@268 $generated@@269)) $generated@@154)
 :pattern ( ($generated@@268 $generated@@269))
)))
(assert (forall (($generated@@270 T@U) ($generated@@271 T@U) ($generated@@272 T@U) ) (!  (=> (and (= (type $generated@@271) $generated@@66) (= (type $generated@@272) ($generated@@78 $generated@@79 $generated@@80))) (= ($generated@@247 ($generated@@268 $generated@@270) $generated@@271 $generated@@272) ($generated@@76 $generated@@270 $generated@@271 $generated@@272)))
 :pattern ( ($generated@@247 ($generated@@268 $generated@@270) $generated@@271 $generated@@272))
)))
(assert (forall (($generated@@273 T@U) ($generated@@274 T@U) ($generated@@275 T@U) ($generated@@276 T@U) ) (!  (=> (and (and (and (and (and (= (type $generated@@273) ($generated@@78 $generated@@79 $generated@@80)) (= (type $generated@@274) ($generated@@78 $generated@@79 $generated@@80))) (= (type $generated@@275) $generated@@154)) (= (type $generated@@276) $generated@@66)) ($generated@@134 $generated@@273 $generated@@274)) ($generated@@247 $generated@@275 $generated@@276 $generated@@273)) ($generated@@247 $generated@@275 $generated@@276 $generated@@274))
 :pattern ( ($generated@@134 $generated@@273 $generated@@274) ($generated@@247 $generated@@275 $generated@@276 $generated@@273))
)))
(assert (forall (($generated@@277 T@U) ($generated@@278 T@U) ($generated@@279 T@U) ($generated@@280 T@U) ) (!  (=> (and (and (and (and (= (type $generated@@277) ($generated@@78 $generated@@79 $generated@@80)) (= (type $generated@@278) ($generated@@78 $generated@@79 $generated@@80))) (= (type $generated@@280) $generated@@66)) ($generated@@134 $generated@@277 $generated@@278)) ($generated@@76 $generated@@279 $generated@@280 $generated@@277)) ($generated@@76 $generated@@279 $generated@@280 $generated@@278))
 :pattern ( ($generated@@134 $generated@@277 $generated@@278) ($generated@@76 $generated@@279 $generated@@280 $generated@@277))
)))
(assert (forall (($generated@@283 T@T) ) (! (= (type ($generated@@282 $generated@@283)) ($generated@@78 $generated@@283 $generated@@2))
 :pattern ( ($generated@@282 $generated@@283))
)))
(assert (forall (($generated@@284 T@U) ) (! (let (($generated@@285 ($generated@@81 (type $generated@@284))))
 (=> (= (type $generated@@284) ($generated@@78 $generated@@285 $generated@@2)) (and (= (= ($generated@@281 $generated@@284) 0) (= $generated@@284 ($generated@@282 $generated@@285))) (=> (not (= ($generated@@281 $generated@@284) 0)) (exists (($generated@@286 T@U) ) (!  (and (= (type $generated@@286) $generated@@285) (< 0 ($generated ($generated@@83 $generated@@284 $generated@@286))))
 :no-pattern (type $generated@@286)
 :no-pattern ($generated $generated@@286)
 :no-pattern ($generated@@0 $generated@@286)
))))))
 :pattern ( ($generated@@281 $generated@@284))
)))
(assert  (and (and (and (and (forall (($generated@@292 T@T) ($generated@@293 T@T) ) (= ($generated@@1 ($generated@@289 $generated@@292 $generated@@293)) 18)) (forall (($generated@@294 T@T) ($generated@@295 T@T) ) (! (= ($generated@@290 ($generated@@289 $generated@@294 $generated@@295)) $generated@@294)
 :pattern ( ($generated@@289 $generated@@294 $generated@@295))
))) (forall (($generated@@296 T@T) ($generated@@297 T@T) ) (! (= ($generated@@291 ($generated@@289 $generated@@296 $generated@@297)) $generated@@297)
 :pattern ( ($generated@@289 $generated@@296 $generated@@297))
))) (forall (($generated@@298 T@U) ) (! (let (($generated@@299 ($generated@@290 (type $generated@@298))))
(= (type ($generated@@287 $generated@@298)) ($generated@@78 $generated@@299 $generated@@4)))
 :pattern ( ($generated@@287 $generated@@298))
))) (forall (($generated@@300 T@T) ($generated@@301 T@T) ) (! (= (type ($generated@@288 $generated@@300 $generated@@301)) ($generated@@289 $generated@@300 $generated@@301))
 :pattern ( ($generated@@288 $generated@@300 $generated@@301))
))))
(assert (forall (($generated@@302 T@U) ($generated@@303 T@T) ) (! (let (($generated@@304 (type $generated@@302)))
 (not ($generated@@0 ($generated@@83 ($generated@@287 ($generated@@288 $generated@@304 $generated@@303)) $generated@@302))))
 :pattern ( (let (($generated@@304 (type $generated@@302)))
($generated@@83 ($generated@@287 ($generated@@288 $generated@@304 $generated@@303)) $generated@@302)))
)))
(assert  (and (and (and (and (forall (($generated@@310 T@T) ($generated@@311 T@T) ) (= ($generated@@1 ($generated@@307 $generated@@310 $generated@@311)) 19)) (forall (($generated@@312 T@T) ($generated@@313 T@T) ) (! (= ($generated@@308 ($generated@@307 $generated@@312 $generated@@313)) $generated@@312)
 :pattern ( ($generated@@307 $generated@@312 $generated@@313))
))) (forall (($generated@@314 T@T) ($generated@@315 T@T) ) (! (= ($generated@@309 ($generated@@307 $generated@@314 $generated@@315)) $generated@@315)
 :pattern ( ($generated@@307 $generated@@314 $generated@@315))
))) (forall (($generated@@316 T@U) ) (! (let (($generated@@317 ($generated@@308 (type $generated@@316))))
(= (type ($generated@@305 $generated@@316)) ($generated@@78 $generated@@317 $generated@@4)))
 :pattern ( ($generated@@305 $generated@@316))
))) (forall (($generated@@318 T@T) ($generated@@319 T@T) ) (! (= (type ($generated@@306 $generated@@318 $generated@@319)) ($generated@@307 $generated@@318 $generated@@319))
 :pattern ( ($generated@@306 $generated@@318 $generated@@319))
))))
(assert (forall (($generated@@320 T@U) ($generated@@321 T@T) ) (! (let (($generated@@322 (type $generated@@320)))
 (not ($generated@@0 ($generated@@83 ($generated@@305 ($generated@@306 $generated@@322 $generated@@321)) $generated@@320))))
 :pattern ( (let (($generated@@322 (type $generated@@320)))
($generated@@83 ($generated@@305 ($generated@@306 $generated@@322 $generated@@321)) $generated@@320)))
)))
(assert (forall (($generated@@323 T@U) ) (! (let (($generated@@324 ($generated@@81 (type $generated@@323))))
 (=> (= (type $generated@@323) ($generated@@78 $generated@@324 $generated@@2)) (= ($generated@@160 $generated@@323) (forall (($generated@@325 T@U) ) (!  (=> (= (type $generated@@325) $generated@@324) (and (<= 0 ($generated ($generated@@83 $generated@@323 $generated@@325))) (<= ($generated ($generated@@83 $generated@@323 $generated@@325)) ($generated@@281 $generated@@323))))
 :pattern ( ($generated@@83 $generated@@323 $generated@@325))
)))))
 :pattern ( ($generated@@160 $generated@@323))
)))
(assert (forall (($generated@@327 T@T) ($generated@@328 T@U) ) (! (= (type ($generated@@326 $generated@@327 $generated@@328)) $generated@@327)
 :pattern ( ($generated@@326 $generated@@327 $generated@@328))
)))
(assert (forall (($generated@@329 T@U) ) (!  (=> (and (= (type $generated@@329) $generated@@154) ($generated@@221 $generated@@329 $generated@@138)) (and (= ($generated@@268 ($generated@@326 $generated@@2 $generated@@329)) $generated@@329) ($generated@@141 ($generated@@326 $generated@@2 $generated@@329) $generated@@138)))
 :pattern ( ($generated@@221 $generated@@329 $generated@@138))
)))
(assert (forall (($generated@@330 T@U) ) (! (let (($generated@@331 ($generated@@291 (type $generated@@330))))
(let (($generated@@332 ($generated@@290 (type $generated@@330))))
 (=> (= (type $generated@@330) ($generated@@289 $generated@@332 $generated@@331)) (or (= $generated@@330 ($generated@@288 $generated@@332 $generated@@331)) (exists (($generated@@333 T@U) ) (!  (and (= (type $generated@@333) $generated@@332) ($generated@@0 ($generated@@83 ($generated@@287 $generated@@330) $generated@@333)))
 :no-pattern (type $generated@@333)
 :no-pattern ($generated $generated@@333)
 :no-pattern ($generated@@0 $generated@@333)
))))))
 :pattern ( ($generated@@287 $generated@@330))
)))
(assert (forall (($generated@@335 T@U) ) (! (let (($generated@@336 ($generated@@291 (type $generated@@335))))
(= (type ($generated@@334 $generated@@335)) ($generated@@78 $generated@@336 $generated@@4)))
 :pattern ( ($generated@@334 $generated@@335))
)))
(assert (forall (($generated@@337 T@U) ) (! (let (($generated@@338 ($generated@@291 (type $generated@@337))))
(let (($generated@@339 ($generated@@290 (type $generated@@337))))
 (=> (= (type $generated@@337) ($generated@@289 $generated@@339 $generated@@338)) (or (= $generated@@337 ($generated@@288 $generated@@339 $generated@@338)) (exists (($generated@@340 T@U) ) (!  (and (= (type $generated@@340) $generated@@338) ($generated@@0 ($generated@@83 ($generated@@334 $generated@@337) $generated@@340)))
 :no-pattern (type $generated@@340)
 :no-pattern ($generated $generated@@340)
 :no-pattern ($generated@@0 $generated@@340)
))))))
 :pattern ( ($generated@@334 $generated@@337))
)))
(assert (forall (($generated@@341 T@U) ) (! (let (($generated@@342 ($generated@@309 (type $generated@@341))))
(let (($generated@@343 ($generated@@308 (type $generated@@341))))
 (=> (= (type $generated@@341) ($generated@@307 $generated@@343 $generated@@342)) (or (= $generated@@341 ($generated@@306 $generated@@343 $generated@@342)) (exists (($generated@@344 T@U) ) (!  (and (= (type $generated@@344) $generated@@343) ($generated@@0 ($generated@@83 ($generated@@305 $generated@@341) $generated@@344)))
 :no-pattern (type $generated@@344)
 :no-pattern ($generated $generated@@344)
 :no-pattern ($generated@@0 $generated@@344)
))))))
 :pattern ( ($generated@@305 $generated@@341))
)))
(assert (forall (($generated@@346 T@U) ) (! (let (($generated@@347 ($generated@@309 (type $generated@@346))))
(= (type ($generated@@345 $generated@@346)) ($generated@@78 $generated@@347 $generated@@4)))
 :pattern ( ($generated@@345 $generated@@346))
)))
(assert (forall (($generated@@348 T@U) ) (! (let (($generated@@349 ($generated@@309 (type $generated@@348))))
(let (($generated@@350 ($generated@@308 (type $generated@@348))))
 (=> (= (type $generated@@348) ($generated@@307 $generated@@350 $generated@@349)) (or (= $generated@@348 ($generated@@306 $generated@@350 $generated@@349)) (exists (($generated@@351 T@U) ) (!  (and (= (type $generated@@351) $generated@@349) ($generated@@0 ($generated@@83 ($generated@@345 $generated@@348) $generated@@351)))
 :no-pattern (type $generated@@351)
 :no-pattern ($generated $generated@@351)
 :no-pattern ($generated@@0 $generated@@351)
))))))
 :pattern ( ($generated@@345 $generated@@348))
)))
(assert (forall (($generated@@352 T@U) ($generated@@353 T@U) ) (!  (=> (and (= (type $generated@@352) ($generated@@78 $generated@@154 $generated@@2)) (= (type $generated@@353) $generated@@66)) (= ($generated@@141 $generated@@352 ($generated@@159 $generated@@353)) (forall (($generated@@354 T@U) ) (!  (=> (and (= (type $generated@@354) $generated@@154) (< 0 ($generated ($generated@@83 $generated@@352 $generated@@354)))) ($generated@@221 $generated@@354 $generated@@353))
 :pattern ( ($generated@@83 $generated@@352 $generated@@354))
))))
 :pattern ( ($generated@@141 $generated@@352 ($generated@@159 $generated@@353)))
)))
(assert (forall (($generated@@355 T@U) ($generated@@356 T@U) ($generated@@357 T@U) ) (!  (=> (and (and (= (type $generated@@355) ($generated@@78 $generated@@154 $generated@@4)) (= (type $generated@@356) $generated@@66)) (= (type $generated@@357) ($generated@@78 $generated@@79 $generated@@80))) (= ($generated@@76 $generated@@355 ($generated@@230 $generated@@356) $generated@@357) (forall (($generated@@358 T@U) ) (!  (=> (and (= (type $generated@@358) $generated@@154) ($generated@@0 ($generated@@83 $generated@@355 $generated@@358))) ($generated@@247 $generated@@358 $generated@@356 $generated@@357))
 :pattern ( ($generated@@83 $generated@@355 $generated@@358))
))))
 :pattern ( ($generated@@76 $generated@@355 ($generated@@230 $generated@@356) $generated@@357))
)))
(assert (forall (($generated@@359 T@U) ($generated@@360 T@U) ($generated@@361 T@U) ) (!  (=> (and (and (= (type $generated@@359) ($generated@@78 $generated@@154 $generated@@4)) (= (type $generated@@360) $generated@@66)) (= (type $generated@@361) ($generated@@78 $generated@@79 $generated@@80))) (= ($generated@@76 $generated@@359 ($generated@@235 $generated@@360) $generated@@361) (forall (($generated@@362 T@U) ) (!  (=> (and (= (type $generated@@362) $generated@@154) ($generated@@0 ($generated@@83 $generated@@359 $generated@@362))) ($generated@@247 $generated@@362 $generated@@360 $generated@@361))
 :pattern ( ($generated@@83 $generated@@359 $generated@@362))
))))
 :pattern ( ($generated@@76 $generated@@359 ($generated@@235 $generated@@360) $generated@@361))
)))
(assert (forall (($generated@@363 T@U) ) (! (let (($generated@@364 (type $generated@@363)))
(= ($generated ($generated@@83 ($generated@@282 $generated@@364) $generated@@363)) 0))
 :pattern ( (let (($generated@@364 (type $generated@@363)))
($generated@@83 ($generated@@282 $generated@@364) $generated@@363)))
)))
(assert  (and (forall (($generated@@367 T@U) ) (! (= (type ($generated@@365 $generated@@367)) ($generated@@78 $generated@@154 $generated@@4))
 :pattern ( ($generated@@365 $generated@@367))
)) (forall (($generated@@368 T@U) ) (! (let (($generated@@369 ($generated@@291 (type $generated@@368))))
(let (($generated@@370 ($generated@@290 (type $generated@@368))))
(= (type ($generated@@366 $generated@@368)) ($generated@@78 $generated@@370 $generated@@369))))
 :pattern ( ($generated@@366 $generated@@368))
))))
(assert (forall (($generated@@371 T@U) ($generated@@372 T@U) ) (!  (=> (and (= (type $generated@@371) ($generated@@289 $generated@@154 $generated@@154)) (= (type $generated@@372) $generated@@154)) (= ($generated@@0 ($generated@@83 ($generated@@365 $generated@@371) $generated@@372))  (and ($generated@@0 ($generated@@83 ($generated@@287 $generated@@371) ($generated@@152 ($generated@@326 $generated@@145 $generated@@372)))) (= ($generated@@83 ($generated@@366 $generated@@371) ($generated@@152 ($generated@@326 $generated@@145 $generated@@372))) ($generated@@153 ($generated@@326 $generated@@145 $generated@@372))))))
 :pattern ( ($generated@@83 ($generated@@365 $generated@@371) $generated@@372))
)))
(assert  (and (forall (($generated@@375 T@U) ) (! (= (type ($generated@@373 $generated@@375)) ($generated@@78 $generated@@154 $generated@@4))
 :pattern ( ($generated@@373 $generated@@375))
)) (forall (($generated@@376 T@U) ) (! (let (($generated@@377 ($generated@@309 (type $generated@@376))))
(let (($generated@@378 ($generated@@308 (type $generated@@376))))
(= (type ($generated@@374 $generated@@376)) ($generated@@78 $generated@@378 $generated@@377))))
 :pattern ( ($generated@@374 $generated@@376))
))))
(assert (forall (($generated@@379 T@U) ($generated@@380 T@U) ) (!  (=> (and (= (type $generated@@379) ($generated@@307 $generated@@154 $generated@@154)) (= (type $generated@@380) $generated@@154)) (= ($generated@@0 ($generated@@83 ($generated@@373 $generated@@379) $generated@@380))  (and ($generated@@0 ($generated@@83 ($generated@@305 $generated@@379) ($generated@@152 ($generated@@326 $generated@@145 $generated@@380)))) (= ($generated@@83 ($generated@@374 $generated@@379) ($generated@@152 ($generated@@326 $generated@@145 $generated@@380))) ($generated@@153 ($generated@@326 $generated@@145 $generated@@380))))))
 :pattern ( ($generated@@83 ($generated@@373 $generated@@379) $generated@@380))
)))
(assert (forall (($generated@@381 T@U) ($generated@@382 T@U) ) (! (let (($generated@@383 (type $generated@@382)))
(let (($generated@@384 ($generated@@290 (type $generated@@381))))
 (=> (= (type $generated@@381) ($generated@@289 $generated@@384 $generated@@383)) (= ($generated@@0 ($generated@@83 ($generated@@334 $generated@@381) $generated@@382)) (exists (($generated@@385 T@U) ) (!  (and (= (type $generated@@385) $generated@@384) (and ($generated@@0 ($generated@@83 ($generated@@287 $generated@@381) $generated@@385)) (= $generated@@382 ($generated@@83 ($generated@@366 $generated@@381) $generated@@385))))
 :pattern ( ($generated@@83 ($generated@@287 $generated@@381) $generated@@385))
 :pattern ( ($generated@@83 ($generated@@366 $generated@@381) $generated@@385))
))))))
 :pattern ( ($generated@@83 ($generated@@334 $generated@@381) $generated@@382))
)))
(assert (forall (($generated@@386 T@U) ($generated@@387 T@U) ) (! (let (($generated@@388 (type $generated@@387)))
(let (($generated@@389 ($generated@@308 (type $generated@@386))))
 (=> (= (type $generated@@386) ($generated@@307 $generated@@389 $generated@@388)) (= ($generated@@0 ($generated@@83 ($generated@@345 $generated@@386) $generated@@387)) (exists (($generated@@390 T@U) ) (!  (and (= (type $generated@@390) $generated@@389) (and ($generated@@0 ($generated@@83 ($generated@@305 $generated@@386) $generated@@390)) (= $generated@@387 ($generated@@83 ($generated@@374 $generated@@386) $generated@@390))))
 :pattern ( ($generated@@83 ($generated@@305 $generated@@386) $generated@@390))
 :pattern ( ($generated@@83 ($generated@@374 $generated@@386) $generated@@390))
))))))
 :pattern ( ($generated@@83 ($generated@@345 $generated@@386) $generated@@387))
)))
(assert (forall (($generated@@392 T@U) ($generated@@393 T@U) ) (! (= (type ($generated@@391 $generated@@392 $generated@@393)) $generated@@66)
 :pattern ( ($generated@@391 $generated@@392 $generated@@393))
)))
(assert (forall (($generated@@394 T@U) ($generated@@395 T@U) ($generated@@396 T@U) ($generated@@397 T@U) ) (!  (=> (and (and (and (= (type $generated@@394) ($generated@@289 $generated@@154 $generated@@154)) (= (type $generated@@395) $generated@@66)) (= (type $generated@@396) $generated@@66)) (= (type $generated@@397) ($generated@@78 $generated@@79 $generated@@80))) (= ($generated@@76 $generated@@394 ($generated@@391 $generated@@395 $generated@@396) $generated@@397) (forall (($generated@@398 T@U) ) (!  (=> (and (= (type $generated@@398) $generated@@154) ($generated@@0 ($generated@@83 ($generated@@287 $generated@@394) $generated@@398))) (and ($generated@@247 ($generated@@83 ($generated@@366 $generated@@394) $generated@@398) $generated@@396 $generated@@397) ($generated@@247 $generated@@398 $generated@@395 $generated@@397)))
 :pattern ( ($generated@@83 ($generated@@366 $generated@@394) $generated@@398))
 :pattern ( ($generated@@83 ($generated@@287 $generated@@394) $generated@@398))
))))
 :pattern ( ($generated@@76 $generated@@394 ($generated@@391 $generated@@395 $generated@@396) $generated@@397))
)))
(assert (forall (($generated@@400 T@U) ($generated@@401 T@U) ) (! (= (type ($generated@@399 $generated@@400 $generated@@401)) $generated@@66)
 :pattern ( ($generated@@399 $generated@@400 $generated@@401))
)))
(assert (forall (($generated@@402 T@U) ($generated@@403 T@U) ($generated@@404 T@U) ($generated@@405 T@U) ) (!  (=> (and (and (and (= (type $generated@@402) ($generated@@307 $generated@@154 $generated@@154)) (= (type $generated@@403) $generated@@66)) (= (type $generated@@404) $generated@@66)) (= (type $generated@@405) ($generated@@78 $generated@@79 $generated@@80))) (= ($generated@@76 $generated@@402 ($generated@@399 $generated@@403 $generated@@404) $generated@@405) (forall (($generated@@406 T@U) ) (!  (=> (and (= (type $generated@@406) $generated@@154) ($generated@@0 ($generated@@83 ($generated@@305 $generated@@402) $generated@@406))) (and ($generated@@247 ($generated@@83 ($generated@@374 $generated@@402) $generated@@406) $generated@@404 $generated@@405) ($generated@@247 $generated@@406 $generated@@403 $generated@@405)))
 :pattern ( ($generated@@83 ($generated@@374 $generated@@402) $generated@@406))
 :pattern ( ($generated@@83 ($generated@@305 $generated@@402) $generated@@406))
))))
 :pattern ( ($generated@@76 $generated@@402 ($generated@@399 $generated@@403 $generated@@404) $generated@@405))
)))
(assert (forall (($generated@@407 T@U) ($generated@@408 T@U) ($generated@@409 T@U) ) (!  (=> (and (and (and (and (= (type $generated@@407) ($generated@@78 $generated@@79 $generated@@80)) (= (type $generated@@408) ($generated@@78 $generated@@79 $generated@@80))) (= (type $generated@@409) ($generated@@78 $generated@@79 $generated@@80))) (not (= $generated@@407 $generated@@409))) (and ($generated@@134 $generated@@407 $generated@@408) ($generated@@134 $generated@@408 $generated@@409))) ($generated@@134 $generated@@407 $generated@@409))
 :pattern ( ($generated@@134 $generated@@407 $generated@@408) ($generated@@134 $generated@@408 $generated@@409))
)))
(assert (forall (($generated@@411 T@T) ) (! (= (type ($generated@@410 $generated@@411)) ($generated@@78 $generated@@411 $generated@@4))
 :pattern ( ($generated@@410 $generated@@411))
)))
(assert (forall (($generated@@412 T@U) ) (! (let (($generated@@413 ($generated@@309 (type $generated@@412))))
(let (($generated@@414 ($generated@@308 (type $generated@@412))))
 (=> (= (type $generated@@412) ($generated@@307 $generated@@414 $generated@@413)) (= (= $generated@@412 ($generated@@306 $generated@@414 $generated@@413)) (= ($generated@@305 $generated@@412) ($generated@@410 $generated@@414))))))
 :pattern ( ($generated@@305 $generated@@412))
)))
(assert (forall (($generated@@415 T@U) ) (! (let (($generated@@416 ($generated@@309 (type $generated@@415))))
(let (($generated@@417 ($generated@@308 (type $generated@@415))))
 (=> (= (type $generated@@415) ($generated@@307 $generated@@417 $generated@@416)) (= (= $generated@@415 ($generated@@306 $generated@@417 $generated@@416)) (= ($generated@@345 $generated@@415) ($generated@@410 $generated@@416))))))
 :pattern ( ($generated@@345 $generated@@415))
)))
(assert (forall (($generated@@418 T@U) ) (! (let (($generated@@419 ($generated@@309 (type $generated@@418))))
(let (($generated@@420 ($generated@@308 (type $generated@@418))))
 (=> (= (type $generated@@418) ($generated@@307 $generated@@420 $generated@@419)) (= (= $generated@@418 ($generated@@306 $generated@@420 $generated@@419)) (= ($generated@@373 $generated@@418) ($generated@@410 $generated@@154))))))
 :pattern ( ($generated@@373 $generated@@418))
)))
(assert (forall (($generated@@421 T@U) ) (! (let (($generated@@422 ($generated@@291 (type $generated@@421))))
(let (($generated@@423 ($generated@@290 (type $generated@@421))))
 (=> (= (type $generated@@421) ($generated@@289 $generated@@423 $generated@@422)) (or (= $generated@@421 ($generated@@288 $generated@@423 $generated@@422)) (exists (($generated@@424 T@U) ($generated@@425 T@U) ) (!  (and (and (= (type $generated@@424) $generated@@154) (= (type $generated@@425) $generated@@154)) ($generated@@0 ($generated@@83 ($generated@@365 $generated@@421) ($generated@@268 ($generated@@220 $generated@@424 $generated@@425)))))
 :no-pattern (type $generated@@424)
 :no-pattern (type $generated@@425)
 :no-pattern ($generated $generated@@424)
 :no-pattern ($generated@@0 $generated@@424)
 :no-pattern ($generated $generated@@425)
 :no-pattern ($generated@@0 $generated@@425)
))))))
 :pattern ( ($generated@@365 $generated@@421))
)))
(assert (forall (($generated@@426 T@U) ) (! (let (($generated@@427 ($generated@@309 (type $generated@@426))))
(let (($generated@@428 ($generated@@308 (type $generated@@426))))
 (=> (= (type $generated@@426) ($generated@@307 $generated@@428 $generated@@427)) (or (= $generated@@426 ($generated@@306 $generated@@428 $generated@@427)) (exists (($generated@@429 T@U) ($generated@@430 T@U) ) (!  (and (and (= (type $generated@@429) $generated@@154) (= (type $generated@@430) $generated@@154)) ($generated@@0 ($generated@@83 ($generated@@373 $generated@@426) ($generated@@268 ($generated@@220 $generated@@429 $generated@@430)))))
 :no-pattern (type $generated@@429)
 :no-pattern (type $generated@@430)
 :no-pattern ($generated $generated@@429)
 :no-pattern ($generated@@0 $generated@@429)
 :no-pattern ($generated $generated@@430)
 :no-pattern ($generated@@0 $generated@@430)
))))))
 :pattern ( ($generated@@373 $generated@@426))
)))
(assert (forall (($generated@@431 T@U) ) (!  (=> (and (= (type $generated@@431) $generated@@154) ($generated@@221 $generated@@431 $generated@@46)) (and (= ($generated@@268 ($generated@@326 $generated@@2 $generated@@431)) $generated@@431) ($generated@@141 ($generated@@326 $generated@@2 $generated@@431) $generated@@46)))
 :pattern ( ($generated@@221 $generated@@431 $generated@@46))
)))
(assert (forall (($generated@@432 T@U) ) (!  (=> (and (= (type $generated@@432) $generated@@154) ($generated@@221 $generated@@432 $generated@@47)) (and (= ($generated@@268 ($generated@@326 $generated@@3 $generated@@432)) $generated@@432) ($generated@@141 ($generated@@326 $generated@@3 $generated@@432) $generated@@47)))
 :pattern ( ($generated@@221 $generated@@432 $generated@@47))
)))
(assert (forall (($generated@@433 T@U) ) (!  (=> (and (= (type $generated@@433) $generated@@154) ($generated@@221 $generated@@433 $generated@@44)) (and (= ($generated@@268 ($generated@@326 $generated@@4 $generated@@433)) $generated@@433) ($generated@@141 ($generated@@326 $generated@@4 $generated@@433) $generated@@44)))
 :pattern ( ($generated@@221 $generated@@433 $generated@@44))
)))
(assert (= ($generated@@1 $generated@@434) 20))
(assert (forall (($generated@@435 T@U) ) (!  (=> (and (= (type $generated@@435) $generated@@154) ($generated@@221 $generated@@435 $generated@@45)) (and (= ($generated@@268 ($generated@@326 $generated@@434 $generated@@435)) $generated@@435) ($generated@@141 ($generated@@326 $generated@@434 $generated@@435) $generated@@45)))
 :pattern ( ($generated@@221 $generated@@435 $generated@@45))
)))
(assert (forall (($generated@@436 T@U) ($generated@@437 T@U) ) (!  (=> (= (type $generated@@437) $generated@@66) (= ($generated@@221 ($generated@@268 $generated@@436) $generated@@437) ($generated@@141 $generated@@436 $generated@@437)))
 :pattern ( ($generated@@221 ($generated@@268 $generated@@436) $generated@@437))
)))
(assert (forall (($generated@@438 T@U) ) (! (let (($generated@@439 ($generated@@81 (type $generated@@438))))
 (=> (= (type $generated@@438) ($generated@@78 $generated@@439 $generated@@2)) (<= 0 ($generated@@281 $generated@@438))))
 :pattern ( ($generated@@281 $generated@@438))
)))
(assert (forall (($generated@@440 T@U) ) (! (let (($generated@@441 ($generated@@262 (type $generated@@440))))
 (=> (= (type $generated@@440) ($generated@@261 $generated@@441)) (<= 0 ($generated@@260 $generated@@440))))
 :pattern ( ($generated@@260 $generated@@440))
)))
(assert (forall (($generated@@443 T@U) ) (! (= (type ($generated@@442 $generated@@443)) $generated@@66)
 :pattern ( ($generated@@442 $generated@@443))
)))
(assert (forall (($generated@@444 T@U) ($generated@@445 T@U) ) (!  (=> (and (= (type $generated@@444) $generated@@66) (= (type $generated@@445) $generated@@66)) (= ($generated@@442 ($generated@@391 $generated@@444 $generated@@445)) $generated@@444))
 :pattern ( ($generated@@391 $generated@@444 $generated@@445))
)))
(assert (forall (($generated@@447 T@U) ) (! (= (type ($generated@@446 $generated@@447)) $generated@@66)
 :pattern ( ($generated@@446 $generated@@447))
)))
(assert (forall (($generated@@448 T@U) ($generated@@449 T@U) ) (!  (=> (and (= (type $generated@@448) $generated@@66) (= (type $generated@@449) $generated@@66)) (= ($generated@@446 ($generated@@391 $generated@@448 $generated@@449)) $generated@@449))
 :pattern ( ($generated@@391 $generated@@448 $generated@@449))
)))
(assert (forall (($generated@@450 T@U) ($generated@@451 T@U) ) (!  (=> (and (= (type $generated@@450) $generated@@66) (= (type $generated@@451) $generated@@66)) (= ($generated@@74 ($generated@@391 $generated@@450 $generated@@451)) $generated@@58))
 :pattern ( ($generated@@391 $generated@@450 $generated@@451))
)))
(assert (forall (($generated@@453 T@U) ) (! (= (type ($generated@@452 $generated@@453)) $generated@@66)
 :pattern ( ($generated@@452 $generated@@453))
)))
(assert (forall (($generated@@454 T@U) ($generated@@455 T@U) ) (!  (=> (and (= (type $generated@@454) $generated@@66) (= (type $generated@@455) $generated@@66)) (= ($generated@@452 ($generated@@399 $generated@@454 $generated@@455)) $generated@@454))
 :pattern ( ($generated@@399 $generated@@454 $generated@@455))
)))
(assert (forall (($generated@@457 T@U) ) (! (= (type ($generated@@456 $generated@@457)) $generated@@66)
 :pattern ( ($generated@@456 $generated@@457))
)))
(assert (forall (($generated@@458 T@U) ($generated@@459 T@U) ) (!  (=> (and (= (type $generated@@458) $generated@@66) (= (type $generated@@459) $generated@@66)) (= ($generated@@456 ($generated@@399 $generated@@458 $generated@@459)) $generated@@459))
 :pattern ( ($generated@@399 $generated@@458 $generated@@459))
)))
(assert (forall (($generated@@460 T@U) ($generated@@461 T@U) ) (!  (=> (and (= (type $generated@@460) $generated@@66) (= (type $generated@@461) $generated@@66)) (= ($generated@@74 ($generated@@399 $generated@@460 $generated@@461)) $generated@@59))
 :pattern ( ($generated@@399 $generated@@460 $generated@@461))
)))
(assert (forall (($generated@@462 T@U) ($generated@@463 T@U) ) (!  (=> (and (= (type $generated@@462) $generated@@154) (= (type $generated@@463) $generated@@154)) (= ($generated@@253 ($generated@@220 $generated@@462 $generated@@463)) $generated@@62))
 :pattern ( ($generated@@220 $generated@@462 $generated@@463))
)))
(assert (forall (($generated@@465 T@U) ) (! (= (type ($generated@@464 $generated@@465)) $generated@@66)
 :pattern ( ($generated@@464 $generated@@465))
)))
(assert (forall (($generated@@466 T@U) ($generated@@467 T@U) ) (!  (=> (and (= (type $generated@@466) $generated@@66) (= (type $generated@@467) $generated@@66)) (= ($generated@@464 ($generated@@144 $generated@@466 $generated@@467)) $generated@@466))
 :pattern ( ($generated@@144 $generated@@466 $generated@@467))
)))
(assert (forall (($generated@@469 T@U) ) (! (= (type ($generated@@468 $generated@@469)) $generated@@66)
 :pattern ( ($generated@@468 $generated@@469))
)))
(assert (forall (($generated@@470 T@U) ($generated@@471 T@U) ) (!  (=> (and (= (type $generated@@470) $generated@@66) (= (type $generated@@471) $generated@@66)) (= ($generated@@468 ($generated@@144 $generated@@470 $generated@@471)) $generated@@471))
 :pattern ( ($generated@@144 $generated@@470 $generated@@471))
)))
(assert (forall (($generated@@472 T@U) ($generated@@473 T@U) ) (!  (=> (and (= (type $generated@@472) $generated@@154) (= (type $generated@@473) $generated@@154)) (= ($generated@@152 ($generated@@220 $generated@@472 $generated@@473)) $generated@@472))
 :pattern ( ($generated@@220 $generated@@472 $generated@@473))
)))
(assert (forall (($generated@@474 T@U) ($generated@@475 T@U) ) (!  (=> (and (= (type $generated@@474) $generated@@154) (= (type $generated@@475) $generated@@154)) (= ($generated@@153 ($generated@@220 $generated@@474 $generated@@475)) $generated@@475))
 :pattern ( ($generated@@220 $generated@@474 $generated@@475))
)))
(assert  (and (forall (($generated@@478 T@U) ) (! (= (type ($generated@@476 $generated@@478)) $generated@@66)
 :pattern ( ($generated@@476 $generated@@478))
)) (forall (($generated@@479 T@U) ($generated@@480 Int) ) (! (let (($generated@@481 ($generated@@262 (type $generated@@479))))
(= (type ($generated@@477 $generated@@479 $generated@@480)) $generated@@481))
 :pattern ( ($generated@@477 $generated@@479 $generated@@480))
))))
(assert (forall (($generated@@482 T@U) ($generated@@483 T@U) ($generated@@484 T@U) ) (!  (=> (and (and (= (type $generated@@482) ($generated@@261 $generated@@154)) (= (type $generated@@483) $generated@@66)) (= (type $generated@@484) ($generated@@78 $generated@@79 $generated@@80))) (= ($generated@@76 $generated@@482 ($generated@@476 $generated@@483) $generated@@484) (forall (($generated@@485 Int) ) (!  (=> (and (<= 0 $generated@@485) (< $generated@@485 ($generated@@260 $generated@@482))) ($generated@@247 ($generated@@477 $generated@@482 $generated@@485) $generated@@483 $generated@@484))
 :pattern ( ($generated@@477 $generated@@482 $generated@@485))
))))
 :pattern ( ($generated@@76 $generated@@482 ($generated@@476 $generated@@483) $generated@@484))
)))
(assert (forall (($generated@@487 Int) ) (! (= ($generated@@486 ($generated@@77 $generated@@487)) $generated@@487)
 :pattern ( ($generated@@77 $generated@@487))
)))
(assert (forall (($generated@@489 T@U) ) (! (= (type ($generated@@488 $generated@@489)) $generated@@66)
 :pattern ( ($generated@@488 $generated@@489))
)))
(assert (forall (($generated@@490 T@U) ) (!  (=> (= (type $generated@@490) $generated@@66) (= ($generated@@488 ($generated@@230 $generated@@490)) $generated@@490))
 :pattern ( ($generated@@230 $generated@@490))
)))
(assert (forall (($generated@@491 T@U) ) (!  (=> (= (type $generated@@491) $generated@@66) (= ($generated@@74 ($generated@@230 $generated@@491)) $generated@@54))
 :pattern ( ($generated@@230 $generated@@491))
)))
(assert (forall (($generated@@493 T@U) ) (! (= (type ($generated@@492 $generated@@493)) $generated@@66)
 :pattern ( ($generated@@492 $generated@@493))
)))
(assert (forall (($generated@@494 T@U) ) (!  (=> (= (type $generated@@494) $generated@@66) (= ($generated@@492 ($generated@@235 $generated@@494)) $generated@@494))
 :pattern ( ($generated@@235 $generated@@494))
)))
(assert (forall (($generated@@495 T@U) ) (!  (=> (= (type $generated@@495) $generated@@66) (= ($generated@@74 ($generated@@235 $generated@@495)) $generated@@55))
 :pattern ( ($generated@@235 $generated@@495))
)))
(assert (forall (($generated@@497 T@U) ) (! (= (type ($generated@@496 $generated@@497)) $generated@@66)
 :pattern ( ($generated@@496 $generated@@497))
)))
(assert (forall (($generated@@498 T@U) ) (!  (=> (= (type $generated@@498) $generated@@66) (= ($generated@@496 ($generated@@159 $generated@@498)) $generated@@498))
 :pattern ( ($generated@@159 $generated@@498))
)))
(assert (forall (($generated@@499 T@U) ) (!  (=> (= (type $generated@@499) $generated@@66) (= ($generated@@74 ($generated@@159 $generated@@499)) $generated@@56))
 :pattern ( ($generated@@159 $generated@@499))
)))
(assert (forall (($generated@@501 T@U) ) (! (= (type ($generated@@500 $generated@@501)) $generated@@66)
 :pattern ( ($generated@@500 $generated@@501))
)))
(assert (forall (($generated@@502 T@U) ) (!  (=> (= (type $generated@@502) $generated@@66) (= ($generated@@500 ($generated@@476 $generated@@502)) $generated@@502))
 :pattern ( ($generated@@476 $generated@@502))
)))
(assert (forall (($generated@@503 T@U) ) (!  (=> (= (type $generated@@503) $generated@@66) (= ($generated@@74 ($generated@@476 $generated@@503)) $generated@@57))
 :pattern ( ($generated@@476 $generated@@503))
)))
(assert (forall (($generated@@504 T@U) ) (! (let (($generated@@505 (type $generated@@504)))
(= ($generated@@326 $generated@@505 ($generated@@268 $generated@@504)) $generated@@504))
 :pattern ( ($generated@@268 $generated@@504))
)))
(assert (forall (($generated@@506 T@U) ($generated@@507 T@U) ($generated@@508 T@U) ) (!  (=> (and (and (= (type $generated@@506) ($generated@@289 $generated@@154 $generated@@154)) (= (type $generated@@507) $generated@@66)) (= (type $generated@@508) $generated@@66)) (= ($generated@@141 $generated@@506 ($generated@@391 $generated@@507 $generated@@508)) (forall (($generated@@509 T@U) ) (!  (=> (and (= (type $generated@@509) $generated@@154) ($generated@@0 ($generated@@83 ($generated@@287 $generated@@506) $generated@@509))) (and ($generated@@221 ($generated@@83 ($generated@@366 $generated@@506) $generated@@509) $generated@@508) ($generated@@221 $generated@@509 $generated@@507)))
 :pattern ( ($generated@@83 ($generated@@366 $generated@@506) $generated@@509))
 :pattern ( ($generated@@83 ($generated@@287 $generated@@506) $generated@@509))
))))
 :pattern ( ($generated@@141 $generated@@506 ($generated@@391 $generated@@507 $generated@@508)))
)))
(assert (forall (($generated@@510 T@U) ($generated@@511 T@U) ($generated@@512 T@U) ) (!  (=> (and (and (= (type $generated@@510) ($generated@@307 $generated@@154 $generated@@154)) (= (type $generated@@511) $generated@@66)) (= (type $generated@@512) $generated@@66)) (= ($generated@@141 $generated@@510 ($generated@@399 $generated@@511 $generated@@512)) (forall (($generated@@513 T@U) ) (!  (=> (and (= (type $generated@@513) $generated@@154) ($generated@@0 ($generated@@83 ($generated@@305 $generated@@510) $generated@@513))) (and ($generated@@221 ($generated@@83 ($generated@@374 $generated@@510) $generated@@513) $generated@@512) ($generated@@221 $generated@@513 $generated@@511)))
 :pattern ( ($generated@@83 ($generated@@374 $generated@@510) $generated@@513))
 :pattern ( ($generated@@83 ($generated@@305 $generated@@510) $generated@@513))
))))
 :pattern ( ($generated@@141 $generated@@510 ($generated@@399 $generated@@511 $generated@@512)))
)))
(assert (forall (($generated@@516 T@U) ($generated@@517 T@U) ) (!  (=> (and (= (type $generated@@516) $generated@@154) (= (type $generated@@517) $generated@@154)) (< ($generated@@514 $generated@@516) ($generated@@515 ($generated@@220 $generated@@516 $generated@@517))))
 :pattern ( ($generated@@220 $generated@@516 $generated@@517))
)))
(assert (forall (($generated@@518 T@U) ($generated@@519 T@U) ) (!  (=> (and (= (type $generated@@518) $generated@@154) (= (type $generated@@519) $generated@@154)) (< ($generated@@514 $generated@@519) ($generated@@515 ($generated@@220 $generated@@518 $generated@@519))))
 :pattern ( ($generated@@220 $generated@@518 $generated@@519))
)))
(assert (forall (($generated@@520 T@U) ($generated@@521 T@U) ($generated@@522 T@U) ) (!  (=> (and (and (and (= (type $generated@@520) $generated@@154) (= (type $generated@@521) $generated@@66)) (= (type $generated@@522) $generated@@66)) ($generated@@221 $generated@@520 ($generated@@391 $generated@@521 $generated@@522))) (and (= ($generated@@268 ($generated@@326 ($generated@@289 $generated@@154 $generated@@154) $generated@@520)) $generated@@520) ($generated@@141 ($generated@@326 ($generated@@289 $generated@@154 $generated@@154) $generated@@520) ($generated@@391 $generated@@521 $generated@@522))))
 :pattern ( ($generated@@221 $generated@@520 ($generated@@391 $generated@@521 $generated@@522)))
)))
(assert (forall (($generated@@523 T@U) ($generated@@524 T@U) ($generated@@525 T@U) ) (!  (=> (and (and (and (= (type $generated@@523) $generated@@154) (= (type $generated@@524) $generated@@66)) (= (type $generated@@525) $generated@@66)) ($generated@@221 $generated@@523 ($generated@@399 $generated@@524 $generated@@525))) (and (= ($generated@@268 ($generated@@326 ($generated@@307 $generated@@154 $generated@@154) $generated@@523)) $generated@@523) ($generated@@141 ($generated@@326 ($generated@@307 $generated@@154 $generated@@154) $generated@@523) ($generated@@399 $generated@@524 $generated@@525))))
 :pattern ( ($generated@@221 $generated@@523 ($generated@@399 $generated@@524 $generated@@525)))
)))
(assert (forall (($generated@@526 T@U) ($generated@@527 T@U) ($generated@@528 T@U) ) (!  (=> (and (and (and (= (type $generated@@526) $generated@@66) (= (type $generated@@527) $generated@@66)) (= (type $generated@@528) $generated@@154)) ($generated@@221 $generated@@528 ($generated@@144 $generated@@526 $generated@@527))) (and (= ($generated@@268 ($generated@@326 $generated@@145 $generated@@528)) $generated@@528) ($generated@@141 ($generated@@326 $generated@@145 $generated@@528) ($generated@@144 $generated@@526 $generated@@527))))
 :pattern ( ($generated@@221 $generated@@528 ($generated@@144 $generated@@526 $generated@@527)))
)))
(assert (forall (($generated@@529 T@U) ) (! (let (($generated@@530 (type $generated@@529)))
 (not ($generated@@0 ($generated@@83 ($generated@@410 $generated@@530) $generated@@529))))
 :pattern ( (let (($generated@@530 (type $generated@@529)))
($generated@@83 ($generated@@410 $generated@@530) $generated@@529)))
)))
(assert (forall (($generated@@532 Int) ($generated@@533 Int) ) (! (= ($generated@@531 $generated@@532 $generated@@533) (mod $generated@@532 $generated@@533))
 :pattern ( ($generated@@531 $generated@@532 $generated@@533))
)))
(assert (forall (($generated@@535 T@U) ) (! (= (type ($generated@@534 $generated@@535)) $generated@@71)
 :pattern ( ($generated@@534 $generated@@535))
)))
(assert (forall (($generated@@536 T@U) ($generated@@537 T@U) ) (!  (=> (and (= (type $generated@@536) $generated@@66) (= (type $generated@@537) $generated@@66)) (and (= ($generated@@74 ($generated@@144 $generated@@536 $generated@@537)) $generated@@63) (= ($generated@@534 ($generated@@144 $generated@@536 $generated@@537)) $generated@@65)))
 :pattern ( ($generated@@144 $generated@@536 $generated@@537))
)))
(assert (forall (($generated@@538 T@U) ) (!  (=> (= (type $generated@@538) $generated@@145) (= ($generated@@514 ($generated@@268 $generated@@538)) ($generated@@515 $generated@@538)))
 :pattern ( ($generated@@514 ($generated@@268 $generated@@538)))
)))
(assert (forall (($generated@@539 T@U) ) (!  (=> (and (= (type $generated@@539) $generated@@154) ($generated@@221 $generated@@539 ($generated@@77 0))) (and (= ($generated@@268 ($generated@@326 $generated@@2 $generated@@539)) $generated@@539) ($generated@@141 ($generated@@326 ($generated@@78 $generated@@154 $generated@@4) $generated@@539) ($generated@@77 0))))
 :pattern ( ($generated@@221 $generated@@539 ($generated@@77 0)))
)))
(assert (forall (($generated@@540 T@U) ($generated@@541 T@U) ) (!  (=> (and (and (= (type $generated@@540) $generated@@154) (= (type $generated@@541) $generated@@66)) ($generated@@221 $generated@@540 ($generated@@230 $generated@@541))) (and (= ($generated@@268 ($generated@@326 ($generated@@78 $generated@@154 $generated@@4) $generated@@540)) $generated@@540) ($generated@@141 ($generated@@326 ($generated@@78 $generated@@154 $generated@@4) $generated@@540) ($generated@@230 $generated@@541))))
 :pattern ( ($generated@@221 $generated@@540 ($generated@@230 $generated@@541)))
)))
(assert (forall (($generated@@542 T@U) ($generated@@543 T@U) ) (!  (=> (and (and (= (type $generated@@542) $generated@@154) (= (type $generated@@543) $generated@@66)) ($generated@@221 $generated@@542 ($generated@@235 $generated@@543))) (and (= ($generated@@268 ($generated@@326 ($generated@@78 $generated@@154 $generated@@4) $generated@@542)) $generated@@542) ($generated@@141 ($generated@@326 ($generated@@78 $generated@@154 $generated@@4) $generated@@542) ($generated@@235 $generated@@543))))
 :pattern ( ($generated@@221 $generated@@542 ($generated@@235 $generated@@543)))
)))
(assert (forall (($generated@@544 T@U) ($generated@@545 T@U) ) (!  (=> (and (and (= (type $generated@@544) $generated@@154) (= (type $generated@@545) $generated@@66)) ($generated@@221 $generated@@544 ($generated@@159 $generated@@545))) (and (= ($generated@@268 ($generated@@326 ($generated@@78 $generated@@154 $generated@@2) $generated@@544)) $generated@@544) ($generated@@141 ($generated@@326 ($generated@@78 $generated@@154 $generated@@2) $generated@@544) ($generated@@159 $generated@@545))))
 :pattern ( ($generated@@221 $generated@@544 ($generated@@159 $generated@@545)))
)))
(assert (forall (($generated@@546 T@U) ($generated@@547 T@U) ) (!  (=> (and (and (= (type $generated@@546) $generated@@154) (= (type $generated@@547) $generated@@66)) ($generated@@221 $generated@@546 ($generated@@476 $generated@@547))) (and (= ($generated@@268 ($generated@@326 ($generated@@261 $generated@@154) $generated@@546)) $generated@@546) ($generated@@141 ($generated@@326 ($generated@@261 $generated@@154) $generated@@546) ($generated@@476 $generated@@547))))
 :pattern ( ($generated@@221 $generated@@546 ($generated@@476 $generated@@547)))
)))
(assert (= ($generated@@74 $generated@@138) $generated@@61))
(assert (= ($generated@@534 $generated@@138) $generated@@64))
(assert (forall (($generated@@548 T@U) ($generated@@549 T@U) ($generated@@550 T@U) ) (!  (=> (and (and (= (type $generated@@548) ($generated@@78 $generated@@154 $generated@@2)) (= (type $generated@@549) $generated@@66)) (= (type $generated@@550) ($generated@@78 $generated@@79 $generated@@80))) (= ($generated@@76 $generated@@548 ($generated@@159 $generated@@549) $generated@@550) (forall (($generated@@551 T@U) ) (!  (=> (and (= (type $generated@@551) $generated@@154) (< 0 ($generated ($generated@@83 $generated@@548 $generated@@551)))) ($generated@@247 $generated@@551 $generated@@549 $generated@@550))
 :pattern ( ($generated@@83 $generated@@548 $generated@@551))
))))
 :pattern ( ($generated@@76 $generated@@548 ($generated@@159 $generated@@549) $generated@@550))
)))
(assert (forall (($generated@@552 T@U) ($generated@@553 T@U) ($generated@@554 T@U) ) (!  (=> (and (and (and (= (type $generated@@552) $generated@@145) (= (type $generated@@553) $generated@@66)) (= (type $generated@@554) ($generated@@78 $generated@@79 $generated@@80))) (and ($generated@@246 $generated@@554) (and ($generated@@143 $generated@@552) (exists (($generated@@555 T@U) ) (!  (and (= (type $generated@@555) $generated@@66) ($generated@@76 $generated@@552 ($generated@@144 $generated@@553 $generated@@555) $generated@@554))
 :pattern ( ($generated@@76 $generated@@552 ($generated@@144 $generated@@553 $generated@@555) $generated@@554))
))))) ($generated@@247 ($generated@@152 $generated@@552) $generated@@553 $generated@@554))
 :pattern ( ($generated@@247 ($generated@@152 $generated@@552) $generated@@553 $generated@@554))
)))
(assert (forall (($generated@@556 T@U) ($generated@@557 T@U) ($generated@@558 T@U) ) (!  (=> (and (and (and (= (type $generated@@556) $generated@@145) (= (type $generated@@557) $generated@@66)) (= (type $generated@@558) ($generated@@78 $generated@@79 $generated@@80))) (and ($generated@@246 $generated@@558) (and ($generated@@143 $generated@@556) (exists (($generated@@559 T@U) ) (!  (and (= (type $generated@@559) $generated@@66) ($generated@@76 $generated@@556 ($generated@@144 $generated@@559 $generated@@557) $generated@@558))
 :pattern ( ($generated@@76 $generated@@556 ($generated@@144 $generated@@559 $generated@@557) $generated@@558))
))))) ($generated@@247 ($generated@@153 $generated@@556) $generated@@557 $generated@@558))
 :pattern ( ($generated@@247 ($generated@@153 $generated@@556) $generated@@557 $generated@@558))
)))
(assert (forall (($generated@@560 T@U) ($generated@@561 T@U) ) (!  (=> (and (= (type $generated@@560) $generated@@154) (= (type $generated@@561) $generated@@154)) (= ($generated@@220 ($generated@@242 $generated@@560) ($generated@@242 $generated@@561)) ($generated@@242 ($generated@@220 $generated@@560 $generated@@561))))
 :pattern ( ($generated@@220 ($generated@@242 $generated@@560) ($generated@@242 $generated@@561)))
)))
(assert (forall (($generated@@562 Int) ) (! (= ($generated@@268 ($generated@@8 ($generated@@240 $generated@@562))) ($generated@@242 ($generated@@268 ($generated@@8 $generated@@562))))
 :pattern ( ($generated@@268 ($generated@@8 ($generated@@240 $generated@@562))))
)))
(assert (forall (($generated@@563 T@U) ) (! (= ($generated@@268 ($generated@@242 $generated@@563)) ($generated@@242 ($generated@@268 $generated@@563)))
 :pattern ( ($generated@@268 ($generated@@242 $generated@@563)))
)))
(assert (forall (($generated@@564 T@U) ) (! (let (($generated@@565 ($generated@@262 (type $generated@@564))))
 (=> (and (= (type $generated@@564) ($generated@@261 $generated@@565)) (= ($generated@@260 $generated@@564) 0)) (= $generated@@564 ($generated@@259 $generated@@565))))
 :pattern ( ($generated@@260 $generated@@564))
)))
(assert (forall (($generated@@566 T@U) ($generated@@567 T@U) ($generated@@568 T@U) ) (! (let (($generated@@569 (type $generated@@567)))
 (=> (and (and (= (type $generated@@566) ($generated@@78 $generated@@569 $generated@@2)) (= (type $generated@@568) $generated@@2)) (<= 0 ($generated $generated@@568))) (= ($generated@@281 ($generated@@84 $generated@@566 $generated@@567 $generated@@568)) (+ (- ($generated@@281 $generated@@566) ($generated ($generated@@83 $generated@@566 $generated@@567))) ($generated $generated@@568)))))
 :pattern ( ($generated@@281 ($generated@@84 $generated@@566 $generated@@567 $generated@@568)))
)))
(assert (forall (($generated@@570 T@U) ($generated@@571 T@U) ) (!  (=> (and (= (type $generated@@570) ($generated@@78 $generated@@79 $generated@@80)) (= (type $generated@@571) $generated@@2)) ($generated@@76 $generated@@571 $generated@@46 $generated@@570))
 :pattern ( ($generated@@76 $generated@@571 $generated@@46 $generated@@570))
)))
(assert (forall (($generated@@572 T@U) ($generated@@573 T@U) ) (!  (=> (and (= (type $generated@@572) ($generated@@78 $generated@@79 $generated@@80)) (= (type $generated@@573) $generated@@3)) ($generated@@76 $generated@@573 $generated@@47 $generated@@572))
 :pattern ( ($generated@@76 $generated@@573 $generated@@47 $generated@@572))
)))
(assert (forall (($generated@@574 T@U) ($generated@@575 T@U) ) (!  (=> (and (= (type $generated@@574) ($generated@@78 $generated@@79 $generated@@80)) (= (type $generated@@575) $generated@@4)) ($generated@@76 $generated@@575 $generated@@44 $generated@@574))
 :pattern ( ($generated@@76 $generated@@575 $generated@@44 $generated@@574))
)))
(assert (forall (($generated@@576 T@U) ($generated@@577 T@U) ) (!  (=> (and (= (type $generated@@576) ($generated@@78 $generated@@79 $generated@@80)) (= (type $generated@@577) $generated@@434)) ($generated@@76 $generated@@577 $generated@@45 $generated@@576))
 :pattern ( ($generated@@76 $generated@@577 $generated@@45 $generated@@576))
)))
(assert (forall (($generated@@578 T@U) ($generated@@579 T@U) ) (!  (=> (and (= (type $generated@@578) ($generated@@78 $generated@@79 $generated@@80)) (= (type $generated@@579) $generated@@154)) ($generated@@76 $generated@@579 $generated@@48 $generated@@578))
 :pattern ( ($generated@@76 $generated@@579 $generated@@48 $generated@@578))
)))
(assert (forall (($generated@@580 T@U) ($generated@@581 T@U) ) (!  (=> (and (= (type $generated@@580) ($generated@@261 $generated@@154)) (= (type $generated@@581) $generated@@66)) (= ($generated@@141 $generated@@580 ($generated@@476 $generated@@581)) (forall (($generated@@582 Int) ) (!  (=> (and (<= 0 $generated@@582) (< $generated@@582 ($generated@@260 $generated@@580))) ($generated@@221 ($generated@@477 $generated@@580 $generated@@582) $generated@@581))
 :pattern ( ($generated@@477 $generated@@580 $generated@@582))
))))
 :pattern ( ($generated@@141 $generated@@580 ($generated@@476 $generated@@581)))
)))
(assert (forall (($generated@@584 T@U) ($generated@@585 Int) ) (!  (=> (= (type $generated@@584) ($generated@@261 $generated@@154)) (=> (and (<= 0 $generated@@585) (< $generated@@585 ($generated@@260 $generated@@584))) (< ($generated@@515 ($generated@@326 $generated@@145 ($generated@@477 $generated@@584 $generated@@585))) ($generated@@583 $generated@@584))))
 :pattern ( ($generated@@515 ($generated@@326 $generated@@145 ($generated@@477 $generated@@584 $generated@@585))))
)))
(assert (forall (($generated@@586 T@U) ($generated@@587 T@U) ($generated@@588 T@U) ) (!  (=> (and (and (and (= (type $generated@@586) ($generated@@289 $generated@@154 $generated@@154)) (= (type $generated@@587) $generated@@66)) (= (type $generated@@588) $generated@@66)) ($generated@@141 $generated@@586 ($generated@@391 $generated@@587 $generated@@588))) (and (and ($generated@@141 ($generated@@287 $generated@@586) ($generated@@230 $generated@@587)) ($generated@@141 ($generated@@334 $generated@@586) ($generated@@230 $generated@@588))) ($generated@@141 ($generated@@365 $generated@@586) ($generated@@230 ($generated@@144 $generated@@587 $generated@@588)))))
 :pattern ( ($generated@@141 $generated@@586 ($generated@@391 $generated@@587 $generated@@588)))
)))
(assert (forall (($generated@@589 T@U) ($generated@@590 T@U) ($generated@@591 T@U) ) (!  (=> (and (and (and (= (type $generated@@589) ($generated@@307 $generated@@154 $generated@@154)) (= (type $generated@@590) $generated@@66)) (= (type $generated@@591) $generated@@66)) ($generated@@141 $generated@@589 ($generated@@399 $generated@@590 $generated@@591))) (and (and ($generated@@141 ($generated@@305 $generated@@589) ($generated@@235 $generated@@590)) ($generated@@141 ($generated@@345 $generated@@589) ($generated@@235 $generated@@591))) ($generated@@141 ($generated@@373 $generated@@589) ($generated@@235 ($generated@@144 $generated@@590 $generated@@591)))))
 :pattern ( ($generated@@141 $generated@@589 ($generated@@399 $generated@@590 $generated@@591)))
)))
(assert (forall (($generated@@592 T@U) ) (!  (=> (= (type $generated@@592) $generated@@2) ($generated@@141 $generated@@592 $generated@@46))
 :pattern ( ($generated@@141 $generated@@592 $generated@@46))
)))
(assert (forall (($generated@@593 T@U) ) (!  (=> (= (type $generated@@593) $generated@@3) ($generated@@141 $generated@@593 $generated@@47))
 :pattern ( ($generated@@141 $generated@@593 $generated@@47))
)))
(assert (forall (($generated@@594 T@U) ) (!  (=> (= (type $generated@@594) $generated@@4) ($generated@@141 $generated@@594 $generated@@44))
 :pattern ( ($generated@@141 $generated@@594 $generated@@44))
)))
(assert (forall (($generated@@595 T@U) ) (!  (=> (= (type $generated@@595) $generated@@434) ($generated@@141 $generated@@595 $generated@@45))
 :pattern ( ($generated@@141 $generated@@595 $generated@@45))
)))
(assert (forall (($generated@@596 T@U) ) (!  (=> (= (type $generated@@596) $generated@@154) ($generated@@141 $generated@@596 $generated@@48))
 :pattern ( ($generated@@141 $generated@@596 $generated@@48))
)))
(push 1)
(declare-fun ControlFlow (Int Int) Int)
(declare-fun $generated@@597 () Int)
(declare-fun $generated@@598 () T@U)
(declare-fun $generated@@599 () T@U)
(declare-fun $generated@@600 () T@U)
(declare-fun $generated@@601 () Int)
(declare-fun $generated@@602 () Int)
(declare-fun $generated@@603 () T@U)
(declare-fun $generated@@604 () T@U)
(declare-fun $generated@@605 (T@U) Bool)
(declare-fun $generated@@606 () T@U)
(declare-fun $generated@@607 () Int)
(assert  (and (and (and (and (and (= (type $generated@@598) $generated@@154) (= (type $generated@@599) $generated@@66)) (= (type $generated@@600) ($generated@@78 $generated@@79 $generated@@80))) (= (type $generated@@603) ($generated@@166 $generated@@79 $generated@@4))) (= (type $generated@@604) $generated@@79)) (= (type $generated@@606) $generated@@154)))
(set-option :timeout 0)
(set-option :rlimit 0)
(assert (not
 (=> (= (ControlFlow 0 0) 13) (let (($generated@@608  (=> (not (= ($generated@@531 $generated@@597 ($generated@@240 2)) ($generated@@240 0))) (=> (and ($generated@@221 $generated@@598 $generated@@599) ($generated@@247 $generated@@598 $generated@@599 $generated@@600)) (and (=> (= (ControlFlow 0 7) (- 0 9)) ($generated@@141 ($generated@@8 (- $generated@@597 1)) $generated@@138)) (=> ($generated@@141 ($generated@@8 (- $generated@@597 1)) $generated@@138) (=> (= $generated@@601 (- $generated@@597 1)) (and (=> (= (ControlFlow 0 7) (- 0 8)) (or (<= 0 $generated@@597) (= $generated@@601 $generated@@597))) (=> (or (<= 0 $generated@@597) (= $generated@@601 $generated@@597)) (=> (= (ControlFlow 0 7) (- 0 6)) (< $generated@@601 $generated@@597)))))))))))
(let (($generated@@609  (=> (= ($generated@@531 $generated@@597 ($generated@@240 2)) ($generated@@240 0)) (and (=> (= (ControlFlow 0 3) (- 0 5)) ($generated@@141 ($generated@@8 (- $generated@@597 1)) $generated@@138)) (=> ($generated@@141 ($generated@@8 (- $generated@@597 1)) $generated@@138) (=> (= $generated@@602 (- $generated@@597 1)) (and (=> (= (ControlFlow 0 3) (- 0 4)) (or (<= 0 $generated@@597) (= $generated@@602 $generated@@597))) (=> (or (<= 0 $generated@@597) (= $generated@@602 $generated@@597)) (=> (= (ControlFlow 0 3) (- 0 2)) (< $generated@@602 $generated@@597))))))))))
(let (($generated@@610  (=> (not (= $generated@@597 ($generated@@240 0))) (and (=> (= (ControlFlow 0 10) (- 0 11)) (not (= ($generated@@240 2) 0))) (=> (not (= ($generated@@240 2) 0)) (and (=> (= (ControlFlow 0 10) 3) $generated@@609) (=> (= (ControlFlow 0 10) 7) $generated@@608)))))))
(let (($generated@@611 true))
(let (($generated@@612  (=> (= $generated@@603 ($generated@@165 $generated@@604 $generated@@600 $generated@@60 false)) (and (=> (= (ControlFlow 0 12) 1) $generated@@611) (=> (= (ControlFlow 0 12) 10) $generated@@610)))))
(let (($generated@@613  (=> (and (and ($generated@@246 $generated@@600) ($generated@@605 $generated@@600)) (<= ($generated@@240 0) $generated@@597)) (=> (and (and (and ($generated@@221 $generated@@606 $generated@@599) ($generated@@247 $generated@@606 $generated@@599 $generated@@600)) true) (and (= 1 $generated@@607) (= (ControlFlow 0 13) 12))) $generated@@612))))
$generated@@613)))))))
))
(check-sat)
(pop 1)
; Valid
(get-info :rlimit)
(reset)
(set-option :rlimit 0)
; did a full reset
(reset)
(set-option :print-success false)
(set-info :smt-lib-version 2.6)
(set-option :auto_config false)
(set-option :type_check true)
(set-option :smt.case_split 3)
(set-option :smt.qi.eager_threshold 100)
(set-option :smt.delay_units true)
(set-option :smt.arith.solver 2)
(set-option :smt.mbqi false)
(set-option :model.compact false)
(set-option :model.v2 true)
(set-option :pp.bv_literals false)
; done setting options


(set-info :category "industrial")
(declare-sort |T@U| 0)
(declare-sort |T@T| 0)
(declare-fun real_pow (Real Real) Real)
(declare-fun UOrdering2 (|T@U| |T@U|) Bool)
(declare-fun UOrdering3 (|T@T| |T@U| |T@U|) Bool)
(declare-fun tickleBool (Bool) Bool)
(assert (and (tickleBool true) (tickleBool false)))
(declare-fun $generated (T@U) Int)
(declare-fun $generated@@0 (T@U) Bool)
(declare-fun $generated@@1 (T@T) Int)
(declare-fun $generated@@2 () T@T)
(declare-fun $generated@@3 () T@T)
(declare-fun $generated@@4 () T@T)
(declare-fun $generated@@5 () T@T)
(declare-fun $generated@@6 () T@T)
(declare-fun $generated@@7 () T@T)
(declare-fun $generated@@8 (Int) T@U)
(declare-fun type (T@U) T@T)
(declare-fun $generated@@9 (Real) T@U)
(declare-fun $generated@@10 (T@U) Real)
(declare-fun $generated@@11 (Bool) T@U)
(declare-fun $generated@@12 (RoundingMode) T@U)
(declare-fun $generated@@13 (T@U) RoundingMode)
(declare-fun $generated@@14 (String) T@U)
(declare-fun $generated@@15 (T@U) String)
(declare-fun $generated@@16 ((RegEx String)) T@U)
(declare-fun $generated@@17 (T@U) (RegEx String))
(declare-fun $generated@@44 () T@U)
(declare-fun $generated@@45 () T@U)
(declare-fun $generated@@46 () T@U)
(declare-fun $generated@@47 () T@U)
(declare-fun $generated@@48 () T@U)
(declare-fun $generated@@49 () T@U)
(declare-fun $generated@@50 () T@U)
(declare-fun $generated@@51 () T@U)
(declare-fun $generated@@52 () T@U)
(declare-fun $generated@@53 () T@U)
(declare-fun $generated@@54 () T@U)
(declare-fun $generated@@55 () T@U)
(declare-fun $generated@@56 () T@U)
(declare-fun $generated@@57 () T@U)
(declare-fun $generated@@58 () T@U)
(declare-fun $generated@@59 () T@U)
(declare-fun $generated@@60 () T@U)
(declare-fun $generated@@61 () T@U)
(declare-fun $generated@@62 () T@U)
(declare-fun $generated@@63 () T@U)
(declare-fun $generated@@64 () T@T)
(declare-fun $generated@@65 () T@T)
(declare-fun $generated@@66 (T@T) T@T)
(declare-fun $generated@@67 (T@T) T@T)
(declare-fun $generated@@68 () T@T)
(declare-fun $generated@@69 () T@T)
(declare-fun $generated@@72 (T@U) T@U)
(declare-fun $generated@@74 (T@U T@U T@U) Bool)
(declare-fun $generated@@75 (Int) T@U)
(declare-fun $generated@@76 (T@T T@T) T@T)
(declare-fun $generated@@77 () T@T)
(declare-fun $generated@@78 () T@T)
(declare-fun $generated@@79 (T@T) T@T)
(declare-fun $generated@@80 (T@T) T@T)
(declare-fun $generated@@81 (T@U T@U) T@U)
(declare-fun $generated@@82 (T@U T@U T@U) T@U)
(declare-fun $generated@@83 (T@U T@U) T@U)
(declare-fun $generated@@84 (T@U T@U T@U) T@U)
(declare-fun $generated@@132 () Int)
(declare-fun $generated@@133 (Int Int) Int)
(declare-fun $generated@@134 (Int) Int)
(declare-fun $generated@@135 (Int Int) Bool)
(declare-fun $generated@@138 (T@U T@U) Bool)
(declare-fun $generated@@140 (T@U) Bool)
(declare-fun $generated@@141 (T@U T@U) T@U)
(declare-fun $generated@@142 () T@T)
(declare-fun $generated@@148 (T@U T@U) Bool)
(declare-fun $generated@@149 (T@U) T@U)
(declare-fun $generated@@150 (T@U) T@U)
(declare-fun $generated@@151 () T@T)
(declare-fun $generated@@156 (T@U) T@U)
(declare-fun $generated@@157 (T@U) Bool)
(declare-fun $generated@@161 (T@U T@U T@U) T@U)
(declare-fun $generated@@162 (T@U T@U T@U Bool) T@U)
(declare-fun $generated@@163 (T@T T@T) T@T)
(declare-fun $generated@@164 (T@T) T@T)
(declare-fun $generated@@165 (T@T) T@T)
(declare-fun $generated@@166 (T@U T@U T@U T@U) T@U)
(declare-fun $generated@@217 (T@U T@U) T@U)
(declare-fun $generated@@218 (T@U T@U) Bool)
(declare-fun $generated@@227 (T@U) T@U)
(declare-fun $generated@@232 (T@U) T@U)
(declare-fun $generated@@238 (T@U) T@U)
(declare-fun $generated@@242 (T@U) Bool)
(declare-fun $generated@@243 (T@U T@U T@U) Bool)
(declare-fun $generated@@249 (T@U) T@U)
(declare-fun $generated@@255 (T@T) T@U)
(declare-fun $generated@@256 (T@U) Int)
(declare-fun $generated@@257 (T@T) T@T)
(declare-fun $generated@@258 (T@T) T@T)
(declare-fun $generated@@265 (T@U) T@U)
(declare-fun $generated@@270 (T@U) Int)
(declare-fun $generated@@271 (T@T) T@U)
(declare-fun $generated@@276 (T@U) T@U)
(declare-fun $generated@@277 (T@T T@T) T@U)
(declare-fun $generated@@278 (T@T T@T) T@T)
(declare-fun $generated@@279 (T@T) T@T)
(declare-fun $generated@@280 (T@T) T@T)
(declare-fun $generated@@294 (T@U) T@U)
(declare-fun $generated@@295 (T@T T@T) T@U)
(declare-fun $generated@@296 (T@T T@T) T@T)
(declare-fun $generated@@297 (T@T) T@T)
(declare-fun $generated@@298 (T@T) T@T)
(declare-fun $generated@@319 (T@U) T@U)
(declare-fun $generated@@330 (T@U) T@U)
(declare-fun $generated@@340 () Bool)
(declare-fun $generated@@341 () Int)
(declare-fun $generated@@352 (T@U) T@U)
(declare-fun $generated@@353 (T@T T@U) T@U)
(declare-fun $generated@@354 (T@U) T@U)
(declare-fun $generated@@363 (T@U) T@U)
(declare-fun $generated@@364 (T@U) T@U)
(declare-fun $generated@@381 (T@U T@U) T@U)
(declare-fun $generated@@389 (T@U T@U) T@U)
(declare-fun $generated@@399 (T@T) T@U)
(declare-fun $generated@@423 () T@T)
(declare-fun $generated@@431 (T@U) T@U)
(declare-fun $generated@@435 (T@U) T@U)
(declare-fun $generated@@441 (T@U) T@U)
(declare-fun $generated@@445 (T@U) T@U)
(declare-fun $generated@@453 (T@U) T@U)
(declare-fun $generated@@457 (T@U) T@U)
(declare-fun $generated@@465 (T@U) T@U)
(declare-fun $generated@@466 (T@U Int) T@U)
(declare-fun $generated@@475 (T@U) Int)
(declare-fun $generated@@477 (T@U) T@U)
(declare-fun $generated@@481 (T@U) T@U)
(declare-fun $generated@@485 (T@U) T@U)
(declare-fun $generated@@489 (T@U) T@U)
(declare-fun $generated@@503 (T@U) Int)
(declare-fun $generated@@504 (T@U) Int)
(declare-fun $generated@@520 (T@U) T@U)
(declare-fun $generated@@569 (T@U) Int)
(assert  (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (= ($generated@@1 $generated@@2) 0) (= ($generated@@1 $generated@@3) 1)) (= ($generated@@1 $generated@@4) 2)) (= ($generated@@1 $generated@@5) 3)) (= ($generated@@1 $generated@@6) 4)) (= ($generated@@1 $generated@@7) 5)) (forall (($generated@@18 Int) ) (! (= ($generated ($generated@@8 $generated@@18)) $generated@@18)
 :pattern ( ($generated@@8 $generated@@18))
))) (forall (($generated@@19 T@U) ) (!  (=> (= (type $generated@@19) $generated@@2) (= ($generated@@8 ($generated $generated@@19)) $generated@@19))
 :pattern ( ($generated $generated@@19))
))) (forall (($generated@@20 Int) ) (! (= (type ($generated@@8 $generated@@20)) $generated@@2)
 :pattern ( ($generated@@8 $generated@@20))
))) (forall (($generated@@21 Real) ) (! (= ($generated@@10 ($generated@@9 $generated@@21)) $generated@@21)
 :pattern ( ($generated@@9 $generated@@21))
))) (forall (($generated@@22 T@U) ) (!  (=> (= (type $generated@@22) $generated@@3) (= ($generated@@9 ($generated@@10 $generated@@22)) $generated@@22))
 :pattern ( ($generated@@10 $generated@@22))
))) (forall (($generated@@23 Real) ) (! (= (type ($generated@@9 $generated@@23)) $generated@@3)
 :pattern ( ($generated@@9 $generated@@23))
))) (forall (($generated@@24 Bool) ) (! (= ($generated@@0 ($generated@@11 $generated@@24)) $generated@@24)
 :pattern ( ($generated@@11 $generated@@24))
))) (forall (($generated@@25 T@U) ) (!  (=> (= (type $generated@@25) $generated@@4) (= ($generated@@11 ($generated@@0 $generated@@25)) $generated@@25))
 :pattern ( ($generated@@0 $generated@@25))
))) (forall (($generated@@26 Bool) ) (! (= (type ($generated@@11 $generated@@26)) $generated@@4)
 :pattern ( ($generated@@11 $generated@@26))
))) (forall (($generated@@27 RoundingMode) ) (! (= ($generated@@13 ($generated@@12 $generated@@27)) $generated@@27)
 :pattern ( ($generated@@12 $generated@@27))
))) (forall (($generated@@28 T@U) ) (!  (=> (= (type $generated@@28) $generated@@5) (= ($generated@@12 ($generated@@13 $generated@@28)) $generated@@28))
 :pattern ( ($generated@@13 $generated@@28))
))) (forall (($generated@@29 RoundingMode) ) (! (= (type ($generated@@12 $generated@@29)) $generated@@5)
 :pattern ( ($generated@@12 $generated@@29))
))) (forall (($generated@@30 String) ) (! (= ($generated@@15 ($generated@@14 $generated@@30)) $generated@@30)
 :pattern ( ($generated@@14 $generated@@30))
))) (forall (($generated@@31 T@U) ) (!  (=> (= (type $generated@@31) $generated@@6) (= ($generated@@14 ($generated@@15 $generated@@31)) $generated@@31))
 :pattern ( ($generated@@15 $generated@@31))
))) (forall (($generated@@32 String) ) (! (= (type ($generated@@14 $generated@@32)) $generated@@6)
 :pattern ( ($generated@@14 $generated@@32))
))) (forall (($generated@@33 (RegEx String)) ) (! (= ($generated@@17 ($generated@@16 $generated@@33)) $generated@@33)
 :pattern ( ($generated@@16 $generated@@33))
))) (forall (($generated@@34 T@U) ) (!  (=> (= (type $generated@@34) $generated@@7) (= ($generated@@16 ($generated@@17 $generated@@34)) $generated@@34))
 :pattern ( ($generated@@17 $generated@@34))
))) (forall (($generated@@35 (RegEx String)) ) (! (= (type ($generated@@16 $generated@@35)) $generated@@7)
 :pattern ( ($generated@@16 $generated@@35))
))))
(assert (forall (($generated@@36 T@U) ) (! (UOrdering2 $generated@@36 $generated@@36)
 :no-pattern ($generated $generated@@36)
 :no-pattern ($generated@@0 $generated@@36)
)))
(assert (forall (($generated@@37 T@U) ($generated@@38 T@U) ($generated@@39 T@U) ) (! (let (($generated@@40 (type $generated@@37)))
 (=> (and (and (= (type $generated@@38) $generated@@40) (= (type $generated@@39) $generated@@40)) (and (UOrdering2 $generated@@37 $generated@@38) (UOrdering2 $generated@@38 $generated@@39))) (UOrdering2 $generated@@37 $generated@@39)))
 :pattern ( (UOrdering2 $generated@@37 $generated@@38) (UOrdering2 $generated@@38 $generated@@39))
)))
(assert (forall (($generated@@41 T@U) ($generated@@42 T@U) ) (! (let (($generated@@43 (type $generated@@41)))
 (=> (= (type $generated@@42) $generated@@43) (=> (and (UOrdering2 $generated@@41 $generated@@42) (UOrdering2 $generated@@42 $generated@@41)) (= $generated@@41 $generated@@42))))
 :pattern ( (UOrdering2 $generated@@41 $generated@@42) (UOrdering2 $generated@@42 $generated@@41))
)))
(assert  (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (= ($generated@@1 $generated@@64) 6) (= (type $generated@@44) $generated@@64)) (= (type $generated@@45) $generated@@64)) (= (type $generated@@46) $generated@@64)) (= (type $generated@@47) $generated@@64)) (= (type $generated@@48) $generated@@64)) (= ($generated@@1 $generated@@65) 7)) (= (type $generated@@49) $generated@@65)) (= (type $generated@@50) $generated@@65)) (= (type $generated@@51) $generated@@65)) (= (type $generated@@52) $generated@@65)) (= (type $generated@@53) $generated@@65)) (= (type $generated@@54) $generated@@65)) (= (type $generated@@55) $generated@@65)) (= (type $generated@@56) $generated@@65)) (= (type $generated@@57) $generated@@65)) (= (type $generated@@58) $generated@@65)) (= (type $generated@@59) $generated@@65)) (forall (($generated@@70 T@T) ) (= ($generated@@1 ($generated@@66 $generated@@70)) 8))) (forall (($generated@@71 T@T) ) (! (= ($generated@@67 ($generated@@66 $generated@@71)) $generated@@71)
 :pattern ( ($generated@@66 $generated@@71))
))) (= (type $generated@@60) ($generated@@66 $generated@@4))) (= ($generated@@1 $generated@@68) 9)) (= (type $generated@@61) $generated@@68)) (= (type $generated@@62) $generated@@65)) (= ($generated@@1 $generated@@69) 10)) (= (type $generated@@63) $generated@@69)))
(assert (distinct $generated@@44 $generated@@45 $generated@@46 $generated@@47 $generated@@48 $generated@@49 $generated@@50 $generated@@51 $generated@@52 $generated@@53 $generated@@54 $generated@@55 $generated@@56 $generated@@57 $generated@@58 $generated@@59 $generated@@60 $generated@@61 $generated@@62 $generated@@63)
)
(assert (forall (($generated@@73 T@U) ) (! (= (type ($generated@@72 $generated@@73)) $generated@@65)
 :pattern ( ($generated@@72 $generated@@73))
)))
(assert (= ($generated@@72 $generated@@44) $generated@@49))
(assert (= ($generated@@72 $generated@@45) $generated@@50))
(assert (= ($generated@@72 $generated@@46) $generated@@51))
(assert (= ($generated@@72 $generated@@47) $generated@@52))
(assert (= ($generated@@72 $generated@@48) $generated@@53))
(assert  (and (and (and (and (and (and (and (and (and (and (and (and (and (forall (($generated@@85 T@T) ($generated@@86 T@T) ) (= ($generated@@1 ($generated@@76 $generated@@85 $generated@@86)) 11)) (forall (($generated@@87 T@T) ($generated@@88 T@T) ) (! (= ($generated@@79 ($generated@@76 $generated@@87 $generated@@88)) $generated@@87)
 :pattern ( ($generated@@76 $generated@@87 $generated@@88))
))) (forall (($generated@@89 T@T) ($generated@@90 T@T) ) (! (= ($generated@@80 ($generated@@76 $generated@@89 $generated@@90)) $generated@@90)
 :pattern ( ($generated@@76 $generated@@89 $generated@@90))
))) (forall (($generated@@91 T@U) ($generated@@92 T@U) ) (! (let (($generated@@93 ($generated@@80 (type $generated@@91))))
(= (type ($generated@@81 $generated@@91 $generated@@92)) $generated@@93))
 :pattern ( ($generated@@81 $generated@@91 $generated@@92))
))) (forall (($generated@@94 T@U) ($generated@@95 T@U) ($generated@@96 T@U) ) (! (let (($generated@@97 (type $generated@@96)))
(let (($generated@@98 (type $generated@@95)))
(= (type ($generated@@82 $generated@@94 $generated@@95 $generated@@96)) ($generated@@76 $generated@@98 $generated@@97))))
 :pattern ( ($generated@@82 $generated@@94 $generated@@95 $generated@@96))
))) (forall (($generated@@99 T@U) ($generated@@100 T@U) ($generated@@101 T@U) ) (! (let (($generated@@102 ($generated@@80 (type $generated@@99))))
 (=> (= (type $generated@@101) $generated@@102) (= ($generated@@81 ($generated@@82 $generated@@99 $generated@@100 $generated@@101) $generated@@100) $generated@@101)))
 :weight 0
))) (and (forall (($generated@@103 T@U) ($generated@@104 T@U) ($generated@@105 T@U) ($generated@@106 T@U) ) (!  (or (= $generated@@105 $generated@@106) (= ($generated@@81 ($generated@@82 $generated@@104 $generated@@105 $generated@@103) $generated@@106) ($generated@@81 $generated@@104 $generated@@106)))
 :weight 0
)) (forall (($generated@@107 T@U) ($generated@@108 T@U) ($generated@@109 T@U) ($generated@@110 T@U) ) (!  (or true (= ($generated@@81 ($generated@@82 $generated@@108 $generated@@109 $generated@@107) $generated@@110) ($generated@@81 $generated@@108 $generated@@110)))
 :weight 0
)))) (= ($generated@@1 $generated@@77) 12)) (forall (($generated@@111 T@U) ($generated@@112 T@U) ) (! (let (($generated@@113 ($generated@@67 (type $generated@@112))))
(= (type ($generated@@83 $generated@@111 $generated@@112)) $generated@@113))
 :pattern ( ($generated@@83 $generated@@111 $generated@@112))
))) (= ($generated@@1 $generated@@78) 13)) (forall (($generated@@114 T@U) ($generated@@115 T@U) ($generated@@116 T@U) ) (! (= (type ($generated@@84 $generated@@114 $generated@@115 $generated@@116)) $generated@@78)
 :pattern ( ($generated@@84 $generated@@114 $generated@@115 $generated@@116))
))) (forall (($generated@@117 T@U) ($generated@@118 T@U) ($generated@@119 T@U) ) (! (let (($generated@@120 ($generated@@67 (type $generated@@118))))
 (=> (= (type $generated@@119) $generated@@120) (= ($generated@@83 ($generated@@84 $generated@@117 $generated@@118 $generated@@119) $generated@@118) $generated@@119)))
 :weight 0
))) (and (forall (($generated@@121 T@U) ($generated@@122 T@U) ($generated@@123 T@U) ($generated@@124 T@U) ) (!  (or (= $generated@@123 $generated@@124) (= ($generated@@83 ($generated@@84 $generated@@122 $generated@@123 $generated@@121) $generated@@124) ($generated@@83 $generated@@122 $generated@@124)))
 :weight 0
)) (forall (($generated@@125 T@U) ($generated@@126 T@U) ($generated@@127 T@U) ($generated@@128 T@U) ) (!  (or true (= ($generated@@83 ($generated@@84 $generated@@126 $generated@@127 $generated@@125) $generated@@128) ($generated@@83 $generated@@126 $generated@@128)))
 :weight 0
)))) (forall (($generated@@129 Int) ) (! (= (type ($generated@@75 $generated@@129)) $generated@@64)
 :pattern ( ($generated@@75 $generated@@129))
))))
(assert (forall (($generated@@130 T@U) ($generated@@131 T@U) ) (!  (=> (and (= (type $generated@@130) $generated@@2) (= (type $generated@@131) ($generated@@76 $generated@@77 $generated@@78))) ($generated@@74 $generated@@130 ($generated@@75 0) $generated@@131))
 :pattern ( ($generated@@74 $generated@@130 ($generated@@75 0) $generated@@131))
)))
(assert  (=> (<= 0 $generated@@132) (forall (($generated@@136 Int) ($generated@@137 Int) ) (!  (=> (or ($generated@@135 ($generated@@134 $generated@@136) ($generated@@134 $generated@@137)) (not (= 0 $generated@@132))) (= ($generated@@133 ($generated@@134 $generated@@136) ($generated@@134 $generated@@137)) ($generated@@134 $generated@@136)))
 :weight 3
 :pattern ( ($generated@@133 ($generated@@134 $generated@@136) ($generated@@134 $generated@@137)))
))))
(assert (forall (($generated@@139 T@U) ) (!  (=> (= (type $generated@@139) $generated@@2) ($generated@@138 $generated@@139 ($generated@@75 0)))
 :pattern ( ($generated@@138 $generated@@139 ($generated@@75 0)))
)))
(assert  (and (= ($generated@@1 $generated@@142) 14) (forall (($generated@@143 T@U) ($generated@@144 T@U) ) (! (= (type ($generated@@141 $generated@@143 $generated@@144)) $generated@@64)
 :pattern ( ($generated@@141 $generated@@143 $generated@@144))
))))
(assert (forall (($generated@@145 T@U) ($generated@@146 T@U) ($generated@@147 T@U) ) (!  (=> (and (and (and (= (type $generated@@145) $generated@@64) (= (type $generated@@146) $generated@@64)) (= (type $generated@@147) $generated@@142)) ($generated@@138 $generated@@147 ($generated@@141 $generated@@145 $generated@@146))) ($generated@@140 $generated@@147))
 :pattern ( ($generated@@140 $generated@@147) ($generated@@138 $generated@@147 ($generated@@141 $generated@@145 $generated@@146)))
)))
(assert  (and (and (= ($generated@@1 $generated@@151) 15) (forall (($generated@@152 T@U) ) (! (= (type ($generated@@149 $generated@@152)) $generated@@151)
 :pattern ( ($generated@@149 $generated@@152))
))) (forall (($generated@@153 T@U) ) (! (= (type ($generated@@150 $generated@@153)) $generated@@151)
 :pattern ( ($generated@@150 $generated@@153))
))))
(assert (forall (($generated@@154 T@U) ($generated@@155 T@U) ) (!  (=> (and (and (= (type $generated@@154) $generated@@142) (= (type $generated@@155) $generated@@142)) true) (= ($generated@@148 $generated@@154 $generated@@155)  (and (= ($generated@@149 $generated@@154) ($generated@@149 $generated@@155)) (= ($generated@@150 $generated@@154) ($generated@@150 $generated@@155)))))
 :pattern ( ($generated@@148 $generated@@154 $generated@@155))
)))
(assert (forall (($generated@@158 T@U) ) (! (= (type ($generated@@156 $generated@@158)) $generated@@64)
 :pattern ( ($generated@@156 $generated@@158))
)))
(assert (forall (($generated@@159 T@U) ($generated@@160 T@U) ) (!  (=> (and (and (= (type $generated@@159) ($generated@@76 $generated@@151 $generated@@2)) (= (type $generated@@160) $generated@@64)) ($generated@@138 $generated@@159 ($generated@@156 $generated@@160))) ($generated@@157 $generated@@159))
 :pattern ( ($generated@@138 $generated@@159 ($generated@@156 $generated@@160)))
)))
(assert  (and (and (and (and (and (and (and (forall (($generated@@167 T@T) ($generated@@168 T@T) ) (= ($generated@@1 ($generated@@163 $generated@@167 $generated@@168)) 16)) (forall (($generated@@169 T@T) ($generated@@170 T@T) ) (! (= ($generated@@164 ($generated@@163 $generated@@169 $generated@@170)) $generated@@169)
 :pattern ( ($generated@@163 $generated@@169 $generated@@170))
))) (forall (($generated@@171 T@T) ($generated@@172 T@T) ) (! (= ($generated@@165 ($generated@@163 $generated@@171 $generated@@172)) $generated@@172)
 :pattern ( ($generated@@163 $generated@@171 $generated@@172))
))) (forall (($generated@@173 T@U) ($generated@@174 T@U) ($generated@@175 T@U) ) (! (let (($generated@@176 ($generated@@165 (type $generated@@173))))
(= (type ($generated@@161 $generated@@173 $generated@@174 $generated@@175)) $generated@@176))
 :pattern ( ($generated@@161 $generated@@173 $generated@@174 $generated@@175))
))) (forall (($generated@@177 T@U) ($generated@@178 T@U) ($generated@@179 T@U) ($generated@@180 T@U) ) (! (let (($generated@@181 (type $generated@@180)))
(let (($generated@@182 (type $generated@@178)))
(= (type ($generated@@166 $generated@@177 $generated@@178 $generated@@179 $generated@@180)) ($generated@@163 $generated@@182 $generated@@181))))
 :pattern ( ($generated@@166 $generated@@177 $generated@@178 $generated@@179 $generated@@180))
))) (forall (($generated@@183 T@U) ($generated@@184 T@U) ($generated@@185 T@U) ($generated@@186 T@U) ) (! (let (($generated@@187 ($generated@@165 (type $generated@@183))))
 (=> (= (type $generated@@186) $generated@@187) (= ($generated@@161 ($generated@@166 $generated@@183 $generated@@184 $generated@@185 $generated@@186) $generated@@184 $generated@@185) $generated@@186)))
 :weight 0
))) (and (and (forall (($generated@@188 T@U) ($generated@@189 T@U) ($generated@@190 T@U) ($generated@@191 T@U) ($generated@@192 T@U) ($generated@@193 T@U) ) (!  (or (= $generated@@190 $generated@@192) (= ($generated@@161 ($generated@@166 $generated@@189 $generated@@190 $generated@@191 $generated@@188) $generated@@192 $generated@@193) ($generated@@161 $generated@@189 $generated@@192 $generated@@193)))
 :weight 0
)) (forall (($generated@@194 T@U) ($generated@@195 T@U) ($generated@@196 T@U) ($generated@@197 T@U) ($generated@@198 T@U) ($generated@@199 T@U) ) (!  (or (= $generated@@197 $generated@@199) (= ($generated@@161 ($generated@@166 $generated@@195 $generated@@196 $generated@@197 $generated@@194) $generated@@198 $generated@@199) ($generated@@161 $generated@@195 $generated@@198 $generated@@199)))
 :weight 0
))) (forall (($generated@@200 T@U) ($generated@@201 T@U) ($generated@@202 T@U) ($generated@@203 T@U) ($generated@@204 T@U) ($generated@@205 T@U) ) (!  (or true (= ($generated@@161 ($generated@@166 $generated@@201 $generated@@202 $generated@@203 $generated@@200) $generated@@204 $generated@@205) ($generated@@161 $generated@@201 $generated@@204 $generated@@205)))
 :weight 0
)))) (forall (($generated@@206 T@U) ($generated@@207 T@U) ($generated@@208 T@U) ($generated@@209 Bool) ) (! (= (type ($generated@@162 $generated@@206 $generated@@207 $generated@@208 $generated@@209)) ($generated@@163 $generated@@77 $generated@@4))
 :pattern ( ($generated@@162 $generated@@206 $generated@@207 $generated@@208 $generated@@209))
))))
(assert (forall (($generated@@210 T@U) ($generated@@211 T@U) ($generated@@212 T@U) ($generated@@213 Bool) ($generated@@214 T@U) ($generated@@215 T@U) ) (! (let (($generated@@216 ($generated@@67 (type $generated@@215))))
 (=> (and (and (and (and (= (type $generated@@210) $generated@@77) (= (type $generated@@211) ($generated@@76 $generated@@77 $generated@@78))) (= (type $generated@@212) ($generated@@66 $generated@@4))) (= (type $generated@@214) $generated@@77)) (= (type $generated@@215) ($generated@@66 $generated@@216))) (= ($generated@@0 ($generated@@161 ($generated@@162 $generated@@210 $generated@@211 $generated@@212 $generated@@213) $generated@@214 $generated@@215))  (=> (and (not (= $generated@@214 $generated@@210)) ($generated@@0 ($generated@@83 ($generated@@81 $generated@@211 $generated@@214) $generated@@212))) $generated@@213))))
 :pattern ( ($generated@@161 ($generated@@162 $generated@@210 $generated@@211 $generated@@212 $generated@@213) $generated@@214 $generated@@215))
)))
(assert (forall (($generated@@219 T@U) ($generated@@220 T@U) ) (! (= (type ($generated@@217 $generated@@219 $generated@@220)) $generated@@142)
 :pattern ( ($generated@@217 $generated@@219 $generated@@220))
)))
(assert (forall (($generated@@221 T@U) ($generated@@222 T@U) ($generated@@223 T@U) ($generated@@224 T@U) ) (!  (=> (and (and (and (= (type $generated@@221) $generated@@64) (= (type $generated@@222) $generated@@64)) (= (type $generated@@223) $generated@@151)) (= (type $generated@@224) $generated@@151)) (= ($generated@@138 ($generated@@217 $generated@@223 $generated@@224) ($generated@@141 $generated@@221 $generated@@222))  (and ($generated@@218 $generated@@223 $generated@@221) ($generated@@218 $generated@@224 $generated@@222))))
 :pattern ( ($generated@@138 ($generated@@217 $generated@@223 $generated@@224) ($generated@@141 $generated@@221 $generated@@222)))
)))
(assert (forall (($generated@@225 T@U) ($generated@@226 T@U) ) (!  (=> (and (= (type $generated@@225) $generated@@142) (= (type $generated@@226) $generated@@142)) (= ($generated@@148 $generated@@225 $generated@@226) (= $generated@@225 $generated@@226)))
 :pattern ( ($generated@@148 $generated@@225 $generated@@226))
)))
(assert (forall (($generated@@228 T@U) ) (! (= (type ($generated@@227 $generated@@228)) $generated@@64)
 :pattern ( ($generated@@227 $generated@@228))
)))
(assert (forall (($generated@@229 T@U) ($generated@@230 T@U) ) (!  (=> (and (= (type $generated@@229) ($generated@@76 $generated@@151 $generated@@4)) (= (type $generated@@230) $generated@@64)) (= ($generated@@138 $generated@@229 ($generated@@227 $generated@@230)) (forall (($generated@@231 T@U) ) (!  (=> (and (= (type $generated@@231) $generated@@151) ($generated@@0 ($generated@@81 $generated@@229 $generated@@231))) ($generated@@218 $generated@@231 $generated@@230))
 :pattern ( ($generated@@81 $generated@@229 $generated@@231))
))))
 :pattern ( ($generated@@138 $generated@@229 ($generated@@227 $generated@@230)))
)))
(assert (forall (($generated@@233 T@U) ) (! (= (type ($generated@@232 $generated@@233)) $generated@@64)
 :pattern ( ($generated@@232 $generated@@233))
)))
(assert (forall (($generated@@234 T@U) ($generated@@235 T@U) ) (!  (=> (and (= (type $generated@@234) ($generated@@76 $generated@@151 $generated@@4)) (= (type $generated@@235) $generated@@64)) (= ($generated@@138 $generated@@234 ($generated@@232 $generated@@235)) (forall (($generated@@236 T@U) ) (!  (=> (and (= (type $generated@@236) $generated@@151) ($generated@@0 ($generated@@81 $generated@@234 $generated@@236))) ($generated@@218 $generated@@236 $generated@@235))
 :pattern ( ($generated@@81 $generated@@234 $generated@@236))
))))
 :pattern ( ($generated@@138 $generated@@234 ($generated@@232 $generated@@235)))
)))
(assert (forall (($generated@@237 Int) ) (! (= ($generated@@134 $generated@@237) $generated@@237)
 :pattern ( ($generated@@134 $generated@@237))
)))
(assert (forall (($generated@@239 T@U) ) (! (let (($generated@@240 (type $generated@@239)))
(= (type ($generated@@238 $generated@@239)) $generated@@240))
 :pattern ( ($generated@@238 $generated@@239))
)))
(assert (forall (($generated@@241 T@U) ) (! (= ($generated@@238 $generated@@241) $generated@@241)
 :pattern ( ($generated@@238 $generated@@241))
)))
(assert (forall (($generated@@244 T@U) ($generated@@245 T@U) ($generated@@246 T@U) ($generated@@247 T@U) ($generated@@248 T@U) ) (!  (=> (and (and (and (and (and (= (type $generated@@244) $generated@@64) (= (type $generated@@245) $generated@@64)) (= (type $generated@@246) $generated@@151)) (= (type $generated@@247) $generated@@151)) (= (type $generated@@248) ($generated@@76 $generated@@77 $generated@@78))) ($generated@@242 $generated@@248)) (= ($generated@@74 ($generated@@217 $generated@@246 $generated@@247) ($generated@@141 $generated@@244 $generated@@245) $generated@@248)  (and ($generated@@243 $generated@@246 $generated@@244 $generated@@248) ($generated@@243 $generated@@247 $generated@@245 $generated@@248))))
 :pattern ( ($generated@@74 ($generated@@217 $generated@@246 $generated@@247) ($generated@@141 $generated@@244 $generated@@245) $generated@@248))
)))
(assert (forall (($generated@@250 T@U) ) (! (= (type ($generated@@249 $generated@@250)) $generated@@68)
 :pattern ( ($generated@@249 $generated@@250))
)))
(assert (forall (($generated@@251 T@U) ) (!  (=> (= (type $generated@@251) $generated@@142) (= ($generated@@140 $generated@@251) (= ($generated@@249 $generated@@251) $generated@@61)))
 :pattern ( ($generated@@140 $generated@@251))
)))
(assert (forall (($generated@@252 T@U) ) (!  (=> (and (= (type $generated@@252) $generated@@142) ($generated@@140 $generated@@252)) (exists (($generated@@253 T@U) ($generated@@254 T@U) ) (!  (and (and (= (type $generated@@253) $generated@@151) (= (type $generated@@254) $generated@@151)) (= $generated@@252 ($generated@@217 $generated@@253 $generated@@254)))
 :no-pattern (type $generated@@253)
 :no-pattern (type $generated@@254)
 :no-pattern ($generated $generated@@253)
 :no-pattern ($generated@@0 $generated@@253)
 :no-pattern ($generated $generated@@254)
 :no-pattern ($generated@@0 $generated@@254)
)))
 :pattern ( ($generated@@140 $generated@@252))
)))
(assert  (and (and (forall (($generated@@259 T@T) ) (= ($generated@@1 ($generated@@257 $generated@@259)) 17)) (forall (($generated@@260 T@T) ) (! (= ($generated@@258 ($generated@@257 $generated@@260)) $generated@@260)
 :pattern ( ($generated@@257 $generated@@260))
))) (forall (($generated@@261 T@T) ) (! (= (type ($generated@@255 $generated@@261)) ($generated@@257 $generated@@261))
 :pattern ( ($generated@@255 $generated@@261))
))))
(assert (forall (($generated@@262 T@T) ) (! (= ($generated@@256 ($generated@@255 $generated@@262)) 0)
 :pattern ( ($generated@@255 $generated@@262))
)))
(assert  (=> (<= 0 $generated@@132) (forall (($generated@@263 Int) ($generated@@264 Int) ) (!  (=> (or ($generated@@135 $generated@@263 $generated@@264) (not (= 0 $generated@@132))) (= ($generated@@133 $generated@@263 $generated@@264) $generated@@263))
 :pattern ( ($generated@@133 $generated@@263 $generated@@264))
))))
(assert (forall (($generated@@266 T@U) ) (! (= (type ($generated@@265 $generated@@266)) $generated@@151)
 :pattern ( ($generated@@265 $generated@@266))
)))
(assert (forall (($generated@@267 T@U) ($generated@@268 T@U) ($generated@@269 T@U) ) (!  (=> (and (= (type $generated@@268) $generated@@64) (= (type $generated@@269) ($generated@@76 $generated@@77 $generated@@78))) (= ($generated@@243 ($generated@@265 $generated@@267) $generated@@268 $generated@@269) ($generated@@74 $generated@@267 $generated@@268 $generated@@269)))
 :pattern ( ($generated@@243 ($generated@@265 $generated@@267) $generated@@268 $generated@@269))
)))
(assert (forall (($generated@@272 T@T) ) (! (= (type ($generated@@271 $generated@@272)) ($generated@@76 $generated@@272 $generated@@2))
 :pattern ( ($generated@@271 $generated@@272))
)))
(assert (forall (($generated@@273 T@U) ) (! (let (($generated@@274 ($generated@@79 (type $generated@@273))))
 (=> (= (type $generated@@273) ($generated@@76 $generated@@274 $generated@@2)) (and (= (= ($generated@@270 $generated@@273) 0) (= $generated@@273 ($generated@@271 $generated@@274))) (=> (not (= ($generated@@270 $generated@@273) 0)) (exists (($generated@@275 T@U) ) (!  (and (= (type $generated@@275) $generated@@274) (< 0 ($generated ($generated@@81 $generated@@273 $generated@@275))))
 :no-pattern (type $generated@@275)
 :no-pattern ($generated $generated@@275)
 :no-pattern ($generated@@0 $generated@@275)
))))))
 :pattern ( ($generated@@270 $generated@@273))
)))
(assert  (and (and (and (and (forall (($generated@@281 T@T) ($generated@@282 T@T) ) (= ($generated@@1 ($generated@@278 $generated@@281 $generated@@282)) 18)) (forall (($generated@@283 T@T) ($generated@@284 T@T) ) (! (= ($generated@@279 ($generated@@278 $generated@@283 $generated@@284)) $generated@@283)
 :pattern ( ($generated@@278 $generated@@283 $generated@@284))
))) (forall (($generated@@285 T@T) ($generated@@286 T@T) ) (! (= ($generated@@280 ($generated@@278 $generated@@285 $generated@@286)) $generated@@286)
 :pattern ( ($generated@@278 $generated@@285 $generated@@286))
))) (forall (($generated@@287 T@U) ) (! (let (($generated@@288 ($generated@@279 (type $generated@@287))))
(= (type ($generated@@276 $generated@@287)) ($generated@@76 $generated@@288 $generated@@4)))
 :pattern ( ($generated@@276 $generated@@287))
))) (forall (($generated@@289 T@T) ($generated@@290 T@T) ) (! (= (type ($generated@@277 $generated@@289 $generated@@290)) ($generated@@278 $generated@@289 $generated@@290))
 :pattern ( ($generated@@277 $generated@@289 $generated@@290))
))))
(assert (forall (($generated@@291 T@U) ($generated@@292 T@T) ) (! (let (($generated@@293 (type $generated@@291)))
 (not ($generated@@0 ($generated@@81 ($generated@@276 ($generated@@277 $generated@@293 $generated@@292)) $generated@@291))))
 :pattern ( (let (($generated@@293 (type $generated@@291)))
($generated@@81 ($generated@@276 ($generated@@277 $generated@@293 $generated@@292)) $generated@@291)))
)))
(assert  (and (and (and (and (forall (($generated@@299 T@T) ($generated@@300 T@T) ) (= ($generated@@1 ($generated@@296 $generated@@299 $generated@@300)) 19)) (forall (($generated@@301 T@T) ($generated@@302 T@T) ) (! (= ($generated@@297 ($generated@@296 $generated@@301 $generated@@302)) $generated@@301)
 :pattern ( ($generated@@296 $generated@@301 $generated@@302))
))) (forall (($generated@@303 T@T) ($generated@@304 T@T) ) (! (= ($generated@@298 ($generated@@296 $generated@@303 $generated@@304)) $generated@@304)
 :pattern ( ($generated@@296 $generated@@303 $generated@@304))
))) (forall (($generated@@305 T@U) ) (! (let (($generated@@306 ($generated@@297 (type $generated@@305))))
(= (type ($generated@@294 $generated@@305)) ($generated@@76 $generated@@306 $generated@@4)))
 :pattern ( ($generated@@294 $generated@@305))
))) (forall (($generated@@307 T@T) ($generated@@308 T@T) ) (! (= (type ($generated@@295 $generated@@307 $generated@@308)) ($generated@@296 $generated@@307 $generated@@308))
 :pattern ( ($generated@@295 $generated@@307 $generated@@308))
))))
(assert (forall (($generated@@309 T@U) ($generated@@310 T@T) ) (! (let (($generated@@311 (type $generated@@309)))
 (not ($generated@@0 ($generated@@81 ($generated@@294 ($generated@@295 $generated@@311 $generated@@310)) $generated@@309))))
 :pattern ( (let (($generated@@311 (type $generated@@309)))
($generated@@81 ($generated@@294 ($generated@@295 $generated@@311 $generated@@310)) $generated@@309)))
)))
(assert (forall (($generated@@312 T@U) ) (! (let (($generated@@313 ($generated@@79 (type $generated@@312))))
 (=> (= (type $generated@@312) ($generated@@76 $generated@@313 $generated@@2)) (= ($generated@@157 $generated@@312) (forall (($generated@@314 T@U) ) (!  (=> (= (type $generated@@314) $generated@@313) (and (<= 0 ($generated ($generated@@81 $generated@@312 $generated@@314))) (<= ($generated ($generated@@81 $generated@@312 $generated@@314)) ($generated@@270 $generated@@312))))
 :pattern ( ($generated@@81 $generated@@312 $generated@@314))
)))))
 :pattern ( ($generated@@157 $generated@@312))
)))
(assert (forall (($generated@@315 T@U) ) (! (let (($generated@@316 ($generated@@280 (type $generated@@315))))
(let (($generated@@317 ($generated@@279 (type $generated@@315))))
 (=> (= (type $generated@@315) ($generated@@278 $generated@@317 $generated@@316)) (or (= $generated@@315 ($generated@@277 $generated@@317 $generated@@316)) (exists (($generated@@318 T@U) ) (!  (and (= (type $generated@@318) $generated@@317) ($generated@@0 ($generated@@81 ($generated@@276 $generated@@315) $generated@@318)))
 :no-pattern (type $generated@@318)
 :no-pattern ($generated $generated@@318)
 :no-pattern ($generated@@0 $generated@@318)
))))))
 :pattern ( ($generated@@276 $generated@@315))
)))
(assert (forall (($generated@@320 T@U) ) (! (let (($generated@@321 ($generated@@280 (type $generated@@320))))
(= (type ($generated@@319 $generated@@320)) ($generated@@76 $generated@@321 $generated@@4)))
 :pattern ( ($generated@@319 $generated@@320))
)))
(assert (forall (($generated@@322 T@U) ) (! (let (($generated@@323 ($generated@@280 (type $generated@@322))))
(let (($generated@@324 ($generated@@279 (type $generated@@322))))
 (=> (= (type $generated@@322) ($generated@@278 $generated@@324 $generated@@323)) (or (= $generated@@322 ($generated@@277 $generated@@324 $generated@@323)) (exists (($generated@@325 T@U) ) (!  (and (= (type $generated@@325) $generated@@323) ($generated@@0 ($generated@@81 ($generated@@319 $generated@@322) $generated@@325)))
 :no-pattern (type $generated@@325)
 :no-pattern ($generated $generated@@325)
 :no-pattern ($generated@@0 $generated@@325)
))))))
 :pattern ( ($generated@@319 $generated@@322))
)))
(assert (forall (($generated@@326 T@U) ) (! (let (($generated@@327 ($generated@@298 (type $generated@@326))))
(let (($generated@@328 ($generated@@297 (type $generated@@326))))
 (=> (= (type $generated@@326) ($generated@@296 $generated@@328 $generated@@327)) (or (= $generated@@326 ($generated@@295 $generated@@328 $generated@@327)) (exists (($generated@@329 T@U) ) (!  (and (= (type $generated@@329) $generated@@328) ($generated@@0 ($generated@@81 ($generated@@294 $generated@@326) $generated@@329)))
 :no-pattern (type $generated@@329)
 :no-pattern ($generated $generated@@329)
 :no-pattern ($generated@@0 $generated@@329)
))))))
 :pattern ( ($generated@@294 $generated@@326))
)))
(assert (forall (($generated@@331 T@U) ) (! (let (($generated@@332 ($generated@@298 (type $generated@@331))))
(= (type ($generated@@330 $generated@@331)) ($generated@@76 $generated@@332 $generated@@4)))
 :pattern ( ($generated@@330 $generated@@331))
)))
(assert (forall (($generated@@333 T@U) ) (! (let (($generated@@334 ($generated@@298 (type $generated@@333))))
(let (($generated@@335 ($generated@@297 (type $generated@@333))))
 (=> (= (type $generated@@333) ($generated@@296 $generated@@335 $generated@@334)) (or (= $generated@@333 ($generated@@295 $generated@@335 $generated@@334)) (exists (($generated@@336 T@U) ) (!  (and (= (type $generated@@336) $generated@@334) ($generated@@0 ($generated@@81 ($generated@@330 $generated@@333) $generated@@336)))
 :no-pattern (type $generated@@336)
 :no-pattern ($generated $generated@@336)
 :no-pattern ($generated@@0 $generated@@336)
))))))
 :pattern ( ($generated@@330 $generated@@333))
)))
(assert (forall (($generated@@337 T@U) ($generated@@338 T@U) ) (!  (=> (and (= (type $generated@@337) ($generated@@76 $generated@@151 $generated@@2)) (= (type $generated@@338) $generated@@64)) (= ($generated@@138 $generated@@337 ($generated@@156 $generated@@338)) (forall (($generated@@339 T@U) ) (!  (=> (and (= (type $generated@@339) $generated@@151) (< 0 ($generated ($generated@@81 $generated@@337 $generated@@339)))) ($generated@@218 $generated@@339 $generated@@338))
 :pattern ( ($generated@@81 $generated@@337 $generated@@339))
))))
 :pattern ( ($generated@@138 $generated@@337 ($generated@@156 $generated@@338)))
)))
(assert  (=> (<= 0 $generated@@132) (=> (or $generated@@340 (not (= 0 $generated@@132))) (= $generated@@341 ($generated@@134 5)))))
(assert  (=> (<= 0 $generated@@132) (=> (or $generated@@340 (not (= 0 $generated@@132))) (= $generated@@341 ($generated@@134 5)))))
(assert (forall (($generated@@342 T@U) ($generated@@343 T@U) ($generated@@344 T@U) ) (!  (=> (and (and (= (type $generated@@342) ($generated@@76 $generated@@151 $generated@@4)) (= (type $generated@@343) $generated@@64)) (= (type $generated@@344) ($generated@@76 $generated@@77 $generated@@78))) (= ($generated@@74 $generated@@342 ($generated@@227 $generated@@343) $generated@@344) (forall (($generated@@345 T@U) ) (!  (=> (and (= (type $generated@@345) $generated@@151) ($generated@@0 ($generated@@81 $generated@@342 $generated@@345))) ($generated@@243 $generated@@345 $generated@@343 $generated@@344))
 :pattern ( ($generated@@81 $generated@@342 $generated@@345))
))))
 :pattern ( ($generated@@74 $generated@@342 ($generated@@227 $generated@@343) $generated@@344))
)))
(assert (forall (($generated@@346 T@U) ($generated@@347 T@U) ($generated@@348 T@U) ) (!  (=> (and (and (= (type $generated@@346) ($generated@@76 $generated@@151 $generated@@4)) (= (type $generated@@347) $generated@@64)) (= (type $generated@@348) ($generated@@76 $generated@@77 $generated@@78))) (= ($generated@@74 $generated@@346 ($generated@@232 $generated@@347) $generated@@348) (forall (($generated@@349 T@U) ) (!  (=> (and (= (type $generated@@349) $generated@@151) ($generated@@0 ($generated@@81 $generated@@346 $generated@@349))) ($generated@@243 $generated@@349 $generated@@347 $generated@@348))
 :pattern ( ($generated@@81 $generated@@346 $generated@@349))
))))
 :pattern ( ($generated@@74 $generated@@346 ($generated@@232 $generated@@347) $generated@@348))
)))
(assert (forall (($generated@@350 T@U) ) (! (let (($generated@@351 (type $generated@@350)))
(= ($generated ($generated@@81 ($generated@@271 $generated@@351) $generated@@350)) 0))
 :pattern ( (let (($generated@@351 (type $generated@@350)))
($generated@@81 ($generated@@271 $generated@@351) $generated@@350)))
)))
(assert  (and (and (forall (($generated@@355 T@U) ) (! (= (type ($generated@@352 $generated@@355)) ($generated@@76 $generated@@151 $generated@@4))
 :pattern ( ($generated@@352 $generated@@355))
)) (forall (($generated@@356 T@T) ($generated@@357 T@U) ) (! (= (type ($generated@@353 $generated@@356 $generated@@357)) $generated@@356)
 :pattern ( ($generated@@353 $generated@@356 $generated@@357))
))) (forall (($generated@@358 T@U) ) (! (let (($generated@@359 ($generated@@280 (type $generated@@358))))
(let (($generated@@360 ($generated@@279 (type $generated@@358))))
(= (type ($generated@@354 $generated@@358)) ($generated@@76 $generated@@360 $generated@@359))))
 :pattern ( ($generated@@354 $generated@@358))
))))
(assert (forall (($generated@@361 T@U) ($generated@@362 T@U) ) (!  (=> (and (= (type $generated@@361) ($generated@@278 $generated@@151 $generated@@151)) (= (type $generated@@362) $generated@@151)) (= ($generated@@0 ($generated@@81 ($generated@@352 $generated@@361) $generated@@362))  (and ($generated@@0 ($generated@@81 ($generated@@276 $generated@@361) ($generated@@149 ($generated@@353 $generated@@142 $generated@@362)))) (= ($generated@@81 ($generated@@354 $generated@@361) ($generated@@149 ($generated@@353 $generated@@142 $generated@@362))) ($generated@@150 ($generated@@353 $generated@@142 $generated@@362))))))
 :pattern ( ($generated@@81 ($generated@@352 $generated@@361) $generated@@362))
)))
(assert  (and (forall (($generated@@365 T@U) ) (! (= (type ($generated@@363 $generated@@365)) ($generated@@76 $generated@@151 $generated@@4))
 :pattern ( ($generated@@363 $generated@@365))
)) (forall (($generated@@366 T@U) ) (! (let (($generated@@367 ($generated@@298 (type $generated@@366))))
(let (($generated@@368 ($generated@@297 (type $generated@@366))))
(= (type ($generated@@364 $generated@@366)) ($generated@@76 $generated@@368 $generated@@367))))
 :pattern ( ($generated@@364 $generated@@366))
))))
(assert (forall (($generated@@369 T@U) ($generated@@370 T@U) ) (!  (=> (and (= (type $generated@@369) ($generated@@296 $generated@@151 $generated@@151)) (= (type $generated@@370) $generated@@151)) (= ($generated@@0 ($generated@@81 ($generated@@363 $generated@@369) $generated@@370))  (and ($generated@@0 ($generated@@81 ($generated@@294 $generated@@369) ($generated@@149 ($generated@@353 $generated@@142 $generated@@370)))) (= ($generated@@81 ($generated@@364 $generated@@369) ($generated@@149 ($generated@@353 $generated@@142 $generated@@370))) ($generated@@150 ($generated@@353 $generated@@142 $generated@@370))))))
 :pattern ( ($generated@@81 ($generated@@363 $generated@@369) $generated@@370))
)))
(assert (forall (($generated@@371 T@U) ($generated@@372 T@U) ) (! (let (($generated@@373 (type $generated@@372)))
(let (($generated@@374 ($generated@@279 (type $generated@@371))))
 (=> (= (type $generated@@371) ($generated@@278 $generated@@374 $generated@@373)) (= ($generated@@0 ($generated@@81 ($generated@@319 $generated@@371) $generated@@372)) (exists (($generated@@375 T@U) ) (!  (and (= (type $generated@@375) $generated@@374) (and ($generated@@0 ($generated@@81 ($generated@@276 $generated@@371) $generated@@375)) (= $generated@@372 ($generated@@81 ($generated@@354 $generated@@371) $generated@@375))))
 :pattern ( ($generated@@81 ($generated@@276 $generated@@371) $generated@@375))
 :pattern ( ($generated@@81 ($generated@@354 $generated@@371) $generated@@375))
))))))
 :pattern ( ($generated@@81 ($generated@@319 $generated@@371) $generated@@372))
)))
(assert (forall (($generated@@376 T@U) ($generated@@377 T@U) ) (! (let (($generated@@378 (type $generated@@377)))
(let (($generated@@379 ($generated@@297 (type $generated@@376))))
 (=> (= (type $generated@@376) ($generated@@296 $generated@@379 $generated@@378)) (= ($generated@@0 ($generated@@81 ($generated@@330 $generated@@376) $generated@@377)) (exists (($generated@@380 T@U) ) (!  (and (= (type $generated@@380) $generated@@379) (and ($generated@@0 ($generated@@81 ($generated@@294 $generated@@376) $generated@@380)) (= $generated@@377 ($generated@@81 ($generated@@364 $generated@@376) $generated@@380))))
 :pattern ( ($generated@@81 ($generated@@294 $generated@@376) $generated@@380))
 :pattern ( ($generated@@81 ($generated@@364 $generated@@376) $generated@@380))
))))))
 :pattern ( ($generated@@81 ($generated@@330 $generated@@376) $generated@@377))
)))
(assert (forall (($generated@@382 T@U) ($generated@@383 T@U) ) (! (= (type ($generated@@381 $generated@@382 $generated@@383)) $generated@@64)
 :pattern ( ($generated@@381 $generated@@382 $generated@@383))
)))
(assert (forall (($generated@@384 T@U) ($generated@@385 T@U) ($generated@@386 T@U) ($generated@@387 T@U) ) (!  (=> (and (and (and (= (type $generated@@384) ($generated@@278 $generated@@151 $generated@@151)) (= (type $generated@@385) $generated@@64)) (= (type $generated@@386) $generated@@64)) (= (type $generated@@387) ($generated@@76 $generated@@77 $generated@@78))) (= ($generated@@74 $generated@@384 ($generated@@381 $generated@@385 $generated@@386) $generated@@387) (forall (($generated@@388 T@U) ) (!  (=> (and (= (type $generated@@388) $generated@@151) ($generated@@0 ($generated@@81 ($generated@@276 $generated@@384) $generated@@388))) (and ($generated@@243 ($generated@@81 ($generated@@354 $generated@@384) $generated@@388) $generated@@386 $generated@@387) ($generated@@243 $generated@@388 $generated@@385 $generated@@387)))
 :pattern ( ($generated@@81 ($generated@@354 $generated@@384) $generated@@388))
 :pattern ( ($generated@@81 ($generated@@276 $generated@@384) $generated@@388))
))))
 :pattern ( ($generated@@74 $generated@@384 ($generated@@381 $generated@@385 $generated@@386) $generated@@387))
)))
(assert (forall (($generated@@390 T@U) ($generated@@391 T@U) ) (! (= (type ($generated@@389 $generated@@390 $generated@@391)) $generated@@64)
 :pattern ( ($generated@@389 $generated@@390 $generated@@391))
)))
(assert (forall (($generated@@392 T@U) ($generated@@393 T@U) ($generated@@394 T@U) ($generated@@395 T@U) ) (!  (=> (and (and (and (= (type $generated@@392) ($generated@@296 $generated@@151 $generated@@151)) (= (type $generated@@393) $generated@@64)) (= (type $generated@@394) $generated@@64)) (= (type $generated@@395) ($generated@@76 $generated@@77 $generated@@78))) (= ($generated@@74 $generated@@392 ($generated@@389 $generated@@393 $generated@@394) $generated@@395) (forall (($generated@@396 T@U) ) (!  (=> (and (= (type $generated@@396) $generated@@151) ($generated@@0 ($generated@@81 ($generated@@294 $generated@@392) $generated@@396))) (and ($generated@@243 ($generated@@81 ($generated@@364 $generated@@392) $generated@@396) $generated@@394 $generated@@395) ($generated@@243 $generated@@396 $generated@@393 $generated@@395)))
 :pattern ( ($generated@@81 ($generated@@364 $generated@@392) $generated@@396))
 :pattern ( ($generated@@81 ($generated@@294 $generated@@392) $generated@@396))
))))
 :pattern ( ($generated@@74 $generated@@392 ($generated@@389 $generated@@393 $generated@@394) $generated@@395))
)))
(assert  (=> (<= 0 $generated@@132) (=> (or $generated@@340 (not (= 0 $generated@@132))) true)))
(assert  (=> (<= 0 $generated@@132) (forall (($generated@@397 Int) ($generated@@398 Int) ) (!  (=> (or ($generated@@135 $generated@@397 $generated@@398) (not (= 0 $generated@@132))) true)
 :pattern ( ($generated@@133 $generated@@397 $generated@@398))
))))
(assert (forall (($generated@@400 T@T) ) (! (= (type ($generated@@399 $generated@@400)) ($generated@@76 $generated@@400 $generated@@4))
 :pattern ( ($generated@@399 $generated@@400))
)))
(assert (forall (($generated@@401 T@U) ) (! (let (($generated@@402 ($generated@@298 (type $generated@@401))))
(let (($generated@@403 ($generated@@297 (type $generated@@401))))
 (=> (= (type $generated@@401) ($generated@@296 $generated@@403 $generated@@402)) (= (= $generated@@401 ($generated@@295 $generated@@403 $generated@@402)) (= ($generated@@294 $generated@@401) ($generated@@399 $generated@@403))))))
 :pattern ( ($generated@@294 $generated@@401))
)))
(assert (forall (($generated@@404 T@U) ) (! (let (($generated@@405 ($generated@@298 (type $generated@@404))))
(let (($generated@@406 ($generated@@297 (type $generated@@404))))
 (=> (= (type $generated@@404) ($generated@@296 $generated@@406 $generated@@405)) (= (= $generated@@404 ($generated@@295 $generated@@406 $generated@@405)) (= ($generated@@330 $generated@@404) ($generated@@399 $generated@@405))))))
 :pattern ( ($generated@@330 $generated@@404))
)))
(assert (forall (($generated@@407 T@U) ) (! (let (($generated@@408 ($generated@@298 (type $generated@@407))))
(let (($generated@@409 ($generated@@297 (type $generated@@407))))
 (=> (= (type $generated@@407) ($generated@@296 $generated@@409 $generated@@408)) (= (= $generated@@407 ($generated@@295 $generated@@409 $generated@@408)) (= ($generated@@363 $generated@@407) ($generated@@399 $generated@@151))))))
 :pattern ( ($generated@@363 $generated@@407))
)))
(assert (forall (($generated@@410 T@U) ) (! (let (($generated@@411 ($generated@@280 (type $generated@@410))))
(let (($generated@@412 ($generated@@279 (type $generated@@410))))
 (=> (= (type $generated@@410) ($generated@@278 $generated@@412 $generated@@411)) (or (= $generated@@410 ($generated@@277 $generated@@412 $generated@@411)) (exists (($generated@@413 T@U) ($generated@@414 T@U) ) (!  (and (and (= (type $generated@@413) $generated@@151) (= (type $generated@@414) $generated@@151)) ($generated@@0 ($generated@@81 ($generated@@352 $generated@@410) ($generated@@265 ($generated@@217 $generated@@413 $generated@@414)))))
 :no-pattern (type $generated@@413)
 :no-pattern (type $generated@@414)
 :no-pattern ($generated $generated@@413)
 :no-pattern ($generated@@0 $generated@@413)
 :no-pattern ($generated $generated@@414)
 :no-pattern ($generated@@0 $generated@@414)
))))))
 :pattern ( ($generated@@352 $generated@@410))
)))
(assert (forall (($generated@@415 T@U) ) (! (let (($generated@@416 ($generated@@298 (type $generated@@415))))
(let (($generated@@417 ($generated@@297 (type $generated@@415))))
 (=> (= (type $generated@@415) ($generated@@296 $generated@@417 $generated@@416)) (or (= $generated@@415 ($generated@@295 $generated@@417 $generated@@416)) (exists (($generated@@418 T@U) ($generated@@419 T@U) ) (!  (and (and (= (type $generated@@418) $generated@@151) (= (type $generated@@419) $generated@@151)) ($generated@@0 ($generated@@81 ($generated@@363 $generated@@415) ($generated@@265 ($generated@@217 $generated@@418 $generated@@419)))))
 :no-pattern (type $generated@@418)
 :no-pattern (type $generated@@419)
 :no-pattern ($generated $generated@@418)
 :no-pattern ($generated@@0 $generated@@418)
 :no-pattern ($generated $generated@@419)
 :no-pattern ($generated@@0 $generated@@419)
))))))
 :pattern ( ($generated@@363 $generated@@415))
)))
(assert (forall (($generated@@420 T@U) ) (!  (=> (and (= (type $generated@@420) $generated@@151) ($generated@@218 $generated@@420 $generated@@46)) (and (= ($generated@@265 ($generated@@353 $generated@@2 $generated@@420)) $generated@@420) ($generated@@138 ($generated@@353 $generated@@2 $generated@@420) $generated@@46)))
 :pattern ( ($generated@@218 $generated@@420 $generated@@46))
)))
(assert (forall (($generated@@421 T@U) ) (!  (=> (and (= (type $generated@@421) $generated@@151) ($generated@@218 $generated@@421 $generated@@47)) (and (= ($generated@@265 ($generated@@353 $generated@@3 $generated@@421)) $generated@@421) ($generated@@138 ($generated@@353 $generated@@3 $generated@@421) $generated@@47)))
 :pattern ( ($generated@@218 $generated@@421 $generated@@47))
)))
(assert (forall (($generated@@422 T@U) ) (!  (=> (and (= (type $generated@@422) $generated@@151) ($generated@@218 $generated@@422 $generated@@44)) (and (= ($generated@@265 ($generated@@353 $generated@@4 $generated@@422)) $generated@@422) ($generated@@138 ($generated@@353 $generated@@4 $generated@@422) $generated@@44)))
 :pattern ( ($generated@@218 $generated@@422 $generated@@44))
)))
(assert (= ($generated@@1 $generated@@423) 20))
(assert (forall (($generated@@424 T@U) ) (!  (=> (and (= (type $generated@@424) $generated@@151) ($generated@@218 $generated@@424 $generated@@45)) (and (= ($generated@@265 ($generated@@353 $generated@@423 $generated@@424)) $generated@@424) ($generated@@138 ($generated@@353 $generated@@423 $generated@@424) $generated@@45)))
 :pattern ( ($generated@@218 $generated@@424 $generated@@45))
)))
(assert (forall (($generated@@425 T@U) ($generated@@426 T@U) ) (!  (=> (= (type $generated@@426) $generated@@64) (= ($generated@@218 ($generated@@265 $generated@@425) $generated@@426) ($generated@@138 $generated@@425 $generated@@426)))
 :pattern ( ($generated@@218 ($generated@@265 $generated@@425) $generated@@426))
)))
(assert (forall (($generated@@427 T@U) ) (! (let (($generated@@428 ($generated@@79 (type $generated@@427))))
 (=> (= (type $generated@@427) ($generated@@76 $generated@@428 $generated@@2)) (<= 0 ($generated@@270 $generated@@427))))
 :pattern ( ($generated@@270 $generated@@427))
)))
(assert (forall (($generated@@429 T@U) ) (! (let (($generated@@430 ($generated@@258 (type $generated@@429))))
 (=> (= (type $generated@@429) ($generated@@257 $generated@@430)) (<= 0 ($generated@@256 $generated@@429))))
 :pattern ( ($generated@@256 $generated@@429))
)))
(assert (forall (($generated@@432 T@U) ) (! (= (type ($generated@@431 $generated@@432)) $generated@@64)
 :pattern ( ($generated@@431 $generated@@432))
)))
(assert (forall (($generated@@433 T@U) ($generated@@434 T@U) ) (!  (=> (and (= (type $generated@@433) $generated@@64) (= (type $generated@@434) $generated@@64)) (= ($generated@@431 ($generated@@381 $generated@@433 $generated@@434)) $generated@@433))
 :pattern ( ($generated@@381 $generated@@433 $generated@@434))
)))
(assert (forall (($generated@@436 T@U) ) (! (= (type ($generated@@435 $generated@@436)) $generated@@64)
 :pattern ( ($generated@@435 $generated@@436))
)))
(assert (forall (($generated@@437 T@U) ($generated@@438 T@U) ) (!  (=> (and (= (type $generated@@437) $generated@@64) (= (type $generated@@438) $generated@@64)) (= ($generated@@435 ($generated@@381 $generated@@437 $generated@@438)) $generated@@438))
 :pattern ( ($generated@@381 $generated@@437 $generated@@438))
)))
(assert (forall (($generated@@439 T@U) ($generated@@440 T@U) ) (!  (=> (and (= (type $generated@@439) $generated@@64) (= (type $generated@@440) $generated@@64)) (= ($generated@@72 ($generated@@381 $generated@@439 $generated@@440)) $generated@@58))
 :pattern ( ($generated@@381 $generated@@439 $generated@@440))
)))
(assert (forall (($generated@@442 T@U) ) (! (= (type ($generated@@441 $generated@@442)) $generated@@64)
 :pattern ( ($generated@@441 $generated@@442))
)))
(assert (forall (($generated@@443 T@U) ($generated@@444 T@U) ) (!  (=> (and (= (type $generated@@443) $generated@@64) (= (type $generated@@444) $generated@@64)) (= ($generated@@441 ($generated@@389 $generated@@443 $generated@@444)) $generated@@443))
 :pattern ( ($generated@@389 $generated@@443 $generated@@444))
)))
(assert (forall (($generated@@446 T@U) ) (! (= (type ($generated@@445 $generated@@446)) $generated@@64)
 :pattern ( ($generated@@445 $generated@@446))
)))
(assert (forall (($generated@@447 T@U) ($generated@@448 T@U) ) (!  (=> (and (= (type $generated@@447) $generated@@64) (= (type $generated@@448) $generated@@64)) (= ($generated@@445 ($generated@@389 $generated@@447 $generated@@448)) $generated@@448))
 :pattern ( ($generated@@389 $generated@@447 $generated@@448))
)))
(assert (forall (($generated@@449 T@U) ($generated@@450 T@U) ) (!  (=> (and (= (type $generated@@449) $generated@@64) (= (type $generated@@450) $generated@@64)) (= ($generated@@72 ($generated@@389 $generated@@449 $generated@@450)) $generated@@59))
 :pattern ( ($generated@@389 $generated@@449 $generated@@450))
)))
(assert (forall (($generated@@451 T@U) ($generated@@452 T@U) ) (!  (=> (and (= (type $generated@@451) $generated@@151) (= (type $generated@@452) $generated@@151)) (= ($generated@@249 ($generated@@217 $generated@@451 $generated@@452)) $generated@@61))
 :pattern ( ($generated@@217 $generated@@451 $generated@@452))
)))
(assert (forall (($generated@@454 T@U) ) (! (= (type ($generated@@453 $generated@@454)) $generated@@64)
 :pattern ( ($generated@@453 $generated@@454))
)))
(assert (forall (($generated@@455 T@U) ($generated@@456 T@U) ) (!  (=> (and (= (type $generated@@455) $generated@@64) (= (type $generated@@456) $generated@@64)) (= ($generated@@453 ($generated@@141 $generated@@455 $generated@@456)) $generated@@455))
 :pattern ( ($generated@@141 $generated@@455 $generated@@456))
)))
(assert (forall (($generated@@458 T@U) ) (! (= (type ($generated@@457 $generated@@458)) $generated@@64)
 :pattern ( ($generated@@457 $generated@@458))
)))
(assert (forall (($generated@@459 T@U) ($generated@@460 T@U) ) (!  (=> (and (= (type $generated@@459) $generated@@64) (= (type $generated@@460) $generated@@64)) (= ($generated@@457 ($generated@@141 $generated@@459 $generated@@460)) $generated@@460))
 :pattern ( ($generated@@141 $generated@@459 $generated@@460))
)))
(assert (forall (($generated@@461 T@U) ($generated@@462 T@U) ) (!  (=> (and (= (type $generated@@461) $generated@@151) (= (type $generated@@462) $generated@@151)) (= ($generated@@149 ($generated@@217 $generated@@461 $generated@@462)) $generated@@461))
 :pattern ( ($generated@@217 $generated@@461 $generated@@462))
)))
(assert (forall (($generated@@463 T@U) ($generated@@464 T@U) ) (!  (=> (and (= (type $generated@@463) $generated@@151) (= (type $generated@@464) $generated@@151)) (= ($generated@@150 ($generated@@217 $generated@@463 $generated@@464)) $generated@@464))
 :pattern ( ($generated@@217 $generated@@463 $generated@@464))
)))
(assert  (and (forall (($generated@@467 T@U) ) (! (= (type ($generated@@465 $generated@@467)) $generated@@64)
 :pattern ( ($generated@@465 $generated@@467))
)) (forall (($generated@@468 T@U) ($generated@@469 Int) ) (! (let (($generated@@470 ($generated@@258 (type $generated@@468))))
(= (type ($generated@@466 $generated@@468 $generated@@469)) $generated@@470))
 :pattern ( ($generated@@466 $generated@@468 $generated@@469))
))))
(assert (forall (($generated@@471 T@U) ($generated@@472 T@U) ($generated@@473 T@U) ) (!  (=> (and (and (= (type $generated@@471) ($generated@@257 $generated@@151)) (= (type $generated@@472) $generated@@64)) (= (type $generated@@473) ($generated@@76 $generated@@77 $generated@@78))) (= ($generated@@74 $generated@@471 ($generated@@465 $generated@@472) $generated@@473) (forall (($generated@@474 Int) ) (!  (=> (and (<= 0 $generated@@474) (< $generated@@474 ($generated@@256 $generated@@471))) ($generated@@243 ($generated@@466 $generated@@471 $generated@@474) $generated@@472 $generated@@473))
 :pattern ( ($generated@@466 $generated@@471 $generated@@474))
))))
 :pattern ( ($generated@@74 $generated@@471 ($generated@@465 $generated@@472) $generated@@473))
)))
(assert (forall (($generated@@476 Int) ) (! (= ($generated@@475 ($generated@@75 $generated@@476)) $generated@@476)
 :pattern ( ($generated@@75 $generated@@476))
)))
(assert (forall (($generated@@478 T@U) ) (! (= (type ($generated@@477 $generated@@478)) $generated@@64)
 :pattern ( ($generated@@477 $generated@@478))
)))
(assert (forall (($generated@@479 T@U) ) (!  (=> (= (type $generated@@479) $generated@@64) (= ($generated@@477 ($generated@@227 $generated@@479)) $generated@@479))
 :pattern ( ($generated@@227 $generated@@479))
)))
(assert (forall (($generated@@480 T@U) ) (!  (=> (= (type $generated@@480) $generated@@64) (= ($generated@@72 ($generated@@227 $generated@@480)) $generated@@54))
 :pattern ( ($generated@@227 $generated@@480))
)))
(assert (forall (($generated@@482 T@U) ) (! (= (type ($generated@@481 $generated@@482)) $generated@@64)
 :pattern ( ($generated@@481 $generated@@482))
)))
(assert (forall (($generated@@483 T@U) ) (!  (=> (= (type $generated@@483) $generated@@64) (= ($generated@@481 ($generated@@232 $generated@@483)) $generated@@483))
 :pattern ( ($generated@@232 $generated@@483))
)))
(assert (forall (($generated@@484 T@U) ) (!  (=> (= (type $generated@@484) $generated@@64) (= ($generated@@72 ($generated@@232 $generated@@484)) $generated@@55))
 :pattern ( ($generated@@232 $generated@@484))
)))
(assert (forall (($generated@@486 T@U) ) (! (= (type ($generated@@485 $generated@@486)) $generated@@64)
 :pattern ( ($generated@@485 $generated@@486))
)))
(assert (forall (($generated@@487 T@U) ) (!  (=> (= (type $generated@@487) $generated@@64) (= ($generated@@485 ($generated@@156 $generated@@487)) $generated@@487))
 :pattern ( ($generated@@156 $generated@@487))
)))
(assert (forall (($generated@@488 T@U) ) (!  (=> (= (type $generated@@488) $generated@@64) (= ($generated@@72 ($generated@@156 $generated@@488)) $generated@@56))
 :pattern ( ($generated@@156 $generated@@488))
)))
(assert (forall (($generated@@490 T@U) ) (! (= (type ($generated@@489 $generated@@490)) $generated@@64)
 :pattern ( ($generated@@489 $generated@@490))
)))
(assert (forall (($generated@@491 T@U) ) (!  (=> (= (type $generated@@491) $generated@@64) (= ($generated@@489 ($generated@@465 $generated@@491)) $generated@@491))
 :pattern ( ($generated@@465 $generated@@491))
)))
(assert (forall (($generated@@492 T@U) ) (!  (=> (= (type $generated@@492) $generated@@64) (= ($generated@@72 ($generated@@465 $generated@@492)) $generated@@57))
 :pattern ( ($generated@@465 $generated@@492))
)))
(assert (forall (($generated@@493 T@U) ) (! (let (($generated@@494 (type $generated@@493)))
(= ($generated@@353 $generated@@494 ($generated@@265 $generated@@493)) $generated@@493))
 :pattern ( ($generated@@265 $generated@@493))
)))
(assert (forall (($generated@@495 T@U) ($generated@@496 T@U) ($generated@@497 T@U) ) (!  (=> (and (and (= (type $generated@@495) ($generated@@278 $generated@@151 $generated@@151)) (= (type $generated@@496) $generated@@64)) (= (type $generated@@497) $generated@@64)) (= ($generated@@138 $generated@@495 ($generated@@381 $generated@@496 $generated@@497)) (forall (($generated@@498 T@U) ) (!  (=> (and (= (type $generated@@498) $generated@@151) ($generated@@0 ($generated@@81 ($generated@@276 $generated@@495) $generated@@498))) (and ($generated@@218 ($generated@@81 ($generated@@354 $generated@@495) $generated@@498) $generated@@497) ($generated@@218 $generated@@498 $generated@@496)))
 :pattern ( ($generated@@81 ($generated@@354 $generated@@495) $generated@@498))
 :pattern ( ($generated@@81 ($generated@@276 $generated@@495) $generated@@498))
))))
 :pattern ( ($generated@@138 $generated@@495 ($generated@@381 $generated@@496 $generated@@497)))
)))
(assert (forall (($generated@@499 T@U) ($generated@@500 T@U) ($generated@@501 T@U) ) (!  (=> (and (and (= (type $generated@@499) ($generated@@296 $generated@@151 $generated@@151)) (= (type $generated@@500) $generated@@64)) (= (type $generated@@501) $generated@@64)) (= ($generated@@138 $generated@@499 ($generated@@389 $generated@@500 $generated@@501)) (forall (($generated@@502 T@U) ) (!  (=> (and (= (type $generated@@502) $generated@@151) ($generated@@0 ($generated@@81 ($generated@@294 $generated@@499) $generated@@502))) (and ($generated@@218 ($generated@@81 ($generated@@364 $generated@@499) $generated@@502) $generated@@501) ($generated@@218 $generated@@502 $generated@@500)))
 :pattern ( ($generated@@81 ($generated@@364 $generated@@499) $generated@@502))
 :pattern ( ($generated@@81 ($generated@@294 $generated@@499) $generated@@502))
))))
 :pattern ( ($generated@@138 $generated@@499 ($generated@@389 $generated@@500 $generated@@501)))
)))
(assert (forall (($generated@@505 T@U) ($generated@@506 T@U) ) (!  (=> (and (= (type $generated@@505) $generated@@151) (= (type $generated@@506) $generated@@151)) (< ($generated@@503 $generated@@505) ($generated@@504 ($generated@@217 $generated@@505 $generated@@506))))
 :pattern ( ($generated@@217 $generated@@505 $generated@@506))
)))
(assert (forall (($generated@@507 T@U) ($generated@@508 T@U) ) (!  (=> (and (= (type $generated@@507) $generated@@151) (= (type $generated@@508) $generated@@151)) (< ($generated@@503 $generated@@508) ($generated@@504 ($generated@@217 $generated@@507 $generated@@508))))
 :pattern ( ($generated@@217 $generated@@507 $generated@@508))
)))
(assert (forall (($generated@@509 T@U) ($generated@@510 T@U) ($generated@@511 T@U) ) (!  (=> (and (and (and (= (type $generated@@509) $generated@@151) (= (type $generated@@510) $generated@@64)) (= (type $generated@@511) $generated@@64)) ($generated@@218 $generated@@509 ($generated@@381 $generated@@510 $generated@@511))) (and (= ($generated@@265 ($generated@@353 ($generated@@278 $generated@@151 $generated@@151) $generated@@509)) $generated@@509) ($generated@@138 ($generated@@353 ($generated@@278 $generated@@151 $generated@@151) $generated@@509) ($generated@@381 $generated@@510 $generated@@511))))
 :pattern ( ($generated@@218 $generated@@509 ($generated@@381 $generated@@510 $generated@@511)))
)))
(assert (forall (($generated@@512 T@U) ($generated@@513 T@U) ($generated@@514 T@U) ) (!  (=> (and (and (and (= (type $generated@@512) $generated@@151) (= (type $generated@@513) $generated@@64)) (= (type $generated@@514) $generated@@64)) ($generated@@218 $generated@@512 ($generated@@389 $generated@@513 $generated@@514))) (and (= ($generated@@265 ($generated@@353 ($generated@@296 $generated@@151 $generated@@151) $generated@@512)) $generated@@512) ($generated@@138 ($generated@@353 ($generated@@296 $generated@@151 $generated@@151) $generated@@512) ($generated@@389 $generated@@513 $generated@@514))))
 :pattern ( ($generated@@218 $generated@@512 ($generated@@389 $generated@@513 $generated@@514)))
)))
(assert (forall (($generated@@515 T@U) ($generated@@516 T@U) ($generated@@517 T@U) ) (!  (=> (and (and (and (= (type $generated@@515) $generated@@64) (= (type $generated@@516) $generated@@64)) (= (type $generated@@517) $generated@@151)) ($generated@@218 $generated@@517 ($generated@@141 $generated@@515 $generated@@516))) (and (= ($generated@@265 ($generated@@353 $generated@@142 $generated@@517)) $generated@@517) ($generated@@138 ($generated@@353 $generated@@142 $generated@@517) ($generated@@141 $generated@@515 $generated@@516))))
 :pattern ( ($generated@@218 $generated@@517 ($generated@@141 $generated@@515 $generated@@516)))
)))
(assert (forall (($generated@@518 T@U) ) (! (let (($generated@@519 (type $generated@@518)))
 (not ($generated@@0 ($generated@@81 ($generated@@399 $generated@@519) $generated@@518))))
 :pattern ( (let (($generated@@519 (type $generated@@518)))
($generated@@81 ($generated@@399 $generated@@519) $generated@@518)))
)))
(assert (forall (($generated@@521 T@U) ) (! (= (type ($generated@@520 $generated@@521)) $generated@@69)
 :pattern ( ($generated@@520 $generated@@521))
)))
(assert (forall (($generated@@522 T@U) ($generated@@523 T@U) ) (!  (=> (and (= (type $generated@@522) $generated@@64) (= (type $generated@@523) $generated@@64)) (and (= ($generated@@72 ($generated@@141 $generated@@522 $generated@@523)) $generated@@62) (= ($generated@@520 ($generated@@141 $generated@@522 $generated@@523)) $generated@@63)))
 :pattern ( ($generated@@141 $generated@@522 $generated@@523))
)))
(assert (forall (($generated@@524 T@U) ) (!  (=> (= (type $generated@@524) $generated@@142) (= ($generated@@503 ($generated@@265 $generated@@524)) ($generated@@504 $generated@@524)))
 :pattern ( ($generated@@503 ($generated@@265 $generated@@524)))
)))
(assert (forall (($generated@@525 T@U) ) (!  (=> (and (= (type $generated@@525) $generated@@151) ($generated@@218 $generated@@525 ($generated@@75 0))) (and (= ($generated@@265 ($generated@@353 $generated@@2 $generated@@525)) $generated@@525) ($generated@@138 ($generated@@353 ($generated@@76 $generated@@151 $generated@@4) $generated@@525) ($generated@@75 0))))
 :pattern ( ($generated@@218 $generated@@525 ($generated@@75 0)))
)))
(assert (forall (($generated@@526 T@U) ($generated@@527 T@U) ) (!  (=> (and (and (= (type $generated@@526) $generated@@151) (= (type $generated@@527) $generated@@64)) ($generated@@218 $generated@@526 ($generated@@227 $generated@@527))) (and (= ($generated@@265 ($generated@@353 ($generated@@76 $generated@@151 $generated@@4) $generated@@526)) $generated@@526) ($generated@@138 ($generated@@353 ($generated@@76 $generated@@151 $generated@@4) $generated@@526) ($generated@@227 $generated@@527))))
 :pattern ( ($generated@@218 $generated@@526 ($generated@@227 $generated@@527)))
)))
(assert (forall (($generated@@528 T@U) ($generated@@529 T@U) ) (!  (=> (and (and (= (type $generated@@528) $generated@@151) (= (type $generated@@529) $generated@@64)) ($generated@@218 $generated@@528 ($generated@@232 $generated@@529))) (and (= ($generated@@265 ($generated@@353 ($generated@@76 $generated@@151 $generated@@4) $generated@@528)) $generated@@528) ($generated@@138 ($generated@@353 ($generated@@76 $generated@@151 $generated@@4) $generated@@528) ($generated@@232 $generated@@529))))
 :pattern ( ($generated@@218 $generated@@528 ($generated@@232 $generated@@529)))
)))
(assert (forall (($generated@@530 T@U) ($generated@@531 T@U) ) (!  (=> (and (and (= (type $generated@@530) $generated@@151) (= (type $generated@@531) $generated@@64)) ($generated@@218 $generated@@530 ($generated@@156 $generated@@531))) (and (= ($generated@@265 ($generated@@353 ($generated@@76 $generated@@151 $generated@@2) $generated@@530)) $generated@@530) ($generated@@138 ($generated@@353 ($generated@@76 $generated@@151 $generated@@2) $generated@@530) ($generated@@156 $generated@@531))))
 :pattern ( ($generated@@218 $generated@@530 ($generated@@156 $generated@@531)))
)))
(assert (forall (($generated@@532 T@U) ($generated@@533 T@U) ) (!  (=> (and (and (= (type $generated@@532) $generated@@151) (= (type $generated@@533) $generated@@64)) ($generated@@218 $generated@@532 ($generated@@465 $generated@@533))) (and (= ($generated@@265 ($generated@@353 ($generated@@257 $generated@@151) $generated@@532)) $generated@@532) ($generated@@138 ($generated@@353 ($generated@@257 $generated@@151) $generated@@532) ($generated@@465 $generated@@533))))
 :pattern ( ($generated@@218 $generated@@532 ($generated@@465 $generated@@533)))
)))
(assert (forall (($generated@@534 T@U) ($generated@@535 T@U) ($generated@@536 T@U) ) (!  (=> (and (and (= (type $generated@@534) ($generated@@76 $generated@@151 $generated@@2)) (= (type $generated@@535) $generated@@64)) (= (type $generated@@536) ($generated@@76 $generated@@77 $generated@@78))) (= ($generated@@74 $generated@@534 ($generated@@156 $generated@@535) $generated@@536) (forall (($generated@@537 T@U) ) (!  (=> (and (= (type $generated@@537) $generated@@151) (< 0 ($generated ($generated@@81 $generated@@534 $generated@@537)))) ($generated@@243 $generated@@537 $generated@@535 $generated@@536))
 :pattern ( ($generated@@81 $generated@@534 $generated@@537))
))))
 :pattern ( ($generated@@74 $generated@@534 ($generated@@156 $generated@@535) $generated@@536))
)))
(assert (forall (($generated@@538 T@U) ($generated@@539 T@U) ($generated@@540 T@U) ) (!  (=> (and (and (and (= (type $generated@@538) $generated@@142) (= (type $generated@@539) $generated@@64)) (= (type $generated@@540) ($generated@@76 $generated@@77 $generated@@78))) (and ($generated@@242 $generated@@540) (and ($generated@@140 $generated@@538) (exists (($generated@@541 T@U) ) (!  (and (= (type $generated@@541) $generated@@64) ($generated@@74 $generated@@538 ($generated@@141 $generated@@539 $generated@@541) $generated@@540))
 :pattern ( ($generated@@74 $generated@@538 ($generated@@141 $generated@@539 $generated@@541) $generated@@540))
))))) ($generated@@243 ($generated@@149 $generated@@538) $generated@@539 $generated@@540))
 :pattern ( ($generated@@243 ($generated@@149 $generated@@538) $generated@@539 $generated@@540))
)))
(assert (forall (($generated@@542 T@U) ($generated@@543 T@U) ($generated@@544 T@U) ) (!  (=> (and (and (and (= (type $generated@@542) $generated@@142) (= (type $generated@@543) $generated@@64)) (= (type $generated@@544) ($generated@@76 $generated@@77 $generated@@78))) (and ($generated@@242 $generated@@544) (and ($generated@@140 $generated@@542) (exists (($generated@@545 T@U) ) (!  (and (= (type $generated@@545) $generated@@64) ($generated@@74 $generated@@542 ($generated@@141 $generated@@545 $generated@@543) $generated@@544))
 :pattern ( ($generated@@74 $generated@@542 ($generated@@141 $generated@@545 $generated@@543) $generated@@544))
))))) ($generated@@243 ($generated@@150 $generated@@542) $generated@@543 $generated@@544))
 :pattern ( ($generated@@243 ($generated@@150 $generated@@542) $generated@@543 $generated@@544))
)))
(assert (forall (($generated@@546 T@U) ($generated@@547 T@U) ) (!  (=> (and (= (type $generated@@546) $generated@@151) (= (type $generated@@547) $generated@@151)) (= ($generated@@217 ($generated@@238 $generated@@546) ($generated@@238 $generated@@547)) ($generated@@238 ($generated@@217 $generated@@546 $generated@@547))))
 :pattern ( ($generated@@217 ($generated@@238 $generated@@546) ($generated@@238 $generated@@547)))
)))
(assert (forall (($generated@@548 Int) ) (! (= ($generated@@265 ($generated@@8 ($generated@@134 $generated@@548))) ($generated@@238 ($generated@@265 ($generated@@8 $generated@@548))))
 :pattern ( ($generated@@265 ($generated@@8 ($generated@@134 $generated@@548))))
)))
(assert (forall (($generated@@549 T@U) ) (! (= ($generated@@265 ($generated@@238 $generated@@549)) ($generated@@238 ($generated@@265 $generated@@549)))
 :pattern ( ($generated@@265 ($generated@@238 $generated@@549)))
)))
(assert (forall (($generated@@550 T@U) ) (! (let (($generated@@551 ($generated@@258 (type $generated@@550))))
 (=> (and (= (type $generated@@550) ($generated@@257 $generated@@551)) (= ($generated@@256 $generated@@550) 0)) (= $generated@@550 ($generated@@255 $generated@@551))))
 :pattern ( ($generated@@256 $generated@@550))
)))
(assert (forall (($generated@@552 T@U) ($generated@@553 T@U) ($generated@@554 T@U) ) (! (let (($generated@@555 (type $generated@@553)))
 (=> (and (and (= (type $generated@@552) ($generated@@76 $generated@@555 $generated@@2)) (= (type $generated@@554) $generated@@2)) (<= 0 ($generated $generated@@554))) (= ($generated@@270 ($generated@@82 $generated@@552 $generated@@553 $generated@@554)) (+ (- ($generated@@270 $generated@@552) ($generated ($generated@@81 $generated@@552 $generated@@553))) ($generated $generated@@554)))))
 :pattern ( ($generated@@270 ($generated@@82 $generated@@552 $generated@@553 $generated@@554)))
)))
(assert (forall (($generated@@556 T@U) ($generated@@557 T@U) ) (!  (=> (and (= (type $generated@@556) ($generated@@76 $generated@@77 $generated@@78)) (= (type $generated@@557) $generated@@2)) ($generated@@74 $generated@@557 $generated@@46 $generated@@556))
 :pattern ( ($generated@@74 $generated@@557 $generated@@46 $generated@@556))
)))
(assert (forall (($generated@@558 T@U) ($generated@@559 T@U) ) (!  (=> (and (= (type $generated@@558) ($generated@@76 $generated@@77 $generated@@78)) (= (type $generated@@559) $generated@@3)) ($generated@@74 $generated@@559 $generated@@47 $generated@@558))
 :pattern ( ($generated@@74 $generated@@559 $generated@@47 $generated@@558))
)))
(assert (forall (($generated@@560 T@U) ($generated@@561 T@U) ) (!  (=> (and (= (type $generated@@560) ($generated@@76 $generated@@77 $generated@@78)) (= (type $generated@@561) $generated@@4)) ($generated@@74 $generated@@561 $generated@@44 $generated@@560))
 :pattern ( ($generated@@74 $generated@@561 $generated@@44 $generated@@560))
)))
(assert (forall (($generated@@562 T@U) ($generated@@563 T@U) ) (!  (=> (and (= (type $generated@@562) ($generated@@76 $generated@@77 $generated@@78)) (= (type $generated@@563) $generated@@423)) ($generated@@74 $generated@@563 $generated@@45 $generated@@562))
 :pattern ( ($generated@@74 $generated@@563 $generated@@45 $generated@@562))
)))
(assert (forall (($generated@@564 T@U) ($generated@@565 T@U) ) (!  (=> (and (= (type $generated@@564) ($generated@@76 $generated@@77 $generated@@78)) (= (type $generated@@565) $generated@@151)) ($generated@@74 $generated@@565 $generated@@48 $generated@@564))
 :pattern ( ($generated@@74 $generated@@565 $generated@@48 $generated@@564))
)))
(assert (forall (($generated@@566 T@U) ($generated@@567 T@U) ) (!  (=> (and (= (type $generated@@566) ($generated@@257 $generated@@151)) (= (type $generated@@567) $generated@@64)) (= ($generated@@138 $generated@@566 ($generated@@465 $generated@@567)) (forall (($generated@@568 Int) ) (!  (=> (and (<= 0 $generated@@568) (< $generated@@568 ($generated@@256 $generated@@566))) ($generated@@218 ($generated@@466 $generated@@566 $generated@@568) $generated@@567))
 :pattern ( ($generated@@466 $generated@@566 $generated@@568))
))))
 :pattern ( ($generated@@138 $generated@@566 ($generated@@465 $generated@@567)))
)))
(assert (forall (($generated@@570 T@U) ($generated@@571 Int) ) (!  (=> (= (type $generated@@570) ($generated@@257 $generated@@151)) (=> (and (<= 0 $generated@@571) (< $generated@@571 ($generated@@256 $generated@@570))) (< ($generated@@504 ($generated@@353 $generated@@142 ($generated@@466 $generated@@570 $generated@@571))) ($generated@@569 $generated@@570))))
 :pattern ( ($generated@@504 ($generated@@353 $generated@@142 ($generated@@466 $generated@@570 $generated@@571))))
)))
(assert (forall (($generated@@572 T@U) ($generated@@573 T@U) ($generated@@574 T@U) ) (!  (=> (and (and (and (= (type $generated@@572) ($generated@@278 $generated@@151 $generated@@151)) (= (type $generated@@573) $generated@@64)) (= (type $generated@@574) $generated@@64)) ($generated@@138 $generated@@572 ($generated@@381 $generated@@573 $generated@@574))) (and (and ($generated@@138 ($generated@@276 $generated@@572) ($generated@@227 $generated@@573)) ($generated@@138 ($generated@@319 $generated@@572) ($generated@@227 $generated@@574))) ($generated@@138 ($generated@@352 $generated@@572) ($generated@@227 ($generated@@141 $generated@@573 $generated@@574)))))
 :pattern ( ($generated@@138 $generated@@572 ($generated@@381 $generated@@573 $generated@@574)))
)))
(assert (forall (($generated@@575 T@U) ($generated@@576 T@U) ($generated@@577 T@U) ) (!  (=> (and (and (and (= (type $generated@@575) ($generated@@296 $generated@@151 $generated@@151)) (= (type $generated@@576) $generated@@64)) (= (type $generated@@577) $generated@@64)) ($generated@@138 $generated@@575 ($generated@@389 $generated@@576 $generated@@577))) (and (and ($generated@@138 ($generated@@294 $generated@@575) ($generated@@232 $generated@@576)) ($generated@@138 ($generated@@330 $generated@@575) ($generated@@232 $generated@@577))) ($generated@@138 ($generated@@363 $generated@@575) ($generated@@232 ($generated@@141 $generated@@576 $generated@@577)))))
 :pattern ( ($generated@@138 $generated@@575 ($generated@@389 $generated@@576 $generated@@577)))
)))
(assert (forall (($generated@@578 T@U) ) (!  (=> (= (type $generated@@578) $generated@@2) ($generated@@138 $generated@@578 $generated@@46))
 :pattern ( ($generated@@138 $generated@@578 $generated@@46))
)))
(assert (forall (($generated@@579 T@U) ) (!  (=> (= (type $generated@@579) $generated@@3) ($generated@@138 $generated@@579 $generated@@47))
 :pattern ( ($generated@@138 $generated@@579 $generated@@47))
)))
(assert (forall (($generated@@580 T@U) ) (!  (=> (= (type $generated@@580) $generated@@4) ($generated@@138 $generated@@580 $generated@@44))
 :pattern ( ($generated@@138 $generated@@580 $generated@@44))
)))
(assert (forall (($generated@@581 T@U) ) (!  (=> (= (type $generated@@581) $generated@@423) ($generated@@138 $generated@@581 $generated@@45))
 :pattern ( ($generated@@138 $generated@@581 $generated@@45))
)))
(assert (forall (($generated@@582 T@U) ) (!  (=> (= (type $generated@@582) $generated@@151) ($generated@@138 $generated@@582 $generated@@48))
 :pattern ( ($generated@@138 $generated@@582 $generated@@48))
)))
(push 1)
(declare-fun ControlFlow (Int Int) Int)
(declare-fun $generated@@583 () T@U)
(declare-fun $generated@@584 () T@U)
(declare-fun $generated@@585 () T@U)
(declare-fun $generated@@586 () Int)
(declare-fun $generated@@587 () Int)
(declare-fun $generated@@588 () Int)
(declare-fun $generated@@589 () Int)
(declare-fun $generated@@590 () Int)
(declare-fun $generated@@591 () Int)
(declare-fun $generated@@592 () Int)
(declare-fun $generated@@593 () Int)
(declare-fun $generated@@594 () Int)
(declare-fun $generated@@595 (T@U) Bool)
(assert  (and (and (= (type $generated@@583) ($generated@@163 $generated@@77 $generated@@4)) (= (type $generated@@584) $generated@@77)) (= (type $generated@@585) ($generated@@76 $generated@@77 $generated@@78))))
(set-option :timeout 0)
(set-option :rlimit 0)
(assert (not
 (=> (= (ControlFlow 0 0) 3) (let (($generated@@596  (=> (= $generated@@583 ($generated@@162 $generated@@584 $generated@@585 $generated@@60 false)) (=> (and (and ($generated@@74 ($generated@@8 $generated@@586) $generated@@46 $generated@@585) ($generated@@74 ($generated@@8 $generated@@587) $generated@@46 $generated@@585)) (and ($generated@@135 $generated@@586 $generated@@587) ($generated@@135 $generated@@586 $generated@@587))) (=> (and (and (and (and (= $generated@@588 ($generated@@133 $generated@@586 $generated@@587)) $generated@@340) (and (= $generated@@589 ($generated@@134 $generated@@341)) $generated@@340)) (and (and ($generated@@138 ($generated@@8 $generated@@589) $generated@@46) (= $generated@@590 $generated@@589)) (and $generated@@340 (= $generated@@591 ($generated@@134 5))))) (and (and (and $generated@@340 (= $generated@@592 ($generated@@134 $generated@@341))) (and $generated@@340 ($generated@@138 ($generated@@8 $generated@@592) $generated@@46))) (and (and (= $generated@@593 $generated@@592) $generated@@340) (and (= $generated@@594 ($generated@@134 5)) (= (ControlFlow 0 2) (- 0 1)))))) (= $generated@@591 $generated@@594))))))
(let (($generated@@597  (=> (and (and ($generated@@242 $generated@@585) ($generated@@595 $generated@@585)) (and (= 1 $generated@@132) (= (ControlFlow 0 3) 2))) $generated@@596)))
$generated@@597)))
))
(check-sat)
(pop 1)
; Valid
(get-info :rlimit)
(reset)
(set-option :rlimit 0)
; did a full reset
(reset)
(set-option :print-success false)
(set-info :smt-lib-version 2.6)
(set-option :auto_config false)
(set-option :type_check true)
(set-option :smt.case_split 3)
(set-option :smt.qi.eager_threshold 100)
(set-option :smt.delay_units true)
(set-option :smt.arith.solver 2)
(set-option :smt.mbqi false)
(set-option :model.compact false)
(set-option :model.v2 true)
(set-option :pp.bv_literals false)
; done setting options


(set-info :category "industrial")
(declare-sort |T@U| 0)
(declare-sort |T@T| 0)
(declare-fun real_pow (Real Real) Real)
(declare-fun UOrdering2 (|T@U| |T@U|) Bool)
(declare-fun UOrdering3 (|T@T| |T@U| |T@U|) Bool)
(declare-fun tickleBool (Bool) Bool)
(assert (and (tickleBool true) (tickleBool false)))
(declare-fun $generated (T@U) Int)
(declare-fun $generated@@0 (T@U) Bool)
(declare-fun $generated@@1 (T@T) Int)
(declare-fun $generated@@2 () T@T)
(declare-fun $generated@@3 () T@T)
(declare-fun $generated@@4 () T@T)
(declare-fun $generated@@5 () T@T)
(declare-fun $generated@@6 () T@T)
(declare-fun $generated@@7 () T@T)
(declare-fun $generated@@8 (Int) T@U)
(declare-fun type (T@U) T@T)
(declare-fun $generated@@9 (Real) T@U)
(declare-fun $generated@@10 (T@U) Real)
(declare-fun $generated@@11 (Bool) T@U)
(declare-fun $generated@@12 (RoundingMode) T@U)
(declare-fun $generated@@13 (T@U) RoundingMode)
(declare-fun $generated@@14 (String) T@U)
(declare-fun $generated@@15 (T@U) String)
(declare-fun $generated@@16 ((RegEx String)) T@U)
(declare-fun $generated@@17 (T@U) (RegEx String))
(declare-fun $generated@@44 () T@U)
(declare-fun $generated@@45 () T@U)
(declare-fun $generated@@46 () T@U)
(declare-fun $generated@@47 () T@U)
(declare-fun $generated@@48 () T@U)
(declare-fun $generated@@49 () T@U)
(declare-fun $generated@@50 () T@U)
(declare-fun $generated@@51 () T@U)
(declare-fun $generated@@52 () T@U)
(declare-fun $generated@@53 () T@U)
(declare-fun $generated@@54 () T@U)
(declare-fun $generated@@55 () T@U)
(declare-fun $generated@@56 () T@U)
(declare-fun $generated@@57 () T@U)
(declare-fun $generated@@58 () T@U)
(declare-fun $generated@@59 () T@U)
(declare-fun $generated@@60 () T@U)
(declare-fun $generated@@61 () T@U)
(declare-fun $generated@@62 () T@U)
(declare-fun $generated@@63 () T@U)
(declare-fun $generated@@64 () T@T)
(declare-fun $generated@@65 () T@T)
(declare-fun $generated@@66 (T@T) T@T)
(declare-fun $generated@@67 (T@T) T@T)
(declare-fun $generated@@68 () T@T)
(declare-fun $generated@@69 () T@T)
(declare-fun $generated@@72 (T@U) T@U)
(declare-fun $generated@@74 (T@U T@U T@U) Bool)
(declare-fun $generated@@75 (Int) T@U)
(declare-fun $generated@@76 (T@T T@T) T@T)
(declare-fun $generated@@77 () T@T)
(declare-fun $generated@@78 () T@T)
(declare-fun $generated@@79 (T@T) T@T)
(declare-fun $generated@@80 (T@T) T@T)
(declare-fun $generated@@81 (T@U T@U) T@U)
(declare-fun $generated@@82 (T@U T@U T@U) T@U)
(declare-fun $generated@@83 (T@U T@U) T@U)
(declare-fun $generated@@84 (T@U T@U T@U) T@U)
(declare-fun $generated@@132 () Int)
(declare-fun $generated@@133 (Int Int) Int)
(declare-fun $generated@@134 (Int) Int)
(declare-fun $generated@@135 (Int Int) Bool)
(declare-fun $generated@@138 (T@U T@U) Bool)
(declare-fun $generated@@140 (T@U) Bool)
(declare-fun $generated@@141 (T@U T@U) T@U)
(declare-fun $generated@@142 () T@T)
(declare-fun $generated@@148 (T@U T@U) Bool)
(declare-fun $generated@@149 (T@U) T@U)
(declare-fun $generated@@150 (T@U) T@U)
(declare-fun $generated@@151 () T@T)
(declare-fun $generated@@156 (T@U) T@U)
(declare-fun $generated@@157 (T@U) Bool)
(declare-fun $generated@@161 (T@U T@U T@U) T@U)
(declare-fun $generated@@162 (T@U T@U T@U Bool) T@U)
(declare-fun $generated@@163 (T@T T@T) T@T)
(declare-fun $generated@@164 (T@T) T@T)
(declare-fun $generated@@165 (T@T) T@T)
(declare-fun $generated@@166 (T@U T@U T@U T@U) T@U)
(declare-fun $generated@@217 (T@U T@U T@U Bool) T@U)
(declare-fun $generated@@229 (T@U T@U) T@U)
(declare-fun $generated@@230 (T@U T@U) Bool)
(declare-fun $generated@@239 (T@U) T@U)
(declare-fun $generated@@244 (T@U) T@U)
(declare-fun $generated@@250 (T@U) T@U)
(declare-fun $generated@@254 (T@U) Bool)
(declare-fun $generated@@255 (T@U T@U T@U) Bool)
(declare-fun $generated@@261 (T@U) T@U)
(declare-fun $generated@@267 (T@T) T@U)
(declare-fun $generated@@268 (T@U) Int)
(declare-fun $generated@@269 (T@T) T@T)
(declare-fun $generated@@270 (T@T) T@T)
(declare-fun $generated@@277 (T@U) T@U)
(declare-fun $generated@@282 (T@U) Int)
(declare-fun $generated@@283 (T@T) T@U)
(declare-fun $generated@@288 (T@U) T@U)
(declare-fun $generated@@289 (T@T T@T) T@U)
(declare-fun $generated@@290 (T@T T@T) T@T)
(declare-fun $generated@@291 (T@T) T@T)
(declare-fun $generated@@292 (T@T) T@T)
(declare-fun $generated@@306 (T@U) T@U)
(declare-fun $generated@@307 (T@T T@T) T@U)
(declare-fun $generated@@308 (T@T T@T) T@T)
(declare-fun $generated@@309 (T@T) T@T)
(declare-fun $generated@@310 (T@T) T@T)
(declare-fun $generated@@331 (T@U) T@U)
(declare-fun $generated@@342 (T@U) T@U)
(declare-fun $generated@@362 (T@U) T@U)
(declare-fun $generated@@363 (T@T T@U) T@U)
(declare-fun $generated@@364 (T@U) T@U)
(declare-fun $generated@@373 (T@U) T@U)
(declare-fun $generated@@374 (T@U) T@U)
(declare-fun $generated@@391 (T@U T@U) T@U)
(declare-fun $generated@@399 (T@U T@U) T@U)
(declare-fun $generated@@409 (T@T) T@U)
(declare-fun $generated@@433 () T@T)
(declare-fun $generated@@441 (T@U) T@U)
(declare-fun $generated@@445 (T@U) T@U)
(declare-fun $generated@@451 (T@U) T@U)
(declare-fun $generated@@455 (T@U) T@U)
(declare-fun $generated@@463 (T@U) T@U)
(declare-fun $generated@@467 (T@U) T@U)
(declare-fun $generated@@475 (T@U) T@U)
(declare-fun $generated@@476 (T@U Int) T@U)
(declare-fun $generated@@485 (T@U) Int)
(declare-fun $generated@@487 (T@U) T@U)
(declare-fun $generated@@491 (T@U) T@U)
(declare-fun $generated@@495 (T@U) T@U)
(declare-fun $generated@@499 (T@U) T@U)
(declare-fun $generated@@513 (T@U) Int)
(declare-fun $generated@@514 (T@U) Int)
(declare-fun $generated@@530 (T@U) T@U)
(declare-fun $generated@@579 (T@U) Int)
(assert  (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (= ($generated@@1 $generated@@2) 0) (= ($generated@@1 $generated@@3) 1)) (= ($generated@@1 $generated@@4) 2)) (= ($generated@@1 $generated@@5) 3)) (= ($generated@@1 $generated@@6) 4)) (= ($generated@@1 $generated@@7) 5)) (forall (($generated@@18 Int) ) (! (= ($generated ($generated@@8 $generated@@18)) $generated@@18)
 :pattern ( ($generated@@8 $generated@@18))
))) (forall (($generated@@19 T@U) ) (!  (=> (= (type $generated@@19) $generated@@2) (= ($generated@@8 ($generated $generated@@19)) $generated@@19))
 :pattern ( ($generated $generated@@19))
))) (forall (($generated@@20 Int) ) (! (= (type ($generated@@8 $generated@@20)) $generated@@2)
 :pattern ( ($generated@@8 $generated@@20))
))) (forall (($generated@@21 Real) ) (! (= ($generated@@10 ($generated@@9 $generated@@21)) $generated@@21)
 :pattern ( ($generated@@9 $generated@@21))
))) (forall (($generated@@22 T@U) ) (!  (=> (= (type $generated@@22) $generated@@3) (= ($generated@@9 ($generated@@10 $generated@@22)) $generated@@22))
 :pattern ( ($generated@@10 $generated@@22))
))) (forall (($generated@@23 Real) ) (! (= (type ($generated@@9 $generated@@23)) $generated@@3)
 :pattern ( ($generated@@9 $generated@@23))
))) (forall (($generated@@24 Bool) ) (! (= ($generated@@0 ($generated@@11 $generated@@24)) $generated@@24)
 :pattern ( ($generated@@11 $generated@@24))
))) (forall (($generated@@25 T@U) ) (!  (=> (= (type $generated@@25) $generated@@4) (= ($generated@@11 ($generated@@0 $generated@@25)) $generated@@25))
 :pattern ( ($generated@@0 $generated@@25))
))) (forall (($generated@@26 Bool) ) (! (= (type ($generated@@11 $generated@@26)) $generated@@4)
 :pattern ( ($generated@@11 $generated@@26))
))) (forall (($generated@@27 RoundingMode) ) (! (= ($generated@@13 ($generated@@12 $generated@@27)) $generated@@27)
 :pattern ( ($generated@@12 $generated@@27))
))) (forall (($generated@@28 T@U) ) (!  (=> (= (type $generated@@28) $generated@@5) (= ($generated@@12 ($generated@@13 $generated@@28)) $generated@@28))
 :pattern ( ($generated@@13 $generated@@28))
))) (forall (($generated@@29 RoundingMode) ) (! (= (type ($generated@@12 $generated@@29)) $generated@@5)
 :pattern ( ($generated@@12 $generated@@29))
))) (forall (($generated@@30 String) ) (! (= ($generated@@15 ($generated@@14 $generated@@30)) $generated@@30)
 :pattern ( ($generated@@14 $generated@@30))
))) (forall (($generated@@31 T@U) ) (!  (=> (= (type $generated@@31) $generated@@6) (= ($generated@@14 ($generated@@15 $generated@@31)) $generated@@31))
 :pattern ( ($generated@@15 $generated@@31))
))) (forall (($generated@@32 String) ) (! (= (type ($generated@@14 $generated@@32)) $generated@@6)
 :pattern ( ($generated@@14 $generated@@32))
))) (forall (($generated@@33 (RegEx String)) ) (! (= ($generated@@17 ($generated@@16 $generated@@33)) $generated@@33)
 :pattern ( ($generated@@16 $generated@@33))
))) (forall (($generated@@34 T@U) ) (!  (=> (= (type $generated@@34) $generated@@7) (= ($generated@@16 ($generated@@17 $generated@@34)) $generated@@34))
 :pattern ( ($generated@@17 $generated@@34))
))) (forall (($generated@@35 (RegEx String)) ) (! (= (type ($generated@@16 $generated@@35)) $generated@@7)
 :pattern ( ($generated@@16 $generated@@35))
))))
(assert (forall (($generated@@36 T@U) ) (! (UOrdering2 $generated@@36 $generated@@36)
 :no-pattern ($generated $generated@@36)
 :no-pattern ($generated@@0 $generated@@36)
)))
(assert (forall (($generated@@37 T@U) ($generated@@38 T@U) ($generated@@39 T@U) ) (! (let (($generated@@40 (type $generated@@37)))
 (=> (and (and (= (type $generated@@38) $generated@@40) (= (type $generated@@39) $generated@@40)) (and (UOrdering2 $generated@@37 $generated@@38) (UOrdering2 $generated@@38 $generated@@39))) (UOrdering2 $generated@@37 $generated@@39)))
 :pattern ( (UOrdering2 $generated@@37 $generated@@38) (UOrdering2 $generated@@38 $generated@@39))
)))
(assert (forall (($generated@@41 T@U) ($generated@@42 T@U) ) (! (let (($generated@@43 (type $generated@@41)))
 (=> (= (type $generated@@42) $generated@@43) (=> (and (UOrdering2 $generated@@41 $generated@@42) (UOrdering2 $generated@@42 $generated@@41)) (= $generated@@41 $generated@@42))))
 :pattern ( (UOrdering2 $generated@@41 $generated@@42) (UOrdering2 $generated@@42 $generated@@41))
)))
(assert  (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (= ($generated@@1 $generated@@64) 6) (= (type $generated@@44) $generated@@64)) (= (type $generated@@45) $generated@@64)) (= (type $generated@@46) $generated@@64)) (= (type $generated@@47) $generated@@64)) (= (type $generated@@48) $generated@@64)) (= ($generated@@1 $generated@@65) 7)) (= (type $generated@@49) $generated@@65)) (= (type $generated@@50) $generated@@65)) (= (type $generated@@51) $generated@@65)) (= (type $generated@@52) $generated@@65)) (= (type $generated@@53) $generated@@65)) (= (type $generated@@54) $generated@@65)) (= (type $generated@@55) $generated@@65)) (= (type $generated@@56) $generated@@65)) (= (type $generated@@57) $generated@@65)) (= (type $generated@@58) $generated@@65)) (= (type $generated@@59) $generated@@65)) (forall (($generated@@70 T@T) ) (= ($generated@@1 ($generated@@66 $generated@@70)) 8))) (forall (($generated@@71 T@T) ) (! (= ($generated@@67 ($generated@@66 $generated@@71)) $generated@@71)
 :pattern ( ($generated@@66 $generated@@71))
))) (= (type $generated@@60) ($generated@@66 $generated@@4))) (= ($generated@@1 $generated@@68) 9)) (= (type $generated@@61) $generated@@68)) (= (type $generated@@62) $generated@@65)) (= ($generated@@1 $generated@@69) 10)) (= (type $generated@@63) $generated@@69)))
(assert (distinct $generated@@44 $generated@@45 $generated@@46 $generated@@47 $generated@@48 $generated@@49 $generated@@50 $generated@@51 $generated@@52 $generated@@53 $generated@@54 $generated@@55 $generated@@56 $generated@@57 $generated@@58 $generated@@59 $generated@@60 $generated@@61 $generated@@62 $generated@@63)
)
(assert (forall (($generated@@73 T@U) ) (! (= (type ($generated@@72 $generated@@73)) $generated@@65)
 :pattern ( ($generated@@72 $generated@@73))
)))
(assert (= ($generated@@72 $generated@@44) $generated@@49))
(assert (= ($generated@@72 $generated@@45) $generated@@50))
(assert (= ($generated@@72 $generated@@46) $generated@@51))
(assert (= ($generated@@72 $generated@@47) $generated@@52))
(assert (= ($generated@@72 $generated@@48) $generated@@53))
(assert  (and (and (and (and (and (and (and (and (and (and (and (and (and (forall (($generated@@85 T@T) ($generated@@86 T@T) ) (= ($generated@@1 ($generated@@76 $generated@@85 $generated@@86)) 11)) (forall (($generated@@87 T@T) ($generated@@88 T@T) ) (! (= ($generated@@79 ($generated@@76 $generated@@87 $generated@@88)) $generated@@87)
 :pattern ( ($generated@@76 $generated@@87 $generated@@88))
))) (forall (($generated@@89 T@T) ($generated@@90 T@T) ) (! (= ($generated@@80 ($generated@@76 $generated@@89 $generated@@90)) $generated@@90)
 :pattern ( ($generated@@76 $generated@@89 $generated@@90))
))) (forall (($generated@@91 T@U) ($generated@@92 T@U) ) (! (let (($generated@@93 ($generated@@80 (type $generated@@91))))
(= (type ($generated@@81 $generated@@91 $generated@@92)) $generated@@93))
 :pattern ( ($generated@@81 $generated@@91 $generated@@92))
))) (forall (($generated@@94 T@U) ($generated@@95 T@U) ($generated@@96 T@U) ) (! (let (($generated@@97 (type $generated@@96)))
(let (($generated@@98 (type $generated@@95)))
(= (type ($generated@@82 $generated@@94 $generated@@95 $generated@@96)) ($generated@@76 $generated@@98 $generated@@97))))
 :pattern ( ($generated@@82 $generated@@94 $generated@@95 $generated@@96))
))) (forall (($generated@@99 T@U) ($generated@@100 T@U) ($generated@@101 T@U) ) (! (let (($generated@@102 ($generated@@80 (type $generated@@99))))
 (=> (= (type $generated@@101) $generated@@102) (= ($generated@@81 ($generated@@82 $generated@@99 $generated@@100 $generated@@101) $generated@@100) $generated@@101)))
 :weight 0
))) (and (forall (($generated@@103 T@U) ($generated@@104 T@U) ($generated@@105 T@U) ($generated@@106 T@U) ) (!  (or (= $generated@@105 $generated@@106) (= ($generated@@81 ($generated@@82 $generated@@104 $generated@@105 $generated@@103) $generated@@106) ($generated@@81 $generated@@104 $generated@@106)))
 :weight 0
)) (forall (($generated@@107 T@U) ($generated@@108 T@U) ($generated@@109 T@U) ($generated@@110 T@U) ) (!  (or true (= ($generated@@81 ($generated@@82 $generated@@108 $generated@@109 $generated@@107) $generated@@110) ($generated@@81 $generated@@108 $generated@@110)))
 :weight 0
)))) (= ($generated@@1 $generated@@77) 12)) (forall (($generated@@111 T@U) ($generated@@112 T@U) ) (! (let (($generated@@113 ($generated@@67 (type $generated@@112))))
(= (type ($generated@@83 $generated@@111 $generated@@112)) $generated@@113))
 :pattern ( ($generated@@83 $generated@@111 $generated@@112))
))) (= ($generated@@1 $generated@@78) 13)) (forall (($generated@@114 T@U) ($generated@@115 T@U) ($generated@@116 T@U) ) (! (= (type ($generated@@84 $generated@@114 $generated@@115 $generated@@116)) $generated@@78)
 :pattern ( ($generated@@84 $generated@@114 $generated@@115 $generated@@116))
))) (forall (($generated@@117 T@U) ($generated@@118 T@U) ($generated@@119 T@U) ) (! (let (($generated@@120 ($generated@@67 (type $generated@@118))))
 (=> (= (type $generated@@119) $generated@@120) (= ($generated@@83 ($generated@@84 $generated@@117 $generated@@118 $generated@@119) $generated@@118) $generated@@119)))
 :weight 0
))) (and (forall (($generated@@121 T@U) ($generated@@122 T@U) ($generated@@123 T@U) ($generated@@124 T@U) ) (!  (or (= $generated@@123 $generated@@124) (= ($generated@@83 ($generated@@84 $generated@@122 $generated@@123 $generated@@121) $generated@@124) ($generated@@83 $generated@@122 $generated@@124)))
 :weight 0
)) (forall (($generated@@125 T@U) ($generated@@126 T@U) ($generated@@127 T@U) ($generated@@128 T@U) ) (!  (or true (= ($generated@@83 ($generated@@84 $generated@@126 $generated@@127 $generated@@125) $generated@@128) ($generated@@83 $generated@@126 $generated@@128)))
 :weight 0
)))) (forall (($generated@@129 Int) ) (! (= (type ($generated@@75 $generated@@129)) $generated@@64)
 :pattern ( ($generated@@75 $generated@@129))
))))
(assert (forall (($generated@@130 T@U) ($generated@@131 T@U) ) (!  (=> (and (= (type $generated@@130) $generated@@2) (= (type $generated@@131) ($generated@@76 $generated@@77 $generated@@78))) ($generated@@74 $generated@@130 ($generated@@75 0) $generated@@131))
 :pattern ( ($generated@@74 $generated@@130 ($generated@@75 0) $generated@@131))
)))
(assert  (=> (<= 0 $generated@@132) (forall (($generated@@136 Int) ($generated@@137 Int) ) (!  (=> (or ($generated@@135 ($generated@@134 $generated@@136) ($generated@@134 $generated@@137)) (not (= 0 $generated@@132))) (= ($generated@@133 ($generated@@134 $generated@@136) ($generated@@134 $generated@@137)) ($generated@@134 $generated@@136)))
 :weight 3
 :pattern ( ($generated@@133 ($generated@@134 $generated@@136) ($generated@@134 $generated@@137)))
))))
(assert (forall (($generated@@139 T@U) ) (!  (=> (= (type $generated@@139) $generated@@2) ($generated@@138 $generated@@139 ($generated@@75 0)))
 :pattern ( ($generated@@138 $generated@@139 ($generated@@75 0)))
)))
(assert  (and (= ($generated@@1 $generated@@142) 14) (forall (($generated@@143 T@U) ($generated@@144 T@U) ) (! (= (type ($generated@@141 $generated@@143 $generated@@144)) $generated@@64)
 :pattern ( ($generated@@141 $generated@@143 $generated@@144))
))))
(assert (forall (($generated@@145 T@U) ($generated@@146 T@U) ($generated@@147 T@U) ) (!  (=> (and (and (and (= (type $generated@@145) $generated@@64) (= (type $generated@@146) $generated@@64)) (= (type $generated@@147) $generated@@142)) ($generated@@138 $generated@@147 ($generated@@141 $generated@@145 $generated@@146))) ($generated@@140 $generated@@147))
 :pattern ( ($generated@@140 $generated@@147) ($generated@@138 $generated@@147 ($generated@@141 $generated@@145 $generated@@146)))
)))
(assert  (and (and (= ($generated@@1 $generated@@151) 15) (forall (($generated@@152 T@U) ) (! (= (type ($generated@@149 $generated@@152)) $generated@@151)
 :pattern ( ($generated@@149 $generated@@152))
))) (forall (($generated@@153 T@U) ) (! (= (type ($generated@@150 $generated@@153)) $generated@@151)
 :pattern ( ($generated@@150 $generated@@153))
))))
(assert (forall (($generated@@154 T@U) ($generated@@155 T@U) ) (!  (=> (and (and (= (type $generated@@154) $generated@@142) (= (type $generated@@155) $generated@@142)) true) (= ($generated@@148 $generated@@154 $generated@@155)  (and (= ($generated@@149 $generated@@154) ($generated@@149 $generated@@155)) (= ($generated@@150 $generated@@154) ($generated@@150 $generated@@155)))))
 :pattern ( ($generated@@148 $generated@@154 $generated@@155))
)))
(assert (forall (($generated@@158 T@U) ) (! (= (type ($generated@@156 $generated@@158)) $generated@@64)
 :pattern ( ($generated@@156 $generated@@158))
)))
(assert (forall (($generated@@159 T@U) ($generated@@160 T@U) ) (!  (=> (and (and (= (type $generated@@159) ($generated@@76 $generated@@151 $generated@@2)) (= (type $generated@@160) $generated@@64)) ($generated@@138 $generated@@159 ($generated@@156 $generated@@160))) ($generated@@157 $generated@@159))
 :pattern ( ($generated@@138 $generated@@159 ($generated@@156 $generated@@160)))
)))
(assert  (and (and (and (and (and (and (and (forall (($generated@@167 T@T) ($generated@@168 T@T) ) (= ($generated@@1 ($generated@@163 $generated@@167 $generated@@168)) 16)) (forall (($generated@@169 T@T) ($generated@@170 T@T) ) (! (= ($generated@@164 ($generated@@163 $generated@@169 $generated@@170)) $generated@@169)
 :pattern ( ($generated@@163 $generated@@169 $generated@@170))
))) (forall (($generated@@171 T@T) ($generated@@172 T@T) ) (! (= ($generated@@165 ($generated@@163 $generated@@171 $generated@@172)) $generated@@172)
 :pattern ( ($generated@@163 $generated@@171 $generated@@172))
))) (forall (($generated@@173 T@U) ($generated@@174 T@U) ($generated@@175 T@U) ) (! (let (($generated@@176 ($generated@@165 (type $generated@@173))))
(= (type ($generated@@161 $generated@@173 $generated@@174 $generated@@175)) $generated@@176))
 :pattern ( ($generated@@161 $generated@@173 $generated@@174 $generated@@175))
))) (forall (($generated@@177 T@U) ($generated@@178 T@U) ($generated@@179 T@U) ($generated@@180 T@U) ) (! (let (($generated@@181 (type $generated@@180)))
(let (($generated@@182 (type $generated@@178)))
(= (type ($generated@@166 $generated@@177 $generated@@178 $generated@@179 $generated@@180)) ($generated@@163 $generated@@182 $generated@@181))))
 :pattern ( ($generated@@166 $generated@@177 $generated@@178 $generated@@179 $generated@@180))
))) (forall (($generated@@183 T@U) ($generated@@184 T@U) ($generated@@185 T@U) ($generated@@186 T@U) ) (! (let (($generated@@187 ($generated@@165 (type $generated@@183))))
 (=> (= (type $generated@@186) $generated@@187) (= ($generated@@161 ($generated@@166 $generated@@183 $generated@@184 $generated@@185 $generated@@186) $generated@@184 $generated@@185) $generated@@186)))
 :weight 0
))) (and (and (forall (($generated@@188 T@U) ($generated@@189 T@U) ($generated@@190 T@U) ($generated@@191 T@U) ($generated@@192 T@U) ($generated@@193 T@U) ) (!  (or (= $generated@@190 $generated@@192) (= ($generated@@161 ($generated@@166 $generated@@189 $generated@@190 $generated@@191 $generated@@188) $generated@@192 $generated@@193) ($generated@@161 $generated@@189 $generated@@192 $generated@@193)))
 :weight 0
)) (forall (($generated@@194 T@U) ($generated@@195 T@U) ($generated@@196 T@U) ($generated@@197 T@U) ($generated@@198 T@U) ($generated@@199 T@U) ) (!  (or (= $generated@@197 $generated@@199) (= ($generated@@161 ($generated@@166 $generated@@195 $generated@@196 $generated@@197 $generated@@194) $generated@@198 $generated@@199) ($generated@@161 $generated@@195 $generated@@198 $generated@@199)))
 :weight 0
))) (forall (($generated@@200 T@U) ($generated@@201 T@U) ($generated@@202 T@U) ($generated@@203 T@U) ($generated@@204 T@U) ($generated@@205 T@U) ) (!  (or true (= ($generated@@161 ($generated@@166 $generated@@201 $generated@@202 $generated@@203 $generated@@200) $generated@@204 $generated@@205) ($generated@@161 $generated@@201 $generated@@204 $generated@@205)))
 :weight 0
)))) (forall (($generated@@206 T@U) ($generated@@207 T@U) ($generated@@208 T@U) ($generated@@209 Bool) ) (! (= (type ($generated@@162 $generated@@206 $generated@@207 $generated@@208 $generated@@209)) ($generated@@163 $generated@@77 $generated@@4))
 :pattern ( ($generated@@162 $generated@@206 $generated@@207 $generated@@208 $generated@@209))
))))
(assert (forall (($generated@@210 T@U) ($generated@@211 T@U) ($generated@@212 T@U) ($generated@@213 Bool) ($generated@@214 T@U) ($generated@@215 T@U) ) (! (let (($generated@@216 ($generated@@67 (type $generated@@215))))
 (=> (and (and (and (and (= (type $generated@@210) $generated@@77) (= (type $generated@@211) ($generated@@76 $generated@@77 $generated@@78))) (= (type $generated@@212) ($generated@@66 $generated@@4))) (= (type $generated@@214) $generated@@77)) (= (type $generated@@215) ($generated@@66 $generated@@216))) (= ($generated@@0 ($generated@@161 ($generated@@162 $generated@@210 $generated@@211 $generated@@212 $generated@@213) $generated@@214 $generated@@215))  (=> (and (not (= $generated@@214 $generated@@210)) ($generated@@0 ($generated@@83 ($generated@@81 $generated@@211 $generated@@214) $generated@@212))) $generated@@213))))
 :pattern ( ($generated@@161 ($generated@@162 $generated@@210 $generated@@211 $generated@@212 $generated@@213) $generated@@214 $generated@@215))
)))
(assert (forall (($generated@@218 T@U) ($generated@@219 T@U) ($generated@@220 T@U) ($generated@@221 Bool) ) (! (= (type ($generated@@217 $generated@@218 $generated@@219 $generated@@220 $generated@@221)) ($generated@@163 $generated@@77 $generated@@4))
 :pattern ( ($generated@@217 $generated@@218 $generated@@219 $generated@@220 $generated@@221))
)))
(assert (forall (($generated@@222 T@U) ($generated@@223 T@U) ($generated@@224 T@U) ($generated@@225 Bool) ($generated@@226 T@U) ($generated@@227 T@U) ) (! (let (($generated@@228 ($generated@@67 (type $generated@@227))))
 (=> (and (and (and (and (= (type $generated@@222) $generated@@77) (= (type $generated@@223) ($generated@@76 $generated@@77 $generated@@78))) (= (type $generated@@224) ($generated@@66 $generated@@4))) (= (type $generated@@226) $generated@@77)) (= (type $generated@@227) ($generated@@66 $generated@@228))) (= ($generated@@0 ($generated@@161 ($generated@@217 $generated@@222 $generated@@223 $generated@@224 $generated@@225) $generated@@226 $generated@@227))  (=> (and (not (= $generated@@226 $generated@@222)) ($generated@@0 ($generated@@83 ($generated@@81 $generated@@223 $generated@@226) $generated@@224))) $generated@@225))))
 :pattern ( ($generated@@161 ($generated@@217 $generated@@222 $generated@@223 $generated@@224 $generated@@225) $generated@@226 $generated@@227))
)))
(assert (forall (($generated@@231 T@U) ($generated@@232 T@U) ) (! (= (type ($generated@@229 $generated@@231 $generated@@232)) $generated@@142)
 :pattern ( ($generated@@229 $generated@@231 $generated@@232))
)))
(assert (forall (($generated@@233 T@U) ($generated@@234 T@U) ($generated@@235 T@U) ($generated@@236 T@U) ) (!  (=> (and (and (and (= (type $generated@@233) $generated@@64) (= (type $generated@@234) $generated@@64)) (= (type $generated@@235) $generated@@151)) (= (type $generated@@236) $generated@@151)) (= ($generated@@138 ($generated@@229 $generated@@235 $generated@@236) ($generated@@141 $generated@@233 $generated@@234))  (and ($generated@@230 $generated@@235 $generated@@233) ($generated@@230 $generated@@236 $generated@@234))))
 :pattern ( ($generated@@138 ($generated@@229 $generated@@235 $generated@@236) ($generated@@141 $generated@@233 $generated@@234)))
)))
(assert (forall (($generated@@237 T@U) ($generated@@238 T@U) ) (!  (=> (and (= (type $generated@@237) $generated@@142) (= (type $generated@@238) $generated@@142)) (= ($generated@@148 $generated@@237 $generated@@238) (= $generated@@237 $generated@@238)))
 :pattern ( ($generated@@148 $generated@@237 $generated@@238))
)))
(assert (forall (($generated@@240 T@U) ) (! (= (type ($generated@@239 $generated@@240)) $generated@@64)
 :pattern ( ($generated@@239 $generated@@240))
)))
(assert (forall (($generated@@241 T@U) ($generated@@242 T@U) ) (!  (=> (and (= (type $generated@@241) ($generated@@76 $generated@@151 $generated@@4)) (= (type $generated@@242) $generated@@64)) (= ($generated@@138 $generated@@241 ($generated@@239 $generated@@242)) (forall (($generated@@243 T@U) ) (!  (=> (and (= (type $generated@@243) $generated@@151) ($generated@@0 ($generated@@81 $generated@@241 $generated@@243))) ($generated@@230 $generated@@243 $generated@@242))
 :pattern ( ($generated@@81 $generated@@241 $generated@@243))
))))
 :pattern ( ($generated@@138 $generated@@241 ($generated@@239 $generated@@242)))
)))
(assert (forall (($generated@@245 T@U) ) (! (= (type ($generated@@244 $generated@@245)) $generated@@64)
 :pattern ( ($generated@@244 $generated@@245))
)))
(assert (forall (($generated@@246 T@U) ($generated@@247 T@U) ) (!  (=> (and (= (type $generated@@246) ($generated@@76 $generated@@151 $generated@@4)) (= (type $generated@@247) $generated@@64)) (= ($generated@@138 $generated@@246 ($generated@@244 $generated@@247)) (forall (($generated@@248 T@U) ) (!  (=> (and (= (type $generated@@248) $generated@@151) ($generated@@0 ($generated@@81 $generated@@246 $generated@@248))) ($generated@@230 $generated@@248 $generated@@247))
 :pattern ( ($generated@@81 $generated@@246 $generated@@248))
))))
 :pattern ( ($generated@@138 $generated@@246 ($generated@@244 $generated@@247)))
)))
(assert (forall (($generated@@249 Int) ) (! (= ($generated@@134 $generated@@249) $generated@@249)
 :pattern ( ($generated@@134 $generated@@249))
)))
(assert (forall (($generated@@251 T@U) ) (! (let (($generated@@252 (type $generated@@251)))
(= (type ($generated@@250 $generated@@251)) $generated@@252))
 :pattern ( ($generated@@250 $generated@@251))
)))
(assert (forall (($generated@@253 T@U) ) (! (= ($generated@@250 $generated@@253) $generated@@253)
 :pattern ( ($generated@@250 $generated@@253))
)))
(assert (forall (($generated@@256 T@U) ($generated@@257 T@U) ($generated@@258 T@U) ($generated@@259 T@U) ($generated@@260 T@U) ) (!  (=> (and (and (and (and (and (= (type $generated@@256) $generated@@64) (= (type $generated@@257) $generated@@64)) (= (type $generated@@258) $generated@@151)) (= (type $generated@@259) $generated@@151)) (= (type $generated@@260) ($generated@@76 $generated@@77 $generated@@78))) ($generated@@254 $generated@@260)) (= ($generated@@74 ($generated@@229 $generated@@258 $generated@@259) ($generated@@141 $generated@@256 $generated@@257) $generated@@260)  (and ($generated@@255 $generated@@258 $generated@@256 $generated@@260) ($generated@@255 $generated@@259 $generated@@257 $generated@@260))))
 :pattern ( ($generated@@74 ($generated@@229 $generated@@258 $generated@@259) ($generated@@141 $generated@@256 $generated@@257) $generated@@260))
)))
(assert (forall (($generated@@262 T@U) ) (! (= (type ($generated@@261 $generated@@262)) $generated@@68)
 :pattern ( ($generated@@261 $generated@@262))
)))
(assert (forall (($generated@@263 T@U) ) (!  (=> (= (type $generated@@263) $generated@@142) (= ($generated@@140 $generated@@263) (= ($generated@@261 $generated@@263) $generated@@61)))
 :pattern ( ($generated@@140 $generated@@263))
)))
(assert (forall (($generated@@264 T@U) ) (!  (=> (and (= (type $generated@@264) $generated@@142) ($generated@@140 $generated@@264)) (exists (($generated@@265 T@U) ($generated@@266 T@U) ) (!  (and (and (= (type $generated@@265) $generated@@151) (= (type $generated@@266) $generated@@151)) (= $generated@@264 ($generated@@229 $generated@@265 $generated@@266)))
 :no-pattern (type $generated@@265)
 :no-pattern (type $generated@@266)
 :no-pattern ($generated $generated@@265)
 :no-pattern ($generated@@0 $generated@@265)
 :no-pattern ($generated $generated@@266)
 :no-pattern ($generated@@0 $generated@@266)
)))
 :pattern ( ($generated@@140 $generated@@264))
)))
(assert  (and (and (forall (($generated@@271 T@T) ) (= ($generated@@1 ($generated@@269 $generated@@271)) 17)) (forall (($generated@@272 T@T) ) (! (= ($generated@@270 ($generated@@269 $generated@@272)) $generated@@272)
 :pattern ( ($generated@@269 $generated@@272))
))) (forall (($generated@@273 T@T) ) (! (= (type ($generated@@267 $generated@@273)) ($generated@@269 $generated@@273))
 :pattern ( ($generated@@267 $generated@@273))
))))
(assert (forall (($generated@@274 T@T) ) (! (= ($generated@@268 ($generated@@267 $generated@@274)) 0)
 :pattern ( ($generated@@267 $generated@@274))
)))
(assert  (=> (<= 0 $generated@@132) (forall (($generated@@275 Int) ($generated@@276 Int) ) (!  (=> (or ($generated@@135 $generated@@275 $generated@@276) (not (= 0 $generated@@132))) (= ($generated@@133 $generated@@275 $generated@@276) $generated@@275))
 :pattern ( ($generated@@133 $generated@@275 $generated@@276))
))))
(assert (forall (($generated@@278 T@U) ) (! (= (type ($generated@@277 $generated@@278)) $generated@@151)
 :pattern ( ($generated@@277 $generated@@278))
)))
(assert (forall (($generated@@279 T@U) ($generated@@280 T@U) ($generated@@281 T@U) ) (!  (=> (and (= (type $generated@@280) $generated@@64) (= (type $generated@@281) ($generated@@76 $generated@@77 $generated@@78))) (= ($generated@@255 ($generated@@277 $generated@@279) $generated@@280 $generated@@281) ($generated@@74 $generated@@279 $generated@@280 $generated@@281)))
 :pattern ( ($generated@@255 ($generated@@277 $generated@@279) $generated@@280 $generated@@281))
)))
(assert (forall (($generated@@284 T@T) ) (! (= (type ($generated@@283 $generated@@284)) ($generated@@76 $generated@@284 $generated@@2))
 :pattern ( ($generated@@283 $generated@@284))
)))
(assert (forall (($generated@@285 T@U) ) (! (let (($generated@@286 ($generated@@79 (type $generated@@285))))
 (=> (= (type $generated@@285) ($generated@@76 $generated@@286 $generated@@2)) (and (= (= ($generated@@282 $generated@@285) 0) (= $generated@@285 ($generated@@283 $generated@@286))) (=> (not (= ($generated@@282 $generated@@285) 0)) (exists (($generated@@287 T@U) ) (!  (and (= (type $generated@@287) $generated@@286) (< 0 ($generated ($generated@@81 $generated@@285 $generated@@287))))
 :no-pattern (type $generated@@287)
 :no-pattern ($generated $generated@@287)
 :no-pattern ($generated@@0 $generated@@287)
))))))
 :pattern ( ($generated@@282 $generated@@285))
)))
(assert  (and (and (and (and (forall (($generated@@293 T@T) ($generated@@294 T@T) ) (= ($generated@@1 ($generated@@290 $generated@@293 $generated@@294)) 18)) (forall (($generated@@295 T@T) ($generated@@296 T@T) ) (! (= ($generated@@291 ($generated@@290 $generated@@295 $generated@@296)) $generated@@295)
 :pattern ( ($generated@@290 $generated@@295 $generated@@296))
))) (forall (($generated@@297 T@T) ($generated@@298 T@T) ) (! (= ($generated@@292 ($generated@@290 $generated@@297 $generated@@298)) $generated@@298)
 :pattern ( ($generated@@290 $generated@@297 $generated@@298))
))) (forall (($generated@@299 T@U) ) (! (let (($generated@@300 ($generated@@291 (type $generated@@299))))
(= (type ($generated@@288 $generated@@299)) ($generated@@76 $generated@@300 $generated@@4)))
 :pattern ( ($generated@@288 $generated@@299))
))) (forall (($generated@@301 T@T) ($generated@@302 T@T) ) (! (= (type ($generated@@289 $generated@@301 $generated@@302)) ($generated@@290 $generated@@301 $generated@@302))
 :pattern ( ($generated@@289 $generated@@301 $generated@@302))
))))
(assert (forall (($generated@@303 T@U) ($generated@@304 T@T) ) (! (let (($generated@@305 (type $generated@@303)))
 (not ($generated@@0 ($generated@@81 ($generated@@288 ($generated@@289 $generated@@305 $generated@@304)) $generated@@303))))
 :pattern ( (let (($generated@@305 (type $generated@@303)))
($generated@@81 ($generated@@288 ($generated@@289 $generated@@305 $generated@@304)) $generated@@303)))
)))
(assert  (and (and (and (and (forall (($generated@@311 T@T) ($generated@@312 T@T) ) (= ($generated@@1 ($generated@@308 $generated@@311 $generated@@312)) 19)) (forall (($generated@@313 T@T) ($generated@@314 T@T) ) (! (= ($generated@@309 ($generated@@308 $generated@@313 $generated@@314)) $generated@@313)
 :pattern ( ($generated@@308 $generated@@313 $generated@@314))
))) (forall (($generated@@315 T@T) ($generated@@316 T@T) ) (! (= ($generated@@310 ($generated@@308 $generated@@315 $generated@@316)) $generated@@316)
 :pattern ( ($generated@@308 $generated@@315 $generated@@316))
))) (forall (($generated@@317 T@U) ) (! (let (($generated@@318 ($generated@@309 (type $generated@@317))))
(= (type ($generated@@306 $generated@@317)) ($generated@@76 $generated@@318 $generated@@4)))
 :pattern ( ($generated@@306 $generated@@317))
))) (forall (($generated@@319 T@T) ($generated@@320 T@T) ) (! (= (type ($generated@@307 $generated@@319 $generated@@320)) ($generated@@308 $generated@@319 $generated@@320))
 :pattern ( ($generated@@307 $generated@@319 $generated@@320))
))))
(assert (forall (($generated@@321 T@U) ($generated@@322 T@T) ) (! (let (($generated@@323 (type $generated@@321)))
 (not ($generated@@0 ($generated@@81 ($generated@@306 ($generated@@307 $generated@@323 $generated@@322)) $generated@@321))))
 :pattern ( (let (($generated@@323 (type $generated@@321)))
($generated@@81 ($generated@@306 ($generated@@307 $generated@@323 $generated@@322)) $generated@@321)))
)))
(assert (forall (($generated@@324 T@U) ) (! (let (($generated@@325 ($generated@@79 (type $generated@@324))))
 (=> (= (type $generated@@324) ($generated@@76 $generated@@325 $generated@@2)) (= ($generated@@157 $generated@@324) (forall (($generated@@326 T@U) ) (!  (=> (= (type $generated@@326) $generated@@325) (and (<= 0 ($generated ($generated@@81 $generated@@324 $generated@@326))) (<= ($generated ($generated@@81 $generated@@324 $generated@@326)) ($generated@@282 $generated@@324))))
 :pattern ( ($generated@@81 $generated@@324 $generated@@326))
)))))
 :pattern ( ($generated@@157 $generated@@324))
)))
(assert (forall (($generated@@327 T@U) ) (! (let (($generated@@328 ($generated@@292 (type $generated@@327))))
(let (($generated@@329 ($generated@@291 (type $generated@@327))))
 (=> (= (type $generated@@327) ($generated@@290 $generated@@329 $generated@@328)) (or (= $generated@@327 ($generated@@289 $generated@@329 $generated@@328)) (exists (($generated@@330 T@U) ) (!  (and (= (type $generated@@330) $generated@@329) ($generated@@0 ($generated@@81 ($generated@@288 $generated@@327) $generated@@330)))
 :no-pattern (type $generated@@330)
 :no-pattern ($generated $generated@@330)
 :no-pattern ($generated@@0 $generated@@330)
))))))
 :pattern ( ($generated@@288 $generated@@327))
)))
(assert (forall (($generated@@332 T@U) ) (! (let (($generated@@333 ($generated@@292 (type $generated@@332))))
(= (type ($generated@@331 $generated@@332)) ($generated@@76 $generated@@333 $generated@@4)))
 :pattern ( ($generated@@331 $generated@@332))
)))
(assert (forall (($generated@@334 T@U) ) (! (let (($generated@@335 ($generated@@292 (type $generated@@334))))
(let (($generated@@336 ($generated@@291 (type $generated@@334))))
 (=> (= (type $generated@@334) ($generated@@290 $generated@@336 $generated@@335)) (or (= $generated@@334 ($generated@@289 $generated@@336 $generated@@335)) (exists (($generated@@337 T@U) ) (!  (and (= (type $generated@@337) $generated@@335) ($generated@@0 ($generated@@81 ($generated@@331 $generated@@334) $generated@@337)))
 :no-pattern (type $generated@@337)
 :no-pattern ($generated $generated@@337)
 :no-pattern ($generated@@0 $generated@@337)
))))))
 :pattern ( ($generated@@331 $generated@@334))
)))
(assert (forall (($generated@@338 T@U) ) (! (let (($generated@@339 ($generated@@310 (type $generated@@338))))
(let (($generated@@340 ($generated@@309 (type $generated@@338))))
 (=> (= (type $generated@@338) ($generated@@308 $generated@@340 $generated@@339)) (or (= $generated@@338 ($generated@@307 $generated@@340 $generated@@339)) (exists (($generated@@341 T@U) ) (!  (and (= (type $generated@@341) $generated@@340) ($generated@@0 ($generated@@81 ($generated@@306 $generated@@338) $generated@@341)))
 :no-pattern (type $generated@@341)
 :no-pattern ($generated $generated@@341)
 :no-pattern ($generated@@0 $generated@@341)
))))))
 :pattern ( ($generated@@306 $generated@@338))
)))
(assert (forall (($generated@@343 T@U) ) (! (let (($generated@@344 ($generated@@310 (type $generated@@343))))
(= (type ($generated@@342 $generated@@343)) ($generated@@76 $generated@@344 $generated@@4)))
 :pattern ( ($generated@@342 $generated@@343))
)))
(assert (forall (($generated@@345 T@U) ) (! (let (($generated@@346 ($generated@@310 (type $generated@@345))))
(let (($generated@@347 ($generated@@309 (type $generated@@345))))
 (=> (= (type $generated@@345) ($generated@@308 $generated@@347 $generated@@346)) (or (= $generated@@345 ($generated@@307 $generated@@347 $generated@@346)) (exists (($generated@@348 T@U) ) (!  (and (= (type $generated@@348) $generated@@346) ($generated@@0 ($generated@@81 ($generated@@342 $generated@@345) $generated@@348)))
 :no-pattern (type $generated@@348)
 :no-pattern ($generated $generated@@348)
 :no-pattern ($generated@@0 $generated@@348)
))))))
 :pattern ( ($generated@@342 $generated@@345))
)))
(assert (forall (($generated@@349 T@U) ($generated@@350 T@U) ) (!  (=> (and (= (type $generated@@349) ($generated@@76 $generated@@151 $generated@@2)) (= (type $generated@@350) $generated@@64)) (= ($generated@@138 $generated@@349 ($generated@@156 $generated@@350)) (forall (($generated@@351 T@U) ) (!  (=> (and (= (type $generated@@351) $generated@@151) (< 0 ($generated ($generated@@81 $generated@@349 $generated@@351)))) ($generated@@230 $generated@@351 $generated@@350))
 :pattern ( ($generated@@81 $generated@@349 $generated@@351))
))))
 :pattern ( ($generated@@138 $generated@@349 ($generated@@156 $generated@@350)))
)))
(assert (forall (($generated@@352 T@U) ($generated@@353 T@U) ($generated@@354 T@U) ) (!  (=> (and (and (= (type $generated@@352) ($generated@@76 $generated@@151 $generated@@4)) (= (type $generated@@353) $generated@@64)) (= (type $generated@@354) ($generated@@76 $generated@@77 $generated@@78))) (= ($generated@@74 $generated@@352 ($generated@@239 $generated@@353) $generated@@354) (forall (($generated@@355 T@U) ) (!  (=> (and (= (type $generated@@355) $generated@@151) ($generated@@0 ($generated@@81 $generated@@352 $generated@@355))) ($generated@@255 $generated@@355 $generated@@353 $generated@@354))
 :pattern ( ($generated@@81 $generated@@352 $generated@@355))
))))
 :pattern ( ($generated@@74 $generated@@352 ($generated@@239 $generated@@353) $generated@@354))
)))
(assert (forall (($generated@@356 T@U) ($generated@@357 T@U) ($generated@@358 T@U) ) (!  (=> (and (and (= (type $generated@@356) ($generated@@76 $generated@@151 $generated@@4)) (= (type $generated@@357) $generated@@64)) (= (type $generated@@358) ($generated@@76 $generated@@77 $generated@@78))) (= ($generated@@74 $generated@@356 ($generated@@244 $generated@@357) $generated@@358) (forall (($generated@@359 T@U) ) (!  (=> (and (= (type $generated@@359) $generated@@151) ($generated@@0 ($generated@@81 $generated@@356 $generated@@359))) ($generated@@255 $generated@@359 $generated@@357 $generated@@358))
 :pattern ( ($generated@@81 $generated@@356 $generated@@359))
))))
 :pattern ( ($generated@@74 $generated@@356 ($generated@@244 $generated@@357) $generated@@358))
)))
(assert (forall (($generated@@360 T@U) ) (! (let (($generated@@361 (type $generated@@360)))
(= ($generated ($generated@@81 ($generated@@283 $generated@@361) $generated@@360)) 0))
 :pattern ( (let (($generated@@361 (type $generated@@360)))
($generated@@81 ($generated@@283 $generated@@361) $generated@@360)))
)))
(assert  (and (and (forall (($generated@@365 T@U) ) (! (= (type ($generated@@362 $generated@@365)) ($generated@@76 $generated@@151 $generated@@4))
 :pattern ( ($generated@@362 $generated@@365))
)) (forall (($generated@@366 T@T) ($generated@@367 T@U) ) (! (= (type ($generated@@363 $generated@@366 $generated@@367)) $generated@@366)
 :pattern ( ($generated@@363 $generated@@366 $generated@@367))
))) (forall (($generated@@368 T@U) ) (! (let (($generated@@369 ($generated@@292 (type $generated@@368))))
(let (($generated@@370 ($generated@@291 (type $generated@@368))))
(= (type ($generated@@364 $generated@@368)) ($generated@@76 $generated@@370 $generated@@369))))
 :pattern ( ($generated@@364 $generated@@368))
))))
(assert (forall (($generated@@371 T@U) ($generated@@372 T@U) ) (!  (=> (and (= (type $generated@@371) ($generated@@290 $generated@@151 $generated@@151)) (= (type $generated@@372) $generated@@151)) (= ($generated@@0 ($generated@@81 ($generated@@362 $generated@@371) $generated@@372))  (and ($generated@@0 ($generated@@81 ($generated@@288 $generated@@371) ($generated@@149 ($generated@@363 $generated@@142 $generated@@372)))) (= ($generated@@81 ($generated@@364 $generated@@371) ($generated@@149 ($generated@@363 $generated@@142 $generated@@372))) ($generated@@150 ($generated@@363 $generated@@142 $generated@@372))))))
 :pattern ( ($generated@@81 ($generated@@362 $generated@@371) $generated@@372))
)))
(assert  (and (forall (($generated@@375 T@U) ) (! (= (type ($generated@@373 $generated@@375)) ($generated@@76 $generated@@151 $generated@@4))
 :pattern ( ($generated@@373 $generated@@375))
)) (forall (($generated@@376 T@U) ) (! (let (($generated@@377 ($generated@@310 (type $generated@@376))))
(let (($generated@@378 ($generated@@309 (type $generated@@376))))
(= (type ($generated@@374 $generated@@376)) ($generated@@76 $generated@@378 $generated@@377))))
 :pattern ( ($generated@@374 $generated@@376))
))))
(assert (forall (($generated@@379 T@U) ($generated@@380 T@U) ) (!  (=> (and (= (type $generated@@379) ($generated@@308 $generated@@151 $generated@@151)) (= (type $generated@@380) $generated@@151)) (= ($generated@@0 ($generated@@81 ($generated@@373 $generated@@379) $generated@@380))  (and ($generated@@0 ($generated@@81 ($generated@@306 $generated@@379) ($generated@@149 ($generated@@363 $generated@@142 $generated@@380)))) (= ($generated@@81 ($generated@@374 $generated@@379) ($generated@@149 ($generated@@363 $generated@@142 $generated@@380))) ($generated@@150 ($generated@@363 $generated@@142 $generated@@380))))))
 :pattern ( ($generated@@81 ($generated@@373 $generated@@379) $generated@@380))
)))
(assert (forall (($generated@@381 T@U) ($generated@@382 T@U) ) (! (let (($generated@@383 (type $generated@@382)))
(let (($generated@@384 ($generated@@291 (type $generated@@381))))
 (=> (= (type $generated@@381) ($generated@@290 $generated@@384 $generated@@383)) (= ($generated@@0 ($generated@@81 ($generated@@331 $generated@@381) $generated@@382)) (exists (($generated@@385 T@U) ) (!  (and (= (type $generated@@385) $generated@@384) (and ($generated@@0 ($generated@@81 ($generated@@288 $generated@@381) $generated@@385)) (= $generated@@382 ($generated@@81 ($generated@@364 $generated@@381) $generated@@385))))
 :pattern ( ($generated@@81 ($generated@@288 $generated@@381) $generated@@385))
 :pattern ( ($generated@@81 ($generated@@364 $generated@@381) $generated@@385))
))))))
 :pattern ( ($generated@@81 ($generated@@331 $generated@@381) $generated@@382))
)))
(assert (forall (($generated@@386 T@U) ($generated@@387 T@U) ) (! (let (($generated@@388 (type $generated@@387)))
(let (($generated@@389 ($generated@@309 (type $generated@@386))))
 (=> (= (type $generated@@386) ($generated@@308 $generated@@389 $generated@@388)) (= ($generated@@0 ($generated@@81 ($generated@@342 $generated@@386) $generated@@387)) (exists (($generated@@390 T@U) ) (!  (and (= (type $generated@@390) $generated@@389) (and ($generated@@0 ($generated@@81 ($generated@@306 $generated@@386) $generated@@390)) (= $generated@@387 ($generated@@81 ($generated@@374 $generated@@386) $generated@@390))))
 :pattern ( ($generated@@81 ($generated@@306 $generated@@386) $generated@@390))
 :pattern ( ($generated@@81 ($generated@@374 $generated@@386) $generated@@390))
))))))
 :pattern ( ($generated@@81 ($generated@@342 $generated@@386) $generated@@387))
)))
(assert (forall (($generated@@392 T@U) ($generated@@393 T@U) ) (! (= (type ($generated@@391 $generated@@392 $generated@@393)) $generated@@64)
 :pattern ( ($generated@@391 $generated@@392 $generated@@393))
)))
(assert (forall (($generated@@394 T@U) ($generated@@395 T@U) ($generated@@396 T@U) ($generated@@397 T@U) ) (!  (=> (and (and (and (= (type $generated@@394) ($generated@@290 $generated@@151 $generated@@151)) (= (type $generated@@395) $generated@@64)) (= (type $generated@@396) $generated@@64)) (= (type $generated@@397) ($generated@@76 $generated@@77 $generated@@78))) (= ($generated@@74 $generated@@394 ($generated@@391 $generated@@395 $generated@@396) $generated@@397) (forall (($generated@@398 T@U) ) (!  (=> (and (= (type $generated@@398) $generated@@151) ($generated@@0 ($generated@@81 ($generated@@288 $generated@@394) $generated@@398))) (and ($generated@@255 ($generated@@81 ($generated@@364 $generated@@394) $generated@@398) $generated@@396 $generated@@397) ($generated@@255 $generated@@398 $generated@@395 $generated@@397)))
 :pattern ( ($generated@@81 ($generated@@364 $generated@@394) $generated@@398))
 :pattern ( ($generated@@81 ($generated@@288 $generated@@394) $generated@@398))
))))
 :pattern ( ($generated@@74 $generated@@394 ($generated@@391 $generated@@395 $generated@@396) $generated@@397))
)))
(assert (forall (($generated@@400 T@U) ($generated@@401 T@U) ) (! (= (type ($generated@@399 $generated@@400 $generated@@401)) $generated@@64)
 :pattern ( ($generated@@399 $generated@@400 $generated@@401))
)))
(assert (forall (($generated@@402 T@U) ($generated@@403 T@U) ($generated@@404 T@U) ($generated@@405 T@U) ) (!  (=> (and (and (and (= (type $generated@@402) ($generated@@308 $generated@@151 $generated@@151)) (= (type $generated@@403) $generated@@64)) (= (type $generated@@404) $generated@@64)) (= (type $generated@@405) ($generated@@76 $generated@@77 $generated@@78))) (= ($generated@@74 $generated@@402 ($generated@@399 $generated@@403 $generated@@404) $generated@@405) (forall (($generated@@406 T@U) ) (!  (=> (and (= (type $generated@@406) $generated@@151) ($generated@@0 ($generated@@81 ($generated@@306 $generated@@402) $generated@@406))) (and ($generated@@255 ($generated@@81 ($generated@@374 $generated@@402) $generated@@406) $generated@@404 $generated@@405) ($generated@@255 $generated@@406 $generated@@403 $generated@@405)))
 :pattern ( ($generated@@81 ($generated@@374 $generated@@402) $generated@@406))
 :pattern ( ($generated@@81 ($generated@@306 $generated@@402) $generated@@406))
))))
 :pattern ( ($generated@@74 $generated@@402 ($generated@@399 $generated@@403 $generated@@404) $generated@@405))
)))
(assert  (=> (<= 0 $generated@@132) (forall (($generated@@407 Int) ($generated@@408 Int) ) (!  (=> (or ($generated@@135 $generated@@407 $generated@@408) (not (= 0 $generated@@132))) true)
 :pattern ( ($generated@@133 $generated@@407 $generated@@408))
))))
(assert (forall (($generated@@410 T@T) ) (! (= (type ($generated@@409 $generated@@410)) ($generated@@76 $generated@@410 $generated@@4))
 :pattern ( ($generated@@409 $generated@@410))
)))
(assert (forall (($generated@@411 T@U) ) (! (let (($generated@@412 ($generated@@310 (type $generated@@411))))
(let (($generated@@413 ($generated@@309 (type $generated@@411))))
 (=> (= (type $generated@@411) ($generated@@308 $generated@@413 $generated@@412)) (= (= $generated@@411 ($generated@@307 $generated@@413 $generated@@412)) (= ($generated@@306 $generated@@411) ($generated@@409 $generated@@413))))))
 :pattern ( ($generated@@306 $generated@@411))
)))
(assert (forall (($generated@@414 T@U) ) (! (let (($generated@@415 ($generated@@310 (type $generated@@414))))
(let (($generated@@416 ($generated@@309 (type $generated@@414))))
 (=> (= (type $generated@@414) ($generated@@308 $generated@@416 $generated@@415)) (= (= $generated@@414 ($generated@@307 $generated@@416 $generated@@415)) (= ($generated@@342 $generated@@414) ($generated@@409 $generated@@415))))))
 :pattern ( ($generated@@342 $generated@@414))
)))
(assert (forall (($generated@@417 T@U) ) (! (let (($generated@@418 ($generated@@310 (type $generated@@417))))
(let (($generated@@419 ($generated@@309 (type $generated@@417))))
 (=> (= (type $generated@@417) ($generated@@308 $generated@@419 $generated@@418)) (= (= $generated@@417 ($generated@@307 $generated@@419 $generated@@418)) (= ($generated@@373 $generated@@417) ($generated@@409 $generated@@151))))))
 :pattern ( ($generated@@373 $generated@@417))
)))
(assert (forall (($generated@@420 T@U) ) (! (let (($generated@@421 ($generated@@292 (type $generated@@420))))
(let (($generated@@422 ($generated@@291 (type $generated@@420))))
 (=> (= (type $generated@@420) ($generated@@290 $generated@@422 $generated@@421)) (or (= $generated@@420 ($generated@@289 $generated@@422 $generated@@421)) (exists (($generated@@423 T@U) ($generated@@424 T@U) ) (!  (and (and (= (type $generated@@423) $generated@@151) (= (type $generated@@424) $generated@@151)) ($generated@@0 ($generated@@81 ($generated@@362 $generated@@420) ($generated@@277 ($generated@@229 $generated@@423 $generated@@424)))))
 :no-pattern (type $generated@@423)
 :no-pattern (type $generated@@424)
 :no-pattern ($generated $generated@@423)
 :no-pattern ($generated@@0 $generated@@423)
 :no-pattern ($generated $generated@@424)
 :no-pattern ($generated@@0 $generated@@424)
))))))
 :pattern ( ($generated@@362 $generated@@420))
)))
(assert (forall (($generated@@425 T@U) ) (! (let (($generated@@426 ($generated@@310 (type $generated@@425))))
(let (($generated@@427 ($generated@@309 (type $generated@@425))))
 (=> (= (type $generated@@425) ($generated@@308 $generated@@427 $generated@@426)) (or (= $generated@@425 ($generated@@307 $generated@@427 $generated@@426)) (exists (($generated@@428 T@U) ($generated@@429 T@U) ) (!  (and (and (= (type $generated@@428) $generated@@151) (= (type $generated@@429) $generated@@151)) ($generated@@0 ($generated@@81 ($generated@@373 $generated@@425) ($generated@@277 ($generated@@229 $generated@@428 $generated@@429)))))
 :no-pattern (type $generated@@428)
 :no-pattern (type $generated@@429)
 :no-pattern ($generated $generated@@428)
 :no-pattern ($generated@@0 $generated@@428)
 :no-pattern ($generated $generated@@429)
 :no-pattern ($generated@@0 $generated@@429)
))))))
 :pattern ( ($generated@@373 $generated@@425))
)))
(assert (forall (($generated@@430 T@U) ) (!  (=> (and (= (type $generated@@430) $generated@@151) ($generated@@230 $generated@@430 $generated@@46)) (and (= ($generated@@277 ($generated@@363 $generated@@2 $generated@@430)) $generated@@430) ($generated@@138 ($generated@@363 $generated@@2 $generated@@430) $generated@@46)))
 :pattern ( ($generated@@230 $generated@@430 $generated@@46))
)))
(assert (forall (($generated@@431 T@U) ) (!  (=> (and (= (type $generated@@431) $generated@@151) ($generated@@230 $generated@@431 $generated@@47)) (and (= ($generated@@277 ($generated@@363 $generated@@3 $generated@@431)) $generated@@431) ($generated@@138 ($generated@@363 $generated@@3 $generated@@431) $generated@@47)))
 :pattern ( ($generated@@230 $generated@@431 $generated@@47))
)))
(assert (forall (($generated@@432 T@U) ) (!  (=> (and (= (type $generated@@432) $generated@@151) ($generated@@230 $generated@@432 $generated@@44)) (and (= ($generated@@277 ($generated@@363 $generated@@4 $generated@@432)) $generated@@432) ($generated@@138 ($generated@@363 $generated@@4 $generated@@432) $generated@@44)))
 :pattern ( ($generated@@230 $generated@@432 $generated@@44))
)))
(assert (= ($generated@@1 $generated@@433) 20))
(assert (forall (($generated@@434 T@U) ) (!  (=> (and (= (type $generated@@434) $generated@@151) ($generated@@230 $generated@@434 $generated@@45)) (and (= ($generated@@277 ($generated@@363 $generated@@433 $generated@@434)) $generated@@434) ($generated@@138 ($generated@@363 $generated@@433 $generated@@434) $generated@@45)))
 :pattern ( ($generated@@230 $generated@@434 $generated@@45))
)))
(assert (forall (($generated@@435 T@U) ($generated@@436 T@U) ) (!  (=> (= (type $generated@@436) $generated@@64) (= ($generated@@230 ($generated@@277 $generated@@435) $generated@@436) ($generated@@138 $generated@@435 $generated@@436)))
 :pattern ( ($generated@@230 ($generated@@277 $generated@@435) $generated@@436))
)))
(assert (forall (($generated@@437 T@U) ) (! (let (($generated@@438 ($generated@@79 (type $generated@@437))))
 (=> (= (type $generated@@437) ($generated@@76 $generated@@438 $generated@@2)) (<= 0 ($generated@@282 $generated@@437))))
 :pattern ( ($generated@@282 $generated@@437))
)))
(assert (forall (($generated@@439 T@U) ) (! (let (($generated@@440 ($generated@@270 (type $generated@@439))))
 (=> (= (type $generated@@439) ($generated@@269 $generated@@440)) (<= 0 ($generated@@268 $generated@@439))))
 :pattern ( ($generated@@268 $generated@@439))
)))
(assert (forall (($generated@@442 T@U) ) (! (= (type ($generated@@441 $generated@@442)) $generated@@64)
 :pattern ( ($generated@@441 $generated@@442))
)))
(assert (forall (($generated@@443 T@U) ($generated@@444 T@U) ) (!  (=> (and (= (type $generated@@443) $generated@@64) (= (type $generated@@444) $generated@@64)) (= ($generated@@441 ($generated@@391 $generated@@443 $generated@@444)) $generated@@443))
 :pattern ( ($generated@@391 $generated@@443 $generated@@444))
)))
(assert (forall (($generated@@446 T@U) ) (! (= (type ($generated@@445 $generated@@446)) $generated@@64)
 :pattern ( ($generated@@445 $generated@@446))
)))
(assert (forall (($generated@@447 T@U) ($generated@@448 T@U) ) (!  (=> (and (= (type $generated@@447) $generated@@64) (= (type $generated@@448) $generated@@64)) (= ($generated@@445 ($generated@@391 $generated@@447 $generated@@448)) $generated@@448))
 :pattern ( ($generated@@391 $generated@@447 $generated@@448))
)))
(assert (forall (($generated@@449 T@U) ($generated@@450 T@U) ) (!  (=> (and (= (type $generated@@449) $generated@@64) (= (type $generated@@450) $generated@@64)) (= ($generated@@72 ($generated@@391 $generated@@449 $generated@@450)) $generated@@58))
 :pattern ( ($generated@@391 $generated@@449 $generated@@450))
)))
(assert (forall (($generated@@452 T@U) ) (! (= (type ($generated@@451 $generated@@452)) $generated@@64)
 :pattern ( ($generated@@451 $generated@@452))
)))
(assert (forall (($generated@@453 T@U) ($generated@@454 T@U) ) (!  (=> (and (= (type $generated@@453) $generated@@64) (= (type $generated@@454) $generated@@64)) (= ($generated@@451 ($generated@@399 $generated@@453 $generated@@454)) $generated@@453))
 :pattern ( ($generated@@399 $generated@@453 $generated@@454))
)))
(assert (forall (($generated@@456 T@U) ) (! (= (type ($generated@@455 $generated@@456)) $generated@@64)
 :pattern ( ($generated@@455 $generated@@456))
)))
(assert (forall (($generated@@457 T@U) ($generated@@458 T@U) ) (!  (=> (and (= (type $generated@@457) $generated@@64) (= (type $generated@@458) $generated@@64)) (= ($generated@@455 ($generated@@399 $generated@@457 $generated@@458)) $generated@@458))
 :pattern ( ($generated@@399 $generated@@457 $generated@@458))
)))
(assert (forall (($generated@@459 T@U) ($generated@@460 T@U) ) (!  (=> (and (= (type $generated@@459) $generated@@64) (= (type $generated@@460) $generated@@64)) (= ($generated@@72 ($generated@@399 $generated@@459 $generated@@460)) $generated@@59))
 :pattern ( ($generated@@399 $generated@@459 $generated@@460))
)))
(assert (forall (($generated@@461 T@U) ($generated@@462 T@U) ) (!  (=> (and (= (type $generated@@461) $generated@@151) (= (type $generated@@462) $generated@@151)) (= ($generated@@261 ($generated@@229 $generated@@461 $generated@@462)) $generated@@61))
 :pattern ( ($generated@@229 $generated@@461 $generated@@462))
)))
(assert (forall (($generated@@464 T@U) ) (! (= (type ($generated@@463 $generated@@464)) $generated@@64)
 :pattern ( ($generated@@463 $generated@@464))
)))
(assert (forall (($generated@@465 T@U) ($generated@@466 T@U) ) (!  (=> (and (= (type $generated@@465) $generated@@64) (= (type $generated@@466) $generated@@64)) (= ($generated@@463 ($generated@@141 $generated@@465 $generated@@466)) $generated@@465))
 :pattern ( ($generated@@141 $generated@@465 $generated@@466))
)))
(assert (forall (($generated@@468 T@U) ) (! (= (type ($generated@@467 $generated@@468)) $generated@@64)
 :pattern ( ($generated@@467 $generated@@468))
)))
(assert (forall (($generated@@469 T@U) ($generated@@470 T@U) ) (!  (=> (and (= (type $generated@@469) $generated@@64) (= (type $generated@@470) $generated@@64)) (= ($generated@@467 ($generated@@141 $generated@@469 $generated@@470)) $generated@@470))
 :pattern ( ($generated@@141 $generated@@469 $generated@@470))
)))
(assert (forall (($generated@@471 T@U) ($generated@@472 T@U) ) (!  (=> (and (= (type $generated@@471) $generated@@151) (= (type $generated@@472) $generated@@151)) (= ($generated@@149 ($generated@@229 $generated@@471 $generated@@472)) $generated@@471))
 :pattern ( ($generated@@229 $generated@@471 $generated@@472))
)))
(assert (forall (($generated@@473 T@U) ($generated@@474 T@U) ) (!  (=> (and (= (type $generated@@473) $generated@@151) (= (type $generated@@474) $generated@@151)) (= ($generated@@150 ($generated@@229 $generated@@473 $generated@@474)) $generated@@474))
 :pattern ( ($generated@@229 $generated@@473 $generated@@474))
)))
(assert  (and (forall (($generated@@477 T@U) ) (! (= (type ($generated@@475 $generated@@477)) $generated@@64)
 :pattern ( ($generated@@475 $generated@@477))
)) (forall (($generated@@478 T@U) ($generated@@479 Int) ) (! (let (($generated@@480 ($generated@@270 (type $generated@@478))))
(= (type ($generated@@476 $generated@@478 $generated@@479)) $generated@@480))
 :pattern ( ($generated@@476 $generated@@478 $generated@@479))
))))
(assert (forall (($generated@@481 T@U) ($generated@@482 T@U) ($generated@@483 T@U) ) (!  (=> (and (and (= (type $generated@@481) ($generated@@269 $generated@@151)) (= (type $generated@@482) $generated@@64)) (= (type $generated@@483) ($generated@@76 $generated@@77 $generated@@78))) (= ($generated@@74 $generated@@481 ($generated@@475 $generated@@482) $generated@@483) (forall (($generated@@484 Int) ) (!  (=> (and (<= 0 $generated@@484) (< $generated@@484 ($generated@@268 $generated@@481))) ($generated@@255 ($generated@@476 $generated@@481 $generated@@484) $generated@@482 $generated@@483))
 :pattern ( ($generated@@476 $generated@@481 $generated@@484))
))))
 :pattern ( ($generated@@74 $generated@@481 ($generated@@475 $generated@@482) $generated@@483))
)))
(assert (forall (($generated@@486 Int) ) (! (= ($generated@@485 ($generated@@75 $generated@@486)) $generated@@486)
 :pattern ( ($generated@@75 $generated@@486))
)))
(assert (forall (($generated@@488 T@U) ) (! (= (type ($generated@@487 $generated@@488)) $generated@@64)
 :pattern ( ($generated@@487 $generated@@488))
)))
(assert (forall (($generated@@489 T@U) ) (!  (=> (= (type $generated@@489) $generated@@64) (= ($generated@@487 ($generated@@239 $generated@@489)) $generated@@489))
 :pattern ( ($generated@@239 $generated@@489))
)))
(assert (forall (($generated@@490 T@U) ) (!  (=> (= (type $generated@@490) $generated@@64) (= ($generated@@72 ($generated@@239 $generated@@490)) $generated@@54))
 :pattern ( ($generated@@239 $generated@@490))
)))
(assert (forall (($generated@@492 T@U) ) (! (= (type ($generated@@491 $generated@@492)) $generated@@64)
 :pattern ( ($generated@@491 $generated@@492))
)))
(assert (forall (($generated@@493 T@U) ) (!  (=> (= (type $generated@@493) $generated@@64) (= ($generated@@491 ($generated@@244 $generated@@493)) $generated@@493))
 :pattern ( ($generated@@244 $generated@@493))
)))
(assert (forall (($generated@@494 T@U) ) (!  (=> (= (type $generated@@494) $generated@@64) (= ($generated@@72 ($generated@@244 $generated@@494)) $generated@@55))
 :pattern ( ($generated@@244 $generated@@494))
)))
(assert (forall (($generated@@496 T@U) ) (! (= (type ($generated@@495 $generated@@496)) $generated@@64)
 :pattern ( ($generated@@495 $generated@@496))
)))
(assert (forall (($generated@@497 T@U) ) (!  (=> (= (type $generated@@497) $generated@@64) (= ($generated@@495 ($generated@@156 $generated@@497)) $generated@@497))
 :pattern ( ($generated@@156 $generated@@497))
)))
(assert (forall (($generated@@498 T@U) ) (!  (=> (= (type $generated@@498) $generated@@64) (= ($generated@@72 ($generated@@156 $generated@@498)) $generated@@56))
 :pattern ( ($generated@@156 $generated@@498))
)))
(assert (forall (($generated@@500 T@U) ) (! (= (type ($generated@@499 $generated@@500)) $generated@@64)
 :pattern ( ($generated@@499 $generated@@500))
)))
(assert (forall (($generated@@501 T@U) ) (!  (=> (= (type $generated@@501) $generated@@64) (= ($generated@@499 ($generated@@475 $generated@@501)) $generated@@501))
 :pattern ( ($generated@@475 $generated@@501))
)))
(assert (forall (($generated@@502 T@U) ) (!  (=> (= (type $generated@@502) $generated@@64) (= ($generated@@72 ($generated@@475 $generated@@502)) $generated@@57))
 :pattern ( ($generated@@475 $generated@@502))
)))
(assert (forall (($generated@@503 T@U) ) (! (let (($generated@@504 (type $generated@@503)))
(= ($generated@@363 $generated@@504 ($generated@@277 $generated@@503)) $generated@@503))
 :pattern ( ($generated@@277 $generated@@503))
)))
(assert (forall (($generated@@505 T@U) ($generated@@506 T@U) ($generated@@507 T@U) ) (!  (=> (and (and (= (type $generated@@505) ($generated@@290 $generated@@151 $generated@@151)) (= (type $generated@@506) $generated@@64)) (= (type $generated@@507) $generated@@64)) (= ($generated@@138 $generated@@505 ($generated@@391 $generated@@506 $generated@@507)) (forall (($generated@@508 T@U) ) (!  (=> (and (= (type $generated@@508) $generated@@151) ($generated@@0 ($generated@@81 ($generated@@288 $generated@@505) $generated@@508))) (and ($generated@@230 ($generated@@81 ($generated@@364 $generated@@505) $generated@@508) $generated@@507) ($generated@@230 $generated@@508 $generated@@506)))
 :pattern ( ($generated@@81 ($generated@@364 $generated@@505) $generated@@508))
 :pattern ( ($generated@@81 ($generated@@288 $generated@@505) $generated@@508))
))))
 :pattern ( ($generated@@138 $generated@@505 ($generated@@391 $generated@@506 $generated@@507)))
)))
(assert (forall (($generated@@509 T@U) ($generated@@510 T@U) ($generated@@511 T@U) ) (!  (=> (and (and (= (type $generated@@509) ($generated@@308 $generated@@151 $generated@@151)) (= (type $generated@@510) $generated@@64)) (= (type $generated@@511) $generated@@64)) (= ($generated@@138 $generated@@509 ($generated@@399 $generated@@510 $generated@@511)) (forall (($generated@@512 T@U) ) (!  (=> (and (= (type $generated@@512) $generated@@151) ($generated@@0 ($generated@@81 ($generated@@306 $generated@@509) $generated@@512))) (and ($generated@@230 ($generated@@81 ($generated@@374 $generated@@509) $generated@@512) $generated@@511) ($generated@@230 $generated@@512 $generated@@510)))
 :pattern ( ($generated@@81 ($generated@@374 $generated@@509) $generated@@512))
 :pattern ( ($generated@@81 ($generated@@306 $generated@@509) $generated@@512))
))))
 :pattern ( ($generated@@138 $generated@@509 ($generated@@399 $generated@@510 $generated@@511)))
)))
(assert (forall (($generated@@515 T@U) ($generated@@516 T@U) ) (!  (=> (and (= (type $generated@@515) $generated@@151) (= (type $generated@@516) $generated@@151)) (< ($generated@@513 $generated@@515) ($generated@@514 ($generated@@229 $generated@@515 $generated@@516))))
 :pattern ( ($generated@@229 $generated@@515 $generated@@516))
)))
(assert (forall (($generated@@517 T@U) ($generated@@518 T@U) ) (!  (=> (and (= (type $generated@@517) $generated@@151) (= (type $generated@@518) $generated@@151)) (< ($generated@@513 $generated@@518) ($generated@@514 ($generated@@229 $generated@@517 $generated@@518))))
 :pattern ( ($generated@@229 $generated@@517 $generated@@518))
)))
(assert (forall (($generated@@519 T@U) ($generated@@520 T@U) ($generated@@521 T@U) ) (!  (=> (and (and (and (= (type $generated@@519) $generated@@151) (= (type $generated@@520) $generated@@64)) (= (type $generated@@521) $generated@@64)) ($generated@@230 $generated@@519 ($generated@@391 $generated@@520 $generated@@521))) (and (= ($generated@@277 ($generated@@363 ($generated@@290 $generated@@151 $generated@@151) $generated@@519)) $generated@@519) ($generated@@138 ($generated@@363 ($generated@@290 $generated@@151 $generated@@151) $generated@@519) ($generated@@391 $generated@@520 $generated@@521))))
 :pattern ( ($generated@@230 $generated@@519 ($generated@@391 $generated@@520 $generated@@521)))
)))
(assert (forall (($generated@@522 T@U) ($generated@@523 T@U) ($generated@@524 T@U) ) (!  (=> (and (and (and (= (type $generated@@522) $generated@@151) (= (type $generated@@523) $generated@@64)) (= (type $generated@@524) $generated@@64)) ($generated@@230 $generated@@522 ($generated@@399 $generated@@523 $generated@@524))) (and (= ($generated@@277 ($generated@@363 ($generated@@308 $generated@@151 $generated@@151) $generated@@522)) $generated@@522) ($generated@@138 ($generated@@363 ($generated@@308 $generated@@151 $generated@@151) $generated@@522) ($generated@@399 $generated@@523 $generated@@524))))
 :pattern ( ($generated@@230 $generated@@522 ($generated@@399 $generated@@523 $generated@@524)))
)))
(assert (forall (($generated@@525 T@U) ($generated@@526 T@U) ($generated@@527 T@U) ) (!  (=> (and (and (and (= (type $generated@@525) $generated@@64) (= (type $generated@@526) $generated@@64)) (= (type $generated@@527) $generated@@151)) ($generated@@230 $generated@@527 ($generated@@141 $generated@@525 $generated@@526))) (and (= ($generated@@277 ($generated@@363 $generated@@142 $generated@@527)) $generated@@527) ($generated@@138 ($generated@@363 $generated@@142 $generated@@527) ($generated@@141 $generated@@525 $generated@@526))))
 :pattern ( ($generated@@230 $generated@@527 ($generated@@141 $generated@@525 $generated@@526)))
)))
(assert (forall (($generated@@528 T@U) ) (! (let (($generated@@529 (type $generated@@528)))
 (not ($generated@@0 ($generated@@81 ($generated@@409 $generated@@529) $generated@@528))))
 :pattern ( (let (($generated@@529 (type $generated@@528)))
($generated@@81 ($generated@@409 $generated@@529) $generated@@528)))
)))
(assert (forall (($generated@@531 T@U) ) (! (= (type ($generated@@530 $generated@@531)) $generated@@69)
 :pattern ( ($generated@@530 $generated@@531))
)))
(assert (forall (($generated@@532 T@U) ($generated@@533 T@U) ) (!  (=> (and (= (type $generated@@532) $generated@@64) (= (type $generated@@533) $generated@@64)) (and (= ($generated@@72 ($generated@@141 $generated@@532 $generated@@533)) $generated@@62) (= ($generated@@530 ($generated@@141 $generated@@532 $generated@@533)) $generated@@63)))
 :pattern ( ($generated@@141 $generated@@532 $generated@@533))
)))
(assert (forall (($generated@@534 T@U) ) (!  (=> (= (type $generated@@534) $generated@@142) (= ($generated@@513 ($generated@@277 $generated@@534)) ($generated@@514 $generated@@534)))
 :pattern ( ($generated@@513 ($generated@@277 $generated@@534)))
)))
(assert (forall (($generated@@535 T@U) ) (!  (=> (and (= (type $generated@@535) $generated@@151) ($generated@@230 $generated@@535 ($generated@@75 0))) (and (= ($generated@@277 ($generated@@363 $generated@@2 $generated@@535)) $generated@@535) ($generated@@138 ($generated@@363 ($generated@@76 $generated@@151 $generated@@4) $generated@@535) ($generated@@75 0))))
 :pattern ( ($generated@@230 $generated@@535 ($generated@@75 0)))
)))
(assert (forall (($generated@@536 T@U) ($generated@@537 T@U) ) (!  (=> (and (and (= (type $generated@@536) $generated@@151) (= (type $generated@@537) $generated@@64)) ($generated@@230 $generated@@536 ($generated@@239 $generated@@537))) (and (= ($generated@@277 ($generated@@363 ($generated@@76 $generated@@151 $generated@@4) $generated@@536)) $generated@@536) ($generated@@138 ($generated@@363 ($generated@@76 $generated@@151 $generated@@4) $generated@@536) ($generated@@239 $generated@@537))))
 :pattern ( ($generated@@230 $generated@@536 ($generated@@239 $generated@@537)))
)))
(assert (forall (($generated@@538 T@U) ($generated@@539 T@U) ) (!  (=> (and (and (= (type $generated@@538) $generated@@151) (= (type $generated@@539) $generated@@64)) ($generated@@230 $generated@@538 ($generated@@244 $generated@@539))) (and (= ($generated@@277 ($generated@@363 ($generated@@76 $generated@@151 $generated@@4) $generated@@538)) $generated@@538) ($generated@@138 ($generated@@363 ($generated@@76 $generated@@151 $generated@@4) $generated@@538) ($generated@@244 $generated@@539))))
 :pattern ( ($generated@@230 $generated@@538 ($generated@@244 $generated@@539)))
)))
(assert (forall (($generated@@540 T@U) ($generated@@541 T@U) ) (!  (=> (and (and (= (type $generated@@540) $generated@@151) (= (type $generated@@541) $generated@@64)) ($generated@@230 $generated@@540 ($generated@@156 $generated@@541))) (and (= ($generated@@277 ($generated@@363 ($generated@@76 $generated@@151 $generated@@2) $generated@@540)) $generated@@540) ($generated@@138 ($generated@@363 ($generated@@76 $generated@@151 $generated@@2) $generated@@540) ($generated@@156 $generated@@541))))
 :pattern ( ($generated@@230 $generated@@540 ($generated@@156 $generated@@541)))
)))
(assert (forall (($generated@@542 T@U) ($generated@@543 T@U) ) (!  (=> (and (and (= (type $generated@@542) $generated@@151) (= (type $generated@@543) $generated@@64)) ($generated@@230 $generated@@542 ($generated@@475 $generated@@543))) (and (= ($generated@@277 ($generated@@363 ($generated@@269 $generated@@151) $generated@@542)) $generated@@542) ($generated@@138 ($generated@@363 ($generated@@269 $generated@@151) $generated@@542) ($generated@@475 $generated@@543))))
 :pattern ( ($generated@@230 $generated@@542 ($generated@@475 $generated@@543)))
)))
(assert (forall (($generated@@544 T@U) ($generated@@545 T@U) ($generated@@546 T@U) ) (!  (=> (and (and (= (type $generated@@544) ($generated@@76 $generated@@151 $generated@@2)) (= (type $generated@@545) $generated@@64)) (= (type $generated@@546) ($generated@@76 $generated@@77 $generated@@78))) (= ($generated@@74 $generated@@544 ($generated@@156 $generated@@545) $generated@@546) (forall (($generated@@547 T@U) ) (!  (=> (and (= (type $generated@@547) $generated@@151) (< 0 ($generated ($generated@@81 $generated@@544 $generated@@547)))) ($generated@@255 $generated@@547 $generated@@545 $generated@@546))
 :pattern ( ($generated@@81 $generated@@544 $generated@@547))
))))
 :pattern ( ($generated@@74 $generated@@544 ($generated@@156 $generated@@545) $generated@@546))
)))
(assert (forall (($generated@@548 T@U) ($generated@@549 T@U) ($generated@@550 T@U) ) (!  (=> (and (and (and (= (type $generated@@548) $generated@@142) (= (type $generated@@549) $generated@@64)) (= (type $generated@@550) ($generated@@76 $generated@@77 $generated@@78))) (and ($generated@@254 $generated@@550) (and ($generated@@140 $generated@@548) (exists (($generated@@551 T@U) ) (!  (and (= (type $generated@@551) $generated@@64) ($generated@@74 $generated@@548 ($generated@@141 $generated@@549 $generated@@551) $generated@@550))
 :pattern ( ($generated@@74 $generated@@548 ($generated@@141 $generated@@549 $generated@@551) $generated@@550))
))))) ($generated@@255 ($generated@@149 $generated@@548) $generated@@549 $generated@@550))
 :pattern ( ($generated@@255 ($generated@@149 $generated@@548) $generated@@549 $generated@@550))
)))
(assert (forall (($generated@@552 T@U) ($generated@@553 T@U) ($generated@@554 T@U) ) (!  (=> (and (and (and (= (type $generated@@552) $generated@@142) (= (type $generated@@553) $generated@@64)) (= (type $generated@@554) ($generated@@76 $generated@@77 $generated@@78))) (and ($generated@@254 $generated@@554) (and ($generated@@140 $generated@@552) (exists (($generated@@555 T@U) ) (!  (and (= (type $generated@@555) $generated@@64) ($generated@@74 $generated@@552 ($generated@@141 $generated@@555 $generated@@553) $generated@@554))
 :pattern ( ($generated@@74 $generated@@552 ($generated@@141 $generated@@555 $generated@@553) $generated@@554))
))))) ($generated@@255 ($generated@@150 $generated@@552) $generated@@553 $generated@@554))
 :pattern ( ($generated@@255 ($generated@@150 $generated@@552) $generated@@553 $generated@@554))
)))
(assert (forall (($generated@@556 T@U) ($generated@@557 T@U) ) (!  (=> (and (= (type $generated@@556) $generated@@151) (= (type $generated@@557) $generated@@151)) (= ($generated@@229 ($generated@@250 $generated@@556) ($generated@@250 $generated@@557)) ($generated@@250 ($generated@@229 $generated@@556 $generated@@557))))
 :pattern ( ($generated@@229 ($generated@@250 $generated@@556) ($generated@@250 $generated@@557)))
)))
(assert (forall (($generated@@558 Int) ) (! (= ($generated@@277 ($generated@@8 ($generated@@134 $generated@@558))) ($generated@@250 ($generated@@277 ($generated@@8 $generated@@558))))
 :pattern ( ($generated@@277 ($generated@@8 ($generated@@134 $generated@@558))))
)))
(assert (forall (($generated@@559 T@U) ) (! (= ($generated@@277 ($generated@@250 $generated@@559)) ($generated@@250 ($generated@@277 $generated@@559)))
 :pattern ( ($generated@@277 ($generated@@250 $generated@@559)))
)))
(assert (forall (($generated@@560 T@U) ) (! (let (($generated@@561 ($generated@@270 (type $generated@@560))))
 (=> (and (= (type $generated@@560) ($generated@@269 $generated@@561)) (= ($generated@@268 $generated@@560) 0)) (= $generated@@560 ($generated@@267 $generated@@561))))
 :pattern ( ($generated@@268 $generated@@560))
)))
(assert (forall (($generated@@562 T@U) ($generated@@563 T@U) ($generated@@564 T@U) ) (! (let (($generated@@565 (type $generated@@563)))
 (=> (and (and (= (type $generated@@562) ($generated@@76 $generated@@565 $generated@@2)) (= (type $generated@@564) $generated@@2)) (<= 0 ($generated $generated@@564))) (= ($generated@@282 ($generated@@82 $generated@@562 $generated@@563 $generated@@564)) (+ (- ($generated@@282 $generated@@562) ($generated ($generated@@81 $generated@@562 $generated@@563))) ($generated $generated@@564)))))
 :pattern ( ($generated@@282 ($generated@@82 $generated@@562 $generated@@563 $generated@@564)))
)))
(assert (forall (($generated@@566 T@U) ($generated@@567 T@U) ) (!  (=> (and (= (type $generated@@566) ($generated@@76 $generated@@77 $generated@@78)) (= (type $generated@@567) $generated@@2)) ($generated@@74 $generated@@567 $generated@@46 $generated@@566))
 :pattern ( ($generated@@74 $generated@@567 $generated@@46 $generated@@566))
)))
(assert (forall (($generated@@568 T@U) ($generated@@569 T@U) ) (!  (=> (and (= (type $generated@@568) ($generated@@76 $generated@@77 $generated@@78)) (= (type $generated@@569) $generated@@3)) ($generated@@74 $generated@@569 $generated@@47 $generated@@568))
 :pattern ( ($generated@@74 $generated@@569 $generated@@47 $generated@@568))
)))
(assert (forall (($generated@@570 T@U) ($generated@@571 T@U) ) (!  (=> (and (= (type $generated@@570) ($generated@@76 $generated@@77 $generated@@78)) (= (type $generated@@571) $generated@@4)) ($generated@@74 $generated@@571 $generated@@44 $generated@@570))
 :pattern ( ($generated@@74 $generated@@571 $generated@@44 $generated@@570))
)))
(assert (forall (($generated@@572 T@U) ($generated@@573 T@U) ) (!  (=> (and (= (type $generated@@572) ($generated@@76 $generated@@77 $generated@@78)) (= (type $generated@@573) $generated@@433)) ($generated@@74 $generated@@573 $generated@@45 $generated@@572))
 :pattern ( ($generated@@74 $generated@@573 $generated@@45 $generated@@572))
)))
(assert (forall (($generated@@574 T@U) ($generated@@575 T@U) ) (!  (=> (and (= (type $generated@@574) ($generated@@76 $generated@@77 $generated@@78)) (= (type $generated@@575) $generated@@151)) ($generated@@74 $generated@@575 $generated@@48 $generated@@574))
 :pattern ( ($generated@@74 $generated@@575 $generated@@48 $generated@@574))
)))
(assert (forall (($generated@@576 T@U) ($generated@@577 T@U) ) (!  (=> (and (= (type $generated@@576) ($generated@@269 $generated@@151)) (= (type $generated@@577) $generated@@64)) (= ($generated@@138 $generated@@576 ($generated@@475 $generated@@577)) (forall (($generated@@578 Int) ) (!  (=> (and (<= 0 $generated@@578) (< $generated@@578 ($generated@@268 $generated@@576))) ($generated@@230 ($generated@@476 $generated@@576 $generated@@578) $generated@@577))
 :pattern ( ($generated@@476 $generated@@576 $generated@@578))
))))
 :pattern ( ($generated@@138 $generated@@576 ($generated@@475 $generated@@577)))
)))
(assert (forall (($generated@@580 T@U) ($generated@@581 Int) ) (!  (=> (= (type $generated@@580) ($generated@@269 $generated@@151)) (=> (and (<= 0 $generated@@581) (< $generated@@581 ($generated@@268 $generated@@580))) (< ($generated@@514 ($generated@@363 $generated@@142 ($generated@@476 $generated@@580 $generated@@581))) ($generated@@579 $generated@@580))))
 :pattern ( ($generated@@514 ($generated@@363 $generated@@142 ($generated@@476 $generated@@580 $generated@@581))))
)))
(assert (forall (($generated@@582 T@U) ($generated@@583 T@U) ($generated@@584 T@U) ) (!  (=> (and (and (and (= (type $generated@@582) ($generated@@290 $generated@@151 $generated@@151)) (= (type $generated@@583) $generated@@64)) (= (type $generated@@584) $generated@@64)) ($generated@@138 $generated@@582 ($generated@@391 $generated@@583 $generated@@584))) (and (and ($generated@@138 ($generated@@288 $generated@@582) ($generated@@239 $generated@@583)) ($generated@@138 ($generated@@331 $generated@@582) ($generated@@239 $generated@@584))) ($generated@@138 ($generated@@362 $generated@@582) ($generated@@239 ($generated@@141 $generated@@583 $generated@@584)))))
 :pattern ( ($generated@@138 $generated@@582 ($generated@@391 $generated@@583 $generated@@584)))
)))
(assert (forall (($generated@@585 T@U) ($generated@@586 T@U) ($generated@@587 T@U) ) (!  (=> (and (and (and (= (type $generated@@585) ($generated@@308 $generated@@151 $generated@@151)) (= (type $generated@@586) $generated@@64)) (= (type $generated@@587) $generated@@64)) ($generated@@138 $generated@@585 ($generated@@399 $generated@@586 $generated@@587))) (and (and ($generated@@138 ($generated@@306 $generated@@585) ($generated@@244 $generated@@586)) ($generated@@138 ($generated@@342 $generated@@585) ($generated@@244 $generated@@587))) ($generated@@138 ($generated@@373 $generated@@585) ($generated@@244 ($generated@@141 $generated@@586 $generated@@587)))))
 :pattern ( ($generated@@138 $generated@@585 ($generated@@399 $generated@@586 $generated@@587)))
)))
(assert (forall (($generated@@588 T@U) ) (!  (=> (= (type $generated@@588) $generated@@2) ($generated@@138 $generated@@588 $generated@@46))
 :pattern ( ($generated@@138 $generated@@588 $generated@@46))
)))
(assert (forall (($generated@@589 T@U) ) (!  (=> (= (type $generated@@589) $generated@@3) ($generated@@138 $generated@@589 $generated@@47))
 :pattern ( ($generated@@138 $generated@@589 $generated@@47))
)))
(assert (forall (($generated@@590 T@U) ) (!  (=> (= (type $generated@@590) $generated@@4) ($generated@@138 $generated@@590 $generated@@44))
 :pattern ( ($generated@@138 $generated@@590 $generated@@44))
)))
(assert (forall (($generated@@591 T@U) ) (!  (=> (= (type $generated@@591) $generated@@433) ($generated@@138 $generated@@591 $generated@@45))
 :pattern ( ($generated@@138 $generated@@591 $generated@@45))
)))
(assert (forall (($generated@@592 T@U) ) (!  (=> (= (type $generated@@592) $generated@@151) ($generated@@138 $generated@@592 $generated@@48))
 :pattern ( ($generated@@138 $generated@@592 $generated@@48))
)))
(push 1)
(declare-fun ControlFlow (Int Int) Int)
(declare-fun $generated@@593 () T@U)
(declare-fun $generated@@594 () T@U)
(declare-fun $generated@@595 () T@U)
(declare-fun $generated@@596 () Int)
(declare-fun $generated@@597 () T@U)
(declare-fun $generated@@598 (T@U) Bool)
(assert  (and (and (and (= (type $generated@@593) ($generated@@163 $generated@@77 $generated@@4)) (= (type $generated@@594) $generated@@77)) (= (type $generated@@595) ($generated@@76 $generated@@77 $generated@@78))) (= (type $generated@@597) ($generated@@163 $generated@@77 $generated@@4))))
(set-option :timeout 0)
(set-option :rlimit 0)
(assert (not
 (=> (= (ControlFlow 0 0) 5) (let (($generated@@599  (=> (and (= $generated@@593 ($generated@@217 $generated@@594 $generated@@595 $generated@@60 false)) (= (ControlFlow 0 3) (- 0 2))) (= $generated@@596 $generated@@596))))
(let (($generated@@600 true))
(let (($generated@@601  (=> (= $generated@@597 ($generated@@162 $generated@@594 $generated@@595 $generated@@60 false)) (and (=> (= (ControlFlow 0 4) 1) $generated@@600) (=> (= (ControlFlow 0 4) 3) $generated@@599)))))
(let (($generated@@602  (=> (and (and ($generated@@254 $generated@@595) ($generated@@598 $generated@@595)) (and (= 0 $generated@@132) (= (ControlFlow 0 5) 4))) $generated@@601)))
$generated@@602)))))
))
(check-sat)
(pop 1)
; Valid
(get-info :rlimit)
(reset)
(set-option :rlimit 0)
; did a full reset
(reset)
(set-option :print-success false)
(set-info :smt-lib-version 2.6)
(set-option :auto_config false)
(set-option :type_check true)
(set-option :smt.case_split 3)
(set-option :smt.qi.eager_threshold 100)
(set-option :smt.delay_units true)
(set-option :smt.arith.solver 2)
(set-option :smt.mbqi false)
(set-option :model.compact false)
(set-option :model.v2 true)
(set-option :pp.bv_literals false)
; done setting options


(set-info :category "industrial")
(declare-sort |T@U| 0)
(declare-sort |T@T| 0)
(declare-fun real_pow (Real Real) Real)
(declare-fun UOrdering2 (|T@U| |T@U|) Bool)
(declare-fun UOrdering3 (|T@T| |T@U| |T@U|) Bool)
(declare-fun tickleBool (Bool) Bool)
(assert (and (tickleBool true) (tickleBool false)))
(declare-fun $generated (T@U) Int)
(declare-fun $generated@@0 (T@U) Bool)
(declare-fun $generated@@1 (T@T) Int)
(declare-fun $generated@@2 () T@T)
(declare-fun $generated@@3 () T@T)
(declare-fun $generated@@4 () T@T)
(declare-fun $generated@@5 () T@T)
(declare-fun $generated@@6 () T@T)
(declare-fun $generated@@7 () T@T)
(declare-fun $generated@@8 (Int) T@U)
(declare-fun type (T@U) T@T)
(declare-fun $generated@@9 (Real) T@U)
(declare-fun $generated@@10 (T@U) Real)
(declare-fun $generated@@11 (Bool) T@U)
(declare-fun $generated@@12 (RoundingMode) T@U)
(declare-fun $generated@@13 (T@U) RoundingMode)
(declare-fun $generated@@14 (String) T@U)
(declare-fun $generated@@15 (T@U) String)
(declare-fun $generated@@16 ((RegEx String)) T@U)
(declare-fun $generated@@17 (T@U) (RegEx String))
(declare-fun $generated@@44 () T@U)
(declare-fun $generated@@45 () T@U)
(declare-fun $generated@@46 () T@U)
(declare-fun $generated@@47 () T@U)
(declare-fun $generated@@48 () T@U)
(declare-fun $generated@@49 () T@U)
(declare-fun $generated@@50 () T@U)
(declare-fun $generated@@51 () T@U)
(declare-fun $generated@@52 () T@U)
(declare-fun $generated@@53 () T@U)
(declare-fun $generated@@54 () T@U)
(declare-fun $generated@@55 () T@U)
(declare-fun $generated@@56 () T@U)
(declare-fun $generated@@57 () T@U)
(declare-fun $generated@@58 () T@U)
(declare-fun $generated@@59 () T@U)
(declare-fun $generated@@60 () T@U)
(declare-fun $generated@@61 () T@U)
(declare-fun $generated@@62 () T@U)
(declare-fun $generated@@63 () T@U)
(declare-fun $generated@@64 () T@U)
(declare-fun $generated@@65 () T@U)
(declare-fun $generated@@66 () T@U)
(declare-fun $generated@@67 () T@T)
(declare-fun $generated@@68 () T@T)
(declare-fun $generated@@69 (T@T) T@T)
(declare-fun $generated@@70 (T@T) T@T)
(declare-fun $generated@@71 () T@T)
(declare-fun $generated@@72 () T@T)
(declare-fun $generated@@75 (T@U) T@U)
(declare-fun $generated@@77 (T@U T@U T@U) Bool)
(declare-fun $generated@@78 (Int) T@U)
(declare-fun $generated@@79 (T@T T@T) T@T)
(declare-fun $generated@@80 () T@T)
(declare-fun $generated@@81 () T@T)
(declare-fun $generated@@82 (T@T) T@T)
(declare-fun $generated@@83 (T@T) T@T)
(declare-fun $generated@@84 (T@U T@U) T@U)
(declare-fun $generated@@85 (T@U T@U T@U) T@U)
(declare-fun $generated@@86 (T@U T@U) T@U)
(declare-fun $generated@@87 (T@U T@U T@U) T@U)
(declare-fun $generated@@135 (T@U T@U) Bool)
(declare-fun $generated@@139 (T@U) T@U)
(declare-fun $generated@@140 () T@U)
(declare-fun $generated@@145 (T@U T@U) Bool)
(declare-fun $generated@@147 () Int)
(declare-fun $generated@@148 (T@U) Int)
(declare-fun $generated@@149 (T@U) Bool)
(declare-fun $generated@@150 (Int) Int)
(declare-fun $generated@@153 (T@U) T@U)
(declare-fun $generated@@158 (T@U) Bool)
(declare-fun $generated@@159 (T@U T@U) T@U)
(declare-fun $generated@@160 () T@T)
(declare-fun $generated@@166 (T@U T@U) Bool)
(declare-fun $generated@@167 (T@U) T@U)
(declare-fun $generated@@168 (T@U) T@U)
(declare-fun $generated@@169 () T@T)
(declare-fun $generated@@174 (T@U) T@U)
(declare-fun $generated@@175 (T@U) Bool)
(declare-fun $generated@@179 (T@U T@U T@U) T@U)
(declare-fun $generated@@180 (T@U T@U T@U Bool) T@U)
(declare-fun $generated@@181 (T@T T@T) T@T)
(declare-fun $generated@@182 (T@T) T@T)
(declare-fun $generated@@183 (T@T) T@T)
(declare-fun $generated@@184 (T@U T@U T@U T@U) T@U)
(declare-fun $generated@@235 (T@U T@U) T@U)
(declare-fun $generated@@236 (T@U T@U) Bool)
(declare-fun $generated@@243 (T@U T@U) Int)
(declare-fun $generated@@244 (T@U T@U) Bool)
(declare-fun $generated@@249 (T@U) T@U)
(declare-fun $generated@@254 (T@U) T@U)
(declare-fun $generated@@260 (T@U) T@U)
(declare-fun $generated@@265 (T@U) Bool)
(declare-fun $generated@@266 (T@U T@U T@U) Bool)
(declare-fun $generated@@274 (T@U) T@U)
(declare-fun $generated@@280 (T@T) T@U)
(declare-fun $generated@@281 (T@U) Int)
(declare-fun $generated@@282 (T@T) T@T)
(declare-fun $generated@@283 (T@T) T@T)
(declare-fun $generated@@292 (T@U) T@U)
(declare-fun $generated@@305 (T@U) Int)
(declare-fun $generated@@306 (T@T) T@U)
(declare-fun $generated@@311 (T@U) T@U)
(declare-fun $generated@@315 (T@U) T@U)
(declare-fun $generated@@316 (T@T T@T) T@U)
(declare-fun $generated@@317 (T@T T@T) T@T)
(declare-fun $generated@@318 (T@T) T@T)
(declare-fun $generated@@319 (T@T) T@T)
(declare-fun $generated@@333 (T@U) T@U)
(declare-fun $generated@@334 (T@T T@T) T@U)
(declare-fun $generated@@335 (T@T T@T) T@T)
(declare-fun $generated@@336 (T@T) T@T)
(declare-fun $generated@@337 (T@T) T@T)
(declare-fun $generated@@351 (T@U T@U) Int)
(declare-fun $generated@@352 (T@U T@U) Bool)
(declare-fun $generated@@360 (T@U) T@U)
(declare-fun $generated@@368 (T@U) T@U)
(declare-fun $generated@@379 (T@U) T@U)
(declare-fun $generated@@399 (T@U) T@U)
(declare-fun $generated@@400 (T@T T@U) T@U)
(declare-fun $generated@@401 (T@U) T@U)
(declare-fun $generated@@410 (T@U) T@U)
(declare-fun $generated@@411 (T@U) T@U)
(declare-fun $generated@@428 (T@U T@U) T@U)
(declare-fun $generated@@436 (T@U T@U) T@U)
(declare-fun $generated@@449 (T@T) T@U)
(declare-fun $generated@@473 () T@T)
(declare-fun $generated@@475 (T@U T@U T@U) Int)
(declare-fun $generated@@476 (T@U T@U T@U) Bool)
(declare-fun $generated@@486 (T@U) T@U)
(declare-fun $generated@@490 (T@U) T@U)
(declare-fun $generated@@496 (T@U) T@U)
(declare-fun $generated@@500 (T@U) T@U)
(declare-fun $generated@@508 (T@U) T@U)
(declare-fun $generated@@512 (T@U) T@U)
(declare-fun $generated@@520 (T@U) T@U)
(declare-fun $generated@@521 (T@U Int) T@U)
(declare-fun $generated@@530 (T@U) Int)
(declare-fun $generated@@532 (T@U) T@U)
(declare-fun $generated@@536 (T@U) T@U)
(declare-fun $generated@@540 (T@U) T@U)
(declare-fun $generated@@544 (T@U) T@U)
(declare-fun $generated@@548 (T@U) T@U)
(declare-fun $generated@@551 (T@U) T@U)
(declare-fun $generated@@564 (T@U) Int)
(declare-fun $generated@@565 (T@U) Int)
(declare-fun $generated@@643 (T@U) Int)
(assert  (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (= ($generated@@1 $generated@@2) 0) (= ($generated@@1 $generated@@3) 1)) (= ($generated@@1 $generated@@4) 2)) (= ($generated@@1 $generated@@5) 3)) (= ($generated@@1 $generated@@6) 4)) (= ($generated@@1 $generated@@7) 5)) (forall (($generated@@18 Int) ) (! (= ($generated ($generated@@8 $generated@@18)) $generated@@18)
 :pattern ( ($generated@@8 $generated@@18))
))) (forall (($generated@@19 T@U) ) (!  (=> (= (type $generated@@19) $generated@@2) (= ($generated@@8 ($generated $generated@@19)) $generated@@19))
 :pattern ( ($generated $generated@@19))
))) (forall (($generated@@20 Int) ) (! (= (type ($generated@@8 $generated@@20)) $generated@@2)
 :pattern ( ($generated@@8 $generated@@20))
))) (forall (($generated@@21 Real) ) (! (= ($generated@@10 ($generated@@9 $generated@@21)) $generated@@21)
 :pattern ( ($generated@@9 $generated@@21))
))) (forall (($generated@@22 T@U) ) (!  (=> (= (type $generated@@22) $generated@@3) (= ($generated@@9 ($generated@@10 $generated@@22)) $generated@@22))
 :pattern ( ($generated@@10 $generated@@22))
))) (forall (($generated@@23 Real) ) (! (= (type ($generated@@9 $generated@@23)) $generated@@3)
 :pattern ( ($generated@@9 $generated@@23))
))) (forall (($generated@@24 Bool) ) (! (= ($generated@@0 ($generated@@11 $generated@@24)) $generated@@24)
 :pattern ( ($generated@@11 $generated@@24))
))) (forall (($generated@@25 T@U) ) (!  (=> (= (type $generated@@25) $generated@@4) (= ($generated@@11 ($generated@@0 $generated@@25)) $generated@@25))
 :pattern ( ($generated@@0 $generated@@25))
))) (forall (($generated@@26 Bool) ) (! (= (type ($generated@@11 $generated@@26)) $generated@@4)
 :pattern ( ($generated@@11 $generated@@26))
))) (forall (($generated@@27 RoundingMode) ) (! (= ($generated@@13 ($generated@@12 $generated@@27)) $generated@@27)
 :pattern ( ($generated@@12 $generated@@27))
))) (forall (($generated@@28 T@U) ) (!  (=> (= (type $generated@@28) $generated@@5) (= ($generated@@12 ($generated@@13 $generated@@28)) $generated@@28))
 :pattern ( ($generated@@13 $generated@@28))
))) (forall (($generated@@29 RoundingMode) ) (! (= (type ($generated@@12 $generated@@29)) $generated@@5)
 :pattern ( ($generated@@12 $generated@@29))
))) (forall (($generated@@30 String) ) (! (= ($generated@@15 ($generated@@14 $generated@@30)) $generated@@30)
 :pattern ( ($generated@@14 $generated@@30))
))) (forall (($generated@@31 T@U) ) (!  (=> (= (type $generated@@31) $generated@@6) (= ($generated@@14 ($generated@@15 $generated@@31)) $generated@@31))
 :pattern ( ($generated@@15 $generated@@31))
))) (forall (($generated@@32 String) ) (! (= (type ($generated@@14 $generated@@32)) $generated@@6)
 :pattern ( ($generated@@14 $generated@@32))
))) (forall (($generated@@33 (RegEx String)) ) (! (= ($generated@@17 ($generated@@16 $generated@@33)) $generated@@33)
 :pattern ( ($generated@@16 $generated@@33))
))) (forall (($generated@@34 T@U) ) (!  (=> (= (type $generated@@34) $generated@@7) (= ($generated@@16 ($generated@@17 $generated@@34)) $generated@@34))
 :pattern ( ($generated@@17 $generated@@34))
))) (forall (($generated@@35 (RegEx String)) ) (! (= (type ($generated@@16 $generated@@35)) $generated@@7)
 :pattern ( ($generated@@16 $generated@@35))
))))
(assert (forall (($generated@@36 T@U) ) (! (UOrdering2 $generated@@36 $generated@@36)
 :no-pattern ($generated $generated@@36)
 :no-pattern ($generated@@0 $generated@@36)
)))
(assert (forall (($generated@@37 T@U) ($generated@@38 T@U) ($generated@@39 T@U) ) (! (let (($generated@@40 (type $generated@@37)))
 (=> (and (and (= (type $generated@@38) $generated@@40) (= (type $generated@@39) $generated@@40)) (and (UOrdering2 $generated@@37 $generated@@38) (UOrdering2 $generated@@38 $generated@@39))) (UOrdering2 $generated@@37 $generated@@39)))
 :pattern ( (UOrdering2 $generated@@37 $generated@@38) (UOrdering2 $generated@@38 $generated@@39))
)))
(assert (forall (($generated@@41 T@U) ($generated@@42 T@U) ) (! (let (($generated@@43 (type $generated@@41)))
 (=> (= (type $generated@@42) $generated@@43) (=> (and (UOrdering2 $generated@@41 $generated@@42) (UOrdering2 $generated@@42 $generated@@41)) (= $generated@@41 $generated@@42))))
 :pattern ( (UOrdering2 $generated@@41 $generated@@42) (UOrdering2 $generated@@42 $generated@@41))
)))
(assert  (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (= ($generated@@1 $generated@@67) 6) (= (type $generated@@44) $generated@@67)) (= (type $generated@@45) $generated@@67)) (= (type $generated@@46) $generated@@67)) (= (type $generated@@47) $generated@@67)) (= (type $generated@@48) $generated@@67)) (= ($generated@@1 $generated@@68) 7)) (= (type $generated@@49) $generated@@68)) (= (type $generated@@50) $generated@@68)) (= (type $generated@@51) $generated@@68)) (= (type $generated@@52) $generated@@68)) (= (type $generated@@53) $generated@@68)) (= (type $generated@@54) $generated@@68)) (= (type $generated@@55) $generated@@68)) (= (type $generated@@56) $generated@@68)) (= (type $generated@@57) $generated@@68)) (= (type $generated@@58) $generated@@68)) (= (type $generated@@59) $generated@@68)) (forall (($generated@@73 T@T) ) (= ($generated@@1 ($generated@@69 $generated@@73)) 8))) (forall (($generated@@74 T@T) ) (! (= ($generated@@70 ($generated@@69 $generated@@74)) $generated@@74)
 :pattern ( ($generated@@69 $generated@@74))
))) (= (type $generated@@60) ($generated@@69 $generated@@4))) (= ($generated@@1 $generated@@71) 9)) (= (type $generated@@61) $generated@@71)) (= (type $generated@@62) $generated@@68)) (= (type $generated@@63) $generated@@68)) (= (type $generated@@64) $generated@@68)) (= ($generated@@1 $generated@@72) 10)) (= (type $generated@@65) $generated@@72)) (= (type $generated@@66) $generated@@72)))
(assert (distinct $generated@@44 $generated@@45 $generated@@46 $generated@@47 $generated@@48 $generated@@49 $generated@@50 $generated@@51 $generated@@52 $generated@@53 $generated@@54 $generated@@55 $generated@@56 $generated@@57 $generated@@58 $generated@@59 $generated@@60 $generated@@61 $generated@@62 $generated@@63 $generated@@64 $generated@@65 $generated@@66)
)
(assert (forall (($generated@@76 T@U) ) (! (= (type ($generated@@75 $generated@@76)) $generated@@68)
 :pattern ( ($generated@@75 $generated@@76))
)))
(assert (= ($generated@@75 $generated@@44) $generated@@49))
(assert (= ($generated@@75 $generated@@45) $generated@@50))
(assert (= ($generated@@75 $generated@@46) $generated@@51))
(assert (= ($generated@@75 $generated@@47) $generated@@52))
(assert (= ($generated@@75 $generated@@48) $generated@@53))
(assert  (and (and (and (and (and (and (and (and (and (and (and (and (and (forall (($generated@@88 T@T) ($generated@@89 T@T) ) (= ($generated@@1 ($generated@@79 $generated@@88 $generated@@89)) 11)) (forall (($generated@@90 T@T) ($generated@@91 T@T) ) (! (= ($generated@@82 ($generated@@79 $generated@@90 $generated@@91)) $generated@@90)
 :pattern ( ($generated@@79 $generated@@90 $generated@@91))
))) (forall (($generated@@92 T@T) ($generated@@93 T@T) ) (! (= ($generated@@83 ($generated@@79 $generated@@92 $generated@@93)) $generated@@93)
 :pattern ( ($generated@@79 $generated@@92 $generated@@93))
))) (forall (($generated@@94 T@U) ($generated@@95 T@U) ) (! (let (($generated@@96 ($generated@@83 (type $generated@@94))))
(= (type ($generated@@84 $generated@@94 $generated@@95)) $generated@@96))
 :pattern ( ($generated@@84 $generated@@94 $generated@@95))
))) (forall (($generated@@97 T@U) ($generated@@98 T@U) ($generated@@99 T@U) ) (! (let (($generated@@100 (type $generated@@99)))
(let (($generated@@101 (type $generated@@98)))
(= (type ($generated@@85 $generated@@97 $generated@@98 $generated@@99)) ($generated@@79 $generated@@101 $generated@@100))))
 :pattern ( ($generated@@85 $generated@@97 $generated@@98 $generated@@99))
))) (forall (($generated@@102 T@U) ($generated@@103 T@U) ($generated@@104 T@U) ) (! (let (($generated@@105 ($generated@@83 (type $generated@@102))))
 (=> (= (type $generated@@104) $generated@@105) (= ($generated@@84 ($generated@@85 $generated@@102 $generated@@103 $generated@@104) $generated@@103) $generated@@104)))
 :weight 0
))) (and (forall (($generated@@106 T@U) ($generated@@107 T@U) ($generated@@108 T@U) ($generated@@109 T@U) ) (!  (or (= $generated@@108 $generated@@109) (= ($generated@@84 ($generated@@85 $generated@@107 $generated@@108 $generated@@106) $generated@@109) ($generated@@84 $generated@@107 $generated@@109)))
 :weight 0
)) (forall (($generated@@110 T@U) ($generated@@111 T@U) ($generated@@112 T@U) ($generated@@113 T@U) ) (!  (or true (= ($generated@@84 ($generated@@85 $generated@@111 $generated@@112 $generated@@110) $generated@@113) ($generated@@84 $generated@@111 $generated@@113)))
 :weight 0
)))) (= ($generated@@1 $generated@@80) 12)) (forall (($generated@@114 T@U) ($generated@@115 T@U) ) (! (let (($generated@@116 ($generated@@70 (type $generated@@115))))
(= (type ($generated@@86 $generated@@114 $generated@@115)) $generated@@116))
 :pattern ( ($generated@@86 $generated@@114 $generated@@115))
))) (= ($generated@@1 $generated@@81) 13)) (forall (($generated@@117 T@U) ($generated@@118 T@U) ($generated@@119 T@U) ) (! (= (type ($generated@@87 $generated@@117 $generated@@118 $generated@@119)) $generated@@81)
 :pattern ( ($generated@@87 $generated@@117 $generated@@118 $generated@@119))
))) (forall (($generated@@120 T@U) ($generated@@121 T@U) ($generated@@122 T@U) ) (! (let (($generated@@123 ($generated@@70 (type $generated@@121))))
 (=> (= (type $generated@@122) $generated@@123) (= ($generated@@86 ($generated@@87 $generated@@120 $generated@@121 $generated@@122) $generated@@121) $generated@@122)))
 :weight 0
))) (and (forall (($generated@@124 T@U) ($generated@@125 T@U) ($generated@@126 T@U) ($generated@@127 T@U) ) (!  (or (= $generated@@126 $generated@@127) (= ($generated@@86 ($generated@@87 $generated@@125 $generated@@126 $generated@@124) $generated@@127) ($generated@@86 $generated@@125 $generated@@127)))
 :weight 0
)) (forall (($generated@@128 T@U) ($generated@@129 T@U) ($generated@@130 T@U) ($generated@@131 T@U) ) (!  (or true (= ($generated@@86 ($generated@@87 $generated@@129 $generated@@130 $generated@@128) $generated@@131) ($generated@@86 $generated@@129 $generated@@131)))
 :weight 0
)))) (forall (($generated@@132 Int) ) (! (= (type ($generated@@78 $generated@@132)) $generated@@67)
 :pattern ( ($generated@@78 $generated@@132))
))))
(assert (forall (($generated@@133 T@U) ($generated@@134 T@U) ) (!  (=> (and (= (type $generated@@133) $generated@@2) (= (type $generated@@134) ($generated@@79 $generated@@80 $generated@@81))) ($generated@@77 $generated@@133 ($generated@@78 0) $generated@@134))
 :pattern ( ($generated@@77 $generated@@133 ($generated@@78 0) $generated@@134))
)))
(assert (forall (($generated@@136 T@U) ($generated@@137 T@U) ) (!  (=> (and (and (= (type $generated@@136) ($generated@@79 $generated@@80 $generated@@81)) (= (type $generated@@137) ($generated@@79 $generated@@80 $generated@@81))) ($generated@@135 $generated@@136 $generated@@137)) (forall (($generated@@138 T@U) ) (!  (=> (and (= (type $generated@@138) $generated@@80) ($generated@@0 ($generated@@86 ($generated@@84 $generated@@136 $generated@@138) $generated@@60))) ($generated@@0 ($generated@@86 ($generated@@84 $generated@@137 $generated@@138) $generated@@60)))
 :pattern ( ($generated@@86 ($generated@@84 $generated@@137 $generated@@138) $generated@@60))
)))
 :pattern ( ($generated@@135 $generated@@136 $generated@@137))
)))
(assert  (and (forall (($generated@@141 T@U) ) (! (= (type ($generated@@139 $generated@@141)) $generated@@67)
 :pattern ( ($generated@@139 $generated@@141))
)) (= (type $generated@@140) $generated@@80)))
(assert (forall (($generated@@142 T@U) ($generated@@143 T@U) ($generated@@144 T@U) ) (!  (=> (and (and (= (type $generated@@142) $generated@@67) (= (type $generated@@143) $generated@@80)) (= (type $generated@@144) ($generated@@79 $generated@@80 $generated@@81))) (= ($generated@@77 $generated@@143 ($generated@@139 $generated@@142) $generated@@144)  (or (= $generated@@143 $generated@@140) ($generated@@0 ($generated@@86 ($generated@@84 $generated@@144 $generated@@143) $generated@@60)))))
 :pattern ( ($generated@@77 $generated@@143 ($generated@@139 $generated@@142) $generated@@144))
)))
(assert (forall (($generated@@146 T@U) ) (!  (=> (= (type $generated@@146) $generated@@2) ($generated@@145 $generated@@146 ($generated@@78 0)))
 :pattern ( ($generated@@145 $generated@@146 ($generated@@78 0)))
)))
(assert  (=> (<= 0 $generated@@147) (forall (($generated@@151 T@U) ) (!  (=> (and (= (type $generated@@151) $generated@@67) (or ($generated@@149 $generated@@151) (not (= 0 $generated@@147)))) (= ($generated@@148 $generated@@151) ($generated@@150 56)))
 :pattern ( ($generated@@148 $generated@@151))
))))
(assert  (=> (<= 0 $generated@@147) (forall (($generated@@152 T@U) ) (!  (=> (and (= (type $generated@@152) $generated@@67) (or ($generated@@149 $generated@@152) (not (= 0 $generated@@147)))) (= ($generated@@148 $generated@@152) ($generated@@150 56)))
 :weight 3
 :pattern ( ($generated@@148 $generated@@152))
))))
(assert (forall (($generated@@154 T@U) ) (! (= (type ($generated@@153 $generated@@154)) $generated@@67)
 :pattern ( ($generated@@153 $generated@@154))
)))
(assert (forall (($generated@@155 T@U) ($generated@@156 T@U) ($generated@@157 T@U) ) (!  (=> (and (and (= (type $generated@@155) $generated@@67) (= (type $generated@@156) $generated@@80)) (= (type $generated@@157) ($generated@@79 $generated@@80 $generated@@81))) (= ($generated@@77 $generated@@156 ($generated@@153 $generated@@155) $generated@@157) ($generated@@77 $generated@@156 ($generated@@139 $generated@@155) $generated@@157)))
 :pattern ( ($generated@@77 $generated@@156 ($generated@@153 $generated@@155) $generated@@157))
)))
(assert  (and (= ($generated@@1 $generated@@160) 14) (forall (($generated@@161 T@U) ($generated@@162 T@U) ) (! (= (type ($generated@@159 $generated@@161 $generated@@162)) $generated@@67)
 :pattern ( ($generated@@159 $generated@@161 $generated@@162))
))))
(assert (forall (($generated@@163 T@U) ($generated@@164 T@U) ($generated@@165 T@U) ) (!  (=> (and (and (and (= (type $generated@@163) $generated@@67) (= (type $generated@@164) $generated@@67)) (= (type $generated@@165) $generated@@160)) ($generated@@145 $generated@@165 ($generated@@159 $generated@@163 $generated@@164))) ($generated@@158 $generated@@165))
 :pattern ( ($generated@@158 $generated@@165) ($generated@@145 $generated@@165 ($generated@@159 $generated@@163 $generated@@164)))
)))
(assert  (and (and (= ($generated@@1 $generated@@169) 15) (forall (($generated@@170 T@U) ) (! (= (type ($generated@@167 $generated@@170)) $generated@@169)
 :pattern ( ($generated@@167 $generated@@170))
))) (forall (($generated@@171 T@U) ) (! (= (type ($generated@@168 $generated@@171)) $generated@@169)
 :pattern ( ($generated@@168 $generated@@171))
))))
(assert (forall (($generated@@172 T@U) ($generated@@173 T@U) ) (!  (=> (and (and (= (type $generated@@172) $generated@@160) (= (type $generated@@173) $generated@@160)) true) (= ($generated@@166 $generated@@172 $generated@@173)  (and (= ($generated@@167 $generated@@172) ($generated@@167 $generated@@173)) (= ($generated@@168 $generated@@172) ($generated@@168 $generated@@173)))))
 :pattern ( ($generated@@166 $generated@@172 $generated@@173))
)))
(assert (forall (($generated@@176 T@U) ) (! (= (type ($generated@@174 $generated@@176)) $generated@@67)
 :pattern ( ($generated@@174 $generated@@176))
)))
(assert (forall (($generated@@177 T@U) ($generated@@178 T@U) ) (!  (=> (and (and (= (type $generated@@177) ($generated@@79 $generated@@169 $generated@@2)) (= (type $generated@@178) $generated@@67)) ($generated@@145 $generated@@177 ($generated@@174 $generated@@178))) ($generated@@175 $generated@@177))
 :pattern ( ($generated@@145 $generated@@177 ($generated@@174 $generated@@178)))
)))
(assert  (and (and (and (and (and (and (and (forall (($generated@@185 T@T) ($generated@@186 T@T) ) (= ($generated@@1 ($generated@@181 $generated@@185 $generated@@186)) 16)) (forall (($generated@@187 T@T) ($generated@@188 T@T) ) (! (= ($generated@@182 ($generated@@181 $generated@@187 $generated@@188)) $generated@@187)
 :pattern ( ($generated@@181 $generated@@187 $generated@@188))
))) (forall (($generated@@189 T@T) ($generated@@190 T@T) ) (! (= ($generated@@183 ($generated@@181 $generated@@189 $generated@@190)) $generated@@190)
 :pattern ( ($generated@@181 $generated@@189 $generated@@190))
))) (forall (($generated@@191 T@U) ($generated@@192 T@U) ($generated@@193 T@U) ) (! (let (($generated@@194 ($generated@@183 (type $generated@@191))))
(= (type ($generated@@179 $generated@@191 $generated@@192 $generated@@193)) $generated@@194))
 :pattern ( ($generated@@179 $generated@@191 $generated@@192 $generated@@193))
))) (forall (($generated@@195 T@U) ($generated@@196 T@U) ($generated@@197 T@U) ($generated@@198 T@U) ) (! (let (($generated@@199 (type $generated@@198)))
(let (($generated@@200 (type $generated@@196)))
(= (type ($generated@@184 $generated@@195 $generated@@196 $generated@@197 $generated@@198)) ($generated@@181 $generated@@200 $generated@@199))))
 :pattern ( ($generated@@184 $generated@@195 $generated@@196 $generated@@197 $generated@@198))
))) (forall (($generated@@201 T@U) ($generated@@202 T@U) ($generated@@203 T@U) ($generated@@204 T@U) ) (! (let (($generated@@205 ($generated@@183 (type $generated@@201))))
 (=> (= (type $generated@@204) $generated@@205) (= ($generated@@179 ($generated@@184 $generated@@201 $generated@@202 $generated@@203 $generated@@204) $generated@@202 $generated@@203) $generated@@204)))
 :weight 0
))) (and (and (forall (($generated@@206 T@U) ($generated@@207 T@U) ($generated@@208 T@U) ($generated@@209 T@U) ($generated@@210 T@U) ($generated@@211 T@U) ) (!  (or (= $generated@@208 $generated@@210) (= ($generated@@179 ($generated@@184 $generated@@207 $generated@@208 $generated@@209 $generated@@206) $generated@@210 $generated@@211) ($generated@@179 $generated@@207 $generated@@210 $generated@@211)))
 :weight 0
)) (forall (($generated@@212 T@U) ($generated@@213 T@U) ($generated@@214 T@U) ($generated@@215 T@U) ($generated@@216 T@U) ($generated@@217 T@U) ) (!  (or (= $generated@@215 $generated@@217) (= ($generated@@179 ($generated@@184 $generated@@213 $generated@@214 $generated@@215 $generated@@212) $generated@@216 $generated@@217) ($generated@@179 $generated@@213 $generated@@216 $generated@@217)))
 :weight 0
))) (forall (($generated@@218 T@U) ($generated@@219 T@U) ($generated@@220 T@U) ($generated@@221 T@U) ($generated@@222 T@U) ($generated@@223 T@U) ) (!  (or true (= ($generated@@179 ($generated@@184 $generated@@219 $generated@@220 $generated@@221 $generated@@218) $generated@@222 $generated@@223) ($generated@@179 $generated@@219 $generated@@222 $generated@@223)))
 :weight 0
)))) (forall (($generated@@224 T@U) ($generated@@225 T@U) ($generated@@226 T@U) ($generated@@227 Bool) ) (! (= (type ($generated@@180 $generated@@224 $generated@@225 $generated@@226 $generated@@227)) ($generated@@181 $generated@@80 $generated@@4))
 :pattern ( ($generated@@180 $generated@@224 $generated@@225 $generated@@226 $generated@@227))
))))
(assert (forall (($generated@@228 T@U) ($generated@@229 T@U) ($generated@@230 T@U) ($generated@@231 Bool) ($generated@@232 T@U) ($generated@@233 T@U) ) (! (let (($generated@@234 ($generated@@70 (type $generated@@233))))
 (=> (and (and (and (and (= (type $generated@@228) $generated@@80) (= (type $generated@@229) ($generated@@79 $generated@@80 $generated@@81))) (= (type $generated@@230) ($generated@@69 $generated@@4))) (= (type $generated@@232) $generated@@80)) (= (type $generated@@233) ($generated@@69 $generated@@234))) (= ($generated@@0 ($generated@@179 ($generated@@180 $generated@@228 $generated@@229 $generated@@230 $generated@@231) $generated@@232 $generated@@233))  (=> (and (not (= $generated@@232 $generated@@228)) ($generated@@0 ($generated@@86 ($generated@@84 $generated@@229 $generated@@232) $generated@@230))) $generated@@231))))
 :pattern ( ($generated@@179 ($generated@@180 $generated@@228 $generated@@229 $generated@@230 $generated@@231) $generated@@232 $generated@@233))
)))
(assert (forall (($generated@@237 T@U) ($generated@@238 T@U) ) (! (= (type ($generated@@235 $generated@@237 $generated@@238)) $generated@@160)
 :pattern ( ($generated@@235 $generated@@237 $generated@@238))
)))
(assert (forall (($generated@@239 T@U) ($generated@@240 T@U) ($generated@@241 T@U) ($generated@@242 T@U) ) (!  (=> (and (and (and (= (type $generated@@239) $generated@@67) (= (type $generated@@240) $generated@@67)) (= (type $generated@@241) $generated@@169)) (= (type $generated@@242) $generated@@169)) (= ($generated@@145 ($generated@@235 $generated@@241 $generated@@242) ($generated@@159 $generated@@239 $generated@@240))  (and ($generated@@236 $generated@@241 $generated@@239) ($generated@@236 $generated@@242 $generated@@240))))
 :pattern ( ($generated@@145 ($generated@@235 $generated@@241 $generated@@242) ($generated@@159 $generated@@239 $generated@@240)))
)))
(assert  (=> (<= 0 $generated@@147) (forall (($generated@@245 T@U) ($generated@@246 T@U) ) (!  (=> (and (and (= (type $generated@@245) $generated@@67) (= (type $generated@@246) $generated@@169)) (or ($generated@@244 $generated@@245 $generated@@246) (and (not (= 0 $generated@@147)) ($generated@@236 $generated@@246 $generated@@245)))) (= ($generated@@243 $generated@@245 $generated@@246) ($generated@@150 57)))
 :pattern ( ($generated@@243 $generated@@245 $generated@@246))
))))
(assert (forall (($generated@@247 T@U) ($generated@@248 T@U) ) (!  (=> (and (= (type $generated@@247) $generated@@160) (= (type $generated@@248) $generated@@160)) (= ($generated@@166 $generated@@247 $generated@@248) (= $generated@@247 $generated@@248)))
 :pattern ( ($generated@@166 $generated@@247 $generated@@248))
)))
(assert (forall (($generated@@250 T@U) ) (! (= (type ($generated@@249 $generated@@250)) $generated@@67)
 :pattern ( ($generated@@249 $generated@@250))
)))
(assert (forall (($generated@@251 T@U) ($generated@@252 T@U) ) (!  (=> (and (= (type $generated@@251) ($generated@@79 $generated@@169 $generated@@4)) (= (type $generated@@252) $generated@@67)) (= ($generated@@145 $generated@@251 ($generated@@249 $generated@@252)) (forall (($generated@@253 T@U) ) (!  (=> (and (= (type $generated@@253) $generated@@169) ($generated@@0 ($generated@@84 $generated@@251 $generated@@253))) ($generated@@236 $generated@@253 $generated@@252))
 :pattern ( ($generated@@84 $generated@@251 $generated@@253))
))))
 :pattern ( ($generated@@145 $generated@@251 ($generated@@249 $generated@@252)))
)))
(assert (forall (($generated@@255 T@U) ) (! (= (type ($generated@@254 $generated@@255)) $generated@@67)
 :pattern ( ($generated@@254 $generated@@255))
)))
(assert (forall (($generated@@256 T@U) ($generated@@257 T@U) ) (!  (=> (and (= (type $generated@@256) ($generated@@79 $generated@@169 $generated@@4)) (= (type $generated@@257) $generated@@67)) (= ($generated@@145 $generated@@256 ($generated@@254 $generated@@257)) (forall (($generated@@258 T@U) ) (!  (=> (and (= (type $generated@@258) $generated@@169) ($generated@@0 ($generated@@84 $generated@@256 $generated@@258))) ($generated@@236 $generated@@258 $generated@@257))
 :pattern ( ($generated@@84 $generated@@256 $generated@@258))
))))
 :pattern ( ($generated@@145 $generated@@256 ($generated@@254 $generated@@257)))
)))
(assert (forall (($generated@@259 Int) ) (! (= ($generated@@150 $generated@@259) $generated@@259)
 :pattern ( ($generated@@150 $generated@@259))
)))
(assert (forall (($generated@@261 T@U) ) (! (let (($generated@@262 (type $generated@@261)))
(= (type ($generated@@260 $generated@@261)) $generated@@262))
 :pattern ( ($generated@@260 $generated@@261))
)))
(assert (forall (($generated@@263 T@U) ) (! (= ($generated@@260 $generated@@263) $generated@@263)
 :pattern ( ($generated@@260 $generated@@263))
)))
(assert  (=> (<= 0 $generated@@147) (forall (($generated@@264 T@U) ) (!  (=> (and (= (type $generated@@264) $generated@@67) (or ($generated@@149 $generated@@264) (not (= 0 $generated@@147)))) true)
 :pattern ( ($generated@@148 $generated@@264))
))))
(assert (forall (($generated@@267 T@U) ($generated@@268 T@U) ($generated@@269 T@U) ($generated@@270 T@U) ($generated@@271 T@U) ) (!  (=> (and (and (and (and (and (= (type $generated@@267) $generated@@67) (= (type $generated@@268) $generated@@67)) (= (type $generated@@269) $generated@@169)) (= (type $generated@@270) $generated@@169)) (= (type $generated@@271) ($generated@@79 $generated@@80 $generated@@81))) ($generated@@265 $generated@@271)) (= ($generated@@77 ($generated@@235 $generated@@269 $generated@@270) ($generated@@159 $generated@@267 $generated@@268) $generated@@271)  (and ($generated@@266 $generated@@269 $generated@@267 $generated@@271) ($generated@@266 $generated@@270 $generated@@268 $generated@@271))))
 :pattern ( ($generated@@77 ($generated@@235 $generated@@269 $generated@@270) ($generated@@159 $generated@@267 $generated@@268) $generated@@271))
)))
(assert  (=> (<= 0 $generated@@147) (forall (($generated@@272 T@U) ($generated@@273 T@U) ) (!  (=> (and (and (= (type $generated@@272) $generated@@67) (= (type $generated@@273) $generated@@169)) (or ($generated@@244 $generated@@272 ($generated@@260 $generated@@273)) (and (not (= 0 $generated@@147)) ($generated@@236 $generated@@273 $generated@@272)))) (= ($generated@@243 $generated@@272 ($generated@@260 $generated@@273)) ($generated@@150 57)))
 :weight 3
 :pattern ( ($generated@@243 $generated@@272 ($generated@@260 $generated@@273)))
))))
(assert (forall (($generated@@275 T@U) ) (! (= (type ($generated@@274 $generated@@275)) $generated@@71)
 :pattern ( ($generated@@274 $generated@@275))
)))
(assert (forall (($generated@@276 T@U) ) (!  (=> (= (type $generated@@276) $generated@@160) (= ($generated@@158 $generated@@276) (= ($generated@@274 $generated@@276) $generated@@61)))
 :pattern ( ($generated@@158 $generated@@276))
)))
(assert (forall (($generated@@277 T@U) ) (!  (=> (and (= (type $generated@@277) $generated@@160) ($generated@@158 $generated@@277)) (exists (($generated@@278 T@U) ($generated@@279 T@U) ) (!  (and (and (= (type $generated@@278) $generated@@169) (= (type $generated@@279) $generated@@169)) (= $generated@@277 ($generated@@235 $generated@@278 $generated@@279)))
 :no-pattern (type $generated@@278)
 :no-pattern (type $generated@@279)
 :no-pattern ($generated $generated@@278)
 :no-pattern ($generated@@0 $generated@@278)
 :no-pattern ($generated $generated@@279)
 :no-pattern ($generated@@0 $generated@@279)
)))
 :pattern ( ($generated@@158 $generated@@277))
)))
(assert  (and (and (forall (($generated@@284 T@T) ) (= ($generated@@1 ($generated@@282 $generated@@284)) 17)) (forall (($generated@@285 T@T) ) (! (= ($generated@@283 ($generated@@282 $generated@@285)) $generated@@285)
 :pattern ( ($generated@@282 $generated@@285))
))) (forall (($generated@@286 T@T) ) (! (= (type ($generated@@280 $generated@@286)) ($generated@@282 $generated@@286))
 :pattern ( ($generated@@280 $generated@@286))
))))
(assert (forall (($generated@@287 T@T) ) (! (= ($generated@@281 ($generated@@280 $generated@@287)) 0)
 :pattern ( ($generated@@280 $generated@@287))
)))
(assert  (=> (<= 0 $generated@@147) (forall (($generated@@288 T@U) ($generated@@289 T@U) ) (!  (=> (and (and (= (type $generated@@288) $generated@@67) (= (type $generated@@289) $generated@@169)) (or ($generated@@244 $generated@@288 $generated@@289) (and (not (= 0 $generated@@147)) ($generated@@236 $generated@@289 $generated@@288)))) true)
 :pattern ( ($generated@@243 $generated@@288 $generated@@289))
))))
(assert (forall (($generated@@290 T@U) ($generated@@291 T@U) ) (!  (=> (and (= (type $generated@@290) $generated@@67) (= (type $generated@@291) $generated@@80)) (= ($generated@@145 $generated@@291 ($generated@@153 $generated@@290))  (and ($generated@@145 $generated@@291 ($generated@@139 $generated@@290)) (not (= $generated@@291 $generated@@140)))))
 :pattern ( ($generated@@145 $generated@@291 ($generated@@153 $generated@@290)))
)))
(assert (forall (($generated@@293 T@U) ) (! (= (type ($generated@@292 $generated@@293)) $generated@@169)
 :pattern ( ($generated@@292 $generated@@293))
)))
(assert (forall (($generated@@294 T@U) ($generated@@295 T@U) ($generated@@296 T@U) ) (!  (=> (and (= (type $generated@@295) $generated@@67) (= (type $generated@@296) ($generated@@79 $generated@@80 $generated@@81))) (= ($generated@@266 ($generated@@292 $generated@@294) $generated@@295 $generated@@296) ($generated@@77 $generated@@294 $generated@@295 $generated@@296)))
 :pattern ( ($generated@@266 ($generated@@292 $generated@@294) $generated@@295 $generated@@296))
)))
(assert (forall (($generated@@297 T@U) ($generated@@298 T@U) ($generated@@299 T@U) ($generated@@300 T@U) ) (!  (=> (and (and (and (and (and (= (type $generated@@297) ($generated@@79 $generated@@80 $generated@@81)) (= (type $generated@@298) ($generated@@79 $generated@@80 $generated@@81))) (= (type $generated@@299) $generated@@169)) (= (type $generated@@300) $generated@@67)) ($generated@@135 $generated@@297 $generated@@298)) ($generated@@266 $generated@@299 $generated@@300 $generated@@297)) ($generated@@266 $generated@@299 $generated@@300 $generated@@298))
 :pattern ( ($generated@@135 $generated@@297 $generated@@298) ($generated@@266 $generated@@299 $generated@@300 $generated@@297))
)))
(assert (forall (($generated@@301 T@U) ($generated@@302 T@U) ($generated@@303 T@U) ($generated@@304 T@U) ) (!  (=> (and (and (and (and (= (type $generated@@301) ($generated@@79 $generated@@80 $generated@@81)) (= (type $generated@@302) ($generated@@79 $generated@@80 $generated@@81))) (= (type $generated@@304) $generated@@67)) ($generated@@135 $generated@@301 $generated@@302)) ($generated@@77 $generated@@303 $generated@@304 $generated@@301)) ($generated@@77 $generated@@303 $generated@@304 $generated@@302))
 :pattern ( ($generated@@135 $generated@@301 $generated@@302) ($generated@@77 $generated@@303 $generated@@304 $generated@@301))
)))
(assert (forall (($generated@@307 T@T) ) (! (= (type ($generated@@306 $generated@@307)) ($generated@@79 $generated@@307 $generated@@2))
 :pattern ( ($generated@@306 $generated@@307))
)))
(assert (forall (($generated@@308 T@U) ) (! (let (($generated@@309 ($generated@@82 (type $generated@@308))))
 (=> (= (type $generated@@308) ($generated@@79 $generated@@309 $generated@@2)) (and (= (= ($generated@@305 $generated@@308) 0) (= $generated@@308 ($generated@@306 $generated@@309))) (=> (not (= ($generated@@305 $generated@@308) 0)) (exists (($generated@@310 T@U) ) (!  (and (= (type $generated@@310) $generated@@309) (< 0 ($generated ($generated@@84 $generated@@308 $generated@@310))))
 :no-pattern (type $generated@@310)
 :no-pattern ($generated $generated@@310)
 :no-pattern ($generated@@0 $generated@@310)
))))))
 :pattern ( ($generated@@305 $generated@@308))
)))
(assert (forall (($generated@@312 T@U) ) (! (= (type ($generated@@311 $generated@@312)) $generated@@72)
 :pattern ( ($generated@@311 $generated@@312))
)))
(assert (forall (($generated@@313 T@U) ) (!  (=> (= (type $generated@@313) $generated@@67) (and (= ($generated@@75 ($generated@@139 $generated@@313)) $generated@@63) (= ($generated@@311 ($generated@@139 $generated@@313)) $generated@@66)))
 :pattern ( ($generated@@139 $generated@@313))
)))
(assert (forall (($generated@@314 T@U) ) (!  (=> (= (type $generated@@314) $generated@@67) (and (= ($generated@@75 ($generated@@153 $generated@@314)) $generated@@64) (= ($generated@@311 ($generated@@153 $generated@@314)) $generated@@66)))
 :pattern ( ($generated@@153 $generated@@314))
)))
(assert  (and (and (and (and (forall (($generated@@320 T@T) ($generated@@321 T@T) ) (= ($generated@@1 ($generated@@317 $generated@@320 $generated@@321)) 18)) (forall (($generated@@322 T@T) ($generated@@323 T@T) ) (! (= ($generated@@318 ($generated@@317 $generated@@322 $generated@@323)) $generated@@322)
 :pattern ( ($generated@@317 $generated@@322 $generated@@323))
))) (forall (($generated@@324 T@T) ($generated@@325 T@T) ) (! (= ($generated@@319 ($generated@@317 $generated@@324 $generated@@325)) $generated@@325)
 :pattern ( ($generated@@317 $generated@@324 $generated@@325))
))) (forall (($generated@@326 T@U) ) (! (let (($generated@@327 ($generated@@318 (type $generated@@326))))
(= (type ($generated@@315 $generated@@326)) ($generated@@79 $generated@@327 $generated@@4)))
 :pattern ( ($generated@@315 $generated@@326))
))) (forall (($generated@@328 T@T) ($generated@@329 T@T) ) (! (= (type ($generated@@316 $generated@@328 $generated@@329)) ($generated@@317 $generated@@328 $generated@@329))
 :pattern ( ($generated@@316 $generated@@328 $generated@@329))
))))
(assert (forall (($generated@@330 T@U) ($generated@@331 T@T) ) (! (let (($generated@@332 (type $generated@@330)))
 (not ($generated@@0 ($generated@@84 ($generated@@315 ($generated@@316 $generated@@332 $generated@@331)) $generated@@330))))
 :pattern ( (let (($generated@@332 (type $generated@@330)))
($generated@@84 ($generated@@315 ($generated@@316 $generated@@332 $generated@@331)) $generated@@330)))
)))
(assert  (and (and (and (and (forall (($generated@@338 T@T) ($generated@@339 T@T) ) (= ($generated@@1 ($generated@@335 $generated@@338 $generated@@339)) 19)) (forall (($generated@@340 T@T) ($generated@@341 T@T) ) (! (= ($generated@@336 ($generated@@335 $generated@@340 $generated@@341)) $generated@@340)
 :pattern ( ($generated@@335 $generated@@340 $generated@@341))
))) (forall (($generated@@342 T@T) ($generated@@343 T@T) ) (! (= ($generated@@337 ($generated@@335 $generated@@342 $generated@@343)) $generated@@343)
 :pattern ( ($generated@@335 $generated@@342 $generated@@343))
))) (forall (($generated@@344 T@U) ) (! (let (($generated@@345 ($generated@@336 (type $generated@@344))))
(= (type ($generated@@333 $generated@@344)) ($generated@@79 $generated@@345 $generated@@4)))
 :pattern ( ($generated@@333 $generated@@344))
))) (forall (($generated@@346 T@T) ($generated@@347 T@T) ) (! (= (type ($generated@@334 $generated@@346 $generated@@347)) ($generated@@335 $generated@@346 $generated@@347))
 :pattern ( ($generated@@334 $generated@@346 $generated@@347))
))))
(assert (forall (($generated@@348 T@U) ($generated@@349 T@T) ) (! (let (($generated@@350 (type $generated@@348)))
 (not ($generated@@0 ($generated@@84 ($generated@@333 ($generated@@334 $generated@@350 $generated@@349)) $generated@@348))))
 :pattern ( (let (($generated@@350 (type $generated@@348)))
($generated@@84 ($generated@@333 ($generated@@334 $generated@@350 $generated@@349)) $generated@@348)))
)))
(assert  (=> (<= 0 $generated@@147) (forall (($generated@@353 T@U) ($generated@@354 T@U) ) (!  (=> (and (and (= (type $generated@@353) $generated@@67) (= (type $generated@@354) $generated@@67)) (or ($generated@@352 $generated@@353 $generated@@354) (not (= 0 $generated@@147)))) (= ($generated@@351 $generated@@353 $generated@@354) ($generated@@150 58)))
 :pattern ( ($generated@@351 $generated@@353 $generated@@354))
))))
(assert  (=> (<= 0 $generated@@147) (forall (($generated@@355 T@U) ($generated@@356 T@U) ) (!  (=> (and (and (= (type $generated@@355) $generated@@67) (= (type $generated@@356) $generated@@67)) (or ($generated@@352 $generated@@355 $generated@@356) (not (= 0 $generated@@147)))) (= ($generated@@351 $generated@@355 $generated@@356) ($generated@@150 58)))
 :weight 3
 :pattern ( ($generated@@351 $generated@@355 $generated@@356))
))))
(assert (forall (($generated@@357 T@U) ) (! (let (($generated@@358 ($generated@@82 (type $generated@@357))))
 (=> (= (type $generated@@357) ($generated@@79 $generated@@358 $generated@@2)) (= ($generated@@175 $generated@@357) (forall (($generated@@359 T@U) ) (!  (=> (= (type $generated@@359) $generated@@358) (and (<= 0 ($generated ($generated@@84 $generated@@357 $generated@@359))) (<= ($generated ($generated@@84 $generated@@357 $generated@@359)) ($generated@@305 $generated@@357))))
 :pattern ( ($generated@@84 $generated@@357 $generated@@359))
)))))
 :pattern ( ($generated@@175 $generated@@357))
)))
(assert (forall (($generated@@361 T@U) ) (! (= (type ($generated@@360 $generated@@361)) $generated@@67)
 :pattern ( ($generated@@360 $generated@@361))
)))
(assert (forall (($generated@@362 T@U) ($generated@@363 T@U) ) (!  (=> (and (= (type $generated@@362) $generated@@67) (= (type $generated@@363) $generated@@80)) (= ($generated@@145 $generated@@363 ($generated@@139 $generated@@362))  (or (= $generated@@363 $generated@@140) (= ($generated@@360 $generated@@363) ($generated@@139 $generated@@362)))))
 :pattern ( ($generated@@145 $generated@@363 ($generated@@139 $generated@@362)))
)))
(assert (forall (($generated@@364 T@U) ) (! (let (($generated@@365 ($generated@@319 (type $generated@@364))))
(let (($generated@@366 ($generated@@318 (type $generated@@364))))
 (=> (= (type $generated@@364) ($generated@@317 $generated@@366 $generated@@365)) (or (= $generated@@364 ($generated@@316 $generated@@366 $generated@@365)) (exists (($generated@@367 T@U) ) (!  (and (= (type $generated@@367) $generated@@366) ($generated@@0 ($generated@@84 ($generated@@315 $generated@@364) $generated@@367)))
 :no-pattern (type $generated@@367)
 :no-pattern ($generated $generated@@367)
 :no-pattern ($generated@@0 $generated@@367)
))))))
 :pattern ( ($generated@@315 $generated@@364))
)))
(assert (forall (($generated@@369 T@U) ) (! (let (($generated@@370 ($generated@@319 (type $generated@@369))))
(= (type ($generated@@368 $generated@@369)) ($generated@@79 $generated@@370 $generated@@4)))
 :pattern ( ($generated@@368 $generated@@369))
)))
(assert (forall (($generated@@371 T@U) ) (! (let (($generated@@372 ($generated@@319 (type $generated@@371))))
(let (($generated@@373 ($generated@@318 (type $generated@@371))))
 (=> (= (type $generated@@371) ($generated@@317 $generated@@373 $generated@@372)) (or (= $generated@@371 ($generated@@316 $generated@@373 $generated@@372)) (exists (($generated@@374 T@U) ) (!  (and (= (type $generated@@374) $generated@@372) ($generated@@0 ($generated@@84 ($generated@@368 $generated@@371) $generated@@374)))
 :no-pattern (type $generated@@374)
 :no-pattern ($generated $generated@@374)
 :no-pattern ($generated@@0 $generated@@374)
))))))
 :pattern ( ($generated@@368 $generated@@371))
)))
(assert (forall (($generated@@375 T@U) ) (! (let (($generated@@376 ($generated@@337 (type $generated@@375))))
(let (($generated@@377 ($generated@@336 (type $generated@@375))))
 (=> (= (type $generated@@375) ($generated@@335 $generated@@377 $generated@@376)) (or (= $generated@@375 ($generated@@334 $generated@@377 $generated@@376)) (exists (($generated@@378 T@U) ) (!  (and (= (type $generated@@378) $generated@@377) ($generated@@0 ($generated@@84 ($generated@@333 $generated@@375) $generated@@378)))
 :no-pattern (type $generated@@378)
 :no-pattern ($generated $generated@@378)
 :no-pattern ($generated@@0 $generated@@378)
))))))
 :pattern ( ($generated@@333 $generated@@375))
)))
(assert (forall (($generated@@380 T@U) ) (! (let (($generated@@381 ($generated@@337 (type $generated@@380))))
(= (type ($generated@@379 $generated@@380)) ($generated@@79 $generated@@381 $generated@@4)))
 :pattern ( ($generated@@379 $generated@@380))
)))
(assert (forall (($generated@@382 T@U) ) (! (let (($generated@@383 ($generated@@337 (type $generated@@382))))
(let (($generated@@384 ($generated@@336 (type $generated@@382))))
 (=> (= (type $generated@@382) ($generated@@335 $generated@@384 $generated@@383)) (or (= $generated@@382 ($generated@@334 $generated@@384 $generated@@383)) (exists (($generated@@385 T@U) ) (!  (and (= (type $generated@@385) $generated@@383) ($generated@@0 ($generated@@84 ($generated@@379 $generated@@382) $generated@@385)))
 :no-pattern (type $generated@@385)
 :no-pattern ($generated $generated@@385)
 :no-pattern ($generated@@0 $generated@@385)
))))))
 :pattern ( ($generated@@379 $generated@@382))
)))
(assert (forall (($generated@@386 T@U) ($generated@@387 T@U) ) (!  (=> (and (= (type $generated@@386) ($generated@@79 $generated@@169 $generated@@2)) (= (type $generated@@387) $generated@@67)) (= ($generated@@145 $generated@@386 ($generated@@174 $generated@@387)) (forall (($generated@@388 T@U) ) (!  (=> (and (= (type $generated@@388) $generated@@169) (< 0 ($generated ($generated@@84 $generated@@386 $generated@@388)))) ($generated@@236 $generated@@388 $generated@@387))
 :pattern ( ($generated@@84 $generated@@386 $generated@@388))
))))
 :pattern ( ($generated@@145 $generated@@386 ($generated@@174 $generated@@387)))
)))
(assert (forall (($generated@@389 T@U) ($generated@@390 T@U) ($generated@@391 T@U) ) (!  (=> (and (and (= (type $generated@@389) ($generated@@79 $generated@@169 $generated@@4)) (= (type $generated@@390) $generated@@67)) (= (type $generated@@391) ($generated@@79 $generated@@80 $generated@@81))) (= ($generated@@77 $generated@@389 ($generated@@249 $generated@@390) $generated@@391) (forall (($generated@@392 T@U) ) (!  (=> (and (= (type $generated@@392) $generated@@169) ($generated@@0 ($generated@@84 $generated@@389 $generated@@392))) ($generated@@266 $generated@@392 $generated@@390 $generated@@391))
 :pattern ( ($generated@@84 $generated@@389 $generated@@392))
))))
 :pattern ( ($generated@@77 $generated@@389 ($generated@@249 $generated@@390) $generated@@391))
)))
(assert (forall (($generated@@393 T@U) ($generated@@394 T@U) ($generated@@395 T@U) ) (!  (=> (and (and (= (type $generated@@393) ($generated@@79 $generated@@169 $generated@@4)) (= (type $generated@@394) $generated@@67)) (= (type $generated@@395) ($generated@@79 $generated@@80 $generated@@81))) (= ($generated@@77 $generated@@393 ($generated@@254 $generated@@394) $generated@@395) (forall (($generated@@396 T@U) ) (!  (=> (and (= (type $generated@@396) $generated@@169) ($generated@@0 ($generated@@84 $generated@@393 $generated@@396))) ($generated@@266 $generated@@396 $generated@@394 $generated@@395))
 :pattern ( ($generated@@84 $generated@@393 $generated@@396))
))))
 :pattern ( ($generated@@77 $generated@@393 ($generated@@254 $generated@@394) $generated@@395))
)))
(assert (forall (($generated@@397 T@U) ) (! (let (($generated@@398 (type $generated@@397)))
(= ($generated ($generated@@84 ($generated@@306 $generated@@398) $generated@@397)) 0))
 :pattern ( (let (($generated@@398 (type $generated@@397)))
($generated@@84 ($generated@@306 $generated@@398) $generated@@397)))
)))
(assert  (and (and (forall (($generated@@402 T@U) ) (! (= (type ($generated@@399 $generated@@402)) ($generated@@79 $generated@@169 $generated@@4))
 :pattern ( ($generated@@399 $generated@@402))
)) (forall (($generated@@403 T@T) ($generated@@404 T@U) ) (! (= (type ($generated@@400 $generated@@403 $generated@@404)) $generated@@403)
 :pattern ( ($generated@@400 $generated@@403 $generated@@404))
))) (forall (($generated@@405 T@U) ) (! (let (($generated@@406 ($generated@@319 (type $generated@@405))))
(let (($generated@@407 ($generated@@318 (type $generated@@405))))
(= (type ($generated@@401 $generated@@405)) ($generated@@79 $generated@@407 $generated@@406))))
 :pattern ( ($generated@@401 $generated@@405))
))))
(assert (forall (($generated@@408 T@U) ($generated@@409 T@U) ) (!  (=> (and (= (type $generated@@408) ($generated@@317 $generated@@169 $generated@@169)) (= (type $generated@@409) $generated@@169)) (= ($generated@@0 ($generated@@84 ($generated@@399 $generated@@408) $generated@@409))  (and ($generated@@0 ($generated@@84 ($generated@@315 $generated@@408) ($generated@@167 ($generated@@400 $generated@@160 $generated@@409)))) (= ($generated@@84 ($generated@@401 $generated@@408) ($generated@@167 ($generated@@400 $generated@@160 $generated@@409))) ($generated@@168 ($generated@@400 $generated@@160 $generated@@409))))))
 :pattern ( ($generated@@84 ($generated@@399 $generated@@408) $generated@@409))
)))
(assert  (and (forall (($generated@@412 T@U) ) (! (= (type ($generated@@410 $generated@@412)) ($generated@@79 $generated@@169 $generated@@4))
 :pattern ( ($generated@@410 $generated@@412))
)) (forall (($generated@@413 T@U) ) (! (let (($generated@@414 ($generated@@337 (type $generated@@413))))
(let (($generated@@415 ($generated@@336 (type $generated@@413))))
(= (type ($generated@@411 $generated@@413)) ($generated@@79 $generated@@415 $generated@@414))))
 :pattern ( ($generated@@411 $generated@@413))
))))
(assert (forall (($generated@@416 T@U) ($generated@@417 T@U) ) (!  (=> (and (= (type $generated@@416) ($generated@@335 $generated@@169 $generated@@169)) (= (type $generated@@417) $generated@@169)) (= ($generated@@0 ($generated@@84 ($generated@@410 $generated@@416) $generated@@417))  (and ($generated@@0 ($generated@@84 ($generated@@333 $generated@@416) ($generated@@167 ($generated@@400 $generated@@160 $generated@@417)))) (= ($generated@@84 ($generated@@411 $generated@@416) ($generated@@167 ($generated@@400 $generated@@160 $generated@@417))) ($generated@@168 ($generated@@400 $generated@@160 $generated@@417))))))
 :pattern ( ($generated@@84 ($generated@@410 $generated@@416) $generated@@417))
)))
(assert (forall (($generated@@418 T@U) ($generated@@419 T@U) ) (! (let (($generated@@420 (type $generated@@419)))
(let (($generated@@421 ($generated@@318 (type $generated@@418))))
 (=> (= (type $generated@@418) ($generated@@317 $generated@@421 $generated@@420)) (= ($generated@@0 ($generated@@84 ($generated@@368 $generated@@418) $generated@@419)) (exists (($generated@@422 T@U) ) (!  (and (= (type $generated@@422) $generated@@421) (and ($generated@@0 ($generated@@84 ($generated@@315 $generated@@418) $generated@@422)) (= $generated@@419 ($generated@@84 ($generated@@401 $generated@@418) $generated@@422))))
 :pattern ( ($generated@@84 ($generated@@315 $generated@@418) $generated@@422))
 :pattern ( ($generated@@84 ($generated@@401 $generated@@418) $generated@@422))
))))))
 :pattern ( ($generated@@84 ($generated@@368 $generated@@418) $generated@@419))
)))
(assert (forall (($generated@@423 T@U) ($generated@@424 T@U) ) (! (let (($generated@@425 (type $generated@@424)))
(let (($generated@@426 ($generated@@336 (type $generated@@423))))
 (=> (= (type $generated@@423) ($generated@@335 $generated@@426 $generated@@425)) (= ($generated@@0 ($generated@@84 ($generated@@379 $generated@@423) $generated@@424)) (exists (($generated@@427 T@U) ) (!  (and (= (type $generated@@427) $generated@@426) (and ($generated@@0 ($generated@@84 ($generated@@333 $generated@@423) $generated@@427)) (= $generated@@424 ($generated@@84 ($generated@@411 $generated@@423) $generated@@427))))
 :pattern ( ($generated@@84 ($generated@@333 $generated@@423) $generated@@427))
 :pattern ( ($generated@@84 ($generated@@411 $generated@@423) $generated@@427))
))))))
 :pattern ( ($generated@@84 ($generated@@379 $generated@@423) $generated@@424))
)))
(assert (forall (($generated@@429 T@U) ($generated@@430 T@U) ) (! (= (type ($generated@@428 $generated@@429 $generated@@430)) $generated@@67)
 :pattern ( ($generated@@428 $generated@@429 $generated@@430))
)))
(assert (forall (($generated@@431 T@U) ($generated@@432 T@U) ($generated@@433 T@U) ($generated@@434 T@U) ) (!  (=> (and (and (and (= (type $generated@@431) ($generated@@317 $generated@@169 $generated@@169)) (= (type $generated@@432) $generated@@67)) (= (type $generated@@433) $generated@@67)) (= (type $generated@@434) ($generated@@79 $generated@@80 $generated@@81))) (= ($generated@@77 $generated@@431 ($generated@@428 $generated@@432 $generated@@433) $generated@@434) (forall (($generated@@435 T@U) ) (!  (=> (and (= (type $generated@@435) $generated@@169) ($generated@@0 ($generated@@84 ($generated@@315 $generated@@431) $generated@@435))) (and ($generated@@266 ($generated@@84 ($generated@@401 $generated@@431) $generated@@435) $generated@@433 $generated@@434) ($generated@@266 $generated@@435 $generated@@432 $generated@@434)))
 :pattern ( ($generated@@84 ($generated@@401 $generated@@431) $generated@@435))
 :pattern ( ($generated@@84 ($generated@@315 $generated@@431) $generated@@435))
))))
 :pattern ( ($generated@@77 $generated@@431 ($generated@@428 $generated@@432 $generated@@433) $generated@@434))
)))
(assert (forall (($generated@@437 T@U) ($generated@@438 T@U) ) (! (= (type ($generated@@436 $generated@@437 $generated@@438)) $generated@@67)
 :pattern ( ($generated@@436 $generated@@437 $generated@@438))
)))
(assert (forall (($generated@@439 T@U) ($generated@@440 T@U) ($generated@@441 T@U) ($generated@@442 T@U) ) (!  (=> (and (and (and (= (type $generated@@439) ($generated@@335 $generated@@169 $generated@@169)) (= (type $generated@@440) $generated@@67)) (= (type $generated@@441) $generated@@67)) (= (type $generated@@442) ($generated@@79 $generated@@80 $generated@@81))) (= ($generated@@77 $generated@@439 ($generated@@436 $generated@@440 $generated@@441) $generated@@442) (forall (($generated@@443 T@U) ) (!  (=> (and (= (type $generated@@443) $generated@@169) ($generated@@0 ($generated@@84 ($generated@@333 $generated@@439) $generated@@443))) (and ($generated@@266 ($generated@@84 ($generated@@411 $generated@@439) $generated@@443) $generated@@441 $generated@@442) ($generated@@266 $generated@@443 $generated@@440 $generated@@442)))
 :pattern ( ($generated@@84 ($generated@@411 $generated@@439) $generated@@443))
 :pattern ( ($generated@@84 ($generated@@333 $generated@@439) $generated@@443))
))))
 :pattern ( ($generated@@77 $generated@@439 ($generated@@436 $generated@@440 $generated@@441) $generated@@442))
)))
(assert (forall (($generated@@444 T@U) ($generated@@445 T@U) ($generated@@446 T@U) ) (!  (=> (and (and (and (and (= (type $generated@@444) ($generated@@79 $generated@@80 $generated@@81)) (= (type $generated@@445) ($generated@@79 $generated@@80 $generated@@81))) (= (type $generated@@446) ($generated@@79 $generated@@80 $generated@@81))) (not (= $generated@@444 $generated@@446))) (and ($generated@@135 $generated@@444 $generated@@445) ($generated@@135 $generated@@445 $generated@@446))) ($generated@@135 $generated@@444 $generated@@446))
 :pattern ( ($generated@@135 $generated@@444 $generated@@445) ($generated@@135 $generated@@445 $generated@@446))
)))
(assert  (=> (<= 0 $generated@@147) (forall (($generated@@447 T@U) ($generated@@448 T@U) ) (!  (=> (and (and (= (type $generated@@447) $generated@@67) (= (type $generated@@448) $generated@@67)) (or ($generated@@352 $generated@@447 $generated@@448) (not (= 0 $generated@@147)))) true)
 :pattern ( ($generated@@351 $generated@@447 $generated@@448))
))))
(assert (forall (($generated@@450 T@T) ) (! (= (type ($generated@@449 $generated@@450)) ($generated@@79 $generated@@450 $generated@@4))
 :pattern ( ($generated@@449 $generated@@450))
)))
(assert (forall (($generated@@451 T@U) ) (! (let (($generated@@452 ($generated@@337 (type $generated@@451))))
(let (($generated@@453 ($generated@@336 (type $generated@@451))))
 (=> (= (type $generated@@451) ($generated@@335 $generated@@453 $generated@@452)) (= (= $generated@@451 ($generated@@334 $generated@@453 $generated@@452)) (= ($generated@@333 $generated@@451) ($generated@@449 $generated@@453))))))
 :pattern ( ($generated@@333 $generated@@451))
)))
(assert (forall (($generated@@454 T@U) ) (! (let (($generated@@455 ($generated@@337 (type $generated@@454))))
(let (($generated@@456 ($generated@@336 (type $generated@@454))))
 (=> (= (type $generated@@454) ($generated@@335 $generated@@456 $generated@@455)) (= (= $generated@@454 ($generated@@334 $generated@@456 $generated@@455)) (= ($generated@@379 $generated@@454) ($generated@@449 $generated@@455))))))
 :pattern ( ($generated@@379 $generated@@454))
)))
(assert (forall (($generated@@457 T@U) ) (! (let (($generated@@458 ($generated@@337 (type $generated@@457))))
(let (($generated@@459 ($generated@@336 (type $generated@@457))))
 (=> (= (type $generated@@457) ($generated@@335 $generated@@459 $generated@@458)) (= (= $generated@@457 ($generated@@334 $generated@@459 $generated@@458)) (= ($generated@@410 $generated@@457) ($generated@@449 $generated@@169))))))
 :pattern ( ($generated@@410 $generated@@457))
)))
(assert (forall (($generated@@460 T@U) ) (! (let (($generated@@461 ($generated@@319 (type $generated@@460))))
(let (($generated@@462 ($generated@@318 (type $generated@@460))))
 (=> (= (type $generated@@460) ($generated@@317 $generated@@462 $generated@@461)) (or (= $generated@@460 ($generated@@316 $generated@@462 $generated@@461)) (exists (($generated@@463 T@U) ($generated@@464 T@U) ) (!  (and (and (= (type $generated@@463) $generated@@169) (= (type $generated@@464) $generated@@169)) ($generated@@0 ($generated@@84 ($generated@@399 $generated@@460) ($generated@@292 ($generated@@235 $generated@@463 $generated@@464)))))
 :no-pattern (type $generated@@463)
 :no-pattern (type $generated@@464)
 :no-pattern ($generated $generated@@463)
 :no-pattern ($generated@@0 $generated@@463)
 :no-pattern ($generated $generated@@464)
 :no-pattern ($generated@@0 $generated@@464)
))))))
 :pattern ( ($generated@@399 $generated@@460))
)))
(assert (forall (($generated@@465 T@U) ) (! (let (($generated@@466 ($generated@@337 (type $generated@@465))))
(let (($generated@@467 ($generated@@336 (type $generated@@465))))
 (=> (= (type $generated@@465) ($generated@@335 $generated@@467 $generated@@466)) (or (= $generated@@465 ($generated@@334 $generated@@467 $generated@@466)) (exists (($generated@@468 T@U) ($generated@@469 T@U) ) (!  (and (and (= (type $generated@@468) $generated@@169) (= (type $generated@@469) $generated@@169)) ($generated@@0 ($generated@@84 ($generated@@410 $generated@@465) ($generated@@292 ($generated@@235 $generated@@468 $generated@@469)))))
 :no-pattern (type $generated@@468)
 :no-pattern (type $generated@@469)
 :no-pattern ($generated $generated@@468)
 :no-pattern ($generated@@0 $generated@@468)
 :no-pattern ($generated $generated@@469)
 :no-pattern ($generated@@0 $generated@@469)
))))))
 :pattern ( ($generated@@410 $generated@@465))
)))
(assert (forall (($generated@@470 T@U) ) (!  (=> (and (= (type $generated@@470) $generated@@169) ($generated@@236 $generated@@470 $generated@@46)) (and (= ($generated@@292 ($generated@@400 $generated@@2 $generated@@470)) $generated@@470) ($generated@@145 ($generated@@400 $generated@@2 $generated@@470) $generated@@46)))
 :pattern ( ($generated@@236 $generated@@470 $generated@@46))
)))
(assert (forall (($generated@@471 T@U) ) (!  (=> (and (= (type $generated@@471) $generated@@169) ($generated@@236 $generated@@471 $generated@@47)) (and (= ($generated@@292 ($generated@@400 $generated@@3 $generated@@471)) $generated@@471) ($generated@@145 ($generated@@400 $generated@@3 $generated@@471) $generated@@47)))
 :pattern ( ($generated@@236 $generated@@471 $generated@@47))
)))
(assert (forall (($generated@@472 T@U) ) (!  (=> (and (= (type $generated@@472) $generated@@169) ($generated@@236 $generated@@472 $generated@@44)) (and (= ($generated@@292 ($generated@@400 $generated@@4 $generated@@472)) $generated@@472) ($generated@@145 ($generated@@400 $generated@@4 $generated@@472) $generated@@44)))
 :pattern ( ($generated@@236 $generated@@472 $generated@@44))
)))
(assert (= ($generated@@1 $generated@@473) 20))
(assert (forall (($generated@@474 T@U) ) (!  (=> (and (= (type $generated@@474) $generated@@169) ($generated@@236 $generated@@474 $generated@@45)) (and (= ($generated@@292 ($generated@@400 $generated@@473 $generated@@474)) $generated@@474) ($generated@@145 ($generated@@400 $generated@@473 $generated@@474) $generated@@45)))
 :pattern ( ($generated@@236 $generated@@474 $generated@@45))
)))
(assert  (=> (<= 0 $generated@@147) (forall (($generated@@477 T@U) ($generated@@478 T@U) ($generated@@479 T@U) ) (!  (=> (and (and (and (= (type $generated@@477) $generated@@67) (= (type $generated@@478) $generated@@67)) (= (type $generated@@479) $generated@@80)) (or ($generated@@476 $generated@@477 $generated@@478 $generated@@479) (and (not (= 0 $generated@@147)) (and (not (= $generated@@479 $generated@@140)) ($generated@@145 $generated@@479 ($generated@@153 $generated@@477)))))) true)
 :pattern ( ($generated@@475 $generated@@477 $generated@@478 $generated@@479))
))))
(assert (forall (($generated@@480 T@U) ($generated@@481 T@U) ) (!  (=> (= (type $generated@@481) $generated@@67) (= ($generated@@236 ($generated@@292 $generated@@480) $generated@@481) ($generated@@145 $generated@@480 $generated@@481)))
 :pattern ( ($generated@@236 ($generated@@292 $generated@@480) $generated@@481))
)))
(assert (forall (($generated@@482 T@U) ) (! (let (($generated@@483 ($generated@@82 (type $generated@@482))))
 (=> (= (type $generated@@482) ($generated@@79 $generated@@483 $generated@@2)) (<= 0 ($generated@@305 $generated@@482))))
 :pattern ( ($generated@@305 $generated@@482))
)))
(assert (forall (($generated@@484 T@U) ) (! (let (($generated@@485 ($generated@@283 (type $generated@@484))))
 (=> (= (type $generated@@484) ($generated@@282 $generated@@485)) (<= 0 ($generated@@281 $generated@@484))))
 :pattern ( ($generated@@281 $generated@@484))
)))
(assert (forall (($generated@@487 T@U) ) (! (= (type ($generated@@486 $generated@@487)) $generated@@67)
 :pattern ( ($generated@@486 $generated@@487))
)))
(assert (forall (($generated@@488 T@U) ($generated@@489 T@U) ) (!  (=> (and (= (type $generated@@488) $generated@@67) (= (type $generated@@489) $generated@@67)) (= ($generated@@486 ($generated@@428 $generated@@488 $generated@@489)) $generated@@488))
 :pattern ( ($generated@@428 $generated@@488 $generated@@489))
)))
(assert (forall (($generated@@491 T@U) ) (! (= (type ($generated@@490 $generated@@491)) $generated@@67)
 :pattern ( ($generated@@490 $generated@@491))
)))
(assert (forall (($generated@@492 T@U) ($generated@@493 T@U) ) (!  (=> (and (= (type $generated@@492) $generated@@67) (= (type $generated@@493) $generated@@67)) (= ($generated@@490 ($generated@@428 $generated@@492 $generated@@493)) $generated@@493))
 :pattern ( ($generated@@428 $generated@@492 $generated@@493))
)))
(assert (forall (($generated@@494 T@U) ($generated@@495 T@U) ) (!  (=> (and (= (type $generated@@494) $generated@@67) (= (type $generated@@495) $generated@@67)) (= ($generated@@75 ($generated@@428 $generated@@494 $generated@@495)) $generated@@58))
 :pattern ( ($generated@@428 $generated@@494 $generated@@495))
)))
(assert (forall (($generated@@497 T@U) ) (! (= (type ($generated@@496 $generated@@497)) $generated@@67)
 :pattern ( ($generated@@496 $generated@@497))
)))
(assert (forall (($generated@@498 T@U) ($generated@@499 T@U) ) (!  (=> (and (= (type $generated@@498) $generated@@67) (= (type $generated@@499) $generated@@67)) (= ($generated@@496 ($generated@@436 $generated@@498 $generated@@499)) $generated@@498))
 :pattern ( ($generated@@436 $generated@@498 $generated@@499))
)))
(assert (forall (($generated@@501 T@U) ) (! (= (type ($generated@@500 $generated@@501)) $generated@@67)
 :pattern ( ($generated@@500 $generated@@501))
)))
(assert (forall (($generated@@502 T@U) ($generated@@503 T@U) ) (!  (=> (and (= (type $generated@@502) $generated@@67) (= (type $generated@@503) $generated@@67)) (= ($generated@@500 ($generated@@436 $generated@@502 $generated@@503)) $generated@@503))
 :pattern ( ($generated@@436 $generated@@502 $generated@@503))
)))
(assert (forall (($generated@@504 T@U) ($generated@@505 T@U) ) (!  (=> (and (= (type $generated@@504) $generated@@67) (= (type $generated@@505) $generated@@67)) (= ($generated@@75 ($generated@@436 $generated@@504 $generated@@505)) $generated@@59))
 :pattern ( ($generated@@436 $generated@@504 $generated@@505))
)))
(assert (forall (($generated@@506 T@U) ($generated@@507 T@U) ) (!  (=> (and (= (type $generated@@506) $generated@@169) (= (type $generated@@507) $generated@@169)) (= ($generated@@274 ($generated@@235 $generated@@506 $generated@@507)) $generated@@61))
 :pattern ( ($generated@@235 $generated@@506 $generated@@507))
)))
(assert (forall (($generated@@509 T@U) ) (! (= (type ($generated@@508 $generated@@509)) $generated@@67)
 :pattern ( ($generated@@508 $generated@@509))
)))
(assert (forall (($generated@@510 T@U) ($generated@@511 T@U) ) (!  (=> (and (= (type $generated@@510) $generated@@67) (= (type $generated@@511) $generated@@67)) (= ($generated@@508 ($generated@@159 $generated@@510 $generated@@511)) $generated@@510))
 :pattern ( ($generated@@159 $generated@@510 $generated@@511))
)))
(assert (forall (($generated@@513 T@U) ) (! (= (type ($generated@@512 $generated@@513)) $generated@@67)
 :pattern ( ($generated@@512 $generated@@513))
)))
(assert (forall (($generated@@514 T@U) ($generated@@515 T@U) ) (!  (=> (and (= (type $generated@@514) $generated@@67) (= (type $generated@@515) $generated@@67)) (= ($generated@@512 ($generated@@159 $generated@@514 $generated@@515)) $generated@@515))
 :pattern ( ($generated@@159 $generated@@514 $generated@@515))
)))
(assert (forall (($generated@@516 T@U) ($generated@@517 T@U) ) (!  (=> (and (= (type $generated@@516) $generated@@169) (= (type $generated@@517) $generated@@169)) (= ($generated@@167 ($generated@@235 $generated@@516 $generated@@517)) $generated@@516))
 :pattern ( ($generated@@235 $generated@@516 $generated@@517))
)))
(assert (forall (($generated@@518 T@U) ($generated@@519 T@U) ) (!  (=> (and (= (type $generated@@518) $generated@@169) (= (type $generated@@519) $generated@@169)) (= ($generated@@168 ($generated@@235 $generated@@518 $generated@@519)) $generated@@519))
 :pattern ( ($generated@@235 $generated@@518 $generated@@519))
)))
(assert  (and (forall (($generated@@522 T@U) ) (! (= (type ($generated@@520 $generated@@522)) $generated@@67)
 :pattern ( ($generated@@520 $generated@@522))
)) (forall (($generated@@523 T@U) ($generated@@524 Int) ) (! (let (($generated@@525 ($generated@@283 (type $generated@@523))))
(= (type ($generated@@521 $generated@@523 $generated@@524)) $generated@@525))
 :pattern ( ($generated@@521 $generated@@523 $generated@@524))
))))
(assert (forall (($generated@@526 T@U) ($generated@@527 T@U) ($generated@@528 T@U) ) (!  (=> (and (and (= (type $generated@@526) ($generated@@282 $generated@@169)) (= (type $generated@@527) $generated@@67)) (= (type $generated@@528) ($generated@@79 $generated@@80 $generated@@81))) (= ($generated@@77 $generated@@526 ($generated@@520 $generated@@527) $generated@@528) (forall (($generated@@529 Int) ) (!  (=> (and (<= 0 $generated@@529) (< $generated@@529 ($generated@@281 $generated@@526))) ($generated@@266 ($generated@@521 $generated@@526 $generated@@529) $generated@@527 $generated@@528))
 :pattern ( ($generated@@521 $generated@@526 $generated@@529))
))))
 :pattern ( ($generated@@77 $generated@@526 ($generated@@520 $generated@@527) $generated@@528))
)))
(assert (forall (($generated@@531 Int) ) (! (= ($generated@@530 ($generated@@78 $generated@@531)) $generated@@531)
 :pattern ( ($generated@@78 $generated@@531))
)))
(assert (forall (($generated@@533 T@U) ) (! (= (type ($generated@@532 $generated@@533)) $generated@@67)
 :pattern ( ($generated@@532 $generated@@533))
)))
(assert (forall (($generated@@534 T@U) ) (!  (=> (= (type $generated@@534) $generated@@67) (= ($generated@@532 ($generated@@249 $generated@@534)) $generated@@534))
 :pattern ( ($generated@@249 $generated@@534))
)))
(assert (forall (($generated@@535 T@U) ) (!  (=> (= (type $generated@@535) $generated@@67) (= ($generated@@75 ($generated@@249 $generated@@535)) $generated@@54))
 :pattern ( ($generated@@249 $generated@@535))
)))
(assert (forall (($generated@@537 T@U) ) (! (= (type ($generated@@536 $generated@@537)) $generated@@67)
 :pattern ( ($generated@@536 $generated@@537))
)))
(assert (forall (($generated@@538 T@U) ) (!  (=> (= (type $generated@@538) $generated@@67) (= ($generated@@536 ($generated@@254 $generated@@538)) $generated@@538))
 :pattern ( ($generated@@254 $generated@@538))
)))
(assert (forall (($generated@@539 T@U) ) (!  (=> (= (type $generated@@539) $generated@@67) (= ($generated@@75 ($generated@@254 $generated@@539)) $generated@@55))
 :pattern ( ($generated@@254 $generated@@539))
)))
(assert (forall (($generated@@541 T@U) ) (! (= (type ($generated@@540 $generated@@541)) $generated@@67)
 :pattern ( ($generated@@540 $generated@@541))
)))
(assert (forall (($generated@@542 T@U) ) (!  (=> (= (type $generated@@542) $generated@@67) (= ($generated@@540 ($generated@@174 $generated@@542)) $generated@@542))
 :pattern ( ($generated@@174 $generated@@542))
)))
(assert (forall (($generated@@543 T@U) ) (!  (=> (= (type $generated@@543) $generated@@67) (= ($generated@@75 ($generated@@174 $generated@@543)) $generated@@56))
 :pattern ( ($generated@@174 $generated@@543))
)))
(assert (forall (($generated@@545 T@U) ) (! (= (type ($generated@@544 $generated@@545)) $generated@@67)
 :pattern ( ($generated@@544 $generated@@545))
)))
(assert (forall (($generated@@546 T@U) ) (!  (=> (= (type $generated@@546) $generated@@67) (= ($generated@@544 ($generated@@520 $generated@@546)) $generated@@546))
 :pattern ( ($generated@@520 $generated@@546))
)))
(assert (forall (($generated@@547 T@U) ) (!  (=> (= (type $generated@@547) $generated@@67) (= ($generated@@75 ($generated@@520 $generated@@547)) $generated@@57))
 :pattern ( ($generated@@520 $generated@@547))
)))
(assert (forall (($generated@@549 T@U) ) (! (= (type ($generated@@548 $generated@@549)) $generated@@67)
 :pattern ( ($generated@@548 $generated@@549))
)))
(assert (forall (($generated@@550 T@U) ) (!  (=> (= (type $generated@@550) $generated@@67) (= ($generated@@548 ($generated@@139 $generated@@550)) $generated@@550))
 :pattern ( ($generated@@139 $generated@@550))
)))
(assert (forall (($generated@@552 T@U) ) (! (= (type ($generated@@551 $generated@@552)) $generated@@67)
 :pattern ( ($generated@@551 $generated@@552))
)))
(assert (forall (($generated@@553 T@U) ) (!  (=> (= (type $generated@@553) $generated@@67) (= ($generated@@551 ($generated@@153 $generated@@553)) $generated@@553))
 :pattern ( ($generated@@153 $generated@@553))
)))
(assert (forall (($generated@@554 T@U) ) (! (let (($generated@@555 (type $generated@@554)))
(= ($generated@@400 $generated@@555 ($generated@@292 $generated@@554)) $generated@@554))
 :pattern ( ($generated@@292 $generated@@554))
)))
(assert (forall (($generated@@556 T@U) ($generated@@557 T@U) ($generated@@558 T@U) ) (!  (=> (and (and (= (type $generated@@556) ($generated@@317 $generated@@169 $generated@@169)) (= (type $generated@@557) $generated@@67)) (= (type $generated@@558) $generated@@67)) (= ($generated@@145 $generated@@556 ($generated@@428 $generated@@557 $generated@@558)) (forall (($generated@@559 T@U) ) (!  (=> (and (= (type $generated@@559) $generated@@169) ($generated@@0 ($generated@@84 ($generated@@315 $generated@@556) $generated@@559))) (and ($generated@@236 ($generated@@84 ($generated@@401 $generated@@556) $generated@@559) $generated@@558) ($generated@@236 $generated@@559 $generated@@557)))
 :pattern ( ($generated@@84 ($generated@@401 $generated@@556) $generated@@559))
 :pattern ( ($generated@@84 ($generated@@315 $generated@@556) $generated@@559))
))))
 :pattern ( ($generated@@145 $generated@@556 ($generated@@428 $generated@@557 $generated@@558)))
)))
(assert (forall (($generated@@560 T@U) ($generated@@561 T@U) ($generated@@562 T@U) ) (!  (=> (and (and (= (type $generated@@560) ($generated@@335 $generated@@169 $generated@@169)) (= (type $generated@@561) $generated@@67)) (= (type $generated@@562) $generated@@67)) (= ($generated@@145 $generated@@560 ($generated@@436 $generated@@561 $generated@@562)) (forall (($generated@@563 T@U) ) (!  (=> (and (= (type $generated@@563) $generated@@169) ($generated@@0 ($generated@@84 ($generated@@333 $generated@@560) $generated@@563))) (and ($generated@@236 ($generated@@84 ($generated@@411 $generated@@560) $generated@@563) $generated@@562) ($generated@@236 $generated@@563 $generated@@561)))
 :pattern ( ($generated@@84 ($generated@@411 $generated@@560) $generated@@563))
 :pattern ( ($generated@@84 ($generated@@333 $generated@@560) $generated@@563))
))))
 :pattern ( ($generated@@145 $generated@@560 ($generated@@436 $generated@@561 $generated@@562)))
)))
(assert (forall (($generated@@566 T@U) ($generated@@567 T@U) ) (!  (=> (and (= (type $generated@@566) $generated@@169) (= (type $generated@@567) $generated@@169)) (< ($generated@@564 $generated@@566) ($generated@@565 ($generated@@235 $generated@@566 $generated@@567))))
 :pattern ( ($generated@@235 $generated@@566 $generated@@567))
)))
(assert (forall (($generated@@568 T@U) ($generated@@569 T@U) ) (!  (=> (and (= (type $generated@@568) $generated@@169) (= (type $generated@@569) $generated@@169)) (< ($generated@@564 $generated@@569) ($generated@@565 ($generated@@235 $generated@@568 $generated@@569))))
 :pattern ( ($generated@@235 $generated@@568 $generated@@569))
)))
(assert (forall (($generated@@570 T@U) ($generated@@571 T@U) ($generated@@572 T@U) ) (!  (=> (and (and (and (= (type $generated@@570) $generated@@169) (= (type $generated@@571) $generated@@67)) (= (type $generated@@572) $generated@@67)) ($generated@@236 $generated@@570 ($generated@@428 $generated@@571 $generated@@572))) (and (= ($generated@@292 ($generated@@400 ($generated@@317 $generated@@169 $generated@@169) $generated@@570)) $generated@@570) ($generated@@145 ($generated@@400 ($generated@@317 $generated@@169 $generated@@169) $generated@@570) ($generated@@428 $generated@@571 $generated@@572))))
 :pattern ( ($generated@@236 $generated@@570 ($generated@@428 $generated@@571 $generated@@572)))
)))
(assert (forall (($generated@@573 T@U) ($generated@@574 T@U) ($generated@@575 T@U) ) (!  (=> (and (and (and (= (type $generated@@573) $generated@@169) (= (type $generated@@574) $generated@@67)) (= (type $generated@@575) $generated@@67)) ($generated@@236 $generated@@573 ($generated@@436 $generated@@574 $generated@@575))) (and (= ($generated@@292 ($generated@@400 ($generated@@335 $generated@@169 $generated@@169) $generated@@573)) $generated@@573) ($generated@@145 ($generated@@400 ($generated@@335 $generated@@169 $generated@@169) $generated@@573) ($generated@@436 $generated@@574 $generated@@575))))
 :pattern ( ($generated@@236 $generated@@573 ($generated@@436 $generated@@574 $generated@@575)))
)))
(assert (forall (($generated@@576 T@U) ($generated@@577 T@U) ($generated@@578 T@U) ) (!  (=> (and (and (and (= (type $generated@@576) $generated@@67) (= (type $generated@@577) $generated@@67)) (= (type $generated@@578) $generated@@169)) ($generated@@236 $generated@@578 ($generated@@159 $generated@@576 $generated@@577))) (and (= ($generated@@292 ($generated@@400 $generated@@160 $generated@@578)) $generated@@578) ($generated@@145 ($generated@@400 $generated@@160 $generated@@578) ($generated@@159 $generated@@576 $generated@@577))))
 :pattern ( ($generated@@236 $generated@@578 ($generated@@159 $generated@@576 $generated@@577)))
)))
(assert (forall (($generated@@579 T@U) ) (! (let (($generated@@580 (type $generated@@579)))
 (not ($generated@@0 ($generated@@84 ($generated@@449 $generated@@580) $generated@@579))))
 :pattern ( (let (($generated@@580 (type $generated@@579)))
($generated@@84 ($generated@@449 $generated@@580) $generated@@579)))
)))
(assert (forall (($generated@@581 T@U) ($generated@@582 T@U) ) (!  (=> (and (= (type $generated@@581) $generated@@67) (= (type $generated@@582) $generated@@67)) (and (= ($generated@@75 ($generated@@159 $generated@@581 $generated@@582)) $generated@@62) (= ($generated@@311 ($generated@@159 $generated@@581 $generated@@582)) $generated@@65)))
 :pattern ( ($generated@@159 $generated@@581 $generated@@582))
)))
(assert (forall (($generated@@583 T@U) ) (!  (=> (= (type $generated@@583) $generated@@160) (= ($generated@@564 ($generated@@292 $generated@@583)) ($generated@@565 $generated@@583)))
 :pattern ( ($generated@@564 ($generated@@292 $generated@@583)))
)))
(assert (forall (($generated@@584 T@U) ) (!  (=> (and (= (type $generated@@584) $generated@@169) ($generated@@236 $generated@@584 ($generated@@78 0))) (and (= ($generated@@292 ($generated@@400 $generated@@2 $generated@@584)) $generated@@584) ($generated@@145 ($generated@@400 ($generated@@79 $generated@@169 $generated@@4) $generated@@584) ($generated@@78 0))))
 :pattern ( ($generated@@236 $generated@@584 ($generated@@78 0)))
)))
(assert (forall (($generated@@585 T@U) ($generated@@586 T@U) ) (!  (=> (and (and (= (type $generated@@585) $generated@@169) (= (type $generated@@586) $generated@@67)) ($generated@@236 $generated@@585 ($generated@@249 $generated@@586))) (and (= ($generated@@292 ($generated@@400 ($generated@@79 $generated@@169 $generated@@4) $generated@@585)) $generated@@585) ($generated@@145 ($generated@@400 ($generated@@79 $generated@@169 $generated@@4) $generated@@585) ($generated@@249 $generated@@586))))
 :pattern ( ($generated@@236 $generated@@585 ($generated@@249 $generated@@586)))
)))
(assert (forall (($generated@@587 T@U) ($generated@@588 T@U) ) (!  (=> (and (and (= (type $generated@@587) $generated@@169) (= (type $generated@@588) $generated@@67)) ($generated@@236 $generated@@587 ($generated@@254 $generated@@588))) (and (= ($generated@@292 ($generated@@400 ($generated@@79 $generated@@169 $generated@@4) $generated@@587)) $generated@@587) ($generated@@145 ($generated@@400 ($generated@@79 $generated@@169 $generated@@4) $generated@@587) ($generated@@254 $generated@@588))))
 :pattern ( ($generated@@236 $generated@@587 ($generated@@254 $generated@@588)))
)))
(assert (forall (($generated@@589 T@U) ($generated@@590 T@U) ) (!  (=> (and (and (= (type $generated@@589) $generated@@169) (= (type $generated@@590) $generated@@67)) ($generated@@236 $generated@@589 ($generated@@174 $generated@@590))) (and (= ($generated@@292 ($generated@@400 ($generated@@79 $generated@@169 $generated@@2) $generated@@589)) $generated@@589) ($generated@@145 ($generated@@400 ($generated@@79 $generated@@169 $generated@@2) $generated@@589) ($generated@@174 $generated@@590))))
 :pattern ( ($generated@@236 $generated@@589 ($generated@@174 $generated@@590)))
)))
(assert (forall (($generated@@591 T@U) ($generated@@592 T@U) ) (!  (=> (and (and (= (type $generated@@591) $generated@@169) (= (type $generated@@592) $generated@@67)) ($generated@@236 $generated@@591 ($generated@@520 $generated@@592))) (and (= ($generated@@292 ($generated@@400 ($generated@@282 $generated@@169) $generated@@591)) $generated@@591) ($generated@@145 ($generated@@400 ($generated@@282 $generated@@169) $generated@@591) ($generated@@520 $generated@@592))))
 :pattern ( ($generated@@236 $generated@@591 ($generated@@520 $generated@@592)))
)))
(assert (forall (($generated@@593 T@U) ($generated@@594 T@U) ) (!  (=> (and (and (= (type $generated@@593) $generated@@67) (= (type $generated@@594) $generated@@169)) ($generated@@236 $generated@@594 ($generated@@139 $generated@@593))) (and (= ($generated@@292 ($generated@@400 $generated@@80 $generated@@594)) $generated@@594) ($generated@@145 ($generated@@400 $generated@@80 $generated@@594) ($generated@@139 $generated@@593))))
 :pattern ( ($generated@@236 $generated@@594 ($generated@@139 $generated@@593)))
)))
(assert (forall (($generated@@595 T@U) ($generated@@596 T@U) ) (!  (=> (and (and (= (type $generated@@595) $generated@@67) (= (type $generated@@596) $generated@@169)) ($generated@@236 $generated@@596 ($generated@@153 $generated@@595))) (and (= ($generated@@292 ($generated@@400 $generated@@80 $generated@@596)) $generated@@596) ($generated@@145 ($generated@@400 $generated@@80 $generated@@596) ($generated@@153 $generated@@595))))
 :pattern ( ($generated@@236 $generated@@596 ($generated@@153 $generated@@595)))
)))
(assert (forall (($generated@@597 T@U) ($generated@@598 T@U) ($generated@@599 T@U) ($generated@@600 T@U) ) (! (let (($generated@@601 (type $generated@@600)))
 (=> (and (and (and (= (type $generated@@597) ($generated@@79 $generated@@80 $generated@@81)) (= (type $generated@@598) $generated@@80)) (= (type $generated@@599) ($generated@@69 $generated@@601))) ($generated@@265 ($generated@@85 $generated@@597 $generated@@598 ($generated@@87 ($generated@@84 $generated@@597 $generated@@598) $generated@@599 $generated@@600)))) ($generated@@135 $generated@@597 ($generated@@85 $generated@@597 $generated@@598 ($generated@@87 ($generated@@84 $generated@@597 $generated@@598) $generated@@599 $generated@@600)))))
 :pattern ( ($generated@@85 $generated@@597 $generated@@598 ($generated@@87 ($generated@@84 $generated@@597 $generated@@598) $generated@@599 $generated@@600)))
)))
(assert (forall (($generated@@602 T@U) ($generated@@603 T@U) ($generated@@604 T@U) ) (!  (=> (and (and (= (type $generated@@602) ($generated@@79 $generated@@169 $generated@@2)) (= (type $generated@@603) $generated@@67)) (= (type $generated@@604) ($generated@@79 $generated@@80 $generated@@81))) (= ($generated@@77 $generated@@602 ($generated@@174 $generated@@603) $generated@@604) (forall (($generated@@605 T@U) ) (!  (=> (and (= (type $generated@@605) $generated@@169) (< 0 ($generated ($generated@@84 $generated@@602 $generated@@605)))) ($generated@@266 $generated@@605 $generated@@603 $generated@@604))
 :pattern ( ($generated@@84 $generated@@602 $generated@@605))
))))
 :pattern ( ($generated@@77 $generated@@602 ($generated@@174 $generated@@603) $generated@@604))
)))
(assert  (=> (<= 0 $generated@@147) (forall (($generated@@606 T@U) ($generated@@607 T@U) ($generated@@608 T@U) ) (!  (=> (and (and (and (= (type $generated@@606) $generated@@67) (= (type $generated@@607) $generated@@67)) (= (type $generated@@608) $generated@@80)) (or ($generated@@476 $generated@@606 $generated@@607 $generated@@608) (and (not (= 0 $generated@@147)) (and (not (= $generated@@608 $generated@@140)) ($generated@@145 $generated@@608 ($generated@@153 $generated@@606)))))) (= ($generated@@475 $generated@@606 $generated@@607 $generated@@608) ($generated@@150 59)))
 :pattern ( ($generated@@475 $generated@@606 $generated@@607 $generated@@608))
))))
(assert (forall (($generated@@609 T@U) ($generated@@610 T@U) ($generated@@611 T@U) ) (!  (=> (and (and (and (= (type $generated@@609) $generated@@160) (= (type $generated@@610) $generated@@67)) (= (type $generated@@611) ($generated@@79 $generated@@80 $generated@@81))) (and ($generated@@265 $generated@@611) (and ($generated@@158 $generated@@609) (exists (($generated@@612 T@U) ) (!  (and (= (type $generated@@612) $generated@@67) ($generated@@77 $generated@@609 ($generated@@159 $generated@@610 $generated@@612) $generated@@611))
 :pattern ( ($generated@@77 $generated@@609 ($generated@@159 $generated@@610 $generated@@612) $generated@@611))
))))) ($generated@@266 ($generated@@167 $generated@@609) $generated@@610 $generated@@611))
 :pattern ( ($generated@@266 ($generated@@167 $generated@@609) $generated@@610 $generated@@611))
)))
(assert (forall (($generated@@613 T@U) ($generated@@614 T@U) ($generated@@615 T@U) ) (!  (=> (and (and (and (= (type $generated@@613) $generated@@160) (= (type $generated@@614) $generated@@67)) (= (type $generated@@615) ($generated@@79 $generated@@80 $generated@@81))) (and ($generated@@265 $generated@@615) (and ($generated@@158 $generated@@613) (exists (($generated@@616 T@U) ) (!  (and (= (type $generated@@616) $generated@@67) ($generated@@77 $generated@@613 ($generated@@159 $generated@@616 $generated@@614) $generated@@615))
 :pattern ( ($generated@@77 $generated@@613 ($generated@@159 $generated@@616 $generated@@614) $generated@@615))
))))) ($generated@@266 ($generated@@168 $generated@@613) $generated@@614 $generated@@615))
 :pattern ( ($generated@@266 ($generated@@168 $generated@@613) $generated@@614 $generated@@615))
)))
(assert (forall (($generated@@617 T@U) ($generated@@618 T@U) ) (!  (=> (and (= (type $generated@@617) $generated@@169) (= (type $generated@@618) $generated@@169)) (= ($generated@@235 ($generated@@260 $generated@@617) ($generated@@260 $generated@@618)) ($generated@@260 ($generated@@235 $generated@@617 $generated@@618))))
 :pattern ( ($generated@@235 ($generated@@260 $generated@@617) ($generated@@260 $generated@@618)))
)))
(assert (forall (($generated@@619 Int) ) (! (= ($generated@@292 ($generated@@8 ($generated@@150 $generated@@619))) ($generated@@260 ($generated@@292 ($generated@@8 $generated@@619))))
 :pattern ( ($generated@@292 ($generated@@8 ($generated@@150 $generated@@619))))
)))
(assert (forall (($generated@@620 T@U) ) (! (= ($generated@@292 ($generated@@260 $generated@@620)) ($generated@@260 ($generated@@292 $generated@@620)))
 :pattern ( ($generated@@292 ($generated@@260 $generated@@620)))
)))
(assert (forall (($generated@@621 T@U) ) (! (let (($generated@@622 ($generated@@283 (type $generated@@621))))
 (=> (and (= (type $generated@@621) ($generated@@282 $generated@@622)) (= ($generated@@281 $generated@@621) 0)) (= $generated@@621 ($generated@@280 $generated@@622))))
 :pattern ( ($generated@@281 $generated@@621))
)))
(assert (forall (($generated@@623 T@U) ($generated@@624 T@U) ($generated@@625 T@U) ) (! (let (($generated@@626 (type $generated@@624)))
 (=> (and (and (= (type $generated@@623) ($generated@@79 $generated@@626 $generated@@2)) (= (type $generated@@625) $generated@@2)) (<= 0 ($generated $generated@@625))) (= ($generated@@305 ($generated@@85 $generated@@623 $generated@@624 $generated@@625)) (+ (- ($generated@@305 $generated@@623) ($generated ($generated@@84 $generated@@623 $generated@@624))) ($generated $generated@@625)))))
 :pattern ( ($generated@@305 ($generated@@85 $generated@@623 $generated@@624 $generated@@625)))
)))
(assert (forall (($generated@@627 T@U) ($generated@@628 T@U) ) (!  (=> (and (= (type $generated@@627) ($generated@@79 $generated@@80 $generated@@81)) (= (type $generated@@628) $generated@@2)) ($generated@@77 $generated@@628 $generated@@46 $generated@@627))
 :pattern ( ($generated@@77 $generated@@628 $generated@@46 $generated@@627))
)))
(assert (forall (($generated@@629 T@U) ($generated@@630 T@U) ) (!  (=> (and (= (type $generated@@629) ($generated@@79 $generated@@80 $generated@@81)) (= (type $generated@@630) $generated@@3)) ($generated@@77 $generated@@630 $generated@@47 $generated@@629))
 :pattern ( ($generated@@77 $generated@@630 $generated@@47 $generated@@629))
)))
(assert (forall (($generated@@631 T@U) ($generated@@632 T@U) ) (!  (=> (and (= (type $generated@@631) ($generated@@79 $generated@@80 $generated@@81)) (= (type $generated@@632) $generated@@4)) ($generated@@77 $generated@@632 $generated@@44 $generated@@631))
 :pattern ( ($generated@@77 $generated@@632 $generated@@44 $generated@@631))
)))
(assert (forall (($generated@@633 T@U) ($generated@@634 T@U) ) (!  (=> (and (= (type $generated@@633) ($generated@@79 $generated@@80 $generated@@81)) (= (type $generated@@634) $generated@@473)) ($generated@@77 $generated@@634 $generated@@45 $generated@@633))
 :pattern ( ($generated@@77 $generated@@634 $generated@@45 $generated@@633))
)))
(assert (forall (($generated@@635 T@U) ($generated@@636 T@U) ) (!  (=> (and (= (type $generated@@635) ($generated@@79 $generated@@80 $generated@@81)) (= (type $generated@@636) $generated@@169)) ($generated@@77 $generated@@636 $generated@@48 $generated@@635))
 :pattern ( ($generated@@77 $generated@@636 $generated@@48 $generated@@635))
)))
(assert  (=> (<= 0 $generated@@147) (forall (($generated@@637 T@U) ($generated@@638 T@U) ($generated@@639 T@U) ) (!  (=> (and (and (and (= (type $generated@@637) $generated@@67) (= (type $generated@@638) $generated@@67)) (= (type $generated@@639) $generated@@80)) (or ($generated@@476 $generated@@637 $generated@@638 ($generated@@260 $generated@@639)) (and (not (= 0 $generated@@147)) (and (not (= $generated@@639 $generated@@140)) ($generated@@145 $generated@@639 ($generated@@153 $generated@@637)))))) (= ($generated@@475 $generated@@637 $generated@@638 ($generated@@260 $generated@@639)) ($generated@@150 59)))
 :weight 3
 :pattern ( ($generated@@475 $generated@@637 $generated@@638 ($generated@@260 $generated@@639)))
))))
(assert (forall (($generated@@640 T@U) ($generated@@641 T@U) ) (!  (=> (and (= (type $generated@@640) ($generated@@282 $generated@@169)) (= (type $generated@@641) $generated@@67)) (= ($generated@@145 $generated@@640 ($generated@@520 $generated@@641)) (forall (($generated@@642 Int) ) (!  (=> (and (<= 0 $generated@@642) (< $generated@@642 ($generated@@281 $generated@@640))) ($generated@@236 ($generated@@521 $generated@@640 $generated@@642) $generated@@641))
 :pattern ( ($generated@@521 $generated@@640 $generated@@642))
))))
 :pattern ( ($generated@@145 $generated@@640 ($generated@@520 $generated@@641)))
)))
(assert (forall (($generated@@644 T@U) ($generated@@645 Int) ) (!  (=> (= (type $generated@@644) ($generated@@282 $generated@@169)) (=> (and (<= 0 $generated@@645) (< $generated@@645 ($generated@@281 $generated@@644))) (< ($generated@@565 ($generated@@400 $generated@@160 ($generated@@521 $generated@@644 $generated@@645))) ($generated@@643 $generated@@644))))
 :pattern ( ($generated@@565 ($generated@@400 $generated@@160 ($generated@@521 $generated@@644 $generated@@645))))
)))
(assert (forall (($generated@@646 T@U) ($generated@@647 T@U) ($generated@@648 T@U) ) (!  (=> (and (and (and (= (type $generated@@646) ($generated@@317 $generated@@169 $generated@@169)) (= (type $generated@@647) $generated@@67)) (= (type $generated@@648) $generated@@67)) ($generated@@145 $generated@@646 ($generated@@428 $generated@@647 $generated@@648))) (and (and ($generated@@145 ($generated@@315 $generated@@646) ($generated@@249 $generated@@647)) ($generated@@145 ($generated@@368 $generated@@646) ($generated@@249 $generated@@648))) ($generated@@145 ($generated@@399 $generated@@646) ($generated@@249 ($generated@@159 $generated@@647 $generated@@648)))))
 :pattern ( ($generated@@145 $generated@@646 ($generated@@428 $generated@@647 $generated@@648)))
)))
(assert (forall (($generated@@649 T@U) ($generated@@650 T@U) ($generated@@651 T@U) ) (!  (=> (and (and (and (= (type $generated@@649) ($generated@@335 $generated@@169 $generated@@169)) (= (type $generated@@650) $generated@@67)) (= (type $generated@@651) $generated@@67)) ($generated@@145 $generated@@649 ($generated@@436 $generated@@650 $generated@@651))) (and (and ($generated@@145 ($generated@@333 $generated@@649) ($generated@@254 $generated@@650)) ($generated@@145 ($generated@@379 $generated@@649) ($generated@@254 $generated@@651))) ($generated@@145 ($generated@@410 $generated@@649) ($generated@@254 ($generated@@159 $generated@@650 $generated@@651)))))
 :pattern ( ($generated@@145 $generated@@649 ($generated@@436 $generated@@650 $generated@@651)))
)))
(assert (forall (($generated@@652 T@U) ) (!  (=> (= (type $generated@@652) $generated@@2) ($generated@@145 $generated@@652 $generated@@46))
 :pattern ( ($generated@@145 $generated@@652 $generated@@46))
)))
(assert (forall (($generated@@653 T@U) ) (!  (=> (= (type $generated@@653) $generated@@3) ($generated@@145 $generated@@653 $generated@@47))
 :pattern ( ($generated@@145 $generated@@653 $generated@@47))
)))
(assert (forall (($generated@@654 T@U) ) (!  (=> (= (type $generated@@654) $generated@@4) ($generated@@145 $generated@@654 $generated@@44))
 :pattern ( ($generated@@145 $generated@@654 $generated@@44))
)))
(assert (forall (($generated@@655 T@U) ) (!  (=> (= (type $generated@@655) $generated@@473) ($generated@@145 $generated@@655 $generated@@45))
 :pattern ( ($generated@@145 $generated@@655 $generated@@45))
)))
(assert (forall (($generated@@656 T@U) ) (!  (=> (= (type $generated@@656) $generated@@169) ($generated@@145 $generated@@656 $generated@@48))
 :pattern ( ($generated@@145 $generated@@656 $generated@@48))
)))
(push 1)
(declare-fun ControlFlow (Int Int) Int)
(declare-fun $generated@@657 () T@U)
(declare-fun $generated@@658 () T@U)
(declare-fun $generated@@659 () Int)
(declare-fun $generated@@660 () T@U)
(declare-fun $generated@@661 () Int)
(declare-fun $generated@@662 () Int)
(declare-fun $generated@@663 () T@U)
(declare-fun $generated@@664 () T@U)
(declare-fun $generated@@665 (T@U) Bool)
(declare-fun $generated@@666 () Int)
(declare-fun $generated@@667 () T@U)
(declare-fun $generated@@668 () T@U)
(declare-fun $generated@@669 () T@U)
(declare-fun $generated@@670 () T@U)
(declare-fun $generated@@671 () T@U)
(declare-fun $generated@@672 () Bool)
(declare-fun $generated@@673 () T@U)
(assert  (and (and (and (and (and (and (and (and (and (and (= (type $generated@@657) ($generated@@181 $generated@@80 $generated@@4)) (= (type $generated@@658) ($generated@@79 $generated@@80 $generated@@81))) (= (type $generated@@660) $generated@@473)) (= (type $generated@@663) $generated@@80)) (= (type $generated@@664) ($generated@@79 $generated@@80 $generated@@81))) (= (type $generated@@667) ($generated@@79 $generated@@80 $generated@@81))) (= (type $generated@@668) $generated@@169)) (= (type $generated@@669) ($generated@@79 $generated@@80 $generated@@81))) (= (type $generated@@670) ($generated@@79 $generated@@80 $generated@@81))) (= (type $generated@@671) $generated@@473)) (= (type $generated@@673) $generated@@80)))
(set-option :timeout 0)
(set-option :rlimit 0)
(assert (not
 (=> (= (ControlFlow 0 0) 6) (let (($generated@@674  (=> (and (= $generated@@657 ($generated@@180 $generated@@140 $generated@@658 $generated@@60 false)) ($generated@@149 $generated@@45)) (=> (and (and (and (and ($generated@@149 $generated@@45) (= $generated@@659 ($generated@@150 ($generated@@148 $generated@@45)))) (and ($generated@@145 $generated@@660 $generated@@45) ($generated@@77 $generated@@660 $generated@@45 $generated@@658))) (and (and ($generated@@244 $generated@@45 ($generated@@292 $generated@@660)) ($generated@@244 $generated@@45 ($generated@@292 $generated@@660))) (and (= $generated@@661 ($generated@@243 $generated@@45 ($generated@@292 $generated@@660))) ($generated@@352 $generated@@45 $generated@@47)))) (and (and (and ($generated@@352 $generated@@45 $generated@@47) (= $generated@@662 ($generated@@150 ($generated@@351 $generated@@45 $generated@@47)))) (and (not (= $generated@@663 $generated@@140)) (= ($generated@@360 $generated@@663) ($generated@@139 $generated@@45)))) (and (and (not ($generated@@0 ($generated@@86 ($generated@@84 $generated@@658 $generated@@663) $generated@@60))) (= $generated@@664 ($generated@@85 $generated@@658 $generated@@663 ($generated@@87 ($generated@@84 $generated@@658 $generated@@663) $generated@@60 ($generated@@11 true))))) (and ($generated@@265 $generated@@664) ($generated@@665 $generated@@664))))) (and (=> (= (ControlFlow 0 2) (- 0 5)) true) (and (=> (= (ControlFlow 0 2) (- 0 4)) (not (= $generated@@663 $generated@@140))) (=> (not (= $generated@@663 $generated@@140)) (=> (and (and ($generated@@77 $generated@@663 ($generated@@139 $generated@@45) $generated@@664) ($generated@@476 $generated@@45 $generated@@47 $generated@@663)) (and ($generated@@476 $generated@@45 $generated@@47 $generated@@663) (= $generated@@666 ($generated@@475 $generated@@45 $generated@@47 $generated@@663)))) (=> (and (and (and (and ($generated@@265 $generated@@667) ($generated@@665 $generated@@667)) (forall (($generated@@675 T@U) ) (!  (=> (= (type $generated@@675) $generated@@80) (=> (and (not (= $generated@@675 $generated@@140)) ($generated@@0 ($generated@@86 ($generated@@84 $generated@@664 $generated@@675) $generated@@60))) (= ($generated@@84 $generated@@667 $generated@@675) ($generated@@84 $generated@@664 $generated@@675))))
 :pattern ( ($generated@@84 $generated@@667 $generated@@675))
))) (and ($generated@@135 $generated@@664 $generated@@667) (= $generated@@668 ($generated@@292 $generated@@660)))) (and (and (and ($generated@@265 $generated@@669) ($generated@@665 $generated@@669)) (and (forall (($generated@@676 T@U) ) (!  (=> (= (type $generated@@676) $generated@@80) (=> (and (not (= $generated@@676 $generated@@140)) ($generated@@0 ($generated@@86 ($generated@@84 $generated@@667 $generated@@676) $generated@@60))) (= ($generated@@84 $generated@@669 $generated@@676) ($generated@@84 $generated@@667 $generated@@676))))
 :pattern ( ($generated@@84 $generated@@669 $generated@@676))
)) ($generated@@135 $generated@@667 $generated@@669))) (and (and ($generated@@265 $generated@@670) ($generated@@665 $generated@@670)) (and (forall (($generated@@677 T@U) ) (!  (=> (= (type $generated@@677) $generated@@80) (=> (and (not (= $generated@@677 $generated@@140)) ($generated@@0 ($generated@@86 ($generated@@84 $generated@@669 $generated@@677) $generated@@60))) (= ($generated@@84 $generated@@670 $generated@@677) ($generated@@84 $generated@@669 $generated@@677))))
 :pattern ( ($generated@@84 $generated@@670 $generated@@677))
)) ($generated@@135 $generated@@669 $generated@@670))))) (and (=> (= (ControlFlow 0 2) (- 0 3)) true) (=> (= (ControlFlow 0 2) (- 0 1)) (not (= $generated@@663 $generated@@140)))))))))))))
(let (($generated@@678  (=> (and (and (and ($generated@@265 $generated@@658) ($generated@@665 $generated@@658)) (and ($generated@@145 $generated@@671 $generated@@45) true)) (and (and (=> $generated@@672 (and ($generated@@145 $generated@@673 ($generated@@153 $generated@@45)) ($generated@@77 $generated@@673 ($generated@@153 $generated@@45) $generated@@658))) true) (and (= 1 $generated@@147) (= (ControlFlow 0 6) 2)))) $generated@@674)))
$generated@@678)))
))
(check-sat)
(pop 1)
; Valid
(get-info :rlimit)
(reset)
(set-option :rlimit 0)
; did a full reset
(reset)
(set-option :print-success false)
(set-info :smt-lib-version 2.6)
(set-option :auto_config false)
(set-option :type_check true)
(set-option :smt.case_split 3)
(set-option :smt.qi.eager_threshold 100)
(set-option :smt.delay_units true)
(set-option :smt.arith.solver 2)
(set-option :smt.mbqi false)
(set-option :model.compact false)
(set-option :model.v2 true)
(set-option :pp.bv_literals false)
; done setting options


(set-info :category "industrial")
(declare-sort |T@U| 0)
(declare-sort |T@T| 0)
(declare-fun real_pow (Real Real) Real)
(declare-fun UOrdering2 (|T@U| |T@U|) Bool)
(declare-fun UOrdering3 (|T@T| |T@U| |T@U|) Bool)
(declare-fun tickleBool (Bool) Bool)
(assert (and (tickleBool true) (tickleBool false)))
(declare-fun $generated (T@U) Int)
(declare-fun $generated@@0 (T@U) Bool)
(declare-fun $generated@@1 (T@T) Int)
(declare-fun $generated@@2 () T@T)
(declare-fun $generated@@3 () T@T)
(declare-fun $generated@@4 () T@T)
(declare-fun $generated@@5 () T@T)
(declare-fun $generated@@6 () T@T)
(declare-fun $generated@@7 () T@T)
(declare-fun $generated@@8 (Int) T@U)
(declare-fun type (T@U) T@T)
(declare-fun $generated@@9 (Real) T@U)
(declare-fun $generated@@10 (T@U) Real)
(declare-fun $generated@@11 (Bool) T@U)
(declare-fun $generated@@12 (RoundingMode) T@U)
(declare-fun $generated@@13 (T@U) RoundingMode)
(declare-fun $generated@@14 (String) T@U)
(declare-fun $generated@@15 (T@U) String)
(declare-fun $generated@@16 ((RegEx String)) T@U)
(declare-fun $generated@@17 (T@U) (RegEx String))
(declare-fun $generated@@44 () T@U)
(declare-fun $generated@@45 () T@U)
(declare-fun $generated@@46 () T@U)
(declare-fun $generated@@47 () T@U)
(declare-fun $generated@@48 () T@U)
(declare-fun $generated@@49 () T@U)
(declare-fun $generated@@50 () T@U)
(declare-fun $generated@@51 () T@U)
(declare-fun $generated@@52 () T@U)
(declare-fun $generated@@53 () T@U)
(declare-fun $generated@@54 () T@U)
(declare-fun $generated@@55 () T@U)
(declare-fun $generated@@56 () T@U)
(declare-fun $generated@@57 () T@U)
(declare-fun $generated@@58 () T@U)
(declare-fun $generated@@59 () T@U)
(declare-fun $generated@@60 () T@U)
(declare-fun $generated@@61 () T@U)
(declare-fun $generated@@62 () T@U)
(declare-fun $generated@@63 () T@U)
(declare-fun $generated@@64 () T@T)
(declare-fun $generated@@65 () T@T)
(declare-fun $generated@@66 (T@T) T@T)
(declare-fun $generated@@67 (T@T) T@T)
(declare-fun $generated@@68 () T@T)
(declare-fun $generated@@69 () T@T)
(declare-fun $generated@@72 (T@U) T@U)
(declare-fun $generated@@74 (T@U T@U T@U) Bool)
(declare-fun $generated@@75 (Int) T@U)
(declare-fun $generated@@76 (T@T T@T) T@T)
(declare-fun $generated@@77 () T@T)
(declare-fun $generated@@78 () T@T)
(declare-fun $generated@@79 (T@T) T@T)
(declare-fun $generated@@80 (T@T) T@T)
(declare-fun $generated@@81 (T@U T@U) T@U)
(declare-fun $generated@@82 (T@U T@U T@U) T@U)
(declare-fun $generated@@83 (T@U T@U) T@U)
(declare-fun $generated@@84 (T@U T@U T@U) T@U)
(declare-fun $generated@@132 (T@U) T@U)
(declare-fun $generated@@133 (T@U T@U T@U) T@U)
(declare-fun $generated@@134 (T@T T@T) T@T)
(declare-fun $generated@@135 (T@T) T@T)
(declare-fun $generated@@136 (T@T) T@T)
(declare-fun $generated@@155 (T@U) T@U)
(declare-fun $generated@@164 (T@U T@U) Bool)
(declare-fun $generated@@166 (T@U) Bool)
(declare-fun $generated@@167 (T@U T@U) T@U)
(declare-fun $generated@@168 () T@T)
(declare-fun $generated@@174 (T@U T@U) Bool)
(declare-fun $generated@@175 (T@U) T@U)
(declare-fun $generated@@176 (T@U) T@U)
(declare-fun $generated@@177 () T@T)
(declare-fun $generated@@182 (T@U) T@U)
(declare-fun $generated@@183 (T@U) Bool)
(declare-fun $generated@@187 (T@U T@U T@U) T@U)
(declare-fun $generated@@188 (T@U T@U T@U Bool) T@U)
(declare-fun $generated@@189 (T@T T@T) T@T)
(declare-fun $generated@@190 (T@T) T@T)
(declare-fun $generated@@191 (T@T) T@T)
(declare-fun $generated@@192 (T@U T@U T@U T@U) T@U)
(declare-fun $generated@@243 (T@U T@U) T@U)
(declare-fun $generated@@244 (T@U T@U) Bool)
(declare-fun $generated@@253 (T@U) T@U)
(declare-fun $generated@@258 (T@U) T@U)
(declare-fun $generated@@263 (Int) Int)
(declare-fun $generated@@265 (T@U) T@U)
(declare-fun $generated@@269 (T@U Int Int Int) T@U)
(declare-fun $generated@@270 (T@T T@U) T@U)
(declare-fun $generated@@283 (T@U) Bool)
(declare-fun $generated@@284 (T@U T@U T@U) Bool)
(declare-fun $generated@@290 (T@U) T@U)
(declare-fun $generated@@296 (T@T) T@U)
(declare-fun $generated@@297 (T@U) Int)
(declare-fun $generated@@298 (T@T) T@T)
(declare-fun $generated@@299 (T@T) T@T)
(declare-fun $generated@@304 (T@U) T@U)
(declare-fun $generated@@309 (T@U) Int)
(declare-fun $generated@@310 (T@T) T@U)
(declare-fun $generated@@315 (T@T T@T) T@U)
(declare-fun $generated@@321 (T@U) T@U)
(declare-fun $generated@@322 (T@T T@T) T@U)
(declare-fun $generated@@323 (T@T T@T) T@T)
(declare-fun $generated@@324 (T@T) T@T)
(declare-fun $generated@@325 (T@T) T@T)
(declare-fun $generated@@342 (T@U Int Int) T@U)
(declare-fun $generated@@354 (T@U) T@U)
(declare-fun $generated@@365 (T@U) T@U)
(declare-fun $generated@@375 (T@U) T@U)
(declare-fun $generated@@389 (T@U) T@U)
(declare-fun $generated@@393 (T@U) T@U)
(declare-fun $generated@@394 (T@U) T@U)
(declare-fun $generated@@411 (T@U T@U) T@U)
(declare-fun $generated@@419 (T@U T@U) T@U)
(declare-fun $generated@@427 (T@T) T@U)
(declare-fun $generated@@451 () T@T)
(declare-fun $generated@@459 (T@U) T@U)
(declare-fun $generated@@463 (T@U) T@U)
(declare-fun $generated@@469 (T@U) T@U)
(declare-fun $generated@@473 (T@U) T@U)
(declare-fun $generated@@481 (T@U) T@U)
(declare-fun $generated@@485 (T@U) T@U)
(declare-fun $generated@@493 (T@U) T@U)
(declare-fun $generated@@494 (T@U Int) T@U)
(declare-fun $generated@@503 (T@U) Int)
(declare-fun $generated@@505 (T@U) T@U)
(declare-fun $generated@@509 (T@U) T@U)
(declare-fun $generated@@513 (T@U) T@U)
(declare-fun $generated@@517 (T@U) T@U)
(declare-fun $generated@@531 (T@U) Int)
(declare-fun $generated@@532 (T@U) Int)
(declare-fun $generated@@553 (T@U) T@U)
(declare-fun $generated@@581 (Int) T@U)
(declare-fun $generated@@606 (Int) T@U)
(declare-fun $generated@@607 (Int) Int)
(declare-fun $generated@@611 (T@U) Int)
(assert  (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (= ($generated@@1 $generated@@2) 0) (= ($generated@@1 $generated@@3) 1)) (= ($generated@@1 $generated@@4) 2)) (= ($generated@@1 $generated@@5) 3)) (= ($generated@@1 $generated@@6) 4)) (= ($generated@@1 $generated@@7) 5)) (forall (($generated@@18 Int) ) (! (= ($generated ($generated@@8 $generated@@18)) $generated@@18)
 :pattern ( ($generated@@8 $generated@@18))
))) (forall (($generated@@19 T@U) ) (!  (=> (= (type $generated@@19) $generated@@2) (= ($generated@@8 ($generated $generated@@19)) $generated@@19))
 :pattern ( ($generated $generated@@19))
))) (forall (($generated@@20 Int) ) (! (= (type ($generated@@8 $generated@@20)) $generated@@2)
 :pattern ( ($generated@@8 $generated@@20))
))) (forall (($generated@@21 Real) ) (! (= ($generated@@10 ($generated@@9 $generated@@21)) $generated@@21)
 :pattern ( ($generated@@9 $generated@@21))
))) (forall (($generated@@22 T@U) ) (!  (=> (= (type $generated@@22) $generated@@3) (= ($generated@@9 ($generated@@10 $generated@@22)) $generated@@22))
 :pattern ( ($generated@@10 $generated@@22))
))) (forall (($generated@@23 Real) ) (! (= (type ($generated@@9 $generated@@23)) $generated@@3)
 :pattern ( ($generated@@9 $generated@@23))
))) (forall (($generated@@24 Bool) ) (! (= ($generated@@0 ($generated@@11 $generated@@24)) $generated@@24)
 :pattern ( ($generated@@11 $generated@@24))
))) (forall (($generated@@25 T@U) ) (!  (=> (= (type $generated@@25) $generated@@4) (= ($generated@@11 ($generated@@0 $generated@@25)) $generated@@25))
 :pattern ( ($generated@@0 $generated@@25))
))) (forall (($generated@@26 Bool) ) (! (= (type ($generated@@11 $generated@@26)) $generated@@4)
 :pattern ( ($generated@@11 $generated@@26))
))) (forall (($generated@@27 RoundingMode) ) (! (= ($generated@@13 ($generated@@12 $generated@@27)) $generated@@27)
 :pattern ( ($generated@@12 $generated@@27))
))) (forall (($generated@@28 T@U) ) (!  (=> (= (type $generated@@28) $generated@@5) (= ($generated@@12 ($generated@@13 $generated@@28)) $generated@@28))
 :pattern ( ($generated@@13 $generated@@28))
))) (forall (($generated@@29 RoundingMode) ) (! (= (type ($generated@@12 $generated@@29)) $generated@@5)
 :pattern ( ($generated@@12 $generated@@29))
))) (forall (($generated@@30 String) ) (! (= ($generated@@15 ($generated@@14 $generated@@30)) $generated@@30)
 :pattern ( ($generated@@14 $generated@@30))
))) (forall (($generated@@31 T@U) ) (!  (=> (= (type $generated@@31) $generated@@6) (= ($generated@@14 ($generated@@15 $generated@@31)) $generated@@31))
 :pattern ( ($generated@@15 $generated@@31))
))) (forall (($generated@@32 String) ) (! (= (type ($generated@@14 $generated@@32)) $generated@@6)
 :pattern ( ($generated@@14 $generated@@32))
))) (forall (($generated@@33 (RegEx String)) ) (! (= ($generated@@17 ($generated@@16 $generated@@33)) $generated@@33)
 :pattern ( ($generated@@16 $generated@@33))
))) (forall (($generated@@34 T@U) ) (!  (=> (= (type $generated@@34) $generated@@7) (= ($generated@@16 ($generated@@17 $generated@@34)) $generated@@34))
 :pattern ( ($generated@@17 $generated@@34))
))) (forall (($generated@@35 (RegEx String)) ) (! (= (type ($generated@@16 $generated@@35)) $generated@@7)
 :pattern ( ($generated@@16 $generated@@35))
))))
(assert (forall (($generated@@36 T@U) ) (! (UOrdering2 $generated@@36 $generated@@36)
 :no-pattern ($generated $generated@@36)
 :no-pattern ($generated@@0 $generated@@36)
)))
(assert (forall (($generated@@37 T@U) ($generated@@38 T@U) ($generated@@39 T@U) ) (! (let (($generated@@40 (type $generated@@37)))
 (=> (and (and (= (type $generated@@38) $generated@@40) (= (type $generated@@39) $generated@@40)) (and (UOrdering2 $generated@@37 $generated@@38) (UOrdering2 $generated@@38 $generated@@39))) (UOrdering2 $generated@@37 $generated@@39)))
 :pattern ( (UOrdering2 $generated@@37 $generated@@38) (UOrdering2 $generated@@38 $generated@@39))
)))
(assert (forall (($generated@@41 T@U) ($generated@@42 T@U) ) (! (let (($generated@@43 (type $generated@@41)))
 (=> (= (type $generated@@42) $generated@@43) (=> (and (UOrdering2 $generated@@41 $generated@@42) (UOrdering2 $generated@@42 $generated@@41)) (= $generated@@41 $generated@@42))))
 :pattern ( (UOrdering2 $generated@@41 $generated@@42) (UOrdering2 $generated@@42 $generated@@41))
)))
(assert  (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (= ($generated@@1 $generated@@64) 6) (= (type $generated@@44) $generated@@64)) (= (type $generated@@45) $generated@@64)) (= (type $generated@@46) $generated@@64)) (= (type $generated@@47) $generated@@64)) (= (type $generated@@48) $generated@@64)) (= ($generated@@1 $generated@@65) 7)) (= (type $generated@@49) $generated@@65)) (= (type $generated@@50) $generated@@65)) (= (type $generated@@51) $generated@@65)) (= (type $generated@@52) $generated@@65)) (= (type $generated@@53) $generated@@65)) (= (type $generated@@54) $generated@@65)) (= (type $generated@@55) $generated@@65)) (= (type $generated@@56) $generated@@65)) (= (type $generated@@57) $generated@@65)) (= (type $generated@@58) $generated@@65)) (= (type $generated@@59) $generated@@65)) (forall (($generated@@70 T@T) ) (= ($generated@@1 ($generated@@66 $generated@@70)) 8))) (forall (($generated@@71 T@T) ) (! (= ($generated@@67 ($generated@@66 $generated@@71)) $generated@@71)
 :pattern ( ($generated@@66 $generated@@71))
))) (= (type $generated@@60) ($generated@@66 $generated@@4))) (= ($generated@@1 $generated@@68) 9)) (= (type $generated@@61) $generated@@68)) (= (type $generated@@62) $generated@@65)) (= ($generated@@1 $generated@@69) 10)) (= (type $generated@@63) $generated@@69)))
(assert (distinct $generated@@44 $generated@@45 $generated@@46 $generated@@47 $generated@@48 $generated@@49 $generated@@50 $generated@@51 $generated@@52 $generated@@53 $generated@@54 $generated@@55 $generated@@56 $generated@@57 $generated@@58 $generated@@59 $generated@@60 $generated@@61 $generated@@62 $generated@@63)
)
(assert (forall (($generated@@73 T@U) ) (! (= (type ($generated@@72 $generated@@73)) $generated@@65)
 :pattern ( ($generated@@72 $generated@@73))
)))
(assert (= ($generated@@72 $generated@@44) $generated@@49))
(assert (= ($generated@@72 $generated@@45) $generated@@50))
(assert (= ($generated@@72 $generated@@46) $generated@@51))
(assert (= ($generated@@72 $generated@@47) $generated@@52))
(assert (= ($generated@@72 $generated@@48) $generated@@53))
(assert  (and (and (and (and (and (and (and (and (and (and (and (and (and (forall (($generated@@85 T@T) ($generated@@86 T@T) ) (= ($generated@@1 ($generated@@76 $generated@@85 $generated@@86)) 11)) (forall (($generated@@87 T@T) ($generated@@88 T@T) ) (! (= ($generated@@79 ($generated@@76 $generated@@87 $generated@@88)) $generated@@87)
 :pattern ( ($generated@@76 $generated@@87 $generated@@88))
))) (forall (($generated@@89 T@T) ($generated@@90 T@T) ) (! (= ($generated@@80 ($generated@@76 $generated@@89 $generated@@90)) $generated@@90)
 :pattern ( ($generated@@76 $generated@@89 $generated@@90))
))) (forall (($generated@@91 T@U) ($generated@@92 T@U) ) (! (let (($generated@@93 ($generated@@80 (type $generated@@91))))
(= (type ($generated@@81 $generated@@91 $generated@@92)) $generated@@93))
 :pattern ( ($generated@@81 $generated@@91 $generated@@92))
))) (forall (($generated@@94 T@U) ($generated@@95 T@U) ($generated@@96 T@U) ) (! (let (($generated@@97 (type $generated@@96)))
(let (($generated@@98 (type $generated@@95)))
(= (type ($generated@@82 $generated@@94 $generated@@95 $generated@@96)) ($generated@@76 $generated@@98 $generated@@97))))
 :pattern ( ($generated@@82 $generated@@94 $generated@@95 $generated@@96))
))) (forall (($generated@@99 T@U) ($generated@@100 T@U) ($generated@@101 T@U) ) (! (let (($generated@@102 ($generated@@80 (type $generated@@99))))
 (=> (= (type $generated@@101) $generated@@102) (= ($generated@@81 ($generated@@82 $generated@@99 $generated@@100 $generated@@101) $generated@@100) $generated@@101)))
 :weight 0
))) (and (forall (($generated@@103 T@U) ($generated@@104 T@U) ($generated@@105 T@U) ($generated@@106 T@U) ) (!  (or (= $generated@@105 $generated@@106) (= ($generated@@81 ($generated@@82 $generated@@104 $generated@@105 $generated@@103) $generated@@106) ($generated@@81 $generated@@104 $generated@@106)))
 :weight 0
)) (forall (($generated@@107 T@U) ($generated@@108 T@U) ($generated@@109 T@U) ($generated@@110 T@U) ) (!  (or true (= ($generated@@81 ($generated@@82 $generated@@108 $generated@@109 $generated@@107) $generated@@110) ($generated@@81 $generated@@108 $generated@@110)))
 :weight 0
)))) (= ($generated@@1 $generated@@77) 12)) (forall (($generated@@111 T@U) ($generated@@112 T@U) ) (! (let (($generated@@113 ($generated@@67 (type $generated@@112))))
(= (type ($generated@@83 $generated@@111 $generated@@112)) $generated@@113))
 :pattern ( ($generated@@83 $generated@@111 $generated@@112))
))) (= ($generated@@1 $generated@@78) 13)) (forall (($generated@@114 T@U) ($generated@@115 T@U) ($generated@@116 T@U) ) (! (= (type ($generated@@84 $generated@@114 $generated@@115 $generated@@116)) $generated@@78)
 :pattern ( ($generated@@84 $generated@@114 $generated@@115 $generated@@116))
))) (forall (($generated@@117 T@U) ($generated@@118 T@U) ($generated@@119 T@U) ) (! (let (($generated@@120 ($generated@@67 (type $generated@@118))))
 (=> (= (type $generated@@119) $generated@@120) (= ($generated@@83 ($generated@@84 $generated@@117 $generated@@118 $generated@@119) $generated@@118) $generated@@119)))
 :weight 0
))) (and (forall (($generated@@121 T@U) ($generated@@122 T@U) ($generated@@123 T@U) ($generated@@124 T@U) ) (!  (or (= $generated@@123 $generated@@124) (= ($generated@@83 ($generated@@84 $generated@@122 $generated@@123 $generated@@121) $generated@@124) ($generated@@83 $generated@@122 $generated@@124)))
 :weight 0
)) (forall (($generated@@125 T@U) ($generated@@126 T@U) ($generated@@127 T@U) ($generated@@128 T@U) ) (!  (or true (= ($generated@@83 ($generated@@84 $generated@@126 $generated@@127 $generated@@125) $generated@@128) ($generated@@83 $generated@@126 $generated@@128)))
 :weight 0
)))) (forall (($generated@@129 Int) ) (! (= (type ($generated@@75 $generated@@129)) $generated@@64)
 :pattern ( ($generated@@75 $generated@@129))
))))
(assert (forall (($generated@@130 T@U) ($generated@@131 T@U) ) (!  (=> (and (= (type $generated@@130) $generated@@2) (= (type $generated@@131) ($generated@@76 $generated@@77 $generated@@78))) ($generated@@74 $generated@@130 ($generated@@75 0) $generated@@131))
 :pattern ( ($generated@@74 $generated@@130 ($generated@@75 0) $generated@@131))
)))
(assert  (and (and (and (and (forall (($generated@@137 T@T) ($generated@@138 T@T) ) (= ($generated@@1 ($generated@@134 $generated@@137 $generated@@138)) 14)) (forall (($generated@@139 T@T) ($generated@@140 T@T) ) (! (= ($generated@@135 ($generated@@134 $generated@@139 $generated@@140)) $generated@@139)
 :pattern ( ($generated@@134 $generated@@139 $generated@@140))
))) (forall (($generated@@141 T@T) ($generated@@142 T@T) ) (! (= ($generated@@136 ($generated@@134 $generated@@141 $generated@@142)) $generated@@142)
 :pattern ( ($generated@@134 $generated@@141 $generated@@142))
))) (forall (($generated@@143 T@U) ) (! (let (($generated@@144 ($generated@@135 (type $generated@@143))))
(= (type ($generated@@132 $generated@@143)) ($generated@@76 $generated@@144 $generated@@4)))
 :pattern ( ($generated@@132 $generated@@143))
))) (forall (($generated@@145 T@U) ($generated@@146 T@U) ($generated@@147 T@U) ) (! (let (($generated@@148 ($generated@@80 (type $generated@@146))))
(let (($generated@@149 ($generated@@79 (type $generated@@145))))
(= (type ($generated@@133 $generated@@145 $generated@@146 $generated@@147)) ($generated@@134 $generated@@149 $generated@@148))))
 :pattern ( ($generated@@133 $generated@@145 $generated@@146 $generated@@147))
))))
(assert (forall (($generated@@150 T@U) ($generated@@151 T@U) ($generated@@152 T@U) ) (! (let (($generated@@153 ($generated@@80 (type $generated@@151))))
(let (($generated@@154 ($generated@@79 (type $generated@@150))))
 (=> (and (and (= (type $generated@@150) ($generated@@76 $generated@@154 $generated@@4)) (= (type $generated@@151) ($generated@@76 $generated@@154 $generated@@153))) (= (type $generated@@152) $generated@@64)) (= ($generated@@132 ($generated@@133 $generated@@150 $generated@@151 $generated@@152)) $generated@@150))))
 :pattern ( ($generated@@132 ($generated@@133 $generated@@150 $generated@@151 $generated@@152)))
)))
(assert (forall (($generated@@156 T@U) ) (! (let (($generated@@157 ($generated@@136 (type $generated@@156))))
(let (($generated@@158 ($generated@@135 (type $generated@@156))))
(= (type ($generated@@155 $generated@@156)) ($generated@@76 $generated@@158 $generated@@157))))
 :pattern ( ($generated@@155 $generated@@156))
)))
(assert (forall (($generated@@159 T@U) ($generated@@160 T@U) ($generated@@161 T@U) ) (! (let (($generated@@162 ($generated@@80 (type $generated@@160))))
(let (($generated@@163 ($generated@@79 (type $generated@@159))))
 (=> (and (and (= (type $generated@@159) ($generated@@76 $generated@@163 $generated@@4)) (= (type $generated@@160) ($generated@@76 $generated@@163 $generated@@162))) (= (type $generated@@161) $generated@@64)) (= ($generated@@155 ($generated@@133 $generated@@159 $generated@@160 $generated@@161)) $generated@@160))))
 :pattern ( ($generated@@155 ($generated@@133 $generated@@159 $generated@@160 $generated@@161)))
)))
(assert (forall (($generated@@165 T@U) ) (!  (=> (= (type $generated@@165) $generated@@2) ($generated@@164 $generated@@165 ($generated@@75 0)))
 :pattern ( ($generated@@164 $generated@@165 ($generated@@75 0)))
)))
(assert  (and (= ($generated@@1 $generated@@168) 15) (forall (($generated@@169 T@U) ($generated@@170 T@U) ) (! (= (type ($generated@@167 $generated@@169 $generated@@170)) $generated@@64)
 :pattern ( ($generated@@167 $generated@@169 $generated@@170))
))))
(assert (forall (($generated@@171 T@U) ($generated@@172 T@U) ($generated@@173 T@U) ) (!  (=> (and (and (and (= (type $generated@@171) $generated@@64) (= (type $generated@@172) $generated@@64)) (= (type $generated@@173) $generated@@168)) ($generated@@164 $generated@@173 ($generated@@167 $generated@@171 $generated@@172))) ($generated@@166 $generated@@173))
 :pattern ( ($generated@@166 $generated@@173) ($generated@@164 $generated@@173 ($generated@@167 $generated@@171 $generated@@172)))
)))
(assert  (and (and (= ($generated@@1 $generated@@177) 16) (forall (($generated@@178 T@U) ) (! (= (type ($generated@@175 $generated@@178)) $generated@@177)
 :pattern ( ($generated@@175 $generated@@178))
))) (forall (($generated@@179 T@U) ) (! (= (type ($generated@@176 $generated@@179)) $generated@@177)
 :pattern ( ($generated@@176 $generated@@179))
))))
(assert (forall (($generated@@180 T@U) ($generated@@181 T@U) ) (!  (=> (and (and (= (type $generated@@180) $generated@@168) (= (type $generated@@181) $generated@@168)) true) (= ($generated@@174 $generated@@180 $generated@@181)  (and (= ($generated@@175 $generated@@180) ($generated@@175 $generated@@181)) (= ($generated@@176 $generated@@180) ($generated@@176 $generated@@181)))))
 :pattern ( ($generated@@174 $generated@@180 $generated@@181))
)))
(assert (forall (($generated@@184 T@U) ) (! (= (type ($generated@@182 $generated@@184)) $generated@@64)
 :pattern ( ($generated@@182 $generated@@184))
)))
(assert (forall (($generated@@185 T@U) ($generated@@186 T@U) ) (!  (=> (and (and (= (type $generated@@185) ($generated@@76 $generated@@177 $generated@@2)) (= (type $generated@@186) $generated@@64)) ($generated@@164 $generated@@185 ($generated@@182 $generated@@186))) ($generated@@183 $generated@@185))
 :pattern ( ($generated@@164 $generated@@185 ($generated@@182 $generated@@186)))
)))
(assert  (and (and (and (and (and (and (and (forall (($generated@@193 T@T) ($generated@@194 T@T) ) (= ($generated@@1 ($generated@@189 $generated@@193 $generated@@194)) 17)) (forall (($generated@@195 T@T) ($generated@@196 T@T) ) (! (= ($generated@@190 ($generated@@189 $generated@@195 $generated@@196)) $generated@@195)
 :pattern ( ($generated@@189 $generated@@195 $generated@@196))
))) (forall (($generated@@197 T@T) ($generated@@198 T@T) ) (! (= ($generated@@191 ($generated@@189 $generated@@197 $generated@@198)) $generated@@198)
 :pattern ( ($generated@@189 $generated@@197 $generated@@198))
))) (forall (($generated@@199 T@U) ($generated@@200 T@U) ($generated@@201 T@U) ) (! (let (($generated@@202 ($generated@@191 (type $generated@@199))))
(= (type ($generated@@187 $generated@@199 $generated@@200 $generated@@201)) $generated@@202))
 :pattern ( ($generated@@187 $generated@@199 $generated@@200 $generated@@201))
))) (forall (($generated@@203 T@U) ($generated@@204 T@U) ($generated@@205 T@U) ($generated@@206 T@U) ) (! (let (($generated@@207 (type $generated@@206)))
(let (($generated@@208 (type $generated@@204)))
(= (type ($generated@@192 $generated@@203 $generated@@204 $generated@@205 $generated@@206)) ($generated@@189 $generated@@208 $generated@@207))))
 :pattern ( ($generated@@192 $generated@@203 $generated@@204 $generated@@205 $generated@@206))
))) (forall (($generated@@209 T@U) ($generated@@210 T@U) ($generated@@211 T@U) ($generated@@212 T@U) ) (! (let (($generated@@213 ($generated@@191 (type $generated@@209))))
 (=> (= (type $generated@@212) $generated@@213) (= ($generated@@187 ($generated@@192 $generated@@209 $generated@@210 $generated@@211 $generated@@212) $generated@@210 $generated@@211) $generated@@212)))
 :weight 0
))) (and (and (forall (($generated@@214 T@U) ($generated@@215 T@U) ($generated@@216 T@U) ($generated@@217 T@U) ($generated@@218 T@U) ($generated@@219 T@U) ) (!  (or (= $generated@@216 $generated@@218) (= ($generated@@187 ($generated@@192 $generated@@215 $generated@@216 $generated@@217 $generated@@214) $generated@@218 $generated@@219) ($generated@@187 $generated@@215 $generated@@218 $generated@@219)))
 :weight 0
)) (forall (($generated@@220 T@U) ($generated@@221 T@U) ($generated@@222 T@U) ($generated@@223 T@U) ($generated@@224 T@U) ($generated@@225 T@U) ) (!  (or (= $generated@@223 $generated@@225) (= ($generated@@187 ($generated@@192 $generated@@221 $generated@@222 $generated@@223 $generated@@220) $generated@@224 $generated@@225) ($generated@@187 $generated@@221 $generated@@224 $generated@@225)))
 :weight 0
))) (forall (($generated@@226 T@U) ($generated@@227 T@U) ($generated@@228 T@U) ($generated@@229 T@U) ($generated@@230 T@U) ($generated@@231 T@U) ) (!  (or true (= ($generated@@187 ($generated@@192 $generated@@227 $generated@@228 $generated@@229 $generated@@226) $generated@@230 $generated@@231) ($generated@@187 $generated@@227 $generated@@230 $generated@@231)))
 :weight 0
)))) (forall (($generated@@232 T@U) ($generated@@233 T@U) ($generated@@234 T@U) ($generated@@235 Bool) ) (! (= (type ($generated@@188 $generated@@232 $generated@@233 $generated@@234 $generated@@235)) ($generated@@189 $generated@@77 $generated@@4))
 :pattern ( ($generated@@188 $generated@@232 $generated@@233 $generated@@234 $generated@@235))
))))
(assert (forall (($generated@@236 T@U) ($generated@@237 T@U) ($generated@@238 T@U) ($generated@@239 Bool) ($generated@@240 T@U) ($generated@@241 T@U) ) (! (let (($generated@@242 ($generated@@67 (type $generated@@241))))
 (=> (and (and (and (and (= (type $generated@@236) $generated@@77) (= (type $generated@@237) ($generated@@76 $generated@@77 $generated@@78))) (= (type $generated@@238) ($generated@@66 $generated@@4))) (= (type $generated@@240) $generated@@77)) (= (type $generated@@241) ($generated@@66 $generated@@242))) (= ($generated@@0 ($generated@@187 ($generated@@188 $generated@@236 $generated@@237 $generated@@238 $generated@@239) $generated@@240 $generated@@241))  (=> (and (not (= $generated@@240 $generated@@236)) ($generated@@0 ($generated@@83 ($generated@@81 $generated@@237 $generated@@240) $generated@@238))) $generated@@239))))
 :pattern ( ($generated@@187 ($generated@@188 $generated@@236 $generated@@237 $generated@@238 $generated@@239) $generated@@240 $generated@@241))
)))
(assert (forall (($generated@@245 T@U) ($generated@@246 T@U) ) (! (= (type ($generated@@243 $generated@@245 $generated@@246)) $generated@@168)
 :pattern ( ($generated@@243 $generated@@245 $generated@@246))
)))
(assert (forall (($generated@@247 T@U) ($generated@@248 T@U) ($generated@@249 T@U) ($generated@@250 T@U) ) (!  (=> (and (and (and (= (type $generated@@247) $generated@@64) (= (type $generated@@248) $generated@@64)) (= (type $generated@@249) $generated@@177)) (= (type $generated@@250) $generated@@177)) (= ($generated@@164 ($generated@@243 $generated@@249 $generated@@250) ($generated@@167 $generated@@247 $generated@@248))  (and ($generated@@244 $generated@@249 $generated@@247) ($generated@@244 $generated@@250 $generated@@248))))
 :pattern ( ($generated@@164 ($generated@@243 $generated@@249 $generated@@250) ($generated@@167 $generated@@247 $generated@@248)))
)))
(assert (forall (($generated@@251 T@U) ($generated@@252 T@U) ) (!  (=> (and (= (type $generated@@251) $generated@@168) (= (type $generated@@252) $generated@@168)) (= ($generated@@174 $generated@@251 $generated@@252) (= $generated@@251 $generated@@252)))
 :pattern ( ($generated@@174 $generated@@251 $generated@@252))
)))
(assert (forall (($generated@@254 T@U) ) (! (= (type ($generated@@253 $generated@@254)) $generated@@64)
 :pattern ( ($generated@@253 $generated@@254))
)))
(assert (forall (($generated@@255 T@U) ($generated@@256 T@U) ) (!  (=> (and (= (type $generated@@255) ($generated@@76 $generated@@177 $generated@@4)) (= (type $generated@@256) $generated@@64)) (= ($generated@@164 $generated@@255 ($generated@@253 $generated@@256)) (forall (($generated@@257 T@U) ) (!  (=> (and (= (type $generated@@257) $generated@@177) ($generated@@0 ($generated@@81 $generated@@255 $generated@@257))) ($generated@@244 $generated@@257 $generated@@256))
 :pattern ( ($generated@@81 $generated@@255 $generated@@257))
))))
 :pattern ( ($generated@@164 $generated@@255 ($generated@@253 $generated@@256)))
)))
(assert (forall (($generated@@259 T@U) ) (! (= (type ($generated@@258 $generated@@259)) $generated@@64)
 :pattern ( ($generated@@258 $generated@@259))
)))
(assert (forall (($generated@@260 T@U) ($generated@@261 T@U) ) (!  (=> (and (= (type $generated@@260) ($generated@@76 $generated@@177 $generated@@4)) (= (type $generated@@261) $generated@@64)) (= ($generated@@164 $generated@@260 ($generated@@258 $generated@@261)) (forall (($generated@@262 T@U) ) (!  (=> (and (= (type $generated@@262) $generated@@177) ($generated@@0 ($generated@@81 $generated@@260 $generated@@262))) ($generated@@244 $generated@@262 $generated@@261))
 :pattern ( ($generated@@81 $generated@@260 $generated@@262))
))))
 :pattern ( ($generated@@164 $generated@@260 ($generated@@258 $generated@@261)))
)))
(assert (forall (($generated@@264 Int) ) (! (= ($generated@@263 $generated@@264) $generated@@264)
 :pattern ( ($generated@@263 $generated@@264))
)))
(assert (forall (($generated@@266 T@U) ) (! (let (($generated@@267 (type $generated@@266)))
(= (type ($generated@@265 $generated@@266)) $generated@@267))
 :pattern ( ($generated@@265 $generated@@266))
)))
(assert (forall (($generated@@268 T@U) ) (! (= ($generated@@265 $generated@@268) $generated@@268)
 :pattern ( ($generated@@265 $generated@@268))
)))
(assert  (and (forall (($generated@@271 T@U) ($generated@@272 Int) ($generated@@273 Int) ($generated@@274 Int) ) (! (= (type ($generated@@269 $generated@@271 $generated@@272 $generated@@273 $generated@@274)) ($generated@@76 $generated@@177 $generated@@4))
 :pattern ( ($generated@@269 $generated@@271 $generated@@272 $generated@@273 $generated@@274))
)) (forall (($generated@@275 T@T) ($generated@@276 T@U) ) (! (= (type ($generated@@270 $generated@@275 $generated@@276)) $generated@@275)
 :pattern ( ($generated@@270 $generated@@275 $generated@@276))
))))
(assert (forall (($generated@@277 T@U) ($generated@@278 Int) ($generated@@279 Int) ($generated@@280 Int) ($generated@@281 T@U) ) (!  (=> (and (= (type $generated@@277) $generated@@64) (= (type $generated@@281) $generated@@177)) (= ($generated@@0 ($generated@@81 ($generated@@269 $generated@@277 $generated@@278 $generated@@279 $generated@@280) $generated@@281))  (and ($generated@@244 $generated@@281 $generated@@277) (exists (($generated@@282 Int) )  (and (and (<= $generated@@278 $generated@@282) (< $generated@@282 $generated@@279)) (= ($generated ($generated@@270 $generated@@2 $generated@@281)) (+ $generated@@282 $generated@@280)))))))
 :pattern ( ($generated@@81 ($generated@@269 $generated@@277 $generated@@278 $generated@@279 $generated@@280) $generated@@281))
)))
(assert (forall (($generated@@285 T@U) ($generated@@286 T@U) ($generated@@287 T@U) ($generated@@288 T@U) ($generated@@289 T@U) ) (!  (=> (and (and (and (and (and (= (type $generated@@285) $generated@@64) (= (type $generated@@286) $generated@@64)) (= (type $generated@@287) $generated@@177)) (= (type $generated@@288) $generated@@177)) (= (type $generated@@289) ($generated@@76 $generated@@77 $generated@@78))) ($generated@@283 $generated@@289)) (= ($generated@@74 ($generated@@243 $generated@@287 $generated@@288) ($generated@@167 $generated@@285 $generated@@286) $generated@@289)  (and ($generated@@284 $generated@@287 $generated@@285 $generated@@289) ($generated@@284 $generated@@288 $generated@@286 $generated@@289))))
 :pattern ( ($generated@@74 ($generated@@243 $generated@@287 $generated@@288) ($generated@@167 $generated@@285 $generated@@286) $generated@@289))
)))
(assert (forall (($generated@@291 T@U) ) (! (= (type ($generated@@290 $generated@@291)) $generated@@68)
 :pattern ( ($generated@@290 $generated@@291))
)))
(assert (forall (($generated@@292 T@U) ) (!  (=> (= (type $generated@@292) $generated@@168) (= ($generated@@166 $generated@@292) (= ($generated@@290 $generated@@292) $generated@@61)))
 :pattern ( ($generated@@166 $generated@@292))
)))
(assert (forall (($generated@@293 T@U) ) (!  (=> (and (= (type $generated@@293) $generated@@168) ($generated@@166 $generated@@293)) (exists (($generated@@294 T@U) ($generated@@295 T@U) ) (!  (and (and (= (type $generated@@294) $generated@@177) (= (type $generated@@295) $generated@@177)) (= $generated@@293 ($generated@@243 $generated@@294 $generated@@295)))
 :no-pattern (type $generated@@294)
 :no-pattern (type $generated@@295)
 :no-pattern ($generated $generated@@294)
 :no-pattern ($generated@@0 $generated@@294)
 :no-pattern ($generated $generated@@295)
 :no-pattern ($generated@@0 $generated@@295)
)))
 :pattern ( ($generated@@166 $generated@@293))
)))
(assert  (and (and (forall (($generated@@300 T@T) ) (= ($generated@@1 ($generated@@298 $generated@@300)) 18)) (forall (($generated@@301 T@T) ) (! (= ($generated@@299 ($generated@@298 $generated@@301)) $generated@@301)
 :pattern ( ($generated@@298 $generated@@301))
))) (forall (($generated@@302 T@T) ) (! (= (type ($generated@@296 $generated@@302)) ($generated@@298 $generated@@302))
 :pattern ( ($generated@@296 $generated@@302))
))))
(assert (forall (($generated@@303 T@T) ) (! (= ($generated@@297 ($generated@@296 $generated@@303)) 0)
 :pattern ( ($generated@@296 $generated@@303))
)))
(assert (forall (($generated@@305 T@U) ) (! (= (type ($generated@@304 $generated@@305)) $generated@@177)
 :pattern ( ($generated@@304 $generated@@305))
)))
(assert (forall (($generated@@306 T@U) ($generated@@307 T@U) ($generated@@308 T@U) ) (!  (=> (and (= (type $generated@@307) $generated@@64) (= (type $generated@@308) ($generated@@76 $generated@@77 $generated@@78))) (= ($generated@@284 ($generated@@304 $generated@@306) $generated@@307 $generated@@308) ($generated@@74 $generated@@306 $generated@@307 $generated@@308)))
 :pattern ( ($generated@@284 ($generated@@304 $generated@@306) $generated@@307 $generated@@308))
)))
(assert (forall (($generated@@311 T@T) ) (! (= (type ($generated@@310 $generated@@311)) ($generated@@76 $generated@@311 $generated@@2))
 :pattern ( ($generated@@310 $generated@@311))
)))
(assert (forall (($generated@@312 T@U) ) (! (let (($generated@@313 ($generated@@79 (type $generated@@312))))
 (=> (= (type $generated@@312) ($generated@@76 $generated@@313 $generated@@2)) (and (= (= ($generated@@309 $generated@@312) 0) (= $generated@@312 ($generated@@310 $generated@@313))) (=> (not (= ($generated@@309 $generated@@312) 0)) (exists (($generated@@314 T@U) ) (!  (and (= (type $generated@@314) $generated@@313) (< 0 ($generated ($generated@@81 $generated@@312 $generated@@314))))
 :no-pattern (type $generated@@314)
 :no-pattern ($generated $generated@@314)
 :no-pattern ($generated@@0 $generated@@314)
))))))
 :pattern ( ($generated@@309 $generated@@312))
)))
(assert (forall (($generated@@316 T@T) ($generated@@317 T@T) ) (! (= (type ($generated@@315 $generated@@316 $generated@@317)) ($generated@@134 $generated@@316 $generated@@317))
 :pattern ( ($generated@@315 $generated@@316 $generated@@317))
)))
(assert (forall (($generated@@318 T@U) ($generated@@319 T@T) ) (! (let (($generated@@320 (type $generated@@318)))
 (not ($generated@@0 ($generated@@81 ($generated@@132 ($generated@@315 $generated@@320 $generated@@319)) $generated@@318))))
 :pattern ( (let (($generated@@320 (type $generated@@318)))
($generated@@81 ($generated@@132 ($generated@@315 $generated@@320 $generated@@319)) $generated@@318)))
)))
(assert  (and (and (and (and (forall (($generated@@326 T@T) ($generated@@327 T@T) ) (= ($generated@@1 ($generated@@323 $generated@@326 $generated@@327)) 19)) (forall (($generated@@328 T@T) ($generated@@329 T@T) ) (! (= ($generated@@324 ($generated@@323 $generated@@328 $generated@@329)) $generated@@328)
 :pattern ( ($generated@@323 $generated@@328 $generated@@329))
))) (forall (($generated@@330 T@T) ($generated@@331 T@T) ) (! (= ($generated@@325 ($generated@@323 $generated@@330 $generated@@331)) $generated@@331)
 :pattern ( ($generated@@323 $generated@@330 $generated@@331))
))) (forall (($generated@@332 T@U) ) (! (let (($generated@@333 ($generated@@324 (type $generated@@332))))
(= (type ($generated@@321 $generated@@332)) ($generated@@76 $generated@@333 $generated@@4)))
 :pattern ( ($generated@@321 $generated@@332))
))) (forall (($generated@@334 T@T) ($generated@@335 T@T) ) (! (= (type ($generated@@322 $generated@@334 $generated@@335)) ($generated@@323 $generated@@334 $generated@@335))
 :pattern ( ($generated@@322 $generated@@334 $generated@@335))
))))
(assert (forall (($generated@@336 T@U) ($generated@@337 T@T) ) (! (let (($generated@@338 (type $generated@@336)))
 (not ($generated@@0 ($generated@@81 ($generated@@321 ($generated@@322 $generated@@338 $generated@@337)) $generated@@336))))
 :pattern ( (let (($generated@@338 (type $generated@@336)))
($generated@@81 ($generated@@321 ($generated@@322 $generated@@338 $generated@@337)) $generated@@336)))
)))
(assert (forall (($generated@@339 T@U) ) (! (let (($generated@@340 ($generated@@79 (type $generated@@339))))
 (=> (= (type $generated@@339) ($generated@@76 $generated@@340 $generated@@2)) (= ($generated@@183 $generated@@339) (forall (($generated@@341 T@U) ) (!  (=> (= (type $generated@@341) $generated@@340) (and (<= 0 ($generated ($generated@@81 $generated@@339 $generated@@341))) (<= ($generated ($generated@@81 $generated@@339 $generated@@341)) ($generated@@309 $generated@@339))))
 :pattern ( ($generated@@81 $generated@@339 $generated@@341))
)))))
 :pattern ( ($generated@@183 $generated@@339))
)))
(assert (forall (($generated@@343 T@U) ($generated@@344 Int) ($generated@@345 Int) ) (! (= (type ($generated@@342 $generated@@343 $generated@@344 $generated@@345)) ($generated@@76 $generated@@177 $generated@@4))
 :pattern ( ($generated@@342 $generated@@343 $generated@@344 $generated@@345))
)))
(assert (forall (($generated@@346 T@U) ($generated@@347 Int) ($generated@@348 Int) ($generated@@349 T@U) ) (!  (=> (and (= (type $generated@@346) $generated@@64) (= (type $generated@@349) $generated@@177)) (= ($generated@@0 ($generated@@81 ($generated@@342 $generated@@346 $generated@@347 $generated@@348) $generated@@349))  (and ($generated@@244 $generated@@349 $generated@@346) (and (<= $generated@@347 ($generated ($generated@@270 $generated@@2 $generated@@349))) (< ($generated ($generated@@270 $generated@@2 $generated@@349)) $generated@@348)))))
 :pattern ( ($generated@@81 ($generated@@342 $generated@@346 $generated@@347 $generated@@348) $generated@@349))
)))
(assert (forall (($generated@@350 T@U) ) (! (let (($generated@@351 ($generated@@136 (type $generated@@350))))
(let (($generated@@352 ($generated@@135 (type $generated@@350))))
 (=> (= (type $generated@@350) ($generated@@134 $generated@@352 $generated@@351)) (or (= $generated@@350 ($generated@@315 $generated@@352 $generated@@351)) (exists (($generated@@353 T@U) ) (!  (and (= (type $generated@@353) $generated@@352) ($generated@@0 ($generated@@81 ($generated@@132 $generated@@350) $generated@@353)))
 :no-pattern (type $generated@@353)
 :no-pattern ($generated $generated@@353)
 :no-pattern ($generated@@0 $generated@@353)
))))))
 :pattern ( ($generated@@132 $generated@@350))
)))
(assert (forall (($generated@@355 T@U) ) (! (let (($generated@@356 ($generated@@136 (type $generated@@355))))
(= (type ($generated@@354 $generated@@355)) ($generated@@76 $generated@@356 $generated@@4)))
 :pattern ( ($generated@@354 $generated@@355))
)))
(assert (forall (($generated@@357 T@U) ) (! (let (($generated@@358 ($generated@@136 (type $generated@@357))))
(let (($generated@@359 ($generated@@135 (type $generated@@357))))
 (=> (= (type $generated@@357) ($generated@@134 $generated@@359 $generated@@358)) (or (= $generated@@357 ($generated@@315 $generated@@359 $generated@@358)) (exists (($generated@@360 T@U) ) (!  (and (= (type $generated@@360) $generated@@358) ($generated@@0 ($generated@@81 ($generated@@354 $generated@@357) $generated@@360)))
 :no-pattern (type $generated@@360)
 :no-pattern ($generated $generated@@360)
 :no-pattern ($generated@@0 $generated@@360)
))))))
 :pattern ( ($generated@@354 $generated@@357))
)))
(assert (forall (($generated@@361 T@U) ) (! (let (($generated@@362 ($generated@@325 (type $generated@@361))))
(let (($generated@@363 ($generated@@324 (type $generated@@361))))
 (=> (= (type $generated@@361) ($generated@@323 $generated@@363 $generated@@362)) (or (= $generated@@361 ($generated@@322 $generated@@363 $generated@@362)) (exists (($generated@@364 T@U) ) (!  (and (= (type $generated@@364) $generated@@363) ($generated@@0 ($generated@@81 ($generated@@321 $generated@@361) $generated@@364)))
 :no-pattern (type $generated@@364)
 :no-pattern ($generated $generated@@364)
 :no-pattern ($generated@@0 $generated@@364)
))))))
 :pattern ( ($generated@@321 $generated@@361))
)))
(assert (forall (($generated@@366 T@U) ) (! (let (($generated@@367 ($generated@@325 (type $generated@@366))))
(= (type ($generated@@365 $generated@@366)) ($generated@@76 $generated@@367 $generated@@4)))
 :pattern ( ($generated@@365 $generated@@366))
)))
(assert (forall (($generated@@368 T@U) ) (! (let (($generated@@369 ($generated@@325 (type $generated@@368))))
(let (($generated@@370 ($generated@@324 (type $generated@@368))))
 (=> (= (type $generated@@368) ($generated@@323 $generated@@370 $generated@@369)) (or (= $generated@@368 ($generated@@322 $generated@@370 $generated@@369)) (exists (($generated@@371 T@U) ) (!  (and (= (type $generated@@371) $generated@@369) ($generated@@0 ($generated@@81 ($generated@@365 $generated@@368) $generated@@371)))
 :no-pattern (type $generated@@371)
 :no-pattern ($generated $generated@@371)
 :no-pattern ($generated@@0 $generated@@371)
))))))
 :pattern ( ($generated@@365 $generated@@368))
)))
(assert (forall (($generated@@372 T@U) ($generated@@373 T@U) ) (!  (=> (and (= (type $generated@@372) ($generated@@76 $generated@@177 $generated@@2)) (= (type $generated@@373) $generated@@64)) (= ($generated@@164 $generated@@372 ($generated@@182 $generated@@373)) (forall (($generated@@374 T@U) ) (!  (=> (and (= (type $generated@@374) $generated@@177) (< 0 ($generated ($generated@@81 $generated@@372 $generated@@374)))) ($generated@@244 $generated@@374 $generated@@373))
 :pattern ( ($generated@@81 $generated@@372 $generated@@374))
))))
 :pattern ( ($generated@@164 $generated@@372 ($generated@@182 $generated@@373)))
)))
(assert (forall (($generated@@376 T@U) ) (! (= (type ($generated@@375 $generated@@376)) ($generated@@76 $generated@@177 $generated@@177))
 :pattern ( ($generated@@375 $generated@@376))
)))
(assert (forall (($generated@@377 T@U) ($generated@@378 T@U) ) (!  (=> (and (= (type $generated@@377) $generated@@177) (= (type $generated@@378) $generated@@177)) (= ($generated@@81 ($generated@@375 $generated@@377) $generated@@378) $generated@@377))
 :pattern ( ($generated@@81 ($generated@@375 $generated@@377) $generated@@378))
)))
(assert (forall (($generated@@379 T@U) ($generated@@380 T@U) ($generated@@381 T@U) ) (!  (=> (and (and (= (type $generated@@379) ($generated@@76 $generated@@177 $generated@@4)) (= (type $generated@@380) $generated@@64)) (= (type $generated@@381) ($generated@@76 $generated@@77 $generated@@78))) (= ($generated@@74 $generated@@379 ($generated@@253 $generated@@380) $generated@@381) (forall (($generated@@382 T@U) ) (!  (=> (and (= (type $generated@@382) $generated@@177) ($generated@@0 ($generated@@81 $generated@@379 $generated@@382))) ($generated@@284 $generated@@382 $generated@@380 $generated@@381))
 :pattern ( ($generated@@81 $generated@@379 $generated@@382))
))))
 :pattern ( ($generated@@74 $generated@@379 ($generated@@253 $generated@@380) $generated@@381))
)))
(assert (forall (($generated@@383 T@U) ($generated@@384 T@U) ($generated@@385 T@U) ) (!  (=> (and (and (= (type $generated@@383) ($generated@@76 $generated@@177 $generated@@4)) (= (type $generated@@384) $generated@@64)) (= (type $generated@@385) ($generated@@76 $generated@@77 $generated@@78))) (= ($generated@@74 $generated@@383 ($generated@@258 $generated@@384) $generated@@385) (forall (($generated@@386 T@U) ) (!  (=> (and (= (type $generated@@386) $generated@@177) ($generated@@0 ($generated@@81 $generated@@383 $generated@@386))) ($generated@@284 $generated@@386 $generated@@384 $generated@@385))
 :pattern ( ($generated@@81 $generated@@383 $generated@@386))
))))
 :pattern ( ($generated@@74 $generated@@383 ($generated@@258 $generated@@384) $generated@@385))
)))
(assert (forall (($generated@@387 T@U) ) (! (let (($generated@@388 (type $generated@@387)))
(= ($generated ($generated@@81 ($generated@@310 $generated@@388) $generated@@387)) 0))
 :pattern ( (let (($generated@@388 (type $generated@@387)))
($generated@@81 ($generated@@310 $generated@@388) $generated@@387)))
)))
(assert (forall (($generated@@390 T@U) ) (! (= (type ($generated@@389 $generated@@390)) ($generated@@76 $generated@@177 $generated@@4))
 :pattern ( ($generated@@389 $generated@@390))
)))
(assert (forall (($generated@@391 T@U) ($generated@@392 T@U) ) (!  (=> (and (= (type $generated@@391) ($generated@@134 $generated@@177 $generated@@177)) (= (type $generated@@392) $generated@@177)) (= ($generated@@0 ($generated@@81 ($generated@@389 $generated@@391) $generated@@392))  (and ($generated@@0 ($generated@@81 ($generated@@132 $generated@@391) ($generated@@175 ($generated@@270 $generated@@168 $generated@@392)))) (= ($generated@@81 ($generated@@155 $generated@@391) ($generated@@175 ($generated@@270 $generated@@168 $generated@@392))) ($generated@@176 ($generated@@270 $generated@@168 $generated@@392))))))
 :pattern ( ($generated@@81 ($generated@@389 $generated@@391) $generated@@392))
)))
(assert  (and (forall (($generated@@395 T@U) ) (! (= (type ($generated@@393 $generated@@395)) ($generated@@76 $generated@@177 $generated@@4))
 :pattern ( ($generated@@393 $generated@@395))
)) (forall (($generated@@396 T@U) ) (! (let (($generated@@397 ($generated@@325 (type $generated@@396))))
(let (($generated@@398 ($generated@@324 (type $generated@@396))))
(= (type ($generated@@394 $generated@@396)) ($generated@@76 $generated@@398 $generated@@397))))
 :pattern ( ($generated@@394 $generated@@396))
))))
(assert (forall (($generated@@399 T@U) ($generated@@400 T@U) ) (!  (=> (and (= (type $generated@@399) ($generated@@323 $generated@@177 $generated@@177)) (= (type $generated@@400) $generated@@177)) (= ($generated@@0 ($generated@@81 ($generated@@393 $generated@@399) $generated@@400))  (and ($generated@@0 ($generated@@81 ($generated@@321 $generated@@399) ($generated@@175 ($generated@@270 $generated@@168 $generated@@400)))) (= ($generated@@81 ($generated@@394 $generated@@399) ($generated@@175 ($generated@@270 $generated@@168 $generated@@400))) ($generated@@176 ($generated@@270 $generated@@168 $generated@@400))))))
 :pattern ( ($generated@@81 ($generated@@393 $generated@@399) $generated@@400))
)))
(assert (forall (($generated@@401 T@U) ($generated@@402 T@U) ) (! (let (($generated@@403 (type $generated@@402)))
(let (($generated@@404 ($generated@@135 (type $generated@@401))))
 (=> (= (type $generated@@401) ($generated@@134 $generated@@404 $generated@@403)) (= ($generated@@0 ($generated@@81 ($generated@@354 $generated@@401) $generated@@402)) (exists (($generated@@405 T@U) ) (!  (and (= (type $generated@@405) $generated@@404) (and ($generated@@0 ($generated@@81 ($generated@@132 $generated@@401) $generated@@405)) (= $generated@@402 ($generated@@81 ($generated@@155 $generated@@401) $generated@@405))))
 :pattern ( ($generated@@81 ($generated@@132 $generated@@401) $generated@@405))
 :pattern ( ($generated@@81 ($generated@@155 $generated@@401) $generated@@405))
))))))
 :pattern ( ($generated@@81 ($generated@@354 $generated@@401) $generated@@402))
)))
(assert (forall (($generated@@406 T@U) ($generated@@407 T@U) ) (! (let (($generated@@408 (type $generated@@407)))
(let (($generated@@409 ($generated@@324 (type $generated@@406))))
 (=> (= (type $generated@@406) ($generated@@323 $generated@@409 $generated@@408)) (= ($generated@@0 ($generated@@81 ($generated@@365 $generated@@406) $generated@@407)) (exists (($generated@@410 T@U) ) (!  (and (= (type $generated@@410) $generated@@409) (and ($generated@@0 ($generated@@81 ($generated@@321 $generated@@406) $generated@@410)) (= $generated@@407 ($generated@@81 ($generated@@394 $generated@@406) $generated@@410))))
 :pattern ( ($generated@@81 ($generated@@321 $generated@@406) $generated@@410))
 :pattern ( ($generated@@81 ($generated@@394 $generated@@406) $generated@@410))
))))))
 :pattern ( ($generated@@81 ($generated@@365 $generated@@406) $generated@@407))
)))
(assert (forall (($generated@@412 T@U) ($generated@@413 T@U) ) (! (= (type ($generated@@411 $generated@@412 $generated@@413)) $generated@@64)
 :pattern ( ($generated@@411 $generated@@412 $generated@@413))
)))
(assert (forall (($generated@@414 T@U) ($generated@@415 T@U) ($generated@@416 T@U) ($generated@@417 T@U) ) (!  (=> (and (and (and (= (type $generated@@414) ($generated@@134 $generated@@177 $generated@@177)) (= (type $generated@@415) $generated@@64)) (= (type $generated@@416) $generated@@64)) (= (type $generated@@417) ($generated@@76 $generated@@77 $generated@@78))) (= ($generated@@74 $generated@@414 ($generated@@411 $generated@@415 $generated@@416) $generated@@417) (forall (($generated@@418 T@U) ) (!  (=> (and (= (type $generated@@418) $generated@@177) ($generated@@0 ($generated@@81 ($generated@@132 $generated@@414) $generated@@418))) (and ($generated@@284 ($generated@@81 ($generated@@155 $generated@@414) $generated@@418) $generated@@416 $generated@@417) ($generated@@284 $generated@@418 $generated@@415 $generated@@417)))
 :pattern ( ($generated@@81 ($generated@@155 $generated@@414) $generated@@418))
 :pattern ( ($generated@@81 ($generated@@132 $generated@@414) $generated@@418))
))))
 :pattern ( ($generated@@74 $generated@@414 ($generated@@411 $generated@@415 $generated@@416) $generated@@417))
)))
(assert (forall (($generated@@420 T@U) ($generated@@421 T@U) ) (! (= (type ($generated@@419 $generated@@420 $generated@@421)) $generated@@64)
 :pattern ( ($generated@@419 $generated@@420 $generated@@421))
)))
(assert (forall (($generated@@422 T@U) ($generated@@423 T@U) ($generated@@424 T@U) ($generated@@425 T@U) ) (!  (=> (and (and (and (= (type $generated@@422) ($generated@@323 $generated@@177 $generated@@177)) (= (type $generated@@423) $generated@@64)) (= (type $generated@@424) $generated@@64)) (= (type $generated@@425) ($generated@@76 $generated@@77 $generated@@78))) (= ($generated@@74 $generated@@422 ($generated@@419 $generated@@423 $generated@@424) $generated@@425) (forall (($generated@@426 T@U) ) (!  (=> (and (= (type $generated@@426) $generated@@177) ($generated@@0 ($generated@@81 ($generated@@321 $generated@@422) $generated@@426))) (and ($generated@@284 ($generated@@81 ($generated@@394 $generated@@422) $generated@@426) $generated@@424 $generated@@425) ($generated@@284 $generated@@426 $generated@@423 $generated@@425)))
 :pattern ( ($generated@@81 ($generated@@394 $generated@@422) $generated@@426))
 :pattern ( ($generated@@81 ($generated@@321 $generated@@422) $generated@@426))
))))
 :pattern ( ($generated@@74 $generated@@422 ($generated@@419 $generated@@423 $generated@@424) $generated@@425))
)))
(assert (forall (($generated@@428 T@T) ) (! (= (type ($generated@@427 $generated@@428)) ($generated@@76 $generated@@428 $generated@@4))
 :pattern ( ($generated@@427 $generated@@428))
)))
(assert (forall (($generated@@429 T@U) ) (! (let (($generated@@430 ($generated@@325 (type $generated@@429))))
(let (($generated@@431 ($generated@@324 (type $generated@@429))))
 (=> (= (type $generated@@429) ($generated@@323 $generated@@431 $generated@@430)) (= (= $generated@@429 ($generated@@322 $generated@@431 $generated@@430)) (= ($generated@@321 $generated@@429) ($generated@@427 $generated@@431))))))
 :pattern ( ($generated@@321 $generated@@429))
)))
(assert (forall (($generated@@432 T@U) ) (! (let (($generated@@433 ($generated@@325 (type $generated@@432))))
(let (($generated@@434 ($generated@@324 (type $generated@@432))))
 (=> (= (type $generated@@432) ($generated@@323 $generated@@434 $generated@@433)) (= (= $generated@@432 ($generated@@322 $generated@@434 $generated@@433)) (= ($generated@@365 $generated@@432) ($generated@@427 $generated@@433))))))
 :pattern ( ($generated@@365 $generated@@432))
)))
(assert (forall (($generated@@435 T@U) ) (! (let (($generated@@436 ($generated@@325 (type $generated@@435))))
(let (($generated@@437 ($generated@@324 (type $generated@@435))))
 (=> (= (type $generated@@435) ($generated@@323 $generated@@437 $generated@@436)) (= (= $generated@@435 ($generated@@322 $generated@@437 $generated@@436)) (= ($generated@@393 $generated@@435) ($generated@@427 $generated@@177))))))
 :pattern ( ($generated@@393 $generated@@435))
)))
(assert (forall (($generated@@438 T@U) ) (! (let (($generated@@439 ($generated@@136 (type $generated@@438))))
(let (($generated@@440 ($generated@@135 (type $generated@@438))))
 (=> (= (type $generated@@438) ($generated@@134 $generated@@440 $generated@@439)) (or (= $generated@@438 ($generated@@315 $generated@@440 $generated@@439)) (exists (($generated@@441 T@U) ($generated@@442 T@U) ) (!  (and (and (= (type $generated@@441) $generated@@177) (= (type $generated@@442) $generated@@177)) ($generated@@0 ($generated@@81 ($generated@@389 $generated@@438) ($generated@@304 ($generated@@243 $generated@@441 $generated@@442)))))
 :no-pattern (type $generated@@441)
 :no-pattern (type $generated@@442)
 :no-pattern ($generated $generated@@441)
 :no-pattern ($generated@@0 $generated@@441)
 :no-pattern ($generated $generated@@442)
 :no-pattern ($generated@@0 $generated@@442)
))))))
 :pattern ( ($generated@@389 $generated@@438))
)))
(assert (forall (($generated@@443 T@U) ) (! (let (($generated@@444 ($generated@@325 (type $generated@@443))))
(let (($generated@@445 ($generated@@324 (type $generated@@443))))
 (=> (= (type $generated@@443) ($generated@@323 $generated@@445 $generated@@444)) (or (= $generated@@443 ($generated@@322 $generated@@445 $generated@@444)) (exists (($generated@@446 T@U) ($generated@@447 T@U) ) (!  (and (and (= (type $generated@@446) $generated@@177) (= (type $generated@@447) $generated@@177)) ($generated@@0 ($generated@@81 ($generated@@393 $generated@@443) ($generated@@304 ($generated@@243 $generated@@446 $generated@@447)))))
 :no-pattern (type $generated@@446)
 :no-pattern (type $generated@@447)
 :no-pattern ($generated $generated@@446)
 :no-pattern ($generated@@0 $generated@@446)
 :no-pattern ($generated $generated@@447)
 :no-pattern ($generated@@0 $generated@@447)
))))))
 :pattern ( ($generated@@393 $generated@@443))
)))
(assert (forall (($generated@@448 T@U) ) (!  (=> (and (= (type $generated@@448) $generated@@177) ($generated@@244 $generated@@448 $generated@@46)) (and (= ($generated@@304 ($generated@@270 $generated@@2 $generated@@448)) $generated@@448) ($generated@@164 ($generated@@270 $generated@@2 $generated@@448) $generated@@46)))
 :pattern ( ($generated@@244 $generated@@448 $generated@@46))
)))
(assert (forall (($generated@@449 T@U) ) (!  (=> (and (= (type $generated@@449) $generated@@177) ($generated@@244 $generated@@449 $generated@@47)) (and (= ($generated@@304 ($generated@@270 $generated@@3 $generated@@449)) $generated@@449) ($generated@@164 ($generated@@270 $generated@@3 $generated@@449) $generated@@47)))
 :pattern ( ($generated@@244 $generated@@449 $generated@@47))
)))
(assert (forall (($generated@@450 T@U) ) (!  (=> (and (= (type $generated@@450) $generated@@177) ($generated@@244 $generated@@450 $generated@@44)) (and (= ($generated@@304 ($generated@@270 $generated@@4 $generated@@450)) $generated@@450) ($generated@@164 ($generated@@270 $generated@@4 $generated@@450) $generated@@44)))
 :pattern ( ($generated@@244 $generated@@450 $generated@@44))
)))
(assert (= ($generated@@1 $generated@@451) 20))
(assert (forall (($generated@@452 T@U) ) (!  (=> (and (= (type $generated@@452) $generated@@177) ($generated@@244 $generated@@452 $generated@@45)) (and (= ($generated@@304 ($generated@@270 $generated@@451 $generated@@452)) $generated@@452) ($generated@@164 ($generated@@270 $generated@@451 $generated@@452) $generated@@45)))
 :pattern ( ($generated@@244 $generated@@452 $generated@@45))
)))
(assert (forall (($generated@@453 T@U) ($generated@@454 T@U) ) (!  (=> (= (type $generated@@454) $generated@@64) (= ($generated@@244 ($generated@@304 $generated@@453) $generated@@454) ($generated@@164 $generated@@453 $generated@@454)))
 :pattern ( ($generated@@244 ($generated@@304 $generated@@453) $generated@@454))
)))
(assert (forall (($generated@@455 T@U) ) (! (let (($generated@@456 ($generated@@79 (type $generated@@455))))
 (=> (= (type $generated@@455) ($generated@@76 $generated@@456 $generated@@2)) (<= 0 ($generated@@309 $generated@@455))))
 :pattern ( ($generated@@309 $generated@@455))
)))
(assert (forall (($generated@@457 T@U) ) (! (let (($generated@@458 ($generated@@299 (type $generated@@457))))
 (=> (= (type $generated@@457) ($generated@@298 $generated@@458)) (<= 0 ($generated@@297 $generated@@457))))
 :pattern ( ($generated@@297 $generated@@457))
)))
(assert (forall (($generated@@460 T@U) ) (! (= (type ($generated@@459 $generated@@460)) $generated@@64)
 :pattern ( ($generated@@459 $generated@@460))
)))
(assert (forall (($generated@@461 T@U) ($generated@@462 T@U) ) (!  (=> (and (= (type $generated@@461) $generated@@64) (= (type $generated@@462) $generated@@64)) (= ($generated@@459 ($generated@@411 $generated@@461 $generated@@462)) $generated@@461))
 :pattern ( ($generated@@411 $generated@@461 $generated@@462))
)))
(assert (forall (($generated@@464 T@U) ) (! (= (type ($generated@@463 $generated@@464)) $generated@@64)
 :pattern ( ($generated@@463 $generated@@464))
)))
(assert (forall (($generated@@465 T@U) ($generated@@466 T@U) ) (!  (=> (and (= (type $generated@@465) $generated@@64) (= (type $generated@@466) $generated@@64)) (= ($generated@@463 ($generated@@411 $generated@@465 $generated@@466)) $generated@@466))
 :pattern ( ($generated@@411 $generated@@465 $generated@@466))
)))
(assert (forall (($generated@@467 T@U) ($generated@@468 T@U) ) (!  (=> (and (= (type $generated@@467) $generated@@64) (= (type $generated@@468) $generated@@64)) (= ($generated@@72 ($generated@@411 $generated@@467 $generated@@468)) $generated@@58))
 :pattern ( ($generated@@411 $generated@@467 $generated@@468))
)))
(assert (forall (($generated@@470 T@U) ) (! (= (type ($generated@@469 $generated@@470)) $generated@@64)
 :pattern ( ($generated@@469 $generated@@470))
)))
(assert (forall (($generated@@471 T@U) ($generated@@472 T@U) ) (!  (=> (and (= (type $generated@@471) $generated@@64) (= (type $generated@@472) $generated@@64)) (= ($generated@@469 ($generated@@419 $generated@@471 $generated@@472)) $generated@@471))
 :pattern ( ($generated@@419 $generated@@471 $generated@@472))
)))
(assert (forall (($generated@@474 T@U) ) (! (= (type ($generated@@473 $generated@@474)) $generated@@64)
 :pattern ( ($generated@@473 $generated@@474))
)))
(assert (forall (($generated@@475 T@U) ($generated@@476 T@U) ) (!  (=> (and (= (type $generated@@475) $generated@@64) (= (type $generated@@476) $generated@@64)) (= ($generated@@473 ($generated@@419 $generated@@475 $generated@@476)) $generated@@476))
 :pattern ( ($generated@@419 $generated@@475 $generated@@476))
)))
(assert (forall (($generated@@477 T@U) ($generated@@478 T@U) ) (!  (=> (and (= (type $generated@@477) $generated@@64) (= (type $generated@@478) $generated@@64)) (= ($generated@@72 ($generated@@419 $generated@@477 $generated@@478)) $generated@@59))
 :pattern ( ($generated@@419 $generated@@477 $generated@@478))
)))
(assert (forall (($generated@@479 T@U) ($generated@@480 T@U) ) (!  (=> (and (= (type $generated@@479) $generated@@177) (= (type $generated@@480) $generated@@177)) (= ($generated@@290 ($generated@@243 $generated@@479 $generated@@480)) $generated@@61))
 :pattern ( ($generated@@243 $generated@@479 $generated@@480))
)))
(assert (forall (($generated@@482 T@U) ) (! (= (type ($generated@@481 $generated@@482)) $generated@@64)
 :pattern ( ($generated@@481 $generated@@482))
)))
(assert (forall (($generated@@483 T@U) ($generated@@484 T@U) ) (!  (=> (and (= (type $generated@@483) $generated@@64) (= (type $generated@@484) $generated@@64)) (= ($generated@@481 ($generated@@167 $generated@@483 $generated@@484)) $generated@@483))
 :pattern ( ($generated@@167 $generated@@483 $generated@@484))
)))
(assert (forall (($generated@@486 T@U) ) (! (= (type ($generated@@485 $generated@@486)) $generated@@64)
 :pattern ( ($generated@@485 $generated@@486))
)))
(assert (forall (($generated@@487 T@U) ($generated@@488 T@U) ) (!  (=> (and (= (type $generated@@487) $generated@@64) (= (type $generated@@488) $generated@@64)) (= ($generated@@485 ($generated@@167 $generated@@487 $generated@@488)) $generated@@488))
 :pattern ( ($generated@@167 $generated@@487 $generated@@488))
)))
(assert (forall (($generated@@489 T@U) ($generated@@490 T@U) ) (!  (=> (and (= (type $generated@@489) $generated@@177) (= (type $generated@@490) $generated@@177)) (= ($generated@@175 ($generated@@243 $generated@@489 $generated@@490)) $generated@@489))
 :pattern ( ($generated@@243 $generated@@489 $generated@@490))
)))
(assert (forall (($generated@@491 T@U) ($generated@@492 T@U) ) (!  (=> (and (= (type $generated@@491) $generated@@177) (= (type $generated@@492) $generated@@177)) (= ($generated@@176 ($generated@@243 $generated@@491 $generated@@492)) $generated@@492))
 :pattern ( ($generated@@243 $generated@@491 $generated@@492))
)))
(assert  (and (forall (($generated@@495 T@U) ) (! (= (type ($generated@@493 $generated@@495)) $generated@@64)
 :pattern ( ($generated@@493 $generated@@495))
)) (forall (($generated@@496 T@U) ($generated@@497 Int) ) (! (let (($generated@@498 ($generated@@299 (type $generated@@496))))
(= (type ($generated@@494 $generated@@496 $generated@@497)) $generated@@498))
 :pattern ( ($generated@@494 $generated@@496 $generated@@497))
))))
(assert (forall (($generated@@499 T@U) ($generated@@500 T@U) ($generated@@501 T@U) ) (!  (=> (and (and (= (type $generated@@499) ($generated@@298 $generated@@177)) (= (type $generated@@500) $generated@@64)) (= (type $generated@@501) ($generated@@76 $generated@@77 $generated@@78))) (= ($generated@@74 $generated@@499 ($generated@@493 $generated@@500) $generated@@501) (forall (($generated@@502 Int) ) (!  (=> (and (<= 0 $generated@@502) (< $generated@@502 ($generated@@297 $generated@@499))) ($generated@@284 ($generated@@494 $generated@@499 $generated@@502) $generated@@500 $generated@@501))
 :pattern ( ($generated@@494 $generated@@499 $generated@@502))
))))
 :pattern ( ($generated@@74 $generated@@499 ($generated@@493 $generated@@500) $generated@@501))
)))
(assert (forall (($generated@@504 Int) ) (! (= ($generated@@503 ($generated@@75 $generated@@504)) $generated@@504)
 :pattern ( ($generated@@75 $generated@@504))
)))
(assert (forall (($generated@@506 T@U) ) (! (= (type ($generated@@505 $generated@@506)) $generated@@64)
 :pattern ( ($generated@@505 $generated@@506))
)))
(assert (forall (($generated@@507 T@U) ) (!  (=> (= (type $generated@@507) $generated@@64) (= ($generated@@505 ($generated@@253 $generated@@507)) $generated@@507))
 :pattern ( ($generated@@253 $generated@@507))
)))
(assert (forall (($generated@@508 T@U) ) (!  (=> (= (type $generated@@508) $generated@@64) (= ($generated@@72 ($generated@@253 $generated@@508)) $generated@@54))
 :pattern ( ($generated@@253 $generated@@508))
)))
(assert (forall (($generated@@510 T@U) ) (! (= (type ($generated@@509 $generated@@510)) $generated@@64)
 :pattern ( ($generated@@509 $generated@@510))
)))
(assert (forall (($generated@@511 T@U) ) (!  (=> (= (type $generated@@511) $generated@@64) (= ($generated@@509 ($generated@@258 $generated@@511)) $generated@@511))
 :pattern ( ($generated@@258 $generated@@511))
)))
(assert (forall (($generated@@512 T@U) ) (!  (=> (= (type $generated@@512) $generated@@64) (= ($generated@@72 ($generated@@258 $generated@@512)) $generated@@55))
 :pattern ( ($generated@@258 $generated@@512))
)))
(assert (forall (($generated@@514 T@U) ) (! (= (type ($generated@@513 $generated@@514)) $generated@@64)
 :pattern ( ($generated@@513 $generated@@514))
)))
(assert (forall (($generated@@515 T@U) ) (!  (=> (= (type $generated@@515) $generated@@64) (= ($generated@@513 ($generated@@182 $generated@@515)) $generated@@515))
 :pattern ( ($generated@@182 $generated@@515))
)))
(assert (forall (($generated@@516 T@U) ) (!  (=> (= (type $generated@@516) $generated@@64) (= ($generated@@72 ($generated@@182 $generated@@516)) $generated@@56))
 :pattern ( ($generated@@182 $generated@@516))
)))
(assert (forall (($generated@@518 T@U) ) (! (= (type ($generated@@517 $generated@@518)) $generated@@64)
 :pattern ( ($generated@@517 $generated@@518))
)))
(assert (forall (($generated@@519 T@U) ) (!  (=> (= (type $generated@@519) $generated@@64) (= ($generated@@517 ($generated@@493 $generated@@519)) $generated@@519))
 :pattern ( ($generated@@493 $generated@@519))
)))
(assert (forall (($generated@@520 T@U) ) (!  (=> (= (type $generated@@520) $generated@@64) (= ($generated@@72 ($generated@@493 $generated@@520)) $generated@@57))
 :pattern ( ($generated@@493 $generated@@520))
)))
(assert (forall (($generated@@521 T@U) ) (! (let (($generated@@522 (type $generated@@521)))
(= ($generated@@270 $generated@@522 ($generated@@304 $generated@@521)) $generated@@521))
 :pattern ( ($generated@@304 $generated@@521))
)))
(assert (forall (($generated@@523 T@U) ($generated@@524 T@U) ($generated@@525 T@U) ) (!  (=> (and (and (= (type $generated@@523) ($generated@@134 $generated@@177 $generated@@177)) (= (type $generated@@524) $generated@@64)) (= (type $generated@@525) $generated@@64)) (= ($generated@@164 $generated@@523 ($generated@@411 $generated@@524 $generated@@525)) (forall (($generated@@526 T@U) ) (!  (=> (and (= (type $generated@@526) $generated@@177) ($generated@@0 ($generated@@81 ($generated@@132 $generated@@523) $generated@@526))) (and ($generated@@244 ($generated@@81 ($generated@@155 $generated@@523) $generated@@526) $generated@@525) ($generated@@244 $generated@@526 $generated@@524)))
 :pattern ( ($generated@@81 ($generated@@155 $generated@@523) $generated@@526))
 :pattern ( ($generated@@81 ($generated@@132 $generated@@523) $generated@@526))
))))
 :pattern ( ($generated@@164 $generated@@523 ($generated@@411 $generated@@524 $generated@@525)))
)))
(assert (forall (($generated@@527 T@U) ($generated@@528 T@U) ($generated@@529 T@U) ) (!  (=> (and (and (= (type $generated@@527) ($generated@@323 $generated@@177 $generated@@177)) (= (type $generated@@528) $generated@@64)) (= (type $generated@@529) $generated@@64)) (= ($generated@@164 $generated@@527 ($generated@@419 $generated@@528 $generated@@529)) (forall (($generated@@530 T@U) ) (!  (=> (and (= (type $generated@@530) $generated@@177) ($generated@@0 ($generated@@81 ($generated@@321 $generated@@527) $generated@@530))) (and ($generated@@244 ($generated@@81 ($generated@@394 $generated@@527) $generated@@530) $generated@@529) ($generated@@244 $generated@@530 $generated@@528)))
 :pattern ( ($generated@@81 ($generated@@394 $generated@@527) $generated@@530))
 :pattern ( ($generated@@81 ($generated@@321 $generated@@527) $generated@@530))
))))
 :pattern ( ($generated@@164 $generated@@527 ($generated@@419 $generated@@528 $generated@@529)))
)))
(assert (forall (($generated@@533 T@U) ($generated@@534 T@U) ) (!  (=> (and (= (type $generated@@533) $generated@@177) (= (type $generated@@534) $generated@@177)) (< ($generated@@531 $generated@@533) ($generated@@532 ($generated@@243 $generated@@533 $generated@@534))))
 :pattern ( ($generated@@243 $generated@@533 $generated@@534))
)))
(assert (forall (($generated@@535 T@U) ($generated@@536 T@U) ) (!  (=> (and (= (type $generated@@535) $generated@@177) (= (type $generated@@536) $generated@@177)) (< ($generated@@531 $generated@@536) ($generated@@532 ($generated@@243 $generated@@535 $generated@@536))))
 :pattern ( ($generated@@243 $generated@@535 $generated@@536))
)))
(assert (forall (($generated@@537 T@U) ($generated@@538 T@U) ($generated@@539 T@U) ) (!  (=> (and (and (and (= (type $generated@@537) $generated@@177) (= (type $generated@@538) $generated@@64)) (= (type $generated@@539) $generated@@64)) ($generated@@244 $generated@@537 ($generated@@411 $generated@@538 $generated@@539))) (and (= ($generated@@304 ($generated@@270 ($generated@@134 $generated@@177 $generated@@177) $generated@@537)) $generated@@537) ($generated@@164 ($generated@@270 ($generated@@134 $generated@@177 $generated@@177) $generated@@537) ($generated@@411 $generated@@538 $generated@@539))))
 :pattern ( ($generated@@244 $generated@@537 ($generated@@411 $generated@@538 $generated@@539)))
)))
(assert (forall (($generated@@540 T@U) ($generated@@541 T@U) ($generated@@542 T@U) ) (!  (=> (and (and (and (= (type $generated@@540) $generated@@177) (= (type $generated@@541) $generated@@64)) (= (type $generated@@542) $generated@@64)) ($generated@@244 $generated@@540 ($generated@@419 $generated@@541 $generated@@542))) (and (= ($generated@@304 ($generated@@270 ($generated@@323 $generated@@177 $generated@@177) $generated@@540)) $generated@@540) ($generated@@164 ($generated@@270 ($generated@@323 $generated@@177 $generated@@177) $generated@@540) ($generated@@419 $generated@@541 $generated@@542))))
 :pattern ( ($generated@@244 $generated@@540 ($generated@@419 $generated@@541 $generated@@542)))
)))
(assert (forall (($generated@@543 T@U) ($generated@@544 T@U) ($generated@@545 T@U) ) (!  (=> (and (and (and (= (type $generated@@543) $generated@@64) (= (type $generated@@544) $generated@@64)) (= (type $generated@@545) $generated@@177)) ($generated@@244 $generated@@545 ($generated@@167 $generated@@543 $generated@@544))) (and (= ($generated@@304 ($generated@@270 $generated@@168 $generated@@545)) $generated@@545) ($generated@@164 ($generated@@270 $generated@@168 $generated@@545) ($generated@@167 $generated@@543 $generated@@544))))
 :pattern ( ($generated@@244 $generated@@545 ($generated@@167 $generated@@543 $generated@@544)))
)))
(assert (forall (($generated@@546 T@U) ) (! (let (($generated@@547 (type $generated@@546)))
 (not ($generated@@0 ($generated@@81 ($generated@@427 $generated@@547) $generated@@546))))
 :pattern ( (let (($generated@@547 (type $generated@@546)))
($generated@@81 ($generated@@427 $generated@@547) $generated@@546)))
)))
(assert (forall (($generated@@548 T@U) ($generated@@549 T@U) ($generated@@550 T@U) ($generated@@551 T@U) ) (!  (=> (and (and (and (and (= (type $generated@@548) ($generated@@76 $generated@@177 $generated@@4)) (= (type $generated@@549) ($generated@@76 $generated@@177 $generated@@177))) (= (type $generated@@550) $generated@@64)) (= (type $generated@@551) $generated@@64)) (forall (($generated@@552 T@U) ) (!  (=> (and (= (type $generated@@552) $generated@@177) ($generated@@0 ($generated@@81 $generated@@548 $generated@@552))) (and ($generated@@244 $generated@@552 $generated@@550) ($generated@@244 ($generated@@81 $generated@@549 $generated@@552) $generated@@551)))
 :no-pattern (type $generated@@552)
 :no-pattern ($generated $generated@@552)
 :no-pattern ($generated@@0 $generated@@552)
))) ($generated@@164 ($generated@@133 $generated@@548 $generated@@549 ($generated@@411 $generated@@550 $generated@@551)) ($generated@@411 $generated@@550 $generated@@551)))
 :pattern ( ($generated@@133 $generated@@548 $generated@@549 ($generated@@411 $generated@@550 $generated@@551)))
)))
(assert (forall (($generated@@554 T@U) ) (! (= (type ($generated@@553 $generated@@554)) $generated@@69)
 :pattern ( ($generated@@553 $generated@@554))
)))
(assert (forall (($generated@@555 T@U) ($generated@@556 T@U) ) (!  (=> (and (= (type $generated@@555) $generated@@64) (= (type $generated@@556) $generated@@64)) (and (= ($generated@@72 ($generated@@167 $generated@@555 $generated@@556)) $generated@@62) (= ($generated@@553 ($generated@@167 $generated@@555 $generated@@556)) $generated@@63)))
 :pattern ( ($generated@@167 $generated@@555 $generated@@556))
)))
(assert (forall (($generated@@557 T@U) ) (!  (=> (= (type $generated@@557) $generated@@168) (= ($generated@@531 ($generated@@304 $generated@@557)) ($generated@@532 $generated@@557)))
 :pattern ( ($generated@@531 ($generated@@304 $generated@@557)))
)))
(assert (forall (($generated@@558 T@U) ) (!  (=> (and (= (type $generated@@558) $generated@@177) ($generated@@244 $generated@@558 ($generated@@75 0))) (and (= ($generated@@304 ($generated@@270 $generated@@2 $generated@@558)) $generated@@558) ($generated@@164 ($generated@@270 ($generated@@76 $generated@@177 $generated@@4) $generated@@558) ($generated@@75 0))))
 :pattern ( ($generated@@244 $generated@@558 ($generated@@75 0)))
)))
(assert (forall (($generated@@559 T@U) ($generated@@560 T@U) ) (!  (=> (and (and (= (type $generated@@559) $generated@@177) (= (type $generated@@560) $generated@@64)) ($generated@@244 $generated@@559 ($generated@@253 $generated@@560))) (and (= ($generated@@304 ($generated@@270 ($generated@@76 $generated@@177 $generated@@4) $generated@@559)) $generated@@559) ($generated@@164 ($generated@@270 ($generated@@76 $generated@@177 $generated@@4) $generated@@559) ($generated@@253 $generated@@560))))
 :pattern ( ($generated@@244 $generated@@559 ($generated@@253 $generated@@560)))
)))
(assert (forall (($generated@@561 T@U) ($generated@@562 T@U) ) (!  (=> (and (and (= (type $generated@@561) $generated@@177) (= (type $generated@@562) $generated@@64)) ($generated@@244 $generated@@561 ($generated@@258 $generated@@562))) (and (= ($generated@@304 ($generated@@270 ($generated@@76 $generated@@177 $generated@@4) $generated@@561)) $generated@@561) ($generated@@164 ($generated@@270 ($generated@@76 $generated@@177 $generated@@4) $generated@@561) ($generated@@258 $generated@@562))))
 :pattern ( ($generated@@244 $generated@@561 ($generated@@258 $generated@@562)))
)))
(assert (forall (($generated@@563 T@U) ($generated@@564 T@U) ) (!  (=> (and (and (= (type $generated@@563) $generated@@177) (= (type $generated@@564) $generated@@64)) ($generated@@244 $generated@@563 ($generated@@182 $generated@@564))) (and (= ($generated@@304 ($generated@@270 ($generated@@76 $generated@@177 $generated@@2) $generated@@563)) $generated@@563) ($generated@@164 ($generated@@270 ($generated@@76 $generated@@177 $generated@@2) $generated@@563) ($generated@@182 $generated@@564))))
 :pattern ( ($generated@@244 $generated@@563 ($generated@@182 $generated@@564)))
)))
(assert (forall (($generated@@565 T@U) ($generated@@566 T@U) ) (!  (=> (and (and (= (type $generated@@565) $generated@@177) (= (type $generated@@566) $generated@@64)) ($generated@@244 $generated@@565 ($generated@@493 $generated@@566))) (and (= ($generated@@304 ($generated@@270 ($generated@@298 $generated@@177) $generated@@565)) $generated@@565) ($generated@@164 ($generated@@270 ($generated@@298 $generated@@177) $generated@@565) ($generated@@493 $generated@@566))))
 :pattern ( ($generated@@244 $generated@@565 ($generated@@493 $generated@@566)))
)))
(assert (forall (($generated@@567 T@U) ($generated@@568 T@U) ($generated@@569 T@U) ) (!  (=> (and (and (= (type $generated@@567) ($generated@@76 $generated@@177 $generated@@2)) (= (type $generated@@568) $generated@@64)) (= (type $generated@@569) ($generated@@76 $generated@@77 $generated@@78))) (= ($generated@@74 $generated@@567 ($generated@@182 $generated@@568) $generated@@569) (forall (($generated@@570 T@U) ) (!  (=> (and (= (type $generated@@570) $generated@@177) (< 0 ($generated ($generated@@81 $generated@@567 $generated@@570)))) ($generated@@284 $generated@@570 $generated@@568 $generated@@569))
 :pattern ( ($generated@@81 $generated@@567 $generated@@570))
))))
 :pattern ( ($generated@@74 $generated@@567 ($generated@@182 $generated@@568) $generated@@569))
)))
(assert (forall (($generated@@571 T@U) ($generated@@572 T@U) ($generated@@573 T@U) ) (!  (=> (and (and (and (= (type $generated@@571) $generated@@168) (= (type $generated@@572) $generated@@64)) (= (type $generated@@573) ($generated@@76 $generated@@77 $generated@@78))) (and ($generated@@283 $generated@@573) (and ($generated@@166 $generated@@571) (exists (($generated@@574 T@U) ) (!  (and (= (type $generated@@574) $generated@@64) ($generated@@74 $generated@@571 ($generated@@167 $generated@@572 $generated@@574) $generated@@573))
 :pattern ( ($generated@@74 $generated@@571 ($generated@@167 $generated@@572 $generated@@574) $generated@@573))
))))) ($generated@@284 ($generated@@175 $generated@@571) $generated@@572 $generated@@573))
 :pattern ( ($generated@@284 ($generated@@175 $generated@@571) $generated@@572 $generated@@573))
)))
(assert (forall (($generated@@575 T@U) ($generated@@576 T@U) ($generated@@577 T@U) ) (!  (=> (and (and (and (= (type $generated@@575) $generated@@168) (= (type $generated@@576) $generated@@64)) (= (type $generated@@577) ($generated@@76 $generated@@77 $generated@@78))) (and ($generated@@283 $generated@@577) (and ($generated@@166 $generated@@575) (exists (($generated@@578 T@U) ) (!  (and (= (type $generated@@578) $generated@@64) ($generated@@74 $generated@@575 ($generated@@167 $generated@@578 $generated@@576) $generated@@577))
 :pattern ( ($generated@@74 $generated@@575 ($generated@@167 $generated@@578 $generated@@576) $generated@@577))
))))) ($generated@@284 ($generated@@176 $generated@@575) $generated@@576 $generated@@577))
 :pattern ( ($generated@@284 ($generated@@176 $generated@@575) $generated@@576 $generated@@577))
)))
(assert (forall (($generated@@579 T@U) ($generated@@580 T@U) ) (!  (=> (and (= (type $generated@@579) $generated@@177) (= (type $generated@@580) $generated@@177)) (= ($generated@@243 ($generated@@265 $generated@@579) ($generated@@265 $generated@@580)) ($generated@@265 ($generated@@243 $generated@@579 $generated@@580))))
 :pattern ( ($generated@@243 ($generated@@265 $generated@@579) ($generated@@265 $generated@@580)))
)))
(assert (forall (($generated@@582 Int) ) (! (= (type ($generated@@581 $generated@@582)) ($generated@@76 $generated@@177 $generated@@177))
 :pattern ( ($generated@@581 $generated@@582))
)))
(assert (forall (($generated@@583 Int) ($generated@@584 T@U) ) (!  (=> (= (type $generated@@584) $generated@@177) (= ($generated@@81 ($generated@@581 $generated@@583) $generated@@584) ($generated@@304 ($generated@@8 (+ ($generated ($generated@@270 $generated@@2 $generated@@584)) $generated@@583)))))
 :pattern ( ($generated@@81 ($generated@@581 $generated@@583) $generated@@584))
)))
(assert (forall (($generated@@585 Int) ) (! (= ($generated@@304 ($generated@@8 ($generated@@263 $generated@@585))) ($generated@@265 ($generated@@304 ($generated@@8 $generated@@585))))
 :pattern ( ($generated@@304 ($generated@@8 ($generated@@263 $generated@@585))))
)))
(assert (forall (($generated@@586 T@U) ) (! (= ($generated@@304 ($generated@@265 $generated@@586)) ($generated@@265 ($generated@@304 $generated@@586)))
 :pattern ( ($generated@@304 ($generated@@265 $generated@@586)))
)))
(assert (forall (($generated@@587 T@U) ) (! (let (($generated@@588 ($generated@@299 (type $generated@@587))))
 (=> (and (= (type $generated@@587) ($generated@@298 $generated@@588)) (= ($generated@@297 $generated@@587) 0)) (= $generated@@587 ($generated@@296 $generated@@588))))
 :pattern ( ($generated@@297 $generated@@587))
)))
(assert (forall (($generated@@589 T@U) ($generated@@590 T@U) ($generated@@591 T@U) ) (! (let (($generated@@592 (type $generated@@590)))
 (=> (and (and (= (type $generated@@589) ($generated@@76 $generated@@592 $generated@@2)) (= (type $generated@@591) $generated@@2)) (<= 0 ($generated $generated@@591))) (= ($generated@@309 ($generated@@82 $generated@@589 $generated@@590 $generated@@591)) (+ (- ($generated@@309 $generated@@589) ($generated ($generated@@81 $generated@@589 $generated@@590))) ($generated $generated@@591)))))
 :pattern ( ($generated@@309 ($generated@@82 $generated@@589 $generated@@590 $generated@@591)))
)))
(assert (forall (($generated@@593 T@U) ($generated@@594 T@U) ) (!  (=> (and (= (type $generated@@593) ($generated@@76 $generated@@77 $generated@@78)) (= (type $generated@@594) $generated@@2)) ($generated@@74 $generated@@594 $generated@@46 $generated@@593))
 :pattern ( ($generated@@74 $generated@@594 $generated@@46 $generated@@593))
)))
(assert (forall (($generated@@595 T@U) ($generated@@596 T@U) ) (!  (=> (and (= (type $generated@@595) ($generated@@76 $generated@@77 $generated@@78)) (= (type $generated@@596) $generated@@3)) ($generated@@74 $generated@@596 $generated@@47 $generated@@595))
 :pattern ( ($generated@@74 $generated@@596 $generated@@47 $generated@@595))
)))
(assert (forall (($generated@@597 T@U) ($generated@@598 T@U) ) (!  (=> (and (= (type $generated@@597) ($generated@@76 $generated@@77 $generated@@78)) (= (type $generated@@598) $generated@@4)) ($generated@@74 $generated@@598 $generated@@44 $generated@@597))
 :pattern ( ($generated@@74 $generated@@598 $generated@@44 $generated@@597))
)))
(assert (forall (($generated@@599 T@U) ($generated@@600 T@U) ) (!  (=> (and (= (type $generated@@599) ($generated@@76 $generated@@77 $generated@@78)) (= (type $generated@@600) $generated@@451)) ($generated@@74 $generated@@600 $generated@@45 $generated@@599))
 :pattern ( ($generated@@74 $generated@@600 $generated@@45 $generated@@599))
)))
(assert (forall (($generated@@601 T@U) ($generated@@602 T@U) ) (!  (=> (and (= (type $generated@@601) ($generated@@76 $generated@@77 $generated@@78)) (= (type $generated@@602) $generated@@177)) ($generated@@74 $generated@@602 $generated@@48 $generated@@601))
 :pattern ( ($generated@@74 $generated@@602 $generated@@48 $generated@@601))
)))
(assert (forall (($generated@@603 T@U) ($generated@@604 T@U) ) (!  (=> (and (= (type $generated@@603) ($generated@@298 $generated@@177)) (= (type $generated@@604) $generated@@64)) (= ($generated@@164 $generated@@603 ($generated@@493 $generated@@604)) (forall (($generated@@605 Int) ) (!  (=> (and (<= 0 $generated@@605) (< $generated@@605 ($generated@@297 $generated@@603))) ($generated@@244 ($generated@@494 $generated@@603 $generated@@605) $generated@@604))
 :pattern ( ($generated@@494 $generated@@603 $generated@@605))
))))
 :pattern ( ($generated@@164 $generated@@603 ($generated@@493 $generated@@604)))
)))
(assert (forall (($generated@@608 Int) ) (! (= (type ($generated@@606 $generated@@608)) ($generated@@76 $generated@@177 $generated@@177))
 :pattern ( ($generated@@606 $generated@@608))
)))
(assert (forall (($generated@@609 Int) ($generated@@610 T@U) ) (!  (=> (= (type $generated@@610) $generated@@177) (= ($generated@@81 ($generated@@606 $generated@@609) $generated@@610) ($generated@@304 ($generated@@8 (+ ($generated@@607 ($generated ($generated@@270 $generated@@2 $generated@@610))) $generated@@609)))))
 :pattern ( ($generated@@81 ($generated@@606 $generated@@609) $generated@@610))
)))
(assert (forall (($generated@@612 T@U) ($generated@@613 Int) ) (!  (=> (= (type $generated@@612) ($generated@@298 $generated@@177)) (=> (and (<= 0 $generated@@613) (< $generated@@613 ($generated@@297 $generated@@612))) (< ($generated@@532 ($generated@@270 $generated@@168 ($generated@@494 $generated@@612 $generated@@613))) ($generated@@611 $generated@@612))))
 :pattern ( ($generated@@532 ($generated@@270 $generated@@168 ($generated@@494 $generated@@612 $generated@@613))))
)))
(assert (forall (($generated@@614 T@U) ($generated@@615 T@U) ($generated@@616 T@U) ) (!  (=> (and (and (and (= (type $generated@@614) ($generated@@134 $generated@@177 $generated@@177)) (= (type $generated@@615) $generated@@64)) (= (type $generated@@616) $generated@@64)) ($generated@@164 $generated@@614 ($generated@@411 $generated@@615 $generated@@616))) (and (and ($generated@@164 ($generated@@132 $generated@@614) ($generated@@253 $generated@@615)) ($generated@@164 ($generated@@354 $generated@@614) ($generated@@253 $generated@@616))) ($generated@@164 ($generated@@389 $generated@@614) ($generated@@253 ($generated@@167 $generated@@615 $generated@@616)))))
 :pattern ( ($generated@@164 $generated@@614 ($generated@@411 $generated@@615 $generated@@616)))
)))
(assert (forall (($generated@@617 T@U) ($generated@@618 T@U) ($generated@@619 T@U) ) (!  (=> (and (and (and (= (type $generated@@617) ($generated@@323 $generated@@177 $generated@@177)) (= (type $generated@@618) $generated@@64)) (= (type $generated@@619) $generated@@64)) ($generated@@164 $generated@@617 ($generated@@419 $generated@@618 $generated@@619))) (and (and ($generated@@164 ($generated@@321 $generated@@617) ($generated@@258 $generated@@618)) ($generated@@164 ($generated@@365 $generated@@617) ($generated@@258 $generated@@619))) ($generated@@164 ($generated@@393 $generated@@617) ($generated@@258 ($generated@@167 $generated@@618 $generated@@619)))))
 :pattern ( ($generated@@164 $generated@@617 ($generated@@419 $generated@@618 $generated@@619)))
)))
(assert (forall (($generated@@620 T@U) ) (!  (=> (= (type $generated@@620) $generated@@2) ($generated@@164 $generated@@620 $generated@@46))
 :pattern ( ($generated@@164 $generated@@620 $generated@@46))
)))
(assert (forall (($generated@@621 T@U) ) (!  (=> (= (type $generated@@621) $generated@@3) ($generated@@164 $generated@@621 $generated@@47))
 :pattern ( ($generated@@164 $generated@@621 $generated@@47))
)))
(assert (forall (($generated@@622 T@U) ) (!  (=> (= (type $generated@@622) $generated@@4) ($generated@@164 $generated@@622 $generated@@44))
 :pattern ( ($generated@@164 $generated@@622 $generated@@44))
)))
(assert (forall (($generated@@623 T@U) ) (!  (=> (= (type $generated@@623) $generated@@451) ($generated@@164 $generated@@623 $generated@@45))
 :pattern ( ($generated@@164 $generated@@623 $generated@@45))
)))
(assert (forall (($generated@@624 T@U) ) (!  (=> (= (type $generated@@624) $generated@@177) ($generated@@164 $generated@@624 $generated@@48))
 :pattern ( ($generated@@164 $generated@@624 $generated@@48))
)))
(push 1)
(declare-fun ControlFlow (Int Int) Int)
(declare-fun $generated@@625 () Int)
(declare-fun $generated@@626 () Int)
(declare-fun $generated@@627 () T@U)
(declare-fun $generated@@628 () Int)
(declare-fun $generated@@629 () Int)
(declare-fun $generated@@630 () T@U)
(declare-fun $generated@@631 () Int)
(declare-fun $generated@@632 () T@U)
(declare-fun $generated@@633 () T@U)
(declare-fun $generated@@634 () T@U)
(declare-fun $generated@@635 (T@U) Bool)
(declare-fun $generated@@636 () T@U)
(declare-fun $generated@@637 () Int)
(assert  (and (and (and (and (and (= (type $generated@@627) ($generated@@134 $generated@@177 $generated@@177)) (= (type $generated@@630) ($generated@@134 $generated@@177 $generated@@177))) (= (type $generated@@632) ($generated@@189 $generated@@77 $generated@@4))) (= (type $generated@@633) $generated@@77)) (= (type $generated@@634) ($generated@@76 $generated@@77 $generated@@78))) (= (type $generated@@636) ($generated@@134 $generated@@177 $generated@@177))))
(set-option :timeout 0)
(set-option :rlimit 0)
(assert (not
 (=> (= (ControlFlow 0 0) 33) (let (($generated@@638 true))
(let (($generated@@639  (=> (and (not (and (and (<= ($generated@@263 2) $generated@@625) (< $generated@@625 6)) (and (<= ($generated@@263 2) $generated@@626) (< $generated@@626 6)))) (= (ControlFlow 0 7) 4)) $generated@@638)))
(let (($generated@@640  (=> (and (and (<= ($generated@@263 2) $generated@@625) (< $generated@@625 6)) (and (<= ($generated@@263 2) $generated@@626) (< $generated@@626 6))) (and (=> (= (ControlFlow 0 5) (- 0 6)) (or (not (= (+ $generated@@625 1) (+ $generated@@626 1))) (= ($generated@@263 10) ($generated@@263 10)))) (=> (or (not (= (+ $generated@@625 1) (+ $generated@@626 1))) (= ($generated@@263 10) ($generated@@263 10))) (=> (= (ControlFlow 0 5) 4) $generated@@638))))))
(let (($generated@@641  (=> (not (and (<= ($generated@@263 2) $generated@@625) (< $generated@@625 6))) (and (=> (= (ControlFlow 0 9) 5) $generated@@640) (=> (= (ControlFlow 0 9) 7) $generated@@639)))))
(let (($generated@@642  (=> (and (<= ($generated@@263 2) $generated@@625) (< $generated@@625 6)) (and (=> (= (ControlFlow 0 8) 5) $generated@@640) (=> (= (ControlFlow 0 8) 7) $generated@@639)))))
(let (($generated@@643  (=> (not (and (<= ($generated@@263 2) $generated@@625) (< $generated@@625 6))) (and (=> (= (ControlFlow 0 11) 8) $generated@@642) (=> (= (ControlFlow 0 11) 9) $generated@@641)))))
(let (($generated@@644  (=> (and (<= ($generated@@263 2) $generated@@625) (< $generated@@625 6)) (and (=> (= (ControlFlow 0 10) 8) $generated@@642) (=> (= (ControlFlow 0 10) 9) $generated@@641)))))
(let (($generated@@645  (=> (< $generated@@625 ($generated@@263 2)) (and (=> (= (ControlFlow 0 13) 10) $generated@@644) (=> (= (ControlFlow 0 13) 11) $generated@@643)))))
(let (($generated@@646  (=> (<= ($generated@@263 2) $generated@@625) (and (=> (= (ControlFlow 0 12) 10) $generated@@644) (=> (= (ControlFlow 0 12) 11) $generated@@643)))))
(let (($generated@@647  (and (=> (= (ControlFlow 0 14) 12) $generated@@646) (=> (= (ControlFlow 0 14) 13) $generated@@645))))
(let (($generated@@648 true))
(let (($generated@@649  (=> (and (forall (($generated@@650 Int) )  (=> (and (<= ($generated@@263 2) $generated@@650) (< $generated@@650 6)) (and (and (<= ($generated@@263 2) ($generated@@607 (+ $generated@@650 1))) (< ($generated@@607 (+ $generated@@650 1)) 6)) (= (+ $generated@@650 1) (+ ($generated@@607 (+ $generated@@650 1)) 1))))) (= $generated@@627 ($generated@@133 ($generated@@269 $generated@@46 ($generated@@263 2) 6 1) ($generated@@606 3) ($generated@@411 $generated@@46 $generated@@46)))) (and (=> (= (ControlFlow 0 15) 14) $generated@@647) (=> (= (ControlFlow 0 15) 3) $generated@@648)))))
(let (($generated@@651  (=> (and (not (and (and (<= ($generated@@263 2) $generated@@628) (< $generated@@628 6)) (and (<= ($generated@@263 2) $generated@@629) (< $generated@@629 6)))) (= (ControlFlow 0 18) 15)) $generated@@649)))
(let (($generated@@652  (=> (and (and (<= ($generated@@263 2) $generated@@628) (< $generated@@628 6)) (and (<= ($generated@@263 2) $generated@@629) (< $generated@@629 6))) (and (=> (= (ControlFlow 0 16) (- 0 17)) (or (not (= (+ $generated@@628 1) (+ $generated@@629 1))) (= (+ $generated@@628 3) (+ $generated@@629 3)))) (=> (or (not (= (+ $generated@@628 1) (+ $generated@@629 1))) (= (+ $generated@@628 3) (+ $generated@@629 3))) (=> (= (ControlFlow 0 16) 15) $generated@@649))))))
(let (($generated@@653  (=> (not (and (<= ($generated@@263 2) $generated@@628) (< $generated@@628 6))) (and (=> (= (ControlFlow 0 20) 16) $generated@@652) (=> (= (ControlFlow 0 20) 18) $generated@@651)))))
(let (($generated@@654  (=> (and (<= ($generated@@263 2) $generated@@628) (< $generated@@628 6)) (and (=> (= (ControlFlow 0 19) 16) $generated@@652) (=> (= (ControlFlow 0 19) 18) $generated@@651)))))
(let (($generated@@655  (=> (not (and (<= ($generated@@263 2) $generated@@628) (< $generated@@628 6))) (and (=> (= (ControlFlow 0 22) 19) $generated@@654) (=> (= (ControlFlow 0 22) 20) $generated@@653)))))
(let (($generated@@656  (=> (and (<= ($generated@@263 2) $generated@@628) (< $generated@@628 6)) (and (=> (= (ControlFlow 0 21) 19) $generated@@654) (=> (= (ControlFlow 0 21) 20) $generated@@653)))))
(let (($generated@@657  (=> (< $generated@@628 ($generated@@263 2)) (and (=> (= (ControlFlow 0 24) 21) $generated@@656) (=> (= (ControlFlow 0 24) 22) $generated@@655)))))
(let (($generated@@658  (=> (<= ($generated@@263 2) $generated@@628) (and (=> (= (ControlFlow 0 23) 21) $generated@@656) (=> (= (ControlFlow 0 23) 22) $generated@@655)))))
(let (($generated@@659  (and (=> (= (ControlFlow 0 25) 23) $generated@@658) (=> (= (ControlFlow 0 25) 24) $generated@@657))))
(let (($generated@@660 true))
(let (($generated@@661  (=> (= $generated@@630 ($generated@@133 ($generated@@342 $generated@@46 ($generated@@263 2) 6) ($generated@@581 1) ($generated@@411 $generated@@46 $generated@@46))) (and (=> (= (ControlFlow 0 26) 25) $generated@@659) (=> (= (ControlFlow 0 26) 2) $generated@@660)))))
(let (($generated@@662  (=> (and (not (and (<= ($generated@@263 2) $generated@@631) (< $generated@@631 6))) (= (ControlFlow 0 28) 26)) $generated@@661)))
(let (($generated@@663  (=> (and (and (<= ($generated@@263 2) $generated@@631) (< $generated@@631 6)) (= (ControlFlow 0 27) 26)) $generated@@661)))
(let (($generated@@664  (=> (< $generated@@631 ($generated@@263 2)) (and (=> (= (ControlFlow 0 30) 27) $generated@@663) (=> (= (ControlFlow 0 30) 28) $generated@@662)))))
(let (($generated@@665  (=> (<= ($generated@@263 2) $generated@@631) (and (=> (= (ControlFlow 0 29) 27) $generated@@663) (=> (= (ControlFlow 0 29) 28) $generated@@662)))))
(let (($generated@@666  (and (=> (= (ControlFlow 0 31) 29) $generated@@665) (=> (= (ControlFlow 0 31) 30) $generated@@664))))
(let (($generated@@667 true))
(let (($generated@@668  (=> (= $generated@@632 ($generated@@188 $generated@@633 $generated@@634 $generated@@60 false)) (and (=> (= (ControlFlow 0 32) 31) $generated@@666) (=> (= (ControlFlow 0 32) 1) $generated@@667)))))
(let (($generated@@669  (=> (and ($generated@@283 $generated@@634) ($generated@@635 $generated@@634)) (=> (and (and (and ($generated@@164 $generated@@636 ($generated@@411 $generated@@46 $generated@@46)) ($generated@@74 $generated@@636 ($generated@@411 $generated@@46 $generated@@46) $generated@@634)) true) (and (= 1 $generated@@637) (= (ControlFlow 0 33) 32))) $generated@@668))))
$generated@@669))))))))))))))))))))))))))))))))
))
(check-sat)
(pop 1)
; Valid
(get-info :rlimit)
(reset)
(set-option :rlimit 0)
; did a full reset
(reset)
(set-option :print-success false)
(set-info :smt-lib-version 2.6)
(set-option :auto_config false)
(set-option :type_check true)
(set-option :smt.case_split 3)
(set-option :smt.qi.eager_threshold 100)
(set-option :smt.delay_units true)
(set-option :smt.arith.solver 2)
(set-option :smt.mbqi false)
(set-option :model.compact false)
(set-option :model.v2 true)
(set-option :pp.bv_literals false)
; done setting options


(set-info :category "industrial")
(declare-sort |T@U| 0)
(declare-sort |T@T| 0)
(declare-fun real_pow (Real Real) Real)
(declare-fun UOrdering2 (|T@U| |T@U|) Bool)
(declare-fun UOrdering3 (|T@T| |T@U| |T@U|) Bool)
(declare-fun tickleBool (Bool) Bool)
(assert (and (tickleBool true) (tickleBool false)))
(declare-fun $generated (T@U) Int)
(declare-fun $generated@@0 (T@U) Bool)
(declare-fun $generated@@1 (T@T) Int)
(declare-fun $generated@@2 () T@T)
(declare-fun $generated@@3 () T@T)
(declare-fun $generated@@4 () T@T)
(declare-fun $generated@@5 () T@T)
(declare-fun $generated@@6 () T@T)
(declare-fun $generated@@7 () T@T)
(declare-fun $generated@@8 (Int) T@U)
(declare-fun type (T@U) T@T)
(declare-fun $generated@@9 (Real) T@U)
(declare-fun $generated@@10 (T@U) Real)
(declare-fun $generated@@11 (Bool) T@U)
(declare-fun $generated@@12 (RoundingMode) T@U)
(declare-fun $generated@@13 (T@U) RoundingMode)
(declare-fun $generated@@14 (String) T@U)
(declare-fun $generated@@15 (T@U) String)
(declare-fun $generated@@16 ((RegEx String)) T@U)
(declare-fun $generated@@17 (T@U) (RegEx String))
(declare-fun $generated@@44 (T@U T@U) Bool)
(declare-fun $generated@@45 (T@T T@T) T@T)
(declare-fun $generated@@46 () T@T)
(declare-fun $generated@@47 () T@T)
(declare-fun $generated@@48 (T@U T@U) T@U)
(declare-fun $generated@@49 (T@U T@U) T@U)
(declare-fun $generated@@50 () T@U)
(declare-fun $generated@@51 (T@T) T@T)
(declare-fun $generated@@52 (T@T) T@T)
(declare-fun $generated@@53 (T@U T@U T@U) T@U)
(declare-fun $generated@@54 (T@T) T@T)
(declare-fun $generated@@55 (T@T) T@T)
(declare-fun $generated@@56 (T@U T@U T@U) T@U)
(declare-fun $generated@@106 (T@U T@U T@U) T@U)
(declare-fun $generated@@107 (T@U T@U T@U Bool) T@U)
(declare-fun $generated@@108 (T@T T@T) T@T)
(declare-fun $generated@@109 (T@T) T@T)
(declare-fun $generated@@110 (T@T) T@T)
(declare-fun $generated@@111 (T@U T@U T@U T@U) T@U)
(declare-fun $generated@@162 (Int) Int)
(declare-fun $generated@@164 (T@U) T@U)
(declare-fun $generated@@171 (T@U) T@U)
(declare-fun $generated@@172 (T@T T@U) T@U)
(declare-fun $generated@@173 () T@T)
(assert  (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (= ($generated@@1 $generated@@2) 0) (= ($generated@@1 $generated@@3) 1)) (= ($generated@@1 $generated@@4) 2)) (= ($generated@@1 $generated@@5) 3)) (= ($generated@@1 $generated@@6) 4)) (= ($generated@@1 $generated@@7) 5)) (forall (($generated@@18 Int) ) (! (= ($generated ($generated@@8 $generated@@18)) $generated@@18)
 :pattern ( ($generated@@8 $generated@@18))
))) (forall (($generated@@19 T@U) ) (!  (=> (= (type $generated@@19) $generated@@2) (= ($generated@@8 ($generated $generated@@19)) $generated@@19))
 :pattern ( ($generated $generated@@19))
))) (forall (($generated@@20 Int) ) (! (= (type ($generated@@8 $generated@@20)) $generated@@2)
 :pattern ( ($generated@@8 $generated@@20))
))) (forall (($generated@@21 Real) ) (! (= ($generated@@10 ($generated@@9 $generated@@21)) $generated@@21)
 :pattern ( ($generated@@9 $generated@@21))
))) (forall (($generated@@22 T@U) ) (!  (=> (= (type $generated@@22) $generated@@3) (= ($generated@@9 ($generated@@10 $generated@@22)) $generated@@22))
 :pattern ( ($generated@@10 $generated@@22))
))) (forall (($generated@@23 Real) ) (! (= (type ($generated@@9 $generated@@23)) $generated@@3)
 :pattern ( ($generated@@9 $generated@@23))
))) (forall (($generated@@24 Bool) ) (! (= ($generated@@0 ($generated@@11 $generated@@24)) $generated@@24)
 :pattern ( ($generated@@11 $generated@@24))
))) (forall (($generated@@25 T@U) ) (!  (=> (= (type $generated@@25) $generated@@4) (= ($generated@@11 ($generated@@0 $generated@@25)) $generated@@25))
 :pattern ( ($generated@@0 $generated@@25))
))) (forall (($generated@@26 Bool) ) (! (= (type ($generated@@11 $generated@@26)) $generated@@4)
 :pattern ( ($generated@@11 $generated@@26))
))) (forall (($generated@@27 RoundingMode) ) (! (= ($generated@@13 ($generated@@12 $generated@@27)) $generated@@27)
 :pattern ( ($generated@@12 $generated@@27))
))) (forall (($generated@@28 T@U) ) (!  (=> (= (type $generated@@28) $generated@@5) (= ($generated@@12 ($generated@@13 $generated@@28)) $generated@@28))
 :pattern ( ($generated@@13 $generated@@28))
))) (forall (($generated@@29 RoundingMode) ) (! (= (type ($generated@@12 $generated@@29)) $generated@@5)
 :pattern ( ($generated@@12 $generated@@29))
))) (forall (($generated@@30 String) ) (! (= ($generated@@15 ($generated@@14 $generated@@30)) $generated@@30)
 :pattern ( ($generated@@14 $generated@@30))
))) (forall (($generated@@31 T@U) ) (!  (=> (= (type $generated@@31) $generated@@6) (= ($generated@@14 ($generated@@15 $generated@@31)) $generated@@31))
 :pattern ( ($generated@@15 $generated@@31))
))) (forall (($generated@@32 String) ) (! (= (type ($generated@@14 $generated@@32)) $generated@@6)
 :pattern ( ($generated@@14 $generated@@32))
))) (forall (($generated@@33 (RegEx String)) ) (! (= ($generated@@17 ($generated@@16 $generated@@33)) $generated@@33)
 :pattern ( ($generated@@16 $generated@@33))
))) (forall (($generated@@34 T@U) ) (!  (=> (= (type $generated@@34) $generated@@7) (= ($generated@@16 ($generated@@17 $generated@@34)) $generated@@34))
 :pattern ( ($generated@@17 $generated@@34))
))) (forall (($generated@@35 (RegEx String)) ) (! (= (type ($generated@@16 $generated@@35)) $generated@@7)
 :pattern ( ($generated@@16 $generated@@35))
))))
(assert (forall (($generated@@36 T@U) ) (! (UOrdering2 $generated@@36 $generated@@36)
 :no-pattern ($generated $generated@@36)
 :no-pattern ($generated@@0 $generated@@36)
)))
(assert (forall (($generated@@37 T@U) ($generated@@38 T@U) ($generated@@39 T@U) ) (! (let (($generated@@40 (type $generated@@37)))
 (=> (and (and (= (type $generated@@38) $generated@@40) (= (type $generated@@39) $generated@@40)) (and (UOrdering2 $generated@@37 $generated@@38) (UOrdering2 $generated@@38 $generated@@39))) (UOrdering2 $generated@@37 $generated@@39)))
 :pattern ( (UOrdering2 $generated@@37 $generated@@38) (UOrdering2 $generated@@38 $generated@@39))
)))
(assert (forall (($generated@@41 T@U) ($generated@@42 T@U) ) (! (let (($generated@@43 (type $generated@@41)))
 (=> (= (type $generated@@42) $generated@@43) (=> (and (UOrdering2 $generated@@41 $generated@@42) (UOrdering2 $generated@@42 $generated@@41)) (= $generated@@41 $generated@@42))))
 :pattern ( (UOrdering2 $generated@@41 $generated@@42) (UOrdering2 $generated@@42 $generated@@41))
)))
(assert  (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (forall (($generated@@57 T@T) ($generated@@58 T@T) ) (= ($generated@@1 ($generated@@45 $generated@@57 $generated@@58)) 6)) (forall (($generated@@59 T@T) ($generated@@60 T@T) ) (! (= ($generated@@51 ($generated@@45 $generated@@59 $generated@@60)) $generated@@59)
 :pattern ( ($generated@@45 $generated@@59 $generated@@60))
))) (forall (($generated@@61 T@T) ($generated@@62 T@T) ) (! (= ($generated@@52 ($generated@@45 $generated@@61 $generated@@62)) $generated@@62)
 :pattern ( ($generated@@45 $generated@@61 $generated@@62))
))) (forall (($generated@@63 T@U) ($generated@@64 T@U) ) (! (let (($generated@@65 ($generated@@52 (type $generated@@63))))
(= (type ($generated@@49 $generated@@63 $generated@@64)) $generated@@65))
 :pattern ( ($generated@@49 $generated@@63 $generated@@64))
))) (forall (($generated@@66 T@U) ($generated@@67 T@U) ($generated@@68 T@U) ) (! (let (($generated@@69 (type $generated@@68)))
(let (($generated@@70 (type $generated@@67)))
(= (type ($generated@@53 $generated@@66 $generated@@67 $generated@@68)) ($generated@@45 $generated@@70 $generated@@69))))
 :pattern ( ($generated@@53 $generated@@66 $generated@@67 $generated@@68))
))) (forall (($generated@@71 T@U) ($generated@@72 T@U) ($generated@@73 T@U) ) (! (let (($generated@@74 ($generated@@52 (type $generated@@71))))
 (=> (= (type $generated@@73) $generated@@74) (= ($generated@@49 ($generated@@53 $generated@@71 $generated@@72 $generated@@73) $generated@@72) $generated@@73)))
 :weight 0
))) (and (forall (($generated@@75 T@U) ($generated@@76 T@U) ($generated@@77 T@U) ($generated@@78 T@U) ) (!  (or (= $generated@@77 $generated@@78) (= ($generated@@49 ($generated@@53 $generated@@76 $generated@@77 $generated@@75) $generated@@78) ($generated@@49 $generated@@76 $generated@@78)))
 :weight 0
)) (forall (($generated@@79 T@U) ($generated@@80 T@U) ($generated@@81 T@U) ($generated@@82 T@U) ) (!  (or true (= ($generated@@49 ($generated@@53 $generated@@80 $generated@@81 $generated@@79) $generated@@82) ($generated@@49 $generated@@80 $generated@@82)))
 :weight 0
)))) (= ($generated@@1 $generated@@46) 7)) (forall (($generated@@83 T@T) ) (= ($generated@@1 ($generated@@54 $generated@@83)) 8))) (forall (($generated@@84 T@T) ) (! (= ($generated@@55 ($generated@@54 $generated@@84)) $generated@@84)
 :pattern ( ($generated@@54 $generated@@84))
))) (forall (($generated@@85 T@U) ($generated@@86 T@U) ) (! (let (($generated@@87 ($generated@@55 (type $generated@@86))))
(= (type ($generated@@48 $generated@@85 $generated@@86)) $generated@@87))
 :pattern ( ($generated@@48 $generated@@85 $generated@@86))
))) (= ($generated@@1 $generated@@47) 9)) (forall (($generated@@88 T@U) ($generated@@89 T@U) ($generated@@90 T@U) ) (! (= (type ($generated@@56 $generated@@88 $generated@@89 $generated@@90)) $generated@@47)
 :pattern ( ($generated@@56 $generated@@88 $generated@@89 $generated@@90))
))) (forall (($generated@@91 T@U) ($generated@@92 T@U) ($generated@@93 T@U) ) (! (let (($generated@@94 ($generated@@55 (type $generated@@92))))
 (=> (= (type $generated@@93) $generated@@94) (= ($generated@@48 ($generated@@56 $generated@@91 $generated@@92 $generated@@93) $generated@@92) $generated@@93)))
 :weight 0
))) (and (forall (($generated@@95 T@U) ($generated@@96 T@U) ($generated@@97 T@U) ($generated@@98 T@U) ) (!  (or (= $generated@@97 $generated@@98) (= ($generated@@48 ($generated@@56 $generated@@96 $generated@@97 $generated@@95) $generated@@98) ($generated@@48 $generated@@96 $generated@@98)))
 :weight 0
)) (forall (($generated@@99 T@U) ($generated@@100 T@U) ($generated@@101 T@U) ($generated@@102 T@U) ) (!  (or true (= ($generated@@48 ($generated@@56 $generated@@100 $generated@@101 $generated@@99) $generated@@102) ($generated@@48 $generated@@100 $generated@@102)))
 :weight 0
)))) (= (type $generated@@50) ($generated@@54 $generated@@4))))
(assert (forall (($generated@@103 T@U) ($generated@@104 T@U) ) (!  (=> (and (and (= (type $generated@@103) ($generated@@45 $generated@@46 $generated@@47)) (= (type $generated@@104) ($generated@@45 $generated@@46 $generated@@47))) ($generated@@44 $generated@@103 $generated@@104)) (forall (($generated@@105 T@U) ) (!  (=> (and (= (type $generated@@105) $generated@@46) ($generated@@0 ($generated@@48 ($generated@@49 $generated@@103 $generated@@105) $generated@@50))) ($generated@@0 ($generated@@48 ($generated@@49 $generated@@104 $generated@@105) $generated@@50)))
 :pattern ( ($generated@@48 ($generated@@49 $generated@@104 $generated@@105) $generated@@50))
)))
 :pattern ( ($generated@@44 $generated@@103 $generated@@104))
)))
(assert  (and (and (and (and (and (and (and (forall (($generated@@112 T@T) ($generated@@113 T@T) ) (= ($generated@@1 ($generated@@108 $generated@@112 $generated@@113)) 10)) (forall (($generated@@114 T@T) ($generated@@115 T@T) ) (! (= ($generated@@109 ($generated@@108 $generated@@114 $generated@@115)) $generated@@114)
 :pattern ( ($generated@@108 $generated@@114 $generated@@115))
))) (forall (($generated@@116 T@T) ($generated@@117 T@T) ) (! (= ($generated@@110 ($generated@@108 $generated@@116 $generated@@117)) $generated@@117)
 :pattern ( ($generated@@108 $generated@@116 $generated@@117))
))) (forall (($generated@@118 T@U) ($generated@@119 T@U) ($generated@@120 T@U) ) (! (let (($generated@@121 ($generated@@110 (type $generated@@118))))
(= (type ($generated@@106 $generated@@118 $generated@@119 $generated@@120)) $generated@@121))
 :pattern ( ($generated@@106 $generated@@118 $generated@@119 $generated@@120))
))) (forall (($generated@@122 T@U) ($generated@@123 T@U) ($generated@@124 T@U) ($generated@@125 T@U) ) (! (let (($generated@@126 (type $generated@@125)))
(let (($generated@@127 (type $generated@@123)))
(= (type ($generated@@111 $generated@@122 $generated@@123 $generated@@124 $generated@@125)) ($generated@@108 $generated@@127 $generated@@126))))
 :pattern ( ($generated@@111 $generated@@122 $generated@@123 $generated@@124 $generated@@125))
))) (forall (($generated@@128 T@U) ($generated@@129 T@U) ($generated@@130 T@U) ($generated@@131 T@U) ) (! (let (($generated@@132 ($generated@@110 (type $generated@@128))))
 (=> (= (type $generated@@131) $generated@@132) (= ($generated@@106 ($generated@@111 $generated@@128 $generated@@129 $generated@@130 $generated@@131) $generated@@129 $generated@@130) $generated@@131)))
 :weight 0
))) (and (and (forall (($generated@@133 T@U) ($generated@@134 T@U) ($generated@@135 T@U) ($generated@@136 T@U) ($generated@@137 T@U) ($generated@@138 T@U) ) (!  (or (= $generated@@135 $generated@@137) (= ($generated@@106 ($generated@@111 $generated@@134 $generated@@135 $generated@@136 $generated@@133) $generated@@137 $generated@@138) ($generated@@106 $generated@@134 $generated@@137 $generated@@138)))
 :weight 0
)) (forall (($generated@@139 T@U) ($generated@@140 T@U) ($generated@@141 T@U) ($generated@@142 T@U) ($generated@@143 T@U) ($generated@@144 T@U) ) (!  (or (= $generated@@142 $generated@@144) (= ($generated@@106 ($generated@@111 $generated@@140 $generated@@141 $generated@@142 $generated@@139) $generated@@143 $generated@@144) ($generated@@106 $generated@@140 $generated@@143 $generated@@144)))
 :weight 0
))) (forall (($generated@@145 T@U) ($generated@@146 T@U) ($generated@@147 T@U) ($generated@@148 T@U) ($generated@@149 T@U) ($generated@@150 T@U) ) (!  (or true (= ($generated@@106 ($generated@@111 $generated@@146 $generated@@147 $generated@@148 $generated@@145) $generated@@149 $generated@@150) ($generated@@106 $generated@@146 $generated@@149 $generated@@150)))
 :weight 0
)))) (forall (($generated@@151 T@U) ($generated@@152 T@U) ($generated@@153 T@U) ($generated@@154 Bool) ) (! (= (type ($generated@@107 $generated@@151 $generated@@152 $generated@@153 $generated@@154)) ($generated@@108 $generated@@46 $generated@@4))
 :pattern ( ($generated@@107 $generated@@151 $generated@@152 $generated@@153 $generated@@154))
))))
(assert (forall (($generated@@155 T@U) ($generated@@156 T@U) ($generated@@157 T@U) ($generated@@158 Bool) ($generated@@159 T@U) ($generated@@160 T@U) ) (! (let (($generated@@161 ($generated@@55 (type $generated@@160))))
 (=> (and (and (and (and (= (type $generated@@155) $generated@@46) (= (type $generated@@156) ($generated@@45 $generated@@46 $generated@@47))) (= (type $generated@@157) ($generated@@54 $generated@@4))) (= (type $generated@@159) $generated@@46)) (= (type $generated@@160) ($generated@@54 $generated@@161))) (= ($generated@@0 ($generated@@106 ($generated@@107 $generated@@155 $generated@@156 $generated@@157 $generated@@158) $generated@@159 $generated@@160))  (=> (and (not (= $generated@@159 $generated@@155)) ($generated@@0 ($generated@@48 ($generated@@49 $generated@@156 $generated@@159) $generated@@157))) $generated@@158))))
 :pattern ( ($generated@@106 ($generated@@107 $generated@@155 $generated@@156 $generated@@157 $generated@@158) $generated@@159 $generated@@160))
)))
(assert (forall (($generated@@163 Int) ) (! (= ($generated@@162 $generated@@163) $generated@@163)
 :pattern ( ($generated@@162 $generated@@163))
)))
(assert (forall (($generated@@165 T@U) ) (! (let (($generated@@166 (type $generated@@165)))
(= (type ($generated@@164 $generated@@165)) $generated@@166))
 :pattern ( ($generated@@164 $generated@@165))
)))
(assert (forall (($generated@@167 T@U) ) (! (= ($generated@@164 $generated@@167) $generated@@167)
 :pattern ( ($generated@@164 $generated@@167))
)))
(assert (forall (($generated@@168 T@U) ($generated@@169 T@U) ($generated@@170 T@U) ) (!  (=> (and (and (and (and (= (type $generated@@168) ($generated@@45 $generated@@46 $generated@@47)) (= (type $generated@@169) ($generated@@45 $generated@@46 $generated@@47))) (= (type $generated@@170) ($generated@@45 $generated@@46 $generated@@47))) (not (= $generated@@168 $generated@@170))) (and ($generated@@44 $generated@@168 $generated@@169) ($generated@@44 $generated@@169 $generated@@170))) ($generated@@44 $generated@@168 $generated@@170))
 :pattern ( ($generated@@44 $generated@@168 $generated@@169) ($generated@@44 $generated@@169 $generated@@170))
)))
(assert  (and (and (= ($generated@@1 $generated@@173) 11) (forall (($generated@@174 T@U) ) (! (= (type ($generated@@171 $generated@@174)) $generated@@173)
 :pattern ( ($generated@@171 $generated@@174))
))) (forall (($generated@@175 T@T) ($generated@@176 T@U) ) (! (= (type ($generated@@172 $generated@@175 $generated@@176)) $generated@@175)
 :pattern ( ($generated@@172 $generated@@175 $generated@@176))
))))
(assert (forall (($generated@@177 T@U) ) (! (let (($generated@@178 (type $generated@@177)))
(= ($generated@@172 $generated@@178 ($generated@@171 $generated@@177)) $generated@@177))
 :pattern ( ($generated@@171 $generated@@177))
)))
(assert (forall (($generated@@179 Int) ) (! (= ($generated@@171 ($generated@@8 ($generated@@162 $generated@@179))) ($generated@@164 ($generated@@171 ($generated@@8 $generated@@179))))
 :pattern ( ($generated@@171 ($generated@@8 ($generated@@162 $generated@@179))))
)))
(assert (forall (($generated@@180 T@U) ) (! (= ($generated@@171 ($generated@@164 $generated@@180)) ($generated@@164 ($generated@@171 $generated@@180)))
 :pattern ( ($generated@@171 ($generated@@164 $generated@@180)))
)))
(push 1)
(declare-fun ControlFlow (Int Int) Int)
(declare-fun $generated@@181 () Int)
(declare-fun $generated@@182 () Int)
(declare-fun $generated@@183 () Int)
(declare-fun $generated@@184 () Int)
(declare-fun $generated@@185 () Int)
(declare-fun $generated@@186 () Int)
(declare-fun $generated@@187 () Int)
(declare-fun $generated@@188 () Bool)
(declare-fun $generated@@189 () Int)
(declare-fun $generated@@190 () Int)
(declare-fun $generated@@191 () Int)
(declare-fun $generated@@192 () T@U)
(declare-fun $generated@@193 () T@U)
(declare-fun $generated@@194 () T@U)
(declare-fun $generated@@195 (T@U) Bool)
(declare-fun $generated@@196 (T@U) Bool)
(declare-fun $generated@@197 () Int)
(assert  (and (and (= (type $generated@@192) ($generated@@45 $generated@@46 $generated@@47)) (= (type $generated@@193) $generated@@46)) (= (type $generated@@194) ($generated@@108 $generated@@46 $generated@@4))))
(set-option :timeout 0)
(set-option :rlimit 0)
(assert (not
 (=> (= (ControlFlow 0 0) 18) (let (($generated@@198 true))
(let (($generated@@199  (=> (and (and (<= $generated@@181 0) (not (and (= $generated@@181 ($generated@@162 0)) (< 0 $generated@@182)))) (= (ControlFlow 0 12) 10)) $generated@@198)))
(let (($generated@@200  (=> (and (not ($generated@@0 ($generated@@164 ($generated@@11 true)))) (= (ControlFlow 0 11) 10)) $generated@@198)))
(let (($generated@@201  (and (=> (= (ControlFlow 0 4) (- 0 5)) (or (<= 0 $generated@@183) (= (+ $generated@@184 $generated@@185) $generated@@183))) (=> (or (<= 0 $generated@@183) (= (+ $generated@@184 $generated@@185) $generated@@183)) (=> (= (ControlFlow 0 4) (- 0 3)) (< (+ $generated@@184 $generated@@185) $generated@@183))))))
(let (($generated@@202  (=> (and (= $generated@@181 ($generated@@162 0)) (< 0 $generated@@182)) (=> (and (and (= $generated@@186 (- $generated@@182 1)) (= $generated@@184 $generated@@186)) (and (= $generated@@185 $generated@@181) (= (ControlFlow 0 7) 4))) $generated@@201))))
(let (($generated@@203  (=> (and (not (= $generated@@181 ($generated@@162 0))) (= (ControlFlow 0 9) 7)) $generated@@202)))
(let (($generated@@204  (=> (and (= $generated@@181 ($generated@@162 0)) (= (ControlFlow 0 8) 7)) $generated@@202)))
(let (($generated@@205  (=> (< 0 $generated@@181) (=> (and (and (= $generated@@187 (- $generated@@181 1)) (= $generated@@184 $generated@@182)) (and (= $generated@@185 $generated@@187) (= (ControlFlow 0 6) 4))) $generated@@201))))
(let (($generated@@206  (=> (and ($generated@@0 ($generated@@164 ($generated@@11 true))) (= $generated@@183 (+ $generated@@182 $generated@@181))) (and (and (and (=> (= (ControlFlow 0 13) 6) $generated@@205) (=> (= (ControlFlow 0 13) 12) $generated@@199)) (=> (= (ControlFlow 0 13) 8) $generated@@204)) (=> (= (ControlFlow 0 13) 9) $generated@@203)))))
(let (($generated@@207  (=> $generated@@188 (and (=> (= (ControlFlow 0 14) 11) $generated@@200) (=> (= (ControlFlow 0 14) 13) $generated@@206)))))
(let (($generated@@208 true))
(let (($generated@@209  (and (=> (= (ControlFlow 0 15) 2) $generated@@208) (=> (= (ControlFlow 0 15) 14) $generated@@207))))
(let (($generated@@210 true))
(let (($generated@@211  (=> (and (and (and (and (and (and (and (not false) (and (<= 0 $generated@@182) (< $generated@@182 6))) (and (<= 0 $generated@@181) (< $generated@@181 3))) (= $generated@@189 5)) (= $generated@@190 2)) (= $generated@@191 7)) (forall (($generated@@212 T@U) ) (!  (=> (= (type $generated@@212) $generated@@46) (=> (and (not (= $generated@@212 $generated@@193)) ($generated@@0 ($generated@@48 ($generated@@49 $generated@@192 $generated@@212) $generated@@50))) (= ($generated@@49 $generated@@192 $generated@@212) ($generated@@49 $generated@@192 $generated@@212))))
 :pattern ( ($generated@@49 $generated@@192 $generated@@212))
))) (and (and ($generated@@44 $generated@@192 $generated@@192) (forall (($generated@@213 T@U) ($generated@@214 T@U) ) (! (let (($generated@@215 ($generated@@55 (type $generated@@214))))
 (=> (and (and (= (type $generated@@213) $generated@@46) (= (type $generated@@214) ($generated@@54 $generated@@215))) (and (not (= $generated@@213 $generated@@193)) ($generated@@0 ($generated@@48 ($generated@@49 $generated@@192 $generated@@213) $generated@@50)))) (or (= ($generated@@48 ($generated@@49 $generated@@192 $generated@@213) $generated@@214) ($generated@@48 ($generated@@49 $generated@@192 $generated@@213) $generated@@214)) ($generated@@0 ($generated@@106 $generated@@194 $generated@@213 $generated@@214)))))
 :pattern ( ($generated@@48 ($generated@@49 $generated@@192 $generated@@213) $generated@@214))
))) (and (<= (+ $generated@@182 $generated@@181) $generated@@191) (=> (= (+ $generated@@182 $generated@@181) $generated@@191) true)))) (and (=> (= (ControlFlow 0 16) 1) $generated@@210) (=> (= (ControlFlow 0 16) 15) $generated@@209)))))
(let (($generated@@216  (=> (= $generated@@194 ($generated@@107 $generated@@193 $generated@@192 $generated@@50 false)) (=> (and (and (= $generated@@189 ($generated@@162 5)) (= $generated@@190 ($generated@@162 2))) (and (= $generated@@191 (+ $generated@@189 $generated@@190)) (= (ControlFlow 0 17) 16))) $generated@@211))))
(let (($generated@@217  (=> (and (and ($generated@@195 $generated@@192) ($generated@@196 $generated@@192)) (and (= 1 $generated@@197) (= (ControlFlow 0 18) 17))) $generated@@216)))
$generated@@217)))))))))))))))))
))
(check-sat)
(pop 1)
; Valid
(get-info :rlimit)
(reset)
(set-option :rlimit 0)
; did a full reset
(reset)
(set-option :print-success false)
(set-info :smt-lib-version 2.6)
(set-option :auto_config false)
(set-option :type_check true)
(set-option :smt.case_split 3)
(set-option :smt.qi.eager_threshold 100)
(set-option :smt.delay_units true)
(set-option :smt.arith.solver 2)
(set-option :smt.mbqi false)
(set-option :model.compact false)
(set-option :model.v2 true)
(set-option :pp.bv_literals false)
; done setting options


(set-info :category "industrial")
(declare-sort |T@U| 0)
(declare-sort |T@T| 0)
(declare-fun real_pow (Real Real) Real)
(declare-fun UOrdering2 (|T@U| |T@U|) Bool)
(declare-fun UOrdering3 (|T@T| |T@U| |T@U|) Bool)
(declare-fun tickleBool (Bool) Bool)
(assert (and (tickleBool true) (tickleBool false)))
(declare-fun $generated (T@U) Int)
(declare-fun $generated@@0 (T@U) Bool)
(declare-fun $generated@@1 (T@T) Int)
(declare-fun $generated@@2 () T@T)
(declare-fun $generated@@3 () T@T)
(declare-fun $generated@@4 () T@T)
(declare-fun $generated@@5 () T@T)
(declare-fun $generated@@6 () T@T)
(declare-fun $generated@@7 () T@T)
(declare-fun $generated@@8 (Int) T@U)
(declare-fun type (T@U) T@T)
(declare-fun $generated@@9 (Real) T@U)
(declare-fun $generated@@10 (T@U) Real)
(declare-fun $generated@@11 (Bool) T@U)
(declare-fun $generated@@12 (RoundingMode) T@U)
(declare-fun $generated@@13 (T@U) RoundingMode)
(declare-fun $generated@@14 (String) T@U)
(declare-fun $generated@@15 (T@U) String)
(declare-fun $generated@@16 ((RegEx String)) T@U)
(declare-fun $generated@@17 (T@U) (RegEx String))
(declare-fun $generated@@44 () T@U)
(declare-fun $generated@@45 () T@U)
(declare-fun $generated@@46 () T@U)
(declare-fun $generated@@47 () T@U)
(declare-fun $generated@@48 () T@U)
(declare-fun $generated@@49 () T@U)
(declare-fun $generated@@50 () T@U)
(declare-fun $generated@@51 () T@U)
(declare-fun $generated@@52 () T@U)
(declare-fun $generated@@53 () T@U)
(declare-fun $generated@@54 () T@U)
(declare-fun $generated@@55 () T@U)
(declare-fun $generated@@56 () T@U)
(declare-fun $generated@@57 () T@U)
(declare-fun $generated@@58 () T@U)
(declare-fun $generated@@59 () T@U)
(declare-fun $generated@@60 () T@U)
(declare-fun $generated@@61 () T@U)
(declare-fun $generated@@62 () T@U)
(declare-fun $generated@@63 () T@U)
(declare-fun $generated@@64 () T@U)
(declare-fun $generated@@65 () T@U)
(declare-fun $generated@@66 () T@U)
(declare-fun $generated@@67 () T@U)
(declare-fun $generated@@68 () T@U)
(declare-fun $generated@@69 () T@U)
(declare-fun $generated@@70 () T@T)
(declare-fun $generated@@71 () T@T)
(declare-fun $generated@@72 (T@T) T@T)
(declare-fun $generated@@73 (T@T) T@T)
(declare-fun $generated@@74 () T@T)
(declare-fun $generated@@75 () T@T)
(declare-fun $generated@@76 () T@T)
(declare-fun $generated@@77 () T@T)
(declare-fun $generated@@80 (T@U) Int)
(declare-fun $generated@@81 (T@U) T@U)
(declare-fun $generated@@83 (T@U) T@U)
(declare-fun $generated@@85 (T@U T@U T@U) Bool)
(declare-fun $generated@@86 (Int) T@U)
(declare-fun $generated@@87 (T@T T@T) T@T)
(declare-fun $generated@@88 () T@T)
(declare-fun $generated@@89 () T@T)
(declare-fun $generated@@90 (T@T) T@T)
(declare-fun $generated@@91 (T@T) T@T)
(declare-fun $generated@@92 (T@U T@U) T@U)
(declare-fun $generated@@93 (T@U T@U T@U) T@U)
(declare-fun $generated@@94 (T@U T@U) T@U)
(declare-fun $generated@@95 (T@U T@U T@U) T@U)
(declare-fun $generated@@143 (T@U T@U) Bool)
(declare-fun $generated@@147 () T@U)
(declare-fun $generated@@148 () T@U)
(declare-fun $generated@@151 () T@U)
(declare-fun $generated@@152 (T@U) Bool)
(declare-fun $generated@@153 (T@U) T@U)
(declare-fun $generated@@154 (T@U T@U) Bool)
(declare-fun $generated@@159 (T@U) Bool)
(declare-fun $generated@@160 (T@U T@U) T@U)
(declare-fun $generated@@161 () T@T)
(declare-fun $generated@@167 (T@U T@U) Bool)
(declare-fun $generated@@168 (T@U) T@U)
(declare-fun $generated@@169 (T@U) T@U)
(declare-fun $generated@@170 () T@T)
(declare-fun $generated@@175 (T@U) T@U)
(declare-fun $generated@@176 (T@U) Bool)
(declare-fun $generated@@181 (T@U T@U T@U) T@U)
(declare-fun $generated@@182 (T@U T@U T@U Bool) T@U)
(declare-fun $generated@@183 (T@T T@T) T@T)
(declare-fun $generated@@184 (T@T) T@T)
(declare-fun $generated@@185 (T@T) T@T)
(declare-fun $generated@@186 (T@U T@U T@U T@U) T@U)
(declare-fun $generated@@237 () T@U)
(declare-fun $generated@@240 (T@U T@U) T@U)
(declare-fun $generated@@241 (T@U T@U) Bool)
(declare-fun $generated@@248 (T@T T@U T@U) T@U)
(declare-fun $generated@@252 (T@U) Bool)
(declare-fun $generated@@255 (T@U) T@U)
(declare-fun $generated@@260 (T@U) T@U)
(declare-fun $generated@@265 (T@U) T@U)
(declare-fun $generated@@269 (T@U T@U T@U) Bool)
(declare-fun $generated@@275 (T@U) T@U)
(declare-fun $generated@@281 (T@T) T@U)
(declare-fun $generated@@282 (T@U) Int)
(declare-fun $generated@@283 (T@T) T@T)
(declare-fun $generated@@284 (T@T) T@T)
(declare-fun $generated@@289 (T@U) T@U)
(declare-fun $generated@@304 (T@U) Int)
(declare-fun $generated@@305 (T@T) T@U)
(declare-fun $generated@@310 (T@U) T@U)
(declare-fun $generated@@311 (T@T T@T) T@U)
(declare-fun $generated@@312 (T@T T@T) T@T)
(declare-fun $generated@@313 (T@T) T@T)
(declare-fun $generated@@314 (T@T) T@T)
(declare-fun $generated@@328 (T@U) T@U)
(declare-fun $generated@@329 (T@T T@T) T@U)
(declare-fun $generated@@330 (T@T T@T) T@T)
(declare-fun $generated@@331 (T@T) T@T)
(declare-fun $generated@@332 (T@T) T@T)
(declare-fun $generated@@346 (T@U T@U) Bool)
(declare-fun $generated@@355 (T@T T@U) T@U)
(declare-fun $generated@@365 (T@U) T@U)
(declare-fun $generated@@376 (T@U) T@U)
(declare-fun $generated@@396 (T@U) T@U)
(declare-fun $generated@@397 (T@U) T@U)
(declare-fun $generated@@404 (T@U) T@U)
(declare-fun $generated@@405 (T@U) T@U)
(declare-fun $generated@@422 (T@U T@U) T@U)
(declare-fun $generated@@430 (T@U T@U) T@U)
(declare-fun $generated@@441 (T@T) T@U)
(declare-fun $generated@@462 (T@U) T@U)
(declare-fun $generated@@470 () T@T)
(declare-fun $generated@@478 (T@U) T@U)
(declare-fun $generated@@482 (T@U) T@U)
(declare-fun $generated@@488 (T@U) T@U)
(declare-fun $generated@@492 (T@U) T@U)
(declare-fun $generated@@500 (T@U) T@U)
(declare-fun $generated@@504 (T@U) T@U)
(declare-fun $generated@@512 (T@U) T@U)
(declare-fun $generated@@513 (T@U Int) T@U)
(declare-fun $generated@@522 (T@U) Int)
(declare-fun $generated@@524 (T@U) T@U)
(declare-fun $generated@@528 (T@U) T@U)
(declare-fun $generated@@532 (T@U) T@U)
(declare-fun $generated@@536 (T@U) T@U)
(declare-fun $generated@@550 (T@U) Int)
(declare-fun $generated@@551 (T@U) Int)
(declare-fun $generated@@567 (T@U) T@U)
(declare-fun $generated@@615 (T@U) Int)
(assert  (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (= ($generated@@1 $generated@@2) 0) (= ($generated@@1 $generated@@3) 1)) (= ($generated@@1 $generated@@4) 2)) (= ($generated@@1 $generated@@5) 3)) (= ($generated@@1 $generated@@6) 4)) (= ($generated@@1 $generated@@7) 5)) (forall (($generated@@18 Int) ) (! (= ($generated ($generated@@8 $generated@@18)) $generated@@18)
 :pattern ( ($generated@@8 $generated@@18))
))) (forall (($generated@@19 T@U) ) (!  (=> (= (type $generated@@19) $generated@@2) (= ($generated@@8 ($generated $generated@@19)) $generated@@19))
 :pattern ( ($generated $generated@@19))
))) (forall (($generated@@20 Int) ) (! (= (type ($generated@@8 $generated@@20)) $generated@@2)
 :pattern ( ($generated@@8 $generated@@20))
))) (forall (($generated@@21 Real) ) (! (= ($generated@@10 ($generated@@9 $generated@@21)) $generated@@21)
 :pattern ( ($generated@@9 $generated@@21))
))) (forall (($generated@@22 T@U) ) (!  (=> (= (type $generated@@22) $generated@@3) (= ($generated@@9 ($generated@@10 $generated@@22)) $generated@@22))
 :pattern ( ($generated@@10 $generated@@22))
))) (forall (($generated@@23 Real) ) (! (= (type ($generated@@9 $generated@@23)) $generated@@3)
 :pattern ( ($generated@@9 $generated@@23))
))) (forall (($generated@@24 Bool) ) (! (= ($generated@@0 ($generated@@11 $generated@@24)) $generated@@24)
 :pattern ( ($generated@@11 $generated@@24))
))) (forall (($generated@@25 T@U) ) (!  (=> (= (type $generated@@25) $generated@@4) (= ($generated@@11 ($generated@@0 $generated@@25)) $generated@@25))
 :pattern ( ($generated@@0 $generated@@25))
))) (forall (($generated@@26 Bool) ) (! (= (type ($generated@@11 $generated@@26)) $generated@@4)
 :pattern ( ($generated@@11 $generated@@26))
))) (forall (($generated@@27 RoundingMode) ) (! (= ($generated@@13 ($generated@@12 $generated@@27)) $generated@@27)
 :pattern ( ($generated@@12 $generated@@27))
))) (forall (($generated@@28 T@U) ) (!  (=> (= (type $generated@@28) $generated@@5) (= ($generated@@12 ($generated@@13 $generated@@28)) $generated@@28))
 :pattern ( ($generated@@13 $generated@@28))
))) (forall (($generated@@29 RoundingMode) ) (! (= (type ($generated@@12 $generated@@29)) $generated@@5)
 :pattern ( ($generated@@12 $generated@@29))
))) (forall (($generated@@30 String) ) (! (= ($generated@@15 ($generated@@14 $generated@@30)) $generated@@30)
 :pattern ( ($generated@@14 $generated@@30))
))) (forall (($generated@@31 T@U) ) (!  (=> (= (type $generated@@31) $generated@@6) (= ($generated@@14 ($generated@@15 $generated@@31)) $generated@@31))
 :pattern ( ($generated@@15 $generated@@31))
))) (forall (($generated@@32 String) ) (! (= (type ($generated@@14 $generated@@32)) $generated@@6)
 :pattern ( ($generated@@14 $generated@@32))
))) (forall (($generated@@33 (RegEx String)) ) (! (= ($generated@@17 ($generated@@16 $generated@@33)) $generated@@33)
 :pattern ( ($generated@@16 $generated@@33))
))) (forall (($generated@@34 T@U) ) (!  (=> (= (type $generated@@34) $generated@@7) (= ($generated@@16 ($generated@@17 $generated@@34)) $generated@@34))
 :pattern ( ($generated@@17 $generated@@34))
))) (forall (($generated@@35 (RegEx String)) ) (! (= (type ($generated@@16 $generated@@35)) $generated@@7)
 :pattern ( ($generated@@16 $generated@@35))
))))
(assert (forall (($generated@@36 T@U) ) (! (UOrdering2 $generated@@36 $generated@@36)
 :no-pattern ($generated $generated@@36)
 :no-pattern ($generated@@0 $generated@@36)
)))
(assert (forall (($generated@@37 T@U) ($generated@@38 T@U) ($generated@@39 T@U) ) (! (let (($generated@@40 (type $generated@@37)))
 (=> (and (and (= (type $generated@@38) $generated@@40) (= (type $generated@@39) $generated@@40)) (and (UOrdering2 $generated@@37 $generated@@38) (UOrdering2 $generated@@38 $generated@@39))) (UOrdering2 $generated@@37 $generated@@39)))
 :pattern ( (UOrdering2 $generated@@37 $generated@@38) (UOrdering2 $generated@@38 $generated@@39))
)))
(assert (forall (($generated@@41 T@U) ($generated@@42 T@U) ) (! (let (($generated@@43 (type $generated@@41)))
 (=> (= (type $generated@@42) $generated@@43) (=> (and (UOrdering2 $generated@@41 $generated@@42) (UOrdering2 $generated@@42 $generated@@41)) (= $generated@@41 $generated@@42))))
 :pattern ( (UOrdering2 $generated@@41 $generated@@42) (UOrdering2 $generated@@42 $generated@@41))
)))
(assert  (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (= ($generated@@1 $generated@@70) 6) (= (type $generated@@44) $generated@@70)) (= (type $generated@@45) $generated@@70)) (= (type $generated@@46) $generated@@70)) (= (type $generated@@47) $generated@@70)) (= (type $generated@@48) $generated@@70)) (= ($generated@@1 $generated@@71) 7)) (= (type $generated@@49) $generated@@71)) (= (type $generated@@50) $generated@@71)) (= (type $generated@@51) $generated@@71)) (= (type $generated@@52) $generated@@71)) (= (type $generated@@53) $generated@@71)) (= (type $generated@@54) $generated@@71)) (= (type $generated@@55) $generated@@71)) (= (type $generated@@56) $generated@@71)) (= (type $generated@@57) $generated@@71)) (= (type $generated@@58) $generated@@71)) (= (type $generated@@59) $generated@@71)) (forall (($generated@@78 T@T) ) (= ($generated@@1 ($generated@@72 $generated@@78)) 8))) (forall (($generated@@79 T@T) ) (! (= ($generated@@73 ($generated@@72 $generated@@79)) $generated@@79)
 :pattern ( ($generated@@72 $generated@@79))
))) (= (type $generated@@60) ($generated@@72 $generated@@4))) (= ($generated@@1 $generated@@74) 9)) (= (type $generated@@61) $generated@@74)) (= ($generated@@1 $generated@@75) 10)) (= (type $generated@@62) $generated@@75)) (= (type $generated@@63) $generated@@71)) (= ($generated@@1 $generated@@76) 11)) (= (type $generated@@64) $generated@@76)) (= (type $generated@@65) $generated@@71)) (= (type $generated@@66) $generated@@71)) (= ($generated@@1 $generated@@77) 12)) (= (type $generated@@67) $generated@@77)) (= (type $generated@@68) $generated@@77)) (= (type $generated@@69) $generated@@74)))
(assert (distinct $generated@@44 $generated@@45 $generated@@46 $generated@@47 $generated@@48 $generated@@49 $generated@@50 $generated@@51 $generated@@52 $generated@@53 $generated@@54 $generated@@55 $generated@@56 $generated@@57 $generated@@58 $generated@@59 $generated@@60 $generated@@61 $generated@@62 $generated@@63 $generated@@64 $generated@@65 $generated@@66 $generated@@67 $generated@@68 $generated@@69)
)
(assert (= ($generated@@80 $generated@@60) 0))
(assert (forall (($generated@@82 T@U) ) (! (= (type ($generated@@81 $generated@@82)) $generated@@71)
 :pattern ( ($generated@@81 $generated@@82))
)))
(assert (= ($generated@@81 $generated@@44) $generated@@49))
(assert (= ($generated@@81 $generated@@45) $generated@@50))
(assert (= ($generated@@81 $generated@@46) $generated@@51))
(assert (= ($generated@@81 $generated@@47) $generated@@52))
(assert (= ($generated@@81 $generated@@48) $generated@@53))
(assert (forall (($generated@@84 T@U) ) (! (= (type ($generated@@83 $generated@@84)) $generated@@74)
 :pattern ( ($generated@@83 $generated@@84))
)))
(assert (= ($generated@@83 $generated@@60) $generated@@61))
(assert  (and (and (and (and (and (and (and (and (and (and (and (and (and (forall (($generated@@96 T@T) ($generated@@97 T@T) ) (= ($generated@@1 ($generated@@87 $generated@@96 $generated@@97)) 13)) (forall (($generated@@98 T@T) ($generated@@99 T@T) ) (! (= ($generated@@90 ($generated@@87 $generated@@98 $generated@@99)) $generated@@98)
 :pattern ( ($generated@@87 $generated@@98 $generated@@99))
))) (forall (($generated@@100 T@T) ($generated@@101 T@T) ) (! (= ($generated@@91 ($generated@@87 $generated@@100 $generated@@101)) $generated@@101)
 :pattern ( ($generated@@87 $generated@@100 $generated@@101))
))) (forall (($generated@@102 T@U) ($generated@@103 T@U) ) (! (let (($generated@@104 ($generated@@91 (type $generated@@102))))
(= (type ($generated@@92 $generated@@102 $generated@@103)) $generated@@104))
 :pattern ( ($generated@@92 $generated@@102 $generated@@103))
))) (forall (($generated@@105 T@U) ($generated@@106 T@U) ($generated@@107 T@U) ) (! (let (($generated@@108 (type $generated@@107)))
(let (($generated@@109 (type $generated@@106)))
(= (type ($generated@@93 $generated@@105 $generated@@106 $generated@@107)) ($generated@@87 $generated@@109 $generated@@108))))
 :pattern ( ($generated@@93 $generated@@105 $generated@@106 $generated@@107))
))) (forall (($generated@@110 T@U) ($generated@@111 T@U) ($generated@@112 T@U) ) (! (let (($generated@@113 ($generated@@91 (type $generated@@110))))
 (=> (= (type $generated@@112) $generated@@113) (= ($generated@@92 ($generated@@93 $generated@@110 $generated@@111 $generated@@112) $generated@@111) $generated@@112)))
 :weight 0
))) (and (forall (($generated@@114 T@U) ($generated@@115 T@U) ($generated@@116 T@U) ($generated@@117 T@U) ) (!  (or (= $generated@@116 $generated@@117) (= ($generated@@92 ($generated@@93 $generated@@115 $generated@@116 $generated@@114) $generated@@117) ($generated@@92 $generated@@115 $generated@@117)))
 :weight 0
)) (forall (($generated@@118 T@U) ($generated@@119 T@U) ($generated@@120 T@U) ($generated@@121 T@U) ) (!  (or true (= ($generated@@92 ($generated@@93 $generated@@119 $generated@@120 $generated@@118) $generated@@121) ($generated@@92 $generated@@119 $generated@@121)))
 :weight 0
)))) (= ($generated@@1 $generated@@88) 14)) (forall (($generated@@122 T@U) ($generated@@123 T@U) ) (! (let (($generated@@124 ($generated@@73 (type $generated@@123))))
(= (type ($generated@@94 $generated@@122 $generated@@123)) $generated@@124))
 :pattern ( ($generated@@94 $generated@@122 $generated@@123))
))) (= ($generated@@1 $generated@@89) 15)) (forall (($generated@@125 T@U) ($generated@@126 T@U) ($generated@@127 T@U) ) (! (= (type ($generated@@95 $generated@@125 $generated@@126 $generated@@127)) $generated@@89)
 :pattern ( ($generated@@95 $generated@@125 $generated@@126 $generated@@127))
))) (forall (($generated@@128 T@U) ($generated@@129 T@U) ($generated@@130 T@U) ) (! (let (($generated@@131 ($generated@@73 (type $generated@@129))))
 (=> (= (type $generated@@130) $generated@@131) (= ($generated@@94 ($generated@@95 $generated@@128 $generated@@129 $generated@@130) $generated@@129) $generated@@130)))
 :weight 0
))) (and (forall (($generated@@132 T@U) ($generated@@133 T@U) ($generated@@134 T@U) ($generated@@135 T@U) ) (!  (or (= $generated@@134 $generated@@135) (= ($generated@@94 ($generated@@95 $generated@@133 $generated@@134 $generated@@132) $generated@@135) ($generated@@94 $generated@@133 $generated@@135)))
 :weight 0
)) (forall (($generated@@136 T@U) ($generated@@137 T@U) ($generated@@138 T@U) ($generated@@139 T@U) ) (!  (or true (= ($generated@@94 ($generated@@95 $generated@@137 $generated@@138 $generated@@136) $generated@@139) ($generated@@94 $generated@@137 $generated@@139)))
 :weight 0
)))) (forall (($generated@@140 Int) ) (! (= (type ($generated@@86 $generated@@140)) $generated@@70)
 :pattern ( ($generated@@86 $generated@@140))
))))
(assert (forall (($generated@@141 T@U) ($generated@@142 T@U) ) (!  (=> (and (= (type $generated@@141) $generated@@2) (= (type $generated@@142) ($generated@@87 $generated@@88 $generated@@89))) ($generated@@85 $generated@@141 ($generated@@86 0) $generated@@142))
 :pattern ( ($generated@@85 $generated@@141 ($generated@@86 0) $generated@@142))
)))
(assert (forall (($generated@@144 T@U) ($generated@@145 T@U) ) (!  (=> (and (and (= (type $generated@@144) ($generated@@87 $generated@@88 $generated@@89)) (= (type $generated@@145) ($generated@@87 $generated@@88 $generated@@89))) ($generated@@143 $generated@@144 $generated@@145)) (forall (($generated@@146 T@U) ) (!  (=> (and (= (type $generated@@146) $generated@@88) ($generated@@0 ($generated@@94 ($generated@@92 $generated@@144 $generated@@146) $generated@@60))) ($generated@@0 ($generated@@94 ($generated@@92 $generated@@145 $generated@@146) $generated@@60)))
 :pattern ( ($generated@@94 ($generated@@92 $generated@@145 $generated@@146) $generated@@60))
)))
 :pattern ( ($generated@@143 $generated@@144 $generated@@145))
)))
(assert  (and (= (type $generated@@147) $generated@@70) (= (type $generated@@148) $generated@@88)))
(assert (forall (($generated@@149 T@U) ($generated@@150 T@U) ) (!  (=> (and (= (type $generated@@149) $generated@@88) (= (type $generated@@150) ($generated@@87 $generated@@88 $generated@@89))) (= ($generated@@85 $generated@@149 $generated@@147 $generated@@150)  (or (= $generated@@149 $generated@@148) ($generated@@0 ($generated@@94 ($generated@@92 $generated@@150 $generated@@149) $generated@@60)))))
 :pattern ( ($generated@@85 $generated@@149 $generated@@147 $generated@@150))
)))
(assert  (and (= (type $generated@@151) ($generated@@72 $generated@@4)) (forall (($generated@@155 T@U) ) (! (= (type ($generated@@153 $generated@@155)) $generated@@70)
 :pattern ( ($generated@@153 $generated@@155))
))))
(assert (forall (($generated@@156 T@U) ($generated@@157 T@U) ) (!  (=> (and (and (= (type $generated@@156) ($generated@@87 $generated@@88 $generated@@89)) (= (type $generated@@157) $generated@@88)) (and ($generated@@152 $generated@@156) (and (not (= $generated@@157 $generated@@148)) (= ($generated@@153 $generated@@157) $generated@@147)))) ($generated@@154 ($generated@@94 ($generated@@92 $generated@@156 $generated@@157) $generated@@151) $generated@@44))
 :pattern ( ($generated@@94 ($generated@@92 $generated@@156 $generated@@157) $generated@@151))
)))
(assert (forall (($generated@@158 T@U) ) (!  (=> (= (type $generated@@158) $generated@@2) ($generated@@154 $generated@@158 ($generated@@86 0)))
 :pattern ( ($generated@@154 $generated@@158 ($generated@@86 0)))
)))
(assert  (and (= ($generated@@1 $generated@@161) 16) (forall (($generated@@162 T@U) ($generated@@163 T@U) ) (! (= (type ($generated@@160 $generated@@162 $generated@@163)) $generated@@70)
 :pattern ( ($generated@@160 $generated@@162 $generated@@163))
))))
(assert (forall (($generated@@164 T@U) ($generated@@165 T@U) ($generated@@166 T@U) ) (!  (=> (and (and (and (= (type $generated@@164) $generated@@70) (= (type $generated@@165) $generated@@70)) (= (type $generated@@166) $generated@@161)) ($generated@@154 $generated@@166 ($generated@@160 $generated@@164 $generated@@165))) ($generated@@159 $generated@@166))
 :pattern ( ($generated@@159 $generated@@166) ($generated@@154 $generated@@166 ($generated@@160 $generated@@164 $generated@@165)))
)))
(assert  (and (and (= ($generated@@1 $generated@@170) 17) (forall (($generated@@171 T@U) ) (! (= (type ($generated@@168 $generated@@171)) $generated@@170)
 :pattern ( ($generated@@168 $generated@@171))
))) (forall (($generated@@172 T@U) ) (! (= (type ($generated@@169 $generated@@172)) $generated@@170)
 :pattern ( ($generated@@169 $generated@@172))
))))
(assert (forall (($generated@@173 T@U) ($generated@@174 T@U) ) (!  (=> (and (and (= (type $generated@@173) $generated@@161) (= (type $generated@@174) $generated@@161)) true) (= ($generated@@167 $generated@@173 $generated@@174)  (and (= ($generated@@168 $generated@@173) ($generated@@168 $generated@@174)) (= ($generated@@169 $generated@@173) ($generated@@169 $generated@@174)))))
 :pattern ( ($generated@@167 $generated@@173 $generated@@174))
)))
(assert (forall (($generated@@177 T@U) ) (! (= (type ($generated@@175 $generated@@177)) $generated@@70)
 :pattern ( ($generated@@175 $generated@@177))
)))
(assert (forall (($generated@@178 T@U) ($generated@@179 T@U) ) (!  (=> (and (and (= (type $generated@@178) ($generated@@87 $generated@@170 $generated@@2)) (= (type $generated@@179) $generated@@70)) ($generated@@154 $generated@@178 ($generated@@175 $generated@@179))) ($generated@@176 $generated@@178))
 :pattern ( ($generated@@154 $generated@@178 ($generated@@175 $generated@@179)))
)))
(assert (forall (($generated@@180 T@U) ) (!  (=> (= (type $generated@@180) $generated@@88) (= ($generated@@154 $generated@@180 $generated@@147)  (or (= $generated@@180 $generated@@148) (= ($generated@@153 $generated@@180) $generated@@147))))
 :pattern ( ($generated@@154 $generated@@180 $generated@@147))
)))
(assert  (and (and (and (and (and (and (and (forall (($generated@@187 T@T) ($generated@@188 T@T) ) (= ($generated@@1 ($generated@@183 $generated@@187 $generated@@188)) 18)) (forall (($generated@@189 T@T) ($generated@@190 T@T) ) (! (= ($generated@@184 ($generated@@183 $generated@@189 $generated@@190)) $generated@@189)
 :pattern ( ($generated@@183 $generated@@189 $generated@@190))
))) (forall (($generated@@191 T@T) ($generated@@192 T@T) ) (! (= ($generated@@185 ($generated@@183 $generated@@191 $generated@@192)) $generated@@192)
 :pattern ( ($generated@@183 $generated@@191 $generated@@192))
))) (forall (($generated@@193 T@U) ($generated@@194 T@U) ($generated@@195 T@U) ) (! (let (($generated@@196 ($generated@@185 (type $generated@@193))))
(= (type ($generated@@181 $generated@@193 $generated@@194 $generated@@195)) $generated@@196))
 :pattern ( ($generated@@181 $generated@@193 $generated@@194 $generated@@195))
))) (forall (($generated@@197 T@U) ($generated@@198 T@U) ($generated@@199 T@U) ($generated@@200 T@U) ) (! (let (($generated@@201 (type $generated@@200)))
(let (($generated@@202 (type $generated@@198)))
(= (type ($generated@@186 $generated@@197 $generated@@198 $generated@@199 $generated@@200)) ($generated@@183 $generated@@202 $generated@@201))))
 :pattern ( ($generated@@186 $generated@@197 $generated@@198 $generated@@199 $generated@@200))
))) (forall (($generated@@203 T@U) ($generated@@204 T@U) ($generated@@205 T@U) ($generated@@206 T@U) ) (! (let (($generated@@207 ($generated@@185 (type $generated@@203))))
 (=> (= (type $generated@@206) $generated@@207) (= ($generated@@181 ($generated@@186 $generated@@203 $generated@@204 $generated@@205 $generated@@206) $generated@@204 $generated@@205) $generated@@206)))
 :weight 0
))) (and (and (forall (($generated@@208 T@U) ($generated@@209 T@U) ($generated@@210 T@U) ($generated@@211 T@U) ($generated@@212 T@U) ($generated@@213 T@U) ) (!  (or (= $generated@@210 $generated@@212) (= ($generated@@181 ($generated@@186 $generated@@209 $generated@@210 $generated@@211 $generated@@208) $generated@@212 $generated@@213) ($generated@@181 $generated@@209 $generated@@212 $generated@@213)))
 :weight 0
)) (forall (($generated@@214 T@U) ($generated@@215 T@U) ($generated@@216 T@U) ($generated@@217 T@U) ($generated@@218 T@U) ($generated@@219 T@U) ) (!  (or (= $generated@@217 $generated@@219) (= ($generated@@181 ($generated@@186 $generated@@215 $generated@@216 $generated@@217 $generated@@214) $generated@@218 $generated@@219) ($generated@@181 $generated@@215 $generated@@218 $generated@@219)))
 :weight 0
))) (forall (($generated@@220 T@U) ($generated@@221 T@U) ($generated@@222 T@U) ($generated@@223 T@U) ($generated@@224 T@U) ($generated@@225 T@U) ) (!  (or true (= ($generated@@181 ($generated@@186 $generated@@221 $generated@@222 $generated@@223 $generated@@220) $generated@@224 $generated@@225) ($generated@@181 $generated@@221 $generated@@224 $generated@@225)))
 :weight 0
)))) (forall (($generated@@226 T@U) ($generated@@227 T@U) ($generated@@228 T@U) ($generated@@229 Bool) ) (! (= (type ($generated@@182 $generated@@226 $generated@@227 $generated@@228 $generated@@229)) ($generated@@183 $generated@@88 $generated@@4))
 :pattern ( ($generated@@182 $generated@@226 $generated@@227 $generated@@228 $generated@@229))
))))
(assert (forall (($generated@@230 T@U) ($generated@@231 T@U) ($generated@@232 T@U) ($generated@@233 Bool) ($generated@@234 T@U) ($generated@@235 T@U) ) (! (let (($generated@@236 ($generated@@73 (type $generated@@235))))
 (=> (and (and (and (and (= (type $generated@@230) $generated@@88) (= (type $generated@@231) ($generated@@87 $generated@@88 $generated@@89))) (= (type $generated@@232) ($generated@@72 $generated@@4))) (= (type $generated@@234) $generated@@88)) (= (type $generated@@235) ($generated@@72 $generated@@236))) (= ($generated@@0 ($generated@@181 ($generated@@182 $generated@@230 $generated@@231 $generated@@232 $generated@@233) $generated@@234 $generated@@235))  (=> (and (not (= $generated@@234 $generated@@230)) ($generated@@0 ($generated@@94 ($generated@@92 $generated@@231 $generated@@234) $generated@@232))) $generated@@233))))
 :pattern ( ($generated@@181 ($generated@@182 $generated@@230 $generated@@231 $generated@@232 $generated@@233) $generated@@234 $generated@@235))
)))
(assert (= (type $generated@@237) $generated@@70))
(assert (forall (($generated@@238 T@U) ($generated@@239 T@U) ) (!  (=> (and (= (type $generated@@238) $generated@@88) (= (type $generated@@239) ($generated@@87 $generated@@88 $generated@@89))) (= ($generated@@85 $generated@@238 $generated@@237 $generated@@239) ($generated@@85 $generated@@238 $generated@@147 $generated@@239)))
 :pattern ( ($generated@@85 $generated@@238 $generated@@237 $generated@@239))
)))
(assert (forall (($generated@@242 T@U) ($generated@@243 T@U) ) (! (= (type ($generated@@240 $generated@@242 $generated@@243)) $generated@@161)
 :pattern ( ($generated@@240 $generated@@242 $generated@@243))
)))
(assert (forall (($generated@@244 T@U) ($generated@@245 T@U) ($generated@@246 T@U) ($generated@@247 T@U) ) (!  (=> (and (and (and (= (type $generated@@244) $generated@@70) (= (type $generated@@245) $generated@@70)) (= (type $generated@@246) $generated@@170)) (= (type $generated@@247) $generated@@170)) (= ($generated@@154 ($generated@@240 $generated@@246 $generated@@247) ($generated@@160 $generated@@244 $generated@@245))  (and ($generated@@241 $generated@@246 $generated@@244) ($generated@@241 $generated@@247 $generated@@245))))
 :pattern ( ($generated@@154 ($generated@@240 $generated@@246 $generated@@247) ($generated@@160 $generated@@244 $generated@@245)))
)))
(assert (= ($generated@@80 $generated@@151) 0))
(assert (forall (($generated@@249 T@T) ($generated@@250 T@U) ($generated@@251 T@U) ) (! (= (type ($generated@@248 $generated@@249 $generated@@250 $generated@@251)) ($generated@@72 $generated@@249))
 :pattern ( ($generated@@248 $generated@@249 $generated@@250 $generated@@251))
)))
(assert (= ($generated@@248 $generated@@4 $generated@@64 $generated@@69) $generated@@151))
(assert  (not ($generated@@252 $generated@@151)))
(assert (forall (($generated@@253 T@U) ($generated@@254 T@U) ) (!  (=> (and (= (type $generated@@253) $generated@@161) (= (type $generated@@254) $generated@@161)) (= ($generated@@167 $generated@@253 $generated@@254) (= $generated@@253 $generated@@254)))
 :pattern ( ($generated@@167 $generated@@253 $generated@@254))
)))
(assert (forall (($generated@@256 T@U) ) (! (= (type ($generated@@255 $generated@@256)) $generated@@70)
 :pattern ( ($generated@@255 $generated@@256))
)))
(assert (forall (($generated@@257 T@U) ($generated@@258 T@U) ) (!  (=> (and (= (type $generated@@257) ($generated@@87 $generated@@170 $generated@@4)) (= (type $generated@@258) $generated@@70)) (= ($generated@@154 $generated@@257 ($generated@@255 $generated@@258)) (forall (($generated@@259 T@U) ) (!  (=> (and (= (type $generated@@259) $generated@@170) ($generated@@0 ($generated@@92 $generated@@257 $generated@@259))) ($generated@@241 $generated@@259 $generated@@258))
 :pattern ( ($generated@@92 $generated@@257 $generated@@259))
))))
 :pattern ( ($generated@@154 $generated@@257 ($generated@@255 $generated@@258)))
)))
(assert (forall (($generated@@261 T@U) ) (! (= (type ($generated@@260 $generated@@261)) $generated@@70)
 :pattern ( ($generated@@260 $generated@@261))
)))
(assert (forall (($generated@@262 T@U) ($generated@@263 T@U) ) (!  (=> (and (= (type $generated@@262) ($generated@@87 $generated@@170 $generated@@4)) (= (type $generated@@263) $generated@@70)) (= ($generated@@154 $generated@@262 ($generated@@260 $generated@@263)) (forall (($generated@@264 T@U) ) (!  (=> (and (= (type $generated@@264) $generated@@170) ($generated@@0 ($generated@@92 $generated@@262 $generated@@264))) ($generated@@241 $generated@@264 $generated@@263))
 :pattern ( ($generated@@92 $generated@@262 $generated@@264))
))))
 :pattern ( ($generated@@154 $generated@@262 ($generated@@260 $generated@@263)))
)))
(assert (forall (($generated@@266 T@U) ) (! (let (($generated@@267 (type $generated@@266)))
(= (type ($generated@@265 $generated@@266)) $generated@@267))
 :pattern ( ($generated@@265 $generated@@266))
)))
(assert (forall (($generated@@268 T@U) ) (! (= ($generated@@265 $generated@@268) $generated@@268)
 :pattern ( ($generated@@265 $generated@@268))
)))
(assert (forall (($generated@@270 T@U) ($generated@@271 T@U) ($generated@@272 T@U) ($generated@@273 T@U) ($generated@@274 T@U) ) (!  (=> (and (and (and (and (and (= (type $generated@@270) $generated@@70) (= (type $generated@@271) $generated@@70)) (= (type $generated@@272) $generated@@170)) (= (type $generated@@273) $generated@@170)) (= (type $generated@@274) ($generated@@87 $generated@@88 $generated@@89))) ($generated@@152 $generated@@274)) (= ($generated@@85 ($generated@@240 $generated@@272 $generated@@273) ($generated@@160 $generated@@270 $generated@@271) $generated@@274)  (and ($generated@@269 $generated@@272 $generated@@270 $generated@@274) ($generated@@269 $generated@@273 $generated@@271 $generated@@274))))
 :pattern ( ($generated@@85 ($generated@@240 $generated@@272 $generated@@273) ($generated@@160 $generated@@270 $generated@@271) $generated@@274))
)))
(assert (forall (($generated@@276 T@U) ) (! (= (type ($generated@@275 $generated@@276)) $generated@@75)
 :pattern ( ($generated@@275 $generated@@276))
)))
(assert (forall (($generated@@277 T@U) ) (!  (=> (= (type $generated@@277) $generated@@161) (= ($generated@@159 $generated@@277) (= ($generated@@275 $generated@@277) $generated@@62)))
 :pattern ( ($generated@@159 $generated@@277))
)))
(assert (forall (($generated@@278 T@U) ) (!  (=> (and (= (type $generated@@278) $generated@@161) ($generated@@159 $generated@@278)) (exists (($generated@@279 T@U) ($generated@@280 T@U) ) (!  (and (and (= (type $generated@@279) $generated@@170) (= (type $generated@@280) $generated@@170)) (= $generated@@278 ($generated@@240 $generated@@279 $generated@@280)))
 :no-pattern (type $generated@@279)
 :no-pattern (type $generated@@280)
 :no-pattern ($generated $generated@@279)
 :no-pattern ($generated@@0 $generated@@279)
 :no-pattern ($generated $generated@@280)
 :no-pattern ($generated@@0 $generated@@280)
)))
 :pattern ( ($generated@@159 $generated@@278))
)))
(assert  (and (and (forall (($generated@@285 T@T) ) (= ($generated@@1 ($generated@@283 $generated@@285)) 19)) (forall (($generated@@286 T@T) ) (! (= ($generated@@284 ($generated@@283 $generated@@286)) $generated@@286)
 :pattern ( ($generated@@283 $generated@@286))
))) (forall (($generated@@287 T@T) ) (! (= (type ($generated@@281 $generated@@287)) ($generated@@283 $generated@@287))
 :pattern ( ($generated@@281 $generated@@287))
))))
(assert (forall (($generated@@288 T@T) ) (! (= ($generated@@282 ($generated@@281 $generated@@288)) 0)
 :pattern ( ($generated@@281 $generated@@288))
)))
(assert ($generated@@252 $generated@@60))
(assert (forall (($generated@@290 T@U) ) (! (= (type ($generated@@289 $generated@@290)) $generated@@170)
 :pattern ( ($generated@@289 $generated@@290))
)))
(assert (forall (($generated@@291 T@U) ($generated@@292 T@U) ($generated@@293 T@U) ) (!  (=> (and (= (type $generated@@292) $generated@@70) (= (type $generated@@293) ($generated@@87 $generated@@88 $generated@@89))) (= ($generated@@269 ($generated@@289 $generated@@291) $generated@@292 $generated@@293) ($generated@@85 $generated@@291 $generated@@292 $generated@@293)))
 :pattern ( ($generated@@269 ($generated@@289 $generated@@291) $generated@@292 $generated@@293))
)))
(assert (forall (($generated@@294 T@U) ($generated@@295 T@U) ($generated@@296 T@U) ($generated@@297 T@U) ) (!  (=> (and (and (and (and (and (= (type $generated@@294) ($generated@@87 $generated@@88 $generated@@89)) (= (type $generated@@295) ($generated@@87 $generated@@88 $generated@@89))) (= (type $generated@@296) $generated@@170)) (= (type $generated@@297) $generated@@70)) ($generated@@143 $generated@@294 $generated@@295)) ($generated@@269 $generated@@296 $generated@@297 $generated@@294)) ($generated@@269 $generated@@296 $generated@@297 $generated@@295))
 :pattern ( ($generated@@143 $generated@@294 $generated@@295) ($generated@@269 $generated@@296 $generated@@297 $generated@@294))
)))
(assert (forall (($generated@@298 T@U) ($generated@@299 T@U) ($generated@@300 T@U) ($generated@@301 T@U) ) (!  (=> (and (and (and (and (= (type $generated@@298) ($generated@@87 $generated@@88 $generated@@89)) (= (type $generated@@299) ($generated@@87 $generated@@88 $generated@@89))) (= (type $generated@@301) $generated@@70)) ($generated@@143 $generated@@298 $generated@@299)) ($generated@@85 $generated@@300 $generated@@301 $generated@@298)) ($generated@@85 $generated@@300 $generated@@301 $generated@@299))
 :pattern ( ($generated@@143 $generated@@298 $generated@@299) ($generated@@85 $generated@@300 $generated@@301 $generated@@298))
)))
(assert (forall (($generated@@302 T@U) ($generated@@303 T@U) ) (!  (=> (and (= (type $generated@@302) ($generated@@87 $generated@@88 $generated@@89)) (= (type $generated@@303) $generated@@88)) (=> (and (and ($generated@@152 $generated@@302) (and (not (= $generated@@303 $generated@@148)) (= ($generated@@153 $generated@@303) $generated@@147))) ($generated@@0 ($generated@@94 ($generated@@92 $generated@@302 $generated@@303) $generated@@60))) ($generated@@85 ($generated@@94 ($generated@@92 $generated@@302 $generated@@303) $generated@@151) $generated@@44 $generated@@302)))
 :pattern ( ($generated@@94 ($generated@@92 $generated@@302 $generated@@303) $generated@@151))
)))
(assert (forall (($generated@@306 T@T) ) (! (= (type ($generated@@305 $generated@@306)) ($generated@@87 $generated@@306 $generated@@2))
 :pattern ( ($generated@@305 $generated@@306))
)))
(assert (forall (($generated@@307 T@U) ) (! (let (($generated@@308 ($generated@@90 (type $generated@@307))))
 (=> (= (type $generated@@307) ($generated@@87 $generated@@308 $generated@@2)) (and (= (= ($generated@@304 $generated@@307) 0) (= $generated@@307 ($generated@@305 $generated@@308))) (=> (not (= ($generated@@304 $generated@@307) 0)) (exists (($generated@@309 T@U) ) (!  (and (= (type $generated@@309) $generated@@308) (< 0 ($generated ($generated@@92 $generated@@307 $generated@@309))))
 :no-pattern (type $generated@@309)
 :no-pattern ($generated $generated@@309)
 :no-pattern ($generated@@0 $generated@@309)
))))))
 :pattern ( ($generated@@304 $generated@@307))
)))
(assert  (and (and (and (and (forall (($generated@@315 T@T) ($generated@@316 T@T) ) (= ($generated@@1 ($generated@@312 $generated@@315 $generated@@316)) 20)) (forall (($generated@@317 T@T) ($generated@@318 T@T) ) (! (= ($generated@@313 ($generated@@312 $generated@@317 $generated@@318)) $generated@@317)
 :pattern ( ($generated@@312 $generated@@317 $generated@@318))
))) (forall (($generated@@319 T@T) ($generated@@320 T@T) ) (! (= ($generated@@314 ($generated@@312 $generated@@319 $generated@@320)) $generated@@320)
 :pattern ( ($generated@@312 $generated@@319 $generated@@320))
))) (forall (($generated@@321 T@U) ) (! (let (($generated@@322 ($generated@@313 (type $generated@@321))))
(= (type ($generated@@310 $generated@@321)) ($generated@@87 $generated@@322 $generated@@4)))
 :pattern ( ($generated@@310 $generated@@321))
))) (forall (($generated@@323 T@T) ($generated@@324 T@T) ) (! (= (type ($generated@@311 $generated@@323 $generated@@324)) ($generated@@312 $generated@@323 $generated@@324))
 :pattern ( ($generated@@311 $generated@@323 $generated@@324))
))))
(assert (forall (($generated@@325 T@U) ($generated@@326 T@T) ) (! (let (($generated@@327 (type $generated@@325)))
 (not ($generated@@0 ($generated@@92 ($generated@@310 ($generated@@311 $generated@@327 $generated@@326)) $generated@@325))))
 :pattern ( (let (($generated@@327 (type $generated@@325)))
($generated@@92 ($generated@@310 ($generated@@311 $generated@@327 $generated@@326)) $generated@@325)))
)))
(assert  (and (and (and (and (forall (($generated@@333 T@T) ($generated@@334 T@T) ) (= ($generated@@1 ($generated@@330 $generated@@333 $generated@@334)) 21)) (forall (($generated@@335 T@T) ($generated@@336 T@T) ) (! (= ($generated@@331 ($generated@@330 $generated@@335 $generated@@336)) $generated@@335)
 :pattern ( ($generated@@330 $generated@@335 $generated@@336))
))) (forall (($generated@@337 T@T) ($generated@@338 T@T) ) (! (= ($generated@@332 ($generated@@330 $generated@@337 $generated@@338)) $generated@@338)
 :pattern ( ($generated@@330 $generated@@337 $generated@@338))
))) (forall (($generated@@339 T@U) ) (! (let (($generated@@340 ($generated@@331 (type $generated@@339))))
(= (type ($generated@@328 $generated@@339)) ($generated@@87 $generated@@340 $generated@@4)))
 :pattern ( ($generated@@328 $generated@@339))
))) (forall (($generated@@341 T@T) ($generated@@342 T@T) ) (! (= (type ($generated@@329 $generated@@341 $generated@@342)) ($generated@@330 $generated@@341 $generated@@342))
 :pattern ( ($generated@@329 $generated@@341 $generated@@342))
))))
(assert (forall (($generated@@343 T@U) ($generated@@344 T@T) ) (! (let (($generated@@345 (type $generated@@343)))
 (not ($generated@@0 ($generated@@92 ($generated@@328 ($generated@@329 $generated@@345 $generated@@344)) $generated@@343))))
 :pattern ( (let (($generated@@345 (type $generated@@343)))
($generated@@92 ($generated@@328 ($generated@@329 $generated@@345 $generated@@344)) $generated@@343)))
)))
(assert (forall (($generated@@347 T@U) ($generated@@348 T@U) ) (!  (=> (and (and (= (type $generated@@347) ($generated@@87 $generated@@88 $generated@@89)) (= (type $generated@@348) ($generated@@87 $generated@@88 $generated@@89))) ($generated@@346 $generated@@347 $generated@@348)) (and ($generated@@143 $generated@@347 $generated@@348) (forall (($generated@@349 T@U) ($generated@@350 T@U) ) (! (let (($generated@@351 ($generated@@73 (type $generated@@350))))
 (=> (and (and (= (type $generated@@349) $generated@@88) (= (type $generated@@350) ($generated@@72 $generated@@351))) (not ($generated@@252 $generated@@350))) (= ($generated@@94 ($generated@@92 $generated@@347 $generated@@349) $generated@@350) ($generated@@94 ($generated@@92 $generated@@348 $generated@@349) $generated@@350))))
 :pattern ( ($generated@@94 ($generated@@92 $generated@@348 $generated@@349) $generated@@350))
))))
 :pattern ( ($generated@@346 $generated@@347 $generated@@348))
)))
(assert (forall (($generated@@352 T@U) ) (! (let (($generated@@353 ($generated@@90 (type $generated@@352))))
 (=> (= (type $generated@@352) ($generated@@87 $generated@@353 $generated@@2)) (= ($generated@@176 $generated@@352) (forall (($generated@@354 T@U) ) (!  (=> (= (type $generated@@354) $generated@@353) (and (<= 0 ($generated ($generated@@92 $generated@@352 $generated@@354))) (<= ($generated ($generated@@92 $generated@@352 $generated@@354)) ($generated@@304 $generated@@352))))
 :pattern ( ($generated@@92 $generated@@352 $generated@@354))
)))))
 :pattern ( ($generated@@176 $generated@@352))
)))
(assert (forall (($generated@@356 T@T) ($generated@@357 T@U) ) (! (= (type ($generated@@355 $generated@@356 $generated@@357)) $generated@@356)
 :pattern ( ($generated@@355 $generated@@356 $generated@@357))
)))
(assert (forall (($generated@@358 T@U) ) (!  (=> (and (= (type $generated@@358) $generated@@170) ($generated@@241 $generated@@358 $generated@@147)) (and (= ($generated@@289 ($generated@@355 $generated@@88 $generated@@358)) $generated@@358) ($generated@@154 ($generated@@355 $generated@@88 $generated@@358) $generated@@147)))
 :pattern ( ($generated@@241 $generated@@358 $generated@@147))
)))
(assert (forall (($generated@@359 T@U) ) (!  (=> (and (= (type $generated@@359) $generated@@170) ($generated@@241 $generated@@359 $generated@@237)) (and (= ($generated@@289 ($generated@@355 $generated@@88 $generated@@359)) $generated@@359) ($generated@@154 ($generated@@355 $generated@@88 $generated@@359) $generated@@237)))
 :pattern ( ($generated@@241 $generated@@359 $generated@@237))
)))
(assert (forall (($generated@@360 T@U) ) (!  (=> (= (type $generated@@360) $generated@@88) (= ($generated@@154 $generated@@360 $generated@@237)  (and ($generated@@154 $generated@@360 $generated@@147) (not (= $generated@@360 $generated@@148)))))
 :pattern ( ($generated@@154 $generated@@360 $generated@@237))
)))
(assert (forall (($generated@@361 T@U) ) (! (let (($generated@@362 ($generated@@314 (type $generated@@361))))
(let (($generated@@363 ($generated@@313 (type $generated@@361))))
 (=> (= (type $generated@@361) ($generated@@312 $generated@@363 $generated@@362)) (or (= $generated@@361 ($generated@@311 $generated@@363 $generated@@362)) (exists (($generated@@364 T@U) ) (!  (and (= (type $generated@@364) $generated@@363) ($generated@@0 ($generated@@92 ($generated@@310 $generated@@361) $generated@@364)))
 :no-pattern (type $generated@@364)
 :no-pattern ($generated $generated@@364)
 :no-pattern ($generated@@0 $generated@@364)
))))))
 :pattern ( ($generated@@310 $generated@@361))
)))
(assert (forall (($generated@@366 T@U) ) (! (let (($generated@@367 ($generated@@314 (type $generated@@366))))
(= (type ($generated@@365 $generated@@366)) ($generated@@87 $generated@@367 $generated@@4)))
 :pattern ( ($generated@@365 $generated@@366))
)))
(assert (forall (($generated@@368 T@U) ) (! (let (($generated@@369 ($generated@@314 (type $generated@@368))))
(let (($generated@@370 ($generated@@313 (type $generated@@368))))
 (=> (= (type $generated@@368) ($generated@@312 $generated@@370 $generated@@369)) (or (= $generated@@368 ($generated@@311 $generated@@370 $generated@@369)) (exists (($generated@@371 T@U) ) (!  (and (= (type $generated@@371) $generated@@369) ($generated@@0 ($generated@@92 ($generated@@365 $generated@@368) $generated@@371)))
 :no-pattern (type $generated@@371)
 :no-pattern ($generated $generated@@371)
 :no-pattern ($generated@@0 $generated@@371)
))))))
 :pattern ( ($generated@@365 $generated@@368))
)))
(assert (forall (($generated@@372 T@U) ) (! (let (($generated@@373 ($generated@@332 (type $generated@@372))))
(let (($generated@@374 ($generated@@331 (type $generated@@372))))
 (=> (= (type $generated@@372) ($generated@@330 $generated@@374 $generated@@373)) (or (= $generated@@372 ($generated@@329 $generated@@374 $generated@@373)) (exists (($generated@@375 T@U) ) (!  (and (= (type $generated@@375) $generated@@374) ($generated@@0 ($generated@@92 ($generated@@328 $generated@@372) $generated@@375)))
 :no-pattern (type $generated@@375)
 :no-pattern ($generated $generated@@375)
 :no-pattern ($generated@@0 $generated@@375)
))))))
 :pattern ( ($generated@@328 $generated@@372))
)))
(assert (forall (($generated@@377 T@U) ) (! (let (($generated@@378 ($generated@@332 (type $generated@@377))))
(= (type ($generated@@376 $generated@@377)) ($generated@@87 $generated@@378 $generated@@4)))
 :pattern ( ($generated@@376 $generated@@377))
)))
(assert (forall (($generated@@379 T@U) ) (! (let (($generated@@380 ($generated@@332 (type $generated@@379))))
(let (($generated@@381 ($generated@@331 (type $generated@@379))))
 (=> (= (type $generated@@379) ($generated@@330 $generated@@381 $generated@@380)) (or (= $generated@@379 ($generated@@329 $generated@@381 $generated@@380)) (exists (($generated@@382 T@U) ) (!  (and (= (type $generated@@382) $generated@@380) ($generated@@0 ($generated@@92 ($generated@@376 $generated@@379) $generated@@382)))
 :no-pattern (type $generated@@382)
 :no-pattern ($generated $generated@@382)
 :no-pattern ($generated@@0 $generated@@382)
))))))
 :pattern ( ($generated@@376 $generated@@379))
)))
(assert (forall (($generated@@383 T@U) ($generated@@384 T@U) ) (!  (=> (and (= (type $generated@@383) ($generated@@87 $generated@@170 $generated@@2)) (= (type $generated@@384) $generated@@70)) (= ($generated@@154 $generated@@383 ($generated@@175 $generated@@384)) (forall (($generated@@385 T@U) ) (!  (=> (and (= (type $generated@@385) $generated@@170) (< 0 ($generated ($generated@@92 $generated@@383 $generated@@385)))) ($generated@@241 $generated@@385 $generated@@384))
 :pattern ( ($generated@@92 $generated@@383 $generated@@385))
))))
 :pattern ( ($generated@@154 $generated@@383 ($generated@@175 $generated@@384)))
)))
(assert (forall (($generated@@386 T@U) ($generated@@387 T@U) ($generated@@388 T@U) ) (!  (=> (and (and (= (type $generated@@386) ($generated@@87 $generated@@170 $generated@@4)) (= (type $generated@@387) $generated@@70)) (= (type $generated@@388) ($generated@@87 $generated@@88 $generated@@89))) (= ($generated@@85 $generated@@386 ($generated@@255 $generated@@387) $generated@@388) (forall (($generated@@389 T@U) ) (!  (=> (and (= (type $generated@@389) $generated@@170) ($generated@@0 ($generated@@92 $generated@@386 $generated@@389))) ($generated@@269 $generated@@389 $generated@@387 $generated@@388))
 :pattern ( ($generated@@92 $generated@@386 $generated@@389))
))))
 :pattern ( ($generated@@85 $generated@@386 ($generated@@255 $generated@@387) $generated@@388))
)))
(assert (forall (($generated@@390 T@U) ($generated@@391 T@U) ($generated@@392 T@U) ) (!  (=> (and (and (= (type $generated@@390) ($generated@@87 $generated@@170 $generated@@4)) (= (type $generated@@391) $generated@@70)) (= (type $generated@@392) ($generated@@87 $generated@@88 $generated@@89))) (= ($generated@@85 $generated@@390 ($generated@@260 $generated@@391) $generated@@392) (forall (($generated@@393 T@U) ) (!  (=> (and (= (type $generated@@393) $generated@@170) ($generated@@0 ($generated@@92 $generated@@390 $generated@@393))) ($generated@@269 $generated@@393 $generated@@391 $generated@@392))
 :pattern ( ($generated@@92 $generated@@390 $generated@@393))
))))
 :pattern ( ($generated@@85 $generated@@390 ($generated@@260 $generated@@391) $generated@@392))
)))
(assert (forall (($generated@@394 T@U) ) (! (let (($generated@@395 (type $generated@@394)))
(= ($generated ($generated@@92 ($generated@@305 $generated@@395) $generated@@394)) 0))
 :pattern ( (let (($generated@@395 (type $generated@@394)))
($generated@@92 ($generated@@305 $generated@@395) $generated@@394)))
)))
(assert  (and (forall (($generated@@398 T@U) ) (! (= (type ($generated@@396 $generated@@398)) ($generated@@87 $generated@@170 $generated@@4))
 :pattern ( ($generated@@396 $generated@@398))
)) (forall (($generated@@399 T@U) ) (! (let (($generated@@400 ($generated@@314 (type $generated@@399))))
(let (($generated@@401 ($generated@@313 (type $generated@@399))))
(= (type ($generated@@397 $generated@@399)) ($generated@@87 $generated@@401 $generated@@400))))
 :pattern ( ($generated@@397 $generated@@399))
))))
(assert (forall (($generated@@402 T@U) ($generated@@403 T@U) ) (!  (=> (and (= (type $generated@@402) ($generated@@312 $generated@@170 $generated@@170)) (= (type $generated@@403) $generated@@170)) (= ($generated@@0 ($generated@@92 ($generated@@396 $generated@@402) $generated@@403))  (and ($generated@@0 ($generated@@92 ($generated@@310 $generated@@402) ($generated@@168 ($generated@@355 $generated@@161 $generated@@403)))) (= ($generated@@92 ($generated@@397 $generated@@402) ($generated@@168 ($generated@@355 $generated@@161 $generated@@403))) ($generated@@169 ($generated@@355 $generated@@161 $generated@@403))))))
 :pattern ( ($generated@@92 ($generated@@396 $generated@@402) $generated@@403))
)))
(assert  (and (forall (($generated@@406 T@U) ) (! (= (type ($generated@@404 $generated@@406)) ($generated@@87 $generated@@170 $generated@@4))
 :pattern ( ($generated@@404 $generated@@406))
)) (forall (($generated@@407 T@U) ) (! (let (($generated@@408 ($generated@@332 (type $generated@@407))))
(let (($generated@@409 ($generated@@331 (type $generated@@407))))
(= (type ($generated@@405 $generated@@407)) ($generated@@87 $generated@@409 $generated@@408))))
 :pattern ( ($generated@@405 $generated@@407))
))))
(assert (forall (($generated@@410 T@U) ($generated@@411 T@U) ) (!  (=> (and (= (type $generated@@410) ($generated@@330 $generated@@170 $generated@@170)) (= (type $generated@@411) $generated@@170)) (= ($generated@@0 ($generated@@92 ($generated@@404 $generated@@410) $generated@@411))  (and ($generated@@0 ($generated@@92 ($generated@@328 $generated@@410) ($generated@@168 ($generated@@355 $generated@@161 $generated@@411)))) (= ($generated@@92 ($generated@@405 $generated@@410) ($generated@@168 ($generated@@355 $generated@@161 $generated@@411))) ($generated@@169 ($generated@@355 $generated@@161 $generated@@411))))))
 :pattern ( ($generated@@92 ($generated@@404 $generated@@410) $generated@@411))
)))
(assert (forall (($generated@@412 T@U) ($generated@@413 T@U) ) (! (let (($generated@@414 (type $generated@@413)))
(let (($generated@@415 ($generated@@313 (type $generated@@412))))
 (=> (= (type $generated@@412) ($generated@@312 $generated@@415 $generated@@414)) (= ($generated@@0 ($generated@@92 ($generated@@365 $generated@@412) $generated@@413)) (exists (($generated@@416 T@U) ) (!  (and (= (type $generated@@416) $generated@@415) (and ($generated@@0 ($generated@@92 ($generated@@310 $generated@@412) $generated@@416)) (= $generated@@413 ($generated@@92 ($generated@@397 $generated@@412) $generated@@416))))
 :pattern ( ($generated@@92 ($generated@@310 $generated@@412) $generated@@416))
 :pattern ( ($generated@@92 ($generated@@397 $generated@@412) $generated@@416))
))))))
 :pattern ( ($generated@@92 ($generated@@365 $generated@@412) $generated@@413))
)))
(assert (forall (($generated@@417 T@U) ($generated@@418 T@U) ) (! (let (($generated@@419 (type $generated@@418)))
(let (($generated@@420 ($generated@@331 (type $generated@@417))))
 (=> (= (type $generated@@417) ($generated@@330 $generated@@420 $generated@@419)) (= ($generated@@0 ($generated@@92 ($generated@@376 $generated@@417) $generated@@418)) (exists (($generated@@421 T@U) ) (!  (and (= (type $generated@@421) $generated@@420) (and ($generated@@0 ($generated@@92 ($generated@@328 $generated@@417) $generated@@421)) (= $generated@@418 ($generated@@92 ($generated@@405 $generated@@417) $generated@@421))))
 :pattern ( ($generated@@92 ($generated@@328 $generated@@417) $generated@@421))
 :pattern ( ($generated@@92 ($generated@@405 $generated@@417) $generated@@421))
))))))
 :pattern ( ($generated@@92 ($generated@@376 $generated@@417) $generated@@418))
)))
(assert (forall (($generated@@423 T@U) ($generated@@424 T@U) ) (! (= (type ($generated@@422 $generated@@423 $generated@@424)) $generated@@70)
 :pattern ( ($generated@@422 $generated@@423 $generated@@424))
)))
(assert (forall (($generated@@425 T@U) ($generated@@426 T@U) ($generated@@427 T@U) ($generated@@428 T@U) ) (!  (=> (and (and (and (= (type $generated@@425) ($generated@@312 $generated@@170 $generated@@170)) (= (type $generated@@426) $generated@@70)) (= (type $generated@@427) $generated@@70)) (= (type $generated@@428) ($generated@@87 $generated@@88 $generated@@89))) (= ($generated@@85 $generated@@425 ($generated@@422 $generated@@426 $generated@@427) $generated@@428) (forall (($generated@@429 T@U) ) (!  (=> (and (= (type $generated@@429) $generated@@170) ($generated@@0 ($generated@@92 ($generated@@310 $generated@@425) $generated@@429))) (and ($generated@@269 ($generated@@92 ($generated@@397 $generated@@425) $generated@@429) $generated@@427 $generated@@428) ($generated@@269 $generated@@429 $generated@@426 $generated@@428)))
 :pattern ( ($generated@@92 ($generated@@397 $generated@@425) $generated@@429))
 :pattern ( ($generated@@92 ($generated@@310 $generated@@425) $generated@@429))
))))
 :pattern ( ($generated@@85 $generated@@425 ($generated@@422 $generated@@426 $generated@@427) $generated@@428))
)))
(assert (forall (($generated@@431 T@U) ($generated@@432 T@U) ) (! (= (type ($generated@@430 $generated@@431 $generated@@432)) $generated@@70)
 :pattern ( ($generated@@430 $generated@@431 $generated@@432))
)))
(assert (forall (($generated@@433 T@U) ($generated@@434 T@U) ($generated@@435 T@U) ($generated@@436 T@U) ) (!  (=> (and (and (and (= (type $generated@@433) ($generated@@330 $generated@@170 $generated@@170)) (= (type $generated@@434) $generated@@70)) (= (type $generated@@435) $generated@@70)) (= (type $generated@@436) ($generated@@87 $generated@@88 $generated@@89))) (= ($generated@@85 $generated@@433 ($generated@@430 $generated@@434 $generated@@435) $generated@@436) (forall (($generated@@437 T@U) ) (!  (=> (and (= (type $generated@@437) $generated@@170) ($generated@@0 ($generated@@92 ($generated@@328 $generated@@433) $generated@@437))) (and ($generated@@269 ($generated@@92 ($generated@@405 $generated@@433) $generated@@437) $generated@@435 $generated@@436) ($generated@@269 $generated@@437 $generated@@434 $generated@@436)))
 :pattern ( ($generated@@92 ($generated@@405 $generated@@433) $generated@@437))
 :pattern ( ($generated@@92 ($generated@@328 $generated@@433) $generated@@437))
))))
 :pattern ( ($generated@@85 $generated@@433 ($generated@@430 $generated@@434 $generated@@435) $generated@@436))
)))
(assert (forall (($generated@@438 T@U) ($generated@@439 T@U) ($generated@@440 T@U) ) (!  (=> (and (and (and (and (= (type $generated@@438) ($generated@@87 $generated@@88 $generated@@89)) (= (type $generated@@439) ($generated@@87 $generated@@88 $generated@@89))) (= (type $generated@@440) ($generated@@87 $generated@@88 $generated@@89))) (not (= $generated@@438 $generated@@440))) (and ($generated@@143 $generated@@438 $generated@@439) ($generated@@143 $generated@@439 $generated@@440))) ($generated@@143 $generated@@438 $generated@@440))
 :pattern ( ($generated@@143 $generated@@438 $generated@@439) ($generated@@143 $generated@@439 $generated@@440))
)))
(assert (forall (($generated@@442 T@T) ) (! (= (type ($generated@@441 $generated@@442)) ($generated@@87 $generated@@442 $generated@@4))
 :pattern ( ($generated@@441 $generated@@442))
)))
(assert (forall (($generated@@443 T@U) ) (! (let (($generated@@444 ($generated@@332 (type $generated@@443))))
(let (($generated@@445 ($generated@@331 (type $generated@@443))))
 (=> (= (type $generated@@443) ($generated@@330 $generated@@445 $generated@@444)) (= (= $generated@@443 ($generated@@329 $generated@@445 $generated@@444)) (= ($generated@@328 $generated@@443) ($generated@@441 $generated@@445))))))
 :pattern ( ($generated@@328 $generated@@443))
)))
(assert (forall (($generated@@446 T@U) ) (! (let (($generated@@447 ($generated@@332 (type $generated@@446))))
(let (($generated@@448 ($generated@@331 (type $generated@@446))))
 (=> (= (type $generated@@446) ($generated@@330 $generated@@448 $generated@@447)) (= (= $generated@@446 ($generated@@329 $generated@@448 $generated@@447)) (= ($generated@@376 $generated@@446) ($generated@@441 $generated@@447))))))
 :pattern ( ($generated@@376 $generated@@446))
)))
(assert (forall (($generated@@449 T@U) ) (! (let (($generated@@450 ($generated@@332 (type $generated@@449))))
(let (($generated@@451 ($generated@@331 (type $generated@@449))))
 (=> (= (type $generated@@449) ($generated@@330 $generated@@451 $generated@@450)) (= (= $generated@@449 ($generated@@329 $generated@@451 $generated@@450)) (= ($generated@@404 $generated@@449) ($generated@@441 $generated@@170))))))
 :pattern ( ($generated@@404 $generated@@449))
)))
(assert (forall (($generated@@452 T@U) ) (! (let (($generated@@453 ($generated@@314 (type $generated@@452))))
(let (($generated@@454 ($generated@@313 (type $generated@@452))))
 (=> (= (type $generated@@452) ($generated@@312 $generated@@454 $generated@@453)) (or (= $generated@@452 ($generated@@311 $generated@@454 $generated@@453)) (exists (($generated@@455 T@U) ($generated@@456 T@U) ) (!  (and (and (= (type $generated@@455) $generated@@170) (= (type $generated@@456) $generated@@170)) ($generated@@0 ($generated@@92 ($generated@@396 $generated@@452) ($generated@@289 ($generated@@240 $generated@@455 $generated@@456)))))
 :no-pattern (type $generated@@455)
 :no-pattern (type $generated@@456)
 :no-pattern ($generated $generated@@455)
 :no-pattern ($generated@@0 $generated@@455)
 :no-pattern ($generated $generated@@456)
 :no-pattern ($generated@@0 $generated@@456)
))))))
 :pattern ( ($generated@@396 $generated@@452))
)))
(assert (forall (($generated@@457 T@U) ) (! (let (($generated@@458 ($generated@@332 (type $generated@@457))))
(let (($generated@@459 ($generated@@331 (type $generated@@457))))
 (=> (= (type $generated@@457) ($generated@@330 $generated@@459 $generated@@458)) (or (= $generated@@457 ($generated@@329 $generated@@459 $generated@@458)) (exists (($generated@@460 T@U) ($generated@@461 T@U) ) (!  (and (and (= (type $generated@@460) $generated@@170) (= (type $generated@@461) $generated@@170)) ($generated@@0 ($generated@@92 ($generated@@404 $generated@@457) ($generated@@289 ($generated@@240 $generated@@460 $generated@@461)))))
 :no-pattern (type $generated@@460)
 :no-pattern (type $generated@@461)
 :no-pattern ($generated $generated@@460)
 :no-pattern ($generated@@0 $generated@@460)
 :no-pattern ($generated $generated@@461)
 :no-pattern ($generated@@0 $generated@@461)
))))))
 :pattern ( ($generated@@404 $generated@@457))
)))
(assert (forall (($generated@@463 T@U) ) (! (= (type ($generated@@462 $generated@@463)) $generated@@76)
 :pattern ( ($generated@@462 $generated@@463))
)))
(assert (forall (($generated@@464 T@U) ($generated@@465 T@U) ($generated@@466 T@T) ) (!  (=> (and (= (type $generated@@464) $generated@@76) (= (type $generated@@465) $generated@@74)) (and (= ($generated@@462 ($generated@@248 $generated@@466 $generated@@464 $generated@@465)) $generated@@464) (= ($generated@@83 ($generated@@248 $generated@@466 $generated@@464 $generated@@465)) $generated@@465)))
 :pattern ( ($generated@@248 $generated@@466 $generated@@464 $generated@@465))
)))
(assert (forall (($generated@@467 T@U) ) (!  (=> (and (= (type $generated@@467) $generated@@170) ($generated@@241 $generated@@467 $generated@@46)) (and (= ($generated@@289 ($generated@@355 $generated@@2 $generated@@467)) $generated@@467) ($generated@@154 ($generated@@355 $generated@@2 $generated@@467) $generated@@46)))
 :pattern ( ($generated@@241 $generated@@467 $generated@@46))
)))
(assert (forall (($generated@@468 T@U) ) (!  (=> (and (= (type $generated@@468) $generated@@170) ($generated@@241 $generated@@468 $generated@@47)) (and (= ($generated@@289 ($generated@@355 $generated@@3 $generated@@468)) $generated@@468) ($generated@@154 ($generated@@355 $generated@@3 $generated@@468) $generated@@47)))
 :pattern ( ($generated@@241 $generated@@468 $generated@@47))
)))
(assert (forall (($generated@@469 T@U) ) (!  (=> (and (= (type $generated@@469) $generated@@170) ($generated@@241 $generated@@469 $generated@@44)) (and (= ($generated@@289 ($generated@@355 $generated@@4 $generated@@469)) $generated@@469) ($generated@@154 ($generated@@355 $generated@@4 $generated@@469) $generated@@44)))
 :pattern ( ($generated@@241 $generated@@469 $generated@@44))
)))
(assert (= ($generated@@1 $generated@@470) 22))
(assert (forall (($generated@@471 T@U) ) (!  (=> (and (= (type $generated@@471) $generated@@170) ($generated@@241 $generated@@471 $generated@@45)) (and (= ($generated@@289 ($generated@@355 $generated@@470 $generated@@471)) $generated@@471) ($generated@@154 ($generated@@355 $generated@@470 $generated@@471) $generated@@45)))
 :pattern ( ($generated@@241 $generated@@471 $generated@@45))
)))
(assert (forall (($generated@@472 T@U) ($generated@@473 T@U) ) (!  (=> (= (type $generated@@473) $generated@@70) (= ($generated@@241 ($generated@@289 $generated@@472) $generated@@473) ($generated@@154 $generated@@472 $generated@@473)))
 :pattern ( ($generated@@241 ($generated@@289 $generated@@472) $generated@@473))
)))
(assert (forall (($generated@@474 T@U) ) (! (let (($generated@@475 ($generated@@90 (type $generated@@474))))
 (=> (= (type $generated@@474) ($generated@@87 $generated@@475 $generated@@2)) (<= 0 ($generated@@304 $generated@@474))))
 :pattern ( ($generated@@304 $generated@@474))
)))
(assert (forall (($generated@@476 T@U) ) (! (let (($generated@@477 ($generated@@284 (type $generated@@476))))
 (=> (= (type $generated@@476) ($generated@@283 $generated@@477)) (<= 0 ($generated@@282 $generated@@476))))
 :pattern ( ($generated@@282 $generated@@476))
)))
(assert (forall (($generated@@479 T@U) ) (! (= (type ($generated@@478 $generated@@479)) $generated@@70)
 :pattern ( ($generated@@478 $generated@@479))
)))
(assert (forall (($generated@@480 T@U) ($generated@@481 T@U) ) (!  (=> (and (= (type $generated@@480) $generated@@70) (= (type $generated@@481) $generated@@70)) (= ($generated@@478 ($generated@@422 $generated@@480 $generated@@481)) $generated@@480))
 :pattern ( ($generated@@422 $generated@@480 $generated@@481))
)))
(assert (forall (($generated@@483 T@U) ) (! (= (type ($generated@@482 $generated@@483)) $generated@@70)
 :pattern ( ($generated@@482 $generated@@483))
)))
(assert (forall (($generated@@484 T@U) ($generated@@485 T@U) ) (!  (=> (and (= (type $generated@@484) $generated@@70) (= (type $generated@@485) $generated@@70)) (= ($generated@@482 ($generated@@422 $generated@@484 $generated@@485)) $generated@@485))
 :pattern ( ($generated@@422 $generated@@484 $generated@@485))
)))
(assert (forall (($generated@@486 T@U) ($generated@@487 T@U) ) (!  (=> (and (= (type $generated@@486) $generated@@70) (= (type $generated@@487) $generated@@70)) (= ($generated@@81 ($generated@@422 $generated@@486 $generated@@487)) $generated@@58))
 :pattern ( ($generated@@422 $generated@@486 $generated@@487))
)))
(assert (forall (($generated@@489 T@U) ) (! (= (type ($generated@@488 $generated@@489)) $generated@@70)
 :pattern ( ($generated@@488 $generated@@489))
)))
(assert (forall (($generated@@490 T@U) ($generated@@491 T@U) ) (!  (=> (and (= (type $generated@@490) $generated@@70) (= (type $generated@@491) $generated@@70)) (= ($generated@@488 ($generated@@430 $generated@@490 $generated@@491)) $generated@@490))
 :pattern ( ($generated@@430 $generated@@490 $generated@@491))
)))
(assert (forall (($generated@@493 T@U) ) (! (= (type ($generated@@492 $generated@@493)) $generated@@70)
 :pattern ( ($generated@@492 $generated@@493))
)))
(assert (forall (($generated@@494 T@U) ($generated@@495 T@U) ) (!  (=> (and (= (type $generated@@494) $generated@@70) (= (type $generated@@495) $generated@@70)) (= ($generated@@492 ($generated@@430 $generated@@494 $generated@@495)) $generated@@495))
 :pattern ( ($generated@@430 $generated@@494 $generated@@495))
)))
(assert (forall (($generated@@496 T@U) ($generated@@497 T@U) ) (!  (=> (and (= (type $generated@@496) $generated@@70) (= (type $generated@@497) $generated@@70)) (= ($generated@@81 ($generated@@430 $generated@@496 $generated@@497)) $generated@@59))
 :pattern ( ($generated@@430 $generated@@496 $generated@@497))
)))
(assert (forall (($generated@@498 T@U) ($generated@@499 T@U) ) (!  (=> (and (= (type $generated@@498) $generated@@170) (= (type $generated@@499) $generated@@170)) (= ($generated@@275 ($generated@@240 $generated@@498 $generated@@499)) $generated@@62))
 :pattern ( ($generated@@240 $generated@@498 $generated@@499))
)))
(assert (forall (($generated@@501 T@U) ) (! (= (type ($generated@@500 $generated@@501)) $generated@@70)
 :pattern ( ($generated@@500 $generated@@501))
)))
(assert (forall (($generated@@502 T@U) ($generated@@503 T@U) ) (!  (=> (and (= (type $generated@@502) $generated@@70) (= (type $generated@@503) $generated@@70)) (= ($generated@@500 ($generated@@160 $generated@@502 $generated@@503)) $generated@@502))
 :pattern ( ($generated@@160 $generated@@502 $generated@@503))
)))
(assert (forall (($generated@@505 T@U) ) (! (= (type ($generated@@504 $generated@@505)) $generated@@70)
 :pattern ( ($generated@@504 $generated@@505))
)))
(assert (forall (($generated@@506 T@U) ($generated@@507 T@U) ) (!  (=> (and (= (type $generated@@506) $generated@@70) (= (type $generated@@507) $generated@@70)) (= ($generated@@504 ($generated@@160 $generated@@506 $generated@@507)) $generated@@507))
 :pattern ( ($generated@@160 $generated@@506 $generated@@507))
)))
(assert (forall (($generated@@508 T@U) ($generated@@509 T@U) ) (!  (=> (and (= (type $generated@@508) $generated@@170) (= (type $generated@@509) $generated@@170)) (= ($generated@@168 ($generated@@240 $generated@@508 $generated@@509)) $generated@@508))
 :pattern ( ($generated@@240 $generated@@508 $generated@@509))
)))
(assert (forall (($generated@@510 T@U) ($generated@@511 T@U) ) (!  (=> (and (= (type $generated@@510) $generated@@170) (= (type $generated@@511) $generated@@170)) (= ($generated@@169 ($generated@@240 $generated@@510 $generated@@511)) $generated@@511))
 :pattern ( ($generated@@240 $generated@@510 $generated@@511))
)))
(assert  (and (forall (($generated@@514 T@U) ) (! (= (type ($generated@@512 $generated@@514)) $generated@@70)
 :pattern ( ($generated@@512 $generated@@514))
)) (forall (($generated@@515 T@U) ($generated@@516 Int) ) (! (let (($generated@@517 ($generated@@284 (type $generated@@515))))
(= (type ($generated@@513 $generated@@515 $generated@@516)) $generated@@517))
 :pattern ( ($generated@@513 $generated@@515 $generated@@516))
))))
(assert (forall (($generated@@518 T@U) ($generated@@519 T@U) ($generated@@520 T@U) ) (!  (=> (and (and (= (type $generated@@518) ($generated@@283 $generated@@170)) (= (type $generated@@519) $generated@@70)) (= (type $generated@@520) ($generated@@87 $generated@@88 $generated@@89))) (= ($generated@@85 $generated@@518 ($generated@@512 $generated@@519) $generated@@520) (forall (($generated@@521 Int) ) (!  (=> (and (<= 0 $generated@@521) (< $generated@@521 ($generated@@282 $generated@@518))) ($generated@@269 ($generated@@513 $generated@@518 $generated@@521) $generated@@519 $generated@@520))
 :pattern ( ($generated@@513 $generated@@518 $generated@@521))
))))
 :pattern ( ($generated@@85 $generated@@518 ($generated@@512 $generated@@519) $generated@@520))
)))
(assert (forall (($generated@@523 Int) ) (! (= ($generated@@522 ($generated@@86 $generated@@523)) $generated@@523)
 :pattern ( ($generated@@86 $generated@@523))
)))
(assert (forall (($generated@@525 T@U) ) (! (= (type ($generated@@524 $generated@@525)) $generated@@70)
 :pattern ( ($generated@@524 $generated@@525))
)))
(assert (forall (($generated@@526 T@U) ) (!  (=> (= (type $generated@@526) $generated@@70) (= ($generated@@524 ($generated@@255 $generated@@526)) $generated@@526))
 :pattern ( ($generated@@255 $generated@@526))
)))
(assert (forall (($generated@@527 T@U) ) (!  (=> (= (type $generated@@527) $generated@@70) (= ($generated@@81 ($generated@@255 $generated@@527)) $generated@@54))
 :pattern ( ($generated@@255 $generated@@527))
)))
(assert (forall (($generated@@529 T@U) ) (! (= (type ($generated@@528 $generated@@529)) $generated@@70)
 :pattern ( ($generated@@528 $generated@@529))
)))
(assert (forall (($generated@@530 T@U) ) (!  (=> (= (type $generated@@530) $generated@@70) (= ($generated@@528 ($generated@@260 $generated@@530)) $generated@@530))
 :pattern ( ($generated@@260 $generated@@530))
)))
(assert (forall (($generated@@531 T@U) ) (!  (=> (= (type $generated@@531) $generated@@70) (= ($generated@@81 ($generated@@260 $generated@@531)) $generated@@55))
 :pattern ( ($generated@@260 $generated@@531))
)))
(assert (forall (($generated@@533 T@U) ) (! (= (type ($generated@@532 $generated@@533)) $generated@@70)
 :pattern ( ($generated@@532 $generated@@533))
)))
(assert (forall (($generated@@534 T@U) ) (!  (=> (= (type $generated@@534) $generated@@70) (= ($generated@@532 ($generated@@175 $generated@@534)) $generated@@534))
 :pattern ( ($generated@@175 $generated@@534))
)))
(assert (forall (($generated@@535 T@U) ) (!  (=> (= (type $generated@@535) $generated@@70) (= ($generated@@81 ($generated@@175 $generated@@535)) $generated@@56))
 :pattern ( ($generated@@175 $generated@@535))
)))
(assert (forall (($generated@@537 T@U) ) (! (= (type ($generated@@536 $generated@@537)) $generated@@70)
 :pattern ( ($generated@@536 $generated@@537))
)))
(assert (forall (($generated@@538 T@U) ) (!  (=> (= (type $generated@@538) $generated@@70) (= ($generated@@536 ($generated@@512 $generated@@538)) $generated@@538))
 :pattern ( ($generated@@512 $generated@@538))
)))
(assert (forall (($generated@@539 T@U) ) (!  (=> (= (type $generated@@539) $generated@@70) (= ($generated@@81 ($generated@@512 $generated@@539)) $generated@@57))
 :pattern ( ($generated@@512 $generated@@539))
)))
(assert (forall (($generated@@540 T@U) ) (! (let (($generated@@541 (type $generated@@540)))
(= ($generated@@355 $generated@@541 ($generated@@289 $generated@@540)) $generated@@540))
 :pattern ( ($generated@@289 $generated@@540))
)))
(assert (forall (($generated@@542 T@U) ($generated@@543 T@U) ($generated@@544 T@U) ) (!  (=> (and (and (= (type $generated@@542) ($generated@@312 $generated@@170 $generated@@170)) (= (type $generated@@543) $generated@@70)) (= (type $generated@@544) $generated@@70)) (= ($generated@@154 $generated@@542 ($generated@@422 $generated@@543 $generated@@544)) (forall (($generated@@545 T@U) ) (!  (=> (and (= (type $generated@@545) $generated@@170) ($generated@@0 ($generated@@92 ($generated@@310 $generated@@542) $generated@@545))) (and ($generated@@241 ($generated@@92 ($generated@@397 $generated@@542) $generated@@545) $generated@@544) ($generated@@241 $generated@@545 $generated@@543)))
 :pattern ( ($generated@@92 ($generated@@397 $generated@@542) $generated@@545))
 :pattern ( ($generated@@92 ($generated@@310 $generated@@542) $generated@@545))
))))
 :pattern ( ($generated@@154 $generated@@542 ($generated@@422 $generated@@543 $generated@@544)))
)))
(assert (forall (($generated@@546 T@U) ($generated@@547 T@U) ($generated@@548 T@U) ) (!  (=> (and (and (= (type $generated@@546) ($generated@@330 $generated@@170 $generated@@170)) (= (type $generated@@547) $generated@@70)) (= (type $generated@@548) $generated@@70)) (= ($generated@@154 $generated@@546 ($generated@@430 $generated@@547 $generated@@548)) (forall (($generated@@549 T@U) ) (!  (=> (and (= (type $generated@@549) $generated@@170) ($generated@@0 ($generated@@92 ($generated@@328 $generated@@546) $generated@@549))) (and ($generated@@241 ($generated@@92 ($generated@@405 $generated@@546) $generated@@549) $generated@@548) ($generated@@241 $generated@@549 $generated@@547)))
 :pattern ( ($generated@@92 ($generated@@405 $generated@@546) $generated@@549))
 :pattern ( ($generated@@92 ($generated@@328 $generated@@546) $generated@@549))
))))
 :pattern ( ($generated@@154 $generated@@546 ($generated@@430 $generated@@547 $generated@@548)))
)))
(assert (forall (($generated@@552 T@U) ($generated@@553 T@U) ) (!  (=> (and (= (type $generated@@552) $generated@@170) (= (type $generated@@553) $generated@@170)) (< ($generated@@550 $generated@@552) ($generated@@551 ($generated@@240 $generated@@552 $generated@@553))))
 :pattern ( ($generated@@240 $generated@@552 $generated@@553))
)))
(assert (forall (($generated@@554 T@U) ($generated@@555 T@U) ) (!  (=> (and (= (type $generated@@554) $generated@@170) (= (type $generated@@555) $generated@@170)) (< ($generated@@550 $generated@@555) ($generated@@551 ($generated@@240 $generated@@554 $generated@@555))))
 :pattern ( ($generated@@240 $generated@@554 $generated@@555))
)))
(assert (forall (($generated@@556 T@U) ($generated@@557 T@U) ($generated@@558 T@U) ) (!  (=> (and (and (and (= (type $generated@@556) $generated@@170) (= (type $generated@@557) $generated@@70)) (= (type $generated@@558) $generated@@70)) ($generated@@241 $generated@@556 ($generated@@422 $generated@@557 $generated@@558))) (and (= ($generated@@289 ($generated@@355 ($generated@@312 $generated@@170 $generated@@170) $generated@@556)) $generated@@556) ($generated@@154 ($generated@@355 ($generated@@312 $generated@@170 $generated@@170) $generated@@556) ($generated@@422 $generated@@557 $generated@@558))))
 :pattern ( ($generated@@241 $generated@@556 ($generated@@422 $generated@@557 $generated@@558)))
)))
(assert (forall (($generated@@559 T@U) ($generated@@560 T@U) ($generated@@561 T@U) ) (!  (=> (and (and (and (= (type $generated@@559) $generated@@170) (= (type $generated@@560) $generated@@70)) (= (type $generated@@561) $generated@@70)) ($generated@@241 $generated@@559 ($generated@@430 $generated@@560 $generated@@561))) (and (= ($generated@@289 ($generated@@355 ($generated@@330 $generated@@170 $generated@@170) $generated@@559)) $generated@@559) ($generated@@154 ($generated@@355 ($generated@@330 $generated@@170 $generated@@170) $generated@@559) ($generated@@430 $generated@@560 $generated@@561))))
 :pattern ( ($generated@@241 $generated@@559 ($generated@@430 $generated@@560 $generated@@561)))
)))
(assert (forall (($generated@@562 T@U) ($generated@@563 T@U) ($generated@@564 T@U) ) (!  (=> (and (and (and (= (type $generated@@562) $generated@@70) (= (type $generated@@563) $generated@@70)) (= (type $generated@@564) $generated@@170)) ($generated@@241 $generated@@564 ($generated@@160 $generated@@562 $generated@@563))) (and (= ($generated@@289 ($generated@@355 $generated@@161 $generated@@564)) $generated@@564) ($generated@@154 ($generated@@355 $generated@@161 $generated@@564) ($generated@@160 $generated@@562 $generated@@563))))
 :pattern ( ($generated@@241 $generated@@564 ($generated@@160 $generated@@562 $generated@@563)))
)))
(assert (forall (($generated@@565 T@U) ) (! (let (($generated@@566 (type $generated@@565)))
 (not ($generated@@0 ($generated@@92 ($generated@@441 $generated@@566) $generated@@565))))
 :pattern ( (let (($generated@@566 (type $generated@@565)))
($generated@@92 ($generated@@441 $generated@@566) $generated@@565)))
)))
(assert (forall (($generated@@568 T@U) ) (! (= (type ($generated@@567 $generated@@568)) $generated@@77)
 :pattern ( ($generated@@567 $generated@@568))
)))
(assert (forall (($generated@@569 T@U) ($generated@@570 T@U) ) (!  (=> (and (= (type $generated@@569) $generated@@70) (= (type $generated@@570) $generated@@70)) (and (= ($generated@@81 ($generated@@160 $generated@@569 $generated@@570)) $generated@@63) (= ($generated@@567 ($generated@@160 $generated@@569 $generated@@570)) $generated@@67)))
 :pattern ( ($generated@@160 $generated@@569 $generated@@570))
)))
(assert (forall (($generated@@571 T@U) ) (!  (=> (= (type $generated@@571) $generated@@161) (= ($generated@@550 ($generated@@289 $generated@@571)) ($generated@@551 $generated@@571)))
 :pattern ( ($generated@@550 ($generated@@289 $generated@@571)))
)))
(assert (forall (($generated@@572 T@U) ) (!  (=> (and (= (type $generated@@572) $generated@@170) ($generated@@241 $generated@@572 ($generated@@86 0))) (and (= ($generated@@289 ($generated@@355 $generated@@2 $generated@@572)) $generated@@572) ($generated@@154 ($generated@@355 ($generated@@87 $generated@@170 $generated@@4) $generated@@572) ($generated@@86 0))))
 :pattern ( ($generated@@241 $generated@@572 ($generated@@86 0)))
)))
(assert (forall (($generated@@573 T@U) ($generated@@574 T@U) ) (!  (=> (and (and (= (type $generated@@573) $generated@@170) (= (type $generated@@574) $generated@@70)) ($generated@@241 $generated@@573 ($generated@@255 $generated@@574))) (and (= ($generated@@289 ($generated@@355 ($generated@@87 $generated@@170 $generated@@4) $generated@@573)) $generated@@573) ($generated@@154 ($generated@@355 ($generated@@87 $generated@@170 $generated@@4) $generated@@573) ($generated@@255 $generated@@574))))
 :pattern ( ($generated@@241 $generated@@573 ($generated@@255 $generated@@574)))
)))
(assert (forall (($generated@@575 T@U) ($generated@@576 T@U) ) (!  (=> (and (and (= (type $generated@@575) $generated@@170) (= (type $generated@@576) $generated@@70)) ($generated@@241 $generated@@575 ($generated@@260 $generated@@576))) (and (= ($generated@@289 ($generated@@355 ($generated@@87 $generated@@170 $generated@@4) $generated@@575)) $generated@@575) ($generated@@154 ($generated@@355 ($generated@@87 $generated@@170 $generated@@4) $generated@@575) ($generated@@260 $generated@@576))))
 :pattern ( ($generated@@241 $generated@@575 ($generated@@260 $generated@@576)))
)))
(assert (forall (($generated@@577 T@U) ($generated@@578 T@U) ) (!  (=> (and (and (= (type $generated@@577) $generated@@170) (= (type $generated@@578) $generated@@70)) ($generated@@241 $generated@@577 ($generated@@175 $generated@@578))) (and (= ($generated@@289 ($generated@@355 ($generated@@87 $generated@@170 $generated@@2) $generated@@577)) $generated@@577) ($generated@@154 ($generated@@355 ($generated@@87 $generated@@170 $generated@@2) $generated@@577) ($generated@@175 $generated@@578))))
 :pattern ( ($generated@@241 $generated@@577 ($generated@@175 $generated@@578)))
)))
(assert (forall (($generated@@579 T@U) ($generated@@580 T@U) ) (!  (=> (and (and (= (type $generated@@579) $generated@@170) (= (type $generated@@580) $generated@@70)) ($generated@@241 $generated@@579 ($generated@@512 $generated@@580))) (and (= ($generated@@289 ($generated@@355 ($generated@@283 $generated@@170) $generated@@579)) $generated@@579) ($generated@@154 ($generated@@355 ($generated@@283 $generated@@170) $generated@@579) ($generated@@512 $generated@@580))))
 :pattern ( ($generated@@241 $generated@@579 ($generated@@512 $generated@@580)))
)))
(assert (= ($generated@@81 $generated@@147) $generated@@65))
(assert (= ($generated@@567 $generated@@147) $generated@@68))
(assert (= ($generated@@81 $generated@@237) $generated@@66))
(assert (= ($generated@@567 $generated@@237) $generated@@68))
(assert (forall (($generated@@581 T@U) ($generated@@582 T@U) ($generated@@583 T@U) ) (!  (=> (and (and (= (type $generated@@581) ($generated@@87 $generated@@170 $generated@@2)) (= (type $generated@@582) $generated@@70)) (= (type $generated@@583) ($generated@@87 $generated@@88 $generated@@89))) (= ($generated@@85 $generated@@581 ($generated@@175 $generated@@582) $generated@@583) (forall (($generated@@584 T@U) ) (!  (=> (and (= (type $generated@@584) $generated@@170) (< 0 ($generated ($generated@@92 $generated@@581 $generated@@584)))) ($generated@@269 $generated@@584 $generated@@582 $generated@@583))
 :pattern ( ($generated@@92 $generated@@581 $generated@@584))
))))
 :pattern ( ($generated@@85 $generated@@581 ($generated@@175 $generated@@582) $generated@@583))
)))
(assert (forall (($generated@@585 T@U) ($generated@@586 T@U) ($generated@@587 T@U) ) (!  (=> (and (and (and (= (type $generated@@585) $generated@@161) (= (type $generated@@586) $generated@@70)) (= (type $generated@@587) ($generated@@87 $generated@@88 $generated@@89))) (and ($generated@@152 $generated@@587) (and ($generated@@159 $generated@@585) (exists (($generated@@588 T@U) ) (!  (and (= (type $generated@@588) $generated@@70) ($generated@@85 $generated@@585 ($generated@@160 $generated@@586 $generated@@588) $generated@@587))
 :pattern ( ($generated@@85 $generated@@585 ($generated@@160 $generated@@586 $generated@@588) $generated@@587))
))))) ($generated@@269 ($generated@@168 $generated@@585) $generated@@586 $generated@@587))
 :pattern ( ($generated@@269 ($generated@@168 $generated@@585) $generated@@586 $generated@@587))
)))
(assert (forall (($generated@@589 T@U) ($generated@@590 T@U) ($generated@@591 T@U) ) (!  (=> (and (and (and (= (type $generated@@589) $generated@@161) (= (type $generated@@590) $generated@@70)) (= (type $generated@@591) ($generated@@87 $generated@@88 $generated@@89))) (and ($generated@@152 $generated@@591) (and ($generated@@159 $generated@@589) (exists (($generated@@592 T@U) ) (!  (and (= (type $generated@@592) $generated@@70) ($generated@@85 $generated@@589 ($generated@@160 $generated@@592 $generated@@590) $generated@@591))
 :pattern ( ($generated@@85 $generated@@589 ($generated@@160 $generated@@592 $generated@@590) $generated@@591))
))))) ($generated@@269 ($generated@@169 $generated@@589) $generated@@590 $generated@@591))
 :pattern ( ($generated@@269 ($generated@@169 $generated@@589) $generated@@590 $generated@@591))
)))
(assert (forall (($generated@@593 T@U) ($generated@@594 T@U) ) (!  (=> (and (= (type $generated@@593) $generated@@170) (= (type $generated@@594) $generated@@170)) (= ($generated@@240 ($generated@@265 $generated@@593) ($generated@@265 $generated@@594)) ($generated@@265 ($generated@@240 $generated@@593 $generated@@594))))
 :pattern ( ($generated@@240 ($generated@@265 $generated@@593) ($generated@@265 $generated@@594)))
)))
(assert (forall (($generated@@595 T@U) ) (! (= ($generated@@289 ($generated@@265 $generated@@595)) ($generated@@265 ($generated@@289 $generated@@595)))
 :pattern ( ($generated@@289 ($generated@@265 $generated@@595)))
)))
(assert (forall (($generated@@596 T@U) ) (! (let (($generated@@597 ($generated@@284 (type $generated@@596))))
 (=> (and (= (type $generated@@596) ($generated@@283 $generated@@597)) (= ($generated@@282 $generated@@596) 0)) (= $generated@@596 ($generated@@281 $generated@@597))))
 :pattern ( ($generated@@282 $generated@@596))
)))
(assert (forall (($generated@@598 T@U) ($generated@@599 T@U) ($generated@@600 T@U) ) (! (let (($generated@@601 (type $generated@@599)))
 (=> (and (and (= (type $generated@@598) ($generated@@87 $generated@@601 $generated@@2)) (= (type $generated@@600) $generated@@2)) (<= 0 ($generated $generated@@600))) (= ($generated@@304 ($generated@@93 $generated@@598 $generated@@599 $generated@@600)) (+ (- ($generated@@304 $generated@@598) ($generated ($generated@@92 $generated@@598 $generated@@599))) ($generated $generated@@600)))))
 :pattern ( ($generated@@304 ($generated@@93 $generated@@598 $generated@@599 $generated@@600)))
)))
(assert (forall (($generated@@602 T@U) ($generated@@603 T@U) ) (!  (=> (and (= (type $generated@@602) ($generated@@87 $generated@@88 $generated@@89)) (= (type $generated@@603) $generated@@2)) ($generated@@85 $generated@@603 $generated@@46 $generated@@602))
 :pattern ( ($generated@@85 $generated@@603 $generated@@46 $generated@@602))
)))
(assert (forall (($generated@@604 T@U) ($generated@@605 T@U) ) (!  (=> (and (= (type $generated@@604) ($generated@@87 $generated@@88 $generated@@89)) (= (type $generated@@605) $generated@@3)) ($generated@@85 $generated@@605 $generated@@47 $generated@@604))
 :pattern ( ($generated@@85 $generated@@605 $generated@@47 $generated@@604))
)))
(assert (forall (($generated@@606 T@U) ($generated@@607 T@U) ) (!  (=> (and (= (type $generated@@606) ($generated@@87 $generated@@88 $generated@@89)) (= (type $generated@@607) $generated@@4)) ($generated@@85 $generated@@607 $generated@@44 $generated@@606))
 :pattern ( ($generated@@85 $generated@@607 $generated@@44 $generated@@606))
)))
(assert (forall (($generated@@608 T@U) ($generated@@609 T@U) ) (!  (=> (and (= (type $generated@@608) ($generated@@87 $generated@@88 $generated@@89)) (= (type $generated@@609) $generated@@470)) ($generated@@85 $generated@@609 $generated@@45 $generated@@608))
 :pattern ( ($generated@@85 $generated@@609 $generated@@45 $generated@@608))
)))
(assert (forall (($generated@@610 T@U) ($generated@@611 T@U) ) (!  (=> (and (= (type $generated@@610) ($generated@@87 $generated@@88 $generated@@89)) (= (type $generated@@611) $generated@@170)) ($generated@@85 $generated@@611 $generated@@48 $generated@@610))
 :pattern ( ($generated@@85 $generated@@611 $generated@@48 $generated@@610))
)))
(assert (forall (($generated@@612 T@U) ($generated@@613 T@U) ) (!  (=> (and (= (type $generated@@612) ($generated@@283 $generated@@170)) (= (type $generated@@613) $generated@@70)) (= ($generated@@154 $generated@@612 ($generated@@512 $generated@@613)) (forall (($generated@@614 Int) ) (!  (=> (and (<= 0 $generated@@614) (< $generated@@614 ($generated@@282 $generated@@612))) ($generated@@241 ($generated@@513 $generated@@612 $generated@@614) $generated@@613))
 :pattern ( ($generated@@513 $generated@@612 $generated@@614))
))))
 :pattern ( ($generated@@154 $generated@@612 ($generated@@512 $generated@@613)))
)))
(assert (forall (($generated@@616 T@U) ($generated@@617 Int) ) (!  (=> (= (type $generated@@616) ($generated@@283 $generated@@170)) (=> (and (<= 0 $generated@@617) (< $generated@@617 ($generated@@282 $generated@@616))) (< ($generated@@551 ($generated@@355 $generated@@161 ($generated@@513 $generated@@616 $generated@@617))) ($generated@@615 $generated@@616))))
 :pattern ( ($generated@@551 ($generated@@355 $generated@@161 ($generated@@513 $generated@@616 $generated@@617))))
)))
(assert (forall (($generated@@618 T@U) ($generated@@619 T@U) ($generated@@620 T@U) ) (!  (=> (and (and (and (= (type $generated@@618) ($generated@@312 $generated@@170 $generated@@170)) (= (type $generated@@619) $generated@@70)) (= (type $generated@@620) $generated@@70)) ($generated@@154 $generated@@618 ($generated@@422 $generated@@619 $generated@@620))) (and (and ($generated@@154 ($generated@@310 $generated@@618) ($generated@@255 $generated@@619)) ($generated@@154 ($generated@@365 $generated@@618) ($generated@@255 $generated@@620))) ($generated@@154 ($generated@@396 $generated@@618) ($generated@@255 ($generated@@160 $generated@@619 $generated@@620)))))
 :pattern ( ($generated@@154 $generated@@618 ($generated@@422 $generated@@619 $generated@@620)))
)))
(assert (forall (($generated@@621 T@U) ($generated@@622 T@U) ($generated@@623 T@U) ) (!  (=> (and (and (and (= (type $generated@@621) ($generated@@330 $generated@@170 $generated@@170)) (= (type $generated@@622) $generated@@70)) (= (type $generated@@623) $generated@@70)) ($generated@@154 $generated@@621 ($generated@@430 $generated@@622 $generated@@623))) (and (and ($generated@@154 ($generated@@328 $generated@@621) ($generated@@260 $generated@@622)) ($generated@@154 ($generated@@376 $generated@@621) ($generated@@260 $generated@@623))) ($generated@@154 ($generated@@404 $generated@@621) ($generated@@260 ($generated@@160 $generated@@622 $generated@@623)))))
 :pattern ( ($generated@@154 $generated@@621 ($generated@@430 $generated@@622 $generated@@623)))
)))
(assert (forall (($generated@@624 T@U) ) (!  (=> (= (type $generated@@624) $generated@@2) ($generated@@154 $generated@@624 $generated@@46))
 :pattern ( ($generated@@154 $generated@@624 $generated@@46))
)))
(assert (forall (($generated@@625 T@U) ) (!  (=> (= (type $generated@@625) $generated@@3) ($generated@@154 $generated@@625 $generated@@47))
 :pattern ( ($generated@@154 $generated@@625 $generated@@47))
)))
(assert (forall (($generated@@626 T@U) ) (!  (=> (= (type $generated@@626) $generated@@4) ($generated@@154 $generated@@626 $generated@@44))
 :pattern ( ($generated@@154 $generated@@626 $generated@@44))
)))
(assert (forall (($generated@@627 T@U) ) (!  (=> (= (type $generated@@627) $generated@@470) ($generated@@154 $generated@@627 $generated@@45))
 :pattern ( ($generated@@154 $generated@@627 $generated@@45))
)))
(assert (forall (($generated@@628 T@U) ) (!  (=> (= (type $generated@@628) $generated@@170) ($generated@@154 $generated@@628 $generated@@48))
 :pattern ( ($generated@@154 $generated@@628 $generated@@48))
)))
(push 1)
(declare-fun ControlFlow (Int Int) Int)
(declare-fun $generated@@629 () T@U)
(declare-fun $generated@@630 () T@U)
(declare-fun $generated@@631 () T@U)
(declare-fun $generated@@632 (T@U) T@U)
(declare-fun $generated@@633 () T@U)
(declare-fun $generated@@634 () T@U)
(declare-fun $generated@@635 () T@U)
(declare-fun $generated@@636 (T@U) Bool)
(declare-fun $generated@@637 () Int)
(declare-fun $generated@@638 () T@T)
(assert  (and (and (and (and (and (and (and (= (type $generated@@629) ($generated@@87 $generated@@88 $generated@@89)) (= (type $generated@@631) $generated@@88)) (= (type $generated@@630) $generated@@88)) (= ($generated@@1 $generated@@638) 23)) (forall (($generated@@639 T@U) ) (! (= (type ($generated@@632 $generated@@639)) $generated@@638)
 :pattern ( ($generated@@632 $generated@@639))
))) (= (type $generated@@633) $generated@@638)) (= (type $generated@@634) $generated@@638)) (= (type $generated@@635) ($generated@@183 $generated@@88 $generated@@4))))
(set-option :timeout 0)
(set-option :rlimit 0)
(assert (not
 (=> (= (ControlFlow 0 0) 8) (let (($generated@@640 true))
(let (($generated@@641  (=> (and (not ($generated@@0 ($generated@@94 ($generated@@92 $generated@@629 $generated@@630) $generated@@151))) (= (ControlFlow 0 4) 1)) $generated@@640)))
(let (($generated@@642  (=> (and ($generated@@0 ($generated@@94 ($generated@@92 $generated@@629 $generated@@630) $generated@@151)) (= (ControlFlow 0 3) 1)) $generated@@640)))
(let (($generated@@643  (=> (not ($generated@@0 ($generated@@94 ($generated@@92 $generated@@629 $generated@@631) $generated@@151))) (and (=> (= (ControlFlow 0 5) (- 0 6)) (not (= $generated@@630 $generated@@148))) (=> (not (= $generated@@630 $generated@@148)) (and (=> (= (ControlFlow 0 5) 3) $generated@@642) (=> (= (ControlFlow 0 5) 4) $generated@@641)))))))
(let (($generated@@644  (=> (and ($generated@@0 ($generated@@94 ($generated@@92 $generated@@629 $generated@@631) $generated@@151)) (= (ControlFlow 0 2) 1)) $generated@@640)))
(let (($generated@@645  (=> (= ($generated@@632 $generated@@633) $generated@@633) (=> (and (= ($generated@@632 $generated@@634) $generated@@634) (= $generated@@635 ($generated@@182 $generated@@148 $generated@@629 $generated@@60 false))) (and (=> (= (ControlFlow 0 7) 2) $generated@@644) (=> (= (ControlFlow 0 7) 5) $generated@@643))))))
(let (($generated@@646  (=> (and (and (and ($generated@@152 $generated@@629) ($generated@@636 $generated@@629)) (and (not (= $generated@@631 $generated@@148)) (and ($generated@@154 $generated@@631 $generated@@237) ($generated@@85 $generated@@631 $generated@@237 $generated@@629)))) (and (and ($generated@@154 $generated@@630 $generated@@237) ($generated@@85 $generated@@630 $generated@@237 $generated@@629)) (and (= 1 $generated@@637) (= (ControlFlow 0 8) 7)))) $generated@@645)))
$generated@@646))))))))
))
(check-sat)
(pop 1)
; Valid
(get-info :rlimit)
(reset)
(set-option :rlimit 0)
; did a full reset
(reset)
(set-option :print-success false)
(set-info :smt-lib-version 2.6)
(set-option :auto_config false)
(set-option :type_check true)
(set-option :smt.case_split 3)
(set-option :smt.qi.eager_threshold 100)
(set-option :smt.delay_units true)
(set-option :smt.arith.solver 2)
(set-option :smt.mbqi false)
(set-option :model.compact false)
(set-option :model.v2 true)
(set-option :pp.bv_literals false)
; done setting options


(set-info :category "industrial")
(declare-sort |T@U| 0)
(declare-sort |T@T| 0)
(declare-fun real_pow (Real Real) Real)
(declare-fun UOrdering2 (|T@U| |T@U|) Bool)
(declare-fun UOrdering3 (|T@T| |T@U| |T@U|) Bool)
(declare-fun tickleBool (Bool) Bool)
(assert (and (tickleBool true) (tickleBool false)))
(declare-fun $generated (T@U) Int)
(declare-fun $generated@@0 (T@U) Bool)
(declare-fun $generated@@1 (T@T) Int)
(declare-fun $generated@@2 () T@T)
(declare-fun $generated@@3 () T@T)
(declare-fun $generated@@4 () T@T)
(declare-fun $generated@@5 () T@T)
(declare-fun $generated@@6 () T@T)
(declare-fun $generated@@7 () T@T)
(declare-fun $generated@@8 (Int) T@U)
(declare-fun type (T@U) T@T)
(declare-fun $generated@@9 (Real) T@U)
(declare-fun $generated@@10 (T@U) Real)
(declare-fun $generated@@11 (Bool) T@U)
(declare-fun $generated@@12 (RoundingMode) T@U)
(declare-fun $generated@@13 (T@U) RoundingMode)
(declare-fun $generated@@14 (String) T@U)
(declare-fun $generated@@15 (T@U) String)
(declare-fun $generated@@16 ((RegEx String)) T@U)
(declare-fun $generated@@17 (T@U) (RegEx String))
(declare-fun $generated@@44 () T@U)
(declare-fun $generated@@45 () T@U)
(declare-fun $generated@@46 () T@U)
(declare-fun $generated@@47 () T@U)
(declare-fun $generated@@48 () T@U)
(declare-fun $generated@@49 () T@U)
(declare-fun $generated@@50 () T@U)
(declare-fun $generated@@51 () T@U)
(declare-fun $generated@@52 () T@U)
(declare-fun $generated@@53 () T@U)
(declare-fun $generated@@54 () T@U)
(declare-fun $generated@@55 () T@U)
(declare-fun $generated@@56 () T@U)
(declare-fun $generated@@57 () T@U)
(declare-fun $generated@@58 () T@U)
(declare-fun $generated@@59 () T@U)
(declare-fun $generated@@60 () T@U)
(declare-fun $generated@@61 () T@U)
(declare-fun $generated@@62 () T@U)
(declare-fun $generated@@63 () T@U)
(declare-fun $generated@@64 () T@U)
(declare-fun $generated@@65 () T@U)
(declare-fun $generated@@66 () T@U)
(declare-fun $generated@@67 () T@U)
(declare-fun $generated@@68 () T@U)
(declare-fun $generated@@69 () T@U)
(declare-fun $generated@@70 () T@U)
(declare-fun $generated@@71 () T@U)
(declare-fun $generated@@72 () T@T)
(declare-fun $generated@@73 () T@T)
(declare-fun $generated@@74 (T@T) T@T)
(declare-fun $generated@@75 (T@T) T@T)
(declare-fun $generated@@76 () T@T)
(declare-fun $generated@@77 () T@T)
(declare-fun $generated@@78 () T@T)
(declare-fun $generated@@79 () T@T)
(declare-fun $generated@@82 (T@U) Int)
(declare-fun $generated@@83 (T@U) T@U)
(declare-fun $generated@@85 (T@U) T@U)
(declare-fun $generated@@87 (T@U T@U T@U) Bool)
(declare-fun $generated@@88 (Int) T@U)
(declare-fun $generated@@89 (T@T T@T) T@T)
(declare-fun $generated@@90 () T@T)
(declare-fun $generated@@91 () T@T)
(declare-fun $generated@@92 (T@T) T@T)
(declare-fun $generated@@93 (T@T) T@T)
(declare-fun $generated@@94 (T@U T@U) T@U)
(declare-fun $generated@@95 (T@U T@U T@U) T@U)
(declare-fun $generated@@96 (T@U T@U) T@U)
(declare-fun $generated@@97 (T@U T@U T@U) T@U)
(declare-fun $generated@@145 (T@U T@U) Bool)
(declare-fun $generated@@149 () T@U)
(declare-fun $generated@@150 () T@U)
(declare-fun $generated@@153 () T@U)
(declare-fun $generated@@154 (T@U) Bool)
(declare-fun $generated@@155 (T@U) T@U)
(declare-fun $generated@@156 (T@U T@U) Bool)
(declare-fun $generated@@160 () T@U)
(declare-fun $generated@@163 () T@U)
(declare-fun $generated@@167 (T@U) Bool)
(declare-fun $generated@@168 (T@U T@U) T@U)
(declare-fun $generated@@169 () T@T)
(declare-fun $generated@@175 (T@U T@U) Bool)
(declare-fun $generated@@176 (T@U) T@U)
(declare-fun $generated@@177 (T@U) T@U)
(declare-fun $generated@@178 () T@T)
(declare-fun $generated@@183 (T@U) T@U)
(declare-fun $generated@@184 (T@U) Bool)
(declare-fun $generated@@189 () T@U)
(declare-fun $generated@@192 (T@U T@U) T@U)
(declare-fun $generated@@193 (T@U T@U) Bool)
(declare-fun $generated@@200 (T@T T@U T@U) T@U)
(declare-fun $generated@@204 (T@U) Bool)
(declare-fun $generated@@207 (T@U) T@U)
(declare-fun $generated@@212 (T@U) T@U)
(declare-fun $generated@@217 (Real) Int)
(declare-fun $generated@@219 (Int) Int)
(declare-fun $generated@@221 (Real) Real)
(declare-fun $generated@@223 (T@U) T@U)
(declare-fun $generated@@227 (T@U T@U T@U) Bool)
(declare-fun $generated@@233 (T@U) T@U)
(declare-fun $generated@@239 (T@T) T@U)
(declare-fun $generated@@240 (T@U) Int)
(declare-fun $generated@@241 (T@T) T@T)
(declare-fun $generated@@242 (T@T) T@T)
(declare-fun $generated@@247 (T@U) T@U)
(declare-fun $generated@@266 (T@U) Int)
(declare-fun $generated@@267 (T@T) T@U)
(declare-fun $generated@@272 (T@U) T@U)
(declare-fun $generated@@273 (T@T T@T) T@U)
(declare-fun $generated@@274 (T@T T@T) T@T)
(declare-fun $generated@@275 (T@T) T@T)
(declare-fun $generated@@276 (T@T) T@T)
(declare-fun $generated@@290 (T@U) T@U)
(declare-fun $generated@@291 (T@T T@T) T@U)
(declare-fun $generated@@292 (T@T T@T) T@T)
(declare-fun $generated@@293 (T@T) T@T)
(declare-fun $generated@@294 (T@T) T@T)
(declare-fun $generated@@308 (T@U T@U) Bool)
(declare-fun $generated@@317 (T@T T@U) T@U)
(declare-fun $generated@@327 (T@U) T@U)
(declare-fun $generated@@338 (T@U) T@U)
(declare-fun $generated@@358 (T@U) T@U)
(declare-fun $generated@@359 (T@U) T@U)
(declare-fun $generated@@366 (T@U) T@U)
(declare-fun $generated@@367 (T@U) T@U)
(declare-fun $generated@@384 (T@U T@U) T@U)
(declare-fun $generated@@392 (T@U T@U) T@U)
(declare-fun $generated@@400 (Int) Real)
(declare-fun $generated@@405 (T@T) T@U)
(declare-fun $generated@@426 (T@U) T@U)
(declare-fun $generated@@434 () T@T)
(declare-fun $generated@@442 (T@U) T@U)
(declare-fun $generated@@446 (T@U) T@U)
(declare-fun $generated@@452 (T@U) T@U)
(declare-fun $generated@@456 (T@U) T@U)
(declare-fun $generated@@464 (T@U) T@U)
(declare-fun $generated@@468 (T@U) T@U)
(declare-fun $generated@@476 (T@U) T@U)
(declare-fun $generated@@477 (T@U Int) T@U)
(declare-fun $generated@@486 (T@U) Int)
(declare-fun $generated@@488 (T@U) T@U)
(declare-fun $generated@@492 (T@U) T@U)
(declare-fun $generated@@496 (T@U) T@U)
(declare-fun $generated@@500 (T@U) T@U)
(declare-fun $generated@@515 (T@U) Int)
(declare-fun $generated@@516 (T@U) Int)
(declare-fun $generated@@532 (T@U T@U T@U) T@U)
(declare-fun $generated@@533 (T@U T@U T@U T@U) T@U)
(declare-fun $generated@@534 (T@T T@T) T@T)
(declare-fun $generated@@535 (T@T) T@T)
(declare-fun $generated@@536 (T@T) T@T)
(declare-fun $generated@@537 (T@U T@U T@U T@U) T@U)
(declare-fun $generated@@588 (T@U) T@U)
(declare-fun $generated@@643 (T@U) Int)
(assert  (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (= ($generated@@1 $generated@@2) 0) (= ($generated@@1 $generated@@3) 1)) (= ($generated@@1 $generated@@4) 2)) (= ($generated@@1 $generated@@5) 3)) (= ($generated@@1 $generated@@6) 4)) (= ($generated@@1 $generated@@7) 5)) (forall (($generated@@18 Int) ) (! (= ($generated ($generated@@8 $generated@@18)) $generated@@18)
 :pattern ( ($generated@@8 $generated@@18))
))) (forall (($generated@@19 T@U) ) (!  (=> (= (type $generated@@19) $generated@@2) (= ($generated@@8 ($generated $generated@@19)) $generated@@19))
 :pattern ( ($generated $generated@@19))
))) (forall (($generated@@20 Int) ) (! (= (type ($generated@@8 $generated@@20)) $generated@@2)
 :pattern ( ($generated@@8 $generated@@20))
))) (forall (($generated@@21 Real) ) (! (= ($generated@@10 ($generated@@9 $generated@@21)) $generated@@21)
 :pattern ( ($generated@@9 $generated@@21))
))) (forall (($generated@@22 T@U) ) (!  (=> (= (type $generated@@22) $generated@@3) (= ($generated@@9 ($generated@@10 $generated@@22)) $generated@@22))
 :pattern ( ($generated@@10 $generated@@22))
))) (forall (($generated@@23 Real) ) (! (= (type ($generated@@9 $generated@@23)) $generated@@3)
 :pattern ( ($generated@@9 $generated@@23))
))) (forall (($generated@@24 Bool) ) (! (= ($generated@@0 ($generated@@11 $generated@@24)) $generated@@24)
 :pattern ( ($generated@@11 $generated@@24))
))) (forall (($generated@@25 T@U) ) (!  (=> (= (type $generated@@25) $generated@@4) (= ($generated@@11 ($generated@@0 $generated@@25)) $generated@@25))
 :pattern ( ($generated@@0 $generated@@25))
))) (forall (($generated@@26 Bool) ) (! (= (type ($generated@@11 $generated@@26)) $generated@@4)
 :pattern ( ($generated@@11 $generated@@26))
))) (forall (($generated@@27 RoundingMode) ) (! (= ($generated@@13 ($generated@@12 $generated@@27)) $generated@@27)
 :pattern ( ($generated@@12 $generated@@27))
))) (forall (($generated@@28 T@U) ) (!  (=> (= (type $generated@@28) $generated@@5) (= ($generated@@12 ($generated@@13 $generated@@28)) $generated@@28))
 :pattern ( ($generated@@13 $generated@@28))
))) (forall (($generated@@29 RoundingMode) ) (! (= (type ($generated@@12 $generated@@29)) $generated@@5)
 :pattern ( ($generated@@12 $generated@@29))
))) (forall (($generated@@30 String) ) (! (= ($generated@@15 ($generated@@14 $generated@@30)) $generated@@30)
 :pattern ( ($generated@@14 $generated@@30))
))) (forall (($generated@@31 T@U) ) (!  (=> (= (type $generated@@31) $generated@@6) (= ($generated@@14 ($generated@@15 $generated@@31)) $generated@@31))
 :pattern ( ($generated@@15 $generated@@31))
))) (forall (($generated@@32 String) ) (! (= (type ($generated@@14 $generated@@32)) $generated@@6)
 :pattern ( ($generated@@14 $generated@@32))
))) (forall (($generated@@33 (RegEx String)) ) (! (= ($generated@@17 ($generated@@16 $generated@@33)) $generated@@33)
 :pattern ( ($generated@@16 $generated@@33))
))) (forall (($generated@@34 T@U) ) (!  (=> (= (type $generated@@34) $generated@@7) (= ($generated@@16 ($generated@@17 $generated@@34)) $generated@@34))
 :pattern ( ($generated@@17 $generated@@34))
))) (forall (($generated@@35 (RegEx String)) ) (! (= (type ($generated@@16 $generated@@35)) $generated@@7)
 :pattern ( ($generated@@16 $generated@@35))
))))
(assert (forall (($generated@@36 T@U) ) (! (UOrdering2 $generated@@36 $generated@@36)
 :no-pattern ($generated $generated@@36)
 :no-pattern ($generated@@0 $generated@@36)
)))
(assert (forall (($generated@@37 T@U) ($generated@@38 T@U) ($generated@@39 T@U) ) (! (let (($generated@@40 (type $generated@@37)))
 (=> (and (and (= (type $generated@@38) $generated@@40) (= (type $generated@@39) $generated@@40)) (and (UOrdering2 $generated@@37 $generated@@38) (UOrdering2 $generated@@38 $generated@@39))) (UOrdering2 $generated@@37 $generated@@39)))
 :pattern ( (UOrdering2 $generated@@37 $generated@@38) (UOrdering2 $generated@@38 $generated@@39))
)))
(assert (forall (($generated@@41 T@U) ($generated@@42 T@U) ) (! (let (($generated@@43 (type $generated@@41)))
 (=> (= (type $generated@@42) $generated@@43) (=> (and (UOrdering2 $generated@@41 $generated@@42) (UOrdering2 $generated@@42 $generated@@41)) (= $generated@@41 $generated@@42))))
 :pattern ( (UOrdering2 $generated@@41 $generated@@42) (UOrdering2 $generated@@42 $generated@@41))
)))
(assert  (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (= ($generated@@1 $generated@@72) 6) (= (type $generated@@44) $generated@@72)) (= (type $generated@@45) $generated@@72)) (= (type $generated@@46) $generated@@72)) (= (type $generated@@47) $generated@@72)) (= (type $generated@@48) $generated@@72)) (= ($generated@@1 $generated@@73) 7)) (= (type $generated@@49) $generated@@73)) (= (type $generated@@50) $generated@@73)) (= (type $generated@@51) $generated@@73)) (= (type $generated@@52) $generated@@73)) (= (type $generated@@53) $generated@@73)) (= (type $generated@@54) $generated@@73)) (= (type $generated@@55) $generated@@73)) (= (type $generated@@56) $generated@@73)) (= (type $generated@@57) $generated@@73)) (= (type $generated@@58) $generated@@73)) (= (type $generated@@59) $generated@@73)) (forall (($generated@@80 T@T) ) (= ($generated@@1 ($generated@@74 $generated@@80)) 8))) (forall (($generated@@81 T@T) ) (! (= ($generated@@75 ($generated@@74 $generated@@81)) $generated@@81)
 :pattern ( ($generated@@74 $generated@@81))
))) (= (type $generated@@60) ($generated@@74 $generated@@4))) (= ($generated@@1 $generated@@76) 9)) (= (type $generated@@61) $generated@@76)) (= ($generated@@1 $generated@@77) 10)) (= (type $generated@@62) $generated@@77)) (= (type $generated@@63) $generated@@73)) (= ($generated@@1 $generated@@78) 11)) (= (type $generated@@64) $generated@@78)) (= (type $generated@@65) $generated@@73)) (= (type $generated@@66) $generated@@73)) (= ($generated@@1 $generated@@79) 12)) (= (type $generated@@67) $generated@@79)) (= (type $generated@@68) $generated@@79)) (= (type $generated@@69) $generated@@76)) (= (type $generated@@70) $generated@@76)) (= (type $generated@@71) $generated@@76)))
(assert (distinct $generated@@44 $generated@@45 $generated@@46 $generated@@47 $generated@@48 $generated@@49 $generated@@50 $generated@@51 $generated@@52 $generated@@53 $generated@@54 $generated@@55 $generated@@56 $generated@@57 $generated@@58 $generated@@59 $generated@@60 $generated@@61 $generated@@62 $generated@@63 $generated@@64 $generated@@65 $generated@@66 $generated@@67 $generated@@68 $generated@@69 $generated@@70 $generated@@71)
)
(assert (= ($generated@@82 $generated@@60) 0))
(assert (forall (($generated@@84 T@U) ) (! (= (type ($generated@@83 $generated@@84)) $generated@@73)
 :pattern ( ($generated@@83 $generated@@84))
)))
(assert (= ($generated@@83 $generated@@44) $generated@@49))
(assert (= ($generated@@83 $generated@@45) $generated@@50))
(assert (= ($generated@@83 $generated@@46) $generated@@51))
(assert (= ($generated@@83 $generated@@47) $generated@@52))
(assert (= ($generated@@83 $generated@@48) $generated@@53))
(assert (forall (($generated@@86 T@U) ) (! (= (type ($generated@@85 $generated@@86)) $generated@@76)
 :pattern ( ($generated@@85 $generated@@86))
)))
(assert (= ($generated@@85 $generated@@60) $generated@@61))
(assert  (and (and (and (and (and (and (and (and (and (and (and (and (and (forall (($generated@@98 T@T) ($generated@@99 T@T) ) (= ($generated@@1 ($generated@@89 $generated@@98 $generated@@99)) 13)) (forall (($generated@@100 T@T) ($generated@@101 T@T) ) (! (= ($generated@@92 ($generated@@89 $generated@@100 $generated@@101)) $generated@@100)
 :pattern ( ($generated@@89 $generated@@100 $generated@@101))
))) (forall (($generated@@102 T@T) ($generated@@103 T@T) ) (! (= ($generated@@93 ($generated@@89 $generated@@102 $generated@@103)) $generated@@103)
 :pattern ( ($generated@@89 $generated@@102 $generated@@103))
))) (forall (($generated@@104 T@U) ($generated@@105 T@U) ) (! (let (($generated@@106 ($generated@@93 (type $generated@@104))))
(= (type ($generated@@94 $generated@@104 $generated@@105)) $generated@@106))
 :pattern ( ($generated@@94 $generated@@104 $generated@@105))
))) (forall (($generated@@107 T@U) ($generated@@108 T@U) ($generated@@109 T@U) ) (! (let (($generated@@110 (type $generated@@109)))
(let (($generated@@111 (type $generated@@108)))
(= (type ($generated@@95 $generated@@107 $generated@@108 $generated@@109)) ($generated@@89 $generated@@111 $generated@@110))))
 :pattern ( ($generated@@95 $generated@@107 $generated@@108 $generated@@109))
))) (forall (($generated@@112 T@U) ($generated@@113 T@U) ($generated@@114 T@U) ) (! (let (($generated@@115 ($generated@@93 (type $generated@@112))))
 (=> (= (type $generated@@114) $generated@@115) (= ($generated@@94 ($generated@@95 $generated@@112 $generated@@113 $generated@@114) $generated@@113) $generated@@114)))
 :weight 0
))) (and (forall (($generated@@116 T@U) ($generated@@117 T@U) ($generated@@118 T@U) ($generated@@119 T@U) ) (!  (or (= $generated@@118 $generated@@119) (= ($generated@@94 ($generated@@95 $generated@@117 $generated@@118 $generated@@116) $generated@@119) ($generated@@94 $generated@@117 $generated@@119)))
 :weight 0
)) (forall (($generated@@120 T@U) ($generated@@121 T@U) ($generated@@122 T@U) ($generated@@123 T@U) ) (!  (or true (= ($generated@@94 ($generated@@95 $generated@@121 $generated@@122 $generated@@120) $generated@@123) ($generated@@94 $generated@@121 $generated@@123)))
 :weight 0
)))) (= ($generated@@1 $generated@@90) 14)) (forall (($generated@@124 T@U) ($generated@@125 T@U) ) (! (let (($generated@@126 ($generated@@75 (type $generated@@125))))
(= (type ($generated@@96 $generated@@124 $generated@@125)) $generated@@126))
 :pattern ( ($generated@@96 $generated@@124 $generated@@125))
))) (= ($generated@@1 $generated@@91) 15)) (forall (($generated@@127 T@U) ($generated@@128 T@U) ($generated@@129 T@U) ) (! (= (type ($generated@@97 $generated@@127 $generated@@128 $generated@@129)) $generated@@91)
 :pattern ( ($generated@@97 $generated@@127 $generated@@128 $generated@@129))
))) (forall (($generated@@130 T@U) ($generated@@131 T@U) ($generated@@132 T@U) ) (! (let (($generated@@133 ($generated@@75 (type $generated@@131))))
 (=> (= (type $generated@@132) $generated@@133) (= ($generated@@96 ($generated@@97 $generated@@130 $generated@@131 $generated@@132) $generated@@131) $generated@@132)))
 :weight 0
))) (and (forall (($generated@@134 T@U) ($generated@@135 T@U) ($generated@@136 T@U) ($generated@@137 T@U) ) (!  (or (= $generated@@136 $generated@@137) (= ($generated@@96 ($generated@@97 $generated@@135 $generated@@136 $generated@@134) $generated@@137) ($generated@@96 $generated@@135 $generated@@137)))
 :weight 0
)) (forall (($generated@@138 T@U) ($generated@@139 T@U) ($generated@@140 T@U) ($generated@@141 T@U) ) (!  (or true (= ($generated@@96 ($generated@@97 $generated@@139 $generated@@140 $generated@@138) $generated@@141) ($generated@@96 $generated@@139 $generated@@141)))
 :weight 0
)))) (forall (($generated@@142 Int) ) (! (= (type ($generated@@88 $generated@@142)) $generated@@72)
 :pattern ( ($generated@@88 $generated@@142))
))))
(assert (forall (($generated@@143 T@U) ($generated@@144 T@U) ) (!  (=> (and (= (type $generated@@143) $generated@@2) (= (type $generated@@144) ($generated@@89 $generated@@90 $generated@@91))) ($generated@@87 $generated@@143 ($generated@@88 0) $generated@@144))
 :pattern ( ($generated@@87 $generated@@143 ($generated@@88 0) $generated@@144))
)))
(assert (forall (($generated@@146 T@U) ($generated@@147 T@U) ) (!  (=> (and (and (= (type $generated@@146) ($generated@@89 $generated@@90 $generated@@91)) (= (type $generated@@147) ($generated@@89 $generated@@90 $generated@@91))) ($generated@@145 $generated@@146 $generated@@147)) (forall (($generated@@148 T@U) ) (!  (=> (and (= (type $generated@@148) $generated@@90) ($generated@@0 ($generated@@96 ($generated@@94 $generated@@146 $generated@@148) $generated@@60))) ($generated@@0 ($generated@@96 ($generated@@94 $generated@@147 $generated@@148) $generated@@60)))
 :pattern ( ($generated@@96 ($generated@@94 $generated@@147 $generated@@148) $generated@@60))
)))
 :pattern ( ($generated@@145 $generated@@146 $generated@@147))
)))
(assert  (and (= (type $generated@@149) $generated@@72) (= (type $generated@@150) $generated@@90)))
(assert (forall (($generated@@151 T@U) ($generated@@152 T@U) ) (!  (=> (and (= (type $generated@@151) $generated@@90) (= (type $generated@@152) ($generated@@89 $generated@@90 $generated@@91))) (= ($generated@@87 $generated@@151 $generated@@149 $generated@@152)  (or (= $generated@@151 $generated@@150) ($generated@@0 ($generated@@96 ($generated@@94 $generated@@152 $generated@@151) $generated@@60)))))
 :pattern ( ($generated@@87 $generated@@151 $generated@@149 $generated@@152))
)))
(assert  (and (= (type $generated@@153) ($generated@@74 $generated@@2)) (forall (($generated@@157 T@U) ) (! (= (type ($generated@@155 $generated@@157)) $generated@@72)
 :pattern ( ($generated@@155 $generated@@157))
))))
(assert (forall (($generated@@158 T@U) ($generated@@159 T@U) ) (!  (=> (and (and (= (type $generated@@158) ($generated@@89 $generated@@90 $generated@@91)) (= (type $generated@@159) $generated@@90)) (and ($generated@@154 $generated@@158) (and (not (= $generated@@159 $generated@@150)) (= ($generated@@155 $generated@@159) $generated@@149)))) ($generated@@156 ($generated@@96 ($generated@@94 $generated@@158 $generated@@159) $generated@@153) $generated@@46))
 :pattern ( ($generated@@96 ($generated@@94 $generated@@158 $generated@@159) $generated@@153))
)))
(assert (= (type $generated@@160) ($generated@@74 $generated@@2)))
(assert (forall (($generated@@161 T@U) ($generated@@162 T@U) ) (!  (=> (and (and (= (type $generated@@161) ($generated@@89 $generated@@90 $generated@@91)) (= (type $generated@@162) $generated@@90)) (and ($generated@@154 $generated@@161) (and (not (= $generated@@162 $generated@@150)) (= ($generated@@155 $generated@@162) $generated@@149)))) ($generated@@156 ($generated@@96 ($generated@@94 $generated@@161 $generated@@162) $generated@@160) $generated@@46))
 :pattern ( ($generated@@96 ($generated@@94 $generated@@161 $generated@@162) $generated@@160))
)))
(assert (= (type $generated@@163) ($generated@@74 $generated@@2)))
(assert (forall (($generated@@164 T@U) ($generated@@165 T@U) ) (!  (=> (and (and (= (type $generated@@164) ($generated@@89 $generated@@90 $generated@@91)) (= (type $generated@@165) $generated@@90)) (and ($generated@@154 $generated@@164) (and (not (= $generated@@165 $generated@@150)) (= ($generated@@155 $generated@@165) $generated@@149)))) ($generated@@156 ($generated@@96 ($generated@@94 $generated@@164 $generated@@165) $generated@@163) $generated@@46))
 :pattern ( ($generated@@96 ($generated@@94 $generated@@164 $generated@@165) $generated@@163))
)))
(assert (forall (($generated@@166 T@U) ) (!  (=> (= (type $generated@@166) $generated@@2) ($generated@@156 $generated@@166 ($generated@@88 0)))
 :pattern ( ($generated@@156 $generated@@166 ($generated@@88 0)))
)))
(assert  (and (= ($generated@@1 $generated@@169) 16) (forall (($generated@@170 T@U) ($generated@@171 T@U) ) (! (= (type ($generated@@168 $generated@@170 $generated@@171)) $generated@@72)
 :pattern ( ($generated@@168 $generated@@170 $generated@@171))
))))
(assert (forall (($generated@@172 T@U) ($generated@@173 T@U) ($generated@@174 T@U) ) (!  (=> (and (and (and (= (type $generated@@172) $generated@@72) (= (type $generated@@173) $generated@@72)) (= (type $generated@@174) $generated@@169)) ($generated@@156 $generated@@174 ($generated@@168 $generated@@172 $generated@@173))) ($generated@@167 $generated@@174))
 :pattern ( ($generated@@167 $generated@@174) ($generated@@156 $generated@@174 ($generated@@168 $generated@@172 $generated@@173)))
)))
(assert  (and (and (= ($generated@@1 $generated@@178) 17) (forall (($generated@@179 T@U) ) (! (= (type ($generated@@176 $generated@@179)) $generated@@178)
 :pattern ( ($generated@@176 $generated@@179))
))) (forall (($generated@@180 T@U) ) (! (= (type ($generated@@177 $generated@@180)) $generated@@178)
 :pattern ( ($generated@@177 $generated@@180))
))))
(assert (forall (($generated@@181 T@U) ($generated@@182 T@U) ) (!  (=> (and (and (= (type $generated@@181) $generated@@169) (= (type $generated@@182) $generated@@169)) true) (= ($generated@@175 $generated@@181 $generated@@182)  (and (= ($generated@@176 $generated@@181) ($generated@@176 $generated@@182)) (= ($generated@@177 $generated@@181) ($generated@@177 $generated@@182)))))
 :pattern ( ($generated@@175 $generated@@181 $generated@@182))
)))
(assert (forall (($generated@@185 T@U) ) (! (= (type ($generated@@183 $generated@@185)) $generated@@72)
 :pattern ( ($generated@@183 $generated@@185))
)))
(assert (forall (($generated@@186 T@U) ($generated@@187 T@U) ) (!  (=> (and (and (= (type $generated@@186) ($generated@@89 $generated@@178 $generated@@2)) (= (type $generated@@187) $generated@@72)) ($generated@@156 $generated@@186 ($generated@@183 $generated@@187))) ($generated@@184 $generated@@186))
 :pattern ( ($generated@@156 $generated@@186 ($generated@@183 $generated@@187)))
)))
(assert (forall (($generated@@188 T@U) ) (!  (=> (= (type $generated@@188) $generated@@90) (= ($generated@@156 $generated@@188 $generated@@149)  (or (= $generated@@188 $generated@@150) (= ($generated@@155 $generated@@188) $generated@@149))))
 :pattern ( ($generated@@156 $generated@@188 $generated@@149))
)))
(assert (= (type $generated@@189) $generated@@72))
(assert (forall (($generated@@190 T@U) ($generated@@191 T@U) ) (!  (=> (and (= (type $generated@@190) $generated@@90) (= (type $generated@@191) ($generated@@89 $generated@@90 $generated@@91))) (= ($generated@@87 $generated@@190 $generated@@189 $generated@@191) ($generated@@87 $generated@@190 $generated@@149 $generated@@191)))
 :pattern ( ($generated@@87 $generated@@190 $generated@@189 $generated@@191))
)))
(assert (forall (($generated@@194 T@U) ($generated@@195 T@U) ) (! (= (type ($generated@@192 $generated@@194 $generated@@195)) $generated@@169)
 :pattern ( ($generated@@192 $generated@@194 $generated@@195))
)))
(assert (forall (($generated@@196 T@U) ($generated@@197 T@U) ($generated@@198 T@U) ($generated@@199 T@U) ) (!  (=> (and (and (and (= (type $generated@@196) $generated@@72) (= (type $generated@@197) $generated@@72)) (= (type $generated@@198) $generated@@178)) (= (type $generated@@199) $generated@@178)) (= ($generated@@156 ($generated@@192 $generated@@198 $generated@@199) ($generated@@168 $generated@@196 $generated@@197))  (and ($generated@@193 $generated@@198 $generated@@196) ($generated@@193 $generated@@199 $generated@@197))))
 :pattern ( ($generated@@156 ($generated@@192 $generated@@198 $generated@@199) ($generated@@168 $generated@@196 $generated@@197)))
)))
(assert (= ($generated@@82 $generated@@153) 0))
(assert (forall (($generated@@201 T@T) ($generated@@202 T@U) ($generated@@203 T@U) ) (! (= (type ($generated@@200 $generated@@201 $generated@@202 $generated@@203)) ($generated@@74 $generated@@201))
 :pattern ( ($generated@@200 $generated@@201 $generated@@202 $generated@@203))
)))
(assert (= ($generated@@200 $generated@@2 $generated@@64 $generated@@69) $generated@@153))
(assert  (not ($generated@@204 $generated@@153)))
(assert (= ($generated@@82 $generated@@160) 0))
(assert (= ($generated@@200 $generated@@2 $generated@@64 $generated@@70) $generated@@160))
(assert  (not ($generated@@204 $generated@@160)))
(assert (= ($generated@@82 $generated@@163) 0))
(assert (= ($generated@@200 $generated@@2 $generated@@64 $generated@@71) $generated@@163))
(assert  (not ($generated@@204 $generated@@163)))
(assert (forall (($generated@@205 T@U) ($generated@@206 T@U) ) (!  (=> (and (= (type $generated@@205) $generated@@169) (= (type $generated@@206) $generated@@169)) (= ($generated@@175 $generated@@205 $generated@@206) (= $generated@@205 $generated@@206)))
 :pattern ( ($generated@@175 $generated@@205 $generated@@206))
)))
(assert (forall (($generated@@208 T@U) ) (! (= (type ($generated@@207 $generated@@208)) $generated@@72)
 :pattern ( ($generated@@207 $generated@@208))
)))
(assert (forall (($generated@@209 T@U) ($generated@@210 T@U) ) (!  (=> (and (= (type $generated@@209) ($generated@@89 $generated@@178 $generated@@4)) (= (type $generated@@210) $generated@@72)) (= ($generated@@156 $generated@@209 ($generated@@207 $generated@@210)) (forall (($generated@@211 T@U) ) (!  (=> (and (= (type $generated@@211) $generated@@178) ($generated@@0 ($generated@@94 $generated@@209 $generated@@211))) ($generated@@193 $generated@@211 $generated@@210))
 :pattern ( ($generated@@94 $generated@@209 $generated@@211))
))))
 :pattern ( ($generated@@156 $generated@@209 ($generated@@207 $generated@@210)))
)))
(assert (forall (($generated@@213 T@U) ) (! (= (type ($generated@@212 $generated@@213)) $generated@@72)
 :pattern ( ($generated@@212 $generated@@213))
)))
(assert (forall (($generated@@214 T@U) ($generated@@215 T@U) ) (!  (=> (and (= (type $generated@@214) ($generated@@89 $generated@@178 $generated@@4)) (= (type $generated@@215) $generated@@72)) (= ($generated@@156 $generated@@214 ($generated@@212 $generated@@215)) (forall (($generated@@216 T@U) ) (!  (=> (and (= (type $generated@@216) $generated@@178) ($generated@@0 ($generated@@94 $generated@@214 $generated@@216))) ($generated@@193 $generated@@216 $generated@@215))
 :pattern ( ($generated@@94 $generated@@214 $generated@@216))
))))
 :pattern ( ($generated@@156 $generated@@214 ($generated@@212 $generated@@215)))
)))
(assert (forall (($generated@@218 Real) ) (! (= ($generated@@217 $generated@@218) (to_int $generated@@218))
 :pattern ( ($generated@@217 $generated@@218))
)))
(assert (forall (($generated@@220 Int) ) (! (= ($generated@@219 $generated@@220) $generated@@220)
 :pattern ( ($generated@@219 $generated@@220))
)))
(assert (forall (($generated@@222 Real) ) (! (= ($generated@@221 $generated@@222) $generated@@222)
 :pattern ( ($generated@@221 $generated@@222))
)))
(assert (forall (($generated@@224 T@U) ) (! (let (($generated@@225 (type $generated@@224)))
(= (type ($generated@@223 $generated@@224)) $generated@@225))
 :pattern ( ($generated@@223 $generated@@224))
)))
(assert (forall (($generated@@226 T@U) ) (! (= ($generated@@223 $generated@@226) $generated@@226)
 :pattern ( ($generated@@223 $generated@@226))
)))
(assert (forall (($generated@@228 T@U) ($generated@@229 T@U) ($generated@@230 T@U) ($generated@@231 T@U) ($generated@@232 T@U) ) (!  (=> (and (and (and (and (and (= (type $generated@@228) $generated@@72) (= (type $generated@@229) $generated@@72)) (= (type $generated@@230) $generated@@178)) (= (type $generated@@231) $generated@@178)) (= (type $generated@@232) ($generated@@89 $generated@@90 $generated@@91))) ($generated@@154 $generated@@232)) (= ($generated@@87 ($generated@@192 $generated@@230 $generated@@231) ($generated@@168 $generated@@228 $generated@@229) $generated@@232)  (and ($generated@@227 $generated@@230 $generated@@228 $generated@@232) ($generated@@227 $generated@@231 $generated@@229 $generated@@232))))
 :pattern ( ($generated@@87 ($generated@@192 $generated@@230 $generated@@231) ($generated@@168 $generated@@228 $generated@@229) $generated@@232))
)))
(assert (forall (($generated@@234 T@U) ) (! (= (type ($generated@@233 $generated@@234)) $generated@@77)
 :pattern ( ($generated@@233 $generated@@234))
)))
(assert (forall (($generated@@235 T@U) ) (!  (=> (= (type $generated@@235) $generated@@169) (= ($generated@@167 $generated@@235) (= ($generated@@233 $generated@@235) $generated@@62)))
 :pattern ( ($generated@@167 $generated@@235))
)))
(assert (forall (($generated@@236 T@U) ) (!  (=> (and (= (type $generated@@236) $generated@@169) ($generated@@167 $generated@@236)) (exists (($generated@@237 T@U) ($generated@@238 T@U) ) (!  (and (and (= (type $generated@@237) $generated@@178) (= (type $generated@@238) $generated@@178)) (= $generated@@236 ($generated@@192 $generated@@237 $generated@@238)))
 :no-pattern (type $generated@@237)
 :no-pattern (type $generated@@238)
 :no-pattern ($generated $generated@@237)
 :no-pattern ($generated@@0 $generated@@237)
 :no-pattern ($generated $generated@@238)
 :no-pattern ($generated@@0 $generated@@238)
)))
 :pattern ( ($generated@@167 $generated@@236))
)))
(assert  (and (and (forall (($generated@@243 T@T) ) (= ($generated@@1 ($generated@@241 $generated@@243)) 18)) (forall (($generated@@244 T@T) ) (! (= ($generated@@242 ($generated@@241 $generated@@244)) $generated@@244)
 :pattern ( ($generated@@241 $generated@@244))
))) (forall (($generated@@245 T@T) ) (! (= (type ($generated@@239 $generated@@245)) ($generated@@241 $generated@@245))
 :pattern ( ($generated@@239 $generated@@245))
))))
(assert (forall (($generated@@246 T@T) ) (! (= ($generated@@240 ($generated@@239 $generated@@246)) 0)
 :pattern ( ($generated@@239 $generated@@246))
)))
(assert ($generated@@204 $generated@@60))
(assert (forall (($generated@@248 T@U) ) (! (= (type ($generated@@247 $generated@@248)) $generated@@178)
 :pattern ( ($generated@@247 $generated@@248))
)))
(assert (forall (($generated@@249 T@U) ($generated@@250 T@U) ($generated@@251 T@U) ) (!  (=> (and (= (type $generated@@250) $generated@@72) (= (type $generated@@251) ($generated@@89 $generated@@90 $generated@@91))) (= ($generated@@227 ($generated@@247 $generated@@249) $generated@@250 $generated@@251) ($generated@@87 $generated@@249 $generated@@250 $generated@@251)))
 :pattern ( ($generated@@227 ($generated@@247 $generated@@249) $generated@@250 $generated@@251))
)))
(assert (forall (($generated@@252 T@U) ($generated@@253 T@U) ($generated@@254 T@U) ($generated@@255 T@U) ) (!  (=> (and (and (and (and (and (= (type $generated@@252) ($generated@@89 $generated@@90 $generated@@91)) (= (type $generated@@253) ($generated@@89 $generated@@90 $generated@@91))) (= (type $generated@@254) $generated@@178)) (= (type $generated@@255) $generated@@72)) ($generated@@145 $generated@@252 $generated@@253)) ($generated@@227 $generated@@254 $generated@@255 $generated@@252)) ($generated@@227 $generated@@254 $generated@@255 $generated@@253))
 :pattern ( ($generated@@145 $generated@@252 $generated@@253) ($generated@@227 $generated@@254 $generated@@255 $generated@@252))
)))
(assert (forall (($generated@@256 T@U) ($generated@@257 T@U) ($generated@@258 T@U) ($generated@@259 T@U) ) (!  (=> (and (and (and (and (= (type $generated@@256) ($generated@@89 $generated@@90 $generated@@91)) (= (type $generated@@257) ($generated@@89 $generated@@90 $generated@@91))) (= (type $generated@@259) $generated@@72)) ($generated@@145 $generated@@256 $generated@@257)) ($generated@@87 $generated@@258 $generated@@259 $generated@@256)) ($generated@@87 $generated@@258 $generated@@259 $generated@@257))
 :pattern ( ($generated@@145 $generated@@256 $generated@@257) ($generated@@87 $generated@@258 $generated@@259 $generated@@256))
)))
(assert (forall (($generated@@260 T@U) ($generated@@261 T@U) ) (!  (=> (and (= (type $generated@@260) ($generated@@89 $generated@@90 $generated@@91)) (= (type $generated@@261) $generated@@90)) (=> (and (and ($generated@@154 $generated@@260) (and (not (= $generated@@261 $generated@@150)) (= ($generated@@155 $generated@@261) $generated@@149))) ($generated@@0 ($generated@@96 ($generated@@94 $generated@@260 $generated@@261) $generated@@60))) ($generated@@87 ($generated@@96 ($generated@@94 $generated@@260 $generated@@261) $generated@@153) $generated@@46 $generated@@260)))
 :pattern ( ($generated@@96 ($generated@@94 $generated@@260 $generated@@261) $generated@@153))
)))
(assert (forall (($generated@@262 T@U) ($generated@@263 T@U) ) (!  (=> (and (= (type $generated@@262) ($generated@@89 $generated@@90 $generated@@91)) (= (type $generated@@263) $generated@@90)) (=> (and (and ($generated@@154 $generated@@262) (and (not (= $generated@@263 $generated@@150)) (= ($generated@@155 $generated@@263) $generated@@149))) ($generated@@0 ($generated@@96 ($generated@@94 $generated@@262 $generated@@263) $generated@@60))) ($generated@@87 ($generated@@96 ($generated@@94 $generated@@262 $generated@@263) $generated@@160) $generated@@46 $generated@@262)))
 :pattern ( ($generated@@96 ($generated@@94 $generated@@262 $generated@@263) $generated@@160))
)))
(assert (forall (($generated@@264 T@U) ($generated@@265 T@U) ) (!  (=> (and (= (type $generated@@264) ($generated@@89 $generated@@90 $generated@@91)) (= (type $generated@@265) $generated@@90)) (=> (and (and ($generated@@154 $generated@@264) (and (not (= $generated@@265 $generated@@150)) (= ($generated@@155 $generated@@265) $generated@@149))) ($generated@@0 ($generated@@96 ($generated@@94 $generated@@264 $generated@@265) $generated@@60))) ($generated@@87 ($generated@@96 ($generated@@94 $generated@@264 $generated@@265) $generated@@163) $generated@@46 $generated@@264)))
 :pattern ( ($generated@@96 ($generated@@94 $generated@@264 $generated@@265) $generated@@163))
)))
(assert (forall (($generated@@268 T@T) ) (! (= (type ($generated@@267 $generated@@268)) ($generated@@89 $generated@@268 $generated@@2))
 :pattern ( ($generated@@267 $generated@@268))
)))
(assert (forall (($generated@@269 T@U) ) (! (let (($generated@@270 ($generated@@92 (type $generated@@269))))
 (=> (= (type $generated@@269) ($generated@@89 $generated@@270 $generated@@2)) (and (= (= ($generated@@266 $generated@@269) 0) (= $generated@@269 ($generated@@267 $generated@@270))) (=> (not (= ($generated@@266 $generated@@269) 0)) (exists (($generated@@271 T@U) ) (!  (and (= (type $generated@@271) $generated@@270) (< 0 ($generated ($generated@@94 $generated@@269 $generated@@271))))
 :no-pattern (type $generated@@271)
 :no-pattern ($generated $generated@@271)
 :no-pattern ($generated@@0 $generated@@271)
))))))
 :pattern ( ($generated@@266 $generated@@269))
)))
(assert  (and (and (and (and (forall (($generated@@277 T@T) ($generated@@278 T@T) ) (= ($generated@@1 ($generated@@274 $generated@@277 $generated@@278)) 19)) (forall (($generated@@279 T@T) ($generated@@280 T@T) ) (! (= ($generated@@275 ($generated@@274 $generated@@279 $generated@@280)) $generated@@279)
 :pattern ( ($generated@@274 $generated@@279 $generated@@280))
))) (forall (($generated@@281 T@T) ($generated@@282 T@T) ) (! (= ($generated@@276 ($generated@@274 $generated@@281 $generated@@282)) $generated@@282)
 :pattern ( ($generated@@274 $generated@@281 $generated@@282))
))) (forall (($generated@@283 T@U) ) (! (let (($generated@@284 ($generated@@275 (type $generated@@283))))
(= (type ($generated@@272 $generated@@283)) ($generated@@89 $generated@@284 $generated@@4)))
 :pattern ( ($generated@@272 $generated@@283))
))) (forall (($generated@@285 T@T) ($generated@@286 T@T) ) (! (= (type ($generated@@273 $generated@@285 $generated@@286)) ($generated@@274 $generated@@285 $generated@@286))
 :pattern ( ($generated@@273 $generated@@285 $generated@@286))
))))
(assert (forall (($generated@@287 T@U) ($generated@@288 T@T) ) (! (let (($generated@@289 (type $generated@@287)))
 (not ($generated@@0 ($generated@@94 ($generated@@272 ($generated@@273 $generated@@289 $generated@@288)) $generated@@287))))
 :pattern ( (let (($generated@@289 (type $generated@@287)))
($generated@@94 ($generated@@272 ($generated@@273 $generated@@289 $generated@@288)) $generated@@287)))
)))
(assert  (and (and (and (and (forall (($generated@@295 T@T) ($generated@@296 T@T) ) (= ($generated@@1 ($generated@@292 $generated@@295 $generated@@296)) 20)) (forall (($generated@@297 T@T) ($generated@@298 T@T) ) (! (= ($generated@@293 ($generated@@292 $generated@@297 $generated@@298)) $generated@@297)
 :pattern ( ($generated@@292 $generated@@297 $generated@@298))
))) (forall (($generated@@299 T@T) ($generated@@300 T@T) ) (! (= ($generated@@294 ($generated@@292 $generated@@299 $generated@@300)) $generated@@300)
 :pattern ( ($generated@@292 $generated@@299 $generated@@300))
))) (forall (($generated@@301 T@U) ) (! (let (($generated@@302 ($generated@@293 (type $generated@@301))))
(= (type ($generated@@290 $generated@@301)) ($generated@@89 $generated@@302 $generated@@4)))
 :pattern ( ($generated@@290 $generated@@301))
))) (forall (($generated@@303 T@T) ($generated@@304 T@T) ) (! (= (type ($generated@@291 $generated@@303 $generated@@304)) ($generated@@292 $generated@@303 $generated@@304))
 :pattern ( ($generated@@291 $generated@@303 $generated@@304))
))))
(assert (forall (($generated@@305 T@U) ($generated@@306 T@T) ) (! (let (($generated@@307 (type $generated@@305)))
 (not ($generated@@0 ($generated@@94 ($generated@@290 ($generated@@291 $generated@@307 $generated@@306)) $generated@@305))))
 :pattern ( (let (($generated@@307 (type $generated@@305)))
($generated@@94 ($generated@@290 ($generated@@291 $generated@@307 $generated@@306)) $generated@@305)))
)))
(assert (forall (($generated@@309 T@U) ($generated@@310 T@U) ) (!  (=> (and (and (= (type $generated@@309) ($generated@@89 $generated@@90 $generated@@91)) (= (type $generated@@310) ($generated@@89 $generated@@90 $generated@@91))) ($generated@@308 $generated@@309 $generated@@310)) (and ($generated@@145 $generated@@309 $generated@@310) (forall (($generated@@311 T@U) ($generated@@312 T@U) ) (! (let (($generated@@313 ($generated@@75 (type $generated@@312))))
 (=> (and (and (= (type $generated@@311) $generated@@90) (= (type $generated@@312) ($generated@@74 $generated@@313))) (not ($generated@@204 $generated@@312))) (= ($generated@@96 ($generated@@94 $generated@@309 $generated@@311) $generated@@312) ($generated@@96 ($generated@@94 $generated@@310 $generated@@311) $generated@@312))))
 :pattern ( ($generated@@96 ($generated@@94 $generated@@310 $generated@@311) $generated@@312))
))))
 :pattern ( ($generated@@308 $generated@@309 $generated@@310))
)))
(assert (forall (($generated@@314 T@U) ) (! (let (($generated@@315 ($generated@@92 (type $generated@@314))))
 (=> (= (type $generated@@314) ($generated@@89 $generated@@315 $generated@@2)) (= ($generated@@184 $generated@@314) (forall (($generated@@316 T@U) ) (!  (=> (= (type $generated@@316) $generated@@315) (and (<= 0 ($generated ($generated@@94 $generated@@314 $generated@@316))) (<= ($generated ($generated@@94 $generated@@314 $generated@@316)) ($generated@@266 $generated@@314))))
 :pattern ( ($generated@@94 $generated@@314 $generated@@316))
)))))
 :pattern ( ($generated@@184 $generated@@314))
)))
(assert (forall (($generated@@318 T@T) ($generated@@319 T@U) ) (! (= (type ($generated@@317 $generated@@318 $generated@@319)) $generated@@318)
 :pattern ( ($generated@@317 $generated@@318 $generated@@319))
)))
(assert (forall (($generated@@320 T@U) ) (!  (=> (and (= (type $generated@@320) $generated@@178) ($generated@@193 $generated@@320 $generated@@149)) (and (= ($generated@@247 ($generated@@317 $generated@@90 $generated@@320)) $generated@@320) ($generated@@156 ($generated@@317 $generated@@90 $generated@@320) $generated@@149)))
 :pattern ( ($generated@@193 $generated@@320 $generated@@149))
)))
(assert (forall (($generated@@321 T@U) ) (!  (=> (and (= (type $generated@@321) $generated@@178) ($generated@@193 $generated@@321 $generated@@189)) (and (= ($generated@@247 ($generated@@317 $generated@@90 $generated@@321)) $generated@@321) ($generated@@156 ($generated@@317 $generated@@90 $generated@@321) $generated@@189)))
 :pattern ( ($generated@@193 $generated@@321 $generated@@189))
)))
(assert (forall (($generated@@322 T@U) ) (!  (=> (= (type $generated@@322) $generated@@90) (= ($generated@@156 $generated@@322 $generated@@189)  (and ($generated@@156 $generated@@322 $generated@@149) (not (= $generated@@322 $generated@@150)))))
 :pattern ( ($generated@@156 $generated@@322 $generated@@189))
)))
(assert (forall (($generated@@323 T@U) ) (! (let (($generated@@324 ($generated@@276 (type $generated@@323))))
(let (($generated@@325 ($generated@@275 (type $generated@@323))))
 (=> (= (type $generated@@323) ($generated@@274 $generated@@325 $generated@@324)) (or (= $generated@@323 ($generated@@273 $generated@@325 $generated@@324)) (exists (($generated@@326 T@U) ) (!  (and (= (type $generated@@326) $generated@@325) ($generated@@0 ($generated@@94 ($generated@@272 $generated@@323) $generated@@326)))
 :no-pattern (type $generated@@326)
 :no-pattern ($generated $generated@@326)
 :no-pattern ($generated@@0 $generated@@326)
))))))
 :pattern ( ($generated@@272 $generated@@323))
)))
(assert (forall (($generated@@328 T@U) ) (! (let (($generated@@329 ($generated@@276 (type $generated@@328))))
(= (type ($generated@@327 $generated@@328)) ($generated@@89 $generated@@329 $generated@@4)))
 :pattern ( ($generated@@327 $generated@@328))
)))
(assert (forall (($generated@@330 T@U) ) (! (let (($generated@@331 ($generated@@276 (type $generated@@330))))
(let (($generated@@332 ($generated@@275 (type $generated@@330))))
 (=> (= (type $generated@@330) ($generated@@274 $generated@@332 $generated@@331)) (or (= $generated@@330 ($generated@@273 $generated@@332 $generated@@331)) (exists (($generated@@333 T@U) ) (!  (and (= (type $generated@@333) $generated@@331) ($generated@@0 ($generated@@94 ($generated@@327 $generated@@330) $generated@@333)))
 :no-pattern (type $generated@@333)
 :no-pattern ($generated $generated@@333)
 :no-pattern ($generated@@0 $generated@@333)
))))))
 :pattern ( ($generated@@327 $generated@@330))
)))
(assert (forall (($generated@@334 T@U) ) (! (let (($generated@@335 ($generated@@294 (type $generated@@334))))
(let (($generated@@336 ($generated@@293 (type $generated@@334))))
 (=> (= (type $generated@@334) ($generated@@292 $generated@@336 $generated@@335)) (or (= $generated@@334 ($generated@@291 $generated@@336 $generated@@335)) (exists (($generated@@337 T@U) ) (!  (and (= (type $generated@@337) $generated@@336) ($generated@@0 ($generated@@94 ($generated@@290 $generated@@334) $generated@@337)))
 :no-pattern (type $generated@@337)
 :no-pattern ($generated $generated@@337)
 :no-pattern ($generated@@0 $generated@@337)
))))))
 :pattern ( ($generated@@290 $generated@@334))
)))
(assert (forall (($generated@@339 T@U) ) (! (let (($generated@@340 ($generated@@294 (type $generated@@339))))
(= (type ($generated@@338 $generated@@339)) ($generated@@89 $generated@@340 $generated@@4)))
 :pattern ( ($generated@@338 $generated@@339))
)))
(assert (forall (($generated@@341 T@U) ) (! (let (($generated@@342 ($generated@@294 (type $generated@@341))))
(let (($generated@@343 ($generated@@293 (type $generated@@341))))
 (=> (= (type $generated@@341) ($generated@@292 $generated@@343 $generated@@342)) (or (= $generated@@341 ($generated@@291 $generated@@343 $generated@@342)) (exists (($generated@@344 T@U) ) (!  (and (= (type $generated@@344) $generated@@342) ($generated@@0 ($generated@@94 ($generated@@338 $generated@@341) $generated@@344)))
 :no-pattern (type $generated@@344)
 :no-pattern ($generated $generated@@344)
 :no-pattern ($generated@@0 $generated@@344)
))))))
 :pattern ( ($generated@@338 $generated@@341))
)))
(assert (forall (($generated@@345 T@U) ($generated@@346 T@U) ) (!  (=> (and (= (type $generated@@345) ($generated@@89 $generated@@178 $generated@@2)) (= (type $generated@@346) $generated@@72)) (= ($generated@@156 $generated@@345 ($generated@@183 $generated@@346)) (forall (($generated@@347 T@U) ) (!  (=> (and (= (type $generated@@347) $generated@@178) (< 0 ($generated ($generated@@94 $generated@@345 $generated@@347)))) ($generated@@193 $generated@@347 $generated@@346))
 :pattern ( ($generated@@94 $generated@@345 $generated@@347))
))))
 :pattern ( ($generated@@156 $generated@@345 ($generated@@183 $generated@@346)))
)))
(assert (forall (($generated@@348 T@U) ($generated@@349 T@U) ($generated@@350 T@U) ) (!  (=> (and (and (= (type $generated@@348) ($generated@@89 $generated@@178 $generated@@4)) (= (type $generated@@349) $generated@@72)) (= (type $generated@@350) ($generated@@89 $generated@@90 $generated@@91))) (= ($generated@@87 $generated@@348 ($generated@@207 $generated@@349) $generated@@350) (forall (($generated@@351 T@U) ) (!  (=> (and (= (type $generated@@351) $generated@@178) ($generated@@0 ($generated@@94 $generated@@348 $generated@@351))) ($generated@@227 $generated@@351 $generated@@349 $generated@@350))
 :pattern ( ($generated@@94 $generated@@348 $generated@@351))
))))
 :pattern ( ($generated@@87 $generated@@348 ($generated@@207 $generated@@349) $generated@@350))
)))
(assert (forall (($generated@@352 T@U) ($generated@@353 T@U) ($generated@@354 T@U) ) (!  (=> (and (and (= (type $generated@@352) ($generated@@89 $generated@@178 $generated@@4)) (= (type $generated@@353) $generated@@72)) (= (type $generated@@354) ($generated@@89 $generated@@90 $generated@@91))) (= ($generated@@87 $generated@@352 ($generated@@212 $generated@@353) $generated@@354) (forall (($generated@@355 T@U) ) (!  (=> (and (= (type $generated@@355) $generated@@178) ($generated@@0 ($generated@@94 $generated@@352 $generated@@355))) ($generated@@227 $generated@@355 $generated@@353 $generated@@354))
 :pattern ( ($generated@@94 $generated@@352 $generated@@355))
))))
 :pattern ( ($generated@@87 $generated@@352 ($generated@@212 $generated@@353) $generated@@354))
)))
(assert (forall (($generated@@356 T@U) ) (! (let (($generated@@357 (type $generated@@356)))
(= ($generated ($generated@@94 ($generated@@267 $generated@@357) $generated@@356)) 0))
 :pattern ( (let (($generated@@357 (type $generated@@356)))
($generated@@94 ($generated@@267 $generated@@357) $generated@@356)))
)))
(assert  (and (forall (($generated@@360 T@U) ) (! (= (type ($generated@@358 $generated@@360)) ($generated@@89 $generated@@178 $generated@@4))
 :pattern ( ($generated@@358 $generated@@360))
)) (forall (($generated@@361 T@U) ) (! (let (($generated@@362 ($generated@@276 (type $generated@@361))))
(let (($generated@@363 ($generated@@275 (type $generated@@361))))
(= (type ($generated@@359 $generated@@361)) ($generated@@89 $generated@@363 $generated@@362))))
 :pattern ( ($generated@@359 $generated@@361))
))))
(assert (forall (($generated@@364 T@U) ($generated@@365 T@U) ) (!  (=> (and (= (type $generated@@364) ($generated@@274 $generated@@178 $generated@@178)) (= (type $generated@@365) $generated@@178)) (= ($generated@@0 ($generated@@94 ($generated@@358 $generated@@364) $generated@@365))  (and ($generated@@0 ($generated@@94 ($generated@@272 $generated@@364) ($generated@@176 ($generated@@317 $generated@@169 $generated@@365)))) (= ($generated@@94 ($generated@@359 $generated@@364) ($generated@@176 ($generated@@317 $generated@@169 $generated@@365))) ($generated@@177 ($generated@@317 $generated@@169 $generated@@365))))))
 :pattern ( ($generated@@94 ($generated@@358 $generated@@364) $generated@@365))
)))
(assert  (and (forall (($generated@@368 T@U) ) (! (= (type ($generated@@366 $generated@@368)) ($generated@@89 $generated@@178 $generated@@4))
 :pattern ( ($generated@@366 $generated@@368))
)) (forall (($generated@@369 T@U) ) (! (let (($generated@@370 ($generated@@294 (type $generated@@369))))
(let (($generated@@371 ($generated@@293 (type $generated@@369))))
(= (type ($generated@@367 $generated@@369)) ($generated@@89 $generated@@371 $generated@@370))))
 :pattern ( ($generated@@367 $generated@@369))
))))
(assert (forall (($generated@@372 T@U) ($generated@@373 T@U) ) (!  (=> (and (= (type $generated@@372) ($generated@@292 $generated@@178 $generated@@178)) (= (type $generated@@373) $generated@@178)) (= ($generated@@0 ($generated@@94 ($generated@@366 $generated@@372) $generated@@373))  (and ($generated@@0 ($generated@@94 ($generated@@290 $generated@@372) ($generated@@176 ($generated@@317 $generated@@169 $generated@@373)))) (= ($generated@@94 ($generated@@367 $generated@@372) ($generated@@176 ($generated@@317 $generated@@169 $generated@@373))) ($generated@@177 ($generated@@317 $generated@@169 $generated@@373))))))
 :pattern ( ($generated@@94 ($generated@@366 $generated@@372) $generated@@373))
)))
(assert (forall (($generated@@374 T@U) ($generated@@375 T@U) ) (! (let (($generated@@376 (type $generated@@375)))
(let (($generated@@377 ($generated@@275 (type $generated@@374))))
 (=> (= (type $generated@@374) ($generated@@274 $generated@@377 $generated@@376)) (= ($generated@@0 ($generated@@94 ($generated@@327 $generated@@374) $generated@@375)) (exists (($generated@@378 T@U) ) (!  (and (= (type $generated@@378) $generated@@377) (and ($generated@@0 ($generated@@94 ($generated@@272 $generated@@374) $generated@@378)) (= $generated@@375 ($generated@@94 ($generated@@359 $generated@@374) $generated@@378))))
 :pattern ( ($generated@@94 ($generated@@272 $generated@@374) $generated@@378))
 :pattern ( ($generated@@94 ($generated@@359 $generated@@374) $generated@@378))
))))))
 :pattern ( ($generated@@94 ($generated@@327 $generated@@374) $generated@@375))
)))
(assert (forall (($generated@@379 T@U) ($generated@@380 T@U) ) (! (let (($generated@@381 (type $generated@@380)))
(let (($generated@@382 ($generated@@293 (type $generated@@379))))
 (=> (= (type $generated@@379) ($generated@@292 $generated@@382 $generated@@381)) (= ($generated@@0 ($generated@@94 ($generated@@338 $generated@@379) $generated@@380)) (exists (($generated@@383 T@U) ) (!  (and (= (type $generated@@383) $generated@@382) (and ($generated@@0 ($generated@@94 ($generated@@290 $generated@@379) $generated@@383)) (= $generated@@380 ($generated@@94 ($generated@@367 $generated@@379) $generated@@383))))
 :pattern ( ($generated@@94 ($generated@@290 $generated@@379) $generated@@383))
 :pattern ( ($generated@@94 ($generated@@367 $generated@@379) $generated@@383))
))))))
 :pattern ( ($generated@@94 ($generated@@338 $generated@@379) $generated@@380))
)))
(assert (forall (($generated@@385 T@U) ($generated@@386 T@U) ) (! (= (type ($generated@@384 $generated@@385 $generated@@386)) $generated@@72)
 :pattern ( ($generated@@384 $generated@@385 $generated@@386))
)))
(assert (forall (($generated@@387 T@U) ($generated@@388 T@U) ($generated@@389 T@U) ($generated@@390 T@U) ) (!  (=> (and (and (and (= (type $generated@@387) ($generated@@274 $generated@@178 $generated@@178)) (= (type $generated@@388) $generated@@72)) (= (type $generated@@389) $generated@@72)) (= (type $generated@@390) ($generated@@89 $generated@@90 $generated@@91))) (= ($generated@@87 $generated@@387 ($generated@@384 $generated@@388 $generated@@389) $generated@@390) (forall (($generated@@391 T@U) ) (!  (=> (and (= (type $generated@@391) $generated@@178) ($generated@@0 ($generated@@94 ($generated@@272 $generated@@387) $generated@@391))) (and ($generated@@227 ($generated@@94 ($generated@@359 $generated@@387) $generated@@391) $generated@@389 $generated@@390) ($generated@@227 $generated@@391 $generated@@388 $generated@@390)))
 :pattern ( ($generated@@94 ($generated@@359 $generated@@387) $generated@@391))
 :pattern ( ($generated@@94 ($generated@@272 $generated@@387) $generated@@391))
))))
 :pattern ( ($generated@@87 $generated@@387 ($generated@@384 $generated@@388 $generated@@389) $generated@@390))
)))
(assert (forall (($generated@@393 T@U) ($generated@@394 T@U) ) (! (= (type ($generated@@392 $generated@@393 $generated@@394)) $generated@@72)
 :pattern ( ($generated@@392 $generated@@393 $generated@@394))
)))
(assert (forall (($generated@@395 T@U) ($generated@@396 T@U) ($generated@@397 T@U) ($generated@@398 T@U) ) (!  (=> (and (and (and (= (type $generated@@395) ($generated@@292 $generated@@178 $generated@@178)) (= (type $generated@@396) $generated@@72)) (= (type $generated@@397) $generated@@72)) (= (type $generated@@398) ($generated@@89 $generated@@90 $generated@@91))) (= ($generated@@87 $generated@@395 ($generated@@392 $generated@@396 $generated@@397) $generated@@398) (forall (($generated@@399 T@U) ) (!  (=> (and (= (type $generated@@399) $generated@@178) ($generated@@0 ($generated@@94 ($generated@@290 $generated@@395) $generated@@399))) (and ($generated@@227 ($generated@@94 ($generated@@367 $generated@@395) $generated@@399) $generated@@397 $generated@@398) ($generated@@227 $generated@@399 $generated@@396 $generated@@398)))
 :pattern ( ($generated@@94 ($generated@@367 $generated@@395) $generated@@399))
 :pattern ( ($generated@@94 ($generated@@290 $generated@@395) $generated@@399))
))))
 :pattern ( ($generated@@87 $generated@@395 ($generated@@392 $generated@@396 $generated@@397) $generated@@398))
)))
(assert (forall (($generated@@401 Int) ) (! (= ($generated@@400 $generated@@401) (to_real $generated@@401))
 :pattern ( ($generated@@400 $generated@@401))
)))
(assert (forall (($generated@@402 T@U) ($generated@@403 T@U) ($generated@@404 T@U) ) (!  (=> (and (and (and (and (= (type $generated@@402) ($generated@@89 $generated@@90 $generated@@91)) (= (type $generated@@403) ($generated@@89 $generated@@90 $generated@@91))) (= (type $generated@@404) ($generated@@89 $generated@@90 $generated@@91))) (not (= $generated@@402 $generated@@404))) (and ($generated@@145 $generated@@402 $generated@@403) ($generated@@145 $generated@@403 $generated@@404))) ($generated@@145 $generated@@402 $generated@@404))
 :pattern ( ($generated@@145 $generated@@402 $generated@@403) ($generated@@145 $generated@@403 $generated@@404))
)))
(assert (forall (($generated@@406 T@T) ) (! (= (type ($generated@@405 $generated@@406)) ($generated@@89 $generated@@406 $generated@@4))
 :pattern ( ($generated@@405 $generated@@406))
)))
(assert (forall (($generated@@407 T@U) ) (! (let (($generated@@408 ($generated@@294 (type $generated@@407))))
(let (($generated@@409 ($generated@@293 (type $generated@@407))))
 (=> (= (type $generated@@407) ($generated@@292 $generated@@409 $generated@@408)) (= (= $generated@@407 ($generated@@291 $generated@@409 $generated@@408)) (= ($generated@@290 $generated@@407) ($generated@@405 $generated@@409))))))
 :pattern ( ($generated@@290 $generated@@407))
)))
(assert (forall (($generated@@410 T@U) ) (! (let (($generated@@411 ($generated@@294 (type $generated@@410))))
(let (($generated@@412 ($generated@@293 (type $generated@@410))))
 (=> (= (type $generated@@410) ($generated@@292 $generated@@412 $generated@@411)) (= (= $generated@@410 ($generated@@291 $generated@@412 $generated@@411)) (= ($generated@@338 $generated@@410) ($generated@@405 $generated@@411))))))
 :pattern ( ($generated@@338 $generated@@410))
)))
(assert (forall (($generated@@413 T@U) ) (! (let (($generated@@414 ($generated@@294 (type $generated@@413))))
(let (($generated@@415 ($generated@@293 (type $generated@@413))))
 (=> (= (type $generated@@413) ($generated@@292 $generated@@415 $generated@@414)) (= (= $generated@@413 ($generated@@291 $generated@@415 $generated@@414)) (= ($generated@@366 $generated@@413) ($generated@@405 $generated@@178))))))
 :pattern ( ($generated@@366 $generated@@413))
)))
(assert (forall (($generated@@416 T@U) ) (! (let (($generated@@417 ($generated@@276 (type $generated@@416))))
(let (($generated@@418 ($generated@@275 (type $generated@@416))))
 (=> (= (type $generated@@416) ($generated@@274 $generated@@418 $generated@@417)) (or (= $generated@@416 ($generated@@273 $generated@@418 $generated@@417)) (exists (($generated@@419 T@U) ($generated@@420 T@U) ) (!  (and (and (= (type $generated@@419) $generated@@178) (= (type $generated@@420) $generated@@178)) ($generated@@0 ($generated@@94 ($generated@@358 $generated@@416) ($generated@@247 ($generated@@192 $generated@@419 $generated@@420)))))
 :no-pattern (type $generated@@419)
 :no-pattern (type $generated@@420)
 :no-pattern ($generated $generated@@419)
 :no-pattern ($generated@@0 $generated@@419)
 :no-pattern ($generated $generated@@420)
 :no-pattern ($generated@@0 $generated@@420)
))))))
 :pattern ( ($generated@@358 $generated@@416))
)))
(assert (forall (($generated@@421 T@U) ) (! (let (($generated@@422 ($generated@@294 (type $generated@@421))))
(let (($generated@@423 ($generated@@293 (type $generated@@421))))
 (=> (= (type $generated@@421) ($generated@@292 $generated@@423 $generated@@422)) (or (= $generated@@421 ($generated@@291 $generated@@423 $generated@@422)) (exists (($generated@@424 T@U) ($generated@@425 T@U) ) (!  (and (and (= (type $generated@@424) $generated@@178) (= (type $generated@@425) $generated@@178)) ($generated@@0 ($generated@@94 ($generated@@366 $generated@@421) ($generated@@247 ($generated@@192 $generated@@424 $generated@@425)))))
 :no-pattern (type $generated@@424)
 :no-pattern (type $generated@@425)
 :no-pattern ($generated $generated@@424)
 :no-pattern ($generated@@0 $generated@@424)
 :no-pattern ($generated $generated@@425)
 :no-pattern ($generated@@0 $generated@@425)
))))))
 :pattern ( ($generated@@366 $generated@@421))
)))
(assert (forall (($generated@@427 T@U) ) (! (= (type ($generated@@426 $generated@@427)) $generated@@78)
 :pattern ( ($generated@@426 $generated@@427))
)))
(assert (forall (($generated@@428 T@U) ($generated@@429 T@U) ($generated@@430 T@T) ) (!  (=> (and (= (type $generated@@428) $generated@@78) (= (type $generated@@429) $generated@@76)) (and (= ($generated@@426 ($generated@@200 $generated@@430 $generated@@428 $generated@@429)) $generated@@428) (= ($generated@@85 ($generated@@200 $generated@@430 $generated@@428 $generated@@429)) $generated@@429)))
 :pattern ( ($generated@@200 $generated@@430 $generated@@428 $generated@@429))
)))
(assert (forall (($generated@@431 T@U) ) (!  (=> (and (= (type $generated@@431) $generated@@178) ($generated@@193 $generated@@431 $generated@@46)) (and (= ($generated@@247 ($generated@@317 $generated@@2 $generated@@431)) $generated@@431) ($generated@@156 ($generated@@317 $generated@@2 $generated@@431) $generated@@46)))
 :pattern ( ($generated@@193 $generated@@431 $generated@@46))
)))
(assert (forall (($generated@@432 T@U) ) (!  (=> (and (= (type $generated@@432) $generated@@178) ($generated@@193 $generated@@432 $generated@@47)) (and (= ($generated@@247 ($generated@@317 $generated@@3 $generated@@432)) $generated@@432) ($generated@@156 ($generated@@317 $generated@@3 $generated@@432) $generated@@47)))
 :pattern ( ($generated@@193 $generated@@432 $generated@@47))
)))
(assert (forall (($generated@@433 T@U) ) (!  (=> (and (= (type $generated@@433) $generated@@178) ($generated@@193 $generated@@433 $generated@@44)) (and (= ($generated@@247 ($generated@@317 $generated@@4 $generated@@433)) $generated@@433) ($generated@@156 ($generated@@317 $generated@@4 $generated@@433) $generated@@44)))
 :pattern ( ($generated@@193 $generated@@433 $generated@@44))
)))
(assert (= ($generated@@1 $generated@@434) 21))
(assert (forall (($generated@@435 T@U) ) (!  (=> (and (= (type $generated@@435) $generated@@178) ($generated@@193 $generated@@435 $generated@@45)) (and (= ($generated@@247 ($generated@@317 $generated@@434 $generated@@435)) $generated@@435) ($generated@@156 ($generated@@317 $generated@@434 $generated@@435) $generated@@45)))
 :pattern ( ($generated@@193 $generated@@435 $generated@@45))
)))
(assert (forall (($generated@@436 T@U) ($generated@@437 T@U) ) (!  (=> (= (type $generated@@437) $generated@@72) (= ($generated@@193 ($generated@@247 $generated@@436) $generated@@437) ($generated@@156 $generated@@436 $generated@@437)))
 :pattern ( ($generated@@193 ($generated@@247 $generated@@436) $generated@@437))
)))
(assert (forall (($generated@@438 T@U) ) (! (let (($generated@@439 ($generated@@92 (type $generated@@438))))
 (=> (= (type $generated@@438) ($generated@@89 $generated@@439 $generated@@2)) (<= 0 ($generated@@266 $generated@@438))))
 :pattern ( ($generated@@266 $generated@@438))
)))
(assert (forall (($generated@@440 T@U) ) (! (let (($generated@@441 ($generated@@242 (type $generated@@440))))
 (=> (= (type $generated@@440) ($generated@@241 $generated@@441)) (<= 0 ($generated@@240 $generated@@440))))
 :pattern ( ($generated@@240 $generated@@440))
)))
(assert (forall (($generated@@443 T@U) ) (! (= (type ($generated@@442 $generated@@443)) $generated@@72)
 :pattern ( ($generated@@442 $generated@@443))
)))
(assert (forall (($generated@@444 T@U) ($generated@@445 T@U) ) (!  (=> (and (= (type $generated@@444) $generated@@72) (= (type $generated@@445) $generated@@72)) (= ($generated@@442 ($generated@@384 $generated@@444 $generated@@445)) $generated@@444))
 :pattern ( ($generated@@384 $generated@@444 $generated@@445))
)))
(assert (forall (($generated@@447 T@U) ) (! (= (type ($generated@@446 $generated@@447)) $generated@@72)
 :pattern ( ($generated@@446 $generated@@447))
)))
(assert (forall (($generated@@448 T@U) ($generated@@449 T@U) ) (!  (=> (and (= (type $generated@@448) $generated@@72) (= (type $generated@@449) $generated@@72)) (= ($generated@@446 ($generated@@384 $generated@@448 $generated@@449)) $generated@@449))
 :pattern ( ($generated@@384 $generated@@448 $generated@@449))
)))
(assert (forall (($generated@@450 T@U) ($generated@@451 T@U) ) (!  (=> (and (= (type $generated@@450) $generated@@72) (= (type $generated@@451) $generated@@72)) (= ($generated@@83 ($generated@@384 $generated@@450 $generated@@451)) $generated@@58))
 :pattern ( ($generated@@384 $generated@@450 $generated@@451))
)))
(assert (forall (($generated@@453 T@U) ) (! (= (type ($generated@@452 $generated@@453)) $generated@@72)
 :pattern ( ($generated@@452 $generated@@453))
)))
(assert (forall (($generated@@454 T@U) ($generated@@455 T@U) ) (!  (=> (and (= (type $generated@@454) $generated@@72) (= (type $generated@@455) $generated@@72)) (= ($generated@@452 ($generated@@392 $generated@@454 $generated@@455)) $generated@@454))
 :pattern ( ($generated@@392 $generated@@454 $generated@@455))
)))
(assert (forall (($generated@@457 T@U) ) (! (= (type ($generated@@456 $generated@@457)) $generated@@72)
 :pattern ( ($generated@@456 $generated@@457))
)))
(assert (forall (($generated@@458 T@U) ($generated@@459 T@U) ) (!  (=> (and (= (type $generated@@458) $generated@@72) (= (type $generated@@459) $generated@@72)) (= ($generated@@456 ($generated@@392 $generated@@458 $generated@@459)) $generated@@459))
 :pattern ( ($generated@@392 $generated@@458 $generated@@459))
)))
(assert (forall (($generated@@460 T@U) ($generated@@461 T@U) ) (!  (=> (and (= (type $generated@@460) $generated@@72) (= (type $generated@@461) $generated@@72)) (= ($generated@@83 ($generated@@392 $generated@@460 $generated@@461)) $generated@@59))
 :pattern ( ($generated@@392 $generated@@460 $generated@@461))
)))
(assert (forall (($generated@@462 T@U) ($generated@@463 T@U) ) (!  (=> (and (= (type $generated@@462) $generated@@178) (= (type $generated@@463) $generated@@178)) (= ($generated@@233 ($generated@@192 $generated@@462 $generated@@463)) $generated@@62))
 :pattern ( ($generated@@192 $generated@@462 $generated@@463))
)))
(assert (forall (($generated@@465 T@U) ) (! (= (type ($generated@@464 $generated@@465)) $generated@@72)
 :pattern ( ($generated@@464 $generated@@465))
)))
(assert (forall (($generated@@466 T@U) ($generated@@467 T@U) ) (!  (=> (and (= (type $generated@@466) $generated@@72) (= (type $generated@@467) $generated@@72)) (= ($generated@@464 ($generated@@168 $generated@@466 $generated@@467)) $generated@@466))
 :pattern ( ($generated@@168 $generated@@466 $generated@@467))
)))
(assert (forall (($generated@@469 T@U) ) (! (= (type ($generated@@468 $generated@@469)) $generated@@72)
 :pattern ( ($generated@@468 $generated@@469))
)))
(assert (forall (($generated@@470 T@U) ($generated@@471 T@U) ) (!  (=> (and (= (type $generated@@470) $generated@@72) (= (type $generated@@471) $generated@@72)) (= ($generated@@468 ($generated@@168 $generated@@470 $generated@@471)) $generated@@471))
 :pattern ( ($generated@@168 $generated@@470 $generated@@471))
)))
(assert (forall (($generated@@472 T@U) ($generated@@473 T@U) ) (!  (=> (and (= (type $generated@@472) $generated@@178) (= (type $generated@@473) $generated@@178)) (= ($generated@@176 ($generated@@192 $generated@@472 $generated@@473)) $generated@@472))
 :pattern ( ($generated@@192 $generated@@472 $generated@@473))
)))
(assert (forall (($generated@@474 T@U) ($generated@@475 T@U) ) (!  (=> (and (= (type $generated@@474) $generated@@178) (= (type $generated@@475) $generated@@178)) (= ($generated@@177 ($generated@@192 $generated@@474 $generated@@475)) $generated@@475))
 :pattern ( ($generated@@192 $generated@@474 $generated@@475))
)))
(assert  (and (forall (($generated@@478 T@U) ) (! (= (type ($generated@@476 $generated@@478)) $generated@@72)
 :pattern ( ($generated@@476 $generated@@478))
)) (forall (($generated@@479 T@U) ($generated@@480 Int) ) (! (let (($generated@@481 ($generated@@242 (type $generated@@479))))
(= (type ($generated@@477 $generated@@479 $generated@@480)) $generated@@481))
 :pattern ( ($generated@@477 $generated@@479 $generated@@480))
))))
(assert (forall (($generated@@482 T@U) ($generated@@483 T@U) ($generated@@484 T@U) ) (!  (=> (and (and (= (type $generated@@482) ($generated@@241 $generated@@178)) (= (type $generated@@483) $generated@@72)) (= (type $generated@@484) ($generated@@89 $generated@@90 $generated@@91))) (= ($generated@@87 $generated@@482 ($generated@@476 $generated@@483) $generated@@484) (forall (($generated@@485 Int) ) (!  (=> (and (<= 0 $generated@@485) (< $generated@@485 ($generated@@240 $generated@@482))) ($generated@@227 ($generated@@477 $generated@@482 $generated@@485) $generated@@483 $generated@@484))
 :pattern ( ($generated@@477 $generated@@482 $generated@@485))
))))
 :pattern ( ($generated@@87 $generated@@482 ($generated@@476 $generated@@483) $generated@@484))
)))
(assert (forall (($generated@@487 Int) ) (! (= ($generated@@486 ($generated@@88 $generated@@487)) $generated@@487)
 :pattern ( ($generated@@88 $generated@@487))
)))
(assert (forall (($generated@@489 T@U) ) (! (= (type ($generated@@488 $generated@@489)) $generated@@72)
 :pattern ( ($generated@@488 $generated@@489))
)))
(assert (forall (($generated@@490 T@U) ) (!  (=> (= (type $generated@@490) $generated@@72) (= ($generated@@488 ($generated@@207 $generated@@490)) $generated@@490))
 :pattern ( ($generated@@207 $generated@@490))
)))
(assert (forall (($generated@@491 T@U) ) (!  (=> (= (type $generated@@491) $generated@@72) (= ($generated@@83 ($generated@@207 $generated@@491)) $generated@@54))
 :pattern ( ($generated@@207 $generated@@491))
)))
(assert (forall (($generated@@493 T@U) ) (! (= (type ($generated@@492 $generated@@493)) $generated@@72)
 :pattern ( ($generated@@492 $generated@@493))
)))
(assert (forall (($generated@@494 T@U) ) (!  (=> (= (type $generated@@494) $generated@@72) (= ($generated@@492 ($generated@@212 $generated@@494)) $generated@@494))
 :pattern ( ($generated@@212 $generated@@494))
)))
(assert (forall (($generated@@495 T@U) ) (!  (=> (= (type $generated@@495) $generated@@72) (= ($generated@@83 ($generated@@212 $generated@@495)) $generated@@55))
 :pattern ( ($generated@@212 $generated@@495))
)))
(assert (forall (($generated@@497 T@U) ) (! (= (type ($generated@@496 $generated@@497)) $generated@@72)
 :pattern ( ($generated@@496 $generated@@497))
)))
(assert (forall (($generated@@498 T@U) ) (!  (=> (= (type $generated@@498) $generated@@72) (= ($generated@@496 ($generated@@183 $generated@@498)) $generated@@498))
 :pattern ( ($generated@@183 $generated@@498))
)))
(assert (forall (($generated@@499 T@U) ) (!  (=> (= (type $generated@@499) $generated@@72) (= ($generated@@83 ($generated@@183 $generated@@499)) $generated@@56))
 :pattern ( ($generated@@183 $generated@@499))
)))
(assert (forall (($generated@@501 T@U) ) (! (= (type ($generated@@500 $generated@@501)) $generated@@72)
 :pattern ( ($generated@@500 $generated@@501))
)))
(assert (forall (($generated@@502 T@U) ) (!  (=> (= (type $generated@@502) $generated@@72) (= ($generated@@500 ($generated@@476 $generated@@502)) $generated@@502))
 :pattern ( ($generated@@476 $generated@@502))
)))
(assert (forall (($generated@@503 T@U) ) (!  (=> (= (type $generated@@503) $generated@@72) (= ($generated@@83 ($generated@@476 $generated@@503)) $generated@@57))
 :pattern ( ($generated@@476 $generated@@503))
)))
(assert (forall (($generated@@504 Int) ) (! (= ($generated@@217 ($generated@@400 $generated@@504)) $generated@@504)
 :pattern ( ($generated@@217 ($generated@@400 $generated@@504)))
)))
(assert (forall (($generated@@505 T@U) ) (! (let (($generated@@506 (type $generated@@505)))
(= ($generated@@317 $generated@@506 ($generated@@247 $generated@@505)) $generated@@505))
 :pattern ( ($generated@@247 $generated@@505))
)))
(assert (forall (($generated@@507 T@U) ($generated@@508 T@U) ($generated@@509 T@U) ) (!  (=> (and (and (= (type $generated@@507) ($generated@@274 $generated@@178 $generated@@178)) (= (type $generated@@508) $generated@@72)) (= (type $generated@@509) $generated@@72)) (= ($generated@@156 $generated@@507 ($generated@@384 $generated@@508 $generated@@509)) (forall (($generated@@510 T@U) ) (!  (=> (and (= (type $generated@@510) $generated@@178) ($generated@@0 ($generated@@94 ($generated@@272 $generated@@507) $generated@@510))) (and ($generated@@193 ($generated@@94 ($generated@@359 $generated@@507) $generated@@510) $generated@@509) ($generated@@193 $generated@@510 $generated@@508)))
 :pattern ( ($generated@@94 ($generated@@359 $generated@@507) $generated@@510))
 :pattern ( ($generated@@94 ($generated@@272 $generated@@507) $generated@@510))
))))
 :pattern ( ($generated@@156 $generated@@507 ($generated@@384 $generated@@508 $generated@@509)))
)))
(assert (forall (($generated@@511 T@U) ($generated@@512 T@U) ($generated@@513 T@U) ) (!  (=> (and (and (= (type $generated@@511) ($generated@@292 $generated@@178 $generated@@178)) (= (type $generated@@512) $generated@@72)) (= (type $generated@@513) $generated@@72)) (= ($generated@@156 $generated@@511 ($generated@@392 $generated@@512 $generated@@513)) (forall (($generated@@514 T@U) ) (!  (=> (and (= (type $generated@@514) $generated@@178) ($generated@@0 ($generated@@94 ($generated@@290 $generated@@511) $generated@@514))) (and ($generated@@193 ($generated@@94 ($generated@@367 $generated@@511) $generated@@514) $generated@@513) ($generated@@193 $generated@@514 $generated@@512)))
 :pattern ( ($generated@@94 ($generated@@367 $generated@@511) $generated@@514))
 :pattern ( ($generated@@94 ($generated@@290 $generated@@511) $generated@@514))
))))
 :pattern ( ($generated@@156 $generated@@511 ($generated@@392 $generated@@512 $generated@@513)))
)))
(assert (forall (($generated@@517 T@U) ($generated@@518 T@U) ) (!  (=> (and (= (type $generated@@517) $generated@@178) (= (type $generated@@518) $generated@@178)) (< ($generated@@515 $generated@@517) ($generated@@516 ($generated@@192 $generated@@517 $generated@@518))))
 :pattern ( ($generated@@192 $generated@@517 $generated@@518))
)))
(assert (forall (($generated@@519 T@U) ($generated@@520 T@U) ) (!  (=> (and (= (type $generated@@519) $generated@@178) (= (type $generated@@520) $generated@@178)) (< ($generated@@515 $generated@@520) ($generated@@516 ($generated@@192 $generated@@519 $generated@@520))))
 :pattern ( ($generated@@192 $generated@@519 $generated@@520))
)))
(assert (forall (($generated@@521 T@U) ($generated@@522 T@U) ($generated@@523 T@U) ) (!  (=> (and (and (and (= (type $generated@@521) $generated@@178) (= (type $generated@@522) $generated@@72)) (= (type $generated@@523) $generated@@72)) ($generated@@193 $generated@@521 ($generated@@384 $generated@@522 $generated@@523))) (and (= ($generated@@247 ($generated@@317 ($generated@@274 $generated@@178 $generated@@178) $generated@@521)) $generated@@521) ($generated@@156 ($generated@@317 ($generated@@274 $generated@@178 $generated@@178) $generated@@521) ($generated@@384 $generated@@522 $generated@@523))))
 :pattern ( ($generated@@193 $generated@@521 ($generated@@384 $generated@@522 $generated@@523)))
)))
(assert (forall (($generated@@524 T@U) ($generated@@525 T@U) ($generated@@526 T@U) ) (!  (=> (and (and (and (= (type $generated@@524) $generated@@178) (= (type $generated@@525) $generated@@72)) (= (type $generated@@526) $generated@@72)) ($generated@@193 $generated@@524 ($generated@@392 $generated@@525 $generated@@526))) (and (= ($generated@@247 ($generated@@317 ($generated@@292 $generated@@178 $generated@@178) $generated@@524)) $generated@@524) ($generated@@156 ($generated@@317 ($generated@@292 $generated@@178 $generated@@178) $generated@@524) ($generated@@392 $generated@@525 $generated@@526))))
 :pattern ( ($generated@@193 $generated@@524 ($generated@@392 $generated@@525 $generated@@526)))
)))
(assert (forall (($generated@@527 T@U) ($generated@@528 T@U) ($generated@@529 T@U) ) (!  (=> (and (and (and (= (type $generated@@527) $generated@@72) (= (type $generated@@528) $generated@@72)) (= (type $generated@@529) $generated@@178)) ($generated@@193 $generated@@529 ($generated@@168 $generated@@527 $generated@@528))) (and (= ($generated@@247 ($generated@@317 $generated@@169 $generated@@529)) $generated@@529) ($generated@@156 ($generated@@317 $generated@@169 $generated@@529) ($generated@@168 $generated@@527 $generated@@528))))
 :pattern ( ($generated@@193 $generated@@529 ($generated@@168 $generated@@527 $generated@@528)))
)))
(assert (forall (($generated@@530 T@U) ) (! (let (($generated@@531 (type $generated@@530)))
 (not ($generated@@0 ($generated@@94 ($generated@@405 $generated@@531) $generated@@530))))
 :pattern ( (let (($generated@@531 (type $generated@@530)))
($generated@@94 ($generated@@405 $generated@@531) $generated@@530)))
)))
(assert  (and (and (and (and (and (and (and (forall (($generated@@538 T@T) ($generated@@539 T@T) ) (= ($generated@@1 ($generated@@534 $generated@@538 $generated@@539)) 22)) (forall (($generated@@540 T@T) ($generated@@541 T@T) ) (! (= ($generated@@535 ($generated@@534 $generated@@540 $generated@@541)) $generated@@540)
 :pattern ( ($generated@@534 $generated@@540 $generated@@541))
))) (forall (($generated@@542 T@T) ($generated@@543 T@T) ) (! (= ($generated@@536 ($generated@@534 $generated@@542 $generated@@543)) $generated@@543)
 :pattern ( ($generated@@534 $generated@@542 $generated@@543))
))) (forall (($generated@@544 T@U) ($generated@@545 T@U) ($generated@@546 T@U) ) (! (let (($generated@@547 ($generated@@536 (type $generated@@544))))
(= (type ($generated@@532 $generated@@544 $generated@@545 $generated@@546)) $generated@@547))
 :pattern ( ($generated@@532 $generated@@544 $generated@@545 $generated@@546))
))) (forall (($generated@@548 T@U) ($generated@@549 T@U) ($generated@@550 T@U) ($generated@@551 T@U) ) (! (let (($generated@@552 (type $generated@@551)))
(let (($generated@@553 (type $generated@@549)))
(= (type ($generated@@537 $generated@@548 $generated@@549 $generated@@550 $generated@@551)) ($generated@@534 $generated@@553 $generated@@552))))
 :pattern ( ($generated@@537 $generated@@548 $generated@@549 $generated@@550 $generated@@551))
))) (forall (($generated@@554 T@U) ($generated@@555 T@U) ($generated@@556 T@U) ($generated@@557 T@U) ) (! (let (($generated@@558 ($generated@@536 (type $generated@@554))))
 (=> (= (type $generated@@557) $generated@@558) (= ($generated@@532 ($generated@@537 $generated@@554 $generated@@555 $generated@@556 $generated@@557) $generated@@555 $generated@@556) $generated@@557)))
 :weight 0
))) (and (and (forall (($generated@@559 T@U) ($generated@@560 T@U) ($generated@@561 T@U) ($generated@@562 T@U) ($generated@@563 T@U) ($generated@@564 T@U) ) (!  (or (= $generated@@561 $generated@@563) (= ($generated@@532 ($generated@@537 $generated@@560 $generated@@561 $generated@@562 $generated@@559) $generated@@563 $generated@@564) ($generated@@532 $generated@@560 $generated@@563 $generated@@564)))
 :weight 0
)) (forall (($generated@@565 T@U) ($generated@@566 T@U) ($generated@@567 T@U) ($generated@@568 T@U) ($generated@@569 T@U) ($generated@@570 T@U) ) (!  (or (= $generated@@568 $generated@@570) (= ($generated@@532 ($generated@@537 $generated@@566 $generated@@567 $generated@@568 $generated@@565) $generated@@569 $generated@@570) ($generated@@532 $generated@@566 $generated@@569 $generated@@570)))
 :weight 0
))) (forall (($generated@@571 T@U) ($generated@@572 T@U) ($generated@@573 T@U) ($generated@@574 T@U) ($generated@@575 T@U) ($generated@@576 T@U) ) (!  (or true (= ($generated@@532 ($generated@@537 $generated@@572 $generated@@573 $generated@@574 $generated@@571) $generated@@575 $generated@@576) ($generated@@532 $generated@@572 $generated@@575 $generated@@576)))
 :weight 0
)))) (forall (($generated@@577 T@U) ($generated@@578 T@U) ($generated@@579 T@U) ($generated@@580 T@U) ) (! (= (type ($generated@@533 $generated@@577 $generated@@578 $generated@@579 $generated@@580)) ($generated@@534 $generated@@90 $generated@@4))
 :pattern ( ($generated@@533 $generated@@577 $generated@@578 $generated@@579 $generated@@580))
))))
(assert (forall (($generated@@581 T@U) ($generated@@582 T@U) ($generated@@583 T@U) ($generated@@584 T@U) ($generated@@585 T@U) ($generated@@586 T@U) ) (! (let (($generated@@587 ($generated@@75 (type $generated@@586))))
 (=> (and (and (and (and (and (= (type $generated@@581) $generated@@90) (= (type $generated@@582) ($generated@@89 $generated@@90 $generated@@91))) (= (type $generated@@583) ($generated@@74 $generated@@4))) (= (type $generated@@584) $generated@@90)) (= (type $generated@@585) $generated@@90)) (= (type $generated@@586) ($generated@@74 $generated@@587))) (= ($generated@@0 ($generated@@532 ($generated@@533 $generated@@581 $generated@@582 $generated@@583 $generated@@584) $generated@@585 $generated@@586))  (=> (and (not (= $generated@@585 $generated@@581)) ($generated@@0 ($generated@@96 ($generated@@94 $generated@@582 $generated@@585) $generated@@583))) (= $generated@@585 $generated@@584)))))
 :pattern ( ($generated@@532 ($generated@@533 $generated@@581 $generated@@582 $generated@@583 $generated@@584) $generated@@585 $generated@@586))
)))
(assert (forall (($generated@@589 T@U) ) (! (= (type ($generated@@588 $generated@@589)) $generated@@79)
 :pattern ( ($generated@@588 $generated@@589))
)))
(assert (forall (($generated@@590 T@U) ($generated@@591 T@U) ) (!  (=> (and (= (type $generated@@590) $generated@@72) (= (type $generated@@591) $generated@@72)) (and (= ($generated@@83 ($generated@@168 $generated@@590 $generated@@591)) $generated@@63) (= ($generated@@588 ($generated@@168 $generated@@590 $generated@@591)) $generated@@67)))
 :pattern ( ($generated@@168 $generated@@590 $generated@@591))
)))
(assert (forall (($generated@@592 T@U) ) (!  (=> (= (type $generated@@592) $generated@@169) (= ($generated@@515 ($generated@@247 $generated@@592)) ($generated@@516 $generated@@592)))
 :pattern ( ($generated@@515 ($generated@@247 $generated@@592)))
)))
(assert (forall (($generated@@593 T@U) ) (!  (=> (and (= (type $generated@@593) $generated@@178) ($generated@@193 $generated@@593 ($generated@@88 0))) (and (= ($generated@@247 ($generated@@317 $generated@@2 $generated@@593)) $generated@@593) ($generated@@156 ($generated@@317 ($generated@@89 $generated@@178 $generated@@4) $generated@@593) ($generated@@88 0))))
 :pattern ( ($generated@@193 $generated@@593 ($generated@@88 0)))
)))
(assert (forall (($generated@@594 T@U) ($generated@@595 T@U) ) (!  (=> (and (and (= (type $generated@@594) $generated@@178) (= (type $generated@@595) $generated@@72)) ($generated@@193 $generated@@594 ($generated@@207 $generated@@595))) (and (= ($generated@@247 ($generated@@317 ($generated@@89 $generated@@178 $generated@@4) $generated@@594)) $generated@@594) ($generated@@156 ($generated@@317 ($generated@@89 $generated@@178 $generated@@4) $generated@@594) ($generated@@207 $generated@@595))))
 :pattern ( ($generated@@193 $generated@@594 ($generated@@207 $generated@@595)))
)))
(assert (forall (($generated@@596 T@U) ($generated@@597 T@U) ) (!  (=> (and (and (= (type $generated@@596) $generated@@178) (= (type $generated@@597) $generated@@72)) ($generated@@193 $generated@@596 ($generated@@212 $generated@@597))) (and (= ($generated@@247 ($generated@@317 ($generated@@89 $generated@@178 $generated@@4) $generated@@596)) $generated@@596) ($generated@@156 ($generated@@317 ($generated@@89 $generated@@178 $generated@@4) $generated@@596) ($generated@@212 $generated@@597))))
 :pattern ( ($generated@@193 $generated@@596 ($generated@@212 $generated@@597)))
)))
(assert (forall (($generated@@598 T@U) ($generated@@599 T@U) ) (!  (=> (and (and (= (type $generated@@598) $generated@@178) (= (type $generated@@599) $generated@@72)) ($generated@@193 $generated@@598 ($generated@@183 $generated@@599))) (and (= ($generated@@247 ($generated@@317 ($generated@@89 $generated@@178 $generated@@2) $generated@@598)) $generated@@598) ($generated@@156 ($generated@@317 ($generated@@89 $generated@@178 $generated@@2) $generated@@598) ($generated@@183 $generated@@599))))
 :pattern ( ($generated@@193 $generated@@598 ($generated@@183 $generated@@599)))
)))
(assert (forall (($generated@@600 T@U) ($generated@@601 T@U) ) (!  (=> (and (and (= (type $generated@@600) $generated@@178) (= (type $generated@@601) $generated@@72)) ($generated@@193 $generated@@600 ($generated@@476 $generated@@601))) (and (= ($generated@@247 ($generated@@317 ($generated@@241 $generated@@178) $generated@@600)) $generated@@600) ($generated@@156 ($generated@@317 ($generated@@241 $generated@@178) $generated@@600) ($generated@@476 $generated@@601))))
 :pattern ( ($generated@@193 $generated@@600 ($generated@@476 $generated@@601)))
)))
(assert (forall (($generated@@602 T@U) ($generated@@603 T@U) ($generated@@604 T@U) ($generated@@605 T@U) ) (! (let (($generated@@606 (type $generated@@605)))
 (=> (and (and (and (= (type $generated@@602) ($generated@@89 $generated@@90 $generated@@91)) (= (type $generated@@603) $generated@@90)) (= (type $generated@@604) ($generated@@74 $generated@@606))) ($generated@@154 ($generated@@95 $generated@@602 $generated@@603 ($generated@@97 ($generated@@94 $generated@@602 $generated@@603) $generated@@604 $generated@@605)))) ($generated@@145 $generated@@602 ($generated@@95 $generated@@602 $generated@@603 ($generated@@97 ($generated@@94 $generated@@602 $generated@@603) $generated@@604 $generated@@605)))))
 :pattern ( ($generated@@95 $generated@@602 $generated@@603 ($generated@@97 ($generated@@94 $generated@@602 $generated@@603) $generated@@604 $generated@@605)))
)))
(assert (= ($generated@@83 $generated@@149) $generated@@65))
(assert (= ($generated@@588 $generated@@149) $generated@@68))
(assert (= ($generated@@83 $generated@@189) $generated@@66))
(assert (= ($generated@@588 $generated@@189) $generated@@68))
(assert (forall (($generated@@607 T@U) ($generated@@608 T@U) ($generated@@609 T@U) ) (!  (=> (and (and (= (type $generated@@607) ($generated@@89 $generated@@178 $generated@@2)) (= (type $generated@@608) $generated@@72)) (= (type $generated@@609) ($generated@@89 $generated@@90 $generated@@91))) (= ($generated@@87 $generated@@607 ($generated@@183 $generated@@608) $generated@@609) (forall (($generated@@610 T@U) ) (!  (=> (and (= (type $generated@@610) $generated@@178) (< 0 ($generated ($generated@@94 $generated@@607 $generated@@610)))) ($generated@@227 $generated@@610 $generated@@608 $generated@@609))
 :pattern ( ($generated@@94 $generated@@607 $generated@@610))
))))
 :pattern ( ($generated@@87 $generated@@607 ($generated@@183 $generated@@608) $generated@@609))
)))
(assert (forall (($generated@@611 T@U) ($generated@@612 T@U) ($generated@@613 T@U) ) (!  (=> (and (and (and (= (type $generated@@611) $generated@@169) (= (type $generated@@612) $generated@@72)) (= (type $generated@@613) ($generated@@89 $generated@@90 $generated@@91))) (and ($generated@@154 $generated@@613) (and ($generated@@167 $generated@@611) (exists (($generated@@614 T@U) ) (!  (and (= (type $generated@@614) $generated@@72) ($generated@@87 $generated@@611 ($generated@@168 $generated@@612 $generated@@614) $generated@@613))
 :pattern ( ($generated@@87 $generated@@611 ($generated@@168 $generated@@612 $generated@@614) $generated@@613))
))))) ($generated@@227 ($generated@@176 $generated@@611) $generated@@612 $generated@@613))
 :pattern ( ($generated@@227 ($generated@@176 $generated@@611) $generated@@612 $generated@@613))
)))
(assert (forall (($generated@@615 T@U) ($generated@@616 T@U) ($generated@@617 T@U) ) (!  (=> (and (and (and (= (type $generated@@615) $generated@@169) (= (type $generated@@616) $generated@@72)) (= (type $generated@@617) ($generated@@89 $generated@@90 $generated@@91))) (and ($generated@@154 $generated@@617) (and ($generated@@167 $generated@@615) (exists (($generated@@618 T@U) ) (!  (and (= (type $generated@@618) $generated@@72) ($generated@@87 $generated@@615 ($generated@@168 $generated@@618 $generated@@616) $generated@@617))
 :pattern ( ($generated@@87 $generated@@615 ($generated@@168 $generated@@618 $generated@@616) $generated@@617))
))))) ($generated@@227 ($generated@@177 $generated@@615) $generated@@616 $generated@@617))
 :pattern ( ($generated@@227 ($generated@@177 $generated@@615) $generated@@616 $generated@@617))
)))
(assert (forall (($generated@@619 T@U) ($generated@@620 T@U) ) (!  (=> (and (= (type $generated@@619) $generated@@178) (= (type $generated@@620) $generated@@178)) (= ($generated@@192 ($generated@@223 $generated@@619) ($generated@@223 $generated@@620)) ($generated@@223 ($generated@@192 $generated@@619 $generated@@620))))
 :pattern ( ($generated@@192 ($generated@@223 $generated@@619) ($generated@@223 $generated@@620)))
)))
(assert (forall (($generated@@621 Int) ) (! (= ($generated@@247 ($generated@@8 ($generated@@219 $generated@@621))) ($generated@@223 ($generated@@247 ($generated@@8 $generated@@621))))
 :pattern ( ($generated@@247 ($generated@@8 ($generated@@219 $generated@@621))))
)))
(assert (forall (($generated@@622 Real) ) (! (= ($generated@@247 ($generated@@9 ($generated@@221 $generated@@622))) ($generated@@223 ($generated@@247 ($generated@@9 $generated@@622))))
 :pattern ( ($generated@@247 ($generated@@9 ($generated@@221 $generated@@622))))
)))
(assert (forall (($generated@@623 T@U) ) (! (= ($generated@@247 ($generated@@223 $generated@@623)) ($generated@@223 ($generated@@247 $generated@@623)))
 :pattern ( ($generated@@247 ($generated@@223 $generated@@623)))
)))
(assert (forall (($generated@@624 T@U) ) (! (let (($generated@@625 ($generated@@242 (type $generated@@624))))
 (=> (and (= (type $generated@@624) ($generated@@241 $generated@@625)) (= ($generated@@240 $generated@@624) 0)) (= $generated@@624 ($generated@@239 $generated@@625))))
 :pattern ( ($generated@@240 $generated@@624))
)))
(assert (forall (($generated@@626 T@U) ($generated@@627 T@U) ($generated@@628 T@U) ) (! (let (($generated@@629 (type $generated@@627)))
 (=> (and (and (= (type $generated@@626) ($generated@@89 $generated@@629 $generated@@2)) (= (type $generated@@628) $generated@@2)) (<= 0 ($generated $generated@@628))) (= ($generated@@266 ($generated@@95 $generated@@626 $generated@@627 $generated@@628)) (+ (- ($generated@@266 $generated@@626) ($generated ($generated@@94 $generated@@626 $generated@@627))) ($generated $generated@@628)))))
 :pattern ( ($generated@@266 ($generated@@95 $generated@@626 $generated@@627 $generated@@628)))
)))
(assert (forall (($generated@@630 T@U) ($generated@@631 T@U) ) (!  (=> (and (= (type $generated@@630) ($generated@@89 $generated@@90 $generated@@91)) (= (type $generated@@631) $generated@@2)) ($generated@@87 $generated@@631 $generated@@46 $generated@@630))
 :pattern ( ($generated@@87 $generated@@631 $generated@@46 $generated@@630))
)))
(assert (forall (($generated@@632 T@U) ($generated@@633 T@U) ) (!  (=> (and (= (type $generated@@632) ($generated@@89 $generated@@90 $generated@@91)) (= (type $generated@@633) $generated@@3)) ($generated@@87 $generated@@633 $generated@@47 $generated@@632))
 :pattern ( ($generated@@87 $generated@@633 $generated@@47 $generated@@632))
)))
(assert (forall (($generated@@634 T@U) ($generated@@635 T@U) ) (!  (=> (and (= (type $generated@@634) ($generated@@89 $generated@@90 $generated@@91)) (= (type $generated@@635) $generated@@4)) ($generated@@87 $generated@@635 $generated@@44 $generated@@634))
 :pattern ( ($generated@@87 $generated@@635 $generated@@44 $generated@@634))
)))
(assert (forall (($generated@@636 T@U) ($generated@@637 T@U) ) (!  (=> (and (= (type $generated@@636) ($generated@@89 $generated@@90 $generated@@91)) (= (type $generated@@637) $generated@@434)) ($generated@@87 $generated@@637 $generated@@45 $generated@@636))
 :pattern ( ($generated@@87 $generated@@637 $generated@@45 $generated@@636))
)))
(assert (forall (($generated@@638 T@U) ($generated@@639 T@U) ) (!  (=> (and (= (type $generated@@638) ($generated@@89 $generated@@90 $generated@@91)) (= (type $generated@@639) $generated@@178)) ($generated@@87 $generated@@639 $generated@@48 $generated@@638))
 :pattern ( ($generated@@87 $generated@@639 $generated@@48 $generated@@638))
)))
(assert (forall (($generated@@640 T@U) ($generated@@641 T@U) ) (!  (=> (and (= (type $generated@@640) ($generated@@241 $generated@@178)) (= (type $generated@@641) $generated@@72)) (= ($generated@@156 $generated@@640 ($generated@@476 $generated@@641)) (forall (($generated@@642 Int) ) (!  (=> (and (<= 0 $generated@@642) (< $generated@@642 ($generated@@240 $generated@@640))) ($generated@@193 ($generated@@477 $generated@@640 $generated@@642) $generated@@641))
 :pattern ( ($generated@@477 $generated@@640 $generated@@642))
))))
 :pattern ( ($generated@@156 $generated@@640 ($generated@@476 $generated@@641)))
)))
(assert (forall (($generated@@644 T@U) ($generated@@645 Int) ) (!  (=> (= (type $generated@@644) ($generated@@241 $generated@@178)) (=> (and (<= 0 $generated@@645) (< $generated@@645 ($generated@@240 $generated@@644))) (< ($generated@@516 ($generated@@317 $generated@@169 ($generated@@477 $generated@@644 $generated@@645))) ($generated@@643 $generated@@644))))
 :pattern ( ($generated@@516 ($generated@@317 $generated@@169 ($generated@@477 $generated@@644 $generated@@645))))
)))
(assert (forall (($generated@@646 T@U) ($generated@@647 T@U) ($generated@@648 T@U) ) (!  (=> (and (and (and (= (type $generated@@646) ($generated@@274 $generated@@178 $generated@@178)) (= (type $generated@@647) $generated@@72)) (= (type $generated@@648) $generated@@72)) ($generated@@156 $generated@@646 ($generated@@384 $generated@@647 $generated@@648))) (and (and ($generated@@156 ($generated@@272 $generated@@646) ($generated@@207 $generated@@647)) ($generated@@156 ($generated@@327 $generated@@646) ($generated@@207 $generated@@648))) ($generated@@156 ($generated@@358 $generated@@646) ($generated@@207 ($generated@@168 $generated@@647 $generated@@648)))))
 :pattern ( ($generated@@156 $generated@@646 ($generated@@384 $generated@@647 $generated@@648)))
)))
(assert (forall (($generated@@649 T@U) ($generated@@650 T@U) ($generated@@651 T@U) ) (!  (=> (and (and (and (= (type $generated@@649) ($generated@@292 $generated@@178 $generated@@178)) (= (type $generated@@650) $generated@@72)) (= (type $generated@@651) $generated@@72)) ($generated@@156 $generated@@649 ($generated@@392 $generated@@650 $generated@@651))) (and (and ($generated@@156 ($generated@@290 $generated@@649) ($generated@@212 $generated@@650)) ($generated@@156 ($generated@@338 $generated@@649) ($generated@@212 $generated@@651))) ($generated@@156 ($generated@@366 $generated@@649) ($generated@@212 ($generated@@168 $generated@@650 $generated@@651)))))
 :pattern ( ($generated@@156 $generated@@649 ($generated@@392 $generated@@650 $generated@@651)))
)))
(assert (forall (($generated@@652 T@U) ) (!  (=> (= (type $generated@@652) $generated@@2) ($generated@@156 $generated@@652 $generated@@46))
 :pattern ( ($generated@@156 $generated@@652 $generated@@46))
)))
(assert (forall (($generated@@653 T@U) ) (!  (=> (= (type $generated@@653) $generated@@3) ($generated@@156 $generated@@653 $generated@@47))
 :pattern ( ($generated@@156 $generated@@653 $generated@@47))
)))
(assert (forall (($generated@@654 T@U) ) (!  (=> (= (type $generated@@654) $generated@@4) ($generated@@156 $generated@@654 $generated@@44))
 :pattern ( ($generated@@156 $generated@@654 $generated@@44))
)))
(assert (forall (($generated@@655 T@U) ) (!  (=> (= (type $generated@@655) $generated@@434) ($generated@@156 $generated@@655 $generated@@45))
 :pattern ( ($generated@@156 $generated@@655 $generated@@45))
)))
(assert (forall (($generated@@656 T@U) ) (!  (=> (= (type $generated@@656) $generated@@178) ($generated@@156 $generated@@656 $generated@@48))
 :pattern ( ($generated@@156 $generated@@656 $generated@@48))
)))
(push 1)
(declare-fun ControlFlow (Int Int) Int)
(declare-fun $generated@@657 () T@U)
(declare-fun $generated@@658 () T@U)
(declare-fun $generated@@659 () T@U)
(declare-fun $generated@@660 (T@U) T@U)
(declare-fun $generated@@661 () T@U)
(declare-fun $generated@@662 () T@U)
(declare-fun $generated@@663 () T@U)
(declare-fun $generated@@664 () Int)
(declare-fun $generated@@665 () T@U)
(declare-fun $generated@@666 () Int)
(declare-fun $generated@@667 () T@U)
(declare-fun $generated@@668 () Int)
(declare-fun $generated@@669 () Real)
(declare-fun $generated@@670 (T@U) Bool)
(declare-fun $generated@@671 () Int)
(declare-fun $generated@@672 () T@T)
(assert  (and (and (and (and (and (and (and (and (and (= (type $generated@@657) ($generated@@89 $generated@@90 $generated@@91)) (= (type $generated@@658) $generated@@90)) (= (type $generated@@659) ($generated@@534 $generated@@90 $generated@@4))) (= ($generated@@1 $generated@@672) 23)) (forall (($generated@@673 T@U) ) (! (= (type ($generated@@660 $generated@@673)) $generated@@672)
 :pattern ( ($generated@@660 $generated@@673))
))) (= (type $generated@@661) $generated@@672)) (= (type $generated@@662) $generated@@672)) (= (type $generated@@663) ($generated@@89 $generated@@90 $generated@@91))) (= (type $generated@@665) ($generated@@89 $generated@@90 $generated@@91))) (= (type $generated@@667) ($generated@@89 $generated@@90 $generated@@91))))
(set-option :timeout 0)
(set-option :rlimit 0)
(assert (not
 (=> (= (ControlFlow 0 0) 15) (let (($generated@@674  (and (=> (= (ControlFlow 0 2) (- 0 5)) (= ($generated ($generated@@96 ($generated@@94 $generated@@657 $generated@@658) $generated@@153)) ($generated@@217 ($generated@@221 7.0)))) (and (=> (= (ControlFlow 0 2) (- 0 4)) (= ($generated ($generated@@96 ($generated@@94 $generated@@657 $generated@@658) $generated@@160)) ($generated@@219 8))) (and (=> (= (ControlFlow 0 2) (- 0 3)) (= ($generated ($generated@@96 ($generated@@94 $generated@@657 $generated@@658) $generated@@163)) ($generated@@219 9))) (=> (and (and (and (= ($generated ($generated@@96 ($generated@@94 $generated@@657 $generated@@658) $generated@@153)) ($generated@@217 ($generated@@221 7.0))) (= ($generated ($generated@@96 ($generated@@94 $generated@@657 $generated@@658) $generated@@160)) ($generated@@219 8))) (= ($generated ($generated@@96 ($generated@@94 $generated@@657 $generated@@658) $generated@@163)) ($generated@@219 9))) (= (ControlFlow 0 2) (- 0 1))) ($generated@@0 ($generated@@532 $generated@@659 $generated@@658 $generated@@163))))))))
(let (($generated@@675  (=> (and (not (and (= ($generated ($generated@@96 ($generated@@94 $generated@@657 $generated@@658) $generated@@153)) ($generated@@217 ($generated@@221 7.0))) (= ($generated ($generated@@96 ($generated@@94 $generated@@657 $generated@@658) $generated@@160)) ($generated@@219 8)))) (= (ControlFlow 0 7) 2)) $generated@@674)))
(let (($generated@@676  (=> (and (and (= ($generated ($generated@@96 ($generated@@94 $generated@@657 $generated@@658) $generated@@153)) ($generated@@217 ($generated@@221 7.0))) (= ($generated ($generated@@96 ($generated@@94 $generated@@657 $generated@@658) $generated@@160)) ($generated@@219 8))) (= (ControlFlow 0 6) 2)) $generated@@674)))
(let (($generated@@677  (=> (not (= ($generated ($generated@@96 ($generated@@94 $generated@@657 $generated@@658) $generated@@153)) ($generated@@217 ($generated@@221 7.0)))) (and (=> (= (ControlFlow 0 9) 6) $generated@@676) (=> (= (ControlFlow 0 9) 7) $generated@@675)))))
(let (($generated@@678  (=> (= ($generated ($generated@@96 ($generated@@94 $generated@@657 $generated@@658) $generated@@153)) ($generated@@217 ($generated@@221 7.0))) (and (=> (= (ControlFlow 0 8) 6) $generated@@676) (=> (= (ControlFlow 0 8) 7) $generated@@675)))))
(let (($generated@@679  (=> (= ($generated@@660 $generated@@661) $generated@@661) (=> (and (= ($generated@@660 $generated@@662) $generated@@662) (= $generated@@659 ($generated@@533 $generated@@150 $generated@@663 $generated@@60 $generated@@658))) (and (=> (= (ControlFlow 0 10) (- 0 14)) ($generated@@0 ($generated@@532 $generated@@659 $generated@@658 $generated@@153))) (=> ($generated@@0 ($generated@@532 $generated@@659 $generated@@658 $generated@@153)) (=> (= $generated@@664 ($generated@@219 7)) (=> (and (= $generated@@665 ($generated@@95 $generated@@663 $generated@@658 ($generated@@97 ($generated@@94 $generated@@663 $generated@@658) $generated@@153 ($generated@@8 $generated@@664)))) ($generated@@154 $generated@@665)) (and (=> (= (ControlFlow 0 10) (- 0 13)) ($generated@@0 ($generated@@532 $generated@@659 $generated@@658 $generated@@160))) (=> ($generated@@0 ($generated@@532 $generated@@659 $generated@@658 $generated@@160)) (=> (= $generated@@666 ($generated@@219 8)) (=> (and (= $generated@@667 ($generated@@95 $generated@@665 $generated@@658 ($generated@@97 ($generated@@94 $generated@@665 $generated@@658) $generated@@160 ($generated@@8 $generated@@666)))) ($generated@@154 $generated@@667)) (and (=> (= (ControlFlow 0 10) (- 0 12)) ($generated@@0 ($generated@@532 $generated@@659 $generated@@658 $generated@@163))) (=> ($generated@@0 ($generated@@532 $generated@@659 $generated@@658 $generated@@163)) (=> (and (and (= $generated@@668 ($generated@@219 9)) (= $generated@@657 ($generated@@95 $generated@@667 $generated@@658 ($generated@@97 ($generated@@94 $generated@@667 $generated@@658) $generated@@163 ($generated@@8 $generated@@668))))) (and ($generated@@154 $generated@@657) (= $generated@@669 ($generated@@221 7.0)))) (and (=> (= (ControlFlow 0 10) (- 0 11)) (= ($generated@@400 ($generated@@217 $generated@@669)) $generated@@669)) (=> (= ($generated@@400 ($generated@@217 $generated@@669)) $generated@@669) (and (=> (= (ControlFlow 0 10) 8) $generated@@678) (=> (= (ControlFlow 0 10) 9) $generated@@677)))))))))))))))))))
(let (($generated@@680  (=> (and ($generated@@154 $generated@@663) ($generated@@670 $generated@@663)) (=> (and (and (not (= $generated@@658 $generated@@150)) (and ($generated@@156 $generated@@658 $generated@@189) ($generated@@87 $generated@@658 $generated@@189 $generated@@663))) (and (= 0 $generated@@671) (= (ControlFlow 0 15) 10))) $generated@@679))))
$generated@@680))))))))
))
(check-sat)
(pop 1)
; Valid
(get-info :rlimit)
(reset)
(set-option :rlimit 0)
; did a full reset
(reset)
(set-option :print-success false)
(set-info :smt-lib-version 2.6)
(set-option :auto_config false)
(set-option :type_check true)
(set-option :smt.case_split 3)
(set-option :smt.qi.eager_threshold 100)
(set-option :smt.delay_units true)
(set-option :smt.arith.solver 2)
(set-option :smt.mbqi false)
(set-option :model.compact false)
(set-option :model.v2 true)
(set-option :pp.bv_literals false)
; done setting options


(set-info :category "industrial")
(declare-sort |T@U| 0)
(declare-sort |T@T| 0)
(declare-fun real_pow (Real Real) Real)
(declare-fun UOrdering2 (|T@U| |T@U|) Bool)
(declare-fun UOrdering3 (|T@T| |T@U| |T@U|) Bool)
(declare-fun tickleBool (Bool) Bool)
(assert (and (tickleBool true) (tickleBool false)))
(declare-fun $generated (T@U) Int)
(declare-fun $generated@@0 (T@U) Bool)
(declare-fun $generated@@1 (T@T) Int)
(declare-fun $generated@@2 () T@T)
(declare-fun $generated@@3 () T@T)
(declare-fun $generated@@4 () T@T)
(declare-fun $generated@@5 () T@T)
(declare-fun $generated@@6 () T@T)
(declare-fun $generated@@7 () T@T)
(declare-fun $generated@@8 (Int) T@U)
(declare-fun type (T@U) T@T)
(declare-fun $generated@@9 (Real) T@U)
(declare-fun $generated@@10 (T@U) Real)
(declare-fun $generated@@11 (Bool) T@U)
(declare-fun $generated@@12 (RoundingMode) T@U)
(declare-fun $generated@@13 (T@U) RoundingMode)
(declare-fun $generated@@14 (String) T@U)
(declare-fun $generated@@15 (T@U) String)
(declare-fun $generated@@16 ((RegEx String)) T@U)
(declare-fun $generated@@17 (T@U) (RegEx String))
(declare-fun $generated@@44 () T@U)
(declare-fun $generated@@45 () T@U)
(declare-fun $generated@@46 () T@U)
(declare-fun $generated@@47 () T@U)
(declare-fun $generated@@48 () T@U)
(declare-fun $generated@@49 () T@U)
(declare-fun $generated@@50 () T@U)
(declare-fun $generated@@51 () T@U)
(declare-fun $generated@@52 () T@U)
(declare-fun $generated@@53 () T@U)
(declare-fun $generated@@54 () T@U)
(declare-fun $generated@@55 () T@U)
(declare-fun $generated@@56 () T@U)
(declare-fun $generated@@57 () T@U)
(declare-fun $generated@@58 () T@U)
(declare-fun $generated@@59 () T@U)
(declare-fun $generated@@60 () T@U)
(declare-fun $generated@@61 () T@U)
(declare-fun $generated@@62 () T@U)
(declare-fun $generated@@63 () T@U)
(declare-fun $generated@@64 () T@U)
(declare-fun $generated@@65 () T@U)
(declare-fun $generated@@66 () T@U)
(declare-fun $generated@@67 () T@T)
(declare-fun $generated@@68 () T@T)
(declare-fun $generated@@69 (T@T) T@T)
(declare-fun $generated@@70 (T@T) T@T)
(declare-fun $generated@@71 () T@T)
(declare-fun $generated@@72 () T@T)
(declare-fun $generated@@75 (T@U) T@U)
(declare-fun $generated@@77 (T@U T@U T@U) Bool)
(declare-fun $generated@@78 (Int) T@U)
(declare-fun $generated@@79 (T@T T@T) T@T)
(declare-fun $generated@@80 () T@T)
(declare-fun $generated@@81 () T@T)
(declare-fun $generated@@82 (T@T) T@T)
(declare-fun $generated@@83 (T@T) T@T)
(declare-fun $generated@@84 (T@U T@U) T@U)
(declare-fun $generated@@85 (T@U T@U T@U) T@U)
(declare-fun $generated@@86 (T@U T@U) T@U)
(declare-fun $generated@@87 (T@U T@U T@U) T@U)
(declare-fun $generated@@135 () T@U)
(declare-fun $generated@@136 () T@U)
(declare-fun $generated@@139 (T@U T@U) Bool)
(declare-fun $generated@@141 (T@U) Bool)
(declare-fun $generated@@142 (T@U T@U) T@U)
(declare-fun $generated@@143 () T@T)
(declare-fun $generated@@149 (T@U T@U) Bool)
(declare-fun $generated@@150 (T@U) T@U)
(declare-fun $generated@@151 (T@U) T@U)
(declare-fun $generated@@152 () T@T)
(declare-fun $generated@@157 (T@U) T@U)
(declare-fun $generated@@158 (T@U) Bool)
(declare-fun $generated@@162 (T@U) T@U)
(declare-fun $generated@@165 (T@U T@U T@U) T@U)
(declare-fun $generated@@166 (T@U T@U T@U Bool) T@U)
(declare-fun $generated@@167 (T@T T@T) T@T)
(declare-fun $generated@@168 (T@T) T@T)
(declare-fun $generated@@169 (T@T) T@T)
(declare-fun $generated@@170 (T@U T@U T@U T@U) T@U)
(declare-fun $generated@@221 () T@U)
(declare-fun $generated@@224 (T@U T@U) T@U)
(declare-fun $generated@@225 (T@U T@U) Bool)
(declare-fun $generated@@232 () Int)
(declare-fun $generated@@233 (T@U) Int)
(declare-fun $generated@@234 (T@U) Bool)
(declare-fun $generated@@235 (Int) Int)
(declare-fun $generated@@239 (T@U) T@U)
(declare-fun $generated@@244 (T@U) T@U)
(declare-fun $generated@@250 (T@U) T@U)
(declare-fun $generated@@254 (T@U) Bool)
(declare-fun $generated@@255 (T@U T@U T@U) Bool)
(declare-fun $generated@@261 (T@U) T@U)
(declare-fun $generated@@268 (T@T) T@U)
(declare-fun $generated@@269 (T@U) Int)
(declare-fun $generated@@270 (T@T) T@T)
(declare-fun $generated@@271 (T@T) T@T)
(declare-fun $generated@@277 (T@U) T@U)
(declare-fun $generated@@282 (T@U) Int)
(declare-fun $generated@@283 (T@T) T@U)
(declare-fun $generated@@288 (T@U) T@U)
(declare-fun $generated@@289 (T@T T@T) T@U)
(declare-fun $generated@@290 (T@T T@T) T@T)
(declare-fun $generated@@291 (T@T) T@T)
(declare-fun $generated@@292 (T@T) T@T)
(declare-fun $generated@@306 (T@U) T@U)
(declare-fun $generated@@307 (T@T T@T) T@U)
(declare-fun $generated@@308 (T@T T@T) T@T)
(declare-fun $generated@@309 (T@T) T@T)
(declare-fun $generated@@310 (T@T) T@T)
(declare-fun $generated@@327 (T@T T@U) T@U)
(declare-fun $generated@@337 (T@U) T@U)
(declare-fun $generated@@348 (T@U) T@U)
(declare-fun $generated@@368 (T@U) T@U)
(declare-fun $generated@@369 (T@U) T@U)
(declare-fun $generated@@376 (T@U) T@U)
(declare-fun $generated@@377 (T@U) T@U)
(declare-fun $generated@@394 (T@U T@U) T@U)
(declare-fun $generated@@402 (T@U T@U) T@U)
(declare-fun $generated@@410 (T@T) T@U)
(declare-fun $generated@@434 () T@T)
(declare-fun $generated@@442 (T@U) T@U)
(declare-fun $generated@@446 (T@U) T@U)
(declare-fun $generated@@452 (T@U) T@U)
(declare-fun $generated@@456 (T@U) T@U)
(declare-fun $generated@@464 (T@U) T@U)
(declare-fun $generated@@468 (T@U) T@U)
(declare-fun $generated@@476 (T@U) T@U)
(declare-fun $generated@@477 (T@U Int) T@U)
(declare-fun $generated@@486 (T@U) Int)
(declare-fun $generated@@488 (T@U) T@U)
(declare-fun $generated@@492 (T@U) T@U)
(declare-fun $generated@@496 (T@U) T@U)
(declare-fun $generated@@500 (T@U) T@U)
(declare-fun $generated@@514 (T@U) Int)
(declare-fun $generated@@515 (T@U) Int)
(declare-fun $generated@@531 (T@U) T@U)
(declare-fun $generated@@580 (T@U) Int)
(assert  (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (= ($generated@@1 $generated@@2) 0) (= ($generated@@1 $generated@@3) 1)) (= ($generated@@1 $generated@@4) 2)) (= ($generated@@1 $generated@@5) 3)) (= ($generated@@1 $generated@@6) 4)) (= ($generated@@1 $generated@@7) 5)) (forall (($generated@@18 Int) ) (! (= ($generated ($generated@@8 $generated@@18)) $generated@@18)
 :pattern ( ($generated@@8 $generated@@18))
))) (forall (($generated@@19 T@U) ) (!  (=> (= (type $generated@@19) $generated@@2) (= ($generated@@8 ($generated $generated@@19)) $generated@@19))
 :pattern ( ($generated $generated@@19))
))) (forall (($generated@@20 Int) ) (! (= (type ($generated@@8 $generated@@20)) $generated@@2)
 :pattern ( ($generated@@8 $generated@@20))
))) (forall (($generated@@21 Real) ) (! (= ($generated@@10 ($generated@@9 $generated@@21)) $generated@@21)
 :pattern ( ($generated@@9 $generated@@21))
))) (forall (($generated@@22 T@U) ) (!  (=> (= (type $generated@@22) $generated@@3) (= ($generated@@9 ($generated@@10 $generated@@22)) $generated@@22))
 :pattern ( ($generated@@10 $generated@@22))
))) (forall (($generated@@23 Real) ) (! (= (type ($generated@@9 $generated@@23)) $generated@@3)
 :pattern ( ($generated@@9 $generated@@23))
))) (forall (($generated@@24 Bool) ) (! (= ($generated@@0 ($generated@@11 $generated@@24)) $generated@@24)
 :pattern ( ($generated@@11 $generated@@24))
))) (forall (($generated@@25 T@U) ) (!  (=> (= (type $generated@@25) $generated@@4) (= ($generated@@11 ($generated@@0 $generated@@25)) $generated@@25))
 :pattern ( ($generated@@0 $generated@@25))
))) (forall (($generated@@26 Bool) ) (! (= (type ($generated@@11 $generated@@26)) $generated@@4)
 :pattern ( ($generated@@11 $generated@@26))
))) (forall (($generated@@27 RoundingMode) ) (! (= ($generated@@13 ($generated@@12 $generated@@27)) $generated@@27)
 :pattern ( ($generated@@12 $generated@@27))
))) (forall (($generated@@28 T@U) ) (!  (=> (= (type $generated@@28) $generated@@5) (= ($generated@@12 ($generated@@13 $generated@@28)) $generated@@28))
 :pattern ( ($generated@@13 $generated@@28))
))) (forall (($generated@@29 RoundingMode) ) (! (= (type ($generated@@12 $generated@@29)) $generated@@5)
 :pattern ( ($generated@@12 $generated@@29))
))) (forall (($generated@@30 String) ) (! (= ($generated@@15 ($generated@@14 $generated@@30)) $generated@@30)
 :pattern ( ($generated@@14 $generated@@30))
))) (forall (($generated@@31 T@U) ) (!  (=> (= (type $generated@@31) $generated@@6) (= ($generated@@14 ($generated@@15 $generated@@31)) $generated@@31))
 :pattern ( ($generated@@15 $generated@@31))
))) (forall (($generated@@32 String) ) (! (= (type ($generated@@14 $generated@@32)) $generated@@6)
 :pattern ( ($generated@@14 $generated@@32))
))) (forall (($generated@@33 (RegEx String)) ) (! (= ($generated@@17 ($generated@@16 $generated@@33)) $generated@@33)
 :pattern ( ($generated@@16 $generated@@33))
))) (forall (($generated@@34 T@U) ) (!  (=> (= (type $generated@@34) $generated@@7) (= ($generated@@16 ($generated@@17 $generated@@34)) $generated@@34))
 :pattern ( ($generated@@17 $generated@@34))
))) (forall (($generated@@35 (RegEx String)) ) (! (= (type ($generated@@16 $generated@@35)) $generated@@7)
 :pattern ( ($generated@@16 $generated@@35))
))))
(assert (forall (($generated@@36 T@U) ) (! (UOrdering2 $generated@@36 $generated@@36)
 :no-pattern ($generated $generated@@36)
 :no-pattern ($generated@@0 $generated@@36)
)))
(assert (forall (($generated@@37 T@U) ($generated@@38 T@U) ($generated@@39 T@U) ) (! (let (($generated@@40 (type $generated@@37)))
 (=> (and (and (= (type $generated@@38) $generated@@40) (= (type $generated@@39) $generated@@40)) (and (UOrdering2 $generated@@37 $generated@@38) (UOrdering2 $generated@@38 $generated@@39))) (UOrdering2 $generated@@37 $generated@@39)))
 :pattern ( (UOrdering2 $generated@@37 $generated@@38) (UOrdering2 $generated@@38 $generated@@39))
)))
(assert (forall (($generated@@41 T@U) ($generated@@42 T@U) ) (! (let (($generated@@43 (type $generated@@41)))
 (=> (= (type $generated@@42) $generated@@43) (=> (and (UOrdering2 $generated@@41 $generated@@42) (UOrdering2 $generated@@42 $generated@@41)) (= $generated@@41 $generated@@42))))
 :pattern ( (UOrdering2 $generated@@41 $generated@@42) (UOrdering2 $generated@@42 $generated@@41))
)))
(assert  (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (= ($generated@@1 $generated@@67) 6) (= (type $generated@@44) $generated@@67)) (= (type $generated@@45) $generated@@67)) (= (type $generated@@46) $generated@@67)) (= (type $generated@@47) $generated@@67)) (= (type $generated@@48) $generated@@67)) (= ($generated@@1 $generated@@68) 7)) (= (type $generated@@49) $generated@@68)) (= (type $generated@@50) $generated@@68)) (= (type $generated@@51) $generated@@68)) (= (type $generated@@52) $generated@@68)) (= (type $generated@@53) $generated@@68)) (= (type $generated@@54) $generated@@68)) (= (type $generated@@55) $generated@@68)) (= (type $generated@@56) $generated@@68)) (= (type $generated@@57) $generated@@68)) (= (type $generated@@58) $generated@@68)) (= (type $generated@@59) $generated@@68)) (forall (($generated@@73 T@T) ) (= ($generated@@1 ($generated@@69 $generated@@73)) 8))) (forall (($generated@@74 T@T) ) (! (= ($generated@@70 ($generated@@69 $generated@@74)) $generated@@74)
 :pattern ( ($generated@@69 $generated@@74))
))) (= (type $generated@@60) ($generated@@69 $generated@@4))) (= ($generated@@1 $generated@@71) 9)) (= (type $generated@@61) $generated@@71)) (= (type $generated@@62) $generated@@68)) (= (type $generated@@63) $generated@@68)) (= (type $generated@@64) $generated@@68)) (= ($generated@@1 $generated@@72) 10)) (= (type $generated@@65) $generated@@72)) (= (type $generated@@66) $generated@@72)))
(assert (distinct $generated@@44 $generated@@45 $generated@@46 $generated@@47 $generated@@48 $generated@@49 $generated@@50 $generated@@51 $generated@@52 $generated@@53 $generated@@54 $generated@@55 $generated@@56 $generated@@57 $generated@@58 $generated@@59 $generated@@60 $generated@@61 $generated@@62 $generated@@63 $generated@@64 $generated@@65 $generated@@66)
)
(assert (forall (($generated@@76 T@U) ) (! (= (type ($generated@@75 $generated@@76)) $generated@@68)
 :pattern ( ($generated@@75 $generated@@76))
)))
(assert (= ($generated@@75 $generated@@44) $generated@@49))
(assert (= ($generated@@75 $generated@@45) $generated@@50))
(assert (= ($generated@@75 $generated@@46) $generated@@51))
(assert (= ($generated@@75 $generated@@47) $generated@@52))
(assert (= ($generated@@75 $generated@@48) $generated@@53))
(assert  (and (and (and (and (and (and (and (and (and (and (and (and (and (forall (($generated@@88 T@T) ($generated@@89 T@T) ) (= ($generated@@1 ($generated@@79 $generated@@88 $generated@@89)) 11)) (forall (($generated@@90 T@T) ($generated@@91 T@T) ) (! (= ($generated@@82 ($generated@@79 $generated@@90 $generated@@91)) $generated@@90)
 :pattern ( ($generated@@79 $generated@@90 $generated@@91))
))) (forall (($generated@@92 T@T) ($generated@@93 T@T) ) (! (= ($generated@@83 ($generated@@79 $generated@@92 $generated@@93)) $generated@@93)
 :pattern ( ($generated@@79 $generated@@92 $generated@@93))
))) (forall (($generated@@94 T@U) ($generated@@95 T@U) ) (! (let (($generated@@96 ($generated@@83 (type $generated@@94))))
(= (type ($generated@@84 $generated@@94 $generated@@95)) $generated@@96))
 :pattern ( ($generated@@84 $generated@@94 $generated@@95))
))) (forall (($generated@@97 T@U) ($generated@@98 T@U) ($generated@@99 T@U) ) (! (let (($generated@@100 (type $generated@@99)))
(let (($generated@@101 (type $generated@@98)))
(= (type ($generated@@85 $generated@@97 $generated@@98 $generated@@99)) ($generated@@79 $generated@@101 $generated@@100))))
 :pattern ( ($generated@@85 $generated@@97 $generated@@98 $generated@@99))
))) (forall (($generated@@102 T@U) ($generated@@103 T@U) ($generated@@104 T@U) ) (! (let (($generated@@105 ($generated@@83 (type $generated@@102))))
 (=> (= (type $generated@@104) $generated@@105) (= ($generated@@84 ($generated@@85 $generated@@102 $generated@@103 $generated@@104) $generated@@103) $generated@@104)))
 :weight 0
))) (and (forall (($generated@@106 T@U) ($generated@@107 T@U) ($generated@@108 T@U) ($generated@@109 T@U) ) (!  (or (= $generated@@108 $generated@@109) (= ($generated@@84 ($generated@@85 $generated@@107 $generated@@108 $generated@@106) $generated@@109) ($generated@@84 $generated@@107 $generated@@109)))
 :weight 0
)) (forall (($generated@@110 T@U) ($generated@@111 T@U) ($generated@@112 T@U) ($generated@@113 T@U) ) (!  (or true (= ($generated@@84 ($generated@@85 $generated@@111 $generated@@112 $generated@@110) $generated@@113) ($generated@@84 $generated@@111 $generated@@113)))
 :weight 0
)))) (= ($generated@@1 $generated@@80) 12)) (forall (($generated@@114 T@U) ($generated@@115 T@U) ) (! (let (($generated@@116 ($generated@@70 (type $generated@@115))))
(= (type ($generated@@86 $generated@@114 $generated@@115)) $generated@@116))
 :pattern ( ($generated@@86 $generated@@114 $generated@@115))
))) (= ($generated@@1 $generated@@81) 13)) (forall (($generated@@117 T@U) ($generated@@118 T@U) ($generated@@119 T@U) ) (! (= (type ($generated@@87 $generated@@117 $generated@@118 $generated@@119)) $generated@@81)
 :pattern ( ($generated@@87 $generated@@117 $generated@@118 $generated@@119))
))) (forall (($generated@@120 T@U) ($generated@@121 T@U) ($generated@@122 T@U) ) (! (let (($generated@@123 ($generated@@70 (type $generated@@121))))
 (=> (= (type $generated@@122) $generated@@123) (= ($generated@@86 ($generated@@87 $generated@@120 $generated@@121 $generated@@122) $generated@@121) $generated@@122)))
 :weight 0
))) (and (forall (($generated@@124 T@U) ($generated@@125 T@U) ($generated@@126 T@U) ($generated@@127 T@U) ) (!  (or (= $generated@@126 $generated@@127) (= ($generated@@86 ($generated@@87 $generated@@125 $generated@@126 $generated@@124) $generated@@127) ($generated@@86 $generated@@125 $generated@@127)))
 :weight 0
)) (forall (($generated@@128 T@U) ($generated@@129 T@U) ($generated@@130 T@U) ($generated@@131 T@U) ) (!  (or true (= ($generated@@86 ($generated@@87 $generated@@129 $generated@@130 $generated@@128) $generated@@131) ($generated@@86 $generated@@129 $generated@@131)))
 :weight 0
)))) (forall (($generated@@132 Int) ) (! (= (type ($generated@@78 $generated@@132)) $generated@@67)
 :pattern ( ($generated@@78 $generated@@132))
))))
(assert (forall (($generated@@133 T@U) ($generated@@134 T@U) ) (!  (=> (and (= (type $generated@@133) $generated@@2) (= (type $generated@@134) ($generated@@79 $generated@@80 $generated@@81))) ($generated@@77 $generated@@133 ($generated@@78 0) $generated@@134))
 :pattern ( ($generated@@77 $generated@@133 ($generated@@78 0) $generated@@134))
)))
(assert  (and (= (type $generated@@135) $generated@@67) (= (type $generated@@136) $generated@@80)))
(assert (forall (($generated@@137 T@U) ($generated@@138 T@U) ) (!  (=> (and (= (type $generated@@137) $generated@@80) (= (type $generated@@138) ($generated@@79 $generated@@80 $generated@@81))) (= ($generated@@77 $generated@@137 $generated@@135 $generated@@138)  (or (= $generated@@137 $generated@@136) ($generated@@0 ($generated@@86 ($generated@@84 $generated@@138 $generated@@137) $generated@@60)))))
 :pattern ( ($generated@@77 $generated@@137 $generated@@135 $generated@@138))
)))
(assert (forall (($generated@@140 T@U) ) (!  (=> (= (type $generated@@140) $generated@@2) ($generated@@139 $generated@@140 ($generated@@78 0)))
 :pattern ( ($generated@@139 $generated@@140 ($generated@@78 0)))
)))
(assert  (and (= ($generated@@1 $generated@@143) 14) (forall (($generated@@144 T@U) ($generated@@145 T@U) ) (! (= (type ($generated@@142 $generated@@144 $generated@@145)) $generated@@67)
 :pattern ( ($generated@@142 $generated@@144 $generated@@145))
))))
(assert (forall (($generated@@146 T@U) ($generated@@147 T@U) ($generated@@148 T@U) ) (!  (=> (and (and (and (= (type $generated@@146) $generated@@67) (= (type $generated@@147) $generated@@67)) (= (type $generated@@148) $generated@@143)) ($generated@@139 $generated@@148 ($generated@@142 $generated@@146 $generated@@147))) ($generated@@141 $generated@@148))
 :pattern ( ($generated@@141 $generated@@148) ($generated@@139 $generated@@148 ($generated@@142 $generated@@146 $generated@@147)))
)))
(assert  (and (and (= ($generated@@1 $generated@@152) 15) (forall (($generated@@153 T@U) ) (! (= (type ($generated@@150 $generated@@153)) $generated@@152)
 :pattern ( ($generated@@150 $generated@@153))
))) (forall (($generated@@154 T@U) ) (! (= (type ($generated@@151 $generated@@154)) $generated@@152)
 :pattern ( ($generated@@151 $generated@@154))
))))
(assert (forall (($generated@@155 T@U) ($generated@@156 T@U) ) (!  (=> (and (and (= (type $generated@@155) $generated@@143) (= (type $generated@@156) $generated@@143)) true) (= ($generated@@149 $generated@@155 $generated@@156)  (and (= ($generated@@150 $generated@@155) ($generated@@150 $generated@@156)) (= ($generated@@151 $generated@@155) ($generated@@151 $generated@@156)))))
 :pattern ( ($generated@@149 $generated@@155 $generated@@156))
)))
(assert (forall (($generated@@159 T@U) ) (! (= (type ($generated@@157 $generated@@159)) $generated@@67)
 :pattern ( ($generated@@157 $generated@@159))
)))
(assert (forall (($generated@@160 T@U) ($generated@@161 T@U) ) (!  (=> (and (and (= (type $generated@@160) ($generated@@79 $generated@@152 $generated@@2)) (= (type $generated@@161) $generated@@67)) ($generated@@139 $generated@@160 ($generated@@157 $generated@@161))) ($generated@@158 $generated@@160))
 :pattern ( ($generated@@139 $generated@@160 ($generated@@157 $generated@@161)))
)))
(assert (forall (($generated@@163 T@U) ) (! (= (type ($generated@@162 $generated@@163)) $generated@@67)
 :pattern ( ($generated@@162 $generated@@163))
)))
(assert (forall (($generated@@164 T@U) ) (!  (=> (= (type $generated@@164) $generated@@80) (= ($generated@@139 $generated@@164 $generated@@135)  (or (= $generated@@164 $generated@@136) (= ($generated@@162 $generated@@164) $generated@@135))))
 :pattern ( ($generated@@139 $generated@@164 $generated@@135))
)))
(assert  (and (and (and (and (and (and (and (forall (($generated@@171 T@T) ($generated@@172 T@T) ) (= ($generated@@1 ($generated@@167 $generated@@171 $generated@@172)) 16)) (forall (($generated@@173 T@T) ($generated@@174 T@T) ) (! (= ($generated@@168 ($generated@@167 $generated@@173 $generated@@174)) $generated@@173)
 :pattern ( ($generated@@167 $generated@@173 $generated@@174))
))) (forall (($generated@@175 T@T) ($generated@@176 T@T) ) (! (= ($generated@@169 ($generated@@167 $generated@@175 $generated@@176)) $generated@@176)
 :pattern ( ($generated@@167 $generated@@175 $generated@@176))
))) (forall (($generated@@177 T@U) ($generated@@178 T@U) ($generated@@179 T@U) ) (! (let (($generated@@180 ($generated@@169 (type $generated@@177))))
(= (type ($generated@@165 $generated@@177 $generated@@178 $generated@@179)) $generated@@180))
 :pattern ( ($generated@@165 $generated@@177 $generated@@178 $generated@@179))
))) (forall (($generated@@181 T@U) ($generated@@182 T@U) ($generated@@183 T@U) ($generated@@184 T@U) ) (! (let (($generated@@185 (type $generated@@184)))
(let (($generated@@186 (type $generated@@182)))
(= (type ($generated@@170 $generated@@181 $generated@@182 $generated@@183 $generated@@184)) ($generated@@167 $generated@@186 $generated@@185))))
 :pattern ( ($generated@@170 $generated@@181 $generated@@182 $generated@@183 $generated@@184))
))) (forall (($generated@@187 T@U) ($generated@@188 T@U) ($generated@@189 T@U) ($generated@@190 T@U) ) (! (let (($generated@@191 ($generated@@169 (type $generated@@187))))
 (=> (= (type $generated@@190) $generated@@191) (= ($generated@@165 ($generated@@170 $generated@@187 $generated@@188 $generated@@189 $generated@@190) $generated@@188 $generated@@189) $generated@@190)))
 :weight 0
))) (and (and (forall (($generated@@192 T@U) ($generated@@193 T@U) ($generated@@194 T@U) ($generated@@195 T@U) ($generated@@196 T@U) ($generated@@197 T@U) ) (!  (or (= $generated@@194 $generated@@196) (= ($generated@@165 ($generated@@170 $generated@@193 $generated@@194 $generated@@195 $generated@@192) $generated@@196 $generated@@197) ($generated@@165 $generated@@193 $generated@@196 $generated@@197)))
 :weight 0
)) (forall (($generated@@198 T@U) ($generated@@199 T@U) ($generated@@200 T@U) ($generated@@201 T@U) ($generated@@202 T@U) ($generated@@203 T@U) ) (!  (or (= $generated@@201 $generated@@203) (= ($generated@@165 ($generated@@170 $generated@@199 $generated@@200 $generated@@201 $generated@@198) $generated@@202 $generated@@203) ($generated@@165 $generated@@199 $generated@@202 $generated@@203)))
 :weight 0
))) (forall (($generated@@204 T@U) ($generated@@205 T@U) ($generated@@206 T@U) ($generated@@207 T@U) ($generated@@208 T@U) ($generated@@209 T@U) ) (!  (or true (= ($generated@@165 ($generated@@170 $generated@@205 $generated@@206 $generated@@207 $generated@@204) $generated@@208 $generated@@209) ($generated@@165 $generated@@205 $generated@@208 $generated@@209)))
 :weight 0
)))) (forall (($generated@@210 T@U) ($generated@@211 T@U) ($generated@@212 T@U) ($generated@@213 Bool) ) (! (= (type ($generated@@166 $generated@@210 $generated@@211 $generated@@212 $generated@@213)) ($generated@@167 $generated@@80 $generated@@4))
 :pattern ( ($generated@@166 $generated@@210 $generated@@211 $generated@@212 $generated@@213))
))))
(assert (forall (($generated@@214 T@U) ($generated@@215 T@U) ($generated@@216 T@U) ($generated@@217 Bool) ($generated@@218 T@U) ($generated@@219 T@U) ) (! (let (($generated@@220 ($generated@@70 (type $generated@@219))))
 (=> (and (and (and (and (= (type $generated@@214) $generated@@80) (= (type $generated@@215) ($generated@@79 $generated@@80 $generated@@81))) (= (type $generated@@216) ($generated@@69 $generated@@4))) (= (type $generated@@218) $generated@@80)) (= (type $generated@@219) ($generated@@69 $generated@@220))) (= ($generated@@0 ($generated@@165 ($generated@@166 $generated@@214 $generated@@215 $generated@@216 $generated@@217) $generated@@218 $generated@@219))  (=> (and (not (= $generated@@218 $generated@@214)) ($generated@@0 ($generated@@86 ($generated@@84 $generated@@215 $generated@@218) $generated@@216))) $generated@@217))))
 :pattern ( ($generated@@165 ($generated@@166 $generated@@214 $generated@@215 $generated@@216 $generated@@217) $generated@@218 $generated@@219))
)))
(assert (= (type $generated@@221) $generated@@67))
(assert (forall (($generated@@222 T@U) ($generated@@223 T@U) ) (!  (=> (and (= (type $generated@@222) $generated@@80) (= (type $generated@@223) ($generated@@79 $generated@@80 $generated@@81))) (= ($generated@@77 $generated@@222 $generated@@221 $generated@@223) ($generated@@77 $generated@@222 $generated@@135 $generated@@223)))
 :pattern ( ($generated@@77 $generated@@222 $generated@@221 $generated@@223))
)))
(assert (forall (($generated@@226 T@U) ($generated@@227 T@U) ) (! (= (type ($generated@@224 $generated@@226 $generated@@227)) $generated@@143)
 :pattern ( ($generated@@224 $generated@@226 $generated@@227))
)))
(assert (forall (($generated@@228 T@U) ($generated@@229 T@U) ($generated@@230 T@U) ($generated@@231 T@U) ) (!  (=> (and (and (and (= (type $generated@@228) $generated@@67) (= (type $generated@@229) $generated@@67)) (= (type $generated@@230) $generated@@152)) (= (type $generated@@231) $generated@@152)) (= ($generated@@139 ($generated@@224 $generated@@230 $generated@@231) ($generated@@142 $generated@@228 $generated@@229))  (and ($generated@@225 $generated@@230 $generated@@228) ($generated@@225 $generated@@231 $generated@@229))))
 :pattern ( ($generated@@139 ($generated@@224 $generated@@230 $generated@@231) ($generated@@142 $generated@@228 $generated@@229)))
)))
(assert  (=> (<= 0 $generated@@232) (forall (($generated@@236 T@U) ) (!  (=> (and (= (type $generated@@236) $generated@@80) (or ($generated@@234 $generated@@236) (and (not (= 0 $generated@@232)) (and (not (= $generated@@236 $generated@@136)) ($generated@@139 $generated@@236 $generated@@221))))) (= ($generated@@233 $generated@@236) ($generated@@235 80)))
 :pattern ( ($generated@@233 $generated@@236))
))))
(assert (forall (($generated@@237 T@U) ($generated@@238 T@U) ) (!  (=> (and (= (type $generated@@237) $generated@@143) (= (type $generated@@238) $generated@@143)) (= ($generated@@149 $generated@@237 $generated@@238) (= $generated@@237 $generated@@238)))
 :pattern ( ($generated@@149 $generated@@237 $generated@@238))
)))
(assert (forall (($generated@@240 T@U) ) (! (= (type ($generated@@239 $generated@@240)) $generated@@67)
 :pattern ( ($generated@@239 $generated@@240))
)))
(assert (forall (($generated@@241 T@U) ($generated@@242 T@U) ) (!  (=> (and (= (type $generated@@241) ($generated@@79 $generated@@152 $generated@@4)) (= (type $generated@@242) $generated@@67)) (= ($generated@@139 $generated@@241 ($generated@@239 $generated@@242)) (forall (($generated@@243 T@U) ) (!  (=> (and (= (type $generated@@243) $generated@@152) ($generated@@0 ($generated@@84 $generated@@241 $generated@@243))) ($generated@@225 $generated@@243 $generated@@242))
 :pattern ( ($generated@@84 $generated@@241 $generated@@243))
))))
 :pattern ( ($generated@@139 $generated@@241 ($generated@@239 $generated@@242)))
)))
(assert (forall (($generated@@245 T@U) ) (! (= (type ($generated@@244 $generated@@245)) $generated@@67)
 :pattern ( ($generated@@244 $generated@@245))
)))
(assert (forall (($generated@@246 T@U) ($generated@@247 T@U) ) (!  (=> (and (= (type $generated@@246) ($generated@@79 $generated@@152 $generated@@4)) (= (type $generated@@247) $generated@@67)) (= ($generated@@139 $generated@@246 ($generated@@244 $generated@@247)) (forall (($generated@@248 T@U) ) (!  (=> (and (= (type $generated@@248) $generated@@152) ($generated@@0 ($generated@@84 $generated@@246 $generated@@248))) ($generated@@225 $generated@@248 $generated@@247))
 :pattern ( ($generated@@84 $generated@@246 $generated@@248))
))))
 :pattern ( ($generated@@139 $generated@@246 ($generated@@244 $generated@@247)))
)))
(assert (forall (($generated@@249 Int) ) (! (= ($generated@@235 $generated@@249) $generated@@249)
 :pattern ( ($generated@@235 $generated@@249))
)))
(assert (forall (($generated@@251 T@U) ) (! (let (($generated@@252 (type $generated@@251)))
(= (type ($generated@@250 $generated@@251)) $generated@@252))
 :pattern ( ($generated@@250 $generated@@251))
)))
(assert (forall (($generated@@253 T@U) ) (! (= ($generated@@250 $generated@@253) $generated@@253)
 :pattern ( ($generated@@250 $generated@@253))
)))
(assert (forall (($generated@@256 T@U) ($generated@@257 T@U) ($generated@@258 T@U) ($generated@@259 T@U) ($generated@@260 T@U) ) (!  (=> (and (and (and (and (and (= (type $generated@@256) $generated@@67) (= (type $generated@@257) $generated@@67)) (= (type $generated@@258) $generated@@152)) (= (type $generated@@259) $generated@@152)) (= (type $generated@@260) ($generated@@79 $generated@@80 $generated@@81))) ($generated@@254 $generated@@260)) (= ($generated@@77 ($generated@@224 $generated@@258 $generated@@259) ($generated@@142 $generated@@256 $generated@@257) $generated@@260)  (and ($generated@@255 $generated@@258 $generated@@256 $generated@@260) ($generated@@255 $generated@@259 $generated@@257 $generated@@260))))
 :pattern ( ($generated@@77 ($generated@@224 $generated@@258 $generated@@259) ($generated@@142 $generated@@256 $generated@@257) $generated@@260))
)))
(assert (forall (($generated@@262 T@U) ) (! (= (type ($generated@@261 $generated@@262)) $generated@@71)
 :pattern ( ($generated@@261 $generated@@262))
)))
(assert (forall (($generated@@263 T@U) ) (!  (=> (= (type $generated@@263) $generated@@143) (= ($generated@@141 $generated@@263) (= ($generated@@261 $generated@@263) $generated@@61)))
 :pattern ( ($generated@@141 $generated@@263))
)))
(assert  (=> (<= 0 $generated@@232) (forall (($generated@@264 T@U) ) (!  (=> (and (= (type $generated@@264) $generated@@80) (or ($generated@@234 ($generated@@250 $generated@@264)) (and (not (= 0 $generated@@232)) (and (not (= $generated@@264 $generated@@136)) ($generated@@139 $generated@@264 $generated@@221))))) (= ($generated@@233 ($generated@@250 $generated@@264)) ($generated@@235 80)))
 :weight 3
 :pattern ( ($generated@@233 ($generated@@250 $generated@@264)))
))))
(assert (forall (($generated@@265 T@U) ) (!  (=> (and (= (type $generated@@265) $generated@@143) ($generated@@141 $generated@@265)) (exists (($generated@@266 T@U) ($generated@@267 T@U) ) (!  (and (and (= (type $generated@@266) $generated@@152) (= (type $generated@@267) $generated@@152)) (= $generated@@265 ($generated@@224 $generated@@266 $generated@@267)))
 :no-pattern (type $generated@@266)
 :no-pattern (type $generated@@267)
 :no-pattern ($generated $generated@@266)
 :no-pattern ($generated@@0 $generated@@266)
 :no-pattern ($generated $generated@@267)
 :no-pattern ($generated@@0 $generated@@267)
)))
 :pattern ( ($generated@@141 $generated@@265))
)))
(assert  (and (and (forall (($generated@@272 T@T) ) (= ($generated@@1 ($generated@@270 $generated@@272)) 17)) (forall (($generated@@273 T@T) ) (! (= ($generated@@271 ($generated@@270 $generated@@273)) $generated@@273)
 :pattern ( ($generated@@270 $generated@@273))
))) (forall (($generated@@274 T@T) ) (! (= (type ($generated@@268 $generated@@274)) ($generated@@270 $generated@@274))
 :pattern ( ($generated@@268 $generated@@274))
))))
(assert (forall (($generated@@275 T@T) ) (! (= ($generated@@269 ($generated@@268 $generated@@275)) 0)
 :pattern ( ($generated@@268 $generated@@275))
)))
(assert  (=> (<= 0 $generated@@232) (forall (($generated@@276 T@U) ) (!  (=> (and (= (type $generated@@276) $generated@@80) (or ($generated@@234 $generated@@276) (and (not (= 0 $generated@@232)) (and (not (= $generated@@276 $generated@@136)) ($generated@@139 $generated@@276 $generated@@221))))) true)
 :pattern ( ($generated@@233 $generated@@276))
))))
(assert (forall (($generated@@278 T@U) ) (! (= (type ($generated@@277 $generated@@278)) $generated@@152)
 :pattern ( ($generated@@277 $generated@@278))
)))
(assert (forall (($generated@@279 T@U) ($generated@@280 T@U) ($generated@@281 T@U) ) (!  (=> (and (= (type $generated@@280) $generated@@67) (= (type $generated@@281) ($generated@@79 $generated@@80 $generated@@81))) (= ($generated@@255 ($generated@@277 $generated@@279) $generated@@280 $generated@@281) ($generated@@77 $generated@@279 $generated@@280 $generated@@281)))
 :pattern ( ($generated@@255 ($generated@@277 $generated@@279) $generated@@280 $generated@@281))
)))
(assert (forall (($generated@@284 T@T) ) (! (= (type ($generated@@283 $generated@@284)) ($generated@@79 $generated@@284 $generated@@2))
 :pattern ( ($generated@@283 $generated@@284))
)))
(assert (forall (($generated@@285 T@U) ) (! (let (($generated@@286 ($generated@@82 (type $generated@@285))))
 (=> (= (type $generated@@285) ($generated@@79 $generated@@286 $generated@@2)) (and (= (= ($generated@@282 $generated@@285) 0) (= $generated@@285 ($generated@@283 $generated@@286))) (=> (not (= ($generated@@282 $generated@@285) 0)) (exists (($generated@@287 T@U) ) (!  (and (= (type $generated@@287) $generated@@286) (< 0 ($generated ($generated@@84 $generated@@285 $generated@@287))))
 :no-pattern (type $generated@@287)
 :no-pattern ($generated $generated@@287)
 :no-pattern ($generated@@0 $generated@@287)
))))))
 :pattern ( ($generated@@282 $generated@@285))
)))
(assert  (and (and (and (and (forall (($generated@@293 T@T) ($generated@@294 T@T) ) (= ($generated@@1 ($generated@@290 $generated@@293 $generated@@294)) 18)) (forall (($generated@@295 T@T) ($generated@@296 T@T) ) (! (= ($generated@@291 ($generated@@290 $generated@@295 $generated@@296)) $generated@@295)
 :pattern ( ($generated@@290 $generated@@295 $generated@@296))
))) (forall (($generated@@297 T@T) ($generated@@298 T@T) ) (! (= ($generated@@292 ($generated@@290 $generated@@297 $generated@@298)) $generated@@298)
 :pattern ( ($generated@@290 $generated@@297 $generated@@298))
))) (forall (($generated@@299 T@U) ) (! (let (($generated@@300 ($generated@@291 (type $generated@@299))))
(= (type ($generated@@288 $generated@@299)) ($generated@@79 $generated@@300 $generated@@4)))
 :pattern ( ($generated@@288 $generated@@299))
))) (forall (($generated@@301 T@T) ($generated@@302 T@T) ) (! (= (type ($generated@@289 $generated@@301 $generated@@302)) ($generated@@290 $generated@@301 $generated@@302))
 :pattern ( ($generated@@289 $generated@@301 $generated@@302))
))))
(assert (forall (($generated@@303 T@U) ($generated@@304 T@T) ) (! (let (($generated@@305 (type $generated@@303)))
 (not ($generated@@0 ($generated@@84 ($generated@@288 ($generated@@289 $generated@@305 $generated@@304)) $generated@@303))))
 :pattern ( (let (($generated@@305 (type $generated@@303)))
($generated@@84 ($generated@@288 ($generated@@289 $generated@@305 $generated@@304)) $generated@@303)))
)))
(assert  (and (and (and (and (forall (($generated@@311 T@T) ($generated@@312 T@T) ) (= ($generated@@1 ($generated@@308 $generated@@311 $generated@@312)) 19)) (forall (($generated@@313 T@T) ($generated@@314 T@T) ) (! (= ($generated@@309 ($generated@@308 $generated@@313 $generated@@314)) $generated@@313)
 :pattern ( ($generated@@308 $generated@@313 $generated@@314))
))) (forall (($generated@@315 T@T) ($generated@@316 T@T) ) (! (= ($generated@@310 ($generated@@308 $generated@@315 $generated@@316)) $generated@@316)
 :pattern ( ($generated@@308 $generated@@315 $generated@@316))
))) (forall (($generated@@317 T@U) ) (! (let (($generated@@318 ($generated@@309 (type $generated@@317))))
(= (type ($generated@@306 $generated@@317)) ($generated@@79 $generated@@318 $generated@@4)))
 :pattern ( ($generated@@306 $generated@@317))
))) (forall (($generated@@319 T@T) ($generated@@320 T@T) ) (! (= (type ($generated@@307 $generated@@319 $generated@@320)) ($generated@@308 $generated@@319 $generated@@320))
 :pattern ( ($generated@@307 $generated@@319 $generated@@320))
))))
(assert (forall (($generated@@321 T@U) ($generated@@322 T@T) ) (! (let (($generated@@323 (type $generated@@321)))
 (not ($generated@@0 ($generated@@84 ($generated@@306 ($generated@@307 $generated@@323 $generated@@322)) $generated@@321))))
 :pattern ( (let (($generated@@323 (type $generated@@321)))
($generated@@84 ($generated@@306 ($generated@@307 $generated@@323 $generated@@322)) $generated@@321)))
)))
(assert (forall (($generated@@324 T@U) ) (! (let (($generated@@325 ($generated@@82 (type $generated@@324))))
 (=> (= (type $generated@@324) ($generated@@79 $generated@@325 $generated@@2)) (= ($generated@@158 $generated@@324) (forall (($generated@@326 T@U) ) (!  (=> (= (type $generated@@326) $generated@@325) (and (<= 0 ($generated ($generated@@84 $generated@@324 $generated@@326))) (<= ($generated ($generated@@84 $generated@@324 $generated@@326)) ($generated@@282 $generated@@324))))
 :pattern ( ($generated@@84 $generated@@324 $generated@@326))
)))))
 :pattern ( ($generated@@158 $generated@@324))
)))
(assert (forall (($generated@@328 T@T) ($generated@@329 T@U) ) (! (= (type ($generated@@327 $generated@@328 $generated@@329)) $generated@@328)
 :pattern ( ($generated@@327 $generated@@328 $generated@@329))
)))
(assert (forall (($generated@@330 T@U) ) (!  (=> (and (= (type $generated@@330) $generated@@152) ($generated@@225 $generated@@330 $generated@@135)) (and (= ($generated@@277 ($generated@@327 $generated@@80 $generated@@330)) $generated@@330) ($generated@@139 ($generated@@327 $generated@@80 $generated@@330) $generated@@135)))
 :pattern ( ($generated@@225 $generated@@330 $generated@@135))
)))
(assert (forall (($generated@@331 T@U) ) (!  (=> (and (= (type $generated@@331) $generated@@152) ($generated@@225 $generated@@331 $generated@@221)) (and (= ($generated@@277 ($generated@@327 $generated@@80 $generated@@331)) $generated@@331) ($generated@@139 ($generated@@327 $generated@@80 $generated@@331) $generated@@221)))
 :pattern ( ($generated@@225 $generated@@331 $generated@@221))
)))
(assert (forall (($generated@@332 T@U) ) (!  (=> (= (type $generated@@332) $generated@@80) (= ($generated@@139 $generated@@332 $generated@@221)  (and ($generated@@139 $generated@@332 $generated@@135) (not (= $generated@@332 $generated@@136)))))
 :pattern ( ($generated@@139 $generated@@332 $generated@@221))
)))
(assert (forall (($generated@@333 T@U) ) (! (let (($generated@@334 ($generated@@292 (type $generated@@333))))
(let (($generated@@335 ($generated@@291 (type $generated@@333))))
 (=> (= (type $generated@@333) ($generated@@290 $generated@@335 $generated@@334)) (or (= $generated@@333 ($generated@@289 $generated@@335 $generated@@334)) (exists (($generated@@336 T@U) ) (!  (and (= (type $generated@@336) $generated@@335) ($generated@@0 ($generated@@84 ($generated@@288 $generated@@333) $generated@@336)))
 :no-pattern (type $generated@@336)
 :no-pattern ($generated $generated@@336)
 :no-pattern ($generated@@0 $generated@@336)
))))))
 :pattern ( ($generated@@288 $generated@@333))
)))
(assert (forall (($generated@@338 T@U) ) (! (let (($generated@@339 ($generated@@292 (type $generated@@338))))
(= (type ($generated@@337 $generated@@338)) ($generated@@79 $generated@@339 $generated@@4)))
 :pattern ( ($generated@@337 $generated@@338))
)))
(assert (forall (($generated@@340 T@U) ) (! (let (($generated@@341 ($generated@@292 (type $generated@@340))))
(let (($generated@@342 ($generated@@291 (type $generated@@340))))
 (=> (= (type $generated@@340) ($generated@@290 $generated@@342 $generated@@341)) (or (= $generated@@340 ($generated@@289 $generated@@342 $generated@@341)) (exists (($generated@@343 T@U) ) (!  (and (= (type $generated@@343) $generated@@341) ($generated@@0 ($generated@@84 ($generated@@337 $generated@@340) $generated@@343)))
 :no-pattern (type $generated@@343)
 :no-pattern ($generated $generated@@343)
 :no-pattern ($generated@@0 $generated@@343)
))))))
 :pattern ( ($generated@@337 $generated@@340))
)))
(assert (forall (($generated@@344 T@U) ) (! (let (($generated@@345 ($generated@@310 (type $generated@@344))))
(let (($generated@@346 ($generated@@309 (type $generated@@344))))
 (=> (= (type $generated@@344) ($generated@@308 $generated@@346 $generated@@345)) (or (= $generated@@344 ($generated@@307 $generated@@346 $generated@@345)) (exists (($generated@@347 T@U) ) (!  (and (= (type $generated@@347) $generated@@346) ($generated@@0 ($generated@@84 ($generated@@306 $generated@@344) $generated@@347)))
 :no-pattern (type $generated@@347)
 :no-pattern ($generated $generated@@347)
 :no-pattern ($generated@@0 $generated@@347)
))))))
 :pattern ( ($generated@@306 $generated@@344))
)))
(assert (forall (($generated@@349 T@U) ) (! (let (($generated@@350 ($generated@@310 (type $generated@@349))))
(= (type ($generated@@348 $generated@@349)) ($generated@@79 $generated@@350 $generated@@4)))
 :pattern ( ($generated@@348 $generated@@349))
)))
(assert (forall (($generated@@351 T@U) ) (! (let (($generated@@352 ($generated@@310 (type $generated@@351))))
(let (($generated@@353 ($generated@@309 (type $generated@@351))))
 (=> (= (type $generated@@351) ($generated@@308 $generated@@353 $generated@@352)) (or (= $generated@@351 ($generated@@307 $generated@@353 $generated@@352)) (exists (($generated@@354 T@U) ) (!  (and (= (type $generated@@354) $generated@@352) ($generated@@0 ($generated@@84 ($generated@@348 $generated@@351) $generated@@354)))
 :no-pattern (type $generated@@354)
 :no-pattern ($generated $generated@@354)
 :no-pattern ($generated@@0 $generated@@354)
))))))
 :pattern ( ($generated@@348 $generated@@351))
)))
(assert (forall (($generated@@355 T@U) ($generated@@356 T@U) ) (!  (=> (and (= (type $generated@@355) ($generated@@79 $generated@@152 $generated@@2)) (= (type $generated@@356) $generated@@67)) (= ($generated@@139 $generated@@355 ($generated@@157 $generated@@356)) (forall (($generated@@357 T@U) ) (!  (=> (and (= (type $generated@@357) $generated@@152) (< 0 ($generated ($generated@@84 $generated@@355 $generated@@357)))) ($generated@@225 $generated@@357 $generated@@356))
 :pattern ( ($generated@@84 $generated@@355 $generated@@357))
))))
 :pattern ( ($generated@@139 $generated@@355 ($generated@@157 $generated@@356)))
)))
(assert (forall (($generated@@358 T@U) ($generated@@359 T@U) ($generated@@360 T@U) ) (!  (=> (and (and (= (type $generated@@358) ($generated@@79 $generated@@152 $generated@@4)) (= (type $generated@@359) $generated@@67)) (= (type $generated@@360) ($generated@@79 $generated@@80 $generated@@81))) (= ($generated@@77 $generated@@358 ($generated@@239 $generated@@359) $generated@@360) (forall (($generated@@361 T@U) ) (!  (=> (and (= (type $generated@@361) $generated@@152) ($generated@@0 ($generated@@84 $generated@@358 $generated@@361))) ($generated@@255 $generated@@361 $generated@@359 $generated@@360))
 :pattern ( ($generated@@84 $generated@@358 $generated@@361))
))))
 :pattern ( ($generated@@77 $generated@@358 ($generated@@239 $generated@@359) $generated@@360))
)))
(assert (forall (($generated@@362 T@U) ($generated@@363 T@U) ($generated@@364 T@U) ) (!  (=> (and (and (= (type $generated@@362) ($generated@@79 $generated@@152 $generated@@4)) (= (type $generated@@363) $generated@@67)) (= (type $generated@@364) ($generated@@79 $generated@@80 $generated@@81))) (= ($generated@@77 $generated@@362 ($generated@@244 $generated@@363) $generated@@364) (forall (($generated@@365 T@U) ) (!  (=> (and (= (type $generated@@365) $generated@@152) ($generated@@0 ($generated@@84 $generated@@362 $generated@@365))) ($generated@@255 $generated@@365 $generated@@363 $generated@@364))
 :pattern ( ($generated@@84 $generated@@362 $generated@@365))
))))
 :pattern ( ($generated@@77 $generated@@362 ($generated@@244 $generated@@363) $generated@@364))
)))
(assert (forall (($generated@@366 T@U) ) (! (let (($generated@@367 (type $generated@@366)))
(= ($generated ($generated@@84 ($generated@@283 $generated@@367) $generated@@366)) 0))
 :pattern ( (let (($generated@@367 (type $generated@@366)))
($generated@@84 ($generated@@283 $generated@@367) $generated@@366)))
)))
(assert  (and (forall (($generated@@370 T@U) ) (! (= (type ($generated@@368 $generated@@370)) ($generated@@79 $generated@@152 $generated@@4))
 :pattern ( ($generated@@368 $generated@@370))
)) (forall (($generated@@371 T@U) ) (! (let (($generated@@372 ($generated@@292 (type $generated@@371))))
(let (($generated@@373 ($generated@@291 (type $generated@@371))))
(= (type ($generated@@369 $generated@@371)) ($generated@@79 $generated@@373 $generated@@372))))
 :pattern ( ($generated@@369 $generated@@371))
))))
(assert (forall (($generated@@374 T@U) ($generated@@375 T@U) ) (!  (=> (and (= (type $generated@@374) ($generated@@290 $generated@@152 $generated@@152)) (= (type $generated@@375) $generated@@152)) (= ($generated@@0 ($generated@@84 ($generated@@368 $generated@@374) $generated@@375))  (and ($generated@@0 ($generated@@84 ($generated@@288 $generated@@374) ($generated@@150 ($generated@@327 $generated@@143 $generated@@375)))) (= ($generated@@84 ($generated@@369 $generated@@374) ($generated@@150 ($generated@@327 $generated@@143 $generated@@375))) ($generated@@151 ($generated@@327 $generated@@143 $generated@@375))))))
 :pattern ( ($generated@@84 ($generated@@368 $generated@@374) $generated@@375))
)))
(assert  (and (forall (($generated@@378 T@U) ) (! (= (type ($generated@@376 $generated@@378)) ($generated@@79 $generated@@152 $generated@@4))
 :pattern ( ($generated@@376 $generated@@378))
)) (forall (($generated@@379 T@U) ) (! (let (($generated@@380 ($generated@@310 (type $generated@@379))))
(let (($generated@@381 ($generated@@309 (type $generated@@379))))
(= (type ($generated@@377 $generated@@379)) ($generated@@79 $generated@@381 $generated@@380))))
 :pattern ( ($generated@@377 $generated@@379))
))))
(assert (forall (($generated@@382 T@U) ($generated@@383 T@U) ) (!  (=> (and (= (type $generated@@382) ($generated@@308 $generated@@152 $generated@@152)) (= (type $generated@@383) $generated@@152)) (= ($generated@@0 ($generated@@84 ($generated@@376 $generated@@382) $generated@@383))  (and ($generated@@0 ($generated@@84 ($generated@@306 $generated@@382) ($generated@@150 ($generated@@327 $generated@@143 $generated@@383)))) (= ($generated@@84 ($generated@@377 $generated@@382) ($generated@@150 ($generated@@327 $generated@@143 $generated@@383))) ($generated@@151 ($generated@@327 $generated@@143 $generated@@383))))))
 :pattern ( ($generated@@84 ($generated@@376 $generated@@382) $generated@@383))
)))
(assert (forall (($generated@@384 T@U) ($generated@@385 T@U) ) (! (let (($generated@@386 (type $generated@@385)))
(let (($generated@@387 ($generated@@291 (type $generated@@384))))
 (=> (= (type $generated@@384) ($generated@@290 $generated@@387 $generated@@386)) (= ($generated@@0 ($generated@@84 ($generated@@337 $generated@@384) $generated@@385)) (exists (($generated@@388 T@U) ) (!  (and (= (type $generated@@388) $generated@@387) (and ($generated@@0 ($generated@@84 ($generated@@288 $generated@@384) $generated@@388)) (= $generated@@385 ($generated@@84 ($generated@@369 $generated@@384) $generated@@388))))
 :pattern ( ($generated@@84 ($generated@@288 $generated@@384) $generated@@388))
 :pattern ( ($generated@@84 ($generated@@369 $generated@@384) $generated@@388))
))))))
 :pattern ( ($generated@@84 ($generated@@337 $generated@@384) $generated@@385))
)))
(assert (forall (($generated@@389 T@U) ($generated@@390 T@U) ) (! (let (($generated@@391 (type $generated@@390)))
(let (($generated@@392 ($generated@@309 (type $generated@@389))))
 (=> (= (type $generated@@389) ($generated@@308 $generated@@392 $generated@@391)) (= ($generated@@0 ($generated@@84 ($generated@@348 $generated@@389) $generated@@390)) (exists (($generated@@393 T@U) ) (!  (and (= (type $generated@@393) $generated@@392) (and ($generated@@0 ($generated@@84 ($generated@@306 $generated@@389) $generated@@393)) (= $generated@@390 ($generated@@84 ($generated@@377 $generated@@389) $generated@@393))))
 :pattern ( ($generated@@84 ($generated@@306 $generated@@389) $generated@@393))
 :pattern ( ($generated@@84 ($generated@@377 $generated@@389) $generated@@393))
))))))
 :pattern ( ($generated@@84 ($generated@@348 $generated@@389) $generated@@390))
)))
(assert (forall (($generated@@395 T@U) ($generated@@396 T@U) ) (! (= (type ($generated@@394 $generated@@395 $generated@@396)) $generated@@67)
 :pattern ( ($generated@@394 $generated@@395 $generated@@396))
)))
(assert (forall (($generated@@397 T@U) ($generated@@398 T@U) ($generated@@399 T@U) ($generated@@400 T@U) ) (!  (=> (and (and (and (= (type $generated@@397) ($generated@@290 $generated@@152 $generated@@152)) (= (type $generated@@398) $generated@@67)) (= (type $generated@@399) $generated@@67)) (= (type $generated@@400) ($generated@@79 $generated@@80 $generated@@81))) (= ($generated@@77 $generated@@397 ($generated@@394 $generated@@398 $generated@@399) $generated@@400) (forall (($generated@@401 T@U) ) (!  (=> (and (= (type $generated@@401) $generated@@152) ($generated@@0 ($generated@@84 ($generated@@288 $generated@@397) $generated@@401))) (and ($generated@@255 ($generated@@84 ($generated@@369 $generated@@397) $generated@@401) $generated@@399 $generated@@400) ($generated@@255 $generated@@401 $generated@@398 $generated@@400)))
 :pattern ( ($generated@@84 ($generated@@369 $generated@@397) $generated@@401))
 :pattern ( ($generated@@84 ($generated@@288 $generated@@397) $generated@@401))
))))
 :pattern ( ($generated@@77 $generated@@397 ($generated@@394 $generated@@398 $generated@@399) $generated@@400))
)))
(assert (forall (($generated@@403 T@U) ($generated@@404 T@U) ) (! (= (type ($generated@@402 $generated@@403 $generated@@404)) $generated@@67)
 :pattern ( ($generated@@402 $generated@@403 $generated@@404))
)))
(assert (forall (($generated@@405 T@U) ($generated@@406 T@U) ($generated@@407 T@U) ($generated@@408 T@U) ) (!  (=> (and (and (and (= (type $generated@@405) ($generated@@308 $generated@@152 $generated@@152)) (= (type $generated@@406) $generated@@67)) (= (type $generated@@407) $generated@@67)) (= (type $generated@@408) ($generated@@79 $generated@@80 $generated@@81))) (= ($generated@@77 $generated@@405 ($generated@@402 $generated@@406 $generated@@407) $generated@@408) (forall (($generated@@409 T@U) ) (!  (=> (and (= (type $generated@@409) $generated@@152) ($generated@@0 ($generated@@84 ($generated@@306 $generated@@405) $generated@@409))) (and ($generated@@255 ($generated@@84 ($generated@@377 $generated@@405) $generated@@409) $generated@@407 $generated@@408) ($generated@@255 $generated@@409 $generated@@406 $generated@@408)))
 :pattern ( ($generated@@84 ($generated@@377 $generated@@405) $generated@@409))
 :pattern ( ($generated@@84 ($generated@@306 $generated@@405) $generated@@409))
))))
 :pattern ( ($generated@@77 $generated@@405 ($generated@@402 $generated@@406 $generated@@407) $generated@@408))
)))
(assert (forall (($generated@@411 T@T) ) (! (= (type ($generated@@410 $generated@@411)) ($generated@@79 $generated@@411 $generated@@4))
 :pattern ( ($generated@@410 $generated@@411))
)))
(assert (forall (($generated@@412 T@U) ) (! (let (($generated@@413 ($generated@@310 (type $generated@@412))))
(let (($generated@@414 ($generated@@309 (type $generated@@412))))
 (=> (= (type $generated@@412) ($generated@@308 $generated@@414 $generated@@413)) (= (= $generated@@412 ($generated@@307 $generated@@414 $generated@@413)) (= ($generated@@306 $generated@@412) ($generated@@410 $generated@@414))))))
 :pattern ( ($generated@@306 $generated@@412))
)))
(assert (forall (($generated@@415 T@U) ) (! (let (($generated@@416 ($generated@@310 (type $generated@@415))))
(let (($generated@@417 ($generated@@309 (type $generated@@415))))
 (=> (= (type $generated@@415) ($generated@@308 $generated@@417 $generated@@416)) (= (= $generated@@415 ($generated@@307 $generated@@417 $generated@@416)) (= ($generated@@348 $generated@@415) ($generated@@410 $generated@@416))))))
 :pattern ( ($generated@@348 $generated@@415))
)))
(assert (forall (($generated@@418 T@U) ) (! (let (($generated@@419 ($generated@@310 (type $generated@@418))))
(let (($generated@@420 ($generated@@309 (type $generated@@418))))
 (=> (= (type $generated@@418) ($generated@@308 $generated@@420 $generated@@419)) (= (= $generated@@418 ($generated@@307 $generated@@420 $generated@@419)) (= ($generated@@376 $generated@@418) ($generated@@410 $generated@@152))))))
 :pattern ( ($generated@@376 $generated@@418))
)))
(assert (forall (($generated@@421 T@U) ) (! (let (($generated@@422 ($generated@@292 (type $generated@@421))))
(let (($generated@@423 ($generated@@291 (type $generated@@421))))
 (=> (= (type $generated@@421) ($generated@@290 $generated@@423 $generated@@422)) (or (= $generated@@421 ($generated@@289 $generated@@423 $generated@@422)) (exists (($generated@@424 T@U) ($generated@@425 T@U) ) (!  (and (and (= (type $generated@@424) $generated@@152) (= (type $generated@@425) $generated@@152)) ($generated@@0 ($generated@@84 ($generated@@368 $generated@@421) ($generated@@277 ($generated@@224 $generated@@424 $generated@@425)))))
 :no-pattern (type $generated@@424)
 :no-pattern (type $generated@@425)
 :no-pattern ($generated $generated@@424)
 :no-pattern ($generated@@0 $generated@@424)
 :no-pattern ($generated $generated@@425)
 :no-pattern ($generated@@0 $generated@@425)
))))))
 :pattern ( ($generated@@368 $generated@@421))
)))
(assert (forall (($generated@@426 T@U) ) (! (let (($generated@@427 ($generated@@310 (type $generated@@426))))
(let (($generated@@428 ($generated@@309 (type $generated@@426))))
 (=> (= (type $generated@@426) ($generated@@308 $generated@@428 $generated@@427)) (or (= $generated@@426 ($generated@@307 $generated@@428 $generated@@427)) (exists (($generated@@429 T@U) ($generated@@430 T@U) ) (!  (and (and (= (type $generated@@429) $generated@@152) (= (type $generated@@430) $generated@@152)) ($generated@@0 ($generated@@84 ($generated@@376 $generated@@426) ($generated@@277 ($generated@@224 $generated@@429 $generated@@430)))))
 :no-pattern (type $generated@@429)
 :no-pattern (type $generated@@430)
 :no-pattern ($generated $generated@@429)
 :no-pattern ($generated@@0 $generated@@429)
 :no-pattern ($generated $generated@@430)
 :no-pattern ($generated@@0 $generated@@430)
))))))
 :pattern ( ($generated@@376 $generated@@426))
)))
(assert (forall (($generated@@431 T@U) ) (!  (=> (and (= (type $generated@@431) $generated@@152) ($generated@@225 $generated@@431 $generated@@46)) (and (= ($generated@@277 ($generated@@327 $generated@@2 $generated@@431)) $generated@@431) ($generated@@139 ($generated@@327 $generated@@2 $generated@@431) $generated@@46)))
 :pattern ( ($generated@@225 $generated@@431 $generated@@46))
)))
(assert (forall (($generated@@432 T@U) ) (!  (=> (and (= (type $generated@@432) $generated@@152) ($generated@@225 $generated@@432 $generated@@47)) (and (= ($generated@@277 ($generated@@327 $generated@@3 $generated@@432)) $generated@@432) ($generated@@139 ($generated@@327 $generated@@3 $generated@@432) $generated@@47)))
 :pattern ( ($generated@@225 $generated@@432 $generated@@47))
)))
(assert (forall (($generated@@433 T@U) ) (!  (=> (and (= (type $generated@@433) $generated@@152) ($generated@@225 $generated@@433 $generated@@44)) (and (= ($generated@@277 ($generated@@327 $generated@@4 $generated@@433)) $generated@@433) ($generated@@139 ($generated@@327 $generated@@4 $generated@@433) $generated@@44)))
 :pattern ( ($generated@@225 $generated@@433 $generated@@44))
)))
(assert (= ($generated@@1 $generated@@434) 20))
(assert (forall (($generated@@435 T@U) ) (!  (=> (and (= (type $generated@@435) $generated@@152) ($generated@@225 $generated@@435 $generated@@45)) (and (= ($generated@@277 ($generated@@327 $generated@@434 $generated@@435)) $generated@@435) ($generated@@139 ($generated@@327 $generated@@434 $generated@@435) $generated@@45)))
 :pattern ( ($generated@@225 $generated@@435 $generated@@45))
)))
(assert (forall (($generated@@436 T@U) ($generated@@437 T@U) ) (!  (=> (= (type $generated@@437) $generated@@67) (= ($generated@@225 ($generated@@277 $generated@@436) $generated@@437) ($generated@@139 $generated@@436 $generated@@437)))
 :pattern ( ($generated@@225 ($generated@@277 $generated@@436) $generated@@437))
)))
(assert (forall (($generated@@438 T@U) ) (! (let (($generated@@439 ($generated@@82 (type $generated@@438))))
 (=> (= (type $generated@@438) ($generated@@79 $generated@@439 $generated@@2)) (<= 0 ($generated@@282 $generated@@438))))
 :pattern ( ($generated@@282 $generated@@438))
)))
(assert (forall (($generated@@440 T@U) ) (! (let (($generated@@441 ($generated@@271 (type $generated@@440))))
 (=> (= (type $generated@@440) ($generated@@270 $generated@@441)) (<= 0 ($generated@@269 $generated@@440))))
 :pattern ( ($generated@@269 $generated@@440))
)))
(assert (forall (($generated@@443 T@U) ) (! (= (type ($generated@@442 $generated@@443)) $generated@@67)
 :pattern ( ($generated@@442 $generated@@443))
)))
(assert (forall (($generated@@444 T@U) ($generated@@445 T@U) ) (!  (=> (and (= (type $generated@@444) $generated@@67) (= (type $generated@@445) $generated@@67)) (= ($generated@@442 ($generated@@394 $generated@@444 $generated@@445)) $generated@@444))
 :pattern ( ($generated@@394 $generated@@444 $generated@@445))
)))
(assert (forall (($generated@@447 T@U) ) (! (= (type ($generated@@446 $generated@@447)) $generated@@67)
 :pattern ( ($generated@@446 $generated@@447))
)))
(assert (forall (($generated@@448 T@U) ($generated@@449 T@U) ) (!  (=> (and (= (type $generated@@448) $generated@@67) (= (type $generated@@449) $generated@@67)) (= ($generated@@446 ($generated@@394 $generated@@448 $generated@@449)) $generated@@449))
 :pattern ( ($generated@@394 $generated@@448 $generated@@449))
)))
(assert (forall (($generated@@450 T@U) ($generated@@451 T@U) ) (!  (=> (and (= (type $generated@@450) $generated@@67) (= (type $generated@@451) $generated@@67)) (= ($generated@@75 ($generated@@394 $generated@@450 $generated@@451)) $generated@@58))
 :pattern ( ($generated@@394 $generated@@450 $generated@@451))
)))
(assert (forall (($generated@@453 T@U) ) (! (= (type ($generated@@452 $generated@@453)) $generated@@67)
 :pattern ( ($generated@@452 $generated@@453))
)))
(assert (forall (($generated@@454 T@U) ($generated@@455 T@U) ) (!  (=> (and (= (type $generated@@454) $generated@@67) (= (type $generated@@455) $generated@@67)) (= ($generated@@452 ($generated@@402 $generated@@454 $generated@@455)) $generated@@454))
 :pattern ( ($generated@@402 $generated@@454 $generated@@455))
)))
(assert (forall (($generated@@457 T@U) ) (! (= (type ($generated@@456 $generated@@457)) $generated@@67)
 :pattern ( ($generated@@456 $generated@@457))
)))
(assert (forall (($generated@@458 T@U) ($generated@@459 T@U) ) (!  (=> (and (= (type $generated@@458) $generated@@67) (= (type $generated@@459) $generated@@67)) (= ($generated@@456 ($generated@@402 $generated@@458 $generated@@459)) $generated@@459))
 :pattern ( ($generated@@402 $generated@@458 $generated@@459))
)))
(assert (forall (($generated@@460 T@U) ($generated@@461 T@U) ) (!  (=> (and (= (type $generated@@460) $generated@@67) (= (type $generated@@461) $generated@@67)) (= ($generated@@75 ($generated@@402 $generated@@460 $generated@@461)) $generated@@59))
 :pattern ( ($generated@@402 $generated@@460 $generated@@461))
)))
(assert (forall (($generated@@462 T@U) ($generated@@463 T@U) ) (!  (=> (and (= (type $generated@@462) $generated@@152) (= (type $generated@@463) $generated@@152)) (= ($generated@@261 ($generated@@224 $generated@@462 $generated@@463)) $generated@@61))
 :pattern ( ($generated@@224 $generated@@462 $generated@@463))
)))
(assert (forall (($generated@@465 T@U) ) (! (= (type ($generated@@464 $generated@@465)) $generated@@67)
 :pattern ( ($generated@@464 $generated@@465))
)))
(assert (forall (($generated@@466 T@U) ($generated@@467 T@U) ) (!  (=> (and (= (type $generated@@466) $generated@@67) (= (type $generated@@467) $generated@@67)) (= ($generated@@464 ($generated@@142 $generated@@466 $generated@@467)) $generated@@466))
 :pattern ( ($generated@@142 $generated@@466 $generated@@467))
)))
(assert (forall (($generated@@469 T@U) ) (! (= (type ($generated@@468 $generated@@469)) $generated@@67)
 :pattern ( ($generated@@468 $generated@@469))
)))
(assert (forall (($generated@@470 T@U) ($generated@@471 T@U) ) (!  (=> (and (= (type $generated@@470) $generated@@67) (= (type $generated@@471) $generated@@67)) (= ($generated@@468 ($generated@@142 $generated@@470 $generated@@471)) $generated@@471))
 :pattern ( ($generated@@142 $generated@@470 $generated@@471))
)))
(assert (forall (($generated@@472 T@U) ($generated@@473 T@U) ) (!  (=> (and (= (type $generated@@472) $generated@@152) (= (type $generated@@473) $generated@@152)) (= ($generated@@150 ($generated@@224 $generated@@472 $generated@@473)) $generated@@472))
 :pattern ( ($generated@@224 $generated@@472 $generated@@473))
)))
(assert (forall (($generated@@474 T@U) ($generated@@475 T@U) ) (!  (=> (and (= (type $generated@@474) $generated@@152) (= (type $generated@@475) $generated@@152)) (= ($generated@@151 ($generated@@224 $generated@@474 $generated@@475)) $generated@@475))
 :pattern ( ($generated@@224 $generated@@474 $generated@@475))
)))
(assert  (and (forall (($generated@@478 T@U) ) (! (= (type ($generated@@476 $generated@@478)) $generated@@67)
 :pattern ( ($generated@@476 $generated@@478))
)) (forall (($generated@@479 T@U) ($generated@@480 Int) ) (! (let (($generated@@481 ($generated@@271 (type $generated@@479))))
(= (type ($generated@@477 $generated@@479 $generated@@480)) $generated@@481))
 :pattern ( ($generated@@477 $generated@@479 $generated@@480))
))))
(assert (forall (($generated@@482 T@U) ($generated@@483 T@U) ($generated@@484 T@U) ) (!  (=> (and (and (= (type $generated@@482) ($generated@@270 $generated@@152)) (= (type $generated@@483) $generated@@67)) (= (type $generated@@484) ($generated@@79 $generated@@80 $generated@@81))) (= ($generated@@77 $generated@@482 ($generated@@476 $generated@@483) $generated@@484) (forall (($generated@@485 Int) ) (!  (=> (and (<= 0 $generated@@485) (< $generated@@485 ($generated@@269 $generated@@482))) ($generated@@255 ($generated@@477 $generated@@482 $generated@@485) $generated@@483 $generated@@484))
 :pattern ( ($generated@@477 $generated@@482 $generated@@485))
))))
 :pattern ( ($generated@@77 $generated@@482 ($generated@@476 $generated@@483) $generated@@484))
)))
(assert (forall (($generated@@487 Int) ) (! (= ($generated@@486 ($generated@@78 $generated@@487)) $generated@@487)
 :pattern ( ($generated@@78 $generated@@487))
)))
(assert (forall (($generated@@489 T@U) ) (! (= (type ($generated@@488 $generated@@489)) $generated@@67)
 :pattern ( ($generated@@488 $generated@@489))
)))
(assert (forall (($generated@@490 T@U) ) (!  (=> (= (type $generated@@490) $generated@@67) (= ($generated@@488 ($generated@@239 $generated@@490)) $generated@@490))
 :pattern ( ($generated@@239 $generated@@490))
)))
(assert (forall (($generated@@491 T@U) ) (!  (=> (= (type $generated@@491) $generated@@67) (= ($generated@@75 ($generated@@239 $generated@@491)) $generated@@54))
 :pattern ( ($generated@@239 $generated@@491))
)))
(assert (forall (($generated@@493 T@U) ) (! (= (type ($generated@@492 $generated@@493)) $generated@@67)
 :pattern ( ($generated@@492 $generated@@493))
)))
(assert (forall (($generated@@494 T@U) ) (!  (=> (= (type $generated@@494) $generated@@67) (= ($generated@@492 ($generated@@244 $generated@@494)) $generated@@494))
 :pattern ( ($generated@@244 $generated@@494))
)))
(assert (forall (($generated@@495 T@U) ) (!  (=> (= (type $generated@@495) $generated@@67) (= ($generated@@75 ($generated@@244 $generated@@495)) $generated@@55))
 :pattern ( ($generated@@244 $generated@@495))
)))
(assert (forall (($generated@@497 T@U) ) (! (= (type ($generated@@496 $generated@@497)) $generated@@67)
 :pattern ( ($generated@@496 $generated@@497))
)))
(assert (forall (($generated@@498 T@U) ) (!  (=> (= (type $generated@@498) $generated@@67) (= ($generated@@496 ($generated@@157 $generated@@498)) $generated@@498))
 :pattern ( ($generated@@157 $generated@@498))
)))
(assert (forall (($generated@@499 T@U) ) (!  (=> (= (type $generated@@499) $generated@@67) (= ($generated@@75 ($generated@@157 $generated@@499)) $generated@@56))
 :pattern ( ($generated@@157 $generated@@499))
)))
(assert (forall (($generated@@501 T@U) ) (! (= (type ($generated@@500 $generated@@501)) $generated@@67)
 :pattern ( ($generated@@500 $generated@@501))
)))
(assert (forall (($generated@@502 T@U) ) (!  (=> (= (type $generated@@502) $generated@@67) (= ($generated@@500 ($generated@@476 $generated@@502)) $generated@@502))
 :pattern ( ($generated@@476 $generated@@502))
)))
(assert (forall (($generated@@503 T@U) ) (!  (=> (= (type $generated@@503) $generated@@67) (= ($generated@@75 ($generated@@476 $generated@@503)) $generated@@57))
 :pattern ( ($generated@@476 $generated@@503))
)))
(assert (forall (($generated@@504 T@U) ) (! (let (($generated@@505 (type $generated@@504)))
(= ($generated@@327 $generated@@505 ($generated@@277 $generated@@504)) $generated@@504))
 :pattern ( ($generated@@277 $generated@@504))
)))
(assert (forall (($generated@@506 T@U) ($generated@@507 T@U) ($generated@@508 T@U) ) (!  (=> (and (and (= (type $generated@@506) ($generated@@290 $generated@@152 $generated@@152)) (= (type $generated@@507) $generated@@67)) (= (type $generated@@508) $generated@@67)) (= ($generated@@139 $generated@@506 ($generated@@394 $generated@@507 $generated@@508)) (forall (($generated@@509 T@U) ) (!  (=> (and (= (type $generated@@509) $generated@@152) ($generated@@0 ($generated@@84 ($generated@@288 $generated@@506) $generated@@509))) (and ($generated@@225 ($generated@@84 ($generated@@369 $generated@@506) $generated@@509) $generated@@508) ($generated@@225 $generated@@509 $generated@@507)))
 :pattern ( ($generated@@84 ($generated@@369 $generated@@506) $generated@@509))
 :pattern ( ($generated@@84 ($generated@@288 $generated@@506) $generated@@509))
))))
 :pattern ( ($generated@@139 $generated@@506 ($generated@@394 $generated@@507 $generated@@508)))
)))
(assert (forall (($generated@@510 T@U) ($generated@@511 T@U) ($generated@@512 T@U) ) (!  (=> (and (and (= (type $generated@@510) ($generated@@308 $generated@@152 $generated@@152)) (= (type $generated@@511) $generated@@67)) (= (type $generated@@512) $generated@@67)) (= ($generated@@139 $generated@@510 ($generated@@402 $generated@@511 $generated@@512)) (forall (($generated@@513 T@U) ) (!  (=> (and (= (type $generated@@513) $generated@@152) ($generated@@0 ($generated@@84 ($generated@@306 $generated@@510) $generated@@513))) (and ($generated@@225 ($generated@@84 ($generated@@377 $generated@@510) $generated@@513) $generated@@512) ($generated@@225 $generated@@513 $generated@@511)))
 :pattern ( ($generated@@84 ($generated@@377 $generated@@510) $generated@@513))
 :pattern ( ($generated@@84 ($generated@@306 $generated@@510) $generated@@513))
))))
 :pattern ( ($generated@@139 $generated@@510 ($generated@@402 $generated@@511 $generated@@512)))
)))
(assert (forall (($generated@@516 T@U) ($generated@@517 T@U) ) (!  (=> (and (= (type $generated@@516) $generated@@152) (= (type $generated@@517) $generated@@152)) (< ($generated@@514 $generated@@516) ($generated@@515 ($generated@@224 $generated@@516 $generated@@517))))
 :pattern ( ($generated@@224 $generated@@516 $generated@@517))
)))
(assert (forall (($generated@@518 T@U) ($generated@@519 T@U) ) (!  (=> (and (= (type $generated@@518) $generated@@152) (= (type $generated@@519) $generated@@152)) (< ($generated@@514 $generated@@519) ($generated@@515 ($generated@@224 $generated@@518 $generated@@519))))
 :pattern ( ($generated@@224 $generated@@518 $generated@@519))
)))
(assert (forall (($generated@@520 T@U) ($generated@@521 T@U) ($generated@@522 T@U) ) (!  (=> (and (and (and (= (type $generated@@520) $generated@@152) (= (type $generated@@521) $generated@@67)) (= (type $generated@@522) $generated@@67)) ($generated@@225 $generated@@520 ($generated@@394 $generated@@521 $generated@@522))) (and (= ($generated@@277 ($generated@@327 ($generated@@290 $generated@@152 $generated@@152) $generated@@520)) $generated@@520) ($generated@@139 ($generated@@327 ($generated@@290 $generated@@152 $generated@@152) $generated@@520) ($generated@@394 $generated@@521 $generated@@522))))
 :pattern ( ($generated@@225 $generated@@520 ($generated@@394 $generated@@521 $generated@@522)))
)))
(assert (forall (($generated@@523 T@U) ($generated@@524 T@U) ($generated@@525 T@U) ) (!  (=> (and (and (and (= (type $generated@@523) $generated@@152) (= (type $generated@@524) $generated@@67)) (= (type $generated@@525) $generated@@67)) ($generated@@225 $generated@@523 ($generated@@402 $generated@@524 $generated@@525))) (and (= ($generated@@277 ($generated@@327 ($generated@@308 $generated@@152 $generated@@152) $generated@@523)) $generated@@523) ($generated@@139 ($generated@@327 ($generated@@308 $generated@@152 $generated@@152) $generated@@523) ($generated@@402 $generated@@524 $generated@@525))))
 :pattern ( ($generated@@225 $generated@@523 ($generated@@402 $generated@@524 $generated@@525)))
)))
(assert (forall (($generated@@526 T@U) ($generated@@527 T@U) ($generated@@528 T@U) ) (!  (=> (and (and (and (= (type $generated@@526) $generated@@67) (= (type $generated@@527) $generated@@67)) (= (type $generated@@528) $generated@@152)) ($generated@@225 $generated@@528 ($generated@@142 $generated@@526 $generated@@527))) (and (= ($generated@@277 ($generated@@327 $generated@@143 $generated@@528)) $generated@@528) ($generated@@139 ($generated@@327 $generated@@143 $generated@@528) ($generated@@142 $generated@@526 $generated@@527))))
 :pattern ( ($generated@@225 $generated@@528 ($generated@@142 $generated@@526 $generated@@527)))
)))
(assert (forall (($generated@@529 T@U) ) (! (let (($generated@@530 (type $generated@@529)))
 (not ($generated@@0 ($generated@@84 ($generated@@410 $generated@@530) $generated@@529))))
 :pattern ( (let (($generated@@530 (type $generated@@529)))
($generated@@84 ($generated@@410 $generated@@530) $generated@@529)))
)))
(assert (forall (($generated@@532 T@U) ) (! (= (type ($generated@@531 $generated@@532)) $generated@@72)
 :pattern ( ($generated@@531 $generated@@532))
)))
(assert (forall (($generated@@533 T@U) ($generated@@534 T@U) ) (!  (=> (and (= (type $generated@@533) $generated@@67) (= (type $generated@@534) $generated@@67)) (and (= ($generated@@75 ($generated@@142 $generated@@533 $generated@@534)) $generated@@62) (= ($generated@@531 ($generated@@142 $generated@@533 $generated@@534)) $generated@@65)))
 :pattern ( ($generated@@142 $generated@@533 $generated@@534))
)))
(assert (forall (($generated@@535 T@U) ) (!  (=> (= (type $generated@@535) $generated@@143) (= ($generated@@514 ($generated@@277 $generated@@535)) ($generated@@515 $generated@@535)))
 :pattern ( ($generated@@514 ($generated@@277 $generated@@535)))
)))
(assert (forall (($generated@@536 T@U) ) (!  (=> (and (= (type $generated@@536) $generated@@152) ($generated@@225 $generated@@536 ($generated@@78 0))) (and (= ($generated@@277 ($generated@@327 $generated@@2 $generated@@536)) $generated@@536) ($generated@@139 ($generated@@327 ($generated@@79 $generated@@152 $generated@@4) $generated@@536) ($generated@@78 0))))
 :pattern ( ($generated@@225 $generated@@536 ($generated@@78 0)))
)))
(assert (forall (($generated@@537 T@U) ($generated@@538 T@U) ) (!  (=> (and (and (= (type $generated@@537) $generated@@152) (= (type $generated@@538) $generated@@67)) ($generated@@225 $generated@@537 ($generated@@239 $generated@@538))) (and (= ($generated@@277 ($generated@@327 ($generated@@79 $generated@@152 $generated@@4) $generated@@537)) $generated@@537) ($generated@@139 ($generated@@327 ($generated@@79 $generated@@152 $generated@@4) $generated@@537) ($generated@@239 $generated@@538))))
 :pattern ( ($generated@@225 $generated@@537 ($generated@@239 $generated@@538)))
)))
(assert (forall (($generated@@539 T@U) ($generated@@540 T@U) ) (!  (=> (and (and (= (type $generated@@539) $generated@@152) (= (type $generated@@540) $generated@@67)) ($generated@@225 $generated@@539 ($generated@@244 $generated@@540))) (and (= ($generated@@277 ($generated@@327 ($generated@@79 $generated@@152 $generated@@4) $generated@@539)) $generated@@539) ($generated@@139 ($generated@@327 ($generated@@79 $generated@@152 $generated@@4) $generated@@539) ($generated@@244 $generated@@540))))
 :pattern ( ($generated@@225 $generated@@539 ($generated@@244 $generated@@540)))
)))
(assert (forall (($generated@@541 T@U) ($generated@@542 T@U) ) (!  (=> (and (and (= (type $generated@@541) $generated@@152) (= (type $generated@@542) $generated@@67)) ($generated@@225 $generated@@541 ($generated@@157 $generated@@542))) (and (= ($generated@@277 ($generated@@327 ($generated@@79 $generated@@152 $generated@@2) $generated@@541)) $generated@@541) ($generated@@139 ($generated@@327 ($generated@@79 $generated@@152 $generated@@2) $generated@@541) ($generated@@157 $generated@@542))))
 :pattern ( ($generated@@225 $generated@@541 ($generated@@157 $generated@@542)))
)))
(assert (forall (($generated@@543 T@U) ($generated@@544 T@U) ) (!  (=> (and (and (= (type $generated@@543) $generated@@152) (= (type $generated@@544) $generated@@67)) ($generated@@225 $generated@@543 ($generated@@476 $generated@@544))) (and (= ($generated@@277 ($generated@@327 ($generated@@270 $generated@@152) $generated@@543)) $generated@@543) ($generated@@139 ($generated@@327 ($generated@@270 $generated@@152) $generated@@543) ($generated@@476 $generated@@544))))
 :pattern ( ($generated@@225 $generated@@543 ($generated@@476 $generated@@544)))
)))
(assert (= ($generated@@75 $generated@@135) $generated@@63))
(assert (= ($generated@@531 $generated@@135) $generated@@66))
(assert (= ($generated@@75 $generated@@221) $generated@@64))
(assert (= ($generated@@531 $generated@@221) $generated@@66))
(assert (forall (($generated@@545 T@U) ($generated@@546 T@U) ($generated@@547 T@U) ) (!  (=> (and (and (= (type $generated@@545) ($generated@@79 $generated@@152 $generated@@2)) (= (type $generated@@546) $generated@@67)) (= (type $generated@@547) ($generated@@79 $generated@@80 $generated@@81))) (= ($generated@@77 $generated@@545 ($generated@@157 $generated@@546) $generated@@547) (forall (($generated@@548 T@U) ) (!  (=> (and (= (type $generated@@548) $generated@@152) (< 0 ($generated ($generated@@84 $generated@@545 $generated@@548)))) ($generated@@255 $generated@@548 $generated@@546 $generated@@547))
 :pattern ( ($generated@@84 $generated@@545 $generated@@548))
))))
 :pattern ( ($generated@@77 $generated@@545 ($generated@@157 $generated@@546) $generated@@547))
)))
(assert (forall (($generated@@549 T@U) ($generated@@550 T@U) ($generated@@551 T@U) ) (!  (=> (and (and (and (= (type $generated@@549) $generated@@143) (= (type $generated@@550) $generated@@67)) (= (type $generated@@551) ($generated@@79 $generated@@80 $generated@@81))) (and ($generated@@254 $generated@@551) (and ($generated@@141 $generated@@549) (exists (($generated@@552 T@U) ) (!  (and (= (type $generated@@552) $generated@@67) ($generated@@77 $generated@@549 ($generated@@142 $generated@@550 $generated@@552) $generated@@551))
 :pattern ( ($generated@@77 $generated@@549 ($generated@@142 $generated@@550 $generated@@552) $generated@@551))
))))) ($generated@@255 ($generated@@150 $generated@@549) $generated@@550 $generated@@551))
 :pattern ( ($generated@@255 ($generated@@150 $generated@@549) $generated@@550 $generated@@551))
)))
(assert (forall (($generated@@553 T@U) ($generated@@554 T@U) ($generated@@555 T@U) ) (!  (=> (and (and (and (= (type $generated@@553) $generated@@143) (= (type $generated@@554) $generated@@67)) (= (type $generated@@555) ($generated@@79 $generated@@80 $generated@@81))) (and ($generated@@254 $generated@@555) (and ($generated@@141 $generated@@553) (exists (($generated@@556 T@U) ) (!  (and (= (type $generated@@556) $generated@@67) ($generated@@77 $generated@@553 ($generated@@142 $generated@@556 $generated@@554) $generated@@555))
 :pattern ( ($generated@@77 $generated@@553 ($generated@@142 $generated@@556 $generated@@554) $generated@@555))
))))) ($generated@@255 ($generated@@151 $generated@@553) $generated@@554 $generated@@555))
 :pattern ( ($generated@@255 ($generated@@151 $generated@@553) $generated@@554 $generated@@555))
)))
(assert (forall (($generated@@557 T@U) ($generated@@558 T@U) ) (!  (=> (and (= (type $generated@@557) $generated@@152) (= (type $generated@@558) $generated@@152)) (= ($generated@@224 ($generated@@250 $generated@@557) ($generated@@250 $generated@@558)) ($generated@@250 ($generated@@224 $generated@@557 $generated@@558))))
 :pattern ( ($generated@@224 ($generated@@250 $generated@@557) ($generated@@250 $generated@@558)))
)))
(assert (forall (($generated@@559 Int) ) (! (= ($generated@@277 ($generated@@8 ($generated@@235 $generated@@559))) ($generated@@250 ($generated@@277 ($generated@@8 $generated@@559))))
 :pattern ( ($generated@@277 ($generated@@8 ($generated@@235 $generated@@559))))
)))
(assert (forall (($generated@@560 T@U) ) (! (= ($generated@@277 ($generated@@250 $generated@@560)) ($generated@@250 ($generated@@277 $generated@@560)))
 :pattern ( ($generated@@277 ($generated@@250 $generated@@560)))
)))
(assert (forall (($generated@@561 T@U) ) (! (let (($generated@@562 ($generated@@271 (type $generated@@561))))
 (=> (and (= (type $generated@@561) ($generated@@270 $generated@@562)) (= ($generated@@269 $generated@@561) 0)) (= $generated@@561 ($generated@@268 $generated@@562))))
 :pattern ( ($generated@@269 $generated@@561))
)))
(assert (forall (($generated@@563 T@U) ($generated@@564 T@U) ($generated@@565 T@U) ) (! (let (($generated@@566 (type $generated@@564)))
 (=> (and (and (= (type $generated@@563) ($generated@@79 $generated@@566 $generated@@2)) (= (type $generated@@565) $generated@@2)) (<= 0 ($generated $generated@@565))) (= ($generated@@282 ($generated@@85 $generated@@563 $generated@@564 $generated@@565)) (+ (- ($generated@@282 $generated@@563) ($generated ($generated@@84 $generated@@563 $generated@@564))) ($generated $generated@@565)))))
 :pattern ( ($generated@@282 ($generated@@85 $generated@@563 $generated@@564 $generated@@565)))
)))
(assert (forall (($generated@@567 T@U) ($generated@@568 T@U) ) (!  (=> (and (= (type $generated@@567) ($generated@@79 $generated@@80 $generated@@81)) (= (type $generated@@568) $generated@@2)) ($generated@@77 $generated@@568 $generated@@46 $generated@@567))
 :pattern ( ($generated@@77 $generated@@568 $generated@@46 $generated@@567))
)))
(assert (forall (($generated@@569 T@U) ($generated@@570 T@U) ) (!  (=> (and (= (type $generated@@569) ($generated@@79 $generated@@80 $generated@@81)) (= (type $generated@@570) $generated@@3)) ($generated@@77 $generated@@570 $generated@@47 $generated@@569))
 :pattern ( ($generated@@77 $generated@@570 $generated@@47 $generated@@569))
)))
(assert (forall (($generated@@571 T@U) ($generated@@572 T@U) ) (!  (=> (and (= (type $generated@@571) ($generated@@79 $generated@@80 $generated@@81)) (= (type $generated@@572) $generated@@4)) ($generated@@77 $generated@@572 $generated@@44 $generated@@571))
 :pattern ( ($generated@@77 $generated@@572 $generated@@44 $generated@@571))
)))
(assert (forall (($generated@@573 T@U) ($generated@@574 T@U) ) (!  (=> (and (= (type $generated@@573) ($generated@@79 $generated@@80 $generated@@81)) (= (type $generated@@574) $generated@@434)) ($generated@@77 $generated@@574 $generated@@45 $generated@@573))
 :pattern ( ($generated@@77 $generated@@574 $generated@@45 $generated@@573))
)))
(assert (forall (($generated@@575 T@U) ($generated@@576 T@U) ) (!  (=> (and (= (type $generated@@575) ($generated@@79 $generated@@80 $generated@@81)) (= (type $generated@@576) $generated@@152)) ($generated@@77 $generated@@576 $generated@@48 $generated@@575))
 :pattern ( ($generated@@77 $generated@@576 $generated@@48 $generated@@575))
)))
(assert (forall (($generated@@577 T@U) ($generated@@578 T@U) ) (!  (=> (and (= (type $generated@@577) ($generated@@270 $generated@@152)) (= (type $generated@@578) $generated@@67)) (= ($generated@@139 $generated@@577 ($generated@@476 $generated@@578)) (forall (($generated@@579 Int) ) (!  (=> (and (<= 0 $generated@@579) (< $generated@@579 ($generated@@269 $generated@@577))) ($generated@@225 ($generated@@477 $generated@@577 $generated@@579) $generated@@578))
 :pattern ( ($generated@@477 $generated@@577 $generated@@579))
))))
 :pattern ( ($generated@@139 $generated@@577 ($generated@@476 $generated@@578)))
)))
(assert (forall (($generated@@581 T@U) ($generated@@582 Int) ) (!  (=> (= (type $generated@@581) ($generated@@270 $generated@@152)) (=> (and (<= 0 $generated@@582) (< $generated@@582 ($generated@@269 $generated@@581))) (< ($generated@@515 ($generated@@327 $generated@@143 ($generated@@477 $generated@@581 $generated@@582))) ($generated@@580 $generated@@581))))
 :pattern ( ($generated@@515 ($generated@@327 $generated@@143 ($generated@@477 $generated@@581 $generated@@582))))
)))
(assert (forall (($generated@@583 T@U) ($generated@@584 T@U) ($generated@@585 T@U) ) (!  (=> (and (and (and (= (type $generated@@583) ($generated@@290 $generated@@152 $generated@@152)) (= (type $generated@@584) $generated@@67)) (= (type $generated@@585) $generated@@67)) ($generated@@139 $generated@@583 ($generated@@394 $generated@@584 $generated@@585))) (and (and ($generated@@139 ($generated@@288 $generated@@583) ($generated@@239 $generated@@584)) ($generated@@139 ($generated@@337 $generated@@583) ($generated@@239 $generated@@585))) ($generated@@139 ($generated@@368 $generated@@583) ($generated@@239 ($generated@@142 $generated@@584 $generated@@585)))))
 :pattern ( ($generated@@139 $generated@@583 ($generated@@394 $generated@@584 $generated@@585)))
)))
(assert (forall (($generated@@586 T@U) ($generated@@587 T@U) ($generated@@588 T@U) ) (!  (=> (and (and (and (= (type $generated@@586) ($generated@@308 $generated@@152 $generated@@152)) (= (type $generated@@587) $generated@@67)) (= (type $generated@@588) $generated@@67)) ($generated@@139 $generated@@586 ($generated@@402 $generated@@587 $generated@@588))) (and (and ($generated@@139 ($generated@@306 $generated@@586) ($generated@@244 $generated@@587)) ($generated@@139 ($generated@@348 $generated@@586) ($generated@@244 $generated@@588))) ($generated@@139 ($generated@@376 $generated@@586) ($generated@@244 ($generated@@142 $generated@@587 $generated@@588)))))
 :pattern ( ($generated@@139 $generated@@586 ($generated@@402 $generated@@587 $generated@@588)))
)))
(assert (forall (($generated@@589 T@U) ) (!  (=> (= (type $generated@@589) $generated@@2) ($generated@@139 $generated@@589 $generated@@46))
 :pattern ( ($generated@@139 $generated@@589 $generated@@46))
)))
(assert (forall (($generated@@590 T@U) ) (!  (=> (= (type $generated@@590) $generated@@3) ($generated@@139 $generated@@590 $generated@@47))
 :pattern ( ($generated@@139 $generated@@590 $generated@@47))
)))
(assert (forall (($generated@@591 T@U) ) (!  (=> (= (type $generated@@591) $generated@@4) ($generated@@139 $generated@@591 $generated@@44))
 :pattern ( ($generated@@139 $generated@@591 $generated@@44))
)))
(assert (forall (($generated@@592 T@U) ) (!  (=> (= (type $generated@@592) $generated@@434) ($generated@@139 $generated@@592 $generated@@45))
 :pattern ( ($generated@@139 $generated@@592 $generated@@45))
)))
(assert (forall (($generated@@593 T@U) ) (!  (=> (= (type $generated@@593) $generated@@152) ($generated@@139 $generated@@593 $generated@@48))
 :pattern ( ($generated@@139 $generated@@593 $generated@@48))
)))
(push 1)
(declare-fun ControlFlow (Int Int) Int)
(declare-fun $generated@@594 (T@U) T@U)
(declare-fun $generated@@595 () T@U)
(declare-fun $generated@@596 () T@U)
(declare-fun $generated@@597 () T@U)
(declare-fun $generated@@598 () T@U)
(declare-fun $generated@@599 () T@U)
(declare-fun $generated@@600 (T@U) Bool)
(declare-fun $generated@@601 () T@U)
(declare-fun $generated@@602 () T@T)
(assert  (and (and (and (and (and (and (and (= ($generated@@1 $generated@@602) 21) (forall (($generated@@603 T@U) ) (! (= (type ($generated@@594 $generated@@603)) $generated@@602)
 :pattern ( ($generated@@594 $generated@@603))
))) (= (type $generated@@595) $generated@@602)) (= (type $generated@@596) $generated@@602)) (= (type $generated@@597) ($generated@@167 $generated@@80 $generated@@4))) (= (type $generated@@598) ($generated@@79 $generated@@80 $generated@@81))) (= (type $generated@@599) ($generated@@79 $generated@@80 $generated@@81))) (= (type $generated@@601) $generated@@80)))
(set-option :timeout 0)
(set-option :rlimit 0)
(assert (not
 (=> (= (ControlFlow 0 0) 3) (let (($generated@@604  (=> (= ($generated@@594 $generated@@595) $generated@@595) (=> (and (= ($generated@@594 $generated@@596) $generated@@596) (= $generated@@597 ($generated@@166 $generated@@136 $generated@@598 $generated@@60 false))) (=> (and (and (and ($generated@@254 $generated@@599) ($generated@@600 $generated@@599)) (= $generated@@598 $generated@@599)) (and (forall (($generated@@605 T@U) ) (!  (=> (= (type $generated@@605) $generated@@80) (=> (and (and ($generated@@139 $generated@@605 $generated@@221) ($generated@@0 ($generated@@250 ($generated@@11 true)))) false) (= ($generated@@233 $generated@@605) ($generated@@235 80))))
 :no-pattern (type $generated@@605)
 :no-pattern ($generated $generated@@605)
 :no-pattern ($generated@@0 $generated@@605)
)) (= (ControlFlow 0 2) (- 0 1)))) (= ($generated@@233 $generated@@601) ($generated@@235 80)))))))
(let (($generated@@606  (=> (and ($generated@@254 $generated@@598) ($generated@@600 $generated@@598)) (=> (and (and (not (= $generated@@601 $generated@@136)) (and ($generated@@139 $generated@@601 $generated@@221) ($generated@@77 $generated@@601 $generated@@221 $generated@@598))) (and (= 1 $generated@@232) (= (ControlFlow 0 3) 2))) $generated@@604))))
$generated@@606)))
))
(check-sat)
(pop 1)
; Valid
(get-info :rlimit)
(reset)
(set-option :rlimit 0)
; did a full reset
(reset)
(set-option :print-success false)
(set-info :smt-lib-version 2.6)
(set-option :auto_config false)
(set-option :type_check true)
(set-option :smt.case_split 3)
(set-option :smt.qi.eager_threshold 100)
(set-option :smt.delay_units true)
(set-option :smt.arith.solver 2)
(set-option :smt.mbqi false)
(set-option :model.compact false)
(set-option :model.v2 true)
(set-option :pp.bv_literals false)
; done setting options


(set-info :category "industrial")
(declare-sort |T@U| 0)
(declare-sort |T@T| 0)
(declare-fun real_pow (Real Real) Real)
(declare-fun UOrdering2 (|T@U| |T@U|) Bool)
(declare-fun UOrdering3 (|T@T| |T@U| |T@U|) Bool)
(declare-fun tickleBool (Bool) Bool)
(assert (and (tickleBool true) (tickleBool false)))
(declare-fun $generated (T@U) Int)
(declare-fun $generated@@0 (T@U) Bool)
(declare-fun $generated@@1 (T@T) Int)
(declare-fun $generated@@2 () T@T)
(declare-fun $generated@@3 () T@T)
(declare-fun $generated@@4 () T@T)
(declare-fun $generated@@5 () T@T)
(declare-fun $generated@@6 () T@T)
(declare-fun $generated@@7 () T@T)
(declare-fun $generated@@8 (Int) T@U)
(declare-fun type (T@U) T@T)
(declare-fun $generated@@9 (Real) T@U)
(declare-fun $generated@@10 (T@U) Real)
(declare-fun $generated@@11 (Bool) T@U)
(declare-fun $generated@@12 (RoundingMode) T@U)
(declare-fun $generated@@13 (T@U) RoundingMode)
(declare-fun $generated@@14 (String) T@U)
(declare-fun $generated@@15 (T@U) String)
(declare-fun $generated@@16 ((RegEx String)) T@U)
(declare-fun $generated@@17 (T@U) (RegEx String))
(declare-fun $generated@@44 () T@U)
(declare-fun $generated@@45 () T@U)
(declare-fun $generated@@46 () T@U)
(declare-fun $generated@@47 () T@U)
(declare-fun $generated@@48 () T@U)
(declare-fun $generated@@49 () T@U)
(declare-fun $generated@@50 () T@U)
(declare-fun $generated@@51 () T@U)
(declare-fun $generated@@52 () T@U)
(declare-fun $generated@@53 () T@U)
(declare-fun $generated@@54 () T@U)
(declare-fun $generated@@55 () T@U)
(declare-fun $generated@@56 () T@U)
(declare-fun $generated@@57 () T@U)
(declare-fun $generated@@58 () T@U)
(declare-fun $generated@@59 () T@U)
(declare-fun $generated@@60 () T@U)
(declare-fun $generated@@61 () T@U)
(declare-fun $generated@@62 () T@U)
(declare-fun $generated@@63 () T@U)
(declare-fun $generated@@64 () T@U)
(declare-fun $generated@@65 () T@U)
(declare-fun $generated@@66 () T@U)
(declare-fun $generated@@67 () T@U)
(declare-fun $generated@@68 () T@U)
(declare-fun $generated@@69 () T@U)
(declare-fun $generated@@70 () T@U)
(declare-fun $generated@@71 () T@U)
(declare-fun $generated@@72 () T@U)
(declare-fun $generated@@73 () T@U)
(declare-fun $generated@@74 () T@U)
(declare-fun $generated@@75 () T@T)
(declare-fun $generated@@76 () T@T)
(declare-fun $generated@@77 (T@T) T@T)
(declare-fun $generated@@78 (T@T) T@T)
(declare-fun $generated@@79 () T@T)
(declare-fun $generated@@80 () T@T)
(declare-fun $generated@@83 (T@U) T@U)
(declare-fun $generated@@85 (T@U T@U T@U) Bool)
(declare-fun $generated@@86 (Int) T@U)
(declare-fun $generated@@87 (T@T T@T) T@T)
(declare-fun $generated@@88 () T@T)
(declare-fun $generated@@89 () T@T)
(declare-fun $generated@@90 (T@T) T@T)
(declare-fun $generated@@91 (T@T) T@T)
(declare-fun $generated@@92 (T@U T@U) T@U)
(declare-fun $generated@@93 (T@U T@U T@U) T@U)
(declare-fun $generated@@94 (T@U T@U) T@U)
(declare-fun $generated@@95 (T@U T@U T@U) T@U)
(declare-fun $generated@@143 (T@U T@U) Bool)
(declare-fun $generated@@147 () T@U)
(declare-fun $generated@@148 () T@U)
(declare-fun $generated@@151 () T@U)
(declare-fun $generated@@154 (T@U T@U) Bool)
(declare-fun $generated@@156 (T@U) T@U)
(declare-fun $generated@@157 () T@T)
(declare-fun $generated@@158 (T@U) T@U)
(declare-fun $generated@@164 (T@U) T@U)
(declare-fun $generated@@169 (T@U) Bool)
(declare-fun $generated@@170 (T@U T@U) T@U)
(declare-fun $generated@@171 () T@T)
(declare-fun $generated@@177 (T@U T@U) Bool)
(declare-fun $generated@@178 (T@U) T@U)
(declare-fun $generated@@179 (T@U) T@U)
(declare-fun $generated@@180 () T@T)
(declare-fun $generated@@185 (T@U) T@U)
(declare-fun $generated@@186 (T@U) Bool)
(declare-fun $generated@@190 (T@U) T@U)
(declare-fun $generated@@193 (T@U T@U T@U) T@U)
(declare-fun $generated@@194 (T@U T@U T@U Bool) T@U)
(declare-fun $generated@@195 (T@T T@T) T@T)
(declare-fun $generated@@196 (T@T) T@T)
(declare-fun $generated@@197 (T@T) T@T)
(declare-fun $generated@@198 (T@U T@U T@U T@U) T@U)
(declare-fun $generated@@249 () T@U)
(declare-fun $generated@@252 (T@U T@U) T@U)
(declare-fun $generated@@253 (T@U T@U) Bool)
(declare-fun $generated@@260 (T@U T@U T@U) Bool)
(declare-fun $generated@@261 (T@U) Bool)
(declare-fun $generated@@262 (T@U T@U T@U) T@U)
(declare-fun $generated@@263 (T@U) T@U)
(declare-fun $generated@@282 (T@U T@U T@U) T@U)
(declare-fun $generated@@283 (T@U T@U T@U) T@U)
(declare-fun $generated@@295 () Int)
(declare-fun $generated@@296 (T@U) Int)
(declare-fun $generated@@297 (T@U) Bool)
(declare-fun $generated@@298 (Int) Int)
(declare-fun $generated@@302 (T@U) T@U)
(declare-fun $generated@@307 (T@U) T@U)
(declare-fun $generated@@313 (T@U) T@U)
(declare-fun $generated@@345 (T@U T@U T@U) Bool)
(declare-fun $generated@@351 (T@U) T@U)
(declare-fun $generated@@355 () T@U)
(declare-fun $generated@@356 (T@U T@U) Bool)
(declare-fun $generated@@357 (T@T) T@U)
(declare-fun $generated@@365 (T@T) T@U)
(declare-fun $generated@@366 (T@U) Int)
(declare-fun $generated@@367 (T@T) T@T)
(declare-fun $generated@@368 (T@T) T@T)
(declare-fun $generated@@373 (T@U) T@U)
(declare-fun $generated@@374 (T@T T@U) T@U)
(declare-fun $generated@@381 (T@U T@U) T@U)
(declare-fun $generated@@382 () T@T)
(declare-fun $generated@@389 (T@U) T@U)
(declare-fun $generated@@405 (T@U) Int)
(declare-fun $generated@@406 (T@T) T@U)
(declare-fun $generated@@411 (T@U) T@U)
(declare-fun $generated@@416 (T@U) T@U)
(declare-fun $generated@@417 (T@T T@T) T@U)
(declare-fun $generated@@418 (T@T T@T) T@T)
(declare-fun $generated@@419 (T@T) T@T)
(declare-fun $generated@@420 (T@T) T@T)
(declare-fun $generated@@434 (T@U) T@U)
(declare-fun $generated@@435 (T@T T@T) T@U)
(declare-fun $generated@@436 (T@T T@T) T@T)
(declare-fun $generated@@437 (T@T) T@T)
(declare-fun $generated@@438 (T@T) T@T)
(declare-fun $generated@@467 (T@U) T@U)
(declare-fun $generated@@478 (T@U) T@U)
(declare-fun $generated@@488 (T@U) T@U)
(declare-fun $generated@@489 (T@U) T@U)
(declare-fun $generated@@490 (Bool) T@U)
(declare-fun $generated@@491 (T@U) T@U)
(declare-fun $generated@@492 (Bool) T@U)
(declare-fun $generated@@493 (T@U) T@U)
(declare-fun $generated@@494 () T@U)
(declare-fun $generated@@525 (T@U) T@U)
(declare-fun $generated@@526 (T@U) T@U)
(declare-fun $generated@@533 (T@U) T@U)
(declare-fun $generated@@534 (T@U) T@U)
(declare-fun $generated@@551 (T@U T@U) T@U)
(declare-fun $generated@@559 (T@U T@U) T@U)
(declare-fun $generated@@573 (T@T) T@U)
(declare-fun $generated@@597 () T@T)
(declare-fun $generated@@605 (T@U) T@U)
(declare-fun $generated@@609 (T@U) T@U)
(declare-fun $generated@@615 (T@U) T@U)
(declare-fun $generated@@619 (T@U) T@U)
(declare-fun $generated@@627 (T@U) T@U)
(declare-fun $generated@@631 (T@U) T@U)
(declare-fun $generated@@640 (T@U) T@U)
(declare-fun $generated@@641 (T@U Int) T@U)
(declare-fun $generated@@650 (T@U) Int)
(declare-fun $generated@@652 (T@U) T@U)
(declare-fun $generated@@656 (T@U) T@U)
(declare-fun $generated@@660 (T@U) T@U)
(declare-fun $generated@@664 (T@U) T@U)
(declare-fun $generated@@668 (T@U) T@U)
(declare-fun $generated@@671 (T@U) T@U)
(declare-fun $generated@@674 (T@U) T@U)
(declare-fun $generated@@687 (T@U) Int)
(declare-fun $generated@@688 (T@U) Int)
(declare-fun $generated@@792 (T@U) Int)
(assert  (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (= ($generated@@1 $generated@@2) 0) (= ($generated@@1 $generated@@3) 1)) (= ($generated@@1 $generated@@4) 2)) (= ($generated@@1 $generated@@5) 3)) (= ($generated@@1 $generated@@6) 4)) (= ($generated@@1 $generated@@7) 5)) (forall (($generated@@18 Int) ) (! (= ($generated ($generated@@8 $generated@@18)) $generated@@18)
 :pattern ( ($generated@@8 $generated@@18))
))) (forall (($generated@@19 T@U) ) (!  (=> (= (type $generated@@19) $generated@@2) (= ($generated@@8 ($generated $generated@@19)) $generated@@19))
 :pattern ( ($generated $generated@@19))
))) (forall (($generated@@20 Int) ) (! (= (type ($generated@@8 $generated@@20)) $generated@@2)
 :pattern ( ($generated@@8 $generated@@20))
))) (forall (($generated@@21 Real) ) (! (= ($generated@@10 ($generated@@9 $generated@@21)) $generated@@21)
 :pattern ( ($generated@@9 $generated@@21))
))) (forall (($generated@@22 T@U) ) (!  (=> (= (type $generated@@22) $generated@@3) (= ($generated@@9 ($generated@@10 $generated@@22)) $generated@@22))
 :pattern ( ($generated@@10 $generated@@22))
))) (forall (($generated@@23 Real) ) (! (= (type ($generated@@9 $generated@@23)) $generated@@3)
 :pattern ( ($generated@@9 $generated@@23))
))) (forall (($generated@@24 Bool) ) (! (= ($generated@@0 ($generated@@11 $generated@@24)) $generated@@24)
 :pattern ( ($generated@@11 $generated@@24))
))) (forall (($generated@@25 T@U) ) (!  (=> (= (type $generated@@25) $generated@@4) (= ($generated@@11 ($generated@@0 $generated@@25)) $generated@@25))
 :pattern ( ($generated@@0 $generated@@25))
))) (forall (($generated@@26 Bool) ) (! (= (type ($generated@@11 $generated@@26)) $generated@@4)
 :pattern ( ($generated@@11 $generated@@26))
))) (forall (($generated@@27 RoundingMode) ) (! (= ($generated@@13 ($generated@@12 $generated@@27)) $generated@@27)
 :pattern ( ($generated@@12 $generated@@27))
))) (forall (($generated@@28 T@U) ) (!  (=> (= (type $generated@@28) $generated@@5) (= ($generated@@12 ($generated@@13 $generated@@28)) $generated@@28))
 :pattern ( ($generated@@13 $generated@@28))
))) (forall (($generated@@29 RoundingMode) ) (! (= (type ($generated@@12 $generated@@29)) $generated@@5)
 :pattern ( ($generated@@12 $generated@@29))
))) (forall (($generated@@30 String) ) (! (= ($generated@@15 ($generated@@14 $generated@@30)) $generated@@30)
 :pattern ( ($generated@@14 $generated@@30))
))) (forall (($generated@@31 T@U) ) (!  (=> (= (type $generated@@31) $generated@@6) (= ($generated@@14 ($generated@@15 $generated@@31)) $generated@@31))
 :pattern ( ($generated@@15 $generated@@31))
))) (forall (($generated@@32 String) ) (! (= (type ($generated@@14 $generated@@32)) $generated@@6)
 :pattern ( ($generated@@14 $generated@@32))
))) (forall (($generated@@33 (RegEx String)) ) (! (= ($generated@@17 ($generated@@16 $generated@@33)) $generated@@33)
 :pattern ( ($generated@@16 $generated@@33))
))) (forall (($generated@@34 T@U) ) (!  (=> (= (type $generated@@34) $generated@@7) (= ($generated@@16 ($generated@@17 $generated@@34)) $generated@@34))
 :pattern ( ($generated@@17 $generated@@34))
))) (forall (($generated@@35 (RegEx String)) ) (! (= (type ($generated@@16 $generated@@35)) $generated@@7)
 :pattern ( ($generated@@16 $generated@@35))
))))
(assert (forall (($generated@@36 T@U) ) (! (UOrdering2 $generated@@36 $generated@@36)
 :no-pattern ($generated $generated@@36)
 :no-pattern ($generated@@0 $generated@@36)
)))
(assert (forall (($generated@@37 T@U) ($generated@@38 T@U) ($generated@@39 T@U) ) (! (let (($generated@@40 (type $generated@@37)))
 (=> (and (and (= (type $generated@@38) $generated@@40) (= (type $generated@@39) $generated@@40)) (and (UOrdering2 $generated@@37 $generated@@38) (UOrdering2 $generated@@38 $generated@@39))) (UOrdering2 $generated@@37 $generated@@39)))
 :pattern ( (UOrdering2 $generated@@37 $generated@@38) (UOrdering2 $generated@@38 $generated@@39))
)))
(assert (forall (($generated@@41 T@U) ($generated@@42 T@U) ) (! (let (($generated@@43 (type $generated@@41)))
 (=> (= (type $generated@@42) $generated@@43) (=> (and (UOrdering2 $generated@@41 $generated@@42) (UOrdering2 $generated@@42 $generated@@41)) (= $generated@@41 $generated@@42))))
 :pattern ( (UOrdering2 $generated@@41 $generated@@42) (UOrdering2 $generated@@42 $generated@@41))
)))
(assert  (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (= ($generated@@1 $generated@@75) 6) (= (type $generated@@44) $generated@@75)) (= (type $generated@@45) $generated@@75)) (= (type $generated@@46) $generated@@75)) (= (type $generated@@47) $generated@@75)) (= (type $generated@@48) $generated@@75)) (= ($generated@@1 $generated@@76) 7)) (= (type $generated@@49) $generated@@76)) (= (type $generated@@50) $generated@@76)) (= (type $generated@@51) $generated@@76)) (= (type $generated@@52) $generated@@76)) (= (type $generated@@53) $generated@@76)) (= (type $generated@@54) $generated@@76)) (= (type $generated@@55) $generated@@76)) (= (type $generated@@56) $generated@@76)) (= (type $generated@@57) $generated@@76)) (= (type $generated@@58) $generated@@76)) (= (type $generated@@59) $generated@@76)) (forall (($generated@@81 T@T) ) (= ($generated@@1 ($generated@@77 $generated@@81)) 8))) (forall (($generated@@82 T@T) ) (! (= ($generated@@78 ($generated@@77 $generated@@82)) $generated@@82)
 :pattern ( ($generated@@77 $generated@@82))
))) (= (type $generated@@60) ($generated@@77 $generated@@4))) (= (type $generated@@61) $generated@@76)) (= (type $generated@@62) $generated@@76)) (= (type $generated@@63) $generated@@76)) (= (type $generated@@64) $generated@@76)) (= ($generated@@1 $generated@@79) 9)) (= (type $generated@@65) $generated@@79)) (= (type $generated@@66) $generated@@76)) (= (type $generated@@67) $generated@@76)) (= (type $generated@@68) $generated@@76)) (= ($generated@@1 $generated@@80) 10)) (= (type $generated@@69) $generated@@80)) (= (type $generated@@70) $generated@@80)) (= (type $generated@@71) $generated@@80)) (= (type $generated@@72) $generated@@80)) (= (type $generated@@73) $generated@@80)) (= (type $generated@@74) $generated@@80)))
(assert (distinct $generated@@44 $generated@@45 $generated@@46 $generated@@47 $generated@@48 $generated@@49 $generated@@50 $generated@@51 $generated@@52 $generated@@53 $generated@@54 $generated@@55 $generated@@56 $generated@@57 $generated@@58 $generated@@59 $generated@@60 $generated@@61 $generated@@62 $generated@@63 $generated@@64 $generated@@65 $generated@@66 $generated@@67 $generated@@68 $generated@@69 $generated@@70 $generated@@71 $generated@@72 $generated@@73 $generated@@74)
)
(assert (forall (($generated@@84 T@U) ) (! (= (type ($generated@@83 $generated@@84)) $generated@@76)
 :pattern ( ($generated@@83 $generated@@84))
)))
(assert (= ($generated@@83 $generated@@44) $generated@@49))
(assert (= ($generated@@83 $generated@@45) $generated@@50))
(assert (= ($generated@@83 $generated@@46) $generated@@51))
(assert (= ($generated@@83 $generated@@47) $generated@@52))
(assert (= ($generated@@83 $generated@@48) $generated@@53))
(assert  (and (and (and (and (and (and (and (and (and (and (and (and (and (forall (($generated@@96 T@T) ($generated@@97 T@T) ) (= ($generated@@1 ($generated@@87 $generated@@96 $generated@@97)) 11)) (forall (($generated@@98 T@T) ($generated@@99 T@T) ) (! (= ($generated@@90 ($generated@@87 $generated@@98 $generated@@99)) $generated@@98)
 :pattern ( ($generated@@87 $generated@@98 $generated@@99))
))) (forall (($generated@@100 T@T) ($generated@@101 T@T) ) (! (= ($generated@@91 ($generated@@87 $generated@@100 $generated@@101)) $generated@@101)
 :pattern ( ($generated@@87 $generated@@100 $generated@@101))
))) (forall (($generated@@102 T@U) ($generated@@103 T@U) ) (! (let (($generated@@104 ($generated@@91 (type $generated@@102))))
(= (type ($generated@@92 $generated@@102 $generated@@103)) $generated@@104))
 :pattern ( ($generated@@92 $generated@@102 $generated@@103))
))) (forall (($generated@@105 T@U) ($generated@@106 T@U) ($generated@@107 T@U) ) (! (let (($generated@@108 (type $generated@@107)))
(let (($generated@@109 (type $generated@@106)))
(= (type ($generated@@93 $generated@@105 $generated@@106 $generated@@107)) ($generated@@87 $generated@@109 $generated@@108))))
 :pattern ( ($generated@@93 $generated@@105 $generated@@106 $generated@@107))
))) (forall (($generated@@110 T@U) ($generated@@111 T@U) ($generated@@112 T@U) ) (! (let (($generated@@113 ($generated@@91 (type $generated@@110))))
 (=> (= (type $generated@@112) $generated@@113) (= ($generated@@92 ($generated@@93 $generated@@110 $generated@@111 $generated@@112) $generated@@111) $generated@@112)))
 :weight 0
))) (and (forall (($generated@@114 T@U) ($generated@@115 T@U) ($generated@@116 T@U) ($generated@@117 T@U) ) (!  (or (= $generated@@116 $generated@@117) (= ($generated@@92 ($generated@@93 $generated@@115 $generated@@116 $generated@@114) $generated@@117) ($generated@@92 $generated@@115 $generated@@117)))
 :weight 0
)) (forall (($generated@@118 T@U) ($generated@@119 T@U) ($generated@@120 T@U) ($generated@@121 T@U) ) (!  (or true (= ($generated@@92 ($generated@@93 $generated@@119 $generated@@120 $generated@@118) $generated@@121) ($generated@@92 $generated@@119 $generated@@121)))
 :weight 0
)))) (= ($generated@@1 $generated@@88) 12)) (forall (($generated@@122 T@U) ($generated@@123 T@U) ) (! (let (($generated@@124 ($generated@@78 (type $generated@@123))))
(= (type ($generated@@94 $generated@@122 $generated@@123)) $generated@@124))
 :pattern ( ($generated@@94 $generated@@122 $generated@@123))
))) (= ($generated@@1 $generated@@89) 13)) (forall (($generated@@125 T@U) ($generated@@126 T@U) ($generated@@127 T@U) ) (! (= (type ($generated@@95 $generated@@125 $generated@@126 $generated@@127)) $generated@@89)
 :pattern ( ($generated@@95 $generated@@125 $generated@@126 $generated@@127))
))) (forall (($generated@@128 T@U) ($generated@@129 T@U) ($generated@@130 T@U) ) (! (let (($generated@@131 ($generated@@78 (type $generated@@129))))
 (=> (= (type $generated@@130) $generated@@131) (= ($generated@@94 ($generated@@95 $generated@@128 $generated@@129 $generated@@130) $generated@@129) $generated@@130)))
 :weight 0
))) (and (forall (($generated@@132 T@U) ($generated@@133 T@U) ($generated@@134 T@U) ($generated@@135 T@U) ) (!  (or (= $generated@@134 $generated@@135) (= ($generated@@94 ($generated@@95 $generated@@133 $generated@@134 $generated@@132) $generated@@135) ($generated@@94 $generated@@133 $generated@@135)))
 :weight 0
)) (forall (($generated@@136 T@U) ($generated@@137 T@U) ($generated@@138 T@U) ($generated@@139 T@U) ) (!  (or true (= ($generated@@94 ($generated@@95 $generated@@137 $generated@@138 $generated@@136) $generated@@139) ($generated@@94 $generated@@137 $generated@@139)))
 :weight 0
)))) (forall (($generated@@140 Int) ) (! (= (type ($generated@@86 $generated@@140)) $generated@@75)
 :pattern ( ($generated@@86 $generated@@140))
))))
(assert (forall (($generated@@141 T@U) ($generated@@142 T@U) ) (!  (=> (and (= (type $generated@@141) $generated@@2) (= (type $generated@@142) ($generated@@87 $generated@@88 $generated@@89))) ($generated@@85 $generated@@141 ($generated@@86 0) $generated@@142))
 :pattern ( ($generated@@85 $generated@@141 ($generated@@86 0) $generated@@142))
)))
(assert (forall (($generated@@144 T@U) ($generated@@145 T@U) ) (!  (=> (and (and (= (type $generated@@144) ($generated@@87 $generated@@88 $generated@@89)) (= (type $generated@@145) ($generated@@87 $generated@@88 $generated@@89))) ($generated@@143 $generated@@144 $generated@@145)) (forall (($generated@@146 T@U) ) (!  (=> (and (= (type $generated@@146) $generated@@88) ($generated@@0 ($generated@@94 ($generated@@92 $generated@@144 $generated@@146) $generated@@60))) ($generated@@0 ($generated@@94 ($generated@@92 $generated@@145 $generated@@146) $generated@@60)))
 :pattern ( ($generated@@94 ($generated@@92 $generated@@145 $generated@@146) $generated@@60))
)))
 :pattern ( ($generated@@143 $generated@@144 $generated@@145))
)))
(assert  (and (= (type $generated@@147) $generated@@75) (= (type $generated@@148) $generated@@88)))
(assert (forall (($generated@@149 T@U) ($generated@@150 T@U) ) (!  (=> (and (= (type $generated@@149) $generated@@88) (= (type $generated@@150) ($generated@@87 $generated@@88 $generated@@89))) (= ($generated@@85 $generated@@149 $generated@@147 $generated@@150)  (or (= $generated@@149 $generated@@148) ($generated@@0 ($generated@@94 ($generated@@92 $generated@@150 $generated@@149) $generated@@60)))))
 :pattern ( ($generated@@85 $generated@@149 $generated@@147 $generated@@150))
)))
(assert (= (type $generated@@151) $generated@@75))
(assert (forall (($generated@@152 T@U) ($generated@@153 T@U) ) (!  (=> (and (= (type $generated@@152) $generated@@88) (= (type $generated@@153) ($generated@@87 $generated@@88 $generated@@89))) (= ($generated@@85 $generated@@152 $generated@@151 $generated@@153)  (or (= $generated@@152 $generated@@148) ($generated@@0 ($generated@@94 ($generated@@92 $generated@@153 $generated@@152) $generated@@60)))))
 :pattern ( ($generated@@85 $generated@@152 $generated@@151 $generated@@153))
)))
(assert (forall (($generated@@155 T@U) ) (!  (=> (= (type $generated@@155) $generated@@2) ($generated@@154 $generated@@155 ($generated@@86 0)))
 :pattern ( ($generated@@154 $generated@@155 ($generated@@86 0)))
)))
(assert  (and (and (= ($generated@@1 $generated@@157) 14) (forall (($generated@@159 T@U) ) (! (= (type ($generated@@156 $generated@@159)) $generated@@75)
 :pattern ( ($generated@@156 $generated@@159))
))) (forall (($generated@@160 T@U) ) (! (= (type ($generated@@158 $generated@@160)) $generated@@75)
 :pattern ( ($generated@@158 $generated@@160))
))))
(assert (forall (($generated@@161 T@U) ($generated@@162 T@U) ($generated@@163 T@U) ) (!  (=> (and (and (= (type $generated@@161) $generated@@75) (= (type $generated@@162) $generated@@157)) (= (type $generated@@163) ($generated@@87 $generated@@88 $generated@@89))) (= ($generated@@85 $generated@@162 ($generated@@156 $generated@@161) $generated@@163) ($generated@@85 $generated@@162 ($generated@@158 $generated@@161) $generated@@163)))
 :pattern ( ($generated@@85 $generated@@162 ($generated@@156 $generated@@161) $generated@@163))
)))
(assert (forall (($generated@@165 T@U) ) (! (= (type ($generated@@164 $generated@@165)) $generated@@75)
 :pattern ( ($generated@@164 $generated@@165))
)))
(assert (forall (($generated@@166 T@U) ($generated@@167 T@U) ($generated@@168 T@U) ) (!  (=> (and (and (= (type $generated@@166) $generated@@75) (= (type $generated@@167) $generated@@157)) (= (type $generated@@168) ($generated@@87 $generated@@88 $generated@@89))) (= ($generated@@85 $generated@@167 ($generated@@164 $generated@@166) $generated@@168) ($generated@@85 $generated@@167 ($generated@@156 $generated@@166) $generated@@168)))
 :pattern ( ($generated@@85 $generated@@167 ($generated@@164 $generated@@166) $generated@@168))
)))
(assert  (and (= ($generated@@1 $generated@@171) 15) (forall (($generated@@172 T@U) ($generated@@173 T@U) ) (! (= (type ($generated@@170 $generated@@172 $generated@@173)) $generated@@75)
 :pattern ( ($generated@@170 $generated@@172 $generated@@173))
))))
(assert (forall (($generated@@174 T@U) ($generated@@175 T@U) ($generated@@176 T@U) ) (!  (=> (and (and (and (= (type $generated@@174) $generated@@75) (= (type $generated@@175) $generated@@75)) (= (type $generated@@176) $generated@@171)) ($generated@@154 $generated@@176 ($generated@@170 $generated@@174 $generated@@175))) ($generated@@169 $generated@@176))
 :pattern ( ($generated@@169 $generated@@176) ($generated@@154 $generated@@176 ($generated@@170 $generated@@174 $generated@@175)))
)))
(assert  (and (and (= ($generated@@1 $generated@@180) 16) (forall (($generated@@181 T@U) ) (! (= (type ($generated@@178 $generated@@181)) $generated@@180)
 :pattern ( ($generated@@178 $generated@@181))
))) (forall (($generated@@182 T@U) ) (! (= (type ($generated@@179 $generated@@182)) $generated@@180)
 :pattern ( ($generated@@179 $generated@@182))
))))
(assert (forall (($generated@@183 T@U) ($generated@@184 T@U) ) (!  (=> (and (and (= (type $generated@@183) $generated@@171) (= (type $generated@@184) $generated@@171)) true) (= ($generated@@177 $generated@@183 $generated@@184)  (and (= ($generated@@178 $generated@@183) ($generated@@178 $generated@@184)) (= ($generated@@179 $generated@@183) ($generated@@179 $generated@@184)))))
 :pattern ( ($generated@@177 $generated@@183 $generated@@184))
)))
(assert (forall (($generated@@187 T@U) ) (! (= (type ($generated@@185 $generated@@187)) $generated@@75)
 :pattern ( ($generated@@185 $generated@@187))
)))
(assert (forall (($generated@@188 T@U) ($generated@@189 T@U) ) (!  (=> (and (and (= (type $generated@@188) ($generated@@87 $generated@@180 $generated@@2)) (= (type $generated@@189) $generated@@75)) ($generated@@154 $generated@@188 ($generated@@185 $generated@@189))) ($generated@@186 $generated@@188))
 :pattern ( ($generated@@154 $generated@@188 ($generated@@185 $generated@@189)))
)))
(assert (forall (($generated@@191 T@U) ) (! (= (type ($generated@@190 $generated@@191)) $generated@@75)
 :pattern ( ($generated@@190 $generated@@191))
)))
(assert (forall (($generated@@192 T@U) ) (!  (=> (= (type $generated@@192) $generated@@88) (= ($generated@@154 $generated@@192 $generated@@151)  (or (= $generated@@192 $generated@@148) (= ($generated@@190 $generated@@192) $generated@@151))))
 :pattern ( ($generated@@154 $generated@@192 $generated@@151))
)))
(assert  (and (and (and (and (and (and (and (forall (($generated@@199 T@T) ($generated@@200 T@T) ) (= ($generated@@1 ($generated@@195 $generated@@199 $generated@@200)) 17)) (forall (($generated@@201 T@T) ($generated@@202 T@T) ) (! (= ($generated@@196 ($generated@@195 $generated@@201 $generated@@202)) $generated@@201)
 :pattern ( ($generated@@195 $generated@@201 $generated@@202))
))) (forall (($generated@@203 T@T) ($generated@@204 T@T) ) (! (= ($generated@@197 ($generated@@195 $generated@@203 $generated@@204)) $generated@@204)
 :pattern ( ($generated@@195 $generated@@203 $generated@@204))
))) (forall (($generated@@205 T@U) ($generated@@206 T@U) ($generated@@207 T@U) ) (! (let (($generated@@208 ($generated@@197 (type $generated@@205))))
(= (type ($generated@@193 $generated@@205 $generated@@206 $generated@@207)) $generated@@208))
 :pattern ( ($generated@@193 $generated@@205 $generated@@206 $generated@@207))
))) (forall (($generated@@209 T@U) ($generated@@210 T@U) ($generated@@211 T@U) ($generated@@212 T@U) ) (! (let (($generated@@213 (type $generated@@212)))
(let (($generated@@214 (type $generated@@210)))
(= (type ($generated@@198 $generated@@209 $generated@@210 $generated@@211 $generated@@212)) ($generated@@195 $generated@@214 $generated@@213))))
 :pattern ( ($generated@@198 $generated@@209 $generated@@210 $generated@@211 $generated@@212))
))) (forall (($generated@@215 T@U) ($generated@@216 T@U) ($generated@@217 T@U) ($generated@@218 T@U) ) (! (let (($generated@@219 ($generated@@197 (type $generated@@215))))
 (=> (= (type $generated@@218) $generated@@219) (= ($generated@@193 ($generated@@198 $generated@@215 $generated@@216 $generated@@217 $generated@@218) $generated@@216 $generated@@217) $generated@@218)))
 :weight 0
))) (and (and (forall (($generated@@220 T@U) ($generated@@221 T@U) ($generated@@222 T@U) ($generated@@223 T@U) ($generated@@224 T@U) ($generated@@225 T@U) ) (!  (or (= $generated@@222 $generated@@224) (= ($generated@@193 ($generated@@198 $generated@@221 $generated@@222 $generated@@223 $generated@@220) $generated@@224 $generated@@225) ($generated@@193 $generated@@221 $generated@@224 $generated@@225)))
 :weight 0
)) (forall (($generated@@226 T@U) ($generated@@227 T@U) ($generated@@228 T@U) ($generated@@229 T@U) ($generated@@230 T@U) ($generated@@231 T@U) ) (!  (or (= $generated@@229 $generated@@231) (= ($generated@@193 ($generated@@198 $generated@@227 $generated@@228 $generated@@229 $generated@@226) $generated@@230 $generated@@231) ($generated@@193 $generated@@227 $generated@@230 $generated@@231)))
 :weight 0
))) (forall (($generated@@232 T@U) ($generated@@233 T@U) ($generated@@234 T@U) ($generated@@235 T@U) ($generated@@236 T@U) ($generated@@237 T@U) ) (!  (or true (= ($generated@@193 ($generated@@198 $generated@@233 $generated@@234 $generated@@235 $generated@@232) $generated@@236 $generated@@237) ($generated@@193 $generated@@233 $generated@@236 $generated@@237)))
 :weight 0
)))) (forall (($generated@@238 T@U) ($generated@@239 T@U) ($generated@@240 T@U) ($generated@@241 Bool) ) (! (= (type ($generated@@194 $generated@@238 $generated@@239 $generated@@240 $generated@@241)) ($generated@@195 $generated@@88 $generated@@4))
 :pattern ( ($generated@@194 $generated@@238 $generated@@239 $generated@@240 $generated@@241))
))))
(assert (forall (($generated@@242 T@U) ($generated@@243 T@U) ($generated@@244 T@U) ($generated@@245 Bool) ($generated@@246 T@U) ($generated@@247 T@U) ) (! (let (($generated@@248 ($generated@@78 (type $generated@@247))))
 (=> (and (and (and (and (= (type $generated@@242) $generated@@88) (= (type $generated@@243) ($generated@@87 $generated@@88 $generated@@89))) (= (type $generated@@244) ($generated@@77 $generated@@4))) (= (type $generated@@246) $generated@@88)) (= (type $generated@@247) ($generated@@77 $generated@@248))) (= ($generated@@0 ($generated@@193 ($generated@@194 $generated@@242 $generated@@243 $generated@@244 $generated@@245) $generated@@246 $generated@@247))  (=> (and (not (= $generated@@246 $generated@@242)) ($generated@@0 ($generated@@94 ($generated@@92 $generated@@243 $generated@@246) $generated@@244))) $generated@@245))))
 :pattern ( ($generated@@193 ($generated@@194 $generated@@242 $generated@@243 $generated@@244 $generated@@245) $generated@@246 $generated@@247))
)))
(assert (= (type $generated@@249) $generated@@75))
(assert (forall (($generated@@250 T@U) ($generated@@251 T@U) ) (!  (=> (and (= (type $generated@@250) $generated@@88) (= (type $generated@@251) ($generated@@87 $generated@@88 $generated@@89))) (= ($generated@@85 $generated@@250 $generated@@249 $generated@@251) ($generated@@85 $generated@@250 $generated@@151 $generated@@251)))
 :pattern ( ($generated@@85 $generated@@250 $generated@@249 $generated@@251))
)))
(assert (forall (($generated@@254 T@U) ($generated@@255 T@U) ) (! (= (type ($generated@@252 $generated@@254 $generated@@255)) $generated@@171)
 :pattern ( ($generated@@252 $generated@@254 $generated@@255))
)))
(assert (forall (($generated@@256 T@U) ($generated@@257 T@U) ($generated@@258 T@U) ($generated@@259 T@U) ) (!  (=> (and (and (and (= (type $generated@@256) $generated@@75) (= (type $generated@@257) $generated@@75)) (= (type $generated@@258) $generated@@180)) (= (type $generated@@259) $generated@@180)) (= ($generated@@154 ($generated@@252 $generated@@258 $generated@@259) ($generated@@170 $generated@@256 $generated@@257))  (and ($generated@@253 $generated@@258 $generated@@256) ($generated@@253 $generated@@259 $generated@@257))))
 :pattern ( ($generated@@154 ($generated@@252 $generated@@258 $generated@@259) ($generated@@170 $generated@@256 $generated@@257)))
)))
(assert  (and (forall (($generated@@264 T@U) ($generated@@265 T@U) ($generated@@266 T@U) ) (! (= (type ($generated@@262 $generated@@264 $generated@@265 $generated@@266)) ($generated@@87 $generated@@180 $generated@@4))
 :pattern ( ($generated@@262 $generated@@264 $generated@@265 $generated@@266))
)) (forall (($generated@@267 T@U) ) (! (= (type ($generated@@263 $generated@@267)) $generated@@180)
 :pattern ( ($generated@@263 $generated@@267))
))))
(assert (forall (($generated@@268 T@U) ($generated@@269 T@U) ($generated@@270 T@U) ($generated@@271 T@U) ) (!  (=> (and (and (and (and (= (type $generated@@268) $generated@@75) (= (type $generated@@269) ($generated@@87 $generated@@88 $generated@@89))) (= (type $generated@@270) ($generated@@87 $generated@@88 $generated@@89))) (= (type $generated@@271) $generated@@157)) (and (and (and ($generated@@143 $generated@@269 $generated@@270) (and ($generated@@261 $generated@@269) ($generated@@261 $generated@@270))) ($generated@@154 $generated@@271 ($generated@@158 $generated@@268))) (forall (($generated@@272 T@U) ($generated@@273 T@U) ) (! (let (($generated@@274 ($generated@@78 (type $generated@@273))))
 (=> (and (and (= (type $generated@@272) $generated@@88) (= (type $generated@@273) ($generated@@77 $generated@@274))) (and (not (= $generated@@272 $generated@@148)) ($generated@@0 ($generated@@92 ($generated@@262 $generated@@268 $generated@@269 $generated@@271) ($generated@@263 $generated@@272))))) (= ($generated@@94 ($generated@@92 $generated@@269 $generated@@272) $generated@@273) ($generated@@94 ($generated@@92 $generated@@270 $generated@@272) $generated@@273))))
 :no-pattern (type $generated@@272)
 :no-pattern (type $generated@@273)
 :no-pattern ($generated $generated@@272)
 :no-pattern ($generated@@0 $generated@@272)
 :no-pattern ($generated $generated@@273)
 :no-pattern ($generated@@0 $generated@@273)
)))) (= ($generated@@260 $generated@@268 $generated@@269 $generated@@271) ($generated@@260 $generated@@268 $generated@@270 $generated@@271)))
 :pattern ( ($generated@@143 $generated@@269 $generated@@270) ($generated@@260 $generated@@268 $generated@@270 $generated@@271))
)))
(assert (forall (($generated@@275 T@U) ($generated@@276 T@U) ($generated@@277 T@U) ($generated@@278 T@U) ) (!  (=> (and (and (and (and (= (type $generated@@275) $generated@@75) (= (type $generated@@276) ($generated@@87 $generated@@88 $generated@@89))) (= (type $generated@@277) ($generated@@87 $generated@@88 $generated@@89))) (= (type $generated@@278) $generated@@157)) (and (and (and ($generated@@143 $generated@@276 $generated@@277) (and ($generated@@261 $generated@@276) ($generated@@261 $generated@@277))) ($generated@@154 $generated@@278 ($generated@@158 $generated@@275))) (forall (($generated@@279 T@U) ($generated@@280 T@U) ) (! (let (($generated@@281 ($generated@@78 (type $generated@@280))))
 (=> (and (and (= (type $generated@@279) $generated@@88) (= (type $generated@@280) ($generated@@77 $generated@@281))) (and (not (= $generated@@279 $generated@@148)) ($generated@@0 ($generated@@92 ($generated@@262 $generated@@275 $generated@@277 $generated@@278) ($generated@@263 $generated@@279))))) (= ($generated@@94 ($generated@@92 $generated@@276 $generated@@279) $generated@@280) ($generated@@94 ($generated@@92 $generated@@277 $generated@@279) $generated@@280))))
 :no-pattern (type $generated@@279)
 :no-pattern (type $generated@@280)
 :no-pattern ($generated $generated@@279)
 :no-pattern ($generated@@0 $generated@@279)
 :no-pattern ($generated $generated@@280)
 :no-pattern ($generated@@0 $generated@@280)
)))) (= ($generated@@260 $generated@@275 $generated@@276 $generated@@278) ($generated@@260 $generated@@275 $generated@@277 $generated@@278)))
 :pattern ( ($generated@@143 $generated@@276 $generated@@277) ($generated@@260 $generated@@275 $generated@@277 $generated@@278))
)))
(assert  (and (forall (($generated@@284 T@U) ($generated@@285 T@U) ($generated@@286 T@U) ) (! (= (type ($generated@@282 $generated@@284 $generated@@285 $generated@@286)) $generated@@180)
 :pattern ( ($generated@@282 $generated@@284 $generated@@285 $generated@@286))
)) (forall (($generated@@287 T@U) ($generated@@288 T@U) ($generated@@289 T@U) ) (! (= (type ($generated@@283 $generated@@287 $generated@@288 $generated@@289)) $generated@@157)
 :pattern ( ($generated@@283 $generated@@287 $generated@@288 $generated@@289))
))))
(assert (forall (($generated@@290 T@U) ($generated@@291 T@U) ($generated@@292 T@U) ($generated@@293 T@U) ($generated@@294 T@U) ) (!  (=> (and (and (and (and (= (type $generated@@290) $generated@@75) (= (type $generated@@291) ($generated@@87 $generated@@88 $generated@@89))) (= (type $generated@@292) ($generated@@87 ($generated@@87 $generated@@88 $generated@@89) $generated@@180))) (= (type $generated@@293) ($generated@@87 ($generated@@87 $generated@@88 $generated@@89) $generated@@4))) (= (type $generated@@294) ($generated@@87 ($generated@@87 $generated@@88 $generated@@89) ($generated@@87 $generated@@180 $generated@@4)))) (= ($generated@@282 $generated@@290 $generated@@291 ($generated@@283 $generated@@292 $generated@@293 $generated@@294)) ($generated@@92 $generated@@292 $generated@@291)))
 :pattern ( ($generated@@282 $generated@@290 $generated@@291 ($generated@@283 $generated@@292 $generated@@293 $generated@@294)))
)))
(assert  (=> (<= 0 $generated@@295) (forall (($generated@@299 T@U) ) (!  (=> (and (= (type $generated@@299) $generated@@88) (or ($generated@@297 $generated@@299) (and (not (= 0 $generated@@295)) (and (not (= $generated@@299 $generated@@148)) ($generated@@154 $generated@@299 $generated@@249))))) (= ($generated@@296 $generated@@299) ($generated@@298 80)))
 :pattern ( ($generated@@296 $generated@@299))
))))
(assert (forall (($generated@@300 T@U) ($generated@@301 T@U) ) (!  (=> (and (= (type $generated@@300) $generated@@171) (= (type $generated@@301) $generated@@171)) (= ($generated@@177 $generated@@300 $generated@@301) (= $generated@@300 $generated@@301)))
 :pattern ( ($generated@@177 $generated@@300 $generated@@301))
)))
(assert (forall (($generated@@303 T@U) ) (! (= (type ($generated@@302 $generated@@303)) $generated@@75)
 :pattern ( ($generated@@302 $generated@@303))
)))
(assert (forall (($generated@@304 T@U) ($generated@@305 T@U) ) (!  (=> (and (= (type $generated@@304) ($generated@@87 $generated@@180 $generated@@4)) (= (type $generated@@305) $generated@@75)) (= ($generated@@154 $generated@@304 ($generated@@302 $generated@@305)) (forall (($generated@@306 T@U) ) (!  (=> (and (= (type $generated@@306) $generated@@180) ($generated@@0 ($generated@@92 $generated@@304 $generated@@306))) ($generated@@253 $generated@@306 $generated@@305))
 :pattern ( ($generated@@92 $generated@@304 $generated@@306))
))))
 :pattern ( ($generated@@154 $generated@@304 ($generated@@302 $generated@@305)))
)))
(assert (forall (($generated@@308 T@U) ) (! (= (type ($generated@@307 $generated@@308)) $generated@@75)
 :pattern ( ($generated@@307 $generated@@308))
)))
(assert (forall (($generated@@309 T@U) ($generated@@310 T@U) ) (!  (=> (and (= (type $generated@@309) ($generated@@87 $generated@@180 $generated@@4)) (= (type $generated@@310) $generated@@75)) (= ($generated@@154 $generated@@309 ($generated@@307 $generated@@310)) (forall (($generated@@311 T@U) ) (!  (=> (and (= (type $generated@@311) $generated@@180) ($generated@@0 ($generated@@92 $generated@@309 $generated@@311))) ($generated@@253 $generated@@311 $generated@@310))
 :pattern ( ($generated@@92 $generated@@309 $generated@@311))
))))
 :pattern ( ($generated@@154 $generated@@309 ($generated@@307 $generated@@310)))
)))
(assert (forall (($generated@@312 Int) ) (! (= ($generated@@298 $generated@@312) $generated@@312)
 :pattern ( ($generated@@298 $generated@@312))
)))
(assert (forall (($generated@@314 T@U) ) (! (let (($generated@@315 (type $generated@@314)))
(= (type ($generated@@313 $generated@@314)) $generated@@315))
 :pattern ( ($generated@@313 $generated@@314))
)))
(assert (forall (($generated@@316 T@U) ) (! (= ($generated@@313 $generated@@316) $generated@@316)
 :pattern ( ($generated@@313 $generated@@316))
)))
(assert (forall (($generated@@317 T@U) ($generated@@318 T@U) ($generated@@319 T@U) ($generated@@320 T@U) ) (!  (=> (and (and (and (and (= (type $generated@@317) $generated@@75) (= (type $generated@@318) ($generated@@87 $generated@@88 $generated@@89))) (= (type $generated@@319) ($generated@@87 $generated@@88 $generated@@89))) (= (type $generated@@320) $generated@@157)) (and (and (and ($generated@@143 $generated@@318 $generated@@319) (and ($generated@@261 $generated@@318) ($generated@@261 $generated@@319))) ($generated@@154 $generated@@320 ($generated@@158 $generated@@317))) (forall (($generated@@321 T@U) ($generated@@322 T@U) ) (! (let (($generated@@323 ($generated@@78 (type $generated@@322))))
 (=> (and (and (= (type $generated@@321) $generated@@88) (= (type $generated@@322) ($generated@@77 $generated@@323))) (and (not (= $generated@@321 $generated@@148)) ($generated@@0 ($generated@@92 ($generated@@262 $generated@@317 $generated@@318 $generated@@320) ($generated@@263 $generated@@321))))) (= ($generated@@94 ($generated@@92 $generated@@318 $generated@@321) $generated@@322) ($generated@@94 ($generated@@92 $generated@@319 $generated@@321) $generated@@322))))
 :no-pattern (type $generated@@321)
 :no-pattern (type $generated@@322)
 :no-pattern ($generated $generated@@321)
 :no-pattern ($generated@@0 $generated@@321)
 :no-pattern ($generated $generated@@322)
 :no-pattern ($generated@@0 $generated@@322)
)))) (= ($generated@@262 $generated@@317 $generated@@318 $generated@@320) ($generated@@262 $generated@@317 $generated@@319 $generated@@320)))
 :pattern ( ($generated@@143 $generated@@318 $generated@@319) ($generated@@262 $generated@@317 $generated@@319 $generated@@320))
)))
(assert (forall (($generated@@324 T@U) ($generated@@325 T@U) ($generated@@326 T@U) ($generated@@327 T@U) ) (!  (=> (and (and (and (and (= (type $generated@@324) $generated@@75) (= (type $generated@@325) ($generated@@87 $generated@@88 $generated@@89))) (= (type $generated@@326) ($generated@@87 $generated@@88 $generated@@89))) (= (type $generated@@327) $generated@@157)) (and (and (and ($generated@@143 $generated@@325 $generated@@326) (and ($generated@@261 $generated@@325) ($generated@@261 $generated@@326))) ($generated@@154 $generated@@327 ($generated@@158 $generated@@324))) (forall (($generated@@328 T@U) ($generated@@329 T@U) ) (! (let (($generated@@330 ($generated@@78 (type $generated@@329))))
 (=> (and (and (= (type $generated@@328) $generated@@88) (= (type $generated@@329) ($generated@@77 $generated@@330))) (and (not (= $generated@@328 $generated@@148)) ($generated@@0 ($generated@@92 ($generated@@262 $generated@@324 $generated@@326 $generated@@327) ($generated@@263 $generated@@328))))) (= ($generated@@94 ($generated@@92 $generated@@325 $generated@@328) $generated@@329) ($generated@@94 ($generated@@92 $generated@@326 $generated@@328) $generated@@329))))
 :no-pattern (type $generated@@328)
 :no-pattern (type $generated@@329)
 :no-pattern ($generated $generated@@328)
 :no-pattern ($generated@@0 $generated@@328)
 :no-pattern ($generated $generated@@329)
 :no-pattern ($generated@@0 $generated@@329)
)))) (= ($generated@@262 $generated@@324 $generated@@325 $generated@@327) ($generated@@262 $generated@@324 $generated@@326 $generated@@327)))
 :pattern ( ($generated@@143 $generated@@325 $generated@@326) ($generated@@262 $generated@@324 $generated@@326 $generated@@327))
)))
(assert (forall (($generated@@331 T@U) ($generated@@332 T@U) ($generated@@333 T@U) ($generated@@334 T@U) ) (!  (=> (and (and (and (and (= (type $generated@@331) $generated@@75) (= (type $generated@@332) ($generated@@87 $generated@@88 $generated@@89))) (= (type $generated@@333) ($generated@@87 $generated@@88 $generated@@89))) (= (type $generated@@334) $generated@@157)) (and (and (and ($generated@@143 $generated@@332 $generated@@333) (and ($generated@@261 $generated@@332) ($generated@@261 $generated@@333))) ($generated@@154 $generated@@334 ($generated@@158 $generated@@331))) (forall (($generated@@335 T@U) ($generated@@336 T@U) ) (! (let (($generated@@337 ($generated@@78 (type $generated@@336))))
 (=> (and (and (= (type $generated@@335) $generated@@88) (= (type $generated@@336) ($generated@@77 $generated@@337))) (and (not (= $generated@@335 $generated@@148)) ($generated@@0 ($generated@@92 ($generated@@262 $generated@@331 $generated@@332 $generated@@334) ($generated@@263 $generated@@335))))) (= ($generated@@94 ($generated@@92 $generated@@332 $generated@@335) $generated@@336) ($generated@@94 ($generated@@92 $generated@@333 $generated@@335) $generated@@336))))
 :no-pattern (type $generated@@335)
 :no-pattern (type $generated@@336)
 :no-pattern ($generated $generated@@335)
 :no-pattern ($generated@@0 $generated@@335)
 :no-pattern ($generated $generated@@336)
 :no-pattern ($generated@@0 $generated@@336)
)))) (= ($generated@@282 $generated@@331 $generated@@332 $generated@@334) ($generated@@282 $generated@@331 $generated@@333 $generated@@334)))
 :pattern ( ($generated@@143 $generated@@332 $generated@@333) ($generated@@282 $generated@@331 $generated@@333 $generated@@334))
)))
(assert (forall (($generated@@338 T@U) ($generated@@339 T@U) ($generated@@340 T@U) ($generated@@341 T@U) ) (!  (=> (and (and (and (and (= (type $generated@@338) $generated@@75) (= (type $generated@@339) ($generated@@87 $generated@@88 $generated@@89))) (= (type $generated@@340) ($generated@@87 $generated@@88 $generated@@89))) (= (type $generated@@341) $generated@@157)) (and (and (and ($generated@@143 $generated@@339 $generated@@340) (and ($generated@@261 $generated@@339) ($generated@@261 $generated@@340))) ($generated@@154 $generated@@341 ($generated@@158 $generated@@338))) (forall (($generated@@342 T@U) ($generated@@343 T@U) ) (! (let (($generated@@344 ($generated@@78 (type $generated@@343))))
 (=> (and (and (= (type $generated@@342) $generated@@88) (= (type $generated@@343) ($generated@@77 $generated@@344))) (and (not (= $generated@@342 $generated@@148)) ($generated@@0 ($generated@@92 ($generated@@262 $generated@@338 $generated@@340 $generated@@341) ($generated@@263 $generated@@342))))) (= ($generated@@94 ($generated@@92 $generated@@339 $generated@@342) $generated@@343) ($generated@@94 ($generated@@92 $generated@@340 $generated@@342) $generated@@343))))
 :no-pattern (type $generated@@342)
 :no-pattern (type $generated@@343)
 :no-pattern ($generated $generated@@342)
 :no-pattern ($generated@@0 $generated@@342)
 :no-pattern ($generated $generated@@343)
 :no-pattern ($generated@@0 $generated@@343)
)))) (= ($generated@@282 $generated@@338 $generated@@339 $generated@@341) ($generated@@282 $generated@@338 $generated@@340 $generated@@341)))
 :pattern ( ($generated@@143 $generated@@339 $generated@@340) ($generated@@282 $generated@@338 $generated@@340 $generated@@341))
)))
(assert (forall (($generated@@346 T@U) ($generated@@347 T@U) ($generated@@348 T@U) ($generated@@349 T@U) ($generated@@350 T@U) ) (!  (=> (and (and (and (and (and (= (type $generated@@346) $generated@@75) (= (type $generated@@347) $generated@@75)) (= (type $generated@@348) $generated@@180)) (= (type $generated@@349) $generated@@180)) (= (type $generated@@350) ($generated@@87 $generated@@88 $generated@@89))) ($generated@@261 $generated@@350)) (= ($generated@@85 ($generated@@252 $generated@@348 $generated@@349) ($generated@@170 $generated@@346 $generated@@347) $generated@@350)  (and ($generated@@345 $generated@@348 $generated@@346 $generated@@350) ($generated@@345 $generated@@349 $generated@@347 $generated@@350))))
 :pattern ( ($generated@@85 ($generated@@252 $generated@@348 $generated@@349) ($generated@@170 $generated@@346 $generated@@347) $generated@@350))
)))
(assert (forall (($generated@@352 T@U) ) (! (= (type ($generated@@351 $generated@@352)) $generated@@79)
 :pattern ( ($generated@@351 $generated@@352))
)))
(assert (forall (($generated@@353 T@U) ) (!  (=> (= (type $generated@@353) $generated@@171) (= ($generated@@169 $generated@@353) (= ($generated@@351 $generated@@353) $generated@@65)))
 :pattern ( ($generated@@169 $generated@@353))
)))
(assert  (=> (<= 0 $generated@@295) (forall (($generated@@354 T@U) ) (!  (=> (and (= (type $generated@@354) $generated@@88) (or ($generated@@297 ($generated@@313 $generated@@354)) (and (not (= 0 $generated@@295)) (and (not (= $generated@@354 $generated@@148)) ($generated@@154 $generated@@354 $generated@@249))))) (= ($generated@@296 ($generated@@313 $generated@@354)) ($generated@@298 80)))
 :weight 3
 :pattern ( ($generated@@296 ($generated@@313 $generated@@354)))
))))
(assert  (and (= (type $generated@@355) ($generated@@87 $generated@@88 $generated@@89)) (forall (($generated@@358 T@T) ) (! (= (type ($generated@@357 $generated@@358)) ($generated@@87 $generated@@358 $generated@@4))
 :pattern ( ($generated@@357 $generated@@358))
))))
(assert (forall (($generated@@359 T@U) ($generated@@360 T@U) ($generated@@361 T@U) ) (!  (=> (and (and (and (= (type $generated@@359) $generated@@75) (= (type $generated@@360) ($generated@@87 $generated@@88 $generated@@89))) (= (type $generated@@361) $generated@@157)) (and (and ($generated@@261 $generated@@360) ($generated@@154 $generated@@361 ($generated@@158 $generated@@359))) ($generated@@356 ($generated@@262 $generated@@359 $generated@@355 $generated@@361) ($generated@@357 $generated@@180)))) (= ($generated@@260 $generated@@359 $generated@@355 $generated@@361) ($generated@@260 $generated@@359 $generated@@360 $generated@@361)))
 :pattern ( ($generated@@260 $generated@@359 $generated@@355 $generated@@361) ($generated@@261 $generated@@360))
 :pattern ( ($generated@@260 $generated@@359 $generated@@360 $generated@@361))
)))
(assert (forall (($generated@@362 T@U) ) (!  (=> (and (= (type $generated@@362) $generated@@171) ($generated@@169 $generated@@362)) (exists (($generated@@363 T@U) ($generated@@364 T@U) ) (!  (and (and (= (type $generated@@363) $generated@@180) (= (type $generated@@364) $generated@@180)) (= $generated@@362 ($generated@@252 $generated@@363 $generated@@364)))
 :no-pattern (type $generated@@363)
 :no-pattern (type $generated@@364)
 :no-pattern ($generated $generated@@363)
 :no-pattern ($generated@@0 $generated@@363)
 :no-pattern ($generated $generated@@364)
 :no-pattern ($generated@@0 $generated@@364)
)))
 :pattern ( ($generated@@169 $generated@@362))
)))
(assert  (and (and (forall (($generated@@369 T@T) ) (= ($generated@@1 ($generated@@367 $generated@@369)) 18)) (forall (($generated@@370 T@T) ) (! (= ($generated@@368 ($generated@@367 $generated@@370)) $generated@@370)
 :pattern ( ($generated@@367 $generated@@370))
))) (forall (($generated@@371 T@T) ) (! (= (type ($generated@@365 $generated@@371)) ($generated@@367 $generated@@371))
 :pattern ( ($generated@@365 $generated@@371))
))))
(assert (forall (($generated@@372 T@T) ) (! (= ($generated@@366 ($generated@@365 $generated@@372)) 0)
 :pattern ( ($generated@@365 $generated@@372))
)))
(assert  (and (forall (($generated@@375 T@U) ) (! (= (type ($generated@@373 $generated@@375)) ($generated@@87 $generated@@180 $generated@@4))
 :pattern ( ($generated@@373 $generated@@375))
)) (forall (($generated@@376 T@T) ($generated@@377 T@U) ) (! (= (type ($generated@@374 $generated@@376 $generated@@377)) $generated@@376)
 :pattern ( ($generated@@374 $generated@@376 $generated@@377))
))))
(assert (forall (($generated@@378 T@U) ($generated@@379 T@U) ) (!  (=> (and (= (type $generated@@378) ($generated@@87 $generated@@88 $generated@@4)) (= (type $generated@@379) $generated@@180)) (= ($generated@@0 ($generated@@92 ($generated@@373 $generated@@378) $generated@@379)) ($generated@@0 ($generated@@92 $generated@@378 ($generated@@374 $generated@@88 $generated@@379)))))
 :pattern ( ($generated@@92 ($generated@@373 $generated@@378) $generated@@379))
)))
(assert  (=> (<= 0 $generated@@295) (forall (($generated@@380 T@U) ) (!  (=> (and (= (type $generated@@380) $generated@@88) (or ($generated@@297 $generated@@380) (and (not (= 0 $generated@@295)) (and (not (= $generated@@380 $generated@@148)) ($generated@@154 $generated@@380 $generated@@249))))) true)
 :pattern ( ($generated@@296 $generated@@380))
))))
(assert  (and (= ($generated@@1 $generated@@382) 19) (forall (($generated@@383 T@U) ($generated@@384 T@U) ) (! (let (($generated@@385 ($generated@@91 (type $generated@@383))))
(= (type ($generated@@381 $generated@@383 $generated@@384)) $generated@@385))
 :pattern ( ($generated@@381 $generated@@383 $generated@@384))
))))
(assert (forall (($generated@@386 T@U) ($generated@@387 T@U) ) (! (let (($generated@@388 ($generated@@91 (type $generated@@386))))
 (=> (and (= (type $generated@@386) ($generated@@87 $generated@@382 $generated@@388)) (= (type $generated@@387) $generated@@382)) (= ($generated@@381 $generated@@386 $generated@@387) ($generated@@92 $generated@@386 $generated@@387))))
 :pattern ( ($generated@@381 $generated@@386 $generated@@387))
)))
(assert ($generated@@261 $generated@@355))
(assert (forall (($generated@@390 T@U) ) (! (= (type ($generated@@389 $generated@@390)) $generated@@157)
 :pattern ( ($generated@@389 $generated@@390))
)))
(assert  (=> (< 0 $generated@@295) (forall (($generated@@391 T@U) ($generated@@392 T@U) ) (!  (=> (and (and (= (type $generated@@391) ($generated@@87 $generated@@88 $generated@@89)) (= (type $generated@@392) $generated@@88)) (and ($generated@@261 $generated@@391) ($generated@@0 ($generated@@94 ($generated@@92 $generated@@391 $generated@@392) $generated@@60)))) ($generated@@85 ($generated@@389 $generated@@392) ($generated@@164 $generated@@46) $generated@@391))
 :pattern ( ($generated@@389 $generated@@392) ($generated@@94 ($generated@@92 $generated@@391 $generated@@392) $generated@@60))
))))
(assert  (=> (< 0 $generated@@295) (forall (($generated@@393 T@U) ) (!  (=> (= (type $generated@@393) $generated@@88) ($generated@@154 ($generated@@389 $generated@@393) ($generated@@164 $generated@@46)))
 :pattern ( ($generated@@389 $generated@@393))
))))
(assert (forall (($generated@@394 T@U) ($generated@@395 T@U) ($generated@@396 T@U) ) (!  (=> (and (= (type $generated@@395) $generated@@75) (= (type $generated@@396) ($generated@@87 $generated@@88 $generated@@89))) (= ($generated@@345 ($generated@@263 $generated@@394) $generated@@395 $generated@@396) ($generated@@85 $generated@@394 $generated@@395 $generated@@396)))
 :pattern ( ($generated@@345 ($generated@@263 $generated@@394) $generated@@395 $generated@@396))
)))
(assert (forall (($generated@@397 T@U) ($generated@@398 T@U) ($generated@@399 T@U) ($generated@@400 T@U) ) (!  (=> (and (and (and (and (and (= (type $generated@@397) ($generated@@87 $generated@@88 $generated@@89)) (= (type $generated@@398) ($generated@@87 $generated@@88 $generated@@89))) (= (type $generated@@399) $generated@@180)) (= (type $generated@@400) $generated@@75)) ($generated@@143 $generated@@397 $generated@@398)) ($generated@@345 $generated@@399 $generated@@400 $generated@@397)) ($generated@@345 $generated@@399 $generated@@400 $generated@@398))
 :pattern ( ($generated@@143 $generated@@397 $generated@@398) ($generated@@345 $generated@@399 $generated@@400 $generated@@397))
)))
(assert (forall (($generated@@401 T@U) ($generated@@402 T@U) ($generated@@403 T@U) ($generated@@404 T@U) ) (!  (=> (and (and (and (and (= (type $generated@@401) ($generated@@87 $generated@@88 $generated@@89)) (= (type $generated@@402) ($generated@@87 $generated@@88 $generated@@89))) (= (type $generated@@404) $generated@@75)) ($generated@@143 $generated@@401 $generated@@402)) ($generated@@85 $generated@@403 $generated@@404 $generated@@401)) ($generated@@85 $generated@@403 $generated@@404 $generated@@402))
 :pattern ( ($generated@@143 $generated@@401 $generated@@402) ($generated@@85 $generated@@403 $generated@@404 $generated@@401))
)))
(assert (forall (($generated@@407 T@T) ) (! (= (type ($generated@@406 $generated@@407)) ($generated@@87 $generated@@407 $generated@@2))
 :pattern ( ($generated@@406 $generated@@407))
)))
(assert (forall (($generated@@408 T@U) ) (! (let (($generated@@409 ($generated@@90 (type $generated@@408))))
 (=> (= (type $generated@@408) ($generated@@87 $generated@@409 $generated@@2)) (and (= (= ($generated@@405 $generated@@408) 0) (= $generated@@408 ($generated@@406 $generated@@409))) (=> (not (= ($generated@@405 $generated@@408) 0)) (exists (($generated@@410 T@U) ) (!  (and (= (type $generated@@410) $generated@@409) (< 0 ($generated ($generated@@92 $generated@@408 $generated@@410))))
 :no-pattern (type $generated@@410)
 :no-pattern ($generated $generated@@410)
 :no-pattern ($generated@@0 $generated@@410)
))))))
 :pattern ( ($generated@@405 $generated@@408))
)))
(assert (forall (($generated@@412 T@U) ) (! (= (type ($generated@@411 $generated@@412)) $generated@@80)
 :pattern ( ($generated@@411 $generated@@412))
)))
(assert (forall (($generated@@413 T@U) ) (!  (=> (= (type $generated@@413) $generated@@75) (and (= ($generated@@83 ($generated@@158 $generated@@413)) $generated@@62) (= ($generated@@411 ($generated@@158 $generated@@413)) $generated@@70)))
 :pattern ( ($generated@@158 $generated@@413))
)))
(assert (forall (($generated@@414 T@U) ) (!  (=> (= (type $generated@@414) $generated@@75) (and (= ($generated@@83 ($generated@@156 $generated@@414)) $generated@@63) (= ($generated@@411 ($generated@@156 $generated@@414)) $generated@@71)))
 :pattern ( ($generated@@156 $generated@@414))
)))
(assert (forall (($generated@@415 T@U) ) (!  (=> (= (type $generated@@415) $generated@@75) (and (= ($generated@@83 ($generated@@164 $generated@@415)) $generated@@64) (= ($generated@@411 ($generated@@164 $generated@@415)) $generated@@72)))
 :pattern ( ($generated@@164 $generated@@415))
)))
(assert  (and (and (and (and (forall (($generated@@421 T@T) ($generated@@422 T@T) ) (= ($generated@@1 ($generated@@418 $generated@@421 $generated@@422)) 20)) (forall (($generated@@423 T@T) ($generated@@424 T@T) ) (! (= ($generated@@419 ($generated@@418 $generated@@423 $generated@@424)) $generated@@423)
 :pattern ( ($generated@@418 $generated@@423 $generated@@424))
))) (forall (($generated@@425 T@T) ($generated@@426 T@T) ) (! (= ($generated@@420 ($generated@@418 $generated@@425 $generated@@426)) $generated@@426)
 :pattern ( ($generated@@418 $generated@@425 $generated@@426))
))) (forall (($generated@@427 T@U) ) (! (let (($generated@@428 ($generated@@419 (type $generated@@427))))
(= (type ($generated@@416 $generated@@427)) ($generated@@87 $generated@@428 $generated@@4)))
 :pattern ( ($generated@@416 $generated@@427))
))) (forall (($generated@@429 T@T) ($generated@@430 T@T) ) (! (= (type ($generated@@417 $generated@@429 $generated@@430)) ($generated@@418 $generated@@429 $generated@@430))
 :pattern ( ($generated@@417 $generated@@429 $generated@@430))
))))
(assert (forall (($generated@@431 T@U) ($generated@@432 T@T) ) (! (let (($generated@@433 (type $generated@@431)))
 (not ($generated@@0 ($generated@@92 ($generated@@416 ($generated@@417 $generated@@433 $generated@@432)) $generated@@431))))
 :pattern ( (let (($generated@@433 (type $generated@@431)))
($generated@@92 ($generated@@416 ($generated@@417 $generated@@433 $generated@@432)) $generated@@431)))
)))
(assert  (and (and (and (and (forall (($generated@@439 T@T) ($generated@@440 T@T) ) (= ($generated@@1 ($generated@@436 $generated@@439 $generated@@440)) 21)) (forall (($generated@@441 T@T) ($generated@@442 T@T) ) (! (= ($generated@@437 ($generated@@436 $generated@@441 $generated@@442)) $generated@@441)
 :pattern ( ($generated@@436 $generated@@441 $generated@@442))
))) (forall (($generated@@443 T@T) ($generated@@444 T@T) ) (! (= ($generated@@438 ($generated@@436 $generated@@443 $generated@@444)) $generated@@444)
 :pattern ( ($generated@@436 $generated@@443 $generated@@444))
))) (forall (($generated@@445 T@U) ) (! (let (($generated@@446 ($generated@@437 (type $generated@@445))))
(= (type ($generated@@434 $generated@@445)) ($generated@@87 $generated@@446 $generated@@4)))
 :pattern ( ($generated@@434 $generated@@445))
))) (forall (($generated@@447 T@T) ($generated@@448 T@T) ) (! (= (type ($generated@@435 $generated@@447 $generated@@448)) ($generated@@436 $generated@@447 $generated@@448))
 :pattern ( ($generated@@435 $generated@@447 $generated@@448))
))))
(assert (forall (($generated@@449 T@U) ($generated@@450 T@T) ) (! (let (($generated@@451 (type $generated@@449)))
 (not ($generated@@0 ($generated@@92 ($generated@@434 ($generated@@435 $generated@@451 $generated@@450)) $generated@@449))))
 :pattern ( (let (($generated@@451 (type $generated@@449)))
($generated@@92 ($generated@@434 ($generated@@435 $generated@@451 $generated@@450)) $generated@@449)))
)))
(assert (forall (($generated@@452 T@U) ($generated@@453 T@U) ) (! (let (($generated@@454 ($generated@@90 (type $generated@@452))))
 (=> (and (= (type $generated@@452) ($generated@@87 $generated@@454 $generated@@4)) (= (type $generated@@453) ($generated@@87 $generated@@454 $generated@@4))) (= ($generated@@356 $generated@@452 $generated@@453) (forall (($generated@@455 T@U) ) (!  (=> (= (type $generated@@455) $generated@@454) (= ($generated@@0 ($generated@@92 $generated@@452 $generated@@455)) ($generated@@0 ($generated@@92 $generated@@453 $generated@@455))))
 :pattern ( ($generated@@92 $generated@@452 $generated@@455))
 :pattern ( ($generated@@92 $generated@@453 $generated@@455))
)))))
 :pattern ( ($generated@@356 $generated@@452 $generated@@453))
)))
(assert (forall (($generated@@456 T@U) ) (! (let (($generated@@457 ($generated@@90 (type $generated@@456))))
 (=> (= (type $generated@@456) ($generated@@87 $generated@@457 $generated@@2)) (= ($generated@@186 $generated@@456) (forall (($generated@@458 T@U) ) (!  (=> (= (type $generated@@458) $generated@@457) (and (<= 0 ($generated ($generated@@92 $generated@@456 $generated@@458))) (<= ($generated ($generated@@92 $generated@@456 $generated@@458)) ($generated@@405 $generated@@456))))
 :pattern ( ($generated@@92 $generated@@456 $generated@@458))
)))))
 :pattern ( ($generated@@186 $generated@@456))
)))
(assert (forall (($generated@@459 T@U) ) (!  (=> (and (= (type $generated@@459) $generated@@180) ($generated@@253 $generated@@459 $generated@@147)) (and (= ($generated@@263 ($generated@@374 $generated@@88 $generated@@459)) $generated@@459) ($generated@@154 ($generated@@374 $generated@@88 $generated@@459) $generated@@147)))
 :pattern ( ($generated@@253 $generated@@459 $generated@@147))
)))
(assert (forall (($generated@@460 T@U) ) (!  (=> (and (= (type $generated@@460) $generated@@180) ($generated@@253 $generated@@460 $generated@@151)) (and (= ($generated@@263 ($generated@@374 $generated@@88 $generated@@460)) $generated@@460) ($generated@@154 ($generated@@374 $generated@@88 $generated@@460) $generated@@151)))
 :pattern ( ($generated@@253 $generated@@460 $generated@@151))
)))
(assert (forall (($generated@@461 T@U) ) (!  (=> (and (= (type $generated@@461) $generated@@180) ($generated@@253 $generated@@461 $generated@@249)) (and (= ($generated@@263 ($generated@@374 $generated@@88 $generated@@461)) $generated@@461) ($generated@@154 ($generated@@374 $generated@@88 $generated@@461) $generated@@249)))
 :pattern ( ($generated@@253 $generated@@461 $generated@@249))
)))
(assert (forall (($generated@@462 T@U) ) (!  (=> (= (type $generated@@462) $generated@@88) (= ($generated@@154 $generated@@462 $generated@@249)  (and ($generated@@154 $generated@@462 $generated@@151) (not (= $generated@@462 $generated@@148)))))
 :pattern ( ($generated@@154 $generated@@462 $generated@@249))
)))
(assert (forall (($generated@@463 T@U) ) (! (let (($generated@@464 ($generated@@420 (type $generated@@463))))
(let (($generated@@465 ($generated@@419 (type $generated@@463))))
 (=> (= (type $generated@@463) ($generated@@418 $generated@@465 $generated@@464)) (or (= $generated@@463 ($generated@@417 $generated@@465 $generated@@464)) (exists (($generated@@466 T@U) ) (!  (and (= (type $generated@@466) $generated@@465) ($generated@@0 ($generated@@92 ($generated@@416 $generated@@463) $generated@@466)))
 :no-pattern (type $generated@@466)
 :no-pattern ($generated $generated@@466)
 :no-pattern ($generated@@0 $generated@@466)
))))))
 :pattern ( ($generated@@416 $generated@@463))
)))
(assert (forall (($generated@@468 T@U) ) (! (let (($generated@@469 ($generated@@420 (type $generated@@468))))
(= (type ($generated@@467 $generated@@468)) ($generated@@87 $generated@@469 $generated@@4)))
 :pattern ( ($generated@@467 $generated@@468))
)))
(assert (forall (($generated@@470 T@U) ) (! (let (($generated@@471 ($generated@@420 (type $generated@@470))))
(let (($generated@@472 ($generated@@419 (type $generated@@470))))
 (=> (= (type $generated@@470) ($generated@@418 $generated@@472 $generated@@471)) (or (= $generated@@470 ($generated@@417 $generated@@472 $generated@@471)) (exists (($generated@@473 T@U) ) (!  (and (= (type $generated@@473) $generated@@471) ($generated@@0 ($generated@@92 ($generated@@467 $generated@@470) $generated@@473)))
 :no-pattern (type $generated@@473)
 :no-pattern ($generated $generated@@473)
 :no-pattern ($generated@@0 $generated@@473)
))))))
 :pattern ( ($generated@@467 $generated@@470))
)))
(assert (forall (($generated@@474 T@U) ) (! (let (($generated@@475 ($generated@@438 (type $generated@@474))))
(let (($generated@@476 ($generated@@437 (type $generated@@474))))
 (=> (= (type $generated@@474) ($generated@@436 $generated@@476 $generated@@475)) (or (= $generated@@474 ($generated@@435 $generated@@476 $generated@@475)) (exists (($generated@@477 T@U) ) (!  (and (= (type $generated@@477) $generated@@476) ($generated@@0 ($generated@@92 ($generated@@434 $generated@@474) $generated@@477)))
 :no-pattern (type $generated@@477)
 :no-pattern ($generated $generated@@477)
 :no-pattern ($generated@@0 $generated@@477)
))))))
 :pattern ( ($generated@@434 $generated@@474))
)))
(assert (forall (($generated@@479 T@U) ) (! (let (($generated@@480 ($generated@@438 (type $generated@@479))))
(= (type ($generated@@478 $generated@@479)) ($generated@@87 $generated@@480 $generated@@4)))
 :pattern ( ($generated@@478 $generated@@479))
)))
(assert (forall (($generated@@481 T@U) ) (! (let (($generated@@482 ($generated@@438 (type $generated@@481))))
(let (($generated@@483 ($generated@@437 (type $generated@@481))))
 (=> (= (type $generated@@481) ($generated@@436 $generated@@483 $generated@@482)) (or (= $generated@@481 ($generated@@435 $generated@@483 $generated@@482)) (exists (($generated@@484 T@U) ) (!  (and (= (type $generated@@484) $generated@@482) ($generated@@0 ($generated@@92 ($generated@@478 $generated@@481) $generated@@484)))
 :no-pattern (type $generated@@484)
 :no-pattern ($generated $generated@@484)
 :no-pattern ($generated@@0 $generated@@484)
))))))
 :pattern ( ($generated@@478 $generated@@481))
)))
(assert (forall (($generated@@485 T@U) ($generated@@486 T@U) ) (!  (=> (and (= (type $generated@@485) ($generated@@87 $generated@@180 $generated@@2)) (= (type $generated@@486) $generated@@75)) (= ($generated@@154 $generated@@485 ($generated@@185 $generated@@486)) (forall (($generated@@487 T@U) ) (!  (=> (and (= (type $generated@@487) $generated@@180) (< 0 ($generated ($generated@@92 $generated@@485 $generated@@487)))) ($generated@@253 $generated@@487 $generated@@486))
 :pattern ( ($generated@@92 $generated@@485 $generated@@487))
))))
 :pattern ( ($generated@@154 $generated@@485 ($generated@@185 $generated@@486)))
)))
(assert  (and (and (and (and (and (and (forall (($generated@@495 T@U) ) (! (= (type ($generated@@488 $generated@@495)) ($generated@@87 $generated@@382 $generated@@157))
 :pattern ( ($generated@@488 $generated@@495))
)) (forall (($generated@@496 T@U) ) (! (= (type ($generated@@489 $generated@@496)) ($generated@@87 ($generated@@87 $generated@@88 $generated@@89) $generated@@180))
 :pattern ( ($generated@@489 $generated@@496))
))) (forall (($generated@@497 Bool) ) (! (= (type ($generated@@490 $generated@@497)) ($generated@@87 ($generated@@87 $generated@@88 $generated@@89) $generated@@4))
 :pattern ( ($generated@@490 $generated@@497))
))) (forall (($generated@@498 T@U) ) (! (= (type ($generated@@491 $generated@@498)) ($generated@@87 ($generated@@87 $generated@@88 $generated@@89) ($generated@@87 $generated@@180 $generated@@4)))
 :pattern ( ($generated@@491 $generated@@498))
))) (forall (($generated@@499 Bool) ) (! (= (type ($generated@@492 $generated@@499)) ($generated@@87 $generated@@88 $generated@@4))
 :pattern ( ($generated@@492 $generated@@499))
))) (forall (($generated@@500 T@U) ) (! (= (type ($generated@@493 $generated@@500)) $generated@@382)
 :pattern ( ($generated@@493 $generated@@500))
))) (= (type $generated@@494) $generated@@382)))
(assert (forall (($generated@@501 T@U) ) (!  (=> (= (type $generated@@501) $generated@@88) (= ($generated@@389 $generated@@501) ($generated@@313 ($generated@@381 ($generated@@488 ($generated@@283 ($generated@@489 ($generated@@263 ($generated@@8 ($generated@@298 92)))) ($generated@@490 true) ($generated@@491 ($generated@@373 ($generated@@492 false))))) ($generated@@493 $generated@@494)))))
 :pattern ( ($generated@@389 $generated@@501))
)))
(assert (forall (($generated@@502 T@U) ($generated@@503 T@U) ) (!  (=> (and (= (type $generated@@502) $generated@@180) (= (type $generated@@503) ($generated@@87 $generated@@88 $generated@@89))) (= ($generated@@92 ($generated@@489 $generated@@502) $generated@@503) $generated@@502))
 :pattern ( ($generated@@92 ($generated@@489 $generated@@502) $generated@@503))
)))
(assert (forall (($generated@@504 Bool) ($generated@@505 T@U) ) (!  (=> (= (type $generated@@505) ($generated@@87 $generated@@88 $generated@@89)) (= ($generated@@0 ($generated@@92 ($generated@@490 $generated@@504) $generated@@505)) $generated@@504))
 :pattern ( ($generated@@92 ($generated@@490 $generated@@504) $generated@@505))
)))
(assert (forall (($generated@@506 Bool) ($generated@@507 T@U) ) (!  (=> (= (type $generated@@507) $generated@@88) (= ($generated@@0 ($generated@@92 ($generated@@492 $generated@@506) $generated@@507)) $generated@@506))
 :pattern ( ($generated@@92 ($generated@@492 $generated@@506) $generated@@507))
)))
(assert (forall (($generated@@508 T@U) ($generated@@509 T@U) ) (!  (=> (and (= (type $generated@@508) ($generated@@87 $generated@@180 $generated@@4)) (= (type $generated@@509) ($generated@@87 $generated@@88 $generated@@89))) (= ($generated@@92 ($generated@@491 $generated@@508) $generated@@509) $generated@@508))
 :pattern ( ($generated@@92 ($generated@@491 $generated@@508) $generated@@509))
)))
(assert (forall (($generated@@510 T@U) ($generated@@511 T@U) ) (!  (=> (and (= (type $generated@@510) $generated@@157) (= (type $generated@@511) $generated@@382)) (= ($generated@@92 ($generated@@488 $generated@@510) $generated@@511) $generated@@510))
 :pattern ( ($generated@@92 ($generated@@488 $generated@@510) $generated@@511))
)))
(assert (forall (($generated@@512 T@U) ($generated@@513 T@U) ($generated@@514 T@U) ) (!  (=> (and (and (= (type $generated@@512) ($generated@@87 $generated@@180 $generated@@4)) (= (type $generated@@513) $generated@@75)) (= (type $generated@@514) ($generated@@87 $generated@@88 $generated@@89))) (= ($generated@@85 $generated@@512 ($generated@@302 $generated@@513) $generated@@514) (forall (($generated@@515 T@U) ) (!  (=> (and (= (type $generated@@515) $generated@@180) ($generated@@0 ($generated@@92 $generated@@512 $generated@@515))) ($generated@@345 $generated@@515 $generated@@513 $generated@@514))
 :pattern ( ($generated@@92 $generated@@512 $generated@@515))
))))
 :pattern ( ($generated@@85 $generated@@512 ($generated@@302 $generated@@513) $generated@@514))
)))
(assert (forall (($generated@@516 T@U) ($generated@@517 T@U) ($generated@@518 T@U) ) (!  (=> (and (and (= (type $generated@@516) ($generated@@87 $generated@@180 $generated@@4)) (= (type $generated@@517) $generated@@75)) (= (type $generated@@518) ($generated@@87 $generated@@88 $generated@@89))) (= ($generated@@85 $generated@@516 ($generated@@307 $generated@@517) $generated@@518) (forall (($generated@@519 T@U) ) (!  (=> (and (= (type $generated@@519) $generated@@180) ($generated@@0 ($generated@@92 $generated@@516 $generated@@519))) ($generated@@345 $generated@@519 $generated@@517 $generated@@518))
 :pattern ( ($generated@@92 $generated@@516 $generated@@519))
))))
 :pattern ( ($generated@@85 $generated@@516 ($generated@@307 $generated@@517) $generated@@518))
)))
(assert (forall (($generated@@520 T@U) ) (! (let (($generated@@521 (type $generated@@520)))
(= ($generated ($generated@@92 ($generated@@406 $generated@@521) $generated@@520)) 0))
 :pattern ( (let (($generated@@521 (type $generated@@520)))
($generated@@92 ($generated@@406 $generated@@521) $generated@@520)))
)))
(assert (forall (($generated@@522 T@U) ($generated@@523 T@U) ($generated@@524 T@U) ) (!  (=> (and (and (and (= (type $generated@@522) $generated@@75) (= (type $generated@@523) ($generated@@87 $generated@@88 $generated@@89))) (= (type $generated@@524) $generated@@157)) (and ($generated@@261 $generated@@523) ($generated@@154 $generated@@524 ($generated@@158 $generated@@522)))) (= ($generated@@356 ($generated@@262 $generated@@522 $generated@@355 $generated@@524) ($generated@@357 $generated@@180)) ($generated@@356 ($generated@@262 $generated@@522 $generated@@523 $generated@@524) ($generated@@357 $generated@@180))))
 :pattern ( ($generated@@262 $generated@@522 $generated@@355 $generated@@524) ($generated@@261 $generated@@523))
 :pattern ( ($generated@@262 $generated@@522 $generated@@523 $generated@@524))
)))
(assert  (and (forall (($generated@@527 T@U) ) (! (= (type ($generated@@525 $generated@@527)) ($generated@@87 $generated@@180 $generated@@4))
 :pattern ( ($generated@@525 $generated@@527))
)) (forall (($generated@@528 T@U) ) (! (let (($generated@@529 ($generated@@420 (type $generated@@528))))
(let (($generated@@530 ($generated@@419 (type $generated@@528))))
(= (type ($generated@@526 $generated@@528)) ($generated@@87 $generated@@530 $generated@@529))))
 :pattern ( ($generated@@526 $generated@@528))
))))
(assert (forall (($generated@@531 T@U) ($generated@@532 T@U) ) (!  (=> (and (= (type $generated@@531) ($generated@@418 $generated@@180 $generated@@180)) (= (type $generated@@532) $generated@@180)) (= ($generated@@0 ($generated@@92 ($generated@@525 $generated@@531) $generated@@532))  (and ($generated@@0 ($generated@@92 ($generated@@416 $generated@@531) ($generated@@178 ($generated@@374 $generated@@171 $generated@@532)))) (= ($generated@@92 ($generated@@526 $generated@@531) ($generated@@178 ($generated@@374 $generated@@171 $generated@@532))) ($generated@@179 ($generated@@374 $generated@@171 $generated@@532))))))
 :pattern ( ($generated@@92 ($generated@@525 $generated@@531) $generated@@532))
)))
(assert  (and (forall (($generated@@535 T@U) ) (! (= (type ($generated@@533 $generated@@535)) ($generated@@87 $generated@@180 $generated@@4))
 :pattern ( ($generated@@533 $generated@@535))
)) (forall (($generated@@536 T@U) ) (! (let (($generated@@537 ($generated@@438 (type $generated@@536))))
(let (($generated@@538 ($generated@@437 (type $generated@@536))))
(= (type ($generated@@534 $generated@@536)) ($generated@@87 $generated@@538 $generated@@537))))
 :pattern ( ($generated@@534 $generated@@536))
))))
(assert (forall (($generated@@539 T@U) ($generated@@540 T@U) ) (!  (=> (and (= (type $generated@@539) ($generated@@436 $generated@@180 $generated@@180)) (= (type $generated@@540) $generated@@180)) (= ($generated@@0 ($generated@@92 ($generated@@533 $generated@@539) $generated@@540))  (and ($generated@@0 ($generated@@92 ($generated@@434 $generated@@539) ($generated@@178 ($generated@@374 $generated@@171 $generated@@540)))) (= ($generated@@92 ($generated@@534 $generated@@539) ($generated@@178 ($generated@@374 $generated@@171 $generated@@540))) ($generated@@179 ($generated@@374 $generated@@171 $generated@@540))))))
 :pattern ( ($generated@@92 ($generated@@533 $generated@@539) $generated@@540))
)))
(assert (forall (($generated@@541 T@U) ($generated@@542 T@U) ) (! (let (($generated@@543 (type $generated@@542)))
(let (($generated@@544 ($generated@@419 (type $generated@@541))))
 (=> (= (type $generated@@541) ($generated@@418 $generated@@544 $generated@@543)) (= ($generated@@0 ($generated@@92 ($generated@@467 $generated@@541) $generated@@542)) (exists (($generated@@545 T@U) ) (!  (and (= (type $generated@@545) $generated@@544) (and ($generated@@0 ($generated@@92 ($generated@@416 $generated@@541) $generated@@545)) (= $generated@@542 ($generated@@92 ($generated@@526 $generated@@541) $generated@@545))))
 :pattern ( ($generated@@92 ($generated@@416 $generated@@541) $generated@@545))
 :pattern ( ($generated@@92 ($generated@@526 $generated@@541) $generated@@545))
))))))
 :pattern ( ($generated@@92 ($generated@@467 $generated@@541) $generated@@542))
)))
(assert (forall (($generated@@546 T@U) ($generated@@547 T@U) ) (! (let (($generated@@548 (type $generated@@547)))
(let (($generated@@549 ($generated@@437 (type $generated@@546))))
 (=> (= (type $generated@@546) ($generated@@436 $generated@@549 $generated@@548)) (= ($generated@@0 ($generated@@92 ($generated@@478 $generated@@546) $generated@@547)) (exists (($generated@@550 T@U) ) (!  (and (= (type $generated@@550) $generated@@549) (and ($generated@@0 ($generated@@92 ($generated@@434 $generated@@546) $generated@@550)) (= $generated@@547 ($generated@@92 ($generated@@534 $generated@@546) $generated@@550))))
 :pattern ( ($generated@@92 ($generated@@434 $generated@@546) $generated@@550))
 :pattern ( ($generated@@92 ($generated@@534 $generated@@546) $generated@@550))
))))))
 :pattern ( ($generated@@92 ($generated@@478 $generated@@546) $generated@@547))
)))
(assert (forall (($generated@@552 T@U) ($generated@@553 T@U) ) (! (= (type ($generated@@551 $generated@@552 $generated@@553)) $generated@@75)
 :pattern ( ($generated@@551 $generated@@552 $generated@@553))
)))
(assert (forall (($generated@@554 T@U) ($generated@@555 T@U) ($generated@@556 T@U) ($generated@@557 T@U) ) (!  (=> (and (and (and (= (type $generated@@554) ($generated@@418 $generated@@180 $generated@@180)) (= (type $generated@@555) $generated@@75)) (= (type $generated@@556) $generated@@75)) (= (type $generated@@557) ($generated@@87 $generated@@88 $generated@@89))) (= ($generated@@85 $generated@@554 ($generated@@551 $generated@@555 $generated@@556) $generated@@557) (forall (($generated@@558 T@U) ) (!  (=> (and (= (type $generated@@558) $generated@@180) ($generated@@0 ($generated@@92 ($generated@@416 $generated@@554) $generated@@558))) (and ($generated@@345 ($generated@@92 ($generated@@526 $generated@@554) $generated@@558) $generated@@556 $generated@@557) ($generated@@345 $generated@@558 $generated@@555 $generated@@557)))
 :pattern ( ($generated@@92 ($generated@@526 $generated@@554) $generated@@558))
 :pattern ( ($generated@@92 ($generated@@416 $generated@@554) $generated@@558))
))))
 :pattern ( ($generated@@85 $generated@@554 ($generated@@551 $generated@@555 $generated@@556) $generated@@557))
)))
(assert (forall (($generated@@560 T@U) ($generated@@561 T@U) ) (! (= (type ($generated@@559 $generated@@560 $generated@@561)) $generated@@75)
 :pattern ( ($generated@@559 $generated@@560 $generated@@561))
)))
(assert (forall (($generated@@562 T@U) ($generated@@563 T@U) ($generated@@564 T@U) ($generated@@565 T@U) ) (!  (=> (and (and (and (= (type $generated@@562) ($generated@@436 $generated@@180 $generated@@180)) (= (type $generated@@563) $generated@@75)) (= (type $generated@@564) $generated@@75)) (= (type $generated@@565) ($generated@@87 $generated@@88 $generated@@89))) (= ($generated@@85 $generated@@562 ($generated@@559 $generated@@563 $generated@@564) $generated@@565) (forall (($generated@@566 T@U) ) (!  (=> (and (= (type $generated@@566) $generated@@180) ($generated@@0 ($generated@@92 ($generated@@434 $generated@@562) $generated@@566))) (and ($generated@@345 ($generated@@92 ($generated@@534 $generated@@562) $generated@@566) $generated@@564 $generated@@565) ($generated@@345 $generated@@566 $generated@@563 $generated@@565)))
 :pattern ( ($generated@@92 ($generated@@534 $generated@@562) $generated@@566))
 :pattern ( ($generated@@92 ($generated@@434 $generated@@562) $generated@@566))
))))
 :pattern ( ($generated@@85 $generated@@562 ($generated@@559 $generated@@563 $generated@@564) $generated@@565))
)))
(assert (forall (($generated@@567 T@U) ($generated@@568 T@U) ) (! (let (($generated@@569 ($generated@@90 (type $generated@@567))))
 (=> (and (and (= (type $generated@@567) ($generated@@87 $generated@@569 $generated@@4)) (= (type $generated@@568) ($generated@@87 $generated@@569 $generated@@4))) ($generated@@356 $generated@@567 $generated@@568)) (= $generated@@567 $generated@@568)))
 :pattern ( ($generated@@356 $generated@@567 $generated@@568))
)))
(assert (forall (($generated@@570 T@U) ($generated@@571 T@U) ($generated@@572 T@U) ) (!  (=> (and (and (and (and (= (type $generated@@570) ($generated@@87 $generated@@88 $generated@@89)) (= (type $generated@@571) ($generated@@87 $generated@@88 $generated@@89))) (= (type $generated@@572) ($generated@@87 $generated@@88 $generated@@89))) (not (= $generated@@570 $generated@@572))) (and ($generated@@143 $generated@@570 $generated@@571) ($generated@@143 $generated@@571 $generated@@572))) ($generated@@143 $generated@@570 $generated@@572))
 :pattern ( ($generated@@143 $generated@@570 $generated@@571) ($generated@@143 $generated@@571 $generated@@572))
)))
(assert (forall (($generated@@574 T@T) ) (! (= (type ($generated@@573 $generated@@574)) ($generated@@87 $generated@@574 $generated@@4))
 :pattern ( ($generated@@573 $generated@@574))
)))
(assert (forall (($generated@@575 T@U) ) (! (let (($generated@@576 ($generated@@438 (type $generated@@575))))
(let (($generated@@577 ($generated@@437 (type $generated@@575))))
 (=> (= (type $generated@@575) ($generated@@436 $generated@@577 $generated@@576)) (= (= $generated@@575 ($generated@@435 $generated@@577 $generated@@576)) (= ($generated@@434 $generated@@575) ($generated@@573 $generated@@577))))))
 :pattern ( ($generated@@434 $generated@@575))
)))
(assert (forall (($generated@@578 T@U) ) (! (let (($generated@@579 ($generated@@438 (type $generated@@578))))
(let (($generated@@580 ($generated@@437 (type $generated@@578))))
 (=> (= (type $generated@@578) ($generated@@436 $generated@@580 $generated@@579)) (= (= $generated@@578 ($generated@@435 $generated@@580 $generated@@579)) (= ($generated@@478 $generated@@578) ($generated@@573 $generated@@579))))))
 :pattern ( ($generated@@478 $generated@@578))
)))
(assert (forall (($generated@@581 T@U) ) (! (let (($generated@@582 ($generated@@438 (type $generated@@581))))
(let (($generated@@583 ($generated@@437 (type $generated@@581))))
 (=> (= (type $generated@@581) ($generated@@436 $generated@@583 $generated@@582)) (= (= $generated@@581 ($generated@@435 $generated@@583 $generated@@582)) (= ($generated@@533 $generated@@581) ($generated@@573 $generated@@180))))))
 :pattern ( ($generated@@533 $generated@@581))
)))
(assert (forall (($generated@@584 T@U) ) (! (let (($generated@@585 ($generated@@420 (type $generated@@584))))
(let (($generated@@586 ($generated@@419 (type $generated@@584))))
 (=> (= (type $generated@@584) ($generated@@418 $generated@@586 $generated@@585)) (or (= $generated@@584 ($generated@@417 $generated@@586 $generated@@585)) (exists (($generated@@587 T@U) ($generated@@588 T@U) ) (!  (and (and (= (type $generated@@587) $generated@@180) (= (type $generated@@588) $generated@@180)) ($generated@@0 ($generated@@92 ($generated@@525 $generated@@584) ($generated@@263 ($generated@@252 $generated@@587 $generated@@588)))))
 :no-pattern (type $generated@@587)
 :no-pattern (type $generated@@588)
 :no-pattern ($generated $generated@@587)
 :no-pattern ($generated@@0 $generated@@587)
 :no-pattern ($generated $generated@@588)
 :no-pattern ($generated@@0 $generated@@588)
))))))
 :pattern ( ($generated@@525 $generated@@584))
)))
(assert (forall (($generated@@589 T@U) ) (! (let (($generated@@590 ($generated@@438 (type $generated@@589))))
(let (($generated@@591 ($generated@@437 (type $generated@@589))))
 (=> (= (type $generated@@589) ($generated@@436 $generated@@591 $generated@@590)) (or (= $generated@@589 ($generated@@435 $generated@@591 $generated@@590)) (exists (($generated@@592 T@U) ($generated@@593 T@U) ) (!  (and (and (= (type $generated@@592) $generated@@180) (= (type $generated@@593) $generated@@180)) ($generated@@0 ($generated@@92 ($generated@@533 $generated@@589) ($generated@@263 ($generated@@252 $generated@@592 $generated@@593)))))
 :no-pattern (type $generated@@592)
 :no-pattern (type $generated@@593)
 :no-pattern ($generated $generated@@592)
 :no-pattern ($generated@@0 $generated@@592)
 :no-pattern ($generated $generated@@593)
 :no-pattern ($generated@@0 $generated@@593)
))))))
 :pattern ( ($generated@@533 $generated@@589))
)))
(assert (forall (($generated@@594 T@U) ) (!  (=> (and (= (type $generated@@594) $generated@@180) ($generated@@253 $generated@@594 $generated@@46)) (and (= ($generated@@263 ($generated@@374 $generated@@2 $generated@@594)) $generated@@594) ($generated@@154 ($generated@@374 $generated@@2 $generated@@594) $generated@@46)))
 :pattern ( ($generated@@253 $generated@@594 $generated@@46))
)))
(assert (forall (($generated@@595 T@U) ) (!  (=> (and (= (type $generated@@595) $generated@@180) ($generated@@253 $generated@@595 $generated@@47)) (and (= ($generated@@263 ($generated@@374 $generated@@3 $generated@@595)) $generated@@595) ($generated@@154 ($generated@@374 $generated@@3 $generated@@595) $generated@@47)))
 :pattern ( ($generated@@253 $generated@@595 $generated@@47))
)))
(assert (forall (($generated@@596 T@U) ) (!  (=> (and (= (type $generated@@596) $generated@@180) ($generated@@253 $generated@@596 $generated@@44)) (and (= ($generated@@263 ($generated@@374 $generated@@4 $generated@@596)) $generated@@596) ($generated@@154 ($generated@@374 $generated@@4 $generated@@596) $generated@@44)))
 :pattern ( ($generated@@253 $generated@@596 $generated@@44))
)))
(assert (= ($generated@@1 $generated@@597) 22))
(assert (forall (($generated@@598 T@U) ) (!  (=> (and (= (type $generated@@598) $generated@@180) ($generated@@253 $generated@@598 $generated@@45)) (and (= ($generated@@263 ($generated@@374 $generated@@597 $generated@@598)) $generated@@598) ($generated@@154 ($generated@@374 $generated@@597 $generated@@598) $generated@@45)))
 :pattern ( ($generated@@253 $generated@@598 $generated@@45))
)))
(assert (forall (($generated@@599 T@U) ($generated@@600 T@U) ) (!  (=> (= (type $generated@@600) $generated@@75) (= ($generated@@253 ($generated@@263 $generated@@599) $generated@@600) ($generated@@154 $generated@@599 $generated@@600)))
 :pattern ( ($generated@@253 ($generated@@263 $generated@@599) $generated@@600))
)))
(assert (forall (($generated@@601 T@U) ) (! (let (($generated@@602 ($generated@@90 (type $generated@@601))))
 (=> (= (type $generated@@601) ($generated@@87 $generated@@602 $generated@@2)) (<= 0 ($generated@@405 $generated@@601))))
 :pattern ( ($generated@@405 $generated@@601))
)))
(assert (forall (($generated@@603 T@U) ) (! (let (($generated@@604 ($generated@@368 (type $generated@@603))))
 (=> (= (type $generated@@603) ($generated@@367 $generated@@604)) (<= 0 ($generated@@366 $generated@@603))))
 :pattern ( ($generated@@366 $generated@@603))
)))
(assert (forall (($generated@@606 T@U) ) (! (= (type ($generated@@605 $generated@@606)) $generated@@75)
 :pattern ( ($generated@@605 $generated@@606))
)))
(assert (forall (($generated@@607 T@U) ($generated@@608 T@U) ) (!  (=> (and (= (type $generated@@607) $generated@@75) (= (type $generated@@608) $generated@@75)) (= ($generated@@605 ($generated@@551 $generated@@607 $generated@@608)) $generated@@607))
 :pattern ( ($generated@@551 $generated@@607 $generated@@608))
)))
(assert (forall (($generated@@610 T@U) ) (! (= (type ($generated@@609 $generated@@610)) $generated@@75)
 :pattern ( ($generated@@609 $generated@@610))
)))
(assert (forall (($generated@@611 T@U) ($generated@@612 T@U) ) (!  (=> (and (= (type $generated@@611) $generated@@75) (= (type $generated@@612) $generated@@75)) (= ($generated@@609 ($generated@@551 $generated@@611 $generated@@612)) $generated@@612))
 :pattern ( ($generated@@551 $generated@@611 $generated@@612))
)))
(assert (forall (($generated@@613 T@U) ($generated@@614 T@U) ) (!  (=> (and (= (type $generated@@613) $generated@@75) (= (type $generated@@614) $generated@@75)) (= ($generated@@83 ($generated@@551 $generated@@613 $generated@@614)) $generated@@58))
 :pattern ( ($generated@@551 $generated@@613 $generated@@614))
)))
(assert (forall (($generated@@616 T@U) ) (! (= (type ($generated@@615 $generated@@616)) $generated@@75)
 :pattern ( ($generated@@615 $generated@@616))
)))
(assert (forall (($generated@@617 T@U) ($generated@@618 T@U) ) (!  (=> (and (= (type $generated@@617) $generated@@75) (= (type $generated@@618) $generated@@75)) (= ($generated@@615 ($generated@@559 $generated@@617 $generated@@618)) $generated@@617))
 :pattern ( ($generated@@559 $generated@@617 $generated@@618))
)))
(assert (forall (($generated@@620 T@U) ) (! (= (type ($generated@@619 $generated@@620)) $generated@@75)
 :pattern ( ($generated@@619 $generated@@620))
)))
(assert (forall (($generated@@621 T@U) ($generated@@622 T@U) ) (!  (=> (and (= (type $generated@@621) $generated@@75) (= (type $generated@@622) $generated@@75)) (= ($generated@@619 ($generated@@559 $generated@@621 $generated@@622)) $generated@@622))
 :pattern ( ($generated@@559 $generated@@621 $generated@@622))
)))
(assert (forall (($generated@@623 T@U) ($generated@@624 T@U) ) (!  (=> (and (= (type $generated@@623) $generated@@75) (= (type $generated@@624) $generated@@75)) (= ($generated@@83 ($generated@@559 $generated@@623 $generated@@624)) $generated@@59))
 :pattern ( ($generated@@559 $generated@@623 $generated@@624))
)))
(assert (forall (($generated@@625 T@U) ($generated@@626 T@U) ) (!  (=> (and (= (type $generated@@625) $generated@@180) (= (type $generated@@626) $generated@@180)) (= ($generated@@351 ($generated@@252 $generated@@625 $generated@@626)) $generated@@65))
 :pattern ( ($generated@@252 $generated@@625 $generated@@626))
)))
(assert (forall (($generated@@628 T@U) ) (! (= (type ($generated@@627 $generated@@628)) $generated@@75)
 :pattern ( ($generated@@627 $generated@@628))
)))
(assert (forall (($generated@@629 T@U) ($generated@@630 T@U) ) (!  (=> (and (= (type $generated@@629) $generated@@75) (= (type $generated@@630) $generated@@75)) (= ($generated@@627 ($generated@@170 $generated@@629 $generated@@630)) $generated@@629))
 :pattern ( ($generated@@170 $generated@@629 $generated@@630))
)))
(assert (forall (($generated@@632 T@U) ) (! (= (type ($generated@@631 $generated@@632)) $generated@@75)
 :pattern ( ($generated@@631 $generated@@632))
)))
(assert (forall (($generated@@633 T@U) ($generated@@634 T@U) ) (!  (=> (and (= (type $generated@@633) $generated@@75) (= (type $generated@@634) $generated@@75)) (= ($generated@@631 ($generated@@170 $generated@@633 $generated@@634)) $generated@@634))
 :pattern ( ($generated@@170 $generated@@633 $generated@@634))
)))
(assert (forall (($generated@@635 T@U) ($generated@@636 T@U) ) (!  (=> (and (= (type $generated@@635) $generated@@180) (= (type $generated@@636) $generated@@180)) (= ($generated@@178 ($generated@@252 $generated@@635 $generated@@636)) $generated@@635))
 :pattern ( ($generated@@252 $generated@@635 $generated@@636))
)))
(assert (forall (($generated@@637 T@U) ($generated@@638 T@U) ) (!  (=> (and (= (type $generated@@637) $generated@@180) (= (type $generated@@638) $generated@@180)) (= ($generated@@179 ($generated@@252 $generated@@637 $generated@@638)) $generated@@638))
 :pattern ( ($generated@@252 $generated@@637 $generated@@638))
)))
(assert (forall (($generated@@639 T@U) ) (!  (=> (= (type $generated@@639) $generated@@88) ($generated@@154 $generated@@639 $generated@@147))
 :pattern ( ($generated@@154 $generated@@639 $generated@@147))
)))
(assert  (and (forall (($generated@@642 T@U) ) (! (= (type ($generated@@640 $generated@@642)) $generated@@75)
 :pattern ( ($generated@@640 $generated@@642))
)) (forall (($generated@@643 T@U) ($generated@@644 Int) ) (! (let (($generated@@645 ($generated@@368 (type $generated@@643))))
(= (type ($generated@@641 $generated@@643 $generated@@644)) $generated@@645))
 :pattern ( ($generated@@641 $generated@@643 $generated@@644))
))))
(assert (forall (($generated@@646 T@U) ($generated@@647 T@U) ($generated@@648 T@U) ) (!  (=> (and (and (= (type $generated@@646) ($generated@@367 $generated@@180)) (= (type $generated@@647) $generated@@75)) (= (type $generated@@648) ($generated@@87 $generated@@88 $generated@@89))) (= ($generated@@85 $generated@@646 ($generated@@640 $generated@@647) $generated@@648) (forall (($generated@@649 Int) ) (!  (=> (and (<= 0 $generated@@649) (< $generated@@649 ($generated@@366 $generated@@646))) ($generated@@345 ($generated@@641 $generated@@646 $generated@@649) $generated@@647 $generated@@648))
 :pattern ( ($generated@@641 $generated@@646 $generated@@649))
))))
 :pattern ( ($generated@@85 $generated@@646 ($generated@@640 $generated@@647) $generated@@648))
)))
(assert (forall (($generated@@651 Int) ) (! (= ($generated@@650 ($generated@@86 $generated@@651)) $generated@@651)
 :pattern ( ($generated@@86 $generated@@651))
)))
(assert (forall (($generated@@653 T@U) ) (! (= (type ($generated@@652 $generated@@653)) $generated@@75)
 :pattern ( ($generated@@652 $generated@@653))
)))
(assert (forall (($generated@@654 T@U) ) (!  (=> (= (type $generated@@654) $generated@@75) (= ($generated@@652 ($generated@@302 $generated@@654)) $generated@@654))
 :pattern ( ($generated@@302 $generated@@654))
)))
(assert (forall (($generated@@655 T@U) ) (!  (=> (= (type $generated@@655) $generated@@75) (= ($generated@@83 ($generated@@302 $generated@@655)) $generated@@54))
 :pattern ( ($generated@@302 $generated@@655))
)))
(assert (forall (($generated@@657 T@U) ) (! (= (type ($generated@@656 $generated@@657)) $generated@@75)
 :pattern ( ($generated@@656 $generated@@657))
)))
(assert (forall (($generated@@658 T@U) ) (!  (=> (= (type $generated@@658) $generated@@75) (= ($generated@@656 ($generated@@307 $generated@@658)) $generated@@658))
 :pattern ( ($generated@@307 $generated@@658))
)))
(assert (forall (($generated@@659 T@U) ) (!  (=> (= (type $generated@@659) $generated@@75) (= ($generated@@83 ($generated@@307 $generated@@659)) $generated@@55))
 :pattern ( ($generated@@307 $generated@@659))
)))
(assert (forall (($generated@@661 T@U) ) (! (= (type ($generated@@660 $generated@@661)) $generated@@75)
 :pattern ( ($generated@@660 $generated@@661))
)))
(assert (forall (($generated@@662 T@U) ) (!  (=> (= (type $generated@@662) $generated@@75) (= ($generated@@660 ($generated@@185 $generated@@662)) $generated@@662))
 :pattern ( ($generated@@185 $generated@@662))
)))
(assert (forall (($generated@@663 T@U) ) (!  (=> (= (type $generated@@663) $generated@@75) (= ($generated@@83 ($generated@@185 $generated@@663)) $generated@@56))
 :pattern ( ($generated@@185 $generated@@663))
)))
(assert (forall (($generated@@665 T@U) ) (! (= (type ($generated@@664 $generated@@665)) $generated@@75)
 :pattern ( ($generated@@664 $generated@@665))
)))
(assert (forall (($generated@@666 T@U) ) (!  (=> (= (type $generated@@666) $generated@@75) (= ($generated@@664 ($generated@@640 $generated@@666)) $generated@@666))
 :pattern ( ($generated@@640 $generated@@666))
)))
(assert (forall (($generated@@667 T@U) ) (!  (=> (= (type $generated@@667) $generated@@75) (= ($generated@@83 ($generated@@640 $generated@@667)) $generated@@57))
 :pattern ( ($generated@@640 $generated@@667))
)))
(assert (forall (($generated@@669 T@U) ) (! (= (type ($generated@@668 $generated@@669)) $generated@@75)
 :pattern ( ($generated@@668 $generated@@669))
)))
(assert (forall (($generated@@670 T@U) ) (!  (=> (= (type $generated@@670) $generated@@75) (= ($generated@@668 ($generated@@158 $generated@@670)) $generated@@670))
 :pattern ( ($generated@@158 $generated@@670))
)))
(assert (forall (($generated@@672 T@U) ) (! (= (type ($generated@@671 $generated@@672)) $generated@@75)
 :pattern ( ($generated@@671 $generated@@672))
)))
(assert (forall (($generated@@673 T@U) ) (!  (=> (= (type $generated@@673) $generated@@75) (= ($generated@@671 ($generated@@156 $generated@@673)) $generated@@673))
 :pattern ( ($generated@@156 $generated@@673))
)))
(assert (forall (($generated@@675 T@U) ) (! (= (type ($generated@@674 $generated@@675)) $generated@@75)
 :pattern ( ($generated@@674 $generated@@675))
)))
(assert (forall (($generated@@676 T@U) ) (!  (=> (= (type $generated@@676) $generated@@75) (= ($generated@@674 ($generated@@164 $generated@@676)) $generated@@676))
 :pattern ( ($generated@@164 $generated@@676))
)))
(assert (forall (($generated@@677 T@U) ) (! (let (($generated@@678 (type $generated@@677)))
(= ($generated@@374 $generated@@678 ($generated@@263 $generated@@677)) $generated@@677))
 :pattern ( ($generated@@263 $generated@@677))
)))
(assert (forall (($generated@@679 T@U) ($generated@@680 T@U) ($generated@@681 T@U) ) (!  (=> (and (and (= (type $generated@@679) ($generated@@418 $generated@@180 $generated@@180)) (= (type $generated@@680) $generated@@75)) (= (type $generated@@681) $generated@@75)) (= ($generated@@154 $generated@@679 ($generated@@551 $generated@@680 $generated@@681)) (forall (($generated@@682 T@U) ) (!  (=> (and (= (type $generated@@682) $generated@@180) ($generated@@0 ($generated@@92 ($generated@@416 $generated@@679) $generated@@682))) (and ($generated@@253 ($generated@@92 ($generated@@526 $generated@@679) $generated@@682) $generated@@681) ($generated@@253 $generated@@682 $generated@@680)))
 :pattern ( ($generated@@92 ($generated@@526 $generated@@679) $generated@@682))
 :pattern ( ($generated@@92 ($generated@@416 $generated@@679) $generated@@682))
))))
 :pattern ( ($generated@@154 $generated@@679 ($generated@@551 $generated@@680 $generated@@681)))
)))
(assert (forall (($generated@@683 T@U) ($generated@@684 T@U) ($generated@@685 T@U) ) (!  (=> (and (and (= (type $generated@@683) ($generated@@436 $generated@@180 $generated@@180)) (= (type $generated@@684) $generated@@75)) (= (type $generated@@685) $generated@@75)) (= ($generated@@154 $generated@@683 ($generated@@559 $generated@@684 $generated@@685)) (forall (($generated@@686 T@U) ) (!  (=> (and (= (type $generated@@686) $generated@@180) ($generated@@0 ($generated@@92 ($generated@@434 $generated@@683) $generated@@686))) (and ($generated@@253 ($generated@@92 ($generated@@534 $generated@@683) $generated@@686) $generated@@685) ($generated@@253 $generated@@686 $generated@@684)))
 :pattern ( ($generated@@92 ($generated@@534 $generated@@683) $generated@@686))
 :pattern ( ($generated@@92 ($generated@@434 $generated@@683) $generated@@686))
))))
 :pattern ( ($generated@@154 $generated@@683 ($generated@@559 $generated@@684 $generated@@685)))
)))
(assert (forall (($generated@@689 T@U) ($generated@@690 T@U) ) (!  (=> (and (= (type $generated@@689) $generated@@180) (= (type $generated@@690) $generated@@180)) (< ($generated@@687 $generated@@689) ($generated@@688 ($generated@@252 $generated@@689 $generated@@690))))
 :pattern ( ($generated@@252 $generated@@689 $generated@@690))
)))
(assert (forall (($generated@@691 T@U) ($generated@@692 T@U) ) (!  (=> (and (= (type $generated@@691) $generated@@180) (= (type $generated@@692) $generated@@180)) (< ($generated@@687 $generated@@692) ($generated@@688 ($generated@@252 $generated@@691 $generated@@692))))
 :pattern ( ($generated@@252 $generated@@691 $generated@@692))
)))
(assert (forall (($generated@@693 T@U) ($generated@@694 T@U) ) (! (let (($generated@@695 ($generated@@91 (type $generated@@693))))
 (=> (and (= (type $generated@@693) ($generated@@87 $generated@@382 $generated@@695)) (= (type $generated@@694) $generated@@382)) (= ($generated@@381 $generated@@693 ($generated@@493 $generated@@694)) ($generated@@381 $generated@@693 $generated@@694))))
 :pattern ( ($generated@@381 $generated@@693 ($generated@@493 $generated@@694)))
)))
(assert (forall (($generated@@696 T@U) ($generated@@697 T@U) ($generated@@698 T@U) ) (!  (=> (and (and (and (= (type $generated@@696) $generated@@180) (= (type $generated@@697) $generated@@75)) (= (type $generated@@698) $generated@@75)) ($generated@@253 $generated@@696 ($generated@@551 $generated@@697 $generated@@698))) (and (= ($generated@@263 ($generated@@374 ($generated@@418 $generated@@180 $generated@@180) $generated@@696)) $generated@@696) ($generated@@154 ($generated@@374 ($generated@@418 $generated@@180 $generated@@180) $generated@@696) ($generated@@551 $generated@@697 $generated@@698))))
 :pattern ( ($generated@@253 $generated@@696 ($generated@@551 $generated@@697 $generated@@698)))
)))
(assert (forall (($generated@@699 T@U) ($generated@@700 T@U) ($generated@@701 T@U) ) (!  (=> (and (and (and (= (type $generated@@699) $generated@@180) (= (type $generated@@700) $generated@@75)) (= (type $generated@@701) $generated@@75)) ($generated@@253 $generated@@699 ($generated@@559 $generated@@700 $generated@@701))) (and (= ($generated@@263 ($generated@@374 ($generated@@436 $generated@@180 $generated@@180) $generated@@699)) $generated@@699) ($generated@@154 ($generated@@374 ($generated@@436 $generated@@180 $generated@@180) $generated@@699) ($generated@@559 $generated@@700 $generated@@701))))
 :pattern ( ($generated@@253 $generated@@699 ($generated@@559 $generated@@700 $generated@@701)))
)))
(assert (forall (($generated@@702 T@U) ($generated@@703 T@U) ($generated@@704 T@U) ) (!  (=> (and (and (and (= (type $generated@@702) $generated@@75) (= (type $generated@@703) $generated@@75)) (= (type $generated@@704) $generated@@180)) ($generated@@253 $generated@@704 ($generated@@170 $generated@@702 $generated@@703))) (and (= ($generated@@263 ($generated@@374 $generated@@171 $generated@@704)) $generated@@704) ($generated@@154 ($generated@@374 $generated@@171 $generated@@704) ($generated@@170 $generated@@702 $generated@@703))))
 :pattern ( ($generated@@253 $generated@@704 ($generated@@170 $generated@@702 $generated@@703)))
)))
(assert (forall (($generated@@705 T@U) ($generated@@706 T@U) ($generated@@707 T@U) ) (!  (=> (and (and (and (= (type $generated@@705) $generated@@157) (= (type $generated@@706) $generated@@75)) (= (type $generated@@707) ($generated@@87 $generated@@88 $generated@@89))) ($generated@@261 $generated@@707)) (= ($generated@@85 $generated@@705 ($generated@@158 $generated@@706) $generated@@707)  (=> ($generated@@260 $generated@@706 $generated@@707 $generated@@705) (forall (($generated@@708 T@U) ) (!  (=> (= (type $generated@@708) $generated@@88) (=> (and (not (= $generated@@708 $generated@@148)) ($generated@@0 ($generated@@92 ($generated@@262 $generated@@706 $generated@@707 $generated@@705) ($generated@@263 $generated@@708)))) ($generated@@0 ($generated@@94 ($generated@@92 $generated@@707 $generated@@708) $generated@@60))))
 :pattern ( ($generated@@92 ($generated@@262 $generated@@706 $generated@@707 $generated@@705) ($generated@@263 $generated@@708)))
)))))
 :pattern ( ($generated@@85 $generated@@705 ($generated@@158 $generated@@706) $generated@@707))
)))
(assert (forall (($generated@@709 T@U) ) (! (let (($generated@@710 (type $generated@@709)))
 (not ($generated@@0 ($generated@@92 ($generated@@357 $generated@@710) $generated@@709))))
 :pattern ( (let (($generated@@710 (type $generated@@709)))
($generated@@92 ($generated@@357 $generated@@710) $generated@@709)))
)))
(assert (forall (($generated@@711 T@U) ) (! (let (($generated@@712 (type $generated@@711)))
 (not ($generated@@0 ($generated@@92 ($generated@@573 $generated@@712) $generated@@711))))
 :pattern ( (let (($generated@@712 (type $generated@@711)))
($generated@@92 ($generated@@573 $generated@@712) $generated@@711)))
)))
(assert (forall (($generated@@713 T@U) ($generated@@714 T@U) ) (!  (=> (and (= (type $generated@@713) $generated@@75) (= (type $generated@@714) $generated@@157)) (= ($generated@@154 $generated@@714 ($generated@@164 $generated@@713))  (and ($generated@@154 $generated@@714 ($generated@@156 $generated@@713)) ($generated@@260 $generated@@713 $generated@@355 $generated@@714))))
 :pattern ( ($generated@@154 $generated@@714 ($generated@@164 $generated@@713)))
)))
(assert (forall (($generated@@715 T@U) ($generated@@716 T@U) ) (!  (=> (and (= (type $generated@@715) $generated@@75) (= (type $generated@@716) $generated@@75)) (and (= ($generated@@83 ($generated@@170 $generated@@715 $generated@@716)) $generated@@66) (= ($generated@@411 ($generated@@170 $generated@@715 $generated@@716)) $generated@@73)))
 :pattern ( ($generated@@170 $generated@@715 $generated@@716))
)))
(assert (forall (($generated@@717 T@U) ) (!  (=> (= (type $generated@@717) $generated@@171) (= ($generated@@687 ($generated@@263 $generated@@717)) ($generated@@688 $generated@@717)))
 :pattern ( ($generated@@687 ($generated@@263 $generated@@717)))
)))
(assert (forall (($generated@@718 T@U) ($generated@@719 T@U) ) (!  (=> (and (= (type $generated@@718) $generated@@157) (= (type $generated@@719) $generated@@75)) (= ($generated@@154 $generated@@718 ($generated@@158 $generated@@719)) (forall (($generated@@720 T@U) ) (!  (=> (= (type $generated@@720) ($generated@@87 $generated@@88 $generated@@89)) (=> (and ($generated@@261 $generated@@720) ($generated@@260 $generated@@719 $generated@@720 $generated@@718)) ($generated@@253 ($generated@@282 $generated@@719 $generated@@720 $generated@@718) $generated@@719)))
 :pattern ( ($generated@@282 $generated@@719 $generated@@720 $generated@@718))
))))
 :pattern ( ($generated@@154 $generated@@718 ($generated@@158 $generated@@719)))
)))
(assert (forall (($generated@@721 T@U) ) (!  (=> (and (= (type $generated@@721) $generated@@180) ($generated@@253 $generated@@721 ($generated@@86 0))) (and (= ($generated@@263 ($generated@@374 $generated@@2 $generated@@721)) $generated@@721) ($generated@@154 ($generated@@374 ($generated@@87 $generated@@180 $generated@@4) $generated@@721) ($generated@@86 0))))
 :pattern ( ($generated@@253 $generated@@721 ($generated@@86 0)))
)))
(assert (forall (($generated@@722 T@U) ($generated@@723 T@U) ) (!  (=> (and (and (= (type $generated@@722) $generated@@180) (= (type $generated@@723) $generated@@75)) ($generated@@253 $generated@@722 ($generated@@302 $generated@@723))) (and (= ($generated@@263 ($generated@@374 ($generated@@87 $generated@@180 $generated@@4) $generated@@722)) $generated@@722) ($generated@@154 ($generated@@374 ($generated@@87 $generated@@180 $generated@@4) $generated@@722) ($generated@@302 $generated@@723))))
 :pattern ( ($generated@@253 $generated@@722 ($generated@@302 $generated@@723)))
)))
(assert (forall (($generated@@724 T@U) ($generated@@725 T@U) ) (!  (=> (and (and (= (type $generated@@724) $generated@@180) (= (type $generated@@725) $generated@@75)) ($generated@@253 $generated@@724 ($generated@@307 $generated@@725))) (and (= ($generated@@263 ($generated@@374 ($generated@@87 $generated@@180 $generated@@4) $generated@@724)) $generated@@724) ($generated@@154 ($generated@@374 ($generated@@87 $generated@@180 $generated@@4) $generated@@724) ($generated@@307 $generated@@725))))
 :pattern ( ($generated@@253 $generated@@724 ($generated@@307 $generated@@725)))
)))
(assert (forall (($generated@@726 T@U) ($generated@@727 T@U) ) (!  (=> (and (and (= (type $generated@@726) $generated@@180) (= (type $generated@@727) $generated@@75)) ($generated@@253 $generated@@726 ($generated@@185 $generated@@727))) (and (= ($generated@@263 ($generated@@374 ($generated@@87 $generated@@180 $generated@@2) $generated@@726)) $generated@@726) ($generated@@154 ($generated@@374 ($generated@@87 $generated@@180 $generated@@2) $generated@@726) ($generated@@185 $generated@@727))))
 :pattern ( ($generated@@253 $generated@@726 ($generated@@185 $generated@@727)))
)))
(assert (forall (($generated@@728 T@U) ($generated@@729 T@U) ) (!  (=> (and (and (= (type $generated@@728) $generated@@180) (= (type $generated@@729) $generated@@75)) ($generated@@253 $generated@@728 ($generated@@640 $generated@@729))) (and (= ($generated@@263 ($generated@@374 ($generated@@367 $generated@@180) $generated@@728)) $generated@@728) ($generated@@154 ($generated@@374 ($generated@@367 $generated@@180) $generated@@728) ($generated@@640 $generated@@729))))
 :pattern ( ($generated@@253 $generated@@728 ($generated@@640 $generated@@729)))
)))
(assert (forall (($generated@@730 T@U) ($generated@@731 T@U) ) (!  (=> (and (and (= (type $generated@@730) $generated@@75) (= (type $generated@@731) $generated@@180)) ($generated@@253 $generated@@731 ($generated@@158 $generated@@730))) (and (= ($generated@@263 ($generated@@374 $generated@@157 $generated@@731)) $generated@@731) ($generated@@154 ($generated@@374 $generated@@157 $generated@@731) ($generated@@158 $generated@@730))))
 :pattern ( ($generated@@253 $generated@@731 ($generated@@158 $generated@@730)))
)))
(assert (forall (($generated@@732 T@U) ($generated@@733 T@U) ) (!  (=> (and (and (= (type $generated@@732) $generated@@75) (= (type $generated@@733) $generated@@180)) ($generated@@253 $generated@@733 ($generated@@156 $generated@@732))) (and (= ($generated@@263 ($generated@@374 $generated@@157 $generated@@733)) $generated@@733) ($generated@@154 ($generated@@374 $generated@@157 $generated@@733) ($generated@@156 $generated@@732))))
 :pattern ( ($generated@@253 $generated@@733 ($generated@@156 $generated@@732)))
)))
(assert (forall (($generated@@734 T@U) ($generated@@735 T@U) ) (!  (=> (and (and (= (type $generated@@734) $generated@@75) (= (type $generated@@735) $generated@@180)) ($generated@@253 $generated@@735 ($generated@@164 $generated@@734))) (and (= ($generated@@263 ($generated@@374 $generated@@157 $generated@@735)) $generated@@735) ($generated@@154 ($generated@@374 $generated@@157 $generated@@735) ($generated@@164 $generated@@734))))
 :pattern ( ($generated@@253 $generated@@735 ($generated@@164 $generated@@734)))
)))
(assert (= ($generated@@83 $generated@@147) $generated@@61))
(assert (= ($generated@@411 $generated@@147) $generated@@69))
(assert (= ($generated@@83 $generated@@151) $generated@@67))
(assert (= ($generated@@411 $generated@@151) $generated@@74))
(assert (= ($generated@@83 $generated@@249) $generated@@68))
(assert (= ($generated@@411 $generated@@249) $generated@@74))
(assert (forall (($generated@@736 T@U) ($generated@@737 T@U) ($generated@@738 T@U) ) (!  (=> (and (and (= (type $generated@@736) ($generated@@87 $generated@@180 $generated@@2)) (= (type $generated@@737) $generated@@75)) (= (type $generated@@738) ($generated@@87 $generated@@88 $generated@@89))) (= ($generated@@85 $generated@@736 ($generated@@185 $generated@@737) $generated@@738) (forall (($generated@@739 T@U) ) (!  (=> (and (= (type $generated@@739) $generated@@180) (< 0 ($generated ($generated@@92 $generated@@736 $generated@@739)))) ($generated@@345 $generated@@739 $generated@@737 $generated@@738))
 :pattern ( ($generated@@92 $generated@@736 $generated@@739))
))))
 :pattern ( ($generated@@85 $generated@@736 ($generated@@185 $generated@@737) $generated@@738))
)))
(assert (forall (($generated@@740 T@U) ($generated@@741 T@U) ($generated@@742 T@U) ($generated@@743 T@U) ($generated@@744 T@U) ($generated@@745 T@U) ) (!  (=> (and (and (and (and (and (= (type $generated@@740) $generated@@75) (= (type $generated@@741) ($generated@@87 $generated@@88 $generated@@89))) (= (type $generated@@742) ($generated@@87 ($generated@@87 $generated@@88 $generated@@89) $generated@@180))) (= (type $generated@@743) ($generated@@87 ($generated@@87 $generated@@88 $generated@@89) $generated@@4))) (= (type $generated@@744) ($generated@@87 ($generated@@87 $generated@@88 $generated@@89) ($generated@@87 $generated@@180 $generated@@4)))) (= (type $generated@@745) $generated@@180)) (= ($generated@@0 ($generated@@92 ($generated@@262 $generated@@740 $generated@@741 ($generated@@283 $generated@@742 $generated@@743 $generated@@744)) $generated@@745)) ($generated@@0 ($generated@@92 ($generated@@92 $generated@@744 $generated@@741) $generated@@745))))
 :pattern ( ($generated@@92 ($generated@@262 $generated@@740 $generated@@741 ($generated@@283 $generated@@742 $generated@@743 $generated@@744)) $generated@@745))
)))
(assert (forall (($generated@@746 T@U) ) (!  (=> (= (type $generated@@746) ($generated@@87 $generated@@88 $generated@@4)) ($generated@@154 ($generated@@373 $generated@@746) ($generated@@302 $generated@@147)))
 :pattern ( ($generated@@373 $generated@@746))
)))
(assert (forall (($generated@@747 T@U) ($generated@@748 T@U) ($generated@@749 T@U) ) (!  (=> (and (and (and (and (= (type $generated@@747) $generated@@157) (= (type $generated@@748) $generated@@75)) (= (type $generated@@749) ($generated@@87 $generated@@88 $generated@@89))) (and ($generated@@261 $generated@@749) ($generated@@85 $generated@@747 ($generated@@158 $generated@@748) $generated@@749))) ($generated@@260 $generated@@748 $generated@@749 $generated@@747)) ($generated@@345 ($generated@@282 $generated@@748 $generated@@749 $generated@@747) $generated@@748 $generated@@749))
 :pattern ( ($generated@@85 $generated@@747 ($generated@@158 $generated@@748) $generated@@749))
)))
(assert (forall (($generated@@750 T@U) ($generated@@751 T@U) ($generated@@752 T@U) ) (!  (=> (and (and (and (= (type $generated@@750) $generated@@171) (= (type $generated@@751) $generated@@75)) (= (type $generated@@752) ($generated@@87 $generated@@88 $generated@@89))) (and ($generated@@261 $generated@@752) (and ($generated@@169 $generated@@750) (exists (($generated@@753 T@U) ) (!  (and (= (type $generated@@753) $generated@@75) ($generated@@85 $generated@@750 ($generated@@170 $generated@@751 $generated@@753) $generated@@752))
 :pattern ( ($generated@@85 $generated@@750 ($generated@@170 $generated@@751 $generated@@753) $generated@@752))
))))) ($generated@@345 ($generated@@178 $generated@@750) $generated@@751 $generated@@752))
 :pattern ( ($generated@@345 ($generated@@178 $generated@@750) $generated@@751 $generated@@752))
)))
(assert (forall (($generated@@754 T@U) ($generated@@755 T@U) ($generated@@756 T@U) ) (!  (=> (and (and (and (= (type $generated@@754) $generated@@171) (= (type $generated@@755) $generated@@75)) (= (type $generated@@756) ($generated@@87 $generated@@88 $generated@@89))) (and ($generated@@261 $generated@@756) (and ($generated@@169 $generated@@754) (exists (($generated@@757 T@U) ) (!  (and (= (type $generated@@757) $generated@@75) ($generated@@85 $generated@@754 ($generated@@170 $generated@@757 $generated@@755) $generated@@756))
 :pattern ( ($generated@@85 $generated@@754 ($generated@@170 $generated@@757 $generated@@755) $generated@@756))
))))) ($generated@@345 ($generated@@179 $generated@@754) $generated@@755 $generated@@756))
 :pattern ( ($generated@@345 ($generated@@179 $generated@@754) $generated@@755 $generated@@756))
)))
(assert (forall (($generated@@758 T@U) ($generated@@759 T@U) ($generated@@760 T@U) ) (!  (=> (and (and (and (= (type $generated@@758) $generated@@157) (= (type $generated@@759) $generated@@75)) (= (type $generated@@760) $generated@@75)) (and ($generated@@154 $generated@@758 ($generated@@158 $generated@@759)) (forall (($generated@@761 T@U) ) (!  (=> (and (= (type $generated@@761) $generated@@180) ($generated@@253 $generated@@761 $generated@@759)) ($generated@@253 $generated@@761 $generated@@760))
 :pattern ( ($generated@@253 $generated@@761 $generated@@759))
 :pattern ( ($generated@@253 $generated@@761 $generated@@760))
)))) ($generated@@154 $generated@@758 ($generated@@158 $generated@@760)))
 :pattern ( ($generated@@154 $generated@@758 ($generated@@158 $generated@@759)) ($generated@@154 $generated@@758 ($generated@@158 $generated@@760)))
)))
(assert (forall (($generated@@762 T@U) ($generated@@763 T@U) ) (!  (=> (and (= (type $generated@@762) $generated@@180) (= (type $generated@@763) $generated@@180)) (= ($generated@@252 ($generated@@313 $generated@@762) ($generated@@313 $generated@@763)) ($generated@@313 ($generated@@252 $generated@@762 $generated@@763))))
 :pattern ( ($generated@@252 ($generated@@313 $generated@@762) ($generated@@313 $generated@@763)))
)))
(assert (forall (($generated@@764 Int) ) (! (= ($generated@@263 ($generated@@8 ($generated@@298 $generated@@764))) ($generated@@313 ($generated@@263 ($generated@@8 $generated@@764))))
 :pattern ( ($generated@@263 ($generated@@8 ($generated@@298 $generated@@764))))
)))
(assert (forall (($generated@@765 T@U) ) (! (= ($generated@@263 ($generated@@313 $generated@@765)) ($generated@@313 ($generated@@263 $generated@@765)))
 :pattern ( ($generated@@263 ($generated@@313 $generated@@765)))
)))
(assert (forall (($generated@@766 T@U) ) (! (let (($generated@@767 ($generated@@368 (type $generated@@766))))
 (=> (and (= (type $generated@@766) ($generated@@367 $generated@@767)) (= ($generated@@366 $generated@@766) 0)) (= $generated@@766 ($generated@@365 $generated@@767))))
 :pattern ( ($generated@@366 $generated@@766))
)))
(assert (forall (($generated@@768 T@U) ($generated@@769 T@U) ($generated@@770 T@U) ($generated@@771 T@U) ($generated@@772 T@U) ) (!  (=> (and (and (and (and (and (= (type $generated@@768) $generated@@75) (= (type $generated@@769) ($generated@@87 $generated@@88 $generated@@89))) (= (type $generated@@770) ($generated@@87 ($generated@@87 $generated@@88 $generated@@89) $generated@@180))) (= (type $generated@@771) ($generated@@87 ($generated@@87 $generated@@88 $generated@@89) $generated@@4))) (= (type $generated@@772) ($generated@@87 ($generated@@87 $generated@@88 $generated@@89) ($generated@@87 $generated@@180 $generated@@4)))) ($generated@@0 ($generated@@92 $generated@@771 $generated@@769))) ($generated@@260 $generated@@768 $generated@@769 ($generated@@283 $generated@@770 $generated@@771 $generated@@772)))
 :pattern ( ($generated@@260 $generated@@768 $generated@@769 ($generated@@283 $generated@@770 $generated@@771 $generated@@772)))
)))
(assert (forall (($generated@@773 T@U) ($generated@@774 T@U) ($generated@@775 T@U) ) (! (let (($generated@@776 (type $generated@@774)))
 (=> (and (and (= (type $generated@@773) ($generated@@87 $generated@@776 $generated@@2)) (= (type $generated@@775) $generated@@2)) (<= 0 ($generated $generated@@775))) (= ($generated@@405 ($generated@@93 $generated@@773 $generated@@774 $generated@@775)) (+ (- ($generated@@405 $generated@@773) ($generated ($generated@@92 $generated@@773 $generated@@774))) ($generated $generated@@775)))))
 :pattern ( ($generated@@405 ($generated@@93 $generated@@773 $generated@@774 $generated@@775)))
)))
(assert (forall (($generated@@777 T@U) ($generated@@778 T@U) ) (!  (=> (and (= (type $generated@@777) ($generated@@87 $generated@@88 $generated@@89)) (= (type $generated@@778) $generated@@2)) ($generated@@85 $generated@@778 $generated@@46 $generated@@777))
 :pattern ( ($generated@@85 $generated@@778 $generated@@46 $generated@@777))
)))
(assert (forall (($generated@@779 T@U) ($generated@@780 T@U) ) (!  (=> (and (= (type $generated@@779) ($generated@@87 $generated@@88 $generated@@89)) (= (type $generated@@780) $generated@@3)) ($generated@@85 $generated@@780 $generated@@47 $generated@@779))
 :pattern ( ($generated@@85 $generated@@780 $generated@@47 $generated@@779))
)))
(assert (forall (($generated@@781 T@U) ($generated@@782 T@U) ) (!  (=> (and (= (type $generated@@781) ($generated@@87 $generated@@88 $generated@@89)) (= (type $generated@@782) $generated@@4)) ($generated@@85 $generated@@782 $generated@@44 $generated@@781))
 :pattern ( ($generated@@85 $generated@@782 $generated@@44 $generated@@781))
)))
(assert (forall (($generated@@783 T@U) ($generated@@784 T@U) ) (!  (=> (and (= (type $generated@@783) ($generated@@87 $generated@@88 $generated@@89)) (= (type $generated@@784) $generated@@597)) ($generated@@85 $generated@@784 $generated@@45 $generated@@783))
 :pattern ( ($generated@@85 $generated@@784 $generated@@45 $generated@@783))
)))
(assert (forall (($generated@@785 T@U) ($generated@@786 T@U) ) (!  (=> (and (= (type $generated@@785) ($generated@@87 $generated@@88 $generated@@89)) (= (type $generated@@786) $generated@@180)) ($generated@@85 $generated@@786 $generated@@48 $generated@@785))
 :pattern ( ($generated@@85 $generated@@786 $generated@@48 $generated@@785))
)))
(assert (forall (($generated@@787 T@U) ($generated@@788 T@U) ) (!  (=> (and (= (type $generated@@787) ($generated@@367 $generated@@180)) (= (type $generated@@788) $generated@@75)) (= ($generated@@154 $generated@@787 ($generated@@640 $generated@@788)) (forall (($generated@@789 Int) ) (!  (=> (and (<= 0 $generated@@789) (< $generated@@789 ($generated@@366 $generated@@787))) ($generated@@253 ($generated@@641 $generated@@787 $generated@@789) $generated@@788))
 :pattern ( ($generated@@641 $generated@@787 $generated@@789))
))))
 :pattern ( ($generated@@154 $generated@@787 ($generated@@640 $generated@@788)))
)))
(assert (forall (($generated@@790 T@U) ($generated@@791 T@U) ) (!  (=> (and (= (type $generated@@790) $generated@@75) (= (type $generated@@791) $generated@@157)) (= ($generated@@154 $generated@@791 ($generated@@156 $generated@@790))  (and ($generated@@154 $generated@@791 ($generated@@158 $generated@@790)) ($generated@@356 ($generated@@262 $generated@@790 $generated@@355 $generated@@791) ($generated@@357 $generated@@180)))))
 :pattern ( ($generated@@154 $generated@@791 ($generated@@156 $generated@@790)))
)))
(assert (forall (($generated@@793 T@U) ($generated@@794 Int) ) (!  (=> (= (type $generated@@793) ($generated@@367 $generated@@180)) (=> (and (<= 0 $generated@@794) (< $generated@@794 ($generated@@366 $generated@@793))) (< ($generated@@688 ($generated@@374 $generated@@171 ($generated@@641 $generated@@793 $generated@@794))) ($generated@@792 $generated@@793))))
 :pattern ( ($generated@@688 ($generated@@374 $generated@@171 ($generated@@641 $generated@@793 $generated@@794))))
)))
(assert (forall (($generated@@795 T@U) ($generated@@796 T@U) ($generated@@797 T@U) ) (!  (=> (and (and (and (= (type $generated@@795) ($generated@@418 $generated@@180 $generated@@180)) (= (type $generated@@796) $generated@@75)) (= (type $generated@@797) $generated@@75)) ($generated@@154 $generated@@795 ($generated@@551 $generated@@796 $generated@@797))) (and (and ($generated@@154 ($generated@@416 $generated@@795) ($generated@@302 $generated@@796)) ($generated@@154 ($generated@@467 $generated@@795) ($generated@@302 $generated@@797))) ($generated@@154 ($generated@@525 $generated@@795) ($generated@@302 ($generated@@170 $generated@@796 $generated@@797)))))
 :pattern ( ($generated@@154 $generated@@795 ($generated@@551 $generated@@796 $generated@@797)))
)))
(assert (forall (($generated@@798 T@U) ($generated@@799 T@U) ($generated@@800 T@U) ) (!  (=> (and (and (and (= (type $generated@@798) ($generated@@436 $generated@@180 $generated@@180)) (= (type $generated@@799) $generated@@75)) (= (type $generated@@800) $generated@@75)) ($generated@@154 $generated@@798 ($generated@@559 $generated@@799 $generated@@800))) (and (and ($generated@@154 ($generated@@434 $generated@@798) ($generated@@307 $generated@@799)) ($generated@@154 ($generated@@478 $generated@@798) ($generated@@307 $generated@@800))) ($generated@@154 ($generated@@533 $generated@@798) ($generated@@307 ($generated@@170 $generated@@799 $generated@@800)))))
 :pattern ( ($generated@@154 $generated@@798 ($generated@@559 $generated@@799 $generated@@800)))
)))
(assert (forall (($generated@@801 T@U) ) (!  (=> (= (type $generated@@801) $generated@@2) ($generated@@154 $generated@@801 $generated@@46))
 :pattern ( ($generated@@154 $generated@@801 $generated@@46))
)))
(assert (forall (($generated@@802 T@U) ) (!  (=> (= (type $generated@@802) $generated@@3) ($generated@@154 $generated@@802 $generated@@47))
 :pattern ( ($generated@@154 $generated@@802 $generated@@47))
)))
(assert (forall (($generated@@803 T@U) ) (!  (=> (= (type $generated@@803) $generated@@4) ($generated@@154 $generated@@803 $generated@@44))
 :pattern ( ($generated@@154 $generated@@803 $generated@@44))
)))
(assert (forall (($generated@@804 T@U) ) (!  (=> (= (type $generated@@804) $generated@@597) ($generated@@154 $generated@@804 $generated@@45))
 :pattern ( ($generated@@154 $generated@@804 $generated@@45))
)))
(assert (forall (($generated@@805 T@U) ) (!  (=> (= (type $generated@@805) $generated@@180) ($generated@@154 $generated@@805 $generated@@48))
 :pattern ( ($generated@@154 $generated@@805 $generated@@48))
)))
(push 1)
(declare-fun ControlFlow (Int Int) Int)
(declare-fun $generated@@806 () Int)
(declare-fun $generated@@807 () T@U)
(declare-fun $generated@@808 () T@U)
(declare-fun $generated@@809 () Int)
(declare-fun $generated@@810 () Int)
(declare-fun $generated@@811 () T@U)
(declare-fun $generated@@812 (T@U) Bool)
(declare-fun $generated@@813 (T@U) T@U)
(declare-fun $generated@@814 () T@U)
(declare-fun $generated@@815 () T@U)
(declare-fun $generated@@816 () T@U)
(declare-fun $generated@@817 () T@U)
(declare-fun $generated@@818 () Int)
(declare-fun $generated@@819 () T@U)
(assert  (and (and (and (and (and (and (and (and (= (type $generated@@807) $generated@@88) (= (type $generated@@808) ($generated@@87 $generated@@88 $generated@@89))) (= (type $generated@@811) ($generated@@87 $generated@@88 $generated@@89))) (forall (($generated@@820 T@U) ) (! (= (type ($generated@@813 $generated@@820)) $generated@@382)
 :pattern ( ($generated@@813 $generated@@820))
))) (= (type $generated@@814) $generated@@382)) (= (type $generated@@815) $generated@@382)) (= (type $generated@@816) ($generated@@195 $generated@@88 $generated@@4))) (= (type $generated@@817) $generated@@157)) (= (type $generated@@819) $generated@@157)))
(set-option :timeout 0)
(set-option :rlimit 0)
(assert (not
 (=> (= (ControlFlow 0 0) 8) (let (($generated@@821 true))
(let (($generated@@822  (=> (and (< 0 $generated@@806) ($generated@@85 $generated@@807 $generated@@151 $generated@@808)) (=> (and (and ($generated@@297 $generated@@807) ($generated@@297 $generated@@807)) (and (= $generated@@809 ($generated@@296 $generated@@807)) (= $generated@@810 (- $generated@@806 1)))) (and (=> (= (ControlFlow 0 2) (- 0 4)) (or (<= 0 $generated@@806) (= $generated@@810 $generated@@806))) (=> (or (<= 0 $generated@@806) (= $generated@@810 $generated@@806)) (and (=> (= (ControlFlow 0 2) (- 0 3)) (< $generated@@810 $generated@@806)) (=> (< $generated@@810 $generated@@806) (=> (and (and (and ($generated@@261 $generated@@811) ($generated@@812 $generated@@811)) (forall (($generated@@823 T@U) ) (!  (=> (= (type $generated@@823) $generated@@88) (=> (and (not (= $generated@@823 $generated@@148)) ($generated@@0 ($generated@@94 ($generated@@92 $generated@@808 $generated@@823) $generated@@60))) (= ($generated@@92 $generated@@811 $generated@@823) ($generated@@92 $generated@@808 $generated@@823))))
 :pattern ( ($generated@@92 $generated@@811 $generated@@823))
))) (and ($generated@@143 $generated@@808 $generated@@811) (= (ControlFlow 0 2) (- 0 1)))) (= $generated@@809 ($generated@@298 80)))))))))))
(let (($generated@@824  (=> (= ($generated@@813 $generated@@814) $generated@@814) (=> (and (and (= ($generated@@813 $generated@@815) $generated@@815) (= $generated@@816 ($generated@@194 $generated@@148 $generated@@808 $generated@@60 false))) (and (= $generated@@817 ($generated@@389 $generated@@807)) (= $generated@@818 ($generated ($generated@@374 $generated@@2 ($generated@@282 $generated@@46 $generated@@808 ($generated@@389 $generated@@807))))))) (and (=> (= (ControlFlow 0 6) (- 0 7)) (= $generated@@818 ($generated@@298 92))) (=> (= $generated@@818 ($generated@@298 92)) (and (=> (= (ControlFlow 0 6) 2) $generated@@822) (=> (= (ControlFlow 0 6) 5) $generated@@821))))))))
(let (($generated@@825  (=> (and (and ($generated@@261 $generated@@808) ($generated@@812 $generated@@808)) (and (not (= $generated@@807 $generated@@148)) (and ($generated@@154 $generated@@807 $generated@@249) ($generated@@85 $generated@@807 $generated@@249 $generated@@808)))) (=> (and (and (and ($generated@@154 $generated@@819 ($generated@@164 $generated@@46)) ($generated@@85 $generated@@819 ($generated@@164 $generated@@46) $generated@@808)) true) (and (= 1 $generated@@295) (= (ControlFlow 0 8) 6))) $generated@@824))))
$generated@@825)))))
))
(check-sat)
(pop 1)
; Valid
(get-info :rlimit)
(reset)
(set-option :rlimit 0)
; did a full reset
(reset)
(set-option :print-success false)
(set-info :smt-lib-version 2.6)
(set-option :auto_config false)
(set-option :type_check true)
(set-option :smt.case_split 3)
(set-option :smt.qi.eager_threshold 100)
(set-option :smt.delay_units true)
(set-option :smt.arith.solver 2)
(set-option :smt.mbqi false)
(set-option :model.compact false)
(set-option :model.v2 true)
(set-option :pp.bv_literals false)
; done setting options


(set-info :category "industrial")
(declare-sort |T@U| 0)
(declare-sort |T@T| 0)
(declare-fun real_pow (Real Real) Real)
(declare-fun UOrdering2 (|T@U| |T@U|) Bool)
(declare-fun UOrdering3 (|T@T| |T@U| |T@U|) Bool)
(declare-fun tickleBool (Bool) Bool)
(assert (and (tickleBool true) (tickleBool false)))
(declare-fun $generated (T@U) Int)
(declare-fun $generated@@0 (T@U) Bool)
(declare-fun $generated@@1 (T@T) Int)
(declare-fun $generated@@2 () T@T)
(declare-fun $generated@@3 () T@T)
(declare-fun $generated@@4 () T@T)
(declare-fun $generated@@5 () T@T)
(declare-fun $generated@@6 () T@T)
(declare-fun $generated@@7 () T@T)
(declare-fun $generated@@8 (Int) T@U)
(declare-fun type (T@U) T@T)
(declare-fun $generated@@9 (Real) T@U)
(declare-fun $generated@@10 (T@U) Real)
(declare-fun $generated@@11 (Bool) T@U)
(declare-fun $generated@@12 (RoundingMode) T@U)
(declare-fun $generated@@13 (T@U) RoundingMode)
(declare-fun $generated@@14 (String) T@U)
(declare-fun $generated@@15 (T@U) String)
(declare-fun $generated@@16 ((RegEx String)) T@U)
(declare-fun $generated@@17 (T@U) (RegEx String))
(declare-fun $generated@@44 () T@U)
(declare-fun $generated@@45 () T@U)
(declare-fun $generated@@46 () T@U)
(declare-fun $generated@@47 () T@U)
(declare-fun $generated@@48 () T@U)
(declare-fun $generated@@49 () T@U)
(declare-fun $generated@@50 () T@U)
(declare-fun $generated@@51 () T@U)
(declare-fun $generated@@52 () T@U)
(declare-fun $generated@@53 () T@U)
(declare-fun $generated@@54 () T@U)
(declare-fun $generated@@55 () T@U)
(declare-fun $generated@@56 () T@U)
(declare-fun $generated@@57 () T@U)
(declare-fun $generated@@58 () T@U)
(declare-fun $generated@@59 () T@U)
(declare-fun $generated@@60 () T@U)
(declare-fun $generated@@61 () T@U)
(declare-fun $generated@@62 () T@U)
(declare-fun $generated@@63 () T@U)
(declare-fun $generated@@64 () T@U)
(declare-fun $generated@@65 () T@U)
(declare-fun $generated@@66 () T@U)
(declare-fun $generated@@67 () T@T)
(declare-fun $generated@@68 () T@T)
(declare-fun $generated@@69 (T@T) T@T)
(declare-fun $generated@@70 (T@T) T@T)
(declare-fun $generated@@71 () T@T)
(declare-fun $generated@@72 () T@T)
(declare-fun $generated@@75 (T@U) T@U)
(declare-fun $generated@@77 (T@U T@U T@U) Bool)
(declare-fun $generated@@78 (Int) T@U)
(declare-fun $generated@@79 (T@T T@T) T@T)
(declare-fun $generated@@80 () T@T)
(declare-fun $generated@@81 () T@T)
(declare-fun $generated@@82 (T@T) T@T)
(declare-fun $generated@@83 (T@T) T@T)
(declare-fun $generated@@84 (T@U T@U) T@U)
(declare-fun $generated@@85 (T@U T@U T@U) T@U)
(declare-fun $generated@@86 (T@U T@U) T@U)
(declare-fun $generated@@87 (T@U T@U T@U) T@U)
(declare-fun $generated@@135 (T@U T@U) Bool)
(declare-fun $generated@@139 () T@U)
(declare-fun $generated@@140 () T@U)
(declare-fun $generated@@143 (T@U T@U) Bool)
(declare-fun $generated@@145 (T@U) Bool)
(declare-fun $generated@@146 (T@U T@U) T@U)
(declare-fun $generated@@147 () T@T)
(declare-fun $generated@@153 (T@U T@U) Bool)
(declare-fun $generated@@154 (T@U) T@U)
(declare-fun $generated@@155 (T@U) T@U)
(declare-fun $generated@@156 () T@T)
(declare-fun $generated@@161 (T@U) T@U)
(declare-fun $generated@@162 (T@U) Bool)
(declare-fun $generated@@166 (T@U) T@U)
(declare-fun $generated@@169 (T@U T@U T@U) T@U)
(declare-fun $generated@@170 (T@U T@U T@U Bool) T@U)
(declare-fun $generated@@171 (T@T T@T) T@T)
(declare-fun $generated@@172 (T@T) T@T)
(declare-fun $generated@@173 (T@T) T@T)
(declare-fun $generated@@174 (T@U T@U T@U T@U) T@U)
(declare-fun $generated@@225 () T@U)
(declare-fun $generated@@228 (T@U T@U) T@U)
(declare-fun $generated@@229 (T@U T@U) Bool)
(declare-fun $generated@@238 (T@U) T@U)
(declare-fun $generated@@243 (T@U) T@U)
(declare-fun $generated@@248 (T@U) T@U)
(declare-fun $generated@@252 (T@U) Bool)
(declare-fun $generated@@253 (T@U T@U T@U) Bool)
(declare-fun $generated@@259 (T@U) T@U)
(declare-fun $generated@@265 (T@T) T@U)
(declare-fun $generated@@266 (T@U) Int)
(declare-fun $generated@@267 (T@T) T@T)
(declare-fun $generated@@268 (T@T) T@T)
(declare-fun $generated@@273 () Int)
(declare-fun $generated@@274 () Bool)
(declare-fun $generated@@276 (T@U) T@U)
(declare-fun $generated@@289 (T@U) Int)
(declare-fun $generated@@290 (T@T) T@U)
(declare-fun $generated@@295 (T@U) T@U)
(declare-fun $generated@@296 (T@T T@T) T@U)
(declare-fun $generated@@297 (T@T T@T) T@T)
(declare-fun $generated@@298 (T@T) T@T)
(declare-fun $generated@@299 (T@T) T@T)
(declare-fun $generated@@313 (T@U) T@U)
(declare-fun $generated@@314 (T@T T@T) T@U)
(declare-fun $generated@@315 (T@T T@T) T@T)
(declare-fun $generated@@316 (T@T) T@T)
(declare-fun $generated@@317 (T@T) T@T)
(declare-fun $generated@@334 (T@T T@U) T@U)
(declare-fun $generated@@344 (T@U) T@U)
(declare-fun $generated@@355 (T@U) T@U)
(declare-fun $generated@@375 (T@U) T@U)
(declare-fun $generated@@376 (T@U) T@U)
(declare-fun $generated@@383 (T@U) T@U)
(declare-fun $generated@@384 (T@U) T@U)
(declare-fun $generated@@401 (T@U T@U) T@U)
(declare-fun $generated@@409 (T@U T@U) T@U)
(declare-fun $generated@@420 (T@T) T@U)
(declare-fun $generated@@444 () T@T)
(declare-fun $generated@@452 (T@U) T@U)
(declare-fun $generated@@456 (T@U) T@U)
(declare-fun $generated@@462 (T@U) T@U)
(declare-fun $generated@@466 (T@U) T@U)
(declare-fun $generated@@474 (T@U) T@U)
(declare-fun $generated@@478 (T@U) T@U)
(declare-fun $generated@@486 (T@U) T@U)
(declare-fun $generated@@487 (T@U Int) T@U)
(declare-fun $generated@@496 (T@U) Int)
(declare-fun $generated@@498 (T@U) T@U)
(declare-fun $generated@@502 (T@U) T@U)
(declare-fun $generated@@506 (T@U) T@U)
(declare-fun $generated@@510 (T@U) T@U)
(declare-fun $generated@@524 (T@U) Int)
(declare-fun $generated@@525 (T@U) Int)
(declare-fun $generated@@541 (T@U) T@U)
(declare-fun $generated@@594 (T@U) Int)
(assert  (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (= ($generated@@1 $generated@@2) 0) (= ($generated@@1 $generated@@3) 1)) (= ($generated@@1 $generated@@4) 2)) (= ($generated@@1 $generated@@5) 3)) (= ($generated@@1 $generated@@6) 4)) (= ($generated@@1 $generated@@7) 5)) (forall (($generated@@18 Int) ) (! (= ($generated ($generated@@8 $generated@@18)) $generated@@18)
 :pattern ( ($generated@@8 $generated@@18))
))) (forall (($generated@@19 T@U) ) (!  (=> (= (type $generated@@19) $generated@@2) (= ($generated@@8 ($generated $generated@@19)) $generated@@19))
 :pattern ( ($generated $generated@@19))
))) (forall (($generated@@20 Int) ) (! (= (type ($generated@@8 $generated@@20)) $generated@@2)
 :pattern ( ($generated@@8 $generated@@20))
))) (forall (($generated@@21 Real) ) (! (= ($generated@@10 ($generated@@9 $generated@@21)) $generated@@21)
 :pattern ( ($generated@@9 $generated@@21))
))) (forall (($generated@@22 T@U) ) (!  (=> (= (type $generated@@22) $generated@@3) (= ($generated@@9 ($generated@@10 $generated@@22)) $generated@@22))
 :pattern ( ($generated@@10 $generated@@22))
))) (forall (($generated@@23 Real) ) (! (= (type ($generated@@9 $generated@@23)) $generated@@3)
 :pattern ( ($generated@@9 $generated@@23))
))) (forall (($generated@@24 Bool) ) (! (= ($generated@@0 ($generated@@11 $generated@@24)) $generated@@24)
 :pattern ( ($generated@@11 $generated@@24))
))) (forall (($generated@@25 T@U) ) (!  (=> (= (type $generated@@25) $generated@@4) (= ($generated@@11 ($generated@@0 $generated@@25)) $generated@@25))
 :pattern ( ($generated@@0 $generated@@25))
))) (forall (($generated@@26 Bool) ) (! (= (type ($generated@@11 $generated@@26)) $generated@@4)
 :pattern ( ($generated@@11 $generated@@26))
))) (forall (($generated@@27 RoundingMode) ) (! (= ($generated@@13 ($generated@@12 $generated@@27)) $generated@@27)
 :pattern ( ($generated@@12 $generated@@27))
))) (forall (($generated@@28 T@U) ) (!  (=> (= (type $generated@@28) $generated@@5) (= ($generated@@12 ($generated@@13 $generated@@28)) $generated@@28))
 :pattern ( ($generated@@13 $generated@@28))
))) (forall (($generated@@29 RoundingMode) ) (! (= (type ($generated@@12 $generated@@29)) $generated@@5)
 :pattern ( ($generated@@12 $generated@@29))
))) (forall (($generated@@30 String) ) (! (= ($generated@@15 ($generated@@14 $generated@@30)) $generated@@30)
 :pattern ( ($generated@@14 $generated@@30))
))) (forall (($generated@@31 T@U) ) (!  (=> (= (type $generated@@31) $generated@@6) (= ($generated@@14 ($generated@@15 $generated@@31)) $generated@@31))
 :pattern ( ($generated@@15 $generated@@31))
))) (forall (($generated@@32 String) ) (! (= (type ($generated@@14 $generated@@32)) $generated@@6)
 :pattern ( ($generated@@14 $generated@@32))
))) (forall (($generated@@33 (RegEx String)) ) (! (= ($generated@@17 ($generated@@16 $generated@@33)) $generated@@33)
 :pattern ( ($generated@@16 $generated@@33))
))) (forall (($generated@@34 T@U) ) (!  (=> (= (type $generated@@34) $generated@@7) (= ($generated@@16 ($generated@@17 $generated@@34)) $generated@@34))
 :pattern ( ($generated@@17 $generated@@34))
))) (forall (($generated@@35 (RegEx String)) ) (! (= (type ($generated@@16 $generated@@35)) $generated@@7)
 :pattern ( ($generated@@16 $generated@@35))
))))
(assert (forall (($generated@@36 T@U) ) (! (UOrdering2 $generated@@36 $generated@@36)
 :no-pattern ($generated $generated@@36)
 :no-pattern ($generated@@0 $generated@@36)
)))
(assert (forall (($generated@@37 T@U) ($generated@@38 T@U) ($generated@@39 T@U) ) (! (let (($generated@@40 (type $generated@@37)))
 (=> (and (and (= (type $generated@@38) $generated@@40) (= (type $generated@@39) $generated@@40)) (and (UOrdering2 $generated@@37 $generated@@38) (UOrdering2 $generated@@38 $generated@@39))) (UOrdering2 $generated@@37 $generated@@39)))
 :pattern ( (UOrdering2 $generated@@37 $generated@@38) (UOrdering2 $generated@@38 $generated@@39))
)))
(assert (forall (($generated@@41 T@U) ($generated@@42 T@U) ) (! (let (($generated@@43 (type $generated@@41)))
 (=> (= (type $generated@@42) $generated@@43) (=> (and (UOrdering2 $generated@@41 $generated@@42) (UOrdering2 $generated@@42 $generated@@41)) (= $generated@@41 $generated@@42))))
 :pattern ( (UOrdering2 $generated@@41 $generated@@42) (UOrdering2 $generated@@42 $generated@@41))
)))
(assert  (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (= ($generated@@1 $generated@@67) 6) (= (type $generated@@44) $generated@@67)) (= (type $generated@@45) $generated@@67)) (= (type $generated@@46) $generated@@67)) (= (type $generated@@47) $generated@@67)) (= (type $generated@@48) $generated@@67)) (= ($generated@@1 $generated@@68) 7)) (= (type $generated@@49) $generated@@68)) (= (type $generated@@50) $generated@@68)) (= (type $generated@@51) $generated@@68)) (= (type $generated@@52) $generated@@68)) (= (type $generated@@53) $generated@@68)) (= (type $generated@@54) $generated@@68)) (= (type $generated@@55) $generated@@68)) (= (type $generated@@56) $generated@@68)) (= (type $generated@@57) $generated@@68)) (= (type $generated@@58) $generated@@68)) (= (type $generated@@59) $generated@@68)) (forall (($generated@@73 T@T) ) (= ($generated@@1 ($generated@@69 $generated@@73)) 8))) (forall (($generated@@74 T@T) ) (! (= ($generated@@70 ($generated@@69 $generated@@74)) $generated@@74)
 :pattern ( ($generated@@69 $generated@@74))
))) (= (type $generated@@60) ($generated@@69 $generated@@4))) (= ($generated@@1 $generated@@71) 9)) (= (type $generated@@61) $generated@@71)) (= (type $generated@@62) $generated@@68)) (= (type $generated@@63) $generated@@68)) (= (type $generated@@64) $generated@@68)) (= ($generated@@1 $generated@@72) 10)) (= (type $generated@@65) $generated@@72)) (= (type $generated@@66) $generated@@72)))
(assert (distinct $generated@@44 $generated@@45 $generated@@46 $generated@@47 $generated@@48 $generated@@49 $generated@@50 $generated@@51 $generated@@52 $generated@@53 $generated@@54 $generated@@55 $generated@@56 $generated@@57 $generated@@58 $generated@@59 $generated@@60 $generated@@61 $generated@@62 $generated@@63 $generated@@64 $generated@@65 $generated@@66)
)
(assert (forall (($generated@@76 T@U) ) (! (= (type ($generated@@75 $generated@@76)) $generated@@68)
 :pattern ( ($generated@@75 $generated@@76))
)))
(assert (= ($generated@@75 $generated@@44) $generated@@49))
(assert (= ($generated@@75 $generated@@45) $generated@@50))
(assert (= ($generated@@75 $generated@@46) $generated@@51))
(assert (= ($generated@@75 $generated@@47) $generated@@52))
(assert (= ($generated@@75 $generated@@48) $generated@@53))
(assert  (and (and (and (and (and (and (and (and (and (and (and (and (and (forall (($generated@@88 T@T) ($generated@@89 T@T) ) (= ($generated@@1 ($generated@@79 $generated@@88 $generated@@89)) 11)) (forall (($generated@@90 T@T) ($generated@@91 T@T) ) (! (= ($generated@@82 ($generated@@79 $generated@@90 $generated@@91)) $generated@@90)
 :pattern ( ($generated@@79 $generated@@90 $generated@@91))
))) (forall (($generated@@92 T@T) ($generated@@93 T@T) ) (! (= ($generated@@83 ($generated@@79 $generated@@92 $generated@@93)) $generated@@93)
 :pattern ( ($generated@@79 $generated@@92 $generated@@93))
))) (forall (($generated@@94 T@U) ($generated@@95 T@U) ) (! (let (($generated@@96 ($generated@@83 (type $generated@@94))))
(= (type ($generated@@84 $generated@@94 $generated@@95)) $generated@@96))
 :pattern ( ($generated@@84 $generated@@94 $generated@@95))
))) (forall (($generated@@97 T@U) ($generated@@98 T@U) ($generated@@99 T@U) ) (! (let (($generated@@100 (type $generated@@99)))
(let (($generated@@101 (type $generated@@98)))
(= (type ($generated@@85 $generated@@97 $generated@@98 $generated@@99)) ($generated@@79 $generated@@101 $generated@@100))))
 :pattern ( ($generated@@85 $generated@@97 $generated@@98 $generated@@99))
))) (forall (($generated@@102 T@U) ($generated@@103 T@U) ($generated@@104 T@U) ) (! (let (($generated@@105 ($generated@@83 (type $generated@@102))))
 (=> (= (type $generated@@104) $generated@@105) (= ($generated@@84 ($generated@@85 $generated@@102 $generated@@103 $generated@@104) $generated@@103) $generated@@104)))
 :weight 0
))) (and (forall (($generated@@106 T@U) ($generated@@107 T@U) ($generated@@108 T@U) ($generated@@109 T@U) ) (!  (or (= $generated@@108 $generated@@109) (= ($generated@@84 ($generated@@85 $generated@@107 $generated@@108 $generated@@106) $generated@@109) ($generated@@84 $generated@@107 $generated@@109)))
 :weight 0
)) (forall (($generated@@110 T@U) ($generated@@111 T@U) ($generated@@112 T@U) ($generated@@113 T@U) ) (!  (or true (= ($generated@@84 ($generated@@85 $generated@@111 $generated@@112 $generated@@110) $generated@@113) ($generated@@84 $generated@@111 $generated@@113)))
 :weight 0
)))) (= ($generated@@1 $generated@@80) 12)) (forall (($generated@@114 T@U) ($generated@@115 T@U) ) (! (let (($generated@@116 ($generated@@70 (type $generated@@115))))
(= (type ($generated@@86 $generated@@114 $generated@@115)) $generated@@116))
 :pattern ( ($generated@@86 $generated@@114 $generated@@115))
))) (= ($generated@@1 $generated@@81) 13)) (forall (($generated@@117 T@U) ($generated@@118 T@U) ($generated@@119 T@U) ) (! (= (type ($generated@@87 $generated@@117 $generated@@118 $generated@@119)) $generated@@81)
 :pattern ( ($generated@@87 $generated@@117 $generated@@118 $generated@@119))
))) (forall (($generated@@120 T@U) ($generated@@121 T@U) ($generated@@122 T@U) ) (! (let (($generated@@123 ($generated@@70 (type $generated@@121))))
 (=> (= (type $generated@@122) $generated@@123) (= ($generated@@86 ($generated@@87 $generated@@120 $generated@@121 $generated@@122) $generated@@121) $generated@@122)))
 :weight 0
))) (and (forall (($generated@@124 T@U) ($generated@@125 T@U) ($generated@@126 T@U) ($generated@@127 T@U) ) (!  (or (= $generated@@126 $generated@@127) (= ($generated@@86 ($generated@@87 $generated@@125 $generated@@126 $generated@@124) $generated@@127) ($generated@@86 $generated@@125 $generated@@127)))
 :weight 0
)) (forall (($generated@@128 T@U) ($generated@@129 T@U) ($generated@@130 T@U) ($generated@@131 T@U) ) (!  (or true (= ($generated@@86 ($generated@@87 $generated@@129 $generated@@130 $generated@@128) $generated@@131) ($generated@@86 $generated@@129 $generated@@131)))
 :weight 0
)))) (forall (($generated@@132 Int) ) (! (= (type ($generated@@78 $generated@@132)) $generated@@67)
 :pattern ( ($generated@@78 $generated@@132))
))))
(assert (forall (($generated@@133 T@U) ($generated@@134 T@U) ) (!  (=> (and (= (type $generated@@133) $generated@@2) (= (type $generated@@134) ($generated@@79 $generated@@80 $generated@@81))) ($generated@@77 $generated@@133 ($generated@@78 0) $generated@@134))
 :pattern ( ($generated@@77 $generated@@133 ($generated@@78 0) $generated@@134))
)))
(assert (forall (($generated@@136 T@U) ($generated@@137 T@U) ) (!  (=> (and (and (= (type $generated@@136) ($generated@@79 $generated@@80 $generated@@81)) (= (type $generated@@137) ($generated@@79 $generated@@80 $generated@@81))) ($generated@@135 $generated@@136 $generated@@137)) (forall (($generated@@138 T@U) ) (!  (=> (and (= (type $generated@@138) $generated@@80) ($generated@@0 ($generated@@86 ($generated@@84 $generated@@136 $generated@@138) $generated@@60))) ($generated@@0 ($generated@@86 ($generated@@84 $generated@@137 $generated@@138) $generated@@60)))
 :pattern ( ($generated@@86 ($generated@@84 $generated@@137 $generated@@138) $generated@@60))
)))
 :pattern ( ($generated@@135 $generated@@136 $generated@@137))
)))
(assert  (and (= (type $generated@@139) $generated@@67) (= (type $generated@@140) $generated@@80)))
(assert (forall (($generated@@141 T@U) ($generated@@142 T@U) ) (!  (=> (and (= (type $generated@@141) $generated@@80) (= (type $generated@@142) ($generated@@79 $generated@@80 $generated@@81))) (= ($generated@@77 $generated@@141 $generated@@139 $generated@@142)  (or (= $generated@@141 $generated@@140) ($generated@@0 ($generated@@86 ($generated@@84 $generated@@142 $generated@@141) $generated@@60)))))
 :pattern ( ($generated@@77 $generated@@141 $generated@@139 $generated@@142))
)))
(assert (forall (($generated@@144 T@U) ) (!  (=> (= (type $generated@@144) $generated@@2) ($generated@@143 $generated@@144 ($generated@@78 0)))
 :pattern ( ($generated@@143 $generated@@144 ($generated@@78 0)))
)))
(assert  (and (= ($generated@@1 $generated@@147) 14) (forall (($generated@@148 T@U) ($generated@@149 T@U) ) (! (= (type ($generated@@146 $generated@@148 $generated@@149)) $generated@@67)
 :pattern ( ($generated@@146 $generated@@148 $generated@@149))
))))
(assert (forall (($generated@@150 T@U) ($generated@@151 T@U) ($generated@@152 T@U) ) (!  (=> (and (and (and (= (type $generated@@150) $generated@@67) (= (type $generated@@151) $generated@@67)) (= (type $generated@@152) $generated@@147)) ($generated@@143 $generated@@152 ($generated@@146 $generated@@150 $generated@@151))) ($generated@@145 $generated@@152))
 :pattern ( ($generated@@145 $generated@@152) ($generated@@143 $generated@@152 ($generated@@146 $generated@@150 $generated@@151)))
)))
(assert  (and (and (= ($generated@@1 $generated@@156) 15) (forall (($generated@@157 T@U) ) (! (= (type ($generated@@154 $generated@@157)) $generated@@156)
 :pattern ( ($generated@@154 $generated@@157))
))) (forall (($generated@@158 T@U) ) (! (= (type ($generated@@155 $generated@@158)) $generated@@156)
 :pattern ( ($generated@@155 $generated@@158))
))))
(assert (forall (($generated@@159 T@U) ($generated@@160 T@U) ) (!  (=> (and (and (= (type $generated@@159) $generated@@147) (= (type $generated@@160) $generated@@147)) true) (= ($generated@@153 $generated@@159 $generated@@160)  (and (= ($generated@@154 $generated@@159) ($generated@@154 $generated@@160)) (= ($generated@@155 $generated@@159) ($generated@@155 $generated@@160)))))
 :pattern ( ($generated@@153 $generated@@159 $generated@@160))
)))
(assert (forall (($generated@@163 T@U) ) (! (= (type ($generated@@161 $generated@@163)) $generated@@67)
 :pattern ( ($generated@@161 $generated@@163))
)))
(assert (forall (($generated@@164 T@U) ($generated@@165 T@U) ) (!  (=> (and (and (= (type $generated@@164) ($generated@@79 $generated@@156 $generated@@2)) (= (type $generated@@165) $generated@@67)) ($generated@@143 $generated@@164 ($generated@@161 $generated@@165))) ($generated@@162 $generated@@164))
 :pattern ( ($generated@@143 $generated@@164 ($generated@@161 $generated@@165)))
)))
(assert (forall (($generated@@167 T@U) ) (! (= (type ($generated@@166 $generated@@167)) $generated@@67)
 :pattern ( ($generated@@166 $generated@@167))
)))
(assert (forall (($generated@@168 T@U) ) (!  (=> (= (type $generated@@168) $generated@@80) (= ($generated@@143 $generated@@168 $generated@@139)  (or (= $generated@@168 $generated@@140) (= ($generated@@166 $generated@@168) $generated@@139))))
 :pattern ( ($generated@@143 $generated@@168 $generated@@139))
)))
(assert  (and (and (and (and (and (and (and (forall (($generated@@175 T@T) ($generated@@176 T@T) ) (= ($generated@@1 ($generated@@171 $generated@@175 $generated@@176)) 16)) (forall (($generated@@177 T@T) ($generated@@178 T@T) ) (! (= ($generated@@172 ($generated@@171 $generated@@177 $generated@@178)) $generated@@177)
 :pattern ( ($generated@@171 $generated@@177 $generated@@178))
))) (forall (($generated@@179 T@T) ($generated@@180 T@T) ) (! (= ($generated@@173 ($generated@@171 $generated@@179 $generated@@180)) $generated@@180)
 :pattern ( ($generated@@171 $generated@@179 $generated@@180))
))) (forall (($generated@@181 T@U) ($generated@@182 T@U) ($generated@@183 T@U) ) (! (let (($generated@@184 ($generated@@173 (type $generated@@181))))
(= (type ($generated@@169 $generated@@181 $generated@@182 $generated@@183)) $generated@@184))
 :pattern ( ($generated@@169 $generated@@181 $generated@@182 $generated@@183))
))) (forall (($generated@@185 T@U) ($generated@@186 T@U) ($generated@@187 T@U) ($generated@@188 T@U) ) (! (let (($generated@@189 (type $generated@@188)))
(let (($generated@@190 (type $generated@@186)))
(= (type ($generated@@174 $generated@@185 $generated@@186 $generated@@187 $generated@@188)) ($generated@@171 $generated@@190 $generated@@189))))
 :pattern ( ($generated@@174 $generated@@185 $generated@@186 $generated@@187 $generated@@188))
))) (forall (($generated@@191 T@U) ($generated@@192 T@U) ($generated@@193 T@U) ($generated@@194 T@U) ) (! (let (($generated@@195 ($generated@@173 (type $generated@@191))))
 (=> (= (type $generated@@194) $generated@@195) (= ($generated@@169 ($generated@@174 $generated@@191 $generated@@192 $generated@@193 $generated@@194) $generated@@192 $generated@@193) $generated@@194)))
 :weight 0
))) (and (and (forall (($generated@@196 T@U) ($generated@@197 T@U) ($generated@@198 T@U) ($generated@@199 T@U) ($generated@@200 T@U) ($generated@@201 T@U) ) (!  (or (= $generated@@198 $generated@@200) (= ($generated@@169 ($generated@@174 $generated@@197 $generated@@198 $generated@@199 $generated@@196) $generated@@200 $generated@@201) ($generated@@169 $generated@@197 $generated@@200 $generated@@201)))
 :weight 0
)) (forall (($generated@@202 T@U) ($generated@@203 T@U) ($generated@@204 T@U) ($generated@@205 T@U) ($generated@@206 T@U) ($generated@@207 T@U) ) (!  (or (= $generated@@205 $generated@@207) (= ($generated@@169 ($generated@@174 $generated@@203 $generated@@204 $generated@@205 $generated@@202) $generated@@206 $generated@@207) ($generated@@169 $generated@@203 $generated@@206 $generated@@207)))
 :weight 0
))) (forall (($generated@@208 T@U) ($generated@@209 T@U) ($generated@@210 T@U) ($generated@@211 T@U) ($generated@@212 T@U) ($generated@@213 T@U) ) (!  (or true (= ($generated@@169 ($generated@@174 $generated@@209 $generated@@210 $generated@@211 $generated@@208) $generated@@212 $generated@@213) ($generated@@169 $generated@@209 $generated@@212 $generated@@213)))
 :weight 0
)))) (forall (($generated@@214 T@U) ($generated@@215 T@U) ($generated@@216 T@U) ($generated@@217 Bool) ) (! (= (type ($generated@@170 $generated@@214 $generated@@215 $generated@@216 $generated@@217)) ($generated@@171 $generated@@80 $generated@@4))
 :pattern ( ($generated@@170 $generated@@214 $generated@@215 $generated@@216 $generated@@217))
))))
(assert (forall (($generated@@218 T@U) ($generated@@219 T@U) ($generated@@220 T@U) ($generated@@221 Bool) ($generated@@222 T@U) ($generated@@223 T@U) ) (! (let (($generated@@224 ($generated@@70 (type $generated@@223))))
 (=> (and (and (and (and (= (type $generated@@218) $generated@@80) (= (type $generated@@219) ($generated@@79 $generated@@80 $generated@@81))) (= (type $generated@@220) ($generated@@69 $generated@@4))) (= (type $generated@@222) $generated@@80)) (= (type $generated@@223) ($generated@@69 $generated@@224))) (= ($generated@@0 ($generated@@169 ($generated@@170 $generated@@218 $generated@@219 $generated@@220 $generated@@221) $generated@@222 $generated@@223))  (=> (and (not (= $generated@@222 $generated@@218)) ($generated@@0 ($generated@@86 ($generated@@84 $generated@@219 $generated@@222) $generated@@220))) $generated@@221))))
 :pattern ( ($generated@@169 ($generated@@170 $generated@@218 $generated@@219 $generated@@220 $generated@@221) $generated@@222 $generated@@223))
)))
(assert (= (type $generated@@225) $generated@@67))
(assert (forall (($generated@@226 T@U) ($generated@@227 T@U) ) (!  (=> (and (= (type $generated@@226) $generated@@80) (= (type $generated@@227) ($generated@@79 $generated@@80 $generated@@81))) (= ($generated@@77 $generated@@226 $generated@@225 $generated@@227) ($generated@@77 $generated@@226 $generated@@139 $generated@@227)))
 :pattern ( ($generated@@77 $generated@@226 $generated@@225 $generated@@227))
)))
(assert (forall (($generated@@230 T@U) ($generated@@231 T@U) ) (! (= (type ($generated@@228 $generated@@230 $generated@@231)) $generated@@147)
 :pattern ( ($generated@@228 $generated@@230 $generated@@231))
)))
(assert (forall (($generated@@232 T@U) ($generated@@233 T@U) ($generated@@234 T@U) ($generated@@235 T@U) ) (!  (=> (and (and (and (= (type $generated@@232) $generated@@67) (= (type $generated@@233) $generated@@67)) (= (type $generated@@234) $generated@@156)) (= (type $generated@@235) $generated@@156)) (= ($generated@@143 ($generated@@228 $generated@@234 $generated@@235) ($generated@@146 $generated@@232 $generated@@233))  (and ($generated@@229 $generated@@234 $generated@@232) ($generated@@229 $generated@@235 $generated@@233))))
 :pattern ( ($generated@@143 ($generated@@228 $generated@@234 $generated@@235) ($generated@@146 $generated@@232 $generated@@233)))
)))
(assert (forall (($generated@@236 T@U) ($generated@@237 T@U) ) (!  (=> (and (= (type $generated@@236) $generated@@147) (= (type $generated@@237) $generated@@147)) (= ($generated@@153 $generated@@236 $generated@@237) (= $generated@@236 $generated@@237)))
 :pattern ( ($generated@@153 $generated@@236 $generated@@237))
)))
(assert (forall (($generated@@239 T@U) ) (! (= (type ($generated@@238 $generated@@239)) $generated@@67)
 :pattern ( ($generated@@238 $generated@@239))
)))
(assert (forall (($generated@@240 T@U) ($generated@@241 T@U) ) (!  (=> (and (= (type $generated@@240) ($generated@@79 $generated@@156 $generated@@4)) (= (type $generated@@241) $generated@@67)) (= ($generated@@143 $generated@@240 ($generated@@238 $generated@@241)) (forall (($generated@@242 T@U) ) (!  (=> (and (= (type $generated@@242) $generated@@156) ($generated@@0 ($generated@@84 $generated@@240 $generated@@242))) ($generated@@229 $generated@@242 $generated@@241))
 :pattern ( ($generated@@84 $generated@@240 $generated@@242))
))))
 :pattern ( ($generated@@143 $generated@@240 ($generated@@238 $generated@@241)))
)))
(assert (forall (($generated@@244 T@U) ) (! (= (type ($generated@@243 $generated@@244)) $generated@@67)
 :pattern ( ($generated@@243 $generated@@244))
)))
(assert (forall (($generated@@245 T@U) ($generated@@246 T@U) ) (!  (=> (and (= (type $generated@@245) ($generated@@79 $generated@@156 $generated@@4)) (= (type $generated@@246) $generated@@67)) (= ($generated@@143 $generated@@245 ($generated@@243 $generated@@246)) (forall (($generated@@247 T@U) ) (!  (=> (and (= (type $generated@@247) $generated@@156) ($generated@@0 ($generated@@84 $generated@@245 $generated@@247))) ($generated@@229 $generated@@247 $generated@@246))
 :pattern ( ($generated@@84 $generated@@245 $generated@@247))
))))
 :pattern ( ($generated@@143 $generated@@245 ($generated@@243 $generated@@246)))
)))
(assert (forall (($generated@@249 T@U) ) (! (let (($generated@@250 (type $generated@@249)))
(= (type ($generated@@248 $generated@@249)) $generated@@250))
 :pattern ( ($generated@@248 $generated@@249))
)))
(assert (forall (($generated@@251 T@U) ) (! (= ($generated@@248 $generated@@251) $generated@@251)
 :pattern ( ($generated@@248 $generated@@251))
)))
(assert (forall (($generated@@254 T@U) ($generated@@255 T@U) ($generated@@256 T@U) ($generated@@257 T@U) ($generated@@258 T@U) ) (!  (=> (and (and (and (and (and (= (type $generated@@254) $generated@@67) (= (type $generated@@255) $generated@@67)) (= (type $generated@@256) $generated@@156)) (= (type $generated@@257) $generated@@156)) (= (type $generated@@258) ($generated@@79 $generated@@80 $generated@@81))) ($generated@@252 $generated@@258)) (= ($generated@@77 ($generated@@228 $generated@@256 $generated@@257) ($generated@@146 $generated@@254 $generated@@255) $generated@@258)  (and ($generated@@253 $generated@@256 $generated@@254 $generated@@258) ($generated@@253 $generated@@257 $generated@@255 $generated@@258))))
 :pattern ( ($generated@@77 ($generated@@228 $generated@@256 $generated@@257) ($generated@@146 $generated@@254 $generated@@255) $generated@@258))
)))
(assert (forall (($generated@@260 T@U) ) (! (= (type ($generated@@259 $generated@@260)) $generated@@71)
 :pattern ( ($generated@@259 $generated@@260))
)))
(assert (forall (($generated@@261 T@U) ) (!  (=> (= (type $generated@@261) $generated@@147) (= ($generated@@145 $generated@@261) (= ($generated@@259 $generated@@261) $generated@@61)))
 :pattern ( ($generated@@145 $generated@@261))
)))
(assert (forall (($generated@@262 T@U) ) (!  (=> (and (= (type $generated@@262) $generated@@147) ($generated@@145 $generated@@262)) (exists (($generated@@263 T@U) ($generated@@264 T@U) ) (!  (and (and (= (type $generated@@263) $generated@@156) (= (type $generated@@264) $generated@@156)) (= $generated@@262 ($generated@@228 $generated@@263 $generated@@264)))
 :no-pattern (type $generated@@263)
 :no-pattern (type $generated@@264)
 :no-pattern ($generated $generated@@263)
 :no-pattern ($generated@@0 $generated@@263)
 :no-pattern ($generated $generated@@264)
 :no-pattern ($generated@@0 $generated@@264)
)))
 :pattern ( ($generated@@145 $generated@@262))
)))
(assert  (and (and (forall (($generated@@269 T@T) ) (= ($generated@@1 ($generated@@267 $generated@@269)) 17)) (forall (($generated@@270 T@T) ) (! (= ($generated@@268 ($generated@@267 $generated@@270)) $generated@@270)
 :pattern ( ($generated@@267 $generated@@270))
))) (forall (($generated@@271 T@T) ) (! (= (type ($generated@@265 $generated@@271)) ($generated@@267 $generated@@271))
 :pattern ( ($generated@@265 $generated@@271))
))))
(assert (forall (($generated@@272 T@T) ) (! (= ($generated@@266 ($generated@@265 $generated@@272)) 0)
 :pattern ( ($generated@@265 $generated@@272))
)))
(assert  (=> (< 0 $generated@@273) (forall (($generated@@275 T@U) ) (!  (=> (and (= (type $generated@@275) ($generated@@79 $generated@@80 $generated@@81)) ($generated@@252 $generated@@275)) ($generated@@77 ($generated@@11 $generated@@274) $generated@@44 $generated@@275))
 :pattern ( ($generated@@77 ($generated@@11 $generated@@274) $generated@@44 $generated@@275))
))))
(assert (forall (($generated@@277 T@U) ) (! (= (type ($generated@@276 $generated@@277)) $generated@@156)
 :pattern ( ($generated@@276 $generated@@277))
)))
(assert (forall (($generated@@278 T@U) ($generated@@279 T@U) ($generated@@280 T@U) ) (!  (=> (and (= (type $generated@@279) $generated@@67) (= (type $generated@@280) ($generated@@79 $generated@@80 $generated@@81))) (= ($generated@@253 ($generated@@276 $generated@@278) $generated@@279 $generated@@280) ($generated@@77 $generated@@278 $generated@@279 $generated@@280)))
 :pattern ( ($generated@@253 ($generated@@276 $generated@@278) $generated@@279 $generated@@280))
)))
(assert (forall (($generated@@281 T@U) ($generated@@282 T@U) ($generated@@283 T@U) ($generated@@284 T@U) ) (!  (=> (and (and (and (and (and (= (type $generated@@281) ($generated@@79 $generated@@80 $generated@@81)) (= (type $generated@@282) ($generated@@79 $generated@@80 $generated@@81))) (= (type $generated@@283) $generated@@156)) (= (type $generated@@284) $generated@@67)) ($generated@@135 $generated@@281 $generated@@282)) ($generated@@253 $generated@@283 $generated@@284 $generated@@281)) ($generated@@253 $generated@@283 $generated@@284 $generated@@282))
 :pattern ( ($generated@@135 $generated@@281 $generated@@282) ($generated@@253 $generated@@283 $generated@@284 $generated@@281))
)))
(assert (forall (($generated@@285 T@U) ($generated@@286 T@U) ($generated@@287 T@U) ($generated@@288 T@U) ) (!  (=> (and (and (and (and (= (type $generated@@285) ($generated@@79 $generated@@80 $generated@@81)) (= (type $generated@@286) ($generated@@79 $generated@@80 $generated@@81))) (= (type $generated@@288) $generated@@67)) ($generated@@135 $generated@@285 $generated@@286)) ($generated@@77 $generated@@287 $generated@@288 $generated@@285)) ($generated@@77 $generated@@287 $generated@@288 $generated@@286))
 :pattern ( ($generated@@135 $generated@@285 $generated@@286) ($generated@@77 $generated@@287 $generated@@288 $generated@@285))
)))
(assert (forall (($generated@@291 T@T) ) (! (= (type ($generated@@290 $generated@@291)) ($generated@@79 $generated@@291 $generated@@2))
 :pattern ( ($generated@@290 $generated@@291))
)))
(assert (forall (($generated@@292 T@U) ) (! (let (($generated@@293 ($generated@@82 (type $generated@@292))))
 (=> (= (type $generated@@292) ($generated@@79 $generated@@293 $generated@@2)) (and (= (= ($generated@@289 $generated@@292) 0) (= $generated@@292 ($generated@@290 $generated@@293))) (=> (not (= ($generated@@289 $generated@@292) 0)) (exists (($generated@@294 T@U) ) (!  (and (= (type $generated@@294) $generated@@293) (< 0 ($generated ($generated@@84 $generated@@292 $generated@@294))))
 :no-pattern (type $generated@@294)
 :no-pattern ($generated $generated@@294)
 :no-pattern ($generated@@0 $generated@@294)
))))))
 :pattern ( ($generated@@289 $generated@@292))
)))
(assert  (and (and (and (and (forall (($generated@@300 T@T) ($generated@@301 T@T) ) (= ($generated@@1 ($generated@@297 $generated@@300 $generated@@301)) 18)) (forall (($generated@@302 T@T) ($generated@@303 T@T) ) (! (= ($generated@@298 ($generated@@297 $generated@@302 $generated@@303)) $generated@@302)
 :pattern ( ($generated@@297 $generated@@302 $generated@@303))
))) (forall (($generated@@304 T@T) ($generated@@305 T@T) ) (! (= ($generated@@299 ($generated@@297 $generated@@304 $generated@@305)) $generated@@305)
 :pattern ( ($generated@@297 $generated@@304 $generated@@305))
))) (forall (($generated@@306 T@U) ) (! (let (($generated@@307 ($generated@@298 (type $generated@@306))))
(= (type ($generated@@295 $generated@@306)) ($generated@@79 $generated@@307 $generated@@4)))
 :pattern ( ($generated@@295 $generated@@306))
))) (forall (($generated@@308 T@T) ($generated@@309 T@T) ) (! (= (type ($generated@@296 $generated@@308 $generated@@309)) ($generated@@297 $generated@@308 $generated@@309))
 :pattern ( ($generated@@296 $generated@@308 $generated@@309))
))))
(assert (forall (($generated@@310 T@U) ($generated@@311 T@T) ) (! (let (($generated@@312 (type $generated@@310)))
 (not ($generated@@0 ($generated@@84 ($generated@@295 ($generated@@296 $generated@@312 $generated@@311)) $generated@@310))))
 :pattern ( (let (($generated@@312 (type $generated@@310)))
($generated@@84 ($generated@@295 ($generated@@296 $generated@@312 $generated@@311)) $generated@@310)))
)))
(assert  (and (and (and (and (forall (($generated@@318 T@T) ($generated@@319 T@T) ) (= ($generated@@1 ($generated@@315 $generated@@318 $generated@@319)) 19)) (forall (($generated@@320 T@T) ($generated@@321 T@T) ) (! (= ($generated@@316 ($generated@@315 $generated@@320 $generated@@321)) $generated@@320)
 :pattern ( ($generated@@315 $generated@@320 $generated@@321))
))) (forall (($generated@@322 T@T) ($generated@@323 T@T) ) (! (= ($generated@@317 ($generated@@315 $generated@@322 $generated@@323)) $generated@@323)
 :pattern ( ($generated@@315 $generated@@322 $generated@@323))
))) (forall (($generated@@324 T@U) ) (! (let (($generated@@325 ($generated@@316 (type $generated@@324))))
(= (type ($generated@@313 $generated@@324)) ($generated@@79 $generated@@325 $generated@@4)))
 :pattern ( ($generated@@313 $generated@@324))
))) (forall (($generated@@326 T@T) ($generated@@327 T@T) ) (! (= (type ($generated@@314 $generated@@326 $generated@@327)) ($generated@@315 $generated@@326 $generated@@327))
 :pattern ( ($generated@@314 $generated@@326 $generated@@327))
))))
(assert (forall (($generated@@328 T@U) ($generated@@329 T@T) ) (! (let (($generated@@330 (type $generated@@328)))
 (not ($generated@@0 ($generated@@84 ($generated@@313 ($generated@@314 $generated@@330 $generated@@329)) $generated@@328))))
 :pattern ( (let (($generated@@330 (type $generated@@328)))
($generated@@84 ($generated@@313 ($generated@@314 $generated@@330 $generated@@329)) $generated@@328)))
)))
(assert (forall (($generated@@331 T@U) ) (! (let (($generated@@332 ($generated@@82 (type $generated@@331))))
 (=> (= (type $generated@@331) ($generated@@79 $generated@@332 $generated@@2)) (= ($generated@@162 $generated@@331) (forall (($generated@@333 T@U) ) (!  (=> (= (type $generated@@333) $generated@@332) (and (<= 0 ($generated ($generated@@84 $generated@@331 $generated@@333))) (<= ($generated ($generated@@84 $generated@@331 $generated@@333)) ($generated@@289 $generated@@331))))
 :pattern ( ($generated@@84 $generated@@331 $generated@@333))
)))))
 :pattern ( ($generated@@162 $generated@@331))
)))
(assert (forall (($generated@@335 T@T) ($generated@@336 T@U) ) (! (= (type ($generated@@334 $generated@@335 $generated@@336)) $generated@@335)
 :pattern ( ($generated@@334 $generated@@335 $generated@@336))
)))
(assert (forall (($generated@@337 T@U) ) (!  (=> (and (= (type $generated@@337) $generated@@156) ($generated@@229 $generated@@337 $generated@@139)) (and (= ($generated@@276 ($generated@@334 $generated@@80 $generated@@337)) $generated@@337) ($generated@@143 ($generated@@334 $generated@@80 $generated@@337) $generated@@139)))
 :pattern ( ($generated@@229 $generated@@337 $generated@@139))
)))
(assert (forall (($generated@@338 T@U) ) (!  (=> (and (= (type $generated@@338) $generated@@156) ($generated@@229 $generated@@338 $generated@@225)) (and (= ($generated@@276 ($generated@@334 $generated@@80 $generated@@338)) $generated@@338) ($generated@@143 ($generated@@334 $generated@@80 $generated@@338) $generated@@225)))
 :pattern ( ($generated@@229 $generated@@338 $generated@@225))
)))
(assert (forall (($generated@@339 T@U) ) (!  (=> (= (type $generated@@339) $generated@@80) (= ($generated@@143 $generated@@339 $generated@@225)  (and ($generated@@143 $generated@@339 $generated@@139) (not (= $generated@@339 $generated@@140)))))
 :pattern ( ($generated@@143 $generated@@339 $generated@@225))
)))
(assert (forall (($generated@@340 T@U) ) (! (let (($generated@@341 ($generated@@299 (type $generated@@340))))
(let (($generated@@342 ($generated@@298 (type $generated@@340))))
 (=> (= (type $generated@@340) ($generated@@297 $generated@@342 $generated@@341)) (or (= $generated@@340 ($generated@@296 $generated@@342 $generated@@341)) (exists (($generated@@343 T@U) ) (!  (and (= (type $generated@@343) $generated@@342) ($generated@@0 ($generated@@84 ($generated@@295 $generated@@340) $generated@@343)))
 :no-pattern (type $generated@@343)
 :no-pattern ($generated $generated@@343)
 :no-pattern ($generated@@0 $generated@@343)
))))))
 :pattern ( ($generated@@295 $generated@@340))
)))
(assert (forall (($generated@@345 T@U) ) (! (let (($generated@@346 ($generated@@299 (type $generated@@345))))
(= (type ($generated@@344 $generated@@345)) ($generated@@79 $generated@@346 $generated@@4)))
 :pattern ( ($generated@@344 $generated@@345))
)))
(assert (forall (($generated@@347 T@U) ) (! (let (($generated@@348 ($generated@@299 (type $generated@@347))))
(let (($generated@@349 ($generated@@298 (type $generated@@347))))
 (=> (= (type $generated@@347) ($generated@@297 $generated@@349 $generated@@348)) (or (= $generated@@347 ($generated@@296 $generated@@349 $generated@@348)) (exists (($generated@@350 T@U) ) (!  (and (= (type $generated@@350) $generated@@348) ($generated@@0 ($generated@@84 ($generated@@344 $generated@@347) $generated@@350)))
 :no-pattern (type $generated@@350)
 :no-pattern ($generated $generated@@350)
 :no-pattern ($generated@@0 $generated@@350)
))))))
 :pattern ( ($generated@@344 $generated@@347))
)))
(assert (forall (($generated@@351 T@U) ) (! (let (($generated@@352 ($generated@@317 (type $generated@@351))))
(let (($generated@@353 ($generated@@316 (type $generated@@351))))
 (=> (= (type $generated@@351) ($generated@@315 $generated@@353 $generated@@352)) (or (= $generated@@351 ($generated@@314 $generated@@353 $generated@@352)) (exists (($generated@@354 T@U) ) (!  (and (= (type $generated@@354) $generated@@353) ($generated@@0 ($generated@@84 ($generated@@313 $generated@@351) $generated@@354)))
 :no-pattern (type $generated@@354)
 :no-pattern ($generated $generated@@354)
 :no-pattern ($generated@@0 $generated@@354)
))))))
 :pattern ( ($generated@@313 $generated@@351))
)))
(assert (forall (($generated@@356 T@U) ) (! (let (($generated@@357 ($generated@@317 (type $generated@@356))))
(= (type ($generated@@355 $generated@@356)) ($generated@@79 $generated@@357 $generated@@4)))
 :pattern ( ($generated@@355 $generated@@356))
)))
(assert (forall (($generated@@358 T@U) ) (! (let (($generated@@359 ($generated@@317 (type $generated@@358))))
(let (($generated@@360 ($generated@@316 (type $generated@@358))))
 (=> (= (type $generated@@358) ($generated@@315 $generated@@360 $generated@@359)) (or (= $generated@@358 ($generated@@314 $generated@@360 $generated@@359)) (exists (($generated@@361 T@U) ) (!  (and (= (type $generated@@361) $generated@@359) ($generated@@0 ($generated@@84 ($generated@@355 $generated@@358) $generated@@361)))
 :no-pattern (type $generated@@361)
 :no-pattern ($generated $generated@@361)
 :no-pattern ($generated@@0 $generated@@361)
))))))
 :pattern ( ($generated@@355 $generated@@358))
)))
(assert (forall (($generated@@362 T@U) ($generated@@363 T@U) ) (!  (=> (and (= (type $generated@@362) ($generated@@79 $generated@@156 $generated@@2)) (= (type $generated@@363) $generated@@67)) (= ($generated@@143 $generated@@362 ($generated@@161 $generated@@363)) (forall (($generated@@364 T@U) ) (!  (=> (and (= (type $generated@@364) $generated@@156) (< 0 ($generated ($generated@@84 $generated@@362 $generated@@364)))) ($generated@@229 $generated@@364 $generated@@363))
 :pattern ( ($generated@@84 $generated@@362 $generated@@364))
))))
 :pattern ( ($generated@@143 $generated@@362 ($generated@@161 $generated@@363)))
)))
(assert (forall (($generated@@365 T@U) ($generated@@366 T@U) ($generated@@367 T@U) ) (!  (=> (and (and (= (type $generated@@365) ($generated@@79 $generated@@156 $generated@@4)) (= (type $generated@@366) $generated@@67)) (= (type $generated@@367) ($generated@@79 $generated@@80 $generated@@81))) (= ($generated@@77 $generated@@365 ($generated@@238 $generated@@366) $generated@@367) (forall (($generated@@368 T@U) ) (!  (=> (and (= (type $generated@@368) $generated@@156) ($generated@@0 ($generated@@84 $generated@@365 $generated@@368))) ($generated@@253 $generated@@368 $generated@@366 $generated@@367))
 :pattern ( ($generated@@84 $generated@@365 $generated@@368))
))))
 :pattern ( ($generated@@77 $generated@@365 ($generated@@238 $generated@@366) $generated@@367))
)))
(assert (forall (($generated@@369 T@U) ($generated@@370 T@U) ($generated@@371 T@U) ) (!  (=> (and (and (= (type $generated@@369) ($generated@@79 $generated@@156 $generated@@4)) (= (type $generated@@370) $generated@@67)) (= (type $generated@@371) ($generated@@79 $generated@@80 $generated@@81))) (= ($generated@@77 $generated@@369 ($generated@@243 $generated@@370) $generated@@371) (forall (($generated@@372 T@U) ) (!  (=> (and (= (type $generated@@372) $generated@@156) ($generated@@0 ($generated@@84 $generated@@369 $generated@@372))) ($generated@@253 $generated@@372 $generated@@370 $generated@@371))
 :pattern ( ($generated@@84 $generated@@369 $generated@@372))
))))
 :pattern ( ($generated@@77 $generated@@369 ($generated@@243 $generated@@370) $generated@@371))
)))
(assert (forall (($generated@@373 T@U) ) (! (let (($generated@@374 (type $generated@@373)))
(= ($generated ($generated@@84 ($generated@@290 $generated@@374) $generated@@373)) 0))
 :pattern ( (let (($generated@@374 (type $generated@@373)))
($generated@@84 ($generated@@290 $generated@@374) $generated@@373)))
)))
(assert  (and (forall (($generated@@377 T@U) ) (! (= (type ($generated@@375 $generated@@377)) ($generated@@79 $generated@@156 $generated@@4))
 :pattern ( ($generated@@375 $generated@@377))
)) (forall (($generated@@378 T@U) ) (! (let (($generated@@379 ($generated@@299 (type $generated@@378))))
(let (($generated@@380 ($generated@@298 (type $generated@@378))))
(= (type ($generated@@376 $generated@@378)) ($generated@@79 $generated@@380 $generated@@379))))
 :pattern ( ($generated@@376 $generated@@378))
))))
(assert (forall (($generated@@381 T@U) ($generated@@382 T@U) ) (!  (=> (and (= (type $generated@@381) ($generated@@297 $generated@@156 $generated@@156)) (= (type $generated@@382) $generated@@156)) (= ($generated@@0 ($generated@@84 ($generated@@375 $generated@@381) $generated@@382))  (and ($generated@@0 ($generated@@84 ($generated@@295 $generated@@381) ($generated@@154 ($generated@@334 $generated@@147 $generated@@382)))) (= ($generated@@84 ($generated@@376 $generated@@381) ($generated@@154 ($generated@@334 $generated@@147 $generated@@382))) ($generated@@155 ($generated@@334 $generated@@147 $generated@@382))))))
 :pattern ( ($generated@@84 ($generated@@375 $generated@@381) $generated@@382))
)))
(assert  (and (forall (($generated@@385 T@U) ) (! (= (type ($generated@@383 $generated@@385)) ($generated@@79 $generated@@156 $generated@@4))
 :pattern ( ($generated@@383 $generated@@385))
)) (forall (($generated@@386 T@U) ) (! (let (($generated@@387 ($generated@@317 (type $generated@@386))))
(let (($generated@@388 ($generated@@316 (type $generated@@386))))
(= (type ($generated@@384 $generated@@386)) ($generated@@79 $generated@@388 $generated@@387))))
 :pattern ( ($generated@@384 $generated@@386))
))))
(assert (forall (($generated@@389 T@U) ($generated@@390 T@U) ) (!  (=> (and (= (type $generated@@389) ($generated@@315 $generated@@156 $generated@@156)) (= (type $generated@@390) $generated@@156)) (= ($generated@@0 ($generated@@84 ($generated@@383 $generated@@389) $generated@@390))  (and ($generated@@0 ($generated@@84 ($generated@@313 $generated@@389) ($generated@@154 ($generated@@334 $generated@@147 $generated@@390)))) (= ($generated@@84 ($generated@@384 $generated@@389) ($generated@@154 ($generated@@334 $generated@@147 $generated@@390))) ($generated@@155 ($generated@@334 $generated@@147 $generated@@390))))))
 :pattern ( ($generated@@84 ($generated@@383 $generated@@389) $generated@@390))
)))
(assert (forall (($generated@@391 T@U) ($generated@@392 T@U) ) (! (let (($generated@@393 (type $generated@@392)))
(let (($generated@@394 ($generated@@298 (type $generated@@391))))
 (=> (= (type $generated@@391) ($generated@@297 $generated@@394 $generated@@393)) (= ($generated@@0 ($generated@@84 ($generated@@344 $generated@@391) $generated@@392)) (exists (($generated@@395 T@U) ) (!  (and (= (type $generated@@395) $generated@@394) (and ($generated@@0 ($generated@@84 ($generated@@295 $generated@@391) $generated@@395)) (= $generated@@392 ($generated@@84 ($generated@@376 $generated@@391) $generated@@395))))
 :pattern ( ($generated@@84 ($generated@@295 $generated@@391) $generated@@395))
 :pattern ( ($generated@@84 ($generated@@376 $generated@@391) $generated@@395))
))))))
 :pattern ( ($generated@@84 ($generated@@344 $generated@@391) $generated@@392))
)))
(assert (forall (($generated@@396 T@U) ($generated@@397 T@U) ) (! (let (($generated@@398 (type $generated@@397)))
(let (($generated@@399 ($generated@@316 (type $generated@@396))))
 (=> (= (type $generated@@396) ($generated@@315 $generated@@399 $generated@@398)) (= ($generated@@0 ($generated@@84 ($generated@@355 $generated@@396) $generated@@397)) (exists (($generated@@400 T@U) ) (!  (and (= (type $generated@@400) $generated@@399) (and ($generated@@0 ($generated@@84 ($generated@@313 $generated@@396) $generated@@400)) (= $generated@@397 ($generated@@84 ($generated@@384 $generated@@396) $generated@@400))))
 :pattern ( ($generated@@84 ($generated@@313 $generated@@396) $generated@@400))
 :pattern ( ($generated@@84 ($generated@@384 $generated@@396) $generated@@400))
))))))
 :pattern ( ($generated@@84 ($generated@@355 $generated@@396) $generated@@397))
)))
(assert (forall (($generated@@402 T@U) ($generated@@403 T@U) ) (! (= (type ($generated@@401 $generated@@402 $generated@@403)) $generated@@67)
 :pattern ( ($generated@@401 $generated@@402 $generated@@403))
)))
(assert (forall (($generated@@404 T@U) ($generated@@405 T@U) ($generated@@406 T@U) ($generated@@407 T@U) ) (!  (=> (and (and (and (= (type $generated@@404) ($generated@@297 $generated@@156 $generated@@156)) (= (type $generated@@405) $generated@@67)) (= (type $generated@@406) $generated@@67)) (= (type $generated@@407) ($generated@@79 $generated@@80 $generated@@81))) (= ($generated@@77 $generated@@404 ($generated@@401 $generated@@405 $generated@@406) $generated@@407) (forall (($generated@@408 T@U) ) (!  (=> (and (= (type $generated@@408) $generated@@156) ($generated@@0 ($generated@@84 ($generated@@295 $generated@@404) $generated@@408))) (and ($generated@@253 ($generated@@84 ($generated@@376 $generated@@404) $generated@@408) $generated@@406 $generated@@407) ($generated@@253 $generated@@408 $generated@@405 $generated@@407)))
 :pattern ( ($generated@@84 ($generated@@376 $generated@@404) $generated@@408))
 :pattern ( ($generated@@84 ($generated@@295 $generated@@404) $generated@@408))
))))
 :pattern ( ($generated@@77 $generated@@404 ($generated@@401 $generated@@405 $generated@@406) $generated@@407))
)))
(assert (forall (($generated@@410 T@U) ($generated@@411 T@U) ) (! (= (type ($generated@@409 $generated@@410 $generated@@411)) $generated@@67)
 :pattern ( ($generated@@409 $generated@@410 $generated@@411))
)))
(assert (forall (($generated@@412 T@U) ($generated@@413 T@U) ($generated@@414 T@U) ($generated@@415 T@U) ) (!  (=> (and (and (and (= (type $generated@@412) ($generated@@315 $generated@@156 $generated@@156)) (= (type $generated@@413) $generated@@67)) (= (type $generated@@414) $generated@@67)) (= (type $generated@@415) ($generated@@79 $generated@@80 $generated@@81))) (= ($generated@@77 $generated@@412 ($generated@@409 $generated@@413 $generated@@414) $generated@@415) (forall (($generated@@416 T@U) ) (!  (=> (and (= (type $generated@@416) $generated@@156) ($generated@@0 ($generated@@84 ($generated@@313 $generated@@412) $generated@@416))) (and ($generated@@253 ($generated@@84 ($generated@@384 $generated@@412) $generated@@416) $generated@@414 $generated@@415) ($generated@@253 $generated@@416 $generated@@413 $generated@@415)))
 :pattern ( ($generated@@84 ($generated@@384 $generated@@412) $generated@@416))
 :pattern ( ($generated@@84 ($generated@@313 $generated@@412) $generated@@416))
))))
 :pattern ( ($generated@@77 $generated@@412 ($generated@@409 $generated@@413 $generated@@414) $generated@@415))
)))
(assert (forall (($generated@@417 T@U) ($generated@@418 T@U) ($generated@@419 T@U) ) (!  (=> (and (and (and (and (= (type $generated@@417) ($generated@@79 $generated@@80 $generated@@81)) (= (type $generated@@418) ($generated@@79 $generated@@80 $generated@@81))) (= (type $generated@@419) ($generated@@79 $generated@@80 $generated@@81))) (not (= $generated@@417 $generated@@419))) (and ($generated@@135 $generated@@417 $generated@@418) ($generated@@135 $generated@@418 $generated@@419))) ($generated@@135 $generated@@417 $generated@@419))
 :pattern ( ($generated@@135 $generated@@417 $generated@@418) ($generated@@135 $generated@@418 $generated@@419))
)))
(assert (forall (($generated@@421 T@T) ) (! (= (type ($generated@@420 $generated@@421)) ($generated@@79 $generated@@421 $generated@@4))
 :pattern ( ($generated@@420 $generated@@421))
)))
(assert (forall (($generated@@422 T@U) ) (! (let (($generated@@423 ($generated@@317 (type $generated@@422))))
(let (($generated@@424 ($generated@@316 (type $generated@@422))))
 (=> (= (type $generated@@422) ($generated@@315 $generated@@424 $generated@@423)) (= (= $generated@@422 ($generated@@314 $generated@@424 $generated@@423)) (= ($generated@@313 $generated@@422) ($generated@@420 $generated@@424))))))
 :pattern ( ($generated@@313 $generated@@422))
)))
(assert (forall (($generated@@425 T@U) ) (! (let (($generated@@426 ($generated@@317 (type $generated@@425))))
(let (($generated@@427 ($generated@@316 (type $generated@@425))))
 (=> (= (type $generated@@425) ($generated@@315 $generated@@427 $generated@@426)) (= (= $generated@@425 ($generated@@314 $generated@@427 $generated@@426)) (= ($generated@@355 $generated@@425) ($generated@@420 $generated@@426))))))
 :pattern ( ($generated@@355 $generated@@425))
)))
(assert (forall (($generated@@428 T@U) ) (! (let (($generated@@429 ($generated@@317 (type $generated@@428))))
(let (($generated@@430 ($generated@@316 (type $generated@@428))))
 (=> (= (type $generated@@428) ($generated@@315 $generated@@430 $generated@@429)) (= (= $generated@@428 ($generated@@314 $generated@@430 $generated@@429)) (= ($generated@@383 $generated@@428) ($generated@@420 $generated@@156))))))
 :pattern ( ($generated@@383 $generated@@428))
)))
(assert (forall (($generated@@431 T@U) ) (! (let (($generated@@432 ($generated@@299 (type $generated@@431))))
(let (($generated@@433 ($generated@@298 (type $generated@@431))))
 (=> (= (type $generated@@431) ($generated@@297 $generated@@433 $generated@@432)) (or (= $generated@@431 ($generated@@296 $generated@@433 $generated@@432)) (exists (($generated@@434 T@U) ($generated@@435 T@U) ) (!  (and (and (= (type $generated@@434) $generated@@156) (= (type $generated@@435) $generated@@156)) ($generated@@0 ($generated@@84 ($generated@@375 $generated@@431) ($generated@@276 ($generated@@228 $generated@@434 $generated@@435)))))
 :no-pattern (type $generated@@434)
 :no-pattern (type $generated@@435)
 :no-pattern ($generated $generated@@434)
 :no-pattern ($generated@@0 $generated@@434)
 :no-pattern ($generated $generated@@435)
 :no-pattern ($generated@@0 $generated@@435)
))))))
 :pattern ( ($generated@@375 $generated@@431))
)))
(assert (forall (($generated@@436 T@U) ) (! (let (($generated@@437 ($generated@@317 (type $generated@@436))))
(let (($generated@@438 ($generated@@316 (type $generated@@436))))
 (=> (= (type $generated@@436) ($generated@@315 $generated@@438 $generated@@437)) (or (= $generated@@436 ($generated@@314 $generated@@438 $generated@@437)) (exists (($generated@@439 T@U) ($generated@@440 T@U) ) (!  (and (and (= (type $generated@@439) $generated@@156) (= (type $generated@@440) $generated@@156)) ($generated@@0 ($generated@@84 ($generated@@383 $generated@@436) ($generated@@276 ($generated@@228 $generated@@439 $generated@@440)))))
 :no-pattern (type $generated@@439)
 :no-pattern (type $generated@@440)
 :no-pattern ($generated $generated@@439)
 :no-pattern ($generated@@0 $generated@@439)
 :no-pattern ($generated $generated@@440)
 :no-pattern ($generated@@0 $generated@@440)
))))))
 :pattern ( ($generated@@383 $generated@@436))
)))
(assert (forall (($generated@@441 T@U) ) (!  (=> (and (= (type $generated@@441) $generated@@156) ($generated@@229 $generated@@441 $generated@@46)) (and (= ($generated@@276 ($generated@@334 $generated@@2 $generated@@441)) $generated@@441) ($generated@@143 ($generated@@334 $generated@@2 $generated@@441) $generated@@46)))
 :pattern ( ($generated@@229 $generated@@441 $generated@@46))
)))
(assert (forall (($generated@@442 T@U) ) (!  (=> (and (= (type $generated@@442) $generated@@156) ($generated@@229 $generated@@442 $generated@@47)) (and (= ($generated@@276 ($generated@@334 $generated@@3 $generated@@442)) $generated@@442) ($generated@@143 ($generated@@334 $generated@@3 $generated@@442) $generated@@47)))
 :pattern ( ($generated@@229 $generated@@442 $generated@@47))
)))
(assert (forall (($generated@@443 T@U) ) (!  (=> (and (= (type $generated@@443) $generated@@156) ($generated@@229 $generated@@443 $generated@@44)) (and (= ($generated@@276 ($generated@@334 $generated@@4 $generated@@443)) $generated@@443) ($generated@@143 ($generated@@334 $generated@@4 $generated@@443) $generated@@44)))
 :pattern ( ($generated@@229 $generated@@443 $generated@@44))
)))
(assert (= ($generated@@1 $generated@@444) 20))
(assert (forall (($generated@@445 T@U) ) (!  (=> (and (= (type $generated@@445) $generated@@156) ($generated@@229 $generated@@445 $generated@@45)) (and (= ($generated@@276 ($generated@@334 $generated@@444 $generated@@445)) $generated@@445) ($generated@@143 ($generated@@334 $generated@@444 $generated@@445) $generated@@45)))
 :pattern ( ($generated@@229 $generated@@445 $generated@@45))
)))
(assert (forall (($generated@@446 T@U) ($generated@@447 T@U) ) (!  (=> (= (type $generated@@447) $generated@@67) (= ($generated@@229 ($generated@@276 $generated@@446) $generated@@447) ($generated@@143 $generated@@446 $generated@@447)))
 :pattern ( ($generated@@229 ($generated@@276 $generated@@446) $generated@@447))
)))
(assert (forall (($generated@@448 T@U) ) (! (let (($generated@@449 ($generated@@82 (type $generated@@448))))
 (=> (= (type $generated@@448) ($generated@@79 $generated@@449 $generated@@2)) (<= 0 ($generated@@289 $generated@@448))))
 :pattern ( ($generated@@289 $generated@@448))
)))
(assert (forall (($generated@@450 T@U) ) (! (let (($generated@@451 ($generated@@268 (type $generated@@450))))
 (=> (= (type $generated@@450) ($generated@@267 $generated@@451)) (<= 0 ($generated@@266 $generated@@450))))
 :pattern ( ($generated@@266 $generated@@450))
)))
(assert (forall (($generated@@453 T@U) ) (! (= (type ($generated@@452 $generated@@453)) $generated@@67)
 :pattern ( ($generated@@452 $generated@@453))
)))
(assert (forall (($generated@@454 T@U) ($generated@@455 T@U) ) (!  (=> (and (= (type $generated@@454) $generated@@67) (= (type $generated@@455) $generated@@67)) (= ($generated@@452 ($generated@@401 $generated@@454 $generated@@455)) $generated@@454))
 :pattern ( ($generated@@401 $generated@@454 $generated@@455))
)))
(assert (forall (($generated@@457 T@U) ) (! (= (type ($generated@@456 $generated@@457)) $generated@@67)
 :pattern ( ($generated@@456 $generated@@457))
)))
(assert (forall (($generated@@458 T@U) ($generated@@459 T@U) ) (!  (=> (and (= (type $generated@@458) $generated@@67) (= (type $generated@@459) $generated@@67)) (= ($generated@@456 ($generated@@401 $generated@@458 $generated@@459)) $generated@@459))
 :pattern ( ($generated@@401 $generated@@458 $generated@@459))
)))
(assert (forall (($generated@@460 T@U) ($generated@@461 T@U) ) (!  (=> (and (= (type $generated@@460) $generated@@67) (= (type $generated@@461) $generated@@67)) (= ($generated@@75 ($generated@@401 $generated@@460 $generated@@461)) $generated@@58))
 :pattern ( ($generated@@401 $generated@@460 $generated@@461))
)))
(assert (forall (($generated@@463 T@U) ) (! (= (type ($generated@@462 $generated@@463)) $generated@@67)
 :pattern ( ($generated@@462 $generated@@463))
)))
(assert (forall (($generated@@464 T@U) ($generated@@465 T@U) ) (!  (=> (and (= (type $generated@@464) $generated@@67) (= (type $generated@@465) $generated@@67)) (= ($generated@@462 ($generated@@409 $generated@@464 $generated@@465)) $generated@@464))
 :pattern ( ($generated@@409 $generated@@464 $generated@@465))
)))
(assert (forall (($generated@@467 T@U) ) (! (= (type ($generated@@466 $generated@@467)) $generated@@67)
 :pattern ( ($generated@@466 $generated@@467))
)))
(assert (forall (($generated@@468 T@U) ($generated@@469 T@U) ) (!  (=> (and (= (type $generated@@468) $generated@@67) (= (type $generated@@469) $generated@@67)) (= ($generated@@466 ($generated@@409 $generated@@468 $generated@@469)) $generated@@469))
 :pattern ( ($generated@@409 $generated@@468 $generated@@469))
)))
(assert (forall (($generated@@470 T@U) ($generated@@471 T@U) ) (!  (=> (and (= (type $generated@@470) $generated@@67) (= (type $generated@@471) $generated@@67)) (= ($generated@@75 ($generated@@409 $generated@@470 $generated@@471)) $generated@@59))
 :pattern ( ($generated@@409 $generated@@470 $generated@@471))
)))
(assert (forall (($generated@@472 T@U) ($generated@@473 T@U) ) (!  (=> (and (= (type $generated@@472) $generated@@156) (= (type $generated@@473) $generated@@156)) (= ($generated@@259 ($generated@@228 $generated@@472 $generated@@473)) $generated@@61))
 :pattern ( ($generated@@228 $generated@@472 $generated@@473))
)))
(assert (forall (($generated@@475 T@U) ) (! (= (type ($generated@@474 $generated@@475)) $generated@@67)
 :pattern ( ($generated@@474 $generated@@475))
)))
(assert (forall (($generated@@476 T@U) ($generated@@477 T@U) ) (!  (=> (and (= (type $generated@@476) $generated@@67) (= (type $generated@@477) $generated@@67)) (= ($generated@@474 ($generated@@146 $generated@@476 $generated@@477)) $generated@@476))
 :pattern ( ($generated@@146 $generated@@476 $generated@@477))
)))
(assert (forall (($generated@@479 T@U) ) (! (= (type ($generated@@478 $generated@@479)) $generated@@67)
 :pattern ( ($generated@@478 $generated@@479))
)))
(assert (forall (($generated@@480 T@U) ($generated@@481 T@U) ) (!  (=> (and (= (type $generated@@480) $generated@@67) (= (type $generated@@481) $generated@@67)) (= ($generated@@478 ($generated@@146 $generated@@480 $generated@@481)) $generated@@481))
 :pattern ( ($generated@@146 $generated@@480 $generated@@481))
)))
(assert (forall (($generated@@482 T@U) ($generated@@483 T@U) ) (!  (=> (and (= (type $generated@@482) $generated@@156) (= (type $generated@@483) $generated@@156)) (= ($generated@@154 ($generated@@228 $generated@@482 $generated@@483)) $generated@@482))
 :pattern ( ($generated@@228 $generated@@482 $generated@@483))
)))
(assert (forall (($generated@@484 T@U) ($generated@@485 T@U) ) (!  (=> (and (= (type $generated@@484) $generated@@156) (= (type $generated@@485) $generated@@156)) (= ($generated@@155 ($generated@@228 $generated@@484 $generated@@485)) $generated@@485))
 :pattern ( ($generated@@228 $generated@@484 $generated@@485))
)))
(assert  (and (forall (($generated@@488 T@U) ) (! (= (type ($generated@@486 $generated@@488)) $generated@@67)
 :pattern ( ($generated@@486 $generated@@488))
)) (forall (($generated@@489 T@U) ($generated@@490 Int) ) (! (let (($generated@@491 ($generated@@268 (type $generated@@489))))
(= (type ($generated@@487 $generated@@489 $generated@@490)) $generated@@491))
 :pattern ( ($generated@@487 $generated@@489 $generated@@490))
))))
(assert (forall (($generated@@492 T@U) ($generated@@493 T@U) ($generated@@494 T@U) ) (!  (=> (and (and (= (type $generated@@492) ($generated@@267 $generated@@156)) (= (type $generated@@493) $generated@@67)) (= (type $generated@@494) ($generated@@79 $generated@@80 $generated@@81))) (= ($generated@@77 $generated@@492 ($generated@@486 $generated@@493) $generated@@494) (forall (($generated@@495 Int) ) (!  (=> (and (<= 0 $generated@@495) (< $generated@@495 ($generated@@266 $generated@@492))) ($generated@@253 ($generated@@487 $generated@@492 $generated@@495) $generated@@493 $generated@@494))
 :pattern ( ($generated@@487 $generated@@492 $generated@@495))
))))
 :pattern ( ($generated@@77 $generated@@492 ($generated@@486 $generated@@493) $generated@@494))
)))
(assert  (=> (< 0 $generated@@273) ($generated@@143 ($generated@@11 $generated@@274) $generated@@44)))
(assert (forall (($generated@@497 Int) ) (! (= ($generated@@496 ($generated@@78 $generated@@497)) $generated@@497)
 :pattern ( ($generated@@78 $generated@@497))
)))
(assert (forall (($generated@@499 T@U) ) (! (= (type ($generated@@498 $generated@@499)) $generated@@67)
 :pattern ( ($generated@@498 $generated@@499))
)))
(assert (forall (($generated@@500 T@U) ) (!  (=> (= (type $generated@@500) $generated@@67) (= ($generated@@498 ($generated@@238 $generated@@500)) $generated@@500))
 :pattern ( ($generated@@238 $generated@@500))
)))
(assert (forall (($generated@@501 T@U) ) (!  (=> (= (type $generated@@501) $generated@@67) (= ($generated@@75 ($generated@@238 $generated@@501)) $generated@@54))
 :pattern ( ($generated@@238 $generated@@501))
)))
(assert (forall (($generated@@503 T@U) ) (! (= (type ($generated@@502 $generated@@503)) $generated@@67)
 :pattern ( ($generated@@502 $generated@@503))
)))
(assert (forall (($generated@@504 T@U) ) (!  (=> (= (type $generated@@504) $generated@@67) (= ($generated@@502 ($generated@@243 $generated@@504)) $generated@@504))
 :pattern ( ($generated@@243 $generated@@504))
)))
(assert (forall (($generated@@505 T@U) ) (!  (=> (= (type $generated@@505) $generated@@67) (= ($generated@@75 ($generated@@243 $generated@@505)) $generated@@55))
 :pattern ( ($generated@@243 $generated@@505))
)))
(assert (forall (($generated@@507 T@U) ) (! (= (type ($generated@@506 $generated@@507)) $generated@@67)
 :pattern ( ($generated@@506 $generated@@507))
)))
(assert (forall (($generated@@508 T@U) ) (!  (=> (= (type $generated@@508) $generated@@67) (= ($generated@@506 ($generated@@161 $generated@@508)) $generated@@508))
 :pattern ( ($generated@@161 $generated@@508))
)))
(assert (forall (($generated@@509 T@U) ) (!  (=> (= (type $generated@@509) $generated@@67) (= ($generated@@75 ($generated@@161 $generated@@509)) $generated@@56))
 :pattern ( ($generated@@161 $generated@@509))
)))
(assert (forall (($generated@@511 T@U) ) (! (= (type ($generated@@510 $generated@@511)) $generated@@67)
 :pattern ( ($generated@@510 $generated@@511))
)))
(assert (forall (($generated@@512 T@U) ) (!  (=> (= (type $generated@@512) $generated@@67) (= ($generated@@510 ($generated@@486 $generated@@512)) $generated@@512))
 :pattern ( ($generated@@486 $generated@@512))
)))
(assert (forall (($generated@@513 T@U) ) (!  (=> (= (type $generated@@513) $generated@@67) (= ($generated@@75 ($generated@@486 $generated@@513)) $generated@@57))
 :pattern ( ($generated@@486 $generated@@513))
)))
(assert (forall (($generated@@514 T@U) ) (! (let (($generated@@515 (type $generated@@514)))
(= ($generated@@334 $generated@@515 ($generated@@276 $generated@@514)) $generated@@514))
 :pattern ( ($generated@@276 $generated@@514))
)))
(assert (forall (($generated@@516 T@U) ($generated@@517 T@U) ($generated@@518 T@U) ) (!  (=> (and (and (= (type $generated@@516) ($generated@@297 $generated@@156 $generated@@156)) (= (type $generated@@517) $generated@@67)) (= (type $generated@@518) $generated@@67)) (= ($generated@@143 $generated@@516 ($generated@@401 $generated@@517 $generated@@518)) (forall (($generated@@519 T@U) ) (!  (=> (and (= (type $generated@@519) $generated@@156) ($generated@@0 ($generated@@84 ($generated@@295 $generated@@516) $generated@@519))) (and ($generated@@229 ($generated@@84 ($generated@@376 $generated@@516) $generated@@519) $generated@@518) ($generated@@229 $generated@@519 $generated@@517)))
 :pattern ( ($generated@@84 ($generated@@376 $generated@@516) $generated@@519))
 :pattern ( ($generated@@84 ($generated@@295 $generated@@516) $generated@@519))
))))
 :pattern ( ($generated@@143 $generated@@516 ($generated@@401 $generated@@517 $generated@@518)))
)))
(assert (forall (($generated@@520 T@U) ($generated@@521 T@U) ($generated@@522 T@U) ) (!  (=> (and (and (= (type $generated@@520) ($generated@@315 $generated@@156 $generated@@156)) (= (type $generated@@521) $generated@@67)) (= (type $generated@@522) $generated@@67)) (= ($generated@@143 $generated@@520 ($generated@@409 $generated@@521 $generated@@522)) (forall (($generated@@523 T@U) ) (!  (=> (and (= (type $generated@@523) $generated@@156) ($generated@@0 ($generated@@84 ($generated@@313 $generated@@520) $generated@@523))) (and ($generated@@229 ($generated@@84 ($generated@@384 $generated@@520) $generated@@523) $generated@@522) ($generated@@229 $generated@@523 $generated@@521)))
 :pattern ( ($generated@@84 ($generated@@384 $generated@@520) $generated@@523))
 :pattern ( ($generated@@84 ($generated@@313 $generated@@520) $generated@@523))
))))
 :pattern ( ($generated@@143 $generated@@520 ($generated@@409 $generated@@521 $generated@@522)))
)))
(assert (forall (($generated@@526 T@U) ($generated@@527 T@U) ) (!  (=> (and (= (type $generated@@526) $generated@@156) (= (type $generated@@527) $generated@@156)) (< ($generated@@524 $generated@@526) ($generated@@525 ($generated@@228 $generated@@526 $generated@@527))))
 :pattern ( ($generated@@228 $generated@@526 $generated@@527))
)))
(assert (forall (($generated@@528 T@U) ($generated@@529 T@U) ) (!  (=> (and (= (type $generated@@528) $generated@@156) (= (type $generated@@529) $generated@@156)) (< ($generated@@524 $generated@@529) ($generated@@525 ($generated@@228 $generated@@528 $generated@@529))))
 :pattern ( ($generated@@228 $generated@@528 $generated@@529))
)))
(assert (forall (($generated@@530 T@U) ($generated@@531 T@U) ($generated@@532 T@U) ) (!  (=> (and (and (and (= (type $generated@@530) $generated@@156) (= (type $generated@@531) $generated@@67)) (= (type $generated@@532) $generated@@67)) ($generated@@229 $generated@@530 ($generated@@401 $generated@@531 $generated@@532))) (and (= ($generated@@276 ($generated@@334 ($generated@@297 $generated@@156 $generated@@156) $generated@@530)) $generated@@530) ($generated@@143 ($generated@@334 ($generated@@297 $generated@@156 $generated@@156) $generated@@530) ($generated@@401 $generated@@531 $generated@@532))))
 :pattern ( ($generated@@229 $generated@@530 ($generated@@401 $generated@@531 $generated@@532)))
)))
(assert (forall (($generated@@533 T@U) ($generated@@534 T@U) ($generated@@535 T@U) ) (!  (=> (and (and (and (= (type $generated@@533) $generated@@156) (= (type $generated@@534) $generated@@67)) (= (type $generated@@535) $generated@@67)) ($generated@@229 $generated@@533 ($generated@@409 $generated@@534 $generated@@535))) (and (= ($generated@@276 ($generated@@334 ($generated@@315 $generated@@156 $generated@@156) $generated@@533)) $generated@@533) ($generated@@143 ($generated@@334 ($generated@@315 $generated@@156 $generated@@156) $generated@@533) ($generated@@409 $generated@@534 $generated@@535))))
 :pattern ( ($generated@@229 $generated@@533 ($generated@@409 $generated@@534 $generated@@535)))
)))
(assert (forall (($generated@@536 T@U) ($generated@@537 T@U) ($generated@@538 T@U) ) (!  (=> (and (and (and (= (type $generated@@536) $generated@@67) (= (type $generated@@537) $generated@@67)) (= (type $generated@@538) $generated@@156)) ($generated@@229 $generated@@538 ($generated@@146 $generated@@536 $generated@@537))) (and (= ($generated@@276 ($generated@@334 $generated@@147 $generated@@538)) $generated@@538) ($generated@@143 ($generated@@334 $generated@@147 $generated@@538) ($generated@@146 $generated@@536 $generated@@537))))
 :pattern ( ($generated@@229 $generated@@538 ($generated@@146 $generated@@536 $generated@@537)))
)))
(assert (forall (($generated@@539 T@U) ) (! (let (($generated@@540 (type $generated@@539)))
 (not ($generated@@0 ($generated@@84 ($generated@@420 $generated@@540) $generated@@539))))
 :pattern ( (let (($generated@@540 (type $generated@@539)))
($generated@@84 ($generated@@420 $generated@@540) $generated@@539)))
)))
(assert (forall (($generated@@542 T@U) ) (! (= (type ($generated@@541 $generated@@542)) $generated@@72)
 :pattern ( ($generated@@541 $generated@@542))
)))
(assert (forall (($generated@@543 T@U) ($generated@@544 T@U) ) (!  (=> (and (= (type $generated@@543) $generated@@67) (= (type $generated@@544) $generated@@67)) (and (= ($generated@@75 ($generated@@146 $generated@@543 $generated@@544)) $generated@@62) (= ($generated@@541 ($generated@@146 $generated@@543 $generated@@544)) $generated@@65)))
 :pattern ( ($generated@@146 $generated@@543 $generated@@544))
)))
(assert (forall (($generated@@545 T@U) ) (!  (=> (= (type $generated@@545) $generated@@147) (= ($generated@@524 ($generated@@276 $generated@@545)) ($generated@@525 $generated@@545)))
 :pattern ( ($generated@@524 ($generated@@276 $generated@@545)))
)))
(assert (forall (($generated@@546 T@U) ) (!  (=> (and (= (type $generated@@546) $generated@@156) ($generated@@229 $generated@@546 ($generated@@78 0))) (and (= ($generated@@276 ($generated@@334 $generated@@2 $generated@@546)) $generated@@546) ($generated@@143 ($generated@@334 ($generated@@79 $generated@@156 $generated@@4) $generated@@546) ($generated@@78 0))))
 :pattern ( ($generated@@229 $generated@@546 ($generated@@78 0)))
)))
(assert (forall (($generated@@547 T@U) ($generated@@548 T@U) ) (!  (=> (and (and (= (type $generated@@547) $generated@@156) (= (type $generated@@548) $generated@@67)) ($generated@@229 $generated@@547 ($generated@@238 $generated@@548))) (and (= ($generated@@276 ($generated@@334 ($generated@@79 $generated@@156 $generated@@4) $generated@@547)) $generated@@547) ($generated@@143 ($generated@@334 ($generated@@79 $generated@@156 $generated@@4) $generated@@547) ($generated@@238 $generated@@548))))
 :pattern ( ($generated@@229 $generated@@547 ($generated@@238 $generated@@548)))
)))
(assert (forall (($generated@@549 T@U) ($generated@@550 T@U) ) (!  (=> (and (and (= (type $generated@@549) $generated@@156) (= (type $generated@@550) $generated@@67)) ($generated@@229 $generated@@549 ($generated@@243 $generated@@550))) (and (= ($generated@@276 ($generated@@334 ($generated@@79 $generated@@156 $generated@@4) $generated@@549)) $generated@@549) ($generated@@143 ($generated@@334 ($generated@@79 $generated@@156 $generated@@4) $generated@@549) ($generated@@243 $generated@@550))))
 :pattern ( ($generated@@229 $generated@@549 ($generated@@243 $generated@@550)))
)))
(assert (forall (($generated@@551 T@U) ($generated@@552 T@U) ) (!  (=> (and (and (= (type $generated@@551) $generated@@156) (= (type $generated@@552) $generated@@67)) ($generated@@229 $generated@@551 ($generated@@161 $generated@@552))) (and (= ($generated@@276 ($generated@@334 ($generated@@79 $generated@@156 $generated@@2) $generated@@551)) $generated@@551) ($generated@@143 ($generated@@334 ($generated@@79 $generated@@156 $generated@@2) $generated@@551) ($generated@@161 $generated@@552))))
 :pattern ( ($generated@@229 $generated@@551 ($generated@@161 $generated@@552)))
)))
(assert (forall (($generated@@553 T@U) ($generated@@554 T@U) ) (!  (=> (and (and (= (type $generated@@553) $generated@@156) (= (type $generated@@554) $generated@@67)) ($generated@@229 $generated@@553 ($generated@@486 $generated@@554))) (and (= ($generated@@276 ($generated@@334 ($generated@@267 $generated@@156) $generated@@553)) $generated@@553) ($generated@@143 ($generated@@334 ($generated@@267 $generated@@156) $generated@@553) ($generated@@486 $generated@@554))))
 :pattern ( ($generated@@229 $generated@@553 ($generated@@486 $generated@@554)))
)))
(assert (forall (($generated@@555 T@U) ($generated@@556 T@U) ($generated@@557 T@U) ($generated@@558 T@U) ) (! (let (($generated@@559 (type $generated@@558)))
 (=> (and (and (and (= (type $generated@@555) ($generated@@79 $generated@@80 $generated@@81)) (= (type $generated@@556) $generated@@80)) (= (type $generated@@557) ($generated@@69 $generated@@559))) ($generated@@252 ($generated@@85 $generated@@555 $generated@@556 ($generated@@87 ($generated@@84 $generated@@555 $generated@@556) $generated@@557 $generated@@558)))) ($generated@@135 $generated@@555 ($generated@@85 $generated@@555 $generated@@556 ($generated@@87 ($generated@@84 $generated@@555 $generated@@556) $generated@@557 $generated@@558)))))
 :pattern ( ($generated@@85 $generated@@555 $generated@@556 ($generated@@87 ($generated@@84 $generated@@555 $generated@@556) $generated@@557 $generated@@558)))
)))
(assert (= ($generated@@75 $generated@@139) $generated@@63))
(assert (= ($generated@@541 $generated@@139) $generated@@66))
(assert (= ($generated@@75 $generated@@225) $generated@@64))
(assert (= ($generated@@541 $generated@@225) $generated@@66))
(assert (forall (($generated@@560 T@U) ($generated@@561 T@U) ($generated@@562 T@U) ) (!  (=> (and (and (= (type $generated@@560) ($generated@@79 $generated@@156 $generated@@2)) (= (type $generated@@561) $generated@@67)) (= (type $generated@@562) ($generated@@79 $generated@@80 $generated@@81))) (= ($generated@@77 $generated@@560 ($generated@@161 $generated@@561) $generated@@562) (forall (($generated@@563 T@U) ) (!  (=> (and (= (type $generated@@563) $generated@@156) (< 0 ($generated ($generated@@84 $generated@@560 $generated@@563)))) ($generated@@253 $generated@@563 $generated@@561 $generated@@562))
 :pattern ( ($generated@@84 $generated@@560 $generated@@563))
))))
 :pattern ( ($generated@@77 $generated@@560 ($generated@@161 $generated@@561) $generated@@562))
)))
(assert (forall (($generated@@564 T@U) ($generated@@565 T@U) ($generated@@566 T@U) ) (!  (=> (and (and (and (= (type $generated@@564) $generated@@147) (= (type $generated@@565) $generated@@67)) (= (type $generated@@566) ($generated@@79 $generated@@80 $generated@@81))) (and ($generated@@252 $generated@@566) (and ($generated@@145 $generated@@564) (exists (($generated@@567 T@U) ) (!  (and (= (type $generated@@567) $generated@@67) ($generated@@77 $generated@@564 ($generated@@146 $generated@@565 $generated@@567) $generated@@566))
 :pattern ( ($generated@@77 $generated@@564 ($generated@@146 $generated@@565 $generated@@567) $generated@@566))
))))) ($generated@@253 ($generated@@154 $generated@@564) $generated@@565 $generated@@566))
 :pattern ( ($generated@@253 ($generated@@154 $generated@@564) $generated@@565 $generated@@566))
)))
(assert (forall (($generated@@568 T@U) ($generated@@569 T@U) ($generated@@570 T@U) ) (!  (=> (and (and (and (= (type $generated@@568) $generated@@147) (= (type $generated@@569) $generated@@67)) (= (type $generated@@570) ($generated@@79 $generated@@80 $generated@@81))) (and ($generated@@252 $generated@@570) (and ($generated@@145 $generated@@568) (exists (($generated@@571 T@U) ) (!  (and (= (type $generated@@571) $generated@@67) ($generated@@77 $generated@@568 ($generated@@146 $generated@@571 $generated@@569) $generated@@570))
 :pattern ( ($generated@@77 $generated@@568 ($generated@@146 $generated@@571 $generated@@569) $generated@@570))
))))) ($generated@@253 ($generated@@155 $generated@@568) $generated@@569 $generated@@570))
 :pattern ( ($generated@@253 ($generated@@155 $generated@@568) $generated@@569 $generated@@570))
)))
(assert (forall (($generated@@572 T@U) ($generated@@573 T@U) ) (!  (=> (and (= (type $generated@@572) $generated@@156) (= (type $generated@@573) $generated@@156)) (= ($generated@@228 ($generated@@248 $generated@@572) ($generated@@248 $generated@@573)) ($generated@@248 ($generated@@228 $generated@@572 $generated@@573))))
 :pattern ( ($generated@@228 ($generated@@248 $generated@@572) ($generated@@248 $generated@@573)))
)))
(assert (forall (($generated@@574 T@U) ) (! (= ($generated@@276 ($generated@@248 $generated@@574)) ($generated@@248 ($generated@@276 $generated@@574)))
 :pattern ( ($generated@@276 ($generated@@248 $generated@@574)))
)))
(assert (forall (($generated@@575 T@U) ) (! (let (($generated@@576 ($generated@@268 (type $generated@@575))))
 (=> (and (= (type $generated@@575) ($generated@@267 $generated@@576)) (= ($generated@@266 $generated@@575) 0)) (= $generated@@575 ($generated@@265 $generated@@576))))
 :pattern ( ($generated@@266 $generated@@575))
)))
(assert (forall (($generated@@577 T@U) ($generated@@578 T@U) ($generated@@579 T@U) ) (! (let (($generated@@580 (type $generated@@578)))
 (=> (and (and (= (type $generated@@577) ($generated@@79 $generated@@580 $generated@@2)) (= (type $generated@@579) $generated@@2)) (<= 0 ($generated $generated@@579))) (= ($generated@@289 ($generated@@85 $generated@@577 $generated@@578 $generated@@579)) (+ (- ($generated@@289 $generated@@577) ($generated ($generated@@84 $generated@@577 $generated@@578))) ($generated $generated@@579)))))
 :pattern ( ($generated@@289 ($generated@@85 $generated@@577 $generated@@578 $generated@@579)))
)))
(assert (forall (($generated@@581 T@U) ($generated@@582 T@U) ) (!  (=> (and (= (type $generated@@581) ($generated@@79 $generated@@80 $generated@@81)) (= (type $generated@@582) $generated@@2)) ($generated@@77 $generated@@582 $generated@@46 $generated@@581))
 :pattern ( ($generated@@77 $generated@@582 $generated@@46 $generated@@581))
)))
(assert (forall (($generated@@583 T@U) ($generated@@584 T@U) ) (!  (=> (and (= (type $generated@@583) ($generated@@79 $generated@@80 $generated@@81)) (= (type $generated@@584) $generated@@3)) ($generated@@77 $generated@@584 $generated@@47 $generated@@583))
 :pattern ( ($generated@@77 $generated@@584 $generated@@47 $generated@@583))
)))
(assert (forall (($generated@@585 T@U) ($generated@@586 T@U) ) (!  (=> (and (= (type $generated@@585) ($generated@@79 $generated@@80 $generated@@81)) (= (type $generated@@586) $generated@@4)) ($generated@@77 $generated@@586 $generated@@44 $generated@@585))
 :pattern ( ($generated@@77 $generated@@586 $generated@@44 $generated@@585))
)))
(assert (forall (($generated@@587 T@U) ($generated@@588 T@U) ) (!  (=> (and (= (type $generated@@587) ($generated@@79 $generated@@80 $generated@@81)) (= (type $generated@@588) $generated@@444)) ($generated@@77 $generated@@588 $generated@@45 $generated@@587))
 :pattern ( ($generated@@77 $generated@@588 $generated@@45 $generated@@587))
)))
(assert (forall (($generated@@589 T@U) ($generated@@590 T@U) ) (!  (=> (and (= (type $generated@@589) ($generated@@79 $generated@@80 $generated@@81)) (= (type $generated@@590) $generated@@156)) ($generated@@77 $generated@@590 $generated@@48 $generated@@589))
 :pattern ( ($generated@@77 $generated@@590 $generated@@48 $generated@@589))
)))
(assert (forall (($generated@@591 T@U) ($generated@@592 T@U) ) (!  (=> (and (= (type $generated@@591) ($generated@@267 $generated@@156)) (= (type $generated@@592) $generated@@67)) (= ($generated@@143 $generated@@591 ($generated@@486 $generated@@592)) (forall (($generated@@593 Int) ) (!  (=> (and (<= 0 $generated@@593) (< $generated@@593 ($generated@@266 $generated@@591))) ($generated@@229 ($generated@@487 $generated@@591 $generated@@593) $generated@@592))
 :pattern ( ($generated@@487 $generated@@591 $generated@@593))
))))
 :pattern ( ($generated@@143 $generated@@591 ($generated@@486 $generated@@592)))
)))
(assert (forall (($generated@@595 T@U) ($generated@@596 Int) ) (!  (=> (= (type $generated@@595) ($generated@@267 $generated@@156)) (=> (and (<= 0 $generated@@596) (< $generated@@596 ($generated@@266 $generated@@595))) (< ($generated@@525 ($generated@@334 $generated@@147 ($generated@@487 $generated@@595 $generated@@596))) ($generated@@594 $generated@@595))))
 :pattern ( ($generated@@525 ($generated@@334 $generated@@147 ($generated@@487 $generated@@595 $generated@@596))))
)))
(assert (forall (($generated@@597 T@U) ($generated@@598 T@U) ($generated@@599 T@U) ) (!  (=> (and (and (and (= (type $generated@@597) ($generated@@297 $generated@@156 $generated@@156)) (= (type $generated@@598) $generated@@67)) (= (type $generated@@599) $generated@@67)) ($generated@@143 $generated@@597 ($generated@@401 $generated@@598 $generated@@599))) (and (and ($generated@@143 ($generated@@295 $generated@@597) ($generated@@238 $generated@@598)) ($generated@@143 ($generated@@344 $generated@@597) ($generated@@238 $generated@@599))) ($generated@@143 ($generated@@375 $generated@@597) ($generated@@238 ($generated@@146 $generated@@598 $generated@@599)))))
 :pattern ( ($generated@@143 $generated@@597 ($generated@@401 $generated@@598 $generated@@599)))
)))
(assert (forall (($generated@@600 T@U) ($generated@@601 T@U) ($generated@@602 T@U) ) (!  (=> (and (and (and (= (type $generated@@600) ($generated@@315 $generated@@156 $generated@@156)) (= (type $generated@@601) $generated@@67)) (= (type $generated@@602) $generated@@67)) ($generated@@143 $generated@@600 ($generated@@409 $generated@@601 $generated@@602))) (and (and ($generated@@143 ($generated@@313 $generated@@600) ($generated@@243 $generated@@601)) ($generated@@143 ($generated@@355 $generated@@600) ($generated@@243 $generated@@602))) ($generated@@143 ($generated@@383 $generated@@600) ($generated@@243 ($generated@@146 $generated@@601 $generated@@602)))))
 :pattern ( ($generated@@143 $generated@@600 ($generated@@409 $generated@@601 $generated@@602)))
)))
(assert (forall (($generated@@603 T@U) ) (!  (=> (= (type $generated@@603) $generated@@2) ($generated@@143 $generated@@603 $generated@@46))
 :pattern ( ($generated@@143 $generated@@603 $generated@@46))
)))
(assert (forall (($generated@@604 T@U) ) (!  (=> (= (type $generated@@604) $generated@@3) ($generated@@143 $generated@@604 $generated@@47))
 :pattern ( ($generated@@143 $generated@@604 $generated@@47))
)))
(assert (forall (($generated@@605 T@U) ) (!  (=> (= (type $generated@@605) $generated@@4) ($generated@@143 $generated@@605 $generated@@44))
 :pattern ( ($generated@@143 $generated@@605 $generated@@44))
)))
(assert (forall (($generated@@606 T@U) ) (!  (=> (= (type $generated@@606) $generated@@444) ($generated@@143 $generated@@606 $generated@@45))
 :pattern ( ($generated@@143 $generated@@606 $generated@@45))
)))
(assert (forall (($generated@@607 T@U) ) (!  (=> (= (type $generated@@607) $generated@@156) ($generated@@143 $generated@@607 $generated@@48))
 :pattern ( ($generated@@143 $generated@@607 $generated@@48))
)))
(push 1)
(declare-fun ControlFlow (Int Int) Int)
(declare-fun $generated@@608 (T@U) T@U)
(declare-fun $generated@@609 () T@U)
(declare-fun $generated@@610 () T@U)
(declare-fun $generated@@611 () T@U)
(declare-fun $generated@@612 () T@U)
(declare-fun $generated@@613 () Bool)
(declare-fun $generated@@614 (T@U) Bool)
(declare-fun $generated@@615 () T@U)
(declare-fun $generated@@616 () T@T)
(assert  (and (and (and (and (and (and (= ($generated@@1 $generated@@616) 21) (forall (($generated@@617 T@U) ) (! (= (type ($generated@@608 $generated@@617)) $generated@@616)
 :pattern ( ($generated@@608 $generated@@617))
))) (= (type $generated@@609) $generated@@616)) (= (type $generated@@610) $generated@@616)) (= (type $generated@@611) ($generated@@171 $generated@@80 $generated@@4))) (= (type $generated@@612) ($generated@@79 $generated@@80 $generated@@81))) (= (type $generated@@615) $generated@@80)))
(set-option :timeout 0)
(set-option :rlimit 0)
(assert (not
 (=> (= (ControlFlow 0 0) 3) (let (($generated@@618  (=> (= ($generated@@608 $generated@@609) $generated@@609) (=> (and (and (= ($generated@@608 $generated@@610) $generated@@610) (= $generated@@611 ($generated@@170 $generated@@140 $generated@@612 $generated@@60 false))) (and (= $generated@@613 $generated@@274) (= (ControlFlow 0 2) (- 0 1)))) (= $generated@@613 $generated@@274)))))
(let (($generated@@619  (=> (and ($generated@@252 $generated@@612) ($generated@@614 $generated@@612)) (=> (and (and (not (= $generated@@615 $generated@@140)) ($generated@@143 $generated@@615 $generated@@225)) (and (= 1 $generated@@273) (= (ControlFlow 0 3) 2))) $generated@@618))))
$generated@@619)))
))
(check-sat)
(pop 1)
; Valid
(get-info :rlimit)
(reset)
(set-option :rlimit 0)
; did a full reset
(reset)
(set-option :print-success false)
(set-info :smt-lib-version 2.6)
(set-option :auto_config false)
(set-option :type_check true)
(set-option :smt.case_split 3)
(set-option :smt.qi.eager_threshold 100)
(set-option :smt.delay_units true)
(set-option :smt.arith.solver 2)
(set-option :smt.mbqi false)
(set-option :model.compact false)
(set-option :model.v2 true)
(set-option :pp.bv_literals false)
; done setting options


(set-info :category "industrial")
(declare-sort |T@U| 0)
(declare-sort |T@T| 0)
(declare-fun real_pow (Real Real) Real)
(declare-fun UOrdering2 (|T@U| |T@U|) Bool)
(declare-fun UOrdering3 (|T@T| |T@U| |T@U|) Bool)
(declare-fun tickleBool (Bool) Bool)
(assert (and (tickleBool true) (tickleBool false)))
(declare-fun $generated (T@U) Int)
(declare-fun $generated@@0 (T@U) Bool)
(declare-fun $generated@@1 (T@T) Int)
(declare-fun $generated@@2 () T@T)
(declare-fun $generated@@3 () T@T)
(declare-fun $generated@@4 () T@T)
(declare-fun $generated@@5 () T@T)
(declare-fun $generated@@6 () T@T)
(declare-fun $generated@@7 () T@T)
(declare-fun $generated@@8 (Int) T@U)
(declare-fun type (T@U) T@T)
(declare-fun $generated@@9 (Real) T@U)
(declare-fun $generated@@10 (T@U) Real)
(declare-fun $generated@@11 (Bool) T@U)
(declare-fun $generated@@12 (RoundingMode) T@U)
(declare-fun $generated@@13 (T@U) RoundingMode)
(declare-fun $generated@@14 (String) T@U)
(declare-fun $generated@@15 (T@U) String)
(declare-fun $generated@@16 ((RegEx String)) T@U)
(declare-fun $generated@@17 (T@U) (RegEx String))
(declare-fun $generated@@44 () T@U)
(declare-fun $generated@@45 () T@U)
(declare-fun $generated@@46 () T@U)
(declare-fun $generated@@47 () T@U)
(declare-fun $generated@@48 () T@U)
(declare-fun $generated@@49 () T@U)
(declare-fun $generated@@50 () T@U)
(declare-fun $generated@@51 () T@U)
(declare-fun $generated@@52 () T@U)
(declare-fun $generated@@53 () T@U)
(declare-fun $generated@@54 () T@U)
(declare-fun $generated@@55 () T@U)
(declare-fun $generated@@56 () T@U)
(declare-fun $generated@@57 () T@U)
(declare-fun $generated@@58 () T@U)
(declare-fun $generated@@59 () T@U)
(declare-fun $generated@@60 () T@U)
(declare-fun $generated@@61 () T@U)
(declare-fun $generated@@62 () T@U)
(declare-fun $generated@@63 () T@U)
(declare-fun $generated@@64 () T@U)
(declare-fun $generated@@65 () T@U)
(declare-fun $generated@@66 () T@U)
(declare-fun $generated@@67 () T@T)
(declare-fun $generated@@68 () T@T)
(declare-fun $generated@@69 (T@T) T@T)
(declare-fun $generated@@70 (T@T) T@T)
(declare-fun $generated@@71 () T@T)
(declare-fun $generated@@72 () T@T)
(declare-fun $generated@@75 (T@U) T@U)
(declare-fun $generated@@77 (T@U T@U T@U) Bool)
(declare-fun $generated@@78 (Int) T@U)
(declare-fun $generated@@79 (T@T T@T) T@T)
(declare-fun $generated@@80 () T@T)
(declare-fun $generated@@81 () T@T)
(declare-fun $generated@@82 (T@T) T@T)
(declare-fun $generated@@83 (T@T) T@T)
(declare-fun $generated@@84 (T@U T@U) T@U)
(declare-fun $generated@@85 (T@U T@U T@U) T@U)
(declare-fun $generated@@86 (T@U T@U) T@U)
(declare-fun $generated@@87 (T@U T@U T@U) T@U)
(declare-fun $generated@@135 (T@U T@U) Bool)
(declare-fun $generated@@139 () T@U)
(declare-fun $generated@@140 () T@U)
(declare-fun $generated@@143 (T@U T@U) Bool)
(declare-fun $generated@@145 (T@U) Bool)
(declare-fun $generated@@146 (T@U T@U) T@U)
(declare-fun $generated@@147 () T@T)
(declare-fun $generated@@153 (T@U T@U) Bool)
(declare-fun $generated@@154 (T@U) T@U)
(declare-fun $generated@@155 (T@U) T@U)
(declare-fun $generated@@156 () T@T)
(declare-fun $generated@@161 (T@U) T@U)
(declare-fun $generated@@162 (T@U) Bool)
(declare-fun $generated@@166 (T@U) T@U)
(declare-fun $generated@@169 (T@U T@U T@U) T@U)
(declare-fun $generated@@170 (T@U T@U T@U Bool) T@U)
(declare-fun $generated@@171 (T@T T@T) T@T)
(declare-fun $generated@@172 (T@T) T@T)
(declare-fun $generated@@173 (T@T) T@T)
(declare-fun $generated@@174 (T@U T@U T@U T@U) T@U)
(declare-fun $generated@@225 () T@U)
(declare-fun $generated@@228 (T@U T@U) T@U)
(declare-fun $generated@@229 (T@U T@U) Bool)
(declare-fun $generated@@238 (T@U) T@U)
(declare-fun $generated@@243 (T@U) T@U)
(declare-fun $generated@@248 (Int) Int)
(declare-fun $generated@@250 (T@U) T@U)
(declare-fun $generated@@254 (T@U) Bool)
(declare-fun $generated@@255 (T@U T@U T@U) Bool)
(declare-fun $generated@@261 (T@U) T@U)
(declare-fun $generated@@267 (T@T) T@U)
(declare-fun $generated@@268 (T@U) Int)
(declare-fun $generated@@269 (T@T) T@T)
(declare-fun $generated@@270 (T@T) T@T)
(declare-fun $generated@@275 (T@U) T@U)
(declare-fun $generated@@288 (T@U) Int)
(declare-fun $generated@@289 (T@T) T@U)
(declare-fun $generated@@294 (T@U) T@U)
(declare-fun $generated@@295 (T@T T@T) T@U)
(declare-fun $generated@@296 (T@T T@T) T@T)
(declare-fun $generated@@297 (T@T) T@T)
(declare-fun $generated@@298 (T@T) T@T)
(declare-fun $generated@@312 (T@U) T@U)
(declare-fun $generated@@313 (T@T T@T) T@U)
(declare-fun $generated@@314 (T@T T@T) T@T)
(declare-fun $generated@@315 (T@T) T@T)
(declare-fun $generated@@316 (T@T) T@T)
(declare-fun $generated@@333 (T@T T@U) T@U)
(declare-fun $generated@@343 (T@U) T@U)
(declare-fun $generated@@354 (T@U) T@U)
(declare-fun $generated@@374 (T@U) T@U)
(declare-fun $generated@@375 (T@U) T@U)
(declare-fun $generated@@382 (T@U) T@U)
(declare-fun $generated@@383 (T@U) T@U)
(declare-fun $generated@@400 (T@U T@U) T@U)
(declare-fun $generated@@408 (T@U T@U) T@U)
(declare-fun $generated@@419 (T@T) T@U)
(declare-fun $generated@@443 () T@T)
(declare-fun $generated@@451 (T@U) T@U)
(declare-fun $generated@@455 (T@U) T@U)
(declare-fun $generated@@461 (T@U) T@U)
(declare-fun $generated@@465 (T@U) T@U)
(declare-fun $generated@@473 (T@U) T@U)
(declare-fun $generated@@477 (T@U) T@U)
(declare-fun $generated@@485 (T@U) T@U)
(declare-fun $generated@@486 (T@U Int) T@U)
(declare-fun $generated@@495 (T@U) Int)
(declare-fun $generated@@497 (T@U) T@U)
(declare-fun $generated@@501 (T@U) T@U)
(declare-fun $generated@@505 (T@U) T@U)
(declare-fun $generated@@509 (T@U) T@U)
(declare-fun $generated@@523 (T@U) Int)
(declare-fun $generated@@524 (T@U) Int)
(declare-fun $generated@@540 (T@U) T@U)
(declare-fun $generated@@589 (T@U) Int)
(assert  (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (= ($generated@@1 $generated@@2) 0) (= ($generated@@1 $generated@@3) 1)) (= ($generated@@1 $generated@@4) 2)) (= ($generated@@1 $generated@@5) 3)) (= ($generated@@1 $generated@@6) 4)) (= ($generated@@1 $generated@@7) 5)) (forall (($generated@@18 Int) ) (! (= ($generated ($generated@@8 $generated@@18)) $generated@@18)
 :pattern ( ($generated@@8 $generated@@18))
))) (forall (($generated@@19 T@U) ) (!  (=> (= (type $generated@@19) $generated@@2) (= ($generated@@8 ($generated $generated@@19)) $generated@@19))
 :pattern ( ($generated $generated@@19))
))) (forall (($generated@@20 Int) ) (! (= (type ($generated@@8 $generated@@20)) $generated@@2)
 :pattern ( ($generated@@8 $generated@@20))
))) (forall (($generated@@21 Real) ) (! (= ($generated@@10 ($generated@@9 $generated@@21)) $generated@@21)
 :pattern ( ($generated@@9 $generated@@21))
))) (forall (($generated@@22 T@U) ) (!  (=> (= (type $generated@@22) $generated@@3) (= ($generated@@9 ($generated@@10 $generated@@22)) $generated@@22))
 :pattern ( ($generated@@10 $generated@@22))
))) (forall (($generated@@23 Real) ) (! (= (type ($generated@@9 $generated@@23)) $generated@@3)
 :pattern ( ($generated@@9 $generated@@23))
))) (forall (($generated@@24 Bool) ) (! (= ($generated@@0 ($generated@@11 $generated@@24)) $generated@@24)
 :pattern ( ($generated@@11 $generated@@24))
))) (forall (($generated@@25 T@U) ) (!  (=> (= (type $generated@@25) $generated@@4) (= ($generated@@11 ($generated@@0 $generated@@25)) $generated@@25))
 :pattern ( ($generated@@0 $generated@@25))
))) (forall (($generated@@26 Bool) ) (! (= (type ($generated@@11 $generated@@26)) $generated@@4)
 :pattern ( ($generated@@11 $generated@@26))
))) (forall (($generated@@27 RoundingMode) ) (! (= ($generated@@13 ($generated@@12 $generated@@27)) $generated@@27)
 :pattern ( ($generated@@12 $generated@@27))
))) (forall (($generated@@28 T@U) ) (!  (=> (= (type $generated@@28) $generated@@5) (= ($generated@@12 ($generated@@13 $generated@@28)) $generated@@28))
 :pattern ( ($generated@@13 $generated@@28))
))) (forall (($generated@@29 RoundingMode) ) (! (= (type ($generated@@12 $generated@@29)) $generated@@5)
 :pattern ( ($generated@@12 $generated@@29))
))) (forall (($generated@@30 String) ) (! (= ($generated@@15 ($generated@@14 $generated@@30)) $generated@@30)
 :pattern ( ($generated@@14 $generated@@30))
))) (forall (($generated@@31 T@U) ) (!  (=> (= (type $generated@@31) $generated@@6) (= ($generated@@14 ($generated@@15 $generated@@31)) $generated@@31))
 :pattern ( ($generated@@15 $generated@@31))
))) (forall (($generated@@32 String) ) (! (= (type ($generated@@14 $generated@@32)) $generated@@6)
 :pattern ( ($generated@@14 $generated@@32))
))) (forall (($generated@@33 (RegEx String)) ) (! (= ($generated@@17 ($generated@@16 $generated@@33)) $generated@@33)
 :pattern ( ($generated@@16 $generated@@33))
))) (forall (($generated@@34 T@U) ) (!  (=> (= (type $generated@@34) $generated@@7) (= ($generated@@16 ($generated@@17 $generated@@34)) $generated@@34))
 :pattern ( ($generated@@17 $generated@@34))
))) (forall (($generated@@35 (RegEx String)) ) (! (= (type ($generated@@16 $generated@@35)) $generated@@7)
 :pattern ( ($generated@@16 $generated@@35))
))))
(assert (forall (($generated@@36 T@U) ) (! (UOrdering2 $generated@@36 $generated@@36)
 :no-pattern ($generated $generated@@36)
 :no-pattern ($generated@@0 $generated@@36)
)))
(assert (forall (($generated@@37 T@U) ($generated@@38 T@U) ($generated@@39 T@U) ) (! (let (($generated@@40 (type $generated@@37)))
 (=> (and (and (= (type $generated@@38) $generated@@40) (= (type $generated@@39) $generated@@40)) (and (UOrdering2 $generated@@37 $generated@@38) (UOrdering2 $generated@@38 $generated@@39))) (UOrdering2 $generated@@37 $generated@@39)))
 :pattern ( (UOrdering2 $generated@@37 $generated@@38) (UOrdering2 $generated@@38 $generated@@39))
)))
(assert (forall (($generated@@41 T@U) ($generated@@42 T@U) ) (! (let (($generated@@43 (type $generated@@41)))
 (=> (= (type $generated@@42) $generated@@43) (=> (and (UOrdering2 $generated@@41 $generated@@42) (UOrdering2 $generated@@42 $generated@@41)) (= $generated@@41 $generated@@42))))
 :pattern ( (UOrdering2 $generated@@41 $generated@@42) (UOrdering2 $generated@@42 $generated@@41))
)))
(assert  (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (= ($generated@@1 $generated@@67) 6) (= (type $generated@@44) $generated@@67)) (= (type $generated@@45) $generated@@67)) (= (type $generated@@46) $generated@@67)) (= (type $generated@@47) $generated@@67)) (= (type $generated@@48) $generated@@67)) (= ($generated@@1 $generated@@68) 7)) (= (type $generated@@49) $generated@@68)) (= (type $generated@@50) $generated@@68)) (= (type $generated@@51) $generated@@68)) (= (type $generated@@52) $generated@@68)) (= (type $generated@@53) $generated@@68)) (= (type $generated@@54) $generated@@68)) (= (type $generated@@55) $generated@@68)) (= (type $generated@@56) $generated@@68)) (= (type $generated@@57) $generated@@68)) (= (type $generated@@58) $generated@@68)) (= (type $generated@@59) $generated@@68)) (forall (($generated@@73 T@T) ) (= ($generated@@1 ($generated@@69 $generated@@73)) 8))) (forall (($generated@@74 T@T) ) (! (= ($generated@@70 ($generated@@69 $generated@@74)) $generated@@74)
 :pattern ( ($generated@@69 $generated@@74))
))) (= (type $generated@@60) ($generated@@69 $generated@@4))) (= ($generated@@1 $generated@@71) 9)) (= (type $generated@@61) $generated@@71)) (= (type $generated@@62) $generated@@68)) (= (type $generated@@63) $generated@@68)) (= (type $generated@@64) $generated@@68)) (= ($generated@@1 $generated@@72) 10)) (= (type $generated@@65) $generated@@72)) (= (type $generated@@66) $generated@@72)))
(assert (distinct $generated@@44 $generated@@45 $generated@@46 $generated@@47 $generated@@48 $generated@@49 $generated@@50 $generated@@51 $generated@@52 $generated@@53 $generated@@54 $generated@@55 $generated@@56 $generated@@57 $generated@@58 $generated@@59 $generated@@60 $generated@@61 $generated@@62 $generated@@63 $generated@@64 $generated@@65 $generated@@66)
)
(assert (forall (($generated@@76 T@U) ) (! (= (type ($generated@@75 $generated@@76)) $generated@@68)
 :pattern ( ($generated@@75 $generated@@76))
)))
(assert (= ($generated@@75 $generated@@44) $generated@@49))
(assert (= ($generated@@75 $generated@@45) $generated@@50))
(assert (= ($generated@@75 $generated@@46) $generated@@51))
(assert (= ($generated@@75 $generated@@47) $generated@@52))
(assert (= ($generated@@75 $generated@@48) $generated@@53))
(assert  (and (and (and (and (and (and (and (and (and (and (and (and (and (forall (($generated@@88 T@T) ($generated@@89 T@T) ) (= ($generated@@1 ($generated@@79 $generated@@88 $generated@@89)) 11)) (forall (($generated@@90 T@T) ($generated@@91 T@T) ) (! (= ($generated@@82 ($generated@@79 $generated@@90 $generated@@91)) $generated@@90)
 :pattern ( ($generated@@79 $generated@@90 $generated@@91))
))) (forall (($generated@@92 T@T) ($generated@@93 T@T) ) (! (= ($generated@@83 ($generated@@79 $generated@@92 $generated@@93)) $generated@@93)
 :pattern ( ($generated@@79 $generated@@92 $generated@@93))
))) (forall (($generated@@94 T@U) ($generated@@95 T@U) ) (! (let (($generated@@96 ($generated@@83 (type $generated@@94))))
(= (type ($generated@@84 $generated@@94 $generated@@95)) $generated@@96))
 :pattern ( ($generated@@84 $generated@@94 $generated@@95))
))) (forall (($generated@@97 T@U) ($generated@@98 T@U) ($generated@@99 T@U) ) (! (let (($generated@@100 (type $generated@@99)))
(let (($generated@@101 (type $generated@@98)))
(= (type ($generated@@85 $generated@@97 $generated@@98 $generated@@99)) ($generated@@79 $generated@@101 $generated@@100))))
 :pattern ( ($generated@@85 $generated@@97 $generated@@98 $generated@@99))
))) (forall (($generated@@102 T@U) ($generated@@103 T@U) ($generated@@104 T@U) ) (! (let (($generated@@105 ($generated@@83 (type $generated@@102))))
 (=> (= (type $generated@@104) $generated@@105) (= ($generated@@84 ($generated@@85 $generated@@102 $generated@@103 $generated@@104) $generated@@103) $generated@@104)))
 :weight 0
))) (and (forall (($generated@@106 T@U) ($generated@@107 T@U) ($generated@@108 T@U) ($generated@@109 T@U) ) (!  (or (= $generated@@108 $generated@@109) (= ($generated@@84 ($generated@@85 $generated@@107 $generated@@108 $generated@@106) $generated@@109) ($generated@@84 $generated@@107 $generated@@109)))
 :weight 0
)) (forall (($generated@@110 T@U) ($generated@@111 T@U) ($generated@@112 T@U) ($generated@@113 T@U) ) (!  (or true (= ($generated@@84 ($generated@@85 $generated@@111 $generated@@112 $generated@@110) $generated@@113) ($generated@@84 $generated@@111 $generated@@113)))
 :weight 0
)))) (= ($generated@@1 $generated@@80) 12)) (forall (($generated@@114 T@U) ($generated@@115 T@U) ) (! (let (($generated@@116 ($generated@@70 (type $generated@@115))))
(= (type ($generated@@86 $generated@@114 $generated@@115)) $generated@@116))
 :pattern ( ($generated@@86 $generated@@114 $generated@@115))
))) (= ($generated@@1 $generated@@81) 13)) (forall (($generated@@117 T@U) ($generated@@118 T@U) ($generated@@119 T@U) ) (! (= (type ($generated@@87 $generated@@117 $generated@@118 $generated@@119)) $generated@@81)
 :pattern ( ($generated@@87 $generated@@117 $generated@@118 $generated@@119))
))) (forall (($generated@@120 T@U) ($generated@@121 T@U) ($generated@@122 T@U) ) (! (let (($generated@@123 ($generated@@70 (type $generated@@121))))
 (=> (= (type $generated@@122) $generated@@123) (= ($generated@@86 ($generated@@87 $generated@@120 $generated@@121 $generated@@122) $generated@@121) $generated@@122)))
 :weight 0
))) (and (forall (($generated@@124 T@U) ($generated@@125 T@U) ($generated@@126 T@U) ($generated@@127 T@U) ) (!  (or (= $generated@@126 $generated@@127) (= ($generated@@86 ($generated@@87 $generated@@125 $generated@@126 $generated@@124) $generated@@127) ($generated@@86 $generated@@125 $generated@@127)))
 :weight 0
)) (forall (($generated@@128 T@U) ($generated@@129 T@U) ($generated@@130 T@U) ($generated@@131 T@U) ) (!  (or true (= ($generated@@86 ($generated@@87 $generated@@129 $generated@@130 $generated@@128) $generated@@131) ($generated@@86 $generated@@129 $generated@@131)))
 :weight 0
)))) (forall (($generated@@132 Int) ) (! (= (type ($generated@@78 $generated@@132)) $generated@@67)
 :pattern ( ($generated@@78 $generated@@132))
))))
(assert (forall (($generated@@133 T@U) ($generated@@134 T@U) ) (!  (=> (and (= (type $generated@@133) $generated@@2) (= (type $generated@@134) ($generated@@79 $generated@@80 $generated@@81))) ($generated@@77 $generated@@133 ($generated@@78 0) $generated@@134))
 :pattern ( ($generated@@77 $generated@@133 ($generated@@78 0) $generated@@134))
)))
(assert (forall (($generated@@136 T@U) ($generated@@137 T@U) ) (!  (=> (and (and (= (type $generated@@136) ($generated@@79 $generated@@80 $generated@@81)) (= (type $generated@@137) ($generated@@79 $generated@@80 $generated@@81))) ($generated@@135 $generated@@136 $generated@@137)) (forall (($generated@@138 T@U) ) (!  (=> (and (= (type $generated@@138) $generated@@80) ($generated@@0 ($generated@@86 ($generated@@84 $generated@@136 $generated@@138) $generated@@60))) ($generated@@0 ($generated@@86 ($generated@@84 $generated@@137 $generated@@138) $generated@@60)))
 :pattern ( ($generated@@86 ($generated@@84 $generated@@137 $generated@@138) $generated@@60))
)))
 :pattern ( ($generated@@135 $generated@@136 $generated@@137))
)))
(assert  (and (= (type $generated@@139) $generated@@67) (= (type $generated@@140) $generated@@80)))
(assert (forall (($generated@@141 T@U) ($generated@@142 T@U) ) (!  (=> (and (= (type $generated@@141) $generated@@80) (= (type $generated@@142) ($generated@@79 $generated@@80 $generated@@81))) (= ($generated@@77 $generated@@141 $generated@@139 $generated@@142)  (or (= $generated@@141 $generated@@140) ($generated@@0 ($generated@@86 ($generated@@84 $generated@@142 $generated@@141) $generated@@60)))))
 :pattern ( ($generated@@77 $generated@@141 $generated@@139 $generated@@142))
)))
(assert (forall (($generated@@144 T@U) ) (!  (=> (= (type $generated@@144) $generated@@2) ($generated@@143 $generated@@144 ($generated@@78 0)))
 :pattern ( ($generated@@143 $generated@@144 ($generated@@78 0)))
)))
(assert  (and (= ($generated@@1 $generated@@147) 14) (forall (($generated@@148 T@U) ($generated@@149 T@U) ) (! (= (type ($generated@@146 $generated@@148 $generated@@149)) $generated@@67)
 :pattern ( ($generated@@146 $generated@@148 $generated@@149))
))))
(assert (forall (($generated@@150 T@U) ($generated@@151 T@U) ($generated@@152 T@U) ) (!  (=> (and (and (and (= (type $generated@@150) $generated@@67) (= (type $generated@@151) $generated@@67)) (= (type $generated@@152) $generated@@147)) ($generated@@143 $generated@@152 ($generated@@146 $generated@@150 $generated@@151))) ($generated@@145 $generated@@152))
 :pattern ( ($generated@@145 $generated@@152) ($generated@@143 $generated@@152 ($generated@@146 $generated@@150 $generated@@151)))
)))
(assert  (and (and (= ($generated@@1 $generated@@156) 15) (forall (($generated@@157 T@U) ) (! (= (type ($generated@@154 $generated@@157)) $generated@@156)
 :pattern ( ($generated@@154 $generated@@157))
))) (forall (($generated@@158 T@U) ) (! (= (type ($generated@@155 $generated@@158)) $generated@@156)
 :pattern ( ($generated@@155 $generated@@158))
))))
(assert (forall (($generated@@159 T@U) ($generated@@160 T@U) ) (!  (=> (and (and (= (type $generated@@159) $generated@@147) (= (type $generated@@160) $generated@@147)) true) (= ($generated@@153 $generated@@159 $generated@@160)  (and (= ($generated@@154 $generated@@159) ($generated@@154 $generated@@160)) (= ($generated@@155 $generated@@159) ($generated@@155 $generated@@160)))))
 :pattern ( ($generated@@153 $generated@@159 $generated@@160))
)))
(assert (forall (($generated@@163 T@U) ) (! (= (type ($generated@@161 $generated@@163)) $generated@@67)
 :pattern ( ($generated@@161 $generated@@163))
)))
(assert (forall (($generated@@164 T@U) ($generated@@165 T@U) ) (!  (=> (and (and (= (type $generated@@164) ($generated@@79 $generated@@156 $generated@@2)) (= (type $generated@@165) $generated@@67)) ($generated@@143 $generated@@164 ($generated@@161 $generated@@165))) ($generated@@162 $generated@@164))
 :pattern ( ($generated@@143 $generated@@164 ($generated@@161 $generated@@165)))
)))
(assert (forall (($generated@@167 T@U) ) (! (= (type ($generated@@166 $generated@@167)) $generated@@67)
 :pattern ( ($generated@@166 $generated@@167))
)))
(assert (forall (($generated@@168 T@U) ) (!  (=> (= (type $generated@@168) $generated@@80) (= ($generated@@143 $generated@@168 $generated@@139)  (or (= $generated@@168 $generated@@140) (= ($generated@@166 $generated@@168) $generated@@139))))
 :pattern ( ($generated@@143 $generated@@168 $generated@@139))
)))
(assert  (and (and (and (and (and (and (and (forall (($generated@@175 T@T) ($generated@@176 T@T) ) (= ($generated@@1 ($generated@@171 $generated@@175 $generated@@176)) 16)) (forall (($generated@@177 T@T) ($generated@@178 T@T) ) (! (= ($generated@@172 ($generated@@171 $generated@@177 $generated@@178)) $generated@@177)
 :pattern ( ($generated@@171 $generated@@177 $generated@@178))
))) (forall (($generated@@179 T@T) ($generated@@180 T@T) ) (! (= ($generated@@173 ($generated@@171 $generated@@179 $generated@@180)) $generated@@180)
 :pattern ( ($generated@@171 $generated@@179 $generated@@180))
))) (forall (($generated@@181 T@U) ($generated@@182 T@U) ($generated@@183 T@U) ) (! (let (($generated@@184 ($generated@@173 (type $generated@@181))))
(= (type ($generated@@169 $generated@@181 $generated@@182 $generated@@183)) $generated@@184))
 :pattern ( ($generated@@169 $generated@@181 $generated@@182 $generated@@183))
))) (forall (($generated@@185 T@U) ($generated@@186 T@U) ($generated@@187 T@U) ($generated@@188 T@U) ) (! (let (($generated@@189 (type $generated@@188)))
(let (($generated@@190 (type $generated@@186)))
(= (type ($generated@@174 $generated@@185 $generated@@186 $generated@@187 $generated@@188)) ($generated@@171 $generated@@190 $generated@@189))))
 :pattern ( ($generated@@174 $generated@@185 $generated@@186 $generated@@187 $generated@@188))
))) (forall (($generated@@191 T@U) ($generated@@192 T@U) ($generated@@193 T@U) ($generated@@194 T@U) ) (! (let (($generated@@195 ($generated@@173 (type $generated@@191))))
 (=> (= (type $generated@@194) $generated@@195) (= ($generated@@169 ($generated@@174 $generated@@191 $generated@@192 $generated@@193 $generated@@194) $generated@@192 $generated@@193) $generated@@194)))
 :weight 0
))) (and (and (forall (($generated@@196 T@U) ($generated@@197 T@U) ($generated@@198 T@U) ($generated@@199 T@U) ($generated@@200 T@U) ($generated@@201 T@U) ) (!  (or (= $generated@@198 $generated@@200) (= ($generated@@169 ($generated@@174 $generated@@197 $generated@@198 $generated@@199 $generated@@196) $generated@@200 $generated@@201) ($generated@@169 $generated@@197 $generated@@200 $generated@@201)))
 :weight 0
)) (forall (($generated@@202 T@U) ($generated@@203 T@U) ($generated@@204 T@U) ($generated@@205 T@U) ($generated@@206 T@U) ($generated@@207 T@U) ) (!  (or (= $generated@@205 $generated@@207) (= ($generated@@169 ($generated@@174 $generated@@203 $generated@@204 $generated@@205 $generated@@202) $generated@@206 $generated@@207) ($generated@@169 $generated@@203 $generated@@206 $generated@@207)))
 :weight 0
))) (forall (($generated@@208 T@U) ($generated@@209 T@U) ($generated@@210 T@U) ($generated@@211 T@U) ($generated@@212 T@U) ($generated@@213 T@U) ) (!  (or true (= ($generated@@169 ($generated@@174 $generated@@209 $generated@@210 $generated@@211 $generated@@208) $generated@@212 $generated@@213) ($generated@@169 $generated@@209 $generated@@212 $generated@@213)))
 :weight 0
)))) (forall (($generated@@214 T@U) ($generated@@215 T@U) ($generated@@216 T@U) ($generated@@217 Bool) ) (! (= (type ($generated@@170 $generated@@214 $generated@@215 $generated@@216 $generated@@217)) ($generated@@171 $generated@@80 $generated@@4))
 :pattern ( ($generated@@170 $generated@@214 $generated@@215 $generated@@216 $generated@@217))
))))
(assert (forall (($generated@@218 T@U) ($generated@@219 T@U) ($generated@@220 T@U) ($generated@@221 Bool) ($generated@@222 T@U) ($generated@@223 T@U) ) (! (let (($generated@@224 ($generated@@70 (type $generated@@223))))
 (=> (and (and (and (and (= (type $generated@@218) $generated@@80) (= (type $generated@@219) ($generated@@79 $generated@@80 $generated@@81))) (= (type $generated@@220) ($generated@@69 $generated@@4))) (= (type $generated@@222) $generated@@80)) (= (type $generated@@223) ($generated@@69 $generated@@224))) (= ($generated@@0 ($generated@@169 ($generated@@170 $generated@@218 $generated@@219 $generated@@220 $generated@@221) $generated@@222 $generated@@223))  (=> (and (not (= $generated@@222 $generated@@218)) ($generated@@0 ($generated@@86 ($generated@@84 $generated@@219 $generated@@222) $generated@@220))) $generated@@221))))
 :pattern ( ($generated@@169 ($generated@@170 $generated@@218 $generated@@219 $generated@@220 $generated@@221) $generated@@222 $generated@@223))
)))
(assert (= (type $generated@@225) $generated@@67))
(assert (forall (($generated@@226 T@U) ($generated@@227 T@U) ) (!  (=> (and (= (type $generated@@226) $generated@@80) (= (type $generated@@227) ($generated@@79 $generated@@80 $generated@@81))) (= ($generated@@77 $generated@@226 $generated@@225 $generated@@227) ($generated@@77 $generated@@226 $generated@@139 $generated@@227)))
 :pattern ( ($generated@@77 $generated@@226 $generated@@225 $generated@@227))
)))
(assert (forall (($generated@@230 T@U) ($generated@@231 T@U) ) (! (= (type ($generated@@228 $generated@@230 $generated@@231)) $generated@@147)
 :pattern ( ($generated@@228 $generated@@230 $generated@@231))
)))
(assert (forall (($generated@@232 T@U) ($generated@@233 T@U) ($generated@@234 T@U) ($generated@@235 T@U) ) (!  (=> (and (and (and (= (type $generated@@232) $generated@@67) (= (type $generated@@233) $generated@@67)) (= (type $generated@@234) $generated@@156)) (= (type $generated@@235) $generated@@156)) (= ($generated@@143 ($generated@@228 $generated@@234 $generated@@235) ($generated@@146 $generated@@232 $generated@@233))  (and ($generated@@229 $generated@@234 $generated@@232) ($generated@@229 $generated@@235 $generated@@233))))
 :pattern ( ($generated@@143 ($generated@@228 $generated@@234 $generated@@235) ($generated@@146 $generated@@232 $generated@@233)))
)))
(assert (forall (($generated@@236 T@U) ($generated@@237 T@U) ) (!  (=> (and (= (type $generated@@236) $generated@@147) (= (type $generated@@237) $generated@@147)) (= ($generated@@153 $generated@@236 $generated@@237) (= $generated@@236 $generated@@237)))
 :pattern ( ($generated@@153 $generated@@236 $generated@@237))
)))
(assert (forall (($generated@@239 T@U) ) (! (= (type ($generated@@238 $generated@@239)) $generated@@67)
 :pattern ( ($generated@@238 $generated@@239))
)))
(assert (forall (($generated@@240 T@U) ($generated@@241 T@U) ) (!  (=> (and (= (type $generated@@240) ($generated@@79 $generated@@156 $generated@@4)) (= (type $generated@@241) $generated@@67)) (= ($generated@@143 $generated@@240 ($generated@@238 $generated@@241)) (forall (($generated@@242 T@U) ) (!  (=> (and (= (type $generated@@242) $generated@@156) ($generated@@0 ($generated@@84 $generated@@240 $generated@@242))) ($generated@@229 $generated@@242 $generated@@241))
 :pattern ( ($generated@@84 $generated@@240 $generated@@242))
))))
 :pattern ( ($generated@@143 $generated@@240 ($generated@@238 $generated@@241)))
)))
(assert (forall (($generated@@244 T@U) ) (! (= (type ($generated@@243 $generated@@244)) $generated@@67)
 :pattern ( ($generated@@243 $generated@@244))
)))
(assert (forall (($generated@@245 T@U) ($generated@@246 T@U) ) (!  (=> (and (= (type $generated@@245) ($generated@@79 $generated@@156 $generated@@4)) (= (type $generated@@246) $generated@@67)) (= ($generated@@143 $generated@@245 ($generated@@243 $generated@@246)) (forall (($generated@@247 T@U) ) (!  (=> (and (= (type $generated@@247) $generated@@156) ($generated@@0 ($generated@@84 $generated@@245 $generated@@247))) ($generated@@229 $generated@@247 $generated@@246))
 :pattern ( ($generated@@84 $generated@@245 $generated@@247))
))))
 :pattern ( ($generated@@143 $generated@@245 ($generated@@243 $generated@@246)))
)))
(assert (forall (($generated@@249 Int) ) (! (= ($generated@@248 $generated@@249) $generated@@249)
 :pattern ( ($generated@@248 $generated@@249))
)))
(assert (forall (($generated@@251 T@U) ) (! (let (($generated@@252 (type $generated@@251)))
(= (type ($generated@@250 $generated@@251)) $generated@@252))
 :pattern ( ($generated@@250 $generated@@251))
)))
(assert (forall (($generated@@253 T@U) ) (! (= ($generated@@250 $generated@@253) $generated@@253)
 :pattern ( ($generated@@250 $generated@@253))
)))
(assert (forall (($generated@@256 T@U) ($generated@@257 T@U) ($generated@@258 T@U) ($generated@@259 T@U) ($generated@@260 T@U) ) (!  (=> (and (and (and (and (and (= (type $generated@@256) $generated@@67) (= (type $generated@@257) $generated@@67)) (= (type $generated@@258) $generated@@156)) (= (type $generated@@259) $generated@@156)) (= (type $generated@@260) ($generated@@79 $generated@@80 $generated@@81))) ($generated@@254 $generated@@260)) (= ($generated@@77 ($generated@@228 $generated@@258 $generated@@259) ($generated@@146 $generated@@256 $generated@@257) $generated@@260)  (and ($generated@@255 $generated@@258 $generated@@256 $generated@@260) ($generated@@255 $generated@@259 $generated@@257 $generated@@260))))
 :pattern ( ($generated@@77 ($generated@@228 $generated@@258 $generated@@259) ($generated@@146 $generated@@256 $generated@@257) $generated@@260))
)))
(assert (forall (($generated@@262 T@U) ) (! (= (type ($generated@@261 $generated@@262)) $generated@@71)
 :pattern ( ($generated@@261 $generated@@262))
)))
(assert (forall (($generated@@263 T@U) ) (!  (=> (= (type $generated@@263) $generated@@147) (= ($generated@@145 $generated@@263) (= ($generated@@261 $generated@@263) $generated@@61)))
 :pattern ( ($generated@@145 $generated@@263))
)))
(assert (forall (($generated@@264 T@U) ) (!  (=> (and (= (type $generated@@264) $generated@@147) ($generated@@145 $generated@@264)) (exists (($generated@@265 T@U) ($generated@@266 T@U) ) (!  (and (and (= (type $generated@@265) $generated@@156) (= (type $generated@@266) $generated@@156)) (= $generated@@264 ($generated@@228 $generated@@265 $generated@@266)))
 :no-pattern (type $generated@@265)
 :no-pattern (type $generated@@266)
 :no-pattern ($generated $generated@@265)
 :no-pattern ($generated@@0 $generated@@265)
 :no-pattern ($generated $generated@@266)
 :no-pattern ($generated@@0 $generated@@266)
)))
 :pattern ( ($generated@@145 $generated@@264))
)))
(assert  (and (and (forall (($generated@@271 T@T) ) (= ($generated@@1 ($generated@@269 $generated@@271)) 17)) (forall (($generated@@272 T@T) ) (! (= ($generated@@270 ($generated@@269 $generated@@272)) $generated@@272)
 :pattern ( ($generated@@269 $generated@@272))
))) (forall (($generated@@273 T@T) ) (! (= (type ($generated@@267 $generated@@273)) ($generated@@269 $generated@@273))
 :pattern ( ($generated@@267 $generated@@273))
))))
(assert (forall (($generated@@274 T@T) ) (! (= ($generated@@268 ($generated@@267 $generated@@274)) 0)
 :pattern ( ($generated@@267 $generated@@274))
)))
(assert (forall (($generated@@276 T@U) ) (! (= (type ($generated@@275 $generated@@276)) $generated@@156)
 :pattern ( ($generated@@275 $generated@@276))
)))
(assert (forall (($generated@@277 T@U) ($generated@@278 T@U) ($generated@@279 T@U) ) (!  (=> (and (= (type $generated@@278) $generated@@67) (= (type $generated@@279) ($generated@@79 $generated@@80 $generated@@81))) (= ($generated@@255 ($generated@@275 $generated@@277) $generated@@278 $generated@@279) ($generated@@77 $generated@@277 $generated@@278 $generated@@279)))
 :pattern ( ($generated@@255 ($generated@@275 $generated@@277) $generated@@278 $generated@@279))
)))
(assert (forall (($generated@@280 T@U) ($generated@@281 T@U) ($generated@@282 T@U) ($generated@@283 T@U) ) (!  (=> (and (and (and (and (and (= (type $generated@@280) ($generated@@79 $generated@@80 $generated@@81)) (= (type $generated@@281) ($generated@@79 $generated@@80 $generated@@81))) (= (type $generated@@282) $generated@@156)) (= (type $generated@@283) $generated@@67)) ($generated@@135 $generated@@280 $generated@@281)) ($generated@@255 $generated@@282 $generated@@283 $generated@@280)) ($generated@@255 $generated@@282 $generated@@283 $generated@@281))
 :pattern ( ($generated@@135 $generated@@280 $generated@@281) ($generated@@255 $generated@@282 $generated@@283 $generated@@280))
)))
(assert (forall (($generated@@284 T@U) ($generated@@285 T@U) ($generated@@286 T@U) ($generated@@287 T@U) ) (!  (=> (and (and (and (and (= (type $generated@@284) ($generated@@79 $generated@@80 $generated@@81)) (= (type $generated@@285) ($generated@@79 $generated@@80 $generated@@81))) (= (type $generated@@287) $generated@@67)) ($generated@@135 $generated@@284 $generated@@285)) ($generated@@77 $generated@@286 $generated@@287 $generated@@284)) ($generated@@77 $generated@@286 $generated@@287 $generated@@285))
 :pattern ( ($generated@@135 $generated@@284 $generated@@285) ($generated@@77 $generated@@286 $generated@@287 $generated@@284))
)))
(assert (forall (($generated@@290 T@T) ) (! (= (type ($generated@@289 $generated@@290)) ($generated@@79 $generated@@290 $generated@@2))
 :pattern ( ($generated@@289 $generated@@290))
)))
(assert (forall (($generated@@291 T@U) ) (! (let (($generated@@292 ($generated@@82 (type $generated@@291))))
 (=> (= (type $generated@@291) ($generated@@79 $generated@@292 $generated@@2)) (and (= (= ($generated@@288 $generated@@291) 0) (= $generated@@291 ($generated@@289 $generated@@292))) (=> (not (= ($generated@@288 $generated@@291) 0)) (exists (($generated@@293 T@U) ) (!  (and (= (type $generated@@293) $generated@@292) (< 0 ($generated ($generated@@84 $generated@@291 $generated@@293))))
 :no-pattern (type $generated@@293)
 :no-pattern ($generated $generated@@293)
 :no-pattern ($generated@@0 $generated@@293)
))))))
 :pattern ( ($generated@@288 $generated@@291))
)))
(assert  (and (and (and (and (forall (($generated@@299 T@T) ($generated@@300 T@T) ) (= ($generated@@1 ($generated@@296 $generated@@299 $generated@@300)) 18)) (forall (($generated@@301 T@T) ($generated@@302 T@T) ) (! (= ($generated@@297 ($generated@@296 $generated@@301 $generated@@302)) $generated@@301)
 :pattern ( ($generated@@296 $generated@@301 $generated@@302))
))) (forall (($generated@@303 T@T) ($generated@@304 T@T) ) (! (= ($generated@@298 ($generated@@296 $generated@@303 $generated@@304)) $generated@@304)
 :pattern ( ($generated@@296 $generated@@303 $generated@@304))
))) (forall (($generated@@305 T@U) ) (! (let (($generated@@306 ($generated@@297 (type $generated@@305))))
(= (type ($generated@@294 $generated@@305)) ($generated@@79 $generated@@306 $generated@@4)))
 :pattern ( ($generated@@294 $generated@@305))
))) (forall (($generated@@307 T@T) ($generated@@308 T@T) ) (! (= (type ($generated@@295 $generated@@307 $generated@@308)) ($generated@@296 $generated@@307 $generated@@308))
 :pattern ( ($generated@@295 $generated@@307 $generated@@308))
))))
(assert (forall (($generated@@309 T@U) ($generated@@310 T@T) ) (! (let (($generated@@311 (type $generated@@309)))
 (not ($generated@@0 ($generated@@84 ($generated@@294 ($generated@@295 $generated@@311 $generated@@310)) $generated@@309))))
 :pattern ( (let (($generated@@311 (type $generated@@309)))
($generated@@84 ($generated@@294 ($generated@@295 $generated@@311 $generated@@310)) $generated@@309)))
)))
(assert  (and (and (and (and (forall (($generated@@317 T@T) ($generated@@318 T@T) ) (= ($generated@@1 ($generated@@314 $generated@@317 $generated@@318)) 19)) (forall (($generated@@319 T@T) ($generated@@320 T@T) ) (! (= ($generated@@315 ($generated@@314 $generated@@319 $generated@@320)) $generated@@319)
 :pattern ( ($generated@@314 $generated@@319 $generated@@320))
))) (forall (($generated@@321 T@T) ($generated@@322 T@T) ) (! (= ($generated@@316 ($generated@@314 $generated@@321 $generated@@322)) $generated@@322)
 :pattern ( ($generated@@314 $generated@@321 $generated@@322))
))) (forall (($generated@@323 T@U) ) (! (let (($generated@@324 ($generated@@315 (type $generated@@323))))
(= (type ($generated@@312 $generated@@323)) ($generated@@79 $generated@@324 $generated@@4)))
 :pattern ( ($generated@@312 $generated@@323))
))) (forall (($generated@@325 T@T) ($generated@@326 T@T) ) (! (= (type ($generated@@313 $generated@@325 $generated@@326)) ($generated@@314 $generated@@325 $generated@@326))
 :pattern ( ($generated@@313 $generated@@325 $generated@@326))
))))
(assert (forall (($generated@@327 T@U) ($generated@@328 T@T) ) (! (let (($generated@@329 (type $generated@@327)))
 (not ($generated@@0 ($generated@@84 ($generated@@312 ($generated@@313 $generated@@329 $generated@@328)) $generated@@327))))
 :pattern ( (let (($generated@@329 (type $generated@@327)))
($generated@@84 ($generated@@312 ($generated@@313 $generated@@329 $generated@@328)) $generated@@327)))
)))
(assert (forall (($generated@@330 T@U) ) (! (let (($generated@@331 ($generated@@82 (type $generated@@330))))
 (=> (= (type $generated@@330) ($generated@@79 $generated@@331 $generated@@2)) (= ($generated@@162 $generated@@330) (forall (($generated@@332 T@U) ) (!  (=> (= (type $generated@@332) $generated@@331) (and (<= 0 ($generated ($generated@@84 $generated@@330 $generated@@332))) (<= ($generated ($generated@@84 $generated@@330 $generated@@332)) ($generated@@288 $generated@@330))))
 :pattern ( ($generated@@84 $generated@@330 $generated@@332))
)))))
 :pattern ( ($generated@@162 $generated@@330))
)))
(assert (forall (($generated@@334 T@T) ($generated@@335 T@U) ) (! (= (type ($generated@@333 $generated@@334 $generated@@335)) $generated@@334)
 :pattern ( ($generated@@333 $generated@@334 $generated@@335))
)))
(assert (forall (($generated@@336 T@U) ) (!  (=> (and (= (type $generated@@336) $generated@@156) ($generated@@229 $generated@@336 $generated@@139)) (and (= ($generated@@275 ($generated@@333 $generated@@80 $generated@@336)) $generated@@336) ($generated@@143 ($generated@@333 $generated@@80 $generated@@336) $generated@@139)))
 :pattern ( ($generated@@229 $generated@@336 $generated@@139))
)))
(assert (forall (($generated@@337 T@U) ) (!  (=> (and (= (type $generated@@337) $generated@@156) ($generated@@229 $generated@@337 $generated@@225)) (and (= ($generated@@275 ($generated@@333 $generated@@80 $generated@@337)) $generated@@337) ($generated@@143 ($generated@@333 $generated@@80 $generated@@337) $generated@@225)))
 :pattern ( ($generated@@229 $generated@@337 $generated@@225))
)))
(assert (forall (($generated@@338 T@U) ) (!  (=> (= (type $generated@@338) $generated@@80) (= ($generated@@143 $generated@@338 $generated@@225)  (and ($generated@@143 $generated@@338 $generated@@139) (not (= $generated@@338 $generated@@140)))))
 :pattern ( ($generated@@143 $generated@@338 $generated@@225))
)))
(assert (forall (($generated@@339 T@U) ) (! (let (($generated@@340 ($generated@@298 (type $generated@@339))))
(let (($generated@@341 ($generated@@297 (type $generated@@339))))
 (=> (= (type $generated@@339) ($generated@@296 $generated@@341 $generated@@340)) (or (= $generated@@339 ($generated@@295 $generated@@341 $generated@@340)) (exists (($generated@@342 T@U) ) (!  (and (= (type $generated@@342) $generated@@341) ($generated@@0 ($generated@@84 ($generated@@294 $generated@@339) $generated@@342)))
 :no-pattern (type $generated@@342)
 :no-pattern ($generated $generated@@342)
 :no-pattern ($generated@@0 $generated@@342)
))))))
 :pattern ( ($generated@@294 $generated@@339))
)))
(assert (forall (($generated@@344 T@U) ) (! (let (($generated@@345 ($generated@@298 (type $generated@@344))))
(= (type ($generated@@343 $generated@@344)) ($generated@@79 $generated@@345 $generated@@4)))
 :pattern ( ($generated@@343 $generated@@344))
)))
(assert (forall (($generated@@346 T@U) ) (! (let (($generated@@347 ($generated@@298 (type $generated@@346))))
(let (($generated@@348 ($generated@@297 (type $generated@@346))))
 (=> (= (type $generated@@346) ($generated@@296 $generated@@348 $generated@@347)) (or (= $generated@@346 ($generated@@295 $generated@@348 $generated@@347)) (exists (($generated@@349 T@U) ) (!  (and (= (type $generated@@349) $generated@@347) ($generated@@0 ($generated@@84 ($generated@@343 $generated@@346) $generated@@349)))
 :no-pattern (type $generated@@349)
 :no-pattern ($generated $generated@@349)
 :no-pattern ($generated@@0 $generated@@349)
))))))
 :pattern ( ($generated@@343 $generated@@346))
)))
(assert (forall (($generated@@350 T@U) ) (! (let (($generated@@351 ($generated@@316 (type $generated@@350))))
(let (($generated@@352 ($generated@@315 (type $generated@@350))))
 (=> (= (type $generated@@350) ($generated@@314 $generated@@352 $generated@@351)) (or (= $generated@@350 ($generated@@313 $generated@@352 $generated@@351)) (exists (($generated@@353 T@U) ) (!  (and (= (type $generated@@353) $generated@@352) ($generated@@0 ($generated@@84 ($generated@@312 $generated@@350) $generated@@353)))
 :no-pattern (type $generated@@353)
 :no-pattern ($generated $generated@@353)
 :no-pattern ($generated@@0 $generated@@353)
))))))
 :pattern ( ($generated@@312 $generated@@350))
)))
(assert (forall (($generated@@355 T@U) ) (! (let (($generated@@356 ($generated@@316 (type $generated@@355))))
(= (type ($generated@@354 $generated@@355)) ($generated@@79 $generated@@356 $generated@@4)))
 :pattern ( ($generated@@354 $generated@@355))
)))
(assert (forall (($generated@@357 T@U) ) (! (let (($generated@@358 ($generated@@316 (type $generated@@357))))
(let (($generated@@359 ($generated@@315 (type $generated@@357))))
 (=> (= (type $generated@@357) ($generated@@314 $generated@@359 $generated@@358)) (or (= $generated@@357 ($generated@@313 $generated@@359 $generated@@358)) (exists (($generated@@360 T@U) ) (!  (and (= (type $generated@@360) $generated@@358) ($generated@@0 ($generated@@84 ($generated@@354 $generated@@357) $generated@@360)))
 :no-pattern (type $generated@@360)
 :no-pattern ($generated $generated@@360)
 :no-pattern ($generated@@0 $generated@@360)
))))))
 :pattern ( ($generated@@354 $generated@@357))
)))
(assert (forall (($generated@@361 T@U) ($generated@@362 T@U) ) (!  (=> (and (= (type $generated@@361) ($generated@@79 $generated@@156 $generated@@2)) (= (type $generated@@362) $generated@@67)) (= ($generated@@143 $generated@@361 ($generated@@161 $generated@@362)) (forall (($generated@@363 T@U) ) (!  (=> (and (= (type $generated@@363) $generated@@156) (< 0 ($generated ($generated@@84 $generated@@361 $generated@@363)))) ($generated@@229 $generated@@363 $generated@@362))
 :pattern ( ($generated@@84 $generated@@361 $generated@@363))
))))
 :pattern ( ($generated@@143 $generated@@361 ($generated@@161 $generated@@362)))
)))
(assert (forall (($generated@@364 T@U) ($generated@@365 T@U) ($generated@@366 T@U) ) (!  (=> (and (and (= (type $generated@@364) ($generated@@79 $generated@@156 $generated@@4)) (= (type $generated@@365) $generated@@67)) (= (type $generated@@366) ($generated@@79 $generated@@80 $generated@@81))) (= ($generated@@77 $generated@@364 ($generated@@238 $generated@@365) $generated@@366) (forall (($generated@@367 T@U) ) (!  (=> (and (= (type $generated@@367) $generated@@156) ($generated@@0 ($generated@@84 $generated@@364 $generated@@367))) ($generated@@255 $generated@@367 $generated@@365 $generated@@366))
 :pattern ( ($generated@@84 $generated@@364 $generated@@367))
))))
 :pattern ( ($generated@@77 $generated@@364 ($generated@@238 $generated@@365) $generated@@366))
)))
(assert (forall (($generated@@368 T@U) ($generated@@369 T@U) ($generated@@370 T@U) ) (!  (=> (and (and (= (type $generated@@368) ($generated@@79 $generated@@156 $generated@@4)) (= (type $generated@@369) $generated@@67)) (= (type $generated@@370) ($generated@@79 $generated@@80 $generated@@81))) (= ($generated@@77 $generated@@368 ($generated@@243 $generated@@369) $generated@@370) (forall (($generated@@371 T@U) ) (!  (=> (and (= (type $generated@@371) $generated@@156) ($generated@@0 ($generated@@84 $generated@@368 $generated@@371))) ($generated@@255 $generated@@371 $generated@@369 $generated@@370))
 :pattern ( ($generated@@84 $generated@@368 $generated@@371))
))))
 :pattern ( ($generated@@77 $generated@@368 ($generated@@243 $generated@@369) $generated@@370))
)))
(assert (forall (($generated@@372 T@U) ) (! (let (($generated@@373 (type $generated@@372)))
(= ($generated ($generated@@84 ($generated@@289 $generated@@373) $generated@@372)) 0))
 :pattern ( (let (($generated@@373 (type $generated@@372)))
($generated@@84 ($generated@@289 $generated@@373) $generated@@372)))
)))
(assert  (and (forall (($generated@@376 T@U) ) (! (= (type ($generated@@374 $generated@@376)) ($generated@@79 $generated@@156 $generated@@4))
 :pattern ( ($generated@@374 $generated@@376))
)) (forall (($generated@@377 T@U) ) (! (let (($generated@@378 ($generated@@298 (type $generated@@377))))
(let (($generated@@379 ($generated@@297 (type $generated@@377))))
(= (type ($generated@@375 $generated@@377)) ($generated@@79 $generated@@379 $generated@@378))))
 :pattern ( ($generated@@375 $generated@@377))
))))
(assert (forall (($generated@@380 T@U) ($generated@@381 T@U) ) (!  (=> (and (= (type $generated@@380) ($generated@@296 $generated@@156 $generated@@156)) (= (type $generated@@381) $generated@@156)) (= ($generated@@0 ($generated@@84 ($generated@@374 $generated@@380) $generated@@381))  (and ($generated@@0 ($generated@@84 ($generated@@294 $generated@@380) ($generated@@154 ($generated@@333 $generated@@147 $generated@@381)))) (= ($generated@@84 ($generated@@375 $generated@@380) ($generated@@154 ($generated@@333 $generated@@147 $generated@@381))) ($generated@@155 ($generated@@333 $generated@@147 $generated@@381))))))
 :pattern ( ($generated@@84 ($generated@@374 $generated@@380) $generated@@381))
)))
(assert  (and (forall (($generated@@384 T@U) ) (! (= (type ($generated@@382 $generated@@384)) ($generated@@79 $generated@@156 $generated@@4))
 :pattern ( ($generated@@382 $generated@@384))
)) (forall (($generated@@385 T@U) ) (! (let (($generated@@386 ($generated@@316 (type $generated@@385))))
(let (($generated@@387 ($generated@@315 (type $generated@@385))))
(= (type ($generated@@383 $generated@@385)) ($generated@@79 $generated@@387 $generated@@386))))
 :pattern ( ($generated@@383 $generated@@385))
))))
(assert (forall (($generated@@388 T@U) ($generated@@389 T@U) ) (!  (=> (and (= (type $generated@@388) ($generated@@314 $generated@@156 $generated@@156)) (= (type $generated@@389) $generated@@156)) (= ($generated@@0 ($generated@@84 ($generated@@382 $generated@@388) $generated@@389))  (and ($generated@@0 ($generated@@84 ($generated@@312 $generated@@388) ($generated@@154 ($generated@@333 $generated@@147 $generated@@389)))) (= ($generated@@84 ($generated@@383 $generated@@388) ($generated@@154 ($generated@@333 $generated@@147 $generated@@389))) ($generated@@155 ($generated@@333 $generated@@147 $generated@@389))))))
 :pattern ( ($generated@@84 ($generated@@382 $generated@@388) $generated@@389))
)))
(assert (forall (($generated@@390 T@U) ($generated@@391 T@U) ) (! (let (($generated@@392 (type $generated@@391)))
(let (($generated@@393 ($generated@@297 (type $generated@@390))))
 (=> (= (type $generated@@390) ($generated@@296 $generated@@393 $generated@@392)) (= ($generated@@0 ($generated@@84 ($generated@@343 $generated@@390) $generated@@391)) (exists (($generated@@394 T@U) ) (!  (and (= (type $generated@@394) $generated@@393) (and ($generated@@0 ($generated@@84 ($generated@@294 $generated@@390) $generated@@394)) (= $generated@@391 ($generated@@84 ($generated@@375 $generated@@390) $generated@@394))))
 :pattern ( ($generated@@84 ($generated@@294 $generated@@390) $generated@@394))
 :pattern ( ($generated@@84 ($generated@@375 $generated@@390) $generated@@394))
))))))
 :pattern ( ($generated@@84 ($generated@@343 $generated@@390) $generated@@391))
)))
(assert (forall (($generated@@395 T@U) ($generated@@396 T@U) ) (! (let (($generated@@397 (type $generated@@396)))
(let (($generated@@398 ($generated@@315 (type $generated@@395))))
 (=> (= (type $generated@@395) ($generated@@314 $generated@@398 $generated@@397)) (= ($generated@@0 ($generated@@84 ($generated@@354 $generated@@395) $generated@@396)) (exists (($generated@@399 T@U) ) (!  (and (= (type $generated@@399) $generated@@398) (and ($generated@@0 ($generated@@84 ($generated@@312 $generated@@395) $generated@@399)) (= $generated@@396 ($generated@@84 ($generated@@383 $generated@@395) $generated@@399))))
 :pattern ( ($generated@@84 ($generated@@312 $generated@@395) $generated@@399))
 :pattern ( ($generated@@84 ($generated@@383 $generated@@395) $generated@@399))
))))))
 :pattern ( ($generated@@84 ($generated@@354 $generated@@395) $generated@@396))
)))
(assert (forall (($generated@@401 T@U) ($generated@@402 T@U) ) (! (= (type ($generated@@400 $generated@@401 $generated@@402)) $generated@@67)
 :pattern ( ($generated@@400 $generated@@401 $generated@@402))
)))
(assert (forall (($generated@@403 T@U) ($generated@@404 T@U) ($generated@@405 T@U) ($generated@@406 T@U) ) (!  (=> (and (and (and (= (type $generated@@403) ($generated@@296 $generated@@156 $generated@@156)) (= (type $generated@@404) $generated@@67)) (= (type $generated@@405) $generated@@67)) (= (type $generated@@406) ($generated@@79 $generated@@80 $generated@@81))) (= ($generated@@77 $generated@@403 ($generated@@400 $generated@@404 $generated@@405) $generated@@406) (forall (($generated@@407 T@U) ) (!  (=> (and (= (type $generated@@407) $generated@@156) ($generated@@0 ($generated@@84 ($generated@@294 $generated@@403) $generated@@407))) (and ($generated@@255 ($generated@@84 ($generated@@375 $generated@@403) $generated@@407) $generated@@405 $generated@@406) ($generated@@255 $generated@@407 $generated@@404 $generated@@406)))
 :pattern ( ($generated@@84 ($generated@@375 $generated@@403) $generated@@407))
 :pattern ( ($generated@@84 ($generated@@294 $generated@@403) $generated@@407))
))))
 :pattern ( ($generated@@77 $generated@@403 ($generated@@400 $generated@@404 $generated@@405) $generated@@406))
)))
(assert (forall (($generated@@409 T@U) ($generated@@410 T@U) ) (! (= (type ($generated@@408 $generated@@409 $generated@@410)) $generated@@67)
 :pattern ( ($generated@@408 $generated@@409 $generated@@410))
)))
(assert (forall (($generated@@411 T@U) ($generated@@412 T@U) ($generated@@413 T@U) ($generated@@414 T@U) ) (!  (=> (and (and (and (= (type $generated@@411) ($generated@@314 $generated@@156 $generated@@156)) (= (type $generated@@412) $generated@@67)) (= (type $generated@@413) $generated@@67)) (= (type $generated@@414) ($generated@@79 $generated@@80 $generated@@81))) (= ($generated@@77 $generated@@411 ($generated@@408 $generated@@412 $generated@@413) $generated@@414) (forall (($generated@@415 T@U) ) (!  (=> (and (= (type $generated@@415) $generated@@156) ($generated@@0 ($generated@@84 ($generated@@312 $generated@@411) $generated@@415))) (and ($generated@@255 ($generated@@84 ($generated@@383 $generated@@411) $generated@@415) $generated@@413 $generated@@414) ($generated@@255 $generated@@415 $generated@@412 $generated@@414)))
 :pattern ( ($generated@@84 ($generated@@383 $generated@@411) $generated@@415))
 :pattern ( ($generated@@84 ($generated@@312 $generated@@411) $generated@@415))
))))
 :pattern ( ($generated@@77 $generated@@411 ($generated@@408 $generated@@412 $generated@@413) $generated@@414))
)))
(assert (forall (($generated@@416 T@U) ($generated@@417 T@U) ($generated@@418 T@U) ) (!  (=> (and (and (and (and (= (type $generated@@416) ($generated@@79 $generated@@80 $generated@@81)) (= (type $generated@@417) ($generated@@79 $generated@@80 $generated@@81))) (= (type $generated@@418) ($generated@@79 $generated@@80 $generated@@81))) (not (= $generated@@416 $generated@@418))) (and ($generated@@135 $generated@@416 $generated@@417) ($generated@@135 $generated@@417 $generated@@418))) ($generated@@135 $generated@@416 $generated@@418))
 :pattern ( ($generated@@135 $generated@@416 $generated@@417) ($generated@@135 $generated@@417 $generated@@418))
)))
(assert (forall (($generated@@420 T@T) ) (! (= (type ($generated@@419 $generated@@420)) ($generated@@79 $generated@@420 $generated@@4))
 :pattern ( ($generated@@419 $generated@@420))
)))
(assert (forall (($generated@@421 T@U) ) (! (let (($generated@@422 ($generated@@316 (type $generated@@421))))
(let (($generated@@423 ($generated@@315 (type $generated@@421))))
 (=> (= (type $generated@@421) ($generated@@314 $generated@@423 $generated@@422)) (= (= $generated@@421 ($generated@@313 $generated@@423 $generated@@422)) (= ($generated@@312 $generated@@421) ($generated@@419 $generated@@423))))))
 :pattern ( ($generated@@312 $generated@@421))
)))
(assert (forall (($generated@@424 T@U) ) (! (let (($generated@@425 ($generated@@316 (type $generated@@424))))
(let (($generated@@426 ($generated@@315 (type $generated@@424))))
 (=> (= (type $generated@@424) ($generated@@314 $generated@@426 $generated@@425)) (= (= $generated@@424 ($generated@@313 $generated@@426 $generated@@425)) (= ($generated@@354 $generated@@424) ($generated@@419 $generated@@425))))))
 :pattern ( ($generated@@354 $generated@@424))
)))
(assert (forall (($generated@@427 T@U) ) (! (let (($generated@@428 ($generated@@316 (type $generated@@427))))
(let (($generated@@429 ($generated@@315 (type $generated@@427))))
 (=> (= (type $generated@@427) ($generated@@314 $generated@@429 $generated@@428)) (= (= $generated@@427 ($generated@@313 $generated@@429 $generated@@428)) (= ($generated@@382 $generated@@427) ($generated@@419 $generated@@156))))))
 :pattern ( ($generated@@382 $generated@@427))
)))
(assert (forall (($generated@@430 T@U) ) (! (let (($generated@@431 ($generated@@298 (type $generated@@430))))
(let (($generated@@432 ($generated@@297 (type $generated@@430))))
 (=> (= (type $generated@@430) ($generated@@296 $generated@@432 $generated@@431)) (or (= $generated@@430 ($generated@@295 $generated@@432 $generated@@431)) (exists (($generated@@433 T@U) ($generated@@434 T@U) ) (!  (and (and (= (type $generated@@433) $generated@@156) (= (type $generated@@434) $generated@@156)) ($generated@@0 ($generated@@84 ($generated@@374 $generated@@430) ($generated@@275 ($generated@@228 $generated@@433 $generated@@434)))))
 :no-pattern (type $generated@@433)
 :no-pattern (type $generated@@434)
 :no-pattern ($generated $generated@@433)
 :no-pattern ($generated@@0 $generated@@433)
 :no-pattern ($generated $generated@@434)
 :no-pattern ($generated@@0 $generated@@434)
))))))
 :pattern ( ($generated@@374 $generated@@430))
)))
(assert (forall (($generated@@435 T@U) ) (! (let (($generated@@436 ($generated@@316 (type $generated@@435))))
(let (($generated@@437 ($generated@@315 (type $generated@@435))))
 (=> (= (type $generated@@435) ($generated@@314 $generated@@437 $generated@@436)) (or (= $generated@@435 ($generated@@313 $generated@@437 $generated@@436)) (exists (($generated@@438 T@U) ($generated@@439 T@U) ) (!  (and (and (= (type $generated@@438) $generated@@156) (= (type $generated@@439) $generated@@156)) ($generated@@0 ($generated@@84 ($generated@@382 $generated@@435) ($generated@@275 ($generated@@228 $generated@@438 $generated@@439)))))
 :no-pattern (type $generated@@438)
 :no-pattern (type $generated@@439)
 :no-pattern ($generated $generated@@438)
 :no-pattern ($generated@@0 $generated@@438)
 :no-pattern ($generated $generated@@439)
 :no-pattern ($generated@@0 $generated@@439)
))))))
 :pattern ( ($generated@@382 $generated@@435))
)))
(assert (forall (($generated@@440 T@U) ) (!  (=> (and (= (type $generated@@440) $generated@@156) ($generated@@229 $generated@@440 $generated@@46)) (and (= ($generated@@275 ($generated@@333 $generated@@2 $generated@@440)) $generated@@440) ($generated@@143 ($generated@@333 $generated@@2 $generated@@440) $generated@@46)))
 :pattern ( ($generated@@229 $generated@@440 $generated@@46))
)))
(assert (forall (($generated@@441 T@U) ) (!  (=> (and (= (type $generated@@441) $generated@@156) ($generated@@229 $generated@@441 $generated@@47)) (and (= ($generated@@275 ($generated@@333 $generated@@3 $generated@@441)) $generated@@441) ($generated@@143 ($generated@@333 $generated@@3 $generated@@441) $generated@@47)))
 :pattern ( ($generated@@229 $generated@@441 $generated@@47))
)))
(assert (forall (($generated@@442 T@U) ) (!  (=> (and (= (type $generated@@442) $generated@@156) ($generated@@229 $generated@@442 $generated@@44)) (and (= ($generated@@275 ($generated@@333 $generated@@4 $generated@@442)) $generated@@442) ($generated@@143 ($generated@@333 $generated@@4 $generated@@442) $generated@@44)))
 :pattern ( ($generated@@229 $generated@@442 $generated@@44))
)))
(assert (= ($generated@@1 $generated@@443) 20))
(assert (forall (($generated@@444 T@U) ) (!  (=> (and (= (type $generated@@444) $generated@@156) ($generated@@229 $generated@@444 $generated@@45)) (and (= ($generated@@275 ($generated@@333 $generated@@443 $generated@@444)) $generated@@444) ($generated@@143 ($generated@@333 $generated@@443 $generated@@444) $generated@@45)))
 :pattern ( ($generated@@229 $generated@@444 $generated@@45))
)))
(assert (forall (($generated@@445 T@U) ($generated@@446 T@U) ) (!  (=> (= (type $generated@@446) $generated@@67) (= ($generated@@229 ($generated@@275 $generated@@445) $generated@@446) ($generated@@143 $generated@@445 $generated@@446)))
 :pattern ( ($generated@@229 ($generated@@275 $generated@@445) $generated@@446))
)))
(assert (forall (($generated@@447 T@U) ) (! (let (($generated@@448 ($generated@@82 (type $generated@@447))))
 (=> (= (type $generated@@447) ($generated@@79 $generated@@448 $generated@@2)) (<= 0 ($generated@@288 $generated@@447))))
 :pattern ( ($generated@@288 $generated@@447))
)))
(assert (forall (($generated@@449 T@U) ) (! (let (($generated@@450 ($generated@@270 (type $generated@@449))))
 (=> (= (type $generated@@449) ($generated@@269 $generated@@450)) (<= 0 ($generated@@268 $generated@@449))))
 :pattern ( ($generated@@268 $generated@@449))
)))
(assert (forall (($generated@@452 T@U) ) (! (= (type ($generated@@451 $generated@@452)) $generated@@67)
 :pattern ( ($generated@@451 $generated@@452))
)))
(assert (forall (($generated@@453 T@U) ($generated@@454 T@U) ) (!  (=> (and (= (type $generated@@453) $generated@@67) (= (type $generated@@454) $generated@@67)) (= ($generated@@451 ($generated@@400 $generated@@453 $generated@@454)) $generated@@453))
 :pattern ( ($generated@@400 $generated@@453 $generated@@454))
)))
(assert (forall (($generated@@456 T@U) ) (! (= (type ($generated@@455 $generated@@456)) $generated@@67)
 :pattern ( ($generated@@455 $generated@@456))
)))
(assert (forall (($generated@@457 T@U) ($generated@@458 T@U) ) (!  (=> (and (= (type $generated@@457) $generated@@67) (= (type $generated@@458) $generated@@67)) (= ($generated@@455 ($generated@@400 $generated@@457 $generated@@458)) $generated@@458))
 :pattern ( ($generated@@400 $generated@@457 $generated@@458))
)))
(assert (forall (($generated@@459 T@U) ($generated@@460 T@U) ) (!  (=> (and (= (type $generated@@459) $generated@@67) (= (type $generated@@460) $generated@@67)) (= ($generated@@75 ($generated@@400 $generated@@459 $generated@@460)) $generated@@58))
 :pattern ( ($generated@@400 $generated@@459 $generated@@460))
)))
(assert (forall (($generated@@462 T@U) ) (! (= (type ($generated@@461 $generated@@462)) $generated@@67)
 :pattern ( ($generated@@461 $generated@@462))
)))
(assert (forall (($generated@@463 T@U) ($generated@@464 T@U) ) (!  (=> (and (= (type $generated@@463) $generated@@67) (= (type $generated@@464) $generated@@67)) (= ($generated@@461 ($generated@@408 $generated@@463 $generated@@464)) $generated@@463))
 :pattern ( ($generated@@408 $generated@@463 $generated@@464))
)))
(assert (forall (($generated@@466 T@U) ) (! (= (type ($generated@@465 $generated@@466)) $generated@@67)
 :pattern ( ($generated@@465 $generated@@466))
)))
(assert (forall (($generated@@467 T@U) ($generated@@468 T@U) ) (!  (=> (and (= (type $generated@@467) $generated@@67) (= (type $generated@@468) $generated@@67)) (= ($generated@@465 ($generated@@408 $generated@@467 $generated@@468)) $generated@@468))
 :pattern ( ($generated@@408 $generated@@467 $generated@@468))
)))
(assert (forall (($generated@@469 T@U) ($generated@@470 T@U) ) (!  (=> (and (= (type $generated@@469) $generated@@67) (= (type $generated@@470) $generated@@67)) (= ($generated@@75 ($generated@@408 $generated@@469 $generated@@470)) $generated@@59))
 :pattern ( ($generated@@408 $generated@@469 $generated@@470))
)))
(assert (forall (($generated@@471 T@U) ($generated@@472 T@U) ) (!  (=> (and (= (type $generated@@471) $generated@@156) (= (type $generated@@472) $generated@@156)) (= ($generated@@261 ($generated@@228 $generated@@471 $generated@@472)) $generated@@61))
 :pattern ( ($generated@@228 $generated@@471 $generated@@472))
)))
(assert (forall (($generated@@474 T@U) ) (! (= (type ($generated@@473 $generated@@474)) $generated@@67)
 :pattern ( ($generated@@473 $generated@@474))
)))
(assert (forall (($generated@@475 T@U) ($generated@@476 T@U) ) (!  (=> (and (= (type $generated@@475) $generated@@67) (= (type $generated@@476) $generated@@67)) (= ($generated@@473 ($generated@@146 $generated@@475 $generated@@476)) $generated@@475))
 :pattern ( ($generated@@146 $generated@@475 $generated@@476))
)))
(assert (forall (($generated@@478 T@U) ) (! (= (type ($generated@@477 $generated@@478)) $generated@@67)
 :pattern ( ($generated@@477 $generated@@478))
)))
(assert (forall (($generated@@479 T@U) ($generated@@480 T@U) ) (!  (=> (and (= (type $generated@@479) $generated@@67) (= (type $generated@@480) $generated@@67)) (= ($generated@@477 ($generated@@146 $generated@@479 $generated@@480)) $generated@@480))
 :pattern ( ($generated@@146 $generated@@479 $generated@@480))
)))
(assert (forall (($generated@@481 T@U) ($generated@@482 T@U) ) (!  (=> (and (= (type $generated@@481) $generated@@156) (= (type $generated@@482) $generated@@156)) (= ($generated@@154 ($generated@@228 $generated@@481 $generated@@482)) $generated@@481))
 :pattern ( ($generated@@228 $generated@@481 $generated@@482))
)))
(assert (forall (($generated@@483 T@U) ($generated@@484 T@U) ) (!  (=> (and (= (type $generated@@483) $generated@@156) (= (type $generated@@484) $generated@@156)) (= ($generated@@155 ($generated@@228 $generated@@483 $generated@@484)) $generated@@484))
 :pattern ( ($generated@@228 $generated@@483 $generated@@484))
)))
(assert  (and (forall (($generated@@487 T@U) ) (! (= (type ($generated@@485 $generated@@487)) $generated@@67)
 :pattern ( ($generated@@485 $generated@@487))
)) (forall (($generated@@488 T@U) ($generated@@489 Int) ) (! (let (($generated@@490 ($generated@@270 (type $generated@@488))))
(= (type ($generated@@486 $generated@@488 $generated@@489)) $generated@@490))
 :pattern ( ($generated@@486 $generated@@488 $generated@@489))
))))
(assert (forall (($generated@@491 T@U) ($generated@@492 T@U) ($generated@@493 T@U) ) (!  (=> (and (and (= (type $generated@@491) ($generated@@269 $generated@@156)) (= (type $generated@@492) $generated@@67)) (= (type $generated@@493) ($generated@@79 $generated@@80 $generated@@81))) (= ($generated@@77 $generated@@491 ($generated@@485 $generated@@492) $generated@@493) (forall (($generated@@494 Int) ) (!  (=> (and (<= 0 $generated@@494) (< $generated@@494 ($generated@@268 $generated@@491))) ($generated@@255 ($generated@@486 $generated@@491 $generated@@494) $generated@@492 $generated@@493))
 :pattern ( ($generated@@486 $generated@@491 $generated@@494))
))))
 :pattern ( ($generated@@77 $generated@@491 ($generated@@485 $generated@@492) $generated@@493))
)))
(assert (forall (($generated@@496 Int) ) (! (= ($generated@@495 ($generated@@78 $generated@@496)) $generated@@496)
 :pattern ( ($generated@@78 $generated@@496))
)))
(assert (forall (($generated@@498 T@U) ) (! (= (type ($generated@@497 $generated@@498)) $generated@@67)
 :pattern ( ($generated@@497 $generated@@498))
)))
(assert (forall (($generated@@499 T@U) ) (!  (=> (= (type $generated@@499) $generated@@67) (= ($generated@@497 ($generated@@238 $generated@@499)) $generated@@499))
 :pattern ( ($generated@@238 $generated@@499))
)))
(assert (forall (($generated@@500 T@U) ) (!  (=> (= (type $generated@@500) $generated@@67) (= ($generated@@75 ($generated@@238 $generated@@500)) $generated@@54))
 :pattern ( ($generated@@238 $generated@@500))
)))
(assert (forall (($generated@@502 T@U) ) (! (= (type ($generated@@501 $generated@@502)) $generated@@67)
 :pattern ( ($generated@@501 $generated@@502))
)))
(assert (forall (($generated@@503 T@U) ) (!  (=> (= (type $generated@@503) $generated@@67) (= ($generated@@501 ($generated@@243 $generated@@503)) $generated@@503))
 :pattern ( ($generated@@243 $generated@@503))
)))
(assert (forall (($generated@@504 T@U) ) (!  (=> (= (type $generated@@504) $generated@@67) (= ($generated@@75 ($generated@@243 $generated@@504)) $generated@@55))
 :pattern ( ($generated@@243 $generated@@504))
)))
(assert (forall (($generated@@506 T@U) ) (! (= (type ($generated@@505 $generated@@506)) $generated@@67)
 :pattern ( ($generated@@505 $generated@@506))
)))
(assert (forall (($generated@@507 T@U) ) (!  (=> (= (type $generated@@507) $generated@@67) (= ($generated@@505 ($generated@@161 $generated@@507)) $generated@@507))
 :pattern ( ($generated@@161 $generated@@507))
)))
(assert (forall (($generated@@508 T@U) ) (!  (=> (= (type $generated@@508) $generated@@67) (= ($generated@@75 ($generated@@161 $generated@@508)) $generated@@56))
 :pattern ( ($generated@@161 $generated@@508))
)))
(assert (forall (($generated@@510 T@U) ) (! (= (type ($generated@@509 $generated@@510)) $generated@@67)
 :pattern ( ($generated@@509 $generated@@510))
)))
(assert (forall (($generated@@511 T@U) ) (!  (=> (= (type $generated@@511) $generated@@67) (= ($generated@@509 ($generated@@485 $generated@@511)) $generated@@511))
 :pattern ( ($generated@@485 $generated@@511))
)))
(assert (forall (($generated@@512 T@U) ) (!  (=> (= (type $generated@@512) $generated@@67) (= ($generated@@75 ($generated@@485 $generated@@512)) $generated@@57))
 :pattern ( ($generated@@485 $generated@@512))
)))
(assert (forall (($generated@@513 T@U) ) (! (let (($generated@@514 (type $generated@@513)))
(= ($generated@@333 $generated@@514 ($generated@@275 $generated@@513)) $generated@@513))
 :pattern ( ($generated@@275 $generated@@513))
)))
(assert (forall (($generated@@515 T@U) ($generated@@516 T@U) ($generated@@517 T@U) ) (!  (=> (and (and (= (type $generated@@515) ($generated@@296 $generated@@156 $generated@@156)) (= (type $generated@@516) $generated@@67)) (= (type $generated@@517) $generated@@67)) (= ($generated@@143 $generated@@515 ($generated@@400 $generated@@516 $generated@@517)) (forall (($generated@@518 T@U) ) (!  (=> (and (= (type $generated@@518) $generated@@156) ($generated@@0 ($generated@@84 ($generated@@294 $generated@@515) $generated@@518))) (and ($generated@@229 ($generated@@84 ($generated@@375 $generated@@515) $generated@@518) $generated@@517) ($generated@@229 $generated@@518 $generated@@516)))
 :pattern ( ($generated@@84 ($generated@@375 $generated@@515) $generated@@518))
 :pattern ( ($generated@@84 ($generated@@294 $generated@@515) $generated@@518))
))))
 :pattern ( ($generated@@143 $generated@@515 ($generated@@400 $generated@@516 $generated@@517)))
)))
(assert (forall (($generated@@519 T@U) ($generated@@520 T@U) ($generated@@521 T@U) ) (!  (=> (and (and (= (type $generated@@519) ($generated@@314 $generated@@156 $generated@@156)) (= (type $generated@@520) $generated@@67)) (= (type $generated@@521) $generated@@67)) (= ($generated@@143 $generated@@519 ($generated@@408 $generated@@520 $generated@@521)) (forall (($generated@@522 T@U) ) (!  (=> (and (= (type $generated@@522) $generated@@156) ($generated@@0 ($generated@@84 ($generated@@312 $generated@@519) $generated@@522))) (and ($generated@@229 ($generated@@84 ($generated@@383 $generated@@519) $generated@@522) $generated@@521) ($generated@@229 $generated@@522 $generated@@520)))
 :pattern ( ($generated@@84 ($generated@@383 $generated@@519) $generated@@522))
 :pattern ( ($generated@@84 ($generated@@312 $generated@@519) $generated@@522))
))))
 :pattern ( ($generated@@143 $generated@@519 ($generated@@408 $generated@@520 $generated@@521)))
)))
(assert (forall (($generated@@525 T@U) ($generated@@526 T@U) ) (!  (=> (and (= (type $generated@@525) $generated@@156) (= (type $generated@@526) $generated@@156)) (< ($generated@@523 $generated@@525) ($generated@@524 ($generated@@228 $generated@@525 $generated@@526))))
 :pattern ( ($generated@@228 $generated@@525 $generated@@526))
)))
(assert (forall (($generated@@527 T@U) ($generated@@528 T@U) ) (!  (=> (and (= (type $generated@@527) $generated@@156) (= (type $generated@@528) $generated@@156)) (< ($generated@@523 $generated@@528) ($generated@@524 ($generated@@228 $generated@@527 $generated@@528))))
 :pattern ( ($generated@@228 $generated@@527 $generated@@528))
)))
(assert (forall (($generated@@529 T@U) ($generated@@530 T@U) ($generated@@531 T@U) ) (!  (=> (and (and (and (= (type $generated@@529) $generated@@156) (= (type $generated@@530) $generated@@67)) (= (type $generated@@531) $generated@@67)) ($generated@@229 $generated@@529 ($generated@@400 $generated@@530 $generated@@531))) (and (= ($generated@@275 ($generated@@333 ($generated@@296 $generated@@156 $generated@@156) $generated@@529)) $generated@@529) ($generated@@143 ($generated@@333 ($generated@@296 $generated@@156 $generated@@156) $generated@@529) ($generated@@400 $generated@@530 $generated@@531))))
 :pattern ( ($generated@@229 $generated@@529 ($generated@@400 $generated@@530 $generated@@531)))
)))
(assert (forall (($generated@@532 T@U) ($generated@@533 T@U) ($generated@@534 T@U) ) (!  (=> (and (and (and (= (type $generated@@532) $generated@@156) (= (type $generated@@533) $generated@@67)) (= (type $generated@@534) $generated@@67)) ($generated@@229 $generated@@532 ($generated@@408 $generated@@533 $generated@@534))) (and (= ($generated@@275 ($generated@@333 ($generated@@314 $generated@@156 $generated@@156) $generated@@532)) $generated@@532) ($generated@@143 ($generated@@333 ($generated@@314 $generated@@156 $generated@@156) $generated@@532) ($generated@@408 $generated@@533 $generated@@534))))
 :pattern ( ($generated@@229 $generated@@532 ($generated@@408 $generated@@533 $generated@@534)))
)))
(assert (forall (($generated@@535 T@U) ($generated@@536 T@U) ($generated@@537 T@U) ) (!  (=> (and (and (and (= (type $generated@@535) $generated@@67) (= (type $generated@@536) $generated@@67)) (= (type $generated@@537) $generated@@156)) ($generated@@229 $generated@@537 ($generated@@146 $generated@@535 $generated@@536))) (and (= ($generated@@275 ($generated@@333 $generated@@147 $generated@@537)) $generated@@537) ($generated@@143 ($generated@@333 $generated@@147 $generated@@537) ($generated@@146 $generated@@535 $generated@@536))))
 :pattern ( ($generated@@229 $generated@@537 ($generated@@146 $generated@@535 $generated@@536)))
)))
(assert (forall (($generated@@538 T@U) ) (! (let (($generated@@539 (type $generated@@538)))
 (not ($generated@@0 ($generated@@84 ($generated@@419 $generated@@539) $generated@@538))))
 :pattern ( (let (($generated@@539 (type $generated@@538)))
($generated@@84 ($generated@@419 $generated@@539) $generated@@538)))
)))
(assert (forall (($generated@@541 T@U) ) (! (= (type ($generated@@540 $generated@@541)) $generated@@72)
 :pattern ( ($generated@@540 $generated@@541))
)))
(assert (forall (($generated@@542 T@U) ($generated@@543 T@U) ) (!  (=> (and (= (type $generated@@542) $generated@@67) (= (type $generated@@543) $generated@@67)) (and (= ($generated@@75 ($generated@@146 $generated@@542 $generated@@543)) $generated@@62) (= ($generated@@540 ($generated@@146 $generated@@542 $generated@@543)) $generated@@65)))
 :pattern ( ($generated@@146 $generated@@542 $generated@@543))
)))
(assert (forall (($generated@@544 T@U) ) (!  (=> (= (type $generated@@544) $generated@@147) (= ($generated@@523 ($generated@@275 $generated@@544)) ($generated@@524 $generated@@544)))
 :pattern ( ($generated@@523 ($generated@@275 $generated@@544)))
)))
(assert (forall (($generated@@545 T@U) ) (!  (=> (and (= (type $generated@@545) $generated@@156) ($generated@@229 $generated@@545 ($generated@@78 0))) (and (= ($generated@@275 ($generated@@333 $generated@@2 $generated@@545)) $generated@@545) ($generated@@143 ($generated@@333 ($generated@@79 $generated@@156 $generated@@4) $generated@@545) ($generated@@78 0))))
 :pattern ( ($generated@@229 $generated@@545 ($generated@@78 0)))
)))
(assert (forall (($generated@@546 T@U) ($generated@@547 T@U) ) (!  (=> (and (and (= (type $generated@@546) $generated@@156) (= (type $generated@@547) $generated@@67)) ($generated@@229 $generated@@546 ($generated@@238 $generated@@547))) (and (= ($generated@@275 ($generated@@333 ($generated@@79 $generated@@156 $generated@@4) $generated@@546)) $generated@@546) ($generated@@143 ($generated@@333 ($generated@@79 $generated@@156 $generated@@4) $generated@@546) ($generated@@238 $generated@@547))))
 :pattern ( ($generated@@229 $generated@@546 ($generated@@238 $generated@@547)))
)))
(assert (forall (($generated@@548 T@U) ($generated@@549 T@U) ) (!  (=> (and (and (= (type $generated@@548) $generated@@156) (= (type $generated@@549) $generated@@67)) ($generated@@229 $generated@@548 ($generated@@243 $generated@@549))) (and (= ($generated@@275 ($generated@@333 ($generated@@79 $generated@@156 $generated@@4) $generated@@548)) $generated@@548) ($generated@@143 ($generated@@333 ($generated@@79 $generated@@156 $generated@@4) $generated@@548) ($generated@@243 $generated@@549))))
 :pattern ( ($generated@@229 $generated@@548 ($generated@@243 $generated@@549)))
)))
(assert (forall (($generated@@550 T@U) ($generated@@551 T@U) ) (!  (=> (and (and (= (type $generated@@550) $generated@@156) (= (type $generated@@551) $generated@@67)) ($generated@@229 $generated@@550 ($generated@@161 $generated@@551))) (and (= ($generated@@275 ($generated@@333 ($generated@@79 $generated@@156 $generated@@2) $generated@@550)) $generated@@550) ($generated@@143 ($generated@@333 ($generated@@79 $generated@@156 $generated@@2) $generated@@550) ($generated@@161 $generated@@551))))
 :pattern ( ($generated@@229 $generated@@550 ($generated@@161 $generated@@551)))
)))
(assert (forall (($generated@@552 T@U) ($generated@@553 T@U) ) (!  (=> (and (and (= (type $generated@@552) $generated@@156) (= (type $generated@@553) $generated@@67)) ($generated@@229 $generated@@552 ($generated@@485 $generated@@553))) (and (= ($generated@@275 ($generated@@333 ($generated@@269 $generated@@156) $generated@@552)) $generated@@552) ($generated@@143 ($generated@@333 ($generated@@269 $generated@@156) $generated@@552) ($generated@@485 $generated@@553))))
 :pattern ( ($generated@@229 $generated@@552 ($generated@@485 $generated@@553)))
)))
(assert (= ($generated@@75 $generated@@139) $generated@@63))
(assert (= ($generated@@540 $generated@@139) $generated@@66))
(assert (= ($generated@@75 $generated@@225) $generated@@64))
(assert (= ($generated@@540 $generated@@225) $generated@@66))
(assert (forall (($generated@@554 T@U) ($generated@@555 T@U) ($generated@@556 T@U) ) (!  (=> (and (and (= (type $generated@@554) ($generated@@79 $generated@@156 $generated@@2)) (= (type $generated@@555) $generated@@67)) (= (type $generated@@556) ($generated@@79 $generated@@80 $generated@@81))) (= ($generated@@77 $generated@@554 ($generated@@161 $generated@@555) $generated@@556) (forall (($generated@@557 T@U) ) (!  (=> (and (= (type $generated@@557) $generated@@156) (< 0 ($generated ($generated@@84 $generated@@554 $generated@@557)))) ($generated@@255 $generated@@557 $generated@@555 $generated@@556))
 :pattern ( ($generated@@84 $generated@@554 $generated@@557))
))))
 :pattern ( ($generated@@77 $generated@@554 ($generated@@161 $generated@@555) $generated@@556))
)))
(assert (forall (($generated@@558 T@U) ($generated@@559 T@U) ($generated@@560 T@U) ) (!  (=> (and (and (and (= (type $generated@@558) $generated@@147) (= (type $generated@@559) $generated@@67)) (= (type $generated@@560) ($generated@@79 $generated@@80 $generated@@81))) (and ($generated@@254 $generated@@560) (and ($generated@@145 $generated@@558) (exists (($generated@@561 T@U) ) (!  (and (= (type $generated@@561) $generated@@67) ($generated@@77 $generated@@558 ($generated@@146 $generated@@559 $generated@@561) $generated@@560))
 :pattern ( ($generated@@77 $generated@@558 ($generated@@146 $generated@@559 $generated@@561) $generated@@560))
))))) ($generated@@255 ($generated@@154 $generated@@558) $generated@@559 $generated@@560))
 :pattern ( ($generated@@255 ($generated@@154 $generated@@558) $generated@@559 $generated@@560))
)))
(assert (forall (($generated@@562 T@U) ($generated@@563 T@U) ($generated@@564 T@U) ) (!  (=> (and (and (and (= (type $generated@@562) $generated@@147) (= (type $generated@@563) $generated@@67)) (= (type $generated@@564) ($generated@@79 $generated@@80 $generated@@81))) (and ($generated@@254 $generated@@564) (and ($generated@@145 $generated@@562) (exists (($generated@@565 T@U) ) (!  (and (= (type $generated@@565) $generated@@67) ($generated@@77 $generated@@562 ($generated@@146 $generated@@565 $generated@@563) $generated@@564))
 :pattern ( ($generated@@77 $generated@@562 ($generated@@146 $generated@@565 $generated@@563) $generated@@564))
))))) ($generated@@255 ($generated@@155 $generated@@562) $generated@@563 $generated@@564))
 :pattern ( ($generated@@255 ($generated@@155 $generated@@562) $generated@@563 $generated@@564))
)))
(assert (forall (($generated@@566 T@U) ($generated@@567 T@U) ) (!  (=> (and (= (type $generated@@566) $generated@@156) (= (type $generated@@567) $generated@@156)) (= ($generated@@228 ($generated@@250 $generated@@566) ($generated@@250 $generated@@567)) ($generated@@250 ($generated@@228 $generated@@566 $generated@@567))))
 :pattern ( ($generated@@228 ($generated@@250 $generated@@566) ($generated@@250 $generated@@567)))
)))
(assert (forall (($generated@@568 Int) ) (! (= ($generated@@275 ($generated@@8 ($generated@@248 $generated@@568))) ($generated@@250 ($generated@@275 ($generated@@8 $generated@@568))))
 :pattern ( ($generated@@275 ($generated@@8 ($generated@@248 $generated@@568))))
)))
(assert (forall (($generated@@569 T@U) ) (! (= ($generated@@275 ($generated@@250 $generated@@569)) ($generated@@250 ($generated@@275 $generated@@569)))
 :pattern ( ($generated@@275 ($generated@@250 $generated@@569)))
)))
(assert (forall (($generated@@570 T@U) ) (! (let (($generated@@571 ($generated@@270 (type $generated@@570))))
 (=> (and (= (type $generated@@570) ($generated@@269 $generated@@571)) (= ($generated@@268 $generated@@570) 0)) (= $generated@@570 ($generated@@267 $generated@@571))))
 :pattern ( ($generated@@268 $generated@@570))
)))
(assert (forall (($generated@@572 T@U) ($generated@@573 T@U) ($generated@@574 T@U) ) (! (let (($generated@@575 (type $generated@@573)))
 (=> (and (and (= (type $generated@@572) ($generated@@79 $generated@@575 $generated@@2)) (= (type $generated@@574) $generated@@2)) (<= 0 ($generated $generated@@574))) (= ($generated@@288 ($generated@@85 $generated@@572 $generated@@573 $generated@@574)) (+ (- ($generated@@288 $generated@@572) ($generated ($generated@@84 $generated@@572 $generated@@573))) ($generated $generated@@574)))))
 :pattern ( ($generated@@288 ($generated@@85 $generated@@572 $generated@@573 $generated@@574)))
)))
(assert (forall (($generated@@576 T@U) ($generated@@577 T@U) ) (!  (=> (and (= (type $generated@@576) ($generated@@79 $generated@@80 $generated@@81)) (= (type $generated@@577) $generated@@2)) ($generated@@77 $generated@@577 $generated@@46 $generated@@576))
 :pattern ( ($generated@@77 $generated@@577 $generated@@46 $generated@@576))
)))
(assert (forall (($generated@@578 T@U) ($generated@@579 T@U) ) (!  (=> (and (= (type $generated@@578) ($generated@@79 $generated@@80 $generated@@81)) (= (type $generated@@579) $generated@@3)) ($generated@@77 $generated@@579 $generated@@47 $generated@@578))
 :pattern ( ($generated@@77 $generated@@579 $generated@@47 $generated@@578))
)))
(assert (forall (($generated@@580 T@U) ($generated@@581 T@U) ) (!  (=> (and (= (type $generated@@580) ($generated@@79 $generated@@80 $generated@@81)) (= (type $generated@@581) $generated@@4)) ($generated@@77 $generated@@581 $generated@@44 $generated@@580))
 :pattern ( ($generated@@77 $generated@@581 $generated@@44 $generated@@580))
)))
(assert (forall (($generated@@582 T@U) ($generated@@583 T@U) ) (!  (=> (and (= (type $generated@@582) ($generated@@79 $generated@@80 $generated@@81)) (= (type $generated@@583) $generated@@443)) ($generated@@77 $generated@@583 $generated@@45 $generated@@582))
 :pattern ( ($generated@@77 $generated@@583 $generated@@45 $generated@@582))
)))
(assert (forall (($generated@@584 T@U) ($generated@@585 T@U) ) (!  (=> (and (= (type $generated@@584) ($generated@@79 $generated@@80 $generated@@81)) (= (type $generated@@585) $generated@@156)) ($generated@@77 $generated@@585 $generated@@48 $generated@@584))
 :pattern ( ($generated@@77 $generated@@585 $generated@@48 $generated@@584))
)))
(assert (forall (($generated@@586 T@U) ($generated@@587 T@U) ) (!  (=> (and (= (type $generated@@586) ($generated@@269 $generated@@156)) (= (type $generated@@587) $generated@@67)) (= ($generated@@143 $generated@@586 ($generated@@485 $generated@@587)) (forall (($generated@@588 Int) ) (!  (=> (and (<= 0 $generated@@588) (< $generated@@588 ($generated@@268 $generated@@586))) ($generated@@229 ($generated@@486 $generated@@586 $generated@@588) $generated@@587))
 :pattern ( ($generated@@486 $generated@@586 $generated@@588))
))))
 :pattern ( ($generated@@143 $generated@@586 ($generated@@485 $generated@@587)))
)))
(assert (forall (($generated@@590 T@U) ($generated@@591 Int) ) (!  (=> (= (type $generated@@590) ($generated@@269 $generated@@156)) (=> (and (<= 0 $generated@@591) (< $generated@@591 ($generated@@268 $generated@@590))) (< ($generated@@524 ($generated@@333 $generated@@147 ($generated@@486 $generated@@590 $generated@@591))) ($generated@@589 $generated@@590))))
 :pattern ( ($generated@@524 ($generated@@333 $generated@@147 ($generated@@486 $generated@@590 $generated@@591))))
)))
(assert (forall (($generated@@592 T@U) ($generated@@593 T@U) ($generated@@594 T@U) ) (!  (=> (and (and (and (= (type $generated@@592) ($generated@@296 $generated@@156 $generated@@156)) (= (type $generated@@593) $generated@@67)) (= (type $generated@@594) $generated@@67)) ($generated@@143 $generated@@592 ($generated@@400 $generated@@593 $generated@@594))) (and (and ($generated@@143 ($generated@@294 $generated@@592) ($generated@@238 $generated@@593)) ($generated@@143 ($generated@@343 $generated@@592) ($generated@@238 $generated@@594))) ($generated@@143 ($generated@@374 $generated@@592) ($generated@@238 ($generated@@146 $generated@@593 $generated@@594)))))
 :pattern ( ($generated@@143 $generated@@592 ($generated@@400 $generated@@593 $generated@@594)))
)))
(assert (forall (($generated@@595 T@U) ($generated@@596 T@U) ($generated@@597 T@U) ) (!  (=> (and (and (and (= (type $generated@@595) ($generated@@314 $generated@@156 $generated@@156)) (= (type $generated@@596) $generated@@67)) (= (type $generated@@597) $generated@@67)) ($generated@@143 $generated@@595 ($generated@@408 $generated@@596 $generated@@597))) (and (and ($generated@@143 ($generated@@312 $generated@@595) ($generated@@243 $generated@@596)) ($generated@@143 ($generated@@354 $generated@@595) ($generated@@243 $generated@@597))) ($generated@@143 ($generated@@382 $generated@@595) ($generated@@243 ($generated@@146 $generated@@596 $generated@@597)))))
 :pattern ( ($generated@@143 $generated@@595 ($generated@@408 $generated@@596 $generated@@597)))
)))
(assert (forall (($generated@@598 T@U) ) (!  (=> (= (type $generated@@598) $generated@@2) ($generated@@143 $generated@@598 $generated@@46))
 :pattern ( ($generated@@143 $generated@@598 $generated@@46))
)))
(assert (forall (($generated@@599 T@U) ) (!  (=> (= (type $generated@@599) $generated@@3) ($generated@@143 $generated@@599 $generated@@47))
 :pattern ( ($generated@@143 $generated@@599 $generated@@47))
)))
(assert (forall (($generated@@600 T@U) ) (!  (=> (= (type $generated@@600) $generated@@4) ($generated@@143 $generated@@600 $generated@@44))
 :pattern ( ($generated@@143 $generated@@600 $generated@@44))
)))
(assert (forall (($generated@@601 T@U) ) (!  (=> (= (type $generated@@601) $generated@@443) ($generated@@143 $generated@@601 $generated@@45))
 :pattern ( ($generated@@143 $generated@@601 $generated@@45))
)))
(assert (forall (($generated@@602 T@U) ) (!  (=> (= (type $generated@@602) $generated@@156) ($generated@@143 $generated@@602 $generated@@48))
 :pattern ( ($generated@@143 $generated@@602 $generated@@48))
)))
(push 1)
(declare-fun ControlFlow (Int Int) Int)
(declare-fun $generated@@603 (T@U) T@U)
(declare-fun $generated@@604 () T@U)
(declare-fun $generated@@605 () T@U)
(declare-fun $generated@@606 () T@U)
(declare-fun $generated@@607 () T@U)
(declare-fun $generated@@608 () Int)
(declare-fun $generated@@609 () T@U)
(declare-fun $generated@@610 () T@U)
(declare-fun $generated@@611 (T@U) Bool)
(declare-fun $generated@@612 () T@U)
(declare-fun $generated@@613 () T@U)
(declare-fun $generated@@614 () Bool)
(declare-fun $generated@@615 () T@U)
(declare-fun $generated@@616 () Int)
(declare-fun $generated@@617 () T@T)
(assert  (and (and (and (and (and (and (and (and (and (and (= ($generated@@1 $generated@@617) 21) (forall (($generated@@618 T@U) ) (! (= (type ($generated@@603 $generated@@618)) $generated@@617)
 :pattern ( ($generated@@603 $generated@@618))
))) (= (type $generated@@604) $generated@@617)) (= (type $generated@@605) $generated@@617)) (= (type $generated@@606) ($generated@@171 $generated@@80 $generated@@4))) (= (type $generated@@607) ($generated@@79 $generated@@80 $generated@@81))) (= (type $generated@@609) $generated@@80)) (= (type $generated@@610) ($generated@@79 $generated@@80 $generated@@81))) (= (type $generated@@612) $generated@@80)) (= (type $generated@@613) $generated@@80)) (= (type $generated@@615) $generated@@80)))
(set-option :timeout 0)
(set-option :rlimit 0)
(assert (not
 (=> (= (ControlFlow 0 0) 4) (let (($generated@@619  (=> (and (and (and (and (= ($generated@@603 $generated@@604) $generated@@604) (= ($generated@@603 $generated@@605) $generated@@605)) (and (= $generated@@606 ($generated@@170 $generated@@140 $generated@@607 $generated@@60 false)) (= $generated@@608 ($generated@@248 200)))) (and (and (not (= $generated@@609 $generated@@140)) (and ($generated@@143 $generated@@609 $generated@@225) ($generated@@77 $generated@@609 $generated@@225 $generated@@607))) (and ($generated@@254 $generated@@610) ($generated@@611 $generated@@610)))) (and (and (and (not (= $generated@@612 $generated@@140)) (and ($generated@@143 $generated@@612 $generated@@225) ($generated@@77 $generated@@612 $generated@@225 $generated@@610))) (not ($generated@@0 ($generated@@86 ($generated@@84 $generated@@607 $generated@@612) $generated@@60)))) (and (forall (($generated@@620 T@U) ) (!  (=> (= (type $generated@@620) $generated@@80) (=> (and (not (= $generated@@620 $generated@@140)) ($generated@@0 ($generated@@86 ($generated@@84 $generated@@607 $generated@@620) $generated@@60))) (= ($generated@@84 $generated@@610 $generated@@620) ($generated@@84 $generated@@607 $generated@@620))))
 :pattern ( ($generated@@84 $generated@@610 $generated@@620))
)) ($generated@@135 $generated@@607 $generated@@610)))) (and (=> (= (ControlFlow 0 2) (- 0 3)) true) (=> (= (ControlFlow 0 2) (- 0 1)) (not (= $generated@@612 $generated@@140)))))))
(let (($generated@@621  (=> (and (and (and ($generated@@254 $generated@@607) ($generated@@611 $generated@@607)) (and (not (= $generated@@613 $generated@@140)) (and ($generated@@143 $generated@@613 $generated@@225) ($generated@@77 $generated@@613 $generated@@225 $generated@@607)))) (and (and (=> $generated@@614 (and ($generated@@143 $generated@@615 $generated@@225) ($generated@@77 $generated@@615 $generated@@225 $generated@@607))) true) (and (= 2 $generated@@616) (= (ControlFlow 0 4) 2)))) $generated@@619)))
$generated@@621)))
))
(check-sat)
(pop 1)
; Valid
(get-info :rlimit)
(reset)
(set-option :rlimit 0)
; did a full reset
(reset)
(set-option :print-success false)
(set-info :smt-lib-version 2.6)
(set-option :auto_config false)
(set-option :type_check true)
(set-option :smt.case_split 3)
(set-option :smt.qi.eager_threshold 100)
(set-option :smt.delay_units true)
(set-option :smt.arith.solver 2)
(set-option :smt.mbqi false)
(set-option :model.compact false)
(set-option :model.v2 true)
(set-option :pp.bv_literals false)
; done setting options


(set-info :category "industrial")
(declare-sort |T@U| 0)
(declare-sort |T@T| 0)
(declare-fun real_pow (Real Real) Real)
(declare-fun UOrdering2 (|T@U| |T@U|) Bool)
(declare-fun UOrdering3 (|T@T| |T@U| |T@U|) Bool)
(declare-fun tickleBool (Bool) Bool)
(assert (and (tickleBool true) (tickleBool false)))
(declare-fun $generated (T@U) Int)
(declare-fun $generated@@0 (T@U) Bool)
(declare-fun $generated@@1 (T@T) Int)
(declare-fun $generated@@2 () T@T)
(declare-fun $generated@@3 () T@T)
(declare-fun $generated@@4 () T@T)
(declare-fun $generated@@5 () T@T)
(declare-fun $generated@@6 () T@T)
(declare-fun $generated@@7 () T@T)
(declare-fun $generated@@8 (Int) T@U)
(declare-fun type (T@U) T@T)
(declare-fun $generated@@9 (Real) T@U)
(declare-fun $generated@@10 (T@U) Real)
(declare-fun $generated@@11 (Bool) T@U)
(declare-fun $generated@@12 (RoundingMode) T@U)
(declare-fun $generated@@13 (T@U) RoundingMode)
(declare-fun $generated@@14 (String) T@U)
(declare-fun $generated@@15 (T@U) String)
(declare-fun $generated@@16 ((RegEx String)) T@U)
(declare-fun $generated@@17 (T@U) (RegEx String))
(declare-fun $generated@@44 () T@U)
(declare-fun $generated@@45 () T@U)
(declare-fun $generated@@46 () T@U)
(declare-fun $generated@@47 () T@U)
(declare-fun $generated@@48 () T@U)
(declare-fun $generated@@49 () T@U)
(declare-fun $generated@@50 () T@U)
(declare-fun $generated@@51 () T@U)
(declare-fun $generated@@52 () T@U)
(declare-fun $generated@@53 () T@U)
(declare-fun $generated@@54 () T@U)
(declare-fun $generated@@55 () T@U)
(declare-fun $generated@@56 () T@U)
(declare-fun $generated@@57 () T@U)
(declare-fun $generated@@58 () T@U)
(declare-fun $generated@@59 () T@U)
(declare-fun $generated@@60 () T@U)
(declare-fun $generated@@61 () T@U)
(declare-fun $generated@@62 () T@U)
(declare-fun $generated@@63 () T@U)
(declare-fun $generated@@64 () T@U)
(declare-fun $generated@@65 () T@U)
(declare-fun $generated@@66 () T@U)
(declare-fun $generated@@67 () T@T)
(declare-fun $generated@@68 () T@T)
(declare-fun $generated@@69 (T@T) T@T)
(declare-fun $generated@@70 (T@T) T@T)
(declare-fun $generated@@71 () T@T)
(declare-fun $generated@@72 () T@T)
(declare-fun $generated@@75 (T@U) T@U)
(declare-fun $generated@@77 (T@U T@U T@U) Bool)
(declare-fun $generated@@78 (Int) T@U)
(declare-fun $generated@@79 (T@T T@T) T@T)
(declare-fun $generated@@80 () T@T)
(declare-fun $generated@@81 () T@T)
(declare-fun $generated@@82 (T@T) T@T)
(declare-fun $generated@@83 (T@T) T@T)
(declare-fun $generated@@84 (T@U T@U) T@U)
(declare-fun $generated@@85 (T@U T@U T@U) T@U)
(declare-fun $generated@@86 (T@U T@U) T@U)
(declare-fun $generated@@87 (T@U T@U T@U) T@U)
(declare-fun $generated@@135 (T@U T@U) Bool)
(declare-fun $generated@@136 () T@T)
(declare-fun $generated@@140 () T@U)
(declare-fun $generated@@141 () T@U)
(declare-fun $generated@@144 (T@U T@U) Bool)
(declare-fun $generated@@146 (T@U T@U) T@U)
(declare-fun $generated@@147 (Int) T@U)
(declare-fun $generated@@148 (T@U) Int)
(declare-fun $generated@@155 (T@U) Bool)
(declare-fun $generated@@156 (T@U T@U) T@U)
(declare-fun $generated@@157 () T@T)
(declare-fun $generated@@163 (T@U T@U) Bool)
(declare-fun $generated@@164 (T@U) T@U)
(declare-fun $generated@@165 (T@U) T@U)
(declare-fun $generated@@170 (T@U) T@U)
(declare-fun $generated@@171 (T@U) Bool)
(declare-fun $generated@@175 (T@U) T@U)
(declare-fun $generated@@178 (T@U T@U T@U) T@U)
(declare-fun $generated@@179 (T@U T@U T@U Bool) T@U)
(declare-fun $generated@@180 (T@T T@T) T@T)
(declare-fun $generated@@181 (T@T) T@T)
(declare-fun $generated@@182 (T@T) T@T)
(declare-fun $generated@@183 (T@U T@U T@U T@U) T@U)
(declare-fun $generated@@234 () T@U)
(declare-fun $generated@@237 (T@U T@U) T@U)
(declare-fun $generated@@238 (T@U T@U) Bool)
(declare-fun $generated@@247 (T@U) T@U)
(declare-fun $generated@@252 (T@U) T@U)
(declare-fun $generated@@257 (Int) Int)
(declare-fun $generated@@259 (T@U) T@U)
(declare-fun $generated@@263 (T@U) Bool)
(declare-fun $generated@@264 (T@U T@U T@U) Bool)
(declare-fun $generated@@270 (T@U) T@U)
(declare-fun $generated@@273 (T@U T@U T@U Int) Bool)
(declare-fun $generated@@274 (T@U) T@U)
(declare-fun $generated@@275 () T@T)
(declare-fun $generated@@276 () T@U)
(declare-fun $generated@@282 () Int)
(declare-fun $generated@@283 (T@U T@U) Bool)
(declare-fun $generated@@293 (T@T) T@U)
(declare-fun $generated@@294 (T@U) Int)
(declare-fun $generated@@295 (T@T) T@T)
(declare-fun $generated@@296 (T@T) T@T)
(declare-fun $generated@@301 (T@U) T@U)
(declare-fun $generated@@310 (T@U) Int)
(declare-fun $generated@@311 (T@T) T@U)
(declare-fun $generated@@316 (T@U) T@U)
(declare-fun $generated@@317 (T@T T@T) T@U)
(declare-fun $generated@@318 (T@T T@T) T@T)
(declare-fun $generated@@319 (T@T) T@T)
(declare-fun $generated@@320 (T@T) T@T)
(declare-fun $generated@@334 (T@U) T@U)
(declare-fun $generated@@335 (T@T T@T) T@U)
(declare-fun $generated@@336 (T@T T@T) T@T)
(declare-fun $generated@@337 (T@T) T@T)
(declare-fun $generated@@338 (T@T) T@T)
(declare-fun $generated@@352 (T@U) Bool)
(declare-fun $generated@@359 (T@T T@U) T@U)
(declare-fun $generated@@369 (T@U) T@U)
(declare-fun $generated@@380 (T@U) T@U)
(declare-fun $generated@@402 (T@U) T@U)
(declare-fun $generated@@403 (T@U) T@U)
(declare-fun $generated@@410 (T@U) T@U)
(declare-fun $generated@@411 (T@U) T@U)
(declare-fun $generated@@428 (T@U T@U) T@U)
(declare-fun $generated@@436 (T@U T@U) T@U)
(declare-fun $generated@@446 (T@T) T@U)
(declare-fun $generated@@470 () T@T)
(declare-fun $generated@@474 (T@U) T@U)
(declare-fun $generated@@485 (T@U T@U Int) Bool)
(declare-fun $generated@@490 (T@U) T@U)
(declare-fun $generated@@494 (T@U) T@U)
(declare-fun $generated@@500 (T@U) T@U)
(declare-fun $generated@@504 (T@U) T@U)
(declare-fun $generated@@512 (T@U) T@U)
(declare-fun $generated@@516 (T@U) T@U)
(declare-fun $generated@@524 (T@U) T@U)
(declare-fun $generated@@525 (T@U Int) T@U)
(declare-fun $generated@@534 (T@U) Int)
(declare-fun $generated@@536 (T@U) T@U)
(declare-fun $generated@@540 (T@U) T@U)
(declare-fun $generated@@544 (T@U) T@U)
(declare-fun $generated@@548 (T@U) T@U)
(declare-fun $generated@@570 (T@U) Int)
(declare-fun $generated@@571 (T@U) Int)
(declare-fun $generated@@587 (T@U) T@U)
(declare-fun $generated@@651 (T@U) Int)
(assert  (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (= ($generated@@1 $generated@@2) 0) (= ($generated@@1 $generated@@3) 1)) (= ($generated@@1 $generated@@4) 2)) (= ($generated@@1 $generated@@5) 3)) (= ($generated@@1 $generated@@6) 4)) (= ($generated@@1 $generated@@7) 5)) (forall (($generated@@18 Int) ) (! (= ($generated ($generated@@8 $generated@@18)) $generated@@18)
 :pattern ( ($generated@@8 $generated@@18))
))) (forall (($generated@@19 T@U) ) (!  (=> (= (type $generated@@19) $generated@@2) (= ($generated@@8 ($generated $generated@@19)) $generated@@19))
 :pattern ( ($generated $generated@@19))
))) (forall (($generated@@20 Int) ) (! (= (type ($generated@@8 $generated@@20)) $generated@@2)
 :pattern ( ($generated@@8 $generated@@20))
))) (forall (($generated@@21 Real) ) (! (= ($generated@@10 ($generated@@9 $generated@@21)) $generated@@21)
 :pattern ( ($generated@@9 $generated@@21))
))) (forall (($generated@@22 T@U) ) (!  (=> (= (type $generated@@22) $generated@@3) (= ($generated@@9 ($generated@@10 $generated@@22)) $generated@@22))
 :pattern ( ($generated@@10 $generated@@22))
))) (forall (($generated@@23 Real) ) (! (= (type ($generated@@9 $generated@@23)) $generated@@3)
 :pattern ( ($generated@@9 $generated@@23))
))) (forall (($generated@@24 Bool) ) (! (= ($generated@@0 ($generated@@11 $generated@@24)) $generated@@24)
 :pattern ( ($generated@@11 $generated@@24))
))) (forall (($generated@@25 T@U) ) (!  (=> (= (type $generated@@25) $generated@@4) (= ($generated@@11 ($generated@@0 $generated@@25)) $generated@@25))
 :pattern ( ($generated@@0 $generated@@25))
))) (forall (($generated@@26 Bool) ) (! (= (type ($generated@@11 $generated@@26)) $generated@@4)
 :pattern ( ($generated@@11 $generated@@26))
))) (forall (($generated@@27 RoundingMode) ) (! (= ($generated@@13 ($generated@@12 $generated@@27)) $generated@@27)
 :pattern ( ($generated@@12 $generated@@27))
))) (forall (($generated@@28 T@U) ) (!  (=> (= (type $generated@@28) $generated@@5) (= ($generated@@12 ($generated@@13 $generated@@28)) $generated@@28))
 :pattern ( ($generated@@13 $generated@@28))
))) (forall (($generated@@29 RoundingMode) ) (! (= (type ($generated@@12 $generated@@29)) $generated@@5)
 :pattern ( ($generated@@12 $generated@@29))
))) (forall (($generated@@30 String) ) (! (= ($generated@@15 ($generated@@14 $generated@@30)) $generated@@30)
 :pattern ( ($generated@@14 $generated@@30))
))) (forall (($generated@@31 T@U) ) (!  (=> (= (type $generated@@31) $generated@@6) (= ($generated@@14 ($generated@@15 $generated@@31)) $generated@@31))
 :pattern ( ($generated@@15 $generated@@31))
))) (forall (($generated@@32 String) ) (! (= (type ($generated@@14 $generated@@32)) $generated@@6)
 :pattern ( ($generated@@14 $generated@@32))
))) (forall (($generated@@33 (RegEx String)) ) (! (= ($generated@@17 ($generated@@16 $generated@@33)) $generated@@33)
 :pattern ( ($generated@@16 $generated@@33))
))) (forall (($generated@@34 T@U) ) (!  (=> (= (type $generated@@34) $generated@@7) (= ($generated@@16 ($generated@@17 $generated@@34)) $generated@@34))
 :pattern ( ($generated@@17 $generated@@34))
))) (forall (($generated@@35 (RegEx String)) ) (! (= (type ($generated@@16 $generated@@35)) $generated@@7)
 :pattern ( ($generated@@16 $generated@@35))
))))
(assert (forall (($generated@@36 T@U) ) (! (UOrdering2 $generated@@36 $generated@@36)
 :no-pattern ($generated $generated@@36)
 :no-pattern ($generated@@0 $generated@@36)
)))
(assert (forall (($generated@@37 T@U) ($generated@@38 T@U) ($generated@@39 T@U) ) (! (let (($generated@@40 (type $generated@@37)))
 (=> (and (and (= (type $generated@@38) $generated@@40) (= (type $generated@@39) $generated@@40)) (and (UOrdering2 $generated@@37 $generated@@38) (UOrdering2 $generated@@38 $generated@@39))) (UOrdering2 $generated@@37 $generated@@39)))
 :pattern ( (UOrdering2 $generated@@37 $generated@@38) (UOrdering2 $generated@@38 $generated@@39))
)))
(assert (forall (($generated@@41 T@U) ($generated@@42 T@U) ) (! (let (($generated@@43 (type $generated@@41)))
 (=> (= (type $generated@@42) $generated@@43) (=> (and (UOrdering2 $generated@@41 $generated@@42) (UOrdering2 $generated@@42 $generated@@41)) (= $generated@@41 $generated@@42))))
 :pattern ( (UOrdering2 $generated@@41 $generated@@42) (UOrdering2 $generated@@42 $generated@@41))
)))
(assert  (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (= ($generated@@1 $generated@@67) 6) (= (type $generated@@44) $generated@@67)) (= (type $generated@@45) $generated@@67)) (= (type $generated@@46) $generated@@67)) (= (type $generated@@47) $generated@@67)) (= (type $generated@@48) $generated@@67)) (= ($generated@@1 $generated@@68) 7)) (= (type $generated@@49) $generated@@68)) (= (type $generated@@50) $generated@@68)) (= (type $generated@@51) $generated@@68)) (= (type $generated@@52) $generated@@68)) (= (type $generated@@53) $generated@@68)) (= (type $generated@@54) $generated@@68)) (= (type $generated@@55) $generated@@68)) (= (type $generated@@56) $generated@@68)) (= (type $generated@@57) $generated@@68)) (= (type $generated@@58) $generated@@68)) (= (type $generated@@59) $generated@@68)) (forall (($generated@@73 T@T) ) (= ($generated@@1 ($generated@@69 $generated@@73)) 8))) (forall (($generated@@74 T@T) ) (! (= ($generated@@70 ($generated@@69 $generated@@74)) $generated@@74)
 :pattern ( ($generated@@69 $generated@@74))
))) (= (type $generated@@60) ($generated@@69 $generated@@4))) (= ($generated@@1 $generated@@71) 9)) (= (type $generated@@61) $generated@@71)) (= (type $generated@@62) $generated@@68)) (= (type $generated@@63) $generated@@68)) (= (type $generated@@64) $generated@@68)) (= ($generated@@1 $generated@@72) 10)) (= (type $generated@@65) $generated@@72)) (= (type $generated@@66) $generated@@72)))
(assert (distinct $generated@@44 $generated@@45 $generated@@46 $generated@@47 $generated@@48 $generated@@49 $generated@@50 $generated@@51 $generated@@52 $generated@@53 $generated@@54 $generated@@55 $generated@@56 $generated@@57 $generated@@58 $generated@@59 $generated@@60 $generated@@61 $generated@@62 $generated@@63 $generated@@64 $generated@@65 $generated@@66)
)
(assert (forall (($generated@@76 T@U) ) (! (= (type ($generated@@75 $generated@@76)) $generated@@68)
 :pattern ( ($generated@@75 $generated@@76))
)))
(assert (= ($generated@@75 $generated@@44) $generated@@49))
(assert (= ($generated@@75 $generated@@45) $generated@@50))
(assert (= ($generated@@75 $generated@@46) $generated@@51))
(assert (= ($generated@@75 $generated@@47) $generated@@52))
(assert (= ($generated@@75 $generated@@48) $generated@@53))
(assert  (and (and (and (and (and (and (and (and (and (and (and (and (and (forall (($generated@@88 T@T) ($generated@@89 T@T) ) (= ($generated@@1 ($generated@@79 $generated@@88 $generated@@89)) 11)) (forall (($generated@@90 T@T) ($generated@@91 T@T) ) (! (= ($generated@@82 ($generated@@79 $generated@@90 $generated@@91)) $generated@@90)
 :pattern ( ($generated@@79 $generated@@90 $generated@@91))
))) (forall (($generated@@92 T@T) ($generated@@93 T@T) ) (! (= ($generated@@83 ($generated@@79 $generated@@92 $generated@@93)) $generated@@93)
 :pattern ( ($generated@@79 $generated@@92 $generated@@93))
))) (forall (($generated@@94 T@U) ($generated@@95 T@U) ) (! (let (($generated@@96 ($generated@@83 (type $generated@@94))))
(= (type ($generated@@84 $generated@@94 $generated@@95)) $generated@@96))
 :pattern ( ($generated@@84 $generated@@94 $generated@@95))
))) (forall (($generated@@97 T@U) ($generated@@98 T@U) ($generated@@99 T@U) ) (! (let (($generated@@100 (type $generated@@99)))
(let (($generated@@101 (type $generated@@98)))
(= (type ($generated@@85 $generated@@97 $generated@@98 $generated@@99)) ($generated@@79 $generated@@101 $generated@@100))))
 :pattern ( ($generated@@85 $generated@@97 $generated@@98 $generated@@99))
))) (forall (($generated@@102 T@U) ($generated@@103 T@U) ($generated@@104 T@U) ) (! (let (($generated@@105 ($generated@@83 (type $generated@@102))))
 (=> (= (type $generated@@104) $generated@@105) (= ($generated@@84 ($generated@@85 $generated@@102 $generated@@103 $generated@@104) $generated@@103) $generated@@104)))
 :weight 0
))) (and (forall (($generated@@106 T@U) ($generated@@107 T@U) ($generated@@108 T@U) ($generated@@109 T@U) ) (!  (or (= $generated@@108 $generated@@109) (= ($generated@@84 ($generated@@85 $generated@@107 $generated@@108 $generated@@106) $generated@@109) ($generated@@84 $generated@@107 $generated@@109)))
 :weight 0
)) (forall (($generated@@110 T@U) ($generated@@111 T@U) ($generated@@112 T@U) ($generated@@113 T@U) ) (!  (or true (= ($generated@@84 ($generated@@85 $generated@@111 $generated@@112 $generated@@110) $generated@@113) ($generated@@84 $generated@@111 $generated@@113)))
 :weight 0
)))) (= ($generated@@1 $generated@@80) 12)) (forall (($generated@@114 T@U) ($generated@@115 T@U) ) (! (let (($generated@@116 ($generated@@70 (type $generated@@115))))
(= (type ($generated@@86 $generated@@114 $generated@@115)) $generated@@116))
 :pattern ( ($generated@@86 $generated@@114 $generated@@115))
))) (= ($generated@@1 $generated@@81) 13)) (forall (($generated@@117 T@U) ($generated@@118 T@U) ($generated@@119 T@U) ) (! (= (type ($generated@@87 $generated@@117 $generated@@118 $generated@@119)) $generated@@81)
 :pattern ( ($generated@@87 $generated@@117 $generated@@118 $generated@@119))
))) (forall (($generated@@120 T@U) ($generated@@121 T@U) ($generated@@122 T@U) ) (! (let (($generated@@123 ($generated@@70 (type $generated@@121))))
 (=> (= (type $generated@@122) $generated@@123) (= ($generated@@86 ($generated@@87 $generated@@120 $generated@@121 $generated@@122) $generated@@121) $generated@@122)))
 :weight 0
))) (and (forall (($generated@@124 T@U) ($generated@@125 T@U) ($generated@@126 T@U) ($generated@@127 T@U) ) (!  (or (= $generated@@126 $generated@@127) (= ($generated@@86 ($generated@@87 $generated@@125 $generated@@126 $generated@@124) $generated@@127) ($generated@@86 $generated@@125 $generated@@127)))
 :weight 0
)) (forall (($generated@@128 T@U) ($generated@@129 T@U) ($generated@@130 T@U) ($generated@@131 T@U) ) (!  (or true (= ($generated@@86 ($generated@@87 $generated@@129 $generated@@130 $generated@@128) $generated@@131) ($generated@@86 $generated@@129 $generated@@131)))
 :weight 0
)))) (forall (($generated@@132 Int) ) (! (= (type ($generated@@78 $generated@@132)) $generated@@67)
 :pattern ( ($generated@@78 $generated@@132))
))))
(assert (forall (($generated@@133 T@U) ($generated@@134 T@U) ) (!  (=> (and (= (type $generated@@133) $generated@@2) (= (type $generated@@134) ($generated@@79 $generated@@80 $generated@@81))) ($generated@@77 $generated@@133 ($generated@@78 0) $generated@@134))
 :pattern ( ($generated@@77 $generated@@133 ($generated@@78 0) $generated@@134))
)))
(assert (= ($generated@@1 $generated@@136) 14))
(assert (forall (($generated@@137 T@U) ($generated@@138 T@U) ($generated@@139 T@U) ) (!  (=> (and (and (and (= (type $generated@@137) $generated@@136) (= (type $generated@@138) $generated@@136)) (= (type $generated@@139) $generated@@136)) (and ($generated@@135 $generated@@137 $generated@@138) ($generated@@135 $generated@@138 $generated@@139))) ($generated@@135 $generated@@137 $generated@@139))
 :pattern ( ($generated@@135 $generated@@137 $generated@@138) ($generated@@135 $generated@@138 $generated@@139))
 :pattern ( ($generated@@135 $generated@@137 $generated@@138) ($generated@@135 $generated@@137 $generated@@139))
)))
(assert  (and (= (type $generated@@140) $generated@@67) (= (type $generated@@141) $generated@@80)))
(assert (forall (($generated@@142 T@U) ($generated@@143 T@U) ) (!  (=> (and (= (type $generated@@142) $generated@@80) (= (type $generated@@143) ($generated@@79 $generated@@80 $generated@@81))) (= ($generated@@77 $generated@@142 $generated@@140 $generated@@143)  (or (= $generated@@142 $generated@@141) ($generated@@0 ($generated@@86 ($generated@@84 $generated@@143 $generated@@142) $generated@@60)))))
 :pattern ( ($generated@@77 $generated@@142 $generated@@140 $generated@@143))
)))
(assert (forall (($generated@@145 T@U) ) (!  (=> (= (type $generated@@145) $generated@@2) ($generated@@144 $generated@@145 ($generated@@78 0)))
 :pattern ( ($generated@@144 $generated@@145 ($generated@@78 0)))
)))
(assert  (and (forall (($generated@@149 T@U) ($generated@@150 T@U) ) (! (= (type ($generated@@146 $generated@@149 $generated@@150)) $generated@@136)
 :pattern ( ($generated@@146 $generated@@149 $generated@@150))
)) (forall (($generated@@151 Int) ) (! (= (type ($generated@@147 $generated@@151)) $generated@@136)
 :pattern ( ($generated@@147 $generated@@151))
))))
(assert (forall (($generated@@152 T@U) ($generated@@153 Int) ($generated@@154 Int) ) (!  (=> (= (type $generated@@152) $generated@@136) (=> (and (and (<= 0 $generated@@153) (<= 0 $generated@@154)) (<= (+ $generated@@153 $generated@@154) ($generated@@148 $generated@@152))) (= ($generated@@146 ($generated@@146 $generated@@152 ($generated@@147 $generated@@153)) ($generated@@147 $generated@@154)) ($generated@@146 $generated@@152 ($generated@@147 (+ $generated@@153 $generated@@154))))))
 :pattern ( ($generated@@146 ($generated@@146 $generated@@152 ($generated@@147 $generated@@153)) ($generated@@147 $generated@@154)))
)))
(assert  (and (= ($generated@@1 $generated@@157) 15) (forall (($generated@@158 T@U) ($generated@@159 T@U) ) (! (= (type ($generated@@156 $generated@@158 $generated@@159)) $generated@@67)
 :pattern ( ($generated@@156 $generated@@158 $generated@@159))
))))
(assert (forall (($generated@@160 T@U) ($generated@@161 T@U) ($generated@@162 T@U) ) (!  (=> (and (and (and (= (type $generated@@160) $generated@@67) (= (type $generated@@161) $generated@@67)) (= (type $generated@@162) $generated@@157)) ($generated@@144 $generated@@162 ($generated@@156 $generated@@160 $generated@@161))) ($generated@@155 $generated@@162))
 :pattern ( ($generated@@155 $generated@@162) ($generated@@144 $generated@@162 ($generated@@156 $generated@@160 $generated@@161)))
)))
(assert  (and (forall (($generated@@166 T@U) ) (! (= (type ($generated@@164 $generated@@166)) $generated@@136)
 :pattern ( ($generated@@164 $generated@@166))
)) (forall (($generated@@167 T@U) ) (! (= (type ($generated@@165 $generated@@167)) $generated@@136)
 :pattern ( ($generated@@165 $generated@@167))
))))
(assert (forall (($generated@@168 T@U) ($generated@@169 T@U) ) (!  (=> (and (and (= (type $generated@@168) $generated@@157) (= (type $generated@@169) $generated@@157)) true) (= ($generated@@163 $generated@@168 $generated@@169)  (and (= ($generated@@164 $generated@@168) ($generated@@164 $generated@@169)) (= ($generated@@165 $generated@@168) ($generated@@165 $generated@@169)))))
 :pattern ( ($generated@@163 $generated@@168 $generated@@169))
)))
(assert (forall (($generated@@172 T@U) ) (! (= (type ($generated@@170 $generated@@172)) $generated@@67)
 :pattern ( ($generated@@170 $generated@@172))
)))
(assert (forall (($generated@@173 T@U) ($generated@@174 T@U) ) (!  (=> (and (and (= (type $generated@@173) ($generated@@79 $generated@@136 $generated@@2)) (= (type $generated@@174) $generated@@67)) ($generated@@144 $generated@@173 ($generated@@170 $generated@@174))) ($generated@@171 $generated@@173))
 :pattern ( ($generated@@144 $generated@@173 ($generated@@170 $generated@@174)))
)))
(assert (forall (($generated@@176 T@U) ) (! (= (type ($generated@@175 $generated@@176)) $generated@@67)
 :pattern ( ($generated@@175 $generated@@176))
)))
(assert (forall (($generated@@177 T@U) ) (!  (=> (= (type $generated@@177) $generated@@80) (= ($generated@@144 $generated@@177 $generated@@140)  (or (= $generated@@177 $generated@@141) (= ($generated@@175 $generated@@177) $generated@@140))))
 :pattern ( ($generated@@144 $generated@@177 $generated@@140))
)))
(assert  (and (and (and (and (and (and (and (forall (($generated@@184 T@T) ($generated@@185 T@T) ) (= ($generated@@1 ($generated@@180 $generated@@184 $generated@@185)) 16)) (forall (($generated@@186 T@T) ($generated@@187 T@T) ) (! (= ($generated@@181 ($generated@@180 $generated@@186 $generated@@187)) $generated@@186)
 :pattern ( ($generated@@180 $generated@@186 $generated@@187))
))) (forall (($generated@@188 T@T) ($generated@@189 T@T) ) (! (= ($generated@@182 ($generated@@180 $generated@@188 $generated@@189)) $generated@@189)
 :pattern ( ($generated@@180 $generated@@188 $generated@@189))
))) (forall (($generated@@190 T@U) ($generated@@191 T@U) ($generated@@192 T@U) ) (! (let (($generated@@193 ($generated@@182 (type $generated@@190))))
(= (type ($generated@@178 $generated@@190 $generated@@191 $generated@@192)) $generated@@193))
 :pattern ( ($generated@@178 $generated@@190 $generated@@191 $generated@@192))
))) (forall (($generated@@194 T@U) ($generated@@195 T@U) ($generated@@196 T@U) ($generated@@197 T@U) ) (! (let (($generated@@198 (type $generated@@197)))
(let (($generated@@199 (type $generated@@195)))
(= (type ($generated@@183 $generated@@194 $generated@@195 $generated@@196 $generated@@197)) ($generated@@180 $generated@@199 $generated@@198))))
 :pattern ( ($generated@@183 $generated@@194 $generated@@195 $generated@@196 $generated@@197))
))) (forall (($generated@@200 T@U) ($generated@@201 T@U) ($generated@@202 T@U) ($generated@@203 T@U) ) (! (let (($generated@@204 ($generated@@182 (type $generated@@200))))
 (=> (= (type $generated@@203) $generated@@204) (= ($generated@@178 ($generated@@183 $generated@@200 $generated@@201 $generated@@202 $generated@@203) $generated@@201 $generated@@202) $generated@@203)))
 :weight 0
))) (and (and (forall (($generated@@205 T@U) ($generated@@206 T@U) ($generated@@207 T@U) ($generated@@208 T@U) ($generated@@209 T@U) ($generated@@210 T@U) ) (!  (or (= $generated@@207 $generated@@209) (= ($generated@@178 ($generated@@183 $generated@@206 $generated@@207 $generated@@208 $generated@@205) $generated@@209 $generated@@210) ($generated@@178 $generated@@206 $generated@@209 $generated@@210)))
 :weight 0
)) (forall (($generated@@211 T@U) ($generated@@212 T@U) ($generated@@213 T@U) ($generated@@214 T@U) ($generated@@215 T@U) ($generated@@216 T@U) ) (!  (or (= $generated@@214 $generated@@216) (= ($generated@@178 ($generated@@183 $generated@@212 $generated@@213 $generated@@214 $generated@@211) $generated@@215 $generated@@216) ($generated@@178 $generated@@212 $generated@@215 $generated@@216)))
 :weight 0
))) (forall (($generated@@217 T@U) ($generated@@218 T@U) ($generated@@219 T@U) ($generated@@220 T@U) ($generated@@221 T@U) ($generated@@222 T@U) ) (!  (or true (= ($generated@@178 ($generated@@183 $generated@@218 $generated@@219 $generated@@220 $generated@@217) $generated@@221 $generated@@222) ($generated@@178 $generated@@218 $generated@@221 $generated@@222)))
 :weight 0
)))) (forall (($generated@@223 T@U) ($generated@@224 T@U) ($generated@@225 T@U) ($generated@@226 Bool) ) (! (= (type ($generated@@179 $generated@@223 $generated@@224 $generated@@225 $generated@@226)) ($generated@@180 $generated@@80 $generated@@4))
 :pattern ( ($generated@@179 $generated@@223 $generated@@224 $generated@@225 $generated@@226))
))))
(assert (forall (($generated@@227 T@U) ($generated@@228 T@U) ($generated@@229 T@U) ($generated@@230 Bool) ($generated@@231 T@U) ($generated@@232 T@U) ) (! (let (($generated@@233 ($generated@@70 (type $generated@@232))))
 (=> (and (and (and (and (= (type $generated@@227) $generated@@80) (= (type $generated@@228) ($generated@@79 $generated@@80 $generated@@81))) (= (type $generated@@229) ($generated@@69 $generated@@4))) (= (type $generated@@231) $generated@@80)) (= (type $generated@@232) ($generated@@69 $generated@@233))) (= ($generated@@0 ($generated@@178 ($generated@@179 $generated@@227 $generated@@228 $generated@@229 $generated@@230) $generated@@231 $generated@@232))  (=> (and (not (= $generated@@231 $generated@@227)) ($generated@@0 ($generated@@86 ($generated@@84 $generated@@228 $generated@@231) $generated@@229))) $generated@@230))))
 :pattern ( ($generated@@178 ($generated@@179 $generated@@227 $generated@@228 $generated@@229 $generated@@230) $generated@@231 $generated@@232))
)))
(assert (= (type $generated@@234) $generated@@67))
(assert (forall (($generated@@235 T@U) ($generated@@236 T@U) ) (!  (=> (and (= (type $generated@@235) $generated@@80) (= (type $generated@@236) ($generated@@79 $generated@@80 $generated@@81))) (= ($generated@@77 $generated@@235 $generated@@234 $generated@@236) ($generated@@77 $generated@@235 $generated@@140 $generated@@236)))
 :pattern ( ($generated@@77 $generated@@235 $generated@@234 $generated@@236))
)))
(assert (forall (($generated@@239 T@U) ($generated@@240 T@U) ) (! (= (type ($generated@@237 $generated@@239 $generated@@240)) $generated@@157)
 :pattern ( ($generated@@237 $generated@@239 $generated@@240))
)))
(assert (forall (($generated@@241 T@U) ($generated@@242 T@U) ($generated@@243 T@U) ($generated@@244 T@U) ) (!  (=> (and (and (and (= (type $generated@@241) $generated@@67) (= (type $generated@@242) $generated@@67)) (= (type $generated@@243) $generated@@136)) (= (type $generated@@244) $generated@@136)) (= ($generated@@144 ($generated@@237 $generated@@243 $generated@@244) ($generated@@156 $generated@@241 $generated@@242))  (and ($generated@@238 $generated@@243 $generated@@241) ($generated@@238 $generated@@244 $generated@@242))))
 :pattern ( ($generated@@144 ($generated@@237 $generated@@243 $generated@@244) ($generated@@156 $generated@@241 $generated@@242)))
)))
(assert (forall (($generated@@245 T@U) ($generated@@246 T@U) ) (!  (=> (and (= (type $generated@@245) $generated@@157) (= (type $generated@@246) $generated@@157)) (= ($generated@@163 $generated@@245 $generated@@246) (= $generated@@245 $generated@@246)))
 :pattern ( ($generated@@163 $generated@@245 $generated@@246))
)))
(assert (forall (($generated@@248 T@U) ) (! (= (type ($generated@@247 $generated@@248)) $generated@@67)
 :pattern ( ($generated@@247 $generated@@248))
)))
(assert (forall (($generated@@249 T@U) ($generated@@250 T@U) ) (!  (=> (and (= (type $generated@@249) ($generated@@79 $generated@@136 $generated@@4)) (= (type $generated@@250) $generated@@67)) (= ($generated@@144 $generated@@249 ($generated@@247 $generated@@250)) (forall (($generated@@251 T@U) ) (!  (=> (and (= (type $generated@@251) $generated@@136) ($generated@@0 ($generated@@84 $generated@@249 $generated@@251))) ($generated@@238 $generated@@251 $generated@@250))
 :pattern ( ($generated@@84 $generated@@249 $generated@@251))
))))
 :pattern ( ($generated@@144 $generated@@249 ($generated@@247 $generated@@250)))
)))
(assert (forall (($generated@@253 T@U) ) (! (= (type ($generated@@252 $generated@@253)) $generated@@67)
 :pattern ( ($generated@@252 $generated@@253))
)))
(assert (forall (($generated@@254 T@U) ($generated@@255 T@U) ) (!  (=> (and (= (type $generated@@254) ($generated@@79 $generated@@136 $generated@@4)) (= (type $generated@@255) $generated@@67)) (= ($generated@@144 $generated@@254 ($generated@@252 $generated@@255)) (forall (($generated@@256 T@U) ) (!  (=> (and (= (type $generated@@256) $generated@@136) ($generated@@0 ($generated@@84 $generated@@254 $generated@@256))) ($generated@@238 $generated@@256 $generated@@255))
 :pattern ( ($generated@@84 $generated@@254 $generated@@256))
))))
 :pattern ( ($generated@@144 $generated@@254 ($generated@@252 $generated@@255)))
)))
(assert (forall (($generated@@258 Int) ) (! (= ($generated@@257 $generated@@258) $generated@@258)
 :pattern ( ($generated@@257 $generated@@258))
)))
(assert (forall (($generated@@260 T@U) ) (! (let (($generated@@261 (type $generated@@260)))
(= (type ($generated@@259 $generated@@260)) $generated@@261))
 :pattern ( ($generated@@259 $generated@@260))
)))
(assert (forall (($generated@@262 T@U) ) (! (= ($generated@@259 $generated@@262) $generated@@262)
 :pattern ( ($generated@@259 $generated@@262))
)))
(assert (forall (($generated@@265 T@U) ($generated@@266 T@U) ($generated@@267 T@U) ($generated@@268 T@U) ($generated@@269 T@U) ) (!  (=> (and (and (and (and (and (= (type $generated@@265) $generated@@67) (= (type $generated@@266) $generated@@67)) (= (type $generated@@267) $generated@@136)) (= (type $generated@@268) $generated@@136)) (= (type $generated@@269) ($generated@@79 $generated@@80 $generated@@81))) ($generated@@263 $generated@@269)) (= ($generated@@77 ($generated@@237 $generated@@267 $generated@@268) ($generated@@156 $generated@@265 $generated@@266) $generated@@269)  (and ($generated@@264 $generated@@267 $generated@@265 $generated@@269) ($generated@@264 $generated@@268 $generated@@266 $generated@@269))))
 :pattern ( ($generated@@77 ($generated@@237 $generated@@267 $generated@@268) ($generated@@156 $generated@@265 $generated@@266) $generated@@269))
)))
(assert (forall (($generated@@271 T@U) ) (! (= (type ($generated@@270 $generated@@271)) $generated@@71)
 :pattern ( ($generated@@270 $generated@@271))
)))
(assert (forall (($generated@@272 T@U) ) (!  (=> (= (type $generated@@272) $generated@@157) (= ($generated@@155 $generated@@272) (= ($generated@@270 $generated@@272) $generated@@61)))
 :pattern ( ($generated@@155 $generated@@272))
)))
(assert  (and (and (= ($generated@@1 $generated@@275) 17) (forall (($generated@@277 T@U) ) (! (= (type ($generated@@274 $generated@@277)) $generated@@275)
 :pattern ( ($generated@@274 $generated@@277))
))) (= (type $generated@@276) $generated@@275)))
(assert (forall (($generated@@278 T@U) ($generated@@279 T@U) ($generated@@280 T@U) ($generated@@281 Int) ) (!  (=> (and (and (= (type $generated@@278) $generated@@275) (= (type $generated@@279) $generated@@80)) (= (type $generated@@280) $generated@@136)) (= ($generated@@273 $generated@@278 $generated@@279 $generated@@280 $generated@@281) ($generated@@273 $generated@@276 $generated@@279 $generated@@280 $generated@@281)))
 :pattern ( ($generated@@273 ($generated@@274 $generated@@278) $generated@@279 $generated@@280 $generated@@281))
)))
(assert  (=> (<= 1 $generated@@282) (forall (($generated@@284 T@U) ($generated@@285 T@U) ($generated@@286 Int) ($generated@@287 T@U) ($generated@@288 T@U) ($generated@@289 T@U) ) (!  (=> (and (and (and (and (and (and (= (type $generated@@284) $generated@@275) (= (type $generated@@285) $generated@@80)) (= (type $generated@@287) $generated@@136)) (= (type $generated@@288) $generated@@136)) (= (type $generated@@289) $generated@@136)) ($generated@@135 $generated@@287 $generated@@288)) ($generated@@273 $generated@@284 $generated@@285 $generated@@287 $generated@@286)) ($generated@@273 $generated@@284 $generated@@285 $generated@@288 $generated@@286))
 :pattern ( ($generated@@273 $generated@@284 $generated@@285 $generated@@287 $generated@@286) ($generated@@283 $generated@@287 $generated@@289) ($generated@@283 $generated@@288 $generated@@289))
))))
(assert (forall (($generated@@290 T@U) ) (!  (=> (and (= (type $generated@@290) $generated@@157) ($generated@@155 $generated@@290)) (exists (($generated@@291 T@U) ($generated@@292 T@U) ) (!  (and (and (= (type $generated@@291) $generated@@136) (= (type $generated@@292) $generated@@136)) (= $generated@@290 ($generated@@237 $generated@@291 $generated@@292)))
 :no-pattern (type $generated@@291)
 :no-pattern (type $generated@@292)
 :no-pattern ($generated $generated@@291)
 :no-pattern ($generated@@0 $generated@@291)
 :no-pattern ($generated $generated@@292)
 :no-pattern ($generated@@0 $generated@@292)
)))
 :pattern ( ($generated@@155 $generated@@290))
)))
(assert  (and (and (forall (($generated@@297 T@T) ) (= ($generated@@1 ($generated@@295 $generated@@297)) 18)) (forall (($generated@@298 T@T) ) (! (= ($generated@@296 ($generated@@295 $generated@@298)) $generated@@298)
 :pattern ( ($generated@@295 $generated@@298))
))) (forall (($generated@@299 T@T) ) (! (= (type ($generated@@293 $generated@@299)) ($generated@@295 $generated@@299))
 :pattern ( ($generated@@293 $generated@@299))
))))
(assert (forall (($generated@@300 T@T) ) (! (= ($generated@@294 ($generated@@293 $generated@@300)) 0)
 :pattern ( ($generated@@293 $generated@@300))
)))
(assert (forall (($generated@@302 T@U) ) (! (= (type ($generated@@301 $generated@@302)) $generated@@136)
 :pattern ( ($generated@@301 $generated@@302))
)))
(assert (forall (($generated@@303 T@U) ($generated@@304 T@U) ($generated@@305 T@U) ) (!  (=> (and (= (type $generated@@304) $generated@@67) (= (type $generated@@305) ($generated@@79 $generated@@80 $generated@@81))) (= ($generated@@264 ($generated@@301 $generated@@303) $generated@@304 $generated@@305) ($generated@@77 $generated@@303 $generated@@304 $generated@@305)))
 :pattern ( ($generated@@264 ($generated@@301 $generated@@303) $generated@@304 $generated@@305))
)))
(assert  (=> (<= 1 $generated@@282) (forall (($generated@@306 T@U) ($generated@@307 T@U) ($generated@@308 Int) ($generated@@309 T@U) ) (!  (=> (and (and (and (= (type $generated@@306) $generated@@275) (= (type $generated@@307) $generated@@80)) (= (type $generated@@309) $generated@@136)) (and (and (not (= $generated@@307 $generated@@141)) ($generated@@144 $generated@@307 $generated@@234)) (= $generated@@309 ($generated@@147 0)))) (not ($generated@@273 $generated@@306 $generated@@307 $generated@@309 $generated@@308)))
 :pattern ( ($generated@@273 $generated@@306 $generated@@307 $generated@@309 $generated@@308))
))))
(assert (forall (($generated@@312 T@T) ) (! (= (type ($generated@@311 $generated@@312)) ($generated@@79 $generated@@312 $generated@@2))
 :pattern ( ($generated@@311 $generated@@312))
)))
(assert (forall (($generated@@313 T@U) ) (! (let (($generated@@314 ($generated@@82 (type $generated@@313))))
 (=> (= (type $generated@@313) ($generated@@79 $generated@@314 $generated@@2)) (and (= (= ($generated@@310 $generated@@313) 0) (= $generated@@313 ($generated@@311 $generated@@314))) (=> (not (= ($generated@@310 $generated@@313) 0)) (exists (($generated@@315 T@U) ) (!  (and (= (type $generated@@315) $generated@@314) (< 0 ($generated ($generated@@84 $generated@@313 $generated@@315))))
 :no-pattern (type $generated@@315)
 :no-pattern ($generated $generated@@315)
 :no-pattern ($generated@@0 $generated@@315)
))))))
 :pattern ( ($generated@@310 $generated@@313))
)))
(assert  (and (and (and (and (forall (($generated@@321 T@T) ($generated@@322 T@T) ) (= ($generated@@1 ($generated@@318 $generated@@321 $generated@@322)) 19)) (forall (($generated@@323 T@T) ($generated@@324 T@T) ) (! (= ($generated@@319 ($generated@@318 $generated@@323 $generated@@324)) $generated@@323)
 :pattern ( ($generated@@318 $generated@@323 $generated@@324))
))) (forall (($generated@@325 T@T) ($generated@@326 T@T) ) (! (= ($generated@@320 ($generated@@318 $generated@@325 $generated@@326)) $generated@@326)
 :pattern ( ($generated@@318 $generated@@325 $generated@@326))
))) (forall (($generated@@327 T@U) ) (! (let (($generated@@328 ($generated@@319 (type $generated@@327))))
(= (type ($generated@@316 $generated@@327)) ($generated@@79 $generated@@328 $generated@@4)))
 :pattern ( ($generated@@316 $generated@@327))
))) (forall (($generated@@329 T@T) ($generated@@330 T@T) ) (! (= (type ($generated@@317 $generated@@329 $generated@@330)) ($generated@@318 $generated@@329 $generated@@330))
 :pattern ( ($generated@@317 $generated@@329 $generated@@330))
))))
(assert (forall (($generated@@331 T@U) ($generated@@332 T@T) ) (! (let (($generated@@333 (type $generated@@331)))
 (not ($generated@@0 ($generated@@84 ($generated@@316 ($generated@@317 $generated@@333 $generated@@332)) $generated@@331))))
 :pattern ( (let (($generated@@333 (type $generated@@331)))
($generated@@84 ($generated@@316 ($generated@@317 $generated@@333 $generated@@332)) $generated@@331)))
)))
(assert  (and (and (and (and (forall (($generated@@339 T@T) ($generated@@340 T@T) ) (= ($generated@@1 ($generated@@336 $generated@@339 $generated@@340)) 20)) (forall (($generated@@341 T@T) ($generated@@342 T@T) ) (! (= ($generated@@337 ($generated@@336 $generated@@341 $generated@@342)) $generated@@341)
 :pattern ( ($generated@@336 $generated@@341 $generated@@342))
))) (forall (($generated@@343 T@T) ($generated@@344 T@T) ) (! (= ($generated@@338 ($generated@@336 $generated@@343 $generated@@344)) $generated@@344)
 :pattern ( ($generated@@336 $generated@@343 $generated@@344))
))) (forall (($generated@@345 T@U) ) (! (let (($generated@@346 ($generated@@337 (type $generated@@345))))
(= (type ($generated@@334 $generated@@345)) ($generated@@79 $generated@@346 $generated@@4)))
 :pattern ( ($generated@@334 $generated@@345))
))) (forall (($generated@@347 T@T) ($generated@@348 T@T) ) (! (= (type ($generated@@335 $generated@@347 $generated@@348)) ($generated@@336 $generated@@347 $generated@@348))
 :pattern ( ($generated@@335 $generated@@347 $generated@@348))
))))
(assert (forall (($generated@@349 T@U) ($generated@@350 T@T) ) (! (let (($generated@@351 (type $generated@@349)))
 (not ($generated@@0 ($generated@@84 ($generated@@334 ($generated@@335 $generated@@351 $generated@@350)) $generated@@349))))
 :pattern ( (let (($generated@@351 (type $generated@@349)))
($generated@@84 ($generated@@334 ($generated@@335 $generated@@351 $generated@@350)) $generated@@349)))
)))
(assert (forall (($generated@@353 T@U) ($generated@@354 T@U) ) (!  (=> (and (and (= (type $generated@@353) $generated@@136) (= (type $generated@@354) $generated@@136)) (and ($generated@@352 $generated@@354) (<= ($generated@@148 $generated@@354) ($generated@@148 $generated@@353)))) (and (= ($generated@@352 ($generated@@146 $generated@@353 $generated@@354)) ($generated@@352 $generated@@353)) (= ($generated@@148 ($generated@@146 $generated@@353 $generated@@354)) (- ($generated@@148 $generated@@353) ($generated@@148 $generated@@354)))))
 :pattern ( ($generated@@146 $generated@@353 $generated@@354))
)))
(assert (forall (($generated@@355 Int) ) (!  (=> (<= 0 $generated@@355) (and ($generated@@352 ($generated@@147 $generated@@355)) (= ($generated@@148 ($generated@@147 $generated@@355)) $generated@@355)))
 :pattern ( ($generated@@147 $generated@@355))
)))
(assert (forall (($generated@@356 T@U) ) (! (let (($generated@@357 ($generated@@82 (type $generated@@356))))
 (=> (= (type $generated@@356) ($generated@@79 $generated@@357 $generated@@2)) (= ($generated@@171 $generated@@356) (forall (($generated@@358 T@U) ) (!  (=> (= (type $generated@@358) $generated@@357) (and (<= 0 ($generated ($generated@@84 $generated@@356 $generated@@358))) (<= ($generated ($generated@@84 $generated@@356 $generated@@358)) ($generated@@310 $generated@@356))))
 :pattern ( ($generated@@84 $generated@@356 $generated@@358))
)))))
 :pattern ( ($generated@@171 $generated@@356))
)))
(assert (forall (($generated@@360 T@T) ($generated@@361 T@U) ) (! (= (type ($generated@@359 $generated@@360 $generated@@361)) $generated@@360)
 :pattern ( ($generated@@359 $generated@@360 $generated@@361))
)))
(assert (forall (($generated@@362 T@U) ) (!  (=> (and (= (type $generated@@362) $generated@@136) ($generated@@238 $generated@@362 $generated@@140)) (and (= ($generated@@301 ($generated@@359 $generated@@80 $generated@@362)) $generated@@362) ($generated@@144 ($generated@@359 $generated@@80 $generated@@362) $generated@@140)))
 :pattern ( ($generated@@238 $generated@@362 $generated@@140))
)))
(assert (forall (($generated@@363 T@U) ) (!  (=> (and (= (type $generated@@363) $generated@@136) ($generated@@238 $generated@@363 $generated@@234)) (and (= ($generated@@301 ($generated@@359 $generated@@80 $generated@@363)) $generated@@363) ($generated@@144 ($generated@@359 $generated@@80 $generated@@363) $generated@@234)))
 :pattern ( ($generated@@238 $generated@@363 $generated@@234))
)))
(assert (forall (($generated@@364 T@U) ) (!  (=> (= (type $generated@@364) $generated@@80) (= ($generated@@144 $generated@@364 $generated@@234)  (and ($generated@@144 $generated@@364 $generated@@140) (not (= $generated@@364 $generated@@141)))))
 :pattern ( ($generated@@144 $generated@@364 $generated@@234))
)))
(assert (forall (($generated@@365 T@U) ) (! (let (($generated@@366 ($generated@@320 (type $generated@@365))))
(let (($generated@@367 ($generated@@319 (type $generated@@365))))
 (=> (= (type $generated@@365) ($generated@@318 $generated@@367 $generated@@366)) (or (= $generated@@365 ($generated@@317 $generated@@367 $generated@@366)) (exists (($generated@@368 T@U) ) (!  (and (= (type $generated@@368) $generated@@367) ($generated@@0 ($generated@@84 ($generated@@316 $generated@@365) $generated@@368)))
 :no-pattern (type $generated@@368)
 :no-pattern ($generated $generated@@368)
 :no-pattern ($generated@@0 $generated@@368)
))))))
 :pattern ( ($generated@@316 $generated@@365))
)))
(assert (forall (($generated@@370 T@U) ) (! (let (($generated@@371 ($generated@@320 (type $generated@@370))))
(= (type ($generated@@369 $generated@@370)) ($generated@@79 $generated@@371 $generated@@4)))
 :pattern ( ($generated@@369 $generated@@370))
)))
(assert (forall (($generated@@372 T@U) ) (! (let (($generated@@373 ($generated@@320 (type $generated@@372))))
(let (($generated@@374 ($generated@@319 (type $generated@@372))))
 (=> (= (type $generated@@372) ($generated@@318 $generated@@374 $generated@@373)) (or (= $generated@@372 ($generated@@317 $generated@@374 $generated@@373)) (exists (($generated@@375 T@U) ) (!  (and (= (type $generated@@375) $generated@@373) ($generated@@0 ($generated@@84 ($generated@@369 $generated@@372) $generated@@375)))
 :no-pattern (type $generated@@375)
 :no-pattern ($generated $generated@@375)
 :no-pattern ($generated@@0 $generated@@375)
))))))
 :pattern ( ($generated@@369 $generated@@372))
)))
(assert (forall (($generated@@376 T@U) ) (! (let (($generated@@377 ($generated@@338 (type $generated@@376))))
(let (($generated@@378 ($generated@@337 (type $generated@@376))))
 (=> (= (type $generated@@376) ($generated@@336 $generated@@378 $generated@@377)) (or (= $generated@@376 ($generated@@335 $generated@@378 $generated@@377)) (exists (($generated@@379 T@U) ) (!  (and (= (type $generated@@379) $generated@@378) ($generated@@0 ($generated@@84 ($generated@@334 $generated@@376) $generated@@379)))
 :no-pattern (type $generated@@379)
 :no-pattern ($generated $generated@@379)
 :no-pattern ($generated@@0 $generated@@379)
))))))
 :pattern ( ($generated@@334 $generated@@376))
)))
(assert (forall (($generated@@381 T@U) ) (! (let (($generated@@382 ($generated@@338 (type $generated@@381))))
(= (type ($generated@@380 $generated@@381)) ($generated@@79 $generated@@382 $generated@@4)))
 :pattern ( ($generated@@380 $generated@@381))
)))
(assert (forall (($generated@@383 T@U) ) (! (let (($generated@@384 ($generated@@338 (type $generated@@383))))
(let (($generated@@385 ($generated@@337 (type $generated@@383))))
 (=> (= (type $generated@@383) ($generated@@336 $generated@@385 $generated@@384)) (or (= $generated@@383 ($generated@@335 $generated@@385 $generated@@384)) (exists (($generated@@386 T@U) ) (!  (and (= (type $generated@@386) $generated@@384) ($generated@@0 ($generated@@84 ($generated@@380 $generated@@383) $generated@@386)))
 :no-pattern (type $generated@@386)
 :no-pattern ($generated $generated@@386)
 :no-pattern ($generated@@0 $generated@@386)
))))))
 :pattern ( ($generated@@380 $generated@@383))
)))
(assert (forall (($generated@@387 T@U) ($generated@@388 T@U) ) (!  (=> (and (= (type $generated@@387) ($generated@@79 $generated@@136 $generated@@2)) (= (type $generated@@388) $generated@@67)) (= ($generated@@144 $generated@@387 ($generated@@170 $generated@@388)) (forall (($generated@@389 T@U) ) (!  (=> (and (= (type $generated@@389) $generated@@136) (< 0 ($generated ($generated@@84 $generated@@387 $generated@@389)))) ($generated@@238 $generated@@389 $generated@@388))
 :pattern ( ($generated@@84 $generated@@387 $generated@@389))
))))
 :pattern ( ($generated@@144 $generated@@387 ($generated@@170 $generated@@388)))
)))
(assert (forall (($generated@@390 T@U) ($generated@@391 T@U) ) (!  (=> (and (= (type $generated@@390) $generated@@136) (= (type $generated@@391) $generated@@136)) (or (or ($generated@@135 $generated@@390 $generated@@391) (= $generated@@390 $generated@@391)) ($generated@@135 $generated@@391 $generated@@390)))
 :pattern ( ($generated@@135 $generated@@390 $generated@@391) ($generated@@135 $generated@@391 $generated@@390))
)))
(assert (forall (($generated@@392 T@U) ($generated@@393 T@U) ($generated@@394 T@U) ) (!  (=> (and (and (= (type $generated@@392) ($generated@@79 $generated@@136 $generated@@4)) (= (type $generated@@393) $generated@@67)) (= (type $generated@@394) ($generated@@79 $generated@@80 $generated@@81))) (= ($generated@@77 $generated@@392 ($generated@@247 $generated@@393) $generated@@394) (forall (($generated@@395 T@U) ) (!  (=> (and (= (type $generated@@395) $generated@@136) ($generated@@0 ($generated@@84 $generated@@392 $generated@@395))) ($generated@@264 $generated@@395 $generated@@393 $generated@@394))
 :pattern ( ($generated@@84 $generated@@392 $generated@@395))
))))
 :pattern ( ($generated@@77 $generated@@392 ($generated@@247 $generated@@393) $generated@@394))
)))
(assert (forall (($generated@@396 T@U) ($generated@@397 T@U) ($generated@@398 T@U) ) (!  (=> (and (and (= (type $generated@@396) ($generated@@79 $generated@@136 $generated@@4)) (= (type $generated@@397) $generated@@67)) (= (type $generated@@398) ($generated@@79 $generated@@80 $generated@@81))) (= ($generated@@77 $generated@@396 ($generated@@252 $generated@@397) $generated@@398) (forall (($generated@@399 T@U) ) (!  (=> (and (= (type $generated@@399) $generated@@136) ($generated@@0 ($generated@@84 $generated@@396 $generated@@399))) ($generated@@264 $generated@@399 $generated@@397 $generated@@398))
 :pattern ( ($generated@@84 $generated@@396 $generated@@399))
))))
 :pattern ( ($generated@@77 $generated@@396 ($generated@@252 $generated@@397) $generated@@398))
)))
(assert (forall (($generated@@400 T@U) ) (! (let (($generated@@401 (type $generated@@400)))
(= ($generated ($generated@@84 ($generated@@311 $generated@@401) $generated@@400)) 0))
 :pattern ( (let (($generated@@401 (type $generated@@400)))
($generated@@84 ($generated@@311 $generated@@401) $generated@@400)))
)))
(assert  (and (forall (($generated@@404 T@U) ) (! (= (type ($generated@@402 $generated@@404)) ($generated@@79 $generated@@136 $generated@@4))
 :pattern ( ($generated@@402 $generated@@404))
)) (forall (($generated@@405 T@U) ) (! (let (($generated@@406 ($generated@@320 (type $generated@@405))))
(let (($generated@@407 ($generated@@319 (type $generated@@405))))
(= (type ($generated@@403 $generated@@405)) ($generated@@79 $generated@@407 $generated@@406))))
 :pattern ( ($generated@@403 $generated@@405))
))))
(assert (forall (($generated@@408 T@U) ($generated@@409 T@U) ) (!  (=> (and (= (type $generated@@408) ($generated@@318 $generated@@136 $generated@@136)) (= (type $generated@@409) $generated@@136)) (= ($generated@@0 ($generated@@84 ($generated@@402 $generated@@408) $generated@@409))  (and ($generated@@0 ($generated@@84 ($generated@@316 $generated@@408) ($generated@@164 ($generated@@359 $generated@@157 $generated@@409)))) (= ($generated@@84 ($generated@@403 $generated@@408) ($generated@@164 ($generated@@359 $generated@@157 $generated@@409))) ($generated@@165 ($generated@@359 $generated@@157 $generated@@409))))))
 :pattern ( ($generated@@84 ($generated@@402 $generated@@408) $generated@@409))
)))
(assert  (and (forall (($generated@@412 T@U) ) (! (= (type ($generated@@410 $generated@@412)) ($generated@@79 $generated@@136 $generated@@4))
 :pattern ( ($generated@@410 $generated@@412))
)) (forall (($generated@@413 T@U) ) (! (let (($generated@@414 ($generated@@338 (type $generated@@413))))
(let (($generated@@415 ($generated@@337 (type $generated@@413))))
(= (type ($generated@@411 $generated@@413)) ($generated@@79 $generated@@415 $generated@@414))))
 :pattern ( ($generated@@411 $generated@@413))
))))
(assert (forall (($generated@@416 T@U) ($generated@@417 T@U) ) (!  (=> (and (= (type $generated@@416) ($generated@@336 $generated@@136 $generated@@136)) (= (type $generated@@417) $generated@@136)) (= ($generated@@0 ($generated@@84 ($generated@@410 $generated@@416) $generated@@417))  (and ($generated@@0 ($generated@@84 ($generated@@334 $generated@@416) ($generated@@164 ($generated@@359 $generated@@157 $generated@@417)))) (= ($generated@@84 ($generated@@411 $generated@@416) ($generated@@164 ($generated@@359 $generated@@157 $generated@@417))) ($generated@@165 ($generated@@359 $generated@@157 $generated@@417))))))
 :pattern ( ($generated@@84 ($generated@@410 $generated@@416) $generated@@417))
)))
(assert (forall (($generated@@418 T@U) ($generated@@419 T@U) ) (! (let (($generated@@420 (type $generated@@419)))
(let (($generated@@421 ($generated@@319 (type $generated@@418))))
 (=> (= (type $generated@@418) ($generated@@318 $generated@@421 $generated@@420)) (= ($generated@@0 ($generated@@84 ($generated@@369 $generated@@418) $generated@@419)) (exists (($generated@@422 T@U) ) (!  (and (= (type $generated@@422) $generated@@421) (and ($generated@@0 ($generated@@84 ($generated@@316 $generated@@418) $generated@@422)) (= $generated@@419 ($generated@@84 ($generated@@403 $generated@@418) $generated@@422))))
 :pattern ( ($generated@@84 ($generated@@316 $generated@@418) $generated@@422))
 :pattern ( ($generated@@84 ($generated@@403 $generated@@418) $generated@@422))
))))))
 :pattern ( ($generated@@84 ($generated@@369 $generated@@418) $generated@@419))
)))
(assert (forall (($generated@@423 T@U) ($generated@@424 T@U) ) (! (let (($generated@@425 (type $generated@@424)))
(let (($generated@@426 ($generated@@337 (type $generated@@423))))
 (=> (= (type $generated@@423) ($generated@@336 $generated@@426 $generated@@425)) (= ($generated@@0 ($generated@@84 ($generated@@380 $generated@@423) $generated@@424)) (exists (($generated@@427 T@U) ) (!  (and (= (type $generated@@427) $generated@@426) (and ($generated@@0 ($generated@@84 ($generated@@334 $generated@@423) $generated@@427)) (= $generated@@424 ($generated@@84 ($generated@@411 $generated@@423) $generated@@427))))
 :pattern ( ($generated@@84 ($generated@@334 $generated@@423) $generated@@427))
 :pattern ( ($generated@@84 ($generated@@411 $generated@@423) $generated@@427))
))))))
 :pattern ( ($generated@@84 ($generated@@380 $generated@@423) $generated@@424))
)))
(assert (forall (($generated@@429 T@U) ($generated@@430 T@U) ) (! (= (type ($generated@@428 $generated@@429 $generated@@430)) $generated@@67)
 :pattern ( ($generated@@428 $generated@@429 $generated@@430))
)))
(assert (forall (($generated@@431 T@U) ($generated@@432 T@U) ($generated@@433 T@U) ($generated@@434 T@U) ) (!  (=> (and (and (and (= (type $generated@@431) ($generated@@318 $generated@@136 $generated@@136)) (= (type $generated@@432) $generated@@67)) (= (type $generated@@433) $generated@@67)) (= (type $generated@@434) ($generated@@79 $generated@@80 $generated@@81))) (= ($generated@@77 $generated@@431 ($generated@@428 $generated@@432 $generated@@433) $generated@@434) (forall (($generated@@435 T@U) ) (!  (=> (and (= (type $generated@@435) $generated@@136) ($generated@@0 ($generated@@84 ($generated@@316 $generated@@431) $generated@@435))) (and ($generated@@264 ($generated@@84 ($generated@@403 $generated@@431) $generated@@435) $generated@@433 $generated@@434) ($generated@@264 $generated@@435 $generated@@432 $generated@@434)))
 :pattern ( ($generated@@84 ($generated@@403 $generated@@431) $generated@@435))
 :pattern ( ($generated@@84 ($generated@@316 $generated@@431) $generated@@435))
))))
 :pattern ( ($generated@@77 $generated@@431 ($generated@@428 $generated@@432 $generated@@433) $generated@@434))
)))
(assert (forall (($generated@@437 T@U) ($generated@@438 T@U) ) (! (= (type ($generated@@436 $generated@@437 $generated@@438)) $generated@@67)
 :pattern ( ($generated@@436 $generated@@437 $generated@@438))
)))
(assert (forall (($generated@@439 T@U) ($generated@@440 T@U) ($generated@@441 T@U) ($generated@@442 T@U) ) (!  (=> (and (and (and (= (type $generated@@439) ($generated@@336 $generated@@136 $generated@@136)) (= (type $generated@@440) $generated@@67)) (= (type $generated@@441) $generated@@67)) (= (type $generated@@442) ($generated@@79 $generated@@80 $generated@@81))) (= ($generated@@77 $generated@@439 ($generated@@436 $generated@@440 $generated@@441) $generated@@442) (forall (($generated@@443 T@U) ) (!  (=> (and (= (type $generated@@443) $generated@@136) ($generated@@0 ($generated@@84 ($generated@@334 $generated@@439) $generated@@443))) (and ($generated@@264 ($generated@@84 ($generated@@411 $generated@@439) $generated@@443) $generated@@441 $generated@@442) ($generated@@264 $generated@@443 $generated@@440 $generated@@442)))
 :pattern ( ($generated@@84 ($generated@@411 $generated@@439) $generated@@443))
 :pattern ( ($generated@@84 ($generated@@334 $generated@@439) $generated@@443))
))))
 :pattern ( ($generated@@77 $generated@@439 ($generated@@436 $generated@@440 $generated@@441) $generated@@442))
)))
(assert (forall (($generated@@444 T@U) ($generated@@445 T@U) ) (!  (=> (and (= (type $generated@@444) $generated@@136) (= (type $generated@@445) $generated@@136)) (= ($generated@@283 $generated@@444 $generated@@445) ($generated@@135 $generated@@444 $generated@@445)))
 :pattern ( ($generated@@283 $generated@@444 $generated@@445))
)))
(assert (forall (($generated@@447 T@T) ) (! (= (type ($generated@@446 $generated@@447)) ($generated@@79 $generated@@447 $generated@@4))
 :pattern ( ($generated@@446 $generated@@447))
)))
(assert (forall (($generated@@448 T@U) ) (! (let (($generated@@449 ($generated@@338 (type $generated@@448))))
(let (($generated@@450 ($generated@@337 (type $generated@@448))))
 (=> (= (type $generated@@448) ($generated@@336 $generated@@450 $generated@@449)) (= (= $generated@@448 ($generated@@335 $generated@@450 $generated@@449)) (= ($generated@@334 $generated@@448) ($generated@@446 $generated@@450))))))
 :pattern ( ($generated@@334 $generated@@448))
)))
(assert (forall (($generated@@451 T@U) ) (! (let (($generated@@452 ($generated@@338 (type $generated@@451))))
(let (($generated@@453 ($generated@@337 (type $generated@@451))))
 (=> (= (type $generated@@451) ($generated@@336 $generated@@453 $generated@@452)) (= (= $generated@@451 ($generated@@335 $generated@@453 $generated@@452)) (= ($generated@@380 $generated@@451) ($generated@@446 $generated@@452))))))
 :pattern ( ($generated@@380 $generated@@451))
)))
(assert (forall (($generated@@454 T@U) ) (! (let (($generated@@455 ($generated@@338 (type $generated@@454))))
(let (($generated@@456 ($generated@@337 (type $generated@@454))))
 (=> (= (type $generated@@454) ($generated@@336 $generated@@456 $generated@@455)) (= (= $generated@@454 ($generated@@335 $generated@@456 $generated@@455)) (= ($generated@@410 $generated@@454) ($generated@@446 $generated@@136))))))
 :pattern ( ($generated@@410 $generated@@454))
)))
(assert (forall (($generated@@457 T@U) ) (! (let (($generated@@458 ($generated@@320 (type $generated@@457))))
(let (($generated@@459 ($generated@@319 (type $generated@@457))))
 (=> (= (type $generated@@457) ($generated@@318 $generated@@459 $generated@@458)) (or (= $generated@@457 ($generated@@317 $generated@@459 $generated@@458)) (exists (($generated@@460 T@U) ($generated@@461 T@U) ) (!  (and (and (= (type $generated@@460) $generated@@136) (= (type $generated@@461) $generated@@136)) ($generated@@0 ($generated@@84 ($generated@@402 $generated@@457) ($generated@@301 ($generated@@237 $generated@@460 $generated@@461)))))
 :no-pattern (type $generated@@460)
 :no-pattern (type $generated@@461)
 :no-pattern ($generated $generated@@460)
 :no-pattern ($generated@@0 $generated@@460)
 :no-pattern ($generated $generated@@461)
 :no-pattern ($generated@@0 $generated@@461)
))))))
 :pattern ( ($generated@@402 $generated@@457))
)))
(assert (forall (($generated@@462 T@U) ) (! (let (($generated@@463 ($generated@@338 (type $generated@@462))))
(let (($generated@@464 ($generated@@337 (type $generated@@462))))
 (=> (= (type $generated@@462) ($generated@@336 $generated@@464 $generated@@463)) (or (= $generated@@462 ($generated@@335 $generated@@464 $generated@@463)) (exists (($generated@@465 T@U) ($generated@@466 T@U) ) (!  (and (and (= (type $generated@@465) $generated@@136) (= (type $generated@@466) $generated@@136)) ($generated@@0 ($generated@@84 ($generated@@410 $generated@@462) ($generated@@301 ($generated@@237 $generated@@465 $generated@@466)))))
 :no-pattern (type $generated@@465)
 :no-pattern (type $generated@@466)
 :no-pattern ($generated $generated@@465)
 :no-pattern ($generated@@0 $generated@@465)
 :no-pattern ($generated $generated@@466)
 :no-pattern ($generated@@0 $generated@@466)
))))))
 :pattern ( ($generated@@410 $generated@@462))
)))
(assert (forall (($generated@@467 T@U) ) (!  (=> (and (= (type $generated@@467) $generated@@136) ($generated@@238 $generated@@467 $generated@@46)) (and (= ($generated@@301 ($generated@@359 $generated@@2 $generated@@467)) $generated@@467) ($generated@@144 ($generated@@359 $generated@@2 $generated@@467) $generated@@46)))
 :pattern ( ($generated@@238 $generated@@467 $generated@@46))
)))
(assert (forall (($generated@@468 T@U) ) (!  (=> (and (= (type $generated@@468) $generated@@136) ($generated@@238 $generated@@468 $generated@@47)) (and (= ($generated@@301 ($generated@@359 $generated@@3 $generated@@468)) $generated@@468) ($generated@@144 ($generated@@359 $generated@@3 $generated@@468) $generated@@47)))
 :pattern ( ($generated@@238 $generated@@468 $generated@@47))
)))
(assert (forall (($generated@@469 T@U) ) (!  (=> (and (= (type $generated@@469) $generated@@136) ($generated@@238 $generated@@469 $generated@@44)) (and (= ($generated@@301 ($generated@@359 $generated@@4 $generated@@469)) $generated@@469) ($generated@@144 ($generated@@359 $generated@@4 $generated@@469) $generated@@44)))
 :pattern ( ($generated@@238 $generated@@469 $generated@@44))
)))
(assert (= ($generated@@1 $generated@@470) 21))
(assert (forall (($generated@@471 T@U) ) (!  (=> (and (= (type $generated@@471) $generated@@136) ($generated@@238 $generated@@471 $generated@@45)) (and (= ($generated@@301 ($generated@@359 $generated@@470 $generated@@471)) $generated@@471) ($generated@@144 ($generated@@359 $generated@@470 $generated@@471) $generated@@45)))
 :pattern ( ($generated@@238 $generated@@471 $generated@@45))
)))
(assert (forall (($generated@@472 T@U) ($generated@@473 T@U) ) (!  (=> (= (type $generated@@473) $generated@@67) (= ($generated@@238 ($generated@@301 $generated@@472) $generated@@473) ($generated@@144 $generated@@472 $generated@@473)))
 :pattern ( ($generated@@238 ($generated@@301 $generated@@472) $generated@@473))
)))
(assert (forall (($generated@@475 T@U) ) (! (= (type ($generated@@474 $generated@@475)) $generated@@275)
 :pattern ( ($generated@@474 $generated@@475))
)))
(assert (forall (($generated@@476 T@U) ($generated@@477 T@U) ($generated@@478 T@U) ($generated@@479 Int) ) (!  (=> (and (and (= (type $generated@@476) $generated@@275) (= (type $generated@@477) $generated@@80)) (= (type $generated@@478) $generated@@136)) (= ($generated@@273 ($generated@@474 $generated@@476) $generated@@477 $generated@@478 $generated@@479) ($generated@@273 $generated@@476 $generated@@477 $generated@@478 $generated@@479)))
 :pattern ( ($generated@@273 ($generated@@474 $generated@@476) $generated@@477 $generated@@478 $generated@@479))
)))
(assert (forall (($generated@@480 T@U) ) (!  (=> (= (type $generated@@480) $generated@@136) (<= 0 ($generated@@148 $generated@@480)))
 :pattern ( ($generated@@148 $generated@@480))
)))
(assert (forall (($generated@@481 T@U) ) (! (let (($generated@@482 ($generated@@82 (type $generated@@481))))
 (=> (= (type $generated@@481) ($generated@@79 $generated@@482 $generated@@2)) (<= 0 ($generated@@310 $generated@@481))))
 :pattern ( ($generated@@310 $generated@@481))
)))
(assert (forall (($generated@@483 T@U) ) (! (let (($generated@@484 ($generated@@296 (type $generated@@483))))
 (=> (= (type $generated@@483) ($generated@@295 $generated@@484)) (<= 0 ($generated@@294 $generated@@483))))
 :pattern ( ($generated@@294 $generated@@483))
)))
(assert  (=> (<= 1 $generated@@282) (forall (($generated@@486 T@U) ($generated@@487 T@U) ($generated@@488 T@U) ($generated@@489 Int) ) (!  (=> (and (and (and (= (type $generated@@486) $generated@@275) (= (type $generated@@487) $generated@@80)) (= (type $generated@@488) $generated@@136)) (or ($generated@@485 $generated@@487 $generated@@488 $generated@@489) (and (not (= 1 $generated@@282)) (and (not (= $generated@@487 $generated@@141)) ($generated@@144 $generated@@487 $generated@@234))))) true)
 :pattern ( ($generated@@273 $generated@@486 $generated@@487 $generated@@488 $generated@@489))
))))
(assert (forall (($generated@@491 T@U) ) (! (= (type ($generated@@490 $generated@@491)) $generated@@67)
 :pattern ( ($generated@@490 $generated@@491))
)))
(assert (forall (($generated@@492 T@U) ($generated@@493 T@U) ) (!  (=> (and (= (type $generated@@492) $generated@@67) (= (type $generated@@493) $generated@@67)) (= ($generated@@490 ($generated@@428 $generated@@492 $generated@@493)) $generated@@492))
 :pattern ( ($generated@@428 $generated@@492 $generated@@493))
)))
(assert (forall (($generated@@495 T@U) ) (! (= (type ($generated@@494 $generated@@495)) $generated@@67)
 :pattern ( ($generated@@494 $generated@@495))
)))
(assert (forall (($generated@@496 T@U) ($generated@@497 T@U) ) (!  (=> (and (= (type $generated@@496) $generated@@67) (= (type $generated@@497) $generated@@67)) (= ($generated@@494 ($generated@@428 $generated@@496 $generated@@497)) $generated@@497))
 :pattern ( ($generated@@428 $generated@@496 $generated@@497))
)))
(assert (forall (($generated@@498 T@U) ($generated@@499 T@U) ) (!  (=> (and (= (type $generated@@498) $generated@@67) (= (type $generated@@499) $generated@@67)) (= ($generated@@75 ($generated@@428 $generated@@498 $generated@@499)) $generated@@58))
 :pattern ( ($generated@@428 $generated@@498 $generated@@499))
)))
(assert (forall (($generated@@501 T@U) ) (! (= (type ($generated@@500 $generated@@501)) $generated@@67)
 :pattern ( ($generated@@500 $generated@@501))
)))
(assert (forall (($generated@@502 T@U) ($generated@@503 T@U) ) (!  (=> (and (= (type $generated@@502) $generated@@67) (= (type $generated@@503) $generated@@67)) (= ($generated@@500 ($generated@@436 $generated@@502 $generated@@503)) $generated@@502))
 :pattern ( ($generated@@436 $generated@@502 $generated@@503))
)))
(assert (forall (($generated@@505 T@U) ) (! (= (type ($generated@@504 $generated@@505)) $generated@@67)
 :pattern ( ($generated@@504 $generated@@505))
)))
(assert (forall (($generated@@506 T@U) ($generated@@507 T@U) ) (!  (=> (and (= (type $generated@@506) $generated@@67) (= (type $generated@@507) $generated@@67)) (= ($generated@@504 ($generated@@436 $generated@@506 $generated@@507)) $generated@@507))
 :pattern ( ($generated@@436 $generated@@506 $generated@@507))
)))
(assert (forall (($generated@@508 T@U) ($generated@@509 T@U) ) (!  (=> (and (= (type $generated@@508) $generated@@67) (= (type $generated@@509) $generated@@67)) (= ($generated@@75 ($generated@@436 $generated@@508 $generated@@509)) $generated@@59))
 :pattern ( ($generated@@436 $generated@@508 $generated@@509))
)))
(assert (forall (($generated@@510 T@U) ($generated@@511 T@U) ) (!  (=> (and (= (type $generated@@510) $generated@@136) (= (type $generated@@511) $generated@@136)) (= ($generated@@270 ($generated@@237 $generated@@510 $generated@@511)) $generated@@61))
 :pattern ( ($generated@@237 $generated@@510 $generated@@511))
)))
(assert (forall (($generated@@513 T@U) ) (! (= (type ($generated@@512 $generated@@513)) $generated@@67)
 :pattern ( ($generated@@512 $generated@@513))
)))
(assert (forall (($generated@@514 T@U) ($generated@@515 T@U) ) (!  (=> (and (= (type $generated@@514) $generated@@67) (= (type $generated@@515) $generated@@67)) (= ($generated@@512 ($generated@@156 $generated@@514 $generated@@515)) $generated@@514))
 :pattern ( ($generated@@156 $generated@@514 $generated@@515))
)))
(assert (forall (($generated@@517 T@U) ) (! (= (type ($generated@@516 $generated@@517)) $generated@@67)
 :pattern ( ($generated@@516 $generated@@517))
)))
(assert (forall (($generated@@518 T@U) ($generated@@519 T@U) ) (!  (=> (and (= (type $generated@@518) $generated@@67) (= (type $generated@@519) $generated@@67)) (= ($generated@@516 ($generated@@156 $generated@@518 $generated@@519)) $generated@@519))
 :pattern ( ($generated@@156 $generated@@518 $generated@@519))
)))
(assert (forall (($generated@@520 T@U) ($generated@@521 T@U) ) (!  (=> (and (= (type $generated@@520) $generated@@136) (= (type $generated@@521) $generated@@136)) (= ($generated@@164 ($generated@@237 $generated@@520 $generated@@521)) $generated@@520))
 :pattern ( ($generated@@237 $generated@@520 $generated@@521))
)))
(assert (forall (($generated@@522 T@U) ($generated@@523 T@U) ) (!  (=> (and (= (type $generated@@522) $generated@@136) (= (type $generated@@523) $generated@@136)) (= ($generated@@165 ($generated@@237 $generated@@522 $generated@@523)) $generated@@523))
 :pattern ( ($generated@@237 $generated@@522 $generated@@523))
)))
(assert  (and (forall (($generated@@526 T@U) ) (! (= (type ($generated@@524 $generated@@526)) $generated@@67)
 :pattern ( ($generated@@524 $generated@@526))
)) (forall (($generated@@527 T@U) ($generated@@528 Int) ) (! (let (($generated@@529 ($generated@@296 (type $generated@@527))))
(= (type ($generated@@525 $generated@@527 $generated@@528)) $generated@@529))
 :pattern ( ($generated@@525 $generated@@527 $generated@@528))
))))
(assert (forall (($generated@@530 T@U) ($generated@@531 T@U) ($generated@@532 T@U) ) (!  (=> (and (and (= (type $generated@@530) ($generated@@295 $generated@@136)) (= (type $generated@@531) $generated@@67)) (= (type $generated@@532) ($generated@@79 $generated@@80 $generated@@81))) (= ($generated@@77 $generated@@530 ($generated@@524 $generated@@531) $generated@@532) (forall (($generated@@533 Int) ) (!  (=> (and (<= 0 $generated@@533) (< $generated@@533 ($generated@@294 $generated@@530))) ($generated@@264 ($generated@@525 $generated@@530 $generated@@533) $generated@@531 $generated@@532))
 :pattern ( ($generated@@525 $generated@@530 $generated@@533))
))))
 :pattern ( ($generated@@77 $generated@@530 ($generated@@524 $generated@@531) $generated@@532))
)))
(assert (forall (($generated@@535 Int) ) (! (= ($generated@@534 ($generated@@78 $generated@@535)) $generated@@535)
 :pattern ( ($generated@@78 $generated@@535))
)))
(assert (forall (($generated@@537 T@U) ) (! (= (type ($generated@@536 $generated@@537)) $generated@@67)
 :pattern ( ($generated@@536 $generated@@537))
)))
(assert (forall (($generated@@538 T@U) ) (!  (=> (= (type $generated@@538) $generated@@67) (= ($generated@@536 ($generated@@247 $generated@@538)) $generated@@538))
 :pattern ( ($generated@@247 $generated@@538))
)))
(assert (forall (($generated@@539 T@U) ) (!  (=> (= (type $generated@@539) $generated@@67) (= ($generated@@75 ($generated@@247 $generated@@539)) $generated@@54))
 :pattern ( ($generated@@247 $generated@@539))
)))
(assert (forall (($generated@@541 T@U) ) (! (= (type ($generated@@540 $generated@@541)) $generated@@67)
 :pattern ( ($generated@@540 $generated@@541))
)))
(assert (forall (($generated@@542 T@U) ) (!  (=> (= (type $generated@@542) $generated@@67) (= ($generated@@540 ($generated@@252 $generated@@542)) $generated@@542))
 :pattern ( ($generated@@252 $generated@@542))
)))
(assert (forall (($generated@@543 T@U) ) (!  (=> (= (type $generated@@543) $generated@@67) (= ($generated@@75 ($generated@@252 $generated@@543)) $generated@@55))
 :pattern ( ($generated@@252 $generated@@543))
)))
(assert (forall (($generated@@545 T@U) ) (! (= (type ($generated@@544 $generated@@545)) $generated@@67)
 :pattern ( ($generated@@544 $generated@@545))
)))
(assert (forall (($generated@@546 T@U) ) (!  (=> (= (type $generated@@546) $generated@@67) (= ($generated@@544 ($generated@@170 $generated@@546)) $generated@@546))
 :pattern ( ($generated@@170 $generated@@546))
)))
(assert (forall (($generated@@547 T@U) ) (!  (=> (= (type $generated@@547) $generated@@67) (= ($generated@@75 ($generated@@170 $generated@@547)) $generated@@56))
 :pattern ( ($generated@@170 $generated@@547))
)))
(assert (forall (($generated@@549 T@U) ) (! (= (type ($generated@@548 $generated@@549)) $generated@@67)
 :pattern ( ($generated@@548 $generated@@549))
)))
(assert (forall (($generated@@550 T@U) ) (!  (=> (= (type $generated@@550) $generated@@67) (= ($generated@@548 ($generated@@524 $generated@@550)) $generated@@550))
 :pattern ( ($generated@@524 $generated@@550))
)))
(assert (forall (($generated@@551 T@U) ) (!  (=> (= (type $generated@@551) $generated@@67) (= ($generated@@75 ($generated@@524 $generated@@551)) $generated@@57))
 :pattern ( ($generated@@524 $generated@@551))
)))
(assert (forall (($generated@@552 T@U) ) (! (let (($generated@@553 (type $generated@@552)))
(= ($generated@@359 $generated@@553 ($generated@@301 $generated@@552)) $generated@@552))
 :pattern ( ($generated@@301 $generated@@552))
)))
(assert  (=> (<= 1 $generated@@282) (forall (($generated@@554 T@U) ($generated@@555 T@U) ($generated@@556 T@U) ($generated@@557 Int) ) (!  (=> (and (and (and (= (type $generated@@554) $generated@@275) (= (type $generated@@555) $generated@@80)) (= (type $generated@@556) $generated@@136)) (or ($generated@@485 $generated@@555 ($generated@@259 $generated@@556) $generated@@557) (and (not (= 1 $generated@@282)) (and (not (= $generated@@555 $generated@@141)) ($generated@@144 $generated@@555 $generated@@234))))) (and (and (=> (< 0 ($generated@@148 $generated@@556)) (=> (not (= $generated@@557 ($generated@@257 0))) ($generated@@485 $generated@@555 ($generated@@146 $generated@@556 ($generated@@147 1)) (- $generated@@557 1)))) (=> (=> (< 0 ($generated@@148 $generated@@556)) (or (= $generated@@557 ($generated@@257 0)) ($generated@@273 ($generated@@474 $generated@@554) $generated@@555 ($generated@@146 $generated@@556 ($generated@@147 1)) (- $generated@@557 1)))) (=> (= ($generated@@257 0) ($generated@@148 $generated@@556)) (forall (($generated@@558 T@U) ) (!  (=> (and (= (type $generated@@558) $generated@@136) ($generated@@283 $generated@@558 $generated@@556)) ($generated@@485 $generated@@555 $generated@@558 $generated@@557))
 :pattern ( ($generated@@273 ($generated@@474 $generated@@554) $generated@@555 $generated@@558 $generated@@557))
))))) (= ($generated@@273 ($generated@@474 $generated@@554) $generated@@555 ($generated@@259 $generated@@556) $generated@@557)  (and (=> (< 0 ($generated@@148 $generated@@556)) (or (= $generated@@557 ($generated@@257 0)) ($generated@@273 ($generated@@474 $generated@@554) $generated@@555 ($generated@@146 $generated@@556 ($generated@@147 1)) (- $generated@@557 1)))) (=> (= ($generated@@257 0) ($generated@@148 $generated@@556)) (exists (($generated@@559 T@U) ) (!  (and (= (type $generated@@559) $generated@@136) (and ($generated@@283 $generated@@559 $generated@@556) ($generated@@273 ($generated@@474 $generated@@554) $generated@@555 $generated@@559 $generated@@557)))
 :pattern ( ($generated@@273 ($generated@@474 $generated@@554) $generated@@555 $generated@@559 $generated@@557))
)))))))
 :weight 3
 :pattern ( ($generated@@273 ($generated@@474 $generated@@554) $generated@@555 ($generated@@259 $generated@@556) $generated@@557))
))))
(assert (forall (($generated@@560 T@U) ($generated@@561 T@U) ($generated@@562 T@U) ) (!  (=> (and (and (= (type $generated@@560) ($generated@@318 $generated@@136 $generated@@136)) (= (type $generated@@561) $generated@@67)) (= (type $generated@@562) $generated@@67)) (= ($generated@@144 $generated@@560 ($generated@@428 $generated@@561 $generated@@562)) (forall (($generated@@563 T@U) ) (!  (=> (and (= (type $generated@@563) $generated@@136) ($generated@@0 ($generated@@84 ($generated@@316 $generated@@560) $generated@@563))) (and ($generated@@238 ($generated@@84 ($generated@@403 $generated@@560) $generated@@563) $generated@@562) ($generated@@238 $generated@@563 $generated@@561)))
 :pattern ( ($generated@@84 ($generated@@403 $generated@@560) $generated@@563))
 :pattern ( ($generated@@84 ($generated@@316 $generated@@560) $generated@@563))
))))
 :pattern ( ($generated@@144 $generated@@560 ($generated@@428 $generated@@561 $generated@@562)))
)))
(assert (forall (($generated@@564 T@U) ($generated@@565 T@U) ($generated@@566 T@U) ) (!  (=> (and (and (= (type $generated@@564) ($generated@@336 $generated@@136 $generated@@136)) (= (type $generated@@565) $generated@@67)) (= (type $generated@@566) $generated@@67)) (= ($generated@@144 $generated@@564 ($generated@@436 $generated@@565 $generated@@566)) (forall (($generated@@567 T@U) ) (!  (=> (and (= (type $generated@@567) $generated@@136) ($generated@@0 ($generated@@84 ($generated@@334 $generated@@564) $generated@@567))) (and ($generated@@238 ($generated@@84 ($generated@@411 $generated@@564) $generated@@567) $generated@@566) ($generated@@238 $generated@@567 $generated@@565)))
 :pattern ( ($generated@@84 ($generated@@411 $generated@@564) $generated@@567))
 :pattern ( ($generated@@84 ($generated@@334 $generated@@564) $generated@@567))
))))
 :pattern ( ($generated@@144 $generated@@564 ($generated@@436 $generated@@565 $generated@@566)))
)))
(assert (forall (($generated@@568 T@U) ($generated@@569 T@U) ) (!  (=> (and (= (type $generated@@568) $generated@@136) (= (type $generated@@569) $generated@@136)) (and (and (and (=> ($generated@@135 $generated@@568 $generated@@569) (not (= $generated@@568 $generated@@569))) (=> (and ($generated@@352 $generated@@568) (not ($generated@@352 $generated@@569))) ($generated@@135 $generated@@568 $generated@@569))) (=> (and ($generated@@352 $generated@@568) ($generated@@352 $generated@@569)) (= ($generated@@135 $generated@@568 $generated@@569) (< ($generated@@148 $generated@@568) ($generated@@148 $generated@@569))))) (=> (and ($generated@@135 $generated@@568 $generated@@569) ($generated@@352 $generated@@569)) ($generated@@352 $generated@@568))))
 :pattern ( ($generated@@135 $generated@@568 $generated@@569))
)))
(assert (forall (($generated@@572 T@U) ($generated@@573 T@U) ) (!  (=> (and (= (type $generated@@572) $generated@@136) (= (type $generated@@573) $generated@@136)) (< ($generated@@570 $generated@@572) ($generated@@571 ($generated@@237 $generated@@572 $generated@@573))))
 :pattern ( ($generated@@237 $generated@@572 $generated@@573))
)))
(assert (forall (($generated@@574 T@U) ($generated@@575 T@U) ) (!  (=> (and (= (type $generated@@574) $generated@@136) (= (type $generated@@575) $generated@@136)) (< ($generated@@570 $generated@@575) ($generated@@571 ($generated@@237 $generated@@574 $generated@@575))))
 :pattern ( ($generated@@237 $generated@@574 $generated@@575))
)))
(assert (forall (($generated@@576 T@U) ($generated@@577 T@U) ($generated@@578 T@U) ) (!  (=> (and (and (and (= (type $generated@@576) $generated@@136) (= (type $generated@@577) $generated@@67)) (= (type $generated@@578) $generated@@67)) ($generated@@238 $generated@@576 ($generated@@428 $generated@@577 $generated@@578))) (and (= ($generated@@301 ($generated@@359 ($generated@@318 $generated@@136 $generated@@136) $generated@@576)) $generated@@576) ($generated@@144 ($generated@@359 ($generated@@318 $generated@@136 $generated@@136) $generated@@576) ($generated@@428 $generated@@577 $generated@@578))))
 :pattern ( ($generated@@238 $generated@@576 ($generated@@428 $generated@@577 $generated@@578)))
)))
(assert (forall (($generated@@579 T@U) ($generated@@580 T@U) ($generated@@581 T@U) ) (!  (=> (and (and (and (= (type $generated@@579) $generated@@136) (= (type $generated@@580) $generated@@67)) (= (type $generated@@581) $generated@@67)) ($generated@@238 $generated@@579 ($generated@@436 $generated@@580 $generated@@581))) (and (= ($generated@@301 ($generated@@359 ($generated@@336 $generated@@136 $generated@@136) $generated@@579)) $generated@@579) ($generated@@144 ($generated@@359 ($generated@@336 $generated@@136 $generated@@136) $generated@@579) ($generated@@436 $generated@@580 $generated@@581))))
 :pattern ( ($generated@@238 $generated@@579 ($generated@@436 $generated@@580 $generated@@581)))
)))
(assert (forall (($generated@@582 T@U) ($generated@@583 T@U) ($generated@@584 T@U) ) (!  (=> (and (and (and (= (type $generated@@582) $generated@@67) (= (type $generated@@583) $generated@@67)) (= (type $generated@@584) $generated@@136)) ($generated@@238 $generated@@584 ($generated@@156 $generated@@582 $generated@@583))) (and (= ($generated@@301 ($generated@@359 $generated@@157 $generated@@584)) $generated@@584) ($generated@@144 ($generated@@359 $generated@@157 $generated@@584) ($generated@@156 $generated@@582 $generated@@583))))
 :pattern ( ($generated@@238 $generated@@584 ($generated@@156 $generated@@582 $generated@@583)))
)))
(assert (forall (($generated@@585 T@U) ) (! (let (($generated@@586 (type $generated@@585)))
 (not ($generated@@0 ($generated@@84 ($generated@@446 $generated@@586) $generated@@585))))
 :pattern ( (let (($generated@@586 (type $generated@@585)))
($generated@@84 ($generated@@446 $generated@@586) $generated@@585)))
)))
(assert (forall (($generated@@588 T@U) ) (! (= (type ($generated@@587 $generated@@588)) $generated@@72)
 :pattern ( ($generated@@587 $generated@@588))
)))
(assert (forall (($generated@@589 T@U) ($generated@@590 T@U) ) (!  (=> (and (= (type $generated@@589) $generated@@67) (= (type $generated@@590) $generated@@67)) (and (= ($generated@@75 ($generated@@156 $generated@@589 $generated@@590)) $generated@@62) (= ($generated@@587 ($generated@@156 $generated@@589 $generated@@590)) $generated@@65)))
 :pattern ( ($generated@@156 $generated@@589 $generated@@590))
)))
(assert  (=> (<= 1 $generated@@282) (forall (($generated@@591 T@U) ($generated@@592 T@U) ($generated@@593 T@U) ($generated@@594 Int) ) (!  (=> (and (and (and (= (type $generated@@591) $generated@@275) (= (type $generated@@592) $generated@@80)) (= (type $generated@@593) $generated@@136)) (or ($generated@@485 ($generated@@259 $generated@@592) ($generated@@259 $generated@@593) ($generated@@257 $generated@@594)) (and (not (= 1 $generated@@282)) (and (not (= $generated@@592 $generated@@141)) ($generated@@144 $generated@@592 $generated@@234))))) (and (and (=> (< 0 ($generated@@148 $generated@@593)) (=> (not (= $generated@@594 ($generated@@257 0))) ($generated@@485 ($generated@@259 $generated@@592) ($generated@@146 $generated@@593 ($generated@@147 1)) (- $generated@@594 1)))) (=> (=> (< 0 ($generated@@148 $generated@@593)) (or (= $generated@@594 ($generated@@257 0)) ($generated@@273 ($generated@@474 $generated@@591) ($generated@@259 $generated@@592) ($generated@@146 $generated@@593 ($generated@@147 1)) (- $generated@@594 1)))) (=> (= ($generated@@257 0) ($generated@@148 $generated@@593)) (forall (($generated@@595 T@U) ) (!  (=> (and (= (type $generated@@595) $generated@@136) ($generated@@283 $generated@@595 $generated@@593)) ($generated@@485 $generated@@592 $generated@@595 $generated@@594))
 :pattern ( ($generated@@273 ($generated@@474 $generated@@591) $generated@@592 $generated@@595 $generated@@594))
))))) (= ($generated@@273 ($generated@@474 $generated@@591) ($generated@@259 $generated@@592) ($generated@@259 $generated@@593) ($generated@@257 $generated@@594))  (and (=> (< 0 ($generated@@148 $generated@@593)) (or (= $generated@@594 ($generated@@257 0)) ($generated@@273 ($generated@@474 $generated@@591) ($generated@@259 $generated@@592) ($generated@@146 $generated@@593 ($generated@@147 1)) (- $generated@@594 1)))) (=> (= ($generated@@257 0) ($generated@@148 $generated@@593)) (exists (($generated@@596 T@U) ) (!  (and (= (type $generated@@596) $generated@@136) (and ($generated@@283 $generated@@596 $generated@@593) ($generated@@273 ($generated@@474 $generated@@591) $generated@@592 $generated@@596 $generated@@594)))
 :pattern ( ($generated@@273 ($generated@@474 $generated@@591) $generated@@592 $generated@@596 $generated@@594))
)))))))
 :weight 3
 :pattern ( ($generated@@273 ($generated@@474 $generated@@591) ($generated@@259 $generated@@592) ($generated@@259 $generated@@593) ($generated@@257 $generated@@594)))
))))
(assert (forall (($generated@@597 T@U) ) (!  (=> (= (type $generated@@597) $generated@@157) (= ($generated@@570 ($generated@@301 $generated@@597)) ($generated@@571 $generated@@597)))
 :pattern ( ($generated@@570 ($generated@@301 $generated@@597)))
)))
(assert (forall (($generated@@598 T@U) ) (!  (=> (and (= (type $generated@@598) $generated@@136) ($generated@@238 $generated@@598 ($generated@@78 0))) (and (= ($generated@@301 ($generated@@359 $generated@@2 $generated@@598)) $generated@@598) ($generated@@144 ($generated@@359 ($generated@@79 $generated@@136 $generated@@4) $generated@@598) ($generated@@78 0))))
 :pattern ( ($generated@@238 $generated@@598 ($generated@@78 0)))
)))
(assert (forall (($generated@@599 T@U) ($generated@@600 T@U) ) (!  (=> (and (and (= (type $generated@@599) $generated@@136) (= (type $generated@@600) $generated@@67)) ($generated@@238 $generated@@599 ($generated@@247 $generated@@600))) (and (= ($generated@@301 ($generated@@359 ($generated@@79 $generated@@136 $generated@@4) $generated@@599)) $generated@@599) ($generated@@144 ($generated@@359 ($generated@@79 $generated@@136 $generated@@4) $generated@@599) ($generated@@247 $generated@@600))))
 :pattern ( ($generated@@238 $generated@@599 ($generated@@247 $generated@@600)))
)))
(assert (forall (($generated@@601 T@U) ($generated@@602 T@U) ) (!  (=> (and (and (= (type $generated@@601) $generated@@136) (= (type $generated@@602) $generated@@67)) ($generated@@238 $generated@@601 ($generated@@252 $generated@@602))) (and (= ($generated@@301 ($generated@@359 ($generated@@79 $generated@@136 $generated@@4) $generated@@601)) $generated@@601) ($generated@@144 ($generated@@359 ($generated@@79 $generated@@136 $generated@@4) $generated@@601) ($generated@@252 $generated@@602))))
 :pattern ( ($generated@@238 $generated@@601 ($generated@@252 $generated@@602)))
)))
(assert (forall (($generated@@603 T@U) ($generated@@604 T@U) ) (!  (=> (and (and (= (type $generated@@603) $generated@@136) (= (type $generated@@604) $generated@@67)) ($generated@@238 $generated@@603 ($generated@@170 $generated@@604))) (and (= ($generated@@301 ($generated@@359 ($generated@@79 $generated@@136 $generated@@2) $generated@@603)) $generated@@603) ($generated@@144 ($generated@@359 ($generated@@79 $generated@@136 $generated@@2) $generated@@603) ($generated@@170 $generated@@604))))
 :pattern ( ($generated@@238 $generated@@603 ($generated@@170 $generated@@604)))
)))
(assert (forall (($generated@@605 T@U) ($generated@@606 T@U) ) (!  (=> (and (and (= (type $generated@@605) $generated@@136) (= (type $generated@@606) $generated@@67)) ($generated@@238 $generated@@605 ($generated@@524 $generated@@606))) (and (= ($generated@@301 ($generated@@359 ($generated@@295 $generated@@136) $generated@@605)) $generated@@605) ($generated@@144 ($generated@@359 ($generated@@295 $generated@@136) $generated@@605) ($generated@@524 $generated@@606))))
 :pattern ( ($generated@@238 $generated@@605 ($generated@@524 $generated@@606)))
)))
(assert (forall (($generated@@607 T@U) ) (!  (=> (and (= (type $generated@@607) $generated@@136) ($generated@@352 $generated@@607)) (= $generated@@607 ($generated@@147 ($generated@@148 $generated@@607))))
 :pattern ( ($generated@@148 $generated@@607))
 :pattern ( ($generated@@352 $generated@@607))
)))
(assert (= ($generated@@75 $generated@@140) $generated@@63))
(assert (= ($generated@@587 $generated@@140) $generated@@66))
(assert (= ($generated@@75 $generated@@234) $generated@@64))
(assert (= ($generated@@587 $generated@@234) $generated@@66))
(assert (forall (($generated@@608 T@U) ($generated@@609 T@U) ($generated@@610 T@U) ) (!  (=> (and (and (= (type $generated@@608) ($generated@@79 $generated@@136 $generated@@2)) (= (type $generated@@609) $generated@@67)) (= (type $generated@@610) ($generated@@79 $generated@@80 $generated@@81))) (= ($generated@@77 $generated@@608 ($generated@@170 $generated@@609) $generated@@610) (forall (($generated@@611 T@U) ) (!  (=> (and (= (type $generated@@611) $generated@@136) (< 0 ($generated ($generated@@84 $generated@@608 $generated@@611)))) ($generated@@264 $generated@@611 $generated@@609 $generated@@610))
 :pattern ( ($generated@@84 $generated@@608 $generated@@611))
))))
 :pattern ( ($generated@@77 $generated@@608 ($generated@@170 $generated@@609) $generated@@610))
)))
(assert (forall (($generated@@612 T@U) ($generated@@613 T@U) ) (!  (=> (and (and (= (type $generated@@612) $generated@@136) (= (type $generated@@613) $generated@@136)) (and ($generated@@352 $generated@@613) (<= ($generated@@148 $generated@@613) ($generated@@148 $generated@@612)))) (or (and (= $generated@@613 ($generated@@147 0)) (= ($generated@@146 $generated@@612 $generated@@613) $generated@@612)) (and (not (= $generated@@613 ($generated@@147 0))) ($generated@@135 ($generated@@146 $generated@@612 $generated@@613) $generated@@612))))
 :pattern ( ($generated@@146 $generated@@612 $generated@@613))
)))
(assert  (=> (<= 1 $generated@@282) (forall (($generated@@614 T@U) ($generated@@615 T@U) ($generated@@616 T@U) ($generated@@617 Int) ) (!  (=> (and (and (and (= (type $generated@@614) $generated@@275) (= (type $generated@@615) $generated@@80)) (= (type $generated@@616) $generated@@136)) (or ($generated@@485 $generated@@615 $generated@@616 $generated@@617) (and (not (= 1 $generated@@282)) (and (not (= $generated@@615 $generated@@141)) ($generated@@144 $generated@@615 $generated@@234))))) (and (and (=> (< 0 ($generated@@148 $generated@@616)) (=> (not (= $generated@@617 ($generated@@257 0))) ($generated@@485 $generated@@615 ($generated@@146 $generated@@616 ($generated@@147 1)) (- $generated@@617 1)))) (=> (=> (< 0 ($generated@@148 $generated@@616)) (or (= $generated@@617 ($generated@@257 0)) ($generated@@273 $generated@@614 $generated@@615 ($generated@@146 $generated@@616 ($generated@@147 1)) (- $generated@@617 1)))) (=> (= ($generated@@257 0) ($generated@@148 $generated@@616)) (forall (($generated@@618 T@U) ) (!  (=> (and (= (type $generated@@618) $generated@@136) ($generated@@283 $generated@@618 $generated@@616)) ($generated@@485 $generated@@615 $generated@@618 $generated@@617))
 :pattern ( ($generated@@273 $generated@@614 $generated@@615 $generated@@618 $generated@@617))
))))) (= ($generated@@273 ($generated@@474 $generated@@614) $generated@@615 $generated@@616 $generated@@617)  (and (=> (< 0 ($generated@@148 $generated@@616)) (or (= $generated@@617 ($generated@@257 0)) ($generated@@273 $generated@@614 $generated@@615 ($generated@@146 $generated@@616 ($generated@@147 1)) (- $generated@@617 1)))) (=> (= ($generated@@257 0) ($generated@@148 $generated@@616)) (exists (($generated@@619 T@U) ) (!  (and (= (type $generated@@619) $generated@@136) (and ($generated@@283 $generated@@619 $generated@@616) ($generated@@273 $generated@@614 $generated@@615 $generated@@619 $generated@@617)))
 :pattern ( ($generated@@273 $generated@@614 $generated@@615 $generated@@619 $generated@@617))
)))))))
 :pattern ( ($generated@@273 ($generated@@474 $generated@@614) $generated@@615 $generated@@616 $generated@@617))
))))
(assert (forall (($generated@@620 T@U) ($generated@@621 T@U) ($generated@@622 T@U) ) (!  (=> (and (and (and (= (type $generated@@620) $generated@@157) (= (type $generated@@621) $generated@@67)) (= (type $generated@@622) ($generated@@79 $generated@@80 $generated@@81))) (and ($generated@@263 $generated@@622) (and ($generated@@155 $generated@@620) (exists (($generated@@623 T@U) ) (!  (and (= (type $generated@@623) $generated@@67) ($generated@@77 $generated@@620 ($generated@@156 $generated@@621 $generated@@623) $generated@@622))
 :pattern ( ($generated@@77 $generated@@620 ($generated@@156 $generated@@621 $generated@@623) $generated@@622))
))))) ($generated@@264 ($generated@@164 $generated@@620) $generated@@621 $generated@@622))
 :pattern ( ($generated@@264 ($generated@@164 $generated@@620) $generated@@621 $generated@@622))
)))
(assert (forall (($generated@@624 T@U) ($generated@@625 T@U) ($generated@@626 T@U) ) (!  (=> (and (and (and (= (type $generated@@624) $generated@@157) (= (type $generated@@625) $generated@@67)) (= (type $generated@@626) ($generated@@79 $generated@@80 $generated@@81))) (and ($generated@@263 $generated@@626) (and ($generated@@155 $generated@@624) (exists (($generated@@627 T@U) ) (!  (and (= (type $generated@@627) $generated@@67) ($generated@@77 $generated@@624 ($generated@@156 $generated@@627 $generated@@625) $generated@@626))
 :pattern ( ($generated@@77 $generated@@624 ($generated@@156 $generated@@627 $generated@@625) $generated@@626))
))))) ($generated@@264 ($generated@@165 $generated@@624) $generated@@625 $generated@@626))
 :pattern ( ($generated@@264 ($generated@@165 $generated@@624) $generated@@625 $generated@@626))
)))
(assert (forall (($generated@@628 T@U) ($generated@@629 T@U) ) (!  (=> (and (= (type $generated@@628) $generated@@136) (= (type $generated@@629) $generated@@136)) (= ($generated@@237 ($generated@@259 $generated@@628) ($generated@@259 $generated@@629)) ($generated@@259 ($generated@@237 $generated@@628 $generated@@629))))
 :pattern ( ($generated@@237 ($generated@@259 $generated@@628) ($generated@@259 $generated@@629)))
)))
(assert (forall (($generated@@630 Int) ) (! (= ($generated@@301 ($generated@@8 ($generated@@257 $generated@@630))) ($generated@@259 ($generated@@301 ($generated@@8 $generated@@630))))
 :pattern ( ($generated@@301 ($generated@@8 ($generated@@257 $generated@@630))))
)))
(assert (forall (($generated@@631 T@U) ) (! (= ($generated@@301 ($generated@@259 $generated@@631)) ($generated@@259 ($generated@@301 $generated@@631)))
 :pattern ( ($generated@@301 ($generated@@259 $generated@@631)))
)))
(assert (forall (($generated@@632 T@U) ) (! (let (($generated@@633 ($generated@@296 (type $generated@@632))))
 (=> (and (= (type $generated@@632) ($generated@@295 $generated@@633)) (= ($generated@@294 $generated@@632) 0)) (= $generated@@632 ($generated@@293 $generated@@633))))
 :pattern ( ($generated@@294 $generated@@632))
)))
(assert (forall (($generated@@634 T@U) ($generated@@635 T@U) ($generated@@636 T@U) ) (! (let (($generated@@637 (type $generated@@635)))
 (=> (and (and (= (type $generated@@634) ($generated@@79 $generated@@637 $generated@@2)) (= (type $generated@@636) $generated@@2)) (<= 0 ($generated $generated@@636))) (= ($generated@@310 ($generated@@85 $generated@@634 $generated@@635 $generated@@636)) (+ (- ($generated@@310 $generated@@634) ($generated ($generated@@84 $generated@@634 $generated@@635))) ($generated $generated@@636)))))
 :pattern ( ($generated@@310 ($generated@@85 $generated@@634 $generated@@635 $generated@@636)))
)))
(assert (forall (($generated@@638 T@U) ($generated@@639 T@U) ) (!  (=> (and (= (type $generated@@638) ($generated@@79 $generated@@80 $generated@@81)) (= (type $generated@@639) $generated@@2)) ($generated@@77 $generated@@639 $generated@@46 $generated@@638))
 :pattern ( ($generated@@77 $generated@@639 $generated@@46 $generated@@638))
)))
(assert (forall (($generated@@640 T@U) ($generated@@641 T@U) ) (!  (=> (and (= (type $generated@@640) ($generated@@79 $generated@@80 $generated@@81)) (= (type $generated@@641) $generated@@3)) ($generated@@77 $generated@@641 $generated@@47 $generated@@640))
 :pattern ( ($generated@@77 $generated@@641 $generated@@47 $generated@@640))
)))
(assert (forall (($generated@@642 T@U) ($generated@@643 T@U) ) (!  (=> (and (= (type $generated@@642) ($generated@@79 $generated@@80 $generated@@81)) (= (type $generated@@643) $generated@@4)) ($generated@@77 $generated@@643 $generated@@44 $generated@@642))
 :pattern ( ($generated@@77 $generated@@643 $generated@@44 $generated@@642))
)))
(assert (forall (($generated@@644 T@U) ($generated@@645 T@U) ) (!  (=> (and (= (type $generated@@644) ($generated@@79 $generated@@80 $generated@@81)) (= (type $generated@@645) $generated@@470)) ($generated@@77 $generated@@645 $generated@@45 $generated@@644))
 :pattern ( ($generated@@77 $generated@@645 $generated@@45 $generated@@644))
)))
(assert (forall (($generated@@646 T@U) ($generated@@647 T@U) ) (!  (=> (and (= (type $generated@@646) ($generated@@79 $generated@@80 $generated@@81)) (= (type $generated@@647) $generated@@136)) ($generated@@77 $generated@@647 $generated@@48 $generated@@646))
 :pattern ( ($generated@@77 $generated@@647 $generated@@48 $generated@@646))
)))
(assert (forall (($generated@@648 T@U) ($generated@@649 T@U) ) (!  (=> (and (= (type $generated@@648) ($generated@@295 $generated@@136)) (= (type $generated@@649) $generated@@67)) (= ($generated@@144 $generated@@648 ($generated@@524 $generated@@649)) (forall (($generated@@650 Int) ) (!  (=> (and (<= 0 $generated@@650) (< $generated@@650 ($generated@@294 $generated@@648))) ($generated@@238 ($generated@@525 $generated@@648 $generated@@650) $generated@@649))
 :pattern ( ($generated@@525 $generated@@648 $generated@@650))
))))
 :pattern ( ($generated@@144 $generated@@648 ($generated@@524 $generated@@649)))
)))
(assert (forall (($generated@@652 T@U) ($generated@@653 Int) ) (!  (=> (= (type $generated@@652) ($generated@@295 $generated@@136)) (=> (and (<= 0 $generated@@653) (< $generated@@653 ($generated@@294 $generated@@652))) (< ($generated@@571 ($generated@@359 $generated@@157 ($generated@@525 $generated@@652 $generated@@653))) ($generated@@651 $generated@@652))))
 :pattern ( ($generated@@571 ($generated@@359 $generated@@157 ($generated@@525 $generated@@652 $generated@@653))))
)))
(assert (forall (($generated@@654 T@U) ($generated@@655 T@U) ($generated@@656 T@U) ) (!  (=> (and (and (and (= (type $generated@@654) ($generated@@318 $generated@@136 $generated@@136)) (= (type $generated@@655) $generated@@67)) (= (type $generated@@656) $generated@@67)) ($generated@@144 $generated@@654 ($generated@@428 $generated@@655 $generated@@656))) (and (and ($generated@@144 ($generated@@316 $generated@@654) ($generated@@247 $generated@@655)) ($generated@@144 ($generated@@369 $generated@@654) ($generated@@247 $generated@@656))) ($generated@@144 ($generated@@402 $generated@@654) ($generated@@247 ($generated@@156 $generated@@655 $generated@@656)))))
 :pattern ( ($generated@@144 $generated@@654 ($generated@@428 $generated@@655 $generated@@656)))
)))
(assert (forall (($generated@@657 T@U) ($generated@@658 T@U) ($generated@@659 T@U) ) (!  (=> (and (and (and (= (type $generated@@657) ($generated@@336 $generated@@136 $generated@@136)) (= (type $generated@@658) $generated@@67)) (= (type $generated@@659) $generated@@67)) ($generated@@144 $generated@@657 ($generated@@436 $generated@@658 $generated@@659))) (and (and ($generated@@144 ($generated@@334 $generated@@657) ($generated@@252 $generated@@658)) ($generated@@144 ($generated@@380 $generated@@657) ($generated@@252 $generated@@659))) ($generated@@144 ($generated@@410 $generated@@657) ($generated@@252 ($generated@@156 $generated@@658 $generated@@659)))))
 :pattern ( ($generated@@144 $generated@@657 ($generated@@436 $generated@@658 $generated@@659)))
)))
(assert (forall (($generated@@660 T@U) ) (!  (=> (= (type $generated@@660) $generated@@2) ($generated@@144 $generated@@660 $generated@@46))
 :pattern ( ($generated@@144 $generated@@660 $generated@@46))
)))
(assert (forall (($generated@@661 T@U) ) (!  (=> (= (type $generated@@661) $generated@@3) ($generated@@144 $generated@@661 $generated@@47))
 :pattern ( ($generated@@144 $generated@@661 $generated@@47))
)))
(assert (forall (($generated@@662 T@U) ) (!  (=> (= (type $generated@@662) $generated@@4) ($generated@@144 $generated@@662 $generated@@44))
 :pattern ( ($generated@@144 $generated@@662 $generated@@44))
)))
(assert (forall (($generated@@663 T@U) ) (!  (=> (= (type $generated@@663) $generated@@470) ($generated@@144 $generated@@663 $generated@@45))
 :pattern ( ($generated@@144 $generated@@663 $generated@@45))
)))
(assert (forall (($generated@@664 T@U) ) (!  (=> (= (type $generated@@664) $generated@@136) ($generated@@144 $generated@@664 $generated@@48))
 :pattern ( ($generated@@144 $generated@@664 $generated@@48))
)))
(push 1)
(declare-fun ControlFlow (Int Int) Int)
(declare-fun $generated@@665 () Int)
(declare-fun $generated@@666 () T@U)
(declare-fun $generated@@667 () T@U)
(declare-fun $generated@@668 (T@U) Bool)
(declare-fun $generated@@669 () T@U)
(declare-fun $generated@@670 () T@U)
(declare-fun $generated@@671 () T@U)
(declare-fun $generated@@672 () T@U)
(declare-fun $generated@@673 () T@U)
(declare-fun $generated@@674 () T@U)
(assert  (and (and (and (and (and (and (and (= (type $generated@@666) $generated@@136) (= (type $generated@@667) ($generated@@79 $generated@@80 $generated@@81))) (= (type $generated@@669) ($generated@@79 $generated@@80 $generated@@81))) (= (type $generated@@670) $generated@@80)) (= (type $generated@@671) $generated@@275)) (= (type $generated@@672) $generated@@275)) (= (type $generated@@673) ($generated@@180 $generated@@80 $generated@@4))) (= (type $generated@@674) ($generated@@79 $generated@@80 $generated@@81))))
(set-option :timeout 0)
(set-option :rlimit 0)
(assert (not
 (=> (= (ControlFlow 0 0) 6) (let (($generated@@675  (=> (= (ControlFlow 0 2) (- 0 1)) (<= ($generated@@257 0) $generated@@665))))
(let (($generated@@676  (=> (<= ($generated@@148 $generated@@666) 0) (=> (and (and (and ($generated@@263 $generated@@667) ($generated@@668 $generated@@667)) (= $generated@@669 $generated@@667)) (and (forall (($generated@@677 T@U) ($generated@@678 Int) ) (!  (=> (= (type $generated@@677) $generated@@136) (=> (and ($generated@@135 $generated@@677 $generated@@666) ($generated@@273 ($generated@@474 $generated@@276) $generated@@670 $generated@@677 $generated@@678)) (<= ($generated@@257 0) $generated@@678)))
 :no-pattern (type $generated@@677)
 :no-pattern ($generated $generated@@677)
 :no-pattern ($generated@@0 $generated@@677)
)) (= (ControlFlow 0 4) 2))) $generated@@675))))
(let (($generated@@679  (=> (and (< 0 ($generated@@148 $generated@@666)) (= (ControlFlow 0 3) 2)) $generated@@675)))
(let (($generated@@680  (=> (= ($generated@@274 $generated@@671) $generated@@671) (=> (and (= ($generated@@274 $generated@@672) $generated@@672) (= $generated@@673 ($generated@@179 $generated@@141 $generated@@674 $generated@@60 false))) (=> (and (and ($generated@@263 $generated@@669) ($generated@@668 $generated@@669)) (and (= $generated@@674 $generated@@669) (forall (($generated@@681 T@U) ($generated@@682 T@U) ($generated@@683 Int) ) (!  (=> (and (= (type $generated@@681) $generated@@80) (= (type $generated@@682) $generated@@136)) (=> (and (and ($generated@@144 $generated@@681 $generated@@234) ($generated@@273 ($generated@@474 $generated@@276) $generated@@681 $generated@@682 $generated@@683)) (or ($generated@@135 $generated@@682 $generated@@666) (and (= $generated@@682 $generated@@666) (and (<= 0 $generated@@683) (< $generated@@683 $generated@@665))))) (<= ($generated@@257 0) $generated@@683)))
 :no-pattern (type $generated@@681)
 :no-pattern (type $generated@@682)
 :no-pattern ($generated $generated@@681)
 :no-pattern ($generated@@0 $generated@@681)
 :no-pattern ($generated $generated@@682)
 :no-pattern ($generated@@0 $generated@@682)
)))) (and (=> (= (ControlFlow 0 5) 3) $generated@@679) (=> (= (ControlFlow 0 5) 4) $generated@@676)))))))
(let (($generated@@684  (=> (and ($generated@@263 $generated@@674) ($generated@@668 $generated@@674)) (=> (and (and (and (not (= $generated@@670 $generated@@141)) (and ($generated@@144 $generated@@670 $generated@@234) ($generated@@77 $generated@@670 $generated@@234 $generated@@674))) (= 2 $generated@@282)) (and (and ($generated@@485 $generated@@670 $generated@@666 $generated@@665) (and ($generated@@273 ($generated@@474 $generated@@276) $generated@@670 $generated@@666 $generated@@665) (and (=> (< 0 ($generated@@148 $generated@@666)) (or (= $generated@@665 ($generated@@257 0)) ($generated@@273 ($generated@@474 $generated@@276) $generated@@670 ($generated@@146 $generated@@666 ($generated@@147 1)) (- $generated@@665 1)))) (=> (= ($generated@@257 0) ($generated@@148 $generated@@666)) (exists (($generated@@685 T@U) ) (!  (and (= (type $generated@@685) $generated@@136) (and ($generated@@283 $generated@@685 $generated@@666) ($generated@@273 ($generated@@474 $generated@@276) $generated@@670 $generated@@685 $generated@@665)))
 :pattern ( ($generated@@273 ($generated@@474 $generated@@276) $generated@@670 $generated@@685 $generated@@665))
)))))) (= (ControlFlow 0 6) 5))) $generated@@680))))
$generated@@684))))))
))
(check-sat)
(pop 1)
; Valid
(get-info :rlimit)
(reset)
(set-option :rlimit 0)
; did a full reset
(reset)
(set-option :print-success false)
(set-info :smt-lib-version 2.6)
(set-option :auto_config false)
(set-option :type_check true)
(set-option :smt.case_split 3)
(set-option :smt.qi.eager_threshold 100)
(set-option :smt.delay_units true)
(set-option :smt.arith.solver 2)
(set-option :smt.mbqi false)
(set-option :model.compact false)
(set-option :model.v2 true)
(set-option :pp.bv_literals false)
; done setting options


(set-info :category "industrial")
(declare-sort |T@U| 0)
(declare-sort |T@T| 0)
(declare-fun real_pow (Real Real) Real)
(declare-fun UOrdering2 (|T@U| |T@U|) Bool)
(declare-fun UOrdering3 (|T@T| |T@U| |T@U|) Bool)
(declare-fun tickleBool (Bool) Bool)
(assert (and (tickleBool true) (tickleBool false)))
(declare-fun $generated (T@U) Int)
(declare-fun $generated@@0 (T@U) Bool)
(declare-fun $generated@@1 (T@T) Int)
(declare-fun $generated@@2 () T@T)
(declare-fun $generated@@3 () T@T)
(declare-fun $generated@@4 () T@T)
(declare-fun $generated@@5 () T@T)
(declare-fun $generated@@6 () T@T)
(declare-fun $generated@@7 () T@T)
(declare-fun $generated@@8 (Int) T@U)
(declare-fun type (T@U) T@T)
(declare-fun $generated@@9 (Real) T@U)
(declare-fun $generated@@10 (T@U) Real)
(declare-fun $generated@@11 (Bool) T@U)
(declare-fun $generated@@12 (RoundingMode) T@U)
(declare-fun $generated@@13 (T@U) RoundingMode)
(declare-fun $generated@@14 (String) T@U)
(declare-fun $generated@@15 (T@U) String)
(declare-fun $generated@@16 ((RegEx String)) T@U)
(declare-fun $generated@@17 (T@U) (RegEx String))
(declare-fun $generated@@44 () T@U)
(declare-fun $generated@@45 () T@U)
(declare-fun $generated@@46 () T@U)
(declare-fun $generated@@47 () T@U)
(declare-fun $generated@@48 () T@U)
(declare-fun $generated@@49 () T@U)
(declare-fun $generated@@50 () T@U)
(declare-fun $generated@@51 () T@U)
(declare-fun $generated@@52 () T@U)
(declare-fun $generated@@53 () T@U)
(declare-fun $generated@@54 () T@U)
(declare-fun $generated@@55 () T@U)
(declare-fun $generated@@56 () T@U)
(declare-fun $generated@@57 () T@U)
(declare-fun $generated@@58 () T@U)
(declare-fun $generated@@59 () T@U)
(declare-fun $generated@@60 () T@U)
(declare-fun $generated@@61 () T@U)
(declare-fun $generated@@62 () T@U)
(declare-fun $generated@@63 () T@U)
(declare-fun $generated@@64 () T@U)
(declare-fun $generated@@65 () T@U)
(declare-fun $generated@@66 () T@U)
(declare-fun $generated@@67 () T@T)
(declare-fun $generated@@68 () T@T)
(declare-fun $generated@@69 (T@T) T@T)
(declare-fun $generated@@70 (T@T) T@T)
(declare-fun $generated@@71 () T@T)
(declare-fun $generated@@72 () T@T)
(declare-fun $generated@@75 (T@U) T@U)
(declare-fun $generated@@77 (T@U T@U T@U) Bool)
(declare-fun $generated@@78 (Int) T@U)
(declare-fun $generated@@79 (T@T T@T) T@T)
(declare-fun $generated@@80 () T@T)
(declare-fun $generated@@81 () T@T)
(declare-fun $generated@@82 (T@T) T@T)
(declare-fun $generated@@83 (T@T) T@T)
(declare-fun $generated@@84 (T@U T@U) T@U)
(declare-fun $generated@@85 (T@U T@U T@U) T@U)
(declare-fun $generated@@86 (T@U T@U) T@U)
(declare-fun $generated@@87 (T@U T@U T@U) T@U)
(declare-fun $generated@@135 (T@U T@U) Bool)
(declare-fun $generated@@136 () T@T)
(declare-fun $generated@@140 () T@U)
(declare-fun $generated@@141 () T@U)
(declare-fun $generated@@144 (T@U T@U) Bool)
(declare-fun $generated@@146 (T@U T@U) T@U)
(declare-fun $generated@@147 (Int) T@U)
(declare-fun $generated@@148 (T@U) Int)
(declare-fun $generated@@155 (T@U) Bool)
(declare-fun $generated@@156 (T@U T@U) T@U)
(declare-fun $generated@@157 () T@T)
(declare-fun $generated@@163 (T@U T@U) Bool)
(declare-fun $generated@@164 (T@U) T@U)
(declare-fun $generated@@165 (T@U) T@U)
(declare-fun $generated@@170 (T@U) T@U)
(declare-fun $generated@@171 (T@U) Bool)
(declare-fun $generated@@175 (T@U) T@U)
(declare-fun $generated@@178 (T@U T@U T@U) T@U)
(declare-fun $generated@@179 (T@U T@U T@U Bool) T@U)
(declare-fun $generated@@180 (T@T T@T) T@T)
(declare-fun $generated@@181 (T@T) T@T)
(declare-fun $generated@@182 (T@T) T@T)
(declare-fun $generated@@183 (T@U T@U T@U T@U) T@U)
(declare-fun $generated@@234 () T@U)
(declare-fun $generated@@237 (T@U T@U) T@U)
(declare-fun $generated@@238 (T@U T@U) Bool)
(declare-fun $generated@@247 (T@U) T@U)
(declare-fun $generated@@252 (T@U) T@U)
(declare-fun $generated@@257 (Int) Int)
(declare-fun $generated@@259 (T@U) T@U)
(declare-fun $generated@@263 (T@U) Bool)
(declare-fun $generated@@264 (T@U T@U T@U) Bool)
(declare-fun $generated@@270 (T@U) T@U)
(declare-fun $generated@@273 (T@U T@U T@U Int) Bool)
(declare-fun $generated@@274 (T@U) T@U)
(declare-fun $generated@@275 () T@T)
(declare-fun $generated@@276 () T@U)
(declare-fun $generated@@282 () Int)
(declare-fun $generated@@283 (T@U T@U) Bool)
(declare-fun $generated@@293 (T@T) T@U)
(declare-fun $generated@@294 (T@U) Int)
(declare-fun $generated@@295 (T@T) T@T)
(declare-fun $generated@@296 (T@T) T@T)
(declare-fun $generated@@301 (T@U) T@U)
(declare-fun $generated@@310 (T@U) Int)
(declare-fun $generated@@311 (T@T) T@U)
(declare-fun $generated@@316 (T@U) T@U)
(declare-fun $generated@@317 (T@T T@T) T@U)
(declare-fun $generated@@318 (T@T T@T) T@T)
(declare-fun $generated@@319 (T@T) T@T)
(declare-fun $generated@@320 (T@T) T@T)
(declare-fun $generated@@334 (T@U) T@U)
(declare-fun $generated@@335 (T@T T@T) T@U)
(declare-fun $generated@@336 (T@T T@T) T@T)
(declare-fun $generated@@337 (T@T) T@T)
(declare-fun $generated@@338 (T@T) T@T)
(declare-fun $generated@@352 (T@U) Bool)
(declare-fun $generated@@359 (T@T T@U) T@U)
(declare-fun $generated@@369 (T@U) T@U)
(declare-fun $generated@@380 (T@U) T@U)
(declare-fun $generated@@402 (T@U) T@U)
(declare-fun $generated@@403 (T@U) T@U)
(declare-fun $generated@@410 (T@U) T@U)
(declare-fun $generated@@411 (T@U) T@U)
(declare-fun $generated@@428 (T@U T@U) T@U)
(declare-fun $generated@@436 (T@U T@U) T@U)
(declare-fun $generated@@446 (T@T) T@U)
(declare-fun $generated@@470 () T@T)
(declare-fun $generated@@474 (T@U) T@U)
(declare-fun $generated@@485 (T@U T@U Int) Bool)
(declare-fun $generated@@490 (T@U) T@U)
(declare-fun $generated@@494 (T@U) T@U)
(declare-fun $generated@@500 (T@U) T@U)
(declare-fun $generated@@504 (T@U) T@U)
(declare-fun $generated@@512 (T@U) T@U)
(declare-fun $generated@@516 (T@U) T@U)
(declare-fun $generated@@524 (T@U) T@U)
(declare-fun $generated@@525 (T@U Int) T@U)
(declare-fun $generated@@534 (T@U) Int)
(declare-fun $generated@@536 (T@U) T@U)
(declare-fun $generated@@540 (T@U) T@U)
(declare-fun $generated@@544 (T@U) T@U)
(declare-fun $generated@@548 (T@U) T@U)
(declare-fun $generated@@570 (T@U) Int)
(declare-fun $generated@@571 (T@U) Int)
(declare-fun $generated@@587 (T@U) T@U)
(declare-fun $generated@@651 (T@U) Int)
(assert  (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (= ($generated@@1 $generated@@2) 0) (= ($generated@@1 $generated@@3) 1)) (= ($generated@@1 $generated@@4) 2)) (= ($generated@@1 $generated@@5) 3)) (= ($generated@@1 $generated@@6) 4)) (= ($generated@@1 $generated@@7) 5)) (forall (($generated@@18 Int) ) (! (= ($generated ($generated@@8 $generated@@18)) $generated@@18)
 :pattern ( ($generated@@8 $generated@@18))
))) (forall (($generated@@19 T@U) ) (!  (=> (= (type $generated@@19) $generated@@2) (= ($generated@@8 ($generated $generated@@19)) $generated@@19))
 :pattern ( ($generated $generated@@19))
))) (forall (($generated@@20 Int) ) (! (= (type ($generated@@8 $generated@@20)) $generated@@2)
 :pattern ( ($generated@@8 $generated@@20))
))) (forall (($generated@@21 Real) ) (! (= ($generated@@10 ($generated@@9 $generated@@21)) $generated@@21)
 :pattern ( ($generated@@9 $generated@@21))
))) (forall (($generated@@22 T@U) ) (!  (=> (= (type $generated@@22) $generated@@3) (= ($generated@@9 ($generated@@10 $generated@@22)) $generated@@22))
 :pattern ( ($generated@@10 $generated@@22))
))) (forall (($generated@@23 Real) ) (! (= (type ($generated@@9 $generated@@23)) $generated@@3)
 :pattern ( ($generated@@9 $generated@@23))
))) (forall (($generated@@24 Bool) ) (! (= ($generated@@0 ($generated@@11 $generated@@24)) $generated@@24)
 :pattern ( ($generated@@11 $generated@@24))
))) (forall (($generated@@25 T@U) ) (!  (=> (= (type $generated@@25) $generated@@4) (= ($generated@@11 ($generated@@0 $generated@@25)) $generated@@25))
 :pattern ( ($generated@@0 $generated@@25))
))) (forall (($generated@@26 Bool) ) (! (= (type ($generated@@11 $generated@@26)) $generated@@4)
 :pattern ( ($generated@@11 $generated@@26))
))) (forall (($generated@@27 RoundingMode) ) (! (= ($generated@@13 ($generated@@12 $generated@@27)) $generated@@27)
 :pattern ( ($generated@@12 $generated@@27))
))) (forall (($generated@@28 T@U) ) (!  (=> (= (type $generated@@28) $generated@@5) (= ($generated@@12 ($generated@@13 $generated@@28)) $generated@@28))
 :pattern ( ($generated@@13 $generated@@28))
))) (forall (($generated@@29 RoundingMode) ) (! (= (type ($generated@@12 $generated@@29)) $generated@@5)
 :pattern ( ($generated@@12 $generated@@29))
))) (forall (($generated@@30 String) ) (! (= ($generated@@15 ($generated@@14 $generated@@30)) $generated@@30)
 :pattern ( ($generated@@14 $generated@@30))
))) (forall (($generated@@31 T@U) ) (!  (=> (= (type $generated@@31) $generated@@6) (= ($generated@@14 ($generated@@15 $generated@@31)) $generated@@31))
 :pattern ( ($generated@@15 $generated@@31))
))) (forall (($generated@@32 String) ) (! (= (type ($generated@@14 $generated@@32)) $generated@@6)
 :pattern ( ($generated@@14 $generated@@32))
))) (forall (($generated@@33 (RegEx String)) ) (! (= ($generated@@17 ($generated@@16 $generated@@33)) $generated@@33)
 :pattern ( ($generated@@16 $generated@@33))
))) (forall (($generated@@34 T@U) ) (!  (=> (= (type $generated@@34) $generated@@7) (= ($generated@@16 ($generated@@17 $generated@@34)) $generated@@34))
 :pattern ( ($generated@@17 $generated@@34))
))) (forall (($generated@@35 (RegEx String)) ) (! (= (type ($generated@@16 $generated@@35)) $generated@@7)
 :pattern ( ($generated@@16 $generated@@35))
))))
(assert (forall (($generated@@36 T@U) ) (! (UOrdering2 $generated@@36 $generated@@36)
 :no-pattern ($generated $generated@@36)
 :no-pattern ($generated@@0 $generated@@36)
)))
(assert (forall (($generated@@37 T@U) ($generated@@38 T@U) ($generated@@39 T@U) ) (! (let (($generated@@40 (type $generated@@37)))
 (=> (and (and (= (type $generated@@38) $generated@@40) (= (type $generated@@39) $generated@@40)) (and (UOrdering2 $generated@@37 $generated@@38) (UOrdering2 $generated@@38 $generated@@39))) (UOrdering2 $generated@@37 $generated@@39)))
 :pattern ( (UOrdering2 $generated@@37 $generated@@38) (UOrdering2 $generated@@38 $generated@@39))
)))
(assert (forall (($generated@@41 T@U) ($generated@@42 T@U) ) (! (let (($generated@@43 (type $generated@@41)))
 (=> (= (type $generated@@42) $generated@@43) (=> (and (UOrdering2 $generated@@41 $generated@@42) (UOrdering2 $generated@@42 $generated@@41)) (= $generated@@41 $generated@@42))))
 :pattern ( (UOrdering2 $generated@@41 $generated@@42) (UOrdering2 $generated@@42 $generated@@41))
)))
(assert  (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (= ($generated@@1 $generated@@67) 6) (= (type $generated@@44) $generated@@67)) (= (type $generated@@45) $generated@@67)) (= (type $generated@@46) $generated@@67)) (= (type $generated@@47) $generated@@67)) (= (type $generated@@48) $generated@@67)) (= ($generated@@1 $generated@@68) 7)) (= (type $generated@@49) $generated@@68)) (= (type $generated@@50) $generated@@68)) (= (type $generated@@51) $generated@@68)) (= (type $generated@@52) $generated@@68)) (= (type $generated@@53) $generated@@68)) (= (type $generated@@54) $generated@@68)) (= (type $generated@@55) $generated@@68)) (= (type $generated@@56) $generated@@68)) (= (type $generated@@57) $generated@@68)) (= (type $generated@@58) $generated@@68)) (= (type $generated@@59) $generated@@68)) (forall (($generated@@73 T@T) ) (= ($generated@@1 ($generated@@69 $generated@@73)) 8))) (forall (($generated@@74 T@T) ) (! (= ($generated@@70 ($generated@@69 $generated@@74)) $generated@@74)
 :pattern ( ($generated@@69 $generated@@74))
))) (= (type $generated@@60) ($generated@@69 $generated@@4))) (= ($generated@@1 $generated@@71) 9)) (= (type $generated@@61) $generated@@71)) (= (type $generated@@62) $generated@@68)) (= (type $generated@@63) $generated@@68)) (= (type $generated@@64) $generated@@68)) (= ($generated@@1 $generated@@72) 10)) (= (type $generated@@65) $generated@@72)) (= (type $generated@@66) $generated@@72)))
(assert (distinct $generated@@44 $generated@@45 $generated@@46 $generated@@47 $generated@@48 $generated@@49 $generated@@50 $generated@@51 $generated@@52 $generated@@53 $generated@@54 $generated@@55 $generated@@56 $generated@@57 $generated@@58 $generated@@59 $generated@@60 $generated@@61 $generated@@62 $generated@@63 $generated@@64 $generated@@65 $generated@@66)
)
(assert (forall (($generated@@76 T@U) ) (! (= (type ($generated@@75 $generated@@76)) $generated@@68)
 :pattern ( ($generated@@75 $generated@@76))
)))
(assert (= ($generated@@75 $generated@@44) $generated@@49))
(assert (= ($generated@@75 $generated@@45) $generated@@50))
(assert (= ($generated@@75 $generated@@46) $generated@@51))
(assert (= ($generated@@75 $generated@@47) $generated@@52))
(assert (= ($generated@@75 $generated@@48) $generated@@53))
(assert  (and (and (and (and (and (and (and (and (and (and (and (and (and (forall (($generated@@88 T@T) ($generated@@89 T@T) ) (= ($generated@@1 ($generated@@79 $generated@@88 $generated@@89)) 11)) (forall (($generated@@90 T@T) ($generated@@91 T@T) ) (! (= ($generated@@82 ($generated@@79 $generated@@90 $generated@@91)) $generated@@90)
 :pattern ( ($generated@@79 $generated@@90 $generated@@91))
))) (forall (($generated@@92 T@T) ($generated@@93 T@T) ) (! (= ($generated@@83 ($generated@@79 $generated@@92 $generated@@93)) $generated@@93)
 :pattern ( ($generated@@79 $generated@@92 $generated@@93))
))) (forall (($generated@@94 T@U) ($generated@@95 T@U) ) (! (let (($generated@@96 ($generated@@83 (type $generated@@94))))
(= (type ($generated@@84 $generated@@94 $generated@@95)) $generated@@96))
 :pattern ( ($generated@@84 $generated@@94 $generated@@95))
))) (forall (($generated@@97 T@U) ($generated@@98 T@U) ($generated@@99 T@U) ) (! (let (($generated@@100 (type $generated@@99)))
(let (($generated@@101 (type $generated@@98)))
(= (type ($generated@@85 $generated@@97 $generated@@98 $generated@@99)) ($generated@@79 $generated@@101 $generated@@100))))
 :pattern ( ($generated@@85 $generated@@97 $generated@@98 $generated@@99))
))) (forall (($generated@@102 T@U) ($generated@@103 T@U) ($generated@@104 T@U) ) (! (let (($generated@@105 ($generated@@83 (type $generated@@102))))
 (=> (= (type $generated@@104) $generated@@105) (= ($generated@@84 ($generated@@85 $generated@@102 $generated@@103 $generated@@104) $generated@@103) $generated@@104)))
 :weight 0
))) (and (forall (($generated@@106 T@U) ($generated@@107 T@U) ($generated@@108 T@U) ($generated@@109 T@U) ) (!  (or (= $generated@@108 $generated@@109) (= ($generated@@84 ($generated@@85 $generated@@107 $generated@@108 $generated@@106) $generated@@109) ($generated@@84 $generated@@107 $generated@@109)))
 :weight 0
)) (forall (($generated@@110 T@U) ($generated@@111 T@U) ($generated@@112 T@U) ($generated@@113 T@U) ) (!  (or true (= ($generated@@84 ($generated@@85 $generated@@111 $generated@@112 $generated@@110) $generated@@113) ($generated@@84 $generated@@111 $generated@@113)))
 :weight 0
)))) (= ($generated@@1 $generated@@80) 12)) (forall (($generated@@114 T@U) ($generated@@115 T@U) ) (! (let (($generated@@116 ($generated@@70 (type $generated@@115))))
(= (type ($generated@@86 $generated@@114 $generated@@115)) $generated@@116))
 :pattern ( ($generated@@86 $generated@@114 $generated@@115))
))) (= ($generated@@1 $generated@@81) 13)) (forall (($generated@@117 T@U) ($generated@@118 T@U) ($generated@@119 T@U) ) (! (= (type ($generated@@87 $generated@@117 $generated@@118 $generated@@119)) $generated@@81)
 :pattern ( ($generated@@87 $generated@@117 $generated@@118 $generated@@119))
))) (forall (($generated@@120 T@U) ($generated@@121 T@U) ($generated@@122 T@U) ) (! (let (($generated@@123 ($generated@@70 (type $generated@@121))))
 (=> (= (type $generated@@122) $generated@@123) (= ($generated@@86 ($generated@@87 $generated@@120 $generated@@121 $generated@@122) $generated@@121) $generated@@122)))
 :weight 0
))) (and (forall (($generated@@124 T@U) ($generated@@125 T@U) ($generated@@126 T@U) ($generated@@127 T@U) ) (!  (or (= $generated@@126 $generated@@127) (= ($generated@@86 ($generated@@87 $generated@@125 $generated@@126 $generated@@124) $generated@@127) ($generated@@86 $generated@@125 $generated@@127)))
 :weight 0
)) (forall (($generated@@128 T@U) ($generated@@129 T@U) ($generated@@130 T@U) ($generated@@131 T@U) ) (!  (or true (= ($generated@@86 ($generated@@87 $generated@@129 $generated@@130 $generated@@128) $generated@@131) ($generated@@86 $generated@@129 $generated@@131)))
 :weight 0
)))) (forall (($generated@@132 Int) ) (! (= (type ($generated@@78 $generated@@132)) $generated@@67)
 :pattern ( ($generated@@78 $generated@@132))
))))
(assert (forall (($generated@@133 T@U) ($generated@@134 T@U) ) (!  (=> (and (= (type $generated@@133) $generated@@2) (= (type $generated@@134) ($generated@@79 $generated@@80 $generated@@81))) ($generated@@77 $generated@@133 ($generated@@78 0) $generated@@134))
 :pattern ( ($generated@@77 $generated@@133 ($generated@@78 0) $generated@@134))
)))
(assert (= ($generated@@1 $generated@@136) 14))
(assert (forall (($generated@@137 T@U) ($generated@@138 T@U) ($generated@@139 T@U) ) (!  (=> (and (and (and (= (type $generated@@137) $generated@@136) (= (type $generated@@138) $generated@@136)) (= (type $generated@@139) $generated@@136)) (and ($generated@@135 $generated@@137 $generated@@138) ($generated@@135 $generated@@138 $generated@@139))) ($generated@@135 $generated@@137 $generated@@139))
 :pattern ( ($generated@@135 $generated@@137 $generated@@138) ($generated@@135 $generated@@138 $generated@@139))
 :pattern ( ($generated@@135 $generated@@137 $generated@@138) ($generated@@135 $generated@@137 $generated@@139))
)))
(assert  (and (= (type $generated@@140) $generated@@67) (= (type $generated@@141) $generated@@80)))
(assert (forall (($generated@@142 T@U) ($generated@@143 T@U) ) (!  (=> (and (= (type $generated@@142) $generated@@80) (= (type $generated@@143) ($generated@@79 $generated@@80 $generated@@81))) (= ($generated@@77 $generated@@142 $generated@@140 $generated@@143)  (or (= $generated@@142 $generated@@141) ($generated@@0 ($generated@@86 ($generated@@84 $generated@@143 $generated@@142) $generated@@60)))))
 :pattern ( ($generated@@77 $generated@@142 $generated@@140 $generated@@143))
)))
(assert (forall (($generated@@145 T@U) ) (!  (=> (= (type $generated@@145) $generated@@2) ($generated@@144 $generated@@145 ($generated@@78 0)))
 :pattern ( ($generated@@144 $generated@@145 ($generated@@78 0)))
)))
(assert  (and (forall (($generated@@149 T@U) ($generated@@150 T@U) ) (! (= (type ($generated@@146 $generated@@149 $generated@@150)) $generated@@136)
 :pattern ( ($generated@@146 $generated@@149 $generated@@150))
)) (forall (($generated@@151 Int) ) (! (= (type ($generated@@147 $generated@@151)) $generated@@136)
 :pattern ( ($generated@@147 $generated@@151))
))))
(assert (forall (($generated@@152 T@U) ($generated@@153 Int) ($generated@@154 Int) ) (!  (=> (= (type $generated@@152) $generated@@136) (=> (and (and (<= 0 $generated@@153) (<= 0 $generated@@154)) (<= (+ $generated@@153 $generated@@154) ($generated@@148 $generated@@152))) (= ($generated@@146 ($generated@@146 $generated@@152 ($generated@@147 $generated@@153)) ($generated@@147 $generated@@154)) ($generated@@146 $generated@@152 ($generated@@147 (+ $generated@@153 $generated@@154))))))
 :pattern ( ($generated@@146 ($generated@@146 $generated@@152 ($generated@@147 $generated@@153)) ($generated@@147 $generated@@154)))
)))
(assert  (and (= ($generated@@1 $generated@@157) 15) (forall (($generated@@158 T@U) ($generated@@159 T@U) ) (! (= (type ($generated@@156 $generated@@158 $generated@@159)) $generated@@67)
 :pattern ( ($generated@@156 $generated@@158 $generated@@159))
))))
(assert (forall (($generated@@160 T@U) ($generated@@161 T@U) ($generated@@162 T@U) ) (!  (=> (and (and (and (= (type $generated@@160) $generated@@67) (= (type $generated@@161) $generated@@67)) (= (type $generated@@162) $generated@@157)) ($generated@@144 $generated@@162 ($generated@@156 $generated@@160 $generated@@161))) ($generated@@155 $generated@@162))
 :pattern ( ($generated@@155 $generated@@162) ($generated@@144 $generated@@162 ($generated@@156 $generated@@160 $generated@@161)))
)))
(assert  (and (forall (($generated@@166 T@U) ) (! (= (type ($generated@@164 $generated@@166)) $generated@@136)
 :pattern ( ($generated@@164 $generated@@166))
)) (forall (($generated@@167 T@U) ) (! (= (type ($generated@@165 $generated@@167)) $generated@@136)
 :pattern ( ($generated@@165 $generated@@167))
))))
(assert (forall (($generated@@168 T@U) ($generated@@169 T@U) ) (!  (=> (and (and (= (type $generated@@168) $generated@@157) (= (type $generated@@169) $generated@@157)) true) (= ($generated@@163 $generated@@168 $generated@@169)  (and (= ($generated@@164 $generated@@168) ($generated@@164 $generated@@169)) (= ($generated@@165 $generated@@168) ($generated@@165 $generated@@169)))))
 :pattern ( ($generated@@163 $generated@@168 $generated@@169))
)))
(assert (forall (($generated@@172 T@U) ) (! (= (type ($generated@@170 $generated@@172)) $generated@@67)
 :pattern ( ($generated@@170 $generated@@172))
)))
(assert (forall (($generated@@173 T@U) ($generated@@174 T@U) ) (!  (=> (and (and (= (type $generated@@173) ($generated@@79 $generated@@136 $generated@@2)) (= (type $generated@@174) $generated@@67)) ($generated@@144 $generated@@173 ($generated@@170 $generated@@174))) ($generated@@171 $generated@@173))
 :pattern ( ($generated@@144 $generated@@173 ($generated@@170 $generated@@174)))
)))
(assert (forall (($generated@@176 T@U) ) (! (= (type ($generated@@175 $generated@@176)) $generated@@67)
 :pattern ( ($generated@@175 $generated@@176))
)))
(assert (forall (($generated@@177 T@U) ) (!  (=> (= (type $generated@@177) $generated@@80) (= ($generated@@144 $generated@@177 $generated@@140)  (or (= $generated@@177 $generated@@141) (= ($generated@@175 $generated@@177) $generated@@140))))
 :pattern ( ($generated@@144 $generated@@177 $generated@@140))
)))
(assert  (and (and (and (and (and (and (and (forall (($generated@@184 T@T) ($generated@@185 T@T) ) (= ($generated@@1 ($generated@@180 $generated@@184 $generated@@185)) 16)) (forall (($generated@@186 T@T) ($generated@@187 T@T) ) (! (= ($generated@@181 ($generated@@180 $generated@@186 $generated@@187)) $generated@@186)
 :pattern ( ($generated@@180 $generated@@186 $generated@@187))
))) (forall (($generated@@188 T@T) ($generated@@189 T@T) ) (! (= ($generated@@182 ($generated@@180 $generated@@188 $generated@@189)) $generated@@189)
 :pattern ( ($generated@@180 $generated@@188 $generated@@189))
))) (forall (($generated@@190 T@U) ($generated@@191 T@U) ($generated@@192 T@U) ) (! (let (($generated@@193 ($generated@@182 (type $generated@@190))))
(= (type ($generated@@178 $generated@@190 $generated@@191 $generated@@192)) $generated@@193))
 :pattern ( ($generated@@178 $generated@@190 $generated@@191 $generated@@192))
))) (forall (($generated@@194 T@U) ($generated@@195 T@U) ($generated@@196 T@U) ($generated@@197 T@U) ) (! (let (($generated@@198 (type $generated@@197)))
(let (($generated@@199 (type $generated@@195)))
(= (type ($generated@@183 $generated@@194 $generated@@195 $generated@@196 $generated@@197)) ($generated@@180 $generated@@199 $generated@@198))))
 :pattern ( ($generated@@183 $generated@@194 $generated@@195 $generated@@196 $generated@@197))
))) (forall (($generated@@200 T@U) ($generated@@201 T@U) ($generated@@202 T@U) ($generated@@203 T@U) ) (! (let (($generated@@204 ($generated@@182 (type $generated@@200))))
 (=> (= (type $generated@@203) $generated@@204) (= ($generated@@178 ($generated@@183 $generated@@200 $generated@@201 $generated@@202 $generated@@203) $generated@@201 $generated@@202) $generated@@203)))
 :weight 0
))) (and (and (forall (($generated@@205 T@U) ($generated@@206 T@U) ($generated@@207 T@U) ($generated@@208 T@U) ($generated@@209 T@U) ($generated@@210 T@U) ) (!  (or (= $generated@@207 $generated@@209) (= ($generated@@178 ($generated@@183 $generated@@206 $generated@@207 $generated@@208 $generated@@205) $generated@@209 $generated@@210) ($generated@@178 $generated@@206 $generated@@209 $generated@@210)))
 :weight 0
)) (forall (($generated@@211 T@U) ($generated@@212 T@U) ($generated@@213 T@U) ($generated@@214 T@U) ($generated@@215 T@U) ($generated@@216 T@U) ) (!  (or (= $generated@@214 $generated@@216) (= ($generated@@178 ($generated@@183 $generated@@212 $generated@@213 $generated@@214 $generated@@211) $generated@@215 $generated@@216) ($generated@@178 $generated@@212 $generated@@215 $generated@@216)))
 :weight 0
))) (forall (($generated@@217 T@U) ($generated@@218 T@U) ($generated@@219 T@U) ($generated@@220 T@U) ($generated@@221 T@U) ($generated@@222 T@U) ) (!  (or true (= ($generated@@178 ($generated@@183 $generated@@218 $generated@@219 $generated@@220 $generated@@217) $generated@@221 $generated@@222) ($generated@@178 $generated@@218 $generated@@221 $generated@@222)))
 :weight 0
)))) (forall (($generated@@223 T@U) ($generated@@224 T@U) ($generated@@225 T@U) ($generated@@226 Bool) ) (! (= (type ($generated@@179 $generated@@223 $generated@@224 $generated@@225 $generated@@226)) ($generated@@180 $generated@@80 $generated@@4))
 :pattern ( ($generated@@179 $generated@@223 $generated@@224 $generated@@225 $generated@@226))
))))
(assert (forall (($generated@@227 T@U) ($generated@@228 T@U) ($generated@@229 T@U) ($generated@@230 Bool) ($generated@@231 T@U) ($generated@@232 T@U) ) (! (let (($generated@@233 ($generated@@70 (type $generated@@232))))
 (=> (and (and (and (and (= (type $generated@@227) $generated@@80) (= (type $generated@@228) ($generated@@79 $generated@@80 $generated@@81))) (= (type $generated@@229) ($generated@@69 $generated@@4))) (= (type $generated@@231) $generated@@80)) (= (type $generated@@232) ($generated@@69 $generated@@233))) (= ($generated@@0 ($generated@@178 ($generated@@179 $generated@@227 $generated@@228 $generated@@229 $generated@@230) $generated@@231 $generated@@232))  (=> (and (not (= $generated@@231 $generated@@227)) ($generated@@0 ($generated@@86 ($generated@@84 $generated@@228 $generated@@231) $generated@@229))) $generated@@230))))
 :pattern ( ($generated@@178 ($generated@@179 $generated@@227 $generated@@228 $generated@@229 $generated@@230) $generated@@231 $generated@@232))
)))
(assert (= (type $generated@@234) $generated@@67))
(assert (forall (($generated@@235 T@U) ($generated@@236 T@U) ) (!  (=> (and (= (type $generated@@235) $generated@@80) (= (type $generated@@236) ($generated@@79 $generated@@80 $generated@@81))) (= ($generated@@77 $generated@@235 $generated@@234 $generated@@236) ($generated@@77 $generated@@235 $generated@@140 $generated@@236)))
 :pattern ( ($generated@@77 $generated@@235 $generated@@234 $generated@@236))
)))
(assert (forall (($generated@@239 T@U) ($generated@@240 T@U) ) (! (= (type ($generated@@237 $generated@@239 $generated@@240)) $generated@@157)
 :pattern ( ($generated@@237 $generated@@239 $generated@@240))
)))
(assert (forall (($generated@@241 T@U) ($generated@@242 T@U) ($generated@@243 T@U) ($generated@@244 T@U) ) (!  (=> (and (and (and (= (type $generated@@241) $generated@@67) (= (type $generated@@242) $generated@@67)) (= (type $generated@@243) $generated@@136)) (= (type $generated@@244) $generated@@136)) (= ($generated@@144 ($generated@@237 $generated@@243 $generated@@244) ($generated@@156 $generated@@241 $generated@@242))  (and ($generated@@238 $generated@@243 $generated@@241) ($generated@@238 $generated@@244 $generated@@242))))
 :pattern ( ($generated@@144 ($generated@@237 $generated@@243 $generated@@244) ($generated@@156 $generated@@241 $generated@@242)))
)))
(assert (forall (($generated@@245 T@U) ($generated@@246 T@U) ) (!  (=> (and (= (type $generated@@245) $generated@@157) (= (type $generated@@246) $generated@@157)) (= ($generated@@163 $generated@@245 $generated@@246) (= $generated@@245 $generated@@246)))
 :pattern ( ($generated@@163 $generated@@245 $generated@@246))
)))
(assert (forall (($generated@@248 T@U) ) (! (= (type ($generated@@247 $generated@@248)) $generated@@67)
 :pattern ( ($generated@@247 $generated@@248))
)))
(assert (forall (($generated@@249 T@U) ($generated@@250 T@U) ) (!  (=> (and (= (type $generated@@249) ($generated@@79 $generated@@136 $generated@@4)) (= (type $generated@@250) $generated@@67)) (= ($generated@@144 $generated@@249 ($generated@@247 $generated@@250)) (forall (($generated@@251 T@U) ) (!  (=> (and (= (type $generated@@251) $generated@@136) ($generated@@0 ($generated@@84 $generated@@249 $generated@@251))) ($generated@@238 $generated@@251 $generated@@250))
 :pattern ( ($generated@@84 $generated@@249 $generated@@251))
))))
 :pattern ( ($generated@@144 $generated@@249 ($generated@@247 $generated@@250)))
)))
(assert (forall (($generated@@253 T@U) ) (! (= (type ($generated@@252 $generated@@253)) $generated@@67)
 :pattern ( ($generated@@252 $generated@@253))
)))
(assert (forall (($generated@@254 T@U) ($generated@@255 T@U) ) (!  (=> (and (= (type $generated@@254) ($generated@@79 $generated@@136 $generated@@4)) (= (type $generated@@255) $generated@@67)) (= ($generated@@144 $generated@@254 ($generated@@252 $generated@@255)) (forall (($generated@@256 T@U) ) (!  (=> (and (= (type $generated@@256) $generated@@136) ($generated@@0 ($generated@@84 $generated@@254 $generated@@256))) ($generated@@238 $generated@@256 $generated@@255))
 :pattern ( ($generated@@84 $generated@@254 $generated@@256))
))))
 :pattern ( ($generated@@144 $generated@@254 ($generated@@252 $generated@@255)))
)))
(assert (forall (($generated@@258 Int) ) (! (= ($generated@@257 $generated@@258) $generated@@258)
 :pattern ( ($generated@@257 $generated@@258))
)))
(assert (forall (($generated@@260 T@U) ) (! (let (($generated@@261 (type $generated@@260)))
(= (type ($generated@@259 $generated@@260)) $generated@@261))
 :pattern ( ($generated@@259 $generated@@260))
)))
(assert (forall (($generated@@262 T@U) ) (! (= ($generated@@259 $generated@@262) $generated@@262)
 :pattern ( ($generated@@259 $generated@@262))
)))
(assert (forall (($generated@@265 T@U) ($generated@@266 T@U) ($generated@@267 T@U) ($generated@@268 T@U) ($generated@@269 T@U) ) (!  (=> (and (and (and (and (and (= (type $generated@@265) $generated@@67) (= (type $generated@@266) $generated@@67)) (= (type $generated@@267) $generated@@136)) (= (type $generated@@268) $generated@@136)) (= (type $generated@@269) ($generated@@79 $generated@@80 $generated@@81))) ($generated@@263 $generated@@269)) (= ($generated@@77 ($generated@@237 $generated@@267 $generated@@268) ($generated@@156 $generated@@265 $generated@@266) $generated@@269)  (and ($generated@@264 $generated@@267 $generated@@265 $generated@@269) ($generated@@264 $generated@@268 $generated@@266 $generated@@269))))
 :pattern ( ($generated@@77 ($generated@@237 $generated@@267 $generated@@268) ($generated@@156 $generated@@265 $generated@@266) $generated@@269))
)))
(assert (forall (($generated@@271 T@U) ) (! (= (type ($generated@@270 $generated@@271)) $generated@@71)
 :pattern ( ($generated@@270 $generated@@271))
)))
(assert (forall (($generated@@272 T@U) ) (!  (=> (= (type $generated@@272) $generated@@157) (= ($generated@@155 $generated@@272) (= ($generated@@270 $generated@@272) $generated@@61)))
 :pattern ( ($generated@@155 $generated@@272))
)))
(assert  (and (and (= ($generated@@1 $generated@@275) 17) (forall (($generated@@277 T@U) ) (! (= (type ($generated@@274 $generated@@277)) $generated@@275)
 :pattern ( ($generated@@274 $generated@@277))
))) (= (type $generated@@276) $generated@@275)))
(assert (forall (($generated@@278 T@U) ($generated@@279 T@U) ($generated@@280 T@U) ($generated@@281 Int) ) (!  (=> (and (and (= (type $generated@@278) $generated@@275) (= (type $generated@@279) $generated@@80)) (= (type $generated@@280) $generated@@136)) (= ($generated@@273 $generated@@278 $generated@@279 $generated@@280 $generated@@281) ($generated@@273 $generated@@276 $generated@@279 $generated@@280 $generated@@281)))
 :pattern ( ($generated@@273 ($generated@@274 $generated@@278) $generated@@279 $generated@@280 $generated@@281))
)))
(assert  (=> (<= 1 $generated@@282) (forall (($generated@@284 T@U) ($generated@@285 T@U) ($generated@@286 Int) ($generated@@287 T@U) ($generated@@288 T@U) ($generated@@289 T@U) ) (!  (=> (and (and (and (and (and (and (= (type $generated@@284) $generated@@275) (= (type $generated@@285) $generated@@80)) (= (type $generated@@287) $generated@@136)) (= (type $generated@@288) $generated@@136)) (= (type $generated@@289) $generated@@136)) ($generated@@135 $generated@@287 $generated@@288)) ($generated@@273 $generated@@284 $generated@@285 $generated@@287 $generated@@286)) ($generated@@273 $generated@@284 $generated@@285 $generated@@288 $generated@@286))
 :pattern ( ($generated@@273 $generated@@284 $generated@@285 $generated@@287 $generated@@286) ($generated@@283 $generated@@287 $generated@@289) ($generated@@283 $generated@@288 $generated@@289))
))))
(assert (forall (($generated@@290 T@U) ) (!  (=> (and (= (type $generated@@290) $generated@@157) ($generated@@155 $generated@@290)) (exists (($generated@@291 T@U) ($generated@@292 T@U) ) (!  (and (and (= (type $generated@@291) $generated@@136) (= (type $generated@@292) $generated@@136)) (= $generated@@290 ($generated@@237 $generated@@291 $generated@@292)))
 :no-pattern (type $generated@@291)
 :no-pattern (type $generated@@292)
 :no-pattern ($generated $generated@@291)
 :no-pattern ($generated@@0 $generated@@291)
 :no-pattern ($generated $generated@@292)
 :no-pattern ($generated@@0 $generated@@292)
)))
 :pattern ( ($generated@@155 $generated@@290))
)))
(assert  (and (and (forall (($generated@@297 T@T) ) (= ($generated@@1 ($generated@@295 $generated@@297)) 18)) (forall (($generated@@298 T@T) ) (! (= ($generated@@296 ($generated@@295 $generated@@298)) $generated@@298)
 :pattern ( ($generated@@295 $generated@@298))
))) (forall (($generated@@299 T@T) ) (! (= (type ($generated@@293 $generated@@299)) ($generated@@295 $generated@@299))
 :pattern ( ($generated@@293 $generated@@299))
))))
(assert (forall (($generated@@300 T@T) ) (! (= ($generated@@294 ($generated@@293 $generated@@300)) 0)
 :pattern ( ($generated@@293 $generated@@300))
)))
(assert (forall (($generated@@302 T@U) ) (! (= (type ($generated@@301 $generated@@302)) $generated@@136)
 :pattern ( ($generated@@301 $generated@@302))
)))
(assert (forall (($generated@@303 T@U) ($generated@@304 T@U) ($generated@@305 T@U) ) (!  (=> (and (= (type $generated@@304) $generated@@67) (= (type $generated@@305) ($generated@@79 $generated@@80 $generated@@81))) (= ($generated@@264 ($generated@@301 $generated@@303) $generated@@304 $generated@@305) ($generated@@77 $generated@@303 $generated@@304 $generated@@305)))
 :pattern ( ($generated@@264 ($generated@@301 $generated@@303) $generated@@304 $generated@@305))
)))
(assert  (=> (<= 1 $generated@@282) (forall (($generated@@306 T@U) ($generated@@307 T@U) ($generated@@308 Int) ($generated@@309 T@U) ) (!  (=> (and (and (and (= (type $generated@@306) $generated@@275) (= (type $generated@@307) $generated@@80)) (= (type $generated@@309) $generated@@136)) (and (and (not (= $generated@@307 $generated@@141)) ($generated@@144 $generated@@307 $generated@@234)) (= $generated@@309 ($generated@@147 0)))) (not ($generated@@273 $generated@@306 $generated@@307 $generated@@309 $generated@@308)))
 :pattern ( ($generated@@273 $generated@@306 $generated@@307 $generated@@309 $generated@@308))
))))
(assert (forall (($generated@@312 T@T) ) (! (= (type ($generated@@311 $generated@@312)) ($generated@@79 $generated@@312 $generated@@2))
 :pattern ( ($generated@@311 $generated@@312))
)))
(assert (forall (($generated@@313 T@U) ) (! (let (($generated@@314 ($generated@@82 (type $generated@@313))))
 (=> (= (type $generated@@313) ($generated@@79 $generated@@314 $generated@@2)) (and (= (= ($generated@@310 $generated@@313) 0) (= $generated@@313 ($generated@@311 $generated@@314))) (=> (not (= ($generated@@310 $generated@@313) 0)) (exists (($generated@@315 T@U) ) (!  (and (= (type $generated@@315) $generated@@314) (< 0 ($generated ($generated@@84 $generated@@313 $generated@@315))))
 :no-pattern (type $generated@@315)
 :no-pattern ($generated $generated@@315)
 :no-pattern ($generated@@0 $generated@@315)
))))))
 :pattern ( ($generated@@310 $generated@@313))
)))
(assert  (and (and (and (and (forall (($generated@@321 T@T) ($generated@@322 T@T) ) (= ($generated@@1 ($generated@@318 $generated@@321 $generated@@322)) 19)) (forall (($generated@@323 T@T) ($generated@@324 T@T) ) (! (= ($generated@@319 ($generated@@318 $generated@@323 $generated@@324)) $generated@@323)
 :pattern ( ($generated@@318 $generated@@323 $generated@@324))
))) (forall (($generated@@325 T@T) ($generated@@326 T@T) ) (! (= ($generated@@320 ($generated@@318 $generated@@325 $generated@@326)) $generated@@326)
 :pattern ( ($generated@@318 $generated@@325 $generated@@326))
))) (forall (($generated@@327 T@U) ) (! (let (($generated@@328 ($generated@@319 (type $generated@@327))))
(= (type ($generated@@316 $generated@@327)) ($generated@@79 $generated@@328 $generated@@4)))
 :pattern ( ($generated@@316 $generated@@327))
))) (forall (($generated@@329 T@T) ($generated@@330 T@T) ) (! (= (type ($generated@@317 $generated@@329 $generated@@330)) ($generated@@318 $generated@@329 $generated@@330))
 :pattern ( ($generated@@317 $generated@@329 $generated@@330))
))))
(assert (forall (($generated@@331 T@U) ($generated@@332 T@T) ) (! (let (($generated@@333 (type $generated@@331)))
 (not ($generated@@0 ($generated@@84 ($generated@@316 ($generated@@317 $generated@@333 $generated@@332)) $generated@@331))))
 :pattern ( (let (($generated@@333 (type $generated@@331)))
($generated@@84 ($generated@@316 ($generated@@317 $generated@@333 $generated@@332)) $generated@@331)))
)))
(assert  (and (and (and (and (forall (($generated@@339 T@T) ($generated@@340 T@T) ) (= ($generated@@1 ($generated@@336 $generated@@339 $generated@@340)) 20)) (forall (($generated@@341 T@T) ($generated@@342 T@T) ) (! (= ($generated@@337 ($generated@@336 $generated@@341 $generated@@342)) $generated@@341)
 :pattern ( ($generated@@336 $generated@@341 $generated@@342))
))) (forall (($generated@@343 T@T) ($generated@@344 T@T) ) (! (= ($generated@@338 ($generated@@336 $generated@@343 $generated@@344)) $generated@@344)
 :pattern ( ($generated@@336 $generated@@343 $generated@@344))
))) (forall (($generated@@345 T@U) ) (! (let (($generated@@346 ($generated@@337 (type $generated@@345))))
(= (type ($generated@@334 $generated@@345)) ($generated@@79 $generated@@346 $generated@@4)))
 :pattern ( ($generated@@334 $generated@@345))
))) (forall (($generated@@347 T@T) ($generated@@348 T@T) ) (! (= (type ($generated@@335 $generated@@347 $generated@@348)) ($generated@@336 $generated@@347 $generated@@348))
 :pattern ( ($generated@@335 $generated@@347 $generated@@348))
))))
(assert (forall (($generated@@349 T@U) ($generated@@350 T@T) ) (! (let (($generated@@351 (type $generated@@349)))
 (not ($generated@@0 ($generated@@84 ($generated@@334 ($generated@@335 $generated@@351 $generated@@350)) $generated@@349))))
 :pattern ( (let (($generated@@351 (type $generated@@349)))
($generated@@84 ($generated@@334 ($generated@@335 $generated@@351 $generated@@350)) $generated@@349)))
)))
(assert (forall (($generated@@353 T@U) ($generated@@354 T@U) ) (!  (=> (and (and (= (type $generated@@353) $generated@@136) (= (type $generated@@354) $generated@@136)) (and ($generated@@352 $generated@@354) (<= ($generated@@148 $generated@@354) ($generated@@148 $generated@@353)))) (and (= ($generated@@352 ($generated@@146 $generated@@353 $generated@@354)) ($generated@@352 $generated@@353)) (= ($generated@@148 ($generated@@146 $generated@@353 $generated@@354)) (- ($generated@@148 $generated@@353) ($generated@@148 $generated@@354)))))
 :pattern ( ($generated@@146 $generated@@353 $generated@@354))
)))
(assert (forall (($generated@@355 Int) ) (!  (=> (<= 0 $generated@@355) (and ($generated@@352 ($generated@@147 $generated@@355)) (= ($generated@@148 ($generated@@147 $generated@@355)) $generated@@355)))
 :pattern ( ($generated@@147 $generated@@355))
)))
(assert (forall (($generated@@356 T@U) ) (! (let (($generated@@357 ($generated@@82 (type $generated@@356))))
 (=> (= (type $generated@@356) ($generated@@79 $generated@@357 $generated@@2)) (= ($generated@@171 $generated@@356) (forall (($generated@@358 T@U) ) (!  (=> (= (type $generated@@358) $generated@@357) (and (<= 0 ($generated ($generated@@84 $generated@@356 $generated@@358))) (<= ($generated ($generated@@84 $generated@@356 $generated@@358)) ($generated@@310 $generated@@356))))
 :pattern ( ($generated@@84 $generated@@356 $generated@@358))
)))))
 :pattern ( ($generated@@171 $generated@@356))
)))
(assert (forall (($generated@@360 T@T) ($generated@@361 T@U) ) (! (= (type ($generated@@359 $generated@@360 $generated@@361)) $generated@@360)
 :pattern ( ($generated@@359 $generated@@360 $generated@@361))
)))
(assert (forall (($generated@@362 T@U) ) (!  (=> (and (= (type $generated@@362) $generated@@136) ($generated@@238 $generated@@362 $generated@@140)) (and (= ($generated@@301 ($generated@@359 $generated@@80 $generated@@362)) $generated@@362) ($generated@@144 ($generated@@359 $generated@@80 $generated@@362) $generated@@140)))
 :pattern ( ($generated@@238 $generated@@362 $generated@@140))
)))
(assert (forall (($generated@@363 T@U) ) (!  (=> (and (= (type $generated@@363) $generated@@136) ($generated@@238 $generated@@363 $generated@@234)) (and (= ($generated@@301 ($generated@@359 $generated@@80 $generated@@363)) $generated@@363) ($generated@@144 ($generated@@359 $generated@@80 $generated@@363) $generated@@234)))
 :pattern ( ($generated@@238 $generated@@363 $generated@@234))
)))
(assert (forall (($generated@@364 T@U) ) (!  (=> (= (type $generated@@364) $generated@@80) (= ($generated@@144 $generated@@364 $generated@@234)  (and ($generated@@144 $generated@@364 $generated@@140) (not (= $generated@@364 $generated@@141)))))
 :pattern ( ($generated@@144 $generated@@364 $generated@@234))
)))
(assert (forall (($generated@@365 T@U) ) (! (let (($generated@@366 ($generated@@320 (type $generated@@365))))
(let (($generated@@367 ($generated@@319 (type $generated@@365))))
 (=> (= (type $generated@@365) ($generated@@318 $generated@@367 $generated@@366)) (or (= $generated@@365 ($generated@@317 $generated@@367 $generated@@366)) (exists (($generated@@368 T@U) ) (!  (and (= (type $generated@@368) $generated@@367) ($generated@@0 ($generated@@84 ($generated@@316 $generated@@365) $generated@@368)))
 :no-pattern (type $generated@@368)
 :no-pattern ($generated $generated@@368)
 :no-pattern ($generated@@0 $generated@@368)
))))))
 :pattern ( ($generated@@316 $generated@@365))
)))
(assert (forall (($generated@@370 T@U) ) (! (let (($generated@@371 ($generated@@320 (type $generated@@370))))
(= (type ($generated@@369 $generated@@370)) ($generated@@79 $generated@@371 $generated@@4)))
 :pattern ( ($generated@@369 $generated@@370))
)))
(assert (forall (($generated@@372 T@U) ) (! (let (($generated@@373 ($generated@@320 (type $generated@@372))))
(let (($generated@@374 ($generated@@319 (type $generated@@372))))
 (=> (= (type $generated@@372) ($generated@@318 $generated@@374 $generated@@373)) (or (= $generated@@372 ($generated@@317 $generated@@374 $generated@@373)) (exists (($generated@@375 T@U) ) (!  (and (= (type $generated@@375) $generated@@373) ($generated@@0 ($generated@@84 ($generated@@369 $generated@@372) $generated@@375)))
 :no-pattern (type $generated@@375)
 :no-pattern ($generated $generated@@375)
 :no-pattern ($generated@@0 $generated@@375)
))))))
 :pattern ( ($generated@@369 $generated@@372))
)))
(assert (forall (($generated@@376 T@U) ) (! (let (($generated@@377 ($generated@@338 (type $generated@@376))))
(let (($generated@@378 ($generated@@337 (type $generated@@376))))
 (=> (= (type $generated@@376) ($generated@@336 $generated@@378 $generated@@377)) (or (= $generated@@376 ($generated@@335 $generated@@378 $generated@@377)) (exists (($generated@@379 T@U) ) (!  (and (= (type $generated@@379) $generated@@378) ($generated@@0 ($generated@@84 ($generated@@334 $generated@@376) $generated@@379)))
 :no-pattern (type $generated@@379)
 :no-pattern ($generated $generated@@379)
 :no-pattern ($generated@@0 $generated@@379)
))))))
 :pattern ( ($generated@@334 $generated@@376))
)))
(assert (forall (($generated@@381 T@U) ) (! (let (($generated@@382 ($generated@@338 (type $generated@@381))))
(= (type ($generated@@380 $generated@@381)) ($generated@@79 $generated@@382 $generated@@4)))
 :pattern ( ($generated@@380 $generated@@381))
)))
(assert (forall (($generated@@383 T@U) ) (! (let (($generated@@384 ($generated@@338 (type $generated@@383))))
(let (($generated@@385 ($generated@@337 (type $generated@@383))))
 (=> (= (type $generated@@383) ($generated@@336 $generated@@385 $generated@@384)) (or (= $generated@@383 ($generated@@335 $generated@@385 $generated@@384)) (exists (($generated@@386 T@U) ) (!  (and (= (type $generated@@386) $generated@@384) ($generated@@0 ($generated@@84 ($generated@@380 $generated@@383) $generated@@386)))
 :no-pattern (type $generated@@386)
 :no-pattern ($generated $generated@@386)
 :no-pattern ($generated@@0 $generated@@386)
))))))
 :pattern ( ($generated@@380 $generated@@383))
)))
(assert (forall (($generated@@387 T@U) ($generated@@388 T@U) ) (!  (=> (and (= (type $generated@@387) ($generated@@79 $generated@@136 $generated@@2)) (= (type $generated@@388) $generated@@67)) (= ($generated@@144 $generated@@387 ($generated@@170 $generated@@388)) (forall (($generated@@389 T@U) ) (!  (=> (and (= (type $generated@@389) $generated@@136) (< 0 ($generated ($generated@@84 $generated@@387 $generated@@389)))) ($generated@@238 $generated@@389 $generated@@388))
 :pattern ( ($generated@@84 $generated@@387 $generated@@389))
))))
 :pattern ( ($generated@@144 $generated@@387 ($generated@@170 $generated@@388)))
)))
(assert (forall (($generated@@390 T@U) ($generated@@391 T@U) ) (!  (=> (and (= (type $generated@@390) $generated@@136) (= (type $generated@@391) $generated@@136)) (or (or ($generated@@135 $generated@@390 $generated@@391) (= $generated@@390 $generated@@391)) ($generated@@135 $generated@@391 $generated@@390)))
 :pattern ( ($generated@@135 $generated@@390 $generated@@391) ($generated@@135 $generated@@391 $generated@@390))
)))
(assert (forall (($generated@@392 T@U) ($generated@@393 T@U) ($generated@@394 T@U) ) (!  (=> (and (and (= (type $generated@@392) ($generated@@79 $generated@@136 $generated@@4)) (= (type $generated@@393) $generated@@67)) (= (type $generated@@394) ($generated@@79 $generated@@80 $generated@@81))) (= ($generated@@77 $generated@@392 ($generated@@247 $generated@@393) $generated@@394) (forall (($generated@@395 T@U) ) (!  (=> (and (= (type $generated@@395) $generated@@136) ($generated@@0 ($generated@@84 $generated@@392 $generated@@395))) ($generated@@264 $generated@@395 $generated@@393 $generated@@394))
 :pattern ( ($generated@@84 $generated@@392 $generated@@395))
))))
 :pattern ( ($generated@@77 $generated@@392 ($generated@@247 $generated@@393) $generated@@394))
)))
(assert (forall (($generated@@396 T@U) ($generated@@397 T@U) ($generated@@398 T@U) ) (!  (=> (and (and (= (type $generated@@396) ($generated@@79 $generated@@136 $generated@@4)) (= (type $generated@@397) $generated@@67)) (= (type $generated@@398) ($generated@@79 $generated@@80 $generated@@81))) (= ($generated@@77 $generated@@396 ($generated@@252 $generated@@397) $generated@@398) (forall (($generated@@399 T@U) ) (!  (=> (and (= (type $generated@@399) $generated@@136) ($generated@@0 ($generated@@84 $generated@@396 $generated@@399))) ($generated@@264 $generated@@399 $generated@@397 $generated@@398))
 :pattern ( ($generated@@84 $generated@@396 $generated@@399))
))))
 :pattern ( ($generated@@77 $generated@@396 ($generated@@252 $generated@@397) $generated@@398))
)))
(assert (forall (($generated@@400 T@U) ) (! (let (($generated@@401 (type $generated@@400)))
(= ($generated ($generated@@84 ($generated@@311 $generated@@401) $generated@@400)) 0))
 :pattern ( (let (($generated@@401 (type $generated@@400)))
($generated@@84 ($generated@@311 $generated@@401) $generated@@400)))
)))
(assert  (and (forall (($generated@@404 T@U) ) (! (= (type ($generated@@402 $generated@@404)) ($generated@@79 $generated@@136 $generated@@4))
 :pattern ( ($generated@@402 $generated@@404))
)) (forall (($generated@@405 T@U) ) (! (let (($generated@@406 ($generated@@320 (type $generated@@405))))
(let (($generated@@407 ($generated@@319 (type $generated@@405))))
(= (type ($generated@@403 $generated@@405)) ($generated@@79 $generated@@407 $generated@@406))))
 :pattern ( ($generated@@403 $generated@@405))
))))
(assert (forall (($generated@@408 T@U) ($generated@@409 T@U) ) (!  (=> (and (= (type $generated@@408) ($generated@@318 $generated@@136 $generated@@136)) (= (type $generated@@409) $generated@@136)) (= ($generated@@0 ($generated@@84 ($generated@@402 $generated@@408) $generated@@409))  (and ($generated@@0 ($generated@@84 ($generated@@316 $generated@@408) ($generated@@164 ($generated@@359 $generated@@157 $generated@@409)))) (= ($generated@@84 ($generated@@403 $generated@@408) ($generated@@164 ($generated@@359 $generated@@157 $generated@@409))) ($generated@@165 ($generated@@359 $generated@@157 $generated@@409))))))
 :pattern ( ($generated@@84 ($generated@@402 $generated@@408) $generated@@409))
)))
(assert  (and (forall (($generated@@412 T@U) ) (! (= (type ($generated@@410 $generated@@412)) ($generated@@79 $generated@@136 $generated@@4))
 :pattern ( ($generated@@410 $generated@@412))
)) (forall (($generated@@413 T@U) ) (! (let (($generated@@414 ($generated@@338 (type $generated@@413))))
(let (($generated@@415 ($generated@@337 (type $generated@@413))))
(= (type ($generated@@411 $generated@@413)) ($generated@@79 $generated@@415 $generated@@414))))
 :pattern ( ($generated@@411 $generated@@413))
))))
(assert (forall (($generated@@416 T@U) ($generated@@417 T@U) ) (!  (=> (and (= (type $generated@@416) ($generated@@336 $generated@@136 $generated@@136)) (= (type $generated@@417) $generated@@136)) (= ($generated@@0 ($generated@@84 ($generated@@410 $generated@@416) $generated@@417))  (and ($generated@@0 ($generated@@84 ($generated@@334 $generated@@416) ($generated@@164 ($generated@@359 $generated@@157 $generated@@417)))) (= ($generated@@84 ($generated@@411 $generated@@416) ($generated@@164 ($generated@@359 $generated@@157 $generated@@417))) ($generated@@165 ($generated@@359 $generated@@157 $generated@@417))))))
 :pattern ( ($generated@@84 ($generated@@410 $generated@@416) $generated@@417))
)))
(assert (forall (($generated@@418 T@U) ($generated@@419 T@U) ) (! (let (($generated@@420 (type $generated@@419)))
(let (($generated@@421 ($generated@@319 (type $generated@@418))))
 (=> (= (type $generated@@418) ($generated@@318 $generated@@421 $generated@@420)) (= ($generated@@0 ($generated@@84 ($generated@@369 $generated@@418) $generated@@419)) (exists (($generated@@422 T@U) ) (!  (and (= (type $generated@@422) $generated@@421) (and ($generated@@0 ($generated@@84 ($generated@@316 $generated@@418) $generated@@422)) (= $generated@@419 ($generated@@84 ($generated@@403 $generated@@418) $generated@@422))))
 :pattern ( ($generated@@84 ($generated@@316 $generated@@418) $generated@@422))
 :pattern ( ($generated@@84 ($generated@@403 $generated@@418) $generated@@422))
))))))
 :pattern ( ($generated@@84 ($generated@@369 $generated@@418) $generated@@419))
)))
(assert (forall (($generated@@423 T@U) ($generated@@424 T@U) ) (! (let (($generated@@425 (type $generated@@424)))
(let (($generated@@426 ($generated@@337 (type $generated@@423))))
 (=> (= (type $generated@@423) ($generated@@336 $generated@@426 $generated@@425)) (= ($generated@@0 ($generated@@84 ($generated@@380 $generated@@423) $generated@@424)) (exists (($generated@@427 T@U) ) (!  (and (= (type $generated@@427) $generated@@426) (and ($generated@@0 ($generated@@84 ($generated@@334 $generated@@423) $generated@@427)) (= $generated@@424 ($generated@@84 ($generated@@411 $generated@@423) $generated@@427))))
 :pattern ( ($generated@@84 ($generated@@334 $generated@@423) $generated@@427))
 :pattern ( ($generated@@84 ($generated@@411 $generated@@423) $generated@@427))
))))))
 :pattern ( ($generated@@84 ($generated@@380 $generated@@423) $generated@@424))
)))
(assert (forall (($generated@@429 T@U) ($generated@@430 T@U) ) (! (= (type ($generated@@428 $generated@@429 $generated@@430)) $generated@@67)
 :pattern ( ($generated@@428 $generated@@429 $generated@@430))
)))
(assert (forall (($generated@@431 T@U) ($generated@@432 T@U) ($generated@@433 T@U) ($generated@@434 T@U) ) (!  (=> (and (and (and (= (type $generated@@431) ($generated@@318 $generated@@136 $generated@@136)) (= (type $generated@@432) $generated@@67)) (= (type $generated@@433) $generated@@67)) (= (type $generated@@434) ($generated@@79 $generated@@80 $generated@@81))) (= ($generated@@77 $generated@@431 ($generated@@428 $generated@@432 $generated@@433) $generated@@434) (forall (($generated@@435 T@U) ) (!  (=> (and (= (type $generated@@435) $generated@@136) ($generated@@0 ($generated@@84 ($generated@@316 $generated@@431) $generated@@435))) (and ($generated@@264 ($generated@@84 ($generated@@403 $generated@@431) $generated@@435) $generated@@433 $generated@@434) ($generated@@264 $generated@@435 $generated@@432 $generated@@434)))
 :pattern ( ($generated@@84 ($generated@@403 $generated@@431) $generated@@435))
 :pattern ( ($generated@@84 ($generated@@316 $generated@@431) $generated@@435))
))))
 :pattern ( ($generated@@77 $generated@@431 ($generated@@428 $generated@@432 $generated@@433) $generated@@434))
)))
(assert (forall (($generated@@437 T@U) ($generated@@438 T@U) ) (! (= (type ($generated@@436 $generated@@437 $generated@@438)) $generated@@67)
 :pattern ( ($generated@@436 $generated@@437 $generated@@438))
)))
(assert (forall (($generated@@439 T@U) ($generated@@440 T@U) ($generated@@441 T@U) ($generated@@442 T@U) ) (!  (=> (and (and (and (= (type $generated@@439) ($generated@@336 $generated@@136 $generated@@136)) (= (type $generated@@440) $generated@@67)) (= (type $generated@@441) $generated@@67)) (= (type $generated@@442) ($generated@@79 $generated@@80 $generated@@81))) (= ($generated@@77 $generated@@439 ($generated@@436 $generated@@440 $generated@@441) $generated@@442) (forall (($generated@@443 T@U) ) (!  (=> (and (= (type $generated@@443) $generated@@136) ($generated@@0 ($generated@@84 ($generated@@334 $generated@@439) $generated@@443))) (and ($generated@@264 ($generated@@84 ($generated@@411 $generated@@439) $generated@@443) $generated@@441 $generated@@442) ($generated@@264 $generated@@443 $generated@@440 $generated@@442)))
 :pattern ( ($generated@@84 ($generated@@411 $generated@@439) $generated@@443))
 :pattern ( ($generated@@84 ($generated@@334 $generated@@439) $generated@@443))
))))
 :pattern ( ($generated@@77 $generated@@439 ($generated@@436 $generated@@440 $generated@@441) $generated@@442))
)))
(assert (forall (($generated@@444 T@U) ($generated@@445 T@U) ) (!  (=> (and (= (type $generated@@444) $generated@@136) (= (type $generated@@445) $generated@@136)) (= ($generated@@283 $generated@@444 $generated@@445) ($generated@@135 $generated@@444 $generated@@445)))
 :pattern ( ($generated@@283 $generated@@444 $generated@@445))
)))
(assert (forall (($generated@@447 T@T) ) (! (= (type ($generated@@446 $generated@@447)) ($generated@@79 $generated@@447 $generated@@4))
 :pattern ( ($generated@@446 $generated@@447))
)))
(assert (forall (($generated@@448 T@U) ) (! (let (($generated@@449 ($generated@@338 (type $generated@@448))))
(let (($generated@@450 ($generated@@337 (type $generated@@448))))
 (=> (= (type $generated@@448) ($generated@@336 $generated@@450 $generated@@449)) (= (= $generated@@448 ($generated@@335 $generated@@450 $generated@@449)) (= ($generated@@334 $generated@@448) ($generated@@446 $generated@@450))))))
 :pattern ( ($generated@@334 $generated@@448))
)))
(assert (forall (($generated@@451 T@U) ) (! (let (($generated@@452 ($generated@@338 (type $generated@@451))))
(let (($generated@@453 ($generated@@337 (type $generated@@451))))
 (=> (= (type $generated@@451) ($generated@@336 $generated@@453 $generated@@452)) (= (= $generated@@451 ($generated@@335 $generated@@453 $generated@@452)) (= ($generated@@380 $generated@@451) ($generated@@446 $generated@@452))))))
 :pattern ( ($generated@@380 $generated@@451))
)))
(assert (forall (($generated@@454 T@U) ) (! (let (($generated@@455 ($generated@@338 (type $generated@@454))))
(let (($generated@@456 ($generated@@337 (type $generated@@454))))
 (=> (= (type $generated@@454) ($generated@@336 $generated@@456 $generated@@455)) (= (= $generated@@454 ($generated@@335 $generated@@456 $generated@@455)) (= ($generated@@410 $generated@@454) ($generated@@446 $generated@@136))))))
 :pattern ( ($generated@@410 $generated@@454))
)))
(assert (forall (($generated@@457 T@U) ) (! (let (($generated@@458 ($generated@@320 (type $generated@@457))))
(let (($generated@@459 ($generated@@319 (type $generated@@457))))
 (=> (= (type $generated@@457) ($generated@@318 $generated@@459 $generated@@458)) (or (= $generated@@457 ($generated@@317 $generated@@459 $generated@@458)) (exists (($generated@@460 T@U) ($generated@@461 T@U) ) (!  (and (and (= (type $generated@@460) $generated@@136) (= (type $generated@@461) $generated@@136)) ($generated@@0 ($generated@@84 ($generated@@402 $generated@@457) ($generated@@301 ($generated@@237 $generated@@460 $generated@@461)))))
 :no-pattern (type $generated@@460)
 :no-pattern (type $generated@@461)
 :no-pattern ($generated $generated@@460)
 :no-pattern ($generated@@0 $generated@@460)
 :no-pattern ($generated $generated@@461)
 :no-pattern ($generated@@0 $generated@@461)
))))))
 :pattern ( ($generated@@402 $generated@@457))
)))
(assert (forall (($generated@@462 T@U) ) (! (let (($generated@@463 ($generated@@338 (type $generated@@462))))
(let (($generated@@464 ($generated@@337 (type $generated@@462))))
 (=> (= (type $generated@@462) ($generated@@336 $generated@@464 $generated@@463)) (or (= $generated@@462 ($generated@@335 $generated@@464 $generated@@463)) (exists (($generated@@465 T@U) ($generated@@466 T@U) ) (!  (and (and (= (type $generated@@465) $generated@@136) (= (type $generated@@466) $generated@@136)) ($generated@@0 ($generated@@84 ($generated@@410 $generated@@462) ($generated@@301 ($generated@@237 $generated@@465 $generated@@466)))))
 :no-pattern (type $generated@@465)
 :no-pattern (type $generated@@466)
 :no-pattern ($generated $generated@@465)
 :no-pattern ($generated@@0 $generated@@465)
 :no-pattern ($generated $generated@@466)
 :no-pattern ($generated@@0 $generated@@466)
))))))
 :pattern ( ($generated@@410 $generated@@462))
)))
(assert (forall (($generated@@467 T@U) ) (!  (=> (and (= (type $generated@@467) $generated@@136) ($generated@@238 $generated@@467 $generated@@46)) (and (= ($generated@@301 ($generated@@359 $generated@@2 $generated@@467)) $generated@@467) ($generated@@144 ($generated@@359 $generated@@2 $generated@@467) $generated@@46)))
 :pattern ( ($generated@@238 $generated@@467 $generated@@46))
)))
(assert (forall (($generated@@468 T@U) ) (!  (=> (and (= (type $generated@@468) $generated@@136) ($generated@@238 $generated@@468 $generated@@47)) (and (= ($generated@@301 ($generated@@359 $generated@@3 $generated@@468)) $generated@@468) ($generated@@144 ($generated@@359 $generated@@3 $generated@@468) $generated@@47)))
 :pattern ( ($generated@@238 $generated@@468 $generated@@47))
)))
(assert (forall (($generated@@469 T@U) ) (!  (=> (and (= (type $generated@@469) $generated@@136) ($generated@@238 $generated@@469 $generated@@44)) (and (= ($generated@@301 ($generated@@359 $generated@@4 $generated@@469)) $generated@@469) ($generated@@144 ($generated@@359 $generated@@4 $generated@@469) $generated@@44)))
 :pattern ( ($generated@@238 $generated@@469 $generated@@44))
)))
(assert (= ($generated@@1 $generated@@470) 21))
(assert (forall (($generated@@471 T@U) ) (!  (=> (and (= (type $generated@@471) $generated@@136) ($generated@@238 $generated@@471 $generated@@45)) (and (= ($generated@@301 ($generated@@359 $generated@@470 $generated@@471)) $generated@@471) ($generated@@144 ($generated@@359 $generated@@470 $generated@@471) $generated@@45)))
 :pattern ( ($generated@@238 $generated@@471 $generated@@45))
)))
(assert (forall (($generated@@472 T@U) ($generated@@473 T@U) ) (!  (=> (= (type $generated@@473) $generated@@67) (= ($generated@@238 ($generated@@301 $generated@@472) $generated@@473) ($generated@@144 $generated@@472 $generated@@473)))
 :pattern ( ($generated@@238 ($generated@@301 $generated@@472) $generated@@473))
)))
(assert (forall (($generated@@475 T@U) ) (! (= (type ($generated@@474 $generated@@475)) $generated@@275)
 :pattern ( ($generated@@474 $generated@@475))
)))
(assert (forall (($generated@@476 T@U) ($generated@@477 T@U) ($generated@@478 T@U) ($generated@@479 Int) ) (!  (=> (and (and (= (type $generated@@476) $generated@@275) (= (type $generated@@477) $generated@@80)) (= (type $generated@@478) $generated@@136)) (= ($generated@@273 ($generated@@474 $generated@@476) $generated@@477 $generated@@478 $generated@@479) ($generated@@273 $generated@@476 $generated@@477 $generated@@478 $generated@@479)))
 :pattern ( ($generated@@273 ($generated@@474 $generated@@476) $generated@@477 $generated@@478 $generated@@479))
)))
(assert (forall (($generated@@480 T@U) ) (!  (=> (= (type $generated@@480) $generated@@136) (<= 0 ($generated@@148 $generated@@480)))
 :pattern ( ($generated@@148 $generated@@480))
)))
(assert (forall (($generated@@481 T@U) ) (! (let (($generated@@482 ($generated@@82 (type $generated@@481))))
 (=> (= (type $generated@@481) ($generated@@79 $generated@@482 $generated@@2)) (<= 0 ($generated@@310 $generated@@481))))
 :pattern ( ($generated@@310 $generated@@481))
)))
(assert (forall (($generated@@483 T@U) ) (! (let (($generated@@484 ($generated@@296 (type $generated@@483))))
 (=> (= (type $generated@@483) ($generated@@295 $generated@@484)) (<= 0 ($generated@@294 $generated@@483))))
 :pattern ( ($generated@@294 $generated@@483))
)))
(assert  (=> (<= 1 $generated@@282) (forall (($generated@@486 T@U) ($generated@@487 T@U) ($generated@@488 T@U) ($generated@@489 Int) ) (!  (=> (and (and (and (= (type $generated@@486) $generated@@275) (= (type $generated@@487) $generated@@80)) (= (type $generated@@488) $generated@@136)) (or ($generated@@485 $generated@@487 $generated@@488 $generated@@489) (and (not (= 1 $generated@@282)) (and (not (= $generated@@487 $generated@@141)) ($generated@@144 $generated@@487 $generated@@234))))) true)
 :pattern ( ($generated@@273 $generated@@486 $generated@@487 $generated@@488 $generated@@489))
))))
(assert (forall (($generated@@491 T@U) ) (! (= (type ($generated@@490 $generated@@491)) $generated@@67)
 :pattern ( ($generated@@490 $generated@@491))
)))
(assert (forall (($generated@@492 T@U) ($generated@@493 T@U) ) (!  (=> (and (= (type $generated@@492) $generated@@67) (= (type $generated@@493) $generated@@67)) (= ($generated@@490 ($generated@@428 $generated@@492 $generated@@493)) $generated@@492))
 :pattern ( ($generated@@428 $generated@@492 $generated@@493))
)))
(assert (forall (($generated@@495 T@U) ) (! (= (type ($generated@@494 $generated@@495)) $generated@@67)
 :pattern ( ($generated@@494 $generated@@495))
)))
(assert (forall (($generated@@496 T@U) ($generated@@497 T@U) ) (!  (=> (and (= (type $generated@@496) $generated@@67) (= (type $generated@@497) $generated@@67)) (= ($generated@@494 ($generated@@428 $generated@@496 $generated@@497)) $generated@@497))
 :pattern ( ($generated@@428 $generated@@496 $generated@@497))
)))
(assert (forall (($generated@@498 T@U) ($generated@@499 T@U) ) (!  (=> (and (= (type $generated@@498) $generated@@67) (= (type $generated@@499) $generated@@67)) (= ($generated@@75 ($generated@@428 $generated@@498 $generated@@499)) $generated@@58))
 :pattern ( ($generated@@428 $generated@@498 $generated@@499))
)))
(assert (forall (($generated@@501 T@U) ) (! (= (type ($generated@@500 $generated@@501)) $generated@@67)
 :pattern ( ($generated@@500 $generated@@501))
)))
(assert (forall (($generated@@502 T@U) ($generated@@503 T@U) ) (!  (=> (and (= (type $generated@@502) $generated@@67) (= (type $generated@@503) $generated@@67)) (= ($generated@@500 ($generated@@436 $generated@@502 $generated@@503)) $generated@@502))
 :pattern ( ($generated@@436 $generated@@502 $generated@@503))
)))
(assert (forall (($generated@@505 T@U) ) (! (= (type ($generated@@504 $generated@@505)) $generated@@67)
 :pattern ( ($generated@@504 $generated@@505))
)))
(assert (forall (($generated@@506 T@U) ($generated@@507 T@U) ) (!  (=> (and (= (type $generated@@506) $generated@@67) (= (type $generated@@507) $generated@@67)) (= ($generated@@504 ($generated@@436 $generated@@506 $generated@@507)) $generated@@507))
 :pattern ( ($generated@@436 $generated@@506 $generated@@507))
)))
(assert (forall (($generated@@508 T@U) ($generated@@509 T@U) ) (!  (=> (and (= (type $generated@@508) $generated@@67) (= (type $generated@@509) $generated@@67)) (= ($generated@@75 ($generated@@436 $generated@@508 $generated@@509)) $generated@@59))
 :pattern ( ($generated@@436 $generated@@508 $generated@@509))
)))
(assert (forall (($generated@@510 T@U) ($generated@@511 T@U) ) (!  (=> (and (= (type $generated@@510) $generated@@136) (= (type $generated@@511) $generated@@136)) (= ($generated@@270 ($generated@@237 $generated@@510 $generated@@511)) $generated@@61))
 :pattern ( ($generated@@237 $generated@@510 $generated@@511))
)))
(assert (forall (($generated@@513 T@U) ) (! (= (type ($generated@@512 $generated@@513)) $generated@@67)
 :pattern ( ($generated@@512 $generated@@513))
)))
(assert (forall (($generated@@514 T@U) ($generated@@515 T@U) ) (!  (=> (and (= (type $generated@@514) $generated@@67) (= (type $generated@@515) $generated@@67)) (= ($generated@@512 ($generated@@156 $generated@@514 $generated@@515)) $generated@@514))
 :pattern ( ($generated@@156 $generated@@514 $generated@@515))
)))
(assert (forall (($generated@@517 T@U) ) (! (= (type ($generated@@516 $generated@@517)) $generated@@67)
 :pattern ( ($generated@@516 $generated@@517))
)))
(assert (forall (($generated@@518 T@U) ($generated@@519 T@U) ) (!  (=> (and (= (type $generated@@518) $generated@@67) (= (type $generated@@519) $generated@@67)) (= ($generated@@516 ($generated@@156 $generated@@518 $generated@@519)) $generated@@519))
 :pattern ( ($generated@@156 $generated@@518 $generated@@519))
)))
(assert (forall (($generated@@520 T@U) ($generated@@521 T@U) ) (!  (=> (and (= (type $generated@@520) $generated@@136) (= (type $generated@@521) $generated@@136)) (= ($generated@@164 ($generated@@237 $generated@@520 $generated@@521)) $generated@@520))
 :pattern ( ($generated@@237 $generated@@520 $generated@@521))
)))
(assert (forall (($generated@@522 T@U) ($generated@@523 T@U) ) (!  (=> (and (= (type $generated@@522) $generated@@136) (= (type $generated@@523) $generated@@136)) (= ($generated@@165 ($generated@@237 $generated@@522 $generated@@523)) $generated@@523))
 :pattern ( ($generated@@237 $generated@@522 $generated@@523))
)))
(assert  (and (forall (($generated@@526 T@U) ) (! (= (type ($generated@@524 $generated@@526)) $generated@@67)
 :pattern ( ($generated@@524 $generated@@526))
)) (forall (($generated@@527 T@U) ($generated@@528 Int) ) (! (let (($generated@@529 ($generated@@296 (type $generated@@527))))
(= (type ($generated@@525 $generated@@527 $generated@@528)) $generated@@529))
 :pattern ( ($generated@@525 $generated@@527 $generated@@528))
))))
(assert (forall (($generated@@530 T@U) ($generated@@531 T@U) ($generated@@532 T@U) ) (!  (=> (and (and (= (type $generated@@530) ($generated@@295 $generated@@136)) (= (type $generated@@531) $generated@@67)) (= (type $generated@@532) ($generated@@79 $generated@@80 $generated@@81))) (= ($generated@@77 $generated@@530 ($generated@@524 $generated@@531) $generated@@532) (forall (($generated@@533 Int) ) (!  (=> (and (<= 0 $generated@@533) (< $generated@@533 ($generated@@294 $generated@@530))) ($generated@@264 ($generated@@525 $generated@@530 $generated@@533) $generated@@531 $generated@@532))
 :pattern ( ($generated@@525 $generated@@530 $generated@@533))
))))
 :pattern ( ($generated@@77 $generated@@530 ($generated@@524 $generated@@531) $generated@@532))
)))
(assert (forall (($generated@@535 Int) ) (! (= ($generated@@534 ($generated@@78 $generated@@535)) $generated@@535)
 :pattern ( ($generated@@78 $generated@@535))
)))
(assert (forall (($generated@@537 T@U) ) (! (= (type ($generated@@536 $generated@@537)) $generated@@67)
 :pattern ( ($generated@@536 $generated@@537))
)))
(assert (forall (($generated@@538 T@U) ) (!  (=> (= (type $generated@@538) $generated@@67) (= ($generated@@536 ($generated@@247 $generated@@538)) $generated@@538))
 :pattern ( ($generated@@247 $generated@@538))
)))
(assert (forall (($generated@@539 T@U) ) (!  (=> (= (type $generated@@539) $generated@@67) (= ($generated@@75 ($generated@@247 $generated@@539)) $generated@@54))
 :pattern ( ($generated@@247 $generated@@539))
)))
(assert (forall (($generated@@541 T@U) ) (! (= (type ($generated@@540 $generated@@541)) $generated@@67)
 :pattern ( ($generated@@540 $generated@@541))
)))
(assert (forall (($generated@@542 T@U) ) (!  (=> (= (type $generated@@542) $generated@@67) (= ($generated@@540 ($generated@@252 $generated@@542)) $generated@@542))
 :pattern ( ($generated@@252 $generated@@542))
)))
(assert (forall (($generated@@543 T@U) ) (!  (=> (= (type $generated@@543) $generated@@67) (= ($generated@@75 ($generated@@252 $generated@@543)) $generated@@55))
 :pattern ( ($generated@@252 $generated@@543))
)))
(assert (forall (($generated@@545 T@U) ) (! (= (type ($generated@@544 $generated@@545)) $generated@@67)
 :pattern ( ($generated@@544 $generated@@545))
)))
(assert (forall (($generated@@546 T@U) ) (!  (=> (= (type $generated@@546) $generated@@67) (= ($generated@@544 ($generated@@170 $generated@@546)) $generated@@546))
 :pattern ( ($generated@@170 $generated@@546))
)))
(assert (forall (($generated@@547 T@U) ) (!  (=> (= (type $generated@@547) $generated@@67) (= ($generated@@75 ($generated@@170 $generated@@547)) $generated@@56))
 :pattern ( ($generated@@170 $generated@@547))
)))
(assert (forall (($generated@@549 T@U) ) (! (= (type ($generated@@548 $generated@@549)) $generated@@67)
 :pattern ( ($generated@@548 $generated@@549))
)))
(assert (forall (($generated@@550 T@U) ) (!  (=> (= (type $generated@@550) $generated@@67) (= ($generated@@548 ($generated@@524 $generated@@550)) $generated@@550))
 :pattern ( ($generated@@524 $generated@@550))
)))
(assert (forall (($generated@@551 T@U) ) (!  (=> (= (type $generated@@551) $generated@@67) (= ($generated@@75 ($generated@@524 $generated@@551)) $generated@@57))
 :pattern ( ($generated@@524 $generated@@551))
)))
(assert (forall (($generated@@552 T@U) ) (! (let (($generated@@553 (type $generated@@552)))
(= ($generated@@359 $generated@@553 ($generated@@301 $generated@@552)) $generated@@552))
 :pattern ( ($generated@@301 $generated@@552))
)))
(assert  (=> (<= 1 $generated@@282) (forall (($generated@@554 T@U) ($generated@@555 T@U) ($generated@@556 T@U) ($generated@@557 Int) ) (!  (=> (and (and (and (= (type $generated@@554) $generated@@275) (= (type $generated@@555) $generated@@80)) (= (type $generated@@556) $generated@@136)) (or ($generated@@485 $generated@@555 ($generated@@259 $generated@@556) $generated@@557) (and (not (= 1 $generated@@282)) (and (not (= $generated@@555 $generated@@141)) ($generated@@144 $generated@@555 $generated@@234))))) (and (and (=> (< 0 ($generated@@148 $generated@@556)) (=> (not (= $generated@@557 ($generated@@257 0))) ($generated@@485 $generated@@555 ($generated@@146 $generated@@556 ($generated@@147 1)) (- $generated@@557 1)))) (=> (=> (< 0 ($generated@@148 $generated@@556)) (or (= $generated@@557 ($generated@@257 0)) ($generated@@273 ($generated@@474 $generated@@554) $generated@@555 ($generated@@146 $generated@@556 ($generated@@147 1)) (- $generated@@557 1)))) (=> (= ($generated@@257 0) ($generated@@148 $generated@@556)) (forall (($generated@@558 T@U) ) (!  (=> (and (= (type $generated@@558) $generated@@136) ($generated@@283 $generated@@558 $generated@@556)) ($generated@@485 $generated@@555 $generated@@558 $generated@@557))
 :pattern ( ($generated@@273 ($generated@@474 $generated@@554) $generated@@555 $generated@@558 $generated@@557))
))))) (= ($generated@@273 ($generated@@474 $generated@@554) $generated@@555 ($generated@@259 $generated@@556) $generated@@557)  (and (=> (< 0 ($generated@@148 $generated@@556)) (or (= $generated@@557 ($generated@@257 0)) ($generated@@273 ($generated@@474 $generated@@554) $generated@@555 ($generated@@146 $generated@@556 ($generated@@147 1)) (- $generated@@557 1)))) (=> (= ($generated@@257 0) ($generated@@148 $generated@@556)) (exists (($generated@@559 T@U) ) (!  (and (= (type $generated@@559) $generated@@136) (and ($generated@@283 $generated@@559 $generated@@556) ($generated@@273 ($generated@@474 $generated@@554) $generated@@555 $generated@@559 $generated@@557)))
 :pattern ( ($generated@@273 ($generated@@474 $generated@@554) $generated@@555 $generated@@559 $generated@@557))
)))))))
 :weight 3
 :pattern ( ($generated@@273 ($generated@@474 $generated@@554) $generated@@555 ($generated@@259 $generated@@556) $generated@@557))
))))
(assert (forall (($generated@@560 T@U) ($generated@@561 T@U) ($generated@@562 T@U) ) (!  (=> (and (and (= (type $generated@@560) ($generated@@318 $generated@@136 $generated@@136)) (= (type $generated@@561) $generated@@67)) (= (type $generated@@562) $generated@@67)) (= ($generated@@144 $generated@@560 ($generated@@428 $generated@@561 $generated@@562)) (forall (($generated@@563 T@U) ) (!  (=> (and (= (type $generated@@563) $generated@@136) ($generated@@0 ($generated@@84 ($generated@@316 $generated@@560) $generated@@563))) (and ($generated@@238 ($generated@@84 ($generated@@403 $generated@@560) $generated@@563) $generated@@562) ($generated@@238 $generated@@563 $generated@@561)))
 :pattern ( ($generated@@84 ($generated@@403 $generated@@560) $generated@@563))
 :pattern ( ($generated@@84 ($generated@@316 $generated@@560) $generated@@563))
))))
 :pattern ( ($generated@@144 $generated@@560 ($generated@@428 $generated@@561 $generated@@562)))
)))
(assert (forall (($generated@@564 T@U) ($generated@@565 T@U) ($generated@@566 T@U) ) (!  (=> (and (and (= (type $generated@@564) ($generated@@336 $generated@@136 $generated@@136)) (= (type $generated@@565) $generated@@67)) (= (type $generated@@566) $generated@@67)) (= ($generated@@144 $generated@@564 ($generated@@436 $generated@@565 $generated@@566)) (forall (($generated@@567 T@U) ) (!  (=> (and (= (type $generated@@567) $generated@@136) ($generated@@0 ($generated@@84 ($generated@@334 $generated@@564) $generated@@567))) (and ($generated@@238 ($generated@@84 ($generated@@411 $generated@@564) $generated@@567) $generated@@566) ($generated@@238 $generated@@567 $generated@@565)))
 :pattern ( ($generated@@84 ($generated@@411 $generated@@564) $generated@@567))
 :pattern ( ($generated@@84 ($generated@@334 $generated@@564) $generated@@567))
))))
 :pattern ( ($generated@@144 $generated@@564 ($generated@@436 $generated@@565 $generated@@566)))
)))
(assert (forall (($generated@@568 T@U) ($generated@@569 T@U) ) (!  (=> (and (= (type $generated@@568) $generated@@136) (= (type $generated@@569) $generated@@136)) (and (and (and (=> ($generated@@135 $generated@@568 $generated@@569) (not (= $generated@@568 $generated@@569))) (=> (and ($generated@@352 $generated@@568) (not ($generated@@352 $generated@@569))) ($generated@@135 $generated@@568 $generated@@569))) (=> (and ($generated@@352 $generated@@568) ($generated@@352 $generated@@569)) (= ($generated@@135 $generated@@568 $generated@@569) (< ($generated@@148 $generated@@568) ($generated@@148 $generated@@569))))) (=> (and ($generated@@135 $generated@@568 $generated@@569) ($generated@@352 $generated@@569)) ($generated@@352 $generated@@568))))
 :pattern ( ($generated@@135 $generated@@568 $generated@@569))
)))
(assert (forall (($generated@@572 T@U) ($generated@@573 T@U) ) (!  (=> (and (= (type $generated@@572) $generated@@136) (= (type $generated@@573) $generated@@136)) (< ($generated@@570 $generated@@572) ($generated@@571 ($generated@@237 $generated@@572 $generated@@573))))
 :pattern ( ($generated@@237 $generated@@572 $generated@@573))
)))
(assert (forall (($generated@@574 T@U) ($generated@@575 T@U) ) (!  (=> (and (= (type $generated@@574) $generated@@136) (= (type $generated@@575) $generated@@136)) (< ($generated@@570 $generated@@575) ($generated@@571 ($generated@@237 $generated@@574 $generated@@575))))
 :pattern ( ($generated@@237 $generated@@574 $generated@@575))
)))
(assert (forall (($generated@@576 T@U) ($generated@@577 T@U) ($generated@@578 T@U) ) (!  (=> (and (and (and (= (type $generated@@576) $generated@@136) (= (type $generated@@577) $generated@@67)) (= (type $generated@@578) $generated@@67)) ($generated@@238 $generated@@576 ($generated@@428 $generated@@577 $generated@@578))) (and (= ($generated@@301 ($generated@@359 ($generated@@318 $generated@@136 $generated@@136) $generated@@576)) $generated@@576) ($generated@@144 ($generated@@359 ($generated@@318 $generated@@136 $generated@@136) $generated@@576) ($generated@@428 $generated@@577 $generated@@578))))
 :pattern ( ($generated@@238 $generated@@576 ($generated@@428 $generated@@577 $generated@@578)))
)))
(assert (forall (($generated@@579 T@U) ($generated@@580 T@U) ($generated@@581 T@U) ) (!  (=> (and (and (and (= (type $generated@@579) $generated@@136) (= (type $generated@@580) $generated@@67)) (= (type $generated@@581) $generated@@67)) ($generated@@238 $generated@@579 ($generated@@436 $generated@@580 $generated@@581))) (and (= ($generated@@301 ($generated@@359 ($generated@@336 $generated@@136 $generated@@136) $generated@@579)) $generated@@579) ($generated@@144 ($generated@@359 ($generated@@336 $generated@@136 $generated@@136) $generated@@579) ($generated@@436 $generated@@580 $generated@@581))))
 :pattern ( ($generated@@238 $generated@@579 ($generated@@436 $generated@@580 $generated@@581)))
)))
(assert (forall (($generated@@582 T@U) ($generated@@583 T@U) ($generated@@584 T@U) ) (!  (=> (and (and (and (= (type $generated@@582) $generated@@67) (= (type $generated@@583) $generated@@67)) (= (type $generated@@584) $generated@@136)) ($generated@@238 $generated@@584 ($generated@@156 $generated@@582 $generated@@583))) (and (= ($generated@@301 ($generated@@359 $generated@@157 $generated@@584)) $generated@@584) ($generated@@144 ($generated@@359 $generated@@157 $generated@@584) ($generated@@156 $generated@@582 $generated@@583))))
 :pattern ( ($generated@@238 $generated@@584 ($generated@@156 $generated@@582 $generated@@583)))
)))
(assert (forall (($generated@@585 T@U) ) (! (let (($generated@@586 (type $generated@@585)))
 (not ($generated@@0 ($generated@@84 ($generated@@446 $generated@@586) $generated@@585))))
 :pattern ( (let (($generated@@586 (type $generated@@585)))
($generated@@84 ($generated@@446 $generated@@586) $generated@@585)))
)))
(assert (forall (($generated@@588 T@U) ) (! (= (type ($generated@@587 $generated@@588)) $generated@@72)
 :pattern ( ($generated@@587 $generated@@588))
)))
(assert (forall (($generated@@589 T@U) ($generated@@590 T@U) ) (!  (=> (and (= (type $generated@@589) $generated@@67) (= (type $generated@@590) $generated@@67)) (and (= ($generated@@75 ($generated@@156 $generated@@589 $generated@@590)) $generated@@62) (= ($generated@@587 ($generated@@156 $generated@@589 $generated@@590)) $generated@@65)))
 :pattern ( ($generated@@156 $generated@@589 $generated@@590))
)))
(assert  (=> (<= 1 $generated@@282) (forall (($generated@@591 T@U) ($generated@@592 T@U) ($generated@@593 T@U) ($generated@@594 Int) ) (!  (=> (and (and (and (= (type $generated@@591) $generated@@275) (= (type $generated@@592) $generated@@80)) (= (type $generated@@593) $generated@@136)) (or ($generated@@485 ($generated@@259 $generated@@592) ($generated@@259 $generated@@593) ($generated@@257 $generated@@594)) (and (not (= 1 $generated@@282)) (and (not (= $generated@@592 $generated@@141)) ($generated@@144 $generated@@592 $generated@@234))))) (and (and (=> (< 0 ($generated@@148 $generated@@593)) (=> (not (= $generated@@594 ($generated@@257 0))) ($generated@@485 ($generated@@259 $generated@@592) ($generated@@146 $generated@@593 ($generated@@147 1)) (- $generated@@594 1)))) (=> (=> (< 0 ($generated@@148 $generated@@593)) (or (= $generated@@594 ($generated@@257 0)) ($generated@@273 ($generated@@474 $generated@@591) ($generated@@259 $generated@@592) ($generated@@146 $generated@@593 ($generated@@147 1)) (- $generated@@594 1)))) (=> (= ($generated@@257 0) ($generated@@148 $generated@@593)) (forall (($generated@@595 T@U) ) (!  (=> (and (= (type $generated@@595) $generated@@136) ($generated@@283 $generated@@595 $generated@@593)) ($generated@@485 $generated@@592 $generated@@595 $generated@@594))
 :pattern ( ($generated@@273 ($generated@@474 $generated@@591) $generated@@592 $generated@@595 $generated@@594))
))))) (= ($generated@@273 ($generated@@474 $generated@@591) ($generated@@259 $generated@@592) ($generated@@259 $generated@@593) ($generated@@257 $generated@@594))  (and (=> (< 0 ($generated@@148 $generated@@593)) (or (= $generated@@594 ($generated@@257 0)) ($generated@@273 ($generated@@474 $generated@@591) ($generated@@259 $generated@@592) ($generated@@146 $generated@@593 ($generated@@147 1)) (- $generated@@594 1)))) (=> (= ($generated@@257 0) ($generated@@148 $generated@@593)) (exists (($generated@@596 T@U) ) (!  (and (= (type $generated@@596) $generated@@136) (and ($generated@@283 $generated@@596 $generated@@593) ($generated@@273 ($generated@@474 $generated@@591) $generated@@592 $generated@@596 $generated@@594)))
 :pattern ( ($generated@@273 ($generated@@474 $generated@@591) $generated@@592 $generated@@596 $generated@@594))
)))))))
 :weight 3
 :pattern ( ($generated@@273 ($generated@@474 $generated@@591) ($generated@@259 $generated@@592) ($generated@@259 $generated@@593) ($generated@@257 $generated@@594)))
))))
(assert (forall (($generated@@597 T@U) ) (!  (=> (= (type $generated@@597) $generated@@157) (= ($generated@@570 ($generated@@301 $generated@@597)) ($generated@@571 $generated@@597)))
 :pattern ( ($generated@@570 ($generated@@301 $generated@@597)))
)))
(assert (forall (($generated@@598 T@U) ) (!  (=> (and (= (type $generated@@598) $generated@@136) ($generated@@238 $generated@@598 ($generated@@78 0))) (and (= ($generated@@301 ($generated@@359 $generated@@2 $generated@@598)) $generated@@598) ($generated@@144 ($generated@@359 ($generated@@79 $generated@@136 $generated@@4) $generated@@598) ($generated@@78 0))))
 :pattern ( ($generated@@238 $generated@@598 ($generated@@78 0)))
)))
(assert (forall (($generated@@599 T@U) ($generated@@600 T@U) ) (!  (=> (and (and (= (type $generated@@599) $generated@@136) (= (type $generated@@600) $generated@@67)) ($generated@@238 $generated@@599 ($generated@@247 $generated@@600))) (and (= ($generated@@301 ($generated@@359 ($generated@@79 $generated@@136 $generated@@4) $generated@@599)) $generated@@599) ($generated@@144 ($generated@@359 ($generated@@79 $generated@@136 $generated@@4) $generated@@599) ($generated@@247 $generated@@600))))
 :pattern ( ($generated@@238 $generated@@599 ($generated@@247 $generated@@600)))
)))
(assert (forall (($generated@@601 T@U) ($generated@@602 T@U) ) (!  (=> (and (and (= (type $generated@@601) $generated@@136) (= (type $generated@@602) $generated@@67)) ($generated@@238 $generated@@601 ($generated@@252 $generated@@602))) (and (= ($generated@@301 ($generated@@359 ($generated@@79 $generated@@136 $generated@@4) $generated@@601)) $generated@@601) ($generated@@144 ($generated@@359 ($generated@@79 $generated@@136 $generated@@4) $generated@@601) ($generated@@252 $generated@@602))))
 :pattern ( ($generated@@238 $generated@@601 ($generated@@252 $generated@@602)))
)))
(assert (forall (($generated@@603 T@U) ($generated@@604 T@U) ) (!  (=> (and (and (= (type $generated@@603) $generated@@136) (= (type $generated@@604) $generated@@67)) ($generated@@238 $generated@@603 ($generated@@170 $generated@@604))) (and (= ($generated@@301 ($generated@@359 ($generated@@79 $generated@@136 $generated@@2) $generated@@603)) $generated@@603) ($generated@@144 ($generated@@359 ($generated@@79 $generated@@136 $generated@@2) $generated@@603) ($generated@@170 $generated@@604))))
 :pattern ( ($generated@@238 $generated@@603 ($generated@@170 $generated@@604)))
)))
(assert (forall (($generated@@605 T@U) ($generated@@606 T@U) ) (!  (=> (and (and (= (type $generated@@605) $generated@@136) (= (type $generated@@606) $generated@@67)) ($generated@@238 $generated@@605 ($generated@@524 $generated@@606))) (and (= ($generated@@301 ($generated@@359 ($generated@@295 $generated@@136) $generated@@605)) $generated@@605) ($generated@@144 ($generated@@359 ($generated@@295 $generated@@136) $generated@@605) ($generated@@524 $generated@@606))))
 :pattern ( ($generated@@238 $generated@@605 ($generated@@524 $generated@@606)))
)))
(assert (forall (($generated@@607 T@U) ) (!  (=> (and (= (type $generated@@607) $generated@@136) ($generated@@352 $generated@@607)) (= $generated@@607 ($generated@@147 ($generated@@148 $generated@@607))))
 :pattern ( ($generated@@148 $generated@@607))
 :pattern ( ($generated@@352 $generated@@607))
)))
(assert (= ($generated@@75 $generated@@140) $generated@@63))
(assert (= ($generated@@587 $generated@@140) $generated@@66))
(assert (= ($generated@@75 $generated@@234) $generated@@64))
(assert (= ($generated@@587 $generated@@234) $generated@@66))
(assert (forall (($generated@@608 T@U) ($generated@@609 T@U) ($generated@@610 T@U) ) (!  (=> (and (and (= (type $generated@@608) ($generated@@79 $generated@@136 $generated@@2)) (= (type $generated@@609) $generated@@67)) (= (type $generated@@610) ($generated@@79 $generated@@80 $generated@@81))) (= ($generated@@77 $generated@@608 ($generated@@170 $generated@@609) $generated@@610) (forall (($generated@@611 T@U) ) (!  (=> (and (= (type $generated@@611) $generated@@136) (< 0 ($generated ($generated@@84 $generated@@608 $generated@@611)))) ($generated@@264 $generated@@611 $generated@@609 $generated@@610))
 :pattern ( ($generated@@84 $generated@@608 $generated@@611))
))))
 :pattern ( ($generated@@77 $generated@@608 ($generated@@170 $generated@@609) $generated@@610))
)))
(assert (forall (($generated@@612 T@U) ($generated@@613 T@U) ) (!  (=> (and (and (= (type $generated@@612) $generated@@136) (= (type $generated@@613) $generated@@136)) (and ($generated@@352 $generated@@613) (<= ($generated@@148 $generated@@613) ($generated@@148 $generated@@612)))) (or (and (= $generated@@613 ($generated@@147 0)) (= ($generated@@146 $generated@@612 $generated@@613) $generated@@612)) (and (not (= $generated@@613 ($generated@@147 0))) ($generated@@135 ($generated@@146 $generated@@612 $generated@@613) $generated@@612))))
 :pattern ( ($generated@@146 $generated@@612 $generated@@613))
)))
(assert  (=> (<= 1 $generated@@282) (forall (($generated@@614 T@U) ($generated@@615 T@U) ($generated@@616 T@U) ($generated@@617 Int) ) (!  (=> (and (and (and (= (type $generated@@614) $generated@@275) (= (type $generated@@615) $generated@@80)) (= (type $generated@@616) $generated@@136)) (or ($generated@@485 $generated@@615 $generated@@616 $generated@@617) (and (not (= 1 $generated@@282)) (and (not (= $generated@@615 $generated@@141)) ($generated@@144 $generated@@615 $generated@@234))))) (and (and (=> (< 0 ($generated@@148 $generated@@616)) (=> (not (= $generated@@617 ($generated@@257 0))) ($generated@@485 $generated@@615 ($generated@@146 $generated@@616 ($generated@@147 1)) (- $generated@@617 1)))) (=> (=> (< 0 ($generated@@148 $generated@@616)) (or (= $generated@@617 ($generated@@257 0)) ($generated@@273 $generated@@614 $generated@@615 ($generated@@146 $generated@@616 ($generated@@147 1)) (- $generated@@617 1)))) (=> (= ($generated@@257 0) ($generated@@148 $generated@@616)) (forall (($generated@@618 T@U) ) (!  (=> (and (= (type $generated@@618) $generated@@136) ($generated@@283 $generated@@618 $generated@@616)) ($generated@@485 $generated@@615 $generated@@618 $generated@@617))
 :pattern ( ($generated@@273 $generated@@614 $generated@@615 $generated@@618 $generated@@617))
))))) (= ($generated@@273 ($generated@@474 $generated@@614) $generated@@615 $generated@@616 $generated@@617)  (and (=> (< 0 ($generated@@148 $generated@@616)) (or (= $generated@@617 ($generated@@257 0)) ($generated@@273 $generated@@614 $generated@@615 ($generated@@146 $generated@@616 ($generated@@147 1)) (- $generated@@617 1)))) (=> (= ($generated@@257 0) ($generated@@148 $generated@@616)) (exists (($generated@@619 T@U) ) (!  (and (= (type $generated@@619) $generated@@136) (and ($generated@@283 $generated@@619 $generated@@616) ($generated@@273 $generated@@614 $generated@@615 $generated@@619 $generated@@617)))
 :pattern ( ($generated@@273 $generated@@614 $generated@@615 $generated@@619 $generated@@617))
)))))))
 :pattern ( ($generated@@273 ($generated@@474 $generated@@614) $generated@@615 $generated@@616 $generated@@617))
))))
(assert (forall (($generated@@620 T@U) ($generated@@621 T@U) ($generated@@622 T@U) ) (!  (=> (and (and (and (= (type $generated@@620) $generated@@157) (= (type $generated@@621) $generated@@67)) (= (type $generated@@622) ($generated@@79 $generated@@80 $generated@@81))) (and ($generated@@263 $generated@@622) (and ($generated@@155 $generated@@620) (exists (($generated@@623 T@U) ) (!  (and (= (type $generated@@623) $generated@@67) ($generated@@77 $generated@@620 ($generated@@156 $generated@@621 $generated@@623) $generated@@622))
 :pattern ( ($generated@@77 $generated@@620 ($generated@@156 $generated@@621 $generated@@623) $generated@@622))
))))) ($generated@@264 ($generated@@164 $generated@@620) $generated@@621 $generated@@622))
 :pattern ( ($generated@@264 ($generated@@164 $generated@@620) $generated@@621 $generated@@622))
)))
(assert (forall (($generated@@624 T@U) ($generated@@625 T@U) ($generated@@626 T@U) ) (!  (=> (and (and (and (= (type $generated@@624) $generated@@157) (= (type $generated@@625) $generated@@67)) (= (type $generated@@626) ($generated@@79 $generated@@80 $generated@@81))) (and ($generated@@263 $generated@@626) (and ($generated@@155 $generated@@624) (exists (($generated@@627 T@U) ) (!  (and (= (type $generated@@627) $generated@@67) ($generated@@77 $generated@@624 ($generated@@156 $generated@@627 $generated@@625) $generated@@626))
 :pattern ( ($generated@@77 $generated@@624 ($generated@@156 $generated@@627 $generated@@625) $generated@@626))
))))) ($generated@@264 ($generated@@165 $generated@@624) $generated@@625 $generated@@626))
 :pattern ( ($generated@@264 ($generated@@165 $generated@@624) $generated@@625 $generated@@626))
)))
(assert (forall (($generated@@628 T@U) ($generated@@629 T@U) ) (!  (=> (and (= (type $generated@@628) $generated@@136) (= (type $generated@@629) $generated@@136)) (= ($generated@@237 ($generated@@259 $generated@@628) ($generated@@259 $generated@@629)) ($generated@@259 ($generated@@237 $generated@@628 $generated@@629))))
 :pattern ( ($generated@@237 ($generated@@259 $generated@@628) ($generated@@259 $generated@@629)))
)))
(assert (forall (($generated@@630 Int) ) (! (= ($generated@@301 ($generated@@8 ($generated@@257 $generated@@630))) ($generated@@259 ($generated@@301 ($generated@@8 $generated@@630))))
 :pattern ( ($generated@@301 ($generated@@8 ($generated@@257 $generated@@630))))
)))
(assert (forall (($generated@@631 T@U) ) (! (= ($generated@@301 ($generated@@259 $generated@@631)) ($generated@@259 ($generated@@301 $generated@@631)))
 :pattern ( ($generated@@301 ($generated@@259 $generated@@631)))
)))
(assert (forall (($generated@@632 T@U) ) (! (let (($generated@@633 ($generated@@296 (type $generated@@632))))
 (=> (and (= (type $generated@@632) ($generated@@295 $generated@@633)) (= ($generated@@294 $generated@@632) 0)) (= $generated@@632 ($generated@@293 $generated@@633))))
 :pattern ( ($generated@@294 $generated@@632))
)))
(assert (forall (($generated@@634 T@U) ($generated@@635 T@U) ($generated@@636 T@U) ) (! (let (($generated@@637 (type $generated@@635)))
 (=> (and (and (= (type $generated@@634) ($generated@@79 $generated@@637 $generated@@2)) (= (type $generated@@636) $generated@@2)) (<= 0 ($generated $generated@@636))) (= ($generated@@310 ($generated@@85 $generated@@634 $generated@@635 $generated@@636)) (+ (- ($generated@@310 $generated@@634) ($generated ($generated@@84 $generated@@634 $generated@@635))) ($generated $generated@@636)))))
 :pattern ( ($generated@@310 ($generated@@85 $generated@@634 $generated@@635 $generated@@636)))
)))
(assert (forall (($generated@@638 T@U) ($generated@@639 T@U) ) (!  (=> (and (= (type $generated@@638) ($generated@@79 $generated@@80 $generated@@81)) (= (type $generated@@639) $generated@@2)) ($generated@@77 $generated@@639 $generated@@46 $generated@@638))
 :pattern ( ($generated@@77 $generated@@639 $generated@@46 $generated@@638))
)))
(assert (forall (($generated@@640 T@U) ($generated@@641 T@U) ) (!  (=> (and (= (type $generated@@640) ($generated@@79 $generated@@80 $generated@@81)) (= (type $generated@@641) $generated@@3)) ($generated@@77 $generated@@641 $generated@@47 $generated@@640))
 :pattern ( ($generated@@77 $generated@@641 $generated@@47 $generated@@640))
)))
(assert (forall (($generated@@642 T@U) ($generated@@643 T@U) ) (!  (=> (and (= (type $generated@@642) ($generated@@79 $generated@@80 $generated@@81)) (= (type $generated@@643) $generated@@4)) ($generated@@77 $generated@@643 $generated@@44 $generated@@642))
 :pattern ( ($generated@@77 $generated@@643 $generated@@44 $generated@@642))
)))
(assert (forall (($generated@@644 T@U) ($generated@@645 T@U) ) (!  (=> (and (= (type $generated@@644) ($generated@@79 $generated@@80 $generated@@81)) (= (type $generated@@645) $generated@@470)) ($generated@@77 $generated@@645 $generated@@45 $generated@@644))
 :pattern ( ($generated@@77 $generated@@645 $generated@@45 $generated@@644))
)))
(assert (forall (($generated@@646 T@U) ($generated@@647 T@U) ) (!  (=> (and (= (type $generated@@646) ($generated@@79 $generated@@80 $generated@@81)) (= (type $generated@@647) $generated@@136)) ($generated@@77 $generated@@647 $generated@@48 $generated@@646))
 :pattern ( ($generated@@77 $generated@@647 $generated@@48 $generated@@646))
)))
(assert (forall (($generated@@648 T@U) ($generated@@649 T@U) ) (!  (=> (and (= (type $generated@@648) ($generated@@295 $generated@@136)) (= (type $generated@@649) $generated@@67)) (= ($generated@@144 $generated@@648 ($generated@@524 $generated@@649)) (forall (($generated@@650 Int) ) (!  (=> (and (<= 0 $generated@@650) (< $generated@@650 ($generated@@294 $generated@@648))) ($generated@@238 ($generated@@525 $generated@@648 $generated@@650) $generated@@649))
 :pattern ( ($generated@@525 $generated@@648 $generated@@650))
))))
 :pattern ( ($generated@@144 $generated@@648 ($generated@@524 $generated@@649)))
)))
(assert (forall (($generated@@652 T@U) ($generated@@653 Int) ) (!  (=> (= (type $generated@@652) ($generated@@295 $generated@@136)) (=> (and (<= 0 $generated@@653) (< $generated@@653 ($generated@@294 $generated@@652))) (< ($generated@@571 ($generated@@359 $generated@@157 ($generated@@525 $generated@@652 $generated@@653))) ($generated@@651 $generated@@652))))
 :pattern ( ($generated@@571 ($generated@@359 $generated@@157 ($generated@@525 $generated@@652 $generated@@653))))
)))
(assert (forall (($generated@@654 T@U) ($generated@@655 T@U) ($generated@@656 T@U) ) (!  (=> (and (and (and (= (type $generated@@654) ($generated@@318 $generated@@136 $generated@@136)) (= (type $generated@@655) $generated@@67)) (= (type $generated@@656) $generated@@67)) ($generated@@144 $generated@@654 ($generated@@428 $generated@@655 $generated@@656))) (and (and ($generated@@144 ($generated@@316 $generated@@654) ($generated@@247 $generated@@655)) ($generated@@144 ($generated@@369 $generated@@654) ($generated@@247 $generated@@656))) ($generated@@144 ($generated@@402 $generated@@654) ($generated@@247 ($generated@@156 $generated@@655 $generated@@656)))))
 :pattern ( ($generated@@144 $generated@@654 ($generated@@428 $generated@@655 $generated@@656)))
)))
(assert (forall (($generated@@657 T@U) ($generated@@658 T@U) ($generated@@659 T@U) ) (!  (=> (and (and (and (= (type $generated@@657) ($generated@@336 $generated@@136 $generated@@136)) (= (type $generated@@658) $generated@@67)) (= (type $generated@@659) $generated@@67)) ($generated@@144 $generated@@657 ($generated@@436 $generated@@658 $generated@@659))) (and (and ($generated@@144 ($generated@@334 $generated@@657) ($generated@@252 $generated@@658)) ($generated@@144 ($generated@@380 $generated@@657) ($generated@@252 $generated@@659))) ($generated@@144 ($generated@@410 $generated@@657) ($generated@@252 ($generated@@156 $generated@@658 $generated@@659)))))
 :pattern ( ($generated@@144 $generated@@657 ($generated@@436 $generated@@658 $generated@@659)))
)))
(assert (forall (($generated@@660 T@U) ) (!  (=> (= (type $generated@@660) $generated@@2) ($generated@@144 $generated@@660 $generated@@46))
 :pattern ( ($generated@@144 $generated@@660 $generated@@46))
)))
(assert (forall (($generated@@661 T@U) ) (!  (=> (= (type $generated@@661) $generated@@3) ($generated@@144 $generated@@661 $generated@@47))
 :pattern ( ($generated@@144 $generated@@661 $generated@@47))
)))
(assert (forall (($generated@@662 T@U) ) (!  (=> (= (type $generated@@662) $generated@@4) ($generated@@144 $generated@@662 $generated@@44))
 :pattern ( ($generated@@144 $generated@@662 $generated@@44))
)))
(assert (forall (($generated@@663 T@U) ) (!  (=> (= (type $generated@@663) $generated@@470) ($generated@@144 $generated@@663 $generated@@45))
 :pattern ( ($generated@@144 $generated@@663 $generated@@45))
)))
(assert (forall (($generated@@664 T@U) ) (!  (=> (= (type $generated@@664) $generated@@136) ($generated@@144 $generated@@664 $generated@@48))
 :pattern ( ($generated@@144 $generated@@664 $generated@@48))
)))
(push 1)
(declare-fun ControlFlow (Int Int) Int)
(declare-fun $generated@@665 () T@U)
(declare-fun $generated@@666 () T@U)
(declare-fun $generated@@667 () T@U)
(declare-fun $generated@@668 () T@U)
(declare-fun $generated@@669 () T@U)
(declare-fun $generated@@670 (T@U) Bool)
(declare-fun $generated@@671 () T@U)
(declare-fun $generated@@672 () Int)
(declare-fun $generated@@673 () T@U)
(declare-fun $generated@@674 () T@U)
(assert  (and (and (and (and (and (and (and (= (type $generated@@665) $generated@@275) (= (type $generated@@666) $generated@@275)) (= (type $generated@@667) ($generated@@180 $generated@@80 $generated@@4))) (= (type $generated@@668) ($generated@@79 $generated@@80 $generated@@81))) (= (type $generated@@669) ($generated@@79 $generated@@80 $generated@@81))) (= (type $generated@@671) $generated@@136)) (= (type $generated@@673) $generated@@80)) (= (type $generated@@674) ($generated@@79 $generated@@80 $generated@@81))))
(set-option :timeout 0)
(set-option :rlimit 0)
(assert (not
 (=> (= (ControlFlow 0 0) 5) (let (($generated@@675  (=> (= ($generated@@274 $generated@@665) $generated@@665) (=> (and (= ($generated@@274 $generated@@666) $generated@@666) (= $generated@@667 ($generated@@179 $generated@@141 $generated@@668 $generated@@60 false))) (=> (and (and ($generated@@263 $generated@@669) ($generated@@670 $generated@@669)) (and (= $generated@@668 $generated@@669) (forall (($generated@@676 T@U) ($generated@@677 T@U) ($generated@@678 Int) ) (!  (=> (and (= (type $generated@@676) $generated@@80) (= (type $generated@@677) $generated@@136)) (=> (and (and ($generated@@144 $generated@@676 $generated@@234) ($generated@@273 ($generated@@474 $generated@@276) $generated@@676 $generated@@677 $generated@@678)) (or ($generated@@135 $generated@@677 $generated@@671) (and (= $generated@@677 $generated@@671) (and (<= 0 $generated@@678) (< $generated@@678 $generated@@672))))) (<= ($generated@@257 0) $generated@@678)))
 :no-pattern (type $generated@@676)
 :no-pattern (type $generated@@677)
 :no-pattern ($generated $generated@@676)
 :no-pattern ($generated@@0 $generated@@676)
 :no-pattern ($generated $generated@@677)
 :no-pattern ($generated@@0 $generated@@677)
)))) (and (=> (= (ControlFlow 0 2) (- 0 4)) (=> ($generated@@485 $generated@@673 $generated@@671 $generated@@672) (or ($generated@@273 ($generated@@474 $generated@@276) $generated@@673 $generated@@671 $generated@@672) (=> (< 0 ($generated@@148 $generated@@671)) (or (= $generated@@672 ($generated@@257 0)) ($generated@@273 ($generated@@474 ($generated@@474 $generated@@276)) $generated@@673 ($generated@@146 $generated@@671 ($generated@@147 1)) (- $generated@@672 1))))))) (=> (=> ($generated@@485 $generated@@673 $generated@@671 $generated@@672) (or ($generated@@273 ($generated@@474 $generated@@276) $generated@@673 $generated@@671 $generated@@672) (=> (< 0 ($generated@@148 $generated@@671)) (or (= $generated@@672 ($generated@@257 0)) ($generated@@273 ($generated@@474 ($generated@@474 $generated@@276)) $generated@@673 ($generated@@146 $generated@@671 ($generated@@147 1)) (- $generated@@672 1)))))) (and (=> (= (ControlFlow 0 2) (- 0 3)) (=> ($generated@@485 $generated@@673 $generated@@671 $generated@@672) (or ($generated@@273 ($generated@@474 $generated@@276) $generated@@673 $generated@@671 $generated@@672) (=> (= ($generated@@257 0) ($generated@@148 $generated@@671)) (exists (($generated@@679 T@U) ) (!  (and (= (type $generated@@679) $generated@@136) (and ($generated@@283 $generated@@679 $generated@@671) ($generated@@273 ($generated@@474 $generated@@276) $generated@@673 $generated@@679 $generated@@672)))
 :pattern ( ($generated@@273 ($generated@@474 $generated@@276) $generated@@673 $generated@@679 $generated@@672))
)))))) (=> (=> ($generated@@485 $generated@@673 $generated@@671 $generated@@672) (or ($generated@@273 ($generated@@474 $generated@@276) $generated@@673 $generated@@671 $generated@@672) (=> (= ($generated@@257 0) ($generated@@148 $generated@@671)) (exists (($generated@@680 T@U) ) (!  (and (= (type $generated@@680) $generated@@136) (and ($generated@@283 $generated@@680 $generated@@671) ($generated@@273 ($generated@@474 $generated@@276) $generated@@673 $generated@@680 $generated@@672)))
 :pattern ( ($generated@@273 ($generated@@474 $generated@@276) $generated@@673 $generated@@680 $generated@@672))
))))) (=> (and (and (and ($generated@@263 $generated@@674) ($generated@@670 $generated@@674)) (<= ($generated@@257 0) $generated@@672)) (and (= $generated@@669 $generated@@674) (= (ControlFlow 0 2) (- 0 1)))) (<= ($generated@@257 0) $generated@@672)))))))))))
(let (($generated@@681  (=> (and ($generated@@263 $generated@@668) ($generated@@670 $generated@@668)) (=> (and (and (and (not (= $generated@@673 $generated@@141)) (and ($generated@@144 $generated@@673 $generated@@234) ($generated@@77 $generated@@673 $generated@@234 $generated@@668))) (= 3 $generated@@282)) (and (and ($generated@@485 $generated@@673 $generated@@671 $generated@@672) (and ($generated@@273 ($generated@@474 $generated@@276) $generated@@673 $generated@@671 $generated@@672) (and (=> (< 0 ($generated@@148 $generated@@671)) (or (= $generated@@672 ($generated@@257 0)) ($generated@@273 ($generated@@474 $generated@@276) $generated@@673 ($generated@@146 $generated@@671 ($generated@@147 1)) (- $generated@@672 1)))) (=> (= ($generated@@257 0) ($generated@@148 $generated@@671)) (exists (($generated@@682 T@U) ) (!  (and (= (type $generated@@682) $generated@@136) (and ($generated@@283 $generated@@682 $generated@@671) ($generated@@273 ($generated@@474 $generated@@276) $generated@@673 $generated@@682 $generated@@672)))
 :pattern ( ($generated@@273 ($generated@@474 $generated@@276) $generated@@673 $generated@@682 $generated@@672))
)))))) (= (ControlFlow 0 5) 2))) $generated@@675))))
$generated@@681)))
))
(check-sat)
(pop 1)
; Valid
(get-info :rlimit)
(reset)
(set-option :rlimit 0)
; did a full reset
(reset)
(set-option :print-success false)
(set-info :smt-lib-version 2.6)
(set-option :auto_config false)
(set-option :type_check true)
(set-option :smt.case_split 3)
(set-option :smt.qi.eager_threshold 100)
(set-option :smt.delay_units true)
(set-option :smt.arith.solver 2)
(set-option :smt.mbqi false)
(set-option :model.compact false)
(set-option :model.v2 true)
(set-option :pp.bv_literals false)
; done setting options


(set-info :category "industrial")
(declare-sort |T@U| 0)
(declare-sort |T@T| 0)
(declare-fun real_pow (Real Real) Real)
(declare-fun UOrdering2 (|T@U| |T@U|) Bool)
(declare-fun UOrdering3 (|T@T| |T@U| |T@U|) Bool)
(declare-fun tickleBool (Bool) Bool)
(assert (and (tickleBool true) (tickleBool false)))
(declare-fun $generated (T@U) Int)
(declare-fun $generated@@0 (T@U) Bool)
(declare-fun $generated@@1 (T@T) Int)
(declare-fun $generated@@2 () T@T)
(declare-fun $generated@@3 () T@T)
(declare-fun $generated@@4 () T@T)
(declare-fun $generated@@5 () T@T)
(declare-fun $generated@@6 () T@T)
(declare-fun $generated@@7 () T@T)
(declare-fun $generated@@8 (Int) T@U)
(declare-fun type (T@U) T@T)
(declare-fun $generated@@9 (Real) T@U)
(declare-fun $generated@@10 (T@U) Real)
(declare-fun $generated@@11 (Bool) T@U)
(declare-fun $generated@@12 (RoundingMode) T@U)
(declare-fun $generated@@13 (T@U) RoundingMode)
(declare-fun $generated@@14 (String) T@U)
(declare-fun $generated@@15 (T@U) String)
(declare-fun $generated@@16 ((RegEx String)) T@U)
(declare-fun $generated@@17 (T@U) (RegEx String))
(declare-fun $generated@@44 (T@U T@U) Bool)
(declare-fun $generated@@45 (T@T T@T) T@T)
(declare-fun $generated@@46 () T@T)
(declare-fun $generated@@47 () T@T)
(declare-fun $generated@@48 (T@U T@U) T@U)
(declare-fun $generated@@49 (T@U T@U) T@U)
(declare-fun $generated@@50 () T@U)
(declare-fun $generated@@51 (T@T) T@T)
(declare-fun $generated@@52 (T@T) T@T)
(declare-fun $generated@@53 (T@U T@U T@U) T@U)
(declare-fun $generated@@54 (T@T) T@T)
(declare-fun $generated@@55 (T@T) T@T)
(declare-fun $generated@@56 (T@U T@U T@U) T@U)
(declare-fun $generated@@106 (T@U T@U T@U) T@U)
(declare-fun $generated@@107 (T@U T@U T@U Bool) T@U)
(declare-fun $generated@@108 (T@T T@T) T@T)
(declare-fun $generated@@109 (T@T) T@T)
(declare-fun $generated@@110 (T@T) T@T)
(declare-fun $generated@@111 (T@U T@U T@U T@U) T@U)
(assert  (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (= ($generated@@1 $generated@@2) 0) (= ($generated@@1 $generated@@3) 1)) (= ($generated@@1 $generated@@4) 2)) (= ($generated@@1 $generated@@5) 3)) (= ($generated@@1 $generated@@6) 4)) (= ($generated@@1 $generated@@7) 5)) (forall (($generated@@18 Int) ) (! (= ($generated ($generated@@8 $generated@@18)) $generated@@18)
 :pattern ( ($generated@@8 $generated@@18))
))) (forall (($generated@@19 T@U) ) (!  (=> (= (type $generated@@19) $generated@@2) (= ($generated@@8 ($generated $generated@@19)) $generated@@19))
 :pattern ( ($generated $generated@@19))
))) (forall (($generated@@20 Int) ) (! (= (type ($generated@@8 $generated@@20)) $generated@@2)
 :pattern ( ($generated@@8 $generated@@20))
))) (forall (($generated@@21 Real) ) (! (= ($generated@@10 ($generated@@9 $generated@@21)) $generated@@21)
 :pattern ( ($generated@@9 $generated@@21))
))) (forall (($generated@@22 T@U) ) (!  (=> (= (type $generated@@22) $generated@@3) (= ($generated@@9 ($generated@@10 $generated@@22)) $generated@@22))
 :pattern ( ($generated@@10 $generated@@22))
))) (forall (($generated@@23 Real) ) (! (= (type ($generated@@9 $generated@@23)) $generated@@3)
 :pattern ( ($generated@@9 $generated@@23))
))) (forall (($generated@@24 Bool) ) (! (= ($generated@@0 ($generated@@11 $generated@@24)) $generated@@24)
 :pattern ( ($generated@@11 $generated@@24))
))) (forall (($generated@@25 T@U) ) (!  (=> (= (type $generated@@25) $generated@@4) (= ($generated@@11 ($generated@@0 $generated@@25)) $generated@@25))
 :pattern ( ($generated@@0 $generated@@25))
))) (forall (($generated@@26 Bool) ) (! (= (type ($generated@@11 $generated@@26)) $generated@@4)
 :pattern ( ($generated@@11 $generated@@26))
))) (forall (($generated@@27 RoundingMode) ) (! (= ($generated@@13 ($generated@@12 $generated@@27)) $generated@@27)
 :pattern ( ($generated@@12 $generated@@27))
))) (forall (($generated@@28 T@U) ) (!  (=> (= (type $generated@@28) $generated@@5) (= ($generated@@12 ($generated@@13 $generated@@28)) $generated@@28))
 :pattern ( ($generated@@13 $generated@@28))
))) (forall (($generated@@29 RoundingMode) ) (! (= (type ($generated@@12 $generated@@29)) $generated@@5)
 :pattern ( ($generated@@12 $generated@@29))
))) (forall (($generated@@30 String) ) (! (= ($generated@@15 ($generated@@14 $generated@@30)) $generated@@30)
 :pattern ( ($generated@@14 $generated@@30))
))) (forall (($generated@@31 T@U) ) (!  (=> (= (type $generated@@31) $generated@@6) (= ($generated@@14 ($generated@@15 $generated@@31)) $generated@@31))
 :pattern ( ($generated@@15 $generated@@31))
))) (forall (($generated@@32 String) ) (! (= (type ($generated@@14 $generated@@32)) $generated@@6)
 :pattern ( ($generated@@14 $generated@@32))
))) (forall (($generated@@33 (RegEx String)) ) (! (= ($generated@@17 ($generated@@16 $generated@@33)) $generated@@33)
 :pattern ( ($generated@@16 $generated@@33))
))) (forall (($generated@@34 T@U) ) (!  (=> (= (type $generated@@34) $generated@@7) (= ($generated@@16 ($generated@@17 $generated@@34)) $generated@@34))
 :pattern ( ($generated@@17 $generated@@34))
))) (forall (($generated@@35 (RegEx String)) ) (! (= (type ($generated@@16 $generated@@35)) $generated@@7)
 :pattern ( ($generated@@16 $generated@@35))
))))
(assert (forall (($generated@@36 T@U) ) (! (UOrdering2 $generated@@36 $generated@@36)
 :no-pattern ($generated $generated@@36)
 :no-pattern ($generated@@0 $generated@@36)
)))
(assert (forall (($generated@@37 T@U) ($generated@@38 T@U) ($generated@@39 T@U) ) (! (let (($generated@@40 (type $generated@@37)))
 (=> (and (and (= (type $generated@@38) $generated@@40) (= (type $generated@@39) $generated@@40)) (and (UOrdering2 $generated@@37 $generated@@38) (UOrdering2 $generated@@38 $generated@@39))) (UOrdering2 $generated@@37 $generated@@39)))
 :pattern ( (UOrdering2 $generated@@37 $generated@@38) (UOrdering2 $generated@@38 $generated@@39))
)))
(assert (forall (($generated@@41 T@U) ($generated@@42 T@U) ) (! (let (($generated@@43 (type $generated@@41)))
 (=> (= (type $generated@@42) $generated@@43) (=> (and (UOrdering2 $generated@@41 $generated@@42) (UOrdering2 $generated@@42 $generated@@41)) (= $generated@@41 $generated@@42))))
 :pattern ( (UOrdering2 $generated@@41 $generated@@42) (UOrdering2 $generated@@42 $generated@@41))
)))
(assert  (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (forall (($generated@@57 T@T) ($generated@@58 T@T) ) (= ($generated@@1 ($generated@@45 $generated@@57 $generated@@58)) 6)) (forall (($generated@@59 T@T) ($generated@@60 T@T) ) (! (= ($generated@@51 ($generated@@45 $generated@@59 $generated@@60)) $generated@@59)
 :pattern ( ($generated@@45 $generated@@59 $generated@@60))
))) (forall (($generated@@61 T@T) ($generated@@62 T@T) ) (! (= ($generated@@52 ($generated@@45 $generated@@61 $generated@@62)) $generated@@62)
 :pattern ( ($generated@@45 $generated@@61 $generated@@62))
))) (forall (($generated@@63 T@U) ($generated@@64 T@U) ) (! (let (($generated@@65 ($generated@@52 (type $generated@@63))))
(= (type ($generated@@49 $generated@@63 $generated@@64)) $generated@@65))
 :pattern ( ($generated@@49 $generated@@63 $generated@@64))
))) (forall (($generated@@66 T@U) ($generated@@67 T@U) ($generated@@68 T@U) ) (! (let (($generated@@69 (type $generated@@68)))
(let (($generated@@70 (type $generated@@67)))
(= (type ($generated@@53 $generated@@66 $generated@@67 $generated@@68)) ($generated@@45 $generated@@70 $generated@@69))))
 :pattern ( ($generated@@53 $generated@@66 $generated@@67 $generated@@68))
))) (forall (($generated@@71 T@U) ($generated@@72 T@U) ($generated@@73 T@U) ) (! (let (($generated@@74 ($generated@@52 (type $generated@@71))))
 (=> (= (type $generated@@73) $generated@@74) (= ($generated@@49 ($generated@@53 $generated@@71 $generated@@72 $generated@@73) $generated@@72) $generated@@73)))
 :weight 0
))) (and (forall (($generated@@75 T@U) ($generated@@76 T@U) ($generated@@77 T@U) ($generated@@78 T@U) ) (!  (or (= $generated@@77 $generated@@78) (= ($generated@@49 ($generated@@53 $generated@@76 $generated@@77 $generated@@75) $generated@@78) ($generated@@49 $generated@@76 $generated@@78)))
 :weight 0
)) (forall (($generated@@79 T@U) ($generated@@80 T@U) ($generated@@81 T@U) ($generated@@82 T@U) ) (!  (or true (= ($generated@@49 ($generated@@53 $generated@@80 $generated@@81 $generated@@79) $generated@@82) ($generated@@49 $generated@@80 $generated@@82)))
 :weight 0
)))) (= ($generated@@1 $generated@@46) 7)) (forall (($generated@@83 T@T) ) (= ($generated@@1 ($generated@@54 $generated@@83)) 8))) (forall (($generated@@84 T@T) ) (! (= ($generated@@55 ($generated@@54 $generated@@84)) $generated@@84)
 :pattern ( ($generated@@54 $generated@@84))
))) (forall (($generated@@85 T@U) ($generated@@86 T@U) ) (! (let (($generated@@87 ($generated@@55 (type $generated@@86))))
(= (type ($generated@@48 $generated@@85 $generated@@86)) $generated@@87))
 :pattern ( ($generated@@48 $generated@@85 $generated@@86))
))) (= ($generated@@1 $generated@@47) 9)) (forall (($generated@@88 T@U) ($generated@@89 T@U) ($generated@@90 T@U) ) (! (= (type ($generated@@56 $generated@@88 $generated@@89 $generated@@90)) $generated@@47)
 :pattern ( ($generated@@56 $generated@@88 $generated@@89 $generated@@90))
))) (forall (($generated@@91 T@U) ($generated@@92 T@U) ($generated@@93 T@U) ) (! (let (($generated@@94 ($generated@@55 (type $generated@@92))))
 (=> (= (type $generated@@93) $generated@@94) (= ($generated@@48 ($generated@@56 $generated@@91 $generated@@92 $generated@@93) $generated@@92) $generated@@93)))
 :weight 0
))) (and (forall (($generated@@95 T@U) ($generated@@96 T@U) ($generated@@97 T@U) ($generated@@98 T@U) ) (!  (or (= $generated@@97 $generated@@98) (= ($generated@@48 ($generated@@56 $generated@@96 $generated@@97 $generated@@95) $generated@@98) ($generated@@48 $generated@@96 $generated@@98)))
 :weight 0
)) (forall (($generated@@99 T@U) ($generated@@100 T@U) ($generated@@101 T@U) ($generated@@102 T@U) ) (!  (or true (= ($generated@@48 ($generated@@56 $generated@@100 $generated@@101 $generated@@99) $generated@@102) ($generated@@48 $generated@@100 $generated@@102)))
 :weight 0
)))) (= (type $generated@@50) ($generated@@54 $generated@@4))))
(assert (forall (($generated@@103 T@U) ($generated@@104 T@U) ) (!  (=> (and (and (= (type $generated@@103) ($generated@@45 $generated@@46 $generated@@47)) (= (type $generated@@104) ($generated@@45 $generated@@46 $generated@@47))) ($generated@@44 $generated@@103 $generated@@104)) (forall (($generated@@105 T@U) ) (!  (=> (and (= (type $generated@@105) $generated@@46) ($generated@@0 ($generated@@48 ($generated@@49 $generated@@103 $generated@@105) $generated@@50))) ($generated@@0 ($generated@@48 ($generated@@49 $generated@@104 $generated@@105) $generated@@50)))
 :pattern ( ($generated@@48 ($generated@@49 $generated@@104 $generated@@105) $generated@@50))
)))
 :pattern ( ($generated@@44 $generated@@103 $generated@@104))
)))
(assert  (and (and (and (and (and (and (and (forall (($generated@@112 T@T) ($generated@@113 T@T) ) (= ($generated@@1 ($generated@@108 $generated@@112 $generated@@113)) 10)) (forall (($generated@@114 T@T) ($generated@@115 T@T) ) (! (= ($generated@@109 ($generated@@108 $generated@@114 $generated@@115)) $generated@@114)
 :pattern ( ($generated@@108 $generated@@114 $generated@@115))
))) (forall (($generated@@116 T@T) ($generated@@117 T@T) ) (! (= ($generated@@110 ($generated@@108 $generated@@116 $generated@@117)) $generated@@117)
 :pattern ( ($generated@@108 $generated@@116 $generated@@117))
))) (forall (($generated@@118 T@U) ($generated@@119 T@U) ($generated@@120 T@U) ) (! (let (($generated@@121 ($generated@@110 (type $generated@@118))))
(= (type ($generated@@106 $generated@@118 $generated@@119 $generated@@120)) $generated@@121))
 :pattern ( ($generated@@106 $generated@@118 $generated@@119 $generated@@120))
))) (forall (($generated@@122 T@U) ($generated@@123 T@U) ($generated@@124 T@U) ($generated@@125 T@U) ) (! (let (($generated@@126 (type $generated@@125)))
(let (($generated@@127 (type $generated@@123)))
(= (type ($generated@@111 $generated@@122 $generated@@123 $generated@@124 $generated@@125)) ($generated@@108 $generated@@127 $generated@@126))))
 :pattern ( ($generated@@111 $generated@@122 $generated@@123 $generated@@124 $generated@@125))
))) (forall (($generated@@128 T@U) ($generated@@129 T@U) ($generated@@130 T@U) ($generated@@131 T@U) ) (! (let (($generated@@132 ($generated@@110 (type $generated@@128))))
 (=> (= (type $generated@@131) $generated@@132) (= ($generated@@106 ($generated@@111 $generated@@128 $generated@@129 $generated@@130 $generated@@131) $generated@@129 $generated@@130) $generated@@131)))
 :weight 0
))) (and (and (forall (($generated@@133 T@U) ($generated@@134 T@U) ($generated@@135 T@U) ($generated@@136 T@U) ($generated@@137 T@U) ($generated@@138 T@U) ) (!  (or (= $generated@@135 $generated@@137) (= ($generated@@106 ($generated@@111 $generated@@134 $generated@@135 $generated@@136 $generated@@133) $generated@@137 $generated@@138) ($generated@@106 $generated@@134 $generated@@137 $generated@@138)))
 :weight 0
)) (forall (($generated@@139 T@U) ($generated@@140 T@U) ($generated@@141 T@U) ($generated@@142 T@U) ($generated@@143 T@U) ($generated@@144 T@U) ) (!  (or (= $generated@@142 $generated@@144) (= ($generated@@106 ($generated@@111 $generated@@140 $generated@@141 $generated@@142 $generated@@139) $generated@@143 $generated@@144) ($generated@@106 $generated@@140 $generated@@143 $generated@@144)))
 :weight 0
))) (forall (($generated@@145 T@U) ($generated@@146 T@U) ($generated@@147 T@U) ($generated@@148 T@U) ($generated@@149 T@U) ($generated@@150 T@U) ) (!  (or true (= ($generated@@106 ($generated@@111 $generated@@146 $generated@@147 $generated@@148 $generated@@145) $generated@@149 $generated@@150) ($generated@@106 $generated@@146 $generated@@149 $generated@@150)))
 :weight 0
)))) (forall (($generated@@151 T@U) ($generated@@152 T@U) ($generated@@153 T@U) ($generated@@154 Bool) ) (! (= (type ($generated@@107 $generated@@151 $generated@@152 $generated@@153 $generated@@154)) ($generated@@108 $generated@@46 $generated@@4))
 :pattern ( ($generated@@107 $generated@@151 $generated@@152 $generated@@153 $generated@@154))
))))
(assert (forall (($generated@@155 T@U) ($generated@@156 T@U) ($generated@@157 T@U) ($generated@@158 Bool) ($generated@@159 T@U) ($generated@@160 T@U) ) (! (let (($generated@@161 ($generated@@55 (type $generated@@160))))
 (=> (and (and (and (and (= (type $generated@@155) $generated@@46) (= (type $generated@@156) ($generated@@45 $generated@@46 $generated@@47))) (= (type $generated@@157) ($generated@@54 $generated@@4))) (= (type $generated@@159) $generated@@46)) (= (type $generated@@160) ($generated@@54 $generated@@161))) (= ($generated@@0 ($generated@@106 ($generated@@107 $generated@@155 $generated@@156 $generated@@157 $generated@@158) $generated@@159 $generated@@160))  (=> (and (not (= $generated@@159 $generated@@155)) ($generated@@0 ($generated@@48 ($generated@@49 $generated@@156 $generated@@159) $generated@@157))) $generated@@158))))
 :pattern ( ($generated@@106 ($generated@@107 $generated@@155 $generated@@156 $generated@@157 $generated@@158) $generated@@159 $generated@@160))
)))
(assert (forall (($generated@@162 T@U) ($generated@@163 T@U) ($generated@@164 T@U) ) (!  (=> (and (and (and (and (= (type $generated@@162) ($generated@@45 $generated@@46 $generated@@47)) (= (type $generated@@163) ($generated@@45 $generated@@46 $generated@@47))) (= (type $generated@@164) ($generated@@45 $generated@@46 $generated@@47))) (not (= $generated@@162 $generated@@164))) (and ($generated@@44 $generated@@162 $generated@@163) ($generated@@44 $generated@@163 $generated@@164))) ($generated@@44 $generated@@162 $generated@@164))
 :pattern ( ($generated@@44 $generated@@162 $generated@@163) ($generated@@44 $generated@@163 $generated@@164))
)))
(push 1)
(declare-fun ControlFlow (Int Int) Int)
(set-option :timeout 0)
(set-option :rlimit 0)
(assert (not
 (=> (= (ControlFlow 0 0) 2) true)
))
(check-sat)
(pop 1)
; Valid
(get-info :rlimit)
(reset)
(set-option :rlimit 0)
; did a full reset
(reset)
(set-option :print-success false)
(set-info :smt-lib-version 2.6)
(set-option :auto_config false)
(set-option :type_check true)
(set-option :smt.case_split 3)
(set-option :smt.qi.eager_threshold 100)
(set-option :smt.delay_units true)
(set-option :smt.arith.solver 2)
(set-option :smt.mbqi false)
(set-option :model.compact false)
(set-option :model.v2 true)
(set-option :pp.bv_literals false)
; done setting options


(set-info :category "industrial")
(declare-sort |T@U| 0)
(declare-sort |T@T| 0)
(declare-fun real_pow (Real Real) Real)
(declare-fun UOrdering2 (|T@U| |T@U|) Bool)
(declare-fun UOrdering3 (|T@T| |T@U| |T@U|) Bool)
(declare-fun tickleBool (Bool) Bool)
(assert (and (tickleBool true) (tickleBool false)))
(declare-fun $generated (T@U) Int)
(declare-fun $generated@@0 (T@U) Bool)
(declare-fun $generated@@1 (T@T) Int)
(declare-fun $generated@@2 () T@T)
(declare-fun $generated@@3 () T@T)
(declare-fun $generated@@4 () T@T)
(declare-fun $generated@@5 () T@T)
(declare-fun $generated@@6 () T@T)
(declare-fun $generated@@7 () T@T)
(declare-fun $generated@@8 (Int) T@U)
(declare-fun type (T@U) T@T)
(declare-fun $generated@@9 (Real) T@U)
(declare-fun $generated@@10 (T@U) Real)
(declare-fun $generated@@11 (Bool) T@U)
(declare-fun $generated@@12 (RoundingMode) T@U)
(declare-fun $generated@@13 (T@U) RoundingMode)
(declare-fun $generated@@14 (String) T@U)
(declare-fun $generated@@15 (T@U) String)
(declare-fun $generated@@16 ((RegEx String)) T@U)
(declare-fun $generated@@17 (T@U) (RegEx String))
(declare-fun $generated@@44 () T@U)
(declare-fun $generated@@45 () T@U)
(declare-fun $generated@@46 () T@U)
(declare-fun $generated@@47 () T@U)
(declare-fun $generated@@48 () T@U)
(declare-fun $generated@@49 () T@U)
(declare-fun $generated@@50 () T@U)
(declare-fun $generated@@51 () T@U)
(declare-fun $generated@@52 () T@U)
(declare-fun $generated@@53 () T@U)
(declare-fun $generated@@54 () T@U)
(declare-fun $generated@@55 () T@U)
(declare-fun $generated@@56 () T@U)
(declare-fun $generated@@57 () T@U)
(declare-fun $generated@@58 () T@U)
(declare-fun $generated@@59 () T@U)
(declare-fun $generated@@60 () T@U)
(declare-fun $generated@@61 () T@U)
(declare-fun $generated@@62 () T@U)
(declare-fun $generated@@63 () T@U)
(declare-fun $generated@@64 () T@U)
(declare-fun $generated@@65 () T@U)
(declare-fun $generated@@66 () T@U)
(declare-fun $generated@@67 () T@U)
(declare-fun $generated@@68 () T@U)
(declare-fun $generated@@69 () T@U)
(declare-fun $generated@@70 () T@T)
(declare-fun $generated@@71 () T@T)
(declare-fun $generated@@72 (T@T) T@T)
(declare-fun $generated@@73 (T@T) T@T)
(declare-fun $generated@@74 () T@T)
(declare-fun $generated@@75 () T@T)
(declare-fun $generated@@76 () T@T)
(declare-fun $generated@@77 () T@T)
(declare-fun $generated@@80 (T@U) Int)
(declare-fun $generated@@81 (T@U) T@U)
(declare-fun $generated@@83 (T@U) T@U)
(declare-fun $generated@@85 (T@U T@U T@U) Bool)
(declare-fun $generated@@86 (Int) T@U)
(declare-fun $generated@@87 (T@T T@T) T@T)
(declare-fun $generated@@88 () T@T)
(declare-fun $generated@@89 () T@T)
(declare-fun $generated@@90 (T@T) T@T)
(declare-fun $generated@@91 (T@T) T@T)
(declare-fun $generated@@92 (T@U T@U) T@U)
(declare-fun $generated@@93 (T@U T@U T@U) T@U)
(declare-fun $generated@@94 (T@U T@U) T@U)
(declare-fun $generated@@95 (T@U T@U T@U) T@U)
(declare-fun $generated@@143 (T@U T@U) Bool)
(declare-fun $generated@@147 (T@U) Int)
(declare-fun $generated@@148 (T@U T@U) Bool)
(declare-fun $generated@@150 (T@U) Int)
(declare-fun $generated@@152 (T@U) Int)
(declare-fun $generated@@154 () T@U)
(declare-fun $generated@@155 () T@U)
(declare-fun $generated@@158 (T@U) Bool)
(declare-fun $generated@@165 () T@U)
(declare-fun $generated@@166 (T@U) T@U)
(declare-fun $generated@@171 (T@U) Bool)
(declare-fun $generated@@172 (T@U T@U) T@U)
(declare-fun $generated@@173 () T@T)
(declare-fun $generated@@179 (T@U T@U) Bool)
(declare-fun $generated@@180 (T@U) T@U)
(declare-fun $generated@@181 (T@U) T@U)
(declare-fun $generated@@182 () T@T)
(declare-fun $generated@@187 (T@U) T@U)
(declare-fun $generated@@188 (T@U) Bool)
(declare-fun $generated@@193 (T@U T@U T@U) T@U)
(declare-fun $generated@@194 (T@U T@U T@U Bool) T@U)
(declare-fun $generated@@195 (T@T T@T) T@T)
(declare-fun $generated@@196 (T@T) T@T)
(declare-fun $generated@@197 (T@T) T@T)
(declare-fun $generated@@198 (T@U T@U T@U T@U) T@U)
(declare-fun $generated@@249 () T@U)
(declare-fun $generated@@252 (T@U T@U) T@U)
(declare-fun $generated@@253 (T@U T@U) Bool)
(declare-fun $generated@@260 (T@T T@U T@U) T@U)
(declare-fun $generated@@264 (T@U) Bool)
(declare-fun $generated@@267 (T@U) T@U)
(declare-fun $generated@@272 (T@U) T@U)
(declare-fun $generated@@277 (T@U) T@U)
(declare-fun $generated@@281 (T@U T@U T@U) Bool)
(declare-fun $generated@@287 (T@U) T@U)
(declare-fun $generated@@293 (T@T) T@U)
(declare-fun $generated@@294 (T@U) Int)
(declare-fun $generated@@295 (T@T) T@T)
(declare-fun $generated@@296 (T@T) T@T)
(declare-fun $generated@@301 (T@U) T@U)
(declare-fun $generated@@316 (T@U) Int)
(declare-fun $generated@@317 (T@T) T@U)
(declare-fun $generated@@322 (T@U) T@U)
(declare-fun $generated@@323 (T@T T@T) T@U)
(declare-fun $generated@@324 (T@T T@T) T@T)
(declare-fun $generated@@325 (T@T) T@T)
(declare-fun $generated@@326 (T@T) T@T)
(declare-fun $generated@@340 (T@U) T@U)
(declare-fun $generated@@341 (T@T T@T) T@U)
(declare-fun $generated@@342 (T@T T@T) T@T)
(declare-fun $generated@@343 (T@T) T@T)
(declare-fun $generated@@344 (T@T) T@T)
(declare-fun $generated@@358 (T@U T@U) Bool)
(declare-fun $generated@@367 (T@T T@U) T@U)
(declare-fun $generated@@377 (T@U) T@U)
(declare-fun $generated@@388 (T@U) T@U)
(declare-fun $generated@@408 (T@U) T@U)
(declare-fun $generated@@409 (T@U) T@U)
(declare-fun $generated@@416 (T@U) T@U)
(declare-fun $generated@@417 (T@U) T@U)
(declare-fun $generated@@434 (T@U T@U) T@U)
(declare-fun $generated@@442 (T@U T@U) T@U)
(declare-fun $generated@@453 (T@T) T@U)
(declare-fun $generated@@474 (T@U) T@U)
(declare-fun $generated@@482 () T@T)
(declare-fun $generated@@490 (T@U) T@U)
(declare-fun $generated@@494 (T@U) T@U)
(declare-fun $generated@@500 (T@U) T@U)
(declare-fun $generated@@504 (T@U) T@U)
(declare-fun $generated@@512 (T@U) T@U)
(declare-fun $generated@@516 (T@U) T@U)
(declare-fun $generated@@524 (T@U) T@U)
(declare-fun $generated@@525 (T@U Int) T@U)
(declare-fun $generated@@534 (T@U) Int)
(declare-fun $generated@@536 (T@U) T@U)
(declare-fun $generated@@540 (T@U) T@U)
(declare-fun $generated@@544 (T@U) T@U)
(declare-fun $generated@@548 (T@U) T@U)
(declare-fun $generated@@562 (T@U) Int)
(declare-fun $generated@@563 (T@U) Int)
(declare-fun $generated@@579 (T@U) T@U)
(declare-fun $generated@@627 (T@U) Int)
(assert  (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (= ($generated@@1 $generated@@2) 0) (= ($generated@@1 $generated@@3) 1)) (= ($generated@@1 $generated@@4) 2)) (= ($generated@@1 $generated@@5) 3)) (= ($generated@@1 $generated@@6) 4)) (= ($generated@@1 $generated@@7) 5)) (forall (($generated@@18 Int) ) (! (= ($generated ($generated@@8 $generated@@18)) $generated@@18)
 :pattern ( ($generated@@8 $generated@@18))
))) (forall (($generated@@19 T@U) ) (!  (=> (= (type $generated@@19) $generated@@2) (= ($generated@@8 ($generated $generated@@19)) $generated@@19))
 :pattern ( ($generated $generated@@19))
))) (forall (($generated@@20 Int) ) (! (= (type ($generated@@8 $generated@@20)) $generated@@2)
 :pattern ( ($generated@@8 $generated@@20))
))) (forall (($generated@@21 Real) ) (! (= ($generated@@10 ($generated@@9 $generated@@21)) $generated@@21)
 :pattern ( ($generated@@9 $generated@@21))
))) (forall (($generated@@22 T@U) ) (!  (=> (= (type $generated@@22) $generated@@3) (= ($generated@@9 ($generated@@10 $generated@@22)) $generated@@22))
 :pattern ( ($generated@@10 $generated@@22))
))) (forall (($generated@@23 Real) ) (! (= (type ($generated@@9 $generated@@23)) $generated@@3)
 :pattern ( ($generated@@9 $generated@@23))
))) (forall (($generated@@24 Bool) ) (! (= ($generated@@0 ($generated@@11 $generated@@24)) $generated@@24)
 :pattern ( ($generated@@11 $generated@@24))
))) (forall (($generated@@25 T@U) ) (!  (=> (= (type $generated@@25) $generated@@4) (= ($generated@@11 ($generated@@0 $generated@@25)) $generated@@25))
 :pattern ( ($generated@@0 $generated@@25))
))) (forall (($generated@@26 Bool) ) (! (= (type ($generated@@11 $generated@@26)) $generated@@4)
 :pattern ( ($generated@@11 $generated@@26))
))) (forall (($generated@@27 RoundingMode) ) (! (= ($generated@@13 ($generated@@12 $generated@@27)) $generated@@27)
 :pattern ( ($generated@@12 $generated@@27))
))) (forall (($generated@@28 T@U) ) (!  (=> (= (type $generated@@28) $generated@@5) (= ($generated@@12 ($generated@@13 $generated@@28)) $generated@@28))
 :pattern ( ($generated@@13 $generated@@28))
))) (forall (($generated@@29 RoundingMode) ) (! (= (type ($generated@@12 $generated@@29)) $generated@@5)
 :pattern ( ($generated@@12 $generated@@29))
))) (forall (($generated@@30 String) ) (! (= ($generated@@15 ($generated@@14 $generated@@30)) $generated@@30)
 :pattern ( ($generated@@14 $generated@@30))
))) (forall (($generated@@31 T@U) ) (!  (=> (= (type $generated@@31) $generated@@6) (= ($generated@@14 ($generated@@15 $generated@@31)) $generated@@31))
 :pattern ( ($generated@@15 $generated@@31))
))) (forall (($generated@@32 String) ) (! (= (type ($generated@@14 $generated@@32)) $generated@@6)
 :pattern ( ($generated@@14 $generated@@32))
))) (forall (($generated@@33 (RegEx String)) ) (! (= ($generated@@17 ($generated@@16 $generated@@33)) $generated@@33)
 :pattern ( ($generated@@16 $generated@@33))
))) (forall (($generated@@34 T@U) ) (!  (=> (= (type $generated@@34) $generated@@7) (= ($generated@@16 ($generated@@17 $generated@@34)) $generated@@34))
 :pattern ( ($generated@@17 $generated@@34))
))) (forall (($generated@@35 (RegEx String)) ) (! (= (type ($generated@@16 $generated@@35)) $generated@@7)
 :pattern ( ($generated@@16 $generated@@35))
))))
(assert (forall (($generated@@36 T@U) ) (! (UOrdering2 $generated@@36 $generated@@36)
 :no-pattern ($generated $generated@@36)
 :no-pattern ($generated@@0 $generated@@36)
)))
(assert (forall (($generated@@37 T@U) ($generated@@38 T@U) ($generated@@39 T@U) ) (! (let (($generated@@40 (type $generated@@37)))
 (=> (and (and (= (type $generated@@38) $generated@@40) (= (type $generated@@39) $generated@@40)) (and (UOrdering2 $generated@@37 $generated@@38) (UOrdering2 $generated@@38 $generated@@39))) (UOrdering2 $generated@@37 $generated@@39)))
 :pattern ( (UOrdering2 $generated@@37 $generated@@38) (UOrdering2 $generated@@38 $generated@@39))
)))
(assert (forall (($generated@@41 T@U) ($generated@@42 T@U) ) (! (let (($generated@@43 (type $generated@@41)))
 (=> (= (type $generated@@42) $generated@@43) (=> (and (UOrdering2 $generated@@41 $generated@@42) (UOrdering2 $generated@@42 $generated@@41)) (= $generated@@41 $generated@@42))))
 :pattern ( (UOrdering2 $generated@@41 $generated@@42) (UOrdering2 $generated@@42 $generated@@41))
)))
(assert  (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (= ($generated@@1 $generated@@70) 6) (= (type $generated@@44) $generated@@70)) (= (type $generated@@45) $generated@@70)) (= (type $generated@@46) $generated@@70)) (= (type $generated@@47) $generated@@70)) (= (type $generated@@48) $generated@@70)) (= ($generated@@1 $generated@@71) 7)) (= (type $generated@@49) $generated@@71)) (= (type $generated@@50) $generated@@71)) (= (type $generated@@51) $generated@@71)) (= (type $generated@@52) $generated@@71)) (= (type $generated@@53) $generated@@71)) (= (type $generated@@54) $generated@@71)) (= (type $generated@@55) $generated@@71)) (= (type $generated@@56) $generated@@71)) (= (type $generated@@57) $generated@@71)) (= (type $generated@@58) $generated@@71)) (= (type $generated@@59) $generated@@71)) (forall (($generated@@78 T@T) ) (= ($generated@@1 ($generated@@72 $generated@@78)) 8))) (forall (($generated@@79 T@T) ) (! (= ($generated@@73 ($generated@@72 $generated@@79)) $generated@@79)
 :pattern ( ($generated@@72 $generated@@79))
))) (= (type $generated@@60) ($generated@@72 $generated@@4))) (= ($generated@@1 $generated@@74) 9)) (= (type $generated@@61) $generated@@74)) (= ($generated@@1 $generated@@75) 10)) (= (type $generated@@62) $generated@@75)) (= (type $generated@@63) $generated@@71)) (= (type $generated@@64) $generated@@71)) (= ($generated@@1 $generated@@76) 11)) (= (type $generated@@65) $generated@@76)) (= (type $generated@@66) $generated@@71)) (= ($generated@@1 $generated@@77) 12)) (= (type $generated@@67) $generated@@77)) (= (type $generated@@68) $generated@@77)) (= (type $generated@@69) $generated@@74)))
(assert (distinct $generated@@44 $generated@@45 $generated@@46 $generated@@47 $generated@@48 $generated@@49 $generated@@50 $generated@@51 $generated@@52 $generated@@53 $generated@@54 $generated@@55 $generated@@56 $generated@@57 $generated@@58 $generated@@59 $generated@@60 $generated@@61 $generated@@62 $generated@@63 $generated@@64 $generated@@65 $generated@@66 $generated@@67 $generated@@68 $generated@@69)
)
(assert (= ($generated@@80 $generated@@60) 0))
(assert (forall (($generated@@82 T@U) ) (! (= (type ($generated@@81 $generated@@82)) $generated@@71)
 :pattern ( ($generated@@81 $generated@@82))
)))
(assert (= ($generated@@81 $generated@@44) $generated@@49))
(assert (= ($generated@@81 $generated@@45) $generated@@50))
(assert (= ($generated@@81 $generated@@46) $generated@@51))
(assert (= ($generated@@81 $generated@@47) $generated@@52))
(assert (= ($generated@@81 $generated@@48) $generated@@53))
(assert (forall (($generated@@84 T@U) ) (! (= (type ($generated@@83 $generated@@84)) $generated@@74)
 :pattern ( ($generated@@83 $generated@@84))
)))
(assert (= ($generated@@83 $generated@@60) $generated@@61))
(assert  (and (and (and (and (and (and (and (and (and (and (and (and (and (forall (($generated@@96 T@T) ($generated@@97 T@T) ) (= ($generated@@1 ($generated@@87 $generated@@96 $generated@@97)) 13)) (forall (($generated@@98 T@T) ($generated@@99 T@T) ) (! (= ($generated@@90 ($generated@@87 $generated@@98 $generated@@99)) $generated@@98)
 :pattern ( ($generated@@87 $generated@@98 $generated@@99))
))) (forall (($generated@@100 T@T) ($generated@@101 T@T) ) (! (= ($generated@@91 ($generated@@87 $generated@@100 $generated@@101)) $generated@@101)
 :pattern ( ($generated@@87 $generated@@100 $generated@@101))
))) (forall (($generated@@102 T@U) ($generated@@103 T@U) ) (! (let (($generated@@104 ($generated@@91 (type $generated@@102))))
(= (type ($generated@@92 $generated@@102 $generated@@103)) $generated@@104))
 :pattern ( ($generated@@92 $generated@@102 $generated@@103))
))) (forall (($generated@@105 T@U) ($generated@@106 T@U) ($generated@@107 T@U) ) (! (let (($generated@@108 (type $generated@@107)))
(let (($generated@@109 (type $generated@@106)))
(= (type ($generated@@93 $generated@@105 $generated@@106 $generated@@107)) ($generated@@87 $generated@@109 $generated@@108))))
 :pattern ( ($generated@@93 $generated@@105 $generated@@106 $generated@@107))
))) (forall (($generated@@110 T@U) ($generated@@111 T@U) ($generated@@112 T@U) ) (! (let (($generated@@113 ($generated@@91 (type $generated@@110))))
 (=> (= (type $generated@@112) $generated@@113) (= ($generated@@92 ($generated@@93 $generated@@110 $generated@@111 $generated@@112) $generated@@111) $generated@@112)))
 :weight 0
))) (and (forall (($generated@@114 T@U) ($generated@@115 T@U) ($generated@@116 T@U) ($generated@@117 T@U) ) (!  (or (= $generated@@116 $generated@@117) (= ($generated@@92 ($generated@@93 $generated@@115 $generated@@116 $generated@@114) $generated@@117) ($generated@@92 $generated@@115 $generated@@117)))
 :weight 0
)) (forall (($generated@@118 T@U) ($generated@@119 T@U) ($generated@@120 T@U) ($generated@@121 T@U) ) (!  (or true (= ($generated@@92 ($generated@@93 $generated@@119 $generated@@120 $generated@@118) $generated@@121) ($generated@@92 $generated@@119 $generated@@121)))
 :weight 0
)))) (= ($generated@@1 $generated@@88) 14)) (forall (($generated@@122 T@U) ($generated@@123 T@U) ) (! (let (($generated@@124 ($generated@@73 (type $generated@@123))))
(= (type ($generated@@94 $generated@@122 $generated@@123)) $generated@@124))
 :pattern ( ($generated@@94 $generated@@122 $generated@@123))
))) (= ($generated@@1 $generated@@89) 15)) (forall (($generated@@125 T@U) ($generated@@126 T@U) ($generated@@127 T@U) ) (! (= (type ($generated@@95 $generated@@125 $generated@@126 $generated@@127)) $generated@@89)
 :pattern ( ($generated@@95 $generated@@125 $generated@@126 $generated@@127))
))) (forall (($generated@@128 T@U) ($generated@@129 T@U) ($generated@@130 T@U) ) (! (let (($generated@@131 ($generated@@73 (type $generated@@129))))
 (=> (= (type $generated@@130) $generated@@131) (= ($generated@@94 ($generated@@95 $generated@@128 $generated@@129 $generated@@130) $generated@@129) $generated@@130)))
 :weight 0
))) (and (forall (($generated@@132 T@U) ($generated@@133 T@U) ($generated@@134 T@U) ($generated@@135 T@U) ) (!  (or (= $generated@@134 $generated@@135) (= ($generated@@94 ($generated@@95 $generated@@133 $generated@@134 $generated@@132) $generated@@135) ($generated@@94 $generated@@133 $generated@@135)))
 :weight 0
)) (forall (($generated@@136 T@U) ($generated@@137 T@U) ($generated@@138 T@U) ($generated@@139 T@U) ) (!  (or true (= ($generated@@94 ($generated@@95 $generated@@137 $generated@@138 $generated@@136) $generated@@139) ($generated@@94 $generated@@137 $generated@@139)))
 :weight 0
)))) (forall (($generated@@140 Int) ) (! (= (type ($generated@@86 $generated@@140)) $generated@@70)
 :pattern ( ($generated@@86 $generated@@140))
))))
(assert (forall (($generated@@141 T@U) ($generated@@142 T@U) ) (!  (=> (and (= (type $generated@@141) $generated@@2) (= (type $generated@@142) ($generated@@87 $generated@@88 $generated@@89))) ($generated@@85 $generated@@141 ($generated@@86 0) $generated@@142))
 :pattern ( ($generated@@85 $generated@@141 ($generated@@86 0) $generated@@142))
)))
(assert (forall (($generated@@144 T@U) ($generated@@145 T@U) ) (!  (=> (and (and (= (type $generated@@144) ($generated@@87 $generated@@88 $generated@@89)) (= (type $generated@@145) ($generated@@87 $generated@@88 $generated@@89))) ($generated@@143 $generated@@144 $generated@@145)) (forall (($generated@@146 T@U) ) (!  (=> (and (= (type $generated@@146) $generated@@88) ($generated@@0 ($generated@@94 ($generated@@92 $generated@@144 $generated@@146) $generated@@60))) ($generated@@0 ($generated@@94 ($generated@@92 $generated@@145 $generated@@146) $generated@@60)))
 :pattern ( ($generated@@94 ($generated@@92 $generated@@145 $generated@@146) $generated@@60))
)))
 :pattern ( ($generated@@143 $generated@@144 $generated@@145))
)))
(assert (forall (($generated@@149 T@U) ) (!  (=> (= (type $generated@@149) $generated@@88) ($generated@@148 ($generated@@8 ($generated@@147 $generated@@149)) $generated@@46))
 :pattern ( ($generated@@147 $generated@@149))
)))
(assert (forall (($generated@@151 T@U) ) (!  (=> (= (type $generated@@151) $generated@@88) ($generated@@148 ($generated@@8 ($generated@@150 $generated@@151)) $generated@@46))
 :pattern ( ($generated@@150 $generated@@151))
)))
(assert (forall (($generated@@153 T@U) ) (!  (=> (= (type $generated@@153) $generated@@88) ($generated@@148 ($generated@@8 ($generated@@152 $generated@@153)) $generated@@46))
 :pattern ( ($generated@@152 $generated@@153))
)))
(assert  (and (= (type $generated@@154) $generated@@70) (= (type $generated@@155) $generated@@88)))
(assert (forall (($generated@@156 T@U) ($generated@@157 T@U) ) (!  (=> (and (= (type $generated@@156) $generated@@88) (= (type $generated@@157) ($generated@@87 $generated@@88 $generated@@89))) (= ($generated@@85 $generated@@156 $generated@@154 $generated@@157)  (or (= $generated@@156 $generated@@155) ($generated@@0 ($generated@@94 ($generated@@92 $generated@@157 $generated@@156) $generated@@60)))))
 :pattern ( ($generated@@85 $generated@@156 $generated@@154 $generated@@157))
)))
(assert (forall (($generated@@159 T@U) ($generated@@160 T@U) ) (!  (=> (and (and (= (type $generated@@159) ($generated@@87 $generated@@88 $generated@@89)) (= (type $generated@@160) $generated@@88)) (and ($generated@@158 $generated@@159) ($generated@@0 ($generated@@94 ($generated@@92 $generated@@159 $generated@@160) $generated@@60)))) ($generated@@85 ($generated@@8 ($generated@@147 $generated@@160)) $generated@@46 $generated@@159))
 :pattern ( ($generated@@147 $generated@@160) ($generated@@94 ($generated@@92 $generated@@159 $generated@@160) $generated@@60))
)))
(assert (forall (($generated@@161 T@U) ($generated@@162 T@U) ) (!  (=> (and (and (= (type $generated@@161) ($generated@@87 $generated@@88 $generated@@89)) (= (type $generated@@162) $generated@@88)) (and ($generated@@158 $generated@@161) ($generated@@0 ($generated@@94 ($generated@@92 $generated@@161 $generated@@162) $generated@@60)))) ($generated@@85 ($generated@@8 ($generated@@150 $generated@@162)) $generated@@46 $generated@@161))
 :pattern ( ($generated@@150 $generated@@162) ($generated@@94 ($generated@@92 $generated@@161 $generated@@162) $generated@@60))
)))
(assert (forall (($generated@@163 T@U) ($generated@@164 T@U) ) (!  (=> (and (and (= (type $generated@@163) ($generated@@87 $generated@@88 $generated@@89)) (= (type $generated@@164) $generated@@88)) (and ($generated@@158 $generated@@163) ($generated@@0 ($generated@@94 ($generated@@92 $generated@@163 $generated@@164) $generated@@60)))) ($generated@@85 ($generated@@8 ($generated@@152 $generated@@164)) $generated@@46 $generated@@163))
 :pattern ( ($generated@@152 $generated@@164) ($generated@@94 ($generated@@92 $generated@@163 $generated@@164) $generated@@60))
)))
(assert  (and (= (type $generated@@165) ($generated@@72 $generated@@2)) (forall (($generated@@167 T@U) ) (! (= (type ($generated@@166 $generated@@167)) $generated@@70)
 :pattern ( ($generated@@166 $generated@@167))
))))
(assert (forall (($generated@@168 T@U) ($generated@@169 T@U) ) (!  (=> (and (and (= (type $generated@@168) ($generated@@87 $generated@@88 $generated@@89)) (= (type $generated@@169) $generated@@88)) (and ($generated@@158 $generated@@168) (and (not (= $generated@@169 $generated@@155)) (= ($generated@@166 $generated@@169) $generated@@154)))) ($generated@@148 ($generated@@94 ($generated@@92 $generated@@168 $generated@@169) $generated@@165) $generated@@46))
 :pattern ( ($generated@@94 ($generated@@92 $generated@@168 $generated@@169) $generated@@165))
)))
(assert (forall (($generated@@170 T@U) ) (!  (=> (= (type $generated@@170) $generated@@2) ($generated@@148 $generated@@170 ($generated@@86 0)))
 :pattern ( ($generated@@148 $generated@@170 ($generated@@86 0)))
)))
(assert  (and (= ($generated@@1 $generated@@173) 16) (forall (($generated@@174 T@U) ($generated@@175 T@U) ) (! (= (type ($generated@@172 $generated@@174 $generated@@175)) $generated@@70)
 :pattern ( ($generated@@172 $generated@@174 $generated@@175))
))))
(assert (forall (($generated@@176 T@U) ($generated@@177 T@U) ($generated@@178 T@U) ) (!  (=> (and (and (and (= (type $generated@@176) $generated@@70) (= (type $generated@@177) $generated@@70)) (= (type $generated@@178) $generated@@173)) ($generated@@148 $generated@@178 ($generated@@172 $generated@@176 $generated@@177))) ($generated@@171 $generated@@178))
 :pattern ( ($generated@@171 $generated@@178) ($generated@@148 $generated@@178 ($generated@@172 $generated@@176 $generated@@177)))
)))
(assert  (and (and (= ($generated@@1 $generated@@182) 17) (forall (($generated@@183 T@U) ) (! (= (type ($generated@@180 $generated@@183)) $generated@@182)
 :pattern ( ($generated@@180 $generated@@183))
))) (forall (($generated@@184 T@U) ) (! (= (type ($generated@@181 $generated@@184)) $generated@@182)
 :pattern ( ($generated@@181 $generated@@184))
))))
(assert (forall (($generated@@185 T@U) ($generated@@186 T@U) ) (!  (=> (and (and (= (type $generated@@185) $generated@@173) (= (type $generated@@186) $generated@@173)) true) (= ($generated@@179 $generated@@185 $generated@@186)  (and (= ($generated@@180 $generated@@185) ($generated@@180 $generated@@186)) (= ($generated@@181 $generated@@185) ($generated@@181 $generated@@186)))))
 :pattern ( ($generated@@179 $generated@@185 $generated@@186))
)))
(assert (forall (($generated@@189 T@U) ) (! (= (type ($generated@@187 $generated@@189)) $generated@@70)
 :pattern ( ($generated@@187 $generated@@189))
)))
(assert (forall (($generated@@190 T@U) ($generated@@191 T@U) ) (!  (=> (and (and (= (type $generated@@190) ($generated@@87 $generated@@182 $generated@@2)) (= (type $generated@@191) $generated@@70)) ($generated@@148 $generated@@190 ($generated@@187 $generated@@191))) ($generated@@188 $generated@@190))
 :pattern ( ($generated@@148 $generated@@190 ($generated@@187 $generated@@191)))
)))
(assert (forall (($generated@@192 T@U) ) (!  (=> (= (type $generated@@192) $generated@@88) (= ($generated@@148 $generated@@192 $generated@@154)  (or (= $generated@@192 $generated@@155) (= ($generated@@166 $generated@@192) $generated@@154))))
 :pattern ( ($generated@@148 $generated@@192 $generated@@154))
)))
(assert  (and (and (and (and (and (and (and (forall (($generated@@199 T@T) ($generated@@200 T@T) ) (= ($generated@@1 ($generated@@195 $generated@@199 $generated@@200)) 18)) (forall (($generated@@201 T@T) ($generated@@202 T@T) ) (! (= ($generated@@196 ($generated@@195 $generated@@201 $generated@@202)) $generated@@201)
 :pattern ( ($generated@@195 $generated@@201 $generated@@202))
))) (forall (($generated@@203 T@T) ($generated@@204 T@T) ) (! (= ($generated@@197 ($generated@@195 $generated@@203 $generated@@204)) $generated@@204)
 :pattern ( ($generated@@195 $generated@@203 $generated@@204))
))) (forall (($generated@@205 T@U) ($generated@@206 T@U) ($generated@@207 T@U) ) (! (let (($generated@@208 ($generated@@197 (type $generated@@205))))
(= (type ($generated@@193 $generated@@205 $generated@@206 $generated@@207)) $generated@@208))
 :pattern ( ($generated@@193 $generated@@205 $generated@@206 $generated@@207))
))) (forall (($generated@@209 T@U) ($generated@@210 T@U) ($generated@@211 T@U) ($generated@@212 T@U) ) (! (let (($generated@@213 (type $generated@@212)))
(let (($generated@@214 (type $generated@@210)))
(= (type ($generated@@198 $generated@@209 $generated@@210 $generated@@211 $generated@@212)) ($generated@@195 $generated@@214 $generated@@213))))
 :pattern ( ($generated@@198 $generated@@209 $generated@@210 $generated@@211 $generated@@212))
))) (forall (($generated@@215 T@U) ($generated@@216 T@U) ($generated@@217 T@U) ($generated@@218 T@U) ) (! (let (($generated@@219 ($generated@@197 (type $generated@@215))))
 (=> (= (type $generated@@218) $generated@@219) (= ($generated@@193 ($generated@@198 $generated@@215 $generated@@216 $generated@@217 $generated@@218) $generated@@216 $generated@@217) $generated@@218)))
 :weight 0
))) (and (and (forall (($generated@@220 T@U) ($generated@@221 T@U) ($generated@@222 T@U) ($generated@@223 T@U) ($generated@@224 T@U) ($generated@@225 T@U) ) (!  (or (= $generated@@222 $generated@@224) (= ($generated@@193 ($generated@@198 $generated@@221 $generated@@222 $generated@@223 $generated@@220) $generated@@224 $generated@@225) ($generated@@193 $generated@@221 $generated@@224 $generated@@225)))
 :weight 0
)) (forall (($generated@@226 T@U) ($generated@@227 T@U) ($generated@@228 T@U) ($generated@@229 T@U) ($generated@@230 T@U) ($generated@@231 T@U) ) (!  (or (= $generated@@229 $generated@@231) (= ($generated@@193 ($generated@@198 $generated@@227 $generated@@228 $generated@@229 $generated@@226) $generated@@230 $generated@@231) ($generated@@193 $generated@@227 $generated@@230 $generated@@231)))
 :weight 0
))) (forall (($generated@@232 T@U) ($generated@@233 T@U) ($generated@@234 T@U) ($generated@@235 T@U) ($generated@@236 T@U) ($generated@@237 T@U) ) (!  (or true (= ($generated@@193 ($generated@@198 $generated@@233 $generated@@234 $generated@@235 $generated@@232) $generated@@236 $generated@@237) ($generated@@193 $generated@@233 $generated@@236 $generated@@237)))
 :weight 0
)))) (forall (($generated@@238 T@U) ($generated@@239 T@U) ($generated@@240 T@U) ($generated@@241 Bool) ) (! (= (type ($generated@@194 $generated@@238 $generated@@239 $generated@@240 $generated@@241)) ($generated@@195 $generated@@88 $generated@@4))
 :pattern ( ($generated@@194 $generated@@238 $generated@@239 $generated@@240 $generated@@241))
))))
(assert (forall (($generated@@242 T@U) ($generated@@243 T@U) ($generated@@244 T@U) ($generated@@245 Bool) ($generated@@246 T@U) ($generated@@247 T@U) ) (! (let (($generated@@248 ($generated@@73 (type $generated@@247))))
 (=> (and (and (and (and (= (type $generated@@242) $generated@@88) (= (type $generated@@243) ($generated@@87 $generated@@88 $generated@@89))) (= (type $generated@@244) ($generated@@72 $generated@@4))) (= (type $generated@@246) $generated@@88)) (= (type $generated@@247) ($generated@@72 $generated@@248))) (= ($generated@@0 ($generated@@193 ($generated@@194 $generated@@242 $generated@@243 $generated@@244 $generated@@245) $generated@@246 $generated@@247))  (=> (and (not (= $generated@@246 $generated@@242)) ($generated@@0 ($generated@@94 ($generated@@92 $generated@@243 $generated@@246) $generated@@244))) $generated@@245))))
 :pattern ( ($generated@@193 ($generated@@194 $generated@@242 $generated@@243 $generated@@244 $generated@@245) $generated@@246 $generated@@247))
)))
(assert (= (type $generated@@249) $generated@@70))
(assert (forall (($generated@@250 T@U) ($generated@@251 T@U) ) (!  (=> (and (= (type $generated@@250) $generated@@88) (= (type $generated@@251) ($generated@@87 $generated@@88 $generated@@89))) (= ($generated@@85 $generated@@250 $generated@@249 $generated@@251) ($generated@@85 $generated@@250 $generated@@154 $generated@@251)))
 :pattern ( ($generated@@85 $generated@@250 $generated@@249 $generated@@251))
)))
(assert (forall (($generated@@254 T@U) ($generated@@255 T@U) ) (! (= (type ($generated@@252 $generated@@254 $generated@@255)) $generated@@173)
 :pattern ( ($generated@@252 $generated@@254 $generated@@255))
)))
(assert (forall (($generated@@256 T@U) ($generated@@257 T@U) ($generated@@258 T@U) ($generated@@259 T@U) ) (!  (=> (and (and (and (= (type $generated@@256) $generated@@70) (= (type $generated@@257) $generated@@70)) (= (type $generated@@258) $generated@@182)) (= (type $generated@@259) $generated@@182)) (= ($generated@@148 ($generated@@252 $generated@@258 $generated@@259) ($generated@@172 $generated@@256 $generated@@257))  (and ($generated@@253 $generated@@258 $generated@@256) ($generated@@253 $generated@@259 $generated@@257))))
 :pattern ( ($generated@@148 ($generated@@252 $generated@@258 $generated@@259) ($generated@@172 $generated@@256 $generated@@257)))
)))
(assert (= ($generated@@80 $generated@@165) 0))
(assert (forall (($generated@@261 T@T) ($generated@@262 T@U) ($generated@@263 T@U) ) (! (= (type ($generated@@260 $generated@@261 $generated@@262 $generated@@263)) ($generated@@72 $generated@@261))
 :pattern ( ($generated@@260 $generated@@261 $generated@@262 $generated@@263))
)))
(assert (= ($generated@@260 $generated@@2 $generated@@65 $generated@@69) $generated@@165))
(assert  (not ($generated@@264 $generated@@165)))
(assert (forall (($generated@@265 T@U) ($generated@@266 T@U) ) (!  (=> (and (= (type $generated@@265) $generated@@173) (= (type $generated@@266) $generated@@173)) (= ($generated@@179 $generated@@265 $generated@@266) (= $generated@@265 $generated@@266)))
 :pattern ( ($generated@@179 $generated@@265 $generated@@266))
)))
(assert (forall (($generated@@268 T@U) ) (! (= (type ($generated@@267 $generated@@268)) $generated@@70)
 :pattern ( ($generated@@267 $generated@@268))
)))
(assert (forall (($generated@@269 T@U) ($generated@@270 T@U) ) (!  (=> (and (= (type $generated@@269) ($generated@@87 $generated@@182 $generated@@4)) (= (type $generated@@270) $generated@@70)) (= ($generated@@148 $generated@@269 ($generated@@267 $generated@@270)) (forall (($generated@@271 T@U) ) (!  (=> (and (= (type $generated@@271) $generated@@182) ($generated@@0 ($generated@@92 $generated@@269 $generated@@271))) ($generated@@253 $generated@@271 $generated@@270))
 :pattern ( ($generated@@92 $generated@@269 $generated@@271))
))))
 :pattern ( ($generated@@148 $generated@@269 ($generated@@267 $generated@@270)))
)))
(assert (forall (($generated@@273 T@U) ) (! (= (type ($generated@@272 $generated@@273)) $generated@@70)
 :pattern ( ($generated@@272 $generated@@273))
)))
(assert (forall (($generated@@274 T@U) ($generated@@275 T@U) ) (!  (=> (and (= (type $generated@@274) ($generated@@87 $generated@@182 $generated@@4)) (= (type $generated@@275) $generated@@70)) (= ($generated@@148 $generated@@274 ($generated@@272 $generated@@275)) (forall (($generated@@276 T@U) ) (!  (=> (and (= (type $generated@@276) $generated@@182) ($generated@@0 ($generated@@92 $generated@@274 $generated@@276))) ($generated@@253 $generated@@276 $generated@@275))
 :pattern ( ($generated@@92 $generated@@274 $generated@@276))
))))
 :pattern ( ($generated@@148 $generated@@274 ($generated@@272 $generated@@275)))
)))
(assert (forall (($generated@@278 T@U) ) (! (let (($generated@@279 (type $generated@@278)))
(= (type ($generated@@277 $generated@@278)) $generated@@279))
 :pattern ( ($generated@@277 $generated@@278))
)))
(assert (forall (($generated@@280 T@U) ) (! (= ($generated@@277 $generated@@280) $generated@@280)
 :pattern ( ($generated@@277 $generated@@280))
)))
(assert (forall (($generated@@282 T@U) ($generated@@283 T@U) ($generated@@284 T@U) ($generated@@285 T@U) ($generated@@286 T@U) ) (!  (=> (and (and (and (and (and (= (type $generated@@282) $generated@@70) (= (type $generated@@283) $generated@@70)) (= (type $generated@@284) $generated@@182)) (= (type $generated@@285) $generated@@182)) (= (type $generated@@286) ($generated@@87 $generated@@88 $generated@@89))) ($generated@@158 $generated@@286)) (= ($generated@@85 ($generated@@252 $generated@@284 $generated@@285) ($generated@@172 $generated@@282 $generated@@283) $generated@@286)  (and ($generated@@281 $generated@@284 $generated@@282 $generated@@286) ($generated@@281 $generated@@285 $generated@@283 $generated@@286))))
 :pattern ( ($generated@@85 ($generated@@252 $generated@@284 $generated@@285) ($generated@@172 $generated@@282 $generated@@283) $generated@@286))
)))
(assert (forall (($generated@@288 T@U) ) (! (= (type ($generated@@287 $generated@@288)) $generated@@75)
 :pattern ( ($generated@@287 $generated@@288))
)))
(assert (forall (($generated@@289 T@U) ) (!  (=> (= (type $generated@@289) $generated@@173) (= ($generated@@171 $generated@@289) (= ($generated@@287 $generated@@289) $generated@@62)))
 :pattern ( ($generated@@171 $generated@@289))
)))
(assert (forall (($generated@@290 T@U) ) (!  (=> (and (= (type $generated@@290) $generated@@173) ($generated@@171 $generated@@290)) (exists (($generated@@291 T@U) ($generated@@292 T@U) ) (!  (and (and (= (type $generated@@291) $generated@@182) (= (type $generated@@292) $generated@@182)) (= $generated@@290 ($generated@@252 $generated@@291 $generated@@292)))
 :no-pattern (type $generated@@291)
 :no-pattern (type $generated@@292)
 :no-pattern ($generated $generated@@291)
 :no-pattern ($generated@@0 $generated@@291)
 :no-pattern ($generated $generated@@292)
 :no-pattern ($generated@@0 $generated@@292)
)))
 :pattern ( ($generated@@171 $generated@@290))
)))
(assert  (and (and (forall (($generated@@297 T@T) ) (= ($generated@@1 ($generated@@295 $generated@@297)) 19)) (forall (($generated@@298 T@T) ) (! (= ($generated@@296 ($generated@@295 $generated@@298)) $generated@@298)
 :pattern ( ($generated@@295 $generated@@298))
))) (forall (($generated@@299 T@T) ) (! (= (type ($generated@@293 $generated@@299)) ($generated@@295 $generated@@299))
 :pattern ( ($generated@@293 $generated@@299))
))))
(assert (forall (($generated@@300 T@T) ) (! (= ($generated@@294 ($generated@@293 $generated@@300)) 0)
 :pattern ( ($generated@@293 $generated@@300))
)))
(assert ($generated@@264 $generated@@60))
(assert (forall (($generated@@302 T@U) ) (! (= (type ($generated@@301 $generated@@302)) $generated@@182)
 :pattern ( ($generated@@301 $generated@@302))
)))
(assert (forall (($generated@@303 T@U) ($generated@@304 T@U) ($generated@@305 T@U) ) (!  (=> (and (= (type $generated@@304) $generated@@70) (= (type $generated@@305) ($generated@@87 $generated@@88 $generated@@89))) (= ($generated@@281 ($generated@@301 $generated@@303) $generated@@304 $generated@@305) ($generated@@85 $generated@@303 $generated@@304 $generated@@305)))
 :pattern ( ($generated@@281 ($generated@@301 $generated@@303) $generated@@304 $generated@@305))
)))
(assert (forall (($generated@@306 T@U) ($generated@@307 T@U) ($generated@@308 T@U) ($generated@@309 T@U) ) (!  (=> (and (and (and (and (and (= (type $generated@@306) ($generated@@87 $generated@@88 $generated@@89)) (= (type $generated@@307) ($generated@@87 $generated@@88 $generated@@89))) (= (type $generated@@308) $generated@@182)) (= (type $generated@@309) $generated@@70)) ($generated@@143 $generated@@306 $generated@@307)) ($generated@@281 $generated@@308 $generated@@309 $generated@@306)) ($generated@@281 $generated@@308 $generated@@309 $generated@@307))
 :pattern ( ($generated@@143 $generated@@306 $generated@@307) ($generated@@281 $generated@@308 $generated@@309 $generated@@306))
)))
(assert (forall (($generated@@310 T@U) ($generated@@311 T@U) ($generated@@312 T@U) ($generated@@313 T@U) ) (!  (=> (and (and (and (and (= (type $generated@@310) ($generated@@87 $generated@@88 $generated@@89)) (= (type $generated@@311) ($generated@@87 $generated@@88 $generated@@89))) (= (type $generated@@313) $generated@@70)) ($generated@@143 $generated@@310 $generated@@311)) ($generated@@85 $generated@@312 $generated@@313 $generated@@310)) ($generated@@85 $generated@@312 $generated@@313 $generated@@311))
 :pattern ( ($generated@@143 $generated@@310 $generated@@311) ($generated@@85 $generated@@312 $generated@@313 $generated@@310))
)))
(assert (forall (($generated@@314 T@U) ($generated@@315 T@U) ) (!  (=> (and (= (type $generated@@314) ($generated@@87 $generated@@88 $generated@@89)) (= (type $generated@@315) $generated@@88)) (=> (and (and ($generated@@158 $generated@@314) (and (not (= $generated@@315 $generated@@155)) (= ($generated@@166 $generated@@315) $generated@@154))) ($generated@@0 ($generated@@94 ($generated@@92 $generated@@314 $generated@@315) $generated@@60))) ($generated@@85 ($generated@@94 ($generated@@92 $generated@@314 $generated@@315) $generated@@165) $generated@@46 $generated@@314)))
 :pattern ( ($generated@@94 ($generated@@92 $generated@@314 $generated@@315) $generated@@165))
)))
(assert (forall (($generated@@318 T@T) ) (! (= (type ($generated@@317 $generated@@318)) ($generated@@87 $generated@@318 $generated@@2))
 :pattern ( ($generated@@317 $generated@@318))
)))
(assert (forall (($generated@@319 T@U) ) (! (let (($generated@@320 ($generated@@90 (type $generated@@319))))
 (=> (= (type $generated@@319) ($generated@@87 $generated@@320 $generated@@2)) (and (= (= ($generated@@316 $generated@@319) 0) (= $generated@@319 ($generated@@317 $generated@@320))) (=> (not (= ($generated@@316 $generated@@319) 0)) (exists (($generated@@321 T@U) ) (!  (and (= (type $generated@@321) $generated@@320) (< 0 ($generated ($generated@@92 $generated@@319 $generated@@321))))
 :no-pattern (type $generated@@321)
 :no-pattern ($generated $generated@@321)
 :no-pattern ($generated@@0 $generated@@321)
))))))
 :pattern ( ($generated@@316 $generated@@319))
)))
(assert  (and (and (and (and (forall (($generated@@327 T@T) ($generated@@328 T@T) ) (= ($generated@@1 ($generated@@324 $generated@@327 $generated@@328)) 20)) (forall (($generated@@329 T@T) ($generated@@330 T@T) ) (! (= ($generated@@325 ($generated@@324 $generated@@329 $generated@@330)) $generated@@329)
 :pattern ( ($generated@@324 $generated@@329 $generated@@330))
))) (forall (($generated@@331 T@T) ($generated@@332 T@T) ) (! (= ($generated@@326 ($generated@@324 $generated@@331 $generated@@332)) $generated@@332)
 :pattern ( ($generated@@324 $generated@@331 $generated@@332))
))) (forall (($generated@@333 T@U) ) (! (let (($generated@@334 ($generated@@325 (type $generated@@333))))
(= (type ($generated@@322 $generated@@333)) ($generated@@87 $generated@@334 $generated@@4)))
 :pattern ( ($generated@@322 $generated@@333))
))) (forall (($generated@@335 T@T) ($generated@@336 T@T) ) (! (= (type ($generated@@323 $generated@@335 $generated@@336)) ($generated@@324 $generated@@335 $generated@@336))
 :pattern ( ($generated@@323 $generated@@335 $generated@@336))
))))
(assert (forall (($generated@@337 T@U) ($generated@@338 T@T) ) (! (let (($generated@@339 (type $generated@@337)))
 (not ($generated@@0 ($generated@@92 ($generated@@322 ($generated@@323 $generated@@339 $generated@@338)) $generated@@337))))
 :pattern ( (let (($generated@@339 (type $generated@@337)))
($generated@@92 ($generated@@322 ($generated@@323 $generated@@339 $generated@@338)) $generated@@337)))
)))
(assert  (and (and (and (and (forall (($generated@@345 T@T) ($generated@@346 T@T) ) (= ($generated@@1 ($generated@@342 $generated@@345 $generated@@346)) 21)) (forall (($generated@@347 T@T) ($generated@@348 T@T) ) (! (= ($generated@@343 ($generated@@342 $generated@@347 $generated@@348)) $generated@@347)
 :pattern ( ($generated@@342 $generated@@347 $generated@@348))
))) (forall (($generated@@349 T@T) ($generated@@350 T@T) ) (! (= ($generated@@344 ($generated@@342 $generated@@349 $generated@@350)) $generated@@350)
 :pattern ( ($generated@@342 $generated@@349 $generated@@350))
))) (forall (($generated@@351 T@U) ) (! (let (($generated@@352 ($generated@@343 (type $generated@@351))))
(= (type ($generated@@340 $generated@@351)) ($generated@@87 $generated@@352 $generated@@4)))
 :pattern ( ($generated@@340 $generated@@351))
))) (forall (($generated@@353 T@T) ($generated@@354 T@T) ) (! (= (type ($generated@@341 $generated@@353 $generated@@354)) ($generated@@342 $generated@@353 $generated@@354))
 :pattern ( ($generated@@341 $generated@@353 $generated@@354))
))))
(assert (forall (($generated@@355 T@U) ($generated@@356 T@T) ) (! (let (($generated@@357 (type $generated@@355)))
 (not ($generated@@0 ($generated@@92 ($generated@@340 ($generated@@341 $generated@@357 $generated@@356)) $generated@@355))))
 :pattern ( (let (($generated@@357 (type $generated@@355)))
($generated@@92 ($generated@@340 ($generated@@341 $generated@@357 $generated@@356)) $generated@@355)))
)))
(assert (forall (($generated@@359 T@U) ($generated@@360 T@U) ) (!  (=> (and (and (= (type $generated@@359) ($generated@@87 $generated@@88 $generated@@89)) (= (type $generated@@360) ($generated@@87 $generated@@88 $generated@@89))) ($generated@@358 $generated@@359 $generated@@360)) (and ($generated@@143 $generated@@359 $generated@@360) (forall (($generated@@361 T@U) ($generated@@362 T@U) ) (! (let (($generated@@363 ($generated@@73 (type $generated@@362))))
 (=> (and (and (= (type $generated@@361) $generated@@88) (= (type $generated@@362) ($generated@@72 $generated@@363))) (not ($generated@@264 $generated@@362))) (= ($generated@@94 ($generated@@92 $generated@@359 $generated@@361) $generated@@362) ($generated@@94 ($generated@@92 $generated@@360 $generated@@361) $generated@@362))))
 :pattern ( ($generated@@94 ($generated@@92 $generated@@360 $generated@@361) $generated@@362))
))))
 :pattern ( ($generated@@358 $generated@@359 $generated@@360))
)))
(assert (forall (($generated@@364 T@U) ) (! (let (($generated@@365 ($generated@@90 (type $generated@@364))))
 (=> (= (type $generated@@364) ($generated@@87 $generated@@365 $generated@@2)) (= ($generated@@188 $generated@@364) (forall (($generated@@366 T@U) ) (!  (=> (= (type $generated@@366) $generated@@365) (and (<= 0 ($generated ($generated@@92 $generated@@364 $generated@@366))) (<= ($generated ($generated@@92 $generated@@364 $generated@@366)) ($generated@@316 $generated@@364))))
 :pattern ( ($generated@@92 $generated@@364 $generated@@366))
)))))
 :pattern ( ($generated@@188 $generated@@364))
)))
(assert (forall (($generated@@368 T@T) ($generated@@369 T@U) ) (! (= (type ($generated@@367 $generated@@368 $generated@@369)) $generated@@368)
 :pattern ( ($generated@@367 $generated@@368 $generated@@369))
)))
(assert (forall (($generated@@370 T@U) ) (!  (=> (and (= (type $generated@@370) $generated@@182) ($generated@@253 $generated@@370 $generated@@249)) (and (= ($generated@@301 ($generated@@367 $generated@@88 $generated@@370)) $generated@@370) ($generated@@148 ($generated@@367 $generated@@88 $generated@@370) $generated@@249)))
 :pattern ( ($generated@@253 $generated@@370 $generated@@249))
)))
(assert (forall (($generated@@371 T@U) ) (!  (=> (and (= (type $generated@@371) $generated@@182) ($generated@@253 $generated@@371 $generated@@154)) (and (= ($generated@@301 ($generated@@367 $generated@@88 $generated@@371)) $generated@@371) ($generated@@148 ($generated@@367 $generated@@88 $generated@@371) $generated@@154)))
 :pattern ( ($generated@@253 $generated@@371 $generated@@154))
)))
(assert (forall (($generated@@372 T@U) ) (!  (=> (= (type $generated@@372) $generated@@88) (= ($generated@@148 $generated@@372 $generated@@249)  (and ($generated@@148 $generated@@372 $generated@@154) (not (= $generated@@372 $generated@@155)))))
 :pattern ( ($generated@@148 $generated@@372 $generated@@249))
)))
(assert (forall (($generated@@373 T@U) ) (! (let (($generated@@374 ($generated@@326 (type $generated@@373))))
(let (($generated@@375 ($generated@@325 (type $generated@@373))))
 (=> (= (type $generated@@373) ($generated@@324 $generated@@375 $generated@@374)) (or (= $generated@@373 ($generated@@323 $generated@@375 $generated@@374)) (exists (($generated@@376 T@U) ) (!  (and (= (type $generated@@376) $generated@@375) ($generated@@0 ($generated@@92 ($generated@@322 $generated@@373) $generated@@376)))
 :no-pattern (type $generated@@376)
 :no-pattern ($generated $generated@@376)
 :no-pattern ($generated@@0 $generated@@376)
))))))
 :pattern ( ($generated@@322 $generated@@373))
)))
(assert (forall (($generated@@378 T@U) ) (! (let (($generated@@379 ($generated@@326 (type $generated@@378))))
(= (type ($generated@@377 $generated@@378)) ($generated@@87 $generated@@379 $generated@@4)))
 :pattern ( ($generated@@377 $generated@@378))
)))
(assert (forall (($generated@@380 T@U) ) (! (let (($generated@@381 ($generated@@326 (type $generated@@380))))
(let (($generated@@382 ($generated@@325 (type $generated@@380))))
 (=> (= (type $generated@@380) ($generated@@324 $generated@@382 $generated@@381)) (or (= $generated@@380 ($generated@@323 $generated@@382 $generated@@381)) (exists (($generated@@383 T@U) ) (!  (and (= (type $generated@@383) $generated@@381) ($generated@@0 ($generated@@92 ($generated@@377 $generated@@380) $generated@@383)))
 :no-pattern (type $generated@@383)
 :no-pattern ($generated $generated@@383)
 :no-pattern ($generated@@0 $generated@@383)
))))))
 :pattern ( ($generated@@377 $generated@@380))
)))
(assert (forall (($generated@@384 T@U) ) (! (let (($generated@@385 ($generated@@344 (type $generated@@384))))
(let (($generated@@386 ($generated@@343 (type $generated@@384))))
 (=> (= (type $generated@@384) ($generated@@342 $generated@@386 $generated@@385)) (or (= $generated@@384 ($generated@@341 $generated@@386 $generated@@385)) (exists (($generated@@387 T@U) ) (!  (and (= (type $generated@@387) $generated@@386) ($generated@@0 ($generated@@92 ($generated@@340 $generated@@384) $generated@@387)))
 :no-pattern (type $generated@@387)
 :no-pattern ($generated $generated@@387)
 :no-pattern ($generated@@0 $generated@@387)
))))))
 :pattern ( ($generated@@340 $generated@@384))
)))
(assert (forall (($generated@@389 T@U) ) (! (let (($generated@@390 ($generated@@344 (type $generated@@389))))
(= (type ($generated@@388 $generated@@389)) ($generated@@87 $generated@@390 $generated@@4)))
 :pattern ( ($generated@@388 $generated@@389))
)))
(assert (forall (($generated@@391 T@U) ) (! (let (($generated@@392 ($generated@@344 (type $generated@@391))))
(let (($generated@@393 ($generated@@343 (type $generated@@391))))
 (=> (= (type $generated@@391) ($generated@@342 $generated@@393 $generated@@392)) (or (= $generated@@391 ($generated@@341 $generated@@393 $generated@@392)) (exists (($generated@@394 T@U) ) (!  (and (= (type $generated@@394) $generated@@392) ($generated@@0 ($generated@@92 ($generated@@388 $generated@@391) $generated@@394)))
 :no-pattern (type $generated@@394)
 :no-pattern ($generated $generated@@394)
 :no-pattern ($generated@@0 $generated@@394)
))))))
 :pattern ( ($generated@@388 $generated@@391))
)))
(assert (forall (($generated@@395 T@U) ($generated@@396 T@U) ) (!  (=> (and (= (type $generated@@395) ($generated@@87 $generated@@182 $generated@@2)) (= (type $generated@@396) $generated@@70)) (= ($generated@@148 $generated@@395 ($generated@@187 $generated@@396)) (forall (($generated@@397 T@U) ) (!  (=> (and (= (type $generated@@397) $generated@@182) (< 0 ($generated ($generated@@92 $generated@@395 $generated@@397)))) ($generated@@253 $generated@@397 $generated@@396))
 :pattern ( ($generated@@92 $generated@@395 $generated@@397))
))))
 :pattern ( ($generated@@148 $generated@@395 ($generated@@187 $generated@@396)))
)))
(assert (forall (($generated@@398 T@U) ($generated@@399 T@U) ($generated@@400 T@U) ) (!  (=> (and (and (= (type $generated@@398) ($generated@@87 $generated@@182 $generated@@4)) (= (type $generated@@399) $generated@@70)) (= (type $generated@@400) ($generated@@87 $generated@@88 $generated@@89))) (= ($generated@@85 $generated@@398 ($generated@@267 $generated@@399) $generated@@400) (forall (($generated@@401 T@U) ) (!  (=> (and (= (type $generated@@401) $generated@@182) ($generated@@0 ($generated@@92 $generated@@398 $generated@@401))) ($generated@@281 $generated@@401 $generated@@399 $generated@@400))
 :pattern ( ($generated@@92 $generated@@398 $generated@@401))
))))
 :pattern ( ($generated@@85 $generated@@398 ($generated@@267 $generated@@399) $generated@@400))
)))
(assert (forall (($generated@@402 T@U) ($generated@@403 T@U) ($generated@@404 T@U) ) (!  (=> (and (and (= (type $generated@@402) ($generated@@87 $generated@@182 $generated@@4)) (= (type $generated@@403) $generated@@70)) (= (type $generated@@404) ($generated@@87 $generated@@88 $generated@@89))) (= ($generated@@85 $generated@@402 ($generated@@272 $generated@@403) $generated@@404) (forall (($generated@@405 T@U) ) (!  (=> (and (= (type $generated@@405) $generated@@182) ($generated@@0 ($generated@@92 $generated@@402 $generated@@405))) ($generated@@281 $generated@@405 $generated@@403 $generated@@404))
 :pattern ( ($generated@@92 $generated@@402 $generated@@405))
))))
 :pattern ( ($generated@@85 $generated@@402 ($generated@@272 $generated@@403) $generated@@404))
)))
(assert (forall (($generated@@406 T@U) ) (! (let (($generated@@407 (type $generated@@406)))
(= ($generated ($generated@@92 ($generated@@317 $generated@@407) $generated@@406)) 0))
 :pattern ( (let (($generated@@407 (type $generated@@406)))
($generated@@92 ($generated@@317 $generated@@407) $generated@@406)))
)))
(assert  (and (forall (($generated@@410 T@U) ) (! (= (type ($generated@@408 $generated@@410)) ($generated@@87 $generated@@182 $generated@@4))
 :pattern ( ($generated@@408 $generated@@410))
)) (forall (($generated@@411 T@U) ) (! (let (($generated@@412 ($generated@@326 (type $generated@@411))))
(let (($generated@@413 ($generated@@325 (type $generated@@411))))
(= (type ($generated@@409 $generated@@411)) ($generated@@87 $generated@@413 $generated@@412))))
 :pattern ( ($generated@@409 $generated@@411))
))))
(assert (forall (($generated@@414 T@U) ($generated@@415 T@U) ) (!  (=> (and (= (type $generated@@414) ($generated@@324 $generated@@182 $generated@@182)) (= (type $generated@@415) $generated@@182)) (= ($generated@@0 ($generated@@92 ($generated@@408 $generated@@414) $generated@@415))  (and ($generated@@0 ($generated@@92 ($generated@@322 $generated@@414) ($generated@@180 ($generated@@367 $generated@@173 $generated@@415)))) (= ($generated@@92 ($generated@@409 $generated@@414) ($generated@@180 ($generated@@367 $generated@@173 $generated@@415))) ($generated@@181 ($generated@@367 $generated@@173 $generated@@415))))))
 :pattern ( ($generated@@92 ($generated@@408 $generated@@414) $generated@@415))
)))
(assert  (and (forall (($generated@@418 T@U) ) (! (= (type ($generated@@416 $generated@@418)) ($generated@@87 $generated@@182 $generated@@4))
 :pattern ( ($generated@@416 $generated@@418))
)) (forall (($generated@@419 T@U) ) (! (let (($generated@@420 ($generated@@344 (type $generated@@419))))
(let (($generated@@421 ($generated@@343 (type $generated@@419))))
(= (type ($generated@@417 $generated@@419)) ($generated@@87 $generated@@421 $generated@@420))))
 :pattern ( ($generated@@417 $generated@@419))
))))
(assert (forall (($generated@@422 T@U) ($generated@@423 T@U) ) (!  (=> (and (= (type $generated@@422) ($generated@@342 $generated@@182 $generated@@182)) (= (type $generated@@423) $generated@@182)) (= ($generated@@0 ($generated@@92 ($generated@@416 $generated@@422) $generated@@423))  (and ($generated@@0 ($generated@@92 ($generated@@340 $generated@@422) ($generated@@180 ($generated@@367 $generated@@173 $generated@@423)))) (= ($generated@@92 ($generated@@417 $generated@@422) ($generated@@180 ($generated@@367 $generated@@173 $generated@@423))) ($generated@@181 ($generated@@367 $generated@@173 $generated@@423))))))
 :pattern ( ($generated@@92 ($generated@@416 $generated@@422) $generated@@423))
)))
(assert (forall (($generated@@424 T@U) ($generated@@425 T@U) ) (! (let (($generated@@426 (type $generated@@425)))
(let (($generated@@427 ($generated@@325 (type $generated@@424))))
 (=> (= (type $generated@@424) ($generated@@324 $generated@@427 $generated@@426)) (= ($generated@@0 ($generated@@92 ($generated@@377 $generated@@424) $generated@@425)) (exists (($generated@@428 T@U) ) (!  (and (= (type $generated@@428) $generated@@427) (and ($generated@@0 ($generated@@92 ($generated@@322 $generated@@424) $generated@@428)) (= $generated@@425 ($generated@@92 ($generated@@409 $generated@@424) $generated@@428))))
 :pattern ( ($generated@@92 ($generated@@322 $generated@@424) $generated@@428))
 :pattern ( ($generated@@92 ($generated@@409 $generated@@424) $generated@@428))
))))))
 :pattern ( ($generated@@92 ($generated@@377 $generated@@424) $generated@@425))
)))
(assert (forall (($generated@@429 T@U) ($generated@@430 T@U) ) (! (let (($generated@@431 (type $generated@@430)))
(let (($generated@@432 ($generated@@343 (type $generated@@429))))
 (=> (= (type $generated@@429) ($generated@@342 $generated@@432 $generated@@431)) (= ($generated@@0 ($generated@@92 ($generated@@388 $generated@@429) $generated@@430)) (exists (($generated@@433 T@U) ) (!  (and (= (type $generated@@433) $generated@@432) (and ($generated@@0 ($generated@@92 ($generated@@340 $generated@@429) $generated@@433)) (= $generated@@430 ($generated@@92 ($generated@@417 $generated@@429) $generated@@433))))
 :pattern ( ($generated@@92 ($generated@@340 $generated@@429) $generated@@433))
 :pattern ( ($generated@@92 ($generated@@417 $generated@@429) $generated@@433))
))))))
 :pattern ( ($generated@@92 ($generated@@388 $generated@@429) $generated@@430))
)))
(assert (forall (($generated@@435 T@U) ($generated@@436 T@U) ) (! (= (type ($generated@@434 $generated@@435 $generated@@436)) $generated@@70)
 :pattern ( ($generated@@434 $generated@@435 $generated@@436))
)))
(assert (forall (($generated@@437 T@U) ($generated@@438 T@U) ($generated@@439 T@U) ($generated@@440 T@U) ) (!  (=> (and (and (and (= (type $generated@@437) ($generated@@324 $generated@@182 $generated@@182)) (= (type $generated@@438) $generated@@70)) (= (type $generated@@439) $generated@@70)) (= (type $generated@@440) ($generated@@87 $generated@@88 $generated@@89))) (= ($generated@@85 $generated@@437 ($generated@@434 $generated@@438 $generated@@439) $generated@@440) (forall (($generated@@441 T@U) ) (!  (=> (and (= (type $generated@@441) $generated@@182) ($generated@@0 ($generated@@92 ($generated@@322 $generated@@437) $generated@@441))) (and ($generated@@281 ($generated@@92 ($generated@@409 $generated@@437) $generated@@441) $generated@@439 $generated@@440) ($generated@@281 $generated@@441 $generated@@438 $generated@@440)))
 :pattern ( ($generated@@92 ($generated@@409 $generated@@437) $generated@@441))
 :pattern ( ($generated@@92 ($generated@@322 $generated@@437) $generated@@441))
))))
 :pattern ( ($generated@@85 $generated@@437 ($generated@@434 $generated@@438 $generated@@439) $generated@@440))
)))
(assert (forall (($generated@@443 T@U) ($generated@@444 T@U) ) (! (= (type ($generated@@442 $generated@@443 $generated@@444)) $generated@@70)
 :pattern ( ($generated@@442 $generated@@443 $generated@@444))
)))
(assert (forall (($generated@@445 T@U) ($generated@@446 T@U) ($generated@@447 T@U) ($generated@@448 T@U) ) (!  (=> (and (and (and (= (type $generated@@445) ($generated@@342 $generated@@182 $generated@@182)) (= (type $generated@@446) $generated@@70)) (= (type $generated@@447) $generated@@70)) (= (type $generated@@448) ($generated@@87 $generated@@88 $generated@@89))) (= ($generated@@85 $generated@@445 ($generated@@442 $generated@@446 $generated@@447) $generated@@448) (forall (($generated@@449 T@U) ) (!  (=> (and (= (type $generated@@449) $generated@@182) ($generated@@0 ($generated@@92 ($generated@@340 $generated@@445) $generated@@449))) (and ($generated@@281 ($generated@@92 ($generated@@417 $generated@@445) $generated@@449) $generated@@447 $generated@@448) ($generated@@281 $generated@@449 $generated@@446 $generated@@448)))
 :pattern ( ($generated@@92 ($generated@@417 $generated@@445) $generated@@449))
 :pattern ( ($generated@@92 ($generated@@340 $generated@@445) $generated@@449))
))))
 :pattern ( ($generated@@85 $generated@@445 ($generated@@442 $generated@@446 $generated@@447) $generated@@448))
)))
(assert (forall (($generated@@450 T@U) ($generated@@451 T@U) ($generated@@452 T@U) ) (!  (=> (and (and (and (and (= (type $generated@@450) ($generated@@87 $generated@@88 $generated@@89)) (= (type $generated@@451) ($generated@@87 $generated@@88 $generated@@89))) (= (type $generated@@452) ($generated@@87 $generated@@88 $generated@@89))) (not (= $generated@@450 $generated@@452))) (and ($generated@@143 $generated@@450 $generated@@451) ($generated@@143 $generated@@451 $generated@@452))) ($generated@@143 $generated@@450 $generated@@452))
 :pattern ( ($generated@@143 $generated@@450 $generated@@451) ($generated@@143 $generated@@451 $generated@@452))
)))
(assert (forall (($generated@@454 T@T) ) (! (= (type ($generated@@453 $generated@@454)) ($generated@@87 $generated@@454 $generated@@4))
 :pattern ( ($generated@@453 $generated@@454))
)))
(assert (forall (($generated@@455 T@U) ) (! (let (($generated@@456 ($generated@@344 (type $generated@@455))))
(let (($generated@@457 ($generated@@343 (type $generated@@455))))
 (=> (= (type $generated@@455) ($generated@@342 $generated@@457 $generated@@456)) (= (= $generated@@455 ($generated@@341 $generated@@457 $generated@@456)) (= ($generated@@340 $generated@@455) ($generated@@453 $generated@@457))))))
 :pattern ( ($generated@@340 $generated@@455))
)))
(assert (forall (($generated@@458 T@U) ) (! (let (($generated@@459 ($generated@@344 (type $generated@@458))))
(let (($generated@@460 ($generated@@343 (type $generated@@458))))
 (=> (= (type $generated@@458) ($generated@@342 $generated@@460 $generated@@459)) (= (= $generated@@458 ($generated@@341 $generated@@460 $generated@@459)) (= ($generated@@388 $generated@@458) ($generated@@453 $generated@@459))))))
 :pattern ( ($generated@@388 $generated@@458))
)))
(assert (forall (($generated@@461 T@U) ) (! (let (($generated@@462 ($generated@@344 (type $generated@@461))))
(let (($generated@@463 ($generated@@343 (type $generated@@461))))
 (=> (= (type $generated@@461) ($generated@@342 $generated@@463 $generated@@462)) (= (= $generated@@461 ($generated@@341 $generated@@463 $generated@@462)) (= ($generated@@416 $generated@@461) ($generated@@453 $generated@@182))))))
 :pattern ( ($generated@@416 $generated@@461))
)))
(assert (forall (($generated@@464 T@U) ) (! (let (($generated@@465 ($generated@@326 (type $generated@@464))))
(let (($generated@@466 ($generated@@325 (type $generated@@464))))
 (=> (= (type $generated@@464) ($generated@@324 $generated@@466 $generated@@465)) (or (= $generated@@464 ($generated@@323 $generated@@466 $generated@@465)) (exists (($generated@@467 T@U) ($generated@@468 T@U) ) (!  (and (and (= (type $generated@@467) $generated@@182) (= (type $generated@@468) $generated@@182)) ($generated@@0 ($generated@@92 ($generated@@408 $generated@@464) ($generated@@301 ($generated@@252 $generated@@467 $generated@@468)))))
 :no-pattern (type $generated@@467)
 :no-pattern (type $generated@@468)
 :no-pattern ($generated $generated@@467)
 :no-pattern ($generated@@0 $generated@@467)
 :no-pattern ($generated $generated@@468)
 :no-pattern ($generated@@0 $generated@@468)
))))))
 :pattern ( ($generated@@408 $generated@@464))
)))
(assert (forall (($generated@@469 T@U) ) (! (let (($generated@@470 ($generated@@344 (type $generated@@469))))
(let (($generated@@471 ($generated@@343 (type $generated@@469))))
 (=> (= (type $generated@@469) ($generated@@342 $generated@@471 $generated@@470)) (or (= $generated@@469 ($generated@@341 $generated@@471 $generated@@470)) (exists (($generated@@472 T@U) ($generated@@473 T@U) ) (!  (and (and (= (type $generated@@472) $generated@@182) (= (type $generated@@473) $generated@@182)) ($generated@@0 ($generated@@92 ($generated@@416 $generated@@469) ($generated@@301 ($generated@@252 $generated@@472 $generated@@473)))))
 :no-pattern (type $generated@@472)
 :no-pattern (type $generated@@473)
 :no-pattern ($generated $generated@@472)
 :no-pattern ($generated@@0 $generated@@472)
 :no-pattern ($generated $generated@@473)
 :no-pattern ($generated@@0 $generated@@473)
))))))
 :pattern ( ($generated@@416 $generated@@469))
)))
(assert (forall (($generated@@475 T@U) ) (! (= (type ($generated@@474 $generated@@475)) $generated@@76)
 :pattern ( ($generated@@474 $generated@@475))
)))
(assert (forall (($generated@@476 T@U) ($generated@@477 T@U) ($generated@@478 T@T) ) (!  (=> (and (= (type $generated@@476) $generated@@76) (= (type $generated@@477) $generated@@74)) (and (= ($generated@@474 ($generated@@260 $generated@@478 $generated@@476 $generated@@477)) $generated@@476) (= ($generated@@83 ($generated@@260 $generated@@478 $generated@@476 $generated@@477)) $generated@@477)))
 :pattern ( ($generated@@260 $generated@@478 $generated@@476 $generated@@477))
)))
(assert (forall (($generated@@479 T@U) ) (!  (=> (and (= (type $generated@@479) $generated@@182) ($generated@@253 $generated@@479 $generated@@46)) (and (= ($generated@@301 ($generated@@367 $generated@@2 $generated@@479)) $generated@@479) ($generated@@148 ($generated@@367 $generated@@2 $generated@@479) $generated@@46)))
 :pattern ( ($generated@@253 $generated@@479 $generated@@46))
)))
(assert (forall (($generated@@480 T@U) ) (!  (=> (and (= (type $generated@@480) $generated@@182) ($generated@@253 $generated@@480 $generated@@47)) (and (= ($generated@@301 ($generated@@367 $generated@@3 $generated@@480)) $generated@@480) ($generated@@148 ($generated@@367 $generated@@3 $generated@@480) $generated@@47)))
 :pattern ( ($generated@@253 $generated@@480 $generated@@47))
)))
(assert (forall (($generated@@481 T@U) ) (!  (=> (and (= (type $generated@@481) $generated@@182) ($generated@@253 $generated@@481 $generated@@44)) (and (= ($generated@@301 ($generated@@367 $generated@@4 $generated@@481)) $generated@@481) ($generated@@148 ($generated@@367 $generated@@4 $generated@@481) $generated@@44)))
 :pattern ( ($generated@@253 $generated@@481 $generated@@44))
)))
(assert (= ($generated@@1 $generated@@482) 22))
(assert (forall (($generated@@483 T@U) ) (!  (=> (and (= (type $generated@@483) $generated@@182) ($generated@@253 $generated@@483 $generated@@45)) (and (= ($generated@@301 ($generated@@367 $generated@@482 $generated@@483)) $generated@@483) ($generated@@148 ($generated@@367 $generated@@482 $generated@@483) $generated@@45)))
 :pattern ( ($generated@@253 $generated@@483 $generated@@45))
)))
(assert (forall (($generated@@484 T@U) ($generated@@485 T@U) ) (!  (=> (= (type $generated@@485) $generated@@70) (= ($generated@@253 ($generated@@301 $generated@@484) $generated@@485) ($generated@@148 $generated@@484 $generated@@485)))
 :pattern ( ($generated@@253 ($generated@@301 $generated@@484) $generated@@485))
)))
(assert (forall (($generated@@486 T@U) ) (! (let (($generated@@487 ($generated@@90 (type $generated@@486))))
 (=> (= (type $generated@@486) ($generated@@87 $generated@@487 $generated@@2)) (<= 0 ($generated@@316 $generated@@486))))
 :pattern ( ($generated@@316 $generated@@486))
)))
(assert (forall (($generated@@488 T@U) ) (! (let (($generated@@489 ($generated@@296 (type $generated@@488))))
 (=> (= (type $generated@@488) ($generated@@295 $generated@@489)) (<= 0 ($generated@@294 $generated@@488))))
 :pattern ( ($generated@@294 $generated@@488))
)))
(assert (forall (($generated@@491 T@U) ) (! (= (type ($generated@@490 $generated@@491)) $generated@@70)
 :pattern ( ($generated@@490 $generated@@491))
)))
(assert (forall (($generated@@492 T@U) ($generated@@493 T@U) ) (!  (=> (and (= (type $generated@@492) $generated@@70) (= (type $generated@@493) $generated@@70)) (= ($generated@@490 ($generated@@434 $generated@@492 $generated@@493)) $generated@@492))
 :pattern ( ($generated@@434 $generated@@492 $generated@@493))
)))
(assert (forall (($generated@@495 T@U) ) (! (= (type ($generated@@494 $generated@@495)) $generated@@70)
 :pattern ( ($generated@@494 $generated@@495))
)))
(assert (forall (($generated@@496 T@U) ($generated@@497 T@U) ) (!  (=> (and (= (type $generated@@496) $generated@@70) (= (type $generated@@497) $generated@@70)) (= ($generated@@494 ($generated@@434 $generated@@496 $generated@@497)) $generated@@497))
 :pattern ( ($generated@@434 $generated@@496 $generated@@497))
)))
(assert (forall (($generated@@498 T@U) ($generated@@499 T@U) ) (!  (=> (and (= (type $generated@@498) $generated@@70) (= (type $generated@@499) $generated@@70)) (= ($generated@@81 ($generated@@434 $generated@@498 $generated@@499)) $generated@@58))
 :pattern ( ($generated@@434 $generated@@498 $generated@@499))
)))
(assert (forall (($generated@@501 T@U) ) (! (= (type ($generated@@500 $generated@@501)) $generated@@70)
 :pattern ( ($generated@@500 $generated@@501))
)))
(assert (forall (($generated@@502 T@U) ($generated@@503 T@U) ) (!  (=> (and (= (type $generated@@502) $generated@@70) (= (type $generated@@503) $generated@@70)) (= ($generated@@500 ($generated@@442 $generated@@502 $generated@@503)) $generated@@502))
 :pattern ( ($generated@@442 $generated@@502 $generated@@503))
)))
(assert (forall (($generated@@505 T@U) ) (! (= (type ($generated@@504 $generated@@505)) $generated@@70)
 :pattern ( ($generated@@504 $generated@@505))
)))
(assert (forall (($generated@@506 T@U) ($generated@@507 T@U) ) (!  (=> (and (= (type $generated@@506) $generated@@70) (= (type $generated@@507) $generated@@70)) (= ($generated@@504 ($generated@@442 $generated@@506 $generated@@507)) $generated@@507))
 :pattern ( ($generated@@442 $generated@@506 $generated@@507))
)))
(assert (forall (($generated@@508 T@U) ($generated@@509 T@U) ) (!  (=> (and (= (type $generated@@508) $generated@@70) (= (type $generated@@509) $generated@@70)) (= ($generated@@81 ($generated@@442 $generated@@508 $generated@@509)) $generated@@59))
 :pattern ( ($generated@@442 $generated@@508 $generated@@509))
)))
(assert (forall (($generated@@510 T@U) ($generated@@511 T@U) ) (!  (=> (and (= (type $generated@@510) $generated@@182) (= (type $generated@@511) $generated@@182)) (= ($generated@@287 ($generated@@252 $generated@@510 $generated@@511)) $generated@@62))
 :pattern ( ($generated@@252 $generated@@510 $generated@@511))
)))
(assert (forall (($generated@@513 T@U) ) (! (= (type ($generated@@512 $generated@@513)) $generated@@70)
 :pattern ( ($generated@@512 $generated@@513))
)))
(assert (forall (($generated@@514 T@U) ($generated@@515 T@U) ) (!  (=> (and (= (type $generated@@514) $generated@@70) (= (type $generated@@515) $generated@@70)) (= ($generated@@512 ($generated@@172 $generated@@514 $generated@@515)) $generated@@514))
 :pattern ( ($generated@@172 $generated@@514 $generated@@515))
)))
(assert (forall (($generated@@517 T@U) ) (! (= (type ($generated@@516 $generated@@517)) $generated@@70)
 :pattern ( ($generated@@516 $generated@@517))
)))
(assert (forall (($generated@@518 T@U) ($generated@@519 T@U) ) (!  (=> (and (= (type $generated@@518) $generated@@70) (= (type $generated@@519) $generated@@70)) (= ($generated@@516 ($generated@@172 $generated@@518 $generated@@519)) $generated@@519))
 :pattern ( ($generated@@172 $generated@@518 $generated@@519))
)))
(assert (forall (($generated@@520 T@U) ($generated@@521 T@U) ) (!  (=> (and (= (type $generated@@520) $generated@@182) (= (type $generated@@521) $generated@@182)) (= ($generated@@180 ($generated@@252 $generated@@520 $generated@@521)) $generated@@520))
 :pattern ( ($generated@@252 $generated@@520 $generated@@521))
)))
(assert (forall (($generated@@522 T@U) ($generated@@523 T@U) ) (!  (=> (and (= (type $generated@@522) $generated@@182) (= (type $generated@@523) $generated@@182)) (= ($generated@@181 ($generated@@252 $generated@@522 $generated@@523)) $generated@@523))
 :pattern ( ($generated@@252 $generated@@522 $generated@@523))
)))
(assert  (and (forall (($generated@@526 T@U) ) (! (= (type ($generated@@524 $generated@@526)) $generated@@70)
 :pattern ( ($generated@@524 $generated@@526))
)) (forall (($generated@@527 T@U) ($generated@@528 Int) ) (! (let (($generated@@529 ($generated@@296 (type $generated@@527))))
(= (type ($generated@@525 $generated@@527 $generated@@528)) $generated@@529))
 :pattern ( ($generated@@525 $generated@@527 $generated@@528))
))))
(assert (forall (($generated@@530 T@U) ($generated@@531 T@U) ($generated@@532 T@U) ) (!  (=> (and (and (= (type $generated@@530) ($generated@@295 $generated@@182)) (= (type $generated@@531) $generated@@70)) (= (type $generated@@532) ($generated@@87 $generated@@88 $generated@@89))) (= ($generated@@85 $generated@@530 ($generated@@524 $generated@@531) $generated@@532) (forall (($generated@@533 Int) ) (!  (=> (and (<= 0 $generated@@533) (< $generated@@533 ($generated@@294 $generated@@530))) ($generated@@281 ($generated@@525 $generated@@530 $generated@@533) $generated@@531 $generated@@532))
 :pattern ( ($generated@@525 $generated@@530 $generated@@533))
))))
 :pattern ( ($generated@@85 $generated@@530 ($generated@@524 $generated@@531) $generated@@532))
)))
(assert (forall (($generated@@535 Int) ) (! (= ($generated@@534 ($generated@@86 $generated@@535)) $generated@@535)
 :pattern ( ($generated@@86 $generated@@535))
)))
(assert (forall (($generated@@537 T@U) ) (! (= (type ($generated@@536 $generated@@537)) $generated@@70)
 :pattern ( ($generated@@536 $generated@@537))
)))
(assert (forall (($generated@@538 T@U) ) (!  (=> (= (type $generated@@538) $generated@@70) (= ($generated@@536 ($generated@@267 $generated@@538)) $generated@@538))
 :pattern ( ($generated@@267 $generated@@538))
)))
(assert (forall (($generated@@539 T@U) ) (!  (=> (= (type $generated@@539) $generated@@70) (= ($generated@@81 ($generated@@267 $generated@@539)) $generated@@54))
 :pattern ( ($generated@@267 $generated@@539))
)))
(assert (forall (($generated@@541 T@U) ) (! (= (type ($generated@@540 $generated@@541)) $generated@@70)
 :pattern ( ($generated@@540 $generated@@541))
)))
(assert (forall (($generated@@542 T@U) ) (!  (=> (= (type $generated@@542) $generated@@70) (= ($generated@@540 ($generated@@272 $generated@@542)) $generated@@542))
 :pattern ( ($generated@@272 $generated@@542))
)))
(assert (forall (($generated@@543 T@U) ) (!  (=> (= (type $generated@@543) $generated@@70) (= ($generated@@81 ($generated@@272 $generated@@543)) $generated@@55))
 :pattern ( ($generated@@272 $generated@@543))
)))
(assert (forall (($generated@@545 T@U) ) (! (= (type ($generated@@544 $generated@@545)) $generated@@70)
 :pattern ( ($generated@@544 $generated@@545))
)))
(assert (forall (($generated@@546 T@U) ) (!  (=> (= (type $generated@@546) $generated@@70) (= ($generated@@544 ($generated@@187 $generated@@546)) $generated@@546))
 :pattern ( ($generated@@187 $generated@@546))
)))
(assert (forall (($generated@@547 T@U) ) (!  (=> (= (type $generated@@547) $generated@@70) (= ($generated@@81 ($generated@@187 $generated@@547)) $generated@@56))
 :pattern ( ($generated@@187 $generated@@547))
)))
(assert (forall (($generated@@549 T@U) ) (! (= (type ($generated@@548 $generated@@549)) $generated@@70)
 :pattern ( ($generated@@548 $generated@@549))
)))
(assert (forall (($generated@@550 T@U) ) (!  (=> (= (type $generated@@550) $generated@@70) (= ($generated@@548 ($generated@@524 $generated@@550)) $generated@@550))
 :pattern ( ($generated@@524 $generated@@550))
)))
(assert (forall (($generated@@551 T@U) ) (!  (=> (= (type $generated@@551) $generated@@70) (= ($generated@@81 ($generated@@524 $generated@@551)) $generated@@57))
 :pattern ( ($generated@@524 $generated@@551))
)))
(assert (forall (($generated@@552 T@U) ) (! (let (($generated@@553 (type $generated@@552)))
(= ($generated@@367 $generated@@553 ($generated@@301 $generated@@552)) $generated@@552))
 :pattern ( ($generated@@301 $generated@@552))
)))
(assert (forall (($generated@@554 T@U) ($generated@@555 T@U) ($generated@@556 T@U) ) (!  (=> (and (and (= (type $generated@@554) ($generated@@324 $generated@@182 $generated@@182)) (= (type $generated@@555) $generated@@70)) (= (type $generated@@556) $generated@@70)) (= ($generated@@148 $generated@@554 ($generated@@434 $generated@@555 $generated@@556)) (forall (($generated@@557 T@U) ) (!  (=> (and (= (type $generated@@557) $generated@@182) ($generated@@0 ($generated@@92 ($generated@@322 $generated@@554) $generated@@557))) (and ($generated@@253 ($generated@@92 ($generated@@409 $generated@@554) $generated@@557) $generated@@556) ($generated@@253 $generated@@557 $generated@@555)))
 :pattern ( ($generated@@92 ($generated@@409 $generated@@554) $generated@@557))
 :pattern ( ($generated@@92 ($generated@@322 $generated@@554) $generated@@557))
))))
 :pattern ( ($generated@@148 $generated@@554 ($generated@@434 $generated@@555 $generated@@556)))
)))
(assert (forall (($generated@@558 T@U) ($generated@@559 T@U) ($generated@@560 T@U) ) (!  (=> (and (and (= (type $generated@@558) ($generated@@342 $generated@@182 $generated@@182)) (= (type $generated@@559) $generated@@70)) (= (type $generated@@560) $generated@@70)) (= ($generated@@148 $generated@@558 ($generated@@442 $generated@@559 $generated@@560)) (forall (($generated@@561 T@U) ) (!  (=> (and (= (type $generated@@561) $generated@@182) ($generated@@0 ($generated@@92 ($generated@@340 $generated@@558) $generated@@561))) (and ($generated@@253 ($generated@@92 ($generated@@417 $generated@@558) $generated@@561) $generated@@560) ($generated@@253 $generated@@561 $generated@@559)))
 :pattern ( ($generated@@92 ($generated@@417 $generated@@558) $generated@@561))
 :pattern ( ($generated@@92 ($generated@@340 $generated@@558) $generated@@561))
))))
 :pattern ( ($generated@@148 $generated@@558 ($generated@@442 $generated@@559 $generated@@560)))
)))
(assert (forall (($generated@@564 T@U) ($generated@@565 T@U) ) (!  (=> (and (= (type $generated@@564) $generated@@182) (= (type $generated@@565) $generated@@182)) (< ($generated@@562 $generated@@564) ($generated@@563 ($generated@@252 $generated@@564 $generated@@565))))
 :pattern ( ($generated@@252 $generated@@564 $generated@@565))
)))
(assert (forall (($generated@@566 T@U) ($generated@@567 T@U) ) (!  (=> (and (= (type $generated@@566) $generated@@182) (= (type $generated@@567) $generated@@182)) (< ($generated@@562 $generated@@567) ($generated@@563 ($generated@@252 $generated@@566 $generated@@567))))
 :pattern ( ($generated@@252 $generated@@566 $generated@@567))
)))
(assert (forall (($generated@@568 T@U) ($generated@@569 T@U) ($generated@@570 T@U) ) (!  (=> (and (and (and (= (type $generated@@568) $generated@@182) (= (type $generated@@569) $generated@@70)) (= (type $generated@@570) $generated@@70)) ($generated@@253 $generated@@568 ($generated@@434 $generated@@569 $generated@@570))) (and (= ($generated@@301 ($generated@@367 ($generated@@324 $generated@@182 $generated@@182) $generated@@568)) $generated@@568) ($generated@@148 ($generated@@367 ($generated@@324 $generated@@182 $generated@@182) $generated@@568) ($generated@@434 $generated@@569 $generated@@570))))
 :pattern ( ($generated@@253 $generated@@568 ($generated@@434 $generated@@569 $generated@@570)))
)))
(assert (forall (($generated@@571 T@U) ($generated@@572 T@U) ($generated@@573 T@U) ) (!  (=> (and (and (and (= (type $generated@@571) $generated@@182) (= (type $generated@@572) $generated@@70)) (= (type $generated@@573) $generated@@70)) ($generated@@253 $generated@@571 ($generated@@442 $generated@@572 $generated@@573))) (and (= ($generated@@301 ($generated@@367 ($generated@@342 $generated@@182 $generated@@182) $generated@@571)) $generated@@571) ($generated@@148 ($generated@@367 ($generated@@342 $generated@@182 $generated@@182) $generated@@571) ($generated@@442 $generated@@572 $generated@@573))))
 :pattern ( ($generated@@253 $generated@@571 ($generated@@442 $generated@@572 $generated@@573)))
)))
(assert (forall (($generated@@574 T@U) ($generated@@575 T@U) ($generated@@576 T@U) ) (!  (=> (and (and (and (= (type $generated@@574) $generated@@70) (= (type $generated@@575) $generated@@70)) (= (type $generated@@576) $generated@@182)) ($generated@@253 $generated@@576 ($generated@@172 $generated@@574 $generated@@575))) (and (= ($generated@@301 ($generated@@367 $generated@@173 $generated@@576)) $generated@@576) ($generated@@148 ($generated@@367 $generated@@173 $generated@@576) ($generated@@172 $generated@@574 $generated@@575))))
 :pattern ( ($generated@@253 $generated@@576 ($generated@@172 $generated@@574 $generated@@575)))
)))
(assert (forall (($generated@@577 T@U) ) (! (let (($generated@@578 (type $generated@@577)))
 (not ($generated@@0 ($generated@@92 ($generated@@453 $generated@@578) $generated@@577))))
 :pattern ( (let (($generated@@578 (type $generated@@577)))
($generated@@92 ($generated@@453 $generated@@578) $generated@@577)))
)))
(assert (forall (($generated@@580 T@U) ) (! (= (type ($generated@@579 $generated@@580)) $generated@@77)
 :pattern ( ($generated@@579 $generated@@580))
)))
(assert (forall (($generated@@581 T@U) ($generated@@582 T@U) ) (!  (=> (and (= (type $generated@@581) $generated@@70) (= (type $generated@@582) $generated@@70)) (and (= ($generated@@81 ($generated@@172 $generated@@581 $generated@@582)) $generated@@63) (= ($generated@@579 ($generated@@172 $generated@@581 $generated@@582)) $generated@@67)))
 :pattern ( ($generated@@172 $generated@@581 $generated@@582))
)))
(assert (forall (($generated@@583 T@U) ) (!  (=> (= (type $generated@@583) $generated@@173) (= ($generated@@562 ($generated@@301 $generated@@583)) ($generated@@563 $generated@@583)))
 :pattern ( ($generated@@562 ($generated@@301 $generated@@583)))
)))
(assert (forall (($generated@@584 T@U) ) (!  (=> (and (= (type $generated@@584) $generated@@182) ($generated@@253 $generated@@584 ($generated@@86 0))) (and (= ($generated@@301 ($generated@@367 $generated@@2 $generated@@584)) $generated@@584) ($generated@@148 ($generated@@367 ($generated@@87 $generated@@182 $generated@@4) $generated@@584) ($generated@@86 0))))
 :pattern ( ($generated@@253 $generated@@584 ($generated@@86 0)))
)))
(assert (forall (($generated@@585 T@U) ($generated@@586 T@U) ) (!  (=> (and (and (= (type $generated@@585) $generated@@182) (= (type $generated@@586) $generated@@70)) ($generated@@253 $generated@@585 ($generated@@267 $generated@@586))) (and (= ($generated@@301 ($generated@@367 ($generated@@87 $generated@@182 $generated@@4) $generated@@585)) $generated@@585) ($generated@@148 ($generated@@367 ($generated@@87 $generated@@182 $generated@@4) $generated@@585) ($generated@@267 $generated@@586))))
 :pattern ( ($generated@@253 $generated@@585 ($generated@@267 $generated@@586)))
)))
(assert (forall (($generated@@587 T@U) ($generated@@588 T@U) ) (!  (=> (and (and (= (type $generated@@587) $generated@@182) (= (type $generated@@588) $generated@@70)) ($generated@@253 $generated@@587 ($generated@@272 $generated@@588))) (and (= ($generated@@301 ($generated@@367 ($generated@@87 $generated@@182 $generated@@4) $generated@@587)) $generated@@587) ($generated@@148 ($generated@@367 ($generated@@87 $generated@@182 $generated@@4) $generated@@587) ($generated@@272 $generated@@588))))
 :pattern ( ($generated@@253 $generated@@587 ($generated@@272 $generated@@588)))
)))
(assert (forall (($generated@@589 T@U) ($generated@@590 T@U) ) (!  (=> (and (and (= (type $generated@@589) $generated@@182) (= (type $generated@@590) $generated@@70)) ($generated@@253 $generated@@589 ($generated@@187 $generated@@590))) (and (= ($generated@@301 ($generated@@367 ($generated@@87 $generated@@182 $generated@@2) $generated@@589)) $generated@@589) ($generated@@148 ($generated@@367 ($generated@@87 $generated@@182 $generated@@2) $generated@@589) ($generated@@187 $generated@@590))))
 :pattern ( ($generated@@253 $generated@@589 ($generated@@187 $generated@@590)))
)))
(assert (forall (($generated@@591 T@U) ($generated@@592 T@U) ) (!  (=> (and (and (= (type $generated@@591) $generated@@182) (= (type $generated@@592) $generated@@70)) ($generated@@253 $generated@@591 ($generated@@524 $generated@@592))) (and (= ($generated@@301 ($generated@@367 ($generated@@295 $generated@@182) $generated@@591)) $generated@@591) ($generated@@148 ($generated@@367 ($generated@@295 $generated@@182) $generated@@591) ($generated@@524 $generated@@592))))
 :pattern ( ($generated@@253 $generated@@591 ($generated@@524 $generated@@592)))
)))
(assert (= ($generated@@81 $generated@@249) $generated@@64))
(assert (= ($generated@@579 $generated@@249) $generated@@68))
(assert (= ($generated@@81 $generated@@154) $generated@@66))
(assert (= ($generated@@579 $generated@@154) $generated@@68))
(assert (forall (($generated@@593 T@U) ($generated@@594 T@U) ($generated@@595 T@U) ) (!  (=> (and (and (= (type $generated@@593) ($generated@@87 $generated@@182 $generated@@2)) (= (type $generated@@594) $generated@@70)) (= (type $generated@@595) ($generated@@87 $generated@@88 $generated@@89))) (= ($generated@@85 $generated@@593 ($generated@@187 $generated@@594) $generated@@595) (forall (($generated@@596 T@U) ) (!  (=> (and (= (type $generated@@596) $generated@@182) (< 0 ($generated ($generated@@92 $generated@@593 $generated@@596)))) ($generated@@281 $generated@@596 $generated@@594 $generated@@595))
 :pattern ( ($generated@@92 $generated@@593 $generated@@596))
))))
 :pattern ( ($generated@@85 $generated@@593 ($generated@@187 $generated@@594) $generated@@595))
)))
(assert (forall (($generated@@597 T@U) ($generated@@598 T@U) ($generated@@599 T@U) ) (!  (=> (and (and (and (= (type $generated@@597) $generated@@173) (= (type $generated@@598) $generated@@70)) (= (type $generated@@599) ($generated@@87 $generated@@88 $generated@@89))) (and ($generated@@158 $generated@@599) (and ($generated@@171 $generated@@597) (exists (($generated@@600 T@U) ) (!  (and (= (type $generated@@600) $generated@@70) ($generated@@85 $generated@@597 ($generated@@172 $generated@@598 $generated@@600) $generated@@599))
 :pattern ( ($generated@@85 $generated@@597 ($generated@@172 $generated@@598 $generated@@600) $generated@@599))
))))) ($generated@@281 ($generated@@180 $generated@@597) $generated@@598 $generated@@599))
 :pattern ( ($generated@@281 ($generated@@180 $generated@@597) $generated@@598 $generated@@599))
)))
(assert (forall (($generated@@601 T@U) ($generated@@602 T@U) ($generated@@603 T@U) ) (!  (=> (and (and (and (= (type $generated@@601) $generated@@173) (= (type $generated@@602) $generated@@70)) (= (type $generated@@603) ($generated@@87 $generated@@88 $generated@@89))) (and ($generated@@158 $generated@@603) (and ($generated@@171 $generated@@601) (exists (($generated@@604 T@U) ) (!  (and (= (type $generated@@604) $generated@@70) ($generated@@85 $generated@@601 ($generated@@172 $generated@@604 $generated@@602) $generated@@603))
 :pattern ( ($generated@@85 $generated@@601 ($generated@@172 $generated@@604 $generated@@602) $generated@@603))
))))) ($generated@@281 ($generated@@181 $generated@@601) $generated@@602 $generated@@603))
 :pattern ( ($generated@@281 ($generated@@181 $generated@@601) $generated@@602 $generated@@603))
)))
(assert (forall (($generated@@605 T@U) ($generated@@606 T@U) ) (!  (=> (and (= (type $generated@@605) $generated@@182) (= (type $generated@@606) $generated@@182)) (= ($generated@@252 ($generated@@277 $generated@@605) ($generated@@277 $generated@@606)) ($generated@@277 ($generated@@252 $generated@@605 $generated@@606))))
 :pattern ( ($generated@@252 ($generated@@277 $generated@@605) ($generated@@277 $generated@@606)))
)))
(assert (forall (($generated@@607 T@U) ) (! (= ($generated@@301 ($generated@@277 $generated@@607)) ($generated@@277 ($generated@@301 $generated@@607)))
 :pattern ( ($generated@@301 ($generated@@277 $generated@@607)))
)))
(assert (forall (($generated@@608 T@U) ) (! (let (($generated@@609 ($generated@@296 (type $generated@@608))))
 (=> (and (= (type $generated@@608) ($generated@@295 $generated@@609)) (= ($generated@@294 $generated@@608) 0)) (= $generated@@608 ($generated@@293 $generated@@609))))
 :pattern ( ($generated@@294 $generated@@608))
)))
(assert (forall (($generated@@610 T@U) ($generated@@611 T@U) ($generated@@612 T@U) ) (! (let (($generated@@613 (type $generated@@611)))
 (=> (and (and (= (type $generated@@610) ($generated@@87 $generated@@613 $generated@@2)) (= (type $generated@@612) $generated@@2)) (<= 0 ($generated $generated@@612))) (= ($generated@@316 ($generated@@93 $generated@@610 $generated@@611 $generated@@612)) (+ (- ($generated@@316 $generated@@610) ($generated ($generated@@92 $generated@@610 $generated@@611))) ($generated $generated@@612)))))
 :pattern ( ($generated@@316 ($generated@@93 $generated@@610 $generated@@611 $generated@@612)))
)))
(assert (forall (($generated@@614 T@U) ($generated@@615 T@U) ) (!  (=> (and (= (type $generated@@614) ($generated@@87 $generated@@88 $generated@@89)) (= (type $generated@@615) $generated@@2)) ($generated@@85 $generated@@615 $generated@@46 $generated@@614))
 :pattern ( ($generated@@85 $generated@@615 $generated@@46 $generated@@614))
)))
(assert (forall (($generated@@616 T@U) ($generated@@617 T@U) ) (!  (=> (and (= (type $generated@@616) ($generated@@87 $generated@@88 $generated@@89)) (= (type $generated@@617) $generated@@3)) ($generated@@85 $generated@@617 $generated@@47 $generated@@616))
 :pattern ( ($generated@@85 $generated@@617 $generated@@47 $generated@@616))
)))
(assert (forall (($generated@@618 T@U) ($generated@@619 T@U) ) (!  (=> (and (= (type $generated@@618) ($generated@@87 $generated@@88 $generated@@89)) (= (type $generated@@619) $generated@@4)) ($generated@@85 $generated@@619 $generated@@44 $generated@@618))
 :pattern ( ($generated@@85 $generated@@619 $generated@@44 $generated@@618))
)))
(assert (forall (($generated@@620 T@U) ($generated@@621 T@U) ) (!  (=> (and (= (type $generated@@620) ($generated@@87 $generated@@88 $generated@@89)) (= (type $generated@@621) $generated@@482)) ($generated@@85 $generated@@621 $generated@@45 $generated@@620))
 :pattern ( ($generated@@85 $generated@@621 $generated@@45 $generated@@620))
)))
(assert (forall (($generated@@622 T@U) ($generated@@623 T@U) ) (!  (=> (and (= (type $generated@@622) ($generated@@87 $generated@@88 $generated@@89)) (= (type $generated@@623) $generated@@182)) ($generated@@85 $generated@@623 $generated@@48 $generated@@622))
 :pattern ( ($generated@@85 $generated@@623 $generated@@48 $generated@@622))
)))
(assert (forall (($generated@@624 T@U) ($generated@@625 T@U) ) (!  (=> (and (= (type $generated@@624) ($generated@@295 $generated@@182)) (= (type $generated@@625) $generated@@70)) (= ($generated@@148 $generated@@624 ($generated@@524 $generated@@625)) (forall (($generated@@626 Int) ) (!  (=> (and (<= 0 $generated@@626) (< $generated@@626 ($generated@@294 $generated@@624))) ($generated@@253 ($generated@@525 $generated@@624 $generated@@626) $generated@@625))
 :pattern ( ($generated@@525 $generated@@624 $generated@@626))
))))
 :pattern ( ($generated@@148 $generated@@624 ($generated@@524 $generated@@625)))
)))
(assert (forall (($generated@@628 T@U) ($generated@@629 Int) ) (!  (=> (= (type $generated@@628) ($generated@@295 $generated@@182)) (=> (and (<= 0 $generated@@629) (< $generated@@629 ($generated@@294 $generated@@628))) (< ($generated@@563 ($generated@@367 $generated@@173 ($generated@@525 $generated@@628 $generated@@629))) ($generated@@627 $generated@@628))))
 :pattern ( ($generated@@563 ($generated@@367 $generated@@173 ($generated@@525 $generated@@628 $generated@@629))))
)))
(assert (forall (($generated@@630 T@U) ($generated@@631 T@U) ($generated@@632 T@U) ) (!  (=> (and (and (and (= (type $generated@@630) ($generated@@324 $generated@@182 $generated@@182)) (= (type $generated@@631) $generated@@70)) (= (type $generated@@632) $generated@@70)) ($generated@@148 $generated@@630 ($generated@@434 $generated@@631 $generated@@632))) (and (and ($generated@@148 ($generated@@322 $generated@@630) ($generated@@267 $generated@@631)) ($generated@@148 ($generated@@377 $generated@@630) ($generated@@267 $generated@@632))) ($generated@@148 ($generated@@408 $generated@@630) ($generated@@267 ($generated@@172 $generated@@631 $generated@@632)))))
 :pattern ( ($generated@@148 $generated@@630 ($generated@@434 $generated@@631 $generated@@632)))
)))
(assert (forall (($generated@@633 T@U) ($generated@@634 T@U) ($generated@@635 T@U) ) (!  (=> (and (and (and (= (type $generated@@633) ($generated@@342 $generated@@182 $generated@@182)) (= (type $generated@@634) $generated@@70)) (= (type $generated@@635) $generated@@70)) ($generated@@148 $generated@@633 ($generated@@442 $generated@@634 $generated@@635))) (and (and ($generated@@148 ($generated@@340 $generated@@633) ($generated@@272 $generated@@634)) ($generated@@148 ($generated@@388 $generated@@633) ($generated@@272 $generated@@635))) ($generated@@148 ($generated@@416 $generated@@633) ($generated@@272 ($generated@@172 $generated@@634 $generated@@635)))))
 :pattern ( ($generated@@148 $generated@@633 ($generated@@442 $generated@@634 $generated@@635)))
)))
(assert (forall (($generated@@636 T@U) ) (!  (=> (= (type $generated@@636) $generated@@2) ($generated@@148 $generated@@636 $generated@@46))
 :pattern ( ($generated@@148 $generated@@636 $generated@@46))
)))
(assert (forall (($generated@@637 T@U) ) (!  (=> (= (type $generated@@637) $generated@@3) ($generated@@148 $generated@@637 $generated@@47))
 :pattern ( ($generated@@148 $generated@@637 $generated@@47))
)))
(assert (forall (($generated@@638 T@U) ) (!  (=> (= (type $generated@@638) $generated@@4) ($generated@@148 $generated@@638 $generated@@44))
 :pattern ( ($generated@@148 $generated@@638 $generated@@44))
)))
(assert (forall (($generated@@639 T@U) ) (!  (=> (= (type $generated@@639) $generated@@482) ($generated@@148 $generated@@639 $generated@@45))
 :pattern ( ($generated@@148 $generated@@639 $generated@@45))
)))
(assert (forall (($generated@@640 T@U) ) (!  (=> (= (type $generated@@640) $generated@@182) ($generated@@148 $generated@@640 $generated@@48))
 :pattern ( ($generated@@148 $generated@@640 $generated@@48))
)))
(push 1)
(declare-fun ControlFlow (Int Int) Int)
(declare-fun $generated@@641 (T@U) T@U)
(declare-fun $generated@@642 () T@U)
(declare-fun $generated@@643 () T@U)
(declare-fun $generated@@644 () T@U)
(declare-fun $generated@@645 () T@U)
(declare-fun $generated@@646 () T@U)
(declare-fun $generated@@647 () T@U)
(declare-fun $generated@@648 (T@U) Bool)
(declare-fun $generated@@649 () T@U)
(declare-fun $generated@@650 () Bool)
(declare-fun $generated@@651 () T@U)
(declare-fun $generated@@652 () Int)
(declare-fun $generated@@653 () T@T)
(assert  (and (and (and (and (and (and (and (and (and (= ($generated@@1 $generated@@653) 23) (forall (($generated@@654 T@U) ) (! (= (type ($generated@@641 $generated@@654)) $generated@@653)
 :pattern ( ($generated@@641 $generated@@654))
))) (= (type $generated@@642) $generated@@653)) (= (type $generated@@643) $generated@@653)) (= (type $generated@@644) ($generated@@195 $generated@@88 $generated@@4))) (= (type $generated@@645) ($generated@@87 $generated@@88 $generated@@89))) (= (type $generated@@646) $generated@@88)) (= (type $generated@@647) ($generated@@87 $generated@@88 $generated@@89))) (= (type $generated@@649) $generated@@88)) (= (type $generated@@651) $generated@@88)))
(set-option :timeout 0)
(set-option :rlimit 0)
(assert (not
 (=> (= (ControlFlow 0 0) 10) (let (($generated@@655  (=> (= ($generated@@641 $generated@@642) $generated@@642) (=> (and (= ($generated@@641 $generated@@643) $generated@@643) (= $generated@@644 ($generated@@194 $generated@@155 $generated@@645 $generated@@60 false))) (=> (and (and (not (= $generated@@646 $generated@@155)) (and ($generated@@148 $generated@@646 $generated@@249) ($generated@@85 $generated@@646 $generated@@249 $generated@@645))) (and ($generated@@158 $generated@@647) ($generated@@648 $generated@@647))) (=> (and (and (and (not (= $generated@@649 $generated@@155)) (and ($generated@@148 $generated@@649 $generated@@249) ($generated@@85 $generated@@649 $generated@@249 $generated@@647))) (not ($generated@@0 ($generated@@94 ($generated@@92 $generated@@645 $generated@@649) $generated@@60)))) (and (forall (($generated@@656 T@U) ) (!  (=> (= (type $generated@@656) $generated@@88) (=> (and (not (= $generated@@656 $generated@@155)) ($generated@@0 ($generated@@94 ($generated@@92 $generated@@645 $generated@@656) $generated@@60))) (= ($generated@@92 $generated@@647 $generated@@656) ($generated@@92 $generated@@645 $generated@@656))))
 :pattern ( ($generated@@92 $generated@@647 $generated@@656))
)) ($generated@@143 $generated@@645 $generated@@647))) (and (=> (= (ControlFlow 0 2) (- 0 9)) true) (and (=> (= (ControlFlow 0 2) (- 0 8)) (not (= $generated@@649 $generated@@155))) (=> (not (= $generated@@649 $generated@@155)) (and (=> (= (ControlFlow 0 2) (- 0 7)) true) (and (=> (= (ControlFlow 0 2) (- 0 6)) (not (= $generated@@649 $generated@@155))) (=> (not (= $generated@@649 $generated@@155)) (and (=> (= (ControlFlow 0 2) (- 0 5)) true) (and (=> (= (ControlFlow 0 2) (- 0 4)) (not (= $generated@@649 $generated@@155))) (=> (not (= $generated@@649 $generated@@155)) (and (=> (= (ControlFlow 0 2) (- 0 3)) true) (=> (= (ControlFlow 0 2) (- 0 1)) (not (= $generated@@649 $generated@@155)))))))))))))))))))
(let (($generated@@657  (=> (and ($generated@@158 $generated@@645) ($generated@@648 $generated@@645)) (=> (and (and (=> $generated@@650 (and ($generated@@148 $generated@@651 $generated@@249) ($generated@@85 $generated@@651 $generated@@249 $generated@@645))) true) (and (= 1 $generated@@652) (= (ControlFlow 0 10) 2))) $generated@@655))))
$generated@@657)))
))
(check-sat)
(pop 1)
; Valid
(get-info :rlimit)
(reset)
(set-option :rlimit 0)
; did a full reset
(reset)
(set-option :print-success false)
(set-info :smt-lib-version 2.6)
(set-option :auto_config false)
(set-option :type_check true)
(set-option :smt.case_split 3)
(set-option :smt.qi.eager_threshold 100)
(set-option :smt.delay_units true)
(set-option :smt.arith.solver 2)
(set-option :smt.mbqi false)
(set-option :model.compact false)
(set-option :model.v2 true)
(set-option :pp.bv_literals false)
; done setting options


(set-info :category "industrial")
(declare-sort |T@U| 0)
(declare-sort |T@T| 0)
(declare-fun real_pow (Real Real) Real)
(declare-fun UOrdering2 (|T@U| |T@U|) Bool)
(declare-fun UOrdering3 (|T@T| |T@U| |T@U|) Bool)
(declare-fun tickleBool (Bool) Bool)
(assert (and (tickleBool true) (tickleBool false)))
(declare-fun $generated (T@U) Int)
(declare-fun $generated@@0 (T@U) Bool)
(declare-fun $generated@@1 (T@T) Int)
(declare-fun $generated@@2 () T@T)
(declare-fun $generated@@3 () T@T)
(declare-fun $generated@@4 () T@T)
(declare-fun $generated@@5 () T@T)
(declare-fun $generated@@6 () T@T)
(declare-fun $generated@@7 () T@T)
(declare-fun $generated@@8 (Int) T@U)
(declare-fun type (T@U) T@T)
(declare-fun $generated@@9 (Real) T@U)
(declare-fun $generated@@10 (T@U) Real)
(declare-fun $generated@@11 (Bool) T@U)
(declare-fun $generated@@12 (RoundingMode) T@U)
(declare-fun $generated@@13 (T@U) RoundingMode)
(declare-fun $generated@@14 (String) T@U)
(declare-fun $generated@@15 (T@U) String)
(declare-fun $generated@@16 ((RegEx String)) T@U)
(declare-fun $generated@@17 (T@U) (RegEx String))
(declare-fun $generated@@44 (T@U T@U T@U) T@U)
(declare-fun $generated@@45 (T@U T@U T@U Bool) T@U)
(declare-fun $generated@@46 (T@T) T@T)
(declare-fun $generated@@47 () T@T)
(declare-fun $generated@@48 (T@T T@T) T@T)
(declare-fun $generated@@49 () T@T)
(declare-fun $generated@@50 (T@T) T@T)
(declare-fun $generated@@51 (T@U T@U) T@U)
(declare-fun $generated@@52 (T@U T@U) T@U)
(declare-fun $generated@@53 (T@T) T@T)
(declare-fun $generated@@54 (T@T) T@T)
(declare-fun $generated@@55 (T@U T@U T@U) T@U)
(declare-fun $generated@@56 (T@U T@U T@U) T@U)
(declare-fun $generated@@57 (T@T T@T) T@T)
(declare-fun $generated@@58 (T@T) T@T)
(declare-fun $generated@@59 (T@T) T@T)
(declare-fun $generated@@60 (T@U T@U T@U T@U) T@U)
(declare-fun $generated@@157 () Int)
(declare-fun $generated@@158 () Bool)
(declare-fun $generated@@159 () Int)
(assert  (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (= ($generated@@1 $generated@@2) 0) (= ($generated@@1 $generated@@3) 1)) (= ($generated@@1 $generated@@4) 2)) (= ($generated@@1 $generated@@5) 3)) (= ($generated@@1 $generated@@6) 4)) (= ($generated@@1 $generated@@7) 5)) (forall (($generated@@18 Int) ) (! (= ($generated ($generated@@8 $generated@@18)) $generated@@18)
 :pattern ( ($generated@@8 $generated@@18))
))) (forall (($generated@@19 T@U) ) (!  (=> (= (type $generated@@19) $generated@@2) (= ($generated@@8 ($generated $generated@@19)) $generated@@19))
 :pattern ( ($generated $generated@@19))
))) (forall (($generated@@20 Int) ) (! (= (type ($generated@@8 $generated@@20)) $generated@@2)
 :pattern ( ($generated@@8 $generated@@20))
))) (forall (($generated@@21 Real) ) (! (= ($generated@@10 ($generated@@9 $generated@@21)) $generated@@21)
 :pattern ( ($generated@@9 $generated@@21))
))) (forall (($generated@@22 T@U) ) (!  (=> (= (type $generated@@22) $generated@@3) (= ($generated@@9 ($generated@@10 $generated@@22)) $generated@@22))
 :pattern ( ($generated@@10 $generated@@22))
))) (forall (($generated@@23 Real) ) (! (= (type ($generated@@9 $generated@@23)) $generated@@3)
 :pattern ( ($generated@@9 $generated@@23))
))) (forall (($generated@@24 Bool) ) (! (= ($generated@@0 ($generated@@11 $generated@@24)) $generated@@24)
 :pattern ( ($generated@@11 $generated@@24))
))) (forall (($generated@@25 T@U) ) (!  (=> (= (type $generated@@25) $generated@@4) (= ($generated@@11 ($generated@@0 $generated@@25)) $generated@@25))
 :pattern ( ($generated@@0 $generated@@25))
))) (forall (($generated@@26 Bool) ) (! (= (type ($generated@@11 $generated@@26)) $generated@@4)
 :pattern ( ($generated@@11 $generated@@26))
))) (forall (($generated@@27 RoundingMode) ) (! (= ($generated@@13 ($generated@@12 $generated@@27)) $generated@@27)
 :pattern ( ($generated@@12 $generated@@27))
))) (forall (($generated@@28 T@U) ) (!  (=> (= (type $generated@@28) $generated@@5) (= ($generated@@12 ($generated@@13 $generated@@28)) $generated@@28))
 :pattern ( ($generated@@13 $generated@@28))
))) (forall (($generated@@29 RoundingMode) ) (! (= (type ($generated@@12 $generated@@29)) $generated@@5)
 :pattern ( ($generated@@12 $generated@@29))
))) (forall (($generated@@30 String) ) (! (= ($generated@@15 ($generated@@14 $generated@@30)) $generated@@30)
 :pattern ( ($generated@@14 $generated@@30))
))) (forall (($generated@@31 T@U) ) (!  (=> (= (type $generated@@31) $generated@@6) (= ($generated@@14 ($generated@@15 $generated@@31)) $generated@@31))
 :pattern ( ($generated@@15 $generated@@31))
))) (forall (($generated@@32 String) ) (! (= (type ($generated@@14 $generated@@32)) $generated@@6)
 :pattern ( ($generated@@14 $generated@@32))
))) (forall (($generated@@33 (RegEx String)) ) (! (= ($generated@@17 ($generated@@16 $generated@@33)) $generated@@33)
 :pattern ( ($generated@@16 $generated@@33))
))) (forall (($generated@@34 T@U) ) (!  (=> (= (type $generated@@34) $generated@@7) (= ($generated@@16 ($generated@@17 $generated@@34)) $generated@@34))
 :pattern ( ($generated@@17 $generated@@34))
))) (forall (($generated@@35 (RegEx String)) ) (! (= (type ($generated@@16 $generated@@35)) $generated@@7)
 :pattern ( ($generated@@16 $generated@@35))
))))
(assert (forall (($generated@@36 T@U) ) (! (UOrdering2 $generated@@36 $generated@@36)
 :no-pattern ($generated $generated@@36)
 :no-pattern ($generated@@0 $generated@@36)
)))
(assert (forall (($generated@@37 T@U) ($generated@@38 T@U) ($generated@@39 T@U) ) (! (let (($generated@@40 (type $generated@@37)))
 (=> (and (and (= (type $generated@@38) $generated@@40) (= (type $generated@@39) $generated@@40)) (and (UOrdering2 $generated@@37 $generated@@38) (UOrdering2 $generated@@38 $generated@@39))) (UOrdering2 $generated@@37 $generated@@39)))
 :pattern ( (UOrdering2 $generated@@37 $generated@@38) (UOrdering2 $generated@@38 $generated@@39))
)))
(assert (forall (($generated@@41 T@U) ($generated@@42 T@U) ) (! (let (($generated@@43 (type $generated@@41)))
 (=> (= (type $generated@@42) $generated@@43) (=> (and (UOrdering2 $generated@@41 $generated@@42) (UOrdering2 $generated@@42 $generated@@41)) (= $generated@@41 $generated@@42))))
 :pattern ( (UOrdering2 $generated@@41 $generated@@42) (UOrdering2 $generated@@42 $generated@@41))
)))
(assert  (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (forall (($generated@@61 T@T) ($generated@@62 T@T) ) (= ($generated@@1 ($generated@@48 $generated@@61 $generated@@62)) 6)) (forall (($generated@@63 T@T) ($generated@@64 T@T) ) (! (= ($generated@@53 ($generated@@48 $generated@@63 $generated@@64)) $generated@@63)
 :pattern ( ($generated@@48 $generated@@63 $generated@@64))
))) (forall (($generated@@65 T@T) ($generated@@66 T@T) ) (! (= ($generated@@54 ($generated@@48 $generated@@65 $generated@@66)) $generated@@66)
 :pattern ( ($generated@@48 $generated@@65 $generated@@66))
))) (forall (($generated@@67 T@U) ($generated@@68 T@U) ) (! (let (($generated@@69 ($generated@@54 (type $generated@@67))))
(= (type ($generated@@52 $generated@@67 $generated@@68)) $generated@@69))
 :pattern ( ($generated@@52 $generated@@67 $generated@@68))
))) (forall (($generated@@70 T@U) ($generated@@71 T@U) ($generated@@72 T@U) ) (! (let (($generated@@73 (type $generated@@72)))
(let (($generated@@74 (type $generated@@71)))
(= (type ($generated@@55 $generated@@70 $generated@@71 $generated@@72)) ($generated@@48 $generated@@74 $generated@@73))))
 :pattern ( ($generated@@55 $generated@@70 $generated@@71 $generated@@72))
))) (forall (($generated@@75 T@U) ($generated@@76 T@U) ($generated@@77 T@U) ) (! (let (($generated@@78 ($generated@@54 (type $generated@@75))))
 (=> (= (type $generated@@77) $generated@@78) (= ($generated@@52 ($generated@@55 $generated@@75 $generated@@76 $generated@@77) $generated@@76) $generated@@77)))
 :weight 0
))) (and (forall (($generated@@79 T@U) ($generated@@80 T@U) ($generated@@81 T@U) ($generated@@82 T@U) ) (!  (or (= $generated@@81 $generated@@82) (= ($generated@@52 ($generated@@55 $generated@@80 $generated@@81 $generated@@79) $generated@@82) ($generated@@52 $generated@@80 $generated@@82)))
 :weight 0
)) (forall (($generated@@83 T@U) ($generated@@84 T@U) ($generated@@85 T@U) ($generated@@86 T@U) ) (!  (or true (= ($generated@@52 ($generated@@55 $generated@@84 $generated@@85 $generated@@83) $generated@@86) ($generated@@52 $generated@@84 $generated@@86)))
 :weight 0
)))) (forall (($generated@@87 T@T) ) (= ($generated@@1 ($generated@@50 $generated@@87)) 7))) (forall (($generated@@88 T@T) ) (! (= ($generated@@46 ($generated@@50 $generated@@88)) $generated@@88)
 :pattern ( ($generated@@50 $generated@@88))
))) (forall (($generated@@89 T@U) ($generated@@90 T@U) ) (! (let (($generated@@91 ($generated@@46 (type $generated@@90))))
(= (type ($generated@@51 $generated@@89 $generated@@90)) $generated@@91))
 :pattern ( ($generated@@51 $generated@@89 $generated@@90))
))) (= ($generated@@1 $generated@@49) 8)) (forall (($generated@@92 T@U) ($generated@@93 T@U) ($generated@@94 T@U) ) (! (= (type ($generated@@56 $generated@@92 $generated@@93 $generated@@94)) $generated@@49)
 :pattern ( ($generated@@56 $generated@@92 $generated@@93 $generated@@94))
))) (forall (($generated@@95 T@U) ($generated@@96 T@U) ($generated@@97 T@U) ) (! (let (($generated@@98 ($generated@@46 (type $generated@@96))))
 (=> (= (type $generated@@97) $generated@@98) (= ($generated@@51 ($generated@@56 $generated@@95 $generated@@96 $generated@@97) $generated@@96) $generated@@97)))
 :weight 0
))) (and (forall (($generated@@99 T@U) ($generated@@100 T@U) ($generated@@101 T@U) ($generated@@102 T@U) ) (!  (or (= $generated@@101 $generated@@102) (= ($generated@@51 ($generated@@56 $generated@@100 $generated@@101 $generated@@99) $generated@@102) ($generated@@51 $generated@@100 $generated@@102)))
 :weight 0
)) (forall (($generated@@103 T@U) ($generated@@104 T@U) ($generated@@105 T@U) ($generated@@106 T@U) ) (!  (or true (= ($generated@@51 ($generated@@56 $generated@@104 $generated@@105 $generated@@103) $generated@@106) ($generated@@51 $generated@@104 $generated@@106)))
 :weight 0
)))) (= ($generated@@1 $generated@@47) 9)) (forall (($generated@@107 T@T) ($generated@@108 T@T) ) (= ($generated@@1 ($generated@@57 $generated@@107 $generated@@108)) 10))) (forall (($generated@@109 T@T) ($generated@@110 T@T) ) (! (= ($generated@@58 ($generated@@57 $generated@@109 $generated@@110)) $generated@@109)
 :pattern ( ($generated@@57 $generated@@109 $generated@@110))
))) (forall (($generated@@111 T@T) ($generated@@112 T@T) ) (! (= ($generated@@59 ($generated@@57 $generated@@111 $generated@@112)) $generated@@112)
 :pattern ( ($generated@@57 $generated@@111 $generated@@112))
))) (forall (($generated@@113 T@U) ($generated@@114 T@U) ($generated@@115 T@U) ) (! (let (($generated@@116 ($generated@@59 (type $generated@@113))))
(= (type ($generated@@44 $generated@@113 $generated@@114 $generated@@115)) $generated@@116))
 :pattern ( ($generated@@44 $generated@@113 $generated@@114 $generated@@115))
))) (forall (($generated@@117 T@U) ($generated@@118 T@U) ($generated@@119 T@U) ($generated@@120 T@U) ) (! (let (($generated@@121 (type $generated@@120)))
(let (($generated@@122 (type $generated@@118)))
(= (type ($generated@@60 $generated@@117 $generated@@118 $generated@@119 $generated@@120)) ($generated@@57 $generated@@122 $generated@@121))))
 :pattern ( ($generated@@60 $generated@@117 $generated@@118 $generated@@119 $generated@@120))
))) (forall (($generated@@123 T@U) ($generated@@124 T@U) ($generated@@125 T@U) ($generated@@126 T@U) ) (! (let (($generated@@127 ($generated@@59 (type $generated@@123))))
 (=> (= (type $generated@@126) $generated@@127) (= ($generated@@44 ($generated@@60 $generated@@123 $generated@@124 $generated@@125 $generated@@126) $generated@@124 $generated@@125) $generated@@126)))
 :weight 0
))) (and (and (forall (($generated@@128 T@U) ($generated@@129 T@U) ($generated@@130 T@U) ($generated@@131 T@U) ($generated@@132 T@U) ($generated@@133 T@U) ) (!  (or (= $generated@@130 $generated@@132) (= ($generated@@44 ($generated@@60 $generated@@129 $generated@@130 $generated@@131 $generated@@128) $generated@@132 $generated@@133) ($generated@@44 $generated@@129 $generated@@132 $generated@@133)))
 :weight 0
)) (forall (($generated@@134 T@U) ($generated@@135 T@U) ($generated@@136 T@U) ($generated@@137 T@U) ($generated@@138 T@U) ($generated@@139 T@U) ) (!  (or (= $generated@@137 $generated@@139) (= ($generated@@44 ($generated@@60 $generated@@135 $generated@@136 $generated@@137 $generated@@134) $generated@@138 $generated@@139) ($generated@@44 $generated@@135 $generated@@138 $generated@@139)))
 :weight 0
))) (forall (($generated@@140 T@U) ($generated@@141 T@U) ($generated@@142 T@U) ($generated@@143 T@U) ($generated@@144 T@U) ($generated@@145 T@U) ) (!  (or true (= ($generated@@44 ($generated@@60 $generated@@141 $generated@@142 $generated@@143 $generated@@140) $generated@@144 $generated@@145) ($generated@@44 $generated@@141 $generated@@144 $generated@@145)))
 :weight 0
)))) (forall (($generated@@146 T@U) ($generated@@147 T@U) ($generated@@148 T@U) ($generated@@149 Bool) ) (! (= (type ($generated@@45 $generated@@146 $generated@@147 $generated@@148 $generated@@149)) ($generated@@57 $generated@@47 $generated@@4))
 :pattern ( ($generated@@45 $generated@@146 $generated@@147 $generated@@148 $generated@@149))
))))
(assert (forall (($generated@@150 T@U) ($generated@@151 T@U) ($generated@@152 T@U) ($generated@@153 Bool) ($generated@@154 T@U) ($generated@@155 T@U) ) (! (let (($generated@@156 ($generated@@46 (type $generated@@155))))
 (=> (and (and (and (and (= (type $generated@@150) $generated@@47) (= (type $generated@@151) ($generated@@48 $generated@@47 $generated@@49))) (= (type $generated@@152) ($generated@@50 $generated@@4))) (= (type $generated@@154) $generated@@47)) (= (type $generated@@155) ($generated@@50 $generated@@156))) (= ($generated@@0 ($generated@@44 ($generated@@45 $generated@@150 $generated@@151 $generated@@152 $generated@@153) $generated@@154 $generated@@155))  (=> (and (not (= $generated@@154 $generated@@150)) ($generated@@0 ($generated@@51 ($generated@@52 $generated@@151 $generated@@154) $generated@@152))) $generated@@153))))
 :pattern ( ($generated@@44 ($generated@@45 $generated@@150 $generated@@151 $generated@@152 $generated@@153) $generated@@154 $generated@@155))
)))
(assert  (=> (<= 0 $generated@@157) (=> (or $generated@@158 (not (= 0 $generated@@157))) (> $generated@@159 5))))
(push 1)
(declare-fun ControlFlow (Int Int) Int)
(declare-fun $generated@@160 () T@U)
(declare-fun $generated@@161 () T@U)
(declare-fun $generated@@162 () T@U)
(declare-fun $generated@@163 () T@U)
(declare-fun $generated@@164 (T@U) T@U)
(declare-fun $generated@@165 () T@U)
(declare-fun $generated@@166 () T@U)
(declare-fun $generated@@167 (T@U) Bool)
(declare-fun $generated@@168 (T@U) Bool)
(declare-fun $generated@@169 () T@T)
(assert  (and (and (and (and (and (and (and (= (type $generated@@160) ($generated@@57 $generated@@47 $generated@@4)) (= (type $generated@@161) $generated@@47)) (= (type $generated@@162) ($generated@@48 $generated@@47 $generated@@49))) (= (type $generated@@163) ($generated@@50 $generated@@4))) (= ($generated@@1 $generated@@169) 11)) (forall (($generated@@170 T@U) ) (! (= (type ($generated@@164 $generated@@170)) $generated@@169)
 :pattern ( ($generated@@164 $generated@@170))
))) (= (type $generated@@165) $generated@@169)) (= (type $generated@@166) $generated@@169)))
(set-option :timeout 0)
(set-option :rlimit 0)
(assert (not
 (=> (= (ControlFlow 0 0) 5) (let (($generated@@171 true))
(let (($generated@@172  (=> (= (ControlFlow 0 2) (- 0 1)) true)))
(let (($generated@@173  (=> (= $generated@@160 ($generated@@45 $generated@@161 $generated@@162 $generated@@163 false)) (=> (and (= ($generated@@164 $generated@@165) $generated@@165) (= ($generated@@164 $generated@@166) $generated@@166)) (and (=> (= (ControlFlow 0 4) 2) $generated@@172) (=> (= (ControlFlow 0 4) 3) $generated@@171))))))
(let (($generated@@174  (=> (and (and ($generated@@167 $generated@@162) ($generated@@168 $generated@@162)) (and (= 0 $generated@@157) (= (ControlFlow 0 5) 4))) $generated@@173)))
$generated@@174)))))
))
(check-sat)
(pop 1)
; Valid
(get-info :rlimit)
(reset)
(set-option :rlimit 0)
; did a full reset
(reset)
(set-option :print-success false)
(set-info :smt-lib-version 2.6)
(set-option :auto_config false)
(set-option :type_check true)
(set-option :smt.case_split 3)
(set-option :smt.qi.eager_threshold 100)
(set-option :smt.delay_units true)
(set-option :smt.arith.solver 2)
(set-option :smt.mbqi false)
(set-option :model.compact false)
(set-option :model.v2 true)
(set-option :pp.bv_literals false)
; done setting options


(set-info :category "industrial")
(declare-sort |T@U| 0)
(declare-sort |T@T| 0)
(declare-fun real_pow (Real Real) Real)
(declare-fun UOrdering2 (|T@U| |T@U|) Bool)
(declare-fun UOrdering3 (|T@T| |T@U| |T@U|) Bool)
(declare-fun tickleBool (Bool) Bool)
(assert (and (tickleBool true) (tickleBool false)))
(declare-fun $generated (T@U) Int)
(declare-fun $generated@@0 (T@U) Bool)
(declare-fun $generated@@1 (T@T) Int)
(declare-fun $generated@@2 () T@T)
(declare-fun $generated@@3 () T@T)
(declare-fun $generated@@4 () T@T)
(declare-fun $generated@@5 () T@T)
(declare-fun $generated@@6 () T@T)
(declare-fun $generated@@7 () T@T)
(declare-fun $generated@@8 (Int) T@U)
(declare-fun type (T@U) T@T)
(declare-fun $generated@@9 (Real) T@U)
(declare-fun $generated@@10 (T@U) Real)
(declare-fun $generated@@11 (Bool) T@U)
(declare-fun $generated@@12 (RoundingMode) T@U)
(declare-fun $generated@@13 (T@U) RoundingMode)
(declare-fun $generated@@14 (String) T@U)
(declare-fun $generated@@15 (T@U) String)
(declare-fun $generated@@16 ((RegEx String)) T@U)
(declare-fun $generated@@17 (T@U) (RegEx String))
(declare-fun $generated@@44 (T@U T@U T@U) T@U)
(declare-fun $generated@@45 (T@U T@U T@U Bool) T@U)
(declare-fun $generated@@46 (T@T) T@T)
(declare-fun $generated@@47 () T@T)
(declare-fun $generated@@48 (T@T T@T) T@T)
(declare-fun $generated@@49 () T@T)
(declare-fun $generated@@50 (T@T) T@T)
(declare-fun $generated@@51 (T@U T@U) T@U)
(declare-fun $generated@@52 (T@U T@U) T@U)
(declare-fun $generated@@53 (T@T) T@T)
(declare-fun $generated@@54 (T@T) T@T)
(declare-fun $generated@@55 (T@U T@U T@U) T@U)
(declare-fun $generated@@56 (T@U T@U T@U) T@U)
(declare-fun $generated@@57 (T@T T@T) T@T)
(declare-fun $generated@@58 (T@T) T@T)
(declare-fun $generated@@59 (T@T) T@T)
(declare-fun $generated@@60 (T@U T@U T@U T@U) T@U)
(declare-fun $generated@@157 () Int)
(declare-fun $generated@@158 (T@U) Int)
(declare-fun $generated@@159 (T@U) T@U)
(declare-fun $generated@@160 () T@T)
(declare-fun $generated@@161 () Bool)
(declare-fun $generated@@162 (Int) Int)
(declare-fun $generated@@167 (T@U) T@U)
(declare-fun $generated@@172 (T@U) T@U)
(declare-fun $generated@@173 (T@T T@U) T@U)
(declare-fun $generated@@174 () T@T)
(declare-fun $generated@@180 (T@U) T@U)
(declare-fun $generated@@181 () T@U)
(assert  (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (= ($generated@@1 $generated@@2) 0) (= ($generated@@1 $generated@@3) 1)) (= ($generated@@1 $generated@@4) 2)) (= ($generated@@1 $generated@@5) 3)) (= ($generated@@1 $generated@@6) 4)) (= ($generated@@1 $generated@@7) 5)) (forall (($generated@@18 Int) ) (! (= ($generated ($generated@@8 $generated@@18)) $generated@@18)
 :pattern ( ($generated@@8 $generated@@18))
))) (forall (($generated@@19 T@U) ) (!  (=> (= (type $generated@@19) $generated@@2) (= ($generated@@8 ($generated $generated@@19)) $generated@@19))
 :pattern ( ($generated $generated@@19))
))) (forall (($generated@@20 Int) ) (! (= (type ($generated@@8 $generated@@20)) $generated@@2)
 :pattern ( ($generated@@8 $generated@@20))
))) (forall (($generated@@21 Real) ) (! (= ($generated@@10 ($generated@@9 $generated@@21)) $generated@@21)
 :pattern ( ($generated@@9 $generated@@21))
))) (forall (($generated@@22 T@U) ) (!  (=> (= (type $generated@@22) $generated@@3) (= ($generated@@9 ($generated@@10 $generated@@22)) $generated@@22))
 :pattern ( ($generated@@10 $generated@@22))
))) (forall (($generated@@23 Real) ) (! (= (type ($generated@@9 $generated@@23)) $generated@@3)
 :pattern ( ($generated@@9 $generated@@23))
))) (forall (($generated@@24 Bool) ) (! (= ($generated@@0 ($generated@@11 $generated@@24)) $generated@@24)
 :pattern ( ($generated@@11 $generated@@24))
))) (forall (($generated@@25 T@U) ) (!  (=> (= (type $generated@@25) $generated@@4) (= ($generated@@11 ($generated@@0 $generated@@25)) $generated@@25))
 :pattern ( ($generated@@0 $generated@@25))
))) (forall (($generated@@26 Bool) ) (! (= (type ($generated@@11 $generated@@26)) $generated@@4)
 :pattern ( ($generated@@11 $generated@@26))
))) (forall (($generated@@27 RoundingMode) ) (! (= ($generated@@13 ($generated@@12 $generated@@27)) $generated@@27)
 :pattern ( ($generated@@12 $generated@@27))
))) (forall (($generated@@28 T@U) ) (!  (=> (= (type $generated@@28) $generated@@5) (= ($generated@@12 ($generated@@13 $generated@@28)) $generated@@28))
 :pattern ( ($generated@@13 $generated@@28))
))) (forall (($generated@@29 RoundingMode) ) (! (= (type ($generated@@12 $generated@@29)) $generated@@5)
 :pattern ( ($generated@@12 $generated@@29))
))) (forall (($generated@@30 String) ) (! (= ($generated@@15 ($generated@@14 $generated@@30)) $generated@@30)
 :pattern ( ($generated@@14 $generated@@30))
))) (forall (($generated@@31 T@U) ) (!  (=> (= (type $generated@@31) $generated@@6) (= ($generated@@14 ($generated@@15 $generated@@31)) $generated@@31))
 :pattern ( ($generated@@15 $generated@@31))
))) (forall (($generated@@32 String) ) (! (= (type ($generated@@14 $generated@@32)) $generated@@6)
 :pattern ( ($generated@@14 $generated@@32))
))) (forall (($generated@@33 (RegEx String)) ) (! (= ($generated@@17 ($generated@@16 $generated@@33)) $generated@@33)
 :pattern ( ($generated@@16 $generated@@33))
))) (forall (($generated@@34 T@U) ) (!  (=> (= (type $generated@@34) $generated@@7) (= ($generated@@16 ($generated@@17 $generated@@34)) $generated@@34))
 :pattern ( ($generated@@17 $generated@@34))
))) (forall (($generated@@35 (RegEx String)) ) (! (= (type ($generated@@16 $generated@@35)) $generated@@7)
 :pattern ( ($generated@@16 $generated@@35))
))))
(assert (forall (($generated@@36 T@U) ) (! (UOrdering2 $generated@@36 $generated@@36)
 :no-pattern ($generated $generated@@36)
 :no-pattern ($generated@@0 $generated@@36)
)))
(assert (forall (($generated@@37 T@U) ($generated@@38 T@U) ($generated@@39 T@U) ) (! (let (($generated@@40 (type $generated@@37)))
 (=> (and (and (= (type $generated@@38) $generated@@40) (= (type $generated@@39) $generated@@40)) (and (UOrdering2 $generated@@37 $generated@@38) (UOrdering2 $generated@@38 $generated@@39))) (UOrdering2 $generated@@37 $generated@@39)))
 :pattern ( (UOrdering2 $generated@@37 $generated@@38) (UOrdering2 $generated@@38 $generated@@39))
)))
(assert (forall (($generated@@41 T@U) ($generated@@42 T@U) ) (! (let (($generated@@43 (type $generated@@41)))
 (=> (= (type $generated@@42) $generated@@43) (=> (and (UOrdering2 $generated@@41 $generated@@42) (UOrdering2 $generated@@42 $generated@@41)) (= $generated@@41 $generated@@42))))
 :pattern ( (UOrdering2 $generated@@41 $generated@@42) (UOrdering2 $generated@@42 $generated@@41))
)))
(assert  (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (forall (($generated@@61 T@T) ($generated@@62 T@T) ) (= ($generated@@1 ($generated@@48 $generated@@61 $generated@@62)) 6)) (forall (($generated@@63 T@T) ($generated@@64 T@T) ) (! (= ($generated@@53 ($generated@@48 $generated@@63 $generated@@64)) $generated@@63)
 :pattern ( ($generated@@48 $generated@@63 $generated@@64))
))) (forall (($generated@@65 T@T) ($generated@@66 T@T) ) (! (= ($generated@@54 ($generated@@48 $generated@@65 $generated@@66)) $generated@@66)
 :pattern ( ($generated@@48 $generated@@65 $generated@@66))
))) (forall (($generated@@67 T@U) ($generated@@68 T@U) ) (! (let (($generated@@69 ($generated@@54 (type $generated@@67))))
(= (type ($generated@@52 $generated@@67 $generated@@68)) $generated@@69))
 :pattern ( ($generated@@52 $generated@@67 $generated@@68))
))) (forall (($generated@@70 T@U) ($generated@@71 T@U) ($generated@@72 T@U) ) (! (let (($generated@@73 (type $generated@@72)))
(let (($generated@@74 (type $generated@@71)))
(= (type ($generated@@55 $generated@@70 $generated@@71 $generated@@72)) ($generated@@48 $generated@@74 $generated@@73))))
 :pattern ( ($generated@@55 $generated@@70 $generated@@71 $generated@@72))
))) (forall (($generated@@75 T@U) ($generated@@76 T@U) ($generated@@77 T@U) ) (! (let (($generated@@78 ($generated@@54 (type $generated@@75))))
 (=> (= (type $generated@@77) $generated@@78) (= ($generated@@52 ($generated@@55 $generated@@75 $generated@@76 $generated@@77) $generated@@76) $generated@@77)))
 :weight 0
))) (and (forall (($generated@@79 T@U) ($generated@@80 T@U) ($generated@@81 T@U) ($generated@@82 T@U) ) (!  (or (= $generated@@81 $generated@@82) (= ($generated@@52 ($generated@@55 $generated@@80 $generated@@81 $generated@@79) $generated@@82) ($generated@@52 $generated@@80 $generated@@82)))
 :weight 0
)) (forall (($generated@@83 T@U) ($generated@@84 T@U) ($generated@@85 T@U) ($generated@@86 T@U) ) (!  (or true (= ($generated@@52 ($generated@@55 $generated@@84 $generated@@85 $generated@@83) $generated@@86) ($generated@@52 $generated@@84 $generated@@86)))
 :weight 0
)))) (forall (($generated@@87 T@T) ) (= ($generated@@1 ($generated@@50 $generated@@87)) 7))) (forall (($generated@@88 T@T) ) (! (= ($generated@@46 ($generated@@50 $generated@@88)) $generated@@88)
 :pattern ( ($generated@@50 $generated@@88))
))) (forall (($generated@@89 T@U) ($generated@@90 T@U) ) (! (let (($generated@@91 ($generated@@46 (type $generated@@90))))
(= (type ($generated@@51 $generated@@89 $generated@@90)) $generated@@91))
 :pattern ( ($generated@@51 $generated@@89 $generated@@90))
))) (= ($generated@@1 $generated@@49) 8)) (forall (($generated@@92 T@U) ($generated@@93 T@U) ($generated@@94 T@U) ) (! (= (type ($generated@@56 $generated@@92 $generated@@93 $generated@@94)) $generated@@49)
 :pattern ( ($generated@@56 $generated@@92 $generated@@93 $generated@@94))
))) (forall (($generated@@95 T@U) ($generated@@96 T@U) ($generated@@97 T@U) ) (! (let (($generated@@98 ($generated@@46 (type $generated@@96))))
 (=> (= (type $generated@@97) $generated@@98) (= ($generated@@51 ($generated@@56 $generated@@95 $generated@@96 $generated@@97) $generated@@96) $generated@@97)))
 :weight 0
))) (and (forall (($generated@@99 T@U) ($generated@@100 T@U) ($generated@@101 T@U) ($generated@@102 T@U) ) (!  (or (= $generated@@101 $generated@@102) (= ($generated@@51 ($generated@@56 $generated@@100 $generated@@101 $generated@@99) $generated@@102) ($generated@@51 $generated@@100 $generated@@102)))
 :weight 0
)) (forall (($generated@@103 T@U) ($generated@@104 T@U) ($generated@@105 T@U) ($generated@@106 T@U) ) (!  (or true (= ($generated@@51 ($generated@@56 $generated@@104 $generated@@105 $generated@@103) $generated@@106) ($generated@@51 $generated@@104 $generated@@106)))
 :weight 0
)))) (= ($generated@@1 $generated@@47) 9)) (forall (($generated@@107 T@T) ($generated@@108 T@T) ) (= ($generated@@1 ($generated@@57 $generated@@107 $generated@@108)) 10))) (forall (($generated@@109 T@T) ($generated@@110 T@T) ) (! (= ($generated@@58 ($generated@@57 $generated@@109 $generated@@110)) $generated@@109)
 :pattern ( ($generated@@57 $generated@@109 $generated@@110))
))) (forall (($generated@@111 T@T) ($generated@@112 T@T) ) (! (= ($generated@@59 ($generated@@57 $generated@@111 $generated@@112)) $generated@@112)
 :pattern ( ($generated@@57 $generated@@111 $generated@@112))
))) (forall (($generated@@113 T@U) ($generated@@114 T@U) ($generated@@115 T@U) ) (! (let (($generated@@116 ($generated@@59 (type $generated@@113))))
(= (type ($generated@@44 $generated@@113 $generated@@114 $generated@@115)) $generated@@116))
 :pattern ( ($generated@@44 $generated@@113 $generated@@114 $generated@@115))
))) (forall (($generated@@117 T@U) ($generated@@118 T@U) ($generated@@119 T@U) ($generated@@120 T@U) ) (! (let (($generated@@121 (type $generated@@120)))
(let (($generated@@122 (type $generated@@118)))
(= (type ($generated@@60 $generated@@117 $generated@@118 $generated@@119 $generated@@120)) ($generated@@57 $generated@@122 $generated@@121))))
 :pattern ( ($generated@@60 $generated@@117 $generated@@118 $generated@@119 $generated@@120))
))) (forall (($generated@@123 T@U) ($generated@@124 T@U) ($generated@@125 T@U) ($generated@@126 T@U) ) (! (let (($generated@@127 ($generated@@59 (type $generated@@123))))
 (=> (= (type $generated@@126) $generated@@127) (= ($generated@@44 ($generated@@60 $generated@@123 $generated@@124 $generated@@125 $generated@@126) $generated@@124 $generated@@125) $generated@@126)))
 :weight 0
))) (and (and (forall (($generated@@128 T@U) ($generated@@129 T@U) ($generated@@130 T@U) ($generated@@131 T@U) ($generated@@132 T@U) ($generated@@133 T@U) ) (!  (or (= $generated@@130 $generated@@132) (= ($generated@@44 ($generated@@60 $generated@@129 $generated@@130 $generated@@131 $generated@@128) $generated@@132 $generated@@133) ($generated@@44 $generated@@129 $generated@@132 $generated@@133)))
 :weight 0
)) (forall (($generated@@134 T@U) ($generated@@135 T@U) ($generated@@136 T@U) ($generated@@137 T@U) ($generated@@138 T@U) ($generated@@139 T@U) ) (!  (or (= $generated@@137 $generated@@139) (= ($generated@@44 ($generated@@60 $generated@@135 $generated@@136 $generated@@137 $generated@@134) $generated@@138 $generated@@139) ($generated@@44 $generated@@135 $generated@@138 $generated@@139)))
 :weight 0
))) (forall (($generated@@140 T@U) ($generated@@141 T@U) ($generated@@142 T@U) ($generated@@143 T@U) ($generated@@144 T@U) ($generated@@145 T@U) ) (!  (or true (= ($generated@@44 ($generated@@60 $generated@@141 $generated@@142 $generated@@143 $generated@@140) $generated@@144 $generated@@145) ($generated@@44 $generated@@141 $generated@@144 $generated@@145)))
 :weight 0
)))) (forall (($generated@@146 T@U) ($generated@@147 T@U) ($generated@@148 T@U) ($generated@@149 Bool) ) (! (= (type ($generated@@45 $generated@@146 $generated@@147 $generated@@148 $generated@@149)) ($generated@@57 $generated@@47 $generated@@4))
 :pattern ( ($generated@@45 $generated@@146 $generated@@147 $generated@@148 $generated@@149))
))))
(assert (forall (($generated@@150 T@U) ($generated@@151 T@U) ($generated@@152 T@U) ($generated@@153 Bool) ($generated@@154 T@U) ($generated@@155 T@U) ) (! (let (($generated@@156 ($generated@@46 (type $generated@@155))))
 (=> (and (and (and (and (= (type $generated@@150) $generated@@47) (= (type $generated@@151) ($generated@@48 $generated@@47 $generated@@49))) (= (type $generated@@152) ($generated@@50 $generated@@4))) (= (type $generated@@154) $generated@@47)) (= (type $generated@@155) ($generated@@50 $generated@@156))) (= ($generated@@0 ($generated@@44 ($generated@@45 $generated@@150 $generated@@151 $generated@@152 $generated@@153) $generated@@154 $generated@@155))  (=> (and (not (= $generated@@154 $generated@@150)) ($generated@@0 ($generated@@51 ($generated@@52 $generated@@151 $generated@@154) $generated@@152))) $generated@@153))))
 :pattern ( ($generated@@44 ($generated@@45 $generated@@150 $generated@@151 $generated@@152 $generated@@153) $generated@@154 $generated@@155))
)))
(assert  (and (= ($generated@@1 $generated@@160) 11) (forall (($generated@@163 T@U) ) (! (= (type ($generated@@159 $generated@@163)) $generated@@160)
 :pattern ( ($generated@@159 $generated@@163))
))))
(assert  (=> (<= 0 $generated@@157) (forall (($generated@@164 T@U) ) (!  (=> (and (= (type $generated@@164) $generated@@160) (or $generated@@161 (not (= 0 $generated@@157)))) (= ($generated@@158 ($generated@@159 $generated@@164)) ($generated@@162 7)))
 :pattern ( ($generated@@158 ($generated@@159 $generated@@164)))
))))
(assert  (=> (<= 0 $generated@@157) (forall (($generated@@165 T@U) ) (!  (=> (and (= (type $generated@@165) $generated@@160) (or $generated@@161 (not (= 0 $generated@@157)))) (= ($generated@@158 ($generated@@159 $generated@@165)) ($generated@@162 7)))
 :weight 3
 :pattern ( ($generated@@158 ($generated@@159 $generated@@165)))
))))
(assert (forall (($generated@@166 Int) ) (! (= ($generated@@162 $generated@@166) $generated@@166)
 :pattern ( ($generated@@162 $generated@@166))
)))
(assert (forall (($generated@@168 T@U) ) (! (let (($generated@@169 (type $generated@@168)))
(= (type ($generated@@167 $generated@@168)) $generated@@169))
 :pattern ( ($generated@@167 $generated@@168))
)))
(assert (forall (($generated@@170 T@U) ) (! (= ($generated@@167 $generated@@170) $generated@@170)
 :pattern ( ($generated@@167 $generated@@170))
)))
(assert  (=> (<= 0 $generated@@157) (forall (($generated@@171 T@U) ) (!  (=> (and (= (type $generated@@171) $generated@@160) (or $generated@@161 (not (= 0 $generated@@157)))) true)
 :pattern ( ($generated@@158 $generated@@171))
))))
(assert  (and (and (= ($generated@@1 $generated@@174) 12) (forall (($generated@@175 T@U) ) (! (= (type ($generated@@172 $generated@@175)) $generated@@174)
 :pattern ( ($generated@@172 $generated@@175))
))) (forall (($generated@@176 T@T) ($generated@@177 T@U) ) (! (= (type ($generated@@173 $generated@@176 $generated@@177)) $generated@@176)
 :pattern ( ($generated@@173 $generated@@176 $generated@@177))
))))
(assert (forall (($generated@@178 T@U) ) (! (let (($generated@@179 (type $generated@@178)))
(= ($generated@@173 $generated@@179 ($generated@@172 $generated@@178)) $generated@@178))
 :pattern ( ($generated@@172 $generated@@178))
)))
(assert  (and (forall (($generated@@182 T@U) ) (! (= (type ($generated@@180 $generated@@182)) $generated@@160)
 :pattern ( ($generated@@180 $generated@@182))
)) (= (type $generated@@181) $generated@@160)))
(assert (forall (($generated@@183 T@U) ) (!  (=> (= (type $generated@@183) $generated@@160) (= ($generated@@158 $generated@@183) ($generated@@158 $generated@@181)))
 :pattern ( ($generated@@158 ($generated@@180 $generated@@183)))
)))
(assert (forall (($generated@@184 T@U) ) (!  (=> (= (type $generated@@184) $generated@@160) (= ($generated@@158 ($generated@@159 $generated@@184)) ($generated@@158 $generated@@184)))
 :pattern ( ($generated@@158 ($generated@@159 $generated@@184)))
)))
(assert (forall (($generated@@185 Int) ) (! (= ($generated@@172 ($generated@@8 ($generated@@162 $generated@@185))) ($generated@@167 ($generated@@172 ($generated@@8 $generated@@185))))
 :pattern ( ($generated@@172 ($generated@@8 ($generated@@162 $generated@@185))))
)))
(assert (forall (($generated@@186 T@U) ) (! (= ($generated@@172 ($generated@@167 $generated@@186)) ($generated@@167 ($generated@@172 $generated@@186)))
 :pattern ( ($generated@@172 ($generated@@167 $generated@@186)))
)))
(push 1)
(declare-fun ControlFlow (Int Int) Int)
(declare-fun $generated@@187 () T@U)
(declare-fun $generated@@188 () T@U)
(declare-fun $generated@@189 () T@U)
(declare-fun $generated@@190 () T@U)
(declare-fun $generated@@191 () T@U)
(declare-fun $generated@@192 () T@U)
(declare-fun $generated@@193 (T@U) Bool)
(declare-fun $generated@@194 () T@U)
(declare-fun $generated@@195 (T@U) Bool)
(declare-fun $generated@@196 () T@U)
(assert  (and (and (and (and (and (and (and (= (type $generated@@187) $generated@@160) (= (type $generated@@188) $generated@@160)) (= (type $generated@@189) ($generated@@57 $generated@@47 $generated@@4))) (= (type $generated@@190) $generated@@47)) (= (type $generated@@191) ($generated@@48 $generated@@47 $generated@@49))) (= (type $generated@@192) ($generated@@50 $generated@@4))) (= (type $generated@@194) ($generated@@48 $generated@@47 $generated@@49))) (= (type $generated@@196) $generated@@160)))
(set-option :timeout 0)
(set-option :rlimit 0)
(assert (not
 (=> (= (ControlFlow 0 0) 3) (let (($generated@@197  (=> (= ($generated@@180 $generated@@187) $generated@@187) (=> (and (= ($generated@@180 $generated@@188) $generated@@188) (= $generated@@189 ($generated@@45 $generated@@190 $generated@@191 $generated@@192 false))) (=> (and (and (and (and ($generated@@193 $generated@@194) ($generated@@195 $generated@@194)) (= $generated@@191 $generated@@194)) (and (= $generated@@187 ($generated@@159 $generated@@196)) (= $generated@@188 ($generated@@159 ($generated@@159 $generated@@196))))) (and (and (= ($generated@@180 $generated@@196) $generated@@196) $generated@@161) (and $generated@@161 (= (ControlFlow 0 2) (- 0 1))))) (= ($generated@@158 $generated@@188) ($generated@@162 7)))))))
(let (($generated@@198  (=> (and (and ($generated@@193 $generated@@191) ($generated@@195 $generated@@191)) (and (= 1 $generated@@157) (= (ControlFlow 0 3) 2))) $generated@@197)))
$generated@@198)))
))
(check-sat)
(pop 1)
; Valid
(get-info :rlimit)
(reset)
(set-option :rlimit 0)
; did a full reset
(reset)
(set-option :print-success false)
(set-info :smt-lib-version 2.6)
(set-option :auto_config false)
(set-option :type_check true)
(set-option :smt.case_split 3)
(set-option :smt.qi.eager_threshold 100)
(set-option :smt.delay_units true)
(set-option :smt.arith.solver 2)
(set-option :smt.mbqi false)
(set-option :model.compact false)
(set-option :model.v2 true)
(set-option :pp.bv_literals false)
; done setting options


(set-info :category "industrial")
(declare-sort |T@U| 0)
(declare-sort |T@T| 0)
(declare-fun real_pow (Real Real) Real)
(declare-fun UOrdering2 (|T@U| |T@U|) Bool)
(declare-fun UOrdering3 (|T@T| |T@U| |T@U|) Bool)
(declare-fun tickleBool (Bool) Bool)
(assert (and (tickleBool true) (tickleBool false)))
(declare-fun $generated (T@U) Int)
(declare-fun $generated@@0 (T@U) Bool)
(declare-fun $generated@@1 (T@T) Int)
(declare-fun $generated@@2 () T@T)
(declare-fun $generated@@3 () T@T)
(declare-fun $generated@@4 () T@T)
(declare-fun $generated@@5 () T@T)
(declare-fun $generated@@6 () T@T)
(declare-fun $generated@@7 () T@T)
(declare-fun $generated@@8 (Int) T@U)
(declare-fun type (T@U) T@T)
(declare-fun $generated@@9 (Real) T@U)
(declare-fun $generated@@10 (T@U) Real)
(declare-fun $generated@@11 (Bool) T@U)
(declare-fun $generated@@12 (RoundingMode) T@U)
(declare-fun $generated@@13 (T@U) RoundingMode)
(declare-fun $generated@@14 (String) T@U)
(declare-fun $generated@@15 (T@U) String)
(declare-fun $generated@@16 ((RegEx String)) T@U)
(declare-fun $generated@@17 (T@U) (RegEx String))
(declare-fun $generated@@44 (T@U T@U) Bool)
(declare-fun $generated@@45 (T@T T@T) T@T)
(declare-fun $generated@@46 () T@T)
(declare-fun $generated@@47 () T@T)
(declare-fun $generated@@48 (T@U T@U) T@U)
(declare-fun $generated@@49 (T@U T@U) T@U)
(declare-fun $generated@@50 () T@U)
(declare-fun $generated@@51 (T@T) T@T)
(declare-fun $generated@@52 (T@T) T@T)
(declare-fun $generated@@53 (T@U T@U T@U) T@U)
(declare-fun $generated@@54 (T@T) T@T)
(declare-fun $generated@@55 (T@T) T@T)
(declare-fun $generated@@56 (T@U T@U T@U) T@U)
(declare-fun $generated@@106 (T@U T@U T@U) T@U)
(declare-fun $generated@@107 (T@U T@U T@U Bool) T@U)
(declare-fun $generated@@108 (T@T T@T) T@T)
(declare-fun $generated@@109 (T@T) T@T)
(declare-fun $generated@@110 (T@T) T@T)
(declare-fun $generated@@111 (T@U T@U T@U T@U) T@U)
(assert  (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (= ($generated@@1 $generated@@2) 0) (= ($generated@@1 $generated@@3) 1)) (= ($generated@@1 $generated@@4) 2)) (= ($generated@@1 $generated@@5) 3)) (= ($generated@@1 $generated@@6) 4)) (= ($generated@@1 $generated@@7) 5)) (forall (($generated@@18 Int) ) (! (= ($generated ($generated@@8 $generated@@18)) $generated@@18)
 :pattern ( ($generated@@8 $generated@@18))
))) (forall (($generated@@19 T@U) ) (!  (=> (= (type $generated@@19) $generated@@2) (= ($generated@@8 ($generated $generated@@19)) $generated@@19))
 :pattern ( ($generated $generated@@19))
))) (forall (($generated@@20 Int) ) (! (= (type ($generated@@8 $generated@@20)) $generated@@2)
 :pattern ( ($generated@@8 $generated@@20))
))) (forall (($generated@@21 Real) ) (! (= ($generated@@10 ($generated@@9 $generated@@21)) $generated@@21)
 :pattern ( ($generated@@9 $generated@@21))
))) (forall (($generated@@22 T@U) ) (!  (=> (= (type $generated@@22) $generated@@3) (= ($generated@@9 ($generated@@10 $generated@@22)) $generated@@22))
 :pattern ( ($generated@@10 $generated@@22))
))) (forall (($generated@@23 Real) ) (! (= (type ($generated@@9 $generated@@23)) $generated@@3)
 :pattern ( ($generated@@9 $generated@@23))
))) (forall (($generated@@24 Bool) ) (! (= ($generated@@0 ($generated@@11 $generated@@24)) $generated@@24)
 :pattern ( ($generated@@11 $generated@@24))
))) (forall (($generated@@25 T@U) ) (!  (=> (= (type $generated@@25) $generated@@4) (= ($generated@@11 ($generated@@0 $generated@@25)) $generated@@25))
 :pattern ( ($generated@@0 $generated@@25))
))) (forall (($generated@@26 Bool) ) (! (= (type ($generated@@11 $generated@@26)) $generated@@4)
 :pattern ( ($generated@@11 $generated@@26))
))) (forall (($generated@@27 RoundingMode) ) (! (= ($generated@@13 ($generated@@12 $generated@@27)) $generated@@27)
 :pattern ( ($generated@@12 $generated@@27))
))) (forall (($generated@@28 T@U) ) (!  (=> (= (type $generated@@28) $generated@@5) (= ($generated@@12 ($generated@@13 $generated@@28)) $generated@@28))
 :pattern ( ($generated@@13 $generated@@28))
))) (forall (($generated@@29 RoundingMode) ) (! (= (type ($generated@@12 $generated@@29)) $generated@@5)
 :pattern ( ($generated@@12 $generated@@29))
))) (forall (($generated@@30 String) ) (! (= ($generated@@15 ($generated@@14 $generated@@30)) $generated@@30)
 :pattern ( ($generated@@14 $generated@@30))
))) (forall (($generated@@31 T@U) ) (!  (=> (= (type $generated@@31) $generated@@6) (= ($generated@@14 ($generated@@15 $generated@@31)) $generated@@31))
 :pattern ( ($generated@@15 $generated@@31))
))) (forall (($generated@@32 String) ) (! (= (type ($generated@@14 $generated@@32)) $generated@@6)
 :pattern ( ($generated@@14 $generated@@32))
))) (forall (($generated@@33 (RegEx String)) ) (! (= ($generated@@17 ($generated@@16 $generated@@33)) $generated@@33)
 :pattern ( ($generated@@16 $generated@@33))
))) (forall (($generated@@34 T@U) ) (!  (=> (= (type $generated@@34) $generated@@7) (= ($generated@@16 ($generated@@17 $generated@@34)) $generated@@34))
 :pattern ( ($generated@@17 $generated@@34))
))) (forall (($generated@@35 (RegEx String)) ) (! (= (type ($generated@@16 $generated@@35)) $generated@@7)
 :pattern ( ($generated@@16 $generated@@35))
))))
(assert (forall (($generated@@36 T@U) ) (! (UOrdering2 $generated@@36 $generated@@36)
 :no-pattern ($generated $generated@@36)
 :no-pattern ($generated@@0 $generated@@36)
)))
(assert (forall (($generated@@37 T@U) ($generated@@38 T@U) ($generated@@39 T@U) ) (! (let (($generated@@40 (type $generated@@37)))
 (=> (and (and (= (type $generated@@38) $generated@@40) (= (type $generated@@39) $generated@@40)) (and (UOrdering2 $generated@@37 $generated@@38) (UOrdering2 $generated@@38 $generated@@39))) (UOrdering2 $generated@@37 $generated@@39)))
 :pattern ( (UOrdering2 $generated@@37 $generated@@38) (UOrdering2 $generated@@38 $generated@@39))
)))
(assert (forall (($generated@@41 T@U) ($generated@@42 T@U) ) (! (let (($generated@@43 (type $generated@@41)))
 (=> (= (type $generated@@42) $generated@@43) (=> (and (UOrdering2 $generated@@41 $generated@@42) (UOrdering2 $generated@@42 $generated@@41)) (= $generated@@41 $generated@@42))))
 :pattern ( (UOrdering2 $generated@@41 $generated@@42) (UOrdering2 $generated@@42 $generated@@41))
)))
(assert  (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (forall (($generated@@57 T@T) ($generated@@58 T@T) ) (= ($generated@@1 ($generated@@45 $generated@@57 $generated@@58)) 6)) (forall (($generated@@59 T@T) ($generated@@60 T@T) ) (! (= ($generated@@51 ($generated@@45 $generated@@59 $generated@@60)) $generated@@59)
 :pattern ( ($generated@@45 $generated@@59 $generated@@60))
))) (forall (($generated@@61 T@T) ($generated@@62 T@T) ) (! (= ($generated@@52 ($generated@@45 $generated@@61 $generated@@62)) $generated@@62)
 :pattern ( ($generated@@45 $generated@@61 $generated@@62))
))) (forall (($generated@@63 T@U) ($generated@@64 T@U) ) (! (let (($generated@@65 ($generated@@52 (type $generated@@63))))
(= (type ($generated@@49 $generated@@63 $generated@@64)) $generated@@65))
 :pattern ( ($generated@@49 $generated@@63 $generated@@64))
))) (forall (($generated@@66 T@U) ($generated@@67 T@U) ($generated@@68 T@U) ) (! (let (($generated@@69 (type $generated@@68)))
(let (($generated@@70 (type $generated@@67)))
(= (type ($generated@@53 $generated@@66 $generated@@67 $generated@@68)) ($generated@@45 $generated@@70 $generated@@69))))
 :pattern ( ($generated@@53 $generated@@66 $generated@@67 $generated@@68))
))) (forall (($generated@@71 T@U) ($generated@@72 T@U) ($generated@@73 T@U) ) (! (let (($generated@@74 ($generated@@52 (type $generated@@71))))
 (=> (= (type $generated@@73) $generated@@74) (= ($generated@@49 ($generated@@53 $generated@@71 $generated@@72 $generated@@73) $generated@@72) $generated@@73)))
 :weight 0
))) (and (forall (($generated@@75 T@U) ($generated@@76 T@U) ($generated@@77 T@U) ($generated@@78 T@U) ) (!  (or (= $generated@@77 $generated@@78) (= ($generated@@49 ($generated@@53 $generated@@76 $generated@@77 $generated@@75) $generated@@78) ($generated@@49 $generated@@76 $generated@@78)))
 :weight 0
)) (forall (($generated@@79 T@U) ($generated@@80 T@U) ($generated@@81 T@U) ($generated@@82 T@U) ) (!  (or true (= ($generated@@49 ($generated@@53 $generated@@80 $generated@@81 $generated@@79) $generated@@82) ($generated@@49 $generated@@80 $generated@@82)))
 :weight 0
)))) (= ($generated@@1 $generated@@46) 7)) (forall (($generated@@83 T@T) ) (= ($generated@@1 ($generated@@54 $generated@@83)) 8))) (forall (($generated@@84 T@T) ) (! (= ($generated@@55 ($generated@@54 $generated@@84)) $generated@@84)
 :pattern ( ($generated@@54 $generated@@84))
))) (forall (($generated@@85 T@U) ($generated@@86 T@U) ) (! (let (($generated@@87 ($generated@@55 (type $generated@@86))))
(= (type ($generated@@48 $generated@@85 $generated@@86)) $generated@@87))
 :pattern ( ($generated@@48 $generated@@85 $generated@@86))
))) (= ($generated@@1 $generated@@47) 9)) (forall (($generated@@88 T@U) ($generated@@89 T@U) ($generated@@90 T@U) ) (! (= (type ($generated@@56 $generated@@88 $generated@@89 $generated@@90)) $generated@@47)
 :pattern ( ($generated@@56 $generated@@88 $generated@@89 $generated@@90))
))) (forall (($generated@@91 T@U) ($generated@@92 T@U) ($generated@@93 T@U) ) (! (let (($generated@@94 ($generated@@55 (type $generated@@92))))
 (=> (= (type $generated@@93) $generated@@94) (= ($generated@@48 ($generated@@56 $generated@@91 $generated@@92 $generated@@93) $generated@@92) $generated@@93)))
 :weight 0
))) (and (forall (($generated@@95 T@U) ($generated@@96 T@U) ($generated@@97 T@U) ($generated@@98 T@U) ) (!  (or (= $generated@@97 $generated@@98) (= ($generated@@48 ($generated@@56 $generated@@96 $generated@@97 $generated@@95) $generated@@98) ($generated@@48 $generated@@96 $generated@@98)))
 :weight 0
)) (forall (($generated@@99 T@U) ($generated@@100 T@U) ($generated@@101 T@U) ($generated@@102 T@U) ) (!  (or true (= ($generated@@48 ($generated@@56 $generated@@100 $generated@@101 $generated@@99) $generated@@102) ($generated@@48 $generated@@100 $generated@@102)))
 :weight 0
)))) (= (type $generated@@50) ($generated@@54 $generated@@4))))
(assert (forall (($generated@@103 T@U) ($generated@@104 T@U) ) (!  (=> (and (and (= (type $generated@@103) ($generated@@45 $generated@@46 $generated@@47)) (= (type $generated@@104) ($generated@@45 $generated@@46 $generated@@47))) ($generated@@44 $generated@@103 $generated@@104)) (forall (($generated@@105 T@U) ) (!  (=> (and (= (type $generated@@105) $generated@@46) ($generated@@0 ($generated@@48 ($generated@@49 $generated@@103 $generated@@105) $generated@@50))) ($generated@@0 ($generated@@48 ($generated@@49 $generated@@104 $generated@@105) $generated@@50)))
 :pattern ( ($generated@@48 ($generated@@49 $generated@@104 $generated@@105) $generated@@50))
)))
 :pattern ( ($generated@@44 $generated@@103 $generated@@104))
)))
(assert  (and (and (and (and (and (and (and (forall (($generated@@112 T@T) ($generated@@113 T@T) ) (= ($generated@@1 ($generated@@108 $generated@@112 $generated@@113)) 10)) (forall (($generated@@114 T@T) ($generated@@115 T@T) ) (! (= ($generated@@109 ($generated@@108 $generated@@114 $generated@@115)) $generated@@114)
 :pattern ( ($generated@@108 $generated@@114 $generated@@115))
))) (forall (($generated@@116 T@T) ($generated@@117 T@T) ) (! (= ($generated@@110 ($generated@@108 $generated@@116 $generated@@117)) $generated@@117)
 :pattern ( ($generated@@108 $generated@@116 $generated@@117))
))) (forall (($generated@@118 T@U) ($generated@@119 T@U) ($generated@@120 T@U) ) (! (let (($generated@@121 ($generated@@110 (type $generated@@118))))
(= (type ($generated@@106 $generated@@118 $generated@@119 $generated@@120)) $generated@@121))
 :pattern ( ($generated@@106 $generated@@118 $generated@@119 $generated@@120))
))) (forall (($generated@@122 T@U) ($generated@@123 T@U) ($generated@@124 T@U) ($generated@@125 T@U) ) (! (let (($generated@@126 (type $generated@@125)))
(let (($generated@@127 (type $generated@@123)))
(= (type ($generated@@111 $generated@@122 $generated@@123 $generated@@124 $generated@@125)) ($generated@@108 $generated@@127 $generated@@126))))
 :pattern ( ($generated@@111 $generated@@122 $generated@@123 $generated@@124 $generated@@125))
))) (forall (($generated@@128 T@U) ($generated@@129 T@U) ($generated@@130 T@U) ($generated@@131 T@U) ) (! (let (($generated@@132 ($generated@@110 (type $generated@@128))))
 (=> (= (type $generated@@131) $generated@@132) (= ($generated@@106 ($generated@@111 $generated@@128 $generated@@129 $generated@@130 $generated@@131) $generated@@129 $generated@@130) $generated@@131)))
 :weight 0
))) (and (and (forall (($generated@@133 T@U) ($generated@@134 T@U) ($generated@@135 T@U) ($generated@@136 T@U) ($generated@@137 T@U) ($generated@@138 T@U) ) (!  (or (= $generated@@135 $generated@@137) (= ($generated@@106 ($generated@@111 $generated@@134 $generated@@135 $generated@@136 $generated@@133) $generated@@137 $generated@@138) ($generated@@106 $generated@@134 $generated@@137 $generated@@138)))
 :weight 0
)) (forall (($generated@@139 T@U) ($generated@@140 T@U) ($generated@@141 T@U) ($generated@@142 T@U) ($generated@@143 T@U) ($generated@@144 T@U) ) (!  (or (= $generated@@142 $generated@@144) (= ($generated@@106 ($generated@@111 $generated@@140 $generated@@141 $generated@@142 $generated@@139) $generated@@143 $generated@@144) ($generated@@106 $generated@@140 $generated@@143 $generated@@144)))
 :weight 0
))) (forall (($generated@@145 T@U) ($generated@@146 T@U) ($generated@@147 T@U) ($generated@@148 T@U) ($generated@@149 T@U) ($generated@@150 T@U) ) (!  (or true (= ($generated@@106 ($generated@@111 $generated@@146 $generated@@147 $generated@@148 $generated@@145) $generated@@149 $generated@@150) ($generated@@106 $generated@@146 $generated@@149 $generated@@150)))
 :weight 0
)))) (forall (($generated@@151 T@U) ($generated@@152 T@U) ($generated@@153 T@U) ($generated@@154 Bool) ) (! (= (type ($generated@@107 $generated@@151 $generated@@152 $generated@@153 $generated@@154)) ($generated@@108 $generated@@46 $generated@@4))
 :pattern ( ($generated@@107 $generated@@151 $generated@@152 $generated@@153 $generated@@154))
))))
(assert (forall (($generated@@155 T@U) ($generated@@156 T@U) ($generated@@157 T@U) ($generated@@158 Bool) ($generated@@159 T@U) ($generated@@160 T@U) ) (! (let (($generated@@161 ($generated@@55 (type $generated@@160))))
 (=> (and (and (and (and (= (type $generated@@155) $generated@@46) (= (type $generated@@156) ($generated@@45 $generated@@46 $generated@@47))) (= (type $generated@@157) ($generated@@54 $generated@@4))) (= (type $generated@@159) $generated@@46)) (= (type $generated@@160) ($generated@@54 $generated@@161))) (= ($generated@@0 ($generated@@106 ($generated@@107 $generated@@155 $generated@@156 $generated@@157 $generated@@158) $generated@@159 $generated@@160))  (=> (and (not (= $generated@@159 $generated@@155)) ($generated@@0 ($generated@@48 ($generated@@49 $generated@@156 $generated@@159) $generated@@157))) $generated@@158))))
 :pattern ( ($generated@@106 ($generated@@107 $generated@@155 $generated@@156 $generated@@157 $generated@@158) $generated@@159 $generated@@160))
)))
(assert (forall (($generated@@162 T@U) ($generated@@163 T@U) ($generated@@164 T@U) ) (!  (=> (and (and (and (and (= (type $generated@@162) ($generated@@45 $generated@@46 $generated@@47)) (= (type $generated@@163) ($generated@@45 $generated@@46 $generated@@47))) (= (type $generated@@164) ($generated@@45 $generated@@46 $generated@@47))) (not (= $generated@@162 $generated@@164))) (and ($generated@@44 $generated@@162 $generated@@163) ($generated@@44 $generated@@163 $generated@@164))) ($generated@@44 $generated@@162 $generated@@164))
 :pattern ( ($generated@@44 $generated@@162 $generated@@163) ($generated@@44 $generated@@163 $generated@@164))
)))
(push 1)
(declare-fun ControlFlow (Int Int) Int)
(set-option :timeout 0)
(set-option :rlimit 0)
(assert (not
 (=> (= (ControlFlow 0 0) 2) true)
))
(check-sat)
(pop 1)
; Valid
(get-info :rlimit)
(reset)
(set-option :rlimit 0)
; did a full reset
(reset)
(set-option :print-success false)
(set-info :smt-lib-version 2.6)
(set-option :auto_config false)
(set-option :type_check true)
(set-option :smt.case_split 3)
(set-option :smt.qi.eager_threshold 100)
(set-option :smt.delay_units true)
(set-option :smt.arith.solver 2)
(set-option :smt.mbqi false)
(set-option :model.compact false)
(set-option :model.v2 true)
(set-option :pp.bv_literals false)
; done setting options


(set-info :category "industrial")
(declare-sort |T@U| 0)
(declare-sort |T@T| 0)
(declare-fun real_pow (Real Real) Real)
(declare-fun UOrdering2 (|T@U| |T@U|) Bool)
(declare-fun UOrdering3 (|T@T| |T@U| |T@U|) Bool)
(declare-fun tickleBool (Bool) Bool)
(assert (and (tickleBool true) (tickleBool false)))
(declare-fun $generated (T@U) Int)
(declare-fun $generated@@0 (T@U) Bool)
(declare-fun $generated@@1 (T@T) Int)
(declare-fun $generated@@2 () T@T)
(declare-fun $generated@@3 () T@T)
(declare-fun $generated@@4 () T@T)
(declare-fun $generated@@5 () T@T)
(declare-fun $generated@@6 () T@T)
(declare-fun $generated@@7 () T@T)
(declare-fun $generated@@8 (Int) T@U)
(declare-fun type (T@U) T@T)
(declare-fun $generated@@9 (Real) T@U)
(declare-fun $generated@@10 (T@U) Real)
(declare-fun $generated@@11 (Bool) T@U)
(declare-fun $generated@@12 (RoundingMode) T@U)
(declare-fun $generated@@13 (T@U) RoundingMode)
(declare-fun $generated@@14 (String) T@U)
(declare-fun $generated@@15 (T@U) String)
(declare-fun $generated@@16 ((RegEx String)) T@U)
(declare-fun $generated@@17 (T@U) (RegEx String))
(declare-fun $generated@@44 (T@U T@U T@U) T@U)
(declare-fun $generated@@45 (T@U T@U T@U Bool) T@U)
(declare-fun $generated@@46 (T@T) T@T)
(declare-fun $generated@@47 () T@T)
(declare-fun $generated@@48 (T@T T@T) T@T)
(declare-fun $generated@@49 () T@T)
(declare-fun $generated@@50 (T@T) T@T)
(declare-fun $generated@@51 (T@U T@U) T@U)
(declare-fun $generated@@52 (T@U T@U) T@U)
(declare-fun $generated@@53 (T@T) T@T)
(declare-fun $generated@@54 (T@T) T@T)
(declare-fun $generated@@55 (T@U T@U T@U) T@U)
(declare-fun $generated@@56 (T@U T@U T@U) T@U)
(declare-fun $generated@@57 (T@T T@T) T@T)
(declare-fun $generated@@58 (T@T) T@T)
(declare-fun $generated@@59 (T@T) T@T)
(declare-fun $generated@@60 (T@U T@U T@U T@U) T@U)
(declare-fun $generated@@157 (Int) Int)
(declare-fun $generated@@159 (T@U) T@U)
(declare-fun $generated@@163 (T@U) T@U)
(declare-fun $generated@@164 (T@T T@U) T@U)
(declare-fun $generated@@165 () T@T)
(assert  (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (= ($generated@@1 $generated@@2) 0) (= ($generated@@1 $generated@@3) 1)) (= ($generated@@1 $generated@@4) 2)) (= ($generated@@1 $generated@@5) 3)) (= ($generated@@1 $generated@@6) 4)) (= ($generated@@1 $generated@@7) 5)) (forall (($generated@@18 Int) ) (! (= ($generated ($generated@@8 $generated@@18)) $generated@@18)
 :pattern ( ($generated@@8 $generated@@18))
))) (forall (($generated@@19 T@U) ) (!  (=> (= (type $generated@@19) $generated@@2) (= ($generated@@8 ($generated $generated@@19)) $generated@@19))
 :pattern ( ($generated $generated@@19))
))) (forall (($generated@@20 Int) ) (! (= (type ($generated@@8 $generated@@20)) $generated@@2)
 :pattern ( ($generated@@8 $generated@@20))
))) (forall (($generated@@21 Real) ) (! (= ($generated@@10 ($generated@@9 $generated@@21)) $generated@@21)
 :pattern ( ($generated@@9 $generated@@21))
))) (forall (($generated@@22 T@U) ) (!  (=> (= (type $generated@@22) $generated@@3) (= ($generated@@9 ($generated@@10 $generated@@22)) $generated@@22))
 :pattern ( ($generated@@10 $generated@@22))
))) (forall (($generated@@23 Real) ) (! (= (type ($generated@@9 $generated@@23)) $generated@@3)
 :pattern ( ($generated@@9 $generated@@23))
))) (forall (($generated@@24 Bool) ) (! (= ($generated@@0 ($generated@@11 $generated@@24)) $generated@@24)
 :pattern ( ($generated@@11 $generated@@24))
))) (forall (($generated@@25 T@U) ) (!  (=> (= (type $generated@@25) $generated@@4) (= ($generated@@11 ($generated@@0 $generated@@25)) $generated@@25))
 :pattern ( ($generated@@0 $generated@@25))
))) (forall (($generated@@26 Bool) ) (! (= (type ($generated@@11 $generated@@26)) $generated@@4)
 :pattern ( ($generated@@11 $generated@@26))
))) (forall (($generated@@27 RoundingMode) ) (! (= ($generated@@13 ($generated@@12 $generated@@27)) $generated@@27)
 :pattern ( ($generated@@12 $generated@@27))
))) (forall (($generated@@28 T@U) ) (!  (=> (= (type $generated@@28) $generated@@5) (= ($generated@@12 ($generated@@13 $generated@@28)) $generated@@28))
 :pattern ( ($generated@@13 $generated@@28))
))) (forall (($generated@@29 RoundingMode) ) (! (= (type ($generated@@12 $generated@@29)) $generated@@5)
 :pattern ( ($generated@@12 $generated@@29))
))) (forall (($generated@@30 String) ) (! (= ($generated@@15 ($generated@@14 $generated@@30)) $generated@@30)
 :pattern ( ($generated@@14 $generated@@30))
))) (forall (($generated@@31 T@U) ) (!  (=> (= (type $generated@@31) $generated@@6) (= ($generated@@14 ($generated@@15 $generated@@31)) $generated@@31))
 :pattern ( ($generated@@15 $generated@@31))
))) (forall (($generated@@32 String) ) (! (= (type ($generated@@14 $generated@@32)) $generated@@6)
 :pattern ( ($generated@@14 $generated@@32))
))) (forall (($generated@@33 (RegEx String)) ) (! (= ($generated@@17 ($generated@@16 $generated@@33)) $generated@@33)
 :pattern ( ($generated@@16 $generated@@33))
))) (forall (($generated@@34 T@U) ) (!  (=> (= (type $generated@@34) $generated@@7) (= ($generated@@16 ($generated@@17 $generated@@34)) $generated@@34))
 :pattern ( ($generated@@17 $generated@@34))
))) (forall (($generated@@35 (RegEx String)) ) (! (= (type ($generated@@16 $generated@@35)) $generated@@7)
 :pattern ( ($generated@@16 $generated@@35))
))))
(assert (forall (($generated@@36 T@U) ) (! (UOrdering2 $generated@@36 $generated@@36)
 :no-pattern ($generated $generated@@36)
 :no-pattern ($generated@@0 $generated@@36)
)))
(assert (forall (($generated@@37 T@U) ($generated@@38 T@U) ($generated@@39 T@U) ) (! (let (($generated@@40 (type $generated@@37)))
 (=> (and (and (= (type $generated@@38) $generated@@40) (= (type $generated@@39) $generated@@40)) (and (UOrdering2 $generated@@37 $generated@@38) (UOrdering2 $generated@@38 $generated@@39))) (UOrdering2 $generated@@37 $generated@@39)))
 :pattern ( (UOrdering2 $generated@@37 $generated@@38) (UOrdering2 $generated@@38 $generated@@39))
)))
(assert (forall (($generated@@41 T@U) ($generated@@42 T@U) ) (! (let (($generated@@43 (type $generated@@41)))
 (=> (= (type $generated@@42) $generated@@43) (=> (and (UOrdering2 $generated@@41 $generated@@42) (UOrdering2 $generated@@42 $generated@@41)) (= $generated@@41 $generated@@42))))
 :pattern ( (UOrdering2 $generated@@41 $generated@@42) (UOrdering2 $generated@@42 $generated@@41))
)))
(assert  (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (forall (($generated@@61 T@T) ($generated@@62 T@T) ) (= ($generated@@1 ($generated@@48 $generated@@61 $generated@@62)) 6)) (forall (($generated@@63 T@T) ($generated@@64 T@T) ) (! (= ($generated@@53 ($generated@@48 $generated@@63 $generated@@64)) $generated@@63)
 :pattern ( ($generated@@48 $generated@@63 $generated@@64))
))) (forall (($generated@@65 T@T) ($generated@@66 T@T) ) (! (= ($generated@@54 ($generated@@48 $generated@@65 $generated@@66)) $generated@@66)
 :pattern ( ($generated@@48 $generated@@65 $generated@@66))
))) (forall (($generated@@67 T@U) ($generated@@68 T@U) ) (! (let (($generated@@69 ($generated@@54 (type $generated@@67))))
(= (type ($generated@@52 $generated@@67 $generated@@68)) $generated@@69))
 :pattern ( ($generated@@52 $generated@@67 $generated@@68))
))) (forall (($generated@@70 T@U) ($generated@@71 T@U) ($generated@@72 T@U) ) (! (let (($generated@@73 (type $generated@@72)))
(let (($generated@@74 (type $generated@@71)))
(= (type ($generated@@55 $generated@@70 $generated@@71 $generated@@72)) ($generated@@48 $generated@@74 $generated@@73))))
 :pattern ( ($generated@@55 $generated@@70 $generated@@71 $generated@@72))
))) (forall (($generated@@75 T@U) ($generated@@76 T@U) ($generated@@77 T@U) ) (! (let (($generated@@78 ($generated@@54 (type $generated@@75))))
 (=> (= (type $generated@@77) $generated@@78) (= ($generated@@52 ($generated@@55 $generated@@75 $generated@@76 $generated@@77) $generated@@76) $generated@@77)))
 :weight 0
))) (and (forall (($generated@@79 T@U) ($generated@@80 T@U) ($generated@@81 T@U) ($generated@@82 T@U) ) (!  (or (= $generated@@81 $generated@@82) (= ($generated@@52 ($generated@@55 $generated@@80 $generated@@81 $generated@@79) $generated@@82) ($generated@@52 $generated@@80 $generated@@82)))
 :weight 0
)) (forall (($generated@@83 T@U) ($generated@@84 T@U) ($generated@@85 T@U) ($generated@@86 T@U) ) (!  (or true (= ($generated@@52 ($generated@@55 $generated@@84 $generated@@85 $generated@@83) $generated@@86) ($generated@@52 $generated@@84 $generated@@86)))
 :weight 0
)))) (forall (($generated@@87 T@T) ) (= ($generated@@1 ($generated@@50 $generated@@87)) 7))) (forall (($generated@@88 T@T) ) (! (= ($generated@@46 ($generated@@50 $generated@@88)) $generated@@88)
 :pattern ( ($generated@@50 $generated@@88))
))) (forall (($generated@@89 T@U) ($generated@@90 T@U) ) (! (let (($generated@@91 ($generated@@46 (type $generated@@90))))
(= (type ($generated@@51 $generated@@89 $generated@@90)) $generated@@91))
 :pattern ( ($generated@@51 $generated@@89 $generated@@90))
))) (= ($generated@@1 $generated@@49) 8)) (forall (($generated@@92 T@U) ($generated@@93 T@U) ($generated@@94 T@U) ) (! (= (type ($generated@@56 $generated@@92 $generated@@93 $generated@@94)) $generated@@49)
 :pattern ( ($generated@@56 $generated@@92 $generated@@93 $generated@@94))
))) (forall (($generated@@95 T@U) ($generated@@96 T@U) ($generated@@97 T@U) ) (! (let (($generated@@98 ($generated@@46 (type $generated@@96))))
 (=> (= (type $generated@@97) $generated@@98) (= ($generated@@51 ($generated@@56 $generated@@95 $generated@@96 $generated@@97) $generated@@96) $generated@@97)))
 :weight 0
))) (and (forall (($generated@@99 T@U) ($generated@@100 T@U) ($generated@@101 T@U) ($generated@@102 T@U) ) (!  (or (= $generated@@101 $generated@@102) (= ($generated@@51 ($generated@@56 $generated@@100 $generated@@101 $generated@@99) $generated@@102) ($generated@@51 $generated@@100 $generated@@102)))
 :weight 0
)) (forall (($generated@@103 T@U) ($generated@@104 T@U) ($generated@@105 T@U) ($generated@@106 T@U) ) (!  (or true (= ($generated@@51 ($generated@@56 $generated@@104 $generated@@105 $generated@@103) $generated@@106) ($generated@@51 $generated@@104 $generated@@106)))
 :weight 0
)))) (= ($generated@@1 $generated@@47) 9)) (forall (($generated@@107 T@T) ($generated@@108 T@T) ) (= ($generated@@1 ($generated@@57 $generated@@107 $generated@@108)) 10))) (forall (($generated@@109 T@T) ($generated@@110 T@T) ) (! (= ($generated@@58 ($generated@@57 $generated@@109 $generated@@110)) $generated@@109)
 :pattern ( ($generated@@57 $generated@@109 $generated@@110))
))) (forall (($generated@@111 T@T) ($generated@@112 T@T) ) (! (= ($generated@@59 ($generated@@57 $generated@@111 $generated@@112)) $generated@@112)
 :pattern ( ($generated@@57 $generated@@111 $generated@@112))
))) (forall (($generated@@113 T@U) ($generated@@114 T@U) ($generated@@115 T@U) ) (! (let (($generated@@116 ($generated@@59 (type $generated@@113))))
(= (type ($generated@@44 $generated@@113 $generated@@114 $generated@@115)) $generated@@116))
 :pattern ( ($generated@@44 $generated@@113 $generated@@114 $generated@@115))
))) (forall (($generated@@117 T@U) ($generated@@118 T@U) ($generated@@119 T@U) ($generated@@120 T@U) ) (! (let (($generated@@121 (type $generated@@120)))
(let (($generated@@122 (type $generated@@118)))
(= (type ($generated@@60 $generated@@117 $generated@@118 $generated@@119 $generated@@120)) ($generated@@57 $generated@@122 $generated@@121))))
 :pattern ( ($generated@@60 $generated@@117 $generated@@118 $generated@@119 $generated@@120))
))) (forall (($generated@@123 T@U) ($generated@@124 T@U) ($generated@@125 T@U) ($generated@@126 T@U) ) (! (let (($generated@@127 ($generated@@59 (type $generated@@123))))
 (=> (= (type $generated@@126) $generated@@127) (= ($generated@@44 ($generated@@60 $generated@@123 $generated@@124 $generated@@125 $generated@@126) $generated@@124 $generated@@125) $generated@@126)))
 :weight 0
))) (and (and (forall (($generated@@128 T@U) ($generated@@129 T@U) ($generated@@130 T@U) ($generated@@131 T@U) ($generated@@132 T@U) ($generated@@133 T@U) ) (!  (or (= $generated@@130 $generated@@132) (= ($generated@@44 ($generated@@60 $generated@@129 $generated@@130 $generated@@131 $generated@@128) $generated@@132 $generated@@133) ($generated@@44 $generated@@129 $generated@@132 $generated@@133)))
 :weight 0
)) (forall (($generated@@134 T@U) ($generated@@135 T@U) ($generated@@136 T@U) ($generated@@137 T@U) ($generated@@138 T@U) ($generated@@139 T@U) ) (!  (or (= $generated@@137 $generated@@139) (= ($generated@@44 ($generated@@60 $generated@@135 $generated@@136 $generated@@137 $generated@@134) $generated@@138 $generated@@139) ($generated@@44 $generated@@135 $generated@@138 $generated@@139)))
 :weight 0
))) (forall (($generated@@140 T@U) ($generated@@141 T@U) ($generated@@142 T@U) ($generated@@143 T@U) ($generated@@144 T@U) ($generated@@145 T@U) ) (!  (or true (= ($generated@@44 ($generated@@60 $generated@@141 $generated@@142 $generated@@143 $generated@@140) $generated@@144 $generated@@145) ($generated@@44 $generated@@141 $generated@@144 $generated@@145)))
 :weight 0
)))) (forall (($generated@@146 T@U) ($generated@@147 T@U) ($generated@@148 T@U) ($generated@@149 Bool) ) (! (= (type ($generated@@45 $generated@@146 $generated@@147 $generated@@148 $generated@@149)) ($generated@@57 $generated@@47 $generated@@4))
 :pattern ( ($generated@@45 $generated@@146 $generated@@147 $generated@@148 $generated@@149))
))))
(assert (forall (($generated@@150 T@U) ($generated@@151 T@U) ($generated@@152 T@U) ($generated@@153 Bool) ($generated@@154 T@U) ($generated@@155 T@U) ) (! (let (($generated@@156 ($generated@@46 (type $generated@@155))))
 (=> (and (and (and (and (= (type $generated@@150) $generated@@47) (= (type $generated@@151) ($generated@@48 $generated@@47 $generated@@49))) (= (type $generated@@152) ($generated@@50 $generated@@4))) (= (type $generated@@154) $generated@@47)) (= (type $generated@@155) ($generated@@50 $generated@@156))) (= ($generated@@0 ($generated@@44 ($generated@@45 $generated@@150 $generated@@151 $generated@@152 $generated@@153) $generated@@154 $generated@@155))  (=> (and (not (= $generated@@154 $generated@@150)) ($generated@@0 ($generated@@51 ($generated@@52 $generated@@151 $generated@@154) $generated@@152))) $generated@@153))))
 :pattern ( ($generated@@44 ($generated@@45 $generated@@150 $generated@@151 $generated@@152 $generated@@153) $generated@@154 $generated@@155))
)))
(assert (forall (($generated@@158 Int) ) (! (= ($generated@@157 $generated@@158) $generated@@158)
 :pattern ( ($generated@@157 $generated@@158))
)))
(assert (forall (($generated@@160 T@U) ) (! (let (($generated@@161 (type $generated@@160)))
(= (type ($generated@@159 $generated@@160)) $generated@@161))
 :pattern ( ($generated@@159 $generated@@160))
)))
(assert (forall (($generated@@162 T@U) ) (! (= ($generated@@159 $generated@@162) $generated@@162)
 :pattern ( ($generated@@159 $generated@@162))
)))
(assert  (and (and (= ($generated@@1 $generated@@165) 11) (forall (($generated@@166 T@U) ) (! (= (type ($generated@@163 $generated@@166)) $generated@@165)
 :pattern ( ($generated@@163 $generated@@166))
))) (forall (($generated@@167 T@T) ($generated@@168 T@U) ) (! (= (type ($generated@@164 $generated@@167 $generated@@168)) $generated@@167)
 :pattern ( ($generated@@164 $generated@@167 $generated@@168))
))))
(assert (forall (($generated@@169 T@U) ) (! (let (($generated@@170 (type $generated@@169)))
(= ($generated@@164 $generated@@170 ($generated@@163 $generated@@169)) $generated@@169))
 :pattern ( ($generated@@163 $generated@@169))
)))
(assert (forall (($generated@@171 Int) ) (! (= ($generated@@163 ($generated@@8 ($generated@@157 $generated@@171))) ($generated@@159 ($generated@@163 ($generated@@8 $generated@@171))))
 :pattern ( ($generated@@163 ($generated@@8 ($generated@@157 $generated@@171))))
)))
(assert (forall (($generated@@172 T@U) ) (! (= ($generated@@163 ($generated@@159 $generated@@172)) ($generated@@159 ($generated@@163 $generated@@172)))
 :pattern ( ($generated@@163 ($generated@@159 $generated@@172)))
)))
(push 1)
(declare-fun ControlFlow (Int Int) Int)
(declare-fun $generated@@173 () Int)
(declare-fun $generated@@174 () Int)
(declare-fun $generated@@175 (T@U) T@U)
(declare-fun $generated@@176 () T@U)
(declare-fun $generated@@177 () T@U)
(declare-fun $generated@@178 () T@U)
(declare-fun $generated@@179 () T@U)
(declare-fun $generated@@180 () T@U)
(declare-fun $generated@@181 () T@U)
(declare-fun $generated@@182 (T@U) Bool)
(declare-fun $generated@@183 (T@U) Bool)
(declare-fun $generated@@184 () Int)
(declare-fun $generated@@185 () Int)
(declare-fun $generated@@186 () T@T)
(assert  (and (and (and (and (and (and (and (= ($generated@@1 $generated@@186) 12) (forall (($generated@@187 T@U) ) (! (= (type ($generated@@175 $generated@@187)) $generated@@186)
 :pattern ( ($generated@@175 $generated@@187))
))) (= (type $generated@@176) $generated@@186)) (= (type $generated@@177) $generated@@186)) (= (type $generated@@178) ($generated@@57 $generated@@47 $generated@@4))) (= (type $generated@@179) $generated@@47)) (= (type $generated@@180) ($generated@@48 $generated@@47 $generated@@49))) (= (type $generated@@181) ($generated@@50 $generated@@4))))
(set-option :timeout 0)
(set-option :rlimit 0)
(assert (not
 (=> (= (ControlFlow 0 0) 7) (let (($generated@@188  (and (=> (= (ControlFlow 0 2) (- 0 3)) ($generated@@0 ($generated@@159 ($generated@@11 true)))) (=> ($generated@@0 ($generated@@159 ($generated@@11 true))) (=> (and (<= ($generated@@157 0) $generated@@173) (= (ControlFlow 0 2) (- 0 1))) (<= ($generated@@157 0) $generated@@173))))))
(let (($generated@@189  (=> (and (< $generated@@174 ($generated@@157 0)) (= (ControlFlow 0 5) 2)) $generated@@188)))
(let (($generated@@190  (=> (and (<= ($generated@@157 0) $generated@@174) (= (ControlFlow 0 4) 2)) $generated@@188)))
(let (($generated@@191  (=> (= ($generated@@175 $generated@@176) $generated@@176) (=> (and (= ($generated@@175 $generated@@177) $generated@@177) (= $generated@@178 ($generated@@45 $generated@@179 $generated@@180 $generated@@181 false))) (and (=> (= (ControlFlow 0 6) 4) $generated@@190) (=> (= (ControlFlow 0 6) 5) $generated@@189))))))
(let (($generated@@192  (=> (and ($generated@@182 $generated@@180) ($generated@@183 $generated@@180)) (=> (and (and (<= ($generated@@157 0) $generated@@184) true) (and (= 1 $generated@@185) (= (ControlFlow 0 7) 6))) $generated@@191))))
$generated@@192))))))
))
(check-sat)
(pop 1)
; Valid
(get-info :rlimit)
